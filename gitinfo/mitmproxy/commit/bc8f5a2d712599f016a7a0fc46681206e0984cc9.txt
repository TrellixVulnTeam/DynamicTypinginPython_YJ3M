commit bc8f5a2d712599f016a7a0fc46681206e0984cc9
Author: Sachin Kelkar <sachinkel19@gmail.com>
Date:   Wed Jan 18 23:08:51 2017 +0530

    web: Add ~marked filter

diff --git a/mitmproxy/tools/web/app.py b/mitmproxy/tools/web/app.py
index 05477f2d..1f3467cc 100644
--- a/mitmproxy/tools/web/app.py
+++ b/mitmproxy/tools/web/app.py
@@ -33,6 +33,7 @@ def flow_to_json(flow: mitmproxy.flow.Flow) -> dict:
         "server_conn": flow.server_conn.get_state(),
         "type": flow.type,
         "modified": flow.modified(),
+        "marked": flow.marked,
     }
     # .alpn_proto_negotiated is bytes, we need to decode that.
     for conn in "client_conn", "server_conn":
diff --git a/web/src/js/components/FlowView.jsx b/web/src/js/components/FlowView.jsx
index 72cffdfe..d03d681a 100644
--- a/web/src/js/components/FlowView.jsx
+++ b/web/src/js/components/FlowView.jsx
@@ -9,7 +9,7 @@ import Prompt from './Prompt'
 
 import { selectTab } from '../ducks/ui/flow'
 
-export default class FlowView extends Component {
+class FlowView extends Component {
 
     static allTabs = { Request, Response, Error, Details }
 
diff --git a/web/src/js/filt/filt.js b/web/src/js/filt/filt.js
index 6a0bbab7..e241d63f 100644
Binary files a/web/src/js/filt/filt.js and b/web/src/js/filt/filt.js differ
diff --git a/web/src/js/filt/filt.peg b/web/src/js/filt/filt.peg
index ccaaa072..352b1337 100644
--- a/web/src/js/filt/filt.peg
+++ b/web/src/js/filt/filt.peg
@@ -117,6 +117,10 @@ function method(regex){
     methodFilter.desc = "method matches " + regex;
     return methodFilter;
 }
+function markedFilter(flow){
+    return flow.marked;
+}
+markedFilter.desc = "is marked";
 function noResponseFilter(flow){
     return flow.request && !flow.response;
 }
@@ -172,24 +176,24 @@ cc "control character" = [|&!()~"]
 __ "optional whitespace" = ws*
 
 OrExpr
-  = first:AndExpr __ "|" __ second:OrExpr 
+  = first:AndExpr __ "|" __ second:OrExpr
     { return or(first, second); }
   / AndExpr
 
 AndExpr
-  = first:NotExpr __ "&" __ second:AndExpr 
+  = first:NotExpr __ "&" __ second:AndExpr
     { return and(first, second); }
-  / first:NotExpr ws+ second:AndExpr 
+  / first:NotExpr ws+ second:AndExpr
     { return and(first, second); }
   / NotExpr
 
 NotExpr
-  = "!" __ expr:NotExpr 
+  = "!" __ expr:NotExpr
     { return not(expr); }
   / BindingExpr
 
 BindingExpr
-  = "(" __ expr:OrExpr __ ")" 
+  = "(" __ expr:OrExpr __ ")"
     { return binding(expr); }
   / Expr
 
@@ -203,6 +207,7 @@ NullaryExpr
   / "~e" { return errorFilter; }
   / "~q" { return noResponseFilter; }
   / "~s" { return responseFilter; }
+  / "~marked" { return markedFilter; }
 
 
 BooleanLiteral
