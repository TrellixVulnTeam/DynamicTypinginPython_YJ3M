commit 9387f0b28203779aa4d18368ebf0f92eee93b6e1
Author: Maximilian Hils <git@maximilianhils.com>
Date:   Fri Feb 28 19:48:48 2020 +0100

    minor code style improvements, sync sans-io changes

diff --git a/mitmproxy/net/server_spec.py b/mitmproxy/net/server_spec.py
index efbf1012..c877e6e1 100644
--- a/mitmproxy/net/server_spec.py
+++ b/mitmproxy/net/server_spec.py
@@ -1,13 +1,17 @@
 """
 Parse scheme, host and port from a string.
 """
-import collections
 import re
+import typing
 from typing import Tuple
 
 from mitmproxy.net import check
 
-ServerSpec = collections.namedtuple("ServerSpec", ["scheme", "address"])
+
+class ServerSpec(typing.NamedTuple):
+    scheme: str
+    address: typing.Tuple[str, int]
+
 
 server_spec_re = re.compile(
     r"""
diff --git a/mitmproxy/proxy/protocol/http.py b/mitmproxy/proxy/protocol/http.py
index 4c20617b..37e1669e 100644
--- a/mitmproxy/proxy/protocol/http.py
+++ b/mitmproxy/proxy/protocol/http.py
@@ -1,3 +1,5 @@
+import textwrap
+
 import h2.exceptions
 import time
 import enum
@@ -142,13 +144,13 @@ def validate_request_form(mode, request):
     allowed_request_forms = MODE_REQUEST_FORMS[mode]
     if request.first_line_format not in allowed_request_forms:
         if mode == HTTPMode.transparent:
-            err_message = (
+            err_message = textwrap.dedent((
                 """
                 Mitmproxy received an {} request even though it is not running
                 in regular mode. This usually indicates a misconfiguration,
                 please see the mitmproxy mode documentation for details.
                 """
-            ).format("HTTP CONNECT" if request.first_line_format == "authority" else "absolute-form")
+            )).strip().format("HTTP CONNECT" if request.first_line_format == "authority" else "absolute-form")
         else:
             err_message = "Invalid HTTP request form (expected: %s, got: %s)" % (
                 " or ".join(allowed_request_forms), request.first_line_format
