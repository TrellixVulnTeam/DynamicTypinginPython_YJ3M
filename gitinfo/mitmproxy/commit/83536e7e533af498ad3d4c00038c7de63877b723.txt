commit 83536e7e533af498ad3d4c00038c7de63877b723
Author: Maximilian Hils <git@maximilianhils.com>
Date:   Sun Jul 27 02:10:39 2014 +0200

    minor fixes

diff --git a/libmproxy/flow.py b/libmproxy/flow.py
index 5062c202..8ea51ce6 100644
--- a/libmproxy/flow.py
+++ b/libmproxy/flow.py
@@ -11,7 +11,7 @@ import requests
 from netlib import odict, wsgi, tcp
 import netlib.http
 from . import controller, protocol, tnetstring, filt, script, version, app
-from .protocol import http
+from .protocol import http, handle
 from .proxy.connection import ServerConnection
 from .proxy.primitives import ProxyError
 
@@ -765,7 +765,7 @@ class FlowReader:
                     v = ".".join(str(i) for i in data["version"])
                     raise FlowReadError("Incompatible serialized data version: %s"%v)
                 off = self.fo.tell()
-                yield protocol.handle.protocols[data["conntype"]]["flow"]._from_state(data)
+                yield handle.protocols[data["conntype"]]["flow"]._from_state(data)
         except ValueError, v:
             # Error is due to EOF
             if self.fo.tell() == off and self.fo.read() == '':
diff --git a/libmproxy/protocol/http.py b/libmproxy/protocol/http.py
index 8f9d5f5d..f671816f 100644
--- a/libmproxy/protocol/http.py
+++ b/libmproxy/protocol/http.py
@@ -751,7 +751,7 @@ class HTTPFlow(Flow):
     """
 
     def __init__(self, client_conn, server_conn, change_server=None):
-        Flow.__init__(self, "http", client_conn, server_conn)
+        super(HTTPFlow, self).__init__("http", client_conn, server_conn)
         self.request = None
         """@type: HTTPRequest"""
         self.response = None
diff --git a/libmproxy/protocol/primitives.py b/libmproxy/protocol/primitives.py
index 5743bb6a..f3ecdab7 100644
--- a/libmproxy/protocol/primitives.py
+++ b/libmproxy/protocol/primitives.py
@@ -139,7 +139,7 @@ class Flow(stateobject.SimpleStateObject, BackreferenceMixin):
 class ProtocolHandler(object):
     def __init__(self, c):
         self.c = c
-        """@type: libmproxy.proxy.ConnectionHandler"""
+        """@type: libmproxy.proxy.server.ConnectionHandler"""
 
     def handle_messages(self):
         """
