commit 0e998e9b52cabad3221cce4825bcdbb6fd6ad71c
Author: gorogoroumaru <force.minpiku@gmail.com>
Date:   Sun Jul 5 18:20:39 2020 +0900

    Fix typespec_to_str funcion to process typing.Optional[int] (#4066)
    
    * Fix typespec_to_str funcion to process typing.Optional[int]
    
    * Add test
    
    * Add test
    
    Co-authored-by: gorogoroumaru <zokutyou2@gmail.com>

diff --git a/mitmproxy/utils/typecheck.py b/mitmproxy/utils/typecheck.py
index 8ec68fa0..af9f6c63 100644
--- a/mitmproxy/utils/typecheck.py
+++ b/mitmproxy/utils/typecheck.py
@@ -81,6 +81,8 @@ def typespec_to_str(typespec: typing.Any) -> str:
         t = 'optional str'
     elif typespec == typing.Sequence[str]:
         t = 'sequence of str'
+    elif typespec == typing.Optional[int]:
+        t = 'optional int'
     else:
         raise NotImplementedError
     return t
diff --git a/test/mitmproxy/utils/test_typecheck.py b/test/mitmproxy/utils/test_typecheck.py
index 85713e14..86a6f744 100644
--- a/test/mitmproxy/utils/test_typecheck.py
+++ b/test/mitmproxy/utils/test_typecheck.py
@@ -72,6 +72,7 @@ def test_typesec_to_str():
     assert(typecheck.typespec_to_str(str)) == "str"
     assert(typecheck.typespec_to_str(typing.Sequence[str])) == "sequence of str"
     assert(typecheck.typespec_to_str(typing.Optional[str])) == "optional str"
+    assert(typecheck.typespec_to_str(typing.Optional[int])) == "optional int"
     with pytest.raises(NotImplementedError):
         typecheck.typespec_to_str(dict)
 
