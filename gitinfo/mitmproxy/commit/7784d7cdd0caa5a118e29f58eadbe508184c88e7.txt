commit 7784d7cdd0caa5a118e29f58eadbe508184c88e7
Author: Matthew Shao <me@matshao.com>
Date:   Wed Jun 28 22:08:30 2017 +0800

    [web] Add tests for reducors of options and modal.

diff --git a/web/src/js/__tests__/ducks/optionsSpec.js b/web/src/js/__tests__/ducks/optionsSpec.js
new file mode 100644
index 00000000..62019715
--- /dev/null
+++ b/web/src/js/__tests__/ducks/optionsSpec.js
@@ -0,0 +1,25 @@
+jest.mock('../../utils')
+
+import reduceOptions, * as OptionsActions from '../../ducks/options'
+
+describe('option reducer', () => {
+    it('should return initial state', () => {
+        expect(reduceOptions(undefined, {})).toEqual({})
+    })
+
+    it('should handle receive action', () => {
+        let action = { type: OptionsActions.RECEIVE, data: 'foo' }
+        expect(reduceOptions(undefined, action)).toEqual('foo')
+    })
+
+    it('should handle update action', () => {
+        let action = {type: OptionsActions.UPDATE, data: {id: 1} }
+        expect(reduceOptions(undefined, action)).toEqual({id: 1})
+    })
+})
+
+describe('option actions', () => {
+    it('should be possible to update option', () => {
+        expect(reduceOptions(undefined, OptionsActions.update())).toEqual({})
+    })
+})
diff --git a/web/src/js/__tests__/ducks/ui/modalSpec.js b/web/src/js/__tests__/ducks/ui/modalSpec.js
new file mode 100644
index 00000000..30c39760
--- /dev/null
+++ b/web/src/js/__tests__/ducks/ui/modalSpec.js
@@ -0,0 +1,25 @@
+import reduceModal, * as ModalActions from '../../../ducks/ui/modal'
+
+describe('modal reducer', () => {
+    let state = undefined
+
+    it('should return the initial state', () => {
+        expect(reduceModal(undefined, {})).toEqual(
+            { activeModal: undefined }
+        )
+    })
+
+    it('should handle setActiveModal action', () => {
+        state = reduceModal(undefined, ModalActions.setActiveModal('foo'))
+        expect(state).toEqual(
+            { activeModal: 'foo' }
+        )
+    })
+
+    it('should handle hideModal action', () => {
+        state = reduceModal(state, ModalActions.hideModal())
+        expect(state).toEqual(
+            { activeModal: undefined }
+        )
+    })
+})
