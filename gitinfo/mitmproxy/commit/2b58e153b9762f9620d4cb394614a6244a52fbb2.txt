commit 2b58e153b9762f9620d4cb394614a6244a52fbb2
Author: Shadab Zafar <dufferzafar0@gmail.com>
Date:   Wed Jul 20 14:44:20 2016 +0530

    Fix hotkey kerfuffle
    
    `z` (instead of `C`) to "clear flow list or eventlog"
    `C` to "export flow to clipboard"
    `E` to "export flow to file"

diff --git a/mitmproxy/console/flowlist.py b/mitmproxy/console/flowlist.py
index a33002a9..1af7d00f 100644
--- a/mitmproxy/console/flowlist.py
+++ b/mitmproxy/console/flowlist.py
@@ -14,7 +14,7 @@ def _mkhelp():
         ("A", "accept all intercepted flows"),
         ("a", "accept this intercepted flow"),
         ("b", "save request/response body"),
-        ("C", "clear flow list or eventlog"),
+        ("C", "export flow to clipboard"),
         ("d", "delete flow"),
         ("D", "duplicate flow"),
         ("e", "toggle eventlog"),
@@ -24,14 +24,14 @@ def _mkhelp():
         ("m", "toggle flow mark"),
         ("M", "toggle marked flow view"),
         ("n", "create a new request"),
-        ("p", "export flow to file"),
-        ("P", "export flow to clipboard"),
+        ("E", "export flow to file"),
         ("r", "replay request"),
         ("U", "unmark all marked flows"),
         ("V", "revert changes to request"),
         ("w", "save flows "),
         ("W", "stream flows to file"),
         ("X", "kill and delete flow, even if it's mid-intercept"),
+        ("z", "clear flow list or eventlog"),
         ("tab", "tab between eventlog and flow list"),
         ("enter", "view flow"),
         ("|", "run script on this flow"),
@@ -53,7 +53,7 @@ class LogBufferBox(urwid.ListBox):
 
     def keypress(self, size, key):
         key = common.shortcuts(key)
-        if key == "C":
+        if key == "z":
             self.master.clear_events()
             key = None
         elif key == "G":
@@ -264,7 +264,7 @@ class ConnectionItem(urwid.WidgetWrap):
                 callback = self.master.run_script_once,
                 args = (self.flow,)
             )
-        elif key == "p":
+        elif key == "E":
             signals.status_prompt_onekey.send(
                 self,
                 prompt = "Export to file",
@@ -272,7 +272,7 @@ class ConnectionItem(urwid.WidgetWrap):
                 callback = common.export_to_clip_or_file,
                 args = (None, self.flow, common.ask_save_path)
             )
-        elif key == "P":
+        elif key == "C":
             signals.status_prompt_onekey.send(
                 self,
                 prompt = "Export to clipboard",
@@ -363,7 +363,7 @@ class FlowListBox(urwid.ListBox):
         if key == "A":
             self.master.accept_all()
             signals.flowlist_change.send(self)
-        elif key == "C":
+        elif key == "z":
             self.master.clear_flows()
         elif key == "e":
             self.master.toggle_eventlog()
diff --git a/mitmproxy/console/flowview.py b/mitmproxy/console/flowview.py
index 8fffaf07..938c8e86 100644
--- a/mitmproxy/console/flowview.py
+++ b/mitmproxy/console/flowview.py
@@ -33,6 +33,7 @@ def _mkhelp():
         ("A", "accept all intercepted flows"),
         ("a", "accept this intercepted flow"),
         ("b", "save request/response body"),
+        ("C", "export flow to clipboard"),
         ("D", "duplicate flow"),
         ("d", "delete flow"),
         ("e", "edit request/response"),
@@ -75,8 +76,7 @@ def _mkhelp():
          [("text", ": XML")]
          ),
         ("M", "change default body display mode"),
-        ("p", "export flow to file"),
-        ("P", "export flow to clipboard"),
+        ("E", "export flow to file"),
         ("r", "replay request"),
         ("V", "revert changes to request"),
         ("v", "view body in external viewer"),
@@ -596,7 +596,7 @@ class FlowView(tabs.Tabs):
                 args = (self.flow,)
             )
 
-        if not conn and key in set(list("befgmxvzpP")):
+        if not conn and key in set(list("befgmxvzEC")):
             signals.status_message.send(
                 message = "Tab to the request or response",
                 expire = 1
@@ -659,7 +659,7 @@ class FlowView(tabs.Tabs):
                     callback = self.change_this_display_mode
                 )
                 key = None
-            elif key == "p":
+            elif key == "E":
                 if self.tab_offset == TAB_REQ:
                     scope = "q"
                 else:
@@ -671,7 +671,7 @@ class FlowView(tabs.Tabs):
                     callback = common.export_to_clip_or_file,
                     args = (scope, self.flow, common.ask_save_path)
                 )
-            elif key == "P":
+            elif key == "C":
                 if self.tab_offset == TAB_REQ:
                     scope = "q"
                 else:
