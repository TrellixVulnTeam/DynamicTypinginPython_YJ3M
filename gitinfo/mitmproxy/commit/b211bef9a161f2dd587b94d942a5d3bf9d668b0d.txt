commit b211bef9a161f2dd587b94d942a5d3bf9d668b0d
Author: Maximilian Hils <git@maximilianhils.com>
Date:   Mon Feb 15 16:34:38 2016 +0100

    fix tests

diff --git a/mitmproxy/libmproxy/utils.py b/mitmproxy/libmproxy/utils.py
index a697a637..4bdd036e 100644
--- a/mitmproxy/libmproxy/utils.py
+++ b/mitmproxy/libmproxy/utils.py
@@ -4,7 +4,8 @@ import datetime
 import re
 import time
 import json
-
+import importlib
+import inspect
 
 def timestamp():
     """
@@ -75,8 +76,8 @@ def pretty_duration(secs):
 class Data:
 
     def __init__(self, name):
-        m = __import__(name)
-        dirname, _ = os.path.split(m.__file__)
+        m = importlib.import_module(name)
+        dirname = os.path.dirname(inspect.getsourcefile(m))
         self.dirname = os.path.abspath(dirname)
 
     def path(self, path):
diff --git a/netlib/netlib/tutils.py b/netlib/netlib/tutils.py
index 14b4ef06..f6ce8e0a 100644
--- a/netlib/netlib/tutils.py
+++ b/netlib/netlib/tutils.py
@@ -90,6 +90,9 @@ class RaisesContext(object):
 
 
 test_data = utils.Data(__name__)
+# FIXME: Temporary workaround during repo merge.
+import os
+test_data.dirname = os.path.join(test_data.dirname,"..","..","test","netlib")
 
 
 def treq(**kwargs):
diff --git a/netlib/netlib/utils.py b/netlib/netlib/utils.py
index d2fc7195..f7bb5c4b 100644
--- a/netlib/netlib/utils.py
+++ b/netlib/netlib/utils.py
@@ -4,6 +4,8 @@ import re
 import codecs
 import unicodedata
 from abc import ABCMeta, abstractmethod
+import importlib
+import inspect
 
 import six
 
@@ -186,8 +188,8 @@ def pretty_size(size):
 class Data(object):
 
     def __init__(self, name):
-        m = __import__(name)
-        dirname, _ = os.path.split(m.__file__)
+        m = importlib.import_module(name)
+        dirname = os.path.dirname(inspect.getsourcefile(m))
         self.dirname = os.path.abspath(dirname)
 
     def path(self, path):
@@ -197,7 +199,7 @@ class Data(object):
 
             This function will raise ValueError if the path does not exist.
         """
-        fullpath = os.path.join(self.dirname, '../test/', path)
+        fullpath = os.path.join(self.dirname, path)
         if not os.path.exists(fullpath):
             raise ValueError("dataPath: %s does not exist." % fullpath)
         return fullpath
