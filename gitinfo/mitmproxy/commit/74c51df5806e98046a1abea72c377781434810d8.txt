commit 74c51df5806e98046a1abea72c377781434810d8
Author: Aldo Cortesi <aldo@nullcube.com>
Date:   Sun Mar 25 10:10:48 2012 +1300

    Re-enable simple multipart form parsing and preview.

diff --git a/libmproxy/console/contentview.py b/libmproxy/console/contentview.py
index c6e43a27..0d770b52 100644
--- a/libmproxy/console/contentview.py
+++ b/libmproxy/console/contentview.py
@@ -1,3 +1,4 @@
+import re
 import urwid
 import common
 from .. import utils, encoding, flow
@@ -18,18 +19,21 @@ VIEW_CONTENT_PRETTY_TYPE_AUTO = 0
 VIEW_CONTENT_PRETTY_TYPE_JSON = 1
 VIEW_CONTENT_PRETTY_TYPE_XML = 2
 VIEW_CONTENT_PRETTY_TYPE_URLENCODED = 3
+VIEW_CONTENT_PRETTY_TYPE_MULTIPART = 4
 
 CONTENT_PRETTY_NAMES = {
     VIEW_CONTENT_PRETTY_TYPE_JSON: "JSON",
     VIEW_CONTENT_PRETTY_TYPE_XML: "XML",
-    VIEW_CONTENT_PRETTY_TYPE_URLENCODED: "URL-encoded"
+    VIEW_CONTENT_PRETTY_TYPE_URLENCODED: "URL-encoded",
+    VIEW_CONTENT_PRETTY_TYPE_MULTIPART: "Multipart Form"
 }
 
 CONTENT_TYPES_MAP = {
     "text/html": VIEW_CONTENT_PRETTY_TYPE_XML,
     "application/json": VIEW_CONTENT_PRETTY_TYPE_JSON,
     "text/xml": VIEW_CONTENT_PRETTY_TYPE_XML,
-    "multipart/form-data": VIEW_CONTENT_PRETTY_TYPE_URLENCODED
+    "multipart/form-data": VIEW_CONTENT_PRETTY_TYPE_MULTIPART,
+    "application/x-www-form-urlencoded": VIEW_CONTENT_PRETTY_TYPE_URLENCODED,
 }
 
 def trailer(clen, txt):
@@ -95,30 +99,38 @@ def view_json(hdrs, content):
         return "JSON", txt
 
 
-# FIXME
-def view_formdata(content, boundary):
-    rx = re.compile(r'\bname="([^"]+)"')
-    keys = []
-    vals = []
-
-    for i in content.split("--" + boundary):
-        parts = i.splitlines()
-        if len(parts) > 1 and parts[0][0:2] != "--":
-            match = rx.search(parts[1])
-            if match:
-                keys.append(match.group(1) + ":")
-                vals.append(utils.cleanBin(
-                    "\n".join(parts[3+parts[2:].index(""):])
-                ))
-    r = [
-        urwid.Text(("highlight", "Form data:\n")),
-    ]
-    r.extend(common.format_keyvals(
-        zip(keys, vals),
-        key = "header",
-        val = "text"
-    ))
-    return r
+def view_multipart(hdrs, content):
+    v = hdrs.get("content-type")
+    if v:
+        v = utils.parse_content_type(v[0])
+        if not v:
+            return
+        boundary = v[2].get("boundary")
+        if not boundary:
+            return
+
+        rx = re.compile(r'\bname="([^"]+)"')
+        keys = []
+        vals = []
+
+        for i in content.split("--" + boundary):
+            parts = i.splitlines()
+            if len(parts) > 1 and parts[0][0:2] != "--":
+                match = rx.search(parts[1])
+                if match:
+                    keys.append(match.group(1) + ":")
+                    vals.append(utils.cleanBin(
+                        "\n".join(parts[3+parts[2:].index(""):])
+                    ))
+        r = [
+            urwid.Text(("highlight", "Form data:\n")),
+        ]
+        r.extend(common.format_keyvals(
+            zip(keys, vals),
+            key = "header",
+            val = "text"
+        ))
+        return "Multipart form", r
 
 
 def view_urlencoded(hdrs, content):
@@ -135,7 +147,8 @@ def view_urlencoded(hdrs, content):
 PRETTY_FUNCTION_MAP = {
     VIEW_CONTENT_PRETTY_TYPE_XML: view_xmlish,
     VIEW_CONTENT_PRETTY_TYPE_JSON: view_json,
-    VIEW_CONTENT_PRETTY_TYPE_URLENCODED: view_urlencoded
+    VIEW_CONTENT_PRETTY_TYPE_URLENCODED: view_urlencoded,
+    VIEW_CONTENT_PRETTY_TYPE_MULTIPART: view_multipart,
 }
 
 def get_view_func(viewmode, pretty_type, hdrs, content):
diff --git a/test/test_console_contentview.py b/test/test_console_contentview.py
index 070094ff..cbb19678 100644
--- a/test/test_console_contentview.py
+++ b/test/test_console_contentview.py
@@ -78,6 +78,32 @@ class uContentView(libpry.AutoTree):
     def test_view_raw(self):
         assert cv.view_hex([], "foo")
 
+    def test_view_multipart(self):
+        v = """
+--AaB03x
+Content-Disposition: form-data; name="submit-name"
+
+Larry
+--AaB03x
+        """.strip()
+        h = flow.ODictCaseless(
+            [("Content-Type", "multipart/form-data; boundary=AaB03x")]
+        )
+        assert cv.view_multipart(h, v)
+
+        h = flow.ODictCaseless()
+        assert not cv.view_multipart(h, v)
+
+        h = flow.ODictCaseless(
+            [("Content-Type", "multipart/form-data")]
+        )
+        assert not cv.view_multipart(h, v)
+
+        h = flow.ODictCaseless(
+            [("Content-Type", "unparseable")]
+        )
+        assert not cv.view_multipart(h, v)
+
     def test_get_content_view(self):
         r = cv.get_content_view(
                 cv.VIEW_CONTENT_RAW,
