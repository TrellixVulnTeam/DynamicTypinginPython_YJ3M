commit 7fc544bc7ff8fd610ba9db92c0d3b59a0b040b5b
Author: Maximilian Hils <git@maximilianhils.com>
Date:   Wed Feb 5 21:34:14 2014 +0100

    adjust netlib.wsgi to reflect changes in mitmproxys flow format

diff --git a/netlib/tcp.py b/netlib/tcp.py
index 94ea8806..34e47999 100644
--- a/netlib/tcp.py
+++ b/netlib/tcp.py
@@ -178,7 +178,7 @@ class Address(object):
     This class wraps an IPv4/IPv6 tuple to provide named attributes and ipv6 information.
     """
     def __init__(self, address, use_ipv6=False):
-        self.address = address
+        self.address = tuple(address)
         self.use_ipv6 = use_ipv6
 
     @classmethod
diff --git a/netlib/wsgi.py b/netlib/wsgi.py
index 647cb899..b576bdff 100644
--- a/netlib/wsgi.py
+++ b/netlib/wsgi.py
@@ -1,17 +1,22 @@
 import cStringIO, urllib, time, traceback
-import odict
+import odict, tcp
 
 
 class ClientConn:
     def __init__(self, address):
-        self.address = address
+        self.address = tcp.Address.wrap(address)
+
+
+class Flow:
+    def __init__(self, client_conn):
+        self.client_conn = client_conn
 
 
 class Request:
     def __init__(self, client_conn, scheme, method, path, headers, content):
         self.scheme, self.method, self.path = scheme, method, path
         self.headers, self.content = headers, content
-        self.client_conn = client_conn
+        self.flow = Flow(client_conn)
 
 
 def date_time_string():
@@ -60,8 +65,8 @@ class WSGIAdaptor:
             'SERVER_PROTOCOL':      "HTTP/1.1",
         }
         environ.update(extra)
-        if request.client_conn.address:
-            environ["REMOTE_ADDR"], environ["REMOTE_PORT"] = request.client_conn.address
+        if request.flow.client_conn.address:
+            environ["REMOTE_ADDR"], environ["REMOTE_PORT"] = request.flow.client_conn.address()
 
         for key, value in request.headers.items():
             key = 'HTTP_' + key.upper().replace('-', '_')
diff --git a/test/test_tcp.py b/test/test_tcp.py
index 49e20635..525961d5 100644
--- a/test/test_tcp.py
+++ b/test/test_tcp.py
@@ -215,6 +215,7 @@ class TestSNI(test.ServerTestBase):
         c = tcp.TCPClient(("127.0.0.1", self.port))
         c.connect()
         c.convert_to_ssl(sni="foo.com")
+        assert c.sni == "foo.com"
         assert c.rfile.readline() == "foo.com"
 
 
