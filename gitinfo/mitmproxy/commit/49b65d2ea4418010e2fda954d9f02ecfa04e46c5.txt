commit 49b65d2ea4418010e2fda954d9f02ecfa04e46c5
Author: Aldo Cortesi <aldo@nullcube.com>
Date:   Sat Jul 16 10:33:50 2016 +1200

    Add a helper to translate a log level to a tier
    
    This is in utils for now - we'll find a better home down the track.

diff --git a/mitmproxy/console/master.py b/mitmproxy/console/master.py
index 9633e494..f59729ea 100644
--- a/mitmproxy/console/master.py
+++ b/mitmproxy/console/master.py
@@ -22,6 +22,7 @@ from mitmproxy import controller
 from mitmproxy import exceptions
 from mitmproxy import flow
 from mitmproxy import script
+from mitmproxy import utils
 from mitmproxy.console import flowlist
 from mitmproxy.console import flowview
 from mitmproxy.console import grideditor
@@ -271,8 +272,7 @@ class ConsoleMaster(flow.FlowMaster):
         return super(ConsoleMaster, self).load_script(command, use_reloader)
 
     def sig_add_log(self, sender, e, level):
-        needed = dict(error=0, warn=1, info=2, debug=3).get(level, 2)
-        if self.options.verbosity < needed:
+        if self.options.verbosity < utils.log_tier(level):
             return
 
         if level == "error":
diff --git a/mitmproxy/dump.py b/mitmproxy/dump.py
index 70c9bb53..b95d2627 100644
--- a/mitmproxy/dump.py
+++ b/mitmproxy/dump.py
@@ -15,6 +15,7 @@ from mitmproxy import exceptions
 from mitmproxy import filt
 from mitmproxy import flow
 from mitmproxy import builtins
+from mitmproxy import utils
 from netlib import human
 from netlib import tcp
 from netlib import strutils
@@ -114,8 +115,7 @@ class DumpMaster(flow.FlowMaster):
             raise DumpError(str(e))
 
     def add_log(self, e, level="info"):
-        needed = dict(error=0, warn=1, info=2, debug=3).get(level, 2)
-        if self.options.verbosity >= needed:
+        if self.options.verbosity >= utils.log_tier(level):
             self.echo(
                 e,
                 fg="red" if level == "error" else None,
diff --git a/mitmproxy/utils.py b/mitmproxy/utils.py
index 15785c72..1c75dd83 100644
--- a/mitmproxy/utils.py
+++ b/mitmproxy/utils.py
@@ -36,3 +36,7 @@ class LRUCache:
                 d = self.cacheList.pop()
                 self.cache.pop(d)
             return ret
+
+
+def log_tier(level):
+    return dict(error=0, warn=1, info=2, debug=3).get(level)
