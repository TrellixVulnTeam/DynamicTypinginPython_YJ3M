commit 83fdd82a520767afa0f3a89dedd3c02e12cf1015
Author: Aldo Cortesi <aldo@nullcube.com>
Date:   Tue Nov 1 17:38:45 2016 +1300

    addons anticom, anticache: expand tests, new truss

diff --git a/test/mitmproxy/addons/test_anticache.py b/test/mitmproxy/addons/test_anticache.py
index 702e8755..851be945 100644
--- a/test/mitmproxy/addons/test_anticache.py
+++ b/test/mitmproxy/addons/test_anticache.py
@@ -2,24 +2,22 @@ from mitmproxy.test import tflow
 
 from .. import mastertest
 from mitmproxy.addons import anticache
-from mitmproxy import master
-from mitmproxy import options
-from mitmproxy import proxy
+from mitmproxy.test import taddons
 
 
 class TestAntiCache(mastertest.MasterTest):
     def test_simple(self):
-        o = options.Options(anticache = True)
-        m = master.Master(o, proxy.DummyServer())
         sa = anticache.AntiCache()
-        m.addons.add(sa)
+        with taddons.context() as tctx:
+            f = tflow.tflow(resp=True)
+            f.request.headers["if-modified-since"] = "test"
+            f.request.headers["if-none-match"] = "test"
 
-        f = tflow.tflow(resp=True)
-        m.request(f)
+            sa.request(f)
+            assert "if-modified-since" in f.request.headers
+            assert "if-none-match" in f.request.headers
 
-        f = tflow.tflow(resp=True)
-        f.request.headers["if-modified-since"] = "test"
-        f.request.headers["if-none-match"] = "test"
-        m.request(f)
-        assert "if-modified-since" not in f.request.headers
-        assert "if-none-match" not in f.request.headers
+            tctx.configure(sa, anticache = True)
+            sa.request(f)
+            assert "if-modified-since" not in f.request.headers
+            assert "if-none-match" not in f.request.headers
diff --git a/test/mitmproxy/addons/test_anticomp.py b/test/mitmproxy/addons/test_anticomp.py
index 761c467a..eaf8fe53 100644
--- a/test/mitmproxy/addons/test_anticomp.py
+++ b/test/mitmproxy/addons/test_anticomp.py
@@ -2,23 +2,19 @@ from mitmproxy.test import tflow
 
 from .. import mastertest
 from mitmproxy.addons import anticomp
-from mitmproxy import master
-from mitmproxy import options
-from mitmproxy import proxy
+from mitmproxy.test import taddons
 
 
 class TestAntiComp(mastertest.MasterTest):
     def test_simple(self):
-        o = options.Options(anticomp = True)
-        m = master.Master(o, proxy.DummyServer())
         sa = anticomp.AntiComp()
-        m.addons.add(sa)
+        with taddons.context() as tctx:
+            f = tflow.tflow(resp=True)
+            sa.request(f)
 
-        f = tflow.tflow(resp=True)
-        m.request(f)
+            tctx.configure(sa, anticomp=True)
+            f = tflow.tflow(resp=True)
 
-        f = tflow.tflow(resp=True)
-
-        f.request.headers["Accept-Encoding"] = "foobar"
-        m.request(f)
-        assert f.request.headers["Accept-Encoding"] == "identity"
+            f.request.headers["Accept-Encoding"] = "foobar"
+            sa.request(f)
+            assert f.request.headers["Accept-Encoding"] == "identity"
diff --git a/test/mitmproxy/addons/test_defaults.py b/test/mitmproxy/addons/test_defaults.py
new file mode 100644
index 00000000..e20466f1
--- /dev/null
+++ b/test/mitmproxy/addons/test_defaults.py
@@ -0,0 +1,5 @@
+from mitmproxy import addons
+
+
+def test_defaults():
+    assert addons.default_addons()
