commit 9b814ca067a81eed3c46bdffb7d3131b6ec26708
Author: Aldo Cortesi <aldo@nullcube.com>
Date:   Sat Sep 10 10:21:52 2016 +1200

    options.replay_ignore* -> options.server_replay_ignore*

diff --git a/mitmproxy/builtins/serverplayback.py b/mitmproxy/builtins/serverplayback.py
index b13547f1..29fc95ef 100644
--- a/mitmproxy/builtins/serverplayback.py
+++ b/mitmproxy/builtins/serverplayback.py
@@ -36,12 +36,12 @@ class ServerPlayback(object):
         queriesArray = urllib.parse.parse_qsl(query, keep_blank_values=True)
 
         key = [str(r.port), str(r.scheme), str(r.method), str(path)]
-        if not self.options.replay_ignore_content:
+        if not self.options.server_replay_ignore_content:
             form_contents = r.urlencoded_form or r.multipart_form
-            if self.options.replay_ignore_payload_params and form_contents:
+            if self.options.server_replay_ignore_payload_params and form_contents:
                 params = [
                     strutils.always_bytes(i)
-                    for i in self.options.replay_ignore_payload_params
+                    for i in self.options.server_replay_ignore_payload_params
                 ]
                 for p in form_contents.items(multi=True):
                     if p[0] not in params:
@@ -49,11 +49,11 @@ class ServerPlayback(object):
             else:
                 key.append(str(r.raw_content))
 
-        if not self.options.replay_ignore_host:
+        if not self.options.server_replay_ignore_host:
             key.append(r.host)
 
         filtered = []
-        ignore_params = self.options.replay_ignore_params or []
+        ignore_params = self.options.server_replay_ignore_params or []
         for p in queriesArray:
             if p[0] not in ignore_params:
                 filtered.append(p)
@@ -97,16 +97,6 @@ class ServerPlayback(object):
                     raise exceptions.OptionsError(str(e))
                 self.load(flows)
 
-        # FIXME: These options have to be renamed to something more sensible -
-        # prefixed with serverplayback_ where appropriate, and playback_ where
-        # they're shared with client playback.
-        #
-        # options.server_replay_nopop,
-        # options.replay_ignore_params,
-        # options.replay_ignore_content,
-        # options.replay_ignore_payload_params,
-        # options.replay_ignore_host
-
     def tick(self):
         if self.stop and not self.final_flow.live:
             ctx.master.shutdown()
diff --git a/mitmproxy/cmdline.py b/mitmproxy/cmdline.py
index 3419e9b6..fe55ad5a 100644
--- a/mitmproxy/cmdline.py
+++ b/mitmproxy/cmdline.py
@@ -234,10 +234,10 @@ def get_common_options(args):
         outfile=args.outfile,
         verbosity=args.verbose,
         server_replay_nopop=args.server_replay_nopop,
-        replay_ignore_content=args.replay_ignore_content,
-        replay_ignore_params=args.replay_ignore_params,
-        replay_ignore_payload_params=args.replay_ignore_payload_params,
-        replay_ignore_host=args.replay_ignore_host,
+        server_replay_ignore_content=args.server_replay_ignore_content,
+        server_replay_ignore_params=args.server_replay_ignore_params,
+        server_replay_ignore_payload_params=args.server_replay_ignore_payload_params,
+        server_replay_ignore_host=args.server_replay_ignore_host,
 
         auth_nonanonymous = args.auth_nonanonymous,
         auth_singleuser = args.auth_singleuser,
@@ -621,14 +621,14 @@ def server_replay(parser):
     payload = group.add_mutually_exclusive_group()
     payload.add_argument(
         "--replay-ignore-content",
-        action="store_true", dest="replay_ignore_content", default=False,
+        action="store_true", dest="server_replay_ignore_content", default=False,
         help="""
             Ignore request's content while searching for a saved flow to replay
         """
     )
     payload.add_argument(
         "--replay-ignore-payload-param",
-        action="append", dest="replay_ignore_payload_params", type=str,
+        action="append", dest="server_replay_ignore_payload_params", type=str,
         help="""
             Request's payload parameters (application/x-www-form-urlencoded or multipart/form-data) to
             be ignored while searching for a saved flow to replay.
@@ -638,7 +638,7 @@ def server_replay(parser):
 
     group.add_argument(
         "--replay-ignore-param",
-        action="append", dest="replay_ignore_params", type=str,
+        action="append", dest="server_replay_ignore_params", type=str,
         help="""
             Request's parameters to be ignored while searching for a saved flow
             to replay. Can be passed multiple times.
@@ -647,7 +647,7 @@ def server_replay(parser):
     group.add_argument(
         "--replay-ignore-host",
         action="store_true",
-        dest="replay_ignore_host",
+        dest="server_replay_ignore_host",
         default=False,
         help="Ignore request's destination host while searching for a saved flow to replay")
 
diff --git a/mitmproxy/console/flowlist.py b/mitmproxy/console/flowlist.py
index fd3a4124..8551f13c 100644
--- a/mitmproxy/console/flowlist.py
+++ b/mitmproxy/console/flowlist.py
@@ -150,20 +150,20 @@ class ConnectionItem(urwid.WidgetWrap):
                 [i.copy() for i in self.master.state.view],
                 self.master.options.replay_kill_extra, self.master.options.server_replay_use_headers,
                 False, self.master.options.server_replay_nopop,
-                self.master.options.replay_ignore_params,
-                self.master.options.replay_ignore_content,
-                self.master.options.replay_ignore_payload_params,
-                self.master.options.replay_ignore_host
+                self.master.options.server_replay_ignore_params,
+                self.master.options.server_replay_ignore_content,
+                self.master.options.server_replay_ignore_payload_params,
+                self.master.options.server_replay_ignore_host
             )
         elif k == "t":
             self.master.start_server_playback(
                 [self.flow.copy()],
                 self.master.options.replay_kill_extra, self.master.options.server_replay_use_headers,
                 False, self.master.options.server_replay_nopop,
-                self.master.options.replay_ignore_params,
-                self.master.options.replay_ignore_content,
-                self.master.options.replay_ignore_payload_params,
-                self.master.options.replay_ignore_host
+                self.master.options.server_replay_ignore_params,
+                self.master.options.server_replay_ignore_content,
+                self.master.options.server_replay_ignore_payload_params,
+                self.master.options.server_replay_ignore_host
             )
         else:
             signals.status_prompt_path.send(
diff --git a/mitmproxy/dump.py b/mitmproxy/dump.py
index 49215b3a..febe5b64 100644
--- a/mitmproxy/dump.py
+++ b/mitmproxy/dump.py
@@ -46,11 +46,11 @@ class DumpMaster(flow.FlowMaster):
         self.addons.add(options, dumper.Dumper())
         # This line is just for type hinting
         self.options = self.options  # type: Options
-        self.replay_ignore_params = options.replay_ignore_params
-        self.replay_ignore_content = options.replay_ignore_content
-        self.replay_ignore_host = options.replay_ignore_host
+        self.server_replay_ignore_params = options.server_replay_ignore_params
+        self.server_replay_ignore_content = options.server_replay_ignore_content
+        self.server_replay_ignore_host = options.server_replay_ignore_host
         self.refresh_server_playback = options.refresh_server_playback
-        self.replay_ignore_payload_params = options.replay_ignore_payload_params
+        self.server_replay_ignore_payload_params = options.server_replay_ignore_payload_params
 
         self.set_stream_large_bodies(options.stream_large_bodies)
 
diff --git a/mitmproxy/options.py b/mitmproxy/options.py
index fd3df48e..480e0de8 100644
--- a/mitmproxy/options.py
+++ b/mitmproxy/options.py
@@ -47,10 +47,10 @@ class Options(optmanager.OptManager):
             stream_large_bodies=None,  # type: Optional[str]
             verbosity=2,  # type: int
             outfile=None,  # type: Tuple[str, str]
-            replay_ignore_content=False,  # type: bool
-            replay_ignore_params=(),  # type: Sequence[str]
-            replay_ignore_payload_params=(),  # type: Sequence[str]
-            replay_ignore_host=False,  # type: bool
+            server_replay_ignore_content=False,  # type: bool
+            server_replay_ignore_params=(),  # type: Sequence[str]
+            server_replay_ignore_payload_params=(),  # type: Sequence[str]
+            server_replay_ignore_host=False,  # type: bool
 
             # Proxy options
             auth_nonanonymous=False,  # type: bool
@@ -105,10 +105,10 @@ class Options(optmanager.OptManager):
         self.stream_large_bodies = stream_large_bodies
         self.verbosity = verbosity
         self.outfile = outfile
-        self.replay_ignore_content = replay_ignore_content
-        self.replay_ignore_params = replay_ignore_params
-        self.replay_ignore_payload_params = replay_ignore_payload_params
-        self.replay_ignore_host = replay_ignore_host
+        self.server_replay_ignore_content = server_replay_ignore_content
+        self.server_replay_ignore_params = server_replay_ignore_params
+        self.server_replay_ignore_payload_params = server_replay_ignore_payload_params
+        self.server_replay_ignore_host = server_replay_ignore_host
 
         # Proxy options
         self.auth_nonanonymous = auth_nonanonymous
diff --git a/test/mitmproxy/builtins/test_serverplayback.py b/test/mitmproxy/builtins/test_serverplayback.py
index 65366dbb..4db509da 100644
--- a/test/mitmproxy/builtins/test_serverplayback.py
+++ b/test/mitmproxy/builtins/test_serverplayback.py
@@ -22,7 +22,7 @@ class TestServerPlayback:
 
     def test_ignore_host(self):
         sp = serverplayback.ServerPlayback()
-        sp.configure(options.Options(replay_ignore_host=True), [])
+        sp.configure(options.Options(server_replay_ignore_host=True), [])
 
         r = tutils.tflow(resp=True)
         r2 = tutils.tflow(resp=True)
@@ -35,7 +35,7 @@ class TestServerPlayback:
 
     def test_ignore_content(self):
         s = serverplayback.ServerPlayback()
-        s.configure(options.Options(replay_ignore_content=False), [])
+        s.configure(options.Options(server_replay_ignore_content=False), [])
 
         r = tutils.tflow(resp=True)
         r2 = tutils.tflow(resp=True)
@@ -46,7 +46,7 @@ class TestServerPlayback:
         r2.request.content = b"bar"
         assert not s._hash(r) == s._hash(r2)
 
-        s.configure(options.Options(replay_ignore_content=True), [])
+        s.configure(options.Options(server_replay_ignore_content=True), [])
         r = tutils.tflow(resp=True)
         r2 = tutils.tflow(resp=True)
         r.request.content = b"foo"
@@ -63,8 +63,8 @@ class TestServerPlayback:
         s = serverplayback.ServerPlayback()
         s.configure(
             options.Options(
-                replay_ignore_content=True,
-                replay_ignore_payload_params=[
+                server_replay_ignore_content=True,
+                server_replay_ignore_payload_params=[
                     "param1", "param2"
                 ]
             ),
@@ -87,8 +87,8 @@ class TestServerPlayback:
         s = serverplayback.ServerPlayback()
         s.configure(
             options.Options(
-                replay_ignore_content=False,
-                replay_ignore_payload_params=[
+                server_replay_ignore_content=False,
+                server_replay_ignore_payload_params=[
                     "param1", "param2"
                 ]
             ),
@@ -187,7 +187,7 @@ class TestServerPlayback:
         s = serverplayback.ServerPlayback()
         s.configure(
             options.Options(
-                replay_ignore_params=["param1", "param2"]
+                server_replay_ignore_params=["param1", "param2"]
             ),
             []
         )
@@ -208,7 +208,7 @@ class TestServerPlayback:
         s = serverplayback.ServerPlayback()
         s.configure(
             options.Options(
-                replay_ignore_payload_params=["param1", "param2"]
+                server_replay_ignore_payload_params=["param1", "param2"]
             ),
             []
         )
