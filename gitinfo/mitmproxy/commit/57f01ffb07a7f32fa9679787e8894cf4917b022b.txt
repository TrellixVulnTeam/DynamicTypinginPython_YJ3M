commit 57f01ffb07a7f32fa9679787e8894cf4917b022b
Author: Aldo Cortesi <aldo@nullcube.com>
Date:   Mon Jan 28 21:59:03 2013 +1300

    Test suite, remove extraneous code.

diff --git a/libmproxy/proxy.py b/libmproxy/proxy.py
index d2452e36..9e2dd126 100644
--- a/libmproxy/proxy.py
+++ b/libmproxy/proxy.py
@@ -96,11 +96,8 @@ class ServerConnection(tcp.TCPClient):
         d = request._assemble()
         if not d:
             raise ProxyError(502, "Cannot transmit an incomplete request.")
-        try:
-            self.wfile.write(d)
-            self.wfile.flush()
-        except socket.error, err:
-            raise ProxyError(502, 'Error sending data to "%s": %s' % (request.host, err))
+        self.wfile.write(d)
+        self.wfile.flush()
 
     def terminate(self):
         try:
diff --git a/scripts/contributors b/scripts/contributors
index 75b97c6c..a7518219 100755
--- a/scripts/contributors
+++ b/scripts/contributors
@@ -1,2 +1,2 @@
 #!/bin/sh
-git log | grep "^Author:" | sed 's/ <.*//; s/^Author: //' | sort | uniq -c | sort -nr
+git shortlog -n -s
diff --git a/test/test_proxy.py b/test/test_proxy.py
index 89e5a825..c73f61d8 100644
--- a/test/test_proxy.py
+++ b/test/test_proxy.py
@@ -2,6 +2,7 @@ from libmproxy import proxy, flow
 import tutils
 from libpathod import test
 from netlib import http
+import mock
 
 
 def test_proxy_error():
@@ -30,7 +31,6 @@ def test_app_registry():
     assert ar.get(r)
 
 
-
 class TestServerConnection:
     def setUp(self):
         self.d = test.Daemon()
@@ -50,9 +50,11 @@ class TestServerConnection:
         r.content = flow.CONTENT_MISSING
         tutils.raises("incomplete request", sc.send, r)
 
-    def test_send_error(self):
+        sc.terminate()
+
+    def test_terminate_error(self):
         sc = proxy.ServerConnection(proxy.ProxyConfig(), self.d.IFACE, self.d.port)
         sc.connect("http")
-        r = tutils.treq()
-        sc.send(r)
-
+        sc.connection = mock.Mock()
+        sc.connection.close = mock.Mock(side_effect=IOError)
+        sc.terminate()
