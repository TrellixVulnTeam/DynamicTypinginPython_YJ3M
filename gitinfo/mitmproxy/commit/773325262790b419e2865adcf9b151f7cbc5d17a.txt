commit 773325262790b419e2865adcf9b151f7cbc5d17a
Author: Samoilenko Roman <ttahabatt@gmail.com>
Date:   Sat Feb 3 14:53:09 2018 +0200

    don't raise when pyperclip doesn't find a clipboard, fix #2816

diff --git a/mitmproxy/addons/cut.py b/mitmproxy/addons/cut.py
index c31465c7..1c8fbc05 100644
--- a/mitmproxy/addons/cut.py
+++ b/mitmproxy/addons/cut.py
@@ -139,4 +139,7 @@ class Cut:
                     [strutils.always_str(v) or "" for v in vals]  # type: ignore
                 )
             ctx.log.alert("Clipped %s cuts as CSV." % len(cuts))
-        pyperclip.copy(fp.getvalue())
+        try:
+            pyperclip.copy(fp.getvalue())
+        except pyperclip.PyperclipException as e:
+            ctx.log.error(str(e))
diff --git a/mitmproxy/addons/export.py b/mitmproxy/addons/export.py
index 173296e4..4bb44548 100644
--- a/mitmproxy/addons/export.py
+++ b/mitmproxy/addons/export.py
@@ -77,4 +77,7 @@ class Export():
             raise exceptions.CommandError("No such export format: %s" % fmt)
         func = formats[fmt]  # type: typing.Any
         v = strutils.always_str(func(f))
-        pyperclip.copy(v)
+        try:
+            pyperclip.copy(v)
+        except pyperclip.PyperclipException as e:
+            ctx.log.error(str(e))
diff --git a/test/mitmproxy/addons/test_cut.py b/test/mitmproxy/addons/test_cut.py
index 266f9de7..56568f21 100644
--- a/test/mitmproxy/addons/test_cut.py
+++ b/test/mitmproxy/addons/test_cut.py
@@ -7,6 +7,7 @@ from mitmproxy.test import taddons
 from mitmproxy.test import tflow
 from mitmproxy.test import tutils
 import pytest
+import pyperclip
 from unittest import mock
 
 
@@ -89,6 +90,13 @@ def test_cut_clip():
             tctx.command(c.clip, "@all", "request.method,request.content")
             assert pc.called
 
+        with mock.patch('pyperclip.copy') as pc:
+            log_message = "Pyperclip could not find a " \
+                          "copy/paste mechanism for your system."
+            pc.side_effect = pyperclip.PyperclipException(log_message)
+            tctx.command(c.clip, "@all", "request.method")
+            assert tctx.master.has_log(log_message, level="error")
+
 
 def test_cut_save(tmpdir):
     f = str(tmpdir.join("path"))
diff --git a/test/mitmproxy/addons/test_export.py b/test/mitmproxy/addons/test_export.py
index 4ceb0429..07227a7a 100644
--- a/test/mitmproxy/addons/test_export.py
+++ b/test/mitmproxy/addons/test_export.py
@@ -1,6 +1,8 @@
-import pytest
 import os
 
+import pytest
+import pyperclip
+
 from mitmproxy import exceptions
 from mitmproxy.addons import export  # heh
 from mitmproxy.test import tflow
@@ -111,7 +113,7 @@ def test_export_open(exception, log_message, tmpdir):
 
 def test_clip(tmpdir):
     e = export.Export()
-    with taddons.context():
+    with taddons.context() as tctx:
         with pytest.raises(exceptions.CommandError):
             e.clip("nonexistent", tflow.tflow(resp=True))
 
@@ -122,3 +124,10 @@ def test_clip(tmpdir):
         with mock.patch('pyperclip.copy') as pc:
             e.clip("curl", tflow.tflow(resp=True))
             assert pc.called
+
+        with mock.patch('pyperclip.copy') as pc:
+            log_message = "Pyperclip could not find a " \
+                          "copy/paste mechanism for your system."
+            pc.side_effect = pyperclip.PyperclipException(log_message)
+            e.clip("raw", tflow.tflow(resp=True))
+            assert tctx.master.has_log(log_message, level="error")
