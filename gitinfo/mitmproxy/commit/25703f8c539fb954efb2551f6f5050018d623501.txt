commit 25703f8c539fb954efb2551f6f5050018d623501
Author: Ujjwal Verma <ujjwalverma1111@gmail.com>
Date:   Thu Mar 9 23:33:11 2017 +0530

    Fixed Replacement test

diff --git a/mitmproxy/addons/replace.py b/mitmproxy/addons/replace.py
index a653bd70..012c42bd 100644
--- a/mitmproxy/addons/replace.py
+++ b/mitmproxy/addons/replace.py
@@ -59,6 +59,7 @@ class _ReplaceBase:
             lst = []
             for rep in getattr(options, self.optionName):
                 fpatt, rex, s = parse_hook(rep)
+
                 flt = flowfilter.parse(fpatt)
                 if not flt:
                     raise exceptions.OptionsError(
diff --git a/mitmproxy/options.py b/mitmproxy/options.py
index 462752c4..088d52c2 100644
--- a/mitmproxy/options.py
+++ b/mitmproxy/options.py
@@ -120,7 +120,6 @@ class Options(optmanager.OptManager):
             the separator can be any character.
             """
         )
-
         self.add_option(
             "server_replay_use_headers", Sequence[str], [],
             "Request headers to be considered during replay."
diff --git a/test/mitmproxy/addons/test_replace.py b/test/mitmproxy/addons/test_replace.py
index 8c280c51..79ef7bac 100644
--- a/test/mitmproxy/addons/test_replace.py
+++ b/test/mitmproxy/addons/test_replace.py
@@ -72,7 +72,7 @@ class TestUpstreamProxy(tservers.HTTPUpstreamProxyTest):
 
 class TestReplaceFile:
     def test_simple(self):
-        r = replace.ReplaceFile()
+        r = replace.Replace()
         with tutils.tmpdir() as td:
             rp = os.path.join(td, "replacement")
             with open(rp, "w") as f:
@@ -80,10 +80,10 @@ class TestReplaceFile:
             with taddons.context() as tctx:
                 tctx.configure(
                     r,
-                    replacement_files = [
-                        "/~q/foo/" + rp,
-                        "/~s/foo/" + rp,
-                        "/~b nonexistent/nonexistent/nonexistent",
+                    replacements = [
+                        "/~q/foo/@" + rp,
+                        "/~s/foo/@" + rp,
+                        "/~b nonexistent/nonexistent/@nonexistent",
                     ]
                 )
                 f = tflow.tflow()
