commit baf961cde05515526a601b46bd28749b4fc07a38
Author: Aldo Cortesi <aldo@nullcube.com>
Date:   Sat Apr 18 16:36:45 2015 +1200

    Unit test++ for PathodSpec

diff --git a/libpathod/language.py b/libpathod/language.py
index e1f6820f..7aa6565c 100644
--- a/libpathod/language.py
+++ b/libpathod/language.py
@@ -15,10 +15,6 @@ BLOCKSIZE = 1024
 TRUNCATE = 1024
 
 
-def escape_backslash(s):
-    return s.replace("\\", "\\\\")
-
-
 def quote(s):
     quotechar = s[0]
     s = s[1:-1]
@@ -852,7 +848,10 @@ class _Message(object):
         tokens = self.tokens[:]
         if not self.raw:
             if not utils.get_header("Content-Length", self.headers):
-                length = 0 if not self.body else len(self.body.value.get_generator(settings))
+                if not self.body:
+                    length = 0
+                else:
+                    length = len(self.body.value.get_generator(settings))
                 tokens.append(
                     Header(
                         ValueLiteral("Content-Length"),
diff --git a/test/test_language.py b/test/test_language.py
index e2d5190f..25f4eec4 100644
--- a/test/test_language.py
+++ b/test/test_language.py
@@ -265,6 +265,7 @@ class TestMisc:
             )
         )
         assert e.freeze({})
+        assert e.values({})
 
     def test_code(self):
         e = language.Code.expr()
@@ -542,6 +543,14 @@ class TestRequest:
         assert r[0].method.string() == "GET"
         assert r[1].method.string() == "GET"
 
+    def test_pathodspec(self):
+        l = "get:/p:s'200'"
+        r = language.parse_requests(l)
+        assert len(r) == 1
+        assert len(r[0].tokens) == 3
+        assert isinstance(r[0].tokens[2], language.PathodSpec)
+        assert r[0].values({})
+
     def test_render(self):
         s = cStringIO.StringIO()
         r = parse_request("GET:'/foo'")
