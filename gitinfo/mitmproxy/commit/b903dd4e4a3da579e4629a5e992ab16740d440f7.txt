commit b903dd4e4a3da579e4629a5e992ab16740d440f7
Author: Legend Tang <sp3478@gmail.com>
Date:   Fri Mar 6 03:29:15 2015 +0800

    Revert "revert to custom EventEmitter, workaround for #504"
    
    This reverts commit fa8fc64ce0170b029410600af20b25c8160fe5c6.

diff --git a/web/src/js/store/view.js b/web/src/js/store/view.js
index e96d1bcc..b5db9287 100644
--- a/web/src/js/store/view.js
+++ b/web/src/js/store/view.js
@@ -1,5 +1,8 @@
+
+var EventEmitter = require('events').EventEmitter;
 var _ = require("lodash");
 
+
 var utils = require("../utils.js");
 
 function SortByStoreOrder(elem) {
@@ -12,7 +15,7 @@ var default_filt = function(elem){
 };
 
 function StoreView(store, filt, sortfun) {
-    utils.EventEmitter.call(this);
+    EventEmitter.call(this);
     filt = filt || default_filt;
     sortfun = sortfun || default_sort;
 
@@ -30,7 +33,7 @@ function StoreView(store, filt, sortfun) {
     this.recalculate(filt, sortfun);
 }
 
-_.extend(StoreView.prototype, utils.EventEmitter.prototype, {
+_.extend(StoreView.prototype, EventEmitter.prototype, {
     close: function () {
         this.store.removeListener("add", this.add);
         this.store.removeListener("update", this.update);
diff --git a/web/src/js/utils.js b/web/src/js/utils.js
index 459b18f3..21b7a868 100644
--- a/web/src/js/utils.js
+++ b/web/src/js/utils.js
@@ -58,35 +58,6 @@ var formatTimeStamp = function (seconds) {
     return ts.replace("T", " ").replace("Z", "");
 };
 
-function EventEmitter() {
-    this.listeners = {};
-}
-EventEmitter.prototype.emit = function (event) {
-    if (!(event in this.listeners)) {
-        return;
-    }
-    var args = Array.prototype.slice.call(arguments, 1);
-    this.listeners[event].forEach(function (listener) {
-        listener.apply(this, args);
-    }.bind(this));
-};
-EventEmitter.prototype.addListener = function (events, f) {
-    events.split(" ").forEach(function (event) {
-        this.listeners[event] = this.listeners[event] || [];
-        this.listeners[event].push(f);
-    }.bind(this));
-};
-EventEmitter.prototype.removeListener = function (events, f) {
-    if (!(events in this.listeners)) {
-        return false;
-    }
-    events.split(" ").forEach(function (event) {
-        var index = this.listeners[event].indexOf(f);
-        if (index >= 0) {
-            this.listeners[event].splice(index, 1);
-        }
-    }.bind(this));
-};
 
 function getCookie(name) {
     var r = document.cookie.match("\\b" + name + "=([^;]*)\\b");
@@ -113,7 +84,6 @@ $(document).ajaxError(function (event, jqXHR, ajaxSettings, thrownError) {
 });
 
 module.exports = {
-    EventEmitter: EventEmitter,
     formatSize: formatSize,
     formatTimeDelta: formatTimeDelta,
     formatTimeStamp: formatTimeStamp,
