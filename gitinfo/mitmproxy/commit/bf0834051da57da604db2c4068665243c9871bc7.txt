commit bf0834051da57da604db2c4068665243c9871bc7
Author: Matthew Shao <me@matshao.com>
Date:   Thu Aug 10 14:39:19 2017 +0800

    [web] Attempt of static viewer addon.

diff --git a/mitmproxy/tools/web/static_viewer.py b/mitmproxy/tools/web/static_viewer.py
new file mode 100644
index 00000000..ddee6c23
--- /dev/null
+++ b/mitmproxy/tools/web/static_viewer.py
@@ -0,0 +1,52 @@
+import os.path
+import shutil
+
+from mitmproxy import ctx
+from mitmproxy import flow
+
+
+class StaticViewer:
+    def __init__(self):
+        self.active_flows = set() # type: Set[flow.Flow]
+
+    def save(self, path: str) -> None:
+        """
+            Save the files for the static web view.
+        """
+        static_path = os.path.join(os.path.dirname(__file__), 'static')
+        index_path = os.path.join(os.path.dirname(__file__), 'templates', 'index.html')
+        path = os.path.expanduser(path)
+        # We want to overwrite the static files to keep track of the update.
+        try:
+            shutil.copytree(static_path, os.path.join(path, 'static'),
+                            ignore=shutil.ignore_patterns('static.js'))
+        except FileExistsError:
+            shutil.rmtree(os.path.join(path, 'static'))
+            shutil.copytree(static_path, os.path.join(path, 'static'),
+                            ignore=shutil.ignore_patterns('static.js'))
+
+        index_template = open(index_path, 'r')
+        index = open(os.path.join(path, 'index.html'), 'w')
+        # Change the resource files to relative path.
+        index.write(index_template.read().replace('/static/', './static/'))
+        index_template.close()
+        index.close()
+
+        static_template = open(os.path.join(static_path, 'static.js'), 'r')
+        static = open(os.path.join(path, 'static', 'static.js'), 'w')
+        # Turn on MITMWEB_STATIC variable
+        static.write(static_template.read().replace('false', 'true'))
+        static_template.close()
+        static.close()
+
+    def load(self, loader):
+        loader.add_option(
+            "web_static_viewer", str, "",
+            "The path to output a static viewer."
+        )
+
+    def configure(self, updated):
+        if "web_static_viewer" in updated and ctx.options.web_static_viewer:
+            self.save(ctx.options.web_static_viewer)
+
+
