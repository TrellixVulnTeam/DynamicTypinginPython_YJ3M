commit f215c3712ded010a20f73af78617a2d3c248b1bd
Author: Maximilian Hils <git@maximilianhils.com>
Date:   Thu Feb 5 17:12:48 2015 +0100

    fix #459

diff --git a/libmproxy/console/contentview.py b/libmproxy/console/contentview.py
index b1b99bb6..582723bb 100644
--- a/libmproxy/console/contentview.py
+++ b/libmproxy/console/contentview.py
@@ -488,12 +488,15 @@ def get(name):
             return i
 
 
-def get_content_view(viewmode, hdrItems, content, limit, logfunc):
+def get_content_view(viewmode, hdrItems, content, limit, logfunc, is_request):
     """
         Returns a (msg, body) tuple.
     """
     if not content:
-        return ("No content", "")
+        if is_request:
+            return "No request content (press tab to view response)", ""
+        else:
+            return "No content", ""
     msg = []
 
     hdrs = flow.ODictCaseless([list(i) for i in hdrItems])
diff --git a/libmproxy/console/flowview.py b/libmproxy/console/flowview.py
index 9e305b8a..2aac575d 100644
--- a/libmproxy/console/flowview.py
+++ b/libmproxy/console/flowview.py
@@ -3,7 +3,7 @@ import os, sys, copy
 import urwid
 from . import common, grideditor, contentview
 from .. import utils, flow, controller
-from ..protocol.http import HTTPResponse, CONTENT_MISSING, decoded
+from ..protocol.http import HTTPRequest, HTTPResponse, CONTENT_MISSING, decoded
 
 
 class SearchError(Exception): pass
@@ -129,8 +129,8 @@ class FlowView(common.WWrap):
         else:
             self.view_request()
 
-    def _cached_content_view(self, viewmode, hdrItems, content, limit):
-        return contentview.get_content_view(viewmode, hdrItems, content, limit, self.master.add_event)
+    def _cached_content_view(self, viewmode, hdrItems, content, limit, is_request):
+        return contentview.get_content_view(viewmode, hdrItems, content, limit, self.master.add_event, is_request)
 
     def content_view(self, viewmode, conn):
         full = self.state.get_flow_setting(
@@ -147,7 +147,8 @@ class FlowView(common.WWrap):
                     viewmode,
                     tuple(tuple(i) for i in conn.headers.lst),
                     conn.content,
-                    limit
+                    limit,
+                    isinstance(conn, HTTPRequest)
                 )
         return (description, text_objects)
 
