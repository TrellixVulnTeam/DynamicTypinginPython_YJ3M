commit 2a4933eb9deb0c82c3ddf2b821cae88219c755a7
Author: Maximilian Hils <git@maximilianhils.com>
Date:   Wed Jul 1 22:52:35 2020 +0200

    minor fixes

diff --git a/mitmproxy/addons/modifybody.py b/mitmproxy/addons/modifybody.py
index 4bc9edae..3fb72875 100644
--- a/mitmproxy/addons/modifybody.py
+++ b/mitmproxy/addons/modifybody.py
@@ -28,7 +28,6 @@ class ModifyBody:
                 try:
                     spec = parse_modify_spec(option)
                     try:
-                        # We should ideally escape here before trying to compile
                         re.compile(spec.subject)
                     except re.error:
                         raise ValueError(f"Invalid regular expression: {spec.subject}")
diff --git a/mitmproxy/addons/modifyheaders.py b/mitmproxy/addons/modifyheaders.py
index de5c90ec..2e6eb8f6 100644
--- a/mitmproxy/addons/modifyheaders.py
+++ b/mitmproxy/addons/modifyheaders.py
@@ -59,12 +59,10 @@ def parse_modify_spec(option) -> ModifySpec:
     if not flow_filter:
         raise ValueError(f"Invalid filter pattern: {flow_filter_pattern}")
 
-    if isinstance(subject, str):
-        subject = strutils.escaped_str_to_bytes(subject)
-    if isinstance(replacement, str):
-        replacement = strutils.escaped_str_to_bytes(replacement)
+    subject = strutils.escaped_str_to_bytes(subject)
+    replacement = strutils.escaped_str_to_bytes(replacement)
 
-    if replacement.startswith(b"@") and not os.path.isfile(replacement[1:]):
+    if replacement.startswith(b"@") and not os.path.isfile(os.path.expanduser(replacement[1:])):
         raise ValueError(f"Invalid file path: {replacement[1:]}")
 
     return ModifySpec(flow_filter_pattern, flow_filter, subject, replacement)
