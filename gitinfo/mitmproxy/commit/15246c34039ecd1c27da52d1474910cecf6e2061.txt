commit 15246c34039ecd1c27da52d1474910cecf6e2061
Author: Aldo Cortesi <aldo@nullcube.com>
Date:   Mon Apr 6 17:02:51 2015 +1200

    console: ignore patterns to new options screen.

diff --git a/libmproxy/console/__init__.py b/libmproxy/console/__init__.py
index 7e6326f7..f40987e3 100644
--- a/libmproxy/console/__init__.py
+++ b/libmproxy/console/__init__.py
@@ -576,10 +576,6 @@ class ConsoleMaster(flow.FlowMaster):
         for command in commands:
             self.load_script(command)
 
-    def edit_ignore_filter(self, ignore):
-        patterns = (x[0] for x in ignore)
-        self.set_ignore_filter(patterns)
-
     def edit_tcp_filter(self, tcp):
         patterns = (x[0] for x in tcp)
         self.set_tcp_filter(patterns)
diff --git a/libmproxy/console/help.py b/libmproxy/console/help.py
index 19f17625..ea1e469c 100644
--- a/libmproxy/console/help.py
+++ b/libmproxy/console/help.py
@@ -37,8 +37,6 @@ class HelpView(urwid.ListBox):
         text.append(urwid.Text([("head", "\n\nGlobal keys:\n")]))
         keys = [
             ("c", "client replay"),
-            ("H", "edit global header set patterns"),
-            ("I", "set ignore pattern"),
             ("i", "set interception pattern"),
             ("M", "change global default display mode"),
                 (None,
diff --git a/libmproxy/console/options.py b/libmproxy/console/options.py
index b6e274f3..4cc768b6 100644
--- a/libmproxy/console/options.py
+++ b/libmproxy/console/options.py
@@ -140,7 +140,9 @@ class Options(urwid.WidgetWrap):
                 ),
                 Option(
                     "Ignore Patterns",
-                    "I"
+                    "I",
+                    lambda: master.server.config.check_ignore,
+                    self.ignorepatterns
                 ),
                 Option(
                     "Replacement Patterns",
@@ -233,6 +235,7 @@ class Options(urwid.WidgetWrap):
         self.master.refresh_server_playback = True
         self.master.server.config.no_upstream_cert = False
         self.master.setheaders.clear()
+        self.master.set_ignore_filter([])
         signals.update_settings.send(self)
         signals.status_message.send(
             message = "All options cleared",
@@ -269,3 +272,16 @@ class Options(urwid.WidgetWrap):
                 _set
             )
         )
+
+    def ignorepatterns(self):
+        def _set(ignore):
+            patterns = (x[0] for x in ignore)
+            self.master.set_ignore_filter(patterns)
+            signals.update_settings.send(self)
+        self.master.view_grideditor(
+            grideditor.HostPatternEditor(
+                self.master,
+                [[x] for x in self.master.get_ignore_filter()],
+                _set
+            )
+        )
diff --git a/libmproxy/console/window.py b/libmproxy/console/window.py
index f2ef920b..c28e6b13 100644
--- a/libmproxy/console/window.py
+++ b/libmproxy/console/window.py
@@ -33,14 +33,6 @@ class Window(urwid.Frame):
                     ),
                     callback = self.master.stop_client_playback_prompt,
                 )
-        elif k == "I":
-            self.master.view_grideditor(
-                grideditor.HostPatternEditor(
-                    self.master,
-                    [[x] for x in self.master.get_ignore_filter()],
-                    self.master.edit_ignore_filter
-                )
-            )
         elif k == "T":
             self.master.view_grideditor(
                 grideditor.HostPatternEditor(
