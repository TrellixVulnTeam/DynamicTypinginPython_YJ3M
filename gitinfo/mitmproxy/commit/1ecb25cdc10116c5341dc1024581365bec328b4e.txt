commit 1ecb25cdc10116c5341dc1024581365bec328b4e
Author: Aldo Cortesi <aldo@nullcube.com>
Date:   Thu Oct 20 10:22:23 2016 +1300

    mitmproxy.types.[basethread,multidict,serializable]

diff --git a/mitmproxy/contentviews.py b/mitmproxy/contentviews.py
index 07bf09f5..a171f36b 100644
--- a/mitmproxy/contentviews.py
+++ b/mitmproxy/contentviews.py
@@ -34,7 +34,7 @@ from PIL import Image
 from mitmproxy import exceptions
 from mitmproxy.contrib.wbxml import ASCommandResponse
 from netlib import http
-from netlib import multidict
+from mitmproxy.types import multidict
 from mitmproxy.utils import strutils
 from netlib.http import url
 
diff --git a/mitmproxy/master.py b/mitmproxy/master.py
index 1fc00112..2e57e57d 100644
--- a/mitmproxy/master.py
+++ b/mitmproxy/master.py
@@ -14,7 +14,7 @@ from mitmproxy import http
 from mitmproxy import log
 from mitmproxy import io
 from mitmproxy.proxy.protocol import http_replay
-from netlib import basethread
+from mitmproxy.types import basethread
 import netlib.http
 
 from . import ctx as mitmproxy_ctx
diff --git a/mitmproxy/proxy/protocol/http2.py b/mitmproxy/proxy/protocol/http2.py
index cbd8b34c..93ac51bc 100644
--- a/mitmproxy/proxy/protocol/http2.py
+++ b/mitmproxy/proxy/protocol/http2.py
@@ -15,7 +15,7 @@ from mitmproxy.proxy.protocol import base
 from mitmproxy.proxy.protocol import http as httpbase
 import netlib.http
 from netlib import tcp
-from netlib import basethread
+from mitmproxy.types import basethread
 from netlib.http import http2
 
 
diff --git a/mitmproxy/proxy/protocol/http_replay.py b/mitmproxy/proxy/protocol/http_replay.py
index bf0697be..eef5a109 100644
--- a/mitmproxy/proxy/protocol/http_replay.py
+++ b/mitmproxy/proxy/protocol/http_replay.py
@@ -8,7 +8,7 @@ from mitmproxy import http
 from mitmproxy import flow
 from mitmproxy import connections
 from netlib.http import http1
-from netlib import basethread
+from mitmproxy.types import basethread
 
 
 # TODO: Doesn't really belong into mitmproxy.proxy.protocol...
diff --git a/mitmproxy/script/concurrent.py b/mitmproxy/script/concurrent.py
index dc72e5b7..2fd7ad8d 100644
--- a/mitmproxy/script/concurrent.py
+++ b/mitmproxy/script/concurrent.py
@@ -4,7 +4,7 @@ offload computations from mitmproxy's main master thread.
 """
 
 from mitmproxy import events
-from netlib import basethread
+from mitmproxy.types import basethread
 
 
 class ScriptThread(basethread.BaseThread):
diff --git a/mitmproxy/stateobject.py b/mitmproxy/stateobject.py
index f4415ecf..1ab744a5 100644
--- a/mitmproxy/stateobject.py
+++ b/mitmproxy/stateobject.py
@@ -1,7 +1,7 @@
 from typing import Any
 from typing import List
 
-import netlib.basetypes
+from mitmproxy.types import serializable
 
 
 def _is_list(cls):
@@ -10,7 +10,7 @@ def _is_list(cls):
     return issubclass(cls, List) or is_list_bugfix
 
 
-class StateObject(netlib.basetypes.Serializable):
+class StateObject(serializable.Serializable):
 
     """
     An object with serializable state.
diff --git a/mitmproxy/tcp.py b/mitmproxy/tcp.py
index af54c9d4..d73be98d 100644
--- a/mitmproxy/tcp.py
+++ b/mitmproxy/tcp.py
@@ -2,11 +2,11 @@ import time
 
 from typing import List
 
-import netlib.basetypes
 from mitmproxy import flow
+from mitmproxy.types import serializable
 
 
-class TCPMessage(netlib.basetypes.Serializable):
+class TCPMessage(serializable.Serializable):
 
     def __init__(self, from_client, content, timestamp=None):
         self.content = content
diff --git a/mitmproxy/types/__init__.py b/mitmproxy/types/__init__.py
new file mode 100644
index 00000000..e69de29b
diff --git a/netlib/basethread.py b/mitmproxy/types/basethread.py
similarity index 100%
rename from netlib/basethread.py
rename to mitmproxy/types/basethread.py
diff --git a/netlib/multidict.py b/mitmproxy/types/multidict.py
similarity index 98%
rename from netlib/multidict.py
rename to mitmproxy/types/multidict.py
index 191d1cc6..d351e48b 100644
--- a/netlib/multidict.py
+++ b/mitmproxy/types/multidict.py
@@ -6,10 +6,10 @@ try:
 except ImportError:  # pragma: no cover
     from collections import MutableMapping  # Workaround for Python < 3.3
 
-from netlib import basetypes
+from mitmproxy.types import serializable
 
 
-class _MultiDict(MutableMapping, basetypes.Serializable, metaclass=ABCMeta):
+class _MultiDict(MutableMapping, serializable.Serializable, metaclass=ABCMeta):
     def __repr__(self):
         fields = (
             repr(field)
diff --git a/netlib/basetypes.py b/mitmproxy/types/serializable.py
similarity index 100%
rename from netlib/basetypes.py
rename to mitmproxy/types/serializable.py
diff --git a/mitmproxy/utils/__init__.py b/mitmproxy/utils/__init__.py
new file mode 100644
index 00000000..e69de29b
diff --git a/netlib/certutils.py b/netlib/certutils.py
index 6a97f99e..9cb8a40e 100644
--- a/netlib/certutils.py
+++ b/netlib/certutils.py
@@ -10,7 +10,7 @@ from pyasn1.codec.der.decoder import decode
 from pyasn1.error import PyAsn1Error
 import OpenSSL
 
-from netlib import basetypes
+from mitmproxy.types import serializable
 
 # Default expiry must not be too long: https://github.com/mitmproxy/mitmproxy/issues/815
 
@@ -373,7 +373,7 @@ class _GeneralNames(univ.SequenceOf):
         constraint.ValueSizeConstraint(1, 1024)
 
 
-class SSLCert(basetypes.Serializable):
+class SSLCert(serializable.Serializable):
 
     def __init__(self, cert):
         """
diff --git a/netlib/http/cookies.py b/netlib/http/cookies.py
index cb816ca0..9f32fa5e 100644
--- a/netlib/http/cookies.py
+++ b/netlib/http/cookies.py
@@ -3,7 +3,7 @@ import email.utils
 import re
 import time
 
-from netlib import multidict
+from mitmproxy.types import multidict
 
 """
 A flexible module for cookie parsing and manipulation.
diff --git a/netlib/http/headers.py b/netlib/http/headers.py
index 6c30d278..8fc0cd43 100644
--- a/netlib/http/headers.py
+++ b/netlib/http/headers.py
@@ -1,7 +1,7 @@
 import re
 
 import collections
-from netlib import multidict
+from mitmproxy.types import multidict
 from mitmproxy.utils import strutils
 
 # See also: http://lucumr.pocoo.org/2013/7/2/the-updated-guide-to-unicode/
diff --git a/netlib/http/message.py b/netlib/http/message.py
index 133a53ce..62c3aa38 100644
--- a/netlib/http/message.py
+++ b/netlib/http/message.py
@@ -4,7 +4,7 @@ from typing import Optional
 
 from mitmproxy.utils import strutils
 from netlib import encoding
-from netlib import basetypes
+from mitmproxy.types import serializable
 from netlib.http import headers
 
 
@@ -17,7 +17,7 @@ def _always_bytes(x):
     return strutils.always_bytes(x, "utf-8", "surrogateescape")
 
 
-class MessageData(basetypes.Serializable):
+class MessageData(serializable.Serializable):
     def __eq__(self, other):
         if isinstance(other, MessageData):
             return self.__dict__ == other.__dict__
@@ -43,7 +43,7 @@ class MessageData(basetypes.Serializable):
         return cls(**state)
 
 
-class Message(basetypes.Serializable):
+class Message(serializable.Serializable):
     def __eq__(self, other):
         if isinstance(other, Message):
             return self.data == other.data
diff --git a/netlib/http/request.py b/netlib/http/request.py
index 3479fa4c..16b0c986 100644
--- a/netlib/http/request.py
+++ b/netlib/http/request.py
@@ -1,7 +1,7 @@
 import re
 import urllib
 
-from netlib import multidict
+from mitmproxy.types import multidict
 from mitmproxy.utils import strutils
 from netlib.http import multipart
 from netlib.http import cookies
diff --git a/netlib/http/response.py b/netlib/http/response.py
index 12dba92a..4d1d5d24 100644
--- a/netlib/http/response.py
+++ b/netlib/http/response.py
@@ -1,7 +1,7 @@
 import time
 from email.utils import parsedate_tz, formatdate, mktime_tz
 from mitmproxy.utils import human
-from netlib import multidict
+from mitmproxy.types import multidict
 from netlib.http import cookies
 from netlib.http import headers as nheaders
 from netlib.http import message
diff --git a/netlib/tcp.py b/netlib/tcp.py
index aed79388..4fde657f 100644
--- a/netlib/tcp.py
+++ b/netlib/tcp.py
@@ -19,9 +19,9 @@ from OpenSSL import SSL
 
 from netlib import certutils
 from netlib import version_check
-from netlib import basetypes
+from mitmproxy.types import serializable
 from netlib import exceptions
-from netlib import basethread
+from mitmproxy.types import basethread
 
 # This is a rather hackish way to make sure that
 # the latest version of pyOpenSSL is actually installed.
@@ -292,7 +292,7 @@ class Reader(_FileLike):
             raise NotImplementedError("Can only peek into (pyOpenSSL) sockets")
 
 
-class Address(basetypes.Serializable):
+class Address(serializable.Serializable):
 
     """
         This class wraps an IPv4/IPv6 tuple to provide named attributes and
diff --git a/pathod/pathoc.py b/pathod/pathoc.py
index 0cf08a60..caa9accb 100644
--- a/pathod/pathoc.py
+++ b/pathod/pathoc.py
@@ -16,7 +16,7 @@ from mitmproxy.utils import strutils
 from netlib import tcp, certutils, websockets, socks
 from netlib import exceptions
 from netlib.http import http1
-from netlib import basethread
+from mitmproxy.types import basethread
 
 from . import log, language
 from .protocols import http2
diff --git a/pathod/test.py b/pathod/test.py
index c92cc50b..b819d723 100644
--- a/pathod/test.py
+++ b/pathod/test.py
@@ -3,7 +3,7 @@ import time
 import queue
 
 from . import pathod
-from netlib import basethread
+from mitmproxy.types import basethread
 
 
 class Daemon:
diff --git a/test/mitmproxy/test_contentview.py b/test/mitmproxy/test_contentview.py
index d63ee50e..f113e294 100644
--- a/test/mitmproxy/test_contentview.py
+++ b/test/mitmproxy/test_contentview.py
@@ -2,7 +2,7 @@ import mock
 from mitmproxy.exceptions import ContentViewException
 from netlib.http import Headers
 from netlib.http import url
-from netlib import multidict
+from mitmproxy.types import multidict
 
 import mitmproxy.contentviews as cv
 from . import tutils
diff --git a/test/netlib/test_multidict.py b/test/mitmproxy/test_types_multidict.py
similarity index 96%
rename from test/netlib/test_multidict.py
rename to test/mitmproxy/test_types_multidict.py
index a9523fd9..ada33bf7 100644
--- a/test/netlib/test_multidict.py
+++ b/test/mitmproxy/test_types_multidict.py
@@ -1,5 +1,5 @@
 from netlib import tutils
-from netlib.multidict import MultiDict, ImmutableMultiDict, MultiDictView
+from mitmproxy.types import multidict
 
 
 class _TMulti:
@@ -8,11 +8,11 @@ class _TMulti:
         return key.lower()
 
 
-class TMultiDict(_TMulti, MultiDict):
+class TMultiDict(_TMulti, multidict.MultiDict):
     pass
 
 
-class TImmutableMultiDict(_TMulti, ImmutableMultiDict):
+class TImmutableMultiDict(_TMulti, multidict.ImmutableMultiDict):
     pass
 
 
@@ -238,7 +238,7 @@ class TParent:
 class TestMultiDictView:
     def test_modify(self):
         p = TParent()
-        tv = MultiDictView(p.getter, p.setter)
+        tv = multidict.MultiDictView(p.getter, p.setter)
         assert len(tv) == 0
         tv["a"] = "b"
         assert p.vals == (("a", "b"),)
diff --git a/test/netlib/test_basetypes.py b/test/mitmproxy/test_types_serializable.py
similarity index 82%
rename from test/netlib/test_basetypes.py
rename to test/mitmproxy/test_types_serializable.py
index aa415784..dd4a3778 100644
--- a/test/netlib/test_basetypes.py
+++ b/test/mitmproxy/test_types_serializable.py
@@ -1,7 +1,7 @@
-from netlib import basetypes
+from mitmproxy.types import serializable
 
 
-class SerializableDummy(basetypes.Serializable):
+class SerializableDummy(serializable.Serializable):
     def __init__(self, i):
         self.i = i
 
