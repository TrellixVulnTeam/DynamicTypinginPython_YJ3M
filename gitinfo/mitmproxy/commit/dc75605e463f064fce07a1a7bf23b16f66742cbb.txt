commit dc75605e463f064fce07a1a7bf23b16f66742cbb
Author: Maximilian Hils <git@maximilianhils.com>
Date:   Wed Nov 23 01:26:47 2016 +0100

    minor fixes

diff --git a/mitmproxy/addons/eventstore.py b/mitmproxy/addons/eventstore.py
index 0afd018a..4e410c98 100644
--- a/mitmproxy/addons/eventstore.py
+++ b/mitmproxy/addons/eventstore.py
@@ -1,16 +1,16 @@
 from typing import List  # noqa
 
 import blinker
-from mitmproxy import log
+from mitmproxy.log import LogEntry
 
 
 class EventStore:
     def __init__(self):
-        self.data = []  # type: List[log.LogEntry]
+        self.data = []  # type: List[LogEntry]
         self.sig_add = blinker.Signal()
         self.sig_refresh = blinker.Signal()
 
-    def log(self, entry: log.LogEntry):
+    def log(self, entry: LogEntry):
         self.data.append(entry)
         self.sig_add.send(self, entry=entry)
 
diff --git a/web/src/js/components/ContentView/ContentViewOptions.jsx b/web/src/js/components/ContentView/ContentViewOptions.jsx
index fed3a088..6bc66db2 100644
--- a/web/src/js/components/ContentView/ContentViewOptions.jsx
+++ b/web/src/js/components/ContentView/ContentViewOptions.jsx
@@ -9,15 +9,14 @@ ContentViewOptions.propTypes = {
     message: React.PropTypes.object.isRequired,
 }
 
-function ContentViewOptions(props) {
-    const { flow, message, uploadContent, readonly, contentViewDescription } = props
+function ContentViewOptions({ flow, message, uploadContent, readonly, contentViewDescription }) {
     return (
         <div className="view-options">
             <ViewSelector message={message}/>
             &nbsp;
             <DownloadContentButton flow={flow} message={message}/>
             &nbsp;
-            <UploadContentButton uploadContent={uploadContent}/>
+            {!readonly && <UploadContentButton uploadContent={uploadContent}/> }
             &nbsp;
             <span>{contentViewDescription}</span>
         </div>
@@ -26,6 +25,7 @@ function ContentViewOptions(props) {
 
 export default connect(
     state => ({
-        contentViewDescription: state.ui.flow.viewDescription
+        contentViewDescription: state.ui.flow.viewDescription,
+        readonly: !state.ui.flow.modifiedFlow,
     })
 )(ContentViewOptions)
diff --git a/web/src/js/components/ContentView/ContentViews.jsx b/web/src/js/components/ContentView/ContentViews.jsx
index 32a07564..db239195 100644
--- a/web/src/js/components/ContentView/ContentViews.jsx
+++ b/web/src/js/components/ContentView/ContentViews.jsx
@@ -63,6 +63,7 @@ class ViewServer extends Component {
         let lines = this.props.showFullContent ? this.data.lines : this.data.lines.slice(0, maxLines)
         return (
             <div>
+                {ViewImage.matches(message) && <ViewImage {...this.props} />}
                 <pre>
                     {lines.map((line, i) =>
                         <div key={`line${i}`}>
@@ -77,9 +78,6 @@ class ViewServer extends Component {
                         </div>
                     )}
                 </pre>
-                {ViewImage.matches(message) &&
-                <ViewImage {...this.props} />
-                }
             </div>
         )
     }
diff --git a/web/src/js/components/ContentView/ViewSelector.jsx b/web/src/js/components/ContentView/ViewSelector.jsx
index ab433ea3..fcdc3ee3 100644
--- a/web/src/js/components/ContentView/ViewSelector.jsx
+++ b/web/src/js/components/ContentView/ViewSelector.jsx
@@ -14,7 +14,7 @@ ViewSelector.propTypes = {
 
 function ViewSelector ({contentViews, activeView, isEdit, setContentView}){
     let edit = ContentViews.Edit.displayName
-    let inner = <span> <b>View:</b> {activeView}<span className="caret"></span> </span>
+    let inner = <span> <b>View:</b> {activeView} <span className="caret"></span> </span>
 
     return (
         <Dropdown dropup className="pull-left" btnClass="btn btn-default btn-xs" text={inner}>
