commit f6dadc2b0de712869d9b8aa928915dbb990bb6af
Author: Maximilian Hils <git@maximilianhils.com>
Date:   Thu Aug 27 00:07:44 2015 +0200

    no more sni double-connects!

diff --git a/doc-src/howmitmproxy.html b/doc-src/howmitmproxy.html
index fabd393a..16b5f722 100644
--- a/doc-src/howmitmproxy.html
+++ b/doc-src/howmitmproxy.html
@@ -145,15 +145,6 @@ passed to us. Now we can pause the conversation, and initiate an upstream
 connection using the correct SNI value, which then serves us the correct
 upstream certificate, from which we can extract the expected CN and SANs.
 
-There's another wrinkle here. Due to a limitation of the SSL library mitmproxy
-uses, we can't detect that a connection _hasn't_ sent an SNI request until it's
-too late for upstream certificate sniffing. In practice, we therefore make a
-vanilla SSL connection upstream to sniff non-SNI certificates, and then discard
-the connection if the client sends an SNI notification. If you're watching your
-traffic with a packet sniffer, you'll see two connections to the server when an
-SNI request is made, the first of which is immediately closed after the SSL
-handshake. Luckily, this is almost never an issue in practice.
-
 ## Putting it all together
 
 Lets put all of this together into the complete explicitly proxied HTTPS flow.
diff --git a/libmproxy/contrib/README b/libmproxy/contrib/README
index e339310a..e5ce11da 100644
--- a/libmproxy/contrib/README
+++ b/libmproxy/contrib/README
@@ -10,5 +10,5 @@ wbxml
     - https://github.com/davidpshaw/PyWBXMLDecoder
 
 tls, BSD license
-    - https://github.com/mhils/tls/tree/extension-parsing
+    - https://github.com/mhils/tls/tree/mitmproxy
     - limited to required files.
\ No newline at end of file
