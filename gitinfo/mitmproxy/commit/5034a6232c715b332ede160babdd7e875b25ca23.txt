commit 5034a6232c715b332ede160babdd7e875b25ca23
Author: Maximilian Hils <git@maximilianhils.com>
Date:   Mon Jul 18 21:23:50 2016 -0700

    web: remove SELECT_RELATIVE

diff --git a/web/src/js/__tests__/ducks/ui.js b/web/src/js/__tests__/ducks/ui.js
index 289192d9..ae2b75b9 100644
--- a/web/src/js/__tests__/ducks/ui.js
+++ b/web/src/js/__tests__/ducks/ui.js
@@ -68,6 +68,8 @@ function createTestStore(state) {
     )
 }
 
+
+// TODO: We should not duplicate our reducer logic here.
 function makeState(flows, selected) {
     return {
         flows: {
diff --git a/web/src/js/__tests__/ducks/views/main.js b/web/src/js/__tests__/ducks/views/main.js
index 0edbf68f..0255f6ce 100644
--- a/web/src/js/__tests__/ducks/views/main.js
+++ b/web/src/js/__tests__/ducks/views/main.js
@@ -61,6 +61,7 @@ function createTestStore(defaultState) {
     )
 }
 
+// TODO: We should not duplicate our reducer logic here.
 function makeState(flows, selected) {
     const list = {
         data: flows,
diff --git a/web/src/js/ducks/views/main.js b/web/src/js/ducks/views/main.js
index db9de619..0c401716 100755
--- a/web/src/js/ducks/views/main.js
+++ b/web/src/js/ducks/views/main.js
@@ -7,7 +7,6 @@ export const UPDATE_FILTER = 'FLOW_VIEWS_MAIN_UPDATE_FILTER'
 export const UPDATE_SORT = 'FLOW_VIEWS_MAIN_UPDATE_SORT'
 export const UPDATE_HIGHLIGHT = 'FLOW_VIEWS_MAIN_UPDATE_HIGHLIGHT'
 export const SELECT = 'FLOW_VIEWS_MAIN_SELECT'
-export const SELECT_RELATIVE = 'SELECT_RELATIVE'
 
 const sortKeyFuns = {
 
@@ -53,27 +52,6 @@ export default function reduce(state = defaultState, action) {
                 selected: [action.id]
             }
 
-        case SELECT_RELATIVE:
-            if(action.shift === null) {
-                return {
-                    ...state,
-                    selected: []
-                }
-            }
-            let id = state.selected[0]
-            let index = 0
-            if(!id && action.shift < 0) {
-                index = state.view.data.length - 1
-            } else if(id) {
-                index = state.view.indexOf[id] + action.shift
-                index = index < 0 ? 0 : index
-                index = index > state.view.data.length - 1 ? state.view.data.length - 1 : index
-            }
-            return {
-                ...state,
-                selected: [state.view.data[index].id]
-            }
-
         case UPDATE_FILTER:
             return {
                 ...state,
@@ -197,7 +175,18 @@ export function select(id) {
  */
 export function selectRelative(shift) {
     return (dispatch, getState) => {
-        dispatch({ type: SELECT_RELATIVE, currentSelection: getState().flows.views.main.selected[0], shift })
+        let currentSelection = getState().flows.views.main.selected[0]
+        let id
+        if (shift === null){
+            id = null
+        } else if (!currentSelection) {
+            id = (action.shift < 0) ? 0 : state.view.data.length - 1
+        } else {
+            id = state.view.indexOf[currentSelection] + action.shift
+            id = Math.max(id, 0)
+            id = Math.min(id, state.view.data.length - 1)
+        }
+        dispatch({ type: SELECT, currentSelection, id })
     }
 }
 
