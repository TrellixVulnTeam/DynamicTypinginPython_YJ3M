commit 2e633af5aaf340e8d43c8d2228af6fe6f2de2256
Author: Maximilian Hils <git@maximilianhils.com>
Date:   Sun May 29 13:01:45 2016 -0700

    handle_* -> * leftovers

diff --git a/examples/flowbasic b/examples/flowbasic
index 02a65b59..74af4e08 100755
--- a/examples/flowbasic
+++ b/examples/flowbasic
@@ -21,12 +21,12 @@ class MyMaster(flow.FlowMaster):
 
     @controller.handler
     def request(self, f):
-        f = flow.FlowMaster.handle_request(self, f)
+        f = flow.FlowMaster.request(self, f)
         print(f)
 
     @controller.handler
     def response(self, f):
-        f = flow.FlowMaster.handle_response(self, f)
+        f = flow.FlowMaster.response(self, f)
         print(f)
 
 
diff --git a/mitmproxy/console/__init__.py b/mitmproxy/console/__init__.py
index c3157292..1a70157a 100644
--- a/mitmproxy/console/__init__.py
+++ b/mitmproxy/console/__init__.py
@@ -731,28 +731,28 @@ class ConsoleMaster(flow.FlowMaster):
     # Handlers
     @controller.handler
     def error(self, f):
-        f = flow.FlowMaster.handle_error(self, f)
+        f = flow.FlowMaster.error(self, f)
         if f:
             self.process_flow(f)
         return f
 
     @controller.handler
     def request(self, f):
-        f = flow.FlowMaster.handle_request(self, f)
+        f = flow.FlowMaster.request(self, f)
         if f:
             self.process_flow(f)
         return f
 
     @controller.handler
     def response(self, f):
-        f = flow.FlowMaster.handle_response(self, f)
+        f = flow.FlowMaster.response(self, f)
         if f:
             self.process_flow(f)
         return f
 
     @controller.handler
     def script_change(self, script):
-        if super(ConsoleMaster, self).handle_script_change(script):
+        if super(ConsoleMaster, self).script_change(script):
             signals.status_message.send(message='"{}" reloaded.'.format(script.filename))
         else:
             signals.status_message.send(message='Error reloading "{}".'.format(script.filename))
diff --git a/mitmproxy/controller.py b/mitmproxy/controller.py
index e48f90e9..a9e101eb 100644
--- a/mitmproxy/controller.py
+++ b/mitmproxy/controller.py
@@ -24,6 +24,8 @@ Events = frozenset([
 
     "error",
     "log",
+
+    "script_change",
 ])
 
 
diff --git a/mitmproxy/flow.py b/mitmproxy/flow.py
index 407f0d7b..997a7830 100644
--- a/mitmproxy/flow.py
+++ b/mitmproxy/flow.py
@@ -810,7 +810,7 @@ class FlowMaster(controller.Master):
 
     def do_server_playback(self, flow):
         """
-            This method should be called by child classes in the handle_request
+            This method should be called by child classes in the request
             handler. Returns True if playback has taken place, None if not.
         """
         if self.server_playback:
@@ -1072,7 +1072,8 @@ class FlowMaster(controller.Master):
     def handle_accept_intercept(self, f):
         self.state.update_flow(f)
 
-    def handle_script_change(self, s):
+    @controller.handler
+    def script_change(self, s):
         """
         Handle a script whose contents have been changed on the file system.
 
diff --git a/mitmproxy/web/__init__.py b/mitmproxy/web/__init__.py
index f8102ed8..79c81687 100644
--- a/mitmproxy/web/__init__.py
+++ b/mitmproxy/web/__init__.py
@@ -198,17 +198,17 @@ class WebMaster(flow.FlowMaster):
 
     @controller.handler
     def request(self, f):
-        super(WebMaster, self).handle_request(f)
+        super(WebMaster, self).request(f)
         self._process_flow(f)
 
     @controller.handler
     def response(self, f):
-        super(WebMaster, self).handle_response(f)
+        super(WebMaster, self).response(f)
         self._process_flow(f)
 
     @controller.handler
     def error(self, f):
-        super(WebMaster, self).handle_error(f)
+        super(WebMaster, self).error(f)
         self._process_flow(f)
 
     def add_event(self, e, level="info"):
