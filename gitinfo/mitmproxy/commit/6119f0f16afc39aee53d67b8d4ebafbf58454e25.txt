commit 6119f0f16afc39aee53d67b8d4ebafbf58454e25
Author: Shadab Zafar <dufferzafar0@gmail.com>
Date:   Wed Jul 6 22:57:50 2016 +0530

    Exporters list

diff --git a/mitmproxy/console/common.py b/mitmproxy/console/common.py
index 5d15e0cd..1c71117a 100644
--- a/mitmproxy/console/common.py
+++ b/mitmproxy/console/common.py
@@ -285,15 +285,9 @@ def copy_flow_format_data(part, scope, flow):
 
 
 def export_prompt(k, f):
-    exporters = {
-        "c": flow.export.curl_command,
-        "p": flow.export.python_code,
-        "r": flow.export.raw_request,
-        "l": flow.export.locust_code,
-        "t": flow.export.locust_task,
-    }
-    if k in exporters:
-        copy_to_clipboard_or_prompt(exporters[k](f))
+    for exporter in flow.export.EXPORTERS:
+        if k == exporter[1]:
+            copy_to_clipboard_or_prompt(exporter[2](f))
 
 
 def copy_to_clipboard_or_prompt(data):
diff --git a/mitmproxy/console/flowlist.py b/mitmproxy/console/flowlist.py
index bc523874..e8bbe24d 100644
--- a/mitmproxy/console/flowlist.py
+++ b/mitmproxy/console/flowlist.py
@@ -5,6 +5,7 @@ import urwid
 import netlib.http.url
 from mitmproxy.console import common
 from mitmproxy.console import signals
+from mitmproxy.flow import export
 
 
 def _mkhelp():
@@ -269,13 +270,7 @@ class ConnectionItem(urwid.WidgetWrap):
             signals.status_prompt_onekey.send(
                 self,
                 prompt = "Export",
-                keys = (
-                    ("as curl command", "c"),
-                    ("as python code", "p"),
-                    ("as raw request", "r"),
-                    ("as locust code", "l"),
-                    ("as locust task", "t"),
-                ),
+                keys = [(e[0], e[1]) for e in export.EXPORTERS],
                 callback = common.export_prompt,
                 args = (self.flow,)
             )
diff --git a/mitmproxy/flow/export.py b/mitmproxy/flow/export.py
index deeeb998..1d9a0b27 100644
--- a/mitmproxy/flow/export.py
+++ b/mitmproxy/flow/export.py
@@ -197,3 +197,12 @@ def locust_task(flow):
     task_code = code[start_task:end_task]
 
     return task_code
+
+
+EXPORTERS = [
+    ("as curl command", "c", curl_command),
+    ("as python code", "p", python_code),
+    ("as raw request", "r", raw_request),
+    ("as locust code", "l", locust_code),
+    ("as locust task", "t", locust_task),
+]
