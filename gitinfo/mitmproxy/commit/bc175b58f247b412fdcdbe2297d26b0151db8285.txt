commit bc175b58f247b412fdcdbe2297d26b0151db8285
Author: Shadab Zafar <dufferzafar0@gmail.com>
Date:   Mon Aug 15 10:46:42 2016 +0530

    Use test times less than 2038
    
    So that tests pass on 32bit systems too

diff --git a/test/mitmproxy/test_examples.py b/test/mitmproxy/test_examples.py
index 99e1b34e..e03d34e9 100644
--- a/test/mitmproxy/test_examples.py
+++ b/test/mitmproxy/test_examples.py
@@ -163,5 +163,5 @@ class TestHARDump():
         assert f['httpOnly']
         assert f['secure']
 
-        f = format_cookies([("n", "v", CA([("expires", "Fri, 24-Aug-2063 00:00:00 GMT")]))])[0]
-        assert f['expires'] == "2063-08-24T05:30:00+00:00"
+        f = format_cookies([("n", "v", CA([("expires", "Mon, 24-Aug-2037 00:00:00 GMT")]))])[0]
+        assert f['expires'] == "2037-08-24T05:30:00+00:00"
diff --git a/test/netlib/http/test_cookies.py b/test/netlib/http/test_cookies.py
index 56e0b21b..efd8ba80 100644
--- a/test/netlib/http/test_cookies.py
+++ b/test/netlib/http/test_cookies.py
@@ -261,7 +261,7 @@ def test_get_expiration_ts(*args):
     F = cookies.get_expiration_ts
 
     assert F(CA([("Expires", "Thu, 01-Jan-1970 00:00:00 GMT")])) == 0
-    assert F(CA([("Expires", "Fri, 24-Aug-2063 00:00:00 GMT")])) == 2955139200
+    assert F(CA([("Expires", "Mon, 24-Aug-2037 00:00:00 GMT")])) == 2134684800
 
     assert F(CA([("Max-Age", "0")])) == now_ts
     assert F(CA([("Max-Age", "31")])) == now_ts + 31
@@ -280,9 +280,9 @@ def test_is_expired():
     # or both
     assert cookies.is_expired(CA([("Expires", "Thu, 01-Jan-1970 00:00:00 GMT"), ("Max-Age", "0")]))
 
-    assert not cookies.is_expired(CA([("Expires", "Fri, 24-Aug-2063 00:00:00 GMT")]))
+    assert not cookies.is_expired(CA([("Expires", "Mon, 24-Aug-2037 00:00:00 GMT")]))
     assert not cookies.is_expired(CA([("Max-Age", "1")]))
-    assert not cookies.is_expired(CA([("Expires", "Sun, 15-Jul-2068 00:00:00 GMT"), ("Max-Age", "1")]))
+    assert not cookies.is_expired(CA([("Expires", "Wed, 15-Jul-2037 00:00:00 GMT"), ("Max-Age", "1")]))
 
     assert not cookies.is_expired(CA([("Max-Age", "nan")]))
     assert not cookies.is_expired(CA([("Expires", "false")]))
