commit 25a06c3ec18a9ed49f34213024330aed59cb5322
Author: Aldo Cortesi <aldo@nullcube.com>
Date:   Mon Feb 20 10:15:58 2012 +1300

    Minor doc fixes and import cleanups.

diff --git a/doc-src/index.html b/doc-src/index.html
index 194ed92d..f7aabe05 100644
--- a/doc-src/index.html
+++ b/doc-src/index.html
@@ -3,11 +3,12 @@
     <li><a href="@!urlTo("intro.html")!@">Introduction</a></li>
     <li><a href="@!urlTo("mitmproxy.html")!@">mitmproxy</a></li>
     <li><a href="@!urlTo("mitmdump.html")!@">mitmdump</a></li>
-    <li>Concepts</li>
+    <li>Features</li>
     <ul>
         <li><a href="@!urlTo("clientreplay.html")!@">Client-side replay</a></li>
         <li><a href="@!urlTo("serverreplay.html")!@">Server-side replay</a></li>
         <li><a href="@!urlTo("sticky.html")!@">Sticky cookies and auth</a></li>
+        <li><a href="@!urlTo("reverseproxy.html")!@">Reverse proxy mode</a></li>
         <li><a href="@!urlTo("anticache.html")!@">Anticache</a></li>
         <li><a href="@!urlTo("filters.html")!@">Filter expressions</a></li>
     </ul>
diff --git a/doc-src/index.py b/doc-src/index.py
index bf21f5f1..10cc3b36 100644
--- a/doc-src/index.py
+++ b/doc-src/index.py
@@ -73,6 +73,7 @@ pages = [
     Page("clientreplay.html", "Client-side replay"),
     Page("serverreplay.html", "Server-side replay"),
     Page("sticky.html", "Sticky cookies and auth"),
+    Page("reverseproxy.html", "Reverse proxy mode"),
     Page("anticache.html", "Anticache"),
     Page("filters.html", "Filter expressions"),
     Page("scripts.html", "Scripts"),
diff --git a/doc-src/reverseproxy.html b/doc-src/reverseproxy.html
new file mode 100644
index 00000000..e69de29b
diff --git a/libmproxy/console/__init__.py b/libmproxy/console/__init__.py
index ca80d013..38d9223a 100644
--- a/libmproxy/console/__init__.py
+++ b/libmproxy/console/__init__.py
@@ -13,11 +13,10 @@
 # You should have received a copy of the GNU General Public License
 # along with this program.  If not, see <http://www.gnu.org/licenses/>.
 
-import mailcap, mimetypes, tempfile, os, subprocess, glob, time, re
+import mailcap, mimetypes, tempfile, os, subprocess, glob, time
 import os.path, sys
-import cStringIO
 import urwid
-from .. import controller, utils, filt, flow
+from .. import controller, utils, flow
 import connlist, connview, help, common, kveditor, palettes
 
 EVENTLOG_SIZE = 500
@@ -177,18 +176,17 @@ class StatusBar(common.WWrap):
         t = [
                 ('heading', ("[%s]"%self.master.state.flow_count()).ljust(7)),
             ]
-        t.extend(self.get_status())
-
         if self.master.server:
             boundaddr = "[%s:%s]"%(self.master.server.address or "*", self.master.server.port)
         else:
             boundaddr = ""
-
+        t.extend(self.get_status())
         status = urwid.AttrWrap(urwid.Columns([
             urwid.Text(t),
             urwid.Text(
                 [
                     self.helptext,
+                    boundaddr
                 ],
                 align="right"
             ),
diff --git a/libmproxy/flow.py b/libmproxy/flow.py
index 66cb4790..024d23e6 100644
--- a/libmproxy/flow.py
+++ b/libmproxy/flow.py
@@ -1429,7 +1429,7 @@ class FlowReader:
                 data = tnetstring.load(self.fo)
                 off = self.fo.tell()
                 yield Flow._from_state(data)
-        except ValueError, v:
+        except ValueError:
             # Error is due to EOF
             if self.fo.tell() == off and self.fo.read() == '':
                 return
