commit 08f44b9fad2c0922a9f3dfa7835f3be59c5e6f52
Author: Aldo Cortesi <aldo@nullcube.com>
Date:   Sun Feb 21 11:41:59 2016 +1300

    Doc tweaks
    
    This patch does the following:
    
    - Fixes all warnings in the doc tree
    - Adds a modd + devd conf file that renders HTML and treats doc warnings as
    errors. This lets you send warning output to your desktop notifier, and gives
    livereload similar to the livehtml entry in the Makefile.
    - Some small tweaks
    
    Sphinx currently has a bug that causes unknown options to generate a warning:
    
    https://github.com/sphinx-doc/sphinx/issues/2229
    
    This is fixed in stable, but not yet released. You can update Sphinx to the
    latest stable like so:
    
    pip install --upgrade https://github.com/sphinx-doc/sphinx/archive/stable.zip

diff --git a/docs/dev/sslkeylogfile.rst b/docs/dev/sslkeylogfile.rst
index 04b86cc4..cb1f8f09 100644
--- a/docs/dev/sslkeylogfile.rst
+++ b/docs/dev/sslkeylogfile.rst
@@ -8,6 +8,7 @@ connections both from and to the proxy. Key logging is enabled by setting the en
 :envvar:`SSLKEYLOGFILE` so that it points to a writable text file.
 Recent versions of WireShark can use these log files to decrypt packets.
 You can specify the key file path in WireShark via
+
 :samp:`Edit -> Preferences -> Protocols -> SSL -> (Pre)-Master-Secret log filename`.
 
 Note that :envvar:`SSLKEYLOGFILE` is respected by other programs as well, e.g. Firefox and Chrome.
diff --git a/docs/howmitmproxy.rst b/docs/howmitmproxy.rst
index b0b187d3..93602afe 100644
--- a/docs/howmitmproxy.rst
+++ b/docs/howmitmproxy.rst
@@ -18,7 +18,7 @@ the client and the server is well defined, and usually reliable. In the
 simplest possible interaction with mitmproxy, a client connects directly to the
 proxy, and makes a request that looks like this:
 
-.. code-block:: http
+.. code-block:: none
 
     GET http://example.com/index.html HTTP/1.1
 
@@ -39,7 +39,7 @@ Explicit HTTPS
 The process for an explicitly proxied HTTPS connection is quite different. The
 client connects to the proxy and makes a request that looks like this:
 
-.. code-block:: http
+.. code-block:: none
 
     CONNECT example.com:443 HTTP/1.1
 
@@ -80,7 +80,7 @@ blush, it seems that the CONNECT request above gives us all we need - in this
 example, both of these values are "example.com".  But what if the client had
 initiated the connection as follows:
 
-.. code-block:: http
+.. code-block:: none
 
     CONNECT 10.1.1.1:443 HTTP/1.1
 
@@ -169,7 +169,7 @@ form of a firewall on the same host as the proxy server - `iptables`_ on Linux o
 pf_ on OSX. Once the client has initiated the connection, it makes a vanilla HTTP request,
 which might look something like this:
 
-.. code-block:: http
+.. code-block:: none
 
     GET /index.html HTTP/1.1
 
diff --git a/docs/mitmproxy.rst b/docs/mitmproxy.rst
index fa3b57c7..922a6540 100644
--- a/docs/mitmproxy.rst
+++ b/docs/mitmproxy.rst
@@ -4,7 +4,6 @@
 mitmproxy
 =========
 
-
 **mitmproxy** is a console tool that allows interactive examination and
 modification of HTTP traffic. It differs from mitmdump in that all flows are
 kept in memory, which means that it's intended for taking and manipulating
diff --git a/docs/modd.conf b/docs/modd.conf
new file mode 100644
index 00000000..bc91238c
--- /dev/null
+++ b/docs/modd.conf
@@ -0,0 +1,6 @@
+@build = ./_build
+
+** !_build/** ../netlib/**/*.py ../mitmproxy/**/*.py {
+    prep: sphinx-build -W -d @build/doctrees -b html . @build/html
+    daemon: devd -m @build/html
+}
diff --git a/docs/scripting/mitmproxy.rst b/docs/scripting/mitmproxy.rst
index 1626eb5a..73450df5 100644
--- a/docs/scripting/mitmproxy.rst
+++ b/docs/scripting/mitmproxy.rst
@@ -1,4 +1,3 @@
-.. _mitmproxy:
 
 mitmproxy
 =========
