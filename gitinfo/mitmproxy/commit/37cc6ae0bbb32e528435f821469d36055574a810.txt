commit 37cc6ae0bbb32e528435f821469d36055574a810
Author: Maximilian Hils <git@maximilianhils.com>
Date:   Sun Oct 19 01:26:08 2014 +0200

    fix race conditions in tests

diff --git a/libmproxy/flow.py b/libmproxy/flow.py
index 5c3a0c7e..d313c94a 100644
--- a/libmproxy/flow.py
+++ b/libmproxy/flow.py
@@ -662,6 +662,8 @@ class FlowMaster(controller.Master):
         """
             Returns None if successful, or error message if not.
         """
+        if f.live:
+            return "Can't replay request which is still live..."
         if f.intercepting:
             return "Can't replay while intercepting..."
         if f.request.content == http.CONTENT_MISSING:
diff --git a/test/test_flow.py b/test/test_flow.py
index f0844536..92c5b19d 100644
--- a/test/test_flow.py
+++ b/test/test_flow.py
@@ -600,6 +600,9 @@ class TestFlowMaster:
         f.intercepting = True
         assert "intercepting" in fm.replay_request(f)
 
+        f.live = True
+        assert "live" in fm.replay_request(f)
+
     def test_script_reqerr(self):
         s = flow.State()
         fm = flow.FlowMaster(None, s)
diff --git a/test/test_server.py b/test/test_server.py
index 6035b3a4..c81eab2b 100644
--- a/test/test_server.py
+++ b/test/test_server.py
@@ -19,6 +19,17 @@ class CommonMixin:
     def test_large(self):
         assert len(self.pathod("200:b@50k").content) == 1024*50
 
+    @staticmethod
+    def wait_until_not_live(flow):
+        """
+        Race condition: We don't want to replay the flow while it is still live.
+        """
+        s = time.time()
+        while flow.live:
+            time.sleep(0.001)
+            if time.time() - s > 5:
+                raise RuntimeError("Flow is live for too long.")
+
     def test_replay(self):
         assert self.pathod("304").status_code == 304
         if isinstance(self, tservers.HTTPUpstreamProxTest) and self.ssl:
@@ -28,6 +39,7 @@ class CommonMixin:
         l = self.master.state.view[-1]
         assert l.response.code == 304
         l.request.path = "/p/305"
+        self.wait_until_not_live(l)
         rt = self.master.replay_request(l, block=True)
         assert l.response.code == 305
 
