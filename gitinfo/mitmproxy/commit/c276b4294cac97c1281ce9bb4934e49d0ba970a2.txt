commit c276b4294cac97c1281ce9bb4934e49d0ba970a2
Author: Maximilian Hils <git@maximilianhils.com>
Date:   Sat Feb 15 23:16:28 2014 +0100

    allow super() on TCPServer, add thread names for better debugging

diff --git a/netlib/http_auth.py b/netlib/http_auth.py
index be99fb3d..b0451e3b 100644
--- a/netlib/http_auth.py
+++ b/netlib/http_auth.py
@@ -1,4 +1,4 @@
-import contrib.md5crypt as md5crypt
+from .contrib import md5crypt
 import http
 from argparse import Action, ArgumentTypeError
 
diff --git a/netlib/tcp.py b/netlib/tcp.py
index 34e47999..5c351bae 100644
--- a/netlib/tcp.py
+++ b/netlib/tcp.py
@@ -380,7 +380,7 @@ class BaseHandler(SocketCloseMixin):
 
 
 
-class TCPServer:
+class TCPServer(object):
     request_queue_size = 20
     def __init__(self, address):
         self.address = Address.wrap(address)
@@ -416,7 +416,10 @@ class TCPServer:
                     connection, client_address = self.socket.accept()
                     t = threading.Thread(
                             target = self.connection_thread,
-                            args = (connection, client_address)
+                            args = (connection, client_address),
+                            name = "ConnectionThread (%s:%s -> %s:%s)" %
+                                   (client_address[0], client_address[1],
+                                    self.address.host, self.address.port)
                         )
                     t.setDaemon(1)
                     t.start()
@@ -443,7 +446,7 @@ class TCPServer:
             print >> fp, exc
             print >> fp, '-'*40
 
-    def handle_client_connection(self, conn, client_address): # pragma: no cover
+    def handle_client_connection(self, conn, client_address):  # pragma: no cover
         """
             Called after client connection.
         """
