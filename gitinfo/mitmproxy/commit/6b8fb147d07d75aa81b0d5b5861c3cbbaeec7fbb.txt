commit 6b8fb147d07d75aa81b0d5b5861c3cbbaeec7fbb
Author: Marcelo Glezer <mg@tekii.com.ar>
Date:   Wed Jan 14 14:45:19 2015 -0300

    used get_decoded_content and removed decode call from headers as max suggested

diff --git a/libmproxy/console/flowlist.py b/libmproxy/console/flowlist.py
index d48f75a4..236bd508 100644
--- a/libmproxy/console/flowlist.py
+++ b/libmproxy/console/flowlist.py
@@ -141,12 +141,12 @@ class ConnectionItem(common.WWrap):
     def server_copy_response(self, k):
         if k == "c":
             try:
-                pyperclip.copy(self.flow.response_content())
+                pyperclip.copy(self.flow.response.get_decoded_content())
             except TypeError:
                 self.master.statusbar.message("Content is binary or can be converted to text")
         elif k == "h":
             try:
-                pyperclip.copy(self.flow.response_headers())
+                pyperclip.copy(str(self.flow.response.headers))
             except TypeError:
                 self.master.statusbar.message("Error converting headers to text")
 
diff --git a/libmproxy/console/flowview.py b/libmproxy/console/flowview.py
index 25b085c3..08a0148f 100644
--- a/libmproxy/console/flowview.py
+++ b/libmproxy/console/flowview.py
@@ -652,12 +652,12 @@ class FlowView(common.WWrap):
     def server_copy_response(self, k):
         if k == "c":
             try:
-                pyperclip.copy(self.flow.response_content())
+                pyperclip.copy(self.flow.response.get_decoded_content())
             except TypeError:
                 self.master.statusbar.message("Content is binary or can be converted to text")
         elif k == "h":
             try:
-                pyperclip.copy(self.flow.response_headers())
+                pyperclip.copy(str(self.flow.response.headers))
             except TypeError:
                 self.master.statusbar.message("Error converting headers to text")
 
diff --git a/libmproxy/protocol/http.py b/libmproxy/protocol/http.py
index 9846fc5b..50691ea2 100644
--- a/libmproxy/protocol/http.py
+++ b/libmproxy/protocol/http.py
@@ -953,16 +953,6 @@ class HTTPFlow(Flow):
             c += self.response.replace(pattern, repl, *args, **kwargs)
         return c
 
-    def response_content(self):
-        with decoded(self.response):
-            s = self.response.content
-        return s
-
-    def response_headers(self):
-        with decoded(self.response):
-            s = str(self.response.headers) 
-        return s
-
 class HttpAuthenticationError(Exception):
     def __init__(self, auth_headers=None):
         super(HttpAuthenticationError, self).__init__(
