commit 6e41507d629bb01b88e3e4d09789e1f4c87c89c7
Author: Maximilian Hils <git@maximilianhils.com>
Date:   Tue Jul 31 14:11:37 2018 +0200

    Update README.md

diff --git a/release/README.md b/release/README.md
index 6f4e8f1a..ab15f39f 100644
--- a/release/README.md
+++ b/release/README.md
@@ -4,16 +4,16 @@ Make sure to run all these steps on the correct branch you want to create a new
 release for! The command examples assume that you have a git remote called
 `upstream` that points to the `mitmproxy/mitmproxy` repo.
 
-- Verify that `mitmproxy/version.py` is correct
-- Update CHANGELOG
-- Verify that all CI tests pass
+- Verify that `mitmproxy/version.py` is correct.
+- Update CHANGELOG.
+- Verify that all CI tests pass.
 - If needed, create a major version branch - e.g. `v4.x`. Assuming you have a remote repo called `upstream` that points to the mitmproxy/mitmproxy repo::
   - `git checkout -b v4.x upstream/master`
   - `git push -u upstream v4.x`
-- Tag the release and push to Github
+- Tag the release and push to Github.
     - `git tag v4.0.0`
     - `git push upstream v4.0.0`
-- Wait for tag CI to complete
+- Wait for tag CI to complete.
 
 ## GitHub Release
 - Create release notice on Github
@@ -21,11 +21,11 @@ release for! The command examples assume that you have a git remote called
   auto-created by the tag.
 - We DO NOT upload release artifacts to GitHub anymore. Simply add the
   following snippet to the notice:
-  `You can find the latest release packages on our snapshot server: https://snapshots.mitmproxy.org/v<version number here>`
+  `You can find the latest release packages at https://mitmproxy.org/downloads/.`
 
 ## PyPi
-- The created wheel is uploaded to PyPi automatically
-- Please check https://pypi.python.org/pypi/mitmproxy about the latest version
+- The created wheel is uploaded to PyPi automatically.
+- Please check https://pypi.python.org/pypi/mitmproxy about the latest version.
 
 ## Homebrew
 - The Homebrew maintainers are typically very fast and detect our new relese
@@ -35,14 +35,14 @@ release for! The command examples assume that you have a git remote called
 
 ## Docker
 - The docker image is built on Travis and pushed to Docker Hub automatically.
-- Please check https://hub.docker.com/r/mitmproxy/mitmproxy/tags/ about the latest version
-- Update `latest` tag: `export VERSION=4.0.3 && docker pull mitmproxy/mitmproxy:$VERSION && docker tag mitmproxy/mitmproxy:$VERSION mitmproxy/mitmproxy:latest && docker push mitmproxy/mitmproxy:latest`
+- Please check https://hub.docker.com/r/mitmproxy/mitmproxy/tags/ about the latest version.
+- Update `latest` tag: `export VERSION=4.0.3 && docker pull mitmproxy/mitmproxy:$VERSION && docker tag mitmproxy/mitmproxy:$VERSION mitmproxy/mitmproxy:latest && docker push mitmproxy/mitmproxy:latest`.
 
 ## Website
  - Update version here:
    https://github.com/mitmproxy/www/blob/master/src/config.toml
- - Run `./build && ./upload-test`
- - If everything looks alright, run `./upload-prod`
+ - Run `./build && ./upload-test`.
+ - If everything looks alright at http://www-test.mitmproxy.org, run `./upload-prod`.
 
 ## Docs
   - Make sure you've uploaded the previous version's docs to archive
