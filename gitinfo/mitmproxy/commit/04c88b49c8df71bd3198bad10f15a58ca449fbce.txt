commit 04c88b49c8df71bd3198bad10f15a58ca449fbce
Author: Itai Sadan <itaisod@gmail.com>
Date:   Sat Jan 18 12:00:23 2020 +0200

    remove status_message.send where log.error has the same effect

diff --git a/mitmproxy/tools/console/commandexecutor.py b/mitmproxy/tools/console/commandexecutor.py
index 697c616c..1c6d5aa6 100644
--- a/mitmproxy/tools/console/commandexecutor.py
+++ b/mitmproxy/tools/console/commandexecutor.py
@@ -17,9 +17,7 @@ class CommandExecutor:
             try:
                 ret = self.master.commands.execute(cmd)
             except exceptions.CommandError as e:
-                msg = str(e)
-                ctx.log.error(msg)
-                signals.status_message.send(message=msg)
+                ctx.log.error(str(e))
             else:
                 if ret:
                     if type(ret) == typing.Sequence[flow.Flow]:
diff --git a/mitmproxy/tools/console/consoleaddons.py b/mitmproxy/tools/console/consoleaddons.py
index 617ac5e5..905653e7 100644
--- a/mitmproxy/tools/console/consoleaddons.py
+++ b/mitmproxy/tools/console/consoleaddons.py
@@ -252,9 +252,7 @@ class ConsoleAddon:
             try:
                 self.master.commands.call_strings(cmd, repl)
             except exceptions.CommandError as e:
-                msg = str(e)
-                ctx.log.error(msg)
-                signals.status_message.send(message=msg)
+                ctx.log.error(str(e))
 
         self.master.overlay(
             overlay.Chooser(self.master, prompt, choices, "", callback)
@@ -281,9 +279,7 @@ class ConsoleAddon:
             try:
                 self.master.commands.call_strings(subcmd, repl)
             except exceptions.CommandError as e:
-                msg = str(e)
-                ctx.log.error(msg)
-                signals.status_message.send(message=msg)
+                ctx.log.error(str(e))
 
         self.master.overlay(
             overlay.Chooser(self.master, prompt, choices, "", callback)
@@ -547,9 +543,7 @@ class ConsoleAddon:
                 ["@focus", "flowview_mode_%s" % (idx,), mode]
             )
         except exceptions.CommandError as e:
-            msg = str(e)
-            ctx.log.error(msg)
-            signals.status_message.send(message=msg)
+            ctx.log.error(str(e))
 
     @command.command("console.flowview.mode.options")
     def flowview_mode_options(self) -> typing.Sequence[str]:
