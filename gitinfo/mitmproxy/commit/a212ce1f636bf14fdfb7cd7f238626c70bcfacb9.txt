commit a212ce1f636bf14fdfb7cd7f238626c70bcfacb9
Author: Maximilian Hils <git@maximilianhils.com>
Date:   Thu Jul 7 02:30:25 2016 -0700

    py3++

diff --git a/mitmproxy/console/common.py b/mitmproxy/console/common.py
index b450c19d..470db88d 100644
--- a/mitmproxy/console/common.py
+++ b/mitmproxy/console/common.py
@@ -4,6 +4,7 @@ import os
 
 import urwid
 import urwid.util
+import six
 
 import netlib
 from mitmproxy import flow
@@ -108,7 +109,7 @@ def shortcuts(k):
 
 
 def fcol(s, attr):
-    s = unicode(s)
+    s = six.text_type(s)
     return (
         "fixed",
         len(s),
diff --git a/mitmproxy/console/flowdetailview.py b/mitmproxy/console/flowdetailview.py
index 2a493b90..0a03e1c4 100644
--- a/mitmproxy/console/flowdetailview.py
+++ b/mitmproxy/console/flowdetailview.py
@@ -71,7 +71,7 @@ def flowdetails(state, flow):
                 parts.append(
                     [
                         "Alt names",
-                        ", ".join(c.altnames)
+                        ", ".join(str(x) for x in c.altnames)
                     ]
                 )
             text.extend(
diff --git a/mitmproxy/console/flowview.py b/mitmproxy/console/flowview.py
index e9b23176..d809cf34 100644
--- a/mitmproxy/console/flowview.py
+++ b/mitmproxy/console/flowview.py
@@ -257,7 +257,7 @@ class FlowView(tabs.Tabs):
     def conn_text(self, conn):
         if conn:
             txt = common.format_keyvals(
-                [(h + ":", v) for (h, v) in conn.headers.fields],
+                [(h + ":", v) for (h, v) in conn.headers.items(multi=True)],
                 key = "header",
                 val = "text"
             )
diff --git a/mitmproxy/models/http.py b/mitmproxy/models/http.py
index 01f5f1ee..8aeb84d6 100644
--- a/mitmproxy/models/http.py
+++ b/mitmproxy/models/http.py
@@ -220,7 +220,7 @@ class HTTPFlow(Flow):
             If f is a string, it will be compiled as a filter expression. If
             the expression is invalid, ValueError is raised.
         """
-        if isinstance(f, basestring):
+        if isinstance(f, str):
             from .. import filt
 
             f = filt.parse(f)
