commit c21ee90debe13154f4d34aed1f088796a2d0c02c
Author: Maximilian Hils <git@maximilianhils.com>
Date:   Fri Jan 6 00:58:21 2017 +0100

    add strutils.replace_surrogates

diff --git a/mitmproxy/utils/strutils.py b/mitmproxy/utils/strutils.py
index 29465615..9c5e6bc8 100644
--- a/mitmproxy/utils/strutils.py
+++ b/mitmproxy/utils/strutils.py
@@ -25,6 +25,17 @@ def always_str(str_or_bytes: Optional[AnyStr], *decode_args) -> Optional[str]:
         raise TypeError("Expected str or bytes, but got {}.".format(type(str_or_bytes).__name__))
 
 
+def replace_surrogates(text: str, errors='replace') -> str:
+    """Convert surrogates to replacement characters (e.g., "\udc80" becomes "�")
+    by applying a different error handler.
+
+    Uses the "replace" error handler by default, but any input
+    error handler may be specified.
+
+    For an introduction to surrogateescape, see https://www.python.org/dev/peps/pep-0383/.
+    """
+    return text.encode('utf-8', 'surrogateescape').decode('utf-8', errors)
+
 # Translate control characters to "safe" characters. This implementation initially
 # replaced them with the matching control pictures (http://unicode.org/charts/PDF/U2400.pdf),
 # but that turned out to render badly with monospace fonts. We are back to "." therefore.
diff --git a/test/mitmproxy/utils/test_strutils.py b/test/mitmproxy/utils/test_strutils.py
index 1372d31f..1fb4949f 100644
--- a/test/mitmproxy/utils/test_strutils.py
+++ b/test/mitmproxy/utils/test_strutils.py
@@ -19,6 +19,11 @@ def test_always_str():
     assert strutils.always_str(None) is None
 
 
+def test_replace_surrogates():
+    assert strutils.replace_surrogates("foo") == "foo"
+    assert strutils.replace_surrogates("bar \udc80 baz") == "bar � baz"
+
+
 def test_escape_control_characters():
     assert strutils.escape_control_characters(u"one") == u"one"
     assert strutils.escape_control_characters(u"\00ne") == u".ne"
