commit de73927896fabe57a489f2e9f2979070a6831373
Author: Aldo Cortesi <aldo@nullcube.com>
Date:   Sat Mar 19 12:47:37 2011 +1300

    Docs and todo.

diff --git a/doc-src/faq.html b/doc-src/faq.html
index daca2b82..16b75d12 100644
--- a/doc-src/faq.html
+++ b/doc-src/faq.html
@@ -1,9 +1,17 @@
 
 <div class="faq">
 
-    <p class="question">Any tips for running mitmproxy on OSX?</p>
+<p class="question">Any tips for running mitmproxy on OSX?</p>
 
-    Coming soon.
+You can use the OSX <b>open</b> program to create a simple and effective
+<b>~/.mailcap</b> file to view HTTP bodies:
+
+<pre>
+application/*; /usr/bin/open -Wn %s
+audio/*; /usr/bin/open -Wn %s
+image/*; /usr/bin/open -Wn %s
+video/*; /usr/bin/open -Wn %s
+</pre>
 
 
 </div>
diff --git a/todo b/todo
index cf964cc8..be2958d6 100644
--- a/todo
+++ b/todo
@@ -1,9 +1,26 @@
 
-Futures:
+This is a loose collection of todo items, in case someone else wants to start
+hacking on mitmproxy. Drop me a line (aldo@corte.si) if you want to tackle any
+of these and need some pointers.
 
+Features:
+
+    - Support for content encodings. At the moment, we sidestep this by
+    stripping headers that indicate accepted encodings. In theory, this should
+    force servers to serve us content uncompressed, but that's not always the
+    case. Besides, we should try to modify requests as little as possible, so
+    direct support for deflate and gzip is the way to go.
+    - Add some "workspace" features to mitmproxy:
+        - Flow comments
+        - Copying/duplicating flows
+        - Ordering by time, size, etc. a-la-mutt (o keyboard shorcut is reserved for this)
     - Post and URL field parsing and editing.
-    - Upstream proxies.
+        - We need a built-in graphical editor for these, that knows how to
+        break fields up and present them for modificatio individually.
+    - No-proxy mode, for when we want to just replay without serving as a proxy ourselves.
+    - Upstream proxy support.
     - Strings view for binary responses.
+    - Chunked encoding support for requests (we already support it for responses).
     - Better manipulation of flows in mitmproxy: copying flows, adding
     comments.
 
