commit b6727bf7d284cb51d765376e474dd93f44281730
Author: Aldo Cortesi <aldo@nullcube.com>
Date:   Sun Mar 17 10:35:40 2013 +1300

    Add instructions for installing the CA in the IOS Simulator.

diff --git a/doc-src/02-docstyle.css b/doc-src/02-docstyle.css
index 19b1ec96..97ab6e4b 100644
--- a/doc-src/02-docstyle.css
+++ b/doc-src/02-docstyle.css
@@ -18,4 +18,8 @@ pre {
 
 .tablenum {
     font-weight: bold;
+} 
+
+.nowrap {
+ white-space: nowrap;
 }
diff --git a/doc-src/_layout.html b/doc-src/_layout.html
index 4f5ff385..71b15fd2 100644
--- a/doc-src/_layout.html
+++ b/doc-src/_layout.html
@@ -37,12 +37,13 @@
                 $!nav("reverseproxy.html", this, state)!$
                 $!nav("upstreamcerts.html", this, state)!$
 
-            <li class="nav-header">SSL interception</li>
+            <li class="nav-header">Installing Certificates</li>
                 $!nav("ssl.html", this, state)!$
                 $!nav("certinstall/firefox.html", this, state)!$
                 $!nav("certinstall/osx.html", this, state)!$
                 $!nav("certinstall/windows7.html", this, state)!$
                 $!nav("certinstall/ios.html", this, state)!$
+                $!nav("certinstall/ios-simulator.html", this, state)!$
                 $!nav("certinstall/android.html", this, state)!$
 
             <li class="nav-header">Transparent Proxying</li>
diff --git a/doc-src/certinstall/index.py b/doc-src/certinstall/index.py
index 8ba3b7df..3f145fbc 100644
--- a/doc-src/certinstall/index.py
+++ b/doc-src/certinstall/index.py
@@ -5,5 +5,6 @@ pages = [
     Page("osx.html", "OSX"),
     Page("windows7.html", "Windows 7"),
     Page("ios.html", "IOS"),
+    Page("ios-simulator.html", "IOS Simulator"),
     Page("android.html", "Android"),
 ]
diff --git a/doc-src/certinstall/ios-simulator.html b/doc-src/certinstall/ios-simulator.html
new file mode 100644
index 00000000..0cef63f8
--- /dev/null
+++ b/doc-src/certinstall/ios-simulator.html
@@ -0,0 +1,23 @@
+
+How to install the __mitmproxy__ certificate authority in the IOS simulator:
+
+<ol>
+
+    <li> First, check out the <a
+    href="https://github.com/ADVTOOLS/ADVTrustStore">ADVTrustStore</a> tool
+    from github.</li>
+
+    <li> Now, run the following command:
+
+    <pre class="terminal">./iosCertTrustManager.py -a ~/.mitmproxy/mitmproxy-ca-cert.pem</pre>
+
+    </li>
+
+</ol>
+
+
+Note that although the IOS simulator has its own certificate store, it shares
+the proxy settings of the host operating system. You will therefore to have
+configure your OSX host's proxy settings to use the mitmproxy instance you want
+to test with.
+
diff --git a/doc-src/ssl.html b/doc-src/ssl.html
index 8708fe6f..acb20bfc 100644
--- a/doc-src/ssl.html
+++ b/doc-src/ssl.html
@@ -1,24 +1,24 @@
 
-The first time __mitmproxy__ or __mitmdump__ is started, the following set of
-certificate files for a dummy Certificate Authority are created in the config
-directory (~/.mitmproxy by default): 
+The first time __mitmproxy__ or __mitmdump__ is run, a set of certificate files
+for the mitmproxy Certificate Authority are created in the config directory
+(~/.mitmproxy by default). The files are as follows: 
 
 <table class="table">
     <tr>
-        <td>mitmproxy-ca.pem</td>
+        <td class="nowrap">mitmproxy-ca.pem</td>
         <td>The private key and certificate in PEM format.</td>
     </tr>
     <tr>
-        <td>mitmproxy-ca-cert.pem</td>
+        <td class="nowrap">mitmproxy-ca-cert.pem</td>
         <td>The certificate in PEM format. Use this to distribute to most
         non-Windows platforms.</td>
     </tr>
     <tr>
-        <td>mitmproxy-ca-cert.p12</td>
+        <td class="nowrap">mitmproxy-ca-cert.p12</td>
         <td>The certificate in PKCS12 format. For use on Windows.</td>
     </tr>
     <tr>
-        <td>mitmproxy-ca-cert.cer</td>
+        <td class="nowrap">mitmproxy-ca-cert.cer</td>
         <td>Same file as .pem, but with an extension expected by some Android
         devices.</td>
     </tr>
@@ -29,16 +29,9 @@ interception. Since your browser won't trust the __mitmproxy__ CA out of the
 box (and rightly so), you will see an SSL cert warning every time you visit a
 new SSL domain through __mitmproxy__. When you're testing a single site through
 a browser, just accepting the bogus SSL cert manually is not too much trouble,
-but there are a number of cases where you will want to configure your testing
-system or browser to trust the __mitmproxy__ CA as a signing root authority:
-
-- If you are testing non-browser software that checks SSL cert validity using
-the system certificate store.
-- You are testing an app that makes non-interactive (JSONP, script src, etc.)
-requests to SSL resources. Another workaround in this case is to manually visit
-the page through the browser, and add a certificate exception.
-- You just don't want to deal with the hassle of continuously adding cert
-exceptions.
+but there are a many circumstances where you will want to configure your
+testing system or browser to trust the __mitmproxy__ CA as a signing root
+authority.
 
 
 Installing the mitmproxy CA
@@ -48,4 +41,5 @@ Installing the mitmproxy CA
 * [OSX](@!urlTo("certinstall/osx.html")!@)
 * [Windows 7](@!urlTo("certinstall/windows7.html")!@)
 * [iPhone/iPad](@!urlTo("certinstall/ios.html")!@)
+* [IOS Simulator](@!urlTo("certinstall/ios-simulator.html")!@)
 
