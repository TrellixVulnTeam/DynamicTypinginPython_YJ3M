commit a6f6f8cd3226de3c89ec9d6cdeab972c88b94a18
Author: Matthew Shao <me@matshao.com>
Date:   Mon Jan 8 21:51:03 2018 +0800

    Raise a CommandError for the exception

diff --git a/mitmproxy/addons/view.py b/mitmproxy/addons/view.py
index 68a3a72b..c3fb4b88 100644
--- a/mitmproxy/addons/view.py
+++ b/mitmproxy/addons/view.py
@@ -444,8 +444,7 @@ class View(collections.Sequence):
         try:
             req = http.HTTPRequest.make(method.upper(), url)
         except ValueError as e:
-            ctx.log.error(e)
-            return
+            raise exceptions.CommandError("Invalid URL: %s" % e)
         c = connections.ClientConnection.make_dummy(("", 0))
         s = connections.ServerConnection.make_dummy((req.host, req.port))
         f = http.HTTPFlow(c, s)
diff --git a/test/mitmproxy/addons/test_view.py b/test/mitmproxy/addons/test_view.py
index 72f1a0fb..a95d059d 100644
--- a/test/mitmproxy/addons/test_view.py
+++ b/test/mitmproxy/addons/test_view.py
@@ -147,9 +147,10 @@ def test_create():
         assert v[0].request.url == "http://foo.com/"
         v.create("get", "http://foo.com")
         assert len(v) == 2
-        v.create("get", "http://foo.com\\")
-        v.create("get", "http://")
-        assert len(v) == 2
+        with pytest.raises(exceptions.CommandError, match="Invalid URL"):
+            v.create("get", "http://foo.com\\")
+        with pytest.raises(exceptions.CommandError, match="Invalid URL"):
+            v.create("get", "http://")
 
 
 def test_orders():
