commit 3f5ec4b73739340891a727a228cefdac727ec882
Author: Aldo Cortesi <aldo@nullcube.com>
Date:   Sun May 3 12:54:25 2015 +1200

    PreValue -> Value

diff --git a/libpathod/language/base.py b/libpathod/language/base.py
index d80eec99..351c9a4b 100644
--- a/libpathod/language/base.py
+++ b/libpathod/language/base.py
@@ -345,7 +345,7 @@ class Integer(_Component):
         return self
 
 
-class PreValue(_Component):
+class Value(_Component):
     """
         A value component lead by an optional preamble.
     """
diff --git a/libpathod/language/http.py b/libpathod/language/http.py
index 800d9f08..ba43a367 100644
--- a/libpathod/language/http.py
+++ b/libpathod/language/http.py
@@ -16,7 +16,7 @@ class Raw(base.CaselessLiteral):
     TOK = "r"
 
 
-class Path(base.PreValue):
+class Path(base.Value):
     pass
 
 
@@ -24,11 +24,11 @@ class Code(base.Integer):
     pass
 
 
-class Reason(base.PreValue):
+class Reason(base.Value):
     preamble = "m"
 
 
-class Body(base.PreValue):
+class Body(base.Value):
     preamble = "b"
 
 
@@ -60,12 +60,12 @@ class Header(_HeaderMixin, base.KeyValue):
     preamble = "h"
 
 
-class ShortcutContentType(_HeaderMixin, base.PreValue):
+class ShortcutContentType(_HeaderMixin, base.Value):
     preamble = "c"
     key = base.TokValueLiteral("Content-Type")
 
 
-class ShortcutLocation(_HeaderMixin, base.PreValue):
+class ShortcutLocation(_HeaderMixin, base.Value):
     preamble = "l"
     key = base.TokValueLiteral("Location")
 
diff --git a/libpathod/language/websockets.py b/libpathod/language/websockets.py
index 728edff7..ae755f30 100644
--- a/libpathod/language/websockets.py
+++ b/libpathod/language/websockets.py
@@ -17,7 +17,7 @@ class WF(base.CaselessLiteral):
     TOK = "wf"
 
 
-class Body(base.PreValue):
+class Body(base.Value):
     preamble = "b"
 
 
diff --git a/test/test_language_base.py b/test/test_language_base.py
index 56e7bbd4..23ef57de 100644
--- a/test/test_language_base.py
+++ b/test/test_language_base.py
@@ -169,7 +169,7 @@ class TestMisc:
         assert base.TokValue.parseString('"\'val\'"')[0].val == "'val'"
 
     def test_prevalue(self):
-        class TT(base.PreValue):
+        class TT(base.Value):
             preamble = "m"
         e = TT.expr()
         v = e.parseString("m'msg'")[0]
