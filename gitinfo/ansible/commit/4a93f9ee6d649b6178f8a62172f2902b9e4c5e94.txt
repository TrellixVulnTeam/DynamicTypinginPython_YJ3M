commit 4a93f9ee6d649b6178f8a62172f2902b9e4c5e94
Author: Michael DeHaan <michael.dehaan@gmail.com>
Date:   Sat Oct 5 12:49:42 2013 -0400

    Fix some missing hyperlinks to ansible-examples on github.

diff --git a/docsite/latest/rst/guide_aws.rst b/docsite/latest/rst/guide_aws.rst
index 76f7ba4ebf..cefc83d353 100644
--- a/docsite/latest/rst/guide_aws.rst
+++ b/docsite/latest/rst/guide_aws.rst
@@ -10,8 +10,7 @@ Introduction
 ````````````
 
 .. note:: This section of the documentation is under construction.  We are in the process of adding more examples about all of the EC2 modules
-   and how they work together.  There's also an ec2 example in the language_features directory of the 'ansible-examples' github repository
-   that you may wish to consult.  Once complete, there will also be new examples of ec2 in ansible-examples.
+   and how they work together.  There's also an ec2 example in the language_features directory of `the ansible-examples github repository <http://github.com/ansible/ansible-examples/>`_ that you may wish to consult.  Once complete, there will also be new examples of ec2 in ansible-examples.
 
 Ansible contains a number of core modules for interacting with Amazon Web Services (AWS).  These also work with Eucalyptus, which is an AWS compatible private cloud solution.  There are other supported cloud types, but this documentation chapter is about AWS API clouds.  The purpose of this
 section is to explain how to put Ansible modules together (and use inventory scripts) to use Ansible in AWS context.
diff --git a/docsite/latest/rst/playbooks_delegation.rst b/docsite/latest/rst/playbooks_delegation.rst
index 4c82f22c0f..c51bda33a1 100644
--- a/docsite/latest/rst/playbooks_delegation.rst
+++ b/docsite/latest/rst/playbooks_delegation.rst
@@ -1,17 +1,17 @@
 Delegation, Rolling Updates, and Local Actions
 ==============================================
 
-Being designed for multi-tier deployments since the beginning, Ansible is great at doing things on one host on behalf of another, or doing
-local steps with reference to some remote hosts.
+Being designed for multi-tier deployments since the beginning, Ansible is great at doing things on one host on behalf of another, or doing local steps with reference to some remote hosts.
 
-This in particular this is very applicable when setting up continuous deployment infrastructure or zero downtime rolling updates, where you
-might be talking with load balancers or monitoring systems.
+This in particular this is very applicable when setting up continuous deployment infrastructure or zero downtime rolling updates, where you might be talking with load balancers or monitoring systems.
 
-Additional features allow for tuning the orders in which things complete, and assigning a batch window size for how many machines to process
-at once during a rolling update.
+Additional features allow for tuning the orders in which things complete, and assigning a batch window size for how many machines to process at once during a rolling update.
 
-This section covers all fo these features.  For examples of these items in use, please see the 'ansible-examples' repository in
-the 'ansible' github organization.  
+This section covers all of these features.  For examples of these items in use, `please see the ansible-examples repository <http://github.com/ansible/ansible-examples/>`_. There are quite a few examples of zero-downtime update procedures for different kinds of applications.
+
+You should also consult the :doc:`modules` section, various modules like 'ec2_elb', 'nagios', and 'bigip_pool', and 'netscaler' dovetail neatly with the concepts mentioned here.  
+
+You'll also want to read up on :doc:`playbooks_roles`, as the 'pre_task' and 'post_task' concepts are the places where you would typically call these modules. 
 
 .. _rolling_update_batch_size:
 
@@ -135,6 +135,8 @@ use the default remote connection type::
 
    :doc:`playbooks`
        An introduction to playbooks
+   `Ansible Examples on GitHub <http://github.com/ansible/ansible-examples>`_
+       Many examples of full-stack deployments
    `User Mailing List <http://groups.google.com/group/ansible-devel>`_
        Have a question?  Stop by the google group!
    `irc.freenode.net <http://irc.freenode.net>`_
