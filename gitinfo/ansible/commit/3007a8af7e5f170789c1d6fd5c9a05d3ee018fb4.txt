commit 3007a8af7e5f170789c1d6fd5c9a05d3ee018fb4
Author: Troy C <rstrox@github.fake>
Date:   Fri Dec 13 16:27:21 2013 -0600

    import novaclient.exceptions for cs.images.find
    
    cs.images.find(human_id= throws novaclient.exceptions.NotFound,
    resulting in the try/except block with
    image = cs.images.find(name=image)  being skipped. catching
    novaclient.exception.NotFound allows images to be specified with the
    human readable name.
    
    Example:
      tasks:
        - name: Server build request
          local_action:
            module: rax
            region: DFW
            image: Ubuntu 12.04 LTS (Precise Pangolin)
    
    Also, the import is placed after try: import pyrax, because pyrax
    imports novaclient and should fail if novaclient is missing.

diff --git a/library/cloud/rax b/library/cloud/rax
index 4ec1391c82..2b37908178 100644
--- a/library/cloud/rax
+++ b/library/cloud/rax
@@ -162,6 +162,8 @@ except ImportError:
     print("failed=True msg='pyrax is required for this module'")
     sys.exit(1)
 
+import novaclient.exceptions
+
 ACTIVE_STATUSES = ('ACTIVE', 'BUILD', 'HARD_REBOOT', 'MIGRATING', 'PASSWORD',
                    'REBOOT', 'REBUILD', 'RESCUE', 'RESIZE', 'REVERT_RESIZE')
 FINAL_STATUSES = ('ACTIVE', 'ERROR')
@@ -366,11 +368,13 @@ def cloudservers(module, state, name, flavor, image, meta, key_name, files,
         except ValueError:
             try:
                 image = cs.images.find(human_id=image)
-            except (pyrax.exceptions.NotFound,
+            except (novaclient.exceptions.NotFound,
+                    pyrax.exceptions.NotFound,
                     pyrax.exceptions.NoUniqueMatch):
                 try:
                     image = cs.images.find(name=image)
-                except (pyrax.exceptions.NotFound,
+                except (novaclient.exceptions.NotFound,
+                        pyrax.exceptions.NotFound,
                         pyrax.exceptions.NoUniqueMatch):
                     module.fail_json(msg='No matching image found (%s)' %
                                          image)
