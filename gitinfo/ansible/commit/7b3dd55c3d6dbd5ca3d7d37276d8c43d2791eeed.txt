commit 7b3dd55c3d6dbd5ca3d7d37276d8c43d2791eeed
Author: Rene Moser <mail@renemoser.net>
Date:   Wed Jun 10 17:28:45 2015 +0200

    cloudstack: remove unused methods used for backward compatibility

diff --git a/lib/ansible/module_utils/cloudstack.py b/lib/ansible/module_utils/cloudstack.py
index 86ccef588e..39e02107ff 100644
--- a/lib/ansible/module_utils/cloudstack.py
+++ b/lib/ansible/module_utils/cloudstack.py
@@ -111,11 +111,6 @@ class AnsibleCloudStack:
         return my_dict
 
 
-    # TODO: for backward compatibility only, remove if not used anymore
-    def get_project_id(self):
-        return self.get_project(key='id')
-
-
     def get_project(self, key=None):
         if self.project:
             return self._get_by_key(key, self.project)
@@ -135,11 +130,6 @@ class AnsibleCloudStack:
         self.module.fail_json(msg="project '%s' not found" % project)
 
 
-    # TODO: for backward compatibility only, remove if not used anymore
-    def get_ip_address_id(self):
-        return self.get_ip_address(key='id')
-
-
     def get_ip_address(self, key=None):
         if self.ip_address:
             return self._get_by_key(key, self.ip_address)
@@ -162,11 +152,6 @@ class AnsibleCloudStack:
         return self._get_by_key(key, self.ip_address)
 
 
-    # TODO: for backward compatibility only, remove if not used anymore
-    def get_vm_id(self):
-        return self.get_vm(key='id')
-
-
     def get_vm(self, key=None):
         if self.vm:
             return self._get_by_key(key, self.vm)
@@ -189,11 +174,6 @@ class AnsibleCloudStack:
         self.module.fail_json(msg="Virtual machine '%s' not found" % vm)
 
 
-    # TODO: for backward compatibility only, remove if not used anymore
-    def get_zone_id(self):
-        return self.get_zone(key='id')
-
-
     def get_zone(self, key=None):
         if self.zone:
             return self._get_by_key(key, self.zone)
@@ -214,11 +194,6 @@ class AnsibleCloudStack:
         self.module.fail_json(msg="zone '%s' not found" % zone)
 
 
-    # TODO: for backward compatibility only, remove if not used anymore
-    def get_os_type_id(self):
-        return self.get_os_type(key='id')
-
-
     def get_os_type(self, key=None):
         if self.os_type:
             return self._get_by_key(key, self.zone)
diff --git a/v1/ansible/module_utils/cloudstack.py b/v1/ansible/module_utils/cloudstack.py
index 2b4ec0be17..973ce24f8e 100644
--- a/v1/ansible/module_utils/cloudstack.py
+++ b/v1/ansible/module_utils/cloudstack.py
@@ -109,11 +109,6 @@ class AnsibleCloudStack:
         return my_dict
 
 
-    # TODO: for backward compatibility only, remove if not used anymore
-    def get_project_id(self):
-        return self.get_project(key='id')
-
-
     def get_project(self, key=None):
         if self.project:
             return self._get_by_key(key, self.project)
@@ -133,11 +128,6 @@ class AnsibleCloudStack:
         self.module.fail_json(msg="project '%s' not found" % project)
 
 
-    # TODO: for backward compatibility only, remove if not used anymore
-    def get_ip_address_id(self):
-        return self.get_ip_address(key='id')
-
-
     def get_ip_address(self, key=None):
         if self.ip_address:
             return self._get_by_key(key, self.ip_address)
@@ -160,11 +150,6 @@ class AnsibleCloudStack:
         return self._get_by_key(key, self.ip_address)
 
 
-    # TODO: for backward compatibility only, remove if not used anymore
-    def get_vm_id(self):
-        return self.get_vm(key='id')
-
-
     def get_vm(self, key=None):
         if self.vm:
             return self._get_by_key(key, self.vm)
@@ -187,11 +172,6 @@ class AnsibleCloudStack:
         self.module.fail_json(msg="Virtual machine '%s' not found" % vm)
 
 
-    # TODO: for backward compatibility only, remove if not used anymore
-    def get_zone_id(self):
-        return self.get_zone(key='id')
-
-
     def get_zone(self, key=None):
         if self.zone:
             return self._get_by_key(key, self.zone)
@@ -212,11 +192,6 @@ class AnsibleCloudStack:
         self.module.fail_json(msg="zone '%s' not found" % zone)
 
 
-    # TODO: for backward compatibility only, remove if not used anymore
-    def get_os_type_id(self):
-        return self.get_os_type(key='id')
-
-
     def get_os_type(self, key=None):
         if self.os_type:
             return self._get_by_key(key, self.zone)
