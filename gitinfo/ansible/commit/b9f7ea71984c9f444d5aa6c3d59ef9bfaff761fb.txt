commit b9f7ea71984c9f444d5aa6c3d59ef9bfaff761fb
Author: Tim Bielawa <tbielawa@redhat.com>
Date:   Tue Aug 28 15:41:10 2012 -0400

    Add auto-gen TOCs to a bunch of pages.

diff --git a/rst/api.rst b/rst/api.rst
index f97d2a87e3..95018140e0 100644
--- a/rst/api.rst
+++ b/rst/api.rst
@@ -9,6 +9,10 @@ Also covered here, Ansible's
 list of hosts, groups, and variables assigned to each host can be driven from
 external sources.   We'll start with the Python API.
 
+.. contents:: `Table of contents`
+   :depth: 2
+   :backlinks: top
+
 Python API
 ----------
 
@@ -268,7 +272,7 @@ When the Ansible is interacting with a specific server, the EC2 inventory script
 
 Both ``ec2_security_group_ids`` and ``ec2_security_group_names`` are comma-separated lists of all security groups. Each EC2 tag is a variable in the format ``ec2_tag_KEY``.
 
-To see the complete list of variables available for an instance, run the script by itself:
+To see the complete list of variables available for an instance, run the script by itself::
 
     cd examples/scripts
     ./ec2_external_inventory.py --host ec2-12-12-12-12.compute-1.amazonaws.com
diff --git a/rst/bestpractices.rst b/rst/bestpractices.rst
index 588f49937f..824a79bb55 100644
--- a/rst/bestpractices.rst
+++ b/rst/bestpractices.rst
@@ -3,6 +3,10 @@ Best Practices
 
 Here are some tips for making the most of Ansible.
 
+.. contents::
+   :depth: 2
+   :backlinks: top
+
 Always Mention State
 ++++++++++++++++++++
 
diff --git a/rst/examples.rst b/rst/examples.rst
index c466d0a6df..55ffed03a2 100644
--- a/rst/examples.rst
+++ b/rst/examples.rst
@@ -10,6 +10,11 @@ For configuration management and deployments, you'll want to pick up on
 using `/usr/bin/ansible-playbook` -- the concepts port over directly.
 (See :doc:`playbooks` for more information about those)
 
+.. contents::
+   :depth: 2
+   :backlinks: top
+
+
 Parallelism and Shell Commands
 ``````````````````````````````
 
diff --git a/rst/faq.rst b/rst/faq.rst
index d6a300a9f6..1bb0620e34 100644
--- a/rst/faq.rst
+++ b/rst/faq.rst
@@ -1,6 +1,9 @@
 FAQ
 ===
 
+.. contents::
+   :backlinks: top
+
 Why Is It Called Ansible?
 -------------------------
 
diff --git a/rst/gettingstarted.rst b/rst/gettingstarted.rst
index b044669b6a..f1ec16f715 100644
--- a/rst/gettingstarted.rst
+++ b/rst/gettingstarted.rst
@@ -1,6 +1,10 @@
 Getting Started
 ===============
 
+.. contents::
+   :depth: 2
+   :backlinks: top
+
 Requirements
 ````````````
 
diff --git a/rst/moduledev.rst b/rst/moduledev.rst
index 67e527ea77..430d741a1a 100644
--- a/rst/moduledev.rst
+++ b/rst/moduledev.rst
@@ -7,6 +7,11 @@ or by the `ansible` or `ansible-playbook` programs.
 Modules can be written in any language and are found in the path specified 
 by `ANSIBLE_LIBRARY_PATH` or the ``--module-path`` command line option.
 
+.. contents::
+   :depth: 2
+   :backlinks: top
+
+
 Tutorial 
 ````````
 Let's build a module to get and set the system time.  For starters, let's build
diff --git a/rst/modules.rst b/rst/modules.rst
index 3c317014f7..59b336df5a 100644
--- a/rst/modules.rst
+++ b/rst/modules.rst
@@ -1,6 +1,14 @@
 Ansible Modules
 ===============
 
+.. contents::
+   :depth: 2
+   :backlinks: top
+
+Introduction
+````````````
+
+
 Ansible ships with a number of modules (called the 'module library')
 that can be executed directly on remote hosts or through :doc:`playbooks`.
 Users can also write their own modules.   These modules can control system
@@ -34,20 +42,6 @@ to run additional tasks.
 Let's see what's available in the Ansible module library, out of the box:
 
 
-======================= ======================= ======================= 
-:ref:`apt_repository`   :ref:`apt`              :ref:`assemble`
-:ref:`authorized_key`   :ref:`command`          :ref:`copy`
-:ref:`easy_install`     :ref:`facter`           :ref:`fetch`
-:ref:`file` 		:ref:`get_url` 		:ref:`git`
-:ref:`group` 		:ref:`mount` 		:ref:`mysql_db`
-:ref:`mysql_user` 	:ref:`nagios` 		:ref:`ohai`
-:ref:`ping` 		:ref:`pip` 		:ref:`postgresql_db`
-:ref:`postgresql_user` 	:ref:`raw` 		:ref:`service`
-:ref:`setup` 		:ref:`shell` 		:ref:`supervisorctl`
-:ref:`template` 	:ref:`user` 		:ref:`virt`
-:ref:`yum`
-======================= ======================= ======================= 
-
 .. include:: modules/apt_repository.rst
 .. include:: modules/apt.rst
 .. include:: modules/assemble.rst
diff --git a/rst/patterns.rst b/rst/patterns.rst
index ee5a3116d3..658c59b7b1 100644
--- a/rst/patterns.rst
+++ b/rst/patterns.rst
@@ -7,6 +7,10 @@ Ansible works against multiple systems in your infrastructure at the
 same time.  It does this by selecting portions of systems listed in
 Ansible's inventory file, which defaults to /etc/ansible/hosts.
 
+.. contents:: `Table of contents`
+   :depth: 2
+   :backlinks: top
+
 .. _inventoryformat:
 
 Hosts and Groups
diff --git a/rst/playbooks.rst b/rst/playbooks.rst
index 8545a15dfc..bad2ed8d3a 100644
--- a/rst/playbooks.rst
+++ b/rst/playbooks.rst
@@ -1,6 +1,13 @@
 Playbooks
 =========
 
+.. contents::
+   :depth: 2
+   :backlinks: top
+
+Introduction
+````````````
+
 Playbooks are a completely different way to use ansible than in task execution mode, and are
 particularly powerful. Simply put, playbooks are the basis for a really simple 
 configuration management and multi-machine deployment system, 
diff --git a/rst/playbooks2.rst b/rst/playbooks2.rst
index b34eeab664..1121bee734 100644
--- a/rst/playbooks2.rst
+++ b/rst/playbooks2.rst
@@ -6,6 +6,10 @@ are not neccessary, but many of them will prove useful.  If a feature doesn't se
 relevant, feel free to skip it.  For many people, the features documented in `playbooks` will
 be 90% or more of what they use in Ansible.
 
+.. contents::
+   :depth: 2
+   :backlinks: top
+
 Tags
 ````
 
