commit c82d72e12ab7cd6da9a393f09129d8c373adf2a7
Author: Hans-Joachim Kliemeck <git@kliemeck.de>
Date:   Tue Jan 12 09:57:56 2016 +0100

    fixed problems related to userpricincipalname (user@domain) and undefined variables fixed variable capitalization

diff --git a/lib/ansible/modules/extras/windows/win_owner.ps1 b/lib/ansible/modules/extras/windows/win_owner.ps1
index 9bd3c335e9..d781dd011d 100644
--- a/lib/ansible/modules/extras/windows/win_owner.ps1
+++ b/lib/ansible/modules/extras/windows/win_owner.ps1
@@ -22,52 +22,49 @@
 #Functions
 Function UserSearch
 {
-    Param ([string]$AccountName)
+    Param ([string]$accountName)
     #Check if there's a realm specified
-    if ($AccountName.Split("\").count -gt 1)
+
+    $searchDomain = $false
+    $searchDomainUPN = $false
+    if ($accountName.Split("\").count -gt 1)
     {
-        if ($AccountName.Split("\")[0] -eq $env:COMPUTERNAME)
-        {
-            $IsLocalAccount = $true
-        }
-        Else
+        if ($accountName.Split("\")[0] -ne $env:COMPUTERNAME)
         {
-            $IsDomainAccount = $true
-            $IsUpn = $false
+            $searchDomain = $true
+            $accountName = $accountName.split("\")[1]
         }
- 
     }
-    Elseif ($AccountName.contains("@"))
+    Elseif ($accountName.contains("@"))
     {
-        $IsDomainAccount = $true
-        $IsUpn = $true
+        $searchDomain = $true
+        $searchDomainUPN = $true
     }
     Else
     {
         #Default to local user account
-        $accountname = $env:COMPUTERNAME + "\" + $AccountName
-        $IsLocalAccount = $true
+        $accountName = $env:COMPUTERNAME + "\" + $accountName
     }
 
-    if ($IsLocalAccount -eq $true)
+    if ($searchDomain -eq $false)
     {
         # do not use Win32_UserAccount, because e.g. SYSTEM (BUILTIN\SYSTEM or COMPUUTERNAME\SYSTEM) will not be listed. on Win32_Account groups will be listed too
-        $localaccount = get-wmiobject -class "Win32_Account" -namespace "root\CIMV2" -filter "(LocalAccount = True)" | where {$_.Caption -eq $AccountName}
+        $localaccount = get-wmiobject -class "Win32_Account" -namespace "root\CIMV2" -filter "(LocalAccount = True)" | where {$_.Caption -eq $accountName}
         if ($localaccount)
         {
             return $localaccount.SID
         }
     }
-    ElseIf ($IsDomainAccount -eq $true)
+    Else
     {
         #Search by samaccountname
         $Searcher = [adsisearcher]""
 
-        If ($IsUpn -eq $false) {
-            $Searcher.Filter = "sAMAccountName=$($accountname.split("\")[1])"
+        If ($searchDomainUPN -eq $false) {
+            $Searcher.Filter = "sAMAccountName=$($accountName)"
         }
         Else {
-            $Searcher.Filter = "userPrincipalName=$($accountname)"
+            $Searcher.Filter = "userPrincipalName=$($accountName)"
         }
 
         $result = $Searcher.FindOne() 
