commit 283205d7b31a1346ffdbbbb350d2d99da03c1ce5
Author: Toshio Kuratomi <a.badger@gmail.com>
Date:   Mon Oct 3 14:09:42 2016 -0700

    We've changed run_command to return native_strings
    
    on python3, this means that we don't get bytes back by default.  We
    probably do want bytes here so modify our call to run_command so we get
    bytes instead of text.

diff --git a/lib/ansible/modules/commands/command.py b/lib/ansible/modules/commands/command.py
index bd4f5a687f..0c3c584d75 100644
--- a/lib/ansible/modules/commands/command.py
+++ b/lib/ansible/modules/commands/command.py
@@ -97,13 +97,13 @@ EXAMPLES = '''
 
 import datetime
 import glob
-import re
 import shlex
 import os
 
 from ansible.module_utils.basic import AnsibleModule
 from ansible.module_utils.six import b
 
+
 def check_command(commandline):
     arguments = { 'chown': 'owner', 'chmod': 'mode', 'chgrp': 'group',
                   'ln': 'state=link', 'mkdir': 'state=directory',
@@ -144,9 +144,9 @@ def main():
     shell = module.params['_uses_shell']
     chdir = module.params['chdir']
     executable = module.params['executable']
-    args  = module.params['_raw_params']
-    creates  = module.params['creates']
-    removes  = module.params['removes']
+    args = module.params['_raw_params']
+    creates = module.params['creates']
+    removes = module.params['removes']
     warn = module.params['warn']
 
     if args.strip() == '':
@@ -169,9 +169,9 @@ def main():
             )
 
     if removes:
-    # do not run the command if the line contains removes=filename
-    # and the filename does not exist.  This allows idempotence
-    # of command executions.
+        # do not run the command if the line contains removes=filename
+        # and the filename does not exist.  This allows idempotence
+        # of command executions.
         if not glob.glob(removes):
             module.exit_json(
                 cmd=args,
@@ -188,7 +188,7 @@ def main():
         args = shlex.split(args)
     startd = datetime.datetime.now()
 
-    rc, out, err = module.run_command(args, executable=executable, use_unsafe_shell=shell)
+    rc, out, err = module.run_command(args, executable=executable, use_unsafe_shell=shell, encoding=None)
 
     endd = datetime.datetime.now()
     delta = endd - startd
