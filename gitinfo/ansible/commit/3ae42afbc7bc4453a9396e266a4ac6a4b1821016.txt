commit 3ae42afbc7bc4453a9396e266a4ac6a4b1821016
Author: Dag Wieers <dag@wieers.com>
Date:   Mon Oct 30 00:58:04 2017 +0100

    getent: PEP8 compliancy and doc fixes (#30885)
    
    This PR includes:
    - PEP8 compliancy fixes
    - Documentation fixes

diff --git a/lib/ansible/modules/system/getent.py b/lib/ansible/modules/system/getent.py
index 04ec0fc989..97299d44b7 100644
--- a/lib/ansible/modules/system/getent.py
+++ b/lib/ansible/modules/system/getent.py
@@ -1,54 +1,48 @@
 #!/usr/bin/python
 # -*- coding: utf-8 -*-
 
-# (c) 2014, Brian Coca <brian.coca+dev@gmail.com>
-#
+# Copyright: (c) 2014, Brian Coca <brian.coca+dev@gmail.com>
 # GNU General Public License v3.0+ (see COPYING or https://www.gnu.org/licenses/gpl-3.0.txt)
 
 from __future__ import absolute_import, division, print_function
 __metaclass__ = type
 
-
 ANSIBLE_METADATA = {'metadata_version': '1.1',
                     'status': ['stableinterface'],
                     'supported_by': 'core'}
 
-
 DOCUMENTATION = '''
 ---
 module: getent
-short_description: a wrapper to the unix getent utility
+short_description: A wrapper to the unix getent utility
 description:
      - Runs getent against one of it's various databases and returns information into
-       the host's facts, in a getent_<database> prefixed variable
+       the host's facts, in a getent_<database> prefixed variable.
 version_added: "1.8"
 options:
     database:
-        required: True
         description:
-            - the name of a getent database supported by the target system (passwd, group,
+            - The name of a getent database supported by the target system (passwd, group,
               hosts, etc).
+        required: True
     key:
-        required: False
-        default: ''
         description:
-            - key from which to return values from the specified database, otherwise the
+            - Key from which to return values from the specified database, otherwise the
               full contents are returned.
+        default: ''
     split:
-        required: False
-        default: None
         description:
-            - "character used to split the database values into lists/arrays such as ':' or '\t', otherwise  it will try to pick one depending on the database"
+            - "Character used to split the database values into lists/arrays such as ':' or '\t', otherwise  it will try to pick one depending on the database."
     fail_key:
-        required: False
-        default: True
         description:
-            - If a supplied key is missing this will make the task fail if True
+            - If a supplied key is missing this will make the task fail if C(yes).
+        type: bool
+        default: 'yes'
 
 notes:
-   - "Not all databases support enumeration, check system documentation for details"
-requirements: [ ]
-author: "Brian Coca (@bcoca)"
+   - Not all databases support enumeration, check system documentation for details.
+author:
+- Brian Coca (@bcoca)
 '''
 
 EXAMPLES = '''
@@ -97,28 +91,28 @@ from ansible.module_utils._text import to_native
 
 def main():
     module = AnsibleModule(
-        argument_spec = dict(
-            database = dict(required=True),
-            key      = dict(required=False, default=None),
-            split    = dict(required=False, default=None),
-            fail_key = dict(required=False, type='bool', default=True),
+        argument_spec=dict(
+            database=dict(type='str', required=True),
+            key=dict(type='str'),
+            split=dict(type='str'),
+            fail_key=dict(type='bool', default=True),
         ),
-        supports_check_mode = True,
+        supports_check_mode=True,
     )
 
-    colon = [ 'passwd', 'shadow', 'group', 'gshadow' ]
+    colon = ['passwd', 'shadow', 'group', 'gshadow']
 
     database = module.params['database']
-    key      = module.params.get('key')
-    split    = module.params.get('split')
+    key = module.params.get('key')
+    split = module.params.get('split')
     fail_key = module.params.get('fail_key')
 
     getent_bin = module.get_bin_path('getent', True)
 
     if key is not None:
-        cmd = [ getent_bin, database, key ]
+        cmd = [getent_bin, database, key]
     else:
-        cmd = [ getent_bin, database ]
+        cmd = [getent_bin, database]
 
     if split is None and database in colon:
         split = ':'
@@ -130,7 +124,7 @@ def main():
 
     msg = "Unexpected failure!"
     dbtree = 'getent_%s' % database
-    results = { dbtree: {} }
+    results = {dbtree: {}}
 
     if rc == 0:
         for line in out.splitlines():
diff --git a/test/sanity/pep8/legacy-files.txt b/test/sanity/pep8/legacy-files.txt
index 9c6f845527..10e5cd0d63 100644
--- a/test/sanity/pep8/legacy-files.txt
+++ b/test/sanity/pep8/legacy-files.txt
@@ -342,7 +342,6 @@ lib/ansible/modules/system/debconf.py
 lib/ansible/modules/system/facter.py
 lib/ansible/modules/system/filesystem.py
 lib/ansible/modules/system/gconftool2.py
-lib/ansible/modules/system/getent.py
 lib/ansible/modules/system/gluster_volume.py
 lib/ansible/modules/system/group.py
 lib/ansible/modules/system/hostname.py
