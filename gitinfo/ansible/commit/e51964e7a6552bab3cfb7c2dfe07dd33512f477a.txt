commit e51964e7a6552bab3cfb7c2dfe07dd33512f477a
Author: Steve Dodd <stevend@idahood.com>
Date:   Mon Nov 12 00:01:27 2018 -0700

    Fix LLDP to use json (#48318)

diff --git a/lib/ansible/modules/network/nxos/nxos_facts.py b/lib/ansible/modules/network/nxos/nxos_facts.py
index 45bfafc035..3c2c7f52a3 100644
--- a/lib/ansible/modules/network/nxos/nxos_facts.py
+++ b/lib/ansible/modules/network/nxos/nxos_facts.py
@@ -421,9 +421,12 @@ class Interfaces(FactsBase):
                 interfaces = self.parse_interfaces(data)
                 self.populate_ipv6_interfaces(interfaces)
 
-        data = self.run('show lldp neighbors')
+        data = self.run('show lldp neighbors', output='json')
         if data:
-            self.facts['neighbors'].update(self.populate_neighbors(data))
+            if isinstance(data, dict):
+                self.facts['neighbors'].update(self.populate_structured_neighbors_lldp(data))
+            else:
+                self.facts['neighbors'].update(self.populate_neighbors(data))
 
         data = self.run('show cdp neighbors detail', output='json')
         if data:
@@ -432,6 +435,8 @@ class Interfaces(FactsBase):
             else:
                 self.facts['neighbors'].update(self.populate_neighbors_cdp(data))
 
+        self.facts['neighbors'].pop(None, None)  # Remove null key
+
     def populate_structured_interfaces(self, data):
         interfaces = dict()
         for item in data['TABLE_interface']['ROW_interface']:
@@ -475,6 +480,23 @@ class Interfaces(FactsBase):
         except TypeError:
             return ""
 
+    def populate_structured_neighbors_lldp(self, data):
+        objects = dict()
+        data = data['TABLE_nbor']['ROW_nbor']
+
+        if isinstance(data, dict):
+            data = [data]
+
+        for item in data:
+            local_intf = item['l_port_id']
+            objects[local_intf] = list()
+            nbor = dict()
+            nbor['port'] = item['port_id']
+            nbor['sysname'] = item['chassis_id']
+            objects[local_intf].append(nbor)
+
+        return objects
+
     def populate_structured_neighbors_cdp(self, data):
         objects = dict()
         data = data['TABLE_cdp_neighbor_detail_info']['ROW_cdp_neighbor_detail_info']
