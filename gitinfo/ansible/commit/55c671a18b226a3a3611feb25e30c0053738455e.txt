commit 55c671a18b226a3a3611feb25e30c0053738455e
Author: Phil <schwartzmx@gmail.com>
Date:   Thu Jun 25 15:55:23 2015 -0500

    removed hardcoded paths, check for .exe error exit code, use get-attr for required param check.

diff --git a/lib/ansible/modules/extras/windows/win_timezone.ps1 b/lib/ansible/modules/extras/windows/win_timezone.ps1
index 4626dd10b5..03a6935052 100644
--- a/lib/ansible/modules/extras/windows/win_timezone.ps1
+++ b/lib/ansible/modules/extras/windows/win_timezone.ps1
@@ -26,44 +26,45 @@ $result = New-Object psobject @{
     changed = $false
 }
 
-If ($params.timezone) {
-    Try {
-        # Get the current timezone set
-        $currentTZ = $(C:\Windows\System32\tzutil /g)
+$timezone = Get-Attr -obj $params -name timezone -failifempty $true -resultobj $result
 
-        If ( $currentTZ -eq $params.timezone ) {
-            Exit-Json $result "$params.timezone is already set on this machine"
-        }
-        Else {
-            $tzExists = $false
-            #Check that timezone can even be set (if it is listed from tzutil as an available timezone to the machine)
-            $tzList = $(C:\Windows\System32\tzutil /l)
-            ForEach ($tz in $tzList) {
-                If ( $tz -eq $params.timezone ) {
-                    $tzExists = $true
-                    break
-                }
+Try {
+    # Get the current timezone set
+    $currentTZ = $(tzutil.exe /g)
+    If ($LASTEXITCODE -ne 0) { Throw "An error occured when getting the current machine's timezone setting." }
+
+    If ( $currentTZ -eq $timezone ) {
+        Exit-Json $result "$timezone is already set on this machine"
+    }
+    Else {
+        $tzExists = $false
+        #Check that timezone can even be set (if it is listed from tzutil as an available timezone to the machine)
+        $tzList = $(tzutil.exe /l)
+        If ($LASTEXITCODE -ne 0) { Throw "An error occured when listing the available timezones." }
+        ForEach ($tz in $tzList) {
+            If ( $tz -eq $timezone ) {
+                $tzExists = $true
+                break
             }
+        }
 
-            If ( $tzExists ) {
-                C:\Windows\System32\tzutil /s "$params.timezone"
-                $newTZ = $(C:\Windows\System32\tzutil /g)
+        If ( $tzExists ) {
+            tzutil.exe /s "$timezone"
+            If ($LASTEXITCODE -ne 0) { Throw "An error occured when setting the specified timezone with tzutil." }
+            $newTZ = $(tzutil.exe /g)
+            If ($LASTEXITCODE -ne 0) { Throw "An error occured when getting the current machine's timezone setting." }
 
-                If ( $params.timezone -eq $newTZ ) {
-                    $result.changed = $true
-                }
-            }
-            Else {
-                Fail-Json $result "The specified timezone: $params.timezone isn't supported on the machine."
+            If ( $timezone -eq $newTZ ) {
+                $result.changed = $true
             }
         }
-    }
-    Catch {
-        Fail-Json $result "Error setting timezone to: $params.timezone."
+        Else {
+            Fail-Json $result "The specified timezone: $timezone isn't supported on the machine."
+        }
     }
 }
-Else {
-    Fail-Json $result "Parameter: timezone is required."
+Catch {
+    Fail-Json $result "Error setting timezone to: $timezone."
 }
 
 
