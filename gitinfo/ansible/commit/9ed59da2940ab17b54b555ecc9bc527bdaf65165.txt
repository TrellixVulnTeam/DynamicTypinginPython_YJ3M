commit 9ed59da2940ab17b54b555ecc9bc527bdaf65165
Author: Jan-Piet Mens <jpmens@gmail.com>
Date:   Wed Oct 3 15:59:38 2012 +0200

    Allow user-specified $ansible_managed string with named parameters

diff --git a/examples/ansible.cfg b/examples/ansible.cfg
index f29fd55b58..d99ff81825 100644
--- a/examples/ansible.cfg
+++ b/examples/ansible.cfg
@@ -66,6 +66,14 @@ remote_port=22
 
 #private_key_file=/path/to/file
 
+# format of string $ansible_managed available within Jinja2 templates, replacing
+# {file}, {host} and {uid} with template filename, host and owner respectively.
+# The resulting string is passed through strftime(3) so it may contain any
+# time-formatting specifiers.
+#
+# Example: ansible_managed = DONT TOUCH {file}: call {uid} at {host} for changes
+ansible_managed = Ansible managed: {file} modified on %Y-%m-%d %H:%M:%S by {uid} on {host}
+
 [paramiko_connection]
 
 # nothing to configure yet
diff --git a/lib/ansible/constants.py b/lib/ansible/constants.py
index 03c67a0ddb..dffcc24105 100644
--- a/lib/ansible/constants.py
+++ b/lib/ansible/constants.py
@@ -78,6 +78,7 @@ DEFAULT_PRIVATE_KEY_FILE  = shell_expand_path(get_config(p, DEFAULTS, 'private_k
 DEFAULT_SUDO_USER         = get_config(p, DEFAULTS, 'sudo_user',        'ANSIBLE_SUDO_USER',        'root')
 DEFAULT_REMOTE_PORT       = int(get_config(p, DEFAULTS, 'remote_port',      'ANSIBLE_REMOTE_PORT',      22))
 DEFAULT_TRANSPORT         = get_config(p, DEFAULTS, 'transport',        'ANSIBLE_TRANSPORT',        'paramiko')
+DEFAULT_MANAGED_STR       = get_config(p, DEFAULTS, 'ansible_managed',  None,           'Ansible managed: {file} modified on %Y-%m-%d %H:%M:%S by {uid} on {host}')
 
 # non-configurable things
 DEFAULT_REMOTE_PASS       = None
diff --git a/lib/ansible/utils.py b/lib/ansible/utils.py
index 008d1030d3..6c7a89462f 100644
--- a/lib/ansible/utils.py
+++ b/lib/ansible/utils.py
@@ -408,9 +408,15 @@ def template_from_file(basedir, path, vars):
     vars['template_path']   = realpath
     vars['template_mtime']  = datetime.datetime.fromtimestamp(os.path.getmtime(realpath))
     vars['template_uid']    = template_uid
-    vars['ansible_managed'] = "%s on %s, modified %s by %s" % (
-        vars['template_path'], vars['template_host'], vars['template_mtime'],
-        vars['template_uid'] )
+
+    managed_default = C.DEFAULT_MANAGED_STR
+    managed_str = managed_default.format(
+                    host = vars['template_host'],
+                    uid  = vars['template_uid'],
+                    file = vars['template_path']
+                    )
+    vars['ansible_managed'] = time.strftime(managed_str,
+                                time.localtime(os.path.getmtime(realpath)))
 
     res = t.render(vars)
     if data.endswith('\n') and not res.endswith('\n'):
