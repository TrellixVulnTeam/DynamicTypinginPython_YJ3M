commit 30312474926c3e3d8549cd9d7930b2a034a23381
Author: Josh Drake <joshua.c.drake@gmail.com>
Date:   Sat Jul 19 23:41:16 2014 -0500

    Use cPickle in redis fact caching backend.

diff --git a/lib/ansible/cache/redis.py b/lib/ansible/cache/redis.py
index 0641fb337b..52d4adf2a6 100644
--- a/lib/ansible/cache/redis.py
+++ b/lib/ansible/cache/redis.py
@@ -17,7 +17,7 @@
 from __future__ import absolute_import
 
 import collections
-import pickle
+import cPickle
 import sys
 import time
 
@@ -40,13 +40,13 @@ class PickledRedis(StrictRedis):
         pickled_value = super(PickledRedis, self).get(name)
         if pickled_value is None:
             return None
-        return pickle.loads(pickled_value)
+        return cPickle.loads(pickled_value)
 
     def set(self, name, value, *args, **kwargs):
-        return super(PickledRedis, self).set(name, pickle.dumps(value), *args, **kwargs)
+        return super(PickledRedis, self).set(name, cPickle.dumps(value), *args, **kwargs)
 
     def setex(self, name, time, value):
-        return super(PickledRedis, self).setex(name, time, pickle.dumps(value))
+        return super(PickledRedis, self).setex(name, time, cPickle.dumps(value))
 
 
 class CacheModule(BaseCacheModule):
