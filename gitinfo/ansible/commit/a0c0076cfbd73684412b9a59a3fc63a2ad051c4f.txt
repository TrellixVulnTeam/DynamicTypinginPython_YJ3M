commit a0c0076cfbd73684412b9a59a3fc63a2ad051c4f
Author: Brian Coca <bcoca@users.noreply.github.com>
Date:   Sun Nov 12 17:05:34 2017 -0500

    added note about serial behaviour (#32461)
    
    * added note about serial behaviour

diff --git a/docs/docsite/rst/guide_rolling_upgrade.rst b/docs/docsite/rst/guide_rolling_upgrade.rst
index 6f6c218f73..48e7ad049a 100644
--- a/docs/docsite/rst/guide_rolling_upgrade.rst
+++ b/docs/docsite/rst/guide_rolling_upgrade.rst
@@ -220,6 +220,11 @@ Here is the next part of the update play::
     delegate_to: "{{ item }}"
     loop: "{{ groups.lbservers }}"
 
+
+.. note::
+   - The ``serial`` keyword forces the play to be executed in 'batches'. Each batch counts as a full play with a subselection of hosts.
+     This has some consequences on play behavior. For example, if all hosts in a batch fails, the play fails, which in turn fails the entire run. You should consider this when combining with ``max_fail_percentage``.
+
 The ``pre_tasks`` keyword just lets you list tasks to run before the roles are called. This will make more sense in a minute. If you look at the names of these tasks, you can see that we are disabling Nagios alerts and then removing the webserver that we are currently updating from the HAProxy load balancing pool.
 
 The ``delegate_to`` and ``loop`` arguments, used together, cause Ansible to loop over each monitoring server and load balancer, and perform that operation (delegate that operation) on the monitoring or load balancing server, "on behalf" of the webserver. In programming terms, the outer loop is the list of web servers, and the inner loop is the list of monitoring servers.
