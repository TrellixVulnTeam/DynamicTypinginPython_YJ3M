commit cd8b42c37618a09e3ea12ee50f66419bde2caee7
Author: The Magician <magic-modules@google.com>
Date:   Mon Nov 25 16:20:07 2019 -0800

    Bug fixes for GCP modules (#64823)

diff --git a/lib/ansible/modules/cloud/google/gcp_compute_firewall.py b/lib/ansible/modules/cloud/google/gcp_compute_firewall.py
index 8abd88fa90..7f41c8722d 100644
--- a/lib/ansible/modules/cloud/google/gcp_compute_firewall.py
+++ b/lib/ansible/modules/cloud/google/gcp_compute_firewall.py
@@ -505,7 +505,6 @@ def main():
             target_tags=dict(type='list', elements='str'),
         ),
         mutually_exclusive=[
-            ['allowed', 'denied'],
             ['destination_ranges', 'source_ranges', 'source_tags'],
             ['destination_ranges', 'source_ranges'],
             ['source_service_accounts', 'source_tags', 'target_tags'],
diff --git a/lib/ansible/modules/cloud/google/gcp_compute_forwarding_rule.py b/lib/ansible/modules/cloud/google/gcp_compute_forwarding_rule.py
index 57d9aa2708..c0bf7674aa 100644
--- a/lib/ansible/modules/cloud/google/gcp_compute_forwarding_rule.py
+++ b/lib/ansible/modules/cloud/google/gcp_compute_forwarding_rule.py
@@ -98,12 +98,6 @@ options:
       field to "{{ name-of-resource }}"'
     required: false
     type: dict
-  ip_version:
-    description:
-    - ipVersion is not a valid field for regional forwarding rules.
-    - 'Some valid choices include: "IPV4", "IPV6"'
-    required: false
-    type: str
   load_balancing_scheme:
     description:
     - This signifies what the ForwardingRule will be used for and can be EXTERNAL,
@@ -367,11 +361,6 @@ backendService:
     load balancing.
   returned: success
   type: dict
-ipVersion:
-  description:
-  - ipVersion is not a valid field for regional forwarding rules.
-  returned: success
-  type: str
 loadBalancingScheme:
   description:
   - This signifies what the ForwardingRule will be used for and can be EXTERNAL, INTERNAL,
@@ -504,7 +493,6 @@ def main():
             ip_address=dict(type='str'),
             ip_protocol=dict(type='str'),
             backend_service=dict(type='dict'),
-            ip_version=dict(type='str'),
             load_balancing_scheme=dict(type='str'),
             name=dict(required=True, type='str'),
             network=dict(type='dict'),
@@ -585,7 +573,6 @@ def resource_to_request(module):
         u'IPAddress': module.params.get('ip_address'),
         u'IPProtocol': module.params.get('ip_protocol'),
         u'backendService': replace_resource_dict(module.params.get(u'backend_service', {}), 'selfLink'),
-        u'ipVersion': module.params.get('ip_version'),
         u'loadBalancingScheme': module.params.get('load_balancing_scheme'),
         u'name': module.params.get('name'),
         u'network': replace_resource_dict(module.params.get(u'network', {}), 'selfLink'),
@@ -667,7 +654,6 @@ def response_to_hash(module, response):
         u'IPAddress': response.get(u'IPAddress'),
         u'IPProtocol': response.get(u'IPProtocol'),
         u'backendService': response.get(u'backendService'),
-        u'ipVersion': response.get(u'ipVersion'),
         u'loadBalancingScheme': response.get(u'loadBalancingScheme'),
         u'name': response.get(u'name'),
         u'network': response.get(u'network'),
diff --git a/lib/ansible/modules/cloud/google/gcp_compute_forwarding_rule_info.py b/lib/ansible/modules/cloud/google/gcp_compute_forwarding_rule_info.py
index dae87fa22f..ab7601ce2f 100644
--- a/lib/ansible/modules/cloud/google/gcp_compute_forwarding_rule_info.py
+++ b/lib/ansible/modules/cloud/google/gcp_compute_forwarding_rule_info.py
@@ -171,11 +171,6 @@ resources:
         load balancing.
       returned: success
       type: dict
-    ipVersion:
-      description:
-      - ipVersion is not a valid field for regional forwarding rules.
-      returned: success
-      type: str
     loadBalancingScheme:
       description:
       - This signifies what the ForwardingRule will be used for and can be EXTERNAL,
diff --git a/lib/ansible/modules/cloud/google/gcp_compute_health_check.py b/lib/ansible/modules/cloud/google/gcp_compute_health_check.py
index de4070cea6..81ce5e1b42 100644
--- a/lib/ansible/modules/cloud/google/gcp_compute_health_check.py
+++ b/lib/ansible/modules/cloud/google/gcp_compute_health_check.py
@@ -888,8 +888,7 @@ def main():
                     port_specification=dict(type='str'),
                 ),
             ),
-        ),
-        mutually_exclusive=[['http2_health_check', 'http_health_check', 'https_health_check', 'ssl_health_check', 'tcp_health_check']],
+        )
     )
 
     if not module.params['scopes']:
diff --git a/lib/ansible/modules/cloud/google/gcp_compute_image.py b/lib/ansible/modules/cloud/google/gcp_compute_image.py
index d95d27c327..4fdbecda5b 100644
--- a/lib/ansible/modules/cloud/google/gcp_compute_image.py
+++ b/lib/ansible/modules/cloud/google/gcp_compute_image.py
@@ -89,7 +89,7 @@ options:
         - The type of supported feature.
         - 'Some valid choices include: "MULTI_IP_SUBNET", "SECURE_BOOT", "UEFI_COMPATIBLE",
           "VIRTIO_SCSI_MULTIQUEUE", "WINDOWS"'
-        required: false
+        required: true
         type: str
   image_encryption_key:
     description:
@@ -489,7 +489,7 @@ def main():
             description=dict(type='str'),
             disk_size_gb=dict(type='int'),
             family=dict(type='str'),
-            guest_os_features=dict(type='list', elements='dict', options=dict(type=dict(type='str'))),
+            guest_os_features=dict(type='list', elements='dict', options=dict(type=dict(required=True, type='str'))),
             image_encryption_key=dict(type='dict', options=dict(raw_key=dict(type='str'))),
             labels=dict(type='dict'),
             licenses=dict(type='list', elements='str'),
diff --git a/lib/ansible/modules/cloud/google/gcp_compute_instance.py b/lib/ansible/modules/cloud/google/gcp_compute_instance.py
index 20f8d5af20..4d4be472eb 100644
--- a/lib/ansible/modules/cloud/google/gcp_compute_instance.py
+++ b/lib/ansible/modules/cloud/google/gcp_compute_instance.py
@@ -577,6 +577,11 @@ EXAMPLES = '''
     - auto_delete: 'true'
       boot: 'true'
       source: "{{ disk }}"
+    - auto_delete: 'true'
+      interface: NVME
+      type: SCRATCH
+      initialize_params:
+        disk_type: local-ssd
     metadata:
       startup-script-url: gs:://graphite-playground/bootstrap.sh
       cost-center: '12345'
diff --git a/test/integration/targets/gcp_compute_instance/tasks/autogen.yml b/test/integration/targets/gcp_compute_instance/tasks/autogen.yml
index 766f33222d..bb42e4eae7 100644
--- a/test/integration/targets/gcp_compute_instance/tasks/autogen.yml
+++ b/test/integration/targets/gcp_compute_instance/tasks/autogen.yml
@@ -49,6 +49,11 @@
     - auto_delete: 'true'
       boot: 'true'
       source: "{{ disk }}"
+    - auto_delete: 'true'
+      interface: NVME
+      type: SCRATCH
+      initialize_params:
+        disk_type: local-ssd
     metadata:
       startup-script-url: gs:://graphite-playground/bootstrap.sh
       cost-center: '12345'
@@ -74,6 +79,11 @@
     - auto_delete: 'true'
       boot: 'true'
       source: "{{ disk }}"
+    - auto_delete: 'true'
+      interface: NVME
+      type: SCRATCH
+      initialize_params:
+        disk_type: local-ssd
     metadata:
       startup-script-url: gs:://graphite-playground/bootstrap.sh
       cost-center: '12345'
@@ -119,6 +129,11 @@
     - auto_delete: 'true'
       boot: 'true'
       source: "{{ disk }}"
+    - auto_delete: 'true'
+      interface: NVME
+      type: SCRATCH
+      initialize_params:
+        disk_type: local-ssd
     metadata:
       startup-script-url: gs:://graphite-playground/bootstrap.sh
       cost-center: '12345'
@@ -149,6 +164,11 @@
     - auto_delete: 'true'
       boot: 'true'
       source: "{{ disk }}"
+    - auto_delete: 'true'
+      interface: NVME
+      type: SCRATCH
+      initialize_params:
+        disk_type: local-ssd
     metadata:
       startup-script-url: gs:://graphite-playground/bootstrap.sh
       cost-center: '12345'
@@ -194,6 +214,11 @@
     - auto_delete: 'true'
       boot: 'true'
       source: "{{ disk }}"
+    - auto_delete: 'true'
+      interface: NVME
+      type: SCRATCH
+      initialize_params:
+        disk_type: local-ssd
     metadata:
       startup-script-url: gs:://graphite-playground/bootstrap.sh
       cost-center: '12345'
