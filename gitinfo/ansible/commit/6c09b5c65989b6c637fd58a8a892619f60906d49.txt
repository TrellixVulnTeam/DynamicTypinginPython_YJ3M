commit 6c09b5c65989b6c637fd58a8a892619f60906d49
Author: Matt Clay <matt@mystile.com>
Date:   Fri Aug 9 08:31:13 2019 -0700

    Unit test cleanup. (#60315)
    
    * Clean up option parsing unit tests.
    * Remove unused unit test marker and import.

diff --git a/test/sanity/ignore.txt b/test/sanity/ignore.txt
index baac43ff81..d2f6657c7f 100644
--- a/test/sanity/ignore.txt
+++ b/test/sanity/ignore.txt
@@ -6916,7 +6916,6 @@ test/lib/ansible_test/_data/requirements/constraints.txt test-constraints
 test/lib/ansible_test/_data/requirements/integration.cloud.azure.txt test-constraints
 test/lib/ansible_test/_data/setup/windows-httptester.ps1 pslint:PSCustomUseLiteralPath
 test/lib/ansible_test/_data/sanity/pylint/plugins/string_format.py use-compat-six
-test/units/cli/arguments/test_optparse_helpers.py future-import-boilerplate
 test/units/config/manager/test_find_ini_config_file.py future-import-boilerplate
 test/units/contrib/inventory/test_vmware_inventory.py future-import-boilerplate
 test/units/contrib/inventory/test_vmware_inventory.py metaclass-boilerplate
@@ -7445,7 +7444,6 @@ test/units/utils/fixtures/collections/ansible_collections/my_namespace/my_collec
 test/units/utils/kubevirt_fixtures.py future-import-boilerplate
 test/units/utils/kubevirt_fixtures.py metaclass-boilerplate
 test/units/utils/test_cleanup_tmp_file.py future-import-boilerplate
-test/units/utils/test_context_objects.py future-import-boilerplate
 test/units/utils/test_encrypt.py future-import-boilerplate
 test/units/utils/test_encrypt.py metaclass-boilerplate
 test/units/utils/test_helpers.py future-import-boilerplate
diff --git a/test/units/cli/arguments/test_optparse_helpers.py b/test/units/cli/arguments/test_optparse_helpers.py
index abd8219e26..8ba5c23936 100644
--- a/test/units/cli/arguments/test_optparse_helpers.py
+++ b/test/units/cli/arguments/test_optparse_helpers.py
@@ -2,18 +2,13 @@
 # Copyright: (c) 2018, Ansible Project
 # GNU General Public License v3.0+ (see COPYING or https://www.gnu.org/licenses/gpl-3.0.txt)
 
-# Make coding more python3-ish
-from __future__ import (absolute_import, division)
+from __future__ import (absolute_import, division, print_function)
 __metaclass__ = type
 
-import pytest
-
 from ansible.cli.arguments import option_helpers as opt_help
 
 
-class TestOptparseHelpersVersion:
-
-    def test_version(self):
-        ver = opt_help.version('ansible-cli-test')
-        assert 'ansible-cli-test' in ver
-        assert 'python version' in ver
+def test_version():
+    ver = opt_help.version('ansible-cli-test')
+    assert 'ansible-cli-test' in ver
+    assert 'python version' in ver
diff --git a/test/units/modules/remote_management/oneview/test_oneview_datacenter_facts.py b/test/units/modules/remote_management/oneview/test_oneview_datacenter_facts.py
index 937a75b407..e63bf421a2 100644
--- a/test/units/modules/remote_management/oneview/test_oneview_datacenter_facts.py
+++ b/test/units/modules/remote_management/oneview/test_oneview_datacenter_facts.py
@@ -3,7 +3,6 @@
 
 import pytest
 
-from oneview_module_loader import OneViewModuleBase
 from ansible.modules.remote_management.oneview.oneview_datacenter_facts import DatacenterFactsModule
 from hpe_test_utils import FactsParamsTest
 
@@ -14,7 +13,6 @@ PARAMS_GET_CONNECTED = dict(
 )
 
 
-@pytest.mark.resource('datacenters')
 class TestDatacenterFactsModule(FactsParamsTest):
     @pytest.fixture(autouse=True)
     def setUp(self, mock_ansible_module, mock_ov_client):
diff --git a/test/units/utils/test_context_objects.py b/test/units/utils/test_context_objects.py
index 8e96fe7f3c..c56a41d012 100644
--- a/test/units/utils/test_context_objects.py
+++ b/test/units/utils/test_context_objects.py
@@ -2,16 +2,10 @@
 # Copyright: (c) 2018, Toshio Kuratomi <tkuratomi@ansible.com>
 # GNU General Public License v3.0+ (see COPYING or https://www.gnu.org/licenses/gpl-3.0.txt)
 
-# Make coding more python3-ish
-from __future__ import (absolute_import, division)
+from __future__ import (absolute_import, division, print_function)
 __metaclass__ = type
 
-try:
-    import argparse
-except ImportError:
-    argparse = None
-
-import optparse
+import argparse
 
 import pytest
 
@@ -62,7 +56,6 @@ def test_cliargs():
     assert frozenset(co.CLIArgs.from_options(options).items()) == expected
 
 
-@pytest.mark.skipIf(argparse is None)
 def test_cliargs_argparse():
     parser = argparse.ArgumentParser(description='Process some integers.')
     parser.add_argument('integers', metavar='N', type=int, nargs='+',
@@ -75,17 +68,3 @@ def test_cliargs_argparse():
     expected = frozenset((('accumulate', sum), ('integers', (1, 2))))
 
     assert frozenset(co.CLIArgs.from_options(args).items()) == expected
-
-
-# Can get rid of this test when we port ansible.cli from optparse to argparse
-def test_cliargs_optparse():
-    parser = optparse.OptionParser(description='Process some integers.')
-    parser.add_option('--sum', dest='accumulate', action='store_const',
-                      const=sum, default=max,
-                      help='sum the integers (default: find the max)')
-    opts, args = parser.parse_args([u'--sum', u'1', u'2'])
-    opts.integers = args
-
-    expected = frozenset((('accumulate', sum), ('integers', (u'1', u'2'))))
-
-    assert frozenset(co.CLIArgs.from_options(opts).items()) == expected
