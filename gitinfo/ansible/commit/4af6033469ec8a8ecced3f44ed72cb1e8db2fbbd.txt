commit 4af6033469ec8a8ecced3f44ed72cb1e8db2fbbd
Author: Fabio Alessandro Locati <me@fale.io>
Date:   Tue Aug 30 23:04:48 2016 +0200

    Require domain in rocketchat (#2803)
    
    * Set the domain as required
    
    * Add domain in the examples as well

diff --git a/lib/ansible/modules/extras/notification/rocketchat.py b/lib/ansible/modules/extras/notification/rocketchat.py
index 1239fc01d5..ffce79712b 100644
--- a/lib/ansible/modules/extras/notification/rocketchat.py
+++ b/lib/ansible/modules/extras/notification/rocketchat.py
@@ -113,11 +113,13 @@ EXAMPLES = """
   local_action:
     module: rocketchat
     token: thetoken/generatedby/rocketchat
+    domain: chat.example.com
     msg: "{{ inventory_hostname }} completed"
 
 - name: Send notification message via Rocket Chat all options
   local_action:
     module: rocketchat
+    domain: chat.example.com
     token: thetoken/generatedby/rocketchat
     msg: "{{ inventory_hostname }} completed"
     channel: "#ansible"
@@ -128,6 +130,7 @@ EXAMPLES = """
 - name: insert a color bar in front of the message for visibility purposes and use the default webhook icon and name configured in rocketchat
   rocketchat:
     token: thetoken/generatedby/rocketchat
+    domain: chat.example.com
     msg: "{{ inventory_hostname }} is alive!"
     color: good
     username: ""
@@ -136,6 +139,7 @@ EXAMPLES = """
 - name: Use the attachments API
   rocketchat:
     token: thetoken/generatedby/rocketchat
+    domain: chat.example.com
     attachments:
       - text: "Display my system load on host A and B"
         color: "#ff00dd"
@@ -207,7 +211,7 @@ def do_notify_rocketchat(module, domain, token, protocol, payload):
 def main():
     module = AnsibleModule(
         argument_spec = dict(
-            domain      = dict(type='str', required=False, default=None),
+            domain      = dict(type='str', required=True, default=None),
             token       = dict(type='str', required=True, no_log=True),
             protocol    = dict(type='str', default='https', choices=['http', 'https']),
             msg         = dict(type='str', required=False, default=None),
