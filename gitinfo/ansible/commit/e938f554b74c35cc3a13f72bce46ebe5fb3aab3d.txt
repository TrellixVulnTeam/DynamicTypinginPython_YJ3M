commit e938f554b74c35cc3a13f72bce46ebe5fb3aab3d
Author: Brian Coca <bcoca@ansible.com>
Date:   Tue Dec 2 10:58:14 2014 -0500

    better exception handling for unexpected exceptions

diff --git a/lib/ansible/runner/__init__.py b/lib/ansible/runner/__init__.py
index 8da794ba6f..b1652d86e3 100644
--- a/lib/ansible/runner/__init__.py
+++ b/lib/ansible/runner/__init__.py
@@ -733,6 +733,10 @@ class Runner(object):
                         result = utils.jsonify(dict(changed=False, skipped=True))
                         self.callbacks.on_skipped(host, None)
                         return ReturnData(host=host, result=result)
+            except errors.AnsibleError, e:
+                raise
+            except Exception, e:
+                raise errors.AnsibleError("Unexpected error while executing task: %s" % str(e))
 
             # strip out any jinja2 template syntax within
             # the data returned by the lookup plugin
diff --git a/lib/ansible/utils/template.py b/lib/ansible/utils/template.py
index c2b14d8454..3e7f5e4d81 100644
--- a/lib/ansible/utils/template.py
+++ b/lib/ansible/utils/template.py
@@ -89,13 +89,12 @@ def lookup(name, *args, **kwargs):
     tvars = kwargs.get('vars', None)
 
     if instance is not None:
-        # safely catch run failures per #5059
         try:
             ran = instance.run(*args, inject=tvars, **kwargs)
-        except errors.AnsibleUndefinedVariable:
+        except errors.AnsibleError:
             raise
         except Exception, e:
-            ran = None
+            raise errors.AnsibleError('Unexpected error in during lookup: %s' % e)
         if ran:
             ran = ",".join(ran)
         return ran
