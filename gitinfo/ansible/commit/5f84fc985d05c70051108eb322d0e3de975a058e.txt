commit 5f84fc985d05c70051108eb322d0e3de975a058e
Author: Franck Nijhof <frenck@gmail.com>
Date:   Mon Oct 13 07:34:24 2014 +0200

    Small fix for boolean when boolean type was set via a variable (somehow changes the behaviour of Ansible because of YAML as it seems. Booleans then become represented as a string).

diff --git a/lib/ansible/modules/extras/system/osx_defaults.py b/lib/ansible/modules/extras/system/osx_defaults.py
index 8baed17f2e..0dd7ca8ff6 100644
--- a/lib/ansible/modules/extras/system/osx_defaults.py
+++ b/lib/ansible/modules/extras/system/osx_defaults.py
@@ -124,9 +124,9 @@ class OSXDefaults(object):
         if type == "string":
             return str(value)
         elif type in ["bool", "boolean"]:
-            if value in [True, 1, "true", "1", "yes"]:
+            if value.lower() in [True, 1, "true", "1", "yes"]:
                 return True
-            elif value in [False, 0, "false", "0", "no"]:
+            elif value.lower() in [False, 0, "false", "0", "no"]:
                 return False
             raise OSXDefaultsException("Invalid boolean value: {0}".format(repr(value)))
         elif type == "date":
@@ -191,7 +191,7 @@ class OSXDefaults(object):
         rc, out, err = self.module.run_command([self.executable, "read", self.domain, self.key])
 
         # Strip output
-        # out = out.strip()
+        out = out.strip()
 
         # An non zero RC at this point is kinda strange...
         if rc != 0:
