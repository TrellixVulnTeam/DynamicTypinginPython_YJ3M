commit 584fd7a261a7e1f3a2cf5c083c0510f177612fee
Author: Daniel Hokka Zakrisson <daniel@hozac.com>
Date:   Thu Feb 14 12:14:20 2013 +0100

    Fix Python 2.6-isms in sysctl module

diff --git a/library/sysctl b/library/sysctl
index d39cc2035e..c92df25690 100644
--- a/library/sysctl
+++ b/library/sysctl
@@ -161,8 +161,9 @@ def sysctl_check(current_step, **sysctl_args):
     # TODO choose if prefered to use os.access() instead try/catch on open
     if current_step == 'before':
         try:
-            with open(sysctl_args['sysctl_file']) as f: pass
-        except IOError as e:
+            f = open(sysctl_args['sysctl_file'])
+            f.close()
+        except IOError, e:
             return 1, 'unable to open supplied sysctl.conf'
    
     # no smart checks at this step ?
@@ -184,11 +185,12 @@ def sysctl_check(current_step, **sysctl_args):
     if current_step == 'after' and sysctl_args['checks'] in ['after', 'both']:
 
         if sysctl_args['value'] is not None:
-            with open(sysctl_args['key_path'],'r') as f:
-                output = f.read()
-                output = output.strip(' \t\n\r')
-                if output != sysctl_args['value']:
-                    return 1, 'key seems not set to value even after update/sysctl, founded : <%s>, wanted : <%s>' % (output, sysctl_args['value'])
+            f = open(sysctl_args['key_path'],'r')
+            output = f.read()
+            f.close()
+            output = output.strip(' \t\n\r')
+            if output != sysctl_args['value']:
+                return 1, 'key seems not set to value even after update/sysctl, founded : <%s>, wanted : <%s>' % (output, sysctl_args['value'])
         
         return 0, ''
     
