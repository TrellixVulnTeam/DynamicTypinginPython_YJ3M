commit bf7247c78c187c80f5a7345260c12cf234af6eb2
Author: Michael DeHaan <michael.dehaan@gmail.com>
Date:   Wed Oct 2 22:09:02 2013 -0400

    Update rst

diff --git a/docsite/latest/rst/intro_adhoc.rst b/docsite/latest/rst/intro_adhoc.rst
index 49d56170e3..48ed991035 100644
--- a/docsite/latest/rst/intro_adhoc.rst
+++ b/docsite/latest/rst/intro_adhoc.rst
@@ -77,7 +77,7 @@ It is also possible to sudo to a user other than root using
 Ok, so those are basics.  If you didn't read about patterns and groups yet, go back and read :doc:`intro_patterns`.
 
 The ``-f 10`` in the above specifies the usage of 10 simultaneous
-processes to use.   You can also set this in :doc:`intro_config` to avoid setting it again.  The default is actually 5, which
+processes to use.   You can also set this in :doc:`intro_configuration` to avoid setting it again.  The default is actually 5, which
 is really small and conservative.  You are probably going to want to talk to a lot more simultaneous hosts so feel free
 to crank this up.  If you have more hosts than the value set for the fork count, Ansible will talk to them, but it will
 take a little longer.  Feel free to push this value as high as your system can handle it!
diff --git a/docsite/latest/rst/intro_configuration.rst b/docsite/latest/rst/intro_configuration.rst
index 30128def64..f0acf6368d 100644
--- a/docsite/latest/rst/intro_configuration.rst
+++ b/docsite/latest/rst/intro_configuration.rst
@@ -195,7 +195,7 @@ to talk to::
 host_key_checking
 =================
 
-As described in :doc:`intro_gettingstarted`, host key checking is on by default in Ansible 1.3 and later.  If you understand the
+As described in :doc:`intro_getting_started`, host key checking is on by default in Ansible 1.3 and later.  If you understand the
 implications and wish to disable it, you may do so here by setting the value to False::
 
     host_key_checking=True
diff --git a/docsite/latest/rst/intro_getting_started.rst b/docsite/latest/rst/intro_getting_started.rst
index 2f981c0ae3..a894cf193b 100644
--- a/docsite/latest/rst/intro_getting_started.rst
+++ b/docsite/latest/rst/intro_getting_started.rst
@@ -28,11 +28,11 @@ OpenSSH called 'paramiko'.  If you wish to use features like Kerberized SSH and
 
 In Ansible 1.2 and before, the default was strictly paramiko and native SSH had to be explicitly selected with -c ssh or set in the configuration file.
 
-If talking with some remote devices that don't support SFTP, you can switch to SCP mode in :doc:`intro_config`.
+If talking with some remote devices that don't support SFTP, you can switch to SCP mode in :doc:`intro_configuration`.
 
 When speaking with remote machines, Ansible will by default assume you are using SSH keys.  To enable password auth, supply the option --ask-pass where needed.  If using sudo features and when sudo requires a password, also supply --ask-sudo-pass as appropriate.
 
-Ansible also contains a feature called :doc:`playbooks_accelerate` which uses SSH for initial key exchange
+Ansible also contains a feature called :doc:`playbooks_acceleration` which uses SSH for initial key exchange
 and then communicates over a high speed encrypted connection.  
 
 While it may be common sense, it is worth sharing: Any management system benefits from being run near your machines you are being managed. If running in a cloud, onsider running Ansible from a machine inside that cloud.
diff --git a/docsite/latest/rst/intro_installation.rst b/docsite/latest/rst/intro_installation.rst
index 357123c0f0..ef493be057 100644
--- a/docsite/latest/rst/intro_installation.rst
+++ b/docsite/latest/rst/intro_installation.rst
@@ -12,7 +12,7 @@ you have a github account.  This is also where we keep the issue tracker for sha
 bugs and feature ideas.
 
 Basics / What Will Be Installed
-``````````````````````
+```````````````````````````````
 
 Ansible by default manages machines over the SSH protocol.
 
