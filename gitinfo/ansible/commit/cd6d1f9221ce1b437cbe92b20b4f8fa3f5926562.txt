commit cd6d1f9221ce1b437cbe92b20b4f8fa3f5926562
Author: James Cammarata <jimi@sngx.net>
Date:   Thu May 7 21:14:16 2015 -0500

    Fix pickling errors with cache plugins (v2)
    
    Fixes #10945

diff --git a/lib/ansible/plugins/cache/base.py b/lib/ansible/plugins/cache/base.py
index 051f02d0b0..1f85aa6174 100644
--- a/lib/ansible/plugins/cache/base.py
+++ b/lib/ansible/plugins/cache/base.py
@@ -26,6 +26,9 @@ from six import add_metaclass
 @add_metaclass(ABCMeta)
 class BaseCacheModule:
 
+    def __init__(self):
+        self.__getstate__ = self.copy
+
     @abstractmethod
     def get(self, key):
         pass
@@ -53,3 +56,4 @@ class BaseCacheModule:
     @abstractmethod
     def copy(self):
         pass
+
diff --git a/lib/ansible/plugins/cache/memcached.py b/lib/ansible/plugins/cache/memcached.py
index e7321a5a6b..519ca776e0 100644
--- a/lib/ansible/plugins/cache/memcached.py
+++ b/lib/ansible/plugins/cache/memcached.py
@@ -113,6 +113,8 @@ class CacheModuleKeys(collections.MutableSet):
         self._cache = cache
         self._keyset = dict(*args, **kwargs)
 
+        super(CacheModule, self).__init__()
+
     def __contains__(self, key):
         return key in self._keyset
 
diff --git a/lib/ansible/plugins/cache/memory.py b/lib/ansible/plugins/cache/memory.py
index 1562836151..19591a40cf 100644
--- a/lib/ansible/plugins/cache/memory.py
+++ b/lib/ansible/plugins/cache/memory.py
@@ -24,6 +24,8 @@ class CacheModule(BaseCacheModule):
     def __init__(self, *args, **kwargs):
         self._cache = {}
 
+        super(CacheModule, self).__init__()
+
     def get(self, key):
         return self._cache.get(key)
 
diff --git a/lib/ansible/plugins/cache/redis.py b/lib/ansible/plugins/cache/redis.py
index 287c14bd2a..b7a624520a 100644
--- a/lib/ansible/plugins/cache/redis.py
+++ b/lib/ansible/plugins/cache/redis.py
@@ -51,6 +51,8 @@ class CacheModule(BaseCacheModule):
         self._cache = StrictRedis(*connection)
         self._keys_set = 'ansible_cache_keys'
 
+        super(CacheModule, self).__init__()
+
     def _make_key(self, key):
         return self._prefix + key
 
@@ -100,3 +102,4 @@ class CacheModule(BaseCacheModule):
         for key in self.keys():
             ret[key] = self.get(key)
         return ret
+
