commit 96ef6482c57a5b8e7bba7758f7f8d3e5c6187e16
Author: Seth Vidal <skvidal@fedoraproject.org>
Date:   Mon May 14 16:14:38 2012 -0400

    add --private-key option and related infrastructure to make paramiko work
    with a private key file - not just an agent or pw

diff --git a/lib/ansible/connection.py b/lib/ansible/connection.py
index 21c056c092..48b6173089 100644
--- a/lib/ansible/connection.py
+++ b/lib/ansible/connection.py
@@ -87,8 +87,8 @@ class ParamikoConnection(object):
                 username=user,
                 allow_agent=True,
                 look_for_keys=True,
+                key_filename=self.runner.private_key_file,
                 password=self.runner.remote_pass,
-                # key_filename=None, # TODO: allow this to be passed in
                 timeout=self.runner.timeout,
                 port=self.port
             )
diff --git a/lib/ansible/constants.py b/lib/ansible/constants.py
index a4c03420dc..7906b15cbe 100644
--- a/lib/ansible/constants.py
+++ b/lib/ansible/constants.py
@@ -34,6 +34,7 @@ DEFAULT_TIMEOUT        = 10
 DEFAULT_POLL_INTERVAL  = 15
 DEFAULT_REMOTE_USER    = 'root'
 DEFAULT_REMOTE_PASS    = None
+DEFAULT_PRIVATE_KEY_FILE    = None
 DEFAULT_SUDO_PASS      = None
 DEFAULT_SUDO_USER      = 'root'
 DEFAULT_REMOTE_PORT    = 22
diff --git a/lib/ansible/runner.py b/lib/ansible/runner.py
index 3ebe089f50..8dc5b784ea 100644
--- a/lib/ansible/runner.py
+++ b/lib/ansible/runner.py
@@ -76,9 +76,10 @@ class Runner(object):
         forks=C.DEFAULT_FORKS, timeout=C.DEFAULT_TIMEOUT, 
         pattern=C.DEFAULT_PATTERN, remote_user=C.DEFAULT_REMOTE_USER, 
         remote_pass=C.DEFAULT_REMOTE_PASS, remote_port=C.DEFAULT_REMOTE_PORT, 
-        sudo_pass=C.DEFAULT_SUDO_PASS, background=0, basedir=None, 
-        setup_cache=None, transport=C.DEFAULT_TRANSPORT, conditional='True', 
-        callbacks=None, debug=False, sudo=False, sudo_user=C.DEFAULT_SUDO_USER,
+        private_key_file=C.DEFAULT_PRIVATE_KEY_FILE, sudo_pass=C.DEFAULT_SUDO_PASS, 
+        background=0, basedir=None, setup_cache=None, 
+        transport=C.DEFAULT_TRANSPORT, conditional='True', callbacks=None, 
+        debug=False, sudo=False, sudo_user=C.DEFAULT_SUDO_USER,
         module_vars=None, is_playbook=False, inventory=None):
 
         """
@@ -92,6 +93,7 @@ class Runner(object):
         remote_user  : connect as this remote username
         remote_pass  : supply this password (if not using keys)
         remote_port  : use this default remote port (if not set by the inventory system)
+        private_key_file  : use this private key as your auth key
         sudo_user    : If you want to sudo to a user other than root.
         sudo_pass    : sudo password if using sudo and sudo requires a password
         background   : run asynchronously with a cap of this many # of seconds (if not 0)
@@ -142,6 +144,7 @@ class Runner(object):
         self.remote_user = remote_user
         self.remote_pass = remote_pass
         self.remote_port = remote_port
+        self.private_key_file = private_key_file
         self.background  = background
         self.basedir     = basedir
         self.sudo        = sudo
diff --git a/lib/ansible/utils.py b/lib/ansible/utils.py
index c6a7346fce..f10052b0f5 100644
--- a/lib/ansible/utils.py
+++ b/lib/ansible/utils.py
@@ -318,6 +318,8 @@ def base_parser(constants=C, usage="", output_opts=False, runas_opts=False, asyn
         default=constants.DEFAULT_HOST_LIST)
     parser.add_option('-k', '--ask-pass', default=False, dest='ask_pass', action='store_true',
         help='ask for SSH password')
+    parser.add_option('--private-key', default=None, dest='private_key_file',
+        help='use this file to authenticate the connection')
     parser.add_option('-K', '--ask-sudo-pass', default=False, dest='ask_sudo_pass', action='store_true',
         help='ask for sudo password')
     parser.add_option('-M', '--module-path', dest='module_path',
