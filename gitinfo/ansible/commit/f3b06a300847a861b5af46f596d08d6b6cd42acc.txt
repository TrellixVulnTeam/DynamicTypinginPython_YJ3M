commit f3b06a300847a861b5af46f596d08d6b6cd42acc
Author: Michel Blanc <mb@mbnet.fr>
Date:   Tue Mar 5 17:19:14 2013 +0100

    Adds crypt scheme list for vars_prompt
    
    Added more details on encrypt usage for vars_prompt, including a list of
    crypt schemes and a ling to the passlib documentation.

diff --git a/docsite/rst/playbooks2.rst b/docsite/rst/playbooks2.rst
index c7dcc07a71..751a9ac04a 100644
--- a/docsite/rst/playbooks2.rst
+++ b/docsite/rst/playbooks2.rst
@@ -218,7 +218,30 @@ vars_prompt can also crypt the entered value so you can use it, for instance, wi
        encrypt: "md5_crypt" 
        confirm: yes
        salt_size: 7
-       salt: "foo" 
+
+You can use any crypt scheme supported by `Passlib <http://pythonhosted.org/passlib/lib/passlib.hash.html>` :
+
+- des_crypt - DES Crypt
+- bsdi_crypt - BSDi Crypt
+- bigcrypt - BigCrypt
+- crypt16 - Crypt16
+- md5_crypt - MD5 Crypt
+- bcrypt - BCrypt
+- sha1_crypt - SHA-1 Crypt
+- sun_md5_crypt - Sun MD5 Crypt
+- sha256_crypt - SHA-256 Crypt
+- sha512_crypt - SHA-512 Crypt
+- apr_md5_crypt - Apache’s MD5-Crypt variant
+- phpass - PHPass’ Portable Hash
+- pbkdf2_digest - Generic PBKDF2 Hashes
+- cta_pbkdf2_sha1 - Cryptacular’s PBKDF2 hash
+- dlitz_pbkdf2_sha1 - Dwayne Litzenberger’s PBKDF2 hash
+- scram - SCRAM Hash
+- bsd_nthash - FreeBSD’s MCF-compatible nthash encoding
+
+ However, the only parameters accepted are 'salt' or 'salt_size'. You can use you own salt using
+ 'salt', or have one generated automatically using 'salt_size'. If nothing is specified, a salt 
+ of size 8 will be generated.
 
 Passing Variables On The Command Line
 `````````````````````````````````````
