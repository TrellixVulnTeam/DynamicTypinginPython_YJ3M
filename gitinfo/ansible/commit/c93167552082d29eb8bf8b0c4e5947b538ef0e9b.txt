commit c93167552082d29eb8bf8b0c4e5947b538ef0e9b
Author: Michael DeHaan <michael.dehaan@gmail.com>
Date:   Fri Jul 19 09:38:31 2013 -0400

    Trim old style var references.

diff --git a/library/monitoring/nagios b/library/monitoring/nagios
index 33622b1171..a9100ad51f 100644
--- a/library/monitoring/nagios
+++ b/library/monitoring/nagios
@@ -21,7 +21,7 @@ module: nagios
 short_description: Perform common tasks in Nagios related to downtime and notifications.
 description:
   - "The M(nagios) module has two basic functions: scheduling downtime and toggling alerts for services or hosts."
-  - All actions require the I(host) parameter to be given explicitly. In playbooks you can use the C($inventory_hostname) variable to refer to the host the playbook is currently running on.
+  - All actions require the I(host) parameter to be given explicitly. In playbooks you can use the C({{inventory_hostname}}) variable to refer to the host the playbook is currently running on.
   - You can specify multiple services at once by separating them with commas, .e.g., C(services=httpd,nfs,puppet).
   - When specifying what service to handle there is a special service value, I(host), which will handle alerts/downtime for the I(host itself), e.g., C(service=host). This keyword may not be given with other services at the same time. I(Setting alerts/downtime for a host does not affect alerts/downtime for any of the services running on it.) To schedule downtime for all services on particular host use keyword "all", e.g., C(service=all).
   - When using the M(nagios) module you will need to specify your Nagios server using the C(delegate_to) parameter.
@@ -82,28 +82,28 @@ EXAMPLES = '''
 - nagios: action=downtime minutes=30 service=httpd host={{ inventory_hostname }}
 
 # schedule an hour of HOST downtime
-- nagios: action=downtime minutes=60 service=host host=$inventory_hostname
+- nagios: action=downtime minutes=60 service=host host={{ inventory_hostname }}
 
 # schedule downtime for ALL services on HOST
-- nagios: action=downtime minutes=45 service=all host=$inventory_hostname
+- nagios: action=downtime minutes=45 service=all host={{ inventory_hostname }}
 
 # schedule downtime for a few services
-- nagios: action=downtime services=frob,foobar,qeuz host=$inventory_hostname
+- nagios: action=downtime services=frob,foobar,qeuz host={{ inventory_hostname }}
 
 # enable SMART disk alerts
-- nagios: action=enable_alerts service=smart host=$inventory_hostname
+- nagios: action=enable_alerts service=smart host={{ inventory_hostname }}
 
 # "two services at once: disable httpd and nfs alerts"
-- nagios: action=disable_alerts service=httpd,nfs host=$inventory_hostname
+- nagios: action=disable_alerts service=httpd,nfs host={{ inventory_hostname }}
 
 # disable HOST alerts
-- nagios: action=disable_alerts service=host host=$inventory_hostname
+- nagios: action=disable_alerts service=host host={{ inventory_hostname }}
 
 # silence ALL alerts
-- nagios: action=silence host=$inventory_hostname
+- nagios: action=silence host={{ inventory_hostname }}
 
 # unsilence all alerts
-- nagios: action=unsilence host=$inventory_hostname
+- nagios: action=unsilence host={{ inventory_hostname }}
 
 # SHUT UP NAGIOS
 - nagios: action=silence_nagios
