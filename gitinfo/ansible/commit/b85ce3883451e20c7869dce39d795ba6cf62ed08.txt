commit b85ce3883451e20c7869dce39d795ba6cf62ed08
Author: Brian Coca <bcoca@ansible.com>
Date:   Wed May 13 11:15:04 2015 -0400

    slight changes to error handling to align with v1

diff --git a/bin/ansible b/bin/ansible
index 467dd505a2..12ad89fcff 100755
--- a/bin/ansible
+++ b/bin/ansible
@@ -35,7 +35,7 @@ except Exception:
 import os
 import sys
 
-from ansible.errors import AnsibleError, AnsibleOptionsError
+from ansible.errors import AnsibleError, AnsibleOptionsError, AnsibleParserError
 from ansible.utils.display import Display
 
 ########################################################
@@ -70,10 +70,20 @@ if __name__ == '__main__':
     except AnsibleOptionsError as e:
         cli.parser.print_help()
         display.display(str(e), stderr=True, color='red')
-        sys.exit(1)
+        sys.exit(5)
+    except AnsibleParserError as e:
+        display.display(str(e), stderr=True, color='red')
+        sys.exit(4)
+# TQM takes care of these, but leaving comment to reserve the exit codes
+#    except AnsibleHostUnreachable as e:
+#        display.display(str(e), stderr=True, color='red')
+#        sys.exit(3)
+#    except AnsibleHostFailed as e:
+#        display.display(str(e), stderr=True, color='red')
+#        sys.exit(2)
     except AnsibleError as e:
         display.display(str(e), stderr=True, color='red')
-        sys.exit(2)
+        sys.exit(1)
     except KeyboardInterrupt:
         display.error("interrupted")
-        sys.exit(4)
+        sys.exit(99)
diff --git a/lib/ansible/cli/adhoc.py b/lib/ansible/cli/adhoc.py
index f7692a1335..9a055e5e62 100644
--- a/lib/ansible/cli/adhoc.py
+++ b/lib/ansible/cli/adhoc.py
@@ -105,7 +105,7 @@ class AdHocCLI(CLI):
             return 0
 
         if self.options.module_name in C.MODULE_REQUIRE_ARGS and not self.options.module_args:
-            raise AnsibleError("No argument passed to %s module" % self.options.module_name)
+            raise AnsibleOptionsError("No argument passed to %s module" % self.options.module_name)
 
         #TODO: implement async support
         #if self.options.seconds:
