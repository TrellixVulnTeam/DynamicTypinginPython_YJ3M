commit 9761250a4b179d2064a49e2f4b4a66ba423de26f
Author: Mick Bass <mick.bass@47lining.com>
Date:   Sun Sep 27 17:12:13 2015 -0600

    Allow tree-ish to be used for galaxy role version
    
    Ensure that ansible-galaxy version can be a branch, a tag, or any tree-ish
    supported by git including specific commit IDs.  For git scm roles, adds an
    explicit git checkout of the specified role_version prior to the git archive.
    This means that we'll always archive from HEAD of whatever role_version is
    checked out. role_version can be a branch, a tag, or any <tree-ish> supported
    by git including specific commit IDs.  These changes also ensure
    ansible-galaxy works for scm clones when specified version differs from
    repository default branch.

diff --git a/lib/ansible/galaxy/role.py b/lib/ansible/galaxy/role.py
index dc9da5d79c..5acd26c92d 100644
--- a/lib/ansible/galaxy/role.py
+++ b/lib/ansible/galaxy/role.py
@@ -310,5 +310,3 @@ class GalaxyRole(object):
         }
         """
         return dict(scm=self.scm, src=self.src, version=self.version, name=self.name)
-
-
diff --git a/lib/ansible/playbook/role/requirement.py b/lib/ansible/playbook/role/requirement.py
index 1a640247e2..807dd1e82f 100644
--- a/lib/ansible/playbook/role/requirement.py
+++ b/lib/ansible/playbook/role/requirement.py
@@ -190,6 +190,17 @@ class RoleRequirement(RoleDefinition):
         if rc != 0:
             raise AnsibleError ("- command %s failed in directory %s (rc=%s)" % (' '.join(clone_cmd), tempdir, rc))
 
+        if scm == 'git' and version:
+            checkout_cmd = [scm, 'checkout', version]
+            with open('/dev/null', 'w') as devnull:
+                try:
+                    popen = subprocess.Popen(checkout_cmd, cwd=os.path.join(tempdir, name), stdout=devnull, stderr=devnull)
+                except (IOError, OSError):
+                    raise AnsibleError("error executing: %s" % " ".join(checkout_cmd))
+                rc = popen.wait()
+            if rc != 0:
+                raise AnsibleError("- command %s failed in directory %s (rc=%s)" % (' '.join(checkout_cmd), tempdir, rc))
+
         temp_file = tempfile.NamedTemporaryFile(delete=False, suffix='.tar')
         if scm == 'hg':
             archive_cmd = ['hg', 'archive', '--prefix', "%s/" % name]
