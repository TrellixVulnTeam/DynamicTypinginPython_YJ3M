commit 5bdc32ff8d855a257abe205c14ef14fc4c4e7eb8
Author: Chaitanya Deshpande <chaitanya.deshpande@avinetworks.com>
Date:   Wed Mar 21 12:17:09 2018 +0530

    Updated modules for Avi version 17.2.8 (#37344)

diff --git a/lib/ansible/modules/network/avi/avi_applicationprofile.py b/lib/ansible/modules/network/avi/avi_applicationprofile.py
index 083fd4a21e..5fa531d980 100644
--- a/lib/ansible/modules/network/avi/avi_applicationprofile.py
+++ b/lib/ansible/modules/network/avi/avi_applicationprofile.py
@@ -64,6 +64,13 @@ options:
             - Not compatible with connection multiplexing.
             - Default value when not specified in API or module is interpreted by Avi Controller as False.
         type: bool
+    preserve_client_port:
+        description:
+            - Specifies if we need to preserve client port while preseving client ip for backend connections.
+            - Field introduced in 17.2.7.
+            - Default value when not specified in API or module is interpreted by Avi Controller as False.
+        version_added: "2.6"
+        type: bool
     tcp_app_profile:
         description:
             - Specifies the tcp application proxy profile parameters.
@@ -176,6 +183,7 @@ def main():
         http_profile=dict(type='dict',),
         name=dict(type='str', required=True),
         preserve_client_ip=dict(type='bool',),
+        preserve_client_port=dict(type='bool',),
         tcp_app_profile=dict(type='dict',),
         tenant_ref=dict(type='str',),
         type=dict(type='str', required=True),
diff --git a/lib/ansible/modules/network/avi/avi_controllerproperties.py b/lib/ansible/modules/network/avi/avi_controllerproperties.py
index 1cd8d42e4a..16aebb12f7 100644
--- a/lib/ansible/modules/network/avi/avi_controllerproperties.py
+++ b/lib/ansible/modules/network/avi/avi_controllerproperties.py
@@ -107,6 +107,13 @@ options:
     dummy:
         description:
             - Number of dummy.
+    enable_memory_balancer:
+        description:
+            - Enable/disable memory balancer.
+            - Field introduced in 17.2.8.
+            - Default value when not specified in API or module is interpreted by Avi Controller as True.
+        version_added: "2.6"
+        type: bool
     fatal_error_lease_time:
         description:
             - Number of fatal_error_lease_time.
@@ -329,6 +336,7 @@ def main():
         dead_se_detection_timer=dict(type='int',),
         dns_refresh_period=dict(type='int',),
         dummy=dict(type='int',),
+        enable_memory_balancer=dict(type='bool',),
         fatal_error_lease_time=dict(type='int',),
         max_dead_se_in_grp=dict(type='int',),
         max_pcap_per_tenant=dict(type='int',),
diff --git a/lib/ansible/modules/network/avi/avi_serviceenginegroup.py b/lib/ansible/modules/network/avi/avi_serviceenginegroup.py
index 092c5503a3..a7bd1c2d03 100644
--- a/lib/ansible/modules/network/avi/avi_serviceenginegroup.py
+++ b/lib/ansible/modules/network/avi/avi_serviceenginegroup.py
@@ -193,6 +193,15 @@ options:
             - Use both the active and standby service engines for virtual service placement in the legacy active standby ha mode.
             - Default value when not specified in API or module is interpreted by Avi Controller as False.
         type: bool
+    enable_hsm_priming:
+        description:
+            - (this is a beta feature).
+            - Enable hsm key priming.
+            - If enabled, key handles on the hsm will be synced to se before processing client connections.
+            - Field introduced in 17.2.7.
+            - Default value when not specified in API or module is interpreted by Avi Controller as False.
+        version_added: "2.6"
+        type: bool
     enable_routing:
         description:
             - Enable routing for this serviceenginegroup .
@@ -673,6 +682,7 @@ def main():
         disable_tso=dict(type='bool',),
         disk_per_se=dict(type='int',),
         distribute_load_active_standby=dict(type='bool',),
+        enable_hsm_priming=dict(type='bool',),
         enable_routing=dict(type='bool',),
         enable_vip_on_all_interfaces=dict(type='bool',),
         enable_vmac=dict(type='bool',),
diff --git a/lib/ansible/modules/network/avi/avi_sslprofile.py b/lib/ansible/modules/network/avi/avi_sslprofile.py
index c687844cc8..a36b183e00 100644
--- a/lib/ansible/modules/network/avi/avi_sslprofile.py
+++ b/lib/ansible/modules/network/avi/avi_sslprofile.py
@@ -97,6 +97,13 @@ options:
     tenant_ref:
         description:
             - It is a reference to an object of type tenant.
+    type:
+        description:
+            - Ssl profile type.
+            - Enum options - SSL_PROFILE_TYPE_APPLICATION, SSL_PROFILE_TYPE_SYSTEM.
+            - Field introduced in 17.2.8.
+            - Default value when not specified in API or module is interpreted by Avi Controller as SSL_PROFILE_TYPE_APPLICATION.
+        version_added: "2.6"
     url:
         description:
             - Avi controller URL of the object.
@@ -187,6 +194,7 @@ def main():
         ssl_session_timeout=dict(type='int',),
         tags=dict(type='list',),
         tenant_ref=dict(type='str',),
+        type=dict(type='str',),
         url=dict(type='str',),
         uuid=dict(type='str',),
     )
diff --git a/lib/ansible/modules/network/avi/avi_virtualservice.py b/lib/ansible/modules/network/avi/avi_virtualservice.py
index dad369b566..2d5e29c7e8 100644
--- a/lib/ansible/modules/network/avi/avi_virtualservice.py
+++ b/lib/ansible/modules/network/avi/avi_virtualservice.py
@@ -91,6 +91,16 @@ options:
             - Field deprecated in 17.1.1.
             - Default value when not specified in API or module is interpreted by Avi Controller as False.
         type: bool
+    bulk_sync_kvcache:
+        description:
+            - (this is a beta feature).
+            - Sync key-value cache to the new ses when vs is scaled out.
+            - For ex  ssl sessions are stored using vs's key-value cache.
+            - When the vs is scaled out, the ssl session information is synced to the new se, allowing existing ssl sessions to be reused on the new se.
+            - Field introduced in 17.2.7, 18.1.1.
+            - Default value when not specified in API or module is interpreted by Avi Controller as False.
+        version_added: "2.6"
+        type: bool
     client_auth:
         description:
             - Http authentication configuration for protected resources.
@@ -229,6 +239,11 @@ options:
         description:
             - Subnet and/or network for allocating virtualservice ip by ipam provider module.
             - Field deprecated in 17.1.1.
+    l4_policies:
+        description:
+            - L4 policies applied to the data traffic of the virtual service.
+            - Field introduced in 17.2.7.
+        version_added: "2.6"
     limit_doser:
         description:
             - Limit potential dos attackers who exceed max_cps_per_client significantly to a fraction of max_cps_per_client for a while.
@@ -367,6 +382,14 @@ options:
             - It is a reference to an object of type trafficcloneprofile.
             - Field introduced in 17.1.1.
         version_added: "2.4"
+    traffic_enabled:
+        description:
+            - Knob to enable the virtual service traffic on its assigned service engines.
+            - This setting is effective only when the enabled flag is set to true.
+            - Field introduced in 17.2.8.
+            - Default value when not specified in API or module is interpreted by Avi Controller as True.
+        version_added: "2.6"
+        type: bool
     type:
         description:
             - Specify if this is a normal virtual service, or if it is the parent or child of an sni-enabled virtual hosted virtual service.
@@ -490,6 +513,7 @@ def main():
         availability_zone=dict(type='str',),
         avi_allocated_fip=dict(type='bool',),
         avi_allocated_vip=dict(type='bool',),
+        bulk_sync_kvcache=dict(type='bool',),
         client_auth=dict(type='dict',),
         close_client_conn_on_config_update=dict(type='bool',),
         cloud_config_cksum=dict(type='str',),
@@ -521,6 +545,7 @@ def main():
         ign_pool_net_reach=dict(type='bool',),
         ip_address=dict(type='dict',),
         ipam_network_subnet=dict(type='dict',),
+        l4_policies=dict(type='list',),
         limit_doser=dict(type='bool',),
         max_cps_per_client=dict(type='int',),
         microservice_ref=dict(type='str',),
@@ -552,6 +577,7 @@ def main():
         subnet_uuid=dict(type='str',),
         tenant_ref=dict(type='str',),
         traffic_clone_profile_ref=dict(type='str',),
+        traffic_enabled=dict(type='bool',),
         type=dict(type='str',),
         url=dict(type='str',),
         use_bridge_ip_as_vip=dict(type='bool',),
