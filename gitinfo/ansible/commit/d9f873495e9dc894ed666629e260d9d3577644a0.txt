commit d9f873495e9dc894ed666629e260d9d3577644a0
Author: Florian Apolloner <florian@apolloner.eu>
Date:   Thu Sep 17 14:59:22 2015 +0200

    Ported over #7158 to support SELinux context switches.

diff --git a/docsite/rst/intro_configuration.rst b/docsite/rst/intro_configuration.rst
index 3527d77c8b..ebd7e649e4 100644
--- a/docsite/rst/intro_configuration.rst
+++ b/docsite/rst/intro_configuration.rst
@@ -678,6 +678,18 @@ Ask for privilege escalation password, the default is False::
 
     become_ask_pass=True
 
+.. _become_allow_same_user:
+
+become_allow_same_user
+======================
+
+Most of the time, using *sudo* to run a command as the same user who is running
+*sudo* itself is unnecessary overhead, so Ansible does not allow it. However,
+depending on the *sudo* configuration, it may be necessary to run a command as
+the same user through *sudo*, such as to switch SELinux contexts. For this
+reason, you can set ``become_allow_same_user`` to ``True`` and disable this
+optimization.
+
 .. _paramiko_settings:
 
 Paramiko Specific Settings
diff --git a/lib/ansible/constants.py b/lib/ansible/constants.py
index e7fec130e2..73401288ef 100644
--- a/lib/ansible/constants.py
+++ b/lib/ansible/constants.py
@@ -173,6 +173,7 @@ DEFAULT_ASK_SUDO_PASS     = get_config(p, DEFAULTS, 'ask_sudo_pass',    'ANSIBLE
 # Become
 BECOME_ERROR_STRINGS      = {'sudo': 'Sorry, try again.', 'su': 'Authentication failure', 'pbrun': '', 'pfexec': '', 'runas': '', 'doas': 'Permission denied'} #FIXME: deal with i18n
 BECOME_METHODS            = ['sudo','su','pbrun','pfexec','runas','doas']
+BECOME_ALLOW_SAME_USER    = get_config(p, 'privilege_escalation', 'become_allow_same_user', 'ANSIBLE_BECOME_ALLOW_SAME_USER', False, boolean=True)
 DEFAULT_BECOME_METHOD     = get_config(p, 'privilege_escalation', 'become_method', 'ANSIBLE_BECOME_METHOD','sudo' if DEFAULT_SUDO else 'su' if DEFAULT_SU else 'sudo' ).lower()
 DEFAULT_BECOME            = get_config(p, 'privilege_escalation', 'become', 'ANSIBLE_BECOME',False, boolean=True)
 DEFAULT_BECOME_USER       = get_config(p, 'privilege_escalation', 'become_user', 'ANSIBLE_BECOME_USER', 'root')
diff --git a/lib/ansible/plugins/action/__init__.py b/lib/ansible/plugins/action/__init__.py
index b161c8f9d2..98bb73b4d5 100644
--- a/lib/ansible/plugins/action/__init__.py
+++ b/lib/ansible/plugins/action/__init__.py
@@ -453,7 +453,9 @@ class ActionBase:
             self._display.debug("no command, exiting _low_level_execute_command()")
             return dict(stdout='', stderr='')
 
-        if sudoable and self._play_context.become and self._play_context.become_user != self._play_context.remote_user:
+        allow_same_user = C.BECOME_ALLOW_SAME_USER
+        same_user = self._play_context.become_user == self._play_context.remote_user
+        if sudoable and self._play_context.become and (allow_same_user or not same_user):
             self._display.debug("using become for this command")
             cmd = self._play_context.make_become_cmd(cmd, executable=executable)
 
diff --git a/test/units/plugins/action/test_action.py b/test/units/plugins/action/test_action.py
index 54fc168c43..24fd325993 100644
--- a/test/units/plugins/action/test_action.py
+++ b/test/units/plugins/action/test_action.py
@@ -20,6 +20,7 @@ from __future__ import (absolute_import, division, print_function)
 __metaclass__ = type
 
 
+from ansible import constants as C
 from ansible.compat.tests import unittest
 from ansible.compat.tests.mock import Mock
 from ansible.playbook.play_context import PlayContext
@@ -43,3 +44,14 @@ class TestActionBase(unittest.TestCase):
         play_context.remote_user = 'apo'
         action_base._low_level_execute_command('ECHO', '/tmp', sudoable=True)
         play_context.make_become_cmd.assert_called_once_with('ECHO', executable=None)
+
+        play_context.make_become_cmd.reset_mock()
+
+        become_allow_same_user = C.BECOME_ALLOW_SAME_USER
+        C.BECOME_ALLOW_SAME_USER = True
+        try:
+            play_context.remote_user = 'root'
+            action_base._low_level_execute_command('ECHO SAME', '/tmp', sudoable=True)
+            play_context.make_become_cmd.assert_called_once_with('ECHO SAME', executable=None)
+        finally:
+            C.BECOME_ALLOW_SAME_USER = become_allow_same_user
