commit e03827b49025e1203c0ad4d3b98d4297f0ae7253
Author: Rene Moser <mail@renemoser.net>
Date:   Thu May 14 00:18:10 2015 +0200

    cloudstack: replace old _id() with new generic style from utils

diff --git a/lib/ansible/modules/extras/cloud/cloudstack/cs_instance.py b/lib/ansible/modules/extras/cloud/cloudstack/cs_instance.py
index bf4ae02397..3b8667f4de 100644
--- a/lib/ansible/modules/extras/cloud/cloudstack/cs_instance.py
+++ b/lib/ansible/modules/extras/cloud/cloudstack/cs_instance.py
@@ -536,7 +536,7 @@ class AnsibleCloudStackInstance(AnsibleCloudStack):
         args_instance_update['group']               = self.module.params.get('group')
         args_instance_update['displayname']         = self.get_display_name()
         args_instance_update['userdata']            = self.get_user_data()
-        args_instance_update['ostypeid']            = self.get_os_type_id()
+        args_instance_update['ostypeid']            = self.get_os_type('id')
 
         args_ssh_key                                = {}
         args_ssh_key['id']                          = instance['id']
diff --git a/lib/ansible/modules/extras/cloud/cloudstack/cs_iso.py b/lib/ansible/modules/extras/cloud/cloudstack/cs_iso.py
index b987d121ab..db8446614d 100644
--- a/lib/ansible/modules/extras/cloud/cloudstack/cs_iso.py
+++ b/lib/ansible/modules/extras/cloud/cloudstack/cs_iso.py
@@ -189,11 +189,11 @@ class AnsibleCloudStackIso(AnsibleCloudStack):
         iso = self.get_iso()
         if not iso:
             args = {}
-            args['zoneid'] = self.get_zone_id()
-            args['projectid'] = self.get_project_id()
+            args['zoneid'] = self.get_zone('id')
+            args['projectid'] = self.get_project('id')
 
             args['bootable'] = self.module.params.get('bootable')
-            args['ostypeid'] = self.get_os_type_id()
+            args['ostypeid'] = self.get_os_type('id')
             if args['bootable'] and not args['ostypeid']:
                 self.module.fail_json(msg="OS type 'os_type' is requried if 'bootable=true'.")
 
@@ -220,8 +220,8 @@ class AnsibleCloudStackIso(AnsibleCloudStack):
             args = {}
             args['isready'] = self.module.params.get('is_ready')
             args['isofilter'] = self.module.params.get('iso_filter')
-            args['projectid'] = self.get_project_id()
-            args['zoneid'] = self.get_zone_id()
+            args['projectid'] = self.get_project('id')
+            args['zoneid'] = self.get_zone('id')
 
             # if checksum is set, we only look on that.
             checksum = self.module.params.get('checksum')
@@ -246,8 +246,8 @@ class AnsibleCloudStackIso(AnsibleCloudStack):
             self.result['changed'] = True
             args = {}
             args['id'] = iso['id']
-            args['projectid'] = self.get_project_id()
-            args['zoneid'] = self.get_zone_id()
+            args['projectid'] = self.get_project('id')
+            args['zoneid'] = self.get_zone('id')
             if not self.module.check_mode:
                 res = self.cs.deleteIso(**args)
         return iso
diff --git a/lib/ansible/modules/extras/cloud/cloudstack/cs_securitygroup.py b/lib/ansible/modules/extras/cloud/cloudstack/cs_securitygroup.py
index 7a4350c834..deca0ea6f8 100644
--- a/lib/ansible/modules/extras/cloud/cloudstack/cs_securitygroup.py
+++ b/lib/ansible/modules/extras/cloud/cloudstack/cs_securitygroup.py
@@ -98,7 +98,7 @@ class AnsibleCloudStackSecurityGroup(AnsibleCloudStack):
         if not self.security_group:
             sg_name = self.module.params.get('name')
             args = {}
-            args['projectid'] = self.get_project_id()
+            args['projectid'] = self.get_project('id')
             sgs = self.cs.listSecurityGroups(**args)
             if sgs:
                 for s in sgs['securitygroup']:
@@ -115,7 +115,7 @@ class AnsibleCloudStackSecurityGroup(AnsibleCloudStack):
 
             args = {}
             args['name'] = self.module.params.get('name')
-            args['projectid'] = self.get_project_id()
+            args['projectid'] = self.get_project('id')
             args['description'] = self.module.params.get('description')
 
             if not self.module.check_mode:
@@ -134,7 +134,7 @@ class AnsibleCloudStackSecurityGroup(AnsibleCloudStack):
 
             args = {}
             args['name'] = self.module.params.get('name')
-            args['projectid'] = self.get_project_id()
+            args['projectid'] = self.get_project('id')
 
             if not self.module.check_mode:
                 res = self.cs.deleteSecurityGroup(**args)
diff --git a/lib/ansible/modules/extras/cloud/cloudstack/cs_securitygroup_rule.py b/lib/ansible/modules/extras/cloud/cloudstack/cs_securitygroup_rule.py
index f1ad16ffec..23a92b8ae8 100644
--- a/lib/ansible/modules/extras/cloud/cloudstack/cs_securitygroup_rule.py
+++ b/lib/ansible/modules/extras/cloud/cloudstack/cs_securitygroup_rule.py
@@ -267,7 +267,7 @@ class AnsibleCloudStackSecurityGroupRule(AnsibleCloudStack):
             security_group_name = self.module.params.get('security_group')
         args = {}
         args['securitygroupname'] =  security_group_name
-        args['projectid'] = self.get_project_id()
+        args['projectid'] = self.get_project('id')
         sgs = self.cs.listSecurityGroups(**args)
         if not sgs or 'securitygroup' not in sgs:
                 self.module.fail_json(msg="security group '%s' not found" % security_group_name)
@@ -297,7 +297,7 @@ class AnsibleCloudStackSecurityGroupRule(AnsibleCloudStack):
         args['endport']         = self.get_end_port()
         args['icmptype']        = self.module.params.get('icmp_type')
         args['icmpcode']        = self.module.params.get('icmp_code')
-        args['projectid']       = self.get_project_id()
+        args['projectid']       = self.get_project('id')
         args['securitygroupid'] = security_group['id']
 
         rule = None
