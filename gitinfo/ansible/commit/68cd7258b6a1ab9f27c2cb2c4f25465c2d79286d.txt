commit 68cd7258b6a1ab9f27c2cb2c4f25465c2d79286d
Author: James Tanner <tanner.jc@gmail.com>
Date:   Tue Apr 8 13:20:15 2014 -0400

    Fixes #6894 create docs fragment for files

diff --git a/lib/ansible/utils/module_docs.py b/lib/ansible/utils/module_docs.py
index f5a696ca56..5139b0a414 100644
--- a/lib/ansible/utils/module_docs.py
+++ b/lib/ansible/utils/module_docs.py
@@ -82,7 +82,7 @@ def get_docstring(filename, verbose=False):
                             raise Exception("missing options in fragment, possibly misformatted?")
 
                         for key, value in fragment.items():
-
+                            open("/tmp/awx.log", "a").write("key: %s value: %s\n" % (key, value))
                             if not doc.has_key(key):
                                 doc[key] = value
                             else:
diff --git a/library/files/file b/library/files/file
index 0cb9d6fe08..3b4aaa9e23 100644
--- a/library/files/file
+++ b/library/files/file
@@ -38,41 +38,6 @@ description:
      - Sets attributes of files, symlinks, and directories, or removes
        files/symlinks/directories. Many other modules support the same options as
        the M(file) module - including M(copy), M(template), and M(assemble).
-options:
-  path:
-    description:
-      - 'path to the file being managed.  Aliases: I(dest), I(name)'
-    required: true
-    default: []
-    aliases: ['dest', 'name'] 
-  state:
-    description:
-      - If C(directory), all immediate subdirectories will be created if they
-        do not exist. If C(file), the file will NOT be created if it does not
-        exist, see the M(copy) or M(template) module if you want that behavior.
-        If C(link), the symbolic link will be created or changed. Use C(hard)
-        for hardlinks. If C(absent), directories will be recursively deleted,
-        and files or symlinks will be unlinked. If C(touch) (new in 1.4), an empty file will 
-        be created if the c(path) does not exist, while an existing file or
-        directory will receive updated file access and modification times (similar
-        to the way `touch` works from the command line).
-    required: false
-    default: file
-    choices: [ file, link, directory, hard, touch, absent ]
-  src:
-    required: false
-    default: null
-    choices: []
-    description:
-      - path of the file to link to (applies only to C(state= link or hard)). Will accept absolute,
-        relative and nonexisting (with C(force)) paths. Relative paths are not expanded.
-  recurse:
-    required: false
-    default: "no"
-    choices: [ "yes", "no" ]
-    version_added: "1.1"
-    description:
-      - recursively set the specified file attributes (applies only to state=directory)
 notes:
     - See also M(copy), M(template), M(assemble)
 requirements: [ ]
