commit cfbfd38723b8c6223203be6c73004475b3404dfa
Author: Carlos E. Garcia <carlos@cgarcia.org>
Date:   Tue Apr 28 09:36:42 2015 -0400

    just a few spelling error changes

diff --git a/CHANGELOG.md b/CHANGELOG.md
index 202174c23a..2a3d2b0167 100644
--- a/CHANGELOG.md
+++ b/CHANGELOG.md
@@ -138,7 +138,7 @@ Other Notable Changes:
     Operations that depend on a clean working tree may fail unless force=yes is
     added.
   * git: When local modifications exist in a checkout, the git module will now
-    fail unless force is explictly specified.  Specifying force=yes will allow
+    fail unless force is explicitly specified.  Specifying force=yes will allow
     the module to revert and overwrite local modifications to make git actions
     succeed.
   * hg: When local modifications exist in a checkout, the hg module used to
diff --git a/docsite/rst/community.rst b/docsite/rst/community.rst
index b056c3dacc..561e214bd9 100644
--- a/docsite/rst/community.rst
+++ b/docsite/rst/community.rst
@@ -183,7 +183,7 @@ to the `module development documentation <http://docs.ansible.com/developing_mod
 Ansible's aesthetic encourages simple, readable code and consistent, conservatively extending,
 backwards-compatible improvements.  Code developed for Ansible needs to support Python 2.6+,
 while code in modules must run under Python 2.4 or higher.  Please also use a 4-space indent
-and no tabs, we do not enforce 80 column lines, we are fine wtih 120-140. We do not take 'style only'
+and no tabs, we do not enforce 80 column lines, we are fine with 120-140. We do not take 'style only'
 requests unless the code is nearly unreadable, we are "PEP8ish", but not strictly compliant.
 
 You can also contribute by testing and revising other requests, specially if it is one you are interested
diff --git a/docsite/rst/playbooks_filters.rst b/docsite/rst/playbooks_filters.rst
index 63b0dabf13..ef6185f951 100644
--- a/docsite/rst/playbooks_filters.rst
+++ b/docsite/rst/playbooks_filters.rst
@@ -277,7 +277,7 @@ Get a string checksum::
 
     {{ 'test2'|checksum }}
 
-Other hashes (platform dependant)::
+Other hashes (platform dependent)::
 
     {{ 'test2'|hash('blowfish') }}
 
diff --git a/lib/ansible/module_utils/database.py b/lib/ansible/module_utils/database.py
index 0dd1990d3e..6170614e90 100644
--- a/lib/ansible/module_utils/database.py
+++ b/lib/ansible/module_utils/database.py
@@ -33,7 +33,7 @@ class UnclosedQuoteError(SQLParseError):
     pass
 
 # maps a type of identifier to the maximum number of dot levels that are
-# allowed to specifiy that identifier.  For example, a database column can be
+# allowed to specify that identifier.  For example, a database column can be
 # specified by up to 4 levels: database.schema.table.column
 _PG_IDENTIFIER_TO_DOT_LEVEL = dict(database=1, schema=2, table=3, column=4, role=1)
 _MYSQL_IDENTIFIER_TO_DOT_LEVEL = dict(database=1, table=2, column=3, role=1, vars=1)
diff --git a/lib/ansible/module_utils/facts.py b/lib/ansible/module_utils/facts.py
index 4689dd2da9..7ded702421 100644
--- a/lib/ansible/module_utils/facts.py
+++ b/lib/ansible/module_utils/facts.py
@@ -1494,7 +1494,7 @@ class AIX(Hardware):
 
 class HPUX(Hardware):
     """
-    HP-UX-specifig subclass of Hardware. Defines memory and CPU facts:
+    HP-UX-specific subclass of Hardware. Defines memory and CPU facts:
     - memfree_mb
     - memtotal_mb
     - swapfree_mb
@@ -2062,7 +2062,7 @@ class GenericBsdIfconfigNetwork(Network):
         current_if['options'] = self.get_options(words[0])
 
     def parse_nd6_line(self, words, current_if, ips):
-        # FreBSD has options like this...
+        # FreeBSD has options like this...
         current_if['options'] = self.get_options(words[1])
 
     def parse_ether_line(self, words, current_if, ips):
@@ -2642,7 +2642,7 @@ class SunOSVirtual(Virtual):
             rc, out, err = module.run_command("/usr/sbin/virtinfo -p")
             # The output contains multiple lines with different keys like this:
             #   DOMAINROLE|impl=LDoms|control=false|io=false|service=false|root=false
-            # The output may also be not formated and the returncode is set to 0 regardless of the error condition:
+            # The output may also be not formatted and the returncode is set to 0 regardless of the error condition:
             #   virtinfo can only be run from the global zone
             try:
                 for line in out.split('\n'):
diff --git a/lib/ansible/playbook/__init__.py b/lib/ansible/playbook/__init__.py
index 93804d123c..24ba2d3c6e 100644
--- a/lib/ansible/playbook/__init__.py
+++ b/lib/ansible/playbook/__init__.py
@@ -76,7 +76,7 @@ class PlayBook(object):
         any_errors_fatal = False,
         vault_password   = False,
         force_handlers   = False,
-        # privelege escalation
+        # privilege escalation
         become           = C.DEFAULT_BECOME,
         become_method    = C.DEFAULT_BECOME_METHOD,
         become_user      = C.DEFAULT_BECOME_USER,
diff --git a/lib/ansible/playbook/play.py b/lib/ansible/playbook/play.py
index 665f1ef091..6ee85e0bf4 100644
--- a/lib/ansible/playbook/play.py
+++ b/lib/ansible/playbook/play.py
@@ -156,7 +156,7 @@ class Play(object):
         self.no_log           = utils.boolean(ds.get('no_log', 'false'))
         self.force_handlers   = utils.boolean(ds.get('force_handlers', self.playbook.force_handlers))
 
-        # Fail out if user specifies conflicting privelege escalations
+        # Fail out if user specifies conflicting privilege escalations
         if (ds.get('become') or ds.get('become_user')) and (ds.get('sudo') or ds.get('sudo_user')):
             raise errors.AnsibleError('sudo params ("become", "become_user") and su params ("sudo", "sudo_user") cannot be used together')
         if (ds.get('become') or ds.get('become_user')) and (ds.get('su') or ds.get('su_user')):
diff --git a/lib/ansible/runner/__init__.py b/lib/ansible/runner/__init__.py
index c153cd78ba..8b46683c37 100644
--- a/lib/ansible/runner/__init__.py
+++ b/lib/ansible/runner/__init__.py
@@ -152,7 +152,7 @@ class Runner(object):
         run_hosts=None,                     # an optional list of pre-calculated hosts to run on
         no_log=False,                       # option to enable/disable logging for a given task
         run_once=False,                     # option to enable/disable host bypass loop for a given task
-        become=False,                         # whether to run privelege escalation or not
+        become=False,                       # whether to run privilege escalation or not
         become_method=C.DEFAULT_BECOME_METHOD,
         become_user=C.DEFAULT_BECOME_USER,      # ex: 'root'
         become_pass=C.DEFAULT_BECOME_PASS,      # ex: 'password123' or None
diff --git a/lib/ansible/runner/connection_plugins/libvirt_lxc.py b/lib/ansible/runner/connection_plugins/libvirt_lxc.py
index 34cdb592b2..832b78251c 100644
--- a/lib/ansible/runner/connection_plugins/libvirt_lxc.py
+++ b/lib/ansible/runner/connection_plugins/libvirt_lxc.py
@@ -76,7 +76,7 @@ class Connection(object):
         if in_data:
             raise errors.AnsibleError("Internal Error: this module does not support optimized module pipelining")
 
-        # We ignore privelege escalation!
+        # We ignore privilege escalation!
         local_cmd = self._generate_cmd(executable, cmd)
 
         vvv("EXEC %s" % (local_cmd), host=self.lxc)
diff --git a/lib/ansible/runner/connection_plugins/zone.py b/lib/ansible/runner/connection_plugins/zone.py
index 211bd0fbcc..fd3242cb6e 100644
--- a/lib/ansible/runner/connection_plugins/zone.py
+++ b/lib/ansible/runner/connection_plugins/zone.py
@@ -109,7 +109,7 @@ class Connection(object):
         if in_data:
             raise errors.AnsibleError("Internal Error: this module does not support optimized module pipelining")
 
-        # We happily ignore privelege escalation
+        # We happily ignore privilege escalation
         if executable == '/bin/sh':
           executable = None
         local_cmd = self._generate_cmd(executable, cmd)
diff --git a/lib/ansible/runner/lookup_plugins/url.py b/lib/ansible/runner/lookup_plugins/url.py
index 37a1df6c7a..b42b3b14da 100644
--- a/lib/ansible/runner/lookup_plugins/url.py
+++ b/lib/ansible/runner/lookup_plugins/url.py
@@ -39,7 +39,7 @@ class LookupModule(object):
                 utils.warnings("Failed lookup url for %s : %s" % (term, str(e)))
                 continue
             except HTTPError, e:
-                utils.warnings("Recieved HTTP error for %s : %s" % (term, str(e)))
+                utils.warnings("Received HTTP error for %s : %s" % (term, str(e)))
                 continue
 
             for line in response.read().splitlines():
diff --git a/lib/ansible/utils/template.py b/lib/ansible/utils/template.py
index 5f712b2675..fb35924ce1 100644
--- a/lib/ansible/utils/template.py
+++ b/lib/ansible/utils/template.py
@@ -336,7 +336,7 @@ def template_from_string(basedir, data, vars, fail_on_undefined=False):
             data = unicode(data, 'utf-8')
    
             # Check to see if the string we are trying to render is just referencing a single
-            # var.  In this case we don't wont to accidentally change the type of the variable
+            # var.  In this case we don't want to accidentally change the type of the variable
             # to a string by using the jinja template renderer. We just want to pass it. 
             only_one = SINGLE_VAR.match(data)
             if only_one:
diff --git a/plugins/inventory/collins.py b/plugins/inventory/collins.py
index 64e16f5706..775beecb1d 100755
--- a/plugins/inventory/collins.py
+++ b/plugins/inventory/collins.py
@@ -41,7 +41,7 @@ that will be used instead of the configured values if they are set:
 If errors are encountered during operation, this script will return an exit code of
 255; otherwise, it will return an exit code of 0.
 
-Collins attributes are accessable as variables in ansible via the COLLINS['attribute_name'].
+Collins attributes are accessible as variables in ansible via the COLLINS['attribute_name'].
 
 Tested against Ansible 1.8.2 and Collins 1.3.0.
 """
diff --git a/plugins/inventory/consul_io.py b/plugins/inventory/consul_io.py
index 7bbe63b13e..4e40f96873 100755
--- a/plugins/inventory/consul_io.py
+++ b/plugins/inventory/consul_io.py
@@ -211,7 +211,7 @@ class ConsulInventory(object):
 
   def load_data_for_node(self, node, datacenter):
     '''loads the data for a sinle node adding it to various groups based on
-    metadata retrieved from the kv store and service availablity'''
+    metadata retrieved from the kv store and service availability'''
 
     index, node_data = self.consul_api.catalog.node(node, dc=datacenter)
     node = node_data['Node']
diff --git a/plugins/inventory/openstack.py b/plugins/inventory/openstack.py
index 92a81ac0e9..819380c796 100755
--- a/plugins/inventory/openstack.py
+++ b/plugins/inventory/openstack.py
@@ -17,7 +17,7 @@
 # You should have received a copy of the GNU General Public License
 # along with this software.  If not, see <http://www.gnu.org/licenses/>.
 
-# The OpenStack Inventory module uses os-client-config for configuation.
+# The OpenStack Inventory module uses os-client-config for configuration.
 # https://github.com/stackforge/os-client-config
 # This means it will either:
 #  - Respect normal OS_* environment variables like other OpenStack tools
diff --git a/test/integration/roles/test_ec2_elb_lb/tasks/main.yml b/test/integration/roles/test_ec2_elb_lb/tasks/main.yml
index ba3968a9c2..8d73e854cf 100644
--- a/test/integration/roles/test_ec2_elb_lb/tasks/main.yml
+++ b/test/integration/roles/test_ec2_elb_lb/tasks/main.yml
@@ -7,7 +7,7 @@
 # __Test Outline__
 #
 # __ec2_elb_lb__
-# create test elb with listeners and certificat
+# create test elb with listeners and certificate
 # change AZ's
 # change listeners
 # remove listeners
diff --git a/test/integration/roles/test_rax_clb/tasks/main.yml b/test/integration/roles/test_rax_clb/tasks/main.yml
index 8f6a990ceb..2426fa3ae5 100644
--- a/test/integration/roles/test_rax_clb/tasks/main.yml
+++ b/test/integration/roles/test_rax_clb/tasks/main.yml
@@ -601,7 +601,7 @@
       - rax_clb_a1.balancer.algorithm == 'LEAST_CONNECTIONS'
       - rax_clb_a1.balancer.status == 'ACTIVE'
 
-- name: Test rax_clb with updated algoritm 2
+- name: Test rax_clb with updated algorithm 2
   rax_clb:
     username: "{{ rackspace_username }}"
     api_key: "{{ rackspace_api_key }}"
diff --git a/test/integration/roles/test_var_blending/files/foo.txt b/test/integration/roles/test_var_blending/files/foo.txt
index a90999cbd8..d51be39b1b 100644
--- a/test/integration/roles/test_var_blending/files/foo.txt
+++ b/test/integration/roles/test_var_blending/files/foo.txt
@@ -4,7 +4,7 @@ This comes from host, not the parents or grandparents.
 The value of the grandparent variable grandparent_var is
 not overridden and is = 2000
 
-The value of the parent variable is not overriden and
+The value of the parent variable is not overridden and
 is = 6000
 
 The variable 'overridden_in_parent' is set in the parent
diff --git a/test/integration/roles/test_var_blending/templates/foo.j2 b/test/integration/roles/test_var_blending/templates/foo.j2
index d3361db343..10709b1adb 100644
--- a/test/integration/roles/test_var_blending/templates/foo.j2
+++ b/test/integration/roles/test_var_blending/templates/foo.j2
@@ -4,7 +4,7 @@ This comes from host, not the parents or grandparents.
 The value of the grandparent variable grandparent_var is
 not overridden and is = {{ grandparent_var }}
 
-The value of the parent variable is not overriden and
+The value of the parent variable is not overridden and
 is = {{ parent_var }}
 
 The variable 'overridden_in_parent' is set in the parent
diff --git a/v2/ansible/executor/task_queue_manager.py b/v2/ansible/executor/task_queue_manager.py
index e13930c6df..0785ed3f5e 100644
--- a/v2/ansible/executor/task_queue_manager.py
+++ b/v2/ansible/executor/task_queue_manager.py
@@ -116,7 +116,7 @@ class TaskQueueManager:
             for handler in handler_block.block:
                 handler_list.append(handler)
 
-        # then initalize it with the handler names from the handler list
+        # then initialize it with the handler names from the handler list
         for handler in handler_list:
             self._notified_handlers[handler.get_name()] = []
 
diff --git a/v2/ansible/module_utils/database.py b/v2/ansible/module_utils/database.py
index 0dd1990d3e..6170614e90 100644
--- a/v2/ansible/module_utils/database.py
+++ b/v2/ansible/module_utils/database.py
@@ -33,7 +33,7 @@ class UnclosedQuoteError(SQLParseError):
     pass
 
 # maps a type of identifier to the maximum number of dot levels that are
-# allowed to specifiy that identifier.  For example, a database column can be
+# allowed to specify that identifier.  For example, a database column can be
 # specified by up to 4 levels: database.schema.table.column
 _PG_IDENTIFIER_TO_DOT_LEVEL = dict(database=1, schema=2, table=3, column=4, role=1)
 _MYSQL_IDENTIFIER_TO_DOT_LEVEL = dict(database=1, table=2, column=3, role=1, vars=1)
diff --git a/v2/ansible/module_utils/facts.py b/v2/ansible/module_utils/facts.py
index 4689dd2da9..7ded702421 100644
--- a/v2/ansible/module_utils/facts.py
+++ b/v2/ansible/module_utils/facts.py
@@ -1494,7 +1494,7 @@ class AIX(Hardware):
 
 class HPUX(Hardware):
     """
-    HP-UX-specifig subclass of Hardware. Defines memory and CPU facts:
+    HP-UX-specific subclass of Hardware. Defines memory and CPU facts:
     - memfree_mb
     - memtotal_mb
     - swapfree_mb
@@ -2062,7 +2062,7 @@ class GenericBsdIfconfigNetwork(Network):
         current_if['options'] = self.get_options(words[0])
 
     def parse_nd6_line(self, words, current_if, ips):
-        # FreBSD has options like this...
+        # FreeBSD has options like this...
         current_if['options'] = self.get_options(words[1])
 
     def parse_ether_line(self, words, current_if, ips):
@@ -2642,7 +2642,7 @@ class SunOSVirtual(Virtual):
             rc, out, err = module.run_command("/usr/sbin/virtinfo -p")
             # The output contains multiple lines with different keys like this:
             #   DOMAINROLE|impl=LDoms|control=false|io=false|service=false|root=false
-            # The output may also be not formated and the returncode is set to 0 regardless of the error condition:
+            # The output may also be not formatted and the returncode is set to 0 regardless of the error condition:
             #   virtinfo can only be run from the global zone
             try:
                 for line in out.split('\n'):
diff --git a/v2/ansible/parsing/__init__.py b/v2/ansible/parsing/__init__.py
index bf96fba842..9551343fbf 100644
--- a/v2/ansible/parsing/__init__.py
+++ b/v2/ansible/parsing/__init__.py
@@ -149,12 +149,12 @@ class DataLoader():
                     show_content = False
             return (data, show_content)
         except (IOError, OSError) as e:
-            raise AnsibleParserError("an error occured while trying to read the file '%s': %s" % (file_name, str(e)))
+            raise AnsibleParserError("an error occurred while trying to read the file '%s': %s" % (file_name, str(e)))
 
     def _handle_error(self, yaml_exc, file_name, show_content):
         '''
         Optionally constructs an object (AnsibleBaseYAMLObject) to encapsulate the
-        file name/position where a YAML exception occured, and raises an AnsibleParserError
+        file name/position where a YAML exception occurred, and raises an AnsibleParserError
         to display the syntax exception information.
         '''
 
diff --git a/v2/ansible/parsing/mod_args.py b/v2/ansible/parsing/mod_args.py
index e3fdba093d..f46b525c66 100644
--- a/v2/ansible/parsing/mod_args.py
+++ b/v2/ansible/parsing/mod_args.py
@@ -55,7 +55,7 @@ class ModuleArgsParser:
           dest: b
 
     # extra gross, but also legal. in this case, the args specified
-    # will act as 'defaults' and will be overriden by any args specified
+    # will act as 'defaults' and will be overridden by any args specified
     # in one of the other formats (complex args under the action, or
     # parsed from the k=v string
     - command: 'pwd'
diff --git a/v2/ansible/playbook/become.py b/v2/ansible/playbook/become.py
index 272976929a..daa8c80ba9 100644
--- a/v2/ansible/playbook/become.py
+++ b/v2/ansible/playbook/become.py
@@ -37,7 +37,7 @@ class Become:
 
     def _detect_privilege_escalation_conflict(self, ds):
 
-        # Fail out if user specifies conflicting privelege escalations
+        # Fail out if user specifies conflicting privilege escalations
         has_become = 'become' in ds or 'become_user'in ds
         has_sudo   = 'sudo' in ds or 'sudo_user' in ds
         has_su     = 'su' in ds or 'su_user' in ds
diff --git a/v2/ansible/plugins/action/__init__.py b/v2/ansible/plugins/action/__init__.py
index aead235037..4265a8a5b2 100644
--- a/v2/ansible/plugins/action/__init__.py
+++ b/v2/ansible/plugins/action/__init__.py
@@ -354,9 +354,9 @@ class ActionBase:
         # FIXME: async stuff here?
         #if (module_style != 'new' or async_jid is not None or not self._connection._has_pipelining or not C.ANSIBLE_SSH_PIPELINING or C.DEFAULT_KEEP_REMOTE_FILES):
         if remote_module_path:
-            debug("transfering module to remote")
+            debug("transferring module to remote")
             self._transfer_data(remote_module_path, module_data)
-            debug("done transfering module to remote")
+            debug("done transferring module to remote")
 
         environment_string = self._compute_environment_string()
 
diff --git a/v2/ansible/plugins/action/patch.py b/v2/ansible/plugins/action/patch.py
index 717cc359f4..bf2af1be1e 100644
--- a/v2/ansible/plugins/action/patch.py
+++ b/v2/ansible/plugins/action/patch.py
@@ -34,7 +34,7 @@ class ActionModule(ActionBase):
         if src is None:
             return dict(failed=True, msg="src is required")
         elif remote_src:
-            # everyting is remote, so we just execute the module
+            # everything is remote, so we just execute the module
             # without changing any of the module arguments
             return self._execute_module()
 
diff --git a/v2/ansible/plugins/connections/libvirt_lxc.py b/v2/ansible/plugins/connections/libvirt_lxc.py
index 392436073b..1905eb6a66 100644
--- a/v2/ansible/plugins/connections/libvirt_lxc.py
+++ b/v2/ansible/plugins/connections/libvirt_lxc.py
@@ -78,7 +78,7 @@ class Connection(object):
         if in_data:
             raise errors.AnsibleError("Internal Error: this module does not support optimized module pipelining")
 
-        # We ignore privelege escalation!
+        # We ignore privilege escalation!
         local_cmd = self._generate_cmd(executable, cmd)
 
         vvv("EXEC %s" % (local_cmd), host=self.lxc)
diff --git a/v2/ansible/plugins/connections/zone.py b/v2/ansible/plugins/connections/zone.py
index a4f8c1a027..f7e19c3bb4 100644
--- a/v2/ansible/plugins/connections/zone.py
+++ b/v2/ansible/plugins/connections/zone.py
@@ -111,7 +111,7 @@ class Connection(object):
         if in_data:
             raise errors.AnsibleError("Internal Error: this module does not support optimized module pipelining")
 
-        # We happily ignore privelege escalation
+        # We happily ignore privilege escalation
         if executable == '/bin/sh':
           executable = None
         local_cmd = self._generate_cmd(executable, cmd)
diff --git a/v2/ansible/plugins/lookup/url.py b/v2/ansible/plugins/lookup/url.py
index 4361b1192d..9f1a89f772 100644
--- a/v2/ansible/plugins/lookup/url.py
+++ b/v2/ansible/plugins/lookup/url.py
@@ -37,7 +37,7 @@ class LookupModule(LookupBase):
                 utils.warnings("Failed lookup url for %s : %s" % (term, str(e)))
                 continue
             except HTTPError as e:
-                utils.warnings("Recieved HTTP error for %s : %s" % (term, str(e)))
+                utils.warnings("Received HTTP error for %s : %s" % (term, str(e)))
                 continue
 
             for line in response.read().splitlines():
diff --git a/v2/ansible/template/__init__.py b/v2/ansible/template/__init__.py
index 6c41ad3cf4..3e61028d8d 100644
--- a/v2/ansible/template/__init__.py
+++ b/v2/ansible/template/__init__.py
@@ -138,7 +138,7 @@ class Templar:
                 if self._contains_vars(variable):
 
                     # Check to see if the string we are trying to render is just referencing a single
-                    # var.  In this case we don't wont to accidentally change the type of the variable
+                    # var.  In this case we don't want to accidentally change the type of the variable
                     # to a string by using the jinja template renderer. We just want to pass it.
                     only_one = SINGLE_VAR.match(variable)
                     if only_one:
diff --git a/v2/hacking/module_formatter.py b/v2/hacking/module_formatter.py
index 7ff081c313..e70eb982de 100755
--- a/v2/hacking/module_formatter.py
+++ b/v2/hacking/module_formatter.py
@@ -384,7 +384,7 @@ def process_category(category, categories, options, env, template, outputname):
     category_file.write("""\n\n
 .. note::
     - %s: This marks a module as deprecated, which means a module is kept for backwards compatibility but usage is discouraged.  The module documentation details page may explain more about this rationale.
-    - %s: This marks a module as 'extras', which means it ships with ansible but may be a newer module and possibly (but not neccessarily) less activity maintained than 'core' modules.
+    - %s: This marks a module as 'extras', which means it ships with ansible but may be a newer module and possibly (but not necessarily) less activity maintained than 'core' modules.
     - Tickets filed on modules are filed to different repos than those on the main open source project. Core module tickets should be filed at `ansible/ansible-modules-core on GitHub <http://github.com/ansible/ansible-modules-core>`_, extras tickets to `ansible/ansible-modules-extras on GitHub <http://github.com/ansible/ansible-modules-extras>`_
 """ % (DEPRECATED, NOTCORE))
     category_file.close()
