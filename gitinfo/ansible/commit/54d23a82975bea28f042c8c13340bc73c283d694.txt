commit 54d23a82975bea28f042c8c13340bc73c283d694
Author: Bojan Vitnik <bvitnik@yahoo.com>
Date:   Wed Mar 27 05:27:08 2019 +0100

    XenServer: Minor changes to error messages (#54434)
    
    Changed "." for "!" in some error messages to make error messages uniform across the code.

diff --git a/lib/ansible/module_utils/xenserver.py b/lib/ansible/module_utils/xenserver.py
index 11aee2da7b..f09ef52197 100644
--- a/lib/ansible/module_utils/xenserver.py
+++ b/lib/ansible/module_utils/xenserver.py
@@ -712,7 +712,7 @@ def wait_for_vm_ip_address(module, vm_ref, timeout=300):
         vm_power_state = xapi_to_module_vm_power_state(xapi_session.xenapi.VM.get_power_state(vm_ref).lower())
 
         if vm_power_state != 'poweredon':
-            module.fail_json(msg="Cannot wait for VM IP address when VM is in state '%s'." % vm_power_state)
+            module.fail_json(msg="Cannot wait for VM IP address when VM is in state '%s'!" % vm_power_state)
 
         interval = 2
 
diff --git a/lib/ansible/modules/cloud/xenserver/xenserver_guest.py b/lib/ansible/modules/cloud/xenserver/xenserver_guest.py
index 4d5226fa77..3387fd3c43 100644
--- a/lib/ansible/modules/cloud/xenserver/xenserver_guest.py
+++ b/lib/ansible/modules/cloud/xenserver/xenserver_guest.py
@@ -1149,13 +1149,13 @@ class XenServerVM(XenServerObject):
                     try:
                         num_cpu_cores_per_socket = int(num_cpu_cores_per_socket)
                     except ValueError as e:
-                        self.module.fail_json(msg="VM check hardware.num_cpu_cores_per_socket: parameter should be an integer value.")
+                        self.module.fail_json(msg="VM check hardware.num_cpu_cores_per_socket: parameter should be an integer value!")
 
                     if num_cpu_cores_per_socket < 1:
                         self.module.fail_json(msg="VM check hardware.num_cpu_cores_per_socket: parameter should be greater than zero!")
 
                     if num_cpus and num_cpus % num_cpu_cores_per_socket != 0:
-                        self.module.fail_json(msg="VM check hardware.num_cpus: parameter should be a multiple of hardware.num_cpu_cores_per_socket.")
+                        self.module.fail_json(msg="VM check hardware.num_cpus: parameter should be a multiple of hardware.num_cpu_cores_per_socket!")
 
                     vm_platform = self.vm_params['platform']
                     vm_cores_per_socket = int(vm_platform.get('cores-per-socket', 1))
@@ -1174,7 +1174,7 @@ class XenServerVM(XenServerObject):
                     try:
                         memory_mb = int(memory_mb)
                     except ValueError as e:
-                        self.module.fail_json(msg="VM check hardware.memory_mb: parameter should be an integer value.")
+                        self.module.fail_json(msg="VM check hardware.memory_mb: parameter should be an integer value!")
 
                     if memory_mb < 1:
                         self.module.fail_json(msg="VM check hardware.memory_mb: parameter should be greater than zero!")
@@ -1726,14 +1726,14 @@ class XenServerVM(XenServerObject):
 
             except (TypeError, ValueError, NameError):
                 # Common failure
-                self.module.fail_json(msg="%sfailed to parse disk size. Please review value provided using documentation." % msg_prefix)
+                self.module.fail_json(msg="%sfailed to parse disk size! Please review value provided using documentation." % msg_prefix)
 
             disk_units = dict(tb=4, gb=3, mb=2, kb=1, b=0)
 
             if unit in disk_units:
                 return int(size * (1024 ** disk_units[unit]))
             else:
-                self.module.fail_json(msg="%s'%s' is not a supported unit for disk size. Supported units are ['%s']." %
+                self.module.fail_json(msg="%s'%s' is not a supported unit for disk size! Supported units are ['%s']." %
                                       (msg_prefix, unit, "', '".join(sorted(disk_units.keys(), key=lambda key: disk_units[key]))))
         else:
             return None
diff --git a/test/units/module_utils/xenserver/test_wait_for_functions.py b/test/units/module_utils/xenserver/test_wait_for_functions.py
index d36010291e..6cbeae3ab3 100644
--- a/test/units/module_utils/xenserver/test_wait_for_functions.py
+++ b/test/units/module_utils/xenserver/test_wait_for_functions.py
@@ -90,7 +90,7 @@ def test_wait_for_vm_ip_address_bad_power_state(mocker, fake_ansible_module, Xen
     with pytest.raises(FailJsonException) as exc_info:
         xenserver.wait_for_vm_ip_address(fake_ansible_module, fake_xenapi_ref('VM'))
 
-    assert exc_info.value.kwargs['msg'] == ("Cannot wait for VM IP address when VM is in state '%s'." %
+    assert exc_info.value.kwargs['msg'] == ("Cannot wait for VM IP address when VM is in state '%s'!" %
                                             xenserver.xapi_to_module_vm_power_state(bad_power_state.lower()))
 
 
