commit d69d5c294f44079743fb6ab3cc028e4980c411c5
Author: James Cammarata <jimi@sngx.net>
Date:   Fri Aug 30 13:24:24 2013 -0500

    Renaming fireball2 as 'accelerate' and removing old references

diff --git a/lib/ansible/runner/__init__.py b/lib/ansible/runner/__init__.py
index 52f58555e7..c9c2933bd1 100644
--- a/lib/ansible/runner/__init__.py
+++ b/lib/ansible/runner/__init__.py
@@ -139,8 +139,8 @@ class Runner(object):
         environment=None,                   # environment variables (as dict) to use inside the command
         complex_args=None,                  # structured data in addition to module_args, must be a dict
         error_on_undefined_vars=C.DEFAULT_UNDEFINED_VAR_BEHAVIOR, # ex. False
-        accelerate=False,                   # use fireball acceleration
-        accelerate_port=None,               # port to use with fireball acceleration
+        accelerate=False,                   # use accelerated connection
+        accelerate_port=None,               # port to use with accelerated connection
         ):
 
         # used to lock multiprocess inputs and outputs at various levels
@@ -187,8 +187,8 @@ class Runner(object):
 
         if self.accelerate:
             # if we're using accelerated mode, force the local
-            # transport to fireball2
-            self.transport = "fireball2"
+            # transport to accelerate
+            self.transport = "accelerate"
             if not self.accelerate_port:
                 self.accelerate_port = C.ACCELERATE_PORT
         elif self.transport == 'smart':
@@ -406,7 +406,7 @@ class Runner(object):
 
         host_variables = self.inventory.get_variables(host)
         host_connection = host_variables.get('ansible_connection', self.transport)
-        if host_connection in [ 'paramiko', 'ssh', 'fireball2' ]:
+        if host_connection in [ 'paramiko', 'ssh', 'accelerate' ]:
             port = host_variables.get('ansible_ssh_port', self.remote_port)
             if port is None:
                 port = C.DEFAULT_REMOTE_PORT
@@ -569,7 +569,7 @@ class Runner(object):
         actual_pass = inject.get('ansible_ssh_pass', self.remote_pass)
         actual_transport = inject.get('ansible_connection', self.transport)
         actual_private_key_file = inject.get('ansible_ssh_private_key_file', self.private_key_file)
-        if actual_transport in [ 'paramiko', 'ssh', 'fireball2' ]:
+        if actual_transport in [ 'paramiko', 'ssh', 'accelerate' ]:
             actual_port = inject.get('ansible_ssh_port', port)
 
         # the delegated host may have different SSH port configured, etc
@@ -610,8 +610,8 @@ class Runner(object):
         inject['ansible_ssh_user'] = actual_user
 
         try:
-            if self.transport == 'fireball2':
-                # for fireball2, we stuff both ports into a single
+            if self.transport == 'accelerate':
+                # for accelerate, we stuff both ports into a single
                 # variable so that we don't have to mangle other function
                 # calls just to accomodate this one case
                 actual_port = [actual_port, self.accelerate_port]
diff --git a/lib/ansible/runner/connection_plugins/fireball2.py b/lib/ansible/runner/connection_plugins/accelerate.py
similarity index 98%
rename from lib/ansible/runner/connection_plugins/fireball2.py
rename to lib/ansible/runner/connection_plugins/accelerate.py
index 47e92e49a2..a466a3aad4 100644
--- a/lib/ansible/runner/connection_plugins/fireball2.py
+++ b/lib/ansible/runner/connection_plugins/accelerate.py
@@ -66,7 +66,7 @@ class Connection(object):
         args = "password=%s port=%s" % (base64.b64encode(self.key.__str__()), str(self.fbport))
         self.ssh.connect()
         tmp_path = self.runner._make_tmp_path(self.ssh)
-        return self.runner._execute_module(self.ssh, tmp_path, 'fireball2', args, inject={"password":self.key})
+        return self.runner._execute_module(self.ssh, tmp_path, 'accelerate', args, inject={"password":self.key})
 
     def connect(self, allow_ssh=True):
         ''' activates the connection object '''
@@ -85,7 +85,7 @@ class Connection(object):
                         time.sleep(0.1)
                         tries -= 1
                 if tries == 0:
-                    vvv("Could not connect via the fireball2 connection, exceeded # of tries")
+                    vvv("Could not connect via the accelerated connection, exceeded # of tries")
                     raise errors.AnsibleError("Failed to connect")
         except:
             if allow_ssh:
diff --git a/library/utilities/fireball2 b/library/utilities/accelerate
similarity index 93%
rename from library/utilities/fireball2
rename to library/utilities/accelerate
index 3c95d2921b..14ed00d9c0 100644
--- a/library/utilities/fireball2
+++ b/library/utilities/accelerate
@@ -20,13 +20,12 @@
 
 DOCUMENTATION = '''
 ---
-module: fireball2
-short_description: Enable fireball2 mode on remote node
+module: accelerate
+short_description: Enable accelerated mode on remote node
 description:
-     - This modules launches an ephemeral I(fireball2) daemon on the remote node which
+     - This modules launches an ephemeral I(accelerate) daemon on the remote node which
        Ansible can use to communicate with nodes at high speed.
      - The daemon listens on a configurable port for a configurable amount of time.
-     - Starting a new fireball2 as a given user terminates any existing user fireballs2.
      - Fireball mode is AES encrypted
 version_added: "1.3"
 options:
@@ -38,18 +37,18 @@ options:
     aliases: []
   minutes:
     description:
-      - The I(fireball2) listener daemon is started on nodes and will stay around for
+      - The I(accelerate) listener daemon is started on nodes and will stay around for
         this number of minutes before turning itself off.
     required: false
     default: 30
 notes:
-    - See the advanced playbooks chapter for more about using fireball2 mode.
-requirements: [ "pycrypto" ]
+    - See the advanced playbooks chapter for more about using accelerated mode.
+requirements: [ "python-keyczar" ]
 author: James Cammarata
 '''
 
 EXAMPLES = '''
-# To use fireball2 mode, simple add "accelerated: true" to your play. The initial
+# To use accelerate mode, simply add "accelerated: true" to your play. The initial
 # key exchange and starting up of the daemon will occur over SSH, but all commands and
 # subsequent actions will be conducted over the raw socket connection using AES encryption
 
@@ -78,7 +77,7 @@ import traceback
 import SocketServer
 
 syslog.openlog('ansible-%s' % os.path.basename(__file__))
-PIDFILE = os.path.expanduser("~/.fireball2.pid")
+PIDFILE = os.path.expanduser("~/.accelerate.pid")
 
 # the chunk size to read and send, assuming mtu 1500 and 
 # leaving room for base64 (+33%) encoding and header (100 bytes)
@@ -117,7 +116,7 @@ def daemonize_self(module, password, port, minutes):
         if pid > 0:
             log("exiting pid %s" % pid)
             # exit first parent
-            module.exit_json(msg="daemonized fireball2 on port %s for %s minutes" % (port, minutes))
+            module.exit_json(msg="daemonized accelerate on port %s for %s minutes" % (port, minutes))
     except OSError, e:
         log("fork #1 failed: %d (%s)" % (e.errno, e.strerror))
         sys.exit(1)
@@ -333,7 +332,7 @@ def daemonize(module, password, port, minutes):
         server.serve_forever(poll_interval=1.0)
     except Exception, e:
         tb = traceback.format_exc()
-        log("exception caught, exiting fireball mode: %s\n%s" % (e, tb))
+        log("exception caught, exiting accelerated mode: %s\n%s" % (e, tb))
         sys.exit(0)
 
 def main():
