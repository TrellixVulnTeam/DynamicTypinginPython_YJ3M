commit 081251620839ecf89869afd4289e81e2037dbd65
Author: Sandra McCann <samccann@redhat.com>
Date:   Thu Oct 31 20:46:33 2019 -0400

    [Doc-Release-2.9] Add Roadmap 2.10 (#64162)
    
    * add 2.10 roadmap shell and remove very old roadmaps

diff --git a/docs/docsite/rst/roadmap/ROADMAP_2_1.rst b/docs/docsite/rst/roadmap/ROADMAP_2_1.rst
deleted file mode 100644
index 2d6ecad8e7..0000000000
--- a/docs/docsite/rst/roadmap/ROADMAP_2_1.rst
+++ /dev/null
@@ -1,105 +0,0 @@
-===========
-Ansible 2.1
-===========
-**Target: April 2016**
-
-.. contents:: Topics
-
-Windows
--------
-- General
-
-  - Figuring out privilege escalation (runas w/ username/password)
-  - Implement kerberos encryption over http
-  - pywinrm conversion to requests (Some mess here on pywinrm/requests. will need docs etc.)
-  - NTLM support
-
-- Modules
-
-  - Finish cleaning up tests and support for post-beta release
-  - Strict mode cleanup (one module in core)
-  - Domain user/group management
-  - Finish win_host and win_rm in the domain/workgroup modules.
-
-    - Close 2 existing PRs (These were deemed insufficient)
-
-  - Replicate python module API in PS/C# (deprecate hodgepodge of stuff from module_utils/powershell.ps1)
-
-Network
--------
-- Cisco modules (ios, iosxr, nxos, iosxe)
-- Arista modules (eos)
-- Juniper modules (junos)
-- OpenSwitch
-- Cumulus
-- Dell (os10) - At risk
-- Netconf shared module
-- Hooks for supporting Tower credentials
-
-VMware
-------
-This one is a little at risk due to staffing. We're investigating some community maintainers and shifting some people at Ansible around, but it is a VERY high priority.
-
-- vsphere\_guest brought to parity with other vmware modules (vs Viasat and 'whereismyjetpack' provided modules)
-- VMware modules moved to official pyvmomi bindings
-- VMware inventory script updates for pyvmomi, adding tagging support
-
-Azure
------
-This is on hold until Microsoft swaps out the code generator on the Azure Python SDK, which may introduce breaking changes. We have basic modules working against all of these resources at this time. Could ship it against current SDK, but may break. Or should the version be pinned?)
-- Minimal Azure coverage using new ARM api
-- Resource Group
-- Virtual Network
-- Subnet
-- Public IP
-- Network Interface
-- Storage Account
-- Security Group
-- Virtual Machine
-- Update of inventory script to use new API, adding tagging support
-
-
-Docker
-------
-- Start Docker module refactor
-- Update to match current docker CLI capabilities
-- Docker exec support
-
-Cloud
------
-Upgrade other cloud modules or work with community maintainers to upgrade.  (In order)
-
-- AWS (Community maintainers)
-- Openstack (Community maintainers)
-- Google (Google/Community)
-- Digital Ocean (Community)
-
-Ansiballz
----------
-Renamed from Ziploader
-
-- Write code to create the zipfile that gets passed across the wire to be run on the remote python
-- Port most of the functionality in module\_utils to be usage in ansiballz instead
-- Port a few essential modules to use ansiballz instead of module-replacer as proof of concept
-- New modules will be able to use ansiballz.  Old modules will need to be ported in future releases (Some modules will not need porting but others will)
-- Better testing of modules, caching of modules clientside(Have not yet arrived at an architecture for this that we like), better code sharing between ansible/ansible and modules
-- ansiballz is a helpful building block for: python3 porting(high priority), better code sharing between modules(medium priority)
-- ansiballz is a good idea before: enabling users to have custom module_utils directories
-
-Diff-support
-------------
-Expand module diff support (already in progress in devel)
-
-- Framework done. Need to add to modules, test etc.
-- Coordinate with community to update their modules
-
-Other
------
-Things being kicking down the road that we said we'd do
-
-- NOT remerging core with ansible/ansible this release cycle
-
-Community
----------
-- Define the process/ETA for reviewing PR's from community
-- Publish better docs and how-tos for submitting code/features/fixes
diff --git a/docs/docsite/rst/roadmap/ROADMAP_2_10.rst b/docs/docsite/rst/roadmap/ROADMAP_2_10.rst
new file mode 100644
index 0000000000..c006ee0340
--- /dev/null
+++ b/docs/docsite/rst/roadmap/ROADMAP_2_10.rst
@@ -0,0 +1,35 @@
+============
+Ansible 2.10
+============
+
+.. contents::
+   :local:
+
+Release Schedule
+----------------
+
+Expected
+========
+
+PRs must be raised well in advance of the dates below to have a chance of being included in this Ansible release.
+
+.. note:: There is no Alpha phase in 2.10.
+
+- TBD 2020-??-?? Beta 1 **Feature freeze**
+  No new functionality (including modules/plugins) to any code
+
+- 2020-??-?? Release Candidate 1
+- 2020-??-?? Release Candidate 2 if needed)
+- 2020-??-?? Release
+
+
+
+Release Manager
+---------------
+
+Toshio Kuratomi (IRC: abadger1999; GitHub: @abadger)
+
+Planned work
+============
+
+See the `Ansible 2.10 Project Board <https://github.com/ansible/ansible/projects/39>`_
diff --git a/docs/docsite/rst/roadmap/ROADMAP_2_2.rst b/docs/docsite/rst/roadmap/ROADMAP_2_2.rst
deleted file mode 100644
index c54124a9db..0000000000
--- a/docs/docsite/rst/roadmap/ROADMAP_2_2.rst
+++ /dev/null
@@ -1,239 +0,0 @@
-===========
-Ansible 2.2
-===========
-**Target: September 2016**
-
-.. contents:: Topics
-
-Docker
-------
-Lead by Chris Houseknecht
-
-- Docker_network: **done**
-- Docker_volume: Not in this release
-- Docker_file: Not in this release.
-- Openshift:  oso_deployment, oso_route, oso_service, oso_login (...and possibly others. These are modules being developed to support `ansible-container <https://github.com/ansible/ansible-container>`_.): Deferred for later release
-- Kubernetes: kube_deployment, kube_service, kube_login (...and possibly others. These too are modules being developed to support `ansible-container <https://github.com/ansible/ansible-container>`_): Deferred for later release
-
-Extras split from Core
-----------------------
-Lead by Jason M and Jimi-c (Targeting 2.2, could move into 2.3).
-
-Targeted towards the 2.2 release or shortly after, we are planning on splitting Extras out of the "Ansible Core" project.  That means that modules that are shipped with Ansible by default are **only** the modules in ansibl-modules-core.  Ansible extras will become a separate project, managed by the community standard.  Over the next few months we're going to have a lot of work to do on getting all of the modules in the right places for this to work.
-
-- Create proposal (Jason or Jimi)
-- Review modules for correct location (extras v core)
-- Extras is a completely different package (does not install with ansible)
-- Library dependencies
-- Decide and implement release schedules between Ansible Core and Extras to ensure compatibility and longevity for modules and versions of Ansible.
-
-Tweaks/Fixes
-------------
-- Connection handling stuff. (Toshio K. and Brian C.): This is a stretch goal for 2.2.  **This work got pushed out**
-
-  - Change connection polling to avoid resource limitations, see `<https://github.com/ansible/ansible/issues/14143>`_
-  - `<https://docs.python.org/3/library/selectors.html#module-selectors>`_
-  - Code: https://github.com/kai11/ansible/blob/fix/select_fd_out_of_range_wip/lib/ansible/plugins/connection/ssh.py
-
-
-AWS
----
-Lead by Ryan Brown
-
-- Pagination for all AWS modules (generic pagination exists, but isn't used everywhere) (bumped to 2.3)
-- Refactoring ec2.py to be more digestible (bumped to 2.3)
-- Fix inconsistencies with different authentication methods (STS, environment creds, ~/.aws/credentials) (done)
-- AWS Lambda modules (lambda_execute done, others pending)
-- Ryan Brown and Robyn Bergeron work on bug/PR triage to reduce backlog (reduced - continuing to work on it)
-
-Google
-------
-Lead by Ryan Brown and Tom Melendez
-
-- Add support for Google Cloud DNS
-- Add support for Google Cloud managed instance groups (done)
-- Support restoring instances from snapshots
-- Improved handling of scratch disks on instances (done)
-
-OpenStack
----------
-Lead by Ryan Brown
-
-Stretch goal for this release
-
-- Ryan with some help from David Shrewsbury (Zuul/Openstack at RedHat).
-- Support Heat stack resources (done)
-- Support LBaaS load balancers
-
-Azure load balancer
--------------------
-- Feature parity for AWS ELB (Stretch Goal)
-
-VMware
-------
-Lead by Brian, Jtanner
-
-- *module/inventory script: port to pyvmomi (jtanner, bcoca)*
-  **done:** https://github.com/ansible/ansible/pull/15967
-- *inventory script: allow filtering ala ec2 (jtanner) (undergoing PR process)*
-  **done:** https://github.com/ansible/ansible/pull/15967
-- vsphere: feature parity with whereismyjetpack and viasat modules 
-
-Windows
--------
-Lead by Matt D
-
-- Feature parity
-
-  - PS module API (mirror Python module API where appropriate). Note: We don't necessarily like the current python module API (AnsibleModule is a huge class with many unrelated utility functions.  Maybe we should redesign both at the same time?) (bumped to 2.3+ due to "moving target" uncertainty)
-  - Environment keyword support (done)
-  - win_shell/win_command (done)
-  - Async support (done)
-  - (stretch goal) Pipelining (bumped to 2.3+)
-
-- Windows-specific enhancements
-
-  - Multiple Kerberos credential support (done)
-  - Server 2016 testing/fixes (done, awaiting next TP/RTM)
-  - (stretch goal) Nano Server connection + module_utils working (bumped to 2.3)
-  - (stretch goal) Encrypted kerberos support in pywinrm (bumped to 2.3)
-
-Network
--------
-Lead by Nate C, Peter S
-
-- **Done:** Unify NetworkModules (module_utils/network.py) as much as possible 
-- **Done:** Add support for config diff and replace on supported platforms (2 weeks)
-- **Done:** Support for VyOS network operating system
-- **Done:** Add support for RestConf for IOS/XE
-- **Done:** Support for Dell Networking OS10
-- **Done:** Add support for Nokia SR OS modules
-- **Done:** Network facts modules (dellos, eos, ios, iosxr, junos, nxos, openswitch, vyos)
-- **Deferred:** Network facts modules (cumulus, netvisor, sros)
-- **Deferred:** Add support for NetConf for IOS/XE
-- **Deferred:** (stretch goal) Quagga modules
-- **Deferred:** (stretch goal) Bird modules
-- **Deferred:** (stretch goal) GoBGP modules
-
-Role revamp
------------
-- Implement 'role revamp' proposal to give users more control on role/task execution (Brian)
-
-  - **https://github.com/ansible/proposals/blob/master/roles_revamp.md**
-
-Vault
------
-Lead by Jtanner, Adrian
-
-- *Extend 'transparent vault file usage' to other action plugins other than 'copy'(https://github.com/ansible/ansible/issues/7298)*
-  **done:** https://github.com/ansible/ansible/pull/16957
-- Add 'per variable' vault support (!vault YAML directive, existing PR already) https://github.com/ansible/ansible/issues/13287 https://github.com/ansible/ansible/issues/14721
-- Add vault/unvault filters https://github.com/ansible/ansible/issues/12087 (deferred to 2.3)
-- Add vault support to lookups (likely deferred to 2.3 or until lookup plugins are revamped)
-- Allow for multiple vault secrets https://github.com/ansible/ansible/issues/13243
-- Config option to turn 'unvaulting' failures into warnings https://github.com/ansible/ansible/issues/13244
-
-Python3
--------
-Lead by Toshio
-
-A note here from Jason M: Getting to complete, tested Python 3 is both
-a critical task and one that has so much work and so many moving parts
-that we don't expect this to be complete by the 2.2 release.  Toshio will
-lead this overall effort.
-
-- Motivation:
-  - Ubuntu LTS (16.04) already ships without python2.  RHEL8 is coming which is also expected to be python3 based.  These considerations make this high priority.
-  - Ansible users are getting restless: https://groups.google.com/forum/#!topic/ansible-project/DUKzTho3OCI
-  - This is probably going to take multiple releases to complete; need to get started now
-
-- Baselines:
-  - We're targeting Python-3.5 and above.
-
-- Goals for 2.2:
-
-  - Tech preview level of support
-  - Controller-side code can run on Python3
-  - Update: Essential features have been shown to work on Python3.
-    Currently all unittests and all but three integration tests are
-    passing on Python3.  Code has not been line-by-line audited so bugs
-    remain but can be treated as bugs, not as massive, invasive new features.
-  - Almost all of our deps have been ported:
-
-    - The base deps in setup.py are ported: ['paramiko', 'jinja2', "PyYAML", 'setuptools', 'pycrypto &gt;= 2.6']
-    - python-six from the rpm spec file has been ported
-    - Python-keyczar from the rpm spec file is not.
-    - Strategy: removing keyczar when we drop accelerate for 2.3. Print deprecation in 2.1.
-
-  - Module_utils ported to dual python3/python2(2.4 for much of it, python2.6 for specific things)
-    **Mostly done:**  Also not line-by-line audited but the unittests
-    and integration tests do show that the most use functionality is working.
-  - Add module_utils files to help port
-
-    - Update: copy of the six library (v1.4.1 for python2.4 compat) and unicode helpers are here (ansible.module_utils._text.{to_bytes,to_text,to_native})
-  - A few basic modules ported to python3
-
-    - Stat module best example module since it's essential.
-    - Update:
-
-      - A handful of modules like stat have been line-by-line ported.  They should work reliably with few python3-specific bugs.  All but three integration tests pass which means that most essential modules are working to some extent on Python3.
-
-        - The three failing tests are: service, hg, and uri.
-        - Note, large swaths of the modules are not tested.  The status of
-           these is unknown
-
-  - All code should compile under Python3.
-    - lib/ansible/* and all modules now compile under Python-3.5
-
-  - Side work to do:
-    - Figure out best ways to run unit-tests on modules.  Start unit-testing modules.  This is going to become important so we don't regress python3 or python2.4 support in modules  (Going to largely punt on this for 2.2.  Matt Clay is working on building us a testing foundation for the first half of 2.2 development so we'll re-evaluate towards the middle of the dev cycle).
-    - More unit tests of module_utils
-    - More integration tests.  Currently integration tests are the best way to test ansible modules so we have to rely on those.
-
-  - Goals for 2.3:
-
-    - Bugfixing, bugfixing, bugfixing.  We need community members to test,
-      submit bugs, and add new unit and integration tests.  I'll have some
-      time allocated both to review any Python3 bugfixes that they submit
-      and to work on bug reports without PRs.  The overall goal is to make
-      the things that people do in production with Ansible work on Python 3.
-
-Infrastructure Buildout and Changes
------------------------------------
-Lead by Matt Clay
-
-Another note from Jason M: A lot of this work is to ease the burden of CI, CI performance, increase our testing coverage and all of that sort of thing.  It's not necessarily feature work, but it's \*\*critical\*\* to growing our product and our ability to get community changes in more securely and quickly.
-
-- **CI Performance**
-  Reduce time spent waiting on CI for PRs. Combination of optimizing existing Travis setup and offloading work to other services. Will be impacted by available budget.
-
-  **Done:** Most tests have been migrated from Travis to Shippable.
-
-- **Core Module Test Organization**
-  Relocate core module tests to ansible-modules-core to encourage inclusion of tests in core module PRs.
-
-  **Deferred:** Relocation of core module tests has been deferred due to proposed changes in `modules management <https://github.com/ansible/proposals/blob/master/modules-management.md>`_.
-
-- **Documentation**
-  Expand documentation on setting up a development and test environment, as well as writing tests. The goal is to ease development for new contributors and encourage more testing, particularly with module contributions.
-- **Test Coverage**
-
-  - Expand test coverage, particularly for CI. Being testing, this is open ended. Will be impacted by available budget.
-
-    **Done:** Module PRs now run integration tests for the module(s) being changed.
-
-  - Python 3 - Run integration tests using Python 3 on CI with tagging for those which should pass, so we can track progress and detect regressions.
-
-    **Done:** Integration tests now run on Shippable using a Ubuntu 16.04 docker image with only Python 3 installed.
-
-  - Windows - Create framework for running Windows integration tests, ideally both locally and on CI.
-
-    **Done:** Windows integration tests now run on Shippable.
-
-  - FreeBSD - Include FreeBSD in CI coverage. Not originally on the roadmap, this is an intermediary step for CI coverage for macOS.
-
-    **Done:** FreeBSD integration tests now run on Shippable.
-
-  - macOS - Include macOS in CI coverage.
-
-    **Done:** macOS integration tests now run on Shippable.
diff --git a/docs/docsite/rst/roadmap/ROADMAP_2_3.rst b/docs/docsite/rst/roadmap/ROADMAP_2_3.rst
deleted file mode 100644
index eed3ac8b37..0000000000
--- a/docs/docsite/rst/roadmap/ROADMAP_2_3.rst
+++ /dev/null
@@ -1,166 +0,0 @@
-===========
-Ansible 2.3
-===========
-**Target: Mid April 2017**
-
-.. contents:: Topics
-
-General Comments from the Core Team
------------------------------------
-
-- The 2.3 Ansible Core is just a little different than the past two major releases we've done.  In addition to feature work, we're using part of the time for this release to reduce some of our backlog in other areas than pure development.
-- *Administration:* Clean up our GitHub repos and move to one repo so that contributions, tickets, submissions, etc are centralized and easier for both the community and the Core Team to manage.
-- *Metadata:* Move to a Metadata based system for modules.  This has been discussed here: https://github.com/ansible/proposals/blob/master/modules-management.md
-- *Documentation:* We're aware that Docs have issues.  Scott Butler, aka Dharmabumstead will be leading the charge on how he and we as a community can clean them up.
-- *Backlog & Stability:* We're spending some of the cycles for 2.3 trying to reduce our ticket/PR backlog, and clean up some particular areas of the project that the community has expressed particular frustrations about.
-- *Python 3:* The community and Toshio have done TONS of work getting Python 3 working.  Still more to go...
-- *Features:* We still have some cool stuff coming.  Check it out below.  For people on the Networking side of the world, the Persistent Connection Manager will be a *huge* feature and performance gain.
-
-Repo Merge
-----------
-- Script that a submitter can run to migrate their PR **(done)**
-- Script that a committer can run to fork a PR and then merge to ansible/ansible **(mostly done)**
-- Move all the issues (remove old ones that can be removed) **(done)**
-- Enhance ansibullbot to accommodate the changes (jctanner) **(in progress, going well)**
-
-Metadata
---------
-- Add metadata to the modules we ship **(done)**
-- Write code to use metadata in docs **(done)**
-- If needed for python2/3 write code to use metadata in module_common or pluginloader **(not needed)**
-
-Documentation
--------------
-- Update developing_modules **(in progress, will continue in 2.4)**
-- Set up rst skeleton for module_utils docs.
-- Plugin development docs
-- Speed up `make webdocs` https://github.com/ansible/ansible/issues/17406   **(done)**
-
-Windows
--------
-Lead by nitzmahone
-
-- **Platform**
-
-  - Pipelining support **(done)**
-  - Become support **(done/experimental)**
-  - Integrated kerberos ticket management (via ansible_user/ansible_password) **(done)**
-  - Switch PS input encoding to BOM-less UTF8 **(done)**
-  - Server 2016 support/testing (now RTM'd) **(partial)**
-  - Modularize Windows module_utils (allow N files) **(partial)**
-  - Declarative argspec for PS / .NET **(bumped to 2.4)**
-  - Kerberos encryption (via notting, pywinrm/requests_kerberos/pykerberos) **(in progress, available in pywinrm post 2.3 release)**
-  - Fix plugin-specific connection var lookup/delegation (either registered explicitly by plugins or ansible_(plugin)_*) **(bumped to 2.4)**
-
-- **Modules**
-
-  - win_domain module **(done)**
-  - win_domain_membership module **(done)**
-  - win_domain_controller module **(done)**
-  - win_dns_client module **(done)**
-  - win_wait_for module
-  - win_disk_image module **(done)**
-  - Updates to win_chocolatey, adopt to core (stretch) **(bump to 2.4)**
-  - Updates/rewrite to win_unzip, adopt to core (stretch) **(bump to 2.4)**
-  - Updates to win_updates, adopt to core (stretch) **(bump to 2.4)**
-  - Updates to win_package, adopt to core (+ deprecate win_msi) (stretch) **(bump to 2.4)**
-
-Azure
------
-Lead by nitzmahone, mattclay
-
-- Ensure Azure SDK rc6/RTM work **(done)**
-- Move tests from ansible/azure_rm repo to ansible/ansible **(bump to 2.4, no CI resources)**
-- Update/enhance tests **(bump to 2.4, no CI resources)**
-- Expose endpoint overrides (support AzureChinaCloud, Azure Stack) **(bump to 2.4)**
-- Get Azure tests running in CI (stretch, depends on availability of sponsored account) **(bump to 2.4, no CI resources)**
-- azure_rm_loadbalancer module (stretch) **(bump to 2.4)**
-
-Networking
-----------
-- Code stability and tidy up **(done)**
-- Extend testing **(done)**
-- User facing documentation
-- Persistent connection manager **(done)**
-- Netconf/YANG implementation (only feature) **(done)**
-- Deferred from 2.2: Network facts modules (sros)
-
-Python3
--------
-
-- For 2.3:
-
-  - We want all tests to pass
-
-    - Just the mercurial tests left because we haven't created an image with
-      both python2 and python3 to test it on yet.
-    - Check by doing ``grep skip/python3 test/integration/targets/*/aliases``
-
-  - If users report bugs on python3, these should be fixed and will prioritize our work on porting other modules.
-
-- Still have to solve the python3-only and python2-only modules.  Thinking of doing this via metadata.  Will mean we have to use metadata at the module_common level.  Will also mean we don't support py2-only or py3-only old style python modules.
-- Note: Most of the currently tested ansible features now run.  But there's still a lot of code that's untested.
-
-Testing and CI
---------------
-Lead by mattclay
-
-- *Static Code Analysis:* Create custom pylint extensions to automate detection of common Ansible specific issues reported during code review. Automate feedback on PRs for new code only to avoid noise from existing code which does not pass.
-
-  **Ongoing:** Some static code analysis is now part of the CI process:
-
-  - pep8 is now being run by CI, although not all PEP 8 rules are being enforced.
-  - pylint is now being run by CI, but currently only on the ansible-test portion of codebase.
-
-- *Test Reliability:* Eliminate transient test failures by fixing unreliable tests. Reduce network dependencies by moving network resources into httptester.
-
-  **Ongoing:** Many of the frequent sources of test instability have been resolved. However, more work still remains.
-
-  Some new issues have also appeared, which are currently being worked on.
-
-- *Enable Remaining Tests:* Implement fixes for macOS, FreeBSD and Python 3 to enable the remaining blacklisted tests for CI.
-
-  **Ongoing:** More tests have been enabled for macOS, FreeBSD and Python 3. However, work still remains to enable more tests.
-
-- *Windows Server 2016:* Add Windows Server 2016 to CI when official AMIs become available.
-
-  **Delayed:** Integration tests pass on Windows Server 2016. However, due to intermittent WinRM issues, the tests have been disabled.
-
-  Once the issues with WinRM have been resolved, the tests will be re-enabled.
-
-- *Repository Consolidation:* Update CI to maintain and improve upon existing functionality after repository consolidation.
-
-  **Done:** A new test runner, ansible-test, has been deployed to manage CI jobs on Shippable.
-
-  Tests executed on PRs are based on the changes made in the PR, for example:
-
-  - Changes to a module will only run tests appropriate for that module.
-  - Changes to Windows modules or the Windows connection plugin run tests on Windows.
-  - Changes to network modules run tests on the appropriate virtual network device (currently supporting VyOS and IOS).
-
-  Tests executed on merges are based on changes since the last successful merge test.
-
-Amazon
-------
-Lead by ryansb
-
-- Improve ec2.py integration tests **(partial, more to do in 2.4)**
-- ELB version 2 **(pushed - needs_revision)** `PR <https://github.com/ansible/ansible/pull/19491>`_
-- CloudFormation YAML, cross-stack reference, and roles support **(done)**
-- ECS module refactor **(done)**
-- AWS module unit testing w/ placebo (boto3 only) **(pushed 2.4)**
-
-Plugin Loader
--------------
-- Add module_utils to the plugin loader (feature) [done]
-- Split plugin loader: Plugin_search, plugin_loader (modules only use first) [pushed to 2.4]
-
-ansible-ssh
------------
-- Add a 'ansible-ssh' convenience and debugging tool (will slip to 2.4)
-- Tool to invoke an interactive ssh to a host with the same args/env/config that ansible would.
-- There are at least three external versions
-
-  - https://github.com/2ndQuadrant/ansible-ssh
-  - https://github.com/haad/ansible-ssh
-  - https://github.com/mlvnd/ansible-tools
diff --git a/docs/docsite/rst/roadmap/ROADMAP_2_4.rst b/docs/docsite/rst/roadmap/ROADMAP_2_4.rst
deleted file mode 100644
index 7fcd55ca2b..0000000000
--- a/docs/docsite/rst/roadmap/ROADMAP_2_4.rst
+++ /dev/null
@@ -1,249 +0,0 @@
-===========
-Ansible 2.4
-===========
-**Core Engine Freeze and Module Freeze: 15 August 2017**
-
-**Core and Curated Module Freeze: 15 August 2017**
-
-**Community Module Freeze: 29 August 2017**
-
-**Release Candidate 1 will be 06 September, 2017**
-
-**Target: Mid-September 2017**
-
-.. contents:: Topics
-
-Administrivia and Process
--------------------------
-- Starting with 2.4, all items that are deprecated will be removed in 4 major releases unless otherwise stated.
-
-  - For example: A module that is deprecated in 2.4 will be removed in 2.8
-
-Python 2.4 and 2.5 support discontinuation
-------------------------------------------
-- Ansible will not support Python 2.4 nor 2.5 on the target hosts anymore.
-  Going forward, Python 2.6+ will be required on targets, as already is the case on the controller.
-
-Python 3
---------
-- Ansible Core Engine and Core modules will be tested on Python 3
-
-  - All Core modules now have at least a smoketest integration test.
-    Additional coverage is welcomed to find more bugs and prevent regressions.
-
-- Communicate with Linux distros to provide Ansible running on Python 3
-
-  - Python3 based Ansible packages are now available to run on Fedora Linux
-
-Ansible-Config
---------------
-- Proposal found in ansible/proposals issue `#35 <https://github.com/ansible/proposals/issues/35>`_.
-- Initial PR of code found in ansible/ansible PR `#12797 <https://github.com/ansible/ansible/pull/12797>`_. **(done)**
-- Per plugin configuration (depends on plugin docs below). **(WIP)**
-- New yaml format for config **(possibly pushed to future roadmap)**
-- Extend the ability of the current config system by adding an ``ansible-config`` command and add the following:
-
-  - Dump existing config settings **(working, fine tuning)**
-  - Update / write a config entry **(pushed to future roadmap)**
-  - Show available options (ini entry, yaml, env var, etc) **(working, fine tuning)**
-
-
-Inventory
----------
-**(done, needs docs)**
-- Proposal found in ansible/proposals issue `#41 <https://github.com/ansible/proposals/issues/41>`_.
-- Current inventory is overly complex, non modular and mostly still a legacy from inception.
-
-Facts
------
-- Configurable list of 'fact modules' for ``gather_facts`` **(done)**
-- Fact gathering policy finer grained **(done)**
-- Make ``setup.py``/``facts`` more pluggable **(done)**
-- Improve testing of ``setup.py``/``facts.py`` **(done)**
-- Namespacing fact variables (via a config option) implemented in ansible/ansible PR `#18445 <https://github.com/ansible/ansible/pull/18445>`_. **(done)**
-  Proposal found in ansible/proposals issue `#17 <https://github.com/ansible/proposals/issues/17>`_.
-
-PluginLoader
-------------
-**(pushed out to future release)**
-- Over the past couple releases we've had some thoughts about how PluginLoader might be better structured
-
-  - Load the loaders via an initialization function(), not when importing
-    the module. (stretch goal, doesn't impact the CLI)
-  - Separate duties of ``PluginLoader`` from ``PluginFinder``.  Most plugins need
-    both but Modules and Module_utils only need a PluginFinder
-  - Write different ``PluginFinder`` subclasses for module_utils and perhaps
-    Modules.  Most Plugin types have a flattened namespace and are single
-    python files.  Modules include code that is not written in python.
-    Module_utils are vastly different from the other Plugins as they
-    maintain a hierarchical namespace and are multi-file.
-  - Potentially split module_utils loader for python from module_utils
-    loader for powershell.  Currently we only support generic module_utils
-    for python modules.  The powershell modules always include a single,
-    hardcoded powershell module_utils file.  If we add generic module_utils
-    for powershell, we'll need to decide how to organize the code.
-
-Static Loop Keyword 
--------------------
-- **Pushed to 2.5**
-- Deprecate (not on standard deprecation cycle) ``with_`` in favor of ``loop:``
-- This ``loop:`` will take only a list
-- Remove complexity from loops, lookups are still available to users
-- Less confusing having a static directive vs a one that is dynamic depending on plugins loaded.
-
-Vault
------
-- Support for multiple vault passwords.  **(done)**
-
-  - Each decrypted item should know which secret to request **(done)**
-  - Support requesting credentials (password prompt) as callbacks
-
-- Ability to open and edit file with encrypted vars deencrypted, and encrypt/format on save
-
-Globalize Callbacks
--------------------
-**(pushed out to future release)**
-- Make send_callback available to other code that cannot use it.
-- Would allow for 'full formatting' of output (see JSON callback)
-- Fixes static 'include' display problem
-
-Plugins
--------
-- Allow plugins to have embedded docs (like modules) **(done)**
-- Update ansible-doc and website to generate docs from these ansible/ansible PR `#22796 <https://github.com/ansible/ansible/pull/22796>`_. **(ansible-doc working, todo:website)**
-
-Group Priorities
-----------------
-**(done)**
-- Start using existing group priority variable to sort/merge group vars
-- Implementation for this in ansible/ansible PR `#22580 <https://github.com/ansible/ansible/pull/22580>`_.
-- Documentation of group priority variable
-
-Runtime Check on Modules for Blacklisting
------------------------------------------
-**(pushed out to future release)**
-- Filter on things like "supported_by" in module metadata
-- Provide users with an option of "warning, error or allow/ignore"
-- Configurable via ansible.cfg and environment variable
-
-Disambiguate Includes
----------------------
-- Create import_x for 'static includes' (import_task, import_playbook, import_role)
-
-  - Any directives are applied to the 'imported' tasks
-
-- Create include_x for 'dynamic includes' (include_task, include_role)
-
-  - Any directives apply to the 'include'  itself
-
-Windows
--------
-- New PS/.NET module API **(in progress)**
-- Windows Nano Server support
-- Windows module_utils pluginloader **(done)**
-- Refactor duplicated module code into new module_utils files **(in progress)**
-- Evaluate #Requires directives (existing and new: PS version, OS version, etc)
-- Improve module debug support/persistence **(done)**
-- Explore official DSC support **(done)**
-- Explore module intermediate output
-- Explore Powershell module unit testing **(in progress)**
-- Explore JEA support (stretch)
-- Extended become support with network/service/batch logon types
-- Module updates
-
-  - Split "Windows" category into multiple subs
-  - Domain user/group management modules **(done)**
-  - win_mapped_drive module **(done)**
-  - win_hotfix **(done)**
-  - win_updates rewrite to require become
-  - win_package changes required to deprecate win_msi **(done)**
-  - win_copy re-write **(done)**
-
-AWS
----
-- Focus on pull requests for various modules
-- Triage existing merges for modules
-- Module work
-
-  - elb-target-groups `#19492 <https://github.com/ansible/ansible/pull/19492>`_, `#24583 <https://github.com/ansible/ansible/pull/24583>`_. **(done)**
-  - alb* `#19491 <https://github.com/ansible/ansible/pull/19491>`_, `#24584 <https://github.com/ansible/ansible/pull/24584>`_. **(done)**
-  - ecs `#20618 <https://github.com/ansible/ansible/pull/20618>`_. **(in review process)**
-  - Data Pipelines `#22878 <https://github.com/ansible/ansible/pull/22878>`_. **(in review process)**
-  - VPN `#24385 <https://github.com/ansible/ansible/pull/24385>`_. **(in review process)**
-  - DirectConnect `#26152 <https://github.com/ansible/ansible/pull/26152>`_. **(connection module in review process, several more to come)**
-
-Azure
------
-- Expose endpoint overrides **(done)**
-- Reformat/document module output to collapse internal API structures and surface important data (eg, public IPs, NICs, data disks) **(pushed to future)**
-- Add load balancer module **(in progress)**
-- Add Azure Functions module **(in progress)**
-
-Google Cloud Platform
----------------------
-- New Module: DataProc
-- Support for Cross-Region HTTP Load Balancing
-- New Module: GKE
-
-Network Roadmap
----------------
-- Removal of ``*_template`` modules **(done)**
-- Distributed Continuous Integration Infrastructure **(done)**
-- RPC Connection Plugin **(done)**
-- Module Work 
-
-  - Declarative intent modules **(done)**
-  - OpenVSwitch **(done)**
-  - Minimal Viable Platform Agnostic Modules **(done)**
-
-Contributor Quality of Life
----------------------------
-- All Core and Curated modules will work towards having unit testing. **(edit: integration and/or unit tests)**
-- More bot improvements!
-
-  - Bot comments on PRs with details of test failures. **(done)**
-
-- Test Infrastructure changes
-
-  - Shippable + Bot Integration
-
-    - Provide verified test results to the bot from Shippable so the bot can comment on PRs with CI failures. **(done, compile and sanity tests only)**
-    - Enable the bot to mark PRs with ``ci_verified`` if all CI failures are verified. **(done)**
-
-  - Windows Server 2016 Integration Tests
-
-    - Restore Windows Server 2016 integration tests on Shippable.
-
-      - Originally enabled during the 2.3 release cycle, but later disabled due to intermittent WinRM issues.
-      - Depends on resolution of WinRM connection issues.
-
-  - Windows Server Nano Integration Tests **(pushed to future roadmap)**
-
-    - Add support to ansible-core-ci for Windows Server 2016 Nano and enable on Shippable.
-    - This will use a subset of the existing Windows integration tests.
-    - Depends on resolution of WinRM connection issues.
-
-  - Windows + Python 3 Tests
-
-    - Run basic Windows tests using Python 3 as the controller. **(partially done, not all planned tests running yet)**
-    - Depends on resolution of WinRM Python 3 issues.
-
-  - Cloud Integration Tests
-
-    - Run existing cloud integration tests as part of CI for:
-
-      - AWS **(done)**
-      - Azure **(done)**
-      - GCP **(pushed to future roadmap)**
-
-    - Tests to be run only on cloud module (and module_utils) PRs and merges for the relevant cloud provider. **(done)**
-
-  - Test Reliability
-
-    - Further improve test reliability to reduce false positives on Shippable. **(ongoing)**
-    - This continues work from the 2.3 release cycle.
-
-  - Static Code Analysis
-
-    - Further expand the scope and coverage of static analysis. **(ongoing)**
-    - This continues work from the 2.3 release cycle.
diff --git a/docs/docsite/rst/roadmap/index.rst b/docs/docsite/rst/roadmap/index.rst
index b3701748df..a288530a87 100644
--- a/docs/docsite/rst/roadmap/index.rst
+++ b/docs/docsite/rst/roadmap/index.rst
@@ -22,7 +22,11 @@ See :ref:`Ansible communication channels <communication>` for details on how to
 .. toctree::
    :maxdepth: 1
    :glob:
-   :reversed:
    :caption: Ansible Release Roadmaps
 
-   ROADMAP*
+   ROADMAP_2_10
+   ROADMAP_2_9
+   ROADMAP_2_8
+   ROADMAP_2_7
+   ROADMAP_2_6
+   ROADMAP_2_5
