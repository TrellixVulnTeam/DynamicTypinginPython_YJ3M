commit d76a84a6c8958251d8713c2f77d38a1e5db03371
Author: Abhijeet Kasurde <akasurde@redhat.com>
Date:   Wed Oct 10 20:14:17 2018 +0530

    [do
    
    * Add U() in front of URL
    * Add period at end of statement
    * Spell check
    
    Signed-off-by: Abhijeet Kasurde <akasurde@redhat.com>

diff --git a/lib/ansible/modules/cloud/amazon/aws_waf_condition.py b/lib/ansible/modules/cloud/amazon/aws_waf_condition.py
index 006aa3fa64..e2fb59511b 100644
--- a/lib/ansible/modules/cloud/amazon/aws_waf_condition.py
+++ b/lib/ansible/modules/cloud/amazon/aws_waf_condition.py
@@ -23,10 +23,10 @@ extends_documentation_fragment:
   - ec2
 options:
     name:
-        description: Name of the Web Application Firewall condition to manage
+        description: Name of the Web Application Firewall condition to manage.
         required: yes
     type:
-        description: the type of matching to perform
+        description: the type of matching to perform.
         choices:
         - byte
         - geo
@@ -37,25 +37,25 @@ options:
         - xss
     filters:
         description:
-        - A list of the filters against which to match
-        - For I(type)=C(byte), valid keys are C(field_to_match), C(position), C(header), C(transformation)
-        - For I(type)=C(geo), the only valid key is C(country)
-        - For I(type)=C(ip), the only valid key is C(ip_address)
-        - For I(type)=C(regex), valid keys are C(field_to_match), C(transformation) and C(regex_pattern)
-        - For I(type)=C(size), valid keys are C(field_to_match), C(transformation), C(comparison) and C(size)
-        - For I(type)=C(sql), valid keys are C(field_to_match) and C(transformation)
-        - For I(type)=C(xss), valid keys are C(field_to_match) and C(transformation)
-        - I(field_to_match) can be one of C(uri), C(query_string), C(header) C(method) and C(body)
-        - If I(field_to_match) is C(header), then C(header) must also be specified
-        - I(transformation) can be one of C(none), C(compress_white_space), C(html_entity_decode), C(lowercase), C(cmd_line), C(url_decode)
-        - I(position), can be one of C(exactly), C(starts_with), C(ends_with), C(contains), C(contains_word),
-        - I(comparison) can be one of C(EQ), C(NE), C(LE), C(LT), C(GE), C(GT),
-        - I(target_string) is a maximum of 50 bytes
-        - I(regex_pattern) is a dict with a C(name) key and C(regex_strings) list of strings to match
+        - A list of the filters against which to match.
+        - For I(type)=C(byte), valid keys are C(field_to_match), C(position), C(header), C(transformation).
+        - For I(type)=C(geo), the only valid key is C(country).
+        - For I(type)=C(ip), the only valid key is C(ip_address).
+        - For I(type)=C(regex), valid keys are C(field_to_match), C(transformation) and C(regex_pattern).
+        - For I(type)=C(size), valid keys are C(field_to_match), C(transformation), C(comparison) and C(size).
+        - For I(type)=C(sql), valid keys are C(field_to_match) and C(transformation).
+        - For I(type)=C(xss), valid keys are C(field_to_match) and C(transformation).
+        - I(field_to_match) can be one of C(uri), C(query_string), C(header) C(method) and C(body).
+        - If I(field_to_match) is C(header), then C(header) must also be specified.
+        - I(transformation) can be one of C(none), C(compress_white_space), C(html_entity_decode), C(lowercase), C(cmd_line), C(url_decode).
+        - I(position), can be one of C(exactly), C(starts_with), C(ends_with), C(contains), C(contains_word).
+        - I(comparison) can be one of C(EQ), C(NE), C(LE), C(LT), C(GE), C(GT).
+        - I(target_string) is a maximum of 50 bytes.
+        - I(regex_pattern) is a dict with a C(name) key and C(regex_strings) list of strings to match.
     purge_filters:
-        description: Whether to remove existing filters from a condition if not passed in I(filters). Defaults to false
+        description: Whether to remove existing filters from a condition if not passed in I(filters). Defaults to false.
     state:
-        description: Whether the condition should be C(present) or C(absent)
+        description: Whether the condition should be C(present) or C(absent).
         choices:
         - present
         - absent
diff --git a/lib/ansible/modules/cloud/amazon/cloudformation.py b/lib/ansible/modules/cloud/amazon/cloudformation.py
index 5b5713b6f2..a26317b02b 100644
--- a/lib/ansible/modules/cloud/amazon/cloudformation.py
+++ b/lib/ansible/modules/cloud/amazon/cloudformation.py
@@ -61,7 +61,7 @@ options:
   stack_policy:
     description:
       - the path of the cloudformation stack policy. A policy cannot be removed once placed, but it can be modified.
-        (for instance, [allow all updates](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/protect-stack-resources.html#d0e9051)
+        for instance, allow all updates U(https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/protect-stack-resources.html#d0e9051)
     version_added: "1.9"
   tags:
     description:
@@ -72,13 +72,13 @@ options:
       - Location of file containing the template body. The URL must point to a template (max size 307,200 bytes) located in an S3 bucket in the same region
         as the stack.
       - If 'state' is 'present' and the stack does not exist yet, either 'template', 'template_body' or 'template_url'
-        must be specified (but only one of them). If 'state' ispresent, the stack does exist, and neither 'template',
+        must be specified (but only one of them). If 'state' is present, the stack does exist, and neither 'template',
         'template_body' nor 'template_url' are specified, the previous template will be reused.
     version_added: "2.0"
   create_changeset:
     description:
       - "If stack already exists create a changeset instead of directly applying changes.
-        See the AWS Change Sets docs U(http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-updating-stacks-changesets.html).
+        See the AWS Change Sets docs U(https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-updating-stacks-changesets.html).
         WARNING: if the stack does not exist, it will be created without changeset. If the state is absent, the stack will be deleted immediately with no
         changeset."
     type: bool
@@ -88,7 +88,7 @@ options:
     description:
       - Name given to the changeset when creating a changeset, only used when create_changeset is true. By default a name prefixed with Ansible-STACKNAME
         is generated based on input parameters.
-        See the AWS Change Sets docs U(http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-updating-stacks-changesets.html)
+        See the AWS Change Sets docs U(https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-updating-stacks-changesets.html)
     version_added: "2.4"
   template_format:
     description:
@@ -100,7 +100,7 @@ options:
   role_arn:
     description:
     - The role that AWS CloudFormation assumes to create the stack. See the AWS CloudFormation Service Role
-      docs U(http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-iam-servicerole.html)
+      docs U(https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-iam-servicerole.html)
     version_added: "2.3"
   termination_protection:
     description:
@@ -110,7 +110,7 @@ options:
     description:
       - Template body. Use this to pass in the actual body of the Cloudformation template.
       - If 'state' is 'present' and the stack does not exist yet, either 'template', 'template_body' or 'template_url'
-        must be specified (but only one of them). If 'state' ispresent, the stack does exist, and neither 'template',
+        must be specified (but only one of them). If 'state' is present, the stack does exist, and neither 'template',
         'template_body' nor 'template_url' are specified, the previous template will be reused.
     version_added: "2.5"
   events_limit:
diff --git a/lib/ansible/modules/cloud/amazon/cloudtrail.py b/lib/ansible/modules/cloud/amazon/cloudtrail.py
index 8b1d06743c..6a0d3ab680 100644
--- a/lib/ansible/modules/cloud/amazon/cloudtrail.py
+++ b/lib/ansible/modules/cloud/amazon/cloudtrail.py
@@ -47,8 +47,8 @@ options:
     description:
       - An existing S3 bucket where CloudTrail will deliver log files.
       - This bucket should exist and have the proper policy.
-      - See U(http://docs.aws.amazon.com/awscloudtrail/latest/userguide/aggregating_logs_regions_bucket_policy.html)
-      - Required when C(state=present)
+      - See U(https://docs.aws.amazon.com/awscloudtrail/latest/userguide/aggregating_logs_regions_bucket_policy.html).
+      - Required when C(state=present).
     version_added: "2.4"
   s3_key_prefix:
     description:
@@ -71,25 +71,25 @@ options:
     aliases: [ "include_global_service_events" ]
   sns_topic_name:
     description:
-      - SNS Topic name to send notifications to when a log file is delivered
+      - SNS Topic name to send notifications to when a log file is delivered.
     version_added: "2.4"
   cloudwatch_logs_role_arn:
     description:
       - Specifies a full ARN for an IAM role that assigns the proper permissions for CloudTrail to create and write to the log group.
-      - See U(https://docs.aws.amazon.com/awscloudtrail/latest/userguide/send-cloudtrail-events-to-cloudwatch-logs.html)
-      - Required when C(cloudwatch_logs_log_group_arn)
+      - See U(https://docs.aws.amazon.com/awscloudtrail/latest/userguide/send-cloudtrail-events-to-cloudwatch-logs.html).
+      - Required when C(cloudwatch_logs_log_group_arn).
     version_added: "2.4"
   cloudwatch_logs_log_group_arn:
     description:
       - A full ARN specifying a valid CloudWatch log group to which CloudTrail logs will be delivered. The log group should already exist.
-      - See U(https://docs.aws.amazon.com/awscloudtrail/latest/userguide/send-cloudtrail-events-to-cloudwatch-logs.html)
-      - Required when C(cloudwatch_logs_role_arn)
+      - See U(https://docs.aws.amazon.com/awscloudtrail/latest/userguide/send-cloudtrail-events-to-cloudwatch-logs.html).
+      - Required when C(cloudwatch_logs_role_arn).
     version_added: "2.4"
   kms_key_id:
     description:
       - Specifies the KMS key ID to use to encrypt the logs delivered by CloudTrail. This also has the effect of enabling log file encryption.
       - The value can be an alias name prefixed by "alias/", a fully specified ARN to an alias, a fully specified ARN to a key, or a globally unique identifier.
-      - See U(https://docs.aws.amazon.com/awscloudtrail/latest/userguide/encrypting-cloudtrail-log-files-with-aws-kms.html)
+      - See U(https://docs.aws.amazon.com/awscloudtrail/latest/userguide/encrypting-cloudtrail-log-files-with-aws-kms.html).
     version_added: "2.4"
   tags:
     description:
diff --git a/lib/ansible/modules/cloud/amazon/data_pipeline.py b/lib/ansible/modules/cloud/amazon/data_pipeline.py
index 85dbcfdcde..59a886f5f9 100644
--- a/lib/ansible/modules/cloud/amazon/data_pipeline.py
+++ b/lib/ansible/modules/cloud/amazon/data_pipeline.py
@@ -27,7 +27,7 @@ description:
     - Create and manage AWS Datapipelines. Creation is not idempotent in AWS, so the I(uniqueId) is created by hashing the options (minus objects)
       given to the datapipeline.
     - The pipeline definition must be in the format given here
-      U(http://docs.aws.amazon.com/datapipeline/latest/APIReference/API_PutPipelineDefinition.html#API_PutPipelineDefinition_RequestSyntax).
+      U(https://docs.aws.amazon.com/datapipeline/latest/APIReference/API_PutPipelineDefinition.html#API_PutPipelineDefinition_RequestSyntax).
     - Also operations will wait for a configurable amount of time to ensure the pipeline is in the requested state.
 options:
   name:
diff --git a/lib/ansible/modules/cloud/amazon/ec2.py b/lib/ansible/modules/cloud/amazon/ec2.py
index ceb28f0dde..7b8e426c52 100644
--- a/lib/ansible/modules/cloud/amazon/ec2.py
+++ b/lib/ansible/modules/cloud/amazon/ec2.py
@@ -36,30 +36,30 @@ options:
     description:
       - identifier for this instance or set of instances, so that the module will be idempotent with respect to EC2 instances.
         This identifier is valid for at least 24 hours after the termination of the instance, and should not be reused for another call later on.
-        For details, see the description of client token at U(http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Run_Instance_Idempotency.html).
+        For details, see the description of client token at U(https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Run_Instance_Idempotency.html).
   group:
     description:
-      - security group (or list of groups) to use with the instance
+      - security group (or list of groups) to use with the instance.
     aliases: [ 'groups' ]
   group_id:
     version_added: "1.1"
     description:
-      - security group id (or list of ids) to use with the instance
+      - security group id (or list of ids) to use with the instance.
   region:
     version_added: "1.2"
     description:
       - The AWS region to use.  Must be specified if ec2_url is not used.
         If not specified then the value of the EC2_REGION environment variable, if any, is used.
-        See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)
+        See U(https://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region).
     aliases: [ 'aws_region', 'ec2_region' ]
   zone:
     version_added: "1.2"
     description:
-      - AWS availability zone in which to launch the instance
+      - AWS availability zone in which to launch the instance.
     aliases: [ 'aws_zone', 'ec2_zone' ]
   instance_type:
     description:
-      - instance type to use for the instance, see U(http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-types.html)
+      - instance type to use for the instance, see U(https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-types.html).
     required: true
   tenancy:
     version_added: "1.9"
@@ -81,14 +81,14 @@ options:
     choices: [ "one-time", "persistent" ]
   image:
     description:
-       - I(ami) ID to use for the instance
+       - I(ami) ID to use for the instance.
     required: true
   kernel:
     description:
-      - kernel I(eki) to use for the instance
+      - kernel I(eki) to use for the instance.
   ramdisk:
     description:
-      - ramdisk I(eri) to use for the instance
+      - ramdisk I(eri) to use for the instance.
   wait:
     description:
       - wait for the instance to reach its desired state before returning.  Does not wait for SSH, see 'wait_for_connection' example for details.
@@ -96,52 +96,52 @@ options:
     default: 'no'
   wait_timeout:
     description:
-      - how long before wait gives up, in seconds
+      - how long before wait gives up, in seconds.
     default: 300
   spot_wait_timeout:
     version_added: "1.5"
     description:
-      - how long to wait for the spot instance request to be fulfilled
+      - how long to wait for the spot instance request to be fulfilled.
     default: 600
   count:
     description:
-      - number of instances to launch
+      - number of instances to launch.
     default: 1
   monitoring:
     version_added: "1.1"
     description:
-      - enable detailed monitoring (CloudWatch) for instance
+      - enable detailed monitoring (CloudWatch) for instance.
     type: bool
     default: 'no'
   user_data:
     version_added: "0.9"
     description:
-      - opaque blob of data which is made available to the ec2 instance
+      - opaque blob of data which is made available to the ec2 instance.
   instance_tags:
     version_added: "1.0"
     description:
-      - a hash/dictionary of tags to add to the new instance or for starting/stopping instance by tag; '{"key":"value"}' and '{"key":"value","key":"value"}'
+      - a hash/dictionary of tags to add to the new instance or for starting/stopping instance by tag; '{"key":"value"}' and '{"key":"value","key":"value"}'.
   placement_group:
     version_added: "1.3"
     description:
-      - placement group for the instance when using EC2 Clustered Compute
+      - placement group for the instance when using EC2 Clustered Compute.
   vpc_subnet_id:
     version_added: "1.1"
     description:
-      - the subnet ID in which to launch the instance (VPC)
+      - the subnet ID in which to launch the instance (VPC).
   assign_public_ip:
     version_added: "1.5"
     description:
-      - when provisioning within vpc, assign a public IP address. Boto library must be 2.13.0+
+      - when provisioning within vpc, assign a public IP address. Boto library must be 2.13.0+.
     type: bool
   private_ip:
     version_added: "1.2"
     description:
-      - the private ip address to assign the instance (from the vpc subnet)
+      - the private ip address to assign the instance (from the vpc subnet).
   instance_profile_name:
     version_added: "1.3"
     description:
-      - Name of the IAM instance profile (i.e. what the EC2 console refers to as an "IAM Role") to use. Boto library must be 2.5.0+
+      - Name of the IAM instance profile (i.e. what the EC2 console refers to as an "IAM Role") to use. Boto library must be 2.5.0+.
   instance_ids:
     version_added: "1.3"
     description:
@@ -156,13 +156,13 @@ options:
   termination_protection:
     version_added: "2.0"
     description:
-      - Enable or Disable the Termination Protection
+      - Enable or Disable the Termination Protection.
     type: bool
     default: 'no'
   instance_initiated_shutdown_behavior:
     version_added: "2.2"
     description:
-    - Set whether AWS will Stop or Terminate an instance on shutdown. This parameter is ignored when using instance-store
+    - Set whether AWS will Stop or Terminate an instance on shutdown. This parameter is ignored when using instance-store.
       images (which require termination on shutdown).
     default: 'stop'
     choices: [ "stop", "terminate" ]
@@ -184,7 +184,7 @@ options:
   ebs_optimized:
     version_added: "1.6"
     description:
-      - whether instance is using optimized EBS volumes, see U(http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSOptimized.html)
+      - whether instance is using optimized EBS volumes, see U(https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSOptimized.html).
     default: 'no'
   exact_count:
     version_added: "1.5"
@@ -207,7 +207,7 @@ options:
   spot_launch_group:
     version_added: "2.1"
     description:
-      - Launch group for spot request, see U(http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/how-spot-instances-work.html#spot-launch-group)
+      - Launch group for spot request, see U(https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/how-spot-instances-work.html#spot-launch-group).
 
 author:
     - "Tim Gerla (@tgerla)"
@@ -858,7 +858,7 @@ def await_spot_requests(module, ec2, spot_requests, count):
                     # price, or group constraints in this case, we'll fail
                     # the module if the reason for the state is anything
                     # other than termination by user. Codes are documented at
-                    # http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/spot-bid-status.html
+                    # https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/spot-bid-status.html
                     if sir.status.code == 'instance-terminated-by-user':
                         # do nothing, since the user likely did this on purpose
                         pass
diff --git a/lib/ansible/modules/cloud/amazon/ec2_customer_gateway_facts.py b/lib/ansible/modules/cloud/amazon/ec2_customer_gateway_facts.py
index 01eca20c53..7915fe2289 100644
--- a/lib/ansible/modules/cloud/amazon/ec2_customer_gateway_facts.py
+++ b/lib/ansible/modules/cloud/amazon/ec2_customer_gateway_facts.py
@@ -19,7 +19,7 @@ options:
   filters:
     description:
       - A dict of filters to apply. Each dict item consists of a filter key and a filter value.
-        See U(http://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeCustomerGateways.html) for possible filters.
+        See U(https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeCustomerGateways.html) for possible filters.
   customer_gateway_ids:
     description:
       - Get details of a specific customer gateways using customer gateway ID/IDs. This value should be provided as a list.
diff --git a/lib/ansible/modules/cloud/amazon/ec2_eni_facts.py b/lib/ansible/modules/cloud/amazon/ec2_eni_facts.py
index 908fd845f1..9ecc431f77 100644
--- a/lib/ansible/modules/cloud/amazon/ec2_eni_facts.py
+++ b/lib/ansible/modules/cloud/amazon/ec2_eni_facts.py
@@ -31,7 +31,7 @@ options:
   filters:
     description:
       - A dict of filters to apply. Each dict item consists of a filter key and a filter value.
-        See U(http://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeNetworkInterfaces.html) for possible filters.
+        See U(https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeNetworkInterfaces.html) for possible filters.
 extends_documentation_fragment:
     - aws
     - ec2
diff --git a/lib/ansible/modules/cloud/amazon/ec2_instance.py b/lib/ansible/modules/cloud/amazon/ec2_instance.py
index de06a2f465..805444d6a8 100644
--- a/lib/ansible/modules/cloud/amazon/ec2_instance.py
+++ b/lib/ansible/modules/cloud/amazon/ec2_instance.py
@@ -26,21 +26,21 @@ options:
       - If you specify one or more instance IDs, only instances that have the specified IDs are returned.
   state:
     description:
-      - Goal state for the instances
+      - Goal state for the instances.
     choices: [present, terminated, running, started, stopped, restarted, rebooted, absent]
     default: present
   wait:
     description:
-      - Whether or not to wait for the desired state (use wait_timeout to customize this)
+      - Whether or not to wait for the desired state (use wait_timeout to customize this).
     default: true
   wait_timeout:
     description:
-      - How long to wait (in seconds) for the instance to finish booting/terminating
+      - How long to wait (in seconds) for the instance to finish booting/terminating.
     default: 600
   instance_type:
     description:
-      - Instance type to use for the instance, see U(http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-types.html)
-        Only required when instance is not already present
+      - Instance type to use for the instance, see U(https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-types.html)
+        Only required when instance is not already present.
     default: t2.micro
   user_data:
     description:
@@ -57,7 +57,7 @@ options:
         - IP address or DNS name of Tower server. Must be accessible via this address from the VPC that this instance will be launched in.
       job_template_id:
         description:
-        - Either the integer ID of the Tower Job Template, or the name (name supported only for Tower 3.2+)
+        - Either the integer ID of the Tower Job Template, or the name (name supported only for Tower 3.2+).
       host_config_key:
         description:
         - Host configuration secret key generated by the Tower job template.
@@ -93,7 +93,7 @@ options:
   vpc_subnet_id:
     description:
       - The subnet ID in which to launch the instance (VPC)
-        If none is provided, ec2_instance will chose the default zone of the default VPC
+        If none is provided, ec2_instance will chose the default zone of the default VPC.
     aliases: ['subnet_id']
   network:
     description:
@@ -110,12 +110,12 @@ options:
     - A list of block device mappings, by default this will always use the AMI root device so the volumes option is primarily for adding more storage.
     - A mapping contains the (optional) keys device_name, virtual_name, ebs.volume_type, ebs.volume_size, ebs.kms_key_id,
       ebs.iops, and ebs.delete_on_termination.
-    - For more information about each parameter, see U(https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_BlockDeviceMapping.html)
+    - For more information about each parameter, see U(https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_BlockDeviceMapping.html).
   launch_template:
     description:
       - The EC2 launch template to base instance configuration on.
-      - I(launch_template.id) the ID or the launch template (optional if name is specified)
-      - I(launch_template.name) the pretty name of the launch template (optional if id is specified)
+      - I(launch_template.id) the ID or the launch template (optional if name is specified).
+      - I(launch_template.name) the pretty name of the launch template (optional if id is specified).
       - I(launch_template.version) the specific version of the launch template to use. If unspecified, the template default is chosen.
   key_name:
     description:
@@ -151,7 +151,7 @@ options:
     suboptions:
       threads_per_core:
         description:
-        - Select the number of threads per core to enable. Disable or Enable Intel HT
+        - Select the number of threads per core to enable. Disable or Enable Intel HT.
         choices: [1, 2]
         required: true
       core_count:
@@ -163,12 +163,12 @@ options:
       - Whether to allow detailed cloudwatch metrics to be collected, enabling more detailed alerting.
   ebs_optimized:
     description:
-      - Whether instance is should use optimized EBS volumes, see U(http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSOptimized.html)
+      - Whether instance is should use optimized EBS volumes, see U(https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSOptimized.html).
   filters:
     description:
       - A dict of filters to apply when deciding whether existing instances match and should be altered. Each dict item
         consists of a filter key and a filter value. See
-        U(http://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeInstances.html)
+        U(https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeInstances.html).
         for possible filters. Filter names and values are case sensitive.
         By default, instances are filtered for counting by their "Name" tag, base AMI, state (running, by default), and
         subnet ID. Any queryable filter can be used. Good candidates are specific tags, SSH keys, or security groups.
diff --git a/lib/ansible/modules/cloud/amazon/ec2_instance_facts.py b/lib/ansible/modules/cloud/amazon/ec2_instance_facts.py
index 78513dd99f..76265f5688 100644
--- a/lib/ansible/modules/cloud/amazon/ec2_instance_facts.py
+++ b/lib/ansible/modules/cloud/amazon/ec2_instance_facts.py
@@ -30,7 +30,7 @@ options:
   filters:
     description:
       - A dict of filters to apply. Each dict item consists of a filter key and a filter value. See
-        U(http://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeInstances.html) for possible filters. Filter
+        U(https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeInstances.html) for possible filters. Filter
         names and values are case sensitive.
     required: false
     default: {}
diff --git a/lib/ansible/modules/cloud/amazon/ec2_metadata_facts.py b/lib/ansible/modules/cloud/amazon/ec2_metadata_facts.py
index 2416f9f31c..e0ebc68802 100644
--- a/lib/ansible/modules/cloud/amazon/ec2_metadata_facts.py
+++ b/lib/ansible/modules/cloud/amazon/ec2_metadata_facts.py
@@ -22,7 +22,7 @@ author:
     - Vinay Dandekar (@roadmapper)
 description:
     - This module fetches data from the instance metadata endpoint in ec2 as per
-      http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-metadata.html.
+      U(https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-metadata.html).
       The module must be called from within the EC2 instance itself.
 notes:
     - Parameters to filter on ec2_metadata_facts may be added later.
diff --git a/lib/ansible/modules/cloud/amazon/ec2_placement_group.py b/lib/ansible/modules/cloud/amazon/ec2_placement_group.py
index 2564d5d65a..7686c558ac 100644
--- a/lib/ansible/modules/cloud/amazon/ec2_placement_group.py
+++ b/lib/ansible/modules/cloud/amazon/ec2_placement_group.py
@@ -15,7 +15,7 @@ description:
     - Create an EC2 Placement Group; if the placement group already exists,
       nothing is done. Or, delete an existing placement group. If the placement
       group is absent, do nothing. See also
-      http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/placement-groups.html
+      U(https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/placement-groups.html)
 version_added: "2.5"
 author: "Brad Macpherson (@iiibrad)"
 options:
diff --git a/lib/ansible/modules/cloud/amazon/ec2_snapshot_facts.py b/lib/ansible/modules/cloud/amazon/ec2_snapshot_facts.py
index 7972885747..228b5a42c1 100644
--- a/lib/ansible/modules/cloud/amazon/ec2_snapshot_facts.py
+++ b/lib/ansible/modules/cloud/amazon/ec2_snapshot_facts.py
@@ -41,7 +41,7 @@ options:
   filters:
     description:
       - A dict of filters to apply. Each dict item consists of a filter key and a filter value. See \
-      U(http://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeSnapshots.html) for possible filters. Filter \
+      U(https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeSnapshots.html) for possible filters. Filter \
       names and values are case sensitive.
     required: false
     default: {}
diff --git a/lib/ansible/modules/cloud/amazon/ec2_vol.py b/lib/ansible/modules/cloud/amazon/ec2_vol.py
index 2b5977bd63..5066f0c32f 100644
--- a/lib/ansible/modules/cloud/amazon/ec2_vol.py
+++ b/lib/ansible/modules/cloud/amazon/ec2_vol.py
@@ -368,7 +368,7 @@ def attach_volume(module, ec2, volume, instance):
     changed = False
 
     # If device_name isn't set, make a choice based on best practices here:
-    # http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/block-device-mapping-concepts.html
+    # https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/block-device-mapping-concepts.html
 
     # In future this needs to be more dynamic but combining block device mapping best practices
     # (bounds for devices, as above) with instance.block_device_mapping data would be tricky. For me ;)
diff --git a/lib/ansible/modules/cloud/amazon/ec2_vol_facts.py b/lib/ansible/modules/cloud/amazon/ec2_vol_facts.py
index acc59289b9..35f095625c 100644
--- a/lib/ansible/modules/cloud/amazon/ec2_vol_facts.py
+++ b/lib/ansible/modules/cloud/amazon/ec2_vol_facts.py
@@ -24,7 +24,7 @@ options:
   filters:
     description:
       - A dict of filters to apply. Each dict item consists of a filter key and a filter value.
-        See U(http://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeVolumes.html) for possible filters.
+        See U(https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeVolumes.html) for possible filters.
 extends_documentation_fragment:
     - aws
     - ec2
diff --git a/lib/ansible/modules/cloud/amazon/ec2_vpc_dhcp_option.py b/lib/ansible/modules/cloud/amazon/ec2_vpc_dhcp_option.py
index 3f35347a3e..b11edf2e04 100644
--- a/lib/ansible/modules/cloud/amazon/ec2_vpc_dhcp_option.py
+++ b/lib/ansible/modules/cloud/amazon/ec2_vpc_dhcp_option.py
@@ -49,7 +49,7 @@ options:
     description:
       - NetBIOS node type to advertise in the DHCP options.
         The AWS recommendation is to use 2 (when using netbios name services)
-        http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_DHCP_Options.html
+        U(https://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_DHCP_Options.html)
   vpc_id:
     description:
       - VPC ID to associate with the requested DHCP option set.
diff --git a/lib/ansible/modules/cloud/amazon/ec2_vpc_dhcp_option_facts.py b/lib/ansible/modules/cloud/amazon/ec2_vpc_dhcp_option_facts.py
index fdd58fbf4e..c91d4deb75 100644
--- a/lib/ansible/modules/cloud/amazon/ec2_vpc_dhcp_option_facts.py
+++ b/lib/ansible/modules/cloud/amazon/ec2_vpc_dhcp_option_facts.py
@@ -24,7 +24,7 @@ options:
   filters:
     description:
       - A dict of filters to apply. Each dict item consists of a filter key and a filter value.
-        See U(http://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeRouteTables.html) for possible filters.
+        See U(https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeRouteTables.html) for possible filters.
   dhcp_options_ids:
     description:
       - Get details of specific DHCP Option ID
diff --git a/lib/ansible/modules/cloud/amazon/ec2_vpc_endpoint_facts.py b/lib/ansible/modules/cloud/amazon/ec2_vpc_endpoint_facts.py
index faadd59dbf..997920bf49 100644
--- a/lib/ansible/modules/cloud/amazon/ec2_vpc_endpoint_facts.py
+++ b/lib/ansible/modules/cloud/amazon/ec2_vpc_endpoint_facts.py
@@ -32,7 +32,7 @@ options:
   filters:
     description:
       - A dict of filters to apply. Each dict item consists of a filter key and a filter value.
-        See U(http://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeVpcEndpoints.html)
+        See U(https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeVpcEndpoints.html)
         for possible filters.
 author: Karen Cheng (@Etherdaemon)
 extends_documentation_fragment:
diff --git a/lib/ansible/modules/cloud/amazon/ec2_vpc_igw_facts.py b/lib/ansible/modules/cloud/amazon/ec2_vpc_igw_facts.py
index 49ef539d82..201643e752 100644
--- a/lib/ansible/modules/cloud/amazon/ec2_vpc_igw_facts.py
+++ b/lib/ansible/modules/cloud/amazon/ec2_vpc_igw_facts.py
@@ -24,7 +24,7 @@ options:
   filters:
     description:
       - A dict of filters to apply. Each dict item consists of a filter key and a filter value.
-        See U(http://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeInternetGateways.html) for possible filters.
+        See U(https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeInternetGateways.html) for possible filters.
   internet_gateway_ids:
     description:
       - Get details of specific Internet Gateway ID. Provide this value as a list.
diff --git a/lib/ansible/modules/cloud/amazon/ec2_vpc_nacl.py b/lib/ansible/modules/cloud/amazon/ec2_vpc_nacl.py
index 1fb1dfb087..c396ed25ac 100644
--- a/lib/ansible/modules/cloud/amazon/ec2_vpc_nacl.py
+++ b/lib/ansible/modules/cloud/amazon/ec2_vpc_nacl.py
@@ -16,7 +16,7 @@ module: ec2_vpc_nacl
 short_description: create and delete Network ACLs.
 description:
   - Read the AWS documentation for Network ACLS
-    U(http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_ACLs.html)
+    U(https://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_ACLs.html)
 version_added: "2.2"
 options:
   name:
diff --git a/lib/ansible/modules/cloud/amazon/ec2_vpc_nacl_facts.py b/lib/ansible/modules/cloud/amazon/ec2_vpc_nacl_facts.py
index 732fd7785c..88d73569af 100644
--- a/lib/ansible/modules/cloud/amazon/ec2_vpc_nacl_facts.py
+++ b/lib/ansible/modules/cloud/amazon/ec2_vpc_nacl_facts.py
@@ -29,7 +29,7 @@ options:
   filters:
     description:
       - A dict of filters to apply. Each dict item consists of a filter key and a filter value. See \
-      U(http://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeNetworkAcls.html) for possible filters. Filter \
+      U(https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeNetworkAcls.html) for possible filters. Filter \
       names and values are case sensitive.
     required: false
     default: {}
diff --git a/lib/ansible/modules/cloud/amazon/ec2_vpc_nat_gateway_facts.py b/lib/ansible/modules/cloud/amazon/ec2_vpc_nat_gateway_facts.py
index 74c5164081..1a95bb062e 100644
--- a/lib/ansible/modules/cloud/amazon/ec2_vpc_nat_gateway_facts.py
+++ b/lib/ansible/modules/cloud/amazon/ec2_vpc_nat_gateway_facts.py
@@ -25,7 +25,7 @@ options:
   filters:
     description:
       - A dict of filters to apply. Each dict item consists of a filter key and a filter value.
-        See U(http://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeNatGateways.html)
+        See U(https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeNatGateways.html)
         for possible filters.
 author: Karen Cheng (@Etherdaemon)
 extends_documentation_fragment:
diff --git a/lib/ansible/modules/cloud/amazon/ec2_vpc_net_facts.py b/lib/ansible/modules/cloud/amazon/ec2_vpc_net_facts.py
index e8d2816c4b..516d9e7c0c 100644
--- a/lib/ansible/modules/cloud/amazon/ec2_vpc_net_facts.py
+++ b/lib/ansible/modules/cloud/amazon/ec2_vpc_net_facts.py
@@ -37,7 +37,7 @@ options:
   filters:
     description:
       - A dict of filters to apply. Each dict item consists of a filter key and a filter value.
-        See U(http://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeVpcs.html) for possible filters.
+        See U(https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeVpcs.html) for possible filters.
 extends_documentation_fragment:
     - aws
     - ec2
diff --git a/lib/ansible/modules/cloud/amazon/ec2_vpc_peer.py b/lib/ansible/modules/cloud/amazon/ec2_vpc_peer.py
index c512e7db0d..450d8c4958 100644
--- a/lib/ansible/modules/cloud/amazon/ec2_vpc_peer.py
+++ b/lib/ansible/modules/cloud/amazon/ec2_vpc_peer.py
@@ -16,7 +16,7 @@ module: ec2_vpc_peer
 short_description: create, delete, accept, and reject VPC peering connections between two VPCs.
 description:
   - Read the AWS documentation for VPC Peering Connections
-    U(http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/vpc-peering.html)
+    U(https://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/vpc-peering.html).
 version_added: "2.2"
 options:
   vpc_id:
diff --git a/lib/ansible/modules/cloud/amazon/ec2_vpc_peering_facts.py b/lib/ansible/modules/cloud/amazon/ec2_vpc_peering_facts.py
index 85eb217fcd..983f1afa55 100644
--- a/lib/ansible/modules/cloud/amazon/ec2_vpc_peering_facts.py
+++ b/lib/ansible/modules/cloud/amazon/ec2_vpc_peering_facts.py
@@ -24,7 +24,7 @@ options:
   filters:
     description:
       - A dict of filters to apply. Each dict item consists of a filter key and a filter value.
-        See U(http://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeVpcPeeringConnections.html)
+        See U(https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeVpcPeeringConnections.html)
         for possible filters.
 author: Karen Cheng (@Etherdaemon)
 extends_documentation_fragment:
diff --git a/lib/ansible/modules/cloud/amazon/ec2_vpc_route_table_facts.py b/lib/ansible/modules/cloud/amazon/ec2_vpc_route_table_facts.py
index 30465da9bd..c4c7b0aba8 100644
--- a/lib/ansible/modules/cloud/amazon/ec2_vpc_route_table_facts.py
+++ b/lib/ansible/modules/cloud/amazon/ec2_vpc_route_table_facts.py
@@ -23,7 +23,7 @@ options:
   filters:
     description:
       - A dict of filters to apply. Each dict item consists of a filter key and a filter value.
-        See U(http://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeRouteTables.html) for possible filters.
+        See U(https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeRouteTables.html) for possible filters.
 extends_documentation_fragment:
     - aws
     - ec2
diff --git a/lib/ansible/modules/cloud/amazon/ec2_vpc_subnet_facts.py b/lib/ansible/modules/cloud/amazon/ec2_vpc_subnet_facts.py
index a45c18eea2..509e4f0487 100644
--- a/lib/ansible/modules/cloud/amazon/ec2_vpc_subnet_facts.py
+++ b/lib/ansible/modules/cloud/amazon/ec2_vpc_subnet_facts.py
@@ -38,7 +38,7 @@ options:
   filters:
     description:
       - A dict of filters to apply. Each dict item consists of a filter key and a filter value.
-        See U(http://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeSubnets.html) for possible filters.
+        See U(https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeSubnets.html) for possible filters.
 extends_documentation_fragment:
     - aws
     - ec2
diff --git a/lib/ansible/modules/cloud/amazon/ec2_vpc_vgw_facts.py b/lib/ansible/modules/cloud/amazon/ec2_vpc_vgw_facts.py
index 5373101dce..e5bb3ccae0 100644
--- a/lib/ansible/modules/cloud/amazon/ec2_vpc_vgw_facts.py
+++ b/lib/ansible/modules/cloud/amazon/ec2_vpc_vgw_facts.py
@@ -23,7 +23,7 @@ options:
   filters:
     description:
       - A dict of filters to apply. Each dict item consists of a filter key and a filter value.
-        See U(http://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeRouteTables.html) for possible filters.
+        See U(https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeRouteTables.html) for possible filters.
   vpn_gateway_ids:
     description:
       - Get details of a specific Virtual Gateway ID. This value should be provided as a list.
diff --git a/lib/ansible/modules/cloud/amazon/ec2_vpc_vpn_facts.py b/lib/ansible/modules/cloud/amazon/ec2_vpc_vpn_facts.py
index 21d54fa84d..177d0b5339 100644
--- a/lib/ansible/modules/cloud/amazon/ec2_vpc_vpn_facts.py
+++ b/lib/ansible/modules/cloud/amazon/ec2_vpc_vpn_facts.py
@@ -21,7 +21,7 @@ options:
   filters:
     description:
       - A dict of filters to apply. Each dict item consists of a filter key and a filter value.
-        See U(http://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeVpnConnections.html) for possible filters.
+        See U(https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeVpnConnections.html) for possible filters.
     required: false
   vpn_connection_ids:
     description:
diff --git a/lib/ansible/modules/cloud/amazon/efs.py b/lib/ansible/modules/cloud/amazon/efs.py
index baeae63ff2..7adf400d9d 100644
--- a/lib/ansible/modules/cloud/amazon/efs.py
+++ b/lib/ansible/modules/cloud/amazon/efs.py
@@ -274,7 +274,7 @@ class EFSConnection(object):
             AWS updated it and now there is no need to add a suffix. MountPoint is left for back-compatibility purpose
             And new FilesystemAddress variable is introduced for direct use with other modules (e.g. mount)
             AWS documentation is available here:
-            http://docs.aws.amazon.com/efs/latest/ug/gs-step-three-connect-to-ec2-instance.html
+            https://docs.aws.amazon.com/efs/latest/ug/gs-step-three-connect-to-ec2-instance.html
             """
             item['MountPoint'] = '.%s.efs.%s.amazonaws.com:/' % (item['FileSystemId'], self.region)
             item['FilesystemAddress'] = '%s.efs.%s.amazonaws.com:/' % (item['FileSystemId'], self.region)
diff --git a/lib/ansible/modules/cloud/amazon/efs_facts.py b/lib/ansible/modules/cloud/amazon/efs_facts.py
index 0db4fb0c30..28402a7635 100644
--- a/lib/ansible/modules/cloud/amazon/efs_facts.py
+++ b/lib/ansible/modules/cloud/amazon/efs_facts.py
@@ -270,7 +270,7 @@ class EFSConnection(object):
             AWS updated it and now there is no need to add a suffix. MountPoint is left for back-compatibility purpose
             And new FilesystemAddress variable is introduced for direct use with other modules (e.g. mount)
             AWS documentation is available here:
-            http://docs.aws.amazon.com/efs/latest/ug/gs-step-three-connect-to-ec2-instance.html
+            U(https://docs.aws.amazon.com/efs/latest/ug/gs-step-three-connect-to-ec2-instance.html)
             """
             item['MountPoint'] = '.%s.efs.%s.amazonaws.com:/' % (item['FileSystemId'], self.region)
             item['FilesystemAddress'] = '%s.efs.%s.amazonaws.com:/' % (item['FileSystemId'], self.region)
diff --git a/lib/ansible/modules/cloud/amazon/elb_target.py b/lib/ansible/modules/cloud/amazon/elb_target.py
index 46ebbb42a1..5351440f6c 100644
--- a/lib/ansible/modules/cloud/amazon/elb_target.py
+++ b/lib/ansible/modules/cloud/amazon/elb_target.py
@@ -44,7 +44,7 @@ options:
   target_status:
     description:
       - Blocks and waits for the target status to equal given value. For more detail on target status see
-        U(http://docs.aws.amazon.com/elasticloadbalancing/latest/application/target-group-health-checks.html#target-health-states)
+        U(https://docs.aws.amazon.com/elasticloadbalancing/latest/application/target-group-health-checks.html#target-health-states)
     required: false
     choices: [ 'initial', 'healthy', 'unhealthy', 'unused', 'draining', 'unavailable' ]
   target_status_timeout:
diff --git a/lib/ansible/modules/cloud/amazon/elb_target_group.py b/lib/ansible/modules/cloud/amazon/elb_target_group.py
index c3902056c0..2d9d8b1a0f 100644
--- a/lib/ansible/modules/cloud/amazon/elb_target_group.py
+++ b/lib/ansible/modules/cloud/amazon/elb_target_group.py
@@ -16,8 +16,8 @@ module: elb_target_group
 short_description: Manage a target group for an Application or Network load balancer
 description:
     - Manage an AWS Elastic Load Balancer target group. See
-      U(http://docs.aws.amazon.com/elasticloadbalancing/latest/application/load-balancer-target-groups.html) or
-      U(http://docs.aws.amazon.com/elasticloadbalancing/latest/network/load-balancer-target-groups.html) for details.
+      U(https://docs.aws.amazon.com/elasticloadbalancing/latest/application/load-balancer-target-groups.html) or
+      U(https://docs.aws.amazon.com/elasticloadbalancing/latest/network/load-balancer-target-groups.html) for details.
 version_added: "2.4"
 requirements: [ boto3 ]
 author: "Rob White (@wimnat)"
diff --git a/lib/ansible/modules/cloud/amazon/execute_lambda.py b/lib/ansible/modules/cloud/amazon/execute_lambda.py
index 357ff303c5..3f7f8f0682 100644
--- a/lib/ansible/modules/cloud/amazon/execute_lambda.py
+++ b/lib/ansible/modules/cloud/amazon/execute_lambda.py
@@ -74,7 +74,7 @@ options:
     description:
       - Which version/alias of the function to run. This defaults to the
         C(LATEST) revision, but can be set to any existing version or alias.
-        See https;//docs.aws.amazon.com/lambda/latest/dg/versioning-aliases.html
+        See U(https://docs.aws.amazon.com/lambda/latest/dg/versioning-aliases.html)
         for details.
     default: LATEST
   payload:
diff --git a/lib/ansible/modules/cloud/amazon/iam_mfa_device_facts.py b/lib/ansible/modules/cloud/amazon/iam_mfa_device_facts.py
index 0322cd4081..8ba8d3f549 100644
--- a/lib/ansible/modules/cloud/amazon/iam_mfa_device_facts.py
+++ b/lib/ansible/modules/cloud/amazon/iam_mfa_device_facts.py
@@ -48,11 +48,11 @@ mfa_devices:
 EXAMPLES = '''
 # Note: These examples do not set authentication details, see the AWS Guide for details.
 
-# List MFA devices (more details: http://docs.aws.amazon.com/IAM/latest/APIReference/API_ListMFADevices.html)
+# List MFA devices (more details: https://docs.aws.amazon.com/IAM/latest/APIReference/API_ListMFADevices.html)
 - iam_mfa_device_facts:
   register: mfa_devices
 
-# Assume an existing role (more details: http://docs.aws.amazon.com/STS/latest/APIReference/API_AssumeRole.html)
+# Assume an existing role (more details: https://docs.aws.amazon.com/STS/latest/APIReference/API_AssumeRole.html)
 - sts_assume_role:
     mfa_serial_number: "{{ mfa_devices.mfa_devices[0].serial_number }}"
     role_arn: "arn:aws:iam::123456789012:role/someRole"
diff --git a/lib/ansible/modules/cloud/amazon/iam_role.py b/lib/ansible/modules/cloud/amazon/iam_role.py
index 296ef69608..48b6046443 100644
--- a/lib/ansible/modules/cloud/amazon/iam_role.py
+++ b/lib/ansible/modules/cloud/amazon/iam_role.py
@@ -17,7 +17,7 @@ author: "Rob White (@wimnat)"
 options:
   path:
     description:
-      - The path to the role. For more information about paths, see U(http://docs.aws.amazon.com/IAM/latest/UserGuide/reference_identifiers.html).
+      - The path to the role. For more information about paths, see U(https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_identifiers.html).
     default: "/"
   name:
     description:
diff --git a/lib/ansible/modules/cloud/amazon/sts_assume_role.py b/lib/ansible/modules/cloud/amazon/sts_assume_role.py
index 99a3670f87..aefebc875c 100644
--- a/lib/ansible/modules/cloud/amazon/sts_assume_role.py
+++ b/lib/ansible/modules/cloud/amazon/sts_assume_role.py
@@ -25,7 +25,7 @@ options:
   role_arn:
     description:
       - The Amazon Resource Name (ARN) of the role that the caller is
-        assuming (http://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html#Identifiers_ARNs)
+        assuming U(https://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html#Identifiers_ARNs).
     required: true
   role_session_name:
     description:
@@ -37,8 +37,8 @@ options:
   duration_seconds:
     description:
       - The duration, in seconds, of the role session. The value can range from 900 seconds (15 minutes) to 43200 seconds (12 hours).
-        The max dependis on the IAM role's sessions duration setting.
-        By default, the value is set to 3600 seconds.s
+        The max depends on the IAM role's sessions duration setting.
+        By default, the value is set to 3600 seconds.
   external_id:
     description:
       - A unique identifier that is used by third parties to assume a role in their customers' accounts.
@@ -49,7 +49,7 @@ options:
     description:
       - The value provided by the MFA device, if the trust policy of the role being assumed requires MFA.
 notes:
-  - In order to use the assumed role in a following playbook task you must pass the access_key, access_secret and access_token
+  - In order to use the assumed role in a following playbook task you must pass the access_key, access_secret and access_token.
 extends_documentation_fragment:
     - aws
     - ec2
@@ -85,7 +85,7 @@ changed:
 EXAMPLES = '''
 # Note: These examples do not set authentication details, see the AWS Guide for details.
 
-# Assume an existing role (more details: http://docs.aws.amazon.com/STS/latest/APIReference/API_AssumeRole.html)
+# Assume an existing role (more details: https://docs.aws.amazon.com/STS/latest/APIReference/API_AssumeRole.html)
 sts_assume_role:
   role_arn: "arn:aws:iam::123456789012:role/someRole"
   role_session_name: "someRoleSession"
diff --git a/lib/ansible/modules/cloud/amazon/sts_session_token.py b/lib/ansible/modules/cloud/amazon/sts_session_token.py
index 4d0f4fc84e..ed3a307d49 100644
--- a/lib/ansible/modules/cloud/amazon/sts_session_token.py
+++ b/lib/ansible/modules/cloud/amazon/sts_session_token.py
@@ -23,7 +23,7 @@ options:
   duration_seconds:
     description:
       - The duration, in seconds, of the session token.
-        See http://docs.aws.amazon.com/STS/latest/APIReference/API_GetSessionToken.html#API_GetSessionToken_RequestParameters
+        See U(https://docs.aws.amazon.com/STS/latest/APIReference/API_GetSessionToken.html#API_GetSessionToken_RequestParameters)
         for acceptable and default values.
   mfa_serial_number:
     description:
@@ -62,7 +62,7 @@ changed:
 EXAMPLES = '''
 # Note: These examples do not set authentication details, see the AWS Guide for details.
 
-# Get a session token (more details: http://docs.aws.amazon.com/STS/latest/APIReference/API_GetSessionToken.html)
+# Get a session token (more details: https://docs.aws.amazon.com/STS/latest/APIReference/API_GetSessionToken.html)
 sts_session_token:
   duration_seconds: 3600
 register: session_credentials
