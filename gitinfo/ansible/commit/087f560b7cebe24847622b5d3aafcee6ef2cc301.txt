commit 087f560b7cebe24847622b5d3aafcee6ef2cc301
Author: The Magician <magic-modules@google.com>
Date:   Tue Jun 11 10:53:27 2019 -0700

    Bug fixes for GCP modules (#57260)

diff --git a/lib/ansible/modules/cloud/google/gcp_compute_backend_service.py b/lib/ansible/modules/cloud/google/gcp_compute_backend_service.py
index c9a636d55d..2b67537e73 100644
--- a/lib/ansible/modules/cloud/google/gcp_compute_backend_service.py
+++ b/lib/ansible/modules/cloud/google/gcp_compute_backend_service.py
@@ -33,7 +33,9 @@ module: gcp_compute_backend_service
 description:
 - A Backend Service defines a group of virtual machines that will serve traffic for
   load balancing. This resource is a global backend service, appropriate for external
-  load balancing. For internal load balancing, use a regional backend service instead.
+  load balancing or self-managed internal load balancing.
+- For managed internal load balancing, use a regional backend service instead.
+- Currently self-managed internal load balancing is only available in beta.
 short_description: Creates a GCP BackendService
 version_added: 2.6
 author: Google Inc. (@googlecloudplatform)
@@ -213,6 +215,8 @@ options:
     - The list of URLs to the HttpHealthCheck or HttpsHealthCheck resource for health
       checking this BackendService. Currently at most one health check can be specified,
       and a health check is required.
+    - For internal load balancing, a URL to a HealthCheck resource must be specified
+      instead.
     required: true
   iap:
     description:
@@ -237,9 +241,9 @@ options:
     description:
     - Indicates whether the backend service will be used with internal or external
       load balancing. A backend service created for one type of load balancing cannot
-      be used with the other. Must be `EXTERNAL` for a global backend service. Defaults
-      to `EXTERNAL`.
-    - 'Some valid choices include: "EXTERNAL"'
+      be used with the other. Must be `EXTERNAL` or `INTERNAL_SELF_MANAGED` for a
+      global backend service. Defaults to `EXTERNAL`.
+    - 'Some valid choices include: "EXTERNAL", "INTERNAL_SELF_MANAGED"'
     required: false
     default: EXTERNAL
     version_added: 2.7
@@ -515,6 +519,8 @@ healthChecks:
   - The list of URLs to the HttpHealthCheck or HttpsHealthCheck resource for health
     checking this BackendService. Currently at most one health check can be specified,
     and a health check is required.
+  - For internal load balancing, a URL to a HealthCheck resource must be specified
+    instead.
   returned: success
   type: list
 id:
@@ -552,8 +558,8 @@ loadBalancingScheme:
   description:
   - Indicates whether the backend service will be used with internal or external load
     balancing. A backend service created for one type of load balancing cannot be
-    used with the other. Must be `EXTERNAL` for a global backend service. Defaults
-    to `EXTERNAL`.
+    used with the other. Must be `EXTERNAL` or `INTERNAL_SELF_MANAGED` for a global
+    backend service. Defaults to `EXTERNAL`.
   returned: success
   type: str
 name:
diff --git a/lib/ansible/modules/cloud/google/gcp_compute_backend_service_facts.py b/lib/ansible/modules/cloud/google/gcp_compute_backend_service_facts.py
index 943e203be0..a6fb0d6b0c 100644
--- a/lib/ansible/modules/cloud/google/gcp_compute_backend_service_facts.py
+++ b/lib/ansible/modules/cloud/google/gcp_compute_backend_service_facts.py
@@ -253,6 +253,8 @@ resources:
       - The list of URLs to the HttpHealthCheck or HttpsHealthCheck resource for health
         checking this BackendService. Currently at most one health check can be specified,
         and a health check is required.
+      - For internal load balancing, a URL to a HealthCheck resource must be specified
+        instead.
       returned: success
       type: list
     id:
@@ -290,8 +292,8 @@ resources:
       description:
       - Indicates whether the backend service will be used with internal or external
         load balancing. A backend service created for one type of load balancing cannot
-        be used with the other. Must be `EXTERNAL` for a global backend service. Defaults
-        to `EXTERNAL`.
+        be used with the other. Must be `EXTERNAL` or `INTERNAL_SELF_MANAGED` for
+        a global backend service. Defaults to `EXTERNAL`.
       returned: success
       type: str
     name:
diff --git a/lib/ansible/modules/cloud/google/gcp_compute_global_forwarding_rule.py b/lib/ansible/modules/cloud/google/gcp_compute_global_forwarding_rule.py
index 6e139b51b4..c4b34c7d73 100644
--- a/lib/ansible/modules/cloud/google/gcp_compute_global_forwarding_rule.py
+++ b/lib/ansible/modules/cloud/google/gcp_compute_global_forwarding_rule.py
@@ -100,6 +100,7 @@ options:
       global forwarding rules cannot be used for INTERNAL load balancing.'
     - 'Some valid choices include: "INTERNAL_SELF_MANAGED", "EXTERNAL"'
     required: false
+    default: EXTERNAL
   name:
     description:
     - Name of the resource; provided by the client when the resource is created. The
@@ -348,7 +349,7 @@ def main():
             ip_address=dict(type='str'),
             ip_protocol=dict(type='str'),
             ip_version=dict(type='str'),
-            load_balancing_scheme=dict(type='str'),
+            load_balancing_scheme=dict(default='EXTERNAL', type='str'),
             name=dict(required=True, type='str'),
             network=dict(type='dict'),
             port_range=dict(type='str'),
