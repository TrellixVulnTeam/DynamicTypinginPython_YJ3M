commit 07be5f2b67ff185b5f5fc911c17f5c1c5c1a4103
Author: Abhijeet Kasurde <akasurde@redhat.com>
Date:   Thu Jun 1 15:15:19 2017 +0530

    spelling fixes (non-trivial, changing messages) (#25094)
    
    Multiple spell fixes in single commit.
    Taking over existing PR as per comment -
    https://github.com/ansible/ansible/pull/23645#issuecomment-304312275
    
    Original Author: klemens <ka7@github.com>
    
    Signed-off-by: Abhijeet Kasurde <akasurde@redhat.com>

diff --git a/lib/ansible/cli/pull.py b/lib/ansible/cli/pull.py
index 492c619c91..e6347413a4 100644
--- a/lib/ansible/cli/pull.py
+++ b/lib/ansible/cli/pull.py
@@ -107,7 +107,7 @@ class PullCLI(CLI):
         self.parser.add_option('--track-subs', dest='tracksubs', default=False, action='store_true',
             help='submodules will track the latest changes. This is equivalent to specifying the --remote flag to git submodule update')
 
-        # for pull we don't wan't a default
+        # for pull we don't want a default
         self.parser.set_defaults(inventory=None)
 
         super(PullCLI, self).parse()
@@ -129,7 +129,7 @@ class PullCLI(CLI):
             raise AnsibleOptionsError("URL for repository not specified, use -h for help")
 
         if self.options.module_name not in self.SUPPORTED_REPO_MODULES:
-            raise AnsibleOptionsError("Unsuported repo module %s, choices are %s" % (self.options.module_name, ','.join(self.SUPPORTED_REPO_MODULES)))
+            raise AnsibleOptionsError("Unsupported repo module %s, choices are %s" % (self.options.module_name, ','.join(self.SUPPORTED_REPO_MODULES)))
 
         display.verbosity = self.options.verbosity
         self.validate_conflicts(vault_opts=True)
diff --git a/lib/ansible/module_utils/aos.py b/lib/ansible/module_utils/aos.py
index 42c60b8bb3..e0c00ea06b 100644
--- a/lib/ansible/module_utils/aos.py
+++ b/lib/ansible/module_utils/aos.py
@@ -158,7 +158,7 @@ def do_load_resource(module, collection, name):
     try:
         item = find_collection_item(collection, name, '')
     except:
-        module.fail_json(msg="Ans error occured while running 'find_collection_item'")
+        module.fail_json(msg="An error occurred while running 'find_collection_item'")
 
     if item.exists:
         module.exit_json( changed=False,
diff --git a/lib/ansible/module_utils/cnos_errorcodes.py b/lib/ansible/module_utils/cnos_errorcodes.py
index 47c98e0b27..3a83af00fc 100644
--- a/lib/ansible/module_utils/cnos_errorcodes.py
+++ b/lib/ansible/module_utils/cnos_errorcodes.py
@@ -199,7 +199,7 @@ errorDict = {0: 'Success',
              265: 'Invalid Spanning tree vlan options',
              266: 'Invalid IPv6 option',
              267: 'Invalid IPV6 neighbor IP Address',
-             268: 'Invalid IPV6 neighbor mac addres',
+             268: 'Invalid IPV6 neighbor mac address',
              269: 'Invalid IPV6 dhcp option',
              270: 'Invalid IPV6 relay address option',
              271: 'Invalid IPV6 Ethernet option',
diff --git a/lib/ansible/modules/cloud/amazon/ec2_ami_copy.py b/lib/ansible/modules/cloud/amazon/ec2_ami_copy.py
index 19717fe90a..86cc2e9554 100644
--- a/lib/ansible/modules/cloud/amazon/ec2_ami_copy.py
+++ b/lib/ansible/modules/cloud/amazon/ec2_ami_copy.py
@@ -180,7 +180,7 @@ def copy_image(module, ec2):
 
         module.exit_json(changed=True, image_id=image_id)
     except WaiterError as we:
-        module.fail_json(msg='An error occured waiting for the image to become available. (%s)' %  we.reason)
+        module.fail_json(msg='An error occurred waiting for the image to become available. (%s)' %  we.reason)
     except ClientError as ce:
         module.fail_json(msg=ce.message)
     except NoCredentialsError:
diff --git a/lib/ansible/modules/cloud/azure/azure_rm_securitygroup.py b/lib/ansible/modules/cloud/azure/azure_rm_securitygroup.py
index 4966eb7693..4fd47b2dec 100644
--- a/lib/ansible/modules/cloud/azure/azure_rm_securitygroup.py
+++ b/lib/ansible/modules/cloud/azure/azure_rm_securitygroup.py
@@ -701,7 +701,7 @@ class AzureRMSecurityGroup(AzureRMModuleBase):
                                                                                   parameters)
             result = self.get_poller_result(poller)
         except AzureHttpError as exc:
-            self.fail("Error creating/upating security group {0} - {1}".format(self.name, str(exc)))
+            self.fail("Error creating/updating security group {0} - {1}".format(self.name, str(exc)))
         return create_network_security_group_dict(result)
 
     def delete(self):
diff --git a/lib/ansible/modules/cloud/cloudstack/cs_iso.py b/lib/ansible/modules/cloud/cloudstack/cs_iso.py
index 3f730fe0e5..dc89776d3d 100644
--- a/lib/ansible/modules/cloud/cloudstack/cs_iso.py
+++ b/lib/ansible/modules/cloud/cloudstack/cs_iso.py
@@ -251,11 +251,11 @@ class AnsibleCloudStackIso(AnsibleCloudStack):
             args['ispublic']                = self.module.params.get('is_public')
 
             if args['bootable'] and not args['ostypeid']:
-                self.module.fail_json(msg="OS type 'os_type' is requried if 'bootable=true'.")
+                self.module.fail_json(msg="OS type 'os_type' is required if 'bootable=true'.")
 
             args['url'] = self.module.params.get('url')
             if not args['url']:
-                self.module.fail_json(msg="URL is requried.")
+                self.module.fail_json(msg="URL is required.")
 
             self.result['changed'] = True
             if not self.module.check_mode:
diff --git a/lib/ansible/modules/cloud/google/gce_instance_template.py b/lib/ansible/modules/cloud/google/gce_instance_template.py
index 20a6c779d0..d139f94cfd 100644
--- a/lib/ansible/modules/cloud/google/gce_instance_template.py
+++ b/lib/ansible/modules/cloud/google/gce_instance_template.py
@@ -23,7 +23,7 @@ DOCUMENTATION = '''
 ---
 module: gce_instance_template
 version_added: "2.3"
-short_description: create or destroy intance templates of Compute Engine of GCP.
+short_description: create or destroy instance templates of Compute Engine of GCP.
 description:
      - Creates or destroy Google instance templates
        of Compute Engine of Google Cloud Platform.
@@ -87,7 +87,7 @@ options:
         If C(ephemeral), a new non-static address will be
         used.  If C(None), then no external address will
         be used.  To use an existing static IP address
-        specify adress name.
+        specify address name.
     default: "ephemeral"
   service_account_email:
     description:
@@ -495,7 +495,7 @@ def check_if_system_state_would_be_changed(module, gce):
             output = 'nothing to do for instance template {} '.format(name)
     if current_state == "present":
         if changed:
-            output = 'instance template {} will be detroyed'.format(name)
+            output = 'instance template {} will be destroyed'.format(name)
         else:
             output = 'nothing to do for instance template {} '.format(name)
 
diff --git a/lib/ansible/modules/cloud/ovirt/ovirt_disks.py b/lib/ansible/modules/cloud/ovirt/ovirt_disks.py
index 91d13142ca..e9a9420ba1 100644
--- a/lib/ansible/modules/cloud/ovirt/ovirt_disks.py
+++ b/lib/ansible/modules/cloud/ovirt/ovirt_disks.py
@@ -62,7 +62,7 @@ options:
     upload_image_path:
         description:
             - "Path to disk image, which should be uploaded."
-            - "Note that currently we support only compability version 0.10 of the qcow disk."
+            - "Note that currently we support only compatibility version 0.10 of the qcow disk."
             - "Note that you must have an valid oVirt/RHV engine CA in your system trust store
                or you must provide it in C(ca_file) parameter."
             - "Note that there is no reliable way to achieve idempotency, so
@@ -308,7 +308,7 @@ def transfer(connection, module, direction, transfer_func):
             otypes.ImageTransferPhase.CANCELLED,
         ]:
             raise Exception(
-                "Error occured while uploading image. The transfer is in %s" % transfer.phase
+                "Error occurred while uploading image. The transfer is in %s" % transfer.phase
             )
         if module.params.get('logical_unit'):
             disks_service = connection.system_service().disks_service()
diff --git a/lib/ansible/modules/monitoring/logicmonitor.py b/lib/ansible/modules/monitoring/logicmonitor.py
index 79f6840d9b..80fabae013 100644
--- a/lib/ansible/modules/monitoring/logicmonitor.py
+++ b/lib/ansible/modules/monitoring/logicmonitor.py
@@ -947,7 +947,7 @@ class Collector(LogicMonitor):
             installer = self.get_installer_binary()
 
             if self.info is None:
-                self.module.debug("Retriving collector information")
+                self.module.debug("Retrieving collector information")
                 self.info = self._get()
 
             if not os.path.exists(self.installdir + "/agent"):
diff --git a/lib/ansible/modules/monitoring/zabbix_group.py b/lib/ansible/modules/monitoring/zabbix_group.py
index da44af1be8..ce37e7347e 100644
--- a/lib/ansible/modules/monitoring/zabbix_group.py
+++ b/lib/ansible/modules/monitoring/zabbix_group.py
@@ -98,7 +98,7 @@ EXAMPLES = '''
       - Example group1
       - Example group2
 
-# Limit the Zabbix group creations to one host since Zabbix can return an error when doing concurent updates
+# Limit the Zabbix group creations to one host since Zabbix can return an error when doing concurrent updates
 - name: Create host groups
   local_action:
     module: zabbix_group
@@ -180,7 +180,7 @@ def main():
     )
 
     if not HAS_ZABBIX_API:
-        module.fail_json(msg="Missing requried zabbix-api module (check docs or install with: pip install zabbix-api)")
+        module.fail_json(msg="Missing required zabbix-api module (check docs or install with: pip install zabbix-api)")
 
     server_url = module.params['server_url']
     login_user = module.params['login_user']
diff --git a/lib/ansible/modules/monitoring/zabbix_host.py b/lib/ansible/modules/monitoring/zabbix_host.py
index 7f223692ff..02120c2c49 100644
--- a/lib/ansible/modules/monitoring/zabbix_host.py
+++ b/lib/ansible/modules/monitoring/zabbix_host.py
@@ -451,7 +451,7 @@ def main():
     )
 
     if not HAS_ZABBIX_API:
-        module.fail_json(msg="Missing requried zabbix-api module (check docs or install with: pip install zabbix-api)")
+        module.fail_json(msg="Missing required zabbix-api module (check docs or install with: pip install zabbix-api)")
 
     server_url = module.params['server_url']
     login_user = module.params['login_user']
diff --git a/lib/ansible/modules/monitoring/zabbix_hostmacro.py b/lib/ansible/modules/monitoring/zabbix_hostmacro.py
index 38bfff37c0..3782cbf838 100644
--- a/lib/ansible/modules/monitoring/zabbix_hostmacro.py
+++ b/lib/ansible/modules/monitoring/zabbix_hostmacro.py
@@ -199,7 +199,7 @@ def main():
     )
 
     if not HAS_ZABBIX_API:
-        module.fail_json(msg="Missing requried zabbix-api module (check docs or install with: pip install zabbix-api)")
+        module.fail_json(msg="Missing required zabbix-api module (check docs or install with: pip install zabbix-api)")
 
     server_url = module.params['server_url']
     login_user = module.params['login_user']
diff --git a/lib/ansible/modules/monitoring/zabbix_maintenance.py b/lib/ansible/modules/monitoring/zabbix_maintenance.py
index 486aa3dff1..3292a57ff4 100644
--- a/lib/ansible/modules/monitoring/zabbix_maintenance.py
+++ b/lib/ansible/modules/monitoring/zabbix_maintenance.py
@@ -299,7 +299,7 @@ def main():
     )
 
     if not HAS_ZABBIX_API:
-        module.fail_json(msg="Missing requried zabbix-api module (check docs or install with: pip install zabbix-api)")
+        module.fail_json(msg="Missing required zabbix-api module (check docs or install with: pip install zabbix-api)")
 
     host_names = module.params['host_names']
     host_groups = module.params['host_groups']
diff --git a/lib/ansible/modules/monitoring/zabbix_screen.py b/lib/ansible/modules/monitoring/zabbix_screen.py
index 6e36dd1bf8..3f338bc754 100644
--- a/lib/ansible/modules/monitoring/zabbix_screen.py
+++ b/lib/ansible/modules/monitoring/zabbix_screen.py
@@ -126,7 +126,7 @@ EXAMPLES = '''
         graph_width: 200
         graph_height: 100
 
-# Limit the Zabbix screen creations to one host since Zabbix can return an error when doing concurent updates
+# Limit the Zabbix screen creations to one host since Zabbix can return an error when doing concurrent updates
 - name: Create a new screen or update an existing screen's items
   local_action:
     module: zabbix_screen
@@ -345,7 +345,7 @@ def main():
     )
 
     if not HAS_ZABBIX_API:
-        module.fail_json(msg="Missing requried zabbix-api module (check docs or install with: pip install zabbix-api)")
+        module.fail_json(msg="Missing required zabbix-api module (check docs or install with: pip install zabbix-api)")
 
     server_url = module.params['server_url']
     login_user = module.params['login_user']
diff --git a/lib/ansible/modules/network/aos/aos_asn_pool.py b/lib/ansible/modules/network/aos/aos_asn_pool.py
index 380fd6d153..1352b1e9e3 100644
--- a/lib/ansible/modules/network/aos/aos_asn_pool.py
+++ b/lib/ansible/modules/network/aos/aos_asn_pool.py
@@ -203,7 +203,7 @@ def asn_pool_absent(module, aos, my_pool):
         try:
             my_pool.delete()
         except:
-            module.fail_json(msg="An error occured, while trying to delete the ASN Pool")
+            module.fail_json(msg="An error occurred, while trying to delete the ASN Pool")
 
     module.exit_json( changed=True,
                       name=my_pool.name,
@@ -234,7 +234,7 @@ def asn_pool_present(module, aos, my_pool):
                 my_new_pool = create_new_asn_pool(my_pool, margs['name'], margs['ranges'])
                 my_pool = my_new_pool
             except:
-                module.fail_json(msg="An error occured while trying to create a new ASN Pool ")
+                module.fail_json(msg="An error occurred while trying to create a new ASN Pool ")
 
         module.exit_json( changed=True,
                           name=my_pool.name,
diff --git a/lib/ansible/modules/network/aos/aos_external_router.py b/lib/ansible/modules/network/aos/aos_external_router.py
index daaa207074..12702ea1d4 100644
--- a/lib/ansible/modules/network/aos/aos_external_router.py
+++ b/lib/ansible/modules/network/aos/aos_external_router.py
@@ -183,7 +183,7 @@ def ext_router_absent(module, aos, my_ext_router):
             time.sleep(2)
             my_ext_router.delete()
         except:
-            module.fail_json(msg="An error occured, while trying to delete the External Router")
+            module.fail_json(msg="An error occurred, while trying to delete the External Router")
 
     module.exit_json( changed=True,
                       name=my_ext_router.name,
@@ -213,7 +213,7 @@ def ext_router_present(module, aos, my_ext_router):
                                                           margs['asn'] )
                 my_ext_router = my_new_ext_router
             except:
-                module.fail_json(msg="An error occured while trying to create a new External Router")
+                module.fail_json(msg="An error occurred while trying to create a new External Router")
 
 
         module.exit_json( changed=True,
diff --git a/lib/ansible/modules/network/aos/aos_ip_pool.py b/lib/ansible/modules/network/aos/aos_ip_pool.py
index c1b034e558..a35530cc95 100644
--- a/lib/ansible/modules/network/aos/aos_ip_pool.py
+++ b/lib/ansible/modules/network/aos/aos_ip_pool.py
@@ -211,7 +211,7 @@ def ip_pool_absent(module, aos, my_pool):
         try:
             my_pool.delete()
         except:
-            module.fail_json(msg="An error occured, while trying to delete the IP Pool")
+            module.fail_json(msg="An error occurred, while trying to delete the IP Pool")
 
     module.exit_json( changed=True,
                       name=my_pool.name,
@@ -246,7 +246,7 @@ def ip_pool_present(module, aos, my_pool):
                 my_new_pool = create_new_ip_pool(my_pool, margs['name'], margs['subnets'])
                 my_pool = my_new_pool
             except:
-                module.fail_json(msg="An error occured while trying to create a new IP Pool ")
+                module.fail_json(msg="An error occurred while trying to create a new IP Pool ")
 
         module.exit_json( changed=True,
                           name=my_pool.name,
diff --git a/lib/ansible/modules/network/aos/aos_logical_device.py b/lib/ansible/modules/network/aos/aos_logical_device.py
index f5431756f1..267d62c5b3 100644
--- a/lib/ansible/modules/network/aos/aos_logical_device.py
+++ b/lib/ansible/modules/network/aos/aos_logical_device.py
@@ -152,7 +152,7 @@ def logical_device_absent(module, aos, my_logical_dev):
             time.sleep(1)
             my_logical_dev.delete()
         except:
-            module.fail_json(msg="An error occured, while trying to delete the Logical Device")
+            module.fail_json(msg="An error occurred, while trying to delete the Logical Device")
 
     module.exit_json( changed=True,
                       name=my_logical_dev.name,
diff --git a/lib/ansible/modules/network/aos/aos_rack_type.py b/lib/ansible/modules/network/aos/aos_rack_type.py
index ef03e564be..faca702ce3 100644
--- a/lib/ansible/modules/network/aos/aos_rack_type.py
+++ b/lib/ansible/modules/network/aos/aos_rack_type.py
@@ -149,7 +149,7 @@ def rack_type_absent(module, aos, my_rack_type):
         try:
             my_rack_type.delete()
         except:
-            module.fail_json(msg="An error occured, while trying to delete the Rack Type")
+            module.fail_json(msg="An error occurred, while trying to delete the Rack Type")
 
     module.exit_json( changed=True,
                       name=my_rack_type.name,
diff --git a/lib/ansible/modules/network/aos/aos_template.py b/lib/ansible/modules/network/aos/aos_template.py
index 9cbd29bf21..e743c6f64b 100644
--- a/lib/ansible/modules/network/aos/aos_template.py
+++ b/lib/ansible/modules/network/aos/aos_template.py
@@ -161,7 +161,7 @@ def template_absent(module, aos, my_template):
             time.sleep(1)
             my_template.delete()
         except:
-            module.fail_json(msg="An error occured, while trying to delete the Template")
+            module.fail_json(msg="An error occurred, while trying to delete the Template")
 
     module.exit_json( changed=True,
                       name=my_template.name,
diff --git a/lib/ansible/modules/packaging/os/homebrew_tap.py b/lib/ansible/modules/packaging/os/homebrew_tap.py
index 864df4cc07..31a922373e 100644
--- a/lib/ansible/modules/packaging/os/homebrew_tap.py
+++ b/lib/ansible/modules/packaging/os/homebrew_tap.py
@@ -239,7 +239,7 @@ def main():
             # When an tap URL is provided explicitly, we allow adding
             # *single* tap only. Validate and proceed to add single tap.
             if len(taps) > 1:
-                msg = "List of muliple taps may not be provided with 'url' option."
+                msg = "List of multiple taps may not be provided with 'url' option."
                 module.fail_json(msg=msg)
             else:
                 failed, changed, msg = add_tap(module, brew_path, taps[0], url)
diff --git a/lib/ansible/modules/packaging/os/yum_repository.py b/lib/ansible/modules/packaging/os/yum_repository.py
index ae5a41e021..c11ea76e0d 100644
--- a/lib/ansible/modules/packaging/os/yum_repository.py
+++ b/lib/ansible/modules/packaging/os/yum_repository.py
@@ -570,7 +570,7 @@ class YumRepo(object):
         # defined.
         if (self.params['baseurl'], self.params['mirrorlist']) == (None, None):
             self.module.fail_json(
-                msg='Paramater "baseurl" or "mirrorlist" is required for '
+                msg='Parameter "baseurl" or "mirrorlist" is required for '
                 'adding a new repo.')
 
         # Set options
diff --git a/lib/ansible/modules/web_infrastructure/apache2_module.py b/lib/ansible/modules/web_infrastructure/apache2_module.py
index f0a73566fe..d026d93a04 100644
--- a/lib/ansible/modules/web_infrastructure/apache2_module.py
+++ b/lib/ansible/modules/web_infrastructure/apache2_module.py
@@ -138,7 +138,7 @@ def _module_is_enabled(module):
             if 'AH00534' in stderr and 'mpm_' in name:
                 module.warnings.append(
                     "No MPM module loaded! apache2 reload AND other module actions"
-                    " will fail if no MPM module is loaded immediatly."
+                    " will fail if no MPM module is loaded immediately."
                 )
             else:
                 module.warnings.append(error_msg)
diff --git a/lib/ansible/modules/windows/win_file_version.ps1 b/lib/ansible/modules/windows/win_file_version.ps1
index 2ad66e239f..747571f94c 100644
--- a/lib/ansible/modules/windows/win_file_version.ps1
+++ b/lib/ansible/modules/windows/win_file_version.ps1
@@ -29,11 +29,11 @@ $result = @{
 $path = Get-AnsibleParam -obj $params -name "path" -type "path" -failifempty $true -resultobj $result
 
 If (-Not (Test-Path -Path $path -PathType Leaf)){
-    Fail-Json $result "Specfied path $path does exist or is not a file."
+    Fail-Json $result "Specified path $path does exist or is not a file."
 }
 $ext = [System.IO.Path]::GetExtension($path)
 If ( $ext -notin '.exe', '.dll'){
-    Fail-Json $result "Specfied path $path is not a vaild file type; must be DLL or EXE."
+    Fail-Json $result "Specified path $path is not a vaild file type; must be DLL or EXE."
 }
 
 Try {
diff --git a/lib/ansible/plugins/action/add_host.py b/lib/ansible/plugins/action/add_host.py
index acab50334c..99c33ef1dc 100644
--- a/lib/ansible/plugins/action/add_host.py
+++ b/lib/ansible/plugins/action/add_host.py
@@ -68,7 +68,7 @@ class ActionModule(ActionBase):
             elif isinstance(groups, string_types):
                 group_list = groups.split(",")
             else:
-                raise AnsibleError("Groups must be specfied as a list.", obj=self._task)
+                raise AnsibleError("Groups must be specified as a list.", obj=self._task)
 
             for group_name in group_list:
                 if group_name not in new_groups:
