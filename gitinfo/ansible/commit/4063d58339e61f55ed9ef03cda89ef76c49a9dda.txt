commit 4063d58339e61f55ed9ef03cda89ef76c49a9dda
Author: Matt Clay <matt@mystile.com>
Date:   Thu Aug 29 16:31:38 2019 -0700

    Use relative submodule status in ansible-test.
    
    The `git submodule status` command is relative to the current git repository by default.
    When running from a repository subdirectory paths can be returned above the current directory.
    Specifying the current directory with `git submodule status` avoids listing submodules above that directory.
    
    This will fix issues when testing a collection that is rooted below the repository root when that repository uses submodules.

diff --git a/changelogs/fragments/ansible-test-submodules.yml b/changelogs/fragments/ansible-test-submodules.yml
new file mode 100644
index 0000000000..507fa7cfbb
--- /dev/null
+++ b/changelogs/fragments/ansible-test-submodules.yml
@@ -0,0 +1,2 @@
+bugfixes:
+    - ansible-test now correctly enumerates submodules when a collection resides below the repository root
diff --git a/test/lib/ansible_test/_internal/git.py b/test/lib/ansible_test/_internal/git.py
index ae2388b452..b7bb3339e9 100644
--- a/test/lib/ansible_test/_internal/git.py
+++ b/test/lib/ansible_test/_internal/git.py
@@ -39,7 +39,7 @@ class Git:
 
     def get_submodule_paths(self):  # type: () -> t.List[str]
         """Return a list of submodule paths recursively."""
-        cmd = ['submodule', 'status', '--recursive']
+        cmd = ['submodule', 'status', '--recursive', '.']
         output = self.run_git_split(cmd, '\n')
         submodule_paths = [re.search(r'^.[0-9a-f]+ (?P<path>[^ ]+)', line).group('path') for line in output]
         return submodule_paths
