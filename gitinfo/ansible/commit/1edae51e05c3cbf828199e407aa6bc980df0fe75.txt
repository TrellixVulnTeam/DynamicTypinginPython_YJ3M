commit 1edae51e05c3cbf828199e407aa6bc980df0fe75
Author: Brian Coca <bcoca@ansible.com>
Date:   Sat Aug 15 11:00:26 2015 -0400

    added generic service module, step #1 to separating services to their own modules
    falls back to current service module and requries service mgr facts and new service modules

diff --git a/lib/ansible/plugins/action/service.py b/lib/ansible/plugins/action/service.py
new file mode 100644
index 0000000000..98c4695106
--- /dev/null
+++ b/lib/ansible/plugins/action/service.py
@@ -0,0 +1,59 @@
+# (c) 2015, Ansible Inc,
+#
+# This file is part of Ansible
+#
+# Ansible is free software: you can redistribute it and/or modify
+# it under the terms of the GNU General Public License as published by
+# the Free Software Foundation, either version 3 of the License, or
+# (at your option) any later version.
+#
+# Ansible is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+# GNU General Public License for more details.
+#
+# You should have received a copy of the GNU General Public License
+# along with Ansible.  If not, see <http://www.gnu.org/licenses/>.
+from __future__ import (absolute_import, division, print_function)
+__metaclass__ = type
+
+
+from ansible.plugins.action import ActionBase
+
+class ActionModule(ActionBase):
+
+    TRANSFERS_FILES = False
+
+    def run(self, tmp=None, task_vars=dict()):
+        ''' handler for package operations '''
+
+        name  = self._task.args.get('name', None)
+        state = self._task.args.get('state', None)
+        module = self._task.args.get('use', 'auto')
+
+        if module == 'auto':
+            try:
+                module = self._templar.template('{{ansible_service_mgr}}')
+            except:
+                pass # could not get it from template!
+
+        if module == 'auto':
+            facts = self._execute_module(module_name='setup', module_args=dict(filter='ansible_service_mgr'), task_vars=task_vars)
+            self._display.debug("Facts %s" % facts)
+            module = getattr(facts['ansible_facts'], 'ansible_service_mgr', 'auto')
+
+        if not module or module == 'auto':
+            module = 'service'
+
+        if module != 'auto':
+            # run the 'service' module
+            new_module_args = self._task.args.copy()
+            if 'use' in new_module_args:
+                del new_module_args['use']
+
+            self._display.vvvv("Running %s" % module)
+            return self._execute_module(module_name=module, module_args=new_module_args, task_vars=task_vars)
+
+        else:
+
+            return {'failed': True, 'msg': 'Could not detect which service manager to use. Try gathering facts or setting the "use" option.'}
