commit 5959158612d2f6f9db82ae3b01b2fe70f0e4b883
Author: Simon Legner <Simon.Legner@gmail.com>
Date:   Wed Oct 24 18:01:24 2018 +0200

    doc(user_guide): fix typos (#47425)

diff --git a/docs/docsite/rst/user_guide/intro_adhoc.rst b/docs/docsite/rst/user_guide/intro_adhoc.rst
index cf51d2659e..62ce7a52bf 100644
--- a/docs/docsite/rst/user_guide/intro_adhoc.rst
+++ b/docs/docsite/rst/user_guide/intro_adhoc.rst
@@ -75,7 +75,7 @@ It is also possible to become a user other than root using
 .. note::
 
     Rarely, some users have security rules where they constrain their sudo/pbrun/doas environment to running specific command paths only.
-    This does not work with ansible's no-bootstrapping philosophy and hundreds of different modules.
+    This does not work with Ansible's no-bootstrapping philosophy and hundreds of different modules.
     If doing this, use Ansible from a special account that does not have this constraint.
     One way of doing this without sharing access to unauthorized users would be gating Ansible with :ref:`ansible_tower`, which
     can hold on to an SSH credential and let members of certain organizations use it on their behalf without having direct access.
diff --git a/docs/docsite/rst/user_guide/modules_support.rst b/docs/docsite/rst/user_guide/modules_support.rst
index fe1e7217fc..200d8099d3 100644
--- a/docs/docsite/rst/user_guide/modules_support.rst
+++ b/docs/docsite/rst/user_guide/modules_support.rst
@@ -52,7 +52,7 @@ Support
 =======
 
 For more information on how included Ansible modules are supported by Red Hat,
-please refer to the following `knowledgebase article <https://access.redhat.com/articles/3166901>`_ as well as other resources on the `Red Hat Customer Portal. <https://access.redhat.com/>`_
+please refer to the following `knowledge base article <https://access.redhat.com/articles/3166901>`_ as well as other resources on the `Red Hat Customer Portal. <https://access.redhat.com/>`_
 
 .. seealso::
 
diff --git a/docs/docsite/rst/user_guide/playbook_pathing.rst b/docs/docsite/rst/user_guide/playbook_pathing.rst
index 2c75431481..7e58f792e7 100644
--- a/docs/docsite/rst/user_guide/playbook_pathing.rst
+++ b/docs/docsite/rst/user_guide/playbook_pathing.rst
@@ -15,7 +15,7 @@ By default these should be relative to the config file, some are specifically re
 Task paths
 ==========
 
-Here things start getting complicated, there are 2 different scopes to consider, task evalution (paths are all local, like in lookups) and task execution, which is normally on the remote, unless an action plugin is involved.
+Here things start getting complicated, there are 2 different scopes to consider, task evaluation (paths are all local, like in lookups) and task execution, which is normally on the remote, unless an action plugin is involved.
 
 Some tasks that require 'local' resources use action plugins (template and copy are examples of these), in which case the path is also local.
 
diff --git a/docs/docsite/rst/user_guide/playbooks_advanced_syntax.rst b/docs/docsite/rst/user_guide/playbooks_advanced_syntax.rst
index 58c3b3bee1..56e68b575e 100644
--- a/docs/docsite/rst/user_guide/playbooks_advanced_syntax.rst
+++ b/docs/docsite/rst/user_guide/playbooks_advanced_syntax.rst
@@ -17,7 +17,7 @@ The documentation covered here is an extension of the documentation that can be
 Unsafe or Raw Strings
 ~~~~~~~~~~~~~~~~~~~~~
 
-Ansible provides an internal data type for declaring variable values as "unsafe". This means that the data held within the variables value should be treated as unsafe preventing unsafe character subsitition and information disclosure.
+Ansible provides an internal data type for declaring variable values as "unsafe". This means that the data held within the variables value should be treated as unsafe preventing unsafe character substitution and information disclosure.
 
 Jinja2 contains functionality for escaping, or telling Jinja2 to not template data by means of functionality such as ``{% raw %} ... {% endraw %}``, however this uses a more comprehensive implementation to ensure that the value is never templated.
 
diff --git a/docs/docsite/rst/user_guide/playbooks_intro.rst b/docs/docsite/rst/user_guide/playbooks_intro.rst
index 0e1458c7f6..2ae924089c 100644
--- a/docs/docsite/rst/user_guide/playbooks_intro.rst
+++ b/docs/docsite/rst/user_guide/playbooks_intro.rst
@@ -6,7 +6,7 @@ Intro to Playbooks
 About Playbooks
 ```````````````
 
-Playbooks are a completely different way to use ansible than in adhoc task execution mode, and are
+Playbooks are a completely different way to use ansible than in ad-hoc task execution mode, and are
 particularly powerful.
 
 Simply put, playbooks are the basis for a really simple configuration management and multi-machine deployment system,
diff --git a/docs/docsite/rst/user_guide/playbooks_tags.rst b/docs/docsite/rst/user_guide/playbooks_tags.rst
index 6008b8cc08..50a24bfa51 100644
--- a/docs/docsite/rst/user_guide/playbooks_tags.rst
+++ b/docs/docsite/rst/user_guide/playbooks_tags.rst
@@ -11,7 +11,7 @@ When you execute a playbook, you can filter tasks based on tags in two ways:
 - In Ansible configuration settings, with the ``TAGS_RUN`` and ``TAGS_SKIP`` options
 
 Tags can be applied to *many* structures in Ansible (see "tag inheritance",
-below), but its simplest use is with indivdual tasks. Here is an example
+below), but its simplest use is with individual tasks. Here is an example
 that tags two tasks with different tags::
 
     tasks:
@@ -86,7 +86,7 @@ such as ``include_role`` and ``include_tasks``.
 When you apply ``tags:`` attributes to structures other than tasks,
 Ansible processes the tag attribute to apply ONLY to the tasks they contain.
 Applying tags anywhere other than tasks is just a convenience so you don't
-have to tag tasks indivdually.
+have to tag tasks individually.
 
 This example tags all tasks in the two plays. The first play has all its tasks
 tagged with 'bar', and the second has all its tasks tagged with 'foo'::
diff --git a/docs/docsite/rst/user_guide/windows_faq.rst b/docs/docsite/rst/user_guide/windows_faq.rst
index 2eb1d19648..c4f7fa328d 100644
--- a/docs/docsite/rst/user_guide/windows_faq.rst
+++ b/docs/docsite/rst/user_guide/windows_faq.rst
@@ -144,7 +144,7 @@ In addition, the following Ansible Core modules/action-plugins work with Windows
 * set_stats
 * setup
 * slurp
-* template (also: win_tempate)
+* template (also: win_template)
 * wait_for_connection
 
 Can I run Python modules?
diff --git a/docs/docsite/rst/user_guide/windows_setup.rst b/docs/docsite/rst/user_guide/windows_setup.rst
index fa8710e639..089eff371c 100644
--- a/docs/docsite/rst/user_guide/windows_setup.rst
+++ b/docs/docsite/rst/user_guide/windows_setup.rst
@@ -409,7 +409,7 @@ connection. Some things to check for this are:
 
 HTTP 500 Error
 ++++++++++++++
-These indicate an error has occured with the WinRM service. Some things
+These indicate an error has occurred with the WinRM service. Some things
 to check for include:
 
 * Verify that the number of current open shells has not exceeded either
diff --git a/docs/docsite/rst/user_guide/windows_usage.rst b/docs/docsite/rst/user_guide/windows_usage.rst
index c296a5cc5f..63265ecb3f 100644
--- a/docs/docsite/rst/user_guide/windows_usage.rst
+++ b/docs/docsite/rst/user_guide/windows_usage.rst
@@ -273,7 +273,7 @@ rules apply:
 * A double quote preceded by a backslash ``\`` is interpreted as just a double
   quote ``"`` and not as an argument delimiter.
 
-* Backslashes are interpreted literally unless it immediately preceeds double
+* Backslashes are interpreted literally unless it immediately precedes double
   quotes; for example ``\`` == ``\`` and ``\"`` == ``"``
 
 * If an even number of backslashes is followed by a double quote, one
@@ -294,7 +294,7 @@ With those rules in mind, here are some examples of quoting::
     argv[3] = C:\path\with space
     argv[4] = double "quoted"
 
-    - win_command: '"C:\Program Files\Program\program.exe" "escaped \\\" backslash" unqouted-end-backslash\'
+    - win_command: '"C:\Program Files\Program\program.exe" "escaped \\\" backslash" unquoted-end-backslash\'
 
     argv[0] = C:\Program Files\Program\program.exe
     argv[1] = escaped \" backslash
@@ -412,7 +412,7 @@ Here are some examples on how to write Windows paths::
 
 Legacy key=value Style
 ----------------------
-The legacy ``key=value`` syntax is used on the command line for adhoc commands,
+The legacy ``key=value`` syntax is used on the command line for ad-hoc commands,
 or inside playbooks. The use of this style is discouraged within playbooks
 because backslash characters need to be escaped, making playbooks harder to read.
 The legacy syntax depends on the specific implementation in Ansible, and quoting
