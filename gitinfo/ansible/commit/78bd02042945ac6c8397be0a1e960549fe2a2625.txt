commit 78bd02042945ac6c8397be0a1e960549fe2a2625
Author: Matt Clay <matt@mystile.com>
Date:   Wed Aug 29 15:59:36 2018 -0700

    Remove obsolete `test/utils/docker/` directory.

diff --git a/.github/BOTMETA.yml b/.github/BOTMETA.yml
index 1d13dde45b..096f74ddde 100644
--- a/.github/BOTMETA.yml
+++ b/.github/BOTMETA.yml
@@ -840,8 +840,6 @@ files:
     notify: mattclay
   test/sanity/:
     notify: mattclay
-  test/utils/docker/:
-    notify: mattclay
   test/utils/shippable/:
     notify: mattclay
   test/integration/group_vars/:
diff --git a/test/integration/targets/vmware_host/tasks/main.yml b/test/integration/targets/vmware_host/tasks/main.yml
index 22b1f00d4e..6d382b9df0 100644
--- a/test/integration/targets/vmware_host/tasks/main.yml
+++ b/test/integration/targets/vmware_host/tasks/main.yml
@@ -150,7 +150,7 @@
 #        # it would be a good idea to check the events on the host to see the reconnect
 #        # https://github.com/vmware/govmomi/blob/master/govc/USAGE.md#events
 #        # "govc events ..." need to be callable from
-#        # test/utils/docker/vcenter-simulator/flask_control.py
+#        # https://github.com/ansible/vcenter-test-container/flask_control.py
 
 ## Testcase: Remove Host
 #
diff --git a/test/utils/docker/centos6/Dockerfile b/test/utils/docker/centos6/Dockerfile
deleted file mode 100644
index 21e76aa279..0000000000
--- a/test/utils/docker/centos6/Dockerfile
+++ /dev/null
@@ -1,63 +0,0 @@
-FROM centos:centos6
-
-RUN yum clean all && \
-    yum -y install epel-release && \
-    yum -y install \
-    acl \
-    asciidoc \
-    bzip2 \
-    file \
-    gcc \
-    git \
-    libffi \
-    libffi-devel \
-    make \
-    mercurial \
-    mysql \
-    MySQL-python \
-    mysql-server \
-    openssh-clients \
-    openssh-server \
-    openssl-devel \
-    python-argparse \
-    pass \
-    python-devel \
-    python-httplib2 \
-    python-jinja2 \
-    python-keyczar \
-    python-lxml \
-    python-mock \
-    python-nose \
-    python-paramiko \
-    python-passlib \
-    python-pip \
-    python-setuptools \
-    python-virtualenv \
-    PyYAML \
-    rpm-build \
-    rubygems \
-    sed \
-    sshpass \
-    subversion \
-    sudo \
-    unzip \
-    which \
-    zip \
-    && \
-    yum clean all
-
-RUN rpm -e --nodeps python-crypto && pip install --upgrade pycrypto cryptography
-
-RUN /bin/sed -i -e 's/^\(Defaults\s*requiretty\)/#--- \1/'  /etc/sudoers
-RUN mkdir /etc/ansible/
-RUN /bin/echo -e '[local]\nlocalhost ansible_connection=local' > /etc/ansible/hosts
-VOLUME /sys/fs/cgroup /run /tmp
-RUN ssh-keygen -q -t rsa1 -N '' -f /etc/ssh/ssh_host_key && \
-    ssh-keygen -q -t dsa -N '' -f /etc/ssh/ssh_host_dsa_key && \
-    ssh-keygen -q -t rsa -N '' -f /etc/ssh/ssh_host_rsa_key && \
-    ssh-keygen -q -t rsa -N '' -f /root/.ssh/id_rsa && \
-    cp /root/.ssh/id_rsa.pub /root/.ssh/authorized_keys && \
-    for key in /etc/ssh/ssh_host_*_key.pub; do echo "localhost $(cat ${key})" >> /root/.ssh/known_hosts; done
-RUN pip install coverage junit-xml
-ENV container=docker
-CMD ["/sbin/init"]
diff --git a/test/utils/docker/centos7/Dockerfile b/test/utils/docker/centos7/Dockerfile
deleted file mode 100644
index 703ff8cde0..0000000000
--- a/test/utils/docker/centos7/Dockerfile
+++ /dev/null
@@ -1,70 +0,0 @@
-FROM centos:centos7
-
-RUN (cd /lib/systemd/system/sysinit.target.wants/; for i in *; do [ $i == systemd-tmpfiles-setup.service ] || rm -f $i; done); \
-rm -f /lib/systemd/system/multi-user.target.wants/*; \
-rm -f /etc/systemd/system/*.wants/*; \
-rm -f /lib/systemd/system/local-fs.target.wants/*; \
-rm -f /lib/systemd/system/sockets.target.wants/*udev*; \
-rm -f /lib/systemd/system/sockets.target.wants/*initctl*; \
-rm -f /lib/systemd/system/basic.target.wants/*; \
-rm -f /lib/systemd/system/anaconda.target.wants/*;
-
-RUN yum clean all && \
-    yum -y install epel-release && \
-    yum -y install \
-    acl \
-    asciidoc \
-    bzip2 \
-    dbus-python \
-    file \
-    gcc \
-    git \
-    iproute \
-    libffi \
-    libffi-devel \
-    make \
-    mariadb-server \
-    mercurial \
-    MySQL-python \
-    openssh-clients \
-    openssh-server \
-    openssl-devel \
-    python-cryptography \
-    pass \
-    python-devel \
-    python-httplib2 \
-    python-jinja2 \
-    python-keyczar \
-    python-lxml \
-    python-mock \
-    python-nose \
-    python-paramiko \
-    python-passlib \
-    python-pip \
-    python-setuptools \
-    python-virtualenv \
-    PyYAML \
-    rpm-build \
-    rubygems \
-    sshpass \
-    subversion \
-    sudo \
-    unzip \
-    which \
-    && \
-    yum -y swap fakesystemd systemd && \
-    yum clean all
-
-RUN /usr/bin/sed -i -e 's/^\(Defaults\s*requiretty\)/#--- \1/'  /etc/sudoers
-RUN mkdir /etc/ansible/
-RUN /usr/bin/echo -e '[local]\nlocalhost ansible_connection=local' > /etc/ansible/hosts
-VOLUME /sys/fs/cgroup /run /tmp
-RUN ssh-keygen -q -t rsa1 -N '' -f /etc/ssh/ssh_host_key && \
-    ssh-keygen -q -t dsa -N '' -f /etc/ssh/ssh_host_dsa_key && \
-    ssh-keygen -q -t rsa -N '' -f /etc/ssh/ssh_host_rsa_key && \
-    ssh-keygen -q -t rsa -N '' -f /root/.ssh/id_rsa && \
-    cp /root/.ssh/id_rsa.pub /root/.ssh/authorized_keys && \
-    for key in /etc/ssh/ssh_host_*_key.pub; do echo "localhost $(cat ${key})" >> /root/.ssh/known_hosts; done
-RUN pip install coverage junit-xml
-ENV container=docker
-CMD ["/usr/sbin/init"]
diff --git a/test/utils/docker/fedora24/Dockerfile b/test/utils/docker/fedora24/Dockerfile
deleted file mode 100644
index 603eaf460f..0000000000
--- a/test/utils/docker/fedora24/Dockerfile
+++ /dev/null
@@ -1,79 +0,0 @@
-FROM fedora:24
-
-RUN (cd /lib/systemd/system/sysinit.target.wants/; for i in *; do [ $i == systemd-tmpfiles-setup.service ] || rm -f $i; done); \
-rm -f /lib/systemd/system/multi-user.target.wants/*; \
-rm -f /etc/systemd/system/*.wants/*; \
-rm -f /lib/systemd/system/local-fs.target.wants/*; \
-rm -f /lib/systemd/system/sockets.target.wants/*udev*; \
-rm -f /lib/systemd/system/sockets.target.wants/*initctl*; \
-rm -f /lib/systemd/system/basic.target.wants/*; \
-rm -f /lib/systemd/system/anaconda.target.wants/*;
-
-RUN dnf clean all && \
-    dnf -y update libsolv && \
-    dnf clean all
-
-RUN dnf clean all && \
-    dnf -y --setopt=install_weak_deps=false install \
-    acl \
-    asciidoc \
-    bzip2 \
-    dbus-python \
-    file \
-    findutils \
-    gcc \
-    git \
-    glibc-locale-source \
-    iproute \
-    libffi \
-    libffi-devel \
-    make \
-    mariadb-server \
-    mercurial \
-    MySQL-python \
-    openssh-clients \
-    openssh-server \
-    openssl-devel \
-    pass \
-    procps \
-    python-cryptography \
-    python-devel \
-    python-httplib2 \
-    python-jinja2 \
-    python-keyczar \
-    python-lxml \
-    python-mock \
-    python-nose \
-    python-paramiko \
-    python-passlib \
-    python-pip \
-    python-setuptools \
-    python-virtualenv \
-    python2-dnf \
-    PyYAML \
-    rpm-build \
-    rubygems \
-    sshpass \
-    subversion \
-    sudo \
-    tar \
-    unzip \
-    which \
-    yum \
-    zip \
-    && \
-    dnf clean all
-
-RUN localedef --quiet -c -i en_US -f UTF-8 en_US.UTF-8
-RUN /usr/bin/sed -i -e 's/^\(Defaults\s*requiretty\)/#--- \1/'  /etc/sudoers
-RUN mkdir /etc/ansible/
-RUN /usr/bin/echo -e '[local]\nlocalhost ansible_connection=local' > /etc/ansible/hosts
-VOLUME /sys/fs/cgroup /run /tmp
-RUN ssh-keygen -q -t dsa -N '' -f /etc/ssh/ssh_host_dsa_key && \
-    ssh-keygen -q -t rsa -N '' -f /etc/ssh/ssh_host_rsa_key && \
-    ssh-keygen -q -t rsa -N '' -f /root/.ssh/id_rsa && \
-    cp /root/.ssh/id_rsa.pub /root/.ssh/authorized_keys && \
-    for key in /etc/ssh/ssh_host_*_key.pub; do echo "localhost $(cat ${key})" >> /root/.ssh/known_hosts; done
-RUN pip install coverage junit-xml
-ENV container=docker
-CMD ["/usr/sbin/init"]
diff --git a/test/utils/docker/fedora25/Dockerfile b/test/utils/docker/fedora25/Dockerfile
deleted file mode 100644
index e1812a4eb9..0000000000
--- a/test/utils/docker/fedora25/Dockerfile
+++ /dev/null
@@ -1,75 +0,0 @@
-FROM fedora:25
-
-RUN (cd /lib/systemd/system/sysinit.target.wants/; for i in *; do [ $i == systemd-tmpfiles-setup.service ] || rm -f $i; done); \
-rm -f /lib/systemd/system/multi-user.target.wants/*; \
-rm -f /etc/systemd/system/*.wants/*; \
-rm -f /lib/systemd/system/local-fs.target.wants/*; \
-rm -f /lib/systemd/system/sockets.target.wants/*udev*; \
-rm -f /lib/systemd/system/sockets.target.wants/*initctl*; \
-rm -f /lib/systemd/system/basic.target.wants/*; \
-rm -f /lib/systemd/system/anaconda.target.wants/*;
-
-RUN dnf clean all && \
-    dnf -y --setopt=install_weak_deps=false install \
-    acl \
-    asciidoc \
-    bzip2 \
-    dbus-python \
-    file \
-    findutils \
-    gcc \
-    git \
-    glibc-locale-source \
-    iproute \
-    libffi \
-    libffi-devel \
-    make \
-    mariadb-server \
-    mercurial \
-    MySQL-python \
-    openssh-clients \
-    openssh-server \
-    openssl-devel \
-    pass \
-    procps \
-    python-cryptography \
-    python-devel \
-    python-httplib2 \
-    python-jinja2 \
-    python-keyczar \
-    python-lxml \
-    python-mock \
-    python-nose \
-    python-paramiko \
-    python-passlib \
-    python-pip \
-    python-setuptools \
-    python-virtualenv \
-    python2-dnf \
-    PyYAML \
-    rpm-build \
-    rubygems \
-    sshpass \
-    subversion \
-    sudo \
-    tar \
-    unzip \
-    which \
-    yum \
-    zip \
-    && \
-    dnf clean all
-
-RUN localedef --quiet -c -i en_US -f UTF-8 en_US.UTF-8
-RUN /usr/bin/sed -i -e 's/^\(Defaults\s*requiretty\)/#--- \1/'  /etc/sudoers
-RUN mkdir /etc/ansible/
-RUN /usr/bin/echo -e '[local]\nlocalhost ansible_connection=local' > /etc/ansible/hosts
-VOLUME /sys/fs/cgroup /run /tmp
-RUN ssh-keygen -q -t dsa -N '' -f /etc/ssh/ssh_host_dsa_key && \
-    ssh-keygen -q -t rsa -N '' -f /etc/ssh/ssh_host_rsa_key && \
-    ssh-keygen -q -t rsa -N '' -f /root/.ssh/id_rsa && \
-    cp /root/.ssh/id_rsa.pub /root/.ssh/authorized_keys && \
-    for key in /etc/ssh/ssh_host_*_key.pub; do echo "localhost $(cat ${key})" >> /root/.ssh/known_hosts; done
-RUN pip install coverage junit-xml
-ENV container=docker
-CMD ["/usr/sbin/init"]
diff --git a/test/utils/docker/fedora26py3/Dockerfile b/test/utils/docker/fedora26py3/Dockerfile
deleted file mode 100644
index 8397abee9c..0000000000
--- a/test/utils/docker/fedora26py3/Dockerfile
+++ /dev/null
@@ -1,72 +0,0 @@
-FROM fedora:26
-
-RUN (cd /lib/systemd/system/sysinit.target.wants/; for i in *; do [ $i == systemd-tmpfiles-setup.service ] || rm -f $i; done); \
-rm -f /lib/systemd/system/multi-user.target.wants/*; \
-rm -f /etc/systemd/system/*.wants/*; \
-rm -f /lib/systemd/system/local-fs.target.wants/*; \
-rm -f /lib/systemd/system/sockets.target.wants/*udev*; \
-rm -f /lib/systemd/system/sockets.target.wants/*initctl*; \
-rm -f /lib/systemd/system/basic.target.wants/*; \
-rm -f /lib/systemd/system/anaconda.target.wants/*;
-
-RUN dnf clean all && \
-    dnf -y upgrade && \
-    dnf -y --setopt=install_weak_deps=false install \
-    acl \
-    bzip2 \
-    file \
-    findutils \
-    gcc \
-    git \
-    glibc-locale-source \
-    iproute \
-    libffi \
-    libffi-devel \
-    make \
-    mariadb-server \
-    openssh-clients \
-    openssh-server \
-    openssl-devel \
-    pass \
-    procps \
-    python3-cryptography \
-    python3-dbus \
-    python3-devel \
-    python3-dnf \
-    python3-httplib2 \
-    python3-jinja2 \
-    python3-lxml \
-    python3-mock \
-    python3-mysql \
-    python3-nose \
-    python3-paramiko \
-    python3-passlib \
-    python3-pip \
-    python3-PyYAML \
-    python3-setuptools \
-    python3-virtualenv \
-    rpm-build \
-    rubygems \
-    sshpass \
-    subversion \
-    sudo \
-    tar \
-    unzip \
-    which \
-    zip \
-    && \
-    dnf clean all
-
-RUN localedef --quiet -c -i en_US -f UTF-8 en_US.UTF-8
-RUN /usr/bin/sed -i -e 's/^\(Defaults\s*requiretty\)/#--- \1/'  /etc/sudoers
-RUN mkdir /etc/ansible/
-RUN /usr/bin/echo -e '[local]\nlocalhost ansible_connection=local' > /etc/ansible/hosts
-VOLUME /sys/fs/cgroup /run /tmp
-RUN ssh-keygen -q -t dsa -N '' -f /etc/ssh/ssh_host_dsa_key && \
-    ssh-keygen -q -t rsa -N '' -f /etc/ssh/ssh_host_rsa_key && \
-    ssh-keygen -q -t rsa -N '' -f /root/.ssh/id_rsa && \
-    cp /root/.ssh/id_rsa.pub /root/.ssh/authorized_keys && \
-    for key in /etc/ssh/ssh_host_*_key.pub; do echo "localhost $(cat ${key})" >> /root/.ssh/known_hosts; done
-RUN pip3 install coverage junit-xml
-ENV container=docker
-CMD ["/usr/sbin/init"]
diff --git a/test/utils/docker/fedora27py3/Dockerfile b/test/utils/docker/fedora27py3/Dockerfile
deleted file mode 100644
index f9a452ccd8..0000000000
--- a/test/utils/docker/fedora27py3/Dockerfile
+++ /dev/null
@@ -1,72 +0,0 @@
-FROM fedora:27
-
-RUN (cd /lib/systemd/system/sysinit.target.wants/; for i in *; do [ $i == systemd-tmpfiles-setup.service ] || rm -f $i; done); \
-rm -f /lib/systemd/system/multi-user.target.wants/*; \
-rm -f /etc/systemd/system/*.wants/*; \
-rm -f /lib/systemd/system/local-fs.target.wants/*; \
-rm -f /lib/systemd/system/sockets.target.wants/*udev*; \
-rm -f /lib/systemd/system/sockets.target.wants/*initctl*; \
-rm -f /lib/systemd/system/basic.target.wants/*; \
-rm -f /lib/systemd/system/anaconda.target.wants/*;
-
-RUN dnf clean all && \
-    dnf -y upgrade && \
-    dnf -y --setopt=install_weak_deps=false install \
-    acl \
-    bzip2 \
-    file \
-    findutils \
-    gcc \
-    git \
-    glibc-locale-source \
-    iproute \
-    libffi \
-    libffi-devel \
-    make \
-    mariadb-server \
-    openssh-clients \
-    openssh-server \
-    openssl-devel \
-    pass \
-    procps \
-    python3-cryptography \
-    python3-dbus \
-    python3-devel \
-    python3-dnf \
-    python3-httplib2 \
-    python3-jinja2 \
-    python3-lxml \
-    python3-mock \
-    python3-mysql \
-    python3-nose \
-    python3-paramiko \
-    python3-passlib \
-    python3-pip \
-    python3-PyYAML \
-    python3-setuptools \
-    python3-virtualenv \
-    rpm-build \
-    rubygems \
-    sshpass \
-    subversion \
-    sudo \
-    tar \
-    unzip \
-    which \
-    zip \
-    && \
-    dnf clean all
-
-RUN localedef --quiet -c -i en_US -f UTF-8 en_US.UTF-8
-RUN /usr/bin/sed -i -e 's/^\(Defaults\s*requiretty\)/#--- \1/'  /etc/sudoers
-RUN mkdir /etc/ansible/
-RUN /usr/bin/echo -e '[local]\nlocalhost ansible_connection=local' > /etc/ansible/hosts
-VOLUME /sys/fs/cgroup /run /tmp
-RUN ssh-keygen -q -t dsa -N '' -f /etc/ssh/ssh_host_dsa_key && \
-    ssh-keygen -q -t rsa -N '' -f /etc/ssh/ssh_host_rsa_key && \
-    ssh-keygen -q -t rsa -N '' -f /root/.ssh/id_rsa && \
-    cp /root/.ssh/id_rsa.pub /root/.ssh/authorized_keys && \
-    for key in /etc/ssh/ssh_host_*_key.pub; do echo "localhost $(cat ${key})" >> /root/.ssh/known_hosts; done
-RUN pip3 install coverage junit-xml
-ENV container=docker
-CMD ["/usr/sbin/init"]
diff --git a/test/utils/docker/opensuse42.3/Dockerfile b/test/utils/docker/opensuse42.3/Dockerfile
deleted file mode 100644
index 0bc5b7bdea..0000000000
--- a/test/utils/docker/opensuse42.3/Dockerfile
+++ /dev/null
@@ -1,78 +0,0 @@
-FROM opensuse:42.3
-
-RUN zypper --non-interactive --gpg-auto-import-keys refresh --services --force && \
-    zypper --non-interactive install --force systemd-sysvinit && \
-    zypper --non-interactive install --auto-agree-with-licenses --no-recommends \
-    acl \
-    apache2 \
-    asciidoc \
-    bzip2 \
-    curl \
-    dbus-1-python \
-    gcc \
-    git \
-    glibc-i18ndata \
-    glibc-locale \
-    iproute2 \
-    lsb-release \
-    make \
-    mariadb \
-    mercurial \
-    openssh \
-    password-store \
-    postgresql-server \
-    python-cryptography \
-    python-devel \
-    python-httplib2 \
-    python-jinja2 \
-    python-keyczar \
-    python-lxml \
-    python-mock \
-    python-MySQL-python \
-    python-nose \
-    python-paramiko \
-    python-passlib \
-    python-pip \
-    python-psycopg2 \
-    python-PyYAML \
-    python-setuptools \
-    python-virtualenv \
-    rpm-build \
-    ruby \
-    sshpass \
-    subversion \
-    sudo \
-    tar \
-    unzip \
-    which \
-    zip \
-    && \
-    zypper clean --all
-
-# systemd path differs from rhel
-ENV LIBSYSTEMD=/usr/lib/systemd/system
-RUN (cd ${LIBSYSTEMD}/sysinit.target.wants/; for i in *; do [ $i == systemd-tmpfiles-setup.service ] || rm -f $i; done); \
-rm -f ${LIBSYSTEMD}/multi-user.target.wants/*; \
-rm -f /etc/systemd/system/*.wants/*; \
-rm -f ${LIBSYSTEMD}/local-fs.target.wants/*; \
-rm -f ${LIBSYSTEMD}/sockets.target.wants/*udev*; \
-rm -f ${LIBSYSTEMD}/sockets.target.wants/*initctl*; \
-rm -f ${LIBSYSTEMD}/basic.target.wants/*;
-
-# don't create systemd-session for ssh connections
-RUN sed -i /pam_systemd/d /etc/pam.d/common-session-pc
-
-RUN mkdir /etc/ansible/
-RUN /usr/bin/echo -e '[local]\nlocalhost ansible_connection=local' > /etc/ansible/hosts
-VOLUME /sys/fs/cgroup /run /tmp
-RUN ssh-keygen -q -t rsa1 -N '' -f /etc/ssh/ssh_host_key && \
-    ssh-keygen -q -t dsa -N '' -f /etc/ssh/ssh_host_dsa_key && \
-    ssh-keygen -q -t rsa -N '' -f /etc/ssh/ssh_host_rsa_key && \
-    ssh-keygen -q -t rsa -N '' -f /root/.ssh/id_rsa && \
-    cp /root/.ssh/id_rsa.pub /root/.ssh/authorized_keys && \
-    for key in /etc/ssh/ssh_host_*_key.pub; do echo "localhost $(cat ${key})" >> /root/.ssh/known_hosts; done
-# explicitly enable the service, opensuse default to disabled services
-RUN systemctl enable sshd.service
-RUN pip install coverage junit-xml
-ENV container=docker
-CMD ["/sbin/init"]
diff --git a/test/utils/docker/ubuntu1404/Dockerfile b/test/utils/docker/ubuntu1404/Dockerfile
deleted file mode 100644
index f353531371..0000000000
--- a/test/utils/docker/ubuntu1404/Dockerfile
+++ /dev/null
@@ -1,98 +0,0 @@
-FROM ubuntu:14.04
-
-RUN apt-get update -y && \
-    DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends \
-    acl \
-    apache2 \
-    asciidoc \
-    bzip2 \
-    cdbs \
-    curl \
-    debhelper \
-    debianutils \
-    devscripts \
-    docbook-xml \
-    dpkg-dev \
-    fakeroot \
-    gawk \
-    gcc \
-    git \
-    libffi-dev \
-    libssl-dev \
-    libxml2-utils \
-    locales \
-    make \
-    mercurial \
-    mysql-server \
-    openssh-client \
-    openssh-server \
-    python-dev \
-    pass \
-    python-httplib2 \
-    python-jinja2 \
-    python-keyczar \
-    python-lxml \
-    python-mock \
-    python-mysqldb \
-    python-nose \
-    python-paramiko \
-    python-passlib \
-    python-pip \
-    python-setuptools \
-    python-virtualenv \
-    python-yaml \
-    reprepro \
-    rsync \
-    ruby \
-    sshpass \
-    subversion \
-    sudo \
-    tzdata \
-    unzip \
-    xsltproc \
-    zip \
-    && \
-    apt-get clean
-
-RUN pip install pip --upgrade
-RUN pip install --upgrade pycrypto cryptography
-
-# helpful things taken from the ubuntu-upstart Dockerfile:
-# https://github.com/tianon/dockerfiles/blob/4d24a12b54b75b3e0904d8a285900d88d3326361/sbin-init/ubuntu/upstart/14.04/Dockerfile
-ADD init-fake.conf /etc/init/fake-container-events.conf
-
-# undo some leet hax of the base image
-RUN rm /usr/sbin/policy-rc.d; \
-	rm /sbin/initctl; dpkg-divert --rename --remove /sbin/initctl
-# remove some pointless services
-RUN /usr/sbin/update-rc.d -f ondemand remove; \
-	for f in \
-		/etc/init/u*.conf \
-		/etc/init/mounted-dev.conf \
-		/etc/init/mounted-proc.conf \
-		/etc/init/mounted-run.conf \
-		/etc/init/mounted-tmp.conf \
-		/etc/init/mounted-var.conf \
-		/etc/init/hostname.conf \
-		/etc/init/networking.conf \
-		/etc/init/tty*.conf \
-		/etc/init/plymouth*.conf \
-		/etc/init/hwclock*.conf \
-		/etc/init/module*.conf\
-	; do \
-		dpkg-divert --local --rename --add "$f"; \
-	done; \
-	echo '# /lib/init/fstab: cleared out for bare-bones Docker' > /lib/init/fstab
-# end things from ubuntu-upstart Dockerfile
-
-RUN rm /etc/apt/apt.conf.d/docker-clean
-RUN mkdir /etc/ansible/
-RUN /bin/echo -e "[local]\nlocalhost ansible_connection=local" > /etc/ansible/hosts
-RUN locale-gen en_US.UTF-8
-RUN ssh-keygen -q -t rsa -N '' -f /root/.ssh/id_rsa && \
-    cp /root/.ssh/id_rsa.pub /root/.ssh/authorized_keys && \
-    for key in /etc/ssh/ssh_host_*_key.pub; do echo "localhost $(cat ${key})" >> /root/.ssh/known_hosts; done
-VOLUME /sys/fs/cgroup /run/lock /run /tmp
-RUN pip install coverage junit-xml
-ENV container=docker
-CMD ["/sbin/init"]
diff --git a/test/utils/docker/ubuntu1404/init-fake.conf b/test/utils/docker/ubuntu1404/init-fake.conf
deleted file mode 100644
index f5db965051..0000000000
--- a/test/utils/docker/ubuntu1404/init-fake.conf
+++ /dev/null
@@ -1,13 +0,0 @@
-# fake some events needed for correct startup other services
-
-description     "In-Container Upstart Fake Events"
-
-start on startup
-
-script
-	rm -rf /var/run/*.pid
-	rm -rf /var/run/network/*
-	/sbin/initctl emit stopped JOB=udevtrigger --no-wait
-	/sbin/initctl emit started JOB=udev --no-wait
-	/sbin/initctl emit runlevel RUNLEVEL=3 --no-wait
-end script
diff --git a/test/utils/docker/ubuntu1604/Dockerfile b/test/utils/docker/ubuntu1604/Dockerfile
deleted file mode 100644
index eb5a4dc7f4..0000000000
--- a/test/utils/docker/ubuntu1604/Dockerfile
+++ /dev/null
@@ -1,73 +0,0 @@
-FROM ubuntu:16.04
-
-RUN apt-get update -y && \
-    DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends \
-    acl \
-    apache2 \
-    asciidoc \
-    bzip2 \
-    cdbs \
-    curl \
-    debhelper \
-    debianutils \
-    devscripts \
-    docbook-xml \
-    dpkg-dev \
-    fakeroot \
-    gawk \
-    gcc \
-    git \
-    iproute2 \
-    libffi-dev \
-    libssl-dev \
-    libxml2-utils \
-    locales \
-    lsb-release \
-    make \
-    mercurial \
-    mysql-server \
-    openssh-client \
-    openssh-server \
-    python-cryptography \
-    python-dev \
-    pass \
-    python-dbus \
-    python-httplib2 \
-    python-jinja2 \
-    python-keyczar \
-    python-lxml \
-    python-mock \
-    python-mysqldb \
-    python-nose \
-    python-paramiko \
-    python-passlib \
-    python-pip \
-    python-setuptools \
-    python-virtualenv \
-    python-wheel \
-    python-yaml \
-    reprepro \
-    rsync \
-    ruby \
-    sshpass \
-    subversion \
-    sudo \
-    tzdata \
-    unzip \
-    virtualenv \
-    xsltproc \
-    zip \
-    && \
-    apt-get clean
-
-RUN rm /etc/apt/apt.conf.d/docker-clean
-RUN mkdir /etc/ansible/
-RUN /bin/echo -e "[local]\nlocalhost ansible_connection=local" > /etc/ansible/hosts
-RUN locale-gen en_US.UTF-8
-RUN ssh-keygen -q -t rsa -N '' -f /root/.ssh/id_rsa && \
-    cp /root/.ssh/id_rsa.pub /root/.ssh/authorized_keys && \
-    for key in /etc/ssh/ssh_host_*_key.pub; do echo "localhost $(cat ${key})" >> /root/.ssh/known_hosts; done
-VOLUME /sys/fs/cgroup /run/lock /run /tmp
-RUN pip install coverage junit-xml
-ENV container=docker
-CMD ["/sbin/init"]
diff --git a/test/utils/docker/ubuntu1604py3/Dockerfile b/test/utils/docker/ubuntu1604py3/Dockerfile
deleted file mode 100644
index a48eb327d0..0000000000
--- a/test/utils/docker/ubuntu1604py3/Dockerfile
+++ /dev/null
@@ -1,69 +0,0 @@
-FROM ubuntu:16.04
-
-RUN apt-get update -y && \
-    DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends \
-    acl \
-    apache2 \
-    bzip2 \
-    curl \
-    debhelper \
-    debianutils \
-    devscripts \
-    docbook-xml \
-    dpkg-dev \
-    fakeroot \
-    gawk \
-    gcc \
-    git \
-    iproute2 \
-    libffi-dev \
-    libssl-dev \
-    libxml2-utils \
-    locales \
-    lsb-release \
-    make \
-    mysql-server \
-    pass \
-    openssh-client \
-    openssh-server \
-    python3-cryptography \
-    python3-dev \
-    python3-dbus \
-    python3-httplib2 \
-    python3-jinja2 \
-    python3-lxml \
-    python3-mock \
-    python3-mysqldb \
-    python3-nose \
-    python3-paramiko \
-    python3-passlib \
-    python3-pip \
-    python3-setuptools \
-    python3-virtualenv \
-    python3-wheel \
-    python3-yaml \
-    reprepro \
-    rsync \
-    ruby \
-    sshpass \
-    subversion \
-    sudo \
-    tzdata \
-    unzip \
-    virtualenv \
-    xsltproc \
-    zip \
-    && \
-    apt-get clean
-
-RUN rm /etc/apt/apt.conf.d/docker-clean
-RUN mkdir /etc/ansible/
-RUN /bin/echo -e "[local]\nlocalhost ansible_connection=local" > /etc/ansible/hosts
-RUN locale-gen en_US.UTF-8
-RUN ssh-keygen -q -t rsa -N '' -f /root/.ssh/id_rsa && \
-    cp /root/.ssh/id_rsa.pub /root/.ssh/authorized_keys && \
-    for key in /etc/ssh/ssh_host_*_key.pub; do echo "localhost $(cat ${key})" >> /root/.ssh/known_hosts; done
-VOLUME /sys/fs/cgroup /run/lock /run /tmp
-RUN pip3 install coverage junit-xml python3-keyczar
-ENV container=docker
-CMD ["/sbin/init"]
