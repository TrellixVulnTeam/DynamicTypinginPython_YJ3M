commit 3f784caed1aa63d2a5a3e9df20c4606372910c19
Author: Toshio Kuratomi <a.badger@gmail.com>
Date:   Tue Aug 13 16:23:32 2019 -0700

    Table fixing (#60177)
    
    * Change formatting of the network/user_guide tables
    
    * Tables had hardcoded line breaks to workaround a bug in the
      read-the-docs theme.  Change those so that they now flow according to
      the browser size.
    
    * Also switch away from grid tables to the simpler to create and read
      simple tables
    
    * Changes to table stylesheet
    
    * valign all content, not just the first column.  This becomes important
      with more than two columns
    * Set the font-weight to the first <p> element inside of the first
      column.  This allows us to simplify the first column when everything
      there is the attribute name
    
    * Change platform_index footnote from numbered to dagger symbol
    
    The footnote notation was very odd to read.  Try using a symbol for the
    footnote instead of a number to see if that will clarify it.  We can't
    manually specify symbolled footnotes, though, so we have to emulate a
    footnote with an internal link.  This loses the backref to each place
    that the footnote was used but since that was the portion which was hard
    to read, perhaps that's for the best.

diff --git a/docs/docsite/_static/ansible.css b/docs/docsite/_static/ansible.css
index 336d35efd2..0dcaf825ca 100644
--- a/docs/docsite/_static/ansible.css
+++ b/docs/docsite/_static/ansible.css
@@ -38,16 +38,27 @@
  * required is given the class .value-required
  */
 
+/* The extra .rst-content is so this will override rtd theme */
+.rst-content table.documentation-table td {
+    vertical-align: top;
+}
+
 table.documentation-table td:first-child {
     white-space: nowrap;
     vertical-align: top;
 }
 
+table.documentation-table td:first-child p:first-child {
+    font-weight: bold;
+    display: inline;
+}
+/* This is now redundant with above position-based styling */
+/*
 table.documentation-table .value-name {
     font-weight: bold;
     display: inline;
 }
-
+*/
 table.documentation-table .value-type {
     font-size: x-small;
     color: purple;
diff --git a/docs/docsite/rst/network/user_guide/platform_cnos.rst b/docs/docsite/rst/network/user_guide/platform_cnos.rst
index 6a777d48ce..bbd46af034 100644
--- a/docs/docsite/rst/network/user_guide/platform_cnos.rst
+++ b/docs/docsite/rst/network/user_guide/platform_cnos.rst
@@ -11,26 +11,31 @@ CNOS supports Enable Mode (Privilege Escalation). This page offers details on ho
 Connections Available
 ================================================================================
 
-+---------------------------+-----------------------------------------------+
-|..                         | CLI                                           |
-+===========================+===============================================+
-| **Protocol**              |  SSH                                          |
-+---------------------------+-----------------------------------------------+
-| | **Credentials**         | | uses SSH keys / SSH-agent if present        |
-| |                         | | accepts ``-u myuser -k`` if using password  |
-+---------------------------+-----------------------------------------------+
-| **Indirect Access**       | via a bastion (jump host)                     |
-+---------------------------+-----------------------------------------------+
-| | **Connection Settings** | | ``ansible_connection: network_cli``         |
-| |                         | |                                             |
-| |                         | |                                             |
-+---------------------------+-----------------------------------------------+
-| | **Enable Mode**         | | supported - use ``ansible_become: yes``     |
-| | (Privilege Escalation)  | | with ``ansible_become_method: enable``      |
-| |                         | | and ``ansible_become_password:``            |
-+---------------------------+-----------------------------------------------+
-| **Returned Data Format**  | ``stdout[0].``                                |
-+---------------------------+-----------------------------------------------+
+.. table::
+    :widths: auto
+    :class: documentation-table
+
+    ====================  ==========================================
+    ..                    CLI
+    ====================  ==========================================
+    Protocol              SSH
+
+    Credentials           uses SSH keys / SSH-agent if present
+
+                          accepts ``-u myuser -k`` if using password
+
+    Indirect Access       via a bastion (jump host)
+
+    Connection Settings   ``ansible_connection: network_cli``
+
+    |enable_mode|         supported: use ``ansible_become: yes``
+                          with ``ansible_become_method: enable``
+                          and ``ansible_become_password:``
+
+    Returned Data Format  ``stdout[0].``
+    ====================  ==========================================
+
+.. |enable_mode| replace:: Enable Mode |br| (Privilege Escalation)
 
 For legacy playbooks, CNOS still supports ``ansible_connection: local``. We recommend modernizing to use ``ansible_connection: network_cli`` as soon as possible.
 
diff --git a/docs/docsite/rst/network/user_guide/platform_dellos10.rst b/docs/docsite/rst/network/user_guide/platform_dellos10.rst
index 702914c373..97de476516 100644
--- a/docs/docsite/rst/network/user_guide/platform_dellos10.rst
+++ b/docs/docsite/rst/network/user_guide/platform_dellos10.rst
@@ -11,26 +11,31 @@ OS10 supports Enable Mode (Privilege Escalation). This page offers details on ho
 Connections Available
 ================================================================================
 
-+---------------------------+-----------------------------------------------+
-|..                         | CLI                                           |
-+===========================+===============================================+
-| **Protocol**              |  SSH                                          |
-+---------------------------+-----------------------------------------------+
-| | **Credentials**         | | uses SSH keys / SSH-agent if present        |
-| |                         | | accepts ``-u myuser -k`` if using password  |
-+---------------------------+-----------------------------------------------+
-| **Indirect Access**       | via a bastion (jump host)                     |
-+---------------------------+-----------------------------------------------+
-| | **Connection Settings** | | ``ansible_connection: network_cli``         |
-| |                         | |                                             |
-| |                         | |                                             |
-+---------------------------+-----------------------------------------------+
-| | **Enable Mode**         | | supported - use ``ansible_become: yes``     |
-| | (Privilege Escalation)  | | with ``ansible_become_method: enable``      |
-| |                         | | and ``ansible_become_password:``            |
-+---------------------------+-----------------------------------------------+
-| **Returned Data Format**  | ``stdout[0].``                                |
-+---------------------------+-----------------------------------------------+
+.. table::
+    :widths: auto
+    :class: documentation-table
+
+    ====================  ==========================================
+    ..                    CLI
+    ====================  ==========================================
+    Protocol              SSH
+
+    Credentials           uses SSH keys / SSH-agent if present
+
+                          accepts ``-u myuser -k`` if using password
+
+    Indirect Access       via a bastion (jump host)
+
+    Connection Settings   ``ansible_connection: network_cli``
+
+    |enable_mode|         supported: use ``ansible_become: yes``
+                          with ``ansible_become_method: enable``
+                          and ``ansible_become_password:``
+
+    Returned Data Format  ``stdout[0].``
+    ====================  ==========================================
+
+.. |enable_mode| replace:: Enable Mode |br| (Privilege Escalation)
 
 For legacy playbooks, OS10 still supports ``ansible_connection: local``. We recommend modernizing to use ``ansible_connection: network_cli`` as soon as possible.
 
diff --git a/docs/docsite/rst/network/user_guide/platform_dellos6.rst b/docs/docsite/rst/network/user_guide/platform_dellos6.rst
index 0b6f0d28c0..4b708fdbda 100644
--- a/docs/docsite/rst/network/user_guide/platform_dellos6.rst
+++ b/docs/docsite/rst/network/user_guide/platform_dellos6.rst
@@ -11,26 +11,31 @@ OS6 supports Enable Mode (Privilege Escalation). This page offers details on how
 Connections Available
 ================================================================================
 
-+---------------------------+-----------------------------------------------+
-|..                         | CLI                                           |
-+===========================+===============================================+
-| **Protocol**              |  SSH                                          |
-+---------------------------+-----------------------------------------------+
-| | **Credentials**         | | uses SSH keys / SSH-agent if present        |
-| |                         | | accepts ``-u myuser -k`` if using password  |
-+---------------------------+-----------------------------------------------+
-| **Indirect Access**       | via a bastion (jump host)                     |
-+---------------------------+-----------------------------------------------+
-| | **Connection Settings** | | ``ansible_connection: network_cli``         |
-| |                         | |                                             |
-| |                         | |                                             |
-+---------------------------+-----------------------------------------------+
-| | **Enable Mode**         | | supported - use ``ansible_become: yes``     |
-| | (Privilege Escalation)  | | with ``ansible_become_method: enable``      |
-| |                         | | and ``ansible_become_password:``            |
-+---------------------------+-----------------------------------------------+
-| **Returned Data Format**  | ``stdout[0].``                                |
-+---------------------------+-----------------------------------------------+
+.. table::
+    :widths: auto
+    :class: documentation-table
+
+    ====================  ==========================================
+    ..                    CLI
+    ====================  ==========================================
+    Protocol              SSH
+
+    Credentials           uses SSH keys / SSH-agent if present
+
+                          accepts ``-u myuser -k`` if using password
+
+    Indirect Access       via a bastion (jump host)
+
+    Connection Settings   ``ansible_connection: network_cli``
+
+    |enable_mode|         supported: use ``ansible_become: yes``
+                          with ``ansible_become_method: enable``
+                          and ``ansible_become_password:``
+
+    Returned Data Format  ``stdout[0].``
+    ====================  ==========================================
+
+.. |enable_mode| replace:: Enable Mode |br| (Privilege Escalation)
 
 For legacy playbooks, OS6 still supports ``ansible_connection: local``. We recommend modernizing to use ``ansible_connection: network_cli`` as soon as possible.
 
diff --git a/docs/docsite/rst/network/user_guide/platform_dellos9.rst b/docs/docsite/rst/network/user_guide/platform_dellos9.rst
index bef789d8c6..d540dc6a67 100644
--- a/docs/docsite/rst/network/user_guide/platform_dellos9.rst
+++ b/docs/docsite/rst/network/user_guide/platform_dellos9.rst
@@ -11,26 +11,31 @@ OS9 supports Enable Mode (Privilege Escalation). This page offers details on how
 Connections Available
 ================================================================================
 
-+---------------------------+-----------------------------------------------+
-|..                         | CLI                                           |
-+===========================+===============================================+
-| **Protocol**              |  SSH                                          |
-+---------------------------+-----------------------------------------------+
-| | **Credentials**         | | uses SSH keys / SSH-agent if present        |
-| |                         | | accepts ``-u myuser -k`` if using password  |
-+---------------------------+-----------------------------------------------+
-| **Indirect Access**       | via a bastion (jump host)                     |
-+---------------------------+-----------------------------------------------+
-| | **Connection Settings** | | ``ansible_connection: network_cli``         |
-| |                         | |                                             |
-| |                         | |                                             |
-+---------------------------+-----------------------------------------------+
-| | **Enable Mode**         | | supported - use ``ansible_become: yes``     |
-| | (Privilege Escalation)  | | with ``ansible_become_method: enable``      |
-| |                         | | and ``ansible_become_password:``            |
-+---------------------------+-----------------------------------------------+
-| **Returned Data Format**  | ``stdout[0].``                                |
-+---------------------------+-----------------------------------------------+
+.. table::
+    :widths: auto
+    :class: documentation-table
+
+    ====================  ==========================================
+    ..                    CLI
+    ====================  ==========================================
+    Protocol              SSH
+
+    Credentials           uses SSH keys / SSH-agent if present
+
+                          accepts ``-u myuser -k`` if using password
+
+    Indirect Access       via a bastion (jump host)
+
+    Connection Settings   ``ansible_connection: network_cli``
+
+    |enable_mode|         supported: use ``ansible_become: yes``
+                          with ``ansible_become_method: enable``
+                          and ``ansible_become_password:``
+
+    Returned Data Format  ``stdout[0].``
+    ====================  ==========================================
+
+.. |enable_mode| replace:: Enable Mode |br| (Privilege Escalation)
 
 For legacy playbooks, OS9 still supports ``ansible_connection: local``. We recommend modernizing to use ``ansible_connection: network_cli`` as soon as possible.
 
diff --git a/docs/docsite/rst/network/user_guide/platform_enos.rst b/docs/docsite/rst/network/user_guide/platform_enos.rst
index f82f93492a..8b45ec49aa 100644
--- a/docs/docsite/rst/network/user_guide/platform_enos.rst
+++ b/docs/docsite/rst/network/user_guide/platform_enos.rst
@@ -11,25 +11,32 @@ ENOS supports Enable Mode (Privilege Escalation). This page offers details on ho
 Connections Available
 ================================================================================
 
-+---------------------------+-----------------------------------------------+
-|..                         | CLI                                           |
-+===========================+===============================================+
-| **Protocol**              |  SSH                                          |
-+---------------------------+-----------------------------------------------+
-| | **Credentials**         | | uses SSH keys / SSH-agent if present        |
-| |                         | | accepts ``-u myuser -k`` if using password  |
-+---------------------------+-----------------------------------------------+
-| **Indirect Access**       | via a bastion (jump host)                     |
-+---------------------------+-----------------------------------------------+
-| | **Connection Settings** | | ``ansible_connection: network_cli``         |
-| |                         | |                                             |
-| |                         | |                                             |
-+---------------------------+-----------------------------------------------+
-| | **Enable Mode**         | | supported - use ``ansible_become: yes``     |
-| | (Privilege Escalation)  | | with ``ansible_become_method: enable``      |
-| |                         | | and ``ansible_become_password:``            |
-+---------------------------+-----------------------------------------------+
-| **Returned Data Format**  | ``stdout[0].``                                |
+.. table::
+    :widths: auto
+    :class: documentation-table
+
+    ====================  ==========================================
+    ..                    CLI
+    ====================  ==========================================
+    Protocol              SSH
+
+    Credentials           uses SSH keys / SSH-agent if present
+
+                          accepts ``-u myuser -k`` if using password
+
+    Indirect Access       via a bastion (jump host)
+
+    Connection Settings   ``ansible_connection: network_cli``
+
+    |enable_mode|         supported: use ``ansible_become: yes``
+                          with ``ansible_become_method: enable``
+                          and ``ansible_become_password:``
+
+    Returned Data Format  ``stdout[0].``
+    ====================  ==========================================
+
+.. |enable_mode| replace:: Enable Mode |br| (Privilege Escalation)
+
 +---------------------------+-----------------------------------------------+
 
 For legacy playbooks, ENOS still supports ``ansible_connection: local``. We recommend modernizing to use ``ansible_connection: network_cli`` as soon as possible.
diff --git a/docs/docsite/rst/network/user_guide/platform_eos.rst b/docs/docsite/rst/network/user_guide/platform_eos.rst
index e3bc776f51..51cfa796ea 100644
--- a/docs/docsite/rst/network/user_guide/platform_eos.rst
+++ b/docs/docsite/rst/network/user_guide/platform_eos.rst
@@ -11,35 +11,45 @@ Arista EOS supports multiple connections. This page offers details on how each c
 Connections Available
 ================================================================================
 
-+---------------------------+-----------------------------------------------+---------------------------------------------+
-|..                         | CLI                                           | eAPI                                        |
-+===========================+===============================================+=============================================+
-| **Protocol**              |  SSH                                          | HTTP(S)                                     |
-+---------------------------+-----------------------------------------------+---------------------------------------------+
-| | **Credentials**         | | uses SSH keys / SSH-agent if present        | | uses HTTPS certificates if present        |
-| |                         | | accepts ``-u myuser -k`` if using password  | |                                           |
-+---------------------------+-----------------------------------------------+---------------------------------------------+
-| **Indirect Access**       | via a bastion (jump host)                     | via a web proxy                             |
-+---------------------------+-----------------------------------------------+---------------------------------------------+
-| | **Connection Settings** | | ``ansible_connection: network_cli``         | | * ``ansible_connection: httpapi``         |
-| |                         | |                                             | | OR                                        |
-| |                         | |                                             | |                                           |
-| |                         | |                                             | | * ``ansible_connection: local``           |
-| |                         | |                                             | |    with ``transport: eapi``               |
-| |                         | |                                             | |    in the ``provider`` dictionary         |
-+---------------------------+-----------------------------------------------+---------------------------------------------+
-| | **Enable Mode**         | | supported - use ``ansible_become: yes``     | | supported:                                |
-| | (Privilege Escalation)  | | with ``ansible_become_method: enable``      | | * ``httpapi``                             |
-| |                         | |                                             | |    uses ``ansible_become: yes``           |
-| |                         | |                                             | |    with ``ansible_become_method: enable`` |
-| |                         | |                                             | |                                           |
-| |                         | |                                             | | * ``local``                               |
-| |                         | |                                             | |    uses ``authorize: yes``                |
-| |                         | |                                             | |    and ``auth_pass:``                     |
-| |                         | |                                             | |    in the ``provider`` dictionary         |
-+---------------------------+-----------------------------------------------+---------------------------------------------+
-| **Returned Data Format**  | ``stdout[0].``                                | ``stdout[0].messages[0].``                  |
-+---------------------------+-----------------------------------------------+---------------------------------------------+
+.. table::
+    :widths: auto
+    :class: documentation-table
+
+    ====================  ==========================================  =========================
+    ..                    CLI                                         eAPI
+    ====================  ==========================================  =========================
+    Protocol              SSH                                         HTTP(S)
+
+    Credentials           uses SSH keys / SSH-agent if present        uses HTTPS certificates if
+                                                                      present
+                          accepts ``-u myuser -k`` if using password
+
+    Indirect Access       via a bastion (jump host)                   via a web proxy
+
+    Connection Settings   ``ansible_connection: network_cli``         ``ansible_connection: httpapi``
+
+                                                                      OR
+
+                                                                      ``ansible_connection: local``
+                                                                      with ``transport: eapi``
+                                                                      in the ``provider`` dictionary
+
+    |enable_mode|         supported: |br|                             supported: |br|
+
+                          * use ``ansible_become: yes``               * ``httpapi``
+                            with ``ansible_become_method: enable``      uses ``ansible_become: yes``
+                                                                        with ``ansible_become_method: enable``
+
+                                                                      * ``local``
+                                                                        uses ``authorize: yes``
+                                                                        and ``auth_pass:``
+                                                                        in the ``provider`` dictionary
+
+    Returned Data Format  ``stdout[0].``                              ``stdout[0].messages[0].``
+    ====================  ==========================================  =========================
+
+.. |enable_mode| replace:: Enable Mode |br| (Privilege Escalation)
+
 
 For legacy playbooks, EOS still supports ``ansible_connection: local``. We recommend modernizing to use ``ansible_connection: network_cli`` or ``ansible_connection: httpapi`` as soon as possible.
 
diff --git a/docs/docsite/rst/network/user_guide/platform_eric_eccli.rst b/docs/docsite/rst/network/user_guide/platform_eric_eccli.rst
index 52eac2aa0f..9268af0757 100644
--- a/docs/docsite/rst/network/user_guide/platform_eric_eccli.rst
+++ b/docs/docsite/rst/network/user_guide/platform_eric_eccli.rst
@@ -11,26 +11,29 @@ Extreme ERIC_ECCLI Ansible modules only supports CLI connections today. This pag
 Connections Available
 ================================================================================
 
-+---------------------------+-----------------------------------------------+
-|..                         | CLI                                           |
-+===========================+===============================================+
-| **Protocol**              |  SSH                                          |
-+---------------------------+-----------------------------------------------+
-| | **Credentials**         | | uses SSH keys / SSH-agent if present        |
-| |                         | | accepts ``-u myuser -k`` if using password  |
-+---------------------------+-----------------------------------------------+
-| **Indirect Access**       | via a bastion (jump host)                     |
-+---------------------------+-----------------------------------------------+
-| | **Connection Settings** | | ``ansible_connection: network_cli``         |
-| |                         | |                                             |
-| |                         | |                                             |
-+---------------------------+-----------------------------------------------+
-| | **Enable Mode**         | | not supported by ERIC_ECCLI                 |
-| | (Privilege Escalation)  | |                                             |
-| |                         | |                                             |
-+---------------------------+-----------------------------------------------+
-| **Returned Data Format**  | ``stdout[0].``                                |
-+---------------------------+-----------------------------------------------+
+.. table::
+    :widths: auto
+    :class: documentation-table
+
+    ====================  ==========================================
+    ..                    CLI
+    ====================  ==========================================
+    Protocol              SSH
+
+    Credentials           uses SSH keys / SSH-agent if present
+
+                          accepts ``-u myuser -k`` if using password
+
+    Indirect Access       via a bastion (jump host)
+
+    Connection Settings   ``ansible_connection: network_cli``
+
+    |enable_mode|         not supported by ERIC_ECCLI
+
+    Returned Data Format  ``stdout[0].``
+    ====================  ==========================================
+
+.. |enable_mode| replace:: Enable Mode |br| (Privilege Escalation)
 
 ERIC_ECCLI does not support ``ansible_connection: local``. You must use ``ansible_connection: network_cli``.
 
diff --git a/docs/docsite/rst/network/user_guide/platform_exos.rst b/docs/docsite/rst/network/user_guide/platform_exos.rst
index 9cc6e2916e..5a33067d72 100644
--- a/docs/docsite/rst/network/user_guide/platform_exos.rst
+++ b/docs/docsite/rst/network/user_guide/platform_exos.rst
@@ -11,28 +11,30 @@ Extreme EXOS Ansible modules support multiple connections. This page offers deta
 Connections Available
 ================================================================================
 
-+---------------------------+-----------------------------------------------+-----------------------------------------+
-|..                         | CLI                                           | EXOS-API                                |
-+===========================+===============================================+=========================================+
-| **Protocol**              |  SSH                                          | HTTP(S)                                 |
-+---------------------------+-----------------------------------------------+-----------------------------------------+
-| | **Credentials**         | | uses SSH keys / SSH-agent if present        | | uses HTTPS certificates if present    |
-| |                         | | accepts ``-u myuser -k`` if using password  | |                                       |
-+---------------------------+-----------------------------------------------+-----------------------------------------+
-| **Indirect Access**       | via a bastion (jump host)                     | via a web proxy                         |
-+---------------------------+-----------------------------------------------+-----------------------------------------+
-| | **Connection Settings** | | ``ansible_connection: network_cli``         | | ``ansible_connection: httpapi``       |
-| |                         | |                                             | |                                       |
-| |                         | |                                             | |                                       |
-| |                         | |                                             | |                                       |
-| |                         | |                                             | |                                       |
-+---------------------------+-----------------------------------------------+-----------------------------------------+
-| | **Enable Mode**         | | not supported by EXOS                       | | not supported by EXOS                 |
-| | (Privilege Escalation)  | |                                             | |                                       |
-| |                         | |                                             | |                                       |
-+---------------------------+-----------------------------------------------+-----------------------------------------+
-| **Returned Data Format**  | ``stdout[0].``                                | ``stdout[0].messages[0].``              |
-+---------------------------+-----------------------------------------------+-----------------------------------------+
+
+.. table::
+    :widths: auto
+    :class: documentation-table
+
+    ====================  ==========================================  =========================
+    ..                    CLI                                         EXOS-API
+    ====================  ==========================================  =========================
+    Protocol              SSH                                         HTTP(S)
+
+    Credentials           uses SSH keys / SSH-agent if present        uses HTTPS certificates if present
+
+                          accepts ``-u myuser -k`` if using password
+
+    Indirect Access       via a bastion (jump host)                   via a web proxy
+
+    Connection Settings   ``ansible_connection: network_cli``         ``ansible_connection: httpapi``
+
+    |enable_mode|         not supported by EXOS                       not supported by EXOS
+
+    Returned Data Format  ``stdout[0].``                              ``stdout[0].messages[0].``
+    ====================  ==========================================  =========================
+
+.. |enable_mode| replace:: Enable Mode |br| (Privilege Escalation)
 
 EXOS does not support ``ansible_connection: local``. You must use ``ansible_connection: network_cli`` or ``ansible_connection: httpapi``
 
diff --git a/docs/docsite/rst/network/user_guide/platform_icx.rst b/docs/docsite/rst/network/user_guide/platform_icx.rst
index 87a93bf7ca..6c7e0958e7 100644
--- a/docs/docsite/rst/network/user_guide/platform_icx.rst
+++ b/docs/docsite/rst/network/user_guide/platform_icx.rst
@@ -11,26 +11,30 @@ ICX supports Enable Mode (Privilege Escalation). This page offers details on how
 Connections Available
 ================================================================================
 
-+---------------------------+-----------------------------------------------+
-|..                         | CLI                                           |
-+===========================+===============================================+
-| **Protocol**              |  SSH                                          |
-+---------------------------+-----------------------------------------------+
-| | **Credentials**         | | uses SSH keys / SSH-agent if present        |
-| |                         | | accepts ``-u myuser -k`` if using password  |
-+---------------------------+-----------------------------------------------+
-| **Indirect Access**       | via a bastion (jump host)                     |
-+---------------------------+-----------------------------------------------+
-| | **Connection Settings** | | ``ansible_connection: network_cli``         |
-| |                         | |                                             |
-| |                         | |                                             |
-+---------------------------+-----------------------------------------------+
-| | **Enable Mode**         | | supported - use ``ansible_become: yes``     |
-| | (Privilege Escalation)  | | with ``ansible_become_method: enable``      |
-| |                         | | and ``ansible_become_password:``            |
-+---------------------------+-----------------------------------------------+
-| **Returned Data Format**  | ``stdout[0].``                                |
-+---------------------------+-----------------------------------------------+
+.. table::
+    :widths: auto
+    :class: documentation-table
+
+    ====================  ==========================================
+    ..                    CLI
+    ====================  ==========================================
+    Protocol              SSH
+
+    Credentials           uses SSH keys / SSH-agent if present
+
+                          accepts ``-u myuser -k`` if using password
+
+    Indirect Access       via a bastion (jump host)
+
+    Connection Settings   ``ansible_connection: network_cli``
+
+    |enable_mode|         supported: use ``ansible_become: yes`` with
+                          ``ansible_become_method: enable`` and ``ansible_become_password:``
+
+    Returned Data Format  ``stdout[0].``
+    ====================  ==========================================
+
+.. |enable_mode| replace:: Enable Mode |br| (Privilege Escalation)
 
 
 Using CLI in Ansible
diff --git a/docs/docsite/rst/network/user_guide/platform_index.rst b/docs/docsite/rst/network/user_guide/platform_index.rst
index 861be5ae13..a81f66f3af 100644
--- a/docs/docsite/rst/network/user_guide/platform_index.rst
+++ b/docs/docsite/rst/network/user_guide/platform_index.rst
@@ -35,61 +35,38 @@ Some Ansible Network platforms support multiple connection types, privilege esca
 Settings by Platform
 ================================
 
-+-------------------+-------------------------+--------------+---------+---------+---------+
-|..                 |                         | ``ansible_connection:`` settings available |
-+-------------------+-------------------------+-------------+---------+---------+----------+
-| Network OS        | ``ansible_network_os:`` | network_cli | netconf | httpapi | local    |
-+===================+=========================+=============+=========+=========+==========+
-| Arista EOS*       | ``eos``                 | ✓           |         | ✓       | ✓        |
-+-------------------+-------------------------+-------------+---------+---------+----------+
-| Cisco ASA         | ``asa``                 | ✓           |         |         | ✓        |
-+-------------------+-------------------------+-------------+---------+---------+----------+
-| Cisco IOS*        | ``ios``                 | ✓           |         |         | ✓        |
-+-------------------+-------------------------+-------------+---------+---------+----------+
-| Cisco IOS XR*     | ``iosxr``               | ✓           |         |         | ✓        |
-+-------------------+-------------------------+-------------+---------+---------+----------+
-| Cisco NX-OS*      | ``nxos``                | ✓           |         | ✓       | ✓        |
-+-------------------+-------------------------+-------------+---------+---------+----------+
-| Dell OS6          | ``dellos6``             | ✓           |         |         | ✓        |
-+-------------------+-------------------------+-------------+---------+---------+----------+
-| Dell OS9          | ``dellos9``             | ✓           |         |         | ✓        |
-+-------------------+-------------------------+-------------+---------+---------+----------+
-| Dell OS10         | ``dellos10``            | ✓           |         |         | ✓        |
-+-------------------+-------------------------+-------------+---------+---------+----------+
-| Ericsson ECCLI    | ``eric_eccli``          | ✓           |         |         | ✓        |
-+-------------------+-------------------------+-------------+---------+---------+----------+
-| Extreme EXOS      | ``exos``                | ✓           |         | ✓       |          |
-+-------------------+-------------------------+-------------+---------+---------+----------+
-| Extreme IronWare  | ``ironware``            | ✓           |         |         | ✓        |
-+-------------------+-------------------------+-------------+---------+---------+----------+
-| Extreme NOS       | ``nos``                 | ✓           |         |         |          |
-+-------------------+-------------------------+-------------+---------+---------+----------+
-| Extreme SLX-OS    | ``slxos``               | ✓           |         |         |          |
-+-------------------+-------------------------+-------------+---------+---------+----------+
-| Extreme VOSS      | ``voss``                | ✓           |         |         |          |
-+-------------------+-------------------------+-------------+---------+---------+----------+
-| F5 BIG-IP         |                         |             |         |         | ✓        |
-+-------------------+-------------------------+-------------+---------+---------+----------+
-| F5 BIG-IQ         |                         |             |         |         | ✓        |
-+-------------------+-------------------------+-------------+---------+---------+----------+
-| Junos OS*         | ``junos``               | ✓           | ✓       |         | ✓        |
-+-------------------+-------------------------+-------------+---------+---------+----------+
-| Lenovo CNOS       | ``cnos``                | ✓           |         |         | ✓        |
-+-------------------+-------------------------+-------------+---------+---------+----------+
-| Lenovo ENOS       | ``enos``                | ✓           |         |         | ✓        |
-+-------------------+-------------------------+-------------+---------+---------+----------+
-| MikroTik RouterOS | ``routeros``            | ✓           |         |         |          |
-+-------------------+-------------------------+-------------+---------+---------+----------+
-| Nokia SR OS       | ``sros``                | ✓           |         |         | ✓        |
-+-------------------+-------------------------+-------------+---------+---------+----------+
-| Pluribus Netvisor | ``netvisor``            | ✓           |         |         |          |
-+-------------------+-------------------------+-------------+---------+---------+----------+
-| Ruckus ICX*       | ``icx``                 | ✓           |         |         |          |
-+-------------------+-------------------------+-------------+---------+---------+----------+
-| VyOS*             | ``vyos``                | ✓           |         |         | ✓        |
-+-------------------+-------------------------+-------------+---------+---------+----------+
-| OS that supports  | ``<network-os>``        |             | ✓       |         | ✓        |
-| Netconf*          |                         |             |         |         |          |
-+-------------------+-------------------------+-------------+---------+---------+----------+
+===============================  =======================  ===========  =======  =======  ===========
+..                               ..                       ``ansible_connection:`` settings available
+-------------------------------  -----------------------  ------------------------------------------
+Network OS                       ``ansible_network_os:``  network_cli  netconf  httpapi  local
+===============================  =======================  ===========  =======  =======  ===========
+Arista EOS `[†]`_                ``eos``                  ✓                     ✓        ✓
+Cisco ASA                        ``asa``                  ✓                              ✓
+Cisco IOS `[†]`_                 ``ios``                  ✓                              ✓
+Cisco IOS XR `[†]`_              ``iosxr``                ✓                              ✓
+Cisco NX-OS `[†]`_               ``nxos``                 ✓                     ✓        ✓
+Dell OS6                         ``dellos6``              ✓                              ✓
+Dell OS9                         ``dellos9``              ✓                              ✓
+Dell OS10                        ``dellos10``             ✓                              ✓
+Ericsson ECCLI                   ``eric_eccli``           ✓                              ✓
+Extreme EXOS                     ``exos``                 ✓                     ✓
+Extreme IronWare                 ``ironware``             ✓                              ✓
+Extreme NOS                      ``nos``                  ✓
+Extreme SLX-OS                   ``slxos``                ✓
+Extreme VOSS                     ``voss``                 ✓
+F5 BIG-IP                                                                                ✓
+F5 BIG-IQ                                                                                ✓
+Junos OS `[†]`_                  ``junos``                ✓            ✓                 ✓
+Lenovo CNOS                      ``cnos``                 ✓                              ✓
+Lenovo ENOS                      ``enos``                 ✓                              ✓
+MikroTik RouterOS                ``routeros``             ✓
+Nokia SR OS                      ``sros``                 ✓                              ✓
+Pluribus Netvisor                ``netvisor``             ✓
+Ruckus ICX `[†]`_                ``icx``                  ✓
+VyOS `[†]`_                      ``vyos``                 ✓                              ✓
+OS that supports Netconf `[†]`_  ``<network-os>``                      ✓                 ✓
+===============================  =======================  ===========  =======  =======  ===========
 
-`*` Maintained by Ansible Network Team
+.. _`[†]`:
+
+**[†]** Maintained by Ansible Network Team
diff --git a/docs/docsite/rst/network/user_guide/platform_ios.rst b/docs/docsite/rst/network/user_guide/platform_ios.rst
index d18a091b2d..2d387b5dd7 100644
--- a/docs/docsite/rst/network/user_guide/platform_ios.rst
+++ b/docs/docsite/rst/network/user_guide/platform_ios.rst
@@ -11,26 +11,31 @@ IOS supports Enable Mode (Privilege Escalation). This page offers details on how
 Connections Available
 ================================================================================
 
-+---------------------------+-----------------------------------------------+
-|..                         | CLI                                           |
-+===========================+===============================================+
-| **Protocol**              |  SSH                                          |
-+---------------------------+-----------------------------------------------+
-| | **Credentials**         | | uses SSH keys / SSH-agent if present        |
-| |                         | | accepts ``-u myuser -k`` if using password  |
-+---------------------------+-----------------------------------------------+
-| **Indirect Access**       | via a bastion (jump host)                     |
-+---------------------------+-----------------------------------------------+
-| | **Connection Settings** | | ``ansible_connection: network_cli``         |
-| |                         | |                                             |
-| |                         | |                                             |
-+---------------------------+-----------------------------------------------+
-| | **Enable Mode**         | | supported - use ``ansible_become: yes``     |
-| | (Privilege Escalation)  | | with ``ansible_become_method: enable``      |
-| |                         | | and ``ansible_become_password:``            |
-+---------------------------+-----------------------------------------------+
-| **Returned Data Format**  | ``stdout[0].``                                |
-+---------------------------+-----------------------------------------------+
+.. table::
+    :widths: auto
+    :class: documentation-table
+
+    ====================  ==========================================
+    ..                    CLI
+    ====================  ==========================================
+    Protocol              SSH
+
+    Credentials           uses SSH keys / SSH-agent if present
+
+                          accepts ``-u myuser -k`` if using password
+
+    Indirect Access       via a bastion (jump host)
+
+    Connection Settings   ``ansible_connection: network_cli``
+
+    |enable_mode|         supported: use ``ansible_become: yes`` with
+                          ``ansible_become_method: enable`` and ``ansible_become_password:``
+
+    Returned Data Format  ``stdout[0].``
+    ====================  ==========================================
+
+.. |enable_mode| replace:: Enable Mode |br| (Privilege Escalation)
+
 
 For legacy playbooks, IOS still supports ``ansible_connection: local``. We recommend modernizing to use ``ansible_connection: network_cli`` as soon as possible.
 
diff --git a/docs/docsite/rst/network/user_guide/platform_ironware.rst b/docs/docsite/rst/network/user_guide/platform_ironware.rst
index bd1eb81a9c..5359059ae0 100644
--- a/docs/docsite/rst/network/user_guide/platform_ironware.rst
+++ b/docs/docsite/rst/network/user_guide/platform_ironware.rst
@@ -11,26 +11,32 @@ IronWare supports Enable Mode (Privilege Escalation). This page offers details o
 Connections Available
 ================================================================================
 
-+---------------------------+-----------------------------------------------+
-|..                         | CLI                                           |
-+===========================+===============================================+
-| **Protocol**              |  SSH                                          |
-+---------------------------+-----------------------------------------------+
-| | **Credentials**         | | uses SSH keys / SSH-agent if present        |
-| |                         | | accepts ``-u myuser -k`` if using password  |
-+---------------------------+-----------------------------------------------+
-| **Indirect Access**       | via a bastion (jump host)                     |
-+---------------------------+-----------------------------------------------+
-| | **Connection Settings** | | ``ansible_connection: network_cli``         |
-| |                         | |                                             |
-| |                         | |                                             |
-+---------------------------+-----------------------------------------------+
-| | **Enable Mode**         | | supported - use ``ansible_become: yes``     |
-| | (Privilege Escalation)  | | with ``ansible_become_method: enable``      |
-| |                         | | and ``ansible_become_password:``            |
-+---------------------------+-----------------------------------------------+
-| **Returned Data Format**  | ``stdout[0].``                                |
-+---------------------------+-----------------------------------------------+
+.. table::
+    :widths: auto
+    :class: documentation-table
+
+    ====================  ==========================================
+    ..                    CLI
+    ====================  ==========================================
+    Protocol              SSH
+
+    Credentials           uses SSH keys / SSH-agent if present
+
+                          accepts ``-u myuser -k`` if using password
+
+    Indirect Access       via a bastion (jump host)
+
+    Connection Settings   ``ansible_connection: network_cli``
+
+    |enable_mode|         supported: use ``ansible_become: yes``
+                          with ``ansible_become_method: enable``
+                          and ``ansible_become_password:``
+
+    Returned Data Format  ``stdout[0].``
+    ====================  ==========================================
+
+.. |enable_mode| replace:: Enable Mode |br| (Privilege Escalation)
+
 
 For legacy playbooks, IronWare still supports ``ansible_connection: local``. We recommend modernizing to use ``ansible_connection: network_cli`` as soon as possible.
 
diff --git a/docs/docsite/rst/network/user_guide/platform_junos.rst b/docs/docsite/rst/network/user_guide/platform_junos.rst
index 98247970e8..95dd51a2d7 100644
--- a/docs/docsite/rst/network/user_guide/platform_junos.rst
+++ b/docs/docsite/rst/network/user_guide/platform_junos.rst
@@ -11,26 +11,35 @@ Juniper Junos OS supports multiple connections. This page offers details on how
 Connections Available
 ================================================================================
 
-+----------------------------+--------------------------------------------------------+----------------------------------------------------------------------------------------------------+
-| |                          | | CLI                                                  | | NETCONF                                                                                          |
-| |                          | | * ``junos_netconf`` & ``junos_command`` modules only | | * all modules except ``junos_netconf``, which enables NETCONF                                    |
-+============================+========================================================+====================================================================================================+
-| **Protocol**               | SSH                                                    | XML over SSH                                                                                       |
-+----------------------------+--------------------------------------------------------+----------------------------------------------------------------------------------------------------+
-| | **Credentials**          | | uses SSH keys / SSH-agent if present                 | | uses SSH keys / SSH-agent if present                                                             |
-| |                          | | accepts ``-u myuser -k`` if using password           | | accepts ``-u myuser -k`` if using password                                                       |
-+----------------------------+--------------------------------------------------------+----------------------------------------------------------------------------------------------------+
-| **Indirect Access**        | via a bastion (jump host)                              | via a bastion (jump host)                                                                          |
-+----------------------------+--------------------------------------------------------+----------------------------------------------------------------------------------------------------+
-| **Connection Settings**    |   ``ansible_connection: network_cli``                  |   ``ansible_connection: netconf``                                                                  |
-+----------------------------+--------------------------------------------------------+----------------------------------------------------------------------------------------------------+
-| | **Enable Mode**          | | not supported by Junos OS                            | | not supported by Junos OS                                                                        |
-| | (Privilege Escalation)   | |                                                      | |                                                                                                  |
-+----------------------------+--------------------------------------------------------+----------------------------------------------------------------------------------------------------+
-| | **Returned Data Format** | | ``stdout[0].``                                       | | json: ``result[0]['software-information'][0]['host-name'][0]['data'] foo lo0``                   |
-| |                          | |                                                      | | text: ``result[1].interface-information[0].physical-interface[0].name[0].data foo lo0``          |
-| |                          | |                                                      | | xml: ``result[1].rpc-reply.interface-information[0].physical-interface[0].name[0].data foo lo0`` |
-+----------------------------+--------------------------------------------------------+----------------------------------------------------------------------------------------------------+
+.. table::
+    :widths: auto
+    :class: documentation-table
+
+    ====================  ==========================================  =========================
+    ..                    CLI                                         NETCONF
+
+                          ``junos_netconf`` & ``junos_command``       all modules except ``junos_netconf``,
+                          modules only                                which enables NETCONF
+    ====================  ==========================================  =========================
+    Protocol              SSH                                         XML over SSH
+
+    Credentials           uses SSH keys / SSH-agent if present        uses SSH keys / SSH-agent if present
+
+                          accepts ``-u myuser -k`` if using password  accepts ``-u myuser -k`` if using password
+
+    Indirect Access       via a bastion (jump host)                   via a bastion (jump host)
+
+    Connection Settings   ``ansible_connection: network_cli``         ``ansible_connection: netconf``
+
+    |enable_mode|         not supported by Junos OS                   not supported by Junos OS
+
+    Returned Data Format  ``stdout[0].``                              * json: ``result[0]['software-information'][0]['host-name'][0]['data'] foo lo0``
+                                                                      * text: ``result[1].interface-information[0].physical-interface[0].name[0].data foo lo0``
+                                                                      * xml: ``result[1].rpc-reply.interface-information[0].physical-interface[0].name[0].data foo lo0``
+    ====================  ==========================================  =========================
+
+.. |enable_mode| replace:: Enable Mode |br| (Privilege Escalation)
+
 
 For legacy playbooks, Ansible still supports ``ansible_connection=local`` on all JUNOS modules. We recommend modernizing to use ``ansible_connection=netconf`` or ``ansible_connection=network_cli`` as soon as possible.
 
diff --git a/docs/docsite/rst/network/user_guide/platform_netconf_enabled.rst b/docs/docsite/rst/network/user_guide/platform_netconf_enabled.rst
index 3d3454fcb7..5046e7722a 100644
--- a/docs/docsite/rst/network/user_guide/platform_netconf_enabled.rst
+++ b/docs/docsite/rst/network/user_guide/platform_netconf_enabled.rst
@@ -10,20 +10,27 @@ This page offers details on how the netconf connection works in Ansible and how
 
 Connections Available
 ================================================================================
+.. table::
+    :widths: auto
+    :class: documentation-table
+
+    ====================  ==========================================
+    ..                    NETCONF
+
+                          all modules except ``junos_netconf``,
+                          which enables NETCONF
+    ====================  ==========================================
+    Protocol              XML over SSH
+
+    Credentials           uses SSH keys / SSH-agent if present
+
+                          accepts ``-u myuser -k`` if using password
+
+    Indirect Access       via a bastion (jump host)
+
+    Connection Settings   ``ansible_connection: netconf``
+    ====================  ==========================================
 
-+----------------------------+----------------------------------------------------------------------------------------------------+
-| |                          | | NETCONF                                                                                          |
-| |                          | | * all modules except ``junos_netconf``, which enables NETCONF                                    |
-+============================+====================================================================================================+
-| **Protocol**               | XML over SSH                                                                                       |
-+----------------------------+----------------------------------------------------------------------------------------------------+
-| | **Credentials**          | | uses SSH keys / SSH-agent if present                                                             |
-| |                          | | accepts ``-u myuser -k`` if using password                                                       |
-+----------------------------+----------------------------------------------------------------------------------------------------+
-| **Indirect Access**        | via a bastion (jump host)                                                                          |
-+----------------------------+----------------------------------------------------------------------------------------------------+
-| **Connection Settings**    |   ``ansible_connection: netconf``                                                                  |
-+----------------------------+----------------------------------------------------------------------------------------------------+
 
 For legacy playbooks, Ansible still supports ``ansible_connection=local`` for the netconf_config module only. We recommend modernizing to use ``ansible_connection=netconf`` as soon as possible.
 
diff --git a/docs/docsite/rst/network/user_guide/platform_netvisor.rst b/docs/docsite/rst/network/user_guide/platform_netvisor.rst
index c00d537d63..e1cf09d4d3 100644
--- a/docs/docsite/rst/network/user_guide/platform_netvisor.rst
+++ b/docs/docsite/rst/network/user_guide/platform_netvisor.rst
@@ -12,27 +12,29 @@ This page offers details on how to use ``network_cli`` on NETVISOR in Ansible.
 Connections Available
 ================================================================================
 
-+---------------------------+-----------------------------------------------+
-|..                         | CLI                                           |
-+===========================+===============================================+
-| **Protocol**              |  SSH                                          |
-+---------------------------+-----------------------------------------------+
-| | **Credentials**         | | uses SSH keys / SSH-agent if present        |
-| |                         | | accepts ``-u myuser -k`` if using password  |
-+---------------------------+-----------------------------------------------+
-| **Indirect Access**       | via a bastion (jump host)                     |
-+---------------------------+-----------------------------------------------+
-| | **Connection Settings** | | ``ansible_connection: network_cli``         |
-| |                         | |                                             |
-| |                         | |                                             |
-| |                         | |                                             |
-| |                         | |                                             |
-+---------------------------+-----------------------------------------------+
-| | **Enable Mode**         | | not supported by NETVISOR                   |
-| | (Privilege Escalation)  | |                                             |
-+---------------------------+-----------------------------------------------+
-| **Returned Data Format**  | ``stdout[0].``                                |
-+---------------------------+-----------------------------------------------+
+.. table::
+    :widths: auto
+    :class: documentation-table
+
+    ====================  ==========================================
+    ..                    CLI
+    ====================  ==========================================
+    Protocol              SSH
+
+    Credentials           uses SSH keys / SSH-agent if present
+
+                          accepts ``-u myuser -k`` if using password
+
+    Indirect Access       via a bastion (jump host)
+
+    Connection Settings   ``ansible_connection: network_cli``
+
+    |enable_mode|         not supported by NETVISOR
+
+    Returned Data Format  ``stdout[0].``
+    ====================  ==========================================
+
+.. |enable_mode| replace:: Enable Mode |br| (Privilege Escalation)
 
 Pluribus NETVISOR does not support ``ansible_connection: local``. You must use ``ansible_connection: network_cli``.
 
diff --git a/docs/docsite/rst/network/user_guide/platform_nos.rst b/docs/docsite/rst/network/user_guide/platform_nos.rst
index 623204a642..f1b56b2523 100644
--- a/docs/docsite/rst/network/user_guide/platform_nos.rst
+++ b/docs/docsite/rst/network/user_guide/platform_nos.rst
@@ -12,27 +12,29 @@ This page offers details on how to use ``network_cli`` on NOS in Ansible.
 Connections Available
 ================================================================================
 
-+---------------------------+-----------------------------------------------+
-|..                         | CLI                                           |
-+===========================+===============================================+
-| **Protocol**              |  SSH                                          |
-+---------------------------+-----------------------------------------------+
-| | **Credentials**         | | uses SSH keys / SSH-agent if present        |
-| |                         | | accepts ``-u myuser -k`` if using password  |
-+---------------------------+-----------------------------------------------+
-| **Indirect Access**       | via a bastion (jump host)                     |
-+---------------------------+-----------------------------------------------+
-| | **Connection Settings** | | ``ansible_connection: network_cli``         |
-| |                         | |                                             |
-| |                         | |                                             |
-| |                         | |                                             |
-| |                         | |                                             |
-+---------------------------+-----------------------------------------------+
-| | **Enable Mode**         | | not supported by NOS                        |
-| | (Privilege Escalation)  | |                                             |
-+---------------------------+-----------------------------------------------+
-| **Returned Data Format**  | ``stdout[0].``                                |
-+---------------------------+-----------------------------------------------+
+.. table::
+    :widths: auto
+    :class: documentation-table
+
+    ====================  ==========================================
+    ..                    CLI
+    ====================  ==========================================
+    Protocol              SSH
+
+    Credentials           uses SSH keys / SSH-agent if present
+
+                          accepts ``-u myuser -k`` if using password
+
+    Indirect Access       via a bastion (jump host)
+
+    Connection Settings   ``ansible_connection: network_cli``
+
+    |enable_mode|         not supported by NOS
+
+    Returned Data Format  ``stdout[0].``
+    ====================  ==========================================
+
+.. |enable_mode| replace:: Enable Mode |br| (Privilege Escalation)
 
 NOS does not support ``ansible_connection: local``. You must use ``ansible_connection: network_cli``.
 
diff --git a/docs/docsite/rst/network/user_guide/platform_nxos.rst b/docs/docsite/rst/network/user_guide/platform_nxos.rst
index fbf8fa01fc..4e9fca4708 100644
--- a/docs/docsite/rst/network/user_guide/platform_nxos.rst
+++ b/docs/docsite/rst/network/user_guide/platform_nxos.rst
@@ -11,29 +11,38 @@ Cisco NXOS supports multiple connections. This page offers details on how each c
 Connections Available
 ================================================================================
 
-+---------------------------+-----------------------------------------------+-----------------------------------------+
-|..                         | CLI                                           | NX-API                                  |
-+===========================+===============================================+=========================================+
-| **Protocol**              |  SSH                                          | HTTP(S)                                 |
-+---------------------------+-----------------------------------------------+-----------------------------------------+
-| | **Credentials**         | | uses SSH keys / SSH-agent if present        | | uses HTTPS certificates if present    |
-| |                         | | accepts ``-u myuser -k`` if using password  | |                                       |
-+---------------------------+-----------------------------------------------+-----------------------------------------+
-| **Indirect Access**       | via a bastion (jump host)                     | via a web proxy                         |
-+---------------------------+-----------------------------------------------+-----------------------------------------+
-| | **Connection Settings** | | ``ansible_connection: network_cli``         | | * ``ansible_connection: httpapi``     |
-| |                         | |                                             | | OR                                    |
-| |                         | |                                             | |                                       |
-| |                         | |                                             | | * ``ansible_connection: local``       |
-| |                         | |                                             | |    with ``transport: nxapi``          |
-| |                         | |                                             | |    in the ``provider`` dictionary     |
-+---------------------------+-----------------------------------------------+-----------------------------------------+
-| | **Enable Mode**         | | supported - use ``ansible_become: yes``     | | not supported by NX-API               |
-| | (Privilege Escalation)  | | with ``ansible_become_method: enable``      | |                                       |
-| | supported as of 2.5.3   | | and ``ansible_become_password:``            | |                                       |
-+---------------------------+-----------------------------------------------+-----------------------------------------+
-| **Returned Data Format**  | ``stdout[0].``                                | ``stdout[0].messages[0].``              |
-+---------------------------+-----------------------------------------------+-----------------------------------------+
+.. table::
+    :widths: auto
+    :class: documentation-table
+
+    ====================  ==========================================  =========================
+    ..                    CLI                                         NX-API
+    ====================  ==========================================  =========================
+    Protocol              SSH                                         HTTP(S)
+
+    Credentials           uses SSH keys / SSH-agent if present        uses HTTPS certificates if
+                                                                      present
+                          accepts ``-u myuser -k`` if using password
+
+    Indirect Access       via a bastion (jump host)                   via a web proxy
+
+    Connection Settings   ``ansible_connection: network_cli``         ``ansible_connection: httpapi``
+
+                                                                      OR
+
+                                                                      ``ansible_connection: local``
+                                                                      with ``transport: nxapi``
+                                                                      in the ``provider`` dictionary
+
+    |enable_mode|         supported: use ``ansible_become: yes``      not supported by NX-API
+                          with ``ansible_become_method: enable``
+                          and ``ansible_become_password:``
+
+    Returned Data Format  ``stdout[0].``                              ``stdout[0].messages[0].``
+    ====================  ==========================================  =========================
+
+.. |enable_mode| replace:: Enable Mode |br| (Privilege Escalation) |br| supported as of 2.5.3
+
 
 For legacy playbooks, NXOS still supports ``ansible_connection: local``. We recommend modernizing to use ``ansible_connection: network_cli`` or ``ansible_connection: httpapi`` as soon as possible.
 
diff --git a/docs/docsite/rst/network/user_guide/platform_routeros.rst b/docs/docsite/rst/network/user_guide/platform_routeros.rst
index 2377d560af..be741be2b8 100644
--- a/docs/docsite/rst/network/user_guide/platform_routeros.rst
+++ b/docs/docsite/rst/network/user_guide/platform_routeros.rst
@@ -9,25 +9,30 @@ RouterOS Platform Options
 Connections Available
 ================================================================================
 
-+---------------------------+-----------------------------------------------+
-|..                         | CLI                                           |
-+===========================+===============================================+
-| **Protocol**              |  SSH                                          |
-+---------------------------+-----------------------------------------------+
-| | **Credentials**         | | uses SSH keys / SSH-agent if present        |
-| |                         | | accepts ``-u myuser -k`` if using password  |
-+---------------------------+-----------------------------------------------+
-| **Indirect Access**       | via a bastion (jump host)                     |
-+---------------------------+-----------------------------------------------+
-| | **Connection Settings** | | ``ansible_connection: network_cli``         |
-| |                         | |                                             |
-| |                         | |                                             |
-+---------------------------+-----------------------------------------------+
-| | **Enable Mode**         | | not supported by RouterOS                   |
-| | (Privilege Escalation)  | |                                             |
-+---------------------------+-----------------------------------------------+
-| **Returned Data Format**  | ``stdout[0].``                                |
-+---------------------------+-----------------------------------------------+
+.. table::
+    :widths: auto
+    :class: documentation-table
+
+    ====================  ==========================================
+    ..                    CLI
+    ====================  ==========================================
+    Protocol              SSH
+
+    Credentials           uses SSH keys / SSH-agent if present
+
+                          accepts ``-u myuser -k`` if using password
+
+    Indirect Access       via a bastion (jump host)
+
+    Connection Settings   ``ansible_connection: network_cli``
+
+    |enable_mode|         not supported by RouterOS
+
+    Returned Data Format  ``stdout[0].``
+    ====================  ==========================================
+
+.. |enable_mode| replace:: Enable Mode |br| (Privilege Escalation)
+
 
 Using CLI in Ansible
 ====================
diff --git a/docs/docsite/rst/network/user_guide/platform_slxos.rst b/docs/docsite/rst/network/user_guide/platform_slxos.rst
index f114f79c36..d1633cc9cb 100644
--- a/docs/docsite/rst/network/user_guide/platform_slxos.rst
+++ b/docs/docsite/rst/network/user_guide/platform_slxos.rst
@@ -12,27 +12,30 @@ This page offers details on how to use ``network_cli`` on SLX-OS in Ansible.
 Connections Available
 ================================================================================
 
-+---------------------------+-----------------------------------------------+
-|..                         | CLI                                           |
-+===========================+===============================================+
-| **Protocol**              |  SSH                                          |
-+---------------------------+-----------------------------------------------+
-| | **Credentials**         | | uses SSH keys / SSH-agent if present        |
-| |                         | | accepts ``-u myuser -k`` if using password  |
-+---------------------------+-----------------------------------------------+
-| **Indirect Access**       | via a bastion (jump host)                     |
-+---------------------------+-----------------------------------------------+
-| | **Connection Settings** | | ``ansible_connection: network_cli``         |
-| |                         | |                                             |
-| |                         | |                                             |
-| |                         | |                                             |
-| |                         | |                                             |
-+---------------------------+-----------------------------------------------+
-| | **Enable Mode**         | | not supported by SLX-OS                     |
-| | (Privilege Escalation)  | |                                             |
-+---------------------------+-----------------------------------------------+
-| **Returned Data Format**  | ``stdout[0].``                                |
-+---------------------------+-----------------------------------------------+
+.. table::
+    :widths: auto
+    :class: documentation-table
+
+    ====================  ==========================================
+    ..                    CLI
+    ====================  ==========================================
+    Protocol              SSH
+
+    Credentials           uses SSH keys / SSH-agent if present
+
+                          accepts ``-u myuser -k`` if using password
+
+    Indirect Access       via a bastion (jump host)
+
+    Connection Settings   ``ansible_connection: network_cli``
+
+    |enable_mode|         not supported by SLX-OS
+
+    Returned Data Format  ``stdout[0].``
+    ====================  ==========================================
+
+.. |enable_mode| replace:: Enable Mode |br| (Privilege Escalation)
+
 
 SLX-OS does not support ``ansible_connection: local``. You must use ``ansible_connection: network_cli``.
 
diff --git a/docs/docsite/rst/network/user_guide/platform_voss.rst b/docs/docsite/rst/network/user_guide/platform_voss.rst
index 0deaed3067..559071ce49 100644
--- a/docs/docsite/rst/network/user_guide/platform_voss.rst
+++ b/docs/docsite/rst/network/user_guide/platform_voss.rst
@@ -12,27 +12,31 @@ use ``network_cli`` on VOSS in Ansible.
 Connections Available
 ================================================================================
 
-+---------------------------+-----------------------------------------------+
-|..                         | CLI                                           |
-+===========================+===============================================+
-| **Protocol**              |  SSH                                          |
-+---------------------------+-----------------------------------------------+
-| | **Credentials**         | | uses SSH keys / SSH-agent if present        |
-| |                         | | accepts ``-u myuser -k`` if using password  |
-+---------------------------+-----------------------------------------------+
-| **Indirect Access**       | via a bastion (jump host)                     |
-+---------------------------+-----------------------------------------------+
-| | **Connection Settings** | | ``ansible_connection: network_cli``         |
-| |                         | |                                             |
-| |                         | |                                             |
-| |                         | |                                             |
-| |                         | |                                             |
-+---------------------------+-----------------------------------------------+
-| | **Enable Mode**         | | supported - use ``ansible_become: yes``     |
-| | (Privilege Escalation)  | | with ``ansible_become_method: enable``      |
-+---------------------------+-----------------------------------------------+
-| **Returned Data Format**  | ``stdout[0].``                                |
-+---------------------------+-----------------------------------------------+
+.. table::
+    :widths: auto
+    :class: documentation-table
+
+    ====================  ==========================================
+    ..                    CLI
+    ====================  ==========================================
+    Protocol              SSH
+
+    Credentials           uses SSH keys / SSH-agent if present
+
+                          accepts ``-u myuser -k`` if using password
+
+    Indirect Access       via a bastion (jump host)
+
+    Connection Settings   ``ansible_connection: network_cli``
+
+    |enable_mode|         supported: use ``ansible_become: yes``
+                          with ``ansible_become_method: enable``
+
+    Returned Data Format  ``stdout[0].``
+    ====================  ==========================================
+
+.. |enable_mode| replace:: Enable Mode |br| (Privilege Escalation)
+
 
 VOSS does not support ``ansible_connection: local``. You must use ``ansible_connection: network_cli``.
 
