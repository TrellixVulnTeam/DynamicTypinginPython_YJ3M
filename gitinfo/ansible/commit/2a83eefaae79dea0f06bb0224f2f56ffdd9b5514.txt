commit 2a83eefaae79dea0f06bb0224f2f56ffdd9b5514
Author: Michael Scherer <misc@zarb.org>
Date:   Mon Oct 17 15:33:02 2016 +0200

    Make consul modules pass sanity test for python 3

diff --git a/lib/ansible/modules/extras/clustering/consul.py b/lib/ansible/modules/extras/clustering/consul.py
index b9cdfb09d8..a034e167fc 100644
--- a/lib/ansible/modules/extras/clustering/consul.py
+++ b/lib/ansible/modules/extras/clustering/consul.py
@@ -219,7 +219,7 @@ try:
     import consul
     from requests.exceptions import ConnectionError
     python_consul_installed = True
-except ImportError, e:
+except ImportError:
     python_consul_installed = False
 
 def register_with_consul(module):
@@ -560,10 +560,10 @@ def main():
 
     try:
         register_with_consul(module)
-    except ConnectionError, e:
+    except ConnectionError as e:
         module.fail_json(msg='Could not connect to consul agent at %s:%s, error was %s' % (
                             module.params.get('host'), module.params.get('port'), str(e)))
-    except Exception, e:
+    except Exception as e:
         module.fail_json(msg=str(e))
 
 # import module snippets
diff --git a/lib/ansible/modules/extras/clustering/consul_acl.py b/lib/ansible/modules/extras/clustering/consul_acl.py
index a30ba8ab4b..8e82beeae5 100644
--- a/lib/ansible/modules/extras/clustering/consul_acl.py
+++ b/lib/ansible/modules/extras/clustering/consul_acl.py
@@ -124,7 +124,7 @@ try:
     import consul
     from requests.exceptions import ConnectionError
     python_consul_installed = True
-except ImportError, e:
+except ImportError:
     python_consul_installed = False
 
 try:
@@ -180,11 +180,11 @@ def update_acl(module):
                 token = consul.acl.create(
                     name=name, type=token_type, rules=rules)
                 changed = True
-            except Exception, e:
+            except Exception as e:
                 module.fail_json(
                     msg="No token returned, check your managment key and that \
                          the host is in the acl datacenter %s" % e)
-    except Exception, e:
+    except Exception as e:
         module.fail_json(msg="Could not create/update acl %s" % e)
 
     module.exit_json(changed=changed,
@@ -216,7 +216,7 @@ def load_rules_for_token(module, consul_api, token):
                 for pattern, policy in rule_set[rule_type].iteritems():
                     rules.add_rule(rule_type, Rule(pattern, policy['policy']))
         return rules
-    except Exception, e:
+    except Exception as e:
         module.fail_json(
             msg="Could not load rule list from retrieved rule data %s, %s" % (
                     token, e))
@@ -351,10 +351,10 @@ def main():
 
     try:
         execute(module)
-    except ConnectionError, e:
+    except ConnectionError as e:
         module.fail_json(msg='Could not connect to consul agent at %s:%s, error was %s' % (
                             module.params.get('host'), module.params.get('port'), str(e)))
-    except Exception, e:
+    except Exception as e:
         module.fail_json(msg=str(e))
 
 # import module snippets
diff --git a/lib/ansible/modules/extras/clustering/consul_kv.py b/lib/ansible/modules/extras/clustering/consul_kv.py
index 8163cbd986..9abdfff093 100644
--- a/lib/ansible/modules/extras/clustering/consul_kv.py
+++ b/lib/ansible/modules/extras/clustering/consul_kv.py
@@ -145,7 +145,7 @@ try:
     import consul
     from requests.exceptions import ConnectionError
     python_consul_installed = True
-except ImportError, e:
+except ImportError:
     python_consul_installed = False
 
 from requests.exceptions import ConnectionError
@@ -276,10 +276,10 @@ def main():
         
     try:
         execute(module)
-    except ConnectionError, e:
+    except ConnectionError as e:
         module.fail_json(msg='Could not connect to consul agent at %s:%s, error was %s' % (
                             module.params.get('host'), module.params.get('port'), str(e)))
-    except Exception, e:
+    except Exception as e:
         module.fail_json(msg=str(e))
 
 
diff --git a/lib/ansible/modules/extras/clustering/consul_session.py b/lib/ansible/modules/extras/clustering/consul_session.py
index 4d73356139..7b9c4bbbb9 100644
--- a/lib/ansible/modules/extras/clustering/consul_session.py
+++ b/lib/ansible/modules/extras/clustering/consul_session.py
@@ -137,7 +137,7 @@ try:
     import consul
     from requests.exceptions import ConnectionError
     python_consul_installed = True
-except ImportError, e:
+except ImportError:
     python_consul_installed = False
 
 def execute(module):
@@ -185,7 +185,7 @@ def lookup_sessions(module):
                              session_id=session_id,
                              sessions=session_by_id)
 
-    except Exception, e:
+    except Exception as e:
         module.fail_json(msg="Could not retrieve session info %s" % e)
 
 
@@ -216,7 +216,7 @@ def update_session(module):
                          delay=delay,
                          checks=checks,
                          node=node)
-    except Exception, e:
+    except Exception as e:
         module.fail_json(msg="Could not create/update session %s" % e)
 
 
@@ -233,7 +233,7 @@ def remove_session(module):
 
         module.exit_json(changed=True,
                          session_id=session_id)
-    except Exception, e:
+    except Exception as e:
         module.fail_json(msg="Could not remove session with id '%s' %s" % (
                          session_id, e))
 
@@ -270,10 +270,10 @@ def main():
 
     try:
         execute(module)
-    except ConnectionError, e:
+    except ConnectionError as e:
         module.fail_json(msg='Could not connect to consul agent at %s:%s, error was %s' % (
                             module.params.get('host'), module.params.get('port'), str(e)))
-    except Exception, e:
+    except Exception as e:
         module.fail_json(msg=str(e))
 
 # import module snippets
diff --git a/lib/ansible/modules/extras/test/utils/shippable/sanity-skip-python3.txt b/lib/ansible/modules/extras/test/utils/shippable/sanity-skip-python3.txt
index a15dd20926..795d92d4b8 100644
--- a/lib/ansible/modules/extras/test/utils/shippable/sanity-skip-python3.txt
+++ b/lib/ansible/modules/extras/test/utils/shippable/sanity-skip-python3.txt
@@ -35,10 +35,6 @@
 /cloud/misc/virt_pool.py
 /cloud/profitbricks/profitbricks.py
 /cloud/profitbricks/profitbricks_volume.py
-/clustering/consul.py
-/clustering/consul_acl.py
-/clustering/consul_kv.py
-/clustering/consul_session.py
 /database/mysql/mysql_replication.py
 /database/vertica/vertica_configuration.py
 /database/vertica/vertica_facts.py
