commit cfeef81303b6c9e197b48783c49376f989f67e18
Author: Toshio Kuratomi <a.badger@gmail.com>
Date:   Thu Dec 3 14:15:37 2015 -0800

    For now, skip tests of module_utils/basic functions that are failing on
    py3 (these are only run on the target hosts, not on the controller).

diff --git a/test/units/module_utils/basic/test_heuristic_log_sanitize.py b/test/units/module_utils/basic/test_heuristic_log_sanitize.py
index 51a5c11adf..14ffff0d74 100644
--- a/test/units/module_utils/basic/test_heuristic_log_sanitize.py
+++ b/test/units/module_utils/basic/test_heuristic_log_sanitize.py
@@ -85,6 +85,7 @@ class TestHeuristicLogSanitize(unittest.TestCase):
         self.assertTrue(ssh_output.endswith("}"))
         self.assertIn(":********@foo.com/data'", ssh_output)
 
+    @unittest.skipIf(sys.version_info[0] >= 3, "Python 3 is not supported on targets (yet)")
     def test_hides_parameter_secrets(self):
         output = heuristic_log_sanitize('token="secret", user="person", token_entry="test=secret"', frozenset(['secret']))
         self.assertNotIn('secret', output)
diff --git a/test/units/module_utils/basic/test_no_log.py b/test/units/module_utils/basic/test_no_log.py
index 3cb5d7b64b..102b7a3ab2 100644
--- a/test/units/module_utils/basic/test_no_log.py
+++ b/test/units/module_utils/basic/test_no_log.py
@@ -50,6 +50,7 @@ class TestReturnValues(unittest.TestCase):
             ('Toshio くらとみ', frozenset(['Toshio くらとみ'])),
         )
 
+    @unittest.skipIf(sys.version_info[0] >= 3, "Python 3 is not supported on targets (yet)")
     def test_return_values(self):
         for data, expected in self.dataset:
             self.assertEquals(frozenset(return_values(data)), expected)
@@ -102,10 +103,12 @@ class TestRemoveValues(unittest.TestCase):
             (u'Toshio くらとみ', frozenset(['くらとみ']), u'Toshio ********'),
             )
 
+    @unittest.skipIf(sys.version_info[0] >= 3, "Python 3 is not supported on targets (yet)")
     def test_no_removal(self):
         for value, no_log_strings in self.dataset_no_remove:
             self.assertEquals(remove_values(value, no_log_strings), value)
 
+    @unittest.skipIf(sys.version_info[0] >= 3, "Python 3 is not supported on targets (yet)")
     def test_strings_to_remove(self):
         for value, no_log_strings, expected in self.dataset_remove:
             self.assertEquals(remove_values(value, no_log_strings), expected)
