commit 2401154fc418a2215c820fc21a50a6937b98930d
Author: Gon√©ri Le Bouder <goneri@lebouder.net>
Date:   Sun Jun 30 10:00:43 2019 -0400

    VMware: rename VMWare to VMware (#58535)
    
    Follow the nomenclature convention decided in https://github.com/ansible/ansible/pull/56814

diff --git a/contrib/inventory/vmware_inventory.ini b/contrib/inventory/vmware_inventory.ini
index bdffd4c2b9..f94570f891 100644
--- a/contrib/inventory/vmware_inventory.ini
+++ b/contrib/inventory/vmware_inventory.ini
@@ -48,7 +48,7 @@ password=vmware
 #skip_keys = declaredalarmstate,disabledmethod,dynamicproperty,dynamictype,environmentbrowser,managedby,parent,childtype,resourceconfig
 
 
-# Host alias for objects in the inventory. VMWare allows duplicate VM names
+# Host alias for objects in the inventory. VMware allows duplicate VM names
 # so they can not be considered unique. Use this setting to alter the alias
 # returned for the hosts. Any atributes for the guest can be used to build
 # this alias. The default combines the config name and the config uuid and
diff --git a/docs/docsite/rst/scenario_guides/vmware_scenarios/scenario_clone_template.rst b/docs/docsite/rst/scenario_guides/vmware_scenarios/scenario_clone_template.rst
index 2c3fb9e1e7..2c7647ef81 100644
--- a/docs/docsite/rst/scenario_guides/vmware_scenarios/scenario_clone_template.rst
+++ b/docs/docsite/rst/scenario_guides/vmware_scenarios/scenario_clone_template.rst
@@ -73,7 +73,7 @@ Caveats
 
 - Hosts in the ESXi cluster must have access to the datastore that the template resides on.
 - Multiple templates with the same name will cause module failures.
-- In order to utilize Guest Customization, VMWare Tools must be installed on the template. For Linux, the ``open-vm-tools`` package is recommended, and it requires that ``Perl`` be installed.
+- In order to utilize Guest Customization, VMware Tools must be installed on the template. For Linux, the ``open-vm-tools`` package is recommended, and it requires that ``Perl`` be installed.
 
 
 Example Description
diff --git a/lib/ansible/modules/cloud/cloudstack/cs_iso.py b/lib/ansible/modules/cloud/cloudstack/cs_iso.py
index 3f3d76b9d8..76cd9ff0dd 100644
--- a/lib/ansible/modules/cloud/cloudstack/cs_iso.py
+++ b/lib/ansible/modules/cloud/cloudstack/cs_iso.py
@@ -53,7 +53,7 @@ options:
     type: bool
   is_dynamically_scalable:
     description:
-      - Register the ISO having XS/VMWare tools installed inorder to support dynamic scaling of VM cpu/memory. Only used if I(state) is present.
+      - Register the ISO having XS/VMware tools installed inorder to support dynamic scaling of VM cpu/memory. Only used if I(state) is present.
     type: bool
   checksum:
     description:
diff --git a/lib/ansible/modules/cloud/cloudstack/cs_template.py b/lib/ansible/modules/cloud/cloudstack/cs_template.py
index 9e2ddf75a2..961c54d027 100644
--- a/lib/ansible/modules/cloud/cloudstack/cs_template.py
+++ b/lib/ansible/modules/cloud/cloudstack/cs_template.py
@@ -68,7 +68,7 @@ options:
     type: bool
   is_dynamically_scalable:
     description:
-      - Register the template having XS/VMWare tools installed in order to support dynamic scaling of VM CPU/memory.
+      - Register the template having XS/VMware tools installed in order to support dynamic scaling of VM CPU/memory.
       - Only used if I(state) is C(present).
     type: bool
   cross_zones:
diff --git a/lib/ansible/modules/cloud/vmware/vmware_cluster_facts.py b/lib/ansible/modules/cloud/vmware/vmware_cluster_facts.py
index a74a2b9c9c..82fbfdb15d 100644
--- a/lib/ansible/modules/cloud/vmware/vmware_cluster_facts.py
+++ b/lib/ansible/modules/cloud/vmware/vmware_cluster_facts.py
@@ -18,7 +18,7 @@ DOCUMENTATION = '''
 module: vmware_cluster_facts
 short_description: Gather facts about clusters available in given vCenter
 description:
-    - This module can be used to gather facts about clusters in VMWare infrastructure.
+    - This module can be used to gather facts about clusters in VMware infrastructure.
     - All values and VMware object names are case sensitive.
 version_added: '2.6'
 author:
diff --git a/lib/ansible/modules/cloud/vmware/vmware_datastore_facts.py b/lib/ansible/modules/cloud/vmware/vmware_datastore_facts.py
index 0bec3fa9a5..ec7087b71f 100644
--- a/lib/ansible/modules/cloud/vmware/vmware_datastore_facts.py
+++ b/lib/ansible/modules/cloud/vmware/vmware_datastore_facts.py
@@ -19,7 +19,7 @@ DOCUMENTATION = '''
 module: vmware_datastore_facts
 short_description: Gather facts about datastores available in given vCenter
 description:
-    - This module can be used to gather facts about datastores in VMWare infrastructure.
+    - This module can be used to gather facts about datastores in VMware infrastructure.
     - All values and VMware object names are case sensitive.
 version_added: 2.5
 author:
diff --git a/lib/ansible/modules/cloud/vmware/vmware_guest.py b/lib/ansible/modules/cloud/vmware/vmware_guest.py
index f65a633882..5fa3d1d539 100644
--- a/lib/ansible/modules/cloud/vmware/vmware_guest.py
+++ b/lib/ansible/modules/cloud/vmware/vmware_guest.py
@@ -84,7 +84,7 @@ options:
     - Please note that a supplied UUID will be ignored on virtual machine creation, as VMware creates the UUID internally.
   use_instance_uuid:
     description:
-    - Whether to use the VMWare instance UUID rather than the BIOS UUID.
+    - Whether to use the VMware instance UUID rather than the BIOS UUID.
     default: no
     type: bool
     version_added: '2.8'
@@ -598,7 +598,7 @@ from ansible.module_utils.vmware import (find_obj, gather_vm_facts, get_all_objs
 
 
 class PyVmomiDeviceHelper(object):
-    """ This class is a helper to create easily VMWare Objects for PyVmomiHelper """
+    """ This class is a helper to create easily VMware Objects for PyVmomiHelper """
 
     def __init__(self, module):
         self.module = module
@@ -1333,7 +1333,7 @@ class PyVmomiHelper(PyVmomi):
                                               "The failing new MAC address is %s" % nic.device.macAddress)
 
             else:
-                # Default device type is vmxnet3, VMWare best practice
+                # Default device type is vmxnet3, VMware best practice
                 device_type = network_devices[key].get('device_type', 'vmxnet3')
                 nic = self.device_helper.create_nic(device_type,
                                                     'Network Adapter %s' % (key + 1),
@@ -1872,7 +1872,7 @@ class PyVmomiHelper(PyVmomi):
                 pass
 
             kb = self.get_configured_disk_size(expected_disk_spec)
-            # VMWare doesn't allow to reduce disk sizes
+            # VMware doesn't allow to reduce disk sizes
             if kb < diskspec.device.capacityInKB:
                 self.module.fail_json(
                     msg="Given disk size is smaller than found (%d < %d). Reducing disks is not allowed." %
@@ -2383,7 +2383,7 @@ class PyVmomiHelper(PyVmomi):
                 if task.info.state == 'error':
                     return {'changed': self.change_applied, 'failed': True, 'msg': task.info.error.msg, 'op': 'relocate'}
 
-        # Only send VMWare task if we see a modification
+        # Only send VMware task if we see a modification
         if self.change_detected:
             task = None
             try:
@@ -2441,7 +2441,7 @@ class PyVmomiHelper(PyVmomi):
                 self.module.fail_json(msg="Failed to convert template to virtual machine"
                                           " due to generic error : %s" % to_native(generic_exc))
 
-            # Automatically update VMWare UUID when converting template to VM.
+            # Automatically update VMware UUID when converting template to VM.
             # This avoids an interactive prompt during VM startup.
             uuid_action = [x for x in self.current_vm_obj.config.extraConfig if x.key == "uuid.action"]
             if not uuid_action:
diff --git a/lib/ansible/modules/cloud/vmware/vmware_guest_boot_facts.py b/lib/ansible/modules/cloud/vmware/vmware_guest_boot_facts.py
index d99f49f793..d4f8b9892b 100644
--- a/lib/ansible/modules/cloud/vmware/vmware_guest_boot_facts.py
+++ b/lib/ansible/modules/cloud/vmware/vmware_guest_boot_facts.py
@@ -40,7 +40,7 @@ options:
      - This is required if C(name) parameter is not supplied.
    use_instance_uuid:
      description:
-     - Whether to use the VMWare instance UUID rather than the BIOS UUID.
+     - Whether to use the VMware instance UUID rather than the BIOS UUID.
      default: no
      type: bool
      version_added: '2.8'
diff --git a/lib/ansible/modules/cloud/vmware/vmware_guest_boot_manager.py b/lib/ansible/modules/cloud/vmware/vmware_guest_boot_manager.py
index 5717e2515f..51d51bec09 100644
--- a/lib/ansible/modules/cloud/vmware/vmware_guest_boot_manager.py
+++ b/lib/ansible/modules/cloud/vmware/vmware_guest_boot_manager.py
@@ -40,7 +40,7 @@ options:
      - This is required if C(name) parameter is not supplied.
    use_instance_uuid:
      description:
-     - Whether to use the VMWare instance UUID rather than the BIOS UUID.
+     - Whether to use the VMware instance UUID rather than the BIOS UUID.
      default: no
      type: bool
      version_added: '2.8'
diff --git a/lib/ansible/modules/cloud/vmware/vmware_guest_custom_attribute_defs.py b/lib/ansible/modules/cloud/vmware/vmware_guest_custom_attribute_defs.py
index 9953bcfadf..478179bae5 100644
--- a/lib/ansible/modules/cloud/vmware/vmware_guest_custom_attribute_defs.py
+++ b/lib/ansible/modules/cloud/vmware/vmware_guest_custom_attribute_defs.py
@@ -18,9 +18,9 @@ ANSIBLE_METADATA = {
 DOCUMENTATION = '''
 ---
 module: vmware_guest_custom_attribute_defs
-short_description: Manage custom attributes definitions for virtual machine from VMWare
+short_description: Manage custom attributes definitions for virtual machine from VMware
 description:
-    - This module can be used to add and remove custom attributes definitions for the given virtual machine from VMWare.
+    - This module can be used to add and remove custom attributes definitions for the given virtual machine from VMware.
 version_added: 2.7
 author:
     - Jimmy Conner (@cigamit)
@@ -50,7 +50,7 @@ extends_documentation_fragment: vmware.documentation
 '''
 
 EXAMPLES = '''
-- name: Add VMWare Attribute Definition
+- name: Add VMware Attribute Definition
   vmware_guest_custom_attribute_defs:
     hostname: "{{ vcenter_hostname }}"
     username: "{{ vcenter_username }}"
@@ -60,7 +60,7 @@ EXAMPLES = '''
   delegate_to: localhost
   register: defs
 
-- name: Remove VMWare Attribute Definition
+- name: Remove VMware Attribute Definition
   vmware_guest_custom_attribute_defs:
     hostname: "{{ vcenter_hostname }}"
     username: "{{ vcenter_username }}"
diff --git a/lib/ansible/modules/cloud/vmware/vmware_guest_custom_attributes.py b/lib/ansible/modules/cloud/vmware/vmware_guest_custom_attributes.py
index d0cc50e498..3fa24ae03b 100644
--- a/lib/ansible/modules/cloud/vmware/vmware_guest_custom_attributes.py
+++ b/lib/ansible/modules/cloud/vmware/vmware_guest_custom_attributes.py
@@ -20,7 +20,7 @@ ANSIBLE_METADATA = {
 DOCUMENTATION = '''
 ---
 module: vmware_guest_custom_attributes
-short_description: Manage custom attributes from VMWare for the given virtual machine
+short_description: Manage custom attributes from VMware for the given virtual machine
 description:
     - This module can be used to add, remove and update custom attributes for the given virtual machine.
 version_added: 2.7
@@ -50,7 +50,7 @@ options:
      - This is required parameter, if C(name) is not supplied.
    use_instance_uuid:
      description:
-     - Whether to use the VMWare instance UUID rather than the BIOS UUID.
+     - Whether to use the VMware instance UUID rather than the BIOS UUID.
      default: no
      type: bool
      version_added: '2.8'
diff --git a/lib/ansible/modules/cloud/vmware/vmware_guest_disk.py b/lib/ansible/modules/cloud/vmware/vmware_guest_disk.py
index d76eb6f970..6ce800189b 100644
--- a/lib/ansible/modules/cloud/vmware/vmware_guest_disk.py
+++ b/lib/ansible/modules/cloud/vmware/vmware_guest_disk.py
@@ -62,7 +62,7 @@ options:
      required: True
    use_instance_uuid:
      description:
-     - Whether to use the VMWare instance UUID rather than the BIOS UUID.
+     - Whether to use the VMware instance UUID rather than the BIOS UUID.
      default: no
      type: bool
      version_added: '2.8'
diff --git a/lib/ansible/modules/cloud/vmware/vmware_guest_disk_facts.py b/lib/ansible/modules/cloud/vmware/vmware_guest_disk_facts.py
index d7872f81f6..b4507186c2 100644
--- a/lib/ansible/modules/cloud/vmware/vmware_guest_disk_facts.py
+++ b/lib/ansible/modules/cloud/vmware/vmware_guest_disk_facts.py
@@ -43,7 +43,7 @@ options:
      - This is required parameter, if parameter C(name) is not supplied.
    use_instance_uuid:
      description:
-     - Whether to use the VMWare instance UUID rather than the BIOS UUID.
+     - Whether to use the VMware instance UUID rather than the BIOS UUID.
      default: no
      type: bool
      version_added: '2.8'
diff --git a/lib/ansible/modules/cloud/vmware/vmware_guest_facts.py b/lib/ansible/modules/cloud/vmware/vmware_guest_facts.py
index 64a266e4f7..055c557599 100644
--- a/lib/ansible/modules/cloud/vmware/vmware_guest_facts.py
+++ b/lib/ansible/modules/cloud/vmware/vmware_guest_facts.py
@@ -46,7 +46,7 @@ options:
      - This is required if name is not supplied.
    use_instance_uuid:
      description:
-     - Whether to use the VMWare instance UUID rather than the BIOS UUID.
+     - Whether to use the VMware instance UUID rather than the BIOS UUID.
      default: no
      type: bool
      version_added: '2.8'
diff --git a/lib/ansible/modules/cloud/vmware/vmware_guest_find.py b/lib/ansible/modules/cloud/vmware/vmware_guest_find.py
index 9a33bcbe65..4098527855 100644
--- a/lib/ansible/modules/cloud/vmware/vmware_guest_find.py
+++ b/lib/ansible/modules/cloud/vmware/vmware_guest_find.py
@@ -38,7 +38,7 @@ options:
      - This is required if C(name) parameter is not supplied.
    use_instance_uuid:
      description:
-     - Whether to use the VMWare instance UUID rather than the BIOS UUID.
+     - Whether to use the VMware instance UUID rather than the BIOS UUID.
      default: no
      type: bool
      version_added: '2.8'
diff --git a/lib/ansible/modules/cloud/vmware/vmware_guest_move.py b/lib/ansible/modules/cloud/vmware/vmware_guest_move.py
index 8c3d40fa1f..5eb908b0da 100644
--- a/lib/ansible/modules/cloud/vmware/vmware_guest_move.py
+++ b/lib/ansible/modules/cloud/vmware/vmware_guest_move.py
@@ -39,7 +39,7 @@ options:
             - This is required if C(name) is not supplied.
    use_instance_uuid:
         description:
-            - Whether to use the VMWare instance UUID rather than the BIOS UUID.
+            - Whether to use the VMware instance UUID rather than the BIOS UUID.
         default: no
         type: bool
         version_added: '2.8'
diff --git a/lib/ansible/modules/cloud/vmware/vmware_guest_powerstate.py b/lib/ansible/modules/cloud/vmware/vmware_guest_powerstate.py
index a7f7f48e29..4c5ce21e0d 100644
--- a/lib/ansible/modules/cloud/vmware/vmware_guest_powerstate.py
+++ b/lib/ansible/modules/cloud/vmware/vmware_guest_powerstate.py
@@ -44,7 +44,7 @@ options:
     - This is required if name is not supplied.
   use_instance_uuid:
     description:
-    - Whether to use the VMWare instance UUID rather than the BIOS UUID.
+    - Whether to use the VMware instance UUID rather than the BIOS UUID.
     default: no
     type: bool
     version_added: '2.8'
diff --git a/lib/ansible/modules/cloud/vmware/vmware_guest_snapshot.py b/lib/ansible/modules/cloud/vmware/vmware_guest_snapshot.py
index f1ab82e1e6..4d47a5417a 100644
--- a/lib/ansible/modules/cloud/vmware/vmware_guest_snapshot.py
+++ b/lib/ansible/modules/cloud/vmware/vmware_guest_snapshot.py
@@ -56,7 +56,7 @@ options:
      - This is required if C(name) parameter is not supplied.
    use_instance_uuid:
      description:
-     - Whether to use the VMWare instance UUID rather than the BIOS UUID.
+     - Whether to use the VMware instance UUID rather than the BIOS UUID.
      default: no
      type: bool
      version_added: '2.8'
@@ -92,7 +92,7 @@ options:
    quiesce:
      description:
      - If set to C(true) and virtual machine is powered on, it will quiesce the file system in virtual machine.
-     - Note that VMWare Tools are required for this flag.
+     - Note that VMware Tools are required for this flag.
      - If virtual machine is powered off or VMware Tools are not available, then this flag is set to C(false).
      - If virtual machine does not provide capability to take quiesce snapshot, then this flag is set to C(false).
      required: False
diff --git a/lib/ansible/modules/cloud/vmware/vmware_guest_snapshot_facts.py b/lib/ansible/modules/cloud/vmware/vmware_guest_snapshot_facts.py
index 8a2fe7e1cb..957b161377 100644
--- a/lib/ansible/modules/cloud/vmware/vmware_guest_snapshot_facts.py
+++ b/lib/ansible/modules/cloud/vmware/vmware_guest_snapshot_facts.py
@@ -40,7 +40,7 @@ options:
      - The C(folder) is ignored, if C(uuid) is provided.
    use_instance_uuid:
      description:
-     - Whether to use the VMWare instance UUID rather than the BIOS UUID.
+     - Whether to use the VMware instance UUID rather than the BIOS UUID.
      default: no
      type: bool
      version_added: '2.8'
diff --git a/lib/ansible/modules/cloud/vmware/vmware_guest_tools_upgrade.py b/lib/ansible/modules/cloud/vmware/vmware_guest_tools_upgrade.py
index 1c86ea5c58..34c627ebd5 100644
--- a/lib/ansible/modules/cloud/vmware/vmware_guest_tools_upgrade.py
+++ b/lib/ansible/modules/cloud/vmware/vmware_guest_tools_upgrade.py
@@ -20,7 +20,7 @@ module: vmware_guest_tools_upgrade
 short_description: Module to upgrade VMTools
 version_added: 2.8
 description:
-    - This module upgrades the VMWare Tools on Windows and Linux guests.
+    - This module upgrades the VMware Tools on Windows and Linux guests.
 requirements:
     - "python >= 2.6"
     - PyVmomi
@@ -66,7 +66,7 @@ author:
 '''
 
 EXAMPLES = '''
-- name: Upgrade VMWare Tools
+- name: Upgrade VMware Tools
   vmware_guest_tools_upgrade:
     hostname: "{{ vcenter_hostname }}"
     username: "{{ vcenter_username }}"
@@ -134,7 +134,7 @@ class PyVmomiHelper(PyVmomi):
         else:
             result.update(
                 failed=True,
-                msg="VMWare tools could not be upgraded",
+                msg="VMware tools could not be upgraded",
             )
             return result
 
diff --git a/lib/ansible/modules/cloud/vmware/vmware_guest_tools_wait.py b/lib/ansible/modules/cloud/vmware/vmware_guest_tools_wait.py
index c8eb199a1e..81212959a3 100644
--- a/lib/ansible/modules/cloud/vmware/vmware_guest_tools_wait.py
+++ b/lib/ansible/modules/cloud/vmware/vmware_guest_tools_wait.py
@@ -58,7 +58,7 @@ options:
      - This is required, if C(name) is not supplied.
    use_instance_uuid:
      description:
-     - Whether to use the VMWare instance UUID rather than the BIOS UUID.
+     - Whether to use the VMware instance UUID rather than the BIOS UUID.
      default: no
      type: bool
      version_added: '2.8'
diff --git a/lib/ansible/modules/cloud/vmware/vmware_vm_shell.py b/lib/ansible/modules/cloud/vmware/vmware_vm_shell.py
index 43392d6125..3831d0210c 100644
--- a/lib/ansible/modules/cloud/vmware/vmware_vm_shell.py
+++ b/lib/ansible/modules/cloud/vmware/vmware_vm_shell.py
@@ -238,7 +238,7 @@ class VMwareShellManager(PyVmomi):
 
         tools_status = vm.guest.toolsStatus
         if tools_status in ['toolsNotInstalled', 'toolsNotRunning']:
-            self.module.fail_json(msg="VMWareTools is not installed or is not running in the guest."
+            self.module.fail_json(msg="VMwareTools is not installed or is not running in the guest."
                                       " VMware Tools are necessary to run this module.")
 
         try:
diff --git a/lib/ansible/modules/cloud/vmware/vmware_vmotion.py b/lib/ansible/modules/cloud/vmware/vmware_vmotion.py
index 433dd4a276..6f5ef2d540 100644
--- a/lib/ansible/modules/cloud/vmware/vmware_vmotion.py
+++ b/lib/ansible/modules/cloud/vmware/vmware_vmotion.py
@@ -49,7 +49,7 @@ options:
       version_added: 2.7
     use_instance_uuid:
       description:
-      - Whether to use the VMWare instance UUID rather than the BIOS UUID.
+      - Whether to use the VMware instance UUID rather than the BIOS UUID.
       default: no
       type: bool
       version_added: '2.8'
diff --git a/lib/ansible/modules/cloud/vmware/vmware_vswitch.py b/lib/ansible/modules/cloud/vmware/vmware_vswitch.py
index fd73db88a9..180c681017 100644
--- a/lib/ansible/modules/cloud/vmware/vmware_vswitch.py
+++ b/lib/ansible/modules/cloud/vmware/vmware_vswitch.py
@@ -77,7 +77,7 @@ EXAMPLES = '''
     mtu: 9000
   delegate_to: localhost
 
-- name: Add a VMWare vSwitch without any physical NIC attached
+- name: Add a VMware vSwitch without any physical NIC attached
   vmware_vswitch:
     hostname: '{{ esxi_hostname }}'
     username: '{{ esxi_username }}'
@@ -86,7 +86,7 @@ EXAMPLES = '''
     mtu: 9000
   delegate_to: localhost
 
-- name: Add a VMWare vSwitch with multiple NICs
+- name: Add a VMware vSwitch with multiple NICs
   vmware_vswitch:
     hostname: '{{ esxi_hostname }}'
     username: '{{ esxi_username }}'
diff --git a/lib/ansible/modules/cloud/vmware/vsphere_copy.py b/lib/ansible/modules/cloud/vmware/vsphere_copy.py
index 487ba1d668..d3c42bdb69 100644
--- a/lib/ansible/modules/cloud/vmware/vsphere_copy.py
+++ b/lib/ansible/modules/cloud/vmware/vsphere_copy.py
@@ -19,7 +19,7 @@ DOCUMENTATION = '''
 module: vsphere_copy
 short_description: Copy a file to a VMware datastore
 description:
-    - Upload files to a VMware datastore through a VCenter REST API.
+    - Upload files to a VMware datastore through a vCenter REST API.
 version_added: 2.0
 author:
 - Dag Wieers (@dagwieers)
diff --git a/lib/ansible/modules/network/avi/avi_cloud.py b/lib/ansible/modules/network/avi/avi_cloud.py
index ea1cc83c3c..e1d971c646 100644
--- a/lib/ansible/modules/network/avi/avi_cloud.py
+++ b/lib/ansible/modules/network/avi/avi_cloud.py
@@ -200,7 +200,7 @@ extends_documentation_fragment:
 '''
 
 EXAMPLES = """
-  - name: Create a VMWare cloud with write access mode
+  - name: Create a VMware cloud with write access mode
     avi_cloud:
       username: '{{ username }}'
       controller: '{{ controller }}'
@@ -210,7 +210,7 @@ EXAMPLES = """
       enable_vip_static_routes: false
       license_type: LIC_CORES
       mtu: 1500
-      name: VCenter Cloud
+      name: vCenter Cloud
       prefer_static_routes: false
       tenant_ref: admin
       vcenter_configuration:
diff --git a/test/integration/targets/tower_credential/tasks/main.yml b/test/integration/targets/tower_credential/tasks/main.yml
index 231b561816..407255699c 100644
--- a/test/integration/targets/tower_credential/tasks/main.yml
+++ b/test/integration/targets/tower_credential/tasks/main.yml
@@ -265,9 +265,9 @@
     that:
       - "result is changed"
 
-- name: Create a valid VMWare credential
+- name: Create a valid VMware credential
   tower_credential:
-    name: VMWare Credential
+    name: VMware Credential
     organization: Default
     state: present
     kind: vmware
@@ -280,9 +280,9 @@
     that:
       - "result is changed"
 
-- name: Delete an VMWare credential
+- name: Delete an VMware credential
   tower_credential:
-    name: VMWare Credential
+    name: VMware Credential
     organization: Default
     state: absent
     kind: vmware
diff --git a/test/runner/lib/cloud/vcenter.py b/test/runner/lib/cloud/vcenter.py
index 855cc09b83..b25c65e435 100644
--- a/test/runner/lib/cloud/vcenter.py
+++ b/test/runner/lib/cloud/vcenter.py
@@ -53,7 +53,7 @@ class VcenterProvider(CloudProvider):
             self.image = 'quay.io/ansible/vcenter-test-container:1.5.0'
         self.container_name = ''
 
-        # VMWare tests can be run on govcsim or baremetal, either BYO with a static config
+        # VMware tests can be run on govcsim or baremetal, either BYO with a static config
         # file or hosted in worldstream.  Using an env var value of 'worldstream' with appropriate
         # CI credentials will deploy a dynamic baremetal environment. The simulator is the default
         # if no other config if provided.
@@ -226,7 +226,7 @@ class VcenterProvider(CloudProvider):
         self._wait_for_service()
 
     def _wait_for_service(self):
-        """Wait for the VCenter service endpoint to accept connections."""
+        """Wait for the vCenter service endpoint to accept connections."""
         if self.args.explain:
             return
 
@@ -234,7 +234,7 @@ class VcenterProvider(CloudProvider):
         endpoint = 'https://%s:%s' % (self.endpoint, self.port)
 
         for i in range(1, 30):
-            display.info('Waiting for VCenter service: %s' % endpoint, verbosity=1)
+            display.info('Waiting for vCenter service: %s' % endpoint, verbosity=1)
 
             try:
                 client.get(endpoint)
@@ -244,7 +244,7 @@ class VcenterProvider(CloudProvider):
 
             time.sleep(10)
 
-        raise ApplicationError('Timeout waiting for VCenter service.')
+        raise ApplicationError('Timeout waiting for vCenter service.')
 
 
 class VcenterEnvironment(CloudEnvironment):
