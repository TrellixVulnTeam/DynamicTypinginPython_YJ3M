commit 6dad717a9a8bdd973f69103dee5dd69c987b63f7
Author: Ganesh Nalawade <ganesh634@gmail.com>
Date:   Tue Jan 2 18:54:06 2018 +0530

    Add eos_lldp module (#34302)
    
    * Add eos_lldp module
    
    *  Implementation for eos_lldp module
    *  eos_lldp integration test
    
    * Fix minor issue
    
    * Minor change

diff --git a/lib/ansible/modules/network/eos/eos_l3_interface.py b/lib/ansible/modules/network/eos/eos_l3_interface.py
index 68cfcb9073..b5d2302b59 100644
--- a/lib/ansible/modules/network/eos/eos_l3_interface.py
+++ b/lib/ansible/modules/network/eos/eos_l3_interface.py
@@ -17,7 +17,7 @@ DOCUMENTATION = """
 module: eos_l3_interface
 version_added: "2.5"
 author: "Ganesh Nalawade (@ganeshrn)"
-short_description: Manage L3 interfaces on Arist EOS network devices.
+short_description: Manage L3 interfaces on Arista EOS network devices.
 description:
   - This module provides declarative management of L3 interfaces
     on Arist EOS network devices.
diff --git a/lib/ansible/modules/network/eos/eos_lldp.py b/lib/ansible/modules/network/eos/eos_lldp.py
new file mode 100644
index 0000000000..150a3a0b40
--- /dev/null
+++ b/lib/ansible/modules/network/eos/eos_lldp.py
@@ -0,0 +1,112 @@
+#!/usr/bin/python
+# -*- coding: utf-8 -*-
+
+# (c) 2017, Ansible by Red Hat, inc
+# GNU General Public License v3.0+ (see COPYING or https://www.gnu.org/licenses/gpl-3.0.txt)
+
+from __future__ import absolute_import, division, print_function
+__metaclass__ = type
+
+
+ANSIBLE_METADATA = {'metadata_version': '1.1',
+                    'status': ['preview'],
+                    'supported_by': 'network'}
+
+
+DOCUMENTATION = """
+---
+module: eos_lldp
+version_added: "2.5"
+author: "Ganesh Nalawade (@ganeshrn)"
+short_description: Manage LLDP configuration on Arista EOS network devices
+description:
+  - This module provides declarative management of LLDP service
+    on Arista EOS network devices.
+notes:
+  - Tested against EOS 4.15
+options:
+  state:
+    description:
+      - State of the LLDP configuration. If value is I(present) lldp will be enabled
+        else if it is I(absent) it will be disabled.
+    default: present
+    choices: ['present', 'absent']
+"""
+
+EXAMPLES = """
+- name: Enable LLDP service
+  eos_lldp:
+    state: present
+
+- name: Disable LLDP service
+  eos_lldp:
+    state: absent
+"""
+
+RETURN = """
+commands:
+  description: The list of configuration mode commands to send to the device
+  returned: always, except for the platforms that use Netconf transport to manage the device.
+  type: list
+  sample:
+    - lldp run
+"""
+from ansible.module_utils.basic import AnsibleModule
+from ansible.module_utils.network.eos.eos import get_config, load_config, run_commands
+from ansible.module_utils.network.eos.eos import eos_argument_spec
+
+
+def has_lldp(module):
+    output = run_commands(module, ['show lldp'])
+
+    is_lldp_enable = False
+    if len(output) > 0 and "LLDP is not enabled" not in output[0]:
+        is_lldp_enable = True
+
+    return is_lldp_enable
+
+
+def main():
+    """ main entry point for module execution
+    """
+    argument_spec = dict(
+        state=dict(default='present',
+                   choices=['present', 'absent',
+                            'enabled', 'disabled'])
+    )
+
+    argument_spec.update(eos_argument_spec)
+
+    module = AnsibleModule(argument_spec=argument_spec,
+                           supports_check_mode=True)
+
+    warnings = list()
+
+    result = {'changed': False}
+
+    if warnings:
+        result['warnings'] = warnings
+
+    HAS_LLDP = has_lldp(module)
+
+    commands = []
+
+    if module.params['state'] == 'absent' and HAS_LLDP:
+        commands.append('no lldp run')
+    elif module.params['state'] == 'present' and not HAS_LLDP:
+        commands.append('lldp run')
+
+    result['commands'] = commands
+
+    if commands:
+        commit = not module.check_mode
+        response = load_config(module, commands, commit=commit)
+        if response.get('diff') and module._diff:
+            result['diff'] = {'prepared': response.get('diff')}
+        result['session_name'] = response.get('session')
+        result['changed'] = True
+
+    module.exit_json(**result)
+
+if __name__ == '__main__':
+    main()
diff --git a/test/integration/eos.yaml b/test/integration/eos.yaml
index 4ea390719e..3b9385e237 100644
--- a/test/integration/eos.yaml
+++ b/test/integration/eos.yaml
@@ -139,6 +139,15 @@
         - set_fact:
             failed_modules: "{{ failed_modules }} + [ 'eos_interface' ]"
             test_failed: true
+
+    - block:
+      - include_role:
+          name: eos_lldp
+        when: "limit_to in ['*', 'eos_lldp']"
+      rescue:
+        - set_fact:
+            failed_modules: "{{ failed_modules }} + [ 'eos_lldp' ]"
+            test_failed: true
 ###########
     - debug: var=failed_modules
       when: test_failed
diff --git a/test/integration/targets/eos_lldp/defaults/main.yaml b/test/integration/targets/eos_lldp/defaults/main.yaml
new file mode 100644
index 0000000000..9ef5ba5165
--- /dev/null
+++ b/test/integration/targets/eos_lldp/defaults/main.yaml
@@ -0,0 +1,3 @@
+---
+testcase: "*"
+test_items: []
diff --git a/test/integration/targets/eos_lldp/meta/main.yaml b/test/integration/targets/eos_lldp/meta/main.yaml
new file mode 100644
index 0000000000..e5c8cd02f0
--- /dev/null
+++ b/test/integration/targets/eos_lldp/meta/main.yaml
@@ -0,0 +1,2 @@
+dependencies:
+  - prepare_eos_tests
diff --git a/test/integration/targets/eos_lldp/tasks/cli.yaml b/test/integration/targets/eos_lldp/tasks/cli.yaml
new file mode 100644
index 0000000000..a6f7ae0351
--- /dev/null
+++ b/test/integration/targets/eos_lldp/tasks/cli.yaml
@@ -0,0 +1,22 @@
+---
+- name: collect all cli test cases
+  find:
+    paths: "{{ role_path }}/tests/cli"
+    patterns: "{{ testcase }}.yaml"
+  register: test_cases
+  delegate_to: localhost
+
+- name: set test_items
+  set_fact: test_items="{{ test_cases.files | map(attribute='path') | list }}"
+
+- name: run test cases (connection=network_cli)
+  include: "{{ test_case_to_run }} ansible_connection=network_cli"
+  with_items: "{{ test_items }}"
+  loop_control:
+    loop_var: test_case_to_run
+
+- name: run test case (connection=local)
+  include: "{{ test_case_to_run }} ansible_connection=local ansible_become=no"
+  with_first_found: "{{ test_items }}"
+  loop_control:
+    loop_var: test_case_to_run
diff --git a/test/integration/targets/eos_lldp/tasks/eapi.yaml b/test/integration/targets/eos_lldp/tasks/eapi.yaml
new file mode 100644
index 0000000000..bda1df677a
--- /dev/null
+++ b/test/integration/targets/eos_lldp/tasks/eapi.yaml
@@ -0,0 +1,16 @@
+---
+- name: collect all eapi test cases
+  find:
+    paths: "{{ role_path }}/tests/eapi"
+    patterns: "{{ testcase }}.yaml"
+  delegate_to: localhost
+  register: test_cases
+
+- name: set test_items
+  set_fact: test_items="{{ test_cases.files | map(attribute='path') | list }}"
+
+- name: run test case (connection=local)
+  include: "{{ test_case_to_run }} ansible_connection=local"
+  with_items: "{{ test_items }}"
+  loop_control:
+    loop_var: test_case_to_run
diff --git a/test/integration/targets/eos_lldp/tasks/main.yaml b/test/integration/targets/eos_lldp/tasks/main.yaml
new file mode 100644
index 0000000000..415c99d8b1
--- /dev/null
+++ b/test/integration/targets/eos_lldp/tasks/main.yaml
@@ -0,0 +1,2 @@
+---
+- { include: cli.yaml, tags: ['cli'] }
diff --git a/test/integration/targets/eos_lldp/tests/cli/basic.yaml b/test/integration/targets/eos_lldp/tests/cli/basic.yaml
new file mode 100644
index 0000000000..a1312a4e3a
--- /dev/null
+++ b/test/integration/targets/eos_lldp/tests/cli/basic.yaml
@@ -0,0 +1,56 @@
+---
+- debug: msg="START eos_lldp cli/basic.yaml on connection={{ ansible_connection }}"
+
+- name: Make sure LLDP is not running before tests
+  eos_config:
+    lines: no lldp run
+    authorize: yes
+    provider: "{{ cli }}"
+
+- name: Enable LLDP service
+  eos_lldp:
+    state: present
+    authorize: yes
+    provider: "{{ cli }}"
+  register: result
+
+- assert:
+    that:
+      - 'result.changed == true'
+      - '"lldp run" in result.commands'
+
+- name: Enable LLDP service again (idempotent)
+  eos_lldp:
+    state: present
+    authorize: yes
+    provider: "{{ cli }}"
+  register: result
+
+- assert:
+    that:
+      - 'result.changed == false'
+
+- name: Disable LLDP service
+  eos_lldp:
+    state: absent
+    authorize: yes
+    provider: "{{ cli }}"
+  register: result
+
+- assert:
+    that:
+      - 'result.changed == true'
+      - '"no lldp run" in result.commands'
+
+- name: Disable LLDP service (idempotent)
+  eos_lldp:
+    state: absent
+    authorize: yes
+    provider: "{{ cli }}"
+  register: result
+
+- assert:
+    that:
+      - 'result.changed == false'
+
+- debug: msg="END eos_lldp cli/basic.yaml on connection={{ ansible_connection }}"
diff --git a/test/integration/targets/eos_lldp/tests/eapi/basic.yaml b/test/integration/targets/eos_lldp/tests/eapi/basic.yaml
new file mode 100644
index 0000000000..9e7eb56d1b
--- /dev/null
+++ b/test/integration/targets/eos_lldp/tests/eapi/basic.yaml
@@ -0,0 +1,56 @@
+---
+- debug: msg="START eos_lldp eapi/basic.yaml on connection={{ ansible_connection }}"
+
+- name: Make sure LLDP is not running before tests
+  eos_config:
+    lines: no lldp run
+    authorize: yes
+    provider: "{{ eapi }}"
+
+- name: Enable LLDP service
+  eos_lldp:
+    state: present
+    authorize: yes
+    provider: "{{ eapi }}"
+  register: result
+
+- assert:
+    that:
+      - 'result.changed == true'
+      - '"lldp run" in result.commands'
+
+- name: Enable LLDP service again (idempotent)
+  eos_lldp:
+    state: present
+    authorize: yes
+    provider: "{{ eapi }}"
+  register: result
+
+- assert:
+    that:
+      - 'result.changed == false'
+
+- name: Disable LLDP service
+  eos_lldp:
+    state: absent
+    authorize: yes
+    provider: "{{ eapi }}"
+  register: result
+
+- assert:
+    that:
+      - 'result.changed == true'
+      - '"no lldp run" in result.commands'
+
+- name: Disable LLDP service (idempotent)
+  eos_lldp:
+    state: absent
+    authorize: yes
+    provider: "{{ eapi }}"
+  register: result
+
+- assert:
+    that:
+      - 'result.changed == false'
+
+- debug: msg="END eos_lldp eapi/basic.yaml on connection={{ ansible_connection }}"
