commit fd3fb24fe8667bfc33b9c7f63cc32d113d5a5b72
Author: Michael DeHaan <michael.dehaan@gmail.com>
Date:   Wed Oct 2 22:02:11 2013 -0400

    Environment doc cleanup and showing another use case.

diff --git a/docsite/latest/rst/playbooks_delegation.rst b/docsite/latest/rst/playbooks_delegation.rst
index de29e08f21..f91ac64409 100644
--- a/docsite/latest/rst/playbooks_delegation.rst
+++ b/docsite/latest/rst/playbooks_delegation.rst
@@ -1,8 +1,17 @@
 Delegation, Rolling Updates, and Local Actions
 ==============================================
 
-Ansible is great at doing things on one host on behalf of another, and in particular this is very applicable
-when setting up continuous deployment infrastructure or zero downtime rolling updates.
+Being designed for multi-tier deployments since the beginning, Ansible is great at doing things on one host on behalf of another, or doing
+local steps with reference to some remote hosts.
+
+This in particular this is very applicable when setting up continuous deployment infrastructure or zero downtime rolling updates, where you
+might be talking with load balancers or monitoring systems.
+
+Additional features allow for tuning the orders in which things complete, and assigning a batch window size for how many machines to process
+at once during a rolling update.
+
+This section covers all fo these features.  For examples of these items in use, please see the 'ansible-examples' repository in
+the 'ansible' github organization.  
 
 Rolling Update Batch Size
 `````````````````````````
diff --git a/docsite/latest/rst/playbooks_environment.rst b/docsite/latest/rst/playbooks_environment.rst
index 2cb77bad3b..7d676d5df5 100644
--- a/docsite/latest/rst/playbooks_environment.rst
+++ b/docsite/latest/rst/playbooks_environment.rst
@@ -4,8 +4,11 @@ Setting the Environment (and Working With Proxies)
 .. versionadded:: 1.1
 
 It is quite possible that you may need to get package updates through a proxy, or even get some package
-updates through a proxy and access other packages not through a proxy.  Ansible makes it easy for you
-to configure your environment by using the 'environment' keyword.  Here is an example::
+updates through a proxy and access other packages not through a proxy.  
+
+Occasionally a script you might wish to call may also need certain environment variables set.
+
+Ansible makes it easy for you to configure your environment by using the 'environment' keyword.  Here is an example::
 
     - hosts: all
       remote_user: root
@@ -29,7 +32,7 @@ The environment can also be stored in a variable, and accessed like so::
       tasks:
 
         - apt: name=cobbler state=installed
-          environment: "{{ proxy_env }}"
+          environment: proxy_env
 
 While just proxy settings were shown above, any number of settings can be supplied.  The most logical place
 to define an environment hash might be a group_vars file, like so::
