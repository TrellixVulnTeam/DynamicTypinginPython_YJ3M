commit 486889bbbdc7ca77a5775cf9830395c6a1aece3a
Author: Dag Wieers <dag@wieers.com>
Date:   Wed Feb 20 13:08:04 2013 +0100

    Add force= and make thirsty= an alias for backward compatibility

diff --git a/library/copy b/library/copy
index 80695a3e33..1fc450e384 100644
--- a/library/copy
+++ b/library/copy
@@ -48,7 +48,7 @@ options:
     required: false
     choices: [ "yes", "no" ]
     default: "no"
-  thirsty:
+  force:
     description:
       - the default is C(yes), which will replace the remote file when contents
         are different than the source.  If C(no), the file will only be transferred
@@ -57,6 +57,7 @@ options:
     required: false
     choices: [ "yes", "no" ]
     default: "yes"
+    aliases: [ "thirsty" ]
   others:
   others:
     description:
@@ -78,7 +79,7 @@ def main():
             src=dict(required=True),
             dest=dict(required=True),
             backup=dict(default=False, choices=BOOLEANS),
-            thirsty = dict(default='yes', choices=BOOLEANS),
+            force = dict(default='yes', choices=BOOLEANS, aliases=['thirsty']),
         ),
         add_file_common_args=True,
     )
@@ -86,7 +87,7 @@ def main():
     src  = os.path.expanduser(module.params['src'])
     dest = os.path.expanduser(module.params['dest'])
     backup = module.boolean(module.params.get('backup', False))
-    thirsty = module.boolean(module.params['thirsty'])
+    force = module.boolean(module.params['force'])
 
     if not os.path.exists(src):
         module.fail_json(msg="Source %s failed to transfer" % (src))
@@ -97,7 +98,7 @@ def main():
     md5sum_dest = None
 
     if os.path.exists(dest):
-        if not thirsty:
+        if not force:
             module.exit_json(msg="file already exists", src=src, dest=dest, changed=False)
         if (os.path.isdir(dest)):
             basename = os.path.basename(src)
diff --git a/library/get_url b/library/get_url
index a28656291e..2c657c84c7 100644
--- a/library/get_url
+++ b/library/get_url
@@ -42,10 +42,10 @@ options:
   dest:
     description:
       - absolute path of where to download the file to.
-      - If I(dest) is a directory, the basename of the file on the remote server will be used. If a directory, C(thirsty=yes) must also be set.
+      - If I(dest) is a directory, the basename of the file on the remote server will be used. If a directory, C(force=yes) must also be set.
     required: true
     default: null
-  thirsty:
+  force:
     description:
       - if C(yes), will download the file every time and replace the
         file if the contents change. If C(no), the file will only be downloaded if
@@ -55,6 +55,7 @@ options:
     required: false
     choices: [ "yes", "no" ]
     default: "no"
+    aliases: [ "thirsty" ]
   others:
     description:
       - all arguments accepted by the M(file) module also work here
@@ -192,19 +193,19 @@ def main():
         argument_spec = dict(
             url = dict(required=True),
             dest = dict(required=True),
-            thirsty = dict(default='no', choices=BOOLEANS)
+            force = dict(default='no', choices=BOOLEANS, aliases=['thirsty'])
         ),
         add_file_common_args=True
     )
 
     url  = module.params['url']
     dest = os.path.expanduser(module.params['dest'])
-    thirsty = module.boolean(module.params['thirsty'])
+    force = module.boolean(module.params['force'])
 
     if os.path.isdir(dest):
         dest = os.path.join(dest, url_filename(url))
 
-    if not thirsty:
+    if not force:
         if os.path.exists(dest):
             module.exit_json(msg="file already exists", dest=dest, url=url, changed=False)
 
