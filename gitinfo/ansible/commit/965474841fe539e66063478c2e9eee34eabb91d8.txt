commit 965474841fe539e66063478c2e9eee34eabb91d8
Author: Mads Jensen <mads.jensen@eficode.com>
Date:   Sun Dec 8 14:36:33 2019 +0100

    Use a context manager in docker.ImageManager. (#65609)
    
    Co-Authored-By: Felix Fontein <felix@fontein.de>

diff --git a/changelogs/fragments/65609-docker-context-manager.yml b/changelogs/fragments/65609-docker-context-manager.yml
new file mode 100644
index 0000000000..2ba458b442
--- /dev/null
+++ b/changelogs/fragments/65609-docker-context-manager.yml
@@ -0,0 +1,2 @@
+bugfixes:
+  - docker_image - improve file handling when loading images from disk.
diff --git a/lib/ansible/modules/cloud/docker/docker_image.py b/lib/ansible/modules/cloud/docker/docker_image.py
index f8cfa6e8b2..1cb42adc9c 100644
--- a/lib/ansible/modules/cloud/docker/docker_image.py
+++ b/lib/ansible/modules/cloud/docker/docker_image.py
@@ -426,6 +426,7 @@ image:
     sample: {}
 '''
 
+import errno
 import os
 import re
 import traceback
@@ -787,20 +788,15 @@ class ImageManager(DockerBaseClass):
         '''
         try:
             self.log("Opening image %s" % self.load_path)
-            image_tar = open(self.load_path, 'rb')
-        except Exception as exc:
-            self.fail("Error opening image %s - %s" % (self.load_path, str(exc)))
-
-        try:
-            self.log("Loading image from %s" % self.load_path)
-            self.client.load_image(image_tar)
-        except Exception as exc:
+            with open(self.load_path, 'rb') as image_tar:
+                self.log("Loading image from %s" % self.load_path)
+                self.client.load_image(image_tar)
+        except EnvironmentError as exc:
+            if exc.errno == errno.ENOENT:
+                self.fail("Error opening image %s - %s" % (self.load_path, str(exc)))
             self.fail("Error loading image %s - %s" % (self.name, str(exc)))
-
-        try:
-            image_tar.close()
         except Exception as exc:
-            self.fail("Error closing image %s - %s" % (self.name, str(exc)))
+            self.fail("Error loading image %s - %s" % (self.name, str(exc)))
 
         return self.client.find_image(self.name, self.tag)
 
