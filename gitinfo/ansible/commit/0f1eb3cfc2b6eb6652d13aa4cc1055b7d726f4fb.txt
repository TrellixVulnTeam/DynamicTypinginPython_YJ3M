commit 0f1eb3cfc2b6eb6652d13aa4cc1055b7d726f4fb
Author: James Cammarata <jimi@sngx.net>
Date:   Thu May 7 23:56:33 2015 -0500

    Better fix for serializing/deserializing cache plugins (v2)

diff --git a/lib/ansible/plugins/cache/base.py b/lib/ansible/plugins/cache/base.py
index 1f85aa6174..767964b281 100644
--- a/lib/ansible/plugins/cache/base.py
+++ b/lib/ansible/plugins/cache/base.py
@@ -26,9 +26,6 @@ from six import add_metaclass
 @add_metaclass(ABCMeta)
 class BaseCacheModule:
 
-    def __init__(self):
-        self.__getstate__ = self.copy
-
     @abstractmethod
     def get(self, key):
         pass
diff --git a/lib/ansible/plugins/cache/memcached.py b/lib/ansible/plugins/cache/memcached.py
index 519ca776e0..a34855bafc 100644
--- a/lib/ansible/plugins/cache/memcached.py
+++ b/lib/ansible/plugins/cache/memcached.py
@@ -113,8 +113,6 @@ class CacheModuleKeys(collections.MutableSet):
         self._cache = cache
         self._keyset = dict(*args, **kwargs)
 
-        super(CacheModule, self).__init__()
-
     def __contains__(self, key):
         return key in self._keyset
 
@@ -193,3 +191,9 @@ class CacheModule(BaseCacheModule):
 
     def copy(self):
         return self._keys.copy()
+
+    def __getstate__(self):
+        return dict()
+
+    def __setstate__(self, data):
+        self.__init__()
diff --git a/lib/ansible/plugins/cache/memory.py b/lib/ansible/plugins/cache/memory.py
index 19591a40cf..417ef20e0e 100644
--- a/lib/ansible/plugins/cache/memory.py
+++ b/lib/ansible/plugins/cache/memory.py
@@ -24,8 +24,6 @@ class CacheModule(BaseCacheModule):
     def __init__(self, *args, **kwargs):
         self._cache = {}
 
-        super(CacheModule, self).__init__()
-
     def get(self, key):
         return self._cache.get(key)
 
@@ -46,3 +44,9 @@ class CacheModule(BaseCacheModule):
 
     def copy(self):
         return self._cache.copy()
+
+    def __getstate__(self):
+        return self.copy()
+
+    def __setstate__(self, data):
+        self._cache = data
diff --git a/lib/ansible/plugins/cache/redis.py b/lib/ansible/plugins/cache/redis.py
index b7a624520a..6c97f3eab8 100644
--- a/lib/ansible/plugins/cache/redis.py
+++ b/lib/ansible/plugins/cache/redis.py
@@ -51,8 +51,6 @@ class CacheModule(BaseCacheModule):
         self._cache = StrictRedis(*connection)
         self._keys_set = 'ansible_cache_keys'
 
-        super(CacheModule, self).__init__()
-
     def _make_key(self, key):
         return self._prefix + key
 
@@ -103,3 +101,8 @@ class CacheModule(BaseCacheModule):
             ret[key] = self.get(key)
         return ret
 
+    def __getstate__(self):
+        return dict()
+
+    def __setstate__(self, data):
+        self.__init__()
