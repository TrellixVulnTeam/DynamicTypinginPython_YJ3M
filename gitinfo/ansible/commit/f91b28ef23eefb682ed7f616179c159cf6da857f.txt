commit f91b28ef23eefb682ed7f616179c159cf6da857f
Author: Marius Gedminas <marius@gedmin.as>
Date:   Fri Sep 11 09:41:05 2015 +0300

    Fix safe_eval() of set literals
    
    There was code to support set literals (on Python 2.7 and newer), but it
    was buggy: SAFE_NODES.union() doesn't modify SAFE_NODES in place,
    instead it returns a new set object that is then silently discarded.
    
    I added a unit test and fixed the code.  I also changed the version
    check to use sys.version_tuple instead of a string comparison, for
    consistency with the subsequent Python 3.4 version check that I added in
    the previous commit.

diff --git a/lib/ansible/template/safe_eval.py b/lib/ansible/template/safe_eval.py
index 8147dc575f..8e06512d12 100644
--- a/lib/ansible/template/safe_eval.py
+++ b/lib/ansible/template/safe_eval.py
@@ -67,8 +67,8 @@ def safe_eval(expr, locals={}, include_exceptions=False):
     )
 
     # AST node types were expanded after 2.6
-    if not sys.version.startswith('2.6'):
-        SAFE_NODES.union(
+    if sys.version_info[:2] >= (2, 7):
+        SAFE_NODES.update(
             set(
                 (ast.Set,)
             )
diff --git a/test/units/template/test_safe_eval.py b/test/units/template/test_safe_eval.py
index 610d471443..531244d15a 100644
--- a/test/units/template/test_safe_eval.py
+++ b/test/units/template/test_safe_eval.py
@@ -19,6 +19,7 @@
 from __future__ import (absolute_import, division, print_function)
 __metaclass__ = type
 
+import sys
 from collections import defaultdict
 
 from ansible.compat.tests import unittest
@@ -45,3 +46,6 @@ class TestSafeEval(unittest.TestCase):
             self.assertEqual(safe_eval('[]', locals=locals_vars), [])
             self.assertEqual(safe_eval('{}', locals=locals_vars), {})
 
+    @unittest.skipUnless(sys.version_info[:2] >= (2, 7), "Python 2.6 has no set literals")
+    def test_set_literals(self):
+        self.assertEqual(safe_eval('{0}'), set([0]))
