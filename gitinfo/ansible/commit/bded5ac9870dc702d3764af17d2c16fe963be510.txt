commit bded5ac9870dc702d3764af17d2c16fe963be510
Author: Will Thames <will@thames.id.au>
Date:   Tue Apr 4 22:34:49 2017 +1000

    [cloud] Support check_mode for ec2_vpc_subnet_facts (#23111)
    
    * Support check_mode for ec2_vpc_subnet_facts
    
    facts modules support check mode by default
    
    * ec2_vpc_subnet_facts pep8 tidy up

diff --git a/lib/ansible/modules/cloud/amazon/ec2_vpc_subnet_facts.py b/lib/ansible/modules/cloud/amazon/ec2_vpc_subnet_facts.py
index 3d07d96883..714b837df3 100644
--- a/lib/ansible/modules/cloud/amazon/ec2_vpc_subnet_facts.py
+++ b/lib/ansible/modules/cloud/amazon/ec2_vpc_subnet_facts.py
@@ -90,19 +90,19 @@ from ansible.module_utils.ec2 import AnsibleAWSError, connect_to_aws, ec2_argume
 
 def get_subnet_info(subnet):
 
-    subnet_info = { 'id': subnet.id,
-                    'availability_zone': subnet.availability_zone,
-                    'available_ip_address_count': subnet.available_ip_address_count,
-                    'cidr_block': subnet.cidr_block,
-                    'default_for_az': subnet.defaultForAz,
-                    'map_public_ip_on_launch': subnet.mapPublicIpOnLaunch,
-                    'state': subnet.state,
-                    'tags': subnet.tags,
-                    'vpc_id': subnet.vpc_id
-                  }
+    subnet_info = {'id': subnet.id,
+                   'availability_zone': subnet.availability_zone,
+                   'available_ip_address_count': subnet.available_ip_address_count,
+                   'cidr_block': subnet.cidr_block,
+                   'default_for_az': subnet.defaultForAz,
+                   'map_public_ip_on_launch': subnet.mapPublicIpOnLaunch,
+                   'state': subnet.state,
+                   'tags': subnet.tags,
+                   'vpc_id': subnet.vpc_id}
 
     return subnet_info
 
+
 def list_ec2_vpc_subnets(connection, module):
 
     filters = module.params.get("filters")
@@ -123,11 +123,12 @@ def main():
     argument_spec = ec2_argument_spec()
     argument_spec.update(
         dict(
-            filters = dict(default=None, type='dict')
+            filters=dict(default=None, type='dict')
         )
     )
 
-    module = AnsibleModule(argument_spec=argument_spec)
+    module = AnsibleModule(argument_spec=argument_spec,
+                           supports_check_mode=True)
 
     if not HAS_BOTO:
         module.fail_json(msg='boto required for this module')
diff --git a/test/sanity/pep8/legacy-files.txt b/test/sanity/pep8/legacy-files.txt
index 94086d3970..7d8b471653 100644
--- a/test/sanity/pep8/legacy-files.txt
+++ b/test/sanity/pep8/legacy-files.txt
@@ -183,7 +183,6 @@ lib/ansible/modules/cloud/amazon/ec2_vpc_net.py
 lib/ansible/modules/cloud/amazon/ec2_vpc_net_facts.py
 lib/ansible/modules/cloud/amazon/ec2_vpc_peer.py
 lib/ansible/modules/cloud/amazon/ec2_vpc_subnet.py
-lib/ansible/modules/cloud/amazon/ec2_vpc_subnet_facts.py
 lib/ansible/modules/cloud/amazon/ec2_vpc_vgw.py
 lib/ansible/modules/cloud/amazon/ec2_vpc_vgw_facts.py
 lib/ansible/modules/cloud/amazon/ec2_win_password.py
