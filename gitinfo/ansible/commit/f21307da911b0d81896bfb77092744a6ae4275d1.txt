commit f21307da911b0d81896bfb77092744a6ae4275d1
Author: Abhijeet Kasurde <akasurde@redhat.com>
Date:   Fri Jun 15 21:42:13 2018 +0530

    Add more info related to galaxy sub commands (#41085)
    
    Fixes: #17469
    
    Signed-off-by: Abhijeet Kasurde <akasurde@redhat.com>

diff --git a/lib/ansible/cli/galaxy.py b/lib/ansible/cli/galaxy.py
index d7da43d16f..7a2bde4f33 100644
--- a/lib/ansible/cli/galaxy.py
+++ b/lib/ansible/cli/galaxy.py
@@ -67,8 +67,10 @@ class GalaxyCLI(CLI):
         # specific to actions
         if self.action == "delete":
             self.parser.set_usage("usage: %prog delete [options] github_user github_repo")
+            self.parser.set_description("Removes the role from Galaxy. It does not remove or alter the actual GitHub repository.")
         elif self.action == "import":
             self.parser.set_usage("usage: %prog import [options] github_user github_repo")
+            self.parser.set_description("Import a role.")
             self.parser.add_option('--no-wait', dest='wait', action='store_false', default=True, help='Don\'t wait for import results.')
             self.parser.add_option('--branch', dest='reference',
                                    help='The name of a branch to import. Defaults to the repository\'s default branch (usually master)')
@@ -77,8 +79,10 @@ class GalaxyCLI(CLI):
                                    help='Check the status of the most recent import request for given github_user/github_repo.')
         elif self.action == "info":
             self.parser.set_usage("usage: %prog info [options] role_name[,version]")
+            self.parser.set_description("View more details about a specific role.")
         elif self.action == "init":
             self.parser.set_usage("usage: %prog init [options] role_name")
+            self.parser.set_description("Initialize new role with the base structure of a role.")
             self.parser.add_option('--init-path', dest='init_path', default="./",
                                    help='The path in which the skeleton role will be created. The default is the current working directory.')
             self.parser.add_option('--type', dest='role_type', action='store', default='default',
@@ -87,6 +91,7 @@ class GalaxyCLI(CLI):
                                    help='The path to a role skeleton that the new role should be based upon.')
         elif self.action == "install":
             self.parser.set_usage("usage: %prog install [options] [-r FILE | role_name(s)[,version] | scm+role_repo_url[,version] | tar_file(s)]")
+            self.parser.set_description("Install Roles from file(s), URL(s) or tar file(s)")
             self.parser.add_option('-i', '--ignore-errors', dest='ignore_errors', action='store_true', default=False,
                                    help='Ignore errors and continue with the next specified role.')
             self.parser.add_option('-n', '--no-deps', dest='no_deps', action='store_true', default=False, help='Don\'t download roles listed as dependencies')
@@ -95,10 +100,13 @@ class GalaxyCLI(CLI):
                                    default=False, help='Use tar instead of the scm archive option when packaging the role')
         elif self.action == "remove":
             self.parser.set_usage("usage: %prog remove role1 role2 ...")
+            self.parser.set_description("Delete a role from roles_path.")
         elif self.action == "list":
             self.parser.set_usage("usage: %prog list [role_name]")
+            self.parser.set_description("Show the name and version of each role installed in the roles_path.")
         elif self.action == "login":
             self.parser.set_usage("usage: %prog login [options]")
+            self.parser.set_description("Login to api.github.com server in order to use ansible-galaxy sub command such as 'import', 'delete' and 'setup'.")
             self.parser.add_option('--github-token', dest='token', default=None, help='Identify with github token rather than username and password.')
         elif self.action == "search":
             self.parser.set_usage("usage: %prog search [searchterm1 searchterm2] [--galaxy-tags galaxy_tag1,galaxy_tag2] [--platforms platform1,platform2] "
@@ -106,12 +114,13 @@ class GalaxyCLI(CLI):
             self.parser.add_option('--platforms', dest='platforms', help='list of OS platforms to filter by')
             self.parser.add_option('--galaxy-tags', dest='galaxy_tags', help='list of galaxy tags to filter by')
             self.parser.add_option('--author', dest='author', help='GitHub username')
+            self.parser.set_description("Search the Galaxy database by tags, platforms, author and multiple keywords.")
         elif self.action == "setup":
             self.parser.set_usage("usage: %prog setup [options] source github_user github_repo secret")
             self.parser.add_option('--remove', dest='remove_id', default=None,
                                    help='Remove the integration matching the provided ID value. Use --list to see ID values.')
             self.parser.add_option('--list', dest="setup_list", action='store_true', default=False, help='List all of your integrations.')
-
+            self.parser.set_description("Manage the integration between Galaxy and the given source.")
         # options that apply to more than one action
         if self.action in ['init', 'info']:
             self.parser.add_option('--offline', dest='offline', default=False, action='store_true', help="Don't query the galaxy API when creating roles")
@@ -130,7 +139,8 @@ class GalaxyCLI(CLI):
 
         self.parser = CLI.base_parser(
             usage="usage: %%prog [%s] [--help] [options] ..." % "|".join(self.VALID_ACTIONS),
-            epilog="\nSee '%s <command> --help' for more information on a specific command.\n\n" % os.path.basename(sys.argv[0])
+            epilog="\nSee '%s <command> --help' for more information on a specific command.\n\n" % os.path.basename(sys.argv[0]),
+            desc="Perform various Role related operations.",
         )
 
         # common
