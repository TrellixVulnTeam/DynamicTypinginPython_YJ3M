commit f1bf15bf63fce93c4bdfee709a44e48b525b6050
Author: Prasad Katti <prasadmkatti@gmail.com>
Date:   Mon Nov 18 15:05:46 2019 -0800

    cloudformation_info Move sample outputs from EXAMPLES to RETURN section (#64298)

diff --git a/lib/ansible/modules/cloud/amazon/cloudformation_info.py b/lib/ansible/modules/cloud/amazon/cloudformation_info.py
index 9f78bca6d8..b29d01f284 100644
--- a/lib/ansible/modules/cloud/amazon/cloudformation_info.py
+++ b/lib/ansible/modules/cloud/amazon/cloudformation_info.py
@@ -108,24 +108,6 @@ EXAMPLES = '''
     stack_name: nonexistent-stack
     all_facts: yes
   failed_when: cloudformation['nonexistent-stack'] is undefined
-
-# Example dictionary outputs for stack_outputs, stack_parameters and stack_resources:
-# "stack_outputs": {
-#     "ApplicationDatabaseName": "dazvlpr01xj55a.ap-southeast-2.rds.amazonaws.com",
-#     ...
-# },
-# "stack_parameters": {
-#     "DatabaseEngine": "mysql",
-#     "DatabasePassword": "****",
-#     ...
-# },
-# "stack_resources": {
-#     "AutoscalingGroup": "dev-someapp-AutoscalingGroup-1SKEXXBCAN0S7",
-#     "AutoscalingSecurityGroup": "sg-abcd1234",
-#     "ApplicationDatabase": "dazvlpr01xj55a",
-#     "EcsTaskDefinition": "arn:aws:ecs:ap-southeast-2:123456789:task-definition/dev-someapp-EcsTaskDefinition-1F2VM9QB0I7K9:1"
-#     ...
-# }
 '''
 
 RETURN = '''
@@ -138,11 +120,16 @@ stack_outputs:
                  output 'OutputValue' parameter
     returned: if the stack exists
     type: dict
+    sample:
+      ApplicationDatabaseName: dazvlpr01xj55a.ap-southeast-2.rds.amazonaws.com
 stack_parameters:
     description: Dictionary of stack parameters keyed by the value of each parameter 'ParameterKey' parameter and corresponding value of
                  each parameter 'ParameterValue' parameter
     returned: if the stack exists
     type: dict
+    sample:
+      DatabaseEngine: mysql
+      DatabasePassword: "***"
 stack_events:
     description: All stack events for the stack
     returned: only if all_facts or stack_events is true and the stack exists
@@ -164,6 +151,10 @@ stack_resources:
                  resource 'PhysicalResourceId' parameter
     returned: only if all_facts or stack_resourses is true and the stack exists
     type: dict
+    sample:
+      AutoScalingGroup: "dev-someapp-AutoscalingGroup-1SKEXXBCAN0S7"
+      AutoScalingSecurityGroup: "sg-abcd1234"
+      ApplicationDatabase: "dazvlpr01xj55a"
 '''
 
 import json
