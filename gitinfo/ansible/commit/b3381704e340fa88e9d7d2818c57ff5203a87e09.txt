commit b3381704e340fa88e9d7d2818c57ff5203a87e09
Author: Abhijeet Kasurde <akasurde@redhat.com>
Date:   Sun Mar 1 15:14:53 2020 +0530

    Misc documentation fixes (#67863)
    
    Signed-off-by: Abhijeet Kasurde <akasurde@redhat.com>

diff --git a/lib/ansible/module_utils/network/ios/config/interfaces/interfaces.py b/lib/ansible/module_utils/network/ios/config/interfaces/interfaces.py
index 59ac20c2d5..bcf817f4d8 100644
--- a/lib/ansible/module_utils/network/ios/config/interfaces/interfaces.py
+++ b/lib/ansible/module_utils/network/ios/config/interfaces/interfaces.py
@@ -172,7 +172,7 @@ class Interfaces(ConfigBase):
                 count += 1
             else:
                 # We didn't find a matching desired state, which means we can
-                # pretend we recieved an empty desired state.
+                # pretend we received an empty desired state.
                 interface = dict(name=each['name'])
                 commands.extend(self._clear_config(interface, each))
                 continue
diff --git a/lib/ansible/module_utils/network/ios/config/l2_interfaces/l2_interfaces.py b/lib/ansible/module_utils/network/ios/config/l2_interfaces/l2_interfaces.py
index 2e5e840b62..1ebfcbda58 100644
--- a/lib/ansible/module_utils/network/ios/config/l2_interfaces/l2_interfaces.py
+++ b/lib/ansible/module_utils/network/ios/config/l2_interfaces/l2_interfaces.py
@@ -156,7 +156,7 @@ class L2_Interfaces(ConfigBase):
                     break
             else:
                 # We didn't find a matching desired state, which means we can
-                # pretend we recieved an empty desired state.
+                # pretend we received an empty desired state.
                 interface = dict(name=each['name'])
                 kwargs = {'want': interface, 'have': each}
                 commands.extend(self._clear_config(**kwargs))
diff --git a/lib/ansible/module_utils/network/ios/config/l3_interfaces/l3_interfaces.py b/lib/ansible/module_utils/network/ios/config/l3_interfaces/l3_interfaces.py
index b436012a57..221f276ab2 100644
--- a/lib/ansible/module_utils/network/ios/config/l3_interfaces/l3_interfaces.py
+++ b/lib/ansible/module_utils/network/ios/config/l3_interfaces/l3_interfaces.py
@@ -148,7 +148,7 @@ class L3_Interfaces(ConfigBase):
                     break
             else:
                 # We didn't find a matching desired state, which means we can
-                # pretend we recieved an empty desired state.
+                # pretend we received an empty desired state.
                 interface = dict(name=each['name'])
                 kwargs = {'want': interface, 'have': each}
                 commands.extend(self._clear_config(**kwargs))
diff --git a/lib/ansible/module_utils/network/ios/config/lacp_interfaces/lacp_interfaces.py b/lib/ansible/module_utils/network/ios/config/lacp_interfaces/lacp_interfaces.py
index 209eef9d80..71ac96d0c3 100644
--- a/lib/ansible/module_utils/network/ios/config/lacp_interfaces/lacp_interfaces.py
+++ b/lib/ansible/module_utils/network/ios/config/lacp_interfaces/lacp_interfaces.py
@@ -159,7 +159,7 @@ class Lacp_Interfaces(ConfigBase):
                     break
             else:
                 # We didn't find a matching desired state, which means we can
-                # pretend we recieved an empty desired state.
+                # pretend we received an empty desired state.
                 interface = dict(name=each['name'])
                 commands.extend(self._clear_config(interface, each))
                 continue
diff --git a/lib/ansible/module_utils/network/ios/config/lldp_interfaces/lldp_interfaces.py b/lib/ansible/module_utils/network/ios/config/lldp_interfaces/lldp_interfaces.py
index c79667863c..57a6a3cd4c 100644
--- a/lib/ansible/module_utils/network/ios/config/lldp_interfaces/lldp_interfaces.py
+++ b/lib/ansible/module_utils/network/ios/config/lldp_interfaces/lldp_interfaces.py
@@ -157,7 +157,7 @@ class Lldp_Interfaces(ConfigBase):
                     break
             else:
                 # We didn't find a matching desired state, which means we can
-                # pretend we recieved an empty desired state.
+                # pretend we received an empty desired state.
                 interface = dict(name=each['name'])
                 commands.extend(self._clear_config(interface, each))
                 continue
diff --git a/lib/ansible/module_utils/network/ios/config/vlans/vlans.py b/lib/ansible/module_utils/network/ios/config/vlans/vlans.py
index 09191fc368..d77e298770 100644
--- a/lib/ansible/module_utils/network/ios/config/vlans/vlans.py
+++ b/lib/ansible/module_utils/network/ios/config/vlans/vlans.py
@@ -155,7 +155,7 @@ class Vlans(ConfigBase):
                 count += 1
             else:
                 # We didn't find a matching desired state, which means we can
-                # pretend we recieved an empty desired state.
+                # pretend we received an empty desired state.
                 commands.extend(self._clear_config(every, each, state))
                 continue
             commands.extend(self._set_config(every, each))
diff --git a/lib/ansible/module_utils/network/iosxr/config/interfaces/interfaces.py b/lib/ansible/module_utils/network/iosxr/config/interfaces/interfaces.py
index 171598ceb3..076ae017b7 100644
--- a/lib/ansible/module_utils/network/iosxr/config/interfaces/interfaces.py
+++ b/lib/ansible/module_utils/network/iosxr/config/interfaces/interfaces.py
@@ -155,7 +155,7 @@ class Interfaces(ConfigBase):
                     break
             else:
                 # We didn't find a matching desired state, which means we can
-                # pretend we recieved an empty desired state.
+                # pretend we received an empty desired state.
                 interface = dict(name=each['name'])
                 commands.extend(self._clear_config(interface, each))
                 continue
diff --git a/lib/ansible/module_utils/network/iosxr/config/l2_interfaces/l2_interfaces.py b/lib/ansible/module_utils/network/iosxr/config/l2_interfaces/l2_interfaces.py
index bbcd493798..a842026609 100644
--- a/lib/ansible/module_utils/network/iosxr/config/l2_interfaces/l2_interfaces.py
+++ b/lib/ansible/module_utils/network/iosxr/config/l2_interfaces/l2_interfaces.py
@@ -154,7 +154,7 @@ class L2_Interfaces(ConfigBase):
                     not_in_have.add(interface['name'])
             else:
                 # We didn't find a matching desired state, which means we can
-                # pretend we recieved an empty desired state.
+                # pretend we received an empty desired state.
                 interface = dict(name=each['name'])
                 commands.extend(self._clear_config(interface, each))
                 continue
diff --git a/lib/ansible/module_utils/network/iosxr/config/l3_interfaces/l3_interfaces.py b/lib/ansible/module_utils/network/iosxr/config/l3_interfaces/l3_interfaces.py
index e1e30a34db..555933ad85 100644
--- a/lib/ansible/module_utils/network/iosxr/config/l3_interfaces/l3_interfaces.py
+++ b/lib/ansible/module_utils/network/iosxr/config/l3_interfaces/l3_interfaces.py
@@ -156,7 +156,7 @@ class L3_Interfaces(ConfigBase):
                     not_in_have.add(interface['name'])
             else:
                 # We didn't find a matching desired state, which means we can
-                # pretend we recieved an empty desired state.
+                # pretend we received an empty desired state.
                 interface = dict(name=each['name'])
                 kwargs = {'want': interface, 'have': each}
                 commands.extend(self._clear_config(**kwargs))
diff --git a/lib/ansible/modules/database/postgresql/postgresql_ext.py b/lib/ansible/modules/database/postgresql/postgresql_ext.py
index a092d5fc4f..80e10a60d8 100644
--- a/lib/ansible/modules/database/postgresql/postgresql_ext.py
+++ b/lib/ansible/modules/database/postgresql/postgresql_ext.py
@@ -66,7 +66,7 @@ options:
   ssl_mode:
     description:
       - Determines whether or with what priority a secure SSL TCP/IP connection will be negotiated with the server.
-      - See https://www.postgresql.org/docs/current/static/libpq-ssl.html for more information on the modes.
+      - See U(https://www.postgresql.org/docs/current/static/libpq-ssl.html) for more information on the modes.
       - Default of C(prefer) matches libpq default.
     type: str
     default: prefer
@@ -105,7 +105,7 @@ notes:
 - The default authentication assumes that you are either logging in as
   or sudo'ing to the C(postgres) account on the host.
 - This module uses I(psycopg2), a Python PostgreSQL database adapter.
-- You must ensure that psycopg2 is installed on the host before using this module.
+- You must ensure that C(psycopg2) is installed on the host before using this module.
 - If the remote host is the PostgreSQL server (which is the default case),
   then PostgreSQL must also be installed on the remote host.
 - For Ubuntu-based systems, install the C(postgresql), C(libpq-dev),
diff --git a/lib/ansible/modules/database/postgresql/postgresql_privs.py b/lib/ansible/modules/database/postgresql/postgresql_privs.py
index ba8324dde6..c7cffe9887 100644
--- a/lib/ansible/modules/database/postgresql/postgresql_privs.py
+++ b/lib/ansible/modules/database/postgresql/postgresql_privs.py
@@ -149,7 +149,7 @@ options:
   ssl_mode:
     description:
     - Determines whether or with what priority a secure SSL TCP/IP connection will be negotiated with the server.
-    - See https://www.postgresql.org/docs/current/static/libpq-ssl.html for more information on the modes.
+    - See U(https://www.postgresql.org/docs/current/static/libpq-ssl.html) for more information on the modes.
     - Default of C(prefer) matches libpq default.
     type: str
     default: prefer
diff --git a/lib/ansible/modules/database/postgresql/postgresql_schema.py b/lib/ansible/modules/database/postgresql/postgresql_schema.py
index 9781a7387a..531b92a70d 100644
--- a/lib/ansible/modules/database/postgresql/postgresql_schema.py
+++ b/lib/ansible/modules/database/postgresql/postgresql_schema.py
@@ -61,7 +61,7 @@ options:
   ssl_mode:
     description:
       - Determines whether or with what priority a secure SSL TCP/IP connection will be negotiated with the server.
-      - See https://www.postgresql.org/docs/current/static/libpq-ssl.html for more information on the modes.
+      - See U(https://www.postgresql.org/docs/current/static/libpq-ssl.html) for more information on the modes.
       - Default of C(prefer) matches libpq default.
     type: str
     default: prefer
diff --git a/lib/ansible/modules/database/postgresql/postgresql_set.py b/lib/ansible/modules/database/postgresql/postgresql_set.py
index cfbdae642b..5593b4312f 100644
--- a/lib/ansible/modules/database/postgresql/postgresql_set.py
+++ b/lib/ansible/modules/database/postgresql/postgresql_set.py
@@ -104,7 +104,7 @@ EXAMPLES = r'''
     msg: "{{ set.name }} {{ set.prev_val_pretty }} >> {{ set.value_pretty }} restart_req: {{ set.restart_required }}"
   when: set.changed
 # Ensure that the restart of PostgreSQL server must be required for some parameters.
-# In this situation you see the same parameter in prev_val and value_prettyue, but 'changed=True'
+# In this situation you see the same parameter in prev_val_pretty and value_pretty, but 'changed=True'
 # (If you passed the value that was different from the current server setting).
 
 - name: Set log_min_duration_statement parameter to 1 second
diff --git a/lib/ansible/modules/database/postgresql/postgresql_user.py b/lib/ansible/modules/database/postgresql/postgresql_user.py
index 10afd0a0d8..dc1b6a17b2 100644
--- a/lib/ansible/modules/database/postgresql/postgresql_user.py
+++ b/lib/ansible/modules/database/postgresql/postgresql_user.py
@@ -133,7 +133,7 @@ options:
   ssl_mode:
     description:
       - Determines whether or with what priority a secure SSL TCP/IP connection will be negotiated with the server.
-      - See https://www.postgresql.org/docs/current/static/libpq-ssl.html for more information on the modes.
+      - See U(https://www.postgresql.org/docs/current/static/libpq-ssl.html) for more information on the modes.
       - Default of C(prefer) matches libpq default.
     type: str
     default: prefer
diff --git a/lib/ansible/plugins/callback/jabber.py b/lib/ansible/plugins/callback/jabber.py
index e5777ddf07..a2b12d3a85 100644
--- a/lib/ansible/plugins/callback/jabber.py
+++ b/lib/ansible/plugins/callback/jabber.py
@@ -32,7 +32,7 @@ DOCUMENTATION = '''
         env:
           - name: JABBER_PASS
       to:
-        description: chat identifier that will recieve the message
+        description: chat identifier that will receive the message
         required: True
         env:
           - name: JABBER_TO
diff --git a/lib/ansible/plugins/connection/winrm.py b/lib/ansible/plugins/connection/winrm.py
index 5f9b9482d1..6ab6ca7bc4 100644
--- a/lib/ansible/plugins/connection/winrm.py
+++ b/lib/ansible/plugins/connection/winrm.py
@@ -71,7 +71,7 @@ DOCUMENTATION = """
         type: str
       transport:
         description:
-           - List of winrm transports to attempt to to use (ssl, plaintext, kerberos, etc)
+           - List of winrm transports to attempt to use (ssl, plaintext, kerberos, etc)
            - If None (the default) the plugin will try to automatically guess the correct list
            - The choices available depend on your version of pywinrm
         type: list
