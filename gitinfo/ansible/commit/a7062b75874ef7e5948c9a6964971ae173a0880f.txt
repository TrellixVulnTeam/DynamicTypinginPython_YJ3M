commit a7062b75874ef7e5948c9a6964971ae173a0880f
Author: Matt Martz <matt@sivel.net>
Date:   Thu Feb 22 16:27:53 2018 -0600

    Start of tests for modify_module, specifically to ensure proper shebang replacement on old style modules (#36602)

diff --git a/test/units/executor/module_common/test_modify_module.py b/test/units/executor/module_common/test_modify_module.py
new file mode 100644
index 0000000000..5411371829
--- /dev/null
+++ b/test/units/executor/module_common/test_modify_module.py
@@ -0,0 +1,42 @@
+# Copyright (c) 2018 Matt Martz <matt@sivel.net>
+# GNU General Public License v3.0+ (see COPYING or https://www.gnu.org/licenses/gpl-3.0.txt)
+# -*- coding: utf-8 -*-
+
+from __future__ import (absolute_import, division, print_function)
+__metaclass__ = type
+
+import pytest
+
+from ansible.executor.module_common import modify_module
+from ansible.module_utils.six import PY2
+
+from test_module_common import templar
+
+
+FAKE_OLD_MODULE = b'''#!/usr/bin/python
+import sys
+print('{"result": "%s"}' % sys.executable)
+'''
+
+
+@pytest.fixture
+def fake_old_module_open(mocker):
+    m = mocker.mock_open(read_data=FAKE_OLD_MODULE)
+    if PY2:
+        mocker.patch('__builtin__.open', m)
+    else:
+        mocker.patch('builtins.open', m)
+
+
+def test_shebang(fake_old_module_open):
+    (data, style, shebang) = modify_module('fake_module', 'fake_path', {})
+    assert shebang == '#!/usr/bin/python'
+
+
+def test_shebang_task_vars(fake_old_module_open, templar):
+    task_vars = {
+        'ansible_python_interpreter': '/usr/bin/python3'
+    }
+
+    (data, style, shebang) = modify_module('fake_module', 'fake_path', {}, task_vars=task_vars, templar=templar)
+    assert shebang == '#!/usr/bin/python3'
