commit 0ff62fd5c4ba65c30d4ac7e53c0120553dda8832
Author: The Magician <magic-modules@google.com>
Date:   Tue May 28 10:41:51 2019 -0700

    Bug fixes for GCP modules (#56764)

diff --git a/lib/ansible/modules/cloud/google/gcp_bigquery_dataset.py b/lib/ansible/modules/cloud/google/gcp_bigquery_dataset.py
index 96763d7202..82105bde1f 100644
--- a/lib/ansible/modules/cloud/google/gcp_bigquery_dataset.py
+++ b/lib/ansible/modules/cloud/google/gcp_bigquery_dataset.py
@@ -69,11 +69,8 @@ options:
         description:
         - Describes the rights granted to the user specified by the other member of
           the access object .
+        - 'Some valid choices include: "READER", "WRITER", "OWNER"'
         required: false
-        choices:
-        - READER
-        - WRITER
-        - OWNER
       special_group:
         description:
         - A special group to grant access to.
@@ -311,7 +308,7 @@ def main():
                 options=dict(
                     domain=dict(type='str'),
                     group_by_email=dict(type='str'),
-                    role=dict(type='str', choices=['READER', 'WRITER', 'OWNER']),
+                    role=dict(type='str'),
                     special_group=dict(type='str'),
                     user_by_email=dict(type='str'),
                     view=dict(
diff --git a/lib/ansible/modules/cloud/google/gcp_bigquery_table.py b/lib/ansible/modules/cloud/google/gcp_bigquery_table.py
index 69c90c8931..fcd6d2fa61 100644
--- a/lib/ansible/modules/cloud/google/gcp_bigquery_table.py
+++ b/lib/ansible/modules/cloud/google/gcp_bigquery_table.py
@@ -118,9 +118,8 @@ options:
       type:
         description:
         - The only type supported is DAY, which will generate one partition per day.
+        - 'Some valid choices include: "DAY"'
         required: false
-        choices:
-        - DAY
   schema:
     description:
     - Describes the schema of this table.
@@ -142,11 +141,8 @@ options:
           mode:
             description:
             - The field mode.
+            - 'Some valid choices include: "NULLABLE", "REQUIRED", "REPEATED"'
             required: false
-            choices:
-            - NULLABLE
-            - REQUIRED
-            - REPEATED
           name:
             description:
             - The field name.
@@ -154,17 +150,9 @@ options:
           type:
             description:
             - The field data type.
+            - 'Some valid choices include: "STRING", "BYTES", "INTEGER", "FLOAT",
+              "TIMESTAMP", "DATE", "TIME", "DATETIME", "RECORD"'
             required: false
-            choices:
-            - STRING
-            - BYTES
-            - INTEGER
-            - FLOAT
-            - TIMESTAMP
-            - DATE
-            - TIME
-            - DATETIME
-            - RECORD
   encryption_configuration:
     description:
     - Custom encryption configuration.
@@ -197,10 +185,8 @@ options:
       compression:
         description:
         - The compression type of the data source.
+        - 'Some valid choices include: "GZIP", "NONE"'
         required: false
-        choices:
-        - GZIP
-        - NONE
       ignore_unknown_values:
         description:
         - Indicates if BigQuery should allow extra values that are not represented
@@ -216,24 +202,19 @@ options:
       source_format:
         description:
         - The data format.
+        - 'Some valid choices include: "CSV", "GOOGLE_SHEETS", "NEWLINE_DELIMITED_JSON",
+          "AVRO", "DATASTORE_BACKUP", "BIGTABLE"'
         required: false
-        choices:
-        - CSV
-        - GOOGLE_SHEETS
-        - NEWLINE_DELIMITED_JSON
-        - AVRO
-        - DATASTORE_BACKUP
-        - BIGTABLE
       source_uris:
         description:
-        - 'The fully-qualified URIs that point to your data in Google Cloud. For Google
-          Cloud Storage URIs: Each URI can contain one ''*'' wildcard character and
-          it must come after the ''bucket'' name. Size limits related to load jobs
-          apply to external data sources. For Google Cloud Bigtable URIs: Exactly
-          one URI can be specified and it has be a fully specified and valid HTTPS
-          URL for a Google Cloud Bigtable table. For Google Cloud Datastore backups,
-          exactly one URI can be specified. Also, the ''*'' wildcard character is
-          not allowed.'
+        - The fully-qualified URIs that point to your data in Google Cloud.
+        - 'For Google Cloud Storage URIs: Each URI can contain one ''*'' wildcard
+          character and it must come after the ''bucket'' name. Size limits related
+          to load jobs apply to external data sources. For Google Cloud Bigtable URIs:
+          Exactly one URI can be specified and it has be a fully specified and valid
+          HTTPS URL for a Google Cloud Bigtable table. For Google Cloud Datastore
+          backups, exactly one URI can be specified. Also, the ''*'' wildcard character
+          is not allowed.'
         required: false
       schema:
         description:
@@ -257,11 +238,8 @@ options:
               mode:
                 description:
                 - Field mode.
+                - 'Some valid choices include: "NULLABLE", "REQUIRED", "REPEATED"'
                 required: false
-                choices:
-                - NULLABLE
-                - REQUIRED
-                - REPEATED
               name:
                 description:
                 - Field name.
@@ -269,17 +247,9 @@ options:
               type:
                 description:
                 - Field data type.
+                - 'Some valid choices include: "STRING", "BYTES", "INTEGER", "FLOAT",
+                  "TIMESTAMP", "DATE", "TIME", "DATETIME", "RECORD"'
                 required: false
-                choices:
-                - STRING
-                - BYTES
-                - INTEGER
-                - FLOAT
-                - TIMESTAMP
-                - DATE
-                - TIME
-                - DATETIME
-                - RECORD
       google_sheets_options:
         description:
         - Additional options if sourceFormat is set to GOOGLE_SHEETS.
@@ -311,10 +281,8 @@ options:
           encoding:
             description:
             - The character encoding of the data.
+            - 'Some valid choices include: "UTF-8", "ISO-8859-1"'
             required: false
-            choices:
-            - UTF-8
-            - ISO-8859-1
           field_delimiter:
             description:
             - The separator for fields in a CSV file.
@@ -361,10 +329,8 @@ options:
                   encoding:
                     description:
                     - The encoding of the values when the type is not STRING.
+                    - 'Some valid choices include: "TEXT", "BINARY"'
                     required: false
-                    choices:
-                    - TEXT
-                    - BINARY
                   field_name:
                     description:
                     - If the qualifier is not a valid BigQuery field identifier, a
@@ -384,20 +350,14 @@ options:
                   type:
                     description:
                     - The type to convert the value in cells of this column.
+                    - 'Some valid choices include: "BYTES", "STRING", "INTEGER", "FLOAT",
+                      "BOOLEAN"'
                     required: false
-                    choices:
-                    - BYTES
-                    - STRING
-                    - INTEGER
-                    - FLOAT
-                    - BOOLEAN
               encoding:
                 description:
                 - The encoding of the values when the type is not STRING.
+                - 'Some valid choices include: "TEXT", "BINARY"'
                 required: false
-                choices:
-                - TEXT
-                - BINARY
               family_id:
                 description:
                 - Identifier of the column family.
@@ -411,13 +371,9 @@ options:
               type:
                 description:
                 - The type to convert the value in cells of this column family.
+                - 'Some valid choices include: "BYTES", "STRING", "INTEGER", "FLOAT",
+                  "BOOLEAN"'
                 required: false
-                choices:
-                - BYTES
-                - STRING
-                - INTEGER
-                - FLOAT
-                - BOOLEAN
   dataset:
     description:
     - Name of the dataset.
@@ -699,13 +655,13 @@ externalDataConfiguration:
       type: str
     sourceUris:
       description:
-      - 'The fully-qualified URIs that point to your data in Google Cloud. For Google
-        Cloud Storage URIs: Each URI can contain one ''*'' wildcard character and
-        it must come after the ''bucket'' name. Size limits related to load jobs apply
-        to external data sources. For Google Cloud Bigtable URIs: Exactly one URI
-        can be specified and it has be a fully specified and valid HTTPS URL for a
-        Google Cloud Bigtable table. For Google Cloud Datastore backups, exactly one
-        URI can be specified. Also, the ''*'' wildcard character is not allowed.'
+      - The fully-qualified URIs that point to your data in Google Cloud.
+      - 'For Google Cloud Storage URIs: Each URI can contain one ''*'' wildcard character
+        and it must come after the ''bucket'' name. Size limits related to load jobs
+        apply to external data sources. For Google Cloud Bigtable URIs: Exactly one
+        URI can be specified and it has be a fully specified and valid HTTPS URL for
+        a Google Cloud Bigtable table. For Google Cloud Datastore backups, exactly
+        one URI can be specified. Also, the ''*'' wildcard character is not allowed.'
       returned: success
       type: list
     schema:
@@ -917,7 +873,7 @@ def main():
                     ),
                 ),
             ),
-            time_partitioning=dict(type='dict', options=dict(expiration_ms=dict(type='int'), type=dict(type='str', choices=['DAY']))),
+            time_partitioning=dict(type='dict', options=dict(expiration_ms=dict(type='int'), type=dict(type='str'))),
             schema=dict(
                 type='dict',
                 options=dict(
@@ -927,9 +883,9 @@ def main():
                         options=dict(
                             description=dict(type='str'),
                             fields=dict(type='list', elements='str'),
-                            mode=dict(type='str', choices=['NULLABLE', 'REQUIRED', 'REPEATED']),
+                            mode=dict(type='str'),
                             name=dict(type='str'),
-                            type=dict(type='str', choices=['STRING', 'BYTES', 'INTEGER', 'FLOAT', 'TIMESTAMP', 'DATE', 'TIME', 'DATETIME', 'RECORD']),
+                            type=dict(type='str'),
                         ),
                     )
                 ),
@@ -940,10 +896,10 @@ def main():
                 type='dict',
                 options=dict(
                     autodetect=dict(type='bool'),
-                    compression=dict(type='str', choices=['GZIP', 'NONE']),
+                    compression=dict(type='str'),
                     ignore_unknown_values=dict(type='bool'),
                     max_bad_records=dict(default=0, type='int'),
-                    source_format=dict(type='str', choices=['CSV', 'GOOGLE_SHEETS', 'NEWLINE_DELIMITED_JSON', 'AVRO', 'DATASTORE_BACKUP', 'BIGTABLE']),
+                    source_format=dict(type='str'),
                     source_uris=dict(type='list', elements='str'),
                     schema=dict(
                         type='dict',
@@ -954,9 +910,9 @@ def main():
                                 options=dict(
                                     description=dict(type='str'),
                                     fields=dict(type='list', elements='str'),
-                                    mode=dict(type='str', choices=['NULLABLE', 'REQUIRED', 'REPEATED']),
+                                    mode=dict(type='str'),
                                     name=dict(type='str'),
-                                    type=dict(type='str', choices=['STRING', 'BYTES', 'INTEGER', 'FLOAT', 'TIMESTAMP', 'DATE', 'TIME', 'DATETIME', 'RECORD']),
+                                    type=dict(type='str'),
                                 ),
                             )
                         ),
@@ -967,7 +923,7 @@ def main():
                         options=dict(
                             allow_jagged_rows=dict(type='bool'),
                             allow_quoted_newlines=dict(type='bool'),
-                            encoding=dict(type='str', choices=['UTF-8', 'ISO-8859-1']),
+                            encoding=dict(type='str'),
                             field_delimiter=dict(type='str'),
                             quote=dict(type='str'),
                             skip_leading_rows=dict(default=0, type='int'),
@@ -986,17 +942,17 @@ def main():
                                         type='list',
                                         elements='dict',
                                         options=dict(
-                                            encoding=dict(type='str', choices=['TEXT', 'BINARY']),
+                                            encoding=dict(type='str'),
                                             field_name=dict(type='str'),
                                             only_read_latest=dict(type='bool'),
                                             qualifier_string=dict(required=True, type='str'),
-                                            type=dict(type='str', choices=['BYTES', 'STRING', 'INTEGER', 'FLOAT', 'BOOLEAN']),
+                                            type=dict(type='str'),
                                         ),
                                     ),
-                                    encoding=dict(type='str', choices=['TEXT', 'BINARY']),
+                                    encoding=dict(type='str'),
                                     family_id=dict(type='str'),
                                     only_read_latest=dict(type='bool'),
-                                    type=dict(type='str', choices=['BYTES', 'STRING', 'INTEGER', 'FLOAT', 'BOOLEAN']),
+                                    type=dict(type='str'),
                                 ),
                             ),
                         ),
diff --git a/lib/ansible/modules/cloud/google/gcp_bigquery_table_facts.py b/lib/ansible/modules/cloud/google/gcp_bigquery_table_facts.py
index 404a7328aa..08a8d20c3e 100644
--- a/lib/ansible/modules/cloud/google/gcp_bigquery_table_facts.py
+++ b/lib/ansible/modules/cloud/google/gcp_bigquery_table_facts.py
@@ -314,14 +314,14 @@ resources:
           type: str
         sourceUris:
           description:
-          - 'The fully-qualified URIs that point to your data in Google Cloud. For
-            Google Cloud Storage URIs: Each URI can contain one ''*'' wildcard character
-            and it must come after the ''bucket'' name. Size limits related to load
-            jobs apply to external data sources. For Google Cloud Bigtable URIs: Exactly
-            one URI can be specified and it has be a fully specified and valid HTTPS
-            URL for a Google Cloud Bigtable table. For Google Cloud Datastore backups,
-            exactly one URI can be specified. Also, the ''*'' wildcard character is
-            not allowed.'
+          - The fully-qualified URIs that point to your data in Google Cloud.
+          - 'For Google Cloud Storage URIs: Each URI can contain one ''*'' wildcard
+            character and it must come after the ''bucket'' name. Size limits related
+            to load jobs apply to external data sources. For Google Cloud Bigtable
+            URIs: Exactly one URI can be specified and it has be a fully specified
+            and valid HTTPS URL for a Google Cloud Bigtable table. For Google Cloud
+            Datastore backups, exactly one URI can be specified. Also, the ''*'' wildcard
+            character is not allowed.'
           returned: success
           type: list
         schema:
diff --git a/lib/ansible/modules/cloud/google/gcp_cloudbuild_trigger.py b/lib/ansible/modules/cloud/google/gcp_cloudbuild_trigger.py
index 4e472b0fb3..2b3d821e8f 100644
--- a/lib/ansible/modules/cloud/google/gcp_cloudbuild_trigger.py
+++ b/lib/ansible/modules/cloud/google/gcp_cloudbuild_trigger.py
@@ -161,7 +161,7 @@ options:
               be run directly. If not, the host will attempt to pull the image first,
               using the builder service account's credentials if necessary.
             - The Docker daemon's cache will already have the latest versions of all
-              of the officially supported build steps (U(https://github.com/GoogleCloudPlatform/cloud-builders).)
+              of the officially supported build steps (U(https://github.com/GoogleCloudPlatform/cloud-builders)).
             - The Docker daemon will also have cached many of the layers for some
               popular images, like "ubuntu", "debian", but they will be refreshed
               at the time you attempt to use them.
@@ -418,7 +418,7 @@ build:
             be run directly. If not, the host will attempt to pull the image first,
             using the builder service account's credentials if necessary.
           - The Docker daemon's cache will already have the latest versions of all
-            of the officially supported build steps (U(https://github.com/GoogleCloudPlatform/cloud-builders).)
+            of the officially supported build steps (U(https://github.com/GoogleCloudPlatform/cloud-builders)).
           - The Docker daemon will also have cached many of the layers for some popular
             images, like "ubuntu", "debian", but they will be refreshed at the time
             you attempt to use them.
diff --git a/lib/ansible/modules/cloud/google/gcp_cloudbuild_trigger_facts.py b/lib/ansible/modules/cloud/google/gcp_cloudbuild_trigger_facts.py
index 54bc9ac4ae..283c943027 100644
--- a/lib/ansible/modules/cloud/google/gcp_cloudbuild_trigger_facts.py
+++ b/lib/ansible/modules/cloud/google/gcp_cloudbuild_trigger_facts.py
@@ -195,7 +195,7 @@ resources:
                 will be run directly. If not, the host will attempt to pull the image
                 first, using the builder service account's credentials if necessary.
               - The Docker daemon's cache will already have the latest versions of
-                all of the officially supported build steps (U(https://github.com/GoogleCloudPlatform/cloud-builders).)
+                all of the officially supported build steps (U(https://github.com/GoogleCloudPlatform/cloud-builders)).
               - The Docker daemon will also have cached many of the layers for some
                 popular images, like "ubuntu", "debian", but they will be refreshed
                 at the time you attempt to use them.
diff --git a/lib/ansible/modules/cloud/google/gcp_compute_address.py b/lib/ansible/modules/cloud/google/gcp_compute_address.py
index 9a05e01744..5c0af5ec4b 100644
--- a/lib/ansible/modules/cloud/google/gcp_compute_address.py
+++ b/lib/ansible/modules/cloud/google/gcp_compute_address.py
@@ -66,12 +66,10 @@ options:
     description:
     - The type of address to reserve, either INTERNAL or EXTERNAL.
     - If unspecified, defaults to EXTERNAL.
+    - 'Some valid choices include: "INTERNAL", "EXTERNAL"'
     required: false
     default: EXTERNAL
     version_added: 2.7
-    choices:
-    - INTERNAL
-    - EXTERNAL
   description:
     description:
     - An optional description of this resource.
@@ -89,11 +87,9 @@ options:
     - 'The networking tier used for configuring this address. This field can take
       the following values: PREMIUM or STANDARD. If this field is not specified, it
       is assumed to be PREMIUM.'
+    - 'Some valid choices include: "PREMIUM", "STANDARD"'
     required: false
     version_added: 2.8
-    choices:
-    - PREMIUM
-    - STANDARD
   subnetwork:
     description:
     - The URL of the subnetwork in which to reserve the address. If an IP address
@@ -216,10 +212,10 @@ def main():
         argument_spec=dict(
             state=dict(default='present', choices=['present', 'absent'], type='str'),
             address=dict(type='str'),
-            address_type=dict(default='EXTERNAL', type='str', choices=['INTERNAL', 'EXTERNAL']),
+            address_type=dict(default='EXTERNAL', type='str'),
             description=dict(type='str'),
             name=dict(required=True, type='str'),
-            network_tier=dict(type='str', choices=['PREMIUM', 'STANDARD']),
+            network_tier=dict(type='str'),
             subnetwork=dict(type='dict'),
             region=dict(required=True, type='str'),
         )
diff --git a/lib/ansible/modules/cloud/google/gcp_compute_address_facts.py b/lib/ansible/modules/cloud/google/gcp_compute_address_facts.py
index 6bb0472cc3..94567c3c06 100644
--- a/lib/ansible/modules/cloud/google/gcp_compute_address_facts.py
+++ b/lib/ansible/modules/cloud/google/gcp_compute_address_facts.py
@@ -42,7 +42,7 @@ requirements:
 options:
   filters:
     description:
-    - A list of filter value pairs. Available filters are listed here U(https://cloud.google.com/sdk/gcloud/reference/topic/filters.)
+    - A list of filter value pairs. Available filters are listed here U(https://cloud.google.com/sdk/gcloud/reference/topic/filters).
     - Each additional filter in the list will act be added as an AND condition (filter1
       and filter2) .
   region:
diff --git a/lib/ansible/modules/cloud/google/gcp_compute_backend_bucket_facts.py b/lib/ansible/modules/cloud/google/gcp_compute_backend_bucket_facts.py
index ef174f5800..d65f67b21e 100644
--- a/lib/ansible/modules/cloud/google/gcp_compute_backend_bucket_facts.py
+++ b/lib/ansible/modules/cloud/google/gcp_compute_backend_bucket_facts.py
@@ -42,7 +42,7 @@ requirements:
 options:
   filters:
     description:
-    - A list of filter value pairs. Available filters are listed here U(https://cloud.google.com/sdk/gcloud/reference/topic/filters.)
+    - A list of filter value pairs. Available filters are listed here U(https://cloud.google.com/sdk/gcloud/reference/topic/filters).
     - Each additional filter in the list will act be added as an AND condition (filter1
       and filter2) .
 extends_documentation_fragment: gcp
diff --git a/lib/ansible/modules/cloud/google/gcp_compute_backend_service.py b/lib/ansible/modules/cloud/google/gcp_compute_backend_service.py
index 72f5f9426f..c9a636d55d 100644
--- a/lib/ansible/modules/cloud/google/gcp_compute_backend_service.py
+++ b/lib/ansible/modules/cloud/google/gcp_compute_backend_service.py
@@ -66,12 +66,9 @@ options:
         - Specifies the balancing mode for this backend.
         - For global HTTP(S) or TCP/SSL load balancing, the default is UTILIZATION.
           Valid values are UTILIZATION, RATE (for HTTP(S)) and CONNECTION (for TCP/SSL).
+        - 'Some valid choices include: "UTILIZATION", "RATE", "CONNECTION"'
         required: false
         default: UTILIZATION
-        choices:
-        - UTILIZATION
-        - RATE
-        - CONNECTION
       capacity_scaler:
         description:
         - A multiplier applied to the group's maximum servicing capacity (based on
@@ -242,11 +239,10 @@ options:
       load balancing. A backend service created for one type of load balancing cannot
       be used with the other. Must be `EXTERNAL` for a global backend service. Defaults
       to `EXTERNAL`.
+    - 'Some valid choices include: "EXTERNAL"'
     required: false
     default: EXTERNAL
     version_added: 2.7
-    choices:
-    - EXTERNAL
   name:
     description:
     - Name of the resource. Provided by the client when the resource is created. The
@@ -267,13 +263,8 @@ options:
     - 'Possible values are HTTP, HTTPS, HTTP2, TCP, and SSL. The default is HTTP.
       **NOTE**: HTTP2 is only valid for beta HTTP/2 load balancer types and may result
       in errors if used with the GA API.'
+    - 'Some valid choices include: "HTTP", "HTTPS", "HTTP2", "TCP", "SSL"'
     required: false
-    choices:
-    - HTTP
-    - HTTPS
-    - HTTP2
-    - TCP
-    - SSL
   security_policy:
     description:
     - The security policy associated with this backend service.
@@ -284,11 +275,8 @@ options:
     - Type of session affinity to use. The default is NONE.
     - When the load balancing scheme is EXTERNAL, can be NONE, CLIENT_IP, or GENERATED_COOKIE.
     - When the protocol is UDP, this field is not used.
+    - 'Some valid choices include: "NONE", "CLIENT_IP", "GENERATED_COOKIE"'
     required: false
-    choices:
-    - NONE
-    - CLIENT_IP
-    - GENERATED_COOKIE
   timeout_sec:
     description:
     - How many seconds to wait for the backend before considering it a failed request.
@@ -636,7 +624,7 @@ def main():
                 type='list',
                 elements='dict',
                 options=dict(
-                    balancing_mode=dict(default='UTILIZATION', type='str', choices=['UTILIZATION', 'RATE', 'CONNECTION']),
+                    balancing_mode=dict(default='UTILIZATION', type='str'),
                     capacity_scaler=dict(default=1.0, type='str'),
                     description=dict(type='str'),
                     group=dict(type='str'),
@@ -671,12 +659,12 @@ def main():
                 type='dict',
                 options=dict(enabled=dict(type='bool'), oauth2_client_id=dict(required=True, type='str'), oauth2_client_secret=dict(required=True, type='str')),
             ),
-            load_balancing_scheme=dict(default='EXTERNAL', type='str', choices=['EXTERNAL']),
+            load_balancing_scheme=dict(default='EXTERNAL', type='str'),
             name=dict(required=True, type='str'),
             port_name=dict(type='str'),
-            protocol=dict(type='str', choices=['HTTP', 'HTTPS', 'HTTP2', 'TCP', 'SSL']),
+            protocol=dict(type='str'),
             security_policy=dict(type='str'),
-            session_affinity=dict(type='str', choices=['NONE', 'CLIENT_IP', 'GENERATED_COOKIE']),
+            session_affinity=dict(type='str'),
             timeout_sec=dict(type='int', aliases=['timeout_seconds']),
         )
     )
diff --git a/lib/ansible/modules/cloud/google/gcp_compute_backend_service_facts.py b/lib/ansible/modules/cloud/google/gcp_compute_backend_service_facts.py
index 7c6e693582..943e203be0 100644
--- a/lib/ansible/modules/cloud/google/gcp_compute_backend_service_facts.py
+++ b/lib/ansible/modules/cloud/google/gcp_compute_backend_service_facts.py
@@ -42,7 +42,7 @@ requirements:
 options:
   filters:
     description:
-    - A list of filter value pairs. Available filters are listed here U(https://cloud.google.com/sdk/gcloud/reference/topic/filters.)
+    - A list of filter value pairs. Available filters are listed here U(https://cloud.google.com/sdk/gcloud/reference/topic/filters).
     - Each additional filter in the list will act be added as an AND condition (filter1
       and filter2) .
 extends_documentation_fragment: gcp
diff --git a/lib/ansible/modules/cloud/google/gcp_compute_disk_facts.py b/lib/ansible/modules/cloud/google/gcp_compute_disk_facts.py
index 18922351b7..41e7338a88 100644
--- a/lib/ansible/modules/cloud/google/gcp_compute_disk_facts.py
+++ b/lib/ansible/modules/cloud/google/gcp_compute_disk_facts.py
@@ -42,7 +42,7 @@ requirements:
 options:
   filters:
     description:
-    - A list of filter value pairs. Available filters are listed here U(https://cloud.google.com/sdk/gcloud/reference/topic/filters.)
+    - A list of filter value pairs. Available filters are listed here U(https://cloud.google.com/sdk/gcloud/reference/topic/filters).
     - Each additional filter in the list will act be added as an AND condition (filter1
       and filter2) .
   zone:
diff --git a/lib/ansible/modules/cloud/google/gcp_compute_firewall.py b/lib/ansible/modules/cloud/google/gcp_compute_firewall.py
index 082d6972fd..24317d03d2 100644
--- a/lib/ansible/modules/cloud/google/gcp_compute_firewall.py
+++ b/lib/ansible/modules/cloud/google/gcp_compute_firewall.py
@@ -114,11 +114,9 @@ options:
     - 'Direction of traffic to which this firewall applies; default is INGRESS. Note:
       For INGRESS traffic, it is NOT supported to specify destinationRanges; For EGRESS
       traffic, it is NOT supported to specify sourceRanges OR sourceTags.'
+    - 'Some valid choices include: "INGRESS", "EGRESS"'
     required: false
     version_added: 2.8
-    choices:
-    - INGRESS
-    - EGRESS
   disabled:
     description:
     - Denotes whether the firewall rule is disabled, i.e not applied to the network
@@ -431,7 +429,7 @@ def main():
             denied=dict(type='list', elements='dict', options=dict(ip_protocol=dict(required=True, type='str'), ports=dict(type='list', elements='str'))),
             description=dict(type='str'),
             destination_ranges=dict(type='list', elements='str'),
-            direction=dict(type='str', choices=['INGRESS', 'EGRESS']),
+            direction=dict(type='str'),
             disabled=dict(type='bool'),
             name=dict(required=True, type='str'),
             network=dict(default=dict(selfLink='global/networks/default'), type='dict'),
diff --git a/lib/ansible/modules/cloud/google/gcp_compute_firewall_facts.py b/lib/ansible/modules/cloud/google/gcp_compute_firewall_facts.py
index 073fa6bb99..31a4d8fd82 100644
--- a/lib/ansible/modules/cloud/google/gcp_compute_firewall_facts.py
+++ b/lib/ansible/modules/cloud/google/gcp_compute_firewall_facts.py
@@ -42,7 +42,7 @@ requirements:
 options:
   filters:
     description:
-    - A list of filter value pairs. Available filters are listed here U(https://cloud.google.com/sdk/gcloud/reference/topic/filters.)
+    - A list of filter value pairs. Available filters are listed here U(https://cloud.google.com/sdk/gcloud/reference/topic/filters).
     - Each additional filter in the list will act be added as an AND condition (filter1
       and filter2) .
 extends_documentation_fragment: gcp
diff --git a/lib/ansible/modules/cloud/google/gcp_compute_forwarding_rule.py b/lib/ansible/modules/cloud/google/gcp_compute_forwarding_rule.py
index 1798ddf9c2..d0eb51d642 100644
--- a/lib/ansible/modules/cloud/google/gcp_compute_forwarding_rule.py
+++ b/lib/ansible/modules/cloud/google/gcp_compute_forwarding_rule.py
@@ -81,14 +81,8 @@ options:
     - The IP protocol to which this rule applies. Valid options are TCP, UDP, ESP,
       AH, SCTP or ICMP.
     - When the load balancing scheme is INTERNAL, only TCP and UDP are valid.
+    - 'Some valid choices include: "TCP", "UDP", "ESP", "AH", "SCTP", "ICMP"'
     required: false
-    choices:
-    - TCP
-    - UDP
-    - ESP
-    - AH
-    - SCTP
-    - ICMP
   backend_service:
     description:
     - A BackendService to receive the matched traffic. This is used only for INTERNAL
@@ -102,10 +96,8 @@ options:
   ip_version:
     description:
     - ipVersion is not a valid field for regional forwarding rules.
+    - 'Some valid choices include: "IPV4", "IPV6"'
     required: false
-    choices:
-    - IPV4
-    - IPV6
   load_balancing_scheme:
     description:
     - 'This signifies what the ForwardingRule will be used for and can only take the
@@ -113,10 +105,8 @@ options:
       be used for Internal Network Load Balancing (TCP, UDP). The value of EXTERNAL
       means that this will be used for External Load Balancing (HTTP(S) LB, External
       TCP/UDP LB, SSL Proxy) .'
+    - 'Some valid choices include: "INTERNAL", "EXTERNAL"'
     required: false
-    choices:
-    - INTERNAL
-    - EXTERNAL
   name:
     description:
     - Name of the resource; provided by the client when the resource is created. The
@@ -199,11 +189,9 @@ options:
     - 'The networking tier used for configuring this address. This field can take
       the following values: PREMIUM or STANDARD. If this field is not specified, it
       is assumed to be PREMIUM.'
+    - 'Some valid choices include: "PREMIUM", "STANDARD"'
     required: false
     version_added: 2.8
-    choices:
-    - PREMIUM
-    - STANDARD
   service_label:
     description:
     - An optional prefix to the service name for this Forwarding Rule.
@@ -448,10 +436,10 @@ def main():
             state=dict(default='present', choices=['present', 'absent'], type='str'),
             description=dict(type='str'),
             ip_address=dict(type='str'),
-            ip_protocol=dict(type='str', choices=['TCP', 'UDP', 'ESP', 'AH', 'SCTP', 'ICMP']),
+            ip_protocol=dict(type='str'),
             backend_service=dict(type='dict'),
-            ip_version=dict(type='str', choices=['IPV4', 'IPV6']),
-            load_balancing_scheme=dict(type='str', choices=['INTERNAL', 'EXTERNAL']),
+            ip_version=dict(type='str'),
+            load_balancing_scheme=dict(type='str'),
             name=dict(required=True, type='str'),
             network=dict(type='dict'),
             port_range=dict(type='str'),
@@ -459,7 +447,7 @@ def main():
             subnetwork=dict(type='dict'),
             target=dict(type='dict'),
             all_ports=dict(type='bool'),
-            network_tier=dict(type='str', choices=['PREMIUM', 'STANDARD']),
+            network_tier=dict(type='str'),
             service_label=dict(type='str'),
             region=dict(required=True, type='str'),
         )
diff --git a/lib/ansible/modules/cloud/google/gcp_compute_forwarding_rule_facts.py b/lib/ansible/modules/cloud/google/gcp_compute_forwarding_rule_facts.py
index 892581f6d0..bb5d4fc746 100644
--- a/lib/ansible/modules/cloud/google/gcp_compute_forwarding_rule_facts.py
+++ b/lib/ansible/modules/cloud/google/gcp_compute_forwarding_rule_facts.py
@@ -42,7 +42,7 @@ requirements:
 options:
   filters:
     description:
-    - A list of filter value pairs. Available filters are listed here U(https://cloud.google.com/sdk/gcloud/reference/topic/filters.)
+    - A list of filter value pairs. Available filters are listed here U(https://cloud.google.com/sdk/gcloud/reference/topic/filters).
     - Each additional filter in the list will act be added as an AND condition (filter1
       and filter2) .
   region:
diff --git a/lib/ansible/modules/cloud/google/gcp_compute_global_address.py b/lib/ansible/modules/cloud/google/gcp_compute_global_address.py
index fff05fb85c..bff9806207 100644
--- a/lib/ansible/modules/cloud/google/gcp_compute_global_address.py
+++ b/lib/ansible/modules/cloud/google/gcp_compute_global_address.py
@@ -70,21 +70,17 @@ options:
     description:
     - The IP Version that will be used by this address. Valid options are `IPV4` or
       `IPV6`. The default value is `IPV4`.
+    - 'Some valid choices include: "IPV4", "IPV6"'
     required: false
-    choices:
-    - IPV4
-    - IPV6
   address_type:
     description:
     - The type of the address to reserve, default is EXTERNAL.
     - "* EXTERNAL indicates public/external single IP address."
     - "* INTERNAL indicates internal IP ranges belonging to some network."
+    - 'Some valid choices include: "EXTERNAL", "INTERNAL"'
     required: false
     default: EXTERNAL
     version_added: 2.8
-    choices:
-    - EXTERNAL
-    - INTERNAL
 extends_documentation_fragment: gcp
 notes:
 - 'API Reference: U(https://cloud.google.com/compute/docs/reference/v1/globalAddresses)'
@@ -175,8 +171,8 @@ def main():
             address=dict(type='str'),
             description=dict(type='str'),
             name=dict(required=True, type='str'),
-            ip_version=dict(type='str', choices=['IPV4', 'IPV6']),
-            address_type=dict(default='EXTERNAL', type='str', choices=['EXTERNAL', 'INTERNAL']),
+            ip_version=dict(type='str'),
+            address_type=dict(default='EXTERNAL', type='str'),
         )
     )
 
diff --git a/lib/ansible/modules/cloud/google/gcp_compute_global_address_facts.py b/lib/ansible/modules/cloud/google/gcp_compute_global_address_facts.py
index 1f4f45d576..26658cb3c2 100644
--- a/lib/ansible/modules/cloud/google/gcp_compute_global_address_facts.py
+++ b/lib/ansible/modules/cloud/google/gcp_compute_global_address_facts.py
@@ -42,7 +42,7 @@ requirements:
 options:
   filters:
     description:
-    - A list of filter value pairs. Available filters are listed here U(https://cloud.google.com/sdk/gcloud/reference/topic/filters.)
+    - A list of filter value pairs. Available filters are listed here U(https://cloud.google.com/sdk/gcloud/reference/topic/filters).
     - Each additional filter in the list will act be added as an AND condition (filter1
       and filter2) .
 extends_documentation_fragment: gcp
diff --git a/lib/ansible/modules/cloud/google/gcp_compute_global_forwarding_rule.py b/lib/ansible/modules/cloud/google/gcp_compute_global_forwarding_rule.py
index 5c388230cf..6e139b51b4 100644
--- a/lib/ansible/modules/cloud/google/gcp_compute_global_forwarding_rule.py
+++ b/lib/ansible/modules/cloud/google/gcp_compute_global_forwarding_rule.py
@@ -83,22 +83,14 @@ options:
     - The IP protocol to which this rule applies. Valid options are TCP, UDP, ESP,
       AH, SCTP or ICMP. When the load balancing scheme is INTERNAL_SELF_MANAGED, only
       TCP is valid.
+    - 'Some valid choices include: "TCP", "UDP", "ESP", "AH", "SCTP", "ICMP"'
     required: false
-    choices:
-    - TCP
-    - UDP
-    - ESP
-    - AH
-    - SCTP
-    - ICMP
   ip_version:
     description:
     - The IP Version that will be used by this global forwarding rule.
     - Valid options are IPV4 or IPV6.
+    - 'Some valid choices include: "IPV4", "IPV6"'
     required: false
-    choices:
-    - IPV4
-    - IPV6
   load_balancing_scheme:
     description:
     - This signifies what the GlobalForwardingRule will be used for.
@@ -106,10 +98,8 @@ options:
       Global HTTP(S) LB. The value of EXTERNAL means that this will be used for External
       Global Load Balancing (HTTP(S) LB, External TCP/UDP LB, SSL Proxy) NOTE: Currently
       global forwarding rules cannot be used for INTERNAL load balancing.'
+    - 'Some valid choices include: "INTERNAL_SELF_MANAGED", "EXTERNAL"'
     required: false
-    choices:
-    - INTERNAL_SELF_MANAGED
-    - EXTERNAL
   name:
     description:
     - Name of the resource; provided by the client when the resource is created. The
@@ -356,9 +346,9 @@ def main():
             state=dict(default='present', choices=['present', 'absent'], type='str'),
             description=dict(type='str'),
             ip_address=dict(type='str'),
-            ip_protocol=dict(type='str', choices=['TCP', 'UDP', 'ESP', 'AH', 'SCTP', 'ICMP']),
-            ip_version=dict(type='str', choices=['IPV4', 'IPV6']),
-            load_balancing_scheme=dict(type='str', choices=['INTERNAL_SELF_MANAGED', 'EXTERNAL']),
+            ip_protocol=dict(type='str'),
+            ip_version=dict(type='str'),
+            load_balancing_scheme=dict(type='str'),
             name=dict(required=True, type='str'),
             network=dict(type='dict'),
             port_range=dict(type='str'),
diff --git a/lib/ansible/modules/cloud/google/gcp_compute_global_forwarding_rule_facts.py b/lib/ansible/modules/cloud/google/gcp_compute_global_forwarding_rule_facts.py
index d5d74786f0..3cb35bb1f8 100644
--- a/lib/ansible/modules/cloud/google/gcp_compute_global_forwarding_rule_facts.py
+++ b/lib/ansible/modules/cloud/google/gcp_compute_global_forwarding_rule_facts.py
@@ -42,7 +42,7 @@ requirements:
 options:
   filters:
     description:
-    - A list of filter value pairs. Available filters are listed here U(https://cloud.google.com/sdk/gcloud/reference/topic/filters.)
+    - A list of filter value pairs. Available filters are listed here U(https://cloud.google.com/sdk/gcloud/reference/topic/filters).
     - Each additional filter in the list will act be added as an AND condition (filter1
       and filter2) .
 extends_documentation_fragment: gcp
diff --git a/lib/ansible/modules/cloud/google/gcp_compute_health_check.py b/lib/ansible/modules/cloud/google/gcp_compute_health_check.py
index 1ecf29aa75..7c12986196 100644
--- a/lib/ansible/modules/cloud/google/gcp_compute_health_check.py
+++ b/lib/ansible/modules/cloud/google/gcp_compute_health_check.py
@@ -100,12 +100,8 @@ options:
     - Specifies the type of the healthCheck, either TCP, SSL, HTTP or HTTPS. If not
       specified, the default is TCP. Exactly one of the protocol-specific health check
       field must be specified, which must match type field.
+    - 'Some valid choices include: "TCP", "SSL", "HTTP", "HTTPS"'
     required: false
-    choices:
-    - TCP
-    - SSL
-    - HTTP
-    - HTTPS
   http_health_check:
     description:
     - A nested object resource.
@@ -143,11 +139,9 @@ options:
         description:
         - Specifies the type of proxy header to append before sending data to the
           backend, either NONE or PROXY_V1. The default is NONE.
+        - 'Some valid choices include: "NONE", "PROXY_V1"'
         required: false
         default: NONE
-        choices:
-        - NONE
-        - PROXY_V1
   https_health_check:
     description:
     - A nested object resource.
@@ -185,11 +179,9 @@ options:
         description:
         - Specifies the type of proxy header to append before sending data to the
           backend, either NONE or PROXY_V1. The default is NONE.
+        - 'Some valid choices include: "NONE", "PROXY_V1"'
         required: false
         default: NONE
-        choices:
-        - NONE
-        - PROXY_V1
   tcp_health_check:
     description:
     - A nested object resource.
@@ -221,11 +213,9 @@ options:
         description:
         - Specifies the type of proxy header to append before sending data to the
           backend, either NONE or PROXY_V1. The default is NONE.
+        - 'Some valid choices include: "NONE", "PROXY_V1"'
         required: false
         default: NONE
-        choices:
-        - NONE
-        - PROXY_V1
   ssl_health_check:
     description:
     - A nested object resource.
@@ -257,11 +247,9 @@ options:
         description:
         - Specifies the type of proxy header to append before sending data to the
           backend, either NONE or PROXY_V1. The default is NONE.
+        - 'Some valid choices include: "NONE", "PROXY_V1"'
         required: false
         default: NONE
-        choices:
-        - NONE
-        - PROXY_V1
 extends_documentation_fragment: gcp
 notes:
 - 'API Reference: U(https://cloud.google.com/compute/docs/reference/rest/v1/healthChecks)'
@@ -535,7 +523,7 @@ def main():
             name=dict(required=True, type='str'),
             timeout_sec=dict(default=5, type='int', aliases=['timeout_seconds']),
             unhealthy_threshold=dict(default=2, type='int'),
-            type=dict(type='str', choices=['TCP', 'SSL', 'HTTP', 'HTTPS']),
+            type=dict(type='str'),
             http_health_check=dict(
                 type='dict',
                 options=dict(
@@ -544,7 +532,7 @@ def main():
                     response=dict(type='str'),
                     port=dict(type='int'),
                     port_name=dict(type='str'),
-                    proxy_header=dict(default='NONE', type='str', choices=['NONE', 'PROXY_V1']),
+                    proxy_header=dict(default='NONE', type='str'),
                 ),
             ),
             https_health_check=dict(
@@ -555,7 +543,7 @@ def main():
                     response=dict(type='str'),
                     port=dict(type='int'),
                     port_name=dict(type='str'),
-                    proxy_header=dict(default='NONE', type='str', choices=['NONE', 'PROXY_V1']),
+                    proxy_header=dict(default='NONE', type='str'),
                 ),
             ),
             tcp_health_check=dict(
@@ -565,7 +553,7 @@ def main():
                     response=dict(type='str'),
                     port=dict(type='int'),
                     port_name=dict(type='str'),
-                    proxy_header=dict(default='NONE', type='str', choices=['NONE', 'PROXY_V1']),
+                    proxy_header=dict(default='NONE', type='str'),
                 ),
             ),
             ssl_health_check=dict(
@@ -575,7 +563,7 @@ def main():
                     response=dict(type='str'),
                     port=dict(type='int'),
                     port_name=dict(type='str'),
-                    proxy_header=dict(default='NONE', type='str', choices=['NONE', 'PROXY_V1']),
+                    proxy_header=dict(default='NONE', type='str'),
                 ),
             ),
         ),
