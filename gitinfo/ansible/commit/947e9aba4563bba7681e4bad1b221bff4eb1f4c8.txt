commit 947e9aba4563bba7681e4bad1b221bff4eb1f4c8
Author: Trishna Guha <trishnaguha17@gmail.com>
Date:   Tue Jun 20 08:53:03 2017 +0530

    Add vyos_banner implementation module (#25862)
    
    * Add vyos_banner implementation module
    
    Signed-off-by: Trishna Guha <trishnaguha17@gmail.com>
    
    * vyos_banne integration test
    
    Signed-off-by: Trishna Guha <trishnaguha17@gmail.com>
    
    * vyos_banner unit test
    
    Signed-off-by: Trishna Guha <trishnaguha17@gmail.com>
    
    * minor fix on banner text
    
    Signed-off-by: Trishna Guha <trishnaguha17@gmail.com>

diff --git a/lib/ansible/modules/network/vyos/vyos_banner.py b/lib/ansible/modules/network/vyos/vyos_banner.py
new file mode 100644
index 0000000000..238fa42006
--- /dev/null
+++ b/lib/ansible/modules/network/vyos/vyos_banner.py
@@ -0,0 +1,179 @@
+#!/usr/bin/python
+# -*- coding: utf-8 -*-
+
+# (c) 2017, Ansible by Red Hat, inc
+#
+# This file is part of Ansible by Red Hat
+#
+# Ansible is free software: you can redistribute it and/or modify
+# it under the terms of the GNU General Public License as published by
+# the Free Software Foundation, either version 3 of the License, or
+# (at your option) any later version.
+#
+# Ansible is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+# GNU General Public License for more details.
+#
+# You should have received a copy of the GNU General Public License
+# along with Ansible.  If not, see <http://www.gnu.org/licenses/>.
+#
+
+ANSIBLE_METADATA = {'metadata_version': '1.0',
+                    'status': ['preview'],
+                    'supported_by': 'core'}
+
+DOCUMENTATION = """
+---
+module: vyos_banner
+version_added: "2.4"
+author: "Trishna Guha (@trishnag)"
+short_description: Manage multiline banners on VyOS devices
+description:
+  - This will configure both pre-login and post-login banners on remote
+    devices running VyOS. It allows playbooks to add or remote
+    banner text from the active running configuration.
+options:
+  banner:
+    description:
+      - Specifies which banner that should be
+        configured on the remote device.
+    required: true
+    default: null
+    choices: ['pre-login', 'post-login']
+  text:
+    description:
+      - The banner text that should be
+        present in the remote device running configuration. This argument
+        accepts a multiline string, with no empty lines. Requires I(state=present).
+    default: null
+  state:
+    description:
+      - Specifies whether or not the configuration is present in the current
+        devices active running configuration.
+    default: present
+    choices: ['present', 'absent']
+"""
+
+EXAMPLES = """
+- name: configure the pre-login banner
+  vyos_banner:
+    banner: pre-login
+    text: |
+      this is my pre-login banner
+      that contains a multiline
+      string
+    state: present
+- name: remove the post-login banner
+  vyos_banner:
+    banner: post-login
+    state: absent
+"""
+
+RETURN = """
+commands:
+  description: The list of configuration mode commands to send to the device
+  returned: always
+  type: list
+  sample:
+    - banner pre-login
+    - this is my pre-login banner
+    - that contains a multiline
+    - string
+"""
+
+import re
+
+from ansible.module_utils.basic import AnsibleModule
+from ansible.module_utils.vyos import get_config, load_config
+from ansible.module_utils.vyos import vyos_argument_spec, check_args
+
+
+def spec_to_commands(updates, module):
+    commands = list()
+    want, have = updates
+    state = module.params['state']
+
+    if state == 'absent' or (state == 'absent' and
+                             'text' in have.keys() and have['text']):
+        commands.append('delete system login banner %s' % module.params['banner'])
+
+    elif state == 'present':
+        if want['text'] and (want['text'] != have.get('text')):
+            banner_cmd = 'set system login banner %s ' % module.params['banner']
+            banner_cmd += '"'
+            banner_cmd += want['text'].strip()
+            banner_cmd += '"'
+            commands.append(banner_cmd)
+
+    return commands
+
+
+def config_to_dict(module):
+    data = get_config(module)
+    output = None
+    obj = {'banner': module.params['banner'], 'state': 'absent'}
+
+    for line in data.split('\n'):
+        if line.startswith('set system login banner %s' % obj['banner']):
+            match = re.findall(r'%s (.*)' % obj['banner'], line, re.M)
+            output = match
+
+    if output:
+        obj['text'] = output
+        obj['state'] = 'present'
+
+    return obj
+
+
+def map_params_to_obj(module):
+    text = module.params['text']
+    if text:
+        text = str(text).strip()
+
+    return {
+        'banner': module.params['banner'],
+        'text': text,
+        'state': module.params['state']
+    }
+
+
+def main():
+    """ main entry point for module execution
+    """
+    argument_spec = dict(
+        banner=dict(required=True, choices=['pre-login', 'post-login']),
+        text=dict(),
+        state=dict(default='present', choices=['present', 'absent'])
+    )
+
+    argument_spec.update(vyos_argument_spec)
+
+    required_if = [('state', 'present', ('text',))]
+
+    module = AnsibleModule(argument_spec=argument_spec,
+                           required_if=required_if,
+                           supports_check_mode=True)
+
+    warnings = list()
+    check_args(module, warnings)
+
+    result = {'changed': False}
+    if warnings:
+        result['warnings'] = warnings
+
+    want = map_params_to_obj(module)
+    have = config_to_dict(module)
+
+    commands = spec_to_commands((want, have), module)
+    result['commands'] = commands
+
+    if commands:
+        commit = not module.check_mode
+        load_config(module, commands, commit=commit)
+        result['changed'] = True
+
+    module.exit_json(**result)
+
+if __name__ == '__main__':
+    main()
diff --git a/test/integration/targets/vyos_banner/defaults/main.yaml b/test/integration/targets/vyos_banner/defaults/main.yaml
new file mode 100644
index 0000000000..9ef5ba5165
--- /dev/null
+++ b/test/integration/targets/vyos_banner/defaults/main.yaml
@@ -0,0 +1,3 @@
+---
+testcase: "*"
+test_items: []
diff --git a/test/integration/targets/vyos_banner/tasks/cli.yaml b/test/integration/targets/vyos_banner/tasks/cli.yaml
new file mode 100644
index 0000000000..d675462dd0
--- /dev/null
+++ b/test/integration/targets/vyos_banner/tasks/cli.yaml
@@ -0,0 +1,15 @@
+---
+- name: collect all cli test cases
+  find:
+    paths: "{{ role_path }}/tests/cli"
+    patterns: "{{ testcase }}.yaml"
+  register: test_cases
+
+- name: set test_items
+  set_fact: test_items="{{ test_cases.files | map(attribute='path') | list }}"
+
+- name: run test case
+  include: "{{ test_case_to_run }}"
+  with_items: "{{ test_items }}"
+  loop_control:
+    loop_var: test_case_to_run
diff --git a/test/integration/targets/vyos_banner/tasks/main.yaml b/test/integration/targets/vyos_banner/tasks/main.yaml
new file mode 100644
index 0000000000..415c99d8b1
--- /dev/null
+++ b/test/integration/targets/vyos_banner/tasks/main.yaml
@@ -0,0 +1,2 @@
+---
+- { include: cli.yaml, tags: ['cli'] }
diff --git a/test/integration/targets/vyos_banner/tests/cli/basic-no-login.yaml b/test/integration/targets/vyos_banner/tests/cli/basic-no-login.yaml
new file mode 100644
index 0000000000..2c96d47775
--- /dev/null
+++ b/test/integration/targets/vyos_banner/tests/cli/basic-no-login.yaml
@@ -0,0 +1,41 @@
+---
+- name: Setup
+  vyos_banner:
+    banner: pre-login
+    text: |
+      Junk pre-login banner
+      over multiple lines
+    state: present
+    provider: "{{ cli }}"
+
+- name: remove pre-login
+  vyos_banner:
+    banner: pre-login
+    state: absent
+    provider: "{{ cli }}"
+  register: result
+
+- debug:
+    msg: "{{ result }}"
+
+- assert:
+    that:
+      - "result.changed == true"
+      - "'delete system login banner pre-login' in result.commands"
+
+- name: remove pre-login (idempotent)
+  vyos_banner:
+    banner: pre-login
+    state: absent
+    provider: "{{ cli }}"
+  register: result
+
+- assert:
+    that:
+      - "result.changed == false"
+      - "result.commands | length == 0"
+
+
+# FIXME add in tests for everything defined in docs
+# FIXME Test state:absent + test:
+# FIXME Without powers ensure "privileged mode required"
diff --git a/test/integration/targets/vyos_banner/tests/cli/basic-post-login.yaml b/test/integration/targets/vyos_banner/tests/cli/basic-post-login.yaml
new file mode 100644
index 0000000000..dd0b886c29
--- /dev/null
+++ b/test/integration/targets/vyos_banner/tests/cli/basic-post-login.yaml
@@ -0,0 +1,47 @@
+---
+- name: setup - remove post-login
+  vyos_banner:
+    banner: post-login
+    state: absent
+    provider: "{{ cli }}"
+
+- name: Set post-login
+  vyos_banner:
+    banner: post-login
+    text: |
+      this is my post-login banner
+      that has a multiline
+      string
+    state: present
+    provider: "{{ cli }}"
+  register: result
+
+- debug:
+    msg: "{{ result }}"
+
+- assert:
+    that:
+      - "result.changed == true"
+      - "'this is my post-login banner' in result.commands"
+      - "'that has a multiline' in result.commands"
+
+- name: Set post-login again (idempotent)
+  vyos_banner:
+    banner: post-login
+    text: |
+      this is my post-login banner
+      that has a multiline
+      string
+    state: present
+    provider: "{{ cli }}"
+  register: result
+
+- assert:
+    that:
+      - "result.changed == false"
+      - "result.commands | length == 0"
+
+
+# FIXME add in tests for everything defined in docs
+# FIXME Test state:absent + test:
+# FIXME Without powers ensure "privileged mode required"
diff --git a/test/integration/targets/vyos_banner/tests/cli/basic-pre-login.yaml b/test/integration/targets/vyos_banner/tests/cli/basic-pre-login.yaml
new file mode 100644
index 0000000000..92665dc328
--- /dev/null
+++ b/test/integration/targets/vyos_banner/tests/cli/basic-pre-login.yaml
@@ -0,0 +1,47 @@
+---
+- name: setup - remove pre-login
+  vyos_banner:
+    banner: pre-login
+    state: absent
+    provider: "{{ cli }}"
+
+- name: Set pre-login
+  vyos_banner:
+    banner: pre-login
+    text: |
+      this is my pre-login banner
+      that has a multiline
+      string
+    state: present
+    provider: "{{ cli }}"
+  register: result
+
+- debug:
+    msg: "{{ result }}"
+
+- assert:
+    that:
+      - "result.changed == true"
+      - "'this is my pre-login banner' in result.commands"
+      - "'that has a multiline' in result.commands"
+
+- name: Set pre-login again (idempotent)
+  vyos_banner:
+    banner: pre-login
+    text: |
+      this is my pre-login banner
+      that has a multiline
+      string
+    state: present
+    provider: "{{ cli }}"
+  register: result
+
+- assert:
+    that:
+      - "result.changed == false"
+      - "result.commands | length == 0"
+
+
+# FIXME add in tests for everything defined in docs
+# FIXME Test state:absent + test:
+# FIXME Without powers ensure "privileged mode required"
diff --git a/test/integration/vyos.yaml b/test/integration/vyos.yaml
index 7fd1e6ec1b..df657cfbd6 100644
--- a/test/integration/vyos.yaml
+++ b/test/integration/vyos.yaml
@@ -11,3 +11,4 @@
     - { role: vyos_command, when: "limit_to in ['*', 'vyos_command']" }
     - { role: vyos_config, when: "limit_to in ['*', 'vyos_config']" }
     - { role: vyos_user, when: "limit_to in ['*', vyos_user']" }
+    - { role: vyos_banner, when: "limit_to in ['*', vyos_banner']" }
diff --git a/test/units/modules/network/vyos/test_vyos_banner.py b/test/units/modules/network/vyos/test_vyos_banner.py
new file mode 100644
index 0000000000..8ff923e074
--- /dev/null
+++ b/test/units/modules/network/vyos/test_vyos_banner.py
@@ -0,0 +1,53 @@
+# This file is part of Ansible
+#
+# Ansible is free software: you can redistribute it and/or modify
+# it under the terms of the GNU General Public License as published by
+# the Free Software Foundation, either version 3 of the License, or
+# (at your option) any later version.
+#
+# Ansible is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+# GNU General Public License for more details.
+#
+# You should have received a copy of the GNU General Public License
+# along with Ansible.  If not, see <http://www.gnu.org/licenses/>.
+
+# Make coding more python3-ish
+from __future__ import (absolute_import, division, print_function)
+__metaclass__ = type
+
+import json
+
+from ansible.compat.tests.mock import patch
+from ansible.modules.network.vyos import vyos_banner
+from .vyos_module import TestVyosModule, load_fixture, set_module_args
+
+
+class TestVyosBannerModule(TestVyosModule):
+
+    module = vyos_banner
+
+    def setUp(self):
+        self.mock_get_config = patch('ansible.modules.network.vyos.vyos_banner.get_config')
+        self.get_config = self.mock_get_config.start()
+
+        self.mock_load_config = patch('ansible.modules.network.vyos.vyos_banner.load_config')
+        self.load_config = self.mock_load_config.start()
+
+    def tearDown(self):
+        self.mock_get_config.stop()
+        self.mock_load_config.stop()
+
+    def load_fixtures(self, commands=None):
+        self.load_config.return_value = dict(diff=None, session='session')
+
+    def test_vyos_banner_create(self):
+        set_module_args(dict(banner='pre-login', text='test\nbanner\nstring'))
+        commands = ['set system login banner pre-login "test\nbanner\nstring"']
+        self.execute_module(changed=True, commands=commands)
+
+    def test_vyos_banner_remove(self):
+        set_module_args(dict(banner='pre-login', state='absent'))
+        commands = ['delete system login banner pre-login']
+        self.execute_module(changed=True, commands=commands)
