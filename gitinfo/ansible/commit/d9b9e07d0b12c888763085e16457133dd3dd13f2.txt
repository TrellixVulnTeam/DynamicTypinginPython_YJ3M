commit d9b9e07d0b12c888763085e16457133dd3dd13f2
Author: Abhijeet Kasurde <akasurde@redhat.com>
Date:   Wed Jul 24 07:55:55 2019 +0530

    VMware: Add datatypes in documentation (#59221)
    
    * Remove E337 warnings
    * Update docs
    * Fix minor typos
    
    Signed-off-by: Abhijeet Kasurde <akasurde@redhat.com>

diff --git a/lib/ansible/modules/cloud/vmware/vcenter_extension.py b/lib/ansible/modules/cloud/vmware/vcenter_extension.py
index 2c7c05d193..1473954f10 100644
--- a/lib/ansible/modules/cloud/vmware/vcenter_extension.py
+++ b/lib/ansible/modules/cloud/vmware/vcenter_extension.py
@@ -30,36 +30,46 @@ options:
     description:
     - The extension key of the extension to install or uninstall.
     required: True
+    type: str
   version:
     description:
     - The version of the extension you are installing or uninstalling.
     required: True
+    type: str
   name:
     description:
     - Required for C(state=present). The name of the extension you are installing.
+    type: str
   company:
     description:
     - Required for C(state=present). The name of the company that makes the extension.
+    type: str
   description:
     description:
     - Required for C(state=present). A short description of the extension.
+    type: str
   email:
     description:
     - Required for C(state=present). Administrator email to use for extension.
+    type: str
   url:
     description:
     - Required for C(state=present). Link to server hosting extension zip file to install.
+    type: str
   ssl_thumbprint:
     description:
     - Required for C(state=present). SSL thumbprint of the extension hosting server.
+    type: str
   server_type:
     description:
     - Required for C(state=present). Type of server being used to install the extension (SOAP, REST, HTTP, etc.).
     default: vsphere-client-serenity
+    type: str
   client_type:
     description:
     - Required for C(state=present). Type of client the extension is (win32, .net, linux, etc.).
     default: vsphere-client-serenity
+    type: str
   visible:
     description:
     - Show the extension in solution manager inside vCenter.
@@ -70,6 +80,7 @@ options:
     - Add or remove vCenter Extension.
     choices: [absent, present]
     default: present
+    type: str
 extends_documentation_fragment: vmware.documentation
 '''
 
diff --git a/lib/ansible/modules/cloud/vmware/vcenter_folder.py b/lib/ansible/modules/cloud/vmware/vcenter_folder.py
index eef1a1b235..004fd39af7 100644
--- a/lib/ansible/modules/cloud/vmware/vcenter_folder.py
+++ b/lib/ansible/modules/cloud/vmware/vcenter_folder.py
@@ -35,12 +35,14 @@ options:
     - Name of the datacenter.
     required: True
     aliases: ['datacenter_name']
+    type: str
   folder_name:
     description:
     - Name of folder to be managed.
     - This is case sensitive parameter.
     - Folder name should be under 80 characters. This is a VMware restriction.
     required: True
+    type: str
   parent_folder:
     description:
     - Name of the parent folder under which new folder needs to be created.
@@ -48,6 +50,7 @@ options:
     - Please specify unique folder name as there is no way to detect duplicate names.
     - "If user wants to create a folder under '/DC0/vm/vm_folder', this value will be 'vm_folder'."
     required: False
+    type: str
   folder_type:
     description:
     - This is type of folder.
@@ -58,6 +61,7 @@ options:
     - This parameter is required, if C(state) is set to C(present) and parent_folder is absent.
     - This option is ignored, if C(parent_folder) is set.
     default: vm
+    type: str
     required: False
     choices: [ datastore, host, network, vm ]
   state:
@@ -68,6 +72,7 @@ options:
     - If set to C(absent), then folder is unregistered and destroyed.
     default: present
     choices: [ present, absent ]
+    type: str
 extends_documentation_fragment: vmware.documentation
 '''
 
diff --git a/lib/ansible/modules/cloud/vmware/vcenter_license.py b/lib/ansible/modules/cloud/vmware/vcenter_license.py
index e0b48fc37d..e3702bac4c 100644
--- a/lib/ansible/modules/cloud/vmware/vcenter_license.py
+++ b/lib/ansible/modules/cloud/vmware/vcenter_license.py
@@ -28,20 +28,24 @@ options:
     default: {
         'source': 'ansible'
     }
+    type: dict
   license:
     description:
     - The license key to manage in vSphere vCenter.
     required: yes
+    type: str
   state:
     description:
     -  Whether to add (C(present)) or remove (C(absent)) the license key.
     choices: [absent, present]
     default: present
+    type: str
   esxi_hostname:
     description:
     - The hostname of the ESXi server to which the specified license will be assigned.
     - This parameter is optional.
     version_added: '2.8'
+    type: str
   datacenter:
     description:
     - The datacenter name to use for the operation.
diff --git a/lib/ansible/modules/cloud/vmware/vmware_category.py b/lib/ansible/modules/cloud/vmware/vmware_category.py
index b21c4be9dc..8e38fb23de 100644
--- a/lib/ansible/modules/cloud/vmware/vmware_category.py
+++ b/lib/ansible/modules/cloud/vmware/vmware_category.py
@@ -37,22 +37,26 @@ options:
       description:
       - The name of category to manage.
       required: True
+      type: str
     category_description:
       description:
       - The category description.
       - This is required only if C(state) is set to C(present).
       - This parameter is ignored, when C(state) is set to C(absent).
       default: ''
+      type: str
     category_cardinality:
       description:
       - The category cardinality.
       - This parameter is ignored, when updating existing category.
       choices: ['multiple', 'single']
       default: 'multiple'
+      type: str
     new_category_name:
       description:
       - The new name for an existing category.
       - This value is used while updating an existing category.
+      type: str
     state:
       description:
       - The state of category.
@@ -63,6 +67,7 @@ options:
       - Process of updating category only allows name, description change.
       default: 'present'
       choices: [ 'present', 'absent' ]
+      type: str
 extends_documentation_fragment: vmware_rest_client.documentation
 '''
 
diff --git a/lib/ansible/modules/cloud/vmware/vmware_cfg_backup.py b/lib/ansible/modules/cloud/vmware/vmware_cfg_backup.py
index 2b7d343617..5888065356 100644
--- a/lib/ansible/modules/cloud/vmware/vmware_cfg_backup.py
+++ b/lib/ansible/modules/cloud/vmware/vmware_cfg_backup.py
@@ -33,20 +33,24 @@ options:
         description:
             - Name of ESXi server. This is required only if authentication against a vCenter is done.
         required: False
+        type: str
     dest:
         description:
             - The destination where the ESXi configuration bundle will be saved. The I(dest) can be a folder or a file.
             - If I(dest) is a folder, the backup file will be saved in the folder with the default filename generated from the ESXi server.
             - If I(dest) is a file, the backup file will be saved with that filename. The file extension will always be .tgz.
+        type: path
     src:
         description:
             - The file containing the ESXi configuration that will be restored.
+        type: path
     state:
         description:
             - If C(saved), the .tgz backup bundle will be saved in I(dest).
             - If C(absent), the host configuration will be reset to default values.
             - If C(loaded), the backup file in I(src) will be loaded to the ESXi host rewriting the hosts settings.
         choices: [saved, absent, loaded]
+        type: str
 extends_documentation_fragment: vmware.documentation
 '''
 
diff --git a/lib/ansible/modules/cloud/vmware/vmware_cluster_facts.py b/lib/ansible/modules/cloud/vmware/vmware_cluster_facts.py
index 82fbfdb15d..cc40d3a47c 100644
--- a/lib/ansible/modules/cloud/vmware/vmware_cluster_facts.py
+++ b/lib/ansible/modules/cloud/vmware/vmware_cluster_facts.py
@@ -34,12 +34,14 @@ options:
      - Datacenter to search for cluster/s.
      - This parameter is required, if C(cluster_name) is not supplied.
      required: False
+     type: str
    cluster_name:
      description:
      - Name of the cluster.
      - If set, facts of this cluster will be returned.
      - This parameter is required, if C(datacenter) is not supplied.
      required: False
+     type: str
 extends_documentation_fragment: vmware.documentation
 '''
 
diff --git a/lib/ansible/modules/cloud/vmware/vmware_datacenter.py b/lib/ansible/modules/cloud/vmware/vmware_datacenter.py
index f703bc9d08..1bb707e4f0 100644
--- a/lib/ansible/modules/cloud/vmware/vmware_datacenter.py
+++ b/lib/ansible/modules/cloud/vmware/vmware_datacenter.py
@@ -34,11 +34,13 @@ options:
       description:
       - The name of the datacenter the cluster will be created in.
       required: True
+      type: str
     state:
       description:
       - If the datacenter should be present or absent.
       choices: [ present, absent ]
       default: present
+      type: str
 extends_documentation_fragment: vmware.documentation
 '''
 
diff --git a/lib/ansible/modules/cloud/vmware/vmware_datastore_cluster.py b/lib/ansible/modules/cloud/vmware/vmware_datastore_cluster.py
index 4b7fb293e6..ee26ff0bb2 100644
--- a/lib/ansible/modules/cloud/vmware/vmware_datastore_cluster.py
+++ b/lib/ansible/modules/cloud/vmware/vmware_datastore_cluster.py
@@ -38,15 +38,18 @@ options:
       - Mutually exclusive with C(folder) parameter.
       required: False
       aliases: [ datacenter ]
+      type: str
     datastore_cluster_name:
       description:
       - The name of the datastore cluster.
       required: True
+      type: str
     state:
       description:
       - If the datastore cluster should be present or absent.
       choices: [ present, absent ]
       default: present
+      type: str
     folder:
       description:
       - Destination folder, absolute path to place datastore cluster in.
@@ -63,6 +66,7 @@ options:
       - '   folder: /folder1/datacenter1/datastore/folder2'
       required: False
       version_added: '2.9'
+      type: str
 extends_documentation_fragment: vmware.documentation
 '''
 
diff --git a/lib/ansible/modules/cloud/vmware/vmware_datastore_facts.py b/lib/ansible/modules/cloud/vmware/vmware_datastore_facts.py
index ec7087b71f..48f4b85248 100644
--- a/lib/ansible/modules/cloud/vmware/vmware_datastore_facts.py
+++ b/lib/ansible/modules/cloud/vmware/vmware_datastore_facts.py
@@ -35,18 +35,21 @@ options:
      - Name of the datastore to match.
      - If set, facts of specific datastores are returned.
      required: False
+     type: str
    datacenter:
      description:
      - Datacenter to search for datastores.
      - This parameter is required, if C(cluster) is not supplied.
      required: False
      aliases: ['datacenter_name']
+     type: str
    cluster:
      description:
      - Cluster to search for datastores.
      - If set, facts of datastores belonging this clusters will be returned.
      - This parameter is required, if C(datacenter) is not supplied.
      required: False
+     type: str
    gather_nfs_mount_info:
     description:
     - Gather mount information of NFS datastores.
diff --git a/lib/ansible/modules/cloud/vmware/vmware_datastore_maintenancemode.py b/lib/ansible/modules/cloud/vmware/vmware_datastore_maintenancemode.py
index 7ad6d9f352..4510595847 100644
--- a/lib/ansible/modules/cloud/vmware/vmware_datastore_maintenancemode.py
+++ b/lib/ansible/modules/cloud/vmware/vmware_datastore_maintenancemode.py
@@ -34,15 +34,18 @@ options:
       description:
       - Name of datastore to manage.
       - If C(datastore_cluster) or C(cluster_name) are not set, this parameter is required.
+      type: str
     datastore_cluster:
       description:
       - Name of the datastore cluster from all child datastores to be managed.
       - If C(datastore) or C(cluster_name) are not set, this parameter is required.
+      type: str
     cluster_name:
       description:
       - Name of the cluster where datastore is connected to.
       - If multiple datastores are connected to the given cluster, then all datastores will be managed by C(state).
       - If C(datastore) or C(datastore_cluster) are not set, this parameter is required.
+      type: str
     state:
       description:
       - If set to C(present), then enter datastore into maintenance mode.
@@ -52,6 +55,7 @@ options:
       choices: [ present, absent ]
       default: present
       required: False
+      type: str
 extends_documentation_fragment: vmware.documentation
 '''
 
diff --git a/lib/ansible/modules/cloud/vmware/vmware_dns_config.py b/lib/ansible/modules/cloud/vmware/vmware_dns_config.py
index f1834ce1a2..d86d5e527d 100644
--- a/lib/ansible/modules/cloud/vmware/vmware_dns_config.py
+++ b/lib/ansible/modules/cloud/vmware/vmware_dns_config.py
@@ -30,14 +30,17 @@ options:
         description:
             - The hostname that an ESXi host should be changed to.
         required: True
+        type: str
     domainname:
         description:
             - The domain the ESXi host should be apart of.
         required: True
+        type: str
     dns_servers:
         description:
             - The DNS servers that the host should be configured to use.
         required: True
+        type: list
 extends_documentation_fragment: vmware.documentation
 '''
 
diff --git a/lib/ansible/modules/cloud/vmware/vmware_drs_group.py b/lib/ansible/modules/cloud/vmware/vmware_drs_group.py
index 0e1dbc4c5c..17d734e797 100644
--- a/lib/ansible/modules/cloud/vmware/vmware_drs_group.py
+++ b/lib/ansible/modules/cloud/vmware/vmware_drs_group.py
@@ -29,21 +29,25 @@ options:
     description:
       - "Cluster to create vm/host group."
     required: true
+    type: str
   datacenter:
     aliases:
       - datacenter_name
     description:
       - "Datacenter to search for given cluster. If not set, we use first cluster we encounter with C(cluster_name)."
     required: false
+    type: str
   group_name:
     description:
       - "The name of the group to create or remove."
     required: true
+    type: str
   hosts:
     description:
       - "List of hosts to create in group."
       - "Required only if C(vms) is not set."
     required: false
+    type: list
   state:
     choices:
       - present
@@ -53,11 +57,13 @@ options:
       - "If set to C(present) and the group doesn't exists then the group will be created."
       - "If set to C(absent) and the group exists then the group will be deleted."
     required: true
+    type: str
   vms:
     description:
       - "List of vms to create in group."
       - "Required only if C(hosts) is not set."
     required: false
+    type: list
 requirements:
   - "python >= 2.6"
   - PyVmomi
@@ -256,7 +262,7 @@ class VmwareDrsGroupManager(PyVmomi):
 
     def __set_vm_obj_list(self, vm_list=None, cluster_obj=None):
         """
-        Function pupulate vm object list from list of vms
+        Function populate vm object list from list of vms
         Args:
             vm_list: List of vm names
 
@@ -288,7 +294,7 @@ class VmwareDrsGroupManager(PyVmomi):
 
     def __set_host_obj_list(self, host_list=None):
         """
-        Function pupulate host object list from list of hostnames
+        Function populate host object list from list of hostnames
         Args:
             host_list: List of host names
 
diff --git a/lib/ansible/modules/cloud/vmware/vmware_drs_group_facts.py b/lib/ansible/modules/cloud/vmware/vmware_drs_group_facts.py
index 02c436786d..fb303addd7 100644
--- a/lib/ansible/modules/cloud/vmware/vmware_drs_group_facts.py
+++ b/lib/ansible/modules/cloud/vmware/vmware_drs_group_facts.py
@@ -31,12 +31,14 @@ options:
       - "If set, facts of DRS groups belonging this cluster will be returned."
       - "Not needed if C(datacenter) is set."
     required: false
+    type: str
   datacenter:
     aliases:
       - datacenter_name
     description:
       - "Datacenter to search for DRS VM/Host groups."
     required: true
+    type: str
 requirements:
   - "python >= 2.6"
   - PyVmomi
diff --git a/lib/ansible/modules/cloud/vmware/vmware_drs_rule_facts.py b/lib/ansible/modules/cloud/vmware/vmware_drs_rule_facts.py
index c9bd9992a1..6ad2eba639 100644
--- a/lib/ansible/modules/cloud/vmware/vmware_drs_rule_facts.py
+++ b/lib/ansible/modules/cloud/vmware/vmware_drs_rule_facts.py
@@ -34,11 +34,13 @@ options:
     - Name of the cluster.
     - DRS facts for the given cluster will be returned.
     - This is required parameter if C(datacenter) parameter is not provided.
+    type: str
   datacenter:
     description:
     - Name of the datacenter.
     - DRS facts for all the clusters from the given datacenter will be returned.
     - This is required parameter if C(cluster_name) parameter is not provided.
+    type: str
 extends_documentation_fragment: vmware.documentation
 '''
 
diff --git a/lib/ansible/modules/cloud/vmware/vmware_dvs_host.py b/lib/ansible/modules/cloud/vmware/vmware_dvs_host.py
index 9dc102e53f..397f41b409 100644
--- a/lib/ansible/modules/cloud/vmware/vmware_dvs_host.py
+++ b/lib/ansible/modules/cloud/vmware/vmware_dvs_host.py
@@ -37,20 +37,24 @@ options:
         description:
         - The ESXi hostname.
         required: True
+        type: str
     switch_name:
         description:
         - The name of the Distributed vSwitch.
         required: True
+        type: str
     vmnics:
         description:
         - The ESXi hosts vmnics to use with the Distributed vSwitch.
         required: True
+        type: list
     state:
         description:
         - If the host should be present or absent attached to the vSwitch.
         choices: [ present, absent ]
         required: True
         default: 'present'
+        type: str
     vendor_specific_config:
         description:
             - List of key,value dictionaries for the Vendor Specific Configuration.
@@ -59,6 +63,7 @@ options:
             - '- C(value) (str): Value of setting. (default: None)'
         required: False
         version_added: '2.9'
+        type: list
 extends_documentation_fragment: vmware.documentation
 '''
 
diff --git a/lib/ansible/modules/cloud/vmware/vmware_dvs_portgroup.py b/lib/ansible/modules/cloud/vmware/vmware_dvs_portgroup.py
index 823e4bbefc..995e4721bc 100644
--- a/lib/ansible/modules/cloud/vmware/vmware_dvs_portgroup.py
+++ b/lib/ansible/modules/cloud/vmware/vmware_dvs_portgroup.py
@@ -35,20 +35,24 @@ options:
         description:
             - The name of the portgroup that is to be created or deleted.
         required: True
+        type: str
     switch_name:
         description:
             - The name of the distributed vSwitch the port group should be created on.
         required: True
+        type: str
     vlan_id:
         description:
             - The VLAN ID that should be configured with the portgroup, use 0 for no VLAN.
             - 'If C(vlan_trunk) is configured to be I(true), this can be a combination of multiple ranges and numbers, example: 1-200, 205, 400-4094.'
             - The valid C(vlan_id) range is from 0 to 4094. Overlapping ranges are allowed.
         required: True
+        type: str
     num_ports:
         description:
             - The number of ports the portgroup should contain.
         required: True
+        type: int
     portgroup_type:
         description:
             - See VMware KB 1022312 regarding portgroup types.
@@ -57,6 +61,7 @@ options:
             - 'earlyBinding'
             - 'lateBinding'
             - 'ephemeral'
+        type: str
     state:
         description:
             - Determines if the portgroup should be present or not.
@@ -87,6 +92,7 @@ options:
             forged_transmits: False,
             mac_changes: False,
         }
+        type: dict
     teaming_policy:
         description:
             - Dictionary which configures the different teaming values for portgroup.
@@ -105,6 +111,7 @@ options:
             'inbound_policy': False,
             'rolling_order': False
         }
+        type: dict
     port_policy:
         description:
             - Dictionary which configures the advanced policy settings for the portgroup.
@@ -135,6 +142,7 @@ options:
             'vlan_override': False,
             'ipfix_override': False
         }
+        type: dict
 
 extends_documentation_fragment: vmware.documentation
 '''
diff --git a/lib/ansible/modules/cloud/vmware/vmware_dvswitch.py b/lib/ansible/modules/cloud/vmware/vmware_dvswitch.py
index 4e19795268..4124596027 100644
--- a/lib/ansible/modules/cloud/vmware/vmware_dvswitch.py
+++ b/lib/ansible/modules/cloud/vmware/vmware_dvswitch.py
@@ -53,7 +53,7 @@ options:
             - The version of the Distributed Switch to create.
             - Can be 6.0.0, 5.5.0, 5.1.0, 5.0.0 with a vCenter running vSphere 6.0 and 6.5.
             - Can be 6.6.0, 6.5.0, 6.0.0 with a vCenter running vSphere 6.7.
-            - The version must macht the version of the ESXi hosts you want to connect.
+            - The version must match the version of the ESXi hosts you want to connect.
             - The version of the vCenter server is used if not specified.
             - Required only if C(state) is set to C(present).
         version_added: 2.5
@@ -114,7 +114,7 @@ options:
         type: str
     contact:
         description:
-            - Dictionary which configures administrtor contact name and description for the Distributed Switch.
+            - Dictionary which configures administrator contact name and description for the Distributed Switch.
             - 'Valid attributes are:'
             - '- C(name) (str): Administrator name.'
             - '- C(description) (str): Description or other details.'
diff --git a/lib/ansible/modules/cloud/vmware/vmware_dvswitch_lacp.py b/lib/ansible/modules/cloud/vmware/vmware_dvswitch_lacp.py
index b735c9f8b8..5e1b821a6a 100644
--- a/lib/ansible/modules/cloud/vmware/vmware_dvswitch_lacp.py
+++ b/lib/ansible/modules/cloud/vmware/vmware_dvswitch_lacp.py
@@ -35,6 +35,7 @@ options:
             - The name of the Distributed Switch to manage.
         required: True
         aliases: ['dvswitch']
+        type: str
     support_mode:
         description:
             - The LACP support mode.
diff --git a/lib/ansible/modules/cloud/vmware/vmware_dvswitch_pvlans.py b/lib/ansible/modules/cloud/vmware/vmware_dvswitch_pvlans.py
index 1ae7867693..4b395c3c51 100644
--- a/lib/ansible/modules/cloud/vmware/vmware_dvswitch_pvlans.py
+++ b/lib/ansible/modules/cloud/vmware/vmware_dvswitch_pvlans.py
@@ -48,7 +48,7 @@ options:
     secondary_pvlans:
         description:
             - A list of VLAN IDs that should be configured as Secondary PVLANs.
-            - 'C(primary_pvlans) need to be specified to create any Secodary PVLAN.'
+            - 'C(primary_pvlans) need to be specified to create any Secondary PVLAN.'
             - If C(primary_pvlans) isn't specified, all PVLANs will be deleted if present.
             - Each member of the list requires primary_pvlan_id (int), secondary_pvlan_id (int), and pvlan_type (str) to be set.
             - The type of the secondary PVLAN can be isolated or community. The secondary promiscuous PVLAN will be created automatically.
diff --git a/lib/ansible/modules/cloud/vmware/vmware_dvswitch_uplink_pg.py b/lib/ansible/modules/cloud/vmware/vmware_dvswitch_uplink_pg.py
index 240d1fea82..9f50933c6c 100644
--- a/lib/ansible/modules/cloud/vmware/vmware_dvswitch_uplink_pg.py
+++ b/lib/ansible/modules/cloud/vmware/vmware_dvswitch_uplink_pg.py
@@ -64,6 +64,7 @@ options:
             traffic_filter_override: False,
         }
         aliases: ['port_policy']
+        type: dict
     vlan_trunk_range:
         description:
             - The VLAN trunk range that should be configured with the uplink portgroup.
@@ -82,6 +83,7 @@ options:
             status: 'disabled',
             mode: 'passive',
         }
+        type: dict
     netflow_enabled:
         description:
             - Indicates if NetFlow is enabled on the uplink portgroup.
diff --git a/lib/ansible/modules/cloud/vmware/vmware_export_ovf.py b/lib/ansible/modules/cloud/vmware/vmware_export_ovf.py
index 176266c851..c0660bfe2c 100644
--- a/lib/ansible/modules/cloud/vmware/vmware_export_ovf.py
+++ b/lib/ansible/modules/cloud/vmware/vmware_export_ovf.py
@@ -29,10 +29,12 @@ options:
     description:
     - Name of the virtual machine to export.
     - This is a required parameter, if parameter C(uuid) or C(moid) is not supplied.
+    type: str
   uuid:
     description:
     - Uuid of the virtual machine to export.
     - This is a required parameter, if parameter C(name) or C(moid) is not supplied.
+    type: str
   moid:
     description:
     - Managed Object ID of the instance to manage if known, this is a unique identifier only within a single vCenter instance.
@@ -44,6 +46,7 @@ options:
     description:
     - Datacenter name of the virtual machine to export.
     - This parameter is case sensitive.
+    type: str
   folder:
     description:
     - Destination folder, absolute path to find the specified guest.
@@ -61,11 +64,13 @@ options:
     - '   folder: /folder1/datacenter1/vm'
     - '   folder: folder1/datacenter1/vm'
     - '   folder: /folder1/datacenter1/vm/folder2'
+    type: str
   export_dir:
     description:
     - Absolute path to place the exported files on the server running this task, must have write permission.
     - If folder not exist will create it, also create a folder under this path named with VM name.
     required: yes
+    type: str
   export_with_images:
     default: false
     description:
diff --git a/lib/ansible/modules/cloud/vmware/vmware_guest_boot_facts.py b/lib/ansible/modules/cloud/vmware/vmware_guest_boot_facts.py
index 8942ed4b54..834f5a6ede 100644
--- a/lib/ansible/modules/cloud/vmware/vmware_guest_boot_facts.py
+++ b/lib/ansible/modules/cloud/vmware/vmware_guest_boot_facts.py
@@ -34,10 +34,12 @@ options:
      description:
      - Name of the VM to work with.
      - This is required if C(uuid) or C(moid) parameter is not supplied.
+     type: str
    uuid:
      description:
      - UUID of the instance to manage if known, this is VMware's BIOS UUID by default.
      - This is required if C(name) or C(moid) parameter is not supplied.
+     type: str
    moid:
      description:
      - Managed Object ID of the instance to manage if known, this is a unique identifier only within a single vCenter instance.
@@ -55,6 +57,7 @@ options:
      - If multiple virtual machines matching the name, use the first or last found.
      default: 'first'
      choices: ['first', 'last']
+     type: str
 extends_documentation_fragment: vmware.documentation
 '''
 
diff --git a/lib/ansible/modules/cloud/vmware/vmware_guest_boot_manager.py b/lib/ansible/modules/cloud/vmware/vmware_guest_boot_manager.py
index 5de18ef670..3bfe689668 100644
--- a/lib/ansible/modules/cloud/vmware/vmware_guest_boot_manager.py
+++ b/lib/ansible/modules/cloud/vmware/vmware_guest_boot_manager.py
@@ -34,10 +34,12 @@ options:
      description:
      - Name of the VM to work with.
      - This is required if C(uuid) or C(moid) parameter is not supplied.
+     type: str
    uuid:
      description:
      - UUID of the instance to manage if known, this is VMware's BIOS UUID by default.
      - This is required if C(name) or C(moid) parameter is not supplied.
+     type: str
    moid:
      description:
      - Managed Object ID of the instance to manage if known, this is a unique identifier only within a single vCenter instance.
@@ -54,15 +56,18 @@ options:
      description:
      - List of the boot devices.
      default: []
+     type: list
    name_match:
      description:
      - If multiple virtual machines matching the name, use the first or last found.
      default: 'first'
      choices: ['first', 'last']
+     type: str
    boot_delay:
      description:
      - Delay in milliseconds before starting the boot sequence.
      default: 0
+     type: int
    enter_bios_setup:
      description:
      - If set to C(True), the virtual machine automatically enters BIOS setup the next time it boots.
@@ -80,10 +85,12 @@ options:
      - Specify the time in milliseconds between virtual machine boot failure and subsequent attempt to boot again.
      - If set, will automatically set C(boot_retry_enabled) to C(True) as this parameter is required.
      default: 0
+     type: int
    boot_firmware:
      description:
      - Choose which firmware should be used to boot the virtual machine.
      choices: ["bios", "efi"]
+     type: str
    secure_boot_enabled:
      description:
      - Choose if EFI secure boot should be enabled.  EFI secure boot can only be enabled with boot_firmware = efi
diff --git a/lib/ansible/modules/cloud/vmware/vmware_guest_custom_attribute_defs.py b/lib/ansible/modules/cloud/vmware/vmware_guest_custom_attribute_defs.py
index 478179bae5..ae66304c94 100644
--- a/lib/ansible/modules/cloud/vmware/vmware_guest_custom_attribute_defs.py
+++ b/lib/ansible/modules/cloud/vmware/vmware_guest_custom_attribute_defs.py
@@ -36,6 +36,7 @@ options:
      - Name of the custom attribute definition.
      - This is required parameter, if C(state) is set to C(present) or C(absent).
      required: False
+     type: str
    state:
      description:
      - Manage definition of custom attributes.
@@ -46,6 +47,7 @@ options:
      default: 'present'
      choices: ['present', 'absent']
      required: True
+     type: str
 extends_documentation_fragment: vmware.documentation
 '''
 
diff --git a/lib/ansible/modules/cloud/vmware/vmware_guest_custom_attributes.py b/lib/ansible/modules/cloud/vmware/vmware_guest_custom_attributes.py
index 89a0ef96eb..3f5becc348 100644
--- a/lib/ansible/modules/cloud/vmware/vmware_guest_custom_attributes.py
+++ b/lib/ansible/modules/cloud/vmware/vmware_guest_custom_attributes.py
@@ -38,6 +38,7 @@ options:
      - Name of the virtual machine to work with.
      - This is required parameter, if C(uuid) or C(moid) is not supplied.
      required: True
+     type: str
    state:
      description:
      - The action to take.
@@ -45,10 +46,12 @@ options:
      - If set to C(absent), then custom attribute is removed.
      default: 'present'
      choices: ['present', 'absent']
+     type: str
    uuid:
      description:
      - UUID of the virtual machine to manage if known. This is VMware's unique identifier.
      - This is required parameter, if C(name) or C(moid) is not supplied.
+     type: str
    moid:
      description:
      - Managed Object ID of the instance to manage if known, this is a unique identifier only within a single vCenter instance.
@@ -65,15 +68,18 @@ options:
      description:
      - Absolute path to find an existing guest.
      - This is required parameter, if C(name) is supplied and multiple virtual machines with same name are found.
+     type: str
    datacenter:
      description:
      - Datacenter name where the virtual machine is located in.
      required: True
+     type: str
    attributes:
      description:
      - A list of name and value of custom attributes that needs to be manage.
      - Value of custom attribute is not required and will be ignored, if C(state) is set to C(absent).
      default: []
+     type: list
 extends_documentation_fragment: vmware.documentation
 '''
 
diff --git a/lib/ansible/modules/cloud/vmware/vmware_guest_customization_facts.py b/lib/ansible/modules/cloud/vmware/vmware_guest_customization_facts.py
index cb4319d32f..15b7ea458b 100644
--- a/lib/ansible/modules/cloud/vmware/vmware_guest_customization_facts.py
+++ b/lib/ansible/modules/cloud/vmware/vmware_guest_customization_facts.py
@@ -34,6 +34,7 @@ options:
      description:
      - Name of customization specification to find.
      required: False
+     type: str
 extends_documentation_fragment: vmware.documentation
 '''
 
diff --git a/lib/ansible/modules/cloud/vmware/vmware_guest_disk.py b/lib/ansible/modules/cloud/vmware/vmware_guest_disk.py
index 679b38cb31..7d197bb466 100644
--- a/lib/ansible/modules/cloud/vmware/vmware_guest_disk.py
+++ b/lib/ansible/modules/cloud/vmware/vmware_guest_disk.py
@@ -37,10 +37,12 @@ options:
      description:
      - Name of the virtual machine.
      - This is a required parameter, if parameter C(uuid) or C(moid) is not supplied.
+     type: str
    uuid:
      description:
      - UUID of the instance to gather facts if known, this is VMware's unique identifier.
      - This is a required parameter, if parameter C(name) or C(moid) is not supplied.
+     type: str
    moid:
      description:
      - Managed Object ID of the instance to manage if known, this is a unique identifier only within a single vCenter instance.
@@ -62,10 +64,12 @@ options:
      - '   folder: /folder1/datacenter1/vm'
      - '   folder: folder1/datacenter1/vm'
      - '   folder: /folder1/datacenter1/vm/folder2'
+     type: str
    datacenter:
      description:
      - The datacenter name to which virtual machine belongs to.
      required: True
+     type: str
    use_instance_uuid:
      description:
      - Whether to use the VMware instance UUID rather than the BIOS UUID.
@@ -102,6 +106,7 @@ options:
      - '   If C(state) is set to C(present) and disk exists with different size, disk size is increased.'
      - '   Reducing disk size is not allowed.'
      default: []
+     type: list
 extends_documentation_fragment: vmware.documentation
 '''
 
diff --git a/lib/ansible/modules/cloud/vmware/vmware_guest_disk_facts.py b/lib/ansible/modules/cloud/vmware/vmware_guest_disk_facts.py
index 13fea155e0..335e0db855 100644
--- a/lib/ansible/modules/cloud/vmware/vmware_guest_disk_facts.py
+++ b/lib/ansible/modules/cloud/vmware/vmware_guest_disk_facts.py
@@ -37,10 +37,12 @@ options:
      description:
      - Name of the virtual machine.
      - This is required parameter, if parameter C(uuid) or C(moid) is not supplied.
+     type: str
    uuid:
      description:
      - UUID of the instance to gather facts if known, this is VMware's unique identifier.
      - This is required parameter, if parameter C(name) or C(moid) is not supplied.
+     type: str
    moid:
      description:
      - Managed Object ID of the instance to manage if known, this is a unique identifier only within a single vCenter instance.
@@ -68,10 +70,12 @@ options:
      - '   folder: /folder1/datacenter1/vm'
      - '   folder: folder1/datacenter1/vm'
      - '   folder: /folder1/datacenter1/vm/folder2'
+     type: str
    datacenter:
      description:
      - The datacenter name to which virtual machine belongs to.
      required: True
+     type: str
 extends_documentation_fragment: vmware.documentation
 '''
 
diff --git a/lib/ansible/modules/cloud/vmware/vmware_guest_facts.py b/lib/ansible/modules/cloud/vmware/vmware_guest_facts.py
index a500c41dd4..850e2856e1 100644
--- a/lib/ansible/modules/cloud/vmware/vmware_guest_facts.py
+++ b/lib/ansible/modules/cloud/vmware/vmware_guest_facts.py
@@ -35,15 +35,18 @@ options:
      description:
      - Name of the VM to work with
      - This is required if C(uuid) or C(moid) is not supplied.
+     type: str
    name_match:
      description:
      - If multiple VMs matching the name, use the first or last found
      default: 'first'
      choices: ['first', 'last']
+     type: str
    uuid:
      description:
      - UUID of the instance to manage if known, this is VMware's unique identifier.
      - This is required if C(name) or C(moid) is not supplied.
+     type: str
    use_instance_uuid:
      description:
      - Whether to use the VMware instance UUID rather than the BIOS UUID.
@@ -71,10 +74,12 @@ options:
      - '   folder: /folder1/datacenter1/vm'
      - '   folder: folder1/datacenter1/vm'
      - '   folder: /folder1/datacenter1/vm/folder2'
+     type: str
    datacenter:
      description:
      - Destination datacenter for the deploy operation
      required: True
+     type: str
    tags:
      description:
      - Whether to show tags or not.
diff --git a/lib/ansible/modules/cloud/vmware/vmware_guest_file_operation.py b/lib/ansible/modules/cloud/vmware/vmware_guest_file_operation.py
index f200424ca2..a4ea0226cb 100644
--- a/lib/ansible/modules/cloud/vmware/vmware_guest_file_operation.py
+++ b/lib/ansible/modules/cloud/vmware/vmware_guest_file_operation.py
@@ -34,10 +34,12 @@ options:
         description:
             - The datacenter hosting the virtual machine.
             - If set, it will help to speed up virtual machine search.
+        type: str
     cluster:
         description:
             - The cluster hosting the virtual machine.
             - If set, it will help to speed up virtual machine search.
+        type: str
     folder:
         description:
             - Destination folder, absolute path to find an existing guest or create the new guest.
@@ -55,10 +57,12 @@ options:
             - '   folder: /folder1/datacenter1/vm/folder2'
             - '   folder: vm/folder2'
             - '   folder: folder2'
+        type: str
     vm_id:
         description:
             - Name of the virtual machine to work with.
         required: True
+        type: str
     vm_id_type:
         description:
             - The VMware identification method by which the virtual machine will be identified.
@@ -69,14 +73,17 @@ options:
             - 'dns_name'
             - 'inventory_path'
             - 'vm_name'
+        type: str
     vm_username:
         description:
             - The user to login in to the virtual machine.
         required: True
+        type: str
     vm_password:
         description:
             - The password used to login-in to the virtual machine.
         required: True
+        type: str
     directory:
         description:
             - Create or delete a directory.
@@ -90,6 +97,7 @@ options:
             - '  suffix (str): temporary directory suffix (required for mktemp)'
             - '  recurse (boolean): Not required, default (false)'
         required: False
+        type: dict
     copy:
         description:
             - Copy file to vm without requiring network.
@@ -98,6 +106,7 @@ options:
             - '  dest: file destination, path must be exist'
             - '  overwrite: False or True (not required, default False)'
         required: False
+        type: dict
     fetch:
         description:
             - Get file from virtual machine without requiring network.
@@ -105,6 +114,7 @@ options:
             - '  src: The file on the remote system to fetch. This I(must) be a file, not a directory'
             - '  dest: file destination on localhost, path must be exist'
         required: False
+        type: dict
         version_added: 2.5
 
 extends_documentation_fragment: vmware.documentation
diff --git a/lib/ansible/modules/cloud/vmware/vmware_guest_find.py b/lib/ansible/modules/cloud/vmware/vmware_guest_find.py
index 4098527855..880bea4cdd 100644
--- a/lib/ansible/modules/cloud/vmware/vmware_guest_find.py
+++ b/lib/ansible/modules/cloud/vmware/vmware_guest_find.py
@@ -32,10 +32,12 @@ options:
      description:
      - Name of the VM to work with.
      - This is required if C(uuid) parameter is not supplied.
+     type: str
    uuid:
      description:
      - UUID of the instance to manage if known, this is VMware's BIOS UUID by default.
      - This is required if C(name) parameter is not supplied.
+     type: str
    use_instance_uuid:
      description:
      - Whether to use the VMware instance UUID rather than the BIOS UUID.
@@ -46,6 +48,7 @@ options:
      description:
      - Destination datacenter for the find operation.
      - Deprecated in 2.5, will be removed in 2.9 release.
+     type: str
 extends_documentation_fragment: vmware.documentation
 '''
 
diff --git a/lib/ansible/modules/cloud/vmware/vmware_guest_move.py b/lib/ansible/modules/cloud/vmware/vmware_guest_move.py
index eea4b0c1d4..13a05a01e9 100644
--- a/lib/ansible/modules/cloud/vmware/vmware_guest_move.py
+++ b/lib/ansible/modules/cloud/vmware/vmware_guest_move.py
@@ -33,10 +33,12 @@ options:
         description:
             - Name of the existing virtual machine to move.
             - This is required if C(uuid) or C(moid) is not supplied.
+        type: str
    uuid:
         description:
             - UUID of the virtual machine to manage if known, this is VMware's unique identifier.
             - This is required if C(name) or C(moid) is not supplied.
+        type: str
    moid:
         description:
             - Managed Object ID of the instance to manage if known, this is a unique identifier only within a single vCenter instance.
@@ -54,6 +56,7 @@ options:
             - If multiple virtual machines matching the name, use the first or last found.
         default: 'first'
         choices: [ first, last ]
+        type: str
    dest_folder:
         description:
             - Absolute path to move an existing guest
@@ -70,10 +73,12 @@ options:
             - '   dest_folder: folder1/datacenter1/vm'
             - '   dest_folder: /folder1/datacenter1/vm/folder2'
         required: True
+        type: str
    datacenter:
         description:
             - Destination datacenter for the move operation
         required: True
+        type: str
 extends_documentation_fragment: vmware.documentation
 '''
 
diff --git a/lib/ansible/modules/cloud/vmware/vmware_guest_powerstate.py b/lib/ansible/modules/cloud/vmware/vmware_guest_powerstate.py
index 0a0bc9efef..a4c2da57f3 100644
--- a/lib/ansible/modules/cloud/vmware/vmware_guest_powerstate.py
+++ b/lib/ansible/modules/cloud/vmware/vmware_guest_powerstate.py
@@ -29,19 +29,23 @@ options:
     - Set the state of the virtual machine.
     choices: [ powered-off, powered-on, reboot-guest, restarted, shutdown-guest, suspended, present]
     default: present
+    type: str
   name:
     description:
     - Name of the virtual machine to work with.
     - Virtual machine names in vCenter are not necessarily unique, which may be problematic, see C(name_match).
+    type: str
   name_match:
     description:
     - If multiple virtual machines matching the name, use the first or last found.
     default: first
     choices: [ first, last ]
+    type: str
   uuid:
     description:
     - UUID of the instance to manage if known, this is VMware's unique identifier.
     - This is required if C(name) or C(moid) is not supplied.
+    type: str
   moid:
     description:
     - Managed Object ID of the instance to manage if known, this is a unique identifier only within a single vCenter instance.
@@ -68,11 +72,13 @@ options:
     - '   folder: /folder1/datacenter1/vm'
     - '   folder: folder1/datacenter1/vm'
     - '   folder: /folder1/datacenter1/vm/folder2'
+    type: str
   scheduled_at:
     description:
     - Date and time in string format at which specificed task needs to be performed.
     - "The required format for date and time - 'dd/mm/yyyy hh:mm'."
     - Scheduling task requires vCenter server. A standalone ESXi server does not support this option.
+    type: str
   schedule_task_name:
     description:
     - Name of schedule task.
@@ -108,6 +114,7 @@ options:
     - The value sets a timeout in seconds for the module to wait for the state change.
     default: 0
     version_added: '2.6'
+    type: int
 extends_documentation_fragment: vmware.documentation
 '''
 
diff --git a/lib/ansible/modules/cloud/vmware/vmware_guest_snapshot.py b/lib/ansible/modules/cloud/vmware/vmware_guest_snapshot.py
index c6c0da07a8..119eace575 100644
--- a/lib/ansible/modules/cloud/vmware/vmware_guest_snapshot.py
+++ b/lib/ansible/modules/cloud/vmware/vmware_guest_snapshot.py
@@ -41,19 +41,23 @@ options:
      required: True
      choices: ['present', 'absent', 'revert', 'remove_all']
      default: 'present'
+     type: str
    name:
      description:
      - Name of the virtual machine to work with.
      - This is required parameter, if C(uuid) or C(moid) is not supplied.
+     type: str
    name_match:
      description:
      - If multiple VMs matching the name, use the first or last found.
      default: 'first'
      choices: ['first', 'last']
+     type: str
    uuid:
      description:
      - UUID of the instance to manage if known, this is VMware's BIOS UUID by default.
      - This is required if C(name) or C(moid) parameter is not supplied.
+     type: str
    moid:
      description:
      - Managed Object ID of the instance to manage if known, this is a unique identifier only within a single vCenter instance.
@@ -81,18 +85,22 @@ options:
      - '   folder: /folder1/datacenter1/vm'
      - '   folder: folder1/datacenter1/vm'
      - '   folder: /folder1/datacenter1/vm/folder2'
+     type: str
    datacenter:
      description:
      - Destination datacenter for the deploy operation.
      required: True
+     type: str
    snapshot_name:
      description:
      - Sets the snapshot name to manage.
      - This param is required only if state is not C(remove_all)
+     type: str
    description:
      description:
      - Define an arbitrary description to attach to snapshot.
      default: ''
+     type: str
    quiesce:
      description:
      - If set to C(true) and virtual machine is powered on, it will quiesce the file system in virtual machine.
@@ -123,10 +131,12 @@ options:
      description:
      - Value to rename the existing snapshot to.
      version_added: "2.5"
+     type: str
    new_description:
      description:
      - Value to change the description of an existing snapshot to.
      version_added: "2.5"
+     type: str
 extends_documentation_fragment: vmware.documentation
 '''
 
diff --git a/lib/ansible/modules/cloud/vmware/vmware_guest_snapshot_facts.py b/lib/ansible/modules/cloud/vmware/vmware_guest_snapshot_facts.py
index a329b228cf..76f281b666 100644
--- a/lib/ansible/modules/cloud/vmware/vmware_guest_snapshot_facts.py
+++ b/lib/ansible/modules/cloud/vmware/vmware_guest_snapshot_facts.py
@@ -33,11 +33,13 @@ options:
      description:
      - Name of the VM to work with.
      - This is required if C(uuid) or C(moid) is not supplied.
+     type: str
    uuid:
      description:
      - UUID of the instance to manage if known, this is VMware's BIOS UUID by default.
      - This is required if C(name) or C(moid) parameter is not supplied.
      - The C(folder) is ignored, if C(uuid) is provided.
+     type: str
    moid:
      description:
      - Managed Object ID of the instance to manage if known, this is a unique identifier only within a single vCenter instance.
@@ -65,10 +67,12 @@ options:
      - '   folder: /folder1/datacenter1/vm'
      - '   folder: folder1/datacenter1/vm'
      - '   folder: /folder1/datacenter1/vm/folder2'
+     type: str
    datacenter:
      description:
      - Name of the datacenter.
      required: True
+     type: str
 extends_documentation_fragment: vmware.documentation
 '''
 
diff --git a/lib/ansible/modules/cloud/vmware/vmware_guest_tools_upgrade.py b/lib/ansible/modules/cloud/vmware/vmware_guest_tools_upgrade.py
index ffb0191c3e..ae58c564cf 100644
--- a/lib/ansible/modules/cloud/vmware/vmware_guest_tools_upgrade.py
+++ b/lib/ansible/modules/cloud/vmware/vmware_guest_tools_upgrade.py
@@ -31,15 +31,18 @@ options:
         description:
             - Name of the virtual machine to work with.
             - This is required if C(uuid) or C(moid) is not supplied.
+        type: str
    name_match:
         description:
             - If multiple virtual machines matching the name, use the first or last found.
         default: 'first'
         choices: ['first', 'last']
+        type: str
    uuid:
         description:
             - UUID of the instance to manage if known, this is VMware's unique identifier.
             - This is required if C(name) or C(moid) is not supplied.
+        type: str
    moid:
         description:
             - Managed Object ID of the instance to manage if known, this is a unique identifier only within a single vCenter instance.
@@ -61,10 +64,12 @@ options:
             - '   folder: /folder1/datacenter1/vm'
             - '   folder: folder1/datacenter1/vm'
             - '   folder: /folder1/datacenter1/vm/folder2'
+        type: str
    datacenter:
         description:
             - Destination datacenter where the virtual machine exists.
         required: True
+        type: str
 extends_documentation_fragment: vmware.documentation
 author:
     - Mike Klebolt (@MikeKlebolt) <michael.klebolt@centurylink.com>
diff --git a/lib/ansible/modules/cloud/vmware/vmware_guest_tools_wait.py b/lib/ansible/modules/cloud/vmware/vmware_guest_tools_wait.py
index a0ddd37162..1ae5e43789 100644
--- a/lib/ansible/modules/cloud/vmware/vmware_guest_tools_wait.py
+++ b/lib/ansible/modules/cloud/vmware/vmware_guest_tools_wait.py
@@ -32,11 +32,13 @@ options:
      description:
      - Name of the VM for which to wait until the tools become available.
      - This is required if C(uuid) or C(moid) is not supplied.
+     type: str
    name_match:
      description:
      - If multiple VMs match the name, use the first or last found.
      default: 'first'
      choices: ['first', 'last']
+     type: str
    folder:
      description:
      - Destination folder, absolute or relative path to find an existing guest.
@@ -52,10 +54,12 @@ options:
      - '   folder: /folder1/datacenter1/vm'
      - '   folder: folder1/datacenter1/vm'
      - '   folder: /folder1/datacenter1/vm/folder2'
+     type: str
    uuid:
      description:
      - UUID of the VM  for which to wait until the tools become available, if known. This is VMware's unique identifier.
      - This is required, if C(name) or C(moid) is not supplied.
+     type: str
    moid:
      description:
      - Managed Object ID of the instance to manage if known, this is a unique identifier only within a single vCenter instance.
diff --git a/lib/ansible/modules/cloud/vmware/vmware_guest_video.py b/lib/ansible/modules/cloud/vmware/vmware_guest_video.py
index 7f14e32690..2bdaf051f9 100644
--- a/lib/ansible/modules/cloud/vmware/vmware_guest_video.py
+++ b/lib/ansible/modules/cloud/vmware/vmware_guest_video.py
@@ -33,10 +33,12 @@ options:
      description:
      - Name of the virtual machine.
      - This is a required parameter, if parameter C(uuid) or C(moid) is not supplied.
+     type: str
    uuid:
      description:
      - UUID of the instance to gather facts if known, this is VMware's unique identifier.
      - This is a required parameter, if parameter C(name) or C(moid) is not supplied.
+     type: str
    moid:
      description:
      - Managed Object ID of the instance to manage if known, this is a unique identifier only within a single vCenter instance.
@@ -58,11 +60,13 @@ options:
      - '   folder: /folder1/datacenter1/vm'
      - '   folder: folder1/datacenter1/vm'
      - '   folder: /folder1/datacenter1/vm/folder2'
+     type: str
    datacenter:
      default: ha-datacenter
      description:
      - The datacenter name to which virtual machine belongs to.
      - This parameter is case sensitive.
+     type: str
    gather_video_facts:
      description:
      - If set to True, return settings of the video card, other attributes are ignored.
@@ -77,11 +81,13 @@ options:
    display_number:
      description:
      - The number of display. Valid value from 1 to 10. The maximum display number is 4 on vCenter 6.0, 6.5 web UI.
+     type: int
    video_memory_mb:
      description:
      - 'Valid total MB of video memory range of virtual machine is from 1.172 MB to 256 MB on ESXi 6.7U1,
         from 1.172 MB to 128 MB on ESXi 6.7 and previous versions.'
      - For specific guest OS, supported minimum and maximum video memory are different, please be careful on setting this.
+     type: float
    enable_3D:
      description:
      - Enable 3D for guest operating systems on which VMware supports 3D.
@@ -92,9 +98,11 @@ options:
      - 'If set to C(software), uses normal CPU processing for 3D calculations.'
      - 'If set to C(hardware), requires graphics hardware (GPU) for faster 3D calculations.'
      choices: [ automatic, software, hardware ]
+     type: str
    memory_3D_mb:
      description:
      - The value of 3D Memory must be power of 2 and valid value is from 32 MB to 2048 MB.
+     type: int
 extends_documentation_fragment: vmware.documentation
 '''
 
diff --git a/lib/ansible/modules/cloud/vmware/vmware_guest_vnc.py b/lib/ansible/modules/cloud/vmware/vmware_guest_vnc.py
index fc7867a089..6e70059312 100644
--- a/lib/ansible/modules/cloud/vmware/vmware_guest_vnc.py
+++ b/lib/ansible/modules/cloud/vmware/vmware_guest_vnc.py
@@ -31,28 +31,33 @@ options:
     - Destination datacenter for the deploy operation.
     - This parameter is case sensitive.
     default: ha-datacenter
+    type: str
   state:
     description:
       - Set the state of VNC on virtual machine.
     choices: [present, absent]
     default: present
     required: false
+    type: str
   name:
     description:
       - Name of the virtual machine to work with.
       - Virtual machine names in vCenter are not necessarily unique, which may be problematic, see C(name_match).
     required: false
+    type: str
   name_match:
     description:
       - If multiple virtual machines matching the name, use the first or last found.
     default: first
     choices: [first, last]
     required: false
+    type: str
   uuid:
     description:
       - UUID of the instance to manage if known, this is VMware's unique identifier.
       - This is required, if C(name) or C(moid) is not supplied.
     required: false
+    type: str
   moid:
     description:
       - Managed Object ID of the instance to manage if known, this is a unique identifier only within a single vCenter instance.
@@ -64,24 +69,28 @@ options:
       - Destination folder, absolute or relative path to find an existing guest.
       - The folder should include the datacenter. ESX's datacenter is ha-datacenter
     required: false
+    type: str
   vnc_ip:
     description:
       - Sets an IP for VNC on virtual machine.
       - This is required only when I(state) is set to present and will be ignored if I(state) is absent.
     default: 0.0.0.0
     required: false
+    type: str
   vnc_port:
     description:
       - The port that VNC listens on. Usually a number between 5900 and 7000 depending on your config.
       - This is required only when I(state) is set to present and will be ignored if I(state) is absent.
     default: 0
     required: false
+    type: int
   vnc_password:
     description:
       - Sets a password for VNC on virtual machine.
       - This is required only when I(state) is set to present and will be ignored if I(state) is absent.
     default: ""
     required: false
+    type: str
 extends_documentation_fragment: vmware.documentation
 '''
 
diff --git a/lib/ansible/modules/cloud/vmware/vmware_host_acceptance.py b/lib/ansible/modules/cloud/vmware/vmware_host_acceptance.py
index 31afc57ee8..a8233d8e28 100644
--- a/lib/ansible/modules/cloud/vmware/vmware_host_acceptance.py
+++ b/lib/ansible/modules/cloud/vmware/vmware_host_acceptance.py
@@ -35,11 +35,13 @@ options:
     - Name of the cluster.
     - Acceptance level of all ESXi host system in the given cluster will be managed.
     - If C(esxi_hostname) is not given, this parameter is required.
+    type: str
   esxi_hostname:
     description:
     - ESXi hostname.
     - Acceptance level of this ESXi host system will be managed.
     - If C(cluster_name) is not given, this parameter is required.
+    type: str
   state:
     description:
     - Set or list acceptance level of the given ESXi host.
@@ -48,6 +50,7 @@ options:
     choices: [ list, present ]
     required: False
     default: 'list'
+    type: str
   acceptance_level:
     description:
     - Name of acceptance level.
@@ -57,6 +60,7 @@ options:
     - If set to C(community), then accept all VIBs, even those that are not signed.
     choices: [ community, partner, vmware_accepted, vmware_certified ]
     required: False
+    type: str
 extends_documentation_fragment: vmware.documentation
 '''
 
diff --git a/lib/ansible/modules/cloud/vmware/vmware_host_capability_facts.py b/lib/ansible/modules/cloud/vmware/vmware_host_capability_facts.py
index 767bf15828..ef837dfc40 100644
--- a/lib/ansible/modules/cloud/vmware/vmware_host_capability_facts.py
+++ b/lib/ansible/modules/cloud/vmware/vmware_host_capability_facts.py
@@ -32,10 +32,12 @@ options:
     description:
     - Name of the cluster from all host systems to be used for facts gathering.
     - If C(esxi_hostname) is not given, this parameter is required.
+    type: str
   esxi_hostname:
     description:
     - ESXi hostname to gather facts from.
     - If C(cluster_name) is not given, this parameter is required.
+    type: str
 extends_documentation_fragment: vmware.documentation
 '''
 
diff --git a/lib/ansible/modules/cloud/vmware/vmware_host_config_facts.py b/lib/ansible/modules/cloud/vmware/vmware_host_config_facts.py
index c2c9a21986..67aa1ec33d 100644
--- a/lib/ansible/modules/cloud/vmware/vmware_host_config_facts.py
+++ b/lib/ansible/modules/cloud/vmware/vmware_host_config_facts.py
@@ -32,10 +32,12 @@ options:
     description:
     - Name of the cluster from which the ESXi host belong to.
     - If C(esxi_hostname) is not given, this parameter is required.
+    type: str
   esxi_hostname:
     description:
     - ESXi hostname to gather facts from.
     - If C(cluster_name) is not given, this parameter is required.
+    type: str
 extends_documentation_fragment: vmware.documentation
 '''
 
diff --git a/lib/ansible/modules/cloud/vmware/vmware_host_config_manager.py b/lib/ansible/modules/cloud/vmware/vmware_host_config_manager.py
index 6670bc7566..06fc159fd6 100644
--- a/lib/ansible/modules/cloud/vmware/vmware_host_config_manager.py
+++ b/lib/ansible/modules/cloud/vmware/vmware_host_config_manager.py
@@ -33,17 +33,20 @@ options:
     - Name of the cluster.
     - Settings are applied to every ESXi host in given cluster.
     - If C(esxi_hostname) is not given, this parameter is required.
+    type: str
   esxi_hostname:
     description:
     - ESXi hostname.
     - Settings are applied to this ESXi host.
     - If C(cluster_name) is not given, this parameter is required.
+    type: str
   options:
     description:
     - A dictionary of advanced system settings.
     - Invalid options will cause module to error.
     - Note that the list of advanced options (with description and values) can be found by running `vim-cmd hostsvc/advopt/options`.
     default: {}
+    type: dict
 extends_documentation_fragment: vmware.documentation
 '''
 
diff --git a/lib/ansible/modules/cloud/vmware/vmware_host_datastore.py b/lib/ansible/modules/cloud/vmware/vmware_host_datastore.py
index 1b75519a2f..d5739243b0 100644
--- a/lib/ansible/modules/cloud/vmware/vmware_host_datastore.py
+++ b/lib/ansible/modules/cloud/vmware/vmware_host_datastore.py
@@ -40,24 +40,29 @@ options:
     - The datacenter isn't used by the API to create a datastore.
     - Will be removed in 2.11.
     required: false
+    type: str
   datastore_name:
     description:
     - Name of the datastore to add/remove.
     required: true
+    type: str
   datastore_type:
     description:
     - Type of the datastore to configure (nfs/nfs41/vmfs).
     required: true
     choices: [ 'nfs', 'nfs41', 'vmfs' ]
+    type: str
   nfs_server:
     description:
     - NFS host serving nfs datastore.
     - Required if datastore type is set to C(nfs)/C(nfs41) and state is set to C(present), else unused.
     - Two or more servers can be defined if datastore type is set to C(nfs41)
+    type: str
   nfs_path:
     description:
     - Resource path on NFS host.
     - Required if datastore type is set to C(nfs)/C(nfs41) and state is set to C(present), else unused.
+    type: str
   nfs_ro:
     description:
     - ReadOnly or ReadWrite mount.
@@ -68,14 +73,17 @@ options:
     description:
     - Name of the device to be used as VMFS datastore.
     - Required for VMFS datastore type and state is set to C(present), else unused.
+    type: str
   vmfs_version:
     description:
     - VMFS version to use for datastore creation.
     - Unused if datastore type is not set to C(vmfs) and state is not set to C(present).
+    type: int
   esxi_hostname:
     description:
     - ESXi hostname to manage the datastore.
     - Required when used with a vcenter
+    type: str
     required: false
   state:
     description:
@@ -83,6 +91,7 @@ options:
     - "absent: Umount datastore if datastore is present else do nothing."
     default: present
     choices: [ present, absent ]
+    type: str
 extends_documentation_fragment: vmware.documentation
 '''
 
diff --git a/lib/ansible/modules/cloud/vmware/vmware_host_dns_facts.py b/lib/ansible/modules/cloud/vmware/vmware_host_dns_facts.py
index 11dcabcb21..a31068d18f 100644
--- a/lib/ansible/modules/cloud/vmware/vmware_host_dns_facts.py
+++ b/lib/ansible/modules/cloud/vmware/vmware_host_dns_facts.py
@@ -34,10 +34,12 @@ options:
     description:
     - Name of the cluster from which the ESXi host belong to.
     - If C(esxi_hostname) is not given, this parameter is required.
+    type: str
   esxi_hostname:
     description:
     - ESXi hostname to gather facts from.
     - If C(cluster_name) is not given, this parameter is required.
+    type: str
 extends_documentation_fragment: vmware.documentation
 '''
 
diff --git a/lib/ansible/modules/cloud/vmware/vmware_host_facts.py b/lib/ansible/modules/cloud/vmware/vmware_host_facts.py
index 24ee6db64c..493c13f866 100644
--- a/lib/ansible/modules/cloud/vmware/vmware_host_facts.py
+++ b/lib/ansible/modules/cloud/vmware/vmware_host_facts.py
@@ -38,6 +38,7 @@ options:
     - Host facts about the specified ESXi server will be returned.
     - By specifying this option, you can select which ESXi hostsystem is returned if connecting to a vCenter.
     version_added: 2.8
+    type: str
   show_tag:
     description:
     - Tags related to Host are shown if set to C(True).
diff --git a/lib/ansible/modules/cloud/vmware/vmware_host_feature_facts.py b/lib/ansible/modules/cloud/vmware/vmware_host_feature_facts.py
index 62ac38b4c6..32a36d7841 100644
--- a/lib/ansible/modules/cloud/vmware/vmware_host_feature_facts.py
+++ b/lib/ansible/modules/cloud/vmware/vmware_host_feature_facts.py
@@ -31,10 +31,12 @@ options:
     description:
     - Name of the cluster from all host systems to be used for facts gathering.
     - If C(esxi_hostname) is not given, this parameter is required.
+    type: str
   esxi_hostname:
     description:
     - ESXi hostname to gather facts from.
     - If C(cluster_name) is not given, this parameter is required.
+    type: str
 extends_documentation_fragment: vmware.documentation
 '''
 
diff --git a/lib/ansible/modules/cloud/vmware/vmware_host_firewall_facts.py b/lib/ansible/modules/cloud/vmware/vmware_host_firewall_facts.py
index e9b053e811..f4fe7a3fb3 100644
--- a/lib/ansible/modules/cloud/vmware/vmware_host_firewall_facts.py
+++ b/lib/ansible/modules/cloud/vmware/vmware_host_firewall_facts.py
@@ -32,10 +32,12 @@ options:
     description:
     - Name of the cluster from which the ESXi host belong to.
     - If C(esxi_hostname) is not given, this parameter is required.
+    type: str
   esxi_hostname:
     description:
     - ESXi hostname to gather facts from.
     - If C(cluster_name) is not given, this parameter is required.
+    type: str
 extends_documentation_fragment: vmware.documentation
 '''
 
diff --git a/lib/ansible/modules/cloud/vmware/vmware_host_firewall_manager.py b/lib/ansible/modules/cloud/vmware/vmware_host_firewall_manager.py
index 68f1437a73..2b0d5947f5 100644
--- a/lib/ansible/modules/cloud/vmware/vmware_host_firewall_manager.py
+++ b/lib/ansible/modules/cloud/vmware/vmware_host_firewall_manager.py
@@ -34,11 +34,13 @@ options:
     - Name of the cluster.
     - Firewall settings are applied to every ESXi host system in given cluster.
     - If C(esxi_hostname) is not given, this parameter is required.
+    type: str
   esxi_hostname:
     description:
     - ESXi hostname.
     - Firewall settings are applied to this ESXi host system.
     - If C(cluster_name) is not given, this parameter is required.
+    type: str
   rules:
     description:
     - A list of Rule set which needs to be managed.
@@ -47,6 +49,7 @@ options:
     - Additional IPs and networks can also be specified
     - Please see examples for more information.
     default: []
+    type: list
 extends_documentation_fragment: vmware.documentation
 '''
 
diff --git a/lib/ansible/modules/cloud/vmware/vmware_host_lockdown.py b/lib/ansible/modules/cloud/vmware/vmware_host_lockdown.py
index 955e4e6193..599d3e6b14 100644
--- a/lib/ansible/modules/cloud/vmware/vmware_host_lockdown.py
+++ b/lib/ansible/modules/cloud/vmware/vmware_host_lockdown.py
@@ -36,11 +36,13 @@ options:
     - Name of cluster.
     - All host systems from given cluster used to manage lockdown.
     - Required parameter, if C(esxi_hostname) is not set.
+    type: str
   esxi_hostname:
     description:
     - List of ESXi hostname to manage lockdown.
     - Required parameter, if C(cluster_name) is not set.
     - See examples for specifications.
+    type: list
   state:
     description:
     - State of hosts system
@@ -51,6 +53,7 @@ options:
     default: present
     choices: [ present, absent ]
     version_added: 2.5
+    type: str
 extends_documentation_fragment: vmware.documentation
 '''
 
diff --git a/lib/ansible/modules/cloud/vmware/vmware_host_ntp_facts.py b/lib/ansible/modules/cloud/vmware/vmware_host_ntp_facts.py
index 1057ffbaa6..b6106183cf 100644
--- a/lib/ansible/modules/cloud/vmware/vmware_host_ntp_facts.py
+++ b/lib/ansible/modules/cloud/vmware/vmware_host_ntp_facts.py
@@ -33,11 +33,13 @@ options:
     - Name of the cluster.
     - NTP config facts about each ESXi server will be returned for the given cluster.
     - If C(esxi_hostname) is not given, this parameter is required.
+    type: str
   esxi_hostname:
     description:
     - ESXi hostname.
     - NTP config facts about this ESXi server will be returned.
     - If C(cluster_name) is not given, this parameter is required.
+    type: str
 extends_documentation_fragment: vmware.documentation
 '''
 
diff --git a/lib/ansible/modules/cloud/vmware/vmware_host_package_facts.py b/lib/ansible/modules/cloud/vmware/vmware_host_package_facts.py
index d0178957d9..a9d9bd4e3c 100644
--- a/lib/ansible/modules/cloud/vmware/vmware_host_package_facts.py
+++ b/lib/ansible/modules/cloud/vmware/vmware_host_package_facts.py
@@ -33,11 +33,13 @@ options:
     - Name of the cluster.
     - Package facts about each ESXi server will be returned for given cluster.
     - If C(esxi_hostname) is not given, this parameter is required.
+    type: str
   esxi_hostname:
     description:
     - ESXi hostname.
     - Package facts about this ESXi server will be returned.
     - If C(cluster_name) is not given, this parameter is required.
+    type: str
 extends_documentation_fragment: vmware.documentation
 '''
 
diff --git a/lib/ansible/modules/cloud/vmware/vmware_host_powermgmt_policy.py b/lib/ansible/modules/cloud/vmware/vmware_host_powermgmt_policy.py
index 93ac1a8280..c3e1f510ef 100644
--- a/lib/ansible/modules/cloud/vmware/vmware_host_powermgmt_policy.py
+++ b/lib/ansible/modules/cloud/vmware/vmware_host_powermgmt_policy.py
@@ -35,14 +35,17 @@ options:
     - Set the Power Management Policy of the host system.
     choices: [ 'high-performance', 'balanced', 'low-power', 'custom' ]
     default: 'balanced'
+    type: str
   esxi_hostname:
     description:
     - Name of the host system to work with.
     - This is required parameter if C(cluster_name) is not specified.
+    type: str
   cluster_name:
     description:
     - Name of the cluster from which all host systems will be used.
     - This is required parameter if C(esxi_hostname) is not specified.
+    type: str
 extends_documentation_fragment: vmware.documentation
 '''
 
diff --git a/lib/ansible/modules/cloud/vmware/vmware_host_powerstate.py b/lib/ansible/modules/cloud/vmware/vmware_host_powerstate.py
index 8c7518037e..5b952c65e0 100644
--- a/lib/ansible/modules/cloud/vmware/vmware_host_powerstate.py
+++ b/lib/ansible/modules/cloud/vmware/vmware_host_powerstate.py
@@ -26,7 +26,7 @@ description:
 - State 'reboot-host', 'shutdown-host' and 'power-down-to-standby' are not supported by all the host systems.
 version_added: 2.6
 author:
-- Abhijeet Kasurde (@Akasurde) <akasurde@redhat.com>
+- Abhijeet Kasurde (@Akasurde)
 requirements:
 - python >= 2.6
 - PyVmomi
@@ -36,14 +36,17 @@ options:
     - Set the state of the host system.
     choices: [ 'power-down-to-standby', 'power-up-from-standby', 'shutdown-host', 'reboot-host' ]
     default: 'shutdown-host'
+    type: str
   esxi_hostname:
     description:
     - Name of the host system to work with.
     - This is required parameter if C(cluster_name) is not specified.
+    type: str
   cluster_name:
     description:
     - Name of the cluster from which all host systems will be used.
     - This is required parameter if C(esxi_hostname) is not specified.
+    type: str
   force:
     description:
     - 'This parameter specify if the host should be proceeding with user defined powerstate
@@ -60,6 +63,7 @@ options:
     - 'Ignored if C(state) set to C(reboot-host) or C(shutdown-host).'
     - 'This parameter is defined in seconds.'
     default: 600
+    type: int
 extends_documentation_fragment: vmware.documentation
 '''
 
diff --git a/lib/ansible/modules/cloud/vmware/vmware_host_scanhba.py b/lib/ansible/modules/cloud/vmware/vmware_host_scanhba.py
index 28cd1ddc21..16109d1365 100644
--- a/lib/ansible/modules/cloud/vmware/vmware_host_scanhba.py
+++ b/lib/ansible/modules/cloud/vmware/vmware_host_scanhba.py
@@ -20,7 +20,7 @@ module: vmware_host_scanhba
 short_description: Rescan host HBA's and optionally refresh the storage system
 description:
 - This module can force a rescan of the hosts HBA subsystem which is needed when wanting to mount a new datastore.
-- You could use this before using vmware_host_datastore to mount a new datastore to ensure your device/volume is ready.
+- You could use this before using M(vmware_host_datastore) to mount a new datastore to ensure your device/volume is ready.
 - You can also optionally force a Refresh of the Storage System in vCenter/ESXi Web Client.
 - All parameters and VMware object names are case sensitive.
 - You can supply an esxi_hostname or a cluster_name
@@ -37,10 +37,12 @@ options:
     description:
     - ESXi hostname to Rescan the storage subsystem on.
     required: false
+    type: str
   cluster_name:
     description:
     - Cluster name to Rescan the storage subsystem on (this will run the rescan task on each host in the cluster).
     required: false
+    type: str
   refresh_storage:
     description:
     - Refresh the storage system in vCenter/ESXi Web Client for each host found
diff --git a/lib/ansible/modules/cloud/vmware/vmware_host_service_facts.py b/lib/ansible/modules/cloud/vmware/vmware_host_service_facts.py
index 6e7a5e0173..f0a29e27df 100644
--- a/lib/ansible/modules/cloud/vmware/vmware_host_service_facts.py
+++ b/lib/ansible/modules/cloud/vmware/vmware_host_service_facts.py
@@ -34,11 +34,13 @@ options:
     - Name of the cluster.
     - Service facts about each ESXi server will be returned for given cluster.
     - If C(esxi_hostname) is not given, this parameter is required.
+    type: str
   esxi_hostname:
     description:
     - ESXi hostname.
     - Service facts about this ESXi server will be returned.
     - If C(cluster_name) is not given, this parameter is required.
+    type: str
 extends_documentation_fragment: vmware.documentation
 '''
 
diff --git a/lib/ansible/modules/cloud/vmware/vmware_host_service_manager.py b/lib/ansible/modules/cloud/vmware/vmware_host_service_manager.py
index 87103b52dc..c77ff9cc00 100644
--- a/lib/ansible/modules/cloud/vmware/vmware_host_service_manager.py
+++ b/lib/ansible/modules/cloud/vmware/vmware_host_service_manager.py
@@ -35,17 +35,20 @@ options:
     - Name of the cluster.
     - Service settings are applied to every ESXi host system/s in given cluster.
     - If C(esxi_hostname) is not given, this parameter is required.
+    type: str
   esxi_hostname:
     description:
     - ESXi hostname.
     - Service settings are applied to this ESXi host system.
     - If C(cluster_name) is not given, this parameter is required.
+    type: str
   state:
     description:
     - Desired state of service.
     - "State value 'start' and 'present' has same effect."
     - "State value 'stop' and 'absent' has same effect."
     choices: [ absent, present, restart, start, stop ]
+    type: str
     default: 'start'
   service_policy:
     description:
@@ -54,11 +57,13 @@ options:
     - If set C(automatic), then service should run if and only if it has open firewall ports.
     - If set C(off), then Service should not be started when the host starts up.
     choices: [ 'automatic', 'off', 'on' ]
+    type: str
   service_name:
     description:
-    - Name of Service to be managed. This is brief identifier for the service, for example, ntpd, vxsyslogd etc.
+    - Name of Service to be managed. This is a brief identifier for the service, for example, ntpd, vxsyslogd etc.
     - This value should be a valid ESXi service name.
     required: True
+    type: str
 extends_documentation_fragment: vmware.documentation
 '''
 
diff --git a/lib/ansible/modules/cloud/vmware/vmware_host_snmp.py b/lib/ansible/modules/cloud/vmware/vmware_host_snmp.py
index 5c8b51ff47..e633e84198 100644
--- a/lib/ansible/modules/cloud/vmware/vmware_host_snmp.py
+++ b/lib/ansible/modules/cloud/vmware/vmware_host_snmp.py
@@ -52,6 +52,7 @@ options:
         - A list of trap targets.
         - You need to use C(hostname), C(port), and C(community) for each trap target.
     default: []
+    type: list
   trap_filter:
     description:
         - A list of trap oids for traps not to be sent by agent,
diff --git a/lib/ansible/modules/cloud/vmware/vmware_host_ssl_facts.py b/lib/ansible/modules/cloud/vmware/vmware_host_ssl_facts.py
index 771162bd4f..30f3a41a52 100644
--- a/lib/ansible/modules/cloud/vmware/vmware_host_ssl_facts.py
+++ b/lib/ansible/modules/cloud/vmware/vmware_host_ssl_facts.py
@@ -34,11 +34,13 @@ options:
     - Name of the cluster.
     - SSL thumbprint information about all ESXi host system in the given cluster will be reported.
     - If C(esxi_hostname) is not given, this parameter is required.
+    type: str
   esxi_hostname:
     description:
     - ESXi hostname.
     - SSL thumbprint information of this ESXi host system will be reported.
     - If C(cluster_name) is not given, this parameter is required.
+    type: str
 extends_documentation_fragment: vmware.documentation
 '''
 
diff --git a/lib/ansible/modules/cloud/vmware/vmware_host_vmnic_facts.py b/lib/ansible/modules/cloud/vmware/vmware_host_vmnic_facts.py
index 32bf5584e5..d18e677ef1 100644
--- a/lib/ansible/modules/cloud/vmware/vmware_host_vmnic_facts.py
+++ b/lib/ansible/modules/cloud/vmware/vmware_host_vmnic_facts.py
@@ -36,19 +36,19 @@ requirements:
 options:
   capabilities:
     description:
-    - Gather facts about general capabilities (Auto negotioation, Wake On LAN, and Network I/O Control).
+    - Gather facts about general capabilities (Auto negotiation, Wake On LAN, and Network I/O Control).
     type: bool
     default: false
     version_added: 2.8
   directpath_io:
     description:
-    - Gather facts about DirectPath I/O capabilites and configuration.
+    - Gather facts about DirectPath I/O capabilities and configuration.
     type: bool
     default: false
     version_added: 2.8
   sriov:
     description:
-    - Gather facts about SR-IOV capabilites and configuration.
+    - Gather facts about SR-IOV capabilities and configuration.
     type: bool
     default: false
     version_added: 2.8
diff --git a/lib/ansible/modules/cloud/vmware/vmware_local_role_manager.py b/lib/ansible/modules/cloud/vmware/vmware_local_role_manager.py
index dc3c3da8b1..833070c5bb 100644
--- a/lib/ansible/modules/cloud/vmware/vmware_local_role_manager.py
+++ b/lib/ansible/modules/cloud/vmware/vmware_local_role_manager.py
@@ -37,17 +37,20 @@ options:
     description:
     - The local role name to be managed.
     required: True
+    type: str
   local_privilege_ids:
     description:
     - The list of privileges that role needs to have.
     - Please see U(https://docs.vmware.com/en/VMware-vSphere/6.0/com.vmware.vsphere.security.doc/GUID-ED56F3C4-77D0-49E3-88B6-B99B8B437B62.html)
     default: []
+    type: list
   state:
     description:
     - Indicate desired state of the role.
     - If the role already exists when C(state=present), the role info is updated.
     choices: ['present', 'absent']
     default: present
+    type: str
   force_remove:
     description:
     - If set to C(False) then prevents the role from being removed if any permissions are using it.
@@ -62,6 +65,7 @@ options:
     default: set
     choices: [ add, remove, set ]
     version_added: 2.8
+    type: str
 extends_documentation_fragment: vmware.documentation
 '''
 
diff --git a/lib/ansible/modules/cloud/vmware/vmware_local_user_manager.py b/lib/ansible/modules/cloud/vmware/vmware_local_user_manager.py
index 61326ea91a..f6f7c83c45 100644
--- a/lib/ansible/modules/cloud/vmware/vmware_local_user_manager.py
+++ b/lib/ansible/modules/cloud/vmware/vmware_local_user_manager.py
@@ -37,19 +37,23 @@ options:
         description:
             - The local user name to be changed.
         required: True
+        type: str
     local_user_password:
         description:
             - The password to be set.
         required: False
+        type: str
     local_user_description:
         description:
             - Description for the user.
         required: False
+        type: str
     state:
         description:
             - Indicate desired state of the user. If the user already exists when C(state=present), the user info is updated
         choices: ['present', 'absent']
         default: present
+        type: str
 extends_documentation_fragment: vmware.documentation
 '''
 
diff --git a/lib/ansible/modules/cloud/vmware/vmware_maintenancemode.py b/lib/ansible/modules/cloud/vmware/vmware_maintenancemode.py
index 74606d06b1..64ebab7d4b 100644
--- a/lib/ansible/modules/cloud/vmware/vmware_maintenancemode.py
+++ b/lib/ansible/modules/cloud/vmware/vmware_maintenancemode.py
@@ -36,6 +36,7 @@ options:
         description:
             - Name of the host as defined in vCenter.
         required: True
+        type: str
     vsan:
         description:
             - Specify which VSAN compliant mode to enter.
@@ -45,6 +46,7 @@ options:
             - 'noAction'
         required: False
         aliases: [ 'vsan_mode' ]
+        type: str
     evacuate:
         description:
             - If set to C(True), evacuate all powered off VMs.
@@ -56,6 +58,7 @@ options:
             - Specify a timeout for the operation.
         required: False
         default: 0
+        type: int
     state:
         description:
             - Enter or exit maintenance mode.
@@ -64,6 +67,7 @@ options:
             - absent
         default: present
         required: False
+        type: str
 extends_documentation_fragment: vmware.documentation
 '''
 
diff --git a/lib/ansible/modules/cloud/vmware/vmware_migrate_vmk.py b/lib/ansible/modules/cloud/vmware/vmware_migrate_vmk.py
index 87f4cd4f36..2bc2625173 100644
--- a/lib/ansible/modules/cloud/vmware/vmware_migrate_vmk.py
+++ b/lib/ansible/modules/cloud/vmware/vmware_migrate_vmk.py
@@ -31,26 +31,32 @@ options:
         description:
             - ESXi hostname to be managed
         required: True
+        type: str
     device:
         description:
             - VMK interface name
         required: True
+        type: str
     current_switch_name:
         description:
             - Switch VMK interface is currently on
         required: True
+        type: str
     current_portgroup_name:
         description:
             - Portgroup name VMK interface is currently on
         required: True
+        type: str
     migrate_switch_name:
         description:
             - Switch name to migrate VMK interface to
         required: True
+        type: str
     migrate_portgroup_name:
         description:
             - Portgroup name to migrate VMK interface to
         required: True
+        type: str
 extends_documentation_fragment: vmware.documentation
 '''
 
diff --git a/lib/ansible/modules/cloud/vmware/vmware_object_role_permission.py b/lib/ansible/modules/cloud/vmware/vmware_object_role_permission.py
index 4eb7de1946..a3a03d0079 100644
--- a/lib/ansible/modules/cloud/vmware/vmware_object_role_permission.py
+++ b/lib/ansible/modules/cloud/vmware/vmware_object_role_permission.py
@@ -37,17 +37,21 @@ options:
     description:
     - The role to be assigned permission.
     required: True
+    type: str
   principal:
     description:
     - The user to be assigned permission.
     - Required if C(group) is not specified.
+    type: str
   group:
     description:
     - The group to be assigned permission.
     - Required if C(principal) is not specified.
+    type: str
   object_name:
     description:
     - The object name to assigned permission.
+    type: str
     required: True
   object_type:
     description:
@@ -56,6 +60,7 @@ options:
     choices: ['Folder', 'VirtualMachine', 'Datacenter', 'ResourcePool',
               'Datastore', 'Network', 'HostSystem', 'ComputeResource',
               'ClusterComputeResource', 'DistributedVirtualSwitch']
+    type: str
   recursive:
     description:
     - Should the permissions be recursively applied.
@@ -68,6 +73,7 @@ options:
     - When C(state=absent), the permission is removed if it exists.
     choices: ['present', 'absent']
     default: present
+    type: str
 extends_documentation_fragment: vmware.documentation
 '''
 
diff --git a/lib/ansible/modules/cloud/vmware/vmware_portgroup.py b/lib/ansible/modules/cloud/vmware/vmware_portgroup.py
index f34a249cb9..fb9a1bd863 100644
--- a/lib/ansible/modules/cloud/vmware/vmware_portgroup.py
+++ b/lib/ansible/modules/cloud/vmware/vmware_portgroup.py
@@ -42,11 +42,13 @@ options:
             - vSwitch to modify.
         required: True
         aliases: [ 'switch_name', 'vswitch' ]
+        type: str
     portgroup:
         description:
             - Portgroup name to add.
         required: True
         aliases: [ 'portgroup_name' ]
+        type: str
     vlan_id:
         description:
             - VLAN ID to assign to portgroup.
@@ -54,6 +56,7 @@ options:
         required: False
         default: 0
         aliases: [ 'vlan' ]
+        type: int
     security:
         description:
             - Network policy specifies layer 2 security settings for a
@@ -67,6 +70,7 @@ options:
         required: False
         version_added: "2.2"
         aliases: [ 'security_policy', 'network_policy' ]
+        type: dict
     teaming:
         description:
             - Dictionary which configures the different teaming values for portgroup.
@@ -85,6 +89,7 @@ options:
         required: False
         version_added: '2.6'
         aliases: [ 'teaming_policy' ]
+        type: dict
     traffic_shaping:
         description:
             - Dictionary which configures traffic shaping for the switch.
@@ -95,6 +100,7 @@ options:
             - '- C(burst_size) (int): Burst size (KB). (default: None)'
         required: False
         version_added: '2.9'
+        type: dict
     cluster_name:
         description:
             - Name of cluster name for host membership.
@@ -102,12 +108,14 @@ options:
             - This option is required if C(hosts) is not specified.
         version_added: "2.5"
         aliases: [ 'cluster' ]
+        type: str
     hosts:
         description:
             - List of name of host or hosts on which portgroup needs to be added.
             - This option is required if C(cluster_name) is not specified.
         aliases: [ esxi_hostname ]
         version_added: "2.5"
+        type: list
     state:
         description:
             - Determines if the portgroup should be present or not.
@@ -116,6 +124,7 @@ options:
             - 'absent'
         version_added: '2.5'
         default: present
+        type: str
 extends_documentation_fragment: vmware.documentation
 '''
 
diff --git a/lib/ansible/modules/cloud/vmware/vmware_portgroup_facts.py b/lib/ansible/modules/cloud/vmware/vmware_portgroup_facts.py
index faa19bd664..8b0922443a 100644
--- a/lib/ansible/modules/cloud/vmware/vmware_portgroup_facts.py
+++ b/lib/ansible/modules/cloud/vmware/vmware_portgroup_facts.py
@@ -43,10 +43,12 @@ options:
     - Name of the cluster.
     - Facts will be returned for all hostsystem belonging to this cluster name.
     - If C(esxi_hostname) is not given, this parameter is required.
+    type: str
   esxi_hostname:
     description:
     - ESXi hostname to gather facts from.
     - If C(cluster_name) is not given, this parameter is required.
+    type: str
 extends_documentation_fragment: vmware.documentation
 '''
 
diff --git a/lib/ansible/modules/cloud/vmware/vmware_resource_pool.py b/lib/ansible/modules/cloud/vmware/vmware_resource_pool.py
index c6fc6f1af9..5cc8e09a0a 100644
--- a/lib/ansible/modules/cloud/vmware/vmware_resource_pool.py
+++ b/lib/ansible/modules/cloud/vmware/vmware_resource_pool.py
@@ -30,14 +30,17 @@ options:
         description:
             - Name of the datacenter to add the host.
         required: True
+        type: str
     cluster:
         description:
             - Name of the cluster to add the host.
         required: True
+        type: str
     resource_pool:
         description:
             - Resource pool name to manage.
         required: True
+        type: str
     cpu_expandable_reservations:
         description:
             - In a resource pool with an expandable reservation, the reservation on a resource pool can grow beyond the specified value.
@@ -47,11 +50,13 @@ options:
         description:
             - Amount of resource that is guaranteed available to the virtual machine or resource pool.
         default: 0
+        type: int
     cpu_limit:
         description:
             - The utilization of a virtual machine/resource pool will not exceed this limit, even if there are available resources.
             - The default value -1 indicates no limit.
         default: -1
+        type: int
     cpu_shares:
         description:
             - Memory shares are used in case of resource contention.
@@ -61,6 +66,7 @@ options:
             - low
             - normal
         default: normal
+        type: str
     mem_expandable_reservations:
         description:
             - In a resource pool with an expandable reservation, the reservation on a resource pool can grow beyond the specified value.
@@ -70,11 +76,13 @@ options:
         description:
             - Amount of resource that is guaranteed available to the virtual machine or resource pool.
         default: 0
+        type: int
     mem_limit:
         description:
             - The utilization of a virtual machine/resource pool will not exceed this limit, even if there are available resources.
             - The default value -1 indicates no limit.
         default: -1
+        type: int
     mem_shares:
         description:
             - Memory shares are used in case of resource contention.
@@ -84,6 +92,7 @@ options:
             - low
             - normal
         default: normal
+        type: str
     state:
         description:
             - Add or remove the resource pool
@@ -91,6 +100,7 @@ options:
         choices:
             - 'present'
             - 'absent'
+        type: str
 extends_documentation_fragment: vmware.documentation
 '''
 
diff --git a/lib/ansible/modules/cloud/vmware/vmware_tag.py b/lib/ansible/modules/cloud/vmware/vmware_tag.py
index 3b031c810d..dc2a79e06d 100644
--- a/lib/ansible/modules/cloud/vmware/vmware_tag.py
+++ b/lib/ansible/modules/cloud/vmware/vmware_tag.py
@@ -35,6 +35,7 @@ options:
       description:
       - The name of tag to manage.
       required: True
+      type: str
     tag_description:
       description:
       - The tag description.
@@ -43,11 +44,13 @@ options:
       - Process of updating tag only allows description change.
       required: False
       default: ''
+      type: str
     category_id:
       description:
       - The unique ID generated by vCenter should be used to.
       - User can get this unique ID from facts module.
       required: False
+      type: str
     state:
       description:
       - The state of tag.
@@ -58,6 +61,7 @@ options:
       required: False
       default: 'present'
       choices: [ 'present', 'absent' ]
+      type: str
 extends_documentation_fragment: vmware_rest_client.documentation
 '''
 
diff --git a/lib/ansible/modules/cloud/vmware/vmware_tag_manager.py b/lib/ansible/modules/cloud/vmware/vmware_tag_manager.py
index 0fcaeb8fb6..1cdc698d1f 100644
--- a/lib/ansible/modules/cloud/vmware/vmware_tag_manager.py
+++ b/lib/ansible/modules/cloud/vmware/vmware_tag_manager.py
@@ -38,6 +38,7 @@ options:
       - You can also specify category name by specifying colon separated value. For example, "category_name:tag_name".
       - You can skip category name if you have unique tag names.
       required: True
+      type: list
     state:
       description:
       - If C(state) is set to C(add) or C(present) will add the tags to the existing tag list of the given object.
@@ -45,16 +46,19 @@ options:
       - If C(state) is set to C(set) will replace the tags of the given objects with the user defined list of tags.
       default: add
       choices: [ present, absent, add, remove, set ]
+      type: str
     object_type:
       description:
       - Type of object to work with.
       required: True
       choices: [ VirtualMachine, Datacenter, ClusterComputeResource, HostSystem, DistributedVirtualSwitch, DistributedVirtualPortgroup ]
+      type: str
     object_name:
       description:
       - Name of the object to work with.
       - For DistributedVirtualPortgroups the format should be "switch_name:portgroup_name"
       required: True
+      type: str
 extends_documentation_fragment: vmware_rest_client.documentation
 '''
 
diff --git a/lib/ansible/modules/cloud/vmware/vmware_target_canonical_facts.py b/lib/ansible/modules/cloud/vmware/vmware_target_canonical_facts.py
index ad6136c988..1e5ba46a12 100644
--- a/lib/ansible/modules/cloud/vmware/vmware_target_canonical_facts.py
+++ b/lib/ansible/modules/cloud/vmware/vmware_target_canonical_facts.py
@@ -34,18 +34,21 @@ options:
     - The target id based on order of scsi device.
     - version 2.6 onwards, this parameter is optional.
     required: False
+    type: int
   cluster_name:
     description:
     - Name of the cluster.
     - Facts about all SCSI devices for all host system in the given cluster is returned.
     - This parameter is required, if C(esxi_hostname) is not provided.
     version_added: 2.6
+    type: str
   esxi_hostname:
     description:
     - Name of the ESXi host system.
     - Facts about all SCSI devices for the given ESXi host system is returned.
     - This parameter is required, if C(cluster_name) is not provided.
     version_added: 2.6
+    type: str
 extends_documentation_fragment: vmware.documentation
 '''
 
diff --git a/lib/ansible/modules/cloud/vmware/vmware_vm_host_drs_rule.py b/lib/ansible/modules/cloud/vmware/vmware_vm_host_drs_rule.py
index 8f8337a6ad..673cf5a53a 100644
--- a/lib/ansible/modules/cloud/vmware/vmware_vm_host_drs_rule.py
+++ b/lib/ansible/modules/cloud/vmware/vmware_vm_host_drs_rule.py
@@ -37,14 +37,17 @@ options:
     description:
       - "Datacenter to search for given cluster. If not set, we use first cluster we encounter with C(cluster_name)."
     required: false
+    type: str
   cluster_name:
     description:
       - "Cluster to create VM-Host rule."
     required: true
+    type: str
   drs_rule_name:
     description:
       - "Name of rule to create or remove."
     required: true
+    type: str
   enabled:
     default: false
     description:
@@ -56,6 +59,7 @@ options:
       - "Name of Host group to use with rule."
       - "Effective only if C(state) is set to C(present)."
     required: true
+    type: str
   mandatory:
     default: false
     description:
@@ -71,11 +75,13 @@ options:
       - "If set to C(present) and the rule doesn't exists then the rule will be created."
       - "If set to C(absent) and the rule exists then the rule will be deleted."
     required: true
+    type: str
   vm_group_name:
     description:
       - "Name of VM group to use with rule."
       - "Effective only if C(state) is set to C(present)."
     required: true
+    type: str
 requirements:
   - "python >= 2.6"
   - PyVmomi
diff --git a/lib/ansible/modules/cloud/vmware/vmware_vm_shell.py b/lib/ansible/modules/cloud/vmware/vmware_vm_shell.py
index 3831d0210c..01d50251ae 100644
--- a/lib/ansible/modules/cloud/vmware/vmware_vm_shell.py
+++ b/lib/ansible/modules/cloud/vmware/vmware_vm_shell.py
@@ -35,10 +35,12 @@ options:
       description:
       - The datacenter hosting the virtual machine.
       - If set, it will help to speed up virtual machine search.
+      type: str
     cluster:
       description:
       - The cluster hosting the virtual machine.
       - If set, it will help to speed up virtual machine search.
+      type: str
     folder:
       description:
       - Destination folder, absolute or relative path to find an existing guest or create the new guest.
@@ -54,39 +56,48 @@ options:
       - '   folder: folder1/datacenter1/vm'
       - '   folder: /folder1/datacenter1/vm/folder2'
       version_added: "2.4"
+      type: str
     vm_id:
       description:
       - Name of the virtual machine to work with.
       required: True
+      type: str
     vm_id_type:
       description:
       - The VMware identification method by which the virtual machine will be identified.
       default: vm_name
       choices: ['uuid', 'instance_uuid', 'dns_name', 'inventory_path', 'vm_name']
+      type: str
     vm_username:
       description:
       - The user to login-in to the virtual machine.
       required: True
+      type: str
     vm_password:
       description:
       - The password used to login-in to the virtual machine.
       required: True
+      type: str
     vm_shell:
       description:
       - The absolute path to the program to start.
       - On Linux, shell is executed via bash.
       required: True
+      type: str
     vm_shell_args:
       description:
       - The argument to the program.
       - The characters which must be escaped to the shell also be escaped on the command line provided.
       default: " "
+      type: str
     vm_shell_env:
       description:
       - Comma separated list of environment variable, specified in the guest OS notation.
+      type: list
     vm_shell_cwd:
       description:
       - The current working directory of the application from which it will be run.
+      type: str
     wait_for_process:
       description:
       - If set to C(True), module will wait for process to complete in the given virtual machine.
@@ -99,6 +110,7 @@ options:
       - If set to positive integers, then C(wait_for_process) will honor this parameter and will exit after this timeout.
       default: 3600
       version_added: 2.7
+      type: int
 extends_documentation_fragment: vmware.documentation
 '''
 
diff --git a/lib/ansible/modules/cloud/vmware/vmware_vm_vm_drs_rule.py b/lib/ansible/modules/cloud/vmware/vmware_vm_vm_drs_rule.py
index 38a6d594ad..2aae6ac5b3 100644
--- a/lib/ansible/modules/cloud/vmware/vmware_vm_vm_drs_rule.py
+++ b/lib/ansible/modules/cloud/vmware/vmware_vm_vm_drs_rule.py
@@ -32,14 +32,17 @@ options:
     description:
     - Desired cluster name where virtual machines are present for the DRS rule.
     required: True
+    type: str
   vms:
     description:
     - List of virtual machines name for which DRS rule needs to be applied.
     - Required if C(state) is set to C(present).
+    type: list
   drs_rule_name:
     description:
     - The name of the DRS rule to manage.
     required: True
+    type: str
   enabled:
     description:
     - If set to C(True), the DRS rule will be enabled.
@@ -67,6 +70,7 @@ options:
     required: False
     default: present
     choices: [ present, absent ]
+    type: str
 extends_documentation_fragment: vmware.documentation
 '''
 
diff --git a/lib/ansible/modules/cloud/vmware/vmware_vm_vss_dvs_migrate.py b/lib/ansible/modules/cloud/vmware/vmware_vm_vss_dvs_migrate.py
index cddda21ebb..97834f62da 100644
--- a/lib/ansible/modules/cloud/vmware/vmware_vm_vss_dvs_migrate.py
+++ b/lib/ansible/modules/cloud/vmware/vmware_vm_vss_dvs_migrate.py
@@ -30,10 +30,12 @@ options:
         description:
             - Name of the virtual machine to migrate to a dvSwitch
         required: True
+        type: str
     dvportgroup_name:
         description:
             - Name of the portgroup to migrate to the virtual machine to
         required: True
+        type: str
 extends_documentation_fragment: vmware.documentation
 '''
 
diff --git a/lib/ansible/modules/cloud/vmware/vmware_vmkernel.py b/lib/ansible/modules/cloud/vmware/vmware_vmkernel.py
index 14b0439413..6f42dd4344 100644
--- a/lib/ansible/modules/cloud/vmware/vmware_vmkernel.py
+++ b/lib/ansible/modules/cloud/vmware/vmware_vmkernel.py
@@ -60,6 +60,7 @@ options:
       - The name of the port group for the VMKernel interface.
       required: True
       aliases: ['portgroup']
+      type: str
     network:
       description:
       - A dictionary of network details.
@@ -83,21 +84,25 @@ options:
       - The IP Address for the VMKernel interface.
       - Use C(network) parameter with C(ip_address) instead.
       - Deprecated option, will be removed in version 2.9.
+      type: str
     subnet_mask:
       description:
       - The Subnet Mask for the VMKernel interface.
       - Use C(network) parameter with C(subnet_mask) instead.
       - Deprecated option, will be removed in version 2.9.
+      type: str
     mtu:
       description:
       - The MTU for the VMKernel interface.
       - The default value of 1500 is valid from version 2.5 and onwards.
       default: 1500
+      type: int
     device:
       description:
       - Search VMkernel adapter by device name.
       - The parameter is required only in case of C(type) is set to C(dhcp).
       version_added: 2.8
+      type: str
     enable_vsan:
       description:
       - Enable VSAN traffic on the VMKernel adapter.
@@ -145,12 +150,14 @@ options:
       choices: [ present, absent ]
       default: present
       version_added: 2.5
+      type: str
     esxi_hostname:
       description:
       - Name of ESXi host to which VMKernel is to be managed.
       - "From version 2.5 onwards, this parameter is required."
       required: True
       version_added: 2.5
+      type: str
 extends_documentation_fragment: vmware.documentation
 '''
 
diff --git a/lib/ansible/modules/cloud/vmware/vmware_vmkernel_facts.py b/lib/ansible/modules/cloud/vmware/vmware_vmkernel_facts.py
index bda8de8785..fff6cfb1e2 100644
--- a/lib/ansible/modules/cloud/vmware/vmware_vmkernel_facts.py
+++ b/lib/ansible/modules/cloud/vmware/vmware_vmkernel_facts.py
@@ -33,11 +33,13 @@ options:
     - Name of the cluster.
     - VMKernel facts about each ESXi server will be returned for the given cluster.
     - If C(esxi_hostname) is not given, this parameter is required.
+    type: str
   esxi_hostname:
     description:
     - ESXi hostname.
     - VMKernel facts about this ESXi server will be returned.
     - If C(cluster_name) is not given, this parameter is required.
+    type: str
 extends_documentation_fragment: vmware.documentation
 '''
 
diff --git a/lib/ansible/modules/cloud/vmware/vmware_vmkernel_ip_config.py b/lib/ansible/modules/cloud/vmware/vmware_vmkernel_ip_config.py
index b91bc97683..60046a017c 100644
--- a/lib/ansible/modules/cloud/vmware/vmware_vmkernel_ip_config.py
+++ b/lib/ansible/modules/cloud/vmware/vmware_vmkernel_ip_config.py
@@ -31,14 +31,17 @@ options:
         description:
             - VMkernel interface name
         required: True
+        type: str
     ip_address:
         description:
             - IP address to assign to VMkernel interface
         required: True
+        type: str
     subnet_mask:
         description:
             - Subnet Mask to assign to VMkernel interface
         required: True
+        type: str
 extends_documentation_fragment: vmware.documentation
 '''
 
diff --git a/lib/ansible/modules/cloud/vmware/vmware_vmotion.py b/lib/ansible/modules/cloud/vmware/vmware_vmotion.py
index 952ce20de4..f600b11237 100644
--- a/lib/ansible/modules/cloud/vmware/vmware_vmotion.py
+++ b/lib/ansible/modules/cloud/vmware/vmware_vmotion.py
@@ -41,12 +41,14 @@ options:
       - This is required parameter, if C(vm_uuid) is not set.
       - Version 2.6 onwards, this parameter is not a required parameter, unlike the previous versions.
       aliases: ['vm']
+      type: str
     vm_uuid:
       description:
       - UUID of the virtual machine to perform a vMotion operation on.
       - This is a required parameter, if C(vm_name) or C(moid) is not set.
       aliases: ['uuid']
       version_added: 2.7
+      type: str
     moid:
       description:
       - Managed Object ID of the instance to manage if known, this is a unique identifier only within a single vCenter instance.
@@ -64,11 +66,13 @@ options:
       - Name of the destination host the virtual machine should be running on.
       - Version 2.6 onwards, this parameter is not a required parameter, unlike the previous versions.
       aliases: ['destination']
+      type: str
     destination_datastore:
       description:
       - "Name of the destination datastore the virtual machine's vmdk should be moved on."
       aliases: ['datastore']
       version_added: 2.7
+      type: str
 extends_documentation_fragment: vmware.documentation
 '''
 
diff --git a/lib/ansible/modules/cloud/vmware/vmware_vsan_cluster.py b/lib/ansible/modules/cloud/vmware/vmware_vsan_cluster.py
index 15d50a8479..ea55bf6965 100644
--- a/lib/ansible/modules/cloud/vmware/vmware_vsan_cluster.py
+++ b/lib/ansible/modules/cloud/vmware/vmware_vsan_cluster.py
@@ -30,6 +30,7 @@ options:
         description:
             - Desired cluster UUID
         required: False
+        type: str
 extends_documentation_fragment: vmware.documentation
 '''
 
diff --git a/lib/ansible/modules/cloud/vmware/vmware_vspan_session.py b/lib/ansible/modules/cloud/vmware/vmware_vspan_session.py
index 2b6d41b3b4..aa103debf7 100644
--- a/lib/ansible/modules/cloud/vmware/vmware_vspan_session.py
+++ b/lib/ansible/modules/cloud/vmware/vmware_vspan_session.py
@@ -23,7 +23,7 @@ description:
    - This module can be used to create, delete or edit different kind of port mirroring sessions.
 version_added: '2.8'
 author:
-- Peter Gyorgy (@gyorgypeter) <gyorgy.peter1996@gmail.com>
+- Peter Gyorgy (@gyorgypeter)
 notes:
     - Tested on vSphere 6.7
 requirements:
@@ -35,10 +35,12 @@ options:
             - The name of the distributed vSwitch on which to add or remove the mirroring session.
         required: True
         aliases: [ 'switch_name' ]
+        type: str
     name:
         description:
             - Name of the session.
         required: True
+        type: str
     state:
         choices:
             - 'present'
@@ -46,6 +48,7 @@ options:
         description:
             - Create or remove the session.
         required: True
+        type: str
     session_type:
         default: 'dvPortMirror'
         choices:
@@ -64,6 +67,7 @@ options:
             - '- C(dvPortMirror) (str): In dvPortMirror session, Distributed Ports can be used as both source and
             destination entities.'
         required: False
+        type: str
     enabled:
         type: bool
         default: True
@@ -73,23 +77,28 @@ options:
         description:
             - The description for the session.
         required: False
+        type: str
     source_port_transmitted:
         description:
             - Source port for which transmitted packets are mirrored.
         required: False
+        type: str
     source_port_received:
         description:
             - Source port for which received packets are mirrored.
         required: False
+        type: str
     destination_port:
         description:
             - Destination port that received the mirrored packets. Also any port designated in the value of this
              property can not match the source port in any of the Distributed Port Mirroring session.
         required: False
+        type: str
     encapsulation_vlan_id:
         description:
             - VLAN ID used to encapsulate the mirrored traffic.
         required: False
+        type: int
     strip_original_vlan:
         description:
             - Whether to strip the original VLAN tag. if false, the original VLAN tag will be preserved on the mirrored
@@ -103,6 +112,7 @@ options:
              Setting this property to a smaller value is useful when the consumer will look only at the headers.
              The value cannot be less than 60.
         required: False
+        type: int
     normal_traffic_allowed:
         description:
             - Whether or not destination ports can send and receive "normal" traffic. Setting this to false will make
@@ -121,12 +131,14 @@ options:
             - 'Valid attributes are:'
             - '- C(name) (str): Name of the VM'
             - '- C(nic_label) (bool): Label of the Network Interface Card to use.'
+        type: dict
     source_vm_received:
         description:
             - With this parameter it is possible, to add a NIC of a VM to a port mirroring session.
             - 'Valid attributes are:'
             - '- C(name) (str): Name of the VM'
             - '- C(nic_label) (bool): Label of the Network Interface Card to use.'
+        type: dict
     destination_vm:
         description:
             - With this parameter it is possible, to add a NIC of a VM to a port mirroring session.
@@ -134,6 +146,7 @@ options:
             - '- C(name) (str): Name of the VM'
             - '- C(nic_label) (bool): Label of the Network Interface Card to use.'
         required: False
+        type: dict
 extends_documentation_fragment: vmware.documentation
 '''
 
diff --git a/lib/ansible/modules/cloud/vmware/vmware_vswitch.py b/lib/ansible/modules/cloud/vmware/vmware_vswitch.py
index 180c681017..0a5fbb6813 100644
--- a/lib/ansible/modules/cloud/vmware/vmware_vswitch.py
+++ b/lib/ansible/modules/cloud/vmware/vmware_vswitch.py
@@ -38,30 +38,36 @@ options:
     - Alias C(switch) is added in version 2.4.
     required: yes
     aliases: [ switch_name ]
+    type: str
   nics:
     description:
     - A list of vmnic names or vmnic name to attach to vSwitch.
     - Alias C(nics) is added in version 2.4.
     aliases: [ nic_name ]
     default: []
+    type: list
   number_of_ports:
     description:
     - Number of port to configure on vSwitch.
     default: 128
+    type: int
   mtu:
     description:
     - MTU to configure on vSwitch.
     default: 1500
+    type: int
   state:
     description:
     - Add or remove the switch.
     default: present
     choices: [ absent, present ]
+    type: str
   esxi_hostname:
     description:
     - Manage the vSwitch using this ESXi host system.
     version_added: "2.5"
     aliases: [ 'host' ]
+    type: str
 extends_documentation_fragment:
 - vmware.documentation
 '''
diff --git a/lib/ansible/modules/cloud/vmware/vmware_vswitch_facts.py b/lib/ansible/modules/cloud/vmware/vmware_vswitch_facts.py
index 82ced74aac..40467cad0e 100644
--- a/lib/ansible/modules/cloud/vmware/vmware_vswitch_facts.py
+++ b/lib/ansible/modules/cloud/vmware/vmware_vswitch_facts.py
@@ -35,10 +35,12 @@ options:
     - Name of the cluster.
     - Facts about vswitch belonging to every ESXi host systems under this cluster will be returned.
     - If C(esxi_hostname) is not given, this parameter is required.
+    type: str
   esxi_hostname:
     description:
     - ESXi hostname to gather facts from.
     - If C(cluster_name) is not given, this parameter is required.
+    type: str
 extends_documentation_fragment: vmware.documentation
 '''
 
diff --git a/test/sanity/validate-modules/ignore.txt b/test/sanity/validate-modules/ignore.txt
index 8cfb47af22..6307800659 100644
--- a/test/sanity/validate-modules/ignore.txt
+++ b/test/sanity/validate-modules/ignore.txt
@@ -1180,95 +1180,10 @@ lib/ansible/modules/cloud/vmware/vca_nat.py E338
 lib/ansible/modules/cloud/vmware/vca_vapp.py E322
 lib/ansible/modules/cloud/vmware/vca_vapp.py E324
 lib/ansible/modules/cloud/vmware/vca_vapp.py E338
-lib/ansible/modules/cloud/vmware/vcenter_extension.py E337
-lib/ansible/modules/cloud/vmware/vcenter_folder.py E337
-lib/ansible/modules/cloud/vmware/vcenter_license.py E337
-lib/ansible/modules/cloud/vmware/vmware_category.py E337
-lib/ansible/modules/cloud/vmware/vmware_cfg_backup.py E337
-lib/ansible/modules/cloud/vmware/vmware_cluster_facts.py E337
 lib/ansible/modules/cloud/vmware/vmware_cluster.py E337
-lib/ansible/modules/cloud/vmware/vmware_datacenter.py E337
-lib/ansible/modules/cloud/vmware/vmware_datastore_cluster.py E337
-lib/ansible/modules/cloud/vmware/vmware_datastore_facts.py E337
-lib/ansible/modules/cloud/vmware/vmware_datastore_maintenancemode.py E337
 lib/ansible/modules/cloud/vmware/vmware_deploy_ovf.py E337
-lib/ansible/modules/cloud/vmware/vmware_dns_config.py E337
-lib/ansible/modules/cloud/vmware/vmware_drs_group_facts.py E337
-lib/ansible/modules/cloud/vmware/vmware_drs_group.py E337
-lib/ansible/modules/cloud/vmware/vmware_drs_rule_facts.py E337
-lib/ansible/modules/cloud/vmware/vmware_dvs_host.py E337
-lib/ansible/modules/cloud/vmware/vmware_dvs_portgroup.py E337
-lib/ansible/modules/cloud/vmware/vmware_dvswitch_lacp.py E338
-lib/ansible/modules/cloud/vmware/vmware_dvswitch_uplink_pg.py E337
-lib/ansible/modules/cloud/vmware/vmware_export_ovf.py E337
-lib/ansible/modules/cloud/vmware/vmware_guest_boot_facts.py E337
-lib/ansible/modules/cloud/vmware/vmware_guest_boot_facts.py E338
-lib/ansible/modules/cloud/vmware/vmware_guest_boot_manager.py E337
-lib/ansible/modules/cloud/vmware/vmware_guest_boot_manager.py E338
-lib/ansible/modules/cloud/vmware/vmware_guest_custom_attribute_defs.py E337
-lib/ansible/modules/cloud/vmware/vmware_guest_custom_attributes.py E337
-lib/ansible/modules/cloud/vmware/vmware_guest_customization_facts.py E337
-lib/ansible/modules/cloud/vmware/vmware_guest_disk_facts.py E337
-lib/ansible/modules/cloud/vmware/vmware_guest_disk.py E337
-lib/ansible/modules/cloud/vmware/vmware_guest_facts.py E337
-lib/ansible/modules/cloud/vmware/vmware_guest_file_operation.py E337
-lib/ansible/modules/cloud/vmware/vmware_guest_find.py E337
-lib/ansible/modules/cloud/vmware/vmware_guest_move.py E337
-lib/ansible/modules/cloud/vmware/vmware_guest_powerstate.py E337
 lib/ansible/modules/cloud/vmware/vmware_guest.py E322
 lib/ansible/modules/cloud/vmware/vmware_guest.py E337
-lib/ansible/modules/cloud/vmware/vmware_guest_snapshot_facts.py E337
-lib/ansible/modules/cloud/vmware/vmware_guest_snapshot.py E337
-lib/ansible/modules/cloud/vmware/vmware_guest_snapshot.py E338
-lib/ansible/modules/cloud/vmware/vmware_guest_tools_upgrade.py E337
-lib/ansible/modules/cloud/vmware/vmware_guest_tools_wait.py E337
-lib/ansible/modules/cloud/vmware/vmware_guest_video.py E337
-lib/ansible/modules/cloud/vmware/vmware_guest_vnc.py E337
-lib/ansible/modules/cloud/vmware/vmware_host_acceptance.py E337
-lib/ansible/modules/cloud/vmware/vmware_host_capability_facts.py E337
-lib/ansible/modules/cloud/vmware/vmware_host_config_facts.py E337
-lib/ansible/modules/cloud/vmware/vmware_host_config_manager.py E337
-lib/ansible/modules/cloud/vmware/vmware_host_datastore.py E337
-lib/ansible/modules/cloud/vmware/vmware_host_dns_facts.py E337
-lib/ansible/modules/cloud/vmware/vmware_host_facts.py E337
-lib/ansible/modules/cloud/vmware/vmware_host_feature_facts.py E337
-lib/ansible/modules/cloud/vmware/vmware_host_firewall_facts.py E337
-lib/ansible/modules/cloud/vmware/vmware_host_firewall_manager.py E337
-lib/ansible/modules/cloud/vmware/vmware_host_lockdown.py E337
-lib/ansible/modules/cloud/vmware/vmware_host_lockdown.py E338
-lib/ansible/modules/cloud/vmware/vmware_host_ntp_facts.py E337
-lib/ansible/modules/cloud/vmware/vmware_host_package_facts.py E337
-lib/ansible/modules/cloud/vmware/vmware_host_powermgmt_policy.py E337
-lib/ansible/modules/cloud/vmware/vmware_host_powerstate.py E337
-lib/ansible/modules/cloud/vmware/vmware_host_scanhba.py E337
-lib/ansible/modules/cloud/vmware/vmware_host_service_facts.py E337
-lib/ansible/modules/cloud/vmware/vmware_host_service_manager.py E337
-lib/ansible/modules/cloud/vmware/vmware_host_snmp.py E337
-lib/ansible/modules/cloud/vmware/vmware_host_ssl_facts.py E337
-lib/ansible/modules/cloud/vmware/vmware_local_role_manager.py E337
-lib/ansible/modules/cloud/vmware/vmware_local_user_manager.py E337
-lib/ansible/modules/cloud/vmware/vmware_maintenancemode.py E337
-lib/ansible/modules/cloud/vmware/vmware_maintenancemode.py E338
-lib/ansible/modules/cloud/vmware/vmware_migrate_vmk.py E337
-lib/ansible/modules/cloud/vmware/vmware_object_role_permission.py E337
-lib/ansible/modules/cloud/vmware/vmware_portgroup_facts.py E337
-lib/ansible/modules/cloud/vmware/vmware_portgroup.py E337
-lib/ansible/modules/cloud/vmware/vmware_resource_pool.py E337
-lib/ansible/modules/cloud/vmware/vmware_tag_manager.py E337
-lib/ansible/modules/cloud/vmware/vmware_tag.py E337
-lib/ansible/modules/cloud/vmware/vmware_target_canonical_facts.py E337
-lib/ansible/modules/cloud/vmware/vmware_vm_host_drs_rule.py E337
-lib/ansible/modules/cloud/vmware/vmware_vmkernel_facts.py E337
-lib/ansible/modules/cloud/vmware/vmware_vmkernel_ip_config.py E337
-lib/ansible/modules/cloud/vmware/vmware_vmkernel.py E337
-lib/ansible/modules/cloud/vmware/vmware_vmotion.py E338
-lib/ansible/modules/cloud/vmware/vmware_vm_shell.py E337
-lib/ansible/modules/cloud/vmware/vmware_vm_vm_drs_rule.py E337
-lib/ansible/modules/cloud/vmware/vmware_vm_vss_dvs_migrate.py E337
-lib/ansible/modules/cloud/vmware/vmware_vsan_cluster.py E337
-lib/ansible/modules/cloud/vmware/vmware_vspan_session.py E337
-lib/ansible/modules/cloud/vmware/vmware_vswitch_facts.py E337
-lib/ansible/modules/cloud/vmware/vmware_vswitch.py E337
 lib/ansible/modules/cloud/vmware/vsphere_copy.py E322
 lib/ansible/modules/cloud/vmware/vsphere_copy.py E338
 lib/ansible/modules/cloud/vultr/vultr_block_storage.py E337
