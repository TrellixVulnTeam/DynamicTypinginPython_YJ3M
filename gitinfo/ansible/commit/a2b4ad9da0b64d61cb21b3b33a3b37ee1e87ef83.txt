commit a2b4ad9da0b64d61cb21b3b33a3b37ee1e87ef83
Author: Ryan Brown <sb@ryansb.com>
Date:   Mon Jan 9 12:11:39 2017 -0500

    (docs) Remove/update mentions of `git submodule` in docs and error meâ€¦ (#19941)
    
    * (docs) Remove/update mentions of `git submodule` in docs and error messages.
    
    * Remove parenthetical per @dharmabumstead

diff --git a/docs/docsite/rst/intro_installation.rst b/docs/docsite/rst/intro_installation.rst
index 718cce0a5d..9515aef643 100644
--- a/docs/docsite/rst/intro_installation.rst
+++ b/docs/docsite/rst/intro_installation.rst
@@ -333,12 +333,19 @@ Ansible also uses the following Python modules that need to be installed [1]_::
 
     $ sudo pip install paramiko PyYAML Jinja2 httplib2 six
 
-Note when updating ansible, be sure to not only update the source tree, but also the "submodules" in git
-which point at Ansible's own modules (not the same kind of modules, alas).
+To update ansible checkouts, use pull-with-rebase so any local changes are replayed.
 
 .. code-block:: bash
 
     $ git pull --rebase
+
+Note: when updating ansible checkouts that are v2.2 and older, be sure to not
+only update the source tree, but also the "submodules" in git which point at
+Ansible's own modules.
+
+.. code-block:: bash
+
+    $ git pull --rebase #same as above
     $ git submodule update --init --recursive
 
 Once running the env-setup script you'll be running from checkout and the default inventory file
diff --git a/lib/ansible/parsing/mod_args.py b/lib/ansible/parsing/mod_args.py
index 079f2dbd58..5f7105f00e 100644
--- a/lib/ansible/parsing/mod_args.py
+++ b/lib/ansible/parsing/mod_args.py
@@ -299,7 +299,7 @@ class ModuleArgsParser:
             if 'ping' not in module_loader:
                 raise AnsibleParserError("The requested action was not found in configured module paths. "
                         "Additionally, core modules are missing. If this is a checkout, "
-                        "run 'git submodule update --init --recursive' to correct this problem.",
+                        "run 'git pull --rebase' to correct this problem.",
                         obj=self._task_ds)
 
             else:
diff --git a/lib/ansible/plugins/action/__init__.py b/lib/ansible/plugins/action/__init__.py
index b7ef96ded3..3f9605a924 100644
--- a/lib/ansible/plugins/action/__init__.py
+++ b/lib/ansible/plugins/action/__init__.py
@@ -146,7 +146,7 @@ class ActionBase(with_metaclass(ABCMeta, object)):
             else:
                 raise AnsibleError("The module %s was not found in configured module paths. "
                                    "Additionally, core modules are missing. If this is a checkout, "
-                                   "run 'git submodule update --init --recursive' to correct this problem." % (module_name))
+                                   "run 'git pull --rebase' to correct this problem." % (module_name))
 
         # insert shared code and arguments into the module
         (module_data, module_style, module_shebang) = modify_module(module_name, module_path, module_args,
diff --git a/packaging/arch/PKGBUILD b/packaging/arch/PKGBUILD
index f2f9422906..508dd1e3cb 100644
--- a/packaging/arch/PKGBUILD
+++ b/packaging/arch/PKGBUILD
@@ -34,7 +34,6 @@ pkgver() {
 
 build() {
   cd $pkgname
-  git submodule update --init --recursive
   make PYTHON=python2
 }
 
