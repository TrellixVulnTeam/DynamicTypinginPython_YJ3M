commit c81a1057e10ca433a99af31158ec5a0c597f6d2d
Author: Matt Martz <matt@sivel.net>
Date:   Thu Aug 22 14:33:34 2019 -0500

    Speed up a few more tests by mocking time.sleep (#61186)

diff --git a/test/units/modules/cloud/amazon/test_ec2_vpc_nat_gateway.py b/test/units/modules/cloud/amazon/test_ec2_vpc_nat_gateway.py
index ffb0dd6b7f..74e8e4d095 100644
--- a/test/units/modules/cloud/amazon/test_ec2_vpc_nat_gateway.py
+++ b/test/units/modules/cloud/amazon/test_ec2_vpc_nat_gateway.py
@@ -1,6 +1,8 @@
 import pytest
 import unittest
 
+from mock import patch
+
 import ansible.modules.cloud.amazon.ec2_vpc_nat_gateway as ng
 
 
@@ -40,7 +42,8 @@ class AnsibleEc2VpcNatGatewayFunctions(unittest.TestCase):
         self.assertTrue(success)
         self.assertEqual(gws, should_return)
 
-    def test_wait_for_status_to_timeout(self):
+    @patch('time.sleep')
+    def test_wait_for_status_to_timeout(self, mock_sleep):
         client = boto3.client('ec2', region_name=aws_region)
         success, err_msg, gws = (
             ng.wait_for_status(
diff --git a/test/units/modules/storage/netapp/test_na_ontap_flexcache.py b/test/units/modules/storage/netapp/test_na_ontap_flexcache.py
index a960825227..e7c5fb941c 100644
--- a/test/units/modules/storage/netapp/test_na_ontap_flexcache.py
+++ b/test/units/modules/storage/netapp/test_na_ontap_flexcache.py
@@ -501,7 +501,8 @@ class TestMyModule(unittest.TestCase):
             assert exc.value.args[0]['msg'] == msg
             mock_create.assert_called_with()
 
-    def test_create_flexcache_time_out(self):
+    @patch('time.sleep')
+    def test_create_flexcache_time_out(self, mock_sleep):
         ''' create flexcache '''
         args = {
             'volume': 'volume_err',
diff --git a/test/units/plugins/lookup/test_password.py b/test/units/plugins/lookup/test_password.py
index f8fcfed794..be586c3266 100644
--- a/test/units/plugins/lookup/test_password.py
+++ b/test/units/plugins/lookup/test_password.py
@@ -421,7 +421,8 @@ class TestLookupModuleWithoutPasslib(BaseTestLookupModule):
         for result in results:
             self.assertEquals(result, u'a' * password.DEFAULT_LENGTH)
 
-    def test_lock_been_held(self):
+    @patch('time.sleep')
+    def test_lock_been_held(self, mock_sleep):
         # pretend the lock file is here
         password.os.path.exists = lambda x: True
         try:
