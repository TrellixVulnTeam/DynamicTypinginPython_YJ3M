commit 0d706d25b68073b7054792947a0f455251097d32
Author: Toshio Kuratomi <a.badger@gmail.com>
Date:   Wed May 25 12:09:49 2016 -0700

    The pymssql library requires python 2.7 or greater so port the syntax of this file to use python3-style exception handling

diff --git a/lib/ansible/modules/extras/database/mssql/mssql_db.py b/lib/ansible/modules/extras/database/mssql/mssql_db.py
index 413d4627c2..45642c579f 100644
--- a/lib/ansible/modules/extras/database/mssql/mssql_db.py
+++ b/lib/ansible/modules/extras/database/mssql/mssql_db.py
@@ -73,7 +73,9 @@ options:
 notes:
    - Requires the pymssql Python package on the remote host. For Ubuntu, this
      is as easy as pip install pymssql (See M(pip).)
-requirements: [ pymssql ]
+requirements:
+   - python >= 2.7
+   - pymssql
 author: Vedit Firat Arig 
 '''
 
@@ -177,7 +179,7 @@ def main():
     try:
         conn = pymssql.connect(user=login_user, password=login_password, host=login_querystring, database='master')
         cursor = conn.cursor()
-    except Exception, e:
+    except Exception as e:
         if "Unknown database" in str(e):
                 errno, errstr = e.args
                 module.fail_json(msg="ERROR: %s %s" % (errno, errstr))
@@ -191,7 +193,7 @@ def main():
         if state == "absent":
             try:
                 changed = db_delete(conn, cursor, db)
-            except Exception, e:
+            except Exception as e:
                 module.fail_json(msg="error deleting database: " + str(e))
         elif state == "import":
             conn.autocommit(autocommit)
@@ -205,12 +207,12 @@ def main():
         if state == "present":
             try:
                 changed = db_create(conn, cursor, db)
-            except Exception, e:
+            except Exception as e:
                 module.fail_json(msg="error creating database: " + str(e))
         elif state == "import":
             try:
                 changed = db_create(conn, cursor, db)
-            except Exception, e:
+            except Exception as e:
                 module.fail_json(msg="error creating database: " + str(e))
 
             conn.autocommit(autocommit)
