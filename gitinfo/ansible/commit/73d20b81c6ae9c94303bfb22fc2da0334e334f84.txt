commit 73d20b81c6ae9c94303bfb22fc2da0334e334f84
Author: Michael DeHaan <michael.dehaan@gmail.com>
Date:   Wed Mar 14 20:02:29 2012 -0400

    Add basic test of yum module (VERY basic) just to make sure syntax remains ok.  Need to do something
    trivial for service and git module also.

diff --git a/test/TestRunner.py b/test/TestRunner.py
index 683d4882a0..96201a7089 100644
--- a/test/TestRunner.py
+++ b/test/TestRunner.py
@@ -159,18 +159,14 @@ class TestRunner(unittest.TestCase):
    def test_async(self):
        # test async launch and job status
        # of any particular module
-       print "firing command..."
        result = self._run('command', [ "/bin/sleep", "3" ], background=20)
-       print "back..."
        assert 'ansible_job_id' in result
        assert 'started' in result
        jid = result['ansible_job_id']
        # no real chance of this op taking a while, but whatever
        time.sleep(5)
-       # CLI will abstract this, but this is how it works internally
-       print "checking status..."
+       # CLI will abstract this (when polling), but this is how it works internally
        result = self._run('async_status', [ "jid=%s" % jid ])
-       print "back..."
        # TODO: would be nice to have tests for supervisory process
        # killing job after X seconds
        assert 'finished' in result
@@ -179,6 +175,10 @@ class TestRunner(unittest.TestCase):
        assert 'stdout' in result
        assert result['ansible_job_id'] == jid
 
+   def test_yum(self):
+       result = self._run('yum', [ "list=repos" ])
+       assert 'failed' not in result
+
    def test_git(self):
        # TODO: tests for the git module
        pass
