commit dcc8d7393536100ee7843b4b0d0aac672b53f342
Author: James Cammarata <jimi@sngx.net>
Date:   Tue Sep 2 12:13:15 2014 -0500

    Fixing new ignore scripts option logic and name for the npm module

diff --git a/library/packaging/npm b/library/packaging/npm
index b489073e91..3bcbde12d9 100644
--- a/library/packaging/npm
+++ b/library/packaging/npm
@@ -50,12 +50,13 @@ options:
       - The executable location for npm.
       - This is useful if you are using a version manager, such as nvm
     required: false
-  ignoreScripts:
+  ignore_scripts:
     description:
       - Use the --ignore-scripts flag when installing.
     required: false
     choices: [ "yes", "no" ]
     default: no
+    version_added: "1.8"
   production:
     description:
       - Install dependencies in production mode, excluding devDependencies
@@ -117,7 +118,7 @@ class Npm(object):
         self.path = kwargs['path']
         self.registry = kwargs['registry']
         self.production = kwargs['production']
-        self.ignoreScripts = kwargs['ignoreScripts']
+        self.ignore_scripts = kwargs['ignore_scripts']
 
         if kwargs['executable']:
             self.executable = kwargs['executable'].split(' ')
@@ -137,7 +138,7 @@ class Npm(object):
                 cmd.append('--global')
             if self.production:
                 cmd.append('--production')
-            if self.ignoreScripts:
+            if self.ignore_scripts:
                 cmd.append('--ignore-scripts')
             if self.name:
                 cmd.append(self.name_version)
@@ -226,6 +227,7 @@ def main():
     executable = module.params['executable']
     registry = module.params['registry']
     state = module.params['state']
+    ignore_scripts = module.params['ignore_scripts']
 
     if not path and not glbl:
         module.fail_json(msg='path must be specified when not using global')
@@ -233,7 +235,7 @@ def main():
         module.fail_json(msg='uninstalling a package is only available for named packages')
 
     npm = Npm(module, name=name, path=path, version=version, glbl=glbl, production=production, \
-              executable=executable, registry=registry)
+              executable=executable, registry=registry, ignore_scripts=ignore_scripts)
 
     changed = False
     if state == 'present':
