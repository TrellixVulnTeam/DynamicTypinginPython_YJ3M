commit a914a39975665016e539a3e33cb2a14a28358ef4
Author: Ganesh Nalawade <ganesh634@gmail.com>
Date:   Tue Aug 29 18:40:10 2017 +0530

    Convert value of port and timeout in provider to integer (#28732)
    
    Fixes #28361

diff --git a/lib/ansible/plugins/action/aireos.py b/lib/ansible/plugins/action/aireos.py
index 7fd9788865..7c7950cc1a 100644
--- a/lib/ansible/plugins/action/aireos.py
+++ b/lib/ansible/plugins/action/aireos.py
@@ -52,10 +52,10 @@ class ActionModule(_ActionModule):
         pc.connection = 'network_cli'
         pc.network_os = 'aireos'
         pc.remote_addr = provider['host'] or self._play_context.remote_addr
-        pc.port = provider['port'] or self._play_context.port or 22
+        pc.port = int(provider['port'] or self._play_context.port or 22)
         pc.remote_user = provider['username'] or self._play_context.connection_user
         pc.password = provider['password'] or self._play_context.password
-        pc.timeout = provider['timeout'] or C.PERSISTENT_COMMAND_TIMEOUT
+        pc.timeout = int(provider['timeout'] or C.PERSISTENT_COMMAND_TIMEOUT)
 
         display.vvv('using connection plugin %s' % pc.connection, pc.remote_addr)
         connection = self._shared_loader_obj.connection_loader.get('persistent', pc, sys.stdin)
diff --git a/lib/ansible/plugins/action/aruba.py b/lib/ansible/plugins/action/aruba.py
index 998b8f99a1..7abd345db0 100644
--- a/lib/ansible/plugins/action/aruba.py
+++ b/lib/ansible/plugins/action/aruba.py
@@ -52,11 +52,11 @@ class ActionModule(_ActionModule):
         pc.connection = 'network_cli'
         pc.network_os = 'aruba'
         pc.remote_addr = provider['host'] or self._play_context.remote_addr
-        pc.port = provider['port'] or self._play_context.port or 22
+        pc.port = int(provider['port'] or self._play_context.port or 22)
         pc.remote_user = provider['username'] or self._play_context.connection_user
         pc.password = provider['password'] or self._play_context.password
         pc.private_key_file = provider['ssh_keyfile'] or self._play_context.private_key_file
-        pc.timeout = provider['timeout'] or C.PERSISTENT_COMMAND_TIMEOUT
+        pc.timeout = int(provider['timeout'] or C.PERSISTENT_COMMAND_TIMEOUT)
 
         display.vvv('using connection plugin %s' % pc.connection, pc.remote_addr)
         connection = self._shared_loader_obj.connection_loader.get('persistent', pc, sys.stdin)
diff --git a/lib/ansible/plugins/action/asa.py b/lib/ansible/plugins/action/asa.py
index 6b14f0d60c..7496834b9c 100644
--- a/lib/ansible/plugins/action/asa.py
+++ b/lib/ansible/plugins/action/asa.py
@@ -54,11 +54,11 @@ class ActionModule(_ActionModule):
         pc.connection = 'network_cli'
         pc.network_os = 'asa'
         pc.remote_addr = provider['host'] or self._play_context.remote_addr
-        pc.port = provider['port'] or self._play_context.port or 22
+        pc.port = int(provider['port'] or self._play_context.port or 22)
         pc.remote_user = provider['username'] or self._play_context.connection_user
         pc.password = provider['password'] or self._play_context.password
         pc.private_key_file = provider['ssh_keyfile'] or self._play_context.private_key_file
-        pc.timeout = provider['timeout'] or C.PERSISTENT_COMMAND_TIMEOUT
+        pc.timeout = int(provider['timeout'] or C.PERSISTENT_COMMAND_TIMEOUT)
         pc.become = provider['authorize'] or False
         pc.become_pass = provider['auth_pass']
 
diff --git a/lib/ansible/plugins/action/ce.py b/lib/ansible/plugins/action/ce.py
index c496702d53..f5a2e8bc32 100644
--- a/lib/ansible/plugins/action/ce.py
+++ b/lib/ansible/plugins/action/ce.py
@@ -55,10 +55,10 @@ class ActionModule(_ActionModule):
             pc.connection = 'network_cli'
             pc.network_os = 'ce'
             pc.remote_addr = provider['host'] or self._play_context.remote_addr
-            pc.port = int(provider['port']) or int(self._play_context.port) or 22
+            pc.port = int(provider['port'] or self._play_context.port or 22)
             pc.remote_user = provider['username'] or self._play_context.connection_user
             pc.password = provider['password'] or self._play_context.password
-            pc.timeout = provider['timeout'] or C.PERSISTENT_COMMAND_TIMEOUT
+            pc.timeout = int(provider['timeout'] or C.PERSISTENT_COMMAND_TIMEOUT)
             self._task.args['provider'] = provider.update(
                 host=pc.remote_addr,
                 port=pc.port,
diff --git a/lib/ansible/plugins/action/dellos10.py b/lib/ansible/plugins/action/dellos10.py
index ec0ddd35b4..a468e26c7f 100644
--- a/lib/ansible/plugins/action/dellos10.py
+++ b/lib/ansible/plugins/action/dellos10.py
@@ -53,11 +53,11 @@ class ActionModule(_ActionModule):
         pc = copy.deepcopy(self._play_context)
         pc.connection = 'network_cli'
         pc.network_os = 'dellos10'
-        pc.port = provider['port'] or self._play_context.port or 22
+        pc.port = int(provider['port'] or self._play_context.port or 22)
         pc.remote_user = provider['username'] or self._play_context.connection_user
         pc.password = provider['password'] or self._play_context.password
         pc.private_key_file = provider['ssh_keyfile'] or self._play_context.private_key_file
-        pc.timeout = provider['timeout'] or C.PERSISTENT_COMMAND_TIMEOUT
+        pc.timeout = int(provider['timeout'] or C.PERSISTENT_COMMAND_TIMEOUT)
         pc.become = provider['authorize'] or False
         pc.become_pass = provider['auth_pass']
 
diff --git a/lib/ansible/plugins/action/dellos6.py b/lib/ansible/plugins/action/dellos6.py
index d673602a22..1fdf63d3a7 100644
--- a/lib/ansible/plugins/action/dellos6.py
+++ b/lib/ansible/plugins/action/dellos6.py
@@ -49,11 +49,11 @@ class ActionModule(_ActionModule):
         pc = copy.deepcopy(self._play_context)
         pc.connection = 'network_cli'
         pc.network_os = 'dellos6'
-        pc.port = provider['port'] or self._play_context.port or 22
+        pc.port = int(provider['port'] or self._play_context.port or 22)
         pc.remote_user = provider['username'] or self._play_context.connection_user
         pc.password = provider['password'] or self._play_context.password
         pc.private_key_file = provider['ssh_keyfile'] or self._play_context.private_key_file
-        pc.timeout = provider['timeout'] or C.PERSISTENT_COMMAND_TIMEOUT
+        pc.timeout = int(provider['timeout'] or C.PERSISTENT_COMMAND_TIMEOUT)
         pc.become = provider['authorize'] or False
         pc.become_pass = provider['auth_pass']
 
diff --git a/lib/ansible/plugins/action/dellos9.py b/lib/ansible/plugins/action/dellos9.py
index 106e825433..6fc07e6d27 100644
--- a/lib/ansible/plugins/action/dellos9.py
+++ b/lib/ansible/plugins/action/dellos9.py
@@ -53,11 +53,11 @@ class ActionModule(_ActionModule):
         pc = copy.deepcopy(self._play_context)
         pc.connection = 'network_cli'
         pc.network_os = 'dellos9'
-        pc.port = provider['port'] or self._play_context.port or 22
+        pc.port = int(provider['port'] or self._play_context.port or 22)
         pc.remote_user = provider['username'] or self._play_context.connection_user
         pc.password = provider['password'] or self._play_context.password
         pc.private_key_file = provider['ssh_keyfile'] or self._play_context.private_key_file
-        pc.timeout = provider['timeout'] or C.PERSISTENT_COMMAND_TIMEOUT
+        pc.timeout = int(provider['timeout'] or C.PERSISTENT_COMMAND_TIMEOUT)
         pc.become = provider['authorize'] or False
         pc.become_pass = provider['auth_pass']
 
diff --git a/lib/ansible/plugins/action/eos.py b/lib/ansible/plugins/action/eos.py
index 15517058cc..873051f99a 100644
--- a/lib/ansible/plugins/action/eos.py
+++ b/lib/ansible/plugins/action/eos.py
@@ -55,11 +55,11 @@ class ActionModule(_ActionModule):
             pc.connection = 'network_cli'
             pc.network_os = 'eos'
             pc.remote_addr = provider['host'] or self._play_context.remote_addr
-            pc.port = provider['port'] or self._play_context.port or 22
+            pc.port = int(provider['port'] or self._play_context.port or 22)
             pc.remote_user = provider['username'] or self._play_context.connection_user
             pc.password = provider['password'] or self._play_context.password
             pc.private_key_file = provider['ssh_keyfile'] or self._play_context.private_key_file
-            pc.timeout = provider['timeout'] or C.PERSISTENT_COMMAND_TIMEOUT
+            pc.timeout = int(provider['timeout'] or C.PERSISTENT_COMMAND_TIMEOUT)
             pc.become = provider['authorize'] or False
             pc.become_pass = provider['auth_pass']
 
@@ -94,10 +94,10 @@ class ActionModule(_ActionModule):
 
             if provider.get('port') is None:
                 default_port = 443 if provider['use_ssl'] else 80
-                provider['port'] = self._play_context.port or default_port
+                provider['port'] = int(self._play_context.port or default_port)
 
             if provider.get('timeout') is None:
-                provider['timeout'] = self._play_context.timeout
+                provider['timeout'] = C.PERSISTENT_COMMAND_TIMEOUT
 
             if provider.get('username') is None:
                 provider['username'] = self._play_context.connection_user
diff --git a/lib/ansible/plugins/action/ios.py b/lib/ansible/plugins/action/ios.py
index afedc8a50c..070e641c26 100644
--- a/lib/ansible/plugins/action/ios.py
+++ b/lib/ansible/plugins/action/ios.py
@@ -52,11 +52,11 @@ class ActionModule(_ActionModule):
         pc.connection = 'network_cli'
         pc.network_os = 'ios'
         pc.remote_addr = provider['host'] or self._play_context.remote_addr
-        pc.port = provider['port'] or self._play_context.port or 22
+        pc.port = int(provider['port'] or self._play_context.port or 22)
         pc.remote_user = provider['username'] or self._play_context.connection_user
         pc.password = provider['password'] or self._play_context.password
         pc.private_key_file = provider['ssh_keyfile'] or self._play_context.private_key_file
-        pc.timeout = provider['timeout'] or C.PERSISTENT_COMMAND_TIMEOUT
+        pc.timeout = int(provider['timeout'] or C.PERSISTENT_COMMAND_TIMEOUT)
         pc.become = provider['authorize'] or False
         pc.become_pass = provider['auth_pass']
 
diff --git a/lib/ansible/plugins/action/iosxr.py b/lib/ansible/plugins/action/iosxr.py
index 84cf3e653e..02ab8d6709 100644
--- a/lib/ansible/plugins/action/iosxr.py
+++ b/lib/ansible/plugins/action/iosxr.py
@@ -52,10 +52,10 @@ class ActionModule(_ActionModule):
         pc.connection = 'network_cli'
         pc.network_os = 'iosxr'
         pc.remote_addr = provider['host'] or self._play_context.remote_addr
-        pc.port = provider['port'] or self._play_context.port or 22
+        pc.port = int(provider['port'] or self._play_context.port or 22)
         pc.remote_user = provider['username'] or self._play_context.connection_user
         pc.password = provider['password'] or self._play_context.password
-        pc.timeout = provider['timeout'] or C.PERSISTENT_COMMAND_TIMEOUT
+        pc.timeout = int(provider['timeout'] or C.PERSISTENT_COMMAND_TIMEOUT)
 
         display.vvv('using connection plugin %s' % pc.connection, pc.remote_addr)
         connection = self._shared_loader_obj.connection_loader.get('persistent', pc, sys.stdin)
diff --git a/lib/ansible/plugins/action/junos.py b/lib/ansible/plugins/action/junos.py
index 15d993d77d..7ea20825c8 100644
--- a/lib/ansible/plugins/action/junos.py
+++ b/lib/ansible/plugins/action/junos.py
@@ -71,7 +71,7 @@ class ActionModule(_ActionModule):
         pc.remote_user = provider['username'] or self._play_context.connection_user
         pc.password = provider['password'] or self._play_context.password
         pc.private_key_file = provider['ssh_keyfile'] or self._play_context.private_key_file
-        pc.timeout = provider['timeout'] or C.PERSISTENT_COMMAND_TIMEOUT
+        pc.timeout = int(provider['timeout'] or C.PERSISTENT_COMMAND_TIMEOUT)
 
         display.vvv('using connection plugin %s' % pc.connection, pc.remote_addr)
         connection = self._shared_loader_obj.connection_loader.get('persistent', pc, sys.stdin)
diff --git a/lib/ansible/plugins/action/net_base.py b/lib/ansible/plugins/action/net_base.py
index 510063a332..a375cd0054 100644
--- a/lib/ansible/plugins/action/net_base.py
+++ b/lib/ansible/plugins/action/net_base.py
@@ -51,16 +51,16 @@ class ActionModule(ActionBase):
 
         if play_context.network_os == 'junos':
             play_context.connection = 'netconf'
-            play_context.port = self.provider['port'] or self._play_context.port or 830
+            play_context.port = int(self.provider['port'] or self._play_context.port or 830)
         else:
             play_context.connection = 'network_cli'
-            play_context.port = self.provider['port'] or self._play_context.port or 22
+            play_context.port = int(self.provider['port'] or self._play_context.port or 22)
 
         play_context.remote_addr = self.provider['host'] or self._play_context.remote_addr
         play_context.remote_user = self.provider['username'] or self._play_context.connection_user
         play_context.password = self.provider['password'] or self._play_context.password
         play_context.private_key_file = self.provider['ssh_keyfile'] or self._play_context.private_key_file
-        play_context.timeout = self.provider['timeout'] or C.PERSISTENT_COMMAND_TIMEOUT
+        play_context.timeout = int(self.provider['timeout'] or C.PERSISTENT_COMMAND_TIMEOUT)
         if 'authorize' in self.provider.keys():
             play_context.become = self.provider['authorize'] or False
             play_context.become_pass = self.provider['auth_pass']
diff --git a/lib/ansible/plugins/action/nxos.py b/lib/ansible/plugins/action/nxos.py
index e8e2d36057..34f3c218e5 100644
--- a/lib/ansible/plugins/action/nxos.py
+++ b/lib/ansible/plugins/action/nxos.py
@@ -55,11 +55,11 @@ class ActionModule(_ActionModule):
             pc.connection = 'network_cli'
             pc.network_os = 'nxos'
             pc.remote_addr = provider['host'] or self._play_context.remote_addr
-            pc.port = provider['port'] or self._play_context.port or 22
+            pc.port = int(provider['port'] or self._play_context.port or 22)
             pc.remote_user = provider['username'] or self._play_context.connection_user
             pc.password = provider['password'] or self._play_context.password
             pc.private_key_file = provider['ssh_keyfile'] or self._play_context.private_key_file
-            pc.timeout = provider['timeout'] or C.PERSISTENT_COMMAND_TIMEOUT
+            pc.timeout = int(provider['timeout'] or C.PERSISTENT_COMMAND_TIMEOUT)
             self._task.args['provider'] = provider.update(
                 host=pc.remote_addr,
                 port=pc.port,
@@ -99,7 +99,7 @@ class ActionModule(_ActionModule):
                     provider['port'] = 80
 
             if provider.get('timeout') is None:
-                provider['timeout'] = self._play_context.timeout
+                provider['timeout'] = C.PERSISTENT_COMMAND_TIMEOUT
 
             if provider.get('username') is None:
                 provider['username'] = self._play_context.connection_user
diff --git a/lib/ansible/plugins/action/sros.py b/lib/ansible/plugins/action/sros.py
index 0e0709036f..f70f767973 100644
--- a/lib/ansible/plugins/action/sros.py
+++ b/lib/ansible/plugins/action/sros.py
@@ -52,11 +52,11 @@ class ActionModule(_ActionModule):
         pc.connection = 'network_cli'
         pc.network_os = 'sros'
         pc.remote_addr = provider['host'] or self._play_context.remote_addr
-        pc.port = provider['port'] or self._play_context.port or 22
+        pc.port = int(provider['port'] or self._play_context.port or 22)
         pc.remote_user = provider['username'] or self._play_context.connection_user
         pc.password = provider['password'] or self._play_context.password
         pc.private_key_file = provider['ssh_keyfile'] or self._play_context.private_key_file
-        pc.timeout = provider['timeout'] or C.PERSISTENT_COMMAND_TIMEOUT
+        pc.timeout = int(provider['timeout'] or C.PERSISTENT_COMMAND_TIMEOUT)
 
         display.vvv('using connection plugin %s' % pc.connection, pc.remote_addr)
         connection = self._shared_loader_obj.connection_loader.get('persistent', pc, sys.stdin)
diff --git a/lib/ansible/plugins/action/vyos.py b/lib/ansible/plugins/action/vyos.py
index 3e9eb1106d..73a651a546 100644
--- a/lib/ansible/plugins/action/vyos.py
+++ b/lib/ansible/plugins/action/vyos.py
@@ -51,11 +51,11 @@ class ActionModule(_ActionModule):
         pc.connection = 'network_cli'
         pc.network_os = 'vyos'
         pc.remote_addr = provider['host'] or self._play_context.remote_addr
-        pc.port = provider['port'] or self._play_context.port or 22
+        pc.port = int(provider['port'] or self._play_context.port or 22)
         pc.remote_user = provider['username'] or self._play_context.connection_user
         pc.password = provider['password'] or self._play_context.password
         pc.private_key_file = provider['ssh_keyfile'] or self._play_context.private_key_file
-        pc.timeout = provider['timeout'] or C.PERSISTENT_COMMAND_TIMEOUT
+        pc.timeout = int(provider['timeout'] or C.PERSISTENT_COMMAND_TIMEOUT)
 
         display.vvv('using connection plugin %s' % pc.connection, pc.remote_addr)
         connection = self._shared_loader_obj.connection_loader.get('persistent', pc, sys.stdin)
