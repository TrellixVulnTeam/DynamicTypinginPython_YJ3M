commit 5e20fd0943421739b40db5a7ac9bf1e5ff463b19
Author: Jordan Borean <jborean93@gmail.com>
Date:   Thu Nov 16 08:51:16 2017 +1000

    removed psobject to hashtables that were missed (#32710)
    
    * removed psobject to hashtables that were missed
    
    * fix up win_region change

diff --git a/lib/ansible/modules/windows/win_iis_virtualdirectory.ps1 b/lib/ansible/modules/windows/win_iis_virtualdirectory.ps1
index 44854ff09b..e8fd6b421f 100644
--- a/lib/ansible/modules/windows/win_iis_virtualdirectory.ps1
+++ b/lib/ansible/modules/windows/win_iis_virtualdirectory.ps1
@@ -26,13 +26,13 @@ $params = Parse-Args $args;
 # Name parameter
 $name = Get-Attr $params "name" $FALSE;
 If ($name -eq $FALSE) {
-    Fail-Json (New-Object psobject) "missing required argument: name";
+    Fail-Json @{} "missing required argument: name";
 }
 
 # Site
 $site = Get-Attr $params "site" $FALSE;
 If ($site -eq $FALSE) {
-    Fail-Json (New-Object psobject) "missing required argument: site";
+    Fail-Json @{} "missing required argument: site";
 }
 
 # Application
@@ -53,8 +53,8 @@ if ((Get-Module "WebAdministration" -ErrorAction SilentlyContinue) -eq $null) {
 }
 
 # Result
-$result = New-Object psobject @{
-  directory = New-Object psobject
+$result = @{
+  directory = @{}
   changed = $false
 };
 
@@ -76,13 +76,13 @@ try {
   # Add directory
   If(($state -eq 'present') -and (-not $directory)) {
     If ($physical_path -eq $FALSE) {
-      Fail-Json (New-Object psobject) "missing required arguments: physical_path"
+      Fail-Json @{} "missing required arguments: physical_path"
     }
     If (-not (Test-Path $physical_path)) {
-      Fail-Json (New-Object psobject) "specified folder must already exist: physical_path"
+      Fail-Json @{} "specified folder must already exist: physical_path"
     }
 
-    $directory_parameters = New-Object psobject @{
+    $directory_parameters = @{
       Site = $site
       Name = $name
       PhysicalPath = $physical_path
@@ -108,7 +108,7 @@ try {
     # Change Physical Path if needed
     if($physical_path) {
       If (-not (Test-Path $physical_path)) {
-        Fail-Json (New-Object psobject) "specified folder must already exist: physical_path"
+        Fail-Json @{} "specified folder must already exist: physical_path"
       }
 
       $vdir_folder = Get-Item $directory.PhysicalPath
@@ -125,7 +125,7 @@ try {
 
 # Result
 $directory = Get-WebVirtualDirectory -Site $site -Name $name
-$result.directory = New-Object psobject @{
+$result.directory = @{
   PhysicalPath = $directory.PhysicalPath
 }
 
diff --git a/lib/ansible/modules/windows/win_iis_webbinding.ps1 b/lib/ansible/modules/windows/win_iis_webbinding.ps1
index e3fe4bb7ab..9b212ff968 100644
--- a/lib/ansible/modules/windows/win_iis_webbinding.ps1
+++ b/lib/ansible/modules/windows/win_iis_webbinding.ps1
@@ -32,7 +32,7 @@ $ip = Get-AnsibleParam $params -name "ip"
 $certificatehash = Get-AnsibleParam $params -name "certificate_hash" -default $false
 $certificateStoreName = Get-AnsibleParam $params -name "certificate_store_name" -default "MY"
 
-$binding_parameters = New-Object psobject @{
+$binding_parameters = @{
   Name = $name
 };
 
@@ -58,7 +58,7 @@ if ((Get-Module "WebAdministration" -ErrorAction SilentlyContinue) -eq $null){
 }
 
 function Create-Binding-Info {
-  return New-Object psobject @{
+  return @{
     "bindingInformation" = $args[0].bindingInformation
     "certificateHash" = $args[0].certificateHash
     "certificateStoreName" = $args[0].certificateStoreName
@@ -69,7 +69,7 @@ function Create-Binding-Info {
 }
 
 # Result
-$result = New-Object psobject @{
+$result = @{
   changed = $false
   parameters = $binding_parameters
   matched = @()
diff --git a/lib/ansible/modules/windows/win_iis_website.ps1 b/lib/ansible/modules/windows/win_iis_website.ps1
index 911af0e8fb..8a5a252e10 100644
--- a/lib/ansible/modules/windows/win_iis_website.ps1
+++ b/lib/ansible/modules/windows/win_iis_website.ps1
@@ -25,14 +25,14 @@ $params = Parse-Args $args;
 # Name parameter
 $name = Get-Attr $params "name" $FALSE;
 If ($name -eq $FALSE) {
-    Fail-Json (New-Object psobject) "missing required argument: name";
+    Fail-Json @{} "missing required argument: name";
 }
 
 # State parameter
 $state = Get-Attr $params "state" $FALSE;
 $state.ToString().ToLower();
 If (($state -ne $FALSE) -and ($state -ne 'started') -and ($state -ne 'stopped') -and ($state -ne 'restarted') -and ($state -ne 'absent')) {
-  Fail-Json (New-Object psobject) "state is '$state'; must be 'started', 'restarted', 'stopped' or 'absent'"
+  Fail-Json @{} "state is '$state'; must be 'started', 'restarted', 'stopped' or 'absent'"
 }
 
 # Path parameter
@@ -65,8 +65,8 @@ if ((Get-Module "WebAdministration" -ErrorAction SilentlyContinue) -eq $null) {
 }
 
 # Result
-$result = New-Object psobject @{
-  site = New-Object psobject
+$result = @{
+  site = @{}
   changed = $false
 };
 
@@ -77,13 +77,13 @@ Try {
   # Add site
   If(($state -ne 'absent') -and (-not $site)) {
     If ($physical_path -eq $FALSE) {
-      Fail-Json (New-Object psobject) "missing required arguments: physical_path"
+      Fail-Json @{} "missing required arguments: physical_path"
     }
     ElseIf (-not (Test-Path $physical_path)) {
-      Fail-Json (New-Object psobject) "specified folder must already exist: physical_path"
+      Fail-Json @{} "specified folder must already exist: physical_path"
     }
 
-    $site_parameters = New-Object psobject @{
+    $site_parameters = @{
       Name = $name
       PhysicalPath = $physical_path
     };
@@ -129,7 +129,7 @@ Try {
     # Change Physical Path if needed
     if($physical_path) {
       If (-not (Test-Path $physical_path)) {
-        Fail-Json (New-Object psobject) "specified folder must already exist: physical_path"
+        Fail-Json @{} "specified folder must already exist: physical_path"
       }
 
       $folder = Get-Item $physical_path
@@ -173,7 +173,7 @@ Try {
 }
 Catch
 {
-  Fail-Json (New-Object psobject) $_.Exception.Message
+  Fail-Json @{} $_.Exception.Message
 }
 
 if ($state -ne 'absent')
@@ -183,7 +183,7 @@ if ($state -ne 'absent')
 
 if ($site)
 {
-  $result.site = New-Object psobject @{
+  $result.site = @{
     Name = $site.Name
     ID = $site.ID
     State = $site.State
diff --git a/lib/ansible/modules/windows/win_reg_stat.ps1 b/lib/ansible/modules/windows/win_reg_stat.ps1
index 1bdd0ee4b4..ae6a200146 100644
--- a/lib/ansible/modules/windows/win_reg_stat.ps1
+++ b/lib/ansible/modules/windows/win_reg_stat.ps1
@@ -69,7 +69,7 @@ Function Get-PropertyObject($hive, $net_hive, $path, $property) {
         $raw_value = $value
     }
 
-    $object = New-Object PSObject @{
+    $object = @{
         raw_value = $raw_value
         value = $value
         type = $type
diff --git a/lib/ansible/modules/windows/win_region.ps1 b/lib/ansible/modules/windows/win_region.ps1
index 2b6f3225fa..b947d51138 100644
--- a/lib/ansible/modules/windows/win_region.ps1
+++ b/lib/ansible/modules/windows/win_region.ps1
@@ -102,7 +102,7 @@ Function Set-CultureLegacy($culture) {
 
     $lookup = New-Object Ansible.LocaleHelper($culture)
     # hex values are from http://www.pinvoke.net/default.aspx/kernel32/GetLocaleInfoEx.html
-    $wanted_values = New-Object PSObject @{
+    $wanted_values = @{
         Locale = '{0:x8}' -f ([System.Globalization.CultureInfo]$culture).LCID
         LocaleName = $culture
         s1159 = $lookup.GetValueFromType(0x00000028)
diff --git a/test/integration/targets/win_ping/library/win_ping_set_attr.ps1 b/test/integration/targets/win_ping/library/win_ping_set_attr.ps1
index 8279b4b414..f17049643b 100644
--- a/test/integration/targets/win_ping/library/win_ping_set_attr.ps1
+++ b/test/integration/targets/win_ping/library/win_ping_set_attr.ps1
@@ -20,7 +20,7 @@ $params = Parse-Args $args $true;
 
 $data = Get-Attr $params "data" "pong";
 
-$result = New-Object psobject @{
+$result = @{
     changed = $false
     ping = "pong"
 };
diff --git a/test/integration/targets/win_ping/library/win_ping_strict_mode_error.ps1 b/test/integration/targets/win_ping/library/win_ping_strict_mode_error.ps1
index d498cbcf17..e94f4a6d2a 100644
--- a/test/integration/targets/win_ping/library/win_ping_strict_mode_error.ps1
+++ b/test/integration/targets/win_ping/library/win_ping_strict_mode_error.ps1
@@ -22,7 +22,7 @@ $x = $params.thisPropertyDoesNotExist
 
 $data = Get-Attr $params "data" "pong";
 
-$result = New-Object psobject @{
+$result = @{
     changed = $false
     ping = $data
 };
diff --git a/test/integration/targets/win_ping/library/win_ping_syntax_error.ps1 b/test/integration/targets/win_ping/library/win_ping_syntax_error.ps1
index 6bfe621a80..d4c9f07ad5 100644
--- a/test/integration/targets/win_ping/library/win_ping_syntax_error.ps1
+++ b/test/integration/targets/win_ping/library/win_ping_syntax_error.ps1
@@ -22,7 +22,7 @@ $params = Parse-Args $args $true;
 
 $data = Get-Attr $params "data" "pong";
 
-$result = New-Object psobject @{
+$result = @{
     changed = $false
     ping = $data
 };
diff --git a/test/integration/targets/win_ping/library/win_ping_throw.ps1 b/test/integration/targets/win_ping/library/win_ping_throw.ps1
index f0b32186d8..7306f4d280 100644
--- a/test/integration/targets/win_ping/library/win_ping_throw.ps1
+++ b/test/integration/targets/win_ping/library/win_ping_throw.ps1
@@ -22,7 +22,7 @@ $params = Parse-Args $args $true;
 
 $data = Get-Attr $params "data" "pong";
 
-$result = New-Object psobject @{
+$result = @{
     changed = $false
     ping = $data
 };
diff --git a/test/integration/targets/win_ping/library/win_ping_throw_string.ps1 b/test/integration/targets/win_ping/library/win_ping_throw_string.ps1
index e1f3ca6065..09e3b7cb45 100644
--- a/test/integration/targets/win_ping/library/win_ping_throw_string.ps1
+++ b/test/integration/targets/win_ping/library/win_ping_throw_string.ps1
@@ -22,7 +22,7 @@ $params = Parse-Args $args $true;
 
 $data = Get-Attr $params "data" "pong";
 
-$result = New-Object psobject @{
+$result = @{
     changed = $false
     ping = $data
 };
