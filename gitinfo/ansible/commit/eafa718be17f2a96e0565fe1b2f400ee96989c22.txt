commit eafa718be17f2a96e0565fe1b2f400ee96989c22
Author: Toshio Kuratomi <a.badger@gmail.com>
Date:   Wed Oct 15 19:37:29 2014 -0400

    Remove inherit from object as it's no longer needed to determine new-style classes

diff --git a/v2/ansible/executor/HostLog.py b/v2/ansible/executor/HostLog.py
index 9c0565b199..495ad79f7d 100644
--- a/v2/ansible/executor/HostLog.py
+++ b/v2/ansible/executor/HostLog.py
@@ -19,7 +19,7 @@
 from __future__ import (absolute_import, division, print_function)
 __metaclass__ = type
 
-class HostLog(object):
+class HostLog:
 
    def __init__(self, host):
        self.host = host
diff --git a/v2/ansible/executor/HostPlaybookIterator.py b/v2/ansible/executor/HostPlaybookIterator.py
index 22189583f9..07fab06714 100644
--- a/v2/ansible/executor/HostPlaybookIterator.py
+++ b/v2/ansible/executor/HostPlaybookIterator.py
@@ -19,7 +19,7 @@
 from __future__ import (absolute_import, division, print_function)
 __metaclass__ = type
 
-class HostPlaybookIterator(object):
+class HostPlaybookIterator:
 
    def __init__(self, host, playbook):
        pass
diff --git a/v2/ansible/executor/PlaybookExecutor.py b/v2/ansible/executor/PlaybookExecutor.py
index 0f57b4bbed..7031e51142 100644
--- a/v2/ansible/executor/PlaybookExecutor.py
+++ b/v2/ansible/executor/PlaybookExecutor.py
@@ -19,7 +19,7 @@
 from __future__ import (absolute_import, division, print_function)
 __metaclass__ = type
 
-class PlaybookExecutor(object):
+class PlaybookExecutor:
 
    def __init__(self, list_of_plays=[]):
        # self.tqm = TaskQueueManager(forks)
diff --git a/v2/ansible/executor/TaskExecutor.py b/v2/ansible/executor/TaskExecutor.py
index b3156bc262..878c15c489 100644
--- a/v2/ansible/executor/TaskExecutor.py
+++ b/v2/ansible/executor/TaskExecutor.py
@@ -19,7 +19,7 @@
 from __future__ import (absolute_import, division, print_function)
 __metaclass__ = type
 
-class TaskExecutor(object):
+class TaskExecutor:
 
    def __init__(self, task, host):
        pass
diff --git a/v2/ansible/executor/TaskQueueManager.py b/v2/ansible/executor/TaskQueueManager.py
index 93066f6b40..a79235bfd0 100644
--- a/v2/ansible/executor/TaskQueueManager.py
+++ b/v2/ansible/executor/TaskQueueManager.py
@@ -19,7 +19,7 @@
 from __future__ import (absolute_import, division, print_function)
 __metaclass__ = type
 
-class TaskQueueManagerHostPlaybookIterator(object):
+class TaskQueueManagerHostPlaybookIterator:
 
    def __init__(self, host, playbook):
        pass
diff --git a/v2/ansible/inventory/__init__.py b/v2/ansible/inventory/__init__.py
index 7fc8112807..11f7e35c8b 100644
--- a/v2/ansible/inventory/__init__.py
+++ b/v2/ansible/inventory/__init__.py
@@ -21,7 +21,7 @@
 from __future__ import (absolute_import, division, print_function)
 __metaclass__ = type
 
-class Inventory(object):
+class Inventory:
     def __init__(self, host_list=C.DEFAULT_HOST_LIST, vault_password=None):
         pass
     def get_hosts(self, pattern="all"):
diff --git a/v2/ansible/parsing/mod_args.py b/v2/ansible/parsing/mod_args.py
index 2a29c43742..4c452b4edf 100644
--- a/v2/ansible/parsing/mod_args.py
+++ b/v2/ansible/parsing/mod_args.py
@@ -25,7 +25,7 @@ from ansible.errors import AnsibleParserError
 from ansible.plugins import module_finder
 from ansible.parsing.splitter import parse_kv
 
-class ModuleArgsParser(object):
+class ModuleArgsParser:
 
     """
     There are several ways a module and argument set can be expressed:
diff --git a/v2/ansible/parsing/yaml/objects.py b/v2/ansible/parsing/yaml/objects.py
index 6ea8f196f1..6fb1631b87 100644
--- a/v2/ansible/parsing/yaml/objects.py
+++ b/v2/ansible/parsing/yaml/objects.py
@@ -19,7 +19,7 @@
 from __future__ import (absolute_import, division, print_function)
 __metaclass__ = type
 
-class AnsibleBaseYAMLObject(object):
+class AnsibleBaseYAMLObject:
     '''
     the base class used to sub-class python built-in objects
     so that we can add attributes to them during yaml parsing
diff --git a/v2/ansible/playbook/__init__.py b/v2/ansible/playbook/__init__.py
index fa7ec5faa5..87b422b280 100644
--- a/v2/ansible/playbook/__init__.py
+++ b/v2/ansible/playbook/__init__.py
@@ -19,7 +19,7 @@
 from __future__ import (absolute_import, division, print_function)
 __metaclass__ = type
 
-class Playbook(object):
+class Playbook:
     def __init__(self, filename):
         self.ds = v2.utils.load_yaml_from_file(filename)
         self.plays = []
diff --git a/v2/ansible/playbook/attribute.py b/v2/ansible/playbook/attribute.py
index d029c3e610..d28ba4cc85 100644
--- a/v2/ansible/playbook/attribute.py
+++ b/v2/ansible/playbook/attribute.py
@@ -21,7 +21,7 @@ __metaclass__ = type
 
 #from ansible.common.errors import AnsibleError
 
-class Attribute(object):
+class Attribute:
 
     def __init__(self, isa=None, private=False, default=None):
 
diff --git a/v2/ansible/playbook/base.py b/v2/ansible/playbook/base.py
index 6fe6bc1d2d..cf075b020e 100644
--- a/v2/ansible/playbook/base.py
+++ b/v2/ansible/playbook/base.py
@@ -26,7 +26,7 @@ from six import iteritems, string_types
 from ansible.playbook.attribute import Attribute, FieldAttribute
 from ansible.parsing import load as ds_load
 
-class Base(object):
+class Base:
 
     def __init__(self):
 
diff --git a/v2/ansible/playbook/conditional.py b/v2/ansible/playbook/conditional.py
index b3770a276e..b921d4191a 100644
--- a/v2/ansible/playbook/conditional.py
+++ b/v2/ansible/playbook/conditional.py
@@ -19,7 +19,7 @@
 from __future__ import (absolute_import, division, print_function)
 __metaclass__ = type
 
-class Conditional(object):
+class Conditional:
 
     def __init__(self, task):
         self._task = task
diff --git a/v2/ansible/playbook/tag.py b/v2/ansible/playbook/tag.py
index 50dae41172..cb3e3f9291 100644
--- a/v2/ansible/playbook/tag.py
+++ b/v2/ansible/playbook/tag.py
@@ -22,7 +22,7 @@ __metaclass__ = type
 from errors import AnsibleError
 from ansible.utils import list_union
 
-class Tag(object):
+class Tag:
     def __init__(self, tags=[]):
         assert isinstance(tags, list)
         self._tags = tags
diff --git a/v2/ansible/plugins/__init__.py b/v2/ansible/plugins/__init__.py
index 445fbd539f..958ed2850f 100644
--- a/v2/ansible/plugins/__init__.py
+++ b/v2/ansible/plugins/__init__.py
@@ -39,7 +39,7 @@ def push_basedir(basedir):
     if basedir not in _basedirs:
         _basedirs.insert(0, basedir)
 
-class PluginLoader(object):
+class PluginLoader:
 
     '''
     PluginLoader loads plugins from the configured plugin directories.
