commit e81c97663663b0130bb13adf68d8321b681f6d39
Author: James Tanner <tanner.jc@gmail.com>
Date:   Tue Nov 19 16:35:06 2013 -0500

    Fix pep8 errors in unarchive module

diff --git a/lib/ansible/runner/action_plugins/unarchive.py b/lib/ansible/runner/action_plugins/unarchive.py
index 8fcd0f3db0..f0b9dee945 100644
--- a/lib/ansible/runner/action_plugins/unarchive.py
+++ b/lib/ansible/runner/action_plugins/unarchive.py
@@ -55,14 +55,14 @@ class ActionModule(object):
 
         source = template.template(self.runner.basedir, source, inject)
         if '_original_file' in inject:
-              source = utils.path_dwim_relative(inject['_original_file'], 'files', source, self.runner.basedir)
+            source = utils.path_dwim_relative(inject['_original_file'], 'files', source, self.runner.basedir)
         else:
-              source = utils.path_dwim(self.runner.basedir, source)
+            source = utils.path_dwim(self.runner.basedir, source)
 
         remote_md5 = self.runner._remote_md5(conn, tmp, dest)
         if remote_md5 != '3':
-              result = dict(failed=True, msg="dest must be an existing dir")
-              return ReturnData(conn=conn, result=result)
+            result = dict(failed=True, msg="dest must be an existing dir")
+            return ReturnData(conn=conn, result=result)
 
         # transfer the file to a remote tmp location
         tmp_src = tmp + 'source'
diff --git a/library/files/unarchive b/library/files/unarchive
index 17999d30ce..7a6fb9a013 100644
--- a/library/files/unarchive
+++ b/library/files/unarchive
@@ -96,7 +96,7 @@ class _tgzfile(object):
     def is_unarchived(self):
         dirof = os.path.dirname(self.dest)
         destbase = os.path.basename(self.dest)
-        cmd = 'tar -v -C "%s" --diff -%sf "%s"'  % (self.dest, self.zipflag,self.src )
+        cmd = 'tar -v -C "%s" --diff -%sf "%s"'  % (self.dest, self.zipflag,self.src)
         rc, out, err = self.module.run_command(cmd)
         bool = True if rc == 0 else False
         return dict( bool = bool, rc = rc , out = out, err = err, cmd = cmd)
@@ -138,7 +138,7 @@ class _tarxz(_tgzfile):
         self.zipflag = 'J'
 
 # try handlers in order and return the one that works or bail if none work
-def pick_handler (src,dest,module):
+def pick_handler(src,dest,module):
     handlers = [_tgzfile, _zipfile, _tarfile, _tarbzip, _tarxz]
     for handler in handlers:
         obj = handler(src,dest,module)
