commit b4b115cd13978b107c830f68a47000f36a73113d
Author: Michael DeHaan <michael.dehaan@gmail.com>
Date:   Tue Aug 5 20:37:03 2014 -0400

    File common arguments should not be used in all docs pages.

diff --git a/lib/ansible/utils/module_docs_fragments/files.py b/lib/ansible/utils/module_docs_fragments/files.py
index df3c8cf37b..c73c53da47 100644
--- a/lib/ansible/utils/module_docs_fragments/files.py
+++ b/lib/ansible/utils/module_docs_fragments/files.py
@@ -21,26 +21,6 @@ class ModuleDocFragment(object):
     # Standard files documentation fragment
     DOCUMENTATION = """
 options:
-  path:
-    description:
-      - 'path to the file being managed.  Aliases: I(dest), I(name)'
-    required: true
-    default: []
-    aliases: ['dest', 'name'] 
-  state:
-    description:
-      - If C(directory), all immediate subdirectories will be created if they
-        do not exist, since 1.7 they will be created with the supplied permissions.
-        If C(file), the file will NOT be created if it does not exist, see the M(copy)
-        or M(template) module if you want that behavior.  If C(link), the symbolic
-        link will be created or changed. Use C(hard) for hardlinks. If C(absent),
-        directories will be recursively deleted, and files or symlinks will be unlinked.
-        If C(touch) (new in 1.4), an empty file will be created if the c(path) does not
-        exist, while an existing file or directory will receive updated file access and
-        modification times (similar to the way `touch` works from the command line).
-    required: false
-    default: file
-    choices: [ file, link, directory, hard, touch, absent ]
   mode:
     required: false
     default: null
@@ -59,13 +39,6 @@ options:
     choices: []
     description:
       - name of the group that should own the file/directory, as would be fed to I(chown)
-  src:
-    required: false
-    default: null
-    choices: []
-    description:
-      - path of the file to link to (applies only to C(state=link)). Will accept absolute,
-        relative and nonexisting paths. Relative paths are not expanded.
   seuser:
     required: false
     default: null
@@ -94,19 +67,4 @@ options:
       - level part of the SELinux file context. This is the MLS/MCS attribute,
         sometimes known as the C(range). C(_default) feature works as for
         I(seuser).
-  recurse:
-    required: false
-    default: "no"
-    choices: [ "yes", "no" ]
-    version_added: "1.1"
-    description:
-      - recursively set the specified file attributes (applies only to state=directory)
-  force:
-    required: false
-    default: "no"
-    choices: [ "yes", "no" ]
-    description:
-      - 'force the creation of the symlinks in two cases: the source file does 
-        not exist (but will appear later); the destination exists and is a file (so, we need to unlink the
-        "path" file and create symlink to the "src" file in place of it).'
 """
