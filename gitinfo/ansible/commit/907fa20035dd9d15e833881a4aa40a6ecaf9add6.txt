commit 907fa20035dd9d15e833881a4aa40a6ecaf9add6
Author: Adam Keech <akeech@chathamfinancial.com>
Date:   Thu Jun 25 14:18:57 2015 -0400

    Adding win_regedit module

diff --git a/lib/ansible/modules/extras/windows/win_regedit.ps1 b/lib/ansible/modules/extras/windows/win_regedit.ps1
new file mode 100644
index 0000000000..18cdc99c6a
--- /dev/null
+++ b/lib/ansible/modules/extras/windows/win_regedit.ps1
@@ -0,0 +1,173 @@
+#!powershell
+# This file is part of Ansible
+#
+# (c) 2015, Adam Keech <akeech@chathamfinancial.com>, Josh Ludwig <jludwig@chathamfinancial.com>
+#
+# Ansible is free software: you can redistribute it and/or modify
+# it under the terms of the GNU General Public License as published by
+# the Free Software Foundation, either version 3 of the License, or
+# (at your option) any later version.
+#
+# Ansible is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+# GNU General Public License for more details.
+#
+# You should have received a copy of the GNU General Public License
+# along with Ansible.  If not, see <http://www.gnu.org/licenses/>.
+
+$ErrorActionPreference = "Stop"
+
+# WANT_JSON
+# POWERSHELL_COMMON
+
+$params = Parse-Args $args;
+$result = New-Object PSObject;
+Set-Attr $result "changed" $false;
+
+If ($params.name)
+{
+    $registryKeyName = $params.name
+}
+Else
+{
+    Fail-Json $result "missing required argument: name"
+}
+
+If ($params.state)
+{
+    $state = $params.state.ToString().ToLower()
+    If (($state -ne "present") -and ($state -ne "absent"))
+    {
+        Fail-Json $result "state is $state; must be present or absent"
+    }
+}
+Else
+{
+    $state = "present"
+}
+
+If ($params.value)
+{
+    $registryKeyValue = $params.value
+}
+ElseIf ($state -eq "present")
+{
+    Fail-Json $result "missing required argument: value"
+}
+
+If ($params.valuetype)
+{
+    $registryValueType = $params.valuetype.ToString().ToLower()
+    $validRegistryValueTypes = "binary", "dword", "expandstring", "multistring", "string", "qword"
+    If ($validRegistryValueTypes -notcontains $registryValueType)
+    {
+        Fail-Json $result "valuetype is $registryValueType; must be binary, dword, expandstring, multistring, string, or qword"
+    }
+}
+Else
+{
+    $registryValueType = "string"
+}
+
+If ($params.path)
+{
+    $registryKeyPath = $params.path
+}
+Else
+{
+    Fail-Json $result "missing required argument: path"
+}
+
+Function Test-RegistryValue {
+    Param (
+        [parameter(Mandatory=$true)]
+        [ValidateNotNullOrEmpty()]$Path,
+        [parameter(Mandatory=$true)]
+        [ValidateNotNullOrEmpty()]$Value
+    )
+    Try {
+        Get-ItemProperty -Path $Path -Name $Value
+        Return $true
+    }
+    Catch {
+        Return $false
+    }
+}
+
+if($state -eq "present") {
+    if (Test-Path $registryKeyPath) {
+        if (Test-RegistryValue -Path $registryKeyPath -Value $registryKeyName)
+        {
+            # Changes Type and Value
+            If ((Get-Item $registryKeyPath).GetValueKind($registryKeyName) -ne $registryValueType)
+            {
+                Try
+                {
+                    Remove-ItemProperty -Path $registryKeyPath -Name $registryKeyName
+                    New-ItemProperty -Path $registryKeyPath -Name $registryKeyName -Value $registryKeyValue -PropertyType $registryValueType
+                    $result.changed = $true
+                }
+                Catch
+                {
+                    Fail-Json $result $_.Exception.Message
+                }
+            }
+            # Only Changes Value
+            ElseIf ((Get-ItemProperty -Path $registryKeyPath | Select-Object -ExpandProperty $registryKeyName) -ne $registryKeyValue) 
+            {
+                Try {
+                    Set-ItemProperty -Path $registryKeyPath -Name $registryKeyName -Value $registryKeyValue
+                    $result.changed = $true
+                }
+                Catch
+                {
+                    Fail-Json $result $_.Exception.Message
+                }
+            }
+        }
+        else
+        {
+            Try
+            {
+                New-ItemProperty -Path $registryKeyPath -Name $registryKeyName -Value $registryKeyValue -PropertyType $registryValueType
+                $result.changed = $true
+            }
+            Catch
+            {
+                Fail-Json $result $_.Exception.Message
+            }
+        }
+    }
+    else
+    {
+        Try 
+        {
+            New-Item $registryKeyPath -Force | New-ItemProperty -Name $registryKeyName -Value $registryKeyValue -Force -PropertyType $registryValueType
+            $result.changed = $true
+        }
+        Catch
+        {
+            Fail-Json $result $_.Exception.Message
+        }
+    }
+}
+else
+{
+    if (Test-Path $registryKeyPath)
+    {
+        if (Test-RegistryValue -Path $registryKeyPath -Value $registryKeyName) {
+            Try
+            {
+                Remove-ItemProperty -Path $registryKeyPath -Name $registryKeyName
+                $result.changed = $true
+            }
+            Catch
+            {
+                Fail-Json $result $_.Exception.Message
+            }
+        }
+    }
+}
+
+Exit-Json $result
diff --git a/lib/ansible/modules/extras/windows/win_regedit.py b/lib/ansible/modules/extras/windows/win_regedit.py
new file mode 100644
index 0000000000..007ddd4e8a
--- /dev/null
+++ b/lib/ansible/modules/extras/windows/win_regedit.py
@@ -0,0 +1,101 @@
+#!/usr/bin/python
+# -*- coding: utf-8 -*-
+
+# (c) 2015, Adam Keech <akeech@chathamfinancial.com>, Josh Ludwig <jludwig@chathamfinancial.com>
+#
+# This file is part of Ansible
+#
+# Ansible is free software: you can redistribute it and/or modify
+# it under the terms of the GNU General Public License as published by
+# the Free Software Foundation, either version 3 of the License, or
+# (at your option) any later version.
+#
+# Ansible is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+# GNU General Public License for more details.
+#
+# You should have received a copy of the GNU General Public License
+# along with Ansible.  If not, see <http://www.gnu.org/licenses/>.
+
+# this is a windows documentation stub.  actual code lives in the .ps1
+# file of the same name
+
+DOCUMENTATION = '''
+---
+module: win_regedit
+version_added: "2.0"
+short_description: Add, Edit, or Remove Registry Key
+description:
+    - Add, Edit, or Remove Registry Key using ItemProperties Cmdlets
+options:
+  name:
+    description:
+      - Name of Registry Key
+    required: true
+    default: null
+    aliases: []
+  value:
+    description:
+      - Value of Registry Key
+    required: false
+    default: null
+    aliases: []
+  valuetype:
+    description:
+      - Type of Registry Key
+    required: false
+    choices:
+      - binary
+      - dword
+      - expandstring
+      - multistring
+      - string
+      - qword
+    default: string
+    aliases: []
+  path:
+    description:
+      - Path of Registry Key
+    required: true
+    default: null
+    aliases: []
+  state:
+    description:
+      - State of Registry Key
+    required: false
+    choices:
+      - present
+      - absent
+    default: present
+    aliases: []
+author: "Adam Keech (@smadam813), Josh Ludwig (@joshludwig)"
+'''
+
+EXAMPLES = '''
+  # Add Registry Key (Default is String)
+  win_regedit:
+    name: testkey
+    value: 1337
+    path: HKCU:\Software\MyCompany
+
+  # Add Registry Key with Type DWord
+  win_regedit:
+    name: testkey
+    value: 1337
+    valuetype: dword
+    path: HKCU:\Software\MyCompany
+
+  # Edit Registry Key called testkey
+  win_regedit:
+    name: testkey
+    value: 8008
+    path: HKCU:\Software\MyCompany
+
+  # Remove Registry Key called testkey
+  win_regedit:
+    name: testkey
+    path: HKCU:\Software\MyCompany
+    state: absent
+'''
+
