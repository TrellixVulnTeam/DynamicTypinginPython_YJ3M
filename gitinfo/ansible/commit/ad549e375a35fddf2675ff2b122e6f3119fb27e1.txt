commit ad549e375a35fddf2675ff2b122e6f3119fb27e1
Author: Richard Diphoorn <rdtechie@users.noreply.github.com>
Date:   Fri Feb 8 20:40:10 2019 +0100

    Changed 'Control Machine' to 'Control Node' (#51696)
    
    * Changed 'Control Machine' to 'Control Node' in the documentation. Changing the term 'Control Machine' to 'Control Node', to be in line with the basic concepts here: https://docs.ansible.com/ansible/latest/network/getting_started/basic_concepts.html
    
    Also for both entities; Control/Managed using the same common denominator 'Node' brings consistency.
    
    * Updated reference links to new term.

diff --git a/docs/docsite/rst/dev_guide/developing_inventory.rst b/docs/docsite/rst/dev_guide/developing_inventory.rst
index 785c7ea224..b212039cd4 100644
--- a/docs/docsite/rst/dev_guide/developing_inventory.rst
+++ b/docs/docsite/rst/dev_guide/developing_inventory.rst
@@ -50,7 +50,7 @@ Here are some plugins and the type of source they use:
 Inventory plugins
 =================
 
-Like most plugin types (except modules) they must be developed in Python, since they execute on the controller they should match the same requirements :ref:`control_machine_requirements`.
+Like most plugin types (except modules) they must be developed in Python, since they execute on the controller they should match the same requirements :ref:`control_node_requirements`.
 
 Most of the documentation in :ref:`developing_plugins` also applies here, so as to not repeat ourselves, you should read that document first and we'll include inventory plugin specifics next.
 
diff --git a/docs/docsite/rst/dev_guide/developing_plugins.rst b/docs/docsite/rst/dev_guide/developing_plugins.rst
index 6276e0346d..449c0b6890 100644
--- a/docs/docsite/rst/dev_guide/developing_plugins.rst
+++ b/docs/docsite/rst/dev_guide/developing_plugins.rst
@@ -20,7 +20,7 @@ Once you've reviewed these general guidelines, you can skip to the particular ty
 Writing plugins in Python
 =========================
 
-You must write your plugin in Python so it can be loaded by the ``PluginLoader`` and returned as a Python object that any module can use. Since your plugin will execute on the controller, you must write it in a :ref:`compatible version of Python <control_machine_requirements>`.
+You must write your plugin in Python so it can be loaded by the ``PluginLoader`` and returned as a Python object that any module can use. Since your plugin will execute on the controller, you must write it in a :ref:`compatible version of Python <control_node_requirements>`.
 
 Raising errors
 ==============
diff --git a/docs/docsite/rst/installation_guide/intro_installation.rst b/docs/docsite/rst/installation_guide/intro_installation.rst
index 9bb818e0bd..c75d4af272 100644
--- a/docs/docsite/rst/installation_guide/intro_installation.rst
+++ b/docs/docsite/rst/installation_guide/intro_installation.rst
@@ -36,12 +36,12 @@ For other installation options, we recommend installing via "pip", which is the
 If you wish to track the development release to use and test the latest features, we will share
 information about running from source.  It's not necessary to install the program to run from source.
 
-.. _control_machine_requirements:
+.. _control_node_requirements:
 
-Control Machine Requirements
+Control Node Requirements
 ````````````````````````````
 
-Currently Ansible can be run from any machine with Python 2 (version 2.7) or Python 3 (versions 3.5 and higher) installed. Windows isn't supported for the control machine.
+Currently Ansible can be run from any machine with Python 2 (version 2.7) or Python 3 (versions 3.5 and higher) installed. Windows isn't supported for the control node.
 
 This includes Red Hat, Debian, CentOS, macOS, any of the BSDs, and so on.
 
@@ -92,9 +92,9 @@ later).
 
         $ ansible myhost --sudo -m raw -a "yum install -y python2"
 
-.. _installing_the_control_machine:
+.. _installing_the_control_node:
 
-Installing the Control Machine
+Installing the Control Node
 ``````````````````````````````
 .. _from_yum:
 
@@ -345,7 +345,7 @@ open source projects.
 
 .. note::
 
-   If you are intending to use Tower as the Control Machine, do not use a source install. Please use OS package manager (like ``apt/yum``) or ``pip`` to install a stable version.
+   If you are intending to use Tower as the Control Node, do not use a source install. Please use OS package manager (like ``apt/yum``) or ``pip`` to install a stable version.
 
 
 To install from source, clone the Ansible git repository:
