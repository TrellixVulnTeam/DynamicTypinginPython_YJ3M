commit 9f4988dbfd3878215a9095a0ffa9539a540f3738
Author: martin f. krafft <madduck@madduck.net>
Date:   Fri Jun 14 10:38:09 2013 +0200

    Quote variables in shell script
    
    In case paths contain spaces, it's better to consistently quote
    variables, and to use $() instead of `` for external invocations.
    
    Signed-off-by: martin f. krafft <madduck@madduck.net>

diff --git a/hacking/env-setup b/hacking/env-setup
index b172d6892f..bcebd46250 100755
--- a/hacking/env-setup
+++ b/hacking/env-setup
@@ -7,23 +7,23 @@
 # When run using source as directed, $0 gets set to bash, so we must use $BASH_SOURCE
 case "$0" in
     (bash)
-        HACKING_DIR=${BASH_SOURCE%/*};;
+        HACKING_DIR="${BASH_SOURCE%/*}";;
     (*)
-        HACKING_DIR=${0%/*};;
+        HACKING_DIR="${0%/*}";;
 esac
 # The below is an alternative to readlink -fn which doesn't exist on OS X
 # Source: http://stackoverflow.com/a/1678636
-FULL_PATH=`python -c "import os; print(os.path.realpath('$HACKING_DIR'))"`
-ANSIBLE_HOME=${FULL_PATH%/*}
+FULL_PATH=$(python -c "import os; print(os.path.realpath('$HACKING_DIR'))")
+ANSIBLE_HOME="${FULL_PATH%/*}"
 
 PREFIX_PYTHONPATH="$ANSIBLE_HOME/lib"
 PREFIX_PATH="$ANSIBLE_HOME/bin"
 PREFIX_MANPATH="$ANSIBLE_HOME/docs/man"
 
-[[ $PYTHONPATH != ${PREFIX_PYTHONPATH}* ]] && export PYTHONPATH=$PREFIX_PYTHONPATH:$PYTHONPATH
-[[ $PATH != ${PREFIX_PATH}* ]] && export PATH=$PREFIX_PATH:$PATH
+[[ "$PYTHONPATH" != "${PREFIX_PYTHONPATH}"* ]] && export PYTHONPATH=$"PREFIX_PYTHONPATH:$PYTHONPATH"
+[[ "$PATH" != "${PREFIX_PATH}"* ]] && export PATH="$PREFIX_PATH:$PATH"
 export ANSIBLE_LIBRARY="$ANSIBLE_HOME/library"
-[[ $MANPATH != ${PREFIX_MANPATH}* ]] && export MANPATH=$PREFIX_MANPATH:$MANPATH
+[[ "$MANPATH" != "${PREFIX_MANPATH}"* ]] && export MANPATH="$PREFIX_MANPATH:$MANPATH"
 
 # Print out values unless -q is set
 
@@ -36,7 +36,7 @@ if [ $# -eq 0 -o "$1" != "-q" ] ; then
     echo "ANSIBLE_LIBRARY=$ANSIBLE_LIBRARY"
     echo "MANPATH=$MANPATH"
     echo ""
-    
+
     echo "Remember, you may wish to specify your host file with -i"
     echo ""
     echo "Done!"
