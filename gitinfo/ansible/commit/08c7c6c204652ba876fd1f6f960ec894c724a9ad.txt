commit 08c7c6c204652ba876fd1f6f960ec894c724a9ad
Author: Miguel Angel Muñoz González <magonzalez@fortinet.com>
Date:   Wed Aug 28 20:27:45 2019 +0200

    Minor bug fixes - 1 (#61456)

diff --git a/lib/ansible/modules/network/fortios/fortios_firewall_local_in_policy.py b/lib/ansible/modules/network/fortios/fortios_firewall_local_in_policy.py
index 377e67c2db..4e1561479d 100644
--- a/lib/ansible/modules/network/fortios/fortios_firewall_local_in_policy.py
+++ b/lib/ansible/modules/network/fortios/fortios_firewall_local_in_policy.py
@@ -26,7 +26,7 @@ DOCUMENTATION = '''
 module: fortios_firewall_local_in_policy
 short_description: Configure user defined IPv4 local-in policies in Fortinet's FortiOS and FortiGate.
 description:
-    - This module is able to configure a FortiGate or FortiOS device by allowing the
+    - This module is able to configure a FortiGate or FortiOS (FOS) device by allowing the
       user to set and modify firewall feature and local_in_policy category.
       Examples include all parameters and values need to be adjusted to datasources before usage.
       Tested with FOS v6.0.5
@@ -76,7 +76,10 @@ options:
     state:
         description:
             - Indicates whether to create or remove the object.
+              This attribute was present already in previous version in a deeper level.
+              It has been moved out to this outer level.
         type: str
+        required: false
         choices:
             - present
             - absent
@@ -87,9 +90,20 @@ options:
         default: null
         type: dict
         suboptions:
+            state:
+                description:
+                    - B(Deprecated)
+                    - Starting with Ansible 2.9 we recommend using the top-level 'state' parameter.
+                    - HORIZONTALLINE
+                    - Indicates whether to create or remove the object.
+                type: str
+                required: false
+                choices:
+                    - present
+                    - absent
             action:
                 description:
-                    - Action performed on traffic matching the policy.
+                    - Action performed on traffic matching the policy .
                 type: str
                 choices:
                     - accept
@@ -303,7 +317,12 @@ def underscore_to_hyphen(data):
 
 def firewall_local_in_policy(data, fos):
     vdom = data['vdom']
-    state = data['state']
+    if 'state' in data and data['state']:
+        state = data['state']
+    elif 'state' in data['firewall_local_in_policy'] and data['firewall_local_in_policy']:
+        state = data['firewall_local_in_policy']['state']
+    else:
+        state = True
     firewall_local_in_policy_data = data['firewall_local_in_policy']
     filtered_data = underscore_to_hyphen(filter_firewall_local_in_policy_data(firewall_local_in_policy_data))
 
@@ -339,15 +358,17 @@ def main():
     fields = {
         "host": {"required": False, "type": "str"},
         "username": {"required": False, "type": "str"},
-        "password": {"required": False, "type": "str", "no_log": True},
+        "password": {"required": False, "type": "str", "default": "", "no_log": True},
         "vdom": {"required": False, "type": "str", "default": "root"},
         "https": {"required": False, "type": "bool", "default": True},
         "ssl_verify": {"required": False, "type": "bool", "default": True},
-        "state": {"required": True, "type": "str",
+        "state": {"required": False, "type": "str",
                   "choices": ["present", "absent"]},
         "firewall_local_in_policy": {
             "required": False, "type": "dict", "default": None,
             "options": {
+                "state": {"required": False, "type": "str",
+                          "choices": ["present", "absent"]},
                 "action": {"required": False, "type": "str",
                            "choices": ["accept", "deny"]},
                 "comments": {"required": False, "type": "str"},
@@ -378,6 +399,7 @@ def main():
     module = AnsibleModule(argument_spec=fields,
                            supports_check_mode=False)
 
+    # legacy_mode refers to using fortiosapi instead of HTTPAPI
     legacy_mode = 'host' in module.params and module.params['host'] is not None and \
                   'username' in module.params and module.params['username'] is not None and \
                   'password' in module.params and module.params['password'] is not None
diff --git a/lib/ansible/modules/network/fortios/fortios_firewall_local_in_policy6.py b/lib/ansible/modules/network/fortios/fortios_firewall_local_in_policy6.py
index ae651b433a..3a8bd8a687 100644
--- a/lib/ansible/modules/network/fortios/fortios_firewall_local_in_policy6.py
+++ b/lib/ansible/modules/network/fortios/fortios_firewall_local_in_policy6.py
@@ -26,7 +26,7 @@ DOCUMENTATION = '''
 module: fortios_firewall_local_in_policy6
 short_description: Configure user defined IPv6 local-in policies in Fortinet's FortiOS and FortiGate.
 description:
-    - This module is able to configure a FortiGate or FortiOS device by allowing the
+    - This module is able to configure a FortiGate or FortiOS (FOS) device by allowing the
       user to set and modify firewall feature and local_in_policy6 category.
       Examples include all parameters and values need to be adjusted to datasources before usage.
       Tested with FOS v6.0.5
@@ -76,7 +76,10 @@ options:
     state:
         description:
             - Indicates whether to create or remove the object.
+              This attribute was present already in previous version in a deeper level.
+              It has been moved out to this outer level.
         type: str
+        required: false
         choices:
             - present
             - absent
@@ -87,9 +90,20 @@ options:
         default: null
         type: dict
         suboptions:
+            state:
+                description:
+                    - B(Deprecated)
+                    - Starting with Ansible 2.9 we recommend using the top-level 'state' parameter.
+                    - HORIZONTALLINE
+                    - Indicates whether to create or remove the object.
+                type: str
+                required: false
+                choices:
+                    - present
+                    - absent
             action:
                 description:
-                    - Action performed on traffic matching the policy.
+                    - Action performed on traffic matching the policy .
                 type: str
                 choices:
                     - accept
@@ -294,7 +308,12 @@ def underscore_to_hyphen(data):
 
 def firewall_local_in_policy6(data, fos):
     vdom = data['vdom']
-    state = data['state']
+    if 'state' in data and data['state']:
+        state = data['state']
+    elif 'state' in data['firewall_local_in_policy6'] and data['firewall_local_in_policy6']:
+        state = data['firewall_local_in_policy6']['state']
+    else:
+        state = True
     firewall_local_in_policy6_data = data['firewall_local_in_policy6']
     filtered_data = underscore_to_hyphen(filter_firewall_local_in_policy6_data(firewall_local_in_policy6_data))
 
@@ -330,15 +349,17 @@ def main():
     fields = {
         "host": {"required": False, "type": "str"},
         "username": {"required": False, "type": "str"},
-        "password": {"required": False, "type": "str", "no_log": True},
+        "password": {"required": False, "type": "str", "default": "", "no_log": True},
         "vdom": {"required": False, "type": "str", "default": "root"},
         "https": {"required": False, "type": "bool", "default": True},
         "ssl_verify": {"required": False, "type": "bool", "default": True},
-        "state": {"required": True, "type": "str",
+        "state": {"required": False, "type": "str",
                   "choices": ["present", "absent"]},
         "firewall_local_in_policy6": {
             "required": False, "type": "dict", "default": None,
             "options": {
+                "state": {"required": False, "type": "str",
+                          "choices": ["present", "absent"]},
                 "action": {"required": False, "type": "str",
                            "choices": ["accept", "deny"]},
                 "comments": {"required": False, "type": "str"},
@@ -367,6 +388,7 @@ def main():
     module = AnsibleModule(argument_spec=fields,
                            supports_check_mode=False)
 
+    # legacy_mode refers to using fortiosapi instead of HTTPAPI
     legacy_mode = 'host' in module.params and module.params['host'] is not None and \
                   'username' in module.params and module.params['username'] is not None and \
                   'password' in module.params and module.params['password'] is not None
diff --git a/lib/ansible/modules/network/fortios/fortios_firewall_multicast_address.py b/lib/ansible/modules/network/fortios/fortios_firewall_multicast_address.py
index 343c4e69ec..5abd9a8d80 100644
--- a/lib/ansible/modules/network/fortios/fortios_firewall_multicast_address.py
+++ b/lib/ansible/modules/network/fortios/fortios_firewall_multicast_address.py
@@ -26,7 +26,7 @@ DOCUMENTATION = '''
 module: fortios_firewall_multicast_address
 short_description: Configure multicast addresses in Fortinet's FortiOS and FortiGate.
 description:
-    - This module is able to configure a FortiGate or FortiOS device by allowing the
+    - This module is able to configure a FortiGate or FortiOS (FOS) device by allowing the
       user to set and modify firewall feature and multicast_address category.
       Examples include all parameters and values need to be adjusted to datasources before usage.
       Tested with FOS v6.0.5
@@ -76,7 +76,10 @@ options:
     state:
         description:
             - Indicates whether to create or remove the object.
+              This attribute was present already in previous version in a deeper level.
+              It has been moved out to this outer level.
         type: str
+        required: false
         choices:
             - present
             - absent
@@ -87,6 +90,17 @@ options:
         default: null
         type: dict
         suboptions:
+            state:
+                description:
+                    - B(Deprecated)
+                    - Starting with Ansible 2.9 we recommend using the top-level 'state' parameter.
+                    - HORIZONTALLINE
+                    - Indicates whether to create or remove the object.
+                type: str
+                required: false
+                choices:
+                    - present
+                    - absent
             associated_interface:
                 description:
                     - Interface associated with the address object. When setting up a policy, only addresses associated with this interface are available.
@@ -94,7 +108,7 @@ options:
                 type: str
             color:
                 description:
-                    - Integer value to determine the color of the icon in the GUI (1 - 32, default = 0, which sets value to 1).
+                    - Integer value to determine the color of the icon in the GUI (1 - 32).
                 type: int
             comment:
                 description:
@@ -302,7 +316,12 @@ def underscore_to_hyphen(data):
 
 def firewall_multicast_address(data, fos):
     vdom = data['vdom']
-    state = data['state']
+    if 'state' in data and data['state']:
+        state = data['state']
+    elif 'state' in data['firewall_multicast_address'] and data['firewall_multicast_address']:
+        state = data['firewall_multicast_address']['state']
+    else:
+        state = True
     firewall_multicast_address_data = data['firewall_multicast_address']
     filtered_data = underscore_to_hyphen(filter_firewall_multicast_address_data(firewall_multicast_address_data))
 
@@ -338,15 +357,17 @@ def main():
     fields = {
         "host": {"required": False, "type": "str"},
         "username": {"required": False, "type": "str"},
-        "password": {"required": False, "type": "str", "no_log": True},
+        "password": {"required": False, "type": "str", "default": "", "no_log": True},
         "vdom": {"required": False, "type": "str", "default": "root"},
         "https": {"required": False, "type": "bool", "default": True},
         "ssl_verify": {"required": False, "type": "bool", "default": True},
-        "state": {"required": True, "type": "str",
+        "state": {"required": False, "type": "str",
                   "choices": ["present", "absent"]},
         "firewall_multicast_address": {
             "required": False, "type": "dict", "default": None,
             "options": {
+                "state": {"required": False, "type": "str",
+                          "choices": ["present", "absent"]},
                 "associated_interface": {"required": False, "type": "str"},
                 "color": {"required": False, "type": "int"},
                 "comment": {"required": False, "type": "str"},
@@ -375,6 +396,7 @@ def main():
     module = AnsibleModule(argument_spec=fields,
                            supports_check_mode=False)
 
+    # legacy_mode refers to using fortiosapi instead of HTTPAPI
     legacy_mode = 'host' in module.params and module.params['host'] is not None and \
                   'username' in module.params and module.params['username'] is not None and \
                   'password' in module.params and module.params['password'] is not None
diff --git a/lib/ansible/modules/network/fortios/fortios_firewall_multicast_address6.py b/lib/ansible/modules/network/fortios/fortios_firewall_multicast_address6.py
index 4742a63702..b16c81aa4a 100644
--- a/lib/ansible/modules/network/fortios/fortios_firewall_multicast_address6.py
+++ b/lib/ansible/modules/network/fortios/fortios_firewall_multicast_address6.py
@@ -26,7 +26,7 @@ DOCUMENTATION = '''
 module: fortios_firewall_multicast_address6
 short_description: Configure IPv6 multicast address in Fortinet's FortiOS and FortiGate.
 description:
-    - This module is able to configure a FortiGate or FortiOS device by allowing the
+    - This module is able to configure a FortiGate or FortiOS (FOS) device by allowing the
       user to set and modify firewall feature and multicast_address6 category.
       Examples include all parameters and values need to be adjusted to datasources before usage.
       Tested with FOS v6.0.5
@@ -76,7 +76,10 @@ options:
     state:
         description:
             - Indicates whether to create or remove the object.
+              This attribute was present already in previous version in a deeper level.
+              It has been moved out to this outer level.
         type: str
+        required: false
         choices:
             - present
             - absent
@@ -87,6 +90,17 @@ options:
         default: null
         type: dict
         suboptions:
+            state:
+                description:
+                    - B(Deprecated)
+                    - Starting with Ansible 2.9 we recommend using the top-level 'state' parameter.
+                    - HORIZONTALLINE
+                    - Indicates whether to create or remove the object.
+                type: str
+                required: false
+                choices:
+                    - present
+                    - absent
             color:
                 description:
                     - Color of icon on the GUI.
@@ -276,7 +290,12 @@ def underscore_to_hyphen(data):
 
 def firewall_multicast_address6(data, fos):
     vdom = data['vdom']
-    state = data['state']
+    if 'state' in data and data['state']:
+        state = data['state']
+    elif 'state' in data['firewall_multicast_address6'] and data['firewall_multicast_address6']:
+        state = data['firewall_multicast_address6']['state']
+    else:
+        state = True
     firewall_multicast_address6_data = data['firewall_multicast_address6']
     filtered_data = underscore_to_hyphen(filter_firewall_multicast_address6_data(firewall_multicast_address6_data))
 
@@ -312,15 +331,17 @@ def main():
     fields = {
         "host": {"required": False, "type": "str"},
         "username": {"required": False, "type": "str"},
-        "password": {"required": False, "type": "str", "no_log": True},
+        "password": {"required": False, "type": "str", "default": "", "no_log": True},
         "vdom": {"required": False, "type": "str", "default": "root"},
         "https": {"required": False, "type": "bool", "default": True},
         "ssl_verify": {"required": False, "type": "bool", "default": True},
-        "state": {"required": True, "type": "str",
+        "state": {"required": False, "type": "str",
                   "choices": ["present", "absent"]},
         "firewall_multicast_address6": {
             "required": False, "type": "dict", "default": None,
             "options": {
+                "state": {"required": False, "type": "str",
+                          "choices": ["present", "absent"]},
                 "color": {"required": False, "type": "int"},
                 "comment": {"required": False, "type": "str"},
                 "ip6": {"required": False, "type": "str"},
@@ -344,6 +365,7 @@ def main():
     module = AnsibleModule(argument_spec=fields,
                            supports_check_mode=False)
 
+    # legacy_mode refers to using fortiosapi instead of HTTPAPI
     legacy_mode = 'host' in module.params and module.params['host'] is not None and \
                   'username' in module.params and module.params['username'] is not None and \
                   'password' in module.params and module.params['password'] is not None
diff --git a/lib/ansible/modules/network/fortios/fortios_firewall_multicast_policy.py b/lib/ansible/modules/network/fortios/fortios_firewall_multicast_policy.py
index 5f756c01f4..81d70c636d 100644
--- a/lib/ansible/modules/network/fortios/fortios_firewall_multicast_policy.py
+++ b/lib/ansible/modules/network/fortios/fortios_firewall_multicast_policy.py
@@ -26,7 +26,7 @@ DOCUMENTATION = '''
 module: fortios_firewall_multicast_policy
 short_description: Configure multicast NAT policies in Fortinet's FortiOS and FortiGate.
 description:
-    - This module is able to configure a FortiGate or FortiOS device by allowing the
+    - This module is able to configure a FortiGate or FortiOS (FOS) device by allowing the
       user to set and modify firewall feature and multicast_policy category.
       Examples include all parameters and values need to be adjusted to datasources before usage.
       Tested with FOS v6.0.5
@@ -76,7 +76,10 @@ options:
     state:
         description:
             - Indicates whether to create or remove the object.
+              This attribute was present already in previous version in a deeper level.
+              It has been moved out to this outer level.
         type: str
+        required: false
         choices:
             - present
             - absent
@@ -87,6 +90,17 @@ options:
         default: null
         type: dict
         suboptions:
+            state:
+                description:
+                    - B(Deprecated)
+                    - Starting with Ansible 2.9 we recommend using the top-level 'state' parameter.
+                    - HORIZONTALLINE
+                    - Indicates whether to create or remove the object.
+                type: str
+                required: false
+                choices:
+                    - present
+                    - absent
             action:
                 description:
                     - Accept or deny traffic matching the policy.
@@ -114,7 +128,7 @@ options:
                 type: str
             end_port:
                 description:
-                    -  Integer value for ending TCP/UDP/SCTP destination port in range (1 - 65535, default = 1).
+                    -  Integer value for ending TCP/UDP/SCTP destination port in range (1 - 65535).
                 type: int
             id:
                 description:
@@ -130,7 +144,7 @@ options:
                     - disable
             protocol:
                 description:
-                    - Integer value for the protocol type as defined by IANA (0 - 255, default = 0).
+                    - Integer value for the protocol type as defined by IANA (0 - 255).
                 type: int
             snat:
                 description:
@@ -159,7 +173,7 @@ options:
                 type: str
             start_port:
                 description:
-                    - Integer value for starting TCP/UDP/SCTP destination port in range (1 - 65535, default = 1).
+                    - Integer value for starting TCP/UDP/SCTP destination port in range (1 - 65535).
                 type: int
             status:
                 description:
@@ -318,7 +332,12 @@ def underscore_to_hyphen(data):
 
 def firewall_multicast_policy(data, fos):
     vdom = data['vdom']
-    state = data['state']
+    if 'state' in data and data['state']:
+        state = data['state']
+    elif 'state' in data['firewall_multicast_policy'] and data['firewall_multicast_policy']:
+        state = data['firewall_multicast_policy']['state']
+    else:
+        state = True
     firewall_multicast_policy_data = data['firewall_multicast_policy']
     filtered_data = underscore_to_hyphen(filter_firewall_multicast_policy_data(firewall_multicast_policy_data))
 
@@ -354,15 +373,17 @@ def main():
     fields = {
         "host": {"required": False, "type": "str"},
         "username": {"required": False, "type": "str"},
-        "password": {"required": False, "type": "str", "no_log": True},
+        "password": {"required": False, "type": "str", "default": "", "no_log": True},
         "vdom": {"required": False, "type": "str", "default": "root"},
         "https": {"required": False, "type": "bool", "default": True},
         "ssl_verify": {"required": False, "type": "bool", "default": True},
-        "state": {"required": True, "type": "str",
+        "state": {"required": False, "type": "str",
                   "choices": ["present", "absent"]},
         "firewall_multicast_policy": {
             "required": False, "type": "dict", "default": None,
             "options": {
+                "state": {"required": False, "type": "str",
+                          "choices": ["present", "absent"]},
                 "action": {"required": False, "type": "str",
                            "choices": ["accept", "deny"]},
                 "dnat": {"required": False, "type": "str"},
@@ -395,6 +416,7 @@ def main():
     module = AnsibleModule(argument_spec=fields,
                            supports_check_mode=False)
 
+    # legacy_mode refers to using fortiosapi instead of HTTPAPI
     legacy_mode = 'host' in module.params and module.params['host'] is not None and \
                   'username' in module.params and module.params['username'] is not None and \
                   'password' in module.params and module.params['password'] is not None
diff --git a/lib/ansible/modules/network/fortios/fortios_firewall_multicast_policy6.py b/lib/ansible/modules/network/fortios/fortios_firewall_multicast_policy6.py
index 12d6696a20..486b0780f8 100644
--- a/lib/ansible/modules/network/fortios/fortios_firewall_multicast_policy6.py
+++ b/lib/ansible/modules/network/fortios/fortios_firewall_multicast_policy6.py
@@ -26,7 +26,7 @@ DOCUMENTATION = '''
 module: fortios_firewall_multicast_policy6
 short_description: Configure IPv6 multicast NAT policies in Fortinet's FortiOS and FortiGate.
 description:
-    - This module is able to configure a FortiGate or FortiOS device by allowing the
+    - This module is able to configure a FortiGate or FortiOS (FOS) device by allowing the
       user to set and modify firewall feature and multicast_policy6 category.
       Examples include all parameters and values need to be adjusted to datasources before usage.
       Tested with FOS v6.0.5
@@ -76,7 +76,10 @@ options:
     state:
         description:
             - Indicates whether to create or remove the object.
+              This attribute was present already in previous version in a deeper level.
+              It has been moved out to this outer level.
         type: str
+        required: false
         choices:
             - present
             - absent
@@ -87,6 +90,17 @@ options:
         default: null
         type: dict
         suboptions:
+            state:
+                description:
+                    - B(Deprecated)
+                    - Starting with Ansible 2.9 we recommend using the top-level 'state' parameter.
+                    - HORIZONTALLINE
+                    - Indicates whether to create or remove the object.
+                type: str
+                required: false
+                choices:
+                    - present
+                    - absent
             action:
                 description:
                     - Accept or deny traffic matching the policy.
@@ -110,7 +124,7 @@ options:
                 type: str
             end_port:
                 description:
-                    - Integer value for ending TCP/UDP/SCTP destination port in range (1 - 65535, default = 65535).
+                    - Integer value for ending TCP/UDP/SCTP destination port in range (1 - 65535).
                 type: int
             id:
                 description:
@@ -126,7 +140,7 @@ options:
                     - disable
             protocol:
                 description:
-                    - Integer value for the protocol type as defined by IANA (0 - 255, default = 0).
+                    - Integer value for the protocol type as defined by IANA (0 - 255).
                 type: int
             srcaddr:
                 description:
@@ -144,7 +158,7 @@ options:
                 type: str
             start_port:
                 description:
-                    - Integer value for starting TCP/UDP/SCTP destination port in range (1 - 65535, default = 1).
+                    - Integer value for starting TCP/UDP/SCTP destination port in range (1 - 65535).
                 type: int
             status:
                 description:
@@ -299,7 +313,12 @@ def underscore_to_hyphen(data):
 
 def firewall_multicast_policy6(data, fos):
     vdom = data['vdom']
-    state = data['state']
+    if 'state' in data and data['state']:
+        state = data['state']
+    elif 'state' in data['firewall_multicast_policy6'] and data['firewall_multicast_policy6']:
+        state = data['firewall_multicast_policy6']['state']
+    else:
+        state = True
     firewall_multicast_policy6_data = data['firewall_multicast_policy6']
     filtered_data = underscore_to_hyphen(filter_firewall_multicast_policy6_data(firewall_multicast_policy6_data))
 
@@ -335,15 +354,17 @@ def main():
     fields = {
         "host": {"required": False, "type": "str"},
         "username": {"required": False, "type": "str"},
-        "password": {"required": False, "type": "str", "no_log": True},
+        "password": {"required": False, "type": "str", "default": "", "no_log": True},
         "vdom": {"required": False, "type": "str", "default": "root"},
         "https": {"required": False, "type": "bool", "default": True},
         "ssl_verify": {"required": False, "type": "bool", "default": True},
-        "state": {"required": True, "type": "str",
+        "state": {"required": False, "type": "str",
                   "choices": ["present", "absent"]},
         "firewall_multicast_policy6": {
             "required": False, "type": "dict", "default": None,
             "options": {
+                "state": {"required": False, "type": "str",
+                          "choices": ["present", "absent"]},
                 "action": {"required": False, "type": "str",
                            "choices": ["accept", "deny"]},
                 "dstaddr": {"required": False, "type": "list",
@@ -372,6 +393,7 @@ def main():
     module = AnsibleModule(argument_spec=fields,
                            supports_check_mode=False)
 
+    # legacy_mode refers to using fortiosapi instead of HTTPAPI
     legacy_mode = 'host' in module.params and module.params['host'] is not None and \
                   'username' in module.params and module.params['username'] is not None and \
                   'password' in module.params and module.params['password'] is not None
diff --git a/lib/ansible/modules/network/fortios/fortios_firewall_policy.py b/lib/ansible/modules/network/fortios/fortios_firewall_policy.py
index 209e451eb9..a8ec3462d8 100644
--- a/lib/ansible/modules/network/fortios/fortios_firewall_policy.py
+++ b/lib/ansible/modules/network/fortios/fortios_firewall_policy.py
@@ -26,7 +26,7 @@ DOCUMENTATION = '''
 module: fortios_firewall_policy
 short_description: Configure IPv4 policies in Fortinet's FortiOS and FortiGate.
 description:
-    - This module is able to configure a FortiGate or FortiOS device by allowing the
+    - This module is able to configure a FortiGate or FortiOS (FOS) device by allowing the
       user to set and modify firewall feature and policy category.
       Examples include all parameters and values need to be adjusted to datasources before usage.
       Tested with FOS v6.0.5
@@ -76,7 +76,10 @@ options:
     state:
         description:
             - Indicates whether to create or remove the object.
+              This attribute was present already in previous version in a deeper level.
+              It has been moved out to this outer level.
         type: str
+        required: false
         choices:
             - present
             - absent
@@ -87,6 +90,17 @@ options:
         default: null
         type: dict
         suboptions:
+            state:
+                description:
+                    - B(Deprecated)
+                    - Starting with Ansible 2.9 we recommend using the top-level 'state' parameter.
+                    - HORIZONTALLINE
+                    - Indicates whether to create or remove the object.
+                type: str
+                required: false
+                choices:
+                    - present
+                    - absent
             action:
                 description:
                     - Policy action (allow/deny/ipsec).
@@ -1187,7 +1201,12 @@ def underscore_to_hyphen(data):
 
 def firewall_policy(data, fos):
     vdom = data['vdom']
-    state = data['state']
+    if 'state' in data and data['state']:
+        state = data['state']
+    elif 'state' in data['firewall_policy'] and data['firewall_policy']:
+        state = data['firewall_policy']['state']
+    else:
+        state = True
     firewall_policy_data = data['firewall_policy']
     filtered_data = underscore_to_hyphen(filter_firewall_policy_data(firewall_policy_data))
 
@@ -1223,15 +1242,17 @@ def main():
     fields = {
         "host": {"required": False, "type": "str"},
         "username": {"required": False, "type": "str"},
-        "password": {"required": False, "type": "str", "no_log": True},
+        "password": {"required": False, "type": "str", "default": "", "no_log": True},
         "vdom": {"required": False, "type": "str", "default": "root"},
         "https": {"required": False, "type": "bool", "default": True},
         "ssl_verify": {"required": False, "type": "bool", "default": True},
-        "state": {"required": True, "type": "str",
+        "state": {"required": False, "type": "str",
                   "choices": ["present", "absent"]},
         "firewall_policy": {
             "required": False, "type": "dict", "default": None,
             "options": {
+                "state": {"required": False, "type": "str",
+                          "choices": ["present", "absent"]},
                 "action": {"required": False, "type": "str",
                            "choices": ["accept", "deny", "ipsec"]},
                 "app_category": {"required": False, "type": "list",
@@ -1477,6 +1498,7 @@ def main():
     module = AnsibleModule(argument_spec=fields,
                            supports_check_mode=False)
 
+    # legacy_mode refers to using fortiosapi instead of HTTPAPI
     legacy_mode = 'host' in module.params and module.params['host'] is not None and \
                   'username' in module.params and module.params['username'] is not None and \
                   'password' in module.params and module.params['password'] is not None
diff --git a/lib/ansible/modules/network/fortios/fortios_firewall_policy46.py b/lib/ansible/modules/network/fortios/fortios_firewall_policy46.py
index b03370af2b..6d3392a8ba 100644
--- a/lib/ansible/modules/network/fortios/fortios_firewall_policy46.py
+++ b/lib/ansible/modules/network/fortios/fortios_firewall_policy46.py
@@ -26,7 +26,7 @@ DOCUMENTATION = '''
 module: fortios_firewall_policy46
 short_description: Configure IPv4 to IPv6 policies in Fortinet's FortiOS and FortiGate.
 description:
-    - This module is able to configure a FortiGate or FortiOS device by allowing the
+    - This module is able to configure a FortiGate or FortiOS (FOS) device by allowing the
       user to set and modify firewall feature and policy46 category.
       Examples include all parameters and values need to be adjusted to datasources before usage.
       Tested with FOS v6.0.5
@@ -76,7 +76,10 @@ options:
     state:
         description:
             - Indicates whether to create or remove the object.
+              This attribute was present already in previous version in a deeper level.
+              It has been moved out to this outer level.
         type: str
+        required: false
         choices:
             - present
             - absent
@@ -87,6 +90,17 @@ options:
         default: null
         type: dict
         suboptions:
+            state:
+                description:
+                    - B(Deprecated)
+                    - Starting with Ansible 2.9 we recommend using the top-level 'state' parameter.
+                    - HORIZONTALLINE
+                    - Indicates whether to create or remove the object.
+                type: str
+                required: false
+                choices:
+                    - present
+                    - absent
             action:
                 description:
                     - Accept or deny traffic matching the policy.
@@ -196,11 +210,11 @@ options:
                     - disable
             tcp_mss_receiver:
                 description:
-                    - TCP Maximum Segment Size value of receiver (0 - 65535, default = 0)
+                    - TCP Maximum Segment Size value of receiver (0 - 65535)
                 type: int
             tcp_mss_sender:
                 description:
-                    - TCP Maximum Segment Size value of sender (0 - 65535, default = 0).
+                    - TCP Maximum Segment Size value of sender (0 - 65535).
                 type: int
             traffic_shaper:
                 description:
@@ -377,7 +391,12 @@ def underscore_to_hyphen(data):
 
 def firewall_policy46(data, fos):
     vdom = data['vdom']
-    state = data['state']
+    if 'state' in data and data['state']:
+        state = data['state']
+    elif 'state' in data['firewall_policy46'] and data['firewall_policy46']:
+        state = data['firewall_policy46']['state']
+    else:
+        state = True
     firewall_policy46_data = data['firewall_policy46']
     filtered_data = underscore_to_hyphen(filter_firewall_policy46_data(firewall_policy46_data))
 
@@ -413,15 +432,17 @@ def main():
     fields = {
         "host": {"required": False, "type": "str"},
         "username": {"required": False, "type": "str"},
-        "password": {"required": False, "type": "str", "no_log": True},
+        "password": {"required": False, "type": "str", "default": "", "no_log": True},
         "vdom": {"required": False, "type": "str", "default": "root"},
         "https": {"required": False, "type": "bool", "default": True},
         "ssl_verify": {"required": False, "type": "bool", "default": True},
-        "state": {"required": True, "type": "str",
+        "state": {"required": False, "type": "str",
                   "choices": ["present", "absent"]},
         "firewall_policy46": {
             "required": False, "type": "dict", "default": None,
             "options": {
+                "state": {"required": False, "type": "str",
+                          "choices": ["present", "absent"]},
                 "action": {"required": False, "type": "str",
                            "choices": ["accept", "deny"]},
                 "comments": {"required": False, "type": "str"},
@@ -469,6 +490,7 @@ def main():
     module = AnsibleModule(argument_spec=fields,
                            supports_check_mode=False)
 
+    # legacy_mode refers to using fortiosapi instead of HTTPAPI
     legacy_mode = 'host' in module.params and module.params['host'] is not None and \
                   'username' in module.params and module.params['username'] is not None and \
                   'password' in module.params and module.params['password'] is not None
diff --git a/lib/ansible/modules/network/fortios/fortios_firewall_policy6.py b/lib/ansible/modules/network/fortios/fortios_firewall_policy6.py
index 7e47344585..73add0437d 100644
--- a/lib/ansible/modules/network/fortios/fortios_firewall_policy6.py
+++ b/lib/ansible/modules/network/fortios/fortios_firewall_policy6.py
@@ -26,7 +26,7 @@ DOCUMENTATION = '''
 module: fortios_firewall_policy6
 short_description: Configure IPv6 policies in Fortinet's FortiOS and FortiGate.
 description:
-    - This module is able to configure a FortiGate or FortiOS device by allowing the
+    - This module is able to configure a FortiGate or FortiOS (FOS) device by allowing the
       user to set and modify firewall feature and policy6 category.
       Examples include all parameters and values need to be adjusted to datasources before usage.
       Tested with FOS v6.0.5
@@ -76,7 +76,10 @@ options:
     state:
         description:
             - Indicates whether to create or remove the object.
+              This attribute was present already in previous version in a deeper level.
+              It has been moved out to this outer level.
         type: str
+        required: false
         choices:
             - present
             - absent
@@ -87,6 +90,17 @@ options:
         default: null
         type: dict
         suboptions:
+            state:
+                description:
+                    - B(Deprecated)
+                    - Starting with Ansible 2.9 we recommend using the top-level 'state' parameter.
+                    - HORIZONTALLINE
+                    - Indicates whether to create or remove the object.
+                type: str
+                required: false
+                choices:
+                    - present
+                    - absent
             action:
                 description:
                     - Policy action (allow/deny/ipsec).
@@ -818,7 +832,12 @@ def underscore_to_hyphen(data):
 
 def firewall_policy6(data, fos):
     vdom = data['vdom']
-    state = data['state']
+    if 'state' in data and data['state']:
+        state = data['state']
+    elif 'state' in data['firewall_policy6'] and data['firewall_policy6']:
+        state = data['firewall_policy6']['state']
+    else:
+        state = True
     firewall_policy6_data = data['firewall_policy6']
     filtered_data = underscore_to_hyphen(filter_firewall_policy6_data(firewall_policy6_data))
 
@@ -854,15 +873,17 @@ def main():
     fields = {
         "host": {"required": False, "type": "str"},
         "username": {"required": False, "type": "str"},
-        "password": {"required": False, "type": "str", "no_log": True},
+        "password": {"required": False, "type": "str", "default": "", "no_log": True},
         "vdom": {"required": False, "type": "str", "default": "root"},
         "https": {"required": False, "type": "bool", "default": True},
         "ssl_verify": {"required": False, "type": "bool", "default": True},
-        "state": {"required": True, "type": "str",
+        "state": {"required": False, "type": "str",
                   "choices": ["present", "absent"]},
         "firewall_policy6": {
             "required": False, "type": "dict", "default": None,
             "options": {
+                "state": {"required": False, "type": "str",
+                          "choices": ["present", "absent"]},
                 "action": {"required": False, "type": "str",
                            "choices": ["accept", "deny", "ipsec"]},
                 "app_category": {"required": False, "type": "list",
@@ -1018,6 +1039,7 @@ def main():
     module = AnsibleModule(argument_spec=fields,
                            supports_check_mode=False)
 
+    # legacy_mode refers to using fortiosapi instead of HTTPAPI
     legacy_mode = 'host' in module.params and module.params['host'] is not None and \
                   'username' in module.params and module.params['username'] is not None and \
                   'password' in module.params and module.params['password'] is not None
diff --git a/lib/ansible/modules/network/fortios/fortios_firewall_policy64.py b/lib/ansible/modules/network/fortios/fortios_firewall_policy64.py
index 9cd95b68ed..e6c0b0b942 100644
--- a/lib/ansible/modules/network/fortios/fortios_firewall_policy64.py
+++ b/lib/ansible/modules/network/fortios/fortios_firewall_policy64.py
@@ -26,7 +26,7 @@ DOCUMENTATION = '''
 module: fortios_firewall_policy64
 short_description: Configure IPv6 to IPv4 policies in Fortinet's FortiOS and FortiGate.
 description:
-    - This module is able to configure a FortiGate or FortiOS device by allowing the
+    - This module is able to configure a FortiGate or FortiOS (FOS) device by allowing the
       user to set and modify firewall feature and policy64 category.
       Examples include all parameters and values need to be adjusted to datasources before usage.
       Tested with FOS v6.0.5
@@ -76,7 +76,10 @@ options:
     state:
         description:
             - Indicates whether to create or remove the object.
+              This attribute was present already in previous version in a deeper level.
+              It has been moved out to this outer level.
         type: str
+        required: false
         choices:
             - present
             - absent
@@ -87,6 +90,17 @@ options:
         default: null
         type: dict
         suboptions:
+            state:
+                description:
+                    - B(Deprecated)
+                    - Starting with Ansible 2.9 we recommend using the top-level 'state' parameter.
+                    - HORIZONTALLINE
+                    - Indicates whether to create or remove the object.
+                type: str
+                required: false
+                choices:
+                    - present
+                    - absent
             action:
                 description:
                     - Policy action.
@@ -377,7 +391,12 @@ def underscore_to_hyphen(data):
 
 def firewall_policy64(data, fos):
     vdom = data['vdom']
-    state = data['state']
+    if 'state' in data and data['state']:
+        state = data['state']
+    elif 'state' in data['firewall_policy64'] and data['firewall_policy64']:
+        state = data['firewall_policy64']['state']
+    else:
+        state = True
     firewall_policy64_data = data['firewall_policy64']
     filtered_data = underscore_to_hyphen(filter_firewall_policy64_data(firewall_policy64_data))
 
@@ -413,15 +432,17 @@ def main():
     fields = {
         "host": {"required": False, "type": "str"},
         "username": {"required": False, "type": "str"},
-        "password": {"required": False, "type": "str", "no_log": True},
+        "password": {"required": False, "type": "str", "default": "", "no_log": True},
         "vdom": {"required": False, "type": "str", "default": "root"},
         "https": {"required": False, "type": "bool", "default": True},
         "ssl_verify": {"required": False, "type": "bool", "default": True},
-        "state": {"required": True, "type": "str",
+        "state": {"required": False, "type": "str",
                   "choices": ["present", "absent"]},
         "firewall_policy64": {
             "required": False, "type": "dict", "default": None,
             "options": {
+                "state": {"required": False, "type": "str",
+                          "choices": ["present", "absent"]},
                 "action": {"required": False, "type": "str",
                            "choices": ["accept", "deny"]},
                 "comments": {"required": False, "type": "str"},
@@ -469,6 +490,7 @@ def main():
     module = AnsibleModule(argument_spec=fields,
                            supports_check_mode=False)
 
+    # legacy_mode refers to using fortiosapi instead of HTTPAPI
     legacy_mode = 'host' in module.params and module.params['host'] is not None and \
                   'username' in module.params and module.params['username'] is not None and \
                   'password' in module.params and module.params['password'] is not None
diff --git a/lib/ansible/modules/network/fortios/fortios_firewall_profile_group.py b/lib/ansible/modules/network/fortios/fortios_firewall_profile_group.py
index 12cff04514..cd49e02bd2 100644
--- a/lib/ansible/modules/network/fortios/fortios_firewall_profile_group.py
+++ b/lib/ansible/modules/network/fortios/fortios_firewall_profile_group.py
@@ -26,7 +26,7 @@ DOCUMENTATION = '''
 module: fortios_firewall_profile_group
 short_description: Configure profile groups in Fortinet's FortiOS and FortiGate.
 description:
-    - This module is able to configure a FortiGate or FortiOS device by allowing the
+    - This module is able to configure a FortiGate or FortiOS (FOS) device by allowing the
       user to set and modify firewall feature and profile_group category.
       Examples include all parameters and values need to be adjusted to datasources before usage.
       Tested with FOS v6.0.5
@@ -76,7 +76,10 @@ options:
     state:
         description:
             - Indicates whether to create or remove the object.
+              This attribute was present already in previous version in a deeper level.
+              It has been moved out to this outer level.
         type: str
+        required: false
         choices:
             - present
             - absent
@@ -87,6 +90,17 @@ options:
         default: null
         type: dict
         suboptions:
+            state:
+                description:
+                    - B(Deprecated)
+                    - Starting with Ansible 2.9 we recommend using the top-level 'state' parameter.
+                    - HORIZONTALLINE
+                    - Indicates whether to create or remove the object.
+                type: str
+                required: false
+                choices:
+                    - present
+                    - absent
             application_list:
                 description:
                     - Name of an existing Application list. Source application.list.name.
@@ -290,7 +304,12 @@ def underscore_to_hyphen(data):
 
 def firewall_profile_group(data, fos):
     vdom = data['vdom']
-    state = data['state']
+    if 'state' in data and data['state']:
+        state = data['state']
+    elif 'state' in data['firewall_profile_group'] and data['firewall_profile_group']:
+        state = data['firewall_profile_group']['state']
+    else:
+        state = True
     firewall_profile_group_data = data['firewall_profile_group']
     filtered_data = underscore_to_hyphen(filter_firewall_profile_group_data(firewall_profile_group_data))
 
@@ -326,15 +345,17 @@ def main():
     fields = {
         "host": {"required": False, "type": "str"},
         "username": {"required": False, "type": "str"},
-        "password": {"required": False, "type": "str", "no_log": True},
+        "password": {"required": False, "type": "str", "default": "", "no_log": True},
         "vdom": {"required": False, "type": "str", "default": "root"},
         "https": {"required": False, "type": "bool", "default": True},
         "ssl_verify": {"required": False, "type": "bool", "default": True},
-        "state": {"required": True, "type": "str",
+        "state": {"required": False, "type": "str",
                   "choices": ["present", "absent"]},
         "firewall_profile_group": {
             "required": False, "type": "dict", "default": None,
             "options": {
+                "state": {"required": False, "type": "str",
+                          "choices": ["present", "absent"]},
                 "application_list": {"required": False, "type": "str"},
                 "av_profile": {"required": False, "type": "str"},
                 "dlp_sensor": {"required": False, "type": "str"},
@@ -357,6 +378,7 @@ def main():
     module = AnsibleModule(argument_spec=fields,
                            supports_check_mode=False)
 
+    # legacy_mode refers to using fortiosapi instead of HTTPAPI
     legacy_mode = 'host' in module.params and module.params['host'] is not None and \
                   'username' in module.params and module.params['username'] is not None and \
                   'password' in module.params and module.params['password'] is not None
diff --git a/lib/ansible/modules/network/fortios/fortios_firewall_profile_protocol_options.py b/lib/ansible/modules/network/fortios/fortios_firewall_profile_protocol_options.py
index ad7d67a1b0..825ab88bb6 100644
--- a/lib/ansible/modules/network/fortios/fortios_firewall_profile_protocol_options.py
+++ b/lib/ansible/modules/network/fortios/fortios_firewall_profile_protocol_options.py
@@ -26,7 +26,7 @@ DOCUMENTATION = '''
 module: fortios_firewall_profile_protocol_options
 short_description: Configure protocol options in Fortinet's FortiOS and FortiGate.
 description:
-    - This module is able to configure a FortiGate or FortiOS device by allowing the
+    - This module is able to configure a FortiGate or FortiOS (FOS) device by allowing the
       user to set and modify firewall feature and profile_protocol_options category.
       Examples include all parameters and values need to be adjusted to datasources before usage.
       Tested with FOS v6.0.5
@@ -76,7 +76,10 @@ options:
     state:
         description:
             - Indicates whether to create or remove the object.
+              This attribute was present already in previous version in a deeper level.
+              It has been moved out to this outer level.
         type: str
+        required: false
         choices:
             - present
             - absent
@@ -87,6 +90,17 @@ options:
         default: null
         type: dict
         suboptions:
+            state:
+                description:
+                    - B(Deprecated)
+                    - Starting with Ansible 2.9 we recommend using the top-level 'state' parameter.
+                    - HORIZONTALLINE
+                    - Indicates whether to create or remove the object.
+                type: str
+                required: false
+                choices:
+                    - present
+                    - absent
             comment:
                 description:
                     - Optional comments.
@@ -98,7 +112,7 @@ options:
                 suboptions:
                     ports:
                         description:
-                            - Ports to scan for content (1 - 65535, default = 53).
+                            - Ports to scan for content (1 - 65535).
                         type: int
                     status:
                         description:
@@ -114,11 +128,11 @@ options:
                 suboptions:
                     comfort_amount:
                         description:
-                            - Amount of data to send in a transmission for client comforting (1 - 10240 bytes, default = 1).
+                            - Amount of data to send in a transmission for client comforting (1 - 10240 bytes).
                         type: int
                     comfort_interval:
                         description:
-                            - Period of time between start, or last transmission, and the next client comfort transmission of data (1 - 900 sec, default = 10).
+                            - Period of time between start, or last transmission, and the next client comfort transmission of data (1 - 900 sec).
                         type: int
                     inspect_all:
                         description:
@@ -139,11 +153,11 @@ options:
                             - bypass-mode-command
                     oversize_limit:
                         description:
-                            - Maximum in-memory file size that can be scanned (1 - 383 MB, default = 10).
+                            - Maximum in-memory file size that can be scanned (1 - 383 MB).
                         type: int
                     ports:
                         description:
-                            - Ports to scan for content (1 - 65535, default = 21).
+                            - Ports to scan for content (1 - 65535).
                         type: int
                     scan_bzip2:
                         description:
@@ -161,11 +175,11 @@ options:
                             - disable
                     uncompressed_nest_limit:
                         description:
-                            - Maximum nested levels of compression that can be uncompressed and scanned (2 - 100, default = 12).
+                            - Maximum nested levels of compression that can be uncompressed and scanned (2 - 100).
                         type: int
                     uncompressed_oversize_limit:
                         description:
-                            - Maximum in-memory uncompressed file size that can be scanned (0 - 383 MB, 0 = unlimited, default = 10).
+                            - Maximum in-memory uncompressed file size that can be scanned (0 - 383 MB, 0 = unlimited).
                         type: int
             http:
                 description:
@@ -174,15 +188,15 @@ options:
                 suboptions:
                     block_page_status_code:
                         description:
-                            - Code number returned for blocked HTTP pages (non-FortiGuard only) (100 - 599, default = 403).
+                            - Code number returned for blocked HTTP pages (non-FortiGuard only) (100 - 599).
                         type: int
                     comfort_amount:
                         description:
-                            - Amount of data to send in a transmission for client comforting (1 - 10240 bytes, default = 1).
+                            - Amount of data to send in a transmission for client comforting (1 - 10240 bytes).
                         type: int
                     comfort_interval:
                         description:
-                            - Period of time between start, or last transmission, and the next client comfort transmission of data (1 - 900 sec, default = 10).
+                            - Period of time between start, or last transmission, and the next client comfort transmission of data (1 - 900 sec).
                         type: int
                     fortinet_bar:
                         description:
@@ -193,7 +207,7 @@ options:
                             - disable
                     fortinet_bar_port:
                         description:
-                            - Port for use by Fortinet Bar (1 - 65535, default = 8011).
+                            - Port for use by Fortinet Bar (1 - 65535).
                         type: int
                     http_policy:
                         description:
@@ -220,11 +234,11 @@ options:
                             - chunkedbypass
                     oversize_limit:
                         description:
-                            - Maximum in-memory file size that can be scanned (1 - 383 MB, default = 10).
+                            - Maximum in-memory file size that can be scanned (1 - 383 MB).
                         type: int
                     ports:
                         description:
-                            - Ports to scan for content (1 - 65535, default = 80).
+                            - Ports to scan for content (1 - 65535).
                         type: int
                     post_lang:
                         description:
@@ -261,7 +275,7 @@ options:
                             - enable
                     retry_count:
                         description:
-                            - Number of attempts to retry HTTP connection (0 - 100, default = 0).
+                            - Number of attempts to retry HTTP connection (0 - 100).
                         type: int
                     scan_bzip2:
                         description:
@@ -300,11 +314,11 @@ options:
                             - block
                     uncompressed_nest_limit:
                         description:
-                            - Maximum nested levels of compression that can be uncompressed and scanned (2 - 100, default = 12).
+                            - Maximum nested levels of compression that can be uncompressed and scanned (2 - 100).
                         type: int
                     uncompressed_oversize_limit:
                         description:
-                            - Maximum in-memory uncompressed file size that can be scanned (0 - 383 MB, 0 = unlimited, default = 10).
+                            - Maximum in-memory uncompressed file size that can be scanned (0 - 383 MB, 0 = unlimited).
                         type: int
             imap:
                 description:
@@ -327,11 +341,11 @@ options:
                             - oversize
                     oversize_limit:
                         description:
-                            - Maximum in-memory file size that can be scanned (1 - 383 MB, default = 10).
+                            - Maximum in-memory file size that can be scanned (1 - 383 MB).
                         type: int
                     ports:
                         description:
-                            - Ports to scan for content (1 - 65535, default = 143).
+                            - Ports to scan for content (1 - 65535).
                         type: int
                     scan_bzip2:
                         description:
@@ -349,11 +363,11 @@ options:
                             - disable
                     uncompressed_nest_limit:
                         description:
-                            - Maximum nested levels of compression that can be uncompressed and scanned (2 - 100, default = 12).
+                            - Maximum nested levels of compression that can be uncompressed and scanned (2 - 100).
                         type: int
                     uncompressed_oversize_limit:
                         description:
-                            - Maximum in-memory uncompressed file size that can be scanned (0 - 383 MB, 0 = unlimited, default = 10).
+                            - Maximum in-memory uncompressed file size that can be scanned (0 - 383 MB, 0 = unlimited).
                         type: int
             mail_signature:
                 description:
@@ -385,11 +399,11 @@ options:
                             - oversize
                     oversize_limit:
                         description:
-                            - Maximum in-memory file size that can be scanned (1 - 383 MB, default = 10).
+                            - Maximum in-memory file size that can be scanned (1 - 383 MB).
                         type: int
                     ports:
                         description:
-                            - Ports to scan for content (1 - 65535, default = 135).
+                            - Ports to scan for content (1 - 65535).
                         type: int
                     scan_bzip2:
                         description:
@@ -407,11 +421,11 @@ options:
                             - disable
                     uncompressed_nest_limit:
                         description:
-                            - Maximum nested levels of compression that can be uncompressed and scanned (2 - 100, default = 12).
+                            - Maximum nested levels of compression that can be uncompressed and scanned (2 - 100).
                         type: int
                     uncompressed_oversize_limit:
                         description:
-                            - Maximum in-memory uncompressed file size that can be scanned (0 - 383 MB, 0 = unlimited, default = 10).
+                            - Maximum in-memory uncompressed file size that can be scanned (0 - 383 MB, 0 = unlimited).
                         type: int
             name:
                 description:
@@ -439,11 +453,11 @@ options:
                             - splice
                     oversize_limit:
                         description:
-                            - Maximum in-memory file size that can be scanned (1 - 383 MB, default = 10).
+                            - Maximum in-memory file size that can be scanned (1 - 383 MB).
                         type: int
                     ports:
                         description:
-                            - Ports to scan for content (1 - 65535, default = 119).
+                            - Ports to scan for content (1 - 65535).
                         type: int
                     scan_bzip2:
                         description:
@@ -461,11 +475,11 @@ options:
                             - disable
                     uncompressed_nest_limit:
                         description:
-                            - Maximum nested levels of compression that can be uncompressed and scanned (2 - 100, default = 12).
+                            - Maximum nested levels of compression that can be uncompressed and scanned (2 - 100).
                         type: int
                     uncompressed_oversize_limit:
                         description:
-                            - Maximum in-memory uncompressed file size that can be scanned (0 - 383 MB, 0 = unlimited, default = 10).
+                            - Maximum in-memory uncompressed file size that can be scanned (0 - 383 MB, 0 = unlimited).
                         type: int
             oversize_log:
                 description:
@@ -495,11 +509,11 @@ options:
                             - oversize
                     oversize_limit:
                         description:
-                            - Maximum in-memory file size that can be scanned (1 - 383 MB, default = 10).
+                            - Maximum in-memory file size that can be scanned (1 - 383 MB).
                         type: int
                     ports:
                         description:
-                            - Ports to scan for content (1 - 65535, default = 110).
+                            - Ports to scan for content (1 - 65535).
                         type: int
                     scan_bzip2:
                         description:
@@ -517,11 +531,11 @@ options:
                             - disable
                     uncompressed_nest_limit:
                         description:
-                            - Maximum nested levels of compression that can be uncompressed and scanned (2 - 100, default = 12).
+                            - Maximum nested levels of compression that can be uncompressed and scanned (2 - 100).
                         type: int
                     uncompressed_oversize_limit:
                         description:
-                            - Maximum in-memory uncompressed file size that can be scanned (0 - 383 MB, 0 = unlimited, default = 10).
+                            - Maximum in-memory uncompressed file size that can be scanned (0 - 383 MB, 0 = unlimited).
                         type: int
             replacemsg_group:
                 description:
@@ -556,11 +570,11 @@ options:
                             - splice
                     oversize_limit:
                         description:
-                            - Maximum in-memory file size that can be scanned (1 - 383 MB, default = 10).
+                            - Maximum in-memory file size that can be scanned (1 - 383 MB).
                         type: int
                     ports:
                         description:
-                            - Ports to scan for content (1 - 65535, default = 25).
+                            - Ports to scan for content (1 - 65535).
                         type: int
                     scan_bzip2:
                         description:
@@ -585,11 +599,11 @@ options:
                             - disable
                     uncompressed_nest_limit:
                         description:
-                            - Maximum nested levels of compression that can be uncompressed and scanned (2 - 100, default = 12).
+                            - Maximum nested levels of compression that can be uncompressed and scanned (2 - 100).
                         type: int
                     uncompressed_oversize_limit:
                         description:
-                            - Maximum in-memory uncompressed file size that can be scanned (0 - 383 MB, 0 = unlimited, default = 10).
+                            - Maximum in-memory uncompressed file size that can be scanned (0 - 383 MB, 0 = unlimited).
                         type: int
             switching_protocols_log:
                 description:
@@ -819,7 +833,12 @@ def underscore_to_hyphen(data):
 
 def firewall_profile_protocol_options(data, fos):
     vdom = data['vdom']
-    state = data['state']
+    if 'state' in data and data['state']:
+        state = data['state']
+    elif 'state' in data['firewall_profile_protocol_options'] and data['firewall_profile_protocol_options']:
+        state = data['firewall_profile_protocol_options']['state']
+    else:
+        state = True
     firewall_profile_protocol_options_data = data['firewall_profile_protocol_options']
     filtered_data = underscore_to_hyphen(filter_firewall_profile_protocol_options_data(firewall_profile_protocol_options_data))
 
@@ -855,15 +874,17 @@ def main():
     fields = {
         "host": {"required": False, "type": "str"},
         "username": {"required": False, "type": "str"},
-        "password": {"required": False, "type": "str", "no_log": True},
+        "password": {"required": False, "type": "str", "default": "", "no_log": True},
         "vdom": {"required": False, "type": "str", "default": "root"},
         "https": {"required": False, "type": "bool", "default": True},
         "ssl_verify": {"required": False, "type": "bool", "default": True},
-        "state": {"required": True, "type": "str",
+        "state": {"required": False, "type": "str",
                   "choices": ["present", "absent"]},
         "firewall_profile_protocol_options": {
             "required": False, "type": "dict", "default": None,
             "options": {
+                "state": {"required": False, "type": "str",
+                          "choices": ["present", "absent"]},
                 "comment": {"required": False, "type": "str"},
                 "dns": {"required": False, "type": "dict",
                         "options": {
@@ -1027,6 +1048,7 @@ def main():
     module = AnsibleModule(argument_spec=fields,
                            supports_check_mode=False)
 
+    # legacy_mode refers to using fortiosapi instead of HTTPAPI
     legacy_mode = 'host' in module.params and module.params['host'] is not None and \
                   'username' in module.params and module.params['username'] is not None and \
                   'password' in module.params and module.params['password'] is not None
diff --git a/lib/ansible/modules/network/fortios/fortios_firewall_proxy_address.py b/lib/ansible/modules/network/fortios/fortios_firewall_proxy_address.py
index fe62a698a0..0e3164ceef 100644
--- a/lib/ansible/modules/network/fortios/fortios_firewall_proxy_address.py
+++ b/lib/ansible/modules/network/fortios/fortios_firewall_proxy_address.py
@@ -76,8 +76,10 @@ options:
     state:
         description:
             - Indicates whether to create or remove the object.
+              This attribute was present already in previous version in a deeper level.
+              It has been moved out to this outer level.
         type: str
-        required: true
+        required: false
         choices:
             - present
             - absent
@@ -88,6 +90,17 @@ options:
         default: null
         type: dict
         suboptions:
+            state:
+                description:
+                    - B(Deprecated)
+                    - Starting with Ansible 2.9 we recommend using the top-level 'state' parameter.
+                    - HORIZONTALLINE
+                    - Indicates whether to create or remove the object.
+                type: str
+                required: false
+                choices:
+                    - present
+                    - absent
             case_sensitivity:
                 description:
                     - Enable to make the pattern case sensitive.
@@ -107,7 +120,7 @@ options:
                         type: int
             color:
                 description:
-                    - Integer value to determine the color of the icon in the GUI (1 - 32, default = 0, which sets value to 1).
+                    - Integer value to determine the color of the icon in the GUI (1 - 32).
                 type: int
             comment:
                 description:
@@ -411,7 +424,12 @@ def underscore_to_hyphen(data):
 
 def firewall_proxy_address(data, fos):
     vdom = data['vdom']
-    state = data['state']
+    if 'state' in data and data['state']:
+        state = data['state']
+    elif 'state' in data['firewall_proxy_address'] and data['firewall_proxy_address']:
+        state = data['firewall_proxy_address']['state']
+    else:
+        state = True
     firewall_proxy_address_data = data['firewall_proxy_address']
     filtered_data = underscore_to_hyphen(filter_firewall_proxy_address_data(firewall_proxy_address_data))
 
@@ -451,11 +469,13 @@ def main():
         "vdom": {"required": False, "type": "str", "default": "root"},
         "https": {"required": False, "type": "bool", "default": True},
         "ssl_verify": {"required": False, "type": "bool", "default": True},
-        "state": {"required": True, "type": "str",
+        "state": {"required": False, "type": "str",
                   "choices": ["present", "absent"]},
         "firewall_proxy_address": {
             "required": False, "type": "dict", "default": None,
             "options": {
+                "state": {"required": False, "type": "str",
+                          "choices": ["present", "absent"]},
                 "case_sensitivity": {"required": False, "type": "str",
                                      "choices": ["disable", "enable"]},
                 "category": {"required": False, "type": "list",
diff --git a/lib/ansible/modules/network/fortios/fortios_firewall_proxy_addrgrp.py b/lib/ansible/modules/network/fortios/fortios_firewall_proxy_addrgrp.py
index 1a6c541c58..a3323aa74a 100644
--- a/lib/ansible/modules/network/fortios/fortios_firewall_proxy_addrgrp.py
+++ b/lib/ansible/modules/network/fortios/fortios_firewall_proxy_addrgrp.py
@@ -76,8 +76,10 @@ options:
     state:
         description:
             - Indicates whether to create or remove the object.
+              This attribute was present already in previous version in a deeper level.
+              It has been moved out to this outer level.
         type: str
-        required: true
+        required: false
         choices:
             - present
             - absent
@@ -88,9 +90,20 @@ options:
         default: null
         type: dict
         suboptions:
+            state:
+                description:
+                    - B(Deprecated)
+                    - Starting with Ansible 2.9 we recommend using the top-level 'state' parameter.
+                    - HORIZONTALLINE
+                    - Indicates whether to create or remove the object.
+                type: str
+                required: false
+                choices:
+                    - present
+                    - absent
             color:
                 description:
-                    - Integer value to determine the color of the icon in the GUI (1 - 32, default = 0, which sets value to 1).
+                    - Integer value to determine the color of the icon in the GUI (1 - 32).
                 type: int
             comment:
                 description:
@@ -299,7 +312,12 @@ def underscore_to_hyphen(data):
 
 def firewall_proxy_addrgrp(data, fos):
     vdom = data['vdom']
-    state = data['state']
+    if 'state' in data and data['state']:
+        state = data['state']
+    elif 'state' in data['firewall_proxy_addrgrp'] and data['firewall_proxy_addrgrp']:
+        state = data['firewall_proxy_addrgrp']['state']
+    else:
+        state = True
     firewall_proxy_addrgrp_data = data['firewall_proxy_addrgrp']
     filtered_data = underscore_to_hyphen(filter_firewall_proxy_addrgrp_data(firewall_proxy_addrgrp_data))
 
@@ -339,11 +357,13 @@ def main():
         "vdom": {"required": False, "type": "str", "default": "root"},
         "https": {"required": False, "type": "bool", "default": True},
         "ssl_verify": {"required": False, "type": "bool", "default": True},
-        "state": {"required": True, "type": "str",
+        "state": {"required": False, "type": "str",
                   "choices": ["present", "absent"]},
         "firewall_proxy_addrgrp": {
             "required": False, "type": "dict", "default": None,
             "options": {
+                "state": {"required": False, "type": "str",
+                          "choices": ["present", "absent"]},
                 "color": {"required": False, "type": "int"},
                 "comment": {"required": False, "type": "str"},
                 "member": {"required": False, "type": "list",
diff --git a/lib/ansible/modules/network/fortios/fortios_firewall_proxy_policy.py b/lib/ansible/modules/network/fortios/fortios_firewall_proxy_policy.py
index 5019058567..bb335fefac 100644
--- a/lib/ansible/modules/network/fortios/fortios_firewall_proxy_policy.py
+++ b/lib/ansible/modules/network/fortios/fortios_firewall_proxy_policy.py
@@ -76,8 +76,10 @@ options:
     state:
         description:
             - Indicates whether to create or remove the object.
+              This attribute was present already in previous version in a deeper level.
+              It has been moved out to this outer level.
         type: str
-        required: true
+        required: false
         choices:
             - present
             - absent
@@ -88,6 +90,17 @@ options:
         default: null
         type: dict
         suboptions:
+            state:
+                description:
+                    - B(Deprecated)
+                    - Starting with Ansible 2.9 we recommend using the top-level 'state' parameter.
+                    - HORIZONTALLINE
+                    - Indicates whether to create or remove the object.
+                type: str
+                required: false
+                choices:
+                    - present
+                    - absent
             action:
                 description:
                     - Accept or deny traffic matching the policy parameters.
@@ -322,7 +335,7 @@ options:
                     - disable
             session_ttl:
                 description:
-                    - TTL in seconds for sessions accepted by this policy (0 means use the system default session TTL).
+                    - TTL in seconds for sessions accepted by this policy (0 means use the system ).
                 type: int
             spamfilter_profile:
                 description:
@@ -664,7 +677,12 @@ def underscore_to_hyphen(data):
 
 def firewall_proxy_policy(data, fos):
     vdom = data['vdom']
-    state = data['state']
+    if 'state' in data and data['state']:
+        state = data['state']
+    elif 'state' in data['firewall_proxy_policy'] and data['firewall_proxy_policy']:
+        state = data['firewall_proxy_policy']['state']
+    else:
+        state = True
     firewall_proxy_policy_data = data['firewall_proxy_policy']
     filtered_data = underscore_to_hyphen(filter_firewall_proxy_policy_data(firewall_proxy_policy_data))
 
@@ -704,11 +722,13 @@ def main():
         "vdom": {"required": False, "type": "str", "default": "root"},
         "https": {"required": False, "type": "bool", "default": True},
         "ssl_verify": {"required": False, "type": "bool", "default": True},
-        "state": {"required": True, "type": "str",
+        "state": {"required": False, "type": "str",
                   "choices": ["present", "absent"]},
         "firewall_proxy_policy": {
             "required": False, "type": "dict", "default": None,
             "options": {
+                "state": {"required": False, "type": "str",
+                          "choices": ["present", "absent"]},
                 "action": {"required": False, "type": "str",
                            "choices": ["accept", "deny", "redirect"]},
                 "application_list": {"required": False, "type": "str"},
diff --git a/lib/ansible/modules/network/fortios/fortios_firewall_schedule_group.py b/lib/ansible/modules/network/fortios/fortios_firewall_schedule_group.py
index 6793203816..8cf3df4eb9 100644
--- a/lib/ansible/modules/network/fortios/fortios_firewall_schedule_group.py
+++ b/lib/ansible/modules/network/fortios/fortios_firewall_schedule_group.py
@@ -76,8 +76,10 @@ options:
     state:
         description:
             - Indicates whether to create or remove the object.
+              This attribute was present already in previous version in a deeper level.
+              It has been moved out to this outer level.
         type: str
-        required: true
+        required: false
         choices:
             - present
             - absent
@@ -88,6 +90,17 @@ options:
         default: null
         type: dict
         suboptions:
+            state:
+                description:
+                    - B(Deprecated)
+                    - Starting with Ansible 2.9 we recommend using the top-level 'state' parameter.
+                    - HORIZONTALLINE
+                    - Indicates whether to create or remove the object.
+                type: str
+                required: false
+                choices:
+                    - present
+                    - absent
             color:
                 description:
                     - Color of icon on the GUI.
@@ -240,7 +253,12 @@ def underscore_to_hyphen(data):
 
 def firewall_schedule_group(data, fos):
     vdom = data['vdom']
-    state = data['state']
+    if 'state' in data and data['state']:
+        state = data['state']
+    elif 'state' in data['firewall_schedule_group'] and data['firewall_schedule_group']:
+        state = data['firewall_schedule_group']['state']
+    else:
+        state = True
     firewall_schedule_group_data = data['firewall_schedule_group']
     filtered_data = underscore_to_hyphen(filter_firewall_schedule_group_data(firewall_schedule_group_data))
 
@@ -280,11 +298,13 @@ def main():
         "vdom": {"required": False, "type": "str", "default": "root"},
         "https": {"required": False, "type": "bool", "default": True},
         "ssl_verify": {"required": False, "type": "bool", "default": True},
-        "state": {"required": True, "type": "str",
+        "state": {"required": False, "type": "str",
                   "choices": ["present", "absent"]},
         "firewall_schedule_group": {
             "required": False, "type": "dict", "default": None,
             "options": {
+                "state": {"required": False, "type": "str",
+                          "choices": ["present", "absent"]},
                 "color": {"required": False, "type": "int"},
                 "member": {"required": False, "type": "list",
                            "options": {
diff --git a/lib/ansible/modules/network/fortios/fortios_firewall_schedule_onetime.py b/lib/ansible/modules/network/fortios/fortios_firewall_schedule_onetime.py
index 1d0f0a1829..4682f8a6b3 100644
--- a/lib/ansible/modules/network/fortios/fortios_firewall_schedule_onetime.py
+++ b/lib/ansible/modules/network/fortios/fortios_firewall_schedule_onetime.py
@@ -76,8 +76,10 @@ options:
     state:
         description:
             - Indicates whether to create or remove the object.
+              This attribute was present already in previous version in a deeper level.
+              It has been moved out to this outer level.
         type: str
-        required: true
+        required: false
         choices:
             - present
             - absent
@@ -88,6 +90,17 @@ options:
         default: null
         type: dict
         suboptions:
+            state:
+                description:
+                    - B(Deprecated)
+                    - Starting with Ansible 2.9 we recommend using the top-level 'state' parameter.
+                    - HORIZONTALLINE
+                    - Indicates whether to create or remove the object.
+                type: str
+                required: false
+                choices:
+                    - present
+                    - absent
             color:
                 description:
                     - Color of icon on the GUI.
@@ -243,7 +256,12 @@ def underscore_to_hyphen(data):
 
 def firewall_schedule_onetime(data, fos):
     vdom = data['vdom']
-    state = data['state']
+    if 'state' in data and data['state']:
+        state = data['state']
+    elif 'state' in data['firewall_schedule_onetime'] and data['firewall_schedule_onetime']:
+        state = data['firewall_schedule_onetime']['state']
+    else:
+        state = True
     firewall_schedule_onetime_data = data['firewall_schedule_onetime']
     filtered_data = underscore_to_hyphen(filter_firewall_schedule_onetime_data(firewall_schedule_onetime_data))
 
@@ -283,11 +301,13 @@ def main():
         "vdom": {"required": False, "type": "str", "default": "root"},
         "https": {"required": False, "type": "bool", "default": True},
         "ssl_verify": {"required": False, "type": "bool", "default": True},
-        "state": {"required": True, "type": "str",
+        "state": {"required": False, "type": "str",
                   "choices": ["present", "absent"]},
         "firewall_schedule_onetime": {
             "required": False, "type": "dict", "default": None,
             "options": {
+                "state": {"required": False, "type": "str",
+                          "choices": ["present", "absent"]},
                 "color": {"required": False, "type": "int"},
                 "end": {"required": False, "type": "str"},
                 "expiration_days": {"required": False, "type": "int"},
diff --git a/lib/ansible/modules/network/fortios/fortios_firewall_schedule_recurring.py b/lib/ansible/modules/network/fortios/fortios_firewall_schedule_recurring.py
index bc350a1d35..a4d07b214f 100644
--- a/lib/ansible/modules/network/fortios/fortios_firewall_schedule_recurring.py
+++ b/lib/ansible/modules/network/fortios/fortios_firewall_schedule_recurring.py
@@ -76,8 +76,10 @@ options:
     state:
         description:
             - Indicates whether to create or remove the object.
+              This attribute was present already in previous version in a deeper level.
+              It has been moved out to this outer level.
         type: str
-        required: true
+        required: false
         choices:
             - present
             - absent
@@ -88,6 +90,17 @@ options:
         default: null
         type: dict
         suboptions:
+            state:
+                description:
+                    - B(Deprecated)
+                    - Starting with Ansible 2.9 we recommend using the top-level 'state' parameter.
+                    - HORIZONTALLINE
+                    - Indicates whether to create or remove the object.
+                type: str
+                required: false
+                choices:
+                    - present
+                    - absent
             color:
                 description:
                     - Color of icon on the GUI.
@@ -252,7 +265,12 @@ def underscore_to_hyphen(data):
 
 def firewall_schedule_recurring(data, fos):
     vdom = data['vdom']
-    state = data['state']
+    if 'state' in data and data['state']:
+        state = data['state']
+    elif 'state' in data['firewall_schedule_recurring'] and data['firewall_schedule_recurring']:
+        state = data['firewall_schedule_recurring']['state']
+    else:
+        state = True
     firewall_schedule_recurring_data = data['firewall_schedule_recurring']
     filtered_data = underscore_to_hyphen(filter_firewall_schedule_recurring_data(firewall_schedule_recurring_data))
 
@@ -292,11 +310,13 @@ def main():
         "vdom": {"required": False, "type": "str", "default": "root"},
         "https": {"required": False, "type": "bool", "default": True},
         "ssl_verify": {"required": False, "type": "bool", "default": True},
-        "state": {"required": True, "type": "str",
+        "state": {"required": False, "type": "str",
                   "choices": ["present", "absent"]},
         "firewall_schedule_recurring": {
             "required": False, "type": "dict", "default": None,
             "options": {
+                "state": {"required": False, "type": "str",
+                          "choices": ["present", "absent"]},
                 "color": {"required": False, "type": "int"},
                 "day": {"required": False, "type": "str",
                         "choices": ["sunday", "monday", "tuesday",
diff --git a/lib/ansible/modules/network/fortios/fortios_firewall_service_category.py b/lib/ansible/modules/network/fortios/fortios_firewall_service_category.py
index 2e4d237fc7..3e33d626b9 100644
--- a/lib/ansible/modules/network/fortios/fortios_firewall_service_category.py
+++ b/lib/ansible/modules/network/fortios/fortios_firewall_service_category.py
@@ -76,8 +76,10 @@ options:
     state:
         description:
             - Indicates whether to create or remove the object.
+              This attribute was present already in previous version in a deeper level.
+              It has been moved out to this outer level.
         type: str
-        required: true
+        required: false
         choices:
             - present
             - absent
@@ -88,6 +90,17 @@ options:
         default: null
         type: dict
         suboptions:
+            state:
+                description:
+                    - B(Deprecated)
+                    - Starting with Ansible 2.9 we recommend using the top-level 'state' parameter.
+                    - HORIZONTALLINE
+                    - Indicates whether to create or remove the object.
+                type: str
+                required: false
+                choices:
+                    - present
+                    - absent
             comment:
                 description:
                     - Comment.
@@ -227,7 +240,12 @@ def underscore_to_hyphen(data):
 
 def firewall_service_category(data, fos):
     vdom = data['vdom']
-    state = data['state']
+    if 'state' in data and data['state']:
+        state = data['state']
+    elif 'state' in data['firewall_service_category'] and data['firewall_service_category']:
+        state = data['firewall_service_category']['state']
+    else:
+        state = True
     firewall_service_category_data = data['firewall_service_category']
     filtered_data = underscore_to_hyphen(filter_firewall_service_category_data(firewall_service_category_data))
 
@@ -267,11 +285,13 @@ def main():
         "vdom": {"required": False, "type": "str", "default": "root"},
         "https": {"required": False, "type": "bool", "default": True},
         "ssl_verify": {"required": False, "type": "bool", "default": True},
-        "state": {"required": True, "type": "str",
+        "state": {"required": False, "type": "str",
                   "choices": ["present", "absent"]},
         "firewall_service_category": {
             "required": False, "type": "dict", "default": None,
             "options": {
+                "state": {"required": False, "type": "str",
+                          "choices": ["present", "absent"]},
                 "comment": {"required": False, "type": "str"},
                 "name": {"required": True, "type": "str"}
 
diff --git a/lib/ansible/modules/network/fortios/fortios_firewall_service_custom.py b/lib/ansible/modules/network/fortios/fortios_firewall_service_custom.py
index 719b4dd2af..89e9795331 100644
--- a/lib/ansible/modules/network/fortios/fortios_firewall_service_custom.py
+++ b/lib/ansible/modules/network/fortios/fortios_firewall_service_custom.py
@@ -76,8 +76,10 @@ options:
     state:
         description:
             - Indicates whether to create or remove the object.
+              This attribute was present already in previous version in a deeper level.
+              It has been moved out to this outer level.
         type: str
-        required: true
+        required: false
         choices:
             - present
             - absent
@@ -88,6 +90,17 @@ options:
         default: null
         type: dict
         suboptions:
+            state:
+                description:
+                    - B(Deprecated)
+                    - Starting with Ansible 2.9 we recommend using the top-level 'state' parameter.
+                    - HORIZONTALLINE
+                    - Indicates whether to create or remove the object.
+                type: str
+                required: false
+                choices:
+                    - present
+                    - absent
             app_category:
                 description:
                     - Application category ID.
@@ -412,7 +425,12 @@ def underscore_to_hyphen(data):
 
 def firewall_service_custom(data, fos):
     vdom = data['vdom']
-    state = data['state']
+    if 'state' in data and data['state']:
+        state = data['state']
+    elif 'state' in data['firewall_service_custom'] and data['firewall_service_custom']:
+        state = data['firewall_service_custom']['state']
+    else:
+        state = True
     firewall_service_custom_data = data['firewall_service_custom']
     filtered_data = underscore_to_hyphen(filter_firewall_service_custom_data(firewall_service_custom_data))
 
@@ -452,11 +470,13 @@ def main():
         "vdom": {"required": False, "type": "str", "default": "root"},
         "https": {"required": False, "type": "bool", "default": True},
         "ssl_verify": {"required": False, "type": "bool", "default": True},
-        "state": {"required": True, "type": "str",
+        "state": {"required": False, "type": "str",
                   "choices": ["present", "absent"]},
         "firewall_service_custom": {
             "required": False, "type": "dict", "default": None,
             "options": {
+                "state": {"required": False, "type": "str",
+                          "choices": ["present", "absent"]},
                 "app_category": {"required": False, "type": "list",
                                  "options": {
                                      "id": {"required": True, "type": "int"}
diff --git a/lib/ansible/modules/network/fortios/fortios_firewall_service_group.py b/lib/ansible/modules/network/fortios/fortios_firewall_service_group.py
index d724e640c4..6c804f184d 100644
--- a/lib/ansible/modules/network/fortios/fortios_firewall_service_group.py
+++ b/lib/ansible/modules/network/fortios/fortios_firewall_service_group.py
@@ -76,8 +76,10 @@ options:
     state:
         description:
             - Indicates whether to create or remove the object.
+              This attribute was present already in previous version in a deeper level.
+              It has been moved out to this outer level.
         type: str
-        required: true
+        required: false
         choices:
             - present
             - absent
@@ -88,6 +90,17 @@ options:
         default: null
         type: dict
         suboptions:
+            state:
+                description:
+                    - B(Deprecated)
+                    - Starting with Ansible 2.9 we recommend using the top-level 'state' parameter.
+                    - HORIZONTALLINE
+                    - Indicates whether to create or remove the object.
+                type: str
+                required: false
+                choices:
+                    - present
+                    - absent
             color:
                 description:
                     - Color of icon on the GUI.
@@ -254,7 +267,12 @@ def underscore_to_hyphen(data):
 
 def firewall_service_group(data, fos):
     vdom = data['vdom']
-    state = data['state']
+    if 'state' in data and data['state']:
+        state = data['state']
+    elif 'state' in data['firewall_service_group'] and data['firewall_service_group']:
+        state = data['firewall_service_group']['state']
+    else:
+        state = True
     firewall_service_group_data = data['firewall_service_group']
     filtered_data = underscore_to_hyphen(filter_firewall_service_group_data(firewall_service_group_data))
 
@@ -294,11 +312,13 @@ def main():
         "vdom": {"required": False, "type": "str", "default": "root"},
         "https": {"required": False, "type": "bool", "default": True},
         "ssl_verify": {"required": False, "type": "bool", "default": True},
-        "state": {"required": True, "type": "str",
+        "state": {"required": False, "type": "str",
                   "choices": ["present", "absent"]},
         "firewall_service_group": {
             "required": False, "type": "dict", "default": None,
             "options": {
+                "state": {"required": False, "type": "str",
+                          "choices": ["present", "absent"]},
                 "color": {"required": False, "type": "int"},
                 "comment": {"required": False, "type": "str"},
                 "member": {"required": False, "type": "list",
diff --git a/lib/ansible/modules/network/fortios/fortios_firewall_shaper_per_ip_shaper.py b/lib/ansible/modules/network/fortios/fortios_firewall_shaper_per_ip_shaper.py
index 737e775991..be30f09d43 100644
--- a/lib/ansible/modules/network/fortios/fortios_firewall_shaper_per_ip_shaper.py
+++ b/lib/ansible/modules/network/fortios/fortios_firewall_shaper_per_ip_shaper.py
@@ -76,8 +76,10 @@ options:
     state:
         description:
             - Indicates whether to create or remove the object.
+              This attribute was present already in previous version in a deeper level.
+              It has been moved out to this outer level.
         type: str
-        required: true
+        required: false
         choices:
             - present
             - absent
@@ -88,6 +90,17 @@ options:
         default: null
         type: dict
         suboptions:
+            state:
+                description:
+                    - B(Deprecated)
+                    - Starting with Ansible 2.9 we recommend using the top-level 'state' parameter.
+                    - HORIZONTALLINE
+                    - Indicates whether to create or remove the object.
+                type: str
+                required: false
+                choices:
+                    - present
+                    - absent
             bandwidth_unit:
                 description:
                     - Unit of measurement for maximum bandwidth for this shaper (Kbps, Mbps or Gbps).
@@ -269,7 +282,12 @@ def underscore_to_hyphen(data):
 
 def firewall_shaper_per_ip_shaper(data, fos):
     vdom = data['vdom']
-    state = data['state']
+    if 'state' in data and data['state']:
+        state = data['state']
+    elif 'state' in data['firewall_shaper_per_ip_shaper'] and data['firewall_shaper_per_ip_shaper']:
+        state = data['firewall_shaper_per_ip_shaper']['state']
+    else:
+        state = True
     firewall_shaper_per_ip_shaper_data = data['firewall_shaper_per_ip_shaper']
     filtered_data = underscore_to_hyphen(filter_firewall_shaper_per_ip_shaper_data(firewall_shaper_per_ip_shaper_data))
 
@@ -309,11 +327,13 @@ def main():
         "vdom": {"required": False, "type": "str", "default": "root"},
         "https": {"required": False, "type": "bool", "default": True},
         "ssl_verify": {"required": False, "type": "bool", "default": True},
-        "state": {"required": True, "type": "str",
+        "state": {"required": False, "type": "str",
                   "choices": ["present", "absent"]},
         "firewall_shaper_per_ip_shaper": {
             "required": False, "type": "dict", "default": None,
             "options": {
+                "state": {"required": False, "type": "str",
+                          "choices": ["present", "absent"]},
                 "bandwidth_unit": {"required": False, "type": "str",
                                    "choices": ["kbps", "mbps", "gbps"]},
                 "diffserv_forward": {"required": False, "type": "str",
diff --git a/lib/ansible/modules/network/fortios/fortios_firewall_shaper_traffic_shaper.py b/lib/ansible/modules/network/fortios/fortios_firewall_shaper_traffic_shaper.py
index e9f23e9d2c..d525379bd8 100644
--- a/lib/ansible/modules/network/fortios/fortios_firewall_shaper_traffic_shaper.py
+++ b/lib/ansible/modules/network/fortios/fortios_firewall_shaper_traffic_shaper.py
@@ -76,8 +76,10 @@ options:
     state:
         description:
             - Indicates whether to create or remove the object.
+              This attribute was present already in previous version in a deeper level.
+              It has been moved out to this outer level.
         type: str
-        required: true
+        required: false
         choices:
             - present
             - absent
@@ -88,6 +90,17 @@ options:
         default: null
         type: dict
         suboptions:
+            state:
+                description:
+                    - B(Deprecated)
+                    - Starting with Ansible 2.9 we recommend using the top-level 'state' parameter.
+                    - HORIZONTALLINE
+                    - Indicates whether to create or remove the object.
+                type: str
+                required: false
+                choices:
+                    - present
+                    - absent
             bandwidth_unit:
                 description:
                     - Unit of measurement for guaranteed and maximum bandwidth for this shaper (Kbps, Mbps or Gbps).
@@ -274,7 +287,12 @@ def underscore_to_hyphen(data):
 
 def firewall_shaper_traffic_shaper(data, fos):
     vdom = data['vdom']
-    state = data['state']
+    if 'state' in data and data['state']:
+        state = data['state']
+    elif 'state' in data['firewall_shaper_traffic_shaper'] and data['firewall_shaper_traffic_shaper']:
+        state = data['firewall_shaper_traffic_shaper']['state']
+    else:
+        state = True
     firewall_shaper_traffic_shaper_data = data['firewall_shaper_traffic_shaper']
     filtered_data = underscore_to_hyphen(filter_firewall_shaper_traffic_shaper_data(firewall_shaper_traffic_shaper_data))
 
@@ -314,11 +332,13 @@ def main():
         "vdom": {"required": False, "type": "str", "default": "root"},
         "https": {"required": False, "type": "bool", "default": True},
         "ssl_verify": {"required": False, "type": "bool", "default": True},
-        "state": {"required": True, "type": "str",
+        "state": {"required": False, "type": "str",
                   "choices": ["present", "absent"]},
         "firewall_shaper_traffic_shaper": {
             "required": False, "type": "dict", "default": None,
             "options": {
+                "state": {"required": False, "type": "str",
+                          "choices": ["present", "absent"]},
                 "bandwidth_unit": {"required": False, "type": "str",
                                    "choices": ["kbps", "mbps", "gbps"]},
                 "diffserv": {"required": False, "type": "str",
diff --git a/lib/ansible/modules/network/fortios/fortios_firewall_shaping_policy.py b/lib/ansible/modules/network/fortios/fortios_firewall_shaping_policy.py
index 54534e91e9..71cecc6c6e 100644
--- a/lib/ansible/modules/network/fortios/fortios_firewall_shaping_policy.py
+++ b/lib/ansible/modules/network/fortios/fortios_firewall_shaping_policy.py
@@ -76,8 +76,10 @@ options:
     state:
         description:
             - Indicates whether to create or remove the object.
+              This attribute was present already in previous version in a deeper level.
+              It has been moved out to this outer level.
         type: str
-        required: true
+        required: false
         choices:
             - present
             - absent
@@ -88,6 +90,17 @@ options:
         default: null
         type: dict
         suboptions:
+            state:
+                description:
+                    - B(Deprecated)
+                    - Starting with Ansible 2.9 we recommend using the top-level 'state' parameter.
+                    - HORIZONTALLINE
+                    - Indicates whether to create or remove the object.
+                type: str
+                required: false
+                choices:
+                    - present
+                    - absent
             app_category:
                 description:
                     - IDs of one or more application categories that this shaper applies application control traffic shaping to.
@@ -487,7 +500,12 @@ def underscore_to_hyphen(data):
 
 def firewall_shaping_policy(data, fos):
     vdom = data['vdom']
-    state = data['state']
+    if 'state' in data and data['state']:
+        state = data['state']
+    elif 'state' in data['firewall_shaping_policy'] and data['firewall_shaping_policy']:
+        state = data['firewall_shaping_policy']['state']
+    else:
+        state = True
     firewall_shaping_policy_data = data['firewall_shaping_policy']
     filtered_data = underscore_to_hyphen(filter_firewall_shaping_policy_data(firewall_shaping_policy_data))
 
@@ -527,11 +545,13 @@ def main():
         "vdom": {"required": False, "type": "str", "default": "root"},
         "https": {"required": False, "type": "bool", "default": True},
         "ssl_verify": {"required": False, "type": "bool", "default": True},
-        "state": {"required": True, "type": "str",
+        "state": {"required": False, "type": "str",
                   "choices": ["present", "absent"]},
         "firewall_shaping_policy": {
             "required": False, "type": "dict", "default": None,
             "options": {
+                "state": {"required": False, "type": "str",
+                          "choices": ["present", "absent"]},
                 "app_category": {"required": False, "type": "list",
                                  "options": {
                                      "id": {"required": True, "type": "int"}
diff --git a/lib/ansible/modules/network/fortios/fortios_firewall_shaping_profile.py b/lib/ansible/modules/network/fortios/fortios_firewall_shaping_profile.py
index 9ddc70e635..99d9f625b9 100644
--- a/lib/ansible/modules/network/fortios/fortios_firewall_shaping_profile.py
+++ b/lib/ansible/modules/network/fortios/fortios_firewall_shaping_profile.py
@@ -76,8 +76,10 @@ options:
     state:
         description:
             - Indicates whether to create or remove the object.
+              This attribute was present already in previous version in a deeper level.
+              It has been moved out to this outer level.
         type: str
-        required: true
+        required: false
         choices:
             - present
             - absent
@@ -88,6 +90,17 @@ options:
         default: null
         type: dict
         suboptions:
+            state:
+                description:
+                    - B(Deprecated)
+                    - Starting with Ansible 2.9 we recommend using the top-level 'state' parameter.
+                    - HORIZONTALLINE
+                    - Indicates whether to create or remove the object.
+                type: str
+                required: false
+                choices:
+                    - present
+                    - absent
             comment:
                 description:
                     - Comment.
@@ -269,7 +282,12 @@ def underscore_to_hyphen(data):
 
 def firewall_shaping_profile(data, fos):
     vdom = data['vdom']
-    state = data['state']
+    if 'state' in data and data['state']:
+        state = data['state']
+    elif 'state' in data['firewall_shaping_profile'] and data['firewall_shaping_profile']:
+        state = data['firewall_shaping_profile']['state']
+    else:
+        state = True
     firewall_shaping_profile_data = data['firewall_shaping_profile']
     filtered_data = underscore_to_hyphen(filter_firewall_shaping_profile_data(firewall_shaping_profile_data))
 
@@ -309,11 +327,13 @@ def main():
         "vdom": {"required": False, "type": "str", "default": "root"},
         "https": {"required": False, "type": "bool", "default": True},
         "ssl_verify": {"required": False, "type": "bool", "default": True},
-        "state": {"required": True, "type": "str",
+        "state": {"required": False, "type": "str",
                   "choices": ["present", "absent"]},
         "firewall_shaping_profile": {
             "required": False, "type": "dict", "default": None,
             "options": {
+                "state": {"required": False, "type": "str",
+                          "choices": ["present", "absent"]},
                 "comment": {"required": False, "type": "str"},
                 "default_class_id": {"required": False, "type": "int"},
                 "profile_name": {"required": False, "type": "str"},
diff --git a/lib/ansible/modules/network/fortios/fortios_firewall_sniffer.py b/lib/ansible/modules/network/fortios/fortios_firewall_sniffer.py
index 50f785c9bc..2bf9fac293 100644
--- a/lib/ansible/modules/network/fortios/fortios_firewall_sniffer.py
+++ b/lib/ansible/modules/network/fortios/fortios_firewall_sniffer.py
@@ -76,8 +76,10 @@ options:
     state:
         description:
             - Indicates whether to create or remove the object.
+              This attribute was present already in previous version in a deeper level.
+              It has been moved out to this outer level.
         type: str
-        required: true
+        required: false
         choices:
             - present
             - absent
@@ -88,6 +90,17 @@ options:
         default: null
         type: dict
         suboptions:
+            state:
+                description:
+                    - B(Deprecated)
+                    - Starting with Ansible 2.9 we recommend using the top-level 'state' parameter.
+                    - HORIZONTALLINE
+                    - Indicates whether to create or remove the object.
+                type: str
+                required: false
+                choices:
+                    - present
+                    - absent
             anomaly:
                 description:
                     - Configuration method to edit Denial of Service (DoS) anomaly settings.
@@ -121,7 +134,7 @@ options:
                             - attacker
                     quarantine_expiry:
                         description:
-                            - Duration of quarantine. (Format ###d##h##m, minimum 1m, maximum 364d23h59m, default = 5m). Requires quarantine set to attacker.
+                            - Duration of quarantine. (Format ###d##h##m, minimum 1m, maximum 364d23h59m). Requires quarantine set to attacker.
                         type: str
                     quarantine_log:
                         description:
@@ -143,8 +156,8 @@ options:
                         type: int
                     threshold(default):
                         description:
-                            - Number of detected instances per minute which triggers action (1 - 2147483647, default = 1000). Note that each anomaly has a
-                               different threshold value assigned to it.
+                            - Number of detected instances per minute which triggers action (1 - 2147483647). Note that each anomaly has a different threshold
+                               value assigned to it.
                         type: int
             application_list:
                 description:
@@ -234,7 +247,7 @@ options:
                     - disable
             max_packet_count:
                 description:
-                    - Maximum packet count (1 - 1000000, default = 10000).
+                    - Maximum packet count (1 - 1000000).
                 type: int
             non_ip:
                 description:
@@ -465,7 +478,12 @@ def underscore_to_hyphen(data):
 
 def firewall_sniffer(data, fos):
     vdom = data['vdom']
-    state = data['state']
+    if 'state' in data and data['state']:
+        state = data['state']
+    elif 'state' in data['firewall_sniffer'] and data['firewall_sniffer']:
+        state = data['firewall_sniffer']['state']
+    else:
+        state = True
     firewall_sniffer_data = data['firewall_sniffer']
     filtered_data = underscore_to_hyphen(filter_firewall_sniffer_data(firewall_sniffer_data))
 
@@ -505,11 +523,13 @@ def main():
         "vdom": {"required": False, "type": "str", "default": "root"},
         "https": {"required": False, "type": "bool", "default": True},
         "ssl_verify": {"required": False, "type": "bool", "default": True},
-        "state": {"required": True, "type": "str",
+        "state": {"required": False, "type": "str",
                   "choices": ["present", "absent"]},
         "firewall_sniffer": {
             "required": False, "type": "dict", "default": None,
             "options": {
+                "state": {"required": False, "type": "str",
+                          "choices": ["present", "absent"]},
                 "anomaly": {"required": False, "type": "list",
                             "options": {
                                 "action": {"required": False, "type": "str",
diff --git a/lib/ansible/modules/network/fortios/fortios_firewall_ssh_host_key.py b/lib/ansible/modules/network/fortios/fortios_firewall_ssh_host_key.py
index 390897dc7b..320abe247e 100644
--- a/lib/ansible/modules/network/fortios/fortios_firewall_ssh_host_key.py
+++ b/lib/ansible/modules/network/fortios/fortios_firewall_ssh_host_key.py
@@ -76,8 +76,10 @@ options:
     state:
         description:
             - Indicates whether to create or remove the object.
+              This attribute was present already in previous version in a deeper level.
+              It has been moved out to this outer level.
         type: str
-        required: true
+        required: false
         choices:
             - present
             - absent
@@ -88,6 +90,17 @@ options:
         default: null
         type: dict
         suboptions:
+            state:
+                description:
+                    - B(Deprecated)
+                    - Starting with Ansible 2.9 we recommend using the top-level 'state' parameter.
+                    - HORIZONTALLINE
+                    - Indicates whether to create or remove the object.
+                type: str
+                required: false
+                choices:
+                    - present
+                    - absent
             hostname:
                 description:
                     - Hostname of the SSH server.
@@ -275,7 +288,12 @@ def underscore_to_hyphen(data):
 
 def firewall_ssh_host_key(data, fos):
     vdom = data['vdom']
-    state = data['state']
+    if 'state' in data and data['state']:
+        state = data['state']
+    elif 'state' in data['firewall_ssh_host_key'] and data['firewall_ssh_host_key']:
+        state = data['firewall_ssh_host_key']['state']
+    else:
+        state = True
     firewall_ssh_host_key_data = data['firewall_ssh_host_key']
     filtered_data = underscore_to_hyphen(filter_firewall_ssh_host_key_data(firewall_ssh_host_key_data))
 
@@ -315,11 +333,13 @@ def main():
         "vdom": {"required": False, "type": "str", "default": "root"},
         "https": {"required": False, "type": "bool", "default": True},
         "ssl_verify": {"required": False, "type": "bool", "default": True},
-        "state": {"required": True, "type": "str",
+        "state": {"required": False, "type": "str",
                   "choices": ["present", "absent"]},
         "firewall_ssh_host_key": {
             "required": False, "type": "dict", "default": None,
             "options": {
+                "state": {"required": False, "type": "str",
+                          "choices": ["present", "absent"]},
                 "hostname": {"required": False, "type": "str"},
                 "ip": {"required": False, "type": "str"},
                 "name": {"required": True, "type": "str"},
diff --git a/lib/ansible/modules/network/fortios/fortios_firewall_ssh_local_ca.py b/lib/ansible/modules/network/fortios/fortios_firewall_ssh_local_ca.py
index 6322f921b5..9e7f4b10bb 100644
--- a/lib/ansible/modules/network/fortios/fortios_firewall_ssh_local_ca.py
+++ b/lib/ansible/modules/network/fortios/fortios_firewall_ssh_local_ca.py
@@ -76,8 +76,10 @@ options:
     state:
         description:
             - Indicates whether to create or remove the object.
+              This attribute was present already in previous version in a deeper level.
+              It has been moved out to this outer level.
         type: str
-        required: true
+        required: false
         choices:
             - present
             - absent
@@ -88,6 +90,17 @@ options:
         default: null
         type: dict
         suboptions:
+            state:
+                description:
+                    - B(Deprecated)
+                    - Starting with Ansible 2.9 we recommend using the top-level 'state' parameter.
+                    - HORIZONTALLINE
+                    - Indicates whether to create or remove the object.
+                type: str
+                required: false
+                choices:
+                    - present
+                    - absent
             name:
                 description:
                     - SSH proxy local CA name.
@@ -246,7 +259,12 @@ def underscore_to_hyphen(data):
 
 def firewall_ssh_local_ca(data, fos):
     vdom = data['vdom']
-    state = data['state']
+    if 'state' in data and data['state']:
+        state = data['state']
+    elif 'state' in data['firewall_ssh_local_ca'] and data['firewall_ssh_local_ca']:
+        state = data['firewall_ssh_local_ca']['state']
+    else:
+        state = True
     firewall_ssh_local_ca_data = data['firewall_ssh_local_ca']
     filtered_data = underscore_to_hyphen(filter_firewall_ssh_local_ca_data(firewall_ssh_local_ca_data))
 
@@ -286,11 +304,13 @@ def main():
         "vdom": {"required": False, "type": "str", "default": "root"},
         "https": {"required": False, "type": "bool", "default": True},
         "ssl_verify": {"required": False, "type": "bool", "default": True},
-        "state": {"required": True, "type": "str",
+        "state": {"required": False, "type": "str",
                   "choices": ["present", "absent"]},
         "firewall_ssh_local_ca": {
             "required": False, "type": "dict", "default": None,
             "options": {
+                "state": {"required": False, "type": "str",
+                          "choices": ["present", "absent"]},
                 "name": {"required": True, "type": "str"},
                 "password": {"required": False, "type": "str"},
                 "private_key": {"required": False, "type": "str"},
diff --git a/lib/ansible/modules/network/fortios/fortios_firewall_ssh_local_key.py b/lib/ansible/modules/network/fortios/fortios_firewall_ssh_local_key.py
index 5405c7618c..fd125b9b65 100644
--- a/lib/ansible/modules/network/fortios/fortios_firewall_ssh_local_key.py
+++ b/lib/ansible/modules/network/fortios/fortios_firewall_ssh_local_key.py
@@ -76,8 +76,10 @@ options:
     state:
         description:
             - Indicates whether to create or remove the object.
+              This attribute was present already in previous version in a deeper level.
+              It has been moved out to this outer level.
         type: str
-        required: true
+        required: false
         choices:
             - present
             - absent
@@ -88,6 +90,17 @@ options:
         default: null
         type: dict
         suboptions:
+            state:
+                description:
+                    - B(Deprecated)
+                    - Starting with Ansible 2.9 we recommend using the top-level 'state' parameter.
+                    - HORIZONTALLINE
+                    - Indicates whether to create or remove the object.
+                type: str
+                required: false
+                choices:
+                    - present
+                    - absent
             name:
                 description:
                     - SSH proxy local key name.
@@ -246,7 +259,12 @@ def underscore_to_hyphen(data):
 
 def firewall_ssh_local_key(data, fos):
     vdom = data['vdom']
-    state = data['state']
+    if 'state' in data and data['state']:
+        state = data['state']
+    elif 'state' in data['firewall_ssh_local_key'] and data['firewall_ssh_local_key']:
+        state = data['firewall_ssh_local_key']['state']
+    else:
+        state = True
     firewall_ssh_local_key_data = data['firewall_ssh_local_key']
     filtered_data = underscore_to_hyphen(filter_firewall_ssh_local_key_data(firewall_ssh_local_key_data))
 
@@ -286,11 +304,13 @@ def main():
         "vdom": {"required": False, "type": "str", "default": "root"},
         "https": {"required": False, "type": "bool", "default": True},
         "ssl_verify": {"required": False, "type": "bool", "default": True},
-        "state": {"required": True, "type": "str",
+        "state": {"required": False, "type": "str",
                   "choices": ["present", "absent"]},
         "firewall_ssh_local_key": {
             "required": False, "type": "dict", "default": None,
             "options": {
+                "state": {"required": False, "type": "str",
+                          "choices": ["present", "absent"]},
                 "name": {"required": True, "type": "str"},
                 "password": {"required": False, "type": "str"},
                 "private_key": {"required": False, "type": "str"},
diff --git a/lib/ansible/modules/network/fortios/fortios_firewall_ssl_server.py b/lib/ansible/modules/network/fortios/fortios_firewall_ssl_server.py
index 4f24cab4dd..6bfe689a21 100644
--- a/lib/ansible/modules/network/fortios/fortios_firewall_ssl_server.py
+++ b/lib/ansible/modules/network/fortios/fortios_firewall_ssl_server.py
@@ -76,8 +76,10 @@ options:
     state:
         description:
             - Indicates whether to create or remove the object.
+              This attribute was present already in previous version in a deeper level.
+              It has been moved out to this outer level.
         type: str
-        required: true
+        required: false
         choices:
             - present
             - absent
@@ -88,6 +90,17 @@ options:
         default: null
         type: dict
         suboptions:
+            state:
+                description:
+                    - B(Deprecated)
+                    - Starting with Ansible 2.9 we recommend using the top-level 'state' parameter.
+                    - HORIZONTALLINE
+                    - Indicates whether to create or remove the object.
+                type: str
+                required: false
+                choices:
+                    - present
+                    - absent
             add_header_x_forwarded_proto:
                 description:
                     - Enable/disable adding an X-Forwarded-Proto header to forwarded requests.
@@ -324,7 +337,12 @@ def underscore_to_hyphen(data):
 
 def firewall_ssl_server(data, fos):
     vdom = data['vdom']
-    state = data['state']
+    if 'state' in data and data['state']:
+        state = data['state']
+    elif 'state' in data['firewall_ssl_server'] and data['firewall_ssl_server']:
+        state = data['firewall_ssl_server']['state']
+    else:
+        state = True
     firewall_ssl_server_data = data['firewall_ssl_server']
     filtered_data = underscore_to_hyphen(filter_firewall_ssl_server_data(firewall_ssl_server_data))
 
@@ -364,11 +382,13 @@ def main():
         "vdom": {"required": False, "type": "str", "default": "root"},
         "https": {"required": False, "type": "bool", "default": True},
         "ssl_verify": {"required": False, "type": "bool", "default": True},
-        "state": {"required": True, "type": "str",
+        "state": {"required": False, "type": "str",
                   "choices": ["present", "absent"]},
         "firewall_ssl_server": {
             "required": False, "type": "dict", "default": None,
             "options": {
+                "state": {"required": False, "type": "str",
+                          "choices": ["present", "absent"]},
                 "add_header_x_forwarded_proto": {"required": False, "type": "str",
                                                  "choices": ["enable", "disable"]},
                 "ip": {"required": False, "type": "str"},
diff --git a/lib/ansible/modules/network/fortios/fortios_firewall_ssl_ssh_profile.py b/lib/ansible/modules/network/fortios/fortios_firewall_ssl_ssh_profile.py
index dfd34adee2..3f2ac4f04e 100644
--- a/lib/ansible/modules/network/fortios/fortios_firewall_ssl_ssh_profile.py
+++ b/lib/ansible/modules/network/fortios/fortios_firewall_ssl_ssh_profile.py
@@ -76,8 +76,10 @@ options:
     state:
         description:
             - Indicates whether to create or remove the object.
+              This attribute was present already in previous version in a deeper level.
+              It has been moved out to this outer level.
         type: str
-        required: true
+        required: false
         choices:
             - present
             - absent
@@ -88,6 +90,17 @@ options:
         default: null
         type: dict
         suboptions:
+            state:
+                description:
+                    - B(Deprecated)
+                    - Starting with Ansible 2.9 we recommend using the top-level 'state' parameter.
+                    - HORIZONTALLINE
+                    - Indicates whether to create or remove the object.
+                type: str
+                required: false
+                choices:
+                    - present
+                    - absent
             caname:
                 description:
                     - CA certificate used by SSL Inspection. Source vpn.certificate.local.name.
@@ -805,7 +818,12 @@ def underscore_to_hyphen(data):
 
 def firewall_ssl_ssh_profile(data, fos):
     vdom = data['vdom']
-    state = data['state']
+    if 'state' in data and data['state']:
+        state = data['state']
+    elif 'state' in data['firewall_ssl_ssh_profile'] and data['firewall_ssl_ssh_profile']:
+        state = data['firewall_ssl_ssh_profile']['state']
+    else:
+        state = True
     firewall_ssl_ssh_profile_data = data['firewall_ssl_ssh_profile']
     filtered_data = underscore_to_hyphen(filter_firewall_ssl_ssh_profile_data(firewall_ssl_ssh_profile_data))
 
@@ -845,11 +863,13 @@ def main():
         "vdom": {"required": False, "type": "str", "default": "root"},
         "https": {"required": False, "type": "bool", "default": True},
         "ssl_verify": {"required": False, "type": "bool", "default": True},
-        "state": {"required": True, "type": "str",
+        "state": {"required": False, "type": "str",
                   "choices": ["present", "absent"]},
         "firewall_ssl_ssh_profile": {
             "required": False, "type": "dict", "default": None,
             "options": {
+                "state": {"required": False, "type": "str",
+                          "choices": ["present", "absent"]},
                 "caname": {"required": False, "type": "str"},
                 "comment": {"required": False, "type": "str"},
                 "ftps": {"required": False, "type": "dict",
diff --git a/lib/ansible/modules/network/fortios/fortios_firewall_ttl_policy.py b/lib/ansible/modules/network/fortios/fortios_firewall_ttl_policy.py
index 941c2db677..ec7fd6c31a 100644
--- a/lib/ansible/modules/network/fortios/fortios_firewall_ttl_policy.py
+++ b/lib/ansible/modules/network/fortios/fortios_firewall_ttl_policy.py
@@ -76,8 +76,10 @@ options:
     state:
         description:
             - Indicates whether to create or remove the object.
+              This attribute was present already in previous version in a deeper level.
+              It has been moved out to this outer level.
         type: str
-        required: true
+        required: false
         choices:
             - present
             - absent
@@ -88,6 +90,17 @@ options:
         default: null
         type: dict
         suboptions:
+            state:
+                description:
+                    - B(Deprecated)
+                    - Starting with Ansible 2.9 we recommend using the top-level 'state' parameter.
+                    - HORIZONTALLINE
+                    - Indicates whether to create or remove the object.
+                type: str
+                required: false
+                choices:
+                    - present
+                    - absent
             action:
                 description:
                     - Action to be performed on traffic matching this policy .
@@ -282,7 +295,12 @@ def underscore_to_hyphen(data):
 
 def firewall_ttl_policy(data, fos):
     vdom = data['vdom']
-    state = data['state']
+    if 'state' in data and data['state']:
+        state = data['state']
+    elif 'state' in data['firewall_ttl_policy'] and data['firewall_ttl_policy']:
+        state = data['firewall_ttl_policy']['state']
+    else:
+        state = True
     firewall_ttl_policy_data = data['firewall_ttl_policy']
     filtered_data = underscore_to_hyphen(filter_firewall_ttl_policy_data(firewall_ttl_policy_data))
 
@@ -322,11 +340,13 @@ def main():
         "vdom": {"required": False, "type": "str", "default": "root"},
         "https": {"required": False, "type": "bool", "default": True},
         "ssl_verify": {"required": False, "type": "bool", "default": True},
-        "state": {"required": True, "type": "str",
+        "state": {"required": False, "type": "str",
                   "choices": ["present", "absent"]},
         "firewall_ttl_policy": {
             "required": False, "type": "dict", "default": None,
             "options": {
+                "state": {"required": False, "type": "str",
+                          "choices": ["present", "absent"]},
                 "action": {"required": False, "type": "str",
                            "choices": ["accept", "deny"]},
                 "id": {"required": True, "type": "int"},
diff --git a/lib/ansible/modules/network/fortios/fortios_firewall_vip.py b/lib/ansible/modules/network/fortios/fortios_firewall_vip.py
index 79a09f002e..c387479211 100644
--- a/lib/ansible/modules/network/fortios/fortios_firewall_vip.py
+++ b/lib/ansible/modules/network/fortios/fortios_firewall_vip.py
@@ -76,8 +76,10 @@ options:
     state:
         description:
             - Indicates whether to create or remove the object.
+              This attribute was present already in previous version in a deeper level.
+              It has been moved out to this outer level.
         type: str
-        required: true
+        required: false
         choices:
             - present
             - absent
@@ -88,6 +90,17 @@ options:
         default: null
         type: dict
         suboptions:
+            state:
+                description:
+                    - B(Deprecated)
+                    - Starting with Ansible 2.9 we recommend using the top-level 'state' parameter.
+                    - HORIZONTALLINE
+                    - Indicates whether to create or remove the object.
+                type: str
+                required: false
+                choices:
+                    - present
+                    - absent
             arp_reply:
                 description:
                     - Enable to respond to ARP requests for this virtual IP address. Enabled by default.
@@ -939,7 +952,12 @@ def underscore_to_hyphen(data):
 
 def firewall_vip(data, fos):
     vdom = data['vdom']
-    state = data['state']
+    if 'state' in data and data['state']:
+        state = data['state']
+    elif 'state' in data['firewall_vip'] and data['firewall_vip']:
+        state = data['firewall_vip']['state']
+    else:
+        state = True
     firewall_vip_data = data['firewall_vip']
     filtered_data = underscore_to_hyphen(filter_firewall_vip_data(firewall_vip_data))
 
@@ -979,11 +997,13 @@ def main():
         "vdom": {"required": False, "type": "str", "default": "root"},
         "https": {"required": False, "type": "bool", "default": True},
         "ssl_verify": {"required": False, "type": "bool", "default": True},
-        "state": {"required": True, "type": "str",
+        "state": {"required": False, "type": "str",
                   "choices": ["present", "absent"]},
         "firewall_vip": {
             "required": False, "type": "dict", "default": None,
             "options": {
+                "state": {"required": False, "type": "str",
+                          "choices": ["present", "absent"]},
                 "arp_reply": {"required": False, "type": "str",
                               "choices": ["disable", "enable"]},
                 "color": {"required": False, "type": "int"},
diff --git a/lib/ansible/modules/network/fortios/fortios_firewall_vip46.py b/lib/ansible/modules/network/fortios/fortios_firewall_vip46.py
index 90f70a0c89..afe09e4287 100644
--- a/lib/ansible/modules/network/fortios/fortios_firewall_vip46.py
+++ b/lib/ansible/modules/network/fortios/fortios_firewall_vip46.py
@@ -76,8 +76,10 @@ options:
     state:
         description:
             - Indicates whether to create or remove the object.
+              This attribute was present already in previous version in a deeper level.
+              It has been moved out to this outer level.
         type: str
-        required: true
+        required: false
         choices:
             - present
             - absent
@@ -88,6 +90,17 @@ options:
         default: null
         type: dict
         suboptions:
+            state:
+                description:
+                    - B(Deprecated)
+                    - Starting with Ansible 2.9 we recommend using the top-level 'state' parameter.
+                    - HORIZONTALLINE
+                    - Indicates whether to create or remove the object.
+                type: str
+                required: false
+                choices:
+                    - present
+                    - absent
             arp_reply:
                 description:
                     - Enable ARP reply.
@@ -413,7 +426,12 @@ def underscore_to_hyphen(data):
 
 def firewall_vip46(data, fos):
     vdom = data['vdom']
-    state = data['state']
+    if 'state' in data and data['state']:
+        state = data['state']
+    elif 'state' in data['firewall_vip46'] and data['firewall_vip46']:
+        state = data['firewall_vip46']['state']
+    else:
+        state = True
     firewall_vip46_data = data['firewall_vip46']
     filtered_data = underscore_to_hyphen(filter_firewall_vip46_data(firewall_vip46_data))
 
@@ -453,11 +471,13 @@ def main():
         "vdom": {"required": False, "type": "str", "default": "root"},
         "https": {"required": False, "type": "bool", "default": True},
         "ssl_verify": {"required": False, "type": "bool", "default": True},
-        "state": {"required": True, "type": "str",
+        "state": {"required": False, "type": "str",
                   "choices": ["present", "absent"]},
         "firewall_vip46": {
             "required": False, "type": "dict", "default": None,
             "options": {
+                "state": {"required": False, "type": "str",
+                          "choices": ["present", "absent"]},
                 "arp_reply": {"required": False, "type": "str",
                               "choices": ["disable", "enable"]},
                 "color": {"required": False, "type": "int"},
diff --git a/lib/ansible/modules/network/fortios/fortios_firewall_vip6.py b/lib/ansible/modules/network/fortios/fortios_firewall_vip6.py
index f5757806fe..bb301e9cd8 100644
--- a/lib/ansible/modules/network/fortios/fortios_firewall_vip6.py
+++ b/lib/ansible/modules/network/fortios/fortios_firewall_vip6.py
@@ -76,8 +76,10 @@ options:
     state:
         description:
             - Indicates whether to create or remove the object.
+              This attribute was present already in previous version in a deeper level.
+              It has been moved out to this outer level.
         type: str
-        required: true
+        required: false
         choices:
             - present
             - absent
@@ -88,6 +90,17 @@ options:
         default: null
         type: dict
         suboptions:
+            state:
+                description:
+                    - B(Deprecated)
+                    - Starting with Ansible 2.9 we recommend using the top-level 'state' parameter.
+                    - HORIZONTALLINE
+                    - Indicates whether to create or remove the object.
+                type: str
+                required: false
+                choices:
+                    - present
+                    - absent
             arp_reply:
                 description:
                     - Enable to respond to ARP requests for this virtual IP address. Enabled by default.
@@ -849,7 +862,12 @@ def underscore_to_hyphen(data):
 
 def firewall_vip6(data, fos):
     vdom = data['vdom']
-    state = data['state']
+    if 'state' in data and data['state']:
+        state = data['state']
+    elif 'state' in data['firewall_vip6'] and data['firewall_vip6']:
+        state = data['firewall_vip6']['state']
+    else:
+        state = True
     firewall_vip6_data = data['firewall_vip6']
     filtered_data = underscore_to_hyphen(filter_firewall_vip6_data(firewall_vip6_data))
 
@@ -889,11 +907,13 @@ def main():
         "vdom": {"required": False, "type": "str", "default": "root"},
         "https": {"required": False, "type": "bool", "default": True},
         "ssl_verify": {"required": False, "type": "bool", "default": True},
-        "state": {"required": True, "type": "str",
+        "state": {"required": False, "type": "str",
                   "choices": ["present", "absent"]},
         "firewall_vip6": {
             "required": False, "type": "dict", "default": None,
             "options": {
+                "state": {"required": False, "type": "str",
+                          "choices": ["present", "absent"]},
                 "arp_reply": {"required": False, "type": "str",
                               "choices": ["disable", "enable"]},
                 "color": {"required": False, "type": "int"},
diff --git a/lib/ansible/modules/network/fortios/fortios_firewall_vip64.py b/lib/ansible/modules/network/fortios/fortios_firewall_vip64.py
index 7c45cc1390..78b82461e0 100644
--- a/lib/ansible/modules/network/fortios/fortios_firewall_vip64.py
+++ b/lib/ansible/modules/network/fortios/fortios_firewall_vip64.py
@@ -76,8 +76,10 @@ options:
     state:
         description:
             - Indicates whether to create or remove the object.
+              This attribute was present already in previous version in a deeper level.
+              It has been moved out to this outer level.
         type: str
-        required: true
+        required: false
         choices:
             - present
             - absent
@@ -88,6 +90,17 @@ options:
         default: null
         type: dict
         suboptions:
+            state:
+                description:
+                    - B(Deprecated)
+                    - Starting with Ansible 2.9 we recommend using the top-level 'state' parameter.
+                    - HORIZONTALLINE
+                    - Indicates whether to create or remove the object.
+                type: str
+                required: false
+                choices:
+                    - present
+                    - absent
             arp_reply:
                 description:
                     - Enable ARP reply.
@@ -413,7 +426,12 @@ def underscore_to_hyphen(data):
 
 def firewall_vip64(data, fos):
     vdom = data['vdom']
-    state = data['state']
+    if 'state' in data and data['state']:
+        state = data['state']
+    elif 'state' in data['firewall_vip64'] and data['firewall_vip64']:
+        state = data['firewall_vip64']['state']
+    else:
+        state = True
     firewall_vip64_data = data['firewall_vip64']
     filtered_data = underscore_to_hyphen(filter_firewall_vip64_data(firewall_vip64_data))
 
@@ -453,11 +471,13 @@ def main():
         "vdom": {"required": False, "type": "str", "default": "root"},
         "https": {"required": False, "type": "bool", "default": True},
         "ssl_verify": {"required": False, "type": "bool", "default": True},
-        "state": {"required": True, "type": "str",
+        "state": {"required": False, "type": "str",
                   "choices": ["present", "absent"]},
         "firewall_vip64": {
             "required": False, "type": "dict", "default": None,
             "options": {
+                "state": {"required": False, "type": "str",
+                          "choices": ["present", "absent"]},
                 "arp_reply": {"required": False, "type": "str",
                               "choices": ["disable", "enable"]},
                 "color": {"required": False, "type": "int"},
diff --git a/lib/ansible/modules/network/fortios/fortios_firewall_vipgrp.py b/lib/ansible/modules/network/fortios/fortios_firewall_vipgrp.py
index 16b3017c64..8a5e618803 100644
--- a/lib/ansible/modules/network/fortios/fortios_firewall_vipgrp.py
+++ b/lib/ansible/modules/network/fortios/fortios_firewall_vipgrp.py
@@ -76,8 +76,10 @@ options:
     state:
         description:
             - Indicates whether to create or remove the object.
+              This attribute was present already in previous version in a deeper level.
+              It has been moved out to this outer level.
         type: str
-        required: true
+        required: false
         choices:
             - present
             - absent
@@ -88,6 +90,17 @@ options:
         default: null
         type: dict
         suboptions:
+            state:
+                description:
+                    - B(Deprecated)
+                    - Starting with Ansible 2.9 we recommend using the top-level 'state' parameter.
+                    - HORIZONTALLINE
+                    - Indicates whether to create or remove the object.
+                type: str
+                required: false
+                choices:
+                    - present
+                    - absent
             color:
                 description:
                     - Integer value to determine the color of the icon in the GUI (range 1 to 32).
@@ -256,7 +269,12 @@ def underscore_to_hyphen(data):
 
 def firewall_vipgrp(data, fos):
     vdom = data['vdom']
-    state = data['state']
+    if 'state' in data and data['state']:
+        state = data['state']
+    elif 'state' in data['firewall_vipgrp'] and data['firewall_vipgrp']:
+        state = data['firewall_vipgrp']['state']
+    else:
+        state = True
     firewall_vipgrp_data = data['firewall_vipgrp']
     filtered_data = underscore_to_hyphen(filter_firewall_vipgrp_data(firewall_vipgrp_data))
 
@@ -296,11 +314,13 @@ def main():
         "vdom": {"required": False, "type": "str", "default": "root"},
         "https": {"required": False, "type": "bool", "default": True},
         "ssl_verify": {"required": False, "type": "bool", "default": True},
-        "state": {"required": True, "type": "str",
+        "state": {"required": False, "type": "str",
                   "choices": ["present", "absent"]},
         "firewall_vipgrp": {
             "required": False, "type": "dict", "default": None,
             "options": {
+                "state": {"required": False, "type": "str",
+                          "choices": ["present", "absent"]},
                 "color": {"required": False, "type": "int"},
                 "comments": {"required": False, "type": "str"},
                 "interface": {"required": False, "type": "str"},
diff --git a/lib/ansible/modules/network/fortios/fortios_firewall_vipgrp46.py b/lib/ansible/modules/network/fortios/fortios_firewall_vipgrp46.py
index 79574e6db3..5043dbb38d 100644
--- a/lib/ansible/modules/network/fortios/fortios_firewall_vipgrp46.py
+++ b/lib/ansible/modules/network/fortios/fortios_firewall_vipgrp46.py
@@ -76,8 +76,10 @@ options:
     state:
         description:
             - Indicates whether to create or remove the object.
+              This attribute was present already in previous version in a deeper level.
+              It has been moved out to this outer level.
         type: str
-        required: true
+        required: false
         choices:
             - present
             - absent
@@ -88,6 +90,17 @@ options:
         default: null
         type: dict
         suboptions:
+            state:
+                description:
+                    - B(Deprecated)
+                    - Starting with Ansible 2.9 we recommend using the top-level 'state' parameter.
+                    - HORIZONTALLINE
+                    - Indicates whether to create or remove the object.
+                type: str
+                required: false
+                choices:
+                    - present
+                    - absent
             color:
                 description:
                     - Integer value to determine the color of the icon in the GUI (range 1 to 32).
@@ -251,7 +264,12 @@ def underscore_to_hyphen(data):
 
 def firewall_vipgrp46(data, fos):
     vdom = data['vdom']
-    state = data['state']
+    if 'state' in data and data['state']:
+        state = data['state']
+    elif 'state' in data['firewall_vipgrp46'] and data['firewall_vipgrp46']:
+        state = data['firewall_vipgrp46']['state']
+    else:
+        state = True
     firewall_vipgrp46_data = data['firewall_vipgrp46']
     filtered_data = underscore_to_hyphen(filter_firewall_vipgrp46_data(firewall_vipgrp46_data))
 
@@ -291,11 +309,13 @@ def main():
         "vdom": {"required": False, "type": "str", "default": "root"},
         "https": {"required": False, "type": "bool", "default": True},
         "ssl_verify": {"required": False, "type": "bool", "default": True},
-        "state": {"required": True, "type": "str",
+        "state": {"required": False, "type": "str",
                   "choices": ["present", "absent"]},
         "firewall_vipgrp46": {
             "required": False, "type": "dict", "default": None,
             "options": {
+                "state": {"required": False, "type": "str",
+                          "choices": ["present", "absent"]},
                 "color": {"required": False, "type": "int"},
                 "comments": {"required": False, "type": "str"},
                 "member": {"required": False, "type": "list",
diff --git a/lib/ansible/modules/network/fortios/fortios_firewall_vipgrp6.py b/lib/ansible/modules/network/fortios/fortios_firewall_vipgrp6.py
index 87ac72b79c..762f167fe7 100644
--- a/lib/ansible/modules/network/fortios/fortios_firewall_vipgrp6.py
+++ b/lib/ansible/modules/network/fortios/fortios_firewall_vipgrp6.py
@@ -76,8 +76,10 @@ options:
     state:
         description:
             - Indicates whether to create or remove the object.
+              This attribute was present already in previous version in a deeper level.
+              It has been moved out to this outer level.
         type: str
-        required: true
+        required: false
         choices:
             - present
             - absent
@@ -88,6 +90,17 @@ options:
         default: null
         type: dict
         suboptions:
+            state:
+                description:
+                    - B(Deprecated)
+                    - Starting with Ansible 2.9 we recommend using the top-level 'state' parameter.
+                    - HORIZONTALLINE
+                    - Indicates whether to create or remove the object.
+                type: str
+                required: false
+                choices:
+                    - present
+                    - absent
             color:
                 description:
                     - Integer value to determine the color of the icon in the GUI (range 1 to 32).
@@ -251,7 +264,12 @@ def underscore_to_hyphen(data):
 
 def firewall_vipgrp6(data, fos):
     vdom = data['vdom']
-    state = data['state']
+    if 'state' in data and data['state']:
+        state = data['state']
+    elif 'state' in data['firewall_vipgrp6'] and data['firewall_vipgrp6']:
+        state = data['firewall_vipgrp6']['state']
+    else:
+        state = True
     firewall_vipgrp6_data = data['firewall_vipgrp6']
     filtered_data = underscore_to_hyphen(filter_firewall_vipgrp6_data(firewall_vipgrp6_data))
 
@@ -291,11 +309,13 @@ def main():
         "vdom": {"required": False, "type": "str", "default": "root"},
         "https": {"required": False, "type": "bool", "default": True},
         "ssl_verify": {"required": False, "type": "bool", "default": True},
-        "state": {"required": True, "type": "str",
+        "state": {"required": False, "type": "str",
                   "choices": ["present", "absent"]},
         "firewall_vipgrp6": {
             "required": False, "type": "dict", "default": None,
             "options": {
+                "state": {"required": False, "type": "str",
+                          "choices": ["present", "absent"]},
                 "color": {"required": False, "type": "int"},
                 "comments": {"required": False, "type": "str"},
                 "member": {"required": False, "type": "list",
diff --git a/lib/ansible/modules/network/fortios/fortios_firewall_vipgrp64.py b/lib/ansible/modules/network/fortios/fortios_firewall_vipgrp64.py
index e0e4805823..e9ba5ec187 100644
--- a/lib/ansible/modules/network/fortios/fortios_firewall_vipgrp64.py
+++ b/lib/ansible/modules/network/fortios/fortios_firewall_vipgrp64.py
@@ -76,8 +76,10 @@ options:
     state:
         description:
             - Indicates whether to create or remove the object.
+              This attribute was present already in previous version in a deeper level.
+              It has been moved out to this outer level.
         type: str
-        required: true
+        required: false
         choices:
             - present
             - absent
@@ -88,6 +90,17 @@ options:
         default: null
         type: dict
         suboptions:
+            state:
+                description:
+                    - B(Deprecated)
+                    - Starting with Ansible 2.9 we recommend using the top-level 'state' parameter.
+                    - HORIZONTALLINE
+                    - Indicates whether to create or remove the object.
+                type: str
+                required: false
+                choices:
+                    - present
+                    - absent
             color:
                 description:
                     - Integer value to determine the color of the icon in the GUI (range 1 to 32).
@@ -251,7 +264,12 @@ def underscore_to_hyphen(data):
 
 def firewall_vipgrp64(data, fos):
     vdom = data['vdom']
-    state = data['state']
+    if 'state' in data and data['state']:
+        state = data['state']
+    elif 'state' in data['firewall_vipgrp64'] and data['firewall_vipgrp64']:
+        state = data['firewall_vipgrp64']['state']
+    else:
+        state = True
     firewall_vipgrp64_data = data['firewall_vipgrp64']
     filtered_data = underscore_to_hyphen(filter_firewall_vipgrp64_data(firewall_vipgrp64_data))
 
@@ -291,11 +309,13 @@ def main():
         "vdom": {"required": False, "type": "str", "default": "root"},
         "https": {"required": False, "type": "bool", "default": True},
         "ssl_verify": {"required": False, "type": "bool", "default": True},
-        "state": {"required": True, "type": "str",
+        "state": {"required": False, "type": "str",
                   "choices": ["present", "absent"]},
         "firewall_vipgrp64": {
             "required": False, "type": "dict", "default": None,
             "options": {
+                "state": {"required": False, "type": "str",
+                          "choices": ["present", "absent"]},
                 "color": {"required": False, "type": "int"},
                 "comments": {"required": False, "type": "str"},
                 "member": {"required": False, "type": "list",
diff --git a/lib/ansible/modules/network/fortios/fortios_firewall_wildcard_fqdn_custom.py b/lib/ansible/modules/network/fortios/fortios_firewall_wildcard_fqdn_custom.py
index 92385e744b..ffd13773f9 100644
--- a/lib/ansible/modules/network/fortios/fortios_firewall_wildcard_fqdn_custom.py
+++ b/lib/ansible/modules/network/fortios/fortios_firewall_wildcard_fqdn_custom.py
@@ -76,8 +76,10 @@ options:
     state:
         description:
             - Indicates whether to create or remove the object.
+              This attribute was present already in previous version in a deeper level.
+              It has been moved out to this outer level.
         type: str
-        required: true
+        required: false
         choices:
             - present
             - absent
@@ -88,6 +90,17 @@ options:
         default: null
         type: dict
         suboptions:
+            state:
+                description:
+                    - B(Deprecated)
+                    - Starting with Ansible 2.9 we recommend using the top-level 'state' parameter.
+                    - HORIZONTALLINE
+                    - Indicates whether to create or remove the object.
+                type: str
+                required: false
+                choices:
+                    - present
+                    - absent
             color:
                 description:
                     - GUI icon color.
@@ -251,7 +264,12 @@ def underscore_to_hyphen(data):
 
 def firewall_wildcard_fqdn_custom(data, fos):
     vdom = data['vdom']
-    state = data['state']
+    if 'state' in data and data['state']:
+        state = data['state']
+    elif 'state' in data['firewall_wildcard_fqdn_custom'] and data['firewall_wildcard_fqdn_custom']:
+        state = data['firewall_wildcard_fqdn_custom']['state']
+    else:
+        state = True
     firewall_wildcard_fqdn_custom_data = data['firewall_wildcard_fqdn_custom']
     filtered_data = underscore_to_hyphen(filter_firewall_wildcard_fqdn_custom_data(firewall_wildcard_fqdn_custom_data))
 
@@ -291,11 +309,13 @@ def main():
         "vdom": {"required": False, "type": "str", "default": "root"},
         "https": {"required": False, "type": "bool", "default": True},
         "ssl_verify": {"required": False, "type": "bool", "default": True},
-        "state": {"required": True, "type": "str",
+        "state": {"required": False, "type": "str",
                   "choices": ["present", "absent"]},
         "firewall_wildcard_fqdn_custom": {
             "required": False, "type": "dict", "default": None,
             "options": {
+                "state": {"required": False, "type": "str",
+                          "choices": ["present", "absent"]},
                 "color": {"required": False, "type": "int"},
                 "comment": {"required": False, "type": "str"},
                 "name": {"required": True, "type": "str"},
diff --git a/lib/ansible/modules/network/fortios/fortios_firewall_wildcard_fqdn_group.py b/lib/ansible/modules/network/fortios/fortios_firewall_wildcard_fqdn_group.py
index ccb445378d..bad4b9ebe0 100644
--- a/lib/ansible/modules/network/fortios/fortios_firewall_wildcard_fqdn_group.py
+++ b/lib/ansible/modules/network/fortios/fortios_firewall_wildcard_fqdn_group.py
@@ -76,8 +76,10 @@ options:
     state:
         description:
             - Indicates whether to create or remove the object.
+              This attribute was present already in previous version in a deeper level.
+              It has been moved out to this outer level.
         type: str
-        required: true
+        required: false
         choices:
             - present
             - absent
@@ -88,6 +90,17 @@ options:
         default: null
         type: dict
         suboptions:
+            state:
+                description:
+                    - B(Deprecated)
+                    - Starting with Ansible 2.9 we recommend using the top-level 'state' parameter.
+                    - HORIZONTALLINE
+                    - Indicates whether to create or remove the object.
+                type: str
+                required: false
+                choices:
+                    - present
+                    - absent
             color:
                 description:
                     - GUI icon color.
@@ -259,7 +272,12 @@ def underscore_to_hyphen(data):
 
 def firewall_wildcard_fqdn_group(data, fos):
     vdom = data['vdom']
-    state = data['state']
+    if 'state' in data and data['state']:
+        state = data['state']
+    elif 'state' in data['firewall_wildcard_fqdn_group'] and data['firewall_wildcard_fqdn_group']:
+        state = data['firewall_wildcard_fqdn_group']['state']
+    else:
+        state = True
     firewall_wildcard_fqdn_group_data = data['firewall_wildcard_fqdn_group']
     filtered_data = underscore_to_hyphen(filter_firewall_wildcard_fqdn_group_data(firewall_wildcard_fqdn_group_data))
 
@@ -299,11 +317,13 @@ def main():
         "vdom": {"required": False, "type": "str", "default": "root"},
         "https": {"required": False, "type": "bool", "default": True},
         "ssl_verify": {"required": False, "type": "bool", "default": True},
-        "state": {"required": True, "type": "str",
+        "state": {"required": False, "type": "str",
                   "choices": ["present", "absent"]},
         "firewall_wildcard_fqdn_group": {
             "required": False, "type": "dict", "default": None,
             "options": {
+                "state": {"required": False, "type": "str",
+                          "choices": ["present", "absent"]},
                 "color": {"required": False, "type": "int"},
                 "comment": {"required": False, "type": "str"},
                 "member": {"required": False, "type": "list",
diff --git a/lib/ansible/modules/network/fortios/fortios_icap_profile.py b/lib/ansible/modules/network/fortios/fortios_icap_profile.py
index 9ca910e07e..250cc4e117 100644
--- a/lib/ansible/modules/network/fortios/fortios_icap_profile.py
+++ b/lib/ansible/modules/network/fortios/fortios_icap_profile.py
@@ -76,8 +76,10 @@ options:
     state:
         description:
             - Indicates whether to create or remove the object.
+              This attribute was present already in previous version in a deeper level.
+              It has been moved out to this outer level.
         type: str
-        required: true
+        required: false
         choices:
             - present
             - absent
@@ -88,6 +90,17 @@ options:
         default: null
         type: dict
         suboptions:
+            state:
+                description:
+                    - B(Deprecated)
+                    - Starting with Ansible 2.9 we recommend using the top-level 'state' parameter.
+                    - HORIZONTALLINE
+                    - Indicates whether to create or remove the object.
+                type: str
+                required: false
+                choices:
+                    - present
+                    - absent
             methods:
                 description:
                     - The allowed HTTP methods that will be sent to ICAP server for further processing.
@@ -304,7 +317,12 @@ def underscore_to_hyphen(data):
 
 def icap_profile(data, fos):
     vdom = data['vdom']
-    state = data['state']
+    if 'state' in data and data['state']:
+        state = data['state']
+    elif 'state' in data['icap_profile'] and data['icap_profile']:
+        state = data['icap_profile']['state']
+    else:
+        state = True
     icap_profile_data = data['icap_profile']
     filtered_data = underscore_to_hyphen(filter_icap_profile_data(icap_profile_data))
 
@@ -344,11 +362,13 @@ def main():
         "vdom": {"required": False, "type": "str", "default": "root"},
         "https": {"required": False, "type": "bool", "default": True},
         "ssl_verify": {"required": False, "type": "bool", "default": True},
-        "state": {"required": True, "type": "str",
+        "state": {"required": False, "type": "str",
                   "choices": ["present", "absent"]},
         "icap_profile": {
             "required": False, "type": "dict", "default": None,
             "options": {
+                "state": {"required": False, "type": "str",
+                          "choices": ["present", "absent"]},
                 "methods": {"required": False, "type": "str",
                             "choices": ["delete", "get", "head",
                                         "options", "post", "put",
diff --git a/lib/ansible/modules/network/fortios/fortios_icap_server.py b/lib/ansible/modules/network/fortios/fortios_icap_server.py
index 2e14636edb..999409afb5 100644
--- a/lib/ansible/modules/network/fortios/fortios_icap_server.py
+++ b/lib/ansible/modules/network/fortios/fortios_icap_server.py
@@ -76,8 +76,10 @@ options:
     state:
         description:
             - Indicates whether to create or remove the object.
+              This attribute was present already in previous version in a deeper level.
+              It has been moved out to this outer level.
         type: str
-        required: true
+        required: false
         choices:
             - present
             - absent
@@ -88,6 +90,17 @@ options:
         default: null
         type: dict
         suboptions:
+            state:
+                description:
+                    - B(Deprecated)
+                    - Starting with Ansible 2.9 we recommend using the top-level 'state' parameter.
+                    - HORIZONTALLINE
+                    - Indicates whether to create or remove the object.
+                type: str
+                required: false
+                choices:
+                    - present
+                    - absent
             ip_address:
                 description:
                     - IPv4 address of the ICAP server.
@@ -251,7 +264,12 @@ def underscore_to_hyphen(data):
 
 def icap_server(data, fos):
     vdom = data['vdom']
-    state = data['state']
+    if 'state' in data and data['state']:
+        state = data['state']
+    elif 'state' in data['icap_server'] and data['icap_server']:
+        state = data['icap_server']['state']
+    else:
+        state = True
     icap_server_data = data['icap_server']
     filtered_data = underscore_to_hyphen(filter_icap_server_data(icap_server_data))
 
@@ -291,11 +309,13 @@ def main():
         "vdom": {"required": False, "type": "str", "default": "root"},
         "https": {"required": False, "type": "bool", "default": True},
         "ssl_verify": {"required": False, "type": "bool", "default": True},
-        "state": {"required": True, "type": "str",
+        "state": {"required": False, "type": "str",
                   "choices": ["present", "absent"]},
         "icap_server": {
             "required": False, "type": "dict", "default": None,
             "options": {
+                "state": {"required": False, "type": "str",
+                          "choices": ["present", "absent"]},
                 "ip_address": {"required": False, "type": "str"},
                 "ip_version": {"required": False, "type": "str",
                                "choices": ["4", "6"]},
diff --git a/lib/ansible/modules/network/fortios/fortios_ips_custom.py b/lib/ansible/modules/network/fortios/fortios_ips_custom.py
index d1672e12ea..376ecdbac3 100644
--- a/lib/ansible/modules/network/fortios/fortios_ips_custom.py
+++ b/lib/ansible/modules/network/fortios/fortios_ips_custom.py
@@ -76,8 +76,10 @@ options:
     state:
         description:
             - Indicates whether to create or remove the object.
+              This attribute was present already in previous version in a deeper level.
+              It has been moved out to this outer level.
         type: str
-        required: true
+        required: false
         choices:
             - present
             - absent
@@ -88,6 +90,17 @@ options:
         default: null
         type: dict
         suboptions:
+            state:
+                description:
+                    - B(Deprecated)
+                    - Starting with Ansible 2.9 we recommend using the top-level 'state' parameter.
+                    - HORIZONTALLINE
+                    - Indicates whether to create or remove the object.
+                type: str
+                required: false
+                choices:
+                    - present
+                    - absent
             action:
                 description:
                     - Default action (pass or block) for this signature.
@@ -303,7 +316,12 @@ def underscore_to_hyphen(data):
 
 def ips_custom(data, fos):
     vdom = data['vdom']
-    state = data['state']
+    if 'state' in data and data['state']:
+        state = data['state']
+    elif 'state' in data['ips_custom'] and data['ips_custom']:
+        state = data['ips_custom']['state']
+    else:
+        state = True
     ips_custom_data = data['ips_custom']
     filtered_data = underscore_to_hyphen(filter_ips_custom_data(ips_custom_data))
 
@@ -343,11 +361,13 @@ def main():
         "vdom": {"required": False, "type": "str", "default": "root"},
         "https": {"required": False, "type": "bool", "default": True},
         "ssl_verify": {"required": False, "type": "bool", "default": True},
-        "state": {"required": True, "type": "str",
+        "state": {"required": False, "type": "str",
                   "choices": ["present", "absent"]},
         "ips_custom": {
             "required": False, "type": "dict", "default": None,
             "options": {
+                "state": {"required": False, "type": "str",
+                          "choices": ["present", "absent"]},
                 "action": {"required": False, "type": "str",
                            "choices": ["pass", "block"]},
                 "application": {"required": False, "type": "str"},
diff --git a/lib/ansible/modules/network/fortios/fortios_ips_decoder.py b/lib/ansible/modules/network/fortios/fortios_ips_decoder.py
index 9995021feb..0f5980bbb4 100644
--- a/lib/ansible/modules/network/fortios/fortios_ips_decoder.py
+++ b/lib/ansible/modules/network/fortios/fortios_ips_decoder.py
@@ -76,8 +76,10 @@ options:
     state:
         description:
             - Indicates whether to create or remove the object.
+              This attribute was present already in previous version in a deeper level.
+              It has been moved out to this outer level.
         type: str
-        required: true
+        required: false
         choices:
             - present
             - absent
@@ -88,6 +90,17 @@ options:
         default: null
         type: dict
         suboptions:
+            state:
+                description:
+                    - B(Deprecated)
+                    - Starting with Ansible 2.9 we recommend using the top-level 'state' parameter.
+                    - HORIZONTALLINE
+                    - Indicates whether to create or remove the object.
+                type: str
+                required: false
+                choices:
+                    - present
+                    - absent
             name:
                 description:
                     - Decoder name.
@@ -240,7 +253,12 @@ def underscore_to_hyphen(data):
 
 def ips_decoder(data, fos):
     vdom = data['vdom']
-    state = data['state']
+    if 'state' in data and data['state']:
+        state = data['state']
+    elif 'state' in data['ips_decoder'] and data['ips_decoder']:
+        state = data['ips_decoder']['state']
+    else:
+        state = True
     ips_decoder_data = data['ips_decoder']
     filtered_data = underscore_to_hyphen(filter_ips_decoder_data(ips_decoder_data))
 
@@ -280,11 +298,13 @@ def main():
         "vdom": {"required": False, "type": "str", "default": "root"},
         "https": {"required": False, "type": "bool", "default": True},
         "ssl_verify": {"required": False, "type": "bool", "default": True},
-        "state": {"required": True, "type": "str",
+        "state": {"required": False, "type": "str",
                   "choices": ["present", "absent"]},
         "ips_decoder": {
             "required": False, "type": "dict", "default": None,
             "options": {
+                "state": {"required": False, "type": "str",
+                          "choices": ["present", "absent"]},
                 "name": {"required": True, "type": "str"},
                 "parameter": {"required": False, "type": "list",
                               "options": {
diff --git a/lib/ansible/modules/network/fortios/fortios_ips_rule.py b/lib/ansible/modules/network/fortios/fortios_ips_rule.py
index aadb3b2286..6c16e95d71 100644
--- a/lib/ansible/modules/network/fortios/fortios_ips_rule.py
+++ b/lib/ansible/modules/network/fortios/fortios_ips_rule.py
@@ -76,8 +76,10 @@ options:
     state:
         description:
             - Indicates whether to create or remove the object.
+              This attribute was present already in previous version in a deeper level.
+              It has been moved out to this outer level.
         type: str
-        required: true
+        required: false
         choices:
             - present
             - absent
@@ -88,6 +90,17 @@ options:
         default: null
         type: dict
         suboptions:
+            state:
+                description:
+                    - B(Deprecated)
+                    - Starting with Ansible 2.9 we recommend using the top-level 'state' parameter.
+                    - HORIZONTALLINE
+                    - Indicates whether to create or remove the object.
+                type: str
+                required: false
+                choices:
+                    - present
+                    - absent
             action:
                 description:
                     - Action.
@@ -326,7 +339,12 @@ def underscore_to_hyphen(data):
 
 def ips_rule(data, fos):
     vdom = data['vdom']
-    state = data['state']
+    if 'state' in data and data['state']:
+        state = data['state']
+    elif 'state' in data['ips_rule'] and data['ips_rule']:
+        state = data['ips_rule']['state']
+    else:
+        state = True
     ips_rule_data = data['ips_rule']
     filtered_data = underscore_to_hyphen(filter_ips_rule_data(ips_rule_data))
 
@@ -366,11 +384,13 @@ def main():
         "vdom": {"required": False, "type": "str", "default": "root"},
         "https": {"required": False, "type": "bool", "default": True},
         "ssl_verify": {"required": False, "type": "bool", "default": True},
-        "state": {"required": True, "type": "str",
+        "state": {"required": False, "type": "str",
                   "choices": ["present", "absent"]},
         "ips_rule": {
             "required": False, "type": "dict", "default": None,
             "options": {
+                "state": {"required": False, "type": "str",
+                          "choices": ["present", "absent"]},
                 "action": {"required": False, "type": "str",
                            "choices": ["pass", "block"]},
                 "application": {"required": False, "type": "str"},
