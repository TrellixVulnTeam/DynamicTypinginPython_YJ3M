commit c9bf7eb9bbff4e54398195256a1bcf86b3259cc4
Author: James Cammarata <jimi@sngx.net>
Date:   Tue Mar 25 13:59:57 2014 -0500

    Don't run {failed|changed}_when checks until async_status is done
    
    Fixes #5117

diff --git a/lib/ansible/runner/__init__.py b/lib/ansible/runner/__init__.py
index 3865b9c0b8..51655388aa 100644
--- a/lib/ansible/runner/__init__.py
+++ b/lib/ansible/runner/__init__.py
@@ -849,16 +849,19 @@ class Runner(object):
 
             changed_when = self.module_vars.get('changed_when')
             failed_when = self.module_vars.get('failed_when')
-            if changed_when is not None or failed_when is not None:
+            if (changed_when is not None or failed_when is not None) and self.background == 0:
                 register = self.module_vars.get('register')
-                if  register is not None:
+                if register is not None:
                     if 'stdout' in data:
                         data['stdout_lines'] = data['stdout'].splitlines()
                     inject[register] = data
-                if changed_when is not None:
-                    data['changed'] = utils.check_conditional(changed_when, self.basedir, inject, fail_on_undefined=self.error_on_undefined_vars)
-                if failed_when is not None:
-                    data['failed_when_result'] = data['failed'] = utils.check_conditional(failed_when, self.basedir, inject, fail_on_undefined=self.error_on_undefined_vars)
+                # only run the final checks if the async_status has finished,
+                # or if we're not running an async_status check at all
+                if (module_name == 'async_status' and "finished" in data) or module_name != 'async_status':
+                    if changed_when is not None:
+                        data['changed'] = utils.check_conditional(changed_when, self.basedir, inject, fail_on_undefined=self.error_on_undefined_vars)
+                    if failed_when is not None:
+                        data['failed_when_result'] = data['failed'] = utils.check_conditional(failed_when, self.basedir, inject, fail_on_undefined=self.error_on_undefined_vars)
 
             if is_chained:
                 # no callbacks
