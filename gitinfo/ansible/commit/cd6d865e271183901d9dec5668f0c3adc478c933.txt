commit cd6d865e271183901d9dec5668f0c3adc478c933
Author: 夏恺(Xia Kai) <xiaket@gmail.com>
Date:   Tue Mar 15 10:01:31 2016 +0000

    use __mro__ for plugin loading when we search for its base class.
    
    This would relax the constraint a little bit, allowing subclassing existing plugins.
    
    Signed-off-by: 夏恺(Xia Kai) <xiaket@gmail.com>

diff --git a/lib/ansible/plugins/__init__.py b/lib/ansible/plugins/__init__.py
index 139e5a7d61..afeab7a103 100644
--- a/lib/ansible/plugins/__init__.py
+++ b/lib/ansible/plugins/__init__.py
@@ -329,7 +329,7 @@ class PluginLoader:
             obj = getattr(self._module_cache[path], self.class_name)
         else:
             obj = getattr(self._module_cache[path], self.class_name)(*args, **kwargs)
-            if self.base_class and self.base_class not in [base.__name__ for base in obj.__class__.__bases__]:
+            if self.base_class and self.base_class not in [base.__name__ for base in obj.__class__.__mro__]:
                 return None
 
         return obj
