commit 32997a516044244831e58bf4e0490095b89ef8e0
Author: Jacob McGill <jacob@networktocode.com>
Date:   Mon Jan 15 11:16:54 2018 -0500

    ACI_BD: Add option to set mac-address (#34843)
    
    * Add option to set mac-address
    
    * Fix missing version_added
    
    * Fix booleans

diff --git a/lib/ansible/modules/network/aci/aci_bd.py b/lib/ansible/modules/network/aci/aci_bd.py
index 235e83f44b..77d132157e 100644
--- a/lib/ansible/modules/network/aci/aci_bd.py
+++ b/lib/ansible/modules/network/aci/aci_bd.py
@@ -29,7 +29,7 @@ options:
     description:
     - Determines if the Bridge Domain should flood ARP traffic.
     - The APIC defaults new Bridge Domains to C(no).
-    choices: [ no, yes ]
+    type: bool
     default: no
   bd:
     description:
@@ -48,20 +48,20 @@ options:
     description:
     - Determines if PIM is enabled
     - The APIC defaults new Bridge Domains to C(no).
-    choices: [ no, yes ]
+    type: bool
     default: no
   enable_routing:
     description:
     - Determines if IP forwarding should be allowed.
     - The APIC defaults new Bridge Domains to C(yes).
-    choices: [ no, yes ]
+    type: bool
     default: yes
   endpoint_clear:
     description:
     - Clears all End Points in all Leaves when C(yes).
     - The APIC defaults new Bridge Domains to C(no).
     - The value is not reset to disabled once End Points have been cleared; that requires a second task.
-    choices: [ no, yes ]
+    type: bool
     default: no
   endpoint_move_detect:
     description:
@@ -87,7 +87,7 @@ options:
     description:
     - Determines if the Bridge Domain should learn End Point IPs.
     - The APIC defaults new Bridge Domains to C(yes).
-    choices: [ no, yes ]
+    type: bool
   ipv6_nd_policy:
     description:
     - The name of the IPv6 Neighbor Discovery Policy the Bridge Domain should use when
@@ -108,8 +108,14 @@ options:
     description:
     - Determines if the BD should limit IP learning to only subnets owned by the Bridge Domain.
     - The APIC defaults new Bridge Domains to C(yes).
-    choices: [ no, yes ]
+    type: bool
     default: yes
+  mac_address:
+    description:
+    - The MAC Address to assign to the C(bd) instead of using the default.
+    choices: [ mac ]
+    default: 00:22:BD:F8:19:FF
+    version_added: '2.5'
   multi_dest:
     description:
     - Determines the forwarding method for L2 multicast, broadcast, and link layer traffic.
@@ -142,6 +148,7 @@ EXAMPLES = r'''
     state: present
     tenant: prod
     bd: web_servers
+    mac_address: 00:22:BD:F8:19:FE
     vrf: prod_vrf
 
 - name: Add an FC Bridge Domain
@@ -223,6 +230,7 @@ def main():
         l2_unknown_unicast=dict(choices=['proxy', 'flood']),
         l3_unknown_multicast=dict(choices=['flood', 'opt-flood']),
         limit_ip_learn=dict(type='str', choices=['no', 'yes']),
+        mac_address=dict(type='str', aliases=['mac']),
         multi_dest=dict(choices=['bd-flood', 'drop', 'encap-flood']),
         state=dict(choices=['absent', 'present', 'query'], type='str', default='present'),
         tenant=dict(type='str', aliases=['tenant_name']),
@@ -264,6 +272,7 @@ def main():
     l2_unknown_unicast = module.params['l2_unknown_unicast']
     l3_unknown_multicast = module.params['l3_unknown_multicast']
     limit_ip_learn = module.params['limit_ip_learn']
+    mac_address = module.params['mac_address']
     multi_dest = module.params['multi_dest']
     state = module.params['state']
     tenant = module.params['tenant']
@@ -304,6 +313,7 @@ def main():
                 epMoveDetectMode=endpoint_move_detect,
                 ipLearning=ip_learning,
                 limitIpLearnToSubnets=limit_ip_learn,
+                mac=mac_address,
                 mcastAllow=enable_multicast,
                 multiDstPktAct=multi_dest,
                 name=bd,
