commit 439c4aa9791d2a9431baa929d60aa7e63da5f47e
Author: Mike Mochan <mmochan@mac.com>
Date:   Sat Jan 9 20:20:32 2016 +1000

    Remove unused vars and pass params dict to describe_peering_connections

diff --git a/lib/ansible/modules/extras/cloud/amazon/ec2_vpc_peer.py b/lib/ansible/modules/extras/cloud/amazon/ec2_vpc_peer.py
index bd5bf80a1b..8d9c44f6e7 100644
--- a/lib/ansible/modules/extras/cloud/amazon/ec2_vpc_peer.py
+++ b/lib/ansible/modules/extras/cloud/amazon/ec2_vpc_peer.py
@@ -161,10 +161,10 @@ except ImportError:
     HAS_BOTO3 = False
 
 
-def describe_peering_connections(vpc_id, peer_vpc_id, client):
+def describe_peering_connections(params, client):
     result = client.describe_vpc_peering_connections(Filters=[
-        {'Name': 'requester-vpc-info.vpc-id', 'Values': [vpc_id]},
-        {'Name': 'accepter-vpc-info.vpc-id', 'Values': [peer_vpc_id]}
+        {'Name': 'requester-vpc-info.vpc-id', 'Values': [params['VpcId']]},
+        {'Name': 'accepter-vpc-info.vpc-id', 'Values': [params['PeerVpcId']]}
         ])
     if result['VpcPeeringConnections'] == []:
         result = client.describe_vpc_peering_connections(Filters=[
@@ -190,11 +190,7 @@ def create_peer_connection(client, module):
     if module.params.get('peer_owner_id'):
         params['PeerOwnerId'] = str(module.params.get('peer_owner_id'))
     params['DryRun'] = module.check_mode
-
-    vpc_id = module.params.get('vpc_id')
-    peer_vpc_id = module.params.get('peer_vpc_id')
-    peer_owner_id = module.params.get('peer_owner_id', False)
-    peering_conns = describe_peering_connections(vpc_id, peer_vpc_id, client)
+    peering_conns = describe_peering_connections(params, client)
     for peering_conn in peering_conns['VpcPeeringConnections']:
         if is_active(peering_conn):
             return (changed, peering_conn['VpcPeeringConnectionId'])
