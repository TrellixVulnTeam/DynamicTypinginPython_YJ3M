commit 74e8aa22afe06aa1bd7f614aeaa6173f5c02d076
Author: Brian Coca <bcoca@users.noreply.github.com>
Date:   Fri Feb 10 15:13:59 2017 -0500

    no log passwords (#21229)
    
    * no log passwords
    
    * removed unneeded no_log

diff --git a/lib/ansible/modules/cloud/azure/azure_rm_virtualmachine.py b/lib/ansible/modules/cloud/azure/azure_rm_virtualmachine.py
index a163773484..b2b4936285 100644
--- a/lib/ansible/modules/cloud/azure/azure_rm_virtualmachine.py
+++ b/lib/ansible/modules/cloud/azure/azure_rm_virtualmachine.py
@@ -487,7 +487,7 @@ class AzureRMVirtualMachine(AzureRMModuleBase):
             short_hostname=dict(type='str'),
             vm_size=dict(type='str', choices=[], default='Standard_D1'),
             admin_username=dict(type='str'),
-            admin_password=dict(type='str', ),
+            admin_password=dict(type='str', no_log=True),
             ssh_password_enabled=dict(type='bool', default=True),
             ssh_public_keys=dict(type='list'),
             image=dict(type='dict'),
diff --git a/lib/ansible/modules/cloud/centurylink/clc_server.py b/lib/ansible/modules/cloud/centurylink/clc_server.py
index 721582cc33..9ddf2ad815 100644
--- a/lib/ansible/modules/cloud/centurylink/clc_server.py
+++ b/lib/ansible/modules/cloud/centurylink/clc_server.py
@@ -613,7 +613,7 @@ class ClcServer:
             ttl=dict(default=None),
             managed_os=dict(type='bool', default=False),
             description=dict(default=None),
-            source_server_password=dict(default=None),
+            source_server_password=dict(default=None, no_log=True),
             cpu_autoscale_policy_id=dict(default=None),
             anti_affinity_policy_id=dict(default=None),
             anti_affinity_policy_name=dict(default=None),
diff --git a/lib/ansible/modules/cloud/cloudstack/cs_host.py b/lib/ansible/modules/cloud/cloudstack/cs_host.py
index 4d3513b559..f273dff721 100644
--- a/lib/ansible/modules/cloud/cloudstack/cs_host.py
+++ b/lib/ansible/modules/cloud/cloudstack/cs_host.py
@@ -505,7 +505,7 @@ def main():
     argument_spec = cs_argument_spec()
     argument_spec.update(dict(
         name=dict(required=True, aliases=['url']),
-        password=dict(default=None, not_log=True),
+        password=dict(default=None, no_log=True),
         username=dict(default=None),
         hypervisor=dict(choices=CS_HYPERVISORS, default=None),
         allocation_state=dict(default=None),
diff --git a/lib/ansible/modules/cloud/lxd/lxd_container.py b/lib/ansible/modules/cloud/lxd/lxd_container.py
index 5d381d3b2f..11040cfc04 100644
--- a/lib/ansible/modules/cloud/lxd/lxd_container.py
+++ b/lib/ansible/modules/cloud/lxd/lxd_container.py
@@ -599,9 +599,7 @@ def main():
                 type='str',
                 default='{}/.config/lxc/client.crt'.format(os.environ['HOME'])
             ),
-            trust_password=dict(
-                type='str',
-            )
+            trust_password=dict( type='str', no_log=True )
         ),
         supports_check_mode=False,
     )
diff --git a/lib/ansible/modules/cloud/lxd/lxd_profile.py b/lib/ansible/modules/cloud/lxd/lxd_profile.py
index d32834732f..a3ed647528 100644
--- a/lib/ansible/modules/cloud/lxd/lxd_profile.py
+++ b/lib/ansible/modules/cloud/lxd/lxd_profile.py
@@ -362,9 +362,7 @@ def main():
                 type='str',
                 default='{}/.config/lxc/client.crt'.format(os.environ['HOME'])
             ),
-            trust_password=dict(
-                type='str',
-            )
+            trust_password=dict( type='str', no_log=True)
         ),
         supports_check_mode=False,
     )
diff --git a/lib/ansible/modules/cloud/misc/rhevm.py b/lib/ansible/modules/cloud/misc/rhevm.py
index f3a533d063..a2f6396fec 100644
--- a/lib/ansible/modules/cloud/misc/rhevm.py
+++ b/lib/ansible/modules/cloud/misc/rhevm.py
@@ -1485,7 +1485,7 @@ def main():
         argument_spec = dict(
             state      = dict(default='present', choices=['ping', 'present', 'absent', 'up', 'down', 'restarted', 'cd', 'info']),
             user       = dict(default="admin@internal"),
-            password   = dict(required=True),
+            password   = dict(required=True, no_log=True),
             server     = dict(default="127.0.0.1"),
             port       = dict(default="443"),
             insecure_api = dict(default=False, type='bool'),
diff --git a/lib/ansible/modules/cloud/openstack/os_user.py b/lib/ansible/modules/cloud/openstack/os_user.py
index bb2fed6a5c..5d81b59542 100644
--- a/lib/ansible/modules/cloud/openstack/os_user.py
+++ b/lib/ansible/modules/cloud/openstack/os_user.py
@@ -182,7 +182,7 @@ def main():
 
     argument_spec = openstack_full_argument_spec(
         name=dict(required=True),
-        password=dict(required=False, default=None),
+        password=dict(required=False, default=None, no_log=True),
         email=dict(required=False, default=None),
         default_project=dict(required=False, default=None),
         domain=dict(required=False, default=None),
diff --git a/lib/ansible/modules/cloud/ovirt/ovirt_host_pm.py b/lib/ansible/modules/cloud/ovirt/ovirt_host_pm.py
index f2cd4b72a5..284298006b 100644
--- a/lib/ansible/modules/cloud/ovirt/ovirt_host_pm.py
+++ b/lib/ansible/modules/cloud/ovirt/ovirt_host_pm.py
@@ -182,7 +182,7 @@ def main():
         name=dict(default=None, required=True, aliases=['host']),
         address=dict(default=None),
         username=dict(default=None),
-        password=dict(default=None),
+        password=dict(default=None, no_log=True),
         type=dict(default=None),
         port=dict(default=None, type='int'),
         slot=dict(default=None),
diff --git a/lib/ansible/modules/cloud/ovirt/ovirt_hosts.py b/lib/ansible/modules/cloud/ovirt/ovirt_hosts.py
index 62213da852..e4d569e0b5 100644
--- a/lib/ansible/modules/cloud/ovirt/ovirt_hosts.py
+++ b/lib/ansible/modules/cloud/ovirt/ovirt_hosts.py
@@ -316,7 +316,7 @@ def main():
         comment=dict(default=None),
         cluster=dict(default=None),
         address=dict(default=None),
-        password=dict(default=None),
+        password=dict(default=None, no_log=True),
         public_key=dict(default=False, type='bool', aliases=['ssh_public_key']),
         kdump_integration=dict(default=None, choices=['enabled', 'disabled']),
         spm_priority=dict(default=None, type='int'),
diff --git a/lib/ansible/modules/cloud/profitbricks/profitbricks.py b/lib/ansible/modules/cloud/profitbricks/profitbricks.py
index 0f046be8e0..849bbbb172 100644
--- a/lib/ansible/modules/cloud/profitbricks/profitbricks.py
+++ b/lib/ansible/modules/cloud/profitbricks/profitbricks.py
@@ -598,7 +598,7 @@ def main():
                             default='AMD_OPTERON'),
             volume_size=dict(type='int', default=10),
             disk_type=dict(choices=['HDD', 'SSD'], default='HDD'),
-            image_password=dict(default=None),
+            image_password=dict(default=None, no_log=True),
             ssh_keys=dict(type='list', default=[]),
             bus=dict(choices=['VIRTIO', 'IDE'], default='VIRTIO'),
             lan=dict(type='int', default=1),
@@ -606,7 +606,7 @@ def main():
             auto_increment=dict(type='bool', default=True),
             instance_ids=dict(type='list', default=[]),
             subscription_user=dict(),
-            subscription_password=dict(),
+            subscription_password=dict(no_log=True),
             location=dict(choices=LOCATIONS, default='us/las'),
             assign_public_ip=dict(type='bool', default=False),
             wait=dict(type='bool', default=True),
diff --git a/lib/ansible/modules/cloud/profitbricks/profitbricks_datacenter.py b/lib/ansible/modules/cloud/profitbricks/profitbricks_datacenter.py
index d062dcba7b..230ed3a2a5 100644
--- a/lib/ansible/modules/cloud/profitbricks/profitbricks_datacenter.py
+++ b/lib/ansible/modules/cloud/profitbricks/profitbricks_datacenter.py
@@ -212,7 +212,7 @@ def main():
             description=dict(),
             location=dict(choices=LOCATIONS, default='us/las'),
             subscription_user=dict(),
-            subscription_password=dict(),
+            subscription_password=dict(no_log=True),
             wait=dict(type='bool', default=True),
             wait_timeout=dict(default=600),
             state=dict(default='present'),
diff --git a/lib/ansible/modules/cloud/profitbricks/profitbricks_nic.py b/lib/ansible/modules/cloud/profitbricks/profitbricks_nic.py
index 9644a6c130..93382c07a1 100644
--- a/lib/ansible/modules/cloud/profitbricks/profitbricks_nic.py
+++ b/lib/ansible/modules/cloud/profitbricks/profitbricks_nic.py
@@ -241,7 +241,7 @@ def main():
             name=dict(default=str(uuid.uuid4()).replace('-','')[:10]),
             lan=dict(),
             subscription_user=dict(),
-            subscription_password=dict(),
+            subscription_password=dict(no_log=True),
             wait=dict(type='bool', default=True),
             wait_timeout=dict(type='int', default=600),
             state=dict(default='present'),
diff --git a/lib/ansible/modules/cloud/profitbricks/profitbricks_volume.py b/lib/ansible/modules/cloud/profitbricks/profitbricks_volume.py
index 5898a87177..9f58eba1f3 100644
--- a/lib/ansible/modules/cloud/profitbricks/profitbricks_volume.py
+++ b/lib/ansible/modules/cloud/profitbricks/profitbricks_volume.py
@@ -377,7 +377,7 @@ def main():
             size=dict(type='int', default=10),
             bus=dict(choices=['VIRTIO', 'IDE'], default='VIRTIO'),
             image=dict(),
-            image_password=dict(default=None),
+            image_password=dict(default=None, no_log=True),
             ssh_keys=dict(type='list', default=[]),
             disk_type=dict(choices=['HDD', 'SSD'], default='HDD'),
             licence_type=dict(default='UNKNOWN'),
@@ -385,7 +385,7 @@ def main():
             auto_increment=dict(type='bool', default=True),
             instance_ids=dict(type='list', default=[]),
             subscription_user=dict(),
-            subscription_password=dict(),
+            subscription_password=dict(no_log=True),
             wait=dict(type='bool', default=True),
             wait_timeout=dict(type='int', default=600),
             state=dict(default='present'),
diff --git a/lib/ansible/modules/cloud/profitbricks/profitbricks_volume_attachments.py b/lib/ansible/modules/cloud/profitbricks/profitbricks_volume_attachments.py
index 3e29b1dbb9..3a82e76689 100644
--- a/lib/ansible/modules/cloud/profitbricks/profitbricks_volume_attachments.py
+++ b/lib/ansible/modules/cloud/profitbricks/profitbricks_volume_attachments.py
@@ -219,7 +219,7 @@ def main():
             server=dict(),
             volume=dict(),
             subscription_user=dict(),
-            subscription_password=dict(),
+            subscription_password=dict(no_log=True),
             wait=dict(type='bool', default=True),
             wait_timeout=dict(type='int', default=600),
             state=dict(default='present'),
diff --git a/lib/ansible/modules/cloud/webfaction/webfaction_db.py b/lib/ansible/modules/cloud/webfaction/webfaction_db.py
index a6ce3762b3..a0373740be 100644
--- a/lib/ansible/modules/cloud/webfaction/webfaction_db.py
+++ b/lib/ansible/modules/cloud/webfaction/webfaction_db.py
@@ -112,7 +112,7 @@ def main():
             state = dict(required=False, choices=['present', 'absent'], default='present'),
             # You can specify an IP address or hostname.
             type = dict(required=True),
-            password = dict(required=False, default=None),
+            password = dict(required=False, default=None, no_log=True),
             login_name = dict(required=True),
             login_password = dict(required=True, no_log=True),
             machine = dict(required=False, default=False),
diff --git a/lib/ansible/modules/cloud/webfaction/webfaction_mailbox.py b/lib/ansible/modules/cloud/webfaction/webfaction_mailbox.py
index 7fbf523f4a..cda284855a 100644
--- a/lib/ansible/modules/cloud/webfaction/webfaction_mailbox.py
+++ b/lib/ansible/modules/cloud/webfaction/webfaction_mailbox.py
@@ -87,7 +87,7 @@ def main():
     module = AnsibleModule(
         argument_spec=dict(
             mailbox_name=dict(required=True),
-            mailbox_password=dict(required=True),
+            mailbox_password=dict(required=True, no_log=True),
             state=dict(required=False, choices=['present', 'absent'], default='present'),
             login_name=dict(required=True),
             login_password=dict(required=True, no_log=True),
diff --git a/lib/ansible/modules/database/misc/mongodb_user.py b/lib/ansible/modules/database/misc/mongodb_user.py
index a757737aa6..a6be32d1b8 100644
--- a/lib/ansible/modules/database/misc/mongodb_user.py
+++ b/lib/ansible/modules/database/misc/mongodb_user.py
@@ -352,7 +352,7 @@ def main():
             replica_set=dict(default=None),
             database=dict(required=True, aliases=['db']),
             name=dict(required=True, aliases=['user']),
-            password=dict(aliases=['pass']),
+            password=dict(aliases=['pass'], no_log=True),
             ssl=dict(default=False, type='bool'),
             roles=dict(default=None, type='list'),
             state=dict(default='present', choices=['absent', 'present']),
diff --git a/lib/ansible/modules/database/vertica/vertica_user.py b/lib/ansible/modules/database/vertica/vertica_user.py
index d357d2963d..8ffadb28ad 100644
--- a/lib/ansible/modules/database/vertica/vertica_user.py
+++ b/lib/ansible/modules/database/vertica/vertica_user.py
@@ -306,7 +306,7 @@ def main():
             user=dict(required=True, aliases=['name']),
             profile=dict(default=None),
             resource_pool=dict(default=None),
-            password=dict(default=None),
+            password=dict(default=None, no_log=True),
             expired=dict(type='bool', default=None),
             ldap=dict(type='bool', default=None),
             roles=dict(default=None, aliases=['role']),
diff --git a/lib/ansible/modules/messaging/rabbitmq_user.py b/lib/ansible/modules/messaging/rabbitmq_user.py
index 02afe298cb..8b51b3e6cf 100644
--- a/lib/ansible/modules/messaging/rabbitmq_user.py
+++ b/lib/ansible/modules/messaging/rabbitmq_user.py
@@ -238,7 +238,7 @@ class RabbitMqUser(object):
 def main():
     arg_spec = dict(
         user=dict(required=True, aliases=['username', 'name']),
-        password=dict(default=None),
+        password=dict(default=None, no_log=True),
         tags=dict(default=None),
         permissions=dict(default=list(), type='list'),
         vhost=dict(default='/'),
diff --git a/lib/ansible/modules/monitoring/pagerduty.py b/lib/ansible/modules/monitoring/pagerduty.py
index 3e8dd0eebd..e842b18490 100644
--- a/lib/ansible/modules/monitoring/pagerduty.py
+++ b/lib/ansible/modules/monitoring/pagerduty.py
@@ -262,8 +262,8 @@ def main():
             state=dict(required=True, choices=['running', 'started', 'ongoing', 'absent']),
             name=dict(required=True),
             user=dict(required=False),
-            passwd=dict(required=False),
-            token=dict(required=False),
+            passwd=dict(required=False, no_log=True),
+            token=dict(required=False, no_log=True),
             service=dict(required=False, type='list', aliases=["services"]),
             requester_id=dict(required=False),
             hours=dict(default='1', required=False),
diff --git a/lib/ansible/modules/monitoring/pingdom.py b/lib/ansible/modules/monitoring/pingdom.py
index 213f548a4d..8c3020fb11 100644
--- a/lib/ansible/modules/monitoring/pingdom.py
+++ b/lib/ansible/modules/monitoring/pingdom.py
@@ -128,7 +128,7 @@ def main():
             state=dict(required=True, choices=['running', 'paused', 'started', 'stopped']),
             checkid=dict(required=True),
             uid=dict(required=True),
-            passwd=dict(required=True),
+            passwd=dict(required=True, no_log=True),
             key=dict(required=True)
         )
     )
diff --git a/lib/ansible/modules/network/citrix/netscaler.py b/lib/ansible/modules/network/citrix/netscaler.py
index 30442ade78..0e5e88d111 100644
--- a/lib/ansible/modules/network/citrix/netscaler.py
+++ b/lib/ansible/modules/network/citrix/netscaler.py
@@ -179,7 +179,7 @@ def main():
             nsc_host = dict(required=True),
             nsc_protocol = dict(default='https'),
             user = dict(required=True),
-            password = dict(required=True),
+            password = dict(required=True, no_log=True),
             action = dict(default='enable', choices=['enable','disable']),
             name = dict(default=socket.gethostname()),
             type = dict(default='server', choices=['service', 'server']),
diff --git a/lib/ansible/modules/network/nxos/nxos_interface_ospf.py b/lib/ansible/modules/network/nxos/nxos_interface_ospf.py
index 0fbcb9e190..4642f7f321 100644
--- a/lib/ansible/modules/network/nxos/nxos_interface_ospf.py
+++ b/lib/ansible/modules/network/nxos/nxos_interface_ospf.py
@@ -589,13 +589,10 @@ def main():
         passive_interface=dict(required=False, type='bool'),
         message_digest=dict(required=False, type='bool'),
         message_digest_key_id=dict(required=False, type='str'),
-        message_digest_algorithm_type=dict(required=False, type='str',
-                                               choices=['md5']),
-        message_digest_encryption_type=dict(required=False, type='str',
-                                                choices=['cisco_type_7','3des']),
-        message_digest_password=dict(required=False, type='str'),
-        state=dict(choices=['present', 'absent'], default='present',
-                       required=False),
+        message_digest_algorithm_type=dict(required=False, type='str', choices=['md5']),
+        message_digest_encryption_type=dict(required=False, type='str', choices=['cisco_type_7','3des']),
+        message_digest_password=dict(required=False, type='str', no_log=True),
+        state=dict(choices=['present', 'absent'], default='present', required=False),
         include_defaults=dict(default=True),
         config=dict(),
         save=dict(type='bool', default=False)
diff --git a/lib/ansible/modules/network/panos/panos_dag.py b/lib/ansible/modules/network/panos/panos_dag.py
index 5a691d6001..fb298aafc0 100755
--- a/lib/ansible/modules/network/panos/panos_dag.py
+++ b/lib/ansible/modules/network/panos/panos_dag.py
@@ -119,7 +119,7 @@ def add_dag(xapi, dag_name, dag_filter):
 def main():
     argument_spec = dict(
         ip_address=dict(required=True),
-        password=dict(required=True),
+        password=dict(required=True, no_log=True),
         username=dict(default='admin'),
         dag_name=dict(required=True),
         dag_filter=dict(required=True),
diff --git a/lib/ansible/modules/packaging/os/rhn_channel.py b/lib/ansible/modules/packaging/os/rhn_channel.py
index 69993e33ef..4aad7b53a8 100644
--- a/lib/ansible/modules/packaging/os/rhn_channel.py
+++ b/lib/ansible/modules/packaging/os/rhn_channel.py
@@ -133,7 +133,7 @@ def main():
             sysname = dict(required=True),
             url = dict(required=True),
             user = dict(required=True),
-            password = dict(required=True, aliases=['pwd']),
+            password = dict(required=True, aliases=['pwd'], no_log=True),
         )
         #        supports_check_mode=True
     )
diff --git a/lib/ansible/modules/storage/netapp/netapp_e_volume.py b/lib/ansible/modules/storage/netapp/netapp_e_volume.py
index d3f7c3925c..04820a3008 100644
--- a/lib/ansible/modules/storage/netapp/netapp_e_volume.py
+++ b/lib/ansible/modules/storage/netapp/netapp_e_volume.py
@@ -233,7 +233,7 @@ class NetAppESeriesVolume(object):
             log_path=dict(type='str'),
             api_url=dict(type='str'),
             api_username=dict(type='str'),
-            api_password=dict(type='str'),
+            api_password=dict(type='str', no_log=True),
             validate_certs=dict(type='bool'),
         ))
 
diff --git a/lib/ansible/modules/system/open_iscsi.py b/lib/ansible/modules/system/open_iscsi.py
index b036d3d852..3545972d8b 100644
--- a/lib/ansible/modules/system/open_iscsi.py
+++ b/lib/ansible/modules/system/open_iscsi.py
@@ -276,7 +276,7 @@ def main():
             target = dict(required=False, aliases=['name', 'targetname']),
             node_auth = dict(required=False, default='CHAP'),
             node_user = dict(required=False),
-            node_pass = dict(required=False),
+            node_pass = dict(required=False, no_log=True),
 
             # actions
             login = dict(type='bool', aliases=['state']),
diff --git a/lib/ansible/modules/utilities/helper/_accelerate.py b/lib/ansible/modules/utilities/helper/_accelerate.py
index 9c8f3e80de..24e7cd33cd 100644
--- a/lib/ansible/modules/utilities/helper/_accelerate.py
+++ b/lib/ansible/modules/utilities/helper/_accelerate.py
@@ -663,7 +663,7 @@ def main():
             ipv6=dict(required=False, default=False, type='bool'),
             multi_key=dict(required=False, default=False, type='bool'),
             timeout=dict(required=False, default=300),
-            password=dict(required=True),
+            password=dict(required=True, no_log=True),
             minutes=dict(required=False, default=30),
             debug=dict(required=False, default=0, type='int')
         ),
diff --git a/lib/ansible/modules/web_infrastructure/ejabberd_user.py b/lib/ansible/modules/web_infrastructure/ejabberd_user.py
index b19df27768..1568c7b1de 100644
--- a/lib/ansible/modules/web_infrastructure/ejabberd_user.py
+++ b/lib/ansible/modules/web_infrastructure/ejabberd_user.py
@@ -185,7 +185,7 @@ def main():
         argument_spec = dict(
             host=dict(default=None, type='str'),
             username=dict(default=None, type='str'),
-            password=dict(default=None, type='str'),
+            password=dict(default=None, type='str', no_log=True),
             state=dict(default='present', choices=['present', 'absent']),
             logging=dict(default=False, type='bool')
         ),
diff --git a/lib/ansible/modules/web_infrastructure/jira.py b/lib/ansible/modules/web_infrastructure/jira.py
index a3b229d024..347a2dbd6b 100755
--- a/lib/ansible/modules/web_infrastructure/jira.py
+++ b/lib/ansible/modules/web_infrastructure/jira.py
@@ -377,7 +377,7 @@ def main():
             operation=dict(choices=['create', 'comment', 'edit', 'fetch', 'transition', 'link'],
                            aliases=['command'], required=True),
             username=dict(required=True),
-            password=dict(required=True),
+            password=dict(required=True, no_log=True),
             project=dict(),
             summary=dict(),
             description=dict(),
