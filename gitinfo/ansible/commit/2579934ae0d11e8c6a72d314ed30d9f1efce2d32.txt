commit 2579934ae0d11e8c6a72d314ed30d9f1efce2d32
Author: Chris Weber <chris.l.weber@gmail.com>
Date:   Sat Jun 4 16:31:54 2016 -0700

    Fixed exception handeling for Python 2.4 and python 3 compatablity (#2364)

diff --git a/lib/ansible/modules/extras/source_control/gitlab_group.py b/lib/ansible/modules/extras/source_control/gitlab_group.py
index 83bc77857f..1088690206 100644
--- a/lib/ansible/modules/extras/source_control/gitlab_group.py
+++ b/lib/ansible/modules/extras/source_control/gitlab_group.py
@@ -101,6 +101,8 @@ try:
 except:
     HAS_GITLAB_PACKAGE = False
 
+from ansible.module_utils.basic import *
+from ansible.module_utils.pycompat24 import get_exception
 
 class GitLabGroup(object):
     def __init__(self, module, git):
@@ -187,7 +189,8 @@ def main():
             git.login(user=login_user, password=login_password)
         else:
             git = gitlab.Gitlab(server_url, token=login_token, verify_ssl=verify_ssl)
-    except Exception, e:
+    except Exception:
+        e = get_exception()
         module.fail_json(msg="Failed to connect to Gitlab server: %s " % e)
 
     # Validate if group exists and take action based on "state"
@@ -209,7 +212,7 @@ def main():
                     module.exit_json(changed=True, result="Successfully created or updated the group %s" % group_name)
 
 
-from ansible.module_utils.basic import *
+
 
 if __name__ == '__main__':
     main()
diff --git a/lib/ansible/modules/extras/source_control/gitlab_project.py b/lib/ansible/modules/extras/source_control/gitlab_project.py
index 4f016bc123..302965fce2 100644
--- a/lib/ansible/modules/extras/source_control/gitlab_project.py
+++ b/lib/ansible/modules/extras/source_control/gitlab_project.py
@@ -163,6 +163,9 @@ try:
 except:
     HAS_GITLAB_PACKAGE = False
 
+from ansible.module_utils.basic import *
+from ansible.module_utils.pycompat24 import get_exception
+
 
 class GitLabProject(object):
     def __init__(self, module, git):
@@ -361,7 +364,8 @@ def main():
             git.login(user=login_user, password=login_password)
         else:
             git = gitlab.Gitlab(server_url, token=login_token, verify_ssl=verify_ssl)
-    except Exception, e:
+    except Exception:
+        e = get_exception()
         module.fail_json(msg="Failed to connect to Gitlab server: %s " % e)
 
     # Validate if project exists and take action based on "state"
@@ -391,7 +395,7 @@ def main():
             else:
                 module.exit_json(changed=False)
 
-from ansible.module_utils.basic import *
+
 
 if __name__ == '__main__':
     main()
diff --git a/lib/ansible/modules/extras/source_control/gitlab_user.py b/lib/ansible/modules/extras/source_control/gitlab_user.py
index 9f6fc0db2a..f7253db456 100644
--- a/lib/ansible/modules/extras/source_control/gitlab_user.py
+++ b/lib/ansible/modules/extras/source_control/gitlab_user.py
@@ -137,6 +137,9 @@ try:
 except:
     HAS_GITLAB_PACKAGE = False
 
+from ansible.module_utils.pycompat24 import get_exception
+from ansible.module_utils.basic import *
+
 
 class GitLabUser(object):
     def __init__(self, module, git):
@@ -325,7 +328,8 @@ def main():
             git.login(user=login_user, password=login_password)
         else:
             git = gitlab.Gitlab(server_url, token=login_token, verify_ssl=verify_ssl)
-    except Exception, e:
+    except Exception:
+        e = get_exception()
         module.fail_json(msg="Failed to connect to Gitlab server: %s " % e)
 
     # Validate if group exists and take action based on "state"
@@ -342,7 +346,6 @@ def main():
             user.createOrUpdateUser(user_name, user_username, user_password, user_email, user_sshkey_name, user_sshkey_file, group_name, access_level)
 
 
-from ansible.module_utils.basic import *
 
 if __name__ == '__main__':
     main()
