commit 31a4fe412fa6bae765f1681227bdbe523bea9aee
Author: Michael DeHaan <michael.dehaan@gmail.com>
Date:   Sun Sep 30 21:10:07 2012 -0400

    Complain when modules do not have documentation.

diff --git a/docs/man/man1/ansible.lineinfile.man b/docs/man/man1/ansible.lineinfile.man
index 7b9c12eaae..c1d3d00a6a 100644
--- a/docs/man/man1/ansible.lineinfile.man
+++ b/docs/man/man1/ansible.lineinfile.man
@@ -1,4 +1,4 @@
-.TH ANSIBLE.LINEINFILE 5 "2012-09-26" "unknown" "ANSIBLE MODULES"
+.TH ANSIBLE.LINEINFILE 5 "2012-09-30" "0.8" "ANSIBLE MODULES"
 ." generated from library/lineinfile
 .SH NAME
 lineinfile \- Ensure a particular line is in a file
@@ -8,35 +8,27 @@ lineinfile \- Ensure a particular line is in a file
 This module will search a file for a line, and ensure that it is present or absent. 
 .PP
 This is primarily useful when you want to change a single line in a file only. For other cases, see the \fIcopy\fR or \fItemplate\fR modules. 
-
 ." ------ OPTIONS
 ."
 ."
 .SH OPTIONS
-.IP name
-The file to modify 
-(required)
-.IP regexp
-The regular expression to look for in the file. For \fIstate=present\fR, the pattern to replace. For \fIstate=absent\fR, the pattern of the line to remove. 
-(required)
+
 .IP state
-Whether the line should be there or not. 
-." .SS Choices
+Whether the line should be there or not.
 .IR Choices :
-present,absent.
-.IP line
-Required for \fIstate=present\fR. The line to insert/replace into the file. Must match the value given to \fCregexp\fR. 
-
+present,absent. (default: present)
+.IP name
+The file to modify(required)
 .IP insertafter
-Used with \fIstate=present\fR. If specified, the line will be inserted after the specified regular expression. Two special values are available; \fCBOF\fR for inserting the line at the beginning of the file, and \fCEOF\fR for inserting the line at the end of the file. 
-." .SS Choices
+Used with \fIstate=present\fR. If specified, the line will be inserted after the specified regular expression. Two special values are available; \fCBOF\fR for inserting the line at the beginning of the file, and \fCEOF\fR for inserting the line at the end of the file.
 .IR Choices :
-BOF,EOF.
+BOF,EOF. (default: EOF)
+.IP regexp
+The regular expression to look for in the file. For \fIstate=present\fR, the pattern to replace. For \fIstate=absent\fR, the pattern of the line to remove.(required)
+.IP line
+Required for \fIstate=present\fR. The line to insert/replace into the file. Must match the value given to \fCregexp\fR.
 .IP backup
-Create a backup file including the timestamp information so you can get the original file back if you somehow clobbered it incorrectly. 
-
-
-."
+Create a backup file including the timestamp information so you can get the original file back if you somehow clobbered it incorrectly.."
 ."
 ." ------ NOTES
 ."
diff --git a/hacking/module_formatter.py b/hacking/module_formatter.py
index e89540f384..c7605e3ab3 100755
--- a/hacking/module_formatter.py
+++ b/hacking/module_formatter.py
@@ -30,6 +30,11 @@ import time
 import datetime
 import subprocess
 
+# modules that are ok that they do not have documentation strings
+BLACKLIST_MODULES = [
+   'async_wrapper'
+]
+
 MODULEDIR="/Users/jpm/Auto/pubgit/ansible/ansible/library"
 
 BOILERPLATE = '''
@@ -282,6 +287,11 @@ def main():
         print " processing module source ---> %s" % fname
 
         doc = get_docstring(fname, verbose=args.verbose)
+
+        if doc is None and module not in BLACKLIST_MODULES:
+            sys.stderr.write("*** ERROR: CORE MODULE MISSING DOCUMENTATION: %s ***\n" % module)
+            #sys.exit(1)
+
         if not doc is None:
 
             doc['filename']         = fname
