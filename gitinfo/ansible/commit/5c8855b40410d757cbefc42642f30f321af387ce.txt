commit 5c8855b40410d757cbefc42642f30f321af387ce
Author: The Magician <magic-modules@google.com>
Date:   Mon Aug 19 12:53:19 2019 -0700

    Bug fixes for GCP modules (#60720)

diff --git a/lib/ansible/modules/cloud/google/gcp_compute_disk_info.py b/lib/ansible/modules/cloud/google/gcp_compute_disk_info.py
index 0c4451f9ec..7e15d9480b 100644
--- a/lib/ansible/modules/cloud/google/gcp_compute_disk_info.py
+++ b/lib/ansible/modules/cloud/google/gcp_compute_disk_info.py
@@ -302,12 +302,7 @@ def main():
     if not module.params['scopes']:
         module.params['scopes'] = ['https://www.googleapis.com/auth/compute']
 
-    items = fetch_list(module, collection(module), query_options(module.params['filters']))
-    if items.get('items'):
-        items = items.get('items')
-    else:
-        items = []
-    return_value = {'resources': items}
+    return_value = {'resources': fetch_list(module, collection(module), query_options(module.params['filters']))}
     module.exit_json(**return_value)
 
 
@@ -317,8 +312,7 @@ def collection(module):
 
 def fetch_list(module, link, query):
     auth = GcpSession(module, 'compute')
-    response = auth.get(link, params={'filter': query})
-    return return_if_object(module, response)
+    return auth.list(link, return_if_object, array_name='items', params={'filter': query})
 
 
 def query_options(filters):
diff --git a/lib/ansible/modules/cloud/google/gcp_compute_firewall_info.py b/lib/ansible/modules/cloud/google/gcp_compute_firewall_info.py
index 2349358eb1..1013fa4144 100644
--- a/lib/ansible/modules/cloud/google/gcp_compute_firewall_info.py
+++ b/lib/ansible/modules/cloud/google/gcp_compute_firewall_info.py
@@ -258,12 +258,7 @@ def main():
     if not module.params['scopes']:
         module.params['scopes'] = ['https://www.googleapis.com/auth/compute']
 
-    items = fetch_list(module, collection(module), query_options(module.params['filters']))
-    if items.get('items'):
-        items = items.get('items')
-    else:
-        items = []
-    return_value = {'resources': items}
+    return_value = {'resources': fetch_list(module, collection(module), query_options(module.params['filters']))}
     module.exit_json(**return_value)
 
 
@@ -273,8 +268,7 @@ def collection(module):
 
 def fetch_list(module, link, query):
     auth = GcpSession(module, 'compute')
-    response = auth.get(link, params={'filter': query})
-    return return_if_object(module, response)
+    return auth.list(link, return_if_object, array_name='items', params={'filter': query})
 
 
 def query_options(filters):
diff --git a/lib/ansible/modules/cloud/google/gcp_compute_forwarding_rule_info.py b/lib/ansible/modules/cloud/google/gcp_compute_forwarding_rule_info.py
index 0ce70ff070..c4b9763fa3 100644
--- a/lib/ansible/modules/cloud/google/gcp_compute_forwarding_rule_info.py
+++ b/lib/ansible/modules/cloud/google/gcp_compute_forwarding_rule_info.py
@@ -260,12 +260,7 @@ def main():
     if not module.params['scopes']:
         module.params['scopes'] = ['https://www.googleapis.com/auth/compute']
 
-    items = fetch_list(module, collection(module), query_options(module.params['filters']))
-    if items.get('items'):
-        items = items.get('items')
-    else:
-        items = []
-    return_value = {'resources': items}
+    return_value = {'resources': fetch_list(module, collection(module), query_options(module.params['filters']))}
     module.exit_json(**return_value)
 
 
@@ -275,8 +270,7 @@ def collection(module):
 
 def fetch_list(module, link, query):
     auth = GcpSession(module, 'compute')
-    response = auth.get(link, params={'filter': query})
-    return return_if_object(module, response)
+    return auth.list(link, return_if_object, array_name='items', params={'filter': query})
 
 
 def query_options(filters):
diff --git a/lib/ansible/modules/cloud/google/gcp_compute_global_address_info.py b/lib/ansible/modules/cloud/google/gcp_compute_global_address_info.py
index 0dfd07d533..e6a115a2f5 100644
--- a/lib/ansible/modules/cloud/google/gcp_compute_global_address_info.py
+++ b/lib/ansible/modules/cloud/google/gcp_compute_global_address_info.py
@@ -159,12 +159,7 @@ def main():
     if not module.params['scopes']:
         module.params['scopes'] = ['https://www.googleapis.com/auth/compute']
 
-    items = fetch_list(module, collection(module), query_options(module.params['filters']))
-    if items.get('items'):
-        items = items.get('items')
-    else:
-        items = []
-    return_value = {'resources': items}
+    return_value = {'resources': fetch_list(module, collection(module), query_options(module.params['filters']))}
     module.exit_json(**return_value)
 
 
@@ -174,8 +169,7 @@ def collection(module):
 
 def fetch_list(module, link, query):
     auth = GcpSession(module, 'compute')
-    response = auth.get(link, params={'filter': query})
-    return return_if_object(module, response)
+    return auth.list(link, return_if_object, array_name='items', params={'filter': query})
 
 
 def query_options(filters):
diff --git a/lib/ansible/modules/cloud/google/gcp_compute_global_forwarding_rule_info.py b/lib/ansible/modules/cloud/google/gcp_compute_global_forwarding_rule_info.py
index de5b4cd42b..c10fc014b3 100644
--- a/lib/ansible/modules/cloud/google/gcp_compute_global_forwarding_rule_info.py
+++ b/lib/ansible/modules/cloud/google/gcp_compute_global_forwarding_rule_info.py
@@ -189,12 +189,7 @@ def main():
     if not module.params['scopes']:
         module.params['scopes'] = ['https://www.googleapis.com/auth/compute']
 
-    items = fetch_list(module, collection(module), query_options(module.params['filters']))
-    if items.get('items'):
-        items = items.get('items')
-    else:
-        items = []
-    return_value = {'resources': items}
+    return_value = {'resources': fetch_list(module, collection(module), query_options(module.params['filters']))}
     module.exit_json(**return_value)
 
 
@@ -204,8 +199,7 @@ def collection(module):
 
 def fetch_list(module, link, query):
     auth = GcpSession(module, 'compute')
-    response = auth.get(link, params={'filter': query})
-    return return_if_object(module, response)
+    return auth.list(link, return_if_object, array_name='items', params={'filter': query})
 
 
 def query_options(filters):
diff --git a/lib/ansible/modules/cloud/google/gcp_compute_health_check_info.py b/lib/ansible/modules/cloud/google/gcp_compute_health_check_info.py
index d2bae2ca26..3e54f6740f 100644
--- a/lib/ansible/modules/cloud/google/gcp_compute_health_check_info.py
+++ b/lib/ansible/modules/cloud/google/gcp_compute_health_check_info.py
@@ -369,12 +369,7 @@ def main():
     if not module.params['scopes']:
         module.params['scopes'] = ['https://www.googleapis.com/auth/compute']
 
-    items = fetch_list(module, collection(module), query_options(module.params['filters']))
-    if items.get('items'):
-        items = items.get('items')
-    else:
-        items = []
-    return_value = {'resources': items}
+    return_value = {'resources': fetch_list(module, collection(module), query_options(module.params['filters']))}
     module.exit_json(**return_value)
 
 
@@ -384,8 +379,7 @@ def collection(module):
 
 def fetch_list(module, link, query):
     auth = GcpSession(module, 'compute')
-    response = auth.get(link, params={'filter': query})
-    return return_if_object(module, response)
+    return auth.list(link, return_if_object, array_name='items', params={'filter': query})
 
 
 def query_options(filters):
diff --git a/lib/ansible/modules/cloud/google/gcp_compute_http_health_check_info.py b/lib/ansible/modules/cloud/google/gcp_compute_http_health_check_info.py
index 62bb56f314..528460553d 100644
--- a/lib/ansible/modules/cloud/google/gcp_compute_http_health_check_info.py
+++ b/lib/ansible/modules/cloud/google/gcp_compute_http_health_check_info.py
@@ -159,12 +159,7 @@ def main():
     if not module.params['scopes']:
         module.params['scopes'] = ['https://www.googleapis.com/auth/compute']
 
-    items = fetch_list(module, collection(module), query_options(module.params['filters']))
-    if items.get('items'):
-        items = items.get('items')
-    else:
-        items = []
-    return_value = {'resources': items}
+    return_value = {'resources': fetch_list(module, collection(module), query_options(module.params['filters']))}
     module.exit_json(**return_value)
 
 
@@ -174,8 +169,7 @@ def collection(module):
 
 def fetch_list(module, link, query):
     auth = GcpSession(module, 'compute')
-    response = auth.get(link, params={'filter': query})
-    return return_if_object(module, response)
+    return auth.list(link, return_if_object, array_name='items', params={'filter': query})
 
 
 def query_options(filters):
diff --git a/lib/ansible/modules/cloud/google/gcp_compute_https_health_check_info.py b/lib/ansible/modules/cloud/google/gcp_compute_https_health_check_info.py
index 7101935677..868b051ff2 100644
--- a/lib/ansible/modules/cloud/google/gcp_compute_https_health_check_info.py
+++ b/lib/ansible/modules/cloud/google/gcp_compute_https_health_check_info.py
@@ -159,12 +159,7 @@ def main():
     if not module.params['scopes']:
         module.params['scopes'] = ['https://www.googleapis.com/auth/compute']
 
-    items = fetch_list(module, collection(module), query_options(module.params['filters']))
-    if items.get('items'):
-        items = items.get('items')
-    else:
-        items = []
-    return_value = {'resources': items}
+    return_value = {'resources': fetch_list(module, collection(module), query_options(module.params['filters']))}
     module.exit_json(**return_value)
 
 
@@ -174,8 +169,7 @@ def collection(module):
 
 def fetch_list(module, link, query):
     auth = GcpSession(module, 'compute')
-    response = auth.get(link, params={'filter': query})
-    return return_if_object(module, response)
+    return auth.list(link, return_if_object, array_name='items', params={'filter': query})
 
 
 def query_options(filters):
diff --git a/lib/ansible/modules/cloud/google/gcp_compute_image_info.py b/lib/ansible/modules/cloud/google/gcp_compute_image_info.py
index b7a128e520..6d8c14b652 100644
--- a/lib/ansible/modules/cloud/google/gcp_compute_image_info.py
+++ b/lib/ansible/modules/cloud/google/gcp_compute_image_info.py
@@ -301,12 +301,7 @@ def main():
     if not module.params['scopes']:
         module.params['scopes'] = ['https://www.googleapis.com/auth/compute']
 
-    items = fetch_list(module, collection(module), query_options(module.params['filters']))
-    if items.get('items'):
-        items = items.get('items')
-    else:
-        items = []
-    return_value = {'resources': items}
+    return_value = {'resources': fetch_list(module, collection(module), query_options(module.params['filters']))}
     module.exit_json(**return_value)
 
 
@@ -316,8 +311,7 @@ def collection(module):
 
 def fetch_list(module, link, query):
     auth = GcpSession(module, 'compute')
-    response = auth.get(link, params={'filter': query})
-    return return_if_object(module, response)
+    return auth.list(link, return_if_object, array_name='items', params={'filter': query})
 
 
 def query_options(filters):
diff --git a/lib/ansible/modules/cloud/google/gcp_compute_instance.py b/lib/ansible/modules/cloud/google/gcp_compute_instance.py
index 5738a2a8d6..49f6ca8dfe 100644
--- a/lib/ansible/modules/cloud/google/gcp_compute_instance.py
+++ b/lib/ansible/modules/cloud/google/gcp_compute_instance.py
@@ -223,6 +223,15 @@ options:
         - Full or partial URL of the accelerator type resource to expose to this instance.
         required: false
         type: str
+  hostname:
+    description:
+    - The hostname of the instance to be created. The specified hostname must be RFC1035
+      compliant. If hostname is not specified, the default hostname is [INSTANCE_NAME].c.[PROJECT_ID].internal
+      when using the global DNS, and [INSTANCE_NAME].[ZONE].c.[PROJECT_ID].internal
+      when using zonal DNS.
+    required: false
+    type: str
+    version_added: 2.9
   labels:
     description:
     - Labels to apply to this instance. A list of key->value pairs.
@@ -707,6 +716,14 @@ guestAccelerators:
       - Full or partial URL of the accelerator type resource to expose to this instance.
       returned: success
       type: str
+hostname:
+  description:
+  - The hostname of the instance to be created. The specified hostname must be RFC1035
+    compliant. If hostname is not specified, the default hostname is [INSTANCE_NAME].c.[PROJECT_ID].internal
+    when using the global DNS, and [INSTANCE_NAME].[ZONE].c.[PROJECT_ID].internal
+    when using zonal DNS.
+  returned: success
+  type: str
 id:
   description:
   - The unique identifier for the resource. This identifier is defined by the server.
@@ -996,6 +1013,7 @@ def main():
                 ),
             ),
             guest_accelerators=dict(type='list', elements='dict', options=dict(accelerator_count=dict(type='int'), accelerator_type=dict(type='str'))),
+            hostname=dict(type='str'),
             labels=dict(type='dict'),
             metadata=dict(type='dict'),
             machine_type=dict(type='str'),
@@ -1114,6 +1132,7 @@ def resource_to_request(module):
         u'deletionProtection': module.params.get('deletion_protection'),
         u'disks': InstanceDisksArray(module.params.get('disks', []), module).to_request(),
         u'guestAccelerators': InstanceGuestacceleratorsArray(module.params.get('guest_accelerators', []), module).to_request(),
+        u'hostname': module.params.get('hostname'),
         u'labels': module.params.get('labels'),
         u'metadata': module.params.get('metadata'),
         u'machineType': machine_type_selflink(module.params.get('machine_type'), module.params),
@@ -1200,6 +1219,7 @@ def response_to_hash(module, response):
         u'deletionProtection': response.get(u'deletionProtection'),
         u'disks': InstanceDisksArray(module.params.get('disks', []), module).to_request(),
         u'guestAccelerators': InstanceGuestacceleratorsArray(response.get(u'guestAccelerators', []), module).from_response(),
+        u'hostname': response.get(u'hostname'),
         u'id': response.get(u'id'),
         u'labelFingerprint': response.get(u'labelFingerprint'),
         u'labels': response.get(u'labels'),
@@ -1250,7 +1270,11 @@ def wait_for_operation(module, response):
         return {}
     status = navigate_hash(op_result, ['status'])
     wait_done = wait_for_completion(status, op_result, module)
-    return decode_response(fetch_resource(module, navigate_hash(wait_done, ['targetLink']), 'compute#instance'), module)
+    response = fetch_resource(module, navigate_hash(wait_done, ['targetLink']), 'compute#instance')
+    if response:
+        return decode_response(response, module)
+    else:
+        return {}
 
 
 def wait_for_completion(status, op_result, module):
diff --git a/lib/ansible/modules/cloud/google/gcp_compute_instance_group_info.py b/lib/ansible/modules/cloud/google/gcp_compute_instance_group_info.py
index 493a579228..59d27856cd 100644
--- a/lib/ansible/modules/cloud/google/gcp_compute_instance_group_info.py
+++ b/lib/ansible/modules/cloud/google/gcp_compute_instance_group_info.py
@@ -168,12 +168,7 @@ def main():
     if not module.params['scopes']:
         module.params['scopes'] = ['https://www.googleapis.com/auth/compute']
 
-    items = fetch_list(module, collection(module), query_options(module.params['filters']))
-    if items.get('items'):
-        items = items.get('items')
-    else:
-        items = []
-    return_value = {'resources': items}
+    return_value = {'resources': fetch_list(module, collection(module), query_options(module.params['filters']))}
     module.exit_json(**return_value)
 
 
@@ -183,8 +178,7 @@ def collection(module):
 
 def fetch_list(module, link, query):
     auth = GcpSession(module, 'compute')
-    response = auth.get(link, params={'filter': query})
-    return return_if_object(module, response)
+    return auth.list(link, return_if_object, array_name='items', params={'filter': query})
 
 
 def query_options(filters):
diff --git a/lib/ansible/modules/cloud/google/gcp_compute_instance_group_manager_info.py b/lib/ansible/modules/cloud/google/gcp_compute_instance_group_manager_info.py
index ef7b9d45cc..aa872bd0bf 100644
--- a/lib/ansible/modules/cloud/google/gcp_compute_instance_group_manager_info.py
+++ b/lib/ansible/modules/cloud/google/gcp_compute_instance_group_manager_info.py
@@ -243,12 +243,7 @@ def main():
     if not module.params['scopes']:
         module.params['scopes'] = ['https://www.googleapis.com/auth/compute']
 
-    items = fetch_list(module, collection(module), query_options(module.params['filters']))
-    if items.get('items'):
-        items = items.get('items')
-    else:
-        items = []
-    return_value = {'resources': items}
+    return_value = {'resources': fetch_list(module, collection(module), query_options(module.params['filters']))}
     module.exit_json(**return_value)
 
 
@@ -258,8 +253,7 @@ def collection(module):
 
 def fetch_list(module, link, query):
     auth = GcpSession(module, 'compute')
-    response = auth.get(link, params={'filter': query})
-    return return_if_object(module, response)
+    return auth.list(link, return_if_object, array_name='items', params={'filter': query})
 
 
 def query_options(filters):
diff --git a/lib/ansible/modules/cloud/google/gcp_compute_instance_info.py b/lib/ansible/modules/cloud/google/gcp_compute_instance_info.py
index cee022f69b..988e67cd50 100644
--- a/lib/ansible/modules/cloud/google/gcp_compute_instance_info.py
+++ b/lib/ansible/modules/cloud/google/gcp_compute_instance_info.py
@@ -258,6 +258,14 @@ resources:
             instance.
           returned: success
           type: str
+    hostname:
+      description:
+      - The hostname of the instance to be created. The specified hostname must be
+        RFC1035 compliant. If hostname is not specified, the default hostname is [INSTANCE_NAME].c.[PROJECT_ID].internal
+        when using the global DNS, and [INSTANCE_NAME].[ZONE].c.[PROJECT_ID].internal
+        when using zonal DNS.
+      returned: success
+      type: str
     id:
       description:
       - The unique identifier for the resource. This identifier is defined by the
@@ -522,12 +530,7 @@ def main():
     if not module.params['scopes']:
         module.params['scopes'] = ['https://www.googleapis.com/auth/compute']
 
-    items = fetch_list(module, collection(module), query_options(module.params['filters']))
-    if items.get('items'):
-        items = items.get('items')
-    else:
-        items = []
-    return_value = {'resources': items}
+    return_value = {'resources': fetch_list(module, collection(module), query_options(module.params['filters']))}
     module.exit_json(**return_value)
 
 
@@ -537,8 +540,7 @@ def collection(module):
 
 def fetch_list(module, link, query):
     auth = GcpSession(module, 'compute')
-    response = auth.get(link, params={'filter': query})
-    return return_if_object(module, response)
+    return auth.list(link, return_if_object, array_name='items', params={'filter': query})
 
 
 def query_options(filters):
