commit 9291f48964b97d5347d25dab81575a1dbeaa3226
Author: The Magician <magic-modules@google.com>
Date:   Wed Feb 20 10:12:12 2019 -0800

    Bug fixes for GCP modules (#52618)

diff --git a/lib/ansible/modules/cloud/google/gcp_dns_resource_record_set.py b/lib/ansible/modules/cloud/google/gcp_dns_resource_record_set.py
index a6fccb7032..d729fdf7d5 100644
--- a/lib/ansible/modules/cloud/google/gcp_dns_resource_record_set.py
+++ b/lib/ansible/modules/cloud/google/gcp_dns_resource_record_set.py
@@ -71,6 +71,7 @@ options:
     - SOA
     - SPF
     - SRV
+    - TLSA
     - TXT
   ttl:
     description:
@@ -83,7 +84,6 @@ options:
   managed_zone:
     description:
     - Identifies the managed zone addressed by this request.
-    - Can be the managed zone name or id.
     - 'This field represents a link to a ManagedZone resource in GCP. It can be specified
       in two ways. First, you can place in the name of the resource here as a string
       Alternatively, you can add `register: name-of-resource` to a gcp_dns_managed_zone
@@ -143,7 +143,6 @@ target:
 managed_zone:
   description:
   - Identifies the managed zone addressed by this request.
-  - Can be the managed zone name or id.
   returned: success
   type: str
 '''
@@ -170,7 +169,7 @@ def main():
         argument_spec=dict(
             state=dict(default='present', choices=['present', 'absent'], type='str'),
             name=dict(required=True, type='str'),
-            type=dict(required=True, type='str', choices=['A', 'AAAA', 'CAA', 'CNAME', 'MX', 'NAPTR', 'NS', 'PTR', 'SOA', 'SPF', 'SRV', 'TXT']),
+            type=dict(required=True, type='str', choices=['A', 'AAAA', 'CAA', 'CNAME', 'MX', 'NAPTR', 'NS', 'PTR', 'SOA', 'SPF', 'SRV', 'TLSA', 'TXT']),
             ttl=dict(type='int'),
             target=dict(type='list', elements='str'),
             managed_zone=dict(required=True),
@@ -358,13 +357,12 @@ class SOAForwardable(object):
 
 
 def prefetch_soa_resource(module):
-    name = module.params['name'].split('.')[1:]
 
     resource = SOAForwardable(
         {
             'type': 'SOA',
             'managed_zone': module.params['managed_zone'],
-            'name': '.'.join(name),
+            'name': replace_resource_dict(module.params['managed_zone'], 'dnsName'),
             'project': module.params['project'],
             'scopes': module.params['scopes'],
             'service_account_file': module.params['service_account_file'],
diff --git a/lib/ansible/modules/cloud/google/gcp_dns_resource_record_set_facts.py b/lib/ansible/modules/cloud/google/gcp_dns_resource_record_set_facts.py
index f40930857a..c84edfec1e 100644
--- a/lib/ansible/modules/cloud/google/gcp_dns_resource_record_set_facts.py
+++ b/lib/ansible/modules/cloud/google/gcp_dns_resource_record_set_facts.py
@@ -43,7 +43,6 @@ options:
   managed_zone:
     description:
     - Identifies the managed zone addressed by this request.
-    - Can be the managed zone name or id.
     - 'This field represents a link to a ManagedZone resource in GCP. It can be specified
       in two ways. First, you can place in the name of the resource here as a string
       Alternatively, you can add `register: name-of-resource` to a gcp_dns_managed_zone
@@ -90,7 +89,6 @@ items:
     managed_zone:
       description:
       - Identifies the managed zone addressed by this request.
-      - Can be the managed zone name or id.
       returned: success
       type: str
 '''
diff --git a/lib/ansible/modules/cloud/google/gcp_pubsub_subscription.py b/lib/ansible/modules/cloud/google/gcp_pubsub_subscription.py
index 879c252d98..7d0ee1a603 100644
--- a/lib/ansible/modules/cloud/google/gcp_pubsub_subscription.py
+++ b/lib/ansible/modules/cloud/google/gcp_pubsub_subscription.py
@@ -51,7 +51,7 @@ options:
   name:
     description:
     - Name of the subscription.
-    required: false
+    required: true
   topic:
     description:
     - A reference to a Topic resource.
@@ -59,7 +59,12 @@ options:
       in two ways. First, you can place in the name of the resource here as a string
       Alternatively, you can add `register: name-of-resource` to a gcp_pubsub_topic
       task and then set this topic field to "{{ name-of-resource }}"'
+    required: true
+  labels:
+    description:
+    - A set of key/value label pairs to assign to this Subscription.
     required: false
+    version_added: 2.8
   push_config:
     description:
     - If push delivery is used with this subscription, this field is used to configure
@@ -71,6 +76,25 @@ options:
         description:
         - A URL locating the endpoint to which messages should be pushed.
         - For example, a Webhook endpoint might use "U(https://example.com/push".)
+        required: true
+      attributes:
+        description:
+        - Endpoint configuration attributes.
+        - Every endpoint has a set of API supported attributes that can be used to
+          control different aspects of the message delivery.
+        - The currently supported attribute is x-goog-version, which you can use to
+          change the format of the pushed message. This attribute indicates the version
+          of the data expected by the endpoint. This controls the shape of the pushed
+          message (i.e., its fields and metadata). The endpoint version is based on
+          the version of the Pub/Sub API.
+        - If not present during the subscriptions.create call, it will default to
+          the version of the API used to make such call. If not present during a subscriptions.modifyPushConfig
+          call, its value will not be changed. subscriptions.get calls will always
+          return a valid version, even if the subscription was created without this
+          attribute.
+        - 'The possible values for this attribute are: - v1beta1: uses the push format
+          defined in the v1beta1 Pub/Sub API.'
+        - "- v1 or v1beta2: uses the push format defined in the v1 Pub/Sub API."
         required: false
   ack_deadline_seconds:
     description:
@@ -90,6 +114,9 @@ options:
       redeliver the message.
     required: false
 extends_documentation_fragment: gcp
+notes:
+- 'API Reference: U(https://cloud.google.com/pubsub/docs/reference/rest/v1/projects.subscriptions)'
+- 'Managing Subscriptions: U(https://cloud.google.com/pubsub/docs/admin#managing_subscriptions)'
 '''
 
 EXAMPLES = '''
@@ -124,6 +151,11 @@ topic:
   - A reference to a Topic resource.
   returned: success
   type: str
+labels:
+  description:
+  - A set of key/value label pairs to assign to this Subscription.
+  returned: success
+  type: dict
 pushConfig:
   description:
   - If push delivery is used with this subscription, this field is used to configure
@@ -138,6 +170,25 @@ pushConfig:
       - For example, a Webhook endpoint might use "U(https://example.com/push".)
       returned: success
       type: str
+    attributes:
+      description:
+      - Endpoint configuration attributes.
+      - Every endpoint has a set of API supported attributes that can be used to control
+        different aspects of the message delivery.
+      - The currently supported attribute is x-goog-version, which you can use to
+        change the format of the pushed message. This attribute indicates the version
+        of the data expected by the endpoint. This controls the shape of the pushed
+        message (i.e., its fields and metadata). The endpoint version is based on
+        the version of the Pub/Sub API.
+      - If not present during the subscriptions.create call, it will default to the
+        version of the API used to make such call. If not present during a subscriptions.modifyPushConfig
+        call, its value will not be changed. subscriptions.get calls will always return
+        a valid version, even if the subscription was created without this attribute.
+      - 'The possible values for this attribute are: - v1beta1: uses the push format
+        defined in the v1beta1 Pub/Sub API.'
+      - "- v1 or v1beta2: uses the push format defined in the v1 Pub/Sub API."
+      returned: success
+      type: dict
 ackDeadlineSeconds:
   description:
   - This value is the maximum time after a subscriber receives a message before the
@@ -176,9 +227,10 @@ def main():
     module = GcpModule(
         argument_spec=dict(
             state=dict(default='present', choices=['present', 'absent'], type='str'),
-            name=dict(type='str'),
-            topic=dict(),
-            push_config=dict(type='dict', options=dict(push_endpoint=dict(type='str'))),
+            name=dict(required=True, type='str'),
+            topic=dict(required=True),
+            labels=dict(type='dict'),
+            push_config=dict(type='dict', options=dict(push_endpoint=dict(required=True, type='str'), attributes=dict(type='dict'))),
             ack_deadline_seconds=dict(type='int'),
         )
     )
@@ -194,7 +246,7 @@ def main():
     if fetch:
         if state == 'present':
             if is_different(module, fetch):
-                update(module, self_link(module))
+                update(module, self_link(module), fetch)
                 fetch = fetch_resource(module, self_link(module))
                 changed = True
         else:
@@ -218,8 +270,23 @@ def create(module, link):
     return return_if_object(module, auth.put(link, resource_to_request(module)))
 
 
-def update(module, link):
-    module.fail_json(msg="Subscription cannot be edited")
+def update(module, link, fetch):
+    auth = GcpSession(module, 'pubsub')
+    params = {'updateMask': updateMask(resource_to_request(module), response_to_hash(module, fetch))}
+    request = resource_to_request(module)
+    del request['name']
+    return return_if_object(module, auth.patch(link, request, params=params))
+
+
+def updateMask(request, response):
+    update_mask = []
+    if request.get('labels') != response.get('labels'):
+        update_mask.append('labels')
+    if request.get('pushConfig') != response.get('pushConfig'):
+        update_mask.append('pushConfig')
+    if request.get('ackDeadlineSeconds') != response.get('ackDeadlineSeconds'):
+        update_mask.append('ackDeadlineSeconds')
+    return ','.join(update_mask)
 
 
 def delete(module, link):
@@ -231,6 +298,7 @@ def resource_to_request(module):
     request = {
         u'name': module.params.get('name'),
         u'topic': replace_resource_dict(module.params.get(u'topic', {}), 'name'),
+        u'labels': module.params.get('labels'),
         u'pushConfig': SubscriptionPushconfig(module.params.get('push_config', {}), module).to_request(),
         u'ackDeadlineSeconds': module.params.get('ack_deadline_seconds'),
     }
@@ -302,8 +370,9 @@ def is_different(module, response):
 # This is for doing comparisons with Ansible's current parameters.
 def response_to_hash(module, response):
     return {
-        u'name': response.get(u'name'),
-        u'topic': response.get(u'topic'),
+        u'name': module.params.get('name'),
+        u'topic': replace_resource_dict(module.params.get(u'topic', {}), 'name'),
+        u'labels': response.get(u'labels'),
         u'pushConfig': SubscriptionPushconfig(response.get(u'pushConfig', {}), module).from_response(),
         u'ackDeadlineSeconds': response.get(u'ackDeadlineSeconds'),
     }
@@ -335,10 +404,10 @@ class SubscriptionPushconfig(object):
             self.request = {}
 
     def to_request(self):
-        return remove_nones_from_dict({u'pushEndpoint': self.request.get('push_endpoint')})
+        return remove_nones_from_dict({u'pushEndpoint': self.request.get('push_endpoint'), u'attributes': self.request.get('attributes')})
 
     def from_response(self):
-        return remove_nones_from_dict({u'pushEndpoint': self.request.get(u'pushEndpoint')})
+        return remove_nones_from_dict({u'pushEndpoint': self.request.get(u'pushEndpoint'), u'attributes': self.request.get(u'attributes')})
 
 
 if __name__ == '__main__':
diff --git a/lib/ansible/modules/cloud/google/gcp_pubsub_subscription_facts.py b/lib/ansible/modules/cloud/google/gcp_pubsub_subscription_facts.py
index 4507005248..5917598276 100644
--- a/lib/ansible/modules/cloud/google/gcp_pubsub_subscription_facts.py
+++ b/lib/ansible/modules/cloud/google/gcp_pubsub_subscription_facts.py
@@ -67,6 +67,11 @@ items:
       - A reference to a Topic resource.
       returned: success
       type: str
+    labels:
+      description:
+      - A set of key/value label pairs to assign to this Subscription.
+      returned: success
+      type: dict
     pushConfig:
       description:
       - If push delivery is used with this subscription, this field is used to configure
@@ -81,6 +86,26 @@ items:
           - For example, a Webhook endpoint might use "U(https://example.com/push".)
           returned: success
           type: str
+        attributes:
+          description:
+          - Endpoint configuration attributes.
+          - Every endpoint has a set of API supported attributes that can be used
+            to control different aspects of the message delivery.
+          - The currently supported attribute is x-goog-version, which you can use
+            to change the format of the pushed message. This attribute indicates the
+            version of the data expected by the endpoint. This controls the shape
+            of the pushed message (i.e., its fields and metadata). The endpoint version
+            is based on the version of the Pub/Sub API.
+          - If not present during the subscriptions.create call, it will default to
+            the version of the API used to make such call. If not present during a
+            subscriptions.modifyPushConfig call, its value will not be changed. subscriptions.get
+            calls will always return a valid version, even if the subscription was
+            created without this attribute.
+          - 'The possible values for this attribute are: - v1beta1: uses the push
+            format defined in the v1beta1 Pub/Sub API.'
+          - "- v1 or v1beta2: uses the push format defined in the v1 Pub/Sub API."
+          returned: success
+          type: dict
     ackDeadlineSeconds:
       description:
       - This value is the maximum time after a subscriber receives a message before
diff --git a/lib/ansible/modules/cloud/google/gcp_pubsub_topic.py b/lib/ansible/modules/cloud/google/gcp_pubsub_topic.py
index 55380c7eae..3c6f4b0eaf 100644
--- a/lib/ansible/modules/cloud/google/gcp_pubsub_topic.py
+++ b/lib/ansible/modules/cloud/google/gcp_pubsub_topic.py
@@ -50,8 +50,16 @@ options:
   name:
     description:
     - Name of the topic.
+    required: true
+  labels:
+    description:
+    - A set of key/value label pairs to assign to this Topic.
     required: false
+    version_added: 2.8
 extends_documentation_fragment: gcp
+notes:
+- 'API Reference: U(https://cloud.google.com/pubsub/docs/reference/rest/v1/projects.topics)'
+- 'Managing Topics: U(https://cloud.google.com/pubsub/docs/admin#managing_topics)'
 '''
 
 EXAMPLES = '''
@@ -70,6 +78,11 @@ name:
   - Name of the topic.
   returned: success
   type: str
+labels:
+  description:
+  - A set of key/value label pairs to assign to this Topic.
+  returned: success
+  type: dict
 '''
 
 ################################################################################
@@ -87,7 +100,11 @@ import json
 def main():
     """Main function"""
 
-    module = GcpModule(argument_spec=dict(state=dict(default='present', choices=['present', 'absent'], type='str'), name=dict(type='str')))
+    module = GcpModule(
+        argument_spec=dict(
+            state=dict(default='present', choices=['present', 'absent'], type='str'), name=dict(required=True, type='str'), labels=dict(type='dict')
+        )
+    )
 
     if not module.params['scopes']:
         module.params['scopes'] = ['https://www.googleapis.com/auth/pubsub']
@@ -125,8 +142,7 @@ def create(module, link):
 
 
 def update(module, link):
-    auth = GcpSession(module, 'pubsub')
-    return return_if_object(module, auth.put(link, resource_to_request(module)))
+    module.fail_json(msg="Topic cannot be edited")
 
 
 def delete(module, link):
@@ -135,7 +151,7 @@ def delete(module, link):
 
 
 def resource_to_request(module):
-    request = {u'name': module.params.get('name')}
+    request = {u'name': module.params.get('name'), u'labels': module.params.get('labels')}
     request = encode_request(request, module)
     return_vals = {}
     for k, v in request.items():
@@ -203,7 +219,7 @@ def is_different(module, response):
 # Remove unnecessary properties from the response.
 # This is for doing comparisons with Ansible's current parameters.
 def response_to_hash(module, response):
-    return {u'name': response.get(u'name')}
+    return {u'name': response.get(u'name'), u'labels': response.get(u'labels')}
 
 
 def decode_request(response, module):
diff --git a/lib/ansible/modules/cloud/google/gcp_pubsub_topic_facts.py b/lib/ansible/modules/cloud/google/gcp_pubsub_topic_facts.py
index 9d40382281..0cbc7469d1 100644
--- a/lib/ansible/modules/cloud/google/gcp_pubsub_topic_facts.py
+++ b/lib/ansible/modules/cloud/google/gcp_pubsub_topic_facts.py
@@ -62,6 +62,11 @@ items:
       - Name of the topic.
       returned: success
       type: str
+    labels:
+      description:
+      - A set of key/value label pairs to assign to this Topic.
+      returned: success
+      type: dict
 '''
 
 ################################################################################
