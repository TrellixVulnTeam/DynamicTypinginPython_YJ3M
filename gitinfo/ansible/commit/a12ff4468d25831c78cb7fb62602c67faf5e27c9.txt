commit a12ff4468d25831c78cb7fb62602c67faf5e27c9
Author: Jacob McGill <jacob@networktocode.com>
Date:   Fri Aug 25 02:36:34 2017 -0400

    ACI SPAN Dest Group: Update module to use new URL Method (#28643)

diff --git a/lib/ansible/modules/network/aci/aci_tenant_span_dst_group.py b/lib/ansible/modules/network/aci/aci_tenant_span_dst_group.py
index d7d67c0c50..57ab7de9d0 100644
--- a/lib/ansible/modules/network/aci/aci_tenant_span_dst_group.py
+++ b/lib/ansible/modules/network/aci/aci_tenant_span_dst_group.py
@@ -75,7 +75,7 @@ def main():
     argument_spec = aci_argument_spec
     argument_spec.update(
         dst_group=dict(type='str', required=False, aliases=['name']),  # Not required for querying all objects
-        tenant=dict(type='str', required=True, aliases=['tenant_name']),  # Not required for querying all objects
+        tenant=dict(type='str', required=False, aliases=['tenant_name']),  # Not required for querying all objects
         description=dict(type='str', aliases=['descr']),
         state=dict(type='str', default='present', choices=['absent', 'present', 'query']),
         method=dict(type='str', choices=['delete', 'get', 'post'], aliases=['action'], removed_in_version='2.6'),  # Deprecated starting from v2.6
@@ -84,31 +84,32 @@ def main():
     module = AnsibleModule(
         argument_spec=argument_spec,
         supports_check_mode=True,
+        required_if=[
+            ['state', 'absent', ['dst_group', 'tenant']],
+            ['state', 'present', ['dst_group', 'tenant']],
+        ],
     )
 
     dst_group = module.params['dst_group']
-    # tenant = module.params['tenant']
     description = module.params['description']
     state = module.params['state']
 
-    aci = ACIModule(module)
-
-    # TODO: This logic could be cleaner.
-    if dst_group is not None:
-        path = 'api/mo/uni/tn-%(tenant)s/destgrp-%(dst_group)s.json' % module.params
-    elif state == 'query':
-        # Query all contracts
-        path = 'api/node/class/spanDestGrp.json'
-    else:
-        module.fail_json(msg="Parameter 'dst_group' is required for state 'absent' or 'present'")
-
-    aci.result['url'] = '%(protocol)s://%(hostname)s/' % aci.params + path
+    # Add tenant_span_dst_grp to module.params for URL building
+    module.params['tenant_span_dst_grp'] = dst_group
 
+    aci = ACIModule(module)
+    aci.construct_url(root_class='tenant', subclass_1='tenant_span_dst_grp')
     aci.get_existing()
 
     if state == 'present':
         # Filter out module parameters with null values
-        aci.payload(aci_class='spanDestGrp', class_config=dict(name=dst_group, descr=description))
+        aci.payload(
+            aci_class='spanDestGrp',
+            class_config=dict(
+                name=dst_group,
+                descr=description,
+            ),
+        )
 
         # Generate config diff which will be used as POST request body
         aci.get_diff(aci_class='spanDestGrp')
@@ -119,6 +120,9 @@ def main():
     elif state == 'absent':
         aci.delete_config()
 
+    # Remove tenant_span_dst_grp that was used to build URL from module.params
+    module.params.pop('tenant_span_dst_grp')
+
     module.exit_json(**aci.result)
 
 
