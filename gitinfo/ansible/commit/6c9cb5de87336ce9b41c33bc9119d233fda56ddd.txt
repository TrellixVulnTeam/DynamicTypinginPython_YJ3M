commit 6c9cb5de87336ce9b41c33bc9119d233fda56ddd
Author: Adam Morris <Adam.Morris@providence.org>
Date:   Tue May 27 10:54:14 2014 -0700

    Update test_strategies.rst
    
    Changed unit tests to unit test for the singular playbook...

diff --git a/docsite/rst/test_strategies.rst b/docsite/rst/test_strategies.rst
index 322ebd0792..6d0b485de8 100644
--- a/docsite/rst/test_strategies.rst
+++ b/docsite/rst/test_strategies.rst
@@ -240,7 +240,7 @@ as part of a Continous Integration/Continous Delivery pipeline, as is covered in
 The focus should not be on infrastructure testing, but on application testing, so we strongly encourage getting together with your
 QA team and ask what sort of tests would make sense to run every time you deploy development VMs, and which sort of tests they would like
 to run against the stage environment on every deploy.  Obviously at the development stage, unit tests are great too.  But don't unit
-tests your playbook.  Ansible describes states of resources declaratively, so you don't have to.  If there are cases where you want
+test your playbook.  Ansible describes states of resources declaratively, so you don't have to.  If there are cases where you want
 to be sure of something though, that's great, and things like stat/assert are great go-to modules for that purpose.
 
 In all, testing is a very organizational and site-specific thing.  Everybody should be doing it, but what makes the most sense for your
