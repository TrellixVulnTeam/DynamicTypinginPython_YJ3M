commit b69e5c55f4c506411a2201f5cd34b4eebfc856ae
Author: Nathaniel Case <ncase@redhat.com>
Date:   Thu Jun 4 15:42:43 2020 -0400

    Only show one deprecation warning if version and date are both defined. (#69808)
    
    This prefers date to version on the basis that date will have been added
    in 2.10, and version retained for 2.9 compatibility

diff --git a/lib/ansible/module_utils/common/parameters.py b/lib/ansible/module_utils/common/parameters.py
index 7a6a304b38..b66d956f52 100644
--- a/lib/ansible/module_utils/common/parameters.py
+++ b/lib/ansible/module_utils/common/parameters.py
@@ -137,15 +137,15 @@ def list_deprecations(argument_spec, params, prefix=''):
                 sub_prefix = '%s["%s"]' % (prefix, arg_name)
             else:
                 sub_prefix = arg_name
-            if arg_opts.get('removed_in_version') is not None:
+            if arg_opts.get('removed_at_date') is not None:
                 deprecations.append({
                     'msg': "Param '%s' is deprecated. See the module docs for more information" % sub_prefix,
-                    'version': arg_opts.get('removed_in_version')
+                    'date': arg_opts.get('removed_at_date')
                 })
-            if arg_opts.get('removed_at_date') is not None:
+            elif arg_opts.get('removed_in_version') is not None:
                 deprecations.append({
                     'msg': "Param '%s' is deprecated. See the module docs for more information" % sub_prefix,
-                    'date': arg_opts.get('removed_at_date')
+                    'version': arg_opts.get('removed_in_version')
                 })
             # Check sub-argument spec
             sub_argument_spec = arg_opts.get('options')
