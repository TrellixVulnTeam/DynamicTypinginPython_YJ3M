commit c3076b84788f78a075764e4d9e8fb28fef5db60c
Author: Brian Coca <bcoca@ansible.com>
Date:   Fri Mar 20 16:54:22 2015 -0400

    added module returnval documentation to web docs

diff --git a/hacking/module_formatter.py b/hacking/module_formatter.py
index 6d595c634d..c3aca94949 100755
--- a/hacking/module_formatter.py
+++ b/hacking/module_formatter.py
@@ -289,7 +289,10 @@ def process_module(module, options, env, template, outputname, module_map, alias
     doc['now_date']         = datetime.date.today().strftime('%Y-%m-%d')
     doc['ansible_version']  = options.ansible_version
     doc['plainexamples']    = examples  #plain text
-    doc['returndocs']       = returndocs
+    if returndocs:
+        doc['returndocs']       = yaml.safe_load(returndocs)
+    else:
+        doc['returndocs']       = None
 
     # here is where we build the table of contents...
 
diff --git a/hacking/templates/rst.j2 b/hacking/templates/rst.j2
index 6d3c21f424..6873c3fea5 100644
--- a/hacking/templates/rst.j2
+++ b/hacking/templates/rst.j2
@@ -111,18 +111,57 @@ Examples
 Return Values
 -------------
 
-Common return values are documented here ::doc::`common_return_values`, the following are the fields unique to this module:
+Common return values are documented here :doc:`common_return_values`, the following are the fields unique to this module:
 
 .. raw:: html
 
-    <p>
-    <pre>
-    @{ returndocs }@
-    </pre>
-    </p>
+    <table border=1 cellpadding=4>
+    <tr>
+    <th class="head">name</th>
+    <th class="head">despcription</th>
+    <th class="head">returned</th>
+    <th class="head">type</th>
+    <th class="head">sample</th>
+    </tr>
 
-::
+    {% for entry in returndocs %}
+    <tr>
+        <td> @{ entry }@ </td>
+        <td> @{ returndocs[entry].description }@ </td>
+        <td align=center> @{ returndocs[entry].returned }@ </td>
+        <td align=center> @{ returndocs[entry].type }@ </td>
+        <td align=center> @{ returndocs[entry].sample}@ </td>
+    </tr>
+    {% if returndocs[entry].type == 'dictionary' %}
+    <tr><td>contains: </td>
+    <td colspan=4>
+        <table border=1 cellpadding=2>
+        <tr>
+        <th class="head">name</th>
+        <th class="head">despcription</th>
+        <th class="head">returned</th>
+        <th class="head">type</th>
+        <th class="head">sample</th>
+        </tr>
+
+        {% for sub in returndocs[entry].contains %}
+        <tr>
+        <td> @{ sub }@ </td>
+        <td> @{ returndocs[entry].contains[sub].description }@ </td>
+        <td align=center> @{ returndocs[entry].contains[sub].returned }@ </td>
+        <td align=center> @{ returndocs[entry].contains[sub].type }@ </td>
+        <td align=center> @{ returndocs[entry].contains[sub].sample}@ </td>
+        </tr>
+        {% endfor %}
+
+        </table>
+    </td></tr>
 
+    {% endif %}
+    {% endfor %}
+
+    </table>
+    </br></br>
 {% endif %}
 
 {% if notes %}
