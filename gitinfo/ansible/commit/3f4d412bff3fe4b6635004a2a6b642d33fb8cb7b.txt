commit 3f4d412bff3fe4b6635004a2a6b642d33fb8cb7b
Author: Philip Misiowiec <philip@atlashealth.com>
Date:   Fri Sep 26 19:29:08 2014 -0700

    Ability to specify new SSD EBS option

diff --git a/lib/ansible/modules/cloud/amazon/ec2_vol.py b/lib/ansible/modules/cloud/amazon/ec2_vol.py
index f9523ba3ec..4e558c9301 100644
--- a/lib/ansible/modules/cloud/amazon/ec2_vol.py
+++ b/lib/ansible/modules/cloud/amazon/ec2_vol.py
@@ -48,6 +48,13 @@ options:
     required: false
     default: null
     aliases: []
+  volume_type:
+    description:
+      - Type of EBS volume; standard (magnetic), gp2 (SSD), io1 (Provisioned IOPS). "Standard" is the old EBS default
+        and continues to remain the Ansible default for backwards compatibility. 
+    required: false
+    default: standard
+    aliases: []
   iops:
     description:
       - the provisioned IOPs you want to associate with this volume (integer).
@@ -164,6 +171,14 @@ EXAMPLES = '''
 - ec2_vol:
     instance: i-XXXXXX
     state: list
+    
+# Create new volume using SSD storage
+- local_action: 
+    module: ec2_vol 
+    instance: XXXXXX 
+    volume_size: 50 
+    volume_type: gp2
+    device_name: /dev/xvdf
 '''
 
 import sys
@@ -239,12 +254,11 @@ def create_volume(module, ec2, zone):
     iops = module.params.get('iops')
     encrypted = module.params.get('encrypted')
     volume_size = module.params.get('volume_size')
+    volume_type = module.params.get('volume_type')
     snapshot = module.params.get('snapshot')
     # If custom iops is defined we use volume_type "io1" rather than the default of "standard"
     if iops:
         volume_type = 'io1'
-    else:
-        volume_type = 'standard'
 
     # If no instance supplied, try volume creation based on module parameters.
     if name or id:
@@ -324,6 +338,7 @@ def main():
             id = dict(),
             name = dict(),
             volume_size = dict(),
+            volume_type = dict(choices=['standard', 'gp2', 'io1'], default='standard'),
             iops = dict(),
             encrypted = dict(),
             device_name = dict(),
@@ -338,6 +353,7 @@ def main():
     name = module.params.get('name')
     instance = module.params.get('instance')
     volume_size = module.params.get('volume_size')
+    volume_type = module.params.get('volume_type')
     iops = module.params.get('iops')
     encrypted = module.params.get('encrypted')
     device_name = module.params.get('device_name')
@@ -411,7 +427,7 @@ def main():
         volume = create_volume(module, ec2, zone)
         if instance:
             attach_volume(module, ec2, volume, inst)
-        module.exit_json(volume_id=volume.id, device=device_name)
+        module.exit_json(volume_id=volume.id, device=device_name, volume_type=volume.type)
 
 # import module snippets
 from ansible.module_utils.basic import *
