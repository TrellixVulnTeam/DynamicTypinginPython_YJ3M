commit 8e0d98220479050898892bbbed9a3fbc6f25ca36
Author: Charles Paul <cpaul@ansible.com>
Date:   Tue Jan 12 11:00:22 2016 -0600

    use doc fragments

diff --git a/lib/ansible/modules/extras/cloud/vmware/vca_fw.py b/lib/ansible/modules/extras/cloud/vmware/vca_fw.py
index 2d5804f7a8..90500a977c 100644
--- a/lib/ansible/modules/extras/cloud/vmware/vca_fw.py
+++ b/lib/ansible/modules/extras/cloud/vmware/vca_fw.py
@@ -23,80 +23,13 @@ description:
 version_added: "2.0"
 author: Peter Sprygada (@privateip)
 options:
-    username:
-      version_added: "2.0"
-      description:
-        - The vca username or email address, if not set the environment variable VCA_USER is checked for the username.
-      required: false
-      default: None
-    password:
-      version_added: "2.0"
-      description:
-        - The vca password, if not set the environment variable VCA_PASS is checked for the password
-      required: false
-      default: None
-    org:
-      version_added: "2.0"
-      description:
-        - The org to login to for creating vapp, mostly set when the service_type is vdc.
-      required: false
-      default: None
-    instance_id:
-      description:
-        - The instance id in a vchs environment to be used for creating the vapp
-      required: false
-      default: None
-    host:
-      version_added: "2.0"
-      description:
-        - The authentication host to be used when service type  is vcd.
-      required: false
-      default: None
-    api_version:
-      version_added: "2.0"
-      description:
-        - The api version to be used with the vca
-      required: false
-      default: "5.7"
-    service_type:
-      version_added: "2.0"
-      description:
-        - The type of service we are authenticating against
-      required: false
-      default: vca
-      choices: [ "vca", "vchs", "vcd" ]
-    state:
-      version_added: "2.0"
-      description:
-        - if the object should be added or removed
-      required: false
-      default: present
-      choices: [ "present", "absent" ]
-    verify_certs:
-      version_added: "2.0"
-      description:
-        - If the certificates of the authentication is to be verified
-      required: false
-      default: True
-    vdc_name:
-      version_added: "2.0"
-      description:
-        - The name of the vdc where the gateway is located.
-      required: false
-      default: None
-    gateway_name:
-      version_added: "2.0"
-      description:
-        - The name of the gateway of the vdc where the rule should be added
-      required: false
-      default: gateway
     fw_rules:
       version_added: "2.0"
       description:
         - A list of firewall rules to be added to the gateway, Please see examples on valid entries
       required: True
       default: false
-
+extends_documentation_fragment: vca.documentation
 '''
 
 EXAMPLES = '''
diff --git a/lib/ansible/modules/extras/cloud/vmware/vca_nat.py b/lib/ansible/modules/extras/cloud/vmware/vca_nat.py
index 2a464673e5..b7516d5448 100644
--- a/lib/ansible/modules/extras/cloud/vmware/vca_nat.py
+++ b/lib/ansible/modules/extras/cloud/vmware/vca_nat.py
@@ -27,63 +27,6 @@ description:
 version_added: "2.0"
 author: Peter Sprygada (@privateip)
 options:
-    username:
-      description:
-        - The vca username or email address, if not set the environment variable VCA_USER is checked for the username.
-      required: false
-      default: None
-    password:
-      description:
-        - The vca password, if not set the environment variable VCA_PASS is checked for the password
-      required: false
-      default: None
-    org:
-      description:
-        - The org to login to for creating vapp, mostly set when the service_type is vdc.
-      required: false
-      default: None
-    instance_id:
-      description:
-        - The instance id in a vchs environment to be used for creating the vapp
-      required: false
-      default: None
-    host:
-      description:
-        - The authentication host to be used when service type  is vcd.
-      required: false
-      default: None
-    api_version:
-      description:
-        - The api version to be used with the vca
-      required: false
-      default: "5.7"
-    service_type:
-      description:
-        - The type of service we are authenticating against
-      required: false
-      default: vca
-      choices: [ "vca", "vchs", "vcd" ]
-    state:
-      description:
-        - if the object should be added or removed
-      required: false
-      default: present
-      choices: [ "present", "absent" ]
-    verify_certs:
-      description:
-        - If the certificates of the authentication is to be verified
-      required: false
-      default: True
-    vdc_name:
-      description:
-        - The name of the vdc where the gateway is located.
-      required: false
-      default: None
-    gateway_name:
-      description:
-        - The name of the gateway of the vdc where the rule should be added
-      required: false
-      default: gateway
     purge_rules:
       description:
         - If set to true, it will delete all rules in the gateway that are not given as paramter to this module.
@@ -94,6 +37,7 @@ options:
         - A list of rules to be added to the gateway, Please see examples on valid entries
       required: True
       default: false
+extends_documentation_fragment: vca.documentation
 '''
 
 EXAMPLES = '''
diff --git a/lib/ansible/modules/extras/cloud/vmware/vmware_cluster.py b/lib/ansible/modules/extras/cloud/vmware/vmware_cluster.py
index 72f29e7dfa..2b939adc8e 100644
--- a/lib/ansible/modules/extras/cloud/vmware/vmware_cluster.py
+++ b/lib/ansible/modules/extras/cloud/vmware/vmware_cluster.py
@@ -31,20 +31,6 @@ requirements:
     - Tested on ESXi 5.5
     - PyVmomi installed
 options:
-    hostname:
-        description:
-            - The hostname or IP address of the vSphere vCenter
-        required: True
-    username:
-        description:
-            - The username of the vSphere vCenter
-        required: True
-        aliases: ['user', 'admin']
-    password:
-        description:
-            - The password of the vSphere vCenter
-        required: True
-        aliases: ['pass', 'pwd']
     datacenter_name:
         description:
             - The name of the datacenter the cluster will be created in.
@@ -68,6 +54,7 @@ options:
             - If set to True will enable vSAN when the cluster is created.
         required: False
         default: False
+extends_documentation_fragment: vmware.documentation
 '''
 
 EXAMPLES = '''
diff --git a/lib/ansible/modules/extras/cloud/vmware/vmware_datacenter.py b/lib/ansible/modules/extras/cloud/vmware/vmware_datacenter.py
index b2083222ed..aa85782bbb 100644
--- a/lib/ansible/modules/extras/cloud/vmware/vmware_datacenter.py
+++ b/lib/ansible/modules/extras/cloud/vmware/vmware_datacenter.py
@@ -55,6 +55,7 @@ options:
             - If the datacenter should be present or absent
         choices: ['present', 'absent']
         required: True
+extends_documentation_fragment: vmware.documentation
 '''
 
 EXAMPLES = '''
diff --git a/lib/ansible/modules/extras/cloud/vmware/vmware_dns_config.py b/lib/ansible/modules/extras/cloud/vmware/vmware_dns_config.py
index b233ed610c..57eda23b7d 100644
--- a/lib/ansible/modules/extras/cloud/vmware/vmware_dns_config.py
+++ b/lib/ansible/modules/extras/cloud/vmware/vmware_dns_config.py
@@ -32,20 +32,6 @@ requirements:
     - "python >= 2.6"
     - PyVmomi
 options:
-    hostname:
-        description:
-            - The hostname or IP address of the vSphere vCenter API server
-        required: True
-    username:
-        description:
-            - The username of the vSphere vCenter
-        required: True
-        aliases: ['user', 'admin']
-    password:
-        description:
-            - The password of the vSphere vCenter
-        required: True
-        aliases: ['pass', 'pwd']
     change_hostname_to:
         description:
             - The hostname that an ESXi host should be changed to.
@@ -58,6 +44,7 @@ options:
         description:
             - The DNS servers that the host should be configured to use.
         required: True
+extends_documentation_fragment: vmware.documentation
 '''
 
 EXAMPLES = '''
diff --git a/lib/ansible/modules/extras/cloud/vmware/vmware_dvs_host.py b/lib/ansible/modules/extras/cloud/vmware/vmware_dvs_host.py
new file mode 100644
index 0000000000..9edab7916b
--- /dev/null
+++ b/lib/ansible/modules/extras/cloud/vmware/vmware_dvs_host.py
@@ -0,0 +1,268 @@
+#!/usr/bin/python
+# -*- coding: utf-8 -*-
+
+# (c) 2015, Joseph Callen <jcallen () csc.com>
+#
+# This file is part of Ansible
+#
+# Ansible is free software: you can redistribute it and/or modify
+# it under the terms of the GNU General Public License as published by
+# the Free Software Foundation, either version 3 of the License, or
+# (at your option) any later version.
+#
+# Ansible is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+# GNU General Public License for more details.
+#
+# You should have received a copy of the GNU General Public License
+# along with Ansible.  If not, see <http://www.gnu.org/licenses/>.
+
+DOCUMENTATION = '''
+---
+module: vmware_dvs_host
+short_description: Add or remove a host from distributed virtual switch
+description:
+    - Add or remove a host from distributed virtual switch
+version_added: 2.0
+author: "Joseph Callen (@jcpowermac)"
+notes:
+    - Tested on vSphere 5.5
+requirements:
+    - "python >= 2.6"
+    - PyVmomi
+options:
+    esxi_hostname:
+        description:
+            - The ESXi hostname
+        required: True
+    switch_name:
+        description:
+            - The name of the Distributed vSwitch
+        required: True
+    vmnics:
+        description:
+            - The ESXi hosts vmnics to use with the Distributed vSwitch
+        required: True
+    state:
+        description:
+            - If the host should be present or absent attached to the vSwitch
+        choices: ['present', 'absent']
+        required: True
+extends_documentation_fragment: vmware.documentation
+'''
+
+EXAMPLES = '''
+# Example vmware_dvs_host command from Ansible Playbooks
+- name: Add Host to dVS
+  local_action:
+    module: vmware_dvs_host
+    hostname: vcenter_ip_or_hostname
+    username: vcenter_username
+    password: vcenter_password
+    esxi_hostname: esxi_hostname_as_listed_in_vcenter
+    switch_name: dvSwitch
+    vmnics:
+        - vmnic0
+        - vmnic1
+    state: present
+'''
+
+try:
+    import collections
+    from pyVmomi import vim, vmodl
+    HAS_PYVMOMI = True
+except ImportError:
+    HAS_PYVMOMI = False
+
+
+def find_dvspg_by_name(dv_switch, portgroup_name):
+    portgroups = dv_switch.portgroup
+
+    for pg in portgroups:
+        if pg.name == portgroup_name:
+            return pg
+
+    return None
+
+
+def find_dvs_uplink_pg(dv_switch):
+    # There should only always be a single uplink port group on
+    # a distributed virtual switch
+
+    if len(dv_switch.config.uplinkPortgroup):
+        return dv_switch.config.uplinkPortgroup[0]
+    else:
+        return None
+
+
+# operation should be edit, add and remove
+def modify_dvs_host(dv_switch, host, operation, uplink_portgroup=None, vmnics=None):
+
+    spec = vim.DistributedVirtualSwitch.ConfigSpec()
+
+    spec.configVersion = dv_switch.config.configVersion
+    spec.host = [vim.dvs.HostMember.ConfigSpec()]
+    spec.host[0].operation = operation
+    spec.host[0].host = host
+
+    if operation in ("edit", "add"):
+        spec.host[0].backing = vim.dvs.HostMember.PnicBacking()
+        count = 0
+
+        for nic in vmnics:
+            spec.host[0].backing.pnicSpec.append(vim.dvs.HostMember.PnicSpec())
+            spec.host[0].backing.pnicSpec[count].pnicDevice = nic
+            spec.host[0].backing.pnicSpec[count].uplinkPortgroupKey = uplink_portgroup.key
+            count += 1
+
+    task = dv_switch.ReconfigureDvs_Task(spec)
+    changed, result = wait_for_task(task)
+    return changed, result
+
+
+def state_destroy_dvs_host(module):
+
+    operation = "remove"
+    host = module.params['host']
+    dv_switch = module.params['dv_switch']
+
+    changed = True
+    result = None
+
+    if not module.check_mode:
+        changed, result = modify_dvs_host(dv_switch, host, operation)
+    module.exit_json(changed=changed, result=str(result))
+
+
+def state_exit_unchanged(module):
+    module.exit_json(changed=False)
+
+
+def state_update_dvs_host(module):
+    dv_switch = module.params['dv_switch']
+    uplink_portgroup = module.params['uplink_portgroup']
+    vmnics = module.params['vmnics']
+    host = module.params['host']
+    operation = "edit"
+    changed = True
+    result = None
+
+    if not module.check_mode:
+        changed, result = modify_dvs_host(dv_switch, host, operation, uplink_portgroup, vmnics)
+    module.exit_json(changed=changed, result=str(result))
+
+
+def state_create_dvs_host(module):
+    dv_switch = module.params['dv_switch']
+    uplink_portgroup = module.params['uplink_portgroup']
+    vmnics = module.params['vmnics']
+    host = module.params['host']
+    operation = "add"
+    changed = True
+    result = None
+
+    if not module.check_mode:
+        changed, result = modify_dvs_host(dv_switch, host, operation, uplink_portgroup, vmnics)
+    module.exit_json(changed=changed, result=str(result))
+
+
+def find_host_attached_dvs(esxi_hostname, dv_switch):
+    for dvs_host_member in dv_switch.config.host:
+        if dvs_host_member.config.host.name == esxi_hostname:
+            return dvs_host_member.config.host
+
+    return None
+
+
+def check_uplinks(dv_switch, host, vmnics):
+    pnic_device = []
+    
+    for dvs_host_member in dv_switch.config.host:
+        if dvs_host_member.config.host == host:
+            for pnicSpec in dvs_host_member.config.backing.pnicSpec:
+                pnic_device.append(pnicSpec.pnicDevice)
+    
+    return collections.Counter(pnic_device) == collections.Counter(vmnics)
+
+
+def check_dvs_host_state(module):
+
+    switch_name = module.params['switch_name']
+    esxi_hostname = module.params['esxi_hostname']
+    vmnics = module.params['vmnics']
+
+    content = connect_to_api(module)
+    module.params['content'] = content
+
+    dv_switch = find_dvs_by_name(content, switch_name)
+
+    if dv_switch is None:
+        raise Exception("A distributed virtual switch %s does not exist" % switch_name)
+
+    uplink_portgroup = find_dvs_uplink_pg(dv_switch)
+
+    if uplink_portgroup is None:
+        raise Exception("An uplink portgroup does not exist on the distributed virtual switch %s" % switch_name)
+
+    module.params['dv_switch'] = dv_switch
+    module.params['uplink_portgroup'] = uplink_portgroup
+
+    host = find_host_attached_dvs(esxi_hostname, dv_switch)
+
+    if host is None:
+        # We still need the HostSystem object to add the host
+        # to the distributed vswitch
+        host = find_hostsystem_by_name(content, esxi_hostname)
+        if host is None:
+            module.fail_json(msg="The esxi_hostname %s does not exist in vCenter" % esxi_hostname)
+        module.params['host'] = host
+        return 'absent'
+    else:
+        module.params['host'] = host
+        if check_uplinks(dv_switch, host, vmnics):
+            return 'present'
+        else:
+            return 'update'
+
+
+def main():
+
+    argument_spec = vmware_argument_spec()
+    argument_spec.update(dict(esxi_hostname=dict(required=True, type='str'),
+                         switch_name=dict(required=True, type='str'),
+                         vmnics=dict(required=True, type='list'),
+                         state=dict(default='present', choices=['present', 'absent'], type='str')))
+
+    module = AnsibleModule(argument_spec=argument_spec, supports_check_mode=True)
+
+    if not HAS_PYVMOMI:
+        module.fail_json(msg='pyvmomi is required for this module')
+
+    try:
+
+        dvs_host_states = {
+            'absent': {
+                'present': state_destroy_dvs_host,
+                'absent': state_exit_unchanged,
+            },
+            'present': {
+                'update': state_update_dvs_host,
+                'present': state_exit_unchanged,
+                'absent': state_create_dvs_host,
+            }
+        }
+
+        dvs_host_states[module.params['state']][check_dvs_host_state(module)](module)
+    except vmodl.RuntimeFault as runtime_fault:
+        module.fail_json(msg=runtime_fault.msg)
+    except vmodl.MethodFault as method_fault:
+        module.fail_json(msg=method_fault.msg)
+    except Exception as e:
+        module.fail_json(msg=str(e))
+
+from ansible.module_utils.vmware import *
+from ansible.module_utils.basic import *
+
+if __name__ == '__main__':
+    main()
diff --git a/lib/ansible/modules/extras/cloud/vmware/vmware_dvs_portgroup.py b/lib/ansible/modules/extras/cloud/vmware/vmware_dvs_portgroup.py
index 265f9fd71e..8df629e240 100644
--- a/lib/ansible/modules/extras/cloud/vmware/vmware_dvs_portgroup.py
+++ b/lib/ansible/modules/extras/cloud/vmware/vmware_dvs_portgroup.py
@@ -32,20 +32,6 @@ requirements:
     - "python >= 2.6"
     - PyVmomi
 options:
-    hostname:
-        description:
-            - The hostname or IP address of the vSphere vCenter API server
-        required: True
-    username:
-        description:
-            - The username of the vSphere vCenter
-        required: True
-        aliases: ['user', 'admin']
-    password:
-        description:
-            - The password of the vSphere vCenter
-        required: True
-        aliases: ['pass', 'pwd']
     portgroup_name:
         description:
             - The name of the portgroup that is to be created or deleted
@@ -70,6 +56,7 @@ options:
             - 'earlyBinding'
             - 'lateBinding'
             - 'ephemeral'
+extends_documentation_fragment: vmware.documentation
 '''
 
 EXAMPLES = '''
diff --git a/lib/ansible/modules/extras/cloud/vmware/vmware_dvswitch.py b/lib/ansible/modules/extras/cloud/vmware/vmware_dvswitch.py
index 26212a06c5..4ebadd0c60 100644
--- a/lib/ansible/modules/extras/cloud/vmware/vmware_dvswitch.py
+++ b/lib/ansible/modules/extras/cloud/vmware/vmware_dvswitch.py
@@ -32,20 +32,6 @@ requirements:
     - "python >= 2.6"
     - PyVmomi
 options:
-    hostname:
-        description:
-            - The hostname or IP address of the vSphere vCenter API server
-        required: True
-    username:
-        description:
-            - The username of the vSphere vCenter
-        required: True
-        aliases: ['user', 'admin']
-    password:
-        description:
-            - The password of the vSphere vCenter
-        required: True
-        aliases: ['pass', 'pwd']
     datacenter_name:
         description:
             - The name of the datacenter that will contain the dvSwitch
@@ -85,6 +71,7 @@ options:
             - 'present'
             - 'absent'
         required: False
+extends_documentation_fragment: vmware.documentation
 '''
 EXAMPLES = '''
 - name: Create dvswitch
diff --git a/lib/ansible/modules/extras/cloud/vmware/vmware_host.py b/lib/ansible/modules/extras/cloud/vmware/vmware_host.py
index 162397a219..dba7ce9a11 100644
--- a/lib/ansible/modules/extras/cloud/vmware/vmware_host.py
+++ b/lib/ansible/modules/extras/cloud/vmware/vmware_host.py
@@ -32,20 +32,6 @@ requirements:
     - "python >= 2.6"
     - PyVmomi
 options:
-    hostname:
-        description:
-            - The hostname or IP address of the vSphere vCenter API server
-        required: True
-    username:
-        description:
-            - The username of the vSphere vCenter
-        required: True
-        aliases: ['user', 'admin']
-    password:
-        description:
-            - The password of the vSphere vCenter
-        required: True
-        aliases: ['pass', 'pwd']
     datacenter_name:
         description:
             - Name of the datacenter to add the host
@@ -74,6 +60,7 @@ options:
             - 'present'
             - 'absent'
         required: False
+extends_documentation_fragment: vmware.documentation
 '''
 
 EXAMPLES = '''
diff --git a/lib/ansible/modules/extras/cloud/vmware/vmware_migrate_vmk.py b/lib/ansible/modules/extras/cloud/vmware/vmware_migrate_vmk.py
index c658c71b68..a3f3db764c 100644
--- a/lib/ansible/modules/extras/cloud/vmware/vmware_migrate_vmk.py
+++ b/lib/ansible/modules/extras/cloud/vmware/vmware_migrate_vmk.py
@@ -32,20 +32,6 @@ requirements:
     - "python >= 2.6"
     - PyVmomi
 options:
-    hostname:
-        description:
-            - The hostname or IP address of the vSphere vCenter API server
-        required: True
-    username:
-        description:
-            - The username of the vSphere vCenter
-        required: True
-        aliases: ['user', 'admin']
-    password:
-        description:
-            - The password of the vSphere vCenter
-        required: True
-        aliases: ['pass', 'pwd']
     esxi_hostname:
         description:
             - ESXi hostname to be managed
@@ -70,6 +56,7 @@ options:
         description:
             - Portgroup name to migrate VMK interface to
         required: True
+extends_documentation_fragment: vmware.documentation
 '''
 
 EXAMPLES = '''
diff --git a/lib/ansible/modules/extras/cloud/vmware/vmware_portgroup.py b/lib/ansible/modules/extras/cloud/vmware/vmware_portgroup.py
index e354ded510..30e1e21261 100644
--- a/lib/ansible/modules/extras/cloud/vmware/vmware_portgroup.py
+++ b/lib/ansible/modules/extras/cloud/vmware/vmware_portgroup.py
@@ -32,20 +32,6 @@ requirements:
     - "python >= 2.6"
     - PyVmomi
 options:
-    hostname:
-        description:
-            - The hostname or IP address of the ESXi server
-        required: True
-    username:
-        description:
-            - The username of the ESXi server
-        required: True
-        aliases: ['user', 'admin']
-    password:
-        description:
-            - The password of the ESXi server
-        required: True
-        aliases: ['pass', 'pwd']
     switch_name:
         description:
             - vSwitch to modify
@@ -58,6 +44,7 @@ options:
         description:
             - VLAN ID to assign to portgroup
         required: True
+extends_documentation_fragment: vmware.documentation
 '''
 
 EXAMPLES = '''
diff --git a/lib/ansible/modules/extras/cloud/vmware/vmware_target_canonical_facts.py b/lib/ansible/modules/extras/cloud/vmware/vmware_target_canonical_facts.py
index 45c183822b..cbf9d3edaa 100644
--- a/lib/ansible/modules/extras/cloud/vmware/vmware_target_canonical_facts.py
+++ b/lib/ansible/modules/extras/cloud/vmware/vmware_target_canonical_facts.py
@@ -31,24 +31,11 @@ requirements:
     - Tested on vSphere 5.5
     - PyVmomi installed
 options:
-    hostname:
-        description:
-            - The hostname or IP address of the vSphere vCenter
-        required: True
-    username:
-        description:
-            - The username of the vSphere vCenter
-        required: True
-        aliases: ['user', 'admin']
-    password:
-        description:
-            - The password of the vSphere vCenter
-        required: True
-        aliases: ['pass', 'pwd']
     target_id:
         description:
             - The target id based on order of scsi device
         required: True
+extends_documentation_fragment: vmware.documentation
 '''
 
 EXAMPLES = '''
diff --git a/lib/ansible/modules/extras/cloud/vmware/vmware_vm_facts.py b/lib/ansible/modules/extras/cloud/vmware/vmware_vm_facts.py
index 3551477f24..6238184914 100644
--- a/lib/ansible/modules/extras/cloud/vmware/vmware_vm_facts.py
+++ b/lib/ansible/modules/extras/cloud/vmware/vmware_vm_facts.py
@@ -31,21 +31,7 @@ notes:
 requirements:
     - "python >= 2.6"
     - PyVmomi
-options:
-    hostname:
-        description:
-            - The hostname or IP address of the vSphere vCenter API server
-        required: True
-    username:
-        description:
-            - The username of the vSphere vCenter
-        required: True
-        aliases: ['user', 'admin']
-    password:
-        description:
-            - The password of the vSphere vCenter
-        required: True
-        aliases: ['pass', 'pwd']
+extends_documentation_fragment: vmware.documentation
 '''
 
 EXAMPLES = '''
diff --git a/lib/ansible/modules/extras/cloud/vmware/vmware_vm_shell.py b/lib/ansible/modules/extras/cloud/vmware/vmware_vm_shell.py
index c33e3e5c71..8c5752b3e3 100644
--- a/lib/ansible/modules/extras/cloud/vmware/vmware_vm_shell.py
+++ b/lib/ansible/modules/extras/cloud/vmware/vmware_vm_shell.py
@@ -33,20 +33,6 @@ requirements:
     - "python >= 2.6"
     - PyVmomi
 options:
-    hostname:
-        description:
-            - The hostname or IP address of the vSphere vCenter API server
-        required: True
-    username:
-        description:
-            - The username of the vSphere vCenter
-        required: True
-        aliases: ['user', 'admin']
-    password:
-        description:
-            - The password of the vSphere vCenter
-        required: True
-        aliases: ['pass', 'pwd']
     datacenter:
         description:
             - The datacenter hosting the VM
@@ -92,6 +78,7 @@ options:
             - The current working directory of the application from which it will be run
         required: False
         default: None
+extends_documentation_fragment: vmware.documentation
 '''
 
 EXAMPLES = '''
diff --git a/lib/ansible/modules/extras/cloud/vmware/vmware_vm_vss_dvs_migrate.py b/lib/ansible/modules/extras/cloud/vmware/vmware_vm_vss_dvs_migrate.py
index ff51f86ed0..8dbf059965 100644
--- a/lib/ansible/modules/extras/cloud/vmware/vmware_vm_vss_dvs_migrate.py
+++ b/lib/ansible/modules/extras/cloud/vmware/vmware_vm_vss_dvs_migrate.py
@@ -32,20 +32,6 @@ requirements:
     - "python >= 2.6"
     - PyVmomi
 options:
-    hostname:
-        description:
-            - The hostname or IP address of the vSphere vCenter API server
-        required: True
-    username:
-        description:
-            - The username of the vSphere vCenter
-        required: True
-        aliases: ['user', 'admin']
-    password:
-        description:
-            - The password of the vSphere vCenter
-        required: True
-        aliases: ['pass', 'pwd']
     vm_name:
         description:
             - Name of the virtual machine to migrate to a dvSwitch
@@ -54,6 +40,7 @@ options:
         description:
             - Name of the portgroup to migrate to the virtual machine to
         required: True
+extends_documentation_fragment: vmware.documentation
 '''
 
 EXAMPLES = '''
@@ -173,4 +160,4 @@ from ansible.module_utils.vmware import *
 from ansible.module_utils.basic import *
 
 if __name__ == '__main__':
-    main()
\ No newline at end of file
+    main()
diff --git a/lib/ansible/modules/extras/cloud/vmware/vmware_vmkernel.py b/lib/ansible/modules/extras/cloud/vmware/vmware_vmkernel.py
index 0221f68ad2..863a41226a 100644
--- a/lib/ansible/modules/extras/cloud/vmware/vmware_vmkernel.py
+++ b/lib/ansible/modules/extras/cloud/vmware/vmware_vmkernel.py
@@ -32,20 +32,6 @@ requirements:
     - "python >= 2.6"
     - PyVmomi
 options:
-    hostname:
-        description:
-            - The hostname or IP address of the ESXi Server
-        required: True
-    username:
-        description:
-            - The username of the ESXi Server
-        required: True
-        aliases: ['user', 'admin']
-    password:
-        description:
-            - The password of ESXi Server
-        required: True
-        aliases: ['pass', 'pwd']
     vswitch_name:
         description:
             - The name of the vswitch where to add the VMK interface
@@ -86,6 +72,7 @@ options:
         description:
             - Enable the VMK interface for Fault Tolerance traffic
         required: False
+extends_documentation_fragment: vmware.documentation
 '''
 
 EXAMPLES = '''
diff --git a/lib/ansible/modules/extras/cloud/vmware/vmware_vmkernel_ip_config.py b/lib/ansible/modules/extras/cloud/vmware/vmware_vmkernel_ip_config.py
index c07526f0ae..31c50e6c68 100644
--- a/lib/ansible/modules/extras/cloud/vmware/vmware_vmkernel_ip_config.py
+++ b/lib/ansible/modules/extras/cloud/vmware/vmware_vmkernel_ip_config.py
@@ -32,20 +32,6 @@ requirements:
     - "python >= 2.6"
     - PyVmomi
 options:
-    hostname:
-        description:
-            - The hostname or IP address of the ESXi server
-        required: True
-    username:
-        description:
-            - The username of the ESXi server
-        required: True
-        aliases: ['user', 'admin']
-    password:
-        description:
-            - The password of the ESXi server
-        required: True
-        aliases: ['pass', 'pwd']
     vmk_name:
         description:
             - VMkernel interface name
@@ -58,6 +44,7 @@ options:
         description:
             - Subnet Mask to assign to VMkernel interface
         required: True
+extends_documentation_fragment: vmware.documentation
 '''
 
 EXAMPLES = '''
diff --git a/lib/ansible/modules/extras/cloud/vmware/vmware_vsan_cluster.py b/lib/ansible/modules/extras/cloud/vmware/vmware_vsan_cluster.py
index b7b84d94c4..015386d906 100644
--- a/lib/ansible/modules/extras/cloud/vmware/vmware_vsan_cluster.py
+++ b/lib/ansible/modules/extras/cloud/vmware/vmware_vsan_cluster.py
@@ -32,24 +32,11 @@ requirements:
     - "python >= 2.6"
     - PyVmomi
 options:
-    hostname:
-        description:
-            - The hostname or IP address of the ESXi Server
-        required: True
-    username:
-        description:
-            - The username of the ESXi Server
-        required: True
-        aliases: ['user', 'admin']
-    password:
-        description:
-            - The password of ESXi Server
-        required: True
-        aliases: ['pass', 'pwd']
     cluster_uuid:
         description:
             - Desired cluster UUID
         required: False
+extends_documentation_fragment: vmware.documentation
 '''
 
 EXAMPLES = '''
diff --git a/lib/ansible/modules/extras/cloud/vmware/vmware_vswitch.py b/lib/ansible/modules/extras/cloud/vmware/vmware_vswitch.py
index d9ac55d236..d4ad8de7a3 100644
--- a/lib/ansible/modules/extras/cloud/vmware/vmware_vswitch.py
+++ b/lib/ansible/modules/extras/cloud/vmware/vmware_vswitch.py
@@ -32,20 +32,6 @@ requirements:
     - "python >= 2.6"
     - PyVmomi
 options:
-    hostname:
-        description:
-            - The hostname or IP address of the ESXi server
-        required: True
-    username:
-        description:
-            - The username of the ESXi server
-        required: True
-        aliases: ['user', 'admin']
-    password:
-        description:
-            - The password of the ESXi server
-        required: True
-        aliases: ['pass', 'pwd']
     switch_name:
         description:
             - vSwitch name to add
@@ -71,6 +57,7 @@ options:
             - 'present'
             - 'absent'
         required: False
+extends_documentation_fragment: vmware.documentation
 '''
 
 EXAMPLES = '''
