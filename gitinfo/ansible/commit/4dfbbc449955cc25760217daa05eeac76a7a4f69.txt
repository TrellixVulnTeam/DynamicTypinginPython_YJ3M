commit 4dfbbc449955cc25760217daa05eeac76a7a4f69
Author: Michael DeHaan <michael.dehaan@gmail.com>
Date:   Fri Jul 5 12:04:07 2013 -0400

    Revert "ini_file: add support for lists of options/values"
    
    Breaks "," values in INI files
    
    This reverts commit af051d6f77db306a555f71121f14c745a4ed0363.

diff --git a/library/files/ini_file b/library/files/ini_file
index f2f73a7fce..c0c2fe54e9 100644
--- a/library/files/ini_file
+++ b/library/files/ini_file
@@ -108,21 +108,12 @@ def do_ini(module, filename, section=None, option=None, value=None, state='prese
                 changed = True
         else:
             if option is not None:
-                if type(option) == str:
-                    try:
-                        if cp.get(section, option):
-                            cp.remove_option(section, option)
-                            changed = True
-                    except:
-                        pass
-                else:
-                    for o in option:
-                        try:
-                            if cp.get(section, o):
-                                cp.remove_option(section, o)
-                                changed = True
-                        except:
-                            pass
+                try:
+                    if cp.get(section, option):
+                        cp.remove_option(section, option)
+                        changed = True
+                except:
+                    pass
 
     if state == 'present':
         if cp.has_section(section) == False:
@@ -133,31 +124,17 @@ def do_ini(module, filename, section=None, option=None, value=None, state='prese
             changed = True
 
         if option is not None and value is not None:
-            olist = []
-            vlist = []
-            if type(option) == str and type(value) == str:
-                olist.append(option)
-                vlist.append(value)
-            else:
-                olist = list(option)
-                vlist = list(value)
-                if len(olist) != len(vlist):
-                    module.fail_json(msg="Option and value lists must be of same lengths")
-            n = 0
-            for option in olist:
-                value = vlist[n]
-                n = n + 1
-                try:
-                    oldvalue = cp.get(section, option)
-                    if str(value) != str(oldvalue):
-                        cp.set(section, option, value)
-                        changed = True
-                except ConfigParser.NoSectionError:
-                    cp.set(section, option, value)
-                    changed = True
-                except ConfigParser.NoOptionError:
+            try:
+                oldvalue = cp.get(section, option)
+                if str(value) != str(oldvalue):
                     cp.set(section, option, value)
                     changed = True
+            except ConfigParser.NoSectionError:
+                cp.set(section, option, value)
+                changed = True
+            except ConfigParser.NoOptionError:
+                cp.set(section, option, value)
+                changed = True
 
     if changed:
         if backup:
@@ -180,8 +157,8 @@ def main():
         argument_spec = dict(
             dest = dict(required=True),
             section = dict(required=True),
-            option = dict(required=False, type='list'),
-            value = dict(required=False, type='list'),
+            option = dict(required=False),
+            value = dict(required=False),
             backup = dict(default='no', type='bool'),
             state = dict(default='present', choices=['present', 'absent'])
         ),
