commit 8758ba08bdb07ef8fde669beef750303c455a237
Author: Monty Taylor <mordred@inaugust.com>
Date:   Fri Mar 6 18:20:45 2015 -0500

    Update common OpenStack requests-related parameters
    
    Also, update docs related to earlier changes in this stack.

diff --git a/lib/ansible/module_utils/openstack.py b/lib/ansible/module_utils/openstack.py
index 53e18cab0c..35b9026213 100644
--- a/lib/ansible/module_utils/openstack.py
+++ b/lib/ansible/module_utils/openstack.py
@@ -77,10 +77,14 @@ def openstack_full_argument_spec(**kwargs):
         auth=dict(default=None),
         region_name=dict(default=None),
         availability_zone=dict(default=None),
+        verify=dict(default=True),
+        cacert=dict(default=None),
+        cert=dict(default=None),
+        key=dict(default=None),
         wait=dict(default=True, type='bool'),
         timeout=dict(default=180, type='int'),
         endpoint_type=dict(
-            default='publicURL', choices=['publicURL', 'internalURL']
+            default='public', choices=['public', 'internal', 'admin']
         )
     )
     spec.update(kwargs)
diff --git a/lib/ansible/utils/module_docs_fragments/openstack.py b/lib/ansible/utils/module_docs_fragments/openstack.py
index cb8f2c1bfb..2979cb68d7 100644
--- a/lib/ansible/utils/module_docs_fragments/openstack.py
+++ b/lib/ansible/utils/module_docs_fragments/openstack.py
@@ -34,17 +34,13 @@ options:
         this param will need to contain whatever parameters that auth plugin
         requires. This parameter is not needed if a named cloud is provided.
     required: false
-  auth_plugin:
+  auth_type:
     description:
       - Name of the auth plugin to use. If the cloud uses something other than
         password authentication, the name of the plugin should be indicated here
         and the contents of the I(auth) parameter should be updated accordingly.
     required: false
     default: password
-  auth_token:
-    description:
-      - An auth token obtained previously. If I(auth_token) is given,
-        I(auth) and I(auth_plugin) are not needed.
   region_name:
     description:
       - Name of the region.
@@ -64,12 +60,30 @@ options:
       - How long should ansible wait for the requested resource.
     required: false
     default: 180
+  verify:
+    description:
+      - Whether or not SSL API requests should be verified.
+    required: false
+    default: True
+  cacert:
+    description:
+      - A path to a CA Cert bundle that can be used as part of verifying
+        SSL API requests.
+    required: false
+  cert:
+    description:
+      - A path to a client certificate to use as part of the SSL transaction
+    required: false
+  key:
+    description:
+      - A path to a client key to use as part of the SSL transaction
+    required: false
   endpoint_type:
     description:
       - Endpoint URL type to fetch from the service catalog.
-    choices: [publicURL, internalURL]
+    choices: [public, internal, admin]
     required: false
-    default: publicURL
+    default: public
 requirements:
   - shade
 notes:
diff --git a/v2/ansible/module_utils/openstack.py b/v2/ansible/module_utils/openstack.py
index 6388fffbad..35b9026213 100644
--- a/v2/ansible/module_utils/openstack.py
+++ b/v2/ansible/module_utils/openstack.py
@@ -73,14 +73,18 @@ def openstack_find_nova_addresses(addresses, ext_tag, key_name=None):
 def openstack_full_argument_spec(**kwargs):
     spec = dict(
         cloud=dict(default=None),
-        auth_plugin=dict(default=None),
+        auth_type=dict(default=None),
         auth=dict(default=None),
         region_name=dict(default=None),
         availability_zone=dict(default=None),
+        verify=dict(default=True),
+        cacert=dict(default=None),
+        cert=dict(default=None),
+        key=dict(default=None),
         wait=dict(default=True, type='bool'),
         timeout=dict(default=180, type='int'),
         endpoint_type=dict(
-            default='publicURL', choices=['publicURL', 'internalURL']
+            default='public', choices=['public', 'internal', 'admin']
         )
     )
     spec.update(kwargs)
