commit 386515281ef4b2e6da3e32ce56d72163847e4a65
Author: Brian Coca <bcoca@ansible.com>
Date:   Fri Oct 13 15:49:38 2017 -0400

    additional configmanager tests
    
    left placeholders for more

diff --git a/test/units/config/test_manager.py b/test/units/config/test_manager.py
index dd288e9e6b..c4a9db2df0 100644
--- a/test/units/config/test_manager.py
+++ b/test/units/config/test_manager.py
@@ -6,7 +6,7 @@ import os
 
 from ansible.compat.tests import unittest
 
-from ansible.config.manager import ConfigManager, Setting
+from ansible.config.manager import ConfigManager, Setting, ensure_type, resolve_path, find_ini_config_file
 
 curdir = os.path.dirname(__file__)
 cfg_file = os.path.join(curdir, 'test.cfg')
@@ -26,7 +26,7 @@ expected_ini = {'CONFIG_FILE': Setting(name='CONFIG_FILE', value=cfg_file, origi
 class TestConfigData(unittest.TestCase):
 
     def setUp(self):
-        self.manager = ConfigManager(os.path.join(curdir, 'test.cfg'), os.path.join(curdir, 'test.yml'))
+        self.manager = ConfigManager(cfg_file, os.path.join(curdir, 'test.yml'))
 
     def tearDown(self):
         self.manager = None
@@ -34,6 +34,38 @@ class TestConfigData(unittest.TestCase):
     def test_initial_load(self):
         self.assertEquals(self.manager.data._global_settings, expected_ini)
 
+    def test_ensure_type_list(self):
+        self.assertIsInstance(ensure_type('a,b', 'list'), list)
+        self.assertIsInstance(ensure_type(['a', 'b'], 'list'), list)
+
+    def test_ensure_type_bool(self):
+        self.assertIsInstance(ensure_type('yes', 'bool'), bool)
+        self.assertIsInstance(ensure_type(True, 'bool'), bool)
+
+    def test_ensure_type_int(self):
+        self.assertIsInstance(ensure_type('10', 'int'), int)
+        self.assertIsInstance(ensure_type(20, 'int'), int)
+
+    def test_ensure_type_float(self):
+        self.assertIsInstance(ensure_type('0.10', 'float'), float)
+        self.assertIsInstance(ensure_type(0.2, 'float'), float)
+
+    def test_find_ini_file(self):
+        cur_config = os.environ['ANSIBLE_CONFIG']
+        os.environ['ANSIBLE_CONFIG'] = cfg_file
+        self.assertEquals(cfg_file, find_ini_config_file())
+        os.environ['ANSIBLE_CONFIG'] = cur_config
+
+    def test_resolve_path(self):
+        self.assertEquals(os.path.join(curdir, 'test.yml'), resolve_path('./test.yml', cfg_file))
+
+    def test_resolve_path_cwd(self):
+        self.assertEquals(os.path.join(os.getcwd(), 'test.yml'), resolve_path('{{CWD}}/test.yml'))
+        self.assertEquals(os.path.join(os.getcwd(), 'test.yml'), resolve_path('./test.yml'))
+
+    def test_get_config_dest(self):
+        pass
+
     def test_value_and_origin_from_ini(self):
         self.assertEquals(self.manager.get_config_value_and_origin('config_entry'), ('fromini', cfg_file))
 
@@ -45,3 +77,39 @@ class TestConfigData(unittest.TestCase):
 
     def test_value_from_alt_ini(self):
         self.assertEquals(self.manager.get_config_value('config_entry', cfile=cfg_file2), 'fromini2')
+
+    def test_value_and_origin_from_yaml(self):
+        pass
+
+    def test_value_from_yaml(self):
+        pass
+
+    def test_value_and_origin_from_alt_yaml(self):
+        pass
+
+    def test_value_from_alt_yaml(self):
+        pass
+
+    def test_config_type_bool(self):
+        pass
+
+    def test_config_type_list(self):
+        pass
+
+    def test_config_default(self):
+        pass
+
+    def test_deprecated_config(self):
+        pass
+
+    def test_deprecated_config_source(self):
+        pass
+
+    def test_multi_precedence(self):
+        pass
+
+    def test_initialize_plugin_config(self):
+        pass
+
+    def test_update_config_data(self):
+        pass
