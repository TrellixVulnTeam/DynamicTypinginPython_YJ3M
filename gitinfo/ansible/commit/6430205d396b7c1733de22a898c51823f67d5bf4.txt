commit 6430205d396b7c1733de22a898c51823f67d5bf4
Author: Fred-sun <37327967+Fred-sun@users.noreply.github.com>
Date:   Wed Jul 17 04:58:14 2019 +0800

    Update azure_rm_virtualmachine related document (#58861)
    
    * Update azure_rm_virtualmachine_facts module's documentation with nitzmahone feedback, CI fixes
    
    * 'remove_on_absent' does not define choices

diff --git a/lib/ansible/modules/cloud/azure/azure_rm_virtualmachine.py b/lib/ansible/modules/cloud/azure/azure_rm_virtualmachine.py
index 920dc883d5..b1daa080f0 100644
--- a/lib/ansible/modules/cloud/azure/azure_rm_virtualmachine.py
+++ b/lib/ansible/modules/cloud/azure/azure_rm_virtualmachine.py
@@ -21,136 +21,130 @@ module: azure_rm_virtualmachine
 
 version_added: "2.1"
 
-short_description: Manage Azure virtual machines.
+short_description: Manage Azure virtual machines
 
 description:
-    - Create, update, stop and start a virtual machine. Provide an existing storage account and network interface or
-      allow the module to create these for you. If you choose not to provide a network interface, the resource group
-      must contain a virtual network with at least one subnet.
-    - Before Ansible 2.5, this required an image found in the Azure Marketplace which can be discovered with
-      M(azure_rm_virtualmachineimage_facts). In Ansible 2.5 and newer, custom images can be used as well, see the
-      examples for more details.
-    - If you need to use the I(custom_data) option, many images in the marketplace are not cloud-init ready. Thus, data
-      sent to I(custom_data) would be ignored. If the image you are attempting to use is not listed in
-      U(https://docs.microsoft.com/en-us/azure/virtual-machines/linux/using-cloud-init#cloud-init-overview),
-      follow these steps U(https://docs.microsoft.com/en-us/azure/virtual-machines/linux/cloudinit-prepare-custom-image).
+    - Manage and configure virtual machines (VMs) and associated resources on Azure.
+    - Requires a resource group containing at least one virtual network with at least one subnet.
+    - Supports images from the Azure Marketplace, which can be discovered with M(azure_rm_virtualmachineimage_facts).
+    - Supports custom images since Ansible 2.5.
+    - To use I(custom_data) on a Linux image, the image must have cloud-init enabled. If cloud-init is not enabled, I(custom_data) is ignored.
 
 options:
     resource_group:
         description:
-            - Name of the resource group containing the virtual machine.
+            - Name of the resource group containing the VM.
         required: true
     name:
         description:
-            - Name of the virtual machine.
+            - Name of the VM.
         required: true
     custom_data:
         description:
-            - Data which is made available to the virtual machine and used by e.g., cloud-init.
+            - Data made available to the VM and used by C(cloud-init).
+            - Only used on Linux images with C(cloud-init) enabled.
+            - Consult U(https://docs.microsoft.com/en-us/azure/virtual-machines/linux/using-cloud-init#cloud-init-overview) for cloud-init ready images.
+            - To enable cloud-init on a Linux image, follow U(https://docs.microsoft.com/en-us/azure/virtual-machines/linux/cloudinit-prepare-custom-image).
         version_added: "2.5"
     state:
         description:
-            - Assert the state of the virtual machine.
-            - State C(present) will check that the machine exists with the requested configuration. If the configuration
-              of the existing machine does not match, the machine will be updated. Use options started, allocated and restarted to change the machine's power
-              state.
-            - State C(absent) will remove the virtual machine.
+            - State of the VM.
+            - Set to C(present) to create a VM with the configuration specified by other options, or to update the configuration of an existing VM.
+            - Set to C(absent) to remove a VM.
+            - Does not affect power state. Use I(started)/I(allocated)/I(restarted) parameters to change the power state of a VM.
         default: present
         choices:
             - absent
             - present
     started:
         description:
-            - Use with state C(present) to start the machine. Set to false to have the machine be 'stopped'.
+            - Whether the VM is started or stopped.
+            - Set to (true) with I(state=present) to start the VM.
+            - Set to C(false) to stop the VM.
         default: true
         type: bool
     allocated:
         description:
-            - Toggle that controls if the machine is allocated/deallocated, only useful with state='present'.
+            - Whether the VM is allocated or deallocated, only useful with I(state=present).
         default: True
         type: bool
     generalized:
         description:
-            - Use with state C(present) to generalize the machine. Set to true to generalize the machine.
-            - Please note that this operation is irreversible.
+            - Whether the VM is generalized or not.
+            - Set to C(true) with I(state=present) to generalize the VM.
+            - Generalizing a VM is irreversible.
         type: bool
         version_added: "2.8"
     restarted:
         description:
-            - Use with state C(present) to restart a running VM.
+            - Set to C(true) with I(state=present) to restart a running VM.
         type: bool
     location:
         description:
-            - Valid Azure location. Defaults to location of the resource group.
+            - Valid Azure location for the VM. Defaults to location of the resource group.
     short_hostname:
         description:
-            - Name assigned internally to the host. On a linux VM this is the name returned by the `hostname` command.
-              When creating a virtual machine, short_hostname defaults to name.
+            - Name assigned internally to the host. On a Linux VM this is the name returned by the C(hostname) command.
+            - When creating a VM, short_hostname defaults to I(name).
     vm_size:
         description:
-            - A valid Azure VM size value. For example, 'Standard_D4'. The list of choices varies depending on the
-              subscription and location. Check your subscription for available choices. Required when creating a VM.
+            - A valid Azure VM size value. For example, C(Standard_D4).
+            - Choices vary depending on the subscription and location. Check your subscription for available choices.
+            - Required when creating a VM.
     admin_username:
         description:
-            - Admin username used to access the host after it is created. Required when creating a VM.
+            - Admin username used to access the VM after it is created.
+            - Required when creating a VM.
     admin_password:
         description:
-            - Password for the admin username. Not required if the os_type is Linux and SSH password authentication
-              is disabled by setting ssh_password_enabled to false.
+            - Password for the admin username.
+            - Not required if the I(os_type=Linux) and SSH password authentication is disabled by setting I(ssh_password_enabled=false).
     ssh_password_enabled:
         description:
-            - When the os_type is Linux, setting ssh_password_enabled to false will disable SSH password authentication
-              and require use of SSH keys.
+            - Whether to enable or disable SSH passwords.
+            - When I(os_type=Linux), set to C(false) to disable SSH password authentication and require use of SSH keys.
         default: true
         type: bool
     ssh_public_keys:
         description:
-            - "For os_type Linux provide a list of SSH keys. Each item in the list should be a dictionary where the
-              dictionary contains two keys: path and key_data. Set the path to the default location of the
-              authorized_keys files. On an Enterprise Linux host, for example, the path will be
-              /home/<admin username>/.ssh/authorized_keys. Set key_data to the actual value of the public key."
+            - For I(os_type=Linux) provide a list of SSH keys.
+            - Accepts a list of dicts where each dictionary contains two keys, I(path) and I(key_data).
+            - Set I(path) to the default location of the authorized_keys files. For example, I(path=/home/<admin username>/.ssh/authorized_keys).
+            - Set I(key_data) to the actual value of the public key.
     image:
         description:
-            - Specifies the image used to build the VM.
-            - If a string, the image is sourced from a custom image based on the
-              name.
-            - 'If a dict with the keys C(publisher), C(offer), C(sku), and
-              C(version), the image is sourced from a Marketplace image. NOTE:
-              set image.version to C(latest) to get the most recent version of a
-              given image.'
-            - 'If a dict with the keys C(name) and C(resource_group), the image
-              is sourced from a custom image based on the C(name) and
-              C(resource_group) set. NOTE: the key C(resource_group) is optional
-              and if omitted, all images in the subscription will be searched
-              for by C(name).'
-            - Custom image support was added in Ansible 2.5
+            - The image used to build the VM.
+            - For custom images, the name of the image. To narrow the search to a specific resource group, a dict with the keys I(name) and I(resource_group).
+            - For Marketplace images, a dict with the keys I(publisher), I(offer), I(sku), and I(version).
+            - Set I(version=latest) to get the most recent version of a given image.
         required: true
     availability_set:
         description:
-            - Name or ID of an existing availability set to add the VM to. The availability_set should be in the same resource group as VM.
+            - Name or ID of an existing availability set to add the VM to. The I(availability_set) should be in the same resource group as VM.
         version_added: "2.5"
     storage_account_name:
         description:
-            - Name of an existing storage account that supports creation of VHD blobs. If not specified for a new VM,
-              a new storage account named <vm name>01 will be created using storage type 'Standard_LRS'.
+            - Name of a storage account that supports creation of VHD blobs.
+            - If not specified for a new VM, a new storage account named <vm name>01 will be created using storage type C(Standard_LRS).
         aliases:
             - storage_account
     storage_container_name:
         description:
-            - Name of the container to use within the storage account to store VHD blobs. If no name is specified a
-              default container will created.
+            - Name of the container to use within the storage account to store VHD blobs.
+            - If not specified, a default container will be created.
         default: vhds
         aliases:
             - storage_container
     storage_blob_name:
         description:
-            - Name of the storage blob used to hold the VM's OS disk image. If no name is provided, defaults to
-              the VM name + '.vhd'. If you provide a name, it must end with '.vhd'
+            - Name of the storage blob used to hold the OS disk image of the VM.
+            - Must end with '.vhd'.
+            - If not specified, defaults to the VM name + '.vhd'.
         aliases:
             - storage_blob
     managed_disk_type:
         description:
-            - Managed OS disk type
+            - Managed OS disk type.
         choices:
             - Standard_LRS
             - StandardSSD_LRS
@@ -158,7 +152,7 @@ options:
         version_added: "2.4"
     os_disk_name:
         description:
-            - OS disk name
+            - OS disk name.
         version_added: "2.8"
     os_disk_caching:
         description:
@@ -182,21 +176,21 @@ options:
         default: Linux
     data_disks:
         description:
-            - Describes list of data disks.
+            - List of data disks.
         version_added: "2.4"
         suboptions:
             lun:
                 description:
-                    - The logical unit number for data disk
+                    - The logical unit number for data disk.
                 default: 0
                 version_added: "2.4"
             disk_size_gb:
                 description:
-                    - The initial disk size in GB for blank data disks
+                    - The initial disk size in GB for blank data disks.
                 version_added: "2.4"
             managed_disk_type:
                 description:
-                    - Managed data disk type
+                    - Managed data disk type.
                 choices:
                     - Standard_LRS
                     - StandardSSD_LRS
@@ -204,19 +198,20 @@ options:
                 version_added: "2.4"
             storage_account_name:
                 description:
-                    - Name of an existing storage account that supports creation of VHD blobs. If not specified for a new VM,
-                      a new storage account named <vm name>01 will be created using storage type 'Standard_LRS'.
+                    - Name of an existing storage account that supports creation of VHD blobs.
+                    - If not specified for a new data disk, a new storage account named <vm name>01 will be created using storage type C(Standard_LRS).
                 version_added: "2.4"
             storage_container_name:
                 description:
-                    - Name of the container to use within the storage account to store VHD blobs. If no name is specified a
-                      default container will created.
+                    - Name of the container to use within the storage account to store VHD blobs.
+                    - If not specified, a default container will created.
                 default: vhds
                 version_added: "2.4"
             storage_blob_name:
                 description:
-                    - Name fo the storage blob used to hold the VM's OS disk image. If no name is provided, defaults to
-                      the VM name + '.vhd'. If you provide a name, it must end with '.vhd'
+                    - Name of the storage blob used to hold the OS disk image of the VM.
+                    - Must end with '.vhd'.
+                    - If not specified, defaults to the VM name + '.vhd'.
                 version_added: "2.4"
             caching:
                 description:
@@ -228,9 +223,9 @@ options:
                 version_added: "2.4"
     public_ip_allocation_method:
         description:
-            - If a public IP address is created when creating the VM (because a Network Interface was not provided),
-              determines if the public IP address remains permanently associated with the Network Interface. If set
-              to 'Dynamic' the public IP address may change any time the VM is rebooted or power cycled.
+            - Allocation method for the public IP of the VM.
+            - Used only if a network interface is not specified.
+            - When set to C(Dynamic), the public IP address may change any time the VM is rebooted or power cycled.
             - The C(Disabled) choice was added in Ansible 2.6.
         choices:
             - Dynamic
@@ -241,137 +236,133 @@ options:
             - public_ip_allocation
     open_ports:
         description:
-            - If a network interface is created when creating the VM, a security group will be created as well. For
-              Linux hosts a rule will be added to the security group allowing inbound TCP connections to the default
-              SSH port 22, and for Windows hosts ports 3389 and 5986 will be opened. Override the default open ports by
-              providing a list of ports.
+            - List of ports to open in the security group for the VM, when a security group and network interface are created with a VM.
+            - For Linux hosts, defaults to allowing inbound TCP connections to port 22.
+            - For Windows hosts, defaults to opening ports 3389 and 5986.
     network_interface_names:
         description:
-            - List of existing network interface names to add to the VM.
-            - Item can be a str of name or resource id of the network interface.
-            - Item can also be a dict contains C(resource_group) and C(name) of the network interface.
+            - Network interface names to add to the VM.
+            - Can be a string of name or resource ID of the network interface.
+            - Can be a dict containing I(resource_group) and I(name) of the network interface.
             - If a network interface name is not provided when the VM is created, a default network interface will be created.
-            - In order for the module to create a new network interface, at least one Virtual Network with one Subnet must exist.
+            - To create a new network interface, at least one Virtual Network with one Subnet must exist.
+        type: list
         aliases:
             - network_interfaces
     virtual_network_resource_group:
         description:
-            - When creating a virtual machine, if a specific virtual network from another resource group should be
-              used, use this parameter to specify the resource group to use.
+            - The resource group to use when creating a VM with another resource group's virtual network.
         version_added: "2.4"
     virtual_network_name:
         description:
-            - When creating a virtual machine, if a network interface name is not provided, one will be created.
-            - The network interface will be assigned to the first virtual network found in the resource group.
-            - Use this parameter to provide a specific virtual network instead.
-            - If the virtual network in in another resource group, specific resource group by C(virtual_network_resource_group).
+            - The virtual network to use when creating a VM.
+            - If not specified, a new network interface will be created and assigned to the first virtual network found in the resource group.
+            - Use with I(virtual_network_resource_group) to place the virtual network in another resource group.
         aliases:
             - virtual_network
     subnet_name:
         description:
-            - When creating a virtual machine, if a network interface name is not provided, one will be created.
-            - The new network interface will be assigned to the first subnet found in the virtual network.
-            - Use this parameter to provide a specific subnet instead.
-            - If the subnet is in another resource group, specific resource group by C(virtual_network_resource_group).
+            - Subnet for the VM.
+            - Defaults to the first subnet found in the virtual network or the subnet of the I(network_interface_name), if provided.
+            - If the subnet is in another resource group, specify the resource group with I(virtual_network_resource_group).
         aliases:
             - subnet
     remove_on_absent:
         description:
-            - "When removing a VM using state 'absent', also remove associated resources."
-            - "It can be a list with any of the following: ['all', 'all_autocreated', 'network_interfaces', 'virtual_storage', 'public_ips']."
-            - "To remove all resources referred by VM use 'all' (this includes autocreated)."
-            - "To remove all resources that were automatically created while provisioning VM use 'all_autocreated'."
+            - Associated resources to remove when removing a VM using I(state=absent).
+            - To remove all resources related to the VM being removed, including auto-created resources, set to C(all).
+            - To remove only resources that were automatically created while provisioning the VM being removed, set to C(all_autocreated).
+            - To remove only specific resources, set to C(network_interfaces), C(virtual_storage) or C(public_ips).
             - Any other input will be ignored.
+        type: list
         default: ['all']
     plan:
         description:
-            - A dictionary describing a third-party billing plan for an instance
-        version_added: 2.5
+            - Third-party billing plan for the VM.
+        version_added: "2.5"
+        type: dict
         suboptions:
             name:
                 description:
-                    - billing plan name
+                    - Billing plan name.
                 required: true
             product:
                 description:
-                    - product name
+                    - Product name.
                 required: true
             publisher:
                 description:
-                    - publisher offering the plan
+                    - Publisher offering the plan.
                 required: true
             promotion_code:
                 description:
-                    - optional promotion code
+                    - Optional promotion code.
     accept_terms:
         description:
-            - Accept terms for marketplace images that require it
-            - Only Azure service admin/account admin users can purchase images from the marketplace
-            - C(plan) must be set when C(accept_terms) is true
+            - Accept terms for Marketplace images that require it.
+            - Only Azure service admin/account admin users can purchase images from the Marketplace.
+            - Only valid when a I(plan) is specified.
         type: bool
         default: false
         version_added: "2.7"
     zones:
         description:
-            - A list of Availability Zones for your virtual machine
+            - A list of Availability Zones for your VM.
         type: list
         version_added: "2.8"
     license_type:
         description:
-            - Specifies that the image or disk that is being used was licensed on-premises. This element is only
-              used for images that contain the Windows Server operating system.
-            - "Note: To unset this value, it has to be set to the string 'None'."
-        version_added: 2.8
+            - On-premise license for the image or disk.
+            - Only used for images that contain the Windows Server operating system.
+            - To remove all license type settings, set to the string C(None).
+        version_added: "2.8"
         choices:
             - Windows_Server
             - Windows_Client
     vm_identity:
         description:
-            - Identity for the virtual machine.
-        version_added: 2.8
+            - Identity for the VM.
+        version_added: "2.8"
         choices:
             - SystemAssigned
     winrm:
         description:
             - List of Windows Remote Management configurations of the VM.
-        version_added: 2.8
+        version_added: "2.8"
         suboptions:
             protocol:
                 description:
-                    - Specifies the protocol of listener
+                    - The protocol of the winrm listener.
                 required: true
                 choices:
                     - http
                     - https
             source_vault:
                 description:
-                    - The relative URL of the Key Vault containing the certificate
+                    - The relative URL of the Key Vault containing the certificate.
             certificate_url:
                 description:
-                    - This is the URL of a certificate that has been uploaded to Key Vault as a secret.
+                    - The URL of a certificate that has been uploaded to Key Vault as a secret.
             certificate_store:
                 description:
-                    - Specifies the certificate store on the Virtual Machine to which the certificate
-                      should be added. The specified certificate store is implicitly in the LocalMachine account.
+                    - The certificate store on the VM to which the certificate should be added.
+                    - The specified certificate store is implicitly in the LocalMachine account.
     boot_diagnostics:
         description:
-            - Manage boot diagnostics settings for a virtual machine.  Boot diagnostics
-              includes a serial console and remote console screenshots.
+            - Manage boot diagnostics settings for a VM.
+            - Boot diagnostics includes a serial console and remote console screenshots.
         version_added: '2.9'
         suboptions:
             enabled:
                 description:
-                    - Flag indicating if boot diagnostics is enabled.
+                    - Flag indicating if boot diagnostics are enabled.
                 required: true
                 type: bool
             storage_account:
                 description:
                     - The name of an existing storage account to use for boot diagnostics.
-                    - If omitted and C(storage_account_name) is defined one level up, that
-                      will be used instead.
-                    - If omitted and C(storage_account_name) is not defined one level up, and
-                      C(enabled) is I(true), then a default storage account will be created
-                      or used for the virtual machine to hold the boot diagnostics data.
+                    - If not specified, uses I(storage_account_name) defined one level up.
+                    - If storage account is not specified anywhere, and C(enabled) is C(true), a default storage account is created for boot diagnostics data.
                 required: false
 
 extends_documentation_fragment:
@@ -379,10 +370,10 @@ extends_documentation_fragment:
     - azure_tags
 
 author:
-    - "Chris Houseknecht (@chouseknecht)"
-    - "Matt Davis (@nitzmahone)"
-    - "Christopher Perrin (@cperrin88)"
-    - "James E. King III (@jeking3)"
+    - Chris Houseknecht (@chouseknecht)
+    - Matt Davis (@nitzmahone)
+    - Christopher Perrin (@cperrin88)
+    - James E. King III (@jeking3)
 '''
 EXAMPLES = '''
 
@@ -453,12 +444,12 @@ EXAMPLES = '''
       sku: Stable
       version: latest
     data_disks:
-        - lun: 0
-          disk_size_gb: 64
-          managed_disk_type: Standard_LRS
-        - lun: 1
-          disk_size_gb: 128
-          managed_disk_type: Premium_LRS
+      - lun: 0
+        disk_size_gb: 64
+        managed_disk_type: Standard_LRS
+      - lun: 1
+        disk_size_gb: 128
+        managed_disk_type: Premium_LRS
 
 - name: Create a VM with OS and multiple data storage accounts
   azure_rm_virtualmachine:
@@ -468,8 +459,8 @@ EXAMPLES = '''
     admin_username: adminUser
     ssh_password_enabled: false
     ssh_public_keys:
-    - path: /home/adminUser/.ssh/authorized_keys
-      key_data: < insert yor ssh public key here... >
+      - path: /home/adminUser/.ssh/authorized_keys
+        key_data: < insert yor ssh public key here... >
     network_interfaces: testvm001
     storage_container: osdisk
     storage_blob: osdisk.vhd
@@ -481,14 +472,14 @@ EXAMPLES = '''
       sku: Stable
       version: latest
     data_disks:
-    - lun: 0
-      disk_size_gb: 64
-      storage_container_name: datadisk1
-      storage_blob_name: datadisk1.vhd
-    - lun: 1
-      disk_size_gb: 128
-      storage_container_name: datadisk2
-      storage_blob_name: datadisk2.vhd
+      - lun: 0
+        disk_size_gb: 64
+        storage_container_name: datadisk1
+        storage_blob_name: datadisk1.vhd
+      - lun: 1
+        disk_size_gb: 128
+        storage_container_name: datadisk2
+        storage_blob_name: datadisk2.vhd
 
 - name: Create a VM with a custom image
   azure_rm_virtualmachine:
@@ -592,30 +583,35 @@ EXAMPLES = '''
 
 RETURN = '''
 powerstate:
-    description: Indicates if the state is running, stopped, deallocated, generalized
+    description:
+        - Indicates if the state is C(running), C(stopped), C(deallocated), C(generalized).
     returned: always
     type: str
-    example: running
+    sample: running
 deleted_vhd_uris:
-    description: List of deleted Virtual Hard Disk URIs.
+    description:
+        - List of deleted Virtual Hard Disk URIs.
     returned: 'on delete'
     type: list
-    example: ["https://testvm104519.blob.core.windows.net/vhds/testvm10.vhd"]
+    sample: ["https://testvm104519.blob.core.windows.net/vhds/testvm10.vhd"]
 deleted_network_interfaces:
-    description: List of deleted NICs.
+    description:
+        - List of deleted NICs.
     returned: 'on delete'
     type: list
-    example: ["testvm1001"]
+    sample: ["testvm1001"]
 deleted_public_ips:
-    description: List of deleted public IP address names.
+    description:
+        - List of deleted public IP address names.
     returned: 'on delete'
     type: list
-    example: ["testvm1001"]
+    sample: ["testvm1001"]
 azure_vm:
-    description: Facts about the current state of the object. Note that facts are not part of the registered output but available directly.
+    description:
+        - Facts about the current state of the object. Note that facts are not part of the registered output but available directly.
     returned: always
-    type: complex
-    contains: {
+    type: dict
+    sample: {
         "properties": {
             "availabilitySet": {
                     "id": "/subscriptions/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/resourceGroup/myResourceGroup/providers/Microsoft.Compute/availabilitySets/MYAVAILABILITYSET"
diff --git a/lib/ansible/modules/cloud/azure/azure_rm_virtualmachine_facts.py b/lib/ansible/modules/cloud/azure/azure_rm_virtualmachine_facts.py
index 02ccb13cfc..f308434668 100644
--- a/lib/ansible/modules/cloud/azure/azure_rm_virtualmachine_facts.py
+++ b/lib/ansible/modules/cloud/azure/azure_rm_virtualmachine_facts.py
@@ -21,28 +21,28 @@ module: azure_rm_virtualmachine_facts
 
 version_added: "2.7"
 
-short_description: Get virtual machine facts.
+short_description: Get virtual machine facts
 
 description:
-  - Get facts for one or all virtual machines in a resource group.
+    - Get facts for one or all virtual machines in a resource group.
 
 options:
     resource_group:
         description:
-        - Name of the resource group containing the virtual machines (required when filtering by vm name).
+            - Name of the resource group containing the virtual machines (required when filtering by vm name).
     name:
         description:
-        - Name of the virtual machine.
+            - Name of the virtual machine.
     tags:
         description:
-        - Limit results by providing a list of tags. Format tags as 'key' or 'key:value'.
+            - Limit results by providing a list of tags. Format tags as 'key' or 'key:value'.
 
 extends_documentation_fragment:
-  - azure
+    - azure
 
 author:
-  - "Gustavo Muniz do Carmo (@gustavomcarmo)"
-  - "Zim Kalinowski (@zikalino)"
+    - Gustavo Muniz do Carmo (@gustavomcarmo)
+    - Zim Kalinowski (@zikalino)
 
 '''
 
@@ -66,7 +66,8 @@ EXAMPLES = '''
 
 RETURN = '''
 vms:
-    description: List of virtual machines.
+    description:
+        - List of virtual machines.
     returned: always
     type: complex
     contains:
@@ -85,23 +86,31 @@ vms:
                 enabled:
                     description:
                         - Indicates if boot diagnostics are enabled.
+                    returned: always
                     type: bool
                     sample: true
                 storage_uri:
                     description:
                         - Indicates the storage account used by boot diagnostics.
+                    returned: always
                     type: str
                     sample: https://mystorageaccountname.blob.core.windows.net/
                 console_screenshot_uri:
                     description:
                         - Contains a URI to grab a console screenshot.
                         - Only present if enabled.
+                    returned: always
                     type: str
+                    sample: https://mystorageaccountname.blob.core.windows.net/bootdiagnostics-myvm01-a4db09a6-ab7f-4d80-9da8-fbceaef9288a/
+                            myVm.a4db09a6-ab7f-4d80-9da8-fbceaef9288a.screenshot.bmp
                 serial_console_log_uri:
                     description:
                         - Contains a URI to grab the serial console log.
                         - Only present if enabled.
+                    returned: always
                     type: str
+                    sample: https://mystorageaccountname.blob.core.windows.net/bootdiagnostics-myvm01-a4db09a6-ab7f-4d80-9da8-fbceaef9288a/
+                            myVm.a4db09a6-ab7f-4d80-9da8-fbceaef9288a.serialconsole.log
         data_disks:
             description:
                 - List of attached data disks.
@@ -111,21 +120,25 @@ vms:
                 caching:
                     description:
                         - Type of data disk caching.
+                    returned: always
                     type: str
                     sample: ReadOnly
                 disk_size_gb:
                     description:
-                        - The initial disk size in GB for blank data disks
+                        - The initial disk size in GB for blank data disks.
+                    returned: always
                     type: int
                     sample: 64
                 lun:
                     description:
-                        - The logical unit number for data disk
+                        - The logical unit number for data disk.
+                    returned: always
                     type: int
                     sample: 0
                 managed_disk_type:
                     description:
-                        - Managed data disk type
+                        - Managed data disk type.
+                    returned: always
                     type: str
                     sample: Standard_LRS
         id:
@@ -136,13 +149,13 @@ vms:
             sample: /subscriptions/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/resourceGroups/myResourceGroup/providers/Microsoft.Compute/virtualMachines/myVm
         image:
             description:
-                - Image specification
+                - Image specification.
             returned: always
             type: complex
             contains:
                 offer:
                     description:
-                        - Offer.
+                        - The offer of the platform image or marketplace image used to create the virtual machine.
                     type: str
                     returned: when created from marketplace image
                     sample: RHEL
@@ -166,7 +179,7 @@ vms:
                     sample: 7.5.2018050901
                 id:
                     description:
-                        - Custom image resource id.
+                        - Custom image resource ID.
                     type: str
                     returned: when created from custom image
                     sample: /subscriptions/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/resourceGroups/myResourceGroup/providers/Microsoft.Compute/images/myImage
@@ -185,6 +198,7 @@ vms:
         network_interface_names:
             description:
                 - List of attached network interfaces.
+            returned: always
             type: list
             sample: [
                 "myNetworkInterface"
@@ -192,35 +206,43 @@ vms:
         os_disk_caching:
             description:
                 - Type of OS disk caching.
+            returned: always
             type: str
             sample: ReadOnly
         os_type:
             description:
                 - Base type of operating system.
+            returned: always
             type: str
             sample: Linux
         resource_group:
             description:
                 - Resource group.
+            returned: always
             type: str
             sample: myResourceGroup
         state:
             description:
                 - State of the resource.
+            returned: always
             type: str
             sample: present
         tags:
             description:
-                - Tags.
+                - Resource tags.
+            returned: always
             type: dict
+            sample: { "key1":"value1" }
         vm_size:
             description:
                 - Virtual machine size.
+            returned: always
             type: str
             sample: Standard_D4
         power_state:
             description:
                 - Power state of the virtual machine.
+            returned: always
             type: str
             sample: running
 '''
