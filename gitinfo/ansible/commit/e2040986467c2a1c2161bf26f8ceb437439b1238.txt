commit e2040986467c2a1c2161bf26f8ceb437439b1238
Author: Tim Rupp <caphrim007@gmail.com>
Date:   Sat Aug 18 22:49:43 2018 -0400

    Adds more unit test fixtures (#44353)
    
    Fixtures for new modules

diff --git a/test/units/modules/network/f5/fixtures/load_auth_remote_role_role_info_1.json b/test/units/modules/network/f5/fixtures/load_auth_remote_role_role_info_1.json
new file mode 100644
index 0000000000..b4d6038ef8
--- /dev/null
+++ b/test/units/modules/network/f5/fixtures/load_auth_remote_role_role_info_1.json
@@ -0,0 +1,16 @@
+{
+    "kind": "tm:auth:remote-role:role-info:role-infostate",
+    "name": "/Common/ldap_group",
+    "fullPath": "/Common/ldap_group",
+    "generation": 0,
+    "selfLink": "https://localhost/mgmt/tm/auth/remote-role/role-info/~Common~ldap_group?ver=13.1.0.7",
+    "attribute": "memberOf=cn=ldap_group,cn=ldap.group,ou=ldap",
+    "console": "disable",
+    "deny": "enabled",
+    "lineOrder": 1,
+    "role": "firewallmanager",
+    "userPartition": "All",
+    "userPartitionReference": {
+        "link": "https://localhost/mgmt/tm/auth/partition/All?ver=13.1.0.7"
+    }
+}
diff --git a/test/units/modules/network/f5/fixtures/load_ltm_profile_http_compression_1.json b/test/units/modules/network/f5/fixtures/load_ltm_profile_http_compression_1.json
new file mode 100644
index 0000000000..a9873f20a2
--- /dev/null
+++ b/test/units/modules/network/f5/fixtures/load_ltm_profile_http_compression_1.json
@@ -0,0 +1,37 @@
+{
+    "kind": "tm:ltm:profile:http-compression:http-compressionstate",
+    "name": "profile1",
+    "partition": "Common",
+    "fullPath": "/Common/profile1",
+    "generation": 132,
+    "selfLink": "https://localhost/mgmt/tm/ltm/profile/http-compression/~Common~profile1?ver=13.1.0.4",
+    "allowHttp_10": "disabled",
+    "appService": "none",
+    "browserWorkarounds": "disabled",
+    "bufferSize": 4096,
+    "contentTypeExclude": [],
+    "contentTypeInclude": [
+        "text/",
+        "application/(xml|x-javascript)"
+    ],
+    "cpuSaver": "enabled",
+    "cpuSaverHigh": 90,
+    "cpuSaverLow": 75,
+    "defaultsFrom": "/Common/httpcompression",
+    "defaultsFromReference": {
+        "link": "https://localhost/mgmt/tm/ltm/profile/http-compression/~Common~httpcompression?ver=13.1.0.4"
+    },
+    "description": "my profile",
+    "gzipLevel": 1,
+    "gzipMemoryLevel": 8192,
+    "gzipWindowSize": 16384,
+    "keepAcceptEncoding": "disabled",
+    "methodPrefer": "gzip",
+    "minSize": 1024,
+    "selective": "disabled",
+    "uriExclude": [],
+    "uriInclude": [
+        ".*"
+    ],
+    "varyHeader": "enabled"
+}
diff --git a/test/units/modules/network/f5/fixtures/load_ltm_profile_oneconnect_1.json b/test/units/modules/network/f5/fixtures/load_ltm_profile_oneconnect_1.json
new file mode 100644
index 0000000000..d2b05acfe4
--- /dev/null
+++ b/test/units/modules/network/f5/fixtures/load_ltm_profile_oneconnect_1.json
@@ -0,0 +1,18 @@
+{
+  "kind": "tm:ltm:profile:one-connect:one-connectstate",
+  "name": "oneconnect",
+  "partition": "Common",
+  "fullPath": "/Common/oneconnect",
+  "generation": 1,
+  "selfLink": "https://localhost/mgmt/tm/ltm/profile/one-connect/~Common~oneconnect?ver=13.1.0.4",
+  "appService": "none",
+  "defaultsFrom": "none",
+  "description": "none",
+  "idleTimeoutOverride": "disabled",
+  "limitType": "none",
+  "maxAge": 86400,
+  "maxReuse": 1000,
+  "maxSize": 10000,
+  "sharePools": "disabled",
+  "sourceMask": "any"
+}
diff --git a/test/units/modules/network/f5/fixtures/load_ltm_profile_persistence_src_addr_1.json b/test/units/modules/network/f5/fixtures/load_ltm_profile_persistence_src_addr_1.json
new file mode 100644
index 0000000000..2ee6df9b33
--- /dev/null
+++ b/test/units/modules/network/f5/fixtures/load_ltm_profile_persistence_src_addr_1.json
@@ -0,0 +1,22 @@
+{
+  "kind": "tm:ltm:persistence:source-addr:source-addrstate",
+  "name": "source_addr",
+  "partition": "Common",
+  "fullPath": "/Common/source_addr",
+  "generation": 1,
+  "selfLink": "https://localhost/mgmt/tm/ltm/persistence/source-addr/~Common~source_addr?ver=13.1.0.7",
+  "appService": "none",
+  "defaultsFrom": "none",
+  "description": "none",
+  "hashAlgorithm": "default",
+  "mapProxies": "enabled",
+  "mapProxyAddress": "none",
+  "mapProxyClass": "none",
+  "mask": "none",
+  "matchAcrossPools": "disabled",
+  "matchAcrossServices": "disabled",
+  "matchAcrossVirtuals": "disabled",
+  "mirror": "disabled",
+  "overrideConnectionLimit": "disabled",
+  "timeout": "180"
+}
diff --git a/test/units/modules/network/f5/fixtures/load_net_tunnel_1.json b/test/units/modules/network/f5/fixtures/load_net_tunnel_1.json
new file mode 100644
index 0000000000..dd0e484268
--- /dev/null
+++ b/test/units/modules/network/f5/fixtures/load_net_tunnel_1.json
@@ -0,0 +1,25 @@
+{
+    "kind": "tm:net:tunnels:tunnel:tunnelstate",
+    "name": "tunnel1",
+    "partition": "Common",
+    "fullPath": "/Common/tunnel1",
+    "generation": 3713,
+    "selfLink": "https://localhost/mgmt/tm/net/tunnels/tunnel/~Common~tunnel1?ver=13.1.0.7",
+    "autoLasthop": "default",
+    "description": "my other tunnel",
+    "idleTimeout": 300,
+    "ifIndex": 736,
+    "key": 0,
+    "localAddress": "3.3.3.3",
+    "mode": "bidirectional",
+    "mtu": 1000,
+    "profile": "/Common/ipip",
+    "profileReference": {
+        "link": "https://localhost/mgmt/tm/net/tunnels/ipip/~Common~ipip?ver=13.1.0.7"
+    },
+    "remoteAddress": "4.4.4.4",
+    "secondaryAddress": "any6",
+    "tos": "preserve",
+    "transparent": "disabled",
+    "usePmtu": "enabled"
+}
diff --git a/test/units/modules/network/f5/fixtures/load_security_firewall_policy_1.json b/test/units/modules/network/f5/fixtures/load_security_firewall_policy_1.json
new file mode 100644
index 0000000000..9c24605883
--- /dev/null
+++ b/test/units/modules/network/f5/fixtures/load_security_firewall_policy_1.json
@@ -0,0 +1,51 @@
+{
+    "kind": "tm:security:firewall:policy:policystate",
+    "name": "foo",
+    "partition": "Common",
+    "fullPath": "/Common/foo",
+    "generation": 2075,
+    "selfLink": "https://localhost/mgmt/tm/security/firewall/policy/~Common~foo?expandSubcollections=true&ver=13.1.0.7",
+    "description": "my description",
+    "rulesReference": {
+        "link": "https://localhost/mgmt/tm/security/firewall/policy/~Common~foo/rules?ver=13.1.0.7",
+        "isSubcollection": true,
+        "items": [
+            {
+                "kind": "tm:security:firewall:policy:rules:rulesstate",
+                "name": "rule1",
+                "fullPath": "rule1",
+                "generation": 2075,
+                "selfLink": "https://localhost/mgmt/tm/security/firewall/policy/~Common~foo/rules/rule1?ver=13.1.0.7",
+                "action": "accept",
+                "ipProtocol": "any",
+                "iruleSampleRate": 1,
+                "log": "no",
+                "status": "enabled"
+            },
+            {
+                "kind": "tm:security:firewall:policy:rules:rulesstate",
+                "name": "rule2",
+                "fullPath": "rule2",
+                "generation": 2075,
+                "selfLink": "https://localhost/mgmt/tm/security/firewall/policy/~Common~foo/rules/rule2?ver=13.1.0.7",
+                "action": "accept",
+                "ipProtocol": "any",
+                "iruleSampleRate": 1,
+                "log": "no",
+                "status": "enabled"
+            },
+            {
+                "kind": "tm:security:firewall:policy:rules:rulesstate",
+                "name": "rule3",
+                "fullPath": "rule3",
+                "generation": 2074,
+                "selfLink": "https://localhost/mgmt/tm/security/firewall/policy/~Common~foo/rules/rule3?ver=13.1.0.7",
+                "action": "accept",
+                "ipProtocol": "any",
+                "iruleSampleRate": 1,
+                "log": "no",
+                "status": "enabled"
+            }
+        ]
+    }
+}
diff --git a/test/units/modules/network/f5/fixtures/load_sys_software_image_1.json b/test/units/modules/network/f5/fixtures/load_sys_software_image_1.json
new file mode 100644
index 0000000000..32a9afe075
--- /dev/null
+++ b/test/units/modules/network/f5/fixtures/load_sys_software_image_1.json
@@ -0,0 +1,15 @@
+{
+    "kind": "tm:sys:software:image:imagestate",
+    "name": "foo.iso",
+    "fullPath": "foo.iso",
+    "generation": 113,
+    "selfLink": "https://localhost/mgmt/tm/sys/software/image/foo.iso?ver=13.1.0.4",
+    "build": "0.0.3",
+    "buildDate": "Sat Jun 16 00 03 03 PDT 2018",
+    "checksum": "8cdbd094195fab4b2b47ff4285577b70",
+    "fileSize": "1948 MB",
+    "lastModified": "Thu May 17 16:19:34 2018",
+    "product": "BIG-IP",
+    "verified": "yes",
+    "version": "13.1.0.8"
+}
diff --git a/test/units/modules/network/f5/fixtures/load_tm_auth_tacacs_1.json b/test/units/modules/network/f5/fixtures/load_tm_auth_tacacs_1.json
new file mode 100644
index 0000000000..246226055c
--- /dev/null
+++ b/test/units/modules/network/f5/fixtures/load_tm_auth_tacacs_1.json
@@ -0,0 +1,19 @@
+{
+    "kind": "tm:auth:tacacs:tacacsstate",
+    "name": "system-auth",
+    "partition": "Common",
+    "fullPath": "/Common/system-auth",
+    "generation": 484,
+    "selfLink": "https://localhost/mgmt/tm/auth/tacacs/~Common~system-auth?ver=13.1.0.1",
+    "accounting": "send-to-first-server",
+    "authentication": "use-first-server",
+    "debug": "disabled",
+    "encryption": "enabled",
+    "protocol": "ftp",
+    "secret": "secret",
+    "servers": [
+        "11.11.11.11"
+    ],
+    "service": "ppp",
+    "timeout": 10
+}
diff --git a/test/units/modules/network/f5/fixtures/load_tm_cli_alias_1.json b/test/units/modules/network/f5/fixtures/load_tm_cli_alias_1.json
new file mode 100644
index 0000000000..bb9b0e9016
--- /dev/null
+++ b/test/units/modules/network/f5/fixtures/load_tm_cli_alias_1.json
@@ -0,0 +1,10 @@
+{
+    "kind": "tm:cli:alias:shared:sharedstate",
+    "name": "bash",
+    "partition": "Common",
+    "fullPath": "/Common/bash",
+    "generation": 1,
+    "selfLink": "https://localhost/mgmt/tm/cli/alias/shared/~Common~bash?ver=13.1.0.7",
+    "tmCommand": "run /util bash",
+    "description": "Run the bash shell"
+}
