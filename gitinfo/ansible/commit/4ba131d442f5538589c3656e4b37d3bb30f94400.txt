commit 4ba131d442f5538589c3656e4b37d3bb30f94400
Author: Chenjun Shen <chenjun.shen@gmail.com>
Date:   Tue Feb 28 14:47:57 2017 +0100

    Add quota for the number of floating IP's to allow in Network. (#21471)
    
    * Add quota for the number of floating IP's to allow in Network.
    
    * Add nova_floating_ips and neutron_floating_ips aliases to avoid confusion.
    
    * rename aliases to compute_floating_ips and network_floating_ips.

diff --git a/lib/ansible/modules/cloud/openstack/os_quota.py b/lib/ansible/modules/cloud/openstack/os_quota.py
index 24efb23890..079fe6216f 100644
--- a/lib/ansible/modules/cloud/openstack/os_quota.py
+++ b/lib/ansible/modules/cloud/openstack/os_quota.py
@@ -59,7 +59,13 @@ options:
     floating_ips:
         required: False
         default: None
-        description: Number of floating IP's to allow.
+        description: Number of floating IP's to allow in Compute.
+        aliases: ['compute_floating_ips']
+    floatingip:
+        required: False
+        default: None
+        description: Number of floating IP's to allow in Network.
+        aliases: ['network_floating_ips']
     gigabytes:
         required: False
         default: None
@@ -202,6 +208,7 @@ EXAMPLES = '''
     cores: "{{ item.cores }}"
     fixed_ips: "{{ item.fixed_ips }}"
     floating_ips: "{{ item.floating_ips }}"
+    floatingip: "{{ item.floatingip }}"
     gigabytes: "{{ item.gigabytes }}"
     injected_file_size: "{{ item.injected_file_size }}"
     injected_files: "{{ item.injected_files }}"
@@ -372,7 +379,8 @@ def main():
         backups=dict(required=False, type='int', default=None),
         cores=dict(required=False, type='int', default=None),
         fixed_ips=dict(required=False, type='int', default=None),
-        floating_ips=dict(required=False, type='int', default=None),
+        floating_ips=dict(required=False, type='int', default=None, aliases=['compute_floating_ips']),
+        floatingip=dict(required=False, type='int', default=None, aliases=['network_floating_ips']),
         gigabytes=dict(required=False, type='int', default=None),
         gigabytes_types=dict(required=False, type='dict', default={}),
         injected_file_size=dict(required=False, type='int', default=None),
