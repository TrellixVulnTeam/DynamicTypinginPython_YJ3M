commit b89f22202812b695d047594404904e4a2233a6ba
Author: Albert Mikaelyan <tahvok@gmail.com>
Date:   Tue Jan 31 17:54:10 2017 +0200

    Some better explanation to release cycle

diff --git a/docs/docsite/rst/dev_guide/developing_releases.rst b/docs/docsite/rst/dev_guide/developing_releases.rst
index 4e5acccd27..dfefc6146f 100644
--- a/docs/docsite/rst/dev_guide/developing_releases.rst
+++ b/docs/docsite/rst/dev_guide/developing_releases.rst
@@ -19,10 +19,10 @@ If you are on a release older than the last two major, stable releases, please s
 Release schedule
 ````````````````
 Ansible is on a 'flexible' 4 month release schedule, sometimes this can be extended if there is a major change that requires a longer cycle (i.e. 2.0 core rewrite).
-Currently modules get released at the same time as the main Ansible repo, even though they are separated into ansible-modules-core and ansible-modules-extras.
+Recently the main Ansible repo `merged <https://docs.ansible.com/ansible/dev_guide/repomerge.html>`_ the separated ansible-modules-core and ansible-modules-extras, as such modules get released at the same time as the main Ansible repo.
 
-The major features and bugs fixed in a release should be reflected in the CHANGELOG.md, minor ones will be in the commit history (FIXME: add git example to list).
-When a fix/feature gets added to the `devel` branch it will be part of the next release, some bugfixes can be backported to previous releases and might be part of a minor point release if it is deemed necessary.
+The major features and bugs fixed in a release should be reflected in the `CHANGELOG.md <https://github.com/ansible/ansible/blob/devel/CHANGELOG.md>`_, minor ones will be in the commit history. For example, `issue #19057 <https://github.com/ansible/ansible/pull/19057>`_ is reflected only in the commit hitsory.
+When a fix/feature gets added to the `devel` branch it will be part of the next release, some bugfixes can be backported to previous releases and will be part of a minor point release if such release is deemed necessary.
 
 Sometimes an RC can be extended by a few days if a bugfix makes a change that can have far reaching consequences, so users have enough time to find any new issues that may stem from this.
 
