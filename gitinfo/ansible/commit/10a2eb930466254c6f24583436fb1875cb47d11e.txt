commit 10a2eb930466254c6f24583436fb1875cb47d11e
Author: Tobias Rueetschi <tr@brief.li>
Date:   Wed Aug 31 11:30:45 2016 +0200

    udm_user: change code to fit documentation with snake_case instead of camelCase

diff --git a/lib/ansible/modules/extras/univention/udm_user.py b/lib/ansible/modules/extras/univention/udm_user.py
index d18c386a08..11213e465a 100644
--- a/lib/ansible/modules/extras/univention/udm_user.py
+++ b/lib/ansible/modules/extras/univention/udm_user.py
@@ -341,46 +341,58 @@ def main():
                                            type='str'),
             country                 = dict(default=None,
                                            type='str'),
-            departmentNumber        = dict(default=None,
-                                           type='str'),
+            department_number       = dict(default=None,
+                                           type='str',
+                                           aliases=['departmentNumber']),
             description             = dict(default=None,
                                            type='str'),
-            displayName             = dict(default=None,
-                                           type='str'),
+            display_name            = dict(default=None,
+                                           type='str',
+                                           aliases=['displayName']),
             email                   = dict(default=[''],
                                            type='list'),
-            employeeNumber          = dict(default=None,
-                                           type='str'),
-            employeeType            = dict(default=None,
-                                           type='str'),
+            employee_number         = dict(default=None,
+                                           type='str',
+                                           aliases=['employeeNumber']),
+            employee_type           = dict(default=None,
+                                           type='str',
+                                           aliases=['employeeType']),
             firstname               = dict(default=None,
                                            type='str'),
             gecos                   = dict(default=None,
                                            type='str'),
             groups                  = dict(default=[],
                                            type='list'),
-            homeShare               = dict(default=None,
-                                           type='str'),
-            homeSharePath           = dict(default=None,
-                                           type='str'),
-            homeTelephoneNumber     = dict(default=[],
-                                           type='list'),
+            home_share              = dict(default=None,
+                                           type='str',
+                                           aliases=['homeShare']),
+            home_share_path         = dict(default=None,
+                                           type='str',
+                                           aliases=['homeSharePath']),
+            home_telephone_number   = dict(default=[],
+                                           type='list',
+                                           aliases=['homeTelephoneNumber']),
             homedrive               = dict(default=None,
                                            type='str'),
             lastname                = dict(default=None,
                                            type='str'),
-            mailAlternativeAddress  = dict(default=[],
-                                           type='list'),
-            mailHomeServer          = dict(default=None,
-                                           type='str'),
-            mailPrimaryAddress      = dict(default=None,
-                                           type='str'),
-            mobileTelephoneNumber   = dict(default=[],
-                                           type='list'),
+            mail_alternative_address= dict(default=[],
+                                           type='list',
+                                           aliases=['mailAlternativeAddress']),
+            mail_home_server        = dict(default=None,
+                                           type='str',
+                                           aliases=['mailHomeServer']),
+            mail_primary_address    = dict(default=None,
+                                           type='str',
+                                           aliases=['mailPrimaryAddress']),
+            mobile_telephone_number = dict(default=[],
+                                           type='list',
+                                           aliases=['mobileTelephoneNumber']),
             organisation            = dict(default=None,
                                            type='str'),
-            pagerTelephonenumber    = dict(default=[],
-                                           type='list'),
+            pager_telephonenumber   = dict(default=[],
+                                           type='list',
+                                           aliases=['pagerTelephonenumber']),
             password                = dict(default=None,
                                            type='str',
                                            no_log=True),
@@ -388,19 +400,24 @@ def main():
                                            type='list'),
             postcode                = dict(default=None,
                                            type='str'),
-            primaryGroup            = dict(default=None,
-                                           type='str'),
+            primary_group           = dict(default=None,
+                                           type='str',
+                                           aliases=['primaryGroup']),
             profilepath             = dict(default=None,
                                            type='str'),
-            pwdChangeNextLogin      = dict(default=None,
+            pwd_change_next_login   = dict(default=None,
                                            type='str',
-                                           choices=['0', '1']),
-            roomNumber              = dict(default=None,
-                                           type='str'),
-            sambaPrivileges         = dict(default=[],
-                                           type='list'),
-            sambaUserWorkstations   = dict(default=[],
-                                           type='list'),
+                                           choices=['0', '1'],
+                                           aliases=['pwdChangeNextLogin']),
+            room_number             = dict(default=None,
+                                           type='str',
+                                           aliases=['roomNumber']),
+            samba_privileges        = dict(default=[],
+                                           type='list',
+                                           aliases=['sambaPrivileges']),
+            samba_user_workstations = dict(default=[],
+                                           type='list',
+                                           aliases=['sambaUserWorkstations']),
             sambahome               = dict(default=None,
                                            type='str'),
             scriptpath              = dict(default=None,
