commit b9dd3568f3f38388abaaf8b5edcb76a2efb2b1d1
Author: Dreamcat4 <dreamcat4@gmail.com>
Date:   Mon Oct 5 21:10:59 2015 +0100

    fix: fw rule names must always be quoted, to permit spaces ' ' and brackets '()'
    
    Without this fix, the 'netsh' command gets name=Firewall Rule Name instead of name="Firewall Rule Name". Thus causing all sorts of havoc. Basic shell quoting rules seems to apply to Windows Powershell too. This is very much needed as many of windows 10's default firewall rules contain spaces and brackets () characters.

diff --git a/lib/ansible/modules/extras/windows/win_firewall_rule.ps1 b/lib/ansible/modules/extras/windows/win_firewall_rule.ps1
index 223d8b17b6..9c73507509 100644
--- a/lib/ansible/modules/extras/windows/win_firewall_rule.ps1
+++ b/lib/ansible/modules/extras/windows/win_firewall_rule.ps1
@@ -24,7 +24,7 @@ function getFirewallRule ($fwsettings) {
     try {
             
         #$output = Get-NetFirewallRule -name $($fwsettings.name);
-        $rawoutput=@(netsh advfirewall firewall show rule name=$($fwsettings.Name))
+        $rawoutput=@(netsh advfirewall firewall show rule name="$($fwsettings.Name)")
         if (!($rawoutput -eq 'No rules match the specified criteria.')){
             $rawoutput | Where {$_ -match '^([^:]+):\s*(\S.*)$'} | Foreach -Begin {
                     $FirstRun = $true;
@@ -123,8 +123,9 @@ function createFireWallRule ($fwsettings) {
         $execString+=" ";
         $execString+=$key;
         $execString+="=";
+        $execString+='"';
         $execString+=$fwsetting.value;
-        #$execString+="'";
+        $execString+='"';
     };
     try {
         #$msg+=@($execString);
@@ -152,7 +153,7 @@ function createFireWallRule ($fwsettings) {
 function removeFireWallRule ($fwsettings) {
     $msg=@()
     try {
-        $rawoutput=@(netsh advfirewall firewall delete rule name=$($fwsettings.name))
+        $rawoutput=@(netsh advfirewall firewall delete rule name="$($fwsettings.name)")
         $rawoutput | Where {$_ -match '^([^:]+):\s*(\S.*)$'} | Foreach -Begin {
                 $FirstRun = $true;
                 $HashProps = @{};
