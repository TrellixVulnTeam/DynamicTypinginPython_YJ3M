commit 5d7cc993dde8ef32fafb606747be0ef03d31dc82
Author: Matt Clay <matt@mystile.com>
Date:   Mon Jul 29 14:37:44 2019 -0700

    Clean up sanity test ignore handling. (#59749)
    
    * Allow sanity tests to easily ignore themselves.
    
    Useful for simple regex based sanity tests that error on their own script due to the regex or error message generated.
    
    * Simplify no-smart-quotes sanity test.
    
    Pruning of unversioned directories is handled by ansible-test.
    
    * Remove directory pruning from boilerplate tests.
    
    Files not passing these tests should be ignored instead.
    
    * Add missing sanity ignore entries.

diff --git a/test/runner/lib/sanity/__init__.py b/test/runner/lib/sanity/__init__.py
index 78af369463..66be78a6ea 100644
--- a/test/runner/lib/sanity/__init__.py
+++ b/test/runner/lib/sanity/__init__.py
@@ -577,6 +577,7 @@ class SanityCodeSmellTest(SanityTest):
             always = self.config.get('always')
             text = self.config.get('text')
             ignore_changes = self.config.get('ignore_changes')
+            ignore_self = self.config.get('ignore_self')
 
             if output == 'path-line-column-message':
                 pattern = '^(?P<path>[^:]*):(?P<line>[0-9]+):(?P<column>[0-9]+): (?P<message>.*)$'
@@ -609,6 +610,12 @@ class SanityCodeSmellTest(SanityTest):
             if files:
                 paths = [p for p in paths if os.path.basename(p) in files]
 
+            if ignore_self and data_context().content.is_ansible:
+                relative_self_path = os.path.relpath(self.path, data_context().content.root)
+
+                if relative_self_path in paths:
+                    paths.remove(relative_self_path)
+
             paths = settings.filter_skipped_paths(paths)
 
             if not paths and not always:
diff --git a/test/sanity/code-smell/future-import-boilerplate.py b/test/sanity/code-smell/future-import-boilerplate.py
index 52e42bb24d..373fd4d6f2 100755
--- a/test/sanity/code-smell/future-import-boilerplate.py
+++ b/test/sanity/code-smell/future-import-boilerplate.py
@@ -6,21 +6,7 @@ import sys
 
 
 def main():
-    # We classify files in these directories as ones we don't care about fixing (at least for now)
-    prune = (
-        'contrib/inventory/',
-        'contrib/vault/',
-        'docs/',
-        'examples/',
-        'test/integration/',
-        'test/legacy/',
-        'test/units/',
-    )
-
     for path in sys.argv[1:] or sys.stdin.read().splitlines():
-        if any(path.startswith(p) for p in prune):
-            continue
-
         with open(path, 'rb') as path_fd:
             lines = path_fd.read().splitlines()
 
diff --git a/test/sanity/code-smell/metaclass-boilerplate.py b/test/sanity/code-smell/metaclass-boilerplate.py
index 6e14689152..cc211a3617 100755
--- a/test/sanity/code-smell/metaclass-boilerplate.py
+++ b/test/sanity/code-smell/metaclass-boilerplate.py
@@ -6,21 +6,7 @@ import sys
 
 
 def main():
-    # These files pre-date the boilerplate test and should be fixed up as time goes on
-    prune = (
-        'contrib/inventory/',
-        'contrib/vault/',
-        'docs/',
-        'examples/',
-        'test/integration/',
-        'test/legacy/',
-        'test/units/',
-    )
-
     for path in sys.argv[1:] or sys.stdin.read().splitlines():
-        if any(path.startswith(p) for p in prune):
-            continue
-
         with open(path, 'rb') as path_fd:
             lines = path_fd.read().splitlines()
 
diff --git a/test/sanity/code-smell/no-basestring.json b/test/sanity/code-smell/no-basestring.json
index 776590b74d..88858aeb61 100644
--- a/test/sanity/code-smell/no-basestring.json
+++ b/test/sanity/code-smell/no-basestring.json
@@ -2,5 +2,6 @@
     "extensions": [
         ".py"
     ],
+    "ignore_self": true,
     "output": "path-line-column-message"
 }
diff --git a/test/sanity/code-smell/no-basestring.py b/test/sanity/code-smell/no-basestring.py
index 25704bd186..a35650efad 100755
--- a/test/sanity/code-smell/no-basestring.py
+++ b/test/sanity/code-smell/no-basestring.py
@@ -2,20 +2,12 @@
 from __future__ import (absolute_import, division, print_function)
 __metaclass__ = type
 
-import os
 import re
 import sys
 
 
 def main():
-    skip = set([
-        'test/sanity/code-smell/%s' % os.path.basename(__file__),
-    ])
-
     for path in sys.argv[1:] or sys.stdin.read().splitlines():
-        if path in skip:
-            continue
-
         with open(path, 'r') as path_fd:
             for line, text in enumerate(path_fd.readlines()):
                 match = re.search(r'(isinstance.*basestring)', text)
diff --git a/test/sanity/code-smell/no-dict-iteritems.json b/test/sanity/code-smell/no-dict-iteritems.json
index 776590b74d..88858aeb61 100644
--- a/test/sanity/code-smell/no-dict-iteritems.json
+++ b/test/sanity/code-smell/no-dict-iteritems.json
@@ -2,5 +2,6 @@
     "extensions": [
         ".py"
     ],
+    "ignore_self": true,
     "output": "path-line-column-message"
 }
diff --git a/test/sanity/code-smell/no-dict-iteritems.py b/test/sanity/code-smell/no-dict-iteritems.py
index 6f9111d204..e28b24f4a9 100755
--- a/test/sanity/code-smell/no-dict-iteritems.py
+++ b/test/sanity/code-smell/no-dict-iteritems.py
@@ -2,20 +2,12 @@
 from __future__ import (absolute_import, division, print_function)
 __metaclass__ = type
 
-import os
 import re
 import sys
 
 
 def main():
-    skip = set([
-        'test/sanity/code-smell/%s' % os.path.basename(__file__),
-    ])
-
     for path in sys.argv[1:] or sys.stdin.read().splitlines():
-        if path in skip:
-            continue
-
         with open(path, 'r') as path_fd:
             for line, text in enumerate(path_fd.readlines()):
                 match = re.search(r'(?<! six)\.(iteritems)', text)
diff --git a/test/sanity/code-smell/no-dict-iterkeys.json b/test/sanity/code-smell/no-dict-iterkeys.json
index 776590b74d..88858aeb61 100644
--- a/test/sanity/code-smell/no-dict-iterkeys.json
+++ b/test/sanity/code-smell/no-dict-iterkeys.json
@@ -2,5 +2,6 @@
     "extensions": [
         ".py"
     ],
+    "ignore_self": true,
     "output": "path-line-column-message"
 }
diff --git a/test/sanity/code-smell/no-dict-iterkeys.py b/test/sanity/code-smell/no-dict-iterkeys.py
index 25e3db0a16..237ee5b1c1 100755
--- a/test/sanity/code-smell/no-dict-iterkeys.py
+++ b/test/sanity/code-smell/no-dict-iterkeys.py
@@ -2,20 +2,12 @@
 from __future__ import (absolute_import, division, print_function)
 __metaclass__ = type
 
-import os
 import re
 import sys
 
 
 def main():
-    skip = set([
-        'test/sanity/code-smell/%s' % os.path.basename(__file__),
-    ])
-
     for path in sys.argv[1:] or sys.stdin.read().splitlines():
-        if path in skip:
-            continue
-
         with open(path, 'r') as path_fd:
             for line, text in enumerate(path_fd.readlines()):
                 match = re.search(r'\.(iterkeys)', text)
diff --git a/test/sanity/code-smell/no-dict-itervalues.json b/test/sanity/code-smell/no-dict-itervalues.json
index 776590b74d..88858aeb61 100644
--- a/test/sanity/code-smell/no-dict-itervalues.json
+++ b/test/sanity/code-smell/no-dict-itervalues.json
@@ -2,5 +2,6 @@
     "extensions": [
         ".py"
     ],
+    "ignore_self": true,
     "output": "path-line-column-message"
 }
diff --git a/test/sanity/code-smell/no-dict-itervalues.py b/test/sanity/code-smell/no-dict-itervalues.py
index b1db1f1071..4bf92ea990 100755
--- a/test/sanity/code-smell/no-dict-itervalues.py
+++ b/test/sanity/code-smell/no-dict-itervalues.py
@@ -2,20 +2,12 @@
 from __future__ import (absolute_import, division, print_function)
 __metaclass__ = type
 
-import os
 import re
 import sys
 
 
 def main():
-    skip = set([
-        'test/sanity/code-smell/%s' % os.path.basename(__file__),
-    ])
-
     for path in sys.argv[1:] or sys.stdin.read().splitlines():
-        if path in skip:
-            continue
-
         with open(path, 'r') as path_fd:
             for line, text in enumerate(path_fd.readlines()):
                 match = re.search(r'(?<! six)\.(itervalues)', text)
diff --git a/test/sanity/code-smell/no-get-exception.json b/test/sanity/code-smell/no-get-exception.json
index 776590b74d..88858aeb61 100644
--- a/test/sanity/code-smell/no-get-exception.json
+++ b/test/sanity/code-smell/no-get-exception.json
@@ -2,5 +2,6 @@
     "extensions": [
         ".py"
     ],
+    "ignore_self": true,
     "output": "path-line-column-message"
 }
diff --git a/test/sanity/code-smell/no-get-exception.py b/test/sanity/code-smell/no-get-exception.py
index 2666b24ee5..c925f5b729 100755
--- a/test/sanity/code-smell/no-get-exception.py
+++ b/test/sanity/code-smell/no-get-exception.py
@@ -2,22 +2,14 @@
 from __future__ import (absolute_import, division, print_function)
 __metaclass__ = type
 
-import os
 import re
 import sys
 
 
 def main():
-    skip = set([
-        'test/sanity/code-smell/%s' % os.path.basename(__file__),
-    ])
-
     basic_allow_once = True
 
     for path in sys.argv[1:] or sys.stdin.read().splitlines():
-        if path in skip:
-            continue
-
         with open(path, 'r') as path_fd:
             for line, text in enumerate(path_fd.readlines()):
                 match = re.search(r'([^a-zA-Z0-9_]get_exception[^a-zA-Z0-9_])', text)
diff --git a/test/sanity/code-smell/no-smart-quotes.json b/test/sanity/code-smell/no-smart-quotes.json
index 5648429eb0..54d9fff587 100644
--- a/test/sanity/code-smell/no-smart-quotes.json
+++ b/test/sanity/code-smell/no-smart-quotes.json
@@ -1,4 +1,5 @@
 {
     "text": true,
+    "ignore_self": true,
     "output": "path-line-column-message"
 }
diff --git a/test/sanity/code-smell/no-smart-quotes.py b/test/sanity/code-smell/no-smart-quotes.py
index 8d7862c554..e44005a55f 100755
--- a/test/sanity/code-smell/no-smart-quotes.py
+++ b/test/sanity/code-smell/no-smart-quotes.py
@@ -3,27 +3,12 @@
 from __future__ import (absolute_import, division, print_function)
 __metaclass__ = type
 
-import os
 import re
 import sys
 
 
 def main():
-    skip = set([
-        'test/sanity/code-smell/%s' % os.path.basename(__file__),
-    ])
-
-    prune = set([
-        'docs/docsite/_build/',
-    ])
-
     for path in sys.argv[1:] or sys.stdin.read().splitlines():
-        if path in skip:
-            continue
-
-        if any(path.startswith(p) for p in prune):
-            continue
-
         with open(path, 'rb') as path_fd:
             for line, text in enumerate(path_fd.readlines()):
                 try:
diff --git a/test/sanity/code-smell/no-unicode-literals.json b/test/sanity/code-smell/no-unicode-literals.json
index 776590b74d..88858aeb61 100644
--- a/test/sanity/code-smell/no-unicode-literals.json
+++ b/test/sanity/code-smell/no-unicode-literals.json
@@ -2,5 +2,6 @@
     "extensions": [
         ".py"
     ],
+    "ignore_self": true,
     "output": "path-line-column-message"
 }
diff --git a/test/sanity/code-smell/no-unicode-literals.py b/test/sanity/code-smell/no-unicode-literals.py
index 6241834dcd..e2201ab106 100755
--- a/test/sanity/code-smell/no-unicode-literals.py
+++ b/test/sanity/code-smell/no-unicode-literals.py
@@ -2,20 +2,12 @@
 from __future__ import (absolute_import, division, print_function)
 __metaclass__ = type
 
-import os
 import re
 import sys
 
 
 def main():
-    skip = set([
-        'test/sanity/code-smell/%s' % os.path.basename(__file__),
-    ])
-
     for path in sys.argv[1:] or sys.stdin.read().splitlines():
-        if path in skip:
-            continue
-
         with open(path, 'r') as path_fd:
             for line, text in enumerate(path_fd.readlines()):
                 match = re.search(r'(unicode_literals)', text)
diff --git a/test/sanity/code-smell/replace-urlopen.json b/test/sanity/code-smell/replace-urlopen.json
index 776590b74d..88858aeb61 100644
--- a/test/sanity/code-smell/replace-urlopen.json
+++ b/test/sanity/code-smell/replace-urlopen.json
@@ -2,5 +2,6 @@
     "extensions": [
         ".py"
     ],
+    "ignore_self": true,
     "output": "path-line-column-message"
 }
diff --git a/test/sanity/code-smell/replace-urlopen.py b/test/sanity/code-smell/replace-urlopen.py
index 45032ed275..b2de1ba85d 100755
--- a/test/sanity/code-smell/replace-urlopen.py
+++ b/test/sanity/code-smell/replace-urlopen.py
@@ -2,20 +2,12 @@
 from __future__ import (absolute_import, division, print_function)
 __metaclass__ = type
 
-import os
 import re
 import sys
 
 
 def main():
-    skip = set([
-        'test/sanity/code-smell/%s' % os.path.basename(__file__),
-    ])
-
     for path in sys.argv[1:] or sys.stdin.read().splitlines():
-        if path in skip:
-            continue
-
         with open(path, 'r') as path_fd:
             for line, text in enumerate(path_fd.readlines()):
                 match = re.search(r'^(?:[^#]*?)(urlopen)', text)
diff --git a/test/sanity/ignore.txt b/test/sanity/ignore.txt
index a426124358..764fd84648 100644
--- a/test/sanity/ignore.txt
+++ b/test/sanity/ignore.txt
@@ -1,8 +1,124 @@
+contrib/inventory/abiquo.py future-import-boilerplate
+contrib/inventory/abiquo.py metaclass-boilerplate
+contrib/inventory/apache-libcloud.py future-import-boilerplate
+contrib/inventory/apache-libcloud.py metaclass-boilerplate
+contrib/inventory/apstra_aos.py future-import-boilerplate
+contrib/inventory/apstra_aos.py metaclass-boilerplate
+contrib/inventory/azure_rm.py future-import-boilerplate
+contrib/inventory/azure_rm.py metaclass-boilerplate
+contrib/inventory/brook.py future-import-boilerplate
+contrib/inventory/brook.py metaclass-boilerplate
+contrib/inventory/cloudforms.py future-import-boilerplate
+contrib/inventory/cloudforms.py metaclass-boilerplate
+contrib/inventory/cloudstack.py future-import-boilerplate
+contrib/inventory/cloudstack.py metaclass-boilerplate
+contrib/inventory/cobbler.py future-import-boilerplate
+contrib/inventory/cobbler.py metaclass-boilerplate
+contrib/inventory/collins.py future-import-boilerplate
+contrib/inventory/collins.py metaclass-boilerplate
+contrib/inventory/consul_io.py future-import-boilerplate
+contrib/inventory/consul_io.py metaclass-boilerplate
+contrib/inventory/digital_ocean.py future-import-boilerplate
+contrib/inventory/digital_ocean.py metaclass-boilerplate
+contrib/inventory/docker.py future-import-boilerplate
+contrib/inventory/docker.py metaclass-boilerplate
+contrib/inventory/ec2.py future-import-boilerplate
+contrib/inventory/ec2.py metaclass-boilerplate
+contrib/inventory/fleet.py future-import-boilerplate
+contrib/inventory/fleet.py metaclass-boilerplate
+contrib/inventory/foreman.py future-import-boilerplate
+contrib/inventory/foreman.py metaclass-boilerplate
+contrib/inventory/freeipa.py future-import-boilerplate
+contrib/inventory/freeipa.py metaclass-boilerplate
+contrib/inventory/gce.py future-import-boilerplate
+contrib/inventory/gce.py metaclass-boilerplate
 contrib/inventory/gce.py pylint:blacklisted-name
+contrib/inventory/infoblox.py future-import-boilerplate
+contrib/inventory/infoblox.py metaclass-boilerplate
+contrib/inventory/jail.py future-import-boilerplate
+contrib/inventory/jail.py metaclass-boilerplate
+contrib/inventory/landscape.py future-import-boilerplate
+contrib/inventory/landscape.py metaclass-boilerplate
+contrib/inventory/libvirt_lxc.py future-import-boilerplate
+contrib/inventory/libvirt_lxc.py metaclass-boilerplate
+contrib/inventory/linode.py future-import-boilerplate
+contrib/inventory/linode.py metaclass-boilerplate
+contrib/inventory/lxc_inventory.py future-import-boilerplate
+contrib/inventory/lxc_inventory.py metaclass-boilerplate
+contrib/inventory/lxd.py future-import-boilerplate
+contrib/inventory/lxd.py metaclass-boilerplate
+contrib/inventory/mdt_dynamic_inventory.py future-import-boilerplate
+contrib/inventory/mdt_dynamic_inventory.py metaclass-boilerplate
+contrib/inventory/nagios_livestatus.py future-import-boilerplate
+contrib/inventory/nagios_livestatus.py metaclass-boilerplate
+contrib/inventory/nagios_ndo.py future-import-boilerplate
+contrib/inventory/nagios_ndo.py metaclass-boilerplate
+contrib/inventory/nsot.py future-import-boilerplate
+contrib/inventory/nsot.py metaclass-boilerplate
+contrib/inventory/openshift.py future-import-boilerplate
+contrib/inventory/openshift.py metaclass-boilerplate
+contrib/inventory/openstack_inventory.py future-import-boilerplate
+contrib/inventory/openstack_inventory.py metaclass-boilerplate
+contrib/inventory/openvz.py future-import-boilerplate
+contrib/inventory/openvz.py metaclass-boilerplate
+contrib/inventory/ovirt.py future-import-boilerplate
+contrib/inventory/ovirt.py metaclass-boilerplate
+contrib/inventory/ovirt4.py future-import-boilerplate
+contrib/inventory/ovirt4.py metaclass-boilerplate
+contrib/inventory/packet_net.py future-import-boilerplate
+contrib/inventory/packet_net.py metaclass-boilerplate
+contrib/inventory/proxmox.py future-import-boilerplate
+contrib/inventory/proxmox.py metaclass-boilerplate
+contrib/inventory/rackhd.py future-import-boilerplate
+contrib/inventory/rackhd.py metaclass-boilerplate
+contrib/inventory/rax.py future-import-boilerplate
+contrib/inventory/rax.py metaclass-boilerplate
+contrib/inventory/rudder.py future-import-boilerplate
+contrib/inventory/rudder.py metaclass-boilerplate
+contrib/inventory/scaleway.py future-import-boilerplate
+contrib/inventory/scaleway.py metaclass-boilerplate
+contrib/inventory/serf.py future-import-boilerplate
+contrib/inventory/serf.py metaclass-boilerplate
+contrib/inventory/softlayer.py future-import-boilerplate
+contrib/inventory/softlayer.py metaclass-boilerplate
+contrib/inventory/spacewalk.py future-import-boilerplate
+contrib/inventory/spacewalk.py metaclass-boilerplate
+contrib/inventory/ssh_config.py future-import-boilerplate
+contrib/inventory/ssh_config.py metaclass-boilerplate
+contrib/inventory/stacki.py future-import-boilerplate
+contrib/inventory/stacki.py metaclass-boilerplate
+contrib/inventory/vagrant.py future-import-boilerplate
+contrib/inventory/vagrant.py metaclass-boilerplate
+contrib/inventory/vbox.py future-import-boilerplate
+contrib/inventory/vbox.py metaclass-boilerplate
+contrib/inventory/vmware.py future-import-boilerplate
+contrib/inventory/vmware.py metaclass-boilerplate
+contrib/inventory/vmware_inventory.py future-import-boilerplate
+contrib/inventory/vmware_inventory.py metaclass-boilerplate
+contrib/inventory/zabbix.py future-import-boilerplate
+contrib/inventory/zabbix.py metaclass-boilerplate
+contrib/inventory/zone.py future-import-boilerplate
+contrib/inventory/zone.py metaclass-boilerplate
+contrib/vault/azure_vault.py future-import-boilerplate
+contrib/vault/azure_vault.py metaclass-boilerplate
+contrib/vault/vault-keyring-client.py future-import-boilerplate
+contrib/vault/vault-keyring-client.py metaclass-boilerplate
+contrib/vault/vault-keyring.py future-import-boilerplate
+contrib/vault/vault-keyring.py metaclass-boilerplate
+docs/bin/find-plugin-refs.py future-import-boilerplate
+docs/bin/find-plugin-refs.py metaclass-boilerplate
+docs/docsite/_extensions/pygments_lexer.py future-import-boilerplate
+docs/docsite/_extensions/pygments_lexer.py metaclass-boilerplate
+docs/docsite/_themes/sphinx_rtd_theme/__init__.py future-import-boilerplate
+docs/docsite/_themes/sphinx_rtd_theme/__init__.py metaclass-boilerplate
+docs/docsite/rst/conf.py future-import-boilerplate
+docs/docsite/rst/conf.py metaclass-boilerplate
 docs/docsite/rst/dev_guide/testing/sanity/no-smart-quotes.rst no-smart-quotes
 examples/scripts/ConfigureRemotingForAnsible.ps1 pslint:PSCustomUseLiteralPath
 examples/scripts/upgrade_to_ps3.ps1 pslint:PSCustomUseLiteralPath
 examples/scripts/upgrade_to_ps3.ps1 pslint:PSUseApprovedVerbs
+examples/scripts/uptime.py future-import-boilerplate
+examples/scripts/uptime.py metaclass-boilerplate
 hacking/aws_config/build_iam_policy_framework.py future-import-boilerplate
 hacking/aws_config/build_iam_policy_framework.py metaclass-boilerplate
 hacking/build-ansible.py shebang # only run by release engineers, Python 3.6+ required
@@ -5653,19 +5769,237 @@ lib/ansible/plugins/strategy/linear.py pylint:blacklisted-name
 lib/ansible/vars/hostvars.py pylint:blacklisted-name
 setup.py future-import-boilerplate
 setup.py metaclass-boilerplate
+test/integration/targets/ansible-runner/files/adhoc_example1.py future-import-boilerplate
+test/integration/targets/ansible-runner/files/adhoc_example1.py metaclass-boilerplate
+test/integration/targets/ansible-runner/files/playbook_example1.py future-import-boilerplate
+test/integration/targets/ansible-runner/files/playbook_example1.py metaclass-boilerplate
+test/integration/targets/async/library/async_test.py future-import-boilerplate
+test/integration/targets/async/library/async_test.py metaclass-boilerplate
+test/integration/targets/async_fail/library/async_test.py future-import-boilerplate
+test/integration/targets/async_fail/library/async_test.py metaclass-boilerplate
+test/integration/targets/aws_lambda/files/mini_lambda.py future-import-boilerplate
+test/integration/targets/aws_lambda/files/mini_lambda.py metaclass-boilerplate
+test/integration/targets/collections/collection_root_sys/ansible_collections/testns/coll_in_sys/plugins/modules/systestmodule.py future-import-boilerplate
+test/integration/targets/collections/collection_root_sys/ansible_collections/testns/coll_in_sys/plugins/modules/systestmodule.py metaclass-boilerplate
+test/integration/targets/collections/collection_root_sys/ansible_collections/testns/testcoll/plugins/modules/maskedmodule.py future-import-boilerplate
+test/integration/targets/collections/collection_root_sys/ansible_collections/testns/testcoll/plugins/modules/maskedmodule.py metaclass-boilerplate
+test/integration/targets/collections/collection_root_sys/ansible_collections/testns/testcoll/plugins/modules/testmodule.py future-import-boilerplate
+test/integration/targets/collections/collection_root_sys/ansible_collections/testns/testcoll/plugins/modules/testmodule.py metaclass-boilerplate
+test/integration/targets/collections/collection_root_user/ansible_collections/testns/testcoll/plugins/action/plugin_lookup.py future-import-boilerplate
+test/integration/targets/collections/collection_root_user/ansible_collections/testns/testcoll/plugins/action/plugin_lookup.py metaclass-boilerplate
+test/integration/targets/collections/collection_root_user/ansible_collections/testns/testcoll/plugins/callback/usercallback.py future-import-boilerplate
+test/integration/targets/collections/collection_root_user/ansible_collections/testns/testcoll/plugins/callback/usercallback.py metaclass-boilerplate
+test/integration/targets/collections/collection_root_user/ansible_collections/testns/testcoll/plugins/connection/localconn.py future-import-boilerplate
+test/integration/targets/collections/collection_root_user/ansible_collections/testns/testcoll/plugins/connection/localconn.py metaclass-boilerplate
+test/integration/targets/collections/collection_root_user/ansible_collections/testns/testcoll/plugins/doc_fragments/frag.py future-import-boilerplate
+test/integration/targets/collections/collection_root_user/ansible_collections/testns/testcoll/plugins/doc_fragments/frag.py metaclass-boilerplate
+test/integration/targets/collections/collection_root_user/ansible_collections/testns/testcoll/plugins/filter/myfilters.py future-import-boilerplate
+test/integration/targets/collections/collection_root_user/ansible_collections/testns/testcoll/plugins/filter/myfilters.py metaclass-boilerplate
+test/integration/targets/collections/collection_root_user/ansible_collections/testns/testcoll/plugins/lookup/mylookup.py future-import-boilerplate
+test/integration/targets/collections/collection_root_user/ansible_collections/testns/testcoll/plugins/lookup/mylookup.py metaclass-boilerplate
 test/integration/targets/collections/collection_root_user/ansible_collections/testns/testcoll/plugins/module_utils/MyPSMU.psm1 pslint:PSUseApprovedVerbs
+test/integration/targets/collections/collection_root_user/ansible_collections/testns/testcoll/plugins/module_utils/base.py future-import-boilerplate
+test/integration/targets/collections/collection_root_user/ansible_collections/testns/testcoll/plugins/module_utils/base.py metaclass-boilerplate
+test/integration/targets/collections/collection_root_user/ansible_collections/testns/testcoll/plugins/module_utils/leaf.py future-import-boilerplate
+test/integration/targets/collections/collection_root_user/ansible_collections/testns/testcoll/plugins/module_utils/leaf.py metaclass-boilerplate
+test/integration/targets/collections/collection_root_user/ansible_collections/testns/testcoll/plugins/module_utils/secondary.py future-import-boilerplate
+test/integration/targets/collections/collection_root_user/ansible_collections/testns/testcoll/plugins/module_utils/secondary.py metaclass-boilerplate
+test/integration/targets/collections/collection_root_user/ansible_collections/testns/testcoll/plugins/module_utils/subpkg/submod.py future-import-boilerplate
+test/integration/targets/collections/collection_root_user/ansible_collections/testns/testcoll/plugins/module_utils/subpkg/submod.py metaclass-boilerplate
+test/integration/targets/collections/collection_root_user/ansible_collections/testns/testcoll/plugins/module_utils/subpkg_with_init/__init__.py future-import-boilerplate
+test/integration/targets/collections/collection_root_user/ansible_collections/testns/testcoll/plugins/module_utils/subpkg_with_init/__init__.py metaclass-boilerplate
+test/integration/targets/collections/collection_root_user/ansible_collections/testns/testcoll/plugins/modules/ping.py future-import-boilerplate
+test/integration/targets/collections/collection_root_user/ansible_collections/testns/testcoll/plugins/modules/ping.py metaclass-boilerplate
+test/integration/targets/collections/collection_root_user/ansible_collections/testns/testcoll/plugins/modules/testmodule.py future-import-boilerplate
+test/integration/targets/collections/collection_root_user/ansible_collections/testns/testcoll/plugins/modules/testmodule.py metaclass-boilerplate
+test/integration/targets/collections/collection_root_user/ansible_collections/testns/testcoll/plugins/modules/uses_base_mu_granular_nested_import.py future-import-boilerplate
+test/integration/targets/collections/collection_root_user/ansible_collections/testns/testcoll/plugins/modules/uses_base_mu_granular_nested_import.py metaclass-boilerplate
+test/integration/targets/collections/collection_root_user/ansible_collections/testns/testcoll/plugins/modules/uses_leaf_mu_flat_import.py future-import-boilerplate
+test/integration/targets/collections/collection_root_user/ansible_collections/testns/testcoll/plugins/modules/uses_leaf_mu_flat_import.py metaclass-boilerplate
+test/integration/targets/collections/collection_root_user/ansible_collections/testns/testcoll/plugins/modules/uses_leaf_mu_granular_import.py future-import-boilerplate
+test/integration/targets/collections/collection_root_user/ansible_collections/testns/testcoll/plugins/modules/uses_leaf_mu_granular_import.py metaclass-boilerplate
+test/integration/targets/collections/collection_root_user/ansible_collections/testns/testcoll/plugins/modules/uses_leaf_mu_module_import_from.py future-import-boilerplate
+test/integration/targets/collections/collection_root_user/ansible_collections/testns/testcoll/plugins/modules/uses_leaf_mu_module_import_from.py metaclass-boilerplate
+test/integration/targets/collections/collection_root_user/ansible_collections/testns/testcoll/plugins/modules/win_selfcontained.py future-import-boilerplate
+test/integration/targets/collections/collection_root_user/ansible_collections/testns/testcoll/plugins/modules/win_selfcontained.py metaclass-boilerplate
+test/integration/targets/collections/collection_root_user/ansible_collections/testns/testcoll/plugins/test/mytests.py future-import-boilerplate
+test/integration/targets/collections/collection_root_user/ansible_collections/testns/testcoll/plugins/test/mytests.py metaclass-boilerplate
+test/integration/targets/collections/collections/ansible_collections/testns/content_adj/plugins/modules/contentadjmodule.py future-import-boilerplate
+test/integration/targets/collections/collections/ansible_collections/testns/content_adj/plugins/modules/contentadjmodule.py metaclass-boilerplate
+test/integration/targets/collections/library/ping.py future-import-boilerplate
+test/integration/targets/collections/library/ping.py metaclass-boilerplate
+test/integration/targets/expect/files/test_command.py future-import-boilerplate
+test/integration/targets/expect/files/test_command.py metaclass-boilerplate
+test/integration/targets/get_certificate/files/process_certs.py future-import-boilerplate
+test/integration/targets/get_certificate/files/process_certs.py metaclass-boilerplate
+test/integration/targets/get_url/files/testserver.py future-import-boilerplate
+test/integration/targets/get_url/files/testserver.py metaclass-boilerplate
+test/integration/targets/group/files/gidget.py future-import-boilerplate
+test/integration/targets/group/files/gidget.py metaclass-boilerplate
+test/integration/targets/ignore_unreachable/fake_connectors/bad_exec.py future-import-boilerplate
+test/integration/targets/ignore_unreachable/fake_connectors/bad_exec.py metaclass-boilerplate
+test/integration/targets/ignore_unreachable/fake_connectors/bad_put_file.py future-import-boilerplate
+test/integration/targets/ignore_unreachable/fake_connectors/bad_put_file.py metaclass-boilerplate
+test/integration/targets/inventory_aws_conformance/inventory_diff.py future-import-boilerplate
+test/integration/targets/inventory_aws_conformance/inventory_diff.py metaclass-boilerplate
+test/integration/targets/inventory_aws_conformance/lib/boto/__init__.py future-import-boilerplate
+test/integration/targets/inventory_aws_conformance/lib/boto/__init__.py metaclass-boilerplate
+test/integration/targets/inventory_aws_conformance/lib/boto/ec2/__init__.py future-import-boilerplate
+test/integration/targets/inventory_aws_conformance/lib/boto/ec2/__init__.py metaclass-boilerplate
+test/integration/targets/inventory_aws_conformance/lib/boto/elasticache/__init__.py future-import-boilerplate
+test/integration/targets/inventory_aws_conformance/lib/boto/elasticache/__init__.py metaclass-boilerplate
+test/integration/targets/inventory_aws_conformance/lib/boto/exception.py future-import-boilerplate
+test/integration/targets/inventory_aws_conformance/lib/boto/exception.py metaclass-boilerplate
+test/integration/targets/inventory_aws_conformance/lib/boto/exceptions.py future-import-boilerplate
+test/integration/targets/inventory_aws_conformance/lib/boto/exceptions.py metaclass-boilerplate
+test/integration/targets/inventory_aws_conformance/lib/boto/mocks/instances.py future-import-boilerplate
+test/integration/targets/inventory_aws_conformance/lib/boto/mocks/instances.py metaclass-boilerplate
+test/integration/targets/inventory_aws_conformance/lib/boto/session.py future-import-boilerplate
+test/integration/targets/inventory_aws_conformance/lib/boto/session.py metaclass-boilerplate
+test/integration/targets/inventory_cloudscale/filter_plugins/group_name.py future-import-boilerplate
+test/integration/targets/inventory_cloudscale/filter_plugins/group_name.py metaclass-boilerplate
+test/integration/targets/inventory_kubevirt_conformance/inventory_diff.py future-import-boilerplate
+test/integration/targets/inventory_kubevirt_conformance/inventory_diff.py metaclass-boilerplate
+test/integration/targets/inventory_kubevirt_conformance/server.py future-import-boilerplate
+test/integration/targets/inventory_kubevirt_conformance/server.py metaclass-boilerplate
+test/integration/targets/jinja2_native_types/filter_plugins/native_plugins.py future-import-boilerplate
+test/integration/targets/jinja2_native_types/filter_plugins/native_plugins.py metaclass-boilerplate
+test/integration/targets/lambda_policy/files/mini_http_lambda.py future-import-boilerplate
+test/integration/targets/lambda_policy/files/mini_http_lambda.py metaclass-boilerplate
 test/integration/targets/lookup_properties/lookup-8859-15.ini no-smart-quotes
+test/integration/targets/module_precedence/lib_with_extension/ping.py future-import-boilerplate
+test/integration/targets/module_precedence/lib_with_extension/ping.py metaclass-boilerplate
+test/integration/targets/module_precedence/multiple_roles/bar/library/ping.py future-import-boilerplate
+test/integration/targets/module_precedence/multiple_roles/bar/library/ping.py metaclass-boilerplate
+test/integration/targets/module_precedence/multiple_roles/foo/library/ping.py future-import-boilerplate
+test/integration/targets/module_precedence/multiple_roles/foo/library/ping.py metaclass-boilerplate
+test/integration/targets/module_precedence/roles_with_extension/foo/library/ping.py future-import-boilerplate
+test/integration/targets/module_precedence/roles_with_extension/foo/library/ping.py metaclass-boilerplate
+test/integration/targets/module_utils/library/test.py future-import-boilerplate
+test/integration/targets/module_utils/library/test.py metaclass-boilerplate
+test/integration/targets/module_utils/library/test_env_override.py future-import-boilerplate
+test/integration/targets/module_utils/library/test_env_override.py metaclass-boilerplate
+test/integration/targets/module_utils/library/test_failure.py future-import-boilerplate
+test/integration/targets/module_utils/library/test_failure.py metaclass-boilerplate
+test/integration/targets/module_utils/library/test_override.py future-import-boilerplate
+test/integration/targets/module_utils/library/test_override.py metaclass-boilerplate
+test/integration/targets/module_utils/module_utils/a/b/c/d/e/f/g/h/__init__.py future-import-boilerplate
+test/integration/targets/module_utils/module_utils/a/b/c/d/e/f/g/h/__init__.py metaclass-boilerplate
+test/integration/targets/module_utils/module_utils/bar0/foo.py future-import-boilerplate
+test/integration/targets/module_utils/module_utils/bar0/foo.py metaclass-boilerplate
 test/integration/targets/module_utils/module_utils/bar0/foo.py pylint:blacklisted-name
+test/integration/targets/module_utils/module_utils/bar1/__init__.py future-import-boilerplate
+test/integration/targets/module_utils/module_utils/bar1/__init__.py metaclass-boilerplate
+test/integration/targets/module_utils/module_utils/bar2/__init__.py future-import-boilerplate
+test/integration/targets/module_utils/module_utils/bar2/__init__.py metaclass-boilerplate
+test/integration/targets/module_utils/module_utils/baz1/one.py future-import-boilerplate
+test/integration/targets/module_utils/module_utils/baz1/one.py metaclass-boilerplate
+test/integration/targets/module_utils/module_utils/baz2/one.py future-import-boilerplate
+test/integration/targets/module_utils/module_utils/baz2/one.py metaclass-boilerplate
+test/integration/targets/module_utils/module_utils/facts.py future-import-boilerplate
+test/integration/targets/module_utils/module_utils/facts.py metaclass-boilerplate
+test/integration/targets/module_utils/module_utils/foo.py future-import-boilerplate
+test/integration/targets/module_utils/module_utils/foo.py metaclass-boilerplate
 test/integration/targets/module_utils/module_utils/foo.py pylint:blacklisted-name
+test/integration/targets/module_utils/module_utils/foo0.py future-import-boilerplate
+test/integration/targets/module_utils/module_utils/foo0.py metaclass-boilerplate
+test/integration/targets/module_utils/module_utils/foo1.py future-import-boilerplate
+test/integration/targets/module_utils/module_utils/foo1.py metaclass-boilerplate
+test/integration/targets/module_utils/module_utils/foo2.py future-import-boilerplate
+test/integration/targets/module_utils/module_utils/foo2.py metaclass-boilerplate
+test/integration/targets/module_utils/module_utils/qux1/quux.py future-import-boilerplate
+test/integration/targets/module_utils/module_utils/qux1/quux.py metaclass-boilerplate
+test/integration/targets/module_utils/module_utils/qux2/quux.py future-import-boilerplate
+test/integration/targets/module_utils/module_utils/qux2/quux.py metaclass-boilerplate
+test/integration/targets/module_utils/module_utils/qux2/quuz.py future-import-boilerplate
+test/integration/targets/module_utils/module_utils/qux2/quuz.py metaclass-boilerplate
+test/integration/targets/module_utils/module_utils/service.py future-import-boilerplate
+test/integration/targets/module_utils/module_utils/service.py metaclass-boilerplate
+test/integration/targets/module_utils/module_utils/spam1/ham/eggs/__init__.py future-import-boilerplate
+test/integration/targets/module_utils/module_utils/spam1/ham/eggs/__init__.py metaclass-boilerplate
+test/integration/targets/module_utils/module_utils/spam2/ham/eggs/__init__.py future-import-boilerplate
+test/integration/targets/module_utils/module_utils/spam2/ham/eggs/__init__.py metaclass-boilerplate
+test/integration/targets/module_utils/module_utils/spam3/ham/bacon.py future-import-boilerplate
+test/integration/targets/module_utils/module_utils/spam3/ham/bacon.py metaclass-boilerplate
+test/integration/targets/module_utils/module_utils/spam4/ham/bacon.py future-import-boilerplate
+test/integration/targets/module_utils/module_utils/spam4/ham/bacon.py metaclass-boilerplate
+test/integration/targets/module_utils/module_utils/spam5/ham/bacon.py future-import-boilerplate
+test/integration/targets/module_utils/module_utils/spam5/ham/bacon.py metaclass-boilerplate
+test/integration/targets/module_utils/module_utils/spam5/ham/eggs.py future-import-boilerplate
+test/integration/targets/module_utils/module_utils/spam5/ham/eggs.py metaclass-boilerplate
+test/integration/targets/module_utils/module_utils/spam6/ham/__init__.py future-import-boilerplate
+test/integration/targets/module_utils/module_utils/spam6/ham/__init__.py metaclass-boilerplate
+test/integration/targets/module_utils/module_utils/spam7/ham/__init__.py future-import-boilerplate
+test/integration/targets/module_utils/module_utils/spam7/ham/__init__.py metaclass-boilerplate
+test/integration/targets/module_utils/module_utils/spam7/ham/bacon.py future-import-boilerplate
+test/integration/targets/module_utils/module_utils/spam7/ham/bacon.py metaclass-boilerplate
+test/integration/targets/module_utils/module_utils/spam8/ham/__init__.py future-import-boilerplate
+test/integration/targets/module_utils/module_utils/spam8/ham/__init__.py metaclass-boilerplate
+test/integration/targets/module_utils/module_utils/spam8/ham/bacon.py future-import-boilerplate
+test/integration/targets/module_utils/module_utils/spam8/ham/bacon.py metaclass-boilerplate
+test/integration/targets/module_utils/module_utils/sub/bam.py future-import-boilerplate
+test/integration/targets/module_utils/module_utils/sub/bam.py metaclass-boilerplate
+test/integration/targets/module_utils/module_utils/sub/bam/bam.py future-import-boilerplate
+test/integration/targets/module_utils/module_utils/sub/bam/bam.py metaclass-boilerplate
 test/integration/targets/module_utils/module_utils/sub/bar/__init__.py pylint:blacklisted-name
+test/integration/targets/module_utils/module_utils/sub/bar/bam.py future-import-boilerplate
+test/integration/targets/module_utils/module_utils/sub/bar/bam.py metaclass-boilerplate
+test/integration/targets/module_utils/module_utils/sub/bar/bar.py future-import-boilerplate
+test/integration/targets/module_utils/module_utils/sub/bar/bar.py metaclass-boilerplate
 test/integration/targets/module_utils/module_utils/sub/bar/bar.py pylint:blacklisted-name
+test/integration/targets/module_utils/module_utils/yak/zebra/foo.py future-import-boilerplate
+test/integration/targets/module_utils/module_utils/yak/zebra/foo.py metaclass-boilerplate
 test/integration/targets/module_utils/module_utils/yak/zebra/foo.py pylint:blacklisted-name
+test/integration/targets/module_utils/other_mu_dir/a/b/c/d/e/f/g/h/__init__.py future-import-boilerplate
+test/integration/targets/module_utils/other_mu_dir/a/b/c/d/e/f/g/h/__init__.py metaclass-boilerplate
+test/integration/targets/module_utils/other_mu_dir/facts.py future-import-boilerplate
+test/integration/targets/module_utils/other_mu_dir/facts.py metaclass-boilerplate
+test/integration/targets/module_utils/other_mu_dir/json_utils.py future-import-boilerplate
+test/integration/targets/module_utils/other_mu_dir/json_utils.py metaclass-boilerplate
+test/integration/targets/module_utils/other_mu_dir/mork.py future-import-boilerplate
+test/integration/targets/module_utils/other_mu_dir/mork.py metaclass-boilerplate
 test/integration/targets/old_style_modules_posix/library/helloworld.sh shebang
+test/integration/targets/pause/test-pause.py future-import-boilerplate
+test/integration/targets/pause/test-pause.py metaclass-boilerplate
+test/integration/targets/pip/files/ansible_test_pip_chdir/__init__.py future-import-boilerplate
+test/integration/targets/pip/files/ansible_test_pip_chdir/__init__.py metaclass-boilerplate
+test/integration/targets/pip/files/setup.py future-import-boilerplate
+test/integration/targets/pip/files/setup.py metaclass-boilerplate
+test/integration/targets/run_modules/library/test.py future-import-boilerplate
+test/integration/targets/run_modules/library/test.py metaclass-boilerplate
+test/integration/targets/s3_bucket_notification/files/mini_lambda.py future-import-boilerplate
+test/integration/targets/s3_bucket_notification/files/mini_lambda.py metaclass-boilerplate
+test/integration/targets/script/files/no_shebang.py future-import-boilerplate
+test/integration/targets/script/files/no_shebang.py metaclass-boilerplate
+test/integration/targets/service/files/ansible_test_service.py future-import-boilerplate
+test/integration/targets/service/files/ansible_test_service.py metaclass-boilerplate
+test/integration/targets/setup_rpm_repo/files/create-repo.py future-import-boilerplate
+test/integration/targets/setup_rpm_repo/files/create-repo.py metaclass-boilerplate
+test/integration/targets/sns_topic/files/sns_topic_lambda/sns_topic_lambda.py future-import-boilerplate
+test/integration/targets/sns_topic/files/sns_topic_lambda/sns_topic_lambda.py metaclass-boilerplate
+test/integration/targets/supervisorctl/files/sendProcessStdin.py future-import-boilerplate
+test/integration/targets/supervisorctl/files/sendProcessStdin.py metaclass-boilerplate
 test/integration/targets/template/files/encoding_1252_utf-8.expected no-smart-quotes
 test/integration/targets/template/files/encoding_1252_windows-1252.expected no-smart-quotes
 test/integration/targets/template/files/foo.dos.txt line-endings
+test/integration/targets/template/role_filter/filter_plugins/myplugin.py future-import-boilerplate
+test/integration/targets/template/role_filter/filter_plugins/myplugin.py metaclass-boilerplate
 test/integration/targets/template/templates/encoding_1252.j2 no-smart-quotes
+test/integration/targets/test_infra/library/test.py future-import-boilerplate
+test/integration/targets/test_infra/library/test.py metaclass-boilerplate
 test/integration/targets/unicode/unicode.yml no-smart-quotes
+test/integration/targets/uri/files/testserver.py future-import-boilerplate
+test/integration/targets/uri/files/testserver.py metaclass-boilerplate
+test/integration/targets/var_precedence/ansible-var-precedence-check.py future-import-boilerplate
+test/integration/targets/var_precedence/ansible-var-precedence-check.py metaclass-boilerplate
+test/integration/targets/vars_prompt/test-vars_prompt.py future-import-boilerplate
+test/integration/targets/vars_prompt/test-vars_prompt.py metaclass-boilerplate
+test/integration/targets/vault/test-vault-client.py future-import-boilerplate
+test/integration/targets/vault/test-vault-client.py metaclass-boilerplate
+test/integration/targets/wait_for/files/testserver.py future-import-boilerplate
+test/integration/targets/wait_for/files/testserver.py metaclass-boilerplate
+test/integration/targets/want_json_modules_posix/library/helloworld.py future-import-boilerplate
+test/integration/targets/want_json_modules_posix/library/helloworld.py metaclass-boilerplate
 test/integration/targets/win_audit_rule/library/test_get_audit_rule.ps1 pslint:PSCustomUseLiteralPath
 test/integration/targets/win_chocolatey/files/tools/chocolateyUninstall.ps1 pslint:PSCustomUseLiteralPath
 test/integration/targets/win_chocolatey_source/library/choco_source.ps1 pslint:PSCustomUseLiteralPath
@@ -5698,25 +6032,561 @@ test/integration/targets/win_script/files/test_script_with_splatting.ps1 pslint:
 test/integration/targets/win_stat/library/test_symlink_file.ps1 pslint:PSCustomUseLiteralPath
 test/integration/targets/win_template/files/foo.dos.txt line-endings
 test/integration/targets/win_user_right/library/test_get_right.ps1 pslint:PSCustomUseLiteralPath
+test/legacy/cleanup_ec2.py future-import-boilerplate
+test/legacy/cleanup_ec2.py metaclass-boilerplate
+test/legacy/cleanup_gce.py future-import-boilerplate
+test/legacy/cleanup_gce.py metaclass-boilerplate
 test/legacy/cleanup_gce.py pylint:blacklisted-name
+test/legacy/cleanup_rax.py future-import-boilerplate
+test/legacy/cleanup_rax.py metaclass-boilerplate
+test/legacy/consul_running.py future-import-boilerplate
+test/legacy/consul_running.py metaclass-boilerplate
+test/legacy/gce_credentials.py future-import-boilerplate
+test/legacy/gce_credentials.py metaclass-boilerplate
 test/legacy/gce_credentials.py pylint:blacklisted-name
+test/legacy/setup_gce.py future-import-boilerplate
+test/legacy/setup_gce.py metaclass-boilerplate
 test/runner/requirements/constraints.txt test-constraints
 test/runner/requirements/integration.cloud.azure.txt test-constraints
 test/runner/setup/windows-httptester.ps1 pslint:PSCustomUseLiteralPath
 test/sanity/pylint/plugins/string_format.py use-compat-six
+test/units/cli/arguments/test_optparse_helpers.py future-import-boilerplate
+test/units/config/manager/test_find_ini_config_file.py future-import-boilerplate
+test/units/contrib/inventory/test_vmware_inventory.py future-import-boilerplate
+test/units/contrib/inventory/test_vmware_inventory.py metaclass-boilerplate
 test/units/contrib/inventory/test_vmware_inventory.py pylint:blacklisted-name
 test/units/executor/test_play_iterator.py pylint:blacklisted-name
+test/units/mock/path.py future-import-boilerplate
+test/units/mock/path.py metaclass-boilerplate
+test/units/mock/yaml_helper.py future-import-boilerplate
+test/units/mock/yaml_helper.py metaclass-boilerplate
+test/units/module_utils/acme/test_acme.py future-import-boilerplate
+test/units/module_utils/acme/test_acme.py metaclass-boilerplate
+test/units/module_utils/aws/test_aws_module.py metaclass-boilerplate
+test/units/module_utils/basic/test__symbolic_mode_to_octal.py future-import-boilerplate
+test/units/module_utils/basic/test_deprecate_warn.py future-import-boilerplate
+test/units/module_utils/basic/test_deprecate_warn.py metaclass-boilerplate
+test/units/module_utils/basic/test_exit_json.py future-import-boilerplate
+test/units/module_utils/basic/test_get_file_attributes.py future-import-boilerplate
+test/units/module_utils/basic/test_heuristic_log_sanitize.py future-import-boilerplate
+test/units/module_utils/basic/test_run_command.py future-import-boilerplate
 test/units/module_utils/basic/test_run_command.py pylint:blacklisted-name
+test/units/module_utils/basic/test_safe_eval.py future-import-boilerplate
+test/units/module_utils/basic/test_tmpdir.py future-import-boilerplate
+test/units/module_utils/cloud/test_backoff.py future-import-boilerplate
+test/units/module_utils/cloud/test_backoff.py metaclass-boilerplate
+test/units/module_utils/common/test_dict_transformations.py future-import-boilerplate
+test/units/module_utils/common/test_dict_transformations.py metaclass-boilerplate
+test/units/module_utils/conftest.py future-import-boilerplate
+test/units/module_utils/conftest.py metaclass-boilerplate
+test/units/module_utils/docker/test_common.py future-import-boilerplate
+test/units/module_utils/docker/test_common.py metaclass-boilerplate
+test/units/module_utils/ec2/test_aws.py future-import-boilerplate
+test/units/module_utils/ec2/test_aws.py metaclass-boilerplate
+test/units/module_utils/facts/base.py future-import-boilerplate
+test/units/module_utils/facts/hardware/test_sunos_get_uptime_facts.py future-import-boilerplate
+test/units/module_utils/facts/hardware/test_sunos_get_uptime_facts.py metaclass-boilerplate
+test/units/module_utils/facts/network/test_generic_bsd.py future-import-boilerplate
+test/units/module_utils/facts/other/test_facter.py future-import-boilerplate
+test/units/module_utils/facts/other/test_ohai.py future-import-boilerplate
+test/units/module_utils/facts/system/test_lsb.py future-import-boilerplate
+test/units/module_utils/facts/test_ansible_collector.py future-import-boilerplate
+test/units/module_utils/facts/test_collector.py future-import-boilerplate
+test/units/module_utils/facts/test_collectors.py future-import-boilerplate
+test/units/module_utils/facts/test_facts.py future-import-boilerplate
+test/units/module_utils/facts/test_timeout.py future-import-boilerplate
+test/units/module_utils/facts/test_utils.py future-import-boilerplate
+test/units/module_utils/gcp/test_auth.py future-import-boilerplate
+test/units/module_utils/gcp/test_auth.py metaclass-boilerplate
+test/units/module_utils/gcp/test_gcp_utils.py future-import-boilerplate
+test/units/module_utils/gcp/test_gcp_utils.py metaclass-boilerplate
+test/units/module_utils/gcp/test_utils.py future-import-boilerplate
+test/units/module_utils/gcp/test_utils.py metaclass-boilerplate
+test/units/module_utils/hwc/test_dict_comparison.py future-import-boilerplate
+test/units/module_utils/hwc/test_dict_comparison.py metaclass-boilerplate
+test/units/module_utils/hwc/test_hwc_utils.py future-import-boilerplate
+test/units/module_utils/hwc/test_hwc_utils.py metaclass-boilerplate
+test/units/module_utils/json_utils/test_filter_non_json_lines.py future-import-boilerplate
+test/units/module_utils/net_tools/test_netbox.py future-import-boilerplate
+test/units/module_utils/net_tools/test_netbox.py metaclass-boilerplate
+test/units/module_utils/network/aci/test_aci.py future-import-boilerplate
+test/units/module_utils/network/aci/test_aci.py metaclass-boilerplate
+test/units/module_utils/network/avi/test_avi_api_utils.py future-import-boilerplate
+test/units/module_utils/network/avi/test_avi_api_utils.py metaclass-boilerplate
+test/units/module_utils/network/ftd/test_common.py future-import-boilerplate
+test/units/module_utils/network/ftd/test_common.py metaclass-boilerplate
+test/units/module_utils/network/ftd/test_configuration.py future-import-boilerplate
+test/units/module_utils/network/ftd/test_configuration.py metaclass-boilerplate
+test/units/module_utils/network/ftd/test_device.py future-import-boilerplate
+test/units/module_utils/network/ftd/test_device.py metaclass-boilerplate
+test/units/module_utils/network/ftd/test_fdm_swagger_parser.py future-import-boilerplate
+test/units/module_utils/network/ftd/test_fdm_swagger_parser.py metaclass-boilerplate
+test/units/module_utils/network/ftd/test_fdm_swagger_validator.py future-import-boilerplate
+test/units/module_utils/network/ftd/test_fdm_swagger_validator.py metaclass-boilerplate
+test/units/module_utils/network/ftd/test_fdm_swagger_with_real_data.py future-import-boilerplate
+test/units/module_utils/network/ftd/test_fdm_swagger_with_real_data.py metaclass-boilerplate
+test/units/module_utils/network/ftd/test_upsert_functionality.py future-import-boilerplate
+test/units/module_utils/network/ftd/test_upsert_functionality.py metaclass-boilerplate
+test/units/module_utils/network/nso/test_nso.py metaclass-boilerplate
+test/units/module_utils/parsing/test_convert_bool.py future-import-boilerplate
+test/units/module_utils/postgresql/test_postgres.py future-import-boilerplate
+test/units/module_utils/postgresql/test_postgres.py metaclass-boilerplate
+test/units/module_utils/remote_management/dellemc/test_ome.py future-import-boilerplate
+test/units/module_utils/remote_management/dellemc/test_ome.py metaclass-boilerplate
+test/units/module_utils/test_database.py future-import-boilerplate
+test/units/module_utils/test_database.py metaclass-boilerplate
+test/units/module_utils/test_distro.py future-import-boilerplate
+test/units/module_utils/test_distro.py metaclass-boilerplate
+test/units/module_utils/test_hetzner.py future-import-boilerplate
+test/units/module_utils/test_hetzner.py metaclass-boilerplate
+test/units/module_utils/test_kubevirt.py future-import-boilerplate
+test/units/module_utils/test_kubevirt.py metaclass-boilerplate
+test/units/module_utils/test_netapp.py future-import-boilerplate
+test/units/module_utils/test_text.py future-import-boilerplate
+test/units/module_utils/test_utm_utils.py future-import-boilerplate
+test/units/module_utils/test_utm_utils.py metaclass-boilerplate
 test/units/module_utils/urls/test_Request.py replace-urlopen
 test/units/module_utils/urls/test_fetch_url.py replace-urlopen
+test/units/module_utils/xenserver/FakeAnsibleModule.py future-import-boilerplate
+test/units/module_utils/xenserver/FakeAnsibleModule.py metaclass-boilerplate
+test/units/module_utils/xenserver/FakeXenAPI.py future-import-boilerplate
+test/units/module_utils/xenserver/FakeXenAPI.py metaclass-boilerplate
+test/units/modules/cloud/amazon/test_aws_api_gateway.py metaclass-boilerplate
+test/units/modules/cloud/amazon/test_aws_direct_connect_connection.py future-import-boilerplate
+test/units/modules/cloud/amazon/test_aws_direct_connect_connection.py metaclass-boilerplate
+test/units/modules/cloud/amazon/test_aws_direct_connect_link_aggregation_group.py future-import-boilerplate
+test/units/modules/cloud/amazon/test_aws_direct_connect_link_aggregation_group.py metaclass-boilerplate
+test/units/modules/cloud/amazon/test_aws_s3.py future-import-boilerplate
+test/units/modules/cloud/amazon/test_aws_s3.py metaclass-boilerplate
+test/units/modules/cloud/amazon/test_cloudformation.py future-import-boilerplate
+test/units/modules/cloud/amazon/test_cloudformation.py metaclass-boilerplate
+test/units/modules/cloud/amazon/test_data_pipeline.py future-import-boilerplate
+test/units/modules/cloud/amazon/test_data_pipeline.py metaclass-boilerplate
+test/units/modules/cloud/amazon/test_ec2_group.py future-import-boilerplate
+test/units/modules/cloud/amazon/test_ec2_group.py metaclass-boilerplate
+test/units/modules/cloud/amazon/test_ec2_utils.py future-import-boilerplate
+test/units/modules/cloud/amazon/test_ec2_utils.py metaclass-boilerplate
+test/units/modules/cloud/amazon/test_ec2_vpc_nat_gateway.py future-import-boilerplate
+test/units/modules/cloud/amazon/test_ec2_vpc_nat_gateway.py metaclass-boilerplate
 test/units/modules/cloud/amazon/test_ec2_vpc_nat_gateway.py pylint:blacklisted-name
+test/units/modules/cloud/amazon/test_ec2_vpc_vpn.py future-import-boilerplate
+test/units/modules/cloud/amazon/test_ec2_vpc_vpn.py metaclass-boilerplate
 test/units/modules/cloud/amazon/test_ec2_vpc_vpn.py pylint:blacklisted-name
+test/units/modules/cloud/amazon/test_iam_password_policy.py future-import-boilerplate
+test/units/modules/cloud/amazon/test_iam_password_policy.py metaclass-boilerplate
+test/units/modules/cloud/amazon/test_kinesis_stream.py future-import-boilerplate
+test/units/modules/cloud/amazon/test_kinesis_stream.py metaclass-boilerplate
+test/units/modules/cloud/amazon/test_lambda.py metaclass-boilerplate
+test/units/modules/cloud/amazon/test_lambda_policy.py metaclass-boilerplate
+test/units/modules/cloud/amazon/test_redshift_cross_region_snapshots.py future-import-boilerplate
+test/units/modules/cloud/amazon/test_redshift_cross_region_snapshots.py metaclass-boilerplate
+test/units/modules/cloud/amazon/test_route53_zone.py future-import-boilerplate
+test/units/modules/cloud/amazon/test_route53_zone.py metaclass-boilerplate
+test/units/modules/cloud/amazon/test_s3_bucket.py future-import-boilerplate
+test/units/modules/cloud/amazon/test_s3_bucket.py metaclass-boilerplate
+test/units/modules/cloud/amazon/test_s3_bucket_notification.py future-import-boilerplate
+test/units/modules/cloud/amazon/test_s3_bucket_notification.py metaclass-boilerplate
+test/units/modules/cloud/cloudstack/test_cs_traffic_type.py future-import-boilerplate
+test/units/modules/cloud/cloudstack/test_cs_traffic_type.py metaclass-boilerplate
+test/units/modules/cloud/docker/test_docker_container.py future-import-boilerplate
+test/units/modules/cloud/docker/test_docker_container.py metaclass-boilerplate
+test/units/modules/cloud/docker/test_docker_network.py future-import-boilerplate
+test/units/modules/cloud/docker/test_docker_network.py metaclass-boilerplate
+test/units/modules/cloud/docker/test_docker_swarm_service.py future-import-boilerplate
+test/units/modules/cloud/docker/test_docker_swarm_service.py metaclass-boilerplate
+test/units/modules/cloud/docker/test_docker_volume.py future-import-boilerplate
+test/units/modules/cloud/docker/test_docker_volume.py metaclass-boilerplate
+test/units/modules/cloud/google/test_gce_tag.py future-import-boilerplate
+test/units/modules/cloud/google/test_gce_tag.py metaclass-boilerplate
+test/units/modules/cloud/google/test_gcp_forwarding_rule.py future-import-boilerplate
+test/units/modules/cloud/google/test_gcp_forwarding_rule.py metaclass-boilerplate
+test/units/modules/cloud/google/test_gcp_url_map.py future-import-boilerplate
+test/units/modules/cloud/google/test_gcp_url_map.py metaclass-boilerplate
+test/units/modules/cloud/kubevirt/test_kubevirt_rs.py future-import-boilerplate
+test/units/modules/cloud/kubevirt/test_kubevirt_rs.py metaclass-boilerplate
+test/units/modules/cloud/kubevirt/test_kubevirt_vm.py future-import-boilerplate
+test/units/modules/cloud/kubevirt/test_kubevirt_vm.py metaclass-boilerplate
+test/units/modules/cloud/linode/conftest.py future-import-boilerplate
+test/units/modules/cloud/linode/conftest.py metaclass-boilerplate
+test/units/modules/cloud/linode/test_linode.py metaclass-boilerplate
+test/units/modules/cloud/linode_v4/conftest.py future-import-boilerplate
+test/units/modules/cloud/linode_v4/conftest.py metaclass-boilerplate
+test/units/modules/cloud/linode_v4/test_linode_v4.py metaclass-boilerplate
+test/units/modules/cloud/misc/test_terraform.py future-import-boilerplate
+test/units/modules/cloud/misc/test_terraform.py metaclass-boilerplate
+test/units/modules/cloud/misc/virt_net/conftest.py future-import-boilerplate
+test/units/modules/cloud/misc/virt_net/conftest.py metaclass-boilerplate
+test/units/modules/cloud/misc/virt_net/test_virt_net.py future-import-boilerplate
+test/units/modules/cloud/misc/virt_net/test_virt_net.py metaclass-boilerplate
+test/units/modules/cloud/openstack/test_os_server.py future-import-boilerplate
+test/units/modules/cloud/openstack/test_os_server.py metaclass-boilerplate
+test/units/modules/cloud/xenserver/FakeAnsibleModule.py future-import-boilerplate
+test/units/modules/cloud/xenserver/FakeAnsibleModule.py metaclass-boilerplate
+test/units/modules/cloud/xenserver/FakeXenAPI.py future-import-boilerplate
+test/units/modules/cloud/xenserver/FakeXenAPI.py metaclass-boilerplate
+test/units/modules/conftest.py future-import-boilerplate
+test/units/modules/conftest.py metaclass-boilerplate
+test/units/modules/crypto/test_luks_device.py future-import-boilerplate
+test/units/modules/crypto/test_luks_device.py metaclass-boilerplate
+test/units/modules/files/test_copy.py future-import-boilerplate
+test/units/modules/messaging/rabbitmq/test_rabbimq_user.py future-import-boilerplate
+test/units/modules/messaging/rabbitmq/test_rabbimq_user.py metaclass-boilerplate
+test/units/modules/monitoring/test_circonus_annotation.py future-import-boilerplate
+test/units/modules/monitoring/test_circonus_annotation.py metaclass-boilerplate
+test/units/modules/monitoring/test_icinga2_feature.py future-import-boilerplate
+test/units/modules/monitoring/test_icinga2_feature.py metaclass-boilerplate
+test/units/modules/monitoring/test_pagerduty.py future-import-boilerplate
+test/units/modules/monitoring/test_pagerduty.py metaclass-boilerplate
+test/units/modules/monitoring/test_pagerduty_alert.py future-import-boilerplate
+test/units/modules/monitoring/test_pagerduty_alert.py metaclass-boilerplate
+test/units/modules/net_tools/test_nmcli.py future-import-boilerplate
+test/units/modules/net_tools/test_nmcli.py metaclass-boilerplate
+test/units/modules/network/avi/test_avi_user.py future-import-boilerplate
+test/units/modules/network/avi/test_avi_user.py metaclass-boilerplate
+test/units/modules/network/checkpoint/test_checkpoint_access_rule.py future-import-boilerplate
+test/units/modules/network/checkpoint/test_checkpoint_access_rule.py metaclass-boilerplate
+test/units/modules/network/checkpoint/test_checkpoint_host.py future-import-boilerplate
+test/units/modules/network/checkpoint/test_checkpoint_host.py metaclass-boilerplate
+test/units/modules/network/checkpoint/test_checkpoint_session.py future-import-boilerplate
+test/units/modules/network/checkpoint/test_checkpoint_session.py metaclass-boilerplate
+test/units/modules/network/checkpoint/test_checkpoint_task_facts.py future-import-boilerplate
+test/units/modules/network/checkpoint/test_checkpoint_task_facts.py metaclass-boilerplate
+test/units/modules/network/checkpoint/test_cp_network.py future-import-boilerplate
+test/units/modules/network/checkpoint/test_cp_network.py metaclass-boilerplate
+test/units/modules/network/cloudvision/test_cv_server_provision.py future-import-boilerplate
+test/units/modules/network/cloudvision/test_cv_server_provision.py metaclass-boilerplate
+test/units/modules/network/cumulus/test_nclu.py future-import-boilerplate
+test/units/modules/network/cumulus/test_nclu.py metaclass-boilerplate
+test/units/modules/network/ftd/test_ftd_configuration.py future-import-boilerplate
+test/units/modules/network/ftd/test_ftd_configuration.py metaclass-boilerplate
+test/units/modules/network/ftd/test_ftd_file_download.py future-import-boilerplate
+test/units/modules/network/ftd/test_ftd_file_download.py metaclass-boilerplate
+test/units/modules/network/ftd/test_ftd_file_upload.py future-import-boilerplate
+test/units/modules/network/ftd/test_ftd_file_upload.py metaclass-boilerplate
+test/units/modules/network/ftd/test_ftd_install.py future-import-boilerplate
+test/units/modules/network/ftd/test_ftd_install.py metaclass-boilerplate
+test/units/modules/network/netscaler/netscaler_module.py future-import-boilerplate
+test/units/modules/network/netscaler/netscaler_module.py metaclass-boilerplate
+test/units/modules/network/netscaler/test_netscaler_cs_action.py future-import-boilerplate
+test/units/modules/network/netscaler/test_netscaler_cs_action.py metaclass-boilerplate
+test/units/modules/network/netscaler/test_netscaler_cs_policy.py future-import-boilerplate
+test/units/modules/network/netscaler/test_netscaler_cs_policy.py metaclass-boilerplate
+test/units/modules/network/netscaler/test_netscaler_cs_vserver.py future-import-boilerplate
+test/units/modules/network/netscaler/test_netscaler_cs_vserver.py metaclass-boilerplate
+test/units/modules/network/netscaler/test_netscaler_gslb_service.py future-import-boilerplate
+test/units/modules/network/netscaler/test_netscaler_gslb_service.py metaclass-boilerplate
+test/units/modules/network/netscaler/test_netscaler_gslb_site.py future-import-boilerplate
+test/units/modules/network/netscaler/test_netscaler_gslb_site.py metaclass-boilerplate
+test/units/modules/network/netscaler/test_netscaler_gslb_vserver.py future-import-boilerplate
+test/units/modules/network/netscaler/test_netscaler_gslb_vserver.py metaclass-boilerplate
+test/units/modules/network/netscaler/test_netscaler_lb_monitor.py future-import-boilerplate
+test/units/modules/network/netscaler/test_netscaler_lb_monitor.py metaclass-boilerplate
+test/units/modules/network/netscaler/test_netscaler_lb_vserver.py future-import-boilerplate
+test/units/modules/network/netscaler/test_netscaler_lb_vserver.py metaclass-boilerplate
+test/units/modules/network/netscaler/test_netscaler_module_utils.py future-import-boilerplate
+test/units/modules/network/netscaler/test_netscaler_module_utils.py metaclass-boilerplate
+test/units/modules/network/netscaler/test_netscaler_nitro_request.py future-import-boilerplate
+test/units/modules/network/netscaler/test_netscaler_nitro_request.py metaclass-boilerplate
+test/units/modules/network/netscaler/test_netscaler_save_config.py future-import-boilerplate
+test/units/modules/network/netscaler/test_netscaler_save_config.py metaclass-boilerplate
+test/units/modules/network/netscaler/test_netscaler_server.py future-import-boilerplate
+test/units/modules/network/netscaler/test_netscaler_server.py metaclass-boilerplate
+test/units/modules/network/netscaler/test_netscaler_service.py future-import-boilerplate
+test/units/modules/network/netscaler/test_netscaler_service.py metaclass-boilerplate
+test/units/modules/network/netscaler/test_netscaler_servicegroup.py future-import-boilerplate
+test/units/modules/network/netscaler/test_netscaler_servicegroup.py metaclass-boilerplate
+test/units/modules/network/netscaler/test_netscaler_ssl_certkey.py future-import-boilerplate
+test/units/modules/network/netscaler/test_netscaler_ssl_certkey.py metaclass-boilerplate
+test/units/modules/network/nso/nso_module.py metaclass-boilerplate
+test/units/modules/network/nso/test_nso_action.py metaclass-boilerplate
+test/units/modules/network/nso/test_nso_config.py metaclass-boilerplate
+test/units/modules/network/nso/test_nso_query.py metaclass-boilerplate
+test/units/modules/network/nso/test_nso_show.py metaclass-boilerplate
+test/units/modules/network/nso/test_nso_verify.py metaclass-boilerplate
+test/units/modules/network/nuage/nuage_module.py future-import-boilerplate
+test/units/modules/network/nuage/nuage_module.py metaclass-boilerplate
+test/units/modules/network/nuage/test_nuage_vspk.py future-import-boilerplate
+test/units/modules/network/nuage/test_nuage_vspk.py metaclass-boilerplate
+test/units/modules/network/nxos/test_nxos_acl_interface.py metaclass-boilerplate
+test/units/modules/network/radware/test_vdirect_commit.py future-import-boilerplate
+test/units/modules/network/radware/test_vdirect_commit.py metaclass-boilerplate
+test/units/modules/network/radware/test_vdirect_file.py future-import-boilerplate
+test/units/modules/network/radware/test_vdirect_file.py metaclass-boilerplate
+test/units/modules/network/radware/test_vdirect_runnable.py future-import-boilerplate
+test/units/modules/network/radware/test_vdirect_runnable.py metaclass-boilerplate
 test/units/modules/network/routeros/fixtures/system_package_print line-endings
+test/units/modules/notification/test_slack.py future-import-boilerplate
+test/units/modules/notification/test_slack.py metaclass-boilerplate
+test/units/modules/packaging/language/test_gem.py future-import-boilerplate
+test/units/modules/packaging/language/test_gem.py metaclass-boilerplate
+test/units/modules/packaging/language/test_pip.py future-import-boilerplate
+test/units/modules/packaging/language/test_pip.py metaclass-boilerplate
+test/units/modules/packaging/os/conftest.py future-import-boilerplate
+test/units/modules/packaging/os/conftest.py metaclass-boilerplate
+test/units/modules/packaging/os/test_apk.py future-import-boilerplate
+test/units/modules/packaging/os/test_apk.py metaclass-boilerplate
+test/units/modules/packaging/os/test_apt.py future-import-boilerplate
+test/units/modules/packaging/os/test_apt.py metaclass-boilerplate
 test/units/modules/packaging/os/test_apt.py pylint:blacklisted-name
+test/units/modules/packaging/os/test_rhn_channel.py future-import-boilerplate
+test/units/modules/packaging/os/test_rhn_channel.py metaclass-boilerplate
+test/units/modules/packaging/os/test_rhn_register.py future-import-boilerplate
+test/units/modules/packaging/os/test_rhn_register.py metaclass-boilerplate
+test/units/modules/packaging/os/test_yum.py future-import-boilerplate
+test/units/modules/packaging/os/test_yum.py metaclass-boilerplate
+test/units/modules/remote_management/dellemc/ome/test_ome_device_info.py future-import-boilerplate
+test/units/modules/remote_management/dellemc/ome/test_ome_device_info.py metaclass-boilerplate
+test/units/modules/remote_management/lxca/test_lxca_cmms.py future-import-boilerplate
+test/units/modules/remote_management/lxca/test_lxca_cmms.py metaclass-boilerplate
+test/units/modules/remote_management/lxca/test_lxca_nodes.py future-import-boilerplate
+test/units/modules/remote_management/lxca/test_lxca_nodes.py metaclass-boilerplate
+test/units/modules/remote_management/oneview/conftest.py future-import-boilerplate
+test/units/modules/remote_management/oneview/conftest.py metaclass-boilerplate
+test/units/modules/remote_management/oneview/hpe_test_utils.py future-import-boilerplate
+test/units/modules/remote_management/oneview/hpe_test_utils.py metaclass-boilerplate
+test/units/modules/remote_management/oneview/oneview_module_loader.py future-import-boilerplate
+test/units/modules/remote_management/oneview/oneview_module_loader.py metaclass-boilerplate
+test/units/modules/remote_management/oneview/test_oneview_datacenter_facts.py future-import-boilerplate
+test/units/modules/remote_management/oneview/test_oneview_datacenter_facts.py metaclass-boilerplate
+test/units/modules/remote_management/oneview/test_oneview_enclosure_facts.py future-import-boilerplate
+test/units/modules/remote_management/oneview/test_oneview_enclosure_facts.py metaclass-boilerplate
+test/units/modules/remote_management/oneview/test_oneview_ethernet_network.py future-import-boilerplate
+test/units/modules/remote_management/oneview/test_oneview_ethernet_network.py metaclass-boilerplate
+test/units/modules/remote_management/oneview/test_oneview_ethernet_network_facts.py future-import-boilerplate
+test/units/modules/remote_management/oneview/test_oneview_ethernet_network_facts.py metaclass-boilerplate
+test/units/modules/remote_management/oneview/test_oneview_fc_network.py future-import-boilerplate
+test/units/modules/remote_management/oneview/test_oneview_fc_network.py metaclass-boilerplate
+test/units/modules/remote_management/oneview/test_oneview_fc_network_facts.py future-import-boilerplate
+test/units/modules/remote_management/oneview/test_oneview_fc_network_facts.py metaclass-boilerplate
+test/units/modules/remote_management/oneview/test_oneview_fcoe_network.py future-import-boilerplate
+test/units/modules/remote_management/oneview/test_oneview_fcoe_network.py metaclass-boilerplate
+test/units/modules/remote_management/oneview/test_oneview_fcoe_network_facts.py future-import-boilerplate
+test/units/modules/remote_management/oneview/test_oneview_fcoe_network_facts.py metaclass-boilerplate
+test/units/modules/remote_management/oneview/test_oneview_logical_interconnect_group.py future-import-boilerplate
+test/units/modules/remote_management/oneview/test_oneview_logical_interconnect_group.py metaclass-boilerplate
+test/units/modules/remote_management/oneview/test_oneview_logical_interconnect_group_facts.py future-import-boilerplate
+test/units/modules/remote_management/oneview/test_oneview_logical_interconnect_group_facts.py metaclass-boilerplate
+test/units/modules/remote_management/oneview/test_oneview_network_set.py future-import-boilerplate
+test/units/modules/remote_management/oneview/test_oneview_network_set.py metaclass-boilerplate
+test/units/modules/remote_management/oneview/test_oneview_network_set_facts.py future-import-boilerplate
+test/units/modules/remote_management/oneview/test_oneview_network_set_facts.py metaclass-boilerplate
+test/units/modules/remote_management/oneview/test_oneview_san_manager.py future-import-boilerplate
+test/units/modules/remote_management/oneview/test_oneview_san_manager.py metaclass-boilerplate
+test/units/modules/remote_management/oneview/test_oneview_san_manager_facts.py future-import-boilerplate
+test/units/modules/remote_management/oneview/test_oneview_san_manager_facts.py metaclass-boilerplate
+test/units/modules/source_control/gitlab.py future-import-boilerplate
+test/units/modules/source_control/gitlab.py metaclass-boilerplate
+test/units/modules/source_control/test_bitbucket_access_key.py future-import-boilerplate
+test/units/modules/source_control/test_bitbucket_access_key.py metaclass-boilerplate
+test/units/modules/source_control/test_bitbucket_pipeline_key_pair.py future-import-boilerplate
+test/units/modules/source_control/test_bitbucket_pipeline_key_pair.py metaclass-boilerplate
+test/units/modules/source_control/test_bitbucket_pipeline_known_host.py future-import-boilerplate
+test/units/modules/source_control/test_bitbucket_pipeline_known_host.py metaclass-boilerplate
+test/units/modules/source_control/test_bitbucket_pipeline_variable.py future-import-boilerplate
+test/units/modules/source_control/test_bitbucket_pipeline_variable.py metaclass-boilerplate
+test/units/modules/source_control/test_gitlab_deploy_key.py future-import-boilerplate
+test/units/modules/source_control/test_gitlab_deploy_key.py metaclass-boilerplate
+test/units/modules/source_control/test_gitlab_group.py future-import-boilerplate
+test/units/modules/source_control/test_gitlab_group.py metaclass-boilerplate
+test/units/modules/source_control/test_gitlab_hook.py future-import-boilerplate
+test/units/modules/source_control/test_gitlab_hook.py metaclass-boilerplate
+test/units/modules/source_control/test_gitlab_project.py future-import-boilerplate
+test/units/modules/source_control/test_gitlab_project.py metaclass-boilerplate
+test/units/modules/source_control/test_gitlab_runner.py future-import-boilerplate
+test/units/modules/source_control/test_gitlab_runner.py metaclass-boilerplate
+test/units/modules/source_control/test_gitlab_user.py future-import-boilerplate
+test/units/modules/source_control/test_gitlab_user.py metaclass-boilerplate
+test/units/modules/storage/hpe3par/test_ss_3par_cpg.py future-import-boilerplate
+test/units/modules/storage/hpe3par/test_ss_3par_cpg.py metaclass-boilerplate
+test/units/modules/storage/netapp/test_na_elementsw_cluster_config.py future-import-boilerplate
+test/units/modules/storage/netapp/test_na_elementsw_cluster_config.py metaclass-boilerplate
+test/units/modules/storage/netapp/test_na_elementsw_cluster_snmp.py future-import-boilerplate
+test/units/modules/storage/netapp/test_na_elementsw_cluster_snmp.py metaclass-boilerplate
+test/units/modules/storage/netapp/test_na_elementsw_initiators.py future-import-boilerplate
+test/units/modules/storage/netapp/test_na_elementsw_initiators.py metaclass-boilerplate
+test/units/modules/storage/netapp/test_na_ontap_aggregate.py future-import-boilerplate
+test/units/modules/storage/netapp/test_na_ontap_aggregate.py metaclass-boilerplate
+test/units/modules/storage/netapp/test_na_ontap_autosupport.py future-import-boilerplate
+test/units/modules/storage/netapp/test_na_ontap_autosupport.py metaclass-boilerplate
+test/units/modules/storage/netapp/test_na_ontap_broadcast_domain.py future-import-boilerplate
+test/units/modules/storage/netapp/test_na_ontap_broadcast_domain.py metaclass-boilerplate
+test/units/modules/storage/netapp/test_na_ontap_cifs.py future-import-boilerplate
+test/units/modules/storage/netapp/test_na_ontap_cifs.py metaclass-boilerplate
+test/units/modules/storage/netapp/test_na_ontap_cifs_server.py future-import-boilerplate
+test/units/modules/storage/netapp/test_na_ontap_cifs_server.py metaclass-boilerplate
+test/units/modules/storage/netapp/test_na_ontap_cluster.py future-import-boilerplate
+test/units/modules/storage/netapp/test_na_ontap_cluster.py metaclass-boilerplate
+test/units/modules/storage/netapp/test_na_ontap_cluster_peer.py future-import-boilerplate
+test/units/modules/storage/netapp/test_na_ontap_cluster_peer.py metaclass-boilerplate
+test/units/modules/storage/netapp/test_na_ontap_command.py future-import-boilerplate
+test/units/modules/storage/netapp/test_na_ontap_command.py metaclass-boilerplate
+test/units/modules/storage/netapp/test_na_ontap_export_policy_rule.py future-import-boilerplate
+test/units/modules/storage/netapp/test_na_ontap_export_policy_rule.py metaclass-boilerplate
+test/units/modules/storage/netapp/test_na_ontap_firewall_policy.py future-import-boilerplate
+test/units/modules/storage/netapp/test_na_ontap_firewall_policy.py metaclass-boilerplate
+test/units/modules/storage/netapp/test_na_ontap_flexcache.py future-import-boilerplate
+test/units/modules/storage/netapp/test_na_ontap_flexcache.py metaclass-boilerplate
+test/units/modules/storage/netapp/test_na_ontap_gather_facts.py future-import-boilerplate
+test/units/modules/storage/netapp/test_na_ontap_gather_facts.py metaclass-boilerplate
+test/units/modules/storage/netapp/test_na_ontap_igroup.py future-import-boilerplate
+test/units/modules/storage/netapp/test_na_ontap_igroup.py metaclass-boilerplate
+test/units/modules/storage/netapp/test_na_ontap_igroup_initiator.py future-import-boilerplate
+test/units/modules/storage/netapp/test_na_ontap_igroup_initiator.py metaclass-boilerplate
+test/units/modules/storage/netapp/test_na_ontap_interface.py future-import-boilerplate
+test/units/modules/storage/netapp/test_na_ontap_interface.py metaclass-boilerplate
+test/units/modules/storage/netapp/test_na_ontap_ipspace.py future-import-boilerplate
+test/units/modules/storage/netapp/test_na_ontap_ipspace.py metaclass-boilerplate
+test/units/modules/storage/netapp/test_na_ontap_job_schedule.py future-import-boilerplate
+test/units/modules/storage/netapp/test_na_ontap_job_schedule.py metaclass-boilerplate
+test/units/modules/storage/netapp/test_na_ontap_lun_copy.py future-import-boilerplate
+test/units/modules/storage/netapp/test_na_ontap_lun_copy.py metaclass-boilerplate
+test/units/modules/storage/netapp/test_na_ontap_lun_map.py future-import-boilerplate
+test/units/modules/storage/netapp/test_na_ontap_lun_map.py metaclass-boilerplate
+test/units/modules/storage/netapp/test_na_ontap_motd.py future-import-boilerplate
+test/units/modules/storage/netapp/test_na_ontap_motd.py metaclass-boilerplate
+test/units/modules/storage/netapp/test_na_ontap_net_ifgrp.py future-import-boilerplate
+test/units/modules/storage/netapp/test_na_ontap_net_ifgrp.py metaclass-boilerplate
+test/units/modules/storage/netapp/test_na_ontap_net_port.py future-import-boilerplate
+test/units/modules/storage/netapp/test_na_ontap_net_port.py metaclass-boilerplate
+test/units/modules/storage/netapp/test_na_ontap_net_routes.py future-import-boilerplate
+test/units/modules/storage/netapp/test_na_ontap_net_routes.py metaclass-boilerplate
+test/units/modules/storage/netapp/test_na_ontap_net_subnet.py future-import-boilerplate
+test/units/modules/storage/netapp/test_na_ontap_net_subnet.py metaclass-boilerplate
+test/units/modules/storage/netapp/test_na_ontap_nfs.py future-import-boilerplate
+test/units/modules/storage/netapp/test_na_ontap_nfs.py metaclass-boilerplate
+test/units/modules/storage/netapp/test_na_ontap_nvme.py future-import-boilerplate
+test/units/modules/storage/netapp/test_na_ontap_nvme.py metaclass-boilerplate
+test/units/modules/storage/netapp/test_na_ontap_nvme_namespace.py future-import-boilerplate
+test/units/modules/storage/netapp/test_na_ontap_nvme_namespace.py metaclass-boilerplate
+test/units/modules/storage/netapp/test_na_ontap_nvme_subsystem.py future-import-boilerplate
+test/units/modules/storage/netapp/test_na_ontap_nvme_subsystem.py metaclass-boilerplate
+test/units/modules/storage/netapp/test_na_ontap_portset.py future-import-boilerplate
+test/units/modules/storage/netapp/test_na_ontap_portset.py metaclass-boilerplate
+test/units/modules/storage/netapp/test_na_ontap_qos_policy_group.py future-import-boilerplate
+test/units/modules/storage/netapp/test_na_ontap_qos_policy_group.py metaclass-boilerplate
+test/units/modules/storage/netapp/test_na_ontap_quotas.py future-import-boilerplate
+test/units/modules/storage/netapp/test_na_ontap_quotas.py metaclass-boilerplate
+test/units/modules/storage/netapp/test_na_ontap_security_key_manager.py future-import-boilerplate
+test/units/modules/storage/netapp/test_na_ontap_security_key_manager.py metaclass-boilerplate
+test/units/modules/storage/netapp/test_na_ontap_service_processor_network.py future-import-boilerplate
+test/units/modules/storage/netapp/test_na_ontap_service_processor_network.py metaclass-boilerplate
+test/units/modules/storage/netapp/test_na_ontap_snapmirror.py future-import-boilerplate
+test/units/modules/storage/netapp/test_na_ontap_snapmirror.py metaclass-boilerplate
+test/units/modules/storage/netapp/test_na_ontap_snapshot.py future-import-boilerplate
+test/units/modules/storage/netapp/test_na_ontap_snapshot.py metaclass-boilerplate
+test/units/modules/storage/netapp/test_na_ontap_snapshot_policy.py future-import-boilerplate
+test/units/modules/storage/netapp/test_na_ontap_snapshot_policy.py metaclass-boilerplate
+test/units/modules/storage/netapp/test_na_ontap_software_update.py future-import-boilerplate
+test/units/modules/storage/netapp/test_na_ontap_software_update.py metaclass-boilerplate
+test/units/modules/storage/netapp/test_na_ontap_svm.py future-import-boilerplate
+test/units/modules/storage/netapp/test_na_ontap_svm.py metaclass-boilerplate
+test/units/modules/storage/netapp/test_na_ontap_ucadapter.py future-import-boilerplate
+test/units/modules/storage/netapp/test_na_ontap_ucadapter.py metaclass-boilerplate
+test/units/modules/storage/netapp/test_na_ontap_unix_group.py future-import-boilerplate
+test/units/modules/storage/netapp/test_na_ontap_unix_group.py metaclass-boilerplate
+test/units/modules/storage/netapp/test_na_ontap_unix_user.py future-import-boilerplate
+test/units/modules/storage/netapp/test_na_ontap_unix_user.py metaclass-boilerplate
+test/units/modules/storage/netapp/test_na_ontap_user.py future-import-boilerplate
+test/units/modules/storage/netapp/test_na_ontap_user.py metaclass-boilerplate
+test/units/modules/storage/netapp/test_na_ontap_user_role.py future-import-boilerplate
+test/units/modules/storage/netapp/test_na_ontap_user_role.py metaclass-boilerplate
+test/units/modules/storage/netapp/test_na_ontap_volume.py future-import-boilerplate
+test/units/modules/storage/netapp/test_na_ontap_volume.py metaclass-boilerplate
+test/units/modules/storage/netapp/test_na_ontap_volume_clone.py future-import-boilerplate
+test/units/modules/storage/netapp/test_na_ontap_volume_clone.py metaclass-boilerplate
+test/units/modules/storage/netapp/test_na_ontap_vscan.py future-import-boilerplate
+test/units/modules/storage/netapp/test_na_ontap_vscan.py metaclass-boilerplate
+test/units/modules/storage/netapp/test_na_ontap_vscan_on_access_policy.py future-import-boilerplate
+test/units/modules/storage/netapp/test_na_ontap_vscan_on_access_policy.py metaclass-boilerplate
+test/units/modules/storage/netapp/test_na_ontap_vscan_on_demand_task.py future-import-boilerplate
+test/units/modules/storage/netapp/test_na_ontap_vscan_on_demand_task.py metaclass-boilerplate
+test/units/modules/storage/netapp/test_na_ontap_vscan_scanner_pool.py future-import-boilerplate
+test/units/modules/storage/netapp/test_na_ontap_vscan_scanner_pool.py metaclass-boilerplate
+test/units/modules/storage/netapp/test_netapp.py metaclass-boilerplate
+test/units/modules/storage/netapp/test_netapp_e_alerts.py future-import-boilerplate
+test/units/modules/storage/netapp/test_netapp_e_asup.py future-import-boilerplate
+test/units/modules/storage/netapp/test_netapp_e_auditlog.py future-import-boilerplate
+test/units/modules/storage/netapp/test_netapp_e_global.py future-import-boilerplate
+test/units/modules/storage/netapp/test_netapp_e_host.py future-import-boilerplate
+test/units/modules/storage/netapp/test_netapp_e_iscsi_interface.py future-import-boilerplate
+test/units/modules/storage/netapp/test_netapp_e_iscsi_target.py future-import-boilerplate
+test/units/modules/storage/netapp/test_netapp_e_ldap.py future-import-boilerplate
+test/units/modules/storage/netapp/test_netapp_e_mgmt_interface.py future-import-boilerplate
+test/units/modules/storage/netapp/test_netapp_e_syslog.py future-import-boilerplate
+test/units/modules/storage/netapp/test_netapp_e_volume.py future-import-boilerplate
+test/units/modules/system/interfaces_file/test_interfaces_file.py future-import-boilerplate
+test/units/modules/system/interfaces_file/test_interfaces_file.py metaclass-boilerplate
 test/units/modules/system/interfaces_file/test_interfaces_file.py pylint:blacklisted-name
+test/units/modules/system/test_iptables.py future-import-boilerplate
+test/units/modules/system/test_iptables.py metaclass-boilerplate
+test/units/modules/system/test_java_keystore.py future-import-boilerplate
+test/units/modules/system/test_java_keystore.py metaclass-boilerplate
+test/units/modules/system/test_known_hosts.py future-import-boilerplate
+test/units/modules/system/test_known_hosts.py metaclass-boilerplate
 test/units/modules/system/test_known_hosts.py pylint:ansible-bad-function
+test/units/modules/system/test_linux_mountinfo.py future-import-boilerplate
+test/units/modules/system/test_linux_mountinfo.py metaclass-boilerplate
+test/units/modules/system/test_pamd.py metaclass-boilerplate
+test/units/modules/system/test_parted.py future-import-boilerplate
+test/units/modules/system/test_systemd.py future-import-boilerplate
+test/units/modules/system/test_systemd.py metaclass-boilerplate
+test/units/modules/system/test_ufw.py future-import-boilerplate
+test/units/modules/system/test_ufw.py metaclass-boilerplate
+test/units/modules/utils.py future-import-boilerplate
+test/units/modules/utils.py metaclass-boilerplate
+test/units/modules/web_infrastructure/test_apache2_module.py future-import-boilerplate
+test/units/modules/web_infrastructure/test_apache2_module.py metaclass-boilerplate
+test/units/modules/web_infrastructure/test_jenkins_plugin.py future-import-boilerplate
+test/units/modules/web_infrastructure/test_jenkins_plugin.py metaclass-boilerplate
+test/units/parsing/utils/test_addresses.py future-import-boilerplate
+test/units/parsing/utils/test_addresses.py metaclass-boilerplate
 test/units/parsing/vault/test_vault.py pylint:blacklisted-name
 test/units/playbook/role/test_role.py pylint:blacklisted-name
+test/units/playbook/test_attribute.py future-import-boilerplate
+test/units/playbook/test_attribute.py metaclass-boilerplate
+test/units/playbook/test_conditional.py future-import-boilerplate
+test/units/playbook/test_conditional.py metaclass-boilerplate
+test/units/plugins/action/test_synchronize.py future-import-boilerplate
+test/units/plugins/action/test_synchronize.py metaclass-boilerplate
+test/units/plugins/httpapi/test_checkpoint.py future-import-boilerplate
+test/units/plugins/httpapi/test_checkpoint.py metaclass-boilerplate
+test/units/plugins/httpapi/test_ftd.py future-import-boilerplate
+test/units/plugins/httpapi/test_ftd.py metaclass-boilerplate
+test/units/plugins/inventory/test_constructed.py future-import-boilerplate
+test/units/plugins/inventory/test_constructed.py metaclass-boilerplate
+test/units/plugins/inventory/test_group.py future-import-boilerplate
+test/units/plugins/inventory/test_group.py metaclass-boilerplate
+test/units/plugins/inventory/test_host.py future-import-boilerplate
+test/units/plugins/inventory/test_host.py metaclass-boilerplate
+test/units/plugins/loader_fixtures/import_fixture.py future-import-boilerplate
+test/units/plugins/lookup/test_aws_secret.py metaclass-boilerplate
+test/units/plugins/lookup/test_aws_ssm.py metaclass-boilerplate
+test/units/plugins/shell/test_cmd.py future-import-boilerplate
+test/units/plugins/shell/test_cmd.py metaclass-boilerplate
+test/units/plugins/shell/test_powershell.py future-import-boilerplate
+test/units/plugins/shell/test_powershell.py metaclass-boilerplate
 test/units/plugins/test_plugins.py pylint:blacklisted-name
+test/units/pytest/plugins/ansible_pytest_collections.py metaclass-boilerplate
+test/units/pytest/plugins/ansible_pytest_coverage.py metaclass-boilerplate
 test/units/template/test_templar.py pylint:blacklisted-name
+test/units/test_constants.py future-import-boilerplate
+test/units/test_context.py future-import-boilerplate
+test/units/utils/amazon_placebo_fixtures.py future-import-boilerplate
+test/units/utils/amazon_placebo_fixtures.py metaclass-boilerplate
+test/units/utils/fixtures/collections/ansible_collections/my_namespace/my_collection/plugins/action/my_action.py future-import-boilerplate
+test/units/utils/fixtures/collections/ansible_collections/my_namespace/my_collection/plugins/action/my_action.py metaclass-boilerplate
+test/units/utils/fixtures/collections/ansible_collections/my_namespace/my_collection/plugins/module_utils/my_other_util.py future-import-boilerplate
+test/units/utils/fixtures/collections/ansible_collections/my_namespace/my_collection/plugins/module_utils/my_other_util.py metaclass-boilerplate
+test/units/utils/fixtures/collections/ansible_collections/my_namespace/my_collection/plugins/module_utils/my_util.py future-import-boilerplate
+test/units/utils/fixtures/collections/ansible_collections/my_namespace/my_collection/plugins/module_utils/my_util.py metaclass-boilerplate
+test/units/utils/kubevirt_fixtures.py future-import-boilerplate
+test/units/utils/kubevirt_fixtures.py metaclass-boilerplate
+test/units/utils/test_cleanup_tmp_file.py future-import-boilerplate
+test/units/utils/test_context_objects.py future-import-boilerplate
+test/units/utils/test_encrypt.py future-import-boilerplate
+test/units/utils/test_encrypt.py metaclass-boilerplate
+test/units/utils/test_helpers.py future-import-boilerplate
+test/units/utils/test_helpers.py metaclass-boilerplate
+test/units/utils/test_shlex.py future-import-boilerplate
+test/units/utils/test_shlex.py metaclass-boilerplate
 test/utils/shippable/timing.py shebang
