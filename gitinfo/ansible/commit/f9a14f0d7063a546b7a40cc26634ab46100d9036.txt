commit f9a14f0d7063a546b7a40cc26634ab46100d9036
Author: Michael DeHaan <michael.dehaan@gmail.com>
Date:   Wed May 29 10:45:31 2013 -0400

    Fixup fetch doc formatting.

diff --git a/Makefile b/Makefile
index 8f7ba9b39b..06b36a6669 100644
--- a/Makefile
+++ b/Makefile
@@ -177,7 +177,7 @@ deb: debian
 # for arch or gentoo, read instructions in the appropriate 'packaging' subdirectory directory
 
 modulepages:
-	PYTHONPATH=./lib $(PYTHON) hacking/module_formatter.py -A $(VERSION) -t man -o docs/man/man3/ --module-dir=library --template-dir=hacking/templates
+	PYTHONPATH=./lib $(PYTHON) hacking/module_formatter.py -A $(VERSION) -t man -o docs/man/man3/ --module-dir=library --template-dir=hacking/templates --verbose
 
 # because this requires Sphinx it is not run as part of every build, those building the RPM and so on can ignore this
 
diff --git a/library/cloud/quantum_floating_ip_associate b/library/cloud/quantum_floating_ip_associate
index 8fe48811bd..a20d9974ed 100644
--- a/library/cloud/quantum_floating_ip_associate
+++ b/library/cloud/quantum_floating_ip_associate
@@ -27,9 +27,9 @@ except ImportError:
 DOCUMENTATION = '''
 ---
 module: quantum_floating_ip_associate
-short_description: Associate/Disassociate a particular floating ip with an instance
+short_description: Associate or disassociate a particular floating ip with an instance
 description:
-   - Associates or disassociate's a specific floating ip with a particular instance
+   - Associates or disassociates a specific floating ip with a particular instance
 options:
    login_username:
      description:
@@ -38,46 +38,47 @@ options:
      default: admin
    login_password:
      description:
-        - Password of login user
+        - password of login user
      required: true
      default: True
    login_tenant_name:
      description:
-        - The tenant name of the login user
+        - the tenant name of the login user
      required: true
-     default: True
+     default: true
    auth_url:
      description:
-        - The keystone url for authentication
+        - the keystone url for authentication
      required: false
      default: 'http://127.0.0.1:35357/v2.0/'
    region_name:
      description:
-        - Name of the region
+        - name of the region
      required: false
      default: None
    state:
      description:
-        - Indicate desired state of the resource
+        - indicates the desired state of the resource
      choices: ['present', 'absent']
      default: present
    instance_name:
      description:
-        - Name of the instance to which the public ip should be assigned
+        - name of the instance to which the public ip should be assigned
      required: true
      default: None
    ip_address:
      description:
-        - Floating ip that should be assigned to the instance
+        - floating ip that should be assigned to the instance
      required: true
      default: None
-examples:
-  - code: "quantum_floating_ip_associate: state=present login_username=admin login_password=admin login_tenant_name=admin
-                                          ip_address=1.1.1.1 instance_name=vm1"
-    description: "Associate a specific floating ip with an Instance"
 requirements: ["quantumclient", "keystoneclient"]
 '''
 
+EXAMPLES = '''
+# Associate a specific floating ip with an Instance
+quantum_floating_ip_associate: state=present login_username=admin login_password=admin login_tenant_name=admin ip_address=1.1.1.1 instance_name=vm1
+'''
+
 def _get_ksclient(module, kwargs):
     try:
         kclient = ksclient.Client(username=kwargs.get('login_username'),
diff --git a/library/network/fetch b/library/files/fetch
similarity index 70%
rename from library/network/fetch
rename to library/files/fetch
index 5d2f55a649..4e0eae51ca 100644
--- a/library/network/fetch
+++ b/library/files/fetch
@@ -41,15 +41,20 @@ options:
       the destination.  If dest ends with '/', it will use the basename of the source
       file, similar to the copy module.  Obvioiusly this is only handy if the filenames
       are unqiue.
-examples:
-   - code: "fetch: src=/var/log/messages dest=/home/logtree"
-     description: "Example from Ansible Playbooks"
-   - code: "fetch: src=/tmp/somefile dest="/tmp/beefcake-{{ ansible_hostname }}" flat=yes"
-     description: "Copies a file from remote machine and stores it at the absolute path /tmp/beefcake-{{ ansible_hostname }}"
-   - code: "fetch: src=/tmp/uniquefile dest="/tmp/special/" flat=yes"
-     description: "Copies a file from remote machine and stores it at the absolute path /tmp/special"
-   - code: "fetch: src=/tmp/uniquefile dest="special/" flat=yes"
-     description: "Copies a file from remote machine and stores it in special/uniquefile relative to the playbook"
 requirements: []
 author: Michael DeHaan
 '''
+
+EXAMPLES = '''
+# Store file into /tmp/fetched/host.example.com/tmp/somefile
+fetch: src=/tmp/somefile dest=/tmp/fetched
+
+# Specifying a path directly
+fetch: src=/tmp/somefile dest=/tmp/prefix-{{ ansible_hostname }} flat=yes
+
+# Specifying a destination path
+fetch: src=/tmp/uniquefile dest=/tmp/special/ flat=yes
+
+# Storing in a path relative to the playbook
+fetch: src=/tmp/uniquefile dest=special/prefix-{{ ansible_hostname }} flat=yes
+'''
