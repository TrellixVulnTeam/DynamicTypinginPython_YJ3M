commit 7d6a94e7dcf824b9b26a86fa705f4bd5d712bbcb
Author: Sayed Anisul Hoque <anis016@users.noreply.github.com>
Date:   Sun Feb 17 22:49:40 2019 +0100

    Fixed typos (#52426)

diff --git a/lib/ansible/module_utils/facts/network/base.py b/lib/ansible/module_utils/facts/network/base.py
index d74897dd5e..fe38ba82d3 100644
--- a/lib/ansible/module_utils/facts/network/base.py
+++ b/lib/ansible/module_utils/facts/network/base.py
@@ -41,7 +41,7 @@ class Network:
 
 
 class NetworkCollector(BaseFactCollector):
-    # MAYBE: we could try to build this based on the arch specific implemementation of Network() or its kin
+    # MAYBE: we could try to build this based on the arch specific implementation of Network() or its kin
     name = 'network'
     _fact_class = Network
     _fact_ids = set(['interfaces',
diff --git a/lib/ansible/module_utils/xenserver.py b/lib/ansible/module_utils/xenserver.py
index 1bcfa95e01..898da76d17 100644
--- a/lib/ansible/module_utils/xenserver.py
+++ b/lib/ansible/module_utils/xenserver.py
@@ -269,10 +269,10 @@ def is_valid_ip6_prefix(ip6_prefix):
 
 
 def get_object_ref(module, name, uuid=None, obj_type="VM", fail=True, msg_prefix=""):
-    """Finds and returns a reference to arbitary XAPI object.
+    """Finds and returns a reference to arbitrary XAPI object.
 
     An object is searched by using either name (name_label) or UUID
-    with UUID taken precendence over name.
+    with UUID taken precedence over name.
 
     Args:
         module: Reference to Ansible module object.
@@ -302,7 +302,7 @@ def get_object_ref(module, name, uuid=None, obj_type="VM", fail=True, msg_prefix
 
     obj_ref = None
 
-    # UUID has precendence over name.
+    # UUID has precedence over name.
     if uuid:
         try:
             # Find object by UUID. If no object is found using given UUID,
diff --git a/lib/ansible/modules/cloud/amazon/aws_ses_rule_set.py b/lib/ansible/modules/cloud/amazon/aws_ses_rule_set.py
index ccb00942d6..d218fb0b15 100644
--- a/lib/ansible/modules/cloud/amazon/aws_ses_rule_set.py
+++ b/lib/ansible/modules/cloud/amazon/aws_ses_rule_set.py
@@ -70,7 +70,7 @@ EXAMPLES = """
     state: present
     active: no
 
-- name: Remove an arbitary inactive rule set
+- name: Remove an arbitrary inactive rule set
   aws_ses_rule_set:
     name: arbitrary-rule-set
     state: absent
diff --git a/lib/ansible/modules/cloud/vmware/vmware_guest.py b/lib/ansible/modules/cloud/vmware/vmware_guest.py
index b5739c9fc5..ebd0df279a 100644
--- a/lib/ansible/modules/cloud/vmware/vmware_guest.py
+++ b/lib/ansible/modules/cloud/vmware/vmware_guest.py
@@ -344,7 +344,7 @@ options:
   datastore:
     description:
     - Specify datastore or datastore cluster to provision virtual machine.
-    - 'This will take precendence over "disk.datastore" parameter.'
+    - 'This will take precedence over "disk.datastore" parameter.'
     - This parameter is useful to override datastore or datastore cluster setting.
     - For example, when user has different datastore or datastore cluster for templates and virtual machines.
     - Please see example for more usage.
@@ -2120,7 +2120,7 @@ class PyVmomiHelper(PyVmomi):
 
         # set the destination datastore for VM & disks
         if self.params['datastore']:
-            # Give precendence to datastore value provided by user
+            # Give precedence to datastore value provided by user
             # User may want to deploy VM to specific datastore.
             datastore_name = self.params['datastore']
             # Check if user has provided datastore cluster first
diff --git a/lib/ansible/modules/crypto/luks_device.py b/lib/ansible/modules/crypto/luks_device.py
index 4d6cef4a0a..f8959c96f9 100644
--- a/lib/ansible/modules/crypto/luks_device.py
+++ b/lib/ansible/modules/crypto/luks_device.py
@@ -362,13 +362,13 @@ class ConditionsHandler(Handler):
         if self._module.params['device'] is not None:
             name = self._crypthandler.get_container_name_by_device(
                 self._module.params['device'])
-            # sucessfully getting name based on device means that luks is open
+            # successfully getting name based on device means that luks is open
             luks_is_open = name is not None
 
         if self._module.params['name'] is not None:
             device = self._crypthandler.get_container_device_by_name(
                 self._module.params['name'])
-            # sucessfully getting device based on name means that luks is open
+            # successfully getting device based on name means that luks is open
             luks_is_open = device is not None
 
         return luks_is_open
diff --git a/lib/ansible/plugins/action/reboot.py b/lib/ansible/plugins/action/reboot.py
index c2d92e86a3..276ddf3068 100644
--- a/lib/ansible/plugins/action/reboot.py
+++ b/lib/ansible/plugins/action/reboot.py
@@ -217,7 +217,7 @@ class ActionModule(ActionBase):
                 out=to_native(command_result['stdout']))
             raise RuntimeError(msg)
 
-        display.vvv("{action}: system sucessfully rebooted".format(action=self._task.action))
+        display.vvv("{action}: system successfully rebooted".format(action=self._task.action))
 
     def do_until_success_or_timeout(self, action, reboot_timeout, action_desc, distribution, action_kwargs=None):
         max_end_time = datetime.utcnow() + timedelta(seconds=reboot_timeout)
