commit 7a4a156d91bb93b532c0b93151de6cbd81d00802
Author: Brian Coca <bcoca@ansible.com>
Date:   Tue Aug 18 18:31:29 2015 -0400

    changed local_action to alias to connection=local vs delegate_to=localhost
    fixes #11998, but still leaves issue of delegate_to: localhost not working

diff --git a/lib/ansible/parsing/mod_args.py b/lib/ansible/parsing/mod_args.py
index 8a084587d0..6b10dd5308 100644
--- a/lib/ansible/parsing/mod_args.py
+++ b/lib/ansible/parsing/mod_args.py
@@ -234,10 +234,9 @@ class ModuleArgsParser:
         task, dealing with all sorts of levels of fuzziness.
         '''
 
-        thing      = None
-
+        thing       = None
         action      = None
-        delegate_to = self._task_ds.get('delegate_to', None)
+        connection  = self._task_ds.get('connection', None)
         args        = dict()
 
 
@@ -256,11 +255,11 @@ class ModuleArgsParser:
 
         # local_action
         if 'local_action' in self._task_ds:
-            # local_action is similar but also implies a delegate_to
+            # local_action is similar but also implies a connection='local'
             if action is not None:
                 raise AnsibleParserError("action and local_action are mutually exclusive", obj=self._task_ds)
             thing = self._task_ds.get('local_action', '')
-            delegate_to = 'localhost'
+            connection = 'local'
             action, args = self._normalize_parameters(thing, additional_args=additional_args)
 
         # module: <stuff> is the more new-style invocation
@@ -289,4 +288,4 @@ class ModuleArgsParser:
         # shell modules require special handling
         (action, args) = self._handle_shell_weirdness(action, args)
 
-        return (action, args, delegate_to)
+        return (action, args, connection)
diff --git a/lib/ansible/playbook/task.py b/lib/ansible/playbook/task.py
index f0023fecf4..ee6bbbacba 100644
--- a/lib/ansible/playbook/task.py
+++ b/lib/ansible/playbook/task.py
@@ -157,11 +157,11 @@ class Task(Base, Conditional, Taggable, Become):
         # and the delegate_to value from the various possible forms
         # supported as legacy
         args_parser = ModuleArgsParser(task_ds=ds)
-        (action, args, delegate_to) = args_parser.parse()
+        (action, args, connection) = args_parser.parse()
 
         new_ds['action']      = action
         new_ds['args']        = args
-        new_ds['delegate_to'] = delegate_to
+        new_ds['connection'] = connection
 
         # we handle any 'vars' specified in the ds here, as we may
         # be adding things to them below (special handling for includes).
@@ -174,7 +174,7 @@ class Task(Base, Conditional, Taggable, Become):
             new_ds['vars'] = dict()
 
         for (k,v) in ds.iteritems():
-            if k in ('action', 'local_action', 'args', 'delegate_to') or k == action or k == 'shell':
+            if k in ('action', 'local_action', 'args', 'connection') or k == action or k == 'shell':
                 # we don't want to re-assign these values, which were
                 # determined by the ModuleArgsParser() above
                 continue
