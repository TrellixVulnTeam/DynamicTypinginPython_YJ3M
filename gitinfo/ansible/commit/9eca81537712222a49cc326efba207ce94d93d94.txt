commit 9eca81537712222a49cc326efba207ce94d93d94
Author: Tom Paine <aioue@users.noreply.github.com>
Date:   Fri Feb 5 18:06:10 2016 +0000

    Update profile_tasks.md
    
    Converted to RST.

diff --git a/lib/ansible/plugins/callback/profile_tasks.md b/lib/ansible/plugins/callback/profile_tasks.md
index b52081d83b..86d19e9bd4 100644
--- a/lib/ansible/plugins/callback/profile_tasks.md
+++ b/lib/ansible/plugins/callback/profile_tasks.md
@@ -1,58 +1,69 @@
-# profile_tasks.py
+profile\_tasks.py
+=================
+
 Ansible plugin for timing individual tasks and overall execution time.
 
 Mashup of 2 excellent original works:
-- (https://github.com/jlafon/ansible-profile)
-- (https://github.com/junaid18183/ansible_home/blob/master/ansible_plugins/callback_plugins/timestamp.py.old)
 
-## Usage
+-  (https://github.com/jlafon/ansible-profile)
+-  (https://github.com/junaid18183/ansible_home/blob/master/ansible_plugins/callback_plugins/timestamp.py.old)
+
+Usage
+-----
 
-Add `profile_taks` to the `callback_whitelist` in `ansible.cfg`.
+Add ``profile_taks`` to the ``callback_whitelist`` in ``ansible.cfg``.
 
 Run playbooks as normal.
 
-## Features
+Features
+--------
 
-### Tasks
+Tasks
+~~~~~
 
 Ongoing timing of each task as it happens.
 
-Format:
-`<task start timestamp> (<length of previous task>) <current elapsed playbook execution time>`
+| Format:
+| ``<task start timestamp> (<length of previous task>) <current elapsed playbook execution time>``
+
+Task output example:
+
+.. code:: shell
 
-```shell
-TASK: [ensure messaging security group exists] ********************************
-Thursday 11 June 2017  22:50:53 +0100 (0:00:00.721)       0:00:05.322 *********
-ok: [localhost]
+    TASK: [ensure messaging security group exists] ********************************
+    Thursday 11 June 2017  22:50:53 +0100 (0:00:00.721)       0:00:05.322 *********
+    ok: [localhost]
 
-TASK: [ensure db security group exists] ***************************************
-Thursday 11 June 2017  22:50:54 +0100 (0:00:00.558)       0:00:05.880 *********
-changed: [localhost]
-```
+    TASK: [ensure db security group exists] ***************************************
+    Thursday 11 June 2017  22:50:54 +0100 (0:00:00.558)       0:00:05.880 *********
+    changed: [localhost]
 
-### Play Recap
+Play Recap
+~~~~~~~~~~
 
-Recap includes ending timestamp, total playbook execution time and a sorted list of the top longest running tasks.  
+Recap includes ending timestamp, total playbook execution time and a
+sorted list of the top longest running tasks.
 
 No more wondering how old the results in a terminal window are.
 
-```shell
-   ansible <args here>
-   <normal output here>
-   PLAY RECAP ******************************************************************** 
-   Thursday 11 June 2016  22:51:00 +0100 (0:00:01.011)       0:00:43.247 *********
-   ===============================================================================
-   really slow task  | Download project packages----------------------------11.61s
-   security | Really slow security policies----------------------------------7.03s
-   common-base | Install core system dependencies----------------------------3.62s
-   common | Install pip------------------------------------------------------3.60s
-   common | Install boto-----------------------------------------------------3.57s
-   nginx | Install nginx-----------------------------------------------------3.41s
-   serf | Install system dependencies----------------------------------------3.38s
-   duo_security | Install Duo Unix SSH Integration---------------------------3.37s
-   loggly | Install TLS version----------------------------------------------3.36s
-```
-
-## Compatibility
+.. code:: shell
+
+       ansible <args here>
+       <normal output here>
+       PLAY RECAP ******************************************************************** 
+       Thursday 11 June 2016  22:51:00 +0100 (0:00:01.011)       0:00:43.247 *********
+       ===============================================================================
+       really slow task  | Download project packages----------------------------11.61s
+       security | Really slow security policies----------------------------------7.03s
+       common-base | Install core system dependencies----------------------------3.62s
+       common | Install pip------------------------------------------------------3.60s
+       common | Install boto-----------------------------------------------------3.57s
+       nginx | Install nginx-----------------------------------------------------3.41s
+       serf | Install system dependencies----------------------------------------3.38s
+       duo_security | Install Duo Unix SSH Integration---------------------------3.37s
+       loggly | Install TLS version----------------------------------------------3.36s
+
+Compatibility
+-------------
 
 Ansible 2.0+
