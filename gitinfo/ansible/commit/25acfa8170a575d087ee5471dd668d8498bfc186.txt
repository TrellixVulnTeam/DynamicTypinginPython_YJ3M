commit 25acfa8170a575d087ee5471dd668d8498bfc186
Author: Michael DeHaan <michael.dehaan@gmail.com>
Date:   Wed Aug 1 20:33:13 2012 -0400

    Join with_items for the apt module, yum pending, and various fixes to the yum module to support aliases

diff --git a/lib/ansible/runner/__init__.py b/lib/ansible/runner/__init__.py
index 9ab2fc6edb..e38dc91518 100644
--- a/lib/ansible/runner/__init__.py
+++ b/lib/ansible/runner/__init__.py
@@ -475,6 +475,7 @@ class Runner(object):
         inject['hostvars'] = self.setup_cache
 
         items = self.module_vars.get('items', [])
+
         if isinstance(items, basestring) and items.startswith("$"):
             items = items.replace("$","")
             if items in inject:
@@ -483,6 +484,11 @@ class Runner(object):
                 raise errors.AnsibleError("unbound variable in with_items: %s" % items)
         if type(items) != list:
             raise errors.AnsibleError("with_items only takes a list: %s" % items)
+
+        if self.module_name in [ 'apt' ]:
+            # hack for apt and soon yum, with_items maps back into a single module call
+            inject['item'] = ",".join(items)
+            items = []
           
         if len(items) == 0:
             return self._executor_internal_inner(host, inject, port)
diff --git a/library/yum b/library/yum
index 10a623c803..03f45d960d 100755
--- a/library/yum
+++ b/library/yum
@@ -106,7 +106,7 @@ def run_yum(command):
         rc = 1
         err = traceback.format_exc()
         out = ''
-
+    
         if out is None:
            out = ''
         if err is None:
@@ -119,7 +119,7 @@ def run_yum(command):
 def ensure(my, state, pkgspec):
     yumconf = my.conf.config_file_path
     res = {}
-    if state == 'installed':
+    if state in [ 'installed', 'present' ]:
         # check if pkgspec is installed
         if re.search('[></=]',pkgspec):
             try:
@@ -170,7 +170,7 @@ def ensure(my, state, pkgspec):
         
         return res
         
-    if state == 'removed':
+    if state in [ 'absent', 'removed' ]:
         # check if pkgspec is installed
         # if not return {changed: False, failed=False }
         # if so try to remove it:
@@ -250,7 +250,7 @@ def ensure(my, state, pkgspec):
         return res
 
     # should be caught by AnsibleModule argument_spec        
-    return dict(changed=False, failed=True, results='', errors='unexpected state')
+    return dict(changed=False, failed=True, results='', errors="unexpected state: %s" % state)
  
 
 
@@ -289,7 +289,7 @@ def main():
     if params['list'] and params['pkg']:
         module.fail_json(msg="expected 'list=' or 'name=', but not both")
     
-    if 'list' in params:
+    if params['list']:
         try:
             my = yum_base(conf_file=params['conf_file'], cachedir=True)
             results = dict(results=list_stuff(my, params['list']))
