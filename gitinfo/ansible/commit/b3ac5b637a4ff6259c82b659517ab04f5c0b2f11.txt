commit b3ac5b637a4ff6259c82b659517ab04f5c0b2f11
Author: Gregory Storme <gstorme@users.noreply.github.com>
Date:   Thu Dec 13 00:44:40 2018 +0100

    replace math round with ceiling for ansible_memtotal_mb + add new variables to display swapfile config (#49611)
    
    * replace math round with ceiling to report the actually installed RAM for ansible_memtotal_mb
    
    * add new variable ansible_memtotal to display TotalPhysicalMemory in bytes
    add new variable ansible_swap_min to display initial pagefile size
    add new variable ansible_swap_max to display maximum pagefile size
    removed the variable ansible_swaptotal_mb
    
    * output ansible_swap_min & ansible_swap_max value in bytes
    
    * re-add the ansible_swaptotal_mb fact and fix the conversion of the TotalSwapSpaceSize value from kilobytes to MB
    
    * indentation fix, replace tab with spaces

diff --git a/lib/ansible/modules/windows/setup.ps1 b/lib/ansible/modules/windows/setup.ps1
index e81d328b78..ef0a52e625 100644
--- a/lib/ansible/modules/windows/setup.ps1
+++ b/lib/ansible/modules/windows/setup.ps1
@@ -296,14 +296,17 @@ if ($gather_subset.Contains("local") -and $factpath -ne $null) {
 if($gather_subset.Contains('memory')) {
     $win32_cs = Get-LazyCimInstance Win32_ComputerSystem
     $win32_os = Get-LazyCimInstance Win32_OperatingSystem
+    $win32_pf = Get-LazyCimInstance Win32_PageFileSetting
     $ansible_facts += @{
         # Win32_PhysicalMemory is empty on some virtual platforms
-        ansible_memtotal_mb = ([math]::round($win32_cs.TotalPhysicalMemory / 1024 / 1024))
-        ansible_swaptotal_mb = ([math]::round($win32_os.TotalSwapSpaceSize / 1024 / 1024))
+        ansible_memtotal_mb = ([math]::ceiling($win32_cs.TotalPhysicalMemory / 1024 / 1024))
+        ansible_swaptotal_mb = ([math]::round($win32_os.TotalSwapSpaceSize / 1024))
+        ansible_memtotal = $win32_cs.TotalPhysicalMemory
+        ansible_swap_min = $win32_pf.InitialSize * 1024 * 1024
+        ansible_swap_max = $win32_pf.MaximumSize * 1024 * 1024
     }
 }
 
-
 if($gather_subset.Contains('platform')) {
     $win32_cs = Get-LazyCimInstance Win32_ComputerSystem
     $win32_os = Get-LazyCimInstance Win32_OperatingSystem
