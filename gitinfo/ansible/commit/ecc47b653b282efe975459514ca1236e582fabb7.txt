commit ecc47b653b282efe975459514ca1236e582fabb7
Author: The Magician <magic-modules@google.com>
Date:   Tue Oct 1 15:26:56 2019 -0700

    Bug fixes for GCP modules (#61918)

diff --git a/lib/ansible/modules/cloud/google/gcp_spanner_database.py b/lib/ansible/modules/cloud/google/gcp_spanner_database.py
index b2e8bd3a90..e6e5569110 100644
--- a/lib/ansible/modules/cloud/google/gcp_spanner_database.py
+++ b/lib/ansible/modules/cloud/google/gcp_spanner_database.py
@@ -33,7 +33,7 @@ module: gcp_spanner_database
 description:
 - A Cloud Spanner Database which is hosted on a Spanner instance.
 short_description: Creates a GCP Database
-version_added: 2.7
+version_added: '2.7'
 author: Google Inc. (@googlecloudplatform)
 requirements:
 - python >= 2.6
@@ -72,10 +72,56 @@ options:
       }}"'
     required: true
     type: dict
-extends_documentation_fragment: gcp
+  project:
+    description:
+    - The Google Cloud Platform project to use.
+    type: str
+  auth_kind:
+    description:
+    - The type of credential used.
+    type: str
+    required: true
+    choices:
+    - application
+    - machineaccount
+    - serviceaccount
+  service_account_contents:
+    description:
+    - The contents of a Service Account JSON file, either in a dictionary or as a
+      JSON string that represents it.
+    type: jsonarg
+  service_account_file:
+    description:
+    - The path of a Service Account JSON file if serviceaccount is selected as type.
+    type: path
+  service_account_email:
+    description:
+    - An optional service account email address if machineaccount is selected and
+      the user does not wish to use the default email.
+    type: str
+  scopes:
+    description:
+    - Array of scopes to be used
+    type: list
+  env_type:
+    description:
+    - Specifies which Ansible environment you're running this module within.
+    - This should not be set unless you know what you're doing.
+    - This only alters the User Agent string for any API requests.
+    type: str
 notes:
 - 'API Reference: U(https://cloud.google.com/spanner/docs/reference/rest/v1/projects.instances.databases)'
 - 'Official Documentation: U(https://cloud.google.com/spanner/)'
+- for authentication, you can set service_account_file using the c(gcp_service_account_file)
+  env variable.
+- for authentication, you can set service_account_contents using the c(GCP_SERVICE_ACCOUNT_CONTENTS)
+  env variable.
+- For authentication, you can set service_account_email using the C(GCP_SERVICE_ACCOUNT_EMAIL)
+  env variable.
+- For authentication, you can set auth_kind using the C(GCP_AUTH_KIND) env variable.
+- For authentication, you can set scopes using the C(GCP_SCOPES) env variable.
+- Environment variables values will only be used if the playbook values are not set.
+- The I(service_account_email) and I(service_account_file) options are mutually exclusive.
 '''
 
 EXAMPLES = '''
diff --git a/lib/ansible/modules/cloud/google/gcp_spanner_database_info.py b/lib/ansible/modules/cloud/google/gcp_spanner_database_info.py
index 8f35a88b8f..89ceba9a9c 100644
--- a/lib/ansible/modules/cloud/google/gcp_spanner_database_info.py
+++ b/lib/ansible/modules/cloud/google/gcp_spanner_database_info.py
@@ -35,7 +35,7 @@ description:
 - This module was called C(gcp_spanner_database_facts) before Ansible 2.9. The usage
   has not changed.
 short_description: Gather info for GCP Database
-version_added: 2.8
+version_added: '2.8'
 author: Google Inc. (@googlecloudplatform)
 requirements:
 - python >= 2.6
@@ -52,7 +52,54 @@ options:
       }}"'
     required: true
     type: dict
-extends_documentation_fragment: gcp
+  project:
+    description:
+    - The Google Cloud Platform project to use.
+    type: str
+  auth_kind:
+    description:
+    - The type of credential used.
+    type: str
+    required: true
+    choices:
+    - application
+    - machineaccount
+    - serviceaccount
+  service_account_contents:
+    description:
+    - The contents of a Service Account JSON file, either in a dictionary or as a
+      JSON string that represents it.
+    type: jsonarg
+  service_account_file:
+    description:
+    - The path of a Service Account JSON file if serviceaccount is selected as type.
+    type: path
+  service_account_email:
+    description:
+    - An optional service account email address if machineaccount is selected and
+      the user does not wish to use the default email.
+    type: str
+  scopes:
+    description:
+    - Array of scopes to be used
+    type: list
+  env_type:
+    description:
+    - Specifies which Ansible environment you're running this module within.
+    - This should not be set unless you know what you're doing.
+    - This only alters the User Agent string for any API requests.
+    type: str
+notes:
+- for authentication, you can set service_account_file using the c(gcp_service_account_file)
+  env variable.
+- for authentication, you can set service_account_contents using the c(GCP_SERVICE_ACCOUNT_CONTENTS)
+  env variable.
+- For authentication, you can set service_account_email using the C(GCP_SERVICE_ACCOUNT_EMAIL)
+  env variable.
+- For authentication, you can set auth_kind using the C(GCP_AUTH_KIND) env variable.
+- For authentication, you can set scopes using the C(GCP_SCOPES) env variable.
+- Environment variables values will only be used if the playbook values are not set.
+- The I(service_account_email) and I(service_account_file) options are mutually exclusive.
 '''
 
 EXAMPLES = '''
diff --git a/lib/ansible/modules/cloud/google/gcp_spanner_instance.py b/lib/ansible/modules/cloud/google/gcp_spanner_instance.py
index 764214fff1..b240e27b0e 100644
--- a/lib/ansible/modules/cloud/google/gcp_spanner_instance.py
+++ b/lib/ansible/modules/cloud/google/gcp_spanner_instance.py
@@ -33,7 +33,7 @@ module: gcp_spanner_instance
 description:
 - An isolated set of Cloud Spanner resources on which databases can be hosted.
 short_description: Creates a GCP Instance
-version_added: 2.7
+version_added: '2.7'
 author: Google Inc. (@googlecloudplatform)
 requirements:
 - python >= 2.6
@@ -82,10 +82,56 @@ options:
     - 'Example: { "name": "wrench", "mass": "1.3kg", "count": "3" }.'
     required: false
     type: dict
-extends_documentation_fragment: gcp
+  project:
+    description:
+    - The Google Cloud Platform project to use.
+    type: str
+  auth_kind:
+    description:
+    - The type of credential used.
+    type: str
+    required: true
+    choices:
+    - application
+    - machineaccount
+    - serviceaccount
+  service_account_contents:
+    description:
+    - The contents of a Service Account JSON file, either in a dictionary or as a
+      JSON string that represents it.
+    type: jsonarg
+  service_account_file:
+    description:
+    - The path of a Service Account JSON file if serviceaccount is selected as type.
+    type: path
+  service_account_email:
+    description:
+    - An optional service account email address if machineaccount is selected and
+      the user does not wish to use the default email.
+    type: str
+  scopes:
+    description:
+    - Array of scopes to be used
+    type: list
+  env_type:
+    description:
+    - Specifies which Ansible environment you're running this module within.
+    - This should not be set unless you know what you're doing.
+    - This only alters the User Agent string for any API requests.
+    type: str
 notes:
 - 'API Reference: U(https://cloud.google.com/spanner/docs/reference/rest/v1/projects.instances)'
 - 'Official Documentation: U(https://cloud.google.com/spanner/)'
+- for authentication, you can set service_account_file using the c(gcp_service_account_file)
+  env variable.
+- for authentication, you can set service_account_contents using the c(GCP_SERVICE_ACCOUNT_CONTENTS)
+  env variable.
+- For authentication, you can set service_account_email using the C(GCP_SERVICE_ACCOUNT_EMAIL)
+  env variable.
+- For authentication, you can set auth_kind using the C(GCP_AUTH_KIND) env variable.
+- For authentication, you can set scopes using the C(GCP_SCOPES) env variable.
+- Environment variables values will only be used if the playbook values are not set.
+- The I(service_account_email) and I(service_account_file) options are mutually exclusive.
 '''
 
 EXAMPLES = '''
diff --git a/lib/ansible/modules/cloud/google/gcp_spanner_instance_info.py b/lib/ansible/modules/cloud/google/gcp_spanner_instance_info.py
index 5f286b85ff..210c8c7e8a 100644
--- a/lib/ansible/modules/cloud/google/gcp_spanner_instance_info.py
+++ b/lib/ansible/modules/cloud/google/gcp_spanner_instance_info.py
@@ -35,14 +35,61 @@ description:
 - This module was called C(gcp_spanner_instance_facts) before Ansible 2.9. The usage
   has not changed.
 short_description: Gather info for GCP Instance
-version_added: 2.8
+version_added: '2.8'
 author: Google Inc. (@googlecloudplatform)
 requirements:
 - python >= 2.6
 - requests >= 2.18.4
 - google-auth >= 1.3.0
-options: {}
-extends_documentation_fragment: gcp
+options:
+  project:
+    description:
+    - The Google Cloud Platform project to use.
+    type: str
+  auth_kind:
+    description:
+    - The type of credential used.
+    type: str
+    required: true
+    choices:
+    - application
+    - machineaccount
+    - serviceaccount
+  service_account_contents:
+    description:
+    - The contents of a Service Account JSON file, either in a dictionary or as a
+      JSON string that represents it.
+    type: jsonarg
+  service_account_file:
+    description:
+    - The path of a Service Account JSON file if serviceaccount is selected as type.
+    type: path
+  service_account_email:
+    description:
+    - An optional service account email address if machineaccount is selected and
+      the user does not wish to use the default email.
+    type: str
+  scopes:
+    description:
+    - Array of scopes to be used
+    type: list
+  env_type:
+    description:
+    - Specifies which Ansible environment you're running this module within.
+    - This should not be set unless you know what you're doing.
+    - This only alters the User Agent string for any API requests.
+    type: str
+notes:
+- for authentication, you can set service_account_file using the c(gcp_service_account_file)
+  env variable.
+- for authentication, you can set service_account_contents using the c(GCP_SERVICE_ACCOUNT_CONTENTS)
+  env variable.
+- For authentication, you can set service_account_email using the C(GCP_SERVICE_ACCOUNT_EMAIL)
+  env variable.
+- For authentication, you can set auth_kind using the C(GCP_AUTH_KIND) env variable.
+- For authentication, you can set scopes using the C(GCP_SCOPES) env variable.
+- Environment variables values will only be used if the playbook values are not set.
+- The I(service_account_email) and I(service_account_file) options are mutually exclusive.
 '''
 
 EXAMPLES = '''
diff --git a/lib/ansible/modules/cloud/google/gcp_sql_database.py b/lib/ansible/modules/cloud/google/gcp_sql_database.py
index 47eb46d739..037b588acf 100644
--- a/lib/ansible/modules/cloud/google/gcp_sql_database.py
+++ b/lib/ansible/modules/cloud/google/gcp_sql_database.py
@@ -33,7 +33,7 @@ module: gcp_sql_database
 description:
 - Represents a SQL database inside the Cloud SQL instance, hosted in Google's cloud.
 short_description: Creates a GCP Database
-version_added: 2.7
+version_added: '2.7'
 author: Google Inc. (@googlecloudplatform)
 requirements:
 - python >= 2.6
@@ -75,7 +75,43 @@ options:
     - The name of the Cloud SQL instance. This does not include the project ID.
     required: true
     type: str
-extends_documentation_fragment: gcp
+  project:
+    description:
+    - The Google Cloud Platform project to use.
+    type: str
+  auth_kind:
+    description:
+    - The type of credential used.
+    type: str
+    required: true
+    choices:
+    - application
+    - machineaccount
+    - serviceaccount
+  service_account_contents:
+    description:
+    - The contents of a Service Account JSON file, either in a dictionary or as a
+      JSON string that represents it.
+    type: jsonarg
+  service_account_file:
+    description:
+    - The path of a Service Account JSON file if serviceaccount is selected as type.
+    type: path
+  service_account_email:
+    description:
+    - An optional service account email address if machineaccount is selected and
+      the user does not wish to use the default email.
+    type: str
+  scopes:
+    description:
+    - Array of scopes to be used
+    type: list
+  env_type:
+    description:
+    - Specifies which Ansible environment you're running this module within.
+    - This should not be set unless you know what you're doing.
+    - This only alters the User Agent string for any API requests.
+    type: str
 '''
 
 EXAMPLES = '''
diff --git a/lib/ansible/modules/cloud/google/gcp_sql_database_info.py b/lib/ansible/modules/cloud/google/gcp_sql_database_info.py
index f767be824f..9be73fb2c4 100644
--- a/lib/ansible/modules/cloud/google/gcp_sql_database_info.py
+++ b/lib/ansible/modules/cloud/google/gcp_sql_database_info.py
@@ -35,7 +35,7 @@ description:
 - This module was called C(gcp_sql_database_facts) before Ansible 2.9. The usage has
   not changed.
 short_description: Gather info for GCP Database
-version_added: 2.8
+version_added: '2.8'
 author: Google Inc. (@googlecloudplatform)
 requirements:
 - python >= 2.6
@@ -47,7 +47,54 @@ options:
     - The name of the Cloud SQL instance. This does not include the project ID.
     required: true
     type: str
-extends_documentation_fragment: gcp
+  project:
+    description:
+    - The Google Cloud Platform project to use.
+    type: str
+  auth_kind:
+    description:
+    - The type of credential used.
+    type: str
+    required: true
+    choices:
+    - application
+    - machineaccount
+    - serviceaccount
+  service_account_contents:
+    description:
+    - The contents of a Service Account JSON file, either in a dictionary or as a
+      JSON string that represents it.
+    type: jsonarg
+  service_account_file:
+    description:
+    - The path of a Service Account JSON file if serviceaccount is selected as type.
+    type: path
+  service_account_email:
+    description:
+    - An optional service account email address if machineaccount is selected and
+      the user does not wish to use the default email.
+    type: str
+  scopes:
+    description:
+    - Array of scopes to be used
+    type: list
+  env_type:
+    description:
+    - Specifies which Ansible environment you're running this module within.
+    - This should not be set unless you know what you're doing.
+    - This only alters the User Agent string for any API requests.
+    type: str
+notes:
+- for authentication, you can set service_account_file using the c(gcp_service_account_file)
+  env variable.
+- for authentication, you can set service_account_contents using the c(GCP_SERVICE_ACCOUNT_CONTENTS)
+  env variable.
+- For authentication, you can set service_account_email using the C(GCP_SERVICE_ACCOUNT_EMAIL)
+  env variable.
+- For authentication, you can set auth_kind using the C(GCP_AUTH_KIND) env variable.
+- For authentication, you can set scopes using the C(GCP_SCOPES) env variable.
+- Environment variables values will only be used if the playbook values are not set.
+- The I(service_account_email) and I(service_account_file) options are mutually exclusive.
 '''
 
 EXAMPLES = '''
diff --git a/lib/ansible/modules/cloud/google/gcp_sql_instance.py b/lib/ansible/modules/cloud/google/gcp_sql_instance.py
index 5f87578706..021eb56490 100644
--- a/lib/ansible/modules/cloud/google/gcp_sql_instance.py
+++ b/lib/ansible/modules/cloud/google/gcp_sql_instance.py
@@ -35,7 +35,7 @@ description:
   Google's cloud. The Instances resource provides methods for common configuration
   and management tasks.
 short_description: Creates a GCP Instance
-version_added: 2.7
+version_added: '2.7'
 author: Google Inc. (@googlecloudplatform)
 requirements:
 - python >= 2.6
@@ -227,7 +227,7 @@ options:
         - The database flags passed to the instance at startup.
         required: false
         type: list
-        version_added: 2.9
+        version_added: '2.9'
         suboptions:
           name:
             description:
@@ -322,7 +322,43 @@ options:
             - Define the backup start time in UTC (HH:MM) .
             required: false
             type: str
-extends_documentation_fragment: gcp
+  project:
+    description:
+    - The Google Cloud Platform project to use.
+    type: str
+  auth_kind:
+    description:
+    - The type of credential used.
+    type: str
+    required: true
+    choices:
+    - application
+    - machineaccount
+    - serviceaccount
+  service_account_contents:
+    description:
+    - The contents of a Service Account JSON file, either in a dictionary or as a
+      JSON string that represents it.
+    type: jsonarg
+  service_account_file:
+    description:
+    - The path of a Service Account JSON file if serviceaccount is selected as type.
+    type: path
+  service_account_email:
+    description:
+    - An optional service account email address if machineaccount is selected and
+      the user does not wish to use the default email.
+    type: str
+  scopes:
+    description:
+    - Array of scopes to be used
+    type: list
+  env_type:
+    description:
+    - Specifies which Ansible environment you're running this module within.
+    - This should not be set unless you know what you're doing.
+    - This only alters the User Agent string for any API requests.
+    type: str
 '''
 
 EXAMPLES = '''
diff --git a/lib/ansible/modules/cloud/google/gcp_sql_instance_info.py b/lib/ansible/modules/cloud/google/gcp_sql_instance_info.py
index ac3a4d700e..3858b51829 100644
--- a/lib/ansible/modules/cloud/google/gcp_sql_instance_info.py
+++ b/lib/ansible/modules/cloud/google/gcp_sql_instance_info.py
@@ -35,14 +35,61 @@ description:
 - This module was called C(gcp_sql_instance_facts) before Ansible 2.9. The usage has
   not changed.
 short_description: Gather info for GCP Instance
-version_added: 2.8
+version_added: '2.8'
 author: Google Inc. (@googlecloudplatform)
 requirements:
 - python >= 2.6
 - requests >= 2.18.4
 - google-auth >= 1.3.0
-options: {}
-extends_documentation_fragment: gcp
+options:
+  project:
+    description:
+    - The Google Cloud Platform project to use.
+    type: str
+  auth_kind:
+    description:
+    - The type of credential used.
+    type: str
+    required: true
+    choices:
+    - application
+    - machineaccount
+    - serviceaccount
+  service_account_contents:
+    description:
+    - The contents of a Service Account JSON file, either in a dictionary or as a
+      JSON string that represents it.
+    type: jsonarg
+  service_account_file:
+    description:
+    - The path of a Service Account JSON file if serviceaccount is selected as type.
+    type: path
+  service_account_email:
+    description:
+    - An optional service account email address if machineaccount is selected and
+      the user does not wish to use the default email.
+    type: str
+  scopes:
+    description:
+    - Array of scopes to be used
+    type: list
+  env_type:
+    description:
+    - Specifies which Ansible environment you're running this module within.
+    - This should not be set unless you know what you're doing.
+    - This only alters the User Agent string for any API requests.
+    type: str
+notes:
+- for authentication, you can set service_account_file using the c(gcp_service_account_file)
+  env variable.
+- for authentication, you can set service_account_contents using the c(GCP_SERVICE_ACCOUNT_CONTENTS)
+  env variable.
+- For authentication, you can set service_account_email using the C(GCP_SERVICE_ACCOUNT_EMAIL)
+  env variable.
+- For authentication, you can set auth_kind using the C(GCP_AUTH_KIND) env variable.
+- For authentication, you can set scopes using the C(GCP_SCOPES) env variable.
+- Environment variables values will only be used if the playbook values are not set.
+- The I(service_account_email) and I(service_account_file) options are mutually exclusive.
 '''
 
 EXAMPLES = '''
diff --git a/lib/ansible/modules/cloud/google/gcp_sql_user.py b/lib/ansible/modules/cloud/google/gcp_sql_user.py
index 50d4a5386a..f9622dba92 100644
--- a/lib/ansible/modules/cloud/google/gcp_sql_user.py
+++ b/lib/ansible/modules/cloud/google/gcp_sql_user.py
@@ -33,7 +33,7 @@ module: gcp_sql_user
 description:
 - The Users resource represents a database user in a Cloud SQL instance.
 short_description: Creates a GCP User
-version_added: 2.7
+version_added: '2.7'
 author: Google Inc. (@googlecloudplatform)
 requirements:
 - python >= 2.6
@@ -75,7 +75,43 @@ options:
     - The password for the user.
     required: false
     type: str
-extends_documentation_fragment: gcp
+  project:
+    description:
+    - The Google Cloud Platform project to use.
+    type: str
+  auth_kind:
+    description:
+    - The type of credential used.
+    type: str
+    required: true
+    choices:
+    - application
+    - machineaccount
+    - serviceaccount
+  service_account_contents:
+    description:
+    - The contents of a Service Account JSON file, either in a dictionary or as a
+      JSON string that represents it.
+    type: jsonarg
+  service_account_file:
+    description:
+    - The path of a Service Account JSON file if serviceaccount is selected as type.
+    type: path
+  service_account_email:
+    description:
+    - An optional service account email address if machineaccount is selected and
+      the user does not wish to use the default email.
+    type: str
+  scopes:
+    description:
+    - Array of scopes to be used
+    type: list
+  env_type:
+    description:
+    - Specifies which Ansible environment you're running this module within.
+    - This should not be set unless you know what you're doing.
+    - This only alters the User Agent string for any API requests.
+    type: str
 '''
 
 EXAMPLES = '''
diff --git a/lib/ansible/modules/cloud/google/gcp_sql_user_info.py b/lib/ansible/modules/cloud/google/gcp_sql_user_info.py
index 8e69002da2..90cf9cb1f9 100644
--- a/lib/ansible/modules/cloud/google/gcp_sql_user_info.py
+++ b/lib/ansible/modules/cloud/google/gcp_sql_user_info.py
@@ -35,7 +35,7 @@ description:
 - This module was called C(gcp_sql_user_facts) before Ansible 2.9. The usage has not
   changed.
 short_description: Gather info for GCP User
-version_added: 2.8
+version_added: '2.8'
 author: Google Inc. (@googlecloudplatform)
 requirements:
 - python >= 2.6
@@ -52,7 +52,54 @@ options:
       }}"'
     required: true
     type: dict
-extends_documentation_fragment: gcp
+  project:
+    description:
+    - The Google Cloud Platform project to use.
+    type: str
+  auth_kind:
+    description:
+    - The type of credential used.
+    type: str
+    required: true
+    choices:
+    - application
+    - machineaccount
+    - serviceaccount
+  service_account_contents:
+    description:
+    - The contents of a Service Account JSON file, either in a dictionary or as a
+      JSON string that represents it.
+    type: jsonarg
+  service_account_file:
+    description:
+    - The path of a Service Account JSON file if serviceaccount is selected as type.
+    type: path
+  service_account_email:
+    description:
+    - An optional service account email address if machineaccount is selected and
+      the user does not wish to use the default email.
+    type: str
+  scopes:
+    description:
+    - Array of scopes to be used
+    type: list
+  env_type:
+    description:
+    - Specifies which Ansible environment you're running this module within.
+    - This should not be set unless you know what you're doing.
+    - This only alters the User Agent string for any API requests.
+    type: str
+notes:
+- for authentication, you can set service_account_file using the c(gcp_service_account_file)
+  env variable.
+- for authentication, you can set service_account_contents using the c(GCP_SERVICE_ACCOUNT_CONTENTS)
+  env variable.
+- For authentication, you can set service_account_email using the C(GCP_SERVICE_ACCOUNT_EMAIL)
+  env variable.
+- For authentication, you can set auth_kind using the C(GCP_AUTH_KIND) env variable.
+- For authentication, you can set scopes using the C(GCP_SCOPES) env variable.
+- Environment variables values will only be used if the playbook values are not set.
+- The I(service_account_email) and I(service_account_file) options are mutually exclusive.
 '''
 
 EXAMPLES = '''
diff --git a/lib/ansible/modules/cloud/google/gcp_storage_bucket.py b/lib/ansible/modules/cloud/google/gcp_storage_bucket.py
index c69f1d3d3d..7f4fb8c640 100644
--- a/lib/ansible/modules/cloud/google/gcp_storage_bucket.py
+++ b/lib/ansible/modules/cloud/google/gcp_storage_bucket.py
@@ -38,7 +38,7 @@ description:
   manipulation of an existing bucket's access controls.
 - A bucket is always owned by the project team owners group.
 short_description: Creates a GCP Bucket
-version_added: 2.6
+version_added: '2.6'
 author: Google Inc. (@googlecloudplatform)
 requirements:
 - python >= 2.6
@@ -144,7 +144,7 @@ options:
     - Default access controls to apply to new objects when no ACL is provided.
     required: false
     type: list
-    version_added: 2.7
+    version_added: '2.7'
     suboptions:
       bucket:
         description:
@@ -341,8 +341,7 @@ options:
         type: str
   project:
     description:
-    - A valid API project identifier.
-    required: false
+    - The Google Cloud Platform project to use.
     type: str
   predefined_default_object_acl:
     description:
@@ -361,7 +360,39 @@ options:
       "bucketOwnerRead", "private", "projectPrivate", "publicRead"'
     required: false
     type: str
-extends_documentation_fragment: gcp
+  auth_kind:
+    description:
+    - The type of credential used.
+    type: str
+    required: true
+    choices:
+    - application
+    - machineaccount
+    - serviceaccount
+  service_account_contents:
+    description:
+    - The contents of a Service Account JSON file, either in a dictionary or as a
+      JSON string that represents it.
+    type: jsonarg
+  service_account_file:
+    description:
+    - The path of a Service Account JSON file if serviceaccount is selected as type.
+    type: path
+  service_account_email:
+    description:
+    - An optional service account email address if machineaccount is selected and
+      the user does not wish to use the default email.
+    type: str
+  scopes:
+    description:
+    - Array of scopes to be used
+    type: list
+  env_type:
+    description:
+    - Specifies which Ansible environment you're running this module within.
+    - This should not be set unless you know what you're doing.
+    - This only alters the User Agent string for any API requests.
+    type: str
 '''
 
 EXAMPLES = '''
@@ -541,7 +572,7 @@ defaultObjectAcl:
       type: str
 id:
   description:
-  - The ID of the bucket. For buckets, the id and name properties are the same.
+  - The ID of the bucket. For buckets, the id and name properities are the same.
   returned: success
   type: str
 lifecycle:
diff --git a/lib/ansible/modules/cloud/google/gcp_storage_bucket_access_control.py b/lib/ansible/modules/cloud/google/gcp_storage_bucket_access_control.py
index 37cbc13613..79c4fe7003 100644
--- a/lib/ansible/modules/cloud/google/gcp_storage_bucket_access_control.py
+++ b/lib/ansible/modules/cloud/google/gcp_storage_bucket_access_control.py
@@ -42,7 +42,7 @@ description:
   see Access Control, with the caveat that this API uses READER, WRITER, and OWNER
   instead of READ, WRITE, and FULL_CONTROL.'
 short_description: Creates a GCP BucketAccessControl
-version_added: 2.6
+version_added: '2.6'
 author: Google Inc. (@googlecloudplatform)
 requirements:
 - python >= 2.6
@@ -77,35 +77,49 @@ options:
       the entity would be domain-example.com.
     required: true
     type: str
-  entity_id:
-    description:
-    - The ID for the entity.
-    required: false
-    type: str
-  project_team:
-    description:
-    - The project team associated with the entity.
-    required: false
-    type: dict
-    suboptions:
-      project_number:
-        description:
-        - The project team associated with the entity.
-        required: false
-        type: str
-      team:
-        description:
-        - The team.
-        - 'Some valid choices include: "editors", "owners", "viewers"'
-        required: false
-        type: str
   role:
     description:
     - The access permission for the entity.
     - 'Some valid choices include: "OWNER", "READER", "WRITER"'
     required: false
     type: str
-extends_documentation_fragment: gcp
+  project:
+    description:
+    - The Google Cloud Platform project to use.
+    type: str
+  auth_kind:
+    description:
+    - The type of credential used.
+    type: str
+    required: true
+    choices:
+    - application
+    - machineaccount
+    - serviceaccount
+  service_account_contents:
+    description:
+    - The contents of a Service Account JSON file, either in a dictionary or as a
+      JSON string that represents it.
+    type: jsonarg
+  service_account_file:
+    description:
+    - The path of a Service Account JSON file if serviceaccount is selected as type.
+    type: path
+  service_account_email:
+    description:
+    - An optional service account email address if machineaccount is selected and
+      the user does not wish to use the default email.
+    type: str
+  scopes:
+    description:
+    - Array of scopes to be used
+    type: list
+  env_type:
+    description:
+    - Specifies which Ansible environment you're running this module within.
+    - This should not be set unless you know what you're doing.
+    - This only alters the User Agent string for any API requests.
+    type: str
 '''
 
 EXAMPLES = '''
@@ -208,8 +222,6 @@ def main():
             state=dict(default='present', choices=['present', 'absent'], type='str'),
             bucket=dict(required=True, type='dict'),
             entity=dict(required=True, type='str'),
-            entity_id=dict(type='str'),
-            project_team=dict(type='dict', options=dict(project_number=dict(type='str'), team=dict(type='str'))),
             role=dict(type='str'),
         )
     )
@@ -265,8 +277,6 @@ def resource_to_request(module):
         u'kind': 'storage#bucketAccessControl',
         u'bucket': replace_resource_dict(module.params.get(u'bucket', {}), 'name'),
         u'entity': module.params.get('entity'),
-        u'entityId': module.params.get('entity_id'),
-        u'projectTeam': BucketAccessControlProjectteam(module.params.get('project_team', {}), module).to_request(),
         u'role': module.params.get('role'),
     }
     return_vals = {}
@@ -335,10 +345,10 @@ def is_different(module, response):
 # This is for doing comparisons with Ansible's current parameters.
 def response_to_hash(module, response):
     return {
-        u'bucket': response.get(u'bucket'),
+        u'bucket': replace_resource_dict(module.params.get(u'bucket', {}), 'name'),
         u'domain': response.get(u'domain'),
         u'email': response.get(u'email'),
-        u'entity': response.get(u'entity'),
+        u'entity': module.params.get('entity'),
         u'entityId': response.get(u'entityId'),
         u'id': response.get(u'id'),
         u'projectTeam': BucketAccessControlProjectteam(response.get(u'projectTeam', {}), module).from_response(),
diff --git a/lib/ansible/modules/cloud/google/gcp_storage_object.py b/lib/ansible/modules/cloud/google/gcp_storage_object.py
index fc3c304733..fcaa68ea9f 100644
--- a/lib/ansible/modules/cloud/google/gcp_storage_object.py
+++ b/lib/ansible/modules/cloud/google/gcp_storage_object.py
@@ -33,7 +33,7 @@ module: gcp_storage_object
 description:
 - Upload or download a file from a GCS bucket.
 short_description: Creates a GCP Object
-version_added: 2.8
+version_added: '2.8'
 author: Google Inc. (@googlecloudplatform)
 requirements:
 - python >= 2.6
@@ -75,7 +75,43 @@ options:
     - The name of the bucket.
     required: false
     type: str
-extends_documentation_fragment: gcp
+  project:
+    description:
+    - The Google Cloud Platform project to use.
+    type: str
+  auth_kind:
+    description:
+    - The type of credential used.
+    type: str
+    required: true
+    choices:
+    - application
+    - machineaccount
+    - serviceaccount
+  service_account_contents:
+    description:
+    - The contents of a Service Account JSON file, either in a dictionary or as a
+      JSON string that represents it.
+    type: jsonarg
+  service_account_file:
+    description:
+    - The path of a Service Account JSON file if serviceaccount is selected as type.
+    type: path
+  service_account_email:
+    description:
+    - An optional service account email address if machineaccount is selected and
+      the user does not wish to use the default email.
+    type: str
+  scopes:
+    description:
+    - Array of scopes to be used
+    type: list
+  env_type:
+    description:
+    - Specifies which Ansible environment you're running this module within.
+    - This should not be set unless you know what you're doing.
+    - This only alters the User Agent string for any API requests.
+    type: str
 '''
 
 EXAMPLES = '''
diff --git a/lib/ansible/modules/cloud/google/gcp_tpu_node.py b/lib/ansible/modules/cloud/google/gcp_tpu_node.py
index 45b3e8d56f..0a25dac351 100644
--- a/lib/ansible/modules/cloud/google/gcp_tpu_node.py
+++ b/lib/ansible/modules/cloud/google/gcp_tpu_node.py
@@ -33,7 +33,7 @@ module: gcp_tpu_node
 description:
 - A Cloud TPU instance.
 short_description: Creates a GCP Node
-version_added: 2.9
+version_added: '2.9'
 author: Google Inc. (@googlecloudplatform)
 requirements:
 - python >= 2.6
@@ -109,10 +109,56 @@ options:
     - The GCP location for the TPU.
     required: true
     type: str
-extends_documentation_fragment: gcp
+  project:
+    description:
+    - The Google Cloud Platform project to use.
+    type: str
+  auth_kind:
+    description:
+    - The type of credential used.
+    type: str
+    required: true
+    choices:
+    - application
+    - machineaccount
+    - serviceaccount
+  service_account_contents:
+    description:
+    - The contents of a Service Account JSON file, either in a dictionary or as a
+      JSON string that represents it.
+    type: jsonarg
+  service_account_file:
+    description:
+    - The path of a Service Account JSON file if serviceaccount is selected as type.
+    type: path
+  service_account_email:
+    description:
+    - An optional service account email address if machineaccount is selected and
+      the user does not wish to use the default email.
+    type: str
+  scopes:
+    description:
+    - Array of scopes to be used
+    type: list
+  env_type:
+    description:
+    - Specifies which Ansible environment you're running this module within.
+    - This should not be set unless you know what you're doing.
+    - This only alters the User Agent string for any API requests.
+    type: str
 notes:
 - 'API Reference: U(https://cloud.google.com/tpu/docs/reference/rest/)'
 - 'Official Documentation: U(https://cloud.google.com/tpu/docs/)'
+- for authentication, you can set service_account_file using the c(gcp_service_account_file)
+  env variable.
+- for authentication, you can set service_account_contents using the c(GCP_SERVICE_ACCOUNT_CONTENTS)
+  env variable.
+- For authentication, you can set service_account_email using the C(GCP_SERVICE_ACCOUNT_EMAIL)
+  env variable.
+- For authentication, you can set auth_kind using the C(GCP_AUTH_KIND) env variable.
+- For authentication, you can set scopes using the C(GCP_SCOPES) env variable.
+- Environment variables values will only be used if the playbook values are not set.
+- The I(service_account_email) and I(service_account_file) options are mutually exclusive.
 '''
 
 EXAMPLES = '''
diff --git a/lib/ansible/modules/cloud/google/gcp_tpu_node_info.py b/lib/ansible/modules/cloud/google/gcp_tpu_node_info.py
index a509a62513..b22cb35523 100644
--- a/lib/ansible/modules/cloud/google/gcp_tpu_node_info.py
+++ b/lib/ansible/modules/cloud/google/gcp_tpu_node_info.py
@@ -33,7 +33,7 @@ module: gcp_tpu_node_info
 description:
 - Gather info for GCP Node
 short_description: Gather info for GCP Node
-version_added: 2.9
+version_added: '2.9'
 author: Google Inc. (@googlecloudplatform)
 requirements:
 - python >= 2.6
@@ -45,7 +45,54 @@ options:
     - The GCP location for the TPU.
     required: true
     type: str
-extends_documentation_fragment: gcp
+  project:
+    description:
+    - The Google Cloud Platform project to use.
+    type: str
+  auth_kind:
+    description:
+    - The type of credential used.
+    type: str
+    required: true
+    choices:
+    - application
+    - machineaccount
+    - serviceaccount
+  service_account_contents:
+    description:
+    - The contents of a Service Account JSON file, either in a dictionary or as a
+      JSON string that represents it.
+    type: jsonarg
+  service_account_file:
+    description:
+    - The path of a Service Account JSON file if serviceaccount is selected as type.
+    type: path
+  service_account_email:
+    description:
+    - An optional service account email address if machineaccount is selected and
+      the user does not wish to use the default email.
+    type: str
+  scopes:
+    description:
+    - Array of scopes to be used
+    type: list
+  env_type:
+    description:
+    - Specifies which Ansible environment you're running this module within.
+    - This should not be set unless you know what you're doing.
+    - This only alters the User Agent string for any API requests.
+    type: str
+notes:
+- for authentication, you can set service_account_file using the c(gcp_service_account_file)
+  env variable.
+- for authentication, you can set service_account_contents using the c(GCP_SERVICE_ACCOUNT_CONTENTS)
+  env variable.
+- For authentication, you can set service_account_email using the C(GCP_SERVICE_ACCOUNT_EMAIL)
+  env variable.
+- For authentication, you can set auth_kind using the C(GCP_AUTH_KIND) env variable.
+- For authentication, you can set scopes using the C(GCP_SCOPES) env variable.
+- Environment variables values will only be used if the playbook values are not set.
+- The I(service_account_email) and I(service_account_file) options are mutually exclusive.
 '''
 
 EXAMPLES = '''
diff --git a/test/integration/targets/gcp_spanner_database/tasks/autogen.yml b/test/integration/targets/gcp_spanner_database/tasks/autogen.yml
new file mode 100644
index 0000000000..3fda4e4397
--- /dev/null
+++ b/test/integration/targets/gcp_spanner_database/tasks/autogen.yml
@@ -0,0 +1,135 @@
+---
+# ----------------------------------------------------------------------------
+#
+#     ***     AUTO GENERATED CODE    ***    AUTO GENERATED CODE     ***
+#
+# ----------------------------------------------------------------------------
+#
+#     This file is automatically generated by Magic Modules and manual
+#     changes will be clobbered when the file is regenerated.
+#
+#     Please read more about how to change this file at
+#     https://www.github.com/GoogleCloudPlatform/magic-modules
+#
+# ----------------------------------------------------------------------------
+# Pre-test setup
+- name: create a instance
+  gcp_spanner_instance:
+    name: instance-database
+    display_name: My Spanner Instance
+    node_count: 2
+    labels:
+      cost_center: ti-1700004
+    config: regional-us-central1
+    project: "{{ gcp_project }}"
+    auth_kind: "{{ gcp_cred_kind }}"
+    service_account_file: "{{ gcp_cred_file }}"
+    state: present
+  register: instance
+- name: delete a database
+  gcp_spanner_database:
+    name: webstore
+    instance: "{{ instance }}"
+    project: "{{ gcp_project }}"
+    auth_kind: "{{ gcp_cred_kind }}"
+    service_account_file: "{{ gcp_cred_file }}"
+    state: absent
+#----------------------------------------------------------
+- name: create a database
+  gcp_spanner_database:
+    name: webstore
+    instance: "{{ instance }}"
+    project: "{{ gcp_project }}"
+    auth_kind: "{{ gcp_cred_kind }}"
+    service_account_file: "{{ gcp_cred_file }}"
+    state: present
+  register: result
+- name: assert changed is true
+  assert:
+    that:
+      - result.changed == true
+- name: verify that database was created
+  gcp_spanner_database_info:
+      instance: "{{ instance }}"
+      project: "{{ gcp_project }}"
+      auth_kind: "{{ gcp_cred_kind }}"
+      service_account_file: "{{ gcp_cred_file }}"
+      scopes:
+        - https://www.googleapis.com/auth/spanner.admin
+  register: results
+- name: verify that command succeeded
+  assert:
+    that:
+      - results['resources'] | map(attribute='name') | select("match", ".*webstore.*") | list | length == 1
+# ----------------------------------------------------------------------------
+- name: create a database that already exists
+  gcp_spanner_database:
+    name: webstore
+    instance: "{{ instance }}"
+    project: "{{ gcp_project }}"
+    auth_kind: "{{ gcp_cred_kind }}"
+    service_account_file: "{{ gcp_cred_file }}"
+    state: present
+  register: result
+- name: assert changed is false
+  assert:
+    that:
+      - result.changed == false
+#----------------------------------------------------------
+- name: delete a database
+  gcp_spanner_database:
+    name: webstore
+    instance: "{{ instance }}"
+    project: "{{ gcp_project }}"
+    auth_kind: "{{ gcp_cred_kind }}"
+    service_account_file: "{{ gcp_cred_file }}"
+    state: absent
+  register: result
+- name: assert changed is true
+  assert:
+    that:
+      - result.changed == true
+- name: verify that database was deleted
+  gcp_spanner_database_info:
+      instance: "{{ instance }}"
+      project: "{{ gcp_project }}"
+      auth_kind: "{{ gcp_cred_kind }}"
+      service_account_file: "{{ gcp_cred_file }}"
+      scopes:
+        - https://www.googleapis.com/auth/spanner.admin
+  register: results
+- name: verify that command succeeded
+  assert:
+    that:
+      - results['resources'] | map(attribute='name') | select("match", ".*webstore.*") | list | length == 0
+# ----------------------------------------------------------------------------
+- name: delete a database that does not exist
+  gcp_spanner_database:
+    name: webstore
+    instance: "{{ instance }}"
+    project: "{{ gcp_project }}"
+    auth_kind: "{{ gcp_cred_kind }}"
+    service_account_file: "{{ gcp_cred_file }}"
+    state: absent
+  register: result
+- name: assert changed is false
+  assert:
+    that:
+      - result.changed == false
+#---------------------------------------------------------
+# Post-test teardown
+# If errors happen, don't crash the playbook!
+- name: delete a instance
+  gcp_spanner_instance:
+    name: instance-database
+    display_name: My Spanner Instance
+    node_count: 2
+    labels:
+      cost_center: ti-1700004
+    config: regional-us-central1
+    project: "{{ gcp_project }}"
+    auth_kind: "{{ gcp_cred_kind }}"
+    service_account_file: "{{ gcp_cred_file }}"
+    state: absent
+  register: instance
+  ignore_errors: true
diff --git a/test/integration/targets/gcp_spanner_database/tasks/main.yml b/test/integration/targets/gcp_spanner_database/tasks/main.yml
index 3fda4e4397..45d6e49178 100644
--- a/test/integration/targets/gcp_spanner_database/tasks/main.yml
+++ b/test/integration/targets/gcp_spanner_database/tasks/main.yml
@@ -1,135 +1,2 @@
 ---
-# ----------------------------------------------------------------------------
-#
-#     ***     AUTO GENERATED CODE    ***    AUTO GENERATED CODE     ***
-#
-# ----------------------------------------------------------------------------
-#
-#     This file is automatically generated by Magic Modules and manual
-#     changes will be clobbered when the file is regenerated.
-#
-#     Please read more about how to change this file at
-#     https://www.github.com/GoogleCloudPlatform/magic-modules
-#
-# ----------------------------------------------------------------------------
-# Pre-test setup
-- name: create a instance
-  gcp_spanner_instance:
-    name: instance-database
-    display_name: My Spanner Instance
-    node_count: 2
-    labels:
-      cost_center: ti-1700004
-    config: regional-us-central1
-    project: "{{ gcp_project }}"
-    auth_kind: "{{ gcp_cred_kind }}"
-    service_account_file: "{{ gcp_cred_file }}"
-    state: present
-  register: instance
-- name: delete a database
-  gcp_spanner_database:
-    name: webstore
-    instance: "{{ instance }}"
-    project: "{{ gcp_project }}"
-    auth_kind: "{{ gcp_cred_kind }}"
-    service_account_file: "{{ gcp_cred_file }}"
-    state: absent
-#----------------------------------------------------------
-- name: create a database
-  gcp_spanner_database:
-    name: webstore
-    instance: "{{ instance }}"
-    project: "{{ gcp_project }}"
-    auth_kind: "{{ gcp_cred_kind }}"
-    service_account_file: "{{ gcp_cred_file }}"
-    state: present
-  register: result
-- name: assert changed is true
-  assert:
-    that:
-      - result.changed == true
-- name: verify that database was created
-  gcp_spanner_database_info:
-      instance: "{{ instance }}"
-      project: "{{ gcp_project }}"
-      auth_kind: "{{ gcp_cred_kind }}"
-      service_account_file: "{{ gcp_cred_file }}"
-      scopes:
-        - https://www.googleapis.com/auth/spanner.admin
-  register: results
-- name: verify that command succeeded
-  assert:
-    that:
-      - results['resources'] | map(attribute='name') | select("match", ".*webstore.*") | list | length == 1
-# ----------------------------------------------------------------------------
-- name: create a database that already exists
-  gcp_spanner_database:
-    name: webstore
-    instance: "{{ instance }}"
-    project: "{{ gcp_project }}"
-    auth_kind: "{{ gcp_cred_kind }}"
-    service_account_file: "{{ gcp_cred_file }}"
-    state: present
-  register: result
-- name: assert changed is false
-  assert:
-    that:
-      - result.changed == false
-#----------------------------------------------------------
-- name: delete a database
-  gcp_spanner_database:
-    name: webstore
-    instance: "{{ instance }}"
-    project: "{{ gcp_project }}"
-    auth_kind: "{{ gcp_cred_kind }}"
-    service_account_file: "{{ gcp_cred_file }}"
-    state: absent
-  register: result
-- name: assert changed is true
-  assert:
-    that:
-      - result.changed == true
-- name: verify that database was deleted
-  gcp_spanner_database_info:
-      instance: "{{ instance }}"
-      project: "{{ gcp_project }}"
-      auth_kind: "{{ gcp_cred_kind }}"
-      service_account_file: "{{ gcp_cred_file }}"
-      scopes:
-        - https://www.googleapis.com/auth/spanner.admin
-  register: results
-- name: verify that command succeeded
-  assert:
-    that:
-      - results['resources'] | map(attribute='name') | select("match", ".*webstore.*") | list | length == 0
-# ----------------------------------------------------------------------------
-- name: delete a database that does not exist
-  gcp_spanner_database:
-    name: webstore
-    instance: "{{ instance }}"
-    project: "{{ gcp_project }}"
-    auth_kind: "{{ gcp_cred_kind }}"
-    service_account_file: "{{ gcp_cred_file }}"
-    state: absent
-  register: result
-- name: assert changed is false
-  assert:
-    that:
-      - result.changed == false
-#---------------------------------------------------------
-# Post-test teardown
-# If errors happen, don't crash the playbook!
-- name: delete a instance
-  gcp_spanner_instance:
-    name: instance-database
-    display_name: My Spanner Instance
-    node_count: 2
-    labels:
-      cost_center: ti-1700004
-    config: regional-us-central1
-    project: "{{ gcp_project }}"
-    auth_kind: "{{ gcp_cred_kind }}"
-    service_account_file: "{{ gcp_cred_file }}"
-    state: absent
-  register: instance
-  ignore_errors: true
+- include_tasks: autogen.yml
diff --git a/test/integration/targets/gcp_spanner_instance/tasks/autogen.yml b/test/integration/targets/gcp_spanner_instance/tasks/autogen.yml
new file mode 100644
index 0000000000..8fb40459a8
--- /dev/null
+++ b/test/integration/targets/gcp_spanner_instance/tasks/autogen.yml
@@ -0,0 +1,123 @@
+---
+# ----------------------------------------------------------------------------
+#
+#     ***     AUTO GENERATED CODE    ***    AUTO GENERATED CODE     ***
+#
+# ----------------------------------------------------------------------------
+#
+#     This file is automatically generated by Magic Modules and manual
+#     changes will be clobbered when the file is regenerated.
+#
+#     Please read more about how to change this file at
+#     https://www.github.com/GoogleCloudPlatform/magic-modules
+#
+# ----------------------------------------------------------------------------
+# Pre-test setup
+- name: delete a instance
+  gcp_spanner_instance:
+    name: testinstance
+    display_name: My Spanner Instance
+    node_count: 2
+    labels:
+      cost_center: ti-1700004
+    config: regional-us-central1
+    project: "{{ gcp_project }}"
+    auth_kind: "{{ gcp_cred_kind }}"
+    service_account_file: "{{ gcp_cred_file }}"
+    state: absent
+#----------------------------------------------------------
+- name: create a instance
+  gcp_spanner_instance:
+    name: testinstance
+    display_name: My Spanner Instance
+    node_count: 2
+    labels:
+      cost_center: ti-1700004
+    config: regional-us-central1
+    project: "{{ gcp_project }}"
+    auth_kind: "{{ gcp_cred_kind }}"
+    service_account_file: "{{ gcp_cred_file }}"
+    state: present
+  register: result
+- name: assert changed is true
+  assert:
+    that:
+      - result.changed == true
+- name: verify that instance was created
+  gcp_spanner_instance_info:
+      project: "{{ gcp_project }}"
+      auth_kind: "{{ gcp_cred_kind }}"
+      service_account_file: "{{ gcp_cred_file }}"
+      scopes:
+        - https://www.googleapis.com/auth/spanner.admin
+  register: results
+- name: verify that command succeeded
+  assert:
+    that:
+      - results['resources'] | map(attribute='name') | select("match", ".*testinstance.*") | list | length == 1
+# ----------------------------------------------------------------------------
+- name: create a instance that already exists
+  gcp_spanner_instance:
+    name: testinstance
+    display_name: My Spanner Instance
+    node_count: 2
+    labels:
+      cost_center: ti-1700004
+    config: regional-us-central1
+    project: "{{ gcp_project }}"
+    auth_kind: "{{ gcp_cred_kind }}"
+    service_account_file: "{{ gcp_cred_file }}"
+    state: present
+  register: result
+- name: assert changed is false
+  assert:
+    that:
+      - result.changed == false
+#----------------------------------------------------------
+- name: delete a instance
+  gcp_spanner_instance:
+    name: testinstance
+    display_name: My Spanner Instance
+    node_count: 2
+    labels:
+      cost_center: ti-1700004
+    config: regional-us-central1
+    project: "{{ gcp_project }}"
+    auth_kind: "{{ gcp_cred_kind }}"
+    service_account_file: "{{ gcp_cred_file }}"
+    state: absent
+  register: result
+- name: assert changed is true
+  assert:
+    that:
+      - result.changed == true
+- name: verify that instance was deleted
+  gcp_spanner_instance_info:
+      project: "{{ gcp_project }}"
+      auth_kind: "{{ gcp_cred_kind }}"
+      service_account_file: "{{ gcp_cred_file }}"
+      scopes:
+        - https://www.googleapis.com/auth/spanner.admin
+  register: results
+- name: verify that command succeeded
+  assert:
+    that:
+      - results['resources'] | map(attribute='name') | select("match", ".*testinstance.*") | list | length == 0
+# ----------------------------------------------------------------------------
+- name: delete a instance that does not exist
+  gcp_spanner_instance:
+    name: testinstance
+    display_name: My Spanner Instance
+    node_count: 2
+    labels:
+      cost_center: ti-1700004
+    config: regional-us-central1
+    project: "{{ gcp_project }}"
+    auth_kind: "{{ gcp_cred_kind }}"
+    service_account_file: "{{ gcp_cred_file }}"
+    state: absent
+  register: result
+- name: assert changed is false
+  assert:
+    that:
+      - result.changed == false
diff --git a/test/integration/targets/gcp_spanner_instance/tasks/main.yml b/test/integration/targets/gcp_spanner_instance/tasks/main.yml
index 8fb40459a8..45d6e49178 100644
--- a/test/integration/targets/gcp_spanner_instance/tasks/main.yml
+++ b/test/integration/targets/gcp_spanner_instance/tasks/main.yml
@@ -1,123 +1,2 @@
 ---
-# ----------------------------------------------------------------------------
-#
-#     ***     AUTO GENERATED CODE    ***    AUTO GENERATED CODE     ***
-#
-# ----------------------------------------------------------------------------
-#
-#     This file is automatically generated by Magic Modules and manual
-#     changes will be clobbered when the file is regenerated.
-#
-#     Please read more about how to change this file at
-#     https://www.github.com/GoogleCloudPlatform/magic-modules
-#
-# ----------------------------------------------------------------------------
-# Pre-test setup
-- name: delete a instance
-  gcp_spanner_instance:
-    name: testinstance
-    display_name: My Spanner Instance
-    node_count: 2
-    labels:
-      cost_center: ti-1700004
-    config: regional-us-central1
-    project: "{{ gcp_project }}"
-    auth_kind: "{{ gcp_cred_kind }}"
-    service_account_file: "{{ gcp_cred_file }}"
-    state: absent
-#----------------------------------------------------------
-- name: create a instance
-  gcp_spanner_instance:
-    name: testinstance
-    display_name: My Spanner Instance
-    node_count: 2
-    labels:
-      cost_center: ti-1700004
-    config: regional-us-central1
-    project: "{{ gcp_project }}"
-    auth_kind: "{{ gcp_cred_kind }}"
-    service_account_file: "{{ gcp_cred_file }}"
-    state: present
-  register: result
-- name: assert changed is true
-  assert:
-    that:
-      - result.changed == true
-- name: verify that instance was created
-  gcp_spanner_instance_info:
-      project: "{{ gcp_project }}"
-      auth_kind: "{{ gcp_cred_kind }}"
-      service_account_file: "{{ gcp_cred_file }}"
-      scopes:
-        - https://www.googleapis.com/auth/spanner.admin
-  register: results
-- name: verify that command succeeded
-  assert:
-    that:
-      - results['resources'] | map(attribute='name') | select("match", ".*testinstance.*") | list | length == 1
-# ----------------------------------------------------------------------------
-- name: create a instance that already exists
-  gcp_spanner_instance:
-    name: testinstance
-    display_name: My Spanner Instance
-    node_count: 2
-    labels:
-      cost_center: ti-1700004
-    config: regional-us-central1
-    project: "{{ gcp_project }}"
-    auth_kind: "{{ gcp_cred_kind }}"
-    service_account_file: "{{ gcp_cred_file }}"
-    state: present
-  register: result
-- name: assert changed is false
-  assert:
-    that:
-      - result.changed == false
-#----------------------------------------------------------
-- name: delete a instance
-  gcp_spanner_instance:
-    name: testinstance
-    display_name: My Spanner Instance
-    node_count: 2
-    labels:
-      cost_center: ti-1700004
-    config: regional-us-central1
-    project: "{{ gcp_project }}"
-    auth_kind: "{{ gcp_cred_kind }}"
-    service_account_file: "{{ gcp_cred_file }}"
-    state: absent
-  register: result
-- name: assert changed is true
-  assert:
-    that:
-      - result.changed == true
-- name: verify that instance was deleted
-  gcp_spanner_instance_info:
-      project: "{{ gcp_project }}"
-      auth_kind: "{{ gcp_cred_kind }}"
-      service_account_file: "{{ gcp_cred_file }}"
-      scopes:
-        - https://www.googleapis.com/auth/spanner.admin
-  register: results
-- name: verify that command succeeded
-  assert:
-    that:
-      - results['resources'] | map(attribute='name') | select("match", ".*testinstance.*") | list | length == 0
-# ----------------------------------------------------------------------------
-- name: delete a instance that does not exist
-  gcp_spanner_instance:
-    name: testinstance
-    display_name: My Spanner Instance
-    node_count: 2
-    labels:
-      cost_center: ti-1700004
-    config: regional-us-central1
-    project: "{{ gcp_project }}"
-    auth_kind: "{{ gcp_cred_kind }}"
-    service_account_file: "{{ gcp_cred_file }}"
-    state: absent
-  register: result
-- name: assert changed is false
-  assert:
-    that:
-      - result.changed == false
+- include_tasks: autogen.yml
diff --git a/test/integration/targets/gcp_sql_database/tasks/autogen.yml b/test/integration/targets/gcp_sql_database/tasks/autogen.yml
new file mode 100644
index 0000000000..ebe9cbdc06
--- /dev/null
+++ b/test/integration/targets/gcp_sql_database/tasks/autogen.yml
@@ -0,0 +1,144 @@
+---
+# ----------------------------------------------------------------------------
+#
+#     ***     AUTO GENERATED CODE    ***    AUTO GENERATED CODE     ***
+#
+# ----------------------------------------------------------------------------
+#
+#     This file is automatically generated by Magic Modules and manual
+#     changes will be clobbered when the file is regenerated.
+#
+#     Please read more about how to change this file at
+#     https://www.github.com/GoogleCloudPlatform/magic-modules
+#
+# ----------------------------------------------------------------------------
+# Pre-test setup
+- name: create a instance
+  gcp_sql_instance:
+    name: "{{resource_name}}-3"
+    settings:
+      ip_configuration:
+        authorized_networks:
+        - name: google dns server
+          value: 8.8.8.8/32
+      tier: db-n1-standard-1
+    region: us-central1
+    project: "{{ gcp_project }}"
+    auth_kind: "{{ gcp_cred_kind }}"
+    service_account_file: "{{ gcp_cred_file }}"
+    state: present
+  register: instance
+- name: delete a database
+  gcp_sql_database:
+    name: "{{ resource_name }}"
+    charset: utf8
+    instance: "{{ instance.name }}"
+    project: "{{ gcp_project }}"
+    auth_kind: "{{ gcp_cred_kind }}"
+    service_account_file: "{{ gcp_cred_file }}"
+    state: absent
+#----------------------------------------------------------
+- name: create a database
+  gcp_sql_database:
+    name: "{{ resource_name }}"
+    charset: utf8
+    instance: "{{ instance.name }}"
+    project: "{{ gcp_project }}"
+    auth_kind: "{{ gcp_cred_kind }}"
+    service_account_file: "{{ gcp_cred_file }}"
+    state: present
+  register: result
+- name: assert changed is true
+  assert:
+    that:
+      - result.changed == true
+- name: verify that database was created
+  gcp_sql_database_info:
+      instance: "{{ instance.name }}"
+      project: "{{ gcp_project }}"
+      auth_kind: "{{ gcp_cred_kind }}"
+      service_account_file: "{{ gcp_cred_file }}"
+      scopes:
+        - https://www.googleapis.com/auth/sqlservice.admin
+  register: results
+- name: verify that command succeeded
+  assert:
+    that:
+      - "\"{{resource_name}}\" in \"{{ results['resources'] | map(attribute='name') | list }}\""
+# ----------------------------------------------------------------------------
+- name: create a database that already exists
+  gcp_sql_database:
+    name: "{{ resource_name }}"
+    charset: utf8
+    instance: "{{ instance.name }}"
+    project: "{{ gcp_project }}"
+    auth_kind: "{{ gcp_cred_kind }}"
+    service_account_file: "{{ gcp_cred_file }}"
+    state: present
+  register: result
+- name: assert changed is false
+  assert:
+    that:
+      - result.changed == false
+#----------------------------------------------------------
+- name: delete a database
+  gcp_sql_database:
+    name: "{{ resource_name }}"
+    charset: utf8
+    instance: "{{ instance.name }}"
+    project: "{{ gcp_project }}"
+    auth_kind: "{{ gcp_cred_kind }}"
+    service_account_file: "{{ gcp_cred_file }}"
+    state: absent
+  register: result
+- name: assert changed is true
+  assert:
+    that:
+      - result.changed == true
+- name: verify that database was deleted
+  gcp_sql_database_info:
+      instance: "{{ instance.name }}"
+      project: "{{ gcp_project }}"
+      auth_kind: "{{ gcp_cred_kind }}"
+      service_account_file: "{{ gcp_cred_file }}"
+      scopes:
+        - https://www.googleapis.com/auth/sqlservice.admin
+  register: results
+- name: verify that command succeeded
+  assert:
+    that:
+      - "\"{{resource_name}}\" not in \"{{ results['resources'] | map(attribute='name') | list }}\""
+# ----------------------------------------------------------------------------
+- name: delete a database that does not exist
+  gcp_sql_database:
+    name: "{{ resource_name }}"
+    charset: utf8
+    instance: "{{ instance.name }}"
+    project: "{{ gcp_project }}"
+    auth_kind: "{{ gcp_cred_kind }}"
+    service_account_file: "{{ gcp_cred_file }}"
+    state: absent
+  register: result
+- name: assert changed is false
+  assert:
+    that:
+      - result.changed == false
+#---------------------------------------------------------
+# Post-test teardown
+# If errors happen, don't crash the playbook!
+- name: delete a instance
+  gcp_sql_instance:
+    name: "{{resource_name}}-3"
+    settings:
+      ip_configuration:
+        authorized_networks:
+        - name: google dns server
+          value: 8.8.8.8/32
+      tier: db-n1-standard-1
+    region: us-central1
+    project: "{{ gcp_project }}"
+    auth_kind: "{{ gcp_cred_kind }}"
+    service_account_file: "{{ gcp_cred_file }}"
+    state: absent
+  register: instance
+  ignore_errors: true
diff --git a/test/integration/targets/gcp_sql_database/tasks/main.yml b/test/integration/targets/gcp_sql_database/tasks/main.yml
index ebe9cbdc06..45d6e49178 100644
--- a/test/integration/targets/gcp_sql_database/tasks/main.yml
+++ b/test/integration/targets/gcp_sql_database/tasks/main.yml
@@ -1,144 +1,2 @@
 ---
-# ----------------------------------------------------------------------------
-#
-#     ***     AUTO GENERATED CODE    ***    AUTO GENERATED CODE     ***
-#
-# ----------------------------------------------------------------------------
-#
-#     This file is automatically generated by Magic Modules and manual
-#     changes will be clobbered when the file is regenerated.
-#
-#     Please read more about how to change this file at
-#     https://www.github.com/GoogleCloudPlatform/magic-modules
-#
-# ----------------------------------------------------------------------------
-# Pre-test setup
-- name: create a instance
-  gcp_sql_instance:
-    name: "{{resource_name}}-3"
-    settings:
-      ip_configuration:
-        authorized_networks:
-        - name: google dns server
-          value: 8.8.8.8/32
-      tier: db-n1-standard-1
-    region: us-central1
-    project: "{{ gcp_project }}"
-    auth_kind: "{{ gcp_cred_kind }}"
-    service_account_file: "{{ gcp_cred_file }}"
-    state: present
-  register: instance
-- name: delete a database
-  gcp_sql_database:
-    name: "{{ resource_name }}"
-    charset: utf8
-    instance: "{{ instance.name }}"
-    project: "{{ gcp_project }}"
-    auth_kind: "{{ gcp_cred_kind }}"
-    service_account_file: "{{ gcp_cred_file }}"
-    state: absent
-#----------------------------------------------------------
-- name: create a database
-  gcp_sql_database:
-    name: "{{ resource_name }}"
-    charset: utf8
-    instance: "{{ instance.name }}"
-    project: "{{ gcp_project }}"
-    auth_kind: "{{ gcp_cred_kind }}"
-    service_account_file: "{{ gcp_cred_file }}"
-    state: present
-  register: result
-- name: assert changed is true
-  assert:
-    that:
-      - result.changed == true
-- name: verify that database was created
-  gcp_sql_database_info:
-      instance: "{{ instance.name }}"
-      project: "{{ gcp_project }}"
-      auth_kind: "{{ gcp_cred_kind }}"
-      service_account_file: "{{ gcp_cred_file }}"
-      scopes:
-        - https://www.googleapis.com/auth/sqlservice.admin
-  register: results
-- name: verify that command succeeded
-  assert:
-    that:
-      - "\"{{resource_name}}\" in \"{{ results['resources'] | map(attribute='name') | list }}\""
-# ----------------------------------------------------------------------------
-- name: create a database that already exists
-  gcp_sql_database:
-    name: "{{ resource_name }}"
-    charset: utf8
-    instance: "{{ instance.name }}"
-    project: "{{ gcp_project }}"
-    auth_kind: "{{ gcp_cred_kind }}"
-    service_account_file: "{{ gcp_cred_file }}"
-    state: present
-  register: result
-- name: assert changed is false
-  assert:
-    that:
-      - result.changed == false
-#----------------------------------------------------------
-- name: delete a database
-  gcp_sql_database:
-    name: "{{ resource_name }}"
-    charset: utf8
-    instance: "{{ instance.name }}"
-    project: "{{ gcp_project }}"
-    auth_kind: "{{ gcp_cred_kind }}"
-    service_account_file: "{{ gcp_cred_file }}"
-    state: absent
-  register: result
-- name: assert changed is true
-  assert:
-    that:
-      - result.changed == true
-- name: verify that database was deleted
-  gcp_sql_database_info:
-      instance: "{{ instance.name }}"
-      project: "{{ gcp_project }}"
-      auth_kind: "{{ gcp_cred_kind }}"
-      service_account_file: "{{ gcp_cred_file }}"
-      scopes:
-        - https://www.googleapis.com/auth/sqlservice.admin
-  register: results
-- name: verify that command succeeded
-  assert:
-    that:
-      - "\"{{resource_name}}\" not in \"{{ results['resources'] | map(attribute='name') | list }}\""
-# ----------------------------------------------------------------------------
-- name: delete a database that does not exist
-  gcp_sql_database:
-    name: "{{ resource_name }}"
-    charset: utf8
-    instance: "{{ instance.name }}"
-    project: "{{ gcp_project }}"
-    auth_kind: "{{ gcp_cred_kind }}"
-    service_account_file: "{{ gcp_cred_file }}"
-    state: absent
-  register: result
-- name: assert changed is false
-  assert:
-    that:
-      - result.changed == false
-#---------------------------------------------------------
-# Post-test teardown
-# If errors happen, don't crash the playbook!
-- name: delete a instance
-  gcp_sql_instance:
-    name: "{{resource_name}}-3"
-    settings:
-      ip_configuration:
-        authorized_networks:
-        - name: google dns server
-          value: 8.8.8.8/32
-      tier: db-n1-standard-1
-    region: us-central1
-    project: "{{ gcp_project }}"
-    auth_kind: "{{ gcp_cred_kind }}"
-    service_account_file: "{{ gcp_cred_file }}"
-    state: absent
-  register: instance
-  ignore_errors: true
+- include_tasks: autogen.yml
diff --git a/test/integration/targets/gcp_sql_instance/tasks/autogen.yml b/test/integration/targets/gcp_sql_instance/tasks/autogen.yml
new file mode 100644
index 0000000000..1ddcda92ad
--- /dev/null
+++ b/test/integration/targets/gcp_sql_instance/tasks/autogen.yml
@@ -0,0 +1,133 @@
+---
+# ----------------------------------------------------------------------------
+#
+#     ***     AUTO GENERATED CODE    ***    AUTO GENERATED CODE     ***
+#
+# ----------------------------------------------------------------------------
+#
+#     This file is automatically generated by Magic Modules and manual
+#     changes will be clobbered when the file is regenerated.
+#
+#     Please read more about how to change this file at
+#     https://www.github.com/GoogleCloudPlatform/magic-modules
+#
+# ----------------------------------------------------------------------------
+# Pre-test setup
+- name: delete a instance
+  gcp_sql_instance:
+    name: "{{resource_name}}-2"
+    settings:
+      ip_configuration:
+        authorized_networks:
+        - name: google dns server
+          value: 8.8.8.8/32
+      tier: db-n1-standard-1
+    region: us-central1
+    project: "{{ gcp_project }}"
+    auth_kind: "{{ gcp_cred_kind }}"
+    service_account_file: "{{ gcp_cred_file }}"
+    state: absent
+#----------------------------------------------------------
+- name: create a instance
+  gcp_sql_instance:
+    name: "{{resource_name}}-2"
+    settings:
+      ip_configuration:
+        authorized_networks:
+        - name: google dns server
+          value: 8.8.8.8/32
+      tier: db-n1-standard-1
+    region: us-central1
+    project: "{{ gcp_project }}"
+    auth_kind: "{{ gcp_cred_kind }}"
+    service_account_file: "{{ gcp_cred_file }}"
+    state: present
+  register: result
+- name: assert changed is true
+  assert:
+    that:
+      - result.changed == true
+- name: verify that instance was created
+  gcp_sql_instance_info:
+      project: "{{ gcp_project }}"
+      auth_kind: "{{ gcp_cred_kind }}"
+      service_account_file: "{{ gcp_cred_file }}"
+      scopes:
+        - https://www.googleapis.com/auth/sqlservice.admin
+  register: results
+- name: verify that command succeeded
+  assert:
+    that:
+      - results['resources'] | map(attribute='name') | select("match", ".*{{resource_name}}-2.*") | list | length == 1
+# ----------------------------------------------------------------------------
+- name: create a instance that already exists
+  gcp_sql_instance:
+    name: "{{resource_name}}-2"
+    settings:
+      ip_configuration:
+        authorized_networks:
+        - name: google dns server
+          value: 8.8.8.8/32
+      tier: db-n1-standard-1
+    region: us-central1
+    project: "{{ gcp_project }}"
+    auth_kind: "{{ gcp_cred_kind }}"
+    service_account_file: "{{ gcp_cred_file }}"
+    state: present
+  register: result
+- name: assert changed is false
+  assert:
+    that:
+      - result.changed == false
+#----------------------------------------------------------
+- name: delete a instance
+  gcp_sql_instance:
+    name: "{{resource_name}}-2"
+    settings:
+      ip_configuration:
+        authorized_networks:
+        - name: google dns server
+          value: 8.8.8.8/32
+      tier: db-n1-standard-1
+    region: us-central1
+    project: "{{ gcp_project }}"
+    auth_kind: "{{ gcp_cred_kind }}"
+    service_account_file: "{{ gcp_cred_file }}"
+    state: absent
+  register: result
+- name: assert changed is true
+  assert:
+    that:
+      - result.changed == true
+- name: verify that instance was deleted
+  gcp_sql_instance_info:
+      project: "{{ gcp_project }}"
+      auth_kind: "{{ gcp_cred_kind }}"
+      service_account_file: "{{ gcp_cred_file }}"
+      scopes:
+        - https://www.googleapis.com/auth/sqlservice.admin
+  register: results
+- name: verify that command succeeded
+  assert:
+    that:
+      - results['resources'] | map(attribute='name') | select("match", ".*{{resource_name}}-2.*") | list | length == 0
+# ----------------------------------------------------------------------------
+- name: delete a instance that does not exist
+  gcp_sql_instance:
+    name: "{{resource_name}}-2"
+    settings:
+      ip_configuration:
+        authorized_networks:
+        - name: google dns server
+          value: 8.8.8.8/32
+      tier: db-n1-standard-1
+    region: us-central1
+    project: "{{ gcp_project }}"
+    auth_kind: "{{ gcp_cred_kind }}"
+    service_account_file: "{{ gcp_cred_file }}"
+    state: absent
+  register: result
+- name: assert changed is false
+  assert:
+    that:
+      - result.changed == false
diff --git a/test/integration/targets/gcp_sql_instance/tasks/main.yml b/test/integration/targets/gcp_sql_instance/tasks/main.yml
index 1ddcda92ad..45d6e49178 100644
--- a/test/integration/targets/gcp_sql_instance/tasks/main.yml
+++ b/test/integration/targets/gcp_sql_instance/tasks/main.yml
@@ -1,133 +1,2 @@
 ---
-# ----------------------------------------------------------------------------
-#
-#     ***     AUTO GENERATED CODE    ***    AUTO GENERATED CODE     ***
-#
-# ----------------------------------------------------------------------------
-#
-#     This file is automatically generated by Magic Modules and manual
-#     changes will be clobbered when the file is regenerated.
-#
-#     Please read more about how to change this file at
-#     https://www.github.com/GoogleCloudPlatform/magic-modules
-#
-# ----------------------------------------------------------------------------
-# Pre-test setup
-- name: delete a instance
-  gcp_sql_instance:
-    name: "{{resource_name}}-2"
-    settings:
-      ip_configuration:
-        authorized_networks:
-        - name: google dns server
-          value: 8.8.8.8/32
-      tier: db-n1-standard-1
-    region: us-central1
-    project: "{{ gcp_project }}"
-    auth_kind: "{{ gcp_cred_kind }}"
-    service_account_file: "{{ gcp_cred_file }}"
-    state: absent
-#----------------------------------------------------------
-- name: create a instance
-  gcp_sql_instance:
-    name: "{{resource_name}}-2"
-    settings:
-      ip_configuration:
-        authorized_networks:
-        - name: google dns server
-          value: 8.8.8.8/32
-      tier: db-n1-standard-1
-    region: us-central1
-    project: "{{ gcp_project }}"
-    auth_kind: "{{ gcp_cred_kind }}"
-    service_account_file: "{{ gcp_cred_file }}"
-    state: present
-  register: result
-- name: assert changed is true
-  assert:
-    that:
-      - result.changed == true
-- name: verify that instance was created
-  gcp_sql_instance_info:
-      project: "{{ gcp_project }}"
-      auth_kind: "{{ gcp_cred_kind }}"
-      service_account_file: "{{ gcp_cred_file }}"
-      scopes:
-        - https://www.googleapis.com/auth/sqlservice.admin
-  register: results
-- name: verify that command succeeded
-  assert:
-    that:
-      - results['resources'] | map(attribute='name') | select("match", ".*{{resource_name}}-2.*") | list | length == 1
-# ----------------------------------------------------------------------------
-- name: create a instance that already exists
-  gcp_sql_instance:
-    name: "{{resource_name}}-2"
-    settings:
-      ip_configuration:
-        authorized_networks:
-        - name: google dns server
-          value: 8.8.8.8/32
-      tier: db-n1-standard-1
-    region: us-central1
-    project: "{{ gcp_project }}"
-    auth_kind: "{{ gcp_cred_kind }}"
-    service_account_file: "{{ gcp_cred_file }}"
-    state: present
-  register: result
-- name: assert changed is false
-  assert:
-    that:
-      - result.changed == false
-#----------------------------------------------------------
-- name: delete a instance
-  gcp_sql_instance:
-    name: "{{resource_name}}-2"
-    settings:
-      ip_configuration:
-        authorized_networks:
-        - name: google dns server
-          value: 8.8.8.8/32
-      tier: db-n1-standard-1
-    region: us-central1
-    project: "{{ gcp_project }}"
-    auth_kind: "{{ gcp_cred_kind }}"
-    service_account_file: "{{ gcp_cred_file }}"
-    state: absent
-  register: result
-- name: assert changed is true
-  assert:
-    that:
-      - result.changed == true
-- name: verify that instance was deleted
-  gcp_sql_instance_info:
-      project: "{{ gcp_project }}"
-      auth_kind: "{{ gcp_cred_kind }}"
-      service_account_file: "{{ gcp_cred_file }}"
-      scopes:
-        - https://www.googleapis.com/auth/sqlservice.admin
-  register: results
-- name: verify that command succeeded
-  assert:
-    that:
-      - results['resources'] | map(attribute='name') | select("match", ".*{{resource_name}}-2.*") | list | length == 0
-# ----------------------------------------------------------------------------
-- name: delete a instance that does not exist
-  gcp_sql_instance:
-    name: "{{resource_name}}-2"
-    settings:
-      ip_configuration:
-        authorized_networks:
-        - name: google dns server
-          value: 8.8.8.8/32
-      tier: db-n1-standard-1
-    region: us-central1
-    project: "{{ gcp_project }}"
-    auth_kind: "{{ gcp_cred_kind }}"
-    service_account_file: "{{ gcp_cred_file }}"
-    state: absent
-  register: result
-- name: assert changed is false
-  assert:
-    that:
-      - result.changed == false
+- include_tasks: autogen.yml
diff --git a/test/integration/targets/gcp_sql_user/tasks/autogen.yml b/test/integration/targets/gcp_sql_user/tasks/autogen.yml
new file mode 100644
index 0000000000..d7f6d09daf
--- /dev/null
+++ b/test/integration/targets/gcp_sql_user/tasks/autogen.yml
@@ -0,0 +1,149 @@
+---
+# ----------------------------------------------------------------------------
+#
+#     ***     AUTO GENERATED CODE    ***    AUTO GENERATED CODE     ***
+#
+# ----------------------------------------------------------------------------
+#
+#     This file is automatically generated by Magic Modules and manual
+#     changes will be clobbered when the file is regenerated.
+#
+#     Please read more about how to change this file at
+#     https://www.github.com/GoogleCloudPlatform/magic-modules
+#
+# ----------------------------------------------------------------------------
+# Pre-test setup
+- name: create a instance
+  gcp_sql_instance:
+    name: "{{resource_name}}-1"
+    settings:
+      ip_configuration:
+        authorized_networks:
+        - name: google dns server
+          value: 8.8.8.8/32
+      tier: db-n1-standard-1
+    region: us-central1
+    project: "{{ gcp_project }}"
+    auth_kind: "{{ gcp_cred_kind }}"
+    service_account_file: "{{ gcp_cred_file }}"
+    state: present
+  register: instance
+- name: delete a user
+  gcp_sql_user:
+    name: test-user
+    host: 10.1.2.3
+    password: secret-password
+    instance: "{{ instance }}"
+    project: "{{ gcp_project }}"
+    auth_kind: "{{ gcp_cred_kind }}"
+    service_account_file: "{{ gcp_cred_file }}"
+    state: absent
+#----------------------------------------------------------
+- name: create a user
+  gcp_sql_user:
+    name: test-user
+    host: 10.1.2.3
+    password: secret-password
+    instance: "{{ instance }}"
+    project: "{{ gcp_project }}"
+    auth_kind: "{{ gcp_cred_kind }}"
+    service_account_file: "{{ gcp_cred_file }}"
+    state: present
+  register: result
+- name: assert changed is true
+  assert:
+    that:
+      - result.changed == true
+- name: verify that user was created
+  gcp_sql_user_info:
+      instance: "{{ instance }}"
+      project: "{{ gcp_project }}"
+      auth_kind: "{{ gcp_cred_kind }}"
+      service_account_file: "{{ gcp_cred_file }}"
+      scopes:
+        - https://www.googleapis.com/auth/sqlservice.admin
+  register: results
+- name: verify that command succeeded
+  assert:
+    that:
+      - "'test-user' in \"{{ results['resources'] | map(attribute='name') | list }}\""
+# ----------------------------------------------------------------------------
+- name: create a user that already exists
+  gcp_sql_user:
+    name: test-user
+    host: 10.1.2.3
+    password: secret-password
+    instance: "{{ instance }}"
+    project: "{{ gcp_project }}"
+    auth_kind: "{{ gcp_cred_kind }}"
+    service_account_file: "{{ gcp_cred_file }}"
+    state: present
+  register: result
+- name: assert changed is false
+  assert:
+    that:
+      - result.changed == false
+#----------------------------------------------------------
+- name: delete a user
+  gcp_sql_user:
+    name: test-user
+    host: 10.1.2.3
+    password: secret-password
+    instance: "{{ instance }}"
+    project: "{{ gcp_project }}"
+    auth_kind: "{{ gcp_cred_kind }}"
+    service_account_file: "{{ gcp_cred_file }}"
+    state: absent
+  register: result
+- name: assert changed is true
+  assert:
+    that:
+      - result.changed == true
+- name: verify that user was deleted
+  gcp_sql_user_info:
+      instance: "{{ instance }}"
+      project: "{{ gcp_project }}"
+      auth_kind: "{{ gcp_cred_kind }}"
+      service_account_file: "{{ gcp_cred_file }}"
+      scopes:
+        - https://www.googleapis.com/auth/sqlservice.admin
+  register: results
+- name: verify that command succeeded
+  assert:
+    that:
+      - "'test-user' not in \"{{ results['resources'] | map(attribute='name') | list }}\""
+# ----------------------------------------------------------------------------
+- name: delete a user that does not exist
+  gcp_sql_user:
+    name: test-user
+    host: 10.1.2.3
+    password: secret-password
+    instance: "{{ instance }}"
+    project: "{{ gcp_project }}"
+    auth_kind: "{{ gcp_cred_kind }}"
+    service_account_file: "{{ gcp_cred_file }}"
+    state: absent
+  register: result
+- name: assert changed is false
+  assert:
+    that:
+      - result.changed == false
+#---------------------------------------------------------
+# Post-test teardown
+# If errors happen, don't crash the playbook!
+- name: delete a instance
+  gcp_sql_instance:
+    name: "{{resource_name}}-1"
+    settings:
+      ip_configuration:
+        authorized_networks:
+        - name: google dns server
+          value: 8.8.8.8/32
+      tier: db-n1-standard-1
+    region: us-central1
+    project: "{{ gcp_project }}"
+    auth_kind: "{{ gcp_cred_kind }}"
+    service_account_file: "{{ gcp_cred_file }}"
+    state: absent
+  register: instance
+  ignore_errors: true
diff --git a/test/integration/targets/gcp_sql_user/tasks/main.yml b/test/integration/targets/gcp_sql_user/tasks/main.yml
index d7f6d09daf..45d6e49178 100644
--- a/test/integration/targets/gcp_sql_user/tasks/main.yml
+++ b/test/integration/targets/gcp_sql_user/tasks/main.yml
@@ -1,149 +1,2 @@
 ---
-# ----------------------------------------------------------------------------
-#
-#     ***     AUTO GENERATED CODE    ***    AUTO GENERATED CODE     ***
-#
-# ----------------------------------------------------------------------------
-#
-#     This file is automatically generated by Magic Modules and manual
-#     changes will be clobbered when the file is regenerated.
-#
-#     Please read more about how to change this file at
-#     https://www.github.com/GoogleCloudPlatform/magic-modules
-#
-# ----------------------------------------------------------------------------
-# Pre-test setup
-- name: create a instance
-  gcp_sql_instance:
-    name: "{{resource_name}}-1"
-    settings:
-      ip_configuration:
-        authorized_networks:
-        - name: google dns server
-          value: 8.8.8.8/32
-      tier: db-n1-standard-1
-    region: us-central1
-    project: "{{ gcp_project }}"
-    auth_kind: "{{ gcp_cred_kind }}"
-    service_account_file: "{{ gcp_cred_file }}"
-    state: present
-  register: instance
-- name: delete a user
-  gcp_sql_user:
-    name: test-user
-    host: 10.1.2.3
-    password: secret-password
-    instance: "{{ instance }}"
-    project: "{{ gcp_project }}"
-    auth_kind: "{{ gcp_cred_kind }}"
-    service_account_file: "{{ gcp_cred_file }}"
-    state: absent
-#----------------------------------------------------------
-- name: create a user
-  gcp_sql_user:
-    name: test-user
-    host: 10.1.2.3
-    password: secret-password
-    instance: "{{ instance }}"
-    project: "{{ gcp_project }}"
-    auth_kind: "{{ gcp_cred_kind }}"
-    service_account_file: "{{ gcp_cred_file }}"
-    state: present
-  register: result
-- name: assert changed is true
-  assert:
-    that:
-      - result.changed == true
-- name: verify that user was created
-  gcp_sql_user_info:
-      instance: "{{ instance }}"
-      project: "{{ gcp_project }}"
-      auth_kind: "{{ gcp_cred_kind }}"
-      service_account_file: "{{ gcp_cred_file }}"
-      scopes:
-        - https://www.googleapis.com/auth/sqlservice.admin
-  register: results
-- name: verify that command succeeded
-  assert:
-    that:
-      - "'test-user' in \"{{ results['resources'] | map(attribute='name') | list }}\""
-# ----------------------------------------------------------------------------
-- name: create a user that already exists
-  gcp_sql_user:
-    name: test-user
-    host: 10.1.2.3
-    password: secret-password
-    instance: "{{ instance }}"
-    project: "{{ gcp_project }}"
-    auth_kind: "{{ gcp_cred_kind }}"
-    service_account_file: "{{ gcp_cred_file }}"
-    state: present
-  register: result
-- name: assert changed is false
-  assert:
-    that:
-      - result.changed == false
-#----------------------------------------------------------
-- name: delete a user
-  gcp_sql_user:
-    name: test-user
-    host: 10.1.2.3
-    password: secret-password
-    instance: "{{ instance }}"
-    project: "{{ gcp_project }}"
-    auth_kind: "{{ gcp_cred_kind }}"
-    service_account_file: "{{ gcp_cred_file }}"
-    state: absent
-  register: result
-- name: assert changed is true
-  assert:
-    that:
-      - result.changed == true
-- name: verify that user was deleted
-  gcp_sql_user_info:
-      instance: "{{ instance }}"
-      project: "{{ gcp_project }}"
-      auth_kind: "{{ gcp_cred_kind }}"
-      service_account_file: "{{ gcp_cred_file }}"
-      scopes:
-        - https://www.googleapis.com/auth/sqlservice.admin
-  register: results
-- name: verify that command succeeded
-  assert:
-    that:
-      - "'test-user' not in \"{{ results['resources'] | map(attribute='name') | list }}\""
-# ----------------------------------------------------------------------------
-- name: delete a user that does not exist
-  gcp_sql_user:
-    name: test-user
-    host: 10.1.2.3
-    password: secret-password
-    instance: "{{ instance }}"
-    project: "{{ gcp_project }}"
-    auth_kind: "{{ gcp_cred_kind }}"
-    service_account_file: "{{ gcp_cred_file }}"
-    state: absent
-  register: result
-- name: assert changed is false
-  assert:
-    that:
-      - result.changed == false
-#---------------------------------------------------------
-# Post-test teardown
-# If errors happen, don't crash the playbook!
-- name: delete a instance
-  gcp_sql_instance:
-    name: "{{resource_name}}-1"
-    settings:
-      ip_configuration:
-        authorized_networks:
-        - name: google dns server
-          value: 8.8.8.8/32
-      tier: db-n1-standard-1
-    region: us-central1
-    project: "{{ gcp_project }}"
-    auth_kind: "{{ gcp_cred_kind }}"
-    service_account_file: "{{ gcp_cred_file }}"
-    state: absent
-  register: instance
-  ignore_errors: true
+- include_tasks: autogen.yml
diff --git a/test/integration/targets/gcp_storage_bucket/tasks/autogen.yml b/test/integration/targets/gcp_storage_bucket/tasks/autogen.yml
new file mode 100644
index 0000000000..d49ec899c1
--- /dev/null
+++ b/test/integration/targets/gcp_storage_bucket/tasks/autogen.yml
@@ -0,0 +1,74 @@
+---
+# ----------------------------------------------------------------------------
+#
+#     ***     AUTO GENERATED CODE    ***    AUTO GENERATED CODE     ***
+#
+# ----------------------------------------------------------------------------
+#
+#     This file is automatically generated by Magic Modules and manual
+#     changes will be clobbered when the file is regenerated.
+#
+#     Please read more about how to change this file at
+#     https://www.github.com/GoogleCloudPlatform/magic-modules
+#
+# ----------------------------------------------------------------------------
+# Pre-test setup
+- name: delete a bucket
+  gcp_storage_bucket:
+    name: ansible-storage-module
+    project: "{{ gcp_project }}"
+    auth_kind: "{{ gcp_cred_kind }}"
+    service_account_file: "{{ gcp_cred_file }}"
+    state: absent
+#----------------------------------------------------------
+- name: create a bucket
+  gcp_storage_bucket:
+    name: ansible-storage-module
+    project: "{{ gcp_project }}"
+    auth_kind: "{{ gcp_cred_kind }}"
+    service_account_file: "{{ gcp_cred_file }}"
+    state: present
+  register: result
+- name: assert changed is true
+  assert:
+    that:
+      - result.changed == true
+# ----------------------------------------------------------------------------
+- name: create a bucket that already exists
+  gcp_storage_bucket:
+    name: ansible-storage-module
+    project: "{{ gcp_project }}"
+    auth_kind: "{{ gcp_cred_kind }}"
+    service_account_file: "{{ gcp_cred_file }}"
+    state: present
+  register: result
+- name: assert changed is false
+  assert:
+    that:
+      - result.changed == false
+#----------------------------------------------------------
+- name: delete a bucket
+  gcp_storage_bucket:
+    name: ansible-storage-module
+    project: "{{ gcp_project }}"
+    auth_kind: "{{ gcp_cred_kind }}"
+    service_account_file: "{{ gcp_cred_file }}"
+    state: absent
+  register: result
+- name: assert changed is true
+  assert:
+    that:
+      - result.changed == true
+# ----------------------------------------------------------------------------
+- name: delete a bucket that does not exist
+  gcp_storage_bucket:
+    name: ansible-storage-module
+    project: "{{ gcp_project }}"
+    auth_kind: "{{ gcp_cred_kind }}"
+    service_account_file: "{{ gcp_cred_file }}"
+    state: absent
+  register: result
+- name: assert changed is false
+  assert:
+    that:
+      - result.changed == false
diff --git a/test/integration/targets/gcp_storage_bucket/tasks/main.yml b/test/integration/targets/gcp_storage_bucket/tasks/main.yml
index d49ec899c1..45d6e49178 100644
--- a/test/integration/targets/gcp_storage_bucket/tasks/main.yml
+++ b/test/integration/targets/gcp_storage_bucket/tasks/main.yml
@@ -1,74 +1,2 @@
 ---
-# ----------------------------------------------------------------------------
-#
-#     ***     AUTO GENERATED CODE    ***    AUTO GENERATED CODE     ***
-#
-# ----------------------------------------------------------------------------
-#
-#     This file is automatically generated by Magic Modules and manual
-#     changes will be clobbered when the file is regenerated.
-#
-#     Please read more about how to change this file at
-#     https://www.github.com/GoogleCloudPlatform/magic-modules
-#
-# ----------------------------------------------------------------------------
-# Pre-test setup
-- name: delete a bucket
-  gcp_storage_bucket:
-    name: ansible-storage-module
-    project: "{{ gcp_project }}"
-    auth_kind: "{{ gcp_cred_kind }}"
-    service_account_file: "{{ gcp_cred_file }}"
-    state: absent
-#----------------------------------------------------------
-- name: create a bucket
-  gcp_storage_bucket:
-    name: ansible-storage-module
-    project: "{{ gcp_project }}"
-    auth_kind: "{{ gcp_cred_kind }}"
-    service_account_file: "{{ gcp_cred_file }}"
-    state: present
-  register: result
-- name: assert changed is true
-  assert:
-    that:
-      - result.changed == true
-# ----------------------------------------------------------------------------
-- name: create a bucket that already exists
-  gcp_storage_bucket:
-    name: ansible-storage-module
-    project: "{{ gcp_project }}"
-    auth_kind: "{{ gcp_cred_kind }}"
-    service_account_file: "{{ gcp_cred_file }}"
-    state: present
-  register: result
-- name: assert changed is false
-  assert:
-    that:
-      - result.changed == false
-#----------------------------------------------------------
-- name: delete a bucket
-  gcp_storage_bucket:
-    name: ansible-storage-module
-    project: "{{ gcp_project }}"
-    auth_kind: "{{ gcp_cred_kind }}"
-    service_account_file: "{{ gcp_cred_file }}"
-    state: absent
-  register: result
-- name: assert changed is true
-  assert:
-    that:
-      - result.changed == true
-# ----------------------------------------------------------------------------
-- name: delete a bucket that does not exist
-  gcp_storage_bucket:
-    name: ansible-storage-module
-    project: "{{ gcp_project }}"
-    auth_kind: "{{ gcp_cred_kind }}"
-    service_account_file: "{{ gcp_cred_file }}"
-    state: absent
-  register: result
-- name: assert changed is false
-  assert:
-    that:
-      - result.changed == false
+- include_tasks: autogen.yml
diff --git a/test/integration/targets/gcp_storage_bucket_access_control/tasks/autogen.yml b/test/integration/targets/gcp_storage_bucket_access_control/tasks/autogen.yml
new file mode 100644
index 0000000000..5a78a87e7a
--- /dev/null
+++ b/test/integration/targets/gcp_storage_bucket_access_control/tasks/autogen.yml
@@ -0,0 +1,104 @@
+---
+# ----------------------------------------------------------------------------
+#
+#     ***     AUTO GENERATED CODE    ***    AUTO GENERATED CODE     ***
+#
+# ----------------------------------------------------------------------------
+#
+#     This file is automatically generated by Magic Modules and manual
+#     changes will be clobbered when the file is regenerated.
+#
+#     Please read more about how to change this file at
+#     https://www.github.com/GoogleCloudPlatform/magic-modules
+#
+# ----------------------------------------------------------------------------
+# Pre-test setup
+- name: create a bucket
+  gcp_storage_bucket:
+    name: "{{ resource_name }}"
+    project: "{{ gcp_project }}"
+    auth_kind: "{{ gcp_cred_kind }}"
+    service_account_file: "{{ gcp_cred_file }}"
+    state: present
+  register: bucket
+- name: delete a bucket access control
+  gcp_storage_bucket_access_control:
+    bucket: "{{ bucket }}"
+    entity: user-alexstephen@google.com
+    role: WRITER
+    project: "{{ gcp_project }}"
+    auth_kind: "{{ gcp_cred_kind }}"
+    service_account_file: "{{ gcp_cred_file }}"
+    state: absent
+#----------------------------------------------------------
+- name: create a bucket access control
+  gcp_storage_bucket_access_control:
+    bucket: "{{ bucket }}"
+    entity: user-alexstephen@google.com
+    role: WRITER
+    project: "{{ gcp_project }}"
+    auth_kind: "{{ gcp_cred_kind }}"
+    service_account_file: "{{ gcp_cred_file }}"
+    state: present
+  register: result
+- name: assert changed is true
+  assert:
+    that:
+      - result.changed == true
+# ----------------------------------------------------------------------------
+- name: create a bucket access control that already exists
+  gcp_storage_bucket_access_control:
+    bucket: "{{ bucket }}"
+    entity: user-alexstephen@google.com
+    role: WRITER
+    project: "{{ gcp_project }}"
+    auth_kind: "{{ gcp_cred_kind }}"
+    service_account_file: "{{ gcp_cred_file }}"
+    state: present
+  register: result
+- name: assert changed is false
+  assert:
+    that:
+      - result.changed == false
+#----------------------------------------------------------
+- name: delete a bucket access control
+  gcp_storage_bucket_access_control:
+    bucket: "{{ bucket }}"
+    entity: user-alexstephen@google.com
+    role: WRITER
+    project: "{{ gcp_project }}"
+    auth_kind: "{{ gcp_cred_kind }}"
+    service_account_file: "{{ gcp_cred_file }}"
+    state: absent
+  register: result
+- name: assert changed is true
+  assert:
+    that:
+      - result.changed == true
+# ----------------------------------------------------------------------------
+- name: delete a bucket access control that does not exist
+  gcp_storage_bucket_access_control:
+    bucket: "{{ bucket }}"
+    entity: user-alexstephen@google.com
+    role: WRITER
+    project: "{{ gcp_project }}"
+    auth_kind: "{{ gcp_cred_kind }}"
+    service_account_file: "{{ gcp_cred_file }}"
+    state: absent
+  register: result
+- name: assert changed is false
+  assert:
+    that:
+      - result.changed == false
+#---------------------------------------------------------
+# Post-test teardown
+# If errors happen, don't crash the playbook!
+- name: delete a bucket
+  gcp_storage_bucket:
+    name: "{{ resource_name }}"
+    project: "{{ gcp_project }}"
+    auth_kind: "{{ gcp_cred_kind }}"
+    service_account_file: "{{ gcp_cred_file }}"
+    state: absent
+  register: bucket
+  ignore_errors: true
diff --git a/test/integration/targets/gcp_storage_bucket_access_control/tasks/main.yml b/test/integration/targets/gcp_storage_bucket_access_control/tasks/main.yml
index 5a78a87e7a..45d6e49178 100644
--- a/test/integration/targets/gcp_storage_bucket_access_control/tasks/main.yml
+++ b/test/integration/targets/gcp_storage_bucket_access_control/tasks/main.yml
@@ -1,104 +1,2 @@
 ---
-# ----------------------------------------------------------------------------
-#
-#     ***     AUTO GENERATED CODE    ***    AUTO GENERATED CODE     ***
-#
-# ----------------------------------------------------------------------------
-#
-#     This file is automatically generated by Magic Modules and manual
-#     changes will be clobbered when the file is regenerated.
-#
-#     Please read more about how to change this file at
-#     https://www.github.com/GoogleCloudPlatform/magic-modules
-#
-# ----------------------------------------------------------------------------
-# Pre-test setup
-- name: create a bucket
-  gcp_storage_bucket:
-    name: "{{ resource_name }}"
-    project: "{{ gcp_project }}"
-    auth_kind: "{{ gcp_cred_kind }}"
-    service_account_file: "{{ gcp_cred_file }}"
-    state: present
-  register: bucket
-- name: delete a bucket access control
-  gcp_storage_bucket_access_control:
-    bucket: "{{ bucket }}"
-    entity: user-alexstephen@google.com
-    role: WRITER
-    project: "{{ gcp_project }}"
-    auth_kind: "{{ gcp_cred_kind }}"
-    service_account_file: "{{ gcp_cred_file }}"
-    state: absent
-#----------------------------------------------------------
-- name: create a bucket access control
-  gcp_storage_bucket_access_control:
-    bucket: "{{ bucket }}"
-    entity: user-alexstephen@google.com
-    role: WRITER
-    project: "{{ gcp_project }}"
-    auth_kind: "{{ gcp_cred_kind }}"
-    service_account_file: "{{ gcp_cred_file }}"
-    state: present
-  register: result
-- name: assert changed is true
-  assert:
-    that:
-      - result.changed == true
-# ----------------------------------------------------------------------------
-- name: create a bucket access control that already exists
-  gcp_storage_bucket_access_control:
-    bucket: "{{ bucket }}"
-    entity: user-alexstephen@google.com
-    role: WRITER
-    project: "{{ gcp_project }}"
-    auth_kind: "{{ gcp_cred_kind }}"
-    service_account_file: "{{ gcp_cred_file }}"
-    state: present
-  register: result
-- name: assert changed is false
-  assert:
-    that:
-      - result.changed == false
-#----------------------------------------------------------
-- name: delete a bucket access control
-  gcp_storage_bucket_access_control:
-    bucket: "{{ bucket }}"
-    entity: user-alexstephen@google.com
-    role: WRITER
-    project: "{{ gcp_project }}"
-    auth_kind: "{{ gcp_cred_kind }}"
-    service_account_file: "{{ gcp_cred_file }}"
-    state: absent
-  register: result
-- name: assert changed is true
-  assert:
-    that:
-      - result.changed == true
-# ----------------------------------------------------------------------------
-- name: delete a bucket access control that does not exist
-  gcp_storage_bucket_access_control:
-    bucket: "{{ bucket }}"
-    entity: user-alexstephen@google.com
-    role: WRITER
-    project: "{{ gcp_project }}"
-    auth_kind: "{{ gcp_cred_kind }}"
-    service_account_file: "{{ gcp_cred_file }}"
-    state: absent
-  register: result
-- name: assert changed is false
-  assert:
-    that:
-      - result.changed == false
-#---------------------------------------------------------
-# Post-test teardown
-# If errors happen, don't crash the playbook!
-- name: delete a bucket
-  gcp_storage_bucket:
-    name: "{{ resource_name }}"
-    project: "{{ gcp_project }}"
-    auth_kind: "{{ gcp_cred_kind }}"
-    service_account_file: "{{ gcp_cred_file }}"
-    state: absent
-  register: bucket
-  ignore_errors: true
+- include_tasks: autogen.yml
diff --git a/test/integration/targets/gcp_tpu_node/tasks/autogen.yml b/test/integration/targets/gcp_tpu_node/tasks/autogen.yml
new file mode 100644
index 0000000000..ed4803d422
--- /dev/null
+++ b/test/integration/targets/gcp_tpu_node/tasks/autogen.yml
@@ -0,0 +1,120 @@
+---
+# ----------------------------------------------------------------------------
+#
+#     ***     AUTO GENERATED CODE    ***    AUTO GENERATED CODE     ***
+#
+# ----------------------------------------------------------------------------
+#
+#     This file is automatically generated by Magic Modules and manual
+#     changes will be clobbered when the file is regenerated.
+#
+#     Please read more about how to change this file at
+#     https://www.github.com/GoogleCloudPlatform/magic-modules
+#
+# ----------------------------------------------------------------------------
+# Pre-test setup
+- name: delete a node
+  gcp_tpu_node:
+    name: "{{ resource_name }}"
+    zone: us-central1-b
+    accelerator_type: v3-8
+    tensorflow_version: '1.11'
+    cidr_block: 10.2.0.0/29
+    project: "{{ gcp_project }}"
+    auth_kind: "{{ gcp_cred_kind }}"
+    service_account_file: "{{ gcp_cred_file }}"
+    state: absent
+#----------------------------------------------------------
+- name: create a node
+  gcp_tpu_node:
+    name: "{{ resource_name }}"
+    zone: us-central1-b
+    accelerator_type: v3-8
+    tensorflow_version: '1.11'
+    cidr_block: 10.2.0.0/29
+    project: "{{ gcp_project }}"
+    auth_kind: "{{ gcp_cred_kind }}"
+    service_account_file: "{{ gcp_cred_file }}"
+    state: present
+  register: result
+- name: assert changed is true
+  assert:
+    that:
+      - result.changed == true
+- name: verify that node was created
+  gcp_tpu_node_info:
+      zone: us-central1-b
+      project: "{{ gcp_project }}"
+      auth_kind: "{{ gcp_cred_kind }}"
+      service_account_file: "{{ gcp_cred_file }}"
+      scopes:
+        - https://www.googleapis.com/auth/cloud-platform
+  register: results
+- name: verify that command succeeded
+  assert:
+    that:
+      - results['resources'] | map(attribute='name') | select("match", ".*{{ resource_name }}.*") | list | length == 1
+# ----------------------------------------------------------------------------
+- name: create a node that already exists
+  gcp_tpu_node:
+    name: "{{ resource_name }}"
+    zone: us-central1-b
+    accelerator_type: v3-8
+    tensorflow_version: '1.11'
+    cidr_block: 10.2.0.0/29
+    project: "{{ gcp_project }}"
+    auth_kind: "{{ gcp_cred_kind }}"
+    service_account_file: "{{ gcp_cred_file }}"
+    state: present
+  register: result
+- name: assert changed is false
+  assert:
+    that:
+      - result.changed == false
+#----------------------------------------------------------
+- name: delete a node
+  gcp_tpu_node:
+    name: "{{ resource_name }}"
+    zone: us-central1-b
+    accelerator_type: v3-8
+    tensorflow_version: '1.11'
+    cidr_block: 10.2.0.0/29
+    project: "{{ gcp_project }}"
+    auth_kind: "{{ gcp_cred_kind }}"
+    service_account_file: "{{ gcp_cred_file }}"
+    state: absent
+  register: result
+- name: assert changed is true
+  assert:
+    that:
+      - result.changed == true
+- name: verify that node was deleted
+  gcp_tpu_node_info:
+      zone: us-central1-b
+      project: "{{ gcp_project }}"
+      auth_kind: "{{ gcp_cred_kind }}"
+      service_account_file: "{{ gcp_cred_file }}"
+      scopes:
+        - https://www.googleapis.com/auth/cloud-platform
+  register: results
+- name: verify that command succeeded
+  assert:
+    that:
+      - results['resources'] | map(attribute='name') | select("match", ".*{{ resource_name }}.*") | list | length == 0
+# ----------------------------------------------------------------------------
+- name: delete a node that does not exist
+  gcp_tpu_node:
+    name: "{{ resource_name }}"
+    zone: us-central1-b
+    accelerator_type: v3-8
+    tensorflow_version: '1.11'
+    cidr_block: 10.2.0.0/29
+    project: "{{ gcp_project }}"
+    auth_kind: "{{ gcp_cred_kind }}"
+    service_account_file: "{{ gcp_cred_file }}"
+    state: absent
+  register: result
+- name: assert changed is false
+  assert:
+    that:
+      - result.changed == false
diff --git a/test/integration/targets/gcp_tpu_node/tasks/main.yml b/test/integration/targets/gcp_tpu_node/tasks/main.yml
index ed4803d422..45d6e49178 100644
--- a/test/integration/targets/gcp_tpu_node/tasks/main.yml
+++ b/test/integration/targets/gcp_tpu_node/tasks/main.yml
@@ -1,120 +1,2 @@
 ---
-# ----------------------------------------------------------------------------
-#
-#     ***     AUTO GENERATED CODE    ***    AUTO GENERATED CODE     ***
-#
-# ----------------------------------------------------------------------------
-#
-#     This file is automatically generated by Magic Modules and manual
-#     changes will be clobbered when the file is regenerated.
-#
-#     Please read more about how to change this file at
-#     https://www.github.com/GoogleCloudPlatform/magic-modules
-#
-# ----------------------------------------------------------------------------
-# Pre-test setup
-- name: delete a node
-  gcp_tpu_node:
-    name: "{{ resource_name }}"
-    zone: us-central1-b
-    accelerator_type: v3-8
-    tensorflow_version: '1.11'
-    cidr_block: 10.2.0.0/29
-    project: "{{ gcp_project }}"
-    auth_kind: "{{ gcp_cred_kind }}"
-    service_account_file: "{{ gcp_cred_file }}"
-    state: absent
-#----------------------------------------------------------
-- name: create a node
-  gcp_tpu_node:
-    name: "{{ resource_name }}"
-    zone: us-central1-b
-    accelerator_type: v3-8
-    tensorflow_version: '1.11'
-    cidr_block: 10.2.0.0/29
-    project: "{{ gcp_project }}"
-    auth_kind: "{{ gcp_cred_kind }}"
-    service_account_file: "{{ gcp_cred_file }}"
-    state: present
-  register: result
-- name: assert changed is true
-  assert:
-    that:
-      - result.changed == true
-- name: verify that node was created
-  gcp_tpu_node_info:
-      zone: us-central1-b
-      project: "{{ gcp_project }}"
-      auth_kind: "{{ gcp_cred_kind }}"
-      service_account_file: "{{ gcp_cred_file }}"
-      scopes:
-        - https://www.googleapis.com/auth/cloud-platform
-  register: results
-- name: verify that command succeeded
-  assert:
-    that:
-      - results['resources'] | map(attribute='name') | select("match", ".*{{ resource_name }}.*") | list | length == 1
-# ----------------------------------------------------------------------------
-- name: create a node that already exists
-  gcp_tpu_node:
-    name: "{{ resource_name }}"
-    zone: us-central1-b
-    accelerator_type: v3-8
-    tensorflow_version: '1.11'
-    cidr_block: 10.2.0.0/29
-    project: "{{ gcp_project }}"
-    auth_kind: "{{ gcp_cred_kind }}"
-    service_account_file: "{{ gcp_cred_file }}"
-    state: present
-  register: result
-- name: assert changed is false
-  assert:
-    that:
-      - result.changed == false
-#----------------------------------------------------------
-- name: delete a node
-  gcp_tpu_node:
-    name: "{{ resource_name }}"
-    zone: us-central1-b
-    accelerator_type: v3-8
-    tensorflow_version: '1.11'
-    cidr_block: 10.2.0.0/29
-    project: "{{ gcp_project }}"
-    auth_kind: "{{ gcp_cred_kind }}"
-    service_account_file: "{{ gcp_cred_file }}"
-    state: absent
-  register: result
-- name: assert changed is true
-  assert:
-    that:
-      - result.changed == true
-- name: verify that node was deleted
-  gcp_tpu_node_info:
-      zone: us-central1-b
-      project: "{{ gcp_project }}"
-      auth_kind: "{{ gcp_cred_kind }}"
-      service_account_file: "{{ gcp_cred_file }}"
-      scopes:
-        - https://www.googleapis.com/auth/cloud-platform
-  register: results
-- name: verify that command succeeded
-  assert:
-    that:
-      - results['resources'] | map(attribute='name') | select("match", ".*{{ resource_name }}.*") | list | length == 0
-# ----------------------------------------------------------------------------
-- name: delete a node that does not exist
-  gcp_tpu_node:
-    name: "{{ resource_name }}"
-    zone: us-central1-b
-    accelerator_type: v3-8
-    tensorflow_version: '1.11'
-    cidr_block: 10.2.0.0/29
-    project: "{{ gcp_project }}"
-    auth_kind: "{{ gcp_cred_kind }}"
-    service_account_file: "{{ gcp_cred_file }}"
-    state: absent
-  register: result
-- name: assert changed is false
-  assert:
-    that:
-      - result.changed == false
+- include_tasks: autogen.yml
