commit 9de76693b7229c6e2c3c20de155df64100978338
Author: Nijin Ashok <nashok@redhat.com>
Date:   Thu Nov 23 00:21:20 2017 +0530

    ovirt_vms: Fix issue in stopping stateless VMs (#32955)
    
    Because of wrong condition defined, the module will wait indefinitely for
    snapshots to be removed and will finally timeout after the timeout interval.

diff --git a/lib/ansible/modules/cloud/ovirt/ovirt_vms.py b/lib/ansible/modules/cloud/ovirt/ovirt_vms.py
index ad1d2a2fd9..9550601866 100644
--- a/lib/ansible/modules/cloud/ovirt/ovirt_vms.py
+++ b/lib/ansible/modules/cloud/ovirt/ovirt_vms.py
@@ -909,18 +909,23 @@ class VmsModule(BaseModule):
             ]
             # Stateless snapshot may be already removed:
             if snap_stateless:
+                """
+                We need to wait for Active snapshot ID, to be removed as it's current
+                stateless snapshot. Then we need to wait for staless snapshot ID to
+                be read, for use, because it will become active snapshot.
+                """
                 wait(
-                    service=snapshots_service.snapshot_service(snap_stateless[0].id),
+                    service=snapshots_service.snapshot_service(snap_active.id),
                     condition=lambda snap: snap is None,
                     wait=self.param('wait'),
                     timeout=self.param('timeout'),
                 )
-            wait(
-                service=snapshots_service.snapshot_service(snap_active.id),
-                condition=lambda snap: snap.snapshot_status == otypes.SnapshotStatus.OK,
-                wait=self.param('wait'),
-                timeout=self.param('timeout'),
-            )
+                wait(
+                    service=snapshots_service.snapshot_service(snap_stateless[0].id),
+                    condition=lambda snap: snap.snapshot_status == otypes.SnapshotStatus.OK,
+                    wait=self.param('wait'),
+                    timeout=self.param('timeout'),
+                )
         return True
 
     def __attach_disks(self, entity):
