commit c846bab69b06134cc42862557aef59367296d47e
Author: Marius Gedminas <marius@gedmin.as>
Date:   Thu Aug 27 22:09:42 2015 +0300

    Fix assert statement syntax
    
    `assert (condition, message)` gets parsed by Python as `assert
    a_two_tuple`, and a 2-element tuple is never False.
    
    Discovered by compileall on Python 3.4, which emits a SyntaxWarning for
    this common mistake.

diff --git a/test/integration/cleanup_rax.py b/test/integration/cleanup_rax.py
old mode 100644
new mode 100755
index f872e9458d..5c757f53c5
--- a/test/integration/cleanup_rax.py
+++ b/test/integration/cleanup_rax.py
@@ -54,8 +54,8 @@ def authenticate():
 def prompt_and_delete(item, prompt, assumeyes):
     if not assumeyes:
         assumeyes = raw_input(prompt).lower() == 'y'
-    assert (hasattr(item, 'delete') or hasattr(item, 'terminate'),
-            "Class <%s> has no delete or terminate attribute" % item.__class__)
+    assert hasattr(item, 'delete') or hasattr(item, 'terminate'), \
+            "Class <%s> has no delete or terminate attribute" % item.__class__
     if assumeyes:
         if hasattr(item, 'delete'):
             item.delete()
