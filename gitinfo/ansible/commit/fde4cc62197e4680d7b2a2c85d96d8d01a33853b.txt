commit fde4cc62197e4680d7b2a2c85d96d8d01a33853b
Author: Dag Wieers <dag@wieers.com>
Date:   Sat Feb 24 01:47:44 2018 +0100

    guide_aci: Fix a few references (#36666)

diff --git a/docs/docsite/rst/scenario_guides/guide_aci.rst b/docs/docsite/rst/scenario_guides/guide_aci.rst
index 7cc4e518f6..58c471895a 100644
--- a/docs/docsite/rst/scenario_guides/guide_aci.rst
+++ b/docs/docsite/rst/scenario_guides/guide_aci.rst
@@ -3,6 +3,7 @@
 Cisco ACI Guide
 ===============
 
+
 .. _aci_guide_intro:
 
 What is Cisco ACI ?
@@ -12,6 +13,7 @@ Application Centric Infrastructure (ACI)
 ........................................
 The Cisco Application Centric Infrastructure (ACI) allows application requirements to define the network. This architecture simplifies, optimizes, and accelerates the entire application deployment life cycle.
 
+
 Application Policy Infrastructure Controller (APIC)
 ...................................................
 The Cisco Application Policy Infrastructure Controller (APIC) API enables applications to directly connect with a secure, shared, high-performance resource pool that includes network, compute, and storage capabilities.
@@ -20,6 +22,7 @@ The APIC manages the scalable ACI multi-tenant fabric. The APIC provides a unifi
 
 The APIC enables network administrators to easily define the optimal network for applications. Data center operators can clearly see how applications consume network resources, easily isolate and troubleshoot application and infrastructure problems, and monitor and profile resource usage patterns.
 
+
 ACI Fabric
 ..........
 The Cisco Application Centric Infrastructure (ACI) Fabric includes Cisco Nexus 9000 Series switches with the APIC to run in the leaf/spine ACI fabric mode. These switches form a "fat-tree" network by connecting each leaf node to each spine node; all other devices connect to the leaf nodes. The APIC manages the ACI fabric.
@@ -32,6 +35,7 @@ All the switch nodes contain a complete copy of the concrete model. When an admi
 
 The APIC is responsible for fabric activation, switch firmware management, network policy configuration, and instantiation. While the APIC acts as the centralized policy and network management engine for the fabric, it is completely removed from the data path, including the forwarding topology. Therefore, the fabric can still forward traffic even when communication with the APIC is lost.
 
+
 More information
 ................
 Various resources exist to start learning ACI, here is a list of interesting articles from the community.
@@ -63,6 +67,7 @@ For instance ensuring that a specific tenant exists, is done using the following
 
 A complete list of existing ACI modules is available for `the latest stable release <http://docs.ansible.com/ansible/latest/modules/list_of_network_modules.html#aci>`_ as well as `the current development version <http://docs.ansible.com/ansible/devel/modules/list_of_network_modules.html#aci>`_.
 
+
 Common parameters
 .................
 Every Ansible ACI module accepts the following parameters that influence the module's communication with the APIC REST API:
@@ -100,6 +105,7 @@ Every Ansible ACI module accepts the following parameters that influence the mod
     output_level
         Influence the level of detail ACI modules return to the user. (One of ``normal``, ``info`` or ``debug``) *New in version 2.5*
 
+
 Proxy support
 .............
 By default, if an environment variable ``<protocol>_proxy`` is set on the target host, requests will be sent through that proxy. This behaviour can be overridden by setting a variable for this task (see :ref:`playbooks_environment`), or by using the ``use_proxy`` module parameter.
@@ -110,6 +116,7 @@ If you don't need proxy support, but the system may have it configured neverthel
 
 .. hint:: Selective proxy support using the ``no_proxy`` environment variable is also supported.
 
+
 Return values
 .............
 
@@ -150,6 +157,7 @@ The following values are returned when ``output_level: debug`` or ``ANSIBLE_DEBU
 
 .. note:: The module return values are documented in detail as part of each module's documentation.
 
+
 More information
 ................
 Various resources exist to start learn more about ACI programmability, we recommend the following links:
@@ -251,11 +259,12 @@ Using ACI REST with Ansible
 ---------------------------
 While already a lot of ACI modules exists in the Ansible distribution, and the most common actions can be performed with these existing modules, there's always something that may not be possible with off-the-shelf modules.
 
-:ref:`The aci_rest module <aci_rest>` provides you with direct access to the APIC REST API and enables you to perform any task not already covered by the existing modules. This may seem like a complex undertaking, but you can generate the needed REST payload for any action performed in the ACI web interface effortlessly.
+The :ref:`aci_rest <aci_rest>` module provides you with direct access to the APIC REST API and enables you to perform any task not already covered by the existing modules. This may seem like a complex undertaking, but you can generate the needed REST payload for any action performed in the ACI web interface effortlessly.
+
 
 Using the aci-rest module
 .........................
-:ref:`The aci_rest module <aci_rest>` accepts the native XML and JSON payloads, but additionally accepts inline YAML payload (structured like JSON). The XML payload requires you to use a path ending with ``.xml`` whereas JSON or YAML require path to end with ``.json``.
+The :ref:`aci_rest <aci_rest>` module accepts the native XML and JSON payloads, but additionally accepts inline YAML payload (structured like JSON). The XML payload requires you to use a path ending with ``.xml`` whereas JSON or YAML require path to end with ``.json``.
 
 When you're making modifications, you can use the POST or DELETE methods, whereas doing just queries require the GET method.
 
@@ -322,13 +331,14 @@ For instance, if you would like to ensure a specific tenant exists on ACI, these
         description: Customer XYZ
         state: present
 
+
 More information
 ................
 Plenty of resources exist to learn about ACI's APIC REST interface, we recommend the links below:
 
-- :ref:`The apic_rest Ansible module documentation <aci_rest>`
-- `APIC REST API Configuration Guide <https://www.cisco.com/c/en/us/td/docs/switches/datacenter/aci/apic/sw/2-x/rest_cfg/2_1_x/b_Cisco_APIC_REST_API_Configuration_Guide.html>`_-- Detailed guide on how the APIC REST API is designed and used, incl. many examples
-- `APIC Management Information Model reference <https://developer.cisco.com/docs/apic-mim-ref/>`_-- Complete reference of the APIC object model
+- :ref:`The aci_rest module documentation <aci_rest>`
+- `APIC REST API Configuration Guide <https://www.cisco.com/c/en/us/td/docs/switches/datacenter/aci/apic/sw/2-x/rest_cfg/2_1_x/b_Cisco_APIC_REST_API_Configuration_Guide.html>`_ -- Detailed guide on how the APIC REST API is designed and used, incl. many examples
+- `APIC Management Information Model reference <https://developer.cisco.com/docs/apic-mim-ref/>`_ -- Complete reference of the APIC object model
 - `Cisco DevNet Learning Labs about ACI and REST <https://learninglabs.cisco.com/labs/tags/ACI,REST>`_
 
 
@@ -339,6 +349,7 @@ Operational examples
 Here is a small overview of useful operational tasks to reuse in your playbooks.
 Feel free to contribute more snippets that are useful to others.
 
+
 Waiting for all controllers to be ready
 .......................................
 You can use the below task after you started to build your APICs and configured the cluster to wait until all the APICs have come online. It will wait until the number of controllers equals the number listed in the ``apic`` inventory group.
@@ -358,6 +369,7 @@ You can use the below task after you started to build your APICs and configured
       retries: 20
       delay: 30
 
+
 Waiting for cluster to be fully-fit
 ...................................
 The below example waits until the cluster is fully-fit. In this example you know the number of APICs in the cluster and you verify each APIC reports a 'fully-fit' status.
@@ -405,7 +417,7 @@ The following error messages may occur and this section can help you understand
 
 Known issues
 ------------
-:ref:`The aci_rest module <aci_rest>` is a wrapper around the APIC REST API. As a result any issues related to the APIC will be reflected in the use of :ref:`the aci_rest module <aci_rest>`.
+The :ref:`aci_rest <aci_rest>` module is a wrapper around the APIC REST API. As a result any issues related to the APIC will be reflected in the use of :ref:`the aci_rest module <aci_rest>`.
 
 All below issues either have been reported to the vendor, or can simply be avoided.
 
@@ -452,7 +464,7 @@ You will find our roadmap, an overview of open ACI issues and pull-requests and
        The Ansible ACI community wiki page, includes roadmap, ideas and development documentation
    `Network Working Group <https://github.com/ansible/community/tree/master/group-network>`_
        The Ansible Network community page, includes contact information and meeting information
-   `User Mailing List <http://groups.google.com/group/ansible-project>`_
-       Have a question?  Stop by the google group!
    `#ansible-network <https://webchat.freenode.net/?channels=ansible-network>`_
        The #ansible-network IRC chat channel on Freenode.net
+   `User Mailing List <http://groups.google.com/group/ansible-project>`_
+       Have a question?  Stop by the google group!
