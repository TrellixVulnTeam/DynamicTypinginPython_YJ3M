commit 42ccf9ca9827373031258823259ed9f8bbc490f6
Author: nitzmahone <mdavis@ansible.com>
Date:   Wed Mar 1 15:54:27 2017 -0800

    tweak transport_tests to avoid logic duplication (#22158)

diff --git a/lib/ansible/plugins/connection/ssh.py b/lib/ansible/plugins/connection/ssh.py
index 279d77beb0..9b7f0e8d3c 100644
--- a/lib/ansible/plugins/connection/ssh.py
+++ b/lib/ansible/plugins/connection/ssh.py
@@ -62,7 +62,7 @@ class Connection(ConnectionBase):
         super(Connection, self).__init__(*args, **kwargs)
 
         self.host = self._play_context.remote_addr
-        self.port = int(self._play_context.port or 22)
+        self.port = self._play_context.port
         self.user = self._play_context.remote_user
         self.control_path = C.ANSIBLE_SSH_CONTROL_PATH
         self.control_path_dir = C.ANSIBLE_SSH_CONTROL_PATH_DIR
@@ -76,8 +76,9 @@ class Connection(ConnectionBase):
 
     def transport_test(self, connect_timeout):
         ''' Test the transport mechanism, if available '''
-        display.vvv("attempting transport test to %s:%s" % (self.host, self.port))
-        sock = socket.create_connection((self.host, self.port), connect_timeout)
+        port = int(self.port or 22)
+        display.vvv("attempting transport test to %s:%s" % (self.host, port))
+        sock = socket.create_connection((self.host, port), connect_timeout)
         sock.close()
 
     @staticmethod
diff --git a/lib/ansible/plugins/connection/winrm.py b/lib/ansible/plugins/connection/winrm.py
index f69ab1b3b0..973b351a4a 100644
--- a/lib/ansible/plugins/connection/winrm.py
+++ b/lib/ansible/plugins/connection/winrm.py
@@ -92,8 +92,8 @@ class Connection(ConnectionBase):
 
     def transport_test(self, connect_timeout):
         ''' Test the transport mechanism, if available '''
-        host = self._play_context.remote_addr
-        port = int(self._play_context.port or 5986)
+        host = self._winrm_host
+        port = int(self._winrm_port)
         display.vvv("attempting transport test to %s:%s" % (host, port))
         sock = socket.create_connection((host, port), connect_timeout)
         sock.close()
