commit b90f97442d0a2718f3dee2c58accf06f5c313942
Author: Brian Coca <bcoca@ansible.com>
Date:   Tue Mar 31 10:44:34 2015 -0400

    vertica doc fixes

diff --git a/lib/ansible/modules/extras/database/vertica/vertica_configuration.py b/lib/ansible/modules/extras/database/vertica/vertica_configuration.py
index 6ee5ebe5f7..52ef1cdd48 100644
--- a/lib/ansible/modules/extras/database/vertica/vertica_configuration.py
+++ b/lib/ansible/modules/extras/database/vertica/vertica_configuration.py
@@ -22,59 +22,55 @@ module: vertica_configuration
 version_added: '1.0'
 short_description: Updates Vertica configuration parameters.
 description:
-  Updates Vertica configuration parameters.
+    - Updates Vertica configuration parameters.
 options:
   name:
     description:
-      Name of the parameter to update.
+        - Name of the parameter to update.
     required: true
-    default: null
   value:
     description:
-      Value of the parameter to be set.
+        - Value of the parameter to be set.
     required: true
-    default: null
   db:
     description:
-      Name of the Vertica database.
+        - Name of the Vertica database.
     required: false
     default: null
   cluster:
     description:
-      Name of the Vertica cluster.
+        - Name of the Vertica cluster.
     required: false
     default: localhost
   port:
     description:
-      Vertica cluster port to connect to.
+        - Vertica cluster port to connect to.
     required: false
     default: 5433
   login_user:
     description:
-      The username used to authenticate with.
+        - The username used to authenticate with.
     required: false
     default: dbadmin
   login_password:
     description:
-      The password used to authenticate with.
+        - The password used to authenticate with.
     required: false
     default: null
 notes:
-  The default authentication assumes that you are either logging in as or sudo'ing
-  to the C(dbadmin) account on the host.
-  This module uses C(pyodbc), a Python ODBC database adapter. You must ensure
-  that C(unixODBC) and C(pyodbc) is installed on the host and properly configured.
-  Configuring C(unixODBC) for Vertica requires C(Driver = /opt/vertica/lib64/libverticaodbc.so)
-  to be added to the C(Vertica) section of either C(/etc/odbcinst.ini) or C($HOME/.odbcinst.ini)
-  and both C(ErrorMessagesPath = /opt/vertica/lib64) and C(DriverManagerEncoding = UTF-16)
-  to be added to the C(Driver) section of either C(/etc/vertica.ini) or C($HOME/.vertica.ini).
+  - The default authentication assumes that you are either logging in as or sudo'ing
+    to the C(dbadmin) account on the host.
+  - This module uses C(pyodbc), a Python ODBC database adapter. You must ensure
+    that C(unixODBC) and C(pyodbc) is installed on the host and properly configured.
+  - Configuring C(unixODBC) for Vertica requires C(Driver = /opt/vertica/lib64/libverticaodbc.so)
+    to be added to the C(Vertica) section of either C(/etc/odbcinst.ini) or C($HOME/.odbcinst.ini)
+    and both C(ErrorMessagesPath = /opt/vertica/lib64) and C(DriverManagerEncoding = UTF-16)
+    to be added to the C(Driver) section of either C(/etc/vertica.ini) or C($HOME/.vertica.ini).
 requirements: [ 'unixODBC', 'pyodbc' ]
 author: Dariusz Owczarek
 """
 
 EXAMPLES = """
-Examples:
-
 - name: updating load_balance_policy
   vertica_configuration: name=failovertostandbyafter value='8 hours'
 """
diff --git a/lib/ansible/modules/extras/database/vertica/vertica_facts.py b/lib/ansible/modules/extras/database/vertica/vertica_facts.py
index 2334cbaa22..01f2a955cc 100644
--- a/lib/ansible/modules/extras/database/vertica/vertica_facts.py
+++ b/lib/ansible/modules/extras/database/vertica/vertica_facts.py
@@ -22,11 +22,11 @@ module: vertica_facts
 version_added: '1.0'
 short_description: Gathers Vertica database facts.
 description:
-  Gathers Vertica database facts.
+  - Gathers Vertica database facts.
 options:
   cluster:
     description:
-      Name of the cluster running the schema.
+      - Name of the cluster running the schema.
     required: false
     default: localhost
   port:
@@ -36,28 +36,28 @@ options:
     default: 5433
   db:
     description:
-      Name of the database running the schema.
+      - Name of the database running the schema.
     required: false
     default: null
   login_user:
     description:
-      The username used to authenticate with.
+      - The username used to authenticate with.
     required: false
     default: dbadmin
   login_password:
     description:
-      The password used to authenticate with.
+      - The password used to authenticate with.
     required: false
     default: null
 notes:
-  The default authentication assumes that you are either logging in as or sudo'ing
-  to the C(dbadmin) account on the host.
-  This module uses C(pyodbc), a Python ODBC database adapter. You must ensure
-  that C(unixODBC) and C(pyodbc) is installed on the host and properly configured.
-  Configuring C(unixODBC) for Vertica requires C(Driver = /opt/vertica/lib64/libverticaodbc.so)
-  to be added to the C(Vertica) section of either C(/etc/odbcinst.ini) or C($HOME/.odbcinst.ini)
-  and both C(ErrorMessagesPath = /opt/vertica/lib64) and C(DriverManagerEncoding = UTF-16)
-  to be added to the C(Driver) section of either C(/etc/vertica.ini) or C($HOME/.vertica.ini).
+  - The default authentication assumes that you are either logging in as or sudo'ing
+    to the C(dbadmin) account on the host.
+  - This module uses C(pyodbc), a Python ODBC database adapter. You must ensure
+    that C(unixODBC) and C(pyodbc) is installed on the host and properly configured.
+  - Configuring C(unixODBC) for Vertica requires C(Driver = /opt/vertica/lib64/libverticaodbc.so)
+    to be added to the C(Vertica) section of either C(/etc/odbcinst.ini) or C($HOME/.odbcinst.ini)
+    and both C(ErrorMessagesPath = /opt/vertica/lib64) and C(DriverManagerEncoding = UTF-16)
+    to be added to the C(Driver) section of either C(/etc/vertica.ini) or C($HOME/.vertica.ini).
 requirements: [ 'unixODBC', 'pyodbc' ]
 author: Dariusz Owczarek
 """
diff --git a/lib/ansible/modules/extras/database/vertica/vertica_role.py b/lib/ansible/modules/extras/database/vertica/vertica_role.py
index dad6c5c3bc..c9f0153c54 100644
--- a/lib/ansible/modules/extras/database/vertica/vertica_role.py
+++ b/lib/ansible/modules/extras/database/vertica/vertica_role.py
@@ -22,66 +22,63 @@ module: vertica_role
 version_added: '1.0'
 short_description: Adds or removes Vertica database roles and assigns roles to them.
 description:
-  Adds or removes Vertica database role and, optionally, assign other roles.
+  - Adds or removes Vertica database role and, optionally, assign other roles.
 options:
   name:
     description:
-      Name of the role to add or remove.
+      - Name of the role to add or remove.
     required: true
-    default: null
   assigned_roles:
     description:
-      Comma separated list of roles to assign to the role.
-      [Alias I(assigned_role)]
+      - Comma separated list of roles to assign to the role.
+    aliases: ['assigned_role']
     required: false
     default: null
   state:
     description:
-      Whether to create C(present), drop C(absent) or lock C(locked) a role.
+      - Whether to create C(present), drop C(absent) or lock C(locked) a role.
     required: false
     choices: ['present', 'absent']
     default: present
   db:
     description:
-      Name of the Vertica database.
+      - Name of the Vertica database.
     required: false
     default: null
   cluster:
     description:
-      Name of the Vertica cluster.
+      - Name of the Vertica cluster.
     required: false
     default: localhost
   port:
     description:
-      Vertica cluster port to connect to.
+      - Vertica cluster port to connect to.
     required: false
     default: 5433
   login_user:
     description:
-      The username used to authenticate with.
+      - The username used to authenticate with.
     required: false
     default: dbadmin
   login_password:
     description:
-      The password used to authenticate with.
+      - The password used to authenticate with.
     required: false
     default: null
 notes:
-  The default authentication assumes that you are either logging in as or sudo'ing
-  to the C(dbadmin) account on the host.
-  This module uses C(pyodbc), a Python ODBC database adapter. You must ensure
-  that C(unixODBC) and C(pyodbc) is installed on the host and properly configured.
-  Configuring C(unixODBC) for Vertica requires C(Driver = /opt/vertica/lib64/libverticaodbc.so)
-  to be added to the C(Vertica) section of either C(/etc/odbcinst.ini) or C($HOME/.odbcinst.ini)
-  and both C(ErrorMessagesPath = /opt/vertica/lib64) and C(DriverManagerEncoding = UTF-16)
-  to be added to the C(Driver) section of either C(/etc/vertica.ini) or C($HOME/.vertica.ini).
+  - The default authentication assumes that you are either logging in as or sudo'ing
+    to the C(dbadmin) account on the host.
+  - This module uses C(pyodbc), a Python ODBC database adapter. You must ensure
+    that C(unixODBC) and C(pyodbc) is installed on the host and properly configured.
+  - Configuring C(unixODBC) for Vertica requires C(Driver = /opt/vertica/lib64/libverticaodbc.so)
+    to be added to the C(Vertica) section of either C(/etc/odbcinst.ini) or C($HOME/.odbcinst.ini)
+    and both C(ErrorMessagesPath = /opt/vertica/lib64) and C(DriverManagerEncoding = UTF-16)
+    to be added to the C(Driver) section of either C(/etc/vertica.ini) or C($HOME/.vertica.ini).
 requirements: [ 'unixODBC', 'pyodbc' ]
 author: Dariusz Owczarek
 """
 
 EXAMPLES = """
-Examples:
-
 - name: creating a new vertica role
   vertica_role: name=role_name db=db_name state=present
 
diff --git a/lib/ansible/modules/extras/database/vertica/vertica_schema.py b/lib/ansible/modules/extras/database/vertica/vertica_schema.py
index 7bc57a545f..f7c9847db5 100644
--- a/lib/ansible/modules/extras/database/vertica/vertica_schema.py
+++ b/lib/ansible/modules/extras/database/vertica/vertica_schema.py
@@ -22,82 +22,79 @@ module: vertica_schema
 version_added: '1.0'
 short_description: Adds or removes Vertica database schema and roles.
 description:
-  Adds or removes Vertica database schema and, optionally, roles 
-  with schema access privileges.
-  A schema will not be removed until all the objects have been dropped.
-  In such a situation, if the module tries to remove the schema it
-  will fail and only remove roles created for the schema if they have
-  no dependencies.
+  - Adds or removes Vertica database schema and, optionally, roles 
+    with schema access privileges.
+  - A schema will not be removed until all the objects have been dropped.
+  - In such a situation, if the module tries to remove the schema it
+    will fail and only remove roles created for the schema if they have
+    no dependencies.
 options:
   name:
     description:
-      Name of the schema to add or remove.
+      - Name of the schema to add or remove.
     required: true
-    default: null
   usage_roles:
     description:
-      Comma separated list of roles to create and grant usage access to the schema.
-      [Alias I(usage_role)]
+      - Comma separated list of roles to create and grant usage access to the schema.
+    aliases: ['usage_role']
     required: false
     default: null
   create_roles:
     description:
-      Comma separated list of roles to create and grant usage and create access to the schema.
-      [Alias I(create_role)]
+      - Comma separated list of roles to create and grant usage and create access to the schema.
+    aliases: ['create_role']
     required: false
     default: null
   owner:
     description:
-      Name of the user to set as owner of the schema.
+      - Name of the user to set as owner of the schema.
     required: false
     default: null
   state:
     description:
-      Whether to create C(present), or drop C(absent) a schema.
+      - Whether to create C(present), or drop C(absent) a schema.
     required: false
     default: present
     choices: ['present', 'absent']
   db:
     description:
-      Name of the Vertica database.
+      - Name of the Vertica database.
     required: false
     default: null
   cluster:
     description:
-      Name of the Vertica cluster.
+      - Name of the Vertica cluster.
     required: false
     default: localhost
   port:
     description:
-      Vertica cluster port to connect to.
+      - Vertica cluster port to connect to.
     required: false
     default: 5433
   login_user:
     description:
-      The username used to authenticate with.
+      - The username used to authenticate with.
     required: false
     default: dbadmin
   login_password:
     description:
-      The password used to authenticate with.
+      - The password used to authenticate with.
     required: false
     default: null
 notes:
-  The default authentication assumes that you are either logging in as or sudo'ing
-  to the C(dbadmin) account on the host.
-  This module uses C(pyodbc), a Python ODBC database adapter. You must ensure
-  that C(unixODBC) and C(pyodbc) is installed on the host and properly configured.
-  Configuring C(unixODBC) for Vertica requires C(Driver = /opt/vertica/lib64/libverticaodbc.so)
-  to be added to the C(Vertica) section of either C(/etc/odbcinst.ini) or C($HOME/.odbcinst.ini)
-  and both C(ErrorMessagesPath = /opt/vertica/lib64) and C(DriverManagerEncoding = UTF-16)
-  to be added to the C(Driver) section of either C(/etc/vertica.ini) or C($HOME/.vertica.ini).
+  - The default authentication assumes that you are either logging in as or sudo'ing
+    to the C(dbadmin) account on the host.
+  - This module uses C(pyodbc), a Python ODBC database adapter. You must ensure
+    that C(unixODBC) and C(pyodbc) is installed on the host and properly configured.
+  - Configuring C(unixODBC) for Vertica requires C(Driver = /opt/vertica/lib64/libverticaodbc.so)
+    to be added to the C(Vertica) section of either C(/etc/odbcinst.ini) or C($HOME/.odbcinst.ini)
+    and both C(ErrorMessagesPath = /opt/vertica/lib64) and C(DriverManagerEncoding = UTF-16)
+    to be added to the C(Driver) section of either C(/etc/vertica.ini) or C($HOME/.vertica.ini).
 requirements: [ 'unixODBC', 'pyodbc' ]
 author: Dariusz Owczarek
 """
 
 EXAMPLES = """
-Examples:
-
 - name: creating a new vertica schema
   vertica_schema: name=schema_name db=db_name state=present
 
diff --git a/lib/ansible/modules/extras/database/vertica/vertica_user.py b/lib/ansible/modules/extras/database/vertica/vertica_user.py
index 82182301a6..4a4bad3f92 100644
--- a/lib/ansible/modules/extras/database/vertica/vertica_user.py
+++ b/lib/ansible/modules/extras/database/vertica/vertica_user.py
@@ -22,98 +22,95 @@ module: vertica_user
 version_added: '1.0'
 short_description: Adds or removes Vertica database users and assigns roles.
 description:
-  Adds or removes Vertica database user and, optionally, assigns roles.
-  A user will not be removed until all the dependencies have been dropped.
-  In such a situation, if the module tries to remove the user it
-  will fail and only remove roles granted to the user.
+  - Adds or removes Vertica database user and, optionally, assigns roles.
+  - A user will not be removed until all the dependencies have been dropped.
+  - In such a situation, if the module tries to remove the user it
+    will fail and only remove roles granted to the user.
 options:
   name:
     description:
-      Name of the user to add or remove.
+      - Name of the user to add or remove.
     required: true
-    default: null
   profile:
     description:
-      Sets the user's profile.
+      - Sets the user's profile.
     required: false
     default: null
   resource_pool:
     description:
-      Sets the user's resource pool.
+      - Sets the user's resource pool.
     required: false
     default: null
   password:
     description:
-      The user's password encrypted by the MD5 algorithm.
-      The password must be generated with the format C("md5" + md5[password + username]),
-      resulting in a total of 35 characters. An easy way to do this is by querying
-      the Vertica database with select 'md5'||md5('<user_password><user_name>').
+      - The user's password encrypted by the MD5 algorithm.
+      - The password must be generated with the format C("md5" + md5[password + username]),
+        resulting in a total of 35 characters. An easy way to do this is by querying
+        the Vertica database with select 'md5'||md5('<user_password><user_name>').
     required: false
     default: null
   expired:
     description:
-      Sets the user's password expiration.
+      - Sets the user's password expiration.
     required: false
     default: null
   ldap:
     description:
-      Set to true if users are authenticated via LDAP.
-      The user will be created with password expired and set to I($ldap$).
+      - Set to true if users are authenticated via LDAP.
+      - The user will be created with password expired and set to I($ldap$).
     required: false
     default: null
   roles:
     description:
-      Comma separated list of roles to assign to the user.
-      [Alias I(role)]
+      - Comma separated list of roles to assign to the user.
+    aliases: ['role']
     required: false
     default: null
   state:
     description:
-      Whether to create C(present), drop C(absent) or lock C(locked) a user.
+      - Whether to create C(present), drop C(absent) or lock C(locked) a user.
     required: false
     choices: ['present', 'absent', 'locked']
     default: present
   db:
     description:
-      Name of the Vertica database.
+      - Name of the Vertica database.
     required: false
     default: null
   cluster:
     description:
-      Name of the Vertica cluster.
+      - Name of the Vertica cluster.
     required: false
     default: localhost
   port:
     description:
-      Vertica cluster port to connect to.
+      - Vertica cluster port to connect to.
     required: false
     default: 5433
   login_user:
     description:
-      The username used to authenticate with.
+      - The username used to authenticate with.
     required: false
     default: dbadmin
   login_password:
     description:
-      The password used to authenticate with.
+      - The password used to authenticate with.
     required: false
     default: null
 notes:
-  The default authentication assumes that you are either logging in as or sudo'ing
-  to the C(dbadmin) account on the host.
-  This module uses C(pyodbc), a Python ODBC database adapter. You must ensure
-  that C(unixODBC) and C(pyodbc) is installed on the host and properly configured.
-  Configuring C(unixODBC) for Vertica requires C(Driver = /opt/vertica/lib64/libverticaodbc.so)
-  to be added to the C(Vertica) section of either C(/etc/odbcinst.ini) or C($HOME/.odbcinst.ini)
-  and both C(ErrorMessagesPath = /opt/vertica/lib64) and C(DriverManagerEncoding = UTF-16)
-  to be added to the C(Driver) section of either C(/etc/vertica.ini) or C($HOME/.vertica.ini).
+  - The default authentication assumes that you are either logging in as or sudo'ing
+    to the C(dbadmin) account on the host.
+  - This module uses C(pyodbc), a Python ODBC database adapter. You must ensure
+    that C(unixODBC) and C(pyodbc) is installed on the host and properly configured.
+  - Configuring C(unixODBC) for Vertica requires C(Driver = /opt/vertica/lib64/libverticaodbc.so)
+    to be added to the C(Vertica) section of either C(/etc/odbcinst.ini) or C($HOME/.odbcinst.ini)
+    and both C(ErrorMessagesPath = /opt/vertica/lib64) and C(DriverManagerEncoding = UTF-16)
+    to be added to the C(Driver) section of either C(/etc/vertica.ini) or C($HOME/.vertica.ini).
 requirements: [ 'unixODBC', 'pyodbc' ]
 author: Dariusz Owczarek
 """
 
 EXAMPLES = """
-Examples:
-
 - name: creating a new vertica user with password
   vertica_user: name=user_name password=md5<encrypted_password> db=db_name state=present
 
