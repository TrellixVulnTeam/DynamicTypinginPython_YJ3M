commit b2d8ef69f993a3873d8af663376a34b8a75750cf
Author: Sumit Jaiswal <sjaiswal@redhat.com>
Date:   Thu Jul 18 16:26:55 2019 +0530

    PR to support Ansible Checkmode in Checkpoint modules (#57695)
    
    * added checkmode support
    
    Signed-off-by: Sumit Jaiswal <sjaiswal@redhat.com>

diff --git a/lib/ansible/module_utils/network/checkpoint/checkpoint.py b/lib/ansible/module_utils/network/checkpoint/checkpoint.py
index dd6c9622f5..640b83aaff 100644
--- a/lib/ansible/module_utils/network/checkpoint/checkpoint.py
+++ b/lib/ansible/module_utils/network/checkpoint/checkpoint.py
@@ -169,9 +169,22 @@ def api_call(module, api_call_object):
     result = {'changed': False}
 
     if module.params['state'] == 'present':
-        if equals_code == 200:
-            if not equals_response['equals']:
-                code, response = send_request(connection, version, 'set-' + api_call_object, payload)
+        if not module.check_mode:
+            if equals_code == 200:
+                if not equals_response['equals']:
+                    code, response = send_request(connection, version, 'set-' + api_call_object, payload)
+                    if code != 200:
+                        module.fail_json(msg=response)
+
+                    handle_publish(module, connection, version)
+
+                    result['changed'] = True
+                    result[api_call_object] = response
+                else:
+                    # objects are equals and there is no need for set request
+                    pass
+            elif equals_code == 404:
+                code, response = send_request(connection, version, 'add-' + api_call_object, payload)
                 if code != 200:
                     module.fail_json(msg=response)
 
@@ -179,31 +192,19 @@ def api_call(module, api_call_object):
 
                 result['changed'] = True
                 result[api_call_object] = response
-            else:
-                # objects are equals and there is no need for set request
-                pass
-        elif equals_code == 404:
-            code, response = send_request(connection, version, 'add-' + api_call_object, payload)
-            if code != 200:
-                module.fail_json(msg=response)
-
-            handle_publish(module, connection, version)
-
-            result['changed'] = True
-            result[api_call_object] = response
-    else:
-        # state == absent
-        if equals_code == 200:
-            code, response = send_request(connection, version, 'delete-' + api_call_object, payload)
-            if code != 200:
-                module.fail_json(msg=response)
+    elif module.params['state'] == 'absent':
+        if not module.check_mode:
+            if equals_code == 200:
+                code, response = send_request(connection, version, 'delete-' + api_call_object, payload)
+                if code != 200:
+                    module.fail_json(msg=response)
 
-            handle_publish(module, connection, version)
+                handle_publish(module, connection, version)
 
-            result['changed'] = True
-        elif equals_code == 404:
-            # no need to delete because object dose not exist
-            pass
+                result['changed'] = True
+            elif equals_code == 404:
+                # no need to delete because object dose not exist
+                pass
 
     result['checkpoint_session_uid'] = connection.get_session_uid()
     return result
diff --git a/lib/ansible/modules/network/checkpoint/cp_network.py b/lib/ansible/modules/network/checkpoint/cp_network.py
index de892a26a3..e2de41e986 100644
--- a/lib/ansible/modules/network/checkpoint/cp_network.py
+++ b/lib/ansible/modules/network/checkpoint/cp_network.py
@@ -196,7 +196,9 @@ def main():
     argument_spec.update(checkpoint_argument_spec_for_objects)
 
     module = AnsibleModule(argument_spec=argument_spec, required_one_of=[['name', 'uid']],
-                           mutually_exclusive=[['name', 'uid']])
+                           mutually_exclusive=[['name', 'uid']],
+                           supports_check_mode=True)
+
     api_call_object = 'network'
 
     result = api_call(module, api_call_object)
