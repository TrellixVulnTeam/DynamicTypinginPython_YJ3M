commit b3795322e97f6d547ff9cbfdcbb5fa4956bd4fd0
Author: James Tanner <tanner.jc@gmail.com>
Date:   Wed Nov 9 15:25:17 2016 -0500

    More isinstance fixes (#3405)
    
    * More isinstance fixes
    * Use double types

diff --git a/lib/ansible/modules/extras/clustering/znode.py b/lib/ansible/modules/extras/clustering/znode.py
index aff1cd1d22..6d01b869c5 100644
--- a/lib/ansible/modules/extras/clustering/znode.py
+++ b/lib/ansible/modules/extras/clustering/znode.py
@@ -194,7 +194,7 @@ class KazooCommandProxy():
             for i in dir(zstat):
                 if not i.startswith('_'):
                     attr = getattr(zstat, i)
-                    if type(attr) in (int, str):
+                    if isinstance(attr, (int, str)):
                         stat_dict[i] = attr
             result = True, {'msg': 'The node was retrieved.', 'znode': path, 'value': value,
                             'stat': stat_dict}
diff --git a/lib/ansible/modules/extras/network/nmcli.py b/lib/ansible/modules/extras/network/nmcli.py
index 7dfe28288b..70af5baeed 100644
--- a/lib/ansible/modules/extras/network/nmcli.py
+++ b/lib/ansible/modules/extras/network/nmcli.py
@@ -504,13 +504,13 @@ class Nmcli(object):
             val=d[key]
             str_val=""
             add_string=True
-            if type(val)==type(dbus.Array([])):
+            if isinstance(val, dbus.Array):
                 for elt in val:
-                    if type(elt)==type(dbus.Byte(1)):
+                    if isinstance(elt, dbus.Byte):
                         str_val+="%s " % int(elt)
-                    elif type(elt)==type(dbus.String("")):
+                    elif isinstance(elt, dbus.String):
                         str_val+="%s" % elt
-            elif type(val)==type(dbus.Dictionary({})):
+            elif isinstance(val, dbus.Dictionary):
                 dstr+=self.dict_to_string(val)
                 add_string=False
             else:
diff --git a/lib/ansible/modules/extras/system/osx_defaults.py b/lib/ansible/modules/extras/system/osx_defaults.py
index 5a9fcf25b7..7cc481232e 100644
--- a/lib/ansible/modules/extras/system/osx_defaults.py
+++ b/lib/ansible/modules/extras/system/osx_defaults.py
@@ -238,7 +238,7 @@ class OSXDefaults(object):
                 value = "TRUE"
             else:
                 value = "FALSE"
-        elif type(self.value) is int or type(self.value) is float:
+        elif isinstance(self.value, (int, float)):
             value = str(self.value)
         elif self.array_add and self.current_value is not None:
             value = list(set(self.value) - set(self.current_value))
@@ -285,7 +285,7 @@ class OSXDefaults(object):
             return True
 
         # There is a type mismatch! Given type does not match the type in defaults
-        if self.current_value is not None and type(self.current_value) is not type(self.value):
+        if self.current_value is not None and not isinstance(self.current_value, type(self.value)):
             raise OSXDefaultsException("Type mismatch. Type in defaults: " + type(self.current_value).__name__)
 
         # Current value matches the given value. Nothing need to be done. Arrays need extra care
