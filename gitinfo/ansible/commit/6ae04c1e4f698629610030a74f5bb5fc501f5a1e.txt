commit 6ae04c1e4f698629610030a74f5bb5fc501f5a1e
Author: James Cammarata <jimi@sngx.net>
Date:   Sun Dec 20 12:37:24 2015 -0500

    Fix logic in PlayIterator when inserting tasks during rescue/always
    
    Because the fail_state is potentially non-zero in these block sections,
    the prior logic led to included tasks not being inserted at all.
    
    Related issue: #13605

diff --git a/lib/ansible/executor/play_iterator.py b/lib/ansible/executor/play_iterator.py
index 795eed2a8c..534f216c30 100644
--- a/lib/ansible/executor/play_iterator.py
+++ b/lib/ansible/executor/play_iterator.py
@@ -397,7 +397,7 @@ class PlayIterator:
 
     def _insert_tasks_into_state(self, state, task_list):
         # if we've failed at all, or if the task list is empty, just return the current state
-        if state.fail_state != self.FAILED_NONE or not task_list:
+        if state.fail_state != self.FAILED_NONE and state.run_state not in (self.ITERATING_RESCUE, self.ITERATING_ALWAYS) or not task_list:
             return state
 
         if state.run_state == self.ITERATING_TASKS:
