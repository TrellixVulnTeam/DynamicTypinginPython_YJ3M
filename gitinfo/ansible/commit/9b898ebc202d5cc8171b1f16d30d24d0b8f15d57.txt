commit 9b898ebc202d5cc8171b1f16d30d24d0b8f15d57
Author: Yanis Guenane <yguenane@gmail.com>
Date:   Wed Jul 18 09:53:58 2018 +0200

    Vultr: Introducing vr_sshkey_facts module (#42615)
    
    This commit introduces a new module called vr_sshkey_facts.
    
    This module aims to return the list of SSH keys avaiable in Vultr.
    
    Sample available here:
    
    ```
    "vultr_sshkey_facts": [
       {
        "date_created": "2018-07-10 14:49:13",
        "id": "5b43c760d7d84",
        "name": "me@home",
        "ssh_key": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC+ZFQv3MyjtL1BMpSA0o0gIkzLVVC711rthT29hBNeORdNowQ7FSvVWUdAbTq00U7Xzak1ANIYLJyn+0r7olsdG4XEiUR0dqgC99kbT/QhY5mLe5lpl7JUjW9ctn00hNmt+TswpatCKWPNwdeAJT2ERynZaqPobENgewrwerqewqIVew7qFeZygxsPVn36EUr2Cdq7Nb7U0XFXh3x1p0v0+MbL4tiJwPlMAGvFTKIMt+EaA+AsRIxiOo9CMk5ZuOl9pT8h5vNuEOcvS0qx4v44EAD2VOsCVCcrPNMcpuSzZP8dRTGU9wRREAWXngD0Zq9YJMH38VTxHiskoBw1NnPz me@home"
      }
    ]
    ```

diff --git a/lib/ansible/module_utils/vultr.py b/lib/ansible/module_utils/vultr.py
index 0dd185c73c..f52052502c 100644
--- a/lib/ansible/module_utils/vultr.py
+++ b/lib/ansible/module_utils/vultr.py
@@ -238,6 +238,7 @@ class Vultr:
 
                 if 'key' in config:
                     resource[config['key']] = resource[search_key]
+                    del resource[search_key]
 
         return resource
 
diff --git a/lib/ansible/modules/cloud/vultr/vr_ssh_key_facts.py b/lib/ansible/modules/cloud/vultr/vr_ssh_key_facts.py
new file mode 100644
index 0000000000..b733dcaf6e
--- /dev/null
+++ b/lib/ansible/modules/cloud/vultr/vr_ssh_key_facts.py
@@ -0,0 +1,121 @@
+#!/usr/bin/python
+# -*- coding: utf-8 -*-
+#
+# (c) 2018, Yanis Guenane <yanis+ansible@guenane.org>
+# GNU General Public License v3.0+ (see COPYING or https://www.gnu.org/licenses/gpl-3.0.txt)
+
+from __future__ import (absolute_import, division, print_function)
+__metaclass__ = type
+
+ANSIBLE_METADATA = {'metadata_version': '1.1',
+                    'status': ['preview'],
+                    'supported_by': 'community'}
+
+DOCUMENTATION = r'''
+---
+module: vr_ssh_key_facts
+short_description: Gather facts about the Vultr SSH keys available.
+description:
+  - Gather facts about SSH keys available.
+version_added: "2.7"
+author: "Yanis Guenane (@Spredzy)"
+extends_documentation_fragment: vultr
+'''
+
+EXAMPLES = r'''
+- name: Gather Vultr SSH keys facts
+  local_action:
+    module: vr_ssh_key_facts
+
+- name: Print the gathered facts
+  debug:
+    var: ansible_facts.vultr_ssh_key_facts
+'''
+
+RETURN = r'''
+---
+vultr_api:
+  description: Response from Vultr API with a few additions/modification
+  returned: success
+  type: complex
+  contains:
+    api_account:
+      description: Account used in the ini file to select the key
+      returned: success
+      type: string
+      sample: default
+    api_timeout:
+      description: Timeout used for the API requests
+      returned: success
+      type: int
+      sample: 60
+    api_retries:
+      description: Amount of max retries for the API requests
+      returned: success
+      type: int
+      sample: 5
+    api_endpoint:
+      description: Endpoint used for the API requests
+      returned: success
+      type: string
+      sample: "https://api.vultr.com"
+ansible_facts:
+  description: Response from Vultr API
+  returned: success
+  type: complex
+  contains:
+    "vultr_ssh_key_facts": [
+      {
+        "date_created": "2018-02-24 15:04:01",
+        "id": "5abf426403479",
+        "name": "me@home",
+        "ssh_key": "ssh-rsa AAAAB3Nz...NnPz me@home"
+      }
+    ]
+'''
+
+from ansible.module_utils.basic import AnsibleModule
+from ansible.module_utils.vultr import (
+    Vultr,
+    vultr_argument_spec,
+)
+
+
+class AnsibleVultrSSHKeyFacts(Vultr):
+
+    def __init__(self, module):
+        super(AnsibleVultrSSHKeyFacts, self).__init__(module, "vultr_ssh_key_facts")
+
+        self.returns = {
+            'SSHKEYID': dict(key='id'),
+            'name': dict(),
+            'ssh_key': dict(),
+            'date_created': dict(),
+        }
+
+    def get_sshkeys(self):
+        return self.api_query(path="/v1/sshkey/list")
+
+
+def parse_keys_list(keys_list):
+    return [key for id, key in keys_list.items()]
+
+
+def main():
+    argument_spec = vultr_argument_spec()
+
+    module = AnsibleModule(
+        argument_spec=argument_spec,
+        supports_check_mode=True,
+    )
+
+    sshkey_facts = AnsibleVultrSSHKeyFacts(module)
+    result = sshkey_facts.get_result(parse_keys_list(sshkey_facts.get_sshkeys()))
+    ansible_facts = {
+        'vultr_ssh_key_facts': result['vultr_ssh_key_facts']
+    }
+    module.exit_json(ansible_facts=ansible_facts, **result)
+
+
+if __name__ == '__main__':
+    main()
diff --git a/test/legacy/roles/vr_ssh_key_facts/defaults/main.yml b/test/legacy/roles/vr_ssh_key_facts/defaults/main.yml
new file mode 100644
index 0000000000..bb4ecce18b
--- /dev/null
+++ b/test/legacy/roles/vr_ssh_key_facts/defaults/main.yml
@@ -0,0 +1,2 @@
+ssh_key_name: ansibletest-sshkey
+ssh_key_content: ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC+ZFQv3MyjtL1BMpSA0o0gIkzLVVC711rthT29hBNeORdNowQ7FSvVWUdAbTq00U7Xzak1ANIYLJyn+0r7olsdG4XEiUR0dqgC99kbT/QhY5mLe5lpl7JUjW9ctn00hNmt+TswpatCKWPNwdeAJT2ERynZaqPobENgvIq7jfOFWQIVew7qrewtqwerqwrewUr2Cdq7Nb7U0XFXh3x1p0v0+MbL4tiJwPlMAGvFTKIMt+EaA+AsRIxiOo9CMk5ZuOl9pT8h5vNuEOcvS0qx4v44EAD2VOsCVCcrPNMcpuSzZP8dRTGU9wRREAWXngD0Zq9YJMH38VTxHiskoBw1NnPz ansibletest@sshkey
diff --git a/test/legacy/roles/vr_ssh_key_facts/tasks/main.yml b/test/legacy/roles/vr_ssh_key_facts/tasks/main.yml
new file mode 100644
index 0000000000..af48277e73
--- /dev/null
+++ b/test/legacy/roles/vr_ssh_key_facts/tasks/main.yml
@@ -0,0 +1,31 @@
+# Copyright (c) 2018, Yanis Guenane <yanis+ansible@guenane.org>
+# GNU General Public License v3.0+ (see COPYING or https://www.gnu.org/licenses/gpl-3.0.txt)
+---
+- name: Upload an ssh key
+  vr_ssh_key:
+    name: '{{ ssh_key_name }}'
+    ssh_key: '{{ ssh_key_content }}'
+
+- name: test gather vultr ssh key facts in check mode
+  vr_ssh_key_facts:
+  check_mode: yes
+
+- name: verify test gather vultr ssh key facts in check mode
+  assert:
+    that:
+    - ansible_facts.vultr_ssh_key_facts|selectattr('name','equalto','{{ ssh_key_name }}') | list | count == 1
+    - ansible_facts.vultr_ssh_key_facts|selectattr('ssh_key','equalto','{{ ssh_key_content }}') | list | count == 1
+
+- name: test gather vultr ssh key fact
+  vr_ssh_key_facts:
+
+- name: verify test gather vultr ssh key facts
+  assert:
+    that:
+    - ansible_facts.vultr_ssh_key_facts|selectattr('name','equalto','{{ ssh_key_name }}') | list | count == 1
+    - ansible_facts.vultr_ssh_key_facts|selectattr('ssh_key','equalto','{{ ssh_key_content }}') | list | count == 1
+
+- name: Destroy the ssh key
+  vr_ssh_key:
+    name: ansibletest-sshkey
+    state: absent
diff --git a/test/legacy/vultr.yml b/test/legacy/vultr.yml
index 8c569653ec..f9b6761a2e 100644
--- a/test/legacy/vultr.yml
+++ b/test/legacy/vultr.yml
@@ -8,6 +8,7 @@
     - { role: vr_account_facts, tags: test_vr_account_facts }
     - { role: vr_user, tags: test_vr_user }
     - { role: vr_ssh_key, tags: test_vr_ssh_key }
+    - { role: vr_ssh_key_facts, tags: test_vr_ssh_key_facts }
     - { role: vr_firewall_group, tags: test_vr_firewall_group }
     - { role: vr_firewall_rule, tags: test_vr_firewall_rule }
     - { role: vr_startup_script, tags: test_vr_startup_script }
