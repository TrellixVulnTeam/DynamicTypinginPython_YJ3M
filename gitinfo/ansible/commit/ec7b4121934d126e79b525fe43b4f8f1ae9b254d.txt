commit ec7b4121934d126e79b525fe43b4f8f1ae9b254d
Author: Tomáš Karásek <t0mk@users.noreply.github.com>
Date:   Thu Jan 4 05:05:04 2018 +0200

    Fix Packet guide to comply with latest version of the packet module (#31410)
    
    * Fix Packet guide to comply with latest version of the packet module
    
    * Fix backticks in rst
    
    * rephrase wait_for_public_IPv description
    
    * Edited for clarity.

diff --git a/docs/docsite/rst/guide_packet.rst b/docs/docsite/rst/guide_packet.rst
index a61234d21b..f394ac1e12 100644
--- a/docs/docsite/rst/guide_packet.rst
+++ b/docs/docsite/rst/guide_packet.rst
@@ -152,7 +152,7 @@ The following playbook will create an SSH key, 3 Packet servers, and then wait u
           plan: baremetal_0
           facility: ewr1
           project_id: <your_project_id>
-          wait: true
+          wait_for_public_IPv: 4
           user_data: |
             #cloud-config
             coreos:
@@ -185,7 +185,7 @@ As with most Ansible modules, the default states of the Packet modules are idemp
 
 The second module call provisions 3 Packet Type 0 (specified using the 'plan' parameter) servers in the project identified via the 'project_id' parameter. The servers are all provisioned with CoresOS beta (the 'operating_system' parameter) and are customized with cloud-config user data passed to the 'user_data' parameter.
 
-The ``packet_device`` module has a boolean 'wait' parameter that defaults to 'false'. If set to 'true', Ansible will wait until the GET API call for a device will contain an Internet-routeable IP address. The 'wait' parameter allows us to use the IP address of the device as soon as it's available.
+The ``packet_device`` module has a ``wait_for_public_IPv`` that is used to specify the version of the IP address to wait for (valid values are ``4`` or ``6`` for IPv4 or IPv6). If specified, Ansible will wait until the GET API call for a device contains an Internet-routeable IP address of the specified version. When referring to an IP address of a created device in subsequent module calls, it's wise to use the ``wait_for_public_IPv`` parameter, or ``state: active`` in the packet_device module call.
 
 Run the playbook:
 
