commit 073c4df7903113f6edb1ad19cc36b857c96f59f1
Author: Jasper Lievisse Adriaanse <jasper@humppa.nl>
Date:   Tue Jan 10 14:17:32 2017 +0100

    Update references to Passlib as homepage/docsite moved (#20082)

diff --git a/docs/docsite/rst/faq.rst b/docs/docsite/rst/faq.rst
index 7881d693c1..1e6d725dfb 100644
--- a/docs/docsite/rst/faq.rst
+++ b/docs/docsite/rst/faq.rst
@@ -288,7 +288,7 @@ The mkpasswd utility that is available on most Linux systems is a great option:
     mkpasswd --method=sha-512
 
 If this utility is not installed on your system (e.g. you are using OS X) then you can still easily
-generate these passwords using Python. First, ensure that the `Passlib <https://code.google.com/p/passlib/>`_
+generate these passwords using Python. First, ensure that the `Passlib <https://bitbucket.org/ecollins/passlib/wiki/Home>`_
 password hashing library is installed:
 
 .. code-block:: shell-session
diff --git a/docs/docsite/rst/playbooks_prompts.rst b/docs/docsite/rst/playbooks_prompts.rst
index a18ed1ae72..606ab0f1f4 100644
--- a/docs/docsite/rst/playbooks_prompts.rst
+++ b/docs/docsite/rst/playbooks_prompts.rst
@@ -50,7 +50,7 @@ some other options, but otherwise works equivalently::
        prompt: "Product release version"
        private: no
 
-If `Passlib <http://pythonhosted.org/passlib/>`_ is installed, vars_prompt can also crypt the
+If `Passlib <https://passlib.readthedocs.io/en/stable/>`_ is installed, vars_prompt can also crypt the
 entered value so you can use it, for instance, with the user module to define a password::
 
    vars_prompt:
