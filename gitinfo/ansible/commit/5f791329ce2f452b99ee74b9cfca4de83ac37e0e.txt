commit 5f791329ce2f452b99ee74b9cfca4de83ac37e0e
Author: Brian Coca <bcoca@ansible.com>
Date:   Sat Jul 4 10:23:30 2015 -0400

    now verbose mode shows config file used

diff --git a/lib/ansible/cli/__init__.py b/lib/ansible/cli/__init__.py
index 6d219e54f8..534ebabd0f 100644
--- a/lib/ansible/cli/__init__.py
+++ b/lib/ansible/cli/__init__.py
@@ -99,7 +99,9 @@ class CLI(object):
         raise Exception("Need to implement!")
 
     def run(self):
-        raise Exception("Need to implement!")
+
+        if self.options.verbosity > 0:
+            self.display.display("Using %s as config file" % C.CONFIG_FILE)
 
     @staticmethod
     def ask_vault_passwords(ask_vault_pass=False, ask_new_vault_pass=False, confirm_vault=False, confirm_new=False):
diff --git a/lib/ansible/cli/adhoc.py b/lib/ansible/cli/adhoc.py
index e940a0224f..cc80f38427 100644
--- a/lib/ansible/cli/adhoc.py
+++ b/lib/ansible/cli/adhoc.py
@@ -76,6 +76,9 @@ class AdHocCLI(CLI):
     def run(self):
         ''' use Runner lib to do SSH things '''
 
+        super(AdHocCLI, self).run()
+
+
         # only thing left should be host pattern
         pattern = self.args[0]
 
diff --git a/lib/ansible/cli/doc.py b/lib/ansible/cli/doc.py
index 09020b41ff..72ce3c1a5e 100644
--- a/lib/ansible/cli/doc.py
+++ b/lib/ansible/cli/doc.py
@@ -61,6 +61,8 @@ class DocCLI(CLI):
 
     def run(self):
 
+        super(DocCLI, self).run()
+
         if self.options.module_path is not None:
             for i in self.options.module_path.split(os.pathsep):
                 module_loader.add_directory(i)
diff --git a/lib/ansible/cli/galaxy.py b/lib/ansible/cli/galaxy.py
index abe85e0af8..2df7075918 100644
--- a/lib/ansible/cli/galaxy.py
+++ b/lib/ansible/cli/galaxy.py
@@ -124,6 +124,8 @@ class GalaxyCLI(CLI):
 
     def run(self):
 
+        super(GalaxyCLI, self).run()
+
         # if not offline, get connect to galaxy api
         if self.action in ("info","install") or (self.action == 'init' and not self.options.offline):
             api_server = self.options.api_server
diff --git a/lib/ansible/cli/playbook.py b/lib/ansible/cli/playbook.py
index e10ffb71d0..630ba391ff 100644
--- a/lib/ansible/cli/playbook.py
+++ b/lib/ansible/cli/playbook.py
@@ -81,6 +81,8 @@ class PlaybookCLI(CLI):
 
     def run(self):
 
+        super(PlaybookCLI, self).run()
+
         # Note: slightly wrong, this is written so that implicit localhost
         # Manage passwords
         sshpass    = None
diff --git a/lib/ansible/cli/pull.py b/lib/ansible/cli/pull.py
index ff8103a1df..d66ceddc06 100644
--- a/lib/ansible/cli/pull.py
+++ b/lib/ansible/cli/pull.py
@@ -98,6 +98,8 @@ class PullCLI(CLI):
     def run(self):
         ''' use Runner lib to do SSH things '''
 
+        super(PullCLI, self).run()
+
         # log command line
         now = datetime.datetime.now()
         self.display.display(now.strftime("Starting Ansible Pull at %F %T"))
diff --git a/lib/ansible/cli/vault.py b/lib/ansible/cli/vault.py
index edd054f434..cac9dc7177 100644
--- a/lib/ansible/cli/vault.py
+++ b/lib/ansible/cli/vault.py
@@ -70,6 +70,8 @@ class VaultCLI(CLI):
 
     def run(self):
 
+        super(VaultCLI, self).run()
+
         if self.options.vault_password_file:
             # read vault_pass from a file
             self.vault_pass = read_vault_file(self.options.vault_password_file)
diff --git a/lib/ansible/constants.py b/lib/ansible/constants.py
index a0ea2657ce..e001ce76ca 100644
--- a/lib/ansible/constants.py
+++ b/lib/ansible/constants.py
@@ -16,7 +16,7 @@
 # along with Ansible.  If not, see <http://www.gnu.org/licenses/>.
 
 # Make coding more python3-ish
-from __future__ import (absolute_import, division, print_function)
+from __future__ import (absolute_import, division)
 __metaclass__ = type
 
 import os
@@ -26,6 +26,8 @@ import sys
 from six.moves import configparser
 from string import ascii_letters, digits
 
+from ansible.errors import AnsibleOptionsError
+
 # copied from utils, avoid circular reference fun :)
 def mk_boolean(value):
     if value is None:
@@ -81,9 +83,8 @@ def load_config_file():
             try:
                 p.read(path)
             except configparser.Error as e:
-                print("Error reading config file: \n{0}".format(e))
-                sys.exit(1)
-            return p
+                raise AnsibleOptionsError("Error reading config file: \n{0}".format(e))
+            return p, path
     return None
 
 def shell_expand_path(path):
@@ -93,7 +94,7 @@ def shell_expand_path(path):
         path = os.path.expanduser(os.path.expandvars(path))
     return path
 
-p = load_config_file()
+p, CONFIG_FILE = load_config_file()
 
 active_user   = pwd.getpwuid(os.geteuid())[0]
 
