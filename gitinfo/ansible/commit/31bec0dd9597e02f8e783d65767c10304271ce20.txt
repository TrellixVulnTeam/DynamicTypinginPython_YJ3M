commit 31bec0dd9597e02f8e783d65767c10304271ce20
Author: The Magician <magic-modules@google.com>
Date:   Tue Jun 11 10:53:43 2019 -0700

    Bug fixes for GCP modules (#57152)

diff --git a/lib/ansible/modules/cloud/google/gcp_dns_managed_zone.py b/lib/ansible/modules/cloud/google/gcp_dns_managed_zone.py
index e75e79df1f..91b0d15544 100644
--- a/lib/ansible/modules/cloud/google/gcp_dns_managed_zone.py
+++ b/lib/ansible/modules/cloud/google/gcp_dns_managed_zone.py
@@ -71,7 +71,7 @@ options:
       non_existence:
         description:
         - Specifies the mechanism used to provide authenticated denial-of-existence
-          responses. Output only while state is not OFF. .
+          responses.
         - 'Some valid choices include: "nsec", "nsec3"'
         required: false
       state:
@@ -82,7 +82,8 @@ options:
       default_key_specs:
         description:
         - Specifies parameters that will be used for generating initial DnsKeys for
-          this ManagedZone. Output only while state is not OFF .
+          this ManagedZone. If you provide a spec for keySigning or zoneSigning, you
+          must also provide one for the other.
         required: false
         suboptions:
           algorithm:
@@ -196,7 +197,7 @@ dnssecConfig:
     nonExistence:
       description:
       - Specifies the mechanism used to provide authenticated denial-of-existence
-        responses. Output only while state is not OFF. .
+        responses.
       returned: success
       type: str
     state:
@@ -207,7 +208,8 @@ dnssecConfig:
     defaultKeySpecs:
       description:
       - Specifies parameters that will be used for generating initial DnsKeys for
-        this ManagedZone. Output only while state is not OFF .
+        this ManagedZone. If you provide a spec for keySigning or zoneSigning, you
+        must also provide one for the other.
       returned: success
       type: complex
       contains:
diff --git a/lib/ansible/modules/cloud/google/gcp_dns_managed_zone_facts.py b/lib/ansible/modules/cloud/google/gcp_dns_managed_zone_facts.py
index 1952058c0e..7d78a4e7d5 100644
--- a/lib/ansible/modules/cloud/google/gcp_dns_managed_zone_facts.py
+++ b/lib/ansible/modules/cloud/google/gcp_dns_managed_zone_facts.py
@@ -87,7 +87,7 @@ resources:
         nonExistence:
           description:
           - Specifies the mechanism used to provide authenticated denial-of-existence
-            responses. Output only while state is not OFF. .
+            responses.
           returned: success
           type: str
         state:
@@ -98,7 +98,8 @@ resources:
         defaultKeySpecs:
           description:
           - Specifies parameters that will be used for generating initial DnsKeys
-            for this ManagedZone. Output only while state is not OFF .
+            for this ManagedZone. If you provide a spec for keySigning or zoneSigning,
+            you must also provide one for the other.
           returned: success
           type: complex
           contains:
diff --git a/lib/ansible/modules/cloud/google/gcp_pubsub_subscription.py b/lib/ansible/modules/cloud/google/gcp_pubsub_subscription.py
index 31d7df549d..392ee15a79 100644
--- a/lib/ansible/modules/cloud/google/gcp_pubsub_subscription.py
+++ b/lib/ansible/modules/cloud/google/gcp_pubsub_subscription.py
@@ -484,7 +484,7 @@ def decode_request(response, module):
 
 
 def encode_request(request, module):
-    request['topic'] = '/'.join(['projects', module.params['project'], 'topics', request['topic']])
+    request['topic'] = '/'.join(['projects', module.params['project'], 'topics', replace_resource_dict(request['topic'], 'name')])
     request['name'] = '/'.join(['projects', module.params['project'], 'subscriptions', module.params['name']])
 
     return request
