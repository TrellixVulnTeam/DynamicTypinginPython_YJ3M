commit 4fdc02285390f69c1e15a9e28cf483a8d4c5d68a
Author: The Magician <magic-modules@google.com>
Date:   Mon Nov 25 16:19:56 2019 -0800

    Bug fixes for GCP modules (#64824)

diff --git a/lib/ansible/modules/cloud/google/gcp_compute_network.py b/lib/ansible/modules/cloud/google/gcp_compute_network.py
index 0cdb633f2b..cb338902b7 100644
--- a/lib/ansible/modules/cloud/google/gcp_compute_network.py
+++ b/lib/ansible/modules/cloud/google/gcp_compute_network.py
@@ -54,17 +54,6 @@ options:
       modify this field.
     required: false
     type: str
-  ipv4_range:
-    description:
-    - If this field is specified, a deprecated legacy network is created.
-    - You will no longer be able to create a legacy network on Feb 1, 2020.
-    - See the [legacy network docs](U(https://cloud.google.com/vpc/docs/legacy)) for
-      more details.
-    - The range of internal addresses that are legal on this legacy network.
-    - 'This range is a CIDR specification, for example: `192.168.0.0/16`.'
-    - The resource must be recreated to modify this field.
-    required: false
-    type: str
   name:
     description:
     - Name of the resource. Provided by the client when the resource is created. The
@@ -183,17 +172,6 @@ id:
   - The unique identifier for the resource.
   returned: success
   type: int
-ipv4_range:
-  description:
-  - If this field is specified, a deprecated legacy network is created.
-  - You will no longer be able to create a legacy network on Feb 1, 2020.
-  - See the [legacy network docs](U(https://cloud.google.com/vpc/docs/legacy)) for
-    more details.
-  - The range of internal addresses that are legal on this legacy network.
-  - 'This range is a CIDR specification, for example: `192.168.0.0/16`.'
-  - The resource must be recreated to modify this field.
-  returned: success
-  type: str
 name:
   description:
   - Name of the resource. Provided by the client when the resource is created. The
@@ -260,12 +238,10 @@ def main():
         argument_spec=dict(
             state=dict(default='present', choices=['present', 'absent'], type='str'),
             description=dict(type='str'),
-            ipv4_range=dict(type='str'),
             name=dict(required=True, type='str'),
             auto_create_subnetworks=dict(type='bool'),
             routing_config=dict(type='dict', options=dict(routing_mode=dict(required=True, type='str'))),
-        ),
-        mutually_exclusive=[['auto_create_subnetworks', 'ipv4_range']],
+        )
     )
 
     if not module.params['scopes']:
@@ -331,7 +307,6 @@ def resource_to_request(module):
     request = {
         u'kind': 'compute#network',
         u'description': module.params.get('description'),
-        u'IPv4Range': module.params.get('ipv4_range'),
         u'name': module.params.get('name'),
         u'autoCreateSubnetworks': module.params.get('auto_create_subnetworks'),
         u'routingConfig': NetworkRoutingconfig(module.params.get('routing_config', {}), module).to_request(),
@@ -403,7 +378,6 @@ def response_to_hash(module, response):
         u'description': module.params.get('description'),
         u'gatewayIPv4': response.get(u'gatewayIPv4'),
         u'id': response.get(u'id'),
-        u'IPv4Range': module.params.get('ipv4_range'),
         u'name': module.params.get('name'),
         u'subnetworks': response.get(u'subnetworks'),
         u'autoCreateSubnetworks': module.params.get('auto_create_subnetworks'),
diff --git a/lib/ansible/modules/cloud/google/gcp_compute_network_info.py b/lib/ansible/modules/cloud/google/gcp_compute_network_info.py
index 8c20b345d7..5de6884745 100644
--- a/lib/ansible/modules/cloud/google/gcp_compute_network_info.py
+++ b/lib/ansible/modules/cloud/google/gcp_compute_network_info.py
@@ -129,17 +129,6 @@ resources:
       - The unique identifier for the resource.
       returned: success
       type: int
-    ipv4_range:
-      description:
-      - If this field is specified, a deprecated legacy network is created.
-      - You will no longer be able to create a legacy network on Feb 1, 2020.
-      - See the [legacy network docs](U(https://cloud.google.com/vpc/docs/legacy))
-        for more details.
-      - The range of internal addresses that are legal on this legacy network.
-      - 'This range is a CIDR specification, for example: `192.168.0.0/16`.'
-      - The resource must be recreated to modify this field.
-      returned: success
-      type: str
     name:
       description:
       - Name of the resource. Provided by the client when the resource is created.
diff --git a/lib/ansible/modules/cloud/google/gcp_compute_route.py b/lib/ansible/modules/cloud/google/gcp_compute_route.py
index fbe8fda5ed..8fb774c069 100644
--- a/lib/ansible/modules/cloud/google/gcp_compute_route.py
+++ b/lib/ansible/modules/cloud/google/gcp_compute_route.py
@@ -46,7 +46,7 @@ description:
   gateway. Packets that do not match any route in the sending virtual machine's routing
   table will be dropped.
 - A Route resource must have exactly one specification of either nextHopGateway, nextHopInstance,
-  nextHopIp, or nextHopVpnTunnel.
+  nextHopIp, nextHopVpnTunnel, or nextHopIlb.
 short_description: Creates a GCP Route
 version_added: '2.6'
 author: Google Inc. (@googlecloudplatform)
diff --git a/lib/ansible/modules/cloud/google/gcp_compute_router.py b/lib/ansible/modules/cloud/google/gcp_compute_router.py
index a42f623bd5..bef8993fcd 100644
--- a/lib/ansible/modules/cloud/google/gcp_compute_router.py
+++ b/lib/ansible/modules/cloud/google/gcp_compute_router.py
@@ -116,7 +116,7 @@ options:
           range:
             description:
             - The IP range to advertise. The value must be a CIDR-formatted string.
-            required: false
+            required: true
             type: str
           description:
             description:
@@ -322,7 +322,7 @@ def main():
                     asn=dict(required=True, type='int'),
                     advertise_mode=dict(default='DEFAULT', type='str'),
                     advertised_groups=dict(type='list', elements='str'),
-                    advertised_ip_ranges=dict(type='list', elements='dict', options=dict(range=dict(type='str'), description=dict(type='str'))),
+                    advertised_ip_ranges=dict(type='list', elements='dict', options=dict(range=dict(required=True, type='str'), description=dict(type='str'))),
                 ),
             ),
             region=dict(required=True, type='str'),
