commit 4e058a77ad9ec970f1a0ae27284a89f7ea7b7912
Author: Dag Wieers <dag@wieers.com>
Date:   Wed Feb 27 17:14:58 2019 +0100

    MSO: Clean up argspec (#53067)
    
    This PR includes:
    - Removing aliases (these are now modules in 2.8)
    - Cleaning up argspec

diff --git a/lib/ansible/modules/network/aci/mso_label.py b/lib/ansible/modules/network/aci/mso_label.py
index da6266df8f..842294ec38 100644
--- a/lib/ansible/modules/network/aci/mso_label.py
+++ b/lib/ansible/modules/network/aci/mso_label.py
@@ -31,7 +31,7 @@ options:
     - Alternative to the name, you can use C(label_id).
     type: str
     required: yes
-    aliases: [ label_name, name ]
+    aliases: [ name ]
   type:
     description:
     - The type of the label.
@@ -98,8 +98,8 @@ from ansible.module_utils.network.aci.mso import MSOModule, mso_argument_spec, i
 def main():
     argument_spec = mso_argument_spec()
     argument_spec.update(
-        label=dict(type='str', required=False, aliases=['name', 'label_name']),
-        label_id=dict(type='str', required=False),
+        label=dict(type='str', aliases=['name']),
+        label_id=dict(type='str'),
         type=dict(type='str', default='site', choices=['site']),
         state=dict(type='str', default='present', choices=['absent', 'present', 'query']),
     )
diff --git a/lib/ansible/modules/network/aci/mso_role.py b/lib/ansible/modules/network/aci/mso_role.py
index 0d37e867a5..d7a1ebac26 100644
--- a/lib/ansible/modules/network/aci/mso_role.py
+++ b/lib/ansible/modules/network/aci/mso_role.py
@@ -31,7 +31,7 @@ options:
     - Alternative to the name, you can use C(role_id).
     type: str
     required: yes
-    aliases: [ name, role_name ]
+    aliases: [ name ]
   display_name:
     description:
     - The name of the role to be displayed in the web UI.
@@ -131,8 +131,8 @@ from ansible.module_utils.network.aci.mso import MSOModule, mso_argument_spec, i
 def main():
     argument_spec = mso_argument_spec()
     argument_spec.update(
-        role=dict(type='str', required=False, aliases=['name', 'role_name']),
-        role_id=dict(type='str', required=False),
+        role=dict(type='str', aliases=['name']),
+        role_id=dict(type='str'),
         display_name=dict(type='str'),
         description=dict(type='str'),
         permissions=dict(type='list', choices=[
diff --git a/lib/ansible/modules/network/aci/mso_schema.py b/lib/ansible/modules/network/aci/mso_schema.py
index ba2afe8ada..9c12fe3918 100644
--- a/lib/ansible/modules/network/aci/mso_schema.py
+++ b/lib/ansible/modules/network/aci/mso_schema.py
@@ -31,7 +31,7 @@ options:
     - The name of the schema.
     type: str
     required: yes
-    aliases: [ name, schema_name ]
+    aliases: [ name ]
   templates:
     description:
     - A list of templates for this schema.
@@ -116,8 +116,8 @@ from ansible.module_utils.network.aci.mso import MSOModule, mso_argument_spec, i
 def main():
     argument_spec = mso_argument_spec()
     argument_spec.update(
-        schema=dict(type='str', required=False, aliases=['name', 'schema_name']),
-        schema_id=dict(type='str', required=False),
+        schema=dict(type='str', aliases=['name']),
+        schema_id=dict(type='str'),
         templates=dict(type='list'),
         sites=dict(type='list'),
         # messages=dict(type='dict'),
diff --git a/lib/ansible/modules/network/aci/mso_schema_site.py b/lib/ansible/modules/network/aci/mso_schema_site.py
index 1c5e2859f6..cfae219ded 100644
--- a/lib/ansible/modules/network/aci/mso_schema_site.py
+++ b/lib/ansible/modules/network/aci/mso_schema_site.py
@@ -108,8 +108,8 @@ def main():
     argument_spec = mso_argument_spec()
     argument_spec.update(
         schema=dict(type='str', required=True),
-        site=dict(type='str', required=False, aliases=['name']),
-        template=dict(type='str', required=False),
+        site=dict(type='str', aliases=['name']),
+        template=dict(type='str'),
         state=dict(type='str', default='present', choices=['absent', 'present', 'query']),
     )
 
diff --git a/lib/ansible/modules/network/aci/mso_schema_template.py b/lib/ansible/modules/network/aci/mso_schema_template.py
index 3f337102ca..b6361a3846 100644
--- a/lib/ansible/modules/network/aci/mso_schema_template.py
+++ b/lib/ansible/modules/network/aci/mso_schema_template.py
@@ -114,7 +114,7 @@ def main():
     argument_spec.update(
         tenant=dict(type='str', required=True),
         schema=dict(type='str', required=True),
-        template=dict(type='str', required=False, aliases=['name']),
+        template=dict(type='str', aliases=['name']),
         display_name=dict(type='str'),
         state=dict(type='str', default='present', choices=['absent', 'present', 'query']),
     )
diff --git a/lib/ansible/modules/network/aci/mso_schema_template_anp.py b/lib/ansible/modules/network/aci/mso_schema_template_anp.py
index ff5ddc532a..579232c8cb 100644
--- a/lib/ansible/modules/network/aci/mso_schema_template_anp.py
+++ b/lib/ansible/modules/network/aci/mso_schema_template_anp.py
@@ -111,7 +111,7 @@ def main():
     argument_spec.update(
         schema=dict(type='str', required=True),
         template=dict(type='str', required=True),
-        anp=dict(type='str', required=False, aliases=['name']),  # This parameter is not required for querying all objects
+        anp=dict(type='str', aliases=['name']),  # This parameter is not required for querying all objects
         display_name=dict(type='str'),
         state=dict(type='str', default='present', choices=['absent', 'present', 'query']),
     )
diff --git a/lib/ansible/modules/network/aci/mso_schema_template_anp_epg.py b/lib/ansible/modules/network/aci/mso_schema_template_anp_epg.py
index 112f04225c..80ff883ee6 100644
--- a/lib/ansible/modules/network/aci/mso_schema_template_anp_epg.py
+++ b/lib/ansible/modules/network/aci/mso_schema_template_anp_epg.py
@@ -193,7 +193,7 @@ def main():
         schema=dict(type='str', required=True),
         template=dict(type='str', required=True),
         anp=dict(type='str', required=True),
-        epg=dict(type='str', required=False, aliases=['name']),  # This parameter is not required for querying all objects
+        epg=dict(type='str', aliases=['name']),  # This parameter is not required for querying all objects
         bd=dict(type='dict', options=mso_reference_spec()),
         display_name=dict(type='str'),
         useg_epg=dict(type='bool'),
diff --git a/lib/ansible/modules/network/aci/mso_schema_template_bd.py b/lib/ansible/modules/network/aci/mso_schema_template_bd.py
index ef72b1eb06..345f9df287 100644
--- a/lib/ansible/modules/network/aci/mso_schema_template_bd.py
+++ b/lib/ansible/modules/network/aci/mso_schema_template_bd.py
@@ -161,7 +161,7 @@ def main():
     argument_spec.update(
         schema=dict(type='str', required=True),
         template=dict(type='str', required=True),
-        bd=dict(type='str', required=False, aliases=['name']),  # This parameter is not required for querying all objects
+        bd=dict(type='str', aliases=['name']),  # This parameter is not required for querying all objects
         display_name=dict(type='str'),
         intersite_bum_traffic=dict(type='bool'),
         optimize_wan_bandwidth=dict(type='bool'),
diff --git a/lib/ansible/modules/network/aci/mso_schema_template_contract_filter.py b/lib/ansible/modules/network/aci/mso_schema_template_contract_filter.py
index af8434c049..3818479cc7 100644
--- a/lib/ansible/modules/network/aci/mso_schema_template_contract_filter.py
+++ b/lib/ansible/modules/network/aci/mso_schema_template_contract_filter.py
@@ -162,7 +162,7 @@ def main():
         contract_display_name=dict(type='str'),
         contract_scope=dict(type='str', choices=['application-profile', 'global', 'tenant', 'vrf']),
         contract_filter_type=dict(type='str', choices=['both-way', 'one-way']),
-        filter=dict(type='str', required=False, aliases=['name']),  # This parameter is not required for querying all objects
+        filter=dict(type='str', aliases=['name']),  # This parameter is not required for querying all objects
         filter_template=dict(type='str'),
         filter_schema=dict(type='str'),
         filter_type=dict(type='str', default='both-way', choices=FILTER_KEYS.keys(), aliases=['type']),
diff --git a/lib/ansible/modules/network/aci/mso_schema_template_externalepg.py b/lib/ansible/modules/network/aci/mso_schema_template_externalepg.py
index fed687c9c0..6beef7ba52 100644
--- a/lib/ansible/modules/network/aci/mso_schema_template_externalepg.py
+++ b/lib/ansible/modules/network/aci/mso_schema_template_externalepg.py
@@ -113,7 +113,7 @@ def main():
     argument_spec.update(
         schema=dict(type='str', required=True),
         template=dict(type='str', required=True),
-        externalepg=dict(type='str', required=False, aliases=['name']),  # This parameter is not required for querying all objects
+        externalepg=dict(type='str', aliases=['name']),  # This parameter is not required for querying all objects
         display_name=dict(type='str'),
         vrf=dict(type='dict', options=mso_reference_spec()),
         state=dict(type='str', default='present', choices=['absent', 'present', 'query']),
diff --git a/lib/ansible/modules/network/aci/mso_schema_template_filter_entry.py b/lib/ansible/modules/network/aci/mso_schema_template_filter_entry.py
index 3b527c082e..17857395fe 100644
--- a/lib/ansible/modules/network/aci/mso_schema_template_filter_entry.py
+++ b/lib/ansible/modules/network/aci/mso_schema_template_filter_entry.py
@@ -175,8 +175,8 @@ def main():
         schema=dict(type='str', required=True),
         template=dict(type='str', required=True),
         filter=dict(type='str', required=True),
-        filter_display_name=dict(type='str', aliases=['filter_display_name']),
-        entry=dict(type='str', required=False, aliases=['name']),  # This parameter is not required for querying all objects
+        filter_display_name=dict(type='str'),
+        entry=dict(type='str', aliases=['name']),  # This parameter is not required for querying all objects
         description=dict(type='str', aliases=['entry_description']),
         display_name=dict(type='str', aliases=['entry_display_name']),
         ethertype=dict(type='str', choices=['arp', 'fcoe', 'ip', 'ipv4', 'ipv6', 'mac-security', 'mpls-unicast', 'trill', 'unspecified']),
diff --git a/lib/ansible/modules/network/aci/mso_schema_template_l3out.py b/lib/ansible/modules/network/aci/mso_schema_template_l3out.py
index 0feada6257..b0cd6388c3 100644
--- a/lib/ansible/modules/network/aci/mso_schema_template_l3out.py
+++ b/lib/ansible/modules/network/aci/mso_schema_template_l3out.py
@@ -113,7 +113,7 @@ def main():
     argument_spec.update(
         schema=dict(type='str', required=True),
         template=dict(type='str', required=True),
-        l3out=dict(type='str', required=False, aliases=['name']),  # This parameter is not required for querying all objects
+        l3out=dict(type='str', aliases=['name']),  # This parameter is not required for querying all objects
         display_name=dict(type='str'),
         vrf=dict(type='dict', options=mso_reference_spec()),
         state=dict(type='str', default='present', choices=['absent', 'present', 'query']),
diff --git a/lib/ansible/modules/network/aci/mso_schema_template_vrf.py b/lib/ansible/modules/network/aci/mso_schema_template_vrf.py
index 4b876f2775..3d4623c64c 100644
--- a/lib/ansible/modules/network/aci/mso_schema_template_vrf.py
+++ b/lib/ansible/modules/network/aci/mso_schema_template_vrf.py
@@ -113,7 +113,7 @@ def main():
     argument_spec.update(
         schema=dict(type='str', required=True),
         template=dict(type='str', required=True),
-        vrf=dict(type='str', required=False, aliases=['name']),  # This parameter is not required for querying all objects
+        vrf=dict(type='str', aliases=['name']),  # This parameter is not required for querying all objects
         display_name=dict(type='str'),
         layer3_multicast=dict(type='bool'),
         state=dict(type='str', default='present', choices=['absent', 'present', 'query']),
diff --git a/lib/ansible/modules/network/aci/mso_site.py b/lib/ansible/modules/network/aci/mso_site.py
index fbc56f9f5a..b1f4c4eda5 100644
--- a/lib/ansible/modules/network/aci/mso_site.py
+++ b/lib/ansible/modules/network/aci/mso_site.py
@@ -47,7 +47,7 @@ options:
     - Alternative to the name, you can use C(site_id).
     type: str
     required: yes
-    aliases: [ name, site_name ]
+    aliases: [ name ]
   labels:
     description:
     - The labels for this site.
@@ -153,8 +153,8 @@ def main():
         apic_username=dict(type='str', default='admin'),
         labels=dict(type='list'),
         location=dict(type='dict', options=location_arg_spec),
-        site=dict(type='str', required=False, aliases=['name', 'site_name']),
-        site_id=dict(type='str', required=False),
+        site=dict(type='str', aliases=['name']),
+        site_id=dict(type='str'),
         state=dict(type='str', default='present', choices=['absent', 'present', 'query']),
         urls=dict(type='list'),
     )
diff --git a/lib/ansible/modules/network/aci/mso_tenant.py b/lib/ansible/modules/network/aci/mso_tenant.py
index de2625682a..02b1f07483 100644
--- a/lib/ansible/modules/network/aci/mso_tenant.py
+++ b/lib/ansible/modules/network/aci/mso_tenant.py
@@ -31,7 +31,7 @@ options:
     - Alternative to the name, you can use C(tenant_id).
     type: str
     required: yes
-    aliases: [ name, tenant_name ]
+    aliases: [ name ]
   display_name:
     description:
     - The name of the tenant to be displayed in the web UI.
@@ -115,8 +115,8 @@ def main():
     argument_spec.update(
         description=dict(type='str'),
         display_name=dict(type='str'),
-        tenant=dict(type='str', required=False, aliases=['name', 'tenant_name']),
-        tenant_id=dict(type='str', required=False),
+        tenant=dict(type='str', aliases=['name']),
+        tenant_id=dict(type='str'),
         users=dict(type='list'),
         sites=dict(type='list'),
         state=dict(type='str', default='present', choices=['absent', 'present', 'query']),
diff --git a/lib/ansible/modules/network/aci/mso_user.py b/lib/ansible/modules/network/aci/mso_user.py
index 7fe915d4a7..56fc708c6a 100644
--- a/lib/ansible/modules/network/aci/mso_user.py
+++ b/lib/ansible/modules/network/aci/mso_user.py
@@ -31,7 +31,7 @@ options:
     - Alternative to the name, you can use C(user_id).
     type: str
     required: yes
-    aliases: [ name, user_name ]
+    aliases: [ name ]
   user_password:
     description:
     - The password of the user.
@@ -146,8 +146,8 @@ from ansible.module_utils.network.aci.mso import MSOModule, mso_argument_spec, i
 def main():
     argument_spec = mso_argument_spec()
     argument_spec.update(
-        user_id=dict(type='str', required=False),
-        user=dict(type='str', required=False, aliases=['name', 'user_name']),
+        user_id=dict(type='str'),
+        user=dict(type='str', aliases=['name']),
         user_password=dict(type='str', no_log=True),
         first_name=dict(type='str'),
         last_name=dict(type='str'),
@@ -164,8 +164,8 @@ def main():
         argument_spec=argument_spec,
         supports_check_mode=True,
         required_if=[
-            ['state', 'absent', ['user_name']],
-            ['state', 'present', ['user_name']],
+            ['state', 'absent', ['user']],
+            ['state', 'present', ['user']],
         ],
     )
 
