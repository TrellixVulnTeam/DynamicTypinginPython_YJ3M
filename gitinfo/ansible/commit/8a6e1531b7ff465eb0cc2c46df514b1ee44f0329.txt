commit 8a6e1531b7ff465eb0cc2c46df514b1ee44f0329
Author: Ganesh Nalawade <ganesh634@gmail.com>
Date:   Wed Aug 16 20:25:39 2017 +0530

    Fix config timeout issue for network modules (#28261)
    
    * Fix config timeout issue for network modules
    
    * Re-enable network test
    
    * Remove unwanted persistent connection timer
    
    * Minor changes in description

diff --git a/lib/ansible/config/base.yml b/lib/ansible/config/base.yml
index 89282c799f..4db0e1c256 100644
--- a/lib/ansible/config/base.yml
+++ b/lib/ansible/config/base.yml
@@ -1279,14 +1279,6 @@ PARAMIKO_RECORD_HOST_KEYS:
   - {key: record_host_keys, section: paramiko_connection}
   type: boolean
   yaml: {key: paramiko_connection.record_host_keys}
-PERSISTENT_CONNECT_INTERVAL:
-  default: 1
-  description: 'TODO: write it'
-  env: [{name: ANSIBLE_PERSISTENT_CONNECT_INTERVAL}]
-  ini:
-  - {key: connect_interval, section: persistent_connection}
-  type: integer
-  yaml: {key: persistent_connection.connect_interval}
 PERSISTENT_CONTROL_PATH_DIR:
   default: ~/.ansible/pc
   description: 'TODO: write it'
@@ -1294,17 +1286,9 @@ PERSISTENT_CONTROL_PATH_DIR:
   ini:
   - {key: control_path_dir, section: persistent_connection}
   yaml: {key: persistent_connection.control_path_dir}
-PERSISTENT_CONNECT_RETRIES:
-  default: 30
-  description: 'TODO: write it'
-  env: [{name: ANSIBLE_PERSISTENT_CONNECT_RETRIES}]
-  ini:
-  - {key: connect_retries, section: persistent_connection}
-  type: integer
-  yaml: {key: persistent_connection.connect_retries}
 PERSISTENT_CONNECT_TIMEOUT:
   default: 30
-  description: 'TODO: write it'
+  description: This controls how long the persistent connection will remain idle before it is destroyed.
   env: [{name: ANSIBLE_PERSISTENT_CONNECT_TIMEOUT}]
   ini:
   - {key: connect_timeout, section: persistent_connection}
@@ -1312,21 +1296,19 @@ PERSISTENT_CONNECT_TIMEOUT:
   yaml: {key: persistent_connection.connect_timeout}
 PERSISTENT_CONNECT_RETRY_TIMEOUT:
   default: 15
-  desc: 'TODO: write it'
+  description: This contorls the retry timeout for presistent connection to connect to the local domain socket.
   env: [{name: ANSIBLE_PERSISTENT_CONNECT_RETRY_TIMEOUT}]
   ini:
   - {key: connect_retry_timeout, section: persistent_connection}
-  value_type: integer
-  vars: []
+  type: integer
   yaml: {key: persistent_connection.connect_retry_timeout}
 PERSISTENT_COMMAND_TIMEOUT:
   default: 10
-  desc: 'TODO: write it'
+  description: This controls the amount of time to wait for response from remote device before timing out presistent connection.
   env: [{name: ANSIBLE_PERSISTENT_COMMAND_TIMEOUT}]
   ini:
   - {key: command_timeout, section: persistent_connection}
-  value_type: integer
-  vars: []
+  type: integer
   yaml: {key: persistent_connection.command_timeout}
 RETRY_FILES_ENABLED:
   default: True
diff --git a/lib/ansible/playbook/play_context.py b/lib/ansible/playbook/play_context.py
index f86709f202..1f654bd617 100644
--- a/lib/ansible/playbook/play_context.py
+++ b/lib/ansible/playbook/play_context.py
@@ -340,7 +340,7 @@ class PlayContext(Base):
         #  general flags (should we move out?)
         # for flag in ('connection', 'remote_user', 'private_key_file', 'verbosity', 'force_handlers', 'step', 'start_at_task', 'diff'):
         #  should only be 'non plugin' flags
-        for flag in ('connection', 'private_key_file', 'verbosity', 'force_handlers', 'step', 'start_at_task', 'diff'):
+        for flag in ('connection', 'remote_user', 'private_key_file', 'verbosity', 'force_handlers', 'step', 'start_at_task', 'diff'):
             attribute = getattr(options, flag, False)
             if attribute:
                 setattr(self, flag, attribute)
diff --git a/shippable.yml b/shippable.yml
index cb9fdcf7d6..58531132cf 100644
--- a/shippable.yml
+++ b/shippable.yml
@@ -24,6 +24,8 @@ matrix:
 
     - env: TEST=windows
 
+    - env: TEST=network
+
     - env: TEST=linux/centos6/1
     - env: TEST=linux/centos7/1
     - env: TEST=linux/fedora24/1
