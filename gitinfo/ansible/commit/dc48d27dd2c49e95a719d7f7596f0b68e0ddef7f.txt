commit dc48d27dd2c49e95a719d7f7596f0b68e0ddef7f
Author: Dag Wieers <dag@wieers.com>
Date:   Wed Feb 3 19:11:55 2016 +0100

    Defined JSON booleans in global context for python eval()
    
    We define 'false' and 'true' as variables so that python eval() recognizes them as False and True.
    
    This fixes #14291.

diff --git a/lib/ansible/template/safe_eval.py b/lib/ansible/template/safe_eval.py
index ffb48611e2..174724c7ba 100644
--- a/lib/ansible/template/safe_eval.py
+++ b/lib/ansible/template/safe_eval.py
@@ -41,6 +41,13 @@ def safe_eval(expr, locals={}, include_exceptions=False):
     http://stackoverflow.com/questions/12523516/using-ast-and-whitelists-to-make-pythons-eval-safe
     '''
 
+    # define certain JSON types
+    # eg. JSON booleans are unknown to python eval()
+    JSON_TYPES = {
+        'false': False,
+        'true': True,
+    }
+
     # this is the whitelist of AST nodes we are going to
     # allow in the evaluation. Any node type other than
     # those listed here will raise an exception in our custom
@@ -116,7 +123,7 @@ def safe_eval(expr, locals={}, include_exceptions=False):
         parsed_tree = ast.parse(expr, mode='eval')
         cnv.visit(parsed_tree)
         compiled = compile(parsed_tree, expr, 'eval')
-        result = eval(compiled, {}, dict(locals))
+        result = eval(compiled, JSON_TYPES, dict(locals))
 
         if include_exceptions:
             return (result, None)
