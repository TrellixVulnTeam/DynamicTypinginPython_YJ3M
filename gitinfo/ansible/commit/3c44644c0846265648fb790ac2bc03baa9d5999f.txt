commit 3c44644c0846265648fb790ac2bc03baa9d5999f
Author: Dave Kasberg <dkasberg@lenovo.com>
Date:   Thu Mar 2 08:11:37 2017 -0800

    New module: cnos_vlag (#21535)
    
    * VLAG module and tests
    
    * Correct the link in the description of the module
    
    * Move roles to integration/roles directory and remove aliases file.
    
    * update module short description
    
    * Change module directory name to Lenovo
    
    * change import cnos statement

diff --git a/lib/ansible/modules/network/lenovo/cnos_vlag.py b/lib/ansible/modules/network/lenovo/cnos_vlag.py
new file mode 100644
index 0000000000..fa019da6fd
--- /dev/null
+++ b/lib/ansible/modules/network/lenovo/cnos_vlag.py
@@ -0,0 +1,347 @@
+#!/usr/bin/python
+# -*- coding: utf-8 -*-
+#
+# Copyright (C) 2017 Lenovo, Inc.
+#
+# This file is part of Ansible
+#
+# Ansible is free software: you can redistribute it and/or modify
+# it under the terms of the GNU General Public License as published by
+# the Free Software Foundation, either version 3 of the License, or
+# (at your option) any later version.
+#
+# Ansible is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+# GNU General Public License for more details.
+#
+# You should have received a copy of the GNU General Public License
+# along with Ansible.  If not, see <http://www.gnu.org/licenses/>.
+#
+# Module to send VLAG commands to Lenovo Switches
+# Lenovo Networking
+#
+
+ANSIBLE_METADATA = {'status': ['preview'],
+                    'supported_by': 'community',
+                    'version': '1.0'}
+
+DOCUMENTATION = '''
+---
+module: cnos_vlag
+short_description: Manage VLAG resources and attributes on devices running Lenovo CNOS
+description:
+    - This module allows you to work with virtual Link Aggregation Groups
+     (vLAG) related configurations. The operators used are overloaded to ensure
+     control over switch vLAG configurations. Apart from the regular device
+     connection related attributes, there are four vLAG arguments which are
+     overloaded variables that will perform further configurations. They are
+     vlagArg1, vlagArg2, vlagArg3, and vlagArg4. For more details on how to use
+     these arguments, see [Overloaded Variables].
+     This module uses SSH to manage network device configuration.
+     The results of the operation will be placed in a directory named 'results'
+     that must be created by the user in their local directory to where the playbook is run.
+     For more information about this module from Lenovo and customizing it usage for your
+     use cases, please visit our [User Guide](http://systemx.lenovofiles.com/help/index.jsp?topic=%2Fcom.lenovo.switchmgt.ansible.doc%2Fcnos_vlag.html)
+version_added: "2.3"
+extends_documentation_fragment: cnos
+options:
+  vlagArg1:
+    description:
+      - This is an overloaded vlag first argument. Usage of this argument can be found is the User Guide referenced above.
+    required: Yes
+    default: Null
+    choices: [enable, auto-recovery,config-consistency,isl,mac-address-table,peer-gateway,priority,startup-delay,tier-id,vrrp,instance,hlthchk]
+  vlagArg2:
+    description:
+      - This is an overloaded vlag second argument. Usage of this argument can be found is the User Guide referenced above.
+    required: No
+    default: Null
+    choices: [Interval in seconds,disable or strict,Port Aggregation Number,VLAG priority,Delay time in seconds,VLAG tier-id value,
+        VLAG instance number,keepalive-attempts,keepalive-interval,retry-interval,peer-ip]
+  vlagArg3:
+    description:
+      - This is an overloaded vlag third argument. Usage of this argument can be found is the User Guide referenced above.
+    required: No
+    default: Null
+    choices: [enable or port-aggregation,Number of keepalive attempts,Interval in seconds,Interval in seconds,VLAG health check peer IP4 address]
+  vlagArg4:
+    description:
+      - This is an overloaded vlag fourth argument. Usage of this argument can be found is the User Guide referenced above.
+    required: No
+    default: Null
+    choices: [Port Aggregation Number,default or management]
+
+'''
+EXAMPLES = '''
+
+Tasks : The following are examples of using the module cnos_vlag. These are written in the main.yml file of the tasks directory.
+---
+- name: Test Vlag  - enable
+  cnos_vlag:
+      host: "{{ inventory_hostname }}"
+      username: "{{ hostvars[inventory_hostname]['username']}}"
+      password: "{{ hostvars[inventory_hostname]['password']}}"
+      deviceType: "{{ hostvars[inventory_hostname]['deviceType']}}"
+      outputfile: "./results/cnos_vlag_{{ inventory_hostname }}_output.txt"
+      vlagArg1: "enable"
+
+- name: Test Vlag - autorecovery
+  cnos_vlag:
+      host: "{{ inventory_hostname }}"
+      username: "{{ hostvars[inventory_hostname]['username']}}"
+      password: "{{ hostvars[inventory_hostname]['password']}}"
+      deviceType: "{{ hostvars[inventory_hostname]['deviceType']}}"
+      outputfile: "./results/cnos_vlag_{{ inventory_hostname }}_output.txt"
+      vlagArg1: "auto-recovery"
+      vlagArg2: 266
+
+- name: Test Vlag - config-consistency
+  cnos_vlag:
+      host: "{{ inventory_hostname }}"
+      username: "{{ hostvars[inventory_hostname]['username']}}"
+      password: "{{ hostvars[inventory_hostname]['password']}}"
+      deviceType: "{{ hostvars[inventory_hostname]['deviceType']}}"
+      outputfile: "./results/cnos_vlag_{{ inventory_hostname }}_output.txt"
+      vlagArg1: "config-consistency"
+      vlagArg2: "strict"
+
+- name: Test Vlag - isl
+  cnos_vlag:
+      host: "{{ inventory_hostname }}"
+      username: "{{ hostvars[inventory_hostname]['username']}}"
+      password: "{{ hostvars[inventory_hostname]['password']}}"
+      deviceType: "{{ hostvars[inventory_hostname]['deviceType']}}"
+      outputfile: "./results/cnos_vlag_{{ inventory_hostname }}_output.txt"
+      vlagArg1: "isl"
+      vlagArg2: 23
+
+- name: Test Vlag  - mac-address-table
+  cnos_vlag:
+      host: "{{ inventory_hostname }}"
+      username: "{{ hostvars[inventory_hostname]['username']}}"
+      password: "{{ hostvars[inventory_hostname]['password']}}"
+      deviceType: "{{ hostvars[inventory_hostname]['deviceType']}}"
+      outputfile: "./results/cnos_vlag_{{ inventory_hostname }}_output.txt"
+      vlagArg1: "mac-address-table"
+
+- name: Test Vlag - peer-gateway
+  cnos_vlag:
+      host: "{{ inventory_hostname }}"
+      username: "{{ hostvars[inventory_hostname]['username']}}"
+      password: "{{ hostvars[inventory_hostname]['password']}}"
+      deviceType: "{{ hostvars[inventory_hostname]['deviceType']}}"
+      outputfile: "./results/cnos_vlag_{{ inventory_hostname }}_output.txt"
+      vlagArg1: "peer-gateway"
+
+- name: Test Vlag - priority
+  cnos_vlag:
+      host: "{{ inventory_hostname }}"
+      username: "{{ hostvars[inventory_hostname]['username']}}"
+      password: "{{ hostvars[inventory_hostname]['password']}}"
+      deviceType: "{{ hostvars[inventory_hostname]['deviceType']}}"
+      outputfile: "./results/cnos_vlag_{{ inventory_hostname }}_output.txt"
+      vlagArg1: "priority"
+      vlagArg2: 1313
+
+- name: Test Vlag - startup-delay
+  cnos_vlag:
+      host: "{{ inventory_hostname }}"
+      username: "{{ hostvars[inventory_hostname]['username']}}"
+      password: "{{ hostvars[inventory_hostname]['password']}}"
+      deviceType: "{{ hostvars[inventory_hostname]['deviceType']}}"
+      outputfile: "./results/cnos_vlag_{{ inventory_hostname }}_output.txt"
+      vlagArg1: "startup-delay"
+      vlagArg2: 323
+
+- name: Test Vlag  - tier-id
+  cnos_vlag:
+      host: "{{ inventory_hostname }}"
+      username: "{{ hostvars[inventory_hostname]['username']}}"
+      password: "{{ hostvars[inventory_hostname]['password']}}"
+      deviceType: "{{ hostvars[inventory_hostname]['deviceType']}}"
+      outputfile: "./results/cnos_vlag_{{ inventory_hostname }}_output.txt"
+      vlagArg1: "tier-id"
+      vlagArg2: 313
+
+- name: Test Vlag - vrrp
+  cnos_vlag:
+      host: "{{ inventory_hostname }}"
+      username: "{{ hostvars[inventory_hostname]['username']}}"
+      password: "{{ hostvars[inventory_hostname]['password']}}"
+      deviceType: "{{ hostvars[inventory_hostname]['deviceType']}}"
+      outputfile: "./results/cnos_vlag_{{ inventory_hostname }}_output.txt"
+      vlagArg1: "vrrp"
+
+- name: Test Vlag - instance
+  cnos_vlag:
+      host: "{{ inventory_hostname }}"
+      username: "{{ hostvars[inventory_hostname]['username']}}"
+      password: "{{ hostvars[inventory_hostname]['password']}}"
+      deviceType: "{{ hostvars[inventory_hostname]['deviceType']}}"
+      outputfile: "./results/cnos_vlag_{{ inventory_hostname }}_output.txt"
+      vlagArg1: "instance"
+      vlagArg2: 33
+      vlagArg3: 333
+
+- name: Test Vlag - instance2
+  cnos_vlag:
+      host: "{{ inventory_hostname }}"
+      username: "{{ hostvars[inventory_hostname]['username']}}"
+      password: "{{ hostvars[inventory_hostname]['password']}}"
+      deviceType: "{{ hostvars[inventory_hostname]['deviceType']}}"
+      outputfile: "./results/cnos_vlag_{{ inventory_hostname }}_output.txt"
+      vlagArg1: "instance"
+      vlagArg2: "33"
+
+- name: Test Vlag  - keepalive-attempts
+  cnos_vlag:
+      host: "{{ inventory_hostname }}"
+      username: "{{ hostvars[inventory_hostname]['username']}}"
+      password: "{{ hostvars[inventory_hostname]['password']}}"
+      deviceType: "{{ hostvars[inventory_hostname]['deviceType']}}"
+      outputfile: "./results/cnos_vlag_{{ inventory_hostname }}_output.txt"
+      vlagArg1: "hlthchk"
+      vlagArg2: "keepalive-attempts"
+      vlagArg3: 13
+
+- name: Test Vlag - keepalive-interval
+  cnos_vlag:
+      host: "{{ inventory_hostname }}"
+      username: "{{ hostvars[inventory_hostname]['username']}}"
+      password: "{{ hostvars[inventory_hostname]['password']}}"
+      deviceType: "{{ hostvars[inventory_hostname]['deviceType']}}"
+      outputfile: "./results/cnos_vlag_{{ inventory_hostname }}_output.txt"
+      vlagArg1: "hlthchk"
+      vlagArg2: "keepalive-interval"
+      vlagArg3: 131
+
+- name: Test Vlag - retry-interval
+  cnos_vlag:
+      host: "{{ inventory_hostname }}"
+      username: "{{ hostvars[inventory_hostname]['username']}}"
+      password: "{{ hostvars[inventory_hostname]['password']}}"
+      deviceType: "{{ hostvars[inventory_hostname]['deviceType']}}"
+      outputfile: "./results/cnos_vlag_{{ inventory_hostname }}_output.txt"
+      vlagArg1: "hlthchk"
+      vlagArg2: "retry-interval"
+      vlagArg3: 133
+
+- name: Test Vlag - peer ip
+  cnos_vlag:
+      host: "{{ inventory_hostname }}"
+      username: "{{ hostvars[inventory_hostname]['username']}}"
+      password: "{{ hostvars[inventory_hostname]['password']}}"
+      deviceType: "{{ hostvars[inventory_hostname]['deviceType']}}"
+      outputfile: "./results/cnos_vlag_{{ inventory_hostname }}_output.txt"
+      vlagArg1: "hlthchk"
+      vlagArg2: "peer-ip"
+      vlagArg3: "1.2.3.4"
+
+'''
+RETURN = '''
+return value: |
+    On successful execution, the method returns a message in JSON format
+    [vLAG configurations accomplished]
+    Upon any failure, the method returns an error display string.
+'''
+
+import sys
+import paramiko
+import time
+import argparse
+import socket
+import array
+import json
+import time
+import re
+try:
+    from ansible.module_utils import cnos
+    HAS_LIB = True
+except:
+    HAS_LIB = False
+
+from ansible.module_utils.basic import AnsibleModule
+from collections import defaultdict
+
+
+def main():
+    #
+    # Define parameters for vlag creation entry
+    #
+    module = AnsibleModule(
+        argument_spec=dict(
+            outputfile=dict(required=True),
+            host=dict(required=True),
+            username=dict(required=True),
+            password=dict(required=True, no_log=True),
+            enablePassword=dict(required=False, no_log=True),
+            deviceType=dict(required=True),
+            vlagArg1=dict(required=True),
+            vlagArg2=dict(required=False),
+            vlagArg3=dict(required=False),
+            vlagArg4=dict(required=False),),
+        supports_check_mode=False)
+
+    username = module.params['username']
+    password = module.params['password']
+    enablePassword = module.params['enablePassword']
+    outputfile = module.params['outputfile']
+    hostIP = module.params['host']
+    deviceType = module.params['deviceType']
+    vlagArg1 = module.params['vlagArg1']
+    vlagArg2 = module.params['vlagArg2']
+    vlagArg3 = module.params['vlagArg3']
+    vlagArg4 = module.params['vlagArg4']
+    output = ""
+
+    # Create instance of SSHClient object
+    remote_conn_pre = paramiko.SSHClient()
+
+    # Automatically add untrusted hosts (make sure okay for security policy in
+    # your environment)
+    remote_conn_pre.set_missing_host_key_policy(paramiko.AutoAddPolicy())
+
+    # initiate SSH connection with the switch
+    remote_conn_pre.connect(hostIP, username=username, password=password)
+    time.sleep(2)
+
+    # Use invoke_shell to establish an 'interactive session'
+    remote_conn = remote_conn_pre.invoke_shell()
+    time.sleep(2)
+
+    # Enable and enter configure terminal then send command
+    output = output + cnos.waitForDeviceResponse("\n", ">", 2, remote_conn)
+
+    output = output + \
+        cnos.enterEnableModeForDevice(enablePassword, 3, remote_conn)
+
+    # Make terminal length = 0
+    output = output + \
+        cnos.waitForDeviceResponse("terminal length 0\n", "#", 2, remote_conn)
+
+    # Go to config mode
+    output = output + \
+        cnos.waitForDeviceResponse(
+            "configure d\n", "(config)#", 2, remote_conn)
+
+    # Send the CLi command
+    output = output + cnos.vlagConfig(
+        remote_conn, deviceType, "(config)#", 2, vlagArg1, vlagArg2, vlagArg3,
+        vlagArg4)
+
+    # Save it into the file
+    file = open(outputfile, "a")
+    file.write(output)
+    file.close()
+
+    # need to add logic to check when changes occur or not
+    errorMsg = cnos.checkOutputForError(output)
+    if(errorMsg is None):
+        module.exit_json(changed=True, msg="vlag configurations accomplished")
+    else:
+        module.fail_json(msg=errorMsg)
+
+
+if __name__ == '__main__':
+    main()
diff --git a/test/integration/roles/cnos_vlag/README.md b/test/integration/roles/cnos_vlag/README.md
new file mode 100644
index 0000000000..41881f86ce
--- /dev/null
+++ b/test/integration/roles/cnos_vlag/README.md
@@ -0,0 +1,113 @@
+# Ansible Role: cnos_vlag_sample - Switch vLAG configuration
+---
+<add role description below>
+
+This role is an example of using the *cnos_vlag.py* Lenovo module in the context of CNOS switch configuration. This module allows you to work with virtual Link Aggregation Groups (vLAG) related configurations. The operators used are overloaded to ensure control over switch vLAG configurations.
+
+Apart from the regular device connection related attributes, there are four vLAG arguments which are overloaded variables that will perform further configurations. They are *vlagArg1*, *vlagArg2*, *vlagArg3*, and *vlagArg4*.
+
+The results of the operation can be viewed in *results* directory.
+
+For more details, see [Lenovo modules for Ansible: cnos_vlag](http://systemx.lenovofiles.com/help/index.jsp?topic=%2Fcom.lenovo.switchmgt.ansible.doc%2Fcnos_vlag.html&cp=0_3_1_0_4_15).
+
+
+## Requirements
+---
+<add role requirements information below>
+
+- Ansible version 2.2 or later ([Ansible installation documentation](http://docs.ansible.com/ansible/intro_installation.html))
+- Lenovo switches running CNOS version 10.2.1.0 or later
+- an SSH connection to the Lenovo switch (SSH must be enabled on the network device)
+
+
+## Role Variables
+---
+<add role variables information below>
+
+Available variables are listed below, along with description.
+
+The following are mandatory inventory variables:
+
+Variable | Description
+--- | ---
+`username` | Specifies the username used to log into the switch
+`password` | Specifies the password used to log into the switch
+`enablePassword` | Configures the password used to enter Global Configuration command mode on the switch (this is an optional parameter)
+`hostname` | Searches the hosts file at */etc/ansible/hosts* and identifies the IP address of the switch on which the role is going to be applied
+`deviceType` | Specifies the type of device from where the configuration will be backed up (**g8272_cnos** - G8272, **g8296_cnos** - G8296)
+
+The values of the variables used need to be modified to fit the specific scenario in which you are deploying the solution. To change the values of the variables, you need to visits the *vars* directory of each role and edit the *main.yml* file located there. The values stored in this file will be used by Ansible when the template is executed.
+
+The syntax of *main.yml* file for variables is the following:
+
+```
+<template variable>:<value>
+```
+
+You will need to replace the `<value>` field with the value that suits your topology. The `<template variable>` fields are taken from the template and it is recommended that you leave them unchanged.
+
+Variable | Description
+--- | ---
+`vlagArg1` | This is an overloaded BGP variable. Please refer to the [cnos_vlag module documentation](http://ralfss28.labs.lenovo.com:5555/help/topic/com.lenovo.switchmgt.ansible.doc/cnos_template.html?cp=0_3_1_0_2_10) for detailed information on usage. The values of these variables depend on the configuration context and the choices are the following: **enable**, **auto-recovery**, **config-consistency**, **isl**, **mac-address-table**, **peer-gateway**, **priority**, **startup-delay**, **tier-id**, **vrrp**, **instance**, **hlthchk**.
+`vlagArg2` | This is an overloaded BGP variable. Please refer to the [cnos_vlag module documentation](http://ralfss28.labs.lenovo.com:5555/help/topic/com.lenovo.switchmgt.ansible.doc/cnos_template.html?cp=0_3_1_0_2_10) for detailed information on usage. The values of these variables depend on the configuration context and the choices are the following: auto-recovery interval, **disabled**, **strict**, port aggregation number, vLAG priority, delay time, vLAG tier ID value, vLAG instance number, **keepalive-attempts**, **keepalive-interval**, **retry-interval**, **peer-ip**.
+`vlagArg3` | This is an overloaded BGP variable. Please refer to the [cnos_vlag module documentation](http://ralfss28.labs.lenovo.com:5555/help/topic/com.lenovo.switchmgt.ansible.doc/cnos_template.html?cp=0_3_1_0_2_10) for detailed information on usage. The values of these variables depend on the configuration context and the choices are the following: **enable**, **port-aggregation**, number of Keep Alive attempts, Keep Alive interval, retry interval, vLAG Health Check peer IP address.
+`vlagArg4` | This is an overloaded BGP variable. Please refer to the [cnos_vlag module documentation](http://ralfss28.labs.lenovo.com:5555/help/topic/com.lenovo.switchmgt.ansible.doc/cnos_template.html?cp=0_3_1_0_2_10) for detailed information on usage. The values of these variables depend on the configuration context and the choices are the following: LAG Number, **default**, **management**.
+
+
+## Dependencies
+---
+<add dependencies information below>
+
+- username.iptables - Configures the firewall and blocks all ports except those needed for web server and SSH access.
+- username.common - Performs common server configuration.
+- cnos_vlag.py - This modules needs to be present in the *library* directory of the role.
+- cnos.py - This module needs to be present in the PYTHONPATH environment variable set in the Ansible system.
+- /etc/ansible/hosts - You must edit the */etc/ansible/hosts* file with the device information of the switches designated as leaf switches. You may refer to *cnos_vlag_sample_hosts* for a sample configuration.
+
+Ansible keeps track of all network elements that it manages through a hosts file. Before the execution of a playbook, the hosts file must be set up.
+
+Open the */etc/ansible/hosts* file with root privileges. Most of the file is commented out by using **#**. You can also comment out the entries you will be adding by using **#**. You need to copy the content of the hosts file for the role into the */etc/ansible/hosts* file. The sample hosts file for the role is located in the main directory.
+
+```
+[cnos_vlag_sample]
+10.241.107.39   username=<username> password=<password> deviceType=g8272_cnos
+10.241.107.40   username=<username> password=<password> deviceType=g8272_cnos
+```
+    
+**Note:** You need to change the IP addresses to fit your specific topology. You also need to change the `<username>` and `<password>` to the appropriate values used to log into the specific Lenovo network devices.
+
+
+## Example Playbook
+---
+<add playbook samples below>
+
+To execute an Ansible playbook, use the following command:
+
+```
+ansible-playbook cnos_vlag_sample.yml -vvv
+```
+
+`-vvv` is an optional verbos command that helps identify what is happening during playbook execution. The playbook for each role is located in the main directory of the solution.
+
+```
+ - name: Module to  do VLAG configurations
+   hosts: cnos_vlag_sample
+   gather_facts: no
+   connection: local
+   roles:
+    - cnos_vlag_sample
+```
+
+
+## License
+---
+<add license information below>
+Copyright (C) 2017 Lenovo, Inc.
+
+This file is part of Ansible
+
+Ansible is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.
+
+Ansible is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.
+
+You should have received a copy of the GNU General Public License along with Ansible.  If not, see <http://www.gnu.org/licenses/>.
\ No newline at end of file
diff --git a/test/integration/roles/cnos_vlag/cnos_vlag_sample_hosts b/test/integration/roles/cnos_vlag/cnos_vlag_sample_hosts
new file mode 100644
index 0000000000..1404e384ab
--- /dev/null
+++ b/test/integration/roles/cnos_vlag/cnos_vlag_sample_hosts
@@ -0,0 +1,15 @@
+# You have to paste this dummy information  in /etc/ansible/hosts
+#    Notes:
+#    - Comments begin with the '#' character
+#    - Blank lines are ignored
+#    - Groups of hosts are delimited by [header] elements
+#    - You can enter hostnames or ip addresses
+#    - A hostname/ip can be a member of multiple groups
+#
+# In the /etc/ansible/hosts file u have to enter [cnos_vlag_sample] tag
+# Following you should specify IP Adresses details 
+# Please change <username> and <password> with appropriate value for your switch.
+
+[cnos_vlag_sample]
+10.241.107.39   username=<username> password=<password> deviceType=g8272_cnos
+
diff --git a/test/integration/roles/cnos_vlag/tasks/main.yml b/test/integration/roles/cnos_vlag/tasks/main.yml
new file mode 100644
index 0000000000..d847196b60
--- /dev/null
+++ b/test/integration/roles/cnos_vlag/tasks/main.yml
@@ -0,0 +1,51 @@
+# This contain sample template execution tasks
+---
+- name: Test Vlag  - enable
+  cnos_vlag:  host={{ inventory_hostname }} username={{ hostvars[inventory_hostname]['username']}}  password={{ hostvars[inventory_hostname]['password']}} deviceType={{ hostvars[inventory_hostname]['deviceType']}} outputfile=./results/cnos_vlag_{{ inventory_hostname }}_output.txt vlagArg1='{{item.vlagArg1}}'
+  with_items: "{{test_vlag_data1}}"
+- name: Test Vlag - autorecovery
+  cnos_vlag:  host={{ inventory_hostname }} username={{ hostvars[inventory_hostname]['username']}}  password={{ hostvars[inventory_hostname]['password']}} deviceType={{ hostvars[inventory_hostname]['deviceType']}} outputfile=./results/cnos_vlag_{{ inventory_hostname }}_output.txt vlagArg1='{{item.vlagArg1}}' vlagArg2='{{item.vlagArg2}}'
+  with_items: "{{test_vlag_data2}}"
+- name: Test Vlag - config-consistency
+  cnos_vlag:  host={{ inventory_hostname }} username={{ hostvars[inventory_hostname]['username']}}  password={{ hostvars[inventory_hostname]['password']}} deviceType={{ hostvars[inventory_hostname]['deviceType']}} outputfile=./results/cnos_vlag_{{ inventory_hostname }}_output.txt vlagArg1='{{item.vlagArg1}}' vlagArg2='{{item.vlagArg2}}'
+  with_items: "{{test_vlag_data3}}"
+- name: Test Vlag - isl
+  cnos_vlag:  host={{ inventory_hostname }} username={{ hostvars[inventory_hostname]['username']}}  password={{ hostvars[inventory_hostname]['password']}} deviceType={{ hostvars[inventory_hostname]['deviceType']}} outputfile=./results/cnos_vlag_{{ inventory_hostname }}_output.txt vlagArg1='{{item.vlagArg1}}' vlagArg2='{{item.vlagArg2}}'
+  with_items: "{{test_vlag_data4}}"
+- name: Test Vlag  - mac-address-table
+  cnos_vlag:  host={{ inventory_hostname }} username={{ hostvars[inventory_hostname]['username']}}  password={{ hostvars[inventory_hostname]['password']}} deviceType={{ hostvars[inventory_hostname]['deviceType']}} outputfile=./results/cnos_vlag_{{ inventory_hostname }}_output.txt vlagArg1='{{item.vlagArg1}}'
+  with_items: "{{test_vlag_data5}}"
+- name: Test Vlag - peer-gateway
+  cnos_vlag:  host={{ inventory_hostname }} username={{ hostvars[inventory_hostname]['username']}}  password={{ hostvars[inventory_hostname]['password']}} deviceType={{ hostvars[inventory_hostname]['deviceType']}} outputfile=./results/cnos_vlag_{{ inventory_hostname }}_output.txt vlagArg1='{{item.vlagArg1}}'
+  with_items: "{{test_vlag_data6}}"
+- name: Test Vlag - priority
+  cnos_vlag:  host={{ inventory_hostname }} username={{ hostvars[inventory_hostname]['username']}}  password={{ hostvars[inventory_hostname]['password']}} deviceType={{ hostvars[inventory_hostname]['deviceType']}} outputfile=./results/cnos_vlag_{{ inventory_hostname }}_output.txt vlagArg1='{{item.vlagArg1}}' vlagArg2='{{item.vlagArg2}}'
+  with_items: "{{test_vlag_data7}}"
+- name: Test Vlag - startup-delay
+  cnos_vlag:  host={{ inventory_hostname }} username={{ hostvars[inventory_hostname]['username']}}  password={{ hostvars[inventory_hostname]['password']}} deviceType={{ hostvars[inventory_hostname]['deviceType']}} outputfile=./results/cnos_vlag_{{ inventory_hostname }}_output.txt vlagArg1='{{item.vlagArg1}}' vlagArg2='{{item.vlagArg2}}'
+  with_items: "{{test_vlag_data8}}"
+- name: Test Vlag  - tier-id
+  cnos_vlag:  host={{ inventory_hostname }} username={{ hostvars[inventory_hostname]['username']}}  password={{ hostvars[inventory_hostname]['password']}} deviceType={{ hostvars[inventory_hostname]['deviceType']}} outputfile=./results/cnos_vlag_{{ inventory_hostname }}_output.txt vlagArg1='{{item.vlagArg1}}' vlagArg2='{{item.vlagArg2}}'
+  with_items: "{{test_vlag_data9}}"
+- name: Test Vlag - vrrp
+  cnos_vlag:  host={{ inventory_hostname }} username={{ hostvars[inventory_hostname]['username']}}  password={{ hostvars[inventory_hostname]['password']}} deviceType={{ hostvars[inventory_hostname]['deviceType']}} outputfile=./results/cnos_vlag_{{ inventory_hostname }}_output.txt vlagArg1='{{item.vlagArg1}}'
+  with_items: "{{test_vlag_data10}}"
+- name: Test Vlag - instance
+  cnos_vlag:  host={{ inventory_hostname }} username={{ hostvars[inventory_hostname]['username']}}  password={{ hostvars[inventory_hostname]['password']}} deviceType={{ hostvars[inventory_hostname]['deviceType']}} outputfile=./results/cnos_vlag_{{ inventory_hostname }}_output.txt vlagArg1='{{item.vlagArg1}}' vlagArg2='{{item.vlagArg2}}' vlagArg3='{{item.vlagArg3}}'
+  with_items: "{{test_vlag_data11}}"
+- name: Test Vlag - instance2
+  cnos_vlag:  host={{ inventory_hostname }} username={{ hostvars[inventory_hostname]['username']}}  password={{ hostvars[inventory_hostname]['password']}} deviceType={{ hostvars[inventory_hostname]['deviceType']}} outputfile=./results/cnos_vlag_{{ inventory_hostname }}_output.txt vlagArg1='{{item.vlagArg1}}' vlagArg2='{{item.vlagArg2}}'
+  with_items: "{{test_vlag_data12}}"
+- name: Test Vlag  - keepalive-attempts
+  cnos_vlag:  host={{ inventory_hostname }} username={{ hostvars[inventory_hostname]['username']}}  password={{ hostvars[inventory_hostname]['password']}} deviceType={{ hostvars[inventory_hostname]['deviceType']}} outputfile=./results/cnos_vlag_{{ inventory_hostname }}_output.txt vlagArg1='{{item.vlagArg1}}' vlagArg2='{{item.vlagArg2}}' vlagArg3='{{item.vlagArg3}}'
+  with_items: "{{test_vlag_data13}}"
+- name: Test Vlag - keepalive-interval
+  cnos_vlag:  host={{ inventory_hostname }} username={{ hostvars[inventory_hostname]['username']}}  password={{ hostvars[inventory_hostname]['password']}} deviceType={{ hostvars[inventory_hostname]['deviceType']}} outputfile=./results/cnos_vlag_{{ inventory_hostname }}_output.txt vlagArg1='{{item.vlagArg1}}' vlagArg2='{{item.vlagArg2}}' vlagArg3='{{item.vlagArg3}}'
+  with_items: "{{test_vlag_data14}}"
+- name: Test Vlag - retry-interval
+  cnos_vlag:  host={{ inventory_hostname }} username={{ hostvars[inventory_hostname]['username']}}  password={{ hostvars[inventory_hostname]['password']}} deviceType={{ hostvars[inventory_hostname]['deviceType']}} outputfile=./results/cnos_vlag_{{ inventory_hostname }}_output.txt vlagArg1='{{item.vlagArg1}}' vlagArg2='{{item.vlagArg2}}' vlagArg3='{{item.vlagArg3}}'
+  with_items: "{{test_vlag_data15}}"
+- name: Test Vlag - peer ip
+  cnos_vlag:  host={{ inventory_hostname }} username={{ hostvars[inventory_hostname]['username']}}  password={{ hostvars[inventory_hostname]['password']}} deviceType={{ hostvars[inventory_hostname]['deviceType']}} outputfile=./results/cnos_vlag_{{ inventory_hostname }}_output.txt vlagArg1='{{item.vlagArg1}}' vlagArg2='{{item.vlagArg2}}' vlagArg3='{{item.vlagArg3}}'
+  with_items: "{{test_vlag_data16}}"
+# Completed file
\ No newline at end of file
diff --git a/test/integration/roles/cnos_vlag/vars/main.yml b/test/integration/roles/cnos_vlag/vars/main.yml
new file mode 100644
index 0000000000..3d759001cc
--- /dev/null
+++ b/test/integration/roles/cnos_vlag/vars/main.yml
@@ -0,0 +1,33 @@
+---
+test_vlag_data1:
+  - {vlagArg1: "enable"}
+test_vlag_data2:
+  - {vlagArg1: "auto-recovery", vlagArg2: 266}
+test_vlag_data3:
+  - {vlagArg1: "config-consistency", vlagArg2: "strict"}
+test_vlag_data4:
+  - {vlagArg1: "isl", vlagArg2: 23}
+test_vlag_data5:
+  - {vlagArg1: "mac-address-table"}
+test_vlag_data6:
+  - {vlagArg1: "peer-gateway"}
+test_vlag_data7:
+  - {vlagArg1: "priority", vlagArg2: 1313}
+test_vlag_data8:
+  - {vlagArg1: "startup-delay", vlagArg2: 323}
+test_vlag_data9:
+  - {vlagArg1: "tier-id", vlagArg2: 313}
+test_vlag_data10:
+  - {vlagArg1: "vrrp"}
+test_vlag_data11:
+  - {vlagArg1: "instance", vlagArg2: 33, vlagArg3: 333}
+test_vlag_data12:
+  - {vlagArg1: "instance", vlagArg2: "33"}
+test_vlag_data13:
+  - {vlagArg1: "hlthchk", vlagArg2: "keepalive-attempts", vlagArg3: 13}
+test_vlag_data14:
+  - {vlagArg1: "hlthchk", vlagArg2: "keepalive-interval", vlagArg3: 131}
+test_vlag_data15:
+  - {vlagArg1: "hlthchk", vlagArg2: "retry-interval", vlagArg3: 133}
+test_vlag_data16:
+  - {vlagArg1: "hlthchk", vlagArg2: "peer-ip", vlagArg3: "1.2.3.4"}
\ No newline at end of file
