commit 6de8c270854ca0a846053e00ff18ad0bbe1d2a26
Author: Michael DeHaan <michael.dehaan@gmail.com>
Date:   Tue Aug 14 19:48:33 2012 -0400

    Load parent groups when processing group_vars

diff --git a/lib/ansible/inventory/__init__.py b/lib/ansible/inventory/__init__.py
index 019fb60d84..8af07a80eb 100644
--- a/lib/ansible/inventory/__init__.py
+++ b/lib/ansible/inventory/__init__.py
@@ -200,6 +200,16 @@ class Inventory(object):
                     hosts[host.name] = host
         return sorted(hosts.values(), key=lambda x: x.name)
 
+    def groups_for_host(self, host):
+        results = []
+        groups = self.get_groups()
+        for group in groups:
+            for hostn in group.get_hosts():
+                if host == hostn.name:
+                    results.append(group)
+                    continue
+        return results
+
     def get_groups(self):
         return self.groups
 
diff --git a/lib/ansible/inventory/group.py b/lib/ansible/inventory/group.py
index fe12f331c8..599b53c0a0 100644
--- a/lib/ansible/inventory/group.py
+++ b/lib/ansible/inventory/group.py
@@ -18,10 +18,11 @@
 class Group(object):
     ''' a group of ansible hosts '''
 
-    __slots__ = [ 'name', 'hosts', 'vars', 'child_groups', 'parent_groups' ]
+    __slots__ = [ 'name', 'hosts', 'vars', 'child_groups', 'parent_groups', 'depth' ]
 
     def __init__(self, name=None):
 
+        self.depth = 0
         self.name = name
         self.hosts = []
         self.vars = {}
@@ -35,6 +36,7 @@ class Group(object):
         if self == group:
             raise Exception("can't add group to itself")
         self.child_groups.append(group)
+        group.depth = group.depth + 1
         group.parent_groups.append(self)
 
     def add_host(self, host):
diff --git a/lib/ansible/playbook/play.py b/lib/ansible/playbook/play.py
index 4371155654..550ed5571c 100644
--- a/lib/ansible/playbook/play.py
+++ b/lib/ansible/playbook/play.py
@@ -226,7 +226,8 @@ class Play(object):
         if (host is not None):
             inventory = self.playbook.inventory
             hostrec = inventory.get_host(host)
-            groups = [ g.name for g in hostrec.groups ]
+            groupz = sorted(inventory.groups_for_host(host), key=lambda g: g.depth)
+            groups = [ g.name for g in groupz ]
             basedir = inventory.basedir()
             if basedir is not None:
                 for x in groups:
