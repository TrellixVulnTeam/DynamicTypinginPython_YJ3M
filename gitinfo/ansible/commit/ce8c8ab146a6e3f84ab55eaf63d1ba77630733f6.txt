commit ce8c8ab146a6e3f84ab55eaf63d1ba77630733f6
Author: Brian Coca <bcoca@ansible.com>
Date:   Sun Jun 1 16:32:48 2014 -0400

    now unique actually works, all operations also now use it to return
    unique lists.

diff --git a/lib/ansible/runner/filter_plugins/core.py b/lib/ansible/runner/filter_plugins/core.py
index ca2e8b02d2..a60d087893 100644
--- a/lib/ansible/runner/filter_plugins/core.py
+++ b/lib/ansible/runner/filter_plugins/core.py
@@ -145,35 +145,37 @@ def unique(a):
         c = set(a)
     else:
         c = []
-        c = filter(lambda x: x not in c, a)
+        for x in a:
+            if x not in c:
+                c.append(x)
     return c
 
 def intersect(a, b):
     if isinstance(a,collections.Hashable) and isinstance(b,collections.Hashable):
         c = set(a) & set(b)
     else:
-        c = filter(lambda x: x in b, a)
+        c = unique(filter(lambda x: x in b, a))
     return c
 
 def difference(a, b):
     if isinstance(a,collections.Hashable) and isinstance(b,collections.Hashable):
         c = set(a) - set(b)
     else:
-        c = filter(lambda x: x not in b, a)
+        c = unique(filter(lambda x: x not in b, a))
     return c
 
 def symmetric_difference(a, b):
     if isinstance(a,collections.Hashable) and isinstance(b,collections.Hashable):
         c = set(a) ^ set(b)
     else:
-        c = filter(lambda x: x not in intersect(a,b), union(a,b))
+        c = unique(filter(lambda x: x not in intersect(a,b), union(a,b)))
     return c
 
 def union(a, b):
     if isinstance(a,collections.Hashable) and isinstance(b,collections.Hashable):
         c = set(a) | set(b)
     else:
-        c = a + b
+        c = unique(a + b)
     return c
 
 def version_compare(value, version, operator='eq', strict=False):
