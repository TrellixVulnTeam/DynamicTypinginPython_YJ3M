commit 8d395159148392828e0890459678d0bacb6d4b3c
Author: Matt Clay <matt@mystile.com>
Date:   Mon May 21 13:54:15 2018 -0700

    Remove tab check from validate-modules.
    
    It is redundant with the pycodestyle W191 "indentation contains tabs" check.

diff --git a/docs/docsite/rst/dev_guide/testing_validate-modules.rst b/docs/docsite/rst/dev_guide/testing_validate-modules.rst
index 0c1640a5e5..c56169832a 100644
--- a/docs/docsite/rst/dev_guide/testing_validate-modules.rst
+++ b/docs/docsite/rst/dev_guide/testing_validate-modules.rst
@@ -121,7 +121,6 @@ Errors
 ---------   -------------------
   **4xx**   **Syntax**
   401       Python ``SyntaxError`` while parsing module
-  402       Indentation contains tabs
   403       Type comparison using ``type()`` found. Use ``isinstance()`` instead
   ..
 ---------   -------------------
diff --git a/test/sanity/validate-modules/main.py b/test/sanity/validate-modules/main.py
index fc9f81e00f..0524df22a1 100755
--- a/test/sanity/validate-modules/main.py
+++ b/test/sanity/validate-modules/main.py
@@ -396,19 +396,6 @@ class ModuleValidator(Validator):
                         'https://docs.ansible.com/ansible/devel/dev_guide/developing_modules_documenting.html#copyright'
                 )
 
-    def _check_for_tabs(self):
-        for line_no, line in enumerate(self.text.splitlines()):
-            indent = INDENT_REGEX.search(line)
-            if indent and '\t' in line:
-                index = line.index('\t')
-                self.reporter.error(
-                    path=self.object_path,
-                    code=402,
-                    msg='indentation contains tabs',
-                    line=line_no + 1,
-                    column=index
-                )
-
     def _find_blacklist_imports(self):
         for child in self.ast.body:
             names = []
@@ -1358,7 +1345,6 @@ class ModuleValidator(Validator):
             main = self._find_main_call()
             self._find_module_utils(main)
             self._find_has_import()
-            self._check_for_tabs()
             first_callable = self._get_first_callable()
             self._ensure_imports_below_docs(doc_info, first_callable)
 
