commit 1e9333f82283d204a534ec1c5bd425f21c8d6988
Author: Fabio Alessandro Locati <me@fale.io>
Date:   Thu Dec 1 16:39:21 2016 +0000

    Cloud amazon and azure (#3610)
    
    * Native YAML - cloud/amazon
    
    * Native YAML - cloud/azure

diff --git a/lib/ansible/modules/extras/cloud/amazon/cloudformation_facts.py b/lib/ansible/modules/extras/cloud/amazon/cloudformation_facts.py
index 381e479fe6..0e502ce5a3 100644
--- a/lib/ansible/modules/extras/cloud/amazon/cloudformation_facts.py
+++ b/lib/ansible/modules/extras/cloud/amazon/cloudformation_facts.py
@@ -68,7 +68,8 @@ EXAMPLES = '''
     stack_name: my-cloudformation-stack
 
 # Facts are published in ansible_facts['cloudformation'][<stack_name>]
-- debug: msg={{ ansible_facts['cloudformation']['my-cloudformation-stack'] }}
+- debug:
+    msg: '{{ ansible_facts['cloudformation']['my-cloudformation-stack'] }}'
 
 # Get all stack information about a stack
 - cloudformation_facts:
diff --git a/lib/ansible/modules/extras/cloud/amazon/execute_lambda.py b/lib/ansible/modules/extras/cloud/amazon/execute_lambda.py
index bd1b9288e2..03ab426407 100644
--- a/lib/ansible/modules/extras/cloud/amazon/execute_lambda.py
+++ b/lib/ansible/modules/extras/cloud/amazon/execute_lambda.py
@@ -108,7 +108,9 @@ EXAMPLES = '''
   register: response
   # the response will have a `logs` key that will contain a log (up to 4KB) of the function execution in Lambda.
 
-- execute_lambda: name=test-function version_qualifier=PRODUCTION
+- execute_lambda:
+    name: test-function
+    version_qualifier: PRODUCTION
 '''
 
 RETURN = '''
diff --git a/lib/ansible/modules/extras/cloud/amazon/lambda_alias.py b/lib/ansible/modules/extras/cloud/amazon/lambda_alias.py
index d744ca7346..c85ecd2ee3 100644
--- a/lib/ansible/modules/extras/cloud/amazon/lambda_alias.py
+++ b/lib/ansible/modules/extras/cloud/amazon/lambda_alias.py
@@ -95,7 +95,8 @@ EXAMPLES = '''
       role: "arn:aws:iam::{{ account }}:role/API2LambdaExecRole"
 
   - name: show results
-    debug: var=lambda_facts
+    debug:
+      var: lambda_facts
 
 # The following will set the Dev alias to the latest version ($LATEST) since version is omitted (or = 0)
   - name: "alias 'Dev' for function {{ lambda_facts.FunctionName }} "
diff --git a/lib/ansible/modules/extras/cloud/amazon/lambda_facts.py b/lib/ansible/modules/extras/cloud/amazon/lambda_facts.py
index 9103f69df5..9c17df1dd3 100644
--- a/lib/ansible/modules/extras/cloud/amazon/lambda_facts.py
+++ b/lib/ansible/modules/extras/cloud/amazon/lambda_facts.py
@@ -82,7 +82,8 @@ EXAMPLES = '''
     query: all
     max_items: 20
 - name: show Lambda facts
-  debug: var=lambda_facts
+  debug:
+    var: lambda_facts
 '''
 
 RETURN = '''
diff --git a/lib/ansible/modules/extras/cloud/azure/azure_rm_deployment.py b/lib/ansible/modules/extras/cloud/azure/azure_rm_deployment.py
index 1b2c234f0b..d5f1786b13 100644
--- a/lib/ansible/modules/extras/cloud/azure/azure_rm_deployment.py
+++ b/lib/ansible/modules/extras/cloud/azure/azure_rm_deployment.py
@@ -158,14 +158,19 @@ EXAMPLES = '''
       register: azure
 
     - name: Add new instance to host group
-      add_host: hostname={{ item['ips'][0].public_ip }} groupname=azure_vms
+      add_host:
+        hostname: '{{ item['ips'][0].public_ip }}'
+        groupname: azure_vms
       with_items: "{{ azure.deployment.instances }}"
 
     - hosts: azure_vms
       user: devopscle
       tasks:
         - name: Wait for SSH to come up
-          wait_for: port=22 timeout=2000 state=started
+          wait_for:
+            port: 22
+            timeout: 2000
+            state: started
         - name: echo the hostname of the vm
           shell: hostname
 
@@ -243,15 +248,13 @@ EXAMPLES = '''
         vnetID: "[resourceId('Microsoft.Network/virtualNetworks',variables('virtualNetworkName'))]"
         subnetRef: "[concat(variables('vnetID'),'/subnets/',variables('subnetName'))]"
       resources:
-        -
-          type: "Microsoft.Storage/storageAccounts"
+        - type: "Microsoft.Storage/storageAccounts"
           name: "[parameters('newStorageAccountName')]"
           apiVersion: "2015-05-01-preview"
           location: "[variables('location')]"
           properties:
             accountType: "[variables('storageAccountType')]"
-        -
-          apiVersion: "2015-05-01-preview"
+        - apiVersion: "2015-05-01-preview"
           type: "Microsoft.Network/publicIPAddresses"
           name: "[variables('publicIPAddressName')]"
           location: "[variables('location')]"
@@ -259,8 +262,7 @@ EXAMPLES = '''
             publicIPAllocationMethod: "[variables('publicIPAddressType')]"
             dnsSettings:
               domainNameLabel: "[parameters('dnsNameForPublicIP')]"
-        -
-          type: "Microsoft.Network/virtualNetworks"
+        - type: "Microsoft.Network/virtualNetworks"
           apiVersion: "2015-05-01-preview"
           name: "[variables('virtualNetworkName')]"
           location: "[variables('location')]"
@@ -273,8 +275,7 @@ EXAMPLES = '''
                 name: "[variables('subnetName')]"
                 properties:
                   addressPrefix: "[variables('subnetPrefix')]"
-        -
-          type: "Microsoft.Network/networkInterfaces"
+        - type: "Microsoft.Network/networkInterfaces"
           apiVersion: "2015-05-01-preview"
           name: "[variables('nicName')]"
           location: "[variables('location')]"
@@ -291,8 +292,7 @@ EXAMPLES = '''
                     id: "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]"
                   subnet:
                     id: "[variables('subnetRef')]"
-        -
-          type: "Microsoft.Compute/virtualMachines"
+        - type: "Microsoft.Compute/virtualMachines"
           apiVersion: "2015-06-15"
           name: "[variables('vmName')]"
           location: "[variables('location')]"
