commit 7dcf32294be3be7534e30204ac842b375762315f
Author: Abhijeet Kasurde <akasurde@redhat.com>
Date:   Tue Feb 18 09:00:30 2020 +0530

    Update URLs in documentation (#67376)
    
    Partially fixes: #67357
    
    Signed-off-by: Abhijeet Kasurde <akasurde@redhat.com>

diff --git a/lib/ansible/modules/cloud/amazon/elb_target_info.py b/lib/ansible/modules/cloud/amazon/elb_target_info.py
index c400789420..2bf1ddf73d 100644
--- a/lib/ansible/modules/cloud/amazon/elb_target_info.py
+++ b/lib/ansible/modules/cloud/amazon/elb_target_info.py
@@ -179,10 +179,10 @@ instance_target_groups:
                     sample:
                         - us-west-2a
                 target_health:
-                    description: the target health description
-                                 (see U(https://boto3.readthedocs.io/en/latest/
-                                  reference/services/elbv2.html#ElasticLoadBalancingv2.Client.describe_target_health))
-                                 for all possible values
+                    description:
+                    - The target health description.
+                    - See following link for all the possible values
+                      U(https://boto3.readthedocs.io/en/latest/reference/services/elbv2.html#ElasticLoadBalancingv2.Client.describe_target_health)
                     returned: always
                     type: complex
                     contains:
diff --git a/lib/ansible/modules/cloud/ovh/ovh_ip_failover.py b/lib/ansible/modules/cloud/ovh/ovh_ip_failover.py
index d65231ff9a..121d914f0e 100644
--- a/lib/ansible/modules/cloud/ovh/ovh_ip_failover.py
+++ b/lib/ansible/modules/cloud/ovh/ovh_ip_failover.py
@@ -24,7 +24,7 @@ author: "Pascal HERAUD (@pascalheraud)"
 notes:
     - Uses the python OVH Api U(https://github.com/ovh/python-ovh).
       You have to create an application (a key and secret) with a consummer
-      key as described into U(https://eu.api.ovh.com/g934.first_step_with_api)
+      key as described into U(https://docs.ovh.com/gb/en/customer/first-steps-with-ovh-api/)
 requirements:
     - ovh >=  0.4.8
 options:
diff --git a/lib/ansible/modules/cloud/ovh/ovh_ip_loadbalancing_backend.py b/lib/ansible/modules/cloud/ovh/ovh_ip_loadbalancing_backend.py
index 106d250b98..98c5daa7c3 100644
--- a/lib/ansible/modules/cloud/ovh/ovh_ip_loadbalancing_backend.py
+++ b/lib/ansible/modules/cloud/ovh/ovh_ip_loadbalancing_backend.py
@@ -23,7 +23,7 @@ author: Pascal Heraud (@pascalheraud)
 notes:
     - Uses the python OVH Api U(https://github.com/ovh/python-ovh).
       You have to create an application (a key and secret) with a consumer
-      key as described into U(https://eu.api.ovh.com/g934.first_step_with_api)
+      key as described into U(https://docs.ovh.com/gb/en/customer/first-steps-with-ovh-api/)
 requirements:
     - ovh >  0.3.5
 options:
diff --git a/lib/ansible/modules/cloud/packet/packet_volume_attachment.py b/lib/ansible/modules/cloud/packet/packet_volume_attachment.py
index fc4010162c..7e6fa97b34 100644
--- a/lib/ansible/modules/cloud/packet/packet_volume_attachment.py
+++ b/lib/ansible/modules/cloud/packet/packet_volume_attachment.py
@@ -22,7 +22,7 @@ short_description: Attach/detach a volume to a device in the Packet host.
 
 description:
      - Attach/detach a volume to a device in the Packet host.
-     - API is documented at U(https://www.packet.net/developers/api/volumeattachments/).
+     - API is documented at U(https://www.packet.com/developers/api/volumes/).
      - "This module creates the attachment route in the Packet API. In order to discover
        the block devices on the server, you have to run the Attach Scripts,
        as documented at U(https://help.packet.net/technical/storage/packet-block-storage-linux)."
diff --git a/lib/ansible/modules/cloud/xenserver/xenserver_guest.py b/lib/ansible/modules/cloud/xenserver/xenserver_guest.py
index bc0a296c83..1ab2f3b4c3 100644
--- a/lib/ansible/modules/cloud/xenserver/xenserver_guest.py
+++ b/lib/ansible/modules/cloud/xenserver/xenserver_guest.py
@@ -28,7 +28,7 @@ notes:
 - 'To acquire XenAPI Python library, just run C(pip install XenAPI) on your Ansible Control Node. The library can also be found inside
    Citrix Hypervisor/XenServer SDK (downloadable from Citrix website). Copy the XenAPI.py file from the SDK to your Python site-packages on your
    Ansible Control Node to use it. Latest version of the library can also be acquired from GitHub:
-   https://raw.githubusercontent.com/xapi-project/xen-api/master/scripts/examples/python/XenAPI.py'
+   U(https://raw.githubusercontent.com/xapi-project/xen-api/master/scripts/examples/python/XenAPI/XenAPI.py)'
 - 'If no scheme is specified in C(hostname), module defaults to C(http://) because C(https://) is problematic in most setups. Make sure you are
    accessing XenServer host in trusted environment or use C(https://) scheme explicitly.'
 - 'To use C(https://) scheme for C(hostname) you have to either import host certificate to your OS certificate store or use C(validate_certs: no)
@@ -38,7 +38,7 @@ notes:
   detect if such support is available and utilize it, else it will use a custom method of configuration via xenstore. Since XenServer Guest
   agent only support None and Static types of network configuration, where None means DHCP configured interface, C(networks.type) and C(networks.type6)
   values C(none) and C(dhcp) have same effect. More info here:
-  https://www.citrix.com/community/citrix-developer/citrix-hypervisor-developer/citrix-hypervisor-developing-products/citrix-hypervisor-staticip.html'
+  U(https://www.citrix.com/community/citrix-developer/citrix-hypervisor-developer/citrix-hypervisor-developing-products/citrix-hypervisor-staticip.html)'
 - 'On platforms without official support for network configuration inside a guest OS, network parameters will be written to xenstore
   C(vm-data/networks/<vif_device>) key. Parameters can be inspected by using C(xenstore ls) and C(xenstore read) tools on \*nix guests or trough
   WMI interface on Windows guests. They can also be found in VM facts C(instance.xenstore_data) key as returned by the module. It is up to the user
@@ -46,7 +46,7 @@ notes:
   Take note that for xenstore data to become available inside a guest, a VM restart is needed hence module will require VM restart if any
   parameter is changed. This is a limitation of XenAPI and xenstore. Considering these limitations, network configuration trough xenstore is most
   useful for bootstraping newly deployed VMs, much less for reconfiguring existing ones. More info here:
-  https://support.citrix.com/article/CTX226713'
+  U(https://support.citrix.com/article/CTX226713)'
 requirements:
 - python >= 2.6
 - XenAPI
diff --git a/lib/ansible/modules/cloud/xenserver/xenserver_guest_info.py b/lib/ansible/modules/cloud/xenserver/xenserver_guest_info.py
index dfa6b37b99..6ff1e30859 100644
--- a/lib/ansible/modules/cloud/xenserver/xenserver_guest_info.py
+++ b/lib/ansible/modules/cloud/xenserver/xenserver_guest_info.py
@@ -26,7 +26,7 @@ notes:
 - 'To acquire XenAPI Python library, just run C(pip install XenAPI) on your Ansible Control Node. The library can also be found inside
    Citrix Hypervisor/XenServer SDK (downloadable from Citrix website). Copy the XenAPI.py file from the SDK to your Python site-packages on your
    Ansible Control Node to use it. Latest version of the library can also be acquired from GitHub:
-   https://raw.githubusercontent.com/xapi-project/xen-api/master/scripts/examples/python/XenAPI.py'
+   U(https://raw.githubusercontent.com/xapi-project/xen-api/master/scripts/examples/python/XenAPI/XenAPI.py)'
 - 'If no scheme is specified in C(hostname), module defaults to C(http://) because C(https://) is problematic in most setups. Make sure you are
    accessing XenServer host in trusted environment or use C(https://) scheme explicitly.'
 - 'To use C(https://) scheme for C(hostname) you have to either import host certificate to your OS certificate store or use C(validate_certs: no)
diff --git a/lib/ansible/modules/cloud/xenserver/xenserver_guest_powerstate.py b/lib/ansible/modules/cloud/xenserver/xenserver_guest_powerstate.py
index 0cc712679a..f42c997c95 100644
--- a/lib/ansible/modules/cloud/xenserver/xenserver_guest_powerstate.py
+++ b/lib/ansible/modules/cloud/xenserver/xenserver_guest_powerstate.py
@@ -26,7 +26,7 @@ notes:
 - 'To acquire XenAPI Python library, just run C(pip install XenAPI) on your Ansible Control Node. The library can also be found inside
    Citrix Hypervisor/XenServer SDK (downloadable from Citrix website). Copy the XenAPI.py file from the SDK to your Python site-packages on your
    Ansible Control Node to use it. Latest version of the library can also be acquired from GitHub:
-   https://raw.githubusercontent.com/xapi-project/xen-api/master/scripts/examples/python/XenAPI.py'
+   U(https://raw.githubusercontent.com/xapi-project/xen-api/master/scripts/examples/python/XenAPI/XenAPI.py)'
 - 'If no scheme is specified in C(hostname), module defaults to C(http://) because C(https://) is problematic in most setups. Make sure you are
    accessing XenServer host in trusted environment or use C(https://) scheme explicitly.'
 - 'To use C(https://) scheme for C(hostname) you have to either import host certificate to your OS certificate store or use C(validate_certs: no)
diff --git a/lib/ansible/modules/identity/keycloak/keycloak_client.py b/lib/ansible/modules/identity/keycloak/keycloak_client.py
index dcbccc5c03..a71a0c1560 100644
--- a/lib/ansible/modules/identity/keycloak/keycloak_client.py
+++ b/lib/ansible/modules/identity/keycloak/keycloak_client.py
@@ -29,7 +29,7 @@ description:
       to your needs and a user having the expected roles.
 
     - The names of module options are snake_cased versions of the camelCase ones found in the
-      Keycloak API and its documentation at U(http://www.keycloak.org/docs-api/3.3/rest-api/).
+      Keycloak API and its documentation at U(https://www.keycloak.org/docs-api/8.0/rest-api/index.html).
       Aliases are provided so camelCased versions can be used as well.
 
     - The Keycloak API does not always sanity check inputs e.g. you can set
@@ -295,7 +295,7 @@ options:
     authorization_settings:
         description:
             - a data structure defining the authorization settings for this client. For reference,
-              please see the Keycloak API docs at U(http://www.keycloak.org/docs-api/3.3/rest-api/index.html#_resourceserverrepresentation).
+              please see the Keycloak API docs at U(https://www.keycloak.org/docs-api/8.0/rest-api/index.html#_resourceserverrepresentation).
               This is 'authorizationSettings' in the Keycloak REST API.
         aliases:
             - authorizationSettings
diff --git a/lib/ansible/modules/identity/keycloak/keycloak_clienttemplate.py b/lib/ansible/modules/identity/keycloak/keycloak_clienttemplate.py
index 657acd9658..d455380776 100644
--- a/lib/ansible/modules/identity/keycloak/keycloak_clienttemplate.py
+++ b/lib/ansible/modules/identity/keycloak/keycloak_clienttemplate.py
@@ -29,7 +29,7 @@ description:
       to your needs and a user having the expected roles.
 
     - The names of module options are snake_cased versions of the camelCase ones found in the
-      Keycloak API and its documentation at U(http://www.keycloak.org/docs-api/3.3/rest-api/)
+      Keycloak API and its documentation at U(https://www.keycloak.org/docs-api/8.0/rest-api/index.html)
 
     - The Keycloak API does not always enforce for only sensible settings to be used -- you can set
       SAML-specific settings on an OpenID Connect client for instance and vice versa. Be careful.
diff --git a/lib/ansible/modules/identity/keycloak/keycloak_group.py b/lib/ansible/modules/identity/keycloak/keycloak_group.py
index 10927aa835..35490f7f2c 100644
--- a/lib/ansible/modules/identity/keycloak/keycloak_group.py
+++ b/lib/ansible/modules/identity/keycloak/keycloak_group.py
@@ -27,7 +27,7 @@ description:
       to your needs and a user having the expected roles.
 
     - The names of module options are snake_cased versions of the camelCase ones found in the
-      Keycloak API and its documentation at U(http://www.keycloak.org/docs-api/3.3/rest-api/).
+      Keycloak API and its documentation at U(https://www.keycloak.org/docs-api/8.0/rest-api/index.html).
 
     - Attributes are multi-valued in the Keycloak API. All attributes are lists of individual values and will
       be returned that way by this module. You may pass single values for attributes when calling the module,
diff --git a/lib/ansible/plugins/lookup/laps_password.py b/lib/ansible/plugins/lookup/laps_password.py
index 176a6020a0..f48e76a06c 100644
--- a/lib/ansible/plugins/lookup/laps_password.py
+++ b/lib/ansible/plugins/lookup/laps_password.py
@@ -125,7 +125,7 @@ notes:
   be sent in plaintext.
 - Some scenarios may not work when running on a host with an older OpenLDAP install like MacOS. It is recommended to
   install the latest OpenLDAP version and build python-ldap against this, see
-  U(https://keathmilligan.net/python-ldap-and-macos/) for more information.
+  U(https://keathmilligan.net/python-ldap-and-macos) for more information.
 """
 
 EXAMPLES = """
