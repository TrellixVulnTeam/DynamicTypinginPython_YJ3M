commit b0fdb6ac1027e16703167fb953fdfa3d09a6bf23
Author: Dag Wieers <dag@wieers.com>
Date:   Tue Feb 21 07:01:09 2017 +0100

    win_timezone: Clean up and check-mode support (#21387)
    
    Changes include:
    - Use Get-AnsibleParam with -type support
    - Replace $result PSObject with normal hash
    - Add check-mode support

diff --git a/lib/ansible/modules/windows/win_timezone.ps1 b/lib/ansible/modules/windows/win_timezone.ps1
index 6270099097..cba4b616b6 100644
--- a/lib/ansible/modules/windows/win_timezone.ps1
+++ b/lib/ansible/modules/windows/win_timezone.ps1
@@ -19,28 +19,32 @@
 # WANT_JSON
 # POWERSHELL_COMMON
 
-$params = Parse-Args $args;
-
-$result = New-Object psobject @{
-    win_timezone = New-Object psobject
+$result = @{
     changed = $false
+    win_timezone = @{}
 }
 
-$timezone = Get-Attr -obj $params -name timezone -failifempty $true -resultobj $result
+$params = Parse-Args $args -supports_check_mode $true
+$check_mode = Get-AnsibleParam -obj $params -name "_ansible_check_mode" -type "bool" -default $false
+
+$timezone = Get-AnsibleParam -obj $params -name "timezone" -failifempty $true -resultobj $result
 
 Try {
     # Get the current timezone set
     $currentTZ = $(tzutil.exe /g)
-    If ($LASTEXITCODE -ne 0) { Throw "An error occurred when getting the current machine's timezone setting." /
+    If ($LASTEXITCODE -ne 0) {
+        Throw "An error occurred when getting the current machine's timezone setting."
+    }
 
     If ( $currentTZ -eq $timezone ) {
         Exit-Json $result "$timezone is already set on this machine"
-    }
-    Else {
+    } Else {
         $tzExists = $false
         #Check that timezone can even be set (if it is listed from tzutil as an available timezone to the machine)
         $tzList = $(tzutil.exe /l)
-        If ($LASTEXITCODE -ne 0) { Throw "An error occurred when listing the available timezones." }
+        If ($LASTEXITCODE -ne 0) {
+            Throw "An error occurred when listing the available timezones."
+        }
         ForEach ($tz in $tzList) {
             If ( $tz -eq $timezone ) {
                 $tzExists = $true
@@ -49,23 +53,28 @@ Try {
         }
 
         If ( $tzExists ) {
-            tzutil.exe /s "$timezone"
-            If ($LASTEXITCODE -ne 0) { Throw "An error occurred when setting the specified timezone with tzutil." }
-            $newTZ = $(tzutil.exe /g)
-            If ($LASTEXITCODE -ne 0) { Throw "An error occurred when getting the current machine's timezone setting." }
+            if (-not $check_mode) {
+                tzutil.exe /s "$timezone"
+                If ($LASTEXITCODE -ne 0) {
+                    Throw "An error occurred when setting the specified timezone with tzutil."
+                }
+                $newTZ = $(tzutil.exe /g)
+                If ($LASTEXITCODE -ne 0) {
+                    Throw "An error occurred when getting the current machine's timezone setting."
+                }
 
-            If ( $timezone -eq $newTZ ) {
+                If ( $timezone -eq $newTZ ) {
+                    $result.changed = $true
+                }
+            } else {
                 $result.changed = $true
             }
-        }
-        Else {
+        } Else {
             Fail-Json $result "The specified timezone: $timezone isn't supported on the machine."
         }
     }
-}
-Catch {
+} Catch {
     Fail-Json $result "Error setting timezone to: $timezone."
 }
 
-
-Exit-Json $result;
+Exit-Json $result
