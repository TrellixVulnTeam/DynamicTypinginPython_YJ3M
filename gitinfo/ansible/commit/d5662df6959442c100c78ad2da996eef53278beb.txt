commit d5662df6959442c100c78ad2da996eef53278beb
Author: Stefan Prietl <ederst@users.noreply.github.com>
Date:   Mon Aug 13 18:52:20 2018 +0200

    Fix actions and wait in os_server_action module (#43504)
    
    * Fix call to sdk.iterate_timeout in os_server_action
    
    * Correct indentation for several actions in os_server_action

diff --git a/lib/ansible/modules/cloud/openstack/os_server_action.py b/lib/ansible/modules/cloud/openstack/os_server_action.py
index bcba1c5dcf..fc1a414763 100644
--- a/lib/ansible/modules/cloud/openstack/os_server_action.py
+++ b/lib/ansible/modules/cloud/openstack/os_server_action.py
@@ -94,7 +94,7 @@ def _action_url(server_id):
 def _wait(timeout, cloud, server, action, module, sdk):
     """Wait for the server to reach the desired state for the given action."""
 
-    for count in sdk.utils._iterate_timeout(
+    for count in sdk.utils.iterate_timeout(
             timeout,
             "Timeout waiting for server to complete %s" % action):
         try:
@@ -163,9 +163,9 @@ def main():
             if not _system_state_change(action, status):
                 module.exit_json(changed=False)
 
-                cloud.compute.post(
-                    _action_url(server.id),
-                    json={'os-start': None})
+            cloud.compute.post(
+                _action_url(server.id),
+                json={'os-start': None})
             if wait:
                 _wait(timeout, cloud, server, action, module, sdk)
                 module.exit_json(changed=True)
@@ -174,9 +174,9 @@ def main():
             if not _system_state_change(action, status):
                 module.exit_json(changed=False)
 
-                cloud.compute.post(
-                    _action_url(server.id),
-                    json={'pause': None})
+            cloud.compute.post(
+                _action_url(server.id),
+                json={'pause': None})
             if wait:
                 _wait(timeout, cloud, server, action, module, sdk)
                 module.exit_json(changed=True)
@@ -185,9 +185,9 @@ def main():
             if not _system_state_change(action, status):
                 module.exit_json(changed=False)
 
-                cloud.compute.post(
-                    _action_url(server.id),
-                    json={'unpause': None})
+            cloud.compute.post(
+                _action_url(server.id),
+                json={'unpause': None})
             if wait:
                 _wait(timeout, cloud, server, action, module, sdk)
             module.exit_json(changed=True)
@@ -210,9 +210,9 @@ def main():
             if not _system_state_change(action, status):
                 module.exit_json(changed=False)
 
-                cloud.compute.post(
-                    _action_url(server.id),
-                    json={'suspend': None})
+            cloud.compute.post(
+                _action_url(server.id),
+                json={'suspend': None})
             if wait:
                 _wait(timeout, cloud, server, action, module, sdk)
             module.exit_json(changed=True)
@@ -221,9 +221,9 @@ def main():
             if not _system_state_change(action, status):
                 module.exit_json(changed=False)
 
-                cloud.compute.post(
-                    _action_url(server.id),
-                    json={'resume': None})
+            cloud.compute.post(
+                _action_url(server.id),
+                json={'resume': None})
             if wait:
                 _wait(timeout, cloud, server, action, module, sdk)
             module.exit_json(changed=True)
@@ -235,9 +235,9 @@ def main():
                 module.fail_json(msg="Image does not exist")
 
             # rebuild doesn't set a state, just do it
-                cloud.compute.post(
-                    _action_url(server.id),
-                    json={'rebuild': None})
+            cloud.compute.post(
+                _action_url(server.id),
+                json={'rebuild': None})
             if wait:
                 _wait(timeout, cloud, server, action, module, sdk)
             module.exit_json(changed=True)
