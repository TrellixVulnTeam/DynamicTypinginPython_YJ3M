commit c3372936aae795cbe7132c428edbe04a57c683a7
Author: Brian Coca <bcoca@ansible.com>
Date:   Sun Aug 16 02:18:21 2015 -0400

    diff can now be a list

diff --git a/lib/ansible/plugins/callback/__init__.py b/lib/ansible/plugins/callback/__init__.py
index 8c3edcaecc..25bc1a72ac 100644
--- a/lib/ansible/plugins/callback/__init__.py
+++ b/lib/ansible/plugins/callback/__init__.py
@@ -72,34 +72,40 @@ class CallbackBase:
             for warning in res['warnings']:
                 self._display.warning(warning)
 
-    def _get_diff(self, diff):
-        try:
-            with warnings.catch_warnings():
-                warnings.simplefilter('ignore')
-                ret = []
-                if 'dst_binary' in diff:
-                    ret.append("diff skipped: destination file appears to be binary\n")
-                if 'src_binary' in diff:
-                    ret.append("diff skipped: source file appears to be binary\n")
-                if 'dst_larger' in diff:
-                    ret.append("diff skipped: destination file size is greater than %d\n" % diff['dst_larger'])
-                if 'src_larger' in diff:
-                    ret.append("diff skipped: source file size is greater than %d\n" % diff['src_larger'])
-                if 'before' in diff and 'after' in diff:
-                    if 'before_header' in diff:
-                        before_header = "before: %s" % diff['before_header']
-                    else:
-                        before_header = 'before'
-                    if 'after_header' in diff:
-                        after_header = "after: %s" % diff['after_header']
-                    else:
-                        after_header = 'after'
-                    differ = difflib.unified_diff(to_unicode(diff['before']).splitlines(True), to_unicode(diff['after']).splitlines(True), before_header, after_header, '', '', 10)
-                    for line in list(differ):
-                        ret.append(line)
-                return u"".join(ret)
-        except UnicodeDecodeError:
-            return ">> the files are different, but the diff library cannot compare unicode strings"
+    def _get_diff(self, difflist):
+
+        if not isinstance(difflist, list):
+            difflist = [difflist]
+
+        ret = []
+        for diff in difflist:
+            try:
+                with warnings.catch_warnings():
+                    warnings.simplefilter('ignore')
+                    ret = []
+                    if 'dst_binary' in diff:
+                        ret.append("diff skipped: destination file appears to be binary\n")
+                    if 'src_binary' in diff:
+                        ret.append("diff skipped: source file appears to be binary\n")
+                    if 'dst_larger' in diff:
+                        ret.append("diff skipped: destination file size is greater than %d\n" % diff['dst_larger'])
+                    if 'src_larger' in diff:
+                        ret.append("diff skipped: source file size is greater than %d\n" % diff['src_larger'])
+                    if 'before' in diff and 'after' in diff:
+                        if 'before_header' in diff:
+                            before_header = "before: %s" % diff['before_header']
+                        else:
+                            before_header = 'before'
+                        if 'after_header' in diff:
+                            after_header = "after: %s" % diff['after_header']
+                        else:
+                            after_header = 'after'
+                        differ = difflib.unified_diff(to_unicode(diff['before']).splitlines(True), to_unicode(diff['after']).splitlines(True), before_header, after_header, '', '', 10)
+                        ret.extend(list(differ))
+                        ret.append('\n')
+                    return u"".join(ret)
+            except UnicodeDecodeError:
+                ret.append(">> the files are different, but the diff library cannot compare unicode strings\n\n")
 
     def _process_items(self, result):
 
