commit 74f20ebf7939f8270ed69ed2694ce81e302964dd
Author: James Cammarata <jimi@sngx.net>
Date:   Tue Jun 3 13:33:26 2014 -0500

    Removing cruft leftover from the deprecation of include+with_items
    
    Also cleaning up integration tests that had checks for the empty item
    attribute in certain results.
    
    Fixes #7535

diff --git a/lib/ansible/playbook/play.py b/lib/ansible/playbook/play.py
index e4a44ad6c3..d2a09ec6ab 100644
--- a/lib/ansible/playbook/play.py
+++ b/lib/ansible/playbook/play.py
@@ -526,7 +526,6 @@ class Play(object):
 
             if 'include' in x:
                 tokens = shlex.split(str(x['include']))
-                items = ['']
                 included_additional_conditions = list(additional_conditions)
                 include_vars = {}
                 for k in x:
@@ -572,24 +571,22 @@ class Play(object):
                 if 'role_name' in x:
                     new_role = x['role_name']
 
-                for item in items:
-                    mv = task_vars.copy()
-                    mv['item'] = item
-                    for t in tokens[1:]:
-                        (k,v) = t.split("=", 1)
-                        mv[k] = template(self.basedir, v, mv)
-                    dirname = self.basedir
-                    if original_file:
-                        dirname = os.path.dirname(original_file)
-                    include_file = template(dirname, tokens[0], mv)
-                    include_filename = utils.path_dwim(dirname, include_file)
-                    data = utils.parse_yaml_from_file(include_filename, vault_password=self.vault_password)
-                    if 'role_name' in x and data is not None:
-                        for y in data:
-                            if isinstance(y, dict) and 'include' in y:
-                                y['role_name'] = new_role
-                    loaded = self._load_tasks(data, mv, default_vars, included_sudo_vars, list(included_additional_conditions), original_file=include_filename, role_name=new_role)
-                    results += loaded
+                mv = task_vars.copy()
+                for t in tokens[1:]:
+                    (k,v) = t.split("=", 1)
+                    mv[k] = template(self.basedir, v, mv)
+                dirname = self.basedir
+                if original_file:
+                    dirname = os.path.dirname(original_file)
+                include_file = template(dirname, tokens[0], mv)
+                include_filename = utils.path_dwim(dirname, include_file)
+                data = utils.parse_yaml_from_file(include_filename, vault_password=self.vault_password)
+                if 'role_name' in x and data is not None:
+                    for y in data:
+                        if isinstance(y, dict) and 'include' in y:
+                            y['role_name'] = new_role
+                loaded = self._load_tasks(data, mv, default_vars, included_sudo_vars, list(included_additional_conditions), original_file=include_filename, role_name=new_role)
+                results += loaded
             elif type(x) == dict:
                 task = Task(
                     self, x,
diff --git a/test/integration/roles/test_apt/tasks/apt.yml b/test/integration/roles/test_apt/tasks/apt.yml
index be0facdf09..d1cdeeb1a2 100644
--- a/test/integration/roles/test_apt/tasks/apt.yml
+++ b/test/integration/roles/test_apt/tasks/apt.yml
@@ -63,7 +63,6 @@
     that:
         - "'invocation' in apt_result"
         - "'changed' in apt_result"
-        - "'item' in apt_result"
         - "'stderr' in apt_result"
         - "'stdout' in apt_result"
         - "'stdout_lines' in apt_result"
diff --git a/test/integration/roles/test_async/tasks/main.yml b/test/integration/roles/test_async/tasks/main.yml
index 502140599f..b83227791b 100644
--- a/test/integration/roles/test_async/tasks/main.yml
+++ b/test/integration/roles/test_async/tasks/main.yml
@@ -35,7 +35,6 @@
         - "'end' in async_result"
         - "'finished' in async_result"
         - "'invocation' in async_result"
-        - "'item' in async_result"
         - "'rc' in async_result"
         - "'start' in async_result"
         - "'stderr' in async_result"
diff --git a/test/integration/roles/test_ec2_group/tasks/main.yml b/test/integration/roles/test_ec2_group/tasks/main.yml
index b2be85d58e..7558b8e5d1 100644
--- a/test/integration/roles/test_ec2_group/tasks/main.yml
+++ b/test/integration/roles/test_ec2_group/tasks/main.yml
@@ -191,7 +191,6 @@
     that:
        - 'result.changed'
        - 'result.group_id.startswith("sg-")'
-       - 'result.item == ""'
 
 # ============================================================
 - name: test state=present (expected changed=false)
@@ -209,7 +208,6 @@
     that:
        - 'not result.changed'
        - 'result.group_id.startswith("sg-")'
-       - 'result.item == ""'
 
 # ============================================================
 - name: test state=absent (expected changed=true)
@@ -228,7 +226,6 @@
     that:
        - 'result.changed'
        - 'not result.group_id'
-       - 'result.item == ""'
 
 # ============================================================
 - name: test state=absent (expected changed=false)
@@ -247,4 +244,3 @@
     that:
        - 'not result.changed'
        - 'not result.group_id'
-       - 'result.item == ""'
diff --git a/test/integration/roles/test_yum/tasks/yum.yml b/test/integration/roles/test_yum/tasks/yum.yml
index 316b8b3a77..6630a2ff4c 100644
--- a/test/integration/roles/test_yum/tasks/yum.yml
+++ b/test/integration/roles/test_yum/tasks/yum.yml
@@ -69,7 +69,6 @@
     that:
         - "'invocation' in yum_result"
         - "'changed' in yum_result"
-        - "'item' in yum_result"
         - "'msg' in yum_result"
         - "'rc' in yum_result"
         - "'results' in yum_result"
