commit 17f7e6162a63b6659bce5b8cb5e7f0875ffbd8a4
Author: Sandra Wills <docschick@ansible.com>
Date:   Fri Feb 19 10:16:59 2016 -0500

    playbook variables precedence list light edits
    
    QA had asked me a while ago to clean up the way the precedence list for 1.x was worded,
    as the intro from the list started with "then", as if something should preceed it. The
    comments from OxABAB were not helpful, but his issue reminded me that this was on my to
    do list to make a little cleaner and clearer.  Edits made to remove the "then"
    intros for each list line, to help with clarity.

diff --git a/docsite/rst/playbooks_variables.rst b/docsite/rst/playbooks_variables.rst
index 122c0ef923..23ec83c43c 100644
--- a/docsite/rst/playbooks_variables.rst
+++ b/docsite/rst/playbooks_variables.rst
@@ -758,19 +758,18 @@ If multiple variables of the same name are defined in different places, they get
 
 .. include:: ansible_ssh_changes_note.rst
 
-In 1.x the precedence is (last listed wins):
+In 1.x, the precedence is as follows (and last listed wins prioritization):
 
- * then "role defaults", which are the most "defaulty" and lose in priority to everything.
- * then come the variables defined in inventory
- * then come the facts discovered about a system
- * then comes "most everything else" (command line switches, vars in play, included vars, role vars, etc)
- * then come connection variables (``ansible_user``, etc)
+ * "role defaults", which lose in priority to everything
+ * variables defined in inventory
+ * facts discovered about a system
+ * "most everything else" (command line switches, vars in play, included vars, role vars, etc.)
+ * connection variables (``ansible_user``, etc.)
  * extra vars (``-e`` in the command line) always win
 
 .. note:: In versions prior to 1.5.4, facts discovered about a system were in the "most everything else" category above.
 
-
-In 2.x we have made the order of precedence more specific (last listed wins):
+In 2.x we have made the order of precedence more specific (and last listed wins prioritization):
 
   * role defaults [1]_
   * inventory vars [2]_
