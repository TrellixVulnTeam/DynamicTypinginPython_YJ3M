commit b807ff86d26a387a32e0cd1a815e1480609a5890
Author: Hongkun Yu <hongkuny@google.com>
Date:   Wed May 6 21:30:50 2020 -0700

    tensorflow.compat.v2 is no longer needed.
    
    PiperOrigin-RevId: 310289012

diff --git a/official/vision/detection/dataloader/anchor.py b/official/vision/detection/dataloader/anchor.py
index bb7fca8b..f46f7480 100644
--- a/official/vision/detection/dataloader/anchor.py
+++ b/official/vision/detection/dataloader/anchor.py
@@ -19,7 +19,7 @@ from __future__ import division
 from __future__ import print_function
 
 import collections
-import tensorflow.compat.v2 as tf
+import tensorflow as tf
 from official.vision.detection.utils.object_detection import argmax_matcher
 from official.vision.detection.utils.object_detection import balanced_positive_negative_sampler
 from official.vision.detection.utils.object_detection import box_list
diff --git a/official/vision/detection/dataloader/input_reader.py b/official/vision/detection/dataloader/input_reader.py
index 5c188c9f..d88d801b 100644
--- a/official/vision/detection/dataloader/input_reader.py
+++ b/official/vision/detection/dataloader/input_reader.py
@@ -19,7 +19,7 @@ from __future__ import division
 # from __future__ import google_type_annotations
 from __future__ import print_function
 
-import tensorflow.compat.v2 as tf
+import tensorflow as tf
 
 from typing import Text, Optional
 from official.modeling.hyperparams import params_dict
diff --git a/official/vision/detection/dataloader/maskrcnn_parser.py b/official/vision/detection/dataloader/maskrcnn_parser.py
index 0f446190..933e1b75 100644
--- a/official/vision/detection/dataloader/maskrcnn_parser.py
+++ b/official/vision/detection/dataloader/maskrcnn_parser.py
@@ -14,7 +14,7 @@
 # ==============================================================================
 """Data parser and processing for Mask R-CNN."""
 
-import tensorflow.compat.v2 as tf
+import tensorflow as tf
 
 from official.vision.detection.dataloader import anchor
 from official.vision.detection.dataloader import mode_keys as ModeKeys
diff --git a/official/vision/detection/dataloader/retinanet_parser.py b/official/vision/detection/dataloader/retinanet_parser.py
index 8f37bc9a..d226a6da 100644
--- a/official/vision/detection/dataloader/retinanet_parser.py
+++ b/official/vision/detection/dataloader/retinanet_parser.py
@@ -21,12 +21,11 @@ T.-Y. Lin, P. Goyal, R. Girshick, K. He,  and P. Dollar
 Focal Loss for Dense Object Detection. arXiv:1708.02002
 """
 
-import tensorflow.compat.v2 as tf
+import tensorflow as tf
 
 from official.vision.detection.dataloader import anchor
 from official.vision.detection.dataloader import mode_keys as ModeKeys
 from official.vision.detection.dataloader import tf_example_decoder
-from official.vision.detection.utils import autoaugment_utils
 from official.vision.detection.utils import box_utils
 from official.vision.detection.utils import input_utils
 
@@ -217,12 +216,6 @@ class Parser(object):
     # Gets original image and its size.
     image = data['image']
 
-    # NOTE: The autoaugment method works best when used alongside the standard
-    # horizontal flipping of images along with size jittering and normalization.
-    if self._use_autoaugment:
-      image, boxes = autoaugment_utils.distort_image_with_autoaugment(
-          image, boxes, self._autoaugment_policy_name)
-
     image_shape = tf.shape(input=image)[0:2]
 
     # Normalizes image with mean and std pixel values.
diff --git a/official/vision/detection/dataloader/tf_example_decoder.py b/official/vision/detection/dataloader/tf_example_decoder.py
index a4b8124d..f719a916 100644
--- a/official/vision/detection/dataloader/tf_example_decoder.py
+++ b/official/vision/detection/dataloader/tf_example_decoder.py
@@ -18,7 +18,7 @@
 A decoder to decode string tensors containing serialized tensorflow.Example
 protos for object detection.
 """
-import tensorflow.compat.v2 as tf
+import tensorflow as tf
 
 
 class TfExampleDecoder(object):
diff --git a/official/vision/detection/evaluation/coco_evaluator.py b/official/vision/detection/evaluation/coco_evaluator.py
index 6413faa2..dc56a933 100644
--- a/official/vision/detection/evaluation/coco_evaluator.py
+++ b/official/vision/detection/evaluation/coco_evaluator.py
@@ -36,7 +36,7 @@ import numpy as np
 from absl import logging
 from pycocotools import cocoeval
 import six
-import tensorflow.compat.v2 as tf
+import tensorflow as tf
 
 from official.vision.detection.evaluation import coco_utils
 from official.vision.detection.utils import class_utils
diff --git a/official/vision/detection/evaluation/coco_utils.py b/official/vision/detection/evaluation/coco_utils.py
index 7c634493..8155d1fb 100644
--- a/official/vision/detection/evaluation/coco_utils.py
+++ b/official/vision/detection/evaluation/coco_utils.py
@@ -27,7 +27,7 @@ from PIL import Image
 from pycocotools import coco
 from pycocotools import mask as mask_api
 import six
-import tensorflow.compat.v2 as tf
+import tensorflow as tf
 
 from official.vision.detection.dataloader import tf_example_decoder
 from official.vision.detection.utils import box_utils
diff --git a/official/vision/detection/executor/detection_executor.py b/official/vision/detection/executor/detection_executor.py
index 799a239b..26ff028c 100644
--- a/official/vision/detection/executor/detection_executor.py
+++ b/official/vision/detection/executor/detection_executor.py
@@ -21,7 +21,7 @@ from __future__ import print_function
 
 from absl import logging
 
-import tensorflow.compat.v2 as tf
+import tensorflow as tf
 from official.modeling.training import distributed_executor as executor
 from official.vision.detection.utils.object_detection import visualization_utils
 
diff --git a/official/vision/detection/main.py b/official/vision/detection/main.py
index 6b63c741..89a25c46 100644
--- a/official/vision/detection/main.py
+++ b/official/vision/detection/main.py
@@ -25,7 +25,7 @@ from absl import logging
 import functools
 import os
 import pprint
-import tensorflow.compat.v2 as tf
+import tensorflow as tf
 
 from official.modeling.hyperparams import params_dict
 from official.modeling.training import distributed_executor as executor
diff --git a/official/vision/detection/modeling/architecture/fpn.py b/official/vision/detection/modeling/architecture/fpn.py
index 3b903d2e..b968dc2e 100644
--- a/official/vision/detection/modeling/architecture/fpn.py
+++ b/official/vision/detection/modeling/architecture/fpn.py
@@ -26,7 +26,7 @@ from __future__ import print_function
 
 import functools
 
-import tensorflow.compat.v2 as tf
+import tensorflow as tf
 
 from tensorflow.python.keras import backend
 from official.vision.detection.modeling.architecture import nn_ops
diff --git a/official/vision/detection/modeling/architecture/heads.py b/official/vision/detection/modeling/architecture/heads.py
index 92db2537..1b1a338c 100644
--- a/official/vision/detection/modeling/architecture/heads.py
+++ b/official/vision/detection/modeling/architecture/heads.py
@@ -23,7 +23,7 @@ import pickle
 
 from absl import logging
 import numpy as np
-import tensorflow.compat.v2 as tf
+import tensorflow as tf
 from tensorflow.python.keras import backend
 from official.vision.detection.modeling.architecture import nn_ops
 from official.vision.detection.ops import spatial_transform_ops
diff --git a/official/vision/detection/modeling/architecture/nn_ops.py b/official/vision/detection/modeling/architecture/nn_ops.py
index 1ec68606..e3e2e0ea 100644
--- a/official/vision/detection/modeling/architecture/nn_ops.py
+++ b/official/vision/detection/modeling/architecture/nn_ops.py
@@ -20,7 +20,7 @@ from __future__ import print_function
 
 import functools
 from absl import logging
-import tensorflow.compat.v2 as tf
+import tensorflow as tf
 
 
 class NormActivation(tf.keras.layers.Layer):
diff --git a/official/vision/detection/modeling/architecture/resnet.py b/official/vision/detection/modeling/architecture/resnet.py
index 20bcc227..abbc7213 100644
--- a/official/vision/detection/modeling/architecture/resnet.py
+++ b/official/vision/detection/modeling/architecture/resnet.py
@@ -24,7 +24,7 @@ from __future__ import division
 from __future__ import print_function
 
 from absl import logging
-import tensorflow.compat.v2 as tf
+import tensorflow as tf
 from tensorflow.python.keras import backend
 from official.vision.detection.modeling.architecture import nn_ops
 
diff --git a/official/vision/detection/modeling/base_model.py b/official/vision/detection/modeling/base_model.py
index 92ded096..8d18f12f 100644
--- a/official/vision/detection/modeling/base_model.py
+++ b/official/vision/detection/modeling/base_model.py
@@ -21,7 +21,7 @@ from __future__ import print_function
 import abc
 import functools
 import re
-import tensorflow.compat.v2 as tf
+import tensorflow as tf
 from official.vision.detection.modeling import checkpoint_utils
 from official.vision.detection.modeling import learning_rates
 from official.vision.detection.modeling import optimizers
diff --git a/official/vision/detection/modeling/checkpoint_utils.py b/official/vision/detection/modeling/checkpoint_utils.py
index a4346e68..1bb79839 100644
--- a/official/vision/detection/modeling/checkpoint_utils.py
+++ b/official/vision/detection/modeling/checkpoint_utils.py
@@ -24,7 +24,7 @@ from __future__ import print_function
 import re
 from absl import logging
 
-import tensorflow.compat.v2 as tf
+import tensorflow as tf
 
 
 def _build_assignment_map(keras_model,
diff --git a/official/vision/detection/modeling/learning_rates.py b/official/vision/detection/modeling/learning_rates.py
index 9a9a8f19..ecc24ffa 100644
--- a/official/vision/detection/modeling/learning_rates.py
+++ b/official/vision/detection/modeling/learning_rates.py
@@ -21,7 +21,7 @@ from __future__ import print_function
 import functools
 
 import numpy as np
-import tensorflow.compat.v2 as tf
+import tensorflow as tf
 from official.modeling.hyperparams import params_dict
 
 
diff --git a/official/vision/detection/modeling/losses.py b/official/vision/detection/modeling/losses.py
index 3f09916a..21abb9f8 100644
--- a/official/vision/detection/modeling/losses.py
+++ b/official/vision/detection/modeling/losses.py
@@ -19,7 +19,7 @@ from __future__ import division
 from __future__ import print_function
 
 from absl import logging
-import tensorflow.compat.v2 as tf
+import tensorflow as tf
 
 
 def focal_loss(logits, targets, alpha, gamma, normalizer):
diff --git a/official/vision/detection/modeling/maskrcnn_model.py b/official/vision/detection/modeling/maskrcnn_model.py
index 47876f42..e5cbe7d5 100644
--- a/official/vision/detection/modeling/maskrcnn_model.py
+++ b/official/vision/detection/modeling/maskrcnn_model.py
@@ -18,7 +18,7 @@ from __future__ import absolute_import
 from __future__ import division
 from __future__ import print_function
 
-import tensorflow.compat.v2 as tf
+import tensorflow as tf
 
 from tensorflow.python.keras import backend
 from official.vision.detection.dataloader import anchor
diff --git a/official/vision/detection/modeling/optimizers.py b/official/vision/detection/modeling/optimizers.py
index 395450e2..fd51bb59 100644
--- a/official/vision/detection/modeling/optimizers.py
+++ b/official/vision/detection/modeling/optimizers.py
@@ -21,7 +21,7 @@ from __future__ import print_function
 import functools
 
 import numpy as np
-import tensorflow.compat.v2 as tf
+import tensorflow as tf
 
 
 class OptimizerFactory(object):
diff --git a/official/vision/detection/modeling/retinanet_model.py b/official/vision/detection/modeling/retinanet_model.py
index 5b49c22b..c31cf345 100644
--- a/official/vision/detection/modeling/retinanet_model.py
+++ b/official/vision/detection/modeling/retinanet_model.py
@@ -21,7 +21,7 @@ from __future__ import print_function
 import collections
 import numpy as np
 from absl import logging
-import tensorflow.compat.v2 as tf
+import tensorflow as tf
 
 from tensorflow.python.keras import backend
 from official.vision.detection.dataloader import mode_keys
diff --git a/official/vision/detection/ops/nms.py b/official/vision/detection/ops/nms.py
index c6efeadf..bc516e59 100644
--- a/official/vision/detection/ops/nms.py
+++ b/official/vision/detection/ops/nms.py
@@ -18,7 +18,7 @@ from __future__ import absolute_import
 from __future__ import division
 from __future__ import print_function
 
-import tensorflow.compat.v2 as tf
+import tensorflow as tf
 
 from official.vision.detection.utils import box_utils
 
diff --git a/official/vision/detection/ops/postprocess_ops.py b/official/vision/detection/ops/postprocess_ops.py
index ef437bf0..f05bf109 100644
--- a/official/vision/detection/ops/postprocess_ops.py
+++ b/official/vision/detection/ops/postprocess_ops.py
@@ -19,7 +19,7 @@ from __future__ import division
 from __future__ import print_function
 
 import functools
-import tensorflow.compat.v2 as tf
+import tensorflow as tf
 
 from official.vision.detection.ops import nms
 from official.vision.detection.utils import box_utils
diff --git a/official/vision/detection/ops/roi_ops.py b/official/vision/detection/ops/roi_ops.py
index 2eab2778..a21bc7b2 100644
--- a/official/vision/detection/ops/roi_ops.py
+++ b/official/vision/detection/ops/roi_ops.py
@@ -18,7 +18,7 @@ from __future__ import absolute_import
 from __future__ import division
 from __future__ import print_function
 
-import tensorflow.compat.v2 as tf
+import tensorflow as tf
 
 from official.vision.detection.ops import nms
 from official.vision.detection.utils import box_utils
diff --git a/official/vision/detection/ops/spatial_transform_ops.py b/official/vision/detection/ops/spatial_transform_ops.py
index 60ef494a..ae60d20f 100644
--- a/official/vision/detection/ops/spatial_transform_ops.py
+++ b/official/vision/detection/ops/spatial_transform_ops.py
@@ -18,7 +18,7 @@ from __future__ import absolute_import
 from __future__ import division
 from __future__ import print_function
 
-import tensorflow.compat.v2 as tf
+import tensorflow as tf
 
 
 _EPSILON = 1e-8
diff --git a/official/vision/detection/ops/target_ops.py b/official/vision/detection/ops/target_ops.py
index 487a4e24..2a7d6856 100644
--- a/official/vision/detection/ops/target_ops.py
+++ b/official/vision/detection/ops/target_ops.py
@@ -18,7 +18,7 @@ from __future__ import absolute_import
 from __future__ import division
 from __future__ import print_function
 
-import tensorflow.compat.v2 as tf
+import tensorflow as tf
 
 from official.vision.detection.ops import spatial_transform_ops
 from official.vision.detection.utils import box_utils
diff --git a/official/vision/detection/utils/autoaugment_utils.py b/official/vision/detection/utils/autoaugment_utils.py
deleted file mode 100644
index d16c9fa0..00000000
--- a/official/vision/detection/utils/autoaugment_utils.py
+++ /dev/null
@@ -1,25 +0,0 @@
-# Copyright 2019 The TensorFlow Authors. All Rights Reserved.
-#
-# Licensed under the Apache License, Version 2.0 (the "License");
-# you may not use this file except in compliance with the License.
-# You may obtain a copy of the License at
-#
-#     http://www.apache.org/licenses/LICENSE-2.0
-#
-# Unless required by applicable law or agreed to in writing, software
-# distributed under the License is distributed on an "AS IS" BASIS,
-# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-# See the License for the specific language governing permissions and
-# limitations under the License.
-# ==============================================================================
-"""AutoAugment util file."""
-
-from __future__ import absolute_import
-from __future__ import division
-from __future__ import print_function
-
-import tensorflow.compat.v2 as tf
-
-
-def distort_image_with_autoaugment(image, bboxes, augmentation_name):
-  raise NotImplementedError("Not TF 2.0 ready.")
diff --git a/official/vision/detection/utils/box_utils.py b/official/vision/detection/utils/box_utils.py
index cd31b393..4c2ebf57 100644
--- a/official/vision/detection/utils/box_utils.py
+++ b/official/vision/detection/utils/box_utils.py
@@ -20,7 +20,7 @@ from __future__ import division
 from __future__ import print_function
 
 import numpy as np
-import tensorflow.compat.v2 as tf
+import tensorflow as tf
 
 EPSILON = 1e-8
 BBOX_XFORM_CLIP = np.log(1000. / 16.)
diff --git a/official/vision/detection/utils/dataloader_utils.py b/official/vision/detection/utils/dataloader_utils.py
index 59b45d6f..da822035 100644
--- a/official/vision/detection/utils/dataloader_utils.py
+++ b/official/vision/detection/utils/dataloader_utils.py
@@ -14,7 +14,7 @@
 # ==============================================================================
 """Utility functions for dataloader."""
 
-import tensorflow.compat.v2 as tf
+import tensorflow as tf
 
 from official.vision.detection.utils import input_utils
 
diff --git a/official/vision/detection/utils/object_detection/argmax_matcher.py b/official/vision/detection/utils/object_detection/argmax_matcher.py
index b433eb4a..3f8b051b 100644
--- a/official/vision/detection/utils/object_detection/argmax_matcher.py
+++ b/official/vision/detection/utils/object_detection/argmax_matcher.py
@@ -26,7 +26,7 @@ This matcher is used in Fast(er)-RCNN.
 Note: matchers are used in TargetAssigners. There is a create_target_assigner
 factory function for popular implementations.
 """
-import tensorflow.compat.v2 as tf
+import tensorflow as tf
 
 from official.vision.detection.utils.object_detection import matcher
 from official.vision.detection.utils.object_detection import shape_utils
diff --git a/official/vision/detection/utils/object_detection/balanced_positive_negative_sampler.py b/official/vision/detection/utils/object_detection/balanced_positive_negative_sampler.py
index fec123e0..f969182b 100644
--- a/official/vision/detection/utils/object_detection/balanced_positive_negative_sampler.py
+++ b/official/vision/detection/utils/object_detection/balanced_positive_negative_sampler.py
@@ -32,7 +32,7 @@ when number of examples set to True in indicator is less than batch_size.
 This is originally implemented in TensorFlow Object Detection API.
 """
 
-import tensorflow.compat.v2 as tf
+import tensorflow as tf
 
 from official.vision.detection.utils.object_detection import minibatch_sampler
 from official.vision.detection.utils.object_detection import ops
diff --git a/official/vision/detection/utils/object_detection/box_coder.py b/official/vision/detection/utils/object_detection/box_coder.py
index 1b89bb81..f20ac956 100644
--- a/official/vision/detection/utils/object_detection/box_coder.py
+++ b/official/vision/detection/utils/object_detection/box_coder.py
@@ -30,7 +30,7 @@ from abc import ABCMeta
 from abc import abstractmethod
 from abc import abstractproperty
 
-import tensorflow.compat.v2 as tf
+import tensorflow as tf
 
 
 # Box coder types.
diff --git a/official/vision/detection/utils/object_detection/box_list.py b/official/vision/detection/utils/object_detection/box_list.py
index 7c4da99f..113fab8c 100644
--- a/official/vision/detection/utils/object_detection/box_list.py
+++ b/official/vision/detection/utils/object_detection/box_list.py
@@ -34,7 +34,7 @@ Some other notes:
   * Tensors are always provided as (flat) [N, 4] tensors.
 """
 
-import tensorflow.compat.v2 as tf
+import tensorflow as tf
 
 
 class BoxList(object):
diff --git a/official/vision/detection/utils/object_detection/box_list_ops.py b/official/vision/detection/utils/object_detection/box_list_ops.py
index 2299f2be..9f1b06e2 100644
--- a/official/vision/detection/utils/object_detection/box_list_ops.py
+++ b/official/vision/detection/utils/object_detection/box_list_ops.py
@@ -28,7 +28,7 @@ from __future__ import division
 from __future__ import print_function
 
 from six.moves import range
-import tensorflow.compat.v2 as tf
+import tensorflow as tf
 
 from official.vision.detection.utils.object_detection import box_list
 from official.vision.detection.utils.object_detection import ops
diff --git a/official/vision/detection/utils/object_detection/faster_rcnn_box_coder.py b/official/vision/detection/utils/object_detection/faster_rcnn_box_coder.py
index 2472f57c..235df4ed 100644
--- a/official/vision/detection/utils/object_detection/faster_rcnn_box_coder.py
+++ b/official/vision/detection/utils/object_detection/faster_rcnn_box_coder.py
@@ -28,7 +28,7 @@ Faster RCNN box coder follows the coding schema described below:
   See http://arxiv.org/abs/1506.01497 for details.
 """
 
-import tensorflow.compat.v2 as tf
+import tensorflow as tf
 
 from official.vision.detection.utils.object_detection import box_coder
 from official.vision.detection.utils.object_detection import box_list
diff --git a/official/vision/detection/utils/object_detection/matcher.py b/official/vision/detection/utils/object_detection/matcher.py
index 9effb714..4a025d5e 100644
--- a/official/vision/detection/utils/object_detection/matcher.py
+++ b/official/vision/detection/utils/object_detection/matcher.py
@@ -34,7 +34,7 @@ to query the results.
 from abc import ABCMeta
 from abc import abstractmethod
 
-import tensorflow.compat.v2 as tf
+import tensorflow as tf
 
 
 class Match(object):
diff --git a/official/vision/detection/utils/object_detection/minibatch_sampler.py b/official/vision/detection/utils/object_detection/minibatch_sampler.py
index 1e92801e..b9f529ab 100644
--- a/official/vision/detection/utils/object_detection/minibatch_sampler.py
+++ b/official/vision/detection/utils/object_detection/minibatch_sampler.py
@@ -33,7 +33,7 @@ This is originally implemented in TensorFlow Object Detection API.
 from abc import ABCMeta
 from abc import abstractmethod
 
-import tensorflow.compat.v2 as tf
+import tensorflow as tf
 
 from official.vision.detection.utils.object_detection import ops
 
diff --git a/official/vision/detection/utils/object_detection/ops.py b/official/vision/detection/utils/object_detection/ops.py
index 683d8568..bbfc1ae9 100644
--- a/official/vision/detection/utils/object_detection/ops.py
+++ b/official/vision/detection/utils/object_detection/ops.py
@@ -18,7 +18,7 @@
 This is originally implemented in TensorFlow Object Detection API.
 """
 
-import tensorflow.compat.v2 as tf
+import tensorflow as tf
 
 from official.vision.detection.utils.object_detection import shape_utils
 
diff --git a/official/vision/detection/utils/object_detection/preprocessor.py b/official/vision/detection/utils/object_detection/preprocessor.py
index a37f3912..55da5d2d 100644
--- a/official/vision/detection/utils/object_detection/preprocessor.py
+++ b/official/vision/detection/utils/object_detection/preprocessor.py
@@ -39,7 +39,7 @@ we pass it to the functions. At the end of the preprocess we expand the image
 back to rank 4.
 """
 
-import tensorflow.compat.v2 as tf
+import tensorflow as tf
 
 import numpy as np
 
diff --git a/official/vision/detection/utils/object_detection/region_similarity_calculator.py b/official/vision/detection/utils/object_detection/region_similarity_calculator.py
index f5f1d694..0af2ce49 100644
--- a/official/vision/detection/utils/object_detection/region_similarity_calculator.py
+++ b/official/vision/detection/utils/object_detection/region_similarity_calculator.py
@@ -21,7 +21,7 @@ between the boxes in two BoxLists.
 from abc import ABCMeta
 from abc import abstractmethod
 
-import tensorflow.compat.v2 as tf
+import tensorflow as tf
 
 
 def area(boxlist, scope=None):
diff --git a/official/vision/detection/utils/object_detection/shape_utils.py b/official/vision/detection/utils/object_detection/shape_utils.py
index bff3bf29..e30b62b7 100644
--- a/official/vision/detection/utils/object_detection/shape_utils.py
+++ b/official/vision/detection/utils/object_detection/shape_utils.py
@@ -15,7 +15,7 @@
 
 """Utils used to manipulate tensor shapes."""
 
-import tensorflow.compat.v2 as tf
+import tensorflow as tf
 
 
 def assert_shape_equal(shape_a, shape_b):
diff --git a/official/vision/detection/utils/object_detection/target_assigner.py b/official/vision/detection/utils/object_detection/target_assigner.py
index b9e20a7c..c04448ef 100644
--- a/official/vision/detection/utils/object_detection/target_assigner.py
+++ b/official/vision/detection/utils/object_detection/target_assigner.py
@@ -31,7 +31,7 @@ Note that TargetAssigners only operate on detections from a single
 image at a time, so any logic for applying a TargetAssigner to multiple
 images must be handled externally.
 """
-import tensorflow.compat.v2 as tf
+import tensorflow as tf
 
 from official.vision.detection.utils.object_detection import box_list
 from official.vision.detection.utils.object_detection import shape_utils
diff --git a/official/vision/detection/utils/object_detection/visualization_utils.py b/official/vision/detection/utils/object_detection/visualization_utils.py
index 6f7b8ad9..db4af808 100644
--- a/official/vision/detection/utils/object_detection/visualization_utils.py
+++ b/official/vision/detection/utils/object_detection/visualization_utils.py
@@ -31,7 +31,7 @@ import PIL.ImageColor as ImageColor
 import PIL.ImageDraw as ImageDraw
 import PIL.ImageFont as ImageFont
 import six
-import tensorflow.compat.v2 as tf
+import tensorflow as tf
 
 from official.vision.detection.utils import box_utils
 from official.vision.detection.utils.object_detection import shape_utils
