commit 50235dab34cd15f728367807fa776e06d2fcc1a4
Author: Raymond Yuan <ray.yuan0@gmail.com>
Date:   Tue Jul 31 15:34:35 2018 -0700

    update for kaggle api

diff --git a/samples/outreach/blogs/segmentation_blogpost/5_Image_Segmentation.ipynb b/samples/outreach/blogs/segmentation_blogpost/5_Image_Segmentation.ipynb
index 6af1cf82..dde369e5 100644
--- a/samples/outreach/blogs/segmentation_blogpost/5_Image_Segmentation.ipynb
+++ b/samples/outreach/blogs/segmentation_blogpost/5_Image_Segmentation.ipynb
@@ -1,5 +1,23 @@
 {
  "cells": [
+  {
+   "cell_type": "markdown",
+   "metadata": {},
+   "source": [
+    "# Finding visual objects in images - Image Segmentation with tf.keras "
+   ]
+  },
+  {
+   "cell_type": "markdown",
+   "metadata": {},
+   "source": [
+    "<table class=\"tfo-notebook-buttons\" align=\"left\"><td>\n",
+    "<a target=\"_blank\"  href=\"https://colab.research.google.com/github/tensorflow/tensorflow/blob/master/tensorflow/contrib/eager/python/examples/generative_examples/image_captioning_with_attention.ipynb\">\n",
+    "    <img src=\"https://www.tensorflow.org/images/colab_logo_32px.png\" />Run in Google Colab</a>  \n",
+    "</td><td>\n",
+    "<a target=\"_blank\"  href=\"https://github.com/tensorflow/tensorflow/tree/master/tensorflow/contrib/eager/python/examples/generative_examples/image_captioning_with_attention.ipynb\"><img width=32px src=\"https://www.tensorflow.org/images/GitHub-Mark-32px.png\" />View source on GitHub</a></td></table>"
+   ]
+  },
   {
    "cell_type": "markdown",
    "metadata": {
@@ -7,7 +25,6 @@
     "id": "cl79rk4KKol8"
    },
    "source": [
-    "# Finding visual objects in images - Image Segmentation with tf.keras \n",
     "In this tutorial we will learn how to segment images. **Segmentation** is the process of generating pixel-wise segmentations giving the class of the object visible at each pixel. For example, we could be identifying the location and boundaries of people within an image or identifying cell nuclei from an image. Formally, image segmentation refers to the process of partitioning an image into a set of pixels that we desire to identify (our target) and the background. \n",
     "\n",
     "Specifically, in this tutorial we will be using the [Kaggle Carvana Image Masking Challenge Dataset](https://www.kaggle.com/c/carvana-image-masking-challenge). \n",
@@ -93,7 +110,41 @@
     "id": "RW9gk331S0KA"
    },
    "source": [
-    "# Get all the files "
+    "# Get all the files \n",
+    "Since this tutorial will be using a dataset from Kaggle, it requires [creating an API Token](https://github.com/Kaggle/kaggle-api) for your Kaggle acccount, and uploading it. "
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": null,
+   "metadata": {},
+   "outputs": [],
+   "source": [
+    "import os\n",
+    "\n",
+    "# Upload the API token.\n",
+    "def get_kaggle_credentials():\n",
+    "  token_dir = os.path.join(os.path.expanduser(\"~\"),\".kaggle\")\n",
+    "  token_file = os.path.join(token_dir, \"kaggle.json\")\n",
+    "  if not os.path.isdir(token_dir):\n",
+    "    os.mkdir(token_dir)\n",
+    "  try:\n",
+    "    with open(token_file,'r') as f:\n",
+    "      pass\n",
+    "  except IOError as no_file:\n",
+    "    try:\n",
+    "      from google.colab import files\n",
+    "    except ImportError:\n",
+    "      raise no_file\n",
+    "    \n",
+    "    uploaded = files.upload()\n",
+    "    with open(token_file, \"w\") as f:\n",
+    "      f.write(uploaded[\"kaggle.json\"])\n",
+    "    os.chmod(token_file, 600)\n",
+    "\n",
+    "get_kaggle_credentials()\n",
+    "# Note: Only import kaggle after adding the credentials.\n",
+    "import kaggle"
    ]
   },
   {
