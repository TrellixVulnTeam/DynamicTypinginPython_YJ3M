commit 22e429a188f43061300e5d1b30ca050b034596d9
Author: Rohit Girdhar <grohit@cmu.edu>
Date:   Tue Oct 18 10:34:37 2016 -0400

    fix end point collection to return a dict

diff --git a/slim/nets/alexnet.py b/slim/nets/alexnet.py
index 7aca4875..a6b93de0 100644
--- a/slim/nets/alexnet.py
+++ b/slim/nets/alexnet.py
@@ -117,7 +117,7 @@ def alexnet_v2(inputs,
                           scope='fc8')
 
       # Convert end_points_collection into a end_point dict.
-      end_points = dict(tf.get_collection(end_points_collection))
+      end_points = slim.utils.convert_collection_to_dict(end_points_collection)
       if spatial_squeeze:
         net = tf.squeeze(net, [1, 2], name='fc8/squeezed')
         end_points[sc.name + '/fc8'] = net
diff --git a/slim/nets/overfeat.py b/slim/nets/overfeat.py
index 8ef566b7..0c8f45ce 100644
--- a/slim/nets/overfeat.py
+++ b/slim/nets/overfeat.py
@@ -110,7 +110,7 @@ def overfeat(inputs,
                           biases_initializer=tf.zeros_initializer,
                           scope='fc8')
       # Convert end_points_collection into a end_point dict.
-      end_points = dict(tf.get_collection(end_points_collection))
+      end_points = slim.utils.convert_collection_to_dict(end_points_collection)
       if spatial_squeeze:
         net = tf.squeeze(net, [1, 2], name='fc8/squeezed')
         end_points[sc.name + '/fc8'] = net
diff --git a/slim/nets/resnet_v1.py b/slim/nets/resnet_v1.py
index ce7f1476..03d49eda 100644
--- a/slim/nets/resnet_v1.py
+++ b/slim/nets/resnet_v1.py
@@ -198,7 +198,7 @@ def resnet_v1(inputs,
           net = slim.conv2d(net, num_classes, [1, 1], activation_fn=None,
                             normalizer_fn=None, scope='logits')
         # Convert end_points_collection into a dictionary of end_points.
-        end_points = dict(tf.get_collection(end_points_collection))
+        end_points = slim.utils.convert_collection_to_dict(end_points_collection)
         if num_classes is not None:
           end_points['predictions'] = slim.softmax(net, scope='predictions')
         return net, end_points
diff --git a/slim/nets/resnet_v2.py b/slim/nets/resnet_v2.py
index e8b7d306..9476db24 100644
--- a/slim/nets/resnet_v2.py
+++ b/slim/nets/resnet_v2.py
@@ -207,7 +207,7 @@ def resnet_v2(inputs,
           net = slim.conv2d(net, num_classes, [1, 1], activation_fn=None,
                             normalizer_fn=None, scope='logits')
         # Convert end_points_collection into a dictionary of end_points.
-        end_points = dict(tf.get_collection(end_points_collection))
+        end_points = slim.utils.convert_collection_to_dict(end_points_collection)
         if num_classes is not None:
           end_points['predictions'] = slim.softmax(net, scope='predictions')
         return net, end_points
diff --git a/slim/nets/vgg.py b/slim/nets/vgg.py
index 8c1821e9..c9a66e1b 100644
--- a/slim/nets/vgg.py
+++ b/slim/nets/vgg.py
@@ -114,7 +114,7 @@ def vgg_a(inputs,
                         normalizer_fn=None,
                         scope='fc8')
       # Convert end_points_collection into a end_point dict.
-      end_points = dict(tf.get_collection(end_points_collection))
+      end_points = slim.utils.convert_collection_to_dict(end_points_collection)
       if spatial_squeeze:
         net = tf.squeeze(net, [1, 2], name='fc8/squeezed')
         end_points[sc.name + '/fc8'] = net
@@ -173,7 +173,7 @@ def vgg_16(inputs,
                         normalizer_fn=None,
                         scope='fc8')
       # Convert end_points_collection into a end_point dict.
-      end_points = dict(tf.get_collection(end_points_collection))
+      end_points = slim.utils.convert_collection_to_dict(end_points_collection)
       if spatial_squeeze:
         net = tf.squeeze(net, [1, 2], name='fc8/squeezed')
         end_points[sc.name + '/fc8'] = net
@@ -232,7 +232,7 @@ def vgg_19(inputs,
                         normalizer_fn=None,
                         scope='fc8')
       # Convert end_points_collection into a end_point dict.
-      end_points = dict(tf.get_collection(end_points_collection))
+      end_points = slim.utils.convert_collection_to_dict(end_points_collection)
       if spatial_squeeze:
         net = tf.squeeze(net, [1, 2], name='fc8/squeezed')
         end_points[sc.name + '/fc8'] = net
