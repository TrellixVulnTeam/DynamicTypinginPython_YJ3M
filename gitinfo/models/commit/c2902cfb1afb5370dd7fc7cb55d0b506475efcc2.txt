commit c2902cfb1afb5370dd7fc7cb55d0b506475efcc2
Author: Pengchong Jin <pengchong@google.com>
Date:   Tue Nov 12 12:47:53 2019 -0800

    Add the sample offset option in mask interpolation.
    
    PiperOrigin-RevId: 280031944

diff --git a/official/vision/detection/ops/spatial_transform_ops.py b/official/vision/detection/ops/spatial_transform_ops.py
index 3638233f..267a555f 100644
--- a/official/vision/detection/ops/spatial_transform_ops.py
+++ b/official/vision/detection/ops/spatial_transform_ops.py
@@ -351,7 +351,11 @@ def single_level_feature_crop(features, level_boxes, detection_prior_levels,
   return crop_features
 
 
-def crop_mask_in_target_box(masks, boxes, target_boxes, output_size):
+def crop_mask_in_target_box(masks,
+                            boxes,
+                            target_boxes,
+                            output_size,
+                            sample_offset=0):
   """Crop masks in target boxes.
 
   Args:
@@ -364,6 +368,8 @@ def crop_mask_in_target_box(masks, boxes, target_boxes, output_size):
       coordinates. A box is represented by [ymin, xmin, ymax, xmax].
     output_size: A scalar to indicate the output crop size. It currently only
       supports to output a square shape outputs.
+    sample_offset: a float number in [0, 1] indicates the subpixel sample offset
+      from grid point.
 
   Returns:
     A 4-D tensor representing feature crop of shape
@@ -411,7 +417,7 @@ def crop_mask_in_target_box(masks, boxes, target_boxes, output_size):
         levels,
         boundaries,
         output_size,
-        sample_offset=0)
+        sample_offset=sample_offset)
     cropped_masks = tf.squeeze(cropped_masks, axis=-1)
 
   return cropped_masks
