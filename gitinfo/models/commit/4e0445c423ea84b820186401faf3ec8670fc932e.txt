commit 4e0445c423ea84b820186401faf3ec8670fc932e
Author: Raymond Yuan <ray.yuan0@gmail.com>
Date:   Wed Aug 1 16:14:36 2018 -0700

    update gitignore and title

diff --git a/.gitignore b/.gitignore
index 0bc32fbc..0cdbe453 100644
--- a/.gitignore
+++ b/.gitignore
@@ -90,3 +90,5 @@ ENV/
 
 # PyCharm
 .idea/
+
+samples/outreach/blogs/segmentation_blogpost/carvana-image-masking-challenge/
diff --git a/samples/outreach/blogs/segmentation_blogpost/5_Image_Segmentation.ipynb b/samples/outreach/blogs/segmentation_blogpost/Image Segmentation Blog Post.ipynb
similarity index 99%
rename from samples/outreach/blogs/segmentation_blogpost/5_Image_Segmentation.ipynb
rename to samples/outreach/blogs/segmentation_blogpost/Image Segmentation Blog Post.ipynb
index 64e9cf08..640e2ea8 100644
--- a/samples/outreach/blogs/segmentation_blogpost/5_Image_Segmentation.ipynb
+++ b/samples/outreach/blogs/segmentation_blogpost/Image Segmentation Blog Post.ipynb	
@@ -51,7 +51,9 @@
     "**Audience:** This post is geared towards intermediate users who are comfortable with basic machine learning concepts.\n",
     "Note that if you wish to run this notebook, it is highly recommended that you do so with a GPU. \n",
     "\n",
-    "**Time Estimated**: 60 min\n"
+    "**Time Estimated**: 60 min\n",
+    "\n",
+    "By: Raymond Yuan, Software Engineering Intern"
    ]
   },
   {
@@ -156,6 +158,15 @@
     "Caution, large download ahead - downloading all files will require 14GB of diskspace. "
    ]
   },
+  {
+   "cell_type": "code",
+   "execution_count": null,
+   "metadata": {},
+   "outputs": [],
+   "source": [
+    "competition_name = 'carvana-image-masking-challenge'"
+   ]
+  },
   {
    "cell_type": "code",
    "execution_count": null,
@@ -174,7 +185,6 @@
     "    load_data_from_zip(competition, 'train_masks.zip')\n",
     "    load_data_from_zip(competition, 'train_masks.csv.zip')\n",
     "    \n",
-    "competition_name = 'carvana-image-masking-challenge'\n",
     "get_data(competition_name)"
    ]
   },
@@ -1490,22 +1500,6 @@
     "* **Custom Losses and Metrics** - We implemented custom metrics that allow us to see exactly what we need during training time. In addition, we wrote a custom loss function that is specifically suited to our task.  \n",
     "* **Save and load our model** - We saved our best model that we encountered according to our specified metric. When we wanted to perform inference with out best model, we loaded it from disk. Note that saving the model capture more than just the weights of the model: by default, it saves the model architecture, weights, as well as information about the training process such as the state of the optimizer, etc. "
    ]
-  },
-  {
-   "cell_type": "code",
-   "execution_count": null,
-   "metadata": {
-    "colab": {
-     "autoexec": {
-      "startup": false,
-      "wait_interval": 0
-     }
-    },
-    "colab_type": "code",
-    "id": "ZnewDc0uc21r"
-   },
-   "outputs": [],
-   "source": []
   }
  ],
  "metadata": {
