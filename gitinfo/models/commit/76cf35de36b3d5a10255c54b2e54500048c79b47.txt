commit 76cf35de36b3d5a10255c54b2e54500048c79b47
Author: Neal Wu <neal@nealwu.com>
Date:   Tue Jun 6 12:39:45 2017 -0700

    Add named arguments to tf.concat and use conv2d instead of convolution2d

diff --git a/adversarial_crypto/train_eval.py b/adversarial_crypto/train_eval.py
index 570de938..09de7e51 100644
--- a/adversarial_crypto/train_eval.py
+++ b/adversarial_crypto/train_eval.py
@@ -128,13 +128,13 @@ class AdversarialCrypto(object):
     """
 
     if key is not None:
-      combined_message = tf.concat([message, key], 1)
+      combined_message = tf.concat(axis=1, values=[message, key])
     else:
       combined_message = message
 
     # Ensure that all variables created are in the specified collection.
     with tf.contrib.framework.arg_scope(
-        [tf.contrib.layers.fully_connected, tf.contrib.layers.convolution2d],
+        [tf.contrib.layers.fully_connected, tf.contrib.layers.conv2d],
         variables_collections=[collection]):
 
       fc = tf.contrib.layers.fully_connected(
@@ -147,13 +147,13 @@ class AdversarialCrypto(object):
       # and then squeezing it back down).
       fc = tf.expand_dims(fc, 2)
       # 2,1 -> 1,2
-      conv = tf.contrib.layers.convolution2d(
+      conv = tf.contrib.layers.conv2d(
           fc, 2, 2, 2, 'SAME', activation_fn=tf.nn.sigmoid)
       # 1,2 -> 1, 2
-      conv = tf.contrib.layers.convolution2d(
+      conv = tf.contrib.layers.conv2d(
           conv, 2, 1, 1, 'SAME', activation_fn=tf.nn.sigmoid)
       # 1,2 -> 1, 1
-      conv = tf.contrib.layers.convolution2d(
+      conv = tf.contrib.layers.conv2d(
           conv, 1, 1, 1, 'SAME', activation_fn=tf.nn.tanh)
       conv = tf.squeeze(conv, 2)
       return conv
