commit ec7fbf0d5858cf765f33e0c015dfa8ad56e3aa13
Author: Hongkun Yu <hongkuny@google.com>
Date:   Wed Apr 29 12:58:28 2020 -0700

    [Clean up] Move utils/logs to r1/utils.
    
    PiperOrigin-RevId: 309079916

diff --git a/official/r1/boosted_trees/train_higgs.py b/official/r1/boosted_trees/train_higgs.py
index d496a395..a89e4c22 100644
--- a/official/r1/boosted_trees/train_higgs.py
+++ b/official/r1/boosted_trees/train_higgs.py
@@ -45,16 +45,14 @@ from __future__ import print_function
 
 import os
 
-# pylint: disable=g-bad-import-order
-import numpy as np
 from absl import app as absl_app
 from absl import flags
+import numpy as np
 import tensorflow as tf
-# pylint: enable=g-bad-import-order
 
+from official.r1.utils.logs import logger
 from official.utils.flags import core as flags_core
 from official.utils.flags._conventions import help_wrap
-from official.utils.logs import logger
 
 NPZ_FILE = "HIGGS.csv.gz.npz"  # numpy compressed file containing "data" array
 
diff --git a/official/r1/mnist/mnist.py b/official/r1/mnist/mnist.py
index e1eeb2c3..062d5bcf 100644
--- a/official/r1/mnist/mnist.py
+++ b/official/r1/mnist/mnist.py
@@ -24,8 +24,8 @@ from six.moves import range
 import tensorflow as tf
 
 from official.r1.mnist import dataset
+from official.r1.utils.logs import hooks_helper
 from official.utils.flags import core as flags_core
-from official.utils.logs import hooks_helper
 from official.utils.misc import distribution_utils
 from official.utils.misc import model_helpers
 
diff --git a/official/r1/ncf/ncf_estimator_main.py b/official/r1/ncf/ncf_estimator_main.py
index 76b9c5a3..e1f4d5bf 100644
--- a/official/r1/ncf/ncf_estimator_main.py
+++ b/official/r1/ncf/ncf_estimator_main.py
@@ -17,7 +17,6 @@
 The NeuMF model assembles both MF and MLP models under the NCF framework. Check
 `neumf_model.py` for more details about the models.
 """
-
 from __future__ import absolute_import
 from __future__ import division
 from __future__ import print_function
@@ -29,16 +28,17 @@ import math
 import multiprocessing
 import os
 import signal
-import typing
 
-# pylint: disable=g-bad-import-order
-import numpy as np
 from absl import app as absl_app
 from absl import flags
 from absl import logging
+import numpy as np
 import tensorflow as tf
-# pylint: enable=g-bad-import-order
+import typing
 
+from official.r1.utils.logs import hooks_helper
+from official.r1.utils.logs import logger
+from official.r1.utils.logs import mlperf_helper
 from official.recommendation import constants as rconst
 from official.recommendation import data_pipeline
 from official.recommendation import data_preprocessing
@@ -46,9 +46,6 @@ from official.recommendation import movielens
 from official.recommendation import ncf_common
 from official.recommendation import neumf_model
 from official.utils.flags import core as flags_core
-from official.utils.logs import hooks_helper
-from official.utils.logs import logger
-from official.utils.logs import mlperf_helper
 from official.utils.misc import distribution_utils
 from official.utils.misc import model_helpers
 
diff --git a/official/r1/resnet/cifar10_main.py b/official/r1/resnet/cifar10_main.py
index 63b23642..e0983d82 100644
--- a/official/r1/resnet/cifar10_main.py
+++ b/official/r1/resnet/cifar10_main.py
@@ -28,8 +28,8 @@ import tensorflow as tf
 
 from official.r1.resnet import resnet_model
 from official.r1.resnet import resnet_run_loop
+from official.r1.utils.logs import logger
 from official.utils.flags import core as flags_core
-from official.utils.logs import logger
 
 HEIGHT = 32
 WIDTH = 32
diff --git a/official/r1/resnet/estimator_benchmark.py b/official/r1/resnet/estimator_benchmark.py
index eef3ea46..a1b9f79f 100644
--- a/official/r1/resnet/estimator_benchmark.py
+++ b/official/r1/resnet/estimator_benchmark.py
@@ -23,12 +23,12 @@ import time
 from absl import flags
 from absl import logging
 from absl.testing import flagsaver
-import tensorflow as tf  # pylint: disable=g-bad-import-order
+import tensorflow as tf
 
 from official.r1.resnet import cifar10_main as cifar_main
 from official.r1.resnet import imagenet_main
+from official.r1.utils.logs import hooks
 from official.utils.flags import core as flags_core
-from official.utils.logs import hooks
 
 IMAGENET_DATA_DIR_NAME = 'imagenet'
 CIFAR_DATA_DIR_NAME = 'cifar-10-batches-bin'
diff --git a/official/r1/resnet/imagenet_main.py b/official/r1/resnet/imagenet_main.py
index dcfa9ce6..37420d33 100644
--- a/official/r1/resnet/imagenet_main.py
+++ b/official/r1/resnet/imagenet_main.py
@@ -29,8 +29,8 @@ import tensorflow as tf
 from official.r1.resnet import imagenet_preprocessing
 from official.r1.resnet import resnet_model
 from official.r1.resnet import resnet_run_loop
+from official.r1.utils.logs import logger
 from official.utils.flags import core as flags_core
-from official.utils.logs import logger
 
 DEFAULT_IMAGE_SIZE = 224
 NUM_CHANNELS = 3
diff --git a/official/r1/resnet/resnet_run_loop.py b/official/r1/resnet/resnet_run_loop.py
index 0fbed83e..5c90d855 100644
--- a/official/r1/resnet/resnet_run_loop.py
+++ b/official/r1/resnet/resnet_run_loop.py
@@ -35,9 +35,9 @@ import tensorflow as tf
 from official.r1.resnet import imagenet_preprocessing
 from official.r1.resnet import resnet_model
 from official.r1.utils import export
+from official.r1.utils.logs import hooks_helper
+from official.r1.utils.logs import logger
 from official.utils.flags import core as flags_core
-from official.utils.logs import hooks_helper
-from official.utils.logs import logger
 from official.utils.misc import distribution_utils
 from official.utils.misc import model_helpers
 
diff --git a/official/r1/transformer/transformer_main.py b/official/r1/transformer/transformer_main.py
index f9ba2cae..eb2c2f94 100644
--- a/official/r1/transformer/transformer_main.py
+++ b/official/r1/transformer/transformer_main.py
@@ -43,8 +43,8 @@ from official.nlp.transformer import compute_bleu
 from official.nlp.transformer.utils import metrics
 from official.nlp.transformer.utils import tokenizer
 from official.utils.flags import core as flags_core
-from official.utils.logs import hooks_helper
-from official.utils.logs import logger
+from official.r1.utils.logs import hooks_helper
+from official.r1.utils.logs import logger
 from official.utils.misc import distribution_utils
 from official.utils.misc import model_helpers
 
diff --git a/official/utils/logs/__init__.py b/official/r1/utils/logs/__init__.py
similarity index 100%
rename from official/utils/logs/__init__.py
rename to official/r1/utils/logs/__init__.py
diff --git a/official/utils/logs/cloud_lib.py b/official/r1/utils/logs/cloud_lib.py
similarity index 100%
rename from official/utils/logs/cloud_lib.py
rename to official/r1/utils/logs/cloud_lib.py
diff --git a/official/utils/logs/cloud_lib_test.py b/official/r1/utils/logs/cloud_lib_test.py
similarity index 96%
rename from official/utils/logs/cloud_lib_test.py
rename to official/r1/utils/logs/cloud_lib_test.py
index 901576d2..15cdc3c6 100644
--- a/official/utils/logs/cloud_lib_test.py
+++ b/official/r1/utils/logs/cloud_lib_test.py
@@ -24,7 +24,7 @@ import unittest
 import mock
 import requests
 
-from official.utils.logs import cloud_lib
+from official.r1.utils.logs import cloud_lib
 
 
 class CloudLibTest(unittest.TestCase):
diff --git a/official/utils/logs/guidelines.md b/official/r1/utils/logs/guidelines.md
similarity index 100%
rename from official/utils/logs/guidelines.md
rename to official/r1/utils/logs/guidelines.md
diff --git a/official/utils/logs/hooks.py b/official/r1/utils/logs/hooks.py
similarity index 99%
rename from official/utils/logs/hooks.py
rename to official/r1/utils/logs/hooks.py
index 64743b77..c595eabb 100644
--- a/official/utils/logs/hooks.py
+++ b/official/r1/utils/logs/hooks.py
@@ -22,7 +22,7 @@ from __future__ import print_function
 
 import tensorflow as tf  # pylint: disable=g-bad-import-order
 
-from official.utils.logs import logger
+from official.r1.utils.logs import logger
 
 
 class ExamplesPerSecondHook(tf.estimator.SessionRunHook):
diff --git a/official/utils/logs/hooks_helper.py b/official/r1/utils/logs/hooks_helper.py
similarity index 97%
rename from official/utils/logs/hooks_helper.py
rename to official/r1/utils/logs/hooks_helper.py
index be2fc4d7..1e823241 100644
--- a/official/utils/logs/hooks_helper.py
+++ b/official/r1/utils/logs/hooks_helper.py
@@ -27,9 +27,9 @@ from __future__ import print_function
 import tensorflow as tf  # pylint: disable=g-bad-import-order
 from absl import logging
 
-from official.utils.logs import hooks
-from official.utils.logs import logger
-from official.utils.logs import metric_hook
+from official.r1.utils.logs import hooks
+from official.r1.utils.logs import logger
+from official.r1.utils.logs import metric_hook
 
 _TENSORS_TO_LOG = dict((x, x) for x in ['learning_rate',
                                         'cross_entropy',
diff --git a/official/utils/logs/hooks_test.py b/official/r1/utils/logs/hooks_test.py
similarity index 98%
rename from official/utils/logs/hooks_test.py
rename to official/r1/utils/logs/hooks_test.py
index adbc0a29..5ce4c5e5 100644
--- a/official/utils/logs/hooks_test.py
+++ b/official/r1/utils/logs/hooks_test.py
@@ -24,8 +24,8 @@ import time
 from absl import logging
 import tensorflow as tf  # pylint: disable=g-bad-import-order
 
-from official.utils.logs import hooks
-from official.utils.testing import mock_lib
+from official.r1.utils.logs import hooks
+from official.r1.utils.logs import mock_lib
 
 logging.set_verbosity(logging.DEBUG)
 
diff --git a/official/utils/logs/logger.py b/official/r1/utils/logs/logger.py
similarity index 99%
rename from official/utils/logs/logger.py
rename to official/r1/utils/logs/logger.py
index d4c02aff..7083721c 100644
--- a/official/utils/logs/logger.py
+++ b/official/r1/utils/logs/logger.py
@@ -31,13 +31,12 @@ import os
 import threading
 import uuid
 
-from six.moves import _thread as thread
 from absl import flags
+from absl import logging
+from six.moves import _thread as thread
 import tensorflow as tf
 from tensorflow.python.client import device_lib
-from absl import logging
-
-from official.utils.logs import cloud_lib
+from official.r1.utils.logs import cloud_lib
 
 METRIC_LOG_FILE_NAME = "metric.log"
 BENCHMARK_RUN_LOG_FILE_NAME = "benchmark_run.log"
diff --git a/official/utils/logs/logger_test.py b/official/r1/utils/logs/logger_test.py
similarity index 83%
rename from official/utils/logs/logger_test.py
rename to official/r1/utils/logs/logger_test.py
index 5e56ca50..96a8802d 100644
--- a/official/utils/logs/logger_test.py
+++ b/official/r1/utils/logs/logger_test.py
@@ -14,7 +14,6 @@
 # ==============================================================================
 
 """Tests for benchmark logger."""
-
 from __future__ import absolute_import
 from __future__ import division
 from __future__ import print_function
@@ -25,19 +24,13 @@ import tempfile
 import time
 import unittest
 
-import mock
-from absl.testing import flagsaver
-import tensorflow as tf  # pylint: disable=g-bad-import-order
 from absl import logging
+from absl.testing import flagsaver
+import tensorflow as tf
 
-try:
-  from google.cloud import bigquery
-except ImportError:
-  bigquery = None
-
-from official.utils.misc import keras_utils
+from official.r1.utils.logs import logger
 from official.utils.flags import core as flags_core
-from official.utils.logs import logger
+from official.utils.misc import keras_utils
 
 
 class BenchmarkLoggerTest(tf.test.TestCase):
@@ -67,23 +60,6 @@ class BenchmarkLoggerTest(tf.test.TestCase):
         self.assertIsInstance(logger.get_benchmark_logger(),
                               logger.BenchmarkFileLogger)
 
-  @mock.patch("official.utils.logs.logger.config_benchmark_logger")
-  def test_benchmark_context(self, mock_config_benchmark_logger):
-    mock_logger = mock.MagicMock()
-    mock_config_benchmark_logger.return_value = mock_logger
-    with logger.benchmark_context(None):
-      logging.info("start benchmarking")
-    mock_logger.on_finish.assert_called_once_with(logger.RUN_STATUS_SUCCESS)
-
-  @mock.patch("official.utils.logs.logger.config_benchmark_logger")
-  def test_benchmark_context_failure(self, mock_config_benchmark_logger):
-    mock_logger = mock.MagicMock()
-    mock_config_benchmark_logger.return_value = mock_logger
-    with self.assertRaises(RuntimeError):
-      with logger.benchmark_context(None):
-        raise RuntimeError("training error")
-    mock_logger.on_finish.assert_called_once_with(logger.RUN_STATUS_FAILURE)
-
 
 class BaseBenchmarkLoggerTest(tf.test.TestCase):
 
@@ -212,24 +188,6 @@ class BenchmarkFileLoggerTest(tf.test.TestCase):
     metric_log = os.path.join(log_dir, "metric.log")
     self.assertFalse(tf.io.gfile.exists(metric_log))
 
-  @mock.patch("official.utils.logs.logger._gather_run_info")
-  def test_log_run_info(self, mock_gather_run_info):
-    log_dir = tempfile.mkdtemp(dir=self.get_temp_dir())
-    log = logger.BenchmarkFileLogger(log_dir)
-    run_info = {"model_name": "model_name",
-                "dataset": "dataset_name",
-                "run_info": "run_value"}
-    mock_gather_run_info.return_value = run_info
-    log.log_run_info("model_name", "dataset_name", {})
-
-    run_log = os.path.join(log_dir, "benchmark_run.log")
-    self.assertTrue(tf.io.gfile.exists(run_log))
-    with tf.io.gfile.GFile(run_log) as f:
-      run_info = json.loads(f.readline())
-      self.assertEqual(run_info["model_name"], "model_name")
-      self.assertEqual(run_info["dataset"], "dataset_name")
-      self.assertEqual(run_info["run_info"], "run_value")
-
   def test_collect_tensorflow_info(self):
     run_info = {}
     logger._collect_tensorflow_info(run_info)
diff --git a/official/utils/logs/metric_hook.py b/official/r1/utils/logs/metric_hook.py
similarity index 100%
rename from official/utils/logs/metric_hook.py
rename to official/r1/utils/logs/metric_hook.py
diff --git a/official/utils/logs/metric_hook_test.py b/official/r1/utils/logs/metric_hook_test.py
similarity index 98%
rename from official/utils/logs/metric_hook_test.py
rename to official/r1/utils/logs/metric_hook_test.py
index 870ed6eb..eba93014 100644
--- a/official/utils/logs/metric_hook_test.py
+++ b/official/r1/utils/logs/metric_hook_test.py
@@ -24,8 +24,8 @@ import time
 import tensorflow as tf  # pylint: disable=g-bad-import-order
 from tensorflow.python.training import monitored_session  # pylint: disable=g-bad-import-order
 
-from official.utils.logs import metric_hook
-from official.utils.testing import mock_lib
+from official.r1.utils.logs import metric_hook
+from official.r1.utils.logs import mock_lib
 
 
 class LoggingMetricHookTest(tf.test.TestCase):
diff --git a/official/utils/logs/mlperf_helper.py b/official/r1/utils/logs/mlperf_helper.py
similarity index 100%
rename from official/utils/logs/mlperf_helper.py
rename to official/r1/utils/logs/mlperf_helper.py
index a07360c4..3f9601b6 100644
--- a/official/utils/logs/mlperf_helper.py
+++ b/official/r1/utils/logs/mlperf_helper.py
@@ -30,8 +30,8 @@ import os
 import re
 import subprocess
 import sys
-import typing
 from absl import logging
+import typing
 # pylint:disable=logging-format-interpolation
 
 
diff --git a/official/utils/testing/mock_lib.py b/official/r1/utils/logs/mock_lib.py
similarity index 100%
rename from official/utils/testing/mock_lib.py
rename to official/r1/utils/logs/mock_lib.py
diff --git a/official/r1/wide_deep/census_main.py b/official/r1/wide_deep/census_main.py
index bcd9cd69..b908dfa6 100644
--- a/official/r1/wide_deep/census_main.py
+++ b/official/r1/wide_deep/census_main.py
@@ -19,11 +19,10 @@ import os
 from absl import app as absl_app
 from absl import flags
 import tensorflow as tf
-
-from official.utils.flags import core as flags_core
-from official.utils.logs import logger
+from official.r1.utils.logs import logger
 from official.r1.wide_deep import census_dataset
 from official.r1.wide_deep import wide_deep_run_loop
+from official.utils.flags import core as flags_core
 
 
 def define_census_flags():
diff --git a/official/r1/wide_deep/movielens_main.py b/official/r1/wide_deep/movielens_main.py
index 39e98ce0..10cb53be 100644
--- a/official/r1/wide_deep/movielens_main.py
+++ b/official/r1/wide_deep/movielens_main.py
@@ -23,12 +23,11 @@ import os
 from absl import app as absl_app
 from absl import flags
 import tensorflow as tf
-
-from official.recommendation import movielens
-from official.utils.flags import core as flags_core
-from official.utils.logs import logger
+from official.r1.utils.logs import logger
 from official.r1.wide_deep import movielens_dataset
 from official.r1.wide_deep import wide_deep_run_loop
+from official.recommendation import movielens
+from official.utils.flags import core as flags_core
 
 
 def define_movie_flags():
diff --git a/official/r1/wide_deep/wide_deep_run_loop.py b/official/r1/wide_deep/wide_deep_run_loop.py
index a8e75e1d..843916d6 100644
--- a/official/r1/wide_deep/wide_deep_run_loop.py
+++ b/official/r1/wide_deep/wide_deep_run_loop.py
@@ -23,11 +23,11 @@ import shutil
 
 from absl import app as absl_app
 from absl import flags
-import tensorflow as tf  # pylint: disable=g-bad-import-order
+import tensorflow as tf
 
+from official.r1.utils.logs import hooks_helper
+from official.r1.utils.logs import logger
 from official.utils.flags import core as flags_core
-from official.utils.logs import hooks_helper
-from official.utils.logs import logger
 from official.utils.misc import model_helpers
 
 
diff --git a/official/utils/flags/_base.py b/official/utils/flags/_base.py
index b9007dc3..a143e078 100644
--- a/official/utils/flags/_base.py
+++ b/official/utils/flags/_base.py
@@ -20,9 +20,7 @@ from __future__ import print_function
 
 from absl import flags
 import tensorflow as tf
-
 from official.utils.flags._conventions import help_wrap
-from official.utils.logs import hooks_helper
 
 
 def define_base(data_dir=True, model_dir=True, clean=False, train_epochs=False,
@@ -114,17 +112,13 @@ def define_base(data_dir=True, model_dir=True, clean=False, train_epochs=False,
         help="Run the model op by op without building a model function.")
 
   if hooks:
-    # Construct a pretty summary of hooks.
-    hook_list_str = (
-        u"\ufeff  Hook:\n" + u"\n".join([u"\ufeff    {}".format(key) for key
-                                         in hooks_helper.HOOKS]))
     flags.DEFINE_list(
         name="hooks", short_name="hk", default="LoggingTensorHook",
         help=help_wrap(
             u"A list of (case insensitive) strings to specify the names of "
-            u"training hooks.\n{}\n\ufeff  Example: `--hooks ProfilerHook,"
-            u"ExamplesPerSecondHook`\n See official.utils.logs.hooks_helper "
-            u"for details.".format(hook_list_str))
+            u"training hooks. Example: `--hooks ProfilerHook,"
+            u"ExamplesPerSecondHook`\n See hooks_helper "
+            u"for details.")
     )
     key_flags.append("hooks")
 
diff --git a/official/utils/logs/hooks_helper_test.py b/official/utils/logs/hooks_helper_test.py
deleted file mode 100644
index 693311b5..00000000
--- a/official/utils/logs/hooks_helper_test.py
+++ /dev/null
@@ -1,73 +0,0 @@
-# Copyright 2017 The TensorFlow Authors. All Rights Reserved.
-#
-# Licensed under the Apache License, Version 2.0 (the "License");
-# you may not use this file except in compliance with the License.
-# You may obtain a copy of the License at
-#
-#     http://www.apache.org/licenses/LICENSE-2.0
-#
-# Unless required by applicable law or agreed to in writing, software
-# distributed under the License is distributed on an "AS IS" BASIS,
-# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-# See the License for the specific language governing permissions and
-# limitations under the License.
-# ==============================================================================
-
-"""Tests for hooks_helper."""
-
-from __future__ import absolute_import
-from __future__ import division
-from __future__ import print_function
-
-import unittest
-
-import tensorflow as tf  # pylint: disable=g-bad-import-order
-
-from official.utils.logs import hooks_helper
-from official.utils.misc import keras_utils
-
-
-class BaseTest(unittest.TestCase):
-
-  def setUp(self):
-    super(BaseTest, self).setUp()
-    if keras_utils.is_v2_0:
-      tf.compat.v1.disable_eager_execution()
-
-  def test_raise_in_non_list_names(self):
-    with self.assertRaises(ValueError):
-      hooks_helper.get_train_hooks(
-          'LoggingTensorHook, ProfilerHook', model_dir="", batch_size=256)
-
-  def test_raise_in_invalid_names(self):
-    invalid_names = ['StepCounterHook', 'StopAtStepHook']
-    with self.assertRaises(ValueError):
-      hooks_helper.get_train_hooks(invalid_names, model_dir="", batch_size=256)
-
-  def validate_train_hook_name(self,
-                               test_hook_name,
-                               expected_hook_name,
-                               **kwargs):
-    returned_hook = hooks_helper.get_train_hooks(
-        [test_hook_name], model_dir="", **kwargs)
-    self.assertEqual(len(returned_hook), 1)
-    self.assertIsInstance(returned_hook[0], tf.estimator.SessionRunHook)
-    self.assertEqual(returned_hook[0].__class__.__name__.lower(),
-                     expected_hook_name)
-
-  def test_get_train_hooks_logging_tensor_hook(self):
-    self.validate_train_hook_name('LoggingTensorHook', 'loggingtensorhook')
-
-  def test_get_train_hooks_profiler_hook(self):
-    self.validate_train_hook_name('ProfilerHook', 'profilerhook')
-
-  def test_get_train_hooks_examples_per_second_hook(self):
-    self.validate_train_hook_name('ExamplesPerSecondHook',
-                                  'examplespersecondhook')
-
-  def test_get_logging_metric_hook(self):
-    test_hook_name = 'LoggingMetricHook'
-    self.validate_train_hook_name(test_hook_name, 'loggingmetrichook')
-
-if __name__ == '__main__':
-  tf.test.main()
