commit 2fbba5ff135580bfb9b9aa0c402257e98e3537d7
Author: Shining Sun <shiningsun@google.com>
Date:   Thu Jan 3 22:36:28 2019 +0000

    Bug fix: None check on strategy

diff --git a/official/resnet/keras/keras_cifar_main.py b/official/resnet/keras/keras_cifar_main.py
index 8905c2bd..019dc220 100644
--- a/official/resnet/keras/keras_cifar_main.py
+++ b/official/resnet/keras/keras_cifar_main.py
@@ -135,7 +135,9 @@ def run(flags_obj):
   strategy = distribution_utils.get_distribution_strategy(
       flags_obj.num_gpus, flags_obj.turn_off_distribution_strategy)
 
-  with strategy.scope():
+  strategy_scope = keras_common.get_strategy_scope(strategy)
+
+  with strategy_scope:
     optimizer = keras_common.get_optimizer()
     model = resnet_cifar_model.resnet56(classes=cifar_main.NUM_CLASSES)
 
diff --git a/official/resnet/keras/keras_common.py b/official/resnet/keras/keras_common.py
index 4429f3a6..a6128989 100644
--- a/official/resnet/keras/keras_common.py
+++ b/official/resnet/keras/keras_common.py
@@ -210,3 +210,22 @@ def get_synth_input_fn(height, width, num_channels, num_classes,
     return data
 
   return input_fn
+
+
+def get_strategy_scope(strategy):
+  if strategy:
+    strategy_scope = strategy.scope()
+  else:
+    strategy_scope = keras_common.DummyContextManager()
+
+  return strategy_scope
+
+
+class DummyContextManager(object):
+  def __enter__(self):
+    pass
+
+  def __exit__(self, *args):
+    pass
+
+
diff --git a/official/resnet/keras/keras_imagenet_main.py b/official/resnet/keras/keras_imagenet_main.py
index 87cdb1ff..95d90df1 100644
--- a/official/resnet/keras/keras_imagenet_main.py
+++ b/official/resnet/keras/keras_imagenet_main.py
@@ -124,9 +124,12 @@ def run(flags_obj):
   strategy = distribution_utils.get_distribution_strategy(
       flags_obj.num_gpus, flags_obj.turn_off_distribution_strategy)
 
-  with strategy.scope():
+  strategy_scope = keras_common.get_strategy_scope(strategy)
+
+  with strategy_scope:
     optimizer = keras_common.get_optimizer()
     model = resnet_model.resnet50(num_classes=imagenet_main.NUM_CLASSES)
+
     model.compile(loss='sparse_categorical_crossentropy',
                   optimizer=optimizer,
                   metrics=['sparse_categorical_accuracy'])
