commit 98f519e0b8cd6ad017a2a3bf9efd8060493f224e
Author: Karmel Allison <karmel@google.com>
Date:   Thu Mar 1 16:27:18 2018 -0800

    Jenkins, say Goodbye please.

diff --git a/official/testing/docker_test.sh b/official/testing/docker_test.sh
deleted file mode 100755
index 7f02864d..00000000
--- a/official/testing/docker_test.sh
+++ /dev/null
@@ -1,80 +0,0 @@
-#!/usr/bin/env bash
-# Copyright 2017 The TensorFlow Authors. All Rights Reserved.
-#
-# Licensed under the Apache License, Version 2.0 (the "License");
-# you may not use this file except in compliance with the License.
-# You may obtain a copy of the License at
-#
-#     http://www.apache.org/licenses/LICENSE-2.0
-#
-# Unless required by applicable law or agreed to in writing, software
-# distributed under the License is distributed on an "AS IS" BASIS,
-# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-# See the License for the specific language governing permissions and
-# limitations under the License.
-# ==============================================================================
-#
-# DO NOT MODIFY THIS FILE. Add tests to be executed in test_models.sh
-# Usage: docker_test.sh [--docker-image <DOCKER_IMG_NAME>]
-#
-# DOCKERFILE_IMG_NAME: (Optional) The tensorflow docker container version
-#                  If this optional value is not supplied (via the
-#                  --docker-image flag), the default latest tensorflow docker
-#                  will be used.
-#
-# The script obeys the following required environment variables unless superceded by
-# the docker image flag:
-# PYTHON_VERSION:   (PYTHON2 | PYTHON3)
-
-
-# SETUP
-# Default exit status
-EXIT=0
-
-# Get current directory path to mount
-export WORKSPACE=${PWD}
-
-if [ "$PYTHON_VERSION" = "PYTHON3" ]; then
-  DOCKER_IMG_NAME="tensorflow/tensorflow:nightly-py3"
-else
-  DOCKER_IMG_NAME="tensorflow/tensorflow:nightly"
-  if [ "$PYTHON_VERSION" != "PYTHON2" ]; then
-    echo "WARNING: Python version was not specified. Using Python2 by default."
-    sleep 5
-  fi
-fi
-
-DOCKER_BINARY="docker"
-
-# Decide docker image and tag
-if [[ "$1" == "--docker-image" ]]; then
-  DOCKER_IMG_NAME="$2"
-  echo "Using specified docker tensorflow image and tag: ${DOCKER_IMG_NAME}"
-  shift 2
-fi
-
-# Specify which test is to be run
-COMMAND="./official/testing/test_models.sh"
-
-# Check the recency of the desired image
-${DOCKER_BINARY} pull ${DOCKER_IMG_NAME}
-
-# RUN
-${DOCKER_BINARY} run \
-    -v ${WORKSPACE}:/workspace \
-    -w /workspace \
-    -t \
-    ${DOCKER_IMG_NAME} \
-    ${COMMAND} \
-    || EXIT=$?
-
-
-# TEARDOWN
-${DOCKER_BINARY} rmi \
-  -f \
-  ${DOCKER_IMG_NAME}
-
-git clean -dfx
-
-# Return exit status
-exit ${EXIT}
diff --git a/official/testing/test_models.sh b/official/testing/test_models.sh
deleted file mode 100755
index 61292f5d..00000000
--- a/official/testing/test_models.sh
+++ /dev/null
@@ -1,51 +0,0 @@
-#!/usr/bin/env bash
-# Copyright 2017 The TensorFlow Authors. All Rights Reserved.
-#
-# Licensed under the Apache License, Version 2.0 (the "License");
-# you may not use this file except in compliance with the License.
-# You may obtain a copy of the License at
-#
-#     http://www.apache.org/licenses/LICENSE-2.0
-#
-# Unless required by applicable law or agreed to in writing, software
-# distributed under the License is distributed on an "AS IS" BASIS,
-# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-# See the License for the specific language governing permissions and
-# limitations under the License.
-# ==============================================================================
-#
-# DO NOT MODIFY THIS FILE. Add tests with file name "*_test.py" to your model's
-# directory.
-#
-# For each individual model in the garden, if a test file is found in that
-# directory, it will be run in a docker container.
-#
-# Usage: This file will be invoked in a docker container by docker_test.sh.
-
-# Default exit status
-EXIT=0
-
-# Increase stack size 8x
-ulimit -s 65532
-
-# Testing all of the models with a valid unit test
-echo -e "Testing all models\n"
-
-# Install coverage
-pip install coverage
-
-for test_file in `find official -name *_test.py -print`; do
-  echo "Running $test_file."
-  coverage run $test_file
-  test_status=$?
-  if [ ${test_status} -eq 0 ]; then
-    coverage report
-    echo -e "TEST PASSED\n"
-  else
-    EXIT=${test_status}
-    echo -e "TEST FAILED\n"
-  fi
-done
-
-# Return exit status
-exit ${EXIT}
\ No newline at end of file
