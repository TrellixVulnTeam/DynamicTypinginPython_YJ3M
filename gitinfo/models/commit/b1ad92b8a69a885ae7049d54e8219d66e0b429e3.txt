commit b1ad92b8a69a885ae7049d54e8219d66e0b429e3
Author: Orion Reblitz-Richardson <orionr@gmail.com>
Date:   Thu Jun 9 09:55:37 2016 -0700

    Update neural_gpu documentation.
    
    * Add list of algorithmic tasks.
    * Detail what is stored in /tmp/neural_gpu/ (default location).
    * Detail that one should hit Ctrl-C to stop the training process.
    * Add sections around decoding and animation, but couldn't get those to work myself. Still worth having in the docs.

diff --git a/neural_gpu/README.md b/neural_gpu/README.md
index ffe46acf..8a32520e 100644
--- a/neural_gpu/README.md
+++ b/neural_gpu/README.md
@@ -6,6 +6,50 @@ Requirements:
 * TensorFlow (see tensorflow.org for how to install)
 * Matplotlib for Python (sudo apt-get install python-matplotlib)
 
-Run: python neural_gpu_trainer.py --task=rev
+The model can be trained on the following algorithmic tasks:
+
+* `sort` - Sort a decimal list
+* `kvsort` - Sort decimal keys in dictionary
+* `id` - Return the same decimal list
+* `rev` - Reverse a decimal list
+* `rev2` - Reverse a decimal dictionary by key
+* `incr` - Add one to a decimal
+* `add` - Long decimal addition
+* `left` - First decimal in list
+* `right` - Last decimal in list
+* `left-shift` - Left shift a decimal list
+* `right-shift` - Right shift a decimal list
+* `bmul` - Long binary multiplication
+* `mul` - Long decimal multiplication
+* `dup` - Duplicate a decimal list with padding
+* `badd` - Long binary addition
+* `qadd` - Long quaternary addition
+* `search` - Search for decimal key in dictionary
+
+To train the model on the reverse task run:
+
+```
+python neural_gpu_trainer.py --task=rev
+```
+
+While training, interim / checkpoint model parameters will be
+written to `/tmp/neural_gpu/`.
+
+Once the amount of error gets down to what you're comfortable
+with, hit `Ctrl-C` to stop the training process. The latest
+model parameters will be in `/tmp/neural_gpu/neural_gpu.ckpt-<step>`
+and used on any subsequent run.
+
+To test a trained model on how well it decodes run:
+
+```
+python neural_gpu_trainer.py --task=rev --mode=1
+```
+
+To produce an animation of the result run:
+
+```
+python neural_gpu_trainer.py --task=rev --mode=1 --animate=True
+```
 
 Maintained by Lukasz Kaiser (lukaszkaiser)
