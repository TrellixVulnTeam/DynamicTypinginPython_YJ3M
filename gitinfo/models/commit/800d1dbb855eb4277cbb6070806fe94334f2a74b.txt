commit 800d1dbb855eb4277cbb6070806fe94334f2a74b
Author: Hongkun Yu <hongkuny@google.com>
Date:   Mon Oct 21 11:00:00 2019 -0700

    implements more container methods for ParamsDict
    
    PiperOrigin-RevId: 275879424

diff --git a/official/modeling/hyperparams/params_dict.py b/official/modeling/hyperparams/params_dict.py
index 13a628b4..236a466d 100644
--- a/official/modeling/hyperparams/params_dict.py
+++ b/official/modeling/hyperparams/params_dict.py
@@ -117,6 +117,14 @@ class ParamsDict(object):
       raise KeyError('The key `{}` does not exist. '.format(k))
     return self.__dict__[k]
 
+  def __contains__(self, key):
+    """Implements the membership test operator."""
+    return key in self.__dict__
+
+  def get(self, key, value=None):
+    """Accesses through built-in dictionary get method."""
+    return self.__dict__.get(key, value)
+
   def override(self, override_params, is_strict=True):
     """Override the ParamsDict with a set of given params.
 
diff --git a/official/modeling/hyperparams/params_dict_test.py b/official/modeling/hyperparams/params_dict_test.py
index ab433e2f..b800c877 100644
--- a/official/modeling/hyperparams/params_dict_test.py
+++ b/official/modeling/hyperparams/params_dict_test.py
@@ -69,6 +69,21 @@ class ParamsDictTest(tf.test.TestCase):
     self.assertEqual(params.b, 2)
     self.assertEqual(params.c, None)
 
+  def test_contains(self):
+    params = params_dict.ParamsDict()
+    params.override(
+        {'a': 'aa'}, is_strict=False)
+    self.assertIn('a', params)
+    self.assertNotIn('b', params)
+
+  def test_get(self):
+    params = params_dict.ParamsDict()
+    params.override(
+        {'a': 'aa'}, is_strict=False)
+    self.assertEqual(params.get('a'), 'aa')
+    self.assertEqual(params.get('b', 2), 2)
+    self.assertEqual(params.get('b'), None)
+
   def test_override_is_strict_true(self):
     params = params_dict.ParamsDict(
         {'a': 'aa', 'b': 2, 'c': {'c1': 'cc', 'c2': 20}})
