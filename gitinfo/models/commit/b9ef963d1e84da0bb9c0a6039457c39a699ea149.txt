commit b9ef963d1e84da0bb9c0a6039457c39a699ea149
Author: Reed Wanderman-Milne <reedwm@google.com>
Date:   Fri Aug 30 14:39:49 2019 -0700

    Fix all lint errors in official/vision/image_classification/
    
    PiperOrigin-RevId: 266458583

diff --git a/official/vision/image_classification/common.py b/official/vision/image_classification/common.py
index 129594c0..11a92c55 100644
--- a/official/vision/image_classification/common.py
+++ b/official/vision/image_classification/common.py
@@ -38,7 +38,7 @@ class LearningRateBatchScheduler(tf.keras.callbacks.Callback):
 
   N.B. Only support Keras optimizers, not TF optimizers.
 
-  Args:
+  Attributes:
       schedule: a function that takes an epoch index and a batch index as input
           (both integer, indexed from 0) and returns a new learning rate as
           output (float).
@@ -313,6 +313,7 @@ def define_keras_flags(dynamic_loss_scale=True):
       name='enable_get_next_as_optional', default=False,
       help='Enable get_next_as_optional behavior in DistributedIterator.')
 
+
 def get_synth_input_fn(height, width, num_channels, num_classes,
                        dtype=tf.float32, drop_remainder=True):
   """Returns an input function that returns a dataset with random data.
diff --git a/official/vision/image_classification/common_test.py b/official/vision/image_classification/common_test.py
index d7cd5310..a6a967e8 100644
--- a/official/vision/image_classification/common_test.py
+++ b/official/vision/image_classification/common_test.py
@@ -16,6 +16,7 @@
 from __future__ import absolute_import
 from __future__ import print_function
 
+# pylint: disable=g-bad-import-order
 from mock import Mock
 import numpy as np
 import tensorflow as tf
diff --git a/official/vision/image_classification/resnet_cifar_main.py b/official/vision/image_classification/resnet_cifar_main.py
index bfc411a4..c9f7521d 100644
--- a/official/vision/image_classification/resnet_cifar_main.py
+++ b/official/vision/image_classification/resnet_cifar_main.py
@@ -18,7 +18,6 @@ from __future__ import absolute_import
 from __future__ import division
 from __future__ import print_function
 
-from absl import app as absl_app
 from absl import flags
 import tensorflow as tf
 
diff --git a/official/vision/image_classification/resnet_imagenet_main.py b/official/vision/image_classification/resnet_imagenet_main.py
index f6c47879..1d53e1be 100644
--- a/official/vision/image_classification/resnet_imagenet_main.py
+++ b/official/vision/image_classification/resnet_imagenet_main.py
@@ -23,6 +23,7 @@ from absl import flags
 from absl import logging
 import tensorflow as tf
 
+from official.benchmark.models import trivial_model
 from official.utils.flags import core as flags_core
 from official.utils.logs import logger
 from official.utils.misc import distribution_utils
@@ -31,7 +32,6 @@ from official.utils.misc import model_helpers
 from official.vision.image_classification import common
 from official.vision.image_classification import imagenet_preprocessing
 from official.vision.image_classification import resnet_model
-from official.benchmark.models import trivial_model
 
 LR_SCHEDULE = [    # (multiplier, epoch to start) tuples
     (1.0, 5), (0.1, 30), (0.01, 60), (0.001, 80)
@@ -182,7 +182,7 @@ def run(flags_obj):
 
   with strategy_scope:
     optimizer = common.get_optimizer(lr_schedule)
-    if flags_obj.fp16_implementation == "graph_rewrite":
+    if flags_obj.fp16_implementation == 'graph_rewrite':
       # Note: when flags_obj.fp16_implementation == "graph_rewrite", dtype as
       # determined by flags_core.get_tf_dtype(flags_obj) would be 'float32'
       # which will ensure tf.compat.v2.keras.mixed_precision and
@@ -190,7 +190,7 @@ def run(flags_obj):
       # up.
       optimizer = tf.train.experimental.enable_mixed_precision_graph_rewrite(
           optimizer)
-            
+
     # TODO(hongkuny): Remove trivial model usage and move it to benchmark.
     if flags_obj.use_trivial_model:
       model = trivial_model.trivial_model(
