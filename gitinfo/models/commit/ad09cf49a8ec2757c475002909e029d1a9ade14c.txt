commit ad09cf49a8ec2757c475002909e029d1a9ade14c
Author: Reed Wanderman-Milne <reedwm@google.com>
Date:   Wed Mar 25 11:10:15 2020 -0700

    Check if there are GPUs instead of if TF is built with CUDA support.
    
    The TF pip packages are always built with CUDA support, so tf.test.is_built_with_cuda() would return True even if the user had no GPU.
    
    PiperOrigin-RevId: 302928378

diff --git a/official/benchmark/models/resnet_cifar_main.py b/official/benchmark/models/resnet_cifar_main.py
index 87cf96d6..8e6485c8 100644
--- a/official/benchmark/models/resnet_cifar_main.py
+++ b/official/benchmark/models/resnet_cifar_main.py
@@ -138,8 +138,8 @@ def run(flags_obj):
 
   data_format = flags_obj.data_format
   if data_format is None:
-    data_format = ('channels_first'
-                   if tf.test.is_built_with_cuda() else 'channels_last')
+    data_format = ('channels_first' if tf.config.list_physical_devices('GPU')
+                   else 'channels_last')
   tf.keras.backend.set_image_data_format(data_format)
 
   strategy = distribution_utils.get_distribution_strategy(
diff --git a/official/modeling/model_training_utils.py b/official/modeling/model_training_utils.py
index 2f66d1c9..a8c4adb6 100644
--- a/official/modeling/model_training_utils.py
+++ b/official/modeling/model_training_utils.py
@@ -415,7 +415,7 @@ def run_customized_training_loop(
       # Runs several steps in the host while loop.
       steps = steps_to_run(current_step, steps_per_epoch, steps_per_loop)
 
-      if tf.test.is_built_with_cuda():
+      if tf.config.list_physical_devices('GPU'):
         # TODO(zongweiz): merge with train_steps once tf.while_loop
         # GPU performance bugs are fixed.
         for _ in range(steps):
diff --git a/official/r1/mnist/mnist.py b/official/r1/mnist/mnist.py
index 9963a430..e1eeb2c3 100644
--- a/official/r1/mnist/mnist.py
+++ b/official/r1/mnist/mnist.py
@@ -183,8 +183,8 @@ def run_mnist(flags_obj):
 
   data_format = flags_obj.data_format
   if data_format is None:
-    data_format = ('channels_first'
-                   if tf.test.is_built_with_cuda() else 'channels_last')
+    data_format = ('channels_first' if tf.config.list_physical_devices('GPU')
+                   else 'channels_last')
   mnist_classifier = tf.estimator.Estimator(
       model_fn=model_function,
       model_dir=flags_obj.model_dir,
diff --git a/official/r1/resnet/resnet_model.py b/official/r1/resnet/resnet_model.py
index 02d654cd..d6449df5 100644
--- a/official/r1/resnet/resnet_model.py
+++ b/official/r1/resnet/resnet_model.py
@@ -391,8 +391,8 @@ class Model(object):
     self.resnet_size = resnet_size
 
     if not data_format:
-      data_format = (
-          'channels_first' if tf.test.is_built_with_cuda() else 'channels_last')
+      data_format = ('channels_first' if tf.config.list_physical_devices('GPU')
+                     else 'channels_last')
 
     self.resnet_version = resnet_version
     if resnet_version not in (1, 2):
diff --git a/official/vision/image_classification/resnet/resnet_ctl_imagenet_main.py b/official/vision/image_classification/resnet/resnet_ctl_imagenet_main.py
index 9339e9da..b3372525 100644
--- a/official/vision/image_classification/resnet/resnet_ctl_imagenet_main.py
+++ b/official/vision/image_classification/resnet/resnet_ctl_imagenet_main.py
@@ -119,8 +119,8 @@ def run(flags_obj):
   # TODO(anj-s): Set data_format without using Keras.
   data_format = flags_obj.data_format
   if data_format is None:
-    data_format = ('channels_first'
-                   if tf.test.is_built_with_cuda() else 'channels_last')
+    data_format = ('channels_first' if tf.config.list_physical_devices('GPU')
+                   else 'channels_last')
   tf.keras.backend.set_image_data_format(data_format)
 
   strategy = distribution_utils.get_distribution_strategy(
diff --git a/official/vision/image_classification/resnet/resnet_imagenet_main.py b/official/vision/image_classification/resnet/resnet_imagenet_main.py
index 285df847..19b69949 100644
--- a/official/vision/image_classification/resnet/resnet_imagenet_main.py
+++ b/official/vision/image_classification/resnet/resnet_imagenet_main.py
@@ -71,8 +71,8 @@ def run(flags_obj):
 
   data_format = flags_obj.data_format
   if data_format is None:
-    data_format = ('channels_first'
-                   if tf.test.is_built_with_cuda() else 'channels_last')
+    data_format = ('channels_first' if tf.config.list_physical_devices('GPU')
+                   else 'channels_last')
   tf.keras.backend.set_image_data_format(data_format)
 
   # Configures cluster spec for distribution strategy.
