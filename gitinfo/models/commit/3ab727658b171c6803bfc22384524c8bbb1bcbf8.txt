commit 3ab727658b171c6803bfc22384524c8bbb1bcbf8
Author: Derek Chow <derekjchow@gmail.com>
Date:   Tue Jun 27 13:14:43 2017 -0700

    snake_case Decode function

diff --git a/object_detection/builders/input_reader_builder.py b/object_detection/builders/input_reader_builder.py
index 98ad6127..5baa0813 100644
--- a/object_detection/builders/input_reader_builder.py
+++ b/object_detection/builders/input_reader_builder.py
@@ -60,6 +60,6 @@ def build(input_reader_config):
         capacity=input_reader_config.queue_capacity,
         min_after_dequeue=input_reader_config.min_after_dequeue)
 
-    return tf_example_decoder.TfExampleDecoder().Decode(string_tensor)
+    return tf_example_decoder.TfExampleDecoder().decode(string_tensor)
 
   raise ValueError('Unsupported input_reader_config.')
diff --git a/object_detection/core/data_decoder.py b/object_detection/core/data_decoder.py
index 84be4db5..9ae18c1f 100644
--- a/object_detection/core/data_decoder.py
+++ b/object_detection/core/data_decoder.py
@@ -26,9 +26,8 @@ class DataDecoder(object):
   """Interface for data decoders."""
   __metaclass__ = ABCMeta
 
-  # TODO: snake_case this method.
   @abstractmethod
-  def Decode(self, data):
+  def decode(self, data):
     """Return a single image and associated labels.
 
     Args:
diff --git a/object_detection/data_decoders/tf_example_decoder.py b/object_detection/data_decoders/tf_example_decoder.py
index fcea12cb..7426f466 100644
--- a/object_detection/data_decoders/tf_example_decoder.py
+++ b/object_detection/data_decoders/tf_example_decoder.py
@@ -82,7 +82,7 @@ class TfExampleDecoder(data_decoder.DataDecoder):
             slim_example_decoder.Tensor('image/segmentation/object/class')),
     }
 
-  def Decode(self, tf_example_string_tensor):
+  def decode(self, tf_example_string_tensor):
     """Decodes serialized tensorflow example and returns a tensor dictionary.
 
     Args:
diff --git a/object_detection/data_decoders/tf_example_decoder_test.py b/object_detection/data_decoders/tf_example_decoder_test.py
index 4a28419a..de23bec1 100644
--- a/object_detection/data_decoders/tf_example_decoder_test.py
+++ b/object_detection/data_decoders/tf_example_decoder_test.py
@@ -64,7 +64,7 @@ class TfExampleDecoderTest(tf.test.TestCase):
     })).SerializeToString()
 
     example_decoder = tf_example_decoder.TfExampleDecoder()
-    tensor_dict = example_decoder.Decode(tf.convert_to_tensor(example))
+    tensor_dict = example_decoder.decode(tf.convert_to_tensor(example))
 
     self.assertAllEqual((tensor_dict[fields.InputDataFields.image].
                          get_shape().as_list()), [None, None, 3])
@@ -84,7 +84,7 @@ class TfExampleDecoderTest(tf.test.TestCase):
     })).SerializeToString()
 
     example_decoder = tf_example_decoder.TfExampleDecoder()
-    tensor_dict = example_decoder.Decode(tf.convert_to_tensor(example))
+    tensor_dict = example_decoder.decode(tf.convert_to_tensor(example))
 
     with self.test_session() as sess:
       tensor_dict = sess.run(tensor_dict)
@@ -103,7 +103,7 @@ class TfExampleDecoderTest(tf.test.TestCase):
     })).SerializeToString()
 
     example_decoder = tf_example_decoder.TfExampleDecoder()
-    tensor_dict = example_decoder.Decode(tf.convert_to_tensor(example))
+    tensor_dict = example_decoder.decode(tf.convert_to_tensor(example))
 
     self.assertAllEqual((tensor_dict[fields.InputDataFields.image].
                          get_shape().as_list()), [None, None, 3])
@@ -130,7 +130,7 @@ class TfExampleDecoderTest(tf.test.TestCase):
     })).SerializeToString()
 
     example_decoder = tf_example_decoder.TfExampleDecoder()
-    tensor_dict = example_decoder.Decode(tf.convert_to_tensor(example))
+    tensor_dict = example_decoder.decode(tf.convert_to_tensor(example))
 
     self.assertAllEqual((tensor_dict[fields.InputDataFields.groundtruth_boxes].
                          get_shape().as_list()), [None, 4])
@@ -153,7 +153,7 @@ class TfExampleDecoderTest(tf.test.TestCase):
     })).SerializeToString()
 
     example_decoder = tf_example_decoder.TfExampleDecoder()
-    tensor_dict = example_decoder.Decode(tf.convert_to_tensor(example))
+    tensor_dict = example_decoder.decode(tf.convert_to_tensor(example))
 
     self.assertAllEqual((tensor_dict[
         fields.InputDataFields.groundtruth_classes].get_shape().as_list()),
@@ -176,7 +176,7 @@ class TfExampleDecoderTest(tf.test.TestCase):
     })).SerializeToString()
 
     example_decoder = tf_example_decoder.TfExampleDecoder()
-    tensor_dict = example_decoder.Decode(tf.convert_to_tensor(example))
+    tensor_dict = example_decoder.decode(tf.convert_to_tensor(example))
 
     self.assertAllEqual((tensor_dict[fields.InputDataFields.groundtruth_area].
                          get_shape().as_list()), [None])
@@ -197,7 +197,7 @@ class TfExampleDecoderTest(tf.test.TestCase):
     })).SerializeToString()
 
     example_decoder = tf_example_decoder.TfExampleDecoder()
-    tensor_dict = example_decoder.Decode(tf.convert_to_tensor(example))
+    tensor_dict = example_decoder.decode(tf.convert_to_tensor(example))
 
     self.assertAllEqual((tensor_dict[
         fields.InputDataFields.groundtruth_is_crowd].get_shape().as_list()),
@@ -220,7 +220,7 @@ class TfExampleDecoderTest(tf.test.TestCase):
     })).SerializeToString()
 
     example_decoder = tf_example_decoder.TfExampleDecoder()
-    tensor_dict = example_decoder.Decode(tf.convert_to_tensor(example))
+    tensor_dict = example_decoder.decode(tf.convert_to_tensor(example))
 
     self.assertAllEqual((tensor_dict[
         fields.InputDataFields.groundtruth_difficult].get_shape().as_list()),
@@ -263,7 +263,7 @@ class TfExampleDecoderTest(tf.test.TestCase):
         'image/segmentation/object/class': self._Int64Feature(
             instance_segmentation_classes)})).SerializeToString()
     example_decoder = tf_example_decoder.TfExampleDecoder()
-    tensor_dict = example_decoder.Decode(tf.convert_to_tensor(example))
+    tensor_dict = example_decoder.decode(tf.convert_to_tensor(example))
 
     self.assertAllEqual((
         tensor_dict[fields.InputDataFields.groundtruth_instance_masks].
diff --git a/object_detection/exporter.py b/object_detection/exporter.py
index 3bc617b3..24b654a5 100644
--- a/object_detection/exporter.py
+++ b/object_detection/exporter.py
@@ -101,7 +101,7 @@ def freeze_graph_with_def_protos(
 def _tf_example_input_placeholder():
   tf_example_placeholder = tf.placeholder(
       tf.string, shape=[], name='tf_example')
-  tensor_dict = tf_example_decoder.TfExampleDecoder().Decode(
+  tensor_dict = tf_example_decoder.TfExampleDecoder().decode(
       tf_example_placeholder)
   image = tensor_dict[fields.InputDataFields.image]
   return tf.expand_dims(image, axis=0)
