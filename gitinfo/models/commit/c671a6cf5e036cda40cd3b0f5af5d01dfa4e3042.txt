commit c671a6cf5e036cda40cd3b0f5af5d01dfa4e3042
Author: Christopher Shallue <chris.shallue@gmail.com>
Date:   Thu Mar 15 16:38:14 2018 -0700

    Replace itertools.izip() with zip() for Python3 compatibility.
    
    This is not a performance issue for the instances replaced because
    each instance is expected to iterate over zipped lists of < ~20
    references to numpy arrays.

diff --git a/research/astronet/light_curve_util/util.py b/research/astronet/light_curve_util/util.py
index c1239759..7b5d86ac 100644
--- a/research/astronet/light_curve_util/util.py
+++ b/research/astronet/light_curve_util/util.py
@@ -19,7 +19,6 @@ from __future__ import division
 from __future__ import print_function
 
 import collections
-import itertools
 
 import numpy as np
 from six.moves import range  # pylint:disable=redefined-builtin
@@ -72,7 +71,7 @@ def split(all_time, all_flux, gap_width=0.75):
 
   out_time = []
   out_flux = []
-  for time, flux in itertools.izip(all_time, all_flux):
+  for time, flux in zip(all_time, all_flux):
     start = 0
     for end in range(1, len(time) + 1):
       # Choose the largest endpoint such that time[start:end] has no gaps.
@@ -117,7 +116,7 @@ def remove_events(all_time, all_flux, events, width_factor=1.0):
 
   output_time = []
   output_flux = []
-  for time, flux in itertools.izip(all_time, all_flux):
+  for time, flux in zip(all_time, all_flux):
     mask = np.ones_like(time, dtype=np.bool)
     for event in events:
       transit_dist = np.abs(phase_fold_time(time, event.period, event.t0))
@@ -149,7 +148,7 @@ def interpolate_masked_spline(all_time, all_masked_time, all_masked_spline):
         points linearly interpolated.
   """
   interp_spline = []
-  for time, masked_time, masked_spline in itertools.izip(
+  for time, masked_time, masked_spline in zip(
       all_time, all_masked_time, all_masked_spline):
     if len(masked_time) > 0:  # pylint:disable=g-explicit-length-test
       interp_spline.append(np.interp(time, masked_time, masked_spline))
diff --git a/research/astronet/third_party/kepler_spline/kepler_spline.py b/research/astronet/third_party/kepler_spline/kepler_spline.py
index 980f3afa..d7c156a8 100644
--- a/research/astronet/third_party/kepler_spline/kepler_spline.py
+++ b/research/astronet/third_party/kepler_spline/kepler_spline.py
@@ -4,7 +4,6 @@ from __future__ import absolute_import
 from __future__ import division
 from __future__ import print_function
 
-import itertools
 import warnings
 
 import numpy as np
@@ -149,7 +148,7 @@ def choose_kepler_spline(all_time,
     spline = []
     spline_mask = []
     bad_bkspace = False  # Indicates that the current bkspace should be skipped.
-    for time, flux in itertools.izip(all_time, all_flux):
+    for time, flux in zip(all_time, all_flux):
       # Don't fit a spline on less than 4 points.
       if len(time) < 4:
         spline.append(flux)
