commit 65abca9a34f3fd6c48a24d6c5d1340cd080dfb92
Author: cclauss <cclauss@bluewin.ch>
Date:   Wed Jan 24 02:40:57 2018 +0100

    Use r-string to avoid raising Python 3 SyntaxError
    
    In Python 2 the string and the r-string behave the same:
    $ __python2__
    ```
    >>> '$\Uparrow$ '
    '$\\Uparrow$ '
    >>> r'$\Uparrow$ '
    '$\\Uparrow$ '
    >>> '$\Uparrow$ ' == r'$\Uparrow$ '
    True
    ```
    
    In Python 3 the string raises a Syntax Error while the r-string works just like Python 2.
    ```
    >>> '$\Uparrow$ '
      File "<stdin>", line 1
    SyntaxError: (unicode error) 'unicodeescape' codec can't decode bytes in position 1-2: truncated \UXXXXXXXX escape
    >>> r'$\Uparrow$ '
    '$\\Uparrow$ '
    ```

diff --git a/research/cognitive_mapping_and_planning/scripts/script_plot_trajectory.py b/research/cognitive_mapping_and_planning/scripts/script_plot_trajectory.py
index e85fbfa1..08273a83 100644
--- a/research/cognitive_mapping_and_planning/scripts/script_plot_trajectory.py
+++ b/research/cognitive_mapping_and_planning/scripts/script_plot_trajectory.py
@@ -220,7 +220,7 @@ def plot_trajectory_first_person(dt, orig_maps, out_dir):
       t.set_bbox(dict(color='white', alpha=0.85, pad=-0.1))
 
       # Action to take.
-      action_latex = ['$\odot$ ', '$\curvearrowright$ ', '$\curvearrowleft$ ', '$\Uparrow$ ']
+      action_latex = ['$\odot$ ', '$\curvearrowright$ ', '$\curvearrowleft$ ', r'$\Uparrow$ ']
       t = ax.text(0.99, 0.99, action_latex[actions[step_number]],
           horizontalalignment='right',
           verticalalignment='top',
