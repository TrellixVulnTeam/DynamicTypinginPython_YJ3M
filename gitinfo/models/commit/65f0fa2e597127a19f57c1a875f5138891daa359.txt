commit 65f0fa2e597127a19f57c1a875f5138891daa359
Author: Ben Mabey <ben@benmabey.com>
Date:   Sat Jun 24 23:14:46 2017 -0600

    updates object_detection/eval.py to be python3 compatible

diff --git a/object_detection/evaluator.py b/object_detection/evaluator.py
index 28ac1183..45f03dc7 100644
--- a/object_detection/evaluator.py
+++ b/object_detection/evaluator.py
@@ -154,7 +154,7 @@ def evaluate(create_input_dict_fn, create_model_fn, eval_config, categories,
     """
     if batch_index >= eval_config.num_visualizations:
       if 'original_image' in tensor_dict:
-        tensor_dict = {k: v for (k, v) in tensor_dict.iteritems()
+        tensor_dict = {k: v for (k, v) in tensor_dict.items()
                        if k != 'original_image'}
     try:
       (result_dict, _) = sess.run([tensor_dict, update_op])
diff --git a/object_detection/utils/metrics.py b/object_detection/utils/metrics.py
index 85f94efa..cfce1e9c 100644
--- a/object_detection/utils/metrics.py
+++ b/object_detection/utils/metrics.py
@@ -17,6 +17,7 @@
 from __future__ import division
 
 import numpy as np
+from six import moves
 
 
 def compute_precision_recall(scores, labels, num_gt):
@@ -103,7 +104,7 @@ def compute_average_precision(precision, recall):
     raise ValueError("Precision must be in the range of [0, 1].")
   if np.amin(recall) < 0 or np.amax(recall) > 1:
     raise ValueError("recall must be in the range of [0, 1].")
-  if not all(recall[i] <= recall[i + 1] for i in xrange(len(recall) - 1)):
+  if not all(recall[i] <= recall[i + 1] for i in moves.range(len(recall) - 1)):
     raise ValueError("recall must be a non-decreasing array")
 
   recall = np.concatenate([[0], recall, [1]])
diff --git a/object_detection/utils/np_box_list.py b/object_detection/utils/np_box_list.py
index 7df9f68f..13a1fde9 100644
--- a/object_detection/utils/np_box_list.py
+++ b/object_detection/utils/np_box_list.py
@@ -16,6 +16,7 @@
 """Numpy BoxList classes and functions."""
 
 import numpy as np
+from six import moves
 
 
 class BoxList(object):
@@ -127,7 +128,7 @@ class BoxList(object):
           ymin, and all xmax of boxes are equal or greater than xmin.
     """
     if data.shape[0] > 0:
-      for i in xrange(data.shape[0]):
+      for i in moves.range(data.shape[0]):
         if data[i, 0] > data[i, 2] or data[i, 1] > data[i, 3]:
           return False
     return True
diff --git a/object_detection/utils/visualization_utils.py b/object_detection/utils/visualization_utils.py
index 41d80db6..1d0802c3 100644
--- a/object_detection/utils/visualization_utils.py
+++ b/object_detection/utils/visualization_utils.py
@@ -80,7 +80,7 @@ def encode_image_array_as_png_str(image):
     PNG encoded image string.
   """
   image_pil = Image.fromarray(np.uint8(image))
-  output = six.StringIO()
+  output = six.BytesIO()
   image_pil.save(output, format='PNG')
   png_string = output.getvalue()
   output.close()
