commit c0cf58e635f47145c086b6bf2c39ed73e759557f
Author: Derek Chow <derekjchow@gmail.com>
Date:   Thu Jul 27 14:52:10 2017 -0700

    Update object_detection docs.

diff --git a/object_detection/g3doc/configuring_jobs.md b/object_detection/g3doc/configuring_jobs.md
index f4d345ff..78f77bc4 100644
--- a/object_detection/g3doc/configuring_jobs.md
+++ b/object_detection/g3doc/configuring_jobs.md
@@ -157,6 +157,6 @@ number of workers, gpu type).
 
 ## Configuring the Evaluator
 
-Currently evaluation is fixed to generating metrics as defined by the PASCAL
-VOC challenge. The parameters for `eval_config` are set to reasonable defaults
-and typically do not need to be configured.
+Currently evaluation is fixed to generating metrics as defined by the PASCAL VOC
+challenge. The parameters for `eval_config` are set to reasonable defaults and
+typically do not need to be configured.
diff --git a/object_detection/g3doc/installation.md b/object_detection/g3doc/installation.md
index 833f5fc2..765f7d5c 100644
--- a/object_detection/g3doc/installation.md
+++ b/object_detection/g3doc/installation.md
@@ -74,6 +74,6 @@ to avoid running this manually, you can add it as a new line to the end of your
 You can test that you have correctly installed the Tensorflow Object Detection\
 API by running the following command:
 
-``` bash
+```bash
 python object_detection/builders/model_builder_test.py
 ```
diff --git a/object_detection/g3doc/preparing_inputs.md b/object_detection/g3doc/preparing_inputs.md
index 5ffc5305..24ee07bd 100644
--- a/object_detection/g3doc/preparing_inputs.md
+++ b/object_detection/g3doc/preparing_inputs.md
@@ -34,10 +34,9 @@ The label map for the PASCAL VOC data set can be found at
 
 ## Generating the Oxford-IIIT Pet TFRecord files.
 
-The Oxford-IIIT Pet data set is located on
-[their website](http://www.robots.ox.ac.uk/~vgg/data/pets/).
-To download, extract and convert it to TFRecrods, run the following commands
-below:
+The Oxford-IIIT Pet data set is located
+[here](http://www.robots.ox.ac.uk/~vgg/data/pets/). To download, extract and
+convert it to TFRecrods, run the following commands below:
 
 ```bash
 # From tensorflow/models
diff --git a/object_detection/g3doc/running_locally.md b/object_detection/g3doc/running_locally.md
index d44710dc..98556ca3 100644
--- a/object_detection/g3doc/running_locally.md
+++ b/object_detection/g3doc/running_locally.md
@@ -77,5 +77,5 @@ tensorboard --logdir=${PATH_TO_MODEL_DIRECTORY}
 ```
 
 where `${PATH_TO_MODEL_DIRECTORY}` points to the directory that contains the
-train and eval directories. Please note it may take Tensorboard a couple
-minutes to populate with data.
+train and eval directories. Please note it may take Tensorboard a couple minutes
+to populate with data.
diff --git a/object_detection/g3doc/running_notebook.md b/object_detection/g3doc/running_notebook.md
index 8d7948d8..83120994 100644
--- a/object_detection/g3doc/running_notebook.md
+++ b/object_detection/g3doc/running_notebook.md
@@ -11,5 +11,5 @@ jupyter notebook
 ```
 
 The notebook should open in your favorite web browser. Click the
-[`object_detection_tutorial.ipynb`](../object_detection_tutorial.ipynb) link
-to open the demo.
+[`object_detection_tutorial.ipynb`](../object_detection_tutorial.ipynb) link to
+open the demo.
diff --git a/object_detection/g3doc/running_pets.md b/object_detection/g3doc/running_pets.md
index 73c36613..0a57ccfe 100644
--- a/object_detection/g3doc/running_pets.md
+++ b/object_detection/g3doc/running_pets.md
@@ -89,8 +89,8 @@ python object_detection/create_pet_tf_record.py \
 Note: It is normal to see some warnings when running this script. You may ignore
 them.
 
-Two TFRecord files named `pet_train.record` and `pet_val.record` should be generated
-in the `tensorflow/models` directory.
+Two TFRecord files named `pet_train.record` and `pet_val.record` should be
+generated in the `tensorflow/models` directory.
 
 Now that the data has been generated, we'll need to upload it to Google Cloud
 Storage so the data can be accessed by ML Engine. Run the following command to
@@ -269,7 +269,10 @@ Note: It takes roughly 10 minutes for a job to get started on ML Engine, and
 roughly an hour for the system to evaluate the validation dataset. It may take
 some time to populate the dashboards. If you do not see any entries after half
 an hour, check the logs from the [ML Engine
-Dashboard](https://console.cloud.google.com/mlengine/jobs).
+Dashboard](https://console.cloud.google.com/mlengine/jobs). Note that by default
+the training jobs are configured to go for much longer than is necessary for
+convergence.  To save money, we recommend killing your jobs once you've seen
+that they've converged.
 
 ## Exporting the Tensorflow Graph
 
