commit f1dbf247c2f984270ccd34346d96d7b882a0e02d
Author: Joseph Friedman <4613488+DecentGradient@users.noreply.github.com>
Date:   Mon Jul 30 11:28:04 2018 -0400

    removed optional input_shape

diff --git a/samples/core/tutorials/keras/overfit_and_underfit.ipynb b/samples/core/tutorials/keras/overfit_and_underfit.ipynb
index bd70bcd2..3841f1bf 100644
--- a/samples/core/tutorials/keras/overfit_and_underfit.ipynb
+++ b/samples/core/tutorials/keras/overfit_and_underfit.ipynb
@@ -294,7 +294,7 @@
       "cell_type": "code",
       "source": [
         "baseline_model = keras.Sequential([\n",
-        "    keras.layers.Dense(16, activation=tf.nn.relu, input_shape=(NUM_WORDS,)),\n",
+        "    keras.layers.Dense(16, activation=tf.nn.relu),\n",
         "    keras.layers.Dense(16, activation=tf.nn.relu),\n",
         "    keras.layers.Dense(1, activation=tf.nn.sigmoid)\n",
         "])\n",
@@ -365,7 +365,7 @@
       "cell_type": "code",
       "source": [
         "smaller_model = keras.Sequential([\n",
-        "    keras.layers.Dense(4, activation=tf.nn.relu, input_shape=(NUM_WORDS,)),\n",
+        "    keras.layers.Dense(4, activation=tf.nn.relu),\n",
         "    keras.layers.Dense(4, activation=tf.nn.relu),\n",
         "    keras.layers.Dense(1, activation=tf.nn.sigmoid)\n",
         "])\n",
@@ -438,7 +438,7 @@
       "cell_type": "code",
       "source": [
         "bigger_model = keras.models.Sequential([\n",
-        "    keras.layers.Dense(512, activation=tf.nn.relu, input_shape=(NUM_WORDS,)),\n",
+        "    keras.layers.Dense(512, activation=tf.nn.relu),\n",
         "    keras.layers.Dense(512, activation=tf.nn.relu),\n",
         "    keras.layers.Dense(1, activation=tf.nn.sigmoid)\n",
         "])\n",
@@ -606,7 +606,7 @@
       "source": [
         "l2_model = keras.models.Sequential([\n",
         "    keras.layers.Dense(16, kernel_regularizer=keras.regularizers.l2(0.001),\n",
-        "                       activation=tf.nn.relu, input_shape=(NUM_WORDS,)),\n",
+        "                       activation=tf.nn.relu),\n",
         "    keras.layers.Dense(16, kernel_regularizer=keras.regularizers.l2(0.001),\n",
         "                       activation=tf.nn.relu),\n",
         "    keras.layers.Dense(1, activation=tf.nn.sigmoid)\n",
@@ -697,7 +697,7 @@
       "cell_type": "code",
       "source": [
         "dpt_model = keras.models.Sequential([\n",
-        "    keras.layers.Dense(16, activation=tf.nn.relu, input_shape=(NUM_WORDS,)),\n",
+        "    keras.layers.Dense(16, activation=tf.nn.relu),\n",
         "    keras.layers.Dropout(0.5),\n",
         "    keras.layers.Dense(16, activation=tf.nn.relu),\n",
         "    keras.layers.Dropout(0.5),\n",
