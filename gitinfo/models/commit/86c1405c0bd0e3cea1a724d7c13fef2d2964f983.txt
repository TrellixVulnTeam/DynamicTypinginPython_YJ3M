commit 86c1405c0bd0e3cea1a724d7c13fef2d2964f983
Author: Nicolas Papernot <ngp5056@cse.psu.edu>
Date:   Tue Nov 1 06:00:24 2016 -0400

    make large files downloadable

diff --git a/privacy/analysis.py b/privacy/analysis.py
index 590d48f7..1f15c1cf 100644
--- a/privacy/analysis.py
+++ b/privacy/analysis.py
@@ -23,10 +23,13 @@ python analysis.py
   --max_examples=1000
   --delta=1e-6
 """
+import os
 import math
 import numpy as np
 import tensorflow as tf
 
+from input import maybe_download
+
 # These parameters can be changed to compute bounds for different failure rates
 # or different model predictions.
 
@@ -194,6 +197,24 @@ def smoothed_sens(counts, noise_eps, l, beta):
 
 
 def main(unused_argv):
+  ##################################################################
+  # If we are reproducing results from paper https://arxiv.org/abs/1610.05755,
+  # download the required binaries with label information.
+  ##################################################################
+  
+  # Binaries for MNIST results
+  paper_binaries_mnist = \
+    ["https://github.com/npapernot/multiple-teachers-for-privacy/blob/master/mnist_250_teachers_labels.npy?raw=true", 
+    "https://github.com/npapernot/multiple-teachers-for-privacy/blob/master/mnist_250_teachers_100_indices_used_by_student.npy?raw=true"]
+  if FLAGS.counts_file == "mnist_250_teachers_labels.npy" \
+    or FLAGS.indices_file == "mnist_250_teachers_100_indices_used_by_student.npy":
+    maybe_download(paper_binaries_mnist, os.getcwd())
+
+  # Binaries for SVHN results
+  paper_binaries_svhn = ["https://github.com/npapernot/multiple-teachers-for-privacy/blob/master/svhn_250_teachers_labels.npy?raw=true"]
+  if FLAGS.counts_file == "svhn_250_teachers_labels.npy":
+    maybe_download(paper_binaries_svhn, os.getcwd())
+
   input_mat = np.load(FLAGS.counts_file)
   if FLAGS.input_is_counts:
     counts_mat = input_mat
diff --git a/privacy/input.py b/privacy/input.py
index ab85b443..0742d261 100644
--- a/privacy/input.py
+++ b/privacy/input.py
@@ -62,6 +62,10 @@ def maybe_download(file_urls, directory):
     # Extract filename
     filename = file_url.split('/')[-1]
 
+    # If downloading from GitHub, remove suffix ?raw=True from local filename
+    if filename.endswith("?raw=true"):
+      filename = filename[:-9]
+
     # Deduce local file url
     #filepath = os.path.join(directory, filename)
     filepath = directory + '/' + filename
