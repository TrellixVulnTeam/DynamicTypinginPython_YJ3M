commit 3f5cef69faafae4ec49e8fad9fbfa9efc0f17436
Author: Chris Shallue <shallue@google.com>
Date:   Mon Jun 25 15:52:57 2018 -0700

    Add __str__ and __repr__ to periodic_event.Event.
    
    PiperOrigin-RevId: 202034513

diff --git a/research/astronet/light_curve_util/periodic_event.py b/research/astronet/light_curve_util/periodic_event.py
index 3a64ee73..4e795bea 100644
--- a/research/astronet/light_curve_util/periodic_event.py
+++ b/research/astronet/light_curve_util/periodic_event.py
@@ -36,6 +36,13 @@ class Event(object):
     self._duration = duration
     self._t0 = t0
 
+  def __str__(self):
+    return "<period={}, duration={}, t0={}>".format(self.period, self.duration,
+                                                    self.t0)
+
+  def __repr__(self):
+    return "Event({})".format(str(self))
+
   @property
   def period(self):
     return self._period
diff --git a/research/astronet/light_curve_util/periodic_event_test.py b/research/astronet/light_curve_util/periodic_event_test.py
index 5b1cf322..f3a334d6 100644
--- a/research/astronet/light_curve_util/periodic_event_test.py
+++ b/research/astronet/light_curve_util/periodic_event_test.py
@@ -25,6 +25,13 @@ from light_curve_util.periodic_event import Event
 
 class EventTest(absltest.TestCase):
 
+  def testStr(self):
+    self.assertEqual(str(Event(1, 2, 3)), "<period=1, duration=2, t0=3>")
+
+  def testRepr(self):
+    self.assertEqual(
+        repr(Event(1, 2, 3)), "Event(<period=1, duration=2, t0=3>)")
+
   def testEquals(self):
     event = Event(period=100, duration=5, t0=2)
 
@@ -72,5 +79,5 @@ class EventTest(absltest.TestCase):
         event.equals(Event(period=100, duration=5, t0=10), t0_durations=2))
 
 
-if __name__ == '__main__':
+if __name__ == "__main__":
   absltest.main()
