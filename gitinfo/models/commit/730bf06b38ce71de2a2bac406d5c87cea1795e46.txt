commit 730bf06b38ce71de2a2bac406d5c87cea1795e46
Author: Vivek Rathod <rathodv@google.com>
Date:   Fri Nov 3 08:46:15 2017 -0700

    fix py3 compatibility issues.

diff --git a/research/object_detection/builders/model_builder_test.py b/research/object_detection/builders/model_builder_test.py
index 9b33a91c..5e217094 100644
--- a/research/object_detection/builders/model_builder_test.py
+++ b/research/object_detection/builders/model_builder_test.py
@@ -331,7 +331,7 @@ class ModelBuilderTest(tf.test.TestCase):
       }"""
     model_proto = model_pb2.DetectionModel()
     text_format.Merge(model_text_proto, model_proto)
-    for extractor_type, extractor_class in FEATURE_EXTRACTOR_MAPS.iteritems():
+    for extractor_type, extractor_class in FEATURE_EXTRACTOR_MAPS.items():
       model_proto.faster_rcnn.feature_extractor.type = extractor_type
       model = model_builder.build(model_proto, is_training=True)
       self.assertIsInstance(model, faster_rcnn_meta_arch.FasterRCNNMetaArch)
@@ -730,7 +730,7 @@ class ModelBuilderTest(tf.test.TestCase):
       }"""
     model_proto = model_pb2.DetectionModel()
     text_format.Merge(model_text_proto, model_proto)
-    for extractor_type, extractor_class in FEATURE_EXTRACTOR_MAPS.iteritems():
+    for extractor_type, extractor_class in FEATURE_EXTRACTOR_MAPS.items():
       model_proto.faster_rcnn.feature_extractor.type = extractor_type
       model = model_builder.build(model_proto, is_training=True)
       self.assertIsInstance(model, rfcn_meta_arch.RFCNMetaArch)
diff --git a/research/object_detection/utils/config_util.py b/research/object_detection/utils/config_util.py
index f9c8fe6d..1bf30089 100644
--- a/research/object_detection/utils/config_util.py
+++ b/research/object_detection/utils/config_util.py
@@ -195,7 +195,7 @@ def merge_external_params_with_configs(configs, hparams=None, **kwargs):
 
   if hparams:
     kwargs.update(hparams.values())
-  for key, value in kwargs.iteritems():
+  for key, value in kwargs.items():
     if key == "learning_rate":
       _update_initial_learning_rate(configs, value)
       tf.logging.info("Overwriting learning rate: %f", value)
