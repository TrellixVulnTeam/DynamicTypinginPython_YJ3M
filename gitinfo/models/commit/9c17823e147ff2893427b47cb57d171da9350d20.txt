commit 9c17823e147ff2893427b47cb57d171da9350d20
Author: derekjchow <derekjchow@gmail.com>
Date:   Mon Jun 19 11:16:41 2017 -0700

    Add comment clarifying spatial squeeze. (#1613)

diff --git a/slim/nets/resnet_v1.py b/slim/nets/resnet_v1.py
index 19ae0a24..841e2fb2 100644
--- a/slim/nets/resnet_v1.py
+++ b/slim/nets/resnet_v1.py
@@ -161,6 +161,9 @@ def resnet_v1(inputs,
       max-pooling, if False excludes it.
     spatial_squeeze: if True, logits is of shape [B, C], if false logits is
         of shape [B, 1, 1, C], where B is batch_size and C is number of classes.
+        To use this parameter, the input images must be smaller than 300x300
+        pixels, in which case the output logit layer does not contain spatial
+        information and can be removed.
     reuse: whether or not the network and its variables should be reused. To be
       able to reuse 'scope' must be given.
     scope: Optional variable_scope.
@@ -200,16 +203,14 @@ def resnet_v1(inputs,
         if num_classes is not None:
           net = slim.conv2d(net, num_classes, [1, 1], activation_fn=None,
                             normalizer_fn=None, scope='logits')
-        if spatial_squeeze:
-          logits = tf.squeeze(net, [1, 2], name='SpatialSqueeze')
-        else:
-          logits = net
+          if spatial_squeeze:
+            net = tf.squeeze(net, [1, 2], name='SpatialSqueeze')
         # Convert end_points_collection into a dictionary of end_points.
         end_points = slim.utils.convert_collection_to_dict(
             end_points_collection)
         if num_classes is not None:
-          end_points['predictions'] = slim.softmax(logits, scope='predictions')
-        return logits, end_points
+          end_points['predictions'] = slim.softmax(net, scope='predictions')
+        return net, end_points
 resnet_v1.default_image_size = 224
 
 
diff --git a/slim/nets/resnet_v2.py b/slim/nets/resnet_v2.py
index f5af1033..0951c1ed 100644
--- a/slim/nets/resnet_v2.py
+++ b/slim/nets/resnet_v2.py
@@ -158,6 +158,9 @@ def resnet_v2(inputs,
       results of an activation-less convolution.
     spatial_squeeze: if True, logits is of shape [B, C], if false logits is
         of shape [B, 1, 1, C], where B is batch_size and C is number of classes.
+        To use this parameter, the input images must be smaller than 300x300
+        pixels, in which case the output logit layer does not contain spatial
+        information and can be removed.
     reuse: whether or not the network and its variables should be reused. To be
       able to reuse 'scope' must be given.
     scope: Optional variable_scope.
@@ -207,16 +210,14 @@ def resnet_v2(inputs,
         if num_classes is not None:
           net = slim.conv2d(net, num_classes, [1, 1], activation_fn=None,
                             normalizer_fn=None, scope='logits')
-        if spatial_squeeze:
-          logits = tf.squeeze(net, [1, 2], name='SpatialSqueeze')
-        else:
-          logits = net
+          if spatial_squeeze:
+            net = tf.squeeze(net, [1, 2], name='SpatialSqueeze')
         # Convert end_points_collection into a dictionary of end_points.
         end_points = slim.utils.convert_collection_to_dict(
             end_points_collection)
         if num_classes is not None:
-          end_points['predictions'] = slim.softmax(logits, scope='predictions')
-        return logits, end_points
+          end_points['predictions'] = slim.softmax(net, scope='predictions')
+        return net, end_points
 resnet_v2.default_image_size = 224
 
 
