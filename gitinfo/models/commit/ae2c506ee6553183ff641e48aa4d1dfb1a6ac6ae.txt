commit ae2c506ee6553183ff641e48aa4d1dfb1a6ac6ae
Author: Jonathan Huang <jonathanhuang@google.com>
Date:   Fri Jun 16 15:25:10 2017 -0700

    Change visualizer font and jupyter notebook line thickness (#1589)

diff --git a/object_detection/object_detection_tutorial.ipynb b/object_detection/object_detection_tutorial.ipynb
index 80a1e6b0..31e18991 100644
--- a/object_detection/object_detection_tutorial.ipynb
+++ b/object_detection/object_detection_tutorial.ipynb
@@ -94,7 +94,9 @@
    "source": [
     "## Variables\n",
     "\n",
-    "See the [detection model zoo](g3doc/detection_model_zoo.md) for a list of all models to try."
+    "Any model exported using the `export_inference_graph.py` tool can be loaded here simply by changing `PATH_TO_CKPT` to point to a new .pb file.  \n",
+    "\n",
+    "By default we use an \"SSD with Mobilenet\" model here. See the [detection model zoo](g3doc/detection_model_zoo.md) for a list of other models that can be run out-of-the-box with varying speeds and accuracies."
    ]
   },
   {
@@ -239,7 +241,6 @@
    "cell_type": "code",
    "execution_count": null,
    "metadata": {
-    "collapsed": true,
     "scrolled": true
    },
    "outputs": [],
@@ -272,7 +273,8 @@
     "          np.squeeze(classes).astype(np.int32),\n",
     "          np.squeeze(scores),\n",
     "          category_index,\n",
-    "          use_normalized_coordinates=True)\n",
+    "          use_normalized_coordinates=True,\n",
+    "          line_thickness=8)\n",
     "      plt.figure(figsize=IMAGE_SIZE)\n",
     "      plt.imshow(image_np)"
    ]
@@ -303,7 +305,7 @@
    "name": "python",
    "nbconvert_exporter": "python",
    "pygments_lexer": "ipython2",
-   "version": "2.7.13"
+   "version": "2.7.12"
   }
  },
  "nbformat": 4,
diff --git a/object_detection/utils/visualization_utils.py b/object_detection/utils/visualization_utils.py
index 76d95245..41d80db6 100644
--- a/object_detection/utils/visualization_utils.py
+++ b/object_detection/utils/visualization_utils.py
@@ -156,7 +156,10 @@ def draw_bounding_box_on_image(image,
     (left, right, top, bottom) = (xmin, xmax, ymin, ymax)
   draw.line([(left, top), (left, bottom), (right, bottom),
              (right, top), (left, top)], width=thickness, fill=color)
-  font = ImageFont.load_default()
+  try:
+    font = ImageFont.truetype('arial.ttf', 24)
+  except IOError:
+    font = ImageFont.load_default()
 
   text_bottom = top
   # Reverse list and print from bottom to top.
