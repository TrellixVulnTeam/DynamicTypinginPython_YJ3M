commit ecf13b0e5f0d47d60b0eedb15e7944327969a1fb
Author: A. Unique TensorFlower <gardener@tensorflow.org>
Date:   Tue Jun 23 11:38:19 2020 -0700

    Internal change
    
    PiperOrigin-RevId: 317908656

diff --git a/official/nlp/transformer/compute_bleu.py b/official/nlp/transformer/compute_bleu.py
index 92d54c30..f7dfd542 100644
--- a/official/nlp/transformer/compute_bleu.py
+++ b/official/nlp/transformer/compute_bleu.py
@@ -92,7 +92,11 @@ def bleu_wrapper(ref_filename, hyp_filename, case_sensitive=False):
       tf.io.gfile.GFile(ref_filename).read()).strip().splitlines()
   hyp_lines = tokenizer.native_to_unicode(
       tf.io.gfile.GFile(hyp_filename).read()).strip().splitlines()
+  return bleu_on_list(ref_lines, hyp_lines, case_sensitive)
 
+
+def bleu_on_list(ref_lines, hyp_lines, case_sensitive=False):
+  """Compute BLEU for two list of strings (reference and hypothesis)."""
   if len(ref_lines) != len(hyp_lines):
     raise ValueError(
         "Reference and translation files have different number of "
diff --git a/official/nlp/transformer/compute_bleu_test.py b/official/nlp/transformer/compute_bleu_test.py
index 6c578e36..5b370947 100644
--- a/official/nlp/transformer/compute_bleu_test.py
+++ b/official/nlp/transformer/compute_bleu_test.py
@@ -59,6 +59,14 @@ class ComputeBleuTest(tf.test.TestCase):
     tokenized = compute_bleu.bleu_tokenize(s)
     self.assertEqual(["Test0", ",", "1", "two", ",", "3"], tokenized)
 
+  def test_bleu_list(self):
+    ref = ["test 1 two 3", "more tests!"]
+    hyp = ["test 1 two 3", "More tests!"]
+    uncased_score = compute_bleu.bleu_on_list(ref, hyp, False)
+    cased_score = compute_bleu.bleu_on_list(ref, hyp, True)
+    self.assertEqual(uncased_score, 100)
+    self.assertLess(cased_score, 100)
+
 
 if __name__ == "__main__":
   tf.test.main()
