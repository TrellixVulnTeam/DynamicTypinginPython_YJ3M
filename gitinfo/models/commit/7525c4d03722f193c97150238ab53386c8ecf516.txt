commit 7525c4d03722f193c97150238ab53386c8ecf516
Author: Derek Chow <derekjchow@gmail.com>
Date:   Fri Jul 28 14:42:44 2017 -0700

    Set training step limits on pets configs.

diff --git a/object_detection/samples/configs/faster_rcnn_inception_resnet_v2_atrous_pets.config b/object_detection/samples/configs/faster_rcnn_inception_resnet_v2_atrous_pets.config
index e27c58e7..b9211464 100644
--- a/object_detection/samples/configs/faster_rcnn_inception_resnet_v2_atrous_pets.config
+++ b/object_detection/samples/configs/faster_rcnn_inception_resnet_v2_atrous_pets.config
@@ -111,6 +111,11 @@ train_config: {
   gradient_clipping_by_norm: 10.0
   fine_tune_checkpoint: "PATH_TO_BE_CONFIGURED/model.ckpt"
   from_detection_checkpoint: true
+  # Note: The below line limits the training process to 200K steps, which we
+  # empirically found to be sufficient enough to train the pets dataset. This
+  # effectively bypasses the learning rate schedule (the learning rate will
+  # never decay). Remove the below line to train indefinitely.
+  num_steps: 200000
   data_augmentation_options {
     random_horizontal_flip {
     }
@@ -126,6 +131,9 @@ train_input_reader: {
 
 eval_config: {
   num_examples: 2000
+  # Note: The below line limits the evaluation process to 10 evaluations.
+  # Remove the below line to evaluate indefinitely.
+  max_evals: 10
 }
 
 eval_input_reader: {
diff --git a/object_detection/samples/configs/faster_rcnn_resnet101_pets.config b/object_detection/samples/configs/faster_rcnn_resnet101_pets.config
index e61d5ff7..0a61d641 100644
--- a/object_detection/samples/configs/faster_rcnn_resnet101_pets.config
+++ b/object_detection/samples/configs/faster_rcnn_resnet101_pets.config
@@ -109,6 +109,11 @@ train_config: {
   gradient_clipping_by_norm: 10.0
   fine_tune_checkpoint: "PATH_TO_BE_CONFIGURED/model.ckpt"
   from_detection_checkpoint: true
+  # Note: The below line limits the training process to 200K steps, which we
+  # empirically found to be sufficient enough to train the pets dataset. This
+  # effectively bypasses the learning rate schedule (the learning rate will
+  # never decay). Remove the below line to train indefinitely.
+  num_steps: 200000
   data_augmentation_options {
     random_horizontal_flip {
     }
@@ -124,6 +129,9 @@ train_input_reader: {
 
 eval_config: {
   num_examples: 2000
+  # Note: The below line limits the evaluation process to 10 evaluations.
+  # Remove the below line to evaluate indefinitely.
+  max_evals: 10
 }
 
 eval_input_reader: {
diff --git a/object_detection/samples/configs/faster_rcnn_resnet152_pets.config b/object_detection/samples/configs/faster_rcnn_resnet152_pets.config
index 8a466ee6..bc6f1aa7 100644
--- a/object_detection/samples/configs/faster_rcnn_resnet152_pets.config
+++ b/object_detection/samples/configs/faster_rcnn_resnet152_pets.config
@@ -109,6 +109,11 @@ train_config: {
   gradient_clipping_by_norm: 10.0
   fine_tune_checkpoint: "PATH_TO_BE_CONFIGURED/model.ckpt"
   from_detection_checkpoint: true
+  # Note: The below line limits the training process to 200K steps, which we
+  # empirically found to be sufficient enough to train the pets dataset. This
+  # effectively bypasses the learning rate schedule (the learning rate will
+  # never decay). Remove the below line to train indefinitely.
+  num_steps: 200000
   data_augmentation_options {
     random_horizontal_flip {
     }
@@ -124,6 +129,9 @@ train_input_reader: {
 
 eval_config: {
   num_examples: 2000
+  # Note: The below line limits the evaluation process to 10 evaluations.
+  # Remove the below line to evaluate indefinitely.
+  max_evals: 10
 }
 
 eval_input_reader: {
diff --git a/object_detection/samples/configs/faster_rcnn_resnet50_pets.config b/object_detection/samples/configs/faster_rcnn_resnet50_pets.config
index 9764844d..042ee13d 100644
--- a/object_detection/samples/configs/faster_rcnn_resnet50_pets.config
+++ b/object_detection/samples/configs/faster_rcnn_resnet50_pets.config
@@ -109,6 +109,11 @@ train_config: {
   gradient_clipping_by_norm: 10.0
   fine_tune_checkpoint: "PATH_TO_BE_CONFIGURED/model.ckpt"
   from_detection_checkpoint: true
+  # Note: The below line limits the training process to 200K steps, which we
+  # empirically found to be sufficient enough to train the pets dataset. This
+  # effectively bypasses the learning rate schedule (the learning rate will
+  # never decay). Remove the below line to train indefinitely.
+  num_steps: 200000
   data_augmentation_options {
     random_horizontal_flip {
     }
@@ -124,6 +129,9 @@ train_input_reader: {
 
 eval_config: {
   num_examples: 2000
+  # Note: The below line limits the evaluation process to 10 evaluations.
+  # Remove the below line to evaluate indefinitely.
+  max_evals: 10
 }
 
 eval_input_reader: {
diff --git a/object_detection/samples/configs/rfcn_resnet101_pets.config b/object_detection/samples/configs/rfcn_resnet101_pets.config
index 5750563a..28f3d091 100644
--- a/object_detection/samples/configs/rfcn_resnet101_pets.config
+++ b/object_detection/samples/configs/rfcn_resnet101_pets.config
@@ -106,6 +106,11 @@ train_config: {
   gradient_clipping_by_norm: 10.0
   fine_tune_checkpoint: "PATH_TO_BE_CONFIGURED/model.ckpt"
   from_detection_checkpoint: true
+  # Note: The below line limits the training process to 200K steps, which we
+  # empirically found to be sufficient enough to train the pets dataset. This
+  # effectively bypasses the learning rate schedule (the learning rate will
+  # never decay). Remove the below line to train indefinitely.
+  num_steps: 200000
   data_augmentation_options {
     random_horizontal_flip {
     }
@@ -121,6 +126,9 @@ train_input_reader: {
 
 eval_config: {
   num_examples: 2000
+  # Note: The below line limits the evaluation process to 10 evaluations.
+  # Remove the below line to evaluate indefinitely.
+  max_evals: 10
 }
 
 eval_input_reader: {
diff --git a/object_detection/samples/configs/ssd_inception_v2_pets.config b/object_detection/samples/configs/ssd_inception_v2_pets.config
index fd799b4c..41b15880 100644
--- a/object_detection/samples/configs/ssd_inception_v2_pets.config
+++ b/object_detection/samples/configs/ssd_inception_v2_pets.config
@@ -151,6 +151,11 @@ train_config: {
   }
   fine_tune_checkpoint: "PATH_TO_BE_CONFIGURED/model.ckpt"
   from_detection_checkpoint: true
+  # Note: The below line limits the training process to 200K steps, which we
+  # empirically found to be sufficient enough to train the pets dataset. This
+  # effectively bypasses the learning rate schedule (the learning rate will
+  # never decay). Remove the below line to train indefinitely.
+  num_steps: 200000
   data_augmentation_options {
     random_horizontal_flip {
     }
@@ -170,6 +175,9 @@ train_input_reader: {
 
 eval_config: {
   num_examples: 2000
+  # Note: The below line limits the evaluation process to 10 evaluations.
+  # Remove the below line to evaluate indefinitely.
+  max_evals: 10
 }
 
 eval_input_reader: {
diff --git a/object_detection/samples/configs/ssd_mobilenet_v1_pets.config b/object_detection/samples/configs/ssd_mobilenet_v1_pets.config
index 8aeb7387..a6741357 100644
--- a/object_detection/samples/configs/ssd_mobilenet_v1_pets.config
+++ b/object_detection/samples/configs/ssd_mobilenet_v1_pets.config
@@ -157,6 +157,11 @@ train_config: {
   }
   fine_tune_checkpoint: "PATH_TO_BE_CONFIGURED/model.ckpt"
   from_detection_checkpoint: true
+  # Note: The below line limits the training process to 200K steps, which we
+  # empirically found to be sufficient enough to train the pets dataset. This
+  # effectively bypasses the learning rate schedule (the learning rate will
+  # never decay). Remove the below line to train indefinitely.
+  num_steps: 200000
   data_augmentation_options {
     random_horizontal_flip {
     }
@@ -176,6 +181,9 @@ train_input_reader: {
 
 eval_config: {
   num_examples: 2000
+  # Note: The below line limits the evaluation process to 10 evaluations.
+  # Remove the below line to evaluate indefinitely.
+  max_evals: 10
 }
 
 eval_input_reader: {
