commit ff64c8496b1b233ed3563b8cea580bb28cac2d93
Author: Thibaut Mattio <thibaut.mattio@gmail.com>
Date:   Thu Jul 6 14:33:51 2017 +0800

    Make tests compatible with Python 3
    
    * Change dictionnaries iteritems() to items()

diff --git a/object_detection/meta_architectures/faster_rcnn_meta_arch_test_lib.py b/object_detection/meta_architectures/faster_rcnn_meta_arch_test_lib.py
index 17e1f62b..1f7744a6 100644
--- a/object_detection/meta_architectures/faster_rcnn_meta_arch_test_lib.py
+++ b/object_detection/meta_architectures/faster_rcnn_meta_arch_test_lib.py
@@ -271,7 +271,7 @@ class FasterRCNNMetaArchTestBase(tf.test.TestCase):
         self.assertEqual(set(prediction_out.keys()), expected_output_keys)
 
         self.assertAllEqual(prediction_out['image_shape'], input_image_shape)
-        for output_key, expected_shape in expected_output_shapes.iteritems():
+        for output_key, expected_shape in expected_output_shapes.items():
           self.assertAllEqual(prediction_out[output_key].shape, expected_shape)
 
         # Check that anchors are clipped to window.
diff --git a/object_detection/models/feature_map_generators_test.py b/object_detection/models/feature_map_generators_test.py
index 690723db..f445e05c 100644
--- a/object_detection/models/feature_map_generators_test.py
+++ b/object_detection/models/feature_map_generators_test.py
@@ -63,7 +63,7 @@ class MultiResolutionFeatureMapGeneratorTest(tf.test.TestCase):
       sess.run(init_op)
       out_feature_maps = sess.run(feature_maps)
       out_feature_map_shapes = dict(
-          (key, value.shape) for key, value in out_feature_maps.iteritems())
+          (key, value.shape) for key, value in out_feature_maps.items())
       self.assertDictEqual(out_feature_map_shapes, expected_feature_map_shapes)
 
   def test_get_expected_feature_map_shapes_with_inception_v3(self):
@@ -93,7 +93,7 @@ class MultiResolutionFeatureMapGeneratorTest(tf.test.TestCase):
       sess.run(init_op)
       out_feature_maps = sess.run(feature_maps)
       out_feature_map_shapes = dict(
-          (key, value.shape) for key, value in out_feature_maps.iteritems())
+          (key, value.shape) for key, value in out_feature_maps.items())
       self.assertDictEqual(out_feature_map_shapes, expected_feature_map_shapes)
 
 
