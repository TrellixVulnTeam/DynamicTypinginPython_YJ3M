commit 9ca10d9f6f9c294fbaeebf26876883f1b1076504
Author: Stephen Cefali <scefali@sentry.io>
Date:   Mon Jan 13 09:39:28 2020 -0800

    feat(analytics): adds analytics functionality to sidebar clicks (#16369)

diff --git a/src/sentry/static/sentry/app/views/settings/components/settingsNavItem.tsx b/src/sentry/static/sentry/app/views/settings/components/settingsNavItem.tsx
index 798cfb5335..26d4464f22 100644
--- a/src/sentry/static/sentry/app/views/settings/components/settingsNavItem.tsx
+++ b/src/sentry/static/sentry/app/views/settings/components/settingsNavItem.tsx
@@ -12,6 +12,7 @@ type Props = {
   badge?: string | number | null;
   index?: boolean;
   id?: string;
+  onClick?: (e: React.MouseEvent) => void;
 };
 
 const SettingsNavItem = ({badge, label, index, id, ...props}: Props) => {
diff --git a/src/sentry/static/sentry/app/views/settings/components/settingsNavigationGroup.tsx b/src/sentry/static/sentry/app/views/settings/components/settingsNavigationGroup.tsx
index d459d61eda..4276053c15 100644
--- a/src/sentry/static/sentry/app/views/settings/components/settingsNavigationGroup.tsx
+++ b/src/sentry/static/sentry/app/views/settings/components/settingsNavigationGroup.tsx
@@ -4,6 +4,7 @@ import styled from '@emotion/styled';
 import SettingsNavItem from 'app/views/settings/components/settingsNavItem';
 import replaceRouterParams from 'app/utils/replaceRouterParams';
 import {NavigationGroupProps} from 'app/views/settings/types';
+import {trackAnalyticsEvent} from 'app/utils/analytics';
 
 const SettingsNavigationGroup = (props: NavigationGroupProps) => {
   const {organization, project, name, items} = props;
@@ -11,7 +12,7 @@ const SettingsNavigationGroup = (props: NavigationGroupProps) => {
   return (
     <NavSection data-test-id={name}>
       <SettingsHeading>{name}</SettingsHeading>
-      {items.map(({path, title, index, show, badge, id}) => {
+      {items.map(({path, title, index, show, badge, id, recordAnalytics}) => {
         if (typeof show === 'function' && !show(props)) {
           return null;
         }
@@ -24,6 +25,20 @@ const SettingsNavigationGroup = (props: NavigationGroupProps) => {
           ...(project ? {projectId: project.slug} : {}),
         });
 
+        const handleClick = () => {
+          //only call the analytics event if the URL is changing
+          if (recordAnalytics && to !== window.location.pathname) {
+            trackAnalyticsEvent({
+              organization_id: organization && organization.id,
+              project_id: project && project.id,
+              eventName: 'Sidebar Item Clicked',
+              eventKey: 'sidebar.item_clicked',
+              sidebar_item_id: id,
+              dest: path,
+            });
+          }
+        };
+
         return (
           <SettingsNavItem
             key={title}
@@ -32,6 +47,7 @@ const SettingsNavigationGroup = (props: NavigationGroupProps) => {
             index={index}
             badge={badgeResult}
             id={id}
+            onClick={handleClick}
           />
         );
       })}
diff --git a/src/sentry/static/sentry/app/views/settings/organization/navigationConfiguration.tsx b/src/sentry/static/sentry/app/views/settings/organization/navigationConfiguration.tsx
index 2552e4aef8..2b8967287a 100644
--- a/src/sentry/static/sentry/app/views/settings/organization/navigationConfiguration.tsx
+++ b/src/sentry/static/sentry/app/views/settings/organization/navigationConfiguration.tsx
@@ -74,6 +74,7 @@ const organizationNavigation: NavigationSection[] = [
           'Manage organization-level integrations, including: Slack, Github, Bitbucket, Jira, and Azure DevOps'
         ),
         id: 'integrations',
+        recordAnalytics: true,
       },
       {
         path: `${pathPrefix}/developer-settings/`,
diff --git a/src/sentry/static/sentry/app/views/settings/types.ts b/src/sentry/static/sentry/app/views/settings/types.ts
index 49e031beab..79ccbf981c 100644
--- a/src/sentry/static/sentry/app/views/settings/types.ts
+++ b/src/sentry/static/sentry/app/views/settings/types.ts
@@ -41,6 +41,10 @@ export type NavigationItem = {
    * Returns the text of the badge to render next to the navigation.
    */
   badge?: (opts: NavigationGroupProps) => string | number | null;
+  /**
+   * Should clicking on the sidebar generate an analytics event
+   */
+  recordAnalytics?: boolean;
 };
 
 export type NavigationSection = {
