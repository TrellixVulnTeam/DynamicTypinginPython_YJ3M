commit e42f06282299ae16f3978b901425f9634f9bacf2
Author: David Cramer <dcramer@gmail.com>
Date:   Fri Jan 30 11:27:25 2015 -0800

    Handle case where theres no MAILGUN_API_KEY

diff --git a/src/sentry/web/frontend/mailgun_inbound_webhook.py b/src/sentry/web/frontend/mailgun_inbound_webhook.py
index 1fd3a98182..a1374e16de 100644
--- a/src/sentry/web/frontend/mailgun_inbound_webhook.py
+++ b/src/sentry/web/frontend/mailgun_inbound_webhook.py
@@ -30,6 +30,10 @@ class MailgunInboundWebhookView(View):
         signature = request.POST['signature']
         timestamp = request.POST['timestamp']
 
+        if not settings.MAILGUN_API_KEY:
+            logging.error('MAILGUN_API_KEY is not set')
+            return HttpResponse(status=500)
+
         if not self.verify(settings.MAILGUN_API_KEY, token, timestamp, signature):
             logging.info('Unable to verify signature for mailgun request')
             return HttpResponse(status=403)
diff --git a/tests/sentry/web/frontend/test_mailgun_inbound_webhook.py b/tests/sentry/web/frontend/test_mailgun_inbound_webhook.py
index b728dbfe60..509cb7c59b 100644
--- a/tests/sentry/web/frontend/test_mailgun_inbound_webhook.py
+++ b/tests/sentry/web/frontend/test_mailgun_inbound_webhook.py
@@ -18,6 +18,19 @@ class TestMailgunInboundWebhookView(TestCase):
 
     @mock.patch('sentry.web.frontend.mailgun_inbound_webhook.process_inbound_email')
     def test_invalid_signature(self, process_inbound_email):
+        with self.settings(MAILGUN_API_KEY='a' * 32):
+            resp = self.client.post(reverse('sentry-mailgun-inbound-hook'), {
+                'To': 'Sentry <%s>' % (self.mailto,),
+                'From': 'David <%s>' % (self.user.email,),
+                'body-plain': body_plain,
+                'signature': '',
+                'token': '',
+                'timestamp': '',
+            })
+            assert resp.status_code == 403
+
+    @mock.patch('sentry.web.frontend.mailgun_inbound_webhook.process_inbound_email')
+    def test_missing_api_key(self, process_inbound_email):
         resp = self.client.post(reverse('sentry-mailgun-inbound-hook'), {
             'To': 'Sentry <%s>' % (self.mailto,),
             'From': 'David <%s>' % (self.user.email,),
@@ -26,22 +39,23 @@ class TestMailgunInboundWebhookView(TestCase):
             'token': '',
             'timestamp': '',
         })
-        assert resp.status_code == 403
+        assert resp.status_code == 500
 
     @mock.patch('sentry.web.frontend.mailgun_inbound_webhook.process_inbound_email')
     def test_simple(self, process_inbound_email):
         token = 'a' * 50
         timestamp = '1422513193'
-        signature = '436688eb38038505394ff31e621c1e4c61b26b09638016b6d630d6199aa48403'
+        signature = '414a4705e6c12a39905748549f9135fbe8b739a5b12b2349ee40f31d3ee12f83'
 
-        resp = self.client.post(reverse('sentry-mailgun-inbound-hook'), {
-            'To': 'Sentry <%s>' % (self.mailto,),
-            'From': 'David <%s>' % (self.user.email,),
-            'body-plain': body_plain,
-            'signature': signature,
-            'token': token,
-            'timestamp': timestamp,
-        })
+        with self.settings(MAILGUN_API_KEY='a' * 32):
+            resp = self.client.post(reverse('sentry-mailgun-inbound-hook'), {
+                'To': 'Sentry <%s>' % (self.mailto,),
+                'From': 'David <%s>' % (self.user.email,),
+                'body-plain': body_plain,
+                'signature': signature,
+                'token': token,
+                'timestamp': timestamp,
+            })
         assert resp.status_code == 201
         process_inbound_email.delay.assert_called_once_with(
             self.user.email,
