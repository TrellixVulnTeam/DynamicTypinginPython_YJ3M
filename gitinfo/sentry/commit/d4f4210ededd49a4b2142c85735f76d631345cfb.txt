commit d4f4210ededd49a4b2142c85735f76d631345cfb
Author: David Cramer <dcramer@gmail.com>
Date:   Mon Aug 30 17:28:27 2010 -0700

    Added in example project and some basic ideas for dashboard

diff --git a/TODO b/TODO
new file mode 100644
index 0000000000..7981318c4c
--- /dev/null
+++ b/TODO
@@ -0,0 +1 @@
+* Add proper template debugging
\ No newline at end of file
diff --git a/dblog/models.py b/dblog/models.py
index 269eef37fe..02911f2464 100644
--- a/dblog/models.py
+++ b/dblog/models.py
@@ -67,6 +67,11 @@ class MessageBase(Model):
     shortened_url.short_description = _('url')
     shortened_url.admin_order_field = 'url'
     
+    def shortened_traceback(self):
+        return '\n'.join(self.traceback.split('\n')[-5:])
+    shortened_traceback.short_description = _('traceback')
+    shortened_traceback.admin_order_field = 'traceback'
+    
     def full_url(self):
         return self.data.get('url') or self.url
     full_url.short_description = _('url')
@@ -124,7 +129,7 @@ class GroupedMessage(MessageBase):
             modules = get_installed_apps()
 
             # only retrive last 10 lines
-            tb = traceback.extract_tb(exc_traceback, limit=10)
+            tb = traceback.extract_tb(exc_traceback)
 
             # retrive final file and line number where the exception occured
             file, line_number = tb[-1][:2]
diff --git a/dblog/templates/dblog/group.html b/dblog/templates/dblog/group.html
new file mode 100644
index 0000000000..905a569f45
--- /dev/null
+++ b/dblog/templates/dblog/group.html
@@ -0,0 +1,22 @@
+{% extends "dblog/index.html" %}
+
+{% block body %}
+	<div id="header"> 
+		<h1>Django DB Log</h1> 
+		<h2>Message Details</h2>
+	</div> 
+
+	<div id="body"> 
+		<ul class="messages">
+			<li class="{% cycle 'row1' 'row2' %} level-{{ message.level }} priority-{{ message.priority }} active">
+				<span class="count">{{ message.times_seen }}</span>
+				<h3>{{ message.view }}</h3>
+				<p class="message">{{ message.error }}</p>
+				<pre class="traceback">{{ message.shortened_traceback }}</pre>
+			</li>
+		</ul>
+		<pre>{{ message.traceback }}</pre>
+	</div>
+
+	<div id="footer">Powered by sexy Django magic.</div> 
+{% endblock %}
\ No newline at end of file
diff --git a/dblog/templates/dblog/index.html b/dblog/templates/dblog/index.html
new file mode 100644
index 0000000000..888a015f76
--- /dev/null
+++ b/dblog/templates/dblog/index.html
@@ -0,0 +1,85 @@
+<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd"> 
+<html lang="en">
+	<head> 
+		<meta http-equiv="content-type" content="text/html; charset=utf-8"> 
+		<meta name="robots" content="NONE,NOARCHIVE"><title>Django DB Log</title> 
+		<style type="text/css"> 
+			html * { padding:0; margin:0; }
+			body * { padding:10px 20px; }
+			body * * { padding:0; }
+			body { font:small sans-serif; background:#f6f6f6; }
+			h1 { font-weight:normal; }
+			h2 { margin-bottom:.8em; }
+			h2 span { font-size:80%; color:#666; font-weight:normal; }
+			h3 { margin:1em 0 .5em 0; }
+			h4 { margin:0 0 .5em 0; font-weight: normal; }
+			table { border:1px solid #ccc; border-collapse: collapse; width:100%; background:white; }
+			tbody td, tbody th { vertical-align:top; padding:2px 3px; }
+			thead th { padding:1px 6px 1px 3px; background:#fefefe; text-align:left; font-weight:normal; font-size:11px; border:1px solid #ddd; }
+			tbody th { width:12em; text-align:right; color:#666; padding-right:.5em; }
+			a { color: blue; }
+			a:visited { color: blue; }
+			ul { margin: 1em 0 1em 2em; }
+			#header { background: #e0ebff; border-bottom:1px solid #ddd; }
+			#header h2 { font-weight: normal; color: #666; margin-bottom: 0; }
+			#footer { background:#eee; clear: both; border-top:1px solid #ddd; }
+			#header table { border:none; background:transparent; }
+			.messages { list-style: none; margin-left: 0; }
+			.messages .count { width: 25px; text-align: center; background: #000; -moz-border-radius: 4px; border-radius: 4px; padding: 0 8px; line-height: 19px; color: #fff; display: inline-block; margin-right: 5px; }
+			.messages h3 { height: 20px; line-height: 20px; display: inline-block; margin: 0; }
+			.messages .message {
+				color: #666;
+				margin-top: 8px;
+				margin-left: 50px;
+				font-size: 0.9em;
+			}
+			.messages .traceback { display: none; }
+			.messages li { padding: 8px; }
+			.messages .row1 { background: #f9f9f9; }
+			.messages .priority-high .count, .messages .priority-veryhigh .count {
+				background: red;
+			}
+			.messages li:hover, .messages .active { background: #e0ebff; cursor: pointer; }
+			pre {
+				white-space: pre-wrap;       /* CSS-3                  */
+				white-space: -moz-pre-wrap;  /* Mozilla, since 1999    */
+				white-space: -pre-wrap;      /* Opera 4-6              */
+				white-space: -o-pre-wrap;    /* Opera 7                */
+				word-wrap: break-word;       /* Internet Explorer 5.5+ */
+				color:;
+			}
+			.nextprev .count { background: #000; -moz-border-radius: 4px; border-radius: 4px; padding: 0 5px; line-height: 19px; color: #fff; display: inline-block; }
+			.nextprev { list-style: none; margin-left: 0; margin-bottom: 2em; }
+			.nextprev a { text-decoration: none; font-size: 1.2em; }
+			.nextprev .next { float: right; }
+			.nextprev .prev { display: inline-block; }
+		</style> 
+	</head> 
+ 
+	<body> 
+		{% block body %}
+		<div id="header"> 
+			<h1>Django DB Log</h1> 
+			<h2>Dashboard</h2>
+		</div> 
+ 
+		<div id="body"> 
+			<ul class="messages">
+				{% for message in message_list %}
+					<li class="{% cycle 'row1' 'row2' %} level-{{ message.level }} priority-{{ message.priority }}" onclick="window.location.href='{% url dblog-group message.pk %}'">
+						<span class="count">{{ message.times_seen }}</span>
+						<h3>{{ message.view }}</h3>
+						<p class="message">{{ message.error }}</p>
+						<pre class="traceback">{{ message.shortened_traceback }}</pre>
+					</li>
+				{% endfor %}
+			</ul>
+			<!-- <div id="details">
+				<pre>{{ message.traceback }}</pre>
+			</div> -->
+		</div>
+ 
+		<div id="footer">Powered by sexy Django magic.</div> 
+		{% endblock %}
+	</body>
+</html>
\ No newline at end of file
diff --git a/dblog/urls.py b/dblog/urls.py
index bd479f64c9..5ed293b5ea 100644
--- a/dblog/urls.py
+++ b/dblog/urls.py
@@ -3,10 +3,13 @@ from django.conf.urls.defaults import *
 from django.utils.hashcompat import md5_constructor
 
 from feeds import MessageFeed, SummaryFeed
+import views
 
 hashed_secret = md5_constructor(settings.SECRET_KEY).hexdigest()
 
 urlpatterns = patterns('',
-    url(r'feeds/%s/messages.xml' % hashed_secret, MessageFeed(), name='dblog-feed-messages'),
-    url(r'feeds/%s/summaries.xml' % hashed_secret, SummaryFeed(), name='dblog-feed-summaries'),
+    url(r'^feeds/%s/messages.xml$' % hashed_secret, MessageFeed(), name='dblog-feed-messages'),
+    url(r'^feeds/%s/summaries.xml$' % hashed_secret, SummaryFeed(), name='dblog-feed-summaries'),
+    url(r'^group/(\d+)$', views.group, name='dblog-group'),
+    url(r'^$', views.index, name='dblog'),
 )
diff --git a/dblog/views.py b/dblog/views.py
new file mode 100644
index 0000000000..f9e0891d14
--- /dev/null
+++ b/dblog/views.py
@@ -0,0 +1,64 @@
+# TODO: login
+from django.shortcuts import render_to_response
+
+from dblog.models import GroupedMessage
+
+from math import log
+
+def index(request):
+    # this only works in postgres
+    message_list = list(GroupedMessage.objects.filter(
+        status=0,
+    ).extra(
+        select={
+            'score': 'times_seen / (pow((floor(extract(epoch from now() - last_seen) / 3600) + 2), 1.25) + 1)',
+        }
+    ).order_by('-score', '-last_seen')[0:10])
+    
+    for m in message_list:
+        score = log(m.score)
+        if score > 2:
+            m.priority = 'high'
+        elif score > 1:
+            m.priority = 'medium'
+        elif score >= 0:
+            m.priority = 'low'
+        elif score < 0:
+            m.priority = 'verylow'
+        else:
+            m.priority = 'veryhigh'
+    
+    message = message_list[0]
+    
+    return render_to_response('dblog/index.html', locals())
+
+def group(request, group_id):
+    message = GroupedMessage.objects.extra(
+        select={
+            'score': 'times_seen / (pow((floor(extract(epoch from now() - last_seen) / 3600) + 2), 1.25) + 1)',
+        }
+    ).get(pk=group_id)
+    
+    try:
+        prev_message = GroupedMessage.objects.filter(id__gt=group_id).order_by('id')[0]
+    except IndexError:
+        prev_message = None
+
+    try:
+        next_message = GroupedMessage.objects.filter(id__lt=group_id).order_by('-id')[0]
+    except IndexError:
+        next_message = None
+    
+    score = log(message.score)
+    if score > 2:
+        message.priority = 'high'
+    elif score > 1:
+        message.priority = 'medium'
+    elif score >= 0:
+        message.priority = 'low'
+    elif score < 0:
+        message.priority = 'verylow'
+    else:
+        message.priority = 'veryhigh'
+    
+    return render_to_response('dblog/group.html', locals())
\ No newline at end of file
diff --git a/example_project/__init__.py b/example_project/__init__.py
new file mode 100644
index 0000000000..e69de29bb2
diff --git a/example_project/manage.py b/example_project/manage.py
new file mode 100755
index 0000000000..5e78ea979e
--- /dev/null
+++ b/example_project/manage.py
@@ -0,0 +1,11 @@
+#!/usr/bin/env python
+from django.core.management import execute_manager
+try:
+    import settings # Assumed to be in the same directory.
+except ImportError:
+    import sys
+    sys.stderr.write("Error: Can't find the file 'settings.py' in the directory containing %r. It appears you've customized things.\nYou'll have to run django-admin.py, passing it your settings module.\n(If the file settings.py does indeed exist, it's causing an ImportError somehow.)\n" % __file__)
+    sys.exit(1)
+
+if __name__ == "__main__":
+    execute_manager(settings)
diff --git a/example_project/settings.py b/example_project/settings.py
new file mode 100644
index 0000000000..206c9154f0
--- /dev/null
+++ b/example_project/settings.py
@@ -0,0 +1,100 @@
+import os.path
+
+# Django settings for example_project project.
+
+DEBUG = True
+TEMPLATE_DEBUG = DEBUG
+
+ADMINS = (
+    # ('Your Name', 'your_email@domain.com'),
+)
+
+MANAGERS = ADMINS
+
+PROJECT_ROOT = os.path.dirname(__file__)
+
+DATABASES = {
+    'default': {
+        'ENGINE': 'django.db.backends.postgresql_psycopg2', # Add 'postgresql_psycopg2', 'postgresql', 'mysql', 'sqlite3' or 'oracle'.
+        'NAME': 'dblog',                      # Or path to database file if using sqlite3.
+        'USER': 'postgres',                      # Not used with sqlite3.
+        'PASSWORD': '',                  # Not used with sqlite3.
+        'HOST': '',                      # Set to empty string for localhost. Not used with sqlite3.
+        'PORT': '',                      # Set to empty string for default. Not used with sqlite3.
+    }
+}
+
+# Local time zone for this installation. Choices can be found here:
+# http://en.wikipedia.org/wiki/List_of_tz_zones_by_name
+# although not all choices may be available on all operating systems.
+# On Unix systems, a value of None will cause Django to use the same
+# timezone as the operating system.
+# If running in a Windows environment this must be set to the same as your
+# system time zone.
+TIME_ZONE = 'America/Chicago'
+
+# Language code for this installation. All choices can be found here:
+# http://www.i18nguy.com/unicode/language-identifiers.html
+LANGUAGE_CODE = 'en-us'
+
+SITE_ID = 1
+
+# If you set this to False, Django will make some optimizations so as not
+# to load the internationalization machinery.
+USE_I18N = True
+
+# If you set this to False, Django will not format dates, numbers and
+# calendars according to the current locale
+USE_L10N = True
+
+# Absolute path to the directory that holds media.
+# Example: "/home/media/media.lawrence.com/"
+MEDIA_ROOT = ''
+
+# URL that handles the media served from MEDIA_ROOT. Make sure to use a
+# trailing slash if there is a path component (optional in other cases).
+# Examples: "http://media.lawrence.com", "http://example.com/media/"
+MEDIA_URL = ''
+
+# URL prefix for admin media -- CSS, JavaScript and images. Make sure to use a
+# trailing slash.
+# Examples: "http://foo.com/media/", "/media/".
+ADMIN_MEDIA_PREFIX = '/media/'
+
+# Make this unique, and don't share it with anybody.
+SECRET_KEY = ')*)&8a36)6%74e@-ne5(-!8a(vv#tkv)(eyg&@0=zd^pl!7=y@'
+
+# List of callables that know how to import templates from various sources.
+TEMPLATE_LOADERS = (
+    'django.template.loaders.filesystem.Loader',
+    'django.template.loaders.app_directories.Loader',
+#     'django.template.loaders.eggs.Loader',
+)
+
+MIDDLEWARE_CLASSES = (
+    'django.middleware.common.CommonMiddleware',
+    'django.contrib.sessions.middleware.SessionMiddleware',
+    'django.middleware.csrf.CsrfViewMiddleware',
+    'django.contrib.auth.middleware.AuthenticationMiddleware',
+    'django.contrib.messages.middleware.MessageMiddleware',
+)
+
+ROOT_URLCONF = 'example_project.urls'
+
+TEMPLATE_DIRS = (
+    # Put strings here, like "/home/html/django_templates" or "C:/www/django/templates".
+    # Always use forward slashes, even on Windows.
+    # Don't forget to use absolute paths, not relative paths.
+    os.path.join(PROJECT_ROOT, 'templates'),
+)
+
+INSTALLED_APPS = (
+    'django.contrib.auth',
+    'django.contrib.contenttypes',
+    'django.contrib.sessions',
+    'django.contrib.sites',
+    'django.contrib.messages',
+    'dblog',
+    # Uncomment the next line to enable the admin:
+    # 'django.contrib.admin',
+)
diff --git a/example_project/templates/404.html b/example_project/templates/404.html
new file mode 100644
index 0000000000..48bf8161f9
--- /dev/null
+++ b/example_project/templates/404.html
@@ -0,0 +1 @@
+404 error
\ No newline at end of file
diff --git a/example_project/templates/500.html b/example_project/templates/500.html
new file mode 100644
index 0000000000..e95188a270
--- /dev/null
+++ b/example_project/templates/500.html
@@ -0,0 +1 @@
+500 error
\ No newline at end of file
diff --git a/example_project/urls.py b/example_project/urls.py
new file mode 100644
index 0000000000..4d6556652d
--- /dev/null
+++ b/example_project/urls.py
@@ -0,0 +1,19 @@
+from django.conf.urls.defaults import *
+
+# Uncomment the next two lines to enable the admin:
+# from django.contrib import admin
+# admin.autodiscover()
+
+urlpatterns = patterns('',
+    # Example:
+    # (r'^example_project/', include('example_project.foo.urls')),
+
+    # Uncomment the admin/doc line below and add 'django.contrib.admindocs' 
+    # to INSTALLED_APPS to enable admin documentation:
+    # (r'^admin/doc/', include('django.contrib.admindocs.urls')),
+
+    # Uncomment the next line to enable the admin:
+    # (r'^admin/', include(admin.site.urls)),
+    
+    (r'^', include('dblog.urls')),
+)
