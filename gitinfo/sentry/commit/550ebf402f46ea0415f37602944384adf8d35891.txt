commit 550ebf402f46ea0415f37602944384adf8d35891
Author: David Cramer <dcramer@gmail.com>
Date:   Mon Oct 20 09:36:44 2014 +0200

    Migrate create team member

diff --git a/src/sentry/templates/sentry/teams/members/new.html b/src/sentry/templates/sentry/teams/members/new.html
index 0d4437c368..434709989f 100644
--- a/src/sentry/templates/sentry/teams/members/new.html
+++ b/src/sentry/templates/sentry/teams/members/new.html
@@ -1,40 +1,20 @@
-{% extends "sentry/teams/members/index.html" %}
+{% extends "sentry/bases/team.html" %}
 
 {% load i18n %}
 
-{% block title %}{% trans "New Member" %} | {{ block.super }}{% endblock %}
+{% block team_members_nav %} class="active"{% endblock %}
 
-{% block sidebar %}
-    {{ block.super }}
-    <h6>{% trans "Access Levels" %}</h6>
-    <p>{% blocktrans %}The primary difference between access levels is team management. Any member with admin access is treated almost identical to the team owner.{% endblocktrans %}</p>
-{% endblock %}
+{% block title %}{% trans "New Member" %} | {{ block.super }}{% endblock %}
 
 {% block inner %}
-{% if invite_form %}
-    <ul class="nav nav-tabs">
-        <li class="active"><a href="#invite" data-toggle="tab">{% trans "Invite a new user" %}</a></li>
-        <li><a href="#add" data-toggle="tab">{% trans "Add an existing user" %}</a></li>
-    </ul>
-    <div class="tab-content">
-        <div class="tab-pane active" id="invite">
-            <p>{% trans "Invite a member to join this team via their email address. If they do not already have an account, they will first be asked to create one." %}</p>
-            {% with invite_form as form %}
-                {% trans "Send Invite" as submit_label %}
-                {% include "sentry/partial/_form.html" %}
-            {% endwith %}
-        </div>
-        <div class="tab-pane" id="add">
-{% endif %}
-            <p>{% trans "You may add a user by their username if they already have an account." %}</p>
-            {% with add_form as form %}
-                {% include "sentry/partial/_form.html" %}
-            {% endwith %}
-{% if invite_form %}
-        </div>
-    </div>
-{% endif %}
-
+    {% if is_invite %}
+        <p>{% trans "Invite a member to join this team via their email address. If they do not already have an account, they will first be asked to create one." %}</p>
+        {% trans "Send Invite" as submit_label %}
+        {% include "sentry/partial/_form.html" %}
+    {% else %}
+        <p>{% trans "You may add a user by their username if they already have an account." %}</p>
+        {% include "sentry/partial/_form.html" %}
+    {% endif %}
     <script type="text/javascript">
     new app.AddTeamMemberPage();
     </script>
diff --git a/src/sentry/web/frontend/create_team_member.py b/src/sentry/web/frontend/create_team_member.py
new file mode 100644
index 0000000000..771440b222
--- /dev/null
+++ b/src/sentry/web/frontend/create_team_member.py
@@ -0,0 +1,109 @@
+from __future__ import absolute_import
+
+from django import forms
+from django.conf import settings
+from django.contrib import messages
+from django.core.urlresolvers import reverse
+from django.http import HttpResponseRedirect
+from django.utils.translation import ugettext_lazy as _
+
+from sentry.models import PendingTeamMember, TeamMemberType, TeamMember
+from sentry.permissions import can_add_team_member
+from sentry.web.forms.fields import UserField
+from sentry.web.frontend.base import TeamView
+
+
+class InviteTeamMemberForm(forms.ModelForm):
+    class Meta:
+        fields = ('type', 'email')
+        model = PendingTeamMember
+
+    def __init__(self, team, *args, **kwargs):
+        self.team = team
+        super(InviteTeamMemberForm, self).__init__(*args, **kwargs)
+
+    def clean_email(self):
+        value = self.cleaned_data['email']
+        if not value:
+            return None
+
+        if self.team.member_set.filter(user__email__iexact=value).exists():
+            raise forms.ValidationError(_('There is already a member with this email address'))
+
+        if self.team.pending_member_set.filter(email__iexact=value).exists():
+            raise forms.ValidationError(_('There is already a pending invite for this user'))
+
+        return value
+
+
+class NewTeamMemberForm(forms.ModelForm):
+    user = UserField()
+
+    class Meta:
+        fields = ('type', 'user')
+        model = TeamMember
+
+    def __init__(self, team, *args, **kwargs):
+        self.team = team
+        super(NewTeamMemberForm, self).__init__(*args, **kwargs)
+
+    def clean_user(self):
+        value = self.cleaned_data['user']
+        if not value:
+            return None
+
+        if self.team.member_set.filter(user=value).exists():
+            raise forms.ValidationError(_('User is already a member of this team'))
+
+        return value
+
+
+class CreateTeamMemberView(TeamView):
+    required_access = TeamMemberType.ADMIN
+
+    def get_form(self, request, team):
+        initial = {
+            'type': TeamMemberType.MEMBER,
+        }
+
+        if settings.SENTRY_ENABLE_INVITES:
+            form_cls = InviteTeamMemberForm
+        else:
+            form_cls = NewTeamMemberForm
+
+        return form_cls(team, request.POST or None, initial=initial)
+
+    def get(self, request, organization, team):
+        if not can_add_team_member(request.user, team):
+            return HttpResponseRedirect(reverse('sentry'))
+
+        form = self.get_form(request, team)
+
+        context = {
+            'form': form,
+            'is_invite': settings.SENTRY_ENABLE_INVITES,
+        }
+
+        return self.respond('sentry/teams/members/new.html', context)
+
+    def post(self, request, organization, team):
+        if not can_add_team_member(request.user, team):
+            return HttpResponseRedirect(reverse('sentry'))
+
+        form = self.get_form(request, team)
+        if form.is_valid():
+            pm = form.save(commit=False)
+            pm.team = team
+            pm.save()
+
+            messages.add_message(request, messages.SUCCESS,
+                _('The team member was added.'))
+
+            return HttpResponseRedirect(reverse('sentry-manage-team-members', args=[team.slug]))
+
+        context = {
+            'form': form,
+            'is_invite': settings.SENTRY_ENABLE_INVITES,
+        }
+
+        return self.respond('sentry/teams/members/new.html', context)
diff --git a/src/sentry/web/frontend/teams.py b/src/sentry/web/frontend/teams.py
index c6bd167c50..160bfb958b 100644
--- a/src/sentry/web/frontend/teams.py
+++ b/src/sentry/web/frontend/teams.py
@@ -17,13 +17,12 @@ from django.utils.translation import ugettext as _
 from sentry.constants import MEMBER_USER, MEMBER_OWNER
 from sentry.models import PendingTeamMember, TeamMember, AccessGroup, User
 from sentry.permissions import (
-    can_add_team_member, can_edit_team_member, can_remove_team_member,
+    can_edit_team_member, can_remove_team_member,
 )
 from sentry.plugins import plugins
 from sentry.web.decorators import has_access
 from sentry.web.forms.teams import (
-    EditTeamMemberForm, NewTeamMemberForm,
-    InviteTeamMemberForm, AcceptInviteForm, NewAccessGroupForm,
+    EditTeamMemberForm, AcceptInviteForm, NewAccessGroupForm,
     EditAccessGroupForm, NewAccessGroupMemberForm, NewAccessGroupProjectForm,
     RemoveAccessGroupForm)
 from sentry.web.helpers import render_to_response
@@ -38,58 +37,6 @@ def render_with_team_context(team, template, context, request=None):
     return render_to_response(template, context, request)
 
 
-@csrf_protect
-@has_access(MEMBER_OWNER)
-def new_team_member(request, team):
-    from django.conf import settings
-
-    if not can_add_team_member(request.user, team):
-        return HttpResponseRedirect(reverse('sentry'))
-
-    initial = {
-        'type': MEMBER_USER,
-    }
-
-    if settings.SENTRY_ENABLE_INVITES:
-        invite_form = InviteTeamMemberForm(team, request.POST or None, initial=initial, prefix='invite')
-    else:
-        invite_form = None
-
-    add_form = NewTeamMemberForm(team, request.POST or None, initial=initial, prefix='add')
-
-    if add_form.is_valid():
-        pm = add_form.save(commit=False)
-        pm.team = team
-        pm.save()
-
-        messages.add_message(request, messages.SUCCESS,
-            _('The team member was added.'))
-
-        return HttpResponseRedirect(reverse('sentry-manage-team-members', args=[team.slug]))
-
-    elif invite_form and invite_form.is_valid():
-        pm = invite_form.save(commit=False)
-        pm.team = team
-        pm.save()
-
-        pm.send_invite_email()
-
-        messages.add_message(request, messages.SUCCESS,
-            _('An invitation email was sent to %s.') % (pm.email,))
-
-        return HttpResponseRedirect(reverse('sentry-manage-team-members', args=[team.slug]))
-
-    context = csrf(request)
-    context.update({
-        'page': 'members',
-        'add_form': add_form,
-        'invite_form': invite_form,
-        'SUBSECTION': 'members',
-    })
-
-    return render_with_team_context(team, 'sentry/teams/members/new.html', context, request)
-
-
 @csrf_protect
 def accept_invite(request, member_id, token):
     try:
diff --git a/src/sentry/web/urls.py b/src/sentry/web/urls.py
index bdac843238..c81267e7c8 100644
--- a/src/sentry/web/urls.py
+++ b/src/sentry/web/urls.py
@@ -41,6 +41,7 @@ from sentry.web.frontend.organization_settings import OrganizationSettingsView
 from sentry.web.frontend.organization_teams import OrganizationTeamsView
 from sentry.web.frontend.create_project import CreateProjectView
 from sentry.web.frontend.create_team import CreateTeamView
+from sentry.web.frontend.create_team_member import CreateTeamMemberView
 from sentry.web.frontend.remove_team import RemoveTeamView
 from sentry.web.frontend.team_access_groups import TeamAccessGroupsView
 from sentry.web.frontend.team_members import TeamMembersView
@@ -148,7 +149,7 @@ urlpatterns += patterns('',
         teams.remove_access_group_project, name='sentry-remove-access-group-project'),
     url(r'^account/teams/(?P<team_slug>[\w_-]+)/members/$', TeamMembersView.as_view(),
         name='sentry-manage-team-members'),
-    url(r'^account/teams/(?P<team_slug>[\w_-]+)/members/new/$', teams.new_team_member,
+    url(r'^account/teams/(?P<team_slug>[\w_-]+)/members/new/$', CreateTeamMemberView.as_view(),
         name='sentry-new-team-member'),
     url(r'^account/teams/(?P<team_slug>[\w_-]+)/members/(?P<member_id>\d+)/edit/$', teams.edit_team_member,
         name='sentry-edit-team-member'),
