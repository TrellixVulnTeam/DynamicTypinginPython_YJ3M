commit c788a8e5960d9a696030443edfad1de704b08574
Author: William Mak <william@wmak.io>
Date:   Wed Mar 11 10:57:46 2020 -0400

    feat(metrics) - Add a metric for group changes (#17542)
    
    * feat(metrics) - Add a metric for group changes
    
    - This is for an SLO to be added in DataDog to find out the % of actions
      that are successful when updating groups
    - Using a decorator to have as small an impact to the `update_groups`
      function as possible, and catch anywhere this function is used.

diff --git a/src/sentry/api/helpers/group_index.py b/src/sentry/api/helpers/group_index.py
index 36dcd26de7..ea6b06b9f7 100644
--- a/src/sentry/api/helpers/group_index.py
+++ b/src/sentry/api/helpers/group_index.py
@@ -420,6 +420,29 @@ def self_subscribe_and_assign_issue(acting_user, group):
             return Actor(type=User, id=acting_user.id)
 
 
+def track_update_groups(function):
+    def wrapper(request, projects, *args, **kwargs):
+        try:
+            response = function(request, projects, *args, **kwargs)
+        except Exception:
+            metrics.incr("group.update.http_response", sample_rate=1.0, tags={"status": 500})
+            # Continue raising the error now that we've incr the metric
+            raise
+
+        serializer = GroupValidator(
+            data=request.data, partial=True, context={"project": projects[0]}
+        )
+        results = dict(serializer.validated_data) if serializer.is_valid() else {}
+        tags = {key: True for key in results.keys()}
+        tags["status"] = response.status_code
+
+        metrics.incr("group.update.http_response", sample_rate=1.0, tags=tags)
+        return response
+
+    return wrapper
+
+
+@track_update_groups
 def update_groups(request, projects, organization_id, search_fn):
     group_ids = request.GET.getlist("id")
     if group_ids:
