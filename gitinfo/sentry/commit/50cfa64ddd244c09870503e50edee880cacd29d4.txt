commit 50cfa64ddd244c09870503e50edee880cacd29d4
Author: James Muranga <jmured@gmail.com>
Date:   Sat Mar 18 15:58:07 2017 -0700

    Adds the event id to the webhook payload  (#5094)
    
    * Adds the event id to the webhook payload
    
    * Update the webhook test to use the generated event uuid

diff --git a/src/sentry/plugins/sentry_webhooks/plugin.py b/src/sentry/plugins/sentry_webhooks/plugin.py
index 3bfac698fc..f25c7546a3 100644
--- a/src/sentry/plugins/sentry_webhooks/plugin.py
+++ b/src/sentry/plugins/sentry_webhooks/plugin.py
@@ -87,6 +87,8 @@ class WebHooksPlugin(notify.NotificationPlugin):
         }
         data['event'] = dict(event.data or {})
         data['event']['tags'] = event.get_tags()
+        data['event']['event_id'] = event.event_id
+        data['event']['id'] = event.id
         return data
 
     def get_webhook_urls(self, project):
diff --git a/tests/sentry/plugins/sentry_webhooks/test_plugin.py b/tests/sentry/plugins/sentry_webhooks/test_plugin.py
index ab49c75257..a2e7f05226 100644
--- a/tests/sentry/plugins/sentry_webhooks/test_plugin.py
+++ b/tests/sentry/plugins/sentry_webhooks/test_plugin.py
@@ -23,7 +23,7 @@ class WebHooksPluginTest(TestCase):
         responses.add(responses.POST, 'http://example.com')
 
         group = self.create_group(message='Hello world')
-        event = self.create_event(group=group, message='Hello world', tags={'level': 'warning'})
+        event = self.create_event(group=group, message='Hello world', tags={'level': 'warning'}, id=24)
 
         rule = Rule.objects.create(project=self.project, label='my rule')
 
@@ -39,3 +39,5 @@ class WebHooksPluginTest(TestCase):
 
         assert payload['level'] == 'warning'
         assert payload['message'] == 'Hello world'
+        assert payload['event']['id'] == 24
+        assert payload['event']['event_id'] == event.event_id
