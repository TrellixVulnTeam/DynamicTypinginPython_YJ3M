commit d292fd4680274bf638ffb73fa5584593bd0642f7
Author: Matt Robenolt <matt@ydekproductions.com>
Date:   Wed Sep 5 12:01:54 2018 -0700

    lint: Mass convert str.format to unicode.format (#9615)
    
    Replaces: #6449

diff --git a/setup.py b/setup.py
index f364256bfc..d4668ccc94 100755
--- a/setup.py
+++ b/setup.py
@@ -66,7 +66,7 @@ IS_LIGHT_BUILD = os.environ.get('SENTRY_LIGHT_BUILD') == '1'
 
 
 def get_requirements(env):
-    with open('requirements-{}.txt'.format(env)) as fp:
+    with open(u'requirements-{}.txt'.format(env)) as fp:
         return [x.strip() for x in fp.read().split('\n') if not x.startswith('#')]
 
 
@@ -79,7 +79,7 @@ optional_requires = get_requirements('optional')
 DJANGO_VERSION = os.environ.get('DJANGO_VERSION')
 if DJANGO_VERSION:
     install_requires = [
-        'Django{}'.format(DJANGO_VERSION)
+        u'Django{}'.format(DJANGO_VERSION)
         if r.startswith('Django>=') else r
         for r in install_requires
     ]
diff --git a/src/sentry/admin.py b/src/sentry/admin.py
index f9bd362f47..3a572fa245 100644
--- a/src/sentry/admin.py
+++ b/src/sentry/admin.py
@@ -31,7 +31,7 @@ class OptionAdmin(admin.ModelAdmin):
     search_fields = ('key', )
 
     def value_repr(self, instance):
-        return '<pre style="display:inline-block;white-space:pre-wrap;">{}</pre>'.format(
+        return u'<pre style="display:inline-block;white-space:pre-wrap;">{}</pre>'.format(
             escape(saferepr(instance.value))
         )
 
diff --git a/src/sentry/api/base.py b/src/sentry/api/base.py
index 9db362bf83..6c57a933c4 100644
--- a/src/sentry/api/base.py
+++ b/src/sentry/api/base.py
@@ -68,7 +68,7 @@ class Endpoint(APIView):
         )
         base_url = absolute_uri(urlquote(request.path))
         if querystring:
-            base_url = '{0}?{1}'.format(base_url, querystring)
+            base_url = u'{0}?{1}'.format(base_url, querystring)
         else:
             base_url = base_url + '?'
 
diff --git a/src/sentry/api/endpoints/event_apple_crash_report.py b/src/sentry/api/endpoints/event_apple_crash_report.py
index 6dee47a058..0bdb0d02de 100644
--- a/src/sentry/api/endpoints/event_apple_crash_report.py
+++ b/src/sentry/api/endpoints/event_apple_crash_report.py
@@ -68,7 +68,7 @@ class EventAppleCrashReportEndpoint(Endpoint):
                                 content_type='text/plain')
 
         if request.GET.get('download') is not None:
-            filename = "{}{}.crash".format(
+            filename = u"{}{}.crash".format(
                 event.event_id, symbolicated and '-symbolicated' or '')
             response = StreamingHttpResponse(
                 apple_crash_report_string,
diff --git a/src/sentry/api/endpoints/group_details.py b/src/sentry/api/endpoints/group_details.py
index 2d35b4a1de..522272003a 100644
--- a/src/sentry/api/endpoints/group_details.py
+++ b/src/sentry/api/endpoints/group_details.py
@@ -333,7 +333,7 @@ class GroupDetailsEndpoint(GroupEndpoint, EnvironmentMixin):
         # endpoint
         try:
             response = client.put(
-                path='/projects/{}/{}/issues/'.format(
+                path=u'/projects/{}/{}/issues/'.format(
                     group.project.organization.slug,
                     group.project.slug,
                 ),
diff --git a/src/sentry/api/endpoints/group_events_latest.py b/src/sentry/api/endpoints/group_events_latest.py
index 7fff9d4bdd..656049093a 100644
--- a/src/sentry/api/endpoints/group_events_latest.py
+++ b/src/sentry/api/endpoints/group_events_latest.py
@@ -37,6 +37,6 @@ class GroupEventsLatestEndpoint(GroupEndpoint):
             return Response({'detail': 'No events found for group'}, status=404)
 
         try:
-            return client.get('/events/{}/'.format(event.id), request=request)
+            return client.get(u'/events/{}/'.format(event.id), request=request)
         except client.ApiError as e:
             return Response(e.body, status=e.status_code)
diff --git a/src/sentry/api/endpoints/group_events_oldest.py b/src/sentry/api/endpoints/group_events_oldest.py
index b244c815df..45b2d012e9 100644
--- a/src/sentry/api/endpoints/group_events_oldest.py
+++ b/src/sentry/api/endpoints/group_events_oldest.py
@@ -37,6 +37,6 @@ class GroupEventsOldestEndpoint(GroupEndpoint):
             return Response({'detail': 'No events found for group'}, status=404)
 
         try:
-            return client.get('/events/{}/'.format(event.id), request=request)
+            return client.get(u'/events/{}/'.format(event.id), request=request)
         except client.ApiError as e:
             return Response(e.body, status=e.status_code)
diff --git a/src/sentry/api/endpoints/organization_avatar.py b/src/sentry/api/endpoints/organization_avatar.py
index d262f06db5..3047e16f6d 100644
--- a/src/sentry/api/endpoints/organization_avatar.py
+++ b/src/sentry/api/endpoints/organization_avatar.py
@@ -11,4 +11,4 @@ class OrganizationAvatarEndpoint(AvatarMixin, OrganizationEndpoint):
 
     def get_avatar_filename(self, obj):
         # for consistency with organization details endpoint
-        return '{}.png'.format(obj.slug)
+        return u'{}.png'.format(obj.slug)
diff --git a/src/sentry/api/endpoints/organization_details.py b/src/sentry/api/endpoints/organization_details.py
index 7c8fd11f86..429bc69274 100644
--- a/src/sentry/api/endpoints/organization_details.py
+++ b/src/sentry/api/endpoints/organization_details.py
@@ -244,7 +244,7 @@ class OrganizationSerializer(serializers.Serializer):
                 relation={'organization': org},
                 type=self.init_data.get('avatarType', 'upload'),
                 avatar=self.init_data.get('avatar'),
-                filename='{}.png'.format(org.slug),
+                filename=u'{}.png'.format(org.slug),
             )
         if 'require2FA' in self.init_data and self.init_data['require2FA'] is True:
             org.handle_2fa_required(self.context['request'])
diff --git a/src/sentry/api/endpoints/organization_member_index.py b/src/sentry/api/endpoints/organization_member_index.py
index c2eba72f4c..024b4026ab 100644
--- a/src/sentry/api/endpoints/organization_member_index.py
+++ b/src/sentry/api/endpoints/organization_member_index.py
@@ -150,7 +150,7 @@ class OrganizationMemberIndexEndpoint(OrganizationEndpoint):
         except IntegrityError:
             return Response({'email': 'The user %s is already a member' % result['email']}, 409)
 
-        lock = locks.get('org:member:{}'.format(om.id), duration=5)
+        lock = locks.get(u'org:member:{}'.format(om.id), duration=5)
         with TimedRetryPolicy(10)(lock.acquire):
             self.save_team_assignments(om, teams)
 
diff --git a/src/sentry/api/endpoints/project_details.py b/src/sentry/api/endpoints/project_details.py
index 6f0f302f45..b497a96ea7 100644
--- a/src/sentry/api/endpoints/project_details.py
+++ b/src/sentry/api/endpoints/project_details.py
@@ -458,12 +458,12 @@ class ProjectDetailsEndpoint(ProjectEndpoint):
                     'sentry:blacklisted_ips',
                     clean_newline_inputs(options['filters:blacklisted_ips'])
                 )
-            if 'filters:{}'.format(FilterTypes.RELEASES) in options:
+            if u'filters:{}'.format(FilterTypes.RELEASES) in options:
                 if features.has('projects:custom-inbound-filters', project, actor=request.user):
                     project.update_option(
-                        'sentry:{}'.format(FilterTypes.RELEASES),
+                        u'sentry:{}'.format(FilterTypes.RELEASES),
                         clean_newline_inputs(
-                            options['filters:{}'.format(FilterTypes.RELEASES)])
+                            options[u'filters:{}'.format(FilterTypes.RELEASES)])
                     )
                 else:
                     return Response(
@@ -471,12 +471,12 @@ class ProjectDetailsEndpoint(ProjectEndpoint):
                             'detail': ['You do not have that feature enabled']
                         }, status=400
                     )
-            if 'filters:{}'.format(FilterTypes.ERROR_MESSAGES) in options:
+            if u'filters:{}'.format(FilterTypes.ERROR_MESSAGES) in options:
                 if features.has('projects:custom-inbound-filters', project, actor=request.user):
                     project.update_option(
-                        'sentry:{}'.format(FilterTypes.ERROR_MESSAGES),
+                        u'sentry:{}'.format(FilterTypes.ERROR_MESSAGES),
                         clean_newline_inputs(
-                            options['filters:{}'.format(
+                            options[u'filters:{}'.format(
                                 FilterTypes.ERROR_MESSAGES)],
                             case_insensitive=False
                         )
diff --git a/src/sentry/api/endpoints/project_environments.py b/src/sentry/api/endpoints/project_environments.py
index 04dca84022..983acb1793 100644
--- a/src/sentry/api/endpoints/project_environments.py
+++ b/src/sentry/api/endpoints/project_environments.py
@@ -31,7 +31,7 @@ class ProjectEnvironmentsEndpoint(ProjectEndpoint):
         visibility = request.GET.get('visibility', 'visible')
         if visibility not in environment_visibility_filter_options:
             return Response({
-                'detail': 'Invalid value for \'visibility\', valid values are: {!r}'.format(
+                'detail': u'Invalid value for \'visibility\', valid values are: {!r}'.format(
                     environment_visibility_filter_options.keys(),
                 ),
             }, status=400)
diff --git a/src/sentry/api/endpoints/project_user_reports.py b/src/sentry/api/endpoints/project_user_reports.py
index 67d3adce76..f18a987168 100644
--- a/src/sentry/api/endpoints/project_user_reports.py
+++ b/src/sentry/api/endpoints/project_user_reports.py
@@ -20,7 +20,7 @@ def create_user_feedback_scenario(runner):
     with runner.isolated_project('Plain Proxy') as project:
         runner.request(
             method='POST',
-            path='/projects/{}/{}/user-feedback/'.format(runner.org.slug, project.slug),
+            path=u'/projects/{}/{}/user-feedback/'.format(runner.org.slug, project.slug),
             data={
                 'name': 'Jane Smith',
                 'email': 'jane@example.com',
diff --git a/src/sentry/api/endpoints/project_users.py b/src/sentry/api/endpoints/project_users.py
index a1009f33c6..58ba56e561 100644
--- a/src/sentry/api/endpoints/project_users.py
+++ b/src/sentry/api/endpoints/project_users.py
@@ -37,7 +37,7 @@ class ProjectUsersEndpoint(ProjectEndpoint):
                 return Response([])
             try:
                 queryset = queryset.filter(
-                    **{'{}__icontains'.format(EventUser.attr_from_keyword(pieces[0])): pieces[1]}
+                    **{u'{}__icontains'.format(EventUser.attr_from_keyword(pieces[0])): pieces[1]}
                 )
             except KeyError:
                 return Response([])
diff --git a/src/sentry/api/endpoints/system_options.py b/src/sentry/api/endpoints/system_options.py
index 965866c2b8..9768d27b87 100644
--- a/src/sentry/api/endpoints/system_options.py
+++ b/src/sentry/api/endpoints/system_options.py
@@ -21,7 +21,7 @@ class SystemOptionsEndpoint(Endpoint):
         if query == 'is:required':
             option_list = options.filter(flag=options.FLAG_REQUIRED)
         elif query:
-            return Response('{} is not a supported search query'.format(query), status=400)
+            return Response(u'{} is not a supported search query'.format(query), status=400)
         else:
             option_list = options.all()
 
diff --git a/src/sentry/api/endpoints/user_details.py b/src/sentry/api/endpoints/user_details.py
index ea0abe5791..a08f769a65 100644
--- a/src/sentry/api/endpoints/user_details.py
+++ b/src/sentry/api/endpoints/user_details.py
@@ -214,7 +214,7 @@ class UserDetailsEndpoint(UserEndpoint):
 
         for org_slug in orgs_to_remove:
             client.delete(
-                path='/organizations/{}/'.format(org_slug),
+                path=u'/organizations/{}/'.format(org_slug),
                 request=request,
                 is_sudo=True)
 
diff --git a/src/sentry/api/endpoints/user_emails_confirm.py b/src/sentry/api/endpoints/user_emails_confirm.py
index 67e02b079f..2af4d0892d 100644
--- a/src/sentry/api/endpoints/user_emails_confirm.py
+++ b/src/sentry/api/endpoints/user_emails_confirm.py
@@ -45,7 +45,7 @@ class UserEmailsConfirmEndpoint(UserEndpoint):
         from sentry.app import ratelimiter
 
         if ratelimiter.is_limited(
-            'auth:confirm-email:{}'.format(user.id),
+            u'auth:confirm-email:{}'.format(user.id),
             limit=10,
             window=60,  # 10 per minute should be enough for anyone
         ):
diff --git a/src/sentry/api/endpoints/user_social_identity_details.py b/src/sentry/api/endpoints/user_social_identity_details.py
index 1943239996..9062f43286 100644
--- a/src/sentry/api/endpoints/user_social_identity_details.py
+++ b/src/sentry/api/endpoints/user_social_identity_details.py
@@ -31,7 +31,7 @@ class UserSocialIdentityDetailsEndpoint(UserEndpoint):
 
         backend = get_backend(auth.provider, request, '/')
         if backend is None:
-            raise Exception('Backend was not found for request: {}'.format(auth.provider))
+            raise Exception(u'Backend was not found for request: {}'.format(auth.provider))
 
         # stop this from bubbling up errors to social-auth's middleware
         # XXX(dcramer): IM SO MAD ABOUT THIS
diff --git a/src/sentry/api/paginator.py b/src/sentry/api/paginator.py
index 851b14762a..768bfe8c6b 100644
--- a/src/sentry/api/paginator.py
+++ b/src/sentry/api/paginator.py
@@ -206,7 +206,7 @@ class OffsetPaginator(BasePaginator):
         queryset = self.queryset
         if self.key:
             if self.desc:
-                queryset = queryset.order_by('-{}'.format(self.key))
+                queryset = queryset.order_by(u'-{}'.format(self.key))
             else:
                 queryset = queryset.order_by(self.key)
 
diff --git a/src/sentry/api/serializers/models/integration.py b/src/sentry/api/serializers/models/integration.py
index 6036b28191..f0be996ff7 100644
--- a/src/sentry/api/serializers/models/integration.py
+++ b/src/sentry/api/serializers/models/integration.py
@@ -99,7 +99,7 @@ class IntegrationProviderSerializer(Serializer):
             'canDisable': obj.can_disable,
             'features': [f.value for f in obj.features],
             'setupDialog': dict(
-                url='/organizations/{}/integrations/{}/setup/'.format(
+                url=u'/organizations/{}/integrations/{}/setup/'.format(
                     organization.slug,
                     obj.key,
                 ),
diff --git a/src/sentry/api/serializers/models/project.py b/src/sentry/api/serializers/models/project.py
index 2bd5e14cc6..b50b136b4f 100644
--- a/src/sentry/api/serializers/models/project.py
+++ b/src/sentry/api/serializers/models/project.py
@@ -361,7 +361,7 @@ class DetailedProjectSerializer(ProjectWithTeamSerializer):
 
         latest_release_list = list(
             Release.objects.raw(
-                """
+                u"""
             SELECT lr.project_id as actual_project_id, r.*
             FROM (
                 SELECT (
@@ -433,12 +433,12 @@ class DetailedProjectSerializer(ProjectWithTeamSerializer):
                     'filters:blacklisted_ips':
                     '\n'.join(attrs['options'].get(
                         'sentry:blacklisted_ips', [])),
-                    'filters:{}'.format(FilterTypes.RELEASES):
+                    u'filters:{}'.format(FilterTypes.RELEASES):
                     '\n'.join(attrs['options'].get(
-                        'sentry:{}'.format(FilterTypes.RELEASES), [])),
-                    'filters:{}'.format(FilterTypes.ERROR_MESSAGES):
+                        u'sentry:{}'.format(FilterTypes.RELEASES), [])),
+                    u'filters:{}'.format(FilterTypes.ERROR_MESSAGES):
                     '\n'.
-                    join(attrs['options'].get('sentry:{}'.format(
+                    join(attrs['options'].get(u'sentry:{}'.format(
                         FilterTypes.ERROR_MESSAGES), [])),
                     'feedback:branding':
                     attrs['options'].get('feedback:branding', '1') == '1',
diff --git a/src/sentry/api/validators/servicehook.py b/src/sentry/api/validators/servicehook.py
index 40da6c985f..51f9f4b619 100644
--- a/src/sentry/api/validators/servicehook.py
+++ b/src/sentry/api/validators/servicehook.py
@@ -23,5 +23,5 @@ class ServiceHookValidator(serializers.Serializer):
         if value:
             for event in value:
                 if event not in SERVICE_HOOK_EVENTS:
-                    raise serializers.ValidationError('Invalid event name: {}'.format(event))
+                    raise serializers.ValidationError(u'Invalid event name: {}'.format(event))
         return attrs
diff --git a/src/sentry/attachments/base.py b/src/sentry/attachments/base.py
index 26a62f5a38..9bdd2d4c04 100644
--- a/src/sentry/attachments/base.py
+++ b/src/sentry/attachments/base.py
@@ -55,13 +55,13 @@ class BaseAttachmentCache(object):
         self.inner = inner
 
     def make_key(self, key):
-        return '{}:{}'.format(key, self.appendix)
+        return u'{}:{}'.format(key, self.appendix)
 
     def set(self, key, attachments, timeout=None):
         key = self.make_key(key)
         for index, attachment in enumerate(attachments):
             compressed = zlib.compress(attachment.data)
-            self.inner.set('{}:{}'.format(key, index), compressed, timeout, raw=True)
+            self.inner.set(u'{}:{}'.format(key, index), compressed, timeout, raw=True)
 
         meta = [attachment.meta() for attachment in attachments]
         self.inner.set(key, meta, timeout, raw=False)
@@ -73,7 +73,7 @@ class BaseAttachmentCache(object):
             result = [
                 CachedAttachment(
                     load=lambda index=index: zlib.decompress(
-                        self.inner.get('{}:{}'.format(key, index), raw=True)),
+                        self.inner.get(u'{}:{}'.format(key, index), raw=True)),
                     **attachment
                 )
                 for index, attachment in enumerate(result)
@@ -87,5 +87,5 @@ class BaseAttachmentCache(object):
             return
 
         for index in range(0, len(attachments)):
-            self.inner.delete('{}:{}'.format(key, index))
+            self.inner.delete(u'{}:{}'.format(key, index))
         self.inner.delete(key)
diff --git a/src/sentry/auth/helper.py b/src/sentry/auth/helper.py
index 127523c348..7ed616a8e2 100644
--- a/src/sentry/auth/helper.py
+++ b/src/sentry/auth/helper.py
@@ -61,7 +61,7 @@ class RedisBackedState(object):
         return self.request.session.get('auth_key')
 
     def regenerate(self, initial_state):
-        auth_key = 'auth:pipeline:{}'.format(uuid4().hex)
+        auth_key = u'auth:pipeline:{}'.format(uuid4().hex)
 
         self.request.session['auth_key'] = auth_key
         self.request.session.modified = True
@@ -673,7 +673,7 @@ class AuthHelper(object):
         user_id = identity['id']
 
         lock = locks.get(
-            'sso:auth:{}:{}'.format(
+            u'sso:auth:{}:{}'.format(
                 auth_provider.id,
                 md5_text(user_id).hexdigest(),
             ),
diff --git a/src/sentry/auth/providers/oauth2.py b/src/sentry/auth/providers/oauth2.py
index f09a981737..906983f9d2 100644
--- a/src/sentry/auth/providers/oauth2.py
+++ b/src/sentry/auth/providers/oauth2.py
@@ -54,7 +54,7 @@ class OAuth2Login(AuthView):
             state=state,
             redirect_uri=absolute_uri(helper.get_redirect_url()),
         )
-        redirect_uri = '{}?{}'.format(self.get_authorize_url(), urlencode(params))
+        redirect_uri = u'{}?{}'.format(self.get_authorize_url(), urlencode(params))
 
         helper.bind_state('state', state)
 
@@ -198,7 +198,7 @@ class OAuth2Provider(Provider):
         error = payload.get('error', 'unknown_error')
         error_description = payload.get('error_description', 'no description available')
 
-        formatted_error = 'HTTP {} ({}): {}'.format(req.status_code, error, error_description)
+        formatted_error = u'HTTP {} ({}): {}'.format(req.status_code, error, error_description)
 
         if req.status_code == 401:
             raise IdentityNotValid(formatted_error)
diff --git a/src/sentry/auth/superuser.py b/src/sentry/auth/superuser.py
index 5fb31f222f..b4c83c2243 100644
--- a/src/sentry/auth/superuser.py
+++ b/src/sentry/auth/superuser.py
@@ -225,7 +225,7 @@ class Superuser(object):
 
             if not self.is_active:
                 if self._inactive_reason:
-                    logger.warn('superuser.{}'.format(self._inactive_reason), extra={
+                    logger.warn(u'superuser.{}'.format(self._inactive_reason), extra={
                         'ip_address': request.META['REMOTE_ADDR'],
                         'user_id': request.user.id,
                     })
diff --git a/src/sentry/auth/view.py b/src/sentry/auth/view.py
index 736aca68c9..5f2d81cf97 100644
--- a/src/sentry/auth/view.py
+++ b/src/sentry/auth/view.py
@@ -17,7 +17,7 @@ class AuthView(BaseView):
 
     def get_ident(self):
         cls = type(self)
-        return '{module}.{name}'.format(
+        return u'{module}.{name}'.format(
             module=cls.__module__,
             name=cls.__name__,
         )
diff --git a/src/sentry/cache/base.py b/src/sentry/cache/base.py
index babf532b55..f2274a9a62 100644
--- a/src/sentry/cache/base.py
+++ b/src/sentry/cache/base.py
@@ -22,7 +22,7 @@ class BaseCache(local):
             self.prefix = prefix
 
     def make_key(self, key, version=None):
-        return '{}:{}:{}'.format(
+        return u'{}:{}:{}'.format(
             self.prefix,
             version or self.version,
             key,
diff --git a/src/sentry/conf/locale.py b/src/sentry/conf/locale.py
index 263d64e894..acde86a1ee 100644
--- a/src/sentry/conf/locale.py
+++ b/src/sentry/conf/locale.py
@@ -9,7 +9,7 @@ import sentry
 def dirname_to_local(dir_name):
     if '_' in dir_name:
         pre, post = dir_name.split('_', 1)
-        dir_name = '{}-{}'.format(pre, post.lower())
+        dir_name = u'{}-{}'.format(pre, post.lower())
     return dir_name
 
 
diff --git a/src/sentry/conf/server.py b/src/sentry/conf/server.py
index 1ea1a01a59..f37de29e74 100644
--- a/src/sentry/conf/server.py
+++ b/src/sentry/conf/server.py
@@ -494,7 +494,7 @@ def create_partitioned_queues(name):
     exchange = Exchange(name, type='direct')
     for num in range(1):
         CELERY_QUEUES.append(Queue(
-            '{0}-{1}'.format(name, num),
+            u'{0}-{1}'.format(name, num),
             exchange=exchange,
         ))
 
@@ -1233,7 +1233,7 @@ SENTRY_WATCHERS = (
     (
         'webpack', [
             os.path.join(NODE_MODULES_ROOT, '.bin', 'webpack'), '--output-pathinfo', '--watch',
-            "--config={}".format(
+            u"--config={}".format(
                 os.path.
                 normpath(os.path.join(PROJECT_ROOT, os.pardir, os.pardir, "webpack.config.js"))
             )
diff --git a/src/sentry/constants.py b/src/sentry/constants.py
index 86d016a3a9..7a7bf4c1c2 100644
--- a/src/sentry/constants.py
+++ b/src/sentry/constants.py
@@ -29,7 +29,7 @@ def get_all_languages():
             continue
         if '_' in path:
             pre, post = path.split('_', 1)
-            path = '{}-{}'.format(pre, post.lower())
+            path = u'{}-{}'.format(pre, post.lower())
         results.append(path)
     return results
 
diff --git a/src/sentry/coreapi.py b/src/sentry/coreapi.py
index 66f19a5c94..2e3c0bc799 100644
--- a/src/sentry/coreapi.py
+++ b/src/sentry/coreapi.py
@@ -359,7 +359,7 @@ class ClientApiHelper(object):
             data = dict(data.items())
 
         cache_timeout = 3600
-        cache_key = 'e:{1}:{0}'.format(data['project'], data['event_id'])
+        cache_key = u'e:{1}:{0}'.format(data['project'], data['event_id'])
         default_cache.set(cache_key, data, cache_timeout)
 
         # Attachments will be empty or None if the "event-attachments" feature
diff --git a/src/sentry/db/deletion.py b/src/sentry/db/deletion.py
index 38e82a9645..af155f6d8e 100644
--- a/src/sentry/db/deletion.py
+++ b/src/sentry/db/deletion.py
@@ -25,17 +25,17 @@ class BulkDeleteQuery(object):
         where = []
         if self.dtfield and self.days is not None:
             where.append(
-                "{} < '{}'::timestamptz".format(
+                u"{} < '{}'::timestamptz".format(
                     quote_name(self.dtfield),
                     (timezone.now() - timedelta(days=self.days)).isoformat(),
                     self.days,
                 )
             )
         if self.project_id:
-            where.append("project_id = {}".format(self.project_id))
+            where.append(u"project_id = {}".format(self.project_id))
 
         if where:
-            where_clause = 'where {}'.format(' and '.join(where))
+            where_clause = u'where {}'.format(' and '.join(where))
         else:
             where_clause = ''
 
@@ -46,14 +46,14 @@ class BulkDeleteQuery(object):
             else:
                 direction = 'asc'
                 order_field = self.order_by
-            order_clause = 'order by {} {}'.format(
+            order_clause = u'order by {} {}'.format(
                 quote_name(order_field),
                 direction,
             )
         else:
             order_clause = ''
 
-        query = """
+        query = u"""
             delete from {table}
             where id = any(array(
                 select id
@@ -87,7 +87,7 @@ class BulkDeleteQuery(object):
 
         if self.days:
             cutoff = timezone.now() - timedelta(days=self.days)
-            qs = qs.filter(**{'{}__lte'.format(self.dtfield): cutoff})
+            qs = qs.filter(**{u'{}__lte'.format(self.dtfield): cutoff})
         if self.project_id:
             if 'project' in self.model._meta.get_all_field_names():
                 qs = qs.filter(project=self.project_id)
@@ -141,7 +141,7 @@ class BulkDeleteQuery(object):
                 # having to pull all rows into memory at once.
                 with conn.cursor(uuid4().hex) as cursor:
                     where = [(
-                        "{} < %s".format(quote_name(self.dtfield)),
+                        u"{} < %s".format(quote_name(self.dtfield)),
                         [cutoff],
                     )]
 
@@ -156,7 +156,7 @@ class BulkDeleteQuery(object):
                         order_field = self.order_by[1:]
                         if position is not None:
                             where.append((
-                                '{} <= %s'.format(quote_name(order_field)),
+                                u'{} <= %s'.format(quote_name(order_field)),
                                 [position],
                             ))
                     else:
@@ -164,14 +164,14 @@ class BulkDeleteQuery(object):
                         order_field = self.order_by
                         if position is not None:
                             where.append((
-                                '{} >= %s'.format(quote_name(order_field)),
+                                u'{} >= %s'.format(quote_name(order_field)),
                                 [position],
                             ))
 
                     conditions, parameters = zip(*where)
                     parameters = list(itertools.chain.from_iterable(parameters))
 
-                    query = """
+                    query = u"""
                         select id, {order_field}
                         from {table}
                         where {conditions}
diff --git a/src/sentry/db/models/base.py b/src/sentry/db/models/base.py
index b5ca511f81..893c003f49 100644
--- a/src/sentry/db/models/base.py
+++ b/src/sentry/db/models/base.py
@@ -155,7 +155,7 @@ def __model_class_prepared(sender, **kwargs):
         return
 
     if not hasattr(sender, '__core__'):
-        raise ValueError('{!r} model has not defined __core__'.format(sender))
+        raise ValueError(u'{!r} model has not defined __core__'.format(sender))
 
 
 signals.pre_save.connect(__model_pre_save)
diff --git a/src/sentry/db/models/fields/array.py b/src/sentry/db/models/fields/array.py
index d2e23b397d..9fc6b837f6 100644
--- a/src/sentry/db/models/fields/array.py
+++ b/src/sentry/db/models/fields/array.py
@@ -43,7 +43,7 @@ class ArrayField(models.Field):
     def db_type(self, connection):
         engine = connection.settings_dict['ENGINE']
         if 'postgres' in engine:
-            return '{}[]'.format(self.of.db_type(connection))
+            return u'{}[]'.format(self.of.db_type(connection))
         return super(ArrayField, self).db_type(connection)
 
     def get_internal_type(self):
@@ -66,7 +66,7 @@ class ArrayField(models.Field):
 
     def get_prep_lookup(self, lookup_type, value):
         raise NotImplementedError(
-            '{!r} lookup type for {!r} is not supported'.format(
+            u'{!r} lookup type for {!r} is not supported'.format(
                 lookup_type,
                 self,
             )
@@ -94,7 +94,7 @@ class ArrayField(models.Field):
                 # The ArrayField constructor understands how to resurrect
                 #   its internal field from this serialized state.
                 'of': (
-                    '{module}.{class_name}'.format(
+                    u'{module}.{class_name}'.format(
                         module=self.of.__class__.__module__,
                         class_name=self.of.__class__.__name__,
                     ), double[0], double[1],
diff --git a/src/sentry/db/models/fields/encrypted.py b/src/sentry/db/models/fields/encrypted.py
index ff84bb83f9..8be4fbbdba 100644
--- a/src/sentry/db/models/fields/encrypted.py
+++ b/src/sentry/db/models/fields/encrypted.py
@@ -26,7 +26,7 @@ class EncryptedCharField(CharField):
 
     def get_prep_lookup(self, lookup_type, value):
         raise NotImplementedError(
-            '{!r} lookup type for {!r} is not supported'.format(
+            u'{!r} lookup type for {!r} is not supported'.format(
                 lookup_type,
                 self,
             )
@@ -45,7 +45,7 @@ class EncryptedJsonField(JSONField):
 
     def get_prep_lookup(self, lookup_type, value):
         raise NotImplementedError(
-            '{!r} lookup type for {!r} is not supported'.format(
+            u'{!r} lookup type for {!r} is not supported'.format(
                 lookup_type,
                 self,
             )
@@ -66,7 +66,7 @@ class EncryptedPickledObjectField(PickledObjectField):
 
     def get_prep_lookup(self, lookup_type, value):
         raise NotImplementedError(
-            '{!r} lookup type for {!r} is not supported'.format(
+            u'{!r} lookup type for {!r} is not supported'.format(
                 lookup_type,
                 self,
             )
@@ -85,7 +85,7 @@ class EncryptedTextField(TextField):
 
     def get_prep_lookup(self, lookup_type, value):
         raise NotImplementedError(
-            '{!r} lookup type for {!r} is not supported'.format(
+            u'{!r} lookup type for {!r} is not supported'.format(
                 lookup_type,
                 self,
             )
diff --git a/src/sentry/db/models/query.py b/src/sentry/db/models/query.py
index b071269c25..b32a6c357c 100644
--- a/src/sentry/db/models/query.py
+++ b/src/sentry/db/models/query.py
@@ -103,7 +103,7 @@ def create_or_update(model, using=None, **kwargs):
 def in_iexact(column, values):
     from operator import or_
 
-    query = '{}__iexact'.format(column)
+    query = u'{}__iexact'.format(column)
 
     return reduce(or_, [Q(**{query: v}) for v in values])
 
@@ -111,6 +111,6 @@ def in_iexact(column, values):
 def in_icontains(column, values):
     from operator import or_
 
-    query = '{}__icontains'.format(column)
+    query = u'{}__icontains'.format(column)
 
     return reduce(or_, [Q(**{query: v}) for v in values])
diff --git a/src/sentry/db/postgres/decorators.py b/src/sentry/db/postgres/decorators.py
index a905a6b3bd..eb29adef8b 100644
--- a/src/sentry/db/postgres/decorators.py
+++ b/src/sentry/db/postgres/decorators.py
@@ -94,7 +94,7 @@ def less_shitty_error_messages(func):
             return func(self, sql, *args, **kwargs)
         except Exception as e:
             exc_info = sys.exc_info()
-            msg = '{}\nSQL: {}'.format(
+            msg = u'{}\nSQL: {}'.format(
                 repr(e),
                 sql,
             )
diff --git a/src/sentry/debug/panels/route.py b/src/sentry/debug/panels/route.py
index 3e841f8074..10891c42ee 100644
--- a/src/sentry/debug/panels/route.py
+++ b/src/sentry/debug/panels/route.py
@@ -34,12 +34,12 @@ class RoutePanel(Panel):
 
     def _get_func_name(self, func):
         if hasattr(func, 'im_class'):
-            return '{}.{}.{}'.format(
+            return u'{}.{}.{}'.format(
                 func.__module__,
                 func.im_class.__name__,
                 func.__name__,
             )
-        return '{}.{}'.format(func.__module__, func.__name__)
+        return u'{}.{}'.format(func.__module__, func.__name__)
 
     def _get_func_argspec(self, args, kwargs):
         result = []
diff --git a/src/sentry/debug/utils/packages.py b/src/sentry/debug/utils/packages.py
index 549c36d8e8..433dafcb78 100644
--- a/src/sentry/debug/utils/packages.py
+++ b/src/sentry/debug/utils/packages.py
@@ -65,6 +65,6 @@ def get_all_package_versions():
 
         packages[module_name] = version
 
-    packages['sys'] = '{0}.{1}.{2}'.format(*sys.version_info)
+    packages['sys'] = u'{0}.{1}.{2}'.format(*sys.version_info)
 
     return packages
diff --git a/src/sentry/deletions/base.py b/src/sentry/deletions/base.py
index 6d8824fc17..9babcd95bf 100644
--- a/src/sentry/deletions/base.py
+++ b/src/sentry/deletions/base.py
@@ -178,7 +178,7 @@ class ModelDeletionTask(BaseDeletionTask):
                 assert shard_id < num_shards
                 queryset = queryset.extra(
                     where=[
-                        'id %% {num_shards} = {shard_id}'.format(
+                        u'id %% {num_shards} = {shard_id}'.format(
                             num_shards=num_shards,
                             shard_id=shard_id,
                         )
diff --git a/src/sentry/digests/__init__.py b/src/sentry/digests/__init__.py
index 592f20d50b..1c2250e898 100644
--- a/src/sentry/digests/__init__.py
+++ b/src/sentry/digests/__init__.py
@@ -28,4 +28,4 @@ OPTIONS = frozenset(('increment_delay', 'maximum_delay', 'minimum_delay', ))
 
 def get_option_key(plugin, option):
     assert option in OPTIONS
-    return 'digests:{}:{}'.format(plugin, option)
+    return u'digests:{}:{}'.format(plugin, option)
diff --git a/src/sentry/digests/backends/redis.py b/src/sentry/digests/backends/redis.py
index fad2cfe3be..8cda58bbbf 100644
--- a/src/sentry/digests/backends/redis.py
+++ b/src/sentry/digests/backends/redis.py
@@ -96,11 +96,11 @@ class RedisBackend(Backend):
 
     def _get_connection(self, key):
         return self.cluster.get_local_client_for_key(
-            '{}:t:{}'.format(self.namespace, key),
+            u'{}:t:{}'.format(self.namespace, key),
         )
 
     def _get_timeline_lock(self, key, duration):
-        lock_key = '{}:t:{}'.format(self.namespace, key)
+        lock_key = u'{}:t:{}'.format(self.namespace, key)
         return self.locks.get(
             lock_key,
             duration=duration,
@@ -230,7 +230,8 @@ class RedisBackend(Backend):
             records = map(
                 lambda key__value__timestamp: Record(
                     key__value__timestamp[0],
-                    self.codec.decode(key__value__timestamp[1]) if key__value__timestamp[1] is not None else None,
+                    self.codec.decode(
+                        key__value__timestamp[1]) if key__value__timestamp[1] is not None else None,
                     float(key__value__timestamp[2]),
                 ),
                 response,
diff --git a/src/sentry/digests/notifications.py b/src/sentry/digests/notifications.py
index 4e24d41c88..adc1c95f03 100644
--- a/src/sentry/digests/notifications.py
+++ b/src/sentry/digests/notifications.py
@@ -34,7 +34,7 @@ def split_key(key):
 
 
 def unsplit_key(plugin, project):
-    return '{plugin.slug}:p:{project.id}'.format(plugin=plugin, project=project)
+    return u'{plugin.slug}:p:{project.id}'.format(plugin=plugin, project=project)
 
 
 def strip_for_serialization(instance):
diff --git a/src/sentry/event_manager.py b/src/sentry/event_manager.py
index f362a64892..67cd46836d 100644
--- a/src/sentry/event_manager.py
+++ b/src/sentry/event_manager.py
@@ -975,7 +975,7 @@ class EventManager(object):
         if not euser.hash:
             return
 
-        cache_key = 'euserid:1:{}:{}'.format(
+        cache_key = u'euserid:1:{}:{}'.format(
             project.id,
             euser.hash,
         )
diff --git a/src/sentry/filters/base.py b/src/sentry/filters/base.py
index f5c8bf7733..e6d10faeb5 100644
--- a/src/sentry/filters/base.py
+++ b/src/sentry/filters/base.py
@@ -24,7 +24,7 @@ class Filter(object):
     def is_enabled(self):
         return ProjectOption.objects.get_value(
             project=self.project,
-            key='filters:{}'.format(self.id),
+            key=u'filters:{}'.format(self.id),
             default='1' if self.default else '0',
         ) == '1'
 
@@ -34,7 +34,7 @@ class Filter(object):
 
         ProjectOption.objects.set_value(
             project=self.project,
-            key='filters:{}'.format(self.id),
+            key=u'filters:{}'.format(self.id),
             value='1' if value.get('active', False) else '0',
         )
 
diff --git a/src/sentry/filters/legacy_browsers.py b/src/sentry/filters/legacy_browsers.py
index fdcc0a882b..4f6d476c80 100644
--- a/src/sentry/filters/legacy_browsers.py
+++ b/src/sentry/filters/legacy_browsers.py
@@ -51,7 +51,7 @@ class LegacyBrowsersFilter(Filter):
         # legacy browsers should be filtered
         rv = ProjectOption.objects.get_value(
             project=self.project,
-            key='filters:{}'.format(self.id),
+            key=u'filters:{}'.format(self.id),
             default='1' if self.default else '0',
         )
 
@@ -75,7 +75,7 @@ class LegacyBrowsersFilter(Filter):
 
         ProjectOption.objects.set_value(
             project=self.project,
-            key='filters:{}'.format(self.id),
+            key=u'filters:{}'.format(self.id),
             value=option_val,
         )
 
@@ -188,7 +188,7 @@ class LegacyBrowsersFilter(Filter):
 
         opts = ProjectOption.objects.get_value(
             project=self.project,
-            key='filters:{}'.format(self.id),
+            key=u'filters:{}'.format(self.id),
         )
 
         value = self.get_user_agent(data)
diff --git a/src/sentry/http.py b/src/sentry/http.py
index a6b4f955f2..ead0b5f63a 100644
--- a/src/sentry/http.py
+++ b/src/sentry/http.py
@@ -54,7 +54,7 @@ except ImportError:
         pass
 
 
-USER_AGENT = 'sentry/{version} (https://sentry.io)'.format(
+USER_AGENT = u'sentry/{version} (https://sentry.io)'.format(
     version=sentry.VERSION,
 )
 
diff --git a/src/sentry/identity/base.py b/src/sentry/identity/base.py
index 3b24d9ef41..cc244eaa10 100644
--- a/src/sentry/identity/base.py
+++ b/src/sentry/identity/base.py
@@ -32,7 +32,7 @@ class Provider(PipelineProvider):
 
     def __init__(self, **config):
         self.config = config
-        self.logger = logging.getLogger('sentry.identity.%s'.format(self.key))
+        self.logger = logging.getLogger(u'sentry.identity.%s'.format(self.key))
 
     def build_identity(self, state):
         """
diff --git a/src/sentry/identity/github_enterprise/provider.py b/src/sentry/identity/github_enterprise/provider.py
index 5c07b19868..6699469d81 100644
--- a/src/sentry/identity/github_enterprise/provider.py
+++ b/src/sentry/identity/github_enterprise/provider.py
@@ -7,7 +7,7 @@ from sentry.identity.oauth2 import OAuth2Provider
 def get_user_info(url, access_token):
     session = http.build_session()
     resp = session.get(
-        'https://{}/api/v3/user'.format(url),
+        u'https://{}/api/v3/user'.format(url),
         params={'access_token': access_token},
         headers={'Accept': 'application/vnd.github.machine-man-preview+json'},
         verify=False
diff --git a/src/sentry/identity/oauth2.py b/src/sentry/identity/oauth2.py
index 0a343afda9..d72378c1a5 100644
--- a/src/sentry/identity/oauth2.py
+++ b/src/sentry/identity/oauth2.py
@@ -130,7 +130,7 @@ class OAuth2Provider(Provider):
                 error_description = payload.get(desc_key)
                 break
 
-        formatted_error = 'HTTP {} ({}): {}'.format(req.status_code, error_name, error_description)
+        formatted_error = u'HTTP {} ({}): {}'.format(req.status_code, error_name, error_description)
 
         if req.status_code == 401:
             raise IdentityNotValid(formatted_error)
@@ -211,7 +211,7 @@ class OAuth2LoginView(PipelineView):
             state=state,
             redirect_uri=absolute_uri(pipeline.redirect_url()),
         )
-        redirect_uri = '{}?{}'.format(self.get_authorize_url(), urlencode(params))
+        redirect_uri = u'{}?{}'.format(self.get_authorize_url(), urlencode(params))
 
         pipeline.bind_state('state', state)
 
diff --git a/src/sentry/integrations/bitbucket/issues.py b/src/sentry/integrations/bitbucket/issues.py
index 776ccc4693..95367a40ae 100644
--- a/src/sentry/integrations/bitbucket/issues.py
+++ b/src/sentry/integrations/bitbucket/issues.py
@@ -24,7 +24,7 @@ class BitbucketIssueBasicMixin(IssueBasicMixin):
 
     def get_issue_url(self, key):
         repo, issue_id = key.split('#')
-        return 'https://bitbucket.org/{}/issues/{}'.format(repo, issue_id)
+        return u'https://bitbucket.org/{}/issues/{}'.format(repo, issue_id)
 
     def get_repo_choices(self, **kwargs):
 
@@ -135,7 +135,7 @@ class BitbucketIssueBasicMixin(IssueBasicMixin):
         return super(BitbucketIssueBasicMixin, self).message_from_error(exc)
 
     def make_external_key(self, data):
-        return '{}#{}'.format(data['repo'], data['key'])
+        return u'{}#{}'.format(data['repo'], data['key'])
 
     def after_link_issue(self, external_issue, **kwargs):
         data = kwargs['data']
diff --git a/src/sentry/integrations/bitbucket/repository.py b/src/sentry/integrations/bitbucket/repository.py
index d83340bb3c..1b29fc7a33 100644
--- a/src/sentry/integrations/bitbucket/repository.py
+++ b/src/sentry/integrations/bitbucket/repository.py
@@ -41,7 +41,7 @@ class BitbucketRepositoryProvider(providers.IntegrationRepositoryProvider):
 
     def get_webhook_secret(self, organization):
         # TODO(LB): Revisit whether Integrations V3 should be using OrganizationOption for storage
-        lock = locks.get('bitbucket:webhook-secret:{}'.format(organization.id), duration=60)
+        lock = locks.get(u'bitbucket:webhook-secret:{}'.format(organization.id), duration=60)
         with lock.acquire():
             secret = OrganizationOption.objects.get_value(
                 organization=organization,
@@ -64,7 +64,7 @@ class BitbucketRepositoryProvider(providers.IntegrationRepositoryProvider):
                 data['identifier'], {
                     'description': 'sentry-bitbucket-repo-hook',
                     'url': absolute_uri(
-                        '/extensions/bitbucket/organizations/{}/webhook/'.format(organization.id)
+                        u'/extensions/bitbucket/organizations/{}/webhook/'.format(organization.id)
                     ),
                     'active': True,
                     'events': ['repo:push', 'pullrequest:fulfilled'],
@@ -76,7 +76,7 @@ class BitbucketRepositoryProvider(providers.IntegrationRepositoryProvider):
             return {
                 'name': data['identifier'],
                 'external_id': data['external_id'],
-                'url': 'https://bitbucket.org/{}'.format(data['name']),
+                'url': u'https://bitbucket.org/{}'.format(data['name']),
                 'config': {
                     'name': data['name'],
                     'webhook_id': resp['uuid'],
diff --git a/src/sentry/integrations/bitbucket/search.py b/src/sentry/integrations/bitbucket/search.py
index 06c3df92a8..6747aed2ee 100644
--- a/src/sentry/integrations/bitbucket/search.py
+++ b/src/sentry/integrations/bitbucket/search.py
@@ -36,7 +36,7 @@ class BitbucketSearchEndpoint(OrganizationEndpoint):
             full_query = (u'title~"%s"' % (query)).encode('utf-8')
             resp = installation.get_client().search_issues(repo, full_query)
             return Response([{
-                'label': '#{} {}'.format(i['id'], i['title']),
+                'label': u'#{} {}'.format(i['id'], i['title']),
                 'value': i['id']
             } for i in resp.get('values', [])])
 
diff --git a/src/sentry/integrations/client.py b/src/sentry/integrations/client.py
index 35f5cab400..33d84ed16a 100644
--- a/src/sentry/integrations/client.py
+++ b/src/sentry/integrations/client.py
@@ -48,9 +48,9 @@ class BaseApiResponse(object):
             return XmlApiResponse(response.text, response.headers, response.status_code)
         elif response.text.startswith('<'):
             if not allow_text:
-                raise ValueError('Not a valid response type: {}'.format(response.text[:128]))
+                raise ValueError(u'Not a valid response type: {}'.format(response.text[:128]))
             elif response.status_code < 200 or response.status_code >= 300:
-                raise ValueError('Received unexpected plaintext response for code {}'.format(
+                raise ValueError(u'Received unexpected plaintext response for code {}'.format(
                     response.status_code,
                 ))
             return TextApiResponse(response.text, response.headers, response.status_code)
@@ -123,8 +123,8 @@ class ApiClient(object):
     def build_url(self, path):
         if path.startswith('/'):
             if not self.base_url:
-                raise ValueError('Invalid URL: {}'.format(path))
-            return '{}{}'.format(self.base_url, path)
+                raise ValueError(u'Invalid URL: {}'.format(path))
+            return u'{}{}'.format(self.base_url, path)
         return path
 
     def _request(self, method, path, headers=None, data=None, params=None,
@@ -210,7 +210,7 @@ class AuthApiClient(ApiClient):
 
     def bind_auth(self, **kwargs):
         token = self.auth.tokens['access_token']
-        kwargs['headers']['Authorization'] = 'Bearer {}'.format(token)
+        kwargs['headers']['Authorization'] = u'Bearer {}'.format(token)
         return kwargs
 
     def _request(self, method, path, **kwargs):
diff --git a/src/sentry/integrations/cloudflare/webhook.py b/src/sentry/integrations/cloudflare/webhook.py
index ebb2ad4ebf..fe5d0ea90b 100644
--- a/src/sentry/integrations/cloudflare/webhook.py
+++ b/src/sentry/integrations/cloudflare/webhook.py
@@ -235,7 +235,7 @@ class CloudflareWebhookEndpoint(Endpoint):
             return Response(status=400)
 
         event = data.get('event')
-        logger.info('cloudflare.webhook.{}'.format(event), extra=logging_data)
+        logger.info(u'cloudflare.webhook.{}'.format(event), extra=logging_data)
         if not signature:
             logger.error('cloudflare.webhook.invalid-signature', extra=logging_data)
             return Response(status=400)
@@ -257,7 +257,7 @@ class CloudflareWebhookEndpoint(Endpoint):
             return Response(status=400)
 
         if not self.verify(payload, key, signature):
-            logger.error('cloudflare.webhook.invalid-signature'.format(event), extra=logging_data)
+            logger.error(u'cloudflare.webhook.invalid-signature'.format(event), extra=logging_data)
             return Response(status=400)
 
         if event == 'option-change:account':
diff --git a/src/sentry/integrations/example/integration.py b/src/sentry/integrations/example/integration.py
index fb5515a7e2..9800704ffc 100644
--- a/src/sentry/integrations/example/integration.py
+++ b/src/sentry/integrations/example/integration.py
@@ -52,7 +52,7 @@ class ExampleIntegration(Integration, IssueSyncMixin):
     inbound_assignee_key = 'sync_assignee_inbound'
 
     def get_issue_url(self, key):
-        return 'https://example/issues/{}'.format(key)
+        return u'https://example/issues/{}'.format(key)
 
     def create_comment(self):
         pass
diff --git a/src/sentry/integrations/exceptions.py b/src/sentry/integrations/exceptions.py
index 8ac74139db..1c7d93dda2 100644
--- a/src/sentry/integrations/exceptions.py
+++ b/src/sentry/integrations/exceptions.py
@@ -50,7 +50,7 @@ class ApiHostError(ApiError):
     @classmethod
     def from_request(cls, request):
         host = urlparse(request.url).netloc
-        return cls('Unable to reach host: {}'.format(host))
+        return cls(u'Unable to reach host: {}'.format(host))
 
 
 class ApiUnauthorized(ApiError):
diff --git a/src/sentry/integrations/github/client.py b/src/sentry/integrations/github/client.py
index 5da2d35561..9ba7289c55 100644
--- a/src/sentry/integrations/github/client.py
+++ b/src/sentry/integrations/github/client.py
@@ -19,7 +19,7 @@ class GitHubClientMixin(ApiClient):
         # see https://developer.github.com/v3/repos/commits/#list-commits-on-a-repository
         # using end_sha as parameter
         return self.get(
-            '/repos/{}/commits'.format(
+            u'/repos/{}/commits'.format(
                 repo,
             ),
             params={'sha': end_sha},
@@ -28,7 +28,7 @@ class GitHubClientMixin(ApiClient):
     def compare_commits(self, repo, start_sha, end_sha):
         # see https://developer.github.com/v3/repos/commits/#compare-two-commits
         # where start sha is oldest and end is most recent
-        return self.get('/repos/{}/compare/{}...{}'.format(
+        return self.get(u'/repos/{}/compare/{}...{}'.format(
             repo,
             start_sha,
             end_sha,
@@ -37,19 +37,19 @@ class GitHubClientMixin(ApiClient):
     def get_pr_commits(self, repo, num):
         # see https://developer.github.com/v3/pulls/#list-commits-on-a-pull-request
         # Max: 250 Commits
-        return self.get('/repos/{}/pulls/{}/commits'.format(
+        return self.get(u'/repos/{}/pulls/{}/commits'.format(
             repo,
             num
         ))
 
     def repo_hooks(self, repo):
-        return self.get('/repos/{}/hooks'.format(repo))
+        return self.get(u'/repos/{}/hooks'.format(repo))
 
     def get_commits(self, repo):
-        return self.get('/repos/{}/commits'.format(repo))
+        return self.get(u'/repos/{}/commits'.format(repo))
 
     def get_repo(self, repo):
-        return self.get('/repos/{}'.format(repo))
+        return self.get(u'/repos/{}'.format(repo))
 
     def get_repositories(self):
         repositories = self.get(
@@ -65,10 +65,10 @@ class GitHubClientMixin(ApiClient):
         )
 
     def get_assignees(self, repo):
-        return self.get('/repos/{}/assignees'.format(repo))
+        return self.get(u'/repos/{}/assignees'.format(repo))
 
     def get_issues(self, repo):
-        return self.get('/repos/{}/issues'.format(repo))
+        return self.get(u'/repos/{}/issues'.format(repo))
 
     def search_issues(self, query):
         return self.get(
@@ -77,18 +77,18 @@ class GitHubClientMixin(ApiClient):
         )
 
     def get_issue(self, repo, number):
-        return self.get('/repos/{}/issues/{}'.format(repo, number))
+        return self.get(u'/repos/{}/issues/{}'.format(repo, number))
 
     def create_issue(self, repo, data):
-        endpoint = '/repos/{}/issues'.format(repo)
+        endpoint = u'/repos/{}/issues'.format(repo)
         return self.post(endpoint, data=data)
 
     def create_comment(self, repo, issue_id, data):
-        endpoint = '/repos/{}/issues/{}/comments'.format(repo, issue_id)
+        endpoint = u'/repos/{}/issues/{}/comments'.format(repo, issue_id)
         return self.post(endpoint, data=data)
 
     def get_user(self, gh_username):
-        return self.get('/users/{}'.format(gh_username))
+        return self.get(u'/users/{}'.format(gh_username))
 
     def request(self, method, path, headers=None, data=None, params=None):
         if headers is None:
@@ -129,7 +129,7 @@ class GitHubClientMixin(ApiClient):
 
     def create_token(self):
         return self.post(
-            '/installations/{}/access_tokens'.format(
+            u'/installations/{}/access_tokens'.format(
                 self.integration.external_id,
             ),
             headers={
diff --git a/src/sentry/integrations/github/issues.py b/src/sentry/integrations/github/issues.py
index 1177096506..3932069fbd 100644
--- a/src/sentry/integrations/github/issues.py
+++ b/src/sentry/integrations/github/issues.py
@@ -8,12 +8,12 @@ from sentry.utils.http import absolute_uri
 
 class GitHubIssueBasic(IssueBasicMixin):
     def make_external_key(self, data):
-        return '{}#{}'.format(data['repo'], data['key'])
+        return u'{}#{}'.format(data['repo'], data['key'])
 
     def get_issue_url(self, key):
         domain_name, user = self.model.metadata['domain_name'].split('/')
         repo, issue_id = key.split('#')
-        return "https://{}/{}/issues/{}".format(domain_name, repo, issue_id)
+        return u"https://{}/{}/issues/{}".format(domain_name, repo, issue_id)
 
     def after_link_issue(self, external_issue, **kwargs):
         data = kwargs['data']
@@ -198,6 +198,6 @@ class GitHubIssueBasic(IssueBasicMixin):
         except Exception as e:
             self.raise_error(e)
 
-        issues = tuple((i['number'], '#{} {}'.format(i['number'], i['title'])) for i in response)
+        issues = tuple((i['number'], u'#{} {}'.format(i['number'], i['title'])) for i in response)
 
         return issues
diff --git a/src/sentry/integrations/github/repository.py b/src/sentry/integrations/github/repository.py
index d4cb0c8e38..1930069c32 100644
--- a/src/sentry/integrations/github/repository.py
+++ b/src/sentry/integrations/github/repository.py
@@ -28,7 +28,7 @@ class GitHubRepositoryProvider(providers.IntegrationRepositoryProvider):
             # https://developer.github.com/v3/repos/hooks/#list-hooks
             client.repo_hooks(repo)
         except ApiError as e:
-            raise IntegrationError('You must grant Sentry access to {}'.format(repo))
+            raise IntegrationError(u'You must grant Sentry access to {}'.format(repo))
 
         return repo_data
 
@@ -55,7 +55,7 @@ class GitHubRepositoryProvider(providers.IntegrationRepositoryProvider):
         return {
             'name': data['identifier'],
             'external_id': data['external_id'],
-            'url': 'https://github.com/{}'.format(data['identifier']),
+            'url': u'https://github.com/{}'.format(data['identifier']),
             'config': {
                 'name': data['identifier'],
             },
diff --git a/src/sentry/integrations/github/webhook.py b/src/sentry/integrations/github/webhook.py
index c7253ddc90..d98b97dd2b 100644
--- a/src/sentry/integrations/github/webhook.py
+++ b/src/sentry/integrations/github/webhook.py
@@ -38,7 +38,7 @@ class Webhook(object):
     def __call__(self, event, host=None):
         external_id = event['installation']['id']
         if host:
-            external_id = '{}:{}'.format(host, event['installation']['id'])
+            external_id = u'{}:{}'.format(host, event['installation']['id'])
 
         integration = Integration.objects.get(
             external_id=external_id,
@@ -74,7 +74,7 @@ class InstallationEventWebhook(Webhook):
         if installation and event['action'] == 'deleted':
             external_id = event['installation']['id']
             if host:
-                external_id = '{}:{}'.format(host, event['installation']['id'])
+                external_id = u'{}:{}'.format(host, event['installation']['id'])
             integration = Integration.objects.get(
                 external_id=external_id,
                 provider=self.provider,
diff --git a/src/sentry/integrations/github_enterprise/client.py b/src/sentry/integrations/github_enterprise/client.py
index 7738eba098..5ede54a6fa 100644
--- a/src/sentry/integrations/github_enterprise/client.py
+++ b/src/sentry/integrations/github_enterprise/client.py
@@ -9,7 +9,7 @@ class GitHubEnterpriseAppsClient(GitHubClientMixin):
     base_url = None
 
     def __init__(self, base_url, integration, app_id, private_key):
-        self.base_url = "https://{}/api/v3".format(base_url)
+        self.base_url = u"https://{}/api/v3".format(base_url)
         self.integration = integration
         self.app_id = app_id
         self.private_key = private_key
@@ -21,7 +21,7 @@ class GitHubEnterpriseAppsClient(GitHubClientMixin):
 
     def create_token(self):
         return self.post(
-            '/installations/{}/access_tokens'.format(
+            u'/installations/{}/access_tokens'.format(
                 self.integration.metadata['installation_id'],
             ),
             headers={
diff --git a/src/sentry/integrations/github_enterprise/integration.py b/src/sentry/integrations/github_enterprise/integration.py
index b31346ba06..542a5f12c7 100644
--- a/src/sentry/integrations/github_enterprise/integration.py
+++ b/src/sentry/integrations/github_enterprise/integration.py
@@ -197,8 +197,8 @@ class InstallationConfigView(PipelineView):
             pipeline.bind_state('installation_data', form_data)
 
             pipeline.bind_state('oauth_config_information', {
-                "access_token_url": "https://{}/login/oauth/access_token".format(form_data.get('url')),
-                "authorize_url": "https://{}/login/oauth/authorize".format(form_data.get('url')),
+                "access_token_url": u"https://{}/login/oauth/access_token".format(form_data.get('url')),
+                "authorize_url": u"https://{}/login/oauth/authorize".format(form_data.get('url')),
                 "client_id": form_data.get('client_id'),
                 "client_secret": form_data.get('client_secret'),
             })
@@ -258,7 +258,7 @@ class GitHubEnterpriseIntegrationProvider(GitHubIntegrationProvider):
     def get_installation_info(self, installation_data, access_token, installation_id):
         session = http.build_session()
         resp = session.get(
-            'https://{}/api/v3/app/installations/{}'.format(
+            u'https://{}/api/v3/app/installations/{}'.format(
                 installation_data['url'], installation_id),
             headers={
                 'Authorization': 'Bearer %s' % get_jwt(github_id=installation_data['id'], github_private_key=installation_data['private_key']),
@@ -270,7 +270,7 @@ class GitHubEnterpriseIntegrationProvider(GitHubIntegrationProvider):
         installation_resp = resp.json()
 
         resp = session.get(
-            'https://{}/api/v3/user/installations'.format(installation_data['url']),
+            u'https://{}/api/v3/user/installations'.format(installation_data['url']),
             params={'access_token': access_token},
             headers={'Accept': 'application/vnd.github.machine-man-preview+json'},
             verify=False
@@ -298,11 +298,11 @@ class GitHubEnterpriseIntegrationProvider(GitHubIntegrationProvider):
         integration = {
             'name': installation['account']['login'],
             # installation id is not enough to be unique for self-hosted GH
-            'external_id': '{}:{}'.format(domain, installation['id']),
+            'external_id': u'{}:{}'.format(domain, installation['id']),
             # GitHub identity is associated directly to the application, *not*
             # to the installation itself.
             # app id is not enough to be unique for self-hosted GH
-            'idp_external_id': '{}:{}'.format(domain, installation['app_id']),
+            'idp_external_id': u'{}:{}'.format(domain, installation['app_id']),
             'metadata': {
                 # The access token will be populated upon API usage
                 'access_token': None,
@@ -340,7 +340,7 @@ class GitHubEnterpriseInstallationRedirect(PipelineView):
     def get_app_url(self, installation_data):
         url = installation_data.get('url')
         name = installation_data.get('name')
-        return 'https://{}/github-apps/{}'.format(url, name)
+        return u'https://{}/github-apps/{}'.format(url, name)
 
     def dispatch(self, request, pipeline):
         installation_data = pipeline.fetch_state(key='installation_data')
diff --git a/src/sentry/integrations/github_enterprise/repository.py b/src/sentry/integrations/github_enterprise/repository.py
index f2dfa6fca2..96d1e9e03f 100644
--- a/src/sentry/integrations/github_enterprise/repository.py
+++ b/src/sentry/integrations/github_enterprise/repository.py
@@ -37,7 +37,7 @@ class GitHubEnterpriseRepositoryProvider(GitHubRepositoryProvider):
         return {
             'name': data['identifier'],
             'external_id': data['external_id'],
-            'url': 'https://{}/{}'.format(base_url, data['identifier']),
+            'url': u'https://{}/{}'.format(base_url, data['identifier']),
             'config': {
                 'name': data['identifier'],
             },
diff --git a/src/sentry/integrations/github_enterprise/webhook.py b/src/sentry/integrations/github_enterprise/webhook.py
index ca32b4b599..d177f44d2c 100644
--- a/src/sentry/integrations/github_enterprise/webhook.py
+++ b/src/sentry/integrations/github_enterprise/webhook.py
@@ -25,7 +25,7 @@ def get_installation_metadata(event, host):
         return
     try:
         integration = Integration.objects.get(
-            external_id='{}:{}'.format(host, event['installation']['id']),
+            external_id=u'{}:{}'.format(host, event['installation']['id']),
             provider='github_enterprise')
     except Integration.DoesNotExist:
         return
@@ -55,7 +55,7 @@ class GitHubEnterprisePushEventWebhook(PushEventWebhook):
         return 'github_enterprise:%s' % username
 
     def get_idp_external_id(self, integration, host):
-        return '{}:{}'.format(host, integration.metadata['installation']['id'])
+        return u'{}:{}'.format(host, integration.metadata['installation']['id'])
 
     def should_ignore_commit(self, commit):
         return GitHubEnterpriseRepositoryProvider.should_ignore_commit(commit['message'])
@@ -72,7 +72,7 @@ class GitHubEnterprisePullRequestEventWebhook(PullRequestEventWebhook):
         return 'github_enterprise:%s' % username
 
     def get_idp_external_id(self, integration, host):
-        return '{}:{}'.format(host, integration.metadata['installation']['id'])
+        return u'{}:{}'.format(host, integration.metadata['installation']['id'])
 
 
 class GitHubEnterpriseWebhookBase(View):
diff --git a/src/sentry/integrations/slack/action_endpoint.py b/src/sentry/integrations/slack/action_endpoint.py
index cd4d932964..e9146c2efd 100644
--- a/src/sentry/integrations/slack/action_endpoint.py
+++ b/src/sentry/integrations/slack/action_endpoint.py
@@ -86,7 +86,7 @@ class SlackActionEndpoint(Endpoint):
         )
 
         return client.put(
-            path='/projects/{}/{}/issues/'.format(
+            path=u'/projects/{}/{}/issues/'.format(
                 group.project.organization.slug,
                 group.project.slug,
             ),
diff --git a/src/sentry/integrations/slack/requests.py b/src/sentry/integrations/slack/requests.py
index 969ad67a38..931e3eedad 100644
--- a/src/sentry/integrations/slack/requests.py
+++ b/src/sentry/integrations/slack/requests.py
@@ -160,7 +160,7 @@ class SlackEventRequest(SlackRequest):
             raise SlackRequestError(status=400)
 
     def _log_request(self):
-        self._info('slack.event.{}'.format(self.type))
+        self._info(u'slack.event.{}'.format(self.type))
 
 
 class SlackActionRequest(SlackRequest):
diff --git a/src/sentry/integrations/vsts/client.py b/src/sentry/integrations/vsts/client.py
index f7dd665016..eb4bb07b7a 100644
--- a/src/sentry/integrations/vsts/client.py
+++ b/src/sentry/integrations/vsts/client.py
@@ -48,11 +48,11 @@ class VstsApiClient(ApiClient, OAuth2RefreshMixin):
     def request(self, method, path, data=None, params=None, api_preview=False):
         self.check_auth(redirect_url=self.oauth_redirect_url)
         headers = {
-            'Accept': 'application/json; api-version={}{}'.format(self.api_version, self.api_version_preview if api_preview else ''),
+            'Accept': u'application/json; api-version={}{}'.format(self.api_version, self.api_version_preview if api_preview else ''),
             'Content-Type': 'application/json-patch+json' if method == 'PATCH' else 'application/json',
             'X-HTTP-Method-Override': method,
             'X-TFS-FedAuthRedirect': 'Suppress',
-            'Authorization': 'Bearer {}'.format(self.identity.data['access_token'])
+            'Authorization': u'Bearer {}'.format(self.identity.data['access_token'])
         }
         return self._request(method, path, headers=headers, data=data, params=params)
 
@@ -169,7 +169,7 @@ class VstsApiClient(ApiClient, OAuth2RefreshMixin):
         return self.get(
             VstsApiPath.repository.format(
                 instance=instance,
-                project='{}/'.format(project) if project else '',
+                project=u'{}/'.format(project) if project else '',
                 repo_id=name_or_id,
             ),
         )
@@ -178,7 +178,7 @@ class VstsApiClient(ApiClient, OAuth2RefreshMixin):
         return self.get(
             VstsApiPath.repositories.format(
                 instance=instance,
-                project='{}/'.format(project) if project else '',
+                project=u'{}/'.format(project) if project else '',
             ),
         )
 
diff --git a/src/sentry/integrations/vsts_extension/integration.py b/src/sentry/integrations/vsts_extension/integration.py
index 3b4ab96826..b1da500ef8 100644
--- a/src/sentry/integrations/vsts_extension/integration.py
+++ b/src/sentry/integrations/vsts_extension/integration.py
@@ -43,7 +43,7 @@ class VstsExtensionFinishedView(PipelineView):
         messages.add_message(request, messages.SUCCESS, 'VSTS Extension installed.')
 
         return HttpResponseRedirect(
-            absolute_uri('/settings/{}/integrations/vsts-extension/{}/'.format(
+            absolute_uri(u'/settings/{}/integrations/vsts-extension/{}/'.format(
                 pipeline.organization.slug,
                 pipeline.integration.id,
             ))
diff --git a/src/sentry/interfaces/security.py b/src/sentry/interfaces/security.py
index a4869baa36..7d45eb497e 100644
--- a/src/sentry/interfaces/security.py
+++ b/src/sentry/interfaces/security.py
@@ -173,7 +173,7 @@ class Hpkp(SecurityReport):
         return ['hpkp', self.hostname]
 
     def get_message(self):
-        return "Public key pinning validation failed for '{self.hostname}'".format(self=self)
+        return u"Public key pinning validation failed for '{self.hostname}'".format(self=self)
 
     def get_tags(self):
         return [
@@ -237,7 +237,7 @@ class ExpectStaple(SecurityReport):
         return ['expect-staple', self.hostname]
 
     def get_message(self):
-        return "Expect-Staple failed for '{self.hostname}'".format(self=self)
+        return u"Expect-Staple failed for '{self.hostname}'".format(self=self)
 
     def get_tags(self):
         return (
@@ -299,7 +299,7 @@ class ExpectCT(SecurityReport):
         return ['expect-ct', self.hostname]
 
     def get_message(self):
-        return "Expect-CT failed for '{self.hostname}'".format(self=self)
+        return u"Expect-CT failed for '{self.hostname}'".format(self=self)
 
     def get_tags(self):
         return (
diff --git a/src/sentry/lint/engine.py b/src/sentry/lint/engine.py
index 9f9a9a564c..3f903e673e 100644
--- a/src/sentry/lint/engine.py
+++ b/src/sentry/lint/engine.py
@@ -192,7 +192,7 @@ def is_prettier_valid(project_root, prettier_path):
         [prettier_path, '--version']).rstrip()
     if prettier_version != package_version:
         print(  # noqa: B314
-            '[sentry.lint] Prettier is out of date: {} (expected {}). Please run `yarn install`.'.format(
+            u'[sentry.lint] Prettier is out of date: {} (expected {}). Please run `yarn install`.'.format(
                 prettier_version,
                 package_version),
             file=sys.stderr)
diff --git a/src/sentry/management/commands/check_notifications.py b/src/sentry/management/commands/check_notifications.py
index 09e5aee20e..d9a6db0efe 100644
--- a/src/sentry/management/commands/check_notifications.py
+++ b/src/sentry/management/commands/check_notifications.py
@@ -28,7 +28,7 @@ def handle_project(plugin, project, stream):
     user_ids = plugin.get_sendable_users(project)
     users = User.objects.in_bulk(user_ids)
     for user_id, email in get_email_addresses(user_ids, project).items():
-        stream.write('{}: {}\n'.format(users[user_id].username, email))
+        stream.write(u'{}: {}\n'.format(users[user_id].username, email))
 
 
 class Command(BaseCommand):
diff --git a/src/sentry/management/commands/generate_reset_password_link.py b/src/sentry/management/commands/generate_reset_password_link.py
index fd2cf5f8fa..1741dcc735 100644
--- a/src/sentry/management/commands/generate_reset_password_link.py
+++ b/src/sentry/management/commands/generate_reset_password_link.py
@@ -38,7 +38,7 @@ class Command(BaseCommand):
                 password_hash.set_hash()
                 password_hash.save()
             echo(
-                '{} ({}) - {}'.format(
+                u'{} ({}) - {}'.format(
                     user.username,
                     user.email,
                     password_hash.get_absolute_url(),
diff --git a/src/sentry/management/commands/merge_users.py b/src/sentry/management/commands/merge_users.py
index 053f8b7779..60a2d3dc9f 100644
--- a/src/sentry/management/commands/merge_users.py
+++ b/src/sentry/management/commands/merge_users.py
@@ -46,7 +46,7 @@ class Command(BaseCommand):
         return members_by_email.values()
 
     def _confirm_merge(self, primary_user, other_users):
-        message = "Merge {} into {}? [Yn] ".format(
+        message = u"Merge {} into {}? [Yn] ".format(
             ', '.join(o.username for o in other_users),
             primary_user.username,
         )
@@ -93,7 +93,7 @@ class Command(BaseCommand):
             return
 
         sys.stdout.write(
-            "Found {} unique account(s) with duplicate identities.\n".format(len(unique_users))
+            u"Found {} unique account(s) with duplicate identities.\n".format(len(unique_users))
         )
 
         for user_list in unique_users:
@@ -111,7 +111,7 @@ class Command(BaseCommand):
             for user in user_list[1:]:
                 user.merge_to(primary_user)
                 sys.stdout.write(
-                    "{} was merged into {}\n".format(
+                    u"{} was merged into {}\n".format(
                         user.username,
                         primary_user.username,
                     )
diff --git a/src/sentry/mediators/param.py b/src/sentry/mediators/param.py
index 0c9d57aab4..2d75c68881 100644
--- a/src/sentry/mediators/param.py
+++ b/src/sentry/mediators/param.py
@@ -81,7 +81,7 @@ class Param(object):
 
     def setup(self, target, name):
         delattr(target, name)
-        setattr(target, '_{}'.format(name), self)
+        setattr(target, u'_{}'.format(name), self)
 
     def validate(self, target, name, value):
         """
@@ -92,10 +92,10 @@ class Param(object):
             value = self.default(target)
 
         if self._missing_value(value):
-            raise AttributeError('Missing required param: `{}`'.format(name))
+            raise AttributeError(u'Missing required param: `{}`'.format(name))
 
         if self.is_required and not self._type_match(value):
-            raise TypeError('`{}` must be a {}, received {}'.format(
+            raise TypeError(u'`{}` must be a {}, received {}'.format(
                 name, self.type, self._value_type(value)))
 
         return True
diff --git a/src/sentry/metrics/base.py b/src/sentry/metrics/base.py
index 097489fed4..49f6746734 100644
--- a/src/sentry/metrics/base.py
+++ b/src/sentry/metrics/base.py
@@ -15,7 +15,7 @@ class MetricsBackend(local):
 
     def _get_key(self, key):
         if self.prefix:
-            return '{}{}'.format(self.prefix, key)
+            return u'{}{}'.format(self.prefix, key)
         return key
 
     def _should_sample(self, sample_rate):
diff --git a/src/sentry/metrics/datadog.py b/src/sentry/metrics/datadog.py
index f21f767a26..5cc16b930b 100644
--- a/src/sentry/metrics/datadog.py
+++ b/src/sentry/metrics/datadog.py
@@ -42,7 +42,7 @@ class DatadogMetricsBackend(MetricsBackend):
         if instance:
             tags['instance'] = instance
         if tags:
-            tags = ['{}:{}'.format(*i) for i in tags.items()]
+            tags = [u'{}:{}'.format(*i) for i in tags.items()]
         self.stats.increment(
             self._get_key(key), amount, sample_rate=sample_rate, tags=tags, host=self.host
         )
@@ -55,7 +55,7 @@ class DatadogMetricsBackend(MetricsBackend):
         if instance:
             tags['instance'] = instance
         if tags:
-            tags = ['{}:{}'.format(*i) for i in tags.items()]
+            tags = [u'{}:{}'.format(*i) for i in tags.items()]
         self.stats.timing(
             self._get_key(key), value, sample_rate=sample_rate, tags=tags, host=self.host
         )
diff --git a/src/sentry/metrics/dogstatsd.py b/src/sentry/metrics/dogstatsd.py
index 7ad7df2961..0a52c8c9be 100644
--- a/src/sentry/metrics/dogstatsd.py
+++ b/src/sentry/metrics/dogstatsd.py
@@ -22,7 +22,7 @@ class DogStatsdMetricsBackend(MetricsBackend):
         if instance:
             tags['instance'] = instance
         if tags:
-            tags = ['{}:{}'.format(*i) for i in tags.items()]
+            tags = [u'{}:{}'.format(*i) for i in tags.items()]
         statsd.increment(
             self._get_key(key),
             amount,
@@ -38,7 +38,7 @@ class DogStatsdMetricsBackend(MetricsBackend):
         if instance:
             tags['instance'] = instance
         if tags:
-            tags = ['{}:{}'.format(*i) for i in tags.items()]
+            tags = [u'{}:{}'.format(*i) for i in tags.items()]
         statsd.timing(
             self._get_key(key),
             value,
diff --git a/src/sentry/metrics/statsd.py b/src/sentry/metrics/statsd.py
index 1b13792d56..ec17686600 100644
--- a/src/sentry/metrics/statsd.py
+++ b/src/sentry/metrics/statsd.py
@@ -14,7 +14,7 @@ class StatsdMetricsBackend(MetricsBackend):
 
     def _full_key(self, key, instance=None):
         if instance:
-            return '{}.{}'.format(key, instance)
+            return u'{}.{}'.format(key, instance)
         return key
 
     def incr(self, key, instance=None, tags=None, amount=1, sample_rate=1):
diff --git a/src/sentry/models/file.py b/src/sentry/models/file.py
index 77bef9a7ab..1b18237a98 100644
--- a/src/sentry/models/file.py
+++ b/src/sentry/models/file.py
@@ -99,7 +99,7 @@ class FileBlob(Model):
 
         # TODO(dcramer): the database here is safe, but if this lock expires
         # and duplicate files are uploaded then we need to prune one
-        lock = locks.get('fileblob:upload:{}'.format(checksum), duration=60 * 10)
+        lock = locks.get(u'fileblob:upload:{}'.format(checksum), duration=60 * 10)
         with TimedRetryPolicy(60)(lock.acquire):
             # test for presence
             try:
@@ -130,7 +130,7 @@ class FileBlob(Model):
         return u'/'.join(pieces)
 
     def delete(self, *args, **kwargs):
-        lock = locks.get('fileblob:upload:{}'.format(self.checksum), duration=60 * 10)
+        lock = locks.get(u'fileblob:upload:{}'.format(self.checksum), duration=60 * 10)
         with TimedRetryPolicy(60)(lock.acquire):
             super(FileBlob, self).delete(*args, **kwargs)
         if self.path:
diff --git a/src/sentry/models/groupenvironment.py b/src/sentry/models/groupenvironment.py
index f35674ee54..706f9c6d7e 100644
--- a/src/sentry/models/groupenvironment.py
+++ b/src/sentry/models/groupenvironment.py
@@ -26,7 +26,7 @@ class GroupEnvironment(Model):
 
     @classmethod
     def _get_cache_key(self, group_id, environment_id):
-        return 'groupenv:1:{}:{}'.format(group_id, environment_id)
+        return u'groupenv:1:{}:{}'.format(group_id, environment_id)
 
     @classmethod
     def get_or_create(cls, group_id, environment_id, defaults=None):
diff --git a/src/sentry/models/grouphash.py b/src/sentry/models/grouphash.py
index 8a14492198..ac6ef9790f 100644
--- a/src/sentry/models/grouphash.py
+++ b/src/sentry/models/grouphash.py
@@ -47,20 +47,20 @@ class GroupHash(Model):
     @classmethod
     def fetch_last_processed_event_id(cls, group_hash_ids):
         with cls.__get_last_processed_event_id_cluster().map() as client:
-            results = [client.get('gh:lp:{}'.format(id)) for id in group_hash_ids]
+            results = [client.get(u'gh:lp:{}'.format(id)) for id in group_hash_ids]
         return [result.value for result in results]
 
     @classmethod
     def record_last_processed_event_id(cls, group_hash_id, event_id):
         with cls.__get_last_processed_event_id_cluster().map() as client:
-            key = 'gh:lp:{}'.format(group_hash_id)
-            client.set(key, '{}'.format(event_id))
+            key = u'gh:lp:{}'.format(group_hash_id)
+            client.set(key, u'{}'.format(event_id))
             client.expire(key, 7776000)  # 90d
 
     @classmethod
     def delete_last_processed_event_id(cls, group_hash_id):
         with cls.__get_last_processed_event_id_cluster().map() as client:
-            client.delete('gh:lp:{}'.format(group_hash_id))
+            client.delete(u'gh:lp:{}'.format(group_hash_id))
 
 
 post_delete.connect(
diff --git a/src/sentry/models/grouprelease.py b/src/sentry/models/grouprelease.py
index db36a95cf5..fb593a90c7 100644
--- a/src/sentry/models/grouprelease.py
+++ b/src/sentry/models/grouprelease.py
@@ -28,7 +28,7 @@ class GroupRelease(Model):
 
     @classmethod
     def get_cache_key(cls, group_id, release_id, environment):
-        return 'grouprelease:1:{}:{}'.format(
+        return u'grouprelease:1:{}:{}'.format(
             group_id,
             md5_text(u'{}:{}'.format(release_id, environment)).hexdigest(),
         )
diff --git a/src/sentry/models/lostpasswordhash.py b/src/sentry/models/lostpasswordhash.py
index 20668dd9fa..c52bc15bc5 100644
--- a/src/sentry/models/lostpasswordhash.py
+++ b/src/sentry/models/lostpasswordhash.py
@@ -68,9 +68,9 @@ class LostPasswordHash(Model):
         template = 'set_password' if mode == 'set_password' else 'recover_account'
 
         msg = MessageBuilder(
-            subject='{}Password Recovery'.format(options.get('mail.subject-prefix')),
-            template='sentry/emails/{name}.txt'.format(name=template),
-            html_template='sentry/emails/{name}.html'.format(name=template),
+            subject=u'{}Password Recovery'.format(options.get('mail.subject-prefix')),
+            template=u'sentry/emails/{name}.txt'.format(name=template),
+            html_template=u'sentry/emails/{name}.html'.format(name=template),
             type='user.password_recovery',
             context=context,
         )
diff --git a/src/sentry/models/organizationmember.py b/src/sentry/models/organizationmember.py
index 11e745a2fa..3b5cee0c9e 100644
--- a/src/sentry/models/organizationmember.py
+++ b/src/sentry/models/organizationmember.py
@@ -182,7 +182,7 @@ class OrganizationMember(Model):
 
         email = self.get_email()
 
-        recover_uri = '{path}?{query}'.format(
+        recover_uri = u'{path}?{query}'.format(
             path=reverse('sentry-account-recover'),
             query=urlencode({'email': email}),
         )
diff --git a/src/sentry/models/project.py b/src/sentry/models/project.py
index 00934acb2a..3ec7b0170c 100644
--- a/src/sentry/models/project.py
+++ b/src/sentry/models/project.py
@@ -147,7 +147,7 @@ class Project(Model):
         self.update_rev_for_option()
 
     def get_absolute_url(self):
-        return absolute_uri('/{}/{}/'.format(self.organization.slug, self.slug))
+        return absolute_uri(u'/{}/{}/'.format(self.organization.slug, self.slug))
 
     def is_internal_project(self):
         for value in (settings.SENTRY_FRONTEND_PROJECT, settings.SENTRY_PROJECT):
diff --git a/src/sentry/models/release.py b/src/sentry/models/release.py
index 081d6c1e87..d41bc8e606 100644
--- a/src/sentry/models/release.py
+++ b/src/sentry/models/release.py
@@ -101,7 +101,7 @@ class Release(Model):
 
     @classmethod
     def get_lock_key(cls, organization_id, release_id):
-        return 'releasecommits:{}:{}'.format(organization_id, release_id)
+        return u'releasecommits:{}:{}'.format(organization_id, release_id)
 
     @classmethod
     def get(cls, project, version):
@@ -360,7 +360,7 @@ class Release(Model):
                 latest_commit = None
                 for idx, data in enumerate(commit_list):
                     repo_name = data.get('repository'
-                                         ) or 'organization-{}'.format(self.organization_id)
+                                         ) or u'organization-{}'.format(self.organization_id)
                     if repo_name not in repos:
                         repos[repo_name] = repo = Repository.objects.get_or_create(
                             organization_id=self.organization_id,
diff --git a/src/sentry/models/releaseenvironment.py b/src/sentry/models/releaseenvironment.py
index 94b51f555a..454a81ffa2 100644
--- a/src/sentry/models/releaseenvironment.py
+++ b/src/sentry/models/releaseenvironment.py
@@ -28,7 +28,7 @@ class ReleaseEnvironment(Model):
 
     @classmethod
     def get_cache_key(cls, organization_id, release_id, environment_id):
-        return 'releaseenv:2:{}:{}:{}'.format(
+        return u'releaseenv:2:{}:{}:{}'.format(
             organization_id,
             release_id,
             environment_id,
diff --git a/src/sentry/models/releaseprojectenvironment.py b/src/sentry/models/releaseprojectenvironment.py
index 4c0496d211..6d20881390 100644
--- a/src/sentry/models/releaseprojectenvironment.py
+++ b/src/sentry/models/releaseprojectenvironment.py
@@ -28,7 +28,7 @@ class ReleaseProjectEnvironment(Model):
 
     @classmethod
     def get_cache_key(cls, release_id, project_id, environment_id):
-        return 'releaseprojectenv:{}:{}:{}'.format(
+        return u'releaseprojectenv:{}:{}:{}'.format(
             release_id,
             project_id,
             environment_id,
diff --git a/src/sentry/models/rule.py b/src/sentry/models/rule.py
index 2c124a01b9..3c778644ac 100644
--- a/src/sentry/models/rule.py
+++ b/src/sentry/models/rule.py
@@ -53,7 +53,7 @@ class Rule(Model):
 
     @classmethod
     def get_for_project(cls, project_id):
-        cache_key = 'project:{}:rules'.format(project_id)
+        cache_key = u'project:{}:rules'.format(project_id)
         rules_list = cache.get(cache_key)
         if rules_list is None:
             rules_list = list(cls.objects.filter(
@@ -65,13 +65,13 @@ class Rule(Model):
 
     def delete(self, *args, **kwargs):
         rv = super(Rule, self).delete(*args, **kwargs)
-        cache_key = 'project:{}:rules'.format(self.project_id)
+        cache_key = u'project:{}:rules'.format(self.project_id)
         cache.delete(cache_key)
         return rv
 
     def save(self, *args, **kwargs):
         rv = super(Rule, self).save(*args, **kwargs)
-        cache_key = 'project:{}:rules'.format(self.project_id)
+        cache_key = u'project:{}:rules'.format(self.project_id)
         cache.delete(cache_key)
         return rv
 
diff --git a/src/sentry/pipeline/__init__.py b/src/sentry/pipeline/__init__.py
index cfb296e8b4..ca5633832e 100644
--- a/src/sentry/pipeline/__init__.py
+++ b/src/sentry/pipeline/__init__.py
@@ -163,7 +163,7 @@ class Pipeline(object):
         # we serialize the pipeline to be ['fqn.PipelineView', ...] which
         # allows us to determine if the pipeline has changed during the auth
         # flow or if the user is somehow circumventing a chunk of it
-        pipe_ids = ['{}.{}'.format(type(v).__module__, type(v).__name__)
+        pipe_ids = [u'{}.{}'.format(type(v).__module__, type(v).__name__)
                     for v in self.pipeline_views]
         self.signature = md5_text(*pipe_ids).hexdigest()
 
diff --git a/src/sentry/plugins/base/bindings.py b/src/sentry/plugins/base/bindings.py
index 8ba6d64e8f..f178126717 100644
--- a/src/sentry/plugins/base/bindings.py
+++ b/src/sentry/plugins/base/bindings.py
@@ -16,7 +16,7 @@ class ProviderManager(object):
 
     def add(self, item, id):
         if self.type and not issubclass(item, self.type):
-            raise ValueError('Invalid type for provider: {}'.format(
+            raise ValueError(u'Invalid type for provider: {}'.format(
                 type(item),
             ))
 
diff --git a/src/sentry/plugins/base/configuration.py b/src/sentry/plugins/base/configuration.py
index b8ca4c8f1a..3b670193ab 100644
--- a/src/sentry/plugins/base/configuration.py
+++ b/src/sentry/plugins/base/configuration.py
@@ -22,7 +22,7 @@ from sentry.utils import json
 
 def react_plugin_config(plugin, project, request):
     response = client.get(
-        '/projects/{}/{}/plugins/{}/'.format(
+        u'/projects/{}/{}/plugins/{}/'.format(
             project.organization.slug,
             project.slug,
             plugin.slug,
diff --git a/src/sentry/plugins/bases/data_forwarding.py b/src/sentry/plugins/bases/data_forwarding.py
index 9e23242c2f..085656da4e 100644
--- a/src/sentry/plugins/bases/data_forwarding.py
+++ b/src/sentry/plugins/bases/data_forwarding.py
@@ -33,7 +33,7 @@ class DataForwardingPlugin(Plugin):
         return 'data-forwarding'
 
     def post_process(self, event, **kwargs):
-        rl_key = '{}:{}'.format(
+        rl_key = u'{}:{}'.format(
             self.conf_key,
             event.project.organization_id,
         )
diff --git a/src/sentry/plugins/bases/issue2.py b/src/sentry/plugins/bases/issue2.py
index b5fe177264..c98b1d7887 100644
--- a/src/sentry/plugins/bases/issue2.py
+++ b/src/sentry/plugins/bases/issue2.py
@@ -169,8 +169,8 @@ class IssueTrackingPlugin2(Plugin):
         e.g. GitHub represents issues as GH-XXX
         """
         if isinstance(issue, dict):
-            return '#{}'.format(issue['id'])
-        return '#{}'.format(issue)
+            return u'#{}'.format(issue['id'])
+        return u'#{}'.format(issue)
 
     def create_issue(self, request, group, form_data, **kwargs):
         """
@@ -209,10 +209,10 @@ class IssueTrackingPlugin2(Plugin):
         conf_key = self.get_conf_key()
         if self.issue_fields is None:
             return {
-                'id': '{}:tid'.format(conf_key)
+                'id': u'{}:tid'.format(conf_key)
             }
         return {
-            key: '{}:issue_{}'.format(
+            key: u'{}:issue_{}'.format(
                 conf_key,
                 key,
             )
diff --git a/src/sentry/plugins/bases/notify.py b/src/sentry/plugins/bases/notify.py
index 2c1a34ab92..e42c7fe0bb 100644
--- a/src/sentry/plugins/bases/notify.py
+++ b/src/sentry/plugins/bases/notify.py
@@ -154,7 +154,7 @@ class NotificationPlugin(Plugin):
         # older plugins.
         if not (hasattr(self, 'notify_digest') and
                 digests.enabled(project)) and self.__is_rate_limited(group, event):
-            logger = logging.getLogger('sentry.plugins.{0}'.format(self.get_conf_key()))
+            logger = logging.getLogger(u'sentry.plugins.{0}'.format(self.get_conf_key()))
             logger.info('notification.rate_limited', extra={'project_id': project.id})
             return False
 
diff --git a/src/sentry/plugins/examples/issue_tracking.py b/src/sentry/plugins/examples/issue_tracking.py
index 06c4a4f5d1..b916f74c24 100644
--- a/src/sentry/plugins/examples/issue_tracking.py
+++ b/src/sentry/plugins/examples/issue_tracking.py
@@ -39,7 +39,7 @@ class ExampleIssueTrackingPlugin(IssuePlugin2):
     def get_issue_url(self, group, issue_id, **kwargs):
         tracker_url = self.get_option('tracker_url', group.project)
 
-        return '{}?issueID={}'.format(tracker_url, issue_id)
+        return u'{}?issueID={}'.format(tracker_url, issue_id)
 
     def get_configure_plugin_fields(self, project, **kwargs):
         return [
diff --git a/src/sentry/plugins/sentry_mail/activity/base.py b/src/sentry/plugins/sentry_mail/activity/base.py
index 75638ec7e5..26c99fc0ee 100644
--- a/src/sentry/plugins/sentry_mail/activity/base.py
+++ b/src/sentry/plugins/sentry_mail/activity/base.py
@@ -57,14 +57,14 @@ class ActivityEmail(object):
         return 'sentry/emails/activity/generic.html'
 
     def get_project_link(self):
-        return absolute_uri('/{}/{}/'.format(
+        return absolute_uri(u'/{}/{}/'.format(
             self.organization.slug,
             self.project.slug,
         ))
 
     def get_group_link(self):
         return absolute_uri(
-            '/{}/{}/issues/{}/'.format(
+            u'/{}/{}/issues/{}/'.format(
                 self.organization.slug,
                 self.project.slug,
                 self.group.id,
@@ -86,7 +86,7 @@ class ActivityEmail(object):
 
     def get_group_context(self):
         group_link = self.get_group_link()
-        activity_link = '{}activity/'.format(group_link)
+        activity_link = u'{}activity/'.format(group_link)
 
         return {
             'group': self.group,
@@ -95,7 +95,7 @@ class ActivityEmail(object):
         }
 
     def get_email_type(self):
-        return 'notify.activity.{}'.format(
+        return u'notify.activity.{}'.format(
             self.activity.get_type_display(),
         )
 
@@ -158,12 +158,12 @@ class ActivityEmail(object):
     def avatar_as_html(self):
         user = self.activity.user
         if not user:
-            return '<img class="avatar" src="{}" width="20px" height="20px" />'.format(
+            return u'<img class="avatar" src="{}" width="20px" height="20px" />'.format(
                 escape(self._get_sentry_avatar_url())
             )
         avatar_type = user.get_avatar_type()
         if avatar_type == 'upload':
-            return '<img class="avatar" src="{}" />'.format(
+            return u'<img class="avatar" src="{}" />'.format(
                 escape(self._get_user_avatar_url(user)))
         elif avatar_type == 'letter_avatar':
             return get_email_avatar(user.get_display_name(), user.get_label(), 20, False)
@@ -182,7 +182,7 @@ class ActivityEmail(object):
 
         url = reverse('sentry-user-avatar-url', args=[avatar.ident])
         if size:
-            url = '{}?s={}'.format(url, int(size))
+            url = u'{}?s={}'.format(url, int(size))
         return absolute_uri(url)
 
     def description_as_text(self, description, params):
diff --git a/src/sentry/plugins/sentry_mail/activity/new_processing_issues.py b/src/sentry/plugins/sentry_mail/activity/new_processing_issues.py
index 10ffce37c3..a6b243c826 100644
--- a/src/sentry/plugins/sentry_mail/activity/new_processing_issues.py
+++ b/src/sentry/plugins/sentry_mail/activity/new_processing_issues.py
@@ -46,7 +46,7 @@ class NewProcessingIssuesActivityEmail(ActivityEmail):
             self.activity.data['reprocessing_active'],
             'info_url':
             absolute_uri(
-                '/{}/{}/settings/processing-issues/'.format(
+                u'/{}/{}/settings/processing-issues/'.format(
                     self.organization.slug,
                     self.project.slug,
                 )
diff --git a/src/sentry/plugins/sentry_mail/activity/regression.py b/src/sentry/plugins/sentry_mail/activity/regression.py
index 94cf055954..55e92c25e2 100644
--- a/src/sentry/plugins/sentry_mail/activity/regression.py
+++ b/src/sentry/plugins/sentry_mail/activity/regression.py
@@ -19,7 +19,7 @@ class RegressionActivityEmail(ActivityEmail):
                 'version':
                 u'<a href="{}">{}</a>'.format(
                     absolute_uri(
-                        '/{}/{}/releases/{}/'.format(
+                        u'/{}/{}/releases/{}/'.format(
                             self.organization.slug,
                             self.project.slug,
                             data['version'],
diff --git a/src/sentry/plugins/sentry_mail/activity/release.py b/src/sentry/plugins/sentry_mail/activity/release.py
index 855e370ef0..8289bbb864 100644
--- a/src/sentry/plugins/sentry_mail/activity/release.py
+++ b/src/sentry/plugins/sentry_mail/activity/release.py
@@ -177,7 +177,7 @@ class ReleaseActivityEmail(ActivityEmail):
             'environment':
             self.environment,
             'setup_repo_link':
-            absolute_uri('/organizations/{}/repos/'.format(
+            absolute_uri(u'/organizations/{}/repos/'.format(
                 self.organization.slug,
             )),
         }
@@ -195,7 +195,7 @@ class ReleaseActivityEmail(ActivityEmail):
             projects = [p for p in self.projects if p.id in team_projects]
         release_links = [
             absolute_uri(
-                '/{}/{}/releases/{}/'.format(
+                u'/{}/{}/releases/{}/'.format(
                     self.organization.slug,
                     p.slug,
                     self.release.version,
diff --git a/src/sentry/plugins/sentry_mail/activity/resolved_in_release.py b/src/sentry/plugins/sentry_mail/activity/resolved_in_release.py
index 1c9c06d71d..713b61b0f4 100644
--- a/src/sentry/plugins/sentry_mail/activity/resolved_in_release.py
+++ b/src/sentry/plugins/sentry_mail/activity/resolved_in_release.py
@@ -19,7 +19,7 @@ class ResolvedInReleaseActivityEmail(ActivityEmail):
                 'version':
                 u'<a href="{}">{}</a>'.format(
                     absolute_uri(
-                        '/{}/{}/releases/{}/'.format(
+                        u'/{}/{}/releases/{}/'.format(
                             self.organization.slug,
                             self.project.slug,
                             data['version'],
diff --git a/src/sentry/plugins/sentry_mail/models.py b/src/sentry/plugins/sentry_mail/models.py
index 8b35df1300..509cd11c39 100644
--- a/src/sentry/plugins/sentry_mail/models.py
+++ b/src/sentry/plugins/sentry_mail/models.py
@@ -104,7 +104,7 @@ class MailPlugin(NotificationPlugin):
         return absolute_uri(reverse('sentry-account-settings-notifications'))
 
     def get_project_url(self, project):
-        return absolute_uri('/{}/{}/'.format(project.organization.slug, project.slug))
+        return absolute_uri(u'/{}/{}/'.format(project.organization.slug, project.slug))
 
     def is_configured(self, project, **kwargs):
         # Nothing to configure here
@@ -348,7 +348,7 @@ class MailPlugin(NotificationPlugin):
         email_cls = emails.get(activity.type)
         if not email_cls:
             logger.debug(
-                'No email associated with activity type `{}`'.format(
+                u'No email associated with activity type `{}`'.format(
                     activity.get_type_display(),
                 )
             )
@@ -369,17 +369,17 @@ class MailPlugin(NotificationPlugin):
 
         context = {
             'project': project,
-            'project_link': absolute_uri('/{}/{}/'.format(
+            'project_link': absolute_uri(u'/{}/{}/'.format(
                 project.organization.slug,
                 project.slug,
             )),
-            'issue_link': absolute_uri('/{}/{}/issues/{}/'.format(
+            'issue_link': absolute_uri(u'/{}/{}/issues/{}/'.format(
                 project.organization.slug,
                 project.slug,
                 payload['report']['issue']['id'],
             )),
             # TODO(dcramer): we dont have permalinks to feedback yet
-            'link': absolute_uri('/{}/{}/issues/{}/feedback/'.format(
+            'link': absolute_uri(u'/{}/{}/issues/{}/feedback/'.format(
                 project.organization.slug,
                 project.slug,
                 payload['report']['issue']['id'],
diff --git a/src/sentry/quotas/base.py b/src/sentry/quotas/base.py
index 4811cfbd30..e1123b727b 100644
--- a/src/sentry/quotas/base.py
+++ b/src/sentry/quotas/base.py
@@ -92,7 +92,7 @@ class Quota(Service):
 
         if max_quota_share != 100 and org_quota:
             quota = self.translate_quota(
-                '{}%'.format(max_quota_share),
+                u'{}%'.format(max_quota_share),
                 org_quota,
             )
         else:
diff --git a/src/sentry/quotas/redis.py b/src/sentry/quotas/redis.py
index 26405eda68..2453e659ce 100644
--- a/src/sentry/quotas/redis.py
+++ b/src/sentry/quotas/redis.py
@@ -53,7 +53,7 @@ class RedisQuota(Quota):
             raise InvalidConfiguration(six.text_type(e))
 
     def __get_redis_key(self, key, timestamp, interval, shift):
-        return '{}:{}:{}'.format(
+        return u'{}:{}:{}'.format(
             self.namespace,
             key,
             int((timestamp - shift) // interval),
@@ -73,13 +73,13 @@ class RedisQuota(Quota):
         oquota = self.get_organization_quota(project.organization)
         results = [
             BasicRedisQuota(
-                key='p:{}'.format(project.id),
+                key=u'p:{}'.format(project.id),
                 limit=pquota[0],
                 window=pquota[1],
                 reason_code='project_quota',
             ),
             BasicRedisQuota(
-                key='o:{}'.format(project.organization_id),
+                key=u'o:{}'.format(project.organization_id),
                 limit=oquota[0],
                 window=oquota[1],
                 reason_code='org_quota',
@@ -89,7 +89,7 @@ class RedisQuota(Quota):
             kquota = self.get_key_quota(key)
             results.append(
                 BasicRedisQuota(
-                    key='k:{}'.format(key.id),
+                    key=u'k:{}'.format(key.id),
                     limit=kquota[0],
                     window=kquota[1],
                     reason_code='key_quota',
@@ -134,7 +134,7 @@ class RedisQuota(Quota):
         ]
 
     def get_refunded_quota_key(self, key):
-        return 'r:{}'.format(key)
+        return u'r:{}'.format(key)
 
     def refund(self, project, key=None, timestamp=None):
         if timestamp is None:
diff --git a/src/sentry/receivers/stats.py b/src/sentry/receivers/stats.py
index 0136c10bd8..4e0fbcab42 100644
--- a/src/sentry/receivers/stats.py
+++ b/src/sentry/receivers/stats.py
@@ -28,20 +28,20 @@ post_save.connect(
 
 
 def _get_task_name(task):
-    return task.name or '{0}.{1}'.format(task.__module__, task.__name__)
+    return task.name or u'{0}.{1}'.format(task.__module__, task.__name__)
 
 
 def record_task_signal(signal, name, **options):
     def handler(sender, **kwargs):
         if not isinstance(sender, six.string_types):
             sender = _get_task_name(sender)
-        metrics.incr('jobs.{0}'.format(name), instance=sender, **options)
-        metrics.incr('jobs.all.{0}'.format(name))
+        metrics.incr(u'jobs.{0}'.format(name), instance=sender, **options)
+        metrics.incr(u'jobs.all.{0}'.format(name))
 
     signal.connect(
         handler,
         weak=False,
-        dispatch_uid='sentry.stats.tasks.{0}'.format(name),
+        dispatch_uid=u'sentry.stats.tasks.{0}'.format(name),
     )
 
 
diff --git a/src/sentry/roles/manager.py b/src/sentry/roles/manager.py
index 21b74dc927..27e149c230 100644
--- a/src/sentry/roles/manager.py
+++ b/src/sentry/roles/manager.py
@@ -23,7 +23,7 @@ class Role(object):
         return six.text_type(self.name)
 
     def __repr__(self):
-        return '<Role: {}>'.format(self.id)
+        return u'<Role: {}>'.format(self.id)
 
     def has_scope(self, scope):
         return scope in self.scopes
diff --git a/src/sentry/rules/conditions/level.py b/src/sentry/rules/conditions/level.py
index 1a6dde2af0..4bd80721a2 100644
--- a/src/sentry/rules/conditions/level.py
+++ b/src/sentry/rules/conditions/level.py
@@ -16,7 +16,7 @@ from sentry.constants import LOG_LEVELS, LOG_LEVELS_MAP
 from sentry.rules.conditions.base import EventCondition
 
 LEVEL_CHOICES = OrderedDict(
-    [("{0}".format(k), v) for k, v in sorted(LOG_LEVELS.items(), key=lambda x: x[0], reverse=True)]
+    [(u"{0}".format(k), v) for k, v in sorted(LOG_LEVELS.items(), key=lambda x: x[0], reverse=True)]
 )
 
 
diff --git a/src/sentry/runner/commands/cleanup.py b/src/sentry/runner/commands/cleanup.py
index add45a6299..bebe7fd25b 100644
--- a/src/sentry/runner/commands/cleanup.py
+++ b/src/sentry/runner/commands/cleanup.py
@@ -207,11 +207,11 @@ def cleanup(days, project, concurrency, silent, model, router, timed):
 
     for model in [models.ApiGrant, models.ApiToken]:
         if not silent:
-            click.echo('Removing expired values for {}'.format(model.__name__))
+            click.echo(u'Removing expired values for {}'.format(model.__name__))
 
         if is_filtered(model):
             if not silent:
-                click.echo('>> Skipping {}'.format(model.__name__))
+                click.echo(u'>> Skipping {}'.format(model.__name__))
         else:
             model.objects.filter(expires_at__lt=timezone.now()).delete()
 
@@ -243,7 +243,7 @@ def cleanup(days, project, concurrency, silent, model, router, timed):
 
         if not silent:
             click.echo(
-                "Removing {model} for days={days} project={project}".format(
+                u"Removing {model} for days={days} project={project}".format(
                     model=model.__name__,
                     days=days,
                     project=project or '*',
@@ -264,7 +264,7 @@ def cleanup(days, project, concurrency, silent, model, router, timed):
     for model, dtfield, order_by in DELETES:
         if not silent:
             click.echo(
-                "Removing {model} for days={days} project={project}".format(
+                u"Removing {model} for days={days} project={project}".format(
                     model=model.__name__,
                     days=days,
                     project=project or '*',
diff --git a/src/sentry/runner/commands/tsdb.py b/src/sentry/runner/commands/tsdb.py
index 17467eeb5b..02fe6cac95 100644
--- a/src/sentry/runner/commands/tsdb.py
+++ b/src/sentry/runner/commands/tsdb.py
@@ -25,7 +25,7 @@ class DateTimeParamType(click.ParamType):
             result = parse(value)
         except Exception:
             self.fail(
-                '{!r} is not a valid datetime'.format(value),
+                u'{!r} is not a valid datetime'.format(value),
                 option,
                 context,
             )
@@ -91,10 +91,10 @@ def organizations(metrics, since, until):
         since = until - timedelta(minutes=60)
 
     if until < since:
-        raise click.ClickException('invalid time range provided: {} to {}'.format(since, until))
+        raise click.ClickException(u'invalid time range provided: {} to {}'.format(since, until))
 
     stderr.write(
-        'Dumping {} from {} to {}...\n'.format(
+        u'Dumping {} from {} to {}...\n'.format(
             ', '.join(metrics.keys()),
             since,
             until,
@@ -116,7 +116,7 @@ def organizations(metrics, since, until):
                 values.append(aggregate(results[metric][key]))
 
             stdout.write(
-                '{} {} {}\n'.format(
+                u'{} {} {}\n'.format(
                     instance.id,
                     instance.slug,
                     ' '.join(map(six.binary_type, values)),
diff --git a/src/sentry/runner/initializer.py b/src/sentry/runner/initializer.py
index 1feaea5c5f..4987ece0a5 100644
--- a/src/sentry/runner/initializer.py
+++ b/src/sentry/runner/initializer.py
@@ -345,7 +345,7 @@ def setup_services(validate=True):
             except AttributeError as exc:
                 reraise_as(
                     ConfigurationError(
-                        '{} service failed to call validate()\n{}'.format(
+                        u'{} service failed to call validate()\n{}'.format(
                             service.__name__,
                             six.text_type(exc),
                         )
@@ -357,7 +357,7 @@ def setup_services(validate=True):
             if not hasattr(service, 'setup') or not callable(service.setup):
                 reraise_as(
                     ConfigurationError(
-                        '{} service failed to call setup()\n{}'.format(
+                        u'{} service failed to call setup()\n{}'.format(
                             service.__name__,
                             six.text_type(exc),
                         )
diff --git a/src/sentry/search/django/backend.py b/src/sentry/search/django/backend.py
index 69fc09fd52..30b4698396 100644
--- a/src/sentry/search/django/backend.py
+++ b/src/sentry/search/django/backend.py
@@ -78,11 +78,11 @@ class ScalarCondition(Condition):
 
     def apply(self, queryset, name, parameters):
         inclusive = parameters.get(
-            '{}_inclusive'.format(name),
+            u'{}_inclusive'.format(name),
             self.default_inclusivity,
         )
         return queryset.filter(**{
-            '{}__{}{}'.format(
+            u'{}__{}{}'.format(
                 self.field,
                 self.operator,
                 'e' if inclusive else ''
@@ -91,12 +91,12 @@ class ScalarCondition(Condition):
 
 
 def get_sql_table(model):
-    return '{}'.format(model._meta.db_table)
+    return u'{}'.format(model._meta.db_table)
 
 
 def get_sql_column(model, field):
     "Convert a model class and field name to it's (unquoted!) SQL column representation."
-    return '{}.{}'.format(*[
+    return u'{}.{}'.format(*[
         get_sql_table(model),
         model._meta.get_field_by_name(field)[0].column,
     ])
@@ -118,12 +118,12 @@ def get_priority_sort_expression(model):
     engine = get_db_engine(router.db_for_read(model))
     table = get_sql_table(model)
     if 'postgres' in engine:
-        return 'log({table}.times_seen) * 600 + {table}.last_seen::abstime::int'.format(table=table)
+        return u'log({table}.times_seen) * 600 + {table}.last_seen::abstime::int'.format(table=table)
     else:
         # TODO: This should be improved on other databases where possible.
         # (This doesn't work on some databases: SQLite for example doesn't
         # have a built-in logarithm function.)
-        return '{}.times_seen'.format(table)
+        return u'{}.times_seen'.format(table)
 
 
 environment_sort_strategies = {
@@ -136,15 +136,15 @@ environment_sort_strategies = {
         int,
     ),
     'date': (
-        lambda model: '{}.last_seen'.format(get_sql_table(model)),
+        lambda model: u'{}.last_seen'.format(get_sql_table(model)),
         lambda score: int(to_timestamp(score) * 1000),
     ),
     'new': (
-        lambda model: '{}.first_seen'.format(get_sql_table(model)),
+        lambda model: u'{}.first_seen'.format(get_sql_table(model)),
         lambda score: int(to_timestamp(score) * 1000),
     ),
     'freq': (
-        lambda model: '{}.times_seen'.format(get_sql_table(model)),
+        lambda model: u'{}.times_seen'.format(get_sql_table(model)),
         int,
     ),
 }
diff --git a/src/sentry/search/snuba/backend.py b/src/sentry/search/snuba/backend.py
index 19a8e568c9..b928e787cc 100644
--- a/src/sentry/search/snuba/backend.py
+++ b/src/sentry/search/snuba/backend.py
@@ -143,7 +143,7 @@ class ScalarCondition(Condition):
 
     def apply(self, name, parameters):
         inclusive = parameters.get(
-            '{}_inclusive'.format(name),
+            u'{}_inclusive'.format(name),
             self.default_inclusivity,
         )
 
@@ -205,11 +205,11 @@ class SnubaSearchBackend(ds.DjangoSearchBackend):
             }).build(
                 group_queryset.extra(
                     where=[
-                        '{} = {}'.format(
+                        u'{} = {}'.format(
                             ds.get_sql_column(Group, 'id'),
                             ds.get_sql_column(GroupEnvironment, 'group_id'),
                         ),
-                        '{} = %s'.format(
+                        u'{} = %s'.format(
                             ds.get_sql_column(GroupEnvironment, 'environment_id'),
                         ),
                     ],
@@ -344,7 +344,7 @@ def snuba_search(project_id, environment_id, tags, start, end,
 
     conditions = []
     for tag, val in six.iteritems(tags):
-        col = 'tags[{}]'.format(tag)
+        col = u'tags[{}]'.format(tag)
         if val == ANY:
             conditions.append((col, '!=', ''))
         else:
diff --git a/src/sentry/search/utils.py b/src/sentry/search/utils.py
index 8449437407..cbf3adf09b 100644
--- a/src/sentry/search/utils.py
+++ b/src/sentry/search/utils.py
@@ -173,13 +173,13 @@ def get_date_params(value, from_field, to_field):
         date_from_value, date_from_inclusive = date_from
         result.update({
             from_field: date_from_value,
-            '{}_inclusive'.format(from_field): date_from_inclusive,
+            u'{}_inclusive'.format(from_field): date_from_inclusive,
         })
     if date_to is not None:
         date_to_value, date_to_inclusive = date_to
         result.update({
             to_field: date_to_value,
-            '{}_inclusive'.format(to_field): date_to_inclusive,
+            u'{}_inclusive'.format(to_field): date_to_inclusive,
         })
     return result
 
@@ -212,23 +212,23 @@ def parse_user_value(value, user):
 numeric_modifiers = [
     (
         '>=', lambda field, value: {
-            '{}_lower'.format(field): value,
-            '{}_lower_inclusive'.format(field): True, }
+            u'{}_lower'.format(field): value,
+            u'{}_lower_inclusive'.format(field): True, }
     ),
     (
         '<=', lambda field, value: {
-            '{}_upper'.format(field): value,
-            '{}_upper_inclusive'.format(field): True, }
+            u'{}_upper'.format(field): value,
+            u'{}_upper_inclusive'.format(field): True, }
     ),
     (
         '>', lambda field, value: {
-            '{}_lower'.format(field): value,
-            '{}_lower_inclusive'.format(field): False, }
+            u'{}_lower'.format(field): value,
+            u'{}_lower_inclusive'.format(field): False, }
     ),
     (
         '<', lambda field, value: {
-            '{}_upper'.format(field): value,
-            '{}_upper_inclusive'.format(field): False, }
+            u'{}_upper'.format(field): value,
+            u'{}_upper_inclusive'.format(field): False, }
     ),
 ]
 
diff --git a/src/sentry/security/__init__.py b/src/sentry/security/__init__.py
index f28e7f5ede..6eaaaa7bba 100644
--- a/src/sentry/security/__init__.py
+++ b/src/sentry/security/__init__.py
@@ -24,7 +24,7 @@ def capture_security_activity(
     if type == 'mfa-removed' or type == 'mfa-added':
         logger_context['authenticator_id'] = context['authenticator'].id
 
-    logger.info('user.{}'.format(type), extra=logger_context)
+    logger.info(u'user.{}'.format(type), extra=logger_context)
 
     if send_email:
         msg = generate_security_email(
diff --git a/src/sentry/security/emails.py b/src/sentry/security/emails.py
index 9571126f36..5ee225d841 100644
--- a/src/sentry/security/emails.py
+++ b/src/sentry/security/emails.py
@@ -25,7 +25,7 @@ def generate_security_email(account, type, actor, ip_address, context=None, curr
         template = 'sentry/emails/recovery-codes-regenerated.txt'
         html_template = 'sentry/emails/recovery-codes-regenerated.html'
     else:
-        raise ValueError('unknown type: {}'.format(type))
+        raise ValueError(u'unknown type: {}'.format(type))
 
     new_context = {
         'account': account,
diff --git a/src/sentry/similarity/__init__.py b/src/sentry/similarity/__init__.py
index 3c8a453bbd..ea68a8507c 100644
--- a/src/sentry/similarity/__init__.py
+++ b/src/sentry/similarity/__init__.py
@@ -74,7 +74,7 @@ def _make_index_backend(cluster=None):
             cluster = redis.redis_clusters.get(cluster_id)
         except KeyError:
             index = DummyIndexBackend()
-            logger.info('No redis cluster provided for similarity, using {!r}.'.format(index))
+            logger.info(u'No redis cluster provided for similarity, using {!r}.'.format(index))
             return index
 
     return MetricsWrapper(
diff --git a/src/sentry/similarity/encoder.py b/src/sentry/similarity/encoder.py
index 8c6b1e7888..fc8e1a3214 100644
--- a/src/sentry/similarity/encoder.py
+++ b/src/sentry/similarity/encoder.py
@@ -47,4 +47,4 @@ class Encoder(object):
                 )) for item in value.items()),
             )
         else:
-            raise TypeError('Unsupported type: {}'.format(type(value)))
+            raise TypeError(u'Unsupported type: {}'.format(type(value)))
diff --git a/src/sentry/similarity/features.py b/src/sentry/similarity/features.py
index 0e842b24b8..22a65fa6ee 100644
--- a/src/sentry/similarity/features.py
+++ b/src/sentry/similarity/features.py
@@ -69,10 +69,10 @@ class FeatureSet(object):
         assert set(self.aliases) == set(self.features)
 
     def __get_scope(self, project):
-        return '{}'.format(project.id)
+        return u'{}'.format(project.id)
 
     def __get_key(self, group):
-        return '{}'.format(group.id)
+        return u'{}'.format(group.id)
 
     def extract(self, event):
         results = {}
diff --git a/src/sentry/status_checks/celery_app_version.py b/src/sentry/status_checks/celery_app_version.py
index a2a95489c5..a9ed66cc7a 100644
--- a/src/sentry/status_checks/celery_app_version.py
+++ b/src/sentry/status_checks/celery_app_version.py
@@ -20,7 +20,7 @@ class CeleryAppVersionCheck(StatusCheck):
             return []
         return [
             Problem(
-                "Celery workers are referencing a different version of Sentry ({version1} vs {version2})".
+                u"Celery workers are referencing a different version of Sentry ({version1} vs {version2})".
                 format(
                     version1=sentry.VERSION,
                     version2=version,
diff --git a/src/sentry/status_checks/warnings.py b/src/sentry/status_checks/warnings.py
index 7a2702d7e0..a8e2154dcd 100644
--- a/src/sentry/status_checks/warnings.py
+++ b/src/sentry/status_checks/warnings.py
@@ -15,7 +15,7 @@ class WarningStatusCheck(StatusCheck):
         if self.__warning_set:
             return [
                 Problem(
-                    'There {} {} {} with your system configuration.'.format(
+                    u'There {} {} {} with your system configuration.'.format(
                         'are' if len(self.__warning_set) > 1 else 'is',
                         len(self.__warning_set),
                         'issues' if len(self.__warning_set) > 1 else 'issue',
diff --git a/src/sentry/tagstore/base.py b/src/sentry/tagstore/base.py
index fe7d0aa7c2..9f28f59400 100644
--- a/src/sentry/tagstore/base.py
+++ b/src/sentry/tagstore/base.py
@@ -115,7 +115,7 @@ class TagStorage(Service):
     def prefix_reserved_key(self, key):
         # XXX(dcramer): kill sentry prefix for internal reserved tags
         if self.is_reserved_key(key):
-            return 'sentry:{0}'.format(key)
+            return u'sentry:{0}'.format(key)
         else:
             return key
 
diff --git a/src/sentry/tagstore/snuba/backend.py b/src/sentry/tagstore/snuba/backend.py
index 816334a8cd..04465734b9 100644
--- a/src/sentry/tagstore/snuba/backend.py
+++ b/src/sentry/tagstore/snuba/backend.py
@@ -57,7 +57,7 @@ class SnubaTagStorage(TagStorage):
 
     def __get_tag_key(self, project_id, group_id, environment_id, key):
         start, end = self.get_time_range()
-        tag = 'tags[{}]'.format(key)
+        tag = u'tags[{}]'.format(key)
         filters = {
             'project_id': [project_id],
             'environment': [environment_id],
@@ -88,7 +88,7 @@ class SnubaTagStorage(TagStorage):
     def __get_tag_key_and_top_values(self, project_id, group_id, environment_id,
                                      key, limit=3, raise_on_empty=True):
         start, end = self.get_time_range()
-        tag = 'tags[{}]'.format(key)
+        tag = u'tags[{}]'.format(key)
         filters = {
             'project_id': [project_id],
             'environment': [environment_id],
@@ -169,7 +169,7 @@ class SnubaTagStorage(TagStorage):
 
     def __get_tag_value(self, project_id, group_id, environment_id, key, value):
         start, end = self.get_time_range()
-        tag = 'tags[{}]'.format(key)
+        tag = u'tags[{}]'.format(key)
         filters = {
             'project_id': [project_id],
             'environment': [environment_id],
@@ -229,7 +229,7 @@ class SnubaTagStorage(TagStorage):
 
     def get_group_list_tag_value(self, project_id, group_id_list, environment_id, key, value):
         start, end = self.get_time_range()
-        tag = 'tags[{}]'.format(key)
+        tag = u'tags[{}]'.format(key)
         filters = {
             'project_id': [project_id],
             'environment': [environment_id],
@@ -258,7 +258,7 @@ class SnubaTagStorage(TagStorage):
 
     def get_group_tag_value_count(self, project_id, group_id, environment_id, key):
         start, end = self.get_time_range()
-        tag = 'tags[{}]'.format(key)
+        tag = u'tags[{}]'.format(key)
         filters = {
             'project_id': [project_id],
             'environment': [environment_id],
@@ -309,7 +309,7 @@ class SnubaTagStorage(TagStorage):
         # this method is already dealing with version strings rather than
         # release ids which would need to be translated by the snuba util.
         tag = 'sentry:release'
-        col = 'tags[{}]'.format(tag)
+        col = u'tags[{}]'.format(tag)
         conditions = [[col, 'IN', versions]]
         aggregations = [
             ['count()', '', 'times_seen'],
@@ -402,7 +402,7 @@ class SnubaTagStorage(TagStorage):
 
         conditions = []
         if query:
-            conditions.append(['tags_value', 'LIKE', '%{}%'.format(query)])
+            conditions.append(['tags_value', 'LIKE', u'%{}%'.format(query)])
 
         start, end = self.get_time_range()
         results = snuba.query(
@@ -520,7 +520,7 @@ class SnubaTagStorage(TagStorage):
             'issue': [group_id],
         }
 
-        conditions = [[['tags[{}]'.format(k), '=', v] for (k, v) in tags.items()]]
+        conditions = [[[u'tags[{}]'.format(k), '=', v] for (k, v) in tags.items()]]
 
         result = snuba.raw_query(start, end, selected_columns=['event_id'],
                                  conditions=conditions, orderby='-timestamp', filter_keys=filters,
diff --git a/src/sentry/tasks/auth.py b/src/sentry/tasks/auth.py
index a61f2120b4..ceed5d4039 100644
--- a/src/sentry/tasks/auth.py
+++ b/src/sentry/tasks/auth.py
@@ -118,7 +118,7 @@ def _remove_2fa_non_compliant_member(member, org, actor=None, actor_key=None, ip
             'url': member.get_invite_link(),
             'organization': org
         }
-        subject = '{} {} Mandatory: Enable Two-Factor Authentication'.format(
+        subject = u'{} {} Mandatory: Enable Two-Factor Authentication'.format(
             options.get('mail.subject-prefix'),
             org.name.capitalize(),
         )
diff --git a/src/sentry/tasks/base.py b/src/sentry/tasks/base.py
index 6acca123b5..dc49b60e5f 100644
--- a/src/sentry/tasks/base.py
+++ b/src/sentry/tasks/base.py
@@ -41,7 +41,7 @@ def instrumented_task(name, stat_suffix=None, **kwargs):
 
             key = 'jobs.duration'
             if stat_suffix:
-                instance = '{}.{}'.format(name, stat_suffix(*args, **kwargs))
+                instance = u'{}.{}'.format(name, stat_suffix(*args, **kwargs))
             else:
                 instance = name
             Raven.tags_context({
diff --git a/src/sentry/tasks/files.py b/src/sentry/tasks/files.py
index 9ee550897a..27e3c9d5e4 100644
--- a/src/sentry/tasks/files.py
+++ b/src/sentry/tasks/files.py
@@ -15,7 +15,7 @@ def delete_file(path, checksum, **kwargs):
     from sentry.app import locks
     from sentry.utils.retries import TimedRetryPolicy
 
-    lock = locks.get('fileblob:upload:{}'.format(checksum), duration=60 * 10)
+    lock = locks.get(u'fileblob:upload:{}'.format(checksum), duration=60 * 10)
     with TimedRetryPolicy(60)(lock.acquire):
         if not FileBlob.objects.filter(checksum=checksum).exists():
             get_storage().delete(path)
diff --git a/src/sentry/tasks/post_process.py b/src/sentry/tasks/post_process.py
index dd257c2d58..dea03affde 100644
--- a/src/sentry/tasks/post_process.py
+++ b/src/sentry/tasks/post_process.py
@@ -26,7 +26,7 @@ logger = logging.getLogger('sentry')
 
 def _get_service_hooks(project_id):
     from sentry.models import ServiceHook
-    cache_key = 'servicehooks:1:{}'.format(project_id)
+    cache_key = u'servicehooks:1:{}'.format(project_id)
     result = cache.get(cache_key)
     if result is None:
         result = [(h.id, h.events) for h in
@@ -47,7 +47,7 @@ def _capture_stats(event, is_new):
         metrics.incr('events.unique')
 
     metrics.incr('events.processed')
-    metrics.incr('events.processed.{platform}'.format(platform=platform))
+    metrics.incr(u'events.processed.{platform}'.format(platform=platform))
     metrics.timing('events.size.data', event.size)
 
 
@@ -58,8 +58,8 @@ def post_process_group(event, is_new, is_regression, is_sample, is_new_group_env
     """
     with redis.clusters.get('default').map() as client:
         result = client.set(
-            'pp:{}/{}'.format(event.project_id, event.event_id),
-            '{:.0f}'.format(time.time()),
+            u'pp:{}/{}'.format(event.project_id, event.event_id),
+            u'{:.0f}'.format(time.time()),
             ex=60 * 60,
             nx=True,
         )
diff --git a/src/sentry/tasks/reports.py b/src/sentry/tasks/reports.py
index 52fb3e5015..9f39f431bb 100644
--- a/src/sentry/tasks/reports.py
+++ b/src/sentry/tasks/reports.py
@@ -457,7 +457,7 @@ class RedisReportBackend(ReportBackend):
         self.namespace = namespace
 
     def __make_key(self, timestamp, duration, organization):
-        return '{}:{}:{}:{}:{}'.format(
+        return u'{}:{}:{}:{}:{}'.format(
             self.namespace,
             self.version,
             organization.id,
diff --git a/src/sentry/tasks/servicehooks.py b/src/sentry/tasks/servicehooks.py
index ea85846952..dfe2d341ed 100644
--- a/src/sentry/tasks/servicehooks.py
+++ b/src/sentry/tasks/servicehooks.py
@@ -15,19 +15,19 @@ def get_payload_v0(event):
     group = event.group
     project = group.project
 
-    project_url_base = absolute_uri('/{}/{}'.format(
+    project_url_base = absolute_uri(u'/{}/{}'.format(
         project.organization.slug,
         project.slug,
     ))
 
     group_context = serialize(group)
-    group_context['url'] = '{}/issues/{}/'.format(
+    group_context['url'] = u'{}/issues/{}/'.format(
         project_url_base,
         group.id,
     )
 
     event_context = serialize(event)
-    event_context['url'] = '{}/issues/{}/events/{}/'.format(
+    event_context['url'] = u'{}/issues/{}/events/{}/'.format(
         project_url_base,
         group.id,
         event.id,
diff --git a/src/sentry/templatetags/sentry_assets.py b/src/sentry/templatetags/sentry_assets.py
index fddbccb772..2ac0ae9da3 100644
--- a/src/sentry/templatetags/sentry_assets.py
+++ b/src/sentry/templatetags/sentry_assets.py
@@ -56,4 +56,4 @@ def locale_js_include(context):
         return ''
 
     href = get_asset_url("sentry", "dist/locale/" + lang_code + ".js")
-    return "<script src=\"{0}\"{1}></script>".format(href, crossorigin())
+    return u"<script src=\"{0}\"{1}></script>".format(href, crossorigin())
diff --git a/src/sentry/templatetags/sentry_helpers.py b/src/sentry/templatetags/sentry_helpers.py
index 967ebcc240..2f95de235a 100644
--- a/src/sentry/templatetags/sentry_helpers.py
+++ b/src/sentry/templatetags/sentry_helpers.py
@@ -177,7 +177,7 @@ def small_count(v, precision=1):
         if o:
             if len(six.text_type(o)) > 2 or not p:
                 return '%d%s' % (o, y)
-            return ('%.{}f%s'.format(precision)) % (v / float(x), y)
+            return (u'%.{}f%s'.format(precision)) % (v / float(x), y)
     return v
 
 
diff --git a/src/sentry/tsdb/redis.py b/src/sentry/tsdb/redis.py
index b67cfe043f..dbb97f32c9 100644
--- a/src/sentry/tsdb/redis.py
+++ b/src/sentry/tsdb/redis.py
@@ -156,7 +156,7 @@ class RedisTSDB(BaseTSDB):
 
     def add_environment_parameter(self, key, environment_id):
         if environment_id is not None:
-            return '{}?e={}'.format(key, environment_id)
+            return u'{}?e={}'.format(key, environment_id)
         else:
             return key
 
@@ -166,7 +166,7 @@ class RedisTSDB(BaseTSDB):
         values.
         """
         return self.add_environment_parameter(
-            '{prefix}{model}:{epoch}:{key}'.format(
+            u'{prefix}{model}:{epoch}:{key}'.format(
                 prefix=self.prefix,
                 model=model.value,
                 epoch=self.normalize_ts_to_rollup(timestamp, rollup),
@@ -190,7 +190,7 @@ class RedisTSDB(BaseTSDB):
                 model_key = model_key.encode('utf-8')
             vnode = crc32(model_key) % self.vnodes
 
-        return '{prefix}{model}:{epoch}:{vnode}'.format(
+        return u'{prefix}{model}:{epoch}:{vnode}'.format(
             prefix=self.prefix,
             model=model.value,
             epoch=self.normalize_to_rollup(timestamp, rollup),
@@ -484,7 +484,7 @@ class RedisTSDB(BaseTSDB):
         temporary_id = uuid.uuid1().hex
 
         def make_temporary_key(key):
-            return '{}{}:{}'.format(self.prefix, temporary_id, key)
+            return u'{}{}:{}'.format(self.prefix, temporary_id, key)
 
         def expand_key(key):
             """
@@ -509,7 +509,7 @@ class RedisTSDB(BaseTSDB):
             results from merging all HyperLogLogs at the provided keys.
             """
             (host, keys) = value
-            destination = make_temporary_key('p:{}'.format(host))
+            destination = make_temporary_key(u'p:{}'.format(host))
             client = cluster.get_local_client(host)
             with client.pipeline(transaction=False) as pipeline:
                 pipeline.execute_command(
@@ -524,7 +524,7 @@ class RedisTSDB(BaseTSDB):
             Calculate the cardinality of the provided HyperLogLog values.
             """
             destination = make_temporary_key('a')  # all values will be merged into this key
-            aggregates = {make_temporary_key('a:{}'.format(host)): value for host, value in values}
+            aggregates = {make_temporary_key(u'a:{}'.format(host)): value for host, value in values}
 
             # Choose a random host to execute the reduction on. (We use a host
             # here that we've already accessed as part of this process -- this
@@ -571,7 +571,7 @@ class RedisTSDB(BaseTSDB):
             temporary_id = uuid.uuid1().hex
 
             def make_temporary_key(key):
-                return '{}{}:{}'.format(self.prefix, temporary_id, key)
+                return u'{}{}:{}'.format(self.prefix, temporary_id, key)
 
             data = {}
             for rollup, series in rollups.items():
diff --git a/src/sentry/tsdb/snuba.py b/src/sentry/tsdb/snuba.py
index 4132639d2e..cc3938f76f 100644
--- a/src/sentry/tsdb/snuba.py
+++ b/src/sentry/tsdb/snuba.py
@@ -48,7 +48,7 @@ class SnubaTSDB(BaseTSDB):
         model_columns = self.model_columns.get(model)
 
         if model_columns is None:
-            raise Exception("Unsupported TSDBModel: {}".format(model.name))
+            raise Exception(u"Unsupported TSDBModel: {}".format(model.name))
 
         model_group, model_aggregate = model_columns
 
@@ -157,7 +157,7 @@ class SnubaTSDB(BaseTSDB):
 
     def get_most_frequent(self, model, keys, start, end=None,
                           rollup=None, limit=10, environment_id=None):
-        aggregation = 'topK({})'.format(limit)
+        aggregation = u'topK({})'.format(limit)
         result = self.get_data(model, keys, start, end, rollup, environment_id,
                                aggregation=aggregation)
         # convert
@@ -172,7 +172,7 @@ class SnubaTSDB(BaseTSDB):
 
     def get_most_frequent_series(self, model, keys, start, end=None,
                                  rollup=None, limit=10, environment_id=None):
-        aggregation = 'topK({})'.format(limit)
+        aggregation = u'topK({})'.format(limit)
         result = self.get_data(model, keys, start, end, rollup, environment_id,
                                aggregation=aggregation, group_on_time=True)
         # convert
diff --git a/src/sentry/utils/assets.py b/src/sentry/utils/assets.py
index 038c01b9bb..7c819c3d07 100644
--- a/src/sentry/utils/assets.py
+++ b/src/sentry/utils/assets.py
@@ -11,7 +11,7 @@ def get_asset_url(module, path):
       {% asset_url 'sentry' 'dist/sentry.css' %}
       =>  "/_static/74d127b78dc7daf2c51f/sentry/dist/sentry.css"
     """
-    return '{}/{}/{}'.format(
+    return u'{}/{}/{}'.format(
         settings.STATIC_URL.rstrip('/'),
         module,
         path.lstrip('/'),
diff --git a/src/sentry/utils/data_filters.py b/src/sentry/utils/data_filters.py
index 2f8cc120f2..3d60ebe8d1 100644
--- a/src/sentry/utils/data_filters.py
+++ b/src/sentry/utils/data_filters.py
@@ -82,7 +82,7 @@ def is_valid_release(project, release):
     Verify that a release is not being filtered
     for the given project.
     """
-    invalid_versions = project.get_option('sentry:{}'.format(FilterTypes.RELEASES))
+    invalid_versions = project.get_option(u'sentry:{}'.format(FilterTypes.RELEASES))
     if not invalid_versions:
         return True
 
@@ -100,7 +100,7 @@ def is_valid_error_message(project, message):
     Verify that an error message is not being filtered
     for the given project.
     """
-    filtered_errors = project.get_option('sentry:{}'.format(FilterTypes.ERROR_MESSAGES))
+    filtered_errors = project.get_option(u'sentry:{}'.format(FilterTypes.ERROR_MESSAGES))
     if not filtered_errors:
         return True
 
diff --git a/src/sentry/utils/distutils/commands/base.py b/src/sentry/utils/distutils/commands/base.py
index 0d91b58a1c..5976837ee4 100644
--- a/src/sentry/utils/distutils/commands/base.py
+++ b/src/sentry/utils/distutils/commands/base.py
@@ -130,18 +130,18 @@ class BaseBuildCommand(Command):
                     node_version.append(None)
                 else:
                     log.fatal(
-                        'Cannot find `{0}` executable. Please install {0}`'
+                        u'Cannot find `{0}` executable. Please install {0}`'
                         ' and try again.'.format(app)
                     )
                     sys.exit(1)
 
         if node_version[2] is not None:
-            log.info('using node ({0}) and yarn ({2})'.format(*node_version))
+            log.info(u'using node ({0}) and yarn ({2})'.format(*node_version))
             self._run_command(
                 ['yarn', 'install', '--production', '--pure-lockfile']
             )
         else:
-            log.info('using node ({0}) and npm ({1})'.format(*node_version))
+            log.info(u'using node ({0}) and npm ({1})'.format(*node_version))
             self._run_command(['npm', 'install', '--production', '--quiet'])
 
     def _run_command(self, cmd, env=None):
diff --git a/src/sentry/utils/distutils/commands/build_assets.py b/src/sentry/utils/distutils/commands/build_assets.py
index c631cc326c..ffa446f8a8 100644
--- a/src/sentry/utils/distutils/commands/build_assets.py
+++ b/src/sentry/utils/distutils/commands/build_assets.py
@@ -31,7 +31,7 @@ class BuildAssetsCommand(BaseBuildCommand):
     description = 'build static media assets'
 
     def initialize_options(self):
-        self.asset_json_path = '{}/assets.json'.format(
+        self.asset_json_path = u'{}/assets.json'.format(
             self.distribution.get_name(),
         )
         BaseBuildCommand.initialize_options(self)
@@ -57,7 +57,7 @@ class BuildAssetsCommand(BaseBuildCommand):
             version = None
             build = None
         else:
-            log.info('pulled version information from \'sentry\' module'.format(sentry.__file__))
+            log.info(u'pulled version information from \'sentry\' module'.format(sentry.__file__))
             version = self.distribution.get_version()
             build = sentry.__build__
         finally:
@@ -71,7 +71,7 @@ class BuildAssetsCommand(BaseBuildCommand):
             except Exception:
                 pass
             else:
-                log.info('pulled version information from \'{}\''.format(
+                log.info(u'pulled version information from \'{}\''.format(
                     json_path,
                 ))
                 version, build = data['version'], data['build']
@@ -103,7 +103,7 @@ class BuildAssetsCommand(BaseBuildCommand):
     def _build(self):
         version_info = self._get_package_version()
         log.info(
-            'building assets for {} v{} (build {})'.format(
+            u'building assets for {} v{} (build {})'.format(
                 self.distribution.get_name(),
                 version_info['version'] or 'UNKNOWN',
                 version_info['build'] or 'UNKNOWN',
@@ -125,7 +125,7 @@ class BuildAssetsCommand(BaseBuildCommand):
 
         log.info('writing version manifest')
         manifest = self._write_version_file(version_info)
-        log.info('recorded manifest\n{}'.format(
+        log.info(u'recorded manifest\n{}'.format(
             json.dumps(manifest, indent=2),
         ))
 
diff --git a/src/sentry/utils/email.py b/src/sentry/utils/email.py
index 741acfe403..6f20f2f354 100644
--- a/src/sentry/utils/email.py
+++ b/src/sentry/utils/email.py
@@ -242,13 +242,13 @@ class ListResolver(object):
             handler = self.__type_handlers[type(instance)]
         except KeyError:
             raise self.UnregisteredTypeError(
-                'Cannot generate mailing list identifier for {!r}'.format(instance)
+                u'Cannot generate mailing list identifier for {!r}'.format(instance)
             )
 
         label = '.'.join(map(six.binary_type, handler(instance)))
         assert is_valid_dot_atom(label)
 
-        return '{}.{}'.format(label, self.__namespace)
+        return u'{}.{}'.format(label, self.__namespace)
 
 
 default_list_type_handlers = {
@@ -395,7 +395,7 @@ class MessageBuilder(object):
         if not to:
             return ''
         if len(to) > MAX_RECIPIENTS:
-            to = to[:MAX_RECIPIENTS] + ['and {} more.'.format(len(to[MAX_RECIPIENTS:]))]
+            to = to[:MAX_RECIPIENTS] + [u'and {} more.'.format(len(to[MAX_RECIPIENTS:]))]
         return ', '.join(to)
 
     def send(self, to=None, cc=None, bcc=None, fail_silently=False):
diff --git a/src/sentry/utils/encryption.py b/src/sentry/utils/encryption.py
index 8bc3ee419a..98a01243b4 100644
--- a/src/sentry/utils/encryption.py
+++ b/src/sentry/utils/encryption.py
@@ -17,11 +17,11 @@ class EncryptionManager(object):
         for key, value in schemes:
             if not isinstance(key, six.string_types):
                 raise ValueError(
-                    'Encryption scheme type must be a string. Value was: {!r}'.format(value)
+                    u'Encryption scheme type must be a string. Value was: {!r}'.format(value)
                 )
             if not hasattr(value, 'encrypt') or not hasattr(value, 'decrypt'):
                 raise ValueError(
-                    'Encryption scheme value must have \'encrypt\' and \'decrypt\' callables. Value was: {!r}'.
+                    u'Encryption scheme value must have \'encrypt\' and \'decrypt\' callables. Value was: {!r}'.
                     format(value)
                 )
         self.schemes = OrderedDict(schemes)
@@ -58,7 +58,7 @@ class EncryptionManager(object):
         try:
             scheme = self.schemes[enc_method]
         except KeyError:
-            raise ValueError('Unknown encryption scheme: {!r}'.format(enc_method))
+            raise ValueError(u'Unknown encryption scheme: {!r}'.format(enc_method))
         return scheme.decrypt(enc_data)
 
 
diff --git a/src/sentry/utils/integrationdocs.py b/src/sentry/utils/integrationdocs.py
index 4afe848fbe..5749c894ce 100644
--- a/src/sentry/utils/integrationdocs.py
+++ b/src/sentry/utils/integrationdocs.py
@@ -77,7 +77,7 @@ def load_doc(path):
 def get_integration_id(platform_id, integration_id):
     if integration_id == '_self':
         return platform_id
-    return '{}-{}'.format(platform_id, integration_id)
+    return u'{}-{}'.format(platform_id, integration_id)
 
 
 def sync_docs(quiet=False):
diff --git a/src/sentry/utils/locking/backends/redis.py b/src/sentry/utils/locking/backends/redis.py
index 1ceeb25d85..38f0905387 100644
--- a/src/sentry/utils/locking/backends/redis.py
+++ b/src/sentry/utils/locking/backends/redis.py
@@ -48,7 +48,7 @@ class RedisLockBackend(LockBackend):
         client = self.get_client(key, routing_key)
         full_key = self.prefix_key(key)
         if client.set(full_key, self.uuid, ex=duration, nx=True) is not True:
-            raise Exception('Could not set key: {!r}'.format(full_key))
+            raise Exception(u'Could not set key: {!r}'.format(full_key))
 
     def release(self, key, routing_key=None):
         client = self.get_client(key, routing_key)
diff --git a/src/sentry/utils/locking/lock.py b/src/sentry/utils/locking/lock.py
index f6bf3d64e5..1faafbd25b 100644
--- a/src/sentry/utils/locking/lock.py
+++ b/src/sentry/utils/locking/lock.py
@@ -18,7 +18,7 @@ class Lock(object):
         self.routing_key = routing_key
 
     def __repr__(self):
-        return '<Lock: {!r}>'.format(self.key)
+        return u'<Lock: {!r}>'.format(self.key)
 
     def acquire(self):
         """
@@ -33,7 +33,7 @@ class Lock(object):
             self.backend.acquire(self.key, self.duration, self.routing_key)
         except Exception as error:
             six.raise_from(
-                UnableToAcquireLock('Unable to acquire {!r} due to error: {}'.format(self, error)),
+                UnableToAcquireLock(u'Unable to acquire {!r} due to error: {}'.format(self, error)),
                 error
             )
 
diff --git a/src/sentry/utils/metrics.py b/src/sentry/utils/metrics.py
index f7eb3ed83c..d5a53f7a73 100644
--- a/src/sentry/utils/metrics.py
+++ b/src/sentry/utils/metrics.py
@@ -26,7 +26,7 @@ backend = get_default_backend()
 def _get_key(key):
     prefix = settings.SENTRY_METRICS_PREFIX
     if prefix:
-        return '{}{}'.format(prefix, key)
+        return u'{}{}'.format(prefix, key)
     return key
 
 
@@ -57,7 +57,7 @@ class InternalMetrics(object):
                 key, instance, tags, amount = q.get()
                 amount = _sampled_value(amount)
                 if instance:
-                    full_key = '{}.{}'.format(key, instance)
+                    full_key = u'{}.{}'.format(key, instance)
                 else:
                     full_key = key
                 try:
diff --git a/src/sentry/utils/pytest/selenium.py b/src/sentry/utils/pytest/selenium.py
index 4c4fe66f90..b2d54812f0 100644
--- a/src/sentry/utils/pytest/selenium.py
+++ b/src/sentry/utils/pytest/selenium.py
@@ -41,7 +41,7 @@ class Browser(object):
         """
         Return the absolute URI for a given route in Sentry.
         """
-        return '{}/{}'.format(self.live_server_url, path.lstrip('/').format(*args, **kwargs))
+        return u'{}/{}'.format(self.live_server_url, path.lstrip('/').format(*args, **kwargs))
 
     def get(self, path, *args, **kwargs):
         self.driver.get(self.route(path), *args, **kwargs)
@@ -204,12 +204,12 @@ class Browser(object):
         # http://stackoverflow.com/questions/37103621/adding-cookies-working-with-firefox-webdriver-but-not-in-phantomjs
 
         # TODO(dcramer): this should be escaped, but idgaf
-        logger.info('selenium.set-cookie.{}'.format(name), extra={
+        logger.info(u'selenium.set-cookie.{}'.format(name), extra={
             'value': value,
         })
         if isinstance(self.driver, webdriver.PhantomJS):
             self.driver.execute_script(
-                "document.cookie = '{name}={value}; path={path}; domain={domain}; expires={expires}'; max-age={max_age}\n".format(
+                u"document.cookie = '{name}={value}; path={path}; domain={domain}; expires={expires}'; max-age={max_age}\n".format(
                     **cookie)
             )
         else:
@@ -269,7 +269,7 @@ def browser(request, percy, live_server):
         options = webdriver.ChromeOptions()
         options.add_argument('headless')
         options.add_argument('disable-gpu')
-        options.add_argument('window-size={}'.format(window_size))
+        options.add_argument(u'window-size={}'.format(window_size))
         chrome_path = request.config.getoption('chrome_path')
         if chrome_path:
             options.binary_location = chrome_path
@@ -350,20 +350,20 @@ def _gather_url(item, report, driver, summary, extra):
     try:
         url = driver.current_url
     except Exception as e:
-        summary.append('WARNING: Failed to gather URL: {0}'.format(e))
+        summary.append(u'WARNING: Failed to gather URL: {0}'.format(e))
         return
     pytest_html = item.config.pluginmanager.getplugin('html')
     if pytest_html is not None:
         # add url to the html report
         extra.append(pytest_html.extras.url(url))
-    summary.append('URL: {0}'.format(url))
+    summary.append(u'URL: {0}'.format(url))
 
 
 def _gather_screenshot(item, report, driver, summary, extra):
     try:
         screenshot = driver.get_screenshot_as_base64()
     except Exception as e:
-        summary.append('WARNING: Failed to gather screenshot: {0}'.format(e))
+        summary.append(u'WARNING: Failed to gather screenshot: {0}'.format(e))
         return
     pytest_html = item.config.pluginmanager.getplugin('html')
     if pytest_html is not None:
@@ -375,7 +375,7 @@ def _gather_html(item, report, driver, summary, extra):
     try:
         html = driver.page_source.encode('utf-8')
     except Exception as e:
-        summary.append('WARNING: Failed to gather HTML: {0}'.format(e))
+        summary.append(u'WARNING: Failed to gather HTML: {0}'.format(e))
         return
     pytest_html = item.config.pluginmanager.getplugin('html')
     if pytest_html is not None:
@@ -388,13 +388,13 @@ def _gather_logs(item, report, driver, summary, extra):
         types = driver.log_types
     except Exception as e:
         # note that some drivers may not implement log types
-        summary.append('WARNING: Failed to gather log types: {0}'.format(e))
+        summary.append(u'WARNING: Failed to gather log types: {0}'.format(e))
         return
     for name in types:
         try:
             log = driver.get_log(name)
         except Exception as e:
-            summary.append('WARNING: Failed to gather {0} log: {1}'.format(name, e))
+            summary.append(u'WARNING: Failed to gather {0} log: {1}'.format(name, e))
             return
         pytest_html = item.config.pluginmanager.getplugin('html')
         if pytest_html is not None:
diff --git a/src/sentry/utils/redis.py b/src/sentry/utils/redis.py
index 5800833863..d8f9b02530 100644
--- a/src/sentry/utils/redis.py
+++ b/src/sentry/utils/redis.py
@@ -134,10 +134,10 @@ class ClusterManager(object):
         # that it's necessary.
         configuration = self.__options_manager.get('redis.clusters').get(key)
         if configuration is None:
-            raise KeyError('Invalid cluster name: {}'.format(key))
+            raise KeyError(u'Invalid cluster name: {}'.format(key))
 
         if not self.__cluster_type.supports(configuration):
-            raise KeyError('Invalid cluster type, expected: {}'.format(self.__cluster_type))
+            raise KeyError(u'Invalid cluster type, expected: {}'.format(self.__cluster_type))
 
         cluster = self.__clusters[key] = self.__cluster_type.factory(**configuration)
 
@@ -164,7 +164,7 @@ def get_cluster_from_options(setting, options, cluster_manager=clusters):
     if cluster_options:
         if cluster_option_name in options:
             raise InvalidConfiguration(
-                'Cannot provide both named cluster ({!r}) and cluster configuration ({}) options.'.
+                u'Cannot provide both named cluster ({!r}) and cluster configuration ({}) options.'.
                 format(
                     cluster_option_name,
                     ', '.join(map(repr, cluster_constructor_option_names)),
@@ -173,11 +173,11 @@ def get_cluster_from_options(setting, options, cluster_manager=clusters):
         else:
             warnings.warn(
                 DeprecatedSettingWarning(
-                    '{} parameter of {}'.format(
+                    u'{} parameter of {}'.format(
                         ', '.join(map(repr, cluster_constructor_option_names)),
                         setting,
                     ),
-                    '{}["{}"]'.format(
+                    u'{}["{}"]'.format(
                         setting,
                         cluster_option_name,
                     ),
@@ -205,7 +205,7 @@ def check_cluster_versions(cluster, required, recommended=None, label=None):
         host = cluster.hosts[id]
         # NOTE: This assumes there is no routing magic going on here, and
         # all requests to this host are being served by the same database.
-        key = '{host}:{port}'.format(host=host.host, port=host.port)
+        key = u'{host}:{port}'.format(host=host.host, port=host.port)
         versions[key] = Version(map(int, info['redis_version'].split('.', 3)))
 
     check_versions(
@@ -225,7 +225,7 @@ def load_script(path):
     # with. (This can prevent lots of bizzare behavior when dealing with
     # clusters of Redis servers.)
     def call_script(client, keys, args):
-        """
+        u"""
         Executes {!r} as a Lua script on a Redis server.
 
         Takes the client to execute the script on as the first argument,
diff --git a/src/sentry/utils/samples.py b/src/sentry/utils/samples.py
index 3c4471b43c..a89261f40b 100644
--- a/src/sentry/utils/samples.py
+++ b/src/sentry/utils/samples.py
@@ -81,7 +81,7 @@ def name_for_username(username):
 def generate_user(username=None, email=None, ip_address=None, id=None):
     if username is None and email is None:
         username = random_username()
-        email = '{}@example.com'.format(username)
+        email = u'{}@example.com'.format(username)
     return UserInterface.to_python(
         {
             'id': id,
diff --git a/src/sentry/utils/services.py b/src/sentry/utils/services.py
index d0ac923019..c2803016f1 100644
--- a/src/sentry/utils/services.py
+++ b/src/sentry/utils/services.py
@@ -301,7 +301,7 @@ class ServiceDelegator(Service):
             # request is going to fail anyway.
             if selected_backend_names[0] not in self.__backends:
                 raise self.InvalidBackend(
-                    '{!r} is not a registered backend.'.format(
+                    u'{!r} is not a registered backend.'.format(
                         selected_backend_names[0]))
 
             def call_backend_method(context, backend, is_primary):
@@ -331,11 +331,11 @@ class ServiceDelegator(Service):
                         expected_raises = getattr(base_value, '__raises__', [])
                         if not expected_raises or not isinstance(e, tuple(expected_raises)):
                             logger.warning('%s caught in executor while calling %r on %s.',
-                                type(e).__name__,
-                                attribute_name,
-                                type(backend).__name__,
-                                exc_info=True,
-                            )
+                                           type(e).__name__,
+                                           attribute_name,
+                                           type(backend).__name__,
+                                           exc_info=True,
+                                           )
                     raise
                 finally:
                     type(self).__state.context = None
diff --git a/src/sentry/utils/snuba.py b/src/sentry/utils/snuba.py
index 32bae07e27..8a353673cd 100644
--- a/src/sentry/utils/snuba.py
+++ b/src/sentry/utils/snuba.py
@@ -43,7 +43,7 @@ def timer(name, prefix='snuba.client'):
     try:
         yield
     finally:
-        metrics.timing('{}.{}'.format(prefix, name), time.time() - t)
+        metrics.timing(u'{}.{}'.format(prefix, name), time.time() - t)
 
 
 _snuba_pool = urllib3.connectionpool.connection_from_url(
@@ -164,13 +164,13 @@ def raw_query(start, end, groupby=None, conditions=None, filter_keys=None,
     try:
         body = json.loads(response.data)
     except ValueError:
-        raise SnubaError("Could not decode JSON response: {}".format(response.data))
+        raise SnubaError(u"Could not decode JSON response: {}".format(response.data))
 
     if response.status != 200:
         if body.get('error'):
             raise SnubaError(body['error'])
         else:
-            raise SnubaError('HTTP {}'.format(response.status))
+            raise SnubaError(u'HTTP {}'.format(response.status))
 
     # Forward and reverse translation maps from model ids to snuba keys, per column
     body['data'] = [reverse(d) for d in body['data']]
diff --git a/src/sentry/utils/strings.py b/src/sentry/utils/strings.py
index becb3b5bba..c48f3ca80b 100644
--- a/src/sentry/utils/strings.py
+++ b/src/sentry/utils/strings.py
@@ -77,7 +77,7 @@ def soft_break(value, length, process=lambda chunk: chunk):
     zero-width spaces after common delimeters, as well as soft-hyphenating long
     identifiers.
     """
-    delimiters = re.compile(r'([{}]+)'.format(''.join(map(re.escape, ',.$:/+@!?()<>[]{}'))))
+    delimiters = re.compile(ur'([{}]+)'.format(''.join(map(re.escape, ',.$:/+@!?()<>[]{}'))))
 
     def soft_break_delimiter(match):
         results = []
@@ -92,7 +92,7 @@ def soft_break(value, length, process=lambda chunk: chunk):
 
         return u''.join(results).rstrip(u'\u200b')
 
-    return re.sub(r'\S{{{},}}'.format(length), soft_break_delimiter, value)
+    return re.sub(ur'\S{{{},}}'.format(length), soft_break_delimiter, value)
 
 
 def to_unicode(value):
diff --git a/src/sentry/utils/types.py b/src/sentry/utils/types.py
index 235bdac6e2..5b0894eac5 100644
--- a/src/sentry/utils/types.py
+++ b/src/sentry/utils/types.py
@@ -42,7 +42,7 @@ class Type(object):
             # and give us the type we were expecting
             if self.test(rv):
                 return rv
-        raise InvalidTypeError('{!r} is not a valid {}'.format(value, repr(self)))
+        raise InvalidTypeError(u'{!r} is not a valid {}'.format(value, repr(self)))
 
     def convert(self, value):
         return value
diff --git a/src/sentry/utils/versioning.py b/src/sentry/utils/versioning.py
index c028215313..ec3142caca 100644
--- a/src/sentry/utils/versioning.py
+++ b/src/sentry/utils/versioning.py
@@ -22,7 +22,7 @@ def summarize(sequence, max=3):
 
 
 def make_upgrade_message(service, modality, version, hosts):
-    return '{service} {modality} be upgraded to {version} on {hosts}.'.format(
+    return u'{service} {modality} be upgraded to {version} on {hosts}.'.format(
         hosts=','.join(map(six.binary_type, summarize(hosts.keys(), 2))),
         modality=modality,
         service=service,
diff --git a/src/sentry/utils/warnings.py b/src/sentry/utils/warnings.py
index 1c20d988a8..54b1511bce 100644
--- a/src/sentry/utils/warnings.py
+++ b/src/sentry/utils/warnings.py
@@ -19,7 +19,7 @@ class DeprecatedSettingWarning(DeprecationWarning):
 
     def __str__(self):
         chunks = [
-            'The {} setting is deprecated. Please use {} instead.'.format(
+            u'The {} setting is deprecated. Please use {} instead.'.format(
                 self.setting,
                 self.replacement,
             )
@@ -27,7 +27,7 @@ class DeprecatedSettingWarning(DeprecationWarning):
 
         if self.removed_in_version:
             chunks.append(
-                'This setting will be removed in Sentry {}.'.format(
+                u'This setting will be removed in Sentry {}.'.format(
                     self.removed_in_version,
                 ),
             )
@@ -35,7 +35,7 @@ class DeprecatedSettingWarning(DeprecationWarning):
         # TODO(tkaemming): This will be removed from the message in the future
         # when it's added to the API payload separately.
         if self.url:
-            chunks.append('See {} for more information.'.format(self.url))
+            chunks.append(u'See {} for more information.'.format(self.url))
 
         return ' '.join(chunks)
 
diff --git a/src/sentry/web/forms/accounts.py b/src/sentry/web/forms/accounts.py
index b4106278bd..4ea506fa90 100644
--- a/src/sentry/web/forms/accounts.py
+++ b/src/sentry/web/forms/accounts.py
@@ -117,7 +117,7 @@ class AuthenticationForm(forms.Form):
 
         ip_address = self.request.META['REMOTE_ADDR']
         return ratelimiter.is_limited(
-            'auth:ip:{}'.format(ip_address),
+            u'auth:ip:{}'.format(ip_address),
             limit,
         )
 
@@ -617,7 +617,7 @@ class NotificationDeploySettingsForm(forms.Form):
         self.fields['notifications'].initial = deploy_setting
 
     def save(self):
-        value = self.data.get('{}-notifications'.format(self.prefix), None)
+        value = self.data.get(u'{}-notifications'.format(self.prefix), None)
         if value is not None:
             UserOption.objects.set_value(
                 user=self.user,
diff --git a/src/sentry/web/frontend/accept_organization_invite.py b/src/sentry/web/frontend/accept_organization_invite.py
index f715280a5f..ae321cbd20 100644
--- a/src/sentry/web/frontend/accept_organization_invite.py
+++ b/src/sentry/web/frontend/accept_organization_invite.py
@@ -77,15 +77,15 @@ class AcceptOrganizationInviteView(BaseView):
             'project_count': project_count,
             'needs_authentication': not request.user.is_authenticated(),
             'needs_2fa': needs_2fa,
-            'logout_url': '{}?next={}'.format(
+            'logout_url': u'{}?next={}'.format(
                 reverse('sentry-logout'),
                 request.path,
             ),
-            'login_url': '{}?next={}'.format(
+            'login_url': u'{}?next={}'.format(
                 reverse('sentry-login'),
                 request.path,
             ),
-            'register_url': '{}?next={}'.format(
+            'register_url': u'{}?next={}'.format(
                 reverse('sentry-register'),
                 request.path,
             ),
diff --git a/src/sentry/web/frontend/accounts.py b/src/sentry/web/frontend/accounts.py
index 9b620e2d68..40a98613a3 100644
--- a/src/sentry/web/frontend/accounts.py
+++ b/src/sentry/web/frontend/accounts.py
@@ -62,7 +62,7 @@ def recover(request):
     }
 
     if request.method == 'POST' and ratelimiter.is_limited(
-        'accounts:recover:{}'.format(extra['ip_address']),
+        u'accounts:recover:{}'.format(extra['ip_address']),
         limit=5,
         window=60,  # 5 per minute should be enough for anyone
     ):
@@ -103,7 +103,7 @@ def recover(request):
 
 
 def get_template(name, mode):
-    return 'sentry/account/{}/{}.html'.format(mode, name)
+    return u'sentry/account/{}/{}.html'.format(mode, name)
 
 
 def recover_confirm(request, user_id, hash, mode='recover'):
@@ -168,7 +168,7 @@ def start_confirm_email(request):
     from sentry.app import ratelimiter
 
     if ratelimiter.is_limited(
-        'auth:confirm-email:{}'.format(request.user.id),
+        u'auth:confirm-email:{}'.format(request.user.id),
         limit=10,
         window=60,  # 10 per minute should be enough for anyone
     ):
@@ -283,7 +283,7 @@ def disconnect_identity(request, identity_id):
 
     backend = get_backend(auth.provider, request, '/')
     if backend is None:
-        raise Exception('Backend was not found for request: {}'.format(auth.provider))
+        raise Exception(u'Backend was not found for request: {}'.format(auth.provider))
 
     # stop this from bubbling up errors to social-auth's middleware
     # XXX(dcramer): IM SO MAD ABOUT THIS
@@ -305,7 +305,7 @@ def disconnect_identity(request, identity_id):
     backend_name = backend.AUTH_BACKEND.name
 
     messages.add_message(
-        request, messages.SUCCESS, 'Your {} identity has been disconnected.'.format(
+        request, messages.SUCCESS, u'Your {} identity has been disconnected.'.format(
             settings.AUTH_PROVIDER_LABELS.get(backend_name, backend_name),
         )
     )
diff --git a/src/sentry/web/frontend/debug/debug_new_release_email.py b/src/sentry/web/frontend/debug/debug_new_release_email.py
index 11662821f4..55113ea6eb 100644
--- a/src/sentry/web/frontend/debug/debug_new_release_email.py
+++ b/src/sentry/web/frontend/debug/debug_new_release_email.py
@@ -55,7 +55,7 @@ class DebugNewReleaseEmailView(View):
         )
 
         release_links = [
-            absolute_uri('/{}/{}/releases/{}/'.format(
+            absolute_uri(u'/{}/{}/releases/{}/'.format(
                 org.slug,
                 p.slug,
                 release.version,
diff --git a/src/sentry/web/frontend/debug/mail.py b/src/sentry/web/frontend/debug/mail.py
index e71e35233b..9c19fa3813 100644
--- a/src/sentry/web/frontend/debug/mail.py
+++ b/src/sentry/web/frontend/debug/mail.py
@@ -59,7 +59,7 @@ def make_culprit(random):
                 random.sample(loremipsum.words, random.randint(1, int(random.paretovariate(2.2))))
             )
 
-    return '{module} in {function}'.format(
+    return u'{module} in {function}'.format(
         module='.'.join(make_module_path_components(1, 4)),
         function=random.choice(
             loremipsum.words,
@@ -72,7 +72,7 @@ def make_group_metadata(random, group):
         'type': 'error',
         'metadata': {
             'type':
-            '{}Error'.format(
+            u'{}Error'.format(
                 ''.join(
                     word.title() for word in random.sample(loremipsum.words, random.randint(1, 3))
                 ),
diff --git a/src/sentry/web/frontend/group_plugin_action.py b/src/sentry/web/frontend/group_plugin_action.py
index a7afd10b8c..e31e014f18 100644
--- a/src/sentry/web/frontend/group_plugin_action.py
+++ b/src/sentry/web/frontend/group_plugin_action.py
@@ -28,7 +28,7 @@ class GroupPluginActionView(ProjectView):
 
         redirect = request.META.get('HTTP_REFERER', '')
         if not is_safe_url(redirect, host=request.get_host()):
-            redirect = '/{}/{}/'.format(
+            redirect = u'/{}/{}/'.format(
                 organization.slug,
                 group.project.slug,
             )
diff --git a/src/sentry/web/frontend/group_tag_export.py b/src/sentry/web/frontend/group_tag_export.py
index bc00c83923..5bccf5c958 100644
--- a/src/sentry/web/frontend/group_tag_export.py
+++ b/src/sentry/web/frontend/group_tag_export.py
@@ -69,7 +69,7 @@ class GroupTagExportView(ProjectView, CsvMixin, EnvironmentMixin):
             raise Http404
 
         if tagstore.is_reserved_key(key):
-            lookup_key = 'sentry:{0}'.format(key)
+            lookup_key = u'sentry:{0}'.format(key)
         else:
             lookup_key = key
 
@@ -94,7 +94,7 @@ class GroupTagExportView(ProjectView, CsvMixin, EnvironmentMixin):
             group.project_id, group.id, environment_id, lookup_key, callbacks=callbacks
         )
 
-        filename = '{}-{}'.format(
+        filename = u'{}-{}'.format(
             group.qualified_short_id or group.id,
             key,
         )
diff --git a/src/sentry/web/frontend/mixins/csv.py b/src/sentry/web/frontend/mixins/csv.py
index d1363a3bff..7195b974fc 100644
--- a/src/sentry/web/frontend/mixins/csv.py
+++ b/src/sentry/web/frontend/mixins/csv.py
@@ -47,5 +47,5 @@ class CsvMixin(object):
             content_type='text/csv',
         )
         response['Content-Disposition'] = \
-            'attachment; filename="{}.csv"'.format(filename)
+            u'attachment; filename="{}.csv"'.format(filename)
         return response
diff --git a/src/sentry/web/frontend/oauth_authorize.py b/src/sentry/web/frontend/oauth_authorize.py
index 750c859102..2f772cea13 100644
--- a/src/sentry/web/frontend/oauth_authorize.py
+++ b/src/sentry/web/frontend/oauth_authorize.py
@@ -26,7 +26,7 @@ class OAuthAuthorizeView(AuthLoginView):
     def redirect_response(self, response_type, redirect_uri, params):
         if response_type == 'token':
             return self.redirect(
-                '{}#{}'.format(
+                u'{}#{}'.format(
                     redirect_uri,
                     urlencode([(k, v) for k, v in six.iteritems(params) if v is not None])
                 )
@@ -55,7 +55,7 @@ class OAuthAuthorizeView(AuthLoginView):
         )
 
     def respond_login(self, request, context, application, *args, **kwargs):
-        context['banner'] = 'Connect Sentry to {}'.format(application.name)
+        context['banner'] = u'Connect Sentry to {}'.format(application.name)
         return self.respond('sentry/login.html', context)
 
     def get(self, request, *args, **kwargs):
@@ -197,7 +197,7 @@ class OAuthAuthorizeView(AuthLoginView):
 
             if pending_scopes:
                 raise NotImplementedError(
-                    '{} scopes did not have descriptions'.format(pending_scopes)
+                    u'{} scopes did not have descriptions'.format(pending_scopes)
                 )
 
         context = {
diff --git a/src/sentry/web/frontend/organization_auth_settings.py b/src/sentry/web/frontend/organization_auth_settings.py
index b2ecc0ded8..854f711977 100644
--- a/src/sentry/web/frontend/organization_auth_settings.py
+++ b/src/sentry/web/frontend/organization_auth_settings.py
@@ -182,7 +182,7 @@ class OrganizationAuthSettingsView(OrganizationView):
         if request.method == 'POST':
             provider_key = request.POST.get('provider')
             if not manager.exists(provider_key):
-                raise ValueError('Provider not found: {}'.format(provider_key))
+                raise ValueError(u'Provider not found: {}'.format(provider_key))
 
             helper = AuthHelper(
                 request=request,
diff --git a/src/sentry/web/frontend/release_webhook.py b/src/sentry/web/frontend/release_webhook.py
index 4e1732a322..2ac076f533 100644
--- a/src/sentry/web/frontend/release_webhook.py
+++ b/src/sentry/web/frontend/release_webhook.py
@@ -37,7 +37,7 @@ class ReleaseWebhookView(View):
         return super(ReleaseWebhookView, self).dispatch(*args, **kwargs)
 
     def _handle_builtin(self, request, project):
-        endpoint = '/projects/{}/{}/releases/'.format(
+        endpoint = u'/projects/{}/{}/releases/'.format(
             project.organization.slug,
             project.slug,
         )
diff --git a/src/sentry/web/frontend/restore_organization.py b/src/sentry/web/frontend/restore_organization.py
index 2db88aa870..73bf8cbc48 100644
--- a/src/sentry/web/frontend/restore_organization.py
+++ b/src/sentry/web/frontend/restore_organization.py
@@ -68,7 +68,7 @@ class RestoreOrganizationView(OrganizationView):
             status__in=deletion_statuses,
         ).update(status=OrganizationStatus.VISIBLE)
         if updated:
-            client.put('/organizations/{}/'.format(organization.slug), data={
+            client.put(u'/organizations/{}/'.format(organization.slug), data={
                 'cancelDeletion': True,
             }, request=request)
             messages.add_message(request, messages.SUCCESS, MSG_RESTORE_SUCCESS)
diff --git a/src/sentry/web/frontend/unsubscribe_issue_notifications.py b/src/sentry/web/frontend/unsubscribe_issue_notifications.py
index 4d2b8abc88..1b57c4586e 100644
--- a/src/sentry/web/frontend/unsubscribe_issue_notifications.py
+++ b/src/sentry/web/frontend/unsubscribe_issue_notifications.py
@@ -35,7 +35,7 @@ class UnsubscribeIssueNotificationsView(BaseView):
             raise Http404
 
         issue_link = absolute_uri(
-            '/{}/{}/issues/{}/'.format(
+            u'/{}/{}/issues/{}/'.format(
                 group.project.organization.slug,
                 group.project.slug,
                 group.id,
diff --git a/src/sentry/web/frontend/vsts_extension_configuration.py b/src/sentry/web/frontend/vsts_extension_configuration.py
index 94c9c88ce9..75ad9a94fe 100644
--- a/src/sentry/web/frontend/vsts_extension_configuration.py
+++ b/src/sentry/web/frontend/vsts_extension_configuration.py
@@ -13,7 +13,7 @@ class VstsExtensionConfigurationView(BaseView):
 
     def get(self, request, *args, **kwargs):
         if not request.user.is_authenticated():
-            configure_uri = '{}?{}'.format(
+            configure_uri = u'{}?{}'.format(
                 reverse('vsts-extension-configuration'),
                 urlencode({
                     'targetId': request.GET['targetId'],
@@ -21,7 +21,7 @@ class VstsExtensionConfigurationView(BaseView):
                 }),
             )
 
-            redirect_uri = '{}?{}'.format(
+            redirect_uri = u'{}?{}'.format(
                 reverse('sentry-login'),
                 urlencode({'next': configure_uri}),
             )
@@ -40,7 +40,7 @@ class VstsExtensionConfigurationView(BaseView):
 
             return pipeline.current_step()
         else:
-            return self.redirect('/extensions/vsts/link/?{}'.format(
+            return self.redirect(u'/extensions/vsts/link/?{}'.format(
                 urlencode({
                     'targetId': request.GET['targetId'],
                     'targetName': request.GET['targetName'],
diff --git a/src/social_auth/backends/__init__.py b/src/social_auth/backends/__init__.py
index 95edd821ed..343710781a 100644
--- a/src/social_auth/backends/__init__.py
+++ b/src/social_auth/backends/__init__.py
@@ -669,7 +669,7 @@ class BaseOAuth2(BaseOAuth):
         data = None
 
         if cls.REVOKE_TOKEN_METHOD == 'GET':
-            url = '{}?{}'.format(url, urlencode(params))
+            url = u'{}?{}'.format(url, urlencode(params))
         else:
             data = urlencode(params)
 
diff --git a/src/social_auth/backends/visualstudio.py b/src/social_auth/backends/visualstudio.py
index 53fac631c3..5ffa5cd3fa 100644
--- a/src/social_auth/backends/visualstudio.py
+++ b/src/social_auth/backends/visualstudio.py
@@ -52,7 +52,7 @@ class VisualStudioAuth(BaseOAuth2):
     def user_data(self, access_token, *args, **kwargs):
         """Loads user data from service"""
         resp = requests.get(VISUALSTUDIO_USER_DETAILS_URL,
-                            headers={'Authorization': 'Bearer {}'.format(access_token)})
+                            headers={'Authorization': u'Bearer {}'.format(access_token)})
         resp.raise_for_status()
         content = resp.json()
         return {
diff --git a/src/social_auth/views.py b/src/social_auth/views.py
index da430619b2..5013a09337 100644
--- a/src/social_auth/views.py
+++ b/src/social_auth/views.py
@@ -81,7 +81,7 @@ def complete(request, backend, *args, **kwargs):
     else:
         messages.add_message(
             request, messages.SUCCESS,
-            'You have linked your account with {}.'.format(
+            u'You have linked your account with {}.'.format(
                 settings.AUTH_PROVIDER_LABELS.get(backend_name, backend_name),
             )
         )
diff --git a/tests/acceptance/test_create_organization_member.py b/tests/acceptance/test_create_organization_member.py
index fc9040f003..b42e009a1c 100644
--- a/tests/acceptance/test_create_organization_member.py
+++ b/tests/acceptance/test_create_organization_member.py
@@ -31,7 +31,7 @@ class CreateOrganizationMemberTest(AcceptanceTestCase):
         Add by email
         """
         self.browser.get(
-            '/organizations/{}/members/new/'.format(self.org.slug))
+            u'/organizations/{}/members/new/'.format(self.org.slug))
         self.browser.wait_until_not('.loading')
         self.browser.element('.checkbox').click()
 
diff --git a/tests/acceptance/test_create_project.py b/tests/acceptance/test_create_project.py
index 50e7b4284e..8da2730528 100644
--- a/tests/acceptance/test_create_project.py
+++ b/tests/acceptance/test_create_project.py
@@ -13,7 +13,7 @@ class CreateProjectTest(AcceptanceTestCase):
         )
         self.login_as(self.user)
 
-        self.path = '/organizations/{}/projects/new/'.format(self.org.slug)
+        self.path = u'/organizations/{}/projects/new/'.format(self.org.slug)
 
     def test_simple(self):
         self.team = self.create_team(organization=self.org, name='Mariachi Band')
diff --git a/tests/acceptance/test_dashboard.py b/tests/acceptance/test_dashboard.py
index 9e9a7f782e..cca5120295 100644
--- a/tests/acceptance/test_dashboard.py
+++ b/tests/acceptance/test_dashboard.py
@@ -54,7 +54,7 @@ class DashboardTest(AcceptanceTestCase):
         )
 
         self.login_as(self.user)
-        self.path = '/{}/'.format(self.org.slug)
+        self.path = u'/{}/'.format(self.org.slug)
 
     def test_no_issues(self):
         # I think no "activity" would be more accurate?
@@ -103,7 +103,7 @@ class EmptyDashboardTest(AcceptanceTestCase):
             teams=[self.team],
         )
         self.login_as(self.user)
-        self.path = '/{}/'.format(self.org.slug)
+        self.path = u'/{}/'.format(self.org.slug)
 
     def test_new_dashboard_empty(self):
         with self.feature('organizations:dashboard'):
diff --git a/tests/acceptance/test_emails.py b/tests/acceptance/test_emails.py
index 5be4b63bfe..1691d46c24 100644
--- a/tests/acceptance/test_emails.py
+++ b/tests/acceptance/test_emails.py
@@ -67,7 +67,7 @@ class EmailTestCase(AcceptanceTestCase):
             # HTML output is captured as a snapshot
             self.browser.get(self.build_url(url, 'html'))
             self.browser.wait_until('#preview')
-            self.browser.snapshot('{} email html'.format(name))
+            self.browser.snapshot(u'{} email html'.format(name))
 
             # Text output is asserted against static fixture files
             self.browser.get(self.build_url(url, 'txt'))
diff --git a/tests/acceptance/test_health.py b/tests/acceptance/test_health.py
index d3efe872ae..d83550573e 100644
--- a/tests/acceptance/test_health.py
+++ b/tests/acceptance/test_health.py
@@ -26,22 +26,22 @@ class HealthTest(AcceptanceTestCase):
         )
 
         self.login_as(self.user)
-        self.path = '/organizations/{}/health'.format(self.org.slug)
+        self.path = u'/organizations/{}/health'.format(self.org.slug)
 
     def test_overview_without_feature_flag(self):
-        self.browser.get('{}/'.format(self.path))
+        self.browser.get(u'{}/'.format(self.path))
         self.browser.wait_until_not('.loading-indicator')
         self.browser.snapshot('health overview - no permissions')
 
     def test_overview(self):
         with self.feature('organizations:health'):
-            self.browser.get('{}/'.format(self.path))
+            self.browser.get(u'{}/'.format(self.path))
             self.browser.wait_until_not('.loading-indicator')
             self.browser.snapshot('health overview')
 
     def test_errors(self):
         with self.feature('organizations:health'):
-            self.browser.get('{}/errors/'.format(self.path))
+            self.browser.get(u'{}/errors/'.format(self.path))
             self.browser.wait_until_not('.loading-indicator')
             self.browser.snapshot('health errors')
 
diff --git a/tests/acceptance/test_issue_details.py b/tests/acceptance/test_issue_details.py
index 8b874b5a25..10a6cbd3c9 100644
--- a/tests/acceptance/test_issue_details.py
+++ b/tests/acceptance/test_issue_details.py
@@ -40,7 +40,7 @@ class IssueDetailsTest(AcceptanceTestCase):
         )
 
         self.browser.get(
-            '/{}/{}/issues/{}/'.format(self.org.slug, self.project.slug, event.group.id)
+            u'/{}/{}/issues/{}/'.format(self.org.slug, self.project.slug, event.group.id)
         )
         self.browser.wait_until('.entries')
         self.browser.snapshot('issue details python')
@@ -51,7 +51,7 @@ class IssueDetailsTest(AcceptanceTestCase):
         )
 
         self.browser.get(
-            '/{}/{}/issues/{}/'.format(self.org.slug, self.project.slug, event.group.id)
+            u'/{}/{}/issues/{}/'.format(self.org.slug, self.project.slug, event.group.id)
         )
         self.browser.wait_until('.entries')
         self.browser.wait_until('[data-test-id="loaded-device-name"]')
@@ -63,8 +63,8 @@ class IssueDetailsTest(AcceptanceTestCase):
         )
 
         self.browser.get(
-            '/{}/{}/issues/{}/events/{}/'.format(self.org.slug,
-                                                 self.project.slug, event.group.id, event.id)
+            u'/{}/{}/issues/{}/events/{}/'.format(self.org.slug,
+                                                  self.project.slug, event.group.id, event.id)
         )
         self.browser.wait_until('.event-details-container')
         self.browser.wait_until_not('.loading-indicator')
@@ -78,7 +78,7 @@ class IssueDetailsTest(AcceptanceTestCase):
         )
 
         self.browser.get(
-            '/{}/{}/issues/{}/'.format(self.org.slug, self.project.slug, event.group.id)
+            u'/{}/{}/issues/{}/'.format(self.org.slug, self.project.slug, event.group.id)
         )
         self.browser.wait_until('.entries')
         self.browser.snapshot('issue details rust')
@@ -89,7 +89,7 @@ class IssueDetailsTest(AcceptanceTestCase):
         )
 
         self.browser.get(
-            '/{}/{}/issues/{}/'.format(self.org.slug, self.project.slug, event.group.id)
+            u'/{}/{}/issues/{}/'.format(self.org.slug, self.project.slug, event.group.id)
         )
         self.browser.wait_until('.entries')
         self.browser.snapshot('issue details cordova')
@@ -100,7 +100,7 @@ class IssueDetailsTest(AcceptanceTestCase):
         )
 
         self.browser.get(
-            '/{}/{}/issues/{}/activity'.format(self.org.slug, self.project.slug, event.group.id)
+            u'/{}/{}/issues/{}/activity'.format(self.org.slug, self.project.slug, event.group.id)
         )
         self.browser.wait_until('.activity-item')
         self.browser.snapshot('issue activity python')
diff --git a/tests/acceptance/test_member_list.py b/tests/acceptance/test_member_list.py
index 33a0590ab6..2228cde555 100644
--- a/tests/acceptance/test_member_list.py
+++ b/tests/acceptance/test_member_list.py
@@ -31,6 +31,6 @@ class ListOrganizationMembersTest(AcceptanceTestCase):
         self.login_as(self.user)
 
     def test_list(self):
-        self.browser.get('/organizations/{}/members/'.format(self.org.slug))
+        self.browser.get(u'/organizations/{}/members/'.format(self.org.slug))
         self.browser.wait_until_not('.loading-indicator')
         self.browser.snapshot(name='list organization members')
diff --git a/tests/acceptance/test_organization_integrations_settings.py b/tests/acceptance/test_organization_integrations_settings.py
index 1f7bea0983..2e199b5162 100644
--- a/tests/acceptance/test_organization_integrations_settings.py
+++ b/tests/acceptance/test_organization_integrations_settings.py
@@ -38,7 +38,7 @@ class OrganizationIntegrationSettingsTest(AcceptanceTestCase):
         self.login_as(self.user)
 
     def test_all_integrations_list(self):
-        path = '/settings/{}/integrations/'.format(self.org.slug)
+        path = u'/settings/{}/integrations/'.format(self.org.slug)
         self.browser.get(path)
         self.browser.wait_until_not('.loading-indicator')
         self.browser.snapshot('organization settings - all integrations')
diff --git a/tests/acceptance/test_organization_rate_limits.py b/tests/acceptance/test_organization_rate_limits.py
index c0c63e956e..4800e416ca 100644
--- a/tests/acceptance/test_organization_rate_limits.py
+++ b/tests/acceptance/test_organization_rate_limits.py
@@ -27,7 +27,7 @@ class OrganizationRateLimitsTest(AcceptanceTestCase):
             teams=[self.team],
         )
         self.login_as(self.user)
-        self.path = '/organizations/{}/rate-limits/'.format(self.org.slug)
+        self.path = u'/organizations/{}/rate-limits/'.format(self.org.slug)
 
     @patch('sentry.app.quotas.get_maximum_quota', Mock(return_value=(100, 60)))
     def test_with_rate_limits(self):
diff --git a/tests/acceptance/test_organization_settings.py b/tests/acceptance/test_organization_settings.py
index 717e44460c..105347e0aa 100644
--- a/tests/acceptance/test_organization_settings.py
+++ b/tests/acceptance/test_organization_settings.py
@@ -24,7 +24,7 @@ class OrganizationSettingsTest(AcceptanceTestCase):
             teams=[self.team],
         )
         self.login_as(self.user)
-        self.path = '/organizations/{}/settings/'.format(self.org.slug)
+        self.path = u'/organizations/{}/settings/'.format(self.org.slug)
 
     def load_organization_helper(self, snapshot_name=None):
         self.browser.wait_until_not('.loading-indicator')
diff --git a/tests/acceptance/test_organization_stats.py b/tests/acceptance/test_organization_stats.py
index 044a6637eb..a2ebb21646 100644
--- a/tests/acceptance/test_organization_stats.py
+++ b/tests/acceptance/test_organization_stats.py
@@ -17,7 +17,7 @@ class OrganizationStatsTest(AcceptanceTestCase):
             name='Project Name'
         )
         self.login_as(self.user)
-        self.path = '/organizations/{}/stats/'.format(self.org.slug)
+        self.path = u'/organizations/{}/stats/'.format(self.org.slug)
 
     def test_simple(self):
         self.project.update(first_event=timezone.now())
diff --git a/tests/acceptance/test_project_alert_settings.py b/tests/acceptance/test_project_alert_settings.py
index 55f5867169..d0942ae327 100644
--- a/tests/acceptance/test_project_alert_settings.py
+++ b/tests/acceptance/test_project_alert_settings.py
@@ -42,8 +42,8 @@ class ProjectAlertSettingsTest(AcceptanceTestCase):
         )
 
         self.login_as(self.user)
-        self.path1 = '/{}/{}/settings/alerts/'.format(self.org.slug, self.project.slug)
-        self.path2 = '/{}/{}/settings/alerts/rules/'.format(self.org.slug, self.project.slug)
+        self.path1 = u'/{}/{}/settings/alerts/'.format(self.org.slug, self.project.slug)
+        self.path2 = u'/{}/{}/settings/alerts/rules/'.format(self.org.slug, self.project.slug)
 
     def test_settings_load(self):
         self.browser.get(self.path1)
diff --git a/tests/acceptance/test_project_all_integrations_settings.py b/tests/acceptance/test_project_all_integrations_settings.py
index dc2ce97a0b..4fca4a23e4 100644
--- a/tests/acceptance/test_project_all_integrations_settings.py
+++ b/tests/acceptance/test_project_all_integrations_settings.py
@@ -27,7 +27,7 @@ class ProjectAllIntegrationsSettingsTest(AcceptanceTestCase):
         self.login_as(self.user)
 
     def test_all_integrations_list(self):
-        path = '/{}/{}/settings/plugins/'.format(self.org.slug, self.project.slug)
+        path = u'/{}/{}/settings/plugins/'.format(self.org.slug, self.project.slug)
         self.browser.get(path)
         self.browser.wait_until_not('.loading-indicator')
         self.browser.snapshot('project settings - all integrations')
diff --git a/tests/acceptance/test_project_data_forwarding_settings.py b/tests/acceptance/test_project_data_forwarding_settings.py
index 25bfa81c3e..4aaef1ffbf 100644
--- a/tests/acceptance/test_project_data_forwarding_settings.py
+++ b/tests/acceptance/test_project_data_forwarding_settings.py
@@ -25,7 +25,7 @@ class ProjectDataForwardingSettingsTest(AcceptanceTestCase):
         )
 
         self.login_as(self.user)
-        self.path = '/{}/{}/settings/data-forwarding/'.format(self.org.slug, self.project.slug)
+        self.path = u'/{}/{}/settings/data-forwarding/'.format(self.org.slug, self.project.slug)
 
     def test_simple(self):
         self.browser.get(self.path)
diff --git a/tests/acceptance/test_project_debug_symbols_settings.py b/tests/acceptance/test_project_debug_symbols_settings.py
index 767ff2f425..fd20767c00 100644
--- a/tests/acceptance/test_project_debug_symbols_settings.py
+++ b/tests/acceptance/test_project_debug_symbols_settings.py
@@ -27,7 +27,7 @@ class ProjectSavedSearchesSettingsTest(AcceptanceTestCase):
         self.login_as(self.user)
 
     def test_saved_searches(self):
-        path = '/{}/{}/settings/debug-symbols/'.format(self.org.slug, self.project.slug)
+        path = u'/{}/{}/settings/debug-symbols/'.format(self.org.slug, self.project.slug)
         self.browser.get(path)
         self.browser.wait_until_not('.loading-indicator')
         self.browser.snapshot('project settings - debug symbols')
diff --git a/tests/acceptance/test_project_general_settings.py b/tests/acceptance/test_project_general_settings.py
index 27f7ff72a9..e7a5e05805 100644
--- a/tests/acceptance/test_project_general_settings.py
+++ b/tests/acceptance/test_project_general_settings.py
@@ -27,7 +27,7 @@ class ProjectGeneralSettingsTest(AcceptanceTestCase):
         self.login_as(self.user)
 
     def test_saved_searches(self):
-        path = '/{}/{}/settings/'.format(self.org.slug, self.project.slug)
+        path = u'/{}/{}/settings/'.format(self.org.slug, self.project.slug)
         self.browser.get(path)
         self.browser.wait_until_not('.loading-indicator')
         self.browser.snapshot('project settings - general settings')
diff --git a/tests/acceptance/test_project_issues.py b/tests/acceptance/test_project_issues.py
index 24b280702a..1d37c0b1f4 100644
--- a/tests/acceptance/test_project_issues.py
+++ b/tests/acceptance/test_project_issues.py
@@ -18,7 +18,7 @@ class ProjectIssuesTest(AcceptanceTestCase):
         )
         self.environment = self.create_environment(name="staging")
         self.login_as(self.user)
-        self.path = '/{}/{}/'.format(self.org.slug, self.project.slug)
+        self.path = u'/{}/{}/'.format(self.org.slug, self.project.slug)
 
     # TODO(dcramer): abstract fixtures into a basic set that is present for
     # all acceptance tests
diff --git a/tests/acceptance/test_project_keys.py b/tests/acceptance/test_project_keys.py
index 602436542f..a973be12fc 100644
--- a/tests/acceptance/test_project_keys.py
+++ b/tests/acceptance/test_project_keys.py
@@ -37,7 +37,7 @@ class ProjectKeysTest(AcceptanceTestCase):
         )
 
         self.login_as(self.user)
-        self.path = '/{}/{}/settings/keys/'.format(self.org.slug, self.project.slug)
+        self.path = u'/{}/{}/settings/keys/'.format(self.org.slug, self.project.slug)
 
     def test_simple(self):
         self.browser.get(self.path)
@@ -76,7 +76,7 @@ class ProjectKeyDetailsTest(AcceptanceTestCase):
         )
 
         self.login_as(self.user)
-        self.path = '/{}/{}/settings/keys/{}/'.format(
+        self.path = u'/{}/{}/settings/keys/{}/'.format(
             self.org.slug,
             self.project.slug,
             self.pk.public_key,
diff --git a/tests/acceptance/test_project_overview.py b/tests/acceptance/test_project_overview.py
index 77101f5b15..3317a9cf82 100644
--- a/tests/acceptance/test_project_overview.py
+++ b/tests/acceptance/test_project_overview.py
@@ -19,7 +19,7 @@ class ProjectOverviewTest(AcceptanceTestCase):
             name='Bengal',
         )
         self.login_as(self.user)
-        self.path = '/{}/{}/dashboard/'.format(
+        self.path = u'/{}/{}/dashboard/'.format(
             self.org.slug, self.project.slug)
 
     def test_with_issues(self):
diff --git a/tests/acceptance/test_project_release_tracking_settings.py b/tests/acceptance/test_project_release_tracking_settings.py
index c57dd9259a..e8d1ff1754 100644
--- a/tests/acceptance/test_project_release_tracking_settings.py
+++ b/tests/acceptance/test_project_release_tracking_settings.py
@@ -28,7 +28,7 @@ class ProjectReleaseTrackingSettingsTest(AcceptanceTestCase):
         tagstore.create_tag_key(project_id=self.project.id, environment_id=None, key="Foo")
 
         self.login_as(self.user)
-        self.path1 = '/{}/{}/settings/release-tracking/'.format(self.org.slug, self.project.slug)
+        self.path1 = u'/{}/{}/settings/release-tracking/'.format(self.org.slug, self.project.slug)
 
     def test_tags_list(self):
         self.browser.get(self.path1)
diff --git a/tests/acceptance/test_project_releases.py b/tests/acceptance/test_project_releases.py
index 85ef2f583a..67242c17e4 100644
--- a/tests/acceptance/test_project_releases.py
+++ b/tests/acceptance/test_project_releases.py
@@ -17,7 +17,7 @@ class ProjectReleasesTest(AcceptanceTestCase):
             name='Bengal',
         )
         self.login_as(self.user)
-        self.path = '/{}/{}/releases/'.format(
+        self.path = u'/{}/{}/releases/'.format(
             self.org.slug, self.project.slug)
 
     def test_with_releases(self):
@@ -66,7 +66,7 @@ class ProjectReleaseDetailsTest(AcceptanceTestCase):
             message='Foo bar',
         )
         self.login_as(self.user)
-        self.path = '/{}/{}/releases/{}/'.format(
+        self.path = u'/{}/{}/releases/{}/'.format(
             self.org.slug, self.project.slug, self.release.version)
 
     def test_release_details_no_commits_no_deploys(self):
diff --git a/tests/acceptance/test_project_saved_searches_settings.py b/tests/acceptance/test_project_saved_searches_settings.py
index 5d6cdba164..4b6d9f08ad 100644
--- a/tests/acceptance/test_project_saved_searches_settings.py
+++ b/tests/acceptance/test_project_saved_searches_settings.py
@@ -27,7 +27,7 @@ class ProjectSavedSearchesSettingsTest(AcceptanceTestCase):
         self.login_as(self.user)
 
     def test_saved_searches(self):
-        path = '/{}/{}/settings/saved-searches/'.format(self.org.slug, self.project.slug)
+        path = u'/{}/{}/settings/saved-searches/'.format(self.org.slug, self.project.slug)
         self.browser.get(path)
         self.browser.wait_until_not('.loading-indicator')
         self.browser.snapshot('project settings - saved searches')
diff --git a/tests/acceptance/test_project_servicehooks.py b/tests/acceptance/test_project_servicehooks.py
index 5007a2a675..0b77110c7d 100644
--- a/tests/acceptance/test_project_servicehooks.py
+++ b/tests/acceptance/test_project_servicehooks.py
@@ -26,8 +26,8 @@ class ProjectServiceHooksTest(AcceptanceTestCase):
         )
 
         self.login_as(self.user)
-        self.list_hooks_path = '/settings/{}/{}/hooks/'.format(self.org.slug, self.project.slug)
-        self.new_hook_path = '/settings/{}/{}/hooks/new/'.format(self.org.slug, self.project.slug)
+        self.list_hooks_path = u'/settings/{}/{}/hooks/'.format(self.org.slug, self.project.slug)
+        self.new_hook_path = u'/settings/{}/{}/hooks/new/'.format(self.org.slug, self.project.slug)
 
     def test_simple(self):
         with self.feature('projects:servicehooks'):
@@ -39,7 +39,7 @@ class ProjectServiceHooksTest(AcceptanceTestCase):
             self.browser.click('[data-test-id="new-service-hook"]')
 
             self.browser.wait_until_not('.loading-indicator')
-            assert self.browser.current_url == '{}{}'.format(
+            assert self.browser.current_url == u'{}{}'.format(
                 self.browser.live_server_url,
                 self.new_hook_path,
             )
@@ -49,7 +49,7 @@ class ProjectServiceHooksTest(AcceptanceTestCase):
             self.browser.click('.ref-project-create-service-hook [data-test-id="form-submit"]')
 
             self.browser.wait_until_not('.loading-indicator')
-            assert self.browser.current_url == '{}{}'.format(
+            assert self.browser.current_url == u'{}{}'.format(
                 self.browser.live_server_url,
                 self.list_hooks_path,
             )
@@ -62,8 +62,8 @@ class ProjectServiceHooksTest(AcceptanceTestCase):
             # hopefully click the first service hook
             self.browser.click('.ref-project-service-hooks label a')
             self.browser.wait_until_not('.loading-indicator')
-            assert self.browser.current_url == '{}{}'.format(
+            assert self.browser.current_url == u'{}{}'.format(
                 self.browser.live_server_url,
-                '/settings/{}/{}/hooks/{}/'.format(self.org.slug, self.project.slug, hook.guid),
+                u'/settings/{}/{}/hooks/{}/'.format(self.org.slug, self.project.slug, hook.guid),
             )
             self.browser.snapshot('project settings - service hooks - details')
diff --git a/tests/acceptance/test_project_tags_settings.py b/tests/acceptance/test_project_tags_settings.py
index ccfb5b9d04..843551e982 100644
--- a/tests/acceptance/test_project_tags_settings.py
+++ b/tests/acceptance/test_project_tags_settings.py
@@ -28,7 +28,7 @@ class ProjectTagsSettingsTest(AcceptanceTestCase):
         tagstore.create_tag_key(project_id=self.project.id, environment_id=None, key="Foo")
 
         self.login_as(self.user)
-        self.path1 = '/{}/{}/settings/tags/'.format(self.org.slug, self.project.slug)
+        self.path1 = u'/{}/{}/settings/tags/'.format(self.org.slug, self.project.slug)
 
     def test_tags_list(self):
         self.browser.get(self.path1)
diff --git a/tests/acceptance/test_shared_issue.py b/tests/acceptance/test_shared_issue.py
index b728d6e573..64fecf8d92 100644
--- a/tests/acceptance/test_shared_issue.py
+++ b/tests/acceptance/test_shared_issue.py
@@ -46,6 +46,6 @@ class SharedIssueTest(AcceptanceTestCase):
             group=group,
         )
 
-        self.browser.get('/share/issue/{}/'.format(group.get_share_id()))
+        self.browser.get(u'/share/issue/{}/'.format(group.get_share_id()))
         self.browser.wait_until('.entries')
         self.browser.snapshot('shared issue cocoa')
diff --git a/tests/acceptance/test_teams_list.py b/tests/acceptance/test_teams_list.py
index 68f6b19e57..1bb37f9451 100644
--- a/tests/acceptance/test_teams_list.py
+++ b/tests/acceptance/test_teams_list.py
@@ -27,7 +27,7 @@ class TeamsListTest(AcceptanceTestCase):
         )
         self.login_as(self.user)
         # this should redirect to /settings/{}/teams/
-        self.path = '/organizations/{}/teams/'.format(self.org.slug)
+        self.path = u'/organizations/{}/teams/'.format(self.org.slug)
 
     def test_simple(self):
         self.project.update(first_event=timezone.now())
diff --git a/tests/integration/test_api.py b/tests/integration/test_api.py
index 15004ee23d..aa7b803683 100644
--- a/tests/integration/test_api.py
+++ b/tests/integration/test_api.py
@@ -38,12 +38,12 @@ class AuthenticationTest(AuthProviderTestCase):
         self.login_as(user)
 
         paths = (
-            '/api/0/organizations/{}/'.format(organization.slug),
-            '/api/0/projects/{}/{}/'.format(organization.slug, project.slug),
-            '/api/0/teams/{}/{}/'.format(organization.slug, team.slug),
-            '/api/0/issues/{}/'.format(group.id),
+            u'/api/0/organizations/{}/'.format(organization.slug),
+            u'/api/0/projects/{}/{}/'.format(organization.slug, project.slug),
+            u'/api/0/teams/{}/{}/'.format(organization.slug, team.slug),
+            u'/api/0/issues/{}/'.format(group.id),
             # this uses the internal API, which once upon a time was broken
-            '/api/0/issues/{}/events/latest/'.format(group.id),
+            u'/api/0/issues/{}/events/latest/'.format(group.id),
         )
 
         for path in paths:
diff --git a/tests/integration/test_sso.py b/tests/integration/test_sso.py
index 73cd7d2c28..f3e2d48d65 100644
--- a/tests/integration/test_sso.py
+++ b/tests/integration/test_sso.py
@@ -28,8 +28,8 @@ class OrganizationAuthLoginTest(AuthProviderTestCase):
 
         self.login_as(user)
 
-        path = '/{}/'.format(organization.slug)
-        redirect_uri = 'http://testserver/auth/login/{}/'.format(organization.slug)
+        path = u'/{}/'.format(organization.slug)
+        redirect_uri = u'http://testserver/auth/login/{}/'.format(organization.slug)
 
         # we should be redirecting the user to the authentication form as they
         # haven't verified this specific organization
diff --git a/tests/sentry/api/endpoints/test_auth_index.py b/tests/sentry/api/endpoints/test_auth_index.py
index 4f04419395..6ef3ccdab2 100644
--- a/tests/sentry/api/endpoints/test_auth_index.py
+++ b/tests/sentry/api/endpoints/test_auth_index.py
@@ -27,7 +27,7 @@ class AuthLoginEndpointTest(APITestCase):
     def test_valid_password(self):
         user = self.create_user('foo@example.com')
         response = self.client.post(self.path,
-                                    HTTP_AUTHORIZATION='Basic {}'.format(b64encode('{}:{}'.format(
+                                    HTTP_AUTHORIZATION=u'Basic {}'.format(b64encode(u'{}:{}'.format(
                                         user.username,
                                         'admin',
                                     ))),
@@ -38,7 +38,7 @@ class AuthLoginEndpointTest(APITestCase):
     def test_invalid_password(self):
         user = self.create_user('foo@example.com')
         response = self.client.post(self.path,
-                                    HTTP_AUTHORIZATION='Basic {}'.format(b64encode('{}:{}'.format(
+                                    HTTP_AUTHORIZATION=u'Basic {}'.format(b64encode(u'{}:{}'.format(
                                         user.username,
                                         'foobar',
                                     ))),
diff --git a/tests/sentry/api/endpoints/test_broadcast_details.py b/tests/sentry/api/endpoints/test_broadcast_details.py
index 63b22a6fd8..953e38490b 100644
--- a/tests/sentry/api/endpoints/test_broadcast_details.py
+++ b/tests/sentry/api/endpoints/test_broadcast_details.py
@@ -13,7 +13,7 @@ class BroadcastDetailsTest(APITestCase):
 
         self.login_as(user=self.user)
 
-        response = self.client.get('/api/0/broadcasts/{}/'.format(broadcast1.id))
+        response = self.client.get(u'/api/0/broadcasts/{}/'.format(broadcast1.id))
         assert response.status_code == 200
         assert response.data['id'] == six.text_type(broadcast1.id)
 
@@ -26,7 +26,7 @@ class BroadcastUpdateTest(APITestCase):
         self.add_user_permission(user=self.user, permission='broadcasts.admin')
         self.login_as(user=self.user)
 
-        response = self.client.put('/api/0/broadcasts/{}/'.format(broadcast1.id), {
+        response = self.client.put(u'/api/0/broadcasts/{}/'.format(broadcast1.id), {
             'hasSeen': '1',
             'message': 'foobar',
         })
@@ -53,7 +53,7 @@ class BroadcastUpdateTest(APITestCase):
         self.add_user_permission(user=self.user, permission='broadcasts.admin')
         self.login_as(user=self.user, superuser=True)
 
-        response = self.client.put('/api/0/broadcasts/{}/'.format(broadcast1.id), {
+        response = self.client.put(u'/api/0/broadcasts/{}/'.format(broadcast1.id), {
             'hasSeen': '1',
             'message': 'foobar',
         })
diff --git a/tests/sentry/api/endpoints/test_chunk_upload.py b/tests/sentry/api/endpoints/test_chunk_upload.py
index e91930f9fc..5c67474e94 100644
--- a/tests/sentry/api/endpoints/test_chunk_upload.py
+++ b/tests/sentry/api/endpoints/test_chunk_upload.py
@@ -25,7 +25,7 @@ class ChunkUploadTest(APITestCase):
     def test_chunk_parameters(self):
         response = self.client.get(
             self.url,
-            HTTP_AUTHORIZATION='Bearer {}'.format(self.token.token),
+            HTTP_AUTHORIZATION=u'Bearer {}'.format(self.token.token),
             format='json'
         )
 
@@ -45,7 +45,7 @@ class ChunkUploadTest(APITestCase):
         options.set('system.upload-url-prefix', 'test')
         response = self.client.get(
             self.url,
-            HTTP_AUTHORIZATION='Bearer {}'.format(self.token.token),
+            HTTP_AUTHORIZATION=u'Bearer {}'.format(self.token.token),
             format='json'
         )
 
@@ -58,7 +58,7 @@ class ChunkUploadTest(APITestCase):
         )
         response = self.client.get(
             self.url,
-            HTTP_AUTHORIZATION='Bearer {}'.format(token.token),
+            HTTP_AUTHORIZATION=u'Bearer {}'.format(token.token),
         )
         assert response.status_code == 403, response.content
 
@@ -78,7 +78,7 @@ class ChunkUploadTest(APITestCase):
                     SimpleUploadedFile(checksum2, string2)
                 ]
             },
-            HTTP_AUTHORIZATION='Bearer {}'.format(self.token.token),
+            HTTP_AUTHORIZATION=u'Bearer {}'.format(self.token.token),
             format='multipart'
         )
 
@@ -102,7 +102,7 @@ class ChunkUploadTest(APITestCase):
             data={
                 'file': files
             },
-            HTTP_AUTHORIZATION='Bearer {}'.format(self.token.token),
+            HTTP_AUTHORIZATION=u'Bearer {}'.format(self.token.token),
             format='multipart'
         )
 
@@ -121,7 +121,7 @@ class ChunkUploadTest(APITestCase):
             data={
                 'file': files
             },
-            HTTP_AUTHORIZATION='Bearer {}'.format(self.token.token),
+            HTTP_AUTHORIZATION=u'Bearer {}'.format(self.token.token),
             format='multipart'
         )
 
@@ -134,7 +134,7 @@ class ChunkUploadTest(APITestCase):
             data={
                 'file': files
             },
-            HTTP_AUTHORIZATION='Bearer {}'.format(self.token.token),
+            HTTP_AUTHORIZATION=u'Bearer {}'.format(self.token.token),
             format='multipart'
         )
         assert response.status_code == 400, response.content
@@ -149,7 +149,7 @@ class ChunkUploadTest(APITestCase):
             data={
                 'file': files
             },
-            HTTP_AUTHORIZATION='Bearer {}'.format(self.token.token),
+            HTTP_AUTHORIZATION=u'Bearer {}'.format(self.token.token),
             format='multipart'
         )
 
@@ -165,7 +165,7 @@ class ChunkUploadTest(APITestCase):
             data={
                 'file': files
             },
-            HTTP_AUTHORIZATION='Bearer {}'.format(self.token.token),
+            HTTP_AUTHORIZATION=u'Bearer {}'.format(self.token.token),
             format='multipart'
         )
 
diff --git a/tests/sentry/api/endpoints/test_dif_assemble.py b/tests/sentry/api/endpoints/test_dif_assemble.py
index e09d9a5655..f312455035 100644
--- a/tests/sentry/api/endpoints/test_dif_assemble.py
+++ b/tests/sentry/api/endpoints/test_dif_assemble.py
@@ -38,7 +38,7 @@ class DifAssembleEndpoint(APITestCase):
             data={
                 'lol': 'test'
             },
-            HTTP_AUTHORIZATION='Bearer {}'.format(self.token.token)
+            HTTP_AUTHORIZATION=u'Bearer {}'.format(self.token.token)
         )
         assert response.status_code == 400, response.content
 
@@ -48,7 +48,7 @@ class DifAssembleEndpoint(APITestCase):
             data={
                 checksum: 'test'
             },
-            HTTP_AUTHORIZATION='Bearer {}'.format(self.token.token)
+            HTTP_AUTHORIZATION=u'Bearer {}'.format(self.token.token)
         )
         assert response.status_code == 400, response.content
 
@@ -58,7 +58,7 @@ class DifAssembleEndpoint(APITestCase):
                 checksum: {
                 }
             },
-            HTTP_AUTHORIZATION='Bearer {}'.format(self.token.token)
+            HTTP_AUTHORIZATION=u'Bearer {}'.format(self.token.token)
         )
         assert response.status_code == 400, response.content
 
@@ -70,7 +70,7 @@ class DifAssembleEndpoint(APITestCase):
                     'chunks': [],
                 }
             },
-            HTTP_AUTHORIZATION='Bearer {}'.format(self.token.token)
+            HTTP_AUTHORIZATION=u'Bearer {}'.format(self.token.token)
         )
         assert response.status_code == 200, response.content
         assert response.data[checksum]['state'] == ChunkFileState.NOT_FOUND
@@ -101,7 +101,7 @@ class DifAssembleEndpoint(APITestCase):
                     'chunks': checksums,
                 }
             },
-            HTTP_AUTHORIZATION='Bearer {}'.format(self.token.token)
+            HTTP_AUTHORIZATION=u'Bearer {}'.format(self.token.token)
         )
 
         assert response.status_code == 200, response.content
@@ -125,7 +125,7 @@ class DifAssembleEndpoint(APITestCase):
                     'chunks': checksums,
                 }
             },
-            HTTP_AUTHORIZATION='Bearer {}'.format(self.token.token)
+            HTTP_AUTHORIZATION=u'Bearer {}'.format(self.token.token)
         )
 
         assert response.status_code == 200, response.content
@@ -150,7 +150,7 @@ class DifAssembleEndpoint(APITestCase):
                     'chunks': checksums,
                 }
             },
-            HTTP_AUTHORIZATION='Bearer {}'.format(self.token.token)
+            HTTP_AUTHORIZATION=u'Bearer {}'.format(self.token.token)
         )
 
         assert response.status_code == 200, response.content
@@ -167,7 +167,7 @@ class DifAssembleEndpoint(APITestCase):
                     'chunks': [not_found_checksum],
                 }
             },
-            HTTP_AUTHORIZATION='Bearer {}'.format(self.token.token)
+            HTTP_AUTHORIZATION=u'Bearer {}'.format(self.token.token)
         )
 
         assert response.status_code == 200, response.content
@@ -214,7 +214,7 @@ class DifAssembleEndpoint(APITestCase):
                     ]
                 }
             },
-            HTTP_AUTHORIZATION='Bearer {}'.format(self.token.token)
+            HTTP_AUTHORIZATION=u'Bearer {}'.format(self.token.token)
         )
         assert response.status_code == 200, response.content
         assert response.data[total_checksum]['state'] == ChunkFileState.NOT_FOUND
@@ -237,7 +237,7 @@ class DifAssembleEndpoint(APITestCase):
                     ],
                 }
             },
-            HTTP_AUTHORIZATION='Bearer {}'.format(self.token.token)
+            HTTP_AUTHORIZATION=u'Bearer {}'.format(self.token.token)
         )
         assert response.status_code == 200, response.content
         assert response.data[total_checksum]['state'] == ChunkFileState.CREATED
@@ -281,7 +281,7 @@ class DifAssembleEndpoint(APITestCase):
                     'chunks': chunks,
                 }
             },
-            HTTP_AUTHORIZATION='Bearer {}'.format(self.token.token)
+            HTTP_AUTHORIZATION=u'Bearer {}'.format(self.token.token)
         )
 
         assert response.status_code == 200, response.content
@@ -310,7 +310,7 @@ class DifAssembleEndpoint(APITestCase):
                     'chunks': [],
                 }
             },
-            HTTP_AUTHORIZATION='Bearer {}'.format(self.token.token)
+            HTTP_AUTHORIZATION=u'Bearer {}'.format(self.token.token)
         )
 
         assert response.status_code == 200, response.content
diff --git a/tests/sentry/api/endpoints/test_event_attachment_details.py b/tests/sentry/api/endpoints/test_event_attachment_details.py
index 8bb7a4f1ba..4ae2fb0378 100644
--- a/tests/sentry/api/endpoints/test_event_attachment_details.py
+++ b/tests/sentry/api/endpoints/test_event_attachment_details.py
@@ -33,7 +33,7 @@ class EventAttachmentDetailsTest(APITestCase):
             name='hello.png',
         )
 
-        path = '/api/0/projects/{}/{}/events/{}/attachments/{}/'.format(
+        path = u'/api/0/projects/{}/{}/events/{}/attachments/{}/'.format(
             event1.project.organization.slug,
             event1.project.slug,
             event1.id,
@@ -73,7 +73,7 @@ class EventAttachmentDetailsTest(APITestCase):
             name='hello.png',
         )
 
-        path = '/api/0/projects/{}/{}/events/{}/attachments/{}/?download'.format(
+        path = u'/api/0/projects/{}/{}/events/{}/attachments/{}/?download'.format(
             event1.project.organization.slug,
             event1.project.slug,
             event1.id,
diff --git a/tests/sentry/api/endpoints/test_event_attachments.py b/tests/sentry/api/endpoints/test_event_attachments.py
index b06c47671d..84440d660a 100644
--- a/tests/sentry/api/endpoints/test_event_attachments.py
+++ b/tests/sentry/api/endpoints/test_event_attachments.py
@@ -53,7 +53,7 @@ class EventAttachmentsTest(APITestCase):
             name='hello.png',
         )
 
-        path = '/api/0/projects/{}/{}/events/{}/attachments/'.format(
+        path = u'/api/0/projects/{}/{}/events/{}/attachments/'.format(
             event1.project.organization.slug,
             event1.project.slug,
             event1.id,
diff --git a/tests/sentry/api/endpoints/test_group_details.py b/tests/sentry/api/endpoints/test_group_details.py
index 326de67655..2a223c8c11 100644
--- a/tests/sentry/api/endpoints/test_group_details.py
+++ b/tests/sentry/api/endpoints/test_group_details.py
@@ -20,7 +20,7 @@ class GroupDetailsTest(APITestCase):
 
         group = self.create_group()
 
-        url = '/api/0/issues/{}/'.format(group.id)
+        url = u'/api/0/issues/{}/'.format(group.id)
         response = self.client.get(url, format='json')
 
         assert response.status_code == 200, response.content
@@ -44,7 +44,7 @@ class GroupDetailsTest(APITestCase):
             value=release.version,
         )
 
-        url = '/api/0/issues/{}/'.format(group.id)
+        url = u'/api/0/issues/{}/'.format(group.id)
 
         response = self.client.get(url, format='json')
 
@@ -66,16 +66,16 @@ class GroupDetailsTest(APITestCase):
 
         self.login_as(user=self.user)
 
-        url = '/api/0/issues/{}/'.format(group1.id)
+        url = u'/api/0/issues/{}/'.format(group1.id)
 
         response = self.client.get(url, format='json')
         assert response.status_code == 404
 
-        url = '/api/0/issues/{}/'.format(group2.id)
+        url = u'/api/0/issues/{}/'.format(group2.id)
         response = self.client.get(url, format='json')
         assert response.status_code == 404
 
-        url = '/api/0/issues/{}/'.format(group3.id)
+        url = u'/api/0/issues/{}/'.format(group3.id)
         response = self.client.get(url, format='json')
         assert response.status_code == 404
 
@@ -85,7 +85,7 @@ class GroupDetailsTest(APITestCase):
 
         environment = Environment.get_or_create(group.project, 'production')
 
-        url = '/api/0/issues/{}/'.format(group.id)
+        url = u'/api/0/issues/{}/'.format(group.id)
 
         from sentry.api.endpoints.group_details import tsdb
 
@@ -112,7 +112,7 @@ class GroupUpdateTest(APITestCase):
 
         group = self.create_group()
 
-        url = '/api/0/issues/{}/'.format(group.id)
+        url = u'/api/0/issues/{}/'.format(group.id)
 
         response = self.client.put(
             url, data={
@@ -145,7 +145,7 @@ class GroupUpdateTest(APITestCase):
             project=project,
         )
 
-        url = '/api/0/issues/{}/'.format(group.id)
+        url = u'/api/0/issues/{}/'.format(group.id)
 
         response = self.client.put(
             url, data={
@@ -169,7 +169,7 @@ class GroupUpdateTest(APITestCase):
 
         self.login_as(user=self.user)
 
-        url = '/api/0/issues/{}/'.format(group.id)
+        url = u'/api/0/issues/{}/'.format(group.id)
 
         response = self.client.put(
             url, data={
@@ -201,7 +201,7 @@ class GroupUpdateTest(APITestCase):
 
         group = self.create_group()
 
-        url = '/api/0/issues/{}/'.format(group.id)
+        url = u'/api/0/issues/{}/'.format(group.id)
 
         response = self.client.put(
             url, data={
@@ -225,7 +225,7 @@ class GroupUpdateTest(APITestCase):
 
         group = self.create_group()
 
-        url = '/api/0/issues/{}/'.format(group.id)
+        url = u'/api/0/issues/{}/'.format(group.id)
 
         response = self.client.put(
             url, data={
@@ -270,7 +270,7 @@ class GroupUpdateTest(APITestCase):
 
         group = self.create_group()
 
-        url = '/api/0/issues/{}/'.format(group.id)
+        url = u'/api/0/issues/{}/'.format(group.id)
 
         response = self.client.put(
             url, data={
@@ -317,7 +317,7 @@ class GroupUpdateTest(APITestCase):
         team = self.create_team(organization=group.project.organization, members=[self.user])
         group.project.add_team(team)
 
-        url = '/api/0/issues/{}/'.format(group.id)
+        url = u'/api/0/issues/{}/'.format(group.id)
 
         response = self.client.put(
             url, data={
@@ -360,7 +360,7 @@ class GroupUpdateTest(APITestCase):
         group = self.create_group()
         team = self.create_team(organization=group.project.organization, members=[self.user])
 
-        url = '/api/0/issues/{}/'.format(group.id)
+        url = u'/api/0/issues/{}/'.format(group.id)
 
         response = self.client.put(
             url, data={
@@ -375,7 +375,7 @@ class GroupUpdateTest(APITestCase):
 
         group = self.create_group()
 
-        url = '/api/0/issues/{}/'.format(group.id)
+        url = u'/api/0/issues/{}/'.format(group.id)
 
         response = self.client.put(
             url, data={
@@ -403,7 +403,7 @@ class GroupUpdateTest(APITestCase):
 
         group = self.create_group()
 
-        url = '/api/0/issues/{}/'.format(group.id)
+        url = u'/api/0/issues/{}/'.format(group.id)
 
         response = self.client.put(
             url, data={
@@ -419,7 +419,7 @@ class GroupUpdateTest(APITestCase):
         self.login_as(user=self.user)
         group = self.create_group()
 
-        url = '/api/0/issues/{}/'.format(group.id)
+        url = u'/api/0/issues/{}/'.format(group.id)
 
         resp = self.client.put(
             url, data={
@@ -455,7 +455,7 @@ class GroupUpdateTest(APITestCase):
             group=group,
         )
 
-        url = '/api/0/issues/{}/'.format(group.id)
+        url = u'/api/0/issues/{}/'.format(group.id)
 
         with self.tasks():
             with self.feature('projects:discard-groups'):
@@ -493,7 +493,7 @@ class GroupDeleteTest(APITestCase):
             group=group,
         )
 
-        url = '/api/0/issues/{}/'.format(group.id)
+        url = u'/api/0/issues/{}/'.format(group.id)
 
         assert not GroupHashTombstone.objects.filter(hash=hash).exists()
 
@@ -509,7 +509,7 @@ class GroupDeleteTest(APITestCase):
 
         Group.objects.filter(id=group.id).update(status=GroupStatus.UNRESOLVED)
 
-        url = '/api/0/issues/{}/'.format(group.id)
+        url = u'/api/0/issues/{}/'.format(group.id)
 
         with self.tasks():
             response = self.client.delete(url, format='json')
diff --git a/tests/sentry/api/endpoints/test_group_events.py b/tests/sentry/api/endpoints/test_group_events.py
index 5459e09eec..52fb1e7979 100644
--- a/tests/sentry/api/endpoints/test_group_events.py
+++ b/tests/sentry/api/endpoints/test_group_events.py
@@ -18,7 +18,7 @@ class GroupEventsTest(APITestCase):
         event_1 = self.create_event('a' * 32, group=group)
         event_2 = self.create_event('b' * 32, group=group)
 
-        url = '/api/0/issues/{}/events/'.format(group.id)
+        url = u'/api/0/issues/{}/events/'.format(group.id)
         response = self.client.get(url, format='json')
 
         assert response.status_code == 200, response.content
@@ -81,7 +81,7 @@ class GroupEventsTest(APITestCase):
             ],
         )
 
-        url = '/api/0/issues/{}/events/'.format(group.id)
+        url = u'/api/0/issues/{}/events/'.format(group.id)
         response = self.client.get(url + '?query=foo:baz', format='json')
 
         assert response.status_code == 200, response.content
@@ -133,7 +133,7 @@ class GroupEventsTest(APITestCase):
         self.create_event('b' * 32, group=group)
         query = event_1.event_id
 
-        url = '/api/0/issues/{}/events/?query={}'.format(group.id, query)
+        url = u'/api/0/issues/{}/events/?query={}'.format(group.id, query)
         response = self.client.get(url, format='json')
 
         assert response.status_code == 200, response.content
@@ -152,7 +152,7 @@ class GroupEventsTest(APITestCase):
         query_2 = "hello+world"
 
         # Single Word Query
-        url = '/api/0/issues/{}/events/?query={}'.format(group.id, query_1)
+        url = u'/api/0/issues/{}/events/?query={}'.format(group.id, query_1)
         response = self.client.get(url, format='json')
 
         assert response.status_code == 200, response.content
@@ -161,7 +161,7 @@ class GroupEventsTest(APITestCase):
             event_1.id) and response.data[0]['eventID'] == event_1.event_id
 
         # Multiple Word Query
-        url = '/api/0/issues/{}/events/?query={}'.format(group.id, query_2)
+        url = u'/api/0/issues/{}/events/?query={}'.format(group.id, query_2)
         response = self.client.get(url, format='json')
 
         assert response.status_code == 200, response.content
@@ -210,7 +210,7 @@ class GroupEventsTest(APITestCase):
                 ],
             )
 
-        url = '/api/0/issues/{}/events/'.format(group.id)
+        url = u'/api/0/issues/{}/events/'.format(group.id)
         response = self.client.get(url + '?environment=production', format='json')
 
         assert response.status_code == 200, response.content
@@ -218,13 +218,13 @@ class GroupEventsTest(APITestCase):
             six.text_type(events['production'].id),
         ])
 
-        url = '/api/0/issues/{}/events/'.format(group.id)
+        url = u'/api/0/issues/{}/events/'.format(group.id)
         response = self.client.get(url + '?environment=invalid', format='json')
 
         assert response.status_code == 200, response.content
         assert response.data == []
 
-        url = '/api/0/issues/{}/events/'.format(group.id)
+        url = u'/api/0/issues/{}/events/'.format(group.id)
         response = self.client.get(
             url + '?environment=production&query=environment:development',
             format='json')
@@ -245,7 +245,7 @@ class GroupEventsTest(APITestCase):
         event_2 = self.create_event('b' * 32, group=group)
 
         with self.options({'system.event-retention-days': 1}):
-            response = self.client.get('/api/0/issues/{}/events/'.format(group.id))
+            response = self.client.get(u'/api/0/issues/{}/events/'.format(group.id))
 
         assert response.status_code == 200, response.content
         assert len(response.data) == 1
diff --git a/tests/sentry/api/endpoints/test_group_events_latest.py b/tests/sentry/api/endpoints/test_group_events_latest.py
index 468adabf34..3b649bcb5f 100644
--- a/tests/sentry/api/endpoints/test_group_events_latest.py
+++ b/tests/sentry/api/endpoints/test_group_events_latest.py
@@ -23,7 +23,7 @@ class GroupEventsLatestTest(APITestCase):
             datetime=datetime(2013, 8, 13, 3, 8, 26),
         )
 
-        url = '/api/0/issues/{}/events/latest/'.format(group.id)
+        url = u'/api/0/issues/{}/events/latest/'.format(group.id)
         response = self.client.get(url, format='json')
 
         assert response.status_code == 200
diff --git a/tests/sentry/api/endpoints/test_group_events_oldest.py b/tests/sentry/api/endpoints/test_group_events_oldest.py
index 4328e743f0..2aa1555b09 100644
--- a/tests/sentry/api/endpoints/test_group_events_oldest.py
+++ b/tests/sentry/api/endpoints/test_group_events_oldest.py
@@ -23,7 +23,7 @@ class GroupEventsOldestTest(APITestCase):
             datetime=datetime(2013, 8, 13, 3, 8, 26),
         )
 
-        url = '/api/0/issues/{}/events/oldest/'.format(group.id)
+        url = u'/api/0/issues/{}/events/oldest/'.format(group.id)
         response = self.client.get(url, format='json')
 
         assert response.status_code == 200
diff --git a/tests/sentry/api/endpoints/test_group_hashes.py b/tests/sentry/api/endpoints/test_group_hashes.py
index 0102b8d31f..b274c65ddf 100644
--- a/tests/sentry/api/endpoints/test_group_hashes.py
+++ b/tests/sentry/api/endpoints/test_group_hashes.py
@@ -14,7 +14,7 @@ class GroupHashesTest(APITestCase):
         GroupHash.objects.create(group=group, hash='a' * 32)
         GroupHash.objects.create(group=group, hash='b' * 32)
 
-        url = '/api/0/issues/{}/hashes/'.format(group.id)
+        url = u'/api/0/issues/{}/hashes/'.format(group.id)
         response = self.client.get(url, format='json')
 
         assert response.status_code == 200, response.content
@@ -39,7 +39,7 @@ class GroupHashesTest(APITestCase):
 
         url = '?'.join(
             [
-                '/api/0/issues/{}/hashes/'.format(group.id),
+                u'/api/0/issues/{}/hashes/'.format(group.id),
                 urlencode({
                     'id': [h.hash for h in hashes],
                 }, True),
diff --git a/tests/sentry/api/endpoints/test_group_integration_details.py b/tests/sentry/api/endpoints/test_group_integration_details.py
index 65a4a5826a..7679a82e98 100644
--- a/tests/sentry/api/endpoints/test_group_integration_details.py
+++ b/tests/sentry/api/endpoints/test_group_integration_details.py
@@ -18,7 +18,7 @@ class GroupIntegrationDetailsTest(APITestCase):
         )
         integration.add_organization(org.id)
 
-        path = '/api/0/issues/{}/integrations/{}/?action=link'.format(group.id, integration.id)
+        path = u'/api/0/issues/{}/integrations/{}/?action=link'.format(group.id, integration.id)
 
         with self.feature('organizations:integrations-issue-basic'):
             response = self.client.get(path)
@@ -58,7 +58,7 @@ class GroupIntegrationDetailsTest(APITestCase):
         )
         integration.add_organization(org.id)
 
-        path = '/api/0/issues/{}/integrations/{}/?action=create'.format(group.id, integration.id)
+        path = u'/api/0/issues/{}/integrations/{}/?action=create'.format(group.id, integration.id)
 
         with self.feature('organizations:integrations-issue-basic'):
             response = self.client.get(path)
@@ -112,7 +112,7 @@ class GroupIntegrationDetailsTest(APITestCase):
         )
         integration.add_organization(org.id)
 
-        path = '/api/0/issues/{}/integrations/{}/?action=create'.format(group.id, integration.id)
+        path = u'/api/0/issues/{}/integrations/{}/?action=create'.format(group.id, integration.id)
 
         response = self.client.get(path)
         assert response.status_code == 400
@@ -128,7 +128,7 @@ class GroupIntegrationDetailsTest(APITestCase):
         )
         integration.add_organization(org.id)
 
-        path = '/api/0/issues/{}/integrations/{}/'.format(group.id, integration.id)
+        path = u'/api/0/issues/{}/integrations/{}/'.format(group.id, integration.id)
 
         with self.feature('organizations:integrations-issue-basic'):
             response = self.client.put(path, data={
@@ -159,7 +159,7 @@ class GroupIntegrationDetailsTest(APITestCase):
         )
         integration.add_organization(org.id)
 
-        path = '/api/0/issues/{}/integrations/{}/'.format(group.id, integration.id)
+        path = u'/api/0/issues/{}/integrations/{}/'.format(group.id, integration.id)
 
         response = self.client.put(path, data={
             'externalIssue': 'APP-123'
@@ -177,7 +177,7 @@ class GroupIntegrationDetailsTest(APITestCase):
         )
         integration.add_organization(org.id)
 
-        path = '/api/0/issues/{}/integrations/{}/'.format(group.id, integration.id)
+        path = u'/api/0/issues/{}/integrations/{}/'.format(group.id, integration.id)
 
         with self.feature('organizations:integrations-issue-basic'):
             response = self.client.post(path, data={})
@@ -211,7 +211,7 @@ class GroupIntegrationDetailsTest(APITestCase):
         )
         integration.add_organization(org.id)
 
-        path = '/api/0/issues/{}/integrations/{}/'.format(group.id, integration.id)
+        path = u'/api/0/issues/{}/integrations/{}/'.format(group.id, integration.id)
 
         response = self.client.post(path, data={})
         assert response.status_code == 400
@@ -241,7 +241,7 @@ class GroupIntegrationDetailsTest(APITestCase):
             relationship=GroupLink.Relationship.references,
         )[0]
 
-        path = '/api/0/issues/{}/integrations/{}/?externalIssue={}'.format(
+        path = u'/api/0/issues/{}/integrations/{}/?externalIssue={}'.format(
             group.id, integration.id, external_issue.id,
         )
 
@@ -276,7 +276,7 @@ class GroupIntegrationDetailsTest(APITestCase):
             relationship=GroupLink.Relationship.references,
         )[0]
 
-        path = '/api/0/issues/{}/integrations/{}/?externalIssue={}'.format(
+        path = u'/api/0/issues/{}/integrations/{}/?externalIssue={}'.format(
             group.id, integration.id, external_issue.id,
         )
 
diff --git a/tests/sentry/api/endpoints/test_group_integrations.py b/tests/sentry/api/endpoints/test_group_integrations.py
index 0a900b55f5..4b5d52b04b 100644
--- a/tests/sentry/api/endpoints/test_group_integrations.py
+++ b/tests/sentry/api/endpoints/test_group_integrations.py
@@ -31,7 +31,7 @@ class GroupIntegrationsTest(APITestCase):
             relationship=GroupLink.Relationship.references,
         )
 
-        path = '/api/0/issues/{}/integrations/'.format(group.id)
+        path = u'/api/0/issues/{}/integrations/'.format(group.id)
 
         with self.feature('organizations:integrations-issue-basic'):
             response = self.client.get(path)
@@ -86,7 +86,7 @@ class GroupIntegrationsTest(APITestCase):
             relationship=GroupLink.Relationship.references,
         )
 
-        path = '/api/0/issues/{}/integrations/'.format(group.id)
+        path = u'/api/0/issues/{}/integrations/'.format(group.id)
 
         response = self.client.get(path)
         assert response.data == []
diff --git a/tests/sentry/api/endpoints/test_group_notes.py b/tests/sentry/api/endpoints/test_group_notes.py
index a7ea741c43..0edcbc9647 100644
--- a/tests/sentry/api/endpoints/test_group_notes.py
+++ b/tests/sentry/api/endpoints/test_group_notes.py
@@ -26,7 +26,7 @@ class GroupNoteTest(APITestCase):
 
         self.login_as(user=self.user)
 
-        url = '/api/0/issues/{}/comments/'.format(group.id)
+        url = u'/api/0/issues/{}/comments/'.format(group.id)
         response = self.client.get(url, format='json')
         assert response.status_code == 200, response.content
         assert len(response.data) == 1
@@ -39,7 +39,7 @@ class GroupNoteCreateTest(APITestCase):
 
         self.login_as(user=self.user)
 
-        url = '/api/0/issues/{}/comments/'.format(group.id)
+        url = u'/api/0/issues/{}/comments/'.format(group.id)
 
         response = self.client.post(url, format='json')
         assert response.status_code == 400
@@ -90,7 +90,7 @@ class GroupNoteCreateTest(APITestCase):
 
         self.login_as(user=self.user)
 
-        url = '/api/0/issues/{}/comments/'.format(group.id)
+        url = u'/api/0/issues/{}/comments/'.format(group.id)
 
         # mentioning a member that does not exist returns 400
         response = self.client.post(
@@ -148,7 +148,7 @@ class GroupNoteCreateTest(APITestCase):
 
         self.login_as(user=self.user)
 
-        url = '/api/0/issues/{}/comments/'.format(group.id)
+        url = u'/api/0/issues/{}/comments/'.format(group.id)
 
         # mentioning a team that does not exist returns 400
         response = self.client.post(
@@ -213,7 +213,7 @@ class GroupNoteCreateTest(APITestCase):
 
         self.login_as(user=self.user)
 
-        url = '/api/0/issues/{}/comments/'.format(group.id)
+        url = u'/api/0/issues/{}/comments/'.format(group.id)
 
         with self.feature({
             'organizations:integrations-issue-sync': True,
diff --git a/tests/sentry/api/endpoints/test_group_notes_details.py b/tests/sentry/api/endpoints/test_group_notes_details.py
index bfc337d552..1759e4e599 100644
--- a/tests/sentry/api/endpoints/test_group_notes_details.py
+++ b/tests/sentry/api/endpoints/test_group_notes_details.py
@@ -9,7 +9,7 @@ from sentry.testutils import APITestCase
 class GroupNotesDetailsTest(APITestCase):
     @fixture
     def url(self):
-        return '/api/0/issues/{}/comments/{}/'.format(
+        return u'/api/0/issues/{}/comments/{}/'.format(
             self.group.id,
             self.activity.id,
         )
diff --git a/tests/sentry/api/endpoints/test_group_participants.py b/tests/sentry/api/endpoints/test_group_participants.py
index 941b774298..0edf540104 100644
--- a/tests/sentry/api/endpoints/test_group_participants.py
+++ b/tests/sentry/api/endpoints/test_group_participants.py
@@ -19,7 +19,7 @@ class GroupParticipantsTest(APITestCase):
             is_active=True,
         )
 
-        url = '/api/0/issues/{}/participants/'.format(group.id)
+        url = u'/api/0/issues/{}/participants/'.format(group.id)
         response = self.client.get(url, format='json')
 
         assert response.status_code == 200, response.content
diff --git a/tests/sentry/api/endpoints/test_group_stats.py b/tests/sentry/api/endpoints/test_group_stats.py
index d23f26c773..4e82e4cefd 100644
--- a/tests/sentry/api/endpoints/test_group_stats.py
+++ b/tests/sentry/api/endpoints/test_group_stats.py
@@ -11,7 +11,7 @@ class GroupStatsTest(APITestCase):
         group1 = self.create_group()
         group2 = self.create_group()
 
-        url = '/api/0/issues/{}/stats/'.format(group1.id)
+        url = u'/api/0/issues/{}/stats/'.format(group1.id)
         response = self.client.get(url, format='json')
 
         assert response.status_code == 200, response.content
diff --git a/tests/sentry/api/endpoints/test_group_tagkey_details.py b/tests/sentry/api/endpoints/test_group_tagkey_details.py
index e48756cd15..d4053e6733 100644
--- a/tests/sentry/api/endpoints/test_group_tagkey_details.py
+++ b/tests/sentry/api/endpoints/test_group_tagkey_details.py
@@ -44,7 +44,7 @@ class GroupTagDetailsTest(APITestCase):
 
         self.login_as(user=self.user)
 
-        url = '/api/0/issues/{}/tags/{}/'.format(group.id, tagkey.key)
+        url = u'/api/0/issues/{}/tags/{}/'.format(group.id, tagkey.key)
         response = self.client.get(url, format='json')
         assert response.status_code == 200, response.content
         assert response.data['key'] == six.text_type(tagkey.key)
diff --git a/tests/sentry/api/endpoints/test_group_tagkey_values.py b/tests/sentry/api/endpoints/test_group_tagkey_values.py
index a6c1d8a604..de9de9f482 100644
--- a/tests/sentry/api/endpoints/test_group_tagkey_values.py
+++ b/tests/sentry/api/endpoints/test_group_tagkey_values.py
@@ -28,7 +28,7 @@ class GroupTagKeyValuesTest(APITestCase):
 
         self.login_as(user=self.user)
 
-        url = '/api/0/issues/{}/tags/{}/values/'.format(group.id, key)
+        url = u'/api/0/issues/{}/tags/{}/values/'.format(group.id, key)
 
         response = self.client.get(url)
 
@@ -68,7 +68,7 @@ class GroupTagKeyValuesTest(APITestCase):
 
         self.login_as(user=self.user)
 
-        url = '/api/0/issues/{}/tags/user/values/'.format(group.id)
+        url = u'/api/0/issues/{}/tags/user/values/'.format(group.id)
 
         response = self.client.get(url)
 
diff --git a/tests/sentry/api/endpoints/test_group_tags.py b/tests/sentry/api/endpoints/test_group_tags.py
index 74137156b6..ad37d0e388 100644
--- a/tests/sentry/api/endpoints/test_group_tags.py
+++ b/tests/sentry/api/endpoints/test_group_tags.py
@@ -49,7 +49,7 @@ class GroupTagsTest(APITestCase):
 
         self.login_as(user=self.user)
 
-        url = '/api/0/issues/{}/tags/'.format(this_group.id)
+        url = u'/api/0/issues/{}/tags/'.format(this_group.id)
         response = self.client.get(url, format='json')
         assert response.status_code == 200, response.content
         assert len(response.data) == 3
@@ -67,6 +67,6 @@ class GroupTagsTest(APITestCase):
     def test_invalid_env(self):
         this_group = self.create_group()
         self.login_as(user=self.user)
-        url = '/api/0/issues/{}/tags/'.format(this_group.id)
+        url = u'/api/0/issues/{}/tags/'.format(this_group.id)
         response = self.client.get(url, {'environment': 'notreal'}, format='json')
         assert response.data == []
diff --git a/tests/sentry/api/endpoints/test_group_user_reports.py b/tests/sentry/api/endpoints/test_group_user_reports.py
index 58c2e1a547..76207b3fd0 100644
--- a/tests/sentry/api/endpoints/test_group_user_reports.py
+++ b/tests/sentry/api/endpoints/test_group_user_reports.py
@@ -6,7 +6,7 @@ from exam import fixture
 class GroupUserReport(UserReportEnvironmentTestCase):
     @fixture
     def path(self):
-        return '/api/0/groups/{}/user-feedback/'.format(
+        return u'/api/0/groups/{}/user-feedback/'.format(
             self.group.id,
         )
 
diff --git a/tests/sentry/api/endpoints/test_index.py b/tests/sentry/api/endpoints/test_index.py
index 2e9ee69de6..a26d26e1ba 100644
--- a/tests/sentry/api/endpoints/test_index.py
+++ b/tests/sentry/api/endpoints/test_index.py
@@ -35,7 +35,7 @@ class ApiIndexTest(APITestCase):
         url = reverse('sentry-api-index')
         response = self.client.get(
             url,
-            HTTP_AUTHORIZATION='Basic ' + b64encode('{}:'.format(key.key)),
+            HTTP_AUTHORIZATION='Basic ' + b64encode(u'{}:'.format(key.key)),
         )
         assert response.status_code == 200
         assert response.data['version'] == '0'
@@ -49,7 +49,7 @@ class ApiIndexTest(APITestCase):
         url = reverse('sentry-api-index')
         response = self.client.get(
             url,
-            HTTP_AUTHORIZATION='Bearer {}'.format(token.token),
+            HTTP_AUTHORIZATION=u'Bearer {}'.format(token.token),
         )
         assert response.status_code == 200
         assert response.data['version'] == '0'
diff --git a/tests/sentry/api/endpoints/test_organization_activity.py b/tests/sentry/api/endpoints/test_organization_activity.py
index e764ef7612..6b009228da 100644
--- a/tests/sentry/api/endpoints/test_organization_activity.py
+++ b/tests/sentry/api/endpoints/test_organization_activity.py
@@ -21,7 +21,7 @@ class OrganizationActivityTest(APITestCase):
 
         self.login_as(user=self.user)
 
-        url = '/api/0/organizations/{}/activity/'.format(org.slug)
+        url = u'/api/0/organizations/{}/activity/'.format(org.slug)
         response = self.client.get(url, format='json')
         assert response.status_code == 200, response.content
         assert len(response.data) == 1
diff --git a/tests/sentry/api/endpoints/test_organization_details.py b/tests/sentry/api/endpoints/test_organization_details.py
index 71c1788012..f77e6de574 100644
--- a/tests/sentry/api/endpoints/test_organization_details.py
+++ b/tests/sentry/api/endpoints/test_organization_details.py
@@ -233,18 +233,18 @@ class OrganizationUpdateTest(APITestCase):
         log = AuditLogEntry.objects.get(organization=org)
         assert log.get_event_display() == 'org.edit'
         # org fields & flags
-        assert 'to {}'.format(data['defaultRole']) in log.data['default_role']
-        assert 'to {}'.format(data['openMembership']) in log.data['allow_joinleave']
-        assert 'to {}'.format(data['isEarlyAdopter']) in log.data['early_adopter']
-        assert 'to {}'.format(data['enhancedPrivacy']) in log.data['enhanced_privacy']
-        assert 'to {}'.format(not data['allowSharedIssues']) in log.data['disable_shared_issues']
-        assert 'to {}'.format(data['require2FA']) in log.data['require_2fa']
+        assert u'to {}'.format(data['defaultRole']) in log.data['default_role']
+        assert u'to {}'.format(data['openMembership']) in log.data['allow_joinleave']
+        assert u'to {}'.format(data['isEarlyAdopter']) in log.data['early_adopter']
+        assert u'to {}'.format(data['enhancedPrivacy']) in log.data['enhanced_privacy']
+        assert u'to {}'.format(not data['allowSharedIssues']) in log.data['disable_shared_issues']
+        assert u'to {}'.format(data['require2FA']) in log.data['require_2fa']
         # org options
-        assert 'to {}'.format(data['dataScrubber']) in log.data['dataScrubber']
-        assert 'to {}'.format(data['dataScrubberDefaults']) in log.data['dataScrubberDefaults']
-        assert 'to {}'.format(data['sensitiveFields']) in log.data['sensitiveFields']
-        assert 'to {}'.format(data['safeFields']) in log.data['safeFields']
-        assert 'to {}'.format(data['scrubIPAddresses']) in log.data['scrubIPAddresses']
+        assert u'to {}'.format(data['dataScrubber']) in log.data['dataScrubber']
+        assert u'to {}'.format(data['dataScrubberDefaults']) in log.data['dataScrubberDefaults']
+        assert u'to {}'.format(data['sensitiveFields']) in log.data['sensitiveFields']
+        assert u'to {}'.format(data['safeFields']) in log.data['safeFields']
+        assert u'to {}'.format(data['scrubIPAddresses']) in log.data['scrubIPAddresses']
 
     def test_setting_legacy_rate_limits(self):
         org = self.create_organization(owner=self.user)
diff --git a/tests/sentry/api/endpoints/test_organization_index.py b/tests/sentry/api/endpoints/test_organization_index.py
index ba23a70008..4f11420b6e 100644
--- a/tests/sentry/api/endpoints/test_organization_index.py
+++ b/tests/sentry/api/endpoints/test_organization_index.py
@@ -15,7 +15,7 @@ class OrganizationsListTest(APITestCase):
     def test_membership(self):
         org = self.create_organization(owner=self.user)
         self.login_as(user=self.user)
-        response = self.client.get('{}'.format(self.path))
+        response = self.client.get(u'{}'.format(self.path))
         assert response.status_code == 200
         assert len(response.data) == 1
         assert response.data[0]['id'] == six.text_type(org.id)
@@ -23,7 +23,7 @@ class OrganizationsListTest(APITestCase):
     def test_show_all_with_superuser(self):
         org = self.organization
         self.login_as(user=self.create_user(is_superuser=True), superuser=True)
-        response = self.client.get('{}?show=all'.format(self.path))
+        response = self.client.get(u'{}?show=all'.format(self.path))
         assert response.status_code == 200
         assert len(response.data) == 2
         assert response.data[0]['id'] == six.text_type(org.id)
@@ -31,7 +31,7 @@ class OrganizationsListTest(APITestCase):
     def test_show_all_without_superuser(self):
         self.create_organization(owner=self.user)
         self.login_as(user=self.create_user(is_superuser=False))
-        response = self.client.get('{}?show=all'.format(self.path))
+        response = self.client.get(u'{}?show=all'.format(self.path))
         assert response.status_code == 200
         assert len(response.data) == 0
 
@@ -55,7 +55,7 @@ class OrganizationsListTest(APITestCase):
         )
 
         self.login_as(user=self.user)
-        response = self.client.get('{}?owner=1'.format(self.path))
+        response = self.client.get(u'{}?owner=1'.format(self.path))
         assert response.status_code == 200
         assert len(response.data) == 3
         assert response.data[0]['organization']['id'] == six.text_type(org.id)
@@ -68,14 +68,14 @@ class OrganizationsListTest(APITestCase):
     def test_status_query(self):
         org = self.create_organization(owner=self.user, status=OrganizationStatus.PENDING_DELETION)
         self.login_as(user=self.user)
-        response = self.client.get('{}?query=status:pending_deletion'.format(self.path))
+        response = self.client.get(u'{}?query=status:pending_deletion'.format(self.path))
         assert response.status_code == 200
         assert len(response.data) == 1
         assert response.data[0]['id'] == six.text_type(org.id)
-        response = self.client.get('{}?query=status:deletion_in_progress'.format(self.path))
+        response = self.client.get(u'{}?query=status:deletion_in_progress'.format(self.path))
         assert response.status_code == 200
         assert len(response.data) == 0
-        response = self.client.get('{}?query=status:invalid_status'.format(self.path))
+        response = self.client.get(u'{}?query=status:invalid_status'.format(self.path))
         assert response.status_code == 200
         assert len(response.data) == 0
 
diff --git a/tests/sentry/api/endpoints/test_organization_integration_details.py b/tests/sentry/api/endpoints/test_organization_integration_details.py
index ea29ff59e2..a56e2e2cfd 100644
--- a/tests/sentry/api/endpoints/test_organization_integration_details.py
+++ b/tests/sentry/api/endpoints/test_organization_integration_details.py
@@ -18,7 +18,7 @@ class OrganizationIntegrationDetailsTest(APITestCase):
         )
         self.integration.add_organization(self.org.id, config={'setting': 'value'})
 
-        self.path = '/api/0/organizations/{}/integrations/{}/'.format(
+        self.path = u'/api/0/organizations/{}/integrations/{}/'.format(
             self.org.slug, self.integration.id)
 
     def test_simple(self):
diff --git a/tests/sentry/api/endpoints/test_organization_integration_repos.py b/tests/sentry/api/endpoints/test_organization_integration_repos.py
index 40b4a32a43..e891088643 100644
--- a/tests/sentry/api/endpoints/test_organization_integration_repos.py
+++ b/tests/sentry/api/endpoints/test_organization_integration_repos.py
@@ -16,7 +16,7 @@ class OrganizationIntegrationReposTest(APITestCase):
             name='Example',
         )
         self.integration.add_organization(self.org.id)
-        self.path = '/api/0/organizations/{}/integrations/{}/repos/'.format(
+        self.path = u'/api/0/organizations/{}/integrations/{}/repos/'.format(
             self.org.slug, self.integration.id)
 
     @patch('sentry.integrations.github.GitHubAppsClient.get_repositories', return_value=[])
@@ -36,7 +36,7 @@ class OrganizationIntegrationReposTest(APITestCase):
             name='Example',
         )
         integration.add_organization(self.org.id)
-        path = '/api/0/organizations/{}/integrations/{}/repos/'.format(
+        path = u'/api/0/organizations/{}/integrations/{}/repos/'.format(
             self.org.slug, integration.id)
         response = self.client.get(path, format='json')
 
diff --git a/tests/sentry/api/endpoints/test_organization_integrations.py b/tests/sentry/api/endpoints/test_organization_integrations.py
index 58950672a2..ed894148a6 100644
--- a/tests/sentry/api/endpoints/test_organization_integrations.py
+++ b/tests/sentry/api/endpoints/test_organization_integrations.py
@@ -15,7 +15,7 @@ class OrganizationIntegrationsListTest(APITestCase):
             name='Example',
         )
         integration.add_organization(org.id)
-        path = '/api/0/organizations/{}/integrations/'.format(org.slug)
+        path = u'/api/0/organizations/{}/integrations/'.format(org.slug)
 
         response = self.client.get(path, format='json')
 
diff --git a/tests/sentry/api/endpoints/test_organization_issues_new.py b/tests/sentry/api/endpoints/test_organization_issues_new.py
index cab520424c..d280d219a3 100644
--- a/tests/sentry/api/endpoints/test_organization_issues_new.py
+++ b/tests/sentry/api/endpoints/test_organization_issues_new.py
@@ -31,7 +31,7 @@ class OrganizationIssuesNewTest(APITestCase):
 
         self.login_as(user=user)
 
-        url = '/api/0/organizations/{}/issues/new/'.format(
+        url = u'/api/0/organizations/{}/issues/new/'.format(
             org.slug,
         )
         response = self.client.get(url, format='json')
diff --git a/tests/sentry/api/endpoints/test_organization_member_index.py b/tests/sentry/api/endpoints/test_organization_member_index.py
index f322519df8..b239a2de96 100644
--- a/tests/sentry/api/endpoints/test_organization_member_index.py
+++ b/tests/sentry/api/endpoints/test_organization_member_index.py
@@ -112,7 +112,7 @@ class OrganizationMemberListTest(APITestCase):
 
         assert len(mail.outbox) == 1
         assert mail.outbox[0].to == ['foo@example.com']
-        assert mail.outbox[0].subject == 'Join {} in using Sentry'.format(
+        assert mail.outbox[0].subject == u'Join {} in using Sentry'.format(
             self.org.name)
 
     def test_existing_user_for_invite(self):
diff --git a/tests/sentry/api/endpoints/test_organization_member_unreleased_commits.py b/tests/sentry/api/endpoints/test_organization_member_unreleased_commits.py
index e949bd9996..59beb816e7 100644
--- a/tests/sentry/api/endpoints/test_organization_member_unreleased_commits.py
+++ b/tests/sentry/api/endpoints/test_organization_member_unreleased_commits.py
@@ -50,7 +50,7 @@ class OrganizationMemberUnreleasedCommitsTest(APITestCase):
             project=project, repo=repo, date_added=datetime(
                 2015, 1, 3, tzinfo=timezone.utc))
 
-        path = '/api/0/organizations/{}/members/me/unreleased-commits/'.format(org.slug)
+        path = u'/api/0/organizations/{}/members/me/unreleased-commits/'.format(org.slug)
 
         self.login_as(user)
 
diff --git a/tests/sentry/api/endpoints/test_organization_projects.py b/tests/sentry/api/endpoints/test_organization_projects.py
index 2d5421b95a..ff5c5c34bc 100644
--- a/tests/sentry/api/endpoints/test_organization_projects.py
+++ b/tests/sentry/api/endpoints/test_organization_projects.py
@@ -13,7 +13,7 @@ class OrganizationProjectsTest(APITestCase):
         team = self.create_team(organization=org)
         project = self.create_project(teams=[team])
 
-        path = '/api/0/organizations/{}/projects/'.format(org.slug)
+        path = u'/api/0/organizations/{}/projects/'.format(org.slug)
         response = self.client.get(path)
 
         assert response.status_code == 200, response.content
@@ -27,24 +27,24 @@ class OrganizationProjectsTest(APITestCase):
         team = self.create_team(organization=org)
         self.create_project(teams=[team])
 
-        path = '/api/0/organizations/{}/projects/'.format(org.slug)
+        path = u'/api/0/organizations/{}/projects/'.format(org.slug)
 
-        response = self.client.get('{}?statsPeriod=24h'.format(path), format='json')
+        response = self.client.get(u'{}?statsPeriod=24h'.format(path), format='json')
         assert response.status_code == 200
         assert len(response.data) == 1
         assert response.data[0]['stats']
 
-        response = self.client.get('{}?statsPeriod=14d'.format(path), format='json')
+        response = self.client.get(u'{}?statsPeriod=14d'.format(path), format='json')
         assert response.status_code == 200
         assert len(response.data) == 1
         assert response.data[0]['stats']
 
-        response = self.client.get('{}?statsPeriod='.format(path), format='json')
+        response = self.client.get(u'{}?statsPeriod='.format(path), format='json')
         assert response.status_code == 200
         assert len(response.data) == 1
         assert 'stats' not in response.data[0]
 
-        response = self.client.get('{}?statsPeriod=48h'.format(path), format='json')
+        response = self.client.get(u'{}?statsPeriod=48h'.format(path), format='json')
         assert response.status_code == 400
 
     def test_search(self):
@@ -54,14 +54,14 @@ class OrganizationProjectsTest(APITestCase):
         team = self.create_team(organization=org)
         project = self.create_project(teams=[team], name='bar', slug='bar')
 
-        path = '/api/0/organizations/{}/projects/?query=bar'.format(org.slug)
+        path = u'/api/0/organizations/{}/projects/?query=bar'.format(org.slug)
         response = self.client.get(path)
 
         assert response.status_code == 200, response.content
         assert len(response.data) == 1
         assert response.data[0]['id'] == six.text_type(project.id)
 
-        path = '/api/0/organizations/{}/projects/?query=baz'.format(org.slug)
+        path = u'/api/0/organizations/{}/projects/?query=baz'.format(org.slug)
         response = self.client.get(path)
 
         assert response.status_code == 200, response.content
@@ -76,14 +76,15 @@ class OrganizationProjectsTest(APITestCase):
         project_foo = self.create_project(teams=[team], name='foo', slug='foo')
         self.create_project(teams=[team], name='baz', slug='baz')
 
-        path = '/api/0/organizations/{}/projects/?query=id:{}'.format(org.slug, project_foo.id)
+        path = u'/api/0/organizations/{}/projects/?query=id:{}'.format(org.slug, project_foo.id)
         response = self.client.get(path)
 
         assert response.status_code == 200, response.content
         assert len(response.data) == 1
         assert response.data[0]['id'] == six.text_type(project_foo.id)
 
-        path = '/api/0/organizations/{}/projects/?query=id:{} id:{}'.format(org.slug, project_bar.id, project_foo.id)
+        path = u'/api/0/organizations/{}/projects/?query=id:{} id:{}'.format(
+            org.slug, project_bar.id, project_foo.id)
         response = self.client.get(path)
 
         assert response.status_code == 200, response.content
diff --git a/tests/sentry/api/endpoints/test_organization_releases.py b/tests/sentry/api/endpoints/test_organization_releases.py
index abd4123633..989e7726d7 100644
--- a/tests/sentry/api/endpoints/test_organization_releases.py
+++ b/tests/sentry/api/endpoints/test_organization_releases.py
@@ -755,7 +755,7 @@ class OrganizationReleaseCreateTest(APITestCase):
             url,
             data={'version': '1.2.1',
                   'projects': [project1.slug]},
-            HTTP_AUTHORIZATION='Basic ' + b64encode('{}:'.format(bad_api_key.key))
+            HTTP_AUTHORIZATION='Basic ' + b64encode(u'{}:'.format(bad_api_key.key))
         )
         assert response.status_code == 403
 
@@ -768,7 +768,7 @@ class OrganizationReleaseCreateTest(APITestCase):
             url,
             data={'version': '1.2.1',
                   'projects': [project1.slug]},
-            HTTP_AUTHORIZATION='Basic ' + b64encode('{}:'.format(wrong_org_api_key.key))
+            HTTP_AUTHORIZATION='Basic ' + b64encode(u'{}:'.format(wrong_org_api_key.key))
         )
         assert response.status_code == 403
 
@@ -781,7 +781,7 @@ class OrganizationReleaseCreateTest(APITestCase):
             url,
             data={'version': '1.2.1',
                   'projects': [project1.slug]},
-            HTTP_AUTHORIZATION='Basic ' + b64encode('{}:'.format(good_api_key.key))
+            HTTP_AUTHORIZATION='Basic ' + b64encode(u'{}:'.format(good_api_key.key))
         )
         assert response.status_code == 201, response.content
 
@@ -838,7 +838,7 @@ class OrganizationReleaseCreateTest(APITestCase):
                 ],
                 'projects': [project1.slug]
             },
-            HTTP_AUTHORIZATION='Bearer {}'.format(api_token.token)
+            HTTP_AUTHORIZATION=u'Bearer {}'.format(api_token.token)
         )
 
         mock_fetch_commits.apply_async.assert_called_with(
diff --git a/tests/sentry/api/endpoints/test_organization_stats.py b/tests/sentry/api/endpoints/test_organization_stats.py
index 86d6cd1465..d2b0ace5ae 100644
--- a/tests/sentry/api/endpoints/test_organization_stats.py
+++ b/tests/sentry/api/endpoints/test_organization_stats.py
@@ -34,7 +34,7 @@ class OrganizationStatsTest(APITestCase):
         tsdb.incr(tsdb.models.organization_total_received, org.id, count=3)
 
         url = reverse('sentry-api-0-organization-stats', args=[org.slug])
-        response = self.client.get('{}?resolution=1d'.format(url))
+        response = self.client.get(u'{}?resolution=1d'.format(url))
 
         assert response.status_code == 200, response.content
         assert response.data[-1][1] == 3, response.data
diff --git a/tests/sentry/api/endpoints/test_organization_teams.py b/tests/sentry/api/endpoints/test_organization_teams.py
index dc8de9a37d..9a00c7503e 100644
--- a/tests/sentry/api/endpoints/test_organization_teams.py
+++ b/tests/sentry/api/endpoints/test_organization_teams.py
@@ -23,7 +23,7 @@ class OrganizationTeamsListTest(APITestCase):
             teams=[team1],
         )
 
-        path = '/api/0/organizations/{}/teams/'.format(org.slug)
+        path = u'/api/0/organizations/{}/teams/'.format(org.slug)
 
         self.login_as(user=user)
 
@@ -50,14 +50,14 @@ class OrganizationTeamsListTest(APITestCase):
 
         self.login_as(user=user)
 
-        path = '/api/0/organizations/{}/teams/?query=bar'.format(org.slug)
+        path = u'/api/0/organizations/{}/teams/?query=bar'.format(org.slug)
         response = self.client.get(path)
 
         assert response.status_code == 200, response.content
         assert len(response.data) == 1
         assert response.data[0]['id'] == six.text_type(team.id)
 
-        path = '/api/0/organizations/{}/teams/?query=baz'.format(org.slug)
+        path = u'/api/0/organizations/{}/teams/?query=baz'.format(org.slug)
         response = self.client.get(path)
 
         assert response.status_code == 200, response.content
diff --git a/tests/sentry/api/endpoints/test_project_group_index.py b/tests/sentry/api/endpoints/test_project_group_index.py
index d4b4f8cfee..0032552c0e 100644
--- a/tests/sentry/api/endpoints/test_project_group_index.py
+++ b/tests/sentry/api/endpoints/test_project_group_index.py
@@ -32,7 +32,7 @@ class GroupListTest(APITestCase):
 
     @fixture
     def path(self):
-        return '/api/0/projects/{}/{}/issues/'.format(
+        return u'/api/0/projects/{}/{}/issues/'.format(
             self.project.organization.slug,
             self.project.slug,
         )
@@ -47,7 +47,7 @@ class GroupListTest(APITestCase):
         self.login_as(user=self.user)
 
         response = self.client.get(
-            '{}?sort_by=date&query=is:unresolved'.format(self.path),
+            u'{}?sort_by=date&query=is:unresolved'.format(self.path),
             format='json',
         )
         assert response.status_code == 200
@@ -71,7 +71,7 @@ class GroupListTest(APITestCase):
 
         self.login_as(user=self.user)
         response = self.client.get(
-            '{}?sort_by=date&limit=1'.format(self.path),
+            u'{}?sort_by=date&limit=1'.format(self.path),
             format='json',
         )
         assert response.status_code == 200
@@ -141,16 +141,16 @@ class GroupListTest(APITestCase):
 
         self.login_as(user=self.user)
 
-        response = self.client.get('{}?statsPeriod=24h'.format(self.path), format='json')
+        response = self.client.get(u'{}?statsPeriod=24h'.format(self.path), format='json')
         assert response.status_code == 200
 
-        response = self.client.get('{}?statsPeriod=14d'.format(self.path), format='json')
+        response = self.client.get(u'{}?statsPeriod=14d'.format(self.path), format='json')
         assert response.status_code == 200
 
-        response = self.client.get('{}?statsPeriod='.format(self.path), format='json')
+        response = self.client.get(u'{}?statsPeriod='.format(self.path), format='json')
         assert response.status_code == 200
 
-        response = self.client.get('{}?statsPeriod=48h'.format(self.path), format='json')
+        response = self.client.get(u'{}?statsPeriod=48h'.format(self.path), format='json')
         assert response.status_code == 400
 
     def test_environment(self):
@@ -198,7 +198,7 @@ class GroupListTest(APITestCase):
 
         self.login_as(user=self.user)
 
-        response = self.client.get('{}?query={}'.format(self.path, 'c' * 32), format='json')
+        response = self.client.get(u'{}?query={}'.format(self.path, 'c' * 32), format='json')
         assert response.status_code == 200
         assert len(response.data) == 1
         assert response.data[0]['id'] == six.text_type(group.id)
@@ -220,7 +220,7 @@ class GroupListTest(APITestCase):
         self.login_as(user=self.user)
 
         response = self.client.get(
-            '{}?query={}&environment=test'.format(
+            u'{}?query={}&environment=test'.format(
                 self.path, 'c' * 32), format='json')
         assert response.status_code == 200
         assert len(response.data) == 1
@@ -241,7 +241,7 @@ class GroupListTest(APITestCase):
 
         self.login_as(user=self.user)
         response = self.client.get(
-            '{}?query=%20%20{}%20%20'.format(self.path, 'c' * 32), format='json'
+            u'{}?query=%20%20{}%20%20'.format(self.path, 'c' * 32), format='json'
         )
         assert response.status_code == 200
         assert len(response.data) == 1
@@ -254,7 +254,7 @@ class GroupListTest(APITestCase):
         self.create_group(checksum='b' * 32)
 
         self.login_as(user=self.user)
-        response = self.client.get('{}?query={}'.format(self.path, 'c' * 32), format='json')
+        response = self.client.get(u'{}?query={}'.format(self.path, 'c' * 32), format='json')
         assert response.status_code == 200
         assert len(response.data) == 0
 
@@ -347,7 +347,7 @@ class GroupListTest(APITestCase):
 class GroupUpdateTest(APITestCase):
     @fixture
     def path(self):
-        return '/api/0/projects/{}/{}/issues/'.format(
+        return u'/api/0/projects/{}/{}/issues/'.format(
             self.project.organization.slug,
             self.project.slug,
         )
@@ -369,7 +369,7 @@ class GroupUpdateTest(APITestCase):
 
         self.login_as(user=self.user)
         response = self.client.put(
-            '{}?status=unresolved'.format(self.path),
+            u'{}?status=unresolved'.format(self.path),
             data={
                 'status': 'resolved',
             },
@@ -428,14 +428,14 @@ class GroupUpdateTest(APITestCase):
             self.create_group(status=GroupStatus.UNRESOLVED)
 
         response = self.client.get(
-            '{}?sort_by=date&query=is:unresolved'.format(self.path),
+            u'{}?sort_by=date&query=is:unresolved'.format(self.path),
             format='json',
         )
 
         assert len(response.data) == 100
 
         response = self.client.put(
-            '{}?status=unresolved'.format(self.path),
+            u'{}?status=unresolved'.format(self.path),
             data={
                 'status': 'resolved',
             },
@@ -448,7 +448,7 @@ class GroupUpdateTest(APITestCase):
             'statusDetails': {},
         }
         response = self.client.get(
-            '{}?sort_by=date&query=is:unresolved'.format(self.path),
+            u'{}?sort_by=date&query=is:unresolved'.format(self.path),
             format='json',
         )
 
@@ -494,7 +494,7 @@ class GroupUpdateTest(APITestCase):
         )[0]
 
         response = self.client.get(
-            '{}?sort_by=date&query=is:unresolved'.format(self.path),
+            u'{}?sort_by=date&query=is:unresolved'.format(self.path),
             format='json',
         )
 
@@ -506,7 +506,7 @@ class GroupUpdateTest(APITestCase):
                 'organizations:internal-catchall': True,
             }):
                 response = self.client.put(
-                    '{}?status=unresolved'.format(self.path),
+                    u'{}?status=unresolved'.format(self.path),
                     data={
                         'status': 'resolved',
                     },
@@ -526,7 +526,7 @@ class GroupUpdateTest(APITestCase):
                 )
 
         response = self.client.get(
-            '{}?sort_by=date&query=is:unresolved'.format(self.path),
+            u'{}?sort_by=date&query=is:unresolved'.format(self.path),
             format='json',
         )
         assert len(response.data) == 0
@@ -573,7 +573,7 @@ class GroupUpdateTest(APITestCase):
 
         self.login_as(user=self.user)
 
-        url = '{url}?id={group.id}'.format(
+        url = u'{url}?id={group.id}'.format(
             url=self.path,
             group=group,
         )
@@ -615,7 +615,7 @@ class GroupUpdateTest(APITestCase):
         uo1 = UserOption.objects.create(key='self_assign_issue', value='1', project=None, user=user)
 
         self.login_as(user=user)
-        url = '{url}?id={group.id}'.format(url=self.path, group=group)
+        url = u'{url}?id={group.id}'.format(url=self.path, group=group)
         response = self.client.put(
             url,
             data={
@@ -654,7 +654,7 @@ class GroupUpdateTest(APITestCase):
 
         self.login_as(user=self.user)
 
-        url = '{url}?id={group.id}'.format(
+        url = u'{url}?id={group.id}'.format(
             url=self.path,
             group=group,
         )
@@ -701,7 +701,7 @@ class GroupUpdateTest(APITestCase):
         )
 
         self.login_as(user=self.user)
-        url = '{url}?id={group1.id}&id={group2.id}&group4={group4.id}'.format(
+        url = u'{url}?id={group1.id}&id={group2.id}&group4={group4.id}'.format(
             url=self.path,
             group1=group1,
             group2=group2,
@@ -751,7 +751,7 @@ class GroupUpdateTest(APITestCase):
 
         self.login_as(user=self.user)
 
-        url = '{url}?id={group.id}'.format(
+        url = u'{url}?id={group.id}'.format(
             url=self.path,
             group=group,
         )
@@ -806,7 +806,7 @@ class GroupUpdateTest(APITestCase):
 
         self.login_as(user=self.user)
 
-        url = '{url}?id={group.id}'.format(
+        url = u'{url}?id={group.id}'.format(
             url=self.path,
             group=group,
         )
@@ -859,7 +859,7 @@ class GroupUpdateTest(APITestCase):
 
         self.login_as(user=self.user)
 
-        url = '{url}?id={group.id}'.format(
+        url = u'{url}?id={group.id}'.format(
             url=self.path,
             group=group,
         )
@@ -912,7 +912,7 @@ class GroupUpdateTest(APITestCase):
 
         self.login_as(user=self.user)
 
-        url = '{url}?id={group.id}'.format(
+        url = u'{url}?id={group.id}'.format(
             url=self.path,
             group=group,
         )
@@ -959,7 +959,7 @@ class GroupUpdateTest(APITestCase):
 
         self.login_as(user=self.user)
 
-        url = '{url}?id={group.id}'.format(
+        url = u'{url}?id={group.id}'.format(
             url=self.path,
             group=group,
         )
@@ -995,7 +995,7 @@ class GroupUpdateTest(APITestCase):
 
         self.login_as(user=self.user)
 
-        url = '{url}?id={group.id}'.format(
+        url = u'{url}?id={group.id}'.format(
             url=self.path,
             group=group,
         )
@@ -1023,7 +1023,7 @@ class GroupUpdateTest(APITestCase):
 
         self.login_as(user=self.user)
 
-        url = '{url}?id={group.id}'.format(
+        url = u'{url}?id={group.id}'.format(
             url=self.path,
             group=group,
         )
@@ -1051,7 +1051,7 @@ class GroupUpdateTest(APITestCase):
 
         self.login_as(user=self.user)
 
-        url = '{url}?id={group.id}'.format(
+        url = u'{url}?id={group.id}'.format(
             url=self.path,
             group=group,
         )
@@ -1100,7 +1100,7 @@ class GroupUpdateTest(APITestCase):
 
         self.login_as(user=self.user)
 
-        url = '{url}?id={group.id}'.format(
+        url = u'{url}?id={group.id}'.format(
             url=self.path,
             group=group,
         )
@@ -1144,7 +1144,7 @@ class GroupUpdateTest(APITestCase):
 
         self.login_as(user=self.user)
 
-        url = '{url}?id={group.id}'.format(
+        url = u'{url}?id={group.id}'.format(
             url=self.path,
             group=group,
         )
@@ -1184,7 +1184,7 @@ class GroupUpdateTest(APITestCase):
         )
 
         self.login_as(user=self.user)
-        url = '{url}?id={group1.id}&id={group2.id}&group4={group4.id}'.format(
+        url = u'{url}?id={group1.id}&id={group2.id}&group4={group4.id}'.format(
             url=self.path,
             group1=group1,
             group2=group2,
@@ -1231,7 +1231,7 @@ class GroupUpdateTest(APITestCase):
         group4 = self.create_group(project=self.create_project(slug='foo'), checksum='b' * 32)
 
         self.login_as(user=self.user)
-        url = '{url}?id={group1.id}&id={group2.id}&group4={group4.id}'.format(
+        url = u'{url}?id={group1.id}&id={group2.id}&group4={group4.id}'.format(
             url=self.path,
             group1=group1,
             group2=group2,
@@ -1277,7 +1277,7 @@ class GroupUpdateTest(APITestCase):
         group2 = self.create_group(checksum='b' * 32)
 
         self.login_as(user=self.user)
-        url = '{url}?id={group1.id}&id={group2.id}'.format(
+        url = u'{url}?id={group1.id}&id={group2.id}'.format(
             url=self.path,
             group1=group1,
             group2=group2,
@@ -1310,7 +1310,7 @@ class GroupUpdateTest(APITestCase):
             assert bool(g.get_share_id())
 
         self.login_as(user=self.user)
-        url = '{url}?id={group1.id}&id={group2.id}'.format(
+        url = u'{url}?id={group1.id}&id={group2.id}'.format(
             url=self.path,
             group1=group1,
             group2=group2,
@@ -1342,7 +1342,7 @@ class GroupUpdateTest(APITestCase):
         )
 
         self.login_as(user=self.user)
-        url = '{url}?id={group1.id}&id={group2.id}&group4={group4.id}'.format(
+        url = u'{url}?id={group1.id}&id={group2.id}&group4={group4.id}'.format(
             url=self.path,
             group1=group1,
             group2=group2,
@@ -1383,7 +1383,7 @@ class GroupUpdateTest(APITestCase):
         self.create_group(checksum='d' * 32)
 
         self.login_as(user=self.user)
-        url = '{url}?id={group1.id}&id={group2.id}&id={group3.id}'.format(
+        url = u'{url}?id={group1.id}&id={group2.id}&id={group3.id}'.format(
             url=self.path,
             group1=group1,
             group2=group2,
@@ -1421,7 +1421,7 @@ class GroupUpdateTest(APITestCase):
         user = self.user
 
         self.login_as(user=user)
-        url = '{url}?id={group1.id}'.format(
+        url = u'{url}?id={group1.id}'.format(
             url=self.path,
             group1=group1,
         )
@@ -1468,7 +1468,7 @@ class GroupUpdateTest(APITestCase):
 
         self.login_as(user=member)
 
-        url = '{url}?id={group.id}'.format(
+        url = u'{url}?id={group.id}'.format(
             url=self.path,
             group=group,
         )
@@ -1491,7 +1491,7 @@ class GroupUpdateTest(APITestCase):
 
         group.project.add_team(team)
 
-        url = '{url}?id={group.id}'.format(
+        url = u'{url}?id={group.id}'.format(
             url=self.path,
             group=group,
         )
@@ -1536,7 +1536,7 @@ class GroupUpdateTest(APITestCase):
         user = self.user
 
         self.login_as(user=user)
-        url = '{url}?id={group1.id}'.format(
+        url = u'{url}?id={group1.id}'.format(
             url=self.path,
             group1=group1,
         )
@@ -1570,7 +1570,7 @@ class GroupUpdateTest(APITestCase):
 class GroupDeleteTest(APITestCase):
     @fixture
     def path(self):
-        return '/api/0/projects/{}/{}/issues/'.format(
+        return u'/api/0/projects/{}/{}/issues/'.format(
             self.project.organization.slug,
             self.project.slug,
         )
@@ -1596,7 +1596,7 @@ class GroupDeleteTest(APITestCase):
             )
 
         self.login_as(user=self.user)
-        url = '{url}?id={group1.id}&id={group2.id}&group4={group4.id}'.format(
+        url = u'{url}?id={group1.id}&id={group2.id}&group4={group4.id}'.format(
             url=self.path,
             group1=group1,
             group2=group2,
diff --git a/tests/sentry/api/endpoints/test_project_group_stats.py b/tests/sentry/api/endpoints/test_project_group_stats.py
index 872a748c19..a918fb103c 100644
--- a/tests/sentry/api/endpoints/test_project_group_stats.py
+++ b/tests/sentry/api/endpoints/test_project_group_stats.py
@@ -14,7 +14,7 @@ class ProjectGroupStatsTest(APITestCase):
         group1 = self.create_group(project=project)
         group2 = self.create_group(project=project)
 
-        url = '/api/0/projects/{}/{}/issues/stats/'.format(
+        url = u'/api/0/projects/{}/{}/issues/stats/'.format(
             project.organization.slug,
             project.slug,
         )
diff --git a/tests/sentry/api/endpoints/test_project_index.py b/tests/sentry/api/endpoints/test_project_index.py
index 6f713fd199..9a3d7adcdd 100644
--- a/tests/sentry/api/endpoints/test_project_index.py
+++ b/tests/sentry/api/endpoints/test_project_index.py
@@ -38,7 +38,7 @@ class ProjectsListTest(APITestCase):
         self.create_project(organization=org2)
 
         self.login_as(user=user, superuser=True)
-        response = self.client.get('{}?show=all'.format(self.path))
+        response = self.client.get(u'{}?show=all'.format(self.path))
         assert response.status_code == 200
         assert len(response.data) == 2
 
@@ -130,11 +130,11 @@ class ProjectsListTest(APITestCase):
 
         self.login_as(user=user)
 
-        response = self.client.get('{}?query=id:{}'.format(self.path, project1.id))
+        response = self.client.get(u'{}?query=id:{}'.format(self.path, project1.id))
         assert response.status_code == 200
         assert len(response.data) == 1
         assert response.data[0]['id'] == six.text_type(project1.id)
 
-        response = self.client.get('{}?query=id:-1'.format(self.path))
+        response = self.client.get(u'{}?query=id:-1'.format(self.path))
         assert response.status_code == 200
         assert len(response.data) == 0
diff --git a/tests/sentry/api/endpoints/test_project_key_stats.py b/tests/sentry/api/endpoints/test_project_key_stats.py
index da6e0a00a6..3f3b5ae8b5 100644
--- a/tests/sentry/api/endpoints/test_project_key_stats.py
+++ b/tests/sentry/api/endpoints/test_project_key_stats.py
@@ -10,7 +10,7 @@ class ProjectKeyStatsTest(APITestCase):
         self.project = self.create_project()
         self.key = ProjectKey.objects.create(project=self.project)
         self.login_as(user=self.user)
-        self.path = '/api/0/projects/{}/{}/keys/{}/stats/'.format(
+        self.path = u'/api/0/projects/{}/{}/keys/{}/stats/'.format(
             self.project.organization.slug,
             self.project.slug,
             self.key.public_key,
diff --git a/tests/sentry/api/endpoints/test_project_platforms.py b/tests/sentry/api/endpoints/test_project_platforms.py
index 0e55e085e1..a3ed14e72f 100644
--- a/tests/sentry/api/endpoints/test_project_platforms.py
+++ b/tests/sentry/api/endpoints/test_project_platforms.py
@@ -9,7 +9,7 @@ class ProjectPlatformsTest(APITestCase):
         project = self.create_project()
         self.login_as(user=self.user)
         pp1 = ProjectPlatform.objects.create(project_id=project.id, platform="javascript")
-        url = '/api/0/projects/{}/{}/platforms/'.format(project.organization.slug, project.slug)
+        url = u'/api/0/projects/{}/{}/platforms/'.format(project.organization.slug, project.slug)
         response = self.client.get(url, format='json')
         assert response.status_code == 200, response.content
         assert response.data[0]['platform'] == pp1.platform
diff --git a/tests/sentry/api/endpoints/test_project_servicehook_details.py b/tests/sentry/api/endpoints/test_project_servicehook_details.py
index 2403144843..475d13779e 100644
--- a/tests/sentry/api/endpoints/test_project_servicehook_details.py
+++ b/tests/sentry/api/endpoints/test_project_servicehook_details.py
@@ -13,7 +13,7 @@ class ProjectServiceHookDetailsTest(APITestCase):
             url='http://example.com',
         )[0]
         self.login_as(user=self.user)
-        path = '/api/0/projects/{}/{}/hooks/{}/'.format(
+        path = u'/api/0/projects/{}/{}/hooks/{}/'.format(
             project.organization.slug,
             project.slug,
             hook.guid,
@@ -33,7 +33,7 @@ class UpdateProjectServiceHookTest(APITestCase):
             actor_id=self.user.id,
             url='http://example.com',
         )[0]
-        self.path = '/api/0/projects/{}/{}/hooks/{}/'.format(
+        self.path = u'/api/0/projects/{}/{}/hooks/{}/'.format(
             self.project.organization.slug,
             self.project.slug,
             self.hook.guid,
@@ -62,7 +62,7 @@ class DeleteProjectServiceHookTest(APITestCase):
             actor_id=self.user.id,
             url='http://example.com',
         )[0]
-        self.path = '/api/0/projects/{}/{}/hooks/{}/'.format(
+        self.path = u'/api/0/projects/{}/{}/hooks/{}/'.format(
             self.project.organization.slug,
             self.project.slug,
             self.hook.guid,
diff --git a/tests/sentry/api/endpoints/test_project_servicehook_stats.py b/tests/sentry/api/endpoints/test_project_servicehook_stats.py
index 2313e6af26..3497bd3ec2 100644
--- a/tests/sentry/api/endpoints/test_project_servicehook_stats.py
+++ b/tests/sentry/api/endpoints/test_project_servicehook_stats.py
@@ -14,7 +14,7 @@ class ProjectServiceHookStatsTest(APITestCase):
             url='http://example.com',
         )[0]
         self.login_as(user=self.user)
-        path = '/api/0/projects/{}/{}/hooks/{}/stats/'.format(
+        path = u'/api/0/projects/{}/{}/hooks/{}/stats/'.format(
             project.organization.slug,
             project.slug,
             hook.guid,
diff --git a/tests/sentry/api/endpoints/test_project_servicehooks.py b/tests/sentry/api/endpoints/test_project_servicehooks.py
index 17d1cd4bbd..8516012bc0 100644
--- a/tests/sentry/api/endpoints/test_project_servicehooks.py
+++ b/tests/sentry/api/endpoints/test_project_servicehooks.py
@@ -13,7 +13,7 @@ class ListProjectServiceHooksTest(APITestCase):
             url='http://example.com',
         )[0]
         self.login_as(user=self.user)
-        url = '/api/0/projects/{}/{}/hooks/'.format(
+        url = u'/api/0/projects/{}/{}/hooks/'.format(
             project.organization.slug,
             project.slug,
         )
@@ -29,7 +29,7 @@ class CreateProjectServiceHookTest(APITestCase):
         super(CreateProjectServiceHookTest, self).setUp()
         self.project = self.create_project()
         self.login_as(user=self.user)
-        self.path = '/api/0/projects/{}/{}/hooks/'.format(
+        self.path = u'/api/0/projects/{}/{}/hooks/'.format(
             self.project.organization.slug,
             self.project.slug,
         )
diff --git a/tests/sentry/api/endpoints/test_project_user_reports.py b/tests/sentry/api/endpoints/test_project_user_reports.py
index 89cc34f671..31d2bbc449 100644
--- a/tests/sentry/api/endpoints/test_project_user_reports.py
+++ b/tests/sentry/api/endpoints/test_project_user_reports.py
@@ -43,7 +43,7 @@ class ProjectUserReportListTest(APITestCase):
             group=group2,
         )
 
-        url = '/api/0/projects/{}/{}/user-feedback/'.format(
+        url = u'/api/0/projects/{}/{}/user-feedback/'.format(
             project.organization.slug,
             project.slug,
         )
@@ -72,12 +72,12 @@ class ProjectUserReportListTest(APITestCase):
             group=group,
         )
 
-        url = '/api/0/projects/{}/{}/user-feedback/'.format(
+        url = u'/api/0/projects/{}/{}/user-feedback/'.format(
             project.organization.slug,
             project.slug,
         )
 
-        response = self.client.get('{}?status='.format(url), format='json')
+        response = self.client.get(u'{}?status='.format(url), format='json')
 
         assert response.status_code == 200, response.content
         assert len(response.data) == 1
@@ -107,7 +107,7 @@ class CreateProjectUserReportTest(APITestCase):
         event = self.create_event(group=group, tags={
             'environment': environment.name})
 
-        url = '/api/0/projects/{}/{}/user-feedback/'.format(
+        url = u'/api/0/projects/{}/{}/user-feedback/'.format(
             project.organization.slug,
             project.slug,
         )
@@ -151,7 +151,7 @@ class CreateProjectUserReportTest(APITestCase):
             comments='',
         )
 
-        url = '/api/0/projects/{}/{}/user-feedback/'.format(
+        url = u'/api/0/projects/{}/{}/user-feedback/'.format(
             project.organization.slug,
             project.slug,
         )
@@ -203,7 +203,7 @@ class CreateProjectUserReportTest(APITestCase):
             comments='',
         )
 
-        url = '/api/0/projects/{}/{}/user-feedback/'.format(
+        url = u'/api/0/projects/{}/{}/user-feedback/'.format(
             project.organization.slug,
             project.slug,
         )
@@ -252,7 +252,7 @@ class ProjectUserReportByEnvironmentsTest(UserReportEnvironmentTestCase):
 
     @fixture
     def path(self):
-        return '/api/0/projects/{}/{}/user-feedback/'.format(
+        return u'/api/0/projects/{}/{}/user-feedback/'.format(
             self.project.organization.slug,
             self.project.slug,
         )
diff --git a/tests/sentry/api/endpoints/test_project_users.py b/tests/sentry/api/endpoints/test_project_users.py
index b69e21ae1a..fb3006b797 100644
--- a/tests/sentry/api/endpoints/test_project_users.py
+++ b/tests/sentry/api/endpoints/test_project_users.py
@@ -54,7 +54,7 @@ class ProjectUsersTest(APITestCase):
     def test_empty_search_query(self):
         self.login_as(user=self.user)
 
-        response = self.client.get('{}?query=foo'.format(self.path), format='json')
+        response = self.client.get(u'{}?query=foo'.format(self.path), format='json')
 
         assert response.status_code == 200, response.content
         assert len(response.data) == 0
@@ -62,13 +62,13 @@ class ProjectUsersTest(APITestCase):
     def test_username_search(self):
         self.login_as(user=self.user)
 
-        response = self.client.get('{}?query=username:baz'.format(self.path), format='json')
+        response = self.client.get(u'{}?query=username:baz'.format(self.path), format='json')
 
         assert response.status_code == 200, response.content
         assert len(response.data) == 1
         assert response.data[0]['id'] == six.text_type(self.euser2.id)
 
-        response = self.client.get('{}?query=username:ba'.format(self.path), format='json')
+        response = self.client.get(u'{}?query=username:ba'.format(self.path), format='json')
 
         assert response.status_code == 200, response.content
         assert len(response.data) == 2
@@ -77,14 +77,14 @@ class ProjectUsersTest(APITestCase):
         self.login_as(user=self.user)
 
         response = self.client.get(
-            '{}?query=email:foo@example.com'.format(self.path), format='json'
+            u'{}?query=email:foo@example.com'.format(self.path), format='json'
         )
 
         assert response.status_code == 200, response.content
         assert len(response.data) == 1
         assert response.data[0]['id'] == six.text_type(self.euser1.id)
 
-        response = self.client.get('{}?query=email:@example.com'.format(self.path), format='json')
+        response = self.client.get(u'{}?query=email:@example.com'.format(self.path), format='json')
 
         assert response.status_code == 200, response.content
         assert len(response.data) == 2
@@ -92,13 +92,13 @@ class ProjectUsersTest(APITestCase):
     def test_id_search(self):
         self.login_as(user=self.user)
 
-        response = self.client.get('{}?query=id:1'.format(self.path), format='json')
+        response = self.client.get(u'{}?query=id:1'.format(self.path), format='json')
 
         assert response.status_code == 200, response.content
         assert len(response.data) == 1
         assert response.data[0]['id'] == six.text_type(self.euser1.id)
 
-        response = self.client.get('{}?query=id:3'.format(self.path), format='json')
+        response = self.client.get(u'{}?query=id:3'.format(self.path), format='json')
 
         assert response.status_code == 200, response.content
         assert len(response.data) == 0
@@ -106,13 +106,13 @@ class ProjectUsersTest(APITestCase):
     def test_ip_search(self):
         self.login_as(user=self.user)
 
-        response = self.client.get('{}?query=ip:192.168.0.1'.format(self.path), format='json')
+        response = self.client.get(u'{}?query=ip:192.168.0.1'.format(self.path), format='json')
 
         assert response.status_code == 200, response.content
         assert len(response.data) == 1
         assert response.data[0]['id'] == six.text_type(self.euser2.id)
 
-        response = self.client.get('{}?query=ip:0'.format(self.path), format='json')
+        response = self.client.get(u'{}?query=ip:0'.format(self.path), format='json')
 
         assert response.status_code == 200, response.content
         assert len(response.data) == 2
diff --git a/tests/sentry/api/endpoints/test_shared_group_details.py b/tests/sentry/api/endpoints/test_shared_group_details.py
index 9bec2c42af..ba6c8785f1 100644
--- a/tests/sentry/api/endpoints/test_shared_group_details.py
+++ b/tests/sentry/api/endpoints/test_shared_group_details.py
@@ -24,7 +24,7 @@ class SharedGroupDetailsTest(APITestCase):
         share_id = group.get_share_id()
         assert share_id is not None
 
-        url = '/api/0/shared/issues/{}/'.format(share_id)
+        url = u'/api/0/shared/issues/{}/'.format(share_id)
         response = self.client.get(url, format='json')
 
         assert response.status_code == 200, response.content
@@ -52,7 +52,7 @@ class SharedGroupDetailsTest(APITestCase):
         share_id = group.get_share_id()
         assert share_id is not None
 
-        url = '/api/0/shared/issues/{}/'.format(share_id)
+        url = u'/api/0/shared/issues/{}/'.format(share_id)
         response = self.client.get(url, format='json')
 
         assert response.status_code == 404
@@ -71,7 +71,7 @@ class SharedGroupDetailsTest(APITestCase):
         share_id = group.get_share_id()
         assert share_id is not None
 
-        url = '/api/0/shared/issues/{}/'.format(share_id)
+        url = u'/api/0/shared/issues/{}/'.format(share_id)
         response = self.client.get(url, format='json')
 
         assert response.status_code == 200, response.content
diff --git a/tests/sentry/api/endpoints/test_team_groups_new.py b/tests/sentry/api/endpoints/test_team_groups_new.py
index 250d0762b1..48976ed322 100644
--- a/tests/sentry/api/endpoints/test_team_groups_new.py
+++ b/tests/sentry/api/endpoints/test_team_groups_new.py
@@ -13,7 +13,7 @@ class TeamGroupsNewTest(APITestCase):
         group2 = self.create_group(checksum='b' * 32, project=project2, score=5)
 
         self.login_as(user=self.user)
-        url = '/api/0/teams/{}/{}/issues/new/'.format(
+        url = u'/api/0/teams/{}/{}/issues/new/'.format(
             self.team.organization.slug,
             self.team.slug,
         )
diff --git a/tests/sentry/api/endpoints/test_team_groups_trending.py b/tests/sentry/api/endpoints/test_team_groups_trending.py
index 7688686d38..5e9e98b6b4 100644
--- a/tests/sentry/api/endpoints/test_team_groups_trending.py
+++ b/tests/sentry/api/endpoints/test_team_groups_trending.py
@@ -14,7 +14,7 @@ class TeamGroupsTrendingTest(APITestCase):
 
         self.login_as(user=self.user)
 
-        url = '/api/0/teams/{}/{}/issues/trending/'.format(
+        url = u'/api/0/teams/{}/{}/issues/trending/'.format(
             self.team.organization.slug,
             self.team.slug,
         )
diff --git a/tests/sentry/api/endpoints/test_user_index.py b/tests/sentry/api/endpoints/test_user_index.py
index 3a279d46ad..b871cb30b1 100644
--- a/tests/sentry/api/endpoints/test_user_index.py
+++ b/tests/sentry/api/endpoints/test_user_index.py
@@ -32,40 +32,40 @@ class UserListTest(APITestCase):
 
     def test_generic_query(self):
         self.login_as(user=self.superuser, superuser=True)
-        response = self.client.get('{}?query=@example.com'.format(self.path))
+        response = self.client.get(u'{}?query=@example.com'.format(self.path))
         assert response.status_code == 200
         assert len(response.data) == 2
-        response = self.client.get('{}?query=bar'.format(self.path))
+        response = self.client.get(u'{}?query=bar'.format(self.path))
         assert response.status_code == 200
         assert len(response.data) == 1
         assert response.data[0]['id'] == six.text_type(self.superuser.id)
-        response = self.client.get('{}?query=foobar'.format(self.path))
+        response = self.client.get(u'{}?query=foobar'.format(self.path))
         assert response.status_code == 200
         assert len(response.data) == 0
 
     def test_superuser_query(self):
         self.login_as(user=self.superuser, superuser=True)
-        response = self.client.get('{}?query=is:superuser'.format(self.path))
+        response = self.client.get(u'{}?query=is:superuser'.format(self.path))
         assert response.status_code == 200
         assert len(response.data) == 1
         assert response.data[0]['id'] == six.text_type(self.superuser.id)
 
     def test_email_query(self):
         self.login_as(user=self.superuser, superuser=True)
-        response = self.client.get('{}?query=email:bar@example.com'.format(self.path))
+        response = self.client.get(u'{}?query=email:bar@example.com'.format(self.path))
         assert response.status_code == 200
         assert len(response.data) == 1
         assert response.data[0]['id'] == six.text_type(self.superuser.id)
-        response = self.client.get('{}?query=email:foobar'.format(self.path))
+        response = self.client.get(u'{}?query=email:foobar'.format(self.path))
         assert response.status_code == 200
         assert len(response.data) == 0
 
     def test_basic_query(self):
         UserPermission.objects.create(user=self.superuser, permission='broadcasts.admin')
         self.login_as(user=self.superuser, superuser=True)
-        response = self.client.get('{}?query=permission:broadcasts.admin'.format(self.path))
+        response = self.client.get(u'{}?query=permission:broadcasts.admin'.format(self.path))
         assert response.status_code == 200
         assert len(response.data) == 1
-        response = self.client.get('{}?query=permission:foobar'.format(self.path))
+        response = self.client.get(u'{}?query=permission:foobar'.format(self.path))
         assert response.status_code == 200
         assert len(response.data) == 0
diff --git a/tests/sentry/api/test_base.py b/tests/sentry/api/test_base.py
index 710de6b4a0..92ceae2b91 100644
--- a/tests/sentry/api/test_base.py
+++ b/tests/sentry/api/test_base.py
@@ -32,7 +32,7 @@ class EndpointTest(APITestCase):
         request.method = 'GET'
         request.META['HTTP_ORIGIN'] = 'http://example.com'
         request.META['HTTP_AUTHORIZATION'
-                     ] = 'Basic {}'.format(base64.b64encode(apikey.key).decode('utf-8'))
+                     ] = u'Basic {}'.format(base64.b64encode(apikey.key).decode('utf-8'))
 
         response = _dummy_endpoint(request)
         response.render()
diff --git a/tests/sentry/digests/backends/test_redis.py b/tests/sentry/digests/backends/test_redis.py
index c9325f2ef8..1943a0777e 100644
--- a/tests/sentry/digests/backends/test_redis.py
+++ b/tests/sentry/digests/backends/test_redis.py
@@ -45,7 +45,7 @@ class RedisBackendTestCase(TestCase):
     def test_truncation(self):
         backend = RedisBackend(capacity=2, truncation_chance=1.0)
 
-        records = [Record('record:{}'.format(i), 'value', time.time()) for i in xrange(4)]
+        records = [Record(u'record:{}'.format(i), 'value', time.time()) for i in xrange(4)]
         for record in records:
             backend.add('timeline', record)
 
@@ -90,7 +90,7 @@ class RedisBackendTestCase(TestCase):
 
         # Add 10 items to the timeline.
         for i in xrange(10):
-            backend.add('timeline', Record('record:{}'.format(i), '{}'.format(i), t + i))
+            backend.add('timeline', Record(u'record:{}'.format(i), u'{}'.format(i), t + i))
 
         try:
             with backend.digest('timeline', 0) as records:
@@ -103,7 +103,7 @@ class RedisBackendTestCase(TestCase):
         # deleted from Redis or removed from the digest set.) If we add 10 more
         # items, they should be added to the timeline set (not the digest set.)
         for i in xrange(10, 20):
-            backend.add('timeline', Record('record:{}'.format(i), '{}'.format(i), t + i))
+            backend.add('timeline', Record(u'record:{}'.format(i), u'{}'.format(i), t + i))
 
         # Maintenance should move the timeline back to the waiting state, ...
         backend.maintenance(time.time())
@@ -114,7 +114,7 @@ class RedisBackendTestCase(TestCase):
         # Only the new records should exist -- the older one should have been
         # trimmed to avoid the digest growing beyond the timeline capacity.
         with backend.digest('timeline', 0) as records:
-            expected_keys = set('record:{}'.format(i) for i in xrange(10, 20))
+            expected_keys = set(u'record:{}'.format(i) for i in xrange(10, 20))
             assert set(record.key for record in records) == expected_keys
 
     def test_delete(self):
@@ -150,7 +150,7 @@ class RedisBackendTestCase(TestCase):
         n = 8192
         t = time.time()
         for i in xrange(n):
-            backend.add('timeline', Record('record:{}'.format(i), '{}'.format(i), t))
+            backend.add('timeline', Record(u'record:{}'.format(i), u'{}'.format(i), t))
 
         with backend.digest('timeline', 0) as records:
             assert len(set(records)) == n
diff --git a/tests/sentry/integrations/bitbucket/test_installed.py b/tests/sentry/integrations/bitbucket/test_installed.py
index b53ac7b164..343b9a0aca 100644
--- a/tests/sentry/integrations/bitbucket/test_installed.py
+++ b/tests/sentry/integrations/bitbucket/test_installed.py
@@ -115,7 +115,7 @@ class BitbucketInstalledEndpointTest(APITestCase):
 
         responses.add(
             responses.GET,
-            'https://api.bitbucket.org/2.0/repositories/{}'.format(self.username),
+            u'https://api.bitbucket.org/2.0/repositories/{}'.format(self.username),
             json={
                 'values': [{
                     'full_name': 'sentryuser/repo',
@@ -166,7 +166,7 @@ class BitbucketInstalledEndpointTest(APITestCase):
 
         responses.add(
             responses.GET,
-            'https://api.bitbucket.org/2.0/repositories/{}'.format(self.username),
+            u'https://api.bitbucket.org/2.0/repositories/{}'.format(self.username),
             json={
                 'values': [{
                     'full_name': 'sentryuser/repo',
diff --git a/tests/sentry/integrations/bitbucket/test_issues.py b/tests/sentry/integrations/bitbucket/test_issues.py
index 6368cb9151..27ac4dafa7 100644
--- a/tests/sentry/integrations/bitbucket/test_issues.py
+++ b/tests/sentry/integrations/bitbucket/test_issues.py
@@ -29,7 +29,7 @@ class BitbucketIssueTest(APITestCase):
         repo = 'myaccount/myrepo'
         responses.add(
             responses.GET,
-            'https://api.bitbucket.org/2.0/repositories/{repo}/issues/{issue_id}'.format(
+            u'https://api.bitbucket.org/2.0/repositories/{repo}/issues/{issue_id}'.format(
                 repo=repo, issue_id=issue_id),
             json={'id': issue_id, 'title': 'hello', 'content': {'html': 'This is the description'}}
         )
@@ -54,7 +54,7 @@ class BitbucketIssueTest(APITestCase):
         comment = {'comment': 'hello I\'m a comment'}
         responses.add(
             responses.POST,
-            'https://api.bitbucket.org/2.0/repositories/{repo}/issues/{issue_id}/comments'.format(
+            u'https://api.bitbucket.org/2.0/repositories/{repo}/issues/{issue_id}/comments'.format(
                 repo=repo, issue_id=issue_id),
             status=201,
             json={'content': {'raw': comment}},
diff --git a/tests/sentry/integrations/github/test_integration.py b/tests/sentry/integrations/github/test_integration.py
index 2e5daaef1f..de0adbd73b 100644
--- a/tests/sentry/integrations/github/test_integration.py
+++ b/tests/sentry/integrations/github/test_integration.py
@@ -50,7 +50,7 @@ class GitHubIntegrationTest(IntegrationTestCase):
 
         responses.add(
             responses.POST,
-            'https://api.github.com/installations/{}/access_tokens'.format(
+            u'https://api.github.com/installations/{}/access_tokens'.format(
                 self.installation_id,
             ),
             json={
@@ -118,7 +118,7 @@ class GitHubIntegrationTest(IntegrationTestCase):
         assert redirect.path == '/apps/sentry-test-app'
 
         # App installation ID is provided
-        resp = self.client.get('{}?{}'.format(
+        resp = self.client.get(u'{}?{}'.format(
             self.setup_path,
             urlencode({'installation_id': self.installation_id})
         ))
@@ -140,7 +140,7 @@ class GitHubIntegrationTest(IntegrationTestCase):
         # Compact list values into singular values, since there's only ever one.
         authorize_params = {k: v[0] for k, v in six.iteritems(params)}
 
-        resp = self.client.get('{}?{}'.format(
+        resp = self.client.get(u'{}?{}'.format(
             self.setup_path,
             urlencode({
                 'code': 'oauth-code',
@@ -285,7 +285,7 @@ class GitHubIntegrationTest(IntegrationTestCase):
         assert integration.status == ObjectStatus.DISABLED
         assert integration.external_id == self.installation_id
 
-        resp = self.client.get('{}?{}'.format(
+        resp = self.client.get(u'{}?{}'.format(
             self.init_path,
             urlencode({'reinstall_id': integration.id})
         ))
@@ -299,7 +299,7 @@ class GitHubIntegrationTest(IntegrationTestCase):
         # New Installation
         self.installation_id = 'install_2'
 
-        resp = self.client.get('{}?{}'.format(
+        resp = self.client.get(u'{}?{}'.format(
             self.setup_path,
             urlencode({'installation_id': self.installation_id})
         ))
@@ -323,7 +323,7 @@ class GitHubIntegrationTest(IntegrationTestCase):
 
         self._stub_github()
 
-        resp = self.client.get('{}?{}'.format(
+        resp = self.client.get(u'{}?{}'.format(
             self.setup_path,
             urlencode({
                 'code': 'oauth-code',
diff --git a/tests/sentry/integrations/github/test_webhooks.py b/tests/sentry/integrations/github/test_webhooks.py
index 0b0da5a15c..f49fed06a2 100644
--- a/tests/sentry/integrations/github/test_webhooks.py
+++ b/tests/sentry/integrations/github/test_webhooks.py
@@ -34,7 +34,7 @@ class WebhookTest(APITestCase):
 
     def test_unregistered_event(self):
         project = self.project  # force creation
-        url = '/extensions/github/webhook/'.format(
+        url = u'/extensions/github/webhook/'.format(
             project.organization.id,
         )
 
diff --git a/tests/sentry/integrations/github_enterprise/test_integration.py b/tests/sentry/integrations/github_enterprise/test_integration.py
index 208fac428f..8d38535fe6 100644
--- a/tests/sentry/integrations/github_enterprise/test_integration.py
+++ b/tests/sentry/integrations/github_enterprise/test_integration.py
@@ -39,7 +39,7 @@ class GitHubEnterpriseIntegrationTest(IntegrationTestCase):
         assert redirect.path == '/github-apps/test-app'
 
         # App installation ID is provided, mveo thr
-        resp = self.client.get('{}?{}'.format(
+        resp = self.client.get(u'{}?{}'.format(
             self.setup_path,
             urlencode({'installation_id': installation_id})
         ))
@@ -67,7 +67,7 @@ class GitHubEnterpriseIntegrationTest(IntegrationTestCase):
         )
 
         responses.add(
-            responses.POST, 'https://35.232.149.196/api/v3/installations/{}/access_tokens'.format(
+            responses.POST, u'https://35.232.149.196/api/v3/installations/{}/access_tokens'.format(
                 installation_id,
             ),
             json={
@@ -103,7 +103,7 @@ class GitHubEnterpriseIntegrationTest(IntegrationTestCase):
             }
         )
 
-        resp = self.client.get('{}?{}'.format(
+        resp = self.client.get(u'{}?{}'.format(
             self.setup_path,
             urlencode({
                 'code': 'oauth-code',
diff --git a/tests/sentry/integrations/github_enterprise/test_webhooks.py b/tests/sentry/integrations/github_enterprise/test_webhooks.py
index 3bfb17c475..b189e23d78 100644
--- a/tests/sentry/integrations/github_enterprise/test_webhooks.py
+++ b/tests/sentry/integrations/github_enterprise/test_webhooks.py
@@ -33,7 +33,7 @@ class WebhookTest(APITestCase):
 
     def test_unregistered_event(self):
         project = self.project  # force creation
-        url = '/extensions/github-enterprise/webhook/'.format(
+        url = u'/extensions/github-enterprise/webhook/'.format(
             project.organization.id,
         )
 
diff --git a/tests/sentry/integrations/slack/test_integration.py b/tests/sentry/integrations/slack/test_integration.py
index 553c7a9858..52a077fa3b 100644
--- a/tests/sentry/integrations/slack/test_integration.py
+++ b/tests/sentry/integrations/slack/test_integration.py
@@ -54,7 +54,7 @@ class SlackIntegrationTest(IntegrationTestCase):
             }
         )
 
-        resp = self.client.get('{}?{}'.format(
+        resp = self.client.get(u'{}?{}'.format(
             self.setup_path,
             urlencode({
                 'code': 'oauth-code',
diff --git a/tests/sentry/integrations/vsts/test_client.py b/tests/sentry/integrations/vsts/test_client.py
index 5856929e8a..7b90901079 100644
--- a/tests/sentry/integrations/vsts/test_client.py
+++ b/tests/sentry/integrations/vsts/test_client.py
@@ -37,7 +37,7 @@ class VstsApiClientTest(VstsIntegrationTestCase):
 
         # Then we request the Projects with the new token
         assert responses.calls[-1].request.url == \
-            '{}DefaultCollection/_apis/projects?stateFilter=WellFormed'.format(
+            u'{}DefaultCollection/_apis/projects?stateFilter=WellFormed'.format(
                 self.vsts_base_url.lower(),
         )
 
diff --git a/tests/sentry/integrations/vsts/test_integration.py b/tests/sentry/integrations/vsts/test_integration.py
index 81171b0f1d..5f3e51a225 100644
--- a/tests/sentry/integrations/vsts/test_integration.py
+++ b/tests/sentry/integrations/vsts/test_integration.py
@@ -34,7 +34,7 @@ class VstsIntegrationProviderTest(VstsIntegrationTestCase):
         accessible_repo = Repository.objects.create(
             organization_id=self.organization.id,
             name=self.project_a['name'],
-            url='{}/DefaultCollection/_git/{}'.format(
+            url=u'{}/DefaultCollection/_git/{}'.format(
                 self.vsts_base_url,
                 self.repo_name,
             ),
@@ -75,7 +75,7 @@ class VstsIntegrationProviderTest(VstsIntegrationTestCase):
         Repository.objects.create(
             organization_id=self.organization.id,
             name=self.project_a['name'],
-            url='https://{}.visualstudio.com/DefaultCollection/_git/{}'.format(
+            url=u'https://{}.visualstudio.com/DefaultCollection/_git/{}'.format(
                 self.vsts_account_name,
                 self.repo_name,
             ),
@@ -98,7 +98,7 @@ class VstsIntegrationProviderTest(VstsIntegrationTestCase):
         Repository.objects.create(
             organization_id=self.organization.id,
             name=self.project_a['name'],
-            url='https://{}.visualstudio.com/DefaultCollection/_git/{}'.format(
+            url=u'https://{}.visualstudio.com/DefaultCollection/_git/{}'.format(
                 self.vsts_account_name,
                 self.repo_name,
             ),
diff --git a/tests/sentry/integrations/vsts/testutils.py b/tests/sentry/integrations/vsts/testutils.py
index 1b5faa7164..2375ef63dc 100644
--- a/tests/sentry/integrations/vsts/testutils.py
+++ b/tests/sentry/integrations/vsts/testutils.py
@@ -102,7 +102,7 @@ class VstsIntegrationTestCase(IntegrationTestCase):
 
         responses.add(
             responses.GET,
-            'https://{}.visualstudio.com/DefaultCollection/_apis/projects'.format(
+            u'https://{}.visualstudio.com/DefaultCollection/_apis/projects'.format(
                 self.vsts_account_name.lower(),
             ),
             json={
@@ -115,7 +115,7 @@ class VstsIntegrationTestCase(IntegrationTestCase):
 
         responses.add(
             responses.POST,
-            'https://{}.visualstudio.com/_apis/hooks/subscriptions'.format(
+            u'https://{}.visualstudio.com/_apis/hooks/subscriptions'.format(
                 self.vsts_account_name.lower(),
             ),
             json=CREATE_SUBSCRIPTION,
@@ -123,7 +123,7 @@ class VstsIntegrationTestCase(IntegrationTestCase):
 
         responses.add(
             responses.GET,
-            'https://{}.visualstudio.com/_apis/git/repositories'.format(
+            u'https://{}.visualstudio.com/_apis/git/repositories'.format(
                 self.vsts_account_name.lower(),
             ),
             json={
@@ -139,7 +139,7 @@ class VstsIntegrationTestCase(IntegrationTestCase):
 
         responses.add(
             responses.GET,
-            'https://{}.visualstudio.com/{}/_apis/wit/workitemtypes/{}/states'.format(
+            u'https://{}.visualstudio.com/{}/_apis/wit/workitemtypes/{}/states'.format(
                 self.vsts_account_name.lower(),
                 self.project_a['name'],
                 'Bug',
@@ -161,7 +161,7 @@ class VstsIntegrationTestCase(IntegrationTestCase):
         )
 
     def make_oauth_redirect_request(self, state):
-        return self.client.get('{}?{}'.format(
+        return self.client.get(u'{}?{}'.format(
             self.setup_path,
             urlencode({
                 'code': 'oauth-code',
@@ -177,7 +177,7 @@ class VstsIntegrationTestCase(IntegrationTestCase):
     def assert_account_selection(self, response, account_id=None):
         account_id = account_id or self.vsts_account_id
         assert response.status_code == 200
-        assert '<option value="{}"'.format(account_id) in response.content
+        assert u'<option value="{}"'.format(account_id) in response.content
 
     def assert_installation(self):
         # Initial request to the installation URL for VSTS
diff --git a/tests/sentry/lang/javascript/test_plugin.py b/tests/sentry/lang/javascript/test_plugin.py
index 9ada9e6bf5..2e6f504593 100644
--- a/tests/sentry/lang/javascript/test_plugin.py
+++ b/tests/sentry/lang/javascript/test_plugin.py
@@ -474,7 +474,7 @@ class JavascriptIntegrationTest(TestCase):
         )
         f_minified.putfile(open(get_fixture_path('nofiles.js'), 'rb'))
         ReleaseFile.objects.create(
-            name='~/{}'.format(f_minified.name),
+            name=u'~/{}'.format(f_minified.name),
             release=release,
             organization_id=project.organization_id,
             file=f_minified,
@@ -487,7 +487,7 @@ class JavascriptIntegrationTest(TestCase):
         )
         f_sourcemap.putfile(open(get_fixture_path('nofiles.js.map'), 'rb'))
         ReleaseFile.objects.create(
-            name='app:///{}'.format(f_sourcemap.name),
+            name=u'app:///{}'.format(f_sourcemap.name),
             release=release,
             organization_id=project.organization_id,
             file=f_sourcemap,
@@ -665,7 +665,7 @@ class JavascriptIntegrationTest(TestCase):
         # Intentionally omit hostname - use alternate artifact path lookup instead
         # /file1.js vs http://example.com/file1.js
         ReleaseFile.objects.create(
-            name='~/{}?foo=bar'.format(f_minified.name),
+            name=u'~/{}?foo=bar'.format(f_minified.name),
             release=release,
             organization_id=project.organization_id,
             file=f_minified,
@@ -682,7 +682,7 @@ class JavascriptIntegrationTest(TestCase):
         f1.putfile(open(get_fixture_path('file1.js'), 'rb'))
 
         ReleaseFile.objects.create(
-            name='http://example.com/{}'.format(f1.name),
+            name=u'http://example.com/{}'.format(f1.name),
             release=release,
             organization_id=project.organization_id,
             file=f1,
@@ -698,7 +698,7 @@ class JavascriptIntegrationTest(TestCase):
         )
         f2.putfile(open(get_fixture_path('file2.js'), 'rb'))
         ReleaseFile.objects.create(
-            name='http://example.com/{}'.format(f2.name),
+            name=u'http://example.com/{}'.format(f2.name),
             release=release,
             organization_id=project.organization_id,
             file=f2,
@@ -716,7 +716,7 @@ class JavascriptIntegrationTest(TestCase):
         )
         f2_empty.putfile(open(get_fixture_path('empty.js'), 'rb'))
         ReleaseFile.objects.create(
-            name='~/{}'.format(f2.name),  # intentionally using f2.name ("file2.js")
+            name=u'~/{}'.format(f2.name),  # intentionally using f2.name ("file2.js")
             release=release,
             organization_id=project.organization_id,
             file=f2_empty,
@@ -732,7 +732,7 @@ class JavascriptIntegrationTest(TestCase):
         )
         f_sourcemap.putfile(open(get_fixture_path('file.sourcemap.js'), 'rb'))
         ReleaseFile.objects.create(
-            name='http://example.com/{}'.format(f_sourcemap.name),
+            name=u'http://example.com/{}'.format(f_sourcemap.name),
             release=release,
             organization_id=project.organization_id,
             file=f_sourcemap,
@@ -817,7 +817,7 @@ class JavascriptIntegrationTest(TestCase):
         # Intentionally omit hostname - use alternate artifact path lookup instead
         # /file1.js vs http://example.com/file1.js
         ReleaseFile.objects.create(
-            name='~/{}?foo=bar'.format(f_minified.name),
+            name=u'~/{}?foo=bar'.format(f_minified.name),
             release=release,
             dist=dist,
             organization_id=project.organization_id,
@@ -835,7 +835,7 @@ class JavascriptIntegrationTest(TestCase):
         f1.putfile(open(get_fixture_path('file1.js'), 'rb'))
 
         ReleaseFile.objects.create(
-            name='http://example.com/{}'.format(f1.name),
+            name=u'http://example.com/{}'.format(f1.name),
             release=release,
             dist=dist,
             organization_id=project.organization_id,
@@ -852,7 +852,7 @@ class JavascriptIntegrationTest(TestCase):
         )
         f2.putfile(open(get_fixture_path('file2.js'), 'rb'))
         ReleaseFile.objects.create(
-            name='http://example.com/{}'.format(f2.name),
+            name=u'http://example.com/{}'.format(f2.name),
             release=release,
             dist=dist,
             organization_id=project.organization_id,
@@ -871,7 +871,7 @@ class JavascriptIntegrationTest(TestCase):
         )
         f2_empty.putfile(open(get_fixture_path('empty.js'), 'rb'))
         ReleaseFile.objects.create(
-            name='~/{}'.format(f2.name),  # intentionally using f2.name ("file2.js")
+            name=u'~/{}'.format(f2.name),  # intentionally using f2.name ("file2.js")
             release=release,
             dist=dist,
             organization_id=project.organization_id,
@@ -888,7 +888,7 @@ class JavascriptIntegrationTest(TestCase):
         )
         f_sourcemap.putfile(open(get_fixture_path('file.sourcemap.js'), 'rb'))
         ReleaseFile.objects.create(
-            name='http://example.com/{}'.format(f_sourcemap.name),
+            name=u'http://example.com/{}'.format(f_sourcemap.name),
             release=release,
             dist=dist,
             organization_id=project.organization_id,
@@ -1237,7 +1237,7 @@ class JavascriptIntegrationTest(TestCase):
         )
         f_minified.putfile(open(get_fixture_path('dist.bundle.js'), 'rb'))
         ReleaseFile.objects.create(
-            name='~/{}'.format(f_minified.name),
+            name=u'~/{}'.format(f_minified.name),
             release=release,
             organization_id=project.organization_id,
             file=f_minified,
@@ -1250,7 +1250,7 @@ class JavascriptIntegrationTest(TestCase):
         )
         f_sourcemap.putfile(open(get_fixture_path('dist.bundle.js.map'), 'rb'))
         ReleaseFile.objects.create(
-            name='~/{}'.format(f_sourcemap.name),
+            name=u'~/{}'.format(f_sourcemap.name),
             release=release,
             organization_id=project.organization_id,
             file=f_sourcemap,
diff --git a/tests/sentry/lang/javascript/test_processor.py b/tests/sentry/lang/javascript/test_processor.py
index 0253591a35..c980cf45ec 100644
--- a/tests/sentry/lang/javascript/test_processor.py
+++ b/tests/sentry/lang/javascript/test_processor.py
@@ -232,7 +232,7 @@ class FetchFileTest(TestCase):
         for i, (header_name_option_value, expected_request_header_name) in enumerate(header_pairs):
             self.project.update_option('sentry:token_header', header_name_option_value)
 
-            url = 'http://example.com/{}/'.format(i)
+            url = u'http://example.com/{}/'.format(i)
             result = fetch_file(url, project=self.project)
 
             assert result.url == url
diff --git a/tests/sentry/lang/native/test_plugin.py b/tests/sentry/lang/native/test_plugin.py
index 3c1576138c..0201a1175e 100644
--- a/tests/sentry/lang/native/test_plugin.py
+++ b/tests/sentry/lang/native/test_plugin.py
@@ -1611,7 +1611,7 @@ class MinidumpIntegrationTest(TestCase):
 
         self.login_as(self.user)
         with self.tasks():
-            url = '/api/0/issues/{}/'.format(event.group_id)
+            url = u'/api/0/issues/{}/'.format(event.group_id)
             response = self.client.delete(url)
 
         assert response.status_code == 202
diff --git a/tests/sentry/models/test_commit.py b/tests/sentry/models/test_commit.py
index 3e5701ad8c..b920b84d96 100644
--- a/tests/sentry/models/test_commit.py
+++ b/tests/sentry/models/test_commit.py
@@ -21,7 +21,7 @@ class FindReferencedGroupsTest(TestCase):
             key=sha1(uuid4().hex).hexdigest(),
             repository_id=repo.id,
             organization_id=group.organization.id,
-            message='Foo Biz\n\nFixes {} {}'.format(
+            message=u'Foo Biz\n\nFixes {} {}'.format(
                 group.qualified_short_id,
                 group2.qualified_short_id,
             ),
@@ -36,7 +36,7 @@ class FindReferencedGroupsTest(TestCase):
             key=sha1(uuid4().hex).hexdigest(),
             repository_id=repo.id,
             organization_id=group.organization.id,
-            message='Foo Biz\n\Resolved {} {}'.format(
+            message=u'Foo Biz\n\Resolved {} {}'.format(
                 group.qualified_short_id,
                 group2.qualified_short_id,
             ),
@@ -51,7 +51,7 @@ class FindReferencedGroupsTest(TestCase):
             key=sha1(uuid4().hex).hexdigest(),
             repository_id=repo.id,
             organization_id=group.organization.id,
-            message='Foo Biz\n\Close {} {}'.format(
+            message=u'Foo Biz\n\Close {} {}'.format(
                 group.qualified_short_id,
                 group2.qualified_short_id,
             ),
@@ -75,7 +75,7 @@ class FindReferencedGroupsTest(TestCase):
             key=sha1(uuid4().hex).hexdigest(),
             repository_id=repo.id,
             organization_id=group.organization.id,
-            message='Foo Biz\n\nFixes {}, {}'.format(
+            message=u'Foo Biz\n\nFixes {}, {}'.format(
                 group.qualified_short_id,
                 group2.qualified_short_id,
             ),
diff --git a/tests/sentry/models/test_pullrequest.py b/tests/sentry/models/test_pullrequest.py
index c5586acbc7..f193ada02e 100644
--- a/tests/sentry/models/test_pullrequest.py
+++ b/tests/sentry/models/test_pullrequest.py
@@ -21,7 +21,7 @@ class FindReferencedGroupsTest(TestCase):
             key=sha1(uuid4().hex).hexdigest(),
             repository_id=repo.id,
             organization_id=group.organization.id,
-            message='Foo Biz\n\nFixes {}'.format(
+            message=u'Foo Biz\n\nFixes {}'.format(
                 group.qualified_short_id,
             ),
         )
@@ -35,7 +35,7 @@ class FindReferencedGroupsTest(TestCase):
             repository_id=repo.id,
             organization_id=group.organization.id,
             title="very cool PR to fix the thing",
-            message='Foo Biz\n\nFixes {}'.format(
+            message=u'Foo Biz\n\nFixes {}'.format(
                 group2.qualified_short_id,
             ),
         )
diff --git a/tests/sentry/plugins/mail/tests.py b/tests/sentry/plugins/mail/tests.py
index 6925520b14..f1413bf36b 100644
--- a/tests/sentry/plugins/mail/tests.py
+++ b/tests/sentry/plugins/mail/tests.py
@@ -423,7 +423,7 @@ class MailPluginSignalsTest(TestCase):
 
         msg = mail.outbox[0]
 
-        assert msg.subject == '[Sentry] {} - New Feedback from Homer Simpson'.format(
+        assert msg.subject == u'[Sentry] {} - New Feedback from Homer Simpson'.format(
             self.group.qualified_short_id,
         )
         assert msg.to == [self.user.email]
diff --git a/tests/sentry/quotas/redis/tests.py b/tests/sentry/quotas/redis/tests.py
index 7beafece99..a914bd39bd 100644
--- a/tests/sentry/quotas/redis/tests.py
+++ b/tests/sentry/quotas/redis/tests.py
@@ -87,10 +87,10 @@ class RedisQuotaTest(TestCase):
         self.get_project_quota.return_value = (200, 60)
         self.get_organization_quota.return_value = (300, 60)
         quotas = self.quota.get_quotas(self.project)
-        assert quotas[0].key == 'p:{}'.format(self.project.id)
+        assert quotas[0].key == u'p:{}'.format(self.project.id)
         assert quotas[0].limit == 200
         assert quotas[0].window == 60
-        assert quotas[1].key == 'o:{}'.format(self.project.organization.id)
+        assert quotas[1].key == u'o:{}'.format(self.project.organization.id)
         assert quotas[1].limit == 300
         assert quotas[1].window == 60
 
diff --git a/tests/sentry/receivers/test_releases.py b/tests/sentry/receivers/test_releases.py
index 4c270eab44..968ea4a49b 100644
--- a/tests/sentry/receivers/test_releases.py
+++ b/tests/sentry/receivers/test_releases.py
@@ -40,7 +40,7 @@ class ResolvedInCommitTest(TestCase):
             key=sha1(uuid4().hex).hexdigest(),
             repository_id=repo.id,
             organization_id=group.organization.id,
-            message='Foo Biz\n\nFixes {}'.format(group.qualified_short_id),
+            message=u'Foo Biz\n\nFixes {}'.format(group.qualified_short_id),
         )
 
         assert GroupLink.objects.filter(
@@ -67,7 +67,7 @@ class ResolvedInCommitTest(TestCase):
             linked_type=GroupLink.LinkedType.commit,
             linked_id=commit.id).exists()
 
-        commit.message = 'Foo Biz\n\nFixes {}'.format(group.qualified_short_id)
+        commit.message = u'Foo Biz\n\nFixes {}'.format(group.qualified_short_id)
         commit.save()
 
         assert GroupLink.objects.filter(
@@ -87,7 +87,7 @@ class ResolvedInCommitTest(TestCase):
             key=sha1(uuid4().hex).hexdigest(),
             repository_id=repo.id,
             organization_id=group.organization.id,
-            message='Foo Biz\n\nFixes {}'.format(group.qualified_short_id),
+            message=u'Foo Biz\n\nFixes {}'.format(group.qualified_short_id),
         )
 
         assert GroupLink.objects.filter(
@@ -95,7 +95,7 @@ class ResolvedInCommitTest(TestCase):
             linked_type=GroupLink.LinkedType.commit,
             linked_id=commit.id).exists()
 
-        commit.message = 'Foo Bar Biz\n\nFixes {}'.format(group.qualified_short_id)
+        commit.message = u'Foo Bar Biz\n\nFixes {}'.format(group.qualified_short_id)
         commit.save()
 
         assert GroupLink.objects.filter(
@@ -115,7 +115,7 @@ class ResolvedInCommitTest(TestCase):
             key=sha1(uuid4().hex).hexdigest(),
             repository_id=repo.id,
             organization_id=group.organization.id,
-            message='Foo Biz\n\nFixes {}'.format(group.qualified_short_id),
+            message=u'Foo Biz\n\nFixes {}'.format(group.qualified_short_id),
         )
 
         assert GroupLink.objects.filter(
@@ -141,7 +141,7 @@ class ResolvedInCommitTest(TestCase):
             key=sha1(uuid4().hex).hexdigest(),
             repository_id=repo.id,
             organization_id=self.organization.id,
-            message='Foo Biz\n\nFixes {}-12F'.format(
+            message=u'Foo Biz\n\nFixes {}-12F'.format(
                 self.project.slug.upper()),
         )
 
@@ -161,7 +161,7 @@ class ResolvedInCommitTest(TestCase):
             key=sha1(uuid4().hex).hexdigest(),
             organization_id=group.organization.id,
             repository_id=repo.id,
-            message='Foo Biz\n\nFixes {}'.format(group.qualified_short_id),
+            message=u'Foo Biz\n\nFixes {}'.format(group.qualified_short_id),
             author=CommitAuthor.objects.create(
                 organization_id=group.organization.id,
                 name=self.user.name,
@@ -191,7 +191,7 @@ class ResolvedInCommitTest(TestCase):
             key=sha1(uuid4().hex).hexdigest(),
             organization_id=group.organization.id,
             repository_id=repo.id,
-            message='Foo Biz\n\nFixes {}'.format(group.qualified_short_id),
+            message=u'Foo Biz\n\nFixes {}'.format(group.qualified_short_id),
             author=CommitAuthor.objects.create(
                 organization_id=group.organization.id,
                 name=user.name,
diff --git a/tests/sentry/search/test_utils.py b/tests/sentry/search/test_utils.py
index ad0112cae2..d92b6ccf8e 100644
--- a/tests/sentry/search/test_utils.py
+++ b/tests/sentry/search/test_utils.py
@@ -273,12 +273,12 @@ class ParseQueryTest(TestCase):
         assert result['assigned_to'].id == 0
 
     def test_assigned_valid_team(self):
-        result = self.parse_query('assigned:#{}'.format(self.team.slug))
+        result = self.parse_query(u'assigned:#{}'.format(self.team.slug))
         assert result['assigned_to'] == self.team
 
     def test_assigned_unassociated_team(self):
         team2 = self.create_team(organization=self.organization)
-        result = self.parse_query('assigned:#{}'.format(team2.slug))
+        result = self.parse_query(u'assigned:#{}'.format(team2.slug))
         assert isinstance(result['assigned_to'], Team)
         assert result['assigned_to'].id == 0
 
diff --git a/tests/sentry/test_celery.py b/tests/sentry/test_celery.py
index 3f03d39be7..73ee58bece 100644
--- a/tests/sentry/test_celery.py
+++ b/tests/sentry/test_celery.py
@@ -8,4 +8,4 @@ def test_import_paths():
         try:
             __import__(path)
         except ImportError:
-            raise AssertionError('Unable to import {} from CELERY_IMPORTS'.format(path))
+            raise AssertionError(u'Unable to import {} from CELERY_IMPORTS'.format(path))
diff --git a/tests/sentry/utils/email/tests.py b/tests/sentry/utils/email/tests.py
index 7215a21da7..c37696246f 100644
--- a/tests/sentry/utils/email/tests.py
+++ b/tests/sentry/utils/email/tests.py
@@ -34,7 +34,7 @@ class ListResolverTestCase(TestCase):
             self.resolver(object())
 
     def test_generates_list_ids(self):
-        expected = "{0.project.slug}.{0.organization.slug}.namespace".format(self.event)
+        expected = u"{0.project.slug}.{0.organization.slug}.namespace".format(self.event)
         assert self.resolver(self.event) == expected
         assert self.resolver(self.event.group) == expected
         assert self.resolver(self.event.project) == expected
@@ -300,7 +300,7 @@ class MessageBuilderTest(TestCase):
             html_body='<b>hello world</b>',
         )
 
-        expected = "{event.project.slug}.{event.organization.slug}.{namespace}".format(
+        expected = u"{event.project.slug}.{event.organization.slug}.{namespace}".format(
             event=self.event,
             namespace=options.get('mail.list-namespace'),
         )
diff --git a/tests/sentry/utils/http/tests.py b/tests/sentry/utils/http/tests.py
index 71739fa179..43ddc42441 100644
--- a/tests/sentry/utils/http/tests.py
+++ b/tests/sentry/utils/http/tests.py
@@ -273,7 +273,7 @@ class IsValidIPTestCase(TestCase):
 
 class IsValidReleaseTestCase(TestCase):
     def is_valid_release(self, value, inputs):
-        self.project.update_option('sentry:{}'.format(FilterTypes.RELEASES), inputs)
+        self.project.update_option(u'sentry:{}'.format(FilterTypes.RELEASES), inputs)
         return is_valid_release(self.project, value)
 
     def test_release_not_in_list(self):
@@ -292,7 +292,7 @@ class IsValidReleaseTestCase(TestCase):
 
 class IsValidErrorMessageTestCase(TestCase):
     def is_valid_error_message(self, value, inputs):
-        self.project.update_option('sentry:{}'.format(FilterTypes.ERROR_MESSAGES), inputs)
+        self.project.update_option(u'sentry:{}'.format(FilterTypes.ERROR_MESSAGES), inputs)
         return is_valid_error_message(self.project, value)
 
     def test_error_class_not_in_list(self):
diff --git a/tests/sentry/utils/test_retries.py b/tests/sentry/utils/test_retries.py
index 3ab1bca98d..4909a7de50 100644
--- a/tests/sentry/utils/test_retries.py
+++ b/tests/sentry/utils/test_retries.py
@@ -33,7 +33,7 @@ class TimedRetryPolicyTestCase(TestCase):
         except RetryException as exception:
             assert exception.exception is bomb
         else:
-            self.fail('Expected {!r}!'.format(RetryException))
+            self.fail(u'Expected {!r}!'.format(RetryException))
 
         assert callable.call_count == 2
 
diff --git a/tests/sentry/web/api/tests.py b/tests/sentry/web/api/tests.py
index e14348e1d7..e76321b8af 100644
--- a/tests/sentry/web/api/tests.py
+++ b/tests/sentry/web/api/tests.py
@@ -287,7 +287,7 @@ class StoreViewTest(TestCase):
         assert resp.status_code == 403, (resp.status_code, resp.content)
 
     def test_request_with_invalid_release(self):
-        self.project.update_option('sentry:{}'.format(FilterTypes.RELEASES), ['1.3.2'])
+        self.project.update_option(u'sentry:{}'.format(FilterTypes.RELEASES), ['1.3.2'])
         body = {
             "release": "1.3.2",
             "message": "foo bar",
@@ -306,7 +306,7 @@ class StoreViewTest(TestCase):
         assert resp.status_code == 403, (resp.status_code, resp.content)
 
     def test_request_with_short_release_globbing(self):
-        self.project.update_option('sentry:{}'.format(FilterTypes.RELEASES), ['1.*'])
+        self.project.update_option(u'sentry:{}'.format(FilterTypes.RELEASES), ['1.*'])
         body = {
             "release": "1.3.2",
             "message": "foo bar",
@@ -325,7 +325,7 @@ class StoreViewTest(TestCase):
         assert resp.status_code == 403, (resp.status_code, resp.content)
 
     def test_request_with_longer_release_globbing(self):
-        self.project.update_option('sentry:{}'.format(FilterTypes.RELEASES), ['2.1.*'])
+        self.project.update_option(u'sentry:{}'.format(FilterTypes.RELEASES), ['2.1.*'])
         body = {
             "release": "2.1.3",
             "message": "foo bar",
@@ -345,7 +345,7 @@ class StoreViewTest(TestCase):
 
     def test_request_with_invalid_error_messages(self):
         self.project.update_option(
-            'sentry:{}'.format(FilterTypes.ERROR_MESSAGES), ['ZeroDivisionError*']
+            u'sentry:{}'.format(FilterTypes.ERROR_MESSAGES), ['ZeroDivisionError*']
         )
         body = {
             "release": "abcdefg",
@@ -369,7 +369,7 @@ class StoreViewTest(TestCase):
 
     def test_request_with_beggining_glob(self):
         self.project.update_option(
-            'sentry:{}'.format(FilterTypes.ERROR_MESSAGES),
+            u'sentry:{}'.format(FilterTypes.ERROR_MESSAGES),
             ['*: integer division or modulo by zero']
         )
         body = {
diff --git a/tests/sentry/web/frontend/test_auth_oauth2.py b/tests/sentry/web/frontend/test_auth_oauth2.py
index c8c4a1af99..6c89c56cde 100644
--- a/tests/sentry/web/frontend/test_auth_oauth2.py
+++ b/tests/sentry/web/frontend/test_auth_oauth2.py
@@ -78,7 +78,7 @@ class AuthOAuth2Test(AuthProviderTestCase):
         urlopen.return_value = MockResponse(headers, json.dumps(auth_data))
 
         query = urlencode({'code': '1234', 'state': state})
-        resp = self.client.get('{}?{}'.format(self.sso_path, query), **kargs)
+        resp = self.client.get(u'{}?{}'.format(self.sso_path, query), **kargs)
 
         if expect_success:
             assert resp.status_code == 200
diff --git a/tests/sentry/web/frontend/test_group_event_json.py b/tests/sentry/web/frontend/test_group_event_json.py
index 4287a3310a..61e1a665b9 100644
--- a/tests/sentry/web/frontend/test_group_event_json.py
+++ b/tests/sentry/web/frontend/test_group_event_json.py
@@ -10,7 +10,7 @@ from sentry.testutils import TestCase
 class GroupEventJsonTest(TestCase):
     @fixture
     def path(self):
-        return '/{}/{}/issues/{}/events/{}/json/'.format(
+        return u'/{}/{}/issues/{}/events/{}/json/'.format(
             self.organization.slug,
             self.project.slug,
             self.group.id,
diff --git a/tests/sentry/web/frontend/test_group_tag_export.py b/tests/sentry/web/frontend/test_group_tag_export.py
index 879b349eb6..18208955e1 100644
--- a/tests/sentry/web/frontend/test_group_tag_export.py
+++ b/tests/sentry/web/frontend/test_group_tag_export.py
@@ -40,7 +40,7 @@ class GroupTagExportTest(TestCase):
 
         self.login_as(user=self.user)
 
-        url = '/{}/{}/issues/{}/tags/{}/export/?environment={}'.format(
+        url = u'/{}/{}/issues/{}/tags/{}/export/?environment={}'.format(
             project.organization.slug, project.slug, group.id, key, self.environment.name
         )
 
diff --git a/tests/sentry/web/frontend/test_home.py b/tests/sentry/web/frontend/test_home.py
index 2114e52152..fc51c34e1b 100644
--- a/tests/sentry/web/frontend/test_home.py
+++ b/tests/sentry/web/frontend/test_home.py
@@ -43,4 +43,4 @@ class HomeTest(TestCase):
             resp = self.client.get(self.path)
 
         assert resp.status_code == 302
-        assert resp['Location'] == 'http://testserver/{}/'.format(org.slug)
+        assert resp['Location'] == u'http://testserver/{}/'.format(org.slug)
diff --git a/tests/sentry/web/frontend/test_oauth_authorize.py b/tests/sentry/web/frontend/test_oauth_authorize.py
index 1e28ea6cb1..deb3b5b2b8 100644
--- a/tests/sentry/web/frontend/test_oauth_authorize.py
+++ b/tests/sentry/web/frontend/test_oauth_authorize.py
@@ -23,7 +23,7 @@ class OAuthAuthorizeCodeTest(TestCase):
         self.login_as(self.user)
 
         resp = self.client.get(
-            '{}?redirect_uri={}&client_id={}'.format(
+            u'{}?redirect_uri={}&client_id={}'.format(
                 self.path,
                 'https://example.com',
                 self.application.client_id,
@@ -37,7 +37,7 @@ class OAuthAuthorizeCodeTest(TestCase):
         self.login_as(self.user)
 
         resp = self.client.get(
-            '{}?response_type=foobar&redirect_uri={}&client_id={}'.format(
+            u'{}?response_type=foobar&redirect_uri={}&client_id={}'.format(
                 self.path,
                 'https://example.com',
                 self.application.client_id,
@@ -51,7 +51,7 @@ class OAuthAuthorizeCodeTest(TestCase):
         self.login_as(self.user)
 
         resp = self.client.get(
-            '{}?response_type=code&redirect_uri={}'.format(
+            u'{}?response_type=code&redirect_uri={}'.format(
                 self.path,
                 'https://example.com',
             )
@@ -65,7 +65,7 @@ class OAuthAuthorizeCodeTest(TestCase):
         self.login_as(self.user)
 
         resp = self.client.get(
-            '{}?response_type=code&client_id={}&scope=foo'.format(
+            u'{}?response_type=code&client_id={}&scope=foo'.format(
                 self.path,
                 self.application.client_id,
             )
@@ -78,7 +78,7 @@ class OAuthAuthorizeCodeTest(TestCase):
         self.login_as(self.user)
 
         resp = self.client.get(
-            '{}?response_type=code&redirect_uri=https://google.com&client_id={}'.format(
+            u'{}?response_type=code&redirect_uri=https://google.com&client_id={}'.format(
                 self.path,
                 self.application.client_id,
             )
@@ -92,7 +92,7 @@ class OAuthAuthorizeCodeTest(TestCase):
         self.login_as(self.user)
 
         resp = self.client.get(
-            '{}?response_type=code&client_id={}'.format(
+            u'{}?response_type=code&client_id={}'.format(
                 self.path,
                 self.application.client_id,
             )
@@ -112,7 +112,7 @@ class OAuthAuthorizeCodeTest(TestCase):
         assert not grant.get_scopes()
 
         assert resp.status_code == 302
-        assert resp['Location'] == 'https://example.com?code={}'.format(
+        assert resp['Location'] == u'https://example.com?code={}'.format(
             grant.code,
         )
 
@@ -126,7 +126,7 @@ class OAuthAuthorizeCodeTest(TestCase):
         self.login_as(self.user)
 
         resp = self.client.get(
-            '{}?response_type=code&client_id={}'.format(
+            u'{}?response_type=code&client_id={}'.format(
                 self.path,
                 self.application.client_id,
             )
@@ -150,7 +150,7 @@ class OAuthAuthorizeCodeTest(TestCase):
         self.login_as(self.user)
 
         resp = self.client.get(
-            '{}?response_type=code&client_id={}&scope=org%3Aread&state=foo'.format(
+            u'{}?response_type=code&client_id={}&scope=org%3Aread&state=foo'.format(
                 self.path,
                 self.application.client_id,
             )
@@ -170,7 +170,7 @@ class OAuthAuthorizeCodeTest(TestCase):
         assert grant.get_scopes() == ['org:read']
 
         assert resp.status_code == 302
-        assert resp['Location'] == 'https://example.com?state=foo&code={}'.format(
+        assert resp['Location'] == u'https://example.com?state=foo&code={}'.format(
             grant.code,
         )
 
@@ -185,7 +185,7 @@ class OAuthAuthorizeCodeTest(TestCase):
         )
 
         resp = self.client.get(
-            '{}?response_type=code&client_id={}'.format(
+            u'{}?response_type=code&client_id={}'.format(
                 self.path,
                 self.application.client_id,
             )
@@ -197,7 +197,7 @@ class OAuthAuthorizeCodeTest(TestCase):
         assert not grant.get_scopes()
 
         assert resp.status_code == 302
-        assert resp['Location'] == 'https://example.com?code={}'.format(
+        assert resp['Location'] == u'https://example.com?code={}'.format(
             grant.code,
         )
 
@@ -210,7 +210,7 @@ class OAuthAuthorizeCodeTest(TestCase):
         )
 
         resp = self.client.get(
-            '{}?response_type=code&client_id={}&force_prompt=1'.format(
+            u'{}?response_type=code&client_id={}&force_prompt=1'.format(
                 self.path,
                 self.application.client_id,
             )
@@ -230,7 +230,7 @@ class OAuthAuthorizeCodeTest(TestCase):
         )
 
         resp = self.client.get(
-            '{}?response_type=code&client_id={}&scope=org:read'.format(
+            u'{}?response_type=code&client_id={}&scope=org:read'.format(
                 self.path,
                 self.application.client_id,
             )
@@ -256,7 +256,7 @@ class OAuthAuthorizeCodeTest(TestCase):
         )
 
         resp = self.client.get(
-            '{}?response_type=code&client_id={}&scope=member:read member:admin'.format(
+            u'{}?response_type=code&client_id={}&scope=member:read member:admin'.format(
                 self.path,
                 self.application.client_id,
             )
@@ -271,7 +271,7 @@ class OAuthAuthorizeCodeTest(TestCase):
         ]
 
     def test_unauthenticated_basic_auth(self):
-        full_path = '{}?response_type=code&client_id={}'.format(
+        full_path = u'{}?response_type=code&client_id={}'.format(
             self.path,
             self.application.client_id,
         )
@@ -280,7 +280,7 @@ class OAuthAuthorizeCodeTest(TestCase):
 
         assert resp.status_code == 200
         self.assertTemplateUsed('sentry/login.html')
-        assert resp.context['banner'] == 'Connect Sentry to {}'.format(self.application.name)
+        assert resp.context['banner'] == u'Connect Sentry to {}'.format(self.application.name)
 
         resp = self.client.post(
             full_path,
@@ -291,7 +291,7 @@ class OAuthAuthorizeCodeTest(TestCase):
             },
         )
         assert resp.status_code == 302
-        assert resp.get('Location') == 'http://testserver{}'.format(full_path)
+        assert resp.get('Location') == u'http://testserver{}'.format(full_path)
 
         resp = self.client.get(full_path)
         self.assertTemplateUsed('sentry/oauth-authorize.html')
@@ -307,7 +307,7 @@ class OAuthAuthorizeCodeTest(TestCase):
         assert not grant.get_scopes()
 
         assert resp.status_code == 302
-        assert resp['Location'] == 'https://example.com?code={}'.format(
+        assert resp['Location'] == u'https://example.com?code={}'.format(
             grant.code,
         )
 
@@ -334,7 +334,7 @@ class OAuthAuthorizeTokenTest(TestCase):
         self.login_as(self.user)
 
         resp = self.client.get(
-            '{}?redirect_uri={}&client_id={}'.format(
+            u'{}?redirect_uri={}&client_id={}'.format(
                 self.path,
                 'https://example.com',
                 self.application.client_id,
@@ -348,7 +348,7 @@ class OAuthAuthorizeTokenTest(TestCase):
         self.login_as(self.user)
 
         resp = self.client.get(
-            '{}?response_type=foobar&redirect_uri={}&client_id={}'.format(
+            u'{}?response_type=foobar&redirect_uri={}&client_id={}'.format(
                 self.path,
                 'https://example.com',
                 self.application.client_id,
@@ -362,7 +362,7 @@ class OAuthAuthorizeTokenTest(TestCase):
         self.login_as(self.user)
 
         resp = self.client.get(
-            '{}?response_type=token&redirect_uri={}'.format(
+            u'{}?response_type=token&redirect_uri={}'.format(
                 self.path,
                 'https://example.com',
             )
@@ -376,7 +376,7 @@ class OAuthAuthorizeTokenTest(TestCase):
         self.login_as(self.user)
 
         resp = self.client.get(
-            '{}?response_type=token&client_id={}&scope=foo'.format(
+            u'{}?response_type=token&client_id={}&scope=foo'.format(
                 self.path,
                 self.application.client_id,
             )
@@ -389,7 +389,7 @@ class OAuthAuthorizeTokenTest(TestCase):
         self.login_as(self.user)
 
         resp = self.client.get(
-            '{}?response_type=token&client_id={}'.format(
+            u'{}?response_type=token&client_id={}'.format(
                 self.path,
                 self.application.client_id,
             )
@@ -424,7 +424,7 @@ class OAuthAuthorizeTokenTest(TestCase):
         self.login_as(self.user)
 
         resp = self.client.get(
-            '{}?response_type=token&client_id={}'.format(
+            u'{}?response_type=token&client_id={}'.format(
                 self.path,
                 self.application.client_id,
             )
diff --git a/tests/sentry/web/frontend/test_organization_auth_settings.py b/tests/sentry/web/frontend/test_organization_auth_settings.py
index 3d063aa982..a4d06e6a9c 100644
--- a/tests/sentry/web/frontend/test_organization_auth_settings.py
+++ b/tests/sentry/web/frontend/test_organization_auth_settings.py
@@ -99,7 +99,7 @@ class OrganizationAuthSettingsTest(AuthProviderTestCase):
             resp = self.client.post(path, {'email': user.email})
 
         assert resp.status_code == 302
-        assert resp['Location'] == 'http://testserver{}'.format(configure_path)
+        assert resp['Location'] == u'http://testserver{}'.format(configure_path)
 
         auth_provider = AuthProvider.objects.get(
             organization=organization,
diff --git a/tests/sentry/web/frontend/test_organization_integration_setup.py b/tests/sentry/web/frontend/test_organization_integration_setup.py
index de46dcddc7..cff1fa0b2d 100644
--- a/tests/sentry/web/frontend/test_organization_integration_setup.py
+++ b/tests/sentry/web/frontend/test_organization_integration_setup.py
@@ -8,7 +8,7 @@ from sentry.testutils import PermissionTestCase, TestCase
 class OrganizationIntegrationSetupPermissionTest(PermissionTestCase):
     def setUp(self):
         super(OrganizationIntegrationSetupPermissionTest, self).setUp()
-        self.path = '/organizations/{}/integrations/example/setup/'.format(
+        self.path = u'/organizations/{}/integrations/example/setup/'.format(
             self.organization.slug,
         )
 
@@ -28,7 +28,7 @@ class OrganizationIntegrationSetupTest(TestCase):
         super(OrganizationIntegrationSetupTest, self).setUp()
         self.organization = self.create_organization(name='foo', owner=self.user)
         self.login_as(self.user)
-        self.path = '/organizations/{}/integrations/example/setup/'.format(
+        self.path = u'/organizations/{}/integrations/example/setup/'.format(
             self.organization.slug,
         )
 
diff --git a/tests/sentry/web/frontend/test_react_page.py b/tests/sentry/web/frontend/test_react_page.py
index 41615b832d..431ed5ddb0 100644
--- a/tests/sentry/web/frontend/test_react_page.py
+++ b/tests/sentry/web/frontend/test_react_page.py
@@ -30,7 +30,7 @@ class ReactPageViewTest(TestCase):
         resp = self.client.get(path)
 
         assert resp.status_code == 302
-        assert resp['Location'] == 'http://testserver{}'.format(
+        assert resp['Location'] == u'http://testserver{}'.format(
             reverse('sentry-auth-organization', args=[org.slug]),
         )
 
@@ -40,7 +40,7 @@ class ReactPageViewTest(TestCase):
         resp = self.client.get(path)
 
         assert resp.status_code == 302
-        assert resp['Location'] != 'http://testserver{}'.format(
+        assert resp['Location'] != u'http://testserver{}'.format(
             reverse('sentry-auth-organization', args=[org.slug]),
         )
 
diff --git a/tests/snuba/tagstore/test_tagstore_backend.py b/tests/snuba/tagstore/test_tagstore_backend.py
index 67c9e65ca7..cfcf531a37 100644
--- a/tests/snuba/tagstore/test_tagstore_backend.py
+++ b/tests/snuba/tagstore/test_tagstore_backend.py
@@ -53,11 +53,11 @@ class TagStorageTest(SnubaTestCase):
                     'baz': 'quux',
                     'environment': self.proj1env1.name,
                     'sentry:release': 100 * r,
-                    'sentry:user': "id:user{}".format(r),
+                    'sentry:user': u"id:user{}".format(r),
                 },
                 'sentry.interfaces.User': {
-                    'id': "user{}".format(r),
-                    'email': "user{}@sentry.io".format(r)
+                    'id': u"user{}".format(r),
+                    'email': u"user{}@sentry.io".format(r)
                 }
             },
         } for r in [1, 2]] + [{
@@ -154,7 +154,7 @@ class TagStorageTest(SnubaTestCase):
         assert set(keys) == set(['baz', 'environment', 'foo', 'sentry:release', 'sentry:user'])
         for k in keys.values():
             if k.key not in set(['sentry:release', 'sentry:user']):
-                assert k.values_seen == 1, 'expected {!r} to have 1 unique value'.format(k.key)
+                assert k.values_seen == 1, u'expected {!r} to have 1 unique value'.format(k.key)
             else:
                 assert k.values_seen == 2
 
diff --git a/tests/snuba/tsdb/test_tsdb_backend.py b/tests/snuba/tsdb/test_tsdb_backend.py
index 58ca9f0d48..02e1a2ec2e 100644
--- a/tests/snuba/tsdb/test_tsdb_backend.py
+++ b/tests/snuba/tsdb/test_tsdb_backend.py
@@ -120,13 +120,13 @@ class SnubaTSDBTest(TestCase):
                     'baz': 'quux',
                     # Switch every 2 hours
                     'environment': [self.proj1env1.name, None][(r // 7200) % 2],
-                    'sentry:user': 'id:user{}'.format(r // 3300),
+                    'sentry:user': u'id:user{}'.format(r // 3300),
                     'sentry:release': six.text_type(r // 3600) * 10,  # 1 per hour
                 },
                 'sentry.interfaces.User': {
                     # change every 55 min so some hours have 1 user, some have 2
-                    'id': "user{}".format(r // 3300),
-                    'email': "user{}@sentry.io".format(r)
+                    'id': u"user{}".format(r // 3300),
+                    'email': u"user{}@sentry.io".format(r)
                 }
             },
         } for r in range(0, 14400, 600)])  # Every 10 min for 4 hours
