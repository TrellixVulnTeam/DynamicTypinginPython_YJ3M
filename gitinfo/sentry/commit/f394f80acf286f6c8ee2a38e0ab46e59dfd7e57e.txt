commit f394f80acf286f6c8ee2a38e0ab46e59dfd7e57e
Author: Ben Vinegar <ben.vinegar@gmail.com>
Date:   Fri Feb 23 13:13:18 2018 -0800

    feat(ui): Move "remove team" into team settings panel (#7310)
    
    * feat(ui): Move "remove team" into team settings panel
    
    * Better warning text
    
    * Add snapshot tests for new team settings
    
    * Restore "Remove Team" dropdown for old settings pages
    
    * Use React.Fragment
    
    * Update snapshots
    
    * Use Panel, PanelHeader, Field

diff --git a/src/sentry/static/sentry/app/views/settings/team/teamSettings.jsx b/src/sentry/static/sentry/app/views/settings/team/teamSettings.jsx
index 0acad02135..36715457fc 100644
--- a/src/sentry/static/sentry/app/views/settings/team/teamSettings.jsx
+++ b/src/sentry/static/sentry/app/views/settings/team/teamSettings.jsx
@@ -9,6 +9,11 @@ import Form from '../components/forms/form';
 import JsonForm from '../components/forms/jsonForm';
 import TeamModel from './model';
 import teamSettingsFields from '../../../data/forms/teamSettingsFields';
+import Panel from '../components/panel';
+import Field from '../components/forms/field';
+import PanelHeader from '../components/panelHeader';
+import Link from '../../../components/link';
+import SentryTypes from '../../../proptypes';
 
 export default class TeamSettings extends AsyncView {
   static propTypes = {
@@ -19,6 +24,7 @@ export default class TeamSettings extends AsyncView {
 
   static contextTypes = {
     location: PropTypes.object,
+    organization: SentryTypes.Organization,
   };
 
   constructor(props, context) {
@@ -52,24 +58,52 @@ export default class TeamSettings extends AsyncView {
 
   renderBody() {
     let team = this.props.team;
+    let {teamId, orgId} = this.props.params;
+
+    let access = new Set(this.context.organization.access);
 
     return (
-      <Form
-        model={this.model}
-        apiMethod="PUT"
-        saveOnBlur
-        allowUndo
-        onSubmitSuccess={this.handleSubmitSuccess}
-        onSubmitError={() => addErrorMessage(t('Unable to save change'))}
-        initialData={{
-          name: team.name,
-          slug: team.slug,
-        }}
-      >
-        <Box>
-          <JsonForm location={this.context.location} forms={teamSettingsFields} />
-        </Box>
-      </Form>
+      <React.Fragment>
+        <Form
+          model={this.model}
+          apiMethod="PUT"
+          saveOnBlur
+          allowUndo
+          onSubmitSuccess={this.handleSubmitSuccess}
+          onSubmitError={() => addErrorMessage(t('Unable to save change'))}
+          initialData={{
+            name: team.name,
+            slug: team.slug,
+          }}
+        >
+          <Box>
+            <JsonForm location={this.context.location} forms={teamSettingsFields} />
+          </Box>
+        </Form>
+
+        {access.has('team:admin') && (
+          <Panel>
+            <PanelHeader>{t('Remove Team')}</PanelHeader>
+            <Field
+              help={t(
+                "This may affect team members' access to projects and associated alert delivery."
+              )}
+            >
+              <div>
+                <Link
+                  to={`/organizations/${orgId}/teams/${teamId}/remove/`}
+                  className="btn btn-danger"
+                  priority="danger"
+                  size="small"
+                  title={t('Remove Team')}
+                >
+                  {t('Remove Team')}
+                </Link>
+              </div>
+            </Field>
+          </Panel>
+        )}
+      </React.Fragment>
     );
   }
 }
diff --git a/src/sentry/static/sentry/app/views/teamDetails.jsx b/src/sentry/static/sentry/app/views/teamDetails.jsx
index 095583b853..ad8befce52 100644
--- a/src/sentry/static/sentry/app/views/teamDetails.jsx
+++ b/src/sentry/static/sentry/app/views/teamDetails.jsx
@@ -94,19 +94,21 @@ const TeamDetails = createReactClass({
     //TODO(maxbittker) remove hack to not show this page on old settings
     let onNewSettings = routePrefix.startsWith('/settings/');
 
+    const features = new Set(this.context.organization.features);
     return (
       <div>
         <h3>{team.name}</h3>
 
-        {access.has('team:admin') && (
-          <DropdownLink anchorRight title={t('More')}>
-            <MenuItem
-              href={`/organizations/${params.orgId}/teams/${params.teamId}/remove/`}
-            >
-              {t('Remove Team')}
-            </MenuItem>
-          </DropdownLink>
-        )}
+        {!features.has('new-settings') &&
+          access.has('team:admin') && (
+            <DropdownLink anchorRight title={t('More')}>
+              <MenuItem
+                href={`/organizations/${params.orgId}/teams/${params.teamId}/remove/`}
+              >
+                {t('Remove Team')}
+              </MenuItem>
+            </DropdownLink>
+          )}
 
         <ul className="nav nav-tabs border-bottom">
           <ListLink to={`${routePrefix}settings/`}>{t('Settings')}</ListLink>
diff --git a/tests/js/spec/views/__snapshots__/teamSettings.old.spec.jsx.snap b/tests/js/spec/views/__snapshots__/teamSettings.old.spec.jsx.snap
new file mode 100644
index 0000000000..79cdd786ce
--- /dev/null
+++ b/tests/js/spec/views/__snapshots__/teamSettings.old.spec.jsx.snap
@@ -0,0 +1,53 @@
+// Jest Snapshot v1, https://goo.gl/fbAQLP
+
+exports[`TeamSettings (Old) render() renders 1`] = `
+<SideEffect(DocumentTitle)
+  title="Team Settings - Sentry"
+>
+  <div
+    className="box"
+  >
+    <div
+      className="box-content with-padding"
+    >
+      <ApiForm
+        apiEndpoint="/teams/org/team-slug/"
+        apiMethod="PUT"
+        cancelLabel="Cancel"
+        className="form-stacked"
+        errorMessage="Unable to save your changes. Please ensure all fields are valid and try again."
+        footerClass="form-actions align-right"
+        hideErrors={false}
+        initialData={
+          Object {
+            "name": "Team Name",
+            "slug": "team-slug",
+          }
+        }
+        onSubmitSuccess={[Function]}
+        requireChanges={true}
+        resetOnError={false}
+        submitDisabled={false}
+        submitLabel="Save Changes"
+      >
+        <TextField
+          disabled={false}
+          hideErrorMessage={false}
+          label="Name"
+          name="name"
+          placeholder="e.g. API Team"
+          required={true}
+        />
+        <TextField
+          disabled={false}
+          hideErrorMessage={false}
+          label="Short name"
+          name="slug"
+          placeholder="e.g. api-team"
+          required={true}
+        />
+      </ApiForm>
+    </div>
+  </div>
+</SideEffect(DocumentTitle)>
+`;
diff --git a/tests/js/spec/views/__snapshots__/teamSettings.spec.jsx.snap b/tests/js/spec/views/__snapshots__/teamSettings.spec.jsx.snap
index 6bad966dd0..c95c73c73b 100644
--- a/tests/js/spec/views/__snapshots__/teamSettings.spec.jsx.snap
+++ b/tests/js/spec/views/__snapshots__/teamSettings.spec.jsx.snap
@@ -51,3 +51,55 @@ exports[`TeamSettings render() renders 1`] = `
   </div>
 </SideEffect(DocumentTitle)>
 `;
+
+exports[`TeamSettings render() renders with remove team 1`] = `
+<SideEffect(DocumentTitle)
+  title="Team Settings - Sentry"
+>
+  <div
+    className="box"
+  >
+    <div
+      className="box-content with-padding"
+    >
+      <ApiForm
+        apiEndpoint="/teams/org/team-slug/"
+        apiMethod="PUT"
+        cancelLabel="Cancel"
+        className="form-stacked"
+        errorMessage="Unable to save your changes. Please ensure all fields are valid and try again."
+        footerClass="form-actions align-right"
+        hideErrors={false}
+        initialData={
+          Object {
+            "name": "Team Name",
+            "slug": "team-slug",
+          }
+        }
+        onSubmitSuccess={[Function]}
+        requireChanges={true}
+        resetOnError={false}
+        submitDisabled={false}
+        submitLabel="Save Changes"
+      >
+        <TextField
+          disabled={false}
+          hideErrorMessage={false}
+          label="Name"
+          name="name"
+          placeholder="e.g. API Team"
+          required={true}
+        />
+        <TextField
+          disabled={false}
+          hideErrorMessage={false}
+          label="Short name"
+          name="slug"
+          placeholder="e.g. api-team"
+          required={true}
+        />
+      </ApiForm>
+    </div>
+  </div>
+</SideEffect(DocumentTitle)>
+`;
diff --git a/tests/js/spec/views/teamSettings.old.spec.jsx b/tests/js/spec/views/teamSettings.old.spec.jsx
new file mode 100644
index 0000000000..771bea0c21
--- /dev/null
+++ b/tests/js/spec/views/teamSettings.old.spec.jsx
@@ -0,0 +1,36 @@
+import PropTypes from 'prop-types';
+import React from 'react';
+import {shallow} from 'enzyme';
+
+import TeamSettings from 'app/views/settings/team/teamSettings.old';
+
+const childContextTypes = {
+  organization: PropTypes.object,
+  router: PropTypes.object,
+  location: PropTypes.object,
+};
+
+describe('TeamSettings (Old)', function() {
+  describe('render()', function() {
+    it('renders', function() {
+      let team = TestStubs.Team();
+      let wrapper = shallow(
+        <TeamSettings
+          routes={[]}
+          params={{orgId: 'org', teamId: team.slug}}
+          team={team}
+          onTeamChange={() => {}}
+        />,
+        {
+          context: {
+            router: TestStubs.router(),
+          },
+          childContextTypes,
+        }
+      );
+
+      wrapper.update();
+      expect(wrapper).toMatchSnapshot();
+    });
+  });
+});
diff --git a/tests/js/spec/views/teamSettings.spec.jsx b/tests/js/spec/views/teamSettings.spec.jsx
index d744718dd3..4c92b4c55c 100644
--- a/tests/js/spec/views/teamSettings.spec.jsx
+++ b/tests/js/spec/views/teamSettings.spec.jsx
@@ -14,9 +14,10 @@ const childContextTypes = {
 // #NEW-SETTINGS
 describe('TeamSettings', function() {
   describe('render()', function() {
-    it('renders', function() {
+    let wrapper;
+    beforeEach(function() {
       let team = TestStubs.Team();
-      let wrapper = shallow(
+      wrapper = shallow(
         <TeamSettings
           routes={[]}
           params={{orgId: 'org', teamId: team.slug}}
@@ -26,11 +27,28 @@ describe('TeamSettings', function() {
         {
           context: {
             router: TestStubs.router(),
+            organization: {
+              id: '1337',
+              access: [],
+            },
           },
           childContextTypes,
         }
       );
+    });
+
+    it('renders', function() {
+      wrapper.update();
+      expect(wrapper).toMatchSnapshot();
+    });
 
+    it('renders with remove team', function() {
+      wrapper.setContext({
+        organization: {
+          id: '1337',
+          access: ['team:admin'],
+        },
+      });
       wrapper.update();
       expect(wrapper).toMatchSnapshot();
     });
