commit 73a61850c7263009e348e7cd973bb26f44aceeb0
Author: David Cramer <dcramer@gmail.com>
Date:   Sat Apr 5 12:00:26 2014 -0700

    GroupTag => GroupTagValue

diff --git a/src/sentry/manager.py b/src/sentry/manager.py
index cd553a9d20..ec8f8c59fe 100644
--- a/src/sentry/manager.py
+++ b/src/sentry/manager.py
@@ -594,7 +594,7 @@ class GroupManager(BaseManager, ChartMixin):
         return group, is_new, is_sample
 
     def add_tags(self, group, tags):
-        from sentry.models import TagValue, GroupTag
+        from sentry.models import TagValue, GroupTagValue
 
         project = group.project
         date = group.last_seen
@@ -623,7 +623,7 @@ class GroupManager(BaseManager, ChartMixin):
                 'data': data,
             })
 
-            app.buffer.incr(GroupTag, {
+            app.buffer.incr(GroupTagValue, {
                 'times_seen': 1,
             }, {
                 'group': group,
diff --git a/src/sentry/models/project.py b/src/sentry/models/project.py
index 729c90c856..1d6c7f842e 100644
--- a/src/sentry/models/project.py
+++ b/src/sentry/models/project.py
@@ -75,7 +75,7 @@ class Project(Model):
 
     def merge_to(self, project):
         from sentry.models import (
-            Group, GroupCountByMinute, GroupTag, Event, TagValue
+            Group, GroupCountByMinute, GroupTagValue, Event, TagValue
         )
 
         if not isinstance(project, Project):
@@ -91,13 +91,13 @@ class Project(Model):
                 )
             except Group.DoesNotExist:
                 group.update(project=project)
-                for model in (Event, GroupTag, GroupCountByMinute):
+                for model in (Event, GroupTagValue, GroupCountByMinute):
                     model.objects.filter(project=self, group=group).update(project=project)
             else:
                 Event.objects.filter(group=group).update(group=other)
 
-                for obj in GroupTag.objects.filter(group=group):
-                    obj2, created = GroupTag.objects.get_or_create(
+                for obj in GroupTagValue.objects.filter(group=group):
+                    obj2, created = GroupTagValue.objects.get_or_create(
                         project=project,
                         group=group,
                         key=obj.key,
diff --git a/src/sentry/receivers/core.py b/src/sentry/receivers/core.py
index 7c8b0e8c54..e7352a3f4f 100644
--- a/src/sentry/receivers/core.py
+++ b/src/sentry/receivers/core.py
@@ -8,7 +8,7 @@ from sentry.db.models import update
 from sentry.db.models.utils import slugify_instance
 from sentry.models import (
     Project, User, Option, Team, ProjectKey, UserOption, TagKey, TagValue,
-    GroupTag, GroupTagKey, Activity, TeamMember, Alert)
+    GroupTagValue, GroupTagKey, Activity, TeamMember, Alert)
 from sentry.signals import buffer_incr_complete, regression_signal
 from sentry.utils.safe import safe_execute
 
@@ -129,7 +129,7 @@ def record_project_tag_count(filters, created, **kwargs):
     })
 
 
-@buffer_incr_complete.connect(sender=GroupTag, weak=False)
+@buffer_incr_complete.connect(sender=GroupTagValue, weak=False)
 def record_group_tag_count(filters, created, **kwargs):
     from sentry import app
 
diff --git a/src/sentry/tasks/cleanup.py b/src/sentry/tasks/cleanup.py
index 92424624c7..f6c4dc6852 100644
--- a/src/sentry/tasks/cleanup.py
+++ b/src/sentry/tasks/cleanup.py
@@ -27,7 +27,7 @@ def cleanup(days=30, project=None, chunk_size=1000, **kwargs):
     # TODO: TagKey and GroupTagKey need cleaned up
     from sentry.models import (
         Group, Event, GroupCountByMinute, EventMapping,
-        GroupTag, TagValue, ProjectCountByMinute, Alert,
+        GroupTagValue, TagValue, ProjectCountByMinute, Alert,
         Activity, LostPasswordHash)
     from sentry.search.django.models import SearchDocument
 
@@ -35,7 +35,7 @@ def cleanup(days=30, project=None, chunk_size=1000, **kwargs):
         (SearchDocument, 'date_changed'),
         (GroupCountByMinute, 'date'),
         (ProjectCountByMinute, 'date'),
-        (GroupTag, 'last_seen'),
+        (GroupTagValue, 'last_seen'),
         (Event, 'datetime'),
         (Activity, 'datetime'),
         (TagValue, 'last_seen'),
diff --git a/src/sentry/tasks/deletion.py b/src/sentry/tasks/deletion.py
index bd03a30236..71348f5e63 100644
--- a/src/sentry/tasks/deletion.py
+++ b/src/sentry/tasks/deletion.py
@@ -15,7 +15,7 @@ from sentry.tasks.base import instrumented_task
 def delete_project(object_id, **kwargs):
     from sentry.constants import STATUS_HIDDEN
     from sentry.models import (
-        Project, ProjectKey, TagKey, TagValue, GroupTagKey, GroupTag,
+        Project, ProjectKey, TagKey, TagValue, GroupTagKey, GroupTagValue,
         GroupCountByMinute, ProjectCountByMinute, Activity, EventMapping,
         Event, Group
     )
@@ -33,7 +33,7 @@ def delete_project(object_id, **kwargs):
     # This handles cascades properly
     # TODO: this doesn't clean up the index
     for model in (
-            ProjectKey, TagKey, TagValue, GroupTagKey, GroupTag,
+            ProjectKey, TagKey, TagValue, GroupTagKey, GroupTagValue,
             GroupCountByMinute, ProjectCountByMinute, Activity, EventMapping,
             Event, Group):
         logger.info('Removing %r objects where project=%s', model, p.id)
diff --git a/tests/sentry/tasks/cleanup/tests.py b/tests/sentry/tasks/cleanup/tests.py
index c3d7fae0d1..40c497c80d 100644
--- a/tests/sentry/tasks/cleanup/tests.py
+++ b/tests/sentry/tasks/cleanup/tests.py
@@ -4,12 +4,14 @@ from __future__ import absolute_import
 
 from celery.task import Task
 from sentry.models import (Event, Group, GroupCountByMinute,
-    GroupTag, ProjectCountByMinute, TagValue, TagKey)
+    GroupTagValue, ProjectCountByMinute, TagValue, TagKey)
 from sentry.tasks.cleanup import cleanup
 from sentry.testutils import TestCase
 
-ALL_MODELS = (Event, Group, ProjectCountByMinute, GroupCountByMinute, GroupTag,
-              TagValue, TagKey)
+ALL_MODELS = (
+    Event, Group, ProjectCountByMinute, GroupCountByMinute, GroupTagValue,
+    TagValue, TagKey
+)
 
 
 class SentryCleanupTest(TestCase):
