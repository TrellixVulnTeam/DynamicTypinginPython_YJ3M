commit c023c6a63ecaa9e068c433544528040edc737942
Author: David Cramer <dcramer@gmail.com>
Date:   Thu Dec 18 13:21:50 2014 -0800

    Add dsn to platform index

diff --git a/src/sentry/templates/sentry/help/platform_details.html b/src/sentry/templates/sentry/help/platform_details.html
index 93e5f89315..70373e941c 100644
--- a/src/sentry/templates/sentry/help/platform_details.html
+++ b/src/sentry/templates/sentry/help/platform_details.html
@@ -6,42 +6,6 @@
 {% block title %}{{ platform_title }} Client Configuration | {{ block.super }}{% endblock %}
 {% block client_overview_class %}{% endblock %}
 
-{% block pre_breadcrumbs %}
-  {% if org_results %}
-  <div class="select-project dropdown pull-right">
-    <a class="dropdown-toggle" data-toggle="dropdown" href="javascript:void(0)">
-    {% if selected_project %}
-      <span class="project-label">Project:</span> {{ selected_project.name }} <span class="caret"></span>
-    {% else %}
-      <span class="project-label">Project:</span> (Select) <span class="caret"></span>
-    {% endif %}
-    </a>
-    <div class="dropdown-menu">
-      <ul class="orgs">
-      {% for org, team_results in org_results %}
-        <li class="org">
-          <h5>{{ org.name }}</h5>
-          <ul class="teams unstyled">
-          {% for team, project_results in team_results %}
-            <li class="team">
-              <h6>{{ team.name }}</h6>
-              <ul class="projects unstyled">
-              {% for project in project_results %}
-                <li{% if project == selected_project %} class="active"{% endif %}>
-                  <a href="?pid={{ project.id }}">{{ project.name }}</a>
-                </li>
-              {% endfor %}
-              </ul>
-            </li>
-          {% endfor %}
-        </li>
-      {% endfor %}
-      </ul>
-    </div>
-  </div>
-  {% endif %}
-{% endblock %}
-
 {% block breadcrumbs %}
   {{ block.super }}
   <li class="divider">/</li>
diff --git a/src/sentry/templates/sentry/help/platform_index.html b/src/sentry/templates/sentry/help/platform_index.html
index a184f12e29..bc579327ca 100644
--- a/src/sentry/templates/sentry/help/platform_index.html
+++ b/src/sentry/templates/sentry/help/platform_index.html
@@ -6,6 +6,42 @@
 {% block title %}{% trans "Platforms" %} | {{ block.super }}{% endblock %}
 {% block client_overview_class %}active{% endblock %}
 
+{% block pre_breadcrumbs %}
+  {% if org_results %}
+  <div class="select-project dropdown pull-right">
+    <a class="dropdown-toggle" data-toggle="dropdown" href="javascript:void(0)">
+    {% if selected_project %}
+      <span class="project-label">Project:</span> {{ selected_project.name }} <span class="caret"></span>
+    {% else %}
+      <span class="project-label">Project:</span> (Select) <span class="caret"></span>
+    {% endif %}
+    </a>
+    <div class="dropdown-menu">
+      <ul class="orgs">
+      {% for org, team_results in org_results %}
+        <li class="org">
+          <h5>{{ org.name }}</h5>
+          <ul class="teams unstyled">
+          {% for team, project_results in team_results %}
+            <li class="team">
+              <h6>{{ team.name }}</h6>
+              <ul class="projects unstyled">
+              {% for project in project_results %}
+                <li{% if project == selected_project %} class="active"{% endif %}>
+                  <a href="?pid={{ project.id }}">{{ project.name }}</a>
+                </li>
+              {% endfor %}
+              </ul>
+            </li>
+          {% endfor %}
+        </li>
+      {% endfor %}
+      </ul>
+    </div>
+  </div>
+  {% endif %}
+{% endblock %}
+
 {% block breadcrumbs %}
     {{ block.super }}
     <li class="divider">/</li>
@@ -17,6 +53,20 @@
 
     <p>While Sentry is designed to work on any platform, we officially support a subset. If you're looking to integrate Sentry on an unsupported platform please take a look at our <a href="http://sentry.readthedocs.org/en/latest/developer/client/index.html">client API reference</a>.</p>
 
+{% if dsn %}
+    <h3>Your DSN</h3>
+
+    <p>{% trans "If you already know what you're doing, you can just drop the DSN your client's configuration:" %}</p>
+
+    <pre class="clippy">{{ dsn }}</pre>
+
+    {% if dsn_public %}
+        <p>{% blocktrans with 'https://github.com/getsentry/raven-js' as link %}If this is a client that only needs public access (like <a href="{{ link }}">raven-js</a>), you can use the following public DSN:{% endblocktrans %}</p>
+
+        <pre class="clippy">{{ dsn_public }}</pre>
+    {% endif %}
+{% endif %}
+
     <h4>Our clients</h4>
 
     <ul class="client-platform-list list-unstyled">
diff --git a/src/sentry/web/frontend/help_platform_base.py b/src/sentry/web/frontend/help_platform_base.py
new file mode 100644
index 0000000000..edd162711b
--- /dev/null
+++ b/src/sentry/web/frontend/help_platform_base.py
@@ -0,0 +1,90 @@
+from __future__ import absolute_import
+
+from django.db.models import Q
+from itertools import groupby
+
+from sentry.models import Project, ProjectKey
+from sentry.web.frontend.base import BaseView
+
+
+class HelpPlatformBaseView(BaseView):
+    auth_required = False
+
+    def get_project_list(self, user):
+        return list(Project.objects.filter(
+            Q(organization__member_set__has_global_access=True, organization__member_set__user=user)
+            | Q(team__organizationmember__user=user)
+        ).select_related('team', 'organization').order_by('organization', 'team'))
+
+    def group_project_list(self, project_list):
+        results = []
+        for org, org_project_list in groupby(project_list, key=lambda x: x.organization):
+            org_results = []
+            for team, team_project_list in groupby(list(org_project_list), key=lambda x: x.team):
+                org_results.append((team, list(team_project_list)))
+            results.append((org, org_results))
+        return results
+
+    def get_key(self, project, user):
+        try:
+            key = ProjectKey.objects.filter(user=None, project=project)[0]
+        except ProjectKey.DoesNotExist:
+            try:
+                key = ProjectKey.objects.get(user=user, project=project)
+            except IndexError:
+                key = None
+
+        return key
+
+    def convert_args(self, request, *args, **kwargs):
+        try:
+            pid = int(request.GET.get('pid', request.session.get('pid', 0)))
+        except (TypeError, ValueError):
+            pid = None
+
+        if request.user.is_authenticated():
+            project_list = self.get_project_list(request.user)
+        else:
+            project_list = []
+
+        if pid:
+            for project in project_list:
+                if pid == project.id:
+                    selected_project = project
+                    break
+            else:
+                selected_project = None
+        else:
+            selected_project = None
+
+        if selected_project:
+            request.session['pid'] = selected_project.id
+
+        kwargs['project_list'] = project_list
+        kwargs['selected_project'] = selected_project
+
+        return (args, kwargs)
+
+    def get_context_data(self, request, project_list, selected_project, **kwargs):
+        context = super(HelpPlatformBaseView, self).get_context_data(request, **kwargs)
+
+        if selected_project:
+            key = self.get_key(selected_project, request.user)
+        else:
+            key = None
+
+        if key:
+            dsn_private = key.dsn_private
+            dsn_public = key.dsn_public
+        else:
+            dsn_private = None
+            dsn_public = None
+
+        context = {
+            'selected_project': selected_project,
+            'org_results': self.group_project_list(project_list),
+            'dsn': dsn_private,
+            'dns_public': dsn_public,
+
+        }
+        return context
diff --git a/src/sentry/web/frontend/help_platform_details.py b/src/sentry/web/frontend/help_platform_details.py
index b6fd287f34..f648a3eff8 100644
--- a/src/sentry/web/frontend/help_platform_details.py
+++ b/src/sentry/web/frontend/help_platform_details.py
@@ -1,88 +1,24 @@
 from __future__ import absolute_import
 
-from django.db.models import Q
 from django.http import Http404
-from itertools import groupby
 
 from sentry.constants import PLATFORM_LIST, PLATFORM_TITLES
-from sentry.models import Project, ProjectKey
 from sentry.web.helpers import render_to_response, render_to_string
-from sentry.web.frontend.base import BaseView
+from sentry.web.frontend.help_platform_base import HelpPlatformBaseView
 
 
-class HelpPlatformDetailsView(BaseView):
-    auth_required = False
-
-    def get_project_list(self, user):
-        return list(Project.objects.filter(
-            Q(organization__member_set__has_global_access=True, organization__member_set__user=user)
-            | Q(team__organizationmember__user=user)
-        ).select_related('team', 'organization').order_by('organization', 'team'))
-
-    def group_project_list(self, project_list):
-        results = []
-        for org, org_project_list in groupby(project_list, key=lambda x: x.organization):
-            org_results = []
-            for team, team_project_list in groupby(list(org_project_list), key=lambda x: x.team):
-                org_results.append((team, list(team_project_list)))
-            results.append((org, org_results))
-        return results
-
-    def get(self, request, platform):
+class HelpPlatformDetailsView(HelpPlatformBaseView):
+    def get(self, request, platform, project_list, selected_project):
         if platform not in PLATFORM_LIST:
             raise Http404
 
         template = 'sentry/partial/client_config/%s.html' % (platform,)
 
-        if request.user.is_authenticated():
-            project_list = self.get_project_list(request.user)
-        else:
-            project_list = []
-
-        org_results = self.group_project_list(project_list)
-
-        try:
-            pid = int(request.GET.get('pid', request.session.get('pid', 0)))
-        except (TypeError, ValueError):
-            pid = None
-
-        if pid:
-            for project in project_list:
-                if pid == project.id:
-                    selected_project = project
-                    break
-            else:
-                selected_project = None
-        else:
-            selected_project = None
-
-        if selected_project:
-            request.session['pid'] = selected_project.id
-            try:
-                key = ProjectKey.objects.filter(user=None, project=project)[0]
-            except ProjectKey.DoesNotExist:
-                try:
-                    key = ProjectKey.objects.get(user=request.user, project=project)
-                except IndexError:
-                    key = None
-        else:
-            key = None
-
-        if key:
-            dsn_private = key.dsn_private
-            dsn_public = key.dsn_public
-        else:
-            dsn_private = None
-            dsn_public = None
-
-        context = {
-            'selected_project': selected_project,
-            'org_results': org_results,
-            'dsn': dsn_private,
-            'dsn_public': dsn_public,
+        context = self.get_context_data(request, project_list, selected_project)
+        context.update({
             'platform': platform,
             'platform_title': PLATFORM_TITLES.get(platform, platform.title()),
-        }
+        })
 
         context['template'] = render_to_string(template, context, request)
 
diff --git a/src/sentry/web/frontend/help_platform_index.py b/src/sentry/web/frontend/help_platform_index.py
index 2bf050800b..144cca762f 100644
--- a/src/sentry/web/frontend/help_platform_index.py
+++ b/src/sentry/web/frontend/help_platform_index.py
@@ -1,19 +1,8 @@
 from __future__ import absolute_import, print_function
 
-from sentry.web.helpers import render_to_response
-from sentry.web.frontend.base import BaseView
+from sentry.web.frontend.help_platform_base import HelpPlatformBaseView
 
 
-class HelpPlatformIndexView(BaseView):
-    auth_required = False
-
-    def get(self, request):
-        try:
-            pid = int(request.GET.get('pid', 0))
-        except (TypeError, ValueError):
-            pid = None
-
-        if pid:
-            request.session['pid'] = pid
-
-        return render_to_response('sentry/help/platform_index.html', {}, request)
+class HelpPlatformIndexView(HelpPlatformBaseView):
+    def get(self, request, project_list, selected_project):
+        return self.respond('sentry/help/platform_index.html')
