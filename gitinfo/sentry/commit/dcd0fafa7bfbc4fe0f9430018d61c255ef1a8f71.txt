commit dcd0fafa7bfbc4fe0f9430018d61c255ef1a8f71
Author: Mark Story <mark@sentry.io>
Date:   Fri Aug 31 13:39:38 2018 -0400

    feat(projects) Remove old settings endpoints
    
    Project transfer and remove workflows have been moved to react, so we
    won't need these anymore.

diff --git a/src/sentry/web/frontend/remove_project.py b/src/sentry/web/frontend/remove_project.py
deleted file mode 100644
index 66c01b444c..0000000000
--- a/src/sentry/web/frontend/remove_project.py
+++ /dev/null
@@ -1,50 +0,0 @@
-from __future__ import absolute_import
-
-from django import forms
-from django.contrib import messages
-from django.core.urlresolvers import reverse
-from django.http import HttpResponseRedirect
-from django.utils.translation import ugettext_lazy as _
-
-from sentry.api import client
-from sentry.web.frontend.base import ProjectView
-
-
-class RemoveProjectForm(forms.Form):
-    pass
-
-
-class RemoveProjectView(ProjectView):
-    required_scope = 'project:admin'
-    sudo_required = True
-
-    def get_form(self, request):
-        if request.method == 'POST':
-            return RemoveProjectForm(request.POST)
-        return RemoveProjectForm()
-
-    def handle(self, request, organization, project):
-        form = self.get_form(request)
-
-        if form.is_valid():
-            client.delete(
-                '/projects/{}/{}/'.format(organization.slug, project.slug),
-                request=request,
-                is_sudo=True
-            )
-
-            project_name = project.slug.encode('utf-8')
-            messages.add_message(
-                request, messages.SUCCESS,
-                _(u'The project %r was scheduled for deletion.') % (project_name, )
-            )
-
-            return HttpResponseRedirect(
-                reverse('sentry-organization-home', args=[organization.slug])
-            )
-
-        context = {
-            'form': form,
-        }
-
-        return self.respond('sentry/projects/remove.html', context)
diff --git a/src/sentry/web/frontend/transfer_project.py b/src/sentry/web/frontend/transfer_project.py
deleted file mode 100644
index a434b4398d..0000000000
--- a/src/sentry/web/frontend/transfer_project.py
+++ /dev/null
@@ -1,105 +0,0 @@
-from __future__ import absolute_import
-
-import six
-from uuid import uuid4
-from six.moves.urllib.parse import urlencode
-
-from django import forms
-from django.contrib import messages
-from django.core.urlresolvers import reverse
-from django.http import HttpResponseRedirect
-from django.utils import timezone
-from django.utils.translation import ugettext_lazy as _
-
-from sentry import roles, options
-from sentry.web.frontend.base import ProjectView
-from sentry.utils.email import MessageBuilder
-from sentry.utils.http import absolute_uri
-from sentry.utils.signing import sign
-from sentry.models import AuditLogEntryEvent, OrganizationMember
-
-
-class TransferProjectForm(forms.Form):
-    email = forms.CharField(
-        label=_('Organization Owner'),
-        max_length=200,
-        widget=forms.TextInput(attrs={'placeholder': _('user@company.com')})
-    )
-
-
-class TransferProjectView(ProjectView):
-    required_scope = 'project:admin'
-    sudo_required = True
-
-    def get_form(self, request):
-        if request.method == 'POST':
-            return TransferProjectForm(request.POST)
-        return TransferProjectForm()
-
-    def handle(self, request, organization, project):
-        form = self.get_form(request)
-
-        if form.is_valid():
-            email = form.cleaned_data.get('email')
-            try:
-                owner = OrganizationMember.objects.filter(
-                    user__email__iexact=email,
-                    role=roles.get_top_dog().id,
-                    user__is_active=True,
-                )[0]
-            except IndexError:
-                messages.add_message(
-                    request, messages.ERROR, six.text_type(
-                        _('Could not find owner with that email')))
-                return self.respond('sentry/projects/transfer.html', context={'form': form})
-
-            transaction_id = uuid4().hex
-            url_data = sign(
-                actor_id=request.user.id,
-                from_organization_id=organization.id,
-                project_id=project.id,
-                user_id=owner.user_id,
-                transaction_id=transaction_id)
-
-            context = {
-                'email': email,
-                'from_org': organization.name,
-                'project_name': project.slug,
-                'request_time': timezone.now(),
-                'url':
-                absolute_uri('/accept-transfer/') + '?' + urlencode({'data': url_data}),
-                'requester': request.user
-            }
-            MessageBuilder(
-                subject='%sRequest for Project Transfer' %
-                (options.get('mail.subject-prefix'), ),
-                template='sentry/emails/transfer_project.txt',
-                html_template='sentry/emails/transfer_project.html',
-                type='org.confirm_project_transfer_request',
-                context=context,
-            ).send_async([email])
-
-            self.create_audit_entry(
-                request=request,
-                organization=project.organization,
-                target_object=project.id,
-                event=AuditLogEntryEvent.PROJECT_REQUEST_TRANSFER,
-                data=project.get_audit_log_data(),
-                transaction_id=transaction_id,
-            )
-
-            messages.add_message(
-                request, messages.SUCCESS,
-                _(u'A request was sent to move project %r to a different organization') %
-                (project.slug.encode('utf-8'), )
-            )
-
-            return HttpResponseRedirect(
-                reverse('sentry-organization-home', args=[organization.slug])
-            )
-
-        context = {
-            'form': form,
-        }
-
-        return self.respond('sentry/projects/transfer.html', context)
diff --git a/src/sentry/web/urls.py b/src/sentry/web/urls.py
index 3a60c4842c..c9a11b2e7d 100644
--- a/src/sentry/web/urls.py
+++ b/src/sentry/web/urls.py
@@ -45,8 +45,6 @@ from sentry.web.frontend.react_page import GenericReactPageView, ReactPageView
 from sentry.web.frontend.reactivate_account import ReactivateAccountView
 from sentry.web.frontend.release_webhook import ReleaseWebhookView
 from sentry.web.frontend.restore_organization import RestoreOrganizationView
-from sentry.web.frontend.remove_project import RemoveProjectView
-from sentry.web.frontend.transfer_project import TransferProjectView
 from sentry.web.frontend.team_avatar import TeamAvatarPhotoView
 from sentry.web.frontend.account_identity import AccountIdentityAssociateView
 from sentry.web.frontend.remove_team import RemoveTeamView
@@ -470,18 +468,6 @@ urlpatterns += patterns(
         react_page_view,
         name='sentry-manage-project'
     ),
-    # TODO REMOVEME #NEW-SETTINGS, redirect to project settings?
-    url(
-        r'^(?P<organization_slug>[\w_-]+)/(?P<project_slug>[\w_-]+)/settings/remove/$',
-        RemoveProjectView.as_view(),
-        name='sentry-remove-project'
-    ),
-    # TODO REMOVEME #NEW-SETTINGS, redirect to project settings?
-    url(
-        r'^(?P<organization_slug>[\w_-]+)/(?P<project_slug>[\w_-]+)/settings/transfer/$',
-        TransferProjectView.as_view(),
-        name='sentry-transfer-project'
-    ),
     url(
         r'^avatar/(?P<avatar_id>[^\/]+)/$',
         UserAvatarPhotoView.as_view(),
diff --git a/tests/sentry/web/frontend/test_remove_project.py b/tests/sentry/web/frontend/test_remove_project.py
deleted file mode 100644
index bbb2d705e8..0000000000
--- a/tests/sentry/web/frontend/test_remove_project.py
+++ /dev/null
@@ -1,55 +0,0 @@
-from __future__ import absolute_import
-
-from django.core.urlresolvers import reverse
-
-from sentry.models import Project, ProjectStatus, DeletedProject
-from sentry.testutils import TestCase, PermissionTestCase
-
-
-class RemoveProjectPermissionTest(PermissionTestCase):
-    def setUp(self):
-        super(RemoveProjectPermissionTest, self).setUp()
-        self.project = self.create_project(teams=[self.team])
-        self.path = reverse(
-            'sentry-remove-project', args=[self.organization.slug, self.project.slug]
-        )
-
-    def test_teamless_admin_cannot_load(self):
-        self.assert_teamless_admin_cannot_access(self.path)
-
-    def test_team_admin_can_load(self):
-        self.assert_team_admin_can_access(self.path)
-
-    def test_owner_can_load(self):
-        self.assert_owner_can_access(self.path)
-
-
-class RemoveProjectTest(TestCase):
-    def setUp(self):
-        super(RemoveProjectTest, self).setUp()
-        self.owner = self.create_user(email='example@example.com', is_superuser=False)
-        organization = self.create_organization(owner=self.owner)
-        self.team = self.create_team(name='bar', organization=organization)
-        self.project = self.create_project(name='bar', teams=[self.team])
-        self.path = reverse('sentry-remove-project', args=[organization.slug, self.project.slug])
-
-    def test_requires_authentication(self):
-        self.assertRequiresAuthentication(self.path, 'POST')
-
-    def test_renders_template_with_get(self):
-        self.login_as(self.owner)
-
-        resp = self.client.get(self.path)
-        assert resp.status_code == 200
-        self.assertTemplateUsed(resp, 'sentry/projects/remove.html')
-        assert resp.context['project'] == self.project
-
-    def test_deletion_flow(self):
-        self.login_as(self.owner)
-
-        resp = self.client.post(self.path, {})
-        assert resp.status_code == 302
-        assert Project.objects.get(id=self.project.id).status == ProjectStatus.PENDING_DELETION
-
-        deleted_project = DeletedProject.objects.get(slug=self.project.slug)
-        self.assert_valid_deleted_log(deleted_project, self.project)
diff --git a/tests/sentry/web/frontend/test_transfer_project.py b/tests/sentry/web/frontend/test_transfer_project.py
deleted file mode 100644
index d378ddcc23..0000000000
--- a/tests/sentry/web/frontend/test_transfer_project.py
+++ /dev/null
@@ -1,57 +0,0 @@
-from __future__ import absolute_import
-
-from django.core.urlresolvers import reverse
-
-from sentry.testutils import TestCase, PermissionTestCase
-
-
-class TransferProjectPermissionTest(PermissionTestCase):
-    def setUp(self):
-        super(TransferProjectPermissionTest, self).setUp()
-        self.project = self.create_project(teams=[self.team])
-        self.path = reverse(
-            'sentry-transfer-project', args=[self.organization.slug, self.project.slug]
-        )
-
-    def test_teamless_admin_cannot_load(self):
-        self.assert_teamless_admin_cannot_access(self.path)
-
-    def test_team_admin_can_load(self):
-        self.assert_team_admin_can_access(self.path)
-
-    def test_owner_can_load(self):
-        self.assert_owner_can_access(self.path)
-
-
-class TransferProjectTest(TestCase):
-    def setUp(self):
-        super(TransferProjectTest, self).setUp()
-        self.owner = self.create_user(email='example@example.com', is_superuser=False)
-        organization = self.create_organization(owner=self.owner)
-        self.team = self.create_team(name='bar', organization=organization)
-        self.project = self.create_project(name='bar', teams=[self.team])
-        self.path = reverse('sentry-transfer-project', args=[organization.slug, self.project.slug])
-
-    def test_requires_authentication(self):
-        self.assertRequiresAuthentication(self.path, 'POST')
-
-    def test_renders_template_with_get(self):
-        self.login_as(self.owner)
-
-        resp = self.client.get(self.path)
-        assert resp.status_code == 200
-        self.assertTemplateUsed(resp, 'sentry/projects/transfer.html')
-        assert resp.context['project'] == self.project
-
-    def test_deletion_flow(self):
-        self.login_as(self.owner)
-        email = self.owner.email
-
-        resp = self.client.post(
-            self.path, format='json', data={
-                'email': email,
-            }
-        )
-        assert resp.status_code == 302
-        assert resp['Location'] == 'http://testserver' + \
-            reverse('sentry-organization-home', args=[self.team.organization.slug])
