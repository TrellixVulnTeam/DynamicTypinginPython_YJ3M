commit 774ebf3c5f225b54a530167ea3e85494fd6eda60
Author: Billy Vong <billyvg@users.noreply.github.com>
Date:   Tue Jan 16 12:18:57 2018 -0800

    feat(ui): Apply consistent page title to project settings (#6975)

diff --git a/src/sentry/static/sentry/app/views/projectAlertRules.jsx b/src/sentry/static/sentry/app/views/projectAlertRules.jsx
index 8ac206ff7b..46e18ea91a 100644
--- a/src/sentry/static/sentry/app/views/projectAlertRules.jsx
+++ b/src/sentry/static/sentry/app/views/projectAlertRules.jsx
@@ -1,6 +1,5 @@
 import PropTypes from 'prop-types';
 import React from 'react';
-
 import createReactClass from 'create-react-class';
 
 import {t} from '../locale';
@@ -12,7 +11,7 @@ import IndicatorStore from '../stores/indicatorStore';
 import ListLink from '../components/listLink';
 import LoadingError from '../components/loadingError';
 import LoadingIndicator from '../components/loadingIndicator';
-import SpreadLayout from '../components/spreadLayout';
+import SettingsPageHeader from './settings/components/settingsPageHeader';
 
 const RuleRow = createReactClass({
   displayName: 'RuleRow',
@@ -220,27 +219,30 @@ const ProjectAlertRules = createReactClass({
     let {orgId, projectId} = this.props.params;
     return (
       <div>
-        <SpreadLayout style={{marginBottom: 20}}>
-          <h2 style={{margin: 0}}>{t('Alerts')}</h2>
-          <Button
-            href={`/${orgId}/${projectId}/settings/alerts/rules/new/`}
-            priority="primary"
-            size="small"
-            className="pull-right"
-          >
-            <span className="icon-plus" />
-            {t('New Alert Rule')}
-          </Button>
-        </SpreadLayout>
-
-        <ul className="nav nav-tabs" style={{borderBottom: '1px solid #ddd'}}>
-          <ListLink to={`/${orgId}/${projectId}/settings/alerts/`} index={true}>
-            {t('Settings')}
-          </ListLink>
-          <ListLink to={`/${orgId}/${projectId}/settings/alerts/rules/`}>
-            {t('Rules')}
-          </ListLink>
-        </ul>
+        <SettingsPageHeader
+          title={t('Alerts')}
+          action={
+            <Button
+              href={`/${orgId}/${projectId}/settings/alerts/rules/new/`}
+              priority="primary"
+              size="small"
+              className="pull-right"
+            >
+              <span className="icon-plus" />
+              {t('New Alert Rule')}
+            </Button>
+          }
+          tabs={
+            <ul className="nav nav-tabs" style={{borderBottom: '1px solid #ddd'}}>
+              <ListLink to={`/${orgId}/${projectId}/settings/alerts/`} index={true}>
+                {t('Settings')}
+              </ListLink>
+              <ListLink to={`/${orgId}/${projectId}/settings/alerts/rules/`}>
+                {t('Rules')}
+              </ListLink>
+            </ul>
+          }
+        />
 
         {this.renderBody()}
       </div>
diff --git a/src/sentry/static/sentry/app/views/projectAlertSettings.jsx b/src/sentry/static/sentry/app/views/projectAlertSettings.jsx
index da23833b53..abafc647b1 100644
--- a/src/sentry/static/sentry/app/views/projectAlertSettings.jsx
+++ b/src/sentry/static/sentry/app/views/projectAlertSettings.jsx
@@ -1,13 +1,13 @@
 import PropTypes from 'prop-types';
 import React from 'react';
 
+import {ApiForm, RangeField, TextField} from '../components/forms';
+import {t, tct} from '../locale';
 import AsyncView from './asyncView';
 import Button from '../components/buttons/button';
 import ListLink from '../components/listLink';
 import PluginList from '../components/pluginList';
-import {ApiForm, RangeField, TextField} from '../components/forms';
-import {t, tct} from '../locale';
-import SpreadLayout from '../components/spreadLayout';
+import SettingsPageHeader from './settings/components/settingsPageHeader';
 
 class DigestSettings extends React.Component {
   static propTypes = {
@@ -184,27 +184,30 @@ export default class ProjectAlertSettings extends AsyncView {
     let {organization} = this.props;
     return (
       <div>
-        <SpreadLayout style={{marginBottom: 20}}>
-          <h2 style={{margin: 0}}>{t('Alerts')}</h2>
-          <Button
-            href={`/${orgId}/${projectId}/settings/alerts/rules/new/`}
-            priority="primary"
-            size="small"
-            className="pull-right"
-          >
-            <span className="icon-plus" />
-            {t('New Alert Rule')}
-          </Button>
-        </SpreadLayout>
-
-        <ul className="nav nav-tabs" style={{borderBottom: '1px solid #ddd'}}>
-          <ListLink to={`/${orgId}/${projectId}/settings/alerts/`} index={true}>
-            {t('Settings')}
-          </ListLink>
-          <ListLink to={`/${orgId}/${projectId}/settings/alerts/rules/`}>
-            {t('Rules')}
-          </ListLink>
-        </ul>
+        <SettingsPageHeader
+          title={t('Alerts')}
+          action={
+            <Button
+              href={`/${orgId}/${projectId}/settings/alerts/rules/new/`}
+              priority="primary"
+              size="small"
+              className="pull-right"
+            >
+              <span className="icon-plus" />
+              {t('New Alert Rule')}
+            </Button>
+          }
+          tabs={
+            <ul className="nav nav-tabs" style={{borderBottom: '1px solid #ddd'}}>
+              <ListLink to={`/${orgId}/${projectId}/settings/alerts/`} index={true}>
+                {t('Settings')}
+              </ListLink>
+              <ListLink to={`/${orgId}/${projectId}/settings/alerts/rules/`}>
+                {t('Rules')}
+              </ListLink>
+            </ul>
+          }
+        />
 
         <div className="alert alert-block alert-info">
           {tct(
diff --git a/src/sentry/static/sentry/app/views/projectCspSettings.jsx b/src/sentry/static/sentry/app/views/projectCspSettings.jsx
index d3b469ac98..b14cfa2a4d 100644
--- a/src/sentry/static/sentry/app/views/projectCspSettings.jsx
+++ b/src/sentry/static/sentry/app/views/projectCspSettings.jsx
@@ -1,13 +1,15 @@
 import PropTypes from 'prop-types';
 import React from 'react';
-
 import createReactClass from 'create-react-class';
 
+import {FormState, TextareaField, BooleanField} from '../components/forms';
+import {t, tct} from '../locale';
 import ApiMixin from '../mixins/apiMixin';
+import ExternalLink from '../components/externalLink';
 import IndicatorStore from '../stores/indicatorStore';
 import LoadingIndicator from '../components/loadingIndicator';
-import {FormState, TextareaField, BooleanField} from '../components/forms';
-import {t} from '../locale';
+import SettingsPageHeader from './settings/components/settingsPageHeader';
+import TextBlock from './settings/components/text/textBlock';
 
 const ProjectCspSettingsForm = createReactClass({
   displayName: 'ProjectCspSettingsForm',
@@ -256,26 +258,30 @@ const ProjectCspSettings = createReactClass({
 
     let {orgId, projectId} = this.props.params;
 
-    // TODO(dcramer): localize when language is final
     return (
       <div>
-        <h1>{t('CSP Reports')}</h1>
+        <SettingsPageHeader title={t('CSP Reports')} />
 
         <div className="alert alert-block alert-info">
           Psst! This feature is still a work-in-progress. Thanks for being an early
           adopter!
         </div>
 
-        <p>
-          <a href="https://en.wikipedia.org/wiki/Content_Security_Policy">
-            Content Security Policy
-          </a>{' '}
+        <TextBlock>
+          {tct(
+            `[link:Content Security Policy]
           (CSP) is a security standard which helps prevent cross-site scripting (XSS),
           clickjacking and other code injection attacks resulting from execution of
           malicious content in the trusted web page context. It's enforced by browser
           vendors, and Sentry supports capturing CSP violations using the standard
-          reporting hooks.
-        </p>
+          reporting hooks.`,
+            {
+              link: (
+                <ExternalLink href="https://en.wikipedia.org/wiki/Content_Security_Policy" />
+              ),
+            }
+          )}
+        </TextBlock>
 
         <div className="box">
           <div className="box-header">
diff --git a/src/sentry/static/sentry/app/views/projectDataForwarding.jsx b/src/sentry/static/sentry/app/views/projectDataForwarding.jsx
index dd1e6cf8b9..82c56b8244 100644
--- a/src/sentry/static/sentry/app/views/projectDataForwarding.jsx
+++ b/src/sentry/static/sentry/app/views/projectDataForwarding.jsx
@@ -1,15 +1,17 @@
 import React from 'react';
-
 import createReactClass from 'create-react-class';
 
+import {t, tct} from '../locale';
 import ApiMixin from '../mixins/apiMixin';
+import ExternalLink from '../components/externalLink';
 import HookStore from '../stores/hookStore';
 import LoadingError from '../components/loadingError';
 import LoadingIndicator from '../components/loadingIndicator';
 import PluginList from '../components/pluginList';
 import ProjectState from '../mixins/projectState';
+import SettingsPageHeader from './settings/components/settingsPageHeader';
 import StackedBarChart from '../components/stackedBarChart';
-import {t} from '../locale';
+import TextBlock from './settings/components/text/textBlock';
 
 const DataForwardingStats = createReactClass({
   displayName: 'DataForwardingStats',
@@ -211,29 +213,37 @@ export default createReactClass({
     let {params} = this.props;
     return (
       <div className="ref-data-forwarding-settings">
-        <h1>{t('Data Forwarding')}</h1>
-        <div className="panel panel-default">
-          <div className="panel-body p-b-0">
-            <p>
-              {
-                "Enable Data Forwarding to send processed events to your favorite business intelligence tools. The exact payload and types of data depend on the integration you're using."
-              }
-            </p>
-            <p>
-              Learn more about this functionality in our{' '}
-              <a href="https://docs.sentry.io/learn/data-forwarding/">documentation</a>
-              .
-            </p>
-            <p>
-              <small>
-                Note: Sentry will forward <strong>all applicable events</strong> to the
-                given provider, which in some situations may be a much more significant
-                volume of data.
-              </small>
-            </p>
-          </div>
+        <SettingsPageHeader title={t('Data Forwarding')} />
+
+        <div>
+          <TextBlock>
+            {t(
+              "Enable Data Forwarding to send processed events to your favorite business intelligence tools. The exact payload and types of data depend on the integration you're using."
+            )}
+          </TextBlock>
+
+          <TextBlock>
+            {tct('Learn more about this functionality in our [link:documentation].', {
+              link: <ExternalLink href="https://docs.sentry.io/learn/data-forwarding/" />,
+            })}
+          </TextBlock>
+
+          <TextBlock>
+            <small>
+              {tct(
+                `Note: Sentry will forward [em:all applicable events] to the
+              given provider, which in some situations may be a much more significant
+              volume of data.`,
+                {
+                  em: <strong />,
+                }
+              )}
+            </small>
+          </TextBlock>
         </div>
+
         <DataForwardingStats params={params} />
+
         {this.renderBody()}
       </div>
     );
diff --git a/src/sentry/static/sentry/app/views/projectDebugSymbols.jsx b/src/sentry/static/sentry/app/views/projectDebugSymbols.jsx
index ea9875536d..0edf4d6fbe 100644
--- a/src/sentry/static/sentry/app/views/projectDebugSymbols.jsx
+++ b/src/sentry/static/sentry/app/views/projectDebugSymbols.jsx
@@ -1,15 +1,19 @@
+import Modal from 'react-bootstrap/lib/Modal';
 import React from 'react';
 import createReactClass from 'create-react-class';
-import Modal from 'react-bootstrap/lib/Modal';
 
+import {t} from '../locale';
 import ApiMixin from '../mixins/apiMixin';
-import OrganizationState from '../mixins/organizationState';
-import LoadingError from '../components/loadingError';
-import LoadingIndicator from '../components/loadingIndicator';
 import DateTime from '../components/dateTime';
 import FileSize from '../components/fileSize';
+import LoadingError from '../components/loadingError';
+import LoadingIndicator from '../components/loadingIndicator';
+import OrganizationState from '../mixins/organizationState';
+import SettingsPageHeader from './settings/components/settingsPageHeader';
+import TextBlock from './settings/components/text/textBlock';
 import TimeSince from '../components/timeSince';
-import {t} from '../locale';
+
+const marginBottomStyle = {marginBottom: 40};
 
 const ProjectDebugSymbols = createReactClass({
   displayName: 'ProjectDebugSymbols',
@@ -105,7 +109,7 @@ const ProjectDebugSymbols = createReactClass({
 
   renderEmpty() {
     return (
-      <div className="box empty-stream">
+      <div style={marginBottomStyle} className="box empty-stream">
         <span className="icon icon-exclamation" />
         <p>{t('There are no debug symbols for this project.')}</p>
       </div>
@@ -145,7 +149,7 @@ const ProjectDebugSymbols = createReactClass({
 
     return indexedApps.map(app => {
       return (
-        <div className="box dashboard-widget" key={app.id}>
+        <div style={marginBottomStyle} className="box dashboard-widget" key={app.id}>
           <div className="box-content">
             <div className="tab-pane active">
               <div>
@@ -340,8 +344,8 @@ const ProjectDebugSymbols = createReactClass({
     }
     return (
       <div>
-        <h3>{t('Unreferenced Debug Information Files')}</h3>
-        <p>
+        <SettingsPageHeader title={t('Unreferenced Debug Information Files')} />
+        <TextBlock>
           {t(
             `
           This list represents all Debug Information Files which are not assigned to an
@@ -351,7 +355,7 @@ const ProjectDebugSymbols = createReactClass({
           can't locate the Info.plist file at the time of upload.
         `
           )}
-        </p>
+        </TextBlock>
         <table className="table">
           <thead>
             <tr>
@@ -372,8 +376,8 @@ const ProjectDebugSymbols = createReactClass({
   render() {
     return (
       <div>
-        <h1>{t('Debug Information Files')}</h1>
-        <p>
+        <SettingsPageHeader title={t('Debug Information Files')} />
+        <TextBlock>
           {t(
             `
           Here you can find uploaded debug information (for instance debug
@@ -383,9 +387,12 @@ const ProjectDebugSymbols = createReactClass({
           look at releases instead.
         `
           )}
-        </p>
+        </TextBlock>
+
         {this.renderDebugTable()}
+
         {this.renderUnreferencedDebugSymbols()}
+
         <Modal
           show={this.state.showModal}
           onHide={this.closeModal}
diff --git a/src/sentry/static/sentry/app/views/projectFilters.jsx b/src/sentry/static/sentry/app/views/projectFilters.jsx
index d2259c998f..85235260fb 100644
--- a/src/sentry/static/sentry/app/views/projectFilters.jsx
+++ b/src/sentry/static/sentry/app/views/projectFilters.jsx
@@ -1,22 +1,24 @@
 import PropTypes from 'prop-types';
 import React from 'react';
-import createReactClass from 'create-react-class';
-import _ from 'lodash';
 import ReactDOMServer from 'react-dom/server';
+import _ from 'lodash';
+import createReactClass from 'create-react-class';
 import moment from 'moment';
 
+import {FormState, TextareaField} from '../components/forms';
+import {intcomma} from '../utils';
+import {t, tn} from '../locale';
 import ApiMixin from '../mixins/apiMixin';
-import IndicatorStore from '../stores/indicatorStore';
 import GroupTombstones from '../components/groupTombstones';
 import HookStore from '../stores/hookStore';
+import IndicatorStore from '../stores/indicatorStore';
 import LoadingError from '../components/loadingError';
 import LoadingIndicator from '../components/loadingIndicator';
 import ProjectState from '../mixins/projectState';
+import SettingsPageHeader from './settings/components/settingsPageHeader';
 import StackedBarChart from '../components/stackedBarChart';
 import Switch from '../components/switch';
-import {FormState, TextareaField} from '../components/forms';
-import {t, tn} from '../locale';
-import {intcomma} from '../utils';
+import TextBlock from './settings/components/text/textBlock';
 import marked from '../utils/marked';
 
 const FilterSwitch = function(props) {
@@ -770,15 +772,14 @@ const ProjectFilters = createReactClass({
   },
 
   render() {
-    // TODO(dcramer): localize when language is final
     return (
       <div>
-        <h1>{t('Inbound Data Filters')}</h1>
-        <p>
+        <SettingsPageHeader title={t('Inbound Data Filters')} />
+        <TextBlock>
           {t(
             'Filters allow you to prevent Sentry from storing events in certain situations. Filtered events are tracked separately from rate limits, and do not apply to any project quotas.'
           )}
-        </p>
+        </TextBlock>
         {this.renderBody()}
       </div>
     );
diff --git a/src/sentry/static/sentry/app/views/projectGeneralSettings.jsx b/src/sentry/static/sentry/app/views/projectGeneralSettings.jsx
index 551c31617c..ab46f01ee3 100644
--- a/src/sentry/static/sentry/app/views/projectGeneralSettings.jsx
+++ b/src/sentry/static/sentry/app/views/projectGeneralSettings.jsx
@@ -9,11 +9,11 @@ import {
   TextareaField,
   TextField,
 } from '../components/forms';
-import IndicatorStore from '../stores/indicatorStore';
-
+import {getOrganizationState} from '../mixins/organizationState';
 import {t, tct} from '../locale';
 import AsyncView from './asyncView';
-import {getOrganizationState} from '../mixins/organizationState';
+import IndicatorStore from '../stores/indicatorStore';
+import SettingsPageHeader from './settings/components/settingsPageHeader';
 
 class ListAsTextareaField extends TextareaField {
   getValue(props, context) {
@@ -187,7 +187,8 @@ export default class ProjectGeneralSettings extends AsyncView {
 
     return (
       <div>
-        <h2>{t('Project Settings')}</h2>
+        <SettingsPageHeader title={t('Project Settings')} />
+
         <ApiForm
           initialData={initialData}
           apiMethod="PUT"
diff --git a/src/sentry/static/sentry/app/views/projectInstall/overview.jsx b/src/sentry/static/sentry/app/views/projectInstall/overview.jsx
index d049607edb..87495d6a5d 100644
--- a/src/sentry/static/sentry/app/views/projectInstall/overview.jsx
+++ b/src/sentry/static/sentry/app/views/projectInstall/overview.jsx
@@ -1,11 +1,12 @@
+import {browserHistory, Link} from 'react-router';
 import PropTypes from 'prop-types';
 import React from 'react';
-import {browserHistory, Link} from 'react-router';
 
+import {t, tct} from '../../locale';
 import AutoSelectText from '../../components/autoSelectText';
 import PlatformPicker from '../onboarding/project/platformpicker';
-
-import {t, tct} from '../../locale';
+import SettingsPageHeader from '../settings/components/settingsPageHeader';
+import TextBlock from '../settings/components/text/textBlock';
 
 class ProjectInstallOverview extends React.Component {
   static propTypes = {
@@ -44,12 +45,13 @@ class ProjectInstallOverview extends React.Component {
 
     return (
       <div>
-        <h1>{t('Configure your application')}</h1>
-        <p>
+        <SettingsPageHeader title={t('Configure your application')} />
+
+        <TextBlock>
           {t(
             'Get started by selecting the platform or language that powers your application.'
           )}
-        </p>
+        </TextBlock>
 
         {this.state.showDsn ? (
           <div>
diff --git a/src/sentry/static/sentry/app/views/projectIssueTracking.jsx b/src/sentry/static/sentry/app/views/projectIssueTracking.jsx
index 970241a795..b5e73be816 100644
--- a/src/sentry/static/sentry/app/views/projectIssueTracking.jsx
+++ b/src/sentry/static/sentry/app/views/projectIssueTracking.jsx
@@ -1,11 +1,13 @@
 import React from 'react';
-import PluginList from '../components/pluginList';
-import withPlugins from '../utils/withPlugins';
 
-import {t} from '../locale';
 import {fetchPlugins} from '../actionCreators/plugins';
+import {t} from '../locale';
 import LoadingIndicator from '../components/loadingIndicator';
+import PluginList from '../components/pluginList';
 import SentryTypes from '../proptypes';
+import SettingsPageHeader from './settings/components/settingsPageHeader';
+import TextBlock from './settings/components/text/textBlock';
+import withPlugins from '../utils/withPlugins';
 
 class ProjectIssueTracking extends React.Component {
   static contextTypes = {
@@ -37,13 +39,13 @@ class ProjectIssueTracking extends React.Component {
     if (issueTrackingPlugins.length) {
       return (
         <div className="ref-issue-tracking-settings">
-          <h2>{t('Issue Tracking')}</h2>
-          <p>
+          <SettingsPageHeader title={t('Issue Tracking')} />
+          <TextBlock>
             Enabling Issue Tracking will let you quickly create tasks within your existing
             tools. You'll find the new action on an issue's details page. Once you create
             an issue, you'll find a helpful annotation and link to the task in your
             project management tool.
-          </p>
+          </TextBlock>
           <PluginList
             organization={organization}
             project={project}
diff --git a/src/sentry/static/sentry/app/views/projectKeys.jsx b/src/sentry/static/sentry/app/views/projectKeys.jsx
index 60e4edf693..f9cb07e5e1 100644
--- a/src/sentry/static/sentry/app/views/projectKeys.jsx
+++ b/src/sentry/static/sentry/app/views/projectKeys.jsx
@@ -2,12 +2,12 @@ import {Link} from 'react-router';
 import DocumentTitle from 'react-document-title';
 import PropTypes from 'prop-types';
 import React from 'react';
-
 import createReactClass from 'create-react-class';
 
 import {t, tct} from '../locale';
 import ApiMixin from '../mixins/apiMixin';
 import AutoSelectText from '../components/autoSelectText';
+import Button from '../components/buttons/button';
 import ClippedBox from '../components/clippedBox';
 import Confirm from '../components/confirm';
 import DynamicWrapper from '../components/dynamicWrapper';
@@ -17,6 +17,8 @@ import LoadingIndicator from '../components/loadingIndicator';
 import OrganizationState from '../mixins/organizationState';
 import Pagination from '../components/pagination';
 import ProjectState from '../mixins/projectState';
+import SettingsPageHeader from './settings/components/settingsPageHeader';
+import TextBlock from './settings/components/text/textBlock';
 
 const KeyRow = createReactClass({
   displayName: 'KeyRow',
@@ -353,19 +355,28 @@ export default createReactClass({
     return (
       <DocumentTitle title={t('Client Keys')}>
         <div className="ref-keys">
-          {access.has('project:write') && (
-            <a onClick={this.onCreateKey} className="btn pull-right btn-primary btn-sm">
-              <span className="icon-plus" />&nbsp;{t('Generate New Key')}
-            </a>
-          )}
-          <h2>{t('Client Keys')}</h2>
-          <p>
-            To send data to Sentry you will need to configure an SDK with a client key
-            (usually referred to as the <code>SENTRY_DSN</code> value). For more
-            information on integrating Sentry with your application take a look at our{' '}
-            <a href="https://docs.sentry.io/">documentation</a>
-            .
-          </p>
+          <SettingsPageHeader
+            title={t('Client Keys')}
+            action={
+              access.has('project:write') ? (
+                <Button onClick={this.onCreateKey} size="small" priority="primary">
+                  <span className="icon-plus" />&nbsp;{t('Generate New Key')}
+                </Button>
+              ) : null
+            }
+          />
+          <TextBlock>
+            {tct(
+              `To send data to Sentry you will need to configure an SDK with a client key
+            (usually referred to as the [code:SENTRY_DSN] value). For more
+            information on integrating Sentry with your application take a look at our
+            [link:documentation].`,
+              {
+                link: <a href="https://docs.sentry.io/" />,
+                code: <code />,
+              }
+            )}
+          </TextBlock>
           {this.renderBody()}
         </div>
       </DocumentTitle>
diff --git a/src/sentry/static/sentry/app/views/projectPluginDetails.jsx b/src/sentry/static/sentry/app/views/projectPluginDetails.jsx
index 1ac59d6997..dd2d34a62b 100644
--- a/src/sentry/static/sentry/app/views/projectPluginDetails.jsx
+++ b/src/sentry/static/sentry/app/views/projectPluginDetails.jsx
@@ -7,6 +7,7 @@ import Button from '../components/buttons/button';
 import ExternalLink from '../components/externalLink';
 import IndicatorStore from '../stores/indicatorStore';
 import PluginConfig from '../components/pluginConfig';
+import SettingsPageHeader from './settings/components/settingsPageHeader';
 import withPlugins from '../utils/withPlugins';
 
 /**
@@ -107,9 +108,7 @@ class ProjectPluginDetails extends AsyncView {
 
     return (
       <div>
-        {this.renderActions()}
-        <h2>{pluginDetails.name}</h2>
-        <hr />
+        <SettingsPageHeader title={pluginDetails.name} action={this.renderActions()} />
         <div className="row">
           <div className="col-md-7">
             <PluginConfig
diff --git a/src/sentry/static/sentry/app/views/projectPlugins/projectPlugins.jsx b/src/sentry/static/sentry/app/views/projectPlugins/projectPlugins.jsx
index ea20e12ded..3ff020c3ab 100644
--- a/src/sentry/static/sentry/app/views/projectPlugins/projectPlugins.jsx
+++ b/src/sentry/static/sentry/app/views/projectPlugins/projectPlugins.jsx
@@ -6,6 +6,7 @@ import LoadingIndicator from '../../components/loadingIndicator';
 import ProjectPluginRow from './projectPluginRow';
 import RouteError from '../routeError';
 import SentryTypes from '../../proptypes';
+import SettingsPageHeader from '../settings/components/settingsPageHeader';
 
 class ProjectPlugins extends React.Component {
   static propTypes = {
@@ -24,7 +25,7 @@ class ProjectPlugins extends React.Component {
 
     return (
       <div>
-        <h2>{t('Integrations')}</h2>
+        <SettingsPageHeader title={t('Integrations')} />
 
         {hasError && <RouteError error={error} component={this} onRetry={onError} />}
         {isLoading && <LoadingIndicator />}
diff --git a/src/sentry/static/sentry/app/views/projectProcessingIssues.jsx b/src/sentry/static/sentry/app/views/projectProcessingIssues.jsx
index 6336676504..e3ec4982c7 100644
--- a/src/sentry/static/sentry/app/views/projectProcessingIssues.jsx
+++ b/src/sentry/static/sentry/app/views/projectProcessingIssues.jsx
@@ -1,16 +1,17 @@
 import React from 'react';
-
 import createReactClass from 'create-react-class';
 
+import {FormState} from '../components/forms';
+import {t, tn} from '../locale';
 import ApiMixin from '../mixins/apiMixin';
-import OrganizationState from '../mixins/organizationState';
-import TimeSince from '../components/timeSince';
+import IndicatorStore from '../stores/indicatorStore';
 import LoadingError from '../components/loadingError';
 import LoadingIndicator from '../components/loadingIndicator';
-import IndicatorStore from '../stores/indicatorStore';
-import {FormState} from '../components/forms';
+import OrganizationState from '../mixins/organizationState';
+import SettingsPageHeader from './settings/components/settingsPageHeader';
 import Switch from '../components/switch';
-import {t, tn} from '../locale';
+import TextBlock from './settings/components/text/textBlock';
+import TimeSince from '../components/timeSince';
 
 const MESSAGES = {
   native_no_crashed_thread: t('No crashed thread found in crash report'),
@@ -457,8 +458,8 @@ const ProjectProcessingIssues = createReactClass({
   render() {
     return (
       <div>
-        <h1>{t('Processing Issues')}</h1>
-        <p>
+        <SettingsPageHeader title={t('Processing Issues')} />
+        <TextBlock>
           {t(
             `
           For some platforms the event processing requires configuration or
@@ -468,7 +469,7 @@ const ProjectProcessingIssues = createReactClass({
           them.
         `
           )}
-        </p>
+        </TextBlock>
         {this.renderDebugTable()}
         {this.renderResolveButton()}
         {this.renderReprocessingSettings()}
diff --git a/src/sentry/static/sentry/app/views/projectReleaseTracking.jsx b/src/sentry/static/sentry/app/views/projectReleaseTracking.jsx
index 6a73a22032..4e59a632f6 100644
--- a/src/sentry/static/sentry/app/views/projectReleaseTracking.jsx
+++ b/src/sentry/static/sentry/app/views/projectReleaseTracking.jsx
@@ -8,8 +8,10 @@ import ApiMixin from '../mixins/apiMixin';
 import LoadingError from '../components/loadingError';
 import LoadingIndicator from '../components/loadingIndicator';
 import PluginList from '../components/pluginList';
-import withPlugins from '../utils/withPlugins';
 import SentryTypes from '../proptypes';
+import SettingsPageHeader from './settings/components/settingsPageHeader';
+import TextBlock from './settings/components/text/textBlock';
+import withPlugins from '../utils/withPlugins';
 
 const ProjectReleaseTracking = createReactClass({
   displayName: 'ProjectReleaseTracking',
@@ -131,12 +133,12 @@ const ProjectReleaseTracking = createReactClass({
 
     return (
       <div>
-        <h2>{t('Release Tracking')}</h2>
-        <p>
+        <SettingsPageHeader title={t('Release Tracking')} />
+        <TextBlock>
           {t(
             'Configure release tracking for this project to automatically record new releases of your application.'
           )}
-        </p>
+        </TextBlock>
         <div className="box">
           <div className="box-header">
             <h3>{t('Client Configuration')}</h3>
diff --git a/src/sentry/static/sentry/app/views/projectSavedSearches.jsx b/src/sentry/static/sentry/app/views/projectSavedSearches.jsx
index 409d73e880..136bf67638 100644
--- a/src/sentry/static/sentry/app/views/projectSavedSearches.jsx
+++ b/src/sentry/static/sentry/app/views/projectSavedSearches.jsx
@@ -1,15 +1,15 @@
 import PropTypes from 'prop-types';
 import React from 'react';
-
 import createReactClass from 'create-react-class';
 
+import {t} from '../locale';
 import ApiMixin from '../mixins/apiMixin';
+import Confirm from '../components/confirm';
 import IndicatorStore from '../stores/indicatorStore';
 import LoadingError from '../components/loadingError';
 import LoadingIndicator from '../components/loadingIndicator';
-import Confirm from '../components/confirm';
-import {t} from '../locale';
 import OrganizationState from '../mixins/organizationState';
+import SettingsPageHeader from './settings/components/settingsPageHeader';
 
 const SavedSearchRow = createReactClass({
   displayName: 'SavedSearchRow',
@@ -238,7 +238,7 @@ const ProjectSavedSearches = createReactClass({
         <table className="table">
           <thead>
             <tr>
-              <th>Search</th>
+              <th>{t('Search')}</th>
               <th style={{textAlign: 'center', width: 140}}>My Default</th>
               {access.has('project:write') && (
                 <th style={{textAlign: 'center', width: 140}}>Team Default</th>
@@ -268,10 +268,10 @@ const ProjectSavedSearches = createReactClass({
   },
 
   render() {
-    // TODO(dcramer): localize when language is final
     return (
       <div>
-        <h2>{t('Saved Searches')}</h2>
+        <SettingsPageHeader title={t('Saved Searches')} />
+
         {this.renderBody()}
       </div>
     );
diff --git a/src/sentry/static/sentry/app/views/projectTags.jsx b/src/sentry/static/sentry/app/views/projectTags.jsx
index 2d5c5325b6..8bcbe133aa 100644
--- a/src/sentry/static/sentry/app/views/projectTags.jsx
+++ b/src/sentry/static/sentry/app/views/projectTags.jsx
@@ -1,8 +1,11 @@
 import React from 'react';
-import AsyncView from './asyncView';
+
 import {t} from '../locale';
+import AsyncView from './asyncView';
 import ExternalLink from '../components/externalLink';
 import LinkWithConfirmation from '../components/linkWithConfirmation';
+import SettingsPageHeader from './settings/components/settingsPageHeader';
+import TextBlock from './settings/components/text/textBlock';
 
 export default class ProjectTags extends AsyncView {
   getEndpoints() {
@@ -32,15 +35,15 @@ export default class ProjectTags extends AsyncView {
   renderBody() {
     return (
       <div>
-        <h2>{t('Tags')}</h2>
-        <p>
+        <SettingsPageHeader title={t('Tags')} />
+        <TextBlock>
           Each event in Sentry may be annotated with various tags (key and value pairs).
           Learn how to{' '}
           <ExternalLink href="https://docs.sentry.io/hosted/learn/context/">
             add custom tags
           </ExternalLink>
           .
-        </p>
+        </TextBlock>
 
         <div className="panel panel-default">
           <table className="table">
diff --git a/src/sentry/static/sentry/app/views/projectUserReportSettings.jsx b/src/sentry/static/sentry/app/views/projectUserReportSettings.jsx
index 16d3f81994..da097472c5 100644
--- a/src/sentry/static/sentry/app/views/projectUserReportSettings.jsx
+++ b/src/sentry/static/sentry/app/views/projectUserReportSettings.jsx
@@ -1,13 +1,14 @@
 import PropTypes from 'prop-types';
 import React from 'react';
-
 import createReactClass from 'create-react-class';
 
+import {FormState, BooleanField} from '../components/forms';
+import {t} from '../locale';
 import ApiMixin from '../mixins/apiMixin';
 import IndicatorStore from '../stores/indicatorStore';
 import LoadingIndicator from '../components/loadingIndicator';
-import {FormState, BooleanField} from '../components/forms';
-import {t} from '../locale';
+import SettingsPageHeader from './settings/components/settingsPageHeader';
+import TextBlock from './settings/components/text/textBlock';
 
 const ProjectFeedbackSettingsForm = createReactClass({
   displayName: 'ProjectFeedbackSettingsForm',
@@ -290,26 +291,26 @@ const ProjectUserReportSettings = createReactClass({
 
     let {orgId, projectId} = this.props.params;
 
-    // TODO(dcramer): localize when language is final
     return (
       <div>
-        <h1>{t('User Feedback')}</h1>
+        <SettingsPageHeader title={t('User Feedback')} />
 
         <div className="alert alert-block alert-info">
           Psst! This feature is still a work-in-progress. Thanks for being an early
           adopter!
         </div>
 
-        <p>
+        <TextBlock>
           Enabling User Feedback allows you to interact with your users on an
           unprecedented level. Collect additional details about issues affecting them, and
           more importantly reach out to them with resolutions.
-        </p>
-        <p>
+        </TextBlock>
+        <TextBlock>
           When configured, your users will be presented with a dialog prompting them for
           additional information. That information will get attached to the issue in
           Sentry
-        </p>
+        </TextBlock>
+
         <p>
           <a className="btn btn-primary" onClick={this.handleClick}>
             See the report dialog in action
@@ -320,16 +321,19 @@ const ProjectUserReportSettings = createReactClass({
           <div className="box-header">
             <h3>{t('Integration')}</h3>
           </div>
+
           <div className="box-content with-padding">
-            <p>
+            <TextBlock>
               The following example uses our Django integration. Check the documentation
               for the SDK you're using for more details.
-            </p>
+            </TextBlock>
             <pre>{this.getInstructions()}</pre>
-            <p>
+
+            <TextBlock>
               If you're capturing an error with our Browser JS SDK, things get even
               simpler:
-            </p>
+            </TextBlock>
+
             <pre>{this.getBrowserJSInstructions()}</pre>
           </div>
         </div>
diff --git a/tests/js/spec/views/__snapshots__/projectAlertSettings.spec.jsx.snap b/tests/js/spec/views/__snapshots__/projectAlertSettings.spec.jsx.snap
index 549b949335..d6bb1e9e84 100644
--- a/tests/js/spec/views/__snapshots__/projectAlertSettings.spec.jsx.snap
+++ b/tests/js/spec/views/__snapshots__/projectAlertSettings.spec.jsx.snap
@@ -5,60 +5,48 @@ exports[`ProjectAlertSettings render() renders 1`] = `
   title="Project Alert Settings"
 >
   <div>
-    <SpreadLayout
-      center={true}
-      responsive={false}
-      style={
-        Object {
-          "marginBottom": 20,
-        }
+    <SettingsPageHeading
+      action={
+        <Button
+          className="pull-right"
+          disabled={false}
+          href="/org-slug/project-slug/settings/alerts/rules/new/"
+          priority="primary"
+          size="small"
+        >
+          <span
+            className="icon-plus"
+          />
+          New Alert Rule
+        </Button>
       }
-    >
-      <h2
-        style={
-          Object {
-            "margin": 0,
+      tabs={
+        <ul
+          className="nav nav-tabs"
+          style={
+            Object {
+              "borderBottom": "1px solid #ddd",
+            }
           }
-        }
-      >
-        Alerts
-      </h2>
-      <Button
-        className="pull-right"
-        disabled={false}
-        href="/org-slug/project-slug/settings/alerts/rules/new/"
-        priority="primary"
-        size="small"
-      >
-        <span
-          className="icon-plus"
-        />
-        New Alert Rule
-      </Button>
-    </SpreadLayout>
-    <ul
-      className="nav nav-tabs"
-      style={
-        Object {
-          "borderBottom": "1px solid #ddd",
-        }
+        >
+          <ListLink
+            activeClassName="active"
+            index={true}
+            to="/org-slug/project-slug/settings/alerts/"
+          >
+            Settings
+          </ListLink>
+          <ListLink
+            activeClassName="active"
+            index={false}
+            to="/org-slug/project-slug/settings/alerts/rules/"
+          >
+            Rules
+          </ListLink>
+        </ul>
       }
-    >
-      <ListLink
-        activeClassName="active"
-        index={true}
-        to="/org-slug/project-slug/settings/alerts/"
-      >
-        Settings
-      </ListLink>
-      <ListLink
-        activeClassName="active"
-        index={false}
-        to="/org-slug/project-slug/settings/alerts/rules/"
-      >
-        Rules
-      </ListLink>
-    </ul>
+      title="Alerts"
+    />
     <div
       className="alert alert-block alert-info"
     >
diff --git a/tests/js/spec/views/__snapshots__/projectGeneralSettings.spec.jsx.snap b/tests/js/spec/views/__snapshots__/projectGeneralSettings.spec.jsx.snap
index d4a827e583..1c20e3e457 100644
--- a/tests/js/spec/views/__snapshots__/projectGeneralSettings.spec.jsx.snap
+++ b/tests/js/spec/views/__snapshots__/projectGeneralSettings.spec.jsx.snap
@@ -5,9 +5,9 @@ exports[`projectGeneralSettings renders 1`] = `
   title="Sentry"
 >
   <div>
-    <h2>
-      Project Settings
-    </h2>
+    <SettingsPageHeading
+      title="Project Settings"
+    />
     <ApiForm
       apiEndpoint="/projects/org-slug/project-slug/"
       apiMethod="PUT"
diff --git a/tests/js/spec/views/__snapshots__/projectPluginDetails.spec.jsx.snap b/tests/js/spec/views/__snapshots__/projectPluginDetails.spec.jsx.snap
index a1f4cfcc04..9d3f738926 100644
--- a/tests/js/spec/views/__snapshots__/projectPluginDetails.spec.jsx.snap
+++ b/tests/js/spec/views/__snapshots__/projectPluginDetails.spec.jsx.snap
@@ -1,6 +1,33 @@
 // Jest Snapshot v1, https://goo.gl/fbAQLP
 
 exports[`ProjectPluginDetails renders 1`] = `
+.glamor-4 {
+  font-size: 14px;
+  box-shadow: inset 0 -1px 0;
+  margin: -20px 0 30px;
+}
+
+.glamor-2 {
+  box-sizing: border-box;
+  display: -webkit-box;
+  display: -webkit-flex;
+  display: -ms-flexbox;
+  display: flex;
+  -webkit-align-items: center;
+  -webkit-box-align: center;
+  -ms-flex-align: center;
+  align-items: center;
+}
+
+.glamor-0 {
+  font-size: 20px;
+  font-weight: bold;
+  margin: 20px 0;
+  -webkit-flex: 1;
+  -ms-flex: 1;
+  flex: 1;
+}
+
 <withPlugins
   location={
     Object {
@@ -113,74 +140,126 @@ exports[`ProjectPluginDetails renders 1`] = `
       title="Sentry"
     >
       <div>
-        <div
-          className="pull-right"
-        >
-          <Button
-            disabled={false}
-            onClick={[Function]}
-            style={
-              Object {
-                "marginRight": "6px",
-              }
-            }
-          >
-            <button
-              className="button button-default"
-              disabled={false}
-              onClick={[Function]}
-              role="button"
-              style={
-                Object {
-                  "marginRight": "6px",
-                }
-              }
+        <SettingsPageHeading
+          action={
+            <div
+              className="pull-right"
             >
-              <FlowLayout
-                truncate={false}
+              <Button
+                disabled={false}
+                onClick={[Function]}
+                style={
+                  Object {
+                    "marginRight": "6px",
+                  }
+                }
               >
-                <div
-                  className="flow-layout"
-                >
-                  <span
-                    className="button-label"
-                  >
-                    Enable Plugin
-                  </span>
-                </div>
-              </FlowLayout>
-            </button>
-          </Button>
-          <Button
-            disabled={false}
-            onClick={[Function]}
-          >
-            <button
-              className="button button-default"
-              disabled={false}
-              onClick={[Function]}
-              role="button"
+                Enable Plugin
+              </Button>
+              <Button
+                disabled={false}
+                onClick={[Function]}
+              >
+                Reset Configuration
+              </Button>
+            </div>
+          }
+          title="Amazon SQS"
+        >
+          <Styled(div)>
+            <div
+              className="glamor-4 glamor-5"
             >
-              <FlowLayout
-                truncate={false}
+              <Flex
+                align="center"
               >
-                <div
-                  className="flow-layout"
+                <Base
+                  align="center"
+                  className="glamor-2"
                 >
-                  <span
-                    className="button-label"
+                  <div
+                    className="glamor-2"
+                    is={null}
                   >
-                    Reset Configuration
-                  </span>
-                </div>
-              </FlowLayout>
-            </button>
-          </Button>
-        </div>
-        <h2>
-          Amazon SQS
-        </h2>
-        <hr />
+                    <Styled(div)>
+                      <div
+                        className="glamor-0 glamor-1"
+                      >
+                        Amazon SQS
+                      </div>
+                    </Styled(div)>
+                    <div>
+                      <div
+                        className="pull-right"
+                      >
+                        <Button
+                          disabled={false}
+                          onClick={[Function]}
+                          style={
+                            Object {
+                              "marginRight": "6px",
+                            }
+                          }
+                        >
+                          <button
+                            className="button button-default"
+                            disabled={false}
+                            onClick={[Function]}
+                            role="button"
+                            style={
+                              Object {
+                                "marginRight": "6px",
+                              }
+                            }
+                          >
+                            <FlowLayout
+                              truncate={false}
+                            >
+                              <div
+                                className="flow-layout"
+                              >
+                                <span
+                                  className="button-label"
+                                >
+                                  Enable Plugin
+                                </span>
+                              </div>
+                            </FlowLayout>
+                          </button>
+                        </Button>
+                        <Button
+                          disabled={false}
+                          onClick={[Function]}
+                        >
+                          <button
+                            className="button button-default"
+                            disabled={false}
+                            onClick={[Function]}
+                            role="button"
+                          >
+                            <FlowLayout
+                              truncate={false}
+                            >
+                              <div
+                                className="flow-layout"
+                              >
+                                <span
+                                  className="button-label"
+                                >
+                                  Reset Configuration
+                                </span>
+                              </div>
+                            </FlowLayout>
+                          </button>
+                        </Button>
+                      </div>
+                    </div>
+                  </div>
+                </Base>
+              </Flex>
+            </div>
+          </Styled(div)>
+        </SettingsPageHeading>
         <div
           className="row"
         >
diff --git a/tests/js/spec/views/__snapshots__/projectTags.spec.jsx.snap b/tests/js/spec/views/__snapshots__/projectTags.spec.jsx.snap
index effd09f345..bfbfaba068 100644
--- a/tests/js/spec/views/__snapshots__/projectTags.spec.jsx.snap
+++ b/tests/js/spec/views/__snapshots__/projectTags.spec.jsx.snap
@@ -1,6 +1,38 @@
 // Jest Snapshot v1, https://goo.gl/fbAQLP
 
 exports[`ProjectTags renders 1`] = `
+.glamor-4 {
+  font-size: 14px;
+  box-shadow: inset 0 -1px 0;
+  margin: -20px 0 30px;
+}
+
+.glamor-2 {
+  box-sizing: border-box;
+  display: -webkit-box;
+  display: -webkit-flex;
+  display: -ms-flexbox;
+  display: flex;
+  -webkit-align-items: center;
+  -webkit-box-align: center;
+  -ms-flex-align: center;
+  align-items: center;
+}
+
+.glamor-0 {
+  font-size: 20px;
+  font-weight: bold;
+  margin: 20px 0;
+  -webkit-flex: 1;
+  -ms-flex: 1;
+  flex: 1;
+}
+
+.glamor-6 {
+  line-height: 1.5;
+  margin-bottom: 30px;
+}
+
 <ProjectTags
   params={
     Object {
@@ -13,27 +45,59 @@ exports[`ProjectTags renders 1`] = `
     title="Sentry"
   >
     <div>
-      <h2>
-        Tags
-      </h2>
-      <p>
-        Each event in Sentry may be annotated with various tags (key and value pairs). Learn how to
-         
-        <ExternalLink
-          href="https://docs.sentry.io/hosted/learn/context/"
-          rel="noreferrer noopener"
-          target="_blank"
+      <SettingsPageHeading
+        title="Tags"
+      >
+        <Styled(div)>
+          <div
+            className="glamor-4 glamor-5"
+          >
+            <Flex
+              align="center"
+            >
+              <Base
+                align="center"
+                className="glamor-2"
+              >
+                <div
+                  className="glamor-2"
+                  is={null}
+                >
+                  <Styled(div)>
+                    <div
+                      className="glamor-0 glamor-1"
+                    >
+                      Tags
+                    </div>
+                  </Styled(div)>
+                </div>
+              </Base>
+            </Flex>
+          </div>
+        </Styled(div)>
+      </SettingsPageHeading>
+      <Styled(div)>
+        <div
+          className="glamor-6 glamor-7"
         >
-          <a
+          Each event in Sentry may be annotated with various tags (key and value pairs). Learn how to
+           
+          <ExternalLink
             href="https://docs.sentry.io/hosted/learn/context/"
             rel="noreferrer noopener"
             target="_blank"
           >
-            add custom tags
-          </a>
-        </ExternalLink>
-        .
-      </p>
+            <a
+              href="https://docs.sentry.io/hosted/learn/context/"
+              rel="noreferrer noopener"
+              target="_blank"
+            >
+              add custom tags
+            </a>
+          </ExternalLink>
+          .
+        </div>
+      </Styled(div)>
       <div
         className="panel panel-default"
       >
diff --git a/tests/js/spec/views/projectPlugins/__snapshots__/projectPlugins.spec.jsx.snap b/tests/js/spec/views/projectPlugins/__snapshots__/projectPlugins.spec.jsx.snap
index c4e442bbcb..d9e08e1544 100644
--- a/tests/js/spec/views/projectPlugins/__snapshots__/projectPlugins.spec.jsx.snap
+++ b/tests/js/spec/views/projectPlugins/__snapshots__/projectPlugins.spec.jsx.snap
@@ -2,9 +2,9 @@
 
 exports[`ProjectPlugins renders 1`] = `
 <div>
-  <h2>
-    Integrations
-  </h2>
+  <SettingsPageHeading
+    title="Integrations"
+  />
   <div
     className="panel panel-default"
   >
