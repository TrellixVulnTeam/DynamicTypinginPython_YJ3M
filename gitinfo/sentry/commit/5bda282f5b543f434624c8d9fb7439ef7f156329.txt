commit 5bda282f5b543f434624c8d9fb7439ef7f156329
Author: Leander Rodrigues <leandergrodrigues@gmail.com>
Date:   Tue Apr 7 14:51:12 2020 -0400

    feat(async-csv): Add new-tag to export all button (#18089)

diff --git a/src/sentry/static/sentry/app/components/dataExport.tsx b/src/sentry/static/sentry/app/components/dataExport.tsx
index a813339570..6250d3ff03 100644
--- a/src/sentry/static/sentry/app/components/dataExport.tsx
+++ b/src/sentry/static/sentry/app/components/dataExport.tsx
@@ -1,3 +1,4 @@
+import styled from '@emotion/styled';
 import React from 'react';
 
 import {Client} from 'app/api';
@@ -6,6 +7,7 @@ import Feature from 'app/components/acl/feature';
 import Button from 'app/components/button';
 import {t} from 'app/locale';
 import {Organization} from 'app/types';
+import space from 'app/styles/space';
 import withApi from 'app/utils/withApi';
 import withOrganization from 'app/utils/withOrganization';
 
@@ -71,7 +73,7 @@ class DataExport extends React.Component<Props, State> {
     return (
       <Feature features={['data-export']}>
         {inProgress && dataExportId ? (
-          <Button
+          <NewButton
             size="small"
             priority="default"
             title="You can get on with your life. We'll email you when your data's ready."
@@ -79,9 +81,9 @@ class DataExport extends React.Component<Props, State> {
             disabled
           >
             {t("We're working on it...")}
-          </Button>
+          </NewButton>
         ) : (
-          <Button
+          <NewButton
             onClick={this.startDataExport}
             disabled={disabled || false}
             size="small"
@@ -90,12 +92,28 @@ class DataExport extends React.Component<Props, State> {
             {...this.props}
           >
             {children ? children : t('Export All to CSV')}
-          </Button>
+          </NewButton>
         )}
       </Feature>
     );
   }
 }
 
+const NewButton = ({children, ...buttonProps}) => (
+  <Button {...buttonProps}>
+    {children}
+    <NewTag>{t('NEW')}</NewTag>
+  </Button>
+);
+
+const NewTag = styled('span')`
+  font-size: 9px;
+  padding: 3px ${space(1)};
+  margin: -3px -3px -3px ${space(0.75)};
+  background: ${p => p.theme.green};
+  color: ${p => p.theme.white};
+  border-radius: 20px;
+`;
+
 export {DataExport};
 export default withApi(withOrganization(DataExport));
diff --git a/tests/js/spec/components/dataExport.spec.jsx b/tests/js/spec/components/dataExport.spec.jsx
index 832337ed30..2a91a244f3 100644
--- a/tests/js/spec/components/dataExport.spec.jsx
+++ b/tests/js/spec/components/dataExport.spec.jsx
@@ -36,7 +36,7 @@ describe('DataExport', function() {
       mockRouterContext(mockAuthorizedOrg)
     );
     expect(wrapper.isEmptyRender()).toBe(false);
-    expect(wrapper.text()).toBe('Export All to CSV');
+    expect(wrapper.text()).toContain('Export All to CSV');
   });
 
   it('should render custom children if provided', function() {
@@ -45,7 +45,7 @@ describe('DataExport', function() {
       <WrappedDataExport payload={mockPayload}>{testString}</WrappedDataExport>,
       mockRouterContext(mockAuthorizedOrg)
     );
-    expect(wrapper.text()).toBe(testString);
+    expect(wrapper.text()).toContain(testString);
   });
 
   it('should respect the disabled prop and not be clickable', function() {
@@ -90,7 +90,7 @@ describe('DataExport', function() {
     });
     await tick();
     wrapper.update();
-    expect(wrapper.text()).toBe("We're working on it...");
+    expect(wrapper.text()).toContain("We're working on it...");
     expect(wrapper.find(Button).prop('disabled')).toBe(true);
     expect(wrapper.find(DataExport).state()).toEqual({
       inProgress: true,
