commit e275322c3f4ab75acaaeadbc24b482b1f2509d89
Author: Matt Robenolt <matt@ydekproductions.com>
Date:   Thu Jun 23 14:54:48 2016 -0700

    Disable uwsgi logging when machine readable format is requested (#3520)
    
    Ideally, we'd use a JSON format like:
    
    ```
    {"event":"http.request","addr":"%(addr)","user":"%(user)","method":"%(method)","uri":"%(uri)","status":%(status),"referer":"%(referer)","uagent":"%(uagent)"}
    ```
    
    But this can generate bad JSON because of a uwsgi bug. See:
    https://github.com/unbit/uwsgi/issues/1293

diff --git a/src/sentry/services/http.py b/src/sentry/services/http.py
index a48bdb34a1..3197fefbeb 100644
--- a/src/sentry/services/http.py
+++ b/src/sentry/services/http.py
@@ -36,6 +36,8 @@ class SentryHTTPServer(Service):
     def __init__(self, host=None, port=None, debug=False, workers=None,
                  validate=True, extra_options=None):
         from django.conf import settings
+        from sentry import options as sentry_options
+        from sentry.logging import LoggingFormat
 
         if validate:
             self.validate_settings()
@@ -111,6 +113,15 @@ class SentryHTTPServer(Service):
         if 'loglevel' in options:
             del options['loglevel']
 
+        # For machine logging, we are choosing to 100% disable logging
+        # from uwsgi since it's currently not possible to get a nice json
+        # logging out of uwsgi, so it's better to just opt out. There's
+        # also an assumption that anyone operating at the scale of needing
+        # machine formatted logs, they are also using nginx in front which
+        # has it's own logs that can be formatted correctly.
+        if sentry_options.get('system.logging-format') == LoggingFormat.MACHINE:
+            options['disable-logging'] = True
+
         self.options = options
 
     def validate_settings(self):
diff --git a/tests/sentry/services/test_http.py b/tests/sentry/services/test_http.py
index 897f06a5b3..f684511c05 100644
--- a/tests/sentry/services/test_http.py
+++ b/tests/sentry/services/test_http.py
@@ -68,3 +68,11 @@ class HTTPServiceTest(TestCase):
             assert 'proc_name' not in server.options
             assert 'secure_scheme_headers' not in server.options
             assert 'loglevel' not in server.options
+
+    def test_format_logs(self):
+        with self.options({'system.logging-format': 'human'}):
+            server = SentryHTTPServer()
+            assert server.options['disable-logging'] is False
+        with self.options({'system.logging-format': 'machine'}):
+            server = SentryHTTPServer()
+            assert server.options['disable-logging'] is True
