commit 24d719af02cd98c374ff03400079e9dd6e65011c
Author: Billy Vong <billyvg@users.noreply.github.com>
Date:   Mon May 7 09:10:21 2018 -0700

    feat(ui): Create `IdBadge` that supports Organization, Project, Team, and User (#8257)
    
    * change UserBadge useLink to be false by default (if used from IdBadge)

diff --git a/docs-ui/components/idBadge.stories.js b/docs-ui/components/idBadge.stories.js
new file mode 100644
index 0000000000..ab874a0afa
--- /dev/null
+++ b/docs-ui/components/idBadge.stories.js
@@ -0,0 +1,64 @@
+import React from 'react';
+import {storiesOf} from '@storybook/react';
+import {withInfo} from '@storybook/addon-info';
+import styled from 'react-emotion';
+
+import IdBadge from 'app/components/idBadge';
+
+const Item = styled('div')`
+  padding: 8px;
+  background-color: white;
+  border: 1px dashed #fcfcfc;
+  margin-bottom: 30px;
+`;
+Item.displayName = 'Item';
+
+const Header = styled('h2')`
+  font-size: 18px;
+  margin-bottom: 4px;
+`;
+Header.displayName = 'Header';
+
+storiesOf('IdBadge', module).add(
+  'all',
+  withInfo({
+    text:
+      'These are identification badges for certain models in Sentry: Organization, Project, Team, and User.',
+    propTablesExclude: [Item, Header, React.Fragment],
+  })(() => {
+    const user = {
+      name: 'Chrissy',
+      email: 'chris.clark@sentry.io',
+    };
+    const team = {
+      slug: 'team-slug',
+    };
+    const project = {
+      slug: 'project-slug',
+    };
+    const organization = {
+      slug: 'organization-slug',
+    };
+
+    return (
+      <React.Fragment>
+        <Header>User Badge</Header>
+        <Item>
+          <IdBadge user={user} />
+        </Item>
+        <Header>Team Badge</Header>
+        <Item>
+          <IdBadge team={team} />
+        </Item>
+        <Header>Project Badge</Header>
+        <Item>
+          <IdBadge project={project} />
+        </Item>
+        <Header>Organization Badge</Header>
+        <Item>
+          <IdBadge organization={organization} />
+        </Item>
+      </React.Fragment>
+    );
+  })
+);
diff --git a/docs-ui/components/teamBadge.stories.js b/docs-ui/components/teamBadge.stories.js
deleted file mode 100644
index ff47e127d9..0000000000
--- a/docs-ui/components/teamBadge.stories.js
+++ /dev/null
@@ -1,13 +0,0 @@
-import React from 'react';
-import {storiesOf} from '@storybook/react';
-import {withInfo} from '@storybook/addon-info';
-// import {action} from '@storybook/addon-actions';
-
-import TeamBadge from 'app/components/teamBadge';
-
-storiesOf('TeamBadge', module).add(
-  'default',
-  withInfo('Standard way to display a team')(() => (
-    <TeamBadge team={{slug: 'team-slug'}} />
-  ))
-);
diff --git a/docs-ui/components/userBadge.stories.js b/docs-ui/components/userBadge.stories.js
deleted file mode 100644
index 4cffa1dfd9..0000000000
--- a/docs-ui/components/userBadge.stories.js
+++ /dev/null
@@ -1,22 +0,0 @@
-import React from 'react';
-import {storiesOf} from '@storybook/react';
-import {withInfo} from '@storybook/addon-info';
-
-import UserBadge from 'app/components/userBadge';
-
-const user = {
-  name: 'Chrissy',
-  email: 'chris.clark@sentry.io',
-};
-
-storiesOf('UserBadge', module)
-  .add(
-    'default',
-    withInfo('A standard two-line user badge. It contains a link to the user.')(() => (
-      <UserBadge user={user} />
-    ))
-  )
-  .add(
-    'hides email',
-    withInfo('Can hide the user email')(() => <UserBadge user={user} hideEmail />)
-  );
diff --git a/src/sentry/static/sentry/app/components/idBadge/badgeDisplayName.jsx b/src/sentry/static/sentry/app/components/idBadge/badgeDisplayName.jsx
new file mode 100644
index 0000000000..c24cfa202e
--- /dev/null
+++ b/src/sentry/static/sentry/app/components/idBadge/badgeDisplayName.jsx
@@ -0,0 +1,17 @@
+import React from 'react';
+import styled from 'react-emotion';
+
+import overflowEllipsis from 'app/styles/overflowEllipsis';
+import space from 'app/styles/space';
+
+const BadgeDisplayName = styled(({hideOverflow, ...props}) => <span {...props} />)`
+  ${p => p.hideOverflow && overflowEllipsis};
+  ${p =>
+    p.hideOverflow &&
+    `max-width: ${typeof p.hideOverflow === 'string'
+      ? p.hideOverflow
+      : p.theme.settings.maxCrumbWidth}`};
+  padding: ${space(0.25)} 0;
+`;
+
+export default BadgeDisplayName;
diff --git a/src/sentry/static/sentry/app/components/idBadge/baseBadge.jsx b/src/sentry/static/sentry/app/components/idBadge/baseBadge.jsx
new file mode 100644
index 0000000000..41a37beea3
--- /dev/null
+++ b/src/sentry/static/sentry/app/components/idBadge/baseBadge.jsx
@@ -0,0 +1,72 @@
+import {Flex} from 'grid-emotion';
+import React from 'react';
+import PropTypes from 'prop-types';
+import styled from 'react-emotion';
+
+import Avatar from 'app/components/avatar';
+import space from 'app/styles/space';
+import SentryTypes from 'app/proptypes';
+
+class BaseBadge extends React.Component {
+  static propTypes = {
+    team: SentryTypes.Team,
+    organization: SentryTypes.Organization,
+    project: SentryTypes.Project,
+    /**
+     * Avatar size
+     */
+    avatarSize: PropTypes.number,
+    /**
+     * Hides the avatar
+     */
+    hideAvatar: PropTypes.bool,
+    /**
+     * Hides the main display name
+     */
+    hideName: PropTypes.bool,
+    className: PropTypes.string,
+    displayName: PropTypes.node,
+    avatarClassName: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),
+  };
+
+  static defaultProps = {
+    avatarSize: 24,
+    hideAvatar: false,
+  };
+
+  render() {
+    let {
+      className,
+      hideAvatar,
+      hideName,
+      avatarSize,
+      avatarClassName,
+      displayName,
+      team,
+      organization,
+      project,
+    } = this.props;
+
+    let data = {
+      team,
+      organization,
+      project,
+    };
+
+    return (
+      <Flex align="center" className={className}>
+        {!hideAvatar && (
+          <StyledAvatar css={avatarClassName} size={avatarSize} {...data} />
+        )}
+        {!hideName && displayName}
+      </Flex>
+    );
+  }
+}
+
+export default BaseBadge;
+
+const StyledAvatar = styled(Avatar)`
+  margin-right: ${space(1)};
+  flex-shrink: 0;
+`;
diff --git a/src/sentry/static/sentry/app/components/idBadge/index.jsx b/src/sentry/static/sentry/app/components/idBadge/index.jsx
new file mode 100644
index 0000000000..4b3e7b1a93
--- /dev/null
+++ b/src/sentry/static/sentry/app/components/idBadge/index.jsx
@@ -0,0 +1,40 @@
+import React from 'react';
+
+import BaseBadge from 'app/components/idBadge/baseBadge';
+import UserBadge from 'app/components/idBadge/userBadge';
+import TeamBadge from 'app/components/idBadge/teamBadge';
+import ProjectBadge from 'app/components/idBadge/projectBadge';
+import OrganizationBadge from 'app/components/idBadge/organizationBadge';
+import SentryTypes from 'app/proptypes';
+
+/**
+ * Public interface for all "id badges":
+ * Organization, project, team, user
+ */
+export default class IdBadge extends React.Component {
+  static propTypes = {
+    ...BaseBadge.propTypes,
+    team: SentryTypes.Team,
+    project: SentryTypes.Project,
+    organization: SentryTypes.Organization,
+    user: SentryTypes.User,
+  };
+
+  render() {
+    let {organization, project, team, user} = this.props;
+
+    if (organization) {
+      return <OrganizationBadge {...this.props} />;
+    } else if (project) {
+      return <ProjectBadge {...this.props} />;
+    } else if (team) {
+      return <TeamBadge {...this.props} />;
+    } else if (user) {
+      return <UserBadge useLink={false} {...this.props} />;
+    }
+
+    throw new Error(
+      'IdBadge: required property missing (organization, project, team, user)'
+    );
+  }
+}
diff --git a/src/sentry/static/sentry/app/components/idBadge/organizationBadge.jsx b/src/sentry/static/sentry/app/components/idBadge/organizationBadge.jsx
new file mode 100644
index 0000000000..d1a462fc8f
--- /dev/null
+++ b/src/sentry/static/sentry/app/components/idBadge/organizationBadge.jsx
@@ -0,0 +1,41 @@
+import React from 'react';
+import PropTypes from 'prop-types';
+
+import BaseBadge from 'app/components/idBadge/baseBadge';
+import SentryTypes from 'app/proptypes';
+import BadgeDisplayName from 'app/components/idBadge/badgeDisplayName';
+
+export default class OrganizationBadge extends React.Component {
+  static propTypes = {
+    ...BaseBadge.propTypes,
+    organization: SentryTypes.Organization.isRequired,
+    avatarSize: PropTypes.number,
+    /**
+     * If true, will use default max-width, or specify one as a string
+     */
+    hideOverflow: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]),
+    hideAvatar: PropTypes.bool,
+  };
+
+  static defaultProps = {
+    avatarSize: 24,
+    hideAvatar: false,
+    hideOverflow: true,
+  };
+
+  render() {
+    let {hideOverflow, organization, ...props} = this.props;
+
+    return (
+      <BaseBadge
+        displayName={
+          <BadgeDisplayName hideOverflow={hideOverflow}>
+            {organization.slug}
+          </BadgeDisplayName>
+        }
+        organization={organization}
+        {...props}
+      />
+    );
+  }
+}
diff --git a/src/sentry/static/sentry/app/components/idBadge/projectBadge.jsx b/src/sentry/static/sentry/app/components/idBadge/projectBadge.jsx
new file mode 100644
index 0000000000..6b73465f0f
--- /dev/null
+++ b/src/sentry/static/sentry/app/components/idBadge/projectBadge.jsx
@@ -0,0 +1,38 @@
+import React from 'react';
+import PropTypes from 'prop-types';
+
+import BaseBadge from 'app/components/idBadge/baseBadge';
+import SentryTypes from 'app/proptypes';
+import BadgeDisplayName from 'app/components/idBadge/badgeDisplayName';
+
+export default class ProjectBadge extends React.Component {
+  static propTypes = {
+    ...BaseBadge.propTypes,
+    project: SentryTypes.Project.isRequired,
+    avatarSize: PropTypes.number,
+    /**
+     * If true, will use default max-width, or specify one as a string
+     */
+    hideOverflow: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]),
+    hideAvatar: PropTypes.bool,
+  };
+
+  static defaultProps = {
+    hideAvatar: true,
+    hideOverflow: true,
+  };
+
+  render() {
+    let {hideOverflow, project, ...props} = this.props;
+
+    return (
+      <BaseBadge
+        displayName={
+          <BadgeDisplayName hideOverflow={hideOverflow}>{project.slug}</BadgeDisplayName>
+        }
+        project={project}
+        {...props}
+      />
+    );
+  }
+}
diff --git a/src/sentry/static/sentry/app/components/idBadge/teamBadge.jsx b/src/sentry/static/sentry/app/components/idBadge/teamBadge.jsx
new file mode 100644
index 0000000000..595a053562
--- /dev/null
+++ b/src/sentry/static/sentry/app/components/idBadge/teamBadge.jsx
@@ -0,0 +1,39 @@
+import React from 'react';
+import PropTypes from 'prop-types';
+
+import BaseBadge from 'app/components/idBadge/baseBadge';
+import SentryTypes from 'app/proptypes';
+import BadgeDisplayName from 'app/components/idBadge/badgeDisplayName';
+
+export default class TeamBadge extends React.Component {
+  static propTypes = {
+    ...BaseBadge.propTypes,
+    team: SentryTypes.Team.isRequired,
+    avatarSize: PropTypes.number,
+    /**
+     * If true, will use default max-width, or specify one as a string
+     */
+    hideOverflow: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]),
+    hideAvatar: PropTypes.bool,
+  };
+
+  static defaultProps = {
+    avatarSize: 24,
+    hideOverflow: true,
+    hideAvatar: false,
+  };
+
+  render() {
+    let {hideOverflow, team, ...props} = this.props;
+
+    return (
+      <BaseBadge
+        displayName={
+          <BadgeDisplayName hideOverflow={hideOverflow}>#{team.slug}</BadgeDisplayName>
+        }
+        team={team}
+        {...props}
+      />
+    );
+  }
+}
diff --git a/src/sentry/static/sentry/app/components/userBadge.jsx b/src/sentry/static/sentry/app/components/idBadge/userBadge.jsx
similarity index 91%
rename from src/sentry/static/sentry/app/components/userBadge.jsx
rename to src/sentry/static/sentry/app/components/idBadge/userBadge.jsx
index 28a9f39126..2909c0ec73 100644
--- a/src/sentry/static/sentry/app/components/userBadge.jsx
+++ b/src/sentry/static/sentry/app/components/idBadge/userBadge.jsx
@@ -21,9 +21,9 @@ const UserBadge = ({
       <StyledAvatar user={user} size={avatarSize} />
       <StyledNameAndEmail>
         <StyledName
-          useLink={useLink}
+          useLink={useLink && orgId}
           hideEmail={hideEmail}
-          to={`/settings/${orgId}/members/${user.id}`}
+          to={`/settings/${orgId}/members/${user.id}/`}
         >
           {displayName || user.name || user.email}
         </StyledName>
@@ -61,7 +61,7 @@ const StyledNameAndEmail = styled('div')`
 
 const StyledEmail = styled('div')`
   font-size: 0.875em;
-  margin-top: ${space(0.5)};
+  margin-top: ${space(0.25)};
   color: ${p => p.theme.gray2};
   ${overflowEllipsis};
 `;
@@ -71,7 +71,7 @@ const StyledName = styled(
     useLink ? <Link to={to} {...props} /> : <span {...props} />
 )`
   font-weight: bold;
-  margin-bottom: ${p => (!p.hideEmail ? space(0.5) : 0)};
+  line-height: 1.15em;
   ${overflowEllipsis};
 `;
 
diff --git a/src/sentry/static/sentry/app/components/search/searchResult.jsx b/src/sentry/static/sentry/app/components/search/searchResult.jsx
index 552ac007e3..29745f009d 100644
--- a/src/sentry/static/sentry/app/components/search/searchResult.jsx
+++ b/src/sentry/static/sentry/app/components/search/searchResult.jsx
@@ -7,7 +7,7 @@ import styled from 'react-emotion';
 import Avatar from 'app/components/avatar';
 import InlineSvg from 'app/components/inlineSvg';
 import SentryTypes from 'app/proptypes';
-import UserBadge from 'app/components/userBadge';
+import IdBadge from 'app/components/idBadge';
 import highlightFuseMatches from 'app/utils/highlightFuseMatches';
 
 class SearchResult extends React.Component {
@@ -56,7 +56,7 @@ class SearchResult extends React.Component {
 
     if (sourceType === 'member') {
       return (
-        <UserBadge
+        <IdBadge
           displayName={highlightedTitle}
           displayEmail={highlightedDescription}
           userLink={false}
diff --git a/src/sentry/static/sentry/app/components/sidebar/sidebarDropdown/index.jsx b/src/sentry/static/sentry/app/components/sidebar/sidebarDropdown/index.jsx
index 00c9c3a4c3..b120741dab 100644
--- a/src/sentry/static/sentry/app/components/sidebar/sidebarDropdown/index.jsx
+++ b/src/sentry/static/sentry/app/components/sidebar/sidebarDropdown/index.jsx
@@ -6,9 +6,10 @@ import {t} from 'app/locale';
 import Avatar from 'app/components/avatar';
 import DropdownMenu from 'app/components/dropdownMenu';
 import Hook from 'app/components/hook';
+import Link from 'app/components/link';
 import SentryTypes from 'app/proptypes';
 import TextOverflow from 'app/components/textOverflow';
-import UserBadge from 'app/components/userBadge';
+import IdBadge from 'app/components/idBadge';
 
 import SwitchOrganization from './switchOrganization';
 import SidebarOrgSummary from './sidebarOrgSummary';
@@ -95,7 +96,9 @@ class SidebarDropdown extends React.Component {
 
                   <Divider />
 
-                  <SidebarUserSummary user={user} />
+                  <UserSummary to="/settings/account/details/">
+                    <UserBadgeNoOverflow user={user} avatarSize={32} />
+                  </UserSummary>
 
                   <div>
                     <SidebarMenuItem to="/settings/account/">
@@ -123,27 +126,12 @@ class SidebarDropdown extends React.Component {
 
 export default SidebarDropdown;
 
-class SidebarUserSummary extends React.Component {
-  static propTypes = {
-    user: SentryTypes.User,
-  };
-
-  render() {
-    let {user} = this.props;
-
-    return (
-      <UserSummary>
-        <UserBadgeNoOverflow user={user} avatarSize={24} />
-      </UserSummary>
-    );
-  }
-}
-const UserSummary = styled('div')`
+const UserSummary = styled(Link)`
   display: flex;
   padding: 10px 15px;
 `;
 
-const UserBadgeNoOverflow = styled(UserBadge)`
+const UserBadgeNoOverflow = styled(IdBadge)`
   overflow: hidden;
 `;
 
diff --git a/src/sentry/static/sentry/app/components/teamBadge.jsx b/src/sentry/static/sentry/app/components/teamBadge.jsx
deleted file mode 100644
index 286569dd51..0000000000
--- a/src/sentry/static/sentry/app/components/teamBadge.jsx
+++ /dev/null
@@ -1,44 +0,0 @@
-import {Flex} from 'grid-emotion';
-import React from 'react';
-import PropTypes from 'prop-types';
-import styled from 'react-emotion';
-
-import Avatar from 'app/components/avatar';
-import space from 'app/styles/space';
-import SentryTypes from 'app/proptypes';
-
-class TeamBadge extends React.Component {
-  static propTypes = {
-    team: SentryTypes.Team.isRequired,
-    avatarSize: PropTypes.number,
-    hideAvatar: PropTypes.bool,
-    className: PropTypes.string,
-  };
-
-  static defaultProps = {
-    avatarSize: 24,
-    hideAvatar: false,
-  };
-
-  constructor(props) {
-    super(props);
-  }
-
-  render() {
-    let {className, team, hideAvatar, avatarSize} = this.props;
-
-    return (
-      <Flex align="center" className={className}>
-        {!hideAvatar && <StyledAvatar team={team} size={avatarSize} />}
-        <span>#{team.slug}</span>
-      </Flex>
-    );
-  }
-}
-
-export default TeamBadge;
-
-const StyledAvatar = styled(Avatar)`
-  margin-right: ${space(1)};
-  flex-shrink: 0;
-`;
diff --git a/src/sentry/static/sentry/app/utils/theme.jsx b/src/sentry/static/sentry/app/utils/theme.jsx
index 04585c9323..33909a2648 100644
--- a/src/sentry/static/sentry/app/utils/theme.jsx
+++ b/src/sentry/static/sentry/app/utils/theme.jsx
@@ -1,6 +1,7 @@
 const theme = {
   breakpoints: ['768px', '992px', '1200px'],
 
+  // Colors
   offWhite: '#FAF9FB',
   offWhite2: '#E7E1EC',
   whiteDark: '#fbfbfc',
@@ -98,6 +99,10 @@ const theme = {
   fontSizeExtraLarge: '18px',
 
   settings: {
+    // Max-width for settings breadcrumbs
+    // i.e. organization, project, or team
+    maxCrumbWidth: '240px',
+
     containerWidth: '1140px',
     headerHeight: '115px',
     sidebarWidth: '210px',
diff --git a/src/sentry/static/sentry/app/views/settings/components/settingsBreadcrumb/crumb.jsx b/src/sentry/static/sentry/app/views/settings/components/settingsBreadcrumb/crumb.jsx
index f950b980bd..bd016b20b2 100644
--- a/src/sentry/static/sentry/app/views/settings/components/settingsBreadcrumb/crumb.jsx
+++ b/src/sentry/static/sentry/app/views/settings/components/settingsBreadcrumb/crumb.jsx
@@ -1,13 +1,15 @@
 import styled from 'react-emotion';
 
+import space from 'app/styles/space';
+
 const Crumb = styled('div')`
   display: flex;
   align-items: center;
   position: relative;
   font-size: 18px;
   color: ${p => p.theme.gray3};
-  margin-right: 8px;
-  padding: 6px 0;
+  margin-right: ${space(1)};
+  margin-bottom: ${space(0.5)};
   cursor: pointer;
   > span {
     transition: 0.1s all ease;
diff --git a/src/sentry/static/sentry/app/views/settings/components/settingsBreadcrumb/menuItem.jsx b/src/sentry/static/sentry/app/views/settings/components/settingsBreadcrumb/menuItem.jsx
index 632d0a4e39..ee4acfb36b 100644
--- a/src/sentry/static/sentry/app/views/settings/components/settingsBreadcrumb/menuItem.jsx
+++ b/src/sentry/static/sentry/app/views/settings/components/settingsBreadcrumb/menuItem.jsx
@@ -1,21 +1,18 @@
 import React from 'react';
 import styled from 'react-emotion';
 
-import TextOverflow from 'app/components/textOverflow';
+import overflowEllipsis from 'app/styles/overflowEllipsis';
 
 class MenuItem extends React.Component {
   render() {
     let {children, ...props} = this.props;
-    return (
-      <StyledMenuItem {...props}>
-        <TextOverflow>{children}</TextOverflow>
-      </StyledMenuItem>
-    );
+    return <StyledMenuItem {...props}>{children}</StyledMenuItem>;
   }
 }
 
 const StyledMenuItem = styled('div')`
   font-size: 14px;
+  ${overflowEllipsis};
 `;
 
 export default MenuItem;
diff --git a/src/sentry/static/sentry/app/views/settings/components/settingsBreadcrumb/organizationCrumb.jsx b/src/sentry/static/sentry/app/views/settings/components/settingsBreadcrumb/organizationCrumb.jsx
index c37952785a..5dd1469491 100644
--- a/src/sentry/static/sentry/app/views/settings/components/settingsBreadcrumb/organizationCrumb.jsx
+++ b/src/sentry/static/sentry/app/views/settings/components/settingsBreadcrumb/organizationCrumb.jsx
@@ -4,7 +4,7 @@ import PropTypes from 'prop-types';
 import React from 'react';
 
 import BreadcrumbDropdown from 'app/views/settings/components/settingsBreadcrumb/breadcrumbDropdown';
-import LetterAvatar from 'app/components/letterAvatar';
+import IdBadge from 'app/components/idBadge';
 import MenuItem from 'app/views/settings/components/settingsBreadcrumb/menuItem';
 import SentryTypes from 'app/proptypes';
 import TextLink from 'app/components/textLink';
@@ -36,14 +36,7 @@ class OrganizationCrumb extends React.Component {
             })}
           >
             <Flex align="center">
-              <span style={{width: 18, height: 18, marginRight: 6}}>
-                <LetterAvatar
-                  style={{display: 'inline-block'}}
-                  displayName={organization.slug}
-                  identifier={organization.slug}
-                />
-              </span>
-              {organization.slug}
+              <IdBadge avatarSize={18} organization={organization} />
             </Flex>
           </TextLink>
         }
@@ -65,7 +58,11 @@ class OrganizationCrumb extends React.Component {
         route={route}
         items={organizations.map(org => ({
           value: org.slug,
-          label: <MenuItem>{org.slug}</MenuItem>,
+          label: (
+            <MenuItem>
+              <IdBadge organization={org} />
+            </MenuItem>
+          ),
         }))}
         {...props}
       />
diff --git a/src/sentry/static/sentry/app/views/settings/components/settingsBreadcrumb/projectCrumb.jsx b/src/sentry/static/sentry/app/views/settings/components/settingsBreadcrumb/projectCrumb.jsx
index 5c874f10fb..f47f236211 100644
--- a/src/sentry/static/sentry/app/views/settings/components/settingsBreadcrumb/projectCrumb.jsx
+++ b/src/sentry/static/sentry/app/views/settings/components/settingsBreadcrumb/projectCrumb.jsx
@@ -4,6 +4,7 @@ import React from 'react';
 import styled from 'react-emotion';
 
 import BreadcrumbDropdown from 'app/views/settings/components/settingsBreadcrumb/breadcrumbDropdown';
+import IdBadge from 'app/components/idBadge';
 import LoadingIndicator from 'app/components/loadingIndicator';
 import MenuItem from 'app/views/settings/components/settingsBreadcrumb/menuItem';
 import SentryTypes from 'app/proptypes';
@@ -12,21 +13,7 @@ import recreateRoute from 'app/utils/recreateRoute';
 import replaceRouterParams from 'app/utils/replaceRouterParams';
 import withLatestContext from 'app/utils/withLatestContext';
 import withProjects from 'app/utils/withProjects';
-
-const HEIGHT = '24px';
-const ProjectName = styled.div`
-  display: flex;
-
-  .loading {
-    width: 26px;
-    height: ${HEIGHT};
-    margin: 0;
-  }
-`;
-
-const ProjectTextLink = styled(TextLink)`
-  line-height: ${HEIGHT};
-`;
+import space from 'app/styles/space';
 
 class ProjectCrumb extends React.Component {
   static propTypes = {
@@ -62,16 +49,14 @@ class ProjectCrumb extends React.Component {
             {!latestProject ? (
               <LoadingIndicator mini />
             ) : (
-              <div>
-                <ProjectTextLink
-                  to={replaceRouterParams('/settings/:orgId/:projectId/', {
-                    orgId: latestOrganization.slug,
-                    projectId: latestProject.slug,
-                  })}
-                >
-                  {latestProject.slug}
-                </ProjectTextLink>
-              </div>
+              <TextLink
+                to={replaceRouterParams('/settings/:orgId/:projectId/', {
+                  orgId: latestOrganization.slug,
+                  projectId: latestProject.slug,
+                })}
+              >
+                <IdBadge project={latestProject} />
+              </TextLink>
             )}
           </ProjectName>
         }
@@ -90,7 +75,11 @@ class ProjectCrumb extends React.Component {
         }}
         items={projects.map(project => ({
           value: project.slug,
-          label: <MenuItem>{project.slug}</MenuItem>,
+          label: (
+            <MenuItem>
+              <IdBadge project={project} />
+            </MenuItem>
+          ),
         }))}
         {...props}
       />
@@ -100,3 +89,16 @@ class ProjectCrumb extends React.Component {
 
 export {ProjectCrumb};
 export default withProjects(withLatestContext(ProjectCrumb));
+
+// Set height of crumb because of spinner
+const SPINNER_SIZE = '24px';
+
+const ProjectName = styled.div`
+  display: flex;
+
+  .loading {
+    width: ${SPINNER_SIZE};
+    height: ${SPINNER_SIZE};
+    margin: 0 ${space(0.25)} 0 0;
+  }
+`;
diff --git a/src/sentry/static/sentry/app/views/settings/components/settingsBreadcrumb/teamCrumb.jsx b/src/sentry/static/sentry/app/views/settings/components/settingsBreadcrumb/teamCrumb.jsx
index 369756e603..ee115ca31a 100644
--- a/src/sentry/static/sentry/app/views/settings/components/settingsBreadcrumb/teamCrumb.jsx
+++ b/src/sentry/static/sentry/app/views/settings/components/settingsBreadcrumb/teamCrumb.jsx
@@ -1,9 +1,9 @@
-import {Flex} from 'grid-emotion';
 import {browserHistory} from 'react-router';
 import PropTypes from 'prop-types';
 import React from 'react';
 
 import BreadcrumbDropdown from 'app/views/settings/components/settingsBreadcrumb/breadcrumbDropdown';
+import IdBadge from 'app/components/idBadge';
 import MenuItem from 'app/views/settings/components/settingsBreadcrumb/menuItem';
 import TextLink from 'app/components/textLink';
 import recreateRoute from 'app/utils/recreateRoute';
@@ -33,7 +33,7 @@ class TeamCrumb extends React.Component {
               params: {...params, teamId: team.slug},
             })}
           >
-            <Flex align="center">#{team.slug}</Flex>
+            <IdBadge avatarSize={18} team={team} />
           </TextLink>
         }
         onSelect={item => {
@@ -46,9 +46,13 @@ class TeamCrumb extends React.Component {
         }}
         hasMenu={hasMenu}
         route={route}
-        items={teams.map(({slug}) => ({
-          value: slug,
-          label: <MenuItem>#{slug}</MenuItem>,
+        items={teams.map(teamItem => ({
+          value: teamItem.slug,
+          label: (
+            <MenuItem>
+              <IdBadge team={teamItem} />
+            </MenuItem>
+          ),
         }))}
         {...props}
       />
diff --git a/src/sentry/static/sentry/app/views/settings/team/teamMembers.jsx b/src/sentry/static/sentry/app/views/settings/team/teamMembers.jsx
index 2ebcf806dc..ecbbc43aca 100644
--- a/src/sentry/static/sentry/app/views/settings/team/teamMembers.jsx
+++ b/src/sentry/static/sentry/app/views/settings/team/teamMembers.jsx
@@ -3,7 +3,7 @@ import createReactClass from 'create-react-class';
 import styled from 'react-emotion';
 
 import ApiMixin from 'app/mixins/apiMixin';
-import UserBadge from 'app/components/userBadge';
+import IdBadge from 'app/components/idBadge';
 import Avatar from 'app/components/avatar';
 import Button from 'app/components/buttons/button';
 import Link from 'app/components/link';
@@ -243,7 +243,7 @@ const TeamMembers = createReactClass({
         {this.state.teamMemberList.length ? (
           this.state.teamMemberList.map((member, i) => (
             <StyledMemberContainer key={i}>
-              <UserBadge avatarSize={36} user={member} orgId={params.orgId} />
+              <IdBadge avatarSize={36} user={member} useLink orgId={params.orgId} />
               {access.has('org:write') && this.removeButton(member)}
             </StyledMemberContainer>
           ))
diff --git a/tests/js/spec/components/idBadge/baseBadge.spec.jsx b/tests/js/spec/components/idBadge/baseBadge.spec.jsx
new file mode 100644
index 0000000000..291261c55b
--- /dev/null
+++ b/tests/js/spec/components/idBadge/baseBadge.spec.jsx
@@ -0,0 +1,37 @@
+import React from 'react';
+import {shallow} from 'enzyme';
+import BaseBadge from 'app/components/idBadge/baseBadge';
+
+describe('BadgeBadge', function() {
+  it('has a display name', function() {
+    let wrapper = shallow(
+      <BaseBadge
+        organization={TestStubs.Organization()}
+        displayName={<span id="test">display name</span>}
+      />,
+      TestStubs.routerContext()
+    );
+    expect(wrapper.find('#test')).toHaveLength(1);
+    expect(wrapper.find('#test').text()).toBe('display name');
+  });
+
+  it('can hide avatar', function() {
+    let wrapper = shallow(
+      <BaseBadge organization={TestStubs.Organization()} hideAvatar />,
+      TestStubs.routerContext()
+    );
+    expect(wrapper.find('StyledAvatar')).toHaveLength(0);
+  });
+
+  it('can hide name', function() {
+    let wrapper = shallow(
+      <BaseBadge
+        organization={TestStubs.Organization()}
+        hideName
+        displayName={<span id="test">display name</span>}
+      />,
+      TestStubs.routerContext()
+    );
+    expect(wrapper.find('#test')).toHaveLength(0);
+  });
+});
diff --git a/tests/js/spec/components/idBadge/index.spec.jsx b/tests/js/spec/components/idBadge/index.spec.jsx
new file mode 100644
index 0000000000..a062789ec4
--- /dev/null
+++ b/tests/js/spec/components/idBadge/index.spec.jsx
@@ -0,0 +1,39 @@
+import React from 'react';
+import {shallow} from 'enzyme';
+
+import IdBadge from 'app/components/idBadge';
+
+describe('IdBadge', function() {
+  let routerContext = TestStubs.routerContext();
+  it('renders the correct component when `user` property is passed', function() {
+    let wrapper = shallow(<IdBadge user={TestStubs.User()} />, routerContext);
+
+    expect(wrapper.find('UserBadge')).toHaveLength(1);
+  });
+
+  it('renders the correct component when `team` property is passed', function() {
+    let wrapper = shallow(<IdBadge team={TestStubs.Team()} />, routerContext);
+
+    expect(wrapper.find('TeamBadge')).toHaveLength(1);
+  });
+
+  it('renders the correct component when `project` property is passed', function() {
+    let wrapper = shallow(<IdBadge project={TestStubs.Project()} />, routerContext);
+
+    expect(wrapper.find('ProjectBadge')).toHaveLength(1);
+    expect(wrapper.find('ProjectBadge').prop('hideAvatar')).toBe(true);
+  });
+
+  it('renders the correct component when `organization` property is passed', function() {
+    let wrapper = shallow(
+      <IdBadge organization={TestStubs.Organization()} />,
+      routerContext
+    );
+
+    expect(wrapper.find('OrganizationBadge')).toHaveLength(1);
+  });
+
+  it('throws when no valid properties are passed', function() {
+    expect(() => shallow(<IdBadge />, routerContext)).toThrow();
+  });
+});
diff --git a/tests/js/spec/components/idBadge/organizationBadge.spec.jsx b/tests/js/spec/components/idBadge/organizationBadge.spec.jsx
new file mode 100644
index 0000000000..99a822111d
--- /dev/null
+++ b/tests/js/spec/components/idBadge/organizationBadge.spec.jsx
@@ -0,0 +1,14 @@
+import React from 'react';
+import {mount} from 'enzyme';
+import OrganizationBadge from 'app/components/idBadge/organizationBadge';
+
+describe('OrganizationBadge', function() {
+  it('renders with Avatar and organization name', function() {
+    let wrapper = mount(
+      <OrganizationBadge organization={TestStubs.Organization()} />,
+      TestStubs.routerContext()
+    );
+    expect(wrapper.find('StyledAvatar')).toHaveLength(1);
+    expect(wrapper.find('BadgeDisplayName').text()).toEqual('org-slug');
+  });
+});
diff --git a/tests/js/spec/components/idBadge/projectBadge.spec.jsx b/tests/js/spec/components/idBadge/projectBadge.spec.jsx
new file mode 100644
index 0000000000..e278f0d983
--- /dev/null
+++ b/tests/js/spec/components/idBadge/projectBadge.spec.jsx
@@ -0,0 +1,14 @@
+import React from 'react';
+import {mount} from 'enzyme';
+import ProjectBadge from 'app/components/idBadge/projectBadge';
+
+describe('ProjectBadge', function() {
+  it('renders with Avatar and team name', function() {
+    let wrapper = mount(
+      <ProjectBadge project={TestStubs.Project()} />,
+      TestStubs.routerContext()
+    );
+    expect(wrapper.find('StyledAvatar')).toHaveLength(0);
+    expect(wrapper.find('BadgeDisplayName').text()).toEqual('project-slug');
+  });
+});
diff --git a/tests/js/spec/components/idBadge/teamBadge.spec.jsx b/tests/js/spec/components/idBadge/teamBadge.spec.jsx
new file mode 100644
index 0000000000..167d666c50
--- /dev/null
+++ b/tests/js/spec/components/idBadge/teamBadge.spec.jsx
@@ -0,0 +1,11 @@
+import React from 'react';
+import {mount} from 'enzyme';
+import TeamBadge from 'app/components/idBadge/teamBadge';
+
+describe('TeamBadge', function() {
+  it('renders with Avatar and team name', function() {
+    let wrapper = mount(<TeamBadge team={TestStubs.Team()} />, TestStubs.routerContext());
+    expect(wrapper.find('StyledAvatar')).toHaveLength(1);
+    expect(wrapper.find('BadgeDisplayName').text()).toEqual('#team-slug');
+  });
+});
diff --git a/tests/js/spec/components/userBadge.spec.jsx b/tests/js/spec/components/idBadge/userBadge.spec.jsx
similarity index 90%
rename from tests/js/spec/components/userBadge.spec.jsx
rename to tests/js/spec/components/idBadge/userBadge.spec.jsx
index d35ce98f4f..5cb8c3e92b 100644
--- a/tests/js/spec/components/userBadge.spec.jsx
+++ b/tests/js/spec/components/idBadge/userBadge.spec.jsx
@@ -1,13 +1,13 @@
 import React from 'react';
 import {mount, shallow} from 'enzyme';
 
-import UserBadge from 'app/components/userBadge';
+import UserBadge from 'app/components/idBadge/userBadge';
 
 describe('UserBadge', function() {
   let user = TestStubs.User();
 
   it('renders', function() {
-    let wrapper = mount(<UserBadge user={user} />);
+    let wrapper = mount(<UserBadge user={user} orgId="orgId" />);
 
     expect(wrapper.find('StyledUserBadge')).toHaveLength(1);
     expect(wrapper.find('StyledName').prop('children')).toBe('Foo Bar');
diff --git a/tests/js/spec/components/sidebar/__snapshots__/index.spec.jsx.snap b/tests/js/spec/components/sidebar/__snapshots__/index.spec.jsx.snap
index ebc90951a9..02b5d499d4 100644
--- a/tests/js/spec/components/sidebar/__snapshots__/index.spec.jsx.snap
+++ b/tests/js/spec/components/sidebar/__snapshots__/index.spec.jsx.snap
@@ -479,54 +479,26 @@ exports[`Sidebar SidebarDropdown can open Sidebar org/name dropdown menu 1`] = `
         className="css-19r16al-Divider ek5mfa70"
       />
     </Divider>
-    <SidebarUserSummary
-      user={
-        Object {
-          "email": "foo@example.com",
-          "flags": Object {
-            "newsletter_consent_prompt": false,
-          },
-          "hasPasswordAuth": true,
-          "id": "1",
-          "isAuthenticated": true,
-          "name": "Foo Bar",
-          "options": Object {
-            "timezone": "UTC",
-          },
-          "permissions": Set {},
-          "username": "foo@example.com",
-        }
-      }
+    <UserSummary
+      to="/settings/account/details/"
     >
-      <UserSummary>
-        <div
+      <Link
+        className="css-1fpw0f9-UserSummary e1fowdfw0"
+        to="/settings/account/details/"
+      >
+        <Link
           className="css-1fpw0f9-UserSummary e1fowdfw0"
+          onlyActiveOnIndex={false}
+          style={Object {}}
+          to="/settings/account/details/"
         >
-          <UserBadgeNoOverflow
-            avatarSize={24}
-            user={
-              Object {
-                "email": "foo@example.com",
-                "flags": Object {
-                  "newsletter_consent_prompt": false,
-                },
-                "hasPasswordAuth": true,
-                "id": "1",
-                "isAuthenticated": true,
-                "name": "Foo Bar",
-                "options": Object {
-                  "timezone": "UTC",
-                },
-                "permissions": Set {},
-                "username": "foo@example.com",
-              }
-            }
+          <a
+            className="css-1fpw0f9-UserSummary e1fowdfw0"
+            onClick={[Function]}
+            style={Object {}}
           >
-            <UserBadge
-              avatarSize={24}
-              className="css-1tz319h-UserBadgeNoOverflow e1fowdfw1"
-              hideEmail={false}
-              useLink={true}
+            <UserBadgeNoOverflow
+              avatarSize={32}
               user={
                 Object {
                   "email": "foo@example.com",
@@ -545,57 +517,58 @@ exports[`Sidebar SidebarDropdown can open Sidebar org/name dropdown menu 1`] = `
                 }
               }
             >
-              <StyledUserBadge
+              <IdBadge
+                avatarSize={32}
                 className="css-1tz319h-UserBadgeNoOverflow e1fowdfw1"
+                user={
+                  Object {
+                    "email": "foo@example.com",
+                    "flags": Object {
+                      "newsletter_consent_prompt": false,
+                    },
+                    "hasPasswordAuth": true,
+                    "id": "1",
+                    "isAuthenticated": true,
+                    "name": "Foo Bar",
+                    "options": Object {
+                      "timezone": "UTC",
+                    },
+                    "permissions": Set {},
+                    "username": "foo@example.com",
+                  }
+                }
               >
-                <div
-                  className="e1fowdfw1 css-1dpgz1o-StyledUserBadge-UserBadgeNoOverflow ezs94r40"
-                >
-                  <StyledAvatar
-                    size={24}
-                    user={
-                      Object {
-                        "email": "foo@example.com",
-                        "flags": Object {
-                          "newsletter_consent_prompt": false,
-                        },
-                        "hasPasswordAuth": true,
-                        "id": "1",
-                        "isAuthenticated": true,
-                        "name": "Foo Bar",
-                        "options": Object {
-                          "timezone": "UTC",
-                        },
-                        "permissions": Set {},
-                        "username": "foo@example.com",
-                      }
+                <UserBadge
+                  avatarSize={32}
+                  className="css-1tz319h-UserBadgeNoOverflow e1fowdfw1"
+                  hideEmail={false}
+                  useLink={false}
+                  user={
+                    Object {
+                      "email": "foo@example.com",
+                      "flags": Object {
+                        "newsletter_consent_prompt": false,
+                      },
+                      "hasPasswordAuth": true,
+                      "id": "1",
+                      "isAuthenticated": true,
+                      "name": "Foo Bar",
+                      "options": Object {
+                        "timezone": "UTC",
+                      },
+                      "permissions": Set {},
+                      "username": "foo@example.com",
                     }
+                  }
+                >
+                  <StyledUserBadge
+                    className="css-1tz319h-UserBadgeNoOverflow e1fowdfw1"
                   >
-                    <Component
-                      className="css-1u6j7yz-StyledAvatar ezs94r44"
-                      size={24}
-                      user={
-                        Object {
-                          "email": "foo@example.com",
-                          "flags": Object {
-                            "newsletter_consent_prompt": false,
-                          },
-                          "hasPasswordAuth": true,
-                          "id": "1",
-                          "isAuthenticated": true,
-                          "name": "Foo Bar",
-                          "options": Object {
-                            "timezone": "UTC",
-                          },
-                          "permissions": Set {},
-                          "username": "foo@example.com",
-                        }
-                      }
+                    <div
+                      className="e1fowdfw1 css-1dpgz1o-StyledUserBadge-UserBadgeNoOverflow ev46mzr0"
                     >
-                      <Avatar
-                        className="css-1u6j7yz-StyledAvatar ezs94r44"
-                        hasTooltip={false}
-                        size={24}
+                      <StyledAvatar
+                        size={32}
                         user={
                           Object {
                             "email": "foo@example.com",
@@ -614,11 +587,9 @@ exports[`Sidebar SidebarDropdown can open Sidebar org/name dropdown menu 1`] = `
                           }
                         }
                       >
-                        <UserAvatar
-                          className="css-1u6j7yz-StyledAvatar ezs94r44"
-                          gravatar={true}
-                          hasTooltip={false}
-                          size={24}
+                        <Component
+                          className="css-1u6j7yz-StyledAvatar ev46mzr4"
+                          size={32}
                           user={
                             Object {
                               "email": "foo@example.com",
@@ -637,104 +608,137 @@ exports[`Sidebar SidebarDropdown can open Sidebar org/name dropdown menu 1`] = `
                             }
                           }
                         >
-                          <BaseAvatar
-                            className="css-1u6j7yz-StyledAvatar ezs94r44"
-                            gravatarId="foo@example.com"
+                          <Avatar
+                            className="css-1u6j7yz-StyledAvatar ev46mzr4"
                             hasTooltip={false}
-                            letterId="foo@example.com"
-                            size={24}
-                            style={Object {}}
-                            title="Foo Bar"
-                            tooltip="Foo Bar (foo@example.com)"
-                            type="gravatar"
+                            size={32}
+                            user={
+                              Object {
+                                "email": "foo@example.com",
+                                "flags": Object {
+                                  "newsletter_consent_prompt": false,
+                                },
+                                "hasPasswordAuth": true,
+                                "id": "1",
+                                "isAuthenticated": true,
+                                "name": "Foo Bar",
+                                "options": Object {
+                                  "timezone": "UTC",
+                                },
+                                "permissions": Set {},
+                                "username": "foo@example.com",
+                              }
+                            }
                           >
-                            <Tooltip
-                              disabled={true}
-                              title="Foo Bar (foo@example.com)"
-                            >
-                              <StyledBaseAvatar
-                                className="avatar css-1u6j7yz-StyledAvatar ezs94r44"
-                                style={
-                                  Object {
-                                    "height": "24px",
-                                    "width": "24px",
-                                  }
+                            <UserAvatar
+                              className="css-1u6j7yz-StyledAvatar ev46mzr4"
+                              gravatar={true}
+                              hasTooltip={false}
+                              size={32}
+                              user={
+                                Object {
+                                  "email": "foo@example.com",
+                                  "flags": Object {
+                                    "newsletter_consent_prompt": false,
+                                  },
+                                  "hasPasswordAuth": true,
+                                  "id": "1",
+                                  "isAuthenticated": true,
+                                  "name": "Foo Bar",
+                                  "options": Object {
+                                    "timezone": "UTC",
+                                  },
+                                  "permissions": Set {},
+                                  "username": "foo@example.com",
                                 }
+                              }
+                            >
+                              <BaseAvatar
+                                className="css-1u6j7yz-StyledAvatar ev46mzr4"
+                                gravatarId="foo@example.com"
+                                hasTooltip={false}
+                                letterId="foo@example.com"
+                                size={32}
+                                style={Object {}}
+                                title="Foo Bar"
+                                tooltip="Foo Bar (foo@example.com)"
+                                type="gravatar"
                               >
-                                <span
-                                  className="avatar ezs94r44 css-1dbvbxh-StyledBaseAvatar-StyledAvatar e1z0ohzl0"
-                                  style={
-                                    Object {
-                                      "height": "24px",
-                                      "width": "24px",
-                                    }
-                                  }
+                                <Tooltip
+                                  disabled={true}
+                                  title="Foo Bar (foo@example.com)"
                                 >
-                                  <img
-                                    onError={[Function]}
-                                    onLoad={[Function]}
-                                    src="undefined/avatar/b48def645758b95537d4424c84d1a9ff?d=blank&s=32"
-                                  />
-                                </span>
-                              </StyledBaseAvatar>
-                            </Tooltip>
-                          </BaseAvatar>
-                        </UserAvatar>
-                      </Avatar>
-                    </Component>
-                  </StyledAvatar>
-                  <StyledNameAndEmail>
-                    <div
-                      className="css-9l6b2w-StyledNameAndEmail ezs94r41"
-                    >
-                      <StyledName
-                        hideEmail={false}
-                        to="/settings/undefined/members/1"
-                        useLink={true}
-                      >
-                        <Component
-                          className="css-1tgyp3k-StyledName ezs94r43"
-                          hideEmail={false}
-                          to="/settings/undefined/members/1"
-                          useLink={true}
+                                  <StyledBaseAvatar
+                                    className="avatar css-1u6j7yz-StyledAvatar ev46mzr4"
+                                    style={
+                                      Object {
+                                        "height": "32px",
+                                        "width": "32px",
+                                      }
+                                    }
+                                  >
+                                    <span
+                                      className="avatar ev46mzr4 css-1dbvbxh-StyledBaseAvatar-StyledAvatar e1z0ohzl0"
+                                      style={
+                                        Object {
+                                          "height": "32px",
+                                          "width": "32px",
+                                        }
+                                      }
+                                    >
+                                      <img
+                                        onError={[Function]}
+                                        onLoad={[Function]}
+                                        src="undefined/avatar/b48def645758b95537d4424c84d1a9ff?d=blank&s=32"
+                                      />
+                                    </span>
+                                  </StyledBaseAvatar>
+                                </Tooltip>
+                              </BaseAvatar>
+                            </UserAvatar>
+                          </Avatar>
+                        </Component>
+                      </StyledAvatar>
+                      <StyledNameAndEmail>
+                        <div
+                          className="css-9l6b2w-StyledNameAndEmail ev46mzr1"
                         >
-                          <Link
-                            className="css-1tgyp3k-StyledName ezs94r43"
-                            to="/settings/undefined/members/1"
+                          <StyledName
+                            hideEmail={false}
+                            to="/settings/undefined/members/1/"
+                            useLink={false}
                           >
-                            <Link
-                              className="css-1tgyp3k-StyledName ezs94r43"
-                              onlyActiveOnIndex={false}
-                              style={Object {}}
-                              to="/settings/undefined/members/1"
+                            <Component
+                              className="css-12fcmnb-StyledName ev46mzr3"
+                              hideEmail={false}
+                              to="/settings/undefined/members/1/"
+                              useLink={false}
                             >
-                              <a
-                                className="css-1tgyp3k-StyledName ezs94r43"
-                                onClick={[Function]}
-                                style={Object {}}
+                              <span
+                                className="css-12fcmnb-StyledName ev46mzr3"
                               >
                                 Foo Bar
-                              </a>
-                            </Link>
-                          </Link>
-                        </Component>
-                      </StyledName>
-                      <StyledEmail>
-                        <div
-                          className="css-g5deqf-StyledEmail ezs94r42"
-                        >
-                          foo@example.com
+                              </span>
+                            </Component>
+                          </StyledName>
+                          <StyledEmail>
+                            <div
+                              className="css-3w2sfq-StyledEmail ev46mzr2"
+                            >
+                              foo@example.com
+                            </div>
+                          </StyledEmail>
                         </div>
-                      </StyledEmail>
+                      </StyledNameAndEmail>
                     </div>
-                  </StyledNameAndEmail>
-                </div>
-              </StyledUserBadge>
-            </UserBadge>
-          </UserBadgeNoOverflow>
-        </div>
-      </UserSummary>
-    </SidebarUserSummary>
+                  </StyledUserBadge>
+                </UserBadge>
+              </IdBadge>
+            </UserBadgeNoOverflow>
+          </a>
+        </Link>
+      </Link>
+    </UserSummary>
     <div>
       <SidebarMenuItem
         to="/settings/account/"
diff --git a/tests/js/spec/components/teamBadge.spec.jsx b/tests/js/spec/components/teamBadge.spec.jsx
deleted file mode 100644
index 1f798e8fd1..0000000000
--- a/tests/js/spec/components/teamBadge.spec.jsx
+++ /dev/null
@@ -1,26 +0,0 @@
-import React from 'react';
-import {shallow} from 'enzyme';
-import TeamBadge from 'app/components/teamBadge';
-
-describe('TeamBadge', function() {
-  beforeEach(function() {
-    MockApiClient.clearMockResponses();
-  });
-
-  it('renders with Avatar and team name', function() {
-    let wrapper = shallow(
-      <TeamBadge team={TestStubs.Team()} />,
-      TestStubs.routerContext()
-    );
-    expect(wrapper.find('StyledAvatar')).toHaveLength(1);
-    expect(wrapper.find('span').text()).toEqual('#team-slug');
-  });
-
-  it('can hide Avatar', function() {
-    let wrapper = shallow(
-      <TeamBadge team={TestStubs.Team()} hideAvatar />,
-      TestStubs.routerContext()
-    );
-    expect(wrapper.find('StyledAvatar')).toHaveLength(0);
-  });
-});
diff --git a/tests/js/spec/views/__snapshots__/teamMembers.spec.jsx.snap b/tests/js/spec/views/__snapshots__/teamMembers.spec.jsx.snap
index c5f5f6ff20..dfcbbbc1a4 100644
--- a/tests/js/spec/views/__snapshots__/teamMembers.spec.jsx.snap
+++ b/tests/js/spec/views/__snapshots__/teamMembers.spec.jsx.snap
@@ -35,9 +35,8 @@ exports[`TeamMembers render() renders 1`] = `
   <StyledMemberContainer
     key="0"
   >
-    <UserBadge
+    <IdBadge
       avatarSize={36}
-      hideEmail={false}
       orgId="org-slug"
       useLink={true}
       user={
@@ -81,9 +80,8 @@ exports[`TeamMembers render() renders 1`] = `
   <StyledMemberContainer
     key="1"
   >
-    <UserBadge
+    <IdBadge
       avatarSize={36}
-      hideEmail={false}
       orgId="org-slug"
       useLink={true}
       user={
@@ -127,9 +125,8 @@ exports[`TeamMembers render() renders 1`] = `
   <StyledMemberContainer
     key="2"
   >
-    <UserBadge
+    <IdBadge
       avatarSize={36}
-      hideEmail={false}
       orgId="org-slug"
       useLink={true}
       user={
@@ -173,9 +170,8 @@ exports[`TeamMembers render() renders 1`] = `
   <StyledMemberContainer
     key="3"
   >
-    <UserBadge
+    <IdBadge
       avatarSize={36}
-      hideEmail={false}
       orgId="org-slug"
       useLink={true}
       user={
