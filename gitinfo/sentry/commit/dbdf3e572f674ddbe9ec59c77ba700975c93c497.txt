commit dbdf3e572f674ddbe9ec59c77ba700975c93c497
Author: David Cramer <dcramer@gmail.com>
Date:   Sun Oct 18 19:42:06 2015 -0700

    Add the ability to mark broadcasts as seen

diff --git a/src/sentry/api/endpoints/broadcast_index.py b/src/sentry/api/endpoints/broadcast_index.py
index 6a9ae367d7..0a0295ecef 100644
--- a/src/sentry/api/endpoints/broadcast_index.py
+++ b/src/sentry/api/endpoints/broadcast_index.py
@@ -1,11 +1,17 @@
 from __future__ import absolute_import
 
+from django.db import IntegrityError, transaction
+from rest_framework import serializers
 from rest_framework.permissions import IsAuthenticated
 from rest_framework.response import Response
 
 from sentry.api.base import Endpoint
 from sentry.api.serializers import serialize
-from sentry.models import Broadcast
+from sentry.models import Broadcast, BroadcastSeen
+
+
+class BroadcastSerializer(serializers.Serializer):
+    hasSeen = serializers.BooleanField()
 
 
 class BroadcastIndexEndpoint(Endpoint):
@@ -17,3 +23,28 @@ class BroadcastIndexEndpoint(Endpoint):
         ))
 
         return Response(serialize(broadcasts, request.user))
+
+    def put(self, request):
+        serializer = BroadcastSerializer(data=request.DATA, partial=True)
+        if not serializer.is_valid():
+            return Response(serializer.errors, status=400)
+
+        result = serializer.object
+
+        # limit scope of query
+        queryset = Broadcast.objects.filter(
+            is_active=True,
+        )[:100]
+
+        if result.get('hasSeen'):
+            for broadcast in queryset:
+                try:
+                    with transaction.atomic():
+                        BroadcastSeen.objects.create(
+                            broadcast=broadcast,
+                            user=request.user,
+                        )
+                except IntegrityError:
+                    pass
+
+        return Response(result)
diff --git a/tests/sentry/api/endpoints/test_broadcast_index.py b/tests/sentry/api/endpoints/test_broadcast_index.py
index f2f7a61595..6df460110b 100644
--- a/tests/sentry/api/endpoints/test_broadcast_index.py
+++ b/tests/sentry/api/endpoints/test_broadcast_index.py
@@ -2,11 +2,11 @@ from __future__ import absolute_import
 
 from django.core.urlresolvers import reverse
 
-from sentry.models import Broadcast
+from sentry.models import Broadcast, BroadcastSeen
 from sentry.testutils import APITestCase
 
 
-class BroadcastIndexTest(APITestCase):
+class BroadcastListTest(APITestCase):
     def test_simple(self):
         broadcast1 = Broadcast.objects.create(message='bar', is_active=True)
         Broadcast.objects.create(message='foo', is_active=False)
@@ -17,3 +17,26 @@ class BroadcastIndexTest(APITestCase):
         assert response.status_code == 200
         assert len(response.data) == 1
         assert response.data[0]['id'] == str(broadcast1.id)
+
+
+class BroadcastUpdateTest(APITestCase):
+    def test_simple(self):
+        broadcast1 = Broadcast.objects.create(message='bar', is_active=True)
+        broadcast2 = Broadcast.objects.create(message='foo', is_active=False)
+
+        self.login_as(user=self.user)
+        url = reverse('sentry-api-0-broadcast-index')
+        response = self.client.put(url, {
+            'hasSeen': '1'
+        })
+        assert response.status_code == 200
+        assert response.data['hasSeen'] == True
+
+        assert BroadcastSeen.objects.filter(
+            user=self.user,
+            broadcast=broadcast1,
+        ).exists()
+        assert not BroadcastSeen.objects.filter(
+            user=self.user,
+            broadcast=broadcast2,
+        ).exists()
