commit 76a1bb6917cdd3694fccd646c54b8688ee691914
Author: David Cramer <dcramer@gmail.com>
Date:   Fri Feb 6 12:19:05 2015 -0800

    Add error/loading states to stream

diff --git a/src/sentry/static/sentry/app/views/stream.jsx b/src/sentry/static/sentry/app/views/stream.jsx
index 233065e6b2..d6b08a7fd2 100644
--- a/src/sentry/static/sentry/app/views/stream.jsx
+++ b/src/sentry/static/sentry/app/views/stream.jsx
@@ -7,6 +7,8 @@ var $ = require("jquery");
 var api = require("../api");
 var AggregateListActions = require("../actions/aggregateListActions");
 var AggregateListStore = require("../stores/aggregateListStore");
+var LoadingError = require("../components/loadingError");
+var LoadingIndicator = require("../components/loadingIndicator");
 var StreamAggregate = require('./stream/aggregate');
 var StreamActions = require('./stream/actions');
 var StreamFilters = require('./stream/filters');
@@ -91,7 +93,9 @@ var Stream = React.createClass({
       statsPeriod: '24h',
       realtimeActive: false,
       pageLinks: '',
-      query: query
+      query: query,
+      loading: true,
+      error: false
     };
   },
 
@@ -101,14 +105,35 @@ var Stream = React.createClass({
       endpoint: this.getAggregateListEndpoint()
     });
 
+    this.fetchData();
+  },
+
+  componentWillReceiveProps(nextProps) {
+    this.fetchData();
+  },
+
+  fetchData() {
+    this.setState({
+      loading: true,
+      error: false
+    });
+
     api.request(this.getAggregateListEndpoint(), {
       success: (data, _, jqXHR) => {
         AggregateListStore.loadInitialData(data);
 
         this.setState({
+          error: false,
+          loading: false,
           pageLinks: jqXHR.getResponseHeader('Link')
         });
       },
+      error: () => {
+        this.setState({
+          error: true,
+          loading: false
+        });
+      },
       complete: () => {
         if (this.state.realtimeActive) {
           this._poller.enable();
@@ -189,9 +214,15 @@ var Stream = React.createClass({
             </div>
           </div>
         </div>
-        <ul className="group-list">
-          {aggNodes}
-        </ul>
+        {this.state.loading ?
+          <LoadingIndicator />
+        : (this.state.error ?
+          <LoadingError onRetry={this.fetchData} />
+        :
+          <ul className="group-list">
+            {aggNodes}
+          </ul>
+        )}
         <StreamPagination
           aggList={this.state.aggList}
           pageLinks={this.state.pageLinks} />
