commit bc01a3fc1394390e11c59129e2534d4f967665e9
Author: Lyn Nagara <lyn.nagara@gmail.com>
Date:   Mon Jun 10 16:18:06 2019 -0700

    ref: Use strict equality everywhere (#13590)

diff --git a/src/sentry/static/sentry/app/actionCreators/serviceIncidents.jsx b/src/sentry/static/sentry/app/actionCreators/serviceIncidents.jsx
index 636324bc37..10252e2b9a 100644
--- a/src/sentry/static/sentry/app/actionCreators/serviceIncidents.jsx
+++ b/src/sentry/static/sentry/app/actionCreators/serviceIncidents.jsx
@@ -4,7 +4,7 @@ import ConfigStore from 'app/stores/configStore';
 import ServiceIncidentActions from 'app/actions/serviceIncidentActions';
 
 function getIncidentsFromIncidentResponse(incidents) {
-  if (incidents === null || incidents.length == 0) {
+  if (incidents === null || incidents.length === 0) {
     return [[], 'none'];
   }
 
diff --git a/src/sentry/static/sentry/app/components/actorAvatar.jsx b/src/sentry/static/sentry/app/components/actorAvatar.jsx
index 72157d822a..69f2612df7 100644
--- a/src/sentry/static/sentry/app/components/actorAvatar.jsx
+++ b/src/sentry/static/sentry/app/components/actorAvatar.jsx
@@ -19,12 +19,12 @@ class ActorAvatar extends React.Component {
   render() {
     const {actor, ...props} = this.props;
 
-    if (actor.type == 'user') {
+    if (actor.type === 'user') {
       const user = actor.id ? MemberListStore.getById(actor.id) : actor;
       return <Avatar user={user} hasTooltip {...props} />;
     }
 
-    if (actor.type == 'team') {
+    if (actor.type === 'team') {
       const team = TeamStore.getById(actor.id);
       return <Avatar team={team} hasTooltip {...props} />;
     }
diff --git a/src/sentry/static/sentry/app/components/alertLink.jsx b/src/sentry/static/sentry/app/components/alertLink.jsx
index 6f3267707d..2d189513d9 100644
--- a/src/sentry/static/sentry/app/components/alertLink.jsx
+++ b/src/sentry/static/sentry/app/components/alertLink.jsx
@@ -38,7 +38,7 @@ const StyledLink = styled(Link)`
   background-color: ${p => p.theme.alert[p.priority].backgroundLight};
   color: ${p => p.theme.gray4};
   border: 1px dashed ${p => p.theme.alert[p.priority].border};
-  padding: ${p => (p.size == 'small' ? `${space(1)} ${space(1.5)}` : space(2))};
+  padding: ${p => (p.size === 'small' ? `${space(1)} ${space(1.5)}` : space(2))};
   margin-bottom: ${space(3)};
   border-radius: 0.25em;
   transition: 0.2s border-color;
@@ -53,5 +53,5 @@ const AlertLinkText = styled('div')`
 `;
 
 const StyledInlineSvg = styled(InlineSvg)`
-  margin-right: ${p => (p.spacingSize == 'small' ? space(1) : space(1.5))};
+  margin-right: ${p => (p.spacingSize === 'small' ? space(1) : space(1.5))};
 `;
diff --git a/src/sentry/static/sentry/app/components/alertMessage.jsx b/src/sentry/static/sentry/app/components/alertMessage.jsx
index d5bdc1fd9f..7233ef42a4 100644
--- a/src/sentry/static/sentry/app/components/alertMessage.jsx
+++ b/src/sentry/static/sentry/app/components/alertMessage.jsx
@@ -51,7 +51,7 @@ export default class AlertMessage extends React.PureComponent {
     const {alert, system} = this.props;
     let icon;
 
-    if (alert.type == 'success') {
+    if (alert.type === 'success') {
       icon = 'icon-circle-check';
     } else {
       icon = 'icon-circle-exclamation';
diff --git a/src/sentry/static/sentry/app/components/alerts/toastIndicator.jsx b/src/sentry/static/sentry/app/components/alerts/toastIndicator.jsx
index f6f49dd56f..9142922b28 100644
--- a/src/sentry/static/sentry/app/components/alerts/toastIndicator.jsx
+++ b/src/sentry/static/sentry/app/components/alerts/toastIndicator.jsx
@@ -47,7 +47,7 @@ const Icon = styled('div')`
     display: block;
   }
 
-  color: ${p => (p.type == 'success' ? p.theme.green : p.theme.red)};
+  color: ${p => (p.type === 'success' ? p.theme.green : p.theme.red)};
 `;
 
 const Message = styled('div')`
@@ -88,9 +88,9 @@ function ToastIndicator({indicator, onDismiss, className, ...props}) {
     }
   };
 
-  if (type == 'success') {
+  if (type === 'success') {
     icon = <InlineSvg src="icon-circle-check" size="24px" />;
-  } else if (type == 'error') {
+  } else if (type === 'error') {
     icon = <InlineSvg src="icon-circle-close" size="24px" />;
   }
   return (
@@ -99,7 +99,7 @@ function ToastIndicator({indicator, onDismiss, className, ...props}) {
       className={cx(className, 'ref-toast', `ref-${type}`)}
       {...props}
     >
-      {type == 'loading' ? (
+      {type === 'loading' ? (
         <StyledLoadingIndicator mini />
       ) : (
         <Icon type={type}>{icon}</Icon>
diff --git a/src/sentry/static/sentry/app/components/assistant/guideAnchor.jsx b/src/sentry/static/sentry/app/components/assistant/guideAnchor.jsx
index 7a0bbbf5aa..f0af2d5863 100644
--- a/src/sentry/static/sentry/app/components/assistant/guideAnchor.jsx
+++ b/src/sentry/static/sentry/app/components/assistant/guideAnchor.jsx
@@ -51,7 +51,7 @@ const GuideAnchor = createReactClass({
     if (
       data.currentGuide &&
       data.currentStep > 0 &&
-      data.currentGuide.steps[data.currentStep - 1].target == this.props.target &&
+      data.currentGuide.steps[data.currentStep - 1].target === this.props.target &&
       // TODO(adhiraj): It would be more correct to let invisible anchors become active,
       // and use CSS to make them invisible.
       this.props.type !== 'invisible'
@@ -103,7 +103,7 @@ const recedeAnchor = keyframes`
 
 const GuideAnchorContainer = styled('div')`
   ${p =>
-    p.type == 'text' &&
+    p.type === 'text' &&
     `
       display: inline-block;
       position: relative;
diff --git a/src/sentry/static/sentry/app/components/bases/pluginComponentBase.jsx b/src/sentry/static/sentry/app/components/bases/pluginComponentBase.jsx
index 124ab1e6c1..f8d328cba5 100644
--- a/src/sentry/static/sentry/app/components/bases/pluginComponentBase.jsx
+++ b/src/sentry/static/sentry/app/components/bases/pluginComponentBase.jsx
@@ -80,7 +80,7 @@ class PluginComponentBase extends React.Component {
   }
 
   onSave(callback, ...args) {
-    if (this.state.state == FormState.SAVING) {
+    if (this.state.state === FormState.SAVING) {
       return;
     }
     callback = callbackWithArgs(callback, ...args);
diff --git a/src/sentry/static/sentry/app/components/contextData.jsx b/src/sentry/static/sentry/app/components/contextData.jsx
index 3dee2ed229..a5f8ccafd0 100644
--- a/src/sentry/static/sentry/app/components/contextData.jsx
+++ b/src/sentry/static/sentry/app/components/contextData.jsx
@@ -8,13 +8,13 @@ import {isUrl} from 'app/utils';
 function looksLikeObjectRepr(value) {
   const a = value[0];
   const z = value[value.length - 1];
-  if (a == '<' && z == '>') {
+  if (a === '<' && z === '>') {
     return true;
-  } else if (a == '[' && z == ']') {
+  } else if (a === '[' && z === ']') {
     return true;
-  } else if (a == '(' && z == ')') {
+  } else if (a === '(' && z === ')') {
     return true;
-  } else if (z == ')' && value.match(/^[\w\d._-]+\(/)) {
+  } else if (z === ')' && value.match(/^[\w\d._-]+\(/)) {
     return true;
   }
   return false;
diff --git a/src/sentry/static/sentry/app/components/dropdownAutoCompleteMenu.jsx b/src/sentry/static/sentry/app/components/dropdownAutoCompleteMenu.jsx
index 90aeddda39..52b7578240 100644
--- a/src/sentry/static/sentry/app/components/dropdownAutoCompleteMenu.jsx
+++ b/src/sentry/static/sentry/app/components/dropdownAutoCompleteMenu.jsx
@@ -528,7 +528,7 @@ const AutoCompleteItem = styled('div')`
 
   font-size: 0.9em;
   background-color: ${p =>
-    p.index == p.highlightedIndex ? p.theme.offWhite : 'transparent'};
+    p.index === p.highlightedIndex ? p.theme.offWhite : 'transparent'};
   padding: ${p => getItemPaddingForSize(p.size)};
   cursor: pointer;
   border-bottom: 1px solid ${p => p.theme.borderLight};
diff --git a/src/sentry/static/sentry/app/components/events/eventTags.jsx b/src/sentry/static/sentry/app/components/events/eventTags.jsx
index ea936c3eca..1499bf2b89 100644
--- a/src/sentry/static/sentry/app/components/events/eventTags.jsx
+++ b/src/sentry/static/sentry/app/components/events/eventTags.jsx
@@ -63,7 +63,7 @@ class EventTags extends React.Component {
                     <em className="icon-open" />
                   </a>
                 )}
-                {tag.key == 'release' && (
+                {tag.key === 'release' && (
                   <VersionHoverCard
                     containerClassName="pill-icon"
                     version={tag.value}
diff --git a/src/sentry/static/sentry/app/components/events/interfaces/frame.jsx b/src/sentry/static/sentry/app/components/events/interfaces/frame.jsx
index 7ff58d92df..57142a733b 100644
--- a/src/sentry/static/sentry/app/components/events/interfaces/frame.jsx
+++ b/src/sentry/static/sentry/app/components/events/interfaces/frame.jsx
@@ -219,7 +219,7 @@ const Frame = createReactClass({
     // we don't want to render out zero line numbers which are used to
     // indicate lack of source information for native setups.  We could
     // TODO(mitsuhiko): only do this for events from native platforms?
-    if (defined(data.lineNo) && data.lineNo != 0) {
+    if (defined(data.lineNo) && data.lineNo !== 0) {
       title.push(
         <span className="in-at in-at-line" key="no">
           {' '}
@@ -370,8 +370,8 @@ const Frame = createReactClass({
   isInlineFrame() {
     return (
       this.props.prevFrame &&
-      this.getPlatform() == (this.props.prevFrame.platform || this.props.platform) &&
-      this.props.data.instructionAddr == this.props.prevFrame.instructionAddr
+      this.getPlatform() === (this.props.prevFrame.platform || this.props.platform) &&
+      this.props.data.instructionAddr === this.props.prevFrame.instructionAddr
     );
   },
 
@@ -382,7 +382,7 @@ const Frame = createReactClass({
     if (this.props.data.trust === 'scan' || this.props.data.trust === 'cfi-scan') {
       return t('Found by stack scanning');
     }
-    if (this.getPlatform() == 'cocoa') {
+    if (this.getPlatform() === 'cocoa') {
       const func = this.props.data.function || '<unknown>';
       if (func.match(/^@objc\s/)) {
         return t('Objective-C -> Swift shim frame');
diff --git a/src/sentry/static/sentry/app/components/events/interfaces/rawExceptionContent.jsx b/src/sentry/static/sentry/app/components/events/interfaces/rawExceptionContent.jsx
index a6f4c64619..adb1494002 100644
--- a/src/sentry/static/sentry/app/components/events/interfaces/rawExceptionContent.jsx
+++ b/src/sentry/static/sentry/app/components/events/interfaces/rawExceptionContent.jsx
@@ -50,7 +50,7 @@ class RawExceptionContent extends React.Component {
   getAppleCrashReportEndpoint() {
     const {type, organization, projectId, eventId} = this.props;
 
-    const minified = type == 'minified';
+    const minified = type === 'minified';
     return `/projects/${
       organization.slug
     }/${projectId}/events/${eventId}/apple-crash-report?minified=${minified}`;
@@ -96,7 +96,7 @@ class RawExceptionContent extends React.Component {
           content = <LoadingIndicator />;
         } else if (this.state.error) {
           content = <LoadingError onRetry={this.fetchData} />;
-        } else if (!this.state.loading && this.state.crashReport != '') {
+        } else if (!this.state.loading && this.state.crashReport !== '') {
           content = <ClippedBox clipHeight={250}>{this.state.crashReport}</ClippedBox>;
           downloadButton = (
             <a
diff --git a/src/sentry/static/sentry/app/components/events/interfaces/utils.jsx b/src/sentry/static/sentry/app/components/events/interfaces/utils.jsx
index 75aee2855e..8ac3e664c4 100644
--- a/src/sentry/static/sentry/app/components/events/interfaces/utils.jsx
+++ b/src/sentry/static/sentry/app/components/events/interfaces/utils.jsx
@@ -67,7 +67,7 @@ export function stringifyQueryList(query) {
 
   const queryObj = {};
   for (const kv of query) {
-    if (kv !== null && kv.length == 2) {
+    if (kv !== null && kv.length === 2) {
       const [k, v] = kv;
       if (v !== null) {
         queryObj[k] = v;
diff --git a/src/sentry/static/sentry/app/components/forms/apiForm.jsx b/src/sentry/static/sentry/app/components/forms/apiForm.jsx
index ef6cd18738..aba945a92c 100644
--- a/src/sentry/static/sentry/app/components/forms/apiForm.jsx
+++ b/src/sentry/static/sentry/app/components/forms/apiForm.jsx
@@ -34,7 +34,7 @@ export default class ApiForm extends Form {
   onSubmit = e => {
     e.preventDefault();
 
-    if (this.state.state == FormState.SAVING) {
+    if (this.state.state === FormState.SAVING) {
       return;
     }
 
diff --git a/src/sentry/static/sentry/app/components/forms/form.jsx b/src/sentry/static/sentry/app/components/forms/form.jsx
index 38a3b2e926..ba91315a52 100644
--- a/src/sentry/static/sentry/app/components/forms/form.jsx
+++ b/src/sentry/static/sentry/app/components/forms/form.jsx
@@ -122,7 +122,7 @@ class Form extends React.Component {
     const hasChanges = requireChanges
       ? Object.keys(data).length && !_.isEqual(data, initialData)
       : true;
-    const isError = this.state.state == FormState.ERROR;
+    const isError = this.state.state === FormState.ERROR;
     const nonFieldErrors = this.state.errors && this.state.errors.non_field_errors;
 
     return (
diff --git a/src/sentry/static/sentry/app/components/group/externalIssuesList.jsx b/src/sentry/static/sentry/app/components/group/externalIssuesList.jsx
index 2b4822d9f3..d0504dce56 100644
--- a/src/sentry/static/sentry/app/components/group/externalIssuesList.jsx
+++ b/src/sentry/static/sentry/app/components/group/externalIssuesList.jsx
@@ -68,7 +68,7 @@ class ExternalIssueList extends AsyncComponent {
   };
 
   onSentryAppComponentsChange = sentryAppComponents => {
-    const components = sentryAppComponents.filter(c => c.type == 'issue-link');
+    const components = sentryAppComponents.filter(c => c.type === 'issue-link');
     this.setState({components});
   };
 
@@ -117,7 +117,7 @@ class ExternalIssueList extends AsyncComponent {
     const {externalIssues, sentryAppInstallations, components} = this.state;
     const {group} = this.props;
 
-    if (components.length == 0) {
+    if (components.length === 0) {
       return null;
     }
 
@@ -127,7 +127,7 @@ class ExternalIssueList extends AsyncComponent {
         i => i.app.uuid === sentryApp.uuid
       );
 
-      const issue = (externalIssues || []).find(i => i.serviceType == sentryApp.slug);
+      const issue = (externalIssues || []).find(i => i.serviceType === sentryApp.slug);
 
       return (
         <ErrorBoundary key={sentryApp.slug} mini>
diff --git a/src/sentry/static/sentry/app/components/group/pluginActions.jsx b/src/sentry/static/sentry/app/components/group/pluginActions.jsx
index f8826434f9..00d21b4619 100644
--- a/src/sentry/static/sentry/app/components/group/pluginActions.jsx
+++ b/src/sentry/static/sentry/app/components/group/pluginActions.jsx
@@ -120,10 +120,10 @@ const PluginActions = createReactClass({
             <Modal.Title>{`${plugin.name || plugin.title} Issue`}</Modal.Title>
           </Modal.Header>
           <NavTabs underlined={true}>
-            <li className={actionType == 'create' ? 'active' : ''}>
+            <li className={actionType === 'create' ? 'active' : ''}>
               <a onClick={() => this.handleClick('create')}>{t('Create')}</a>
             </li>
-            <li className={actionType == 'link' ? 'active' : ''}>
+            <li className={actionType === 'link' ? 'active' : ''}>
               <a onClick={() => this.handleClick('link')}>{t('Link')}</a>
             </li>
           </NavTabs>
diff --git a/src/sentry/static/sentry/app/components/group/sentryAppExternalIssueForm.jsx b/src/sentry/static/sentry/app/components/group/sentryAppExternalIssueForm.jsx
index 9ec5b9a20c..4063e23adf 100644
--- a/src/sentry/static/sentry/app/components/group/sentryAppExternalIssueForm.jsx
+++ b/src/sentry/static/sentry/app/components/group/sentryAppExternalIssueForm.jsx
@@ -91,7 +91,7 @@ class SentryAppExternalIssueForm extends React.Component {
 
   getFieldDefault(field) {
     const {group} = this.props;
-    if (field.type == 'textarea') {
+    if (field.type === 'textarea') {
       field.maxRows = 10;
       field.autosize = true;
     }
diff --git a/src/sentry/static/sentry/app/components/group/suggestedOwners.jsx b/src/sentry/static/sentry/app/components/group/suggestedOwners.jsx
index 055de55662..0a8f8588ad 100644
--- a/src/sentry/static/sentry/app/components/group/suggestedOwners.jsx
+++ b/src/sentry/static/sentry/app/components/group/suggestedOwners.jsx
@@ -221,8 +221,8 @@ export default withApi(withOrganization(SuggestedOwners));
  */
 function findMatchedRules(rules, owner) {
   const matchOwner = (actorType, key) =>
-    (actorType == 'user' && key === owner.email) ||
-    (actorType == 'team' && key == owner.name);
+    (actorType === 'user' && key === owner.email) ||
+    (actorType === 'team' && key === owner.name);
 
   const actorHasOwner = ([actorType, key]) =>
     actorType === owner.type && matchOwner(actorType, key);
diff --git a/src/sentry/static/sentry/app/components/onboardingWizard/todos.jsx b/src/sentry/static/sentry/app/components/onboardingWizard/todos.jsx
index 7538f80461..54a362b99c 100644
--- a/src/sentry/static/sentry/app/components/onboardingWizard/todos.jsx
+++ b/src/sentry/static/sentry/app/components/onboardingWizard/todos.jsx
@@ -148,7 +148,7 @@ class TodoList extends React.Component {
     const org = this.props.organization;
     const tasks = TASKS.map(task => {
       for (const serverTask of org.onboardingTasks) {
-        if (serverTask.task == task.task) {
+        if (serverTask.task === task.task) {
           Object.assign(task, serverTask);
           break;
         }
@@ -165,7 +165,7 @@ class TodoList extends React.Component {
       data: {task: skippedTask, status: 'skipped'},
       success: () => {
         const newState = this.state.tasks.map(task => {
-          if (task.task == skippedTask) {
+          if (task.task === skippedTask) {
             task.status = 'skipped';
           }
           return task;
diff --git a/src/sentry/static/sentry/app/components/sidebar/broadcasts.jsx b/src/sentry/static/sentry/app/components/sidebar/broadcasts.jsx
index 652a0af18e..499e81c64f 100644
--- a/src/sentry/static/sentry/app/components/sidebar/broadcasts.jsx
+++ b/src/sentry/static/sentry/app/components/sidebar/broadcasts.jsx
@@ -137,7 +137,7 @@ class Broadcasts extends React.Component {
           data-test-id="sidebar-broadcasts"
           orientation={orientation}
           collapsed={collapsed}
-          active={currentPanel == 'broadcasts'}
+          active={currentPanel === 'broadcasts'}
           badge={unseenPosts.length}
           icon={<InlineSvg src="icon-broadcast" size="22px" />}
           label={t("What's new")}
@@ -145,7 +145,7 @@ class Broadcasts extends React.Component {
           id="broadcasts"
         />
 
-        {showPanel && currentPanel == 'broadcasts' && (
+        {showPanel && currentPanel === 'broadcasts' && (
           <SidebarPanel
             data-test-id="sidebar-broadcasts-panel"
             orientation={orientation}
diff --git a/src/sentry/static/sentry/app/components/sidebar/index.jsx b/src/sentry/static/sentry/app/components/sidebar/index.jsx
index 475406f63b..5aff60d1e9 100644
--- a/src/sentry/static/sentry/app/components/sidebar/index.jsx
+++ b/src/sentry/static/sentry/app/components/sidebar/index.jsx
@@ -141,7 +141,7 @@ class Sidebar extends React.Component {
   };
 
   hashChangeHandler = () => {
-    if (window.location.hash == '#welcome') {
+    if (window.location.hash === '#welcome') {
       this.togglePanel('todos');
     }
   };
diff --git a/src/sentry/static/sentry/app/components/sidebar/onboardingStatus.jsx b/src/sentry/static/sentry/app/components/sidebar/onboardingStatus.jsx
index 962f86fb8c..2cd453f3b7 100644
--- a/src/sentry/static/sentry/app/components/sidebar/onboardingStatus.jsx
+++ b/src/sentry/static/sentry/app/components/sidebar/onboardingStatus.jsx
@@ -21,7 +21,7 @@ class OnboardingStatus extends React.Component {
     const {currentPanel, org} = this.props;
     if (
       currentPanel !== prevProps.currentPanel &&
-      (currentPanel || prevProps.currentPanel == 'todos')
+      (currentPanel || prevProps.currentPanel === 'todos')
     ) {
       this.recordAnalytics(currentPanel, parseInt(org.id, 10));
     }
diff --git a/src/sentry/static/sentry/app/components/stackedBarChart.jsx b/src/sentry/static/sentry/app/components/stackedBarChart.jsx
index 665321d0ad..65f6c79a8e 100644
--- a/src/sentry/static/sentry/app/components/stackedBarChart.jsx
+++ b/src/sentry/static/sentry/app/components/stackedBarChart.jsx
@@ -282,7 +282,7 @@ class StackedBarChart extends React.Component {
 
   getMinHeight(index, pointLength) {
     const {minHeights} = this.props;
-    return minHeights && (minHeights[index] || minHeights[index] == 0)
+    return minHeights && (minHeights[index] || minHeights[index] === 0)
       ? this.props.minHeights[index]
       : 1;
   }
diff --git a/src/sentry/static/sentry/app/components/switch.jsx b/src/sentry/static/sentry/app/components/switch.jsx
index 012407d66c..6fd1181f7b 100644
--- a/src/sentry/static/sentry/app/components/switch.jsx
+++ b/src/sentry/static/sentry/app/components/switch.jsx
@@ -38,9 +38,9 @@ class Switch extends React.Component {
   }
 }
 
-const getSize = p => (p.size == 'sm' ? 16 : 24);
-const getToggleSize = p => getSize(p) - (p.size == 'sm' ? 6 : 10);
-const getToggleTop = p => (p.size == 'sm' ? 2 : 4);
+const getSize = p => (p.size === 'sm' ? 16 : 24);
+const getToggleSize = p => getSize(p) - (p.size === 'sm' ? 6 : 10);
+const getToggleTop = p => (p.size === 'sm' ? 2 : 4);
 const getTranslateX = p => (p.isActive ? getToggleTop(p) + getSize(p) : getToggleTop(p));
 
 const SwitchContainer = styled('div')`
diff --git a/src/sentry/static/sentry/app/components/tagDistributionMeter/index.jsx b/src/sentry/static/sentry/app/components/tagDistributionMeter/index.jsx
index 927ed90348..e8fd75c2ab 100644
--- a/src/sentry/static/sentry/app/components/tagDistributionMeter/index.jsx
+++ b/src/sentry/static/sentry/app/components/tagDistributionMeter/index.jsx
@@ -73,7 +73,7 @@ export default class TagDistributionMeter extends React.Component {
                 last={index === segments.length - 1}
                 isOther={!!value.isOther}
               >
-                <Description first={index == 0}>
+                <Description first={index === 0}>
                   <Percentage>{pctLabel}%</Percentage>
                   <Label>{value.name}</Label>
                 </Description>
diff --git a/src/sentry/static/sentry/app/data/forms/projectGeneralSettings.jsx b/src/sentry/static/sentry/app/data/forms/projectGeneralSettings.jsx
index a2678f5944..3de6001667 100644
--- a/src/sentry/static/sentry/app/data/forms/projectGeneralSettings.jsx
+++ b/src/sentry/static/sentry/app/data/forms/projectGeneralSettings.jsx
@@ -121,7 +121,7 @@ export const fields = {
     saveMessage: t('Changing grouping config will apply to future events only.'),
     selectionInfoFunction: args => {
       const {groupingConfigs, value} = args;
-      const selection = groupingConfigs.find(({id}) => id == value);
+      const selection = groupingConfigs.find(({id}) => id === value);
       const changelog = (selection && selection.changelog) || '';
       if (!changelog) {
         return null;
@@ -150,7 +150,7 @@ export const fields = {
     saveMessage: t('Changing grouping enhancements will apply to future events only.'),
     selectionInfoFunction: args => {
       const {groupingEnhancementBases, value} = args;
-      const selection = groupingEnhancementBases.find(({id}) => id == value);
+      const selection = groupingEnhancementBases.find(({id}) => id === value);
       const changelog = (selection && selection.changelog) || '';
       if (!changelog) {
         return null;
diff --git a/src/sentry/static/sentry/app/data/forms/sentryApplication.jsx b/src/sentry/static/sentry/app/data/forms/sentryApplication.jsx
index e26f16f3a8..1f785e1d3e 100644
--- a/src/sentry/static/sentry/app/data/forms/sentryApplication.jsx
+++ b/src/sentry/static/sentry/app/data/forms/sentryApplication.jsx
@@ -71,11 +71,11 @@ const forms = [
         autosize: true,
         help: 'Schema for your UI components',
         getValue: val => {
-          return val == '' ? {} : JSON.parse(val);
+          return val === '' ? {} : JSON.parse(val);
         },
         setValue: val => {
           const schema = JSON.stringify(val, null, 2);
-          if (schema == '{}') {
+          if (schema === '{}') {
             return '';
           }
           return schema;
diff --git a/src/sentry/static/sentry/app/locale.jsx b/src/sentry/static/sentry/app/locale.jsx
index 84cfec6670..37baa49141 100644
--- a/src/sentry/static/sentry/app/locale.jsx
+++ b/src/sentry/static/sentry/app/locale.jsx
@@ -10,7 +10,7 @@ import {getTranslations} from 'app/translations';
 let LOCALE_DEBUG = false;
 
 const sessionStorage = window.sessionStorage;
-if (sessionStorage && sessionStorage.getItem('localeDebug') == '1') {
+if (sessionStorage && sessionStorage.getItem('localeDebug') === '1') {
   LOCALE_DEBUG = true;
 }
 
@@ -86,7 +86,7 @@ function argsInvolveReact(args) {
   if (args.some(React.isValidElement)) {
     return true;
   }
-  if (args.length == 1 && _.isObject(args[0])) {
+  if (args.length === 1 && _.isObject(args[0])) {
     return Object.keys(args[0]).some(key => {
       return React.isValidElement(args[0][key]);
     });
@@ -110,7 +110,7 @@ export function parseComponentTemplate(string) {
         buf.push(substr);
       }
 
-      if (match[0] == ']') {
+      if (match[0] === ']') {
         if (inGroup) {
           satisfied = true;
           break;
@@ -120,7 +120,7 @@ export function parseComponentTemplate(string) {
         }
       }
 
-      if (match[2] == ']') {
+      if (match[2] === ']') {
         pos = regex.lastIndex;
       } else {
         pos = regex.lastIndex = process(regex.lastIndex, match[1], true);
diff --git a/src/sentry/static/sentry/app/stores/alertStore.jsx b/src/sentry/static/sentry/app/stores/alertStore.jsx
index ef31dec182..59d23ed8e4 100644
--- a/src/sentry/static/sentry/app/stores/alertStore.jsx
+++ b/src/sentry/static/sentry/app/stores/alertStore.jsx
@@ -12,7 +12,7 @@ const AlertStore = Reflux.createStore({
   },
 
   onAddAlert(alert) {
-    const alertAlreadyExists = this.alerts.some(a => a.id == alert.id);
+    const alertAlreadyExists = this.alerts.some(a => a.id === alert.id);
     if (alertAlreadyExists && alert.noDuplicates) {
       return;
     }
diff --git a/src/sentry/static/sentry/app/stores/guideStore.jsx b/src/sentry/static/sentry/app/stores/guideStore.jsx
index 2224e835ae..9f3007ba6d 100644
--- a/src/sentry/static/sentry/app/stores/guideStore.jsx
+++ b/src/sentry/static/sentry/app/stores/guideStore.jsx
@@ -78,7 +78,7 @@ const GuideStore = Reflux.createStore({
     const {currentGuide} = this.state;
     this.state.guides[
       Object.keys(this.state.guides).find(key => {
-        return this.state.guides[key].id == currentGuide.id;
+        return this.state.guides[key].id === currentGuide.id;
       })
     ].seen = true;
     // Don't continue to force show if the user dismissed the guide.
@@ -89,7 +89,7 @@ const GuideStore = Reflux.createStore({
   onNextStep() {
     this.state.currentStep += 1;
     this.trigger(this.state);
-    if (this.state.currentGuide && this.state.currentStep == 1) {
+    if (this.state.currentGuide && this.state.currentStep === 1) {
       analytics('assistant.guide_opened', {
         guide: this.state.currentGuide.id,
       });
diff --git a/src/sentry/static/sentry/app/stores/sentryAppComponentsStore.jsx b/src/sentry/static/sentry/app/stores/sentryAppComponentsStore.jsx
index d62dbe65d4..882a4e6326 100644
--- a/src/sentry/static/sentry/app/stores/sentryAppComponentsStore.jsx
+++ b/src/sentry/static/sentry/app/stores/sentryAppComponentsStore.jsx
@@ -28,7 +28,7 @@ const SentryAppComponentsStore = Reflux.createStore({
     if (!type) {
       return this.getAll();
     }
-    return this.items.filter(item => item.type == type);
+    return this.items.filter(item => item.type === type);
   },
 });
 
diff --git a/src/sentry/static/sentry/app/utils/events.jsx b/src/sentry/static/sentry/app/utils/events.jsx
index 0d39e9914e..7851f61f4a 100644
--- a/src/sentry/static/sentry/app/utils/events.jsx
+++ b/src/sentry/static/sentry/app/utils/events.jsx
@@ -36,20 +36,20 @@ export function getTitle(event) {
   let {title} = event;
   let subtitle = null;
 
-  if (type == 'error') {
+  if (type === 'error') {
     subtitle = culprit;
     if (metadata.type) {
       title = metadata.type;
     } else {
       title = metadata.function || '<unknown>';
     }
-  } else if (type == 'csp') {
+  } else if (type === 'csp') {
     title = metadata.directive;
     subtitle = metadata.uri;
   } else if (type === 'expectct' || type === 'expectstaple' || type === 'hpkp') {
     title = metadata.message;
     subtitle = metadata.origin;
-  } else if (type == 'default') {
+  } else if (type === 'default') {
     title = metadata.title;
   }
 
diff --git a/src/sentry/static/sentry/app/utils/getCookie.jsx b/src/sentry/static/sentry/app/utils/getCookie.jsx
index 5b2284d449..a4c7162b19 100644
--- a/src/sentry/static/sentry/app/utils/getCookie.jsx
+++ b/src/sentry/static/sentry/app/utils/getCookie.jsx
@@ -5,7 +5,7 @@ export default function getCookie(name) {
     for (let i = 0; i < cookies.length; i++) {
       const cookie = cookies[i].trim();
       // Does this cookie string begin with the name we want?
-      if (cookie.substring(0, name.length + 1) == name + '=') {
+      if (cookie.substring(0, name.length + 1) === name + '=') {
         cookieValue = decodeURIComponent(cookie.substring(name.length + 1));
         break;
       }
diff --git a/src/sentry/static/sentry/app/utils/getPlatformName.jsx b/src/sentry/static/sentry/app/utils/getPlatformName.jsx
index 3a7d8943ad..af90c4ed1a 100644
--- a/src/sentry/static/sentry/app/utils/getPlatformName.jsx
+++ b/src/sentry/static/sentry/app/utils/getPlatformName.jsx
@@ -1,6 +1,6 @@
 import platforms from 'app/data/platforms';
 
 export default function getPlatformName(platform) {
-  const platformData = platforms.find(({id}) => platform == id);
+  const platformData = platforms.find(({id}) => platform === id);
   return platformData && platformData.name;
 }
diff --git a/src/sentry/static/sentry/app/views/admin/adminQueue.jsx b/src/sentry/static/sentry/app/views/admin/adminQueue.jsx
index 627538a2e2..16ef7f79b5 100644
--- a/src/sentry/static/sentry/app/views/admin/adminQueue.jsx
+++ b/src/sentry/static/sentry/app/views/admin/adminQueue.jsx
@@ -51,7 +51,7 @@ export default class AdminQueue extends AsyncView {
             return (
               <a
                 className={`btn btn-sm ${
-                  r == this.state.timeWindow ? 'btn-primary' : 'btn-default'
+                  r === this.state.timeWindow ? 'btn-primary' : 'btn-default'
                 }`}
                 onClick={() => this.changeWindow(r)}
                 key={r}
diff --git a/src/sentry/static/sentry/app/views/onboarding/configure.jsx b/src/sentry/static/sentry/app/views/onboarding/configure.jsx
index 0a397e4e8a..41463094b4 100644
--- a/src/sentry/static/sentry/app/views/onboarding/configure.jsx
+++ b/src/sentry/static/sentry/app/views/onboarding/configure.jsx
@@ -41,7 +41,7 @@ class Configure extends React.Component {
 
   get project() {
     return this.props.organization.projects.find(
-      p => p.slug == this.props.params.projectId
+      p => p.slug === this.props.params.projectId
     );
   }
 
diff --git a/src/sentry/static/sentry/app/views/onboarding/wizardNew.jsx b/src/sentry/static/sentry/app/views/onboarding/wizardNew.jsx
index 4f594d50a4..600c7fa913 100644
--- a/src/sentry/static/sentry/app/views/onboarding/wizardNew.jsx
+++ b/src/sentry/static/sentry/app/views/onboarding/wizardNew.jsx
@@ -72,7 +72,7 @@ class OnboardingWizard extends React.Component {
   }
 
   validateActiveStep() {
-    if (this.activeStepIndex == -1) {
+    if (this.activeStepIndex === -1) {
       const firstStep = this.props.steps[0].id;
       browserHistory.replace(`/onboarding/${this.props.params.orgId}/${firstStep}/`);
     }
diff --git a/src/sentry/static/sentry/app/views/organizationActivity/activityFeedItem.jsx b/src/sentry/static/sentry/app/views/organizationActivity/activityFeedItem.jsx
index d18518ec0f..1cfd6d1761 100644
--- a/src/sentry/static/sentry/app/views/organizationActivity/activityFeedItem.jsx
+++ b/src/sentry/static/sentry/app/views/organizationActivity/activityFeedItem.jsx
@@ -237,7 +237,7 @@ class ActivityItem extends React.Component {
       case 'assigned':
         let assignee;
 
-        if (data.assigneeType == 'team') {
+        if (data.assigneeType === 'team') {
           const team = TeamStore.getById(data.assignee);
           assignee = team ? team.slug : '<unknown-team>';
 
diff --git a/src/sentry/static/sentry/app/views/organizationEvents/eventsTable.jsx b/src/sentry/static/sentry/app/views/organizationEvents/eventsTable.jsx
index 9e379ad069..bbe7620233 100644
--- a/src/sentry/static/sentry/app/views/organizationEvents/eventsTable.jsx
+++ b/src/sentry/static/sentry/app/views/organizationEvents/eventsTable.jsx
@@ -32,7 +32,7 @@ class EventsTableBody extends React.PureComponent {
       }/events/${event.eventID}/`;
 
       return (
-        <TableRow key={`${project.slug}-${event.eventID}`} first={eventIdx == 0}>
+        <TableRow key={`${project.slug}-${event.eventID}`} first={eventIdx === 0}>
           <TableData>
             <EventTitle>
               <Link to={eventLink}>{trimmedMessage}</Link>
diff --git a/src/sentry/static/sentry/app/views/organizationGroupDetails/eventToolbar.jsx b/src/sentry/static/sentry/app/views/organizationGroupDetails/eventToolbar.jsx
index 6f4612474b..1a0f1a6168 100644
--- a/src/sentry/static/sentry/app/views/organizationGroupDetails/eventToolbar.jsx
+++ b/src/sentry/static/sentry/app/views/organizationGroupDetails/eventToolbar.jsx
@@ -20,14 +20,14 @@ const formatDateDelta = (reference, observed) => {
   const results = [];
 
   if (hours) {
-    results.push(`${hours} hour${hours != 1 ? 's' : ''}`);
+    results.push(`${hours} hour${hours !== 1 ? 's' : ''}`);
   }
 
   if (minutes) {
-    results.push(`${minutes} minute${minutes != 1 ? 's' : ''}`);
+    results.push(`${minutes} minute${minutes !== 1 ? 's' : ''}`);
   }
 
-  if (results.length == 0) {
+  if (results.length === 0) {
     results.push('a few seconds');
   }
 
diff --git a/src/sentry/static/sentry/app/views/organizationGroupDetails/groupActivityItem.jsx b/src/sentry/static/sentry/app/views/organizationGroupDetails/groupActivityItem.jsx
index 3fcd0144b6..9fb9c7f9ce 100644
--- a/src/sentry/static/sentry/app/views/organizationGroupDetails/groupActivityItem.jsx
+++ b/src/sentry/static/sentry/app/views/organizationGroupDetails/groupActivityItem.jsx
@@ -149,7 +149,7 @@ class GroupActivityItem extends React.Component {
       case 'assigned':
         let assignee;
 
-        if (data.assigneeType == 'team') {
+        if (data.assigneeType === 'team') {
           const team = TeamStore.getById(data.assignee);
           assignee = team ? team.slug : '<unknown-team>';
 
diff --git a/src/sentry/static/sentry/app/views/organizationGroupDetails/groupTagValues.jsx b/src/sentry/static/sentry/app/views/organizationGroupDetails/groupTagValues.jsx
index 7db078e1df..fa876655a1 100644
--- a/src/sentry/static/sentry/app/views/organizationGroupDetails/groupTagValues.jsx
+++ b/src/sentry/static/sentry/app/views/organizationGroupDetails/groupTagValues.jsx
@@ -160,7 +160,7 @@ const GroupTagValues = createReactClass({
     return (
       <div>
         <h3>
-          {tagKey.key == 'user' ? t('Affected Users') : tagKey.name}
+          {tagKey.key === 'user' ? t('Affected Users') : tagKey.name}
           <a
             href={`/${orgId}/${group.project.slug}/issues/${group.id}/tags/${
               this.props.params.tagKey
diff --git a/src/sentry/static/sentry/app/views/organizationIncidents/details/activity/statusItem.jsx b/src/sentry/static/sentry/app/views/organizationIncidents/details/activity/statusItem.jsx
index ba455f5531..5b41b4692b 100644
--- a/src/sentry/static/sentry/app/views/organizationIncidents/details/activity/statusItem.jsx
+++ b/src/sentry/static/sentry/app/views/organizationIncidents/details/activity/statusItem.jsx
@@ -33,11 +33,11 @@ class StatusItem extends React.Component {
     const isDetected = activity.type === INCIDENT_ACTIVITY_TYPE.DETECTED;
     const isClosed =
       activity.type === INCIDENT_ACTIVITY_TYPE.STATUS_CHANGE &&
-      activity.value == INCIDENT_STATUS.CLOSED;
+      activity.value === INCIDENT_STATUS.CLOSED;
     const isReopened =
       activity.type === INCIDENT_ACTIVITY_TYPE.STATUS_CHANGE &&
-      activity.value == INCIDENT_STATUS.CREATED &&
-      activity.previousValue == INCIDENT_STATUS.CLOSED;
+      activity.value === INCIDENT_STATUS.CREATED &&
+      activity.previousValue === INCIDENT_STATUS.CLOSED;
 
     // Unknown activity, don't render anything
     if (!isCreated && !isDetected && !isClosed && !isReopened) {
diff --git a/src/sentry/static/sentry/app/views/organizationIntegrations/index.jsx b/src/sentry/static/sentry/app/views/organizationIntegrations/index.jsx
index 5e51a8ed6d..d49fa504bf 100644
--- a/src/sentry/static/sentry/app/views/organizationIntegrations/index.jsx
+++ b/src/sentry/static/sentry/app/views/organizationIntegrations/index.jsx
@@ -68,7 +68,7 @@ class OrganizationIntegrations extends AsyncComponent {
     // when at least one Integration is present.
     return this.state.config.providers.map(provider => {
       const integrations = this.state.integrations.filter(
-        i => i.provider.key == provider.key
+        i => i.provider.key === provider.key
       );
       const isInstalled = integrations.length > 0;
 
@@ -200,7 +200,7 @@ class OrganizationIntegrations extends AsyncComponent {
     // we dont want the app to render twice if its the org that created
     // the published app.
     const orgOwned = orgOwnedApps.filter(app => {
-      return !published.find(p => p.slug == app.slug);
+      return !published.find(p => p.slug === app.slug);
     });
     const orgOwnedInternal = orgOwned.filter(app => {
       return app.status === 'internal';
diff --git a/src/sentry/static/sentry/app/views/organizationIntegrations/integrationRepos.jsx b/src/sentry/static/sentry/app/views/organizationIntegrations/integrationRepos.jsx
index aee8b64ede..dd7264136d 100644
--- a/src/sentry/static/sentry/app/views/organizationIntegrations/integrationRepos.jsx
+++ b/src/sentry/static/sentry/app/views/organizationIntegrations/integrationRepos.jsx
@@ -102,7 +102,7 @@ export default class IntegrationRepos extends AsyncComponent {
       if (!(selection.value && item.externalSlug)) {
         return false;
       }
-      return selection.value == item.externalSlug;
+      return selection.value === item.externalSlug;
     })[0];
 
     let promise;
diff --git a/src/sentry/static/sentry/app/views/organizationIntegrations/migrationWarnings.jsx b/src/sentry/static/sentry/app/views/organizationIntegrations/migrationWarnings.jsx
index dd17da7302..72f9038e27 100644
--- a/src/sentry/static/sentry/app/views/organizationIntegrations/migrationWarnings.jsx
+++ b/src/sentry/static/sentry/app/views/organizationIntegrations/migrationWarnings.jsx
@@ -28,7 +28,7 @@ export default class MigrationWarnings extends AsyncComponent {
   render() {
     return Object.entries(this.unmigratableReposByOrg).map(([orgName, repos]) => {
       // Repos use 'visualstudio', Integrations use 'vsts'. Normalize to 'vsts'.
-      const key = repos[0].provider.id == 'visualstudio' ? 'vsts' : repos[0].provider.id;
+      const key = repos[0].provider.id === 'visualstudio' ? 'vsts' : repos[0].provider.id;
       const provider = this.props.providers.find(p => p.key === key);
 
       // The Org might not have access to this Integration yet.
diff --git a/src/sentry/static/sentry/app/views/organizationReleases/list/releaseLandingCard.jsx b/src/sentry/static/sentry/app/views/organizationReleases/list/releaseLandingCard.jsx
index ca905c7dbc..99ef090a95 100644
--- a/src/sentry/static/sentry/app/views/organizationReleases/list/releaseLandingCard.jsx
+++ b/src/sentry/static/sentry/app/views/organizationReleases/list/releaseLandingCard.jsx
@@ -16,7 +16,7 @@ class ReleaseLandingCard extends React.Component {
 
   getMessage = () => {
     const {cardsLength, step} = this.props;
-    if (step == 0) {
+    if (step === 0) {
       return t('Tell Me More');
     } else if (step < cardsLength - 1) {
       return t('Next');
diff --git a/src/sentry/static/sentry/app/views/organizationStream/actions.jsx b/src/sentry/static/sentry/app/views/organizationStream/actions.jsx
index 24efa096bd..f29a09b0d4 100644
--- a/src/sentry/static/sentry/app/views/organizationStream/actions.jsx
+++ b/src/sentry/static/sentry/app/views/organizationStream/actions.jsx
@@ -58,7 +58,7 @@ const getConfirm = (numIssues, allInQuerySelected, query, queryCount) => {
         );
 
     const message =
-      action == 'delete'
+      action === 'delete'
         ? tct(
             'Bulk deletion is only recommended for junk data. To clear your stream, consider resolving or ignoring. [link:When should I delete events?]',
             {
diff --git a/src/sentry/static/sentry/app/views/organizationStream/organizationSavedSearchSelector.jsx b/src/sentry/static/sentry/app/views/organizationStream/organizationSavedSearchSelector.jsx
index 4938f4832a..4850c60b4d 100644
--- a/src/sentry/static/sentry/app/views/organizationStream/organizationSavedSearchSelector.jsx
+++ b/src/sentry/static/sentry/app/views/organizationStream/organizationSavedSearchSelector.jsx
@@ -59,7 +59,7 @@ export default class OrganizationSavedSearchSelector extends React.Component {
         delay={1000}
         key={search.id}
       >
-        <MenuItem last={index == savedSearchList.length - 1}>
+        <MenuItem last={index === savedSearchList.length - 1}>
           <MenuItemLink tabIndex="-1" onClick={() => onSavedSearchSelect(search)}>
             <SearchTitle>{search.name}</SearchTitle>
             <SearchQuery>{search.query}</SearchQuery>
diff --git a/src/sentry/static/sentry/app/views/organizationStream/overview.jsx b/src/sentry/static/sentry/app/views/organizationStream/overview.jsx
index 98c78b7417..76bd20c27f 100644
--- a/src/sentry/static/sentry/app/views/organizationStream/overview.jsx
+++ b/src/sentry/static/sentry/app/views/organizationStream/overview.jsx
@@ -370,7 +370,7 @@ const OrganizationStream = createReactClass({
   },
 
   onSelectStatsPeriod(period) {
-    if (period != this.getGroupStatsPeriod()) {
+    if (period !== this.getGroupStatsPeriod()) {
       this.transitionTo({groupStatsPeriod: period});
     }
   },
@@ -661,7 +661,7 @@ const OrganizationStream = createReactClass({
       hasReleases = new Set(selectedProject.features).has('releases');
       latestRelease = selectedProject.latestRelease;
       projectId = selectedProject.slug;
-    } else if (projects.length == 1) {
+    } else if (projects.length === 1) {
       // If the user has filtered down to a single project
       // we can hint the autocomplete/savedsearch picker with that.
       projectId = projects[0].slug;
diff --git a/src/sentry/static/sentry/app/views/projectChooser.jsx b/src/sentry/static/sentry/app/views/projectChooser.jsx
index 4042569311..747bb601f9 100644
--- a/src/sentry/static/sentry/app/views/projectChooser.jsx
+++ b/src/sentry/static/sentry/app/views/projectChooser.jsx
@@ -51,7 +51,7 @@ const ProjectChooser = createReactClass({
   render() {
     const org = this.getOrganization();
     const task = TASKS.filter(
-      task_inst => task_inst.task == this.props.location.query.task
+      task_inst => task_inst.task === parseInt(this.props.location.query.task, 10)
     )[0];
 
     // Expect onboarding=1 and task=<task id> parameters and task.featureLocation == 'project'
diff --git a/src/sentry/static/sentry/app/views/settings/account/accountAvatar.jsx b/src/sentry/static/sentry/app/views/settings/account/accountAvatar.jsx
index d769503bd1..0a4a96917f 100644
--- a/src/sentry/static/sentry/app/views/settings/account/accountAvatar.jsx
+++ b/src/sentry/static/sentry/app/views/settings/account/accountAvatar.jsx
@@ -113,7 +113,7 @@ const AccountAvatar = createReactClass({
       </Well>
     );
 
-    const isLetter = this.state.user.avatar.avatarType == 'letter_avatar';
+    const isLetter = this.state.user.avatar.avatarType === 'letter_avatar';
 
     return (
       <Panel>
diff --git a/src/sentry/static/sentry/app/views/settings/account/accountSecurity/index.jsx b/src/sentry/static/sentry/app/views/settings/account/accountSecurity/index.jsx
index 44eacc6050..00837453d4 100644
--- a/src/sentry/static/sentry/app/views/settings/account/accountSecurity/index.jsx
+++ b/src/sentry/static/sentry/app/views/settings/account/accountSecurity/index.jsx
@@ -79,7 +79,7 @@ class AccountSecurity extends AsyncView {
           }
         />
 
-        {!isEmpty && countEnrolled == 0 && <TwoFactorRequired />}
+        {!isEmpty && countEnrolled === 0 && <TwoFactorRequired />}
 
         <PasswordForm />
 
diff --git a/src/sentry/static/sentry/app/views/settings/components/forms/radioField.jsx b/src/sentry/static/sentry/app/views/settings/components/forms/radioField.jsx
index fef9141414..2c0da41507 100644
--- a/src/sentry/static/sentry/app/views/settings/components/forms/radioField.jsx
+++ b/src/sentry/static/sentry/app/views/settings/components/forms/radioField.jsx
@@ -25,7 +25,7 @@ class RadioField extends React.Component {
           <RadioGroup
             choices={props.choices}
             disabled={disabled}
-            value={value == '' ? null : value}
+            value={value === '' ? null : value}
             label={props.label}
             onChange={(id, e) => this.onChange(id, onChange, onBlur, e)}
           />
diff --git a/src/sentry/static/sentry/app/views/settings/components/tag.jsx b/src/sentry/static/sentry/app/views/settings/components/tag.jsx
index 240d6b214c..f4608234dc 100644
--- a/src/sentry/static/sentry/app/views/settings/components/tag.jsx
+++ b/src/sentry/static/sentry/app/views/settings/components/tag.jsx
@@ -9,7 +9,7 @@ const getMarginLeft = p => {
   if (!p.inline) {
     return '';
   }
-  return `margin-left: ${p.size == 'small' ? '0.25em' : '0.5em'};`;
+  return `margin-left: ${p.size === 'small' ? '0.25em' : '0.5em'};`;
 };
 
 const getBorder = p =>
@@ -23,16 +23,16 @@ const TagTextStyled = styled(({priority, size, border, inline, ...props}) => (
   <Box {...props} />
 ))`
   display: inline-flex;
-  padding: ${p => (p.size == 'small' ? '0.1em 0.4em 0.2em' : '0.35em 0.8em 0.4em')};
+  padding: ${p => (p.size === 'small' ? '0.1em 0.4em 0.2em' : '0.35em 0.8em 0.4em')};
   font-size: 75%;
   line-height: 1;
   color: ${p => (p.priority ? '#fff' : p.gray5)};
   text-align: center;
   white-space: nowrap;
   vertical-align: middle;
-  border-radius: ${p => (p.size == 'small' ? '0.25em' : '2em')};
+  border-radius: ${p => (p.size === 'small' ? '0.25em' : '2em')};
   text-transform: lowercase;
-  font-weight: ${p => (p.size == 'small' ? 'bold' : 'normal')};
+  font-weight: ${p => (p.size === 'small' ? 'bold' : 'normal')};
   background: ${p =>
     p.priority ? p.theme.alert[p.priority].background : p.theme.offWhite2};
   ${p => getBorder(p)};
diff --git a/src/sentry/static/sentry/app/views/settings/organizationDeveloperSettings/sentryApplicationDetails.jsx b/src/sentry/static/sentry/app/views/settings/organizationDeveloperSettings/sentryApplicationDetails.jsx
index 75dcec6d0b..6e0ac8a769 100644
--- a/src/sentry/static/sentry/app/views/settings/organizationDeveloperSettings/sentryApplicationDetails.jsx
+++ b/src/sentry/static/sentry/app/views/settings/organizationDeveloperSettings/sentryApplicationDetails.jsx
@@ -73,7 +73,7 @@ export default class SentryApplicationDetails extends AsyncView {
 
   // Events may come from the API as "issue.created" when we just want "issue" here.
   normalize(events) {
-    if (events.length == 0) {
+    if (events.length === 0) {
       return events;
     }
 
@@ -91,7 +91,7 @@ export default class SentryApplicationDetails extends AsyncView {
     const {app} = this.state;
     const scopes = (app && [...app.scopes]) || [];
     const events = (app && this.normalize(app.events)) || [];
-    const statusDisabled = app && app.status == 'internal' ? true : false;
+    const statusDisabled = app && app.status === 'internal' ? true : false;
     const method = app ? 'PUT' : 'POST';
     const endpoint = app ? `/sentry-apps/${app.slug}/` : '/sentry-apps/';
 
@@ -105,7 +105,7 @@ export default class SentryApplicationDetails extends AsyncView {
           initialData={{
             organization: orgId,
             isAlertable: false,
-            isInternal: app && app.status == 'internal' ? true : false,
+            isInternal: app && app.status === 'internal' ? true : false,
             schema: {},
             scopes: [],
             ...app,
@@ -124,7 +124,7 @@ export default class SentryApplicationDetails extends AsyncView {
           {app && (
             <Panel>
               <PanelHeader>{t('Credentials')}</PanelHeader>
-              {app.status == 'internal' ? (
+              {app.status === 'internal' ? (
                 <PanelBody>
                   <FormField name="token" label="Token" overflow>
                     {({value}) => {
diff --git a/src/sentry/static/sentry/app/views/settings/organizationMembers/inviteMember/index.jsx b/src/sentry/static/sentry/app/views/settings/organizationMembers/inviteMember/index.jsx
index 89b3836278..c81f32e4ce 100644
--- a/src/sentry/static/sentry/app/views/settings/organizationMembers/inviteMember/index.jsx
+++ b/src/sentry/static/sentry/app/views/settings/organizationMembers/inviteMember/index.jsx
@@ -105,7 +105,7 @@ const InviteMember = createReactClass({
         }
       },
       error: error => {
-        if (error.status == 404 && isSuperuser) {
+        if (error.status === 404 && isSuperuser) {
           // use the static list
           this.setState({roleList: STATIC_ROLE_LIST, loading: false});
         } else if (error.status !== 0) {
diff --git a/src/sentry/static/sentry/app/views/settings/organizationRepositories/addRepositoryLink.jsx b/src/sentry/static/sentry/app/views/settings/organizationRepositories/addRepositoryLink.jsx
index 2f695ee6fd..071745323d 100644
--- a/src/sentry/static/sentry/app/views/settings/organizationRepositories/addRepositoryLink.jsx
+++ b/src/sentry/static/sentry/app/views/settings/organizationRepositories/addRepositoryLink.jsx
@@ -128,7 +128,7 @@ class AddRepositoryLink extends PluginComponentBase {
     const provider = this.props.provider;
     let hasIntegration = true;
     provider.config.forEach(field => {
-      if (field.initial == '') {
+      if (!field.initial) {
         hasIntegration = false;
       }
     });
diff --git a/src/sentry/static/sentry/app/views/settings/project/projectFilters/index.jsx b/src/sentry/static/sentry/app/views/settings/project/projectFilters/index.jsx
index dcf58af85c..009597d8c2 100644
--- a/src/sentry/static/sentry/app/views/settings/project/projectFilters/index.jsx
+++ b/src/sentry/static/sentry/app/views/settings/project/projectFilters/index.jsx
@@ -57,7 +57,7 @@ class ProjectFilters extends React.Component {
             </NavTabs>
           )}
 
-          {filterType == 'discarded-groups' ? (
+          {filterType === 'discarded-groups' ? (
             <GroupTombstones orgId={orgId} projectId={projectId} />
           ) : (
             <ProjectFiltersSettings
diff --git a/src/sentry/static/sentry/app/views/settings/project/projectFilters/projectFiltersChart.jsx b/src/sentry/static/sentry/app/views/settings/project/projectFilters/projectFiltersChart.jsx
index ac7e09ffc6..75f0886cb8 100644
--- a/src/sentry/static/sentry/app/views/settings/project/projectFilters/projectFiltersChart.jsx
+++ b/src/sentry/static/sentry/app/views/settings/project/projectFilters/projectFiltersChart.jsx
@@ -191,7 +191,7 @@ const ProjectFiltersChart = createReactClass({
               barClasses={classes}
               className="standard-barchart filtered-stats-barchart"
               tooltip={this.renderTooltip}
-              minHeights={classes.map(p => (p == 'legacy-browsers' ? 1 : 0))}
+              minHeights={classes.map(p => (p === 'legacy-browsers' ? 1 : 0))}
             />
           )}
           {hasLoaded && this.state.blankStats && (
diff --git a/src/sentry/static/sentry/app/views/settings/project/projectOwnership/modal.jsx b/src/sentry/static/sentry/app/views/settings/project/projectOwnership/modal.jsx
index eda62ac096..93063214aa 100644
--- a/src/sentry/static/sentry/app/views/settings/project/projectOwnership/modal.jsx
+++ b/src/sentry/static/sentry/app/views/settings/project/projectOwnership/modal.jsx
@@ -46,9 +46,9 @@ class ProjectOwnershipModal extends AsyncComponent {
 
     // pull frame data out of exception or the stacktrace
     let frames =
-      eventData.entries.find(({type}) => type == 'exception')?.data?.values[0]?.stacktrace
-        ?.frames ||
-      eventData.entries.find(({type}) => type == 'stacktrace')?.data?.frames ||
+      eventData.entries.find(({type}) => type === 'exception')?.data?.values[0]
+        ?.stacktrace?.frames ||
+      eventData.entries.find(({type}) => type === 'stacktrace')?.data?.frames ||
       [];
 
     //filter frames by inApp unless there would be 0
diff --git a/src/sentry/static/sentry/app/views/settings/project/projectOwnership/ownerInput.jsx b/src/sentry/static/sentry/app/views/settings/project/projectOwnership/ownerInput.jsx
index f699f14d53..fbe6584b8e 100644
--- a/src/sentry/static/sentry/app/views/settings/project/projectOwnership/ownerInput.jsx
+++ b/src/sentry/static/sentry/app/views/settings/project/projectOwnership/ownerInput.jsx
@@ -34,7 +34,7 @@ class OwnerInput extends React.Component {
   }
 
   componentWillReceiveProps({initialText}) {
-    if (initialText != this.state.initialText) {
+    if (initialText !== this.state.initialText) {
       this.setState({initialText});
     }
   }
@@ -148,7 +148,7 @@ class OwnerInput extends React.Component {
         <div
           style={{position: 'relative'}}
           onKeyDown={e => {
-            if (e.metaKey && e.key == 'Enter') {
+            if (e.metaKey && e.key === 'Enter') {
               this.handleUpdateOwnership();
             }
           }}
