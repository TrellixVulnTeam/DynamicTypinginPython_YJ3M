commit 713a34f403ea64701ccca73f6dad996a2cb282f7
Author: Ben Vinegar <ben.vinegar@gmail.com>
Date:   Fri Feb 16 09:39:34 2018 -0800

    fix(ui): After team creation, redirect to team settings (#7264)
    
    * After team creation, redirect to team settings
    * Redirect to root team route
    * Add tests to satisfy codecov
    * Use window.location.assign

diff --git a/src/sentry/static/sentry/app/views/teamCreate.jsx b/src/sentry/static/sentry/app/views/teamCreate.jsx
index bc3755b2e9..f5f2ca1ddb 100644
--- a/src/sentry/static/sentry/app/views/teamCreate.jsx
+++ b/src/sentry/static/sentry/app/views/teamCreate.jsx
@@ -3,13 +3,26 @@ import React from 'react';
 import AsyncView from './asyncView';
 import NarrowLayout from '../components/narrowLayout';
 import {ApiForm, TextField} from '../components/forms';
+import SentryTypes from '../proptypes';
 import {t} from '../locale';
 
 export default class TeamCreate extends AsyncView {
+  static contextTypes = {
+    organization: SentryTypes.Organization,
+  };
+
   onSubmitSuccess = data => {
+    let features = new Set(this.context.organization.features);
+
     let {orgId} = this.props.params;
-    // redirect to project creation
-    window.location.href = `/organizations/${orgId}/projects/new/?team=${data.slug}`;
+
+    // Legacy behavior: redirect to project creation
+    let redirectUrl = `/organizations/${orgId}/projects/new/?team=${data.slug}`;
+    if (features.has('internal-catchall')) {
+      // New behavior: redirect to team settings page
+      redirectUrl = `/settings/organization/${orgId}/teams/${data.slug}/`;
+    }
+    window.location.assign(redirectUrl);
   };
 
   getTitle() {
diff --git a/tests/js/spec/views/teamCreate.spec.jsx b/tests/js/spec/views/teamCreate.spec.jsx
index 580b41721b..bdf4c32809 100644
--- a/tests/js/spec/views/teamCreate.spec.jsx
+++ b/tests/js/spec/views/teamCreate.spec.jsx
@@ -19,4 +19,54 @@ describe('TeamCreate', function() {
       expect(wrapper).toMatchSnapshot();
     });
   });
+
+  describe('onSubmitSuccess()', function() {
+    let wrapper;
+    let locationAssignMock;
+
+    beforeEach(function() {
+      wrapper = shallow(
+        <TeamCreate
+          params={{
+            orgId: 'org',
+          }}
+        />,
+        {
+          context: {
+            router: TestStubs.router(),
+            organization: {
+              id: '1337',
+            },
+          },
+        }
+      );
+      locationAssignMock = jest.fn();
+      window.location.assign = locationAssignMock;
+      wrapper.instance().redirect = locationAssignMock;
+    });
+
+    it('redirects to legacy team settings', function() {
+      wrapper.instance().onSubmitSuccess({
+        slug: 'new-team',
+      });
+      expect(locationAssignMock).toBeCalledWith(
+        '/organizations/org/projects/new/?team=new-team'
+      );
+    });
+
+    it('redirects to new team settings', function() {
+      wrapper.setContext({
+        organization: {
+          id: '1337',
+          features: ['internal-catchall'],
+        },
+      });
+      wrapper.instance().onSubmitSuccess({
+        slug: 'new-team',
+      });
+      expect(locationAssignMock).toBeCalledWith(
+        '/settings/organization/org/teams/new-team/'
+      );
+    });
+  });
 });
