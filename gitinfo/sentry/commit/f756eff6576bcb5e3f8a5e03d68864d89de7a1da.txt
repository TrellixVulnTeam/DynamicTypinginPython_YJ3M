commit f756eff6576bcb5e3f8a5e03d68864d89de7a1da
Author: Lyn Nagara <lyn.nagara@gmail.com>
Date:   Mon Oct 1 12:00:08 2018 -0700

    fix(discover): Add validation for saved query projects (#9931)
    
    Ensures that projects are part of the organization

diff --git a/src/sentry/api/bases/discoversavedquery.py b/src/sentry/api/bases/discoversavedquery.py
index 47a8434516..87b62d9f66 100644
--- a/src/sentry/api/bases/discoversavedquery.py
+++ b/src/sentry/api/bases/discoversavedquery.py
@@ -1,6 +1,8 @@
 from __future__ import absolute_import
 from rest_framework import serializers
 from sentry.api.serializers.rest_framework import ListField
+from rest_framework.exceptions import PermissionDenied
+from sentry.models import Project, ProjectStatus
 
 
 class DiscoverSavedQuerySerializer(serializers.Serializer):
@@ -39,6 +41,21 @@ class DiscoverSavedQuerySerializer(serializers.Serializer):
         allow_null=True,
     )
 
+    def validate_projects(self, attrs, source):
+        organization = self.context['organization']
+        projects = attrs[source]
+
+        org_projects = set(Project.objects.filter(
+            organization=organization,
+            id__in=projects,
+            status=ProjectStatus.VISIBLE,
+        ).values_list('id', flat=True))
+
+        if set(projects) != org_projects:
+            raise PermissionDenied
+
+        return attrs
+
     def validate(self, data):
         query = {}
         query_keys = [
diff --git a/src/sentry/api/endpoints/organization_discover_saved_queries.py b/src/sentry/api/endpoints/organization_discover_saved_queries.py
index 935228f697..f29779ab3e 100644
--- a/src/sentry/api/endpoints/organization_discover_saved_queries.py
+++ b/src/sentry/api/endpoints/organization_discover_saved_queries.py
@@ -1,12 +1,13 @@
 from __future__ import absolute_import
 
 from rest_framework.response import Response
-from sentry import features
-from sentry.models import DiscoverSavedQuery
+
 from sentry.api.serializers import serialize
 from sentry.api.bases.organization import OrganizationPermission
 from sentry.api.bases.discoversavedquery import DiscoverSavedQuerySerializer
 from sentry.api.bases import OrganizationEndpoint
+from sentry.models import DiscoverSavedQuery
+from sentry import features
 
 
 class OrganizationDiscoverSavedQueriesEndpoint(OrganizationEndpoint):
@@ -32,7 +33,9 @@ class OrganizationDiscoverSavedQueriesEndpoint(OrganizationEndpoint):
         if not features.has('organizations:discover', organization, actor=request.user):
             return self.respond(status=404)
 
-        serializer = DiscoverSavedQuerySerializer(data=request.DATA)
+        serializer = DiscoverSavedQuerySerializer(data=request.DATA, context={
+            'organization': organization,
+        })
 
         if not serializer.is_valid():
             return Response(serializer.errors, status=400)
diff --git a/src/sentry/api/endpoints/organization_discover_saved_query_detail.py b/src/sentry/api/endpoints/organization_discover_saved_query_detail.py
index 73ffd53633..7c6e1fca8c 100644
--- a/src/sentry/api/endpoints/organization_discover_saved_query_detail.py
+++ b/src/sentry/api/endpoints/organization_discover_saved_query_detail.py
@@ -39,7 +39,9 @@ class OrganizationDiscoverSavedQueryDetailEndpoint(OrganizationEndpoint):
         except DiscoverSavedQuery.DoesNotExist:
             raise ResourceDoesNotExist
 
-        serializer = DiscoverSavedQuerySerializer(data=request.DATA)
+        serializer = DiscoverSavedQuerySerializer(data=request.DATA, context={
+            'organization': organization,
+        })
 
         if not serializer.is_valid():
             return Response(serializer.errors, status=400)
diff --git a/tests/snuba/test_organization_discover_saved_queries.py b/tests/snuba/test_organization_discover_saved_queries.py
index cc811ea270..7d56598216 100644
--- a/tests/snuba/test_organization_discover_saved_queries.py
+++ b/tests/snuba/test_organization_discover_saved_queries.py
@@ -16,6 +16,9 @@ class OrganizationDiscoverSavedQueriesTest(APITestCase, SnubaTestCase):
             self.create_project(organization=self.org).id,
             self.create_project(organization=self.org).id
         ]
+        self.project_ids_without_access = [
+            self.create_project().id
+        ]
         query = {
             'fields': ['test'],
             'conditions': [],
@@ -60,3 +63,19 @@ class OrganizationDiscoverSavedQueriesTest(APITestCase, SnubaTestCase):
         assert response.data['range'] == '24h'
         assert not hasattr(response.data, 'start')
         assert not hasattr(response.data, 'end')
+
+    def test_post_invalid_projects(self):
+        with self.feature('organizations:discover'):
+            url = reverse('sentry-api-0-organization-discover-saved-queries', args=[self.org.slug])
+            response = self.client.post(url, {
+                'name': 'New query',
+                'projects': self.project_ids_without_access,
+                'fields': [],
+                'range': '24h',
+                'limit': 20,
+                'conditions': [],
+                'aggregations': [],
+                'orderby': '-time',
+            })
+
+        assert response.status_code == 403, response.content
