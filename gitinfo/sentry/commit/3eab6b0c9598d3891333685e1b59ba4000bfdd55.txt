commit 3eab6b0c9598d3891333685e1b59ba4000bfdd55
Author: Armin Ronacher <armin.ronacher@active-4.com>
Date:   Fri Nov 25 16:23:55 2016 +0100

    Adapted tests to status changes

diff --git a/src/sentry/api/serializers/models/group.py b/src/sentry/api/serializers/models/group.py
index 0593deaac9..a4f2642249 100644
--- a/src/sentry/api/serializers/models/group.py
+++ b/src/sentry/api/serializers/models/group.py
@@ -168,30 +168,28 @@ class GroupSerializer(Serializer):
         status = obj.status
         status_details = {}
 
-        if obj.on_hold:
-            status = GroupStatus.IGNORED
+        if attrs['ignore_duration']:
+            if attrs['ignore_duration'] < timezone.now() and status == GroupStatus.IGNORED:
+                status = GroupStatus.UNRESOLVED
+            else:
+                status_details['ignoreUntil'] = attrs['ignore_duration']
+        elif status == GroupStatus.UNRESOLVED and obj.is_over_resolve_age():
+            status = GroupStatus.RESOLVED
+            status_details['autoResolved'] = True
+        if status == GroupStatus.RESOLVED:
+            status_label = 'resolved'
+            if attrs['pending_resolution']:
+                status_details['inNextRelease'] = True
+        elif status == GroupStatus.IGNORED:
+            status_label = 'ignored'
+        elif status in [GroupStatus.PENDING_DELETION, GroupStatus.DELETION_IN_PROGRESS]:
+            status_label = 'pending_deletion'
+        elif status == GroupStatus.PENDING_MERGE:
+            status_label = 'pending_merge'
+        elif status == GroupStatus.ON_HOLD:
             status_label = 'on_hold'
         else:
-            if attrs['ignore_duration']:
-                if attrs['ignore_duration'] < timezone.now() and status == GroupStatus.IGNORED:
-                    status = GroupStatus.UNRESOLVED
-                else:
-                    status_details['ignoreUntil'] = attrs['ignore_duration']
-            elif status == GroupStatus.UNRESOLVED and obj.is_over_resolve_age():
-                status = GroupStatus.RESOLVED
-                status_details['autoResolved'] = True
-            if status == GroupStatus.RESOLVED:
-                status_label = 'resolved'
-                if attrs['pending_resolution']:
-                    status_details['inNextRelease'] = True
-            elif status == GroupStatus.IGNORED:
-                status_label = 'ignored'
-            elif status in [GroupStatus.PENDING_DELETION, GroupStatus.DELETION_IN_PROGRESS]:
-                status_label = 'pending_deletion'
-            elif status == GroupStatus.PENDING_MERGE:
-                status_label = 'pending_merge'
-            else:
-                status_label = 'unresolved'
+            status_label = 'unresolved'
 
         permalink = absolute_uri(reverse('sentry-group', args=[
             obj.organization.slug, obj.project.slug, obj.id]))
diff --git a/src/sentry/event_manager.py b/src/sentry/event_manager.py
index 9e3cca7f0b..45a057f364 100644
--- a/src/sentry/event_manager.py
+++ b/src/sentry/event_manager.py
@@ -404,7 +404,7 @@ class EventManager(object):
 
         data = self.data.copy()
 
-        on_hold = data.pop('on_hold')
+        on_hold = data.pop('on_hold', False)
 
         # First we pull out our top-level (non-data attr) kwargs
         event_id = data.pop('event_id')
diff --git a/src/sentry/models/group.py b/src/sentry/models/group.py
index 2459e32120..f400dd6e94 100644
--- a/src/sentry/models/group.py
+++ b/src/sentry/models/group.py
@@ -84,14 +84,6 @@ def get_group_with_redirect(id, queryset=None):
 class GroupManager(BaseManager):
     use_for_related_fields = True
 
-    def processed_only(self):
-        """Only returns events that are not on hold."""
-        return self.exclude(status=GroupStatus.ON_HOLD)
-
-    def on_hold_only(self):
-        """Only returns events that are on hold."""
-        return self.filter(status=GroupStatus.ON_HOLD)
-
     def by_qualified_short_id(self, org, short_id):
         match = _short_id_re.match(short_id.strip())
         if match is None:
diff --git a/src/sentry/search/django/backend.py b/src/sentry/search/django/backend.py
index e294e06343..27f38fc8da 100644
--- a/src/sentry/search/django/backend.py
+++ b/src/sentry/search/django/backend.py
@@ -83,9 +83,6 @@ class DjangoSearchBackend(SearchBackend):
 
         queryset = Group.objects.filter(project=project)
 
-        if not include_on_hold:
-            queryset = queryset.processed_only()
-
         if query:
             # TODO(dcramer): if we want to continue to support search on SQL
             # we should at least optimize this in Postgres so that it does
@@ -97,13 +94,14 @@ class DjangoSearchBackend(SearchBackend):
             )
 
         if status is None:
-            queryset = queryset.exclude(
-                status__in=(
-                    GroupStatus.PENDING_DELETION,
-                    GroupStatus.DELETION_IN_PROGRESS,
-                    GroupStatus.PENDING_MERGE,
-                )
+            status_in = (
+                GroupStatus.PENDING_DELETION,
+                GroupStatus.DELETION_IN_PROGRESS,
+                GroupStatus.PENDING_MERGE,
             )
+            if not include_on_hold:
+                status_in += (GroupStatus.ON_HOLD,)
+            queryset = queryset.exclude(status__in=status_in)
         else:
             queryset = queryset.filter(status=status)
 
diff --git a/tests/sentry/api/serializers/test_group.py b/tests/sentry/api/serializers/test_group.py
index 7afbb656df..5717bd42c1 100644
--- a/tests/sentry/api/serializers/test_group.py
+++ b/tests/sentry/api/serializers/test_group.py
@@ -50,8 +50,7 @@ class GroupSerializerTest(TestCase):
     def test_is_ignored_on_hold(self):
         user = self.create_user()
         group = self.create_group(
-            status=GroupStatus.RESOLVED,
-            on_hold=True,
+            status=GroupStatus.ON_HOLD,
         )
 
         result = serialize(group, user)
diff --git a/tests/sentry/models/test_group.py b/tests/sentry/models/test_group.py
index 163a4f2316..e30edd636a 100644
--- a/tests/sentry/models/test_group.py
+++ b/tests/sentry/models/test_group.py
@@ -37,15 +37,12 @@ class GroupTest(TestCase):
         assert group.is_resolved()
 
     def test_is_transient(self):
-        group = self.create_group(status=GroupStatus.RESOLVED,
-                                  on_hold=True)
-        assert group.on_hold is True
+        group = self.create_group(status=GroupStatus.ON_HOLD)
         assert group.is_transient()
         assert group.is_ignored()
-        assert group.get_status() == GroupStatus.IGNORED
+        assert group.get_status() == GroupStatus.ON_HOLD
 
         group = self.create_group(status=GroupStatus.RESOLVED)
-        assert group.on_hold is None
         assert not group.is_transient()
         assert not group.is_ignored()
         assert group.get_status() == GroupStatus.RESOLVED
