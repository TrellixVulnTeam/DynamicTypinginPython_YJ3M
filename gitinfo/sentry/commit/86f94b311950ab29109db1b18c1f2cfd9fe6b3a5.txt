commit 86f94b311950ab29109db1b18c1f2cfd9fe6b3a5
Author: Stephen Cefali <scefali@sentry.io>
Date:   Thu Mar 5 09:51:52 2020 -0800

    fix bug where heroku and sessionstack did not show up in integration directory (#17477)

diff --git a/src/sentry/plugins/base/manager.py b/src/sentry/plugins/base/manager.py
index 3349feab3e..1ac4d1fe83 100644
--- a/src/sentry/plugins/base/manager.py
+++ b/src/sentry/plugins/base/manager.py
@@ -24,7 +24,7 @@ class PluginManager(InstanceManager):
             yield plugin
 
     def plugin_that_can_be_configured(self):
-        for plugin in self.all():
+        for plugin in self.all(version=None):
             if plugin.has_project_conf():
                 yield plugin
 
diff --git a/tests/sentry/api/endpoints/test_organization_plugins_configs.py b/tests/sentry/api/endpoints/test_organization_plugins_configs.py
index 3d238a2c4e..bf0c719504 100644
--- a/tests/sentry/api/endpoints/test_organization_plugins_configs.py
+++ b/tests/sentry/api/endpoints/test_organization_plugins_configs.py
@@ -24,8 +24,35 @@ class OrganizationPluginsTest(APITestCase):
     def test_no_configs(self):
         response = self.client.get(self.url)
         assert response.status_code == 200, (response.status_code, response.content)
-        # the number of plugins might change so let's just make sure we have most of them
-        assert len(response.data) > 18
+        # test needs to be updated if plugins are removed
+        expected_plugins = [
+            "amazon-sqs",
+            "asana",
+            "bitbucket",
+            "clubhouse",
+            "github",
+            "gitlab",
+            "heroku",
+            "jira",
+            "opsgenie",
+            "pagerduty",
+            "phabricator",
+            "pivotal",
+            "pushover",
+            "redmine",
+            "segment",
+            "sessionstack",
+            "slack",
+            "splunk",
+            "teamwork",
+            "trello",
+            "twilio",
+            "victorops",
+            "vsts",
+            "webhooks",
+        ]
+        for plugin in expected_plugins:
+            assert filter(lambda x: x["slug"] == plugin, response.data)
 
     def test_only_configuable_plugins(self):
         response = self.client.get(self.url)
