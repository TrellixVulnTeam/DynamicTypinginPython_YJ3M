commit d4e35c6c9ed05f6893840df46ef153827079c993
Author: Ted Kaemming <ted@kaemming.com>
Date:   Tue Sep 29 13:56:59 2015 -0700

    Don't masquerade as a Notification instance.

diff --git a/src/sentry/digests/notifications.py b/src/sentry/digests/notifications.py
index e54e89ba62..3fdc45b268 100644
--- a/src/sentry/digests/notifications.py
+++ b/src/sentry/digests/notifications.py
@@ -75,37 +75,11 @@ filter_muted_groups = functools.partial(
 )
 
 
-class NotificationDigest(object):
-    def __init__(self, groups):
-        self.groups = groups
-
-    # XXX: There is a large chance these alises are a terrible idea, it is
-    # probably a better idea for notification plugins to explicitly opt-in to
-    # digest support instead of masking it like this.
-
-    @property
-    def event(self):
-        # TODO: Probably warn about this.
-        return self.groups.values()[0][0].value.event
-
-    @property
-    def rule(self):
-        # TODO: Probably warn about this.
-        return self.groups.values()[0][0].value.rules[0]
-
-    @property
-    def rules(self):
-        # TODO: Probably warn about this.
-        return self.groups.values()[0][0].value.rules
-
-
 def build_digest(project, records):
-    return NotificationDigest(
-        OrderedDict(
-            sorted(
-                filter_muted_groups(associate_with_instance(project, group(records))),
-                key=lambda (group, records): (len(records), max(record.timestamp for record in records)),
-                reverse=True,
-            ),
-        )
+    return OrderedDict(
+        sorted(
+            filter_muted_groups(associate_with_instance(project, group(records))),
+            key=lambda (group, records): (len(records), max(record.timestamp for record in records)),
+            reverse=True,
+        ),
     )
diff --git a/src/sentry/plugins/bases/notify.py b/src/sentry/plugins/bases/notify.py
index 7f32c5cc14..04fc6c27f8 100644
--- a/src/sentry/plugins/bases/notify.py
+++ b/src/sentry/plugins/bases/notify.py
@@ -62,7 +62,8 @@ class NotificationPlugin(Plugin):
                 continue
             raise NotImplementedError('The default behavior for notification de-duplication does not support args')
 
-        if features.has('projects:digests', event.group.project):
+        # TODO: Encapsulate this better, maybe make it an option on the plugin?
+        if features.has('projects:digests', event.group.project) and hasattr(self, 'notify_digest'):
             digests.add(
                 unsplit_key(self, event.group.project),
                 event_to_record(event, rules),
diff --git a/src/sentry/plugins/sentry_mail/models.py b/src/sentry/plugins/sentry_mail/models.py
index 8ff658f1f1..82984d19bc 100644
--- a/src/sentry/plugins/sentry_mail/models.py
+++ b/src/sentry/plugins/sentry_mail/models.py
@@ -193,6 +193,9 @@ class MailPlugin(NotificationPlugin):
             context=context,
         )
 
+    def notify_digest(self, digest):
+        raise NotImplementedError
+
 
 # Legacy compatibility
 MailProcessor = MailPlugin
diff --git a/src/sentry/tasks/digests.py b/src/sentry/tasks/digests.py
index 8e8afe72c8..0eb5028963 100644
--- a/src/sentry/tasks/digests.py
+++ b/src/sentry/tasks/digests.py
@@ -38,5 +38,4 @@ def deliver_digest(key):
     with digests.digest(key) as records:
         digest = build_digest(project, records)
 
-    # XXX: This won't actually work right now.
-    plugin.notify(digest)
+    plugin.notify_digest(digest)
