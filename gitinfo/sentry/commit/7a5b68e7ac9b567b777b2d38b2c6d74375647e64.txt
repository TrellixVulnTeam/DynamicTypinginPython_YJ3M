commit 7a5b68e7ac9b567b777b2d38b2c6d74375647e64
Author: David Cramer <dcramer@gmail.com>
Date:   Tue Nov 5 20:58:50 2013 -0800

    More doc cleanup

diff --git a/docs/buffer/index.rst b/docs/buffer/index.rst
index 05d03624b4..62390f952c 100644
--- a/docs/buffer/index.rst
+++ b/docs/buffer/index.rst
@@ -1,5 +1,5 @@
-Utilizing Update Buffers
-========================
+Update Buffers
+==============
 
 Sentry provides the ability to buffer certain updates to events, such as counts and timestamps. This is
 extremely helpful if you have high concurrency, especially if they're frequently the same event.
diff --git a/docs/queue/index.rst b/docs/queue/index.rst
index d60445e53f..3fb2d82316 100644
--- a/docs/queue/index.rst
+++ b/docs/queue/index.rst
@@ -1,5 +1,5 @@
-Utilizing the Queue
-===================
+Queuing Work
+============
 
 Sentry comes with a built-in queue to process tasks in a more asynchronous
 fashion. For example, with workers enabled, when an event comes in instead
@@ -19,13 +19,15 @@ which is the worker manager process of the Celery library.
 
     sentry celery worker -B
 
-.. note:: You will need to run both celery workers and celerybeat.
+.. note:: You will need to run both celery workers and celerybeat. In our example, the -B flag runs a beat instance.
 
 Enable the Queue
 ----------------
 
 Once you've brought up a worker, the next step is to enable the queue. This is
-done with a simple settings flag::
+done with a simple settings flag:
+
+::
 
     CELERY_ALWAYS_EAGER = False
 
@@ -34,6 +36,8 @@ rely on the database, and move to something more efficient. These are documented
 details as part of the `Celery documentation <http://celeryproject.org/>`_, but something simple
 like Redis will do just fine.
 
-An example configuration using a local Redis server might look like this::
+An example configuration using a local Redis server might look like this:
+
+::
 
     BROKER_URL = "redis://localhost:6379/0"
