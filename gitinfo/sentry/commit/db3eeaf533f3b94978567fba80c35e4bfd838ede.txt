commit db3eeaf533f3b94978567fba80c35e4bfd838ede
Author: Jess MacQueen <macqueen@users.noreply.github.com>
Date:   Wed Sep 28 11:07:54 2016 -0700

    various updates/fixes to plugins to make customization easier (#4197)
    
    * various updates/fixes to plugins to make customization easier
    
    * fix tests
    
    * have IssueActions use GenericField
    
    * allow urls w query params to be used as base URL for select2 autocomplete component
    
    * make webhook urls not required

diff --git a/src/sentry/api/serializers/models/plugin.py b/src/sentry/api/serializers/models/plugin.py
index 243689691b..6defd14083 100644
--- a/src/sentry/api/serializers/models/plugin.py
+++ b/src/sentry/api/serializers/models/plugin.py
@@ -51,7 +51,7 @@ def serialize_field(project, plugin, field):
         'name': six.text_type(field['name']),
         'label': six.text_type(field.get('label') or field['name'].title().replace('_', ' ')),
         'type': field.get('type', 'text'),
-        'required': field.get('required', False),
+        'required': field.get('required', True),
         'help': six.text_type(field['help']) if field.get('help') else None,
         'placeholder': six.text_type(field['placeholder']) if field.get('placeholder') else None,
         'choices': field.get('choices'),
diff --git a/src/sentry/plugins/sentry_webhooks/plugin.py b/src/sentry/plugins/sentry_webhooks/plugin.py
index f05ffc0854..3bfac698fc 100644
--- a/src/sentry/plugins/sentry_webhooks/plugin.py
+++ b/src/sentry/plugins/sentry_webhooks/plugin.py
@@ -71,6 +71,7 @@ class WebHooksPlugin(notify.NotificationPlugin):
             'help': 'Enter callback URLs to POST new events to (one per line).',
             'placeholder': 'https://sentry.io/callback/url',
             'validators': [validate_urls],
+            'required': False
         }]
 
     def get_group_data(self, group, event):
diff --git a/src/sentry/static/sentry/app/components/forms/form.jsx b/src/sentry/static/sentry/app/components/forms/form.jsx
index d1148217b0..6e4b4af7a5 100644
--- a/src/sentry/static/sentry/app/components/forms/form.jsx
+++ b/src/sentry/static/sentry/app/components/forms/form.jsx
@@ -7,7 +7,8 @@ const Form = React.createClass({
     onSubmit: React.PropTypes.func.isRequired,
     submitDisabled: React.PropTypes.bool,
     submitLabel: React.PropTypes.string.isRequired,
-    footerClass: React.PropTypes.string
+    footerClass: React.PropTypes.string,
+    extraButton: React.PropTypes.element
   },
 
   getDefaultProps() {
@@ -31,6 +32,7 @@ const Form = React.createClass({
           <button className="btn btn-primary"
                   disabled={this.props.submitDisabled}
                   type="submit">{this.props.submitLabel}</button>
+          {this.props.extraButton}
         </div>
       </form>
     );
diff --git a/src/sentry/static/sentry/app/components/forms/genericField.jsx b/src/sentry/static/sentry/app/components/forms/genericField.jsx
index 87b49132e5..a460dee92d 100644
--- a/src/sentry/static/sentry/app/components/forms/genericField.jsx
+++ b/src/sentry/static/sentry/app/components/forms/genericField.jsx
@@ -23,7 +23,7 @@ class GenericField extends React.Component {
       placeholder: config.placeholder,
       required: required,
       name: config.name,
-      error: this.props.formErrors[config.name],
+      error: (this.props.formErrors || {})[config.name],
       disabled: config.readonly,
       key: config.name,
       help: (
diff --git a/src/sentry/static/sentry/app/components/forms/select2FieldAutocomplete.jsx b/src/sentry/static/sentry/app/components/forms/select2FieldAutocomplete.jsx
index 192a6db6f4..08448d8cbc 100644
--- a/src/sentry/static/sentry/app/components/forms/select2FieldAutocomplete.jsx
+++ b/src/sentry/static/sentry/app/components/forms/select2FieldAutocomplete.jsx
@@ -9,13 +9,14 @@ export default class Select2FieldAutocomplete extends InputField {
   componentDidMount() {
     let $el = $('input', ReactDOM.findDOMNode(this));
     $el.on('change.autocomplete', this.onChange.bind(this));
-    let url = this.props.url + '?autocomplete_field=' + this.props.name;
+    let separator = this.props.url.includes('?') ? '&' : '?';
+    let url = this.props.url + separator + 'autocomplete_field=' + this.props.name;
 
     // TODO(jess): upgrade select2 so we can just do
     // dropdownParent: $('.modal-dialog') as a supported option
     $('.modal').removeAttr('tabindex');
     $el.select2({
-      placeholder: 'Start typing to search for an issue',
+      placeholder: this.props.placeholder || 'Start typing to search for an issue',
       minimumInputLength: 1,
       ajax: {
         quietMillis: 100,
diff --git a/src/sentry/static/sentry/app/index.js b/src/sentry/static/sentry/app/index.js
index fc84d816c9..8482eddb8a 100644
--- a/src/sentry/static/sentry/app/index.js
+++ b/src/sentry/static/sentry/app/index.js
@@ -51,7 +51,8 @@ export default {
     routes: require('./routes'),
     plugins: {
       add: plugins.add,
-      BasePlugin: plugins.BasePlugin
+      BasePlugin: plugins.BasePlugin,
+      DefaultIssuePlugin: plugins.DefaultIssuePlugin
     },
 
     createHistory: require('history/lib/createBrowserHistory'),
@@ -68,6 +69,8 @@ export default {
     DateTime: require('./components/dateTime'),
     DropdownLink: require('./components/dropdownLink'),
     FlotChart: require('./components/flotChart'),
+    Form: require('./components/forms/form'),
+    FormState: require('./components/forms/index').FormState,
     HookStore: require('./stores/hookStore'),
     Indicators: require('./components/indicators'),
     IndicatorStore: require('./stores/indicatorStore'),
diff --git a/src/sentry/static/sentry/app/plugins/components/issueActions.jsx b/src/sentry/static/sentry/app/plugins/components/issueActions.jsx
index bc74e0a29a..35cf432207 100644
--- a/src/sentry/static/sentry/app/plugins/components/issueActions.jsx
+++ b/src/sentry/static/sentry/app/plugins/components/issueActions.jsx
@@ -2,18 +2,13 @@ import React from 'react';
 
 import {
   Form,
-  FormState,
-  Select2Field,
-  Select2FieldAutocomplete,
-  TextareaField,
-  TextField
+  FormState
 } from '../../components/forms';
 import GroupActions from '../../actions/groupActions';
 import LoadingError from '../../components/loadingError';
 import LoadingIndicator from '../../components/loadingIndicator';
 import PluginComponentBase from '../../components/bases/pluginComponentBase';
 import {t} from '../../locale';
-import {defined} from '../../utils';
 
 class IssueActions extends PluginComponentBase {
   constructor(props) {
@@ -175,40 +170,6 @@ class IssueActions extends PluginComponentBase {
     this.setState(state);
   }
 
-  renderField(action, field) {
-    let el;
-    let required = defined(field.required) ? field.required : true;
-    let props = {
-      value: this.state[action + 'FormData'][field.name],
-      onChange: this.changeField.bind(this, action, field.name),
-      label: field.label + (required ? '*' : ''),
-      name: field.name,
-      disabled: field.readonly,
-      help: <span dangerouslySetInnerHTML={{__html: field.help}}/>
-    };
-    switch (field.type) {
-      case 'text':
-        el = <TextField {...props} />;
-        break;
-      case 'textarea':
-        el = <TextareaField {...props} />;
-        break;
-      case 'select':
-        if (field.has_autocomplete) {
-          props.url = ('/api/0/issues/' + this.getGroup().id +
-                       '/plugins/' + this.props.plugin.slug + '/autocomplete');
-          el = <Select2FieldAutocomplete {...props} />;
-        } else {
-          props.choices = field.choices;
-          el = <Select2Field {...props} />;
-        }
-        break;
-      default:
-        el = null;
-    }
-    return el;
-  }
-
   renderForm() {
     let form;
     switch (this.props.actionType) {
@@ -218,7 +179,21 @@ class IssueActions extends PluginComponentBase {
             <Form onSubmit={this.createIssue} submitLabel={t('Create Issue')}
                   footerClass="">
               {this.state.createFieldList.map((field) => {
-                return <div key={field.name}>{this.renderField('create', field)}</div>;
+                if (field.has_autocomplete) {
+                  field = Object.assign({
+                    url: ('/api/0/issues/' + this.getGroup().id +
+                          '/plugins/' + this.props.plugin.slug + '/autocomplete')
+                  }, field);
+                }
+                return (
+                  <div key={field.name}>
+                    {this.renderField({
+                      config: field,
+                      formData: this.state.createFormData,
+                      onChange: this.changeField.bind(this, 'create', field.name)
+                    })}
+                  </div>
+                );
               })}
             </Form>
           );
@@ -230,7 +205,21 @@ class IssueActions extends PluginComponentBase {
             <Form onSubmit={this.linkIssue} submitLabel={t('Link Issue')}
                   footerClass="">
               {this.state.linkFieldList.map((field) => {
-                return <div key={field.name}>{this.renderField('link', field)}</div>;
+                if (field.has_autocomplete) {
+                  field = Object.assign({
+                    url: ('/api/0/issues/' + this.getGroup().id +
+                          '/plugins/' + this.props.plugin.slug + '/autocomplete')
+                  }, field);
+                }
+                return (
+                  <div key={field.name}>
+                    {this.renderField({
+                      config: field,
+                      formData: this.state.linkFormData,
+                      onChange: this.changeField.bind(this, 'link', field.name)
+                    })}
+                  </div>
+                );
               })}
             </Form>
           );
diff --git a/src/sentry/static/sentry/app/plugins/defaultIssuePlugin.jsx b/src/sentry/static/sentry/app/plugins/defaultIssuePlugin.jsx
index 805240682c..f74c0f1ce7 100644
--- a/src/sentry/static/sentry/app/plugins/defaultIssuePlugin.jsx
+++ b/src/sentry/static/sentry/app/plugins/defaultIssuePlugin.jsx
@@ -10,4 +10,6 @@ export class DefaultIssuePlugin extends BasePlugin {
     }
 }
 
+DefaultIssuePlugin.DefaultIssueActions = IssueActions;
+
 export default DefaultIssuePlugin;
diff --git a/src/sentry/static/sentry/app/plugins/index.jsx b/src/sentry/static/sentry/app/plugins/index.jsx
index 673517d448..67763dabb0 100644
--- a/src/sentry/static/sentry/app/plugins/index.jsx
+++ b/src/sentry/static/sentry/app/plugins/index.jsx
@@ -1,12 +1,14 @@
 import Registry from './registry';
 import BasePlugin from './basePlugin';
+import DefaultIssuePlugin from './defaultIssuePlugin';
 
 const registry = new Registry();
 
-export {BasePlugin, registry};
+export {BasePlugin, registry, DefaultIssuePlugin};
 
 export default {
     BasePlugin: BasePlugin,
+    DefaultIssuePlugin: DefaultIssuePlugin,
 
     add: registry.add.bind(registry),
     get: registry.get.bind(registry),
