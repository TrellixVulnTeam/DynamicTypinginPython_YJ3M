commit f22bb1f5d54e49a42a63ead99b5fb81b45e38cec
Author: David Cramer <dcramer@gmail.com>
Date:   Tue Nov 14 13:32:55 2017 -0800

    fix(ui): Improve handling of errors in Form components
    
    - Cache error in addition to value
    - Use getValue helper for value computation

diff --git a/src/sentry/static/sentry/app/components/forms/booleanField.jsx b/src/sentry/static/sentry/app/components/forms/booleanField.jsx
index eba0da4d11..c819375609 100644
--- a/src/sentry/static/sentry/app/components/forms/booleanField.jsx
+++ b/src/sentry/static/sentry/app/components/forms/booleanField.jsx
@@ -28,7 +28,7 @@ export default class BooleanField extends InputField {
   }
 
   render() {
-    let error = this.getError();
+    let {error} = this.state;
     let className = this.getClassName();
     if (error) {
       className += ' has-error';
diff --git a/src/sentry/static/sentry/app/components/forms/form.jsx b/src/sentry/static/sentry/app/components/forms/form.jsx
index 7edcff7496..fd0a28dd32 100644
--- a/src/sentry/static/sentry/app/components/forms/form.jsx
+++ b/src/sentry/static/sentry/app/components/forms/form.jsx
@@ -98,12 +98,26 @@ export default class Form extends React.Component {
     let hasChanges = requireChanges
       ? Object.keys(data).length && !_.isEqual(data, initialData)
       : true;
+    let isError = this.state.state == FormState.ERROR;
     return (
       <form onSubmit={this.onSubmit} className={this.props.className}>
-        {this.state.state === FormState.ERROR && (
+        {isError && (
           <div className="alert alert-error alert-block">
-            {t(
-              'Unable to save your changes. Please ensure all fields are valid and try again.'
+            {this.state.errors.non_field_errors ? (
+              <div>
+                <p>
+                  {t(
+                    'Unable to save your changes. Please correct the following errors try again.'
+                  )}
+                </p>
+                <ul>
+                  {this.state.errors.non_field_errors.map((e, i) => <li key={i}>{e}</li>)}
+                </ul>
+              </div>
+            ) : (
+              t(
+                'Unable to save your changes. Please ensure all fields are valid and try again.'
+              )
             )}
           </div>
         )}
diff --git a/src/sentry/static/sentry/app/components/forms/formField.jsx b/src/sentry/static/sentry/app/components/forms/formField.jsx
index 3eeb2e927e..61fcd41fd4 100644
--- a/src/sentry/static/sentry/app/components/forms/formField.jsx
+++ b/src/sentry/static/sentry/app/components/forms/formField.jsx
@@ -38,6 +38,7 @@ export default class FormField extends React.PureComponent {
   constructor(props, context) {
     super(props, context);
     this.state = {
+      error: null,
       value: this.getValue(props, context),
     };
   }
@@ -45,11 +46,13 @@ export default class FormField extends React.PureComponent {
   componentDidMount() {}
 
   componentWillReceiveProps(nextProps, nextContext) {
-    if (
-      this.props.value !== nextProps.value ||
-      (!defined(this.context.form) && defined(nextContext.form))
-    ) {
-      this.setValue(this.getValue(nextProps, nextContext));
+    let newError = this.getError(nextProps, nextContext);
+    let newValue = this.getValue(nextProps, nextContext);
+    if (newError != this.state.error) {
+      this.setState({error: newError});
+    }
+    if (newValue !== this.state.value) {
+      this.setValue(newValue);
     }
   }
 
@@ -117,7 +120,7 @@ export default class FormField extends React.PureComponent {
       help,
       style,
     } = this.props;
-    let error = this.getError();
+    let {error} = this.state;
     let cx = classNames(className, this.getClassName(), {
       'has-error': !!error,
       required,
diff --git a/src/sentry/static/sentry/app/components/forms/multipleCheckboxField.jsx b/src/sentry/static/sentry/app/components/forms/multipleCheckboxField.jsx
index d1e91da89d..22b2fa308d 100644
--- a/src/sentry/static/sentry/app/components/forms/multipleCheckboxField.jsx
+++ b/src/sentry/static/sentry/app/components/forms/multipleCheckboxField.jsx
@@ -61,7 +61,7 @@ export default class MultipleCheckboxField extends FormField {
       hideLabelDivider,
       style,
     } = this.props;
-    let error = this.getError();
+    let {error} = this.state;
     let cx = classNames(className, 'control-group', {
       'has-error': error,
     });
