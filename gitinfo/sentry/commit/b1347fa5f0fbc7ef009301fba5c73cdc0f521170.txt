commit b1347fa5f0fbc7ef009301fba5c73cdc0f521170
Author: Ted Kaemming <ted@kaemming.com>
Date:   Mon Mar 21 18:45:17 2016 -0700

    Improve coverage.

diff --git a/src/sentry/api/endpoints/organization_stats.py b/src/sentry/api/endpoints/organization_stats.py
index 9ec4643a39..18741f000b 100644
--- a/src/sentry/api/endpoints/organization_stats.py
+++ b/src/sentry/api/endpoints/organization_stats.py
@@ -67,7 +67,7 @@ class OrganizationStatsEndpoint(OrganizationEndpoint, StatsMixin):
         else:
             raise ValueError('Invalid group: %s' % group)
 
-        if request.GET.getlist('id'):
+        if 'id' in request.GET:
             id_filter_set = frozenset(map(int, request.GET.getlist('id')))
             keys = [k for k in keys if k in id_filter_set]
 
diff --git a/tests/sentry/api/endpoints/test_organization_stats.py b/tests/sentry/api/endpoints/test_organization_stats.py
index a8480c2171..7ad9f5abfd 100644
--- a/tests/sentry/api/endpoints/test_organization_stats.py
+++ b/tests/sentry/api/endpoints/test_organization_stats.py
@@ -1,5 +1,7 @@
 from __future__ import absolute_import
 
+import functools
+import sys
 from django.core.urlresolvers import reverse
 
 from sentry.app import tsdb
@@ -22,3 +24,33 @@ class OrganizationStatsTest(APITestCase):
         for point in response.data[:-1]:
             assert point[1] == 0
         assert len(response.data) == 24
+
+    def test_id_filtering(self):
+        self.login_as(user=self.user)
+
+        org = self.create_organization(owner=self.user, name='baz')
+        project = self.create_project(
+            slug='example',
+            team=self.create_team(organization=org),
+        )
+
+        make_request = functools.partial(
+            self.client.get,
+            reverse('sentry-api-0-organization-stats', args=[org.slug]),
+            format='json'
+        )
+
+        response = make_request({
+            'id': [project.id],
+            'group': 'project',
+        })
+
+        assert response.status_code == 200, response.content
+        assert project.id in response.data
+
+        response = make_request({
+            'id': [sys.maxint],
+            'group': 'project',
+        })
+
+        assert project.id not in response.data
