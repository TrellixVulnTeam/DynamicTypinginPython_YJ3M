commit d180b151b0d30dd7ade1a8d809d9b5eddbd32479
Author: Ben Vinegar <ben@benv.ca>
Date:   Wed Nov 11 14:36:26 2015 -0500

    Render ContextData url values w/ external link icons

diff --git a/src/sentry/static/sentry/app/components/contextData.jsx b/src/sentry/static/sentry/app/components/contextData.jsx
index 1dfd8163ea..50ee825df9 100644
--- a/src/sentry/static/sentry/app/components/contextData.jsx
+++ b/src/sentry/static/sentry/app/components/contextData.jsx
@@ -1,5 +1,6 @@
 import React from 'react';
 import jQuery from 'jquery';
+import {isUrl} from '../utils';
 
 function looksLikeObjectRepr(value) {
   let a = value[0];
@@ -108,13 +109,22 @@ const ContextData = React.createClass({
         return <span className="val-bool">{value ? 'True' : 'False'}</span>;
       } else if (typeof value === 'string' || value instanceof String) {
         let valueInfo = analyzeStringForRepr(value);
-        return (
-          <span className={
+
+        let out = [<span className={
             (valueInfo.isString ? 'val-string' : 'val-repr') +
             (valueInfo.isStripped ? ' val-stripped' : '') +
             (valueInfo.isMultiLine ? ' val-string-multiline' : '')}>{
-              valueInfo.repr}</span>
-        );
+              valueInfo.repr}</span>];
+
+        if (valueInfo.isString && isUrl(value)) {
+          out.push(
+            <a href={value} className="external-icon">
+              <em className="icon-open" />
+            </a>
+          );
+        }
+
+        return out;
       } else if (typeof value === 'number' || value instanceof Number) {
         return <span className="val-number">{value}</span>;
       } else if (value instanceof Array) {
@@ -191,4 +201,4 @@ const ContextData = React.createClass({
   }
 });
 
-export default ContextData;
+export default ContextData;
\ No newline at end of file
diff --git a/tests/js/spec/components/contextData.spec.jsx b/tests/js/spec/components/contextData.spec.jsx
new file mode 100644
index 0000000000..3c3aec0ccc
--- /dev/null
+++ b/tests/js/spec/components/contextData.spec.jsx
@@ -0,0 +1,24 @@
+import React from 'react';
+import ReactDOM from 'react-dom';
+import TestUtils from 'react-addons-test-utils';
+
+import ContextData from 'app/components/contextData';
+
+describe('ContextData', function() {
+
+  describe('render()', function() {
+    describe('strings', function () {
+      it('should render urls w/ an additional <a> link', function () {
+        const URL = 'https://example.org/foo/bar/';
+        let ctxData = TestUtils.renderIntoDocument(<ContextData data={URL}/>);
+
+        let node = ReactDOM.findDOMNode(ctxData);
+
+        expect(node.getElementsByTagName('span')[0]).to.have.property('textContent', URL);
+        expect(node.getElementsByTagName('a')[0]).to.have.property('href', URL);
+      });
+    });
+  });
+
+});
+
