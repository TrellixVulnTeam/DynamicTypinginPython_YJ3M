commit 6841655660909ea78eb51f742668292295e47a8f
Author: Ben Vinegar <ben@benv.ca>
Date:   Mon Feb 15 14:58:40 2016 -0800

    Bundle moment + sentry locale files into individual bundles

diff --git a/src/sentry/static/sentry/app/translations.jsx b/src/sentry/static/sentry/app/translations.jsx
index 7b78554b9c..c1820286a1 100644
--- a/src/sentry/static/sentry/app/translations.jsx
+++ b/src/sentry/static/sentry/app/translations.jsx
@@ -1,17 +1,14 @@
-export const translations = (function() {
-  let ctx = require.context('../../../locale/', true, /\.po$/);
-  let rv = {};
-  ctx.keys().forEach((translation) => {
-    let langCode = translation.match(/([a-zA-Z_]+)/)[1];
-    rv[langCode] = ctx(translation);
-  });
-  return rv;
-})();
-
 export function getTranslations(language) {
-  return translations[language] || translations.en;
+  return language === 'en'
+    ? {'':{domain:'sentry'}}
+    : require('sentry-locale/' + language + '/LC_MESSAGES/django.po');
 }
 
 export function translationsExist(language) {
-  return translations[language] !== undefined;
+  try {
+    require('sentry-locale/' + language + '/LC_MESSAGES/django.po');
+  } catch (e) {
+    return false;
+  }
+  return true;
 }
diff --git a/src/sentry/templatetags/sentry_assets.py b/src/sentry/templatetags/sentry_assets.py
index cd851362b1..c16e45b187 100644
--- a/src/sentry/templatetags/sentry_assets.py
+++ b/src/sentry/templatetags/sentry_assets.py
@@ -56,5 +56,5 @@ def locale_js_include(context):
     if lang_code == 'en' or lang_code not in settings.SUPPORTED_LANGUAGES:
         return ''
 
-    href = get_asset_url("sentry", "dist/moment/locale/" + lang_code + ".js")
+    href = get_asset_url("sentry", "dist/locale/" + lang_code + ".js")
     return "<script src=\"{0}\"{1}></script>".format(href, crossorigin())
diff --git a/webpack.config.js b/webpack.config.js
index e0dd730eca..98d784de23 100644
--- a/webpack.config.js
+++ b/webpack.config.js
@@ -72,16 +72,22 @@ var entry = {
 // dynamically iterate over locale files and add to `entry` config
 var localeCatalogPath = path.join('src', 'sentry', 'locale', 'catalogs.json');
 var localeCatalog = JSON.parse(fs.readFileSync(localeCatalogPath, 'utf8'));
+var localeEntries = [];
 
 localeCatalog.supported_locales.forEach(function (locale) {
   if (locale === 'en')
     return;
 
   // Django locale names are "zh_CN", moment's are "zh-cn"
-  var module = 'moment/locale/' + locale.toLowerCase().replace('_', '-');
-  entry[module] = [module];
+  var normalizedLocale = locale.toLowerCase().replace('_', '-');
+  entry['locale/' + normalizedLocale] = [
+    'moment/locale/' + normalizedLocale,
+    'sentry-locale/' + normalizedLocale + '/LC_MESSAGES/django.po' // relative to static/sentry
+  ];
+  localeEntries.push('locale/' + normalizedLocale);
 });
 
+
 var config = {
   entry: entry,
   context: path.join(__dirname, staticPrefix),
@@ -118,7 +124,9 @@ var config = {
     ]
   },
   plugins: [
-    new webpack.optimize.CommonsChunkPlugin('vendor', 'vendor.js'),
+    new webpack.optimize.CommonsChunkPlugin({
+      names: localeEntries.concat(['vendor']) // 'vendor' must be last entry
+    }),
     new webpack.optimize.DedupePlugin(),
     new webpack.ProvidePlugin({
       $: 'jquery',
@@ -133,7 +141,7 @@ var config = {
     // restrict translation files pulled into dist/app.js to only those specified
     // in locale/catalogs.json
     new webpack.ContextReplacementPlugin(
-      /\.\.\/\.\.\/\.\.\/locale\/$/,
+      /locale$/,
       path.join(__dirname, 'src', 'sentry', 'locale', path.sep),
       true,
       new RegExp('(' + localeCatalog.supported_locales.join('|') + ')\/.*\\.po$')
@@ -142,7 +150,8 @@ var config = {
   resolve: {
     alias: {
       'flot': path.join(__dirname, staticPrefix, 'vendor', 'jquery-flot'),
-      'flot-tooltip': path.join(__dirname, staticPrefix, 'vendor', 'jquery-flot-tooltip')
+      'flot-tooltip': path.join(__dirname, staticPrefix, 'vendor', 'jquery-flot-tooltip'),
+      'sentry-locale': path.join(__dirname, 'src', 'sentry', 'locale')
     },
     modulesDirectories: [path.join(__dirname, staticPrefix), 'node_modules'],
     extensions: ['', '.jsx', '.js', '.json']
