commit 50fa4dec39945759fd3f307b3de4fb1d88c9d3d6
Author: Ben Vinegar <ben@benv.ca>
Date:   Mon Mar 28 18:40:53 2016 -0700

    Implement dt for breadcrumbs

diff --git a/src/sentry/static/sentry/app/components/events/interfaces/breadcrumbs.jsx b/src/sentry/static/sentry/app/components/events/interfaces/breadcrumbs.jsx
index 6943bddbec..bd71976a7a 100644
--- a/src/sentry/static/sentry/app/components/events/interfaces/breadcrumbs.jsx
+++ b/src/sentry/static/sentry/app/components/events/interfaces/breadcrumbs.jsx
@@ -1,4 +1,6 @@
 import React from 'react';
+import moment from 'moment';
+
 import GroupEventDataSection from '../eventDataSection';
 import PropTypes from '../../../proptypes';
 
@@ -110,17 +112,27 @@ const BreadcrumbsInterface = React.createClass({
       // make copy of values array / don't mutate props
       all = all.slice(0).concat([{
         type: 'error',
-        dt: 0,
-        data: exception.data.values[0]
+        data: exception.data.values[0],
+        timestamp: evt.dateCreated
       }]);
     }
 
+    // cap max number of breadcrumbs to show
     let crumbs = all;
     const MAX = BreadcrumbsInterface.MAX_CRUMBS_WHEN_COLLAPSED;
     if (this.state.collapsed && crumbs.length > MAX) {
       crumbs = all.slice(-MAX);
     }
 
+    // calculate dt
+    let errorDatetime = moment(evt.dateCreated);
+    crumbs = crumbs.map(crumb => {
+      return {
+        ...crumb,
+        dt: moment.duration(moment(crumb.timestamp).diff(errorDatetime))
+      };
+    });
+
     let numCollapsed = all.length - crumbs.length;
 
     return (
diff --git a/src/sentry/utils/samples.py b/src/sentry/utils/samples.py
index 85765f2ced..b12b32400a 100644
--- a/src/sentry/utils/samples.py
+++ b/src/sentry/utils/samples.py
@@ -8,11 +8,20 @@ sentry.utils.samples
 from __future__ import absolute_import
 
 import os.path
+from datetime import datetime, timedelta
 
 from sentry.constants import DATA_ROOT
 from sentry.event_manager import EventManager
 from sentry.utils import json
 
+epoch = datetime.utcfromtimestamp(0)
+now = datetime.now()
+
+
+def milliseconds_ago(milliseconds):
+    ago = (now - timedelta(milliseconds=milliseconds))
+    return (ago - epoch).total_seconds()
+
 
 def load_data(platform, default=None):
     data = None
@@ -71,12 +80,13 @@ def load_data(platform, default=None):
         "data": '{"hello": "world"}',
         "method": "GET"
     }
+
     data['sentry.interfaces.Breadcrumbs'] = {
         "values": [
             {
                 "type": "navigation",
                 "dt": 8200,
-                "timestamp": "2016-01-17T12:29:59",
+                "timestamp": milliseconds_ago(5200),
                 "data": {
                     "to": "http://example.com/dashboard/",
                     "from": "http://example.com/login/"
@@ -85,7 +95,7 @@ def load_data(platform, default=None):
             {
                 "type": "message",
                 "dt": 5000,
-                "timestamp": "2016-01-17T12:30:03",
+                "timestamp": milliseconds_ago(4000),
                 "data": {
                     "message": "This is a message breadcrumb",
                     "level": "info"
@@ -94,7 +104,7 @@ def load_data(platform, default=None):
             {
                 "type": "message",
                 "dt": 4000,
-                "timestamp": "2016-01-17T12:31:03",
+                "timestamp": milliseconds_ago(3300),
                 "data": {
                     "message": "This is a warning message",
                     "level": "warning"
@@ -103,7 +113,7 @@ def load_data(platform, default=None):
             {
                 "type": "message",
                 "dt": 3500,
-                "timestamp": "2016-01-17T12:31:50",
+                "timestamp": milliseconds_ago(2700),
                 "data": {
                     "message": "This is an error message",
                     "level": "error"
@@ -112,7 +122,7 @@ def load_data(platform, default=None):
             {
                 "type": "http_request",
                 "dt": 3000,
-                "timestamp": "2016-01-17T12:32:05",
+                "timestamp": milliseconds_ago(1300),
                 "data": {
                     "url": "http://example.com/foo",
                     "statusCode": 200,
@@ -126,7 +136,7 @@ def load_data(platform, default=None):
             {
                 "type": "ui_event",
                 "dt": 1500,
-                "timestamp": "2016-01-17T12:33:07",
+                "timestamp": milliseconds_ago(1000),
                 "data": {
                     "type": "click",
                     "target": "<button name=\"submit\" class=\"btn btn-small\"/>"
