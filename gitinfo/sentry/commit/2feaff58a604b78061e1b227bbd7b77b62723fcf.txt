commit 2feaff58a604b78061e1b227bbd7b77b62723fcf
Author: David Cramer <dcramer@gmail.com>
Date:   Mon Apr 6 15:37:20 2015 -0700

    Remove invalid test

diff --git a/tests/sentry/web/frontend/test_organization_home.py b/tests/sentry/web/frontend/test_organization_home.py
deleted file mode 100644
index 97e809e38f..0000000000
--- a/tests/sentry/web/frontend/test_organization_home.py
+++ /dev/null
@@ -1,61 +0,0 @@
-from __future__ import absolute_import
-
-from django.core.urlresolvers import reverse
-
-from sentry.models import AuthProvider
-from sentry.testutils import TestCase, PermissionTestCase
-
-
-class OrganizationHomePermissionTest(PermissionTestCase):
-    def setUp(self):
-        super(OrganizationHomePermissionTest, self).setUp()
-        self.path = reverse('sentry-organization-home', args=[self.organization.slug])
-
-    def test_teamless_member_can_load(self):
-        self.assert_teamless_member_can_access(self.path)
-
-    def test_org_member_can_load(self):
-        self.assert_org_member_can_access(self.path)
-
-    def test_non_member_cannot_load(self):
-        self.assert_non_member_cannot_access(self.path)
-
-
-class OrganizationHomeTest(TestCase):
-    # this test isn't really specific to OrganizationHome, but it needs to
-    # guarantee this behavior so we stuff it here
-    def test_redirects_unlinked_sso_member(self):
-        user = self.create_user('not-a-superuser@example.com')
-        organization = self.create_organization(name='foo', owner=user)
-        team = self.create_team(organization=organization)
-        project = self.create_project(team=team)
-        auth_provider = AuthProvider.objects.create(organization=organization)
-
-        path = reverse('sentry-organization-home', args=[organization.slug])
-
-        self.login_as(user)
-
-        resp = self.client.get(path)
-
-        assert resp.status_code == 302
-        assert resp['Location'] == 'http://testserver{}'.format(
-            reverse('sentry-auth-link-identity', args=[organization.slug]),
-        )
-
-    def test_renders_with_context(self):
-        organization = self.create_organization(name='foo', owner=self.user)
-        team = self.create_team(organization=organization)
-        project = self.create_project(team=team)
-
-        path = reverse('sentry-organization-home', args=[organization.slug])
-
-        self.login_as(self.user)
-
-        resp = self.client.get(path)
-
-        assert resp.status_code == 200
-
-        self.assertTemplateUsed(resp, 'sentry/organization-home.html')
-
-        assert resp.context['organization'] == organization
-        assert resp.context['team_list'] == [(team, [project])]
