commit 81c4a8f5da9868a4eccf084e31c0c5d90e0ede92
Author: Scott Cooper <scttcper@gmail.com>
Date:   Tue Jun 30 16:46:36 2020 -0700

    chore(ts): Convert device to typescript (#19648)

diff --git a/src/sentry/static/sentry/app/components/events/device.jsx b/src/sentry/static/sentry/app/components/events/device.jsx
deleted file mode 100644
index 0dd7b859ae..0000000000
--- a/src/sentry/static/sentry/app/components/events/device.jsx
+++ /dev/null
@@ -1,65 +0,0 @@
-import React from 'react';
-
-import EventDataSection from 'app/components/events/eventDataSection';
-import SentryTypes from 'app/sentryTypes';
-import {t} from 'app/locale';
-import ContextData from 'app/components/contextData';
-
-// TODO(hazat): Is this interface used somewhere? If not delete it?
-class DeviceInterface extends React.Component {
-  static propTypes = {
-    event: SentryTypes.Event.isRequired,
-  };
-
-  render() {
-    const {event} = this.props;
-    const data = event.device;
-    const extras = Object.keys(data.data || {}).map(key => {
-      const value = data.data[key];
-      return (
-        <tr key={key}>
-          <td className="key">{key}</td>
-          <td className="value">
-            <ContextData data={value} />
-          </td>
-        </tr>
-      );
-    });
-
-    return (
-      <EventDataSection event={event} type="device" title={t('Device')} wrapTitle>
-        <table className="table key-value">
-          <tbody>
-            {data.name && (
-              <tr>
-                <td className="key">Name</td>
-                <td className="value">
-                  <pre>{data.name}</pre>
-                </td>
-              </tr>
-            )}
-            {data.version && (
-              <tr>
-                <td className="key">Version</td>
-                <td className="value">
-                  <pre>{data.version}</pre>
-                </td>
-              </tr>
-            )}
-            {data.build && (
-              <tr>
-                <td className="key">Build</td>
-                <td className="value">
-                  <pre>{data.build}</pre>
-                </td>
-              </tr>
-            )}
-            {extras}
-          </tbody>
-        </table>
-      </EventDataSection>
-    );
-  }
-}
-
-export default DeviceInterface;
diff --git a/src/sentry/static/sentry/app/components/events/device.tsx b/src/sentry/static/sentry/app/components/events/device.tsx
new file mode 100644
index 0000000000..5f8fda785d
--- /dev/null
+++ b/src/sentry/static/sentry/app/components/events/device.tsx
@@ -0,0 +1,65 @@
+import React from 'react';
+
+import {t} from 'app/locale';
+import SentryTypes from 'app/sentryTypes';
+import {Event} from 'app/types';
+import EventDataSection from 'app/components/events/eventDataSection';
+import ContextData from 'app/components/contextData';
+
+type Props = {
+  event: Event;
+};
+
+const DeviceInterface = ({event}: Props) => {
+  const data = event.device || {};
+  const extras = Object.entries(data.data || {}).map(([key, value]) => {
+    return (
+      <tr key={key}>
+        <td className="key">{key}</td>
+        <td className="value">
+          <ContextData data={value} />
+        </td>
+      </tr>
+    );
+  });
+
+  return (
+    <EventDataSection type="device" title={t('Device')} wrapTitle>
+      <table className="table key-value">
+        <tbody>
+          {data.name && (
+            <tr>
+              <td className="key">Name</td>
+              <td className="value">
+                <pre>{data.name}</pre>
+              </td>
+            </tr>
+          )}
+          {data.version && (
+            <tr>
+              <td className="key">Version</td>
+              <td className="value">
+                <pre>{data.version}</pre>
+              </td>
+            </tr>
+          )}
+          {data.build && (
+            <tr>
+              <td className="key">Build</td>
+              <td className="value">
+                <pre>{data.build}</pre>
+              </td>
+            </tr>
+          )}
+          {extras}
+        </tbody>
+      </table>
+    </EventDataSection>
+  );
+};
+
+DeviceInterface.propTypes = {
+  event: SentryTypes.Event.isRequired,
+};
+
+export default DeviceInterface;
diff --git a/src/sentry/static/sentry/app/types/index.tsx b/src/sentry/static/sentry/app/types/index.tsx
index 1e08f69bc9..b200972386 100644
--- a/src/sentry/static/sentry/app/types/index.tsx
+++ b/src/sentry/static/sentry/app/types/index.tsx
@@ -258,6 +258,7 @@ type SentryEventBase = {
   metadata: EventMetadata;
   contexts: EventContexts;
   context?: {[key: string]: any};
+  device?: {[key: string]: any};
   packages?: {[key: string]: string};
   user: EventUser;
   message: string;
