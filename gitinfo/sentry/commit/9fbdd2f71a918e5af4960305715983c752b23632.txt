commit 9fbdd2f71a918e5af4960305715983c752b23632
Author: Chris Clark <christopherchristopherclark@gmail.com>
Date:   Mon Feb 25 16:05:18 2019 -0800

    fix(multiple-project-selector): click targets & usability concerns (#12117)
    
    * set layout up for better click and hover targets
    
    * hover states
    
    * update hit targets to be opposite
    
    * more usable checkbox and helpful hover states
    
    * move layout to row component and use on both project and environment selectors
    
    * fix tests
    
    * move fixed row height to theme since I don't know where else to put it
    
    * forgotten snapshot
    
    * dropdownAutoCompleteMultiRow => globalSelectionHeaderRow
    
    * change stupidly named hasMultiFeature to the obvious multi name we use elsewhere
    
    * mark required props
    
    * remove some unecessary css

diff --git a/src/sentry/static/sentry/app/components/checkboxFancy.jsx b/src/sentry/static/sentry/app/components/checkboxFancy.jsx
index 2445d89e58..10048d2141 100644
--- a/src/sentry/static/sentry/app/components/checkboxFancy.jsx
+++ b/src/sentry/static/sentry/app/components/checkboxFancy.jsx
@@ -11,7 +11,7 @@ class CheckboxFancy extends React.Component {
 
   static defaultProps = {
     checked: false,
-    size: '18px',
+    size: '16px',
   };
 
   render() {
@@ -35,13 +35,17 @@ class CheckboxFancy extends React.Component {
 const CheckboxContainer = styled('div')`
   width: ${p => p.size};
   height: ${p => p.size};
-  border-radius: ${p => p.size};
+  border-radius: 5px;
   background: ${p => (p.checked ? p.theme.purple : null)};
   display: flex;
   align-items: center;
   justify-content: center;
-  box-shadow: 1px 1px 1px 1px rgba(0, 0, 0, 0.01) inset;
+  box-shadow: 1px 1px 1px 0px rgba(0, 0, 0, 0.1) inset;
   border: 1px solid ${p => (p.checked ? p.theme.purple : p.theme.gray1)};
+
+  &:hover {
+    border: 1px solid ${p => (p.checked ? p.theme.purple : p.theme.gray2)};
+  }
 `;
 
 const Check = styled(InlineSvg)`
diff --git a/src/sentry/static/sentry/app/components/globalSelectionHeaderRow.jsx b/src/sentry/static/sentry/app/components/globalSelectionHeaderRow.jsx
new file mode 100644
index 0000000000..a411fea056
--- /dev/null
+++ b/src/sentry/static/sentry/app/components/globalSelectionHeaderRow.jsx
@@ -0,0 +1,87 @@
+import PropTypes from 'prop-types';
+import React from 'react';
+import styled from 'react-emotion';
+
+import CheckboxFancy from 'app/components/checkboxFancy';
+import space from 'app/styles/space';
+
+class GlobalSelectionHeaderRow extends React.Component {
+  static propTypes = {
+    checked: PropTypes.bool.isRequired,
+    multi: PropTypes.bool,
+    onCheckClick: PropTypes.func.isRequired,
+    children: PropTypes.node.isRequired,
+  };
+
+  static defaultProps = {
+    multi: true,
+  };
+
+  render() {
+    const {checked, onCheckClick, multi, children, ...props} = this.props;
+
+    return (
+      <Container {...props}>
+        <Content multi={multi}>{children}</Content>
+        {multi && (
+          <CheckboxWrapper onClick={onCheckClick} checked={checked}>
+            <Checkbox checked={checked} />
+          </CheckboxWrapper>
+        )}
+      </Container>
+    );
+  }
+}
+
+const Container = styled('div')`
+  display: flex;
+  align-items: center;
+  justify-content: space-between;
+  font-size: 14px;
+  font-weight: 400;
+  padding-left: ${space(1)};
+  height: ${p => p.theme.headerSelectorRowHeight}px;
+  flex-shrink: 0;
+
+  /* thanks bootstrap? */
+  input[type='checkbox'] {
+    margin: 0;
+  }
+`;
+
+const Content = styled('div')`
+  display: flex;
+  flex-shrink: 1;
+  padding-right: ${space(1)};
+  overflow: hidden;
+  align-items: center;
+  height: 100%;
+  flex-grow: 1;
+  user-select: none;
+
+  &:hover {
+    text-decoration: ${p => (p.multi ? 'underline' : null)};
+    color: ${p => (p.multi ? p.theme.blue : null)};
+  }
+`;
+
+const Checkbox = styled(CheckboxFancy)`
+  transition: 0.2s transform;
+`;
+
+const CheckboxWrapper = styled('div')`
+  margin: -${space(1)}; /* pushes the click box to be flush with the edge of the menu */
+  padding: 0 ${space(2)} 0 ${space(4)};
+  height: 100%;
+  display: flex;
+  justify-content: flex-end;
+  align-items: center;
+  transition: 0.2s all;
+
+  &:hover ${Checkbox} {
+    transform: scale(1.1);
+    border-color: ${p => (p.checked ? p.theme.purple : p.theme.gray2)};
+  }
+`;
+
+export default GlobalSelectionHeaderRow;
diff --git a/src/sentry/static/sentry/app/components/organizations/multipleEnvironmentSelector.jsx b/src/sentry/static/sentry/app/components/organizations/multipleEnvironmentSelector.jsx
index 15d8b767f5..fefd26a054 100644
--- a/src/sentry/static/sentry/app/components/organizations/multipleEnvironmentSelector.jsx
+++ b/src/sentry/static/sentry/app/components/organizations/multipleEnvironmentSelector.jsx
@@ -6,8 +6,8 @@ import {uniq, intersection} from 'lodash';
 import {analytics} from 'app/utils/analytics';
 import getRouteStringFromRoutes from 'app/utils/getRouteStringFromRoutes';
 import {t} from 'app/locale';
-import CheckboxFancy from 'app/components/checkboxFancy';
 import DropdownAutoComplete from 'app/components/dropdownAutoComplete';
+import GlobalSelectionHeaderRow from 'app/components/globalSelectionHeaderRow';
 import HeaderItem from 'app/components/organizations/headerItem';
 import Highlight from 'app/components/highlight';
 import InlineSvg from 'app/components/inlineSvg';
@@ -230,7 +230,7 @@ class MultipleEnvironmentSelector extends React.PureComponent {
         inputProps={{style: {padding: 8, paddingLeft: 14}}}
         emptyMessage={t('You have no environments')}
         noResultsMessage={t('No environments found')}
-        virtualizedHeight={40}
+        virtualizedHeight={theme.headerSelectorRowHeight}
         emptyHidesInput
         menuProps={{style: {position: 'relative'}}}
         items={environments.map(env => ({
@@ -311,38 +311,9 @@ class EnvironmentSelectorItem extends React.PureComponent {
   render() {
     const {environment, inputValue, isChecked} = this.props;
     return (
-      <EnvironmentRow>
-        <div>
-          <Highlight text={inputValue}>{environment}</Highlight>
-        </div>
-
-        <MultiSelectWrapper onClick={this.handleClick}>
-          <MultiSelect checked={isChecked} />
-        </MultiSelectWrapper>
-      </EnvironmentRow>
+      <GlobalSelectionHeaderRow checked={isChecked} onCheckClick={this.handleClick}>
+        <Highlight text={inputValue}>{environment}</Highlight>
+      </GlobalSelectionHeaderRow>
     );
   }
 }
-const FlexY = styled('div')`
-  display: flex;
-  align-items: center;
-  justify-content: space-between;
-`;
-
-const EnvironmentRow = styled(FlexY)`
-  font-size: 14px;
-  font-weight: 400;
-
-  /* thanks bootstrap? */
-  input[type='checkbox'] {
-    margin: 0;
-  }
-`;
-const MultiSelectWrapper = styled('div')`
-  margin: -8px;
-  padding: 8px;
-`;
-
-const MultiSelect = styled(CheckboxFancy)`
-  flex-shrink: 0;
-`;
diff --git a/src/sentry/static/sentry/app/components/projectSelector.jsx b/src/sentry/static/sentry/app/components/projectSelector.jsx
index 3941f74af1..fabea26cb1 100644
--- a/src/sentry/static/sentry/app/components/projectSelector.jsx
+++ b/src/sentry/static/sentry/app/components/projectSelector.jsx
@@ -5,9 +5,9 @@ import styled from 'react-emotion';
 import {sortArray} from 'app/utils';
 import {t} from 'app/locale';
 import Button from 'app/components/button';
-import CheckboxFancy from 'app/components/checkboxFancy';
 import InlineSvg from 'app/components/inlineSvg';
 import DropdownAutoComplete from 'app/components/dropdownAutoComplete';
+import GlobalSelectionHeaderRow from 'app/components/globalSelectionHeaderRow';
 import Highlight from 'app/components/highlight';
 import IdBadge from 'app/components/idBadge';
 import SentryTypes from 'app/sentryTypes';
@@ -185,11 +185,12 @@ class ProjectSelector extends React.Component {
         className={className}
         emptyMessage={t('You have no projects')}
         noResultsMessage={t('No projects found')}
-        virtualizedHeight={40}
+        virtualizedHeight={theme.headerSelectorRowHeight}
         emptyHidesInput
         inputActions={() => (
           <div>
             <ManageButton to={`/settings/${org.slug}/projects/`} size="xsmall">
+              <StyledSettingsIcon src="icon-settings" />
               {t('Manage')}
             </ManageButton>
           </div>
@@ -271,25 +272,21 @@ class ProjectSelectorItem extends React.PureComponent {
     const {project, multi, inputValue, isChecked} = this.props;
 
     return (
-      <ProjectRow>
-        <BadgeAndBookmark>
-          <BadgeWrapper multi={multi}>
-            <IdBadgeMenuItem
-              project={project}
-              avatarSize={16}
-              displayName={<Highlight text={inputValue}>{project.slug}</Highlight>}
-              avatarProps={{consistentWidth: true}}
-            />
-          </BadgeWrapper>
-          {project.isBookmarked && <BookmarkIcon src="icon-star-small-filled" />}
-        </BadgeAndBookmark>
-
-        {multi && (
-          <MultiSelectWrapper onClick={this.handleClick}>
-            <MultiSelect checked={isChecked} />
-          </MultiSelectWrapper>
-        )}
-      </ProjectRow>
+      <GlobalSelectionHeaderRow
+        checked={isChecked}
+        onCheckClick={this.handleClick}
+        multi={multi}
+      >
+        <BadgeWrapper multi={multi}>
+          <IdBadgeMenuItem
+            project={project}
+            avatarSize={16}
+            displayName={<Highlight text={inputValue}>{project.slug}</Highlight>}
+            avatarProps={{consistentWidth: true}}
+          />
+        </BadgeWrapper>
+        {project.isBookmarked && <BookmarkIcon src="icon-star-small-filled" />}
+      </GlobalSelectionHeaderRow>
     );
   }
 }
@@ -300,20 +297,6 @@ const BookmarkIcon = styled(InlineSvg)`
   margin-top: -2px; /* trivial alignment bump */
 `;
 
-const ProjectRow = styled('div')`
-  display: flex;
-  align-items: center;
-  justify-content: space-between;
-  font-size: 14px;
-  font-weight: 400;
-  padding-left: ${space(1)};
-
-  /* thanks bootstrap? */
-  input[type='checkbox'] {
-    margin: 0;
-  }
-`;
-
 const CreateProjectButton = styled(Button)`
   display: block;
   text-align: center;
@@ -327,24 +310,13 @@ const BadgeWrapper = styled('div')`
   overflow: hidden;
 `;
 
-const BadgeAndBookmark = styled('div')`
-  display: flex;
-  flex: 1;
-  overflow: hidden;
-  align-items: center;
-`;
-
 const IdBadgeMenuItem = styled(IdBadge)`
   flex: 1;
   overflow: hidden;
 `;
 
-const MultiSelectWrapper = styled('div')`
-  padding: ${space(1)};
-`;
-
-const MultiSelect = styled(CheckboxFancy)`
-  flex-shrink: 0;
+const StyledSettingsIcon = styled(InlineSvg)`
+  margin-right: ${space(0.25)};
 `;
 
 const ManageButton = styled(Button)`
@@ -353,6 +325,8 @@ const ManageButton = styled(Button)`
   box-shadow: none;
   border: 0;
   background: ${p => p.theme.offWhite2};
+  color: ${p => p.theme.gray3};
+  transition: 0.2s transform;
 
   &:hover,
   &:active,
@@ -360,6 +334,7 @@ const ManageButton = styled(Button)`
     box-shadow: none;
     border: 0;
     background: ${p => p.theme.gray1};
+    color: #000;
   }
 `;
 
diff --git a/src/sentry/static/sentry/app/utils/theme.jsx b/src/sentry/static/sentry/app/utils/theme.jsx
index 30170ba1b4..10d5999277 100644
--- a/src/sentry/static/sentry/app/utils/theme.jsx
+++ b/src/sentry/static/sentry/app/utils/theme.jsx
@@ -57,6 +57,7 @@ const theme = {
   borderLight: '#E2DBE8',
   borderDark: '#D1CAD8',
   borderRadius: '4px',
+  headerSelectorRowHeight: 40,
 
   dropShadowLight: '0 2px 0 rgba(37, 11, 54, 0.04)',
   dropShadowHeavy: '0 1px 4px 1px rgba(47,40,55,0.08), 0 4px 16px 0 rgba(47,40,55,0.12)',
diff --git a/tests/js/spec/components/organizations/multipleEnvironmentSelector.spec.jsx b/tests/js/spec/components/organizations/multipleEnvironmentSelector.spec.jsx
index 045c871277..72f073cbfb 100644
--- a/tests/js/spec/components/organizations/multipleEnvironmentSelector.spec.jsx
+++ b/tests/js/spec/components/organizations/multipleEnvironmentSelector.spec.jsx
@@ -52,7 +52,7 @@ describe('MultipleEnvironmentSelector', function() {
       wrapper
         .find('EnvironmentSelectorItem')
         .at(i)
-        .find('MultiSelect')
+        .find('CheckboxWrapper')
         .simulate('click', {});
     });
     expect(onChange).toHaveBeenCalledTimes(3);
@@ -72,7 +72,7 @@ describe('MultipleEnvironmentSelector', function() {
 
     // Select 'production'
     await wrapper
-      .find('MultipleEnvironmentSelector AutoCompleteItem MultiSelectWrapper')
+      .find('MultipleEnvironmentSelector AutoCompleteItem CheckboxWrapper')
       .at(0)
       .simulate('click');
     await wrapper.update();
@@ -91,14 +91,14 @@ describe('MultipleEnvironmentSelector', function() {
     await wrapper.find('MultipleEnvironmentSelector HeaderItem').simulate('click');
 
     await wrapper
-      .find('MultipleEnvironmentSelector AutoCompleteItem MultiSelectWrapper')
+      .find('MultipleEnvironmentSelector AutoCompleteItem CheckboxWrapper')
       .at(0)
       .simulate('click');
 
     expect(onChange).toHaveBeenLastCalledWith(['production'], expect.anything());
 
     wrapper
-      .find('MultipleEnvironmentSelector AutoCompleteItem MultiSelectWrapper')
+      .find('MultipleEnvironmentSelector AutoCompleteItem CheckboxWrapper')
       .at(1)
       .simulate('click');
     expect(onChange).toHaveBeenLastCalledWith(
@@ -122,7 +122,7 @@ describe('MultipleEnvironmentSelector', function() {
     wrapper.update();
 
     await wrapper.find('MultipleEnvironmentSelector HeaderItem').simulate('click');
-    const items = wrapper.find('MultipleEnvironmentSelector EnvironmentRow');
+    const items = wrapper.find('MultipleEnvironmentSelector GlobalSelectionHeaderRow');
     expect(items.length).toEqual(1);
     expect(items.at(0).text()).toBe('dev');
   });
@@ -132,7 +132,7 @@ describe('MultipleEnvironmentSelector', function() {
     wrapper.update();
 
     await wrapper.find('MultipleEnvironmentSelector HeaderItem').simulate('click');
-    const items = wrapper.find('MultipleEnvironmentSelector EnvironmentRow');
+    const items = wrapper.find('MultipleEnvironmentSelector GlobalSelectionHeaderRow');
 
     expect(items.length).toEqual(3);
     expect(items.at(0).text()).toBe('production');
@@ -143,7 +143,7 @@ describe('MultipleEnvironmentSelector', function() {
   it('shows the distinct union of environments across all projects', async function() {
     wrapper.setProps({selectedProjects: [1, 2]});
     await wrapper.find('MultipleEnvironmentSelector HeaderItem').simulate('click');
-    const items = wrapper.find('MultipleEnvironmentSelector EnvironmentRow');
+    const items = wrapper.find('MultipleEnvironmentSelector GlobalSelectionHeaderRow');
 
     expect(items.length).toEqual(3);
     expect(items.at(0).text()).toBe('production');
diff --git a/tests/js/spec/components/projectSelector.spec.jsx b/tests/js/spec/components/projectSelector.spec.jsx
index a09e92c348..9f9d7441e9 100644
--- a/tests/js/spec/components/projectSelector.spec.jsx
+++ b/tests/js/spec/components/projectSelector.spec.jsx
@@ -160,7 +160,7 @@ describe('ProjectSelector', function() {
 
     // Select first project
     wrapper
-      .find('MultiSelectWrapper')
+      .find('CheckboxWrapper')
       .first()
       .simulate('click');
 
@@ -178,7 +178,7 @@ describe('ProjectSelector', function() {
 
     // Select first project
     wrapper
-      .find('MultiSelect')
+      .find('CheckboxWrapper')
       .at(0)
       .simulate('click', {target: {checked: true}});
 
@@ -201,7 +201,7 @@ describe('ProjectSelector', function() {
 
     // second project
     wrapper
-      .find('MultiSelect')
+      .find('CheckboxWrapper')
       .at(1)
       .simulate('click', {target: {checked: true}});
 
@@ -231,7 +231,7 @@ describe('ProjectSelector', function() {
 
     // Can unselect item
     wrapper
-      .find('MultiSelect')
+      .find('CheckboxWrapper')
       .at(1)
       .simulate('click', {target: {checked: false}});
 
diff --git a/tests/js/spec/views/organizationEvents/index.spec.jsx b/tests/js/spec/views/organizationEvents/index.spec.jsx
index 1bd0e544f2..ba38394220 100644
--- a/tests/js/spec/views/organizationEvents/index.spec.jsx
+++ b/tests/js/spec/views/organizationEvents/index.spec.jsx
@@ -99,7 +99,7 @@ describe('OrganizationEvents', function() {
       wrapper
         .find('EnvironmentSelectorItem')
         .at(1)
-        .find('MultiSelect')
+        .find('CheckboxWrapper')
         .simulate('click');
 
       expect(wrapper.find('MultipleEnvironmentSelector').prop('value')).toEqual([
@@ -178,14 +178,14 @@ describe('OrganizationEvents', function() {
       wrapper.find('MultipleProjectSelector HeaderItem').simulate('click');
 
       wrapper
-        .find('MultipleProjectSelector AutoCompleteItem MultiSelectWrapper')
+        .find('MultipleProjectSelector AutoCompleteItem CheckboxWrapper')
         .at(0)
         .simulate('click');
 
       expect(wrapper.find('MultipleProjectSelector').prop('value')).toEqual([2]);
 
       wrapper
-        .find('MultipleProjectSelector AutoCompleteItem MultiSelectWrapper')
+        .find('MultipleProjectSelector AutoCompleteItem CheckboxWrapper')
         .at(1)
         .simulate('click');
 
diff --git a/tests/js/spec/views/settings/organizationIntegrations/__snapshots__/index.spec.jsx.snap b/tests/js/spec/views/settings/organizationIntegrations/__snapshots__/index.spec.jsx.snap
index f42ff288da..46ea951a74 100644
--- a/tests/js/spec/views/settings/organizationIntegrations/__snapshots__/index.spec.jsx.snap
+++ b/tests/js/spec/views/settings/organizationIntegrations/__snapshots__/index.spec.jsx.snap
@@ -732,6 +732,7 @@ exports[`OrganizationIntegrations render() with installed integrations Displays
                                                 "greenTransparent": "rgba(87, 190, 140, 0.5)",
                                                 "grid": 8,
                                                 "headerFontSize": "22px",
+                                                "headerSelectorRowHeight": 40,
                                                 "offWhite": "#FAF9FB",
                                                 "offWhite2": "#E7E1EC",
                                                 "orange": "#ec5e44",
@@ -999,6 +1000,7 @@ exports[`OrganizationIntegrations render() with installed integrations Displays
                                                         "greenTransparent": "rgba(87, 190, 140, 0.5)",
                                                         "grid": 8,
                                                         "headerFontSize": "22px",
+                                                        "headerSelectorRowHeight": 40,
                                                         "offWhite": "#FAF9FB",
                                                         "offWhite2": "#E7E1EC",
                                                         "orange": "#ec5e44",
@@ -2198,6 +2200,7 @@ exports[`OrganizationIntegrations render() with installed integrations Displays
                                                 "greenTransparent": "rgba(87, 190, 140, 0.5)",
                                                 "grid": 8,
                                                 "headerFontSize": "22px",
+                                                "headerSelectorRowHeight": 40,
                                                 "offWhite": "#FAF9FB",
                                                 "offWhite2": "#E7E1EC",
                                                 "orange": "#ec5e44",
@@ -2465,6 +2468,7 @@ exports[`OrganizationIntegrations render() with installed integrations Displays
                                                         "greenTransparent": "rgba(87, 190, 140, 0.5)",
                                                         "grid": 8,
                                                         "headerFontSize": "22px",
+                                                        "headerSelectorRowHeight": 40,
                                                         "offWhite": "#FAF9FB",
                                                         "offWhite2": "#E7E1EC",
                                                         "orange": "#ec5e44",
@@ -4009,6 +4013,7 @@ exports[`OrganizationIntegrations render() without integrations Displays integra
                                                 "greenTransparent": "rgba(87, 190, 140, 0.5)",
                                                 "grid": 8,
                                                 "headerFontSize": "22px",
+                                                "headerSelectorRowHeight": 40,
                                                 "offWhite": "#FAF9FB",
                                                 "offWhite2": "#E7E1EC",
                                                 "orange": "#ec5e44",
@@ -4276,6 +4281,7 @@ exports[`OrganizationIntegrations render() without integrations Displays integra
                                                         "greenTransparent": "rgba(87, 190, 140, 0.5)",
                                                         "grid": 8,
                                                         "headerFontSize": "22px",
+                                                        "headerSelectorRowHeight": 40,
                                                         "offWhite": "#FAF9FB",
                                                         "offWhite2": "#E7E1EC",
                                                         "orange": "#ec5e44",
@@ -4770,6 +4776,7 @@ exports[`OrganizationIntegrations render() without integrations Displays integra
                                                 "greenTransparent": "rgba(87, 190, 140, 0.5)",
                                                 "grid": 8,
                                                 "headerFontSize": "22px",
+                                                "headerSelectorRowHeight": 40,
                                                 "offWhite": "#FAF9FB",
                                                 "offWhite2": "#E7E1EC",
                                                 "orange": "#ec5e44",
@@ -5037,6 +5044,7 @@ exports[`OrganizationIntegrations render() without integrations Displays integra
                                                         "greenTransparent": "rgba(87, 190, 140, 0.5)",
                                                         "grid": 8,
                                                         "headerFontSize": "22px",
+                                                        "headerSelectorRowHeight": 40,
                                                         "offWhite": "#FAF9FB",
                                                         "offWhite2": "#E7E1EC",
                                                         "orange": "#ec5e44",
diff --git a/tests/js/spec/views/settings/organizationIntegrations/__snapshots__/sentryAppInstallations.spec.jsx.snap b/tests/js/spec/views/settings/organizationIntegrations/__snapshots__/sentryAppInstallations.spec.jsx.snap
index b956524984..4c077958ce 100644
--- a/tests/js/spec/views/settings/organizationIntegrations/__snapshots__/sentryAppInstallations.spec.jsx.snap
+++ b/tests/js/spec/views/settings/organizationIntegrations/__snapshots__/sentryAppInstallations.spec.jsx.snap
@@ -349,6 +349,7 @@ exports[`Sentry App Installations when Apps exist displays all Apps owned by the
                                       "greenTransparent": "rgba(87, 190, 140, 0.5)",
                                       "grid": 8,
                                       "headerFontSize": "22px",
+                                      "headerSelectorRowHeight": 40,
                                       "offWhite": "#FAF9FB",
                                       "offWhite2": "#E7E1EC",
                                       "orange": "#ec5e44",
@@ -616,6 +617,7 @@ exports[`Sentry App Installations when Apps exist displays all Apps owned by the
                                               "greenTransparent": "rgba(87, 190, 140, 0.5)",
                                               "grid": 8,
                                               "headerFontSize": "22px",
+                                              "headerSelectorRowHeight": 40,
                                               "offWhite": "#FAF9FB",
                                               "offWhite2": "#E7E1EC",
                                               "orange": "#ec5e44",
