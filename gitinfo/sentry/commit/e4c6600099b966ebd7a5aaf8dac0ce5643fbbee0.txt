commit e4c6600099b966ebd7a5aaf8dac0ce5643fbbee0
Author: Daniil Penkin <dpenkin@gmail.com>
Date:   Wed Jan 9 01:04:54 2019 +1100

    fix: Ignore suffix in grouping for Java generated classes (#11146)
    
    OpenJDK reflection generates classes with unpredictable suffix which
    should not be considered when calculating a hash for a frame in Sentry
    stack trace. This adds more class name patterns in addition to the one
    supported earlier.
    
    Fixes #11145

diff --git a/src/sentry/interfaces/stacktrace.py b/src/sentry/interfaces/stacktrace.py
index 4ae8d95a50..f9dd9a0573 100644
--- a/src/sentry/interfaces/stacktrace.py
+++ b/src/sentry/interfaces/stacktrace.py
@@ -36,6 +36,17 @@ _filename_version_re = re.compile(
 )/""", re.X | re.I
 )
 
+# OpenJDK auto-generated classes for reflection access:
+#   sun.reflect.GeneratedSerializationConstructorAccessor123
+#   sun.reflect.GeneratedConstructorAccessor456
+# Note that this doesn't cover the following pattern for the sake of
+# backward compatibility (to not to change the existing grouping):
+#   sun.reflect.GeneratedMethodAccessor789
+_java_reflect_enhancer_re = re.compile(
+    r'''(sun\.reflect\.Generated(?:Serialization)?ConstructorAccessor)\d+''',
+    re.X
+)
+
 # Java Spring specific anonymous classes.
 # see: http://mydailyjava.blogspot.co.at/2013/11/cglib-missing-manual.html
 _java_cglib_enhancer_re = re.compile(r'''(\$\$[\w_]+?CGLIB\$\$)[a-fA-F0-9]+(_[0-9]+)?''', re.X)
@@ -198,6 +209,7 @@ def remove_module_outliers(module, platform=None):
     if platform == 'java':
         if module[:35] == 'sun.reflect.GeneratedMethodAccessor':
             return 'sun.reflect.GeneratedMethodAccessor'
+        module = _java_reflect_enhancer_re.sub(r'\1<auto>', module)
         module = _java_cglib_enhancer_re.sub(r'\1<auto>', module)
         module = _java_assist_enhancer_re.sub(r'\1<auto>', module)
         module = _clojure_enhancer_re.sub(r'\1<auto>', module)
diff --git a/tests/sentry/interfaces/test_stacktrace.py b/tests/sentry/interfaces/test_stacktrace.py
index 2a2cfac57c..c1c094f900 100644
--- a/tests/sentry/interfaces/test_stacktrace.py
+++ b/tests/sentry/interfaces/test_stacktrace.py
@@ -392,6 +392,31 @@ class StacktraceTest(TestCase):
             ]
         )
 
+    def test_get_hash_ignores_sun_java_generated_constructors(self):
+        interface = Frame.to_python(
+            {
+                'module': 'sun.reflect.GeneratedSerializationConstructorAccessor1',
+                'function': 'invoke',
+            }
+        )
+        result = interface.get_hash(platform='java')
+        self.assertEquals(result, [
+            'sun.reflect.GeneratedSerializationConstructorAccessor<auto>',
+            'invoke',
+        ])
+
+        interface = Frame.to_python(
+            {
+                'module': 'sun.reflect.GeneratedConstructorAccessor2',
+                'function': 'invoke',
+            }
+        )
+        result = interface.get_hash(platform='java')
+        self.assertEquals(result, [
+            'sun.reflect.GeneratedConstructorAccessor<auto>',
+            'invoke',
+        ])
+
     def test_get_hash_ignores_sun_java_generated_methods(self):
         interface = Frame.to_python(
             {
