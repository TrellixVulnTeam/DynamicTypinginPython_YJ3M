commit b9d874bf43026fd65c651cc520b61eb7bcf7b359
Author: Lyn Nagara <lyn.nagara@gmail.com>
Date:   Wed Dec 12 11:06:14 2018 -0800

    ref(sentry10): Refactor user feedback component (#11013)
    
    Extracts some parts of the project user feedback component which can be
    shared by the new organization scoped multi-project user feedback
    interface

diff --git a/src/sentry/static/sentry/app/routes.jsx b/src/sentry/static/sentry/app/routes.jsx
index 3f7993e05d..c275c420a6 100644
--- a/src/sentry/static/sentry/app/routes.jsx
+++ b/src/sentry/static/sentry/app/routes.jsx
@@ -42,7 +42,6 @@ import ProjectInstallPlatform from 'app/views/projectInstall/platform';
 import ProjectReleases from 'app/views/projectReleases';
 import ProjectSavedSearches from 'app/views/projectSavedSearches';
 import ProjectSettings from 'app/views/projectSettings';
-import ProjectUserFeedback from 'app/views/projectUserFeedback';
 import ProjectPlugins from 'app/views/projectPlugins';
 import ProjectPluginDetails from 'app/views/projectPluginDetails';
 import ReleaseAllEvents from 'app/views/releaseAllEvents';
@@ -880,7 +879,12 @@ function routes() {
             <Route path="artifacts/" component={errorHandler(ReleaseArtifacts)} />
             <Route path="commits/" component={errorHandler(ReleaseCommits)} />
           </Route>
-          <Route path="user-feedback/" component={errorHandler(ProjectUserFeedback)} />
+          <Route
+            path="user-feedback/"
+            componentPromise={() =>
+              import(/*webpackChunkName: "ProjectUserFeedback"*/ './views/userFeedback/projectUserFeedback')}
+            component={errorHandler(LazyLoad)}
+          />
 
           <Route path="settings/" component={errorHandler(ProjectSettings)}>
             <Redirect from="teams/" to="/settings/:orgId/:projectId/teams/" />
diff --git a/src/sentry/static/sentry/app/views/userFeedback/container.jsx b/src/sentry/static/sentry/app/views/userFeedback/container.jsx
new file mode 100644
index 0000000000..3e65cc528f
--- /dev/null
+++ b/src/sentry/static/sentry/app/views/userFeedback/container.jsx
@@ -0,0 +1,51 @@
+import React from 'react';
+import PropTypes from 'prop-types';
+import {t} from 'app/locale';
+import Pagination from 'app/components/pagination';
+import {Panel, PanelBody} from 'app/components/panels';
+
+import {Link} from 'react-router';
+
+export default class UserFeedbackContainer extends React.Component {
+  static propTypes = {
+    location: PropTypes.object.isRequired,
+    pageLinks: PropTypes.string.isRequired,
+    status: PropTypes.string.isRequired,
+  };
+
+  render() {
+    const {location: {pathname}, pageLinks, children, status} = this.props;
+
+    return (
+      <div>
+        <div className="row release-list-header">
+          <div className="col-sm-9">
+            <h3>{t('User Feedback')}</h3>
+          </div>
+          <div className="col-sm-3" style={{textAlign: 'right'}}>
+            <div className="btn-group">
+              <Link
+                to={pathname}
+                className={
+                  'btn btn-sm btn-default' + (status === 'unresolved' ? ' active' : '')
+                }
+              >
+                {t('Unresolved')}
+              </Link>
+              <Link
+                to={{pathname, query: {status: ''}}}
+                className={'btn btn-sm btn-default' + (status === '' ? ' active' : '')}
+              >
+                {t('All Issues')}
+              </Link>
+            </div>
+          </div>
+        </div>
+        <Panel>
+          <PanelBody className="issue-list">{children}</PanelBody>
+        </Panel>
+        <Pagination pageLinks={pageLinks} />
+      </div>
+    );
+  }
+}
diff --git a/src/sentry/static/sentry/app/views/userFeedback/organizationUserFeedback.jsx b/src/sentry/static/sentry/app/views/userFeedback/organizationUserFeedback.jsx
new file mode 100644
index 0000000000..9ca826a2ac
--- /dev/null
+++ b/src/sentry/static/sentry/app/views/userFeedback/organizationUserFeedback.jsx
@@ -0,0 +1,17 @@
+import React from 'react';
+
+import UserFeedbackContainer from './container';
+
+export default class OrganizationUserFeedback extends React.Component {
+  renderList() {
+    // TODO: implement this
+  }
+
+  render() {
+    return (
+      <UserFeedbackContainer location={this.props.location} pageLinks={''} status={''}>
+        {this.renderList()}
+      </UserFeedbackContainer>
+    );
+  }
+}
diff --git a/src/sentry/static/sentry/app/views/projectUserFeedback.jsx b/src/sentry/static/sentry/app/views/userFeedback/projectUserFeedback.jsx
similarity index 83%
rename from src/sentry/static/sentry/app/views/projectUserFeedback.jsx
rename to src/sentry/static/sentry/app/views/userFeedback/projectUserFeedback.jsx
index 49476d0d51..133e6340fe 100644
--- a/src/sentry/static/sentry/app/views/projectUserFeedback.jsx
+++ b/src/sentry/static/sentry/app/views/userFeedback/projectUserFeedback.jsx
@@ -9,14 +9,14 @@ import ApiMixin from 'app/mixins/apiMixin';
 import GroupStore from 'app/stores/groupStore';
 import LoadingError from 'app/components/loadingError';
 import LoadingIndicator from 'app/components/loadingIndicator';
-import Pagination from 'app/components/pagination';
 import CompactIssue from 'app/components/compactIssue';
 import EventUserFeedback from 'app/components/events/userFeedback';
-import {Panel, PanelBody} from 'app/components/panels';
 import EmptyStateWarning from 'app/components/emptyStateWarning';
 import {t, tct} from 'app/locale';
 import withEnvironmentInQueryString from 'app/utils/withEnvironmentInQueryString';
 
+import UserFeedbackContainer from './container';
+
 const ProjectUserFeedback = createReactClass({
   displayName: 'ProjectUserFeedback',
 
@@ -214,38 +214,14 @@ const ProjectUserFeedback = createReactClass({
   },
 
   render() {
-    let path = this.props.location.pathname;
-    let status = this.state.status;
     return (
-      <div>
-        <div className="row release-list-header">
-          <div className="col-sm-9">
-            <h3>{t('User Feedback')}</h3>
-          </div>
-          <div className="col-sm-3" style={{textAlign: 'right'}}>
-            <div className="btn-group">
-              <Link
-                to={path}
-                className={
-                  'btn btn-sm btn-default' + (status === 'unresolved' ? ' active' : '')
-                }
-              >
-                {t('Unresolved')}
-              </Link>
-              <Link
-                to={{pathname: path, query: {status: ''}}}
-                className={'btn btn-sm btn-default' + (status === '' ? ' active' : '')}
-              >
-                {t('All Issues')}
-              </Link>
-            </div>
-          </div>
-        </div>
-        <Panel>
-          <PanelBody className="issue-list">{this.renderStreamBody()}</PanelBody>
-        </Panel>
-        <Pagination pageLinks={this.state.pageLinks} />
-      </div>
+      <UserFeedbackContainer
+        location={this.props.location}
+        pageLinks={this.state.pageLinks}
+        status={this.state.status}
+      >
+        {this.renderStreamBody()}
+      </UserFeedbackContainer>
     );
   },
 });
diff --git a/tests/js/spec/views/__snapshots__/projectUserFeedback.spec.jsx.snap b/tests/js/spec/views/__snapshots__/projectUserFeedback.spec.jsx.snap
deleted file mode 100644
index 4138c6ca50..0000000000
--- a/tests/js/spec/views/__snapshots__/projectUserFeedback.spec.jsx.snap
+++ /dev/null
@@ -1,149 +0,0 @@
-// Jest Snapshot v1, https://goo.gl/fbAQLP
-
-exports[`projectUserFeedback renders 1`] = `
-<div>
-  <div
-    className="row release-list-header"
-  >
-    <div
-      className="col-sm-9"
-    >
-      <h3>
-        User Feedback
-      </h3>
-    </div>
-    <div
-      className="col-sm-3"
-      style={
-        Object {
-          "textAlign": "right",
-        }
-      }
-    >
-      <div
-        className="btn-group"
-      >
-        <Link
-          className="btn btn-sm btn-default active"
-          onlyActiveOnIndex={false}
-          style={Object {}}
-        >
-          Unresolved
-        </Link>
-        <Link
-          className="btn btn-sm btn-default"
-          onlyActiveOnIndex={false}
-          style={Object {}}
-          to={
-            Object {
-              "pathname": undefined,
-              "query": Object {
-                "status": "",
-              },
-            }
-          }
-        >
-          All Issues
-        </Link>
-      </div>
-    </div>
-  </div>
-  <Panel>
-    <PanelBody
-      className="issue-list"
-      direction="column"
-      disablePadding={true}
-      flex={false}
-    >
-      <CompactIssue
-        data={
-          Object {
-            "assignedTo": null,
-            "id": "1",
-            "project": Object {
-              "id": "2",
-              "slug": "project-slug",
-            },
-            "stats": Object {
-              "24h": Array [
-                Array [
-                  1517281200,
-                  2,
-                ],
-                Array [
-                  1517310000,
-                  1,
-                ],
-              ],
-              "30d": Array [
-                Array [
-                  1514764800,
-                  1,
-                ],
-                Array [
-                  1515024000,
-                  122,
-                ],
-              ],
-            },
-            "tags": Array [],
-          }
-        }
-        id="1"
-        key="123"
-        orgId="org-slug"
-        projectId="project-slug"
-      >
-        <EventUserFeedback
-          issueId="1"
-          orgId="org-slug"
-          projectId="project-slug"
-          report={
-            Object {
-              "comments": "Something bad happened",
-              "email": "lyn@sentry.io",
-              "id": "123",
-              "issue": Object {
-                "assignedTo": null,
-                "id": "1",
-                "project": Object {
-                  "id": "2",
-                  "slug": "project-slug",
-                },
-                "stats": Object {
-                  "24h": Array [
-                    Array [
-                      1517281200,
-                      2,
-                    ],
-                    Array [
-                      1517310000,
-                      1,
-                    ],
-                  ],
-                  "30d": Array [
-                    Array [
-                      1514764800,
-                      1,
-                    ],
-                    Array [
-                      1515024000,
-                      122,
-                    ],
-                  ],
-                },
-                "tags": Array [],
-              },
-              "name": "Lyn",
-            }
-          }
-        />
-      </CompactIssue>
-    </PanelBody>
-  </Panel>
-  <Pagination
-    className="stream-pagination"
-    onCursor={[Function]}
-  />
-</div>
-`;
diff --git a/tests/js/spec/views/userFeedback/__snapshots__/projectUserFeedback.spec.jsx.snap b/tests/js/spec/views/userFeedback/__snapshots__/projectUserFeedback.spec.jsx.snap
new file mode 100644
index 0000000000..76ba5f9a8e
--- /dev/null
+++ b/tests/js/spec/views/userFeedback/__snapshots__/projectUserFeedback.spec.jsx.snap
@@ -0,0 +1,98 @@
+// Jest Snapshot v1, https://goo.gl/fbAQLP
+
+exports[`projectUserFeedback renders 1`] = `
+<UserFeedbackContainer
+  location={
+    Object {
+      "query": Object {},
+    }
+  }
+  pageLinks="<https://sentry.io/api/0/organizations/sentry/user-feedback/?statsPeriod=14d&cursor=0:0:1>; rel=\\"previous\\"; results=\\"false\\"; cursor=\\"0:0:1\\", <https://sentry.io/api/0/organizations/sentry/user-feedback/?statsPeriod=14d&cursor=0:100:0>; rel=\\"next\\"; results=\\"true\\"; cursor=\\"0:100:0\\""
+  status="unresolved"
+>
+  <CompactIssue
+    data={
+      Object {
+        "assignedTo": null,
+        "id": "1",
+        "project": Object {
+          "id": "2",
+          "slug": "project-slug",
+        },
+        "stats": Object {
+          "24h": Array [
+            Array [
+              1517281200,
+              2,
+            ],
+            Array [
+              1517310000,
+              1,
+            ],
+          ],
+          "30d": Array [
+            Array [
+              1514764800,
+              1,
+            ],
+            Array [
+              1515024000,
+              122,
+            ],
+          ],
+        },
+        "tags": Array [],
+      }
+    }
+    id="1"
+    key="123"
+    orgId="org-slug"
+    projectId="project-slug"
+  >
+    <EventUserFeedback
+      issueId="1"
+      orgId="org-slug"
+      projectId="project-slug"
+      report={
+        Object {
+          "comments": "Something bad happened",
+          "email": "lyn@sentry.io",
+          "id": "123",
+          "issue": Object {
+            "assignedTo": null,
+            "id": "1",
+            "project": Object {
+              "id": "2",
+              "slug": "project-slug",
+            },
+            "stats": Object {
+              "24h": Array [
+                Array [
+                  1517281200,
+                  2,
+                ],
+                Array [
+                  1517310000,
+                  1,
+                ],
+              ],
+              "30d": Array [
+                Array [
+                  1514764800,
+                  1,
+                ],
+                Array [
+                  1515024000,
+                  122,
+                ],
+              ],
+            },
+            "tags": Array [],
+          },
+          "name": "Lyn",
+        }
+      }
+    />
+  </CompactIssue>
+</UserFeedbackContainer>
+`;
diff --git a/tests/js/spec/views/projectUserFeedback.spec.jsx b/tests/js/spec/views/userFeedback/projectUserFeedback.spec.jsx
similarity index 62%
rename from tests/js/spec/views/projectUserFeedback.spec.jsx
rename to tests/js/spec/views/userFeedback/projectUserFeedback.spec.jsx
index 39ecfb3155..10f75daa78 100644
--- a/tests/js/spec/views/projectUserFeedback.spec.jsx
+++ b/tests/js/spec/views/userFeedback/projectUserFeedback.spec.jsx
@@ -1,13 +1,18 @@
 import React from 'react';
 
 import {shallow} from 'enzyme';
-import {ProjectUserFeedback} from 'app/views/projectUserFeedback';
+import {ProjectUserFeedback} from 'app/views/userFeedback/projectUserFeedback';
 
 describe('projectUserFeedback', function() {
   beforeEach(function() {
+    const pageLinks =
+      '<https://sentry.io/api/0/organizations/sentry/user-feedback/?statsPeriod=14d&cursor=0:0:1>; rel="previous"; results="false"; cursor="0:0:1", ' +
+      '<https://sentry.io/api/0/organizations/sentry/user-feedback/?statsPeriod=14d&cursor=0:100:0>; rel="next"; results="true"; cursor="0:100:0"';
+
     MockApiClient.addMockResponse({
       url: '/projects/org-slug/project-slug/user-reports/',
       body: [TestStubs.UserFeedback()],
+      headers: {Link: pageLinks},
     });
   });
 
