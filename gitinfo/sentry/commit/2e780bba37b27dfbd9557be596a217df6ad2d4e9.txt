commit 2e780bba37b27dfbd9557be596a217df6ad2d4e9
Author: Jess MacQueen <jessmacqueen@gmail.com>
Date:   Wed Mar 1 11:29:06 2017 -0800

    fix MultipleObjectsReturned errors when querying for releases (#5002)

diff --git a/src/sentry/api/bases/organization.py b/src/sentry/api/bases/organization.py
index b92c0e57b8..8612f40dc5 100644
--- a/src/sentry/api/bases/organization.py
+++ b/src/sentry/api/bases/organization.py
@@ -8,7 +8,7 @@ from sentry.api.permissions import ScopedPermission
 from sentry.app import raven
 from sentry.auth import access
 from sentry.models import (
-    Organization, OrganizationMemberTeam, OrganizationStatus, Project, Team
+    Organization, OrganizationMemberTeam, OrganizationStatus, Project, ReleaseProject, Team
 )
 from sentry.models.apikey import ROOT_KEY
 from sentry.utils import auth
@@ -111,3 +111,9 @@ class OrganizationReleasesBaseEndpoint(OrganizationEndpoint):
                 team__organization_id=organization.id,
             ).values_list('team_id', flat=True)
         return Project.objects.filter(team_id__in=allowed_teams)
+
+    def has_release_permission(self, request, organization, release):
+        return ReleaseProject.objects.filter(
+            release=release,
+            project__in=self.get_allowed_projects(request, organization),
+        ).exists()
diff --git a/src/sentry/api/endpoints/organization_release_details.py b/src/sentry/api/endpoints/organization_release_details.py
index d6cb764e79..c1a6ed8f21 100644
--- a/src/sentry/api/endpoints/organization_release_details.py
+++ b/src/sentry/api/endpoints/organization_release_details.py
@@ -1,6 +1,7 @@
 from __future__ import absolute_import
 
 from rest_framework import serializers
+from rest_framework.exceptions import PermissionDenied
 from rest_framework.response import Response
 
 from sentry.api.base import DocSection
@@ -65,12 +66,14 @@ class OrganizationReleaseDetailsEndpoint(OrganizationReleasesBaseEndpoint):
         try:
             release = Release.objects.get(
                 organization_id=organization.id,
-                projects__in=self.get_allowed_projects(request, organization),
                 version=version,
             )
         except Release.DoesNotExist:
             raise ResourceDoesNotExist
 
+        if not self.has_release_permission(request, organization, release):
+            raise PermissionDenied
+
         return Response(serialize(release, request.user))
 
     @attach_scenarios([update_organization_release_scenario])
@@ -100,12 +103,14 @@ class OrganizationReleaseDetailsEndpoint(OrganizationReleasesBaseEndpoint):
         try:
             release = Release.objects.get(
                 organization_id=organization,
-                projects__in=self.get_allowed_projects(request, organization),
                 version=version,
             )
         except Release.DoesNotExist:
             raise ResourceDoesNotExist
 
+        if not self.has_release_permission(request, organization, release):
+            raise PermissionDenied
+
         serializer = ReleaseSerializer(data=request.DATA, partial=True)
 
         if not serializer.is_valid():
@@ -161,12 +166,14 @@ class OrganizationReleaseDetailsEndpoint(OrganizationReleasesBaseEndpoint):
         try:
             release = Release.objects.get(
                 organization_id=organization.id,
-                projects__in=self.get_allowed_projects(request, organization),
                 version=version,
             )
         except Release.DoesNotExist:
             raise ResourceDoesNotExist
 
+        if not self.has_release_permission(request, organization, release):
+            raise PermissionDenied
+
         # we don't want to remove the first_release metadata on the Group, and
         # while people might want to kill a release (maybe to remove files),
         # removing the release is prevented
diff --git a/src/sentry/api/endpoints/organization_release_file_details.py b/src/sentry/api/endpoints/organization_release_file_details.py
index 76b23bef58..2e7347127e 100644
--- a/src/sentry/api/endpoints/organization_release_file_details.py
+++ b/src/sentry/api/endpoints/organization_release_file_details.py
@@ -2,6 +2,7 @@ from __future__ import absolute_import
 import posixpath
 
 from rest_framework import serializers
+from rest_framework.exceptions import PermissionDenied
 from rest_framework.response import Response
 
 from sentry.api.base import DocSection
@@ -48,12 +49,14 @@ class OrganizationReleaseFileDetailsEndpoint(OrganizationReleasesBaseEndpoint):
         try:
             release = Release.objects.get(
                 organization_id=organization.id,
-                projects=self.get_allowed_projects(request, organization),
                 version=version,
             )
         except Release.DoesNotExist:
             raise ResourceDoesNotExist
 
+        if not self.has_release_permission(request, organization, release):
+            raise PermissionDenied
+
         try:
             releasefile = ReleaseFile.objects.get(
                 release=release,
@@ -88,12 +91,14 @@ class OrganizationReleaseFileDetailsEndpoint(OrganizationReleasesBaseEndpoint):
         try:
             release = Release.objects.get(
                 organization_id=organization.id,
-                projects=self.get_allowed_projects(request, organization),
                 version=version,
             )
         except Release.DoesNotExist:
             raise ResourceDoesNotExist
 
+        if not self.has_release_permission(request, organization, release):
+            raise PermissionDenied
+
         try:
             releasefile = ReleaseFile.objects.get(
                 release=release,
@@ -133,12 +138,14 @@ class OrganizationReleaseFileDetailsEndpoint(OrganizationReleasesBaseEndpoint):
         try:
             release = Release.objects.get(
                 organization_id=organization.id,
-                projects=self.get_allowed_projects(request, organization),
                 version=version,
             )
         except Release.DoesNotExist:
             raise ResourceDoesNotExist
 
+        if not self.has_release_permission(request, organization, release):
+            raise PermissionDenied
+
         try:
             releasefile = ReleaseFile.objects.get(
                 release=release,
diff --git a/src/sentry/api/endpoints/organization_release_files.py b/src/sentry/api/endpoints/organization_release_files.py
index 935387d9c8..7fc6e3f155 100644
--- a/src/sentry/api/endpoints/organization_release_files.py
+++ b/src/sentry/api/endpoints/organization_release_files.py
@@ -3,6 +3,7 @@ from __future__ import absolute_import
 import re
 from django.db import IntegrityError, transaction
 from rest_framework.response import Response
+from rest_framework.exceptions import PermissionDenied
 
 from sentry.api.base import DocSection
 from sentry.api.bases.organization import OrganizationReleasesBaseEndpoint
@@ -35,12 +36,14 @@ class OrganizationReleaseFilesEndpoint(OrganizationReleasesBaseEndpoint):
         try:
             release = Release.objects.get(
                 organization_id=organization.id,
-                projects=self.get_allowed_projects(request, organization),
                 version=version,
             )
         except Release.DoesNotExist:
             raise ResourceDoesNotExist
 
+        if not self.has_release_permission(request, organization, release):
+            raise PermissionDenied
+
         file_list = ReleaseFile.objects.filter(
             release=release,
         ).select_related('file').order_by('name')
@@ -82,12 +85,14 @@ class OrganizationReleaseFilesEndpoint(OrganizationReleasesBaseEndpoint):
         try:
             release = Release.objects.get(
                 organization_id=organization.id,
-                projects=self.get_allowed_projects(request, organization),
                 version=version,
             )
         except Release.DoesNotExist:
             raise ResourceDoesNotExist
 
+        if not self.has_release_permission(request, organization, release):
+            raise PermissionDenied
+
         if 'file' not in request.FILES:
             return Response({'detail': 'Missing uploaded file'}, status=400)
 
diff --git a/tests/sentry/api/endpoints/test_organization_release_details.py b/tests/sentry/api/endpoints/test_organization_release_details.py
index 297fccf4d8..50df4ae929 100644
--- a/tests/sentry/api/endpoints/test_organization_release_details.py
+++ b/tests/sentry/api/endpoints/test_organization_release_details.py
@@ -58,7 +58,38 @@ class ReleaseDetailsTest(APITestCase):
             'version': release2.version,
         })
         response = self.client.get(url)
-        assert response.status_code == 404
+        assert response.status_code == 403
+
+    def test_multiple_projects(self):
+        user = self.create_user(is_staff=False, is_superuser=False)
+        org = self.organization
+        org.flags.allow_joinleave = False
+        org.save()
+
+        team1 = self.create_team(organization=org)
+        team2 = self.create_team(organization=org)
+
+        project = self.create_project(team=team1, organization=org)
+        project2 = self.create_project(team=team2, organization=org)
+
+        release = Release.objects.create(
+            organization_id=org.id,
+            version='abcabcabc',
+        )
+        release.add_project(project)
+        release.add_project(project2)
+
+        self.create_member(teams=[team1, team2], user=user, organization=org)
+
+        self.login_as(user=user)
+
+        url = reverse('sentry-api-0-organization-release-details', kwargs={
+            'organization_slug': org.slug,
+            'version': release.version,
+        })
+        response = self.client.get(url)
+
+        assert response.status_code == 200, response.content
 
 
 class UpdateReleaseDetailsTest(APITestCase):
@@ -107,7 +138,7 @@ class UpdateReleaseDetailsTest(APITestCase):
             'version': release2.version,
         })
         response = self.client.put(url, {'ref': 'master'})
-        assert response.status_code == 404
+        assert response.status_code == 403
 
     def test_commits(self):
         user = self.create_user(is_staff=False, is_superuser=False)
