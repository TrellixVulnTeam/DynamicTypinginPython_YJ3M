commit 4bfa374a2843c31532597ccb3928ab16f1b6e202
Author: Eric Feng <eric@getsentry.com>
Date:   Mon Jan 18 18:59:09 2016 -0800

    invite members task

diff --git a/src/sentry/models/organizationmember.py b/src/sentry/models/organizationmember.py
index 833f8a6d3d..f827c0dd49 100644
--- a/src/sentry/models/organizationmember.py
+++ b/src/sentry/models/organizationmember.py
@@ -92,9 +92,29 @@ class OrganizationMember(Model):
 
     @transaction.atomic
     def save(self, *args, **kwargs):
+        from sentry.models import OnboardingTask, OnboardingTaskStatus, OrganizationOnboardingTask
         assert self.user_id or self.email, \
             'Must set user or email'
         super(OrganizationMember, self).save(*args, **kwargs)
+
+        oot = OrganizationOnboardingTask.objects.filter(
+            organzation=self.organzation,
+            user=user,
+            task=OnboardingTask.INVITE_MEMBER,
+            status=OnboardingTaskStatus.COMPLETE
+            ).exists()
+
+        if not oot:
+            OrganizationOnboardingTask.create_or_update(
+                organization=self.organization,
+                user=self.user,
+                task=OnboardingTask.INVITE_MEMBER,
+                values={
+                    'status': OnboardingTaskStatus.PENDING if self.is_pending else OnboardingTaskStatus.COMPLETE,
+                    'date_completed': timezone.now()
+                }
+            )
+
         if not self.counter:
             self._set_counter()
 
diff --git a/src/sentry/models/organizationonboardingtask.py b/src/sentry/models/organizationonboardingtask.py
index d9ed17167b..f64b59d03c 100644
--- a/src/sentry/models/organizationonboardingtask.py
+++ b/src/sentry/models/organizationonboardingtask.py
@@ -9,31 +9,56 @@ from django.conf import settings
 from django.db import models
 
 from sentry.db.models import FlexibleForeignKey, Model, sane_repr
-from django.utils import timezone
+
+class OnboardingTask(object):
+    FIRST_EVENT = 1
+    INVITE_MEMBER = 2
+    ISSUE_TRACKER = 3
+    NOTIFICATION_SERVICE = 4
+    SECOND_PLATFORM = 5
+    USER_CONTEXT = 6
+    SOURCEMAPS = 7
+    RELEASE_TRACKING = 8
+    USER_REPORTS = 9
+    SENTRY_UPDATES = 10
+    ISSUE_ASSIGNMENT = 11
+
+class OnboardingTaskStatus(object):
+    COMPLETE = 1
+    PENDING = 2
+    SKIPPED = 3
+
 
 class OrganizationOnboardingTask(Model):
     """
     Onboarding tasks walk new Sentry orgs through basic features of Sentry.
     """
     TASK_CHOICES = (
-        ('T', 'Tour'),  # Walkthrough a tour of Sentry
-        ('E', 'First event'),  # Send an organization's first event to Sentry
-        ('P', 'Second platform'),  # Send an event from a second platform
-        ('M', 'Invite member'),  # Add a second member to your Sentry org.
-        ('I', 'Issue tracker'),  # Hook up an external issue tracker.
-        ('N', 'Notification'),  # Setup a notification services
-        ('A', 'Issue assignment'),  # Assign issues to team members
-        ('C', 'User context'),  # Add user context to errors
-        ('S', 'Upload sourcemaps'),  # Upload sourcemaps for compiled js code
-        ('R', 'Release tracking'),  # Add release data to Sentry events
-        ('U', 'Sentry updates'),  # Monthly Sentry updates (new features, security, releases)
+        (OnboardingTask.FIRST_EVENT, 'First event'),  # Send an organization's first event to Sentry
+        (OnboardingTask.INVITE_MEMBER, 'Invite member'),  # Add a second member to your Sentry org.
+        (OnboardingTask.ISSUE_TRACKER, 'Issue tracker'),  # Hook up an external issue tracker.
+        (OnboardingTask.NOTIFICATION_SERVICE, 'Notification services'),  # Setup a notification services
+        (OnboardingTask.ISSUE_ASSIGNMENT, 'Issue assignment'),  # Assign issues to team members
+        (OnboardingTask.SECOND_PLATFORM, 'Second platform'),  # Send an event from a second platform
+        (OnboardingTask.USER_CONTEXT, 'User context'),  # Add user context to errors
+        (OnboardingTask.SOURCEMAPS, 'Upload sourcemaps'),  # Upload sourcemaps for compiled js code
+        (OnboardingTask.RELEASE_TRACKING, 'Release tracking'),  # Add release data to Sentry events
+        (OnboardingTask.USER_REPORTS, 'User reports'),  # Send user reports
+        (OnboardingTask.SENTRY_UPDATES, 'Sentry updates'),  # Monthly Sentry updates (new features, releases)
+    )
+    INTIAL_TASKS = ['FE', 'IM', 'UC', 'RT']
+
+    STATUS_CHOICES = (
+        (OnboardingTaskStatus.COMPLETE, 'Complete'),
+        (OnboardingTaskStatus.PENDING, 'Pending'),
+        (OnboardingTaskStatus.SKIPPED, 'Skipped'),
     )
 
     organization = FlexibleForeignKey('sentry.Organization')
     user = FlexibleForeignKey(settings.AUTH_USER_MODEL, null=False)  # user that completed
-    task = models.CharField(max_length=1, choices=TASK_CHOICES, null=False)
-    completed = models.BooleanField(default=False, null=False)
-    date_completed = models.DateTimeField(default=timezone.now)
+    task = models.BoundedPositiveIntegerField(choices=TASK_CHOICES)
+    status = models.BoundedPositiveIntegerField(choices=STATUS_CHOICES)
+    date_completed = models.DateTimeField()
 
     class Meta:
         app_label = 'sentry'
