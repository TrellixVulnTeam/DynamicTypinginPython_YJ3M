commit 010b41476fcb63166dd34e05075a6abe90209b53
Author: Armin Ronacher <armin.ronacher@active-4.com>
Date:   Fri Dec 4 01:21:56 2015 +0100

    Fixed language selection

diff --git a/src/sentry/static/sentry/app/locale.jsx b/src/sentry/static/sentry/app/locale.jsx
index 13483b29c0..f605477ffc 100644
--- a/src/sentry/static/sentry/app/locale.jsx
+++ b/src/sentry/static/sentry/app/locale.jsx
@@ -1,15 +1,8 @@
 import Jed from 'jed';
 import React from 'react';
-import ConfigStore from './stores/configStore';
 import {getTranslations} from './translations';
 import {sprintf} from 'sprintf-js';
 
-export function getCurrentTranslations() {
-  let user = ConfigStore.get('user');
-  let lang = user && user.language || 'en';
-  return getTranslations(lang);
-}
-
 let LOCALE_DEBUG = false;
 
 if (sessionStorage && sessionStorage.getItem('localeDebug') == '1') {
@@ -23,19 +16,22 @@ export function setLocaleDebug(value) {
               '. Reload page to apply changes!');
 }
 
-const i18n = new Jed({
-  'domain' : 'sentry',
+let i18n = null;
 
-  // This callback is called when a key is missing
-  'missing_key_callback' : function(key) {
-    // TODO(dcramer): this should log to Sentry
-  },
 
-  'locale_data': {
-    // XXX: configure language here
-    'sentry': getCurrentTranslations()
-  }
-});
+export function setLocale(locale) {
+  let translations = getTranslations(locale);
+  i18n = new Jed({
+    'domain' : 'sentry',
+    'missing_key_callback' : function(key) {
+    },
+    'locale_data': {
+      'sentry': translations
+    }
+  });
+}
+
+setLocale('en');
 
 function formatForReact(formatString, args) {
   let rv = [];
diff --git a/src/sentry/static/sentry/app/stores/configStore.jsx b/src/sentry/static/sentry/app/stores/configStore.jsx
index 49c93324b3..71948967b3 100644
--- a/src/sentry/static/sentry/app/stores/configStore.jsx
+++ b/src/sentry/static/sentry/app/stores/configStore.jsx
@@ -1,5 +1,6 @@
 import moment from 'moment-timezone';
 import Reflux from 'reflux';
+import {setLocale} from '../locale';
 
 const ConfigStore = Reflux.createStore({
   init() {
@@ -28,6 +29,7 @@ const ConfigStore = Reflux.createStore({
     // TODO(dcramer): abstract this out of ConfigStore
     if (config.user) {
       moment.tz.setDefault(config.user.options.timezone);
+      setLocale(config.user.options.language || 'en');
     }
 
     this.trigger(config);
diff --git a/src/sentry/static/sentry/app/translations.jsx b/src/sentry/static/sentry/app/translations.jsx
index 44f9eeeebb..2c40e016ff 100644
--- a/src/sentry/static/sentry/app/translations.jsx
+++ b/src/sentry/static/sentry/app/translations.jsx
@@ -5,7 +5,7 @@ const catalogs = (function() {
   return info.supported_locales;
 })();
 
-const translations = (function() {
+export const translations = (function() {
   let ctx = require.context('../../../locale/', true, /\.po$/);
   let rv = {};
   ctx.keys().forEach((translation) => {
