commit 918d2d87dd5a588a16e8ac63c9e7acbe0a4a037e
Author: David Cramer <dcramer@gmail.com>
Date:   Fri Oct 30 15:50:16 2015 -0700

    Improve Broadcasts
    
    - Change DropdownLink to fully render with state
    - Ensure state propagates for hasSeen
    - Poll for changes in Broadcasts

diff --git a/src/sentry/static/sentry/app/components/dropdownLink.jsx b/src/sentry/static/sentry/app/components/dropdownLink.jsx
index 6a47c4220d..c98b93cb97 100644
--- a/src/sentry/static/sentry/app/components/dropdownLink.jsx
+++ b/src/sentry/static/sentry/app/components/dropdownLink.jsx
@@ -1,5 +1,5 @@
+import jQuery from 'jquery';
 import React from 'react';
-import ReactDOM from 'react-dom';
 import classNames from 'classnames';
 
 require('bootstrap/js/dropdown');
@@ -19,40 +19,48 @@ const DropdownLink = React.createClass({
       caret: true,
     };
   },
-
-  isOpen() {
-    return ReactDOM.findDOMNode(this).classList.contains('open');
-  },
-
-  close() {
-    ReactDOM.findDOMNode(this).classList.remove('open');
+  getInitialState() {
+    return {
+      isOpen: false,
+    };
   },
 
-  onToggle(e) {
-    if (this.isOpen()) {
-      if (this.props.onOpen) {
+  componentDidMount() {
+    jQuery(this.refs.dropdownToggle).dropdown();
+    jQuery(this.refs.dropdownToggle.parentNode).on(
+      'shown.bs.dropdown', (e) => {
+        this.setState({
+          isOpen: true,
+        });
         this.props.onOpen(e);
-      }
-    } else {
-      if (this.props.onClose) {
+      }).on(
+      'hidden.bs.dropdown', (e) => {
+        this.setState({
+          isOpen: false,
+        });
         this.props.onClose(e);
-      }
-    }
+      });
+  },
+
+  close() {
+    this.setState({isOpen: false});
   },
 
   render() {
     let className = classNames({
-      'dropdown-toggle': true,
       'disabled': this.props.disabled,
     });
 
     let topLevelClasses = classNames({
       'dropdown' : true,
+      'open': this.state.isOpen,
     });
 
     return (
       <span className={classNames(this.props.topLevelClasses, topLevelClasses)}>
-        <a className={classNames(this.props.className, className)} data-toggle="dropdown" onClick={this.onToggle}>
+        <a className={classNames(this.props.className, className)}
+           data-toggle="dropdown"
+           ref="dropdownToggle">
           {this.props.title}
           {this.props.caret &&
             <i className="icon-arrow-down" />
diff --git a/src/sentry/static/sentry/app/components/header/broadcasts.jsx b/src/sentry/static/sentry/app/components/header/broadcasts.jsx
index 9ecbab93fc..114cc0c566 100644
--- a/src/sentry/static/sentry/app/components/header/broadcasts.jsx
+++ b/src/sentry/static/sentry/app/components/header/broadcasts.jsx
@@ -19,16 +19,23 @@ var Broadcasts = React.createClass({
 
   componentWillUnmount() {
     if (this.timer) {
-      clearTimeout(this.timer);
+      window.clearTimeout(this.timer);
       this.timer = null;
     }
+    if (this.poller) {
+      window.clearTimeout(this.poller);
+      this.poller = null;
+    }
   },
 
   remountComponent() {
     this.setState(this.getInitialState(), this.fetchData);
   },
 
-  fetchData() {
+  fetchData(callback) {
+    if (this.poller) {
+      window.clearTimeout(this.poller);
+    }
     api.request('/broadcasts/', {
       method: 'GET',
       success: (data) => {
@@ -36,12 +43,14 @@ var Broadcasts = React.createClass({
           broadcasts: data,
           loading: false
         });
+        this.poller = window.setTimeout(this.fetchData, 60000);
       },
       error: () => {
         this.setState({
           loading: false,
           error: true
         });
+        this.poller = window.setTimeout(this.fetchData, 60000);
       }
     });
   },
@@ -74,8 +83,11 @@ var Broadcasts = React.createClass({
         hasSeen: '1'
       },
       success: () => {
-        this.state.broadcasts.forEach((item) => {
-          item.hasSeen = true;
+        this.setState({
+          broadcasts: this.state.broadcasts.map((item) => {
+            item.hasSeen = true;
+            return item;
+          })
         });
       },
     });
@@ -88,7 +100,6 @@ var Broadcasts = React.createClass({
     }).length;
 
     let title = <span className="icon-globe" />;
-
     return (
       <DropdownLink
           topLevelClasses={`broadcasts ${this.props.className || ''} ${unseenCount && 'unseen'}`}
diff --git a/src/sentry/static/sentry/less/layout.less b/src/sentry/static/sentry/less/layout.less
index 97cde41587..4e8d14f1b2 100644
--- a/src/sentry/static/sentry/less/layout.less
+++ b/src/sentry/static/sentry/less/layout.less
@@ -122,7 +122,7 @@ header {
     }
   }
 
-  .dropdown-toggle {
+  .dropdown {
     display: block;
     float: left;
     height: 40px;
@@ -145,7 +145,7 @@ header {
   }
 
   .dropdown.open {
-    .dropdown-toggle {
+    .dropdown {
       color: #fff;
       background: rgba(0,0,0, .3);
     }
@@ -211,7 +211,7 @@ header {
 }
 
 .range-picker {
-  .dropdown-toggle {
+  .dropdown {
     font-size: 18px;
     font-weight: 600;
 
diff --git a/src/sentry/static/sentry/less/shared-components.less b/src/sentry/static/sentry/less/shared-components.less
index 97325c909e..cbbc6f195d 100644
--- a/src/sentry/static/sentry/less/shared-components.less
+++ b/src/sentry/static/sentry/less/shared-components.less
@@ -96,7 +96,7 @@
   }
 }
 
-.btn-group.open .dropdown-toggle {
+.btn-group.open .dropdown {
   box-shadow: none;
 }
 
@@ -992,7 +992,7 @@ table.integrations {
 }
 
 .project-dropdown {
-  .dropdown-toggle {
+  .dropdown {
     border: 1px solid darken(@trim, 6);
     box-shadow: 0 1px 0 rgba(0, 0, 0, .03);
     border-radius: 3px;
@@ -1100,7 +1100,7 @@ table.integrations {
     }
   }
 
-  &.open .dropdown-toggle {
+  &.open .dropdown {
     border-color: darken(@blue, 15);
     background-color: @blue;
     .icon-arrow-down {
@@ -1398,7 +1398,7 @@ table.integrations {
     height: 24px;
 
     &.open {
-      .dropdown-toggle {
+      .dropdown {
         color: @gray-dark;
       }
     }
@@ -1419,7 +1419,7 @@ table.integrations {
     top: -1px;
   }
 
-  .dropdown-toggle {
+  .dropdown {
     color: inherit;
 
     .avatar + span, .icon-user + span {
diff --git a/src/sentry/static/sentry/less/stream.less b/src/sentry/static/sentry/less/stream.less
index 5aaf3eb604..084312d83c 100644
--- a/src/sentry/static/sentry/less/stream.less
+++ b/src/sentry/static/sentry/less/stream.less
@@ -82,7 +82,7 @@
     }
   }
 
-  .dropdown-toggle {
+  .dropdown {
     box-shadow: none !important;
   }
 
@@ -123,7 +123,7 @@
   > .btn {
     color: inherit;
     background: rgba(255,255,255, .85);
-    &.dropdown-toggle {
+    &.dropdown {
       background: none;
     }
   }
@@ -562,12 +562,12 @@
     margin-bottom: 0;
     font-size: 14px;
 
-   .dropdown-toggle {
+   .dropdown {
       line-height: 38px;
       color: @gray;
     }
 
-    .dropdown.open .dropdown-toggle {
+    .dropdown.open .dropdown {
       color: @gray-dark;
     }
   }
