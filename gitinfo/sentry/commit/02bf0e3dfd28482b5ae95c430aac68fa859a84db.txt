commit 02bf0e3dfd28482b5ae95c430aac68fa859a84db
Author: Mark Story <mark@sentry.io>
Date:   Wed Jul 8 11:28:33 2020 -0400

    ref(discover) Simplify details views by using AsyncComponent better (#19754)
    
    Remove a wrapper component that we don't really need if we use
    AsyncComponent well.

diff --git a/src/sentry/static/sentry/app/views/eventsV2/eventDetails/content.tsx b/src/sentry/static/sentry/app/views/eventsV2/eventDetails/content.tsx
index 1aa436ba53..c713a9235f 100644
--- a/src/sentry/static/sentry/app/views/eventsV2/eventDetails/content.tsx
+++ b/src/sentry/static/sentry/app/views/eventsV2/eventDetails/content.tsx
@@ -136,10 +136,10 @@ class EventDetailsContent extends AsyncComponent<Props, State> {
     const {event} = this.state;
 
     if (!event) {
-      return this.renderWrapper(<NotFound />);
+      return <NotFound />;
     }
 
-    return this.renderWrapper(this.renderContent(event));
+    return this.renderContent(event);
   }
 
   renderContent(event: Event) {
@@ -262,63 +262,26 @@ class EventDetailsContent extends AsyncComponent<Props, State> {
     );
 
     if (notFound) {
-      return this.renderWrapper(<NotFound />);
+      return <NotFound />;
     }
     if (permissionDenied) {
-      return this.renderWrapper(
+      return (
         <LoadingError message={t('You do not have permission to view that event.')} />
       );
     }
 
-    return this.renderWrapper(super.renderError(error, true, true));
+    return super.renderError(error, true, true);
   }
 
-  renderLoading() {
-    return this.renderWrapper(super.renderLoading());
-  }
-
-  // TODO(mark) convert this its sibling in performance to use renderComponent() provided by asynccomponent.
-  renderWrapper(children: React.ReactNode) {
-    const {organization, location, eventView} = this.props;
+  renderComponent() {
+    const {eventView, organization} = this.props;
     const {event} = this.state;
 
-    return (
-      <EventDetailsWrapper
-        organization={organization}
-        location={location}
-        eventView={eventView}
-        event={event}
-      >
-        {children}
-      </EventDetailsWrapper>
-    );
-  }
-}
-
-type EventDetailsWrapperProps = {
-  organization: Organization;
-  location: Location;
-  eventView: EventView;
-  event: Event | undefined;
-  children: React.ReactNode;
-};
-
-class EventDetailsWrapper extends React.Component<EventDetailsWrapperProps> {
-  getDocumentTitle = (): string => {
-    const {event, eventView} = this.props;
-
-    return generateTitle({
-      eventView,
-      event,
-    });
-  };
-
-  render() {
-    const {organization, children} = this.props;
+    const title = generateTitle({eventView, event});
 
     return (
-      <SentryDocumentTitle title={this.getDocumentTitle()} objSlug={organization.slug}>
-        <React.Fragment>{children}</React.Fragment>
+      <SentryDocumentTitle title={title} objSlug={organization.slug}>
+        {super.renderComponent()}
       </SentryDocumentTitle>
     );
   }
diff --git a/src/sentry/static/sentry/app/views/performance/transactionDetails/content.tsx b/src/sentry/static/sentry/app/views/performance/transactionDetails/content.tsx
index cb37767e33..3d09c2b881 100644
--- a/src/sentry/static/sentry/app/views/performance/transactionDetails/content.tsx
+++ b/src/sentry/static/sentry/app/views/performance/transactionDetails/content.tsx
@@ -99,10 +99,10 @@ class EventDetailsContent extends AsyncComponent<Props, State> {
     const {event} = this.state;
 
     if (!event) {
-      return this.renderWrapper(<NotFound />);
+      return <NotFound />;
     }
 
-    return this.renderWrapper(this.renderContent(event));
+    return this.renderContent(event);
   }
 
   renderContent(event: Event) {
@@ -192,22 +192,18 @@ class EventDetailsContent extends AsyncComponent<Props, State> {
     );
 
     if (notFound) {
-      return this.renderWrapper(<NotFound />);
+      return <NotFound />;
     }
     if (permissionDenied) {
-      return this.renderWrapper(
+      return (
         <LoadingError message={t('You do not have permission to view that event.')} />
       );
     }
 
-    return this.renderWrapper(super.renderError(error, true, true));
+    return super.renderError(error, true, true);
   }
 
-  renderLoading() {
-    return this.renderWrapper(super.renderLoading());
-  }
-
-  renderWrapper(children: React.ReactNode) {
+  renderComponent() {
     const {organization} = this.props;
 
     return (
@@ -215,7 +211,7 @@ class EventDetailsContent extends AsyncComponent<Props, State> {
         title={t('Performance - Event Details')}
         objSlug={organization.slug}
       >
-        <React.Fragment>{children}</React.Fragment>
+        {super.renderComponent()}
       </SentryDocumentTitle>
     );
   }
