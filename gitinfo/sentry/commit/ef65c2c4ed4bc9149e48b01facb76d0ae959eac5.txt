commit ef65c2c4ed4bc9149e48b01facb76d0ae959eac5
Author: Ted Kaemming <ted@kaemming.com>
Date:   Thu Nov 19 17:20:05 2015 -0800

    First stab at adding a digest settings form.

diff --git a/src/sentry/templates/sentry/project-notifications.html b/src/sentry/templates/sentry/project-notifications.html
index 026a44cb9c..7eb161c41a 100644
--- a/src/sentry/templates/sentry/project-notifications.html
+++ b/src/sentry/templates/sentry/project-notifications.html
@@ -36,6 +36,19 @@
       </div>
     </div>
 
+    <div class="box">
+      <div class="box-header">
+        <h3>{% trans "Digests" %}</h3>
+      </div>
+      <div class="box-content with-padding">
+        {{ digests_form|as_crispy_errors }}
+
+        {% for field in digests_form %}
+            {{ field|as_crispy_field }}
+        {% endfor %}
+      </div>
+    </div>
+
     <fieldset class="form-actions">
       <button type="submit" class="btn btn-primary btn-lg">{% trans "Save Changes" %}</button>
     </fieldset>
diff --git a/src/sentry/web/forms/projects.py b/src/sentry/web/forms/projects.py
index ab5d083082..7f8be2eb41 100644
--- a/src/sentry/web/forms/projects.py
+++ b/src/sentry/web/forms/projects.py
@@ -12,6 +12,7 @@ from django.conf import settings
 from django.utils.translation import ugettext_lazy as _
 
 from sentry.models import ProjectOption
+from sentry.web.forms.fields import RangeField
 
 
 class NotificationSettingsForm(forms.Form):
@@ -20,6 +21,25 @@ class NotificationSettingsForm(forms.Form):
         help_text=_('Choose a custom prefix for emails from this project.'))
 
 
+class DigestSettingsForm(forms.Form):
+    minimum_delay = RangeField(
+        label=_('Minimum delay between digest delivery'),
+        required=False,
+        min_value=1, max_value=60,
+    )
+    maximum_delay = RangeField(
+        label=_('Maximum delay between digest delivery'),
+        required=False,
+        min_value=1, max_value=60,
+    )
+
+    def clean(self):
+        cleaned = super(DigestSettingsForm, self).clean()
+        if cleaned['minimum_delay'] > cleaned['minimum_delay']:
+            raise forms.ValidationError(_('Minimum delay must be greater or equal to maximum delay.'))
+        return cleaned
+
+
 class ProjectQuotasForm(forms.Form):
     per_minute = forms.CharField(
         label=_('Maximum events per minute'),
diff --git a/src/sentry/web/frontend/project_notifications.py b/src/sentry/web/frontend/project_notifications.py
index b770ecca6c..7eb7dbd871 100644
--- a/src/sentry/web/frontend/project_notifications.py
+++ b/src/sentry/web/frontend/project_notifications.py
@@ -7,8 +7,12 @@ from django.utils.safestring import mark_safe
 from django.utils.translation import ugettext_lazy as _
 
 from sentry import constants
+from sentry.app import digests
 from sentry.plugins import plugins, NotificationPlugin
-from sentry.web.forms.projects import NotificationSettingsForm
+from sentry.web.forms.projects import (
+    DigestSettingsForm,
+    NotificationSettingsForm,
+)
 from sentry.web.frontend.base import ProjectView
 
 OK_SETTINGS_SAVED = _('Your settings were saved successfully.')
@@ -49,6 +53,20 @@ class ProjectNotificationsView(ProjectView):
             return HttpResponseRedirect(request.path)
 
         if op == 'save-settings':
+            digests_form = DigestSettingsForm(
+                data=request.POST,
+                prefix='digests',
+                initial={
+                    'minimum_delay': project.get_option(
+                        'digests:mail:minimum_delay',
+                        digests.minimum_delay / 60,
+                    ),
+                    'maximum_delay': project.get_option(
+                        'digests:mail:maximum_delay',
+                        digests.maximum_delay / 60,
+                    ),
+                },
+            )
             general_form = NotificationSettingsForm(
                 data=request.POST,
                 prefix='general',
@@ -57,14 +75,28 @@ class ProjectNotificationsView(ProjectView):
                         'mail:subject_prefix', settings.EMAIL_SUBJECT_PREFIX),
                 },
             )
-            if general_form.is_valid():
-                project.update_option(
-                    'mail:subject_prefix', general_form.cleaned_data['subject_prefix'])
+            if general_form.is_valid() and digests_form.is_valid():
+                project.update_option('mail:subject_prefix', general_form.cleaned_data['subject_prefix'])
+                project.update_option('digests:mail:minimum_delay', digests_form.cleaned_data['minimum_delay'] * 60)
+                project.update_option('digests:mail:maximum_delay', digests_form.cleaned_data['maximum_delay'] * 60)
                 messages.add_message(
                     request, messages.SUCCESS,
                     OK_SETTINGS_SAVED)
                 return HttpResponseRedirect(request.path)
         else:
+            digests_form = DigestSettingsForm(
+                prefix='digests',
+                initial={
+                    'minimum_delay': project.get_option(
+                        'digests:mail:minimum_delay',
+                        digests.minimum_delay,
+                    ) / 60,
+                    'maximum_delay': project.get_option(
+                        'digests:mail:maximum_delay',
+                        digests.maximum_delay,
+                    ) / 60,
+                },
+            )
             general_form = NotificationSettingsForm(
                 prefix='general',
                 initial={
@@ -95,6 +127,7 @@ class ProjectNotificationsView(ProjectView):
             'enabled_plugins': enabled_plugins,
             'other_plugins': other_plugins,
             'general_form': general_form,
+            'digests_form': digests_form,
         }
 
         return self.respond('sentry/project-notifications.html', context)
