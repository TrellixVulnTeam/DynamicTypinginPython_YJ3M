commit 95076b4eec66cdf2ccb397891802d0cbd66bf2a3
Author: Jess MacQueen <macqueen@users.noreply.github.com>
Date:   Wed Nov 14 16:02:06 2018 -0800

    fix(jira): Handle Jira API errors when searching for issues (#10470)

diff --git a/src/sentry/integrations/jira/integration.py b/src/sentry/integrations/jira/integration.py
index 7c1200a44c..cc254e853f 100644
--- a/src/sentry/integrations/jira/integration.py
+++ b/src/sentry/integrations/jira/integration.py
@@ -296,7 +296,10 @@ class JiraIntegration(IntegrationInstallation, IssueSyncMixin):
         return self.get_client().create_comment(issue_id, quoted_comment)
 
     def search_issues(self, query):
-        return self.get_client().search_issues(query)
+        try:
+            return self.get_client().search_issues(query)
+        except ApiError as e:
+            self.raise_error(e)
 
     def make_choices(self, x):
         return [(y['id'], y['name'] if 'name' in y else y['value']) for y in x] if x else []
diff --git a/src/sentry/integrations/jira/search.py b/src/sentry/integrations/jira/search.py
index a0024244ad..eece8a2502 100644
--- a/src/sentry/integrations/jira/search.py
+++ b/src/sentry/integrations/jira/search.py
@@ -5,7 +5,7 @@ from six.moves.urllib.parse import parse_qs, unquote_plus, urlencode, urlsplit,
 from rest_framework.response import Response
 
 from sentry.api.bases.integration import IntegrationEndpoint
-from sentry.integrations.exceptions import ApiError, ApiUnauthorized
+from sentry.integrations.exceptions import ApiError, ApiUnauthorized, IntegrationError
 from sentry.models import Integration
 
 
@@ -44,7 +44,10 @@ class JiraSearchEndpoint(IntegrationEndpoint):
         if field == 'externalIssue':
             if not query:
                 return Response([])
-            resp = installation.search_issues(query)
+            try:
+                resp = installation.search_issues(query)
+            except IntegrationError as exc:
+                return Response({'detail': exc.message}, status=400)
             return Response([{
                 'label': '(%s) %s' % (i['key'], i['fields']['summary']),
                 'value': i['key']
diff --git a/tests/sentry/integrations/jira/test_search_endpoint.py b/tests/sentry/integrations/jira/test_search_endpoint.py
index 70c29b4a3a..9105ab3217 100644
--- a/tests/sentry/integrations/jira/test_search_endpoint.py
+++ b/tests/sentry/integrations/jira/test_search_endpoint.py
@@ -6,6 +6,7 @@ from mock import patch
 
 from django.core.urlresolvers import reverse
 
+from sentry.integrations.exceptions import IntegrationError
 from sentry.integrations.jira import JiraIntegration
 from sentry.models import Integration
 from sentry.testutils import APITestCase
@@ -51,7 +52,27 @@ class JiraSearchEndpointTest(APITestCase):
         path = reverse('sentry-extensions-jira-search', args=[org.slug, integration.id])
 
         resp = self.client.get('%s?field=externalIssue&query=test' % (path,))
+        assert resp.status_code == 200
         assert resp.data == [
             {'label': '(HSP-1) this is a test issue summary', 'value': 'HSP-1'}
         ]
         mock_search_issues.assert_called_with('test')
+
+    @patch.object(JiraIntegration, 'search_issues',
+                  side_effect=IntegrationError('Oh no, something went wrong'))
+    def test_error(self, mock_search_issues):
+        org = self.organization
+        self.login_as(self.user)
+
+        integration = Integration.objects.create(
+            provider='jira',
+            name='Example Jira',
+        )
+        integration.add_organization(org, self.user)
+
+        path = reverse('sentry-extensions-jira-search', args=[org.slug, integration.id])
+
+        resp = self.client.get('%s?field=externalIssue&query=test' % (path,))
+        assert resp.status_code == 400
+        assert resp.data == {'detail': 'Oh no, something went wrong'}
+        mock_search_issues.assert_called_with('test')
