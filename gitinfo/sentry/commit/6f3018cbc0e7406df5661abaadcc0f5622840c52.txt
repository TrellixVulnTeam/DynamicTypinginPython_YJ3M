commit 6f3018cbc0e7406df5661abaadcc0f5622840c52
Author: Lyn Nagara <lyn.nagara@gmail.com>
Date:   Mon May 7 16:09:39 2018 -0700

    fix(dashboard): Do not render team list if user does not have team:read access (#8346)

diff --git a/src/sentry/static/sentry/app/views/organizationDashboard/index.jsx b/src/sentry/static/sentry/app/views/organizationDashboard/index.jsx
index 3d3343e076..5b26dddc2d 100644
--- a/src/sentry/static/sentry/app/views/organizationDashboard/index.jsx
+++ b/src/sentry/static/sentry/app/views/organizationDashboard/index.jsx
@@ -5,6 +5,7 @@ import createReactClass from 'create-react-class';
 import {Flex, Box} from 'grid-emotion';
 import styled from 'react-emotion';
 
+import SentryTypes from 'app/proptypes';
 import AsyncComponent from 'app/components/asyncComponent';
 import OrganizationState from 'app/mixins/organizationState';
 import getProjectsByTeams from 'app/utils/getProjectsByTeams';
@@ -23,6 +24,7 @@ class Dashboard extends AsyncComponent {
   static propTypes = {
     teams: PropTypes.array,
     projects: PropTypes.array,
+    organization: SentryTypes.Organization,
   };
 
   componentWillMount() {
@@ -81,13 +83,15 @@ class Dashboard extends AsyncComponent {
   };
 
   renderBody() {
-    const {teams, projects, params} = this.props;
+    const {teams, projects, params, organization} = this.props;
     const sortedProjects = sortProjects(projects);
     const {projectsByTeam} = getProjectsByTeams(teams, sortedProjects);
     const teamSlugs = Object.keys(projectsByTeam).sort();
 
     const favorites = projects.filter(project => project.isBookmarked);
 
+    const hasTeamAccess = new Set(organization.access).has('team:read');
+
     return (
       <React.Fragment>
         {favorites.length > 0 && (
@@ -107,7 +111,7 @@ class Dashboard extends AsyncComponent {
             <TeamSection data-test-id="team" key={slug} showBorder={showBorder}>
               <TeamTitleBar justify="space-between" align="center">
                 <TeamName>{`#${slug}`}</TeamName>
-                <TeamMembers teamId={slug} orgId={params.orgId} />
+                {hasTeamAccess && <TeamMembers teamId={slug} orgId={params.orgId} />}
               </TeamTitleBar>
               <ProjectCards>
                 {projectsByTeam[slug].map(this.renderProjectCard)}
@@ -155,7 +159,7 @@ const OrganizationDashboard = createReactClass({
       return (
         <Flex flex="1" direction="column">
           <ProjectNav />
-          <Dashboard {...this.props} />
+          <Dashboard organization={this.context.organization} {...this.props} />
         </Flex>
       );
     } else {
diff --git a/tests/js/spec/views/organizationDashboard/index.spec.jsx b/tests/js/spec/views/organizationDashboard/index.spec.jsx
index df3654bd93..7982ae089a 100644
--- a/tests/js/spec/views/organizationDashboard/index.spec.jsx
+++ b/tests/js/spec/views/organizationDashboard/index.spec.jsx
@@ -21,7 +21,12 @@ describe('OrganizationDashboard', function() {
       const projects = [];
 
       const wrapper = shallow(
-        <Dashboard teams={teams} projects={projects} params={{orgId: 'org-slug'}} />,
+        <Dashboard
+          teams={teams}
+          projects={projects}
+          organization={TestStubs.Organization()}
+          params={{orgId: 'org-slug'}}
+        />,
         TestStubs.routerContext()
       );
       const emptyState = wrapper.find('EmptyState');
@@ -47,7 +52,12 @@ describe('OrganizationDashboard', function() {
       const projects = [TestStubs.Project({teams})];
 
       const wrapper = shallow(
-        <Dashboard teams={teams} projects={projects} params={{orgId: 'org-slug'}} />,
+        <Dashboard
+          teams={teams}
+          projects={projects}
+          organization={TestStubs.Organization()}
+          params={{orgId: 'org-slug'}}
+        />,
         TestStubs.routerContext()
       );
       const emptyState = wrapper.find('EmptyState');
@@ -63,7 +73,12 @@ describe('OrganizationDashboard', function() {
       const projects = [TestStubs.Project({teams, isBookmarked: true})];
 
       const wrapper = shallow(
-        <Dashboard teams={teams} projects={projects} params={{orgId: 'org-slug'}} />,
+        <Dashboard
+          teams={teams}
+          projects={projects}
+          organization={TestStubs.Organization()}
+          params={{orgId: 'org-slug'}}
+        />,
         TestStubs.routerContext()
       );
       const favorites = wrapper.find('[data-test-id="favorites"]');
@@ -125,7 +140,12 @@ describe('OrganizationDashboard', function() {
       });
 
       const wrapper = shallow(
-        <Dashboard teams={teams} projects={projects} params={{orgId: 'org-slug'}} />,
+        <Dashboard
+          teams={teams}
+          projects={projects}
+          organization={TestStubs.Organization()}
+          params={{orgId: 'org-slug'}}
+        />,
         TestStubs.routerContext()
       );
 
