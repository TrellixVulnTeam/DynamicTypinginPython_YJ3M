commit 5d4e7a97ef8d69c21c3193d1531e6612f71f7d27
Author: James Cunningham <cunninghamjt09@gmail.com>
Date:   Tue Nov 13 15:11:27 2018 -0800

    Revert "feat: Include triggering rules in webhook payload" (#10578)
    
    * Revert "test(js): Fix jsdom window.performance.mark (#10573)"
    
    This reverts commit b149ebd8601b3c7a2133c197e10fd6cc37d5795c.
    
    * Revert "use named arguments and allow kwargs"
    
    This reverts commit 6ba98ef63f7de647c8428292a15df65d7bc7ed06.
    
    * Revert "Use list comprehension"
    
    This reverts commit 27f52ea116d9c035a6707215c73fbfdf44928898.
    
    * Revert "update test"
    
    This reverts commit 3cf9299a4bbdbd68f6c22266643ff2712e0aef6a.
    
    * Revert "feat: Include triggering rules in webhook payload"
    
    This reverts commit c621d1697f0c6951f6f89087166e1cba9e032703.

diff --git a/src/sentry/plugins/bases/notify.py b/src/sentry/plugins/bases/notify.py
index 6409f0af89..e42c7fe0bb 100644
--- a/src/sentry/plugins/bases/notify.py
+++ b/src/sentry/plugins/bases/notify.py
@@ -66,8 +66,7 @@ class NotificationPlugin(Plugin):
 
     def notify(self, notification):
         event = notification.event
-        return self.notify_users(event.group, event, triggering_rules=[
-                                 r.label for r in notification.rules])
+        return self.notify_users(event.group, event)
 
     def rule_notify(self, event, futures):
         rules = []
@@ -118,7 +117,7 @@ class NotificationPlugin(Plugin):
 
         self.logger.info('notification.%s' % log_event, extra=extra)
 
-    def notify_users(self, group, event, triggering_rules, fail_silently=False, **kwargs):
+    def notify_users(self, group, event, fail_silently=False):
         raise NotImplementedError
 
     def notify_about_activity(self, activity):
diff --git a/src/sentry/plugins/sentry_webhooks/plugin.py b/src/sentry/plugins/sentry_webhooks/plugin.py
index 5261451633..51541f6201 100644
--- a/src/sentry/plugins/sentry_webhooks/plugin.py
+++ b/src/sentry/plugins/sentry_webhooks/plugin.py
@@ -74,7 +74,7 @@ class WebHooksPlugin(notify.NotificationPlugin):
             }
         ]
 
-    def get_group_data(self, group, event, triggering_rules):
+    def get_group_data(self, group, event):
         data = {
             'id': six.text_type(group.id),
             'project': group.project.slug,
@@ -85,7 +85,6 @@ class WebHooksPlugin(notify.NotificationPlugin):
             'culprit': group.culprit,
             'message': event.get_legacy_message(),
             'url': group.get_absolute_url(),
-            'triggering_rules': triggering_rules,
         }
         data['event'] = dict(event.data or {})
         data['event']['tags'] = event.get_tags()
@@ -104,7 +103,7 @@ class WebHooksPlugin(notify.NotificationPlugin):
             verify_ssl=False,
         )
 
-    def notify_users(self, group, event, triggering_rules, fail_silently=False, **kwargs):
-        payload = self.get_group_data(group, event, triggering_rules)
+    def notify_users(self, group, event, fail_silently=False):
+        payload = self.get_group_data(group, event)
         for url in self.get_webhook_urls(group.project):
             safe_execute(self.send_webhook, url, payload, _with_transaction=False)
diff --git a/tests/sentry/plugins/sentry_webhooks/test_plugin.py b/tests/sentry/plugins/sentry_webhooks/test_plugin.py
index ce14ac06a6..b942ff9058 100644
--- a/tests/sentry/plugins/sentry_webhooks/test_plugin.py
+++ b/tests/sentry/plugins/sentry_webhooks/test_plugin.py
@@ -40,7 +40,6 @@ class WebHooksPluginTest(TestCase):
         assert payload['message'] == 'Hello world'
         assert payload['event']['id'] == 24
         assert payload['event']['event_id'] == event.event_id
-        assert payload['triggering_rules'] == ['my rule']
 
     def test_webhook_validation(self):
         # Test that you can't sneak a bad domain into the list of webhooks
