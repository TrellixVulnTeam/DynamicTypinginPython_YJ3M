commit cb317dc668cab66d35f7d862e0c6c23a3aec5804
Author: Jan Michael Auer <jan.auer@sentry.io>
Date:   Wed May 15 11:17:08 2019 +0200

    ref(native): Do not compute caches in DIF upload (#13197)
    
    This removes ahead-of-time computation of Symcaches and CFI caches in Sentry during upload.
    
    Caches will still be computed just-in-time in process_event by get_symcaches and get_cficaches. However, as long as we keep symbolicator enabled, this will be dead code and should be removed in a subsequent refactor.

diff --git a/src/sentry/models/debugfile.py b/src/sentry/models/debugfile.py
index 4ab61a7312..bd269b945e 100644
--- a/src/sentry/models/debugfile.py
+++ b/src/sentry/models/debugfile.py
@@ -619,21 +619,6 @@ class DIFCache(object):
             return cficaches, dict((k, v) for k, v in conversion_errors.items())
         return cficaches
 
-    def generate_caches(self, project, dif, filepath=None):
-        """Generates a SymCache and CfiCache for the given debug information
-        file if it supports these formats. Otherwise, a no - op. The caches are
-        computed sequentially.
-        The first error to occur is returned, otherwise None.
-        """
-        if not dif.supports_caches:
-            return None
-
-        if filepath:
-            return self._generate_caches_impl(dif, filepath)
-
-        with dif.file.getfile(as_tempfile=True) as tf:
-            return self._generate_caches_impl(dif, tf.name)
-
     def fetch_difs(self, project, debug_ids, features=None):
         """Given some ids returns an id to path mapping for where the
         debug symbol files are on the FS.
@@ -654,26 +639,6 @@ class DIFCache(object):
 
         return rv
 
-    def _generate_caches_impl(self, dif, filepath):
-        _, _, error = self._update_cachefile(dif, filepath, ProjectSymCacheFile)
-        if error is not None:
-            return error
-
-        _, _, error = self._update_cachefile(dif, filepath, ProjectCfiCacheFile)
-
-        # CFI generation will never fail to the user.  We instead log it here
-        # for reference only.  This is because we have currently limited trust
-        # in our CFI generation and even without CFI information we can
-        # continue processing stacktraces.
-        if error is not None:
-            logger.warning('dsymfile.cfi-generation-failed', extra=dict(
-                error=error,
-                debug_id=dif.debug_id
-            ))
-            return None
-
-        return None
-
     def _get_caches_impl(self, project, debug_ids, cls, on_dif_referenced=None):
         # Fetch debug files first and invoke the callback if we need
         debug_ids = [six.text_type(debug_id).lower() for debug_id in debug_ids]
diff --git a/src/sentry/tasks/assemble.py b/src/sentry/tasks/assemble.py
index 338f899a69..111cfa4864 100644
--- a/src/sentry/tasks/assemble.py
+++ b/src/sentry/tasks/assemble.py
@@ -13,7 +13,7 @@ logger = logging.getLogger(__name__)
 @instrumented_task(name='sentry.tasks.assemble.assemble_dif', queue='assemble')
 def assemble_dif(project_id, name, checksum, chunks, **kwargs):
     from sentry.models import ChunkFileState, debugfile, Project, \
-        ProjectDebugFile, set_assemble_status, BadDif
+        set_assemble_status, BadDif
     from sentry.reprocessing import bump_reprocessing_revision
 
     with configure_scope() as scope:
@@ -62,16 +62,6 @@ def assemble_dif(project_id, name, checksum, chunks, **kwargs):
                 # revision instead.
                 bump_reprocessing_revision(project)
 
-                # Try to generate caches from this DIF immediately. If this
-                # fails, we can capture the error and report it to the uploader.
-                # Also, we remove the file to prevent it from erroring again.
-                error = ProjectDebugFile.difcache.generate_caches(project, dif, temp_file.name)
-                if error is not None:
-                    set_assemble_status(project, checksum, ChunkFileState.ERROR,
-                                        detail=error)
-                    indicate_success = False
-                    dif.delete()
-
             if indicate_success:
                 set_assemble_status(project, checksum, ChunkFileState.OK,
                                     detail=serialize(dif))
diff --git a/tests/sentry/tasks/test_assemble.py b/tests/sentry/tasks/test_assemble.py
index 12b8e6eb3b..a8218f2127 100644
--- a/tests/sentry/tasks/test_assemble.py
+++ b/tests/sentry/tasks/test_assemble.py
@@ -53,7 +53,7 @@ class AssembleTest(TestCase):
 
         assert get_assemble_status(self.project, total_checksum)[0] == ChunkFileState.ERROR
 
-    def test_dif_and_caches(self):
+    def test_dif(self):
         sym_file = self.load_fixture('crash.sym')
         blob1 = FileBlob.from_file(ContentFile(sym_file))
         total_checksum = sha1(sym_file).hexdigest()
@@ -71,8 +71,6 @@ class AssembleTest(TestCase):
         ).get()
 
         assert dif.file.headers == {'Content-Type': 'text/x-breakpad'}
-        assert dif.projectsymcachefile.exists()
-        assert dif.projectcficachefile.exists()
 
     def test_assemble_from_files(self):
         files = []
