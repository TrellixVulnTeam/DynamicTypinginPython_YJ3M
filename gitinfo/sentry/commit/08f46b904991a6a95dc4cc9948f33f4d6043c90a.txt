commit 08f46b904991a6a95dc4cc9948f33f4d6043c90a
Author: Yuri Baburov <burchik@gmail.com>
Date:   Sat Dec 4 01:59:52 2010 +0600

    Queue only message to send.

diff --git a/sentry/client/async.py b/sentry/client/async.py
index cbddae7a73..c376eafbff 100644
--- a/sentry/client/async.py
+++ b/sentry/client/async.py
@@ -27,10 +27,10 @@ class SentryAsyncClient(SentryClient):
             if record is self._terminator:
                 self.running = False
                 break
-            self.send_sync(**record)
+            self.send_remote_sync(**record)
 
-    def send_sync(self, **kwargs):
-        super(SentryAsyncClient, self).send(**kwargs)
+    def send_remote_sync(self, **kwargs):
+        super(SentryAsyncClient, self).send_remote(**kwargs)
 
-    def send(self, **kwargs):
+    def send_remote(self, **kwargs):
         self.queue.put_nowait(kwargs)
diff --git a/sentry/client/base.py b/sentry/client/base.py
index 30f8f16aa1..9da289c42d 100644
--- a/sentry/client/base.py
+++ b/sentry/client/base.py
@@ -51,6 +51,9 @@ class SentryClient(object):
 
         return self.send(**kwargs)
 
+    def send_remote(self, url=None, data=None):
+        return urlread(url, post=data, timeout=conf.REMOTE_TIMEOUT)
+
     def send(self, **kwargs):
         if conf.REMOTE_URL:
             for url in conf.REMOTE_URL:
@@ -59,7 +62,7 @@ class SentryClient(object):
                     'key': conf.KEY,
                 }
                 try:
-                    urlread(url, post=data, timeout=conf.REMOTE_TIMEOUT)
+                    self.send_remote(url=url, data=data)
                 except urllib2.HTTPError, e:
                     body = e.read()
                     logger.error('Unable to reach Sentry log server: %s (url: %%s, body: %%s)' % (e,), url, body,
