commit a40923211083f12e9a685cf9713205889c951157
Author: Billy Vong <billyvg@users.noreply.github.com>
Date:   Thu Apr 11 13:14:45 2019 -0700

    ref(saved-searches): Rename to "SavedSearches" to be consistent with actionCreator (#12736)

diff --git a/src/sentry/static/sentry/app/actionCreators/savedSearches.jsx b/src/sentry/static/sentry/app/actionCreators/savedSearches.jsx
index 6a41281105..6ee8ad2706 100644
--- a/src/sentry/static/sentry/app/actionCreators/savedSearches.jsx
+++ b/src/sentry/static/sentry/app/actionCreators/savedSearches.jsx
@@ -1,6 +1,6 @@
 import {MAX_RECENT_SEARCHES, SEARCH_TYPES} from 'app/constants';
 import handleXhrErrorResponse from 'app/utils/handleXhrErrorResponse';
-import SavedSearchActions from 'app/actions/savedSearchActions';
+import SavedSearchesActions from 'app/actions/savedSearchesActions';
 
 export function fetchSavedSearches(api, orgId, useOrgSavedSearches = false) {
   const url = `/organizations/${orgId}/searches/`;
@@ -16,7 +16,7 @@ export function fetchSavedSearches(api, orgId, useOrgSavedSearches = false) {
   });
 
   promise.then(res => {
-    SavedSearchActions.updateSavedSearches(res);
+    SavedSearchesActions.updateSavedSearches(res);
   });
 
   return promise;
diff --git a/src/sentry/static/sentry/app/actions/savedSearchActions.jsx b/src/sentry/static/sentry/app/actions/savedSearchesActions.jsx
similarity index 100%
rename from src/sentry/static/sentry/app/actions/savedSearchActions.jsx
rename to src/sentry/static/sentry/app/actions/savedSearchesActions.jsx
diff --git a/src/sentry/static/sentry/app/stores/savedSearchStore.jsx b/src/sentry/static/sentry/app/stores/savedSearchesStore.jsx
similarity index 67%
rename from src/sentry/static/sentry/app/stores/savedSearchStore.jsx
rename to src/sentry/static/sentry/app/stores/savedSearchesStore.jsx
index d9b59d17ff..0b168fd4e6 100644
--- a/src/sentry/static/sentry/app/stores/savedSearchStore.jsx
+++ b/src/sentry/static/sentry/app/stores/savedSearchesStore.jsx
@@ -1,12 +1,12 @@
 import Reflux from 'reflux';
 
-import SavedSearchActions from 'app/actions/savedSearchActions';
+import SavedSearchesActions from 'app/actions/savedSearchesActions';
 
 const SavedSearchesStore = Reflux.createStore({
   init() {
     this.reset();
-    this.listenTo(SavedSearchActions.loadSavedSearches, this.onLoadSavedSearches);
-    this.listenTo(SavedSearchActions.updateSavedSearches, this.onUpdateSavedSearches);
+    this.listenTo(SavedSearchesActions.loadSavedSearches, this.onLoadSavedSearches);
+    this.listenTo(SavedSearchesActions.updateSavedSearches, this.onUpdateSavedSearches);
   },
 
   reset() {
diff --git a/tests/js/spec/stores/savedSearchStore.spec.jsx b/tests/js/spec/stores/savedSearchesStore.spec.jsx
similarity index 61%
rename from tests/js/spec/stores/savedSearchStore.spec.jsx
rename to tests/js/spec/stores/savedSearchesStore.spec.jsx
index 7553c841ad..3035802df0 100644
--- a/tests/js/spec/stores/savedSearchStore.spec.jsx
+++ b/tests/js/spec/stores/savedSearchesStore.spec.jsx
@@ -1,8 +1,8 @@
-import SavedSearchStore from 'app/stores/savedSearchStore';
+import SavedSearchesStore from 'app/stores/savedSearchesStore';
 import {fetchSavedSearches} from 'app/actionCreators/savedSearches';
 import {Client} from 'app/api';
 
-describe('SavedSearchStore', function() {
+describe('SavedSearchesStore', function() {
   beforeEach(function() {
     Client.addMockResponse({
       url: '/organizations/org-1/searches/',
@@ -15,14 +15,14 @@ describe('SavedSearchStore', function() {
   });
 
   it('get', function() {
-    expect(SavedSearchStore.get()).toEqual({isLoading: true, savedSearches: []});
+    expect(SavedSearchesStore.get()).toEqual({isLoading: true, savedSearches: []});
   });
 
   it('fetching saved searches updates store', async function() {
     const api = new Client();
     fetchSavedSearches(api, 'org-1');
     await tick();
-    expect(SavedSearchStore.get().savedSearches).toHaveLength(2);
-    expect(SavedSearchStore.get().isLoading).toBe(false);
+    expect(SavedSearchesStore.get().savedSearches).toHaveLength(2);
+    expect(SavedSearchesStore.get().isLoading).toBe(false);
   });
 });
