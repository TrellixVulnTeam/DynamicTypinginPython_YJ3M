commit c2be51293fcf69c5a274df19957719e4819cbee3
Author: Max Bittker <maxbittker@gmail.com>
Date:   Tue Mar 27 12:01:54 2018 -0700

    feat(teams): allow editing team membership on own member details page (#7793)
    
    * allow editing team membership on own member details page
    
    * fix query

diff --git a/src/sentry/api/endpoints/organization_member_details.py b/src/sentry/api/endpoints/organization_member_details.py
index 6a284abcd3..cae627c438 100644
--- a/src/sentry/api/endpoints/organization_member_details.py
+++ b/src/sentry/api/endpoints/organization_member_details.py
@@ -136,11 +136,6 @@ class OrganizationMemberDetailsEndpoint(OrganizationEndpoint):
         except OrganizationMember.DoesNotExist:
             raise ResourceDoesNotExist
 
-        # You can't edit your own membership
-        if om.user == request.user:
-            return Response(
-                {'detail': 'You cannot make changes to your own membership.'}, status=400)
-
         serializer = OrganizationMemberSerializer(
             data=request.DATA, partial=True)
 
@@ -204,6 +199,12 @@ class OrganizationMemberDetailsEndpoint(OrganizationEndpoint):
             if not result['role'] in {r.id for r in allowed_roles}:
                 return Response(
                     {'role': 'You do not have permission to invite that role.'}, status=403)
+                # You can't edit your own role
+
+            if om.user == request.user and (result['role'] != om.role):
+                return Response(
+                    {'detail': 'You cannot make changes to your own role.'}, status=400)
+
             om.update(role=result['role'])
 
         context = self._serialize_member(om, request, allowed_roles)
diff --git a/src/sentry/api/serializers/models/organization_member.py b/src/sentry/api/serializers/models/organization_member.py
index 25f400a1f5..69b6bdfa0d 100644
--- a/src/sentry/api/serializers/models/organization_member.py
+++ b/src/sentry/api/serializers/models/organization_member.py
@@ -4,7 +4,7 @@ import six
 from collections import defaultdict
 
 from sentry.api.serializers import Serializer, register, serialize
-from sentry.models import OrganizationMember, OrganizationMemberTeam, Team
+from sentry.models import (OrganizationMember, OrganizationMemberTeam, Team, TeamStatus)
 
 
 @register(OrganizationMember)
@@ -44,7 +44,8 @@ class OrganizationMemberWithTeamsSerializer(OrganizationMemberSerializer):
                       self).get_attrs(item_list, user)
 
         member_team_map = list(OrganizationMemberTeam.objects.filter(
-            organizationmember__in=item_list).values(
+            organizationmember__in=item_list,
+            team__status=TeamStatus.VISIBLE).values(
             'organizationmember_id', 'team_id'))
 
         teams = {team.id: team for team in Team.objects.filter(
diff --git a/src/sentry/static/sentry/app/views/settings/organization/members/organizationMemberDetail.jsx b/src/sentry/static/sentry/app/views/settings/organization/members/organizationMemberDetail.jsx
index f0387dcb49..d295143194 100644
--- a/src/sentry/static/sentry/app/views/settings/organization/members/organizationMemberDetail.jsx
+++ b/src/sentry/static/sentry/app/views/settings/organization/members/organizationMemberDetail.jsx
@@ -132,9 +132,7 @@ class OrganizationMemberDetail extends AsyncView {
 
     let currentUser = ConfigStore.get('user');
     let isCurrentUser = currentUser.email === email;
-    let disabled = isCurrentUser;
-    let roleSelectDisabled = disabled;
-    let teamSelectDisabled = disabled;
+    let roleSelectDisabled = isCurrentUser;
 
     return (
       <div>
@@ -228,7 +226,6 @@ class OrganizationMemberDetail extends AsyncView {
 
         <TeamSelect
           teams={teams}
-          disabled={teamSelectDisabled}
           selectedTeams={new Set(member.teams)}
           toggleTeam={this.handleToggleTeam}
         />
