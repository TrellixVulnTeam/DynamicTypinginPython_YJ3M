commit 5cae61ee258002397f7de268e34ba7f10a751fab
Author: Matt Robenolt <matt@ydekproductions.com>
Date:   Tue Feb 27 13:39:46 2018 -0800

    fix(transfer): Also delete EnvironmentProject rows when moving to another org (#7322)

diff --git a/src/sentry/models/project.py b/src/sentry/models/project.py
index 6346b22ed8..5b9e97158e 100644
--- a/src/sentry/models/project.py
+++ b/src/sentry/models/project.py
@@ -284,7 +284,7 @@ class Project(Model):
 
     def transfer_to(self, team):
         # TODO(jess): refactor this to make it an org transfer only
-        from sentry.models import ProjectTeam, ReleaseProject
+        from sentry.models import ProjectTeam, ReleaseProject, EnvironmentProject
 
         organization = team.organization
         from_team_id = self.team_id
@@ -292,14 +292,6 @@ class Project(Model):
         old_org_id = self.organization_id
         org_changed = old_org_id != organization.id
 
-        # We only need to delete ReleaseProjects when moving to a different
-        # Organization. Releases are bound to Organization, so it's not realistic
-        # to keep this link unless we say, copied all Releases as well.
-        if org_changed:
-            ReleaseProject.objects.filter(
-                project_id=self.id,
-            ).delete()
-
         self.organization = organization
         self.team = team
 
@@ -317,6 +309,21 @@ class Project(Model):
                 team=team,
             )
 
+        # Both environments and releases are bound at an organization level.
+        # Due to this, when you transfer a project into another org, we have to
+        # handle this behavior somehow. We really only have two options here:
+        # * Copy over all releases/environments into the new org and handle de-duping
+        # * Delete the bindings and let them reform with new data.
+        # We're choosing to just delete the bindings since new data flowing in will
+        # recreate links correctly. The tradeoff is that historical data is
+        # lost, but this is a compromise we're willing to take and a side effect
+        # of allowing this feature.
+        if org_changed:
+            for model in ReleaseProject, EnvironmentProject:
+                model.objects.filter(
+                    project_id=self.id,
+                ).delete()
+
         ProjectTeam.objects.filter(project=self, team_id=from_team_id).update(team=team)
         # this is getting really gross, but make sure there aren't lingering associations
         # with old orgs or teams
