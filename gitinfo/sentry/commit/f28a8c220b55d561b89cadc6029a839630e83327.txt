commit f28a8c220b55d561b89cadc6029a839630e83327
Author: David Cramer <dcramer@gmail.com>
Date:   Mon Aug 31 13:42:47 2015 -0700

    Handle errors with comment posting (fixes GH-1866)

diff --git a/src/sentry/api/endpoints/group_notes.py b/src/sentry/api/endpoints/group_notes.py
index 7a8e6f9fac..61f86a5ad6 100644
--- a/src/sentry/api/endpoints/group_notes.py
+++ b/src/sentry/api/endpoints/group_notes.py
@@ -1,9 +1,8 @@
 from __future__ import absolute_import
 
 from datetime import timedelta
-from django import forms
 from django.utils import timezone
-from rest_framework import status
+from rest_framework import serializers, status
 from rest_framework.response import Response
 
 from sentry.api.base import DocSection
@@ -13,8 +12,8 @@ from sentry.models import Activity
 from sentry.utils.functional import extract_lazy_object
 
 
-class NewNoteForm(forms.Form):
-    text = forms.CharField()
+class NoteSerializer(serializers.Serializer):
+    text = serializers.CharField()
 
 
 class GroupNotesEndpoint(GroupEndpoint):
@@ -35,25 +34,28 @@ class GroupNotesEndpoint(GroupEndpoint):
         )
 
     def post(self, request, group):
-        form = NewNoteForm(request.DATA)
-        if not form.is_valid():
-            return Response('{"error": "form"}', status=status.HTTP_400_BAD_REQUEST)
+        serializer = NoteSerializer(data=request.DATA)
+        if not serializer.is_valid():
+            return Response(serializer.errors, status=status.HTTP_400_BAD_REQUEST)
+
+        data = dict(serializer.object)
 
         if Activity.objects.filter(
             group=group,
             type=Activity.NOTE,
             user=request.user,
-            data=form.cleaned_data,
+            data=data,
             datetime__gte=timezone.now() - timedelta(hours=1)
         ).exists():
-            return Response('{"error": "duplicate"}', status=status.HTTP_400_BAD_REQUEST)
+            return Response('{"detail": "You have already posted that comment."}',
+                            status=status.HTTP_400_BAD_REQUEST)
 
         activity = Activity.objects.create(
             group=group,
             project=group.project,
             type=Activity.NOTE,
             user=extract_lazy_object(request.user),
-            data=form.cleaned_data,
+            data=data,
         )
 
         activity.send_notification()
diff --git a/src/sentry/static/sentry/app/views/groupActivity/noteInput.jsx b/src/sentry/static/sentry/app/views/groupActivity/noteInput.jsx
index 829112d907..34c8fbcef7 100644
--- a/src/sentry/static/sentry/app/views/groupActivity/noteInput.jsx
+++ b/src/sentry/static/sentry/app/views/groupActivity/noteInput.jsx
@@ -12,6 +12,7 @@ var NoteInput = React.createClass({
     return {
       loading: false,
       error: false,
+      errorJSON: null,
       expanded: false,
       preview: false,
       value: ''
@@ -31,7 +32,8 @@ var NoteInput = React.createClass({
 
     this.setState({
       loading: true,
-      error: false
+      error: false,
+      errorJSON: null,
     });
 
     var loadingIndicator = IndicatorStore.add('Posting comment..');
@@ -41,10 +43,12 @@ var NoteInput = React.createClass({
       data: {
         text: this.state.value
       },
-      error: () => {
+      error: (error) => {
         this.setState({
           loading: false,
-          error: true
+          preview: false,
+          error: true,
+          errorJSON: JSON.parse(error.responseJSON)
         });
       },
       success: (data) => {
@@ -77,14 +81,12 @@ var NoteInput = React.createClass({
   },
 
   render() {
+    var {error, errorJSON, loading, preview, value} = this.state
     var classNames = 'activity-field';
-    if (this.state.expanded) {
-      classNames += ' expanded';
-    }
-    if (this.state.error) {
+    if (error) {
       classNames += ' error';
     }
-    if (this.state.loading) {
+    if (loading) {
       classNames += ' loading';
     }
 
@@ -92,25 +94,29 @@ var NoteInput = React.createClass({
       <form className={classNames} onSubmit={this.onSubmit}>
         <div className="activity-notes">
           <ul className="nav nav-tabs">
-            <li className={!this.state.preview ? "active" : ""}>
+            <li className={!preview ? "active" : ""}>
               <a onClick={this.toggleEdit}>Edit</a>
             </li>
-            <li className={this.state.preview ? "active" : ""}>
+            <li className={preview ? "active" : ""}>
               <a onClick={this.togglePreview}>Preview</a>
             </li>
           </ul>
-          {this.state.preview ?
+          {preview ?
             <div className="note-preview"
-                 dangerouslySetInnerHTML={{__html: markdown.toHTML(this.state.value)}} />
+                 dangerouslySetInnerHTML={{__html: markdown.toHTML(value)}} />
           :
             <textarea placeholder="Add details or updates to this event"
                       onChange={this.onChange}
                       onFocus={this.expand} onBlur={this.maybeCollapse}
-                      value={this.state.value} />
+                      required={true}
+                      value={value} />
           }
           <div className="activity-actions">
+            {errorJSON && errorJSON.detail &&
+              <small className="error">{errorJSON.detail}</small>
+            }
             <button className="btn btn-default" type="submit"
-                    disabled={this.state.loading}>Leave comment</button>
+                    disabled={loading}>Leave comment</button>
           </div>
         </div>
       </form>
diff --git a/src/sentry/static/sentry/less/group-detail.less b/src/sentry/static/sentry/less/group-detail.less
index d906ace1c9..ee173a4faa 100644
--- a/src/sentry/static/sentry/less/group-detail.less
+++ b/src/sentry/static/sentry/less/group-detail.less
@@ -362,7 +362,7 @@
 
   .activity-field {
     .form-control();
-    padding: 0 10px 35px 0;
+    padding: 0 10px 0 0;
     margin: 0 0 15px;
     .transition(padding .2s ease-in-out);
 
@@ -388,20 +388,29 @@
     textarea { margin-bottom: 10px; }
 
     .activity-actions {
-      position: absolute;
-      left: 0;
-      bottom: 0;
-      right: 0;
-      text-align: right;
+      height: 35px;
+      line-height: 35px;
+      margin-right: -10px;
+      padding-left: 15px;
       border-top: 1px solid @trim;
       .transition(opacity .2s ease-in-out);
 
       .btn {
+        float: right;
         font-size: 13px;
         margin: -1px -1px -1px;
         border-radius: 0 0 2px;
       }
     }
+
+    &.error {
+      border-color: @red;
+
+      .activity-actions .btn {
+        border-bottom-color: @red;
+        border-right-color: @red;
+      }
+    }
   }
 
   > ul {
