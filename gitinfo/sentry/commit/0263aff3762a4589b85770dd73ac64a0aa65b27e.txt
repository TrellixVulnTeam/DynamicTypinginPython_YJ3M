commit 0263aff3762a4589b85770dd73ac64a0aa65b27e
Author: Matej Minar <matej.minar@sentry.io>
Date:   Tue May 5 16:05:11 2020 +0200

    feat(ui): Add affected projects widget to release detail page (#18620)

diff --git a/src/sentry/static/sentry/app/views/releasesV2/detail/index.tsx b/src/sentry/static/sentry/app/views/releasesV2/detail/index.tsx
index a297de0118..48b5677101 100644
--- a/src/sentry/static/sentry/app/views/releasesV2/detail/index.tsx
+++ b/src/sentry/static/sentry/app/views/releasesV2/detail/index.tsx
@@ -23,7 +23,11 @@ import Alert from 'app/components/alert';
 import ReleaseHeader from './releaseHeader';
 import PickProjectToContinue from './pickProjectToContinue';
 
-type ReleaseContext = {release: Release; project: ReleaseProject};
+type ReleaseContext = {
+  release: Release;
+  project: ReleaseProject;
+  releaseProjects: ReleaseProject[];
+};
 const ReleaseContext = React.createContext<ReleaseContext>({} as ReleaseContext);
 
 type RouteParams = {
@@ -34,6 +38,7 @@ type RouteParams = {
 type Props = RouteComponentProps<RouteParams, {}> & {
   organization: Organization;
   selection: GlobalSelection;
+  releaseProjects: ReleaseProject[];
 };
 
 type State = {
@@ -94,7 +99,7 @@ class ReleasesV2Detail extends AsyncView<Props, State> {
   }
 
   renderBody() {
-    const {organization, location, selection} = this.props;
+    const {organization, location, selection, releaseProjects} = this.props;
     const {release, deploys, reloading} = this.state;
     const project = release?.projects.find(p => p.id === selection.projects[0]);
 
@@ -118,7 +123,7 @@ class ReleasesV2Detail extends AsyncView<Props, State> {
           />
 
           <ContentBox>
-            <ReleaseContext.Provider value={{release, project}}>
+            <ReleaseContext.Provider value={{release, project, releaseProjects}}>
               {this.props.children}
             </ReleaseContext.Provider>
           </ContentBox>
@@ -128,7 +133,7 @@ class ReleasesV2Detail extends AsyncView<Props, State> {
   }
 }
 
-class ReleasesV2DetailContainer extends AsyncComponent<Props> {
+class ReleasesV2DetailContainer extends AsyncComponent<Omit<Props, 'releaseProjects'>> {
   shouldReload = true;
 
   getEndpoints(): ReturnType<AsyncView['getEndpoints']> {
@@ -202,7 +207,8 @@ class ReleasesV2DetailContainer extends AsyncComponent<Props> {
           showProjectSettingsLink
           projectsFooterMessage={this.renderProjectsFooterMessage()}
         />
-        <ReleasesV2Detail {...this.props} />
+
+        <ReleasesV2Detail {...this.props} releaseProjects={projects} />
       </React.Fragment>
     );
   }
diff --git a/src/sentry/static/sentry/app/views/releasesV2/detail/overview/index.tsx b/src/sentry/static/sentry/app/views/releasesV2/detail/overview/index.tsx
index b7d7be8a6a..612e191314 100644
--- a/src/sentry/static/sentry/app/views/releasesV2/detail/overview/index.tsx
+++ b/src/sentry/static/sentry/app/views/releasesV2/detail/overview/index.tsx
@@ -17,6 +17,7 @@ import ReleaseChart from './chart/';
 import Issues from './issues';
 import CommitAuthorBreakdown from './commitAuthorBreakdown';
 import ProjectReleaseDetails from './projectReleaseDetails';
+import OtherProjects from './otherProjects';
 import TotalCrashFreeUsers from './totalCrashFreeUsers';
 import ReleaseStatsRequest from './releaseStatsRequest';
 import {YAxis} from './chart/releaseChartControls';
@@ -73,7 +74,7 @@ class ReleaseOverview extends AsyncView<Props> {
 
     return (
       <ReleaseContext.Consumer>
-        {({release, project}) => {
+        {({release, project, releaseProjects}) => {
           const {commitCount, version} = release;
           const {hasHealthData} = project.healthData || {};
           const hasDiscover = organization.features.includes('discover-basic');
@@ -126,6 +127,12 @@ class ReleaseOverview extends AsyncView<Props> {
                       />
                     )}
                     <ProjectReleaseDetails release={release} />
+                    {releaseProjects.length > 1 && (
+                      <OtherProjects
+                        projects={releaseProjects.filter(p => p.slug !== project.slug)}
+                        location={location}
+                      />
+                    )}
                     {hasHealthData && (
                       <TotalCrashFreeUsers
                         crashFreeTimeBreakdown={crashFreeTimeBreakdown}
diff --git a/src/sentry/static/sentry/app/views/releasesV2/detail/overview/otherProjects.tsx b/src/sentry/static/sentry/app/views/releasesV2/detail/overview/otherProjects.tsx
new file mode 100644
index 0000000000..423298f205
--- /dev/null
+++ b/src/sentry/static/sentry/app/views/releasesV2/detail/overview/otherProjects.tsx
@@ -0,0 +1,107 @@
+import React from 'react';
+import styled from '@emotion/styled';
+import {Location} from 'history';
+
+import {t, tn} from 'app/locale';
+import space from 'app/styles/space';
+import Link from 'app/components/links/link';
+import overflowEllipsis from 'app/styles/overflowEllipsis';
+import {ReleaseProject} from 'app/types';
+import {IconProject} from 'app/icons';
+import Button from 'app/components/button';
+
+import {SectionHeading, Wrapper} from './styles';
+
+type Props = {
+  projects: ReleaseProject[];
+  location: Location;
+};
+
+type State = {
+  collapsed: boolean;
+};
+
+class OtherProjects extends React.Component<Props, State> {
+  state = {
+    collapsed: true,
+  };
+
+  static MAX_WHEN_COLLAPSED = 5;
+
+  onCollapseToggle = () => {
+    this.setState(prevState => ({
+      collapsed: !prevState.collapsed,
+    }));
+  };
+
+  render() {
+    const {projects, location} = this.props;
+    const {collapsed} = this.state;
+    const canExpand = projects.length > OtherProjects.MAX_WHEN_COLLAPSED;
+    let projectsToRender = projects;
+
+    if (collapsed && canExpand) {
+      projectsToRender = projects.slice(0, OtherProjects.MAX_WHEN_COLLAPSED);
+    }
+
+    const numberOfCollapsedProjects = projects.length - projectsToRender.length;
+
+    return (
+      <Wrapper>
+        <SectionHeading>
+          {tn(
+            'Other Project for This Release',
+            'Other Projects for This Release',
+            projects.length
+          )}
+        </SectionHeading>
+        {projectsToRender.map(project => (
+          <Row key={project.id}>
+            <Link
+              to={{
+                pathname: location.pathname,
+                query: {...location.query, project: project.id, yAxis: undefined},
+              }}
+            >
+              <StyledIconProject size="sm" />
+              {project.slug}
+            </Link>
+          </Row>
+        ))}
+        {numberOfCollapsedProjects > 0 && (
+          <CollapseToggle priority="link" onClick={this.onCollapseToggle}>
+            {tn(
+              'Show %s collapsed project',
+              'Show %s collapsed projects',
+              numberOfCollapsedProjects
+            )}
+          </CollapseToggle>
+        )}
+        {numberOfCollapsedProjects === 0 && canExpand && (
+          <CollapseToggle priority="link" onClick={this.onCollapseToggle}>
+            {t('Collapse')}
+          </CollapseToggle>
+        )}
+      </Wrapper>
+    );
+  }
+}
+
+const Row = styled('div')`
+  margin-bottom: ${space(0.75)};
+  font-size: ${p => p.theme.fontSizeMedium};
+  color: ${p => p.theme.blue};
+  ${overflowEllipsis}
+`;
+
+const StyledIconProject = styled(IconProject)`
+  margin-right: ${space(1)};
+  position: relative;
+  top: ${space(0.25)};
+`;
+
+const CollapseToggle = styled(Button)`
+  width: 100%;
+`;
+
+export default OtherProjects;
