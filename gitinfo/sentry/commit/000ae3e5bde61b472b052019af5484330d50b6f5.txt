commit 000ae3e5bde61b472b052019af5484330d50b6f5
Author: Colleen O'Rourke <colleen@sentry.io>
Date:   Fri Feb 28 13:41:46 2020 -0800

    feat(Slack plugin): Instrument Slack to emit Datadog metrics (#17337)
    
    * feat(Slack plugin): Instrument Slack to emit Datadog metrics

diff --git a/src/sentry_plugins/slack/client.py b/src/sentry_plugins/slack/client.py
new file mode 100644
index 0000000000..362830634f
--- /dev/null
+++ b/src/sentry_plugins/slack/client.py
@@ -0,0 +1,20 @@
+from __future__ import absolute_import
+
+from sentry_plugins.client import ApiClient
+
+
+class SlackApiClient(ApiClient):
+    plugin_name = "slack"
+    allow_redirects = False
+
+    def __init__(self, webhook, username, icon_url, channel):
+        self.webhook = webhook
+        self.username = username
+        self.icon_url = icon_url
+        self.channel = channel
+        super(SlackApiClient, self).__init__()
+
+    def request(self, data):
+        return self._request(
+            path=self.webhook, method="post", data=data, json=False, allow_text=True
+        )
diff --git a/src/sentry_plugins/slack/plugin.py b/src/sentry_plugins/slack/plugin.py
index 8e5f5516b8..68e9098fd2 100644
--- a/src/sentry_plugins/slack/plugin.py
+++ b/src/sentry_plugins/slack/plugin.py
@@ -1,11 +1,12 @@
 from __future__ import absolute_import
 
-from sentry import http, tagstore
+from sentry import tagstore
 from sentry.plugins.bases import notify
 from sentry.utils import json
 from sentry.utils.http import absolute_uri
 from sentry.integrations import FeatureDescription, IntegrationFeatures
 
+from .client import SlackApiClient
 from sentry_plugins.base import CorePluginMixin
 
 LEVEL_TO_COLOR = {
@@ -157,11 +158,6 @@ class SlackPlugin(CorePluginMixin, notify.NotificationPlugin):
         if not self.is_configured(project):
             return
 
-        webhook = self.get_option("webhook", project)
-        username = (self.get_option("username", project) or "Sentry").strip()
-        icon_url = self.get_option("icon_url", project)
-        channel = (self.get_option("channel", project) or "").strip()
-
         title = event.title.encode("utf-8")
         # TODO(dcramer): we'd like this to be the event culprit, but Sentry
         # does not currently retain it
@@ -227,7 +223,6 @@ class SlackPlugin(CorePluginMixin, notify.NotificationPlugin):
                         "short": True,
                     }
                 )
-
         payload = {
             "attachments": [
                 {
@@ -239,18 +234,25 @@ class SlackPlugin(CorePluginMixin, notify.NotificationPlugin):
                 }
             ]
         }
+        client = self.get_client(project)
 
-        if username:
-            payload["username"] = username.encode("utf-8")
+        if client.username:
+            payload["username"] = client.username.encode("utf-8")
 
-        if channel:
-            payload["channel"] = channel
+        if client.channel:
+            payload["channel"] = client.channel
 
-        if icon_url:
-            payload["icon_url"] = icon_url
+        if client.icon_url:
+            payload["icon_url"] = client.icon_url
 
         values = {"payload": json.dumps(payload)}
+        client.request(values)
 
+    def get_client(self, project):
+        webhook = self.get_option("webhook", project).strip()
         # Apparently we've stored some bad data from before we used `URLField`.
-        webhook = webhook.strip(" ")
-        return http.safe_urlopen(webhook, method="POST", data=values, timeout=5)
+        username = (self.get_option("username", project) or "Sentry").strip()
+        icon_url = self.get_option("icon_url", project)
+        channel = (self.get_option("channel", project) or "").strip()
+
+        return SlackApiClient(webhook, username, icon_url, channel)
