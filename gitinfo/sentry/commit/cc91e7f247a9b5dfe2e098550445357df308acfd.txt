commit cc91e7f247a9b5dfe2e098550445357df308acfd
Author: David Cramer <dcramer@gmail.com>
Date:   Thu Feb 6 15:53:09 2020 -0800

    feat: Add rrweb to sentry staff sessions

diff --git a/package.json b/package.json
index 90cad37e64..446a734790 100644
--- a/package.json
+++ b/package.json
@@ -24,6 +24,7 @@
     "@sentry/browser": "5.12.1",
     "@sentry/integrations": "5.12.0",
     "@sentry/release-parser": "^0.4.0",
+    "@sentry/rrweb": "^0.1.0",
     "@sentry/utils": "5.12.0",
     "@types/classnames": "^2.2.0",
     "@types/clipboard": "^2.0.1",
diff --git a/src/sentry/static/sentry/app/bootstrap.jsx b/src/sentry/static/sentry/app/bootstrap.jsx
index 7b32889e2f..87d8cbf3f4 100644
--- a/src/sentry/static/sentry/app/bootstrap.jsx
+++ b/src/sentry/static/sentry/app/bootstrap.jsx
@@ -14,6 +14,7 @@ import * as Router from 'react-router';
 import * as Sentry from '@sentry/browser';
 import {ExtraErrorData} from '@sentry/integrations';
 import {Integrations} from '@sentry/apm';
+import SentryRRWeb from '@sentry/rrweb';
 import createReactClass from 'create-react-class';
 import jQuery from 'jquery';
 import moment from 'moment';
@@ -24,6 +25,27 @@ import Main from 'app/main';
 import ajaxCsrfSetup from 'app/utils/ajaxCsrfSetup';
 import plugins from 'app/plugins';
 
+function getSentryIntegrations(config) {
+  const tracesSampleRate = config ? config.apmSampling : 0;
+
+  const integrations = [
+    new ExtraErrorData({
+      // 6 is arbitrary, seems like a nice number
+      depth: 6,
+    }),
+    new Integrations.Tracing({
+      tracingOrigins: ['localhost', 'sentry.io', /^\//],
+      tracesSampleRate,
+    }),
+  ];
+  if (window.__SENTRY__USER && window.__SENTRY__USER.isStaff) {
+    // eslint-disable-next-line no-console
+    console.log('[sentry] Instrumenting session with rrweb');
+    integrations.push(new SentryRRWeb());
+  }
+  return integrations;
+}
+
 // App setup
 if (window.__initialData) {
   ConfigStore.loadInitialData(window.__initialData);
@@ -32,19 +54,9 @@ if (window.__initialData) {
 // SDK INIT  --------------------------------------------------------
 const config = ConfigStore.getConfig();
 // Only enable self-tracing when isApmDataSamplingEnabled is true
-const tracesSampleRate = config ? config.apmSampling : 0;
 Sentry.init({
   ...window.__SENTRY__OPTIONS,
-  integrations: [
-    new ExtraErrorData({
-      // 6 is arbitrary, seems like a nice number
-      depth: 6,
-    }),
-    new Integrations.Tracing({
-      tracingOrigins: ['localhost', 'sentry.io', /^\//],
-      tracesSampleRate,
-    }),
-  ],
+  integrations: getSentryIntegrations(config),
 });
 
 if (window.__SENTRY__USER) {
diff --git a/src/sentry/static/sentry/app/sentryTypes.jsx b/src/sentry/static/sentry/app/sentryTypes.jsx
index ef85a90ee3..b3329badc9 100644
--- a/src/sentry/static/sentry/app/sentryTypes.jsx
+++ b/src/sentry/static/sentry/app/sentryTypes.jsx
@@ -82,6 +82,7 @@ export const Config = PropTypes.shape({
     ip_address: PropTypes.string,
     email: PropTypes.string,
     id: PropTypes.number,
+    isStaff: PropTypes.bool,
   }),
   sentryConfig: PropTypes.shape({
     dsn: PropTypes.string,
diff --git a/src/sentry/static/sentry/app/types/index.tsx b/src/sentry/static/sentry/app/types/index.tsx
index 493094ce30..589be2b2a2 100644
--- a/src/sentry/static/sentry/app/types/index.tsx
+++ b/src/sentry/static/sentry/app/types/index.tsx
@@ -368,7 +368,7 @@ export type Config = {
   gravatarBaseUrl: string;
   messages: string[];
   dsn: string;
-  userIdentity: {ip_address: string; email: string; id: number};
+  userIdentity: {ip_address: string; email: string; id: number; isStaff: boolean};
   termsUrl: string | null;
   isAuthenticated: boolean;
   version: {
diff --git a/src/sentry/web/client_config.py b/src/sentry/web/client_config.py
index 63f02dc95e..75ef115a32 100644
--- a/src/sentry/web/client_config.py
+++ b/src/sentry/web/client_config.py
@@ -110,7 +110,7 @@ def get_client_config(request=None):
         # User identity is used by the sentry SDK
         user_identity = {"ip_address": request.META["REMOTE_ADDR"]}
         if user and user.is_authenticated():
-            user_identity.update({"email": user.email, "id": user.id})
+            user_identity.update({"email": user.email, "id": user.id, "isStaff": user.is_staff})
             if user.name:
                 user_identity["name"] = user.name
     else:
diff --git a/yarn.lock b/yarn.lock
index 5f90e9c50f..9cdfdc8c69 100644
--- a/yarn.lock
+++ b/yarn.lock
@@ -1456,6 +1456,11 @@
   resolved "https://registry.yarnpkg.com/@sentry/release-parser/-/release-parser-0.4.0.tgz#9b8e868d8ecee8313dc32bdef1478cd06ea7b7fd"
   integrity sha512-wnXqyFZrOlnsnI8qcY6T2wlEih5zWXwPMcmh6/F9iyyhG/NmcK8zJ67aOZrkT1X7MYN6kssUm8Gfa3DR7aT0Zg==
 
+"@sentry/rrweb@^0.1.0":
+  version "0.1.0"
+  resolved "https://registry.yarnpkg.com/@sentry/rrweb/-/rrweb-0.1.0.tgz#935258d214dd5482d925c96db8d4e60279154ec7"
+  integrity sha512-uOHGJ7rR8gm4LfSdJ2Oz5vlu4d74VdEj1SaRktoB8tTUOFBXWsPgCkEsUQ7hj0KufMrWGmerVsV3hg9me3gKMQ==
+
 "@sentry/types@5.12.0":
   version "5.12.0"
   resolved "https://registry.yarnpkg.com/@sentry/types/-/types-5.12.0.tgz#5367e53c74261beea01502e3f7b6f3d822682a31"
