commit dbaf25ecc11751f0ac8b94d751f0aba12007bdc1
Author: Matt Robenolt <matt@ydekproductions.com>
Date:   Tue Sep 26 17:15:03 2017 -0700

    revert: "ref: Drop old/unused tag key logic (#6199)"
    
    This reverts commit 24f485e19d771054be3ac8118a0b2fa65d91524d.

diff --git a/src/sentry/constants.py b/src/sentry/constants.py
index f845feb0c4..82beda64a5 100644
--- a/src/sentry/constants.py
+++ b/src/sentry/constants.py
@@ -115,6 +115,8 @@ LANGUAGES = [(k, LANGUAGE_MAP[k]) for k in get_all_languages() if k in LANGUAGE_
 TAG_LABELS = {
     'exc_type': 'Exception Type',
     'sentry:user': 'User',
+    'sentry:filename': 'File',
+    'sentry:function': 'Function',
     'sentry:release': 'Release',
     'sentry:dist': 'Distribution',
     'os': 'OS',
diff --git a/src/sentry/models/release.py b/src/sentry/models/release.py
index 55ff660180..e393dda522 100644
--- a/src/sentry/models/release.py
+++ b/src/sentry/models/release.py
@@ -243,10 +243,7 @@ class Release(Model):
 
     @property
     def short_version(self):
-        return Release.get_display_version(self.version)
-
-    @staticmethod
-    def get_display_version(version):
+        version = self.version
         match = _dotted_path_prefix_re.match(version)
         if match is not None:
             version = version[match.end():]
diff --git a/src/sentry/models/tagvalue.py b/src/sentry/models/tagvalue.py
index 70fe8f00dc..b7822ca9e6 100644
--- a/src/sentry/models/tagvalue.py
+++ b/src/sentry/models/tagvalue.py
@@ -7,6 +7,7 @@ sentry.models.tagvalue
 """
 from __future__ import absolute_import, print_function
 
+from django.core.urlresolvers import reverse
 from django.db import models
 from django.utils import timezone
 
@@ -14,7 +15,7 @@ from sentry.constants import MAX_TAG_KEY_LENGTH, MAX_TAG_VALUE_LENGTH
 from sentry.db.models import (
     Model, BoundedPositiveIntegerField, GzippedDictField, BaseManager, sane_repr
 )
-from sentry.models import Release
+from sentry.utils.http import absolute_uri
 
 
 class TagValue(Model):
@@ -48,6 +49,35 @@ class TagValue(Model):
 
     def get_label(self):
         # HACK(dcramer): quick and dirty way to hack in better display states
-        if self.key == 'sentry:release':
-            return Release.get_display_version(self.version)
+        if self.key == 'sentry:user':
+            return self.data.get('email') or self.value
+        elif self.key == 'sentry:function':
+            return '%s in %s' % (self.data['function'], self.data['filename'])
+        elif self.key == 'sentry:filename':
+            return self.data['filename']
+        elif self.key == 'sentry:release' and len(self.value) == 40:
+            return self.value[:12]
         return self.value
+
+    def get_absolute_url(self):
+        # HACK(dcramer): quick and dirty way to support code/users
+        if self.key == 'sentry:user':
+            url_name = 'sentry-user-details'
+        elif self.key == 'sentry:filename':
+            url_name = 'sentry-explore-code-details'
+        elif self.key == 'sentry:function':
+            url_name = 'sentry-explore-code-details-by-function'
+        else:
+            url_name = 'sentry-explore-tag-value'
+            return absolute_uri(
+                reverse(
+                    url_name,
+                    args=[self.project.organization.slug,
+                          self.project.slug, self.key, self.id]
+                )
+            )
+
+        return absolute_uri(
+            reverse(url_name, args=[
+                    self.project.organization.slug, self.project.slug, self.id])
+        )
