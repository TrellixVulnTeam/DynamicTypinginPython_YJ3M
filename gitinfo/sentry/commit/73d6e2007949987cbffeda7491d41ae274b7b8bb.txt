commit 73d6e2007949987cbffeda7491d41ae274b7b8bb
Author: Mark Story <mark@sentry.io>
Date:   Mon Jan 13 17:47:29 2020 -0500

    ref(discover) Convert organization_id to an integer in analytics. (#16413)

diff --git a/src/sentry/static/sentry/app/views/eventsV2/eventDetails/content.tsx b/src/sentry/static/sentry/app/views/eventsV2/eventDetails/content.tsx
index ab4dd1970f..550336ce8d 100644
--- a/src/sentry/static/sentry/app/views/eventsV2/eventDetails/content.tsx
+++ b/src/sentry/static/sentry/app/views/eventsV2/eventDetails/content.tsx
@@ -120,7 +120,7 @@ class EventDetailsContent extends AsyncComponent<Props, State> {
       eventKey: 'discover_v2.event_details',
       eventName: 'Discoverv2: Opened Event Details',
       event_type: event.type,
-      organization_id: organization.id,
+      organization_id: parseInt(organization.id, 10),
     });
 
     // Having an aggregate field means we want to show pagination/graphs
diff --git a/src/sentry/static/sentry/app/views/eventsV2/landing.tsx b/src/sentry/static/sentry/app/views/eventsV2/landing.tsx
index c19d25e539..2db5cc86cd 100644
--- a/src/sentry/static/sentry/app/views/eventsV2/landing.tsx
+++ b/src/sentry/static/sentry/app/views/eventsV2/landing.tsx
@@ -203,7 +203,7 @@ class DiscoverLanding extends AsyncComponent<Props, State> {
             trackAnalyticsEvent({
               eventKey: 'discover_v2.prebuilt_query_click',
               eventName: 'Discoverv2: Click a pre-built query',
-              organization_id: this.props.organization.id,
+              organization_id: parseInt(this.props.organization.id, 10),
               query_name: eventView.name,
             });
           }}
diff --git a/src/sentry/static/sentry/app/views/eventsV2/queryList.tsx b/src/sentry/static/sentry/app/views/eventsV2/queryList.tsx
index de7b63e662..2e6f7eb7bc 100644
--- a/src/sentry/static/sentry/app/views/eventsV2/queryList.tsx
+++ b/src/sentry/static/sentry/app/views/eventsV2/queryList.tsx
@@ -143,7 +143,7 @@ class QueryList extends React.Component<Props> {
             trackAnalyticsEvent({
               eventKey: 'discover_v2.prebuilt_query_click',
               eventName: 'Discoverv2: Click a pre-built query',
-              organization_id: this.props.organization.id,
+              organization_id: parseInt(this.props.organization.id, 10),
               query_name: eventView.name,
             });
           }}
@@ -190,7 +190,7 @@ class QueryList extends React.Component<Props> {
             trackAnalyticsEvent({
               eventKey: 'discover_v2.prebuilt_query_click',
               eventName: 'Discoverv2: Click a pre-built query',
-              organization_id: this.props.organization.id,
+              organization_id: parseInt(this.props.organization.id, 10),
               query_name: eventView.name,
             });
           }}
diff --git a/src/sentry/static/sentry/app/views/eventsV2/results.tsx b/src/sentry/static/sentry/app/views/eventsV2/results.tsx
index b4a6f0c66e..856e2b4194 100644
--- a/src/sentry/static/sentry/app/views/eventsV2/results.tsx
+++ b/src/sentry/static/sentry/app/views/eventsV2/results.tsx
@@ -87,7 +87,7 @@ class Results extends React.Component<Props, State> {
     trackAnalyticsEvent({
       eventKey: 'discover_v2.y_axis_change',
       eventName: "Discoverv2: Change chart's y axis",
-      organization_id: this.props.organization.id,
+      organization_id: parseInt(this.props.organization.id, 10),
       y_axis_value: value,
     });
   };
diff --git a/src/sentry/static/sentry/app/views/eventsV2/savedQuery/utils.tsx b/src/sentry/static/sentry/app/views/eventsV2/savedQuery/utils.tsx
index 6474a37086..7d1b51cea9 100644
--- a/src/sentry/static/sentry/app/views/eventsV2/savedQuery/utils.tsx
+++ b/src/sentry/static/sentry/app/views/eventsV2/savedQuery/utils.tsx
@@ -24,7 +24,7 @@ export function handleCreateQuery(
 
   trackAnalyticsEvent({
     ...getAnalyticsCreateEventKeyName(isNewQuery, 'request'),
-    organization_id: organization.id,
+    organization_id: parseInt(organization.id, 10),
     ...extractAnalyticsQueryFields(payload),
   });
 
@@ -36,7 +36,7 @@ export function handleCreateQuery(
 
       trackAnalyticsEvent({
         ...getAnalyticsCreateEventKeyName(isNewQuery, 'success'),
-        organization_id: organization.id,
+        organization_id: parseInt(organization.id, 10),
         ...extractAnalyticsQueryFields(payload),
       });
 
@@ -47,7 +47,7 @@ export function handleCreateQuery(
 
       trackAnalyticsEvent({
         ...getAnalyticsCreateEventKeyName(isNewQuery, 'failed'),
-        organization_id: organization.id,
+        organization_id: parseInt(organization.id, 10),
         ...extractAnalyticsQueryFields(payload),
         error:
           (err && err.message) ||
@@ -84,7 +84,7 @@ export function handleUpdateQuery(
   trackAnalyticsEvent({
     eventKey: 'discover_v2.update_query_request',
     eventName: 'Discoverv2: Request to update a saved query',
-    organization_id: organization.id,
+    organization_id: parseInt(organization.id, 10),
     ...extractAnalyticsQueryFields(payload),
   });
 
@@ -97,7 +97,7 @@ export function handleUpdateQuery(
       trackAnalyticsEvent({
         eventKey: 'discover_v2.update_query_success',
         eventName: 'Discoverv2: Successfully updated a saved query',
-        organization_id: organization.id,
+        organization_id: parseInt(organization.id, 10),
         ...extractAnalyticsQueryFields(payload),
       });
       // NOTE: there is no need to convert _saved into an EventView and push it
@@ -112,7 +112,7 @@ export function handleUpdateQuery(
       trackAnalyticsEvent({
         eventKey: 'discover_v2.update_query_failed',
         eventName: 'Discoverv2: Failed to update a saved query',
-        organization_id: organization.id,
+        organization_id: parseInt(organization.id, 10),
         ...extractAnalyticsQueryFields(payload),
         error: (err && err.message) || 'Failed to update a query',
       });
@@ -135,7 +135,7 @@ export function handleUpdateQueryName(
   trackAnalyticsEvent({
     eventKey: 'discover_v2.update_query_name_request',
     eventName: "Discoverv2: Request to update a saved query's name",
-    organization_id: organization.id,
+    organization_id: parseInt(organization.id, 10),
     ...extractAnalyticsQueryFields(payload),
   });
 
@@ -148,7 +148,7 @@ export function handleUpdateQueryName(
       trackAnalyticsEvent({
         eventKey: 'discover_v2.update_query_name_success',
         eventName: "Discoverv2: Successfully updated a saved query's name",
-        organization_id: organization.id,
+        organization_id: parseInt(organization.id, 10),
         ...extractAnalyticsQueryFields(payload),
       });
     })
@@ -158,7 +158,7 @@ export function handleUpdateQueryName(
       trackAnalyticsEvent({
         eventKey: 'discover_v2.update_query_failed',
         eventName: "Discoverv2: Failed to update a saved query's name",
-        organization_id: organization.id,
+        organization_id: parseInt(organization.id, 10),
         ...extractAnalyticsQueryFields(payload),
         error: (err && err.message) || 'Failed to update a query name',
       });
@@ -175,7 +175,7 @@ export function handleDeleteQuery(
   trackAnalyticsEvent({
     eventKey: 'discover_v2.delete_query_request',
     eventName: 'Discoverv2: Request to delete a saved query',
-    organization_id: organization.id,
+    organization_id: parseInt(organization.id, 10),
     ...extractAnalyticsQueryFields(eventView.toNewQuery()),
   });
 
@@ -188,7 +188,7 @@ export function handleDeleteQuery(
       trackAnalyticsEvent({
         eventKey: 'discover_v2.delete_query_success',
         eventName: 'Discoverv2: Successfully deleted a saved query',
-        organization_id: organization.id,
+        organization_id: parseInt(organization.id, 10),
         ...extractAnalyticsQueryFields(eventView.toNewQuery()),
       });
     })
@@ -198,7 +198,7 @@ export function handleDeleteQuery(
       trackAnalyticsEvent({
         eventKey: 'discover_v2.delete_query_failed',
         eventName: 'Discoverv2: Failed to delete a saved query',
-        organization_id: organization.id,
+        organization_id: parseInt(organization.id, 10),
         ...extractAnalyticsQueryFields(eventView.toNewQuery()),
         error: (err && err.message) || 'Failed to delete query',
       });
diff --git a/src/sentry/static/sentry/app/views/eventsV2/table/tableModalEditColumn.tsx b/src/sentry/static/sentry/app/views/eventsV2/table/tableModalEditColumn.tsx
index 03e5306d30..1e9f7f4820 100644
--- a/src/sentry/static/sentry/app/views/eventsV2/table/tableModalEditColumn.tsx
+++ b/src/sentry/static/sentry/app/views/eventsV2/table/tableModalEditColumn.tsx
@@ -104,7 +104,7 @@ class TableModalEditColumnBodyForm extends React.Component<
           eventKey: 'discover_v2.edit_column.open_modal',
           eventName: 'Discoverv2: Opened modal to edit a column',
           index: focusedColumnIndex,
-          organization_id: organization.id,
+          organization_id: parseInt(organization.id, 10),
         });
       }
     } else {
@@ -113,7 +113,7 @@ class TableModalEditColumnBodyForm extends React.Component<
         eventKey: 'discover_v2.add_column.open_modal',
         eventName: 'Discoverv2: Opened modal to add a column',
         index: focusedColumnIndex,
-        organization_id: organization.id,
+        organization_id: parseInt(organization.id, 10),
       });
     }
   }
diff --git a/src/sentry/static/sentry/app/views/eventsV2/table/tableView.tsx b/src/sentry/static/sentry/app/views/eventsV2/table/tableView.tsx
index 3751a7e71c..b0ed0d8bfa 100644
--- a/src/sentry/static/sentry/app/views/eventsV2/table/tableView.tsx
+++ b/src/sentry/static/sentry/app/views/eventsV2/table/tableView.tsx
@@ -81,7 +81,7 @@ class TableView extends React.Component<TableViewProps> {
         eventKey: 'discover_v2.add_column',
         eventName: 'Discoverv2: Add a new column at an index',
         insert_at_index: insertAt,
-        organization_id: organization.id,
+        organization_id: parseInt(organization.id, 10),
         ...payload,
       });
     } else {
@@ -92,7 +92,7 @@ class TableView extends React.Component<TableViewProps> {
       trackAnalyticsEvent({
         eventKey: 'discover_v2.add_column.right_end',
         eventName: 'Discoverv2: Add a new column at the right end of the table',
-        organization_id: organization.id,
+        organization_id: parseInt(organization.id, 10),
         ...payload,
       });
     }
@@ -146,7 +146,7 @@ class TableView extends React.Component<TableViewProps> {
         eventName: 'Discoverv2: A column was updated',
         updated_at_index: columnIndex,
         changed,
-        organization_id: organization.id,
+        organization_id: parseInt(organization.id, 10),
         ...payload,
       });
     }
@@ -174,7 +174,7 @@ class TableView extends React.Component<TableViewProps> {
       eventKey: 'discover_v2.delete_column',
       eventName: 'Discoverv2: A column was deleted',
       deleted_at_index: columnIndex,
-      organization_id: organization.id,
+      organization_id: parseInt(organization.id, 10),
       aggregation: prevField.aggregation,
       field: prevField.field,
     });
@@ -201,7 +201,7 @@ class TableView extends React.Component<TableViewProps> {
       eventName: 'Discoverv2: A column was moved',
       from_index: fromIndex,
       to_index: toIndex,
-      organization_id: organization.id,
+      organization_id: parseInt(organization.id, 10),
       aggregation: prevField.aggregation,
       field: prevField.field,
     });
@@ -347,14 +347,14 @@ class TableView extends React.Component<TableViewProps> {
       trackAnalyticsEvent({
         eventKey: 'discover_v2.table.column_header.edit_mode.enter',
         eventName: 'Discoverv2: Enter column header edit mode',
-        organization_id: organization.id,
+        organization_id: parseInt(organization.id, 10),
       });
     } else {
       // metrics
       trackAnalyticsEvent({
         eventKey: 'discover_v2.table.column_header.edit_mode.exit',
         eventName: 'Discoverv2: Exit column header edit mode',
-        organization_id: organization.id,
+        organization_id: parseInt(organization.id, 10),
       });
     }
   };
diff --git a/src/sentry/static/sentry/app/views/eventsV2/tags.tsx b/src/sentry/static/sentry/app/views/eventsV2/tags.tsx
index 0f596f5848..b78b1872a4 100644
--- a/src/sentry/static/sentry/app/views/eventsV2/tags.tsx
+++ b/src/sentry/static/sentry/app/views/eventsV2/tags.tsx
@@ -100,7 +100,7 @@ class Tags extends React.Component<Props, State> {
       eventKey: 'discover_v2.facet_map.clicked',
       eventName: 'Discoverv2: Clicked on a tag on the facet map',
       tag,
-      organization_id: organization.id,
+      organization_id: parseInt(organization.id, 10),
     });
   };
 
