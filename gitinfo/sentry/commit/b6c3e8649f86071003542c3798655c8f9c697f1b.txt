commit b6c3e8649f86071003542c3798655c8f9c697f1b
Author: David Cramer <dcramer@gmail.com>
Date:   Fri Jul 22 12:42:16 2016 -0700

    Delete EventTag rows on key removal
    
    @getsentry/infrastructure

diff --git a/src/sentry/tasks/deletion.py b/src/sentry/tasks/deletion.py
index 317bdbf0ac..a1e06b7bb0 100644
--- a/src/sentry/tasks/deletion.py
+++ b/src/sentry/tasks/deletion.py
@@ -203,7 +203,7 @@ def delete_group(object_id, continuous=True, **kwargs):
 @retry(exclude=(DeleteAborted,))
 def delete_tag_key(object_id, continuous=True, **kwargs):
     from sentry.models import (
-        GroupTagKey, GroupTagValue, TagKey, TagKeyStatus, TagValue
+        EventTag, GroupTagKey, GroupTagValue, TagKey, TagKeyStatus, TagValue
     )
 
     try:
@@ -224,6 +224,14 @@ def delete_tag_key(object_id, continuous=True, **kwargs):
             if continuous:
                 delete_tag_key.delay(object_id=object_id, countdown=15)
             return
+
+    has_more = bulk_delete_objects(EventTag, project_id=tagkey.project_id,
+                                   key_id=tagkey.id, logger=logger)
+    if has_more:
+        if continuous:
+            delete_tag_key.delay(object_id=object_id, countdown=15)
+        return
+
     tagkey.delete()
 
 
diff --git a/tests/sentry/tasks/test_deletion.py b/tests/sentry/tasks/test_deletion.py
index ebca49fb3d..f67be469ef 100644
--- a/tests/sentry/tasks/test_deletion.py
+++ b/tests/sentry/tasks/test_deletion.py
@@ -1,7 +1,5 @@
 from __future__ import absolute_import
 
-from mock import patch
-
 from sentry.exceptions import DeleteAborted
 from sentry.models import (
     Event, EventMapping, EventTag,
@@ -104,8 +102,7 @@ class DeleteProjectTest(TestCase):
 
 
 class DeleteTagKeyTest(TestCase):
-    @patch.object(delete_tag_key, 'delay')
-    def test_simple(self, delete_tag_key_delay):
+    def test_simple(self):
         team = self.create_team(name='test', slug='test')
         project = self.create_project(team=team, name='test1', slug='test1')
         group = self.create_group(project=project)
@@ -113,47 +110,34 @@ class DeleteTagKeyTest(TestCase):
         TagValue.objects.create(key='foo', value='bar', project=project)
         GroupTagKey.objects.create(key='foo', group=group, project=project)
         GroupTagValue.objects.create(key='foo', value='bar', group=group, project=project)
+        EventTag.objects.create(
+            key_id=tk.id, group_id=group.id, value_id=1, project_id=project.id,
+            event_id=1,
+        )
 
         project2 = self.create_project(team=team, name='test2')
         group2 = self.create_group(project=project2)
         tk2 = TagKey.objects.create(key='foo', project=project2)
         gtk2 = GroupTagKey.objects.create(key='foo', group=group2, project=project2)
         gtv2 = GroupTagValue.objects.create(key='foo', value='bar', group=group2, project=project2)
+        EventTag.objects.create(
+            key_id=tk2.id, group_id=group2.id, value_id=1, project_id=project.id,
+            event_id=1,
+        )
 
         with self.tasks():
             delete_tag_key(object_id=tk.id)
 
             assert not GroupTagValue.objects.filter(key=tk.key, project=project).exists()
-
-            delete_tag_key_delay.assert_called_once_with(object_id=tk.id, countdown=15)
-
-            delete_tag_key_delay.reset_mock()
-
-            delete_tag_key(object_id=tk.id)
-
             assert not GroupTagKey.objects.filter(key=tk.key, project=project).exists()
-
-            delete_tag_key_delay.assert_called_once_with(object_id=tk.id, countdown=15)
-
-            delete_tag_key_delay.reset_mock()
-
-            delete_tag_key(object_id=tk.id)
-
             assert not TagValue.objects.filter(key=tk.key, project=project).exists()
-
-            delete_tag_key_delay.assert_called_once_with(object_id=tk.id, countdown=15)
-
-            delete_tag_key_delay.reset_mock()
-
-            delete_tag_key(object_id=tk.id)
-
-            assert not delete_tag_key_delay.called
-
             assert not TagKey.objects.filter(id=tk.id).exists()
+            assert not EventTag.objects.filter(key_id=tk.id).exists()
 
         assert TagKey.objects.filter(id=tk2.id).exists()
         assert GroupTagKey.objects.filter(id=gtk2.id).exists()
         assert GroupTagValue.objects.filter(id=gtv2.id).exists()
+        assert EventTag.objects.filter(key_id=tk2.id).exists()
 
 
 class DeleteGroupTest(TestCase):
