commit 1f9a1f60babdad30c5e3595faff89e8a8875c5ea
Author: David Cramer <dcramer@gmail.com>
Date:   Mon Apr 4 16:49:16 2016 -0700

    Support project email subscriptions via API

diff --git a/src/sentry/api/endpoints/project_details.py b/src/sentry/api/endpoints/project_details.py
index 452f34f650..556202a9a1 100644
--- a/src/sentry/api/endpoints/project_details.py
+++ b/src/sentry/api/endpoints/project_details.py
@@ -14,7 +14,7 @@ from sentry.api.decorators import sudo_required
 from sentry.api.serializers import serialize
 from sentry.models import (
     AuditLogEntryEvent, Group, GroupStatus, Project, ProjectBookmark,
-    ProjectStatus
+    ProjectStatus, UserOption
 )
 from sentry.plugins import plugins
 from sentry.tasks.deletion import delete_project
@@ -68,10 +68,12 @@ def clean_newline_inputs(value):
 
 class ProjectMemberSerializer(serializers.Serializer):
     isBookmarked = serializers.BooleanField()
+    isSubscribed = serializers.BooleanField()
 
 
 class ProjectAdminSerializer(serializers.Serializer):
     isBookmarked = serializers.BooleanField()
+    isSubscribed = serializers.BooleanField()
     name = serializers.CharField(max_length=200)
     slug = serializers.SlugField(max_length=200)
 
@@ -208,6 +210,11 @@ class ProjectDetailsEndpoint(ProjectEndpoint):
                 user=request.user,
             ).delete()
 
+        if result.get('isSubscribed'):
+            UserOption.objects.set_value(request.user, project, 'mail:alert', 1)
+        elif result.get('isSubscribed') is False:
+            UserOption.objects.set_value(request.user, project, 'mail:alert', 0)
+
         if request.access.has_scope('project:write'):
             options = request.DATA.get('options', {})
             if 'sentry:origins' in options:
diff --git a/src/sentry/api/serializers/models/project.py b/src/sentry/api/serializers/models/project.py
index 4921e0f35f..398823ae8c 100644
--- a/src/sentry/api/serializers/models/project.py
+++ b/src/sentry/api/serializers/models/project.py
@@ -1,7 +1,11 @@
 from __future__ import absolute_import
 
+from django.db.models import Q
+
 from sentry.api.serializers import register, serialize, Serializer
-from sentry.models import Project, ProjectBookmark, ProjectOption, ProjectStatus
+from sentry.models import (
+    Project, ProjectBookmark, ProjectOption, ProjectStatus, UserOption
+)
 
 STATUS_LABELS = {
     ProjectStatus.VISIBLE: 'active',
@@ -19,8 +23,18 @@ class ProjectSerializer(Serializer):
                 user=user,
                 project_id__in=[i.id for i in item_list],
             ).values_list('project_id', flat=True))
+            user_options = {
+                (u.project_id, u.key): u.value
+                for u in UserOption.objects.filter(
+                    Q(user=user, project__in=item_list, key='mail:alert') |
+                    Q(user=user, key='subscribe_by_default', project__isnull=True)
+                )
+            }
+            default_subscribe = int(user_options.get('subscribe_by_default', 1))
         else:
             bookmarks = set()
+            user_options = {}
+            default_subscribe = False
 
         reviewed_callsigns = {
             p.project_id: p.value
@@ -34,6 +48,10 @@ class ProjectSerializer(Serializer):
         for item in item_list:
             result[item] = {
                 'is_bookmarked': item.id in bookmarks,
+                'is_subscribed': bool(user_options.get(
+                    (item.id, 'mail:alert'),
+                    default_subscribe,
+                )),
                 'reviewed-callsign': reviewed_callsigns.get(item.id),
             }
         return result
diff --git a/tests/sentry/api/endpoints/test_project_details.py b/tests/sentry/api/endpoints/test_project_details.py
index 0394d1c987..7cc6b35564 100644
--- a/tests/sentry/api/endpoints/test_project_details.py
+++ b/tests/sentry/api/endpoints/test_project_details.py
@@ -4,7 +4,7 @@ import mock
 
 from django.core.urlresolvers import reverse
 
-from sentry.models import Project, ProjectBookmark, ProjectStatus
+from sentry.models import Project, ProjectBookmark, ProjectStatus, UserOption
 from sentry.testutils import APITestCase
 
 
@@ -150,6 +150,31 @@ class ProjectUpdateTest(APITestCase):
             user=self.user,
         ).exists()
 
+    def test_subscription(self):
+        project = self.project  # force creation
+        self.login_as(user=self.user)
+        url = reverse('sentry-api-0-project-details', kwargs={
+            'organization_slug': project.organization.slug,
+            'project_slug': project.slug,
+        })
+        resp = self.client.put(url, data={
+            'isSubscribed': 'true',
+        })
+        assert resp.status_code == 200, resp.content
+        assert UserOption.objects.get(
+            user=self.user,
+            project=project,
+        ).value == 1
+
+        resp = self.client.put(url, data={
+            'isSubscribed': 'false',
+        })
+        assert resp.status_code == 200, resp.content
+        assert UserOption.objects.get(
+            user=self.user,
+            project=project,
+        ).value == 0
+
 
 class ProjectDeleteTest(APITestCase):
     @mock.patch('sentry.api.endpoints.project_details.delete_project')
