commit e7c15932bd59946bee5cb6779d5c2352b10f52a1
Author: Lyn Nagara <lyn.nagara@gmail.com>
Date:   Wed Mar 28 09:54:45 2018 -0700

    fix(environments): Fix all environments value for alert rules (#7791)
    
    Set default value to all environments, instead of ""
    
    Strip placeholder value before saving

diff --git a/src/sentry/static/sentry/app/views/ruleEditor/index.jsx b/src/sentry/static/sentry/app/views/ruleEditor/index.jsx
index 9ca65efebd..f92e8c1c9d 100644
--- a/src/sentry/static/sentry/app/views/ruleEditor/index.jsx
+++ b/src/sentry/static/sentry/app/views/ruleEditor/index.jsx
@@ -90,6 +90,7 @@ const RuleEditor = createReactClass({
         conditions: [],
         name: '',
         frequency: 30,
+        environment: ALL_ENVIRONMENTS_KEY,
       };
 
       this.setState({rule: defaultRule});
@@ -99,25 +100,28 @@ const RuleEditor = createReactClass({
   handleSubmit(e) {
     e.preventDefault();
 
-    const {rule} = this.state;
-    const isNew = !rule.id;
+    const data = {...this.state.rule};
+    const isNew = !data.id;
     const {project, organization} = this.props;
 
     let endpoint = `/projects/${organization.slug}/${project.slug}/rules/`;
-    if (rule.id) {
-      endpoint += rule.id + '/';
+    if (data.id) {
+      endpoint += data.id + '/';
+    }
+
+    if (data.environment === ALL_ENVIRONMENTS_KEY) {
+      delete data.environment;
     }
 
     addMessage(t('Saving...'));
 
     this.api.request(endpoint, {
       method: isNew ? 'POST' : 'PUT',
-      data: rule,
+      data,
       success: resp => {
-        const shouldRedirect = !rule.id;
         this.setState({error: null, loading: false, rule: resp});
         // Redirect to correct ID if /new
-        if (shouldRedirect) {
+        if (isNew) {
           browserHistory.replace(
             `/${organization.slug}/${project.slug}/settings/alerts/rules/${resp.id}/`
           );
diff --git a/tests/js/spec/views/__snapshots__/projectAlertRuleDetails.spec.jsx.snap b/tests/js/spec/views/__snapshots__/projectAlertRuleDetails.spec.jsx.snap
index d327cc20dd..5c93a82dcb 100644
--- a/tests/js/spec/views/__snapshots__/projectAlertRuleDetails.spec.jsx.snap
+++ b/tests/js/spec/views/__snapshots__/projectAlertRuleDetails.spec.jsx.snap
@@ -532,6 +532,14 @@ exports[`ProjectAlertRuleDetails Edit alert rule renders 1`] = `
                             "__all_environments__",
                             "All Environments",
                           ],
+                          Array [
+                            "production",
+                            "Production",
+                          ],
+                          Array [
+                            "staging",
+                            "Staging",
+                          ],
                         ]
                       }
                       className=""
@@ -581,6 +589,18 @@ exports[`ProjectAlertRuleDetails Edit alert rule renders 1`] = `
                             >
                               All Environments
                             </option>
+                            <option
+                              key="production"
+                              value="production"
+                            >
+                              Production
+                            </option>
+                            <option
+                              key="staging"
+                              value="staging"
+                            >
+                              Staging
+                            </option>
                           </select>
                         </div>
                       </div>
@@ -1344,6 +1364,14 @@ exports[`ProjectAlertRuleDetails New alert rule renders 1`] = `
                             "__all_environments__",
                             "All Environments",
                           ],
+                          Array [
+                            "production",
+                            "Production",
+                          ],
+                          Array [
+                            "staging",
+                            "Staging",
+                          ],
                         ]
                       }
                       className=""
@@ -1362,6 +1390,7 @@ exports[`ProjectAlertRuleDetails New alert rule renders 1`] = `
                           "marginRight": 5,
                         }
                       }
+                      value="__all_environments__"
                     >
                       <div
                         className="control-group required"
@@ -1384,7 +1413,7 @@ exports[`ProjectAlertRuleDetails New alert rule renders 1`] = `
                             onChange={[Function]}
                             placeholder="--"
                             required={true}
-                            value=""
+                            value="__all_environments__"
                           >
                             <option
                               key="__all_environments__"
@@ -1392,6 +1421,18 @@ exports[`ProjectAlertRuleDetails New alert rule renders 1`] = `
                             >
                               All Environments
                             </option>
+                            <option
+                              key="production"
+                              value="production"
+                            >
+                              Production
+                            </option>
+                            <option
+                              key="staging"
+                              value="staging"
+                            >
+                              Staging
+                            </option>
                           </select>
                         </div>
                       </div>
diff --git a/tests/js/spec/views/projectAlertRuleDetails.spec.jsx b/tests/js/spec/views/projectAlertRuleDetails.spec.jsx
index 9393925abf..0eafb0f9b6 100644
--- a/tests/js/spec/views/projectAlertRuleDetails.spec.jsx
+++ b/tests/js/spec/views/projectAlertRuleDetails.spec.jsx
@@ -3,6 +3,7 @@ import {mount} from 'enzyme';
 import {browserHistory} from 'react-router';
 
 import ProjectAlertRuleDetails from 'app/views/projectAlertRuleDetails';
+import EnvironmentStore from 'app/stores/environmentStore';
 
 jest.mock('jquery');
 
@@ -19,6 +20,7 @@ describe('ProjectAlertRuleDetails', function() {
       method: 'GET',
       body: TestStubs.ProjectAlertRule(),
     });
+    EnvironmentStore.loadActiveData(TestStubs.Environments());
   });
 
   afterEach(function() {
@@ -84,9 +86,10 @@ describe('ProjectAlertRuleDetails', function() {
 
   describe('Edit alert rule', function() {
     let wrapper, mock;
+    const endpoint = '/projects/org-slug/project-slug/rules/1/';
     beforeEach(function() {
       mock = MockApiClient.addMockResponse({
-        url: '/projects/org-slug/project-slug/rules/1/',
+        url: endpoint,
         method: 'PUT',
         body: TestStubs.ProjectAlertRule(),
       });
@@ -118,5 +121,34 @@ describe('ProjectAlertRuleDetails', function() {
     it('does not update URL', function() {
       expect(browserHistory.replace).not.toHaveBeenCalled();
     });
+
+    it('sends correct environment value', function() {
+      wrapper
+        .find('select#id-environment')
+        .simulate('change', {target: {value: 'production'}});
+      expect(wrapper.find('select#id-environment').props().value).toBe('production');
+      wrapper.find('form').simulate('submit');
+
+      expect(mock).toHaveBeenCalledWith(
+        endpoint,
+        expect.objectContaining({
+          data: expect.objectContaining({environment: 'production'}),
+        })
+      );
+    });
+
+    it('strips environment value if "All environments" is selected', function() {
+      wrapper
+        .find('select#id-environment')
+        .simulate('change', {target: {value: '__all_environments__'}});
+      wrapper.find('form').simulate('submit');
+
+      expect(mock).not.toHaveBeenCalledWith(
+        endpoint,
+        expect.objectContaining({
+          data: expect.objectContaining({environment: '__all_environments__'}),
+        })
+      );
+    });
   });
 });
