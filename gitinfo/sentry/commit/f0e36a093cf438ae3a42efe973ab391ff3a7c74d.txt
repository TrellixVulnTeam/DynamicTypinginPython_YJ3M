commit f0e36a093cf438ae3a42efe973ab391ff3a7c74d
Author: Lauryn Brown <lauryndbrown@gmail.com>
Date:   Tue Jul 3 11:08:03 2018 -0700

    feat(integrations): VSTS Sync Assignee Outbound (#8783)
    
    * Added get_users
    
    * Adding issues.py but will remove when it's time. I can't write this without it.
    
    * Created a test for sync assignee
    
    * Got assignee sync to work.
    
    * added integrationorg to the tests missing it.:
    
    * Added change that jess suggessed
    
    * added todo

diff --git a/src/sentry/integrations/vsts/client.py b/src/sentry/integrations/vsts/client.py
index ddfb2858ff..6ba47d7d19 100644
--- a/src/sentry/integrations/vsts/client.py
+++ b/src/sentry/integrations/vsts/client.py
@@ -8,6 +8,7 @@ FIELD_MAP = {
     'description': '/fields/System.Description',
     'comment': '/fields/System.History',
     'link': '/relations/-',
+    'assigned_to': '/fields/System.AssignedTo',
 }
 INVALID_ACCESS_TOKEN = 'HTTP 400 (invalid_request): The access token is not valid'
 
@@ -21,11 +22,12 @@ class VstsApiPath(object):
     work_items = u'https://{account_name}/DefaultCollection/_apis/wit/workitems/{id}'
     work_items_create = u'https://{account_name}/{project}/_apis/wit/workitems/${type}'
     work_items_types_states = u'https://{account_name}/{project}/_apis/wit/workitemtypes/{type}/states'
+    users = u'https://{account_name}.vssps.visualstudio.com/_apis/graph/users'
 
 
 class VstsApiClient(ApiClient, OAuth2RefreshMixin):
     api_version = '4.1'
-    api_version_preview = '-preview.1'  # in another pr vsts-assignee #8783
+    api_version_preview = '-preview.1'
 
     def __init__(self, identity, oauth_redirect_url, *args, **kwargs):
         super(VstsApiClient, self).__init__(*args, **kwargs)
@@ -36,9 +38,8 @@ class VstsApiClient(ApiClient, OAuth2RefreshMixin):
 
     def request(self, method, path, data=None, params=None, api_preview=False):
         self.check_auth(redirect_url=self.oauth_redirect_url)
-        api_version = self.api_version if api_preview is False else self.api_version + self.api_version_preview
         headers = {
-            'Accept': 'application/json; api-version={}'.format(api_version),
+            'Accept': 'application/json; api-version={}{}'.format(self.api_version, self.api_version_preview if api_preview else ''),
             'Content-Type': 'application/json-patch+json' if method == 'PATCH' else 'application/json',
             'X-HTTP-Method-Override': method,
             'X-TFS-FedAuthRedirect': 'Suppress',
@@ -88,10 +89,11 @@ class VstsApiClient(ApiClient, OAuth2RefreshMixin):
         )
 
     def update_work_item(self, instance, id, title=UNSET, description=UNSET, link=UNSET,
-                         comment=UNSET):
+                         comment=UNSET, assigned_to=UNSET):
         data = []
 
-        for f_name, f_value in (('title', title), ('description', description), ('link', link)):
+        for f_name, f_value in (('title', title), ('description', description),
+                                ('link', link), ('assigned_to', assigned_to)):
             if f_name == 'link':
                 # XXX: Link is not yet used, as we can't explicitly bind it to Sentry.
                 continue
@@ -218,3 +220,11 @@ class VstsApiClient(ApiClient, OAuth2RefreshMixin):
             ),
             params={'stateFilter': 'WellFormed'}
         )
+
+    def get_users(self, account_name):
+        return self.get(
+            VstsApiPath.users.format(
+                account_name=account_name,
+            ),
+            api_preview=True,
+        )
diff --git a/src/sentry/integrations/vsts/integration.py b/src/sentry/integrations/vsts/integration.py
index 1703623b23..f8edf8a24b 100644
--- a/src/sentry/integrations/vsts/integration.py
+++ b/src/sentry/integrations/vsts/integration.py
@@ -1,5 +1,6 @@
 from __future__ import absolute_import
 from time import time
+import logging
 
 from django.utils.translation import ugettext as _
 
@@ -27,6 +28,8 @@ metadata = IntegrationMetadata(
 
 
 class VstsIntegration(Integration, VstsIssueSync):
+    logger = logging.getLogger('sentry.integrations')
+
     def __init__(self, *args, **kwargs):
         super(VstsIntegration, self).__init__(*args, **kwargs)
         self.default_identity = None
diff --git a/src/sentry/integrations/vsts/issues.py b/src/sentry/integrations/vsts/issues.py
index 844819bb69..6930cba5a0 100644
--- a/src/sentry/integrations/vsts/issues.py
+++ b/src/sentry/integrations/vsts/issues.py
@@ -4,6 +4,8 @@ from mistune import markdown
 
 
 from sentry.integrations.issues import IssueSyncMixin
+
+from sentry.integrations.exceptions import ApiUnauthorized, ApiError
 from django.utils.translation import ugettext as _
 
 
@@ -86,3 +88,46 @@ class VstsIssueSync(IssueSyncMixin):
             'title': work_item['fields']['System.Title'],
             'description': work_item['fields'].get('System.Description')
         }
+
+    def sync_assignee_outbound(self, external_issue, user, assign=True, **kwargs):
+        client = self.get_client()
+        assignee = None
+
+        # TODO(LB): What's the scope here? is this correct?
+        # Get a list of all users in a given scope. How do we define scope?
+        # https://docs.microsoft.com/en-us/rest/api/vsts/graph/users/list?view=vsts-rest-4.1
+
+        if assign is True:
+            vsts_users = client.get_users(self.model.name)
+            sentry_emails = [email.email.lower() for email in user.get_verified_emails()]
+
+            for vsts_user in vsts_users['value']:
+                vsts_email = vsts_user.get(u'mailAddress')
+                if vsts_email and vsts_email.lower() in sentry_emails:
+                    assignee = vsts_user['mailAddress']
+                    break
+
+            if assignee is None:
+                # TODO(lb): Email people when this happens
+                self.logger.info(
+                    'vsts.assignee-not-found',
+                    extra={
+                        'integration_id': external_issue.integration_id,
+                        'user_id': user.id,
+                        'issue_key': external_issue.key,
+                    }
+                )
+                return
+
+        try:
+            client.update_work_item(
+                self.instance, external_issue.key, assigned_to=assignee)
+        except (ApiUnauthorized, ApiError):
+            self.logger.info(
+                'vsts.failed-to-assign',
+                extra={
+                    'integration_id': external_issue.integration_id,
+                    'user_id': user.id,
+                    'issue_key': external_issue.key,
+                }
+            )
diff --git a/tests/sentry/integrations/vsts/test_issues.py b/tests/sentry/integrations/vsts/test_issues.py
index 78260068de..f67aa03877 100644
--- a/tests/sentry/integrations/vsts/test_issues.py
+++ b/tests/sentry/integrations/vsts/test_issues.py
@@ -7,11 +7,11 @@ from django.test import RequestFactory
 from time import time
 
 from sentry.integrations.vsts.integration import VstsIntegration
-from sentry.models import Identity, IdentityProvider, Integration
+from sentry.models import ExternalIssue, Identity, IdentityProvider, Integration
 from sentry.testutils import TestCase
 from sentry.utils import json
 
-from .testutils import WORK_ITEM_RESPONSE
+from .testutils import WORK_ITEM_RESPONSE, GET_USERS_RESPONSE
 
 
 class VstsIssueSycnTest(TestCase):
@@ -26,7 +26,7 @@ class VstsIssueSycnTest(TestCase):
         model = Integration.objects.create(
             provider='vsts',
             external_id='vsts_external_id',
-            name='fabrikam-fiber-inc.visualstudio.com',
+            name='fabrikam-fiber-inc',
             metadata={
                 'domain_name': 'fabrikam-fiber-inc.visualstudio.com',
                 'default_project': '0987654321',
@@ -114,3 +114,34 @@ class VstsIssueSycnTest(TestCase):
         }
         request = responses.calls[-1].request
         assert request.headers['Content-Type'] == 'application/json'
+
+    @responses.activate
+    def test_sync_assignee_outbound(self):
+        vsts_work_item_id = 5
+        responses.add(
+            responses.PATCH,
+            'https://fabrikam-fiber-inc.visualstudio.com/DefaultCollection/_apis/wit/workitems/%d' % vsts_work_item_id,
+            body=WORK_ITEM_RESPONSE,
+            content_type='application/json',
+        )
+        responses.add(
+            responses.GET,
+            'https://fabrikam-fiber-inc.vssps.visualstudio.com/_apis/graph/users',
+            body=GET_USERS_RESPONSE,
+            content_type='application/json',
+        )
+
+        user = self.create_user('ftotten@vscsi.us')
+        external_issue = ExternalIssue.objects.create(
+            organization_id=self.organization.id,
+            integration_id=self.integration.model.id,
+            key=vsts_work_item_id,
+            title='I\'m a title!',
+            description='I\'m a description.'
+        )
+        self.integration.sync_assignee_outbound(external_issue, user, assign=True)
+        assert len(responses.calls) == 2
+        assert responses.calls[0].request.url == 'https://fabrikam-fiber-inc.vssps.visualstudio.com/_apis/graph/users'
+        assert responses.calls[0].response.status_code == 200
+        assert responses.calls[1].request.url == 'https://fabrikam-fiber-inc.visualstudio.com/DefaultCollection/_apis/wit/workitems/%d' % vsts_work_item_id
+        assert responses.calls[1].response.status_code == 200
diff --git a/tests/sentry/integrations/vsts/testutils.py b/tests/sentry/integrations/vsts/testutils.py
index c08c3c7ae1..b141c36242 100644
--- a/tests/sentry/integrations/vsts/testutils.py
+++ b/tests/sentry/integrations/vsts/testutils.py
@@ -91,3 +91,93 @@ WORK_ITEM_RESPONSE = """{
   },
   "url": "https://fabrikam-fiber-inc.visualstudio.com/DefaultCollection/_apis/wit/workItems/309"
 }"""
+
+GET_USERS_RESPONSE = b"""{
+  "count": 4,
+  "value": [
+    {
+      "subjectKind": "user",
+      "cuid": "ec09a4d8-d914-4f28-9e39-23d52b683f90",
+      "domain": "Build",
+      "principalName": "51ac8d19-6694-459f-a65e-bec30e9e2e33",
+      "mailAddress": "",
+      "origin": "vsts",
+      "originId": "ec09a4d8-d914-4f28-9e39-23d52b683f90",
+      "displayName": "Project Collection Build Service (Ftottentest2)",
+      "_links": {
+        "self": {
+          "href": "https://fabrikam.vssps.visualstudio.com/_apis/graph/users/TWljcm9zb2Z0LlRlYW1Gb3VuZGF0aW9uLlNlcnZpY2VJZGVudGl0eTtmMzViOTAxNS1jZGU4LTQ4MzQtYTFkNS0wOWU4ZjM1OWNiODU6QnVpbGQ6NTFhYzhkMTktNjY5NC00NTlmLWE2NWUtYmVjMzBlOWUyZTMz"
+        },
+        "memberships": {
+          "href": "https://fabrikam.vssps.visualstudio.com/_apis/graph/memberships/TWljcm9zb2Z0LlRlYW1Gb3VuZGF0aW9uLlNlcnZpY2VJZGVudGl0eTtmMzViOTAxNS1jZGU4LTQ4MzQtYTFkNS0wOWU4ZjM1OWNiODU6QnVpbGQ6NTFhYzhkMTktNjY5NC00NTlmLWE2NWUtYmVjMzBlOWUyZTMz"
+        }
+      },
+      "url": "https://fabrikam.vssps.visualstudio.com/_apis/graph/users/TWljcm9zb2Z0LlRlYW1Gb3VuZGF0aW9uLlNlcnZpY2VJZGVudGl0eTtmMzViOTAxNS1jZGU4LTQ4MzQtYTFkNS0wOWU4ZjM1OWNiODU6QnVpbGQ6NTFhYzhkMTktNjY5NC00NTlmLWE2NWUtYmVjMzBlOWUyZTMz",
+      "descriptor": "TWljcm9zb2Z0LlRlYW1Gb3VuZGF0aW9uLlNlcnZpY2VJZGVudGl0eTtmMzViOTAxNS1jZGU4LTQ4MzQtYTFkNS0wOWU4ZjM1OWNiODU6QnVpbGQ6NTFhYzhkMTktNjY5NC00NTlmLWE2NWUtYmVjMzBlOWUyZTMz"
+    },
+    {
+      "subjectKind": "user",
+      "metaType": "member",
+      "cuid": "00ca946b-2fe9-4f2a-ae2f-40d5c48001bc",
+      "domain": "LOCAL AUTHORITY",
+      "principalName": "TeamFoundationService (TEAM FOUNDATION)",
+      "mailAddress": "",
+      "origin": "vsts",
+      "originId": "00ca946b-2fe9-4f2a-ae2f-40d5c48001bc",
+      "displayName": "TeamFoundationService (TEAM FOUNDATION)",
+      "_links": {
+        "self": {
+          "href": "https://fabrikam.vssps.visualstudio.com/_apis/graph/users/TWljcm9zb2Z0LklkZW50aXR5TW9kZWwuQ2xhaW1zLkNsYWltc0lkZW50aXR5Ozc3ODlmMDlkLWUwNTMtNGYyZS1iZGVlLTBjOGY4NDc2YTRiYw"
+        },
+        "memberships": {
+          "href": "https://fabrikam.vssps.visualstudio.com/_apis/graph/memberships/TWljcm9zb2Z0LklkZW50aXR5TW9kZWwuQ2xhaW1zLkNsYWltc0lkZW50aXR5Ozc3ODlmMDlkLWUwNTMtNGYyZS1iZGVlLTBjOGY4NDc2YTRiYw"
+        }
+      },
+      "url": "https://fabrikam.vssps.visualstudio.com/_apis/graph/users/TWljcm9zb2Z0LklkZW50aXR5TW9kZWwuQ2xhaW1zLkNsYWltc0lkZW50aXR5Ozc3ODlmMDlkLWUwNTMtNGYyZS1iZGVlLTBjOGY4NDc2YTRiYw",
+      "descriptor": "TWljcm9zb2Z0LklkZW50aXR5TW9kZWwuQ2xhaW1zLkNsYWltc0lkZW50aXR5Ozc3ODlmMDlkLWUwNTMtNGYyZS1iZGVlLTBjOGY4NDc2YTRiYw"
+    },
+    {
+      "subjectKind": "user",
+      "metaType": "member",
+      "cuid": "ddd94918-1fc8-459b-994a-cca86c4fbe95",
+      "domain": "TEAM FOUNDATION",
+      "principalName": "Anonymous",
+      "mailAddress": "",
+      "origin": "vsts",
+      "originId": "ddd94918-1fc8-459b-994a-cca86c4fbe95",
+      "displayName": "Anonymous",
+      "_links": {
+        "self": {
+          "href": "https://fabrikam.vssps.visualstudio.com/_apis/graph/users/TWljcm9zb2Z0LlRlYW1Gb3VuZGF0aW9uLlVuYXV0aGVudGljYXRlZElkZW50aXR5O1MtMS0wLTA"
+        },
+        "memberships": {
+          "href": "https://fabrikam.vssps.visualstudio.com/_apis/graph/memberships/TWljcm9zb2Z0LlRlYW1Gb3VuZGF0aW9uLlVuYXV0aGVudGljYXRlZElkZW50aXR5O1MtMS0wLTA"
+        }
+      },
+      "url": "https://fabrikam.vssps.visualstudio.com/_apis/graph/users/TWljcm9zb2Z0LlRlYW1Gb3VuZGF0aW9uLlVuYXV0aGVudGljYXRlZElkZW50aXR5O1MtMS0wLTA",
+      "descriptor": "TWljcm9zb2Z0LlRlYW1Gb3VuZGF0aW9uLlVuYXV0aGVudGljYXRlZElkZW50aXR5O1MtMS0wLTA"
+    },
+    {
+      "subjectKind": "user",
+      "metaType": "member",
+      "cuid": "65903f92-53dc-61b3-bb0e-e69cfa1cb719",
+      "domain": "45aa3d2d-7442-473d-b4d3-3c670da9dd96",
+      "principalName": "ftotten@vscsi.us",
+      "mailAddress": "ftotten@vscsi.us",
+      "origin": "aad",
+      "originId": "4be8f294-000d-4431-8506-57420b88e204",
+      "displayName": "Francis Totten",
+      "_links": {
+        "self": {
+          "href": "https://fabrikam.vssps.visualstudio.com/_apis/graph/users/TWljcm9zb2Z0LklkZW50aXR5TW9kZWwuQ2xhaW1zLkNsYWltc0lkZW50aXR5OzQ1YWEzZDJkLTc0NDItNDczZC1iNGQzLTNjNjcwZGE5ZGQ5NlxmdG90dGVuQHZzY3NpLnVz"
+        },
+        "memberships": {
+          "href": "https://fabrikam.vssps.visualstudio.com/_apis/graph/memberships/TWljcm9zb2Z0LklkZW50aXR5TW9kZWwuQ2xhaW1zLkNsYWltc0lkZW50aXR5OzQ1YWEzZDJkLTc0NDItNDczZC1iNGQzLTNjNjcwZGE5ZGQ5NlxmdG90dGVuQHZzY3NpLnVz"
+        }
+      },
+      "url": "https://fabrikam.vssps.visualstudio.com/_apis/graph/users/TWljcm9zb2Z0LklkZW50aXR5TW9kZWwuQ2xhaW1zLkNsYWltc0lkZW50aXR5OzQ1YWEzZDJkLTc0NDItNDczZC1iNGQzLTNjNjcwZGE5ZGQ5NlxmdG90dGVuQHZzY3NpLnVz",
+      "descriptor": "TWljcm9zb2Z0LklkZW50aXR5TW9kZWwuQ2xhaW1zLkNsYWltc0lkZW50aXR5OzQ1YWEzZDJkLTc0NDItNDczZC1iNGQzLTNjNjcwZGE5ZGQ5NlxmdG90dGVuQHZzY3NpLnVz"
+    }
+  ]
+}
+"""
diff --git a/tests/sentry/models/test_groupassignee.py b/tests/sentry/models/test_groupassignee.py
index f25d082d93..e7d9806f24 100644
--- a/tests/sentry/models/test_groupassignee.py
+++ b/tests/sentry/models/test_groupassignee.py
@@ -112,6 +112,7 @@ class GroupAssigneeTestCase(TestCase):
             provider='example',
             external_id='123456',
         )
+        integration.add_organization(group.organization.id)
 
         external_issue = ExternalIssue.objects.create(
             organization_id=group.organization.id,
@@ -158,6 +159,7 @@ class GroupAssigneeTestCase(TestCase):
             provider='example',
             external_id='123456',
         )
+        integration.add_organization(group.organization.id)
 
         external_issue = ExternalIssue.objects.create(
             organization_id=group.organization.id,
