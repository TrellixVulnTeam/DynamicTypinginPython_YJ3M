commit b24e1778d9d07cae3ed47658e7619097db34ffb2
Author: James Cunningham <cunninghamjt09@gmail.com>
Date:   Mon Jun 27 11:30:16 2016 -0700

    Add a human renderer and stop message_id from getting into other places. (#3593)
    
    * Unbind message-ids that are getting into different requests.
    
    * Add a human renderer.
    
    * better way of tmp-binding
    
    * Add clause for integer levels.

diff --git a/src/sentry/logging/handlers.py b/src/sentry/logging/handlers.py
index a726740289..cd61cdc3e9 100644
--- a/src/sentry/logging/handlers.py
+++ b/src/sentry/logging/handlers.py
@@ -29,6 +29,23 @@ class JSONRenderer(object):
         return _default_encoder(event_dict)
 
 
+class HumanRenderer(object):
+    def __call__(self, logger, name, event_dict):
+        level = event_dict.pop('level')
+        real_level = (level.upper()
+            if isinstance(level, basestring)
+            else logging.getLevelName(level)
+        )
+        base = '[%s] %s: %s' % (
+            real_level,
+            event_dict.pop('name', 'root'),
+            event_dict.pop('event'),
+        )
+        join = ' '.join(k + '=' + repr(v)
+               for k, v in event_dict.iteritems())
+        return '%s %s' % (base, join)
+
+
 class StructLogHandler(logging.StreamHandler):
     def emit(self, record, logger=get_logger()):
         kwargs = {
diff --git a/src/sentry/runner/initializer.py b/src/sentry/runner/initializer.py
index 5b6116cdf5..da99ff872e 100644
--- a/src/sentry/runner/initializer.py
+++ b/src/sentry/runner/initializer.py
@@ -173,15 +173,10 @@ def configure_structlog():
     }
     fmt = options.get('system.logging-format')
     if fmt == LoggingFormat.HUMAN:
+        from sentry.logging.handlers import HumanRenderer
         kwargs['processors'].extend([
             structlog.processors.ExceptionPrettyPrinter(),
-            structlog.processors.KeyValueRenderer(
-                key_order=[
-                    'name',
-                    'level',
-                    'event',
-                ]
-            )
+            HumanRenderer(),
         ])
     elif fmt == LoggingFormat.MACHINE:
         from sentry.logging.handlers import JSONRenderer
diff --git a/src/sentry/utils/email.py b/src/sentry/utils/email.py
index d1f0553c8d..91bcc22b11 100644
--- a/src/sentry/utils/email.py
+++ b/src/sentry/utils/email.py
@@ -377,12 +377,18 @@ class MessageBuilder(object):
                 message=message,
                 _with_transaction=False,
             )
-            logger.bind(message_id=message.extra_headers['Message-Id'])
+            message_id = message.extra_headers['Message-Id']
             if fmt == LoggingFormat.HUMAN:
-                log_mail_queued(message_to=self.format_to(message.to))
+                log_mail_queued(
+                    message_id=message_id,
+                    message_to=self.format_to(message.to),
+                )
             elif fmt == LoggingFormat.MACHINE:
                 for recipient in message.to:
-                    log_mail_queued(message_to=recipient)
+                    log_mail_queued(
+                        message_id=message_id,
+                        message_to=recipient,
+                    )
 
 
 def send_messages(messages, fail_silently=False):
