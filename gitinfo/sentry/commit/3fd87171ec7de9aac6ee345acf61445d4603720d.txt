commit 3fd87171ec7de9aac6ee345acf61445d4603720d
Author: Matt Robenolt <matt@ydekproductions.com>
Date:   Sun Dec 20 17:13:38 2015 -0800

    Compress releasefile contents before storing in cache

diff --git a/src/sentry/lang/javascript/processor.py b/src/sentry/lang/javascript/processor.py
index 591816a9fc..d411a94012 100644
--- a/src/sentry/lang/javascript/processor.py
+++ b/src/sentry/lang/javascript/processor.py
@@ -5,6 +5,7 @@ __all__ = ['SourceProcessor']
 import logging
 import re
 import base64
+import zlib
 
 from django.conf import settings
 from django.core.exceptions import SuspiciousOperation
@@ -27,6 +28,7 @@ from sentry.constants import MAX_CULPRIT_LENGTH
 from sentry.interfaces.stacktrace import Stacktrace
 from sentry.models import EventError, Release, ReleaseFile
 from sentry.utils.cache import cache
+from sentry.utils.files import compress_file
 from sentry.utils.hashlib import md5
 from sentry.utils.http import is_valid_origin
 from sentry.utils.strings import truncatechars
@@ -182,7 +184,7 @@ def discover_sourcemap(result):
 
 
 def fetch_release_file(filename, release):
-    cache_key = 'releasefile:%s:%s' % (
+    cache_key = 'releasefile:1:%s:%s' % (
         release.id,
         md5(filename).hexdigest(),
     )
@@ -208,16 +210,24 @@ def fetch_release_file(filename, release):
                      filename, releasefile.id, release.id)
         try:
             with releasefile.file.getfile() as fp:
-                body = fp.read()
+                z_body, body = compress_file(fp)
         except Exception as e:
             logger.exception(unicode(e))
-            result = -1
+            cache.set(cache_key, -1, 3600)
+            result = None
         else:
+            # Write the compressed version to cache, but return the deflated version
+            cache.set(cache_key, (releasefile.file.headers, z_body, 200), 3600)
             result = (releasefile.file.headers, body, 200)
-        cache.set(cache_key, result, 3600)
-
-    if result == -1:
+    elif result == -1:
+        # We cached an error, so normalize
+        # it down to None
         result = None
+    else:
+        # We got a cache hit, but the body is compressed, so we
+        # need to decompress it before handing it off
+        body = zlib.decompress(result[1])
+        result = (result[0], body, result[2])
 
     return result
 
diff --git a/src/sentry/utils/files.py b/src/sentry/utils/files.py
new file mode 100644
index 0000000000..1252e0002b
--- /dev/null
+++ b/src/sentry/utils/files.py
@@ -0,0 +1,20 @@
+"""
+sentry.utils.files
+~~~~~~~~~~~~~~~~~~
+
+:copyright: (c) 2010-2014 by the Sentry Team, see AUTHORS for more details.
+:license: BSD, see LICENSE for more details.
+"""
+from __future__ import absolute_import
+
+import zlib
+
+
+def compress_file(fp, level=6):
+    compressor = zlib.compressobj(level)
+    z_chunks = []
+    chunks = []
+    for chunk in fp.chunks():
+        chunks.append(chunk)
+        z_chunks.append(compressor.compress(chunk))
+    return (b''.join(z_chunks) + compressor.flush(), b''.join(chunks))
