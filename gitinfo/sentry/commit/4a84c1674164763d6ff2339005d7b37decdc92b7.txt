commit 4a84c1674164763d6ff2339005d7b37decdc92b7
Author: David Cramer <dcramer@gmail.com>
Date:   Tue Nov 14 15:07:07 2017 -0800

    revert: "fix(ui): Improve handling of errors in Form components"
    
    This reverts commit f22bb1f5d54e49a42a63ead99b5fb81b45e38cec.

diff --git a/src/sentry/static/sentry/app/components/forms/booleanField.jsx b/src/sentry/static/sentry/app/components/forms/booleanField.jsx
index c819375609..eba0da4d11 100644
--- a/src/sentry/static/sentry/app/components/forms/booleanField.jsx
+++ b/src/sentry/static/sentry/app/components/forms/booleanField.jsx
@@ -28,7 +28,7 @@ export default class BooleanField extends InputField {
   }
 
   render() {
-    let {error} = this.state;
+    let error = this.getError();
     let className = this.getClassName();
     if (error) {
       className += ' has-error';
diff --git a/src/sentry/static/sentry/app/components/forms/form.jsx b/src/sentry/static/sentry/app/components/forms/form.jsx
index fd0a28dd32..7edcff7496 100644
--- a/src/sentry/static/sentry/app/components/forms/form.jsx
+++ b/src/sentry/static/sentry/app/components/forms/form.jsx
@@ -98,26 +98,12 @@ export default class Form extends React.Component {
     let hasChanges = requireChanges
       ? Object.keys(data).length && !_.isEqual(data, initialData)
       : true;
-    let isError = this.state.state == FormState.ERROR;
     return (
       <form onSubmit={this.onSubmit} className={this.props.className}>
-        {isError && (
+        {this.state.state === FormState.ERROR && (
           <div className="alert alert-error alert-block">
-            {this.state.errors.non_field_errors ? (
-              <div>
-                <p>
-                  {t(
-                    'Unable to save your changes. Please correct the following errors try again.'
-                  )}
-                </p>
-                <ul>
-                  {this.state.errors.non_field_errors.map((e, i) => <li key={i}>{e}</li>)}
-                </ul>
-              </div>
-            ) : (
-              t(
-                'Unable to save your changes. Please ensure all fields are valid and try again.'
-              )
+            {t(
+              'Unable to save your changes. Please ensure all fields are valid and try again.'
             )}
           </div>
         )}
diff --git a/src/sentry/static/sentry/app/components/forms/formField.jsx b/src/sentry/static/sentry/app/components/forms/formField.jsx
index 61fcd41fd4..3eeb2e927e 100644
--- a/src/sentry/static/sentry/app/components/forms/formField.jsx
+++ b/src/sentry/static/sentry/app/components/forms/formField.jsx
@@ -38,7 +38,6 @@ export default class FormField extends React.PureComponent {
   constructor(props, context) {
     super(props, context);
     this.state = {
-      error: null,
       value: this.getValue(props, context),
     };
   }
@@ -46,13 +45,11 @@ export default class FormField extends React.PureComponent {
   componentDidMount() {}
 
   componentWillReceiveProps(nextProps, nextContext) {
-    let newError = this.getError(nextProps, nextContext);
-    let newValue = this.getValue(nextProps, nextContext);
-    if (newError != this.state.error) {
-      this.setState({error: newError});
-    }
-    if (newValue !== this.state.value) {
-      this.setValue(newValue);
+    if (
+      this.props.value !== nextProps.value ||
+      (!defined(this.context.form) && defined(nextContext.form))
+    ) {
+      this.setValue(this.getValue(nextProps, nextContext));
     }
   }
 
@@ -120,7 +117,7 @@ export default class FormField extends React.PureComponent {
       help,
       style,
     } = this.props;
-    let {error} = this.state;
+    let error = this.getError();
     let cx = classNames(className, this.getClassName(), {
       'has-error': !!error,
       required,
diff --git a/src/sentry/static/sentry/app/components/forms/multipleCheckboxField.jsx b/src/sentry/static/sentry/app/components/forms/multipleCheckboxField.jsx
index 22b2fa308d..d1e91da89d 100644
--- a/src/sentry/static/sentry/app/components/forms/multipleCheckboxField.jsx
+++ b/src/sentry/static/sentry/app/components/forms/multipleCheckboxField.jsx
@@ -61,7 +61,7 @@ export default class MultipleCheckboxField extends FormField {
       hideLabelDivider,
       style,
     } = this.props;
-    let {error} = this.state;
+    let error = this.getError();
     let cx = classNames(className, 'control-group', {
       'has-error': error,
     });
