commit c04ecec735cf5d95680d8cdd05b42a404d03d52f
Author: Lyn Nagara <lyn.nagara@gmail.com>
Date:   Tue Oct 16 15:00:34 2018 -0700

    test(events): Add tests for group events view (#10145)

diff --git a/tests/js/spec/views/groupEvents.spec.jsx b/tests/js/spec/views/groupEvents.spec.jsx
index 1c7e787f0f..9500cf293a 100644
--- a/tests/js/spec/views/groupEvents.spec.jsx
+++ b/tests/js/spec/views/groupEvents.spec.jsx
@@ -1,6 +1,7 @@
 import React from 'react';
 import PropTypes from 'prop-types';
 import {shallow} from 'enzyme';
+import {browserHistory} from 'react-router';
 
 import {GroupEvents} from 'app/views/groupEvents';
 
@@ -10,6 +11,8 @@ describe('groupEvents', function() {
       url: '/issues/1/events/',
       body: TestStubs.Events(),
     });
+
+    browserHistory.push = jest.fn();
   });
 
   it('renders', function() {
@@ -25,6 +28,54 @@ describe('groupEvents', function() {
         },
       }
     );
+
     expect(component).toMatchSnapshot();
   });
+
+  it('handles search', function() {
+    const component = shallow(
+      <GroupEvents
+        params={{orgId: 'orgId', projectId: 'projectId', groupId: '1'}}
+        location={{query: {}}}
+      />,
+      {
+        context: {...TestStubs.router(), group: TestStubs.Group()},
+        childContextTypes: {
+          router: PropTypes.object,
+        },
+      }
+    );
+
+    const list = [
+      {searchTerm: '', expectedQuery: {}},
+      {searchTerm: 'test', expectedQuery: {query: 'test'}},
+      {searchTerm: 'environment:production test', expectedQuery: {query: 'test'}},
+    ];
+
+    list.forEach(item => {
+      component.instance().handleSearch(item.searchTerm);
+      expect(browserHistory.push).toHaveBeenCalledWith(
+        expect.objectContaining({
+          query: item.expectedQuery,
+        })
+      );
+    });
+  });
+
+  it('can change environment', function() {
+    const component = shallow(
+      <GroupEvents
+        params={{orgId: 'orgId', projectId: 'projectId', groupId: '1'}}
+        location={{query: {}}}
+        environment={TestStubs.Environments()[0]}
+      />,
+      {
+        context: {...TestStubs.router(), group: TestStubs.Group()},
+        childContextTypes: {
+          router: PropTypes.object,
+        },
+      }
+    );
+    component.setProps({environment: TestStubs.Environments()[1]});
+  });
 });
