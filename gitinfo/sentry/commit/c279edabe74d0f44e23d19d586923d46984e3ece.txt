commit c279edabe74d0f44e23d19d586923d46984e3ece
Author: David Cramer <dcramer@gmail.com>
Date:   Sat Sep 27 16:55:27 2014 -0700

    Expand assigned query and tests

diff --git a/src/sentry/search/utils.py b/src/sentry/search/utils.py
index 3ff93193a6..c244e0c9a8 100644
--- a/src/sentry/search/utils.py
+++ b/src/sentry/search/utils.py
@@ -1,6 +1,7 @@
 from __future__ import absolute_import, division, print_function
 
 from sentry.constants import STATUS_CHOICES
+from sentry.models import User
 from sentry.utils.auth import find_users
 
 
@@ -43,7 +44,9 @@ def parse_query(query, user):
                 try:
                     results['assigned_to'] = find_users(value)[0]
                 except IndexError:
-                    pass
+                    # XXX(dcramer): hacky way to avoid showing any results when
+                    # an invalid user is entered
+                    results['assigned_to'] = User(id=0)
         else:
             results['tags'][key] = value
 
diff --git a/tests/sentry/search/test_utils.py b/tests/sentry/search/test_utils.py
index 425b9c7190..77e719caaa 100644
--- a/tests/sentry/search/test_utils.py
+++ b/tests/sentry/search/test_utils.py
@@ -37,3 +37,11 @@ class ParseQueryTest(TestCase):
     def test_assigned_me(self):
         result = parse_query('assigned:me', self.user)
         assert result == {'assigned_to': self.user, 'tags': {}, 'query': ''}
+
+    def test_assigned_email(self):
+        result = parse_query('assigned:%s' % (self.user.email,), self.user)
+        assert result == {'assigned_to': self.user, 'tags': {}, 'query': ''}
+
+    def test_assigned_unknown_user(self):
+        result = parse_query('assigned:fake@example.com', self.user)
+        assert result['assigned_to'].id == 0
