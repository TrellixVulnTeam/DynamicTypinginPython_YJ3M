commit 7de3ee39c31bc885e814e82c61c8a7332bcf57e2
Author: David Cramer <dcramer@gmail.com>
Date:   Mon Mar 19 22:09:54 2012 -0700

    Correctly handle utf8 characters in mail (fixes GH-372)

diff --git a/sentry/plugins/sentry_mail/__init__.py b/sentry/plugins/sentry_mail/__init__.py
index cc98f0d9f3..3073726bc4 100644
--- a/sentry/plugins/sentry_mail/__init__.py
+++ b/sentry/plugins/sentry_mail/__init__.py
@@ -15,12 +15,23 @@ from sentry.plugins import register
 from sentry.plugins.bases.notify import NotifyPlugin, NotifyConfigurationForm
 import re
 
-import pynliner
+from pynliner import Pynliner
 
 NOTSET = object()
 split_re = re.compile(r'\s*,\s*|\s+')
 
 
+class UnicodeSafePynliner(Pynliner):
+    def _get_output(self):
+        """
+        Generate Unicode string of `self.soup` and set it to `self.output`
+
+        Returns self.output
+        """
+        self.output = unicode(self.soup)
+        return self.output
+
+
 class MailConfigurationForm(NotifyConfigurationForm):
     send_to = forms.CharField(label=_('Send to'), required=False,
         help_text=_('Enter one or more emails separated by commas or lines.'),
@@ -103,7 +114,7 @@ class MailProcessor(NotifyPlugin):
                 continue
             interface_list.append((interface.get_title(), body))
 
-        subject = '[%s] %s: %s' % (project.name, event.get_level_display().upper(), event.message)
+        subject = '[%s] %s: %s' % (project.name.encode('utf-8'), event.get_level_display().upper(), event.message.encode('utf-8'))
 
         link = '%s/%d/group/%d/' % (settings.URL_PREFIX, group.project_id, group.id)
 
@@ -113,12 +124,12 @@ class MailProcessor(NotifyPlugin):
             'link': link,
             'interfaces': interface_list,
         })
-        html_body = pynliner.fromString(render_to_string('sentry/emails/error.html', {
+        html_body = UnicodeSafePynliner().from_string(render_to_string('sentry/emails/error.html', {
             'group': group,
             'event': event,
             'link': link,
             'interfaces': interface_list,
-        }))
+        })).run()
 
         self._send_mail(
             subject=subject,
diff --git a/tests/sentry/plugins/mail/tests.py b/tests/sentry/plugins/mail/tests.py
index 97774cab92..a6e8fd3365 100644
--- a/tests/sentry/plugins/mail/tests.py
+++ b/tests/sentry/plugins/mail/tests.py
@@ -76,6 +76,28 @@ class MailProcessorTest(TestCase):
         stacktrace.get_title.assert_called_once_with()
         stacktrace.to_string.assert_called_once_with(event)
 
+    @mock.patch('sentry.plugins.sentry_mail.MailProcessor._send_mail')
+    def test_notify_users_renders_interfaces_with_utf8(self, _send_mail):
+        group = Mock(spec=Group)
+        group.first_seen = datetime.datetime.now()
+        group.project_id = 1
+        group.id = 2
+        stacktrace = Mock(spec=Stacktrace)
+        stacktrace.to_string.return_value = u'רונית מגן'
+        stacktrace.get_title.return_value = 'Stacktrace'
+        event = Event()
+        event.message = 'hello world'
+        event.logger = 'root'
+        event.site = None
+        event.interfaces = {'sentry.interfaces.Stacktrace': stacktrace}
+
+        with self.Settings(SENTRY_URL_PREFIX='http://example.com'):
+            p = MailProcessor(send_to=['foo@example.com'])
+            p.notify_users(group, event)
+
+        stacktrace.get_title.assert_called_once_with()
+        stacktrace.to_string.assert_called_once_with(event)
+
     @mock.patch('sentry.plugins.sentry_mail.MailProcessor._send_mail')
     def test_notify_users_does_email(self, _send_mail):
         project = Project(id=1, name='Project Name')
