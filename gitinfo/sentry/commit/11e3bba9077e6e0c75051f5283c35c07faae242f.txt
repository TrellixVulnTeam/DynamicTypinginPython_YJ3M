commit 11e3bba9077e6e0c75051f5283c35c07faae242f
Author: Billy Vong <billyvg@users.noreply.github.com>
Date:   Thu Mar 26 08:00:29 2020 -0700

    fix(workflow): Fix Alert Rule List condition padding (#17917)
    
    Content was overflowing because of old CSS.

diff --git a/src/sentry/static/sentry/app/views/settings/projectAlerts/ruleRow.tsx b/src/sentry/static/sentry/app/views/settings/projectAlerts/ruleRow.tsx
index d7366ddb8b..9fbf5d67c3 100644
--- a/src/sentry/static/sentry/app/views/settings/projectAlerts/ruleRow.tsx
+++ b/src/sentry/static/sentry/app/views/settings/projectAlerts/ruleRow.tsx
@@ -1,5 +1,6 @@
 import {Link} from 'react-router';
 import {RouteComponentProps} from 'react-router/lib/Router';
+import {css} from '@emotion/core';
 import PropTypes from 'prop-types';
 import React from 'react';
 import styled from '@emotion/styled';
@@ -162,16 +163,18 @@ const RuleName = styled(Link)`
   font-weight: bold;
 `;
 
+const listingCss = css`
+  display: grid;
+  grid-gap: ${space(1)};
+`;
+
 const Conditions = styled('div')`
-  display: flex;
-  flex-direction: column;
-  justify-content: space-between;
-  height: 100%;
+  ${listingCss};
 `;
 
-// For tests
 const Actions = styled('div')<HasBorderProp>`
   font-size: ${p => p.theme.fontSizeSmall};
+  ${listingCss};
 
   ${p => p.hideBorder && `border-bottom: none`};
 `;
diff --git a/tests/acceptance/test_project_alert_settings.py b/tests/acceptance/test_project_alert_settings.py
index fd9e93a8ee..5f222f2686 100644
--- a/tests/acceptance/test_project_alert_settings.py
+++ b/tests/acceptance/test_project_alert_settings.py
@@ -13,13 +13,32 @@ class ProjectAlertSettingsTest(AcceptanceTestCase):
         self.project = self.create_project(organization=self.org, teams=[self.team], name="Bengal")
         self.create_member(user=self.user, organization=self.org, role="owner", teams=[self.team])
 
-        action_data = {"id": "sentry.rules.actions.notify_event.NotifyEventAction"}
-        condition_data = {"id": "sentry.rules.conditions.every_event.EveryEventCondition"}
+        action_data = [
+            {
+                "id": "sentry.rules.actions.notify_event.NotifyEventAction",
+                "name": "Send a notification (for all legacy integrations)",
+            },
+            {
+                "id": "sentry.rules.actions.notify_event_service.NotifyEventServiceAction",
+                "service": "mail",
+                "name": "Send a notification via mail",
+            },
+        ]
+        condition_data = [
+            {
+                "id": "sentry.rules.conditions.first_seen_event.FirstSeenEventCondition",
+                "name": "An issue is first seen",
+            },
+            {
+                "id": "sentry.rules.conditions.every_event.EveryEventCondition",
+                "name": "An event is seen",
+            },
+        ]
 
         Rule.objects.filter(project=self.project).delete()
 
         Rule.objects.create(
-            project=self.project, data={"conditions": [condition_data], "actions": [action_data]}
+            project=self.project, data={"conditions": condition_data, "actions": action_data}
         )
 
         self.login_as(self.user)
