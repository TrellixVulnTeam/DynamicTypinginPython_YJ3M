commit 21522b444be5ef1ffc4f59583fe19496bc93507d
Author: Priscila Oliveira <priscilawebdev@gmail.com>
Date:   Mon Jun 22 13:43:35 2020 +0200

    ref(pii): Replace textfield with input of type text (#19438)

diff --git a/src/sentry/static/sentry/app/views/settings/components/dataScrubbing/form/eventIdField.tsx b/src/sentry/static/sentry/app/views/settings/components/dataScrubbing/form/eventIdField.tsx
index 5dacafb5e5..d9918abd88 100644
--- a/src/sentry/static/sentry/app/views/settings/components/dataScrubbing/form/eventIdField.tsx
+++ b/src/sentry/static/sentry/app/views/settings/components/dataScrubbing/form/eventIdField.tsx
@@ -2,7 +2,7 @@ import React from 'react';
 import styled from '@emotion/styled';
 import isEqual from 'lodash/isEqual';
 
-import TextField from 'app/components/forms/textField';
+import Input from 'app/views/settings/components/forms/controls/input';
 import {t} from 'app/locale';
 import space from 'app/styles/space';
 import Field from 'app/views/settings/components/forms/field';
@@ -39,8 +39,8 @@ class EventIdField extends React.Component<Props, State> {
     });
   };
 
-  handleChange = (value: string) => {
-    const eventId = value.replace(/-/g, '').trim();
+  handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {
+    const eventId = event.target.value.replace(/-/g, '').trim();
 
     if (eventId !== this.state.value) {
       this.setState({
@@ -112,12 +112,14 @@ class EventIdField extends React.Component<Props, State> {
           'Providing an event ID will automatically provide you a list of suggested sources'
         )}
         inline={false}
+        error={this.getErrorMessage()}
         flexibleControlStateSize
         stacked
         showHelpInTooltip
       >
         <FieldWrapper>
-          <StyledTextField
+          <StyledInput
+            type="text"
             name="eventId"
             disabled={disabled}
             value={value}
@@ -125,8 +127,6 @@ class EventIdField extends React.Component<Props, State> {
             onChange={this.handleChange}
             onKeyDown={this.handleKeyDown}
             onBlur={this.handleBlur}
-            showStatus={status !== EventIdStatus.LOADED}
-            error={this.getErrorMessage()}
           />
           <Status>
             <EventIdFieldStatusIcon
@@ -141,11 +141,10 @@ class EventIdField extends React.Component<Props, State> {
 }
 export default EventIdField;
 
-const StyledTextField = styled(TextField)<{showStatus: boolean}>`
+const StyledInput = styled(Input)<{showStatus: boolean}>`
   flex: 1;
   font-weight: 400;
   input {
-    height: 40px;
     padding-right: ${p => (p.showStatus ? space(4) : space(1.5))};
   }
   margin-bottom: 0;
diff --git a/src/sentry/static/sentry/app/views/settings/components/dataScrubbing/form/eventIdFieldStatusIcon.tsx b/src/sentry/static/sentry/app/views/settings/components/dataScrubbing/form/eventIdFieldStatusIcon.tsx
index 8720e6db1b..055d7a867e 100644
--- a/src/sentry/static/sentry/app/views/settings/components/dataScrubbing/form/eventIdFieldStatusIcon.tsx
+++ b/src/sentry/static/sentry/app/views/settings/components/dataScrubbing/form/eventIdFieldStatusIcon.tsx
@@ -21,7 +21,7 @@ const EventIdFieldStatusIcon = ({status, onClickIconClose}: Props) => {
       return (
         <CloseIcon onClick={onClickIconClose}>
           <Tooltip title={t('Clear Event ID')}>
-            <IconClose color="red" />
+            <StyledIconClose size="xs" />
           </Tooltip>
         </CloseIcon>
       );
@@ -37,8 +37,15 @@ const EventIdFieldStatusIcon = ({status, onClickIconClose}: Props) => {
 export default EventIdFieldStatusIcon;
 
 const CloseIcon = styled('div')`
-  cursor: pointer;
   :first-child {
     line-height: 0;
   }
 `;
+
+const StyledIconClose = styled(IconClose)`
+  color: ${p => p.theme.gray400};
+  :hover {
+    color: ${p => p.theme.gray500};
+  }
+  cursor: pointer;
+`;
diff --git a/src/sentry/static/sentry/app/views/settings/components/dataScrubbing/form/form.tsx b/src/sentry/static/sentry/app/views/settings/components/dataScrubbing/form/form.tsx
index 31326eaf98..fe57f89e89 100644
--- a/src/sentry/static/sentry/app/views/settings/components/dataScrubbing/form/form.tsx
+++ b/src/sentry/static/sentry/app/views/settings/components/dataScrubbing/form/form.tsx
@@ -4,7 +4,7 @@ import sortBy from 'lodash/sortBy';
 
 import space from 'app/styles/space';
 import {t} from 'app/locale';
-import TextField from 'app/components/forms/textField';
+import Input from 'app/views/settings/components/forms/controls/input';
 import Field from 'app/views/settings/components/forms/field';
 
 import EventIdField from './eventIdField';
@@ -41,6 +41,13 @@ const Form = ({
   onValidate,
 }: Props<Rule, KeysOfUnion<Rule>>) => {
   const {source, type, method} = rule;
+
+  const handleChange = <K extends KeysOfUnion<Rule>>(field: K) => (
+    event: React.ChangeEvent<HTMLInputElement>
+  ) => {
+    onChange(field, event.target.value);
+  };
+
   return (
     <React.Fragment>
       <GroupField hasTwoColumns={rule.method === MethodType.REPLACE}>
@@ -72,12 +79,11 @@ const Form = ({
             stacked
             showHelpInTooltip
           >
-            <StyledTextField
+            <Input
+              type="text"
               name="placeholder"
               placeholder={`[${t('Filtered')}]`}
-              onChange={(value: string) => {
-                onChange('placeholder', value);
-              }}
+              onChange={handleChange('placeholder')}
               value={rule.placeholder}
             />
           </Field>
@@ -110,20 +116,19 @@ const Form = ({
             label={t('Regex matches')}
             help={t('Custom Perl-style regex (PCRE)')}
             inline={false}
+            error={errors?.pattern}
             flexibleControlStateSize
             stacked
             required
             showHelpInTooltip
           >
             <RegularExpression
+              type="text"
               name="pattern"
               placeholder={t('[a-zA-Z0-9]+')}
-              onChange={(value: string) => {
-                onChange('pattern', value);
-              }}
+              onChange={handleChange('pattern')}
               value={rule.pattern}
               onBlur={onValidate('pattern')}
-              error={errors?.pattern}
             />
           </Field>
         )}
@@ -135,20 +140,18 @@ const Form = ({
         label={t('Source')}
         help={t('Where to look. In the simplest case this can be an attribute name.')}
         inline={false}
+        error={errors?.source}
         flexibleControlStateSize
         stacked
         required
         showHelpInTooltip
       >
         <SourceField
-          onChange={(value: string) => {
-            onChange('source', value);
-          }}
+          onChange={value => onChange('source', value)}
           value={source}
           onBlur={onValidate('source')}
           isRegExMatchesSelected={type === RuleType.PATTERN}
           suggestions={sourceSuggestions}
-          error={errors?.source}
         />
       </Field>
     </React.Fragment>
@@ -167,18 +170,7 @@ const GroupField = styled('div')<{hasTwoColumns: boolean}>`
   }
 `;
 
-const StyledTextField = styled(TextField)<{error?: string}>`
-  height: 40px;
-  input {
-    height: 40px;
-  }
-  ${p => !p.error && `margin-bottom: 0;`}
-  @media (min-width: ${p => p.theme.breakpoints[0]}) {
-    margin-bottom: 0;
-  }
-`;
-
-const RegularExpression = styled(StyledTextField)`
+const RegularExpression = styled(Input)`
   font-size: ${p => p.theme.fontSizeSmall};
   input {
     font-family: ${p => p.theme.text.familyMono};
diff --git a/src/sentry/static/sentry/app/views/settings/components/dataScrubbing/form/selectField.tsx b/src/sentry/static/sentry/app/views/settings/components/dataScrubbing/form/selectField.tsx
index 5211c1f001..d4558279cc 100644
--- a/src/sentry/static/sentry/app/views/settings/components/dataScrubbing/form/selectField.tsx
+++ b/src/sentry/static/sentry/app/views/settings/components/dataScrubbing/form/selectField.tsx
@@ -35,8 +35,8 @@ class SelectField extends React.Component<Props> {
         styles={{
           control: (provided: {[x: string]: string | number | boolean}) => ({
             ...provided,
-            minHeight: '40px',
-            height: '40px',
+            minHeight: '38px',
+            height: '38px',
           }),
         }}
         ref={this.selectRef}
diff --git a/src/sentry/static/sentry/app/views/settings/components/dataScrubbing/form/sourceField.tsx b/src/sentry/static/sentry/app/views/settings/components/dataScrubbing/form/sourceField.tsx
index ea6ca445cf..676faacff5 100644
--- a/src/sentry/static/sentry/app/views/settings/components/dataScrubbing/form/sourceField.tsx
+++ b/src/sentry/static/sentry/app/views/settings/components/dataScrubbing/form/sourceField.tsx
@@ -3,7 +3,7 @@ import styled from '@emotion/styled';
 
 import space from 'app/styles/space';
 import {t} from 'app/locale';
-import TextField from 'app/components/forms/textField';
+import Input from 'app/views/settings/components/forms/controls/input';
 import TextOverflow from 'app/components/textOverflow';
 import {defined} from 'app/utils';
 
@@ -229,7 +229,8 @@ class SourceField extends React.Component<Props, State> {
     }
   };
 
-  handleChange = (newValue: string) => {
+  handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {
+    const newValue = event.target.value;
     this.loadFieldValues(newValue);
     this.props.onChange(newValue);
   };
@@ -379,7 +380,8 @@ class SourceField extends React.Component<Props, State> {
 
     return (
       <Wrapper ref={this.selectorField} hideCaret={hideCaret}>
-        <StyledTextField
+        <StyledInput
+          type="text"
           name="source"
           placeholder={t('Enter a custom attribute, variable or header name')}
           onChange={this.handleChange}
@@ -432,13 +434,7 @@ const Wrapper = styled('div')<{hideCaret?: boolean}>`
   ${p => p.hideCaret && `caret-color: transparent;`}
 `;
 
-const StyledTextField = styled(TextField)`
-  width: 100%;
-  height: 40px;
-  input {
-    height: 40px;
-  }
-
+const StyledInput = styled(Input)`
   z-index: 1002;
   :focus {
     outline: none;
