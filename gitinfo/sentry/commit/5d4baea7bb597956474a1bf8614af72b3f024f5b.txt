commit 5d4baea7bb597956474a1bf8614af72b3f024f5b
Author: David Cramer <dcramer@gmail.com>
Date:   Thu Jul 16 23:49:47 2015 -0700

    Various implementation on tag pages

diff --git a/src/sentry/api/endpoints/group_tags.py b/src/sentry/api/endpoints/group_tags.py
index ba317b8f16..2097e8cd01 100644
--- a/src/sentry/api/endpoints/group_tags.py
+++ b/src/sentry/api/endpoints/group_tags.py
@@ -1,22 +1,13 @@
 from __future__ import absolute_import
 
-from datetime import timedelta
-from django.utils import timezone
 from rest_framework.response import Response
 
 from sentry.api.bases.group import GroupEndpoint
+from sentry.api.serializers import serialize
 from sentry.models import GroupTagValue, GroupTagKey, TagKey
 
 
 class GroupTagsEndpoint(GroupEndpoint):
-    def _get_top_values(self, group_id, key, num=5):
-        cutoff = timezone.now() - timedelta(days=7)
-        return GroupTagValue.objects.filter(
-            group=group_id,
-            key=key,
-            last_seen__gte=cutoff,
-        )[:num]
-
     def get(self, request, group):
         tag_keys = TagKey.objects.filter(
             project=group.project,
@@ -29,7 +20,7 @@ class GroupTagsEndpoint(GroupEndpoint):
         data = []
         for tag_key in tag_keys:
             total_values = GroupTagValue.get_value_count(group.id, tag_key.key)
-            top_values = self._get_top_values(group.id, tag_key.key)
+            top_values = GroupTagValue.get_top_values(group.id, tag_key.key, limit=10)
 
             data.append({
                 'id': str(tag_key.id),
@@ -37,15 +28,7 @@ class GroupTagsEndpoint(GroupEndpoint):
                 'name': tag_key.get_label(),
                 'uniqueValues': tag_key.values_seen,
                 'totalValues': total_values,
-                'topValues': [
-                    {
-                        'id': tag_value.id,
-                        'value': tag_value.value,
-                        'count': tag_value.times_seen,
-                        'firstSeen': tag_value.first_seen,
-                        'lastSeen': tag_value.last_seen,
-                    } for tag_value in top_values
-                ]
+                'topValues': serialize(top_values, request.user),
             })
 
         return Response(data)
diff --git a/src/sentry/static/sentry/app/views/groupTagValues.jsx b/src/sentry/static/sentry/app/views/groupTagValues.jsx
index 6464551d7e..1db6dbf2b2 100644
--- a/src/sentry/static/sentry/app/views/groupTagValues.jsx
+++ b/src/sentry/static/sentry/app/views/groupTagValues.jsx
@@ -88,16 +88,22 @@ var GroupTagValues = React.createClass({
       return <LoadingError onRetry={this.fetchData} />;
     }
 
+    var router = this.context.router;
     var tagKey = this.state.tagKey;
     var children = this.state.tagValueList.map((tagValue, tagValueIdx) => {
       var pct = parseInt(tagValue.count / tagKey.totalValues * 100, 10);
+      var params = router.getCurrentParams();
       return (
         <li key={tagValueIdx}>
-          <a className="tag-bar" href="">
+          <Router.Link
+              className="tag-bar"
+              to="stream"
+              params={params}
+              query={{query: tagKey.key + ':' + '"' + tagValue.value + '"'}}>
             <span className="tag-bar-background" style={{width: pct + '%'}}></span>
             <span className="tag-bar-label">{tagValue.name}</span>
             <span className="tag-bar-count"><Count value={tagValue.count} /></span>
-          </a>
+          </Router.Link>
         </li>
       );
     });
@@ -106,9 +112,6 @@ var GroupTagValues = React.createClass({
       <div>
         <div className="box">
           <div className="box-header">
-            <span className="pull-right">
-              <a href="">More Details</a>
-            </span>
             <h3>{tagKey.name} (<Count value={tagKey.totalValues} />)</h3>
           </div>
           <div className="box-content with-padding">
diff --git a/src/sentry/static/sentry/app/views/groupTags.jsx b/src/sentry/static/sentry/app/views/groupTags.jsx
index e910b203de..c15774a7b4 100644
--- a/src/sentry/static/sentry/app/views/groupTags.jsx
+++ b/src/sentry/static/sentry/app/views/groupTags.jsx
@@ -14,6 +14,10 @@ var GroupTags = React.createClass({
     GroupState
   ],
 
+  contextTypes: {
+    router: React.PropTypes.func
+  },
+
   getInitialState() {
     return {
       tagList: null,
@@ -32,6 +36,8 @@ var GroupTags = React.createClass({
       error: false
     });
 
+    // TODO(dcramer): each tag should be a separate query as the tags endpoint
+    // is not performant
     this.apiRequest('/groups/' + this.getGroup().id + '/tags/', {
       success: (data) => {
         if (!this.isMounted()) {
@@ -63,18 +69,24 @@ var GroupTags = React.createClass({
     }
 
     var children = [];
+    var router = this.context.router;
 
     if (this.state.tagList) {
       children = this.state.tagList.map((tag, tagIdx) => {
         var valueChildren = tag.topValues.map((tagValue, tagValueIdx) => {
           var pct = parseInt(tagValue.count / tag.totalValues * 100, 10);
+          var params = router.getCurrentParams();
           return (
             <li key={tagValueIdx}>
-              <a className="tag-bar" href="">
+              <Router.Link
+                  className="tag-bar"
+                  to="stream"
+                  params={params}
+                  query={{query: tag.key + ':' + '"' + tagValue.value + '"'}}>
                 <span className="tag-bar-background" style={{width: pct + '%'}}></span>
-                <span className="tag-bar-label">{tagValue.value}</span>
+                <span className="tag-bar-label">{tagValue.name}</span>
                 <span className="tag-bar-count"><Count value={tagValue.count} /></span>
-              </a>
+              </Router.Link>
             </li>
           );
         });
