commit 094c6ba6a1e47877590de4529d49e3e94b0bfa4b
Author: David Cramer <dcramer@gmail.com>
Date:   Thu Jun 11 11:11:43 2015 -0700

    Suggest SENTRY_CONF instead of --config

diff --git a/docs/cli/index.rst b/docs/cli/index.rst
index a2d89c4c47..a89345a07d 100644
--- a/docs/cli/index.rst
+++ b/docs/cli/index.rst
@@ -4,10 +4,10 @@ Command Line Usage
 Sentry installs a command line script under the name ``sentry``. This will allow you to
 perform most required operations that are unachievable within the web UI.
 
-If you're using a non-standard configuration location, you'll need to prefix every command with
---config (excluding init, which is a special case). For example::
+If you're using a non-standard configuration location you'll need to use the SENTRY_CONF environment
+variable to specify the path:
 
-    sentry --config=/etc/sentry.conf.py help
+    SENTRY_CONF=/etc/sentry.conf.py sentry help
 
 For a list of commands, you can also use ``sentry help``, or ``sentry [command] --help``
 for help on a specific command.
@@ -29,7 +29,7 @@ Builtin Commands
         sentry init /etc/sentry.conf.py
 
     .. note:: The init command requires you to pass the configuration value as the parameter whereas other
-              commands require you to use --config for passing the location of this file.
+              commands require you to use SENTRY_CONF for passing the location of this file.
 
 .. data:: start [service]
 
diff --git a/docs/getting-started/index.rst b/docs/getting-started/index.rst
index 76cd34a8ed..b7cda1b4b8 100644
--- a/docs/getting-started/index.rst
+++ b/docs/getting-started/index.rst
@@ -86,7 +86,7 @@ like the following:
 .. code-block:: bash
 
   $ sentry
-  usage: sentry [--config=/path/to/settings.py] [command] [options]
+  usage: [SENTRY_CONF=/path/to/settings.py] sentry [command] [options]
 
 
 Using MySQL or Postgres
@@ -237,14 +237,14 @@ Once done, you can create the initial schema using the ``upgrade`` command:
 
 .. code-block:: python
 
-    $ sentry --config=/etc/sentry.conf.py upgrade
+    $ SENTRY_CONF=/etc/sentry.conf.py sentry upgrade
 
 Next up you'll need to create the first user, which will act as a superuser:
 
 .. code-block:: bash
 
     # create a new user
-    $ sentry --config=/etc/sentry.conf.py createuser
+    $ SENTRY_CONF=/etc/sentry.conf.py sentry createuser
 
 All schema changes and database upgrades are handled via the ``upgrade`` command, and this is the first
 thing you'll want to run when upgrading to future versions of Sentry.
@@ -258,13 +258,13 @@ Sentry provides a built-in webserver (powered by gunicorn and eventlet) to get y
 also you can setup Sentry as WSGI application, in that case skip to section `Running Sentry as WSGI application`.
 
 To start the webserver, you simply use ``sentry start``. If you opted to use an alternative configuration path
-you can pass that via the --config option.
+you can pass that via the SENTRY_CONF parameter.
 
 ::
 
   # Sentry's server runs on port 9000 by default. Make sure your client reflects
   # the correct host and port!
-  sentry --config=/etc/sentry.conf.py start
+  $ SENTRY_CONF=/etc/sentry.conf.py sentry start
 
 You should now be able to test the web service by visiting `http://localhost:9000/`.
 
@@ -282,7 +282,7 @@ So do not forget to run the workers!
 
 ::
 
-  sentry --config=/etc/sentry.conf.py celery worker -B
+  $ SENTRY_CONF=/etc/sentry.conf.py sentry celery worker -B
 
 Technically there is a way to run sentry without the queues by setting ``CELERY_ALWAYS_EAGER`` to `True`
 but this is heavily discouraged and not supported.
