commit 155a6d38786a4872fd587af01c4acd35699010fb
Author: Evan Purkhiser <evanpurkhiser@gmail.com>
Date:   Mon Apr 27 15:17:28 2020 -0700

    fix(alerts): Replace custom breadcrumbs w/ component (#18467)

diff --git a/src/sentry/static/sentry/app/components/breadcrumbs.tsx b/src/sentry/static/sentry/app/components/breadcrumbs.tsx
index 95433438c1..4b4778f160 100644
--- a/src/sentry/static/sentry/app/components/breadcrumbs.tsx
+++ b/src/sentry/static/sentry/app/components/breadcrumbs.tsx
@@ -12,7 +12,7 @@ export type Crumb = {
   /**
    * Label of the crumb
    */
-  label: string;
+  label: React.ReactNode;
 
   /**
    * Link of the crumb
@@ -32,7 +32,7 @@ export type Crumb = {
   key?: string;
 };
 
-type Props = {
+type Props = React.HTMLAttributes<HTMLDivElement> & {
   /**
    * Array of crumbs that will be rendered
    */
@@ -50,7 +50,7 @@ type Props = {
 /**
  * Page breadcrumbs used for navigation, not to be confused with sentry's event breadcrumbs
  */
-const Breadcrumbs = ({crumbs, linkLastItem = false}: Props) => {
+const Breadcrumbs = ({crumbs, linkLastItem = false, ...props}: Props) => {
   if (crumbs.length === 0) {
     return null;
   }
@@ -60,10 +60,11 @@ const Breadcrumbs = ({crumbs, linkLastItem = false}: Props) => {
   }
 
   return (
-    <BreadcrumbList>
+    <BreadcrumbList {...props}>
       {crumbs.map(({label, to, preserveGlobalSelection, key}, index) => {
+        const labelKey = typeof label === 'string' ? label : '';
         const mapKey =
-          key ?? typeof to === 'string' ? `${label}${to}` : `${label}${index}`;
+          key ?? typeof to === 'string' ? `${labelKey}${to}` : `${labelKey}${index}`;
 
         return (
           <React.Fragment key={mapKey}>
diff --git a/src/sentry/static/sentry/app/views/alerts/details/header.tsx b/src/sentry/static/sentry/app/views/alerts/details/header.tsx
index 4e4802b497..3df9028b2d 100644
--- a/src/sentry/static/sentry/app/views/alerts/details/header.tsx
+++ b/src/sentry/static/sentry/app/views/alerts/details/header.tsx
@@ -1,4 +1,3 @@
-import {Link} from 'react-router';
 import {Params} from 'react-router/lib/Router';
 import React from 'react';
 import moment from 'moment';
@@ -19,7 +18,8 @@ import SubscribeButton from 'app/components/subscribeButton';
 import getDynamicText from 'app/utils/getDynamicText';
 import space from 'app/styles/space';
 import theme from 'app/utils/theme';
-import {IconCheckmark, IconChevron} from 'app/icons';
+import {IconCheckmark} from 'app/icons';
+import Breadcrumbs from 'app/components/breadcrumbs';
 
 import {Incident, IncidentStats} from '../types';
 import {isOpen} from '../utils';
@@ -80,20 +80,25 @@ export default class DetailsHeader extends React.Component<Props> {
 
     const project = incident && incident.projects && incident.projects[0];
 
+    const alertBreadcrumbLabel = dateStarted ? (
+      <IncidentDate>{dateStarted}</IncidentDate>
+    ) : (
+      t('Alert details')
+    );
+
     return (
       <Header>
         <PageHeading>
-          <Breadcrumb>
-            <IncidentsLink to={`/organizations/${params.orgId}/alerts/`}>
-              {t('Alerts')}
-            </IncidentsLink>
-            {dateStarted && (
-              <React.Fragment>
-                <IconChevron direction="right" color={theme.gray1} size={space(1.5)} />
-                <IncidentDate>{dateStarted}</IncidentDate>
-              </React.Fragment>
-            )}
-          </Breadcrumb>
+          <AlertBreadcrumbs
+            crumbs={[
+              {
+                key: 'alerts',
+                label: t('Alerts'),
+                to: `/organizations/${params.orgId}/alerts/`,
+              },
+              {key: 'details', label: alertBreadcrumbLabel},
+            ]}
+          />
           <IncidentTitle data-test-id="incident-title" loading={!isIncidentReady}>
             {incident && !hasIncidentDetailsError ? incident.title : 'Loading'}
           </IncidentTitle>
@@ -203,12 +208,9 @@ const ItemValue = styled('div')`
   font-size: ${p => p.theme.fontSizeExtraLarge};
 `;
 
-const Breadcrumb = styled('div')`
-  display: grid;
-  grid-auto-flow: column;
-  grid-gap: ${space(1)};
-  align-items: center;
+const AlertBreadcrumbs = styled(Breadcrumbs)`
   font-size: ${p => p.theme.fontSizeLarge};
+  padding: 0;
   margin-bottom: ${space(1)};
 `;
 
@@ -223,10 +225,6 @@ const IncidentDate = styled('div')`
   color: ${p => p.theme.gray2};
 `;
 
-const IncidentsLink = styled(Link)`
-  color: inherit;
-`;
-
 const StatusMenuItem = styled(MenuItem)`
   > span {
     font-size: ${p => p.theme.fontSizeMedium};
