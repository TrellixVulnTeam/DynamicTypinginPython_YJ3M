commit 0476d13c89d12985caf9451c63216742355933a9
Author: Lyn Nagara <lyn.nagara@gmail.com>
Date:   Wed Oct 3 10:54:48 2018 -0700

    tests(discover): Add tests for saved query component (#9983)

diff --git a/src/sentry/static/sentry/app/views/organizationDiscover/sidebar/savedQueryList.jsx b/src/sentry/static/sentry/app/views/organizationDiscover/sidebar/savedQueryList.jsx
index dd66174df1..30df273d94 100644
--- a/src/sentry/static/sentry/app/views/organizationDiscover/sidebar/savedQueryList.jsx
+++ b/src/sentry/static/sentry/app/views/organizationDiscover/sidebar/savedQueryList.jsx
@@ -23,7 +23,7 @@ export default class SavedQueries extends React.Component {
 
   constructor() {
     super();
-    this.state = {isLoading: true};
+    this.state = {isLoading: true, data: []};
   }
 
   componentDidMount() {
@@ -31,7 +31,7 @@ export default class SavedQueries extends React.Component {
       .then(data => {
         this.setState({isLoading: false, data});
       })
-      .catch(err => {
+      .catch(() => {
         this.setState({isLoading: false});
       });
   }
diff --git a/tests/js/spec/views/organizationDiscover/sidebar/savedQueryList.spec.jsx b/tests/js/spec/views/organizationDiscover/sidebar/savedQueryList.spec.jsx
new file mode 100644
index 0000000000..777014bfd7
--- /dev/null
+++ b/tests/js/spec/views/organizationDiscover/sidebar/savedQueryList.spec.jsx
@@ -0,0 +1,50 @@
+import React from 'react';
+import {mount} from 'enzyme';
+
+import SavedQueryList from 'app/views/organizationDiscover/sidebar/savedQueryList';
+
+describe('savedQueryList', function() {
+  let organization, mockResponse;
+  beforeEach(function() {
+    organization = TestStubs.Organization();
+    mockResponse = [];
+    MockApiClient.addMockResponse({
+      url: `/organizations/${organization.slug}/discover/saved/`,
+      method: 'GET',
+      body: mockResponse,
+    });
+  });
+
+  afterEach(function() {
+    MockApiClient.clearMockResponses();
+  });
+
+  it('renders empty state', async function() {
+    const wrapper = mount(<SavedQueryList organization={organization} />);
+    await tick();
+
+    expect(wrapper.text()).toBe('No saved queries');
+  });
+
+  it('renders list', async function() {
+    const savedQueries = [
+      {
+        id: '1',
+        name: 'saved query #1',
+        dateUpdated: '2018-09-24T00:00:00.000Z',
+      },
+      {
+        id: '2',
+        name: 'saved query #2',
+        dateUpdated: '2018-09-24T00:00:00.000Z',
+      },
+    ];
+    mockResponse.push(...savedQueries);
+    const wrapper = mount(<SavedQueryList organization={organization} />);
+    await tick();
+    savedQueries.forEach(query => {
+      expect(wrapper.text()).toContain(query.name);
+      expect(wrapper.text()).toContain('Updated Sep 24 00:00:00 (UTC)');
+    });
+  });
+});
