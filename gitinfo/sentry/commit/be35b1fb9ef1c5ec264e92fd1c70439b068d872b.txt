commit be35b1fb9ef1c5ec264e92fd1c70439b068d872b
Author: josh <josh@jrl.ninja>
Date:   Thu Oct 10 15:34:51 2019 -0700

    py3(django): fix a few Django 1.9 deprecation warnings (#15025)

diff --git a/requirements-base.txt b/requirements-base.txt
index f01cd0898b..f64a7f8230 100644
--- a/requirements-base.txt
+++ b/requirements-base.txt
@@ -8,7 +8,7 @@ confluent-kafka==0.11.5
 # 'cryptography>=1.3,<1.4
 croniter>=0.3.26,<0.4.0
 cssutils==1.0.2
-django-crispy-forms>=1.4.0,<1.5.0
+django-crispy-forms==1.6.1
 django-jsonfield>=0.9.13,<0.9.14
 django-picklefield>=0.3.0,<1.1.0
 django-sudo>=2.1.0,<3.0.0
diff --git a/src/sentry/admin.py b/src/sentry/admin.py
index d1992f0f94..5862057c3e 100644
--- a/src/sentry/admin.py
+++ b/src/sentry/admin.py
@@ -290,7 +290,7 @@ class UserAdmin(admin.ModelAdmin):
             "adminForm": adminForm,
             "form_url": form_url,
             "form": form,
-            "is_popup": "_popup" in request.REQUEST,
+            "is_popup": "_popup" in request.GET,
             "add": True,
             "change": False,
             "has_delete_permission": False,
diff --git a/src/sentry/api/endpoints/team_groups_new.py b/src/sentry/api/endpoints/team_groups_new.py
index 9f6498f4ca..6e347b1fb0 100644
--- a/src/sentry/api/endpoints/team_groups_new.py
+++ b/src/sentry/api/endpoints/team_groups_new.py
@@ -19,8 +19,8 @@ class TeamGroupsNewEndpoint(TeamEndpoint, EnvironmentMixin):
         cutoff date, and then sort those by score, returning the highest scoring
         groups first.
         """
-        minutes = int(request.REQUEST.get("minutes", 15))
-        limit = min(100, int(request.REQUEST.get("limit", 10)))
+        minutes = int(request.GET.get("minutes", 15))
+        limit = min(100, int(request.GET.get("limit", 10)))
 
         project_list = Project.objects.get_for_user(user=request.user, team=team)
 
diff --git a/src/sentry/api/endpoints/team_groups_trending.py b/src/sentry/api/endpoints/team_groups_trending.py
index bf9b85f62b..19ee3e98e5 100644
--- a/src/sentry/api/endpoints/team_groups_trending.py
+++ b/src/sentry/api/endpoints/team_groups_trending.py
@@ -19,8 +19,8 @@ class TeamGroupsTrendingEndpoint(TeamEndpoint, EnvironmentMixin):
         cutoff date, and then sort those by score, returning the highest scoring
         groups first.
         """
-        minutes = int(request.REQUEST.get("minutes", 15))
-        limit = min(100, int(request.REQUEST.get("limit", 10)))
+        minutes = int(request.GET.get("minutes", 15))
+        limit = min(100, int(request.GET.get("limit", 10)))
 
         project_list = Project.objects.get_for_user(user=request.user, team=team)
 
diff --git a/src/sentry/testutils/cases.py b/src/sentry/testutils/cases.py
index b0b6ef1d1e..4b1fd7d574 100644
--- a/src/sentry/testutils/cases.py
+++ b/src/sentry/testutils/cases.py
@@ -151,7 +151,8 @@ class BaseTestCase(Fixtures, Exam):
         request.META["REMOTE_ADDR"] = "127.0.0.1"
         request.META["SERVER_NAME"] = "testserver"
         request.META["SERVER_PORT"] = 80
-        request.REQUEST = {}
+        request.GET = {}
+        request.POST = {}
 
         # order matters here, session -> user -> other things
         request.session = self.session
diff --git a/src/sentry/utils/pytest/selenium.py b/src/sentry/utils/pytest/selenium.py
index 9e771ce035..f3e47f6a2a 100644
--- a/src/sentry/utils/pytest/selenium.py
+++ b/src/sentry/utils/pytest/selenium.py
@@ -324,9 +324,9 @@ def browser(request, percy, live_server):
             options.binary_location = chrome_path
         chromedriver_path = request.config.getoption("chromedriver_path")
         if chromedriver_path:
-            driver = webdriver.Chrome(executable_path=chromedriver_path, chrome_options=options)
+            driver = webdriver.Chrome(executable_path=chromedriver_path, options=options)
         else:
-            driver = webdriver.Chrome(chrome_options=options)
+            driver = webdriver.Chrome(options=options)
     elif driver_type == "firefox":
         driver = webdriver.Firefox()
     elif driver_type == "phantomjs":
diff --git a/src/sentry/web/forms/fields.py b/src/sentry/web/forms/fields.py
index 32fd0fcb74..8682d2c979 100644
--- a/src/sentry/web/forms/fields.py
+++ b/src/sentry/web/forms/fields.py
@@ -3,7 +3,7 @@ from __future__ import absolute_import
 import six
 
 from django.forms.widgets import RadioFieldRenderer, TextInput, Widget
-from django.forms.util import flatatt
+from django.forms.utils import flatatt
 from django.forms import Field, CharField, EmailField, TypedChoiceField, ValidationError
 from django.utils.encoding import force_text
 from django.utils.html import format_html
diff --git a/src/social_auth/backends/__init__.py b/src/social_auth/backends/__init__.py
index 52edd638e4..dd169828d0 100644
--- a/src/social_auth/backends/__init__.py
+++ b/src/social_auth/backends/__init__.py
@@ -247,9 +247,10 @@ class BaseAuth(object):
 
     def __init__(self, request, redirect):
         self.request = request
-        # Use request because some auth providers use POST urls with needed
-        # GET parameters on it
-        self.data = request.REQUEST
+        # TODO(python3): use {**x, **y} syntax once 2.7 support is dropped
+        data = request.GET.copy()
+        data.update(request.POST)
+        self.data = data
         self.redirect = redirect
 
     def auth_url(self):
diff --git a/src/social_auth/context_processors.py b/src/social_auth/context_processors.py
index 6663312236..b1c9896124 100644
--- a/src/social_auth/context_processors.py
+++ b/src/social_auth/context_processors.py
@@ -88,7 +88,7 @@ def backends_data(user):
 
 def social_auth_login_redirect(request):
     """Load current redirect to context."""
-    redirect_value = request.REQUEST.get(REDIRECT_FIELD_NAME)
+    redirect_value = request.GET.get(REDIRECT_FIELD_NAME)
     if redirect_value:
         redirect_querystring = REDIRECT_FIELD_NAME + "=" + redirect_value
     else:
