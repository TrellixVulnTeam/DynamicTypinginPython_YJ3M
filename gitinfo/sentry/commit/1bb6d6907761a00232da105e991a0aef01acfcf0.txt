commit 1bb6d6907761a00232da105e991a0aef01acfcf0
Author: David Cramer <dcramer@gmail.com>
Date:   Mon May 8 14:38:40 2017 -0700

    render no integrations message

diff --git a/src/sentry/static/sentry/app/components/pluginList.jsx b/src/sentry/static/sentry/app/components/pluginList.jsx
index e72b7fc38a..75936ae8cd 100644
--- a/src/sentry/static/sentry/app/components/pluginList.jsx
+++ b/src/sentry/static/sentry/app/components/pluginList.jsx
@@ -12,7 +12,7 @@ export default React.createClass({
     project: React.PropTypes.object.isRequired,
     pluginList: React.PropTypes.array.isRequired,
     onDisablePlugin: React.PropTypes.func.isRequired,
-    onEnablePlugin: React.PropTypes.func.isRequired,
+    onEnablePlugin: React.PropTypes.func.isRequired
   },
 
   mixins: [ApiMixin],
@@ -20,16 +20,19 @@ export default React.createClass({
   enablePlugin(plugin) {
     let loadingIndicator = IndicatorStore.add(t('Saving changes..'));
     let {organization, project} = this.props;
-    this.api.request(`/projects/${organization.slug}/${project.slug}/plugins/${plugin.id}/`, {
-      method: 'POST',
-      success: () => this.props.onEnablePlugin(plugin),
-      error: error => {
-        IndicatorStore.add(t('Unable to save changes. Please try again.'), 'error');
-      },
-      complete: () => {
-        IndicatorStore.remove(loadingIndicator);
+    this.api.request(
+      `/projects/${organization.slug}/${project.slug}/plugins/${plugin.id}/`,
+      {
+        method: 'POST',
+        success: () => this.props.onEnablePlugin(plugin),
+        error: error => {
+          IndicatorStore.add(t('Unable to save changes. Please try again.'), 'error');
+        },
+        complete: () => {
+          IndicatorStore.remove(loadingIndicator);
+        }
       }
-    });
+    );
   },
 
   onDisablePlugin(plugin) {
@@ -39,6 +42,16 @@ export default React.createClass({
   render() {
     let {organization, pluginList, project} = this.props;
 
+    if (!pluginList.length) {
+      return (
+        <div className="panel panel-default">
+          <div className="panel-body">
+            <p>{"Oops! Looks like there aren't any availble integrations installed."}</p>
+          </div>
+        </div>
+      );
+    }
+
     return (
       <div>
         {pluginList.filter(p => p.enabled).map(data => {
@@ -54,8 +67,9 @@ export default React.createClass({
         })}
         <InactivePlugins
           plugins={pluginList.filter(p => !p.enabled)}
-          onEnablePlugin={this.enablePlugin} />
+          onEnablePlugin={this.enablePlugin}
+        />
       </div>
     );
-  },
+  }
 });
