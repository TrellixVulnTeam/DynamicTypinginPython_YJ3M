commit 96d3e70130ea2bd629c008ec1e28e80f1be51a08
Author: David Cramer <dcramer@gmail.com>
Date:   Wed Jan 4 20:25:11 2012 -0800

    Fixed projct_from_api_key_and_id and added some initial api tests

diff --git a/sentry/coreapi.py b/sentry/coreapi.py
index 24df68db9f..7fc1992ce4 100644
--- a/sentry/coreapi.py
+++ b/sentry/coreapi.py
@@ -85,9 +85,13 @@ def validate_hmac(message, signature, timestamp, secret_key):
         raise APIForbidden('Invalid signature')
 
 
-def project_from_api_key_and_id(api_key, project):
+def project_from_api_key_and_id(api_key, project_id):
+    """
+    Given a public api key and a project id returns
+    a project instance or throws APIUnauthorized.
+    """
     try:
-        pm = ProjectMember.objects.get(api_key=api_key, project=project)
+        pm = ProjectMember.objects.get(public_key=api_key, project=project_id)
     except ProjectMember.DoesNotExist:
         raise APIUnauthorized()
 
@@ -95,6 +99,10 @@ def project_from_api_key_and_id(api_key, project):
 
 
 def project_from_id(request):
+    """
+    Given a request returns a project instance or throws
+    APIUnauthorized.
+    """
     try:
         pm = ProjectMember.objects.get(user=request.user, project=request.GET['project_id'])
     except ProjectMember.DoesNotExist:
diff --git a/tests/api/__init__.py b/tests/api/__init__.py
new file mode 100644
index 0000000000..e69de29bb2
diff --git a/tests/api/tests.py b/tests/api/tests.py
new file mode 100644
index 0000000000..e621d5a09d
--- /dev/null
+++ b/tests/api/tests.py
@@ -0,0 +1,53 @@
+# -*- coding: utf-8 -*-
+
+from __future__ import absolute_import
+
+import mock
+
+from django.contrib.auth.models import User
+
+from sentry.models import Project
+from sentry.coreapi import project_from_id, project_from_api_key_and_id, \
+  APIUnauthorized
+
+from tests.base import TestCase
+
+
+class APITest(TestCase):
+    def setUp(self):
+        self.user = User.objects.create(username='coreapi')
+        self.project = Project.objects.get(id=1)
+        self.pm = self.project.member_set.create(user=self.user)
+
+    def test_valid_project_from_id(self):
+        request = mock.Mock()
+        request.user = self.user
+        request.GET = {'project_id': self.project.id}
+
+        project = project_from_id(request)
+
+        self.assertEquals(project, self.project)
+
+    def test_invalid_project_from_id(self):
+        request = mock.Mock()
+        request.user = self.user
+        request.GET = {'project_id': 10000}
+
+        with self.assertRaises(APIUnauthorized):
+            project_from_id(request)
+
+    def test_valid_project_from_api_key_and_id(self):
+        api_key = self.pm.public_key
+        project = project_from_api_key_and_id(api_key, self.project)
+        self.assertEquals(project, self.project)
+
+    def test_invalid_project_from_api_key_and_id(self):
+        api_key = self.pm.public_key
+
+        # invalid project_id
+        with self.assertRaises(APIUnauthorized):
+            project_from_api_key_and_id(api_key, 10000)
+
+        # invalid api_key
+        with self.assertRaises(APIUnauthorized):
+            project_from_api_key_and_id(1, self.project.id)
diff --git a/tests/http/__init__.py b/tests/http/__init__.py
new file mode 100644
index 0000000000..e69de29bb2
diff --git a/tests/http/tests.py b/tests/http/tests.py
new file mode 100644
index 0000000000..e69de29bb2
