commit f5fbcab13a06b79b70faa77f05141c481296d3d3
Author: David Cramer <dcramer@gmail.com>
Date:   Mon Dec 10 21:11:47 2012 -0800

    Improve how slugs are generated

diff --git a/src/sentry/migrations/0047_migrate_project_slugs.py b/src/sentry/migrations/0047_migrate_project_slugs.py
index b462c3d54d..a40fd1d390 100644
--- a/src/sentry/migrations/0047_migrate_project_slugs.py
+++ b/src/sentry/migrations/0047_migrate_project_slugs.py
@@ -14,16 +14,15 @@ class Migration(DataMigration):
         for project in orm['sentry.Project'].objects.all():
             if project.slug:
                 continue
+
             base_slug = slugify(project.name)
             slug = base_slug
             n = 0
-            while True:
-                if orm['sentry.Project'].objects.filter(slug=slug).exists():
-                    n += 1
-                    slug = base_slug + '-' + str(n)
-                    continue
-                update(project, slug=slug)
-                break
+            while orm['sentry.Project'].objects.filter(slug=slug).exists():
+                n += 1
+                slug = base_slug + '-' + str(n)
+
+            update(project, slug=slug)
 
     def backwards(self, orm):
         pass
diff --git a/src/sentry/models.py b/src/sentry/models.py
index 67723b7bbc..8269bd58fd 100644
--- a/src/sentry/models.py
+++ b/src/sentry/models.py
@@ -47,6 +47,16 @@ from sentry.utils.strings import truncatechars
 __all__ = ('Event', 'Group', 'Project', 'SearchDocument')
 
 
+def slugify_instance(inst, label):
+    base_slug = slugify(label)
+    manager = type(inst).objects
+    inst.slug = base_slug
+    n = 0
+    while manager.filter(slug=inst.slug).exists():
+        n += 1
+        inst.slug = base_slug + '-' + str(n)
+
+
 class Option(Model):
     """
     Global options which apply in most situations as defaults,
@@ -81,7 +91,7 @@ class Team(Model):
 
     def save(self, *args, **kwargs):
         if not self.slug:
-            self.slug = slugify(self.name)
+            self.slug = slugify_instance(self, self.name)
         super(Team, self).save(*args, **kwargs)
 
     def get_owner_name(self):
@@ -142,7 +152,7 @@ class Project(Model):
 
     def save(self, *args, **kwargs):
         if not self.slug:
-            self.slug = slugify(self.name)
+            slugify_instance(self, self.name)
         super(Project, self).save(*args, **kwargs)
 
     def delete(self):
