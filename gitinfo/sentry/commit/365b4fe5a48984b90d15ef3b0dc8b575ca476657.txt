commit 365b4fe5a48984b90d15ef3b0dc8b575ca476657
Author: Leander Rodrigues <leander.rodrigues@sentry.io>
Date:   Tue Jan 14 14:32:13 2020 -0800

    ref: Steer users towards integrations  (#16329)
    
    Direct users towards internal integrations instead of Auth Tokens/API applications

diff --git a/src/sentry/static/sentry/app/views/settings/account/apiTokens.jsx b/src/sentry/static/sentry/app/views/settings/account/apiTokens.jsx
index 23f3ad1ccb..46eeb924b6 100644
--- a/src/sentry/static/sentry/app/views/settings/account/apiTokens.jsx
+++ b/src/sentry/static/sentry/app/views/settings/account/apiTokens.jsx
@@ -7,14 +7,16 @@ import {
   addSuccessMessage,
 } from 'app/actionCreators/indicator';
 import {t, tct} from 'app/locale';
+import AlertLink from 'app/components/alertLink';
 import ApiTokenRow from 'app/views/settings/account/apiTokenRow';
 import AsyncView from 'app/views/asyncView';
 import Button from 'app/components/button';
 import EmptyMessage from 'app/views/settings/components/emptyMessage';
 import SettingsPageHeader from 'app/views/settings/components/settingsPageHeader';
 import TextBlock from 'app/views/settings/components/text/textBlock';
+import withOrganization from 'app/utils/withOrganization';
 
-class ApiTokens extends AsyncView {
+export class ApiTokens extends AsyncView {
   getTitle() {
     return t('API Tokens');
   }
@@ -58,6 +60,7 @@ class ApiTokens extends AsyncView {
   };
 
   renderBody() {
+    const {organization} = this.props;
     const {tokenList} = this.state;
 
     const isEmpty = tokenList.length === 0;
@@ -76,6 +79,14 @@ class ApiTokens extends AsyncView {
     return (
       <div>
         <SettingsPageHeader title="Auth Tokens" action={action} />
+        <AlertLink
+          to={`/settings/${(organization && organization.slug) ||
+            ''}/developer-settings/new-internal`}
+        >
+          {t(
+            "Auth Tokens are tied to the logged in user, meaning they'll stop working if the user leaves the organization! We suggest using internal integrations to create/manage tokens tied to the organization instead."
+          )}
+        </AlertLink>
         <TextBlock>
           {t(
             "Authentication tokens allow you to perform actions against the Sentry API on behalf of your account. They're the easiest way to get started using the API."
@@ -122,4 +133,4 @@ class ApiTokens extends AsyncView {
   }
 }
 
-export default ApiTokens;
+export default withOrganization(ApiTokens);
diff --git a/src/sentry/static/sentry/app/views/settings/settingsIndex.tsx b/src/sentry/static/sentry/app/views/settings/settingsIndex.tsx
index aaca275b8f..9b214cc1ab 100644
--- a/src/sentry/static/sentry/app/views/settings/settingsIndex.tsx
+++ b/src/sentry/static/sentry/app/views/settings/settingsIndex.tsx
@@ -27,7 +27,6 @@ const LINKS = {
   DOCUMENTATION_CLI: 'https://docs.sentry.io/learn/cli/',
   DOCUMENTATION_API: 'https://docs.sentry.io/hosted/api/',
   API: '/settings/account/api/',
-  API_APPLICATIONS: '/settings/account/api/applications/',
   MANAGE: '/manage/',
   FORUM: 'https://forum.sentry.io/',
   GITHUB_ISSUES: 'https://github.com/getsentry/sentry/issues',
@@ -244,7 +243,9 @@ class SettingsIndex extends React.Component<Props> {
                     <HomeLink to={LINKS.API}>{t('Auth Tokens')}</HomeLink>
                   </li>
                   <li>
-                    <HomeLink to={LINKS.API_APPLICATIONS}>{t('Applications')}</HomeLink>
+                    <HomeLink to={`${organizationSettingsUrl}developer-settings/`}>
+                      {t('Your Integrations')}
+                    </HomeLink>
                   </li>
                   <li>
                     <ExternalHomeLink href={LINKS.DOCUMENTATION_API}>
diff --git a/tests/js/spec/views/__snapshots__/apiTokens.spec.jsx.snap b/tests/js/spec/views/__snapshots__/apiTokens.spec.jsx.snap
index 39d42bfc82..39738987f1 100644
--- a/tests/js/spec/views/__snapshots__/apiTokens.spec.jsx.snap
+++ b/tests/js/spec/views/__snapshots__/apiTokens.spec.jsx.snap
@@ -21,6 +21,13 @@ exports[`ApiTokens renders empty result 1`] = `
       noTitleStyles={false}
       title="Auth Tokens"
     />
+    <AlertLink
+      priority="warning"
+      size="normal"
+      to="/settings/org-slug/developer-settings/new-internal"
+    >
+      Auth Tokens are tied to the logged in user, meaning they'll stop working if the user leaves the organization! We suggest using internal integrations to create/manage tokens tied to the organization instead.
+    </AlertLink>
     <TextBlock>
       Authentication tokens allow you to perform actions against the Sentry API on behalf of your account. They're the easiest way to get started using the API.
     </TextBlock>
@@ -103,6 +110,13 @@ exports[`ApiTokens renders with result 1`] = `
       noTitleStyles={false}
       title="Auth Tokens"
     />
+    <AlertLink
+      priority="warning"
+      size="normal"
+      to="/settings/org-slug/developer-settings/new-internal"
+    >
+      Auth Tokens are tied to the logged in user, meaning they'll stop working if the user leaves the organization! We suggest using internal integrations to create/manage tokens tied to the organization instead.
+    </AlertLink>
     <TextBlock>
       Authentication tokens allow you to perform actions against the Sentry API on behalf of your account. They're the easiest way to get started using the API.
     </TextBlock>
diff --git a/tests/js/spec/views/apiTokens.spec.jsx b/tests/js/spec/views/apiTokens.spec.jsx
index c6544cb454..ae2a3cdba6 100644
--- a/tests/js/spec/views/apiTokens.spec.jsx
+++ b/tests/js/spec/views/apiTokens.spec.jsx
@@ -2,7 +2,9 @@ import React from 'react';
 import {shallow, mountWithTheme} from 'sentry-test/enzyme';
 
 import {Client} from 'app/api';
-import ApiTokens from 'app/views/settings/account/apiTokens';
+import {ApiTokens} from 'app/views/settings/account/apiTokens';
+
+const organization = TestStubs.Organization();
 
 describe('ApiTokens', function() {
   const routerContext = TestStubs.routerContext();
@@ -16,7 +18,7 @@ describe('ApiTokens', function() {
       url: '/api-tokens/',
     });
 
-    const wrapper = shallow(<ApiTokens />, routerContext);
+    const wrapper = shallow(<ApiTokens organization={organization} />, routerContext);
 
     // Should be loading
     expect(wrapper).toMatchSnapshot();
@@ -28,7 +30,7 @@ describe('ApiTokens', function() {
       body: [TestStubs.ApiToken()],
     });
 
-    const wrapper = shallow(<ApiTokens />, routerContext);
+    const wrapper = shallow(<ApiTokens organization={organization} />, routerContext);
 
     // Should be loading
     expect(wrapper).toMatchSnapshot();
@@ -47,7 +49,10 @@ describe('ApiTokens', function() {
 
     expect(mock).not.toHaveBeenCalled();
 
-    const wrapper = mountWithTheme(<ApiTokens />, routerContext);
+    const wrapper = mountWithTheme(
+      <ApiTokens organization={organization} />,
+      routerContext
+    );
 
     wrapper.find('button[aria-label="Remove"]').simulate('click');
 
diff --git a/tests/js/spec/views/settings/__snapshots__/settingsIndex.spec.jsx.snap b/tests/js/spec/views/settings/__snapshots__/settingsIndex.spec.jsx.snap
index 3f6fd2a777..c0f7d6fb0b 100644
--- a/tests/js/spec/views/settings/__snapshots__/settingsIndex.spec.jsx.snap
+++ b/tests/js/spec/views/settings/__snapshots__/settingsIndex.spec.jsx.snap
@@ -318,9 +318,9 @@ exports[`SettingsIndex renders 1`] = `
             </li>
             <li>
               <HomeLink
-                to="/settings/account/api/applications/"
+                to="/settings/org-slug/developer-settings/"
               >
-                Applications
+                Your Integrations
               </HomeLink>
             </li>
             <li>
