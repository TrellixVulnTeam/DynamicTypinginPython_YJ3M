commit 0cf492d7355c0b07ca952ea55bb1ed935856983b
Author: Billy Vong <billyvg@users.noreply.github.com>
Date:   Wed May 23 10:11:44 2018 -0700

    feat(dashboard): Add state when waiting for first event (#8484)

diff --git a/src/sentry/static/sentry/app/components/errorRobot.jsx b/src/sentry/static/sentry/app/components/errorRobot.jsx
index cf6a6febe2..6ff41aed28 100644
--- a/src/sentry/static/sentry/app/components/errorRobot.jsx
+++ b/src/sentry/static/sentry/app/components/errorRobot.jsx
@@ -2,6 +2,7 @@ import React from 'react';
 import PropTypes from 'prop-types';
 import {Link, browserHistory} from 'react-router';
 import createReactClass from 'create-react-class';
+import styled from 'react-emotion';
 
 import ApiMixin from 'app/mixins/apiMixin';
 import {t} from 'app/locale';
@@ -94,11 +95,10 @@ const ErrorRobot = createReactClass({
         );
     }
     return (
-      <div
+      <ErrorRobotWrapper
+        data-test-id="awaiting-events"
         className="awaiting-events"
-        style={
-          gradient && {backgroundImage: 'linear-gradient(to bottom, #F8F9FA, #ffffff)'}
-        }
+        gradient={gradient}
       >
         <div className="wrap">
           <div className="robot">
@@ -125,9 +125,20 @@ const ErrorRobot = createReactClass({
           </p>
           {sampleLink}
         </div>
-      </div>
+      </ErrorRobotWrapper>
     );
   },
 });
 
 export default ErrorRobot;
+
+const ErrorRobotWrapper = styled('div')`
+  box-shadow: inset 0 1px 3px rgba(0, 0, 0, 0.08);
+  border-radius: 0 0 3px 3px;
+  ${p =>
+    p.gradient
+      ? `
+          background-image: linear-gradient(to bottom, #F8F9FA, #ffffff);
+         `
+      : ''};
+`;
diff --git a/src/sentry/static/sentry/app/components/resourceCard.jsx b/src/sentry/static/sentry/app/components/resourceCard.jsx
index 666cf56d82..80e99b05ad 100644
--- a/src/sentry/static/sentry/app/components/resourceCard.jsx
+++ b/src/sentry/static/sentry/app/components/resourceCard.jsx
@@ -5,13 +5,7 @@ import styled from 'react-emotion';
 import analytics from 'app/utils/analytics';
 import ConfigStore from 'app/stores/configStore';
 import ExternalLink from 'app/components/externalLink';
-
-const StyledTitle = styled('div')`
-  color: #493e54;
-  font-size: 16px;
-  text-align: center;
-  font-weight: bold;
-`;
+import {Panel} from 'app/components/panels';
 
 export default class ResourceCard extends React.Component {
   static propTypes = {
@@ -30,18 +24,33 @@ export default class ResourceCard extends React.Component {
     let {title, link, imgUrl} = this.props;
 
     return (
-      <div
-        className="flex box p-x-2 p-y-1"
-        style={{flexGrow: 1, alignItems: 'center'}}
-        onClick={this.recordClick}
-      >
-        <ExternalLink href={link}>
+      <ResourceCardWrapper onClick={this.recordClick}>
+        <StyledLink href={link}>
           <div className="m-b-1">
             <img src={mediaUrl + imgUrl} alt={title} />
           </div>
           <StyledTitle>{title}</StyledTitle>
-        </ExternalLink>
-      </div>
+        </StyledLink>
+      </ResourceCardWrapper>
     );
   }
 }
+
+const StyledTitle = styled('div')`
+  color: #493e54;
+  font-size: 16px;
+  text-align: center;
+  font-weight: bold;
+`;
+
+const ResourceCardWrapper = styled(Panel)`
+  display: flex;
+  flex: 1;
+  align-items: center;
+  padding: 20px;
+  margin-bottom: 0;
+`;
+
+const StyledLink = styled(ExternalLink)`
+  flex: 1;
+`;
diff --git a/src/sentry/static/sentry/app/views/organizationDashboard/index.jsx b/src/sentry/static/sentry/app/views/organizationDashboard/index.jsx
index 62ea520439..c4cf9cdc36 100644
--- a/src/sentry/static/sentry/app/views/organizationDashboard/index.jsx
+++ b/src/sentry/static/sentry/app/views/organizationDashboard/index.jsx
@@ -20,6 +20,7 @@ import OldDashboard from './oldDashboard';
 import ProjectNav from './projectNav';
 import TeamSection from './teamSection';
 import EmptyState from './emptyState';
+import Resources from './resources';
 
 class Dashboard extends React.Component {
   static propTypes = {
@@ -88,6 +89,10 @@ class Dashboard extends React.Component {
           favorites.length === 0 && (
             <EmptyState projects={projects} teams={teams} organization={organization} />
           )}
+        {projects.length === 1 &&
+          !projects[0].firstEvent && (
+            <Resources org={organization} project={projects[0]} />
+          )}
       </React.Fragment>
     );
   }
diff --git a/src/sentry/static/sentry/app/views/organizationDashboard/resources.jsx b/src/sentry/static/sentry/app/views/organizationDashboard/resources.jsx
index 41e0b24f63..aaf2ea6873 100644
--- a/src/sentry/static/sentry/app/views/organizationDashboard/resources.jsx
+++ b/src/sentry/static/sentry/app/views/organizationDashboard/resources.jsx
@@ -1,5 +1,6 @@
 import React from 'react';
 import {Flex} from 'grid-emotion';
+import styled from 'react-emotion';
 
 import analytics from 'app/utils/analytics';
 import ResourceCard from 'app/components/resourceCard';
@@ -20,11 +21,11 @@ export default class Resources extends React.Component {
 
   render() {
     return (
-      <React.Fragment>
-        <Panel>
+      <ResourcesWrapper>
+        <RobotPanel>
           <ErrorRobot org={this.props.org} project={this.props.project} />
-        </Panel>
-        <div>
+        </RobotPanel>
+        <ResourcesSection>
           <h4>{t('Resources')}</h4>
           <Flex justify={'space-between'}>
             <Flex width={3 / 10}>
@@ -49,8 +50,20 @@ export default class Resources extends React.Component {
               />
             </Flex>
           </Flex>
-        </div>
-      </React.Fragment>
+        </ResourcesSection>
+      </ResourcesWrapper>
     );
   }
 }
+
+const ResourcesWrapper = styled('div')`
+  border-top: 1px solid ${p => p.theme.borderLight};
+`;
+
+const RobotPanel = styled(Panel)`
+  margin: 30px 30px 20px 30px;
+`;
+
+const ResourcesSection = styled('div')`
+  padding: 0 30px 20px 30px;
+`;
diff --git a/src/sentry/static/sentry/less/stream.less b/src/sentry/static/sentry/less/stream.less
index 4c67d4e29a..6778be2637 100644
--- a/src/sentry/static/sentry/less/stream.less
+++ b/src/sentry/static/sentry/less/stream.less
@@ -497,11 +497,7 @@
  */
 
 .awaiting-events {
-  border-radius: 0;
   padding: 10px 20px 30px;
-  box-shadow: inset 0 1px 3px rgba(0, 0, 0, 0.08);
-  border-radius: 0 0 3px 3px;
-
   .wrap {
     position: relative;
     max-width: 740px;
diff --git a/tests/acceptance/test_project_issues.py b/tests/acceptance/test_project_issues.py
index 678b097429..24b280702a 100644
--- a/tests/acceptance/test_project_issues.py
+++ b/tests/acceptance/test_project_issues.py
@@ -26,7 +26,7 @@ class ProjectIssuesTest(AcceptanceTestCase):
         # TODO(dcramer): we should add basic assertions around "i wanted this
         # URL but was sent somewhere else"
         self.browser.get(self.path)
-        self.browser.wait_until('.awaiting-events')
+        self.browser.wait_until('[data-test-id="awaiting-events"]')
         self.browser.snapshot('project issues not configured')
 
     def test_with_issues(self):
diff --git a/tests/js/spec/views/organizationDashboard/index.spec.jsx b/tests/js/spec/views/organizationDashboard/index.spec.jsx
index ccb26ad5d2..6c0c6d71ac 100644
--- a/tests/js/spec/views/organizationDashboard/index.spec.jsx
+++ b/tests/js/spec/views/organizationDashboard/index.spec.jsx
@@ -50,7 +50,7 @@ describe('OrganizationDashboard', function() {
   describe('empty state', function() {
     beforeEach(function() {});
 
-    it('renders', function() {
+    it('renders with no projects', function() {
       const projects = [];
 
       const wrapper = shallow(
@@ -65,6 +65,30 @@ describe('OrganizationDashboard', function() {
       const emptyState = wrapper.find('EmptyState');
       expect(emptyState).toHaveLength(1);
     });
+
+    it('renders with 1 project, with no first event', function() {
+      MockApiClient.addMockResponse({
+        url: '/projects/org-slug/project-slug/issues/',
+        body: [{id: 'sampleIssueId'}],
+      });
+      const projects = [TestStubs.Project()];
+
+      const wrapper = mount(
+        <Dashboard
+          teams={teams}
+          projects={projects}
+          organization={TestStubs.Organization()}
+          params={{orgId: 'org-slug'}}
+        />,
+        TestStubs.routerContext()
+      );
+      const emptyState = wrapper.find('ErrorRobot');
+      expect(emptyState).toHaveLength(1);
+
+      expect(
+        wrapper.find('Link[to="/org-slug/project-slug/issues/sampleIssueId/?sample"]')
+      ).toHaveLength(1);
+    });
   });
 
   describe('with projects', function() {
@@ -191,6 +215,7 @@ describe('OrganizationDashboard', function() {
           teams: [],
           isBookmarked: true,
           stats: [],
+          firstEvent: true,
         }),
       ];
       MockApiClient.addMockResponse({
