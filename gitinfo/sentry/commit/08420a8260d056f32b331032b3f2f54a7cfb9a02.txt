commit 08420a8260d056f32b331032b3f2f54a7cfb9a02
Author: mikellykels <kelly@sentry.io>
Date:   Wed Apr 18 15:43:54 2018 -0700

    fix(auditlog): Fix audit log entry for Org Restore (#8081)
    
    * fix(auditlog): Fix audit log entry for Org Restore
    
    Fix the audit log entry for ORG.RESTORE. Also include audit log entry for require_2fa.
    
    * fix test

diff --git a/src/sentry/api/endpoints/organization_details.py b/src/sentry/api/endpoints/organization_details.py
index 35903aeb44..fb0c2859e5 100644
--- a/src/sentry/api/endpoints/organization_details.py
+++ b/src/sentry/api/endpoints/organization_details.py
@@ -194,7 +194,8 @@ class OrganizationSerializer(serializers.Serializer):
                 'allow_joinleave': org.flags.allow_joinleave.is_set,
                 'enhanced_privacy': org.flags.enhanced_privacy.is_set,
                 'disable_shared_issues': org.flags.disable_shared_issues.is_set,
-                'early_adopter': org.flags.early_adopter.is_set
+                'early_adopter': org.flags.early_adopter.is_set,
+                'require_2fa': org.flags.require_2fa.is_set,
             }
         }
 
@@ -307,14 +308,14 @@ class OrganizationDetailsEndpoint(OrganizationEndpoint):
                         'model': Organization.__name__,
                     }
                 )
-
-            self.create_audit_entry(
-                request=request,
-                organization=organization,
-                target_object=organization.id,
-                event=AuditLogEntryEvent.ORG_EDIT,
-                data=changed_data
-            )
+            else:
+                self.create_audit_entry(
+                    request=request,
+                    organization=organization,
+                    target_object=organization.id,
+                    event=AuditLogEntryEvent.ORG_EDIT,
+                    data=changed_data
+                )
 
             return Response(
                 serialize(
diff --git a/src/sentry/models/auditlogentry.py b/src/sentry/models/auditlogentry.py
index d28c1fa6a5..d197863b7b 100644
--- a/src/sentry/models/auditlogentry.py
+++ b/src/sentry/models/auditlogentry.py
@@ -210,8 +210,8 @@ class AuditLogEntry(Model):
         elif self.event == AuditLogEntryEvent.ORG_ADD:
             return 'created the organization'
         elif self.event == AuditLogEntryEvent.ORG_EDIT:
-            return 'edited the organization setting(s): ' + (', '.join(u'{} {}'.format(k, v)
-                                                                       for k, v in self.data.items()))
+            return 'edited the organization setting: ' + (', '.join(u'{} {}'.format(k, v)
+                                                                    for k, v in self.data.items()))
         elif self.event == AuditLogEntryEvent.ORG_REMOVE:
             return 'removed the organization'
         elif self.event == AuditLogEntryEvent.ORG_RESTORE:
diff --git a/tests/sentry/models/test_organization.py b/tests/sentry/models/test_organization.py
index 5a3b073b51..12178e0f90 100644
--- a/tests/sentry/models/test_organization.py
+++ b/tests/sentry/models/test_organization.py
@@ -131,8 +131,10 @@ class OrganizationTest(TestCase):
     def test_flags_have_changed(self):
         org = self.create_organization()
         org.flags.early_adopter = True
+        org.flags.require_2fa = True
         assert org.flag_has_changed('early_adopter')
         assert org.flag_has_changed('allow_joinleave') is False
+        assert org.flag_has_changed('require_2fa') is True
 
     def test_send_setup_2fa_emails(self):
         owner = self.create_user('foo@example.com')
diff --git a/tests/sentry/utils/audit/tests.py b/tests/sentry/utils/audit/tests.py
index e09dcfe6b3..cb8274a45c 100644
--- a/tests/sentry/utils/audit/tests.py
+++ b/tests/sentry/utils/audit/tests.py
@@ -70,6 +70,20 @@ class CreateAuditEntryTest(TestCase):
         deleted_org = DeletedOrganization.objects.get(slug=self.org.slug)
         self.assert_valid_deleted_log(deleted_org, self.org)
 
+    def test_audit_entry_org_restore_log(self):
+        entry = create_audit_entry(
+            request=self.req,
+            organization=self.org,
+            target_object=self.org.id,
+            event=AuditLogEntryEvent.ORG_RESTORE,
+            data=self.org.get_audit_log_data(),
+        )
+
+        assert ('restored') in entry.get_note()
+        assert entry.actor == self.user
+        assert entry.target_object == self.org.id
+        assert entry.event == AuditLogEntryEvent.ORG_RESTORE
+
     def test_audit_entry_team_delete_log(self):
         entry = create_audit_entry(
             request=self.req,
