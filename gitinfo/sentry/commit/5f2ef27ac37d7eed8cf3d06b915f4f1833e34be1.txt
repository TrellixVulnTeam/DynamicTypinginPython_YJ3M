commit 5f2ef27ac37d7eed8cf3d06b915f4f1833e34be1
Author: Armin Ronacher <armin.ronacher@active-4.com>
Date:   Tue Feb 16 14:02:01 2016 -0800

    Switch to base36 short ids and add to ui

diff --git a/src/sentry/models/group.py b/src/sentry/models/group.py
index b6bf6f445c..b097300d79 100644
--- a/src/sentry/models/group.py
+++ b/src/sentry/models/group.py
@@ -31,9 +31,10 @@ from sentry.db.models import (
 )
 from sentry.utils.http import absolute_uri
 from sentry.utils.strings import truncatechars, strip
+from sentry.utils.numbers import base36_encode, base36_decode
 
 
-_short_id_re = re.compile(r'^(.*?)(?:[\s_-]*)(\d+)$')
+_short_id_re = re.compile(r'^(.*?)(?:[\s_-])([A-Za-z0-9]+)$')
 
 
 # TODO(dcramer): pull in enum library
@@ -66,7 +67,7 @@ class GroupManager(BaseManager):
         try:
             return Group.objects.get(
                 project=project,
-                short_id=int(id),
+                short_id=base36_decode(id),
             )
         except Group.DoesNotExist:
             return
@@ -195,7 +196,7 @@ class Group(Model):
            self.short_id is not None:
             return '%s-%s' % (
                 self.project.short_name,
-                self.short_id,
+                base36_encode(self.short_id),
             )
 
     @property
diff --git a/src/sentry/static/sentry/app/components/stream/group.jsx b/src/sentry/static/sentry/app/components/stream/group.jsx
index 6d917450db..b045bfea2a 100644
--- a/src/sentry/static/sentry/app/components/stream/group.jsx
+++ b/src/sentry/static/sentry/app/components/stream/group.jsx
@@ -81,6 +81,10 @@ const StreamGroupHeader = React.createClass({
             }
             <span className="icon icon-soundoff"></span>
             <span className="icon icon-bookmark"></span>
+            {data.shortId
+              ? <span className="short-id">{data.shortId}</span>
+              : null}
+            {data.title}
             {this.getTitle()}
           </Link>
         </h3>
diff --git a/src/sentry/static/sentry/app/views/groupDetails/header.jsx b/src/sentry/static/sentry/app/views/groupDetails/header.jsx
index fe027d11ff..b7dac95852 100644
--- a/src/sentry/static/sentry/app/views/groupDetails/header.jsx
+++ b/src/sentry/static/sentry/app/views/groupDetails/header.jsx
@@ -98,6 +98,9 @@ const GroupHeader = React.createClass({
         <div className="row">
           <div className="col-sm-8">
             <h3>
+              {group.shortId
+                ? <span className="short-id">{group.shortId}</span>
+                : null}
               {group.title}
             </h3>
             <div className="event-message">
diff --git a/src/sentry/static/sentry/less/group-detail.less b/src/sentry/static/sentry/less/group-detail.less
index 5c1c9b18c9..5907b9b2eb 100644
--- a/src/sentry/static/sentry/less/group-detail.less
+++ b/src/sentry/static/sentry/less/group-detail.less
@@ -17,6 +17,16 @@
     white-space: nowrap;
     overflow: hidden;
     line-height: 1.1;
+
+    .short-id {
+      margin-right: 6px;
+      color: @blue;
+      font-weight: bold;
+      &:after {
+        content: ":";
+        color: @gray-dark;
+      }
+    }
   }
 
   .event-message, .event-meta {
diff --git a/src/sentry/static/sentry/less/stream.less b/src/sentry/static/sentry/less/stream.less
index 664db17937..e6cb210732 100644
--- a/src/sentry/static/sentry/less/stream.less
+++ b/src/sentry/static/sentry/less/stream.less
@@ -205,6 +205,16 @@
     background: #fff;
     .transition(all .4s ease-in-out);
 
+    .short-id {
+      margin-right: 6px;
+      color: @blue;
+      font-weight: bold;
+      &:after {
+        content: ":";
+        color: @gray-dark;
+      }
+    }
+
     .icon-bookmark, .icon-soundoff {
       padding-right: 5px;
       font-size: 95%;
diff --git a/src/sentry/tasks/shortids.py b/src/sentry/tasks/shortids.py
index 5bacbed225..754a0925f2 100644
--- a/src/sentry/tasks/shortids.py
+++ b/src/sentry/tasks/shortids.py
@@ -49,7 +49,7 @@ def fill_missing_project_ids(project_id=None, **kwargs):
     q = Group.objects.filter(
         project=project,
         short_id=None,
-    )
+    ).order_by('first_seen')
 
     for group in q.iterator():
         with catchable_atomic():
diff --git a/src/sentry/utils/numbers.py b/src/sentry/utils/numbers.py
new file mode 100644
index 0000000000..51c3fb77e4
--- /dev/null
+++ b/src/sentry/utils/numbers.py
@@ -0,0 +1,26 @@
+ALPHABET = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ'
+
+
+def base36_encode(number):
+    if number == 0:
+        return '0'
+
+    rv = []
+    inverse = False
+    if number < 0:
+        number = -number
+        inverse = True
+
+    while number != 0:
+        number, i = divmod(number, 36)
+        rv.append(ALPHABET[i])
+
+    if inverse:
+        rv.append('-')
+    rv.reverse()
+
+    return ''.join(rv)
+
+
+def base36_decode(str):
+    return int(str, 36)
