commit bfdf3d53a24cf018b305ecc83999c2496965b314
Author: Billy Vong <billyvg@users.noreply.github.com>
Date:   Thu Sep 6 14:36:41 2018 -0700

    feat(health): Add Devices view (#9629)
    
    Adds Devices view to Health.

diff --git a/src/sentry/static/sentry/app/routes.jsx b/src/sentry/static/sentry/app/routes.jsx
index 31c662ded6..bb41089b2d 100644
--- a/src/sentry/static/sentry/app/routes.jsx
+++ b/src/sentry/static/sentry/app/routes.jsx
@@ -766,7 +766,14 @@ function routes() {
             <Route
               path="browsers"
               componentPromise={() =>
-                import(/*webpackChunkName: HealthErrors*/ './views/organizationHealth/browsers')}
+                import(/*webpackChunkName: HealthBrowsers*/ './views/organizationHealth/browsers')}
+              component={errorHandler(LazyLoad)}
+            />
+
+            <Route
+              path="devices"
+              componentPromise={() =>
+                import(/*webpackChunkName: HealthDevices*/ './views/organizationHealth/devices')}
               component={errorHandler(LazyLoad)}
             />
           </Route>
diff --git a/src/sentry/static/sentry/app/views/organizationHealth/browsers.jsx b/src/sentry/static/sentry/app/views/organizationHealth/browsers.jsx
index a88b5c3673..c34ed9b4b2 100644
--- a/src/sentry/static/sentry/app/views/organizationHealth/browsers.jsx
+++ b/src/sentry/static/sentry/app/views/organizationHealth/browsers.jsx
@@ -12,10 +12,8 @@ import withHealth from './util/withHealth';
 
 class OrganizationHealthBrowsers extends React.Component {
   render() {
-    let {className} = this.props;
-
     return (
-      <div className={className}>
+      <React.Fragment>
         <Header>{t('Browsers')}</Header>
 
         <Flex>
@@ -89,7 +87,7 @@ class OrganizationHealthBrowsers extends React.Component {
             }}
           </HealthRequest>
         </Flex>
-      </div>
+      </React.Fragment>
     );
   }
 }
diff --git a/src/sentry/static/sentry/app/views/organizationHealth/devices.jsx b/src/sentry/static/sentry/app/views/organizationHealth/devices.jsx
new file mode 100644
index 0000000000..29540a27fd
--- /dev/null
+++ b/src/sentry/static/sentry/app/views/organizationHealth/devices.jsx
@@ -0,0 +1,62 @@
+import {Flex} from 'grid-emotion';
+import React from 'react';
+
+import {t} from 'app/locale';
+import PieChart from 'app/components/charts/pieChart';
+
+import EventsTableChart from './eventsTableChart';
+import Header from './styles/header';
+import HealthPanelChart from './styles/healthPanelChart';
+import HealthRequest from './util/healthRequest';
+import withHealth from './util/withHealth';
+
+class OrganizationHealthDevices extends React.Component {
+  render() {
+    return (
+      <React.Fragment>
+        <Flex justify="space-between">
+          <Header>{t('Devices')}</Header>
+        </Flex>
+
+        <HealthRequest
+          tag="device"
+          showLoading
+          includeTimeseries={false}
+          includeTop
+          includePercentages
+          limit={5}
+        >
+          {({tagData, tagDataWithPercentages}) => (
+            <React.Fragment>
+              <Flex>
+                <HealthPanelChart
+                  height={200}
+                  showLegend={false}
+                  series={[
+                    {
+                      seriesName: t('Devices'),
+                      data: tagData.map(([name, value]) => ({name, value})),
+                    },
+                  ]}
+                  title={t('Devices')}
+                >
+                  {({series}) => <PieChart height={300} selectOnRender series={series} />}
+                </HealthPanelChart>
+              </Flex>
+
+              <Flex>
+                <EventsTableChart
+                  headers={[t('Device'), t('Events'), t('Percentage'), t('Last event')]}
+                  data={tagDataWithPercentages}
+                />
+              </Flex>
+            </React.Fragment>
+          )}
+        </HealthRequest>
+      </React.Fragment>
+    );
+  }
+}
+
+export default withHealth(OrganizationHealthDevices);
+export {OrganizationHealthDevices};
diff --git a/src/sentry/static/sentry/app/views/organizationHealth/healthNavigationMenu.jsx b/src/sentry/static/sentry/app/views/organizationHealth/healthNavigationMenu.jsx
index 6c7715a432..0a601132ee 100644
--- a/src/sentry/static/sentry/app/views/organizationHealth/healthNavigationMenu.jsx
+++ b/src/sentry/static/sentry/app/views/organizationHealth/healthNavigationMenu.jsx
@@ -23,6 +23,7 @@ const HealthNavigationMenu = styled(
               <NavItem to={`/organizations/${organization.slug}/health/`}>
                 {t('Overview')}
               </NavItem>
+
               <NavItem to={`/organizations/${organization.slug}/health/transactions/`}>
                 {t('Transaction')}
               </NavItem>
@@ -32,6 +33,10 @@ const HealthNavigationMenu = styled(
               <NavItem to={`/organizations/${organization.slug}/health/browsers/`}>
                 {t('Browsers')}
               </NavItem>
+
+              <NavItem to={`/organizations/${organization.slug}/health/devices/`}>
+                {t('Devices')}
+              </NavItem>
             </NavigationGroup>
           </div>
         );
diff --git a/tests/js/spec/views/organizationHealth/devices.spec.jsx b/tests/js/spec/views/organizationHealth/devices.spec.jsx
new file mode 100644
index 0000000000..0fc6754829
--- /dev/null
+++ b/tests/js/spec/views/organizationHealth/devices.spec.jsx
@@ -0,0 +1,31 @@
+import React from 'react';
+import {mount} from 'enzyme';
+
+import OrganizationHealthDevices from 'app/views/organizationHealth/devices';
+
+jest.mock('app/utils/withLatestContext');
+
+describe('OrganizationHealthDevices', function() {
+  const org = TestStubs.Organization();
+  MockApiClient.addMockResponse({
+    url: '/organizations/org-slug/health/top/',
+    body: (url, opts) => {
+      return TestStubs.HealthTop(opts.query.tag);
+    },
+  });
+
+  MockApiClient.addMockResponse({
+    url: '/organizations/org-slug/health/graph/',
+    body: (url, opts) => {
+      return TestStubs.HealthGraph(opts.query.tag);
+    },
+  });
+
+  it('renders with PieChart, and EventTableChart', async function() {
+    let wrapper = mount(<OrganizationHealthDevices organization={org} />);
+    await tick();
+    wrapper.update();
+    expect(wrapper.find('PieChart')).toHaveLength(1);
+    expect(wrapper.find('EventsTableChart')).toHaveLength(1);
+  });
+});
