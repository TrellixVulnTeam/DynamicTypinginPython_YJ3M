commit cffeed50ea99da650b83d78f78dc090449586a83
Author: Matt Robenolt <matt@ydekproductions.com>
Date:   Thu Mar 8 17:21:05 2018 -0800

    feat(api): Spit back the rule that matched for event ownership

diff --git a/src/sentry/api/endpoints/event_owners.py b/src/sentry/api/endpoints/event_owners.py
index 3cc4d46000..fcb1077dd4 100644
--- a/src/sentry/api/endpoints/event_owners.py
+++ b/src/sentry/api/endpoints/event_owners.py
@@ -31,15 +31,18 @@ class EventOwnersEndpoint(ProjectEndpoint):
         # populate event data
         Event.objects.bind_nodes([event], 'data')
 
-        owners = ProjectOwnership.get_owners(project.id, event.data)
+        owners, matcher = ProjectOwnership.get_owners(project.id, event.data)
 
         # For sake of the API, we don't differentiate between
         # the implicit "everyone" and no owners
         if owners == ProjectOwnership.Everyone:
             owners = []
 
-        return Response(serialize(
-            Actor.resolve_many(owners),
-            request.user,
-            ActorSerializer(),
-        ))
+        return Response({
+            'owners': serialize(
+                Actor.resolve_many(owners),
+                request.user,
+                ActorSerializer(),
+            ),
+            'rule': matcher,
+        })
diff --git a/src/sentry/models/projectownership.py b/src/sentry/models/projectownership.py
index a263460b04..3d813b774b 100644
--- a/src/sentry/models/projectownership.py
+++ b/src/sentry/models/projectownership.py
@@ -60,9 +60,10 @@ class ProjectOwnership(Model):
                             owners.append(resolve_actor(o, project_id))
                         except UnknownActor:
                             continue
-                    return owners
+                    return owners, rule.matcher
 
-        return cls.Everyone if ownership.fallthrough else []
+        owners = cls.Everyone if ownership.fallthrough else []
+        return owners, None
 
 
 class UnknownActor(Exception):
diff --git a/tests/sentry/models/test_projectownership.py b/tests/sentry/models/test_projectownership.py
index b83d96975d..f6a330a9a4 100644
--- a/tests/sentry/models/test_projectownership.py
+++ b/tests/sentry/models/test_projectownership.py
@@ -8,13 +8,15 @@ from sentry.ownership.grammar import Rule, Owner, Matcher, dump_schema
 
 class ProjectOwnershipTestCase(TestCase):
     def test_get_owners_default(self):
-        assert ProjectOwnership.get_owners(self.project.id, {}) == ProjectOwnership.Everyone
+        assert ProjectOwnership.get_owners(self.project.id, {}) == (ProjectOwnership.Everyone, None)
 
     def test_get_owners_basic(self):
+        matcher = Matcher('path', '*.py')
+
         ProjectOwnership.objects.create(
             project_id=self.project.id,
             schema=dump_schema([
-                Rule(Matcher('path', '*.py'), [
+                Rule(matcher, [
                     Owner('user', self.user.email),
                     Owner('team', self.team.slug),
                 ]),
@@ -23,7 +25,7 @@ class ProjectOwnershipTestCase(TestCase):
         )
 
         # No data matches
-        assert ProjectOwnership.get_owners(self.project.id, {}) == ProjectOwnership.Everyone
+        assert ProjectOwnership.get_owners(self.project.id, {}) == (ProjectOwnership.Everyone, None)
 
         assert ProjectOwnership.get_owners(
             self.project.id, {
@@ -33,7 +35,7 @@ class ProjectOwnershipTestCase(TestCase):
                     }]
                 }
             }
-        ) == [Actor(self.user.id, User), Actor(self.team.id, Team)]
+        ) == ([Actor(self.user.id, User), Actor(self.team.id, Team)], matcher)
 
         assert ProjectOwnership.get_owners(
             self.project.id, {
@@ -43,7 +45,7 @@ class ProjectOwnershipTestCase(TestCase):
                     }]
                 }
             }
-        ) == ProjectOwnership.Everyone
+        ) == (ProjectOwnership.Everyone, None)
 
         # When fallthrough = False, we don't implicitly assign to Everyone
         ProjectOwnership.objects.filter(
@@ -58,4 +60,4 @@ class ProjectOwnershipTestCase(TestCase):
                     }]
                 }
             }
-        ) == []
+        ) == ([], None)
