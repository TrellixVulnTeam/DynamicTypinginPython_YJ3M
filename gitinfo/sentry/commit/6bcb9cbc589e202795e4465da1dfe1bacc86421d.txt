commit 6bcb9cbc589e202795e4465da1dfe1bacc86421d
Author: Lyn Nagara <lyn.nagara@gmail.com>
Date:   Tue Jan 15 10:24:13 2019 -0800

    ref(issues): Refactor EventOrGroupHeader to support org level views (#11519)
    
    The component will conditionally renders different links depending on
    the current route.

diff --git a/src/sentry/static/sentry/app/components/eventOrGroupHeader.jsx b/src/sentry/static/sentry/app/components/eventOrGroupHeader.jsx
index be215e3fe0..0eb3d7756a 100644
--- a/src/sentry/static/sentry/app/components/eventOrGroupHeader.jsx
+++ b/src/sentry/static/sentry/app/components/eventOrGroupHeader.jsx
@@ -1,5 +1,6 @@
 import PropTypes from 'prop-types';
 import React from 'react';
+import {withRouter, Link} from 'react-router';
 import styled, {css} from 'react-emotion';
 import classNames from 'classnames';
 import {capitalize} from 'lodash';
@@ -14,8 +15,7 @@ import Tooltip from 'app/components/tooltip';
  */
 class EventOrGroupHeader extends React.Component {
   static propTypes = {
-    orgId: PropTypes.string.isRequired,
-    projectId: PropTypes.string.isRequired,
+    params: PropTypes.object,
     /** Either an issue or event **/
     data: PropTypes.shape({
       id: PropTypes.string,
@@ -68,22 +68,33 @@ class EventOrGroupHeader extends React.Component {
   }
 
   getTitle() {
-    let {hideIcons, hideLevel, includeLink, orgId, projectId, data} = this.props;
+    let {hideIcons, hideLevel, includeLink, data, params} = this.props;
+    let {orgId, projectId} = params;
+
     let {id, level, groupID} = data || {};
     let isEvent = !!data.eventID;
 
     let props = {};
     let Wrapper;
+
+    let basePath = projectId
+      ? `/${orgId}/${projectId}/issues/`
+      : `/organizations/${orgId}/issues/`;
+
     if (includeLink) {
       props.to = {
-        pathname: `/${orgId}/${projectId}/issues/${isEvent ? groupID : id}/${isEvent
+        pathname: `${basePath}${isEvent ? groupID : id}/${isEvent
           ? `events/${data.id}/`
           : ''}`,
         search: `${this.props.query
           ? `?query=${window.encodeURIComponent(this.props.query)}`
           : ''}`,
       };
-      Wrapper = ProjectLink;
+      if (projectId) {
+        Wrapper = ProjectLink;
+      } else {
+        Wrapper = Link;
+      }
     } else {
       Wrapper = 'span';
     }
@@ -210,4 +221,4 @@ const GroupLevel = styled.div`
   }};
 `;
 
-export default EventOrGroupHeader;
+export default withRouter(EventOrGroupHeader);
diff --git a/src/sentry/static/sentry/app/components/stream/group.jsx b/src/sentry/static/sentry/app/components/stream/group.jsx
index bccc23fc2d..e4a0e9f8bc 100644
--- a/src/sentry/static/sentry/app/components/stream/group.jsx
+++ b/src/sentry/static/sentry/app/components/stream/group.jsx
@@ -98,12 +98,7 @@ const StreamGroup = createReactClass({
           </GroupCheckbox>
         )}
         <GroupSummary w={[8 / 12, 8 / 12, 6 / 12]} ml={canSelect ? 1 : 2} mr={1} flex="1">
-          <EventOrGroupHeader
-            data={data}
-            orgId={orgId}
-            projectId={projectId}
-            query={query}
-          />
+          <EventOrGroupHeader data={data} query={query} />
           <EventOrGroupExtraDetails
             group
             {...data}
diff --git a/src/sentry/static/sentry/app/views/groupDetails/project/groupMerged/mergedItem.jsx b/src/sentry/static/sentry/app/views/groupDetails/project/groupMerged/mergedItem.jsx
index 756d01163a..114438fa88 100644
--- a/src/sentry/static/sentry/app/views/groupDetails/project/groupMerged/mergedItem.jsx
+++ b/src/sentry/static/sentry/app/views/groupDetails/project/groupMerged/mergedItem.jsx
@@ -16,8 +16,6 @@ const MergedItem = createReactClass({
   displayName: 'MergedItem',
 
   propTypes: {
-    orgId: PropTypes.string.isRequired,
-    projectId: PropTypes.string.isRequired,
     fingerprint: PropTypes.string.isRequired,
     disabled: PropTypes.bool,
     event: PropTypes.shape({
@@ -79,7 +77,7 @@ const MergedItem = createReactClass({
   },
 
   render() {
-    let {disabled, event, orgId, fingerprint, projectId} = this.props;
+    let {disabled, event, fingerprint} = this.props;
     let checkboxDisabled = disabled || this.state.disabled;
 
     // `event` can be null if last event w/ fingerprint is not within retention period
@@ -119,13 +117,7 @@ const MergedItem = createReactClass({
             {event && (
               <EventDetails className="event-details">
                 <FlowLayout>
-                  <EventOrGroupHeader
-                    orgId={orgId}
-                    projectId={projectId}
-                    data={event}
-                    hideIcons
-                    hideLevel
-                  />
+                  <EventOrGroupHeader data={event} hideIcons hideLevel />
                 </FlowLayout>
               </EventDetails>
             )}
diff --git a/src/sentry/static/sentry/app/views/groupDetails/project/groupMerged/mergedList.jsx b/src/sentry/static/sentry/app/views/groupDetails/project/groupMerged/mergedList.jsx
index 7d8b24aeb7..123d70fcef 100644
--- a/src/sentry/static/sentry/app/views/groupDetails/project/groupMerged/mergedList.jsx
+++ b/src/sentry/static/sentry/app/views/groupDetails/project/groupMerged/mergedList.jsx
@@ -54,11 +54,9 @@ class MergedList extends React.Component {
           {itemsWithLatestEvent.map(({id, latestEvent}) => (
             <MergedItem
               key={id}
-              {...otherProps}
               disabled={items.length === 1}
               event={latestEvent}
               fingerprint={id}
-              itemCount={items.length}
             />
           ))}
         </MergedItems>
diff --git a/src/sentry/static/sentry/app/views/groupDetails/project/groupSimilar/similarItem.jsx b/src/sentry/static/sentry/app/views/groupDetails/project/groupSimilar/similarItem.jsx
index b97ba1fca0..d040677108 100644
--- a/src/sentry/static/sentry/app/views/groupDetails/project/groupSimilar/similarItem.jsx
+++ b/src/sentry/static/sentry/app/views/groupDetails/project/groupSimilar/similarItem.jsx
@@ -133,7 +133,7 @@ const SimilarIssueItem = createReactClass({
               />
             </div>
             <div className="event-details level-error" style={{flex: 1}}>
-              <EventOrGroupHeader orgId={orgId} projectId={projectId} data={issue} />
+              <EventOrGroupHeader data={issue} />
               <EventOrGroupExtraDetails
                 {...issue}
                 groupId={issue.id}
diff --git a/src/sentry/static/sentry/app/views/projectDashboard/eventNode.jsx b/src/sentry/static/sentry/app/views/projectDashboard/eventNode.jsx
index 5b91728883..c0f4bf3fe5 100644
--- a/src/sentry/static/sentry/app/views/projectDashboard/eventNode.jsx
+++ b/src/sentry/static/sentry/app/views/projectDashboard/eventNode.jsx
@@ -29,13 +29,7 @@ const EventNode = createReactClass({
     return (
       <li className="group row">
         <div className="col-xs-8 event-details">
-          <EventOrGroupHeader
-            orgId={orgId}
-            projectId={projectId}
-            data={group}
-            hideIcons
-            hideLevel
-          />
+          <EventOrGroupHeader data={group} hideIcons hideLevel />
           <EventOrGroupExtraDetails
             orgId={orgId}
             projectId={projectId}
diff --git a/src/sentry/static/sentry/app/views/settings/project/projectFilters/groupTombstones.jsx b/src/sentry/static/sentry/app/views/settings/project/projectFilters/groupTombstones.jsx
index 8ac6c5d968..557f953cba 100644
--- a/src/sentry/static/sentry/app/views/settings/project/projectFilters/groupTombstones.jsx
+++ b/src/sentry/static/sentry/app/views/settings/project/projectFilters/groupTombstones.jsx
@@ -1,7 +1,6 @@
 import PropTypes from 'prop-types';
 import React from 'react';
 import styled from 'react-emotion';
-import _ from 'lodash';
 import {Box} from 'grid-emotion';
 
 import {addErrorMessage, addSuccessMessage} from 'app/actionCreators/indicator';
@@ -18,8 +17,6 @@ class GroupTombstoneRow extends React.Component {
   static propTypes = {
     data: PropTypes.object.isRequired,
     onUndiscard: PropTypes.func.isRequired,
-    orgId: PropTypes.string.isRequired,
-    projectId: PropTypes.string.isRequired,
   };
 
   render() {
@@ -33,7 +30,7 @@ class GroupTombstoneRow extends React.Component {
             includeLink={false}
             hideIcons={true}
             className="truncate"
-            {..._.omit(this.props, 'undiscard')}
+            data={data}
           />
         </StyledBox>
         <Box w={20} mx={30}>
@@ -102,7 +99,6 @@ class GroupTombstones extends AsyncComponent {
   }
 
   renderBody() {
-    let {orgId, projectId} = this.props;
     let {tombstones} = this.state;
 
     return tombstones.length ? (
@@ -112,8 +108,6 @@ class GroupTombstones extends AsyncComponent {
             <GroupTombstoneRow
               key={data.id}
               data={data}
-              orgId={orgId}
-              projectId={projectId}
               onUndiscard={this.handleUndiscard}
             />
           );
diff --git a/tests/js/spec/components/__snapshots__/eventOrGroupHeader.spec.jsx.snap b/tests/js/spec/components/__snapshots__/eventOrGroupHeader.spec.jsx.snap
index 841355f67b..3938610ab5 100644
--- a/tests/js/spec/components/__snapshots__/eventOrGroupHeader.spec.jsx.snap
+++ b/tests/js/spec/components/__snapshots__/eventOrGroupHeader.spec.jsx.snap
@@ -1,357 +1,174 @@
 // Jest Snapshot v1, https://goo.gl/fbAQLP
 
 exports[`EventOrGroupHeader Event hides level tag 1`] = `
-<div
-  className="event-issue-header"
->
-  <Title>
-    <ProjectLink
-      style={null}
-      to={
-        Object {
-          "pathname": "/orgId/projectId/issues/groupID/events/id/",
-          "search": "",
-        }
-      }
-    >
-      <EventOrGroupTitle
-        data={
-          Object {
-            "culprit": undefined,
-            "eventID": "eventID",
-            "groupID": "groupID",
-            "id": "id",
-            "metadata": Object {
-              "directive": "metadata directive",
-              "message": "metadata message",
-              "title": "metadata title",
-              "type": "metadata type",
-              "uri": "metadata uri",
-              "value": "metadata value",
-            },
-            "type": "default",
-          }
-        }
-        hideLevel={true}
-        includeLink={true}
-        orgId="orgId"
-        projectId="projectId"
-        style={
-          Object {
-            "fontWeight": 600,
-          }
-        }
-      />
-    </ProjectLink>
-  </Title>
-</div>
+<EventOrGroupHeader
+  data={
+    Object {
+      "culprit": undefined,
+      "eventID": "eventID",
+      "groupID": "groupID",
+      "id": "id",
+      "metadata": Object {
+        "directive": "metadata directive",
+        "message": "metadata message",
+        "title": "metadata title",
+        "type": "metadata type",
+        "uri": "metadata uri",
+        "value": "metadata value",
+      },
+      "type": "default",
+    }
+  }
+  hideLevel={true}
+  includeLink={true}
+  orgId="orgId"
+  projectId="projectId"
+/>
 `;
 
 exports[`EventOrGroupHeader Event renders with \`type = csp\` 1`] = `
-<div
-  className="event-issue-header"
->
-  <Title>
-    <ProjectLink
-      style={null}
-      to={
-        Object {
-          "pathname": "/orgId/projectId/issues/groupID/events/id/",
-          "search": "",
-        }
-      }
-    >
-      <EventOrGroupTitle
-        data={
-          Object {
-            "culprit": undefined,
-            "eventID": "eventID",
-            "groupID": "groupID",
-            "id": "id",
-            "metadata": Object {
-              "directive": "metadata directive",
-              "message": "metadata message",
-              "title": "metadata title",
-              "type": "metadata type",
-              "uri": "metadata uri",
-              "value": "metadata value",
-            },
-            "type": "csp",
-          }
-        }
-        includeLink={true}
-        orgId="orgId"
-        projectId="projectId"
-        style={
-          Object {
-            "fontWeight": 600,
-          }
-        }
-      />
-    </ProjectLink>
-  </Title>
-  <Message>
-    metadata message
-  </Message>
-</div>
+<EventOrGroupHeader
+  data={
+    Object {
+      "culprit": undefined,
+      "eventID": "eventID",
+      "groupID": "groupID",
+      "id": "id",
+      "metadata": Object {
+        "directive": "metadata directive",
+        "message": "metadata message",
+        "title": "metadata title",
+        "type": "metadata type",
+        "uri": "metadata uri",
+        "value": "metadata value",
+      },
+      "type": "csp",
+    }
+  }
+  includeLink={true}
+  orgId="orgId"
+  projectId="projectId"
+/>
 `;
 
 exports[`EventOrGroupHeader Event renders with \`type = default\` 1`] = `
-<div
-  className="event-issue-header"
->
-  <Title>
-    <ProjectLink
-      style={null}
-      to={
-        Object {
-          "pathname": "/orgId/projectId/issues/groupID/events/id/",
-          "search": "",
-        }
-      }
-    >
-      <EventOrGroupTitle
-        data={
-          Object {
-            "culprit": undefined,
-            "eventID": "eventID",
-            "groupID": "groupID",
-            "id": "id",
-            "metadata": Object {
-              "directive": "metadata directive",
-              "message": "metadata message",
-              "title": "metadata title",
-              "type": "metadata type",
-              "uri": "metadata uri",
-              "value": "metadata value",
-            },
-            "type": "default",
-          }
-        }
-        includeLink={true}
-        orgId="orgId"
-        projectId="projectId"
-        style={
-          Object {
-            "fontWeight": 600,
-          }
-        }
-      />
-    </ProjectLink>
-  </Title>
-</div>
+<EventOrGroupHeader
+  data={
+    Object {
+      "culprit": undefined,
+      "eventID": "eventID",
+      "groupID": "groupID",
+      "id": "id",
+      "metadata": Object {
+        "directive": "metadata directive",
+        "message": "metadata message",
+        "title": "metadata title",
+        "type": "metadata type",
+        "uri": "metadata uri",
+        "value": "metadata value",
+      },
+      "type": "default",
+    }
+  }
+  includeLink={true}
+  orgId="orgId"
+  projectId="projectId"
+/>
 `;
 
 exports[`EventOrGroupHeader Event renders with \`type = error\` 1`] = `
-<div
-  className="event-issue-header"
->
-  <Title>
-    <ProjectLink
-      style={null}
-      to={
-        Object {
-          "pathname": "/orgId/projectId/issues/groupID/events/id/",
-          "search": "",
-        }
-      }
-    >
-      <EventOrGroupTitle
-        data={
-          Object {
-            "culprit": undefined,
-            "eventID": "eventID",
-            "groupID": "groupID",
-            "id": "id",
-            "metadata": Object {
-              "directive": "metadata directive",
-              "message": "metadata message",
-              "title": "metadata title",
-              "type": "metadata type",
-              "uri": "metadata uri",
-              "value": "metadata value",
-            },
-            "type": "error",
-          }
-        }
-        includeLink={true}
-        orgId="orgId"
-        projectId="projectId"
-        style={
-          Object {
-            "fontWeight": 600,
-          }
-        }
-      />
-    </ProjectLink>
-  </Title>
-  <Message>
-    metadata value
-  </Message>
-</div>
+<EventOrGroupHeader
+  data={
+    Object {
+      "culprit": undefined,
+      "eventID": "eventID",
+      "groupID": "groupID",
+      "id": "id",
+      "metadata": Object {
+        "directive": "metadata directive",
+        "message": "metadata message",
+        "title": "metadata title",
+        "type": "metadata type",
+        "uri": "metadata uri",
+        "value": "metadata value",
+      },
+      "type": "error",
+    }
+  }
+  includeLink={true}
+  orgId="orgId"
+  projectId="projectId"
+/>
 `;
 
 exports[`EventOrGroupHeader Group renders with \`type = csp\` 1`] = `
-<div
-  className="event-issue-header"
->
-  <Title>
-    <ProjectLink
-      style={null}
-      to={
-        Object {
-          "pathname": "/orgId/projectId/issues/id/",
-          "search": "",
-        }
-      }
-    >
-      <Tooltip
-        title="Error level: Error"
-      >
-        <GroupLevel
-          level="error"
-        />
-      </Tooltip>
-      <EventOrGroupTitle
-        data={
-          Object {
-            "culprit": "culprit",
-            "id": "id",
-            "level": "error",
-            "metadata": Object {
-              "directive": "metadata directive",
-              "message": "metadata message",
-              "title": "metadata title",
-              "type": "metadata type",
-              "uri": "metadata uri",
-              "value": "metadata value",
-            },
-            "type": "csp",
-          }
-        }
-        includeLink={true}
-        orgId="orgId"
-        projectId="projectId"
-        style={
-          Object {
-            "fontWeight": 600,
-          }
-        }
-      />
-    </ProjectLink>
-  </Title>
-  <Message>
-    metadata message
-  </Message>
-</div>
+<EventOrGroupHeader
+  data={
+    Object {
+      "culprit": "culprit",
+      "id": "id",
+      "level": "error",
+      "metadata": Object {
+        "directive": "metadata directive",
+        "message": "metadata message",
+        "title": "metadata title",
+        "type": "metadata type",
+        "uri": "metadata uri",
+        "value": "metadata value",
+      },
+      "type": "csp",
+    }
+  }
+  includeLink={true}
+  orgId="orgId"
+  projectId="projectId"
+/>
 `;
 
 exports[`EventOrGroupHeader Group renders with \`type = default\` 1`] = `
-<div
-  className="event-issue-header"
->
-  <Title>
-    <ProjectLink
-      style={null}
-      to={
-        Object {
-          "pathname": "/orgId/projectId/issues/id/",
-          "search": "",
-        }
-      }
-    >
-      <Tooltip
-        title="Error level: Error"
-      >
-        <GroupLevel
-          level="error"
-        />
-      </Tooltip>
-      <EventOrGroupTitle
-        data={
-          Object {
-            "culprit": "culprit",
-            "id": "id",
-            "level": "error",
-            "metadata": Object {
-              "directive": "metadata directive",
-              "message": "metadata message",
-              "title": "metadata title",
-              "type": "metadata type",
-              "uri": "metadata uri",
-              "value": "metadata value",
-            },
-            "type": "default",
-          }
-        }
-        includeLink={true}
-        orgId="orgId"
-        projectId="projectId"
-        style={
-          Object {
-            "fontWeight": 600,
-          }
-        }
-      />
-    </ProjectLink>
-  </Title>
-  <Message>
-    culprit
-  </Message>
-</div>
+<EventOrGroupHeader
+  data={
+    Object {
+      "culprit": "culprit",
+      "id": "id",
+      "level": "error",
+      "metadata": Object {
+        "directive": "metadata directive",
+        "message": "metadata message",
+        "title": "metadata title",
+        "type": "metadata type",
+        "uri": "metadata uri",
+        "value": "metadata value",
+      },
+      "type": "default",
+    }
+  }
+  includeLink={true}
+  orgId="orgId"
+  projectId="projectId"
+/>
 `;
 
 exports[`EventOrGroupHeader Group renders with \`type = error\` 1`] = `
-<div
-  className="event-issue-header"
->
-  <Title>
-    <ProjectLink
-      style={null}
-      to={
-        Object {
-          "pathname": "/orgId/projectId/issues/id/",
-          "search": "",
-        }
-      }
-    >
-      <Tooltip
-        title="Error level: Error"
-      >
-        <GroupLevel
-          level="error"
-        />
-      </Tooltip>
-      <EventOrGroupTitle
-        data={
-          Object {
-            "culprit": "culprit",
-            "id": "id",
-            "level": "error",
-            "metadata": Object {
-              "directive": "metadata directive",
-              "message": "metadata message",
-              "title": "metadata title",
-              "type": "metadata type",
-              "uri": "metadata uri",
-              "value": "metadata value",
-            },
-            "type": "error",
-          }
-        }
-        includeLink={true}
-        orgId="orgId"
-        projectId="projectId"
-        style={
-          Object {
-            "fontWeight": 600,
-          }
-        }
-      />
-    </ProjectLink>
-  </Title>
-  <Message>
-    metadata value
-  </Message>
-</div>
+<EventOrGroupHeader
+  data={
+    Object {
+      "culprit": "culprit",
+      "id": "id",
+      "level": "error",
+      "metadata": Object {
+        "directive": "metadata directive",
+        "message": "metadata message",
+        "title": "metadata title",
+        "type": "metadata type",
+        "uri": "metadata uri",
+        "value": "metadata value",
+      },
+      "type": "error",
+    }
+  }
+  includeLink={true}
+  orgId="orgId"
+  projectId="projectId"
+/>
 `;
diff --git a/tests/js/spec/components/__snapshots__/streamGroup.spec.jsx.snap b/tests/js/spec/components/__snapshots__/streamGroup.spec.jsx.snap
index b2d1e1166e..8e08fdf20a 100644
--- a/tests/js/spec/components/__snapshots__/streamGroup.spec.jsx.snap
+++ b/tests/js/spec/components/__snapshots__/streamGroup.spec.jsx.snap
@@ -30,7 +30,7 @@ exports[`StreamGroup renders with anchors 1`] = `
       ]
     }
   >
-    <EventOrGroupHeader
+    <withRouter(EventOrGroupHeader)
       data={
         Object {
           "assignedTo": null,
@@ -65,9 +65,6 @@ exports[`StreamGroup renders with anchors 1`] = `
           "type": "error",
         }
       }
-      includeLink={true}
-      orgId="orgId"
-      projectId="test"
     />
     <EventOrGroupExtraDetails
       assignedTo={null}
diff --git a/tests/js/spec/views/groupDetails/__snapshots__/groupSimilarView.spec.jsx.snap b/tests/js/spec/views/groupDetails/__snapshots__/groupSimilar.spec.jsx.snap
similarity index 74%
rename from tests/js/spec/views/groupDetails/__snapshots__/groupSimilarView.spec.jsx.snap
rename to tests/js/spec/views/groupDetails/__snapshots__/groupSimilar.spec.jsx.snap
index 305310fb61..172704ae43 100644
--- a/tests/js/spec/views/groupDetails/__snapshots__/groupSimilarView.spec.jsx.snap
+++ b/tests/js/spec/views/groupDetails/__snapshots__/groupSimilar.spec.jsx.snap
@@ -654,7 +654,7 @@ exports[`Issues Similar View renders with mocked data 1`] = `
                             }
                           }
                         >
-                          <EventOrGroupHeader
+                          <withRouter(EventOrGroupHeader)
                             data={
                               Object {
                                 "annotations": Array [],
@@ -690,32 +690,135 @@ exports[`Issues Similar View renders with mocked data 1`] = `
                                 "userCount": 3,
                               }
                             }
-                            includeLink={true}
-                            orgId="org-slug"
-                            projectId="project-slug"
                           >
-                            <div
-                              className="event-issue-header"
-                            >
-                              <Title>
-                                <div
-                                  className="css-leroxf-Title-truncateStyles eex8od0"
-                                >
-                                  <ProjectLink
-                                    style={
+                            <EventOrGroupHeader
+                              data={
+                                Object {
+                                  "annotations": Array [],
+                                  "assignedTo": null,
+                                  "count": "90",
+                                  "culprit": "length(app/views/groupSimilar/groupSimilarView)",
+                                  "firstSeen": "2017-07-10T18:32:43Z",
+                                  "hasSeen": false,
+                                  "id": "271",
+                                  "isBookmarked": false,
+                                  "isPublic": false,
+                                  "isSubscribed": true,
+                                  "lastSeen": "2017-07-24T23:41:44Z",
+                                  "level": "error",
+                                  "logger": "javascript",
+                                  "metadata": Object {
+                                    "type": "TypeError",
+                                    "value": "Cannot read property 'length' of undefined",
+                                  },
+                                  "numComments": 0,
+                                  "permalink": "http://localhost:8000/sentry/internal/issues/271/",
+                                  "project": Object {
+                                    "name": "Internal",
+                                    "slug": "internal",
+                                  },
+                                  "shareId": "312e323731",
+                                  "shortId": "INTERNAL-4G",
+                                  "status": "resolved",
+                                  "statusDetails": Object {},
+                                  "subscriptionDetails": null,
+                                  "title": "TypeError: Cannot read property 'length' of undefined",
+                                  "type": "error",
+                                  "userCount": 3,
+                                }
+                              }
+                              includeLink={true}
+                              location={
+                                Object {
+                                  "query": Object {},
+                                }
+                              }
+                              params={
+                                Object {
+                                  "groupId": "group-id",
+                                  "orgId": "org-slug",
+                                  "projectId": "project-slug",
+                                }
+                              }
+                              router={
+                                Object {
+                                  "createHref": [MockFunction] {
+                                    "calls": Array [
+                                      Array [
+                                        Object {
+                                          "pathname": "/org-slug/project-slug/issues/271/",
+                                          "search": "",
+                                        },
+                                      ],
+                                      Array [
+                                        Object {
+                                          "pathname": "/org-slug/project-slug/",
+                                          "query": Object {
+                                            "query": "logger:javascript",
+                                          },
+                                        },
+                                      ],
+                                      Array [
+                                        Object {
+                                          "pathname": "/org-slug/project-slug/issues/271/",
+                                          "search": "",
+                                        },
+                                      ],
+                                      Array [
+                                        Object {
+                                          "pathname": "/org-slug/project-slug/",
+                                          "query": Object {
+                                            "query": "logger:javascript",
+                                          },
+                                        },
+                                      ],
+                                    ],
+                                    "results": Array [
                                       Object {
-                                        "textDecoration": "line-through",
-                                      }
-                                    }
-                                    to={
+                                        "isThrow": false,
+                                        "value": undefined,
+                                      },
                                       Object {
-                                        "pathname": "/org-slug/project-slug/issues/271/",
-                                        "search": "",
-                                      }
-                                    }
+                                        "isThrow": false,
+                                        "value": undefined,
+                                      },
+                                      Object {
+                                        "isThrow": false,
+                                        "value": undefined,
+                                      },
+                                      Object {
+                                        "isThrow": false,
+                                        "value": undefined,
+                                      },
+                                    ],
+                                  },
+                                  "go": [MockFunction],
+                                  "goBack": [MockFunction],
+                                  "goForward": [MockFunction],
+                                  "isActive": [MockFunction],
+                                  "listen": [MockFunction],
+                                  "location": Object {
+                                    "query": Object {},
+                                  },
+                                  "params": Object {
+                                    "groupId": "group-id",
+                                    "orgId": "org-slug",
+                                    "projectId": "project-slug",
+                                  },
+                                  "push": [MockFunction],
+                                  "replace": [MockFunction],
+                                  "setRouteLeaveHook": [MockFunction],
+                                }
+                              }
+                            >
+                              <div
+                                className="event-issue-header"
+                              >
+                                <Title>
+                                  <div
+                                    className="css-leroxf-Title-truncateStyles eex8od0"
                                   >
-                                    <Link
-                                      onlyActiveOnIndex={false}
+                                    <ProjectLink
                                       style={
                                         Object {
                                           "textDecoration": "line-through",
@@ -728,74 +831,161 @@ exports[`Issues Similar View renders with mocked data 1`] = `
                                         }
                                       }
                                     >
-                                      <a
-                                        onClick={[Function]}
+                                      <Link
+                                        onlyActiveOnIndex={false}
                                         style={
                                           Object {
                                             "textDecoration": "line-through",
                                           }
                                         }
+                                        to={
+                                          Object {
+                                            "pathname": "/org-slug/project-slug/issues/271/",
+                                            "search": "",
+                                          }
+                                        }
                                       >
-                                        <Tooltip
-                                          title="Error level: Error"
+                                        <a
+                                          onClick={[Function]}
+                                          style={
+                                            Object {
+                                              "textDecoration": "line-through",
+                                            }
+                                          }
                                         >
-                                          <GroupLevel
-                                            className="tip"
-                                            level="error"
+                                          <Tooltip
                                             title="Error level: Error"
                                           >
-                                            <div
-                                              className="tip css-hpn2f3-GroupLevel eex8od5"
+                                            <GroupLevel
+                                              className="tip"
+                                              level="error"
                                               title="Error level: Error"
-                                            />
-                                          </GroupLevel>
-                                        </Tooltip>
-                                        <EventOrGroupTitle
-                                          data={
-                                            Object {
-                                              "annotations": Array [],
-                                              "assignedTo": null,
-                                              "count": "90",
-                                              "culprit": "length(app/views/groupSimilar/groupSimilarView)",
-                                              "firstSeen": "2017-07-10T18:32:43Z",
-                                              "hasSeen": false,
-                                              "id": "271",
-                                              "isBookmarked": false,
-                                              "isPublic": false,
-                                              "isSubscribed": true,
-                                              "lastSeen": "2017-07-24T23:41:44Z",
-                                              "level": "error",
-                                              "logger": "javascript",
-                                              "metadata": Object {
-                                                "type": "TypeError",
-                                                "value": "Cannot read property 'length' of undefined",
-                                              },
-                                              "numComments": 0,
-                                              "permalink": "http://localhost:8000/sentry/internal/issues/271/",
-                                              "project": Object {
-                                                "name": "Internal",
-                                                "slug": "internal",
-                                              },
-                                              "shareId": "312e323731",
-                                              "shortId": "INTERNAL-4G",
-                                              "status": "resolved",
-                                              "statusDetails": Object {},
-                                              "subscriptionDetails": null,
-                                              "title": "TypeError: Cannot read property 'length' of undefined",
-                                              "type": "error",
-                                              "userCount": 3,
+                                            >
+                                              <div
+                                                className="tip css-hpn2f3-GroupLevel eex8od5"
+                                                title="Error level: Error"
+                                              />
+                                            </GroupLevel>
+                                          </Tooltip>
+                                          <EventOrGroupTitle
+                                            data={
+                                              Object {
+                                                "annotations": Array [],
+                                                "assignedTo": null,
+                                                "count": "90",
+                                                "culprit": "length(app/views/groupSimilar/groupSimilarView)",
+                                                "firstSeen": "2017-07-10T18:32:43Z",
+                                                "hasSeen": false,
+                                                "id": "271",
+                                                "isBookmarked": false,
+                                                "isPublic": false,
+                                                "isSubscribed": true,
+                                                "lastSeen": "2017-07-24T23:41:44Z",
+                                                "level": "error",
+                                                "logger": "javascript",
+                                                "metadata": Object {
+                                                  "type": "TypeError",
+                                                  "value": "Cannot read property 'length' of undefined",
+                                                },
+                                                "numComments": 0,
+                                                "permalink": "http://localhost:8000/sentry/internal/issues/271/",
+                                                "project": Object {
+                                                  "name": "Internal",
+                                                  "slug": "internal",
+                                                },
+                                                "shareId": "312e323731",
+                                                "shortId": "INTERNAL-4G",
+                                                "status": "resolved",
+                                                "statusDetails": Object {},
+                                                "subscriptionDetails": null,
+                                                "title": "TypeError: Cannot read property 'length' of undefined",
+                                                "type": "error",
+                                                "userCount": 3,
+                                              }
                                             }
-                                          }
-                                          includeLink={true}
-                                          orgId="org-slug"
-                                          projectId="project-slug"
-                                          style={
-                                            Object {
-                                              "fontWeight": 600,
+                                            includeLink={true}
+                                            location={
+                                              Object {
+                                                "query": Object {},
+                                              }
+                                            }
+                                            params={
+                                              Object {
+                                                "groupId": "group-id",
+                                                "orgId": "org-slug",
+                                                "projectId": "project-slug",
+                                              }
+                                            }
+                                            router={
+                                              Object {
+                                                "createHref": [MockFunction] {
+                                                  "calls": Array [
+                                                    Array [
+                                                      Object {
+                                                        "pathname": "/org-slug/project-slug/issues/271/",
+                                                        "search": "",
+                                                      },
+                                                    ],
+                                                    Array [
+                                                      Object {
+                                                        "pathname": "/org-slug/project-slug/",
+                                                        "query": Object {
+                                                          "query": "logger:javascript",
+                                                        },
+                                                      },
+                                                    ],
+                                                    Array [
+                                                      Object {
+                                                        "pathname": "/org-slug/project-slug/issues/271/",
+                                                        "search": "",
+                                                      },
+                                                    ],
+                                                    Array [
+                                                      Object {
+                                                        "pathname": "/org-slug/project-slug/",
+                                                        "query": Object {
+                                                          "query": "logger:javascript",
+                                                        },
+                                                      },
+                                                    ],
+                                                  ],
+                                                  "results": Array [
+                                                    Object {
+                                                      "isThrow": false,
+                                                      "value": undefined,
+                                                    },
+                                                    Object {
+                                                      "isThrow": false,
+                                                      "value": undefined,
+                                                    },
+                                                    Object {
+                                                      "isThrow": false,
+                                                      "value": undefined,
+                                                    },
+                                                    Object {
+                                                      "isThrow": false,
+                                                      "value": undefined,
+                                                    },
+                                                  ],
+                                                },
+                                                "go": [MockFunction],
+                                                "goBack": [MockFunction],
+                                                "goForward": [MockFunction],
+                                                "isActive": [MockFunction],
+                                                "listen": [MockFunction],
+                                                "location": Object {
+                                                  "query": Object {},
+                                                },
+                                                "params": Object {
+                                                  "groupId": "group-id",
+                                                  "orgId": "org-slug",
+                                                  "projectId": "project-slug",
+                                                },
+                                                "push": [MockFunction],
+                                                "replace": [MockFunction],
+                                                "setRouteLeaveHook": [MockFunction],
+                                              }
                                             }
-                                          }
-                                        >
-                                          <span
                                             style={
                                               Object {
                                                 "fontWeight": 600,
@@ -805,34 +995,42 @@ exports[`Issues Similar View renders with mocked data 1`] = `
                                             <span
                                               style={
                                                 Object {
-                                                  "marginRight": 10,
+                                                  "fontWeight": 600,
                                                 }
                                               }
                                             >
-                                              TypeError
+                                              <span
+                                                style={
+                                                  Object {
+                                                    "marginRight": 10,
+                                                  }
+                                                }
+                                              >
+                                                TypeError
+                                              </span>
+                                              <em
+                                                title="length(app/views/groupSimilar/groupSimilarView)"
+                                              >
+                                                length(app/views/groupSimilar/groupSimilarView)
+                                              </em>
+                                              <br />
                                             </span>
-                                            <em
-                                              title="length(app/views/groupSimilar/groupSimilarView)"
-                                            >
-                                              length(app/views/groupSimilar/groupSimilarView)
-                                            </em>
-                                            <br />
-                                          </span>
-                                        </EventOrGroupTitle>
-                                      </a>
-                                    </Link>
-                                  </ProjectLink>
-                                </div>
-                              </Title>
-                              <Message>
-                                <div
-                                  className="css-y5cfdn-Message-truncateStyles eex8od2"
-                                >
-                                  Cannot read property 'length' of undefined
-                                </div>
-                              </Message>
-                            </div>
-                          </EventOrGroupHeader>
+                                          </EventOrGroupTitle>
+                                        </a>
+                                      </Link>
+                                    </ProjectLink>
+                                  </div>
+                                </Title>
+                                <Message>
+                                  <div
+                                    className="css-y5cfdn-Message-truncateStyles eex8od2"
+                                  >
+                                    Cannot read property 'length' of undefined
+                                  </div>
+                                </Message>
+                              </div>
+                            </EventOrGroupHeader>
+                          </withRouter(EventOrGroupHeader)>
                           <EventOrGroupExtraDetails
                             annotations={Array []}
                             assignedTo={null}
diff --git a/tests/js/spec/views/groupDetails/groupSimilarView.spec.jsx b/tests/js/spec/views/groupDetails/groupSimilar.spec.jsx
similarity index 90%
rename from tests/js/spec/views/groupDetails/groupSimilarView.spec.jsx
rename to tests/js/spec/views/groupDetails/groupSimilar.spec.jsx
index e080a3e41c..21915d1987 100644
--- a/tests/js/spec/views/groupDetails/groupSimilarView.spec.jsx
+++ b/tests/js/spec/views/groupDetails/groupSimilar.spec.jsx
@@ -1,10 +1,9 @@
-/* eslint-env jest */
 import {browserHistory} from 'react-router';
 import React from 'react';
 
 import {mount, shallow} from 'enzyme';
-import GroupSimilarView from 'app/views/groupDetails/project/groupSimilar';
 
+import GroupSimilarView from 'app/views/groupDetails/project/groupSimilar';
 import issues from 'app-test/mocks/issues';
 
 jest.mock('app/mixins/projectState', () => {
@@ -14,6 +13,15 @@ jest.mock('app/mixins/projectState', () => {
   };
 });
 
+const routerContext = TestStubs.routerContext([
+  {
+    router: {
+      ...TestStubs.router(),
+      params: {orgId: 'org-slug', projectId: 'project-slug', groupId: 'group-id'},
+    },
+  },
+]);
+
 const scores = [
   {'exception:stacktrace:pairs': 0.375},
   {'exception:stacktrace:pairs': 0.01264},
@@ -39,7 +47,8 @@ describe('Issues Similar View', function() {
 
   it('renders initially with loading component', function() {
     let component = shallow(
-      <GroupSimilarView params={{groupId: 'group-id'}} location={{}} />
+      <GroupSimilarView params={{groupId: 'group-id'}} location={{}} />,
+      routerContext
     );
 
     expect(component).toMatchSnapshot();
@@ -51,7 +60,7 @@ describe('Issues Similar View', function() {
         params={{orgId: 'org-slug', projectId: 'project-slug', groupId: 'group-id'}}
         location={{}}
       />,
-      TestStubs.routerContext()
+      routerContext
     );
 
     await tick();
@@ -67,7 +76,7 @@ describe('Issues Similar View', function() {
         params={{orgId: 'org-slug', projectId: 'project-slug', groupId: 'group-id'}}
         location={{}}
       />,
-      TestStubs.routerContext()
+      routerContext
     );
     let merge = MockApiClient.addMockResponse({
       method: 'PUT',
