commit 444c405473d868f64c5065c070b4b5ae4e6f3e8e
Author: Billy Vong <billyvg@users.noreply.github.com>
Date:   Mon Jan 7 13:08:18 2019 -0800

    feat(dashboard): Initial dashboard layout (#11375)
    
    Adds the initial dashboard layout + route + sidebar menu item

diff --git a/src/sentry/static/sentry/app/components/sidebar/index.jsx b/src/sentry/static/sentry/app/components/sidebar/index.jsx
index bc1d37b99e..528ac6e12d 100644
--- a/src/sentry/static/sentry/app/components/sidebar/index.jsx
+++ b/src/sentry/static/sentry/app/components/sidebar/index.jsx
@@ -204,6 +204,17 @@ class Sidebar extends React.Component {
           {hasOrganization && (
             <React.Fragment>
               <SidebarSection>
+                <Feature features={['sentry10']}>
+                  <SidebarItem
+                    {...sidebarItemProps}
+                    index
+                    onClick={this.hidePanel}
+                    icon={<InlineSvg src="icon-health" />}
+                    label={t('Dashboard')}
+                    to={`/organizations/${organization.slug}/dashboards/`}
+                  />
+                </Feature>
+
                 <SidebarItem
                   {...sidebarItemProps}
                   index
diff --git a/src/sentry/static/sentry/app/routes.jsx b/src/sentry/static/sentry/app/routes.jsx
index 567b643949..78a929ff25 100644
--- a/src/sentry/static/sentry/app/routes.jsx
+++ b/src/sentry/static/sentry/app/routes.jsx
@@ -754,6 +754,20 @@ function routes() {
       <Route path="/:orgId/" component={errorHandler(OrganizationDetails)}>
         <Route component={errorHandler(OrganizationRoot)}>
           <IndexRoute component={errorHandler(OrganizationDashboard)} />
+
+          <Route
+            path="/organizations/:orgId/dashboards/"
+            componentPromise={() =>
+              import(/* webpackChunkName: "OrganizationDashboardContainer" */ './views/organizationDashboard')}
+            component={errorHandler(LazyLoad)}
+          >
+            <IndexRoute
+              componentPromise={() =>
+                import(/* webpackChunkName: "OverviewDashboard" */ './views/organizationDashboard/overviewDashboard')}
+              component={errorHandler(LazyLoad)}
+            />
+          </Route>
+
           <Route
             path="/organizations/:orgId/discover/"
             componentPromise={() =>
diff --git a/src/sentry/static/sentry/app/views/organizationDashboard/dashboard.jsx b/src/sentry/static/sentry/app/views/organizationDashboard/dashboard.jsx
new file mode 100644
index 0000000000..45b877c163
--- /dev/null
+++ b/src/sentry/static/sentry/app/views/organizationDashboard/dashboard.jsx
@@ -0,0 +1,47 @@
+import PropTypes from 'prop-types';
+import React from 'react';
+import styled from 'react-emotion';
+
+import {t} from 'app/locale';
+import AsyncView from 'app/views/asyncView';
+import SentryTypes from 'app/sentryTypes';
+import space from 'app/styles/space';
+
+class Dashboard extends AsyncView {
+  static propTypes = {
+    widgets: PropTypes.arrayOf(SentryTypes.Widget),
+  };
+
+  getTitle() {
+    return t('Dashboard');
+  }
+
+  getEndpoints() {
+    return [];
+  }
+
+  render() {
+    const {widgets} = this.props;
+
+    return (
+      <Widgets>
+        {widgets.map((widget, i) => (
+          <WidgetWrapper key={i}>
+            <div />
+          </WidgetWrapper>
+        ))}
+      </Widgets>
+    );
+  }
+}
+export default Dashboard;
+export {Dashboard};
+
+const Widgets = styled('div')`
+  display: flex;
+  flex-wrap: wrap;
+`;
+const WidgetWrapper = styled('div')`
+  width: 50%;
+  padding: ${space(1)};
+`;
diff --git a/src/sentry/static/sentry/app/views/organizationDashboard/index.jsx b/src/sentry/static/sentry/app/views/organizationDashboard/index.jsx
new file mode 100644
index 0000000000..0ec80761e9
--- /dev/null
+++ b/src/sentry/static/sentry/app/views/organizationDashboard/index.jsx
@@ -0,0 +1 @@
+export {default} from './organizationDashboardContainer';
diff --git a/src/sentry/static/sentry/app/views/organizationDashboard/organizationDashboardContainer.jsx b/src/sentry/static/sentry/app/views/organizationDashboard/organizationDashboardContainer.jsx
new file mode 100644
index 0000000000..ec151993c8
--- /dev/null
+++ b/src/sentry/static/sentry/app/views/organizationDashboard/organizationDashboardContainer.jsx
@@ -0,0 +1,38 @@
+import {withRouter} from 'react-router';
+import React from 'react';
+
+import {HeaderTitle, PageContent, PageHeader} from 'app/styles/organization';
+import {t} from 'app/locale';
+import BetaTag from 'app/components/betaTag';
+import Feature from 'app/components/acl/feature';
+import GlobalSelectionHeader from 'app/components/organizations/globalSelectionHeader';
+import SentryTypes from 'app/sentryTypes';
+import withOrganization from 'app/utils/withOrganization';
+
+class OrganizationDashboardContainer extends React.Component {
+  static propTypes = {
+    organization: SentryTypes.Organization,
+  };
+
+  render() {
+    const {organization, children} = this.props;
+
+    return (
+      <Feature features={['sentry10']} renderDisabled>
+        <GlobalSelectionHeader organization={organization} />
+
+        <PageContent>
+          <PageHeader>
+            <HeaderTitle>
+              {t('Dashboard')} <BetaTag />
+            </HeaderTitle>
+          </PageHeader>
+
+          {children}
+        </PageContent>
+      </Feature>
+    );
+  }
+}
+export default withRouter(withOrganization(OrganizationDashboardContainer));
+export {OrganizationDashboardContainer};
diff --git a/src/sentry/static/sentry/app/views/organizationDashboard/overviewDashboard.jsx b/src/sentry/static/sentry/app/views/organizationDashboard/overviewDashboard.jsx
new file mode 100644
index 0000000000..b96278f888
--- /dev/null
+++ b/src/sentry/static/sentry/app/views/organizationDashboard/overviewDashboard.jsx
@@ -0,0 +1,10 @@
+import React from 'react';
+
+import Dashboard from 'app/views/organizationDashboard/dashboard';
+
+class OverviewDashboard extends React.Component {
+  render() {
+    return <Dashboard widgets={[]} />;
+  }
+}
+export default OverviewDashboard;
