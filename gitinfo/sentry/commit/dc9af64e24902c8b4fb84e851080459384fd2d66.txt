commit dc9af64e24902c8b4fb84e851080459384fd2d66
Author: Matt Robenolt <matt@ydekproductions.com>
Date:   Fri Apr 29 15:09:46 2016 -0700

    Add CLI tooling to fetch files from filestore

diff --git a/src/sentry/runner/__init__.py b/src/sentry/runner/__init__.py
index 2ce5513e36..c0ee46431d 100755
--- a/src/sentry/runner/__init__.py
+++ b/src/sentry/runner/__init__.py
@@ -53,6 +53,7 @@ map(lambda cmd: cli.add_command(import_string(cmd)), (
     'sentry.runner.commands.createuser.createuser',
     'sentry.runner.commands.devserver.devserver',
     'sentry.runner.commands.django.django',
+    'sentry.runner.commands.files.files',
     'sentry.runner.commands.help.help',
     'sentry.runner.commands.init.init',
     'sentry.runner.commands.plugins.plugins',
diff --git a/src/sentry/runner/commands/files.py b/src/sentry/runner/commands/files.py
new file mode 100644
index 0000000000..de5b195151
--- /dev/null
+++ b/src/sentry/runner/commands/files.py
@@ -0,0 +1,61 @@
+from __future__ import absolute_import, print_function
+
+import click
+from sentry.runner.decorators import configuration
+
+
+@click.group()
+def files():
+    "Manage files from filestore."
+
+
+@files.command()
+@click.argument('id', type=click.INT, metavar='FILE_ID')
+@configuration
+def get(id):
+    "Fetch a file's contents by id."
+    from sentry.models import File
+
+    try:
+        file = File.objects.get(id=id)
+    except File.DoesNotExist:
+        raise click.ClickException('File %d does not exist.' % id)
+
+    stdout = click.get_binary_stream('stdout')
+
+    with file.getfile() as fp:
+        for chunk in fp.chunks():
+            stdout.write(chunk)
+
+
+@files.command()
+@click.argument('id', type=click.INT, metavar='FILE_ID')
+@click.option('--format', default='json', type=click.Choice(('json', 'yaml')))
+@configuration
+def info(id, format):
+    "Show a file's metadata by id."
+    from sentry.models import File
+
+    try:
+        file = File.objects.get(id=id)
+    except File.DoesNotExist:
+        raise click.ClickException('File %d does not exist.' % id)
+
+    obj = {
+        'id': file.id,
+        'name': file.name,
+        'headers': file.headers,
+        'size': file.size,
+        'sha1': file.checksum,
+        'dateCreated': file.timestamp,
+    }
+
+    stdout = click.get_text_stream('stdout')
+
+    if format == 'yaml':
+        from sentry.utils import yaml
+        yaml.safe_dump(obj, stdout)
+    elif format == 'json':
+        from sentry.utils import json
+        json.dump(obj, stdout)
+        stdout.write('\n')
diff --git a/src/sentry/utils/json.py b/src/sentry/utils/json.py
index 8845193a86..82f7f534f3 100644
--- a/src/sentry/utils/json.py
+++ b/src/sentry/utils/json.py
@@ -63,6 +63,11 @@ _default_escaped_encoder = JSONEncoderForHTML(
 )
 
 
+def dump(value, fp, **kwargs):
+    for chunk in _default_encoder.iterencode(value):
+        fp.write(chunk)
+
+
 def dumps(value, escape=False, **kwargs):
     if escape:
         return _default_escaped_encoder.encode(value)
