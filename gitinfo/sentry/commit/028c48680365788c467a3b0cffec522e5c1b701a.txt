commit 028c48680365788c467a3b0cffec522e5c1b701a
Author: Mark Story <mark@sentry.io>
Date:   Wed Sep 5 16:41:05 2018 -0400

    feat(auth) Convert logout to a POST
    
    Use POST to do logout actions. Using a POST prevents CSRF and image
    based logouts. The GET action now returns a form that can be submitted.
    This form will generally not be seen but helps prevent users from
    getting stranded mid-deploy or if they have an older version of the
    react app.

diff --git a/src/sentry/templates/sentry/logout.html b/src/sentry/templates/sentry/logout.html
new file mode 100644
index 0000000000..5ef92a0fc1
--- /dev/null
+++ b/src/sentry/templates/sentry/logout.html
@@ -0,0 +1,16 @@
+{% extends "sentry/bases/auth.html" %}
+
+{% load crispy_forms_tags %}
+{% load i18n %}
+
+{% block title %}{% trans "Logout" %} | {{ block.super }}{% endblock %}
+
+{% block auth_main %}
+<h3>Sign out</h3>
+<form class="form-stacked" method="post">
+    {% csrf_token %}
+    <div class="p-b-2 m-t-1 align-center">
+        <button class="btn btn-primary">{% trans 'Sign out' %}</button>
+    </div>
+</form>
+{% endblock %}
diff --git a/src/sentry/web/frontend/auth_logout.py b/src/sentry/web/frontend/auth_logout.py
index efc1955b91..7b1983133e 100644
--- a/src/sentry/web/frontend/auth_logout.py
+++ b/src/sentry/web/frontend/auth_logout.py
@@ -11,10 +11,16 @@ from sentry.utils import auth
 class AuthLogoutView(BaseView):
     auth_required = False
 
-    def handle(self, request):
+    def redirect(self, request):
         next = request.GET.get(REDIRECT_FIELD_NAME, '')
         if not is_safe_url(next, host=request.get_host()):
             next = auth.get_login_url()
+        return super(AuthLogoutView, self).redirect(next)
+
+    def get(self, request):
+        return self.respond('sentry/logout.html')
+
+    def post(self, request):
         logout(request)
         request.user = AnonymousUser()
-        return self.redirect(next)
+        return self.redirect(request)
diff --git a/tests/sentry/web/frontend/test_auth_logout.py b/tests/sentry/web/frontend/test_auth_logout.py
index f6862d3dfb..4dd053be4b 100644
--- a/tests/sentry/web/frontend/test_auth_logout.py
+++ b/tests/sentry/web/frontend/test_auth_logout.py
@@ -15,12 +15,12 @@ class AuthLogoutTest(TestCase):
     def test_logs_user_out(self):
         self.login_as(self.user)
 
-        resp = self.client.get(self.path)
+        resp = self.client.post(self.path)
         assert resp.status_code == 302
         assert list(self.client.session.keys()) == []
 
     def test_same_behavior_with_anonymous_user(self):
-        resp = self.client.get(self.path)
+        resp = self.client.post(self.path)
         assert resp.status_code == 302
         assert list(self.client.session.keys()) == []
 
@@ -28,15 +28,15 @@ class AuthLogoutTest(TestCase):
         self.login_as(self.user)
 
         next = '/welcome'
-        resp = self.client.get(self.path + '?next=' + next)
+        resp = self.client.post(self.path + '?next=' + next)
         assert resp.status_code == 302
         assert resp.get('Location', '').endswith(next)
 
     def test_doesnt_redirect_to_external_next_url(self):
         next = "http://example.com"
-        self.client.get(self.path + '?next=' + quote(next))
+        self.client.post(self.path + '?next=' + quote(next))
 
-        resp = self.client.get(self.path)
+        resp = self.client.post(self.path)
         assert resp.status_code == 302
         assert next not in resp['Location']
         assert resp['Location'] == 'http://testserver/auth/login/'
