commit 93b87bf778ab3417879362400aceebcfaddc6107
Author: Brett Hoerner <brett@bretthoerner.com>
Date:   Tue Sep 12 15:47:31 2017 -0500

    db: Drop ForeignKeys from EventUser (#6071)

diff --git a/src/sentry/api/endpoints/organization_user_issues.py b/src/sentry/api/endpoints/organization_user_issues.py
index d9cbde30d1..a32adacfed 100644
--- a/src/sentry/api/endpoints/organization_user_issues.py
+++ b/src/sentry/api/endpoints/organization_user_issues.py
@@ -8,27 +8,30 @@ from six.moves import reduce
 from sentry.api.bases.organization import OrganizationEndpoint
 from sentry.api.serializers import serialize
 from sentry.api.serializers.models.group import TagBasedStreamGroupSerializer
-from sentry.models import (EventUser, Group, GroupTagValue)
+from sentry.models import (EventUser, Group, GroupTagValue, Project)
 
 
 class OrganizationUserIssuesEndpoint(OrganizationEndpoint):
     def get(self, request, organization, user_id):
         limit = request.GET.get('limit', 100)
 
-        euser = EventUser.objects.select_related('project__team').get(
-            project__organization=organization,
+        project_ids = organization.project_set.values_list('id', flat=True)
+        euser = EventUser.objects.get(
+            project_id__in=project_ids,
             id=user_id,
         )
         # they have organization access but not to this project, thus
         # they shouldn't be able to see this user
-        if not request.access.has_team_access(euser.project.team):
+        if not request.access.has_team_access(
+                Project.objects.select_related('team').get(pk=euser.project_id).team):
             return Response([])
 
         other_eusers = euser.find_similar_users(request.user)
         event_users = [euser] + list(other_eusers)
 
         if event_users:
-            tag_filters = [Q(value=eu.tag_value, project_id=eu.project_id) for eu in event_users]
+            tag_filters = [Q(value=eu.tag_value, project_id=eu.project_id)
+                           for eu in event_users]
             tags = GroupTagValue.objects.filter(
                 reduce(or_, tag_filters),
                 key='sentry:user',
diff --git a/src/sentry/api/endpoints/project_user_details.py b/src/sentry/api/endpoints/project_user_details.py
index 953570894a..236c1aa2bb 100644
--- a/src/sentry/api/endpoints/project_user_details.py
+++ b/src/sentry/api/endpoints/project_user_details.py
@@ -13,7 +13,7 @@ class ProjectUserDetailsEndpoint(ProjectEndpoint):
 
     def get(self, request, project, user_hash):
         euser = EventUser.objects.get(
-            project=project,
+            project_id=project.id,
             hash=user_hash,
         )
         return Response(serialize(euser, request.user))
diff --git a/src/sentry/api/endpoints/project_user_reports.py b/src/sentry/api/endpoints/project_user_reports.py
index d3c9ec7a24..9fd5184b74 100644
--- a/src/sentry/api/endpoints/project_user_reports.py
+++ b/src/sentry/api/endpoints/project_user_reports.py
@@ -149,7 +149,7 @@ class ProjectUserReportsEndpoint(ProjectEndpoint):
                 return None
             try:
                 return EventUser.objects.filter(
-                    project=report.project_id,
+                    project_id=report.project_id,
                     email=report.email,
                 )[0]
             except IndexError:
diff --git a/src/sentry/api/endpoints/project_users.py b/src/sentry/api/endpoints/project_users.py
index c317788590..a1009f33c6 100644
--- a/src/sentry/api/endpoints/project_users.py
+++ b/src/sentry/api/endpoints/project_users.py
@@ -29,7 +29,7 @@ class ProjectUsersEndpoint(ProjectEndpoint):
                               For example, ``query=email:foo@example.com``
         """
         queryset = EventUser.objects.filter(
-            project=project,
+            project_id=project.id,
         )
         if request.GET.get('query'):
             pieces = request.GET['query'].strip().split(':', 1)
diff --git a/src/sentry/event_manager.py b/src/sentry/event_manager.py
index 24ff2bc7a6..dc26fc4138 100644
--- a/src/sentry/event_manager.py
+++ b/src/sentry/event_manager.py
@@ -750,7 +750,7 @@ class EventManager(object):
             return
 
         euser = EventUser(
-            project=project,
+            project_id=project.id,
             ident=user_data.get('id'),
             email=user_data.get('email'),
             username=user_data.get('username'),
@@ -773,7 +773,7 @@ class EventManager(object):
             except IntegrityError:
                 try:
                     euser = EventUser.objects.get(
-                        project=project,
+                        project_id=project.id,
                         hash=euser.hash,
                     )
                 except EventUser.DoesNotExist:
diff --git a/src/sentry/models/eventuser.py b/src/sentry/models/eventuser.py
index d27f6d3601..f5ac825694 100644
--- a/src/sentry/models/eventuser.py
+++ b/src/sentry/models/eventuser.py
@@ -5,7 +5,7 @@ from django.utils import timezone
 from operator import or_
 from six.moves import reduce
 
-from sentry.db.models import FlexibleForeignKey, Model, sane_repr
+from sentry.db.models import BoundedPositiveIntegerField, Model, sane_repr
 from sentry.utils.hashlib import md5_text
 from sentry.constants import MAX_EMAIL_FIELD_LENGTH
 
@@ -20,7 +20,7 @@ KEYWORD_MAP = {
 class EventUser(Model):
     __core__ = False
 
-    project = FlexibleForeignKey('sentry.Project')
+    project_id = BoundedPositiveIntegerField(db_index=True)
     hash = models.CharField(max_length=32)
     ident = models.CharField(max_length=128, null=True)
     email = models.EmailField(null=True, max_length=MAX_EMAIL_FIELD_LENGTH)
@@ -32,12 +32,15 @@ class EventUser(Model):
     class Meta:
         app_label = 'sentry'
         db_table = 'sentry_eventuser'
-        unique_together = (('project', 'ident'), ('project', 'hash'))
+        unique_together = (('project_id', 'ident'), ('project_id', 'hash'))
         index_together = (
-            ('project', 'email'), ('project', 'username'), ('project', 'ip_address'),
+            ('project_id', 'email'),
+            ('project_id', 'username'),
+            ('project_id', 'ip_address'),
         )
 
-    __repr__ = sane_repr('project_id', 'ident', 'email', 'username', 'ip_address')
+    __repr__ = sane_repr('project_id', 'ident', 'email',
+                         'username', 'ip_address')
 
     @classmethod
     def attr_from_keyword(cls, keyword):
@@ -52,7 +55,7 @@ class EventUser(Model):
         """
         hashes = [md5_text(v.split(':', 1)[-1]).hexdigest() for v in values]
         return {e.tag_value: e for e in cls.objects.filter(
-            project=project_id,
+            project_id=project_id,
             hash__in=hashes,
         )}
 
@@ -99,7 +102,7 @@ class EventUser(Model):
             Project.objects.filter(
                 team__in=OrganizationMemberTeam.objects.filter(
                     organizationmember__user=user,
-                    organizationmember__organization=self.project.organization,
+                    organizationmember__organization__project=self.project_id,
                     is_active=True,
                 ).values('team'),
             ).values_list('id', flat=True)[:1000]
@@ -116,5 +119,5 @@ class EventUser(Model):
             return type(self).objects.none()
         return type(self).objects.exclude(id=self.id).filter(
             reduce(or_, filters),
-            project__in=project_ids,
+            project_id__in=project_ids,
         )
diff --git a/src/sentry/search/utils.py b/src/sentry/search/utils.py
index 51399fa5cc..611d89c626 100644
--- a/src/sentry/search/utils.py
+++ b/src/sentry/search/utils.py
@@ -37,7 +37,8 @@ def get_user_tag(project, key, value):
     # TODO(dcramer): do something with case of multiple matches
     try:
         lookup = EventUser.attr_from_keyword(key)
-        euser = EventUser.objects.filter(project=project, **{lookup: value})[0]
+        euser = EventUser.objects.filter(
+            project_id=project.id, **{lookup: value})[0]
     except (KeyError, IndexError):
         return u'{}:{}'.format(key, value)
     except DataError:
diff --git a/src/sentry/tasks/post_process.py b/src/sentry/tasks/post_process.py
index c03b7b3370..64ce1705f6 100644
--- a/src/sentry/tasks/post_process.py
+++ b/src/sentry/tasks/post_process.py
@@ -147,7 +147,7 @@ def record_affected_user(event, **kwargs):
         return
 
     euser = EventUser(
-        project=event.project,
+        project_id=event.project_id,
         ident=user_data.get('id'),
         email=user_data.get('email'),
         username=user_data.get('username'),
diff --git a/tests/sentry/api/endpoints/test_organization_user_issues.py b/tests/sentry/api/endpoints/test_organization_user_issues.py
index 3ee9020398..cf78df5f8d 100644
--- a/tests/sentry/api/endpoints/test_organization_user_issues.py
+++ b/tests/sentry/api/endpoints/test_organization_user_issues.py
@@ -28,9 +28,9 @@ class OrganizationUserIssuesTest(APITestCase):
             project=self.project2,
         )
 
-        self.euser1 = EventUser.objects.create(email='foo@example.com', project=self.project1)
-        self.euser2 = EventUser.objects.create(email='bar@example.com', project=self.project1)
-        self.euser3 = EventUser.objects.create(email='foo@example.com', project=self.project2)
+        self.euser1 = EventUser.objects.create(email='foo@example.com', project_id=self.project1.id)
+        self.euser2 = EventUser.objects.create(email='bar@example.com', project_id=self.project1.id)
+        self.euser3 = EventUser.objects.create(email='foo@example.com', project_id=self.project2.id)
 
         GroupTagValue.objects.create(
             key='sentry:user',
diff --git a/tests/sentry/api/endpoints/test_organization_user_issues_search.py b/tests/sentry/api/endpoints/test_organization_user_issues_search.py
index 4708d51a77..7e376f017e 100644
--- a/tests/sentry/api/endpoints/test_organization_user_issues_search.py
+++ b/tests/sentry/api/endpoints/test_organization_user_issues_search.py
@@ -25,9 +25,9 @@ class OrganizationUserIssuesSearchTest(APITestCase):
         )
         group2 = self.create_group(project=self.project2)
 
-        EventUser.objects.create(email='foo@example.com', project=self.project1)
-        EventUser.objects.create(email='bar@example.com', project=self.project1)
-        EventUser.objects.create(email='foo@example.com', project=self.project2)
+        EventUser.objects.create(email='foo@example.com', project_id=self.project1.id)
+        EventUser.objects.create(email='bar@example.com', project_id=self.project1.id)
+        EventUser.objects.create(email='foo@example.com', project_id=self.project2.id)
 
         GroupTagValue.objects.create(
             key='sentry:user',
diff --git a/tests/sentry/api/endpoints/test_project_user_details.py b/tests/sentry/api/endpoints/test_project_user_details.py
index 6be622fc4a..29c0ce2b72 100644
--- a/tests/sentry/api/endpoints/test_project_user_details.py
+++ b/tests/sentry/api/endpoints/test_project_user_details.py
@@ -16,7 +16,7 @@ class ProjectUserDetailsTest(APITestCase):
         self.team = self.create_team(organization=self.org)
         self.project = self.create_project(organization=self.org, team=self.team)
         self.create_member(user=self.user, organization=self.org, teams=[self.project.team])
-        self.euser = EventUser.objects.create(email='foo@example.com', project=self.project)
+        self.euser = EventUser.objects.create(email='foo@example.com', project_id=self.project.id)
 
         self.login_as(user=self.user)
 
diff --git a/tests/sentry/api/endpoints/test_project_user_stats.py b/tests/sentry/api/endpoints/test_project_user_stats.py
index 1d53f9ed21..9399731251 100644
--- a/tests/sentry/api/endpoints/test_project_user_stats.py
+++ b/tests/sentry/api/endpoints/test_project_user_stats.py
@@ -31,8 +31,8 @@ class ProjectUserDetailsTest(APITestCase):
         )
 
     def test_simple(self):
-        euser1 = EventUser.objects.create(email='foo@example.com', project=self.project)
-        euser2 = EventUser.objects.create(email='bar@example.com', project=self.project)
+        euser1 = EventUser.objects.create(email='foo@example.com', project_id=self.project.id)
+        euser2 = EventUser.objects.create(email='bar@example.com', project_id=self.project.id)
         tsdb.record_multi(
             (
                 (tsdb.models.users_affected_by_project, self.project.id, (euser2.tag_value, )),
diff --git a/tests/sentry/api/endpoints/test_project_users.py b/tests/sentry/api/endpoints/test_project_users.py
index 3b187365f4..b69e21ae1a 100644
--- a/tests/sentry/api/endpoints/test_project_users.py
+++ b/tests/sentry/api/endpoints/test_project_users.py
@@ -14,7 +14,7 @@ class ProjectUsersTest(APITestCase):
 
         self.project = self.create_project()
         self.euser1 = EventUser.objects.create(
-            project=self.project,
+            project_id=self.project.id,
             ident='1',
             email='foo@example.com',
             username='foobar',
@@ -22,7 +22,7 @@ class ProjectUsersTest(APITestCase):
         )
 
         self.euser2 = EventUser.objects.create(
-            project=self.project,
+            project_id=self.project.id,
             ident='2',
             email='bar@example.com',
             username='baz',
diff --git a/tests/sentry/api/serializers/test_grouptagvalue.py b/tests/sentry/api/serializers/test_grouptagvalue.py
index c4ffd3dbb2..9ae0eba63f 100644
--- a/tests/sentry/api/serializers/test_grouptagvalue.py
+++ b/tests/sentry/api/serializers/test_grouptagvalue.py
@@ -14,7 +14,7 @@ class GroupTagValueSerializerTest(TestCase):
         user = self.create_user()
         project = self.create_project()
         euser = EventUser.objects.create(
-            project=project,
+            project_id=project.id,
             email='foo@example.com',
         )
         tagvalue = TagValue.objects.create(
diff --git a/tests/sentry/api/serializers/test_tagvalue.py b/tests/sentry/api/serializers/test_tagvalue.py
index 0756812d15..51d711bc21 100644
--- a/tests/sentry/api/serializers/test_tagvalue.py
+++ b/tests/sentry/api/serializers/test_tagvalue.py
@@ -14,7 +14,7 @@ class TagValueSerializerTest(TestCase):
         user = self.create_user()
         project = self.create_project()
         euser = EventUser.objects.create(
-            project=project,
+            project_id=project.id,
             email='foo@example.com',
         )
         tagvalue = TagValue.objects.create(
diff --git a/tests/sentry/search/test_utils.py b/tests/sentry/search/test_utils.py
index 5577e423cc..1b1a9f6b74 100644
--- a/tests/sentry/search/test_utils.py
+++ b/tests/sentry/search/test_utils.py
@@ -335,7 +335,7 @@ class ParseQueryTest(TestCase):
 
     def test_user_lookup_with_dot_query(self):
         euser = EventUser.objects.create(
-            project=self.project,
+            project_id=self.project.id,
             ident='1',
             username='foobar',
         )
@@ -348,7 +348,7 @@ class ParseQueryTest(TestCase):
 
     def test_user_lookup_legacy_syntax(self):
         euser = EventUser.objects.create(
-            project=self.project,
+            project_id=self.project.id,
             ident='1',
             username='foobar',
         )
diff --git a/tests/sentry/test_event_manager.py b/tests/sentry/test_event_manager.py
index 73ba640f49..7d9e093ca2 100644
--- a/tests/sentry/test_event_manager.py
+++ b/tests/sentry/test_event_manager.py
@@ -629,7 +629,7 @@ class EventManagerTest(TransactionTestCase):
         }
 
         euser = EventUser.objects.get(
-            project=self.project,
+            project_id=self.project.id,
             ident='1',
         )
         assert event.get_tag('sentry:user') == euser.tag_value
@@ -656,7 +656,7 @@ class EventManagerTest(TransactionTestCase):
         with self.tasks():
             manager.save(self.project.id)
         euser = EventUser.objects.get(
-            project=self.project,
+            project_id=self.project.id,
         )
         assert euser.username == u'foô'
 
