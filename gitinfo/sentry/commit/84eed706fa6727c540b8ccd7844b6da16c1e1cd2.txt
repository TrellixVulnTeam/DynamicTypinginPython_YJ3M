commit 84eed706fa6727c540b8ccd7844b6da16c1e1cd2
Author: David Cramer <dcramer@gmail.com>
Date:   Tue Mar 3 23:19:17 2015 -0800

    Reimplement routeDidChange hooks

diff --git a/src/sentry/static/sentry/app/views/app.jsx b/src/sentry/static/sentry/app/views/app.jsx
index af58c7124c..44f628b45a 100644
--- a/src/sentry/static/sentry/app/views/app.jsx
+++ b/src/sentry/static/sentry/app/views/app.jsx
@@ -4,7 +4,7 @@ var React = require("react");
 
 var api = require("../api");
 var Alerts = require("../components/alerts");
-var PropTypes = require("../propTypes");
+var PropTypes = require("../proptypes");
 
 var App = React.createClass({
   propTypes: {
diff --git a/src/sentry/static/sentry/app/views/projectDetails.jsx b/src/sentry/static/sentry/app/views/projectDetails.jsx
index 3931cc6a68..52fa6e912a 100644
--- a/src/sentry/static/sentry/app/views/projectDetails.jsx
+++ b/src/sentry/static/sentry/app/views/projectDetails.jsx
@@ -53,12 +53,6 @@ var ProjectDetails = React.createClass({
 
   fetchData() {
     // TODO(dcramer): we could read some of this info from contexts
-    api.request(this.getMemberListEndpoint(), {
-      success: (data) => {
-        MemberListStore.loadInitialData(data);
-      }
-    });
-
     api.request(this.getProjectDetailsEndpoint(), {
       success: (data) => {
         this.setState({
diff --git a/src/sentry/static/sentry/app/views/stream.jsx b/src/sentry/static/sentry/app/views/stream.jsx
index 85f4aa8ec1..084d430e69 100644
--- a/src/sentry/static/sentry/app/views/stream.jsx
+++ b/src/sentry/static/sentry/app/views/stream.jsx
@@ -67,6 +67,7 @@ StreamPoller.prototype.poll = function() {
 var Stream = React.createClass({
   mixins: [
     Reflux.listenTo(GroupListStore, "onAggListChange"),
+    RouteMixin,
     Router.Navigation,
     Router.State,
   ],
@@ -98,7 +99,6 @@ var Stream = React.createClass({
   },
 
   componentWillMount() {
-    console.log('here');
     this._poller = new StreamPoller({
       success: this.handleRealtimePoll,
       endpoint: this.getGroupListEndpoint()
@@ -107,6 +107,10 @@ var Stream = React.createClass({
     this.fetchData();
   },
 
+  routeDidChange() {
+    this.fetchData();
+  },
+
   componentWillUnmount() {
     this._poller.disable();
   },
diff --git a/src/sentry/static/sentry/app/views/teamDashboard/chart.jsx b/src/sentry/static/sentry/app/views/teamDashboard/chart.jsx
index 3646fb4dd5..0a09788c56 100644
--- a/src/sentry/static/sentry/app/views/teamDashboard/chart.jsx
+++ b/src/sentry/static/sentry/app/views/teamDashboard/chart.jsx
@@ -1,15 +1,21 @@
 /*** @jsx React.DOM */
 
 var React = require("react");
+var Router = require("react-router");
 
 var api = require("../../api");
 var BarChart = require("../../components/barChart");
 var LoadingError = require("../../components/loadingError");
 var LoadingIndicator = require("../../components/loadingIndicator");
+var RouteMixin = require("../../mixins/routeMixin");
 var TeamState = require("../../mixins/teamState");
 
 var TeamChart = React.createClass({
-  mixins: [TeamState],
+  mixins: [
+    RouteMixin,
+    Router.State,
+    TeamState,
+  ],
 
   getInitialState() {
     return {
@@ -31,12 +37,21 @@ var TeamChart = React.createClass({
     this.fetchData();
   },
 
+  routeDidChange() {
+    this.fetchData();
+  },
+
   fetchData() {
     var endpoint = this.getStatsEndpoint();
     if (!endpoint) {
       return;
     }
 
+    this.setState({
+      error: false,
+      loading: true
+    });
+
     api.request(endpoint, {
       query: {
         since: (new Date().getTime() / 1000) - (3600 * 24 * 7)
diff --git a/src/sentry/static/sentry/app/views/teamDetails.jsx b/src/sentry/static/sentry/app/views/teamDetails.jsx
index cd24fbea34..578547d2e9 100644
--- a/src/sentry/static/sentry/app/views/teamDetails.jsx
+++ b/src/sentry/static/sentry/app/views/teamDetails.jsx
@@ -15,6 +15,7 @@ var TeamDetails = React.createClass({
   mixins: [
     BreadcrumbMixin,
     OrganizationState,
+    RouteMixin,
     Router.State
   ],
 
@@ -40,7 +41,7 @@ var TeamDetails = React.createClass({
     this.fetchData();
   },
 
-  componentWillReceiveProps(nextProps) {
+  routeDidChange(nextProps) {
     this.fetchData();
   },
 
