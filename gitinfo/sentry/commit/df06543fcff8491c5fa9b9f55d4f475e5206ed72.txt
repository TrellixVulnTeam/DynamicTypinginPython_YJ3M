commit df06543fcff8491c5fa9b9f55d4f475e5206ed72
Author: Matt Robenolt <matt@ydekproductions.com>
Date:   Tue Nov 1 14:16:45 2016 -0700

    runner: Make sure apps get loaded into Django (#4463)
    
    Not 100% sure why, but the way that we're adding apps into
    INSTALLED_APPS is suspect of a race condition between the time that
    Django's AppCache gets initialized and populated and the time we append
    to INSTALLED_APPS.

diff --git a/src/sentry/runner/importer.py b/src/sentry/runner/importer.py
index 5ea6b6cd19..f88291f5fc 100644
--- a/src/sentry/runner/importer.py
+++ b/src/sentry/runner/importer.py
@@ -75,6 +75,8 @@ class Importer(object):
         # install the custom settings for this app
         load_settings(self.config_path, settings=settings_mod, silent=True)
 
+        install_plugin_apps('sentry.apps', settings_mod)
+
         return settings_mod
 
 
@@ -98,6 +100,19 @@ def load_settings(mod_or_filename, settings, silent=False):
     add_settings(conf, settings=settings)
 
 
+def install_plugin_apps(entry_point, settings):
+    # entry_points={
+    #    'sentry.apps': [
+    #         'phabricator = sentry_phabricator'
+    #     ],
+    # },
+    from pkg_resources import iter_entry_points
+    installed_apps = list(settings.INSTALLED_APPS)
+    for ep in iter_entry_points(entry_point):
+        installed_apps.append(ep.module_name)
+    settings.INSTALLED_APPS = tuple(installed_apps)
+
+
 def add_settings(mod, settings):
     """
     Adds all settings that are part of ``mod`` to the global settings object.
diff --git a/src/sentry/runner/initializer.py b/src/sentry/runner/initializer.py
index 3132758268..764504f07d 100644
--- a/src/sentry/runner/initializer.py
+++ b/src/sentry/runner/initializer.py
@@ -15,19 +15,6 @@ from sentry.utils import warnings
 from sentry.utils.warnings import DeprecatedSettingWarning
 
 
-def install_plugin_apps(settings):
-    # entry_points={
-    #    'sentry.apps': [
-    #         'phabricator = sentry_phabricator'
-    #     ],
-    # },
-    from pkg_resources import iter_entry_points
-    installed_apps = list(settings.INSTALLED_APPS)
-    for ep in iter_entry_points('sentry.apps'):
-        installed_apps.append(ep.module_name)
-    settings.INSTALLED_APPS = tuple(installed_apps)
-
-
 def register_plugins(settings):
     from pkg_resources import iter_entry_points
     from sentry.plugins import register
@@ -224,8 +211,6 @@ def initialize_app(config, skip_backend_validation=False):
 
     bind_cache_to_option_store()
 
-    install_plugin_apps(settings)
-
     # Commonly setups don't correctly configure themselves for production envs
     # so lets try to provide a bit more guidance
     if settings.CELERY_ALWAYS_EAGER and not settings.DEBUG:
