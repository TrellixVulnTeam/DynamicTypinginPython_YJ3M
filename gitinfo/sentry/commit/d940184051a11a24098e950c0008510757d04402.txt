commit d940184051a11a24098e950c0008510757d04402
Author: Matej Minar <matej.minar@sentry.io>
Date:   Thu Apr 16 17:09:35 2020 +0200

    feat(ui): Replace releases v1 with v2 (#18158)
    
    This PR makes Releases v2 default for opted in users.
    Releases v1 are hidden from the sidebar for them.
    They can still opt out of v2 by clicking on the "Go to Legacy Releases" button.
    
    Urls for both versions are the same - we look at organization features and localstorage to decide which component to serve.

diff --git a/src/sentry/static/sentry/app/components/sidebar/index.tsx b/src/sentry/static/sentry/app/components/sidebar/index.tsx
index 478c21f0d4..6f80ef3108 100644
--- a/src/sentry/static/sentry/app/components/sidebar/index.tsx
+++ b/src/sentry/static/sentry/app/components/sidebar/index.tsx
@@ -38,6 +38,7 @@ import space from 'app/styles/space';
 import theme from 'app/utils/theme';
 import withOrganization from 'app/utils/withOrganization';
 import {Organization} from 'app/types';
+import {wantsLegacyReleases} from 'app/views/releasesV2/utils';
 
 import {getSidebarPanelContainer} from './sidebarPanel';
 import Broadcasts from './broadcasts';
@@ -303,6 +304,20 @@ class Sidebar extends React.Component<Props, State> {
     return sidebarState;
   }
 
+  /**
+   * Determine which version of releases to show
+   */
+  shouldShowNewReleases() {
+    const {organization} = this.props;
+
+    // Bail as we can't do any more checks.
+    if (!organization || !organization.features) {
+      return false;
+    }
+
+    return organization.features.includes('releases-v2') && !wantsLegacyReleases();
+  }
+
   render() {
     const {organization, collapsed} = this.props;
     const {currentPanel, showPanel, horizontal} = this.state;
@@ -434,7 +449,6 @@ class Sidebar extends React.Component<Props, State> {
                       id="alerts"
                     />
                   </Feature>
-
                   <SidebarItem
                     {...sidebarItemProps}
                     onClick={(_id, evt) =>
@@ -447,6 +461,7 @@ class Sidebar extends React.Component<Props, State> {
                     label={t('Releases')}
                     to={`/organizations/${organization.slug}/releases/`}
                     id="releases"
+                    isBeta={this.shouldShowNewReleases()}
                   />
                   <SidebarItem
                     {...sidebarItemProps}
@@ -507,22 +522,6 @@ class Sidebar extends React.Component<Props, State> {
                       id="monitors"
                     />
                   </Feature>
-                  <Feature features={['releases-v2']} organization={organization}>
-                    <SidebarItem
-                      {...sidebarItemProps}
-                      onClick={(_id, evt) =>
-                        this.navigateWithGlobalSelection(
-                          `/organizations/${organization.slug}/releases-v2/`,
-                          evt
-                        )
-                      }
-                      icon={<IconReleases size="md" />}
-                      label={t('Releases v2')}
-                      to={`/organizations/${organization.slug}/releases-v2/`}
-                      id="releasesv2"
-                      isBeta
-                    />
-                  </Feature>
                 </SidebarSection>
 
                 <SidebarSection>
diff --git a/src/sentry/static/sentry/app/components/version.tsx b/src/sentry/static/sentry/app/components/version.tsx
index 144236570d..08503bbad3 100644
--- a/src/sentry/static/sentry/app/components/version.tsx
+++ b/src/sentry/static/sentry/app/components/version.tsx
@@ -50,10 +50,6 @@ type Props = {
    * Ellipsis on overflow
    */
   truncate?: boolean;
-  /**
-   * Use releases v2 (for example when linking to detail page)
-   */
-  v2?: boolean;
   className?: string;
 };
 
@@ -68,7 +64,6 @@ const Version = ({
   truncate,
   className,
   location,
-  v2,
 }: WithRouterProps & Props) => {
   const LinkComponent = preserveGlobalSelection ? GlobalSelectionLink : Link;
   const versionToDisplay = formatVersion(version, withPackage);
@@ -89,9 +84,9 @@ const Version = ({
       return (
         <LinkComponent
           to={{
-            pathname: `/organizations/${organization?.slug}/${
-              v2 ? 'releases-v2' : 'releases'
-            }/${encodeURIComponent(version)}/`,
+            pathname: `/organizations/${organization?.slug}/releases/${encodeURIComponent(
+              version
+            )}/`,
             query: releaseDetailProjectId ? {project: releaseDetailProjectId} : undefined,
           }}
           className={className}
diff --git a/src/sentry/static/sentry/app/routes.jsx b/src/sentry/static/sentry/app/routes.jsx
index 78bcfab5ec..7759f0493f 100644
--- a/src/sentry/static/sentry/app/routes.jsx
+++ b/src/sentry/static/sentry/app/routes.jsx
@@ -20,6 +20,8 @@ import SettingsProjectProvider from 'app/views/settings/components/settingsProje
 import SettingsWrapper from 'app/views/settings/components/settingsWrapper';
 import errorHandler from 'app/utils/errorHandler';
 import redirectDeprecatedProjectRoute from 'app/views/projects/redirectDeprecatedProjectRoute';
+import {decideReleasesVersion} from 'app/views/releasesV2/utils';
+import RedirectTo from 'app/utils/redirect';
 
 function appendTrailingSlash(nextState, replace) {
   const lastChar = nextState.location.pathname.slice(-1);
@@ -1257,84 +1259,131 @@ function routes() {
         </Route>
 
         <Route
-          path="/organizations/:orgId/releases/:version/"
+          path="/organizations/:orgId/alerts/"
           componentPromise={() =>
-            import(/* webpackChunkName: "ReleaseDetail" */ 'app/views/releases/detail')
+            import(/* webpackChunkName: "AlertsContainer" */ 'app/views/alerts')
           }
           component={errorHandler(LazyLoad)}
         >
           <IndexRoute
             componentPromise={() =>
-              import(
-                /* webpackChunkName: "ReleaseOverview" */ 'app/views/releases/detail/releaseOverview'
-              )
+              import(/* webpackChunkName: "AlertsList" */ 'app/views/alerts/list')
             }
             component={errorHandler(LazyLoad)}
           />
+
           <Route
-            path="new-events/"
+            path=":alertId/"
             componentPromise={() =>
-              import(
-                /* webpackChunkName: "ReleaseNewEvents" */ 'app/views/releases/detail/releaseNewEvents'
-              )
+              import(/* webpackChunkName: "AlertsDetails" */ 'app/views/alerts/details')
+            }
+            component={errorHandler(LazyLoad)}
+          />
+        </Route>
+
+        <Route
+          path="/organizations/:orgId/events/"
+          componentPromise={() =>
+            import(/* webpackChunkName: "EventsContainer" */ 'app/views/events')
+          }
+          component={errorHandler(LazyLoad)}
+        >
+          <IndexRoute
+            componentPromise={() =>
+              import(/* webpackChunkName: "Events" */ 'app/views/events/events')
+            }
+            component={errorHandler(LazyLoad)}
+          />
+        </Route>
+
+        <Route
+          path="/organizations/:orgId/monitors/"
+          componentPromise={() =>
+            import(/* webpackChunkName: "MonitorsContainer" */ 'app/views/monitors')
+          }
+          component={errorHandler(LazyLoad)}
+        >
+          <IndexRoute
+            componentPromise={() =>
+              import(/* webpackChunkName: "Monitors" */ 'app/views/monitors/monitors')
             }
             component={errorHandler(LazyLoad)}
           />
           <Route
-            path="all-events/"
+            path="/organizations/:orgId/monitors/create/"
             componentPromise={() =>
-              import(
-                /* webpackChunkName: "ReleaseAllEvents" */ 'app/views/releases/detail/releaseAllEvents'
-              )
+              import(/* webpackChunkName: "MonitorCreate" */ 'app/views/monitors/create')
             }
             component={errorHandler(LazyLoad)}
           />
           <Route
-            path="artifacts/"
+            path="/organizations/:orgId/monitors/:monitorId/"
             componentPromise={() =>
               import(
-                /* webpackChunkName: "ReleaseArtifacts" */ 'app/views/releases/detail/releaseArtifacts'
+                /* webpackChunkName: "MonitorDetails" */ 'app/views/monitors/details'
               )
             }
             component={errorHandler(LazyLoad)}
           />
           <Route
-            path="commits/"
+            path="/organizations/:orgId/monitors/:monitorId/edit/"
             componentPromise={() =>
-              import(
-                /* webpackChunkName: "ReleaseCommits" */ 'app/views/releases/detail/releaseCommits'
-              )
+              import(/* webpackChunkName: "MonitorEdit" */ 'app/views/monitors/edit')
             }
             component={errorHandler(LazyLoad)}
           />
         </Route>
 
         <Route
-          path="/organizations/:orgId/releases-v2/"
+          path="/organizations/:orgId/releases/"
           componentPromise={() =>
-            import(/* webpackChunkName: "ReleasesV2Container" */ 'app/views/releasesV2')
+            decideReleasesVersion(v2 =>
+              v2
+                ? import(
+                    /* webpackChunkName: "ReleasesV2Container" */ 'app/views/releasesV2'
+                  )
+                : import(/* webpackChunkName: "ReleasesContainer" */ 'app/views/releases')
+            )
           }
           component={errorHandler(LazyLoad)}
         >
           <IndexRoute
             componentPromise={() =>
-              import(/* webpackChunkName: "ReleasesV2List" */ 'app/views/releasesV2/list')
+              decideReleasesVersion(v2 =>
+                v2
+                  ? import(
+                      /* webpackChunkName: "ReleasesV2List" */ 'app/views/releasesV2/list'
+                    )
+                  : import(/* webpackChunkName: "Releases" */ 'app/views/releases/list')
+              )
             }
             component={errorHandler(LazyLoad)}
           />
           <Route
             path=":release/"
             componentPromise={() =>
-              import(
-                /* webpackChunkName: "ReleasesV2Detail" */ 'app/views/releasesV2/detail'
+              decideReleasesVersion(v2 =>
+                v2
+                  ? import(
+                      /* webpackChunkName: "ReleasesV2Detail" */ 'app/views/releasesV2/detail'
+                    )
+                  : import(
+                      /* webpackChunkName: "ReleaseDetail" */ 'app/views/releases/detail'
+                    )
               )
             }
             component={errorHandler(LazyLoad)}
           >
             <IndexRoute
               componentPromise={() =>
-                import(
-                  /* webpackChunkName: "ReleasesV2DetailOverview" */ 'app/views/releasesV2/detail/overview'
+                decideReleasesVersion(v2 =>
+                  v2
+                    ? import(
+                        /* webpackChunkName: "ReleasesV2DetailOverview" */ 'app/views/releasesV2/detail/overview'
+                      )
+                    : import(
+                        /* webpackChunkName: "ReleaseOverview" */ 'app/views/releases/detail/releaseOverview'
+                      )
                 )
               }
               component={errorHandler(LazyLoad)}
@@ -1342,8 +1391,14 @@ function routes() {
             <Route
               path="commits/"
               componentPromise={() =>
-                import(
-                  /* webpackChunkName: "ReleasesV2DetailCommits" */ 'app/views/releasesV2/detail/commits'
+                decideReleasesVersion(v2 =>
+                  v2
+                    ? import(
+                        /* webpackChunkName: "ReleasesV2DetailCommits" */ 'app/views/releasesV2/detail/commits'
+                      )
+                    : import(
+                        /* webpackChunkName: "ReleaseCommits" */ 'app/views/releases/detail/releaseCommits'
+                      )
                 )
               }
               component={errorHandler(LazyLoad)}
@@ -1351,8 +1406,14 @@ function routes() {
             <Route
               path="artifacts/"
               componentPromise={() =>
-                import(
-                  /* webpackChunkName: "ReleasesV2DetailArtifacts" */ 'app/views/releasesV2/detail/artifacts'
+                decideReleasesVersion(v2 =>
+                  v2
+                    ? import(
+                        /* webpackChunkName: "ReleasesV2DetailArtifacts" */ 'app/views/releasesV2/detail/artifacts'
+                      )
+                    : import(
+                        /* webpackChunkName: "ReleaseArtifacts" */ 'app/views/releases/detail/releaseArtifacts'
+                      )
                 )
               }
               component={errorHandler(LazyLoad)}
@@ -1360,8 +1421,59 @@ function routes() {
             <Route
               path="files-changed/"
               componentPromise={() =>
-                import(
-                  /* webpackChunkName: "ReleasesV2DetailFilesChanged" */ 'app/views/releasesV2/detail/filesChanged'
+                decideReleasesVersion(v2 =>
+                  v2
+                    ? import(
+                        /* webpackChunkName: "ReleasesV2DetailFilesChanged" */ 'app/views/releasesV2/detail/filesChanged'
+                      )
+                    : Promise.resolve(({router, params}) => (
+                        <RedirectTo
+                          router={router}
+                          to={`/organizations/${
+                            params.orgId
+                          }/releases/${encodeURIComponent(params.release)}/`}
+                        />
+                      ))
+                )
+              }
+              component={errorHandler(LazyLoad)}
+            />
+            <Route
+              path="new-events/"
+              componentPromise={() =>
+                decideReleasesVersion(v2 =>
+                  v2
+                    ? Promise.resolve(({router, params}) => (
+                        <RedirectTo
+                          router={router}
+                          to={`/organizations/${
+                            params.orgId
+                          }/releases/${encodeURIComponent(params.release)}/`}
+                        />
+                      ))
+                    : import(
+                        /* webpackChunkName: "ReleaseNewEvents" */ 'app/views/releases/detail/releaseNewEvents'
+                      )
+                )
+              }
+              component={errorHandler(LazyLoad)}
+            />
+            <Route
+              path="all-events/"
+              componentPromise={() =>
+                decideReleasesVersion(v2 =>
+                  v2
+                    ? Promise.resolve(({router, params}) => (
+                        <RedirectTo
+                          router={router}
+                          to={`/organizations/${
+                            params.orgId
+                          }/releases/${encodeURIComponent(params.release)}/`}
+                        />
+                      ))
+                    : import(
+                        /* webpackChunkName: "ReleaseAllEvents" */ 'app/views/releases/detail/releaseAllEvents'
+                      )
                 )
               }
               component={errorHandler(LazyLoad)}
@@ -1369,82 +1481,6 @@ function routes() {
           </Route>
         </Route>
 
-        <Route
-          path="/organizations/:orgId/alerts/"
-          componentPromise={() =>
-            import(/* webpackChunkName: "AlertsContainer" */ 'app/views/alerts')
-          }
-          component={errorHandler(LazyLoad)}
-        >
-          <IndexRoute
-            componentPromise={() =>
-              import(/* webpackChunkName: "AlertsList" */ 'app/views/alerts/list')
-            }
-            component={errorHandler(LazyLoad)}
-          />
-
-          <Route
-            path=":alertId/"
-            componentPromise={() =>
-              import(/* webpackChunkName: "AlertsDetails" */ 'app/views/alerts/details')
-            }
-            component={errorHandler(LazyLoad)}
-          />
-        </Route>
-
-        <Route
-          path="/organizations/:orgId/events/"
-          componentPromise={() =>
-            import(/* webpackChunkName: "EventsContainer" */ 'app/views/events')
-          }
-          component={errorHandler(LazyLoad)}
-        >
-          <IndexRoute
-            componentPromise={() =>
-              import(/* webpackChunkName: "Events" */ 'app/views/events/events')
-            }
-            component={errorHandler(LazyLoad)}
-          />
-        </Route>
-
-        <Route
-          path="/organizations/:orgId/monitors/"
-          componentPromise={() =>
-            import(/* webpackChunkName: "MonitorsContainer" */ 'app/views/monitors')
-          }
-          component={errorHandler(LazyLoad)}
-        >
-          <IndexRoute
-            componentPromise={() =>
-              import(/* webpackChunkName: "Monitors" */ 'app/views/monitors/monitors')
-            }
-            component={errorHandler(LazyLoad)}
-          />
-          <Route
-            path="/organizations/:orgId/monitors/create/"
-            componentPromise={() =>
-              import(/* webpackChunkName: "MonitorCreate" */ 'app/views/monitors/create')
-            }
-            component={errorHandler(LazyLoad)}
-          />
-          <Route
-            path="/organizations/:orgId/monitors/:monitorId/"
-            componentPromise={() =>
-              import(
-                /* webpackChunkName: "MonitorDetails" */ 'app/views/monitors/details'
-              )
-            }
-            component={errorHandler(LazyLoad)}
-          />
-          <Route
-            path="/organizations/:orgId/monitors/:monitorId/edit/"
-            componentPromise={() =>
-              import(/* webpackChunkName: "MonitorEdit" */ 'app/views/monitors/edit')
-            }
-            component={errorHandler(LazyLoad)}
-          />
-        </Route>
-
         <Route
           path="/organizations/:orgId/activity/"
           componentPromise={() =>
@@ -1728,13 +1764,7 @@ function routes() {
               component={errorHandler(LazyLoad)}
             />
           </Route>
-          <Route
-            path="/organizations/:orgId/releases/"
-            componentPromise={() =>
-              import(/* webpackChunkName: "Releases" */ 'app/views/releases/list')
-            }
-            component={errorHandler(LazyLoad)}
-          />
+
           <Route
             path="/organizations/:orgId/teams/new/"
             componentPromise={() =>
diff --git a/src/sentry/static/sentry/app/views/releases/detail/index.jsx b/src/sentry/static/sentry/app/views/releases/detail/index.jsx
index c7dcf00c8d..822fecc5ac 100644
--- a/src/sentry/static/sentry/app/views/releases/detail/index.jsx
+++ b/src/sentry/static/sentry/app/views/releases/detail/index.jsx
@@ -15,6 +15,8 @@ import withGlobalSelection from 'app/utils/withGlobalSelection';
 import withOrganization from 'app/utils/withOrganization';
 import withProfiler from 'app/utils/withProfiler';
 import withProjects from 'app/utils/withProjects';
+import Feature from 'app/components/acl/feature';
+import SwitchReleasesButton from 'app/views/releasesV2/utils/switchReleasesButton';
 
 import ReleaseHeader from './releaseHeader';
 
@@ -54,14 +56,14 @@ class OrganizationReleaseDetails extends AsyncView {
 
   getTitle() {
     const {
-      params: {version},
+      params: {release},
       organization,
     } = this.props;
-    return `Release ${version} | ${organization.slug}`;
+    return `Release ${release} | ${organization.slug}`;
   }
 
   getEndpoints() {
-    const {orgId, version} = this.props.params;
+    const {orgId, release} = this.props.params;
     const {project} = this.props.location.query;
     const query = {};
     if (project !== undefined) {
@@ -70,7 +72,7 @@ class OrganizationReleaseDetails extends AsyncView {
     return [
       [
         'release',
-        `/organizations/${orgId}/releases/${encodeURIComponent(version)}/`,
+        `/organizations/${orgId}/releases/${encodeURIComponent(release)}/`,
         {query},
       ],
     ];
@@ -114,6 +116,7 @@ class OrganizationReleaseDetails extends AsyncView {
     const {
       location,
       params: {orgId},
+      organization,
     } = this.props;
     const {release} = this.state;
 
@@ -133,6 +136,9 @@ class OrganizationReleaseDetails extends AsyncView {
           release,
           query,
         })}
+        <Feature features={['releases-v2']} organization={organization}>
+          <SwitchReleasesButton version="2" orgId={organization.id} />
+        </Feature>
       </PageContent>
     );
   }
diff --git a/src/sentry/static/sentry/app/views/releases/detail/releaseArtifacts.jsx b/src/sentry/static/sentry/app/views/releases/detail/releaseArtifacts.jsx
index bcbba4889c..0cdc655daa 100644
--- a/src/sentry/static/sentry/app/views/releases/detail/releaseArtifacts.jsx
+++ b/src/sentry/static/sentry/app/views/releases/detail/releaseArtifacts.jsx
@@ -47,9 +47,8 @@ class ReleaseArtifacts extends React.Component {
   }
 
   getFilesEndpoint() {
-    // ?? to temporarily support releases V1 and V2
-    const {orgId, projectId, version, release} = this.props.params;
-    const encodedVersion = encodeURIComponent(version ?? release);
+    const {orgId, projectId, release} = this.props.params;
+    const encodedVersion = encodeURIComponent(release);
     const project = projectId ?? this.props.projectId;
 
     return project
diff --git a/src/sentry/static/sentry/app/views/releases/detail/releaseCommits.jsx b/src/sentry/static/sentry/app/views/releases/detail/releaseCommits.jsx
index dd3499dce7..59bc8cbc30 100644
--- a/src/sentry/static/sentry/app/views/releases/detail/releaseCommits.jsx
+++ b/src/sentry/static/sentry/app/views/releases/detail/releaseCommits.jsx
@@ -48,9 +48,9 @@ class ReleaseCommits extends React.Component {
   }
 
   getPath() {
-    const {orgId, projectId, version} = this.props.params;
+    const {orgId, projectId, release} = this.props.params;
 
-    const encodedVersion = encodeURIComponent(version);
+    const encodedVersion = encodeURIComponent(release);
 
     return projectId
       ? `/projects/${orgId}/${projectId}/releases/${encodedVersion}/commits/`
diff --git a/src/sentry/static/sentry/app/views/releases/detail/releaseOverview.jsx b/src/sentry/static/sentry/app/views/releases/detail/releaseOverview.jsx
index bf1f3c4dd5..efcc64d812 100644
--- a/src/sentry/static/sentry/app/views/releases/detail/releaseOverview.jsx
+++ b/src/sentry/static/sentry/app/views/releases/detail/releaseOverview.jsx
@@ -21,8 +21,8 @@ export default class ReleaseOverview extends AsyncComponent {
   };
 
   getEndpoints() {
-    const {orgId, version} = this.props.params;
-    const basePath = `/organizations/${orgId}/releases/${encodeURIComponent(version)}/`;
+    const {orgId, release} = this.props.params;
+    const basePath = `/organizations/${orgId}/releases/${encodeURIComponent(release)}/`;
     return [
       ['fileList', `${basePath}commitfiles/`],
       ['deploys', `${basePath}deploys/`],
@@ -35,11 +35,7 @@ export default class ReleaseOverview extends AsyncComponent {
   }
 
   renderBody() {
-    const {
-      release,
-      query,
-      params: {orgId, version},
-    } = this.props;
+    const {release, query, params} = this.props;
 
     const {fileList, repos} = this.state;
 
@@ -51,7 +47,7 @@ export default class ReleaseOverview extends AsyncComponent {
       <div>
         <div className="row" style={{paddingTop: 10}}>
           <div className="col-sm-8">
-            <ReleaseIssues version={version} orgId={orgId} query={query} />
+            <ReleaseIssues version={params.release} orgId={params.orgId} query={query} />
             {hasRepos && (
               <div>
                 {Object.keys(filesByRepository).map((repository, i) => (
@@ -70,7 +66,7 @@ export default class ReleaseOverview extends AsyncComponent {
                 {release.lastCommit && (
                   <LastCommit commit={release.lastCommit} headerClass="nav-header" />
                 )}
-                <CommitAuthorStats orgId={orgId} version={version} />
+                <CommitAuthorStats orgId={params.orgId} version={params.release} />
                 <h6 className="nav-header m-b-1">{t('Projects Affected')}</h6>
                 <ul className="nav nav-stacked">
                   {release.projects.length === 0
@@ -78,9 +74,9 @@ export default class ReleaseOverview extends AsyncComponent {
                     : release.projects.map(project => (
                         <ReleaseProjectStatSparkline
                           key={project.slug}
-                          orgId={orgId}
+                          orgId={params.orgId}
                           project={project}
-                          version={version}
+                          version={params.release}
                         />
                       ))}
                 </ul>
@@ -90,8 +86,8 @@ export default class ReleaseOverview extends AsyncComponent {
             )}
             <ReleaseDeploys
               deploys={this.state.deploys}
-              version={version}
-              orgId={orgId}
+              version={params.release}
+              orgId={params.orgId}
             />
           </div>
         </div>
diff --git a/src/sentry/static/sentry/app/views/releases/index.tsx b/src/sentry/static/sentry/app/views/releases/index.tsx
new file mode 100644
index 0000000000..d4a8648f78
--- /dev/null
+++ b/src/sentry/static/sentry/app/views/releases/index.tsx
@@ -0,0 +1,18 @@
+import React from 'react';
+import {RouteComponentProps} from 'react-router/lib/Router';
+
+type RouteParams = {
+  orgId: string;
+};
+
+type Props = RouteComponentProps<RouteParams, {}>;
+
+class ReleasesContainer extends React.Component<Props> {
+  render() {
+    const {children} = this.props;
+
+    return children;
+  }
+}
+
+export default ReleasesContainer;
diff --git a/src/sentry/static/sentry/app/views/releases/list/index.jsx b/src/sentry/static/sentry/app/views/releases/list/index.jsx
index 357fc29bc7..a4165e58c1 100644
--- a/src/sentry/static/sentry/app/views/releases/list/index.jsx
+++ b/src/sentry/static/sentry/app/views/releases/list/index.jsx
@@ -17,6 +17,8 @@ import SentryTypes from 'app/sentryTypes';
 import withProfiler from 'app/utils/withProfiler';
 import withGlobalSelection from 'app/utils/withGlobalSelection';
 import withOrganization from 'app/utils/withOrganization';
+import Feature from 'app/components/acl/feature';
+import SwitchReleasesButton from 'app/views/releasesV2/utils/switchReleasesButton';
 
 import {getQuery} from './utils';
 import ReleaseLanding from './releaseLanding';
@@ -175,6 +177,9 @@ class OrganizationReleases extends AsyncView {
               <PanelBody>{this.renderStreamBody()}</PanelBody>
             </Panel>
             <Pagination pageLinks={this.state.releaseListPageLinks} />
+            <Feature features={['releases-v2']} organization={organization}>
+              <SwitchReleasesButton version="2" orgId={organization.id} />
+            </Feature>
           </div>
         </NoProjectMessage>
       </PageContent>
diff --git a/src/sentry/static/sentry/app/views/releasesV2/detail/artifacts/index.tsx b/src/sentry/static/sentry/app/views/releasesV2/detail/artifacts/index.tsx
index 27f9f8dfca..2f507d2ec2 100644
--- a/src/sentry/static/sentry/app/views/releasesV2/detail/artifacts/index.tsx
+++ b/src/sentry/static/sentry/app/views/releasesV2/detail/artifacts/index.tsx
@@ -1,10 +1,8 @@
 import React from 'react';
-import styled from '@emotion/styled';
 import {RouteComponentProps} from 'react-router/lib/Router';
 
 import {t} from 'app/locale';
 import Alert from 'app/components/alert';
-import space from 'app/styles/space';
 import ReleaseArtifactsV1 from 'app/views/releases/detail/releaseArtifacts';
 import AsyncView from 'app/views/asyncView';
 import routeTitleGen from 'app/utils/routeTitle';
@@ -40,7 +38,7 @@ class ReleaseArtifacts extends AsyncView<Props> {
     const {params, location} = this.props;
 
     return (
-      <ContentBox>
+      <React.Fragment>
         <Alert type="warning">
           {t(
             'We are working on improving this experience, therefore Artifacts will be moving to Settings soon.'
@@ -53,15 +51,9 @@ class ReleaseArtifacts extends AsyncView<Props> {
           projectId={project.slug}
           smallEmptyMessage
         />
-      </ContentBox>
+      </React.Fragment>
     );
   }
 }
 
-const ContentBox = styled('div')`
-  padding: ${space(4)};
-  flex: 1;
-  background-color: ${p => p.theme.white};
-`;
-
 export default withOrganization(ReleaseArtifacts);
diff --git a/src/sentry/static/sentry/app/views/releasesV2/detail/commits/index.tsx b/src/sentry/static/sentry/app/views/releasesV2/detail/commits/index.tsx
index 6a124b606f..cff8d69932 100644
--- a/src/sentry/static/sentry/app/views/releasesV2/detail/commits/index.tsx
+++ b/src/sentry/static/sentry/app/views/releasesV2/detail/commits/index.tsx
@@ -133,36 +133,30 @@ class ReleaseCommits extends AsyncView<Props, State> {
       return <ReleaseNoCommitData orgId={orgId} />;
     }
 
+    if (commits.length === 0) {
+      return (
+        <Panel>
+          <PanelBody>
+            <EmptyStateWarning small>
+              {t('There are no commits associated with this release.')}
+            </EmptyStateWarning>
+          </PanelBody>
+        </Panel>
+      );
+    }
+
     return (
-      <ContentBox>
-        {commits.length ? (
-          <React.Fragment>
-            {Object.keys(commitsByRepository).length > 1 &&
-              this.renderRepoSwitcher(commitsByRepository)}
-            {reposToRender.map(repoName =>
-              this.renderCommitsForRepo(repoName, commitsByRepository)
-            )}
-          </React.Fragment>
-        ) : (
-          <Panel>
-            <PanelBody>
-              <EmptyStateWarning small>
-                {t('There are no commits associated with this release.')}
-              </EmptyStateWarning>
-            </PanelBody>
-          </Panel>
+      <React.Fragment>
+        {Object.keys(commitsByRepository).length > 1 &&
+          this.renderRepoSwitcher(commitsByRepository)}
+        {reposToRender.map(repoName =>
+          this.renderCommitsForRepo(repoName, commitsByRepository)
         )}
-      </ContentBox>
+      </React.Fragment>
     );
   }
 }
 
-const ContentBox = styled('div')`
-  padding: ${space(4)};
-  flex: 1;
-  background-color: ${p => p.theme.white};
-`;
-
 const RepoSwitcher = styled('div')`
   margin-bottom: ${space(1)};
 `;
diff --git a/src/sentry/static/sentry/app/views/releasesV2/detail/filesChanged/index.tsx b/src/sentry/static/sentry/app/views/releasesV2/detail/filesChanged/index.tsx
index 59ea967ef1..47f9dfffd1 100644
--- a/src/sentry/static/sentry/app/views/releasesV2/detail/filesChanged/index.tsx
+++ b/src/sentry/static/sentry/app/views/releasesV2/detail/filesChanged/index.tsx
@@ -87,10 +87,6 @@ class FilesChanged extends AsyncView<Props, State> {
 }
 
 const ContentBox = styled('div')`
-  padding: ${space(4)};
-  flex: 1;
-  background-color: ${p => p.theme.white};
-
   h5 {
     color: ${p => p.theme.gray3};
     font-size: ${p => p.theme.fontSizeMedium};
diff --git a/src/sentry/static/sentry/app/views/releasesV2/detail/index.tsx b/src/sentry/static/sentry/app/views/releasesV2/detail/index.tsx
index ec348a93bc..e088ac6051 100644
--- a/src/sentry/static/sentry/app/views/releasesV2/detail/index.tsx
+++ b/src/sentry/static/sentry/app/views/releasesV2/detail/index.tsx
@@ -117,9 +117,11 @@ class ReleasesV2Detail extends AsyncView<Props, State> {
             project={project}
           />
 
-          <ReleaseContext.Provider value={{release, project}}>
-            {this.props.children}
-          </ReleaseContext.Provider>
+          <ContentBox>
+            <ReleaseContext.Provider value={{release, project}}>
+              {this.props.children}
+            </ReleaseContext.Provider>
+          </ContentBox>
         </StyledPageContent>
       </LightWeightNoProjectMessage>
     );
@@ -217,5 +219,11 @@ const ProjectsFooterMessage = styled('div')`
   grid-gap: ${space(1)};
 `;
 
+const ContentBox = styled('div')`
+  padding: ${space(4)};
+  flex: 1;
+  background-color: white;
+`;
+
 export {ReleasesV2DetailContainer, ReleaseContext};
 export default withGlobalSelection(withOrganization(ReleasesV2DetailContainer));
diff --git a/src/sentry/static/sentry/app/views/releasesV2/detail/overview/index.tsx b/src/sentry/static/sentry/app/views/releasesV2/detail/overview/index.tsx
index 26597cc3c8..557753206d 100644
--- a/src/sentry/static/sentry/app/views/releasesV2/detail/overview/index.tsx
+++ b/src/sentry/static/sentry/app/views/releasesV2/detail/overview/index.tsx
@@ -20,6 +20,7 @@ import ProjectReleaseDetails from './projectReleaseDetails';
 import TotalCrashFreeUsers from './totalCrashFreeUsers';
 import ReleaseStatsRequest from './releaseStatsRequest';
 import {YAxis} from './chart/releaseChartControls';
+import SwitchReleasesButton from '../../utils/switchReleasesButton';
 
 import {ReleaseContext} from '..';
 
@@ -130,6 +131,8 @@ class ReleaseOverview extends AsyncView<Props> {
                       />
                     )}
                   </Sidebar>
+
+                  <SwitchReleasesButton version="1" orgId={organization.id} />
                 </ContentBox>
               )}
             </ReleaseStatsRequest>
@@ -141,10 +144,6 @@ class ReleaseOverview extends AsyncView<Props> {
 }
 
 const ContentBox = styled('div')`
-  padding: ${space(4)};
-  flex: 1;
-  background-color: white;
-
   @media (min-width: ${p => p.theme.breakpoints[0]}) {
     display: grid;
     grid-column-gap: ${space(3)};
diff --git a/src/sentry/static/sentry/app/views/releasesV2/detail/pickProjectToContinue.tsx b/src/sentry/static/sentry/app/views/releasesV2/detail/pickProjectToContinue.tsx
index d7ef0f5084..84b528622e 100644
--- a/src/sentry/static/sentry/app/views/releasesV2/detail/pickProjectToContinue.tsx
+++ b/src/sentry/static/sentry/app/views/releasesV2/detail/pickProjectToContinue.tsx
@@ -16,7 +16,7 @@ type Props = {
 const PickProjectToContinue = ({orgSlug, version, router, projects}: Props) => {
   let navigating = false;
 
-  const path = `/organizations/${orgSlug}/releases-v2/${encodeURIComponent(
+  const path = `/organizations/${orgSlug}/releases/${encodeURIComponent(
     version
   )}/?project=`;
 
@@ -45,7 +45,7 @@ const PickProjectToContinue = ({orgSlug, version, router, projects}: Props) => {
         // we want this to be executed only if the user didn't select any project
         // (closed modal either via button, Esc, clicking outside, ...)
         if (!navigating) {
-          router.push(`/organizations/${orgSlug}/releases-v2/`);
+          router.push(`/organizations/${orgSlug}/releases/`);
         }
       },
     }
diff --git a/src/sentry/static/sentry/app/views/releasesV2/detail/releaseHeader.tsx b/src/sentry/static/sentry/app/views/releasesV2/detail/releaseHeader.tsx
index 37ca226b0b..4956153c4e 100644
--- a/src/sentry/static/sentry/app/views/releasesV2/detail/releaseHeader.tsx
+++ b/src/sentry/static/sentry/app/views/releasesV2/detail/releaseHeader.tsx
@@ -33,9 +33,7 @@ const ReleaseHeader = ({location, orgId, release, deploys, project}: Props) => {
   const {version, newGroups, url} = release;
   const {healthData} = project;
 
-  const releasePath = `/organizations/${orgId}/releases-v2/${encodeURIComponent(
-    version
-  )}/`;
+  const releasePath = `/organizations/${orgId}/releases/${encodeURIComponent(version)}/`;
 
   const tabs = [
     {title: t('Overview'), to: releasePath},
@@ -50,7 +48,7 @@ const ReleaseHeader = ({location, orgId, release, deploys, project}: Props) => {
         <Breadcrumbs
           crumbs={[
             {
-              to: `/organizations/${orgId}/releases-v2/`,
+              to: `/organizations/${orgId}/releases/`,
               label: t('Releases'),
             },
             {label: formatVersion(version)},
diff --git a/src/sentry/static/sentry/app/views/releasesV2/detail/releaseNoCommitData.tsx b/src/sentry/static/sentry/app/views/releasesV2/detail/releaseNoCommitData.tsx
index 3b57775dd9..15d10a8be4 100644
--- a/src/sentry/static/sentry/app/views/releasesV2/detail/releaseNoCommitData.tsx
+++ b/src/sentry/static/sentry/app/views/releasesV2/detail/releaseNoCommitData.tsx
@@ -27,8 +27,7 @@ const ReleaseNoCommitData = ({orgId}: Props) => (
 );
 
 const StyledWell = styled(Well)`
-  margin: ${space(4)};
-
+  background-color: ${p => p.theme.white};
   padding-top: ${space(2)};
   padding-bottom: ${space(4)};
 `;
diff --git a/src/sentry/static/sentry/app/views/releasesV2/index.tsx b/src/sentry/static/sentry/app/views/releasesV2/index.tsx
index 0df61f98bc..168b3b1210 100644
--- a/src/sentry/static/sentry/app/views/releasesV2/index.tsx
+++ b/src/sentry/static/sentry/app/views/releasesV2/index.tsx
@@ -1,4 +1,5 @@
 import React from 'react';
+import {RouteComponentProps} from 'react-router/lib/Router';
 
 import {t} from 'app/locale';
 import {Organization} from 'app/types';
@@ -8,7 +9,11 @@ import Feature from 'app/components/acl/feature';
 import Alert from 'app/components/alert';
 import withOrganization from 'app/utils/withOrganization';
 
-type Props = {
+type RouteParams = {
+  orgId: string;
+};
+
+type Props = RouteComponentProps<RouteParams, {}> & {
   organization: Organization;
 };
 
diff --git a/src/sentry/static/sentry/app/views/releasesV2/list/index.tsx b/src/sentry/static/sentry/app/views/releasesV2/list/index.tsx
index 34f228811b..7091a24b97 100644
--- a/src/sentry/static/sentry/app/views/releasesV2/list/index.tsx
+++ b/src/sentry/static/sentry/app/views/releasesV2/list/index.tsx
@@ -28,6 +28,7 @@ import {defined} from 'app/utils';
 
 import ReleaseListSortOptions from './releaseListSortOptions';
 import ReleasePromo from './releasePromo';
+import SwitchReleasesButton from '../utils/switchReleasesButton';
 
 type RouteParams = {
   orgId: string;
@@ -43,7 +44,7 @@ class ReleasesList extends AsyncView<Props, State> {
   shouldReload = true;
 
   getTitle() {
-    return routeTitleGen(t('Releases v2'), this.props.organization.slug, false);
+    return routeTitleGen(t('Releases'), this.props.organization.slug, false);
   }
 
   getDefaultState() {
@@ -134,6 +135,12 @@ class ReleasesList extends AsyncView<Props, State> {
     );
   }
 
+  shouldShowLoadingIndicator() {
+    const {loading, releases, reloading} = this.state;
+
+    return (loading && !reloading) || (loading && !releases?.length);
+  }
+
   renderLoading() {
     return this.renderBody();
   }
@@ -172,9 +179,9 @@ class ReleasesList extends AsyncView<Props, State> {
 
   renderInnerBody() {
     const {location} = this.props;
-    const {loading, releases, reloading} = this.state;
+    const {releases, reloading} = this.state;
 
-    if ((loading && !reloading) || (loading && !releases?.length)) {
+    if (this.shouldShowLoadingIndicator()) {
       return <LoadingIndicator />;
     }
 
@@ -212,7 +219,7 @@ class ReleasesList extends AsyncView<Props, State> {
           <LightWeightNoProjectMessage organization={organization}>
             <StyledPageHeader>
               <PageHeading>
-                {t('Releases v2')} <BetaTag />
+                {t('Releases')} <BetaTag />
               </PageHeading>
               <SortAndFilterWrapper>
                 <ReleaseListSortOptions
@@ -232,6 +239,10 @@ class ReleasesList extends AsyncView<Props, State> {
             {this.renderInnerBody()}
 
             <Pagination pageLinks={this.state.releasesPageLinks} />
+
+            {!this.shouldShowLoadingIndicator() && (
+              <SwitchReleasesButton version="1" orgId={organization.id} />
+            )}
           </LightWeightNoProjectMessage>
         </PageContent>
       </React.Fragment>
diff --git a/src/sentry/static/sentry/app/views/releasesV2/list/releaseCard.tsx b/src/sentry/static/sentry/app/views/releasesV2/list/releaseCard.tsx
index 0a0642299b..c1a0b4b459 100644
--- a/src/sentry/static/sentry/app/views/releasesV2/list/releaseCard.tsx
+++ b/src/sentry/static/sentry/app/views/releasesV2/list/releaseCard.tsx
@@ -62,7 +62,6 @@ const ReleaseCard = ({release, project, location, reloading}: Props) => (
                 tooltipRawVersion
                 truncate
                 projectId={String(project.id)}
-                v2
               />
               <TimeWithIcon date={release.dateReleased || release.dateCreated} />
             </VersionWrapper>
diff --git a/src/sentry/static/sentry/app/views/releasesV2/utils/index.tsx b/src/sentry/static/sentry/app/views/releasesV2/utils/index.tsx
index dd8641638a..2eeca31354 100644
--- a/src/sentry/static/sentry/app/views/releasesV2/utils/index.tsx
+++ b/src/sentry/static/sentry/app/views/releasesV2/utils/index.tsx
@@ -1,9 +1,61 @@
 import round from 'lodash/round';
 
+import localStorage from 'app/utils/localStorage';
+import ConfigStore from 'app/stores/configStore';
+import OrganizationStore from 'app/stores/organizationStore';
+import {trackAnalyticsEvent} from 'app/utils/analytics';
+import {Client} from 'app/api';
 import ProgressRing from 'app/components/progressRing';
 
 const CRASH_FREE_DANGER_THRESHOLD = 98;
 const CRASH_FREE_WARNING_THRESHOLD = 99.5;
+const RELEASES_VERSION_KEY = 'releases:version';
+
+export const switchReleasesVersion = (version: '1' | '2', orgId: string) => {
+  localStorage.setItem(RELEASES_VERSION_KEY, version);
+  const user = ConfigStore.get('user');
+  trackAnalyticsEvent({
+    eventKey: version === '1' ? 'releases_v2.opt_out' : 'releases_v2.opt_in',
+    eventName:
+      version === '1' ? 'ReleasesV2: Go to releases1' : 'ReleasesV2: Go to releases2',
+    organization_id: parseInt(orgId, 10),
+    user_id: parseInt(user.id, 10),
+  });
+  location.reload();
+};
+
+export const wantsLegacyReleases = () => {
+  const version = localStorage.getItem(RELEASES_VERSION_KEY);
+
+  return version === '1';
+};
+
+export const decideReleasesVersion = async hasNewReleases => {
+  const api = new Client();
+  const {organization} = OrganizationStore.get();
+
+  if (wantsLegacyReleases()) {
+    return hasNewReleases(false);
+  }
+
+  if (organization) {
+    return hasNewReleases(organization.features.includes('releases-v2'));
+  }
+
+  // in case there is no organization in the store yet, we fetch it
+  // this function is being called from the routes file where we do not have access to much stuff at that point
+  // we will be removing this logic once we go GA with releases v2 in a few weeks
+  try {
+    const currentOrgSlug = location.pathname.split('/')[2];
+    const fetchedOrg = await api.requestPromise(`/organizations/${currentOrgSlug}/`, {
+      query: {detailed: 0},
+    });
+
+    return hasNewReleases(fetchedOrg.features.includes('releases-v2'));
+  } catch {
+    return hasNewReleases(false);
+  }
+};
 
 export const getCrashFreePercent = (
   percent: number,
diff --git a/src/sentry/static/sentry/app/views/releasesV2/utils/switchReleasesButton.tsx b/src/sentry/static/sentry/app/views/releasesV2/utils/switchReleasesButton.tsx
new file mode 100644
index 0000000000..91a7fccfcd
--- /dev/null
+++ b/src/sentry/static/sentry/app/views/releasesV2/utils/switchReleasesButton.tsx
@@ -0,0 +1,28 @@
+import React from 'react';
+
+import {t} from 'app/locale';
+import Button from 'app/components/button';
+
+import {switchReleasesVersion} from './index';
+
+type Props = {
+  orgId: string; // actual id, not slug
+  version: '1' | '2';
+};
+
+const SwitchReleasesButton = ({orgId, version}: Props) => {
+  const switchReleases = () => {
+    switchReleasesVersion(version, orgId);
+  };
+
+  return (
+    <div>
+      <Button priority="link" size="small" onClick={switchReleases}>
+        {version === '1' && t('Go to Legacy Releases')}
+        {version === '2' && t('Go to New Releases')}
+      </Button>
+    </div>
+  );
+};
+
+export default SwitchReleasesButton;
diff --git a/tests/acceptance/test_organization_releases_v2.py b/tests/acceptance/test_organization_releases_v2.py
index ee72817b5b..a073bc40b1 100644
--- a/tests/acceptance/test_organization_releases_v2.py
+++ b/tests/acceptance/test_organization_releases_v2.py
@@ -21,7 +21,7 @@ class OrganizationReleasesV2Test(AcceptanceTestCase):
         )
         self.create_project(organization=self.org, teams=[self.team], name="Bengal 3")
         self.login_as(self.user)
-        self.path = u"/organizations/{}/releases-v2/".format(self.org.slug)
+        self.path = u"/organizations/{}/releases/".format(self.org.slug)
         self.project.update(first_event=timezone.now())
 
     def test_no_access(self):
diff --git a/tests/js/spec/views/releases/detail/__snapshots__/releaseCommits.spec.jsx.snap b/tests/js/spec/views/releases/detail/__snapshots__/releaseCommits.spec.jsx.snap
index 22f6512168..bb094c8b36 100644
--- a/tests/js/spec/views/releases/detail/__snapshots__/releaseCommits.spec.jsx.snap
+++ b/tests/js/spec/views/releases/detail/__snapshots__/releaseCommits.spec.jsx.snap
@@ -6,7 +6,7 @@ exports[`ReleaseCommits organization release commits 1`] = `
   params={
     Object {
       "orgId": "123",
-      "version": "10.0",
+      "release": "10.0",
     }
   }
 >
@@ -24,7 +24,7 @@ exports[`ReleaseCommits organization release commits 1`] = `
     params={
       Object {
         "orgId": "123",
-        "version": "10.0",
+        "release": "10.0",
       }
     }
   >
@@ -391,7 +391,7 @@ exports[`ReleaseCommits project release commits 1`] = `
     Object {
       "orgId": "123",
       "projectId": "456",
-      "version": "10.0",
+      "release": "10.0",
     }
   }
 >
@@ -410,7 +410,7 @@ exports[`ReleaseCommits project release commits 1`] = `
       Object {
         "orgId": "123",
         "projectId": "456",
-        "version": "10.0",
+        "release": "10.0",
       }
     }
   >
diff --git a/tests/js/spec/views/releases/detail/releaseArtifacts.spec.jsx b/tests/js/spec/views/releases/detail/releaseArtifacts.spec.jsx
index 108f37c349..b6dc5f2c28 100644
--- a/tests/js/spec/views/releases/detail/releaseArtifacts.spec.jsx
+++ b/tests/js/spec/views/releases/detail/releaseArtifacts.spec.jsx
@@ -44,7 +44,7 @@ describe('ReleaseArtifacts', function() {
     wrapper = mount(
       <ReleaseArtifacts
         location={{query: {cursor: '0:0:100'}}}
-        params={{orgId: '123', projectId: '456', version: 'abcdef'}}
+        params={{orgId: '123', projectId: '456', release: 'abcdef'}}
         organization={TestStubs.Organization({id: '123', access: ['project:read']})}
         api={api}
       />
@@ -53,7 +53,7 @@ describe('ReleaseArtifacts', function() {
     wrapperWithPermission = shallow(
       <ReleaseArtifacts
         location={{query: {cursor: '0:0:100'}}}
-        params={{orgId: '123', projectId: '456', version: 'abcdef'}}
+        params={{orgId: '123', projectId: '456', release: 'abcdef'}}
         organization={TestStubs.Organization({id: '123', access: ['project:write']})}
         api={api}
       />
@@ -122,7 +122,7 @@ describe('ReleaseArtifacts', function() {
     });
 
     it('fetches data for organization releases', function() {
-      wrapper.setProps({params: {orgId: '123', version: 'abcdef'}});
+      wrapper.setProps({params: {orgId: '123', release: 'abcdef'}});
       wrapper.instance().fetchData();
 
       expect(organizationMock).toHaveBeenCalledWith(
diff --git a/tests/js/spec/views/releases/detail/releaseCommits.spec.jsx b/tests/js/spec/views/releases/detail/releaseCommits.spec.jsx
index 638a6728c4..8e784344f7 100644
--- a/tests/js/spec/views/releases/detail/releaseCommits.spec.jsx
+++ b/tests/js/spec/views/releases/detail/releaseCommits.spec.jsx
@@ -25,7 +25,7 @@ describe('ReleaseCommits', function() {
   it('project release commits', function() {
     wrapper = mount(
       <ReleaseCommits
-        params={{orgId: '123', projectId: '456', version: '10.0'}}
+        params={{orgId: '123', projectId: '456', release: '10.0'}}
         location={{}}
       />
     );
@@ -37,7 +37,7 @@ describe('ReleaseCommits', function() {
 
   it('organization release commits', function() {
     wrapper = mount(
-      <ReleaseCommits params={{orgId: '123', version: '10.0'}} location={{}} />
+      <ReleaseCommits params={{orgId: '123', release: '10.0'}} location={{}} />
     );
 
     expect(wrapper).toMatchSnapshot();
diff --git a/tests/js/spec/views/releases/detail/releaseDetails.spec.jsx b/tests/js/spec/views/releases/detail/releaseDetails.spec.jsx
index 316901edd5..942b4b9460 100644
--- a/tests/js/spec/views/releases/detail/releaseDetails.spec.jsx
+++ b/tests/js/spec/views/releases/detail/releaseDetails.spec.jsx
@@ -40,7 +40,7 @@ describe('ReleaseDetails', function() {
       project: {
         slug: 'anvils',
       },
-      version: '9.1.1',
+      release: '9.1.1',
     };
     const location = {
       pathname: '/',
diff --git a/tests/js/spec/views/releasesV2/index.spec.jsx b/tests/js/spec/views/releasesV2/index.spec.jsx
index ec56219d64..5b3c7a0a6d 100644
--- a/tests/js/spec/views/releasesV2/index.spec.jsx
+++ b/tests/js/spec/views/releasesV2/index.spec.jsx
@@ -4,14 +4,12 @@ import {mountWithTheme} from 'sentry-test/enzyme';
 import ReleasesV2Container from 'app/views/releasesV2';
 
 describe('ReleasesV2Container', function() {
-  describe('no access without feature flag', function() {
-    it('display no access message', function() {
-      const organization = TestStubs.Organization({projects: [TestStubs.Project()]});
-      const wrapper = mountWithTheme(
-        <ReleasesV2Container />,
-        TestStubs.routerContext([{organization}])
-      );
-      expect(wrapper.text()).toBe("You don't have access to this feature");
-    });
+  it('it displays no access message', function() {
+    const organization = TestStubs.Organization({projects: [TestStubs.Project()]});
+    const wrapper = mountWithTheme(
+      <ReleasesV2Container />,
+      TestStubs.routerContext([{organization}])
+    );
+    expect(wrapper.text()).toBe("You don't have access to this feature");
   });
 });
