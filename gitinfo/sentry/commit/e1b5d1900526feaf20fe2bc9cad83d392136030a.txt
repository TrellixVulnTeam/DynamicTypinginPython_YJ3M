commit e1b5d1900526feaf20fe2bc9cad83d392136030a
Author: David Cramer <dcramer@gmail.com>
Date:   Thu Feb 18 11:56:29 2016 -0800

    Add basic view of hashes

diff --git a/src/sentry/static/sentry/app/routes.jsx b/src/sentry/static/sentry/app/routes.jsx
index 1c70599f17..91a3000307 100644
--- a/src/sentry/static/sentry/app/routes.jsx
+++ b/src/sentry/static/sentry/app/routes.jsx
@@ -10,6 +10,7 @@ import GroupActivity from './views/groupActivity';
 import GroupDetails from './views/groupDetails';
 import GroupEventDetails from './views/groupEventDetails';
 import GroupEvents from './views/groupEvents';
+import GroupHashes from './views/groupHashes';
 import GroupTags from './views/groupTags';
 import GroupTagValues from './views/groupTagValues';
 import GroupUserReports from './views/groupUserReports';
@@ -105,6 +106,7 @@ let routes = (
           <Route path="activity/" component={errorHandler(GroupActivity)} />
           <Route path="events/:eventId/" component={errorHandler(GroupEventDetails)} />
           <Route path="events/" component={errorHandler(GroupEvents)} />
+          <Route path="hashes/" component={errorHandler(GroupHashes)} />
           <Route path="tags/" component={errorHandler(GroupTags)} />
           <Route path="tags/:tagKey/" component={errorHandler(GroupTagValues)} />
           <Route path="reports/" component={errorHandler(GroupUserReports)} />
diff --git a/src/sentry/static/sentry/app/views/groupHashes.jsx b/src/sentry/static/sentry/app/views/groupHashes.jsx
new file mode 100644
index 0000000000..ad38a1da69
--- /dev/null
+++ b/src/sentry/static/sentry/app/views/groupHashes.jsx
@@ -0,0 +1,136 @@
+import React from 'react';
+import {History} from 'react-router';
+
+import ApiMixin from '../mixins/apiMixin';
+import GroupState from '../mixins/groupState';
+import LoadingError from '../components/loadingError';
+import LoadingIndicator from '../components/loadingIndicator';
+import Pagination from '../components/pagination';
+import {t} from '../locale';
+
+const GroupHashes = React.createClass({
+  mixins: [
+    ApiMixin,
+    GroupState,
+    History
+  ],
+
+  getInitialState() {
+    return {
+      hashList: [],
+      loading: true,
+      error: false,
+      pageLinks: '',
+    };
+  },
+
+  componentWillMount() {
+    this.fetchData();
+  },
+
+  componentWillReceiveProps(nextProps) {
+    if (nextProps.params.groupId !== this.props.params.groupId) {
+      this.setState({
+        hashList: [],
+        loading: true,
+        error: false,
+      }, this.fetchData);
+    }
+  },
+
+  getEndpoint() {
+    let params = this.props.params;
+    let queryParams = {
+      ...this.props.location.query,
+      limit: 50,
+    };
+
+    return `/issues/${params.groupId}/hashes/?${jQuery.param(queryParams)}`;
+  },
+
+  fetchData() {
+    let queryParams = this.props.location.query;
+
+    this.setState({
+      loading: true,
+      error: false
+    });
+
+    this.api.request(this.getEndpoint(), {
+      method: 'GET',
+      data: queryParams,
+      success: (data, _, jqXHR) => {
+        this.setState({
+          hashList: data,
+          error: false,
+          loading: false,
+          pageLinks: jqXHR.getResponseHeader('Link')
+        });
+      },
+      error: (error) => {
+        this.setState({
+          error: true,
+          loading: false
+        });
+      }
+    });
+  },
+
+  renderEmpty() {
+    return (
+      <div className="box empty-stream">
+        <span className="icon icon-exclamation" />
+        <p>{t('There don\'t seem to be any hashes for this issue.')}</p>
+      </div>
+    );
+  },
+
+  renderResults() {
+    let children = this.state.hashList.map((hash) => {
+      return (
+        <tr key={hash.id}>
+          <td>
+            <h5>{hash.id}</h5>
+          </td>
+        </tr>
+      );
+    });
+
+    return (
+      <div>
+        <table className="table">
+          <thead>
+            <tr>
+              <th>{t('ID')}</th>
+            </tr>
+          </thead>
+          <tbody>
+            {children}
+          </tbody>
+        </table>
+        <Pagination pageLinks={this.state.pageLinks}/>
+      </div>
+    );
+  },
+
+  renderBody() {
+    let body;
+
+    if (this.state.loading)
+      body = <LoadingIndicator />;
+    else if (this.state.error)
+      body = <LoadingError onRetry={this.fetchData} />;
+    else if (this.state.hashList.length > 0)
+      body = this.renderResults();
+    else
+      body = this.renderEmpty();
+
+    return body;
+  },
+
+  render() {
+    return this.renderBody();
+  }
+});
+
+export default GroupHashes;
