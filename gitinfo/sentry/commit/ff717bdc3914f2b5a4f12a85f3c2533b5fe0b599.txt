commit ff717bdc3914f2b5a4f12a85f3c2533b5fe0b599
Author: Lyn Nagara <lyn.nagara@gmail.com>
Date:   Thu Apr 5 13:43:10 2018 -0700

    feat(ui): Export tooltip for getsentry, use component instead of mixin (#7927)

diff --git a/src/sentry/static/sentry/app/components/actions/resolve.jsx b/src/sentry/static/sentry/app/components/actions/resolve.jsx
index 3f790521c9..67bd59b2dc 100644
--- a/src/sentry/static/sentry/app/components/actions/resolve.jsx
+++ b/src/sentry/static/sentry/app/components/actions/resolve.jsx
@@ -73,7 +73,6 @@ export default class ResolveActions extends React.Component {
           <Tooltip title={t('Unresolve')}>
             <a
               className={this.getButtonClass('active')}
-              title={t('Unresolve')}
               onClick={() => onUpdate({status: 'unresolved'})}
             >
               <span className="icon-checkmark" />
diff --git a/src/sentry/static/sentry/app/components/events/interfaces/crashHeader.jsx b/src/sentry/static/sentry/app/components/events/interfaces/crashHeader.jsx
index 913ba76ac7..6c439d144b 100644
--- a/src/sentry/static/sentry/app/components/events/interfaces/crashHeader.jsx
+++ b/src/sentry/static/sentry/app/components/events/interfaces/crashHeader.jsx
@@ -2,7 +2,7 @@ import PropTypes from 'prop-types';
 import React from 'react';
 import createReactClass from 'create-react-class';
 import SentryTypes from '../../../proptypes';
-import TooltipMixin from '../../../mixins/tooltip';
+import Tooltip from '../../tooltip';
 import {t} from '../../../locale';
 import GuideAnchor from '../../../components/assistant/guideAnchor';
 
@@ -23,14 +23,6 @@ const CrashHeader = createReactClass({
     onChange: PropTypes.func,
   },
 
-  mixins: [
-    TooltipMixin({
-      html: false,
-      selector: '.tip',
-      trigger: 'hover',
-    }),
-  ],
-
   hasSystemFrames() {
     const {stacktrace, thread, exception} = this.props;
     return (
@@ -102,14 +94,11 @@ const CrashHeader = createReactClass({
         <h3 className="pull-left">
           {this.props.title}
           <small style={{marginLeft: 5}}>
-            (<a
-              onClick={this.toggleOrder}
-              className="tip"
-              title={t('Toggle stacktrace order')}
-              style={{borderBottom: '1px dotted #aaa'}}
-            >
-              {newestFirst ? t('most recent call first') : t('most recent call last')}
-            </a>)
+            (<Tooltip title={t('Toggle stacktrace order')}>
+              <a onClick={this.toggleOrder} style={{borderBottom: '1px dotted #aaa'}}>
+                {newestFirst ? t('most recent call first') : t('most recent call last')}
+              </a>
+            </Tooltip>)
           </small>
         </h3>
         <div className="btn-group" style={{marginLeft: 10}}>
diff --git a/src/sentry/static/sentry/app/components/events/interfaces/frame.jsx b/src/sentry/static/sentry/app/components/events/interfaces/frame.jsx
index 851e41addc..75f4ade243 100644
--- a/src/sentry/static/sentry/app/components/events/interfaces/frame.jsx
+++ b/src/sentry/static/sentry/app/components/events/interfaces/frame.jsx
@@ -4,10 +4,10 @@ import createReactClass from 'create-react-class';
 import _ from 'lodash';
 import classNames from 'classnames';
 
-import ClippedBox from '../../../components/clippedBox';
-import TooltipMixin from '../../../mixins/tooltip';
+import ClippedBox from '../../clippedBox';
+import Tooltip from '../../tooltip';
 import StrictClick from '../../strictClick';
-import Truncate from '../../../components/truncate';
+import Truncate from '../../truncate';
 import {t} from '../../../locale';
 import {defined, objectIsEmpty, isUrl} from '../../../utils';
 
@@ -34,14 +34,6 @@ const Frame = createReactClass({
     timesRepeated: PropTypes.number,
   },
 
-  mixins: [
-    TooltipMixin({
-      html: true,
-      selector: '.tip',
-      trigger: 'hover',
-    }),
-  ],
-
   getDefaultProps() {
     return {
       isExpanded: false,
@@ -144,13 +136,11 @@ const Frame = createReactClass({
       // we want to show a litle (?) icon that on hover shows the actual filename
       if (shouldPrioritizeModuleName && data.filename) {
         title.push(
-          <a
-            key="real-filename"
-            className="in-at tip real-filename"
-            data-title={_.escape(data.filename)}
-          >
-            <span className="icon-question" />
-          </a>
+          <Tooltip title={_.escape(data.filename)}>
+            <a className="in-at real-filename">
+              <span className="icon-question" />
+            </a>
+          </Tooltip>
         );
       }
 
@@ -216,13 +206,11 @@ const Frame = createReactClass({
 
     if (defined(data.origAbsPath)) {
       title.push(
-        <a
-          key="original-src"
-          className="in-at tip original-src"
-          data-title={this.renderOriginalSourceInfo()}
-        >
-          <span className="icon-question" />
-        </a>
+        <Tooltip title={this.renderOriginalSourceInfo()}>
+          <a className="in-at original-src">
+            <span className="icon-question" />
+          </a>
+        </Tooltip>
       );
     }
 
diff --git a/src/sentry/static/sentry/app/components/fileChange.jsx b/src/sentry/static/sentry/app/components/fileChange.jsx
index 563d718916..371d417c9b 100644
--- a/src/sentry/static/sentry/app/components/fileChange.jsx
+++ b/src/sentry/static/sentry/app/components/fileChange.jsx
@@ -1,10 +1,9 @@
 import PropTypes from 'prop-types';
 import React from 'react';
 import createReactClass from 'create-react-class';
-import Avatar from '../components/avatar';
+import Avatar from './avatar';
 import IconFileGeneric from '../icons/icon-file-generic';
-
-import TooltipMixin from '../mixins/tooltip';
+import Tooltip from './tooltip';
 import ApiMixin from '../mixins/apiMixin';
 
 const FileChange = createReactClass({
@@ -16,12 +15,7 @@ const FileChange = createReactClass({
     types: PropTypes.object.isRequired,
   },
 
-  mixins: [
-    ApiMixin,
-    TooltipMixin({
-      selector: '.tip',
-    }),
-  ],
+  mixins: [ApiMixin],
 
   getInitialState() {
     return {
@@ -42,13 +36,11 @@ const FileChange = createReactClass({
           <div className="col-sm-3 avatar-grid align-right">
             {authors.map((author, i) => {
               return (
-                <span
-                  key={i}
-                  className="avatar-grid-item m-b-0 tip"
-                  title={author.name + ' ' + author.email}
-                >
-                  <Avatar user={author} />
-                </span>
+                <Tooltip key={i} title={`${author.name} ${author.email}`}>
+                  <span className="avatar-grid-item m-b-0">
+                    <Avatar user={author} />
+                  </span>
+                </Tooltip>
               );
             })}
           </div>
diff --git a/src/sentry/static/sentry/app/components/forms/multipleCheckboxField.jsx b/src/sentry/static/sentry/app/components/forms/multipleCheckboxField.jsx
index 22b2fa308d..68c50115a2 100644
--- a/src/sentry/static/sentry/app/components/forms/multipleCheckboxField.jsx
+++ b/src/sentry/static/sentry/app/components/forms/multipleCheckboxField.jsx
@@ -1,10 +1,9 @@
 import PropTypes from 'prop-types';
 import React from 'react';
-import ReactDOM from 'react-dom';
 import classNames from 'classnames';
-import jQuery from 'jquery';
 
 import FormField from './formField';
+import Tooltip from '../tooltip';
 
 import {defined} from '../../utils';
 
@@ -15,26 +14,6 @@ export default class MultipleCheckboxField extends FormField {
     choices: PropTypes.array.isRequired,
   };
 
-  // XXX(dcramer): this comes from TooltipMixin
-  componentDidMount() {
-    super.componentDidMount();
-    this.attachTooltips();
-  }
-
-  componentWillUnmount() {
-    this.removeTooltips();
-    jQuery(ReactDOM.findDOMNode(this)).unbind();
-    super.componentWillUnmount();
-  }
-
-  attachTooltips() {
-    jQuery('.tip', ReactDOM.findDOMNode(this)).tooltip();
-  }
-
-  removeTooltips() {
-    jQuery('.tip', ReactDOM.findDOMNode(this)).tooltip('destroy');
-  }
-
   onChange = (value, e) => {
     let allValues = this.state.value;
     if (e.target.checked) {
@@ -86,9 +65,11 @@ export default class MultipleCheckboxField extends FormField {
             >
               {label}
               {shouldShowDisabledReason && (
-                <span className="disabled-indicator tip" title={disabledReason}>
-                  <span className="icon-question" />
-                </span>
+                <Tooltip title={disabledReason}>
+                  <span className="disabled-indicator">
+                    <span className="icon-question" />
+                  </span>
+                </Tooltip>
               )}
             </label>
             {help && <p className="help-block">{help}</p>}
diff --git a/src/sentry/static/sentry/app/components/group/participants.jsx b/src/sentry/static/sentry/app/components/group/participants.jsx
index 3c1141a4e3..7728610f59 100644
--- a/src/sentry/static/sentry/app/components/group/participants.jsx
+++ b/src/sentry/static/sentry/app/components/group/participants.jsx
@@ -4,7 +4,7 @@ import React from 'react';
 import createReactClass from 'create-react-class';
 
 import Avatar from '../avatar';
-import TooltipMixin from '../../mixins/tooltip';
+import Tooltip from '../tooltip';
 import {userDisplayName} from '../../utils/formatters';
 
 const GroupParticipants = createReactClass({
@@ -14,12 +14,6 @@ const GroupParticipants = createReactClass({
     participants: PropTypes.array.isRequired,
   },
 
-  mixins: [
-    TooltipMixin({
-      selector: '.tip',
-    }),
-  ],
-
   render() {
     let participants = this.props.participants;
 
@@ -33,8 +27,10 @@ const GroupParticipants = createReactClass({
         <ul className="faces">
           {participants.map((user, i) => {
             return (
-              <li key={user.username} className="tip" title={userDisplayName(user)}>
-                <Avatar size={28} user={user} />
+              <li key={user.username}>
+                <Tooltip title={userDisplayName(user)}>
+                  <Avatar size={28} user={user} />
+                </Tooltip>
               </li>
             );
           })}
diff --git a/src/sentry/static/sentry/app/components/group/tagDistributionMeter.jsx b/src/sentry/static/sentry/app/components/group/tagDistributionMeter.jsx
index 18024b6073..bbe0d12173 100644
--- a/src/sentry/static/sentry/app/components/group/tagDistributionMeter.jsx
+++ b/src/sentry/static/sentry/app/components/group/tagDistributionMeter.jsx
@@ -4,7 +4,7 @@ import createReactClass from 'create-react-class';
 import {Link} from 'react-router';
 import ApiMixin from '../../mixins/apiMixin';
 import SentryTypes from '../../proptypes';
-import TooltipMixin from '../../mixins/tooltip';
+import Tooltip from '../tooltip';
 import {escape, percent, deviceNameMapper} from '../../utils';
 import {t} from '../../locale';
 import withEnvironment from '../../utils/withEnvironment';
@@ -21,14 +21,7 @@ const TagDistributionMeter = createReactClass({
     environment: SentryTypes.Environment,
   },
 
-  mixins: [
-    ApiMixin,
-    TooltipMixin({
-      html: true,
-      selector: '.segment',
-      container: 'body',
-    }),
-  ],
+  mixins: [ApiMixin],
 
   getInitialState() {
     return {
@@ -110,30 +103,31 @@ const TagDistributionMeter = createReactClass({
     return (
       <div className="segments">
         {data.topValues.map((value, index) => {
-          let pct = percent(value.count, totalValues);
-          let pctLabel = Math.floor(pct);
-          let className = 'segment segment-' + index;
+          const pct = percent(value.count, totalValues);
+          const pctLabel = Math.floor(pct);
+          const className = 'segment segment-' + index;
+
+          const tooltipHtml =
+            '<div class="truncate">' +
+            escape(deviceNameMapper(value.name) || '') +
+            '</div>' +
+            pctLabel +
+            '%';
 
           return (
-            <Link
-              key={value.id}
-              className={className}
-              style={{width: pct + '%'}}
-              to={`/${orgId}/${projectId}/issues/${this.props.group.id}/tags/${this.props
-                .tag}/`}
-              title={
-                '<div class="truncate">' +
-                escape(deviceNameMapper(value.name) || '') +
-                '</div>' +
-                pctLabel +
-                '%'
-              }
-            >
-              <span className="tag-description">
-                <span className="tag-percentage">{pctLabel}%</span>
-                <span className="tag-label">{deviceNameMapper(value.name)}</span>
-              </span>
-            </Link>
+            <Tooltip key={value.id} title={tooltipHtml} tooltipOptions={{html: true}}>
+              <Link
+                className={className}
+                style={{width: pct + '%'}}
+                to={`/${orgId}/${projectId}/issues/${this.props.group.id}/tags/${this
+                  .props.tag}/`}
+              >
+                <span className="tag-description">
+                  <span className="tag-percentage">{pctLabel}%</span>
+                  <span className="tag-label">{deviceNameMapper(value.name)}</span>
+                </span>
+              </Link>
+            </Tooltip>
           );
         })}
         {hasOther && (
diff --git a/src/sentry/static/sentry/app/components/latestDeployOrReleaseTime.jsx b/src/sentry/static/sentry/app/components/latestDeployOrReleaseTime.jsx
index e221741cef..554de78923 100644
--- a/src/sentry/static/sentry/app/components/latestDeployOrReleaseTime.jsx
+++ b/src/sentry/static/sentry/app/components/latestDeployOrReleaseTime.jsx
@@ -2,7 +2,7 @@ import PropTypes from 'prop-types';
 import React from 'react';
 import createReactClass from 'create-react-class';
 import ApiMixin from '../mixins/apiMixin';
-import TooltipMixin from '../mixins/tooltip';
+import Tooltip from './tooltip';
 import TimeSince from './timeSince';
 import {t} from '../locale';
 
@@ -14,17 +14,7 @@ const LatestDeployOrReleaseTime = createReactClass({
     release: PropTypes.object.isRequired,
   },
 
-  mixins: [
-    ApiMixin,
-    TooltipMixin({
-      selector: '.tip',
-    }),
-  ],
-
-  componentDidUpdate(prevProps, prevState) {
-    this.removeTooltips();
-    this.attachTooltips();
-  },
+  mixins: [ApiMixin],
 
   render() {
     let {release} = this.props;
@@ -54,9 +44,9 @@ const LatestDeployOrReleaseTime = createReactClass({
               <span className="icon icon-clock" />{' '}
               <TimeSince date={latestDeploy.dateFinished} />
               {earlierDeploysNum > 0 && (
-                <span className="tip" title={earlierDeploysNum + t(' earlier deploys')}>
+                <Tooltip title={earlierDeploysNum + t(' earlier deploys')}>
                   <span className="badge">{earlierDeploysNum}</span>
-                </span>
+                </Tooltip>
               )}
             </p>
           </div>
diff --git a/src/sentry/static/sentry/app/components/organizations/homeContainer.jsx b/src/sentry/static/sentry/app/components/organizations/homeContainer.jsx
index 95a7e6091f..b2a12d5ec6 100644
--- a/src/sentry/static/sentry/app/components/organizations/homeContainer.jsx
+++ b/src/sentry/static/sentry/app/components/organizations/homeContainer.jsx
@@ -5,7 +5,7 @@ import createReactClass from 'create-react-class';
 import OrganizationHomeSidebar from './homeSidebar';
 import OrganizationState from '../../mixins/organizationState';
 import ProjectSelector from '../projectHeader/projectSelector';
-import TooltipMixin from '../../mixins/tooltip';
+import Tooltip from '../../components/tooltip';
 import {t} from '../../locale';
 
 import Button from '../../components/buttons/button';
@@ -13,12 +13,7 @@ import Button from '../../components/buttons/button';
 const HomeContainer = createReactClass({
   displayName: 'HomeContainer',
 
-  mixins: [
-    OrganizationState,
-    TooltipMixin({
-      selector: '.tip',
-    }),
-  ],
+  mixins: [OrganizationState],
 
   render() {
     let org = this.getOrganization();
@@ -40,31 +35,33 @@ const HomeContainer = createReactClass({
                 {t('New Project')}
               </Button>
             ) : (
-              <Button
-                priority="primary"
-                disabled
-                className="tip"
-                data-placement="bottom"
+              <Tooltip
                 title={t('You do not have enough permission to create new projects')}
-                style={{marginRight: 5}}
+                tooltipOptions={{placement: 'bottom'}}
               >
-                {t('New Project')}
-              </Button>
+                <Button
+                  priority="primary"
+                  disabled
+                  data-placement="bottom"
+                  style={{marginRight: 5}}
+                >
+                  {t('New Project')}
+                </Button>
+              </Tooltip>
             )}
             {access.has('team:write') ? (
               <Button to={`/organizations/${org.slug}/teams/new/`} priority="primary">
                 {t('New Team')}
               </Button>
             ) : (
-              <Button
-                priority="primary"
-                disabled
-                className="tip"
-                data-placement="bottom"
+              <Tooltip
                 title={t('You do not have enough permission to create new teams')}
+                tooltipOptions={{placement: 'bottom'}}
               >
-                {t('New Team')}
-              </Button>
+                <Button priority="primary" disabled>
+                  {t('New Team')}
+                </Button>
+              </Tooltip>
             )}
           </div>
         </div>
diff --git a/src/sentry/static/sentry/app/components/releaseStats.jsx b/src/sentry/static/sentry/app/components/releaseStats.jsx
index 99e765e63c..61a463a9fb 100644
--- a/src/sentry/static/sentry/app/components/releaseStats.jsx
+++ b/src/sentry/static/sentry/app/components/releaseStats.jsx
@@ -2,7 +2,7 @@ import PropTypes from 'prop-types';
 import React from 'react';
 import createReactClass from 'create-react-class';
 import Avatar from './avatar';
-import TooltipMixin from '../mixins/tooltip';
+import Tooltip from '../components/tooltip';
 import {t} from '../locale';
 
 const ReleaseStats = createReactClass({
@@ -12,12 +12,6 @@ const ReleaseStats = createReactClass({
     release: PropTypes.object,
   },
 
-  mixins: [
-    TooltipMixin({
-      selector: '.tip',
-    }),
-  ],
-
   render() {
     let release = this.props.release;
     let commitCount = release.commitCount || 0;
@@ -39,13 +33,11 @@ const ReleaseStats = createReactClass({
         <div className="avatar-grid">
           {release.authors.map((author, i) => {
             return (
-              <span
-                key={i}
-                className="avatar-grid-item tip"
-                title={author.name + ' ' + author.email}
-              >
-                <Avatar user={author} />
-              </span>
+              <Tooltip key={i} title={`${author.name} ${author.email}`}>
+                <span className="avatar-grid-item">
+                  <Avatar user={author} />
+                </span>
+              </Tooltip>
             );
           })}
         </div>
diff --git a/src/sentry/static/sentry/app/index.js b/src/sentry/static/sentry/app/index.js
index ab9d9f6fd4..e2f5dfa727 100644
--- a/src/sentry/static/sentry/app/index.js
+++ b/src/sentry/static/sentry/app/index.js
@@ -158,6 +158,7 @@ export default {
     TextBlock: require('./views/settings/components/text/textBlock').default,
     TimeSince: require('./components/timeSince').default,
     TodoList: require('./components/onboardingWizard/todos').default,
+    Tooltip: require('./components/tooltip').default,
     U2fEnrollment: require('./components/u2fenrollment').default,
     U2fSign: require('./components/u2fsign').default,
     Badge: require('./components/badge').default,
diff --git a/src/sentry/static/sentry/app/views/groupDetails/eventToolbar.jsx b/src/sentry/static/sentry/app/views/groupDetails/eventToolbar.jsx
index 99bbc81c87..b057143c84 100644
--- a/src/sentry/static/sentry/app/views/groupDetails/eventToolbar.jsx
+++ b/src/sentry/static/sentry/app/views/groupDetails/eventToolbar.jsx
@@ -9,7 +9,7 @@ import ConfigStore from '../../stores/configStore';
 import SentryTypes from '../../proptypes';
 import DateTime from '../../components/dateTime';
 import FileSize from '../../components/fileSize';
-import TooltipMixin from '../../mixins/tooltip';
+import Tooltip from '../../components/tooltip';
 import {t} from '../../locale';
 
 let formatDateDelta = (reference, observed) => {
@@ -43,13 +43,6 @@ let GroupEventToolbar = createReactClass({
     event: SentryTypes.Event.isRequired,
   },
 
-  mixins: [
-    TooltipMixin({
-      html: true,
-      selector: '.tip',
-    }),
-  ],
-
   shouldComponentUpdate(nextProps, nextState) {
     return this.props.event.id !== nextProps.event.id;
   },
@@ -175,11 +168,12 @@ let GroupEventToolbar = createReactClass({
           </Link>
         </h4>
         <span>
-          {/* use a key here to force removal of tooltip parent - fixes #3341 */}
-          <span className="tip" data-title={this.getDateTooltip()} key={evt.id}>
-            <DateTime date={evt.dateCreated} style={style} />
-            {isOverLatencyThreshold && <span className="icon-alert" />}
-          </span>
+          <Tooltip title={this.getDateTooltip()} tooltipOptions={{html: true}}>
+            <React.Fragment>
+              <DateTime date={evt.dateCreated} style={style} />
+              {isOverLatencyThreshold && <span className="icon-alert" />}
+            </React.Fragment>
+          </Tooltip>
           <a href={jsonUrl} target="_blank" className="json-link">
             {'JSON'} (<FileSize bytes={evt.size} />)
           </a>
diff --git a/src/sentry/static/sentry/app/views/groupDetails/header.jsx b/src/sentry/static/sentry/app/views/groupDetails/header.jsx
index fbc11f6de7..064ed424ee 100644
--- a/src/sentry/static/sentry/app/views/groupDetails/header.jsx
+++ b/src/sentry/static/sentry/app/views/groupDetails/header.jsx
@@ -13,7 +13,7 @@ import ShortId from '../../components/shortId';
 import EventOrGroupTitle from '../../components/eventOrGroupTitle';
 import GuideAnchor from '../../components/assistant/guideAnchor';
 import ProjectState from '../../mixins/projectState';
-import TooltipMixin from '../../mixins/tooltip';
+import Tooltip from '../../components/tooltip';
 import {t} from '../../locale';
 
 const GroupHeader = createReactClass({
@@ -27,13 +27,7 @@ const GroupHeader = createReactClass({
     location: PropTypes.object,
   },
 
-  mixins: [
-    ApiMixin,
-    ProjectState,
-    TooltipMixin({
-      selector: '.tip',
-    }),
-  ],
+  mixins: [ApiMixin, ProjectState],
 
   onToggleMute() {
     let group = this.props.group;
@@ -139,15 +133,18 @@ const GroupHeader = createReactClass({
                 <div className="short-id-box count align-right">
                   <h6 className="nav-header">
                     <GuideAnchor target="issue_number" type="text" />
-                    <a
-                      className="help-link tip"
+                    <Tooltip
                       title={t(
                         'This identifier is unique across your organization, and can be used to reference an issue in various places, like commit messages.'
                       )}
-                      href="https://docs.sentry.io/learn/releases/#resolving-issues-via-commits"
                     >
-                      {t('Issue #')}
-                    </a>
+                      <a
+                        className="help-link"
+                        href="https://docs.sentry.io/learn/releases/#resolving-issues-via-commits"
+                      >
+                        {t('Issue #')}
+                      </a>
+                    </Tooltip>
                   </h6>
                   <ShortId shortId={group.shortId} />
                 </div>
diff --git a/src/sentry/static/sentry/app/views/groupDetails/seenBy.jsx b/src/sentry/static/sentry/app/views/groupDetails/seenBy.jsx
index 2311b07870..f450e61745 100644
--- a/src/sentry/static/sentry/app/views/groupDetails/seenBy.jsx
+++ b/src/sentry/static/sentry/app/views/groupDetails/seenBy.jsx
@@ -7,19 +7,13 @@ import ConfigStore from '../../stores/configStore';
 import Avatar from '../../components/avatar';
 import GroupState from '../../mixins/groupState';
 import {userDisplayName} from '../../utils/formatters';
-import TooltipMixin from '../../mixins/tooltip';
+import Tooltip from '../../components/tooltip';
 import {t} from '../../locale';
 
 const GroupSeenBy = createReactClass({
   displayName: 'GroupSeenBy',
 
-  mixins: [
-    GroupState,
-    TooltipMixin({
-      html: true,
-      selector: '.tip',
-    }),
-  ],
+  mixins: [GroupState],
 
   render() {
     let activeUser = ConfigStore.get('user');
@@ -47,8 +41,10 @@ const GroupSeenBy = createReactClass({
           '<br/>' +
           _.escape(moment(user.lastSeen).format('LL'));
         return (
-          <li key={userIdx} className="tip" data-title={title}>
-            <Avatar size={28} user={user} />
+          <li key={userIdx}>
+            <Tooltip title={title}>
+              <Avatar size={28} user={user} />
+            </Tooltip>
           </li>
         );
       });
@@ -57,7 +53,9 @@ const GroupSeenBy = createReactClass({
       <div className="seen-by">
         <ul>
           <li>
-            <span className="icon-eye tip" title={t("People who've viewed this issue")} />
+            <Tooltip title={t("People who've viewed this issue")}>
+              <span className="icon-eye" />
+            </Tooltip>
           </li>
           {seenByNodes}
         </ul>
