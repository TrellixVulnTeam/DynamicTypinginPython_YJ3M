commit 69ba8080fe231d0daf82c1b390f2009e7b1521c4
Author: Matej Minar <matej.minar@sentry.io>
Date:   Mon Apr 6 14:39:33 2020 +0200

    ref(ui): Reuse OptionSelector in release detail, responsive tweaks (#18100)

diff --git a/src/sentry/static/sentry/app/components/charts/optionSelector.tsx b/src/sentry/static/sentry/app/components/charts/optionSelector.tsx
index 7c249e935e..652ff42940 100644
--- a/src/sentry/static/sentry/app/components/charts/optionSelector.tsx
+++ b/src/sentry/static/sentry/app/components/charts/optionSelector.tsx
@@ -13,16 +13,17 @@ type Props = {
   selected: string;
   onChange: (value: string) => void;
   title: string;
+  menuWidth?: string;
 };
 
-function OptionSelector({options, onChange, selected, title}: Props) {
+function OptionSelector({options, onChange, selected, title, menuWidth = 'auto'}: Props) {
   const selectedOption = options.find(opt => selected === opt.value) || options[0];
 
   return (
     <InlineContainer>
       <SectionHeading>{title}</SectionHeading>
       <DropdownControl
-        menuWidth="auto"
+        menuWidth={menuWidth}
         alignRight
         button={({getActorProps}) => (
           <StyledDropdownButton {...getActorProps()} size="zero" isOpen={false}>
diff --git a/src/sentry/static/sentry/app/views/releasesV2/detail/overview/chart/releaseChartControls.tsx b/src/sentry/static/sentry/app/views/releasesV2/detail/overview/chart/releaseChartControls.tsx
index c021fb5d2a..47010e66cc 100644
--- a/src/sentry/static/sentry/app/views/releasesV2/detail/overview/chart/releaseChartControls.tsx
+++ b/src/sentry/static/sentry/app/views/releasesV2/detail/overview/chart/releaseChartControls.tsx
@@ -1,16 +1,15 @@
 import React from 'react';
-import styled from '@emotion/styled';
 
 import {t} from 'app/locale';
-import space from 'app/styles/space';
 import {
   ChartControls,
   InlineContainer,
   SectionHeading,
   SectionValue,
 } from 'app/components/charts/styles';
-import DropdownButton from 'app/components/dropdownButton';
-import DropdownControl, {DropdownItem} from 'app/components/dropdownControl';
+import OptionSelector from 'app/components/charts/optionSelector';
+import styled from 'app/styled';
+import space from 'app/styles/space';
 
 export enum YAxis {
   SESSIONS = 'sessions',
@@ -60,49 +59,31 @@ const ReleaseChartControls = ({summary, yAxis, onYAxisChange}: Props) => {
   };
 
   return (
-    <ChartControls>
+    <StyledChartControls>
       <InlineContainer>
         <SectionHeading key="total-label">{getSummaryHeading()}</SectionHeading>
         <SectionValue key="total-value">{summary}</SectionValue>
       </InlineContainer>
 
-      {/* TODO(releasesV2): this will be down the road replaced with discover's OptionSelector */}
-      <InlineContainer>
-        <SectionHeading>{t('Y-Axis')}</SectionHeading>
-        <DropdownControl
-          alignRight
-          menuWidth="150px"
-          button={({getActorProps}) => (
-            <StyledDropdownButton {...getActorProps()} size="zero" isOpen={false}>
-              {yAxisOptions.find(option => option.value === yAxis)?.label}
-            </StyledDropdownButton>
-          )}
-        >
-          {yAxisOptions.map(option => (
-            <DropdownItem
-              key={option.value}
-              onSelect={onYAxisChange}
-              eventKey={option.value}
-              isActive={option.value === yAxis}
-            >
-              {option.label}
-            </DropdownItem>
-          ))}
-        </DropdownControl>
-      </InlineContainer>
-    </ChartControls>
+      <OptionSelector
+        title={t('Y-Axis')}
+        selected={yAxis}
+        options={yAxisOptions}
+        onChange={onYAxisChange as (value: string) => void}
+        menuWidth="150px"
+      />
+    </StyledChartControls>
   );
 };
 
-const StyledDropdownButton = styled(DropdownButton)`
-  padding: ${space(1)} ${space(2)};
-  font-weight: normal;
-  color: ${p => p.theme.gray3};
-
-  &:hover,
-  &:focus,
-  &:active {
-    color: ${p => p.theme.gray4};
+const StyledChartControls = styled(ChartControls)`
+  @media (max-width: ${p => p.theme.breakpoints[0]}) {
+    display: grid;
+    grid-gap: ${space(1)};
+    padding-bottom: ${space(1.5)};
+    button {
+      font-size: ${p => p.theme.fontSizeSmall};
+    }
   }
 `;
 
diff --git a/src/sentry/static/sentry/app/views/releasesV2/detail/overview/index.tsx b/src/sentry/static/sentry/app/views/releasesV2/detail/overview/index.tsx
index a90d79c7db..fd807772ac 100644
--- a/src/sentry/static/sentry/app/views/releasesV2/detail/overview/index.tsx
+++ b/src/sentry/static/sentry/app/views/releasesV2/detail/overview/index.tsx
@@ -143,7 +143,7 @@ const ContentBox = styled('div')`
   flex: 1;
   background-color: white;
 
-  @media (min-width: ${p => p.theme.breakpoints[1]}) {
+  @media (min-width: ${p => p.theme.breakpoints[0]}) {
     display: grid;
     grid-column-gap: ${space(3)};
     grid-template-columns: minmax(470px, 1fr) minmax(220px, 280px);
diff --git a/src/sentry/static/sentry/app/views/releasesV2/detail/overview/issues.tsx b/src/sentry/static/sentry/app/views/releasesV2/detail/overview/issues.tsx
index 5c3f64d872..043f84bc09 100644
--- a/src/sentry/static/sentry/app/views/releasesV2/detail/overview/issues.tsx
+++ b/src/sentry/static/sentry/app/views/releasesV2/detail/overview/issues.tsx
@@ -17,6 +17,7 @@ import {GlobalSelection} from 'app/types';
 import Feature from 'app/components/acl/feature';
 import {URL_PARAM} from 'app/constants/globalSelectionHeader';
 import {getUtcDateString} from 'app/utils/dates';
+import DropdownButton from 'app/components/dropdownButton';
 
 enum IssuesType {
   NEW = 'new',
@@ -154,8 +155,12 @@ class Issues extends React.Component<Props, State> {
       <React.Fragment>
         <ControlsWrapper>
           <DropdownControl
-            label={this.renderFilterLabel(
-              issuesTypes.find(i => i.value === issuesType)?.label
+            button={({getActorProps}) => (
+              <FilterButton {...getActorProps()} isOpen={false}>
+                {this.renderFilterLabel(
+                  issuesTypes.find(i => i.value === issuesType)?.label
+                )}
+              </FilterButton>
             )}
           >
             {issuesTypes.map(({value, label}) => (
@@ -171,7 +176,9 @@ class Issues extends React.Component<Props, State> {
           </DropdownControl>
 
           <Feature features={['discover-basic']}>
-            <Button to={this.getDiscoverUrl()}>{t('Open in Discover')}</Button>
+            <DiscoverButton to={this.getDiscoverUrl()}>
+              {t('Open in Discover')}
+            </DiscoverButton>
           </Feature>
         </ControlsWrapper>
 
@@ -191,11 +198,19 @@ class Issues extends React.Component<Props, State> {
   }
 }
 
+const FilterButton = styled(DropdownButton)``;
+const DiscoverButton = styled(Button)``;
+
 const ControlsWrapper = styled('div')`
   display: flex;
   align-items: center;
   justify-content: space-between;
   margin-bottom: ${space(1)};
+  @media (max-width: ${p => p.theme.breakpoints[0]}) {
+    ${FilterButton}, ${DiscoverButton} {
+      font-size: ${p => p.theme.fontSizeSmall};
+    }
+  }
 `;
 
 const TableWrapper = styled('div')`
