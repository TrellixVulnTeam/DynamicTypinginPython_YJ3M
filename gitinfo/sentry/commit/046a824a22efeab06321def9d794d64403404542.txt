commit 046a824a22efeab06321def9d794d64403404542
Author: Stephen Cefali <scefali@sentry.io>
Date:   Tue Mar 31 10:22:22 2020 -0700

    feat(ecosystem): update integration features (#17995)

diff --git a/src/sentry/integrations/base.py b/src/sentry/integrations/base.py
index 16d41f95ce..01b0481551 100644
--- a/src/sentry/integrations/base.py
+++ b/src/sentry/integrations/base.py
@@ -90,12 +90,13 @@ class IntegrationFeatures(Enum):
     *must* match the suffix of the organization feature flag name.
     """
 
-    ACTION_NOTIFICATION = "actionable-notification"
+    INCIDENT_MANAGEMENT = "incident-management"
     ISSUE_BASIC = "issue-basic"
     ISSUE_SYNC = "issue-sync"
     COMMITS = "commits"
     CHAT_UNFURL = "chat-unfurl"
     ALERT_RULE = "alert-rule"
+    MOBILE = "mobile"
     # features currently only existing on plugins:
     DATA_FORWARDING = "data-forwarding"
     SESSION_REPLAY = "session-replay"
diff --git a/src/sentry/integrations/github/integration.py b/src/sentry/integrations/github/integration.py
index e67a55a50b..2fea18cbe0 100644
--- a/src/sentry/integrations/github/integration.py
+++ b/src/sentry/integrations/github/integration.py
@@ -33,14 +33,6 @@ linking up your GitHub issues and pull requests directly to issues in Sentry.
 """
 
 FEATURES = [
-    FeatureDescription(
-        """
-        Create and link Sentry issue groups directly to a GitHub issue or pull
-        request in any of your repositories, providing a quick way to jump from
-        Sentry bug to tracked issue or PR!
-        """,
-        IntegrationFeatures.ISSUE_BASIC,
-    ),
     FeatureDescription(
         """
         Authorize repositories to be added to your Sentry organization to augment
@@ -49,6 +41,14 @@ FEATURES = [
         """,
         IntegrationFeatures.COMMITS,
     ),
+    FeatureDescription(
+        """
+        Create and link Sentry issue groups directly to a GitHub issue or pull
+        request in any of your repositories, providing a quick way to jump from
+        Sentry bug to tracked issue or PR!
+        """,
+        IntegrationFeatures.ISSUE_BASIC,
+    ),
 ]
 
 disable_dialog = {
diff --git a/src/sentry/integrations/github_enterprise/integration.py b/src/sentry/integrations/github_enterprise/integration.py
index 74cc4cddde..dd9e3b67ed 100644
--- a/src/sentry/integrations/github_enterprise/integration.py
+++ b/src/sentry/integrations/github_enterprise/integration.py
@@ -35,14 +35,6 @@ Sentry.
 """
 
 FEATURES = [
-    FeatureDescription(
-        """
-        Create and link Sentry issue groups directly to a GitHub issue or pull
-        request in any of your repositories, providing a quick way to jump from
-        Sentry bug to tracked issue or PR!
-        """,
-        IntegrationFeatures.ISSUE_BASIC,
-    ),
     FeatureDescription(
         """
         Authorize repositories to be added to your Sentry organization to augment
@@ -51,6 +43,14 @@ FEATURES = [
         """,
         IntegrationFeatures.COMMITS,
     ),
+    FeatureDescription(
+        """
+        Create and link Sentry issue groups directly to a GitHub issue or pull
+        request in any of your repositories, providing a quick way to jump from
+        Sentry bug to tracked issue or PR!
+        """,
+        IntegrationFeatures.ISSUE_BASIC,
+    ),
 ]
 
 
diff --git a/src/sentry/integrations/pagerduty/integration.py b/src/sentry/integrations/pagerduty/integration.py
index f788512b7f..f3a8528f04 100644
--- a/src/sentry/integrations/pagerduty/integration.py
+++ b/src/sentry/integrations/pagerduty/integration.py
@@ -29,13 +29,19 @@ incidents triggered from Sentry alerts.
 """
 
 FEATURES = [
+    FeatureDescription(
+        """
+        Manage incidents and outages by sending Sentry notifications to PagerDuty.
+        """,
+        IntegrationFeatures.INCIDENT_MANAGEMENT,
+    ),
     FeatureDescription(
         """
         Configure rule based PagerDuty alerts to automatically be triggered in a specific
         service - or in multiple services!
         """,
         IntegrationFeatures.ALERT_RULE,
-    )
+    ),
 ]
 
 setup_alert = {
diff --git a/src/sentry/integrations/slack/integration.py b/src/sentry/integrations/slack/integration.py
index d61b6847ee..dadfb8b614 100644
--- a/src/sentry/integrations/slack/integration.py
+++ b/src/sentry/integrations/slack/integration.py
@@ -25,16 +25,10 @@ FEATURES = [
     FeatureDescription(
         """
         Unfurls Sentry URLs directly within Slack, providing you context and
-        actionability on issues right at your fingertips.
+        actionability on issues right at your fingertips. Resolve, ignore, and assign issues with minimal context switching.
         """,
         IntegrationFeatures.CHAT_UNFURL,
     ),
-    FeatureDescription(
-        """
-        Resolve, ignore, and assign issues with minimal context switching.
-        """,
-        IntegrationFeatures.ACTION_NOTIFICATION,
-    ),
     FeatureDescription(
         """
         Configure rule based Slack notifications to automatically be posted into a
@@ -65,13 +59,7 @@ class SlackIntegrationProvider(IntegrationProvider):
     key = "slack"
     name = "Slack"
     metadata = metadata
-    features = frozenset(
-        [
-            IntegrationFeatures.ACTION_NOTIFICATION,
-            IntegrationFeatures.CHAT_UNFURL,
-            IntegrationFeatures.ALERT_RULE,
-        ]
-    )
+    features = frozenset([IntegrationFeatures.CHAT_UNFURL, IntegrationFeatures.ALERT_RULE])
 
     # Scopes differ depending on if it's a workspace app
     identity_oauth_scopes = (
diff --git a/src/sentry/integrations/vsts/integration.py b/src/sentry/integrations/vsts/integration.py
index d47e44f2c6..cbfcba1c10 100644
--- a/src/sentry/integrations/vsts/integration.py
+++ b/src/sentry/integrations/vsts/integration.py
@@ -46,6 +46,14 @@ your Sentry and Azure DevOps organization together.
 """
 
 FEATURES = [
+    FeatureDescription(
+        """
+        Authorize repositories to be added to your Sentry organization to augment
+        sentry issues with commit data with [deployment
+        tracking](https://docs.sentry.io/learn/releases/).
+        """,
+        IntegrationFeatures.COMMITS,
+    ),
     FeatureDescription(
         """
         Create and link Sentry issue groups directly to a Azure DevOps work item in any of
@@ -56,7 +64,7 @@ FEATURES = [
     ),
     FeatureDescription(
         """
-        Automatically synchronize assignees to and from Azure DevOps. Don't get
+        Automatically synchronize comments and assignees to and from Azure DevOps. Don't get
         confused who's fixing what, let us handle ensuring your issues and work
         items match up to your Sentry and Azure DevOps assignees.
         """,
@@ -69,13 +77,6 @@ FEATURES = [
         """,
         IntegrationFeatures.ISSUE_SYNC,
     ),
-    FeatureDescription(
-        """
-        Synchronize comments on Sentry Issues directly to the linked Azure
-        DevOps workitems.
-        """,
-        IntegrationFeatures.ISSUE_SYNC,
-    ),
 ]
 
 metadata = IntegrationMetadata(
diff --git a/src/sentry/models/integrationfeature.py b/src/sentry/models/integrationfeature.py
index 5039f07b8b..f6233faae1 100644
--- a/src/sentry/models/integrationfeature.py
+++ b/src/sentry/models/integrationfeature.py
@@ -29,34 +29,39 @@ class Feature(object):
 
     @classmethod
     def as_str(cls, feature):
-        if feature == cls.API:
-            return "integrations-api"
-        elif feature == cls.ISSUE_LINK:
+        if feature == cls.ISSUE_LINK:
             return "integrations-issue-link"
-        elif feature == cls.STACKTRACE_LINK:
+        if feature == cls.STACKTRACE_LINK:
             return "integrations-stacktrace-link"
-        elif feature == cls.EVENT_HOOKS:
+        if feature == cls.EVENT_HOOKS:
             return "integrations-event-hooks"
-        elif feature == cls.PROJECT_MANAGEMENT:
+        if feature == cls.PROJECT_MANAGEMENT:
             return "integrations-project-management"
-        elif feature == cls.INCIDENT_MANAGEMENT:
+        if feature == cls.INCIDENT_MANAGEMENT:
             return "integrations-incident-management"
-        elif feature == cls.FEATURE_FLAG:
+        if feature == cls.FEATURE_FLAG:
             return "integrations-feature-flag"
+        return "integrations-api"
 
     @classmethod
     def description(cls, feature, name):
-        if feature in [cls.API, cls.PROJECT_MANAGEMENT, cls.INCIDENT_MANAGEMENT, cls.FEATURE_FLAG]:
-            return (
-                "%s can **utilize the Sentry API** to pull data or update resources in Sentry (with permissions granted, of course)."
-                % name
-            )
-        elif feature == cls.ISSUE_LINK:
+        if feature == cls.PROJECT_MANAGEMENT:
+            return "Create or link issues in %s from Sentry issue groups." % name
+        if feature == cls.INCIDENT_MANAGEMENT:
+            return "Manage incidents and outages by sending Sentry notifications to %s." % name
+        if feature == cls.FEATURE_FLAG:
+            return "Improve visibility into feature flagging by sending Sentry errors to %s." % name
+        if feature == cls.ISSUE_LINK:
             return "Organizations can **create or link Sentry issues** to another service."
-        elif feature == cls.STACKTRACE_LINK:
+        if feature == cls.STACKTRACE_LINK:
             return "Organizations can **open a line to Sentry's stack trace** in another service."
-        elif feature == cls.EVENT_HOOKS:
+        if feature == cls.EVENT_HOOKS:
             return "%s allows organizations to **forward events to another service**." % name
+        # default
+        return (
+            "%s can **utilize the Sentry API** to pull data or update resources in Sentry (with permissions granted, of course)."
+            % name
+        )
 
 
 class IntegrationFeature(Model):
@@ -79,5 +84,4 @@ class IntegrationFeature(Model):
     def description(self):
         if self.user_description:
             return self.user_description
-        else:
-            return Feature.description(self.feature, self.sentry_app.name)
+        return Feature.description(self.feature, self.sentry_app.name)
diff --git a/src/sentry_plugins/github/plugin.py b/src/sentry_plugins/github/plugin.py
index 07ab832949..085226aefd 100644
--- a/src/sentry_plugins/github/plugin.py
+++ b/src/sentry_plugins/github/plugin.py
@@ -71,14 +71,6 @@ class GitHubPlugin(GitHubMixin, IssuePlugin2):
     required_field = "repo"
     logger = logging.getLogger("sentry.plugins.github")
     feature_descriptions = [
-        FeatureDescription(
-            """
-            Create and link Sentry issue groups directly to a GitHub issue or pull
-            request in any of your repositories, providing a quick way to jump from
-            Sentry bug to tracked issue or PR!
-            """,
-            IntegrationFeatures.ISSUE_BASIC,
-        ),
         FeatureDescription(
             """
             Authorize repositories to be added to your Sentry organization to augment
@@ -87,6 +79,14 @@ class GitHubPlugin(GitHubMixin, IssuePlugin2):
             """,
             IntegrationFeatures.COMMITS,
         ),
+        FeatureDescription(
+            """
+            Create and link Sentry issue groups directly to a GitHub issue or pull
+            request in any of your repositories, providing a quick way to jump from
+            Sentry bug to tracked issue or PR!
+            """,
+            IntegrationFeatures.ISSUE_BASIC,
+        ),
     ]
 
     def get_group_urls(self):
diff --git a/src/sentry_plugins/opsgenie/plugin.py b/src/sentry_plugins/opsgenie/plugin.py
index 1ba2ff0222..1ad8ef0201 100644
--- a/src/sentry_plugins/opsgenie/plugin.py
+++ b/src/sentry_plugins/opsgenie/plugin.py
@@ -57,10 +57,16 @@ class OpsGeniePlugin(CorePluginMixin, notify.NotificationPlugin):
     feature_descriptions = [
         FeatureDescription(
             """
-            Configure rule based OpsGenie alerts to automatically be triggered.
+            Manage incidents and outages by sending Sentry notifications to OpsGenie.
+            """,
+            IntegrationFeatures.INCIDENT_MANAGEMENT,
+        ),
+        FeatureDescription(
+            """
+            Configure Sentry rules to trigger notifications based on conditions you set.
             """,
             IntegrationFeatures.ALERT_RULE,
-        )
+        ),
     ]
 
     logger = logging.getLogger("sentry.plugins.opsgenie")
diff --git a/src/sentry_plugins/pagerduty/plugin.py b/src/sentry_plugins/pagerduty/plugin.py
index 78141efadd..3cccb2dc2c 100644
--- a/src/sentry_plugins/pagerduty/plugin.py
+++ b/src/sentry_plugins/pagerduty/plugin.py
@@ -20,13 +20,19 @@ class PagerDutyPlugin(CorePluginMixin, NotifyPlugin):
     conf_title = title
     required_field = "service_key"
     feature_descriptions = [
+        FeatureDescription(
+            """
+            Manage incidents and outages by sending Sentry notifications to PagerDuty.
+            """,
+            IntegrationFeatures.INCIDENT_MANAGEMENT,
+        ),
         FeatureDescription(
             """
             Configure rule based PagerDuty alerts to automatically be triggered in a specific
             service - or in multiple services!
             """,
             IntegrationFeatures.ALERT_RULE,
-        )
+        ),
     ]
 
     def error_message_from_json(self, data):
diff --git a/src/sentry_plugins/pushover/plugin.py b/src/sentry_plugins/pushover/plugin.py
index 28205115fb..4ffa679b20 100644
--- a/src/sentry_plugins/pushover/plugin.py
+++ b/src/sentry_plugins/pushover/plugin.py
@@ -29,10 +29,16 @@ class PushoverPlugin(CorePluginMixin, NotifyPlugin):
     feature_descriptions = [
         FeatureDescription(
             """
-            Configure rule based Pushover notifications to be sent.
+            Have Pushover notifications get sent to your mobile device with the Pushover app.
+            """,
+            IntegrationFeatures.MOBILE,
+        ),
+        FeatureDescription(
+            """
+            Configure Sentry rules to trigger notifications based on conditions you set.
             """,
             IntegrationFeatures.ALERT_RULE,
-        )
+        ),
     ]
 
     def is_configured(self, project):
diff --git a/src/sentry_plugins/twilio/plugin.py b/src/sentry_plugins/twilio/plugin.py
index 03cea45c50..3fd37f5dfc 100644
--- a/src/sentry_plugins/twilio/plugin.py
+++ b/src/sentry_plugins/twilio/plugin.py
@@ -125,10 +125,16 @@ class TwilioPlugin(CorePluginMixin, NotificationPlugin):
     feature_descriptions = [
         FeatureDescription(
             """
-            Configure rule based SMS notifications to be sent via Twilio.
+            Set up SMS notifications to be sent to your mobile device via Twilio.
+            """,
+            IntegrationFeatures.MOBILE,
+        ),
+        FeatureDescription(
+            """
+            Configure Sentry rules to trigger notifications based on conditions you set.
             """,
             IntegrationFeatures.ALERT_RULE,
-        )
+        ),
     ]
 
     def is_configured(self, project, **kwargs):
diff --git a/src/sentry_plugins/victorops/plugin.py b/src/sentry_plugins/victorops/plugin.py
index 1e7cf0f814..9f8f4be0e2 100644
--- a/src/sentry_plugins/victorops/plugin.py
+++ b/src/sentry_plugins/victorops/plugin.py
@@ -36,10 +36,16 @@ class VictorOpsPlugin(CorePluginMixin, NotifyPlugin):
     feature_descriptions = [
         FeatureDescription(
             """
-            Configure rule based VictorOps alerts to automatically be triggered.
+            Manage incidents and outages by sending Sentry notifications to VictorOps.
+            """,
+            IntegrationFeatures.INCIDENT_MANAGEMENT,
+        ),
+        FeatureDescription(
+            """
+            Configure Sentry rules to trigger notifications based on conditions you set.
             """,
             IntegrationFeatures.ALERT_RULE,
-        )
+        ),
     ]
 
     def is_configured(self, project, **kwargs):
diff --git a/src/sentry_plugins/vsts/plugin.py b/src/sentry_plugins/vsts/plugin.py
index ba51f8a115..64ae7e6caa 100644
--- a/src/sentry_plugins/vsts/plugin.py
+++ b/src/sentry_plugins/vsts/plugin.py
@@ -19,6 +19,14 @@ class VstsPlugin(VisualStudioMixin, IssueTrackingPlugin2):
     auth_provider = "visualstudio"
     required_field = "instance"
     feature_descriptions = [
+        FeatureDescription(
+            """
+            Authorize repositories to be added to your Sentry organization to augment
+            sentry issues with commit data with [deployment
+            tracking](https://docs.sentry.io/learn/releases/).
+            """,
+            IntegrationFeatures.COMMITS,
+        ),
         FeatureDescription(
             """
             Create and link Sentry issue groups directly to a Azure DevOps work item in any of
@@ -26,7 +34,7 @@ class VstsPlugin(VisualStudioMixin, IssueTrackingPlugin2):
             work item!
             """,
             IntegrationFeatures.ISSUE_BASIC,
-        )
+        ),
     ]
 
     issue_fields = frozenset(["id", "title", "url"])
