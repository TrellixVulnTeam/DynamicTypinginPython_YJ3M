commit 11397239f004b7dcf27125f67881c9562380e541
Author: Lyn Nagara <lyn.nagara@gmail.com>
Date:   Thu Jan 2 10:47:53 2020 -0800

    test(eventstore): Test the new event model can be serialized (#16211)

diff --git a/tests/sentry/eventstore/test_models.py b/tests/sentry/eventstore/test_models.py
index 599cdd1560..02d924668d 100644
--- a/tests/sentry/eventstore/test_models.py
+++ b/tests/sentry/eventstore/test_models.py
@@ -2,8 +2,11 @@ from __future__ import absolute_import
 
 import pickle
 import pytest
+import six
 
+from sentry.api.serializers import serialize
 from sentry.db.models.fields.node import NodeData
+from sentry.eventstore.models import Event
 from sentry.models import Environment
 from sentry.testutils import TestCase
 from sentry.testutils.helpers.datetime import iso_format, before_now
@@ -174,6 +177,30 @@ class EventTest(TestCase):
         assert event.group is None
         assert event.culprit == "app/components/events/eventEntries in map"
 
+    def test_serialize_event(self):
+        event = self.store_event(
+            data={
+                "event_id": "a" * 32,
+                "message": "Hello World!",
+                "tags": {"logger": "foobar", "site": "foo", "server_name": "bar"},
+            },
+            project_id=self.project.id,
+        )
+        group_id = event.group_id
+        serialized = serialize(event)
+        assert serialized["eventID"] == "a" * 32
+        assert serialized["projectID"] == six.text_type(self.project.id)
+        assert serialized["groupID"] == six.text_type(group_id)
+        assert serialized["message"] == "Hello World!"
+
+        # Can serialize an event by loading node data
+        event = Event(project_id=self.project.id, event_id="a" * 32, group_id=group_id)
+        serialized = serialize(event)
+        assert serialized["eventID"] == "a" * 32
+        assert serialized["projectID"] == six.text_type(self.project.id)
+        assert serialized["groupID"] == six.text_type(group_id)
+        assert serialized["message"] == "Hello World!"
+
 
 @pytest.mark.django_db
 def test_renormalization(monkeypatch, factories, task_runner, default_project):
