commit 471accc867d4e628805ac1f4d037cb009842d5be
Author: Ted Kaemming <ted@kaemming.com>
Date:   Wed Dec 2 14:01:32 2015 -0800

    Convert interval indices to integer before generating quota keys.
    
    > Specifically, if a and b are of the same type, a//b will be of
    > that type too.  If the inputs are of different types, they are
    > first coerced to a common type using the same rules used for all
    > other arithmetic operators.
    >
    > In particular, if a and b are both ints or longs, the result has
    > the same type and value as for classic division on these types
    > (including the case of mixed input types; int//long and long//int
    > will both return a long).
    >
    > For floating point inputs, the result is a float.  For example:
    >
    > 3.5//2.0 == 1.0
    
    - https://www.python.org/dev/peps/pep-0238/
    
    ಠ_ಠ

diff --git a/src/sentry/quotas/redis.py b/src/sentry/quotas/redis.py
index 6c24f871a7..a2a05879af 100644
--- a/src/sentry/quotas/redis.py
+++ b/src/sentry/quotas/redis.py
@@ -69,7 +69,7 @@ class RedisQuota(Quota):
         keys = []
         args = []
         for key, limit, interval in quotas:
-            keys.append('{}:{}:{}'.format(self.namespace, key, timestamp // interval))
+            keys.append('{}:{}:{}'.format(self.namespace, key, int(timestamp // interval)))
             expiry = get_next_period_start(interval) + self.grace
             args.extend((limit, expiry))
 
