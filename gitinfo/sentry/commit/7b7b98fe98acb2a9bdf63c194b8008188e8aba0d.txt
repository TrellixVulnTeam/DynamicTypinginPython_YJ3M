commit 7b7b98fe98acb2a9bdf63c194b8008188e8aba0d
Author: Ayesha Omarali <ayesha.omarali@gmail.com>
Date:   Thu Jul 26 16:30:59 2018 -0700

    feat(ui): Added barchart storybook (#9218)

diff --git a/docs-ui/components/barChart.stories.js b/docs-ui/components/barChart.stories.js
new file mode 100644
index 0000000000..3a85238e4b
--- /dev/null
+++ b/docs-ui/components/barChart.stories.js
@@ -0,0 +1,147 @@
+import React from 'react';
+
+import {storiesOf} from '@storybook/react';
+import {withInfo} from '@storybook/addon-info';
+
+import BarChart from 'app/components/charts/barChart.jsx';
+
+// eslint-disable-next-line
+storiesOf('Charts/BarChart', module).add(
+  'default',
+  withInfo('Stacked Bar')(() => {
+    return (
+      <div>
+        <h2 style={{paddingLeft: '60px'}}>Stacked Bar Charts:</h2>
+
+        <BarChart
+          style={{height: 250}}
+          stacked={true}
+          series={[
+            {
+              seriesName: 'Unhandled Errors',
+              data: [
+                {
+                  value: 923,
+                  category: 'Chrome',
+                },
+                {
+                  value: 107,
+                  category: 'Safari',
+                },
+                {
+                  value: 50,
+                  category: 'Firefox',
+                },
+              ],
+            },
+            {
+              seriesName: 'Handled Errors',
+              data: [
+                {
+                  value: 100,
+                  category: 'Chrome',
+                },
+                {
+                  value: 99,
+                  category: 'Safari',
+                },
+                {
+                  value: 66,
+                  category: 'Opera',
+                },
+              ],
+            },
+          ]}
+        />
+        <BarChart
+          style={{height: 400}}
+          stacked={true}
+          series={[
+            {
+              seriesName: 'Chrome',
+              data: [
+                {
+                  value: 923,
+                  category: 'Jan 1',
+                },
+                {
+                  value: 107,
+                  category: 'Jan 2',
+                },
+                {
+                  value: 50,
+                  category: 'Jan 3',
+                },
+              ],
+            },
+            {
+              seriesName: 'Safari',
+              data: [
+                {
+                  value: 100,
+                  category: 'Jan 1',
+                },
+                {
+                  value: 99,
+                  category: 'Jan 2',
+                },
+                {
+                  value: 66,
+                  category: 'Jan 3',
+                },
+                {
+                  value: 66,
+                  category: 'Jan 4',
+                },
+              ],
+            },
+          ]}
+        />
+        <h2 style={{paddingLeft: '60px'}}>Regular Bar Chart (Not Stacked):</h2>
+        <BarChart
+          style={{height: 400}}
+          series={[
+            {
+              seriesName: 'Chrome',
+              data: [
+                {
+                  value: 923,
+                  category: 'Jan 1',
+                },
+                {
+                  value: 107,
+                  category: 'Jan 2',
+                },
+                {
+                  value: 50,
+                  category: 'Jan 3',
+                },
+              ],
+            },
+            {
+              seriesName: 'Safari',
+              data: [
+                {
+                  value: 100,
+                  category: 'Jan 1',
+                },
+                {
+                  value: 99,
+                  category: 'Jan 2',
+                },
+                {
+                  value: 66,
+                  category: 'Jan 3',
+                },
+                {
+                  value: 66,
+                  category: 'Jan 4',
+                },
+              ],
+            },
+          ]}
+        />
+      </div>
+    );
+  })
+);
diff --git a/src/sentry/static/sentry/app/components/charts/areaChart.jsx b/src/sentry/static/sentry/app/components/charts/areaChart.jsx
index 144a0a0486..87e67c87b8 100644
--- a/src/sentry/static/sentry/app/components/charts/areaChart.jsx
+++ b/src/sentry/static/sentry/app/components/charts/areaChart.jsx
@@ -51,6 +51,7 @@ class AreaChart extends React.Component {
           xAxis: XAxis({
             type: 'category',
             data: DATES,
+            boundaryGap: false,
           }),
           yAxis: YAxis({}),
           series: [
diff --git a/src/sentry/static/sentry/app/components/charts/barChart.jsx b/src/sentry/static/sentry/app/components/charts/barChart.jsx
new file mode 100644
index 0000000000..52c843f789
--- /dev/null
+++ b/src/sentry/static/sentry/app/components/charts/barChart.jsx
@@ -0,0 +1,66 @@
+import PropTypes from 'prop-types';
+import React from 'react';
+
+import BarSeries from './series/barSeries.jsx';
+import BaseChart from './baseChart';
+import YAxis from './components/yAxis';
+import XAxis from './components/xAxis';
+
+export default class BarChart extends React.Component {
+  static propTypes = {
+    // We passthrough all props exception `options`
+    ...BaseChart.propTypes,
+
+    series: PropTypes.arrayOf(
+      PropTypes.arrayOf(
+        PropTypes.shape({
+          name: PropTypes.string,
+          category: PropTypes.string,
+          value: PropTypes.number,
+        })
+      )
+    ),
+  };
+
+  generateBarData(series) {
+    let xAxisLabels = new Set();
+
+    const barData = series.map(s => {
+      let tempSeries = {};
+      s.data.forEach(({category, value}) => {
+        xAxisLabels.add(category);
+        tempSeries[category] = value;
+      });
+      return tempSeries;
+    });
+    return [barData, Array.from(xAxisLabels)];
+  }
+
+  render() {
+    const {series, stacked} = this.props;
+    const [barData, xAxisLabels] = this.generateBarData(series);
+
+    return (
+      <BaseChart
+        {...this.props}
+        options={{
+          xAxis: XAxis({
+            type: 'category',
+            data: xAxisLabels,
+          }),
+          yAxis: YAxis({}),
+          series: series.map((s, i) => {
+            let data = xAxisLabels.map(label => {
+              return barData[i].hasOwnProperty(label) ? barData[i][label] : 0;
+            });
+            return BarSeries({
+              name: s.seriesName,
+              stack: stacked ? 'stack1' : null,
+              data,
+            });
+          }),
+        }}
+      />
+    );
+  }
+}
diff --git a/src/sentry/static/sentry/app/components/charts/components/xAxis.jsx b/src/sentry/static/sentry/app/components/charts/components/xAxis.jsx
index 2ea6f1e752..2b20b2d29d 100644
--- a/src/sentry/static/sentry/app/components/charts/components/xAxis.jsx
+++ b/src/sentry/static/sentry/app/components/charts/components/xAxis.jsx
@@ -2,7 +2,7 @@ import theme from 'app/utils/theme';
 
 export default function XAxis(props = {}) {
   return {
-    boundaryGap: false,
+    boundaryGap: true,
     axisLine: {
       lineStyle: {
         color: theme.gray1,
diff --git a/src/sentry/static/sentry/app/components/charts/series/barSeries.jsx b/src/sentry/static/sentry/app/components/charts/series/barSeries.jsx
new file mode 100644
index 0000000000..cf250db119
--- /dev/null
+++ b/src/sentry/static/sentry/app/components/charts/series/barSeries.jsx
@@ -0,0 +1,8 @@
+import 'echarts/lib/chart/bar';
+
+export default function barSeries(props = {}) {
+  return {
+    ...props,
+    type: 'bar',
+  };
+}
