commit 0b2b79d74c9cc43695f95001889d897a8b5f9d31
Author: Chris Clark <christopherchristopherclark@gmail.com>
Date:   Mon Dec 17 14:05:14 2018 -0800

    ref(shared-components): refactor tagDistributionMeter to use styled components (#11032)
    
    * refactor tagDistributionMeter into styled component
    
    * fix react prop warnings
    
    * make linter happy
    
    * do not need ananoymous function

diff --git a/src/sentry/static/sentry/app/components/group/tagDistributionMeter.jsx b/src/sentry/static/sentry/app/components/group/tagDistributionMeter.jsx
index 888e77b675..81064351fc 100644
--- a/src/sentry/static/sentry/app/components/group/tagDistributionMeter.jsx
+++ b/src/sentry/static/sentry/app/components/group/tagDistributionMeter.jsx
@@ -2,6 +2,8 @@ import {Link} from 'react-router';
 import PropTypes from 'prop-types';
 import React from 'react';
 import createReactClass from 'create-react-class';
+import styled from 'react-emotion';
+import isPropValid from '@emotion/is-prop-valid';
 
 import {escape, percent} from 'app/utils';
 import {t} from 'app/locale';
@@ -100,11 +102,10 @@ const TagDistributionMeter = createReactClass({
     let otherPctLabel = Math.floor(otherPct);
 
     return (
-      <div className="segments">
+      <React.Fragment>
         {topValues.map((value, index) => {
           const pct = percent(value.count, totalValues);
           const pctLabel = Math.floor(pct);
-          const className = 'segment segment-' + index;
 
           const tooltipHtml =
             '<div class="truncate">' +
@@ -115,37 +116,41 @@ const TagDistributionMeter = createReactClass({
 
           return (
             <Tooltip key={value.value} title={tooltipHtml} tooltipOptions={{html: true}}>
-              <Link
-                className={className}
+              <Segment
                 style={{width: pct + '%'}}
                 to={`/${orgId}/${projectId}/issues/${group.id}/tags/${tag}/`}
+                index={index}
+                first={index == 0}
+                last={!hasOther && index == topValues.length - 1}
               >
-                <span className="tag-description">
-                  <span className="tag-percentage">{pctLabel}%</span>
-                  <span className="tag-label">
+                <Description first={index == 0}>
+                  <Percentage>{pctLabel}%</Percentage>
+                  <Label>
                     <DeviceName>{value.name}</DeviceName>
-                  </span>
-                </span>
-              </Link>
+                  </Label>
+                </Description>
+              </Segment>
             </Tooltip>
           );
         })}
         {hasOther && (
-          <Link
+          <Segment
             key="other"
-            className="segment segment-9"
-            style={{width: otherPct + '%'}}
+            index={9}
+            first={!topValues.length}
+            last={true}
+            css={{width: otherPct + '%'}}
             to={`/${orgId}/${projectId}/issues/${this.props.group.id}/tags/${this.props
               .tag}/`}
             title={'Other<br/>' + otherPctLabel + '%'}
           >
-            <span className="tag-description">
-              <span className="tag-percentage">{otherPctLabel}%</span>
-              <span className="tag-label">{t('Other')}</span>
-            </span>
-          </Link>
+            <Description first={!topValues.length}>
+              <Percentage>{otherPctLabel}%</Percentage>
+              <Label>{t('Other')}</Label>
+            </Description>
+          </Segment>
         )}
-      </div>
+      </React.Fragment>
     );
   },
 
@@ -159,15 +164,94 @@ const TagDistributionMeter = createReactClass({
 
   render() {
     return (
-      <div className="distribution-graph">
-        <h6>
-          <span>{this.props.tag}</span>
-        </h6>
+      <DistributionGraph>
+        <Tag>{this.props.tag}</Tag>
         {this.renderBody()}
-      </div>
+      </DistributionGraph>
     );
   },
 });
 
+const DistributionGraph = styled('div')`
+  position: relative;
+  font-size: 13px;
+  margin-bottom: 10px;
+`;
+
+const Tag = styled('div')`
+  position: relative;
+  font-size: 13px;
+  margin: 10px 0 8px;
+  font-weight: bold;
+  z-index: 5;
+  line-height: 1;
+`;
+
+const Description = styled('span', {shouldForwardProp: isPropValid})`
+  background-color: #fff;
+  position: absolute;
+  text-align: right;
+  top: -1px;
+  right: 0;
+  line-height: 1;
+  z-index: 1;
+  width: 100%;
+  display: ${p => (p.first ? 'block' : 'none')};
+
+  &:hover {
+    display: block;
+    z-index: 2;
+  }
+`;
+
+const Percentage = styled('span')`
+  margin-right: 6px;
+  color: ${p => p.theme.gray2};
+  display: inline-block;
+  vertical-align: middle;
+`;
+
+const Label = styled('span')`
+  display: inline-block;
+  white-space: nowrap;
+  overflow: hidden;
+  text-overflow: ellipsis;
+  max-width: 45%;
+  vertical-align: middle;
+`;
+
+const getColor = p => {
+  return [
+    '#7c7484',
+    '#867f90',
+    '#918a9b',
+    '#9b96a7',
+    '#a6a1b3',
+    '#b0acbe',
+    '#bbb7ca',
+    '#c5c3d6',
+    '#d0cee1',
+    'dad9ed',
+  ][p.index];
+};
+
+const Segment = styled(Link, {shouldForwardProp: isPropValid})`
+  height: 16px;
+  display: inline-block;
+  color: inherit;
+
+  &:hover {
+    background: ${p => p.theme.purple};
+  }
+
+  border-top-left-radius: ${p => p.first && p.theme.borderRadius};
+  border-bottom-left-radius: ${p => p.first && p.theme.borderRadius};
+
+  border-top-right-radius: ${p => p.last && p.theme.borderRadius};
+  border-bottom-right-radius: ${p => p.last && p.theme.borderRadius};
+
+  background-color: ${getColor};
+`;
+
 export {TagDistributionMeter};
 export default withEnvironment(TagDistributionMeter);
diff --git a/src/sentry/static/sentry/less/shared-components.less b/src/sentry/static/sentry/less/shared-components.less
index f675cca75b..3fccd73409 100644
--- a/src/sentry/static/sentry/less/shared-components.less
+++ b/src/sentry/static/sentry/less/shared-components.less
@@ -1151,121 +1151,6 @@ table.integrations {
   width: ((@gridColumnWidth) * @columnSpan) + (@gridGutterWidth * (@columnSpan - 1)) - 10;
 }
 
-// Distribution graph
-
-.distribution-graph {
-  position: relative;
-  font-size: 13px;
-  margin-bottom: 10px;
-
-  h6 {
-    position: relative;
-    font-size: 13px !important;
-    margin-bottom: 8px !important;
-    z-index: 5;
-
-    &:before {
-      display: none !important;
-    }
-  }
-
-  .segment {
-    height: 16px;
-    display: inline-block;
-    color: inherit;
-
-    &:hover {
-      background: @purple !important;
-
-      .tag-description {
-        display: block;
-        z-index: 2;
-      }
-    }
-
-    .tag-description {
-      background-color: @white;
-      position: absolute;
-      text-align: right;
-      top: -1px;
-      right: 0;
-      line-height: 1;
-      display: none;
-      z-index: 1;
-      width: 100%;
-    }
-
-    .tag-percentage {
-      margin-right: 6px;
-      color: @gray-light;
-      display: inline-block;
-      vertical-align: middle;
-    }
-
-    .tag-label {
-      display: inline-block;
-      white-space: nowrap;
-      overflow: hidden;
-      text-overflow: ellipsis;
-      max-width: 45%;
-      vertical-align: middle;
-    }
-
-    &:first-child {
-      border-top-left-radius: 3px;
-      border-bottom-left-radius: 3px;
-
-      .tag-description {
-        display: block !important;
-      }
-    }
-
-    &:last-child {
-      border-top-right-radius: 3px;
-      border-bottom-right-radius: 3px;
-    }
-
-    &.segment-9 {
-      background-color: #dad9ed;
-    }
-
-    &.segment-8 {
-      background-color: #d0cee1;
-    }
-
-    &.segment-7 {
-      background-color: #c5c3d6;
-    }
-
-    &.segment-6 {
-      background-color: #bbb7ca;
-    }
-
-    &.segment-5 {
-      background-color: #b0acbe;
-    }
-
-    &.segment-4 {
-      background-color: #a6a1b3;
-    }
-
-    &.segment-3 {
-      background-color: #9b96a7;
-    }
-
-    &.segment-2 {
-      background-color: #918a9b;
-    }
-
-    &.segment-1 {
-      background-color: #867f90;
-    }
-
-    &.segment-0 {
-      background-color: #7c7484;
-    }
-  }
-}
 
 /**
 * Faces
