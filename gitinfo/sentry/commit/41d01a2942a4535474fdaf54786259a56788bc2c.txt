commit 41d01a2942a4535474fdaf54786259a56788bc2c
Author: David Cramer <dcramer@gmail.com>
Date:   Wed Feb 18 13:55:37 2015 -0800

    Add DateTimePaginator

diff --git a/src/sentry/api/base.py b/src/sentry/api/base.py
index 95d4334205..bd247dcea4 100644
--- a/src/sentry/api/base.py
+++ b/src/sentry/api/base.py
@@ -103,7 +103,8 @@ class Endpoint(APIView):
         self.response = self.finalize_response(request, response, *args, **kwargs)
         return self.response
 
-    def paginate(self, request, on_results=lambda x: x, **kwargs):
+    def paginate(self, request, on_results=None, paginator_cls=Paginator,
+                 **kwargs):
         per_page = int(request.GET.get('per_page', 100))
         input_cursor = request.GET.get('cursor')
         if input_cursor:
@@ -111,14 +112,15 @@ class Endpoint(APIView):
 
         assert per_page <= 100
 
-        paginator = Paginator(**kwargs)
+        paginator = paginator_cls(**kwargs)
         cursor_result = paginator.get_result(
             limit=per_page,
             cursor=input_cursor,
         )
 
         # map results based on callback
-        results = on_results(cursor_result.results)
+        if on_results:
+            results = on_results(cursor_result.results)
 
         headers = {}
         headers['Link'] = ', '.join([
diff --git a/src/sentry/api/paginator.py b/src/sentry/api/paginator.py
index 7a047bdefc..be80507fdb 100644
--- a/src/sentry/api/paginator.py
+++ b/src/sentry/api/paginator.py
@@ -9,7 +9,9 @@ from __future__ import absolute_import
 
 import math
 
+from datetime import datetime
 from django.db import connections
+from django.utils import timezone
 
 from sentry.utils.cursors import build_cursor, Cursor
 
@@ -30,6 +32,9 @@ class Paginator(object):
             return math.ceil(value)
         return math.floor(value)
 
+    def _value_from_cursor(self, cursor):
+        return cursor.value
+
     def _get_results_from_qs(self, value, is_prev):
         results = self.queryset
 
@@ -85,7 +90,12 @@ class Paginator(object):
         if cursor is None:
             cursor = Cursor(0, 0, 0)
 
-        queryset = self._get_results_from_qs(cursor.value, cursor.is_prev)
+        if cursor.value:
+            cursor_value = self._value_from_cursor(cursor)
+        else:
+            cursor_value = 0
+
+        queryset = self._get_results_from_qs(cursor_value, cursor.is_prev)
 
         # this effectively gets us the before post, and the current (after) post
         # every time
@@ -105,3 +115,16 @@ class Paginator(object):
             cursor=cursor,
             key=self._get_item_key,
         )
+
+
+class DateTimePaginator(Paginator):
+    def _get_item_key(self, item):
+        value = getattr(item, self.key)
+        print(value)
+        value = int(value.strftime('%s'))
+        if self.desc:
+            return math.ceil(value)
+        return math.floor(value)
+
+    def _value_from_cursor(self, cursor):
+        return datetime.fromtimestamp(cursor.value).replace(tzinfo=timezone.utc)
