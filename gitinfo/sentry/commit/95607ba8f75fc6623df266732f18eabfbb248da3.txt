commit 95607ba8f75fc6623df266732f18eabfbb248da3
Author: David Cramer <dcramer@gmail.com>
Date:   Fri Jan 23 12:11:10 2015 -0800

    Break up aggregate components

diff --git a/src/sentry/static/sentry/app/components/aggregate.jsx b/src/sentry/static/sentry/app/components/aggregate.jsx
new file mode 100644
index 0000000000..318586f57c
--- /dev/null
+++ b/src/sentry/static/sentry/app/components/aggregate.jsx
@@ -0,0 +1,71 @@
+/*** @jsx React.DOM */
+
+var React = require("react");
+var Reflux = require("reflux");
+var Router = require("react-router");
+
+var api = require("../api");
+var AggregateChart = require("./aggregate/chart");
+var AggregateHeader = require("./aggregate/header");
+var AggregateListStore = require("../stores/aggregateListStore");
+var MemberListStore = require("../stores/memberListStore");
+var utils = require("../utils");
+
+var AggregateDetails = React.createClass({
+  mixins: [
+    Reflux.connect(AggregateListStore, "aggList"),
+    Router.State
+  ],
+
+  propTypes: {
+    memberList: React.PropTypes.instanceOf(Array).isRequired
+  },
+
+  getInitialState: function() {
+    return {
+      aggList: new utils.Collection(),
+      statsPeriod: '24h'
+    };
+  },
+
+  componentWillMount: function() {
+    api.request(this.getAggregateDetailsEndpoint(), {
+      success: function(data, textStatus, jqXHR) {
+        AggregateListStore.loadInitialData([data]);
+      }.bind(this)
+    });
+  },
+
+  getAggregateDetailsEndpoint: function() {
+    return '/groups/' + this.getParams().aggregateId + '/';
+  },
+
+  getAggregate: function() {
+    var id = this.getParams().aggregateId;
+    return this.state.aggList.get(id);
+  },
+
+  render: function() {
+    var aggregate = this.getAggregate();
+
+    if (!aggregate) {
+      return <div />;
+    }
+
+    return (
+      <div className={this.props.className}>
+        <AggregateHeader
+            aggregate={aggregate}
+            statsPeriod={this.state.statsPeriod}
+            memberList={this.props.memberList} />
+        <div className="box">
+          <div className="box-content with-padding">
+            <AggregateChart aggregate={aggregate} />
+          </div>
+        </div>
+      </div>
+    );
+  }
+});
+
+module.exports = AggregateDetails;
diff --git a/src/sentry/static/sentry/app/components/aggregateChart.jsx b/src/sentry/static/sentry/app/components/aggregate/chart.jsx
similarity index 91%
rename from src/sentry/static/sentry/app/components/aggregateChart.jsx
rename to src/sentry/static/sentry/app/components/aggregate/chart.jsx
index 93da660642..e45ba28cfb 100644
--- a/src/sentry/static/sentry/app/components/aggregateChart.jsx
+++ b/src/sentry/static/sentry/app/components/aggregate/chart.jsx
@@ -1,7 +1,7 @@
 /*** @jsx React.DOM */
 var React = require("react");
 
-var FlotChart = require("./flotChart");
+var FlotChart = require("../flotChart");
 
 var AggregateChart = React.createClass({
   propTypes: {
diff --git a/src/sentry/static/sentry/app/components/aggregateDetails.jsx b/src/sentry/static/sentry/app/components/aggregate/header.jsx
similarity index 66%
rename from src/sentry/static/sentry/app/components/aggregateDetails.jsx
rename to src/sentry/static/sentry/app/components/aggregate/header.jsx
index 66e63cdde6..45fffb4f6b 100644
--- a/src/sentry/static/sentry/app/components/aggregateDetails.jsx
+++ b/src/sentry/static/sentry/app/components/aggregate/header.jsx
@@ -4,13 +4,9 @@ var React = require("react");
 var Reflux = require("reflux");
 var Router = require("react-router");
 
-var api = require("../api");
-var AggregateListStore = require("../stores/aggregateListStore");
-var AssigneeSelector = require("./assigneeSelector");
-var Count = require("./count");
-var MemberListStore = require("../stores/memberListStore");
-var TimeSince = require("./timeSince");
-var utils = require("../utils");
+var AssigneeSelector = require("../assigneeSelector");
+var Count = require("../count");
+var TimeSince = require("../timeSince");
 
 var AggregateHeader = React.createClass({
   propTypes: {
@@ -103,66 +99,8 @@ var AggregateHeader = React.createClass({
           </div>
         </div>
       </div>
-
-    );
-  }
-});
-
-var AggregateDetails = React.createClass({
-  mixins: [
-    Reflux.connect(AggregateListStore, "aggList"),
-    Router.State
-  ],
-
-  propTypes: {
-    memberList: React.PropTypes.instanceOf(Array).isRequired
-  },
-
-  getInitialState: function() {
-    return {
-      aggList: new utils.Collection(),
-      statsPeriod: '24h'
-    };
-  },
-
-  componentWillMount: function() {
-    api.request(this.getAggregateDetailsEndpoint(), {
-      success: function(data, textStatus, jqXHR) {
-        AggregateListStore.loadInitialData([data]);
-      }.bind(this)
-    });
-  },
-
-  getAggregateDetailsEndpoint: function() {
-    return '/groups/' + this.getParams().aggregateId + '/';
-  },
-
-  getAggregate: function() {
-    var id = this.getParams().aggregateId;
-    return this.state.aggList.get(id);
-  },
-
-  render: function() {
-    var aggregate = this.getAggregate();
-
-    if (!aggregate) {
-      return <div />;
-    }
-
-    return (
-      <div className={this.props.className}>
-        <AggregateHeader
-            aggregate={aggregate}
-            statsPeriod={this.state.statsPeriod}
-            memberList={this.props.memberList} />
-        <div className="box">
-          <div className="box-content with-padding">
-            <AggregateChart aggregate={aggregate} />
-          </div>
-        </div>
-      </div>
     );
   }
 });
 
-module.exports = AggregateDetails;
+module.exports = AggregateHeader;
diff --git a/src/sentry/static/sentry/app/main.jsx b/src/sentry/static/sentry/app/main.jsx
index 367fe54214..d9ee964844 100644
--- a/src/sentry/static/sentry/app/main.jsx
+++ b/src/sentry/static/sentry/app/main.jsx
@@ -54,8 +54,5 @@ module.exports = {
   routes: require("./routes"),
 
   Alerts: require("./components/alerts"),
-  App: require("./components/app"),
-  Stream: require("./components/stream"),
-  AggregateChart: require("./components/aggregateChart"),
-  AggregateDetails: require("./components/aggregateDetails")
+  App: require("./components/app")
 };
diff --git a/src/sentry/static/sentry/app/routes.jsx b/src/sentry/static/sentry/app/routes.jsx
index 973dc84354..db235868f0 100644
--- a/src/sentry/static/sentry/app/routes.jsx
+++ b/src/sentry/static/sentry/app/routes.jsx
@@ -6,7 +6,7 @@ var Route = Router.Route;
 var DefaultRoute = Router.DefaultRoute;
 
 var App = require("./components/app");
-var AggregateDetails = require("./components/aggregateDetails");
+var Aggregate = require("./components/aggregate");
 var ProjectDetails = require("./components/projectDetails");
 var Stream = require("./components/stream");
 
@@ -14,7 +14,7 @@ var routes = (
   <Route name="app" path="/" handler={App}>
     <Route name="projectDetails" path="/:orgId/:projectId/" handler={ProjectDetails}>
       <DefaultRoute name="stream" handler={Stream} />
-      <Route name="aggregateDetails" path="group/:aggregateId/" handler={AggregateDetails}/>
+      <Route name="aggregateDetails" path="group/:aggregateId/" handler={Aggregate}/>
     </Route>
   </Route>
 );
