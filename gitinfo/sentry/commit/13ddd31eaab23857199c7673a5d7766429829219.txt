commit 13ddd31eaab23857199c7673a5d7766429829219
Author: Dora <dora.l.chan@gmail.com>
Date:   Mon Nov 25 13:50:41 2019 -0800

    feat(discoverv2): querycards and media (#15791)
    
    * undoing weird commit
    
    * changing # of events to count
    
    * changed string to days
    
    * make related cards responsive
    
    * changing custom card timeline
    
    * readd last to prebuilt
    
    * formatting and adding to pre-built queries
    
    * moment format
    
    * removed seconds

diff --git a/src/sentry/static/sentry/app/views/eventsV2/data.tsx b/src/sentry/static/sentry/app/views/eventsV2/data.tsx
index 2f88d23e12..ee1b9ab633 100644
--- a/src/sentry/static/sentry/app/views/eventsV2/data.tsx
+++ b/src/sentry/static/sentry/app/views/eventsV2/data.tsx
@@ -53,7 +53,7 @@ export const TRANSACTION_VIEWS: Readonly<Array<NewQuery>> = [
       'p75',
       'p95',
     ],
-    fieldnames: ['transaction', 'project', '# of events', 'avg', '75th', '95th'],
+    fieldnames: ['transaction', 'project', 'count', 'avg', '75th', '95th'],
     orderby: '-count_id',
     query: 'event.type:transaction',
     tags: ['release', 'project.name', 'user.email', 'user.ip', 'environment'],
@@ -67,7 +67,7 @@ export const ALL_VIEWS: Readonly<Array<NewQuery>> = [
     id: undefined,
     name: t('Errors'),
     fields: ['title', 'count(id)', 'count_unique(user)', 'project', 'last_seen'],
-    fieldnames: ['error', '# of events', 'users', 'project', 'last seen'],
+    fieldnames: ['error', 'count', 'users', 'project', 'last seen'],
     orderby: '-count_id',
     query: 'event.type:error',
     tags: ['project.name', 'release', 'environment'],
@@ -78,7 +78,7 @@ export const ALL_VIEWS: Readonly<Array<NewQuery>> = [
     id: undefined,
     name: t('Content Security Policy (CSP)'),
     fields: ['title', 'count(id)', 'count_unique(user)', 'project', 'last_seen'],
-    fieldnames: ['csp', '# of events', 'users', 'project', 'last seen'],
+    fieldnames: ['csp', 'count', 'users', 'project', 'last seen'],
     orderby: '-count_id',
     query: 'event.type:csp',
     tags: [
@@ -97,7 +97,7 @@ export const ALL_VIEWS: Readonly<Array<NewQuery>> = [
     id: undefined,
     name: t('Project Summary'),
     fields: ['project', 'count(id)', 'count_unique(issue.id)'],
-    fieldnames: ['project', '# of events', 'unique errors'],
+    fieldnames: ['project', 'count', 'unique errors'],
     orderby: '-count_id',
     query: 'event.type:error',
     tags: ['error.type', 'project.name', 'release', 'environment'],
@@ -108,7 +108,7 @@ export const ALL_VIEWS: Readonly<Array<NewQuery>> = [
     id: undefined,
     name: t('Errors by URL'),
     fields: ['url', 'count(id)', 'count_unique(issue.id)'],
-    fieldnames: ['URL', '# of events', 'unique errors'],
+    fieldnames: ['URL', 'count', 'unique errors'],
     orderby: '-count_id',
     query: 'event.type:error',
     tags: ['error.type', 'project.name', 'url', 'release', 'environment'],
@@ -119,7 +119,7 @@ export const ALL_VIEWS: Readonly<Array<NewQuery>> = [
     id: undefined,
     name: t('Content Security Policy (CSP) Report by Directive'),
     fields: ['effective-directive', 'count(id)', 'count_unique(title)'],
-    fieldnames: ['directive', '# of events', 'reports'],
+    fieldnames: ['directive', 'count', 'reports'],
     orderby: '-count_id',
     query: 'event.type:csp',
     tags: [
diff --git a/src/sentry/static/sentry/app/views/eventsV2/eventDetails/content.tsx b/src/sentry/static/sentry/app/views/eventsV2/eventDetails/content.tsx
index 2a09f5b10a..78b8b3cdce 100644
--- a/src/sentry/static/sentry/app/views/eventsV2/eventDetails/content.tsx
+++ b/src/sentry/static/sentry/app/views/eventsV2/eventDetails/content.tsx
@@ -197,9 +197,13 @@ const ContentBox = styled(PageContent)`
   @media (min-width: ${p => p.theme.breakpoints[1]}) {
     display: grid;
     grid-template-rows: 1fr auto;
-    grid-template-columns: 70% auto;
+    grid-template-columns: 65% auto;
     grid-column-gap: ${space(3)};
   }
+
+  @media (min-width: ${p => p.theme.breakpoints[2]}) {
+    grid-template-columns: auto 350px;
+  }
 `;
 
 const Main = styled('div')`
diff --git a/src/sentry/static/sentry/app/views/eventsV2/eventDetails/relatedItems.tsx b/src/sentry/static/sentry/app/views/eventsV2/eventDetails/relatedItems.tsx
index b91d97dea5..2d7ca0a434 100644
--- a/src/sentry/static/sentry/app/views/eventsV2/eventDetails/relatedItems.tsx
+++ b/src/sentry/static/sentry/app/views/eventsV2/eventDetails/relatedItems.tsx
@@ -10,6 +10,7 @@ import ProjectBadge from 'app/components/idBadge/projectBadge';
 import Times from 'app/components/group/times';
 import {t} from 'app/locale';
 import space from 'app/styles/space';
+import theme from 'app/utils/theme';
 import withProjects from 'app/utils/withProjects';
 
 import {generateEventDetailsRoute, generateEventSlug} from './utils';
@@ -79,20 +80,18 @@ class RelatedItems extends AsyncComponent<Props, State> {
     return (
       <Section>
         <SectionHeading>{t('Related Issue')}</SectionHeading>
-        <Card>
-          <IconContainer>
-            <Link to={issueUrl} data-test-id="linked-issue">
-              <ShortId
-                shortId={issue.shortId}
-                avatar={<ProjectBadge project={issue.project} avatarSize={16} hideName />}
-              />
-            </Link>
-          </IconContainer>
-          <StyledLink to={issueUrl}>{issue.title}</StyledLink>
-          <TimesContainer>
+        <StyledCard>
+          <StyledLink to={issueUrl} data-test-id="linked-issue">
+            <StyledShortId
+              shortId={issue.shortId}
+              avatar={<ProjectBadge project={issue.project} avatarSize={16} hideName />}
+            />
+            <div>{issue.title}</div>
+          </StyledLink>
+          <StyledDate>
             <Times lastSeen={issue.lastSeen} firstSeen={issue.firstSeen} />
-          </TimesContainer>
-        </Card>
+          </StyledDate>
+        </StyledCard>
       </Section>
     );
   }
@@ -104,7 +103,7 @@ class RelatedItems extends AsyncComponent<Props, State> {
       <Section>
         <SectionHeading>{t('Related Trace Events')}</SectionHeading>
         {relatedEvents.data.length < 1 ? (
-          <Card>{t('No related events found.')}</Card>
+          <StyledCard>{t('No related events found.')}</StyledCard>
         ) : (
           relatedEvents.data.map((item: DiscoverResult) => {
             const eventSlug = generateEventSlug(item);
@@ -115,15 +114,15 @@ class RelatedItems extends AsyncComponent<Props, State> {
             const project = projects.find(p => p.slug === item['project.name']);
 
             return (
-              <Card key={item.id} isCurrent={event.id === item.id}>
-                <IconContainer>
-                  <StyledProjectBadge project={project} avatarSize={14} />
-                </IconContainer>
+              <StyledCard key={item.id} isCurrent={event.id === item.id}>
                 <StyledLink to={eventUrl} data-test-id="linked-event">
-                  {item.title ? item.title : item.transaction}
+                  <ProjectBadge project={project} avatarSize={14} />
+                  <div>{item.title ? item.title : item.transaction}</div>
                 </StyledLink>
-                <StyledDateTime date={item.timestamp} />
-              </Card>
+                <StyledDate>
+                  <DateTime date={item.timestamp} />
+                </StyledDate>
+              </StyledCard>
             );
           })
         )}
@@ -145,39 +144,53 @@ const Section = styled('div')`
   margin-bottom: ${space(2)};
 `;
 
-const Card = styled('div')<{isCurrent?: boolean; theme?: any}>`
+const StyledCard = styled('div')<{isCurrent?: boolean; theme?: any}>`
   display: flex;
+  flex-direction: column;
   background: ${p => p.theme.white};
-  flex-direction: row;
   align-items: center;
   font-size: ${p => p.theme.fontSizeMedium};
-  line-height: 1.4;
   border: 1px solid ${p => (p.isCurrent ? p.theme.purpleLight : p.theme.borderLight)};
   border-radius: ${p => p.theme.borderRadius};
   margin-bottom: ${space(1)};
-  padding: ${space(1)};
-`;
+  padding: ${space(1)} ${space(2)};
 
-const StyledLink = styled(Link)`
-  flex-grow: 1;
+  @media (min-width: ${theme.breakpoints[3]}) {
+    flex-direction: row;
+    justify-content: space-between;
+  }
 `;
 
-const IconContainer = styled('div')`
+const StyledLink = styled(Link)`
   display: flex;
-  align-items: center;
-  margin-right: ${space(1)};
-`;
+  flex-direction: column;
+  width: 100%;
+  overflow-wrap: break-word;
 
-const StyledProjectBadge = styled(ProjectBadge)`
-  display: inline-flex;
+  @media (min-width: ${theme.breakpoints[3]}) {
+    flex-direction: row;
+    flex-grow: 1;
+  }
 `;
 
-const StyledDateTime = styled(DateTime)`
+const StyledDate = styled('div')`
+  width: 100%;
   color: ${p => p.theme.gray2};
+  font-size: ${p => p.theme.fontSizeSmall};
+
+  @media (min-width: ${theme.breakpoints[3]}) {
+    width: auto;
+    text-align: right;
+    white-space: nowrap;
+  }
 `;
+const StyledShortId = styled(ShortId)`
+  justify-content: flex-start;
+  color: ${p => p.theme.gray4};
 
-const TimesContainer = styled('div')`
-  color: ${p => p.theme.gray2};
+  @media (min-width: ${theme.breakpoints[3]}) {
+    margin-right: ${space(2)};
+  }
 `;
 
 export default withProjects(RelatedItems);
diff --git a/src/sentry/static/sentry/app/views/eventsV2/landing.tsx b/src/sentry/static/sentry/app/views/eventsV2/landing.tsx
index e5b69bc470..57a6382560 100644
--- a/src/sentry/static/sentry/app/views/eventsV2/landing.tsx
+++ b/src/sentry/static/sentry/app/views/eventsV2/landing.tsx
@@ -235,9 +235,13 @@ class DiscoverLanding extends AsyncComponent<Props, State> {
       @media (min-width: ${p => p.theme.breakpoints[1]}) {
         display: grid;
         grid-template-rows: 1fr auto;
-        grid-template-columns: 70% auto;
+        grid-template-columns: 65% auto;
         grid-column-gap: ${space(3)};
       }
+
+      @media (min-width: ${p => p.theme.breakpoints[2]}) {
+        grid-template-columns: auto 350px;
+      }
     `;
 
     const HeaderBox = styled(ContentBox)`
diff --git a/src/sentry/static/sentry/app/views/eventsV2/queryList.tsx b/src/sentry/static/sentry/app/views/eventsV2/queryList.tsx
index 4f32012501..b1406c49c2 100644
--- a/src/sentry/static/sentry/app/views/eventsV2/queryList.tsx
+++ b/src/sentry/static/sentry/app/views/eventsV2/queryList.tsx
@@ -2,6 +2,7 @@ import React, {MouseEvent} from 'react';
 import {Location, Query} from 'history';
 import styled from 'react-emotion';
 import classNames from 'classnames';
+import moment from 'moment';
 import {browserHistory} from 'react-router';
 
 import {t} from 'app/locale';
@@ -83,6 +84,11 @@ class QueryList extends React.Component<Props> {
 
     const list = views.map((view, index) => {
       const eventView = EventView.fromSavedQueryWithLocation(view, location);
+      const recentTimeline = t('Last ') + eventView.statsPeriod;
+      const customTimeline =
+        moment(eventView.start).format('MMM D, YYYY h:mm A') +
+        ' - ' +
+        moment(eventView.end).format('MMM D, YYYY h:mm A');
       const to = {
         pathname: location.pathname,
         query: {
@@ -96,7 +102,7 @@ class QueryList extends React.Component<Props> {
           key={`${index}-${eventView.name}`}
           to={to}
           title={eventView.name}
-          subtitle={t('Pre-Built Query')}
+          subtitle={eventView.statsPeriod ? recentTimeline : customTimeline}
           queryDetail={eventView.query}
           renderGraph={() => {
             return (
@@ -131,6 +137,11 @@ class QueryList extends React.Component<Props> {
 
     return savedQueries.map((savedQuery, index) => {
       const eventView = EventView.fromSavedQuery(savedQuery);
+      const recentTimeline = t('Last ') + eventView.statsPeriod;
+      const customTimeline =
+        moment(eventView.start).format('MMM D, YYYY h:mm A') +
+        ' - ' +
+        moment(eventView.end).format('MMM D, YYYY h:mm A');
       const to = {
         pathname: location.pathname,
         query: {
@@ -144,7 +155,7 @@ class QueryList extends React.Component<Props> {
           key={`${index}-${eventView.id}`}
           to={to}
           title={eventView.name}
-          subtitle={t('Saved Query')}
+          subtitle={eventView.statsPeriod ? recentTimeline : customTimeline}
           queryDetail={eventView.query}
           onEventClick={() => {
             trackAnalyticsEvent({
diff --git a/src/sentry/static/sentry/app/views/eventsV2/querycard.tsx b/src/sentry/static/sentry/app/views/eventsV2/querycard.tsx
index 2efb049ccf..601a074314 100644
--- a/src/sentry/static/sentry/app/views/eventsV2/querycard.tsx
+++ b/src/sentry/static/sentry/app/views/eventsV2/querycard.tsx
@@ -7,7 +7,7 @@ import {callIfFunction} from 'app/utils/callIfFunction';
 
 type Props = {
   title?: string;
-  subtitle: string;
+  subtitle?: string;
   queryDetail?: string;
   to: object;
   onEventClick?: () => void;
diff --git a/src/sentry/static/sentry/app/views/eventsV2/styles.tsx b/src/sentry/static/sentry/app/views/eventsV2/styles.tsx
index d1afee1360..fc882cd317 100644
--- a/src/sentry/static/sentry/app/views/eventsV2/styles.tsx
+++ b/src/sentry/static/sentry/app/views/eventsV2/styles.tsx
@@ -5,12 +5,6 @@ import space from 'app/styles/space';
 
 export const QueryLink = styled(Link)`
   ${overflowEllipsis};
-  color: ${p => p.theme.foreground};
-  border-radius: ${p => p.theme.borderRadius};
-  &:hover {
-    color: ${p => p.theme.foreground};
-    background-color: ${p => p.theme.offWhite};
-  }
 `;
 
 export const SectionHeading = styled('h4')`
