commit afd92aba8009d2cf4ee8884e70f557709305049d
Author: David Cramer <dcramer@gmail.com>
Date:   Mon Jun 29 15:30:21 2015 -0700

    Some initial support for new shared group pages

diff --git a/src/sentry/api/urls.py b/src/sentry/api/urls.py
index b8c2afaf85..1ef245a1da 100644
--- a/src/sentry/api/urls.py
+++ b/src/sentry/api/urls.py
@@ -9,6 +9,7 @@ from .endpoints.event_details import EventDetailsEndpoint
 from .endpoints.group_details import GroupDetailsEndpoint
 from .endpoints.group_events import GroupEventsEndpoint
 from .endpoints.group_events_latest import GroupEventsLatestEndpoint
+from .endpoints.group_index import GroupIndexEndpoint
 from .endpoints.group_notes import GroupNotesEndpoint
 from .endpoints.group_stats import GroupStatsEndpoint
 from .endpoints.group_tags import GroupTagsEndpoint
@@ -168,6 +169,9 @@ urlpatterns = patterns(
         name='sentry-api-0-project-tagkey-values'),
 
     # Groups
+    url(r'^groups/$',
+        GroupIndexEndpoint.as_view(),
+        name='sentry-api-group-index'),
     url(r'^groups/(?P<group_id>\d+)/$',
         GroupDetailsEndpoint.as_view(),
         name='sentry-api-0-group-details'),
diff --git a/src/sentry/static/sentry/app/routes.jsx b/src/sentry/static/sentry/app/routes.jsx
index eb9fe09ea0..e1563ca46b 100644
--- a/src/sentry/static/sentry/app/routes.jsx
+++ b/src/sentry/static/sentry/app/routes.jsx
@@ -19,6 +19,7 @@ var ProjectDetails = require("./views/projectDetails");
 var ProjectReleases = require("./views/projectReleases");
 var PropTypes = require("./proptypes");
 var ReleaseDetails = require("./views/releaseDetails");
+var SharedGroupDetails = require("./views/sharedGroupDetails");
 var Stream = require("./views/stream");
 var TeamDetails = require("./views/teamDetails");
 
@@ -45,6 +46,7 @@ var routes = (
     <Route path="/organizations/:orgId/" handler={OrganizationDetails}>
       <Route name="organizationStats" path="stats/" handler={OrganizationStats} />
     </Route>
+    <Route path="/share/group/:shareId/" handler={SharedGroupDetails} />
   </Route>
 );
 
diff --git a/src/sentry/static/sentry/app/views/groupDetails/header.jsx b/src/sentry/static/sentry/app/views/groupDetails/header.jsx
index 6efbb8ed7d..7b31140cab 100644
--- a/src/sentry/static/sentry/app/views/groupDetails/header.jsx
+++ b/src/sentry/static/sentry/app/views/groupDetails/header.jsx
@@ -54,6 +54,10 @@ var GroupHeader = React.createClass({
     });
   },
 
+  onShare() {
+    alert(this.props.group.shareId);
+  },
+
   onTogglePublic() {
     var group = this.props.group;
     var project = this.getProject();
@@ -136,14 +140,9 @@ var GroupHeader = React.createClass({
               }
             </a>
           </div>
-          <div className={(group.isPublic ? 'on ' : '') + 'group-privacy'}>
-            <a onClick={this.onTogglePublic}>
-              <span className="icon" />
-              {!group.isPublic ?
-                'Make this event public'
-              :
-                'Revoke public access to event'
-              }
+          <div className="group-privacy">
+            <a onClick={this.onShare}>
+              <span className="icon" /> Share this event
             </a>
           </div>
         </div>
diff --git a/src/sentry/static/sentry/app/views/sharedGroupDetails.jsx b/src/sentry/static/sentry/app/views/sharedGroupDetails.jsx
new file mode 100644
index 0000000000..2845d4ce1b
--- /dev/null
+++ b/src/sentry/static/sentry/app/views/sharedGroupDetails.jsx
@@ -0,0 +1,97 @@
+var React = require("react");
+var Reflux = require("reflux");
+var Router = require("react-router");
+
+var api = require("../api");
+var GroupHeader = require("./groupDetails/header");
+var GroupStore = require("../stores/groupStore");
+var LoadingError = require("../components/loadingError");
+var LoadingIndicator = require("../components/loadingIndicator");
+var PropTypes = require("../proptypes");
+var utils = require("../utils");
+
+var SharedGroupDetails = React.createClass({
+  contextTypes: {
+    router: React.PropTypes.func
+  },
+
+  mixins: [
+    Reflux.listenTo(GroupStore, "onGroupChange")
+  ],
+
+  childContextTypes: {
+    group: PropTypes.Group,
+  },
+
+  getChildContext() {
+    return {
+      group: this.state.group,
+    };
+  },
+
+  getInitialState() {
+    return {
+      group: null,
+      loading: true,
+      error: false
+    };
+  },
+
+  componentWillMount() {
+    this.fetchData();
+  },
+
+  fetchData() {
+    this.setState({
+      loading: true,
+      error: false
+    });
+
+    api.request(this.getGroupDetailsEndpoint(), {
+      success: (data) => {
+        this.setState({
+          loading: false
+        });
+        GroupStore.loadInitialData([data]);
+      }, error: () => {
+        this.setState({
+          loading: false,
+          error: true
+        });
+      }
+    });
+  },
+
+  onGroupChange(itemIds) {
+    var id = this.context.router.getCurrentParams().groupId;
+    if (itemIds.has(id)) {
+      this.setState({
+        group: GroupStore.get(id),
+      });
+    }
+  },
+
+  getGroupDetailsEndpoint() {
+    var id = this.context.router.getCurrentParams().shareId;
+
+    return '/groups/?shareId=' + id;
+  },
+
+  render() {
+    var group = this.state.group;
+    var params = this.context.router.getCurrentParams();
+
+    if (this.state.loading)
+      return <LoadingIndicator />;
+    else if (this.state.error)
+      return <LoadingError onRetry={this.fetchData} />;
+
+    return (
+      <div className={this.props.className}>
+        Group Details
+      </div>
+    );
+  }
+});
+
+module.exports = SharedGroupDetails;
diff --git a/src/sentry/web/frontend/react_page.py b/src/sentry/web/frontend/react_page.py
index 9886315934..e7584fda43 100644
--- a/src/sentry/web/frontend/react_page.py
+++ b/src/sentry/web/frontend/react_page.py
@@ -1,16 +1,14 @@
 from __future__ import absolute_import
 
 from sentry import features
-from sentry.web.frontend.base import OrganizationView
+from sentry.web.frontend.base import BaseView, OrganizationView
 from sentry.utils import json
 from sentry.utils.functional import extract_lazy_object
 from django.utils.safestring import mark_safe
 
 
-# TODO(dcramer): once we implement basic auth hooks in React we can make this
-# generic
-class ReactPageView(OrganizationView):
-    def handle(self, request, **kwargs):
+class ReactMixin(object):
+    def handle_react(self, request):
         if request.user.is_authenticated():
             # remove lazy eval
             request.user = extract_lazy_object(request.user)
@@ -26,3 +24,15 @@ class ReactPageView(OrganizationView):
         }
 
         return self.respond('sentry/bases/react.html', context)
+
+
+# TODO(dcramer): once we implement basic auth hooks in React we can make this
+# generic
+class ReactPageView(OrganizationView, ReactMixin):
+    def handle(self, request, **kwargs):
+        return self.handle_react(request)
+
+
+class GenericReactPageView(BaseView, ReactMixin):
+    def handle(self, request, **kwargs):
+        return self.handle_react(request)
diff --git a/src/sentry/web/urls.py b/src/sentry/web/urls.py
index 1831439b77..ead121fb66 100644
--- a/src/sentry/web/urls.py
+++ b/src/sentry/web/urls.py
@@ -56,7 +56,7 @@ from sentry.web.frontend.project_issue_tracking import ProjectIssueTrackingView
 from sentry.web.frontend.project_notifications import ProjectNotificationsView
 from sentry.web.frontend.project_release_tracking import ProjectReleaseTrackingView
 from sentry.web.frontend.project_settings import ProjectSettingsView
-from sentry.web.frontend.react_page import ReactPageView
+from sentry.web.frontend.react_page import GenericReactPageView, ReactPageView
 from sentry.web.frontend.release_webhook import ReleaseWebhookView
 from sentry.web.frontend.remove_organization import RemoveOrganizationView
 from sentry.web.frontend.remove_project import RemoveProjectView
@@ -347,6 +347,9 @@ urlpatterns += patterns('',
     url(r'^api/(?P<organization_slug>[\w_-]+)/projects/search/$', api.search_projects,
         name='sentry-api-search-projects'),
 
+    url(r'^share/group/(?P<share_id>[\w_-]+)/$', GenericReactPageView.as_view(auth_required=False),
+        name='sentry-group-shared'),
+
     # TV dashboard
     url(r'^(?P<organization_slug>[\w_-]+)/teams/(?P<team_slug>[\w_-]+)/wall/$', groups.wall_display,
         name='sentry-wall'),
