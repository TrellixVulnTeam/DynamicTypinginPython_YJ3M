commit 7bbd879cbf3700d40952cd96218df605ab3437b0
Author: Evan Purkhiser <evanpurkhiser@gmail.com>
Date:   Mon Mar 23 12:39:19 2020 -0700

    chore(ts): Improve typing for sidebar items (#17798)

diff --git a/src/sentry/static/sentry/app/components/onboardingWizard/sidebar.tsx b/src/sentry/static/sentry/app/components/onboardingWizard/sidebar.tsx
index 72e2712fc5..070fa0631a 100644
--- a/src/sentry/static/sentry/app/components/onboardingWizard/sidebar.tsx
+++ b/src/sentry/static/sentry/app/components/onboardingWizard/sidebar.tsx
@@ -12,16 +12,16 @@ import {t} from 'app/locale';
 import {IconLightning, IconLock, IconCheckmark} from 'app/icons';
 import Tooltip from 'app/components/tooltip';
 import SidebarPanel from 'app/components/sidebar/sidebarPanel';
+import {CommonSidebarProps} from 'app/components/sidebar/types';
 
 import {findUpcomingTasks, findCompleteTasks, findActiveTasks, taskIsDone} from './utils';
 import {getMergedTasks} from './taskConfig';
 import Task from './task';
 import ProgressHeader from './progressHeader';
 
-type Props = {
+type Props = Pick<CommonSidebarProps, 'orientation' | 'collapsed'> & {
   api: Client;
   organization: Organization;
-  collapsed: boolean;
   onClose: () => void;
 };
 
@@ -127,7 +127,7 @@ class OnboardingWizardSidebar extends React.Component<Props> {
   );
 
   render() {
-    const {collapsed, onClose} = this.props;
+    const {collapsed, orientation, onClose} = this.props;
     const {all, active, upcoming, complete} = this.segmentedTasks;
 
     const completeList = (
@@ -148,7 +148,11 @@ class OnboardingWizardSidebar extends React.Component<Props> {
     ];
 
     return (
-      <TaskSidebarPanel collapsed={collapsed} hidePanel={onClose}>
+      <TaskSidebarPanel
+        collapsed={collapsed}
+        hidePanel={onClose}
+        orientation={orientation}
+      >
         <ProgressHeader allTasks={all} completedTasks={complete} />
         <TaskList>
           <PoseGroup exitPose="markComplete">{items}</PoseGroup>
diff --git a/src/sentry/static/sentry/app/components/sidebar/broadcasts.tsx b/src/sentry/static/sentry/app/components/sidebar/broadcasts.tsx
index 335f0865fe..aff9cf87ac 100644
--- a/src/sentry/static/sentry/app/components/sidebar/broadcasts.tsx
+++ b/src/sentry/static/sentry/app/components/sidebar/broadcasts.tsx
@@ -12,20 +12,14 @@ import withApi from 'app/utils/withApi';
 import {Client} from 'app/api';
 import {Organization, Broadcast} from 'app/types';
 
-import {SidebarOrientation, SidebarPanelKey} from './types';
+import {CommonSidebarProps} from './types';
 
 const MARK_SEEN_DELAY = 1000;
 const POLLER_DELAY = 600000; // 10 minute poll (60 * 10 * 1000)
 
-type Props = {
+type Props = CommonSidebarProps & {
   api: Client;
   organization: Organization;
-  orientation: SidebarOrientation;
-  collapsed: boolean;
-  showPanel: boolean;
-  currentPanel: SidebarPanelKey;
-  hidePanel: () => void;
-  onShowPanel: () => void;
 };
 
 type State = {
diff --git a/src/sentry/static/sentry/app/components/sidebar/help.tsx b/src/sentry/static/sentry/app/components/sidebar/help.tsx
index f9c3389b95..6aac42cd4d 100644
--- a/src/sentry/static/sentry/app/components/sidebar/help.tsx
+++ b/src/sentry/static/sentry/app/components/sidebar/help.tsx
@@ -11,13 +11,10 @@ import {Organization} from 'app/types';
 
 import SidebarMenuItem from './sidebarMenuItem';
 import SidebarDropdownMenu from './sidebarDropdownMenu.styled';
-import {SidebarOrientation} from './types';
+import {CommonSidebarProps} from './types';
 
-type Props = {
+type Props = Pick<CommonSidebarProps, 'collapsed' | 'hidePanel' | 'orientation'> & {
   organization: Organization;
-  collapsed: boolean;
-  hidePanel: () => void;
-  orientation: SidebarOrientation;
 };
 
 const SidebarHelp = ({orientation, collapsed, hidePanel, organization}: Props) => (
diff --git a/src/sentry/static/sentry/app/components/sidebar/legacyOnboardingStatus.tsx b/src/sentry/static/sentry/app/components/sidebar/legacyOnboardingStatus.tsx
index f2487ffa4e..c23a437d03 100644
--- a/src/sentry/static/sentry/app/components/sidebar/legacyOnboardingStatus.tsx
+++ b/src/sentry/static/sentry/app/components/sidebar/legacyOnboardingStatus.tsx
@@ -10,14 +10,10 @@ import {tct, t} from 'app/locale';
 import TodoList from 'app/components/onboardingWizard/todoList';
 import Tooltip from 'app/components/tooltip';
 import {Organization} from 'app/types';
+import {CommonSidebarProps} from 'app/components/sidebar/types';
 
-type Props = {
+type Props = CommonSidebarProps & {
   org: Organization;
-  currentPanel: string;
-  onShowPanel: () => void;
-  hidePanel: () => void;
-  showPanel: boolean;
-  collapsed: boolean;
 };
 
 function recordAnalytics(currentPanel: string, orgId: string) {
@@ -49,7 +45,15 @@ class LegacyOnboardingStatus extends React.Component<Props> {
   }
 
   render() {
-    const {collapsed, org, currentPanel, hidePanel, showPanel, onShowPanel} = this.props;
+    const {
+      collapsed,
+      org,
+      currentPanel,
+      orientation,
+      hidePanel,
+      showPanel,
+      onShowPanel,
+    } = this.props;
 
     if (!(org.features && org.features.includes('onboarding'))) {
       return null;
@@ -88,6 +92,7 @@ class LegacyOnboardingStatus extends React.Component<Props> {
         {showPanel && currentPanel === 'todos' && (
           <SidebarPanel
             collapsed={collapsed}
+            orientation={orientation}
             title={t('Getting Started with Sentry')}
             hidePanel={hidePanel}
           >
diff --git a/src/sentry/static/sentry/app/components/sidebar/onboardingStatus.tsx b/src/sentry/static/sentry/app/components/sidebar/onboardingStatus.tsx
index 700b124bcc..383e85581d 100644
--- a/src/sentry/static/sentry/app/components/sidebar/onboardingStatus.tsx
+++ b/src/sentry/static/sentry/app/components/sidebar/onboardingStatus.tsx
@@ -15,13 +15,10 @@ import ProgressRing, {
   RingText,
 } from 'app/components/progressRing';
 
-type Props = {
+import {CommonSidebarProps} from './types';
+
+type Props = CommonSidebarProps & {
   org: Organization;
-  currentPanel: string;
-  onShowPanel: () => void;
-  hidePanel: () => void;
-  showPanel: boolean;
-  collapsed: boolean;
 };
 
 function recordAnalytics(currentPanel: string, orgId: string) {
@@ -52,7 +49,15 @@ class OnboardingStatus extends React.Component<Props> {
   }
 
   render() {
-    const {collapsed, org, currentPanel, hidePanel, showPanel, onShowPanel} = this.props;
+    const {
+      collapsed,
+      org,
+      currentPanel,
+      orientation,
+      hidePanel,
+      showPanel,
+      onShowPanel,
+    } = this.props;
 
     if (!(org.features && org.features.includes('onboarding'))) {
       return null;
@@ -100,7 +105,13 @@ class OnboardingStatus extends React.Component<Props> {
             </div>
           )}
         </Container>
-        {isActive && <OnboardingSidebar collapsed={collapsed} onClose={hidePanel} />}
+        {isActive && (
+          <OnboardingSidebar
+            orientation={orientation}
+            collapsed={collapsed}
+            onClose={hidePanel}
+          />
+        )}
       </React.Fragment>
     );
   }
diff --git a/src/sentry/static/sentry/app/components/sidebar/serviceIncidents.tsx b/src/sentry/static/sentry/app/components/sidebar/serviceIncidents.tsx
index 32d7a8d0ea..d30d96d3b7 100644
--- a/src/sentry/static/sentry/app/components/sidebar/serviceIncidents.tsx
+++ b/src/sentry/static/sentry/app/components/sidebar/serviceIncidents.tsx
@@ -8,19 +8,12 @@ import {loadIncidents} from 'app/actionCreators/serviceIncidents';
 import {SentryServiceStatus} from 'app/types';
 import space from 'app/styles/space';
 
-import {SidebarOrientation, SidebarPanelKey} from './types';
+import {CommonSidebarProps} from './types';
 import SidebarPanelEmpty from './sidebarPanelEmpty';
 import SidebarItem from './sidebarItem';
 import SidebarPanel from './sidebarPanel';
 
-type Props = {
-  orientation: SidebarOrientation;
-  collapsed: boolean;
-  showPanel: boolean;
-  currentPanel: SidebarPanelKey;
-  hidePanel: () => void;
-  onShowPanel: () => void;
-};
+type Props = CommonSidebarProps;
 
 type State = {
   status: SentryServiceStatus | null;
diff --git a/src/sentry/static/sentry/app/components/sidebar/sidebarDropdown/index.tsx b/src/sentry/static/sentry/app/components/sidebar/sidebarDropdown/index.tsx
index 87603c9756..10f4ea8822 100644
--- a/src/sentry/static/sentry/app/components/sidebar/sidebarDropdown/index.tsx
+++ b/src/sentry/static/sentry/app/components/sidebar/sidebarDropdown/index.tsx
@@ -17,16 +17,14 @@ import TextOverflow from 'app/components/textOverflow';
 import withApi from 'app/utils/withApi';
 import {Organization, User, Config} from 'app/types';
 import {Client} from 'app/api';
-import {SidebarOrientation} from 'app/components/sidebar/types';
 import space from 'app/styles/space';
 
+import {CommonSidebarProps} from '../types';
 import SwitchOrganization from './switchOrganization';
 import Divider from './divider.styled';
 
-type Props = {
+type Props = Pick<CommonSidebarProps, 'orientation' | 'collapsed'> & {
   api: Client;
-  orientation: SidebarOrientation;
-  collapsed: boolean;
   org: Organization;
   user: User;
   config: Config;
diff --git a/src/sentry/static/sentry/app/components/sidebar/sidebarPanel.tsx b/src/sentry/static/sentry/app/components/sidebar/sidebarPanel.tsx
index 509b8b5e15..c0bd8fc855 100644
--- a/src/sentry/static/sentry/app/components/sidebar/sidebarPanel.tsx
+++ b/src/sentry/static/sentry/app/components/sidebar/sidebarPanel.tsx
@@ -9,12 +9,12 @@ import space from 'app/styles/space';
 import {IconClose} from 'app/icons';
 import {slideInLeft} from 'app/styles/animations';
 
-type Props = React.HTMLProps<HTMLDivElement> & {
-  title?: string;
-  collapsed?: boolean;
-  orientation?: 'top' | 'left';
-  hidePanel?: () => void;
-};
+import {CommonSidebarProps} from './types';
+
+type Props = React.HTMLProps<HTMLDivElement> &
+  Pick<CommonSidebarProps, 'collapsed' | 'orientation' | 'hidePanel'> & {
+    title?: string;
+  };
 
 /**
  * Get the container element of the sidebar that react portals into.
@@ -66,7 +66,9 @@ class SidebarPanel extends React.Component<Props> {
 
 export default SidebarPanel;
 
-const getPositionForOrientation = (p: Props & {theme: Theme}) =>
+const getPositionForOrientation = (
+  p: Pick<CommonSidebarProps, 'orientation' | 'collapsed'> & {theme: Theme}
+) =>
   p.orientation === 'top'
     ? css`
         top: ${p.theme.sidebar.mobileHeight};
diff --git a/src/sentry/static/sentry/app/components/sidebar/types.tsx b/src/sentry/static/sentry/app/components/sidebar/types.tsx
index 8c1837cb94..03e7156755 100644
--- a/src/sentry/static/sentry/app/components/sidebar/types.tsx
+++ b/src/sentry/static/sentry/app/components/sidebar/types.tsx
@@ -1,3 +1,12 @@
 export type SidebarOrientation = 'top' | 'left';
 
 export type SidebarPanelKey = 'broadcasts' | 'todos' | 'statusupdate' | '';
+
+export type CommonSidebarProps = {
+  orientation: SidebarOrientation;
+  collapsed: boolean;
+  showPanel: boolean;
+  currentPanel: SidebarPanelKey;
+  hidePanel: () => void;
+  onShowPanel: () => void;
+};
