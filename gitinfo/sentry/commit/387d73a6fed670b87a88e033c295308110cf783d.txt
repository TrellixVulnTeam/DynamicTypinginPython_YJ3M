commit 387d73a6fed670b87a88e033c295308110cf783d
Author: Jess MacQueen <jessmacqueen@gmail.com>
Date:   Tue Jan 29 21:52:02 2019 -0800

    ref(tagstore): Add support for multi envs to tagstore.get_group_tag_keys

diff --git a/src/sentry/api/endpoints/group_details.py b/src/sentry/api/endpoints/group_details.py
index 0d02741787..5ae89af674 100644
--- a/src/sentry/api/endpoints/group_details.py
+++ b/src/sentry/api/endpoints/group_details.py
@@ -219,7 +219,7 @@ class GroupDetailsEndpoint(GroupEndpoint, EnvironmentMixin):
             get_range = functools.partial(tsdb.get_range,
                                           environment_ids=environment_id and [environment_id])
             tags = tagstore.get_group_tag_keys(
-                group.project_id, group.id, environment_id, limit=100)
+                group.project_id, group.id, environment_id and [environment_id], limit=100)
             if environment_id is None:
                 user_reports = UserReport.objects.filter(group=group)
             else:
diff --git a/src/sentry/tagstore/base.py b/src/sentry/tagstore/base.py
index e70cd0c421..8d7dbfa8a7 100644
--- a/src/sentry/tagstore/base.py
+++ b/src/sentry/tagstore/base.py
@@ -247,9 +247,9 @@ class TagStorage(Service):
         """
         raise NotImplementedError
 
-    def get_group_tag_keys(self, project_id, group_id, environment_id, limit=None, keys=None):
+    def get_group_tag_keys(self, project_id, group_id, environment_ids, limit=None, keys=None):
         """
-        >>> get_group_tag_key(1, 2, 3)
+        >>> get_group_tag_key(1, 2, [3])
         """
         raise NotImplementedError
 
@@ -423,7 +423,9 @@ class TagStorage(Service):
             self, project_id, group_id, environment_id, keys=None, value_limit=TOP_VALUES_DEFAULT_LIMIT):
 
         # If keys is unspecified, we will grab all tag keys for this group.
-        tag_keys = self.get_group_tag_keys(project_id, group_id, environment_id, keys=keys)
+        tag_keys = self.get_group_tag_keys(
+            project_id, group_id, environment_id and [environment_id], keys=keys
+        )
 
         for tk in tag_keys:
             tk.top_values = self.get_top_group_tag_values(
diff --git a/src/sentry/tagstore/legacy/backend.py b/src/sentry/tagstore/legacy/backend.py
index 12c88fe205..0a72404e4c 100644
--- a/src/sentry/tagstore/legacy/backend.py
+++ b/src/sentry/tagstore/legacy/backend.py
@@ -341,7 +341,7 @@ class LegacyTagStorage(TagStorage):
 
         return transformers[models.GroupTagKey](instance)
 
-    def get_group_tag_keys(self, project_id, group_id, environment_id, limit=None, keys=None):
+    def get_group_tag_keys(self, project_id, group_id, environment_ids, limit=None, keys=None):
         qs = models.GroupTagKey.objects.filter(group_id=group_id)
 
         if keys is not None:
diff --git a/src/sentry/tagstore/snuba/backend.py b/src/sentry/tagstore/snuba/backend.py
index 91d89b66ac..3eaff96b02 100644
--- a/src/sentry/tagstore/snuba/backend.py
+++ b/src/sentry/tagstore/snuba/backend.py
@@ -141,12 +141,12 @@ class SnubaTagStorage(TagStorage):
                 top_values=top_values
             )
 
-    def __get_tag_keys(self, project_id, group_id, environment_id, limit=1000, keys=None):
+    def __get_tag_keys(self, project_id, group_id, environment_ids, limit=1000, keys=None):
         start, end = self.get_time_range()
         return self.__get_tag_keys_for_projects(
             [project_id],
             group_id,
-            [environment_id] if environment_id else None,
+            environment_ids,
             start,
             end,
             limit,
@@ -225,7 +225,7 @@ class SnubaTagStorage(TagStorage):
 
     def get_tag_keys(self, project_id, environment_id, status=TagKeyStatus.VISIBLE):
         assert status is TagKeyStatus.VISIBLE
-        return self.__get_tag_keys(project_id, None, environment_id)
+        return self.__get_tag_keys(project_id, None, environment_id and [environment_id])
 
     def get_tag_keys_for_projects(self, projects, environments, start,
                                   end, status=TagKeyStatus.VISIBLE):
@@ -243,8 +243,8 @@ class SnubaTagStorage(TagStorage):
         return self.__get_tag_key_and_top_values(
             project_id, group_id, environment_id, key, limit=TOP_VALUES_DEFAULT_LIMIT)
 
-    def get_group_tag_keys(self, project_id, group_id, environment_id, limit=None, keys=None):
-        return self.__get_tag_keys(project_id, group_id, environment_id, limit=limit, keys=keys)
+    def get_group_tag_keys(self, project_id, group_id, environment_ids, limit=None, keys=None):
+        return self.__get_tag_keys(project_id, group_id, environment_ids, limit=limit, keys=keys)
 
     def get_group_tag_value(self, project_id, group_id, environment_id, key, value):
         return self.__get_tag_value(project_id, group_id, environment_id, key, value)
@@ -343,7 +343,9 @@ class SnubaTagStorage(TagStorage):
         start, end = self.get_time_range()
 
         # First get totals and unique counts by key.
-        keys_with_counts = self.get_group_tag_keys(project_id, group_id, environment_id, keys=keys)
+        keys_with_counts = self.get_group_tag_keys(
+            project_id, group_id, environment_id and [environment_id], keys=keys
+        )
 
         # Then get the top values with first_seen/last_seen/count for each
         filters = {
diff --git a/src/sentry/tagstore/v2/backend.py b/src/sentry/tagstore/v2/backend.py
index 886a0f3dbe..6797e0d16e 100644
--- a/src/sentry/tagstore/v2/backend.py
+++ b/src/sentry/tagstore/v2/backend.py
@@ -511,7 +511,13 @@ class V2TagStorage(TagStorage):
 
         return transformers[models.GroupTagKey](instance)
 
-    def get_group_tag_keys(self, project_id, group_id, environment_id, limit=None, keys=None):
+    def get_group_tag_keys(self, project_id, group_id, environment_ids, limit=None, keys=None):
+        # only the snuba backend supports multi env
+        if environment_ids and len(environment_ids) > 1:
+            raise NotImplementedError
+
+        environment_id = environment_ids and environment_ids[0]
+
         qs = models.GroupTagKey.objects.select_related('_key').filter(
             project_id=project_id,
             group_id=group_id,
diff --git a/tests/sentry/tagstore/v2/test_backend.py b/tests/sentry/tagstore/v2/test_backend.py
index ca84b4a149..1c62536ffc 100644
--- a/tests/sentry/tagstore/v2/test_backend.py
+++ b/tests/sentry/tagstore/v2/test_backend.py
@@ -182,7 +182,7 @@ class TagStorage(TestCase):
         assert self.ts.get_group_tag_keys(
             project_id=self.proj1.id,
             group_id=self.proj1group1.id,
-            environment_id=self.proj1env1.id,
+            environment_ids=[self.proj1env1.id],
         ) == set()
 
         gtk = self.ts.create_group_tag_key(
@@ -195,7 +195,7 @@ class TagStorage(TestCase):
         self.ts.get_group_tag_keys(
             project_id=self.proj1.id,
             group_id=self.proj1group1.id,
-            environment_id=self.proj1env1.id,
+            environment_ids=[self.proj1env1.id],
         ) == [transformers[models.GroupTagKey](gtk)]
 
         models.TagKey.objects.get(
diff --git a/tests/sentry/tasks/test_merge.py b/tests/sentry/tasks/test_merge.py
index 7cc3993e08..1edd00f4c7 100644
--- a/tests/sentry/tasks/test_merge.py
+++ b/tests/sentry/tasks/test_merge.py
@@ -169,7 +169,7 @@ class MergeGroupTest(TestCase):
             tagstore.get_group_tag_keys(
                 other.project_id,
                 other.id,
-                environment_id=self.environment.id)) == 0
+                environment_ids=[self.environment.id])) == 0
         assert len(
             GroupTagValue.objects.filter(
                 project_id=other.project_id,
diff --git a/tests/sentry/tasks/test_unmerge.py b/tests/sentry/tasks/test_unmerge.py
index 73b16f77f1..cb06f647d1 100644
--- a/tests/sentry/tasks/test_unmerge.py
+++ b/tests/sentry/tasks/test_unmerge.py
@@ -325,7 +325,7 @@ class UnmergeTestCase(TestCase):
 
         assert set(
             [(gtk.key, gtk.values_seen)
-             for gtk in tagstore.get_group_tag_keys(source.project_id, source.id, production_environment.id)]
+             for gtk in tagstore.get_group_tag_keys(source.project_id, source.id, [production_environment.id])]
         ) == set([
             (u'color', 3),
             (u'environment', 1),
@@ -463,7 +463,7 @@ class UnmergeTestCase(TestCase):
 
         assert set(
             [(gtk.key, gtk.values_seen)
-             for gtk in tagstore.get_group_tag_keys(source.project_id, source.id, production_environment.id)]
+             for gtk in tagstore.get_group_tag_keys(source.project_id, source.id, [production_environment.id])]
         ) == set([
             (u'color', 3),
             (u'environment', 1),
@@ -526,7 +526,7 @@ class UnmergeTestCase(TestCase):
         ])
 
         assert set([(gtk.key, gtk.values_seen)
-                    for gtk in tagstore.get_group_tag_keys(source.project_id, source.id, production_environment.id)]
+                    for gtk in tagstore.get_group_tag_keys(source.project_id, source.id, [production_environment.id])]
                    ) == set(
             [
                 (u'color', 3),
diff --git a/tests/snuba/tagstore/test_tagstore_backend.py b/tests/snuba/tagstore/test_tagstore_backend.py
index 16766afc36..220e0244f5 100644
--- a/tests/snuba/tagstore/test_tagstore_backend.py
+++ b/tests/snuba/tagstore/test_tagstore_backend.py
@@ -188,7 +188,7 @@ class TagStorageTest(SnubaTestCase):
             k.key: k for k in self.ts.get_group_tag_keys(
                 project_id=self.proj1.id,
                 group_id=self.proj1group1.id,
-                environment_id=self.proj1env1.id,
+                environment_ids=[self.proj1env1.id],
             )
         }
         assert set(keys) == set(['baz', 'environment', 'foo', 'sentry:release', 'sentry:user'])
