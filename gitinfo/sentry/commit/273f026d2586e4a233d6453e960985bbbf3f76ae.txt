commit 273f026d2586e4a233d6453e960985bbbf3f76ae
Author: MeredithAnya <meredith@getsentry.com>
Date:   Tue Sep 3 16:37:26 2019 -0400

    ref(app-platform): UI support for pending states (#14541)
    
    * ui supports pending state

diff --git a/src/sentry/static/sentry/app/views/settings/organizationDeveloperSettings/sentryApplicationRow.jsx b/src/sentry/static/sentry/app/views/settings/organizationDeveloperSettings/sentryApplicationRow.jsx
index 35fcad68c5..91f2a6ad89 100644
--- a/src/sentry/static/sentry/app/views/settings/organizationDeveloperSettings/sentryApplicationRow.jsx
+++ b/src/sentry/static/sentry/app/views/settings/organizationDeveloperSettings/sentryApplicationRow.jsx
@@ -1,7 +1,7 @@
 import React from 'react';
 import {Box, Flex} from 'grid-emotion';
 import {Link} from 'react-router';
-import {omit} from 'lodash';
+import {capitalize, omit} from 'lodash';
 
 import Access from 'app/components/acl/access';
 import Button from 'app/components/button';
@@ -18,6 +18,10 @@ import CircleIndicator from 'app/components/circleIndicator';
 import PluginIcon from 'app/plugins/components/pluginIcon';
 import {openSentryAppDetailsModal} from 'app/actionCreators/modal';
 
+const INSTALLED = 'Installed';
+const NOT_INSTALLED = 'Not Installed';
+const PENDING = 'Pending';
+
 export default class SentryApplicationRow extends React.PureComponent {
   static propTypes = {
     app: SentryTypes.SentryApplication,
@@ -147,18 +151,18 @@ export default class SentryApplicationRow extends React.PureComponent {
   renderStatus() {
     const {app, showInstallationStatus} = this.props;
     const isInternal = this.isInternal;
-    const isInstalled = this.isInstalled;
+    const status = this.installationStatus;
     if (this.hideStatus()) {
       return null;
     }
     if (showInstallationStatus) {
       //if internal and we show installation status, we don't show the learn more
       if (isInternal) {
-        return <Status enabled isInternal={isInternal} />;
+        return <Status status={status} isInternal={isInternal} />;
       }
       return (
         <React.Fragment>
-          <Status enabled={isInstalled} isInternal={false} />
+          <Status status={status} isInternal={false} />
           <StyledLink onClick={this.openLearnMore}>{t('Learn More')}</StyledLink>
         </React.Fragment>
       );
@@ -170,6 +174,14 @@ export default class SentryApplicationRow extends React.PureComponent {
     return this.props.installs && this.props.installs.length > 0;
   }
 
+  get installationStatus() {
+    if (this.props.installs && this.props.installs.length > 0) {
+      return capitalize(this.props.installs[0].status);
+    }
+
+    return NOT_INSTALLED;
+  }
+
   openLearnMore = () => {
     const {app, onInstall, organization} = this.props;
     const isInstalled = !!this.isInstalled;
@@ -302,22 +314,25 @@ const StyledButton = styled(Button)`
   color: ${p => p.theme.gray2};
 `;
 
+const color = {
+  [INSTALLED]: 'success',
+  [NOT_INSTALLED]: 'gray2',
+  [PENDING]: 'yellowOrange',
+};
+
 const Status = styled(
-  withTheme(({enabled, ...props}) => {
+  withTheme(({status, ...props}) => {
     //need to omit isInternal
     const propsToPass = omit(props, ['isInternal']);
     return (
       <Flex align="center">
-        <CircleIndicator
-          size={6}
-          color={enabled ? props.theme.success : props.theme.gray2}
-        />
-        <div {...propsToPass}>{enabled ? t('Installed') : t('Not Installed')}</div>
+        <CircleIndicator size={6} color={props.theme[color[status]]} />
+        <div {...propsToPass}>{t(`${status}`)}</div>
       </Flex>
     );
   })
 )`
-  color: ${props => (props.enabled ? props.theme.success : props.theme.gray2)};
+  color: ${props => props.theme[color[props.status]]};
   margin-left: ${space(0.5)};
   font-weight: light;
   &:after {
diff --git a/tests/js/fixtures/sentryAppInstallation.js b/tests/js/fixtures/sentryAppInstallation.js
index c08c32c32a..ca55f47a67 100644
--- a/tests/js/fixtures/sentryAppInstallation.js
+++ b/tests/js/fixtures/sentryAppInstallation.js
@@ -8,6 +8,7 @@ export function SentryAppInstallation(params = {}) {
     organization: {
       slug: 'the-best-org',
     },
+    status: 'installed',
     ...params,
   };
 }
diff --git a/tests/js/spec/views/settings/organizationIntegrations/__snapshots__/sentryAppInstallations.spec.jsx.snap b/tests/js/spec/views/settings/organizationIntegrations/__snapshots__/sentryAppInstallations.spec.jsx.snap
index 2ccff22615..810cdb4fc9 100644
--- a/tests/js/spec/views/settings/organizationIntegrations/__snapshots__/sentryAppInstallations.spec.jsx.snap
+++ b/tests/js/spec/views/settings/organizationIntegrations/__snapshots__/sentryAppInstallations.spec.jsx.snap
@@ -175,14 +175,17 @@ exports[`Sentry App Installations when Apps exist displays all Apps owned by the
                           >
                             <Status
                               isInternal={false}
+                              status="Not Installed"
                             >
                               <WithTheme(Component)
                                 className="css-lk5f1o-Status eac2pqx8"
                                 isInternal={false}
+                                status="Not Installed"
                               >
                                 <Component
                                   className="css-lk5f1o-Status eac2pqx8"
                                   isInternal={false}
+                                  status="Not Installed"
                                   theme={
                                     Object {
                                       "alert": Object {
diff --git a/tests/js/spec/views/settings/organizationIntegrations/index.spec.jsx b/tests/js/spec/views/settings/organizationIntegrations/index.spec.jsx
index 5a968048cf..92218fd87f 100644
--- a/tests/js/spec/views/settings/organizationIntegrations/index.spec.jsx
+++ b/tests/js/spec/views/settings/organizationIntegrations/index.spec.jsx
@@ -147,11 +147,11 @@ describe('OrganizationIntegrations', () => {
     it('places installed Integrations above uninstalled ones', () => {
       // Installed apps are shown at the top of the list
       const installed = wrapper.find('SentryAppInstallations').at(0);
-      expect(installed.find('Status').prop('enabled')).toBe(true);
+      expect(installed.find('Status').prop('status')).toBe('Installed');
 
       // Uninstalled are shown lower.
       const uninstalled = wrapper.find('SentryAppInstallations').at(1);
-      expect(uninstalled.find('Status').prop('enabled')).toBeFalsy();
+      expect(uninstalled.find('Status').prop('status')).toBe('Not Installed');
     });
 
     it('sorts Sentry App Integrations among Integrations, alphabetically', () => {
@@ -263,6 +263,48 @@ describe('OrganizationIntegrations', () => {
       });
     });
 
+    describe('pending applications', () => {
+      it('renders the pending status', () => {
+        const installedSentryApp = TestStubs.SentryApp({
+          name: 'An Integration',
+          slug: 'an-integration',
+        });
+
+        const sentryAppInstall = TestStubs.SentryAppInstallation({
+          organization: {
+            slug: org.slug,
+          },
+          app: {
+            slug: installedSentryApp.slug,
+            uuid: installedSentryApp.uuid,
+          },
+          status: 'pending',
+        });
+
+        Client.addMockResponse({
+          url: `/organizations/${org.slug}/sentry-apps/`,
+          body: [installedSentryApp],
+        });
+
+        Client.addMockResponse({
+          url: '/sentry-apps/',
+          body: [installedSentryApp],
+        });
+
+        Client.addMockResponse({
+          url: `/organizations/${org.slug}/sentry-app-installations/`,
+          body: [sentryAppInstall],
+        });
+
+        wrapper = mount(
+          <OrganizationIntegrations organization={org} params={params} />,
+          routerContext
+        );
+        const pending = wrapper.find('SentryAppInstallations').at(0);
+        expect(pending.find('Status').prop('status')).toBe('Pending');
+      });
+    });
+
     describe('internal apps are separate', () => {
       it('renders internal sentry app', () => {
         const internalApp = {...sentryApp, status: 'internal'};
