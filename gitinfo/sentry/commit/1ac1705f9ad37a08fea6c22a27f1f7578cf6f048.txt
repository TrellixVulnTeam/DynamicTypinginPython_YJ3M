commit 1ac1705f9ad37a08fea6c22a27f1f7578cf6f048
Author: Armin Ronacher <armin.ronacher@active-4.com>
Date:   Wed Feb 15 11:13:07 2017 +0100

    Switch to new heuristics without symbolizer for best address

diff --git a/src/sentry/lang/native/plugin.py b/src/sentry/lang/native/plugin.py
index 1c7166a460..ef4108d373 100644
--- a/src/sentry/lang/native/plugin.py
+++ b/src/sentry/lang/native/plugin.py
@@ -8,6 +8,7 @@ import logging
 import posixpath
 
 from symsynd.demangle import demangle_symbol
+from symsynd.heuristics import find_best_instruction
 
 from sentry.models import Project, EventError
 from sentry.plugins import Plugin2
@@ -349,6 +350,7 @@ class NativeStacktraceProcessor(StacktraceProcessor):
     def __init__(self, *args, **kwargs):
         StacktraceProcessor.__init__(self, *args, **kwargs)
         debug_meta = self.data.get('debug_meta')
+        self.cpu_name = cpu_name_from_data(self.data)
         self.sym = None
         if debug_meta:
             self.available = True
@@ -387,7 +389,8 @@ class NativeStacktraceProcessor(StacktraceProcessor):
                 'signal': signal,
             }
 
-        return self.sym.find_best_instruction(processable_frame.frame, meta=meta)
+        return find_best_instruction(
+            processable_frame.frame, self.cpu_name, meta=meta)
 
     def handles_frame(self, frame, stacktrace_info):
         platform = frame.get('platform') or self.data.get('platform')
@@ -426,6 +429,7 @@ class NativeStacktraceProcessor(StacktraceProcessor):
             if pf.cache_value is None)
 
         self.sym = Symbolizer(self.project, self.debug_meta['images'],
+                              self.cpu_name,
                               referenced_images=referenced_images)
 
         # The symbolizer gets a reference to the debug meta's images so
diff --git a/src/sentry/lang/native/symbolizer.py b/src/sentry/lang/native/symbolizer.py
index 6c774521f9..19620b614e 100644
--- a/src/sentry/lang/native/symbolizer.py
+++ b/src/sentry/lang/native/symbolizer.py
@@ -165,15 +165,6 @@ class Symbolizer(object):
                     self.cpu_name = None
                     break
 
-    def find_best_instruction(self, frame, meta=None):
-        """Finds the best instruction for a given frame."""
-        # If we have no images or cpu name we cannot possibly fix the
-        # instruction here.
-        if not self.images or self.cpu_name is None:
-            return parse_addr(frame['instruction_addr'])
-        return self.symsynd_symbolizer.find_best_instruction(
-            frame['instruction_addr'], cpu_name=self.cpu_name, meta=meta)
-
     def resolve_missing_vmaddrs(self):
         """When called this changes the vmaddr on all contained images from
         the information in the dsym files (if there is no vmaddr already).
