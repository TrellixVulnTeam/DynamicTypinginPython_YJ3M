commit c521c35bc3bfc9427db55ed126a586c6efb74319
Author: Armin Ronacher <armin.ronacher@active-4.com>
Date:   Wed May 18 22:51:23 2016 +0200

    Added a recovery flow to people only signed up with U2F

diff --git a/src/sentry/models/authenticator.py b/src/sentry/models/authenticator.py
index ae1474b907..c8bc0976ad 100644
--- a/src/sentry/models/authenticator.py
+++ b/src/sentry/models/authenticator.py
@@ -44,7 +44,8 @@ class ActivationMessageResult(ActivationResult):
 class ActivationChallengeResult(ActivationResult):
     type = 'challenge'
 
-    def __init__(self, challenge):
+    def __init__(self, challenge, message=None):
+        self.message = message
         self.challenge = challenge
 
 
@@ -163,6 +164,14 @@ class AuthenticatorInterface(object):
         return self.activate.im_func is not \
             AuthenticatorInterface.activate.im_func
 
+    @property
+    def can_validate_otp(self):
+        """If the interface is able to validate OTP codes then this returns
+        `True`.
+        """
+        return self.validate_otp.im_func is not \
+            AuthenticatorInterface.validate_otp.im_func
+
     @property
     def config(self):
         """Returns the configuration dictionary for this interface.  If
@@ -428,6 +437,8 @@ class U2fInterface(AuthenticatorInterface):
     def activate(self, request):
         return ActivationChallengeResult(
             challenge=dict(u2f.start_authenticate([self.get_u2f_device()])),
+            message=_('Insert your U2F device or the button on your U2F '
+                      'device to confirm the sign-in.')
         )
 
     def validate_response(self, request, challenge, response):
diff --git a/src/sentry/templates/sentry/twofactor.html b/src/sentry/templates/sentry/twofactor.html
index 3d780a9702..1d256e628e 100644
--- a/src/sentry/templates/sentry/twofactor.html
+++ b/src/sentry/templates/sentry/twofactor.html
@@ -10,14 +10,15 @@
     <div class="tab-pane active" id="login">
       <h3>Two-Factor Authentication</h3>
       <p>
-        Your account is protected with two-factor authentication.  To continue
-        with the sign-in you need to provide the access code from your
-        authenticator or a recovery code if you have one.
-      </p>
-      {% if activation %}
-        {% if activation.type == 'error' or activation.type == 'warning' or activation.type == 'info' %}
-          <p class="{{ activation.type }}">{{ activation.message }}</p>
+        Your account is protected with two-factor authentication.
+        {% if interface.can_validate_otp %}
+          To continue with the sign-in you
+          need to provide the access code from your authenticator or a recovery
+          code if you have one.
         {% endif %}
+      </p>
+      {% if activation and activation.message %}
+        <p class="{% if activation.type != 'challenge' %}{{ activation.type }}{% else %}info{% endif %}">{{ activation.message }}</p>
       {% endif %}
       <form class="form-stacked" action="" method="post" autocomplete="off">
         {% csrf_token %}
diff --git a/src/sentry/web/frontend/twofactor.py b/src/sentry/web/frontend/twofactor.py
index 46950e513e..5228cd7f50 100644
--- a/src/sentry/web/frontend/twofactor.py
+++ b/src/sentry/web/frontend/twofactor.py
@@ -60,11 +60,25 @@ class TwoFactorAuthView(BaseView):
 
     def get_other_interfaces(self, selected, all):
         rv = []
+
+        can_validate_otp = selected.can_validate_otp
+        backup_interface = None
+
         for idx, interface in enumerate(all):
             if interface.interface_id == selected.interface_id:
                 continue
             if idx == 0 or interface.requires_activation:
                 rv.append(interface)
+                if interface.can_validate_otp:
+                    can_validate_otp = True
+            if backup_interface is None and \
+               interface.can_validate_otp and \
+               interface.is_backup_interface:
+                backup_interface = interface
+
+        if not can_validate_otp and backup_interface is not None:
+            rv.append(backup_interface)
+
         return rv
 
     def validate_otp(self, otp, selected_interface, all_interfaces=None):
@@ -120,7 +134,7 @@ class TwoFactorAuthView(BaseView):
                                    interface.interface_id,
                                    'sentry/twofactor.html'], {
             'form': form,
-            'interface': interface.interface_id,
+            'interface': interface,
             'other_interfaces': self.get_other_interfaces(interface, interfaces),
             'activation': activation,
         }, request, status=200)
