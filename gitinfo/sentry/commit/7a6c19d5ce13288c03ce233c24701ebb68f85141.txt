commit 7a6c19d5ce13288c03ce233c24701ebb68f85141
Author: David Cramer <dcramer@gmail.com>
Date:   Wed Aug 26 12:21:53 2015 -0700

    Explicit csrf token cookie

diff --git a/src/sentry/conf/server.py b/src/sentry/conf/server.py
index 3fae076e4c..a2c101a29b 100644
--- a/src/sentry/conf/server.py
+++ b/src/sentry/conf/server.py
@@ -270,6 +270,7 @@ LOCALE_PATHS = (
 )
 
 CSRF_FAILURE_VIEW = 'sentry.web.frontend.csrf_failure.view'
+CSRF_COOKIE_NAME = 'csrf'
 
 # Auth configuration
 
diff --git a/src/sentry/static/sentry/app/index.js b/src/sentry/static/sentry/app/index.js
index 1a9bfe6f25..d15dd18919 100644
--- a/src/sentry/static/sentry/app/index.js
+++ b/src/sentry/static/sentry/app/index.js
@@ -17,19 +17,6 @@ function getCookie(name) {
   return cookieValue;
 }
 
-function sameOrigin(url) {
-  // url could be relative or scheme relative or absolute
-  var host = document.location.host; // host + port
-  var protocol = document.location.protocol;
-  var sr_origin = '//' + host;
-  var origin = protocol + sr_origin;
-  // Allow absolute or scheme relative URLs to same origin
-  return (url == origin || url.slice(0, origin.length + 1) == origin + '/') ||
-      (url == sr_origin || url.slice(0, sr_origin.length + 1) == sr_origin + '/') ||
-      // or any other URL that isn't scheme relative or absolute i.e relative.
-      !(/^(\/\/|http:|https:).*/.test(url));
-}
-
 function csrfSafeMethod(method) {
   // these HTTP methods do not require CSRF protection
   return (/^(GET|HEAD|OPTIONS|TRACE)$/.test(method));
@@ -37,7 +24,7 @@ function csrfSafeMethod(method) {
 jQuery.ajaxSetup({
   beforeSend: function(xhr, settings) {
     if (!csrfSafeMethod(settings.type) && !this.crossDomain) {
-      xhr.setRequestHeader("X-CSRFToken", csrftoken);
+      xhr.setRequestHeader("X-CSRFToken", getCookie('csrf'));
     }
   }
 });
