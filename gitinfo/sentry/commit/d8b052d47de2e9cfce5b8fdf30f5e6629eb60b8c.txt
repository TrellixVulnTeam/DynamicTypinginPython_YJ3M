commit d8b052d47de2e9cfce5b8fdf30f5e6629eb60b8c
Author: Billy Vong <billyvg@users.noreply.github.com>
Date:   Wed Apr 8 14:12:20 2020 -0700

    ref(ts): Refactor `<OrganizationActivity>` (#18148)
    
    * ref(ts): Refactor `<OrganizationActivity>`
    
    * Refactors to typescript
    * Move to lightweight routes
    * Use AsyncView
    * Refactor to use `emotion`

diff --git a/src/sentry/static/sentry/app/routes.jsx b/src/sentry/static/sentry/app/routes.jsx
index 21f1dd29c4..6a6fc6ce06 100644
--- a/src/sentry/static/sentry/app/routes.jsx
+++ b/src/sentry/static/sentry/app/routes.jsx
@@ -1383,6 +1383,16 @@ function routes() {
           />
         </Route>
 
+        <Route
+          path="/organizations/:orgId/activity/"
+          componentPromise={() =>
+            import(
+              /* webpackChunkName: "OrganizationActivity" */ 'app/views/organizationActivity'
+            )
+          }
+          component={errorHandler(LazyLoad)}
+        />
+
         {/* Admin/manage routes */}
         <Route
           path="/manage/"
@@ -1522,15 +1532,7 @@ function routes() {
             }
             component={errorHandler(LazyLoad)}
           />
-          <Route
-            path="/organizations/:orgId/activity/"
-            componentPromise={() =>
-              import(
-                /* webpackChunkName: "OrganizationActivity" */ 'app/views/organizationActivity'
-              )
-            }
-            component={errorHandler(LazyLoad)}
-          />
+
           <Route
             path="/organizations/:orgId/discover/"
             componentPromise={() =>
@@ -1541,6 +1543,7 @@ function routes() {
             <Redirect path="saved/" to="/organizations/:orgId/discover/" />
             <Route path="saved/:savedQueryId/" />
           </Route>
+
           {/*
           TODO(mark) Long term this /queries route should go away and /discover should be the
           canoncial route for discover2. Also the duplication in route wrapping
diff --git a/src/sentry/static/sentry/app/types/iconProps.tsx b/src/sentry/static/sentry/app/types/iconProps.tsx
index 20182543d4..ad788a109a 100644
--- a/src/sentry/static/sentry/app/types/iconProps.tsx
+++ b/src/sentry/static/sentry/app/types/iconProps.tsx
@@ -1,6 +1,6 @@
 export type IconProps = React.SVGAttributes<SVGElement> & {
   color?: string;
-  size?: 'xs' | 'sm' | 'md' | 'lg' | 'xl';
+  size?: 'xs' | 'sm' | 'md' | 'lg' | 'xl' | string;
   direction?: 'up' | 'right' | 'down' | 'left';
   solid?: boolean;
   circle?: boolean;
diff --git a/src/sentry/static/sentry/app/types/index.tsx b/src/sentry/static/sentry/app/types/index.tsx
index 86e18a4a0d..8d093cdc22 100644
--- a/src/sentry/static/sentry/app/types/index.tsx
+++ b/src/sentry/static/sentry/app/types/index.tsx
@@ -1142,3 +1142,13 @@ export type CrashFreeTimeBreakdown = {
   crashFreeUsers: number | null;
   totalUsers: number;
 }[];
+
+export type Activity = {
+  data: any;
+  dateCreated: string;
+  type: string;
+  id: string;
+  issue?: Group;
+  project: Project;
+  user?: User;
+};
diff --git a/src/sentry/static/sentry/app/views/organizationActivity/activityFeed.jsx b/src/sentry/static/sentry/app/views/organizationActivity/activityFeed.jsx
deleted file mode 100644
index 75bb19ea35..0000000000
--- a/src/sentry/static/sentry/app/views/organizationActivity/activityFeed.jsx
+++ /dev/null
@@ -1,140 +0,0 @@
-import PropTypes from 'prop-types';
-import React from 'react';
-
-import {Panel} from 'app/components/panels';
-import {t} from 'app/locale';
-import EmptyMessage from 'app/views/settings/components/emptyMessage';
-import ErrorBoundary from 'app/components/errorBoundary';
-import LoadingError from 'app/components/loadingError';
-import LoadingIndicator from 'app/components/loadingIndicator';
-import Pagination from 'app/components/pagination';
-import SentryTypes from 'app/sentryTypes';
-import space from 'app/styles/space';
-import withApi from 'app/utils/withApi';
-
-import ActivityFeedItem from './activityFeedItem';
-
-class ActivityFeed extends React.Component {
-  static propTypes = {
-    api: PropTypes.object,
-    organization: SentryTypes.Organization,
-    endpoint: PropTypes.string,
-    query: PropTypes.object,
-    pagination: PropTypes.bool,
-  };
-
-  static defaultProps = {
-    pagination: true,
-    query: {},
-  };
-
-  constructor(props) {
-    super(props);
-    this.state = {
-      itemList: [],
-      loading: true,
-      error: false,
-      pageLinks: null,
-    };
-  }
-
-  UNSAFE_componentWillMount() {
-    this.fetchData();
-  }
-
-  UNSAFE_componentWillReceiveProps(nextProps) {
-    const location = this.props.location;
-    const nextLocation = nextProps.location;
-    if (
-      location.pathname !== nextLocation.pathname ||
-      location.search !== nextLocation.search
-    ) {
-      this.setState({
-        itemList: [],
-        loading: true,
-        error: false,
-        pageLinks: null,
-      });
-      this.fetchData();
-    }
-  }
-
-  fetchData = () => {
-    const location = this.props.location;
-    this.props.api.clear();
-    this.props.api.request(this.props.endpoint, {
-      method: 'GET',
-      query: {
-        cursor: location.query.cursor || '',
-        ...this.props.query,
-      },
-      success: (data, _, jqXHR) => {
-        this.setState({
-          loading: false,
-          error: false,
-          itemList: data,
-          pageLinks: jqXHR.getResponseHeader('Link'),
-        });
-      },
-      error: () => {
-        this.setState({
-          loading: false,
-          error: true,
-        });
-      },
-    });
-  };
-
-  renderResults() {
-    let body;
-
-    if (this.state.loading) {
-      body = this.renderLoading();
-    } else if (this.state.error) {
-      body = <LoadingError onRetry={this.fetchData} />;
-    } else if (this.state.itemList.length > 0) {
-      body = (
-        <div data-test-id="activity-feed-list" className="activity">
-          {this.state.itemList.map(item => (
-            <ErrorBoundary
-              mini
-              css={{marginBottom: space(1), borderRadius: 0}}
-              key={item.id}
-            >
-              <ActivityFeedItem organization={this.props.organization} item={item} />
-            </ErrorBoundary>
-          ))}
-        </div>
-      );
-    } else {
-      body = this.renderEmpty();
-    }
-
-    return body;
-  }
-
-  renderLoading() {
-    return <LoadingIndicator />;
-  }
-
-  renderEmpty() {
-    return (
-      <EmptyMessage icon="icon-circle-exclamation">
-        {t('Nothing to show here, move along.')}
-      </EmptyMessage>
-    );
-  }
-
-  render() {
-    return (
-      <React.Fragment>
-        <Panel>{this.renderResults()}</Panel>
-        {this.props.pagination && this.state.pageLinks && (
-          <Pagination pageLinks={this.state.pageLinks} {...this.props} />
-        )}
-      </React.Fragment>
-    );
-  }
-}
-
-export default withApi(ActivityFeed);
diff --git a/src/sentry/static/sentry/app/views/organizationActivity/activityFeedItem.jsx b/src/sentry/static/sentry/app/views/organizationActivity/activityFeedItem.tsx
similarity index 72%
rename from src/sentry/static/sentry/app/views/organizationActivity/activityFeedItem.jsx
rename to src/sentry/static/sentry/app/views/organizationActivity/activityFeedItem.tsx
index d0d6bc0e33..0d298905bf 100644
--- a/src/sentry/static/sentry/app/views/organizationActivity/activityFeedItem.jsx
+++ b/src/sentry/static/sentry/app/views/organizationActivity/activityFeedItem.tsx
@@ -1,43 +1,45 @@
 import {Link} from 'react-router';
-import PropTypes from 'prop-types';
 import React from 'react';
 import styled from '@emotion/styled';
 
+import {Activity, Organization} from 'app/types';
 import {t, tn, tct} from 'app/locale';
-import UserAvatar from 'app/components/avatar/userAvatar';
 import CommitLink from 'app/components/commitLink';
 import Duration from 'app/components/duration';
+import ExternalLink from 'app/components/links/externalLink';
 import IssueLink from 'app/components/issueLink';
 import MemberListStore from 'app/stores/memberListStore';
 import PullRequestLink from 'app/components/pullRequestLink';
-import SentryTypes from 'app/sentryTypes';
 import TeamStore from 'app/stores/teamStore';
 import TimeSince from 'app/components/timeSince';
 import Version from 'app/components/version';
 import VersionHoverCard from 'app/components/versionHoverCard';
 import marked from 'app/utils/marked';
 import space from 'app/styles/space';
+import ActivityAvatar from 'app/components/activity/item/avatar';
 
-class ActivityItem extends React.Component {
-  static propTypes = {
-    organization: SentryTypes.Organization,
-    clipHeight: PropTypes.number,
-    defaultClipped: PropTypes.bool,
-    item: PropTypes.object.isRequired,
-  };
+const defaultProps = {
+  defaultClipped: false,
+  clipHeight: 68,
+};
+type DefaultProps = typeof defaultProps;
 
-  static defaultProps = {
-    defaultClipped: false,
-    clipHeight: 68,
-  };
+type Props = {
+  className?: string;
+  organization: Organization;
+  item: Activity;
+} & DefaultProps;
 
-  constructor(...args) {
-    super(...args);
-    this.state = {
-      clipped: this.props.defaultClipped,
-    };
-    this.activityBubbleRef = React.createRef();
-  }
+type State = {
+  clipped: Props['defaultClipped'];
+};
+
+class ActivityItem extends React.Component<Props, State> {
+  static defaultProps = defaultProps;
+
+  state = {
+    clipped: this.props.defaultClipped,
+  };
 
   componentDidMount() {
     if (this.activityBubbleRef.current) {
@@ -52,6 +54,8 @@ class ActivityItem extends React.Component {
     }
   }
 
+  activityBubbleRef = React.createRef<HTMLDivElement>();
+
   formatProjectActivity = (author, item) => {
     const data = item.data;
     const orgId = this.props.organization.slug;
@@ -60,13 +64,7 @@ class ActivityItem extends React.Component {
     const basePath = `/organizations/${orgId}/issues/`;
 
     const issueLink = issue ? (
-      <IssueLink
-        organization={this.props.organization}
-        orgId={orgId}
-        projectId={project.slug}
-        issue={issue}
-        to={`${basePath}${issue.id}/`}
-      >
+      <IssueLink orgId={orgId} issue={issue} to={`${basePath}${issue.id}/`} card>
         {issue.shortId}
       </IssueLink>
     ) : null;
@@ -83,9 +81,8 @@ class ActivityItem extends React.Component {
           author,
           issue: (
             <IssueLink
-              organization={this.props.organization}
+              card
               orgId={orgId}
-              projectId={project.slug}
               issue={issue}
               to={`${basePath}${issue.id}/activity/#event_${item.id}`}
             >
@@ -301,104 +298,124 @@ class ActivityItem extends React.Component {
   };
 
   render() {
-    const item = this.props.item;
+    const {className, item} = this.props;
 
-    let bubbleClassName = 'activity-item-bubble';
-    if (this.state.clipped) {
-      bubbleClassName += ' clipped';
-    }
-
-    const avatar = item.user ? (
-      <UserAvatar user={item.user} size={36} className="activity-avatar" />
-    ) : (
-      <div className="activity-avatar avatar sentry">
-        <span className="icon-sentry-logo" />
-      </div>
+    const avatar = (
+      <ActivityAvatar type={!item.user ? 'system' : 'user'} user={item.user} size={36} />
     );
-
     const author = {
       name: item.user ? item.user.name : 'Sentry',
       avatar,
     };
 
-    const projectLink = <strong>{item.project.slug}</strong>;
+    const hasBubble = ['note', 'create_issue'].includes(item.type);
+    const bubbleProps = {
+      ...(item.type === 'note'
+        ? {dangerouslySetInnerHTML: {__html: marked(item.data.text)}}
+        : {}),
+      ...(item.type === 'create_issue'
+        ? {
+            children: (
+              <ExternalLink href={item.data.location}>{item.data.title}</ExternalLink>
+            ),
+          }
+        : {}),
+    };
 
-    if (item.type === 'note') {
-      const noteBody = marked(item.data.text);
-      return (
-        <div data-test-id="activity-item" className="activity-item activity-item-compact">
-          <div className="activity-item-content">
-            {this.formatProjectActivity(
-              <span>
-                {author.avatar}
-                <ActivityAuthor>{author.name}</ActivityAuthor>
-              </span>,
-              item
-            )}
-            <div
-              className={bubbleClassName}
+    return (
+      <div className={className}>
+        {author.avatar}
+        <div>
+          {this.formatProjectActivity(
+            <span>
+              <ActivityAuthor>{author.name}</ActivityAuthor>
+            </span>,
+            item
+          )}
+          {hasBubble && (
+            <Bubble
               ref={this.activityBubbleRef}
-              dangerouslySetInnerHTML={{__html: noteBody}}
+              clipped={this.state.clipped}
+              {...bubbleProps}
             />
-            <div className="activity-meta">
-              {projectLink}
-              <span className="bullet" />
-              <StyledTimeSince date={item.dateCreated} />
-            </div>
-          </div>
-        </div>
-      );
-    } else if (item.type === 'create_issue') {
-      return (
-        <div data-test-id="activity-item" className="activity-item activity-item-compact">
-          <div className="activity-item-content">
-            {this.formatProjectActivity(
-              <span>
-                {author.avatar}
-                <ActivityAuthor>{author.name}</ActivityAuthor>
-              </span>,
-              item
-            )}
-            <div className="activity-item-bubble">
-              <a href={item.data.location}>{item.data.title}</a>
-            </div>
-            <div className="activity-meta">
-              {projectLink}
-              <span className="bullet" />
-              <StyledTimeSince date={item.dateCreated} />
-            </div>
-          </div>
+          )}
+          <Meta>
+            <Project>{item.project.slug}</Project>
+            <StyledTimeSince date={item.dateCreated} />
+          </Meta>
         </div>
-      );
-    } else {
-      return (
-        <div data-test-id="activity-item" className="activity-item activity-item-compact">
-          <div className="activity-item-content">
-            {this.formatProjectActivity(
-              <span>
-                {author.avatar}
-                <ActivityAuthor>{author.name}</ActivityAuthor>
-              </span>,
-              item
-            )}
-            <div className="activity-meta">
-              {projectLink}
-              <span className="bullet" />
-              <StyledTimeSince date={item.dateCreated} />
-            </div>
-          </div>
-        </div>
-      );
-    }
+      </div>
+    );
   }
 }
 
-export default ActivityItem;
+export default styled(ActivityItem)`
+  display: grid;
+  grid-gap: ${space(1)};
+  grid-template-columns: max-content auto;
+  position: relative;
+  margin: 0;
+  padding: ${space(1)};
+  border-bottom: 1px solid ${p => p.theme.borderLight};
+  line-height: 1.4;
+  font-size: ${p => p.theme.fontSizeMedium};
+`;
 
 const ActivityAuthor = styled('span')`
   font-weight: 600;
 `;
 
+const Meta = styled('div')`
+  color: ${p => p.theme.gray4};
+  font-size: ${p => p.theme.fontSizeRelativeSmall};
+`;
+const Project = styled('span')`
+  font-weight: bold;
+`;
+
+const Bubble = styled('div')<{clipped: boolean}>`
+  background: ${p => p.theme.whiteDark};
+  margin: ${space(0.5)} 0;
+  padding: ${space(1)} ${space(2)};
+  border: 1px solid ${p => p.theme.borderLight};
+  border-radius: 3px;
+  box-shadow: 0 1px 1px rgba(0, 0, 0, 0.04);
+  position: relative;
+  overflow: hidden;
+
+  a {
+    max-width: 100%;
+    overflow-x: hidden;
+    text-overflow: ellipsis;
+  }
+
+  p {
+    &:last-child {
+      margin-bottom: 0;
+    }
+  }
+
+  ${p =>
+    p.clipped &&
+    `
+    max-height: 68px;
+
+    &:after {
+      position: absolute;
+      content: '';
+      display: block;
+      bottom: 0;
+      right: 0;
+      left: 0;
+      height: 36px;
+      background-image: linear-gradient(180deg, rgba(255, 255, 255, 0.15), rgba(255, 255, 255, 1));
+      border-bottom: 6px solid #fff;
+      border-radius: 0 0 3px 3px;
+      pointer-events: none;
+    }
+  `}
+`;
+
 const StyledTimeSince = styled(TimeSince)`
   color: ${p => p.theme.gray2};
   padding-left: ${space(1)};
diff --git a/src/sentry/static/sentry/app/views/organizationActivity/index.jsx b/src/sentry/static/sentry/app/views/organizationActivity/index.jsx
deleted file mode 100644
index dd623ff0b8..0000000000
--- a/src/sentry/static/sentry/app/views/organizationActivity/index.jsx
+++ /dev/null
@@ -1,70 +0,0 @@
-import DocumentTitle from 'react-document-title';
-import PropTypes from 'prop-types';
-import React from 'react';
-
-import {PageContent} from 'app/styles/organization';
-import {t} from 'app/locale';
-import PageHeading from 'app/components/pageHeading';
-import SentryTypes from 'app/sentryTypes';
-import withOrganization from 'app/utils/withOrganization';
-
-import ActivityFeed from './activityFeed';
-
-class OrganizationActivityContainer extends React.Component {
-  static propTypes = {
-    organization: SentryTypes.Organization,
-  };
-
-  render() {
-    const {organization, params, location} = this.props;
-
-    return (
-      <PageContent>
-        <div className="organization-home">
-          <OrganizationActivity
-            organization={organization}
-            params={params}
-            location={location}
-          />
-        </div>
-      </PageContent>
-    );
-  }
-}
-
-class OrganizationActivity extends React.Component {
-  static propTypes = {
-    organization: SentryTypes.Organization,
-    params: PropTypes.object,
-    location: PropTypes.object,
-  };
-
-  getEndpoint() {
-    return `/organizations/${this.props.params.orgId}/activity/`;
-  }
-
-  getTitle() {
-    return `Activity - ${this.props.params.orgId}`;
-  }
-
-  render() {
-    return (
-      <DocumentTitle title={this.getTitle()}>
-        <React.Fragment>
-          <PageHeading withMargins>{t('Activity')}</PageHeading>
-          <ActivityFeed
-            organization={this.props.organization}
-            endpoint={this.getEndpoint()}
-            query={{
-              per_page: 100,
-            }}
-            pagination
-            location={this.props.location}
-          />
-        </React.Fragment>
-      </DocumentTitle>
-    );
-  }
-}
-
-export default withOrganization(OrganizationActivityContainer);
diff --git a/src/sentry/static/sentry/app/views/organizationActivity/index.tsx b/src/sentry/static/sentry/app/views/organizationActivity/index.tsx
new file mode 100644
index 0000000000..4846c74284
--- /dev/null
+++ b/src/sentry/static/sentry/app/views/organizationActivity/index.tsx
@@ -0,0 +1,82 @@
+import {RouteComponentProps} from 'react-router/lib/Router';
+import React from 'react';
+
+import {Activity, Organization} from 'app/types';
+import {PageContent} from 'app/styles/organization';
+import {Panel} from 'app/components/panels';
+import {t} from 'app/locale';
+import AsyncView from 'app/views/asyncView';
+import EmptyMessage from 'app/views/settings/components/emptyMessage';
+import ErrorBoundary from 'app/components/errorBoundary';
+import LoadingIndicator from 'app/components/loadingIndicator';
+import PageHeading from 'app/components/pageHeading';
+import Pagination from 'app/components/pagination';
+import routeTitle from 'app/utils/routeTitle';
+import space from 'app/styles/space';
+import withOrganization from 'app/utils/withOrganization';
+
+import ActivityFeedItem from './activityFeedItem';
+
+type Props = {
+  organization: Organization;
+} & RouteComponentProps<{orgId: string}, {}> &
+  AsyncView['props'];
+
+type State = {
+  activity: Activity[];
+} & AsyncView['state'];
+
+class OrganizationActivity extends AsyncView<Props, State> {
+  getTitle() {
+    const {orgId} = this.props.params;
+    return routeTitle(t('Activity'), orgId);
+  }
+
+  getEndpoints(): ReturnType<AsyncView['getEndpoints']> {
+    return [['activity', `/organizations/${this.props.params.orgId}/activity/`]];
+  }
+
+  renderLoading() {
+    return this.renderBody();
+  }
+
+  renderEmpty() {
+    return (
+      <EmptyMessage icon="icon-circle-exclamation">
+        {t('Nothing to show here, move along.')}
+      </EmptyMessage>
+    );
+  }
+
+  renderBody() {
+    const {loading, activity, activityPageLinks} = this.state;
+
+    return (
+      <PageContent>
+        <PageHeading withMargins>{t('Activity')}</PageHeading>
+        <Panel>
+          {loading && <LoadingIndicator />}
+          {!loading && !activity.length && this.renderEmpty()}
+          {!loading && !!activity.length && (
+            <div data-test-id="activity-feed-list">
+              {activity.map(item => (
+                <ErrorBoundary
+                  mini
+                  css={{marginBottom: space(1), borderRadius: 0}}
+                  key={item.id}
+                >
+                  <ActivityFeedItem organization={this.props.organization} item={item} />
+                </ErrorBoundary>
+              ))}
+            </div>
+          )}
+        </Panel>
+        {activityPageLinks && (
+          <Pagination pageLinks={activityPageLinks} {...this.props} />
+        )}
+      </PageContent>
+    );
+  }
+}
+
+export default withOrganization(OrganizationActivity);
diff --git a/src/sentry/static/sentry/less/organization.less b/src/sentry/static/sentry/less/organization.less
index daf4b5867c..ee10267821 100644
--- a/src/sentry/static/sentry/less/organization.less
+++ b/src/sentry/static/sentry/less/organization.less
@@ -1,126 +1,3 @@
-.organization-home {
-  flex: 1;
-
-  .nav-header {
-    padding: 0 0 10px;
-    margin: 0;
-  }
-
-  .page-header {
-    h3 {
-      margin-bottom: 0;
-    }
-  }
-}
-
-.organization-home {
-  hr {
-    margin: 30px 0;
-  }
-  .activity {
-    .activity-item {
-      position: relative;
-      margin: 0;
-      padding: 10px 15px 10px 60px;
-      border-bottom: 1px solid lighten(@trim, 5);
-      line-height: 1.4;
-      font-size: 15px;
-
-      &:before {
-        display: none;
-      }
-
-      .activity-item-content {
-        display: block;
-        padding: 0;
-      }
-
-      .activity-item-bubble {
-        background: @white-dark;
-        margin: 5px 0;
-        padding: 6px 12px;
-        border: 1px solid @trim;
-        border-radius: 3px;
-        box-shadow: 0 1px 1px rgba(0, 0, 0, 0.04);
-        position: relative;
-        overflow: hidden;
-
-        a {
-          max-width: 100%;
-          overflow-x: hidden;
-          text-overflow: ellipsis;
-        }
-
-        p {
-          &:last-child {
-            margin-bottom: 0;
-          }
-        }
-
-        &.clipped {
-          max-height: 68px;
-
-          &:after {
-            position: absolute;
-            content: '';
-            display: block;
-            bottom: 0;
-            right: 0;
-            left: 0;
-            height: 36px;
-            #gradient > .vertical(rgba(255, 255, 255, 0.15), rgba(255, 255, 255, 1));
-            border-bottom: 6px solid #fff;
-            border-radius: 0 0 3px 3px;
-            pointer-events: none;
-          }
-        }
-      }
-
-      .activity-avatar {
-        position: absolute;
-        .square(36px);
-        left: 12px;
-        top: 12px;
-
-        &.sentry {
-          top: 12px;
-          text-align: center;
-          background: @purple;
-          color: #fff;
-          line-height: 36px;
-          border-radius: 3px;
-        }
-      }
-
-      .activity-meta {
-        color: @gray;
-        font-size: 90%;
-
-        a {
-          color: @gray;
-          &:hover {
-            color: @gray-dark;
-          }
-        }
-      }
-
-      .project {
-        font-weight: bold;
-      }
-
-      time {
-        float: none;
-        display: inline;
-        margin-left: 0;
-      }
-
-      &:last-child {
-        border-bottom: 0;
-      }
-    }
-  }
-}
-
 /**
 * Stats Column
 * ============================================================================
@@ -132,14 +9,3 @@
     font-size: 85%;
   }
 }
-
-/**
-* Medium to small screens
-* ============================================================================
-*/
-
-@media (max-width: 991px) {
-  .organization-home .col-md-2 {
-    display: none;
-  }
-}
diff --git a/tests/js/spec/views/organizationActivity/index.spec.jsx b/tests/js/spec/views/organizationActivity/index.spec.jsx
index 3d98ed18e0..14eaf8a35c 100644
--- a/tests/js/spec/views/organizationActivity/index.spec.jsx
+++ b/tests/js/spec/views/organizationActivity/index.spec.jsx
@@ -31,7 +31,7 @@ describe('OrganizationUserFeedback', function() {
   it('renders', function() {
     const wrapper = mount(<OrganizationActivity {...params} />, routerContext);
 
-    expect(wrapper.find('[data-test-id="activity-item"]')).toHaveLength(2);
+    expect(wrapper.find('ActivityItem')).toHaveLength(2);
   });
 
   it('renders empty', function() {
@@ -41,7 +41,7 @@ describe('OrganizationUserFeedback', function() {
     });
     const wrapper = mount(<OrganizationActivity {...params} />, routerContext);
 
-    expect(wrapper.find('[data-test-id="activity-item"]')).toHaveLength(0);
+    expect(wrapper.find('ActivityItem')).toHaveLength(0);
     expect(wrapper.find('EmptyMessage')).toHaveLength(1);
   });
 });
