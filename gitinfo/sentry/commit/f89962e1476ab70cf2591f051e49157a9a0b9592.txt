commit f89962e1476ab70cf2591f051e49157a9a0b9592
Author: Ben Vinegar <ben@benv.ca>
Date:   Wed Feb 3 15:09:37 2016 -0800

    Continue deprecating stubReactComponent in favor of enzyme shallow rendering

diff --git a/tests/js/spec/components/events/interfaces/richHttpContent.spec.jsx b/tests/js/spec/components/events/interfaces/richHttpContent.spec.jsx
index 506dadf74d..add8681fb3 100644
--- a/tests/js/spec/components/events/interfaces/richHttpContent.spec.jsx
+++ b/tests/js/spec/components/events/interfaces/richHttpContent.spec.jsx
@@ -1,11 +1,7 @@
 import React from 'react';
-import TestUtils from 'react-addons-test-utils';
-import stubReactComponents from '../../../../helpers/stubReactComponent';
+import {shallow} from 'enzyme';
 
 import RichHttpContent from 'app/components/events/interfaces/richHttpContent';
-import KeyValueList from 'app/components/events/interfaces/keyValueList';
-import ClippedBox from 'app/components/clippedBox';
-import ContextData from 'app/components/contextData';
 
 describe('RichHttpContent', function () {
   beforeEach(function () {
@@ -16,9 +12,8 @@ describe('RichHttpContent', function () {
       cookies: [],
       env: {}
     };
-    this.elem = TestUtils.renderIntoDocument(<RichHttpContent data={this.data} />);
+    this.elem = shallow(<RichHttpContent data={this.data} />).instance();
     this.sandbox = sinon.sandbox.create();
-    stubReactComponents(this.sandbox, [ClippedBox, KeyValueList, ContextData]);
   });
 
   afterEach(function () {
@@ -73,7 +68,7 @@ describe('RichHttpContent', function () {
       });
 
       // NOTE: ContextData is stubbed in tests; instead returns <div className="ContextData"/>
-      expect(out.props.className).to.eql('KeyValueList');
+      expect(out.type.displayName).to.eql('KeyValueList');
       expect(out.props.data).to.eql([
         ['bar', 'baz'],
         ['foo', 'bar']
@@ -101,7 +96,7 @@ describe('RichHttpContent', function () {
       });
 
       // NOTE: ContextData is stubbed in tests; instead returns <div className="ContextData"/>
-      expect(out.props.className).to.eql('ContextData');
+      expect(out.type.displayName).to.eql('ContextData');
       expect(out.props.data).to.eql({
         foo: 'bar'
       });
@@ -116,7 +111,7 @@ describe('RichHttpContent', function () {
       });
 
       // NOTE: ContextData is stubbed in tests; instead returns <div className="ContextData"/>
-      expect(out.props.className).to.eql('ContextData');
+      expect(out.type.displayName).to.eql('ContextData');
       expect(out.props.data).to.eql({
         foo: 'bar'
       });
@@ -144,7 +139,7 @@ describe('RichHttpContent', function () {
         cookies: [],
         env: {}
       };
-      expect(() => TestUtils.renderIntoDocument(<RichHttpContent data={data} />)).to.not.throw(URIError);
+      expect(() => shallow(<RichHttpContent data={data} />)).to.not.throw(URIError);
     });
   });
 });
diff --git a/tests/js/spec/views/stream/actionLink.spec.jsx b/tests/js/spec/views/stream/actionLink.spec.jsx
index ab3c1d0943..9ef94d21c6 100644
--- a/tests/js/spec/views/stream/actionLink.spec.jsx
+++ b/tests/js/spec/views/stream/actionLink.spec.jsx
@@ -2,9 +2,7 @@ import React from 'react';
 import {shallow} from 'enzyme';
 
 import {Client} from 'app/api';
-import stubReactComponents from '../../../helpers/stubReactComponent';
 import ActionLink from 'app/views/stream/actionLink';
-import Modal from 'react-bootstrap/lib/Modal';
 
 describe('ActionLink', function() {
 
@@ -12,7 +10,6 @@ describe('ActionLink', function() {
     this.sandbox = sinon.sandbox.create();
 
     this.stubbedApiRequest = this.sandbox.stub(Client.prototype, 'request');
-    stubReactComponents(this.sandbox, [Modal]);
   });
 
   afterEach(function() {
diff --git a/tests/js/spec/views/stream/actions.spec.jsx b/tests/js/spec/views/stream/actions.spec.jsx
index 81c6310862..a7f25f09ef 100644
--- a/tests/js/spec/views/stream/actions.spec.jsx
+++ b/tests/js/spec/views/stream/actions.spec.jsx
@@ -2,11 +2,7 @@ import React from 'react';
 import {shallow} from 'enzyme';
 
 import {Client} from 'app/api';
-import stubReactComponents from '../../../helpers/stubReactComponent';
 import StreamActions from 'app/views/stream/actions';
-import ActionLink from 'app/views/stream/actionLink';
-import DropdownLink from 'app/components/dropdownLink';
-import MenuItem from 'app/components/menuItem';
 import SelectedGroupStore from 'app/stores/selectedGroupStore';
 
 describe('StreamActions', function() {
@@ -15,7 +11,6 @@ describe('StreamActions', function() {
     this.sandbox = sinon.sandbox.create();
 
     this.stubbedApiRequest = this.sandbox.stub(Client.prototype, 'request');
-    stubReactComponents(this.sandbox, [ActionLink, DropdownLink, MenuItem]);
   });
 
   afterEach(function() {
