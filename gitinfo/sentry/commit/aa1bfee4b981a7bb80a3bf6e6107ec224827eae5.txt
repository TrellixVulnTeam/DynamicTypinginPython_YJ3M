commit aa1bfee4b981a7bb80a3bf6e6107ec224827eae5
Author: Megan Heskett <meg.heskett@gmail.com>
Date:   Thu Sep 5 21:34:36 2019 +0000

    ref(ts): Refactor UserFeedbackEmpty to typescript (#14592)

diff --git a/src/sentry/static/sentry/app/constants/index.tsx b/src/sentry/static/sentry/app/constants/index.tsx
index 0b57a6cf4d..f92339eb8d 100644
--- a/src/sentry/static/sentry/app/constants/index.tsx
+++ b/src/sentry/static/sentry/app/constants/index.tsx
@@ -103,6 +103,7 @@ export const DEFAULT_DEBOUNCE_DURATION = 300;
 declare global {
   interface Window {
     csrfCookieName?: string;
+    sentryEmbedCallback?: ((embed: any) => void) | null;
   }
 }
 
diff --git a/src/sentry/static/sentry/app/types/index.tsx b/src/sentry/static/sentry/app/types/index.tsx
index 6ccb40f3a7..60f297a79b 100644
--- a/src/sentry/static/sentry/app/types/index.tsx
+++ b/src/sentry/static/sentry/app/types/index.tsx
@@ -36,6 +36,7 @@ export type Project = {
   features: string[];
 
   isBookmarked: boolean;
+  hasUserReports?: boolean;
 };
 
 export type Team = {
diff --git a/src/sentry/static/sentry/app/views/settings/project/projectUserFeedback.jsx b/src/sentry/static/sentry/app/views/settings/project/projectUserFeedback.tsx
similarity index 91%
rename from src/sentry/static/sentry/app/views/settings/project/projectUserFeedback.jsx
rename to src/sentry/static/sentry/app/views/settings/project/projectUserFeedback.tsx
index 9bab14480b..19530bc245 100644
--- a/src/sentry/static/sentry/app/views/settings/project/projectUserFeedback.jsx
+++ b/src/sentry/static/sentry/app/views/settings/project/projectUserFeedback.tsx
@@ -1,3 +1,4 @@
+import {RouteComponentProps} from 'react-router/lib/Router';
 import PropTypes from 'prop-types';
 import React from 'react';
 import styled from 'react-emotion';
@@ -14,7 +15,15 @@ import space from 'app/styles/space';
 import TextBlock from 'app/views/settings/components/text/textBlock';
 import formGroups from 'app/data/forms/userFeedback';
 
-class ProjectUserFeedbackSettings extends AsyncView {
+type RouteParams = {
+  orgId: string;
+  projectId: string;
+};
+type Props = RouteComponentProps<RouteParams, {}> & {
+  setProjectNavSection: (section: string) => void;
+};
+
+class ProjectUserFeedbackSettings extends AsyncView<Props> {
   static propTypes = {
     setProjectNavSection: PropTypes.func,
   };
@@ -42,7 +51,7 @@ class ProjectUserFeedbackSettings extends AsyncView {
     window.sentryEmbedCallback = null;
   }
 
-  getEndpoints() {
+  getEndpoints(): [string, string][] {
     const {orgId, projectId} = this.props.params;
     return [
       ['keyList', `/projects/${orgId}/${projectId}/keys/`],
diff --git a/src/sentry/static/sentry/app/views/userFeedback/userFeedbackEmpty.jsx b/src/sentry/static/sentry/app/views/userFeedback/userFeedbackEmpty.tsx
similarity index 90%
rename from src/sentry/static/sentry/app/views/userFeedback/userFeedbackEmpty.jsx
rename to src/sentry/static/sentry/app/views/userFeedback/userFeedbackEmpty.tsx
index ab358b40c0..abad917337 100644
--- a/src/sentry/static/sentry/app/views/userFeedback/userFeedbackEmpty.jsx
+++ b/src/sentry/static/sentry/app/views/userFeedback/userFeedbackEmpty.tsx
@@ -3,6 +3,7 @@ import styled from 'react-emotion';
 import PropTypes from 'prop-types';
 import * as Sentry from '@sentry/browser';
 
+import {Organization} from 'app/types';
 import {t} from 'app/locale';
 import {trackAnalyticsEvent, trackAdhocEvent} from 'app/utils/analytics';
 import Button from 'app/components/button';
@@ -12,7 +13,17 @@ import space from 'app/styles/space';
 import userFeedback from 'sentry-dreamy-components/dist/user-feedback.svg';
 import withOrganization from 'app/utils/withOrganization';
 
-class UserFeedbackEmpty extends React.Component {
+type Props = {
+  organization: Organization;
+  projectIds?: string[];
+};
+
+type IllustrationProps = {
+  data: string;
+  className?: string;
+};
+
+class UserFeedbackEmpty extends React.Component<Props> {
   static propTypes = {
     organization: SentryTypes.Organization.isRequired,
     projectIds: PropTypes.arrayOf(PropTypes.string.isRequired),
@@ -58,10 +69,10 @@ class UserFeedbackEmpty extends React.Component {
         ? projects.filter(({id}) => projectIds.includes(id))
         : projects;
 
-    return selectedProjects.some(({hasUserReports}) => !!hasUserReports);
+    return selectedProjects.some(({hasUserReports}) => hasUserReports);
   }
 
-  trackAnalytics({eventKey, eventName}) {
+  trackAnalytics({eventKey, eventName}: {eventKey: string; eventName: string}) {
     const {organization, projectIds} = this.props;
 
     trackAnalyticsEvent({
@@ -73,7 +84,7 @@ class UserFeedbackEmpty extends React.Component {
   }
 
   render() {
-    if (this.hasAnyFeedback === true) {
+    if (this.hasAnyFeedback !== false) {
       return (
         <EmptyStateWarning>
           <p>{t('Sorry, no user reports match your filters.')}</p>
@@ -174,7 +185,7 @@ const CardComponentContainer = styled('div')`
   }
 `;
 
-const Illustration = styled(({data, className}) => (
+const Illustration = styled(({data, className}: IllustrationProps) => (
   <object data={data} className={className}>
     <img src={data} className={className} />
   </object>
