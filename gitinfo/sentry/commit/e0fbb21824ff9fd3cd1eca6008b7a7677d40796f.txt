commit e0fbb21824ff9fd3cd1eca6008b7a7677d40796f
Author: Mark Story <mark@sentry.io>
Date:   Mon Jun 3 11:10:20 2019 -0400

    fix(store) Don't explode on garbage ignore patterns (#13483)
    
    Users make mistakes on their ignore patterns, we shouldn't fail to store
    events just because they are bad at filter patterns.
    
    Fixes SENTRY-9H7

diff --git a/src/sentry/utils/data_filters.py b/src/sentry/utils/data_filters.py
index 3d60ebe8d1..4ef219ae1d 100644
--- a/src/sentry/utils/data_filters.py
+++ b/src/sentry/utils/data_filters.py
@@ -107,7 +107,12 @@ def is_valid_error_message(project, message):
     message = force_text(message).lower()
 
     for error in filtered_errors:
-        if fnmatch.fnmatch(message, error.lower()):
-            return False
+        try:
+            if fnmatch.fnmatch(message, error.lower()):
+                return False
+        except Exception:
+            # fnmatch raises a string when the pattern is bad.
+            # Patterns come from end users and can be full of mistakes.
+            pass
 
     return True
diff --git a/tests/sentry/utils/http/tests.py b/tests/sentry/utils/http/tests.py
index 2846532a8a..9d77591778 100644
--- a/tests/sentry/utils/http/tests.py
+++ b/tests/sentry/utils/http/tests.py
@@ -321,6 +321,12 @@ class IsValidErrorMessageTestCase(TestCase):
         assert self.is_valid_error_message(None, ['ImportError*'])
         assert self.is_valid_error_message({}, ['ImportError*'])
 
+    def test_bad_characters_in_pattern(self):
+        patterns = [
+            u"*google_tag_manager['GTM-3TL3'].macro(...)*",
+        ]
+        assert self.is_valid_error_message('it bad', patterns)
+
 
 class OriginFromRequestTestCase(TestCase):
     def test_nothing(self):
