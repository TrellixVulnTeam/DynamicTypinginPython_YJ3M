commit 8271c5e170294f405c6113769468f2de39878028
Author: Daniel Griesser <daniel.griesser.86@gmail.com>
Date:   Tue Sep 19 08:59:14 2017 +0200

    fix(api): Merge errors of event in frontend

diff --git a/src/sentry/api/serializers/models/event.py b/src/sentry/api/serializers/models/event.py
index 141a93c992..b8ac37f3fa 100644
--- a/src/sentry/api/serializers/models/event.py
+++ b/src/sentry/api/serializers/models/event.py
@@ -11,7 +11,8 @@ from sentry.models import Event, EventError
 
 @register(Event)
 class EventSerializer(Serializer):
-    _reserved_keys = frozenset(['sentry.interfaces.User', 'sdk', 'device', 'contexts'])
+    _reserved_keys = frozenset(
+        ['sentry.interfaces.User', 'sdk', 'device', 'contexts'])
 
     def _get_entries(self, event, user, is_public=False):
         # XXX(dcramer): These are called entries for future-proofing
@@ -31,7 +32,8 @@ class EventSerializer(Serializer):
                 'type': interface.get_alias(),
             }
             interface_list.append((interface, entry))
-        interface_list.sort(key=lambda x: x[0].get_display_score(), reverse=True)
+        interface_list.sort(
+            key=lambda x: x[0].get_display_score(), reverse=True)
 
         return [i[1] for i in interface_list]
 
@@ -74,12 +76,8 @@ class EventSerializer(Serializer):
 
     def serialize(self, obj, attrs, user):
         errors = []
-        error_set = set()
         for error in obj.data.get('errors', []):
             message = EventError.get_message(error)
-            if message in error_set:
-                continue
-            error_set.add(message)
             error_result = {
                 'type': error['type'],
                 'message': message,
@@ -151,5 +149,6 @@ class SharedEventSerializer(EventSerializer):
         del result['tags']
         del result['sdk']
         del result['errors']
-        result['entries'] = [e for e in result['entries'] if e['type'] != 'breadcrumbs']
+        result['entries'] = [e for e in result['entries']
+                             if e['type'] != 'breadcrumbs']
         return result
diff --git a/src/sentry/static/sentry/app/components/events/errors.jsx b/src/sentry/static/sentry/app/components/events/errors.jsx
index b2f7cf05fc..beb2717fe7 100644
--- a/src/sentry/static/sentry/app/components/events/errors.jsx
+++ b/src/sentry/static/sentry/app/components/events/errors.jsx
@@ -1,4 +1,5 @@
 import React from 'react';
+import _ from 'lodash';
 
 import EventDataSection from './eventDataSection';
 import EventErrorItem from './errorItem';
@@ -28,8 +29,12 @@ const EventErrors = React.createClass({
     this.setState({isOpen: !this.state.isOpen});
   },
 
+  uniqueErrors(errors) {
+    return _.uniqBy(errors, _.isEqual);
+  },
+
   render() {
-    let errors = this.props.event.errors;
+    let errors = this.uniqueErrors(this.props.event.errors);
     let numErrors = errors.length;
     let isOpen = this.state.isOpen;
     return (
