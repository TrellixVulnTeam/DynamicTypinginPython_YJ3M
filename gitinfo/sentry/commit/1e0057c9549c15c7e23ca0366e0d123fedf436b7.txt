commit 1e0057c9549c15c7e23ca0366e0d123fedf436b7
Author: Alex Hofsteede <alex@hofsteede.com>
Date:   Tue Aug 21 10:29:37 2018 -0600

    perf: Remove 2 out of 4 snuba queries made by tagstore endpoint (#9430)
    
    - Remove separate call to get the (non-group) tag_key, as the only
      purpose of this is to use the `key` attribute (which is always the same
      as the GroupTagKey's key) or raise if the tag doesn't exist (in which
      case the GroupTagKey would also not exist, so it will raise there
      anyway)
    
    - Modify the snuba version of get_tag_key to return the total count as
      well as the unique count, as these queries have the same
      filters/conditions, and both values can be retrieved with a single
      snuba query. In legacy/v2 tagstore land, we continue to to the second
      query to get the count.

diff --git a/src/sentry/api/endpoints/group_tagkey_details.py b/src/sentry/api/endpoints/group_tagkey_details.py
index 4d91594ae9..3a69224d31 100644
--- a/src/sentry/api/endpoints/group_tagkey_details.py
+++ b/src/sentry/api/endpoints/group_tagkey_details.py
@@ -45,25 +45,23 @@ class GroupTagKeyDetailsEndpoint(GroupEndpoint, EnvironmentMixin):
             # if the environment doesn't exist then the tag can't possibly exist
             raise ResourceDoesNotExist
 
-        try:
-            tag_key = tagstore.get_tag_key(group.project_id, environment_id, lookup_key)
-        except tagstore.TagKeyNotFound:
-            raise ResourceDoesNotExist
-
         try:
             group_tag_key = tagstore.get_group_tag_key(
                 group.project_id, group.id, environment_id, lookup_key)
         except tagstore.GroupTagKeyNotFound:
             raise ResourceDoesNotExist
 
-        total_values = tagstore.get_group_tag_value_count(
-            group.project_id, group.id, environment_id, lookup_key)
+        if group_tag_key.count is None:
+            total_values = tagstore.get_group_tag_value_count(
+                group.project_id, group.id, environment_id, lookup_key)
+        else:
+            total_values = group_tag_key.count
         top_values = tagstore.get_top_group_tag_values(
             group.project_id, group.id, environment_id, lookup_key, limit=9)
 
         data = {
             'key': key,
-            'name': tagstore.get_tag_key_label(tag_key.key),
+            'name': tagstore.get_tag_key_label(group_tag_key.key),
             'uniqueValues': group_tag_key.values_seen,
             'totalValues': total_values,
             'topValues': serialize(top_values, request.user),
diff --git a/src/sentry/tagstore/snuba/backend.py b/src/sentry/tagstore/snuba/backend.py
index bddd0250ac..da4b783c2a 100644
--- a/src/sentry/tagstore/snuba/backend.py
+++ b/src/sentry/tagstore/snuba/backend.py
@@ -65,16 +65,20 @@ class SnubaTagStorage(TagStorage):
         if group_id is not None:
             filters['issue'] = [group_id]
         conditions = [[tag, '!=', '']]
-        aggregations = [['uniq', tag, 'unique_values']]
+        aggregations = [
+            ['uniq', tag, 'unique_values'],
+            ['count()', '', 'count']
+        ]
 
         result = snuba.query(start, end, [], conditions, filters, aggregations,
                              referrer='tagstore.__get_tag_key')
-        if result == 0:
+        if result is None or result['count'] == 0:
             raise TagKeyNotFound if group_id is None else GroupTagKeyNotFound
         else:
             data = {
                 'key': key,
-                'values_seen': result,
+                'values_seen': result['unique_values'],
+                'count': result['count'],
             }
             if group_id is None:
                 return TagKey(**data)
@@ -375,7 +379,7 @@ class SnubaTagStorage(TagStorage):
         return defaultdict(int, {k: v for k, v in result.items() if v})
 
     def get_tag_value_paginator(self, project_id, environment_id, key, query=None,
-            order_by='-last_seen'):
+                                order_by='-last_seen'):
         from sentry.api.paginator import SequencePaginator
 
         if not order_by == '-last_seen':
@@ -458,7 +462,7 @@ class SnubaTagStorage(TagStorage):
         return group_tag_values
 
     def get_group_tag_value_paginator(self, project_id, group_id, environment_id, key,
-            order_by='-id'):
+                                      order_by='-id'):
         from sentry.api.paginator import SequencePaginator
 
         if order_by in ('-last_seen', '-first_seen'):
@@ -476,7 +480,8 @@ class SnubaTagStorage(TagStorage):
         desc = order_by.startswith('-')
         score_field = order_by.lstrip('-')
         return SequencePaginator(
-            [(int(to_timestamp(getattr(gtv, score_field)) * 1000), gtv) for gtv in group_tag_values],
+            [(int(to_timestamp(getattr(gtv, score_field)) * 1000), gtv)
+             for gtv in group_tag_values],
             reverse=desc
         )
 
diff --git a/src/sentry/tagstore/types.py b/src/sentry/tagstore/types.py
index fe3607d9b4..b919f7e2cd 100644
--- a/src/sentry/tagstore/types.py
+++ b/src/sentry/tagstore/types.py
@@ -50,10 +50,11 @@ class TagValue(TagType):
 class GroupTagKey(TagType):
     __slots__ = ['group_id', 'key', 'values_seen']
 
-    def __init__(self, group_id, key, values_seen):
+    def __init__(self, group_id, key, values_seen, count=None):
         self.group_id = group_id
         self.key = key
         self.values_seen = values_seen
+        self.count = count
 
 
 class GroupTagValue(TagType):
