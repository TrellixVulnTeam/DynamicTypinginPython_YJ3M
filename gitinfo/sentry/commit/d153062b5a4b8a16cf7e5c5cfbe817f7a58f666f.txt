commit d153062b5a4b8a16cf7e5c5cfbe817f7a58f666f
Author: Mark Story <mark@sentry.io>
Date:   Fri Oct 25 13:44:06 2019 -0400

    ref(ts) Convert EventDataSection to Typescript (#15261)

diff --git a/src/sentry/static/sentry/app/components/events/eventDataSection.jsx b/src/sentry/static/sentry/app/components/events/eventDataSection.tsx
similarity index 81%
rename from src/sentry/static/sentry/app/components/events/eventDataSection.jsx
rename to src/sentry/static/sentry/app/components/events/eventDataSection.tsx
index 71b46e2b9a..d518f9a7cf 100644
--- a/src/sentry/static/sentry/app/components/events/eventDataSection.jsx
+++ b/src/sentry/static/sentry/app/components/events/eventDataSection.tsx
@@ -1,9 +1,25 @@
 import PropTypes from 'prop-types';
 import React from 'react';
 import {t} from 'app/locale';
+import {callIfFunction} from 'app/utils/callIfFunction';
 import GuideAnchor from 'app/components/assistant/guideAnchor';
 
-class EventDataSection extends React.Component {
+const defaultProps = {
+  wrapTitle: true,
+  raw: false,
+  hideGuide: false,
+};
+
+type DefaultProps = Readonly<typeof defaultProps>;
+
+type Props = {
+  className?: string;
+  title: React.ReactText;
+  type: string;
+  toggleRaw?: (enable: boolean) => void;
+} & Partial<DefaultProps>;
+
+class EventDataSection extends React.Component<Props> {
   static propTypes = {
     title: PropTypes.any,
     type: PropTypes.string.isRequired,
@@ -13,11 +29,7 @@ class EventDataSection extends React.Component {
     hideGuide: PropTypes.bool,
   };
 
-  static defaultProps = {
-    wrapTitle: true,
-    raw: false,
-    hideGuide: false,
-  };
+  static defaultProps = defaultProps;
 
   componentDidMount() {
     if (location.hash) {
@@ -72,13 +84,13 @@ class EventDataSection extends React.Component {
               <div className="btn-group pull-right">
                 <a
                   className={(!raw ? 'active' : '') + ' btn btn-default btn-sm'}
-                  onClick={() => toggleRaw(false)}
+                  onClick={() => callIfFunction(toggleRaw, false)}
                 >
                   {t('Formatted')}
                 </a>
                 <a
                   className={(raw ? 'active' : '') + ' btn btn-default btn-sm'}
-                  onClick={() => toggleRaw(true)}
+                  onClick={() => callIfFunction(toggleRaw, true)}
                 >
                   {t('Raw')}
                 </a>
diff --git a/src/sentry/static/sentry/app/components/events/eventTags.tsx b/src/sentry/static/sentry/app/components/events/eventTags.tsx
index 5ca45c248f..5020487afa 100644
--- a/src/sentry/static/sentry/app/components/events/eventTags.tsx
+++ b/src/sentry/static/sentry/app/components/events/eventTags.tsx
@@ -4,7 +4,7 @@ import _ from 'lodash';
 import queryString from 'query-string';
 
 import {Location} from 'history';
-import {Event, EventTag, Group} from 'app/types';
+import {Event, EventTag} from 'app/types';
 
 import EventDataSection from 'app/components/events/eventDataSection';
 import DeviceName from 'app/components/deviceName';
@@ -16,7 +16,6 @@ import VersionHoverCard from 'app/components/versionHoverCard';
 import InlineSvg from 'app/components/inlineSvg';
 
 type EventTagsProps = {
-  group: Group;
   event: Event;
   orgId: string;
   projectId: string;
@@ -73,7 +72,7 @@ class EventTags extends React.Component<EventTagsProps> {
   }
 
   render() {
-    const {event, group, orgId, hideGuide} = this.props;
+    const {event, orgId, hideGuide} = this.props;
     const {tags} = event;
 
     if (_.isEmpty(tags)) {
@@ -85,8 +84,6 @@ class EventTags extends React.Component<EventTagsProps> {
 
     return (
       <EventDataSection
-        group={group}
-        event={event}
         title={t('Tags')}
         type="tags"
         className="p-b-1"
diff --git a/src/sentry/static/sentry/app/views/eventsV2/eventInterfaces.tsx b/src/sentry/static/sentry/app/views/eventsV2/eventInterfaces.tsx
index cb7c1ae1aa..83a49016bf 100644
--- a/src/sentry/static/sentry/app/views/eventsV2/eventInterfaces.tsx
+++ b/src/sentry/static/sentry/app/views/eventsV2/eventInterfaces.tsx
@@ -61,9 +61,8 @@ const ActiveTab = (props: ActiveTabProps) => {
 
     return (
       <EventDataSection
-        event={event}
-        type={entry && entry.type}
-        title={entry && entry.type}
+        type={entry && entry.type ? entry.type : ''}
+        title={entry && entry.type ? entry.type : ''}
       >
         <p>{t('There was an error rendering this data.')}</p>
       </EventDataSection>
