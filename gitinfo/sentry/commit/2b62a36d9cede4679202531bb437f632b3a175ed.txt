commit 2b62a36d9cede4679202531bb437f632b3a175ed
Author: Jan Michael Auer <jan.auer@sentry.io>
Date:   Wed May 8 13:51:18 2019 +0200

    ref(native): Add sampling option for symbolicator (#13124)
    
    Adds a temporary option to sample events across all projects through symbolicator. This will be removed in a follow-up once all events flow through symbolicator.

diff --git a/.travis.yml b/.travis.yml
index 9773649c0e..972341f799 100644
--- a/.travis.yml
+++ b/.travis.yml
@@ -288,6 +288,12 @@ matrix:
     - language: node_js
       env: STORYBOOK_BUILD=1
 
+    # XXX(ja): Should be removed once symbolicator's interface is more stable or
+    # tests have been refactored to be more lenient. At the moment, snapshots
+    # break every time when a new attribute is added or some secondary attribute
+    # is changed.
+    - env: TEST_SUITE=symbolicator
+
     # XXX(markus): Remove after rust interfaces are done
     - env: TEST_SUITE=postgres DB=postgres SENTRY_TEST_USE_RUST_INTERFACE_RENORMALIZATION=1
 
diff --git a/src/sentry/lang/native/plugin.py b/src/sentry/lang/native/plugin.py
index 189d7db95e..0b4c8f1757 100644
--- a/src/sentry/lang/native/plugin.py
+++ b/src/sentry/lang/native/plugin.py
@@ -34,9 +34,19 @@ SYMBOLICATOR_FRAME_ATTRS = ("instruction_addr", "package", "lang", "symbol",
                             "line_addr")
 
 
-def _is_symbolicator_enabled(project):
-    return options.get('symbolicator.enabled') and \
-        project.get_option('sentry:symbolicator-enabled')
+def _is_symbolicator_enabled(project, data):
+    if not options.get('symbolicator.enabled'):
+        return False
+
+    if project.get_option('sentry:symbolicator-enabled'):
+        return True
+
+    percentage = options.get('sentry:symbolicator-percent-opt-in') or 0
+    if percentage > 0:
+        id_bit = int(data['event_id'][4:6], 16)
+        return id_bit < percentage * 256
+
+    return False
 
 
 def request_id_cache_key_for_event(data):
@@ -59,7 +69,7 @@ class NativeStacktraceProcessor(StacktraceProcessor):
         # service for native symbolication, which also means symbolic is not
         # used at all anymore.
         # The (iOS) symbolserver is still used regardless of this value.
-        self.use_symbolicator = _is_symbolicator_enabled(self.project)
+        self.use_symbolicator = _is_symbolicator_enabled(self.project, self.data)
 
         self.arch = cpu_name_from_data(self.data)
         self.signal = signal_from_data(self.data)
@@ -396,7 +406,7 @@ def reprocess_minidump(data):
     if default_cache.get(minidump_is_reprocessed_cache_key):
         return
 
-    if not _is_symbolicator_enabled(project):
+    if not _is_symbolicator_enabled(project, data):
         rv = reprocess_minidump_with_cfi(data)
         default_cache.set(minidump_is_reprocessed_cache_key, True, 3600)
         return rv
