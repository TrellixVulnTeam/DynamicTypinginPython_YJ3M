commit f94bf5e298b16b2632fced7a99bc39165959cba1
Author: David Cramer <dcramer@gmail.com>
Date:   Tue Jul 5 14:06:36 2016 -0700

    Add project tag key details endpoint
    
    This would allow a user, for example, to answer 'how many users have been affected by errors (all time)'.
    
    @getsentry/api

diff --git a/src/sentry/api/endpoints/project_tagkey_details.py b/src/sentry/api/endpoints/project_tagkey_details.py
index ec5e104a19..062e7db963 100644
--- a/src/sentry/api/endpoints/project_tagkey_details.py
+++ b/src/sentry/api/endpoints/project_tagkey_details.py
@@ -4,11 +4,29 @@ from rest_framework.response import Response
 
 from sentry.api.bases.project import ProjectEndpoint
 from sentry.api.exceptions import ResourceDoesNotExist
+from sentry.api.serializers import serialize
 from sentry.models import AuditLogEntryEvent, TagKey, TagKeyStatus
 from sentry.tasks.deletion import delete_tag_key
 
 
 class ProjectTagKeyDetailsEndpoint(ProjectEndpoint):
+    def get(self, request, project, key):
+        if TagKey.is_reserved_key(key):
+            lookup_key = 'sentry:{0}'.format(key)
+        else:
+            lookup_key = key
+
+        try:
+            tagkey = TagKey.objects.get(
+                project=project,
+                key=lookup_key,
+                status=TagKeyStatus.VISIBLE,
+            )
+        except TagKey.DoesNotExist:
+            raise ResourceDoesNotExist
+
+        return Response(serialize(tagkey, request.user))
+
     def delete(self, request, project, key):
         """
         Remove all occurrences of the given tag key.
diff --git a/src/sentry/api/serializers/models/tagkey.py b/src/sentry/api/serializers/models/tagkey.py
new file mode 100644
index 0000000000..b96f1b3e1e
--- /dev/null
+++ b/src/sentry/api/serializers/models/tagkey.py
@@ -0,0 +1,15 @@
+from __future__ import absolute_import
+
+from sentry.api.serializers import Serializer, register
+from sentry.models import TagKey
+
+
+@register(TagKey)
+class TagKeySerializer(Serializer):
+    def serialize(self, obj, attrs, user):
+        return {
+            'id': str(obj.id),
+            'key': TagKey.get_standardized_key(obj.key),
+            'name': obj.get_label(),
+            'uniqueValues': obj.values_seen,
+        }
diff --git a/tests/sentry/api/endpoints/test_project_tagkey_details.py b/tests/sentry/api/endpoints/test_project_tagkey_details.py
index e15c06dd07..4d8aaf9874 100644
--- a/tests/sentry/api/endpoints/test_project_tagkey_details.py
+++ b/tests/sentry/api/endpoints/test_project_tagkey_details.py
@@ -8,6 +8,30 @@ from sentry.models import TagKey, TagKeyStatus
 from sentry.testutils import APITestCase
 
 
+class ProjectTagKeyDetailsTest(APITestCase):
+    def test_simple(self):
+        project = self.create_project()
+        tagkey = TagKey.objects.create(
+            project=project,
+            key='foo',
+            values_seen=16,
+        )
+
+        self.login_as(user=self.user)
+
+        url = reverse('sentry-api-0-project-tagkey-details', kwargs={
+            'organization_slug': project.organization.slug,
+            'project_slug': project.slug,
+            'key': tagkey.key,
+        })
+
+        response = self.client.get(url)
+
+        assert response.status_code == 200
+        assert response.data['id'] == str(tagkey.id)
+        assert response.data['uniqueValues'] == tagkey.values_seen
+
+
 class ProjectTagKeyDeleteTest(APITestCase):
     @mock.patch('sentry.api.endpoints.project_tagkey_details.delete_tag_key')
     def test_simple(self, mock_delete_tag_key):
