commit 703e56560be7b9984d160ab58b90806128d563d0
Author: Mark Story <mark@sentry.io>
Date:   Thu Jul 25 13:44:34 2019 -0400

    fix(discover) Persist synthetic event to retain target (#14137)
    
    Because setState() is async react was nulling out event.target on us. By
    using event.persist() we can remove the event from the pool and retain
    references to the source element.
    
    Fixes JAVASCRIPT-1BKZ

diff --git a/src/sentry/static/sentry/app/views/discover/aggregations/aggregation.tsx b/src/sentry/static/sentry/app/views/discover/aggregations/aggregation.tsx
index 1fb73aa649..1efe67f83b 100644
--- a/src/sentry/static/sentry/app/views/discover/aggregations/aggregation.tsx
+++ b/src/sentry/static/sentry/app/views/discover/aggregations/aggregation.tsx
@@ -94,6 +94,7 @@ export default class AggregationRow extends React.Component<
   inputRenderer = (props: AggregationProps) => {
     const onChange = (evt: any) => {
       if (evt && evt.target && evt.target.value === '') {
+        evt.persist();
         // React select won't trigger an onChange event when a value is completely
         // cleared, so we'll force this before calling onChange
         this.setState({inputValue: evt.target.value}, () => {
