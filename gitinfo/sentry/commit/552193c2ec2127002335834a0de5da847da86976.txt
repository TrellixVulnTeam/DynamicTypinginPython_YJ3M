commit 552193c2ec2127002335834a0de5da847da86976
Author: Mark Story <mark@sentry.io>
Date:   Thu Mar 19 16:51:16 2020 -0400

    ref(ts) Convert ResolutionBox to typescript + function component. (#17787)

diff --git a/src/sentry/static/sentry/app/components/resolutionBox.jsx b/src/sentry/static/sentry/app/components/resolutionBox.jsx
deleted file mode 100644
index 6bc51bd4a9..0000000000
--- a/src/sentry/static/sentry/app/components/resolutionBox.jsx
+++ /dev/null
@@ -1,74 +0,0 @@
-import PropTypes from 'prop-types';
-import React from 'react';
-import styled from '@emotion/styled';
-
-import UserAvatar from 'app/components/avatar/userAvatar';
-import {BannerContainer, BannerSummary} from 'app/components/events/styles';
-import CommitLink from 'app/components/commitLink';
-import TimeSince from 'app/components/timeSince';
-import Version from 'app/components/version';
-import {IconCheckmark} from 'app/icons';
-import {t, tct} from 'app/locale';
-import space from 'app/styles/space';
-import theme from 'app/utils/theme';
-
-const StyledTimeSince = styled(TimeSince)`
-  color: ${p => p.theme.gray2};
-  margin-left: ${space(0.5)};
-  font-size: ${p => p.theme.fontSizeSmall};
-`;
-
-export default class ResolutionBox extends React.Component {
-  static propTypes = {
-    statusDetails: PropTypes.object.isRequired,
-  };
-
-  renderReason = () => {
-    const {statusDetails} = this.props;
-    const actor = statusDetails.actor ? (
-      <strong>
-        <UserAvatar user={statusDetails.actor} size={20} className="avatar" />
-        <span style={{marginLeft: 5}}>{statusDetails.actor.name}</span>
-      </strong>
-    ) : null;
-
-    if (statusDetails.inNextRelease && statusDetails.actor) {
-      return tct('[actor] marked this issue as resolved in the upcoming release.', {
-        actor,
-      });
-    } else if (statusDetails.inNextRelease) {
-      return t('This issue has been marked as resolved in the upcoming release.');
-    } else if (statusDetails.inRelease && statusDetails.actor) {
-      return tct('[actor] marked this issue as resolved in version [version].', {
-        actor,
-        version: <Version version={statusDetails.inRelease} tooltipRawVersion />,
-      });
-    } else if (statusDetails.inRelease) {
-      return tct('This issue has been marked as resolved in version [version].', {
-        version: <Version version={statusDetails.inRelease} tooltipRawVersion />,
-      });
-    } else if (!!statusDetails.inCommit) {
-      return tct('This issue has been marked as resolved by [commit]', {
-        commit: (
-          <React.Fragment>
-            <CommitLink
-              commitId={statusDetails.inCommit.id}
-              repository={statusDetails.inCommit.repository}
-            />
-            <StyledTimeSince date={statusDetails.inCommit.dateCreated} />
-          </React.Fragment>
-        ),
-      });
-    }
-    return t('This issue has been marked as resolved.');
-  };
-
-  render = () => (
-    <BannerContainer priority="default">
-      <BannerSummary>
-        <IconCheckmark color={theme.green} />
-        <span>{this.renderReason()}</span>
-      </BannerSummary>
-    </BannerContainer>
-  );
-}
diff --git a/src/sentry/static/sentry/app/components/resolutionBox.tsx b/src/sentry/static/sentry/app/components/resolutionBox.tsx
new file mode 100644
index 0000000000..dcf3b69ea3
--- /dev/null
+++ b/src/sentry/static/sentry/app/components/resolutionBox.tsx
@@ -0,0 +1,80 @@
+import PropTypes from 'prop-types';
+import React from 'react';
+import styled from '@emotion/styled';
+
+import UserAvatar from 'app/components/avatar/userAvatar';
+import {BannerContainer, BannerSummary} from 'app/components/events/styles';
+import CommitLink from 'app/components/commitLink';
+import TimeSince from 'app/components/timeSince';
+import Version from 'app/components/version';
+import {IconCheckmark} from 'app/icons';
+import {t, tct} from 'app/locale';
+import space from 'app/styles/space';
+import {ResolutionStatusDetails} from 'app/types';
+import theme from 'app/utils/theme';
+
+type Props = {
+  statusDetails: ResolutionStatusDetails;
+};
+
+function renderReason(statusDetails: ResolutionStatusDetails) {
+  const actor = statusDetails.actor ? (
+    <strong>
+      <UserAvatar user={statusDetails.actor} size={20} className="avatar" />
+      <span style={{marginLeft: 5}}>{statusDetails.actor.name}</span>
+    </strong>
+  ) : null;
+
+  if (statusDetails.inNextRelease && statusDetails.actor) {
+    return tct('[actor] marked this issue as resolved in the upcoming release.', {
+      actor,
+    });
+  } else if (statusDetails.inNextRelease) {
+    return t('This issue has been marked as resolved in the upcoming release.');
+  } else if (statusDetails.inRelease && statusDetails.actor) {
+    return tct('[actor] marked this issue as resolved in version [version].', {
+      actor,
+      version: <Version version={statusDetails.inRelease} tooltipRawVersion />,
+    });
+  } else if (statusDetails.inRelease) {
+    return tct('This issue has been marked as resolved in version [version].', {
+      version: <Version version={statusDetails.inRelease} tooltipRawVersion />,
+    });
+  } else if (!!statusDetails.inCommit) {
+    return tct('This issue has been marked as resolved by [commit]', {
+      commit: (
+        <React.Fragment>
+          <CommitLink
+            commitId={statusDetails.inCommit.id}
+            repository={statusDetails.inCommit.repository}
+          />
+          <StyledTimeSince date={statusDetails.inCommit.dateCreated} />
+        </React.Fragment>
+      ),
+    });
+  }
+  return t('This issue has been marked as resolved.');
+}
+
+function ResolutionBox({statusDetails}: Props) {
+  return (
+    <BannerContainer priority="default">
+      <BannerSummary>
+        <IconCheckmark color={theme.green} />
+        <span>{renderReason(statusDetails)}</span>
+      </BannerSummary>
+    </BannerContainer>
+  );
+}
+
+ResolutionBox.propTypes = {
+  statusDetails: PropTypes.object.isRequired,
+};
+
+const StyledTimeSince = styled(TimeSince)`
+  color: ${p => p.theme.gray2};
+  margin-left: ${space(0.5)};
+  font-size: ${p => p.theme.fontSizeSmall};
+`;
+
+export default ResolutionBox;
diff --git a/src/sentry/static/sentry/app/types/index.tsx b/src/sentry/static/sentry/app/types/index.tsx
index fc2af7aecc..5bb02738a4 100644
--- a/src/sentry/static/sentry/app/types/index.tsx
+++ b/src/sentry/static/sentry/app/types/index.tsx
@@ -527,7 +527,7 @@ export type Group = {
   shortId: string;
   stats: any; // TODO(ts)
   status: string;
-  statusDetails: {};
+  statusDetails: ResolutionStatusDetails;
   title: string;
   type: EventOrGroupType;
   userCount: number;
@@ -1029,6 +1029,12 @@ export enum ResolutionStatus {
 }
 export type ResolutionStatusDetails = {
   actor?: AvatarUser;
+  autoResolved?: boolean;
+  ignoreCount?: number;
+  ignoreUntil?: string;
+  ignoreUserCount?: number;
+  ignoreUserWindow?: string;
+  ignoreWindow?: string;
   inCommit?: Commit;
   inRelease?: string;
   inNextRelease?: boolean;
diff --git a/src/sentry/static/sentry/app/views/organizationGroupDetails/groupEventDetails/groupEventDetails.tsx b/src/sentry/static/sentry/app/views/organizationGroupDetails/groupEventDetails/groupEventDetails.tsx
index 6177ff7e38..6e82a96e29 100644
--- a/src/sentry/static/sentry/app/views/organizationGroupDetails/groupEventDetails/groupEventDetails.tsx
+++ b/src/sentry/static/sentry/app/views/organizationGroupDetails/groupEventDetails/groupEventDetails.tsx
@@ -195,10 +195,7 @@ class GroupEventDetails extends React.Component<Props, State> {
               <MutedBox statusDetails={group.statusDetails} />
             )}
             {group.status === 'resolved' && (
-              <ResolutionBox
-                statusDetails={group.statusDetails}
-                orgId={organization.slug}
-              />
+              <ResolutionBox statusDetails={group.statusDetails} />
             )}
             {this.state.loading ? (
               <LoadingIndicator />
