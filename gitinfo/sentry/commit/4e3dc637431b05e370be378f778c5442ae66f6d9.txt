commit 4e3dc637431b05e370be378f778c5442ae66f6d9
Author: Lyn Nagara <lyn.nagara@gmail.com>
Date:   Tue Feb 5 14:30:18 2019 -0800

    feat(issues): Filter issue details page by active environments (#11911)
    
    Issue details page supports filtering by multiple environments. This
    mostly affects the stats values displayed in the sidebar.

diff --git a/src/sentry/static/sentry/app/views/groupDetails/organization/index.jsx b/src/sentry/static/sentry/app/views/groupDetails/organization/index.jsx
index 25b6c07d52..04c1153071 100644
--- a/src/sentry/static/sentry/app/views/groupDetails/organization/index.jsx
+++ b/src/sentry/static/sentry/app/views/groupDetails/organization/index.jsx
@@ -2,6 +2,7 @@ import React from 'react';
 import SentryTypes from 'app/sentryTypes';
 
 import withOrganization from 'app/utils/withOrganization';
+import withGlobalSelection from 'app/utils/withGlobalSelection';
 import GlobalSelectionHeader from 'app/components/organizations/globalSelectionHeader';
 import {PageContent} from 'app/styles/organization';
 import Feature from 'app/components/acl/feature';
@@ -10,19 +11,23 @@ import GroupDetails from '../shared/groupDetails';
 
 class OrganizationGroupDetails extends React.Component {
   static propTypes = {
-    organization: SentryTypes.Organization,
+    organization: SentryTypes.Organization.isRequired,
+    selection: SentryTypes.GlobalSelection.isRequired,
   };
 
   render() {
+    // eslint-disable-next-line no-unused-vars
+    const {selection, ...props} = this.props;
+
     return (
       <Feature features={['sentry10']} renderDisabled>
         <GlobalSelectionHeader organization={this.props.organization} />
         <PageContent>
-          <GroupDetails {...this.props} />
+          <GroupDetails environments={selection.environments} {...props} />
         </PageContent>
       </Feature>
     );
   }
 }
 
-export default withOrganization(OrganizationGroupDetails);
+export default withOrganization(withGlobalSelection(OrganizationGroupDetails));
diff --git a/src/sentry/static/sentry/app/views/groupDetails/project/index.jsx b/src/sentry/static/sentry/app/views/groupDetails/project/index.jsx
index 80aee0587f..33f7d0b992 100644
--- a/src/sentry/static/sentry/app/views/groupDetails/project/index.jsx
+++ b/src/sentry/static/sentry/app/views/groupDetails/project/index.jsx
@@ -29,8 +29,15 @@ class ProjectGroupDetails extends React.Component {
 
   render() {
     // eslint-disable-next-line no-unused-vars
-    const {setProjectNavSection, ...props} = this.props;
-    return <GroupDetails project={this.context.project} {...props} />;
+    const {setProjectNavSection, environment, ...props} = this.props;
+
+    return (
+      <GroupDetails
+        project={this.context.project}
+        environments={environment ? [environment.name] : []}
+        {...props}
+      />
+    );
   }
 }
 
diff --git a/src/sentry/static/sentry/app/views/groupDetails/shared/groupDetails.jsx b/src/sentry/static/sentry/app/views/groupDetails/shared/groupDetails.jsx
index 0c0a51b50d..93bad23942 100644
--- a/src/sentry/static/sentry/app/views/groupDetails/shared/groupDetails.jsx
+++ b/src/sentry/static/sentry/app/views/groupDetails/shared/groupDetails.jsx
@@ -23,7 +23,8 @@ const GroupDetails = createReactClass({
   propTypes: {
     // Provided in the project version of group details
     project: SentryTypes.Project,
-    environment: SentryTypes.Environment,
+    // environment: SentryTypes.Environment,
+    environments: PropTypes.arrayOf(PropTypes.string),
   },
 
   childContextTypes: {
@@ -62,7 +63,7 @@ const GroupDetails = createReactClass({
   componentDidUpdate(prevProps) {
     if (
       prevProps.params.groupId !== this.props.params.groupId ||
-      prevProps.environment !== this.props.environment
+      prevProps.environments !== this.props.environments
     ) {
       this.fetchData();
     }
@@ -75,8 +76,8 @@ const GroupDetails = createReactClass({
   fetchData() {
     const query = {};
 
-    if (this.props.environment) {
-      query.environment = this.props.environment.name;
+    if (this.props.environments) {
+      query.environment = this.props.environments;
     }
 
     this.api.request(this.getGroupDetailsEndpoint(), {
