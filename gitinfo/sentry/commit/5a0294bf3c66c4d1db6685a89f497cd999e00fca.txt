commit 5a0294bf3c66c4d1db6685a89f497cd999e00fca
Author: Lyn Nagara <lyn.nagara@gmail.com>
Date:   Fri Dec 1 13:24:56 2017 -0800

    Convert project tags page to React (#6645)
    
    * ref(settings): Convert project tags page to React
    
    * ref(settings): Add a test for project tags page
    
    * ref(settings): Add a confirmation step before removing a tag

diff --git a/src/sentry/static/sentry/app/routes.jsx b/src/sentry/static/sentry/app/routes.jsx
index e64716e6c1..0d77a7a9bd 100644
--- a/src/sentry/static/sentry/app/routes.jsx
+++ b/src/sentry/static/sentry/app/routes.jsx
@@ -51,6 +51,7 @@ import OrganizationStats from './views/organizationStats';
 import OrganizationTeams from './views/organizationTeams';
 import ProjectAlertRules from './views/projectAlertRules';
 import ProjectAlertSettings from './views/projectAlertSettings';
+import ProjectTags from './views/projectTags';
 import ProjectChooser from './views/projectChooser';
 import ProjectCspSettings from './views/projectCspSettings';
 import ProjectDashboard from './views/projectDashboard';
@@ -150,6 +151,7 @@ const projectSettingsRoutes = [
     path="alerts/"
     component={errorHandler(ProjectAlertSettings)}
   />,
+  <Route key="tags/" name="Tags" path="tags/" component={errorHandler(ProjectTags)} />,
   <Route
     key="alerts/rules/"
     path="alerts/rules/"
@@ -220,10 +222,11 @@ const projectSettingsRoutes = [
     key="install/"
     path="install/"
     name="Basic Configuration"
-    component={errorHandler(ProjectDocsContext)}>
+    component={errorHandler(ProjectDocsContext)}
+  >
     <IndexRoute component={errorHandler(ProjectInstallOverview)} />
     <Route path=":platform/" component={errorHandler(ProjectInstallPlatform)} />
-  </Route>
+  </Route>,
 ];
 
 function routes() {
diff --git a/src/sentry/static/sentry/app/views/projectSettings/index.jsx b/src/sentry/static/sentry/app/views/projectSettings/index.jsx
index 616ebd7043..ea4ac06450 100644
--- a/src/sentry/static/sentry/app/views/projectSettings/index.jsx
+++ b/src/sentry/static/sentry/app/views/projectSettings/index.jsx
@@ -102,9 +102,7 @@ const ProjectSettings = React.createClass({
                 <a href={`${settingsUrlRoot}/quotas/`}>{t('Rate Limits')}</a>
               </li>
             )}
-            <li>
-              <a href={`${settingsUrlRoot}/tags/`}>{t('Tags')}</a>
-            </li>
+            <ListLink to={`/${orgId}/${projectId}/settings/tags/`}>{t('Tags')}</ListLink>
             <li>
               <a href={`${settingsUrlRoot}/issue-tracking/`}>{t('Issue Tracking')}</a>
             </li>
diff --git a/src/sentry/static/sentry/app/views/projectTags.jsx b/src/sentry/static/sentry/app/views/projectTags.jsx
new file mode 100644
index 0000000000..2d5c5325b6
--- /dev/null
+++ b/src/sentry/static/sentry/app/views/projectTags.jsx
@@ -0,0 +1,83 @@
+import React from 'react';
+import AsyncView from './asyncView';
+import {t} from '../locale';
+import ExternalLink from '../components/externalLink';
+import LinkWithConfirmation from '../components/linkWithConfirmation';
+
+export default class ProjectTags extends AsyncView {
+  getEndpoints() {
+    let {projectId, orgId} = this.props.params;
+    return [['tags', `/projects/${orgId}/${projectId}/tags/`]];
+  }
+
+  onDelete(key, idx) {
+    let {projectId, orgId} = this.props.params;
+
+    this.api.request(`/projects/${orgId}/${projectId}/tags/${key}/`, {
+      method: 'DELETE',
+      success: () => {
+        let tags = this.state.tags.slice();
+        tags.splice(idx, 1);
+        this.setState({tags});
+      },
+      error: () => {
+        this.setState({
+          error: true,
+          loading: false,
+        });
+      },
+    });
+  }
+
+  renderBody() {
+    return (
+      <div>
+        <h2>{t('Tags')}</h2>
+        <p>
+          Each event in Sentry may be annotated with various tags (key and value pairs).
+          Learn how to{' '}
+          <ExternalLink href="https://docs.sentry.io/hosted/learn/context/">
+            add custom tags
+          </ExternalLink>
+          .
+        </p>
+
+        <div className="panel panel-default">
+          <table className="table">
+            <thead>
+              <tr>
+                <th>Tags</th>
+                <th style={{width: 20}} />
+              </tr>
+            </thead>
+            <tbody>
+              {this.state.tags.map(({key, name}, idx) => {
+                return (
+                  <tr key={key}>
+                    <td>
+                      <h5>
+                        {name}
+                        &nbsp;
+                        <small>({key})</small>
+                      </h5>
+                    </td>
+                    <td>
+                      <LinkWithConfirmation
+                        className="btn btn-sm btn-default"
+                        title={'Remove tag?'}
+                        message={'Are you sure you want to remove this tag?'}
+                        onConfirm={() => this.onDelete(key, idx)}
+                      >
+                        <span className="icon icon-trash" />
+                      </LinkWithConfirmation>
+                    </td>
+                  </tr>
+                );
+              })}
+            </tbody>
+          </table>
+        </div>
+      </div>
+    );
+  }
+}
diff --git a/src/sentry/templates/sentry/projects/manage.html b/src/sentry/templates/sentry/projects/manage.html
index 9f59d52d0d..cb328b5ec0 100644
--- a/src/sentry/templates/sentry/projects/manage.html
+++ b/src/sentry/templates/sentry/projects/manage.html
@@ -206,8 +206,8 @@
     <li{% if page == 'alerts' %} class="active"{% endif %}>
         <a href="{% absolute_uri '/{}/{}/settings/alerts/' project.organization.slug project.slug %}">{% trans "Alerts" %}</a>
     </li>
-    <li{% if page == 'tags' %} class="active"{% endif %}>
-        <a href="{% url 'sentry-manage-project-tags' project.organization.slug project.slug %}">{% trans "Tags" %}</a>
+    <li>
+        <a href="{% absolute_uri '/{}/{}/settings/tags/' project.organization.slug project.slug %}">{% trans "Tags" %}</a>
     </li>
     <li{% if page == 'issue-tracking' %} class="active"{% endif %}>
         <a href="{% url 'sentry-project-issue-tracking' project.organization.slug project.slug %}">{% trans "Issue Tracking" %}</a>
diff --git a/src/sentry/templates/sentry/projects/manage_tags.html b/src/sentry/templates/sentry/projects/manage_tags.html
deleted file mode 100644
index b2afc2b98f..0000000000
--- a/src/sentry/templates/sentry/projects/manage_tags.html
+++ /dev/null
@@ -1,69 +0,0 @@
-{% extends "sentry/projects/manage.html" %}
-
-{% load crispy_forms_tags %}
-{% load i18n %}
-{% load sentry_helpers %}
-
-{% block title %}{% trans "Tags" %} | {{ block.super }}{% endblock %}
-
-{% block main %}
-  <h2>{% trans "Tags" %}</h2>
-
-  {% if tag_list %}
-    <p>{% blocktrans with link='https://docs.sentry.io/hosted/learn/context/' %}Each event in Sentry may be annotated with various tags (key and value pairs). Learn how to <a href="{{ link }}">add custom tags</a>.{% endblocktrans %}</p>
-
-    <div class="panel panel-default">
-      <table class="table">
-        <thead>
-          <tr>
-            <th>Tags</th>
-            <th style="width:20px">&nbsp;</th>
-          </tr>
-        </thead>
-        <tbody>
-          {% for tag in tag_list %}
-            <tr data-tagkey="{{ tag.key }}">
-              <td>
-                <h5 style="margin-bottom: 10px;">{{ tag.get_label }} <small>({{ tag.key }})</small></h5>
-              </td>
-              <td>
-              {% comment %}
-                Make sure this onclick is wrapped in single quotes
-                and not double quotes becuase the value is being
-                JSON encoded and can't put double quotes within
-                double quotes.
-              {% endcomment %}
-                <a class="btn btn-sm btn-default" href="javascript:void(0)"
-                    onclick='removeTagKey({{ tag.key|to_json }})'><span class="icon icon-trash"></span></a>
-              </td>
-            </tr>
-          {% endfor %}
-        </tbody>
-      </table>
-    </div>
-  {% else %}
-    <p>{% trans "We have not yet recorded any tags for this project." %}</p>
-  {% endif %}
-
-  <script>
-  var removeTagKey = function(keyName) {
-    if (!confirm('Are you sure you wish to delete all data for this tag?')) {
-      return;
-    }
-
-    $.ajax({
-      url: '/api/0/projects/{{ organization.slug }}/{{ project.slug }}/tags/' + keyName + '/',
-      method: 'DELETE',
-      success: function () {
-        location.reload();
-      }
-    });
-    $('.tag-list tr').each(function(_, el){
-      var $el = $(el);
-      if ($el.attr('data-tagkey') == keyName) {
-        $el.remove();
-      }
-    });
-  };
-  </script>
-{% endblock %}
diff --git a/src/sentry/web/frontend/project_tags.py b/src/sentry/web/frontend/project_tags.py
deleted file mode 100644
index 7bd6578302..0000000000
--- a/src/sentry/web/frontend/project_tags.py
+++ /dev/null
@@ -1,27 +0,0 @@
-from __future__ import absolute_import
-
-from sentry import tagstore
-from sentry.api.base import EnvironmentMixin
-from sentry.models import Environment
-from sentry.web.frontend.base import ProjectView
-
-
-class ProjectTagsView(ProjectView, EnvironmentMixin):
-    def get(self, request, organization, team, project):
-        try:
-            environment_id = self._get_environment_id_from_request(request, project.organization_id)
-        except Environment.DoesNotExist:
-            tag_list = []
-        else:
-            tag_list = sorted(
-                tagstore.get_tag_keys(
-                    project.id,
-                    environment_id,
-                ),
-                key=lambda x: x.key)
-
-        context = {
-            'tag_list': tag_list,
-            'page': 'tags',
-        }
-        return self.respond('sentry/projects/manage_tags.html', context)
diff --git a/src/sentry/web/urls.py b/src/sentry/web/urls.py
index 433f409f05..6312ffec5a 100644
--- a/src/sentry/web/urls.py
+++ b/src/sentry/web/urls.py
@@ -53,7 +53,6 @@ from sentry.web.frontend.project_plugin_reset import ProjectPluginResetView
 from sentry.web.frontend.project_plugins import ProjectPluginsView
 from sentry.web.frontend.project_rule_edit import ProjectRuleEditView
 from sentry.web.frontend.project_settings import ProjectSettingsView
-from sentry.web.frontend.project_tags import ProjectTagsView
 from sentry.web.frontend.react_page import GenericReactPageView, ReactPageView
 from sentry.web.frontend.reactivate_account import ReactivateAccountView
 from sentry.web.frontend.release_webhook import ReleaseWebhookView
@@ -460,11 +459,6 @@ urlpatterns += patterns(
         TransferProjectView.as_view(),
         name='sentry-transfer-project'
     ),
-    url(
-        r'^(?P<organization_slug>[\w_-]+)/(?P<project_slug>[\w_-]+)/settings/tags/$',
-        ProjectTagsView.as_view(),
-        name='sentry-manage-project-tags'
-    ),
     url(
         r'^(?P<organization_slug>[\w_-]+)/(?P<project_slug>[\w_-]+)/settings/alerts/rules/new/$',
         ProjectRuleEditView.as_view(),
diff --git a/tests/js/setup.js b/tests/js/setup.js
index 2838a844e5..80af79e4b0 100644
--- a/tests/js/setup.js
+++ b/tests/js/setup.js
@@ -60,15 +60,15 @@ window.TestStubs = {
       roleName: '',
       pending: false,
       flags: {
-        'sso:linked': false
+        'sso:linked': false,
       },
       user: {
         id: '1',
         has2fa: false,
         name: 'Sentry 1 Name',
         email: 'sentry1@test.com',
-        username: 'Sentry 1 Username'
-      }
+        username: 'Sentry 1 Username',
+      },
     },
     {
       id: '2',
@@ -77,15 +77,15 @@ window.TestStubs = {
       roleName: '',
       pending: false,
       flags: {
-        'sso:linked': false
+        'sso:linked': false,
       },
       user: {
         id: '2',
         has2fa: true,
         name: 'Sentry 2 Name',
         email: 'sentry2@test.com',
-        username: 'Sentry 2 Username'
-      }
+        username: 'Sentry 2 Username',
+      },
     },
     {
       id: '3',
@@ -94,21 +94,21 @@ window.TestStubs = {
       roleName: '',
       pending: false,
       flags: {
-        'sso:linked': true
+        'sso:linked': true,
       },
       user: {
         id: '3',
         has2fa: true,
         name: 'Sentry 3 Name',
         email: 'sentry3@test.com',
-        username: 'Sentry 3 Username'
-      }
+        username: 'Sentry 3 Username',
+      },
     },
-    ...params
+    ...params,
   ],
 
   AuthProvider: (...params) => ({
-    require_link: false
+    require_link: false,
   }),
 
   Project: (...params) => {
@@ -191,6 +191,9 @@ window.TestStubs = {
       ...params,
     };
   },
+  Tags: (...params) => {
+    return [{key: 'browser', name: 'Browser'}, {key: 'device', name: 'Device'}];
+  },
 };
 
 // this is very commonly used, so expose it globally
diff --git a/tests/js/spec/views/__snapshots__/projectTags.spec.jsx.snap b/tests/js/spec/views/__snapshots__/projectTags.spec.jsx.snap
new file mode 100644
index 0000000000..c53678d9d9
--- /dev/null
+++ b/tests/js/spec/views/__snapshots__/projectTags.spec.jsx.snap
@@ -0,0 +1,238 @@
+// Jest Snapshot v1, https://goo.gl/fbAQLP
+
+exports[`ProjectTags renders 1`] = `
+<ProjectTags
+  params={
+    Object {
+      "orgId": "org-slug",
+      "projectId": "project-slug",
+    }
+  }
+>
+  <DocumentTitle
+    title="Sentry"
+  >
+    <div>
+      <h2>
+        Tags
+      </h2>
+      <p>
+        Each event in Sentry may be annotated with various tags (key and value pairs). Learn how to
+         
+        <ExternalLink
+          href="https://docs.sentry.io/hosted/learn/context/"
+          rel="noreferrer noopener"
+          target="_blank"
+        >
+          <a
+            href="https://docs.sentry.io/hosted/learn/context/"
+            rel="noreferrer noopener"
+            target="_blank"
+          >
+            add custom tags
+          </a>
+        </ExternalLink>
+        .
+      </p>
+      <div
+        className="panel panel-default"
+      >
+        <table
+          className="table"
+        >
+          <thead>
+            <tr>
+              <th>
+                Tags
+              </th>
+              <th
+                style={
+                  Object {
+                    "width": 20,
+                  }
+                }
+              />
+            </tr>
+          </thead>
+          <tbody>
+            <tr>
+              <td>
+                <h5>
+                  Browser
+                   
+                  <small>
+                    (
+                    browser
+                    )
+                  </small>
+                </h5>
+              </td>
+              <td>
+                <LinkWithConfirmation
+                  className="btn btn-sm btn-default"
+                  message="Are you sure you want to remove this tag?"
+                  onConfirm={[Function]}
+                  title="Remove tag?"
+                >
+                  <Confirm
+                    cancelText="Cancel"
+                    confirmText="Confirm"
+                    message="Are you sure you want to remove this tag?"
+                    onConfirm={[Function]}
+                    priority="primary"
+                  >
+                    <a
+                      className="btn btn-sm btn-default"
+                      onClick={[Function]}
+                      title="Remove tag?"
+                    >
+                      <span
+                        className="icon icon-trash"
+                      />
+                      <Modal
+                        animation={false}
+                        autoFocus={true}
+                        backdrop={true}
+                        bsClass="modal"
+                        dialogComponentClass={[Function]}
+                        enforceFocus={true}
+                        keyboard={true}
+                        manager={
+                          ModalManager {
+                            "containers": Array [],
+                            "data": Array [],
+                            "handleContainerOverflow": true,
+                            "hideSiblingNodes": true,
+                            "modals": Array [],
+                          }
+                        }
+                        onHide={[Function]}
+                        renderBackdrop={[Function]}
+                        restoreFocus={true}
+                        show={false}
+                      >
+                        <Modal
+                          autoFocus={true}
+                          backdrop={true}
+                          backdropClassName="modal-backdrop"
+                          backdropTransitionTimeout={150}
+                          containerClassName="modal-open"
+                          dialogTransitionTimeout={300}
+                          enforceFocus={true}
+                          keyboard={true}
+                          manager={
+                            ModalManager {
+                              "containers": Array [],
+                              "data": Array [],
+                              "handleContainerOverflow": true,
+                              "hideSiblingNodes": true,
+                              "modals": Array [],
+                            }
+                          }
+                          onEntering={[Function]}
+                          onExited={[Function]}
+                          onHide={[Function]}
+                          renderBackdrop={[Function]}
+                          restoreFocus={true}
+                          show={false}
+                        />
+                      </Modal>
+                    </a>
+                  </Confirm>
+                </LinkWithConfirmation>
+              </td>
+            </tr>
+            <tr>
+              <td>
+                <h5>
+                  Device
+                   
+                  <small>
+                    (
+                    device
+                    )
+                  </small>
+                </h5>
+              </td>
+              <td>
+                <LinkWithConfirmation
+                  className="btn btn-sm btn-default"
+                  message="Are you sure you want to remove this tag?"
+                  onConfirm={[Function]}
+                  title="Remove tag?"
+                >
+                  <Confirm
+                    cancelText="Cancel"
+                    confirmText="Confirm"
+                    message="Are you sure you want to remove this tag?"
+                    onConfirm={[Function]}
+                    priority="primary"
+                  >
+                    <a
+                      className="btn btn-sm btn-default"
+                      onClick={[Function]}
+                      title="Remove tag?"
+                    >
+                      <span
+                        className="icon icon-trash"
+                      />
+                      <Modal
+                        animation={false}
+                        autoFocus={true}
+                        backdrop={true}
+                        bsClass="modal"
+                        dialogComponentClass={[Function]}
+                        enforceFocus={true}
+                        keyboard={true}
+                        manager={
+                          ModalManager {
+                            "containers": Array [],
+                            "data": Array [],
+                            "handleContainerOverflow": true,
+                            "hideSiblingNodes": true,
+                            "modals": Array [],
+                          }
+                        }
+                        onHide={[Function]}
+                        renderBackdrop={[Function]}
+                        restoreFocus={true}
+                        show={false}
+                      >
+                        <Modal
+                          autoFocus={true}
+                          backdrop={true}
+                          backdropClassName="modal-backdrop"
+                          backdropTransitionTimeout={150}
+                          containerClassName="modal-open"
+                          dialogTransitionTimeout={300}
+                          enforceFocus={true}
+                          keyboard={true}
+                          manager={
+                            ModalManager {
+                              "containers": Array [],
+                              "data": Array [],
+                              "handleContainerOverflow": true,
+                              "hideSiblingNodes": true,
+                              "modals": Array [],
+                            }
+                          }
+                          onEntering={[Function]}
+                          onExited={[Function]}
+                          onHide={[Function]}
+                          renderBackdrop={[Function]}
+                          restoreFocus={true}
+                          show={false}
+                        />
+                      </Modal>
+                    </a>
+                  </Confirm>
+                </LinkWithConfirmation>
+              </td>
+            </tr>
+          </tbody>
+        </table>
+      </div>
+    </div>
+  </DocumentTitle>
+</ProjectTags>
+`;
diff --git a/tests/js/spec/views/projectTags.spec.jsx b/tests/js/spec/views/projectTags.spec.jsx
new file mode 100644
index 0000000000..24ed7e3b80
--- /dev/null
+++ b/tests/js/spec/views/projectTags.spec.jsx
@@ -0,0 +1,50 @@
+import React from 'react';
+
+import $ from 'jquery';
+
+import {mount} from 'enzyme';
+import ProjectTags from 'app/views/projectTags';
+
+describe('ProjectTags', function() {
+  let org, project, tags, wrapper;
+
+  beforeEach(function() {
+    org = TestStubs.Organization();
+    project = TestStubs.Project();
+    tags = TestStubs.Tags();
+
+    MockApiClient.addMockResponse({
+      url: `/projects/${org.slug}/${project.slug}/tags/`,
+      method: 'GET',
+      body: tags,
+    });
+    MockApiClient.addMockResponse({
+      url: `/projects/${org.slug}/${project.slug}/tags/browser/`,
+      method: 'DELETE',
+    });
+
+    wrapper = mount(<ProjectTags params={{orgId: org.slug, projectId: project.slug}} />, {
+      context: {
+        router: TestStubs.router(),
+      },
+    });
+  });
+
+  it('renders', function() {
+    expect(wrapper).toMatchSnapshot();
+  });
+
+  it('deletes tag', function() {
+    wrapper
+      .find('tbody a.btn')
+      .first()
+      .simulate('click');
+
+    // Press confirm in modal
+    $(document.body)
+      .find('.modal button:contains("Confirm")')
+      .click();
+
+    expect(wrapper.find('tbody tr').length).toBe(1);
+  });
+});
diff --git a/tests/sentry/web/frontend/test_project_tags.py b/tests/sentry/web/frontend/test_project_tags.py
deleted file mode 100644
index dc9d8e7ad5..0000000000
--- a/tests/sentry/web/frontend/test_project_tags.py
+++ /dev/null
@@ -1,45 +0,0 @@
-from __future__ import absolute_import, print_function
-
-from django.core.urlresolvers import reverse
-from exam import fixture
-
-from sentry import tagstore
-from sentry.testutils import TestCase
-
-
-class ProjectTagsTest(TestCase):
-    @fixture
-    def path(self):
-        return reverse(
-            'sentry-manage-project-tags', args=[self.organization.slug, self.project.slug]
-        )
-
-    def test_requires_authentication(self):
-        self.assertRequiresAuthentication(self.path)
-
-    def test_simple(self):
-        tagstore.create_tag_key(
-            project_id=self.project.id,
-            environment_id=self.environment.id,
-            key='site')
-        tagstore.create_tag_key(
-            project_id=self.project.id,
-            environment_id=self.environment.id,
-            key='url')
-        tagstore.create_tag_key(
-            project_id=self.project.id,
-            environment_id=self.environment.id,
-            key='os')
-
-        self.login_as(self.user)
-
-        resp = self.client.get(self.path)
-        assert resp.status_code == 200
-        self.assertTemplateUsed('sentry/projects/manage_tags.html')
-        assert resp.context['organization'] == self.organization
-        assert resp.context['team'] == self.team
-        assert resp.context['project'] == self.project
-        tag_list = [t.key for t in resp.context['tag_list']]
-        assert 'site' in tag_list
-        assert 'url' in tag_list
-        assert 'os' in tag_list
