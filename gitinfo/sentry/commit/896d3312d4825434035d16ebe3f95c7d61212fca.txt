commit 896d3312d4825434035d16ebe3f95c7d61212fca
Author: Eric Feng <erichfeng@gmail.com>
Date:   Tue Feb 2 12:19:53 2016 -0800

    fixing todos.jsx conflicts

diff --git a/src/sentry/api/endpoints/organization_onboarding_tasks.py b/src/sentry/api/endpoints/organization_onboarding_tasks.py
index bb3f81ad9b..786f440668 100644
--- a/src/sentry/api/endpoints/organization_onboarding_tasks.py
+++ b/src/sentry/api/endpoints/organization_onboarding_tasks.py
@@ -14,7 +14,6 @@ class OrganizationOnboardingTaskEndpoint(OrganizationEndpoint):
 	permission_classes = [OrganizationPermission, ]
 
 	def post(self, request, organization):
-		print request.DATA
 		if request.DATA['status'] == 'Skipped':
 			print OrganizationOnboardingTask.objects.create_or_update(
 				organization=organization,
@@ -27,4 +26,4 @@ class OrganizationOnboardingTaskEndpoint(OrganizationEndpoint):
 			)
 			return Response(status=204)
 
-		return "fuck"
+		return Response(status=404)
diff --git a/src/sentry/models/organizationmember.py b/src/sentry/models/organizationmember.py
index a7805d93be..ef55d4a4ae 100644
--- a/src/sentry/models/organizationmember.py
+++ b/src/sentry/models/organizationmember.py
@@ -97,23 +97,19 @@ class OrganizationMember(Model):
             'Must set user or email'
         super(OrganizationMember, self).save(*args, **kwargs)
 
-        oot = OrganizationOnboardingTask.objects.filter(
-            organzation=self.organzation,
-            user=user,
-            task=OnboardingTask.INVITE_MEMBER,
-            status=OnboardingTaskStatus.COMPLETE
-            ).exists()
-
-        if not oot:
-            OrganizationOnboardingTask.objects.create_or_update(
-                organization=self.organization,
-                user=self.user,
-                task=OnboardingTask.INVITE_MEMBER,
-                values={
-                    'status': OnboardingTaskStatus.PENDING if self.is_pending else OnboardingTaskStatus.COMPLETE,
-                    'date_completed': timezone.now()
-                }
-            )
+        if self.user:
+            try:
+                oot = OrganizationOnboardingTask.objects.get(
+                    organization=self.organization,
+                    task=OnboardingTask.INVITE_MEMBER,
+                )
+                if oot.status == OnboardingTaskStatus.PENDING:
+                    oot.status = OnboardingTaskStatus.COMPLETE
+                    oot.date_completed = timezone.now()
+                    oot.data = { 'invited_member': self.user_id }
+                    oot.save()
+            except OrganizationOnboardingTask.DoesNotExist as e:
+                pass
 
         if not self.counter:
             self._set_counter()
diff --git a/src/sentry/models/organizationonboardingtask.py b/src/sentry/models/organizationonboardingtask.py
index b888da30af..00ac5d142c 100644
--- a/src/sentry/models/organizationonboardingtask.py
+++ b/src/sentry/models/organizationonboardingtask.py
@@ -7,6 +7,7 @@ sentry.models.organizationonboardingtask
 """
 from django.conf import settings
 from django.db import models
+from jsonfield import JSONField
 
 from sentry.db.models import (
     BoundedPositiveIntegerField,
@@ -48,6 +49,12 @@ class OnboardingTaskStatus(object):
 class OrganizationOnboardingTask(Model):
     """
     Onboarding tasks walk new Sentry orgs through basic features of Sentry.
+    data field options (not all tasks have data fields):
+        FIRST_EVENT: { 'platform':  'flask', }
+        INVITE_MEMBER: { 'invited_member': user.id, 'teams': [team.id] }
+        ISSUE_TRACKER | NOTIFICATION_SERVICE: { 'plugin': 'plugin_name' }
+        ISSUE_ASSIGNMENT: { 'assigned_member': user.id }
+        SECOND_PLATFORM: { 'platform': 'javascript' }
     """
     TASK_CHOICES = (
         (OnboardingTask.FIRST_EVENT, 'First event'),  # Send an organization's first event to Sentry
@@ -72,10 +79,12 @@ class OrganizationOnboardingTask(Model):
     )
 
     organization = FlexibleForeignKey('sentry.Organization')
-    user = FlexibleForeignKey(settings.AUTH_USER_MODEL, null=False)  # user that completed
+    user = FlexibleForeignKey(settings.AUTH_USER_MODEL)  # user that completed
+    project = FlexibleForeignKey('sentry.Project', null=True)  # if task is associated with a project
     task = BoundedPositiveIntegerField(choices=TASK_CHOICES)
     status = BoundedPositiveIntegerField(choices=STATUS_CHOICES)
     date_completed = models.DateTimeField()
+    data = JSONField()  # INVITE_MEMBER { invited_member: user.id }
 
     class Meta:
         app_label = 'sentry'
diff --git a/src/sentry/static/sentry/app/components/todos.jsx b/src/sentry/static/sentry/app/components/todos.jsx
index c2bb8cf3ab..da5ec10b3c 100644
--- a/src/sentry/static/sentry/app/components/todos.jsx
+++ b/src/sentry/static/sentry/app/components/todos.jsx
@@ -4,7 +4,7 @@ import ApiMixin from '../mixins/apiMixin';
 import ConfigStore from '../stores/configStore';
 import OrganizationState from '../mixins/organizationState';
 
-const TASKS = [
+const TODOS = [
   {
     'task': 0,
     'title': 'Make a great decision',
@@ -38,6 +38,22 @@ const TASKS = [
     'feature_location': 'project',
     'location': 'settings/release-tracking/',
   },
+  {
+    'task': 6,
+    'title': 'Add user context to errors',
+    'description': 'Know what users are being affected by errors and crashes',
+    'skippable': false,
+    'feature_location': 'absolute',
+    'location': 'https://docs.getsentry.com/hosted/learn/context/#capturing-the-user',
+  },
+  {
+    'task': 5,
+    'title': 'Add a second platform',
+    'description': 'Add Sentry to a second platform',
+    'skippable': false,
+    'feature_location': 'organization',
+    'location': 'projects/new/',
+  },
   {
     'task': 3,
     'title': 'Set up issue tracking',
@@ -54,22 +70,6 @@ const TASKS = [
     'feature_location': 'project',
     'location': 'settings/notifications/',
   },
-  {
-    'task': 5,
-    'title': 'Add a second platform',
-    'description': 'Add Sentry to a second platform',
-    'skippable': false,
-    'feature_location': 'organization',
-    'location': 'projects/new/',
-  },
-  {
-    'task': 6,
-    'title': 'Add user context to errors',
-    'description': 'Know what users are being affected by errors and crashes',
-    'skippable': false,
-    'feature_location': 'absolute',
-    'location': 'https://docs.getsentry.com/hosted/learn/context/#capturing-the-user',
-  },
   // {
   //   'task': 7,
   //   'title': 'Deminify javascript with sourcemaps',
@@ -181,18 +181,19 @@ const Confirmation = React.createClass({
 const Todos = React.createClass({
   mixins: [ApiMixin, OrganizationState],
 
-  getInitialState: function() {
-    return {tasks: []};
+  getInitialState() {
+    return {
+      tasks: [],
+      seeAll: false,  // Show all tasks, included those completed
+    };
   },
 
   componentWillMount() {
     let org = this.getOrganization();
     let tasks = [];
-    for (var task of TASKS) {
-      task.status = '';
-      if (task.task == '0') {
-        task.status = 'Complete';
-      }
+
+    for (var task of TODOS) {
+      task['status'] = '';
       for (var server_task of org.onboardingTasks) {
         if (server_task['task'] == task['task']) {
           task['status'] = server_task['status'];
@@ -204,7 +205,7 @@ const Todos = React.createClass({
     this.setState({tasks: tasks});
   },
 
-  skipTask: function(skipped_task) {
+  skipTask(skipped_task) {
     let org = this.getOrganization();
     this.api.request('/organizations/' + org.slug + '/onboarding-tasks/', {
       method: 'POST',
@@ -225,17 +226,38 @@ const Todos = React.createClass({
     this.getOnboardingTasks();
   },
 
-  render: function() {
-    let todo_list = this.state.tasks.map(function(task) {
-      return (<TodoItem key={task['task']} task={task} onSkip={this.skipTask} />);
+  click(e) {
+    e.preventDefault();
+    e.stopPropagation();
+  },
+
+  toggleSeeAll(e) {
+    this.setState({ seeAll: !this.state.seeAll });
+  },
+
+  render() {
+    var next_tasks = [];
+    if (this.state.seeAll) {
+      next_tasks = this.state.tasks;
+    } else {
+      next_tasks = this.state.tasks.filter( (task) => {
+        if (task['status'] != 'Complete') {
+          return task
+        }
+      }).slice(0,3);
+    }
+
+    let todo_list = next_tasks.map( (task) => {
+      return (<TodoItem key={task['task']} task={task} onSkip={this.skipTask} />)
     }, this);
 
     return (
-        <div className="onboarding-wrapper">
+        <div onClick={this.click} className="onboarding-wrapper">
           <h3>Getting Started with Sentry</h3>
           <ul className="list-unstyled">
             {todo_list}
           </ul>
+          <a onClick={this.toggleSeeAll}>{this.state.seeAll ? 'Hide' : 'See All'}</a>
         </div>
     );
   }
diff --git a/src/sentry/static/sentry/app/views/organizationDashboard.jsx b/src/sentry/static/sentry/app/views/organizationDashboard.jsx
index 2757958ce4..949af773b3 100644
--- a/src/sentry/static/sentry/app/views/organizationDashboard.jsx
+++ b/src/sentry/static/sentry/app/views/organizationDashboard.jsx
@@ -5,7 +5,6 @@ import ActivityFeed from '../components/activity/feed';
 import GroupStore from '../stores/groupStore';
 import IssueList from '../components/issueList';
 import OrganizationHomeContainer from '../components/organizations/homeContainer';
-import Todos from '../components/todos';
 import {t} from '../locale';
 
 const AssignedIssues = React.createClass({
@@ -90,7 +89,6 @@ const OrganizationDashboard = React.createClass({
         <div className="early-adopter-banner"><strong>Psst!</strong> This feature is still a work-in-progress. Thanks for being an early adopter! YO! YO!</div>
         <div className="row">
           <div className="col-md-8">
-            <Todos {...this.props} />
             <AssignedIssues {...this.props} />
             <NewIssues {...this.props} />
           </div>
diff --git a/src/sentry/web/forms/invite_organization_member.py b/src/sentry/web/forms/invite_organization_member.py
index c85b5d64de..3fc6776601 100644
--- a/src/sentry/web/forms/invite_organization_member.py
+++ b/src/sentry/web/forms/invite_organization_member.py
@@ -2,12 +2,17 @@ from __future__ import absolute_import
 
 from django import forms
 from django.db import transaction, IntegrityError
+from django.utils import timezone
 
 from sentry.models import (
-    AuditLogEntry, AuditLogEntryEvent, OrganizationMember
+    AuditLogEntry,
+    AuditLogEntryEvent,
+    OnboardingTask,
+    OnboardingTaskStatus,
+    OrganizationOnboardingTask,
+    OrganizationMember,
 )
 
-
 class InviteOrganizationMemberForm(forms.ModelForm):
     # override this to ensure the field is required
     email = forms.EmailField()
@@ -34,6 +39,17 @@ class InviteOrganizationMemberForm(forms.ModelForm):
         sid = transaction.savepoint(using='default')
         try:
             om.save()
+
+            result, created = OrganizationOnboardingTask.objects.get_or_create(
+                organization=organization,
+                user=actor,
+                task=OnboardingTask.INVITE_MEMBER,
+                defaults={
+                    'status': OnboardingTaskStatus.PENDING,
+                    'date_completed': timezone.now()
+                }
+            )
+
         except IntegrityError:
             transaction.savepoint_rollback(sid, using='default')
             return OrganizationMember.objects.get(
