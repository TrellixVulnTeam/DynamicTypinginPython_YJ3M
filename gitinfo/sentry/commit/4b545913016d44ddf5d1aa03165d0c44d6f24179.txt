commit 4b545913016d44ddf5d1aa03165d0c44d6f24179
Author: Burak Yigit Kaya <byk@sentry.io>
Date:   Sat Dec 7 01:36:12 2019 +0300

    ref(contextData): Remove jquery usage (#15986)

diff --git a/src/sentry/static/sentry/app/components/contextData.jsx b/src/sentry/static/sentry/app/components/contextData.jsx
index 3aea319d14..3afa3f711b 100644
--- a/src/sentry/static/sentry/app/components/contextData.jsx
+++ b/src/sentry/static/sentry/app/components/contextData.jsx
@@ -1,4 +1,3 @@
-import $ from 'jquery';
 import PropTypes from 'prop-types';
 import React from 'react';
 
@@ -73,6 +72,42 @@ function analyzeStringForRepr(value) {
   return rv;
 }
 
+class ToggleWrap extends React.Component {
+  static propTypes = {
+    highUp: PropTypes.bool,
+    wrapClassName: PropTypes.string,
+  };
+
+  state = {toggled: false};
+
+  render() {
+    if (React.Children.count(this.props.children) === 0) {
+      return null;
+    }
+    if (this.props.highUp) {
+      return this.props.children;
+    }
+
+    const classes = ['val-toggle'];
+    if (this.state.toggled) {
+      classes.push('val-toggle-open');
+    }
+    return (
+      <span className={classes.join(' ')}>
+        <a
+          href="#"
+          className="val-toggle-link"
+          onClick={evt => {
+            this.setState(state => ({toggled: !state.toggled}));
+            evt.preventDefault();
+          }}
+        />
+        <span className={this.props.wrapClassName}>{this.props.children}</span>
+      </span>
+    );
+  }
+}
+
 class ContextData extends React.Component {
   static propTypes = {
     data: PropTypes.any,
@@ -84,30 +119,8 @@ class ContextData extends React.Component {
   };
 
   renderValue = value => {
-    function toggle(evt) {
-      $(evt.target)
-        .parent()
-        .toggleClass('val-toggle-open');
-      evt.preventDefault();
-    }
-
     const {preserveQuotes} = this.props;
 
-    function makeToggle(highUp, childCount, children) {
-      if (childCount === 0) {
-        return null;
-      }
-      if (highUp) {
-        return children;
-      }
-      return (
-        <span className="val-toggle">
-          <a href="#" className="val-toggle-link" onClick={toggle} />
-          {children}
-        </span>
-      );
-    }
-
     /*eslint no-shadow:0*/
     function walk(value, depth) {
       let i = 0;
@@ -157,11 +170,9 @@ class ContextData extends React.Component {
         return (
           <span className="val-array">
             <span className="val-array-marker">{'['}</span>
-            {makeToggle(
-              depth <= 2,
-              children.length,
-              <span className="val-array-items">{children}</span>
-            )}
+            <ToggleWrap highUp={depth <= 2} wrapClassName="val-array-items">
+              {children}
+            </ToggleWrap>
             <span className="val-array-marker">{']'}</span>
           </span>
         );
@@ -190,11 +201,9 @@ class ContextData extends React.Component {
         return (
           <span className="val-dict">
             <span className="val-dict-marker">{'{'}</span>
-            {makeToggle(
-              depth <= 1,
-              children.length,
-              <span className="val-dict-items">{children}</span>
-            )}
+            <ToggleWrap highUp={depth <= 1} wrapClassName="val-dict-items">
+              {children}
+            </ToggleWrap>
             <span className="val-dict-marker">{'}'}</span>
           </span>
         );
