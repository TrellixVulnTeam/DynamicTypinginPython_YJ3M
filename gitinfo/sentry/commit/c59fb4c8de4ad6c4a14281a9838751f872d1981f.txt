commit c59fb4c8de4ad6c4a14281a9838751f872d1981f
Author: Billy Vong <billyvg@users.noreply.github.com>
Date:   Fri Mar 9 04:14:14 2018 +0900

    feat(ui): Refresh Project Alerts + Rules UI (#7360)
    
    * fix zindex of sentry user report dialog in new settings
    * redirect to rules list after saving
    * feat(api): Update digests delay to support sending min/max independently
    * add validation for min delay
    * add tests + fix for when one digest is set and opposite does not exist

diff --git a/src/sentry/api/endpoints/project_details.py b/src/sentry/api/endpoints/project_details.py
index 9e752b72ea..4e4372df4f 100644
--- a/src/sentry/api/endpoints/project_details.py
+++ b/src/sentry/api/endpoints/project_details.py
@@ -97,8 +97,23 @@ class ProjectAdminSerializer(ProjectMemberSerializer):
     resolveAge = serializers.IntegerField(required=False)
     platform = serializers.CharField(required=False)
 
+    def validate_digestsMinDelay(self, attrs, source):
+        max_delay = attrs['digestsMaxDelay'] if 'digestsMaxDelay' in attrs else self.context['project'].get_option(
+            'digests:mail:maximum_delay')
+
+        # allow min to be set if max is not set
+        if max_delay is not None and attrs[source] > max_delay:
+            raise serializers.ValidationError(
+                'The minimum delay on digests must be lower than the maximum.'
+            )
+        return attrs
+
     def validate_digestsMaxDelay(self, attrs, source):
-        if attrs[source] < attrs['digestsMinDelay']:
+        min_delay = attrs['digestsMinDelay'] if 'digestsMinDelay' in attrs else self.context['project'].get_option(
+            'digests:mail:minimum_delay')
+
+        # allows max to be set if min is not set
+        if min_delay is not None and attrs[source] < min_delay:
             raise serializers.ValidationError(
                 'The maximum delay on digests must be higher than the minimum.'
             )
diff --git a/src/sentry/static/sentry/app/data/forms/projectAlerts.jsx b/src/sentry/static/sentry/app/data/forms/projectAlerts.jsx
new file mode 100644
index 0000000000..399a9075f4
--- /dev/null
+++ b/src/sentry/static/sentry/app/data/forms/projectAlerts.jsx
@@ -0,0 +1,60 @@
+import {t, tn} from '../../locale';
+
+// Export route to make these forms searchable by label/help
+export const route = '/settings/organization/:orgId/project/:projectId/alerts/';
+
+const formatMinutes = value => {
+  value = value / 60;
+  return tn('%d minute', '%d minutes', value);
+};
+
+const formGroups = [
+  {
+    // Form "section"/"panel"
+    title: t('Email Settings'),
+    fields: [
+      {
+        name: 'subjectTemplate',
+        type: 'string',
+
+        // additional data/props that is related to rendering of form field rather than data
+        label: t('Subject Template'),
+        placeholder: 'e.g. [${tag:environment}]',
+        help: t(
+          'The email subject to use (excluding the prefix) for individual alerts. Usable variables include: $project, $title, $shortID, and ${tag:key}, such as ${tag:environment} or ${tag:release}.'
+        ),
+      },
+    ],
+  },
+
+  {
+    // Form "section"/"panel"
+    title: t('Digests'),
+    fields: [
+      {
+        name: 'digestsMinDelay',
+        type: 'range',
+        min: 60,
+        max: 3600,
+        step: 60,
+        defaultValue: 300,
+        label: t('Minimum delivery interval'),
+        help: t('Notifications will be delivered at most this often.'),
+        formatLabel: formatMinutes,
+      },
+      {
+        name: 'digestsMaxDelay',
+        type: 'range',
+        min: 60,
+        max: 3600,
+        step: 60,
+        defaultValue: 300,
+        label: t('Maximum delivery interval'),
+        help: t('Notifications will be delivered at least this often.'),
+        formatLabel: formatMinutes,
+      },
+    ],
+  },
+];
+
+export default formGroups;
diff --git a/src/sentry/static/sentry/app/views/projectAlertRules.jsx b/src/sentry/static/sentry/app/views/projectAlertRules.jsx
index e1a91baf53..014d2cfa92 100644
--- a/src/sentry/static/sentry/app/views/projectAlertRules.jsx
+++ b/src/sentry/static/sentry/app/views/projectAlertRules.jsx
@@ -1,7 +1,8 @@
+import {Link} from 'react-router';
 import PropTypes from 'prop-types';
 import React from 'react';
-import {Link} from 'react-router';
 import createReactClass from 'create-react-class';
+import styled from 'react-emotion';
 
 import {t} from '../locale';
 import ApiMixin from '../mixins/apiMixin';
@@ -12,7 +13,30 @@ import IndicatorStore from '../stores/indicatorStore';
 import ListLink from '../components/listLink';
 import LoadingError from '../components/loadingError';
 import LoadingIndicator from '../components/loadingIndicator';
+import Panel from './settings/components/panel';
+import PanelBody from './settings/components/panelBody';
+import PanelHeader from './settings/components/panelHeader';
 import SettingsPageHeader from './settings/components/settingsPageHeader';
+import recreateRoute from '../utils/recreateRoute';
+
+const TextColorLink = styled(Link)`
+  color: ${p => p.theme.gray3};
+`;
+
+const RuleDescriptionRow = styled.div`
+  display: flex;
+`;
+const RuleDescriptionColumn = styled.div`
+  flex: 1;
+  padding: ${p => p.theme.grid * 2}px;
+  height: 100%;
+`;
+const Condition = styled.div`
+  display: flex;
+  flex-direction: column;
+  justify-content: space-between;
+  height: 100%;
+`;
 
 const RuleRow = createReactClass({
   displayName: 'RuleRow',
@@ -56,12 +80,20 @@ const RuleRow = createReactClass({
   },
 
   render() {
-    let {orgId, projectId, data} = this.props;
-    let editLink = `/${orgId}/${projectId}/settings/alerts/rules/${data.id}/`;
+    let {data} = this.props;
+    let editLink = recreateRoute(`${data.id}/`, this.props);
+
     return (
-      <div className="box">
-        <div className="box-header">
-          <div className="pull-right">
+      <Panel>
+        <PanelHeader
+          css={{paddingTop: 5, paddingBottom: 5}}
+          isFlex
+          align="center"
+          justify="space-between"
+        >
+          <TextColorLink to={editLink}>{data.name}</TextColorLink>
+
+          <div>
             <Button style={{marginRight: 5}} size="small" to={editLink}>
               {t('Edit Rule')}
             </Button>
@@ -75,15 +107,13 @@ const RuleRow = createReactClass({
               </Button>
             </Confirm>
           </div>
-          <h3>
-            <Link to={editLink}>{data.name}</Link>
-          </h3>
-        </div>
-        <div className="box-content with-padding">
-          <div className="row">
-            <div className="col-md-6">
+        </PanelHeader>
+
+        <PanelBody>
+          <RuleDescriptionRow>
+            <RuleDescriptionColumn>
               {data.conditions.length !== 0 && (
-                <div>
+                <Condition>
                   <h6>
                     When <strong>{data.actionMatch}</strong> of these conditions are met:
                   </h6>
@@ -98,12 +128,12 @@ const RuleRow = createReactClass({
                       })}
                     </tbody>
                   </table>
-                </div>
+                </Condition>
               )}
-            </div>
-            <div className="col-md-6">
+            </RuleDescriptionColumn>
+            <RuleDescriptionColumn>
               {data.actions.length !== 0 && (
-                <div>
+                <Condition>
                   <h6>
                     Take these actions at most{' '}
                     <strong>
@@ -122,18 +152,21 @@ const RuleRow = createReactClass({
                       })}
                     </tbody>
                   </table>
-                </div>
+                </Condition>
               )}
-            </div>
-          </div>
-        </div>
-      </div>
+            </RuleDescriptionColumn>
+          </RuleDescriptionRow>
+        </PanelBody>
+      </Panel>
     );
   },
 });
 
 const ProjectAlertRules = createReactClass({
   displayName: 'ProjectAlertRules',
+  propTypes: {
+    routes: PropTypes.array.isRequired,
+  },
   mixins: [ApiMixin],
 
   getInitialState() {
@@ -212,6 +245,8 @@ const ProjectAlertRules = createReactClass({
               data={rule}
               orgId={orgId}
               projectId={projectId}
+              params={this.props.params}
+              routes={this.props.routes}
               onDelete={this.onDeleteRule.bind(this, rule)}
             />
           );
@@ -221,14 +256,13 @@ const ProjectAlertRules = createReactClass({
   },
 
   render() {
-    let {orgId, projectId} = this.props.params;
     return (
       <div>
         <SettingsPageHeader
           title={t('Alerts')}
           action={
             <Button
-              to={`/${orgId}/${projectId}/settings/alerts/rules/new/`}
+              to={recreateRoute('new/', this.props)}
               priority="primary"
               size="small"
               className="pull-right"
@@ -239,12 +273,13 @@ const ProjectAlertRules = createReactClass({
           }
           tabs={
             <ul className="nav nav-tabs" style={{borderBottom: '1px solid #ddd'}}>
-              <ListLink to={`/${orgId}/${projectId}/settings/alerts/`} index={true}>
+              <ListLink
+                to={recreateRoute('alerts/', {...this.props, stepBack: -1})}
+                index={true}
+              >
                 {t('Settings')}
               </ListLink>
-              <ListLink to={`/${orgId}/${projectId}/settings/alerts/rules/`}>
-                {t('Rules')}
-              </ListLink>
+              <ListLink to={recreateRoute('', this.props)}>{t('Rules')}</ListLink>
             </ul>
           }
         />
diff --git a/src/sentry/static/sentry/app/views/projectAlertSettings.jsx b/src/sentry/static/sentry/app/views/projectAlertSettings.jsx
index 41ec65db72..bc60b4fae1 100644
--- a/src/sentry/static/sentry/app/views/projectAlertSettings.jsx
+++ b/src/sentry/static/sentry/app/views/projectAlertSettings.jsx
@@ -1,118 +1,18 @@
-import PropTypes from 'prop-types';
 import React from 'react';
 
-import {ApiForm, RangeField, TextField} from '../components/forms';
 import {t} from '../locale';
 import AlertLink from '../components/alertLink';
 import AsyncView from './asyncView';
 import Button from '../components/buttons/button';
+import Form from './settings/components/forms/form';
+import JsonForm from './settings/components/forms/jsonForm';
 import ListLink from '../components/listLink';
-import Panel from './settings/components/panel';
 import PanelAlert from './settings/components/panelAlert';
-import PanelBody from './settings/components/panelBody';
-import PanelHeader from './settings/components/panelHeader';
 import PluginList from '../components/pluginList';
+import SentryTypes from '../proptypes';
 import SettingsPageHeader from './settings/components/settingsPageHeader';
-
-class DigestSettings extends React.Component {
-  static propTypes = {
-    orgId: PropTypes.string.isRequired,
-    projectId: PropTypes.string.isRequired,
-    initialData: PropTypes.object.isRequired,
-    onSave: PropTypes.func.isRequired,
-  };
-
-  render() {
-    let {orgId, projectId, initialData, onSave} = this.props;
-    return (
-      <Panel>
-        <PanelHeader>{t('Digests')}</PanelHeader>
-        <PanelBody px={2} pt={2} flex>
-          <PanelAlert type="info" icon="icon-circle-exclamation">
-            {t(
-              'Sentry will automatically digest alerts sent ' +
-                'by some services to avoid flooding your inbox ' +
-                'with individual issue notifications. To control ' +
-                'how frequently notifications are delivered, use ' +
-                'the sliders below.'
-            )}
-          </PanelAlert>
-          <ApiForm
-            onSubmitSuccess={onSave}
-            apiMethod="PUT"
-            apiEndpoint={`/projects/${orgId}/${projectId}/`}
-            initialData={initialData}
-            requireChanges={true}
-          >
-            <div className="row">
-              <div className="col-md-6">
-                <RangeField
-                  min={60}
-                  max={3600}
-                  step={60}
-                  defaultValue={300}
-                  label={t('Minimum delivery interval')}
-                  help={t('Notifications will be delivered at most this often.')}
-                  name="digestsMinDelay"
-                  formatLabel={RangeField.formatMinutes}
-                />
-              </div>
-              <div className="col-md-6">
-                <RangeField
-                  min={60}
-                  max={3600}
-                  step={60}
-                  defaultValue={3600}
-                  label={t('Maximum delivery interval')}
-                  help={t('Notifications will be delivered at least this often.')}
-                  name="digestsMaxDelay"
-                  formatLabel={RangeField.formatMinutes}
-                />
-              </div>
-            </div>
-          </ApiForm>
-        </PanelBody>
-      </Panel>
-    );
-  }
-}
-
-class GeneralSettings extends React.Component {
-  static propTypes = {
-    orgId: PropTypes.string.isRequired,
-    projectId: PropTypes.string.isRequired,
-    initialData: PropTypes.object,
-    onSave: PropTypes.func.isRequired,
-  };
-
-  render() {
-    let {orgId, projectId, initialData, onSave} = this.props;
-    return (
-      <Panel>
-        <PanelHeader>{t('Email Settings')}</PanelHeader>
-
-        <PanelBody px={2} pt={2} flex>
-          <ApiForm
-            onSubmitSuccess={onSave}
-            apiMethod="PUT"
-            apiEndpoint={`/projects/${orgId}/${projectId}/`}
-            initialData={initialData}
-            requireChanges={true}
-          >
-            <TextField
-              name="subjectTemplate"
-              label={t('Subject template')}
-              required={false}
-              help={t(
-                'The email subject to use (excluding the prefix) for individual alerts. Usable variables include: $project, $title, $shortID, and ${tag:key}, such as ${tag:environment} or ${tag:release}.'
-              )}
-            />
-          </ApiForm>
-        </PanelBody>
-      </Panel>
-    );
-  }
-}
+import alertsFormGroups from '../data/forms/projectAlerts';
+import recreateRoute from '../utils/recreateRoute';
 
 export default class ProjectAlertSettings extends AsyncView {
   static propTypes = {
@@ -120,8 +20,8 @@ export default class ProjectAlertSettings extends AsyncView {
     // these are not declared as required of issues with cloned elements
     // not initially defining them (though they are bound before) ever
     // rendered
-    organization: PropTypes.object,
-    project: PropTypes.object,
+    organization: SentryTypes.Organization,
+    project: SentryTypes.Project,
   };
 
   getEndpoints() {
@@ -132,27 +32,9 @@ export default class ProjectAlertSettings extends AsyncView {
     ];
   }
 
-  onDigestsChange = data => {
-    // TODO(dcramer): propagate this in a more correct way
-    this.setState({
-      project: {
-        ...this.state.project,
-        ...data,
-      },
-    });
-  };
-
-  onGeneralChange = data => {
-    // TODO(dcramer): propagate this in a more correct way
-    this.setState({
-      project: {
-        ...this.state.project,
-        ...data,
-      },
-    });
-  };
+  handleSaveSuccess = () => {};
 
-  onEnablePlugin = plugin => {
+  handleEnablePlugin = plugin => {
     this.setState({
       pluginList: this.state.pluginList.map(p => {
         if (p.id !== plugin.id) return p;
@@ -164,7 +46,7 @@ export default class ProjectAlertSettings extends AsyncView {
     });
   };
 
-  onDisablePlugin = plugin => {
+  handleDisablePlugin = plugin => {
     this.setState({
       pluginList: this.state.pluginList.map(p => {
         if (p.id !== plugin.id) return p;
@@ -183,13 +65,14 @@ export default class ProjectAlertSettings extends AsyncView {
   renderBody() {
     let {orgId, projectId} = this.props.params;
     let {organization} = this.props;
+
     return (
       <div>
         <SettingsPageHeader
           title={t('Alerts')}
           action={
             <Button
-              to={`/${orgId}/${projectId}/settings/alerts/rules/new/`}
+              to={recreateRoute('rules/new/', this.props)}
               priority="primary"
               size="small"
               className="pull-right"
@@ -200,40 +83,52 @@ export default class ProjectAlertSettings extends AsyncView {
           }
           tabs={
             <ul className="nav nav-tabs" style={{borderBottom: '1px solid #ddd'}}>
-              <ListLink to={`/${orgId}/${projectId}/settings/alerts/`} index={true}>
+              <ListLink to={recreateRoute('', this.props)} index={true}>
                 {t('Settings')}
               </ListLink>
-              <ListLink to={`/${orgId}/${projectId}/settings/alerts/rules/`}>
-                {t('Rules')}
-              </ListLink>
+              <ListLink to={recreateRoute('rules/', this.props)}>{t('Rules')}</ListLink>
             </ul>
           }
         />
-        {/* todo(ckj): change 'href' to 'to' when new settings is launched */}
+        {/* TODO(ckj): change 'href' to 'to' when new settings is launched #NEW-SETTINGS */}
         <AlertLink href={'/account/settings/notifications/'} icon="icon-mail">
           {t(
             'Looking to fine-tune your personal notification preferences? Visit your Account Settings'
           )}
         </AlertLink>
 
-        <GeneralSettings
-          orgId={orgId}
-          projectId={projectId}
+        <Form
+          saveOnBlur
+          allowUndo
           initialData={{
             subjectTemplate: this.state.project.subjectTemplate,
-          }}
-          onSave={this.onGeneralChange}
-        />
-
-        <DigestSettings
-          orgId={orgId}
-          projectId={projectId}
-          initialData={{
             digestsMinDelay: this.state.project.digestsMinDelay,
             digestsMaxDelay: this.state.project.digestsMaxDelay,
           }}
-          onSave={this.onDigestsChange}
-        />
+          apiMethod="PUT"
+          apiEndpoint={`/projects/${orgId}/${projectId}/`}
+        >
+          <JsonForm
+            forms={alertsFormGroups}
+            renderBodyStart={({title}) => {
+              if (title === 'Digests') {
+                return (
+                  <PanelAlert m={0} mb={0} type="info" icon="icon-circle-exclamation">
+                    {t(
+                      'Sentry will automatically digest alerts sent ' +
+                        'by some services to avoid flooding your inbox ' +
+                        'with individual issue notifications. To control ' +
+                        'how frequently notifications are delivered, use ' +
+                        'the sliders below.'
+                    )}
+                  </PanelAlert>
+                );
+              }
+
+              return null;
+            }}
+          />
+        </Form>
 
         <PluginList
           organization={organization}
@@ -241,8 +136,8 @@ export default class ProjectAlertSettings extends AsyncView {
           pluginList={this.state.pluginList.filter(
             p => p.type === 'notification' && p.hasConfiguration
           )}
-          onEnablePlugin={this.onEnablePlugin}
-          onDisablePlugin={this.onDisablePlugin}
+          onEnablePlugin={this.handleEnablePlugin}
+          onDisablePlugin={this.handleDisablePlugin}
         />
       </div>
     );
diff --git a/src/sentry/static/sentry/app/views/ruleEditor/index.jsx b/src/sentry/static/sentry/app/views/ruleEditor/index.jsx
index 42f23b04d1..50dac597d5 100644
--- a/src/sentry/static/sentry/app/views/ruleEditor/index.jsx
+++ b/src/sentry/static/sentry/app/views/ruleEditor/index.jsx
@@ -1,23 +1,25 @@
+import $ from 'jquery';
+import {browserHistory} from 'react-router';
 import PropTypes from 'prop-types';
 import React from 'react';
 import createReactClass from 'create-react-class';
-import {browserHistory} from 'react-router';
-import $ from 'jquery';
 import styled from 'react-emotion';
 
-import ApiMixin from '../../mixins/apiMixin';
+import {Select2Field} from '../../components/forms';
 import {
   addErrorMessage,
   addSuccessMessage,
   addMessage,
 } from '../../actionCreators/indicator';
-import {Select2Field} from '../../components/forms';
 import {t} from '../../locale';
+import ApiMixin from '../../mixins/apiMixin';
+import EnvironmentStore from '../../stores/environmentStore';
 import LoadingIndicator from '../../components/loadingIndicator';
+import Panel from '../settings/components/panel';
+import PanelBody from '../settings/components/panelBody';
+import PanelHeader from '../settings/components/panelHeader';
 import RuleNodeList from './ruleNodeList';
 
-import EnvironmentStore from '../../stores/environmentStore';
-
 const FREQUENCY_CHOICES = [
   ['5', t('5 minutes')],
   ['10', t('10 minutes')],
@@ -134,9 +136,8 @@ const RuleEditor = createReactClass({
       success: resp => {
         this.setState({error: null, loading: false, rule: resp});
 
-        browserHistory.replace(
-          `/${org.slug}/${project.slug}/settings/alerts/rules/${resp.id}/`
-        );
+        browserHistory.replace(`/${org.slug}/${project.slug}/settings/alerts/rules/`);
+
         addSuccessMessage(rule.id ? t('Updated alert rule') : t('Created alert rule'));
       },
       error: response => {
@@ -186,11 +187,9 @@ const RuleEditor = createReactClass({
 
     return (
       <form onSubmit={this.onSubmit} ref={node => (this.formNode = node)}>
-        <div className="box rule-detail">
-          <div className="box-header">
-            <h3>{rule.id ? 'Edit Alert Rule' : 'New Alert Rule'}</h3>
-          </div>
-          <div className="box-content with-padding">
+        <Panel className="rule-detail">
+          <PanelHeader>{rule.id ? 'Edit Alert Rule' : 'New Alert Rule'}</PanelHeader>
+          <PanelBody disablePadding={false}>
             {error && (
               <div className="alert alert-block alert-error">
                 <p>
@@ -292,8 +291,8 @@ const RuleEditor = createReactClass({
                 {t('Save Rule')}
               </button>
             </div>
-          </div>
-        </div>
+          </PanelBody>
+        </Panel>
       </form>
     );
   },
diff --git a/src/sentry/static/sentry/app/views/ruleEditor/ruleNode.jsx b/src/sentry/static/sentry/app/views/ruleEditor/ruleNode.jsx
index 4ec2300f1f..b8face19db 100644
--- a/src/sentry/static/sentry/app/views/ruleEditor/ruleNode.jsx
+++ b/src/sentry/static/sentry/app/views/ruleEditor/ruleNode.jsx
@@ -1,6 +1,7 @@
 import PropTypes from 'prop-types';
 import React from 'react';
 import ReactDOM from 'react-dom';
+import styled, {cx} from 'react-emotion';
 import $ from 'jquery';
 
 class RuleNode extends React.Component {
@@ -45,19 +46,63 @@ class RuleNode extends React.Component {
   render() {
     let {data, node} = this.props;
     return (
-      <tr>
-        <td className="rule-form">
+      <RuleNodeRow>
+        <RuleNodeForm>
           <input type="hidden" name="id" value={data.id} />
           <span ref="html" dangerouslySetInnerHTML={{__html: node.html}} />
-        </td>
-        <td className="align-right">
+        </RuleNodeForm>
+        <RuleNodeControls>
           <a onClick={this.props.onDelete}>
             <span className="icon-trash" />
           </a>
-        </td>
-      </tr>
+        </RuleNodeControls>
+      </RuleNodeRow>
     );
   }
 }
 
 export default RuleNode;
+
+const RuleNodeRow = styled.div`
+  display: flex;
+  align-items: center;
+  padding: 0 10px;
+
+  &:nth-child(odd) {
+    background-color: ${p => p.theme.offWhite};
+  }
+`;
+
+// This needs to have class name "rule-form" because of how we serialize rules atm
+const RuleNodeForm = styled(({className, ...props}) => (
+  <div {...props} className={cx(className, 'rule-form')} />
+))`
+  display: flex;
+  flex: 1;
+  margin: 10px 0;
+
+  .select2-container {
+    margin: 0 6px;
+  }
+
+  input[type='text'],
+  input[type='number'] {
+    box-shadow: inset 0 2px 0 rgba(0, 0, 0, 0.04);
+    border: 1px solid #c9c0d1;
+    position: relative;
+    border-radius: 3px;
+    color: #493e54;
+    padding: 1px 8px 2px; // select2 height = 29px
+    line-height: 1.5;
+    margin: 0 6px;
+  }
+  span {
+    display: flex;
+    align-items: center;
+    white-space: nowrap;
+  }
+`;
+
+const RuleNodeControls = styled.div`
+  margin-left: 6px;
+`;
diff --git a/src/sentry/static/sentry/app/views/ruleEditor/ruleNodeList.jsx b/src/sentry/static/sentry/app/views/ruleEditor/ruleNodeList.jsx
index ec4c79fd13..d48bb0ff92 100644
--- a/src/sentry/static/sentry/app/views/ruleEditor/ruleNodeList.jsx
+++ b/src/sentry/static/sentry/app/views/ruleEditor/ruleNodeList.jsx
@@ -1,5 +1,6 @@
 import PropTypes from 'prop-types';
 import React from 'react';
+import styled from 'react-emotion';
 
 import SelectInput from '../../components/selectInput';
 import RuleNode from './ruleNode';
@@ -65,20 +66,18 @@ class RuleNodeList extends React.Component {
   render() {
     return (
       <div className={this.props.className}>
-        <table className="node-list table" style={{marginBottom: '10px'}}>
-          <tbody>
-            {this.state.items.map((item, idx) => {
-              return (
-                <RuleNode
-                  key={item.key_attr}
-                  node={this.getNode(item.id)}
-                  onDelete={this.onDeleteRow.bind(this, idx)}
-                  data={item}
-                />
-              );
-            })}
-          </tbody>
-        </table>
+        <RuleNodes>
+          {this.state.items.map((item, idx) => {
+            return (
+              <RuleNode
+                key={item.key_attr}
+                node={this.getNode(item.id)}
+                onDelete={this.onDeleteRow.bind(this, idx)}
+                data={item}
+              />
+            );
+          })}
+        </RuleNodes>
         <fieldset className="node-selector">
           <SelectInput onChange={this.onAddRow} style={{width: '100%'}}>
             <option key="blank" />
@@ -97,3 +96,9 @@ class RuleNodeList extends React.Component {
 }
 
 export default RuleNodeList;
+
+const RuleNodes = styled.div`
+  display: flex;
+  flex-direction: column;
+  margin-bottom: 10px;
+`;
diff --git a/src/sentry/static/sentry/app/views/settings/components/panelHeader.jsx b/src/sentry/static/sentry/app/views/settings/components/panelHeader.jsx
index 35b8f955fa..e6b7af2a4d 100644
--- a/src/sentry/static/sentry/app/views/settings/components/panelHeader.jsx
+++ b/src/sentry/static/sentry/app/views/settings/components/panelHeader.jsx
@@ -22,23 +22,30 @@ const StyledPanelHeader = styled(({disablePadding, hasButtons, ...props}) => (
   ${getPadding};
 `;
 
-const StyledPanelHeading = styled(({lightText, isFlex, ...props}) => (
+const StyledPanelHeading = styled(({lightText, isFlex, justify, ...props}) => (
   <PanelHeading {...props} />
 ))`
   font-size: inherit;
   text-transform: inherit;
   margin: 0;
+  ${p => (p.justify ? `justify-content: ${p.justify};` : '')};
+  ${p => (p.align ? `align-items: ${p.align};` : '')};
   ${getFlex};
   ${p => (p.lightText ? `color: ${p.theme.gray2}` : '')};
 `;
 
 class PanelHeader extends React.Component {
   render() {
-    let {lightText, isFlex, children, ...props} = this.props;
+    let {lightText, isFlex, justify, align, children, ...props} = this.props;
 
     return (
       <StyledPanelHeader {...props}>
-        <StyledPanelHeading lightText={lightText} isFlex={isFlex}>
+        <StyledPanelHeading
+          lightText={lightText}
+          align={align}
+          justify={justify}
+          isFlex={isFlex}
+        >
           {children}
         </StyledPanelHeading>
       </StyledPanelHeader>
@@ -48,6 +55,8 @@ class PanelHeader extends React.Component {
 
 PanelHeader.propTypes = {
   isFlex: PropTypes.bool,
+  justify: PropTypes.string,
+  align: PropTypes.string,
   disablePadding: PropTypes.bool,
   hasButtons: PropTypes.bool,
   lightText: PropTypes.bool,
diff --git a/src/sentry/static/sentry/less/layout.less b/src/sentry/static/sentry/less/layout.less
index 963b00e998..f3e882c8aa 100644
--- a/src/sentry/static/sentry/less/layout.less
+++ b/src/sentry/static/sentry/less/layout.less
@@ -28,6 +28,9 @@ body {
     .messages-container {
       margin: 0;
     }
+    .sentry-error-embed-wrapper {
+      z-index: 1000;
+    }
   }
 }
 
diff --git a/src/sentry/static/sentry/less/project-settings.less b/src/sentry/static/sentry/less/project-settings.less
index 15a184fbf3..482c961be7 100644
--- a/src/sentry/static/sentry/less/project-settings.less
+++ b/src/sentry/static/sentry/less/project-settings.less
@@ -116,28 +116,6 @@
 * ============================================================================
 */
 
-.rule-form {
-  vertical-align: middle;
-  height: 48px;
-}
-
-.rule-form input[type='text'],
-.rule-form input[type='number'] {
-  .form-control;
-  display: inline-block;
-  padding: 3px 8px;
-  width: auto;
-  vertical-align: middle;
-  position: relative;
-  top: -1px;
-  line-height: 1.5;
-  margin: 0 6px;
-}
-
-.rule-form .select2-container {
-  margin: 0 6px;
-}
-
 .rules-list {
   h6 {
     margin-bottom: 15px;
diff --git a/tests/js/spec/views/__snapshots__/projectAlertRuleDetails.spec.jsx.snap b/tests/js/spec/views/__snapshots__/projectAlertRuleDetails.spec.jsx.snap
index ed0945580e..6d3ef7f03c 100644
--- a/tests/js/spec/views/__snapshots__/projectAlertRuleDetails.spec.jsx.snap
+++ b/tests/js/spec/views/__snapshots__/projectAlertRuleDetails.spec.jsx.snap
@@ -1,7 +1,43 @@
 // Jest Snapshot v1, https://goo.gl/fbAQLP
 
 exports[`ProjectAlertRuleDetails Edit alert rule renders 1`] = `
-.glamor-0 {
+.glamor-20 {
+  background: #fff;
+  border: 1px solid;
+  margin-bottom: NaNpx;
+  position: relative;
+}
+
+.glamor-7 {
+  border-bottom: 1px solid;
+  border-radius: 0 0;
+  text-transform: uppercase;
+  font-size: 13px;
+  line-height: 1;
+  padding: 15px 20px;
+}
+
+.glamor-3 {
+  font-size: inherit;
+  text-transform: inherit;
+  margin: 0;
+}
+
+.glamor-1 {
+  font-size: 12px;
+  font-weight: 600;
+  text-transform: uppercase;
+  margin-bottom: 20px;
+  font-size: inherit;
+  text-transform: inherit;
+  margin: 0;
+}
+
+.glamor-19 {
+  padding: 20px;
+}
+
+.glamor-11 {
   display: -webkit-box;
   display: -webkit-flex;
   display: -ms-flexbox;
@@ -12,6 +48,17 @@ exports[`ProjectAlertRuleDetails Edit alert rule renders 1`] = `
   align-items: center;
 }
 
+.glamor-13 {
+  display: -webkit-box;
+  display: -webkit-flex;
+  display: -ms-flexbox;
+  display: flex;
+  -webkit-flex-direction: column;
+  -ms-flex-direction: column;
+  flex-direction: column;
+  margin-bottom: 10px;
+}
+
 <ProjectAlertRuleDetails
   params={
     Object {
@@ -111,509 +158,529 @@ exports[`ProjectAlertRuleDetails Edit alert rule renders 1`] = `
         <form
           onSubmit={[Function]}
         >
-          <div
-            className="box rule-detail"
+          <Panel
+            className="rule-detail"
           >
             <div
-              className="box-header"
+              className="rule-detail glamor-20 glamor-21"
             >
-              <h3>
-                New Alert Rule
-              </h3>
-            </div>
-            <div
-              className="box-content with-padding"
-            >
-              <h6>
-                Rule name
-                :
-              </h6>
-              <div
-                className="control-group"
-              >
-                <input
-                  className="form-control"
-                  defaultValue=""
-                  onChange={[Function]}
-                  placeholder="My Rule Name"
-                  required={true}
-                  type="text"
-                />
-              </div>
-              <hr />
-              <div
-                className="node-match-selector"
+              <PanelHeader>
+                <StyledPanelHeader>
+                  <Component
+                    className="glamor-7 glamor-8"
+                  >
+                    <div
+                      className="glamor-7 glamor-8"
+                    >
+                      <StyledPanelHeading>
+                        <Component
+                          className="glamor-3 glamor-0"
+                        >
+                          <PanelHeading
+                            className="glamor-3 glamor-0"
+                          >
+                            <div
+                              className="glamor-0 glamor-1 glamor-2"
+                            >
+                              New Alert Rule
+                            </div>
+                          </PanelHeading>
+                        </Component>
+                      </StyledPanelHeading>
+                    </div>
+                  </Component>
+                </StyledPanelHeader>
+              </PanelHeader>
+              <PanelBody
+                direction="column"
+                disablePadding={false}
+                flex={false}
               >
-                <AlertRuleRow>
-                  <h6
-                    className="glamor-0 glamor-1"
+                <div
+                  className="glamor-19"
+                >
+                  <h6>
+                    Rule name
+                    :
+                  </h6>
+                  <div
+                    className="control-group"
                   >
-                    Every time 
-                    <Select2Field
-                      allowClear={false}
-                      allowEmpty={false}
-                      choices={
-                        Array [
-                          Array [
-                            "all",
-                            "all",
-                          ],
-                          Array [
-                            "any",
-                            "any",
-                          ],
-                          Array [
-                            "none",
-                            "none",
-                          ],
-                        ]
-                      }
-                      className=""
-                      disabled={false}
-                      escapeMarkup={true}
-                      hideErrorMessage={false}
-                      key="1"
-                      multiple={false}
-                      name="actionMatch"
+                    <input
+                      className="form-control"
+                      defaultValue=""
                       onChange={[Function]}
-                      placeholder="--"
+                      placeholder="My Rule Name"
                       required={true}
-                      style={
+                      type="text"
+                    />
+                  </div>
+                  <hr />
+                  <div
+                    className="node-match-selector"
+                  >
+                    <AlertRuleRow>
+                      <h6
+                        className="glamor-11 glamor-12"
+                      >
+                        Every time 
+                        <Select2Field
+                          allowClear={false}
+                          allowEmpty={false}
+                          choices={
+                            Array [
+                              Array [
+                                "all",
+                                "all",
+                              ],
+                              Array [
+                                "any",
+                                "any",
+                              ],
+                              Array [
+                                "none",
+                                "none",
+                              ],
+                            ]
+                          }
+                          className=""
+                          disabled={false}
+                          escapeMarkup={true}
+                          hideErrorMessage={false}
+                          key="1"
+                          multiple={false}
+                          name="actionMatch"
+                          onChange={[Function]}
+                          placeholder="--"
+                          required={true}
+                          style={
+                            Object {
+                              "marginBottom": 0,
+                              "marginLeft": 5,
+                              "marginRight": 5,
+                            }
+                          }
+                          value="all"
+                        >
+                          <div
+                            className="control-group required"
+                            style={
+                              Object {
+                                "marginBottom": 0,
+                                "marginLeft": 5,
+                                "marginRight": 5,
+                              }
+                            }
+                          >
+                            <div
+                              className="controls"
+                            >
+                              <select
+                                className="form-control"
+                                disabled={false}
+                                id="id-actionMatch"
+                                multiple={false}
+                                onChange={[Function]}
+                                placeholder="--"
+                                required={true}
+                                value="all"
+                              >
+                                <option
+                                  key="all"
+                                  value="all"
+                                >
+                                  all
+                                </option>
+                                <option
+                                  key="any"
+                                  value="any"
+                                >
+                                  any
+                                </option>
+                                <option
+                                  key="none"
+                                  value="none"
+                                >
+                                  none
+                                </option>
+                              </select>
+                            </div>
+                          </div>
+                        </Select2Field>
+                         of these conditions are met:
+                      </h6>
+                    </AlertRuleRow>
+                  </div>
+                  <RuleNodeList
+                    className="rule-condition-list"
+                    initialItems={Array []}
+                    nodes={
+                      Array [
                         Object {
-                          "marginBottom": 0,
-                          "marginLeft": 5,
-                          "marginRight": 5,
-                        }
-                      }
-                      value="all"
+                          "html": "An event is seen",
+                          "id": "sentry.rules.conditions.1",
+                          "label": "An event is seen",
+                        },
+                      ]
+                    }
+                  >
+                    <div
+                      className="rule-condition-list"
                     >
-                      <div
-                        className="control-group required"
-                        style={
-                          Object {
-                            "marginBottom": 0,
-                            "marginLeft": 5,
-                            "marginRight": 5,
-                          }
-                        }
-                      >
+                      <RuleNodes>
                         <div
-                          className="controls"
+                          className="glamor-13 glamor-14"
+                        />
+                      </RuleNodes>
+                      <fieldset
+                        className="node-selector"
+                      >
+                        <SelectInput
+                          disabled={false}
+                          multiple={false}
+                          onChange={[Function]}
+                          placeholder="Select an option..."
+                          required={false}
+                          style={
+                            Object {
+                              "width": "100%",
+                            }
+                          }
+                          value=""
                         >
                           <select
-                            className="form-control"
                             disabled={false}
-                            id="id-actionMatch"
                             multiple={false}
                             onChange={[Function]}
-                            placeholder="--"
-                            required={true}
-                            value="all"
+                            placeholder="Select an option..."
+                            required={false}
+                            style={
+                              Object {
+                                "width": "100%",
+                              }
+                            }
+                            value=""
                           >
                             <option
-                              key="all"
-                              value="all"
-                            >
-                              all
-                            </option>
-                            <option
-                              key="any"
-                              value="any"
-                            >
-                              any
-                            </option>
+                              key="blank"
+                            />
                             <option
-                              key="none"
-                              value="none"
+                              key="sentry.rules.conditions.1"
+                              value="sentry.rules.conditions.1"
                             >
-                              none
+                              An event is seen
                             </option>
                           </select>
-                        </div>
-                      </div>
-                    </Select2Field>
-                     of these conditions are met:
+                        </SelectInput>
+                      </fieldset>
+                    </div>
+                  </RuleNodeList>
+                  <hr />
+                  <h6>
+                    In this environment
+                    :
                   </h6>
-                </AlertRuleRow>
-              </div>
-              <RuleNodeList
-                className="rule-condition-list"
-                initialItems={Array []}
-                nodes={
-                  Array [
-                    Object {
-                      "html": "An event is seen",
-                      "id": "sentry.rules.conditions.1",
-                      "label": "An event is seen",
-                    },
-                  ]
-                }
-              >
-                <div
-                  className="rule-condition-list"
-                >
-                  <table
-                    className="node-list table"
-                    style={
-                      Object {
-                        "marginBottom": "10px",
-                      }
-                    }
-                  >
-                    <tbody />
-                  </table>
-                  <fieldset
-                    className="node-selector"
-                  >
-                    <SelectInput
-                      disabled={false}
-                      multiple={false}
-                      onChange={[Function]}
-                      placeholder="Select an option..."
-                      required={false}
-                      style={
-                        Object {
-                          "width": "100%",
-                        }
-                      }
-                      value=""
-                    >
-                      <select
-                        disabled={false}
-                        multiple={false}
-                        onChange={[Function]}
-                        placeholder="Select an option..."
-                        required={false}
-                        style={
-                          Object {
-                            "width": "100%",
-                          }
-                        }
-                        value=""
-                      >
-                        <option
-                          key="blank"
-                        />
-                        <option
-                          key="sentry.rules.conditions.1"
-                          value="sentry.rules.conditions.1"
-                        >
-                          An event is seen
-                        </option>
-                      </select>
-                    </SelectInput>
-                  </fieldset>
-                </div>
-              </RuleNodeList>
-              <hr />
-              <h6>
-                In this environment
-                :
-              </h6>
-              <Select2Field
-                allowClear={false}
-                allowEmpty={false}
-                choices={
-                  Array [
-                    Array [
-                      "all",
-                      "All Environments",
-                    ],
-                  ]
-                }
-                className=""
-                disabled={false}
-                escapeMarkup={true}
-                hideErrorMessage={false}
-                multiple={false}
-                name="environment"
-                onChange={[Function]}
-                placeholder="--"
-                required={true}
-                style={
-                  Object {
-                    "marginBottom": 0,
-                    "marginLeft": 5,
-                    "marginRight": 5,
-                  }
-                }
-              >
-                <div
-                  className="control-group required"
-                  style={
-                    Object {
-                      "marginBottom": 0,
-                      "marginLeft": 5,
-                      "marginRight": 5,
+                  <Select2Field
+                    allowClear={false}
+                    allowEmpty={false}
+                    choices={
+                      Array [
+                        Array [
+                          "all",
+                          "All Environments",
+                        ],
+                      ]
                     }
-                  }
-                >
-                  <div
-                    className="controls"
-                  >
-                    <select
-                      className="form-control"
-                      disabled={false}
-                      id="id-environment"
-                      multiple={false}
-                      onChange={[Function]}
-                      placeholder="--"
-                      required={true}
-                      value=""
-                    >
-                      <option
-                        key="all"
-                        value="all"
-                      >
-                        All Environments
-                      </option>
-                    </select>
-                  </div>
-                </div>
-              </Select2Field>
-              <hr />
-              <h6>
-                Take these actions:
-              </h6>
-              <RuleNodeList
-                className="rule-action-list"
-                initialItems={Array []}
-                nodes={
-                  Array [
-                    Object {
-                      "html": "Send a notification for all services",
-                      "id": "sentry.rules.actions.notify1",
-                      "label": "Send a notification for all services",
-                    },
-                  ]
-                }
-              >
-                <div
-                  className="rule-action-list"
-                >
-                  <table
-                    className="node-list table"
+                    className=""
+                    disabled={false}
+                    escapeMarkup={true}
+                    hideErrorMessage={false}
+                    multiple={false}
+                    name="environment"
+                    onChange={[Function]}
+                    placeholder="--"
+                    required={true}
                     style={
                       Object {
-                        "marginBottom": "10px",
+                        "marginBottom": 0,
+                        "marginLeft": 5,
+                        "marginRight": 5,
                       }
                     }
                   >
-                    <tbody />
-                  </table>
-                  <fieldset
-                    className="node-selector"
-                  >
-                    <SelectInput
-                      disabled={false}
-                      multiple={false}
-                      onChange={[Function]}
-                      placeholder="Select an option..."
-                      required={false}
-                      style={
-                        Object {
-                          "width": "100%",
-                        }
-                      }
-                      value=""
-                    >
-                      <select
-                        disabled={false}
-                        multiple={false}
-                        onChange={[Function]}
-                        placeholder="Select an option..."
-                        required={false}
-                        style={
-                          Object {
-                            "width": "100%",
-                          }
-                        }
-                        value=""
-                      >
-                        <option
-                          key="blank"
-                        />
-                        <option
-                          key="sentry.rules.actions.notify1"
-                          value="sentry.rules.actions.notify1"
-                        >
-                          Send a notification for all services
-                        </option>
-                      </select>
-                    </SelectInput>
-                  </fieldset>
-                </div>
-              </RuleNodeList>
-              <hr />
-              <div
-                className="node-frequency-selector"
-              >
-                <AlertRuleRow>
-                  <h6
-                    className="glamor-0 glamor-1"
-                  >
-                    Perform these actions at most once every 
-                    <Select2Field
-                      allowClear={false}
-                      allowEmpty={false}
-                      choices={
-                        Array [
-                          Array [
-                            "5",
-                            "5 minutes",
-                          ],
-                          Array [
-                            "10",
-                            "10 minutes",
-                          ],
-                          Array [
-                            "30",
-                            "30 minutes",
-                          ],
-                          Array [
-                            "60",
-                            "60 minutes",
-                          ],
-                          Array [
-                            "180",
-                            "3 hours",
-                          ],
-                          Array [
-                            "720",
-                            "12 hours",
-                          ],
-                          Array [
-                            "1440",
-                            "24 hours",
-                          ],
-                          Array [
-                            "10080",
-                            "one week",
-                          ],
-                          Array [
-                            "43200",
-                            "30 days",
-                          ],
-                        ]
-                      }
-                      className=""
-                      disabled={false}
-                      escapeMarkup={true}
-                      hideErrorMessage={false}
-                      key="1"
-                      multiple={false}
-                      name="frequency"
-                      onChange={[Function]}
-                      placeholder="--"
-                      required={true}
+                    <div
+                      className="control-group required"
                       style={
                         Object {
                           "marginBottom": 0,
                           "marginLeft": 5,
                           "marginRight": 5,
-                          "width": 140,
                         }
                       }
-                      value={30}
                     >
                       <div
-                        className="control-group required"
-                        style={
-                          Object {
-                            "marginBottom": 0,
-                            "marginLeft": 5,
-                            "marginRight": 5,
-                            "width": 140,
-                          }
-                        }
+                        className="controls"
                       >
+                        <select
+                          className="form-control"
+                          disabled={false}
+                          id="id-environment"
+                          multiple={false}
+                          onChange={[Function]}
+                          placeholder="--"
+                          required={true}
+                          value=""
+                        >
+                          <option
+                            key="all"
+                            value="all"
+                          >
+                            All Environments
+                          </option>
+                        </select>
+                      </div>
+                    </div>
+                  </Select2Field>
+                  <hr />
+                  <h6>
+                    Take these actions:
+                  </h6>
+                  <RuleNodeList
+                    className="rule-action-list"
+                    initialItems={Array []}
+                    nodes={
+                      Array [
+                        Object {
+                          "html": "Send a notification for all services",
+                          "id": "sentry.rules.actions.notify1",
+                          "label": "Send a notification for all services",
+                        },
+                      ]
+                    }
+                  >
+                    <div
+                      className="rule-action-list"
+                    >
+                      <RuleNodes>
                         <div
-                          className="controls"
+                          className="glamor-13 glamor-14"
+                        />
+                      </RuleNodes>
+                      <fieldset
+                        className="node-selector"
+                      >
+                        <SelectInput
+                          disabled={false}
+                          multiple={false}
+                          onChange={[Function]}
+                          placeholder="Select an option..."
+                          required={false}
+                          style={
+                            Object {
+                              "width": "100%",
+                            }
+                          }
+                          value=""
                         >
                           <select
-                            className="form-control"
                             disabled={false}
-                            id="id-frequency"
                             multiple={false}
                             onChange={[Function]}
-                            placeholder="--"
-                            required={true}
-                            value={30}
+                            placeholder="Select an option..."
+                            required={false}
+                            style={
+                              Object {
+                                "width": "100%",
+                              }
+                            }
+                            value=""
                           >
                             <option
-                              key="5"
-                              value="5"
-                            >
-                              5 minutes
-                            </option>
-                            <option
-                              key="10"
-                              value="10"
-                            >
-                              10 minutes
-                            </option>
-                            <option
-                              key="30"
-                              value="30"
-                            >
-                              30 minutes
-                            </option>
-                            <option
-                              key="60"
-                              value="60"
-                            >
-                              60 minutes
-                            </option>
-                            <option
-                              key="180"
-                              value="180"
-                            >
-                              3 hours
-                            </option>
-                            <option
-                              key="720"
-                              value="720"
-                            >
-                              12 hours
-                            </option>
-                            <option
-                              key="1440"
-                              value="1440"
-                            >
-                              24 hours
-                            </option>
+                              key="blank"
+                            />
                             <option
-                              key="10080"
-                              value="10080"
+                              key="sentry.rules.actions.notify1"
+                              value="sentry.rules.actions.notify1"
                             >
-                              one week
-                            </option>
-                            <option
-                              key="43200"
-                              value="43200"
-                            >
-                              30 days
+                              Send a notification for all services
                             </option>
                           </select>
-                        </div>
-                      </div>
-                    </Select2Field>
-                     for an issue.
-                  </h6>
-                </AlertRuleRow>
-              </div>
-              <div
-                className="actions"
-              >
-                <button
-                  className="btn btn-primary btn-lg"
-                  disabled={false}
-                >
-                  Save Rule
-                </button>
-              </div>
+                        </SelectInput>
+                      </fieldset>
+                    </div>
+                  </RuleNodeList>
+                  <hr />
+                  <div
+                    className="node-frequency-selector"
+                  >
+                    <AlertRuleRow>
+                      <h6
+                        className="glamor-11 glamor-12"
+                      >
+                        Perform these actions at most once every 
+                        <Select2Field
+                          allowClear={false}
+                          allowEmpty={false}
+                          choices={
+                            Array [
+                              Array [
+                                "5",
+                                "5 minutes",
+                              ],
+                              Array [
+                                "10",
+                                "10 minutes",
+                              ],
+                              Array [
+                                "30",
+                                "30 minutes",
+                              ],
+                              Array [
+                                "60",
+                                "60 minutes",
+                              ],
+                              Array [
+                                "180",
+                                "3 hours",
+                              ],
+                              Array [
+                                "720",
+                                "12 hours",
+                              ],
+                              Array [
+                                "1440",
+                                "24 hours",
+                              ],
+                              Array [
+                                "10080",
+                                "one week",
+                              ],
+                              Array [
+                                "43200",
+                                "30 days",
+                              ],
+                            ]
+                          }
+                          className=""
+                          disabled={false}
+                          escapeMarkup={true}
+                          hideErrorMessage={false}
+                          key="1"
+                          multiple={false}
+                          name="frequency"
+                          onChange={[Function]}
+                          placeholder="--"
+                          required={true}
+                          style={
+                            Object {
+                              "marginBottom": 0,
+                              "marginLeft": 5,
+                              "marginRight": 5,
+                              "width": 140,
+                            }
+                          }
+                          value={30}
+                        >
+                          <div
+                            className="control-group required"
+                            style={
+                              Object {
+                                "marginBottom": 0,
+                                "marginLeft": 5,
+                                "marginRight": 5,
+                                "width": 140,
+                              }
+                            }
+                          >
+                            <div
+                              className="controls"
+                            >
+                              <select
+                                className="form-control"
+                                disabled={false}
+                                id="id-frequency"
+                                multiple={false}
+                                onChange={[Function]}
+                                placeholder="--"
+                                required={true}
+                                value={30}
+                              >
+                                <option
+                                  key="5"
+                                  value="5"
+                                >
+                                  5 minutes
+                                </option>
+                                <option
+                                  key="10"
+                                  value="10"
+                                >
+                                  10 minutes
+                                </option>
+                                <option
+                                  key="30"
+                                  value="30"
+                                >
+                                  30 minutes
+                                </option>
+                                <option
+                                  key="60"
+                                  value="60"
+                                >
+                                  60 minutes
+                                </option>
+                                <option
+                                  key="180"
+                                  value="180"
+                                >
+                                  3 hours
+                                </option>
+                                <option
+                                  key="720"
+                                  value="720"
+                                >
+                                  12 hours
+                                </option>
+                                <option
+                                  key="1440"
+                                  value="1440"
+                                >
+                                  24 hours
+                                </option>
+                                <option
+                                  key="10080"
+                                  value="10080"
+                                >
+                                  one week
+                                </option>
+                                <option
+                                  key="43200"
+                                  value="43200"
+                                >
+                                  30 days
+                                </option>
+                              </select>
+                            </div>
+                          </div>
+                        </Select2Field>
+                         for an issue.
+                      </h6>
+                    </AlertRuleRow>
+                  </div>
+                  <div
+                    className="actions"
+                  >
+                    <button
+                      className="btn btn-primary btn-lg"
+                      disabled={false}
+                    >
+                      Save Rule
+                    </button>
+                  </div>
+                </div>
+              </PanelBody>
             </div>
-          </div>
+          </Panel>
         </form>
       </RuleEditor>
     </DocumentTitle>
@@ -622,7 +689,43 @@ exports[`ProjectAlertRuleDetails Edit alert rule renders 1`] = `
 `;
 
 exports[`ProjectAlertRuleDetails New alert rule renders 1`] = `
-.glamor-0 {
+.glamor-20 {
+  background: #fff;
+  border: 1px solid;
+  margin-bottom: NaNpx;
+  position: relative;
+}
+
+.glamor-7 {
+  border-bottom: 1px solid;
+  border-radius: 0 0;
+  text-transform: uppercase;
+  font-size: 13px;
+  line-height: 1;
+  padding: 15px 20px;
+}
+
+.glamor-3 {
+  font-size: inherit;
+  text-transform: inherit;
+  margin: 0;
+}
+
+.glamor-1 {
+  font-size: 12px;
+  font-weight: 600;
+  text-transform: uppercase;
+  margin-bottom: 20px;
+  font-size: inherit;
+  text-transform: inherit;
+  margin: 0;
+}
+
+.glamor-19 {
+  padding: 20px;
+}
+
+.glamor-11 {
   display: -webkit-box;
   display: -webkit-flex;
   display: -ms-flexbox;
@@ -633,6 +736,17 @@ exports[`ProjectAlertRuleDetails New alert rule renders 1`] = `
   align-items: center;
 }
 
+.glamor-13 {
+  display: -webkit-box;
+  display: -webkit-flex;
+  display: -ms-flexbox;
+  display: flex;
+  -webkit-flex-direction: column;
+  -ms-flex-direction: column;
+  flex-direction: column;
+  margin-bottom: 10px;
+}
+
 <ProjectAlertRuleDetails
   params={
     Object {
@@ -732,509 +846,529 @@ exports[`ProjectAlertRuleDetails New alert rule renders 1`] = `
         <form
           onSubmit={[Function]}
         >
-          <div
-            className="box rule-detail"
+          <Panel
+            className="rule-detail"
           >
             <div
-              className="box-header"
+              className="rule-detail glamor-20 glamor-21"
             >
-              <h3>
-                New Alert Rule
-              </h3>
-            </div>
-            <div
-              className="box-content with-padding"
-            >
-              <h6>
-                Rule name
-                :
-              </h6>
-              <div
-                className="control-group"
-              >
-                <input
-                  className="form-control"
-                  defaultValue=""
-                  onChange={[Function]}
-                  placeholder="My Rule Name"
-                  required={true}
-                  type="text"
-                />
-              </div>
-              <hr />
-              <div
-                className="node-match-selector"
+              <PanelHeader>
+                <StyledPanelHeader>
+                  <Component
+                    className="glamor-7 glamor-8"
+                  >
+                    <div
+                      className="glamor-7 glamor-8"
+                    >
+                      <StyledPanelHeading>
+                        <Component
+                          className="glamor-3 glamor-0"
+                        >
+                          <PanelHeading
+                            className="glamor-3 glamor-0"
+                          >
+                            <div
+                              className="glamor-0 glamor-1 glamor-2"
+                            >
+                              New Alert Rule
+                            </div>
+                          </PanelHeading>
+                        </Component>
+                      </StyledPanelHeading>
+                    </div>
+                  </Component>
+                </StyledPanelHeader>
+              </PanelHeader>
+              <PanelBody
+                direction="column"
+                disablePadding={false}
+                flex={false}
               >
-                <AlertRuleRow>
-                  <h6
-                    className="glamor-0 glamor-1"
+                <div
+                  className="glamor-19"
+                >
+                  <h6>
+                    Rule name
+                    :
+                  </h6>
+                  <div
+                    className="control-group"
                   >
-                    Every time 
-                    <Select2Field
-                      allowClear={false}
-                      allowEmpty={false}
-                      choices={
-                        Array [
-                          Array [
-                            "all",
-                            "all",
-                          ],
-                          Array [
-                            "any",
-                            "any",
-                          ],
-                          Array [
-                            "none",
-                            "none",
-                          ],
-                        ]
-                      }
-                      className=""
-                      disabled={false}
-                      escapeMarkup={true}
-                      hideErrorMessage={false}
-                      key="1"
-                      multiple={false}
-                      name="actionMatch"
+                    <input
+                      className="form-control"
+                      defaultValue=""
                       onChange={[Function]}
-                      placeholder="--"
+                      placeholder="My Rule Name"
                       required={true}
-                      style={
+                      type="text"
+                    />
+                  </div>
+                  <hr />
+                  <div
+                    className="node-match-selector"
+                  >
+                    <AlertRuleRow>
+                      <h6
+                        className="glamor-11 glamor-12"
+                      >
+                        Every time 
+                        <Select2Field
+                          allowClear={false}
+                          allowEmpty={false}
+                          choices={
+                            Array [
+                              Array [
+                                "all",
+                                "all",
+                              ],
+                              Array [
+                                "any",
+                                "any",
+                              ],
+                              Array [
+                                "none",
+                                "none",
+                              ],
+                            ]
+                          }
+                          className=""
+                          disabled={false}
+                          escapeMarkup={true}
+                          hideErrorMessage={false}
+                          key="1"
+                          multiple={false}
+                          name="actionMatch"
+                          onChange={[Function]}
+                          placeholder="--"
+                          required={true}
+                          style={
+                            Object {
+                              "marginBottom": 0,
+                              "marginLeft": 5,
+                              "marginRight": 5,
+                            }
+                          }
+                          value="all"
+                        >
+                          <div
+                            className="control-group required"
+                            style={
+                              Object {
+                                "marginBottom": 0,
+                                "marginLeft": 5,
+                                "marginRight": 5,
+                              }
+                            }
+                          >
+                            <div
+                              className="controls"
+                            >
+                              <select
+                                className="form-control"
+                                disabled={false}
+                                id="id-actionMatch"
+                                multiple={false}
+                                onChange={[Function]}
+                                placeholder="--"
+                                required={true}
+                                value="all"
+                              >
+                                <option
+                                  key="all"
+                                  value="all"
+                                >
+                                  all
+                                </option>
+                                <option
+                                  key="any"
+                                  value="any"
+                                >
+                                  any
+                                </option>
+                                <option
+                                  key="none"
+                                  value="none"
+                                >
+                                  none
+                                </option>
+                              </select>
+                            </div>
+                          </div>
+                        </Select2Field>
+                         of these conditions are met:
+                      </h6>
+                    </AlertRuleRow>
+                  </div>
+                  <RuleNodeList
+                    className="rule-condition-list"
+                    initialItems={Array []}
+                    nodes={
+                      Array [
                         Object {
-                          "marginBottom": 0,
-                          "marginLeft": 5,
-                          "marginRight": 5,
-                        }
-                      }
-                      value="all"
+                          "html": "An event is seen",
+                          "id": "sentry.rules.conditions.1",
+                          "label": "An event is seen",
+                        },
+                      ]
+                    }
+                  >
+                    <div
+                      className="rule-condition-list"
                     >
-                      <div
-                        className="control-group required"
-                        style={
-                          Object {
-                            "marginBottom": 0,
-                            "marginLeft": 5,
-                            "marginRight": 5,
-                          }
-                        }
-                      >
+                      <RuleNodes>
                         <div
-                          className="controls"
+                          className="glamor-13 glamor-14"
+                        />
+                      </RuleNodes>
+                      <fieldset
+                        className="node-selector"
+                      >
+                        <SelectInput
+                          disabled={false}
+                          multiple={false}
+                          onChange={[Function]}
+                          placeholder="Select an option..."
+                          required={false}
+                          style={
+                            Object {
+                              "width": "100%",
+                            }
+                          }
+                          value=""
                         >
                           <select
-                            className="form-control"
                             disabled={false}
-                            id="id-actionMatch"
                             multiple={false}
                             onChange={[Function]}
-                            placeholder="--"
-                            required={true}
-                            value="all"
+                            placeholder="Select an option..."
+                            required={false}
+                            style={
+                              Object {
+                                "width": "100%",
+                              }
+                            }
+                            value=""
                           >
                             <option
-                              key="all"
-                              value="all"
-                            >
-                              all
-                            </option>
-                            <option
-                              key="any"
-                              value="any"
-                            >
-                              any
-                            </option>
+                              key="blank"
+                            />
                             <option
-                              key="none"
-                              value="none"
+                              key="sentry.rules.conditions.1"
+                              value="sentry.rules.conditions.1"
                             >
-                              none
+                              An event is seen
                             </option>
                           </select>
-                        </div>
-                      </div>
-                    </Select2Field>
-                     of these conditions are met:
+                        </SelectInput>
+                      </fieldset>
+                    </div>
+                  </RuleNodeList>
+                  <hr />
+                  <h6>
+                    In this environment
+                    :
                   </h6>
-                </AlertRuleRow>
-              </div>
-              <RuleNodeList
-                className="rule-condition-list"
-                initialItems={Array []}
-                nodes={
-                  Array [
-                    Object {
-                      "html": "An event is seen",
-                      "id": "sentry.rules.conditions.1",
-                      "label": "An event is seen",
-                    },
-                  ]
-                }
-              >
-                <div
-                  className="rule-condition-list"
-                >
-                  <table
-                    className="node-list table"
-                    style={
-                      Object {
-                        "marginBottom": "10px",
-                      }
-                    }
-                  >
-                    <tbody />
-                  </table>
-                  <fieldset
-                    className="node-selector"
-                  >
-                    <SelectInput
-                      disabled={false}
-                      multiple={false}
-                      onChange={[Function]}
-                      placeholder="Select an option..."
-                      required={false}
-                      style={
-                        Object {
-                          "width": "100%",
-                        }
-                      }
-                      value=""
-                    >
-                      <select
-                        disabled={false}
-                        multiple={false}
-                        onChange={[Function]}
-                        placeholder="Select an option..."
-                        required={false}
-                        style={
-                          Object {
-                            "width": "100%",
-                          }
-                        }
-                        value=""
-                      >
-                        <option
-                          key="blank"
-                        />
-                        <option
-                          key="sentry.rules.conditions.1"
-                          value="sentry.rules.conditions.1"
-                        >
-                          An event is seen
-                        </option>
-                      </select>
-                    </SelectInput>
-                  </fieldset>
-                </div>
-              </RuleNodeList>
-              <hr />
-              <h6>
-                In this environment
-                :
-              </h6>
-              <Select2Field
-                allowClear={false}
-                allowEmpty={false}
-                choices={
-                  Array [
-                    Array [
-                      "all",
-                      "All Environments",
-                    ],
-                  ]
-                }
-                className=""
-                disabled={false}
-                escapeMarkup={true}
-                hideErrorMessage={false}
-                multiple={false}
-                name="environment"
-                onChange={[Function]}
-                placeholder="--"
-                required={true}
-                style={
-                  Object {
-                    "marginBottom": 0,
-                    "marginLeft": 5,
-                    "marginRight": 5,
-                  }
-                }
-              >
-                <div
-                  className="control-group required"
-                  style={
-                    Object {
-                      "marginBottom": 0,
-                      "marginLeft": 5,
-                      "marginRight": 5,
+                  <Select2Field
+                    allowClear={false}
+                    allowEmpty={false}
+                    choices={
+                      Array [
+                        Array [
+                          "all",
+                          "All Environments",
+                        ],
+                      ]
                     }
-                  }
-                >
-                  <div
-                    className="controls"
-                  >
-                    <select
-                      className="form-control"
-                      disabled={false}
-                      id="id-environment"
-                      multiple={false}
-                      onChange={[Function]}
-                      placeholder="--"
-                      required={true}
-                      value=""
-                    >
-                      <option
-                        key="all"
-                        value="all"
-                      >
-                        All Environments
-                      </option>
-                    </select>
-                  </div>
-                </div>
-              </Select2Field>
-              <hr />
-              <h6>
-                Take these actions:
-              </h6>
-              <RuleNodeList
-                className="rule-action-list"
-                initialItems={Array []}
-                nodes={
-                  Array [
-                    Object {
-                      "html": "Send a notification for all services",
-                      "id": "sentry.rules.actions.notify1",
-                      "label": "Send a notification for all services",
-                    },
-                  ]
-                }
-              >
-                <div
-                  className="rule-action-list"
-                >
-                  <table
-                    className="node-list table"
+                    className=""
+                    disabled={false}
+                    escapeMarkup={true}
+                    hideErrorMessage={false}
+                    multiple={false}
+                    name="environment"
+                    onChange={[Function]}
+                    placeholder="--"
+                    required={true}
                     style={
                       Object {
-                        "marginBottom": "10px",
+                        "marginBottom": 0,
+                        "marginLeft": 5,
+                        "marginRight": 5,
                       }
                     }
                   >
-                    <tbody />
-                  </table>
-                  <fieldset
-                    className="node-selector"
-                  >
-                    <SelectInput
-                      disabled={false}
-                      multiple={false}
-                      onChange={[Function]}
-                      placeholder="Select an option..."
-                      required={false}
-                      style={
-                        Object {
-                          "width": "100%",
-                        }
-                      }
-                      value=""
-                    >
-                      <select
-                        disabled={false}
-                        multiple={false}
-                        onChange={[Function]}
-                        placeholder="Select an option..."
-                        required={false}
-                        style={
-                          Object {
-                            "width": "100%",
-                          }
-                        }
-                        value=""
-                      >
-                        <option
-                          key="blank"
-                        />
-                        <option
-                          key="sentry.rules.actions.notify1"
-                          value="sentry.rules.actions.notify1"
-                        >
-                          Send a notification for all services
-                        </option>
-                      </select>
-                    </SelectInput>
-                  </fieldset>
-                </div>
-              </RuleNodeList>
-              <hr />
-              <div
-                className="node-frequency-selector"
-              >
-                <AlertRuleRow>
-                  <h6
-                    className="glamor-0 glamor-1"
-                  >
-                    Perform these actions at most once every 
-                    <Select2Field
-                      allowClear={false}
-                      allowEmpty={false}
-                      choices={
-                        Array [
-                          Array [
-                            "5",
-                            "5 minutes",
-                          ],
-                          Array [
-                            "10",
-                            "10 minutes",
-                          ],
-                          Array [
-                            "30",
-                            "30 minutes",
-                          ],
-                          Array [
-                            "60",
-                            "60 minutes",
-                          ],
-                          Array [
-                            "180",
-                            "3 hours",
-                          ],
-                          Array [
-                            "720",
-                            "12 hours",
-                          ],
-                          Array [
-                            "1440",
-                            "24 hours",
-                          ],
-                          Array [
-                            "10080",
-                            "one week",
-                          ],
-                          Array [
-                            "43200",
-                            "30 days",
-                          ],
-                        ]
-                      }
-                      className=""
-                      disabled={false}
-                      escapeMarkup={true}
-                      hideErrorMessage={false}
-                      key="1"
-                      multiple={false}
-                      name="frequency"
-                      onChange={[Function]}
-                      placeholder="--"
-                      required={true}
+                    <div
+                      className="control-group required"
                       style={
                         Object {
                           "marginBottom": 0,
                           "marginLeft": 5,
                           "marginRight": 5,
-                          "width": 140,
                         }
                       }
-                      value={30}
                     >
                       <div
-                        className="control-group required"
-                        style={
-                          Object {
-                            "marginBottom": 0,
-                            "marginLeft": 5,
-                            "marginRight": 5,
-                            "width": 140,
-                          }
-                        }
+                        className="controls"
                       >
+                        <select
+                          className="form-control"
+                          disabled={false}
+                          id="id-environment"
+                          multiple={false}
+                          onChange={[Function]}
+                          placeholder="--"
+                          required={true}
+                          value=""
+                        >
+                          <option
+                            key="all"
+                            value="all"
+                          >
+                            All Environments
+                          </option>
+                        </select>
+                      </div>
+                    </div>
+                  </Select2Field>
+                  <hr />
+                  <h6>
+                    Take these actions:
+                  </h6>
+                  <RuleNodeList
+                    className="rule-action-list"
+                    initialItems={Array []}
+                    nodes={
+                      Array [
+                        Object {
+                          "html": "Send a notification for all services",
+                          "id": "sentry.rules.actions.notify1",
+                          "label": "Send a notification for all services",
+                        },
+                      ]
+                    }
+                  >
+                    <div
+                      className="rule-action-list"
+                    >
+                      <RuleNodes>
                         <div
-                          className="controls"
+                          className="glamor-13 glamor-14"
+                        />
+                      </RuleNodes>
+                      <fieldset
+                        className="node-selector"
+                      >
+                        <SelectInput
+                          disabled={false}
+                          multiple={false}
+                          onChange={[Function]}
+                          placeholder="Select an option..."
+                          required={false}
+                          style={
+                            Object {
+                              "width": "100%",
+                            }
+                          }
+                          value=""
                         >
                           <select
-                            className="form-control"
                             disabled={false}
-                            id="id-frequency"
                             multiple={false}
                             onChange={[Function]}
-                            placeholder="--"
-                            required={true}
-                            value={30}
+                            placeholder="Select an option..."
+                            required={false}
+                            style={
+                              Object {
+                                "width": "100%",
+                              }
+                            }
+                            value=""
                           >
                             <option
-                              key="5"
-                              value="5"
-                            >
-                              5 minutes
-                            </option>
-                            <option
-                              key="10"
-                              value="10"
-                            >
-                              10 minutes
-                            </option>
-                            <option
-                              key="30"
-                              value="30"
-                            >
-                              30 minutes
-                            </option>
-                            <option
-                              key="60"
-                              value="60"
-                            >
-                              60 minutes
-                            </option>
-                            <option
-                              key="180"
-                              value="180"
-                            >
-                              3 hours
-                            </option>
-                            <option
-                              key="720"
-                              value="720"
-                            >
-                              12 hours
-                            </option>
-                            <option
-                              key="1440"
-                              value="1440"
-                            >
-                              24 hours
-                            </option>
+                              key="blank"
+                            />
                             <option
-                              key="10080"
-                              value="10080"
+                              key="sentry.rules.actions.notify1"
+                              value="sentry.rules.actions.notify1"
                             >
-                              one week
-                            </option>
-                            <option
-                              key="43200"
-                              value="43200"
-                            >
-                              30 days
+                              Send a notification for all services
                             </option>
                           </select>
-                        </div>
-                      </div>
-                    </Select2Field>
-                     for an issue.
-                  </h6>
-                </AlertRuleRow>
-              </div>
-              <div
-                className="actions"
-              >
-                <button
-                  className="btn btn-primary btn-lg"
-                  disabled={false}
-                >
-                  Save Rule
-                </button>
-              </div>
+                        </SelectInput>
+                      </fieldset>
+                    </div>
+                  </RuleNodeList>
+                  <hr />
+                  <div
+                    className="node-frequency-selector"
+                  >
+                    <AlertRuleRow>
+                      <h6
+                        className="glamor-11 glamor-12"
+                      >
+                        Perform these actions at most once every 
+                        <Select2Field
+                          allowClear={false}
+                          allowEmpty={false}
+                          choices={
+                            Array [
+                              Array [
+                                "5",
+                                "5 minutes",
+                              ],
+                              Array [
+                                "10",
+                                "10 minutes",
+                              ],
+                              Array [
+                                "30",
+                                "30 minutes",
+                              ],
+                              Array [
+                                "60",
+                                "60 minutes",
+                              ],
+                              Array [
+                                "180",
+                                "3 hours",
+                              ],
+                              Array [
+                                "720",
+                                "12 hours",
+                              ],
+                              Array [
+                                "1440",
+                                "24 hours",
+                              ],
+                              Array [
+                                "10080",
+                                "one week",
+                              ],
+                              Array [
+                                "43200",
+                                "30 days",
+                              ],
+                            ]
+                          }
+                          className=""
+                          disabled={false}
+                          escapeMarkup={true}
+                          hideErrorMessage={false}
+                          key="1"
+                          multiple={false}
+                          name="frequency"
+                          onChange={[Function]}
+                          placeholder="--"
+                          required={true}
+                          style={
+                            Object {
+                              "marginBottom": 0,
+                              "marginLeft": 5,
+                              "marginRight": 5,
+                              "width": 140,
+                            }
+                          }
+                          value={30}
+                        >
+                          <div
+                            className="control-group required"
+                            style={
+                              Object {
+                                "marginBottom": 0,
+                                "marginLeft": 5,
+                                "marginRight": 5,
+                                "width": 140,
+                              }
+                            }
+                          >
+                            <div
+                              className="controls"
+                            >
+                              <select
+                                className="form-control"
+                                disabled={false}
+                                id="id-frequency"
+                                multiple={false}
+                                onChange={[Function]}
+                                placeholder="--"
+                                required={true}
+                                value={30}
+                              >
+                                <option
+                                  key="5"
+                                  value="5"
+                                >
+                                  5 minutes
+                                </option>
+                                <option
+                                  key="10"
+                                  value="10"
+                                >
+                                  10 minutes
+                                </option>
+                                <option
+                                  key="30"
+                                  value="30"
+                                >
+                                  30 minutes
+                                </option>
+                                <option
+                                  key="60"
+                                  value="60"
+                                >
+                                  60 minutes
+                                </option>
+                                <option
+                                  key="180"
+                                  value="180"
+                                >
+                                  3 hours
+                                </option>
+                                <option
+                                  key="720"
+                                  value="720"
+                                >
+                                  12 hours
+                                </option>
+                                <option
+                                  key="1440"
+                                  value="1440"
+                                >
+                                  24 hours
+                                </option>
+                                <option
+                                  key="10080"
+                                  value="10080"
+                                >
+                                  one week
+                                </option>
+                                <option
+                                  key="43200"
+                                  value="43200"
+                                >
+                                  30 days
+                                </option>
+                              </select>
+                            </div>
+                          </div>
+                        </Select2Field>
+                         for an issue.
+                      </h6>
+                    </AlertRuleRow>
+                  </div>
+                  <div
+                    className="actions"
+                  >
+                    <button
+                      className="btn btn-primary btn-lg"
+                      disabled={false}
+                    >
+                      Save Rule
+                    </button>
+                  </div>
+                </div>
+              </PanelBody>
             </div>
-          </div>
+          </Panel>
         </form>
       </RuleEditor>
     </DocumentTitle>
diff --git a/tests/js/spec/views/__snapshots__/projectAlertSettings.spec.jsx.snap b/tests/js/spec/views/__snapshots__/projectAlertSettings.spec.jsx.snap
index d0c00f4b96..71ad2fd3bc 100644
--- a/tests/js/spec/views/__snapshots__/projectAlertSettings.spec.jsx.snap
+++ b/tests/js/spec/views/__snapshots__/projectAlertSettings.spec.jsx.snap
@@ -12,7 +12,7 @@ exports[`ProjectAlertSettings render() renders 1`] = `
           disabled={false}
           priority="primary"
           size="small"
-          to="/org-slug/project-slug/settings/alerts/rules/new/"
+          to="rules/new/"
         >
           <span
             className="icon-plus"
@@ -32,14 +32,14 @@ exports[`ProjectAlertSettings render() renders 1`] = `
           <ListLink
             activeClassName="active"
             index={true}
-            to="/org-slug/project-slug/settings/alerts/"
+            to=""
           >
             Settings
           </ListLink>
           <ListLink
             activeClassName="active"
             index={false}
-            to="/org-slug/project-slug/settings/alerts/rules/"
+            to="rules/"
           >
             Rules
           </ListLink>
@@ -53,27 +53,75 @@ exports[`ProjectAlertSettings render() renders 1`] = `
     >
       Looking to fine-tune your personal notification preferences? Visit your Account Settings
     </AlertLink>
-    <GeneralSettings
-      initialData={
-        Object {
-          "subjectTemplate": "[$project] \${tag:level}: $title",
-        }
-      }
-      onSave={[Function]}
-      orgId="org-slug"
-      projectId="project-slug"
-    />
-    <DigestSettings
+    <Form
+      allowUndo={true}
+      apiEndpoint="/projects/org-slug/project-slug/"
+      apiMethod="PUT"
+      cancelLabel="Cancel"
+      className="form-stacked"
+      footerClass="form-actions align-right"
       initialData={
         Object {
           "digestsMaxDelay": 60,
           "digestsMinDelay": 5,
+          "subjectTemplate": "[$project] \${tag:level}: $title",
         }
       }
-      onSave={[Function]}
-      orgId="org-slug"
-      projectId="project-slug"
-    />
+      onSubmitError={[Function]}
+      onSubmitSuccess={[Function]}
+      requireChanges={false}
+      saveOnBlur={true}
+      submitDisabled={false}
+      submitLabel="Save Changes"
+    >
+      <JsonForm
+        additionalFieldProps={Object {}}
+        forms={
+          Array [
+            Object {
+              "fields": Array [
+                Object {
+                  "help": "The email subject to use (excluding the prefix) for individual alerts. Usable variables include: $project, $title, $shortID, and \${tag:key}, such as \${tag:environment} or \${tag:release}.",
+                  "label": "Subject Template",
+                  "name": "subjectTemplate",
+                  "placeholder": "e.g. [\${tag:environment}]",
+                  "type": "string",
+                },
+              ],
+              "title": "Email Settings",
+            },
+            Object {
+              "fields": Array [
+                Object {
+                  "defaultValue": 300,
+                  "formatLabel": [Function],
+                  "help": "Notifications will be delivered at most this often.",
+                  "label": "Minimum delivery interval",
+                  "max": 3600,
+                  "min": 60,
+                  "name": "digestsMinDelay",
+                  "step": 60,
+                  "type": "range",
+                },
+                Object {
+                  "defaultValue": 300,
+                  "formatLabel": [Function],
+                  "help": "Notifications will be delivered at least this often.",
+                  "label": "Maximum delivery interval",
+                  "max": 3600,
+                  "min": 60,
+                  "name": "digestsMaxDelay",
+                  "step": 60,
+                  "type": "range",
+                },
+              ],
+              "title": "Digests",
+            },
+          ]
+        }
+        renderBodyStart={[Function]}
+      />
+    </Form>
     <PluginList
       onDisablePlugin={[Function]}
       onEnablePlugin={[Function]}
diff --git a/tests/js/spec/views/projectAlertSettings.spec.jsx b/tests/js/spec/views/projectAlertSettings.spec.jsx
index 5ae35e7a98..27f24ff495 100644
--- a/tests/js/spec/views/projectAlertSettings.spec.jsx
+++ b/tests/js/spec/views/projectAlertSettings.spec.jsx
@@ -30,6 +30,7 @@ describe('ProjectAlertSettings', function() {
         <ProjectAlertSettings
           params={{orgId: org.slug, projectId: project.slug}}
           organization={org}
+          routes={[]}
         />,
         {
           context: {
diff --git a/tests/sentry/api/endpoints/test_project_details.py b/tests/sentry/api/endpoints/test_project_details.py
index 76d8c4ef6d..b484403788 100644
--- a/tests/sentry/api/endpoints/test_project_details.py
+++ b/tests/sentry/api/endpoints/test_project_details.py
@@ -416,6 +416,91 @@ class ProjectUpdateTest(APITestCase):
         assert self.project.get_option('sentry:scrub_defaults') is False
         assert resp.data['dataScrubberDefaults'] is False
 
+    def test_digests_delay(self):
+        resp = self.client.put(self.path, data={
+            'digestsMinDelay': 1000
+        })
+        assert resp.status_code == 200, resp.content
+        assert self.project.get_option('digests:mail:minimum_delay') == 1000
+
+        resp = self.client.put(self.path, data={
+            'digestsMaxDelay': 1200
+        })
+        assert resp.status_code == 200, resp.content
+        assert self.project.get_option('digests:mail:maximum_delay') == 1200
+
+        resp = self.client.put(self.path, data={
+            'digestsMinDelay': 300,
+            'digestsMaxDelay': 600,
+        })
+        assert resp.status_code == 200, resp.content
+        assert self.project.get_option('digests:mail:minimum_delay') == 300
+        assert self.project.get_option('digests:mail:maximum_delay') == 600
+
+    def test_digests_min_without_max(self):
+        resp = self.client.put(self.path, data={
+            'digestsMinDelay': 1200
+        })
+        assert resp.status_code == 200, resp.content
+        assert self.project.get_option('digests:mail:minimum_delay') == 1200
+
+    def test_digests_max_without_min(self):
+        resp = self.client.put(self.path, data={
+            'digestsMaxDelay': 1200
+        })
+        assert resp.status_code == 200, resp.content
+        assert self.project.get_option('digests:mail:maximum_delay') == 1200
+
+    def test_invalid_digests_min_delay(self):
+        min_delay = 120
+
+        self.project.update_option('digests:mail:minimum_delay', min_delay)
+
+        resp = self.client.put(self.path, data={
+            'digestsMinDelay': 59
+        })
+        assert resp.status_code == 400
+
+        resp = self.client.put(self.path, data={
+            'digestsMinDelay': 3601
+        })
+        assert resp.status_code == 400
+        assert self.project.get_option('digests:mail:minimum_delay') == min_delay
+
+    def test_invalid_digests_max_delay(self):
+        min_delay = 120
+        max_delay = 360
+
+        self.project.update_option('digests:mail:minimum_delay', min_delay)
+        self.project.update_option('digests:mail:maximum_delay', max_delay)
+
+        resp = self.client.put(self.path, data={
+            'digestsMaxDelay': 59
+        })
+        assert resp.status_code == 400
+
+        resp = self.client.put(self.path, data={
+            'digestsMaxDelay': 3601
+        })
+        assert resp.status_code == 400
+        assert self.project.get_option('digests:mail:maximum_delay') == max_delay
+
+        # test sending only max
+        resp = self.client.put(self.path, data={
+            'digestsMaxDelay': 100
+        })
+        assert resp.status_code == 400
+        assert self.project.get_option('digests:mail:maximum_delay') == max_delay
+
+        # test sending min + invalid max
+        resp = self.client.put(self.path, data={
+            'digestsMinDelay': 120,
+            'digestsMaxDelay': 100,
+        })
+        assert resp.status_code == 400
+        assert self.project.get_option('digests:mail:minimum_delay') == min_delay
+        assert self.project.get_option('digests:mail:maximum_delay') == max_delay
+
 
 class ProjectDeleteTest(APITestCase):
     @mock.patch('sentry.api.endpoints.project_details.uuid4')
