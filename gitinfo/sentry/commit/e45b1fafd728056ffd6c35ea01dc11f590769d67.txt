commit e45b1fafd728056ffd6c35ea01dc11f590769d67
Author: Stephen Cefali <scefali@sentry.io>
Date:   Mon Mar 16 13:11:31 2020 -0700

    ref(react-select): upgrade context modal picker (#17701)

diff --git a/package.json b/package.json
index 3bcefe3a10..b3ddbd998a 100644
--- a/package.json
+++ b/package.json
@@ -44,6 +44,7 @@
     "@types/react-document-title": "^2.0.3",
     "@types/react-dom": "~16.9.5",
     "@types/react-router": "^3.0.20",
+    "@types/react-select": "3.0.8",
     "@types/react-sparklines": "^1.7.0",
     "@types/react-virtualized": "^9.20.1",
     "@types/reflexbox": "^4.0.0",
diff --git a/src/sentry/static/sentry/app/components/contextPickerModal.tsx b/src/sentry/static/sentry/app/components/contextPickerModal.tsx
index c430945df0..fbb14e7e35 100644
--- a/src/sentry/static/sentry/app/components/contextPickerModal.tsx
+++ b/src/sentry/static/sentry/app/components/contextPickerModal.tsx
@@ -1,4 +1,5 @@
 import {ModalBody, ModalHeader} from 'react-bootstrap';
+import ReactSelect from 'react-select';
 import React from 'react';
 import ReactDOM from 'react-dom';
 import Reflux from 'reflux';
@@ -6,7 +7,7 @@ import createReactClass from 'create-react-class';
 import styled from '@emotion/styled';
 
 import {Organization, Project} from 'app/types';
-import {t} from 'app/locale';
+import {t, tct} from 'app/locale';
 import LoadingIndicator from 'app/components/loadingIndicator';
 import OrganizationStore from 'app/stores/organizationStore';
 import OrganizationsStore from 'app/stores/organizationsStore';
@@ -14,6 +15,7 @@ import Projects from 'app/utils/projects';
 import SelectControl from 'app/components/forms/selectControl';
 import replaceRouterParams from 'app/utils/replaceRouterParams';
 import space from 'app/styles/space';
+import Link from 'app/components/links/link';
 
 type Props = {
   /**
@@ -98,8 +100,8 @@ class ContextPickerModal extends React.Component<Props> {
     }
   }
 
-  orgSelect: Element | null = null;
-  projectSelect: Element | null = null;
+  orgSelect: ReactSelect | null = null;
+  projectSelect: ReactSelect | null = null;
 
   // Performs checks to see if we need to prompt user
   // i.e. When there is only 1 org and no project is needed or
@@ -145,7 +147,7 @@ class ContextPickerModal extends React.Component<Props> {
     );
   };
 
-  doFocus = (ref: Element | null) => {
+  doFocus = (ref: ReactSelect | null) => {
     if (!ref || this.props.loading) {
       return;
     }
@@ -168,21 +170,6 @@ class ContextPickerModal extends React.Component<Props> {
     this.doFocus(this.orgSelect);
   };
 
-  focusProjectOption = (projectId: string, projects: Project[]) => {
-    if (!this.projectSelect || this.props.loading) {
-      return;
-    }
-
-    const projectToBeFocused = projects.find(({id}) => id === projectId);
-
-    if (projectToBeFocused) {
-      (this.projectSelect as SelectControl).focusOption({
-        label: projectToBeFocused.slug,
-        value: projectToBeFocused.slug,
-      });
-    }
-  };
-
   handleSelectOrganization = ({value}: {value: string}) => {
     // If we do not need to select a project, we can early return after selecting an org
     // No need to fetch org details
@@ -202,6 +189,32 @@ class ContextPickerModal extends React.Component<Props> {
 
     this.navigateIfFinish([{slug: organization}], [{slug: value}]);
   };
+
+  onProjectMenuOpen = () => {
+    const {projects, comingFromProjectId} = this.props;
+    // Hacky way to pre-focus to an item with newer versions of react select
+    // See https://github.com/JedWatson/react-select/issues/3648
+    setTimeout(() => {
+      const ref = this.projectSelect;
+      if (ref) {
+        const projectChoices = ref.select.state.menuOptions.focusable;
+        const projectToBeFocused = projects.find(({id}) => id === comingFromProjectId);
+        const selectedIndex = projectChoices.findIndex(
+          option => option.value === projectToBeFocused?.slug
+        );
+        if (selectedIndex >= 0 && projectToBeFocused) {
+          // Focusing selected option only if it exists
+          ref.select.scrollToFocusedOptionOnUpdate = true;
+          ref.select.inputIsHiddenAfterUpdate = false;
+          ref.select.setState({
+            focusedValue: null,
+            focusedOption: projectChoices[selectedIndex],
+          });
+        }
+      }
+    });
+  };
+
   get headerText() {
     const {needOrg, needProject} = this.props;
     if (needOrg && needProject) {
@@ -217,17 +230,42 @@ class ContextPickerModal extends React.Component<Props> {
     return '';
   }
 
+  renderProjectSelectOrMessage() {
+    const {organization, projects} = this.props;
+    if (!projects.length) {
+      return (
+        <div>
+          {tct('You have no projects. Click [link] to make one.', {
+            link: <Link href={`/organizations/${organization}/projects/new/`}>here</Link>,
+          })}
+        </div>
+      );
+    }
+    return (
+      <StyledSelectControl
+        ref={(ref: ReactSelect) => {
+          this.projectSelect = ref;
+          this.focusProjectSelector();
+        }}
+        placeholder={t('Select a Project')}
+        name="project"
+        openMenuOnFocus
+        options={projects.map(({slug}) => ({label: slug, value: slug}))}
+        onChange={this.handleSelectProject}
+        onMenuOpen={this.onProjectMenuOpen}
+      />
+    );
+  }
+
   render() {
     const {
       needOrg,
       needProject,
       organization,
       organizations,
-      projects,
       loading,
       Header,
       Body,
-      comingFromProjectId,
     } = this.props;
 
     const shouldShowPicker = needOrg || needProject;
@@ -236,7 +274,7 @@ class ContextPickerModal extends React.Component<Props> {
       return null;
     }
 
-    const shouldShowProjectSelector = organization && needProject && projects;
+    const shouldShowProjectSelector = organization && needProject && !loading;
 
     const orgChoices = organizations
       .filter(({status}) => status.id !== 'pending_deletion')
@@ -249,8 +287,7 @@ class ContextPickerModal extends React.Component<Props> {
           {loading && <StyledLoadingIndicator overlay />}
           {needOrg && (
             <StyledSelectControl
-              deprecatedSelectControl
-              ref={ref => {
+              ref={(ref: ReactSelect) => {
                 this.orgSelect = ref;
                 if (shouldShowProjectSelector) {
                   return;
@@ -260,29 +297,13 @@ class ContextPickerModal extends React.Component<Props> {
               placeholder={t('Select an Organization')}
               name="organization"
               options={orgChoices}
-              openOnFocus
+              openMenuOnFocus
               value={organization}
               onChange={this.handleSelectOrganization}
             />
           )}
 
-          {organization && needProject && projects && (
-            <StyledSelectControl
-              deprecatedSelectControl
-              ref={ref => {
-                this.projectSelect = ref;
-                this.focusProjectSelector();
-                comingFromProjectId &&
-                  this.focusProjectOption(comingFromProjectId, projects);
-              }}
-              placeholder={t('Select a Project')}
-              name="project"
-              value=""
-              openOnFocus
-              options={projects.map(({slug}) => ({label: slug, value: slug}))}
-              onChange={this.handleSelectProject}
-            />
-          )}
+          {shouldShowProjectSelector && this.renderProjectSelectOrMessage()}
         </Body>
       </React.Fragment>
     );
@@ -313,12 +334,12 @@ const ContextPickerModalContainer = createReactClass<ContainerProps, ContainerSt
     this.setState({selectedOrganization: organizationSlug});
   },
 
-  renderModal({projects, fetching}) {
+  renderModal({projects, initiallyLoaded}) {
     return (
       <ContextPickerModal
         {...this.props}
-        projects={projects}
-        loading={fetching}
+        projects={projects || []}
+        loading={!initiallyLoaded}
         organizations={this.state.organizations}
         organization={this.state.selectedOrganization}
         onSelectOrganization={this.handleSelectOrganization}
diff --git a/src/sentry/static/sentry/app/views/eventsV2/table/columnEditRow.tsx b/src/sentry/static/sentry/app/views/eventsV2/table/columnEditRow.tsx
index 8b521a3aac..f360107794 100644
--- a/src/sentry/static/sentry/app/views/eventsV2/table/columnEditRow.tsx
+++ b/src/sentry/static/sentry/app/views/eventsV2/table/columnEditRow.tsx
@@ -348,7 +348,8 @@ class ColumnEditRow extends React.Component<Props> {
           {...selectProps}
           components={{
             Option: ({label, value, ...props}) => (
-              <components.Option label={label} {...props}>
+              //TODO(TS): stop typing props as any
+              <components.Option label={label} {...(props as any)}>
                 <Label>
                   {label}
                   {value.kind === FieldValueKind.TAG && <Badge text="tag" />}
diff --git a/tests/js/spec/components/contextPickerModal.spec.jsx b/tests/js/spec/components/contextPickerModal.spec.jsx
index ebd00d5295..0a4112d166 100644
--- a/tests/js/spec/components/contextPickerModal.spec.jsx
+++ b/tests/js/spec/components/contextPickerModal.spec.jsx
@@ -5,6 +5,7 @@ import ContextPickerModal from 'app/components/contextPickerModal';
 import OrganizationStore from 'app/stores/organizationStore';
 import OrganizationsStore from 'app/stores/organizationsStore';
 import ProjectsStore from 'app/stores/projectsStore';
+import {selectByValue} from 'sentry-test/select-new';
 
 jest.mock('jquery');
 
@@ -107,14 +108,7 @@ describe('ContextPickerModal', function() {
       body: [],
     });
 
-    wrapper.find('StyledSelectControl[name="organization"] input').simulate('focus');
-
-    expect(wrapper.find('Select[name="organization"] .Select-menu')).toHaveLength(1);
-
-    wrapper
-      .find('Select[name="organization"] Option')
-      .first()
-      .simulate('mouseDown');
+    selectByValue(wrapper, 'org-slug', {control: true});
 
     await tick();
     wrapper.update();
@@ -194,14 +188,7 @@ describe('ContextPickerModal', function() {
     );
 
     // Select org2
-    wrapper
-      .find('StyledSelectControl[name="organization"]')
-      .simulate('change', {value: org2.slug, label: org2.slug});
-    wrapper.find('StyledSelectControl[name="organization"] input').simulate('focus');
-    wrapper
-      .find('Select[name="organization"] Option')
-      .at(1)
-      .simulate('mouseDown');
+    selectByValue(wrapper, org2.slug, {control: true});
 
     await tick();
     wrapper.update();
@@ -215,11 +202,7 @@ describe('ContextPickerModal', function() {
     ]);
 
     // Select project3
-    wrapper.find('StyledSelectControl[name="project"] input').simulate('focus');
-    wrapper
-      .find('Select[name="project"] Option')
-      .at(1)
-      .simulate('mouseDown');
+    selectByValue(wrapper, 'project3', {control: true, name: 'project'});
 
     expect(onFinish).toHaveBeenCalledWith('/test/org2/path/project3/');
 
diff --git a/yarn.lock b/yarn.lock
index b946641cc5..263cd15891 100644
--- a/yarn.lock
+++ b/yarn.lock
@@ -2608,7 +2608,7 @@
   dependencies:
     "@types/react" "*"
 
-"@types/react-dom@~16.9.5":
+"@types/react-dom@*", "@types/react-dom@~16.9.5":
   version "16.9.5"
   resolved "https://registry.yarnpkg.com/@types/react-dom/-/react-dom-16.9.5.tgz#5de610b04a35d07ffd8f44edad93a71032d9aaa7"
   integrity sha512-BX6RQ8s9D+2/gDhxrj8OW+YD4R+8hj7FEM/OJHGNR0KipE1h1mSsf39YeyC81qafkq+N3rU3h3RFbLSwE5VqUg==
@@ -2623,6 +2623,15 @@
     "@types/history" "^3"
     "@types/react" "*"
 
+"@types/react-select@3.0.8":
+  version "3.0.8"
+  resolved "https://registry.yarnpkg.com/@types/react-select/-/react-select-3.0.8.tgz#b824a12d438dd493c30ffff49a805f797602a837"
+  integrity sha512-0763TXYZc8bTiHM+DUnWoy9Rg5mk6PxYWBrEe6Fkjgc0Kv0r1RqjZk9/BrK4wdM0RNjYjixlFPnUhOJb76sMGg==
+  dependencies:
+    "@types/react" "*"
+    "@types/react-dom" "*"
+    "@types/react-transition-group" "*"
+
 "@types/react-sparklines@^1.7.0":
   version "1.7.0"
   resolved "https://registry.yarnpkg.com/@types/react-sparklines/-/react-sparklines-1.7.0.tgz#f956d0f7b0e746ad445ce1cd250fe81f8a384684"
@@ -2644,6 +2653,13 @@
   dependencies:
     "@types/react" "*"
 
+"@types/react-transition-group@*":
+  version "4.2.4"
+  resolved "https://registry.yarnpkg.com/@types/react-transition-group/-/react-transition-group-4.2.4.tgz#c7416225987ccdb719262766c1483da8f826838d"
+  integrity sha512-8DMUaDqh0S70TjkqU0DxOu80tFUiiaS9rxkWip/nb7gtvAsbqOXm02UCmR8zdcjWujgeYPiPNTVpVpKzUDotwA==
+  dependencies:
+    "@types/react" "*"
+
 "@types/react-virtualized@^9.20.1":
   version "9.21.7"
   resolved "https://registry.yarnpkg.com/@types/react-virtualized/-/react-virtualized-9.21.7.tgz#2a35b660c396e916fbf3fb5279a577187e85af05"
