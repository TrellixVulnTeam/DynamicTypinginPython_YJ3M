commit 5cf739e9020eeaa08d1e07bdbb97b8feff91e18e
Author: Robin Rendle <robinjrendle@gmail.com>
Date:   Wed Jul 1 15:36:22 2020 -0700

    fix(ui): added date since back (#19650)
    
    * fix(ui): added date since back
    
    * removed QuestionTooltip
    
    * add time html props to TimeSince component
    
    Co-authored-by: Scott Cooper <scttcper@gmail.com>

diff --git a/src/sentry/static/sentry/app/components/timeSince.tsx b/src/sentry/static/sentry/app/components/timeSince.tsx
index 3290a3f27f..768a5163ef 100644
--- a/src/sentry/static/sentry/app/components/timeSince.tsx
+++ b/src/sentry/static/sentry/app/components/timeSince.tsx
@@ -19,6 +19,8 @@ type DefaultProps = {
   suffix: string;
 };
 
+type TimeProps = React.HTMLProps<HTMLTimeElement>;
+
 type Props = DefaultProps & {
   /**
    * The date value, can be string, number (e.g. timestamp), or instance of Date
@@ -26,7 +28,7 @@ type Props = DefaultProps & {
   date: RelaxedDateType;
 
   className?: string;
-};
+} & TimeProps;
 
 type State = {
   relative: string;
diff --git a/src/sentry/static/sentry/app/views/alerts/list/row.tsx b/src/sentry/static/sentry/app/views/alerts/list/row.tsx
index 1cbb1c3c75..0c4bfb8fae 100644
--- a/src/sentry/static/sentry/app/views/alerts/list/row.tsx
+++ b/src/sentry/static/sentry/app/views/alerts/list/row.tsx
@@ -14,6 +14,7 @@ import IdBadge from 'app/components/idBadge';
 import Link from 'app/components/links/link';
 import Projects from 'app/utils/projects';
 import theme from 'app/utils/theme';
+import TimeSince from 'app/components/timeSince';
 import Tooltip from 'app/components/tooltip';
 import getDynamicText from 'app/utils/getDynamicText';
 import overflowEllipsis from 'app/styles/overflowEllipsis';
@@ -72,7 +73,9 @@ class AlertListRow extends AsyncComponent<Props, State> {
   renderTimeSince(date: string) {
     return (
       <CreatedResolvedTime>
-        <StyledDateTime date={date} utc={false} />
+        <Tooltip title={<DateTime date={date} utc={false} />} position="top">
+          <TimeSince title="" date={date} />
+        </Tooltip>
       </CreatedResolvedTime>
     );
   }
@@ -156,10 +159,8 @@ function ErrorLoadingStatsIcon() {
 const CreatedResolvedTime = styled('div')`
   ${overflowEllipsis}
   line-height: 1.4;
-`;
-
-const StyledDateTime = styled(DateTime)`
-  color: ${p => p.theme.gray500};
+  display: flex;
+  align-items: center;
 `;
 
 const ProjectBadge = styled(IdBadge)`
diff --git a/tests/js/spec/views/alerts/list/index.spec.jsx b/tests/js/spec/views/alerts/list/index.spec.jsx
index a918cf6741..5de99ab5c2 100644
--- a/tests/js/spec/views/alerts/list/index.spec.jsx
+++ b/tests/js/spec/views/alerts/list/index.spec.jsx
@@ -221,6 +221,13 @@ describe('IncidentsList', function() {
         .exists()
     ).toBeFalsy();
 
+    expect(
+      wrapper
+        .find('IncidentPanelItem')
+        .at(0)
+        .find('TimeSince')
+    ).toHaveLength(1);
+
     expect(incidentsMock).toHaveBeenCalledTimes(1);
 
     expect(incidentsMock).toHaveBeenCalledWith(
@@ -246,6 +253,13 @@ describe('IncidentsList', function() {
         .text()
     ).toBe('2 weeks');
 
+    expect(
+      wrapper
+        .find('IncidentPanelItem')
+        .at(0)
+        .find('TimeSince')
+    ).toHaveLength(2);
+
     expect(incidentsMock).toHaveBeenCalledTimes(2);
     // Stats not called for closed incidents
     expect(statsMock).toHaveBeenCalledTimes(1);
