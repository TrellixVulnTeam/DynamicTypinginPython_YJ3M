commit 64b753fafc2630fb8d9616a446140877372fed8c
Author: Ben Vinegar <ben@benv.ca>
Date:   Tue Dec 1 15:07:22 2015 -0800

    Gracefully handle group.seenBy is undefined (refs #2387)

diff --git a/src/sentry/static/sentry/app/views/groupDetails/seenBy.jsx b/src/sentry/static/sentry/app/views/groupDetails/seenBy.jsx
index 927d2e9ac2..979deca4bf 100644
--- a/src/sentry/static/sentry/app/views/groupDetails/seenBy.jsx
+++ b/src/sentry/static/sentry/app/views/groupDetails/seenBy.jsx
@@ -20,7 +20,19 @@ const GroupSeenBy = React.createClass({
     let activeUser = ConfigStore.get('user');
     let group = this.getGroup();
 
-    let seenByNodes = group.seenBy.filter((user, userIdx) => {
+    // NOTE: Sometimes group.seenBy is undefined, even though the /groups/{id} API
+    //       endpoint guarantees an array. We haven't figured out HOW GroupSeenBy
+    //       is getting incomplete group records, but in the interim, we are just
+    //       gracefully handing this case.
+    //
+    // See: https://github.com/getsentry/sentry/issues/2387
+
+    let seenBy = group.seenBy || [];
+    if (seenBy.length === 0) {
+      return null;
+    }
+
+    let seenByNodes = seenBy.filter((user, userIdx) => {
       return activeUser.id !== user.id;
     }).map((user, userIdx) => {
       let title = userDisplayName(user) + '<br/>' + moment(user.lastSeen).format('LL');
@@ -31,10 +43,6 @@ const GroupSeenBy = React.createClass({
       );
     });
 
-    if (seenByNodes.length === 0) {
-      return null;
-    }
-
     return (
       <div className="seen-by">
         <ul>
diff --git a/tests/js/spec/views/groupDetails/seenBy.spec.jsx b/tests/js/spec/views/groupDetails/seenBy.spec.jsx
new file mode 100644
index 0000000000..42aae69c70
--- /dev/null
+++ b/tests/js/spec/views/groupDetails/seenBy.spec.jsx
@@ -0,0 +1,55 @@
+import React from 'react';
+import ReactDOM from 'react-dom';
+import TestUtils from 'react-addons-test-utils';
+import GroupSeenBy from 'app/views/groupDetails/seenBy';
+import ConfigStore from 'app/stores/configStore';
+import Gravatar from 'app/components/gravatar';
+
+import stubContext from '../../../helpers/stubContext';
+import stubReactComponent from '../../../helpers/stubReactComponent';
+
+describe('OrganizationTeams', function() {
+
+  beforeEach(function() {
+    this.sandbox = sinon.sandbox.create();
+
+    this.sandbox.stub(ConfigStore, 'get').returns([]);
+    stubReactComponent(this.sandbox, [Gravatar]);
+  });
+
+  afterEach(function() {
+    this.sandbox.restore();
+  });
+
+  describe('render()', function() {
+    it('should return null if seenBy is falsy', function () {
+      let ContextStubbedGroupSeenBy = stubContext(GroupSeenBy, {
+        group: {id: '1337'},
+        project: {},
+        team: {}
+      });
+
+      let groupSeenBy = TestUtils.renderIntoDocument(<ContextStubbedGroupSeenBy/>);
+      expect(ReactDOM.findDOMNode(groupSeenBy)).to.be.null;
+    });
+
+    it('should return a list of each user that saw', function () {
+      let ContextStubbedGroupSeenBy = stubContext(GroupSeenBy, {
+        group: {
+          id: '1337',
+          seenBy: [
+            {id: 1, email: 'jane@example.com'},
+            {id: 2, email: 'john@example.com'}
+          ]
+        },
+        project: {},
+        team: {}
+      });
+
+      let groupSeenBy = TestUtils.renderIntoDocument(<ContextStubbedGroupSeenBy/>);
+      let li = TestUtils.scryRenderedDOMComponentsWithTag(groupSeenBy, 'li');
+      expect(li).to.have.property('length', 3); // +1 for "icon-eye"
+    });
+  });
+});
+
