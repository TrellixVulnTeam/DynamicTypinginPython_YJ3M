commit 192258d7316b402e60a091d72939693feaea469f
Author: Chris Fuller <cfuller@sentry.io>
Date:   Wed Apr 15 14:03:30 2020 -0400

    fix(workflow): New migration to drop dangling alertrule constraint (#18268)

diff --git a/src/sentry/migrations/0063_drop_alertrule_constraint.py b/src/sentry/migrations/0063_drop_alertrule_constraint.py
new file mode 100644
index 0000000000..62d2aa1e6f
--- /dev/null
+++ b/src/sentry/migrations/0063_drop_alertrule_constraint.py
@@ -0,0 +1,52 @@
+# -*- coding: utf-8 -*-
+# Generated by Django 1.11.27 on 2020-04-08 01:07
+from __future__ import unicode_literals
+
+from django.db import migrations
+import django.db.models.deletion
+import sentry.db.models.fields.foreignkey
+
+class Migration(migrations.Migration):
+    # This flag is used to mark that a migration shouldn't be automatically run in
+    # production. We set this to True for operations that we think are risky and want
+    # someone from ops to run manually and monitor.
+    # General advice is that if in doubt, mark your migration as `is_dangerous`.
+    # Some things you should always mark as dangerous:
+    # - Large data migrations. Typically we want these to be run manually by ops so that
+    #   they can be monitored. Since data migrations will now hold a transaction open
+    #   this is even more important.
+    # - Adding columns to highly active tables, even ones that are NULL.
+    is_dangerous = False
+
+    # This flag is used to decide whether to run this migration in a transaction or not.
+    # By default we prefer to run in a transaction, but for migrations where you want
+    # to `CREATE INDEX CONCURRENTLY` this needs to be set to False. Typically you'll
+    # want to create an index concurrently when adding one to an existing table.
+    atomic = False
+
+
+    dependencies = [
+        ('sentry', '0062_key_transactions_unique_with_owner'),
+    ]
+
+    operations = [
+        migrations.SeparateDatabaseAndState(
+            database_operations=[
+                migrations.RunSQL("""
+                    ALTER TABLE sentry_alertrule DROP CONSTRAINT IF EXISTS sentry_alertrule_organization_id_382634eccd5f9371_uniq;
+                    """,
+                    reverse_sql="""DO $$
+                    BEGIN
+                        BEGIN
+                            ALTER TABLE sentry_alertrule ADD CONSTRAINT sentry_alertrule_organization_id_382634eccd5f9371_uniq UNIQUE (organization_id, name);
+                        EXCEPTION
+                            WHEN duplicate_table THEN
+                        END;
+                    END $$;
+                    """
+                ),
+            ],
+            state_operations=[
+            ],
+        ),
+    ]
