commit 51aa646cf9d5bf1dbc726aec6cd9918ed4282a9d
Author: Evan Purkhiser <evanpurkhiser@gmail.com>
Date:   Thu Apr 11 12:36:48 2019 -0700

    ref(ui): Handle general-docs redirect in Platform docs (#12723)
    
    There are currently two paths into the post-project 'configuration'
    documentation:
    
      1. After setting up a project through the onboarding flow, this renders
         the 'Configure' component, which renders the 'Platform' component.
         Before this change the Configure component would handle redirecting
         to the generic 'getting-started' flow if no platform was slected.
    
      2. After setting up a project normally (through the create project
         buttons) we redirect directly to a route rendering the Platform
         component. Before this change, passing a 'other' platform would
         error out.
    
    The redirect logic has moved from the Configure component to the
    Platform component, to cover both these scenarios.
    
    Fixes: GROW2-48

diff --git a/src/sentry/static/sentry/app/views/onboarding/configure/index.jsx b/src/sentry/static/sentry/app/views/onboarding/configure/index.jsx
index 1d698c30bd..6b022f0070 100644
--- a/src/sentry/static/sentry/app/views/onboarding/configure/index.jsx
+++ b/src/sentry/static/sentry/app/views/onboarding/configure/index.jsx
@@ -42,11 +42,6 @@ const Configure = createReactClass({
 
     data.org_id = parseInt(organization.id, 10);
     analytics('onboarding.configure_viewed', data);
-
-    //redirect if platform is not known.
-    if (!params.platform || params.platform === 'other') {
-      this.redirectToNeutralDocs();
-    }
     this.sentRealEvent();
   },
 
@@ -85,17 +80,6 @@ const Configure = createReactClass({
     this.redirectUrl();
   },
 
-  redirectToNeutralDocs() {
-    const {orgId, projectId} = this.props.params;
-    const {organization} = this.context;
-
-    const url = new Set(organization.features).has('sentry10')
-      ? `/organizations/${orgId}/projects/${projectId}/getting-started/`
-      : `/${orgId}/${projectId}/getting-started/`;
-
-    browserHistory.push(url);
-  },
-
   render() {
     const {orgId, projectId} = this.props.params;
     const {hasSentRealEvent} = this.state;
diff --git a/src/sentry/static/sentry/app/views/projectInstall/platform.jsx b/src/sentry/static/sentry/app/views/projectInstall/platform.jsx
index 297b498dfe..d9f6c662e2 100644
--- a/src/sentry/static/sentry/app/views/projectInstall/platform.jsx
+++ b/src/sentry/static/sentry/app/views/projectInstall/platform.jsx
@@ -1,10 +1,10 @@
 import {Box, Flex} from 'grid-emotion';
+import {browserHistory} from 'react-router';
 import PropTypes from 'prop-types';
 import React from 'react';
 import createReactClass from 'create-react-class';
 import styled from 'react-emotion';
 
-import SentryTypes from 'app/sentryTypes';
 import {Panel, PanelBody, PanelHeader} from 'app/components/panels';
 import {t, tct} from 'app/locale';
 import ApiMixin from 'app/mixins/apiMixin';
@@ -13,6 +13,7 @@ import Link from 'app/components/link';
 import LoadingError from 'app/components/loadingError';
 import LoadingIndicator from 'app/components/loadingIndicator';
 import NotFound from 'app/components/errors/notFound';
+import SentryTypes from 'app/sentryTypes';
 import TextBlock from 'app/views/settings/components/text/textBlock';
 import withOrganization from 'app/utils/withOrganization';
 
@@ -67,6 +68,13 @@ const ProjectInstallPlatform = createReactClass({
   componentDidMount() {
     this.fetchData();
     window.scrollTo(0, 0);
+
+    const {platform} = this.props.params;
+
+    //redirect if platform is not known.
+    if (!platform || platform === 'other') {
+      this.redirectToNeutralDocs();
+    }
   },
 
   componentWillReceiveProps(nextProps) {
@@ -109,6 +117,17 @@ const ProjectInstallPlatform = createReactClass({
     );
   },
 
+  redirectToNeutralDocs() {
+    const {orgId, projectId} = this.props.params;
+    const {organization} = this.props;
+
+    const url = new Set(organization.features).has('sentry10')
+      ? `/organizations/${orgId}/projects/${projectId}/getting-started/`
+      : `/${orgId}/${projectId}/getting-started/`;
+
+    browserHistory.push(url);
+  },
+
   render() {
     const {integration, platform} = this.state;
     const {
diff --git a/tests/js/spec/views/onboarding/configure/__snapshots__/index.spec.jsx.snap b/tests/js/spec/views/onboarding/configure/__snapshots__/index.spec.jsx.snap
index f383d3cf27..1771600b78 100644
--- a/tests/js/spec/views/onboarding/configure/__snapshots__/index.spec.jsx.snap
+++ b/tests/js/spec/views/onboarding/configure/__snapshots__/index.spec.jsx.snap
@@ -1,282 +1,5 @@
 // Jest Snapshot v1, https://goo.gl/fbAQLP
 
-exports[`Configure should render correctly render() should redirect to if no matching platform 1`] = `
-<Configure
-  next={[Function]}
-  params={
-    Object {
-      "orgId": "testOrg",
-      "platform": "other",
-      "projectId": "project-slug",
-    }
-  }
->
-  <div>
-    <div
-      className="onboarding-Configure"
-    >
-      <h2
-        style={
-          Object {
-            "marginBottom": 30,
-          }
-        }
-      >
-        Configure your application
-        <withApi(CreateSampleEvent)
-          params={
-            Object {
-              "orgId": "testOrg",
-              "platform": "other",
-              "projectId": "project-slug",
-            }
-          }
-          source="header"
-        >
-          <CreateSampleEvent
-            api={Client {}}
-            params={
-              Object {
-                "orgId": "testOrg",
-                "platform": "other",
-                "projectId": "project-slug",
-              }
-            }
-            source="header"
-          >
-            <div
-              className="pull-right"
-            >
-              <StyledButton
-                onClick={[Function]}
-                priority="primary"
-              >
-                <Button
-                  className="css-1lewl16-StyledButton eadl9o50"
-                  disabled={false}
-                  onClick={[Function]}
-                  priority="primary"
-                >
-                  <StyledButton
-                    aria-disabled={false}
-                    aria-label="Or See Sample Event"
-                    className="css-1lewl16-StyledButton eadl9o50"
-                    disabled={false}
-                    onClick={[Function]}
-                    priority="primary"
-                    role="button"
-                  >
-                    <Component
-                      aria-disabled={false}
-                      aria-label="Or See Sample Event"
-                      className="eadl9o50 css-w2sk1s-StyledButton-getColors-StyledButton eqrebog0"
-                      onClick={[Function]}
-                      role="button"
-                    >
-                      <button
-                        aria-disabled={false}
-                        aria-label="Or See Sample Event"
-                        className="eadl9o50 css-w2sk1s-StyledButton-getColors-StyledButton eqrebog0"
-                        onClick={[Function]}
-                        role="button"
-                      >
-                        <ButtonLabel
-                          priority="primary"
-                        >
-                          <Component
-                            className="css-ga4b18-ButtonLabel eqrebog1"
-                            priority="primary"
-                          >
-                            <span
-                              className="css-ga4b18-ButtonLabel eqrebog1"
-                            >
-                              Or See Sample Event
-                            </span>
-                          </Component>
-                        </ButtonLabel>
-                      </button>
-                    </Component>
-                  </StyledButton>
-                </Button>
-              </StyledButton>
-            </div>
-          </CreateSampleEvent>
-        </withApi(CreateSampleEvent)>
-      </h2>
-      <withProjects(withRouter(ProjectContext))
-        orgId="testOrg"
-        projectId="project-slug"
-        style={
-          Object {
-            "marginBottom": 30,
-          }
-        }
-      >
-        <withRouter(ProjectContext)
-          orgId="testOrg"
-          projectId="project-slug"
-          projects={
-            Array [
-              Object {
-                "hasAccess": true,
-                "id": "testProject",
-                "isBookmarked": false,
-                "isMember": true,
-                "name": "Test Project",
-                "slug": "project-slug",
-                "teams": Array [
-                  Object {
-                    "hasAccess": true,
-                    "id": "coolid",
-                    "slug": "coolteam",
-                  },
-                ],
-              },
-            ]
-          }
-          style={
-            Object {
-              "marginBottom": 30,
-            }
-          }
-        >
-          <ProjectContext
-            location={
-              Object {
-                "query": Object {},
-              }
-            }
-            orgId="testOrg"
-            projectId="project-slug"
-            projects={
-              Array [
-                Object {
-                  "hasAccess": true,
-                  "id": "testProject",
-                  "isBookmarked": false,
-                  "isMember": true,
-                  "name": "Test Project",
-                  "slug": "project-slug",
-                  "teams": Array [
-                    Object {
-                      "hasAccess": true,
-                      "id": "coolid",
-                      "slug": "coolteam",
-                    },
-                  ],
-                },
-              ]
-            }
-            router={
-              Object {
-                "createHref": [MockFunction],
-                "go": [MockFunction],
-                "goBack": [MockFunction],
-                "goForward": [MockFunction],
-                "isActive": [MockFunction],
-                "listen": [MockFunction],
-                "location": Object {
-                  "query": Object {},
-                },
-                "push": [MockFunction],
-                "replace": [MockFunction],
-                "setRouteLeaveHook": [MockFunction],
-              }
-            }
-            style={
-              Object {
-                "marginBottom": 30,
-              }
-            }
-          >
-            <SideEffect(DocumentTitle)
-              title="project-slug"
-            >
-              <DocumentTitle
-                title="project-slug"
-              >
-                <div
-                  className="loading-full-layout"
-                >
-                  <LoadingIndicator>
-                    <div
-                      className="loading"
-                    >
-                      <div
-                        className="loading-indicator"
-                        style={Object {}}
-                      />
-                      <div
-                        className="loading-message"
-                      />
-                    </div>
-                  </LoadingIndicator>
-                </div>
-              </DocumentTitle>
-            </SideEffect(DocumentTitle)>
-          </ProjectContext>
-        </withRouter(ProjectContext)>
-      </withProjects(withRouter(ProjectContext))>
-      <DoneButton>
-        <div
-          className="css-5mss3k-DoneButton e1chtmge0"
-        >
-          <Button
-            data-test-id="configure-done"
-            disabled={false}
-            onClick={[Function]}
-            priority="primary"
-          >
-            <StyledButton
-              aria-disabled={false}
-              aria-label="All done!"
-              data-test-id="configure-done"
-              disabled={false}
-              onClick={[Function]}
-              priority="primary"
-              role="button"
-            >
-              <Component
-                aria-disabled={false}
-                aria-label="All done!"
-                className="css-1msljz8-StyledButton-getColors eqrebog0"
-                data-test-id="configure-done"
-                onClick={[Function]}
-                role="button"
-              >
-                <button
-                  aria-disabled={false}
-                  aria-label="All done!"
-                  className="css-1msljz8-StyledButton-getColors eqrebog0"
-                  data-test-id="configure-done"
-                  onClick={[Function]}
-                  role="button"
-                >
-                  <ButtonLabel
-                    priority="primary"
-                  >
-                    <Component
-                      className="css-ga4b18-ButtonLabel eqrebog1"
-                      priority="primary"
-                    >
-                      <span
-                        className="css-ga4b18-ButtonLabel eqrebog1"
-                      >
-                        All done!
-                      </span>
-                    </Component>
-                  </ButtonLabel>
-                </button>
-              </Component>
-            </StyledButton>
-          </Button>
-        </div>
-      </DoneButton>
-    </div>
-  </div>
-</Configure>
-`;
-
 exports[`Configure should render correctly render() should render platform docs 1`] = `
 <Configure
   next={[Function]}
@@ -928,68 +651,3 @@ exports[`Configure should render correctly render() should render platform docs
   </div>
 </Configure>
 `;
-
-exports[`Configure should render correctly render() shouldn't redirect for a found platform 1`] = `
-<div>
-  <div
-    className="onboarding-Configure"
-  >
-    <h2
-      style={
-        Object {
-          "marginBottom": 30,
-        }
-      }
-    >
-      Configure your application
-      <withApi(CreateSampleEvent)
-        params={
-          Object {
-            "orgId": "testOrg",
-            "platform": "node",
-            "projectId": "project-slug",
-          }
-        }
-        source="header"
-      />
-    </h2>
-    <withProjects(withRouter(ProjectContext))
-      orgId="testOrg"
-      projectId="project-slug"
-      style={
-        Object {
-          "marginBottom": 30,
-        }
-      }
-    >
-      <ProjectDocsContext>
-        <WithOrganizationMockWrapper
-          linkPath={[Function]}
-          params={
-            Object {
-              "orgId": "testOrg",
-              "platform": "node",
-              "projectId": "project-slug",
-            }
-          }
-          platformData={
-            Object {
-              "hack": "actually set by ProjectDocsContext, this object is here to avoid proptypes warnings",
-            }
-          }
-        />
-      </ProjectDocsContext>
-    </withProjects(withRouter(ProjectContext))>
-    <DoneButton>
-      <Button
-        data-test-id="configure-done"
-        disabled={false}
-        onClick={[Function]}
-        priority="primary"
-      >
-        All done!
-      </Button>
-    </DoneButton>
-  </div>
-</div>
-`;
diff --git a/tests/js/spec/views/onboarding/configure/index.spec.jsx b/tests/js/spec/views/onboarding/configure/index.spec.jsx
index 829387bd32..aa0b424834 100644
--- a/tests/js/spec/views/onboarding/configure/index.spec.jsx
+++ b/tests/js/spec/views/onboarding/configure/index.spec.jsx
@@ -1,5 +1,5 @@
 import React from 'react';
-import {shallow, mount} from 'enzyme';
+import {mount} from 'enzyme';
 
 import Configure from 'app/views/onboarding/configure';
 import ProjectsStore from 'app/stores/projectsStore';
@@ -87,68 +87,6 @@ describe('Configure should render correctly', function() {
       },
     };
 
-    it("shouldn't redirect for a found platform", function() {
-      const props = {
-        ...baseProps,
-      };
-      props.params.platform = 'node';
-
-      const wrapper = shallow(
-        <Configure {...props} />,
-        TestStubs.routerContext([
-          {
-            organization: {
-              id: '1337',
-              slug: 'testOrg',
-              teams: [['project-slug']],
-              projects: [],
-            },
-          },
-        ])
-      );
-
-      const component = wrapper.instance();
-
-      const handleSubmitStub = jest
-        .spyOn(component, 'redirectToNeutralDocs')
-        .mockImplementation(() => {});
-
-      wrapper.update();
-      expect(wrapper).toMatchSnapshot();
-      expect(handleSubmitStub).toHaveBeenCalledTimes(0);
-    });
-
-    it('should redirect to if no matching platform', function() {
-      const props = {
-        ...baseProps,
-      };
-      props.params.platform = 'other';
-
-      const handleSubmitStub = jest.spyOn(Configure.prototype, 'redirectToNeutralDocs');
-
-      // 👺 ⚠️ this is a hack to defeat the method auto binding so we can fully stub the method. It would not be neccessary with es6 class components and it relies on react internals so it's fragile - maxbittker
-      const index =
-        Configure.prototype.__reactAutoBindPairs.indexOf('redirectToNeutralDocs') + 1;
-      Configure.prototype.__reactAutoBindPairs[index] = handleSubmitStub;
-
-      const wrapper = mount(
-        <Configure {...props} />,
-        TestStubs.routerContext([
-          {
-            organization: {
-              id: '1337',
-              slug: 'testOrg',
-              teams: [['project-slug']],
-              projects: [],
-            },
-          },
-        ])
-      );
-
-      expect(wrapper).toMatchSnapshot();
-      expect(handleSubmitStub).toHaveBeenCalledTimes(1);
-    });
-
     it('should render platform docs', async function() {
       const props = {
         ...baseProps,
diff --git a/tests/js/spec/views/projectInstall/platform.spec.jsx b/tests/js/spec/views/projectInstall/platform.spec.jsx
index 6322881fba..4561c84558 100644
--- a/tests/js/spec/views/projectInstall/platform.spec.jsx
+++ b/tests/js/spec/views/projectInstall/platform.spec.jsx
@@ -1,5 +1,5 @@
 import React from 'react';
-import {shallow} from 'enzyme';
+import {shallow, mount} from 'enzyme';
 
 import {ProjectInstallPlatform} from 'app/views/projectInstall/platform';
 
@@ -49,6 +49,42 @@ describe('ProjectInstallPlatform', function() {
       },
     };
 
+    it('should redirect to if no matching platform', function() {
+      const props = {
+        ...baseProps,
+        params: {
+          orgId: baseProps.organization.slug,
+          projectId: baseProps.project.slug,
+          platform: 'other',
+        },
+      };
+
+      MockApiClient.addMockResponse({
+        url: '/projects/org-slug/project-slug/docs/other/',
+        body: {},
+      });
+
+      const handleRedirectStub = jest.spyOn(
+        ProjectInstallPlatform.prototype,
+        'redirectToNeutralDocs'
+      );
+
+      // XXX(maxbittker) this is a hack to defeat the method auto binding so we
+      // can fully stub the method. It would not be neccessary with es6 class
+      // components and it relies on react internals so it's fragile
+      const index =
+        ProjectInstallPlatform.prototype.__reactAutoBindPairs.indexOf(
+          'redirectToNeutralDocs'
+        ) + 1;
+      ProjectInstallPlatform.prototype.__reactAutoBindPairs[index] = handleRedirectStub;
+
+      mount(<ProjectInstallPlatform {...props} />, {
+        organization: {id: '1337'},
+      });
+
+      expect(handleRedirectStub).toHaveBeenCalledTimes(1);
+    });
+
     it('should render NotFound if no matching integration/platform', function() {
       const props = {
         ...baseProps,
