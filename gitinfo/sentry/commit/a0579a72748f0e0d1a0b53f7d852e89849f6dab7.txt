commit a0579a72748f0e0d1a0b53f7d852e89849f6dab7
Author: David Cramer <dcramer@gmail.com>
Date:   Tue Aug 11 00:59:59 2015 -0700

    Add firstEvent and lastEvent to release serializer

diff --git a/src/sentry/api/serializers/models/release.py b/src/sentry/api/serializers/models/release.py
index 9784771a74..d2a42bf30e 100644
--- a/src/sentry/api/serializers/models/release.py
+++ b/src/sentry/api/serializers/models/release.py
@@ -1,11 +1,27 @@
 from __future__ import absolute_import
 
 from sentry.api.serializers import Serializer, register
-from sentry.models import Release
+from sentry.models import Release, TagValue
 
 
 @register(Release)
 class ReleaseSerializer(Serializer):
+    def get_attrs(self, item_list, user):
+        tags = {
+            tk.value: tk
+            for tk in TagValue.objects.filter(
+                project=item_list[0].project,
+                key='sentry:release',
+                value__in=[o.version for o in item_list],
+            )
+        }
+        result = {}
+        for item in item_list:
+            result[item] = {
+                'tag': tags.get(item.version),
+            }
+        return result
+
     def serialize(self, obj, attrs, user):
         d = {
             'version': obj.version,
@@ -18,4 +34,14 @@ class ReleaseSerializer(Serializer):
             'data': obj.data,
             'newGroups': obj.new_groups,
         }
+        if attrs['tag']:
+            d.update({
+                'lastEvent': attrs['tag'].last_seen,
+                'firstEvent': attrs['tag'].first_seen,
+            })
+        else:
+            d.update({
+                'lastEvent': None,
+                'firstEvent': None,
+            })
         return d
diff --git a/tests/sentry/api/serializers/test_release.py b/tests/sentry/api/serializers/test_release.py
new file mode 100644
index 0000000000..b43c096ec0
--- /dev/null
+++ b/tests/sentry/api/serializers/test_release.py
@@ -0,0 +1,48 @@
+# -*- coding: utf-8 -*-
+
+from __future__ import absolute_import
+
+from django.utils import timezone
+from uuid import uuid4
+
+from sentry.api.serializers import serialize
+from sentry.models import Release, TagValue
+from sentry.testutils import TestCase
+
+
+class ReleaseSerializerTest(TestCase):
+    def test_simple(self):
+        user = self.create_user()
+        project = self.create_project()
+        release = Release.objects.create(
+            project=project,
+            version=uuid4().hex,
+            new_groups=1,
+        )
+        tagvalue = TagValue.objects.create(
+            project=release.project,
+            key='sentry:release',
+            value=release.version,
+            first_seen=timezone.now(),
+            last_seen=timezone.now(),
+            times_seen=5,
+        )
+
+        result = serialize(release, user)
+        assert result['version'] == release.version
+        assert result['newGroups'] == 1
+        assert result['firstEvent']
+        assert result['lastEvent']
+
+    def test_no_tag_data(self):
+        user = self.create_user()
+        project = self.create_project()
+        release = Release.objects.create(
+            project=project,
+            version=uuid4().hex,
+        )
+
+        result = serialize(release, user)
+        assert result['version'] == release.version
+        assert not result['firstEvent']
+        assert not result['lastEvent']
