commit b3d1011ed06644e659c2ace65d9ba3edf45fa64d
Author: Jess MacQueen <jess@getsentry.com>
Date:   Tue Oct 10 14:44:58 2017 -0700

    ref(events): Move get_interfaces from event model

diff --git a/src/sentry/interfaces/base.py b/src/sentry/interfaces/base.py
index 4c49e02ea5..b56962dcf2 100644
--- a/src/sentry/interfaces/base.py
+++ b/src/sentry/interfaces/base.py
@@ -1,12 +1,14 @@
 from __future__ import absolute_import
 
 import six
+from collections import OrderedDict
 
 from django.conf import settings
 from django.utils.translation import ugettext as _
 
 from sentry.utils.html import escape
 from sentry.utils.imports import import_string
+from sentry.utils.safe import safe_execute
 
 
 def iter_interfaces():
@@ -34,6 +36,27 @@ def get_interface(name):
     return interface
 
 
+def get_interfaces(data):
+    result = []
+    for key, data in six.iteritems(data):
+        try:
+            cls = get_interface(key)
+        except ValueError:
+            continue
+
+        value = safe_execute(
+            cls.to_python, data, _with_transaction=False
+        )
+        if not value:
+            continue
+
+        result.append((key, value))
+
+    return OrderedDict(
+        (k, v) for k, v in sorted(result, key=lambda x: x[1].get_score(), reverse=True)
+    )
+
+
 class InterfaceValidationError(Exception):
     pass
 
diff --git a/src/sentry/models/event.py b/src/sentry/models/event.py
index aa6de70afb..3764f9c7c0 100644
--- a/src/sentry/models/event.py
+++ b/src/sentry/models/event.py
@@ -20,9 +20,8 @@ from sentry import eventtypes
 from sentry.db.models import (
     BaseManager, BoundedBigIntegerField, BoundedIntegerField, Model, NodeField, sane_repr
 )
-from sentry.interfaces.base import get_interface
+from sentry.interfaces.base import get_interfaces
 from sentry.utils.cache import memoize
-from sentry.utils.safe import safe_execute
 from sentry.utils.strings import truncatechars
 
 
@@ -161,22 +160,7 @@ class Event(Model):
         return None
 
     def get_interfaces(self):
-        result = []
-        for key, data in six.iteritems(self.data):
-            try:
-                cls = get_interface(key)
-            except ValueError:
-                continue
-
-            value = safe_execute(cls.to_python, data, _with_transaction=False)
-            if not value:
-                continue
-
-            result.append((key, value))
-
-        return OrderedDict(
-            (k, v) for k, v in sorted(result, key=lambda x: x[1].get_score(), reverse=True)
-        )
+        return get_interfaces(self.data)
 
     @memoize
     def interfaces(self):
