commit 4205e01ed93a52313026dadc67a460ee45795e0e
Author: David Cramer <dcramer@gmail.com>
Date:   Thu Nov 15 02:10:14 2012 -0800

    Additional tests for various behavior

diff --git a/src/sentry/static/sentry/coffee/views.coffee b/src/sentry/static/sentry/coffee/views.coffee
index 18200aefb2..aa84a584f5 100644
--- a/src/sentry/static/sentry/coffee/views.coffee
+++ b/src/sentry/static/sentry/coffee/views.coffee
@@ -12,7 +12,7 @@ jQuery ->
             @$wrapper = $('#' + @id)
             @$parent = $('<ul></ul>')
             @$empty = $('<li class="empty"></li>')
-            @loaded = data.members ? false
+            @loaded = if data.members then true else false
             if @loaded
                 @$empty.html(@emptyMessage)
             else
diff --git a/src/sentry/static/sentry/scripts/site.js b/src/sentry/static/sentry/scripts/site.js
index de3ef1374f..e58b87c09c 100644
--- a/src/sentry/static/sentry/scripts/site.js
+++ b/src/sentry/static/sentry/scripts/site.js
@@ -438,12 +438,12 @@
       OrderedElementsView.prototype.loadingMessage = $('<p>Loading...</p>');
 
       OrderedElementsView.prototype.initialize = function(data) {
-        var _ref, _ref1;
+        var _ref;
         _.bindAll(this);
         this.$wrapper = $('#' + this.id);
         this.$parent = $('<ul></ul>');
         this.$empty = $('<li class="empty"></li>');
-        this.loaded = (_ref = data.members) != null ? _ref : false;
+        this.loaded = data.members ? true : false;
         if (this.loaded) {
           this.$empty.html(this.emptyMessage);
         } else {
@@ -455,7 +455,7 @@
           this.$parent.addClass(data.className);
         }
         this.config = {
-          maxItems: (_ref1 = data.maxItems) != null ? _ref1 : 50
+          maxItems: (_ref = data.maxItems) != null ? _ref : 50
         };
         this.collection = new app.ScoredList;
         this.collection.add(data.members || []);
diff --git a/tests/js/spec/OrderedElementsViewSpec.js b/tests/js/spec/OrderedElementsViewSpec.js
index 1eadbcb5fe..90af55fb77 100644
--- a/tests/js/spec/OrderedElementsViewSpec.js
+++ b/tests/js/spec/OrderedElementsViewSpec.js
@@ -25,24 +25,39 @@ describe("OrderedElementsView", function() {
   var group3;
   var group4;
 
-  beforeEach(function() {
-    view = new app.OrderedElementsView({
-        id: 'foo',
-        maxItems: 3
+  describe("without initial members", function() {
+    beforeEach(function() {
+      view = new app.OrderedElementsView({
+          id: 'foo'
+      });
+      view.$parent = $('<ul></ul>');
     });
-    view.$parent = $('<ul></ul>');
-  });
 
-  describe("with initial data", function() {
+    it("should suggest its not loaded", function() {
+      expect(view.loaded).toBe(false);
+    });
 
+    it("has status text to loading", function() {
+      expect(view.$empty.html()).toBe(view.loadingMessage.parent().html());
+    });
   });
 
-  it("should suggest its not loaded", function() {
-    expect(view.loaded).toBe(false);
-  });
+  describe("with initial members", function() {
+    beforeEach(function() {
+      group1 = make_group({id: 1, score: 3});
+      view = new app.OrderedElementsView({
+          id: 'foo',
+          members: [group1]
+      });
+    });
+
+    it("should suggest its loaded", function() {
+      expect(view.loaded).toBe(true);
+    });
 
-  it("has status text to loading", function() {
-    expect(view.$empty.html()).toBe(view.loadingMessage.parent().html());
+    it("has status text to loading", function() {
+      expect(view.$empty.html()).not.toBe(view.loadingMessage.parent().html());
+    });
   });
 
   describe(".load", function() {
@@ -50,6 +65,9 @@ describe("OrderedElementsView", function() {
     describe("with data", function(){
       beforeEach(function(){
         group1 = make_group({id: 1, score: 3});
+        view = new app.OrderedElementsView({
+            id: 'foo'
+        });
         view.extend = sinon.spy();
         view.load([group1]);
       });
@@ -70,6 +88,9 @@ describe("OrderedElementsView", function() {
 
     describe("without data", function(){
       beforeEach(function(){
+        view = new app.OrderedElementsView({
+            id: 'foo'
+        });
         group1 = make_group({id: 1, score: 3});
         view.extend = sinon.spy();
         view.load([]);
@@ -91,11 +112,17 @@ describe("OrderedElementsView", function() {
   });
 
   describe(".extend", function() {
+    beforeEach(function(){
+      view = new app.OrderedElementsView({
+          id: 'foo'
+      });
+      view.addMember = sinon.spy();
+    });
+
     it("calls addMember for each item", function() {
       group1 = make_group({id: 1, score: 3});
       group2 = make_group({id: 2, score: 5});
 
-      view.addMember = sinon.spy();
       view.extend([group1, group2]);
       expect(view.addMember.callCount).toBe(2);
       expect(view.addMember.calledWithExactly(group1)).toBe(true);
@@ -104,6 +131,13 @@ describe("OrderedElementsView", function() {
   });
 
   describe(".addMember", function() {
+    beforeEach(function(){
+      view = new app.OrderedElementsView({
+          id: 'foo',
+          maxItems: 3
+      });
+    });
+
     it("adds to collection", function() {
       group = make_group();
       view.addMember(group);
@@ -143,6 +177,11 @@ describe("OrderedElementsView", function() {
 
   describe(".renderMemberInContainer", function() {
     beforeEach(function(){
+      view = new app.OrderedElementsView({
+          id: 'foo',
+          maxItems: 3
+      });
+
       group1 = make_group({id: 1, score: 3});
       group2 = make_group({id: 2, score: 5});
       group3 = make_group({id: 3, score: 2});
