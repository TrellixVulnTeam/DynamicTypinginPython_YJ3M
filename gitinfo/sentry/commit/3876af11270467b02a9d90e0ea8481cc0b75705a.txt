commit 3876af11270467b02a9d90e0ea8481cc0b75705a
Author: David Cramer <dcramer@gmail.com>
Date:   Mon Mar 20 18:18:24 2017 -0700

    [api] fix explicit scope order

diff --git a/src/sentry/models/apikey.py b/src/sentry/models/apikey.py
index 7867e7e63d..357a8c3783 100644
--- a/src/sentry/models/apikey.py
+++ b/src/sentry/models/apikey.py
@@ -10,7 +10,6 @@ from __future__ import absolute_import, print_function
 import six
 
 from bitfield import BitField
-from django.conf import settings
 from django.db import models
 from django.utils import timezone
 from django.utils.translation import ugettext_lazy as _
@@ -34,7 +33,24 @@ class ApiKey(Model):
     organization = FlexibleForeignKey('sentry.Organization', related_name='key_set')
     label = models.CharField(max_length=64, blank=True, default='Default')
     key = models.CharField(max_length=32, unique=True)
-    scopes = BitField(flags=tuple((k, k) for k in settings.SENTRY_SCOPES))
+    scopes = BitField(flags=(
+        ('project:read', 'project:read'),
+        ('project:write', 'project:write'),
+        ('project:admin', 'project:admin'),
+        ('project:releases', 'project:releases'),
+        ('team:read', 'team:read'),
+        ('team:write', 'team:write'),
+        ('team:admin', 'team:admin'),
+        ('event:read', 'event:read'),
+        ('event:write', 'event:write'),
+        ('event:admin', 'event:admin'),
+        ('org:read', 'org:read'),
+        ('org:write', 'org:write'),
+        ('org:admin', 'org:admin'),
+        ('member:read', 'member:read'),
+        ('member:write', 'member:write'),
+        ('member:admin', 'member:admin'),
+    ))
     status = BoundedPositiveIntegerField(default=0, choices=(
         (ApiKeyStatus.ACTIVE, _('Active')),
         (ApiKeyStatus.INACTIVE, _('Inactive')),
diff --git a/src/sentry/models/apitoken.py b/src/sentry/models/apitoken.py
index 87392577f0..7ff16505c8 100644
--- a/src/sentry/models/apitoken.py
+++ b/src/sentry/models/apitoken.py
@@ -4,7 +4,6 @@ import six
 
 from bitfield import BitField
 from datetime import timedelta
-from django.conf import settings
 from django.db import IntegrityError, models, transaction
 from django.utils import timezone
 from uuid import uuid4
@@ -31,7 +30,24 @@ class ApiToken(Model):
     expires_at = models.DateTimeField(
         null=True,
         default=lambda: timezone.now() + DEFAULT_EXPIRATION)
-    scopes = BitField(flags=tuple((k, k) for k in settings.SENTRY_SCOPES))
+    scopes = BitField(flags=(
+        ('project:read', 'project:read'),
+        ('project:write', 'project:write'),
+        ('project:admin', 'project:admin'),
+        ('project:releases', 'project:releases'),
+        ('team:read', 'team:read'),
+        ('team:write', 'team:write'),
+        ('team:admin', 'team:admin'),
+        ('event:read', 'event:read'),
+        ('event:write', 'event:write'),
+        ('event:admin', 'event:admin'),
+        ('org:read', 'org:read'),
+        ('org:write', 'org:write'),
+        ('org:admin', 'org:admin'),
+        ('member:read', 'member:read'),
+        ('member:write', 'member:write'),
+        ('member:admin', 'member:admin'),
+    ))
     date_added = models.DateTimeField(default=timezone.now)
 
     objects = BaseManager(cache_fields=(
