commit 637006f7042fb9d27aaf1b4cf2be33643e57dd13
Author: MeredithAnya <meredith@getsentry.com>
Date:   Tue May 28 13:19:20 2019 -0700

    ref(app-platform): Add internal integrations to main integrations page  (#13343)
    
    * tests

diff --git a/src/sentry/static/sentry/app/views/organizationIntegrations/index.jsx b/src/sentry/static/sentry/app/views/organizationIntegrations/index.jsx
index 42d4ad1d60..caaaa84dad 100644
--- a/src/sentry/static/sentry/app/views/organizationIntegrations/index.jsx
+++ b/src/sentry/static/sentry/app/views/organizationIntegrations/index.jsx
@@ -14,6 +14,7 @@ import MigrationWarnings from 'app/views/organizationIntegrations/migrationWarni
 import PermissionAlert from 'app/views/settings/organization/permissionAlert';
 import ProviderRow from 'app/views/organizationIntegrations/providerRow';
 import SentryAppInstallations from 'app/views/organizationIntegrations/sentryAppInstallations';
+import SentryApplicationRow from 'app/views/settings/organizationDeveloperSettings/sentryApplicationRow';
 import SentryTypes from 'app/sentryTypes';
 import SettingsPageHeader from 'app/views/settings/components/settingsPageHeader';
 import withOrganization from 'app/utils/withOrganization';
@@ -165,6 +166,21 @@ class OrganizationIntegrations extends AsyncComponent {
     );
   }
 
+  renderInternalSentryApps(app, key) {
+    const {organization} = this.props;
+    return (
+      <SentryApplicationRow
+        key={`sentry-app-row-${key}`}
+        data-test-id="internal-integration-row"
+        api={this.api}
+        showPublishStatus
+        isInternal
+        organization={organization}
+        app={app}
+      />
+    );
+  }
+
   renderBody() {
     const {reloading, orgOwnedApps, publishedApps, appInstalls} = this.state;
     const published = publishedApps || [];
@@ -173,7 +189,10 @@ class OrganizationIntegrations extends AsyncComponent {
     const orgOwned = orgOwnedApps.filter(app => {
       return !published.find(p => p.slug == app.slug);
     });
-    const applications = published.concat(orgOwned);
+    const orgOwnedInternal = orgOwned.filter(app => {
+      return app.status === 'internal';
+    });
+    const applications = published.concat(orgOwned.filter(a => a.status !== 'internal'));
 
     const installedProviders = this.providers
       .filter(p => p.isInstalled)
@@ -191,6 +210,10 @@ class OrganizationIntegrations extends AsyncComponent {
       .filter(a => !appInstalls.find(i => i.app.slug === a.slug))
       .map(a => [a.name, this.renderSentryApps([a], a.slug)]);
 
+    const internalSentryApps = (orgOwnedInternal || []).map(a => [
+      this.renderInternalSentryApps(a, a.slug),
+    ]);
+
     // Combine the list of Providers and Sentry Apps that have installations.
     const installed = installedProviders
       .concat(installedSentryApps)
@@ -226,6 +249,18 @@ class OrganizationIntegrations extends AsyncComponent {
             {uninstalled}
           </PanelBody>
         </Panel>
+
+        {internalSentryApps.length > 0 && (
+          <Panel>
+            <PanelHeader disablePadding>
+              <Box px={2} flex="1">
+                {t('Internal Integrations')}
+              </Box>
+              {reloading && <StyledLoadingIndicator mini />}
+            </PanelHeader>
+            <PanelBody>{internalSentryApps}</PanelBody>
+          </Panel>
+        )}
       </React.Fragment>
     );
   }
diff --git a/src/sentry/static/sentry/app/views/settings/organizationDeveloperSettings/sentryApplicationRow.jsx b/src/sentry/static/sentry/app/views/settings/organizationDeveloperSettings/sentryApplicationRow.jsx
index fadd4f7b1a..249b5afbe8 100644
--- a/src/sentry/static/sentry/app/views/settings/organizationDeveloperSettings/sentryApplicationRow.jsx
+++ b/src/sentry/static/sentry/app/views/settings/organizationDeveloperSettings/sentryApplicationRow.jsx
@@ -27,10 +27,12 @@ export default class SentryApplicationRow extends React.PureComponent {
     onUninstall: PropTypes.func,
     onRemoveApp: PropTypes.func,
     showPublishStatus: PropTypes.bool,
+    isInternal: PropTypes.bool,
   };
 
   static defaultProps = {
     showPublishStatus: false,
+    isInternal: false,
   };
 
   renderRemoveApp(app) {
@@ -67,6 +69,23 @@ export default class SentryApplicationRow extends React.PureComponent {
     );
   }
 
+  renderStatus() {
+    const {app, showPublishStatus, isInternal} = this.props;
+    const isInstalled = this.isInstalled;
+    if (isInternal) {
+      return <Status enabled isInternal />;
+    }
+    if (showPublishStatus) {
+      return <PublishStatus status={app.status} />;
+    }
+    return (
+      <React.Fragment>
+        <Status enabled={isInstalled} isInternal={false} />
+        <StyledLink onClick={this.openLearnMore}>{t('Learn More')}</StyledLink>
+      </React.Fragment>
+    );
+  }
+
   get isInstalled() {
     return this.props.installs && this.props.installs.length > 0;
   }
@@ -104,16 +123,7 @@ export default class SentryApplicationRow extends React.PureComponent {
               )}
               <BetaTag />
             </SentryAppName>
-            <SentryAppDetails>
-              {showPublishStatus ? (
-                <PublishStatus published={app.status === 'published'} />
-              ) : (
-                <React.Fragment>
-                  <Status enabled={isInstalled} />
-                  <StyledLink onClick={this.openLearnMore}>{t('Learn More')}</StyledLink>
-                </React.Fragment>
-              )}
-            </SentryAppDetails>
+            <SentryAppDetails>{this.renderStatus()}</SentryAppDetails>
           </SentryAppBox>
 
           {!showPublishStatus ? (
@@ -207,7 +217,7 @@ const StyledButton = styled(Button)`
 `;
 
 const Status = styled(
-  withTheme(({enabled, ...props}) => {
+  withTheme(({enabled, isInternal, ...props}) => {
     return (
       <Flex align="center">
         <CircleIndicator
@@ -223,7 +233,7 @@ const Status = styled(
   margin-left: ${space(0.5)};
   font-weight: light;
   &:after {
-    content: '|';
+    content: '${props => (props.isInternal ? '' : '|')}';
     color: ${p => p.theme.gray1};
     margin-left: ${space(0.75)};
     font-weight: normal;
@@ -231,14 +241,15 @@ const Status = styled(
   margin-right: ${space(0.75)};
 `;
 
-const PublishStatus = styled(({published, ...props}) => {
+const PublishStatus = styled(({status, ...props}) => {
   return (
     <Flex align="center">
-      <div {...props}>{published ? t('published') : t('unpublished')}</div>
+      <div {...props}>{t(`${status}`)}</div>
     </Flex>
   );
 })`
-  color: ${props => (props.published ? props.theme.success : props.theme.gray2)};
+  color: ${props =>
+    props.status === 'published' ? props.theme.success : props.theme.gray2};
   font-weight: light;
   margin-right: ${space(0.75)};
 `;
diff --git a/tests/js/spec/views/settings/organizationDeveloperSettings/index.spec.jsx b/tests/js/spec/views/settings/organizationDeveloperSettings/index.spec.jsx
index 9fb316c4a9..57d21de264 100644
--- a/tests/js/spec/views/settings/organizationDeveloperSettings/index.spec.jsx
+++ b/tests/js/spec/views/settings/organizationDeveloperSettings/index.spec.jsx
@@ -65,7 +65,7 @@ describe('Organization Developer Settings', function() {
 
     it('displays all Apps owned by the Org', () => {
       expect(wrapper.find('SentryApplicationRow').prop('app').name).toBe('Sample App');
-      expect(wrapper.find('PublishStatus').prop('published')).toBe(false);
+      expect(wrapper.find('PublishStatus').prop('status')).toBe('unpublished');
     });
 
     it('allows for deletion', async () => {
@@ -105,7 +105,7 @@ describe('Organization Developer Settings', function() {
     );
 
     it('shows the published status', () => {
-      expect(wrapper.find('PublishStatus').prop('published')).toBe(true);
+      expect(wrapper.find('PublishStatus').prop('status')).toBe('published');
     });
 
     it('trash button is disabled', () => {
diff --git a/tests/js/spec/views/settings/organizationIntegrations/__snapshots__/sentryAppInstallations.spec.jsx.snap b/tests/js/spec/views/settings/organizationIntegrations/__snapshots__/sentryAppInstallations.spec.jsx.snap
index 6c9196bb22..c1e962404e 100644
--- a/tests/js/spec/views/settings/organizationIntegrations/__snapshots__/sentryAppInstallations.spec.jsx.snap
+++ b/tests/js/spec/views/settings/organizationIntegrations/__snapshots__/sentryAppInstallations.spec.jsx.snap
@@ -76,6 +76,7 @@ exports[`Sentry App Installations when Apps exist displays all Apps owned by the
         "webhookUrl": "https://example.com/webhook",
       }
     }
+    isInternal={false}
     key="123456123456123456123456"
     onInstall={[Function]}
     onUninstall={[Function]}
@@ -237,12 +238,16 @@ exports[`Sentry App Installations when Apps exist displays all Apps owned by the
                             className="css-f0t6d-SentryAppDetails eac2pqx3"
                             is={null}
                           >
-                            <Status>
+                            <Status
+                              isInternal={false}
+                            >
                               <WithTheme(Component)
                                 className="css-lk5f1o-Status eac2pqx8"
+                                isInternal={false}
                               >
                                 <Component
                                   className="css-lk5f1o-Status eac2pqx8"
+                                  isInternal={false}
                                   theme={
                                     Object {
                                       "alert": Object {
diff --git a/tests/js/spec/views/settings/organizationIntegrations/index.spec.jsx b/tests/js/spec/views/settings/organizationIntegrations/index.spec.jsx
index 0d0451b631..c4d7916c07 100644
--- a/tests/js/spec/views/settings/organizationIntegrations/index.spec.jsx
+++ b/tests/js/spec/views/settings/organizationIntegrations/index.spec.jsx
@@ -265,6 +265,27 @@ describe('OrganizationIntegrations', () => {
       });
     });
 
+    describe('internal apps are separate', () => {
+      it('renders internal sentry app', () => {
+        const internalApp = {...sentryApp, status: 'internal'};
+        Client.addMockResponse({
+          url: `/organizations/${org.slug}/sentry-apps/`,
+          body: [internalApp],
+        });
+        Client.addMockResponse({
+          url: '/sentry-apps/',
+          body: [],
+        });
+        wrapper = mount(
+          <OrganizationIntegrations organization={org} params={params} />,
+          routerContext
+        );
+        expect(
+          wrapper.find('Panel [data-test-id="internal-integration-row"]').exists()
+        ).toBe(true);
+      });
+    });
+
     describe('with installed integrations', () => {
       let updatedIntegration;
 
