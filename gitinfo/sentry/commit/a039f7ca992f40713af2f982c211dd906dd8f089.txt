commit a039f7ca992f40713af2f982c211dd906dd8f089
Author: Jess MacQueen <jessmacqueen@gmail.com>
Date:   Wed Nov 7 15:02:37 2018 -0800

    fix(jira): Handle missing assignee field in webhook
    
    fixes SENTRY-7TT

diff --git a/src/sentry/integrations/jira/webhooks.py b/src/sentry/integrations/jira/webhooks.py
index 20357bbafa..de7ec80f11 100644
--- a/src/sentry/integrations/jira/webhooks.py
+++ b/src/sentry/integrations/jira/webhooks.py
@@ -20,7 +20,9 @@ class JiraIssueUpdatedWebhook(Endpoint):
         return super(JiraIssueUpdatedWebhook, self).dispatch(request, *args, **kwargs)
 
     def handle_assignee_change(self, integration, data):
-        assignee = data['issue']['fields']['assignee']
+        fields = data['issue']['fields']
+        # if no assignee, assume it was unassigned
+        assignee = fields.get('assignee')
         issue_key = data['issue']['key']
 
         if assignee is None:
diff --git a/tests/sentry/integrations/jira/test_webhooks.py b/tests/sentry/integrations/jira/test_webhooks.py
index 9bd33f043c..6594c551f4 100644
--- a/tests/sentry/integrations/jira/test_webhooks.py
+++ b/tests/sentry/integrations/jira/test_webhooks.py
@@ -34,6 +34,25 @@ SAMPLE_EDIT_ISSUE_PAYLOAD_NO_ASSIGNEE = """
 }
 """
 
+SAMPLE_EDIT_ISSUE_PAYLOAD_MISSING_ASSIGNEE_FIELD = """
+{
+    "changelog": {
+        "items": [{
+            "field": "assignee",
+            "from": null,
+            "fromString": null,
+            "fieldtype": "jira",
+            "fieldId": "assignee"
+        }],
+        "id": "10172"
+    },
+    "issue": {
+        "fields": {},
+        "key": "APP-123"
+    }
+}
+"""
+
 SAMPLE_EDIT_ISSUE_PAYLOAD_ASSIGNEE = """
 {
     "changelog": {
@@ -158,6 +177,29 @@ class JiraWebhooksTest(APITestCase):
                 integration, None, 'APP-123', assign=False,
             )
 
+    @patch('sentry.integrations.jira.webhooks.sync_group_assignee_inbound')
+    def test_simple_deassign_assignee_missing(self, mock_sync_group_assignee_inbound):
+        org = self.organization
+
+        integration = Integration.objects.create(
+            provider='jira',
+            name='Example Jira',
+        )
+        integration.add_organization(org, self.user)
+
+        path = reverse('sentry-extensions-jira-issue-updated')
+
+        with patch('sentry.integrations.jira.webhooks.get_integration_from_jwt', return_value=integration):
+            resp = self.client.post(
+                path,
+                data=json.loads(SAMPLE_EDIT_ISSUE_PAYLOAD_MISSING_ASSIGNEE_FIELD.strip()),
+                HTTP_AUTHORIZATION='JWT anexampletoken',
+            )
+            assert resp.status_code == 200
+            mock_sync_group_assignee_inbound.assert_called_with(
+                integration, None, 'APP-123', assign=False,
+            )
+
     @patch.object(IssueSyncMixin, 'sync_status_inbound')
     def test_simple_status_sync_inbound(self, mock_sync_status_inbound):
         org = self.organization
