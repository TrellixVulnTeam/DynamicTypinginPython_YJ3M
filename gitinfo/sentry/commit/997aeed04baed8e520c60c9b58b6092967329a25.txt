commit 997aeed04baed8e520c60c9b58b6092967329a25
Author: Daniel Griesser <daniel.griesser.86@gmail.com>
Date:   Fri Apr 5 09:42:06 2019 +0200

    fix: Only show link element if link starts with http(s) (#12659)
    
    * fix: Only show link element if link starts with http(s)
    
    * meta: Add comment

diff --git a/src/sentry/static/sentry/app/components/events/interfaces/exceptionMechanism.jsx b/src/sentry/static/sentry/app/components/events/interfaces/exceptionMechanism.jsx
index 52dc4c9c6e..553b4c4ede 100644
--- a/src/sentry/static/sentry/app/components/events/interfaces/exceptionMechanism.jsx
+++ b/src/sentry/static/sentry/app/components/events/interfaces/exceptionMechanism.jsx
@@ -6,6 +6,7 @@ import Pill from 'app/components/pill';
 import Hovercard from 'app/components/hovercard';
 import InlineSvg from 'app/components/inlineSvg';
 import {t} from 'app/locale';
+import {isUrl} from 'app/utils';
 
 class ExceptionMechanism extends React.Component {
   static propTypes = {
@@ -41,7 +42,7 @@ class ExceptionMechanism extends React.Component {
     const {type, description, help_link, handled, meta = {}, data = {}} = mechanism;
     const {errno, signal, mach_exception} = meta;
 
-    const linkElement = help_link && (
+    const linkElement = help_link && isUrl(help_link) && (
       <a href={help_link} className="external-icon">
         <em className="icon-open" />
       </a>
diff --git a/src/sentry/static/sentry/app/utils.jsx b/src/sentry/static/sentry/app/utils.jsx
index f465bcd314..9b85b4f971 100644
--- a/src/sentry/static/sentry/app/utils.jsx
+++ b/src/sentry/static/sentry/app/utils.jsx
@@ -132,6 +132,10 @@ export function nl2br(str) {
   return str.replace(/(?:\r\n|\r|\n)/g, '<br />');
 }
 
+/**
+ * This function has a critical security impact, make sure to check all usages before changing this function.
+ * In some parts of our code we rely on that this only really is a string starting with http(s).
+ */
 export function isUrl(str) {
   return (
     !!str &&
diff --git a/tests/js/spec/components/events/interfaces/__snapshots__/exceptionMechanism.spec.jsx.snap b/tests/js/spec/components/events/interfaces/__snapshots__/exceptionMechanism.spec.jsx.snap
index d5f9781e04..d545610107 100644
--- a/tests/js/spec/components/events/interfaces/__snapshots__/exceptionMechanism.spec.jsx.snap
+++ b/tests/js/spec/components/events/interfaces/__snapshots__/exceptionMechanism.spec.jsx.snap
@@ -72,6 +72,37 @@ exports[`ExceptionMechanism basic attributes should add the help_link to the des
 </div>
 `;
 
+exports[`ExceptionMechanism basic attributes should not add the help_link if not starts with http(s) 1`] = `
+<div
+  className="exception-mechanism"
+>
+  <Pills>
+    <Pill
+      key="mechanism"
+      name="mechanism"
+      value="generic"
+    >
+      <Hovercard
+        body="Nothing to see here."
+        containerClassName="pill-icon"
+        displayTimeout={100}
+        header={
+          <span>
+            Details
+             
+          </span>
+        }
+      >
+        <InlineSvg
+          size="14px"
+          src="icon-circle-info"
+        />
+      </Hovercard>
+    </Pill>
+  </Pills>
+</div>
+`;
+
 exports[`ExceptionMechanism basic attributes should render a description hovercard 1`] = `
 <div
   className="exception-mechanism"
diff --git a/tests/js/spec/components/events/interfaces/exceptionMechanism.spec.jsx b/tests/js/spec/components/events/interfaces/exceptionMechanism.spec.jsx
index a33e612c5b..e9a0160a46 100644
--- a/tests/js/spec/components/events/interfaces/exceptionMechanism.spec.jsx
+++ b/tests/js/spec/components/events/interfaces/exceptionMechanism.spec.jsx
@@ -33,6 +33,16 @@ describe('ExceptionMechanism', () => {
       expect(wrapper).toMatchSnapshot();
     });
 
+    it('should not add the help_link if not starts with http(s)', () => {
+      const mechanism = {
+        type: 'generic',
+        description: 'Nothing to see here.',
+        help_link: 'example.org/help',
+      };
+      const wrapper = shallow(<ExceptionMechanism data={mechanism} />);
+      expect(wrapper).toMatchSnapshot();
+    });
+
     it('should render the handled pill', () => {
       const mechanism = {type: 'generic', handled: false};
       const wrapper = shallow(<ExceptionMechanism data={mechanism} />);
