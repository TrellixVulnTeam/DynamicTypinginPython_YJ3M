commit 4f721ab9a7ece2c3374fc03894c3f5f1621e828a
Author: Samuel Colvin <s@muelcolvin.com>
Date:   Thu Apr 27 11:23:47 2017 +0100

    improving data scrubber for common acceptable values

diff --git a/src/sentry/constants.py b/src/sentry/constants.py
index 1504d3a7c3..75f571dbec 100644
--- a/src/sentry/constants.py
+++ b/src/sentry/constants.py
@@ -168,7 +168,6 @@ DEFAULT_SCRUBBED_FIELDS = (
     'password',
     'secret',
     'passwd',
-    'authorization',
     'api_key',
     'apikey',
     'access_token',
@@ -177,6 +176,14 @@ DEFAULT_SCRUBBED_FIELDS = (
     'mysql_pwd',
 )
 
+NOT_SCRUBBED_VALUES = set([
+    True,
+    False,
+    'true',
+    'false',
+    'null',
+])
+
 VALID_PLATFORMS = set([
     'as3',
     'c',
diff --git a/src/sentry/utils/data_scrubber.py b/src/sentry/utils/data_scrubber.py
index 3bbc263be6..bbd725eb11 100644
--- a/src/sentry/utils/data_scrubber.py
+++ b/src/sentry/utils/data_scrubber.py
@@ -10,7 +10,7 @@ from __future__ import absolute_import
 import re
 import six
 
-from sentry.constants import DEFAULT_SCRUBBED_FIELDS, FILTER_MASK
+from sentry.constants import DEFAULT_SCRUBBED_FIELDS, FILTER_MASK, NOT_SCRUBBED_VALUES
 
 
 def varmap(func, var, context=None, name=None):
@@ -115,17 +115,17 @@ class SensitiveDataFilter(object):
             if '//' in value and '@' in value:
                 value = self.URL_PASSWORD_RE.sub(r'\1' + FILTER_MASK + '@', value)
 
-        original_value = value
         if isinstance(value, six.string_types):
-            value = value.lower()
+            str_value = value.lower()
         else:
-            value = ''
+            str_value = ''
 
         for field in self.fields:
-            if field in key or field in value:
-                # store mask as a fixed length for security
+            if field in str_value:
                 return FILTER_MASK
-        return original_value
+            if field in key and value not in NOT_SCRUBBED_VALUES:
+                return FILTER_MASK
+        return value
 
     def filter_stacktrace(self, data):
         if 'frames' not in data:
diff --git a/tests/sentry/utils/test_data_scrubber.py b/tests/sentry/utils/test_data_scrubber.py
index fc109a2df9..33326d5aff 100644
--- a/tests/sentry/utils/test_data_scrubber.py
+++ b/tests/sentry/utils/test_data_scrubber.py
@@ -371,3 +371,9 @@ class SensitiveDataFilterTest(TestCase):
         proc = SensitiveDataFilter(include_defaults=True)
         assert proc.sanitize('MYSQL_PWD', 'the one') == FILTER_MASK
         assert proc.sanitize('mysql_pwd', 'the two') == FILTER_MASK
+
+    def test_doesnt_scrub_not_scrubbed(self):
+        proc = SensitiveDataFilter(include_defaults=True)
+        assert proc.sanitize('is_authenticated', 'foobar') == FILTER_MASK
+        assert proc.sanitize('is_authenticated', 'null') == 'null'
+        assert proc.sanitize('is_authenticated', True) is True
