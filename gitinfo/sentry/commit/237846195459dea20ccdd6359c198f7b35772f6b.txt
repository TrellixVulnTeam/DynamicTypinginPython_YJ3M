commit 237846195459dea20ccdd6359c198f7b35772f6b
Author: Evan Purkhiser <evanpurkhiser@gmail.com>
Date:   Thu Nov 29 10:56:26 2018 -0800

    feat(settings): Add permission alerts to most pages (#10832)
    
    The pages where I didn't include the 'you don't have permission to edit
    these things' alert are ones where there is either no configuration, or
    very little.

diff --git a/src/sentry/static/sentry/app/views/organizationIntegrations/index.jsx b/src/sentry/static/sentry/app/views/organizationIntegrations/index.jsx
index edab208467..17e2518639 100644
--- a/src/sentry/static/sentry/app/views/organizationIntegrations/index.jsx
+++ b/src/sentry/static/sentry/app/views/organizationIntegrations/index.jsx
@@ -11,6 +11,7 @@ import {t} from 'app/locale';
 import AsyncComponent from 'app/components/asyncComponent';
 import LoadingIndicator from 'app/components/loadingIndicator';
 import MigrationWarnings from 'app/views/organizationIntegrations/migrationWarnings';
+import PermissionAlert from 'app/views/settings/organization/permissionAlert';
 import ProviderRow from 'app/views/organizationIntegrations/providerRow';
 import SettingsPageHeader from 'app/views/settings/components/settingsPageHeader';
 import withOrganization from 'app/utils/withOrganization';
@@ -143,6 +144,7 @@ class OrganizationIntegrations extends AsyncComponent {
     return (
       <React.Fragment>
         {!this.props.hideHeader && <SettingsPageHeader title={t('Integrations')} />}
+        <PermissionAlert access={['org:integrations']} />
 
         <MigrationWarnings
           orgId={this.props.params.orgId}
diff --git a/src/sentry/static/sentry/app/views/projectPlugins/index.jsx b/src/sentry/static/sentry/app/views/projectPlugins/index.jsx
index 3c2aea2ff0..07646a00c8 100644
--- a/src/sentry/static/sentry/app/views/projectPlugins/index.jsx
+++ b/src/sentry/static/sentry/app/views/projectPlugins/index.jsx
@@ -2,6 +2,7 @@ import React from 'react';
 
 import {fetchPlugins, enablePlugin, disablePlugin} from 'app/actionCreators/plugins';
 import {t} from 'app/locale';
+import PermissionAlert from 'app/views/settings/project/permissionAlert';
 import ProjectPlugins from 'app/views/projectPlugins/projectPlugins';
 import SentryTypes from 'app/sentryTypes';
 import SettingsPageHeader from 'app/views/settings/components/settingsPageHeader';
@@ -32,6 +33,7 @@ class ProjectPluginsContainer extends React.Component {
     return (
       <React.Fragment>
         <SettingsPageHeader title={t('Legacy Integrations')} />
+        <PermissionAlert />
 
         <ProjectPlugins
           {...this.props}
diff --git a/src/sentry/static/sentry/app/views/projectTags.jsx b/src/sentry/static/sentry/app/views/projectTags.jsx
index 1e7ea1e573..27b6023309 100644
--- a/src/sentry/static/sentry/app/views/projectTags.jsx
+++ b/src/sentry/static/sentry/app/views/projectTags.jsx
@@ -9,6 +9,7 @@ import Button from 'app/components/button';
 import EmptyMessage from 'app/views/settings/components/emptyMessage';
 import ExternalLink from 'app/components/externalLink';
 import LinkWithConfirmation from 'app/components/linkWithConfirmation';
+import PermissionAlert from 'app/views/settings/project/permissionAlert';
 import SettingsPageHeader from 'app/views/settings/components/settingsPageHeader';
 import TextBlock from 'app/views/settings/components/text/textBlock';
 import Tooltip from 'app/components/tooltip';
@@ -45,6 +46,8 @@ export default class ProjectTags extends AsyncView {
     return (
       <React.Fragment>
         <SettingsPageHeader title={t('Tags')} />
+        <PermissionAlert />
+
         <TextBlock>
           {tct(
             `Each event in Sentry may be annotated with various tags (key and value pairs).
diff --git a/src/sentry/static/sentry/app/views/settings/organization/permissionAlert.jsx b/src/sentry/static/sentry/app/views/settings/organization/permissionAlert.jsx
new file mode 100644
index 0000000000..8e25648e1a
--- /dev/null
+++ b/src/sentry/static/sentry/app/views/settings/organization/permissionAlert.jsx
@@ -0,0 +1,29 @@
+import PropTypes from 'prop-types';
+import React from 'react';
+
+import {t} from 'app/locale';
+import Access from 'app/components/acl/access';
+import Alert from 'app/components/alert';
+
+const PermissionAlert = ({access, ...props}) => (
+  <Access access={access}>
+    {({hasAccess}) =>
+      !hasAccess && (
+        <Alert type="warning" icon="icon-warning-sm" {...props}>
+          {t(
+            'These settings can only be edited by users with the owner or manager role.'
+          )}
+        </Alert>
+      )}
+  </Access>
+);
+
+PermissionAlert.propTypes = {
+  access: PropTypes.arrayOf(PropTypes.string),
+};
+
+PermissionAlert.defaultProps = {
+  access: ['org:write'],
+};
+
+export default PermissionAlert;
diff --git a/src/sentry/static/sentry/app/views/settings/organizationGeneralSettings/organizationSettingsForm.jsx b/src/sentry/static/sentry/app/views/settings/organizationGeneralSettings/organizationSettingsForm.jsx
index 56b44feaff..55f5748fc1 100644
--- a/src/sentry/static/sentry/app/views/settings/organizationGeneralSettings/organizationSettingsForm.jsx
+++ b/src/sentry/static/sentry/app/views/settings/organizationGeneralSettings/organizationSettingsForm.jsx
@@ -3,14 +3,13 @@ import React from 'react';
 import createReactClass from 'create-react-class';
 
 import {addErrorMessage} from 'app/actionCreators/indicator';
-import {t} from 'app/locale';
 import {updateOrganization} from 'app/actionCreators/organizations';
-import Alert from 'app/components/alert';
 import ApiMixin from 'app/mixins/apiMixin';
 import AvatarChooser from 'app/components/avatarChooser';
 import Form from 'app/views/settings/components/forms/form';
 import JsonForm from 'app/views/settings/components/forms/jsonForm';
 import OrganizationState from 'app/mixins/organizationState';
+import PermissionAlert from 'app/views/settings/organization/permissionAlert';
 import organizationSettingsFields from 'app/data/forms/organizationGeneralSettings';
 
 const OrganizationSettingsForm = createReactClass({
@@ -45,13 +44,7 @@ const OrganizationSettingsForm = createReactClass({
         }}
         onSubmitError={err => addErrorMessage('Unable to save change')}
       >
-        {!access.has('org:write') && (
-          <Alert type="warning" icon="icon-warning-sm">
-            {t(
-              'These settings can only be edited by users with the owner or manager role.'
-            )}
-          </Alert>
-        )}
+        <PermissionAlert />
         <JsonForm
           features={this.getFeatures()}
           access={access}
diff --git a/src/sentry/static/sentry/app/views/settings/project/permissionAlert.jsx b/src/sentry/static/sentry/app/views/settings/project/permissionAlert.jsx
new file mode 100644
index 0000000000..3030642591
--- /dev/null
+++ b/src/sentry/static/sentry/app/views/settings/project/permissionAlert.jsx
@@ -0,0 +1,29 @@
+import PropTypes from 'prop-types';
+import React from 'react';
+
+import {t} from 'app/locale';
+import Access from 'app/components/acl/access';
+import Alert from 'app/components/alert';
+
+const PermissionAlert = ({access, ...props}) => (
+  <Access access={access}>
+    {({hasAccess}) =>
+      !hasAccess && (
+        <Alert type="warning" icon="icon-warning-sm" {...props}>
+          {t(
+            'These settings can only be edited by users with the owner, manager, or admin role.'
+          )}
+        </Alert>
+      )}
+  </Access>
+);
+
+PermissionAlert.propTypes = {
+  access: PropTypes.arrayOf(PropTypes.string),
+};
+
+PermissionAlert.defaultProps = {
+  access: ['project:write'],
+};
+
+export default PermissionAlert;
diff --git a/src/sentry/static/sentry/app/views/settings/project/projectFilters/index.jsx b/src/sentry/static/sentry/app/views/settings/project/projectFilters/index.jsx
index 05caa5bd0c..4cfd25710e 100644
--- a/src/sentry/static/sentry/app/views/settings/project/projectFilters/index.jsx
+++ b/src/sentry/static/sentry/app/views/settings/project/projectFilters/index.jsx
@@ -4,6 +4,7 @@ import React from 'react';
 import {t} from 'app/locale';
 import GroupTombstones from 'app/views/settings/project/projectFilters/groupTombstones';
 import NavTabs from 'app/components/navTabs';
+import PermissionAlert from 'app/views/settings/project/permissionAlert';
 import ProjectFiltersChart from 'app/views/settings/project/projectFilters/projectFiltersChart';
 import ProjectFiltersSettings from 'app/views/settings/project/projectFilters/projectFiltersSettings';
 import SentryTypes from 'app/sentryTypes';
@@ -26,6 +27,8 @@ class ProjectFilters extends React.Component {
     return (
       <div>
         <SettingsPageHeader title={t('Inbound Data Filters')} />
+        <PermissionAlert />
+
         <TextBlock>
           {t(
             'Filters allow you to prevent Sentry from storing events in certain situations. Filtered events are tracked separately from rate limits, and do not apply to any project quotas.'
diff --git a/src/sentry/static/sentry/app/views/settings/project/projectKeys/projectKeyDetails.jsx b/src/sentry/static/sentry/app/views/settings/project/projectKeys/projectKeyDetails.jsx
index cf235d0c41..fa0273b711 100644
--- a/src/sentry/static/sentry/app/views/settings/project/projectKeys/projectKeyDetails.jsx
+++ b/src/sentry/static/sentry/app/views/settings/project/projectKeys/projectKeyDetails.jsx
@@ -30,6 +30,7 @@ import FormField from 'app/views/settings/components/forms/formField';
 import InputControl from 'app/views/settings/components/forms/controls/input';
 import LoadingError from 'app/components/loadingError';
 import LoadingIndicator from 'app/components/loadingIndicator';
+import PermissionAlert from 'app/views/settings/project/permissionAlert';
 import ProjectKeyCredentials from 'app/views/settings/project/projectKeys/projectKeyCredentials';
 import RangeSlider from 'app/views/settings/components/forms/controls/rangeSlider';
 import SelectField from 'app/views/settings/components/forms/selectField';
@@ -496,6 +497,7 @@ export default class ProjectKeyDetails extends AsyncView {
     return (
       <div className="ref-key-details">
         <SettingsPageHeader title={t('Key Details')} />
+        <PermissionAlert />
 
         <KeyStats params={params} />
 
diff --git a/src/sentry/static/sentry/app/views/settings/project/projectOwnership/index.jsx b/src/sentry/static/sentry/app/views/settings/project/projectOwnership/index.jsx
index fd6b6b9d4e..b901b61a3a 100644
--- a/src/sentry/static/sentry/app/views/settings/project/projectOwnership/index.jsx
+++ b/src/sentry/static/sentry/app/views/settings/project/projectOwnership/index.jsx
@@ -1,16 +1,16 @@
 import React from 'react';
 import styled from 'react-emotion';
 
+import {Panel, PanelBody, PanelHeader} from 'app/components/panels';
 import {t, tct} from 'app/locale';
 import AsyncView from 'app/views/asyncView';
-
-import {Panel, PanelBody, PanelHeader} from 'app/components/panels';
-import SentryTypes from 'app/sentryTypes';
-import SettingsPageHeader from 'app/views/settings/components/settingsPageHeader';
-import TextBlock from 'app/views/settings/components/text/textBlock';
 import Form from 'app/views/settings/components/forms/form';
 import JsonForm from 'app/views/settings/components/forms/jsonForm';
 import OwnerInput from 'app/views/settings/project/projectOwnership/ownerInput';
+import PermissionAlert from 'app/views/settings/project/permissionAlert';
+import SentryTypes from 'app/sentryTypes';
+import SettingsPageHeader from 'app/views/settings/components/settingsPageHeader';
+import TextBlock from 'app/views/settings/components/text/textBlock';
 
 const CodeBlock = styled.pre`
   word-break: break-all;
@@ -41,6 +41,7 @@ class ProjectOwnership extends AsyncView {
     return (
       <div>
         <SettingsPageHeader title={t('Issue Owners')} />
+        <PermissionAlert />
         <Panel>
           <PanelHeader>{t('Ownership Rules')}</PanelHeader>
           <PanelBody disablePadding={false}>
diff --git a/src/sentry/static/sentry/app/views/settings/projectGeneralSettings.jsx b/src/sentry/static/sentry/app/views/settings/projectGeneralSettings.jsx
index 994f37f11a..f01a101b64 100644
--- a/src/sentry/static/sentry/app/views/settings/projectGeneralSettings.jsx
+++ b/src/sentry/static/sentry/app/views/settings/projectGeneralSettings.jsx
@@ -13,13 +13,13 @@ import {
 import {fields} from 'app/data/forms/projectGeneralSettings';
 import {getOrganizationState} from 'app/mixins/organizationState';
 import {t, tct} from 'app/locale';
-import Alert from 'app/components/alert';
 import AsyncView from 'app/views/asyncView';
 import Button from 'app/components/button';
 import Confirm from 'app/components/confirm';
 import Field from 'app/views/settings/components/forms/field';
 import Form from 'app/views/settings/components/forms/form';
 import JsonForm from 'app/views/settings/components/forms/jsonForm';
+import PermissionAlert from 'app/views/settings/project/permissionAlert';
 import ProjectsStore from 'app/stores/projectsStore';
 import SettingsPageHeader from 'app/views/settings/components/settingsPageHeader';
 import TextBlock from 'app/views/settings/components/text/textBlock';
@@ -233,13 +233,7 @@ class ProjectGeneralSettings extends AsyncView {
     return (
       <div>
         <SettingsPageHeader title={t('Project Settings')} />
-        {!access.has('project:write') && (
-          <Alert type="warning" icon="icon-warning-sm">
-            {t(
-              'These settings can only be edited by users with the owner, manager, or admin role.'
-            )}
-          </Alert>
-        )}
+        <PermissionAlert />
 
         <Form
           saveOnBlur
diff --git a/tests/js/spec/views/__snapshots__/projectOwnership.spec.jsx.snap b/tests/js/spec/views/__snapshots__/projectOwnership.spec.jsx.snap
index a142135cee..3a3ec5d064 100644
--- a/tests/js/spec/views/__snapshots__/projectOwnership.spec.jsx.snap
+++ b/tests/js/spec/views/__snapshots__/projectOwnership.spec.jsx.snap
@@ -8,6 +8,13 @@ exports[`ProjectTeamsSettings render() renders 1`] = `
     <SettingsPageHeading
       title="Issue Owners"
     />
+    <PermissionAlert
+      access={
+        Array [
+          "project:write",
+        ]
+      }
+    />
     <Panel>
       <PanelHeader>
         Ownership Rules
diff --git a/tests/js/spec/views/__snapshots__/projectTags.spec.jsx.snap b/tests/js/spec/views/__snapshots__/projectTags.spec.jsx.snap
index dd7068432d..a306af4b52 100644
--- a/tests/js/spec/views/__snapshots__/projectTags.spec.jsx.snap
+++ b/tests/js/spec/views/__snapshots__/projectTags.spec.jsx.snap
@@ -51,6 +51,75 @@ exports[`ProjectTags renders 1`] = `
           </div>
         </Wrapper>
       </SettingsPageHeading>
+      <PermissionAlert
+        access={
+          Array [
+            "project:write",
+          ]
+        }
+      >
+        <AccessContainer
+          access={
+            Array [
+              "project:write",
+            ]
+          }
+        >
+          <Access
+            access={
+              Array [
+                "project:write",
+              ]
+            }
+            configUser={
+              Object {
+                "email": "foo@example.com",
+                "flags": Object {
+                  "newsletter_consent_prompt": false,
+                },
+                "hasPasswordAuth": true,
+                "id": "1",
+                "isAuthenticated": true,
+                "name": "Foo Bar",
+                "options": Object {
+                  "timezone": "UTC",
+                },
+                "permissions": Set {},
+                "username": "foo@example.com",
+              }
+            }
+            organization={
+              Object {
+                "access": Array [
+                  "org:read",
+                  "org:write",
+                  "org:admin",
+                  "project:read",
+                  "project:write",
+                  "project:admin",
+                  "team:read",
+                  "team:write",
+                  "team:admin",
+                ],
+                "features": Array [],
+                "id": "3",
+                "name": "Organization Name",
+                "onboardingTasks": Array [],
+                "projects": Array [],
+                "scrapeJavaScript": true,
+                "slug": "org-slug",
+                "status": Object {
+                  "id": "active",
+                  "name": "active",
+                },
+                "teams": Array [],
+              }
+            }
+            renderNoAccessMessage={false}
+            requireAll={true}
+          />
+        </AccessContainer>
+      </PermissionAlert>
       <TextBlock>
         <Component
           className="css-1geyb25-TextBlock ec8ep340"
diff --git a/tests/js/spec/views/settings/organizationGeneralSettings.spec.jsx b/tests/js/spec/views/settings/organizationGeneralSettings.spec.jsx
index cfdd90beb2..2c16ddb993 100644
--- a/tests/js/spec/views/settings/organizationGeneralSettings.spec.jsx
+++ b/tests/js/spec/views/settings/organizationGeneralSettings.spec.jsx
@@ -102,14 +102,15 @@ describe('OrganizationGeneralSettings', function() {
   });
 
   it('disables the entire form if user does not have write access', async function() {
+    const readOnlyOrg = TestStubs.Organization({access: ['org:read']});
     MockApiClient.clearMockResponses();
     MockApiClient.addMockResponse({
       url: ENDPOINT,
-      body: TestStubs.Organization({access: ['org:read']}),
+      body: readOnlyOrg,
     });
     let wrapper = mount(
-      <OrganizationGeneralSettings routes={[]} params={{orgId: org.slug}} />,
-      TestStubs.routerContext()
+      <OrganizationGeneralSettings routes={[]} params={{orgId: readOnlyOrg.slug}} />,
+      TestStubs.routerContext([{organization: readOnlyOrg}])
     );
 
     wrapper.setState({loading: false});
@@ -119,7 +120,7 @@ describe('OrganizationGeneralSettings', function() {
     expect(wrapper.find('Form FormField[disabled=false]')).toHaveLength(0);
     expect(
       wrapper
-        .find('Alert')
+        .find('PermissionAlert')
         .first()
         .text()
     ).toEqual(
diff --git a/tests/js/spec/views/settings/organizationIntegrations/__snapshots__/index.spec.jsx.snap b/tests/js/spec/views/settings/organizationIntegrations/__snapshots__/index.spec.jsx.snap
index 90918ca75b..0d4cc0a47a 100644
--- a/tests/js/spec/views/settings/organizationIntegrations/__snapshots__/index.spec.jsx.snap
+++ b/tests/js/spec/views/settings/organizationIntegrations/__snapshots__/index.spec.jsx.snap
@@ -71,6 +71,137 @@ exports[`OrganizationIntegrations render() with installed integrations Displays
       </div>
     </Wrapper>
   </SettingsPageHeading>
+  <PermissionAlert
+    access={
+      Array [
+        "org:integrations",
+      ]
+    }
+  >
+    <AccessContainer
+      access={
+        Array [
+          "org:integrations",
+        ]
+      }
+    >
+      <Access
+        access={
+          Array [
+            "org:integrations",
+          ]
+        }
+        configUser={
+          Object {
+            "email": "foo@example.com",
+            "flags": Object {
+              "newsletter_consent_prompt": false,
+            },
+            "hasPasswordAuth": true,
+            "id": "1",
+            "isAuthenticated": true,
+            "name": "Foo Bar",
+            "options": Object {
+              "timezone": "UTC",
+            },
+            "permissions": Set {},
+            "username": "foo@example.com",
+          }
+        }
+        organization={
+          Object {
+            "access": Array [
+              "org:read",
+              "org:write",
+              "org:admin",
+              "project:read",
+              "project:write",
+              "project:admin",
+              "team:read",
+              "team:write",
+              "team:admin",
+            ],
+            "features": Array [],
+            "id": "3",
+            "name": "Organization Name",
+            "onboardingTasks": Array [],
+            "projects": Array [],
+            "scrapeJavaScript": true,
+            "slug": "org-slug",
+            "status": Object {
+              "id": "active",
+              "name": "active",
+            },
+            "teams": Array [],
+          }
+        }
+        renderNoAccessMessage={false}
+        requireAll={true}
+      >
+        <Alert
+          icon="icon-warning-sm"
+          type="warning"
+        >
+          <AlertWrapper
+            className="ref-warning"
+            type="warning"
+          >
+            <Base
+              className="ref-warning css-qx534z-AlertWrapper e1xb5l7j1"
+              type="warning"
+            >
+              <div
+                className="ref-warning css-qx534z-AlertWrapper e1xb5l7j1"
+                is={null}
+                type="warning"
+              >
+                <StyledInlineSvg
+                  size="24px"
+                  src="icon-warning-sm"
+                >
+                  <InlineSvg
+                    className="css-1gojvm3-StyledInlineSvg e1xb5l7j0"
+                    size="24px"
+                    src="icon-warning-sm"
+                  >
+                    <StyledSvg
+                      className="css-1gojvm3-StyledInlineSvg e1xb5l7j0"
+                      height="24px"
+                      viewBox={Object {}}
+                      width="24px"
+                    >
+                      <svg
+                        className="e1xb5l7j0 css-1et2325-StyledSvg-StyledInlineSvg e2idor0"
+                        height="24px"
+                        viewBox={Object {}}
+                        width="24px"
+                      >
+                        <use
+                          href="#test"
+                          xlinkHref="#test"
+                        />
+                      </svg>
+                    </StyledSvg>
+                  </InlineSvg>
+                </StyledInlineSvg>
+                <StyledTextBlock>
+                  <Component
+                    className="css-1h3n7tg-TextBlock-StyledTextBlock e1xb5l7j2"
+                  >
+                    <div
+                      className="css-1h3n7tg-TextBlock-StyledTextBlock e1xb5l7j2"
+                    >
+                      These settings can only be edited by users with the owner or manager role.
+                    </div>
+                  </Component>
+                </StyledTextBlock>
+              </div>
+            </Base>
+          </AlertWrapper>
+        </Alert>
+      </Access>
+    </AccessContainer>
+  </PermissionAlert>
   <MigrationWarnings
     onInstall={[Function]}
     orgId="org-slug"
@@ -3119,6 +3250,137 @@ exports[`OrganizationIntegrations render() without integrations Displays integra
       </div>
     </Wrapper>
   </SettingsPageHeading>
+  <PermissionAlert
+    access={
+      Array [
+        "org:integrations",
+      ]
+    }
+  >
+    <AccessContainer
+      access={
+        Array [
+          "org:integrations",
+        ]
+      }
+    >
+      <Access
+        access={
+          Array [
+            "org:integrations",
+          ]
+        }
+        configUser={
+          Object {
+            "email": "foo@example.com",
+            "flags": Object {
+              "newsletter_consent_prompt": false,
+            },
+            "hasPasswordAuth": true,
+            "id": "1",
+            "isAuthenticated": true,
+            "name": "Foo Bar",
+            "options": Object {
+              "timezone": "UTC",
+            },
+            "permissions": Set {},
+            "username": "foo@example.com",
+          }
+        }
+        organization={
+          Object {
+            "access": Array [
+              "org:read",
+              "org:write",
+              "org:admin",
+              "project:read",
+              "project:write",
+              "project:admin",
+              "team:read",
+              "team:write",
+              "team:admin",
+            ],
+            "features": Array [],
+            "id": "3",
+            "name": "Organization Name",
+            "onboardingTasks": Array [],
+            "projects": Array [],
+            "scrapeJavaScript": true,
+            "slug": "org-slug",
+            "status": Object {
+              "id": "active",
+              "name": "active",
+            },
+            "teams": Array [],
+          }
+        }
+        renderNoAccessMessage={false}
+        requireAll={true}
+      >
+        <Alert
+          icon="icon-warning-sm"
+          type="warning"
+        >
+          <AlertWrapper
+            className="ref-warning"
+            type="warning"
+          >
+            <Base
+              className="ref-warning css-qx534z-AlertWrapper e1xb5l7j1"
+              type="warning"
+            >
+              <div
+                className="ref-warning css-qx534z-AlertWrapper e1xb5l7j1"
+                is={null}
+                type="warning"
+              >
+                <StyledInlineSvg
+                  size="24px"
+                  src="icon-warning-sm"
+                >
+                  <InlineSvg
+                    className="css-1gojvm3-StyledInlineSvg e1xb5l7j0"
+                    size="24px"
+                    src="icon-warning-sm"
+                  >
+                    <StyledSvg
+                      className="css-1gojvm3-StyledInlineSvg e1xb5l7j0"
+                      height="24px"
+                      viewBox={Object {}}
+                      width="24px"
+                    >
+                      <svg
+                        className="e1xb5l7j0 css-1et2325-StyledSvg-StyledInlineSvg e2idor0"
+                        height="24px"
+                        viewBox={Object {}}
+                        width="24px"
+                      >
+                        <use
+                          href="#test"
+                          xlinkHref="#test"
+                        />
+                      </svg>
+                    </StyledSvg>
+                  </InlineSvg>
+                </StyledInlineSvg>
+                <StyledTextBlock>
+                  <Component
+                    className="css-1h3n7tg-TextBlock-StyledTextBlock e1xb5l7j2"
+                  >
+                    <div
+                      className="css-1h3n7tg-TextBlock-StyledTextBlock e1xb5l7j2"
+                    >
+                      These settings can only be edited by users with the owner or manager role.
+                    </div>
+                  </Component>
+                </StyledTextBlock>
+              </div>
+            </Base>
+          </AlertWrapper>
+        </Alert>
+      </Access>
+    </AccessContainer>
+  </PermissionAlert>
   <MigrationWarnings
     onInstall={[Function]}
     orgId="org-slug"
