commit 29ddafc2e2cfac352eaa629ab6c57b85ccca27aa
Author: Katie Lundsgaard <katie@getsentry.com>
Date:   Thu Sep 8 16:32:30 2016 -0700

    Check if user has usable password before requiring password confirmation (#4099)

diff --git a/src/sentry/templates/sentry/account/twofactor/enroll_totp.html b/src/sentry/templates/sentry/account/twofactor/enroll_totp.html
index 66f95d1219..03d4cdeeeb 100644
--- a/src/sentry/templates/sentry/account/twofactor/enroll_totp.html
+++ b/src/sentry/templates/sentry/account/twofactor/enroll_totp.html
@@ -30,6 +30,10 @@
       {% for field in otp_form %}
         {{ field|as_crispy_field }}
       {% endfor %}
+      {% if password_form.password %}
+        {{ password_form|as_crispy_errors }}
+        {{ password_form.password|as_crispy_field }}
+      {% endif %}
 
       <input type="hidden" name="enroll">
       <input type="hidden" name="totp_secret" value="{{ auth.secret }}">
diff --git a/src/sentry/templates/sentry/account/twofactor/remove.html b/src/sentry/templates/sentry/account/twofactor/remove.html
index e0aef22ed9..0f0b1e3300 100644
--- a/src/sentry/templates/sentry/account/twofactor/remove.html
+++ b/src/sentry/templates/sentry/account/twofactor/remove.html
@@ -22,8 +22,10 @@
 
   <form action="" method="post" class="form-stacked">
     {% csrf_token %}
-    {{ password_form|as_crispy_errors }}
-    {{ password_form.password|as_crispy_field }}
+    {% if password_form.password %}
+      {{ password_form|as_crispy_errors }}
+      {{ password_form.password|as_crispy_field }}
+    {% endif %}
     <input type="hidden" name="remove" value="1">
     <fieldset class="form-actions">
       <button type="submit" name="yes" class="btn btn-default btn-primary">{% trans "Yes" %}</button>
diff --git a/src/sentry/web/forms/accounts.py b/src/sentry/web/forms/accounts.py
index ca5b2706aa..21a91a6d83 100644
--- a/src/sentry/web/forms/accounts.py
+++ b/src/sentry/web/forms/accounts.py
@@ -531,12 +531,6 @@ class TwoFactorForm(forms.Form):
                    'autofocus': True,
         }),
     )
-    password = forms.CharField(
-        label=_('Sentry account password'),
-        widget=forms.PasswordInput(),
-        help_text='You will need to enter your current Sentry account password to make changes.',
-        required=True,
-    )
 
 
 class ConfirmPasswordForm(forms.Form):
@@ -546,3 +540,12 @@ class ConfirmPasswordForm(forms.Form):
         help_text='You will need to enter your current Sentry account password to make changes.',
         required=True,
     )
+
+    def __init__(self, user, *args, **kwargs):
+        self.user = user
+        super(ConfirmPasswordForm, self).__init__(*args, **kwargs)
+
+        needs_password = user.has_usable_password()
+
+        if not needs_password:
+            del self.fields['password']
diff --git a/src/sentry/web/frontend/accounts_twofactor.py b/src/sentry/web/frontend/accounts_twofactor.py
index 50bc2a527d..d6ec9eaa1e 100644
--- a/src/sentry/web/frontend/accounts_twofactor.py
+++ b/src/sentry/web/frontend/accounts_twofactor.py
@@ -78,19 +78,23 @@ class TwoFactorSettingsView(BaseView):
                 iface.authenticator.delete()
 
     def remove(self, request, interface):
-        form = ConfirmPasswordForm
+        form = ConfirmPasswordForm(request.user)
 
         if 'no' in request.POST or \
            not interface.is_enrolled:
             return HttpResponseRedirect(reverse('sentry-account-settings-2fa'))
         elif 'yes' in request.POST:
-            form = ConfirmPasswordForm(request.POST)
-            if form.is_valid():
-                if request.user.check_password(form.cleaned_data['password']):
-                    self.delete_authenticator(interface)
-                    return HttpResponseRedirect(reverse('sentry-account-settings-2fa'))
-                else:
-                    form.errors['__all__'] = ['Invalid password.']
+            form = ConfirmPasswordForm(request.user, request.POST)
+            if 'password' in form.fields:
+                if form.is_valid():
+                    if request.user.check_password(form.cleaned_data['password']):
+                        self.delete_authenticator(interface)
+                        return HttpResponseRedirect(reverse('sentry-account-settings-2fa'))
+                    else:
+                        form.errors['__all__'] = ['Invalid password.']
+            else:
+                self.delete_authenticator(interface)
+                return HttpResponseRedirect(reverse('sentry-account-settings-2fa'))
 
         all_interfaces = Authenticator.objects.all_interfaces_for_user(
             request.user)
@@ -159,8 +163,9 @@ class TotpSettingsView(TwoFactorSettingsView):
 
         if 'otp' in request.POST:
             form = TwoFactorForm(request.POST)
-            if form.is_valid():
-                if request.user.check_password(form.cleaned_data['password']):
+            password_form = ConfirmPasswordForm(request.user, request.POST)
+            if 'password' in password_form.fields and password_form.is_valid():
+                if request.user.check_password(password_form.cleaned_data['password']):
                     if form.is_valid() and interface.validate_otp(
                             form.cleaned_data['otp']):
                         return TwoFactorSettingsView.enroll(self, request, interface)
@@ -168,11 +173,20 @@ class TotpSettingsView(TwoFactorSettingsView):
                         form.errors['__all__'] = ['Invalid confirmation code.']
                 else:
                     form.errors['__all__'] = ['Invalid password.']
+            else:
+                if form.is_valid() and interface.validate_otp(
+                        form.cleaned_data['otp']):
+                    return TwoFactorSettingsView.enroll(self, request, interface)
+                else:
+                    form.errors['__all__'] = ['Invalid confirmation code.']
+
         else:
             form = TwoFactorForm()
+            password_form = ConfirmPasswordForm(request.user)
 
         context = self.make_context(request, interface)
         context['otp_form'] = form
+        context['password_form'] = password_form
         context['provision_qrcode'] = interface.get_provision_qrcode(
             request.user.email)
         return render_to_response('sentry/account/twofactor/enroll_totp.html',
