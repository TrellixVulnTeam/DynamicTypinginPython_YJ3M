commit 301ba33c0b9fcc1924a90aba646cc375a9ef76e5
Author: Matt Robenolt <matt@ydekproductions.com>
Date:   Mon Jan 11 12:08:11 2016 -0800

    Simplify logic

diff --git a/src/sentry/api/endpoints/group_tags.py b/src/sentry/api/endpoints/group_tags.py
index 33073dd74d..613fc1fb7a 100644
--- a/src/sentry/api/endpoints/group_tags.py
+++ b/src/sentry/api/endpoints/group_tags.py
@@ -3,7 +3,6 @@ from __future__ import absolute_import
 from rest_framework.response import Response
 
 from collections import defaultdict
-from itertools import chain
 from sentry.api.bases.group import GroupEndpoint
 from sentry.api.serializers import serialize
 from sentry.models import GroupTagValue, GroupTagKey, TagKey, TagKeyStatus
@@ -21,7 +20,7 @@ class GroupTagsEndpoint(GroupEndpoint):
 
         # O(N) db access
         data = []
-        top_values_by_key = {}
+        all_top_values = []
         for tag_key in tag_keys:
             total_values = GroupTagValue.get_value_count(group.id, tag_key.key)
             top_values = GroupTagValue.get_top_values(group.id, tag_key.key, limit=10)
@@ -30,7 +29,7 @@ class GroupTagsEndpoint(GroupEndpoint):
             else:
                 key = tag_key.key
 
-            top_values_by_key[key] = top_values
+            all_top_values.extend(top_values)
 
             data.append({
                 'id': str(tag_key.id),
@@ -41,11 +40,11 @@ class GroupTagsEndpoint(GroupEndpoint):
             })
 
         # Serialize all of the values at once to avoid O(n) serialize/db queries
-        top_values_by_key_serialized = defaultdict(list)
-        for value in serialize(list(chain.from_iterable(top_values_by_key.itervalues())), request.user):
-            top_values_by_key_serialized[value['key']].append(value)
+        top_values_by_key = defaultdict(list)
+        for value in serialize(all_top_values, request.user):
+            top_values_by_key[value['key']].append(value)
 
         for d in data:
-            d['topValues'] = top_values_by_key_serialized[d['key']]
+            d['topValues'] = top_values_by_key[d['key']]
 
         return Response(data)
