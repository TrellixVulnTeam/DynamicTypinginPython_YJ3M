commit 59b70133688b037fa4989819c90a1ef3878d6d73
Author: Matt Robenolt <matt@ydekproductions.com>
Date:   Tue Apr 8 01:15:01 2014 -0700

    Fix gzip tests to work on py26

diff --git a/src/sentry/coreapi.py b/src/sentry/coreapi.py
index 4d6af3c540..47a98ff7e5 100644
--- a/src/sentry/coreapi.py
+++ b/src/sentry/coreapi.py
@@ -178,8 +178,11 @@ def decompress_deflate(encoded_data):
 def decompress_gzip(encoded_data):
     try:
         fp = StringIO(encoded_data)
-        with GzipFile(fileobj=fp) as f:
+        try:
+            f = GzipFile(fileobj=fp)
             return f.read()
+        finally:
+            f.close()
     except Exception as e:
         # This error should be caught as it suggests that there's a
         # bug somewhere in the client's code.
diff --git a/tests/integration/tests.py b/tests/integration/tests.py
index 5eb119bee3..93dfb863fa 100644
--- a/tests/integration/tests.py
+++ b/tests/integration/tests.py
@@ -234,8 +234,12 @@ class SentryRemoteTest(TestCase):
         message = json.dumps(kwargs)
 
         fp = StringIO()
-        with GzipFile(fileobj=fp, mode='w') as f:
-            return f.write(message)
+
+        try:
+            f = GzipFile(fileobj=fp, mode='w')
+            f.write(message)
+        finally:
+            f.close()
 
         key = self.projectkey.public_key
         secret = self.projectkey.secret_key
@@ -243,7 +247,7 @@ class SentryRemoteTest(TestCase):
         resp = self.client.post(
             self.path, fp.getvalue(),
             content_type='application/octet-stream',
-            CONTENT_ENCODING='gzip',
+            HTTP_CONTENT_ENCODING='gzip',
             HTTP_X_SENTRY_AUTH=get_auth_header('_postWithHeader', key, secret),
         )
 
