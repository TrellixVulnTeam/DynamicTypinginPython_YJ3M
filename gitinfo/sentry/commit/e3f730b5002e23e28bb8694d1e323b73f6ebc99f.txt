commit e3f730b5002e23e28bb8694d1e323b73f6ebc99f
Author: William Mak <william@wmak.io>
Date:   Fri Mar 27 13:33:55 2020 -0400

    fix(performance) - Return nothing when there's no key transactions

diff --git a/src/sentry/discover/endpoints/discover_key_transactions.py b/src/sentry/discover/endpoints/discover_key_transactions.py
index e5efaf33b5..215c870cd0 100644
--- a/src/sentry/discover/endpoints/discover_key_transactions.py
+++ b/src/sentry/discover/endpoints/discover_key_transactions.py
@@ -56,6 +56,9 @@ class KeyTransactionEndpoint(OrganizationEventsV2EndpointBase):
 
         queryset = KeyTransaction.objects.filter(organization=organization, owner=request.user)
 
+        if not queryset.exists():
+            raise ResourceDoesNotExist
+
         results = query(
             fields,
             None,
diff --git a/tests/snuba/api/endpoints/test_discover_key_transactions.py b/tests/snuba/api/endpoints/test_discover_key_transactions.py
index adb8a89cdd..b8c7f50bbb 100644
--- a/tests/snuba/api/endpoints/test_discover_key_transactions.py
+++ b/tests/snuba/api/endpoints/test_discover_key_transactions.py
@@ -122,6 +122,42 @@ class KeyTransactionTest(APITestCase):
             ]
         }
 
+    def test_get_no_key_transacitons(self):
+        event_data = load_data("transaction")
+        start_timestamp = iso_format(before_now(minutes=1))
+        end_timestamp = iso_format(before_now(minutes=1))
+        event_data.update({"start_timestamp": start_timestamp, "timestamp": end_timestamp})
+
+        transactions = [
+            (self.project, "/foo_transaction/"),
+            (self.project, "/blah_transaction/"),
+            (self.project, "/zoo_transaction/"),
+        ]
+
+        for project, transaction in transactions:
+            event_data["transaction"] = transaction
+            self.store_event(data=event_data, project_id=project.id)
+
+        with self.feature("organizations:performance-view"):
+            url = reverse("sentry-api-0-organization-key-transactions", args=[self.org.slug])
+            response = self.client.get(
+                url,
+                {
+                    "project": [self.project.id],
+                    "orderby": "transaction",
+                    "field": [
+                        "transaction",
+                        "transaction_status",
+                        "project",
+                        "rpm()",
+                        "error_rate()",
+                        "percentile(transaction.duration, 0.95)",
+                    ],
+                },
+            )
+
+        assert response.status_code == 404
+
     @patch("django.utils.timezone.now")
     def test_get_key_transactions(self, mock_now):
         mock_now.return_value = before_now().replace(tzinfo=pytz.utc)
