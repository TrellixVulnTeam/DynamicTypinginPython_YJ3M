commit f3e4b8354e8b9dc3a6017b6d66f61297deab422d
Author: David Cramer <dcramer@gmail.com>
Date:   Fri Jan 23 13:33:36 2015 -0800

    Functional chart

diff --git a/src/sentry/static/sentry/app/views/aggregate.jsx b/src/sentry/static/sentry/app/views/aggregate.jsx
index f3aaddae7a..234ba181ef 100644
--- a/src/sentry/static/sentry/app/views/aggregate.jsx
+++ b/src/sentry/static/sentry/app/views/aggregate.jsx
@@ -60,7 +60,8 @@ var AggregateDetails = React.createClass({
             memberList={this.props.memberList} />
         <Router.RouteHandler
             memberList={this.props.memberList}
-            aggregate={aggregate} />
+            aggregate={aggregate}
+            statsPeriod={this.state.statsPeriod} />
       </div>
     );
   }
diff --git a/src/sentry/static/sentry/app/views/aggregate/chart.jsx b/src/sentry/static/sentry/app/views/aggregate/chart.jsx
index 7a78a68070..df1c9e9b46 100644
--- a/src/sentry/static/sentry/app/views/aggregate/chart.jsx
+++ b/src/sentry/static/sentry/app/views/aggregate/chart.jsx
@@ -6,11 +6,15 @@ var PropTypes = require("../../proptypes");
 
 var AggregateChart = React.createClass({
   propTypes: {
-    aggregate: PropTypes.Aggregate.isRequired
+    aggregate: PropTypes.Aggregate.isRequired,
+    statsPeriod: React.PropTypes.string.isRequired
   },
 
   render: function() {
-    var points = [{x: 1421722207, y: 50}, {x: 1421722267, y: 150}];
+    var aggregate = this.props.aggregate;
+    var points = aggregate.stats[this.props.statsPeriod].map(function(point){
+      return {x: point[0], y: point[1]};
+    });
 
     return (
       <div className="box">
diff --git a/src/sentry/static/sentry/app/views/aggregateOverview.jsx b/src/sentry/static/sentry/app/views/aggregateOverview.jsx
index d33682bf16..5df6bd6076 100644
--- a/src/sentry/static/sentry/app/views/aggregateOverview.jsx
+++ b/src/sentry/static/sentry/app/views/aggregateOverview.jsx
@@ -14,13 +14,16 @@ var utils = require("../utils");
 
 var AggregateOverview = React.createClass({
   propTypes: {
-    aggregate: PropTypes.Aggregate.isRequired
+    aggregate: PropTypes.Aggregate.isRequired,
+    statsPeriod: React.PropTypes.string.isRequired
   },
 
   render: function() {
     return (
       <div>
-        <AggregateChart aggregate={this.props.aggregate} />
+        <AggregateChart
+            aggregate={this.props.aggregate}
+            statsPeriod={this.props.statsPeriod} />
         <AggregateActivity aggregate={this.props.aggregate} />
       </div>
     );
