commit 72a6e15118db53110c2eb62156ae7635e49a8084
Author: Matt Robenolt <matt@ydekproductions.com>
Date:   Tue Nov 29 17:57:07 2011 -0500

    Fixing urlresolves.

diff --git a/sentry/plugins/__init__.py b/sentry/plugins/__init__.py
index 82191ad3f5..5378fea7c5 100644
--- a/sentry/plugins/__init__.py
+++ b/sentry/plugins/__init__.py
@@ -60,36 +60,36 @@ class GroupActionProvider:
     new_window = False
 
     @classmethod
-    def get_url(cls, group_id):
-        return reverse('sentry-group-plugin-action', args=(group_id, cls.slug))
+    def get_url(cls, project_id, group_id):
+        return reverse('sentry-group-plugin-action', args=(project_id, group_id, cls.slug))
 
-    def __init__(self, group_id):
-        self.url = self.__class__.get_url(group_id)
+    def __init__(self, project_id, group_id):
+        self.url = self.__class__.get_url(project_id, group_id)
 
-    def __call__(self, request, group):
+    def __call__(self, request, project, group):
         self.selected = request.path == self.url
         if not self.selected:
             return
-        return self.view(request, group)
+        return self.view(request, project, group)
 
     def view(self):
         """
         Handles the view logic. If no response is given, we continue to the next action provider.
         """
 
-    def tags(self, request, tag_list, group):
+    def tags(self, request, tag_list, project, group):
         """Modifies the tag list for a grouped message."""
         return tag_list
 
-    def actions(self, request, action_list, group):
+    def actions(self, request, action_list, project, group):
         """Modifies the action list for a grouped message."""
         return action_list
 
-    def panels(self, request, panel_list, group):
+    def panels(self, request, panel_list, project, group):
         """Modifies the panel list for a grouped message."""
         return panel_list
 
-    def widget(self, request, group):
+    def widget(self, request, project, group):
         """
         Renders as a widget in the group details sidebar.
         """
diff --git a/sentry/plugins/sentry_sites/models.py b/sentry/plugins/sentry_sites/models.py
index f78eb2fcc1..80539679a4 100644
--- a/sentry/plugins/sentry_sites/models.py
+++ b/sentry/plugins/sentry_sites/models.py
@@ -24,8 +24,8 @@ class SiteGroupPanel(GroupActionProvider):
         panel_list.append((self.title, self.__class__.get_url(project.pk, group.pk)))
         return panel_list
 
-    def view(self, request, group):
+    def view(self, request, project, group):
         return render_to_response('sentry/plugins/sentry_sites/index.html', locals())
     
-    def widget(self, request, group):
+    def widget(self, request, project, group):
         return render_to_string('sentry/plugins/sentry_sites/widget.html', locals())
\ No newline at end of file
diff --git a/sentry/web/frontend/groups.py b/sentry/web/frontend/groups.py
index 710dfc01cf..f71025a502 100644
--- a/sentry/web/frontend/groups.py
+++ b/sentry/web/frontend/groups.py
@@ -354,13 +354,13 @@ def group_plugin_action(request, project, group_id, slug):
     group = get_object_or_404(Group, pk=group_id)
 
     if group.project and group.project != project:
-        return HttpResponseRedirect(reverse('sentry-group-action', kwargs={'group_id': group.pk, 'project_id': group.project_id, 'slug': slug}))
+        return HttpResponseRedirect(reverse('sentry-group-plugin-action', kwargs={'group_id': group.pk, 'project_id': group.project_id, 'slug': slug}))
 
     try:
         cls = GroupActionProvider.plugins[slug]
     except KeyError:
         raise Http404('Plugin not found')
-    response = cls(group_id)(request, group)
+    response = cls(group.project_id, group_id)(request, project, group)
     if response:
         return response
     return HttpResponseRedirect(request.META.get('HTTP_REFERER') or reverse('sentry', kwargs={'project_id': group.project_id}))
