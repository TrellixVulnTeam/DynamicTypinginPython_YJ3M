commit 85a7194c2835d714e19706af09b0ee77a3e53316
Author: Chris Clark <christopherchristopherclark@gmail.com>
Date:   Wed Apr 25 15:41:37 2018 -0700

    feat(settings): stats table design improvements (#7946)
    
    * move entire panel into one template so we can share grid values
    
    keep template changes simple with a shared grid layout
    
    * fix import names post stats directory change

diff --git a/src/sentry/static/sentry/app/views/organizationStats/organizationStatsDetails.jsx b/src/sentry/static/sentry/app/views/organizationStats/organizationStatsDetails.jsx
index 7f881f8021..c556a13b10 100644
--- a/src/sentry/static/sentry/app/views/organizationStats/organizationStatsDetails.jsx
+++ b/src/sentry/static/sentry/app/views/organizationStats/organizationStatsDetails.jsx
@@ -11,6 +11,7 @@ import ProjectTable from './projectTable';
 import SettingsPageHeader from '../settings/components/settingsPageHeader';
 import StackedBarChart from '../../components/stackedBarChart';
 import TextBlock from '../settings/components/text/textBlock';
+import {ProjectTableLayout, ProjectTableDataElement} from './projectTableLayout';
 
 class OrganizationStats extends React.Component {
   static propTypes = {
@@ -103,7 +104,15 @@ class OrganizationStats extends React.Component {
         </div>
 
         <Panel>
-          <PanelHeader>{t('Events by Project')}</PanelHeader>
+          <PanelHeader>
+            <ProjectTableLayout>
+              <div>{t('Project')}</div>
+              <ProjectTableDataElement>{t('Accepted')}</ProjectTableDataElement>
+              <ProjectTableDataElement>{t('Rate Limited')}</ProjectTableDataElement>
+              <ProjectTableDataElement>{t('Filtered')}</ProjectTableDataElement>
+              <ProjectTableDataElement>{t('Total')}</ProjectTableDataElement>
+            </ProjectTableLayout>
+          </PanelHeader>
           <PanelBody>
             {statsLoading || projectsLoading ? (
               <LoadingIndicator />
diff --git a/src/sentry/static/sentry/app/views/organizationStats/projectTable.jsx b/src/sentry/static/sentry/app/views/organizationStats/projectTable.jsx
index 864c4fd01d..91f53e3c93 100644
--- a/src/sentry/static/sentry/app/views/organizationStats/projectTable.jsx
+++ b/src/sentry/static/sentry/app/views/organizationStats/projectTable.jsx
@@ -1,107 +1,91 @@
 import {Link} from 'react-router';
 import PropTypes from 'prop-types';
 import React from 'react';
+import styled from 'react-emotion';
 
-import {t} from '../../locale';
+import {ProjectTableLayout, ProjectTableDataElement} from './projectTableLayout';
 import Count from '../../components/count';
+import space from '../../styles/space';
 
-let getPercent = (item, total) => {
-  if (total === 0) {
-    return '';
-  }
-  if (item === 0) {
-    return '0%';
-  }
-  return parseInt(item / total * 100, 10) + '%';
-};
-
-class ProjectTable extends React.PureComponent {
-  static propTypes = {
-    projectMap: PropTypes.object.isRequired,
-    projectTotals: PropTypes.array.isRequired,
-    orgTotal: PropTypes.object.isRequired,
-    organization: PropTypes.object.isRequired,
+const ProjectTable = ({projectMap, projectTotals, orgTotal, organization}) => {
+  const getPercent = (item, total) => {
+    if (total === 0) {
+      return '';
+    }
+    if (item === 0) {
+      return '0%';
+    }
+    return parseInt(item / total * 100, 10) + '%';
   };
 
-  render() {
-    let projectMap = this.props.projectMap;
-    let projectTotals = this.props.projectTotals;
-    let orgTotal = this.props.orgTotal;
-    let org = this.props.organization;
-    let features = new Set(org.features);
+  let features = new Set(organization.features);
 
-    if (!projectTotals) {
-      return <div />;
-    }
+  if (!projectTotals) {
+    return <div />;
+  }
 
-    // Sort based on # events received in desc order
-    projectTotals.sort((a, b) => {
-      return b.received - a.received;
-    });
+  return projectTotals.sort((a, b) => b.received - a.received).map((item, index) => {
+    let project = projectMap[item.id];
+
+    if (!project) return null;
 
     return (
-      <table className="table m-b-0">
-        <thead>
-          <tr>
-            <th>{t('Project')}</th>
-            <th className="align-right">{t('Accepted')}</th>
-            <th className="align-right">
-              {t('Dropped')}
-              <br />
-              {t('(Rate Limit)')}
-            </th>
-            <th className="align-right">
-              {t('Dropped')}
-              <br />
-              {t('(Filters)')}
-            </th>
-            <th className="align-right">{t('Total')}</th>
-          </tr>
-        </thead>
-        <tbody>
-          {projectTotals.map(item => {
-            let project = projectMap[item.id];
+      <StyledProjectTableLayout key={index}>
+        <StyledProjectTitle>
+          <Link to={`/${organization.slug}/${project.slug}/`}>
+            {features.has('new-teams')
+              ? project.slug
+              : `${project.team.name} / ${project.name}`}
+          </Link>
+        </StyledProjectTitle>
+        <ProjectTableDataElement>
+          <Count value={item.accepted} />
+          <Percentage>{getPercent(item.accepted, orgTotal.accepted)}</Percentage>
+        </ProjectTableDataElement>
+        <ProjectTableDataElement>
+          <Count value={item.rejected} />
+          <Percentage>{getPercent(item.rejected, orgTotal.rejected)}</Percentage>
+        </ProjectTableDataElement>
+        <ProjectTableDataElement>
+          <Count value={item.blacklisted} />
+          <Percentage>{getPercent(item.blacklisted, orgTotal.blacklisted)}</Percentage>
+        </ProjectTableDataElement>
+        <ProjectTableDataElement>
+          <Count value={item.received} />
+          <Percentage>{getPercent(item.received, orgTotal.received)}</Percentage>
+        </ProjectTableDataElement>
+      </StyledProjectTableLayout>
+    );
+  });
+};
+
+ProjectTable.propTypes = {
+  projectMap: PropTypes.object.isRequired,
+  projectTotals: PropTypes.array.isRequired,
+  orgTotal: PropTypes.object.isRequired,
+  organization: PropTypes.object.isRequired,
+};
 
-            if (!project) {
-              return null;
-            }
+const StyledProjectTitle = styled(ProjectTableDataElement)`
+  display: flex;
+  align-items: center;
+  text-align: left;
+`;
 
-            return (
-              <tr key={item.id}>
-                <td>
-                  <Link to={`/${org.slug}/${project.slug}/`}>
-                    {features.has('new-teams')
-                      ? project.slug
-                      : `${project.team.name} / ${project.name}`}
-                  </Link>
-                </td>
-                <td className="align-right">
-                  <Count value={item.accepted} />
-                  <br />
-                  <small>{getPercent(item.accepted, orgTotal.accepted)}</small>
-                </td>
-                <td className="align-right">
-                  <Count value={item.rejected} />
-                  <br />
-                  <small>{getPercent(item.rejected, orgTotal.rejected)}</small>
-                </td>
-                <td className="align-right">
-                  <Count value={item.blacklisted} />
-                  <br />
-                  <small>{getPercent(item.blacklisted, orgTotal.blacklisted)}</small>
-                </td>
-                <td className="align-right">
-                  <Count value={item.received} />
-                  <br />
-                  <small>{getPercent(item.received, orgTotal.received)}</small>
-                </td>
-              </tr>
-            );
-          })}
-        </tbody>
-      </table>
-    );
+const StyledProjectTableLayout = styled(ProjectTableLayout)`
+  padding: ${space(2)};
+
+  &:not(:last-child) {
+    border-bottom: 1px solid ${p => p.theme.borderLight};
   }
-}
+`;
+
+const Percentage = styled(
+  ({children, ...props}) => children !== '' && <div {...props}>{children}</div>
+)`
+  margin-top: ${space(0.25)};
+  color: ${p => p.theme.gray2};
+  font-size: 12px;
+`;
 
 export default ProjectTable;
diff --git a/src/sentry/static/sentry/app/views/organizationStats/projectTableLayout.jsx b/src/sentry/static/sentry/app/views/organizationStats/projectTableLayout.jsx
new file mode 100644
index 0000000000..9ae8c438a1
--- /dev/null
+++ b/src/sentry/static/sentry/app/views/organizationStats/projectTableLayout.jsx
@@ -0,0 +1,15 @@
+import styled from 'react-emotion';
+import space from '../../styles/space';
+import overflowEllipsis from '../../styles/overflowEllipsis';
+
+export const ProjectTableLayout = styled('div')`
+  display: grid;
+  grid-template-columns: auto 110px 120px 100px 100px;
+  width: 100%;
+`;
+
+export const ProjectTableDataElement = styled('div')`
+  text-align: right;
+  padding: 0 ${space(0.5)};
+  ${overflowEllipsis};
+`;
