commit 7f83ddd51cd2a9f0ab1cfb0332eee93e671bf3ad
Author: Lyn Nagara <lyn.nagara@gmail.com>
Date:   Wed Dec 18 16:35:09 2019 -0800

    test: Use new event model in tests (#16166)

diff --git a/src/sentry/eventstore/base.py b/src/sentry/eventstore/base.py
index 2cd076da6c..f951ee5879 100644
--- a/src/sentry/eventstore/base.py
+++ b/src/sentry/eventstore/base.py
@@ -172,7 +172,7 @@ class EventStorage(Service):
         """
         raise NotImplementedError
 
-    def create_event(self, project_id, event_id, group_id, data):
+    def create_event(self, project_id=None, event_id=None, group_id=None, data=None):
         """
         Returns an Event from processed data
         """
diff --git a/tests/sentry/deletions/test_group.py b/tests/sentry/deletions/test_group.py
index a9b8a2308f..470e27168a 100644
--- a/tests/sentry/deletions/test_group.py
+++ b/tests/sentry/deletions/test_group.py
@@ -4,7 +4,6 @@ import mock
 from uuid import uuid4
 
 from sentry.models import (
-    Event,
     EventAttachment,
     File,
     Group,
@@ -16,6 +15,7 @@ from sentry.models import (
 )
 from sentry import nodestore
 from sentry.deletions.defaults.group import EventDataDeletionTask
+from sentry.eventstore.models import Event
 from sentry.tasks.deletion import delete_groups
 from sentry.testutils import SnubaTestCase, TestCase
 from sentry.testutils.helpers.datetime import iso_format, before_now
diff --git a/tests/sentry/event_manager/interfaces/test_breadcrumbs.py b/tests/sentry/event_manager/interfaces/test_breadcrumbs.py
index b6e60abad1..73dbfd5fea 100644
--- a/tests/sentry/event_manager/interfaces/test_breadcrumbs.py
+++ b/tests/sentry/event_manager/interfaces/test_breadcrumbs.py
@@ -1,10 +1,8 @@
-# -*- coding: utf-8 -*-
-
 from __future__ import absolute_import
 
 import pytest
 
-from sentry.models import Event
+from sentry import eventstore
 from sentry.event_manager import EventManager
 
 
@@ -13,7 +11,7 @@ def make_breadcrumbs_snapshot(insta_snapshot):
     def inner(data):
         mgr = EventManager(data={"breadcrumbs": data})
         mgr.normalize()
-        evt = Event(data=mgr.get_data())
+        evt = eventstore.create_event(data=mgr.get_data())
         breadcrumbs = evt.interfaces.get("breadcrumbs")
 
         insta_snapshot(
diff --git a/tests/sentry/event_manager/interfaces/test_contexts.py b/tests/sentry/event_manager/interfaces/test_contexts.py
index cb61fddbd5..04b961efb2 100644
--- a/tests/sentry/event_manager/interfaces/test_contexts.py
+++ b/tests/sentry/event_manager/interfaces/test_contexts.py
@@ -4,7 +4,7 @@ from __future__ import absolute_import
 
 import pytest
 
-from sentry.models import Event
+from sentry import eventstore
 from sentry.event_manager import EventManager
 
 
@@ -13,8 +13,7 @@ def make_ctx_snapshot(insta_snapshot):
     def inner(data):
         mgr = EventManager(data={"contexts": data})
         mgr.normalize()
-        evt = Event(data=mgr.get_data())
-
+        evt = eventstore.create_event(data=mgr.get_data())
         interface = evt.interfaces.get("contexts")
 
         insta_snapshot(
diff --git a/tests/sentry/event_manager/interfaces/test_csp.py b/tests/sentry/event_manager/interfaces/test_csp.py
index 30deefe1d3..58bf28ddf1 100644
--- a/tests/sentry/event_manager/interfaces/test_csp.py
+++ b/tests/sentry/event_manager/interfaces/test_csp.py
@@ -4,9 +4,9 @@ from __future__ import absolute_import
 
 import pytest
 
+from sentry import eventstore
 from sentry.interfaces.security import Csp
 from sentry.event_manager import EventManager
-from sentry.models import Event
 
 
 @pytest.fixture
@@ -14,8 +14,7 @@ def make_csp_snapshot(insta_snapshot):
     def inner(data):
         mgr = EventManager(data={"csp": data})
         mgr.normalize()
-        evt = Event(data=mgr.get_data())
-
+        evt = eventstore.create_event(data=mgr.get_data())
         interface = evt.interfaces.get("csp")
 
         insta_snapshot(
diff --git a/tests/sentry/event_manager/interfaces/test_debug_meta.py b/tests/sentry/event_manager/interfaces/test_debug_meta.py
index b9ded413bb..a343db9535 100644
--- a/tests/sentry/event_manager/interfaces/test_debug_meta.py
+++ b/tests/sentry/event_manager/interfaces/test_debug_meta.py
@@ -4,7 +4,7 @@ from __future__ import absolute_import
 
 import pytest
 
-from sentry.models import Event
+from sentry import eventstore
 from sentry.event_manager import EventManager
 
 
@@ -13,7 +13,7 @@ def make_debug_meta_snapshot(insta_snapshot):
     def inner(data):
         mgr = EventManager(data={"debug_meta": data})
         mgr.normalize()
-        evt = Event(data=mgr.get_data())
+        evt = eventstore.create_event(data=mgr.get_data())
         interface = evt.interfaces.get("debug_meta")
         insta_snapshot(
             {"errors": evt.data.get("errors"), "to_json": interface and interface.to_json()}
diff --git a/tests/sentry/event_manager/interfaces/test_exception.py b/tests/sentry/event_manager/interfaces/test_exception.py
index b7d7e409e0..9eb4cb452a 100644
--- a/tests/sentry/event_manager/interfaces/test_exception.py
+++ b/tests/sentry/event_manager/interfaces/test_exception.py
@@ -4,9 +4,9 @@ from __future__ import absolute_import
 
 import pytest
 
+from sentry import eventstore
 from sentry.interfaces.exception import Exception, slim_exception_data
 from sentry.stacktraces.processing import normalize_stacktraces_for_grouping
-from sentry.models import Event
 from sentry.event_manager import EventManager
 
 
@@ -15,7 +15,7 @@ def make_exception_snapshot(insta_snapshot):
     def inner(data):
         mgr = EventManager(data={"exception": data})
         mgr.normalize()
-        evt = Event(data=mgr.get_data())
+        evt = eventstore.create_event(data=mgr.get_data())
 
         interface = evt.interfaces.get("exception")
 
diff --git a/tests/sentry/event_manager/interfaces/test_expectct.py b/tests/sentry/event_manager/interfaces/test_expectct.py
index 8ff565b1b4..c3b27f5d29 100644
--- a/tests/sentry/event_manager/interfaces/test_expectct.py
+++ b/tests/sentry/event_manager/interfaces/test_expectct.py
@@ -4,9 +4,9 @@ from __future__ import absolute_import
 
 import pytest
 
+from sentry import eventstore
 from sentry.interfaces.security import ExpectCT
 from sentry.event_manager import EventManager
-from sentry.models import Event
 
 
 @pytest.fixture
@@ -14,7 +14,7 @@ def make_expectct_snapshot(insta_snapshot):
     def inner(data):
         mgr = EventManager(data={"expectct": data})
         mgr.normalize()
-        evt = Event(data=mgr.get_data())
+        evt = eventstore.create_event(data=mgr.get_data())
 
         interface = evt.interfaces.get("expectct")
 
diff --git a/tests/sentry/event_manager/interfaces/test_expectstaple.py b/tests/sentry/event_manager/interfaces/test_expectstaple.py
index 5ad58995ca..54f1fbdd66 100644
--- a/tests/sentry/event_manager/interfaces/test_expectstaple.py
+++ b/tests/sentry/event_manager/interfaces/test_expectstaple.py
@@ -4,9 +4,9 @@ from __future__ import absolute_import
 
 import pytest
 
+from sentry import eventstore
 from sentry.interfaces.security import ExpectStaple
 from sentry.event_manager import EventManager
-from sentry.models import Event
 
 
 @pytest.fixture
@@ -14,7 +14,7 @@ def make_csp_snapshot(insta_snapshot):
     def inner(data):
         mgr = EventManager(data={"expectstaple": data})
         mgr.normalize()
-        evt = Event(data=mgr.get_data())
+        evt = eventstore.create_event(data=mgr.get_data())
         insta_snapshot(
             {
                 "errors": evt.data.get("errors"),
diff --git a/tests/sentry/event_manager/interfaces/test_frame.py b/tests/sentry/event_manager/interfaces/test_frame.py
index e330abf2c5..22dd3b8b57 100644
--- a/tests/sentry/event_manager/interfaces/test_frame.py
+++ b/tests/sentry/event_manager/interfaces/test_frame.py
@@ -4,8 +4,8 @@ from __future__ import absolute_import
 
 import pytest
 
+from sentry import eventstore
 from sentry.event_manager import EventManager
-from sentry.models import Event
 
 
 @pytest.fixture
@@ -13,7 +13,7 @@ def make_frames_snapshot(insta_snapshot):
     def inner(data):
         mgr = EventManager(data={"stacktrace": {"frames": [data]}})
         mgr.normalize()
-        evt = Event(data=mgr.get_data())
+        evt = eventstore.create_event(data=mgr.get_data())
         frame = evt.interfaces["stacktrace"].frames[0]
 
         insta_snapshot({"errors": evt.data.get("errors"), "to_json": frame.to_json()})
diff --git a/tests/sentry/event_manager/interfaces/test_geo.py b/tests/sentry/event_manager/interfaces/test_geo.py
index 20ac8dbbdc..b77127c81c 100644
--- a/tests/sentry/event_manager/interfaces/test_geo.py
+++ b/tests/sentry/event_manager/interfaces/test_geo.py
@@ -2,7 +2,7 @@ from __future__ import absolute_import
 
 import pytest
 
-from sentry.models import Event
+from sentry import eventstore
 from sentry.event_manager import EventManager
 
 
@@ -11,7 +11,7 @@ def make_geo_snapshot(insta_snapshot):
     def inner(data):
         mgr = EventManager(data={"user": {"id": "123", "geo": data}})
         mgr.normalize()
-        evt = Event(data=mgr.get_data())
+        evt = eventstore.create_event(data=mgr.get_data())
 
         interface = evt.interfaces["user"].geo
         insta_snapshot(
diff --git a/tests/sentry/event_manager/interfaces/test_http.py b/tests/sentry/event_manager/interfaces/test_http.py
index 64950ac1de..399ab50b8f 100644
--- a/tests/sentry/event_manager/interfaces/test_http.py
+++ b/tests/sentry/event_manager/interfaces/test_http.py
@@ -1,10 +1,8 @@
-# -*- coding: utf-8 -*-
-
 from __future__ import absolute_import
 
 import pytest
 
-from sentry.models import Event
+from sentry import eventstore
 from sentry.event_manager import EventManager
 
 
@@ -13,7 +11,7 @@ def make_http_snapshot(insta_snapshot):
     def inner(data):
         mgr = EventManager(data={"request": data})
         mgr.normalize()
-        evt = Event(data=mgr.get_data())
+        evt = eventstore.create_event(data=mgr.get_data())
 
         interface = evt.interfaces.get("request")
 
diff --git a/tests/sentry/event_manager/interfaces/test_mechanism.py b/tests/sentry/event_manager/interfaces/test_mechanism.py
index 5ed76f5928..1587036887 100644
--- a/tests/sentry/event_manager/interfaces/test_mechanism.py
+++ b/tests/sentry/event_manager/interfaces/test_mechanism.py
@@ -1,11 +1,9 @@
-# -*- coding: utf-8 -*-
-
 from __future__ import absolute_import
 
 import pytest
 
+from sentry import eventstore
 from sentry.interfaces.exception import upgrade_legacy_mechanism
-from sentry.models import Event
 from sentry.event_manager import EventManager
 
 
@@ -16,7 +14,7 @@ def make_mechanism_snapshot(insta_snapshot):
             data={"exception": {"values": [{"type": "FooError", "mechanism": data}]}}
         )
         mgr.normalize()
-        evt = Event(data=mgr.get_data())
+        evt = eventstore.create_event(data=mgr.get_data())
         mechanism = evt.interfaces["exception"].values[0].mechanism
 
         insta_snapshot(
diff --git a/tests/sentry/event_manager/interfaces/test_message.py b/tests/sentry/event_manager/interfaces/test_message.py
index 68fdc51b27..dd366553c5 100644
--- a/tests/sentry/event_manager/interfaces/test_message.py
+++ b/tests/sentry/event_manager/interfaces/test_message.py
@@ -1,10 +1,8 @@
-# -*- coding: utf-8 -*-
-
 from __future__ import absolute_import
 
 import pytest
 
-from sentry.models import Event
+from sentry import eventstore
 from sentry.event_manager import EventManager
 
 
@@ -13,7 +11,7 @@ def make_message_snapshot(insta_snapshot):
     def inner(data):
         mgr = EventManager(data={"logentry": data})
         mgr.normalize()
-        evt = Event(data=mgr.get_data())
+        evt = eventstore.create_event(data=mgr.get_data())
 
         interface = evt.interfaces.get("logentry")
         insta_snapshot(
diff --git a/tests/sentry/event_manager/interfaces/test_sdk.py b/tests/sentry/event_manager/interfaces/test_sdk.py
index 3c0313baca..ff193c2d57 100644
--- a/tests/sentry/event_manager/interfaces/test_sdk.py
+++ b/tests/sentry/event_manager/interfaces/test_sdk.py
@@ -4,7 +4,7 @@ from __future__ import absolute_import
 
 import pytest
 
-from sentry.models import Event
+from sentry import eventstore
 from sentry.event_manager import EventManager
 
 
@@ -13,7 +13,7 @@ def make_sdk_snapshot(insta_snapshot):
     def inner(data):
         mgr = EventManager(data={"sdk": data})
         mgr.normalize()
-        evt = Event(data=mgr.get_data())
+        evt = eventstore.create_event(data=mgr.get_data())
         insta_snapshot(
             {"errors": evt.data.get("errors"), "to_json": evt.interfaces.get("sdk").to_json()}
         )
diff --git a/tests/sentry/event_manager/interfaces/test_single_exception.py b/tests/sentry/event_manager/interfaces/test_single_exception.py
index ad5af009bc..9a90ac659c 100644
--- a/tests/sentry/event_manager/interfaces/test_single_exception.py
+++ b/tests/sentry/event_manager/interfaces/test_single_exception.py
@@ -4,7 +4,7 @@ from __future__ import absolute_import
 
 import pytest
 
-from sentry.models import Event
+from sentry import eventstore
 from sentry.event_manager import EventManager
 
 
@@ -13,7 +13,7 @@ def make_single_exception_snapshot(insta_snapshot):
     def inner(data):
         mgr = EventManager(data={"exception": {"values": [data]}})
         mgr.normalize()
-        evt = Event(data=mgr.get_data())
+        evt = eventstore.create_event(data=mgr.get_data())
 
         excs = evt.interfaces["exception"].values
         if excs:
diff --git a/tests/sentry/event_manager/interfaces/test_spans.py b/tests/sentry/event_manager/interfaces/test_spans.py
index 26207e4e6a..d6a7ee7872 100644
--- a/tests/sentry/event_manager/interfaces/test_spans.py
+++ b/tests/sentry/event_manager/interfaces/test_spans.py
@@ -4,7 +4,7 @@ from __future__ import absolute_import
 
 import pytest
 
-from sentry.models import Event
+from sentry import eventstore
 from sentry.event_manager import EventManager
 
 START_TIME = 1562873192.624
@@ -16,7 +16,7 @@ def make_spans_snapshot(insta_snapshot):
     def inner(data):
         mgr = EventManager(data={"spans": data})
         mgr.normalize()
-        evt = Event(data=mgr.get_data())
+        evt = eventstore.create_event(data=mgr.get_data())
 
         interface = evt.interfaces.get("spans")
 
diff --git a/tests/sentry/event_manager/interfaces/test_template.py b/tests/sentry/event_manager/interfaces/test_template.py
index 0ecd35a1f3..a54f9ea518 100644
--- a/tests/sentry/event_manager/interfaces/test_template.py
+++ b/tests/sentry/event_manager/interfaces/test_template.py
@@ -4,8 +4,8 @@ from __future__ import absolute_import
 
 import pytest
 
+from sentry import eventstore
 from sentry.event_manager import EventManager
-from sentry.models import Event
 
 
 @pytest.fixture
@@ -13,7 +13,7 @@ def make_template_snapshot(insta_snapshot):
     def inner(data):
         mgr = EventManager(data={"template": data})
         mgr.normalize()
-        evt = Event(data=mgr.get_data())
+        evt = eventstore.create_event(data=mgr.get_data())
 
         interface = evt.interfaces.get("template")
         insta_snapshot(
diff --git a/tests/sentry/event_manager/interfaces/test_threads.py b/tests/sentry/event_manager/interfaces/test_threads.py
index 222c44fc00..c750246d7f 100644
--- a/tests/sentry/event_manager/interfaces/test_threads.py
+++ b/tests/sentry/event_manager/interfaces/test_threads.py
@@ -4,8 +4,8 @@ from __future__ import absolute_import
 
 import pytest
 
+from sentry import eventstore
 from sentry.event_manager import EventManager
-from sentry.models import Event
 
 
 @pytest.fixture
@@ -13,7 +13,7 @@ def make_threads_snapshot(insta_snapshot):
     def inner(data):
         mgr = EventManager(data={"threads": data})
         mgr.normalize()
-        evt = Event(data=mgr.get_data())
+        evt = eventstore.create_event(data=mgr.get_data())
 
         interface = evt.interfaces.get("threads")
         insta_snapshot(
diff --git a/tests/sentry/event_manager/interfaces/test_user.py b/tests/sentry/event_manager/interfaces/test_user.py
index 4b21288af1..6c4ff709a1 100644
--- a/tests/sentry/event_manager/interfaces/test_user.py
+++ b/tests/sentry/event_manager/interfaces/test_user.py
@@ -4,8 +4,8 @@ from __future__ import absolute_import
 
 import pytest
 
+from sentry import eventstore
 from sentry.event_manager import EventManager
-from sentry.models import Event
 
 
 @pytest.fixture
@@ -13,7 +13,7 @@ def make_user_snapshot(insta_snapshot):
     def inner(data):
         mgr = EventManager(data={"user": data})
         mgr.normalize()
-        evt = Event(data=mgr.get_data())
+        evt = eventstore.create_event(data=mgr.get_data())
 
         interface = evt.interfaces.get("user")
 
diff --git a/tests/sentry/event_manager/test_event_manager.py b/tests/sentry/event_manager/test_event_manager.py
index 74cc454f45..249cf40f72 100644
--- a/tests/sentry/event_manager/test_event_manager.py
+++ b/tests/sentry/event_manager/test_event_manager.py
@@ -15,12 +15,12 @@ from time import time
 from sentry import nodestore
 from sentry.app import tsdb
 from sentry.constants import MAX_VERSION_LENGTH
+from sentry.eventstore.models import Event
 from sentry.event_manager import HashDiscarded, EventManager, EventUser
 from sentry.grouping.utils import hash_from_values
 from sentry.models import (
     Activity,
     Environment,
-    Event,
     ExternalIssue,
     Group,
     GroupEnvironment,
diff --git a/tests/sentry/grouping/test_fingerprinting.py b/tests/sentry/grouping/test_fingerprinting.py
index 9beb776c68..db121c2640 100644
--- a/tests/sentry/grouping/test_fingerprinting.py
+++ b/tests/sentry/grouping/test_fingerprinting.py
@@ -6,7 +6,7 @@ import os
 import json
 import pytest
 
-from sentry.models import Event
+from sentry import eventstore
 from sentry.event_manager import EventManager
 from sentry.grouping.api import apply_server_fingerprinting
 from sentry.grouping.fingerprinting import FingerprintingRules
@@ -73,7 +73,7 @@ def test_event_hash_variant(insta_snapshot, testcase):
     data.setdefault("fingerprint", ["{{ default }}"])
     apply_server_fingerprinting(data, config)
 
-    evt = Event(data=data, platform=data["platform"])
+    evt = eventstore.create_event(data=data)
 
     def dump_variant(v):
         rv = v.as_dict()
diff --git a/tests/sentry/grouping/test_variants.py b/tests/sentry/grouping/test_variants.py
index f14ae5c68a..2a1e75ac01 100644
--- a/tests/sentry/grouping/test_variants.py
+++ b/tests/sentry/grouping/test_variants.py
@@ -1,12 +1,10 @@
-# -*- coding: utf-8 -*-
-
 from __future__ import absolute_import, print_function
 
 import os
 import json
 import pytest
 
-from sentry.models import Event
+from sentry import eventstore
 from sentry.stacktraces.processing import normalize_stacktraces_for_grouping
 from sentry.event_manager import EventManager
 from sentry.grouping.component import GroupingComponent
@@ -95,7 +93,7 @@ def test_event_hash_variant(insta_snapshot, config_name, test_name, log):
     # Normalize the stacktrace for grouping.  This normally happens in
     # save()
     normalize_stacktraces_for_grouping(data, load_grouping_config(grouping_config))
-    evt = Event(data=data, platform=data["platform"])
+    evt = eventstore.create_event(data=data)
 
     # Make sure we don't need to touch the DB here because this would
     # break stuff later on.
diff --git a/tests/sentry/tasks/test_deletion.py b/tests/sentry/tasks/test_deletion.py
index ed5eecb3aa..0d841b9e1d 100644
--- a/tests/sentry/tasks/test_deletion.py
+++ b/tests/sentry/tasks/test_deletion.py
@@ -8,6 +8,7 @@ import pytest
 
 from sentry import nodestore
 from sentry.constants import ObjectStatus
+from sentry.eventstore.models import Event
 from sentry.exceptions import DeleteAborted
 from sentry.models import (
     ApiApplication,
@@ -18,7 +19,6 @@ from sentry.models import (
     CommitAuthor,
     Environment,
     EnvironmentProject,
-    Event,
     Group,
     GroupAssignee,
     GroupHash,
@@ -217,7 +217,6 @@ class DeleteGroupTest(TestCase):
         with self.tasks():
             delete_groups(object_ids=[group.id])
 
-        assert not Event.objects.filter(event_id=event.event_id).exists()
         assert not GroupRedirect.objects.filter(group_id=group.id).exists()
         assert not GroupHash.objects.filter(group_id=group.id).exists()
         assert not Group.objects.filter(id=group.id).exists()
diff --git a/tests/sentry/utils/test_sdk.py b/tests/sentry/utils/test_sdk.py
index 289ccd0033..fac304623f 100644
--- a/tests/sentry/utils/test_sdk.py
+++ b/tests/sentry/utils/test_sdk.py
@@ -6,7 +6,7 @@ from django.conf import settings
 from sentry.utils.sdk import configure_sdk, bind_organization_context
 from sentry.app import raven
 
-from sentry.models import Event
+from sentry.eventstore.models import Event
 from sentry.testutils import TestCase
 from sentry import nodestore
 
