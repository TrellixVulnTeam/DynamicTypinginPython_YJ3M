commit febc98943927a3f824fb0ce7037b3d129a3379b6
Author: Jess MacQueen <macqueen@users.noreply.github.com>
Date:   Wed Oct 3 12:55:27 2018 -0700

    feat(api): Add ability to set integration id to repo details endpoint (#9978)
    
    * feat(api): Add ability to set integration id to repo details endpoint
    
    * validate integration id, update repo provider, add tests
    
    * fix test

diff --git a/src/sentry/api/endpoints/organization_repository_details.py b/src/sentry/api/endpoints/organization_repository_details.py
index a78a72c091..dc3196e88f 100644
--- a/src/sentry/api/endpoints/organization_repository_details.py
+++ b/src/sentry/api/endpoints/organization_repository_details.py
@@ -11,7 +11,7 @@ from sentry.api.bases.organization import OrganizationEndpoint
 from sentry.api.exceptions import ResourceDoesNotExist
 from sentry.api.serializers import serialize
 from sentry.constants import ObjectStatus
-from sentry.models import Commit, Repository
+from sentry.models import Commit, Integration, Repository
 from sentry.tasks.deletion import delete_repository
 
 delete_logger = logging.getLogger('sentry.deletions.api')
@@ -27,6 +27,7 @@ class RepositorySerializer(serializers.Serializer):
         ('visible', 'visible'),
         ('active', 'active'),
     ))
+    integrationId = serializers.IntegerField(required=False)
 
 
 class OrganizationRepositoryDetailsEndpoint(OrganizationEndpoint):
@@ -49,13 +50,30 @@ class OrganizationRepositoryDetailsEndpoint(OrganizationEndpoint):
 
         serializer = RepositorySerializer(data=request.DATA, partial=True)
 
-        if serializer.is_valid():
-            result = serializer.object
-            if result.get('status'):
-                if result['status'] in ('visible', 'active'):
-                    repo.update(status=ObjectStatus.VISIBLE)
-                else:
-                    raise NotImplementedError
+        if not serializer.is_valid():
+            return Response(serializer.errors, status=400)
+
+        result = serializer.object
+        update_kwargs = {}
+        if result.get('status'):
+            if result['status'] in ('visible', 'active'):
+                update_kwargs['status'] = ObjectStatus.VISIBLE
+            else:
+                raise NotImplementedError
+        if result.get('integrationId'):
+            try:
+                integration = Integration.objects.get(
+                    id=result['integrationId'],
+                    organizations=organization,
+                )
+            except Integration.DoesNotExist:
+                return Response({'detail': 'Invalid integration id'}, status=400)
+
+            update_kwargs['integration_id'] = integration.id
+            update_kwargs['provider'] = 'integrations:%s' % (integration.provider,)
+
+        if update_kwargs:
+            repo.update(**update_kwargs)
 
         return Response(serialize(repo, request.user))
 
diff --git a/tests/sentry/api/endpoints/test_organization_repository_details.py b/tests/sentry/api/endpoints/test_organization_repository_details.py
index 5b234e3447..6cb805f16d 100644
--- a/tests/sentry/api/endpoints/test_organization_repository_details.py
+++ b/tests/sentry/api/endpoints/test_organization_repository_details.py
@@ -5,7 +5,7 @@ from mock import patch
 from django.core.urlresolvers import reverse
 
 from sentry.constants import ObjectStatus
-from sentry.models import Commit, Repository
+from sentry.models import Commit, Integration, Repository
 from sentry.testutils import APITestCase
 
 
@@ -155,3 +155,91 @@ class OrganizationRepositoryDeleteTest(APITestCase):
             },
             countdown=3600,
         )
+
+    def test_put(self):
+        self.login_as(user=self.user)
+
+        org = self.create_organization(owner=self.user, name='baz')
+        integration = Integration.objects.create(
+            provider='example',
+            name='example',
+        )
+        integration.add_organization(org)
+
+        repo = Repository.objects.create(
+            name='example',
+            organization_id=org.id,
+            status=ObjectStatus.DISABLED,
+        )
+
+        url = reverse(
+            'sentry-api-0-organization-repository-details', args=[
+                org.slug,
+                repo.id,
+            ]
+        )
+        response = self.client.put(url, data={
+            'status': 'visible',
+            'integrationId': integration.id,
+        })
+
+        assert response.status_code == 200
+
+        repo = Repository.objects.get(id=repo.id)
+        assert repo.status == ObjectStatus.VISIBLE
+        assert repo.integration_id == integration.id
+        assert repo.provider == 'integrations:example'
+
+    def test_put_bad_integration_org(self):
+        self.login_as(user=self.user)
+
+        org = self.create_organization(owner=self.user, name='baz')
+        integration = Integration.objects.create(
+            provider='example',
+            name='example',
+        )
+
+        repo = Repository.objects.create(
+            name='example',
+            organization_id=org.id,
+        )
+
+        url = reverse(
+            'sentry-api-0-organization-repository-details', args=[
+                org.slug,
+                repo.id,
+            ]
+        )
+        # integration isn't linked to org
+        response = self.client.put(url, data={
+            'status': 'visible',
+            'integrationId': integration.id,
+        })
+
+        assert response.status_code == 400
+        assert response.data['detail'] == 'Invalid integration id'
+
+    def test_put_bad_integration_id(self):
+        self.login_as(user=self.user)
+
+        org = self.create_organization(owner=self.user, name='baz')
+
+        repo = Repository.objects.create(
+            name='example',
+            organization_id=org.id,
+        )
+
+        url = reverse(
+            'sentry-api-0-organization-repository-details', args=[
+                org.slug,
+                repo.id,
+            ]
+        )
+        # integration isn't linked to org
+        response = self.client.put(url, data={
+            'status': 'visible',
+            'integrationId': 'notanumber',
+        })
+
+        assert response.status_code == 400
+        assert response.data == {'integrationId': ['Enter a whole number.']}
