commit 9addc24e5a2966a102febea68811c03bfca60d1a
Author: Billy Vong <billyvg@users.noreply.github.com>
Date:   Thu Aug 22 10:25:24 2019 -0700

    feat(ui): Add Events search bar to Incident Rules editor (#14473)
    
    This adds the same search bar that is Events/Issues into the Incident Rules editor form
    
    Closes SEN-894

diff --git a/src/sentry/static/sentry/app/components/smartSearchBar/index.jsx b/src/sentry/static/sentry/app/components/smartSearchBar/index.jsx
index f0f76d64b0..5ed4d02555 100644
--- a/src/sentry/static/sentry/app/components/smartSearchBar/index.jsx
+++ b/src/sentry/static/sentry/app/components/smartSearchBar/index.jsx
@@ -9,6 +9,7 @@ import styled, {css} from 'react-emotion';
 
 import {NEGATION_OPERATOR, SEARCH_WILDCARD} from 'app/constants';
 import {analytics} from 'app/utils/analytics';
+import {callIfFunction} from 'app/utils/callIfFunction';
 import {defined} from 'app/utils';
 import {
   fetchRecentSearches,
@@ -166,6 +167,12 @@ class SmartSearchBar extends React.Component {
 
     onSearch: PropTypes.func,
 
+    // Search input change event
+    onChange: PropTypes.func,
+
+    // Search input blur event
+    onBlur: PropTypes.func,
+
     onSavedRecentSearch: PropTypes.func,
 
     onSidebarToggle: PropTypes.func,
@@ -312,11 +319,13 @@ class SmartSearchBar extends React.Component {
     this.blurTimeout = setTimeout(() => {
       this.blurTimeout = null;
       this.setState({dropdownVisible: false});
+      callIfFunction(this.props.onBlur);
     }, this.DROPDOWN_BLUR_DURATION);
   };
 
   onQueryChange = evt => {
     this.setState({query: evt.target.value}, () => this.updateAutoCompleteItems());
+    callIfFunction(this.props.onChange, evt.target.value, evt);
   };
 
   onKeyUp = evt => {
diff --git a/src/sentry/static/sentry/app/components/smartSearchBar/searchDropdown.jsx b/src/sentry/static/sentry/app/components/smartSearchBar/searchDropdown.jsx
index b0082c39f3..6701e34f45 100644
--- a/src/sentry/static/sentry/app/components/smartSearchBar/searchDropdown.jsx
+++ b/src/sentry/static/sentry/app/components/smartSearchBar/searchDropdown.jsx
@@ -149,7 +149,7 @@ const GroupTitleIcon = styled('span')`
   margin-right: ${space(1)};
 `;
 
-const SearchDropdownGroupTitle = styled('h4')`
+const SearchDropdownGroupTitle = styled('header')`
   display: flex;
   align-items: center;
 
@@ -179,7 +179,8 @@ const SearchItem = styled(ListItem)`
   }
 `;
 
-const SearchItemTitleWrapper = styled('h5')`
+const SearchItemTitleWrapper = styled('div')`
+  color: ${p => p.theme.textColor};
   font-weight: normal;
   font-size: ${p => p.theme.fontSizeMedium};
   margin: 0;
diff --git a/src/sentry/static/sentry/app/views/settings/components/forms/fieldFromConfig.jsx b/src/sentry/static/sentry/app/views/settings/components/forms/fieldFromConfig.jsx
index a91e0a0e23..402122034d 100644
--- a/src/sentry/static/sentry/app/views/settings/components/forms/fieldFromConfig.jsx
+++ b/src/sentry/static/sentry/app/views/settings/components/forms/fieldFromConfig.jsx
@@ -24,6 +24,7 @@ export default class FieldFromConfig extends React.Component {
         'boolean',
         'choice',
         'choice_mapper',
+        'custom',
         'email',
         'hidden',
         'multichoice',
@@ -116,6 +117,8 @@ export default class FieldFromConfig extends React.Component {
         return <RadioField {...props} />;
       case 'rich_list':
         return <RichListField {...props} />;
+      case 'custom':
+        return field.Component(props);
       default:
         return null;
     }
diff --git a/src/sentry/static/sentry/app/views/settings/projectIncidentRules/ruleForm.tsx b/src/sentry/static/sentry/app/views/settings/projectIncidentRules/ruleForm.tsx
index 4bc927e771..b75d762f83 100644
--- a/src/sentry/static/sentry/app/views/settings/projectIncidentRules/ruleForm.tsx
+++ b/src/sentry/static/sentry/app/views/settings/projectIncidentRules/ruleForm.tsx
@@ -11,6 +11,7 @@ import {getFormattedDate} from 'app/utils/dates';
 import {t} from 'app/locale';
 import EventsRequest from 'app/views/events/utils/eventsRequest';
 import Form from 'app/views/settings/components/forms/form';
+import FormField from 'app/views/settings/components/forms/formField';
 import JsonForm from 'app/views/settings/components/forms/jsonForm';
 import LoadingMask from 'app/components/loadingMask';
 import Placeholder from 'app/components/placeholder';
@@ -18,6 +19,7 @@ import withApi from 'app/utils/withApi';
 import withConfig from 'app/utils/withConfig';
 import withOrganization from 'app/utils/withOrganization';
 import withProject from 'app/utils/withProject';
+import SearchBar from 'app/views/events/searchBar';
 
 import {
   AlertRuleAggregations,
@@ -342,13 +344,30 @@ class RuleForm extends React.Component<Props, State> {
                 },
                 {
                   name: 'query',
-                  type: 'text',
+                  type: 'custom',
                   label: t('Filter'),
                   defaultValue: '',
                   placeholder: 'error.type:TypeError',
                   help: t(
                     'You can apply standard Sentry filter syntax to filter by status, user, etc.'
                   ),
+                  Component: props => {
+                    return (
+                      <FormField {...props}>
+                        {({onChange, onBlur, onKeyDown}) => {
+                          return (
+                            <SearchBar
+                              organization={organization}
+                              onChange={onChange}
+                              onBlur={onBlur}
+                              onKeyDown={onKeyDown}
+                              onSearch={query => onChange(query, {})}
+                            />
+                          );
+                        }}
+                      </FormField>
+                    );
+                  },
                 },
                 {
                   name: 'alertThreshold',
