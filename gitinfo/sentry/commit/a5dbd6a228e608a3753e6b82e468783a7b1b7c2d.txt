commit a5dbd6a228e608a3753e6b82e468783a7b1b7c2d
Author: Lyn Nagara <lyn.nagara@gmail.com>
Date:   Mon Jul 30 14:18:33 2018 -0700

    feat(discover): Improve table autosizing (#9244)
    
    Recompute column widths with columns change. Make cell full width if there is only one column in table.

diff --git a/src/sentry/static/sentry/app/views/organizationDiscover/result/table.jsx b/src/sentry/static/sentry/app/views/organizationDiscover/result/table.jsx
index 5c5d218d14..152a32050b 100644
--- a/src/sentry/static/sentry/app/views/organizationDiscover/result/table.jsx
+++ b/src/sentry/static/sentry/app/views/organizationDiscover/result/table.jsx
@@ -22,6 +22,12 @@ export default class Result extends React.Component {
     this.canvas = document.createElement('canvas');
   }
 
+  componentWillReceiveProps(nextProps) {
+    if (this.props.result.meta !== nextProps.result.meta) {
+      this.grid.recomputeGridSize();
+    }
+  }
+
   cellRenderer = ({key, rowIndex, columnIndex, style}) => {
     const {meta, data} = this.props.result;
     const colName = meta[columnIndex].name;
@@ -40,12 +46,16 @@ export default class Result extends React.Component {
   // Estimates the column width based on the header row and the first two rows
   // of data. Since this might be expensive, we'll only do this if there are
   // less than 20 columns of data to check
-  getColumnWidth = ({index}) => {
+  getColumnWidth = ({index}, tableWidth) => {
     const MIN_COL_WIDTH = 100;
     const MAX_COL_WIDTH = 200;
 
     const {meta, data} = this.props.result;
 
+    if (meta.length === 1) {
+      return tableWidth;
+    }
+
     if (meta.length < 20) {
       const colName = meta[index].name;
       const sizes = [this.measureText(colName, true)];
@@ -81,13 +91,14 @@ export default class Result extends React.Component {
         <AutoSizer>
           {({width, height}) => (
             <MultiGrid
+              ref={ref => (this.grid = ref)}
               width={width}
               height={height}
               rowCount={data.length + 1} // Add 1 for header row
               columnCount={meta.length}
               fixedRowCount={1}
               rowHeight={30}
-              columnWidth={this.getColumnWidth}
+              columnWidth={opts => this.getColumnWidth(opts, width)}
               cellRenderer={this.cellRenderer}
               style={{border: `1px solid ${theme.borderLight}`}}
               styleTopRightGrid={{borderBottom: `2px solid ${theme.borderDark}`}}
