commit 68ab65d6d7fcf672a151ce2f882366d80b2cf0e6
Author: David Cramer <dcramer@gmail.com>
Date:   Tue May 21 23:00:11 2013 -0700

    Treat team owners as if they are project owners (fixes GH-898)

diff --git a/src/sentry/web/forms/projects.py b/src/sentry/web/forms/projects.py
index 3e250a8345..103c941d01 100644
--- a/src/sentry/web/forms/projects.py
+++ b/src/sentry/web/forms/projects.py
@@ -109,14 +109,15 @@ class RemoveProjectForm(forms.Form):
 class EditProjectForm(BaseProjectForm):
     public = forms.BooleanField(required=False,
         help_text=_('Imply public access to any event for this project.'))
-    team = forms.TypedChoiceField(choices=(), coerce=int)
+    team = forms.TypedChoiceField(choices=(), coerce=int, required=False)
     origins = OriginsField(label=_('Allowed Domains'), required=False,
         help_text=_('Separate multiple entries with a newline.'))
     resolve_age = RangeField(help_text=_('Treat an event as resolved if it hasn\'t been seen for this amount of time.'),
         required=False, min_value=0, max_value=168, step_value=1)
+    owner = UserField(required=False)
 
     class Meta:
-        fields = ('name', 'platform', 'public', 'team')
+        fields = ('name', 'platform', 'public', 'team', 'owner', 'slug')
         model = Project
 
     def __init__(self, request, team_list, data, instance, *args, **kwargs):
@@ -147,15 +148,6 @@ class EditProjectForm(BaseProjectForm):
         return self.team_list[value]
 
 
-class EditProjectAdminForm(EditProjectForm):
-    team = forms.ChoiceField(choices=(), required=False)
-    owner = UserField(required=False)
-
-    class Meta:
-        fields = ('name', 'platform', 'public', 'team', 'owner', 'slug')
-        model = Project
-
-
 class AlertSettingsForm(forms.Form):
     pct_threshold = RangeField(label=_('Threshold'), help_text=_('Notify when an event increases by this percentage.'),
         required=False, min_value=0, max_value=1000, step_value=100)
diff --git a/src/sentry/web/frontend/projects.py b/src/sentry/web/frontend/projects.py
index fc82c8a4f1..fad5276065 100644
--- a/src/sentry/web/frontend/projects.py
+++ b/src/sentry/web/frontend/projects.py
@@ -21,7 +21,7 @@ from sentry.permissions import (
 from sentry.plugins import plugins
 from sentry.web.decorators import login_required, has_access
 from sentry.web.forms.projects import (
-    ProjectTagsForm, EditProjectForm, RemoveProjectForm, EditProjectAdminForm,
+    ProjectTagsForm, RemoveProjectForm, EditProjectForm,
     NotificationTagValuesForm, AlertSettingsForm)
 from sentry.web.helpers import render_to_response, plugin_config
 
@@ -80,17 +80,9 @@ def manage_project(request, team, project):
     if result is False and not request.user.has_perm('sentry.can_change_project'):
         return HttpResponseRedirect(reverse('sentry'))
 
-    # XXX: We probably shouldn't allow changing the team unless they're the project owner
     team_list = Team.objects.get_for_user(project.owner or request.user, MEMBER_OWNER)
 
-    can_admin_project = request.user == project.owner or request.user.has_perm('sentry.can_change_project')
-
-    if can_admin_project:
-        form_cls = EditProjectAdminForm
-    else:
-        form_cls = EditProjectForm
-
-    form = form_cls(request, team_list, request.POST or None, instance=project, initial={
+    form = EditProjectForm(request, team_list, request.POST or None, instance=project, initial={
         'origins': '\n'.join(project.get_option('sentry:origins', None) or []),
         'owner': project.owner,
         'resolve_age': int(project.get_option('sentry:resolve_age', 0)),
