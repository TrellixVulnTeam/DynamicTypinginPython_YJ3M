commit d657f4cd76ccffcbc15b4587c770dad699f9b52b
Author: Lyn Nagara <lyn.nagara@gmail.com>
Date:   Mon Dec 17 12:37:47 2018 -0800

    feat(release): Add a basic version of organization release list UI (#11030)
    
    Refactor project releases and add a basic version of an organization
    release list UI. Does not currently include filtering by project,
    environment, time or query string. Does not link to a release detail
    page since the org release page is yet to be created.
    
    The new route is not linked from anywhere yet and the page is hidden
    behind the `sentry10` feature switch.

diff --git a/src/sentry/static/sentry/app/components/version.jsx b/src/sentry/static/sentry/app/components/version.jsx
index 0ad3e8dd6f..103b476847 100644
--- a/src/sentry/static/sentry/app/components/version.jsx
+++ b/src/sentry/static/sentry/app/components/version.jsx
@@ -19,10 +19,10 @@ class Version extends React.Component {
   };
 
   render() {
-    let {orgId, projectId, showShortVersion, version} = this.props;
+    let {orgId, projectId, showShortVersion, version, anchor} = this.props;
     let versionTitle = showShortVersion ? getShortVersion(version) : version;
 
-    if (this.props.anchor) {
+    if (anchor && projectId) {
       return (
         // NOTE: version is encoded because it can contain slashes "/",
         //       which can interfere with URL construction
diff --git a/src/sentry/static/sentry/app/index.js b/src/sentry/static/sentry/app/index.js
index 060eed6c9c..bfb0ad778a 100644
--- a/src/sentry/static/sentry/app/index.js
+++ b/src/sentry/static/sentry/app/index.js
@@ -193,8 +193,9 @@ export default {
     Pagination: require('app/components/pagination').default,
     PluginConfig: require('app/components/pluginConfig').default,
     ProjectSelector: require('app/components/projectHeader/projectSelector').default,
-    ReleaseLanding: require('app/views/projectReleases/releaseLanding').default,
-    ReleaseProgress: require('app/views/projectReleases/releaseProgress').default,
+    ReleaseLanding: require('app/views/releases/projectReleases/releaseLanding').default,
+    ReleaseProgress: require('app/views/releases/projectReleases/releaseProgress')
+      .default,
     CreateSampleEvent: require('app/components/createSampleEvent').default,
     InstallPromptBanner: require('app/components/installPromptBanner').default,
     SentryTypes: require('app/sentryTypes').default,
diff --git a/src/sentry/static/sentry/app/routes.jsx b/src/sentry/static/sentry/app/routes.jsx
index c275c420a6..833ef7e578 100644
--- a/src/sentry/static/sentry/app/routes.jsx
+++ b/src/sentry/static/sentry/app/routes.jsx
@@ -39,7 +39,6 @@ import ProjectDocsContext from 'app/views/projectInstall/docsContext';
 import ProjectGettingStarted from 'app/views/projectInstall/gettingStarted';
 import ProjectInstallOverview from 'app/views/projectInstall/overview';
 import ProjectInstallPlatform from 'app/views/projectInstall/platform';
-import ProjectReleases from 'app/views/projectReleases';
 import ProjectSavedSearches from 'app/views/projectSavedSearches';
 import ProjectSettings from 'app/views/projectSettings';
 import ProjectPlugins from 'app/views/projectPlugins';
@@ -789,6 +788,13 @@ function routes() {
             />
           </Route>
 
+          <Route
+            path="/organizations/:orgId/releases/"
+            componentPromise={() =>
+              import(/*webpackChunkName: "OrganizationReleases"*/ './views/releases/organizationReleases')}
+            component={errorHandler(LazyLoad)}
+          />
+
           <Route
             path="/organizations/:orgId/teams/new/"
             componentPromise={() =>
@@ -867,7 +873,12 @@ function routes() {
 
           <Route path="searches/:searchId/" component={errorHandler(Stream)} />
           <Route path="dashboard/" component={errorHandler(ProjectDashboard)} />
-          <Route path="releases/" component={errorHandler(ProjectReleases)} />
+          <Route
+            path="releases/"
+            componentPromise={() =>
+              import(/*webpackChunkName:"ProjectReleases"*/ './views/releases/projectReleases')}
+            component={errorHandler(LazyLoad)}
+          />
           <Route
             name="releaseDetails"
             path="releases/:version/"
diff --git a/src/sentry/static/sentry/app/views/releases/organizationReleases/index.jsx b/src/sentry/static/sentry/app/views/releases/organizationReleases/index.jsx
new file mode 100644
index 0000000000..110de60a37
--- /dev/null
+++ b/src/sentry/static/sentry/app/views/releases/organizationReleases/index.jsx
@@ -0,0 +1,119 @@
+import React from 'react';
+import styled from 'react-emotion';
+import PropTypes from 'prop-types';
+
+import SentryTypes from 'app/sentryTypes';
+import {t} from 'app/locale';
+
+// import SearchBar from 'app/components/searchBar';
+import {Panel, PanelBody} from 'app/components/panels';
+import Pagination from 'app/components/pagination';
+import LoadingIndicator from 'app/components/loadingIndicator';
+import Alert from 'app/components/alert';
+
+import withOrganization from 'app/utils/withOrganization';
+import withGlobalSelection from 'app/utils/withGlobalSelection';
+
+import space from 'app/styles/space';
+
+import ReleaseList from '../shared/releaseList';
+import ReleaseListHeader from '../shared/releaseListHeader';
+import {fetchOrganizationReleases} from '../shared/utils';
+
+class OrganizationReleases extends React.Component {
+  static propTypes = {
+    organization: SentryTypes.Organization,
+    selection: PropTypes.object,
+  };
+  constructor(props) {
+    super(props);
+    this.state = {releaseList: [], loading: true, error: null};
+  }
+
+  componentWillMount() {
+    this.fetchData(this.props.organization, this.props.selection);
+  }
+
+  fetchData(organization, query) {
+    fetchOrganizationReleases(organization, query)
+      .then(releaseList => {
+        this.setState({releaseList, loading: false, error: null});
+      })
+      .catch(error => {
+        this.setState({error, loading: false});
+      });
+  }
+
+  renderStreamBody() {
+    if (this.state.loading) {
+      return <LoadingIndicator />;
+    }
+
+    return (
+      <ReleaseList
+        releaseList={this.state.releaseList}
+        orgId={this.props.organization.slug}
+      />
+    );
+  }
+
+  renderNoAccess() {
+    return <Alert type="warning">{t("You don't have access to this feature")}</Alert>;
+  }
+
+  render() {
+    return (
+      <Content>
+        <Header>
+          <div>
+            <HeaderTitle>{t('Releases')}</HeaderTitle>
+          </div>
+          {/*<div>
+            <SearchBar
+              defaultQuery=""
+              placeholder={t('Search for a release')}
+              query={this.state.query}
+              onSearch={this.onSearch}
+            />
+          </div>*/}
+        </Header>
+        <Body>
+          <Panel>
+            <ReleaseListHeader />
+            <PanelBody>{this.renderStreamBody()}</PanelBody>
+          </Panel>
+          <Pagination pageLinks={this.state.pageLinks} />
+        </Body>
+      </Content>
+    );
+  }
+}
+
+const Content = styled('div')`
+  display: flex;
+  flex-direction: column;
+  flex: 1;
+  overflow: hidden;
+  padding: ${space(2)} ${space(4)} ${space(3)};
+  margin-bottom: -20px; /* <footer> has margin-top: 20px; */
+`;
+
+const Header = styled('div')`
+  display: flex;
+  justify-content: space-between;
+  margin-bottom: ${space(2)};
+  align-items: center;
+`;
+
+const HeaderTitle = styled('h4')`
+  flex: 1;
+  font-size: ${p => p.theme.headerFontSize};
+  line-height: ${p => p.theme.headerFontSize};
+  font-weight: normal;
+  color: ${p => p.theme.gray4};
+  margin: 0;
+`;
+
+const Body = styled('div')``;
+
+export default withOrganization(withGlobalSelection(OrganizationReleases));
diff --git a/src/sentry/static/sentry/app/views/projectReleases/index.jsx b/src/sentry/static/sentry/app/views/releases/projectReleases/index.jsx
similarity index 91%
rename from src/sentry/static/sentry/app/views/projectReleases/index.jsx
rename to src/sentry/static/sentry/app/views/releases/projectReleases/index.jsx
index 40c3ab3de2..a2b15bdab3 100644
--- a/src/sentry/static/sentry/app/views/projectReleases/index.jsx
+++ b/src/sentry/static/sentry/app/views/releases/projectReleases/index.jsx
@@ -2,7 +2,6 @@ import PropTypes from 'prop-types';
 import React from 'react';
 import createReactClass from 'create-react-class';
 import {browserHistory} from 'react-router';
-import {Box} from 'grid-emotion';
 import {omit, isEqual} from 'lodash';
 import qs from 'query-string';
 
@@ -17,13 +16,14 @@ import Hook from 'app/components/hook';
 import HookOrDefault from 'app/components/hookOrDefault';
 import SearchBar from 'app/components/searchBar';
 import {t, tct} from 'app/locale';
-import {Panel, PanelBody, PanelHeader} from 'app/components/panels';
+import {Panel, PanelBody} from 'app/components/panels';
 import EmptyStateWarning from 'app/components/emptyStateWarning';
-import ReleaseEmptyState from 'app/views/projectReleases/releaseEmptyState';
-
-import ReleaseList from 'app/views/projectReleases/releaseList';
 import withEnvironmentInQueryString from 'app/utils/withEnvironmentInQueryString';
 
+import ReleaseEmptyState from './releaseEmptyState';
+import ReleaseList from '../shared/releaseList';
+import ReleaseListHeader from '../shared/releaseListHeader';
+
 const DEFAULT_QUERY = '';
 
 const ProjectReleases = createReactClass({
@@ -231,16 +231,7 @@ const ProjectReleases = createReactClass({
           </div>
         </div>
         <Panel>
-          <PanelHeader>
-            <Box flex="1">{t('Version')}</Box>
-            <Box w={4 / 12} pl={2} className="hidden-xs" />
-            <Box w={2 / 12} pl={2}>
-              {t('New Issues')}
-            </Box>
-            <Box w={2 / 12} pl={2}>
-              {t('Last Event')}
-            </Box>
-          </PanelHeader>
+          <ReleaseListHeader />
           <PanelBody>{this.renderStreamBody()}</PanelBody>
         </Panel>
         <Pagination pageLinks={this.state.pageLinks} />
diff --git a/src/sentry/static/sentry/app/views/projectReleases/progressBar.jsx b/src/sentry/static/sentry/app/views/releases/projectReleases/progressBar.jsx
similarity index 100%
rename from src/sentry/static/sentry/app/views/projectReleases/progressBar.jsx
rename to src/sentry/static/sentry/app/views/releases/projectReleases/progressBar.jsx
diff --git a/src/sentry/static/sentry/app/views/projectReleases/releaseEmptyState.jsx b/src/sentry/static/sentry/app/views/releases/projectReleases/releaseEmptyState.jsx
similarity index 100%
rename from src/sentry/static/sentry/app/views/projectReleases/releaseEmptyState.jsx
rename to src/sentry/static/sentry/app/views/releases/projectReleases/releaseEmptyState.jsx
diff --git a/src/sentry/static/sentry/app/views/projectReleases/releaseLanding.jsx b/src/sentry/static/sentry/app/views/releases/projectReleases/releaseLanding.jsx
similarity index 97%
rename from src/sentry/static/sentry/app/views/projectReleases/releaseLanding.jsx
rename to src/sentry/static/sentry/app/views/releases/projectReleases/releaseLanding.jsx
index 20c9a2a41f..e09a55d089 100644
--- a/src/sentry/static/sentry/app/views/projectReleases/releaseLanding.jsx
+++ b/src/sentry/static/sentry/app/views/releases/projectReleases/releaseLanding.jsx
@@ -11,10 +11,11 @@ import {
 } from 'sentry-dreamy-components';
 
 import {analytics} from 'app/utils/analytics';
-import ReleaseLandingCard from 'app/views/projectReleases/releaseLandingCard';
 import SentryTypes from 'app/sentryTypes';
 import withApi from 'app/utils/withApi';
 
+import ReleaseLandingCard from './releaseLandingCard';
+
 const StyledSuggestedAssignees = styled(SuggestedAssignees)`
   width: 150px;
   height: 150px;
diff --git a/src/sentry/static/sentry/app/views/projectReleases/releaseLandingCard.jsx b/src/sentry/static/sentry/app/views/releases/projectReleases/releaseLandingCard.jsx
similarity index 100%
rename from src/sentry/static/sentry/app/views/projectReleases/releaseLandingCard.jsx
rename to src/sentry/static/sentry/app/views/releases/projectReleases/releaseLandingCard.jsx
diff --git a/src/sentry/static/sentry/app/views/projectReleases/releaseProgress.jsx b/src/sentry/static/sentry/app/views/releases/projectReleases/releaseProgress.jsx
similarity index 98%
rename from src/sentry/static/sentry/app/views/projectReleases/releaseProgress.jsx
rename to src/sentry/static/sentry/app/views/releases/projectReleases/releaseProgress.jsx
index 95e5ad4c1f..7f1f6980bc 100644
--- a/src/sentry/static/sentry/app/views/projectReleases/releaseProgress.jsx
+++ b/src/sentry/static/sentry/app/views/releases/projectReleases/releaseProgress.jsx
@@ -8,7 +8,7 @@ import AsyncComponent from 'app/components/asyncComponent';
 import Button from 'app/components/button';
 import {PanelItem} from 'app/components/panels';
 import {promptsUpdate} from 'app/actionCreators/prompts';
-import ProgressBar from 'app/views/projectReleases/progressBar';
+import ProgressBar from './progressBar';
 
 const STEPS = {
   tag: {
diff --git a/src/sentry/static/sentry/app/views/projectReleases/releaseList.jsx b/src/sentry/static/sentry/app/views/releases/shared/releaseList.jsx
similarity index 97%
rename from src/sentry/static/sentry/app/views/projectReleases/releaseList.jsx
rename to src/sentry/static/sentry/app/views/releases/shared/releaseList.jsx
index c4dc46a287..ed64b52747 100644
--- a/src/sentry/static/sentry/app/views/projectReleases/releaseList.jsx
+++ b/src/sentry/static/sentry/app/views/releases/shared/releaseList.jsx
@@ -12,7 +12,7 @@ import LatestDeployOrReleaseTime from 'app/components/latestDeployOrReleaseTime'
 class ReleaseList extends React.Component {
   static propTypes = {
     orgId: PropTypes.string.isRequired,
-    projectId: PropTypes.string.isRequired,
+    projectId: PropTypes.string,
     releaseList: PropTypes.array.isRequired,
   };
 
diff --git a/src/sentry/static/sentry/app/views/releases/shared/releaseListHeader.jsx b/src/sentry/static/sentry/app/views/releases/shared/releaseListHeader.jsx
new file mode 100644
index 0000000000..9037f31c52
--- /dev/null
+++ b/src/sentry/static/sentry/app/views/releases/shared/releaseListHeader.jsx
@@ -0,0 +1,22 @@
+import React from 'react';
+import {Box} from 'grid-emotion';
+import {PanelHeader} from 'app/components/panels';
+
+import {t} from 'app/locale';
+
+export default class ReleaseListHeader extends React.Component {
+  render() {
+    return (
+      <PanelHeader>
+        <Box flex="1">{t('Version')}</Box>
+        <Box w={4 / 12} pl={2} className="hidden-xs" />
+        <Box w={2 / 12} pl={2}>
+          {t('New Issues')}
+        </Box>
+        <Box w={2 / 12} pl={2}>
+          {t('Last Event')}
+        </Box>
+      </PanelHeader>
+    );
+  }
+}
diff --git a/src/sentry/static/sentry/app/views/releases/shared/utils.jsx b/src/sentry/static/sentry/app/views/releases/shared/utils.jsx
new file mode 100644
index 0000000000..500674cce1
--- /dev/null
+++ b/src/sentry/static/sentry/app/views/releases/shared/utils.jsx
@@ -0,0 +1,13 @@
+import {Client} from 'app/api';
+
+/**
+ * Fetch organization releases given the query filters.
+ *
+ * @param {Object} organization
+ * @param {Object} query
+ * @returns {Promise<Array>}
+ */
+export function fetchOrganizationReleases(organization, query) {
+  const api = new Client();
+  return api.requestPromise(`/organizations/${organization.slug}/releases/`, {query: {}});
+}
diff --git a/tests/js/spec/views/projectReleases.spec.jsx b/tests/js/spec/views/projectReleases.spec.jsx
index 414981e75e..8905c3c668 100644
--- a/tests/js/spec/views/projectReleases.spec.jsx
+++ b/tests/js/spec/views/projectReleases.spec.jsx
@@ -3,7 +3,7 @@ import {shallow} from 'enzyme';
 import {browserHistory} from 'react-router';
 
 import {Client} from 'app/api';
-import {ProjectReleases} from 'app/views/projectReleases';
+import {ProjectReleases} from 'app/views/releases/projectReleases';
 import SearchBar from 'app/views/stream/searchBar';
 import Pagination from 'app/components/pagination';
 
diff --git a/tests/js/spec/views/projectReleasesLanding.spec.jsx b/tests/js/spec/views/projectReleasesLanding.spec.jsx
index d4347d4dd1..1eb0125599 100644
--- a/tests/js/spec/views/projectReleasesLanding.spec.jsx
+++ b/tests/js/spec/views/projectReleasesLanding.spec.jsx
@@ -1,14 +1,31 @@
 import React from 'react';
 import {mount} from 'enzyme';
 
-import ReleaseLanding from 'app/views/projectReleases/releaseLanding';
+import ReleaseLanding from 'app/views/releases/projectReleases/releaseLanding';
 
-describe('ReleaseLanding', function() {
+describe('ProjectReleasesLanding', function() {
   describe('renders and progresses', function() {
-    it('should show first card', function() {
-      let routerContext = TestStubs.routerContext();
-      let wrapper = mount(<ReleaseLanding />, routerContext);
+    let wrapper;
+    beforeEach(function() {
+      wrapper = mount(<ReleaseLanding />, TestStubs.routerContext());
+    });
+
+    it('renders first step', function() {
+      expect(wrapper.find('Contributors')).toHaveLength(1);
+    });
 
+    it('renders next steps', function() {
+      wrapper.find('Button').simulate('click');
+      expect(wrapper.find('SuggestedAssignees')).toHaveLength(1);
+      wrapper.find('Button').simulate('click');
+      expect(wrapper.find('Issues')).toHaveLength(1);
+      wrapper.find('Button').simulate('click');
+      expect(wrapper.find('BashCard')).toHaveLength(1);
+      wrapper.find('Button').simulate('click');
+      expect(wrapper.find('Emails')).toHaveLength(1);
+    });
+
+    it('should show first card', function() {
       expect(wrapper.find('ContributorsCard').exists()).toBe(true);
       wrapper
         .find('StyledButton')
diff --git a/tests/js/spec/views/projectReleasesProgress.spec.jsx b/tests/js/spec/views/projectReleasesProgress.spec.jsx
index 883135ee1e..3b874e45af 100644
--- a/tests/js/spec/views/projectReleasesProgress.spec.jsx
+++ b/tests/js/spec/views/projectReleasesProgress.spec.jsx
@@ -2,7 +2,7 @@ import React from 'react';
 import {Client} from 'app/api';
 import {mount} from 'enzyme';
 
-import ReleaseProgress from 'app/views/projectReleases/releaseProgress';
+import ReleaseProgress from 'app/views/releases/projectReleases/releaseProgress';
 
 describe('ReleaseProgress', function() {
   let wrapper, organization, project, getPromptsMock, putMock, routerContext;
diff --git a/tests/js/spec/views/releasesLanding.spec.jsx b/tests/js/spec/views/releasesLanding.spec.jsx
deleted file mode 100644
index a6356d5feb..0000000000
--- a/tests/js/spec/views/releasesLanding.spec.jsx
+++ /dev/null
@@ -1,27 +0,0 @@
-import React from 'react';
-import {mount} from 'enzyme';
-
-import ReleaseLanding from 'app/views/projectReleases/releaseLanding';
-
-describe('ProjectReleasesLanding', function() {
-  let wrapper;
-
-  beforeEach(function() {
-    wrapper = mount(<ReleaseLanding />, TestStubs.routerContext());
-  });
-
-  it('renders first step', function() {
-    expect(wrapper.find('Contributors')).toHaveLength(1);
-  });
-
-  it('renders next steps', function() {
-    wrapper.find('Button').simulate('click');
-    expect(wrapper.find('SuggestedAssignees')).toHaveLength(1);
-    wrapper.find('Button').simulate('click');
-    expect(wrapper.find('Issues')).toHaveLength(1);
-    wrapper.find('Button').simulate('click');
-    expect(wrapper.find('BashCard')).toHaveLength(1);
-    wrapper.find('Button').simulate('click');
-    expect(wrapper.find('Emails')).toHaveLength(1);
-  });
-});
