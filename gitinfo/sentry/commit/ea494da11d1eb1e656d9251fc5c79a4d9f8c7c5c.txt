commit ea494da11d1eb1e656d9251fc5c79a4d9f8c7c5c
Author: Priscila Oliveira <priscilawebdev@gmail.com>
Date:   Wed Mar 18 21:00:04 2020 +0100

    ref(ts)converted accountDetails to ts (#17727)

diff --git a/src/sentry/static/sentry/app/components/avatarChooser.tsx b/src/sentry/static/sentry/app/components/avatarChooser.tsx
index 320a1c591e..67d778a6f0 100644
--- a/src/sentry/static/sentry/app/components/avatarChooser.tsx
+++ b/src/sentry/static/sentry/app/components/avatarChooser.tsx
@@ -18,21 +18,25 @@ import {AvatarUser, Organization, Team} from 'app/types';
 
 type Model = Pick<AvatarUser, 'avatar'>;
 type AvatarType = Required<Model>['avatar']['avatarType'];
+type AvatarChooserType = 'user' | 'team' | 'organization';
 
-type Props = {
-  api: Client;
-  endpoint: string;
+type DefaultProps = {
+  onSave: (model: Model) => void;
   allowGravatar?: boolean;
   allowLetter?: boolean;
   allowUpload?: boolean;
-  type: 'user' | 'team' | 'organization';
-  model: Model;
-  isUser: boolean;
-  savedDataUrl: string;
-  onSave: (model: Model) => void;
-  disabled: boolean;
+  type?: AvatarChooserType;
 };
 
+type Props = {
+  api: Client;
+  endpoint: string;
+  model: Model;
+  disabled?: boolean;
+  savedDataUrl?: string;
+  isUser?: boolean;
+} & DefaultProps;
+
 type State = {
   model: Model;
   hasError: boolean;
@@ -41,10 +45,11 @@ type State = {
 };
 
 class AvatarChooser extends React.Component<Props, State> {
-  static defaultProps = {
+  static defaultProps: DefaultProps = {
     allowGravatar: true,
     allowLetter: true,
     allowUpload: true,
+    type: 'user',
     onSave: () => {},
   };
 
@@ -145,7 +150,7 @@ class AvatarChooser extends React.Component<Props, State> {
 
     return (
       <Panel>
-        <PanelHeader>Avatar</PanelHeader>
+        <PanelHeader>{t('Avatar')}</PanelHeader>
         <PanelBody>
           <AvatarForm>
             <AvatarGroup inline={isLetter}>
@@ -153,11 +158,10 @@ class AvatarChooser extends React.Component<Props, State> {
                 style={{flex: 1}}
                 choices={choices}
                 value={avatarType}
-                label="Avatar Type"
+                label={t('Avatar Type')}
                 onChange={this.handleChange}
                 disabled={disabled}
               />
-
               {isLetter && (
                 <Avatar
                   gravatar={false}
@@ -180,6 +184,7 @@ class AvatarChooser extends React.Component<Props, State> {
               {model.avatar && avatarType === 'upload' && (
                 <AvatarCropper
                   {...this.props}
+                  type={type!}
                   model={model}
                   savedDataUrl={savedDataUrl}
                   updateDataUrlState={dataState => this.setState(dataState)}
diff --git a/src/sentry/static/sentry/app/components/avatarCropper.tsx b/src/sentry/static/sentry/app/components/avatarCropper.tsx
index 30547de7f6..4307fa83a7 100644
--- a/src/sentry/static/sentry/app/components/avatarCropper.tsx
+++ b/src/sentry/static/sentry/app/components/avatarCropper.tsx
@@ -23,7 +23,7 @@ type Props = {
   model: Model;
   updateDataUrlState: (opts: {savedDataUrl?: string | null; dataUrl?: string}) => void;
   type: 'user' | 'team' | 'organization' | 'project';
-  savedDataUrl: string;
+  savedDataUrl?: string;
 };
 
 type State = {
diff --git a/src/sentry/static/sentry/app/views/settings/account/accountDetails.jsx b/src/sentry/static/sentry/app/views/settings/account/accountDetails.jsx
deleted file mode 100644
index 7da8a6617c..0000000000
--- a/src/sentry/static/sentry/app/views/settings/account/accountDetails.jsx
+++ /dev/null
@@ -1,67 +0,0 @@
-import React from 'react';
-
-import {updateUser} from 'app/actionCreators/account';
-import AsyncView from 'app/views/asyncView';
-import AvatarChooser from 'app/components/avatarChooser';
-import Form from 'app/views/settings/components/forms/form';
-import JsonForm from 'app/views/settings/components/forms/jsonForm';
-import SettingsPageHeader from 'app/views/settings/components/settingsPageHeader';
-import accountDetailsFields from 'app/data/forms/accountDetails';
-import accountPreferencesFields from 'app/data/forms/accountPreferences';
-
-const ENDPOINT = '/users/me/';
-
-class AccountDetails extends AsyncView {
-  getEndpoints() {
-    return [['user', ENDPOINT]];
-  }
-
-  handleSubmitSuccess = user => {
-    updateUser(user);
-    this.setState({user});
-  };
-
-  handleSubmitError = () => {};
-
-  renderBody() {
-    const {user} = this.state;
-
-    return (
-      <div>
-        <SettingsPageHeader title="Account Details" />
-        <Form
-          apiMethod="PUT"
-          apiEndpoint={ENDPOINT}
-          saveOnBlur
-          initialData={user}
-          onSubmitSuccess={this.handleSubmitSuccess}
-          onSubmitError={this.handleSubmitError}
-        >
-          <JsonForm
-            location={this.props.location}
-            forms={accountDetailsFields}
-            additionalFieldProps={{user}}
-          />
-        </Form>
-        <Form
-          apiMethod="PUT"
-          apiEndpoint={ENDPOINT}
-          saveOnBlur
-          allowUndo
-          initialData={this.state.user.options}
-        >
-          <JsonForm location={this.props.location} forms={accountPreferencesFields} />
-        </Form>
-
-        <AvatarChooser
-          endpoint="/users/me/avatar/"
-          model={user}
-          onSave={this.handleSubmitSuccess}
-          isUser
-        />
-      </div>
-    );
-  }
-}
-
-export default AccountDetails;
diff --git a/src/sentry/static/sentry/app/views/settings/account/accountDetails.tsx b/src/sentry/static/sentry/app/views/settings/account/accountDetails.tsx
new file mode 100644
index 0000000000..e5777fbf9d
--- /dev/null
+++ b/src/sentry/static/sentry/app/views/settings/account/accountDetails.tsx
@@ -0,0 +1,75 @@
+import React from 'react';
+
+import AsyncView from 'app/views/asyncView';
+import AvatarChooser from 'app/components/avatarChooser';
+import Form from 'app/views/settings/components/forms/form';
+import JsonForm from 'app/views/settings/components/forms/jsonForm';
+import SettingsPageHeader from 'app/views/settings/components/settingsPageHeader';
+import accountDetailsFields from 'app/data/forms/accountDetails';
+import accountPreferencesFields from 'app/data/forms/accountPreferences';
+import {APIRequestMethod} from 'app/api';
+import {updateUser} from 'app/actionCreators/account';
+import {t} from 'app/locale';
+import {User} from 'app/types';
+
+const ENDPOINT = '/users/me/';
+
+class AccountDetails extends AsyncView {
+  getEndpoints(): ReturnType<AsyncView['getEndpoints']> {
+    // local state is NOT updated when the form saves
+    return [['user', ENDPOINT]];
+  }
+
+  handleSubmitSuccess = (user: User) => {
+    // the updateUser method updates our Config Store
+    // No components listen to the ConfigStore, they just access it directly
+    updateUser(user);
+    // We need to update the state, because AvatarChooser is using it,
+    // otherwise it will flick
+    this.setState({
+      user,
+    });
+  };
+
+  renderBody() {
+    const user = this.state.user as User;
+    const {location} = this.props;
+
+    const formCommonProps: Partial<Form['props']> = {
+      apiEndpoint: ENDPOINT,
+      apiMethod: 'PUT' as APIRequestMethod,
+      allowUndo: true,
+      saveOnBlur: true,
+    };
+
+    return (
+      <div>
+        <SettingsPageHeader title={t('Account Details')} />
+        <Form
+          initialData={user}
+          {...formCommonProps}
+          onSubmitSuccess={this.handleSubmitSuccess}
+        >
+          <JsonForm
+            location={location}
+            forms={accountDetailsFields}
+            additionalFieldProps={{user}}
+          />
+        </Form>
+        <Form initialData={user.options} {...formCommonProps} allowUndo>
+          <JsonForm location={location} forms={accountPreferencesFields} />
+        </Form>
+        <AvatarChooser
+          endpoint="/users/me/avatar/"
+          model={user}
+          onSave={resp => {
+            this.handleSubmitSuccess(resp as User);
+          }}
+          isUser
+        />
+      </div>
+    );
+  }
+}
+
+export default AccountDetails;
