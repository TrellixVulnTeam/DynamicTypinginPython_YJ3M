commit da0c0c14529a789b071324935df6904a8003b3cd
Author: Evan Purkhiser <evanpurkhiser@gmail.com>
Date:   Wed Mar 13 14:39:13 2019 -0500

    feat(events): EventsTable can now be given a project list (#12379)
    
    This allows the projects to be specified explicitly, without being part
    of the organization object. Useful in getsentry where we will be passing
    mock events, and may need to pass mock projects if the org hasn't
    created and projects yet.

diff --git a/src/sentry/static/sentry/app/views/organizationEvents/eventsTable.jsx b/src/sentry/static/sentry/app/views/organizationEvents/eventsTable.jsx
index d5292e07d8..fe3ba39e9a 100644
--- a/src/sentry/static/sentry/app/views/organizationEvents/eventsTable.jsx
+++ b/src/sentry/static/sentry/app/views/organizationEvents/eventsTable.jsx
@@ -85,6 +85,7 @@ class EventsTable extends React.Component {
 
     events: PropTypes.array,
     organization: SentryTypes.Organization,
+    projects: PropTypes.arrayOf(SentryTypes.Project),
     utc: PropTypes.bool,
 
     // When Table is in loading state due to chart zoom but has
@@ -92,13 +93,6 @@ class EventsTable extends React.Component {
     onUpdateComplete: PropTypes.func,
   };
 
-  constructor(props) {
-    super(props);
-    this.projectsMap = new Map(
-      props.organization.projects.map(project => [project.id, project])
-    );
-  }
-
   shouldComponentUpdate(nextProps) {
     // Update if any of these "loading"-type props change so we can display loader
     if (
@@ -128,6 +122,13 @@ class EventsTable extends React.Component {
     }
   }
 
+  get projectsMap() {
+    const {organization, projects} = this.props;
+    const projectList = projects || organization.projects;
+
+    return new Map(projectList.map(project => [project.id, project]));
+  }
+
   render() {
     const {events, organization, loading, reloading, zoomChanged, utc} = this.props;
     const hasEvents = events && !!events.length;
