commit b91269dcee569785edc57c6ed0f8f7419f26f35f
Author: Evan Purkhiser <evanpurkhiser@gmail.com>
Date:   Thu Mar 26 16:23:15 2020 -0700

    chore(css): Remove Box/Flex from choiceMapperField (#17895)

diff --git a/src/sentry/static/sentry/app/views/settings/components/forms/choiceMapperField.jsx b/src/sentry/static/sentry/app/views/settings/components/forms/choiceMapperField.jsx
index 448c79cfc2..34dec798bf 100644
--- a/src/sentry/static/sentry/app/views/settings/components/forms/choiceMapperField.jsx
+++ b/src/sentry/static/sentry/app/views/settings/components/forms/choiceMapperField.jsx
@@ -1,4 +1,3 @@
-import {Flex, Box} from 'reflexbox';
 import PropTypes from 'prop-types';
 import React from 'react';
 import styled from '@emotion/styled';
@@ -11,6 +10,7 @@ import DropdownButton from 'app/components/dropdownButton';
 import InputField from 'app/views/settings/components/forms/inputField';
 import SelectControl from 'app/components/forms/selectControl';
 import {IconAdd} from 'app/icons/iconAdd';
+import space from 'app/styles/space';
 
 const selectControlShape = PropTypes.shape(SelectControl.propTypes);
 
@@ -162,34 +162,28 @@ export default class ChoiceMapper extends React.Component {
     // The field will be set to inline when there is no value set for the
     // field, just show the dropdown.
     if (!valueIsEmpty) {
-      return <Box>{dropdown}</Box>;
+      return <div>{dropdown}</div>;
     }
 
     return (
       <React.Fragment>
-        <Flex alignItems="center">
+        <Header>
           <LabelColumn>
-            <StyledHeader>{mappedColumnLabel}</StyledHeader>
+            <HeadingItem>{mappedColumnLabel}</HeadingItem>
           </LabelColumn>
           {mappedKeys.map((fieldKey, i) => (
-            <Flex
-              key={fieldKey}
-              ml={1}
-              flex="1 0 0"
-              alignItems="center"
-              justifyContent="space-between"
-            >
-              <StyledHeader>{columnLabels[fieldKey]}</StyledHeader>
+            <Heading key={fieldKey}>
+              <HeadingItem>{columnLabels[fieldKey]}</HeadingItem>
               {i === mappedKeys.length - 1 && dropdown}
-            </Flex>
+            </Heading>
           ))}
-        </Flex>
+        </Header>
         {Object.keys(value).map(itemKey => (
-          <Flex key={itemKey} alignItems="center" mt={1}>
+          <Row key={itemKey}>
             <LabelColumn>{valueMap[itemKey]}</LabelColumn>
             {mappedKeys.map((fieldKey, i) => (
-              <Flex key={fieldKey} alignItems="center" ml={1} flex="1 0 0">
-                <Box flex={1}>
+              <Column key={fieldKey}>
+                <Control>
                   <SelectControl
                     deprecatedSelectControl
                     {...(perItemMapping
@@ -200,20 +194,20 @@ export default class ChoiceMapper extends React.Component {
                     onChange={v => setValue(itemKey, fieldKey, v ? v.value : null)}
                     value={value[itemKey][fieldKey]}
                   />
-                </Box>
+                </Control>
                 {i === mappedKeys.length - 1 && (
-                  <Box ml={1}>
+                  <Actions>
                     <Button
                       icon="icon-trash"
                       size="small"
                       disabled={disabled}
                       onClick={() => removeRow(itemKey)}
                     />
-                  </Box>
+                  </Actions>
                 )}
-              </Flex>
+              </Column>
             ))}
-          </Flex>
+          </Row>
         ))}
       </React.Fragment>
     );
@@ -230,10 +224,46 @@ export default class ChoiceMapper extends React.Component {
   }
 }
 
-const LabelColumn = styled(p => <Box flex="0 0 200px" {...p} />)``;
+const Header = styled('div')`
+  display: flex;
+  align-items: center;
+`;
+
+const Heading = styled('div')`
+  display: flex;
+  margin-left: ${space(1)};
+  flex: 1 0 0;
+  align-items: center;
+  justify-content: space-between;
+`;
+
+const Row = styled('div')`
+  display: flex;
+  margin-top: ${space(1)};
+  align-items: center;
+`;
+
+const Column = styled('div')`
+  display: flex;
+  margin-left: ${space(1)};
+  align-items: center;
+  flex: 1 0 0;
+`;
 
-const StyledHeader = styled(Box)`
+const Control = styled('div')`
+  flex: 1;
+`;
+
+const LabelColumn = styled('div')`
+  flex: 0 0 200px;
+`;
+
+const HeadingItem = styled('div')`
   font-size: 0.8em;
   text-transform: uppercase;
   color: ${p => p.theme.gray3};
 `;
+
+const Actions = styled('div')`
+  margin-left: ${space(1)};
+`;
