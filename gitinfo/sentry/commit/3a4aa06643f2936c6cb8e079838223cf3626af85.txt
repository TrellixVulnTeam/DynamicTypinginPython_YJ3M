commit 3a4aa06643f2936c6cb8e079838223cf3626af85
Author: David Cramer <dcramer@gmail.com>
Date:   Wed May 11 14:35:01 2011 -0700

    Properly unpickle Promise objects (at least __proxy__ ones, used within lazy())

diff --git a/sentry/tests/tests.py b/sentry/tests/tests.py
index 9120ece02d..6b840972b0 100644
--- a/sentry/tests/tests.py
+++ b/sentry/tests/tests.py
@@ -27,14 +27,15 @@ from django.test import TestCase, TransactionTestCase
 from django.template import TemplateSyntaxError
 from django.utils import simplejson
 from django.utils.encoding import smart_unicode
+from django.utils.functional import lazy
 
-from sentry.conf import settings
-from sentry.utils import transform, get_signature, get_auth_header
-from sentry.utils.compat.db import connections
-from sentry.models import Message, GroupedMessage
 from sentry.client.base import SentryClient
 from sentry.client.handlers import SentryHandler
 from sentry.client.models import get_client
+from sentry.conf import settings
+from sentry.models import Message, GroupedMessage
+from sentry.utils import transform, get_signature, get_auth_header
+from sentry.utils.compat.db import connections
 
 from models import TestModel, DuplicateKeyModel
 
@@ -1180,12 +1181,11 @@ class SentryHelpersTest(TestCase):
         django_settings.DATABASE_ENGINE = _engine
 
     def test_transform_handles_gettext_lazy(self):
-        from sentry.utils import transform
-        from django.utils.functional import lazy
-
         def fake_gettext(to_translate):
             return u'Igpay Atinlay'
+
         fake_gettext_lazy = lazy(fake_gettext, str)
+
         self.assertEquals(
             pickle.loads(pickle.dumps(
                     transform(fake_gettext_lazy("something")))),
@@ -1199,6 +1199,12 @@ class SentryHelpersTest(TestCase):
         versions = get_versions(['sentry.client'])
         self.assertEquals(versions.get('sentry'), sentry.VERSION)
 
+    def test_transform_model_instance(self):
+        instance = DuplicateKeyModel(foo='foo')
+        
+        result = transform(instance)
+        self.assertEquals(result, '<DuplicateKeyModel: foo>')
+
 class SentryClientTest(TestCase):
     urls = 'sentry.tests.urls'
 
diff --git a/sentry/utils/__init__.py b/sentry/utils/__init__.py
index cc0b147cd5..8dc1350932 100644
--- a/sentry/utils/__init__.py
+++ b/sentry/utils/__init__.py
@@ -2,13 +2,13 @@ import hmac
 import logging
 import sys
 import uuid
-import warnings
 from pprint import pformat
 from types import ClassType, TypeType
 
 import django
 from django.conf import settings as django_settings
 from django.utils.encoding import force_unicode
+from django.utils.functional import Promise
 from django.utils.hashcompat import md5_constructor, sha_constructor
 
 import sentry
@@ -108,9 +108,13 @@ def transform(value, stack=[], context=None):
     elif not isinstance(value, (ClassType, TypeType)) and \
             has_sentry_metadata(value):
         ret = transform_rec(value.__sentry__())
+    elif isinstance(value, Promise):
+        # EPIC HACK
+        pre = value.__class__.__name__[1:]
+        value = getattr(value, '%s__func' % pre)(*getattr(value, '%s__args' % pre), **getattr(value, '%s__kw' % pre))
+        return transform(value)
     elif not isinstance(value, (int, bool)) and value is not None:
-        # XXX: we could do transform(repr(value)) here
-        ret = to_unicode(value)
+        ret = transform(repr(value))
     else:
         ret = value
     del context[objid]
