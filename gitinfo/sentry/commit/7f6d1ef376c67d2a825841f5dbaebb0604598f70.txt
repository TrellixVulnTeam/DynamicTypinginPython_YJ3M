commit 7f6d1ef376c67d2a825841f5dbaebb0604598f70
Author: Mark Story <mark@sentry.io>
Date:   Tue Jun 2 15:53:39 2020 -0400

    ref(ui) Move EventsChart out of views and convert to typescript (#19120, #19142)
    
    These components are used in a bunch of places and shouldn't be in the
    views directory. Moving them will make events v1 easier to remove in the
    future and better consolidates chart UI bits together.
    
    There are still some related components that have not been converted. We
    also have a jumble of types for falsey values with null | undefined
    being used all over the place. I'd like to make another pass and remove
    the null values.

diff --git a/src/sentry/static/sentry/app/actionCreators/events.tsx b/src/sentry/static/sentry/app/actionCreators/events.tsx
index ba8caac6ec..cdf9174869 100644
--- a/src/sentry/static/sentry/app/actionCreators/events.tsx
+++ b/src/sentry/static/sentry/app/actionCreators/events.tsx
@@ -3,9 +3,14 @@ import pick from 'lodash/pick';
 
 import {Client} from 'app/api';
 import {URL_PARAM} from 'app/constants/globalSelectionHeader';
-import {canIncludePreviousPeriod} from 'app/views/events/utils/canIncludePreviousPeriod';
+import {canIncludePreviousPeriod} from 'app/components/charts/utils';
 import {getPeriod} from 'app/utils/getPeriod';
-import {EventsStats, OrganizationSummary, MultiSeriesEventsStats} from 'app/types';
+import {
+  EventsStats,
+  DateString,
+  OrganizationSummary,
+  MultiSeriesEventsStats,
+} from 'app/types';
 
 function getBaseUrl(org: OrganizationSummary, keyTransactions: boolean | undefined) {
   if (keyTransactions) {
@@ -20,8 +25,8 @@ type Options = {
   project?: number[];
   environment?: string[];
   period?: string;
-  start?: Date;
-  end?: Date;
+  start?: DateString;
+  end?: DateString;
   interval?: string;
   includePrevious?: boolean;
   limit?: number;
diff --git a/src/sentry/static/sentry/app/components/charts/chartZoom.jsx b/src/sentry/static/sentry/app/components/charts/chartZoom.jsx
index 2fbdc8d6d3..892371892d 100644
--- a/src/sentry/static/sentry/app/components/charts/chartZoom.jsx
+++ b/src/sentry/static/sentry/app/components/charts/chartZoom.jsx
@@ -218,6 +218,7 @@ class ChartZoom extends React.Component {
       return children(props);
     }
 
+    // TODO(mark) Update consumers of DataZoom when typing this.
     const renderProps = {
       // Zooming only works when grouped by date
       isGroupedByDate: true,
diff --git a/src/sentry/static/sentry/app/views/events/eventsChart.jsx b/src/sentry/static/sentry/app/components/charts/eventsChart.tsx
similarity index 72%
rename from src/sentry/static/sentry/app/views/events/eventsChart.jsx
rename to src/sentry/static/sentry/app/components/charts/eventsChart.tsx
index 1a5df8e155..9b37e764bd 100644
--- a/src/sentry/static/sentry/app/views/events/eventsChart.jsx
+++ b/src/sentry/static/sentry/app/components/charts/eventsChart.tsx
@@ -1,7 +1,11 @@
 import PropTypes from 'prop-types';
 import React from 'react';
 import isEqual from 'lodash/isEqual';
+import {InjectedRouter} from 'react-router/lib/Router';
 
+import {Client} from 'app/api';
+import {DateString, OrganizationSummary} from 'app/types';
+import {Series} from 'app/types/echarts';
 import {t} from 'app/locale';
 import {getInterval} from 'app/components/charts/utils';
 import ChartZoom from 'app/components/charts/chartZoom';
@@ -9,21 +13,32 @@ import AreaChart from 'app/components/charts/areaChart';
 import BarChart from 'app/components/charts/barChart';
 import TransitionChart from 'app/components/charts/transitionChart';
 import ReleaseSeries from 'app/components/charts/releaseSeries';
-import SentryTypes from 'app/sentryTypes';
-import withApi from 'app/utils/withApi';
-import withGlobalSelection from 'app/utils/withGlobalSelection';
 import {IconWarning} from 'app/icons';
 import theme from 'app/utils/theme';
 import TransparentLoadingMask from 'app/components/charts/transparentLoadingMask';
 import ErrorPanel from 'app/components/charts/errorPanel';
 import {getDuration, formatPercentage} from 'app/utils/formatters';
 
-import EventsRequest from './utils/eventsRequest';
+import EventsRequest from './eventsRequest';
 
 const DURATION_AGGREGATE_PATTERN = /^(p75|p95|p99|percentile)|transaction\.duration/;
 const PERCENTAGE_AGGREGATE_PATTERN = /^(error_rate)/;
 
-class Chart extends React.Component {
+type ChartProps = {
+  loading: boolean;
+  reloading: boolean;
+  // TODO(mark) Update this when components/charts/chartZoom is updated.
+  zoomRenderProps: any;
+  timeseriesData: Series[];
+  showLegend?: boolean;
+  currentSeriesName?: string;
+  releaseSeries?: Series | null;
+  previousTimeseriesData?: Series | null;
+  previousSeriesName?: string;
+  showDaily?: boolean;
+};
+
+class Chart extends React.Component<ChartProps> {
   static propTypes = {
     loading: PropTypes.bool,
     reloading: PropTypes.bool,
@@ -37,7 +52,7 @@ class Chart extends React.Component {
     showDaily: PropTypes.bool,
   };
 
-  shouldComponentUpdate(nextProps) {
+  shouldComponentUpdate(nextProps: ChartProps) {
     if (nextProps.reloading || !nextProps.timeseriesData) {
       return false;
     }
@@ -87,13 +102,16 @@ class Chart extends React.Component {
 
     const colors = theme.charts.getColorPalette(timeseriesData.length - 2);
     const Component = showDaily ? BarChart : AreaChart;
+    const series = Array.isArray(releaseSeries)
+      ? [...timeseriesData, ...releaseSeries]
+      : timeseriesData;
 
     return (
       <Component
         {...props}
         {...zoomRenderProps}
         legend={legend}
-        series={[...timeseriesData, ...releaseSeries]}
+        series={series}
         seriesOptions={{
           showSymbol: false,
         }}
@@ -110,7 +128,82 @@ class Chart extends React.Component {
   }
 }
 
-class EventsChart extends React.Component {
+type Props = {
+  api: Client;
+  router: InjectedRouter;
+  organization: OrganizationSummary;
+  /**
+   * Project ids
+   */
+  projects: number[];
+  /**
+   * Environment condition.
+   */
+  environments: string[];
+  /**
+   * The discover query string to find events with.
+   */
+  query: string;
+  /**
+   * The aggregate/metric to plot.
+   */
+  yAxis: string;
+  /**
+   * Relative datetime expression. eg. 14d
+   */
+  period?: string;
+  /**
+   * Absolute start date.
+   */
+  start: DateString;
+  /**
+   * Absolute end date.
+   */
+  end: DateString;
+  /**
+   * Should datetimes be formatted in UTC?
+   */
+  utc?: boolean;
+  /**
+   * Don't show the previous period's data. Will automatically disable
+   * when start/end are used.
+   */
+  disablePrevious?: boolean;
+  /**
+   * Don't show the release marklines.
+   */
+  disableReleases?: boolean;
+  /**
+   * Fetch n top events as dictated by the field and orderby props.
+   */
+  topEvents?: number;
+  /**
+   * The fields that act as grouping conditions when generating a topEvents chart.
+   */
+  field?: string[];
+  /**
+   * Order condition when showing topEvents
+   */
+  orderby?: string;
+  /**
+   * Overide the interval calculation and show daily results.
+   */
+  showDaily?: boolean;
+} & Pick<ChartProps, 'currentSeriesName' | 'previousSeriesName' | 'showLegend'>;
+
+type ChartDataProps = {
+  // TODO(mark) Update this when components/charts/chartZoom is updated.
+  zoomRenderProps: any;
+  errored: boolean;
+  loading: boolean;
+  reloading: boolean;
+  results?: Series[];
+  timeseriesData?: Series[];
+  previousTimeseriesData?: Series | null;
+  releaseSeries?: Series;
+};
+
+class EventsChart extends React.Component<Props> {
   static propTypes = {
     api: PropTypes.object,
     projects: PropTypes.arrayOf(PropTypes.number),
@@ -165,7 +258,7 @@ class EventsChart extends React.Component {
 
     const tooltip = {
       truncate: 80,
-      valueFormatter(value) {
+      valueFormatter(value: number) {
         if (DURATION_AGGREGATE_PATTERN.test(yAxis)) {
           return getDuration(value / 1000, 2);
         }
@@ -192,7 +285,7 @@ class EventsChart extends React.Component {
       results,
       timeseriesData,
       previousTimeseriesData,
-    }) => {
+    }: ChartDataProps) => {
       if (errored) {
         return (
           <ErrorPanel>
@@ -261,7 +354,12 @@ class EventsChart extends React.Component {
             orderby={orderby}
             topEvents={topEvents}
           >
-            {eventData => chartImplementation({...eventData, zoomRenderProps})}
+            {eventData =>
+              chartImplementation({
+                ...eventData,
+                zoomRenderProps,
+              })
+            }
           </EventsRequest>
         )}
       </ChartZoom>
@@ -269,29 +367,4 @@ class EventsChart extends React.Component {
   }
 }
 
-const EventsChartContainer = withGlobalSelection(
-  withApi(
-    class EventsChartWithParams extends React.Component {
-      static propTypes = {
-        selection: SentryTypes.GlobalSelection,
-      };
-
-      render() {
-        const {selection, ...props} = this.props;
-        const {datetime, projects, environments} = selection;
-
-        return (
-          <EventsChart
-            {...datetime}
-            projects={projects || []}
-            environments={environments || []}
-            {...props}
-          />
-        );
-      }
-    }
-  )
-);
-
-export default EventsChartContainer;
-export {EventsChart};
+export default EventsChart;
diff --git a/src/sentry/static/sentry/app/views/events/utils/eventsRequest.tsx b/src/sentry/static/sentry/app/components/charts/eventsRequest.tsx
similarity index 98%
rename from src/sentry/static/sentry/app/views/events/utils/eventsRequest.tsx
rename to src/sentry/static/sentry/app/components/charts/eventsRequest.tsx
index 9fdd2adb26..08cdaa4183 100644
--- a/src/sentry/static/sentry/app/views/events/utils/eventsRequest.tsx
+++ b/src/sentry/static/sentry/app/components/charts/eventsRequest.tsx
@@ -4,17 +4,18 @@ import PropTypes from 'prop-types';
 import React from 'react';
 
 import {
-  OrganizationSummary,
+  DateString,
   EventsStats,
-  MultiSeriesEventsStats,
   EventsStatsData,
+  OrganizationSummary,
+  MultiSeriesEventsStats,
 } from 'app/types';
 import {Series, SeriesDataUnit} from 'app/types/echarts';
 import LoadingPanel from 'app/components/charts/loadingPanel';
 import {Client} from 'app/api';
 import {doEventsRequest} from 'app/actionCreators/events';
+import {canIncludePreviousPeriod} from 'app/components/charts/utils';
 import {addErrorMessage} from 'app/actionCreators/indicator';
-import {canIncludePreviousPeriod} from 'app/views/events/utils/canIncludePreviousPeriod';
 import {t} from 'app/locale';
 import SentryTypes from 'app/sentryTypes';
 
@@ -51,15 +52,15 @@ type DefaultProps = {
    *
    * e.g. 24h, 7d, 30d
    */
-  period: any;
+  period?: string;
   /**
    * Absolute start date for query
    */
-  start: any;
+  start?: DateString;
   /**
    * Absolute end date for query
    */
-  end: any;
+  end?: DateString;
   /**
    * Interval to group results in
    *
@@ -201,7 +202,7 @@ class EventsRequest extends React.PureComponent<EventsRequestProps, EventsReques
   };
 
   static defaultProps: DefaultProps = {
-    period: null,
+    period: undefined,
     start: null,
     end: null,
     interval: '1d',
diff --git a/src/sentry/static/sentry/app/components/charts/utils.tsx b/src/sentry/static/sentry/app/components/charts/utils.tsx
index b29ade9cda..84b8c8339d 100644
--- a/src/sentry/static/sentry/app/components/charts/utils.tsx
+++ b/src/sentry/static/sentry/app/components/charts/utils.tsx
@@ -83,3 +83,22 @@ export function getDiffInMinutes(datetimeObj: DateTimeObject): number {
     parsePeriodToHours(typeof period === 'string' ? period : DEFAULT_STATS_PERIOD) * 60
   );
 }
+
+// Max period (in hours) before we can no long include previous period
+const MAX_PERIOD_HOURS_INCLUDE_PREVIOUS = 45 * 24;
+
+export function canIncludePreviousPeriod(
+  includePrevious: boolean | undefined,
+  period: string | undefined
+) {
+  if (!includePrevious) {
+    return false;
+  }
+
+  if (period && parsePeriodToHours(period) > MAX_PERIOD_HOURS_INCLUDE_PREVIOUS) {
+    return false;
+  }
+
+  // otherwise true
+  return !!includePrevious;
+}
diff --git a/src/sentry/static/sentry/app/types/index.tsx b/src/sentry/static/sentry/app/types/index.tsx
index d6a46144f1..d4cbf9f4c7 100644
--- a/src/sentry/static/sentry/app/types/index.tsx
+++ b/src/sentry/static/sentry/app/types/index.tsx
@@ -447,12 +447,14 @@ export type DocumentIntegration = {
   resourceLinks: Array<{title: string; url: string}>;
 };
 
+export type DateString = Date | string | null;
+
 export type GlobalSelection = {
   projects: number[];
   environments: string[];
   datetime: {
-    start: Date | string | null;
-    end: Date | string | null;
+    start: DateString;
+    end: DateString;
     period: string;
     utc: boolean;
   };
diff --git a/src/sentry/static/sentry/app/views/events/chart.jsx b/src/sentry/static/sentry/app/views/events/chart.jsx
new file mode 100644
index 0000000000..23f1d1818c
--- /dev/null
+++ b/src/sentry/static/sentry/app/views/events/chart.jsx
@@ -0,0 +1,32 @@
+import React from 'react';
+
+import SentryTypes from 'app/sentryTypes';
+import EventsChart from 'app/components/charts/eventsChart';
+import withApi from 'app/utils/withApi';
+import withGlobalSelection from 'app/utils/withGlobalSelection';
+
+const Chart = withGlobalSelection(
+  withApi(
+    class EventsChartWithParams extends React.Component {
+      static propTypes = {
+        selection: SentryTypes.GlobalSelection,
+      };
+
+      render() {
+        const {selection, ...props} = this.props;
+        const {datetime, projects, environments} = selection;
+
+        return (
+          <EventsChart
+            {...datetime}
+            projects={projects || []}
+            environments={environments || []}
+            {...props}
+          />
+        );
+      }
+    }
+  )
+);
+
+export default Chart;
diff --git a/src/sentry/static/sentry/app/views/events/events.jsx b/src/sentry/static/sentry/app/views/events/events.jsx
index 7c649808c3..2e76605316 100644
--- a/src/sentry/static/sentry/app/views/events/events.jsx
+++ b/src/sentry/static/sentry/app/views/events/events.jsx
@@ -17,8 +17,8 @@ import parseLinkHeader from 'app/utils/parseLinkHeader';
 import withOrganization from 'app/utils/withOrganization';
 import {getParams} from 'app/components/organizations/globalSelectionHeader/getParams';
 
-import EventsChart from './eventsChart';
 import EventsTable from './eventsTable';
+import Chart from './chart';
 
 const parseRowFromLinks = (links, numRows) => {
   links = parseLinkHeader(links);
@@ -193,7 +193,7 @@ class Events extends AsyncView {
             true
           )}
         <Panel>
-          <EventsChart
+          <Chart
             router={router}
             query={location.query.query}
             organization={organization}
diff --git a/src/sentry/static/sentry/app/views/events/utils/canIncludePreviousPeriod.jsx b/src/sentry/static/sentry/app/views/events/utils/canIncludePreviousPeriod.jsx
deleted file mode 100644
index e1a51dd8f4..0000000000
--- a/src/sentry/static/sentry/app/views/events/utils/canIncludePreviousPeriod.jsx
+++ /dev/null
@@ -1,16 +0,0 @@
-import {parsePeriodToHours} from 'app/utils/dates';
-// Max period (in hours) before we can no long include previous period
-const MAX_PERIOD_HOURS_INCLUDE_PREVIOUS = 45 * 24;
-
-export function canIncludePreviousPeriod(includePrevious, period) {
-  if (!includePrevious) {
-    return false;
-  }
-
-  if (period && parsePeriodToHours(period) > MAX_PERIOD_HOURS_INCLUDE_PREVIOUS) {
-    return false;
-  }
-
-  // otherwise true
-  return includePrevious;
-}
diff --git a/src/sentry/static/sentry/app/views/eventsV2/eventDetails/lineGraph.tsx b/src/sentry/static/sentry/app/views/eventsV2/eventDetails/lineGraph.tsx
index 15c274f9a6..7deeda6d72 100644
--- a/src/sentry/static/sentry/app/views/eventsV2/eventDetails/lineGraph.tsx
+++ b/src/sentry/static/sentry/app/views/eventsV2/eventDetails/lineGraph.tsx
@@ -13,7 +13,7 @@ import {
   getUtcDateString,
   intervalToMilliseconds,
 } from 'app/utils/dates';
-import EventsRequest from 'app/views/events/utils/eventsRequest';
+import EventsRequest from 'app/components/charts/eventsRequest';
 import LineChart from 'app/components/charts/lineChart';
 import MarkLine from 'app/components/charts/components/markLine';
 import {Panel} from 'app/components/panels';
diff --git a/src/sentry/static/sentry/app/views/eventsV2/miniGraph.tsx b/src/sentry/static/sentry/app/views/eventsV2/miniGraph.tsx
index d98c09c527..9133dd1e5c 100644
--- a/src/sentry/static/sentry/app/views/eventsV2/miniGraph.tsx
+++ b/src/sentry/static/sentry/app/views/eventsV2/miniGraph.tsx
@@ -6,7 +6,7 @@ import styled from '@emotion/styled';
 import withApi from 'app/utils/withApi';
 import {Client} from 'app/api';
 import {Organization} from 'app/types';
-import EventsRequest from 'app/views/events/utils/eventsRequest';
+import EventsRequest from 'app/components/charts/eventsRequest';
 import AreaChart from 'app/components/charts/areaChart';
 import {getInterval} from 'app/components/charts/utils';
 import {getUtcToLocalDateObject} from 'app/utils/dates';
diff --git a/src/sentry/static/sentry/app/views/eventsV2/resultsChart.tsx b/src/sentry/static/sentry/app/views/eventsV2/resultsChart.tsx
index 3293cef717..eb52c68bcd 100644
--- a/src/sentry/static/sentry/app/views/eventsV2/resultsChart.tsx
+++ b/src/sentry/static/sentry/app/views/eventsV2/resultsChart.tsx
@@ -7,12 +7,13 @@ import isEqual from 'lodash/isEqual';
 import {Organization} from 'app/types';
 import {getUtcToLocalDateObject} from 'app/utils/dates';
 import {Client} from 'app/api';
+import EventsChart from 'app/components/charts/eventsChart';
 import {getParams} from 'app/components/organizations/globalSelectionHeader/getParams';
 import {Panel} from 'app/components/panels';
 import getDynamicText from 'app/utils/getDynamicText';
-import {EventsChart} from 'app/views/events/eventsChart';
 import EventView from 'app/utils/discover/eventView';
 import {DisplayModes} from 'app/utils/discover/types';
+import {decodeScalar} from 'app/utils/queryString';
 
 import ChartFooter from './chartFooter';
 
@@ -44,11 +45,9 @@ class ResultsChart extends React.Component<ResultsChartProps> {
     const globalSelection = eventView.getGlobalSelection();
     const start = globalSelection.start
       ? getUtcToLocalDateObject(globalSelection.start)
-      : undefined;
+      : null;
 
-    const end = globalSelection.end
-      ? getUtcToLocalDateObject(globalSelection.end)
-      : undefined;
+    const end = globalSelection.end ? getUtcToLocalDateObject(globalSelection.end) : null;
 
     const {utc} = getParams(location.query);
     const apiPayload = eventView.getEventsAPIPayload(location);
@@ -81,7 +80,7 @@ class ResultsChart extends React.Component<ResultsChartProps> {
               field={isTopEvents ? apiPayload.field : undefined}
               showDaily={isDaily}
               topEvents={isTopEvents ? 5 : undefined}
-              orderby={isTopEvents ? apiPayload.sort : undefined}
+              orderby={isTopEvents ? decodeScalar(apiPayload.sort) : undefined}
               utc={utc === 'true'}
             />
           ),
diff --git a/src/sentry/static/sentry/app/views/performance/charts/index.tsx b/src/sentry/static/sentry/app/views/performance/charts/index.tsx
index a5db2c99e1..6b2cac637a 100644
--- a/src/sentry/static/sentry/app/views/performance/charts/index.tsx
+++ b/src/sentry/static/sentry/app/views/performance/charts/index.tsx
@@ -12,7 +12,7 @@ import getDynamicText from 'app/utils/getDynamicText';
 import {getParams} from 'app/components/organizations/globalSelectionHeader/getParams';
 import {Panel} from 'app/components/panels';
 import EventView from 'app/utils/discover/eventView';
-import EventsRequest from 'app/views/events/utils/eventsRequest';
+import EventsRequest from 'app/components/charts/eventsRequest';
 import {getUtcToLocalDateObject} from 'app/utils/dates';
 import {IconWarning} from 'app/icons';
 import theme from 'app/utils/theme';
diff --git a/src/sentry/static/sentry/app/views/performance/transactionSummary/durationChart.tsx b/src/sentry/static/sentry/app/views/performance/transactionSummary/durationChart.tsx
index 9d502d361c..c14f7a9440 100644
--- a/src/sentry/static/sentry/app/views/performance/transactionSummary/durationChart.tsx
+++ b/src/sentry/static/sentry/app/views/performance/transactionSummary/durationChart.tsx
@@ -9,11 +9,11 @@ import ChartZoom from 'app/components/charts/chartZoom';
 import ErrorPanel from 'app/components/charts/errorPanel';
 import TransparentLoadingMask from 'app/components/charts/transparentLoadingMask';
 import TransitionChart from 'app/components/charts/transitionChart';
+import EventsRequest from 'app/components/charts/eventsRequest';
 import ReleaseSeries from 'app/components/charts/releaseSeries';
 import QuestionTooltip from 'app/components/questionTooltip';
 import {getInterval} from 'app/components/charts/utils';
 import {IconWarning} from 'app/icons';
-import EventsRequest from 'app/views/events/utils/eventsRequest';
 import {getUtcToLocalDateObject} from 'app/utils/dates';
 import EventView from 'app/utils/discover/eventView';
 import withApi from 'app/utils/withApi';
diff --git a/src/sentry/static/sentry/app/views/performance/transactionSummary/sidebarCharts.tsx b/src/sentry/static/sentry/app/views/performance/transactionSummary/sidebarCharts.tsx
index 27cb6bd26c..b65a709c73 100644
--- a/src/sentry/static/sentry/app/views/performance/transactionSummary/sidebarCharts.tsx
+++ b/src/sentry/static/sentry/app/views/performance/transactionSummary/sidebarCharts.tsx
@@ -10,13 +10,13 @@ import EventView from 'app/utils/discover/eventView';
 import ChartZoom from 'app/components/charts/chartZoom';
 import LineChart from 'app/components/charts/lineChart';
 import ErrorPanel from 'app/components/charts/errorPanel';
+import EventsRequest from 'app/components/charts/eventsRequest';
 import QuestionTooltip from 'app/components/questionTooltip';
 import {SectionHeading} from 'app/components/charts/styles';
 import TransparentLoadingMask from 'app/components/charts/transparentLoadingMask';
 import TransitionChart from 'app/components/charts/transitionChart';
 import {getInterval} from 'app/components/charts/utils';
 import {IconWarning} from 'app/icons';
-import EventsRequest from 'app/views/events/utils/eventsRequest';
 import {PERFORMANCE_TERMS} from 'app/views/performance/constants';
 import {getUtcToLocalDateObject} from 'app/utils/dates';
 import {
diff --git a/src/sentry/static/sentry/app/views/releasesV2/detail/overview/chart/index.tsx b/src/sentry/static/sentry/app/views/releasesV2/detail/overview/chart/index.tsx
index f9df525b08..b0838c2aaf 100644
--- a/src/sentry/static/sentry/app/views/releasesV2/detail/overview/chart/index.tsx
+++ b/src/sentry/static/sentry/app/views/releasesV2/detail/overview/chart/index.tsx
@@ -5,7 +5,7 @@ import {Location} from 'history';
 import {GlobalSelection, Organization} from 'app/types';
 import {Panel} from 'app/components/panels';
 import {Client} from 'app/api';
-import {EventsChart} from 'app/views/events/eventsChart';
+import EventsChart from 'app/components/charts/eventsChart';
 import {t} from 'app/locale';
 
 import ReleaseChartControls, {YAxis} from './releaseChartControls';
diff --git a/src/sentry/static/sentry/app/views/settings/incidentRules/triggers/chart/index.tsx b/src/sentry/static/sentry/app/views/settings/incidentRules/triggers/chart/index.tsx
index 1a57ce93d7..3b60602581 100644
--- a/src/sentry/static/sentry/app/views/settings/incidentRules/triggers/chart/index.tsx
+++ b/src/sentry/static/sentry/app/views/settings/incidentRules/triggers/chart/index.tsx
@@ -5,7 +5,7 @@ import styled from '@emotion/styled';
 import {Client} from 'app/api';
 import {Organization, Project} from 'app/types';
 import {SeriesDataUnit} from 'app/types/echarts';
-import EventsRequest from 'app/views/events/utils/eventsRequest';
+import EventsRequest from 'app/components/charts/eventsRequest';
 import LoadingMask from 'app/components/loadingMask';
 import Placeholder from 'app/components/placeholder';
 import space from 'app/styles/space';
diff --git a/tests/js/spec/views/events/eventsAreaChart.spec.jsx b/tests/js/spec/components/charts/eventsAreaChart.spec.jsx
similarity index 91%
rename from tests/js/spec/views/events/eventsAreaChart.spec.jsx
rename to tests/js/spec/components/charts/eventsAreaChart.spec.jsx
index 504ffa745d..c059496ae8 100644
--- a/tests/js/spec/views/events/eventsAreaChart.spec.jsx
+++ b/tests/js/spec/components/charts/eventsAreaChart.spec.jsx
@@ -4,9 +4,9 @@ import {mockZoomRange} from 'sentry-test/charts';
 import {initializeOrg} from 'sentry-test/initializeOrg';
 import {mountWithTheme} from 'sentry-test/enzyme';
 
-import {EventsChart} from 'app/views/events/eventsChart';
+import EventsChart from 'app/components/charts/eventsChart';
 
-describe('EventsChart', function() {
+describe('EventsChart with legend', function() {
   const {router, routerContext, org} = initializeOrg();
   let wrapper;
 
diff --git a/tests/js/spec/views/events/eventsChart.spec.jsx b/tests/js/spec/components/charts/eventsChart.spec.jsx
similarity index 95%
rename from tests/js/spec/views/events/eventsChart.spec.jsx
rename to tests/js/spec/components/charts/eventsChart.spec.jsx
index 265ee7dae9..cdf4b8dbbd 100644
--- a/tests/js/spec/views/events/eventsChart.spec.jsx
+++ b/tests/js/spec/components/charts/eventsChart.spec.jsx
@@ -2,13 +2,13 @@ import React from 'react';
 
 import {chart, doZoom, mockZoomRange} from 'sentry-test/charts';
 import {initializeOrg} from 'sentry-test/initializeOrg';
-import {mount} from 'sentry-test/enzyme';
+import {mountWithTheme} from 'sentry-test/enzyme';
 
 import {getUtcToLocalDateObject} from 'app/utils/dates';
-import {EventsChart} from 'app/views/events/eventsChart';
+import EventsChart from 'app/components/charts/eventsChart';
 import * as globalSelection from 'app/actionCreators/globalSelection';
 
-jest.mock('app/views/events/utils/eventsRequest', () => jest.fn(() => null));
+jest.mock('app/components/charts/eventsRequest', () => jest.fn(() => null));
 jest.spyOn(globalSelection, 'updateDateTime');
 
 describe('EventsChart', function() {
@@ -19,7 +19,7 @@ describe('EventsChart', function() {
   beforeEach(function() {
     globalSelection.updateDateTime.mockClear();
     mockZoomRange(1543449600000, 1543708800000);
-    wrapper = mount(
+    wrapper = mountWithTheme(
       <EventsChart
         api={new MockApiClient()}
         location={{query: {}}}
diff --git a/tests/js/spec/views/events/utils/eventsRequest.spec.jsx b/tests/js/spec/components/charts/eventsRequest.spec.jsx
similarity index 99%
rename from tests/js/spec/views/events/utils/eventsRequest.spec.jsx
rename to tests/js/spec/components/charts/eventsRequest.spec.jsx
index dc33e9f963..c89e3fc39b 100644
--- a/tests/js/spec/views/events/utils/eventsRequest.spec.jsx
+++ b/tests/js/spec/components/charts/eventsRequest.spec.jsx
@@ -2,8 +2,8 @@ import React from 'react';
 
 import {mount} from 'sentry-test/enzyme';
 
+import EventsRequest from 'app/components/charts/eventsRequest';
 import {doEventsRequest} from 'app/actionCreators/events';
-import EventsRequest from 'app/views/events/utils/eventsRequest';
 
 const COUNT_OBJ = {
   count: 123,
diff --git a/tests/js/spec/components/charts/utils.spec.jsx b/tests/js/spec/components/charts/utils.spec.jsx
index ae96c8460f..2213ac2bd2 100644
--- a/tests/js/spec/components/charts/utils.spec.jsx
+++ b/tests/js/spec/components/charts/utils.spec.jsx
@@ -1,4 +1,8 @@
-import {getInterval, getDiffInMinutes} from 'app/components/charts/utils';
+import {
+  canIncludePreviousPeriod,
+  getInterval,
+  getDiffInMinutes,
+} from 'app/components/charts/utils';
 
 describe('Chart Utils', function() {
   describe('getInterval()', function() {
@@ -51,4 +55,23 @@ describe('Chart Utils', function() {
     // This uses moment so we probably don't need to test it too extensively
     describe('with absolute dates', function() {});
   });
+
+  describe('canIncludePreviousPeriod()', function() {
+    it('does not include if `includePrevious` is false', function() {
+      expect(canIncludePreviousPeriod(false, '7d')).toBe(false);
+    });
+
+    it('is true if period is less than or equal to 45 days', function() {
+      expect(canIncludePreviousPeriod(true, '45d')).toBe(true);
+    });
+
+    it('is false if period is greater than 45d', function() {
+      expect(canIncludePreviousPeriod(true, '46d')).toBe(false);
+    });
+
+    it('returns value of `includePrevious` if no period', function() {
+      expect(canIncludePreviousPeriod(true)).toBe(true);
+      expect(canIncludePreviousPeriod(false)).toBe(false);
+    });
+  });
 });
diff --git a/tests/js/spec/views/events/utils/canIncludePreviousPeriod.spec.jsx b/tests/js/spec/views/events/utils/canIncludePreviousPeriod.spec.jsx
deleted file mode 100644
index f63a4a5d5c..0000000000
--- a/tests/js/spec/views/events/utils/canIncludePreviousPeriod.spec.jsx
+++ /dev/null
@@ -1,20 +0,0 @@
-import {canIncludePreviousPeriod} from 'app/views/events/utils/canIncludePreviousPeriod';
-
-describe('canIncludePreviousPeriod', function() {
-  it('does not include if `includePrevious` is false', function() {
-    expect(canIncludePreviousPeriod(false, '7d')).toBe(false);
-  });
-
-  it('is true if period is less than or equal to 45 days', function() {
-    expect(canIncludePreviousPeriod(true, '45d')).toBe(true);
-  });
-
-  it('is false if period is greater than 45d', function() {
-    expect(canIncludePreviousPeriod(true, '46d')).toBe(false);
-  });
-
-  it('returns value of `includePrevious` if no period', function() {
-    expect(canIncludePreviousPeriod(true)).toBe(true);
-    expect(canIncludePreviousPeriod(false)).toBe(false);
-  });
-});
