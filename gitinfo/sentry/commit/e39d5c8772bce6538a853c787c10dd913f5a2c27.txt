commit e39d5c8772bce6538a853c787c10dd913f5a2c27
Author: ted kaemming <ted@kaemming.com>
Date:   Thu Dec 6 14:28:21 2018 -0800

    ref(eventstream): Validate event sequencing during post-processing (#10962)

diff --git a/src/sentry/tasks/post_process.py b/src/sentry/tasks/post_process.py
index 1ca25a0ba9..908d7c80b8 100644
--- a/src/sentry/tasks/post_process.py
+++ b/src/sentry/tasks/post_process.py
@@ -8,6 +8,7 @@ sentry.tasks.post_process
 
 from __future__ import absolute_import, print_function
 
+from hashlib import md5
 import logging
 import time
 
@@ -70,6 +71,26 @@ def check_event_already_post_processed(event):
     return not result
 
 
+def check_correct_event_sequencing(event):
+    sample_rate = getattr(settings, 'SENTRY_POST_PROCESSING_SEQUENCING_SAMPLE_RATE', None)
+    if sample_rate is None:
+        return  # no decision
+
+    cluster_key = getattr(settings, 'SENTRY_POST_PROCESSING_SEQUENCING_REDIS_CLUSTER', None)
+    if cluster_key is None:
+        return  # no decision
+
+    event_id = event.event_id.encode('utf-8')
+    _hash = int(md5(event_id).hexdigest(), 16)
+    if not _hash % sample_rate == 0:
+        return  # no decision
+
+    # if the key exists, things are executing in the right order, otherwise
+    # we're ahead of the stream
+    return redis_clusters.get(cluster_key).delete(
+        "_hack_post_process_sampled_events:%s" % event_id) > 0
+
+
 @instrumented_task(name='sentry.tasks.post_process.post_process_group')
 def post_process_group(event, is_new, is_regression, is_sample, is_new_group_environment, **kwargs):
     """
@@ -84,6 +105,12 @@ def post_process_group(event, is_new, is_regression, is_sample, is_new_group_env
             })
             return
 
+        if check_correct_event_sequencing(event) is False:
+            logger.info('post_processing.out-of-sequence', {
+                'project_id': event.project_id,
+                'event_id': event.event_id,
+            })
+
         # NOTE: we must pass through the full Event object, and not an
         # event_id since the Event object may not actually have been stored
         # in the database due to sampling.
