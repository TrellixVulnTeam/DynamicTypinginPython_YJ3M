commit 5ebd9fd3ca0c472aee3bb185ed43308afb06cd38
Author: David Cramer <dcramer@gmail.com>
Date:   Mon Dec 26 00:39:08 2011 -0800

    Maintain full backwards comaptibility with paging (excluding is_endless)

diff --git a/sentry/templates/sentry/events/event_list.html b/sentry/templates/sentry/events/event_list.html
index f4ee0a7df2..af0acea1fc 100644
--- a/sentry/templates/sentry/events/event_list.html
+++ b/sentry/templates/sentry/events/event_list.html
@@ -24,7 +24,7 @@
 {% endblock %}
 
 {% block main %}
-    {% paginate event_list from request as event_list per_page MESSAGES_PER_PAGE %}
+    {% paginator event_list from request as event_list per_page MESSAGES_PER_PAGE %}
 
     <ul class="options">
         <li class="prev{% if not event_list.paginator.has_previous %} disabled{% endif %}">
diff --git a/sentry/templates/sentry/groups/event_list.html b/sentry/templates/sentry/groups/event_list.html
index 6755b981f0..e3ba33ba28 100644
--- a/sentry/templates/sentry/groups/event_list.html
+++ b/sentry/templates/sentry/groups/event_list.html
@@ -4,53 +4,20 @@
 {% load sentry_helpers %}
 
 {% block inner %}
-    {% paginate event_list from request contextual as event_list per_page MESSAGES_PER_PAGE %}
+    {% paginate event_list from request as event_list per_page MESSAGES_PER_PAGE %}
 
-    {% if event_list.paginator.objects %}
+    {% if event_list.objects %}
         <p class="alert-message info">This list only contains a portion of all events seen. For more information about how Sentry samples events, see the <a href="#">documentation</a>.</p>
-        <div class="pagination">
-            <ul>
-                <li class="prev{% if not event_list.paginator.has_previous %} disabled{% endif %}">
-                    {% if event_list.paginator.has_previous %}
-                        <a href="?{{ event_list.query_string|escape }}&amp;p={{ event_list.paginator.previous_page }}">&larr; {% trans "Previous" %}</a>
-                    {% else %}
-                        <a>&larr; {% trans "Previous" %}</a>
-                    {% endif %}
-                </li>
-                <li class="next{% if not event_list.paginator.has_next %} disabled{% endif %}">
-                    {% if event_list.paginator.has_next %}
-                        <a href="?{{ event_list.query_string|escape }}&amp;p={{ event_list.paginator.next_page }}">{% trans "Next" %} &rarr;</a>
-                    {% else %}
-                        <a>{% trans "Next" %} &rarr;</a>
-                    {% endif %}
-                </li>
-            </ul>
-        </div>
+
+        {{ event_list.paging }}
 
         <ul class="messages">
-            {% for event in event_list.paginator.objects %}
+            {% for event in event_list.objects %}
                 {% include "sentry/partial/_event.html" %}
             {% endfor %}
         </ul>
 
-        <div class="pagination">
-            <ul>
-                <li class="prev{% if not event_list.paginator.has_previous %} disabled{% endif %}">
-                    {% if event_list.paginator.has_previous %}
-                        <a href="?{{ event_list.query_string|escape }}&amp;p={{ event_list.paginator.previous_page }}">&larr; {% trans "Previous" %}</a>
-                    {% else %}
-                        <a>&larr; {% trans "Previous" %}</a>
-                    {% endif %}
-                </li>
-                <li class="next{% if not event_list.paginator.has_next %} disabled{% endif %}">
-                    {% if event_list.paginator.has_next %}
-                        <a href="?{{ event_list.query_string|escape }}&amp;p={{ event_list.paginator.next_page }}">{% trans "Next" %} &rarr;</a>
-                    {% else %}
-                        <a>{% trans "Next" %} &rarr;</a>
-                    {% endif %}
-                </li>
-            </ul>
-        </div>
+        {{ event_list.paging }}
     {% else %}
         <p class="alert-message notice">{% trans "There are no records recorded for this event." %}</p>
     {% endif %}
diff --git a/sentry/templates/sentry/groups/group_list.html b/sentry/templates/sentry/groups/group_list.html
index b18ad99279..f880485227 100644
--- a/sentry/templates/sentry/groups/group_list.html
+++ b/sentry/templates/sentry/groups/group_list.html
@@ -24,7 +24,7 @@
 {% endblock %}
 
 {% block main %}
-    {% paginate event_list from request contextual as event_list per_page MESSAGES_PER_PAGE %}
+    {% paginator event_list from request as event_list per_page MESSAGES_PER_PAGE %}
 
     <ul class="options">
         <li class="prev{% if not event_list.paginator.has_previous %} disabled{% endif %}">
diff --git a/sentry/templatetags/sentry_helpers.py b/sentry/templatetags/sentry_helpers.py
index ab45d16df6..0f03b8b6f7 100644
--- a/sentry/templatetags/sentry_helpers.py
+++ b/sentry/templatetags/sentry_helpers.py
@@ -7,6 +7,7 @@ from django.template.loader import render_to_string
 from django.utils.safestring import mark_safe
 from django.utils.translation import ugettext as _
 from paging.helpers import paginate as paginate_func
+from sentry.conf import settings
 from sentry.plugins import GroupActionProvider
 from sentry.utils import json
 from templatetag_sugar.register import tag
@@ -190,19 +191,30 @@ truncatechars.is_safe = True
 #      a custom template, and not worry about INSTALLED_APPS
 @tag(register, [Variable('queryset_or_list'),
                 Constant('from'), Variable('request'),
-                Optional([Name('contextual')]),
                 Optional([Constant('as'), Name('asvar')]),
-                Optional([Constant('per_page'), Variable('per_page')]),
-                Optional([Variable('is_endless')])])
-def paginate(context, queryset_or_list, request, contextual=False, asvar=None, per_page=25, is_endless=True):
-    """{% paginate queryset_or_list from request as foo[ per_page 25][ is_endless False %}"""
-    result = paginate_func(request, queryset_or_list, per_page, endless=is_endless)
+                Optional([Constant('per_page'), Variable('per_page')])])
+def paginate(context, queryset_or_list, request, asvar=None, per_page=settings.MESSAGES_PER_PAGE):
+    """{% paginate queryset_or_list from request as foo[ per_page 25] %}"""
+    result = paginate_func(request, queryset_or_list, per_page, endless=True)
 
-    if not contextual:
-        context_instance = RequestContext(request)
-        paging = mark_safe(render_to_string('sentry/partial/_pager.html', result, context_instance))
+    context_instance = RequestContext(request)
+    paging = mark_safe(render_to_string('sentry/partial/_pager.html', result, context_instance))
 
-        result = dict(objects=result['paginator'].get('objects', []), paging=paging)
+    result = dict(objects=result['paginator'].get('objects', []), paging=paging)
+
+    if asvar:
+        context[asvar] = result
+        return ''
+    return result
+
+
+@tag(register, [Variable('queryset_or_list'),
+                Constant('from'), Variable('request'),
+                Optional([Constant('as'), Name('asvar')]),
+                Optional([Constant('per_page'), Variable('per_page')])])
+def paginator(context, queryset_or_list, request, asvar=None, per_page=settings.MESSAGES_PER_PAGE):
+    """{% paginator queryset_or_list from request as foo[ per_page 25] %}"""
+    result = paginate_func(request, queryset_or_list, per_page, endless=True)
 
     if asvar:
         context[asvar] = result
