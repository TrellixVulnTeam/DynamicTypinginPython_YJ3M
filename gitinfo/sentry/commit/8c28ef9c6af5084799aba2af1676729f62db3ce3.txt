commit 8c28ef9c6af5084799aba2af1676729f62db3ce3
Author: Matt Robenolt <matt@ydekproductions.com>
Date:   Fri Feb 26 15:39:52 2016 -0800

    Ignore + warn users about extra config options rather than error

diff --git a/src/sentry/options/manager.py b/src/sentry/options/manager.py
index 717274ee67..58171f06f0 100644
--- a/src/sentry/options/manager.py
+++ b/src/sentry/options/manager.py
@@ -7,6 +7,7 @@ sentry.options.manager
 """
 from __future__ import absolute_import, print_function
 
+import sys
 import logging
 from itertools import ifilter
 from types import NoneType
@@ -212,9 +213,14 @@ class OptionsManager(object):
             # Raise here or nah?
             raise UnknownOption(key)
 
-    def validate(self, options):
+    def validate(self, options, warn=False):
         for k, v in options.iteritems():
-            self.validate_option(k, v)
+            try:
+                self.validate_option(k, v)
+            except UnknownOption as e:
+                if not warn:
+                    raise
+                sys.stderr.write('* Unknown config option found: %s\n' % e)
 
     def validate_option(self, key, value):
         opt = self.lookup_key(key)
diff --git a/src/sentry/runner/initializer.py b/src/sentry/runner/initializer.py
index 2d7ecd5cbf..35d0686cfd 100644
--- a/src/sentry/runner/initializer.py
+++ b/src/sentry/runner/initializer.py
@@ -185,7 +185,7 @@ def validate_backends():
 
 def validate_options(settings):
     from sentry.options import default_manager
-    default_manager.validate(settings.SENTRY_OPTIONS)
+    default_manager.validate(settings.SENTRY_OPTIONS, warn=True)
 
 
 def fix_south(settings):
