commit 97404fac6bce94c38dde574d7164ac3e3181d853
Author: David Cramer <dcramer@gmail.com>
Date:   Mon Jun 29 16:32:27 2015 -0700

    Add first-release to search query

diff --git a/src/sentry/search/base.py b/src/sentry/search/base.py
index 3ea51bc3da..3203daae19 100644
--- a/src/sentry/search/base.py
+++ b/src/sentry/search/base.py
@@ -17,9 +17,9 @@ class SearchBackend(object):
         raise NotImplementedError
 
     def query(self, project, query=None, status=None, tags=None,
-              bookmarked_by=None, assigned_to=None, sort_by='date',
-              date_filter='last_seen', date_from=None, date_to=None,
-              cursor=None, limit=100):
+              bookmarked_by=None, assigned_to=None, first_release=None,
+              sort_by='date', date_filter='last_seen', date_from=None,
+              date_to=None, cursor=None, limit=100):
         """
         The return value should be a CursorResult.
 
diff --git a/src/sentry/search/django/backend.py b/src/sentry/search/django/backend.py
index 306534c017..14e14592de 100644
--- a/src/sentry/search/django/backend.py
+++ b/src/sentry/search/django/backend.py
@@ -24,9 +24,9 @@ class DjangoSearchBackend(SearchBackend):
         pass
 
     def query(self, project, query=None, status=None, tags=None,
-              bookmarked_by=None, assigned_to=None, sort_by='date',
-              date_filter='last_seen', date_from=None, date_to=None,
-              cursor=None, limit=100):
+              bookmarked_by=None, assigned_to=None, first_release=None,
+              sort_by='date', date_filter='last_seen', date_from=None,
+              date_to=None, cursor=None, limit=100):
         from sentry.models import Group
 
         queryset = Group.objects.filter(project=project)
@@ -55,6 +55,12 @@ class DjangoSearchBackend(SearchBackend):
                 assignee_set__user=assigned_to,
             )
 
+        if first_release:
+            queryset = queryset.filter(
+                first_release__project=project,
+                first_release__version=first_release,
+            )
+
         if tags:
             for k, v in tags.iteritems():
                 queryset = queryset.filter(**dict(
diff --git a/src/sentry/search/utils.py b/src/sentry/search/utils.py
index bec5d1aeb2..0be0583381 100644
--- a/src/sentry/search/utils.py
+++ b/src/sentry/search/utils.py
@@ -51,6 +51,8 @@ def parse_query(query, user):
                     # XXX(dcramer): hacky way to avoid showing any results when
                     # an invalid user is entered
                     results['assigned_to'] = User(id=0)
+        elif key == 'first-release':
+            results['first_release'] = value
         else:
             results['tags'][key] = value
 
