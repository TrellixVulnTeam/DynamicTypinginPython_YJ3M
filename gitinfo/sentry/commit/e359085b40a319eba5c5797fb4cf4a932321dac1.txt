commit e359085b40a319eba5c5797fb4cf4a932321dac1
Author: Lyn Nagara <lyn.nagara@gmail.com>
Date:   Tue Jun 11 10:57:21 2019 -0700

    feat(sentry10): Remove the ability to set a default environment (#13637)
    
    As far as I know this isn't useful in the Sentry 10 world since we now
    only use your local preferences to determine project/env defaults.

diff --git a/src/sentry/static/sentry/app/views/projectEnvironments.jsx b/src/sentry/static/sentry/app/views/projectEnvironments.jsx
index 6af7cd9472..f4b6d1e7e6 100644
--- a/src/sentry/static/sentry/app/views/projectEnvironments.jsx
+++ b/src/sentry/static/sentry/app/views/projectEnvironments.jsx
@@ -7,31 +7,23 @@ import styled from 'react-emotion';
 
 import {ALL_ENVIRONMENTS_KEY} from 'app/constants';
 import {Panel, PanelHeader, PanelBody, PanelItem} from 'app/components/panels';
-import {
-  addErrorMessage,
-  addLoadingMessage,
-  addSuccessMessage,
-} from 'app/actionCreators/indicator';
+import {addErrorMessage, addSuccessMessage} from 'app/actionCreators/indicator';
 import {
   loadActiveEnvironments,
   loadHiddenEnvironments,
 } from 'app/actionCreators/environments';
 import {t, tct} from 'app/locale';
-import {update} from 'app/actionCreators/projects';
 import Access from 'app/components/acl/access';
 import withApi from 'app/utils/withApi';
 import Button from 'app/components/button';
 import EmptyMessage from 'app/views/settings/components/emptyMessage';
 import EnvironmentStore from 'app/stores/environmentStore';
-import InlineSvg from 'app/components/inlineSvg';
 import ListLink from 'app/components/links/listLink';
 import LoadingIndicator from 'app/components/loadingIndicator';
 import NavTabs from 'app/components/navTabs';
 import PermissionAlert from 'app/views/settings/project/permissionAlert';
 import SentryTypes from 'app/sentryTypes';
 import SettingsPageHeader from 'app/views/settings/components/settingsPageHeader';
-import Tag from 'app/views/settings/components/tag';
-import Tooltip from 'app/components/tooltip';
 import recreateRoute from 'app/utils/recreateRoute';
 import space from 'app/styles/space';
 
@@ -154,52 +146,6 @@ const ProjectEnvironments = createReactClass({
     );
   },
 
-  // Change "Default Environment"
-  handleSetAsDefault(env) {
-    const defaultEnvironment = env.name === ALL_ENVIRONMENTS_KEY ? null : env.name;
-
-    const data = {defaultEnvironment};
-
-    const oldProject = this.state.project;
-
-    // Optimistically update state
-    this.setState(state => ({
-      ...state,
-      project: {
-        ...state.project,
-        ...data,
-      },
-    }));
-
-    addLoadingMessage();
-
-    // Update project details
-    update(this.props.api, {
-      ...this.props.params,
-      data,
-    }).then(
-      () => {
-        addSuccessMessage(
-          tct('Changed default environment to [environment]', {
-            environment: env.displayName,
-          })
-        );
-      },
-      err => {
-        // Error occurred, revert project state
-        this.setState(state => ({
-          ...state,
-          project: oldProject,
-        }));
-        addErrorMessage(
-          tct('Unable to change default environment to [environment]', {
-            environment: env.displayName,
-          })
-        );
-      }
-    );
-  },
-
   renderEmpty() {
     const {isHidden} = this.state;
     const message = isHidden
@@ -219,10 +165,6 @@ const ProjectEnvironments = createReactClass({
     if (this.state.isHidden) {
       return null;
     }
-    const {project} = this.state;
-
-    const isAllEnvironmentsDefault = project && project.defaultEnvironment === null;
-
     return (
       <EnvironmentRow
         name={ALL_ENVIRONMENTS_KEY}
@@ -232,85 +174,30 @@ const ProjectEnvironments = createReactClass({
           name: ALL_ENVIRONMENTS_KEY,
         }}
         isSystemRow
-        isDefault={isAllEnvironmentsDefault}
-        shouldShowSetDefault={!isAllEnvironmentsDefault && !!project}
-        onSetAsDefault={this.handleSetAsDefault}
-      />
-    );
-  },
-
-  // Renders current default environment IF it is not a valid environment
-  renderInvalidDefaultEnvironment() {
-    // Not available in "Hidden" tab
-    if (this.state.isHidden) {
-      return null;
-    }
-    const {environments, project} = this.state;
-    // Default environment that is not a valid environment
-    const isAllEnvironmentsDefault = project && project.defaultEnvironment === null;
-
-    const hasOtherDefaultEnvironment =
-      project &&
-      environments &&
-      !isAllEnvironmentsDefault &&
-      !environments.find(({name}) => name === project.defaultEnvironment);
-
-    if (!hasOtherDefaultEnvironment) {
-      return null;
-    }
-
-    return (
-      <EnvironmentRow
-        name={project.defaultEnvironment}
-        environment={{
-          id: project.defaultEnvironment,
-          displayName: (
-            <React.Fragment>
-              <Tooltip title={t('This is not an active environment')}>
-                <span css={{marginRight: 8}}>
-                  <InvalidDefaultEnvironmentIcon />
-                </span>
-              </Tooltip>
-              <code>{project.defaultEnvironment}</code>
-            </React.Fragment>
-          ),
-          name: project.defaultEnvironment,
-        }}
-        isSystemRow
-        isDefault
-        shouldShowSetDefault={false}
-        onSetAsDefault={this.handleSetAsDefault}
       />
     );
   },
 
   renderEnvironmentList(envs) {
-    const {project, isHidden} = this.state;
+    const {isHidden} = this.state;
     const buttonText = isHidden ? t('Show') : t('Hide');
 
     return (
       <React.Fragment>
         {this.renderSystemRows()}
         {envs.map(env => {
-          const isDefault = project && env.name === project.defaultEnvironment;
-          // Don't show "Set as default" button until project details are loaded
-          const shouldShowSetDefault = !isHidden && !isDefault && !!project;
           return (
             <EnvironmentRow
               key={env.id}
               name={env.name}
               environment={env}
-              isDefault={isDefault}
               isHidden={isHidden}
-              shouldShowSetDefault={shouldShowSetDefault}
-              onSetAsDefault={this.handleSetAsDefault}
               onHide={this.toggleEnv}
               actionText={buttonText}
               shouldShowAction
             />
           );
         })}
-        {this.renderInvalidDefaultEnvironment()}
       </React.Fragment>
     );
   },
@@ -364,50 +251,24 @@ const ProjectEnvironments = createReactClass({
 class EnvironmentRow extends React.Component {
   static propTypes = {
     environment: SentryTypes.Environment,
-    isDefault: PropTypes.bool,
     isHidden: PropTypes.bool,
     isSystemRow: PropTypes.bool,
-    shouldShowSetDefault: PropTypes.bool,
     shouldShowAction: PropTypes.bool,
     actionText: PropTypes.string,
-    onSetAsDefault: PropTypes.func,
     onHide: PropTypes.func,
   };
 
   render() {
-    const {
-      environment,
-      shouldShowSetDefault,
-      shouldShowAction,
-      isSystemRow,
-      isDefault,
-      isHidden,
-      actionText,
-    } = this.props;
+    const {environment, shouldShowAction, isSystemRow, isHidden, actionText} = this.props;
 
     return (
       <PanelItem align="center" justify="space-between">
         <Flex align="center">
           {isSystemRow ? environment.displayName : environment.name}
-          {isDefault && (
-            <Tag priority="success" ml={1}>
-              {t('Default')}
-            </Tag>
-          )}
         </Flex>
         <Access access={['project:write']}>
           {({hasAccess}) => (
             <div>
-              {shouldShowSetDefault && (
-                <EnvironmentButton
-                  size="xsmall"
-                  disabled={!hasAccess}
-                  onClick={() => this.props.onSetAsDefault(environment)}
-                >
-                  {t('Set as default')}
-                </EnvironmentButton>
-              )}
-
               {shouldShowAction && (
                 <EnvironmentButton
                   size="xsmall"
@@ -428,10 +289,5 @@ const EnvironmentButton = styled(Button)`
   margin-left: ${space(0.5)};
 `;
 
-const InvalidDefaultEnvironmentIcon = styled(props => (
-  <InlineSvg src="icon-circle-exclamation" {...props} />
-))`
-  color: ${p => p.theme.error};
-`;
 export {ProjectEnvironments};
 export default withApi(ProjectEnvironments);
diff --git a/tests/js/spec/views/__snapshots__/projectEnvironments.spec.jsx.snap b/tests/js/spec/views/__snapshots__/projectEnvironments.spec.jsx.snap
index 43aa7d9abc..6a98b73b91 100644
--- a/tests/js/spec/views/__snapshots__/projectEnvironments.spec.jsx.snap
+++ b/tests/js/spec/views/__snapshots__/projectEnvironments.spec.jsx.snap
@@ -399,1135 +399,6 @@ exports[`ProjectEnvironments render active renders empty message 1`] = `
 </ProjectEnvironments>
 `;
 
-exports[`ProjectEnvironments render active renders environment list and sets staging as default env 1`] = `
-<ProjectEnvironments
-  api={Client {}}
-  location={
-    Object {
-      "pathname": "environments/",
-    }
-  }
-  params={
-    Object {
-      "orgId": "org-slug",
-      "projectId": "project-slug",
-    }
-  }
-  routes={Array []}
->
-  <div>
-    <SettingsPageHeading
-      noTitleStyles={false}
-      tabs={
-        <NavTabs
-          underlined={true}
-        >
-          <ListLink
-            activeClassName="active"
-            index={true}
-            isActive={[Function]}
-            to="/org-slug/project-slug/settings/environments/"
-          >
-            Environments
-          </ListLink>
-          <ListLink
-            activeClassName="active"
-            index={true}
-            isActive={[Function]}
-            to="/org-slug/project-slug/settings/environments/hidden/"
-          >
-            Hidden
-          </ListLink>
-        </NavTabs>
-      }
-      title="Manage Environments"
-    >
-      <Wrapper>
-        <div
-          className="css-1r5ylk7-Wrapper e1kblvez2"
-        >
-          <Flex
-            align="center"
-          >
-            <Base
-              align="center"
-              className="css-5ipae5"
-            >
-              <div
-                className="css-5ipae5"
-                is={null}
-              >
-                <Title
-                  styled={false}
-                  tabs={
-                    <NavTabs
-                      underlined={true}
-                    >
-                      <ListLink
-                        activeClassName="active"
-                        index={true}
-                        isActive={[Function]}
-                        to="/org-slug/project-slug/settings/environments/"
-                      >
-                        Environments
-                      </ListLink>
-                      <ListLink
-                        activeClassName="active"
-                        index={true}
-                        isActive={[Function]}
-                        to="/org-slug/project-slug/settings/environments/hidden/"
-                      >
-                        Hidden
-                      </ListLink>
-                    </NavTabs>
-                  }
-                >
-                  <Base
-                    className="css-zs9eah-Title e1kblvez0"
-                    tabs={
-                      <NavTabs
-                        underlined={true}
-                      >
-                        <ListLink
-                          activeClassName="active"
-                          index={true}
-                          isActive={[Function]}
-                          to="/org-slug/project-slug/settings/environments/"
-                        >
-                          Environments
-                        </ListLink>
-                        <ListLink
-                          activeClassName="active"
-                          index={true}
-                          isActive={[Function]}
-                          to="/org-slug/project-slug/settings/environments/hidden/"
-                        >
-                          Hidden
-                        </ListLink>
-                      </NavTabs>
-                    }
-                  >
-                    <div
-                      className="css-zs9eah-Title e1kblvez0"
-                      is={null}
-                      tabs={
-                        <NavTabs
-                          underlined={true}
-                        >
-                          <ListLink
-                            activeClassName="active"
-                            index={true}
-                            isActive={[Function]}
-                            to="/org-slug/project-slug/settings/environments/"
-                          >
-                            Environments
-                          </ListLink>
-                          <ListLink
-                            activeClassName="active"
-                            index={true}
-                            isActive={[Function]}
-                            to="/org-slug/project-slug/settings/environments/hidden/"
-                          >
-                            Hidden
-                          </ListLink>
-                        </NavTabs>
-                      }
-                    >
-                      <HeaderTitle>
-                        <h4
-                          className="css-1w8ttcn-HeaderTitle e6lvex72"
-                        >
-                          Manage Environments
-                        </h4>
-                      </HeaderTitle>
-                    </div>
-                  </Base>
-                </Title>
-              </div>
-            </Base>
-          </Flex>
-          <div>
-            <NavTabs
-              underlined={true}
-            >
-              <ul
-                className="nav nav-tabs border-bottom"
-              >
-                <ListLink
-                  activeClassName="active"
-                  index={true}
-                  isActive={[Function]}
-                  to="/org-slug/project-slug/settings/environments/"
-                >
-                  <li
-                    className="active"
-                  >
-                    <Link
-                      onlyActiveOnIndex={true}
-                      style={Object {}}
-                      to="/org-slug/project-slug/settings/environments/"
-                    >
-                      <a
-                        onClick={[Function]}
-                        style={Object {}}
-                      >
-                        Environments
-                      </a>
-                    </Link>
-                  </li>
-                </ListLink>
-                <ListLink
-                  activeClassName="active"
-                  index={true}
-                  isActive={[Function]}
-                  to="/org-slug/project-slug/settings/environments/hidden/"
-                >
-                  <li
-                    className=""
-                  >
-                    <Link
-                      onlyActiveOnIndex={true}
-                      style={Object {}}
-                      to="/org-slug/project-slug/settings/environments/hidden/"
-                    >
-                      <a
-                        onClick={[Function]}
-                        style={Object {}}
-                      >
-                        Hidden
-                      </a>
-                    </Link>
-                  </li>
-                </ListLink>
-              </ul>
-            </NavTabs>
-          </div>
-        </div>
-      </Wrapper>
-    </SettingsPageHeading>
-    <PermissionAlert
-      access={
-        Array [
-          "project:write",
-        ]
-      }
-    >
-      <withConfig(AccessContainer)
-        access={
-          Array [
-            "project:write",
-          ]
-        }
-      >
-        <AccessContainer
-          access={
-            Array [
-              "project:write",
-            ]
-          }
-          config={
-            Object {
-              "features": Set {},
-              "messages": Array [],
-              "user": Object {
-                "email": "foo@example.com",
-                "flags": Object {
-                  "newsletter_consent_prompt": false,
-                },
-                "hasPasswordAuth": true,
-                "id": "1",
-                "isAuthenticated": true,
-                "name": "Foo Bar",
-                "options": Object {
-                  "timezone": "UTC",
-                },
-                "permissions": Set {},
-                "username": "foo@example.com",
-              },
-            }
-          }
-        >
-          <Access
-            access={
-              Array [
-                "project:write",
-              ]
-            }
-            config={
-              Object {
-                "features": Set {},
-                "messages": Array [],
-                "user": Object {
-                  "email": "foo@example.com",
-                  "flags": Object {
-                    "newsletter_consent_prompt": false,
-                  },
-                  "hasPasswordAuth": true,
-                  "id": "1",
-                  "isAuthenticated": true,
-                  "name": "Foo Bar",
-                  "options": Object {
-                    "timezone": "UTC",
-                  },
-                  "permissions": Set {},
-                  "username": "foo@example.com",
-                },
-              }
-            }
-            configUser={
-              Object {
-                "email": "foo@example.com",
-                "flags": Object {
-                  "newsletter_consent_prompt": false,
-                },
-                "hasPasswordAuth": true,
-                "id": "1",
-                "isAuthenticated": true,
-                "name": "Foo Bar",
-                "options": Object {
-                  "timezone": "UTC",
-                },
-                "permissions": Set {},
-                "username": "foo@example.com",
-              }
-            }
-            organization={
-              Object {
-                "access": Array [
-                  "org:read",
-                  "org:write",
-                  "org:admin",
-                  "org:integrations",
-                  "project:read",
-                  "project:write",
-                  "project:admin",
-                  "team:read",
-                  "team:write",
-                  "team:admin",
-                ],
-                "features": Array [],
-                "id": "3",
-                "name": "Organization Name",
-                "onboardingTasks": Array [],
-                "projects": Array [],
-                "scrapeJavaScript": true,
-                "slug": "org-slug",
-                "status": Object {
-                  "id": "active",
-                  "name": "active",
-                },
-                "teams": Array [],
-              }
-            }
-            renderNoAccessMessage={false}
-            requireAll={true}
-          />
-        </AccessContainer>
-      </withConfig(AccessContainer)>
-    </PermissionAlert>
-    <Panel>
-      <Component
-        className="css-10qfvek-Panel e1laxa7d0"
-      >
-        <div
-          className="css-10qfvek-Panel e1laxa7d0"
-        >
-          <PanelHeader>
-            <Component
-              className="css-7odsll-PanelHeader-getPadding e1p8v8nv0"
-            >
-              <Flex
-                align="center"
-                className="css-7odsll-PanelHeader-getPadding e1p8v8nv0"
-                justify="space-between"
-              >
-                <Base
-                  align="center"
-                  className="e1p8v8nv0 css-1fivf9w-PanelHeader-getPadding"
-                  justify="space-between"
-                >
-                  <div
-                    className="e1p8v8nv0 css-1fivf9w-PanelHeader-getPadding"
-                    is={null}
-                  >
-                    Active Environments
-                  </div>
-                </Base>
-              </Flex>
-            </Component>
-          </PanelHeader>
-          <PanelBody
-            direction="column"
-            disablePadding={true}
-            flex={false}
-          >
-            <div
-              className="css-a4ya23-textStyles"
-            >
-              <EnvironmentRow
-                environment={
-                  Object {
-                    "displayName": "All Environments",
-                    "id": "__all_environments__",
-                    "name": "__all_environments__",
-                  }
-                }
-                isDefault={false}
-                isSystemRow={true}
-                name="__all_environments__"
-                onSetAsDefault={[Function]}
-                shouldShowSetDefault={true}
-              >
-                <PanelItem
-                  align="center"
-                  justify="space-between"
-                  p={2}
-                >
-                  <Base
-                    align="center"
-                    className="css-1uaastv-PanelItem eo8n7lk0"
-                    justify="space-between"
-                    p={2}
-                  >
-                    <div
-                      className="css-1uaastv-PanelItem eo8n7lk0"
-                      is={null}
-                    >
-                      <Flex
-                        align="center"
-                      >
-                        <Base
-                          align="center"
-                          className="css-5ipae5"
-                        >
-                          <div
-                            className="css-5ipae5"
-                            is={null}
-                          >
-                            All Environments
-                          </div>
-                        </Base>
-                      </Flex>
-                      <withConfig(AccessContainer)
-                        access={
-                          Array [
-                            "project:write",
-                          ]
-                        }
-                      >
-                        <AccessContainer
-                          access={
-                            Array [
-                              "project:write",
-                            ]
-                          }
-                          config={
-                            Object {
-                              "features": Set {},
-                              "messages": Array [],
-                              "user": Object {
-                                "email": "foo@example.com",
-                                "flags": Object {
-                                  "newsletter_consent_prompt": false,
-                                },
-                                "hasPasswordAuth": true,
-                                "id": "1",
-                                "isAuthenticated": true,
-                                "name": "Foo Bar",
-                                "options": Object {
-                                  "timezone": "UTC",
-                                },
-                                "permissions": Set {},
-                                "username": "foo@example.com",
-                              },
-                            }
-                          }
-                        >
-                          <Access
-                            access={
-                              Array [
-                                "project:write",
-                              ]
-                            }
-                            config={
-                              Object {
-                                "features": Set {},
-                                "messages": Array [],
-                                "user": Object {
-                                  "email": "foo@example.com",
-                                  "flags": Object {
-                                    "newsletter_consent_prompt": false,
-                                  },
-                                  "hasPasswordAuth": true,
-                                  "id": "1",
-                                  "isAuthenticated": true,
-                                  "name": "Foo Bar",
-                                  "options": Object {
-                                    "timezone": "UTC",
-                                  },
-                                  "permissions": Set {},
-                                  "username": "foo@example.com",
-                                },
-                              }
-                            }
-                            configUser={
-                              Object {
-                                "email": "foo@example.com",
-                                "flags": Object {
-                                  "newsletter_consent_prompt": false,
-                                },
-                                "hasPasswordAuth": true,
-                                "id": "1",
-                                "isAuthenticated": true,
-                                "name": "Foo Bar",
-                                "options": Object {
-                                  "timezone": "UTC",
-                                },
-                                "permissions": Set {},
-                                "username": "foo@example.com",
-                              }
-                            }
-                            organization={
-                              Object {
-                                "access": Array [
-                                  "org:read",
-                                  "org:write",
-                                  "org:admin",
-                                  "org:integrations",
-                                  "project:read",
-                                  "project:write",
-                                  "project:admin",
-                                  "team:read",
-                                  "team:write",
-                                  "team:admin",
-                                ],
-                                "features": Array [],
-                                "id": "3",
-                                "name": "Organization Name",
-                                "onboardingTasks": Array [],
-                                "projects": Array [],
-                                "scrapeJavaScript": true,
-                                "slug": "org-slug",
-                                "status": Object {
-                                  "id": "active",
-                                  "name": "active",
-                                },
-                                "teams": Array [],
-                              }
-                            }
-                            renderNoAccessMessage={false}
-                            requireAll={true}
-                          >
-                            <div>
-                              <EnvironmentButton
-                                disabled={false}
-                                onClick={[Function]}
-                                size="xsmall"
-                              >
-                                <Button
-                                  className="css-10adnmx-EnvironmentButton ezuela50"
-                                  disabled={false}
-                                  onClick={[Function]}
-                                  size="xsmall"
-                                >
-                                  <StyledButton
-                                    aria-disabled={false}
-                                    aria-label="Set as default"
-                                    className="css-10adnmx-EnvironmentButton ezuela50"
-                                    disabled={false}
-                                    onClick={[Function]}
-                                    role="button"
-                                    size="xsmall"
-                                  >
-                                    <ForwardRef
-                                      aria-disabled={false}
-                                      aria-label="Set as default"
-                                      className="ezuela50 css-1b2zh6x-StyledButton-getColors-EnvironmentButton e12ma6z0"
-                                      disabled={false}
-                                      onClick={[Function]}
-                                      role="button"
-                                      size="xsmall"
-                                    >
-                                      <button
-                                        aria-disabled={false}
-                                        aria-label="Set as default"
-                                        className="ezuela50 css-1b2zh6x-StyledButton-getColors-EnvironmentButton e12ma6z0"
-                                        onClick={[Function]}
-                                        role="button"
-                                        size="xsmall"
-                                      >
-                                        <ButtonLabel
-                                          size="xsmall"
-                                        >
-                                          <Component
-                                            className="css-uthd1f-ButtonLabel e12ma6z1"
-                                            size="xsmall"
-                                          >
-                                            <span
-                                              className="css-uthd1f-ButtonLabel e12ma6z1"
-                                            >
-                                              Set as default
-                                            </span>
-                                          </Component>
-                                        </ButtonLabel>
-                                      </button>
-                                    </ForwardRef>
-                                  </StyledButton>
-                                </Button>
-                              </EnvironmentButton>
-                            </div>
-                          </Access>
-                        </AccessContainer>
-                      </withConfig(AccessContainer)>
-                    </div>
-                  </Base>
-                </PanelItem>
-              </EnvironmentRow>
-              <EnvironmentRow
-                actionText="Hide"
-                environment={
-                  Object {
-                    "displayName": "Production",
-                    "id": "1",
-                    "name": "production",
-                    "urlRoutingName": "production",
-                  }
-                }
-                isDefault={false}
-                isHidden={false}
-                key="1"
-                name="production"
-                onHide={[Function]}
-                onSetAsDefault={[Function]}
-                shouldShowAction={true}
-                shouldShowSetDefault={true}
-              >
-                <PanelItem
-                  align="center"
-                  justify="space-between"
-                  p={2}
-                >
-                  <Base
-                    align="center"
-                    className="css-1uaastv-PanelItem eo8n7lk0"
-                    justify="space-between"
-                    p={2}
-                  >
-                    <div
-                      className="css-1uaastv-PanelItem eo8n7lk0"
-                      is={null}
-                    >
-                      <Flex
-                        align="center"
-                      >
-                        <Base
-                          align="center"
-                          className="css-5ipae5"
-                        >
-                          <div
-                            className="css-5ipae5"
-                            is={null}
-                          >
-                            production
-                          </div>
-                        </Base>
-                      </Flex>
-                      <withConfig(AccessContainer)
-                        access={
-                          Array [
-                            "project:write",
-                          ]
-                        }
-                      >
-                        <AccessContainer
-                          access={
-                            Array [
-                              "project:write",
-                            ]
-                          }
-                          config={
-                            Object {
-                              "features": Set {},
-                              "messages": Array [],
-                              "user": Object {
-                                "email": "foo@example.com",
-                                "flags": Object {
-                                  "newsletter_consent_prompt": false,
-                                },
-                                "hasPasswordAuth": true,
-                                "id": "1",
-                                "isAuthenticated": true,
-                                "name": "Foo Bar",
-                                "options": Object {
-                                  "timezone": "UTC",
-                                },
-                                "permissions": Set {},
-                                "username": "foo@example.com",
-                              },
-                            }
-                          }
-                        >
-                          <Access
-                            access={
-                              Array [
-                                "project:write",
-                              ]
-                            }
-                            config={
-                              Object {
-                                "features": Set {},
-                                "messages": Array [],
-                                "user": Object {
-                                  "email": "foo@example.com",
-                                  "flags": Object {
-                                    "newsletter_consent_prompt": false,
-                                  },
-                                  "hasPasswordAuth": true,
-                                  "id": "1",
-                                  "isAuthenticated": true,
-                                  "name": "Foo Bar",
-                                  "options": Object {
-                                    "timezone": "UTC",
-                                  },
-                                  "permissions": Set {},
-                                  "username": "foo@example.com",
-                                },
-                              }
-                            }
-                            configUser={
-                              Object {
-                                "email": "foo@example.com",
-                                "flags": Object {
-                                  "newsletter_consent_prompt": false,
-                                },
-                                "hasPasswordAuth": true,
-                                "id": "1",
-                                "isAuthenticated": true,
-                                "name": "Foo Bar",
-                                "options": Object {
-                                  "timezone": "UTC",
-                                },
-                                "permissions": Set {},
-                                "username": "foo@example.com",
-                              }
-                            }
-                            organization={
-                              Object {
-                                "access": Array [
-                                  "org:read",
-                                  "org:write",
-                                  "org:admin",
-                                  "org:integrations",
-                                  "project:read",
-                                  "project:write",
-                                  "project:admin",
-                                  "team:read",
-                                  "team:write",
-                                  "team:admin",
-                                ],
-                                "features": Array [],
-                                "id": "3",
-                                "name": "Organization Name",
-                                "onboardingTasks": Array [],
-                                "projects": Array [],
-                                "scrapeJavaScript": true,
-                                "slug": "org-slug",
-                                "status": Object {
-                                  "id": "active",
-                                  "name": "active",
-                                },
-                                "teams": Array [],
-                              }
-                            }
-                            renderNoAccessMessage={false}
-                            requireAll={true}
-                          >
-                            <div>
-                              <EnvironmentButton
-                                disabled={false}
-                                onClick={[Function]}
-                                size="xsmall"
-                              >
-                                <Button
-                                  className="css-10adnmx-EnvironmentButton ezuela50"
-                                  disabled={false}
-                                  onClick={[Function]}
-                                  size="xsmall"
-                                >
-                                  <StyledButton
-                                    aria-disabled={false}
-                                    aria-label="Set as default"
-                                    className="css-10adnmx-EnvironmentButton ezuela50"
-                                    disabled={false}
-                                    onClick={[Function]}
-                                    role="button"
-                                    size="xsmall"
-                                  >
-                                    <ForwardRef
-                                      aria-disabled={false}
-                                      aria-label="Set as default"
-                                      className="ezuela50 css-1b2zh6x-StyledButton-getColors-EnvironmentButton e12ma6z0"
-                                      disabled={false}
-                                      onClick={[Function]}
-                                      role="button"
-                                      size="xsmall"
-                                    >
-                                      <button
-                                        aria-disabled={false}
-                                        aria-label="Set as default"
-                                        className="ezuela50 css-1b2zh6x-StyledButton-getColors-EnvironmentButton e12ma6z0"
-                                        onClick={[Function]}
-                                        role="button"
-                                        size="xsmall"
-                                      >
-                                        <ButtonLabel
-                                          size="xsmall"
-                                        >
-                                          <Component
-                                            className="css-uthd1f-ButtonLabel e12ma6z1"
-                                            size="xsmall"
-                                          >
-                                            <span
-                                              className="css-uthd1f-ButtonLabel e12ma6z1"
-                                            >
-                                              Set as default
-                                            </span>
-                                          </Component>
-                                        </ButtonLabel>
-                                      </button>
-                                    </ForwardRef>
-                                  </StyledButton>
-                                </Button>
-                              </EnvironmentButton>
-                              <EnvironmentButton
-                                disabled={false}
-                                onClick={[Function]}
-                                size="xsmall"
-                              >
-                                <Button
-                                  className="css-10adnmx-EnvironmentButton ezuela50"
-                                  disabled={false}
-                                  onClick={[Function]}
-                                  size="xsmall"
-                                >
-                                  <StyledButton
-                                    aria-disabled={false}
-                                    aria-label="Hide"
-                                    className="css-10adnmx-EnvironmentButton ezuela50"
-                                    disabled={false}
-                                    onClick={[Function]}
-                                    role="button"
-                                    size="xsmall"
-                                  >
-                                    <ForwardRef
-                                      aria-disabled={false}
-                                      aria-label="Hide"
-                                      className="ezuela50 css-1b2zh6x-StyledButton-getColors-EnvironmentButton e12ma6z0"
-                                      disabled={false}
-                                      onClick={[Function]}
-                                      role="button"
-                                      size="xsmall"
-                                    >
-                                      <button
-                                        aria-disabled={false}
-                                        aria-label="Hide"
-                                        className="ezuela50 css-1b2zh6x-StyledButton-getColors-EnvironmentButton e12ma6z0"
-                                        onClick={[Function]}
-                                        role="button"
-                                        size="xsmall"
-                                      >
-                                        <ButtonLabel
-                                          size="xsmall"
-                                        >
-                                          <Component
-                                            className="css-uthd1f-ButtonLabel e12ma6z1"
-                                            size="xsmall"
-                                          >
-                                            <span
-                                              className="css-uthd1f-ButtonLabel e12ma6z1"
-                                            >
-                                              Hide
-                                            </span>
-                                          </Component>
-                                        </ButtonLabel>
-                                      </button>
-                                    </ForwardRef>
-                                  </StyledButton>
-                                </Button>
-                              </EnvironmentButton>
-                            </div>
-                          </Access>
-                        </AccessContainer>
-                      </withConfig(AccessContainer)>
-                    </div>
-                  </Base>
-                </PanelItem>
-              </EnvironmentRow>
-              <EnvironmentRow
-                actionText="Hide"
-                environment={
-                  Object {
-                    "displayName": "Staging",
-                    "id": "2",
-                    "name": "staging",
-                    "urlRoutingName": "staging",
-                  }
-                }
-                isDefault={true}
-                isHidden={false}
-                key="2"
-                name="staging"
-                onHide={[Function]}
-                onSetAsDefault={[Function]}
-                shouldShowAction={true}
-                shouldShowSetDefault={false}
-              >
-                <PanelItem
-                  align="center"
-                  justify="space-between"
-                  p={2}
-                >
-                  <Base
-                    align="center"
-                    className="css-1uaastv-PanelItem eo8n7lk0"
-                    justify="space-between"
-                    p={2}
-                  >
-                    <div
-                      className="css-1uaastv-PanelItem eo8n7lk0"
-                      is={null}
-                    >
-                      <Flex
-                        align="center"
-                      >
-                        <Base
-                          align="center"
-                          className="css-5ipae5"
-                        >
-                          <div
-                            className="css-5ipae5"
-                            is={null}
-                          >
-                            staging
-                            <Tag
-                              ml={1}
-                              priority="success"
-                            >
-                              <TagTextStyled
-                                ml={1}
-                                priority="success"
-                              >
-                                <Component
-                                  className="css-d9oizi-TagTextStyled e6q9yfr0"
-                                  ml={1}
-                                  priority="success"
-                                >
-                                  <Box
-                                    className="css-d9oizi-TagTextStyled e6q9yfr0"
-                                    ml={1}
-                                  >
-                                    <Base
-                                      className="e6q9yfr0 css-3cvk4g-TagTextStyled"
-                                      ml={1}
-                                    >
-                                      <div
-                                        className="e6q9yfr0 css-3cvk4g-TagTextStyled"
-                                        is={null}
-                                      >
-                                        Default
-                                      </div>
-                                    </Base>
-                                  </Box>
-                                </Component>
-                              </TagTextStyled>
-                            </Tag>
-                          </div>
-                        </Base>
-                      </Flex>
-                      <withConfig(AccessContainer)
-                        access={
-                          Array [
-                            "project:write",
-                          ]
-                        }
-                      >
-                        <AccessContainer
-                          access={
-                            Array [
-                              "project:write",
-                            ]
-                          }
-                          config={
-                            Object {
-                              "features": Set {},
-                              "messages": Array [],
-                              "user": Object {
-                                "email": "foo@example.com",
-                                "flags": Object {
-                                  "newsletter_consent_prompt": false,
-                                },
-                                "hasPasswordAuth": true,
-                                "id": "1",
-                                "isAuthenticated": true,
-                                "name": "Foo Bar",
-                                "options": Object {
-                                  "timezone": "UTC",
-                                },
-                                "permissions": Set {},
-                                "username": "foo@example.com",
-                              },
-                            }
-                          }
-                        >
-                          <Access
-                            access={
-                              Array [
-                                "project:write",
-                              ]
-                            }
-                            config={
-                              Object {
-                                "features": Set {},
-                                "messages": Array [],
-                                "user": Object {
-                                  "email": "foo@example.com",
-                                  "flags": Object {
-                                    "newsletter_consent_prompt": false,
-                                  },
-                                  "hasPasswordAuth": true,
-                                  "id": "1",
-                                  "isAuthenticated": true,
-                                  "name": "Foo Bar",
-                                  "options": Object {
-                                    "timezone": "UTC",
-                                  },
-                                  "permissions": Set {},
-                                  "username": "foo@example.com",
-                                },
-                              }
-                            }
-                            configUser={
-                              Object {
-                                "email": "foo@example.com",
-                                "flags": Object {
-                                  "newsletter_consent_prompt": false,
-                                },
-                                "hasPasswordAuth": true,
-                                "id": "1",
-                                "isAuthenticated": true,
-                                "name": "Foo Bar",
-                                "options": Object {
-                                  "timezone": "UTC",
-                                },
-                                "permissions": Set {},
-                                "username": "foo@example.com",
-                              }
-                            }
-                            organization={
-                              Object {
-                                "access": Array [
-                                  "org:read",
-                                  "org:write",
-                                  "org:admin",
-                                  "org:integrations",
-                                  "project:read",
-                                  "project:write",
-                                  "project:admin",
-                                  "team:read",
-                                  "team:write",
-                                  "team:admin",
-                                ],
-                                "features": Array [],
-                                "id": "3",
-                                "name": "Organization Name",
-                                "onboardingTasks": Array [],
-                                "projects": Array [],
-                                "scrapeJavaScript": true,
-                                "slug": "org-slug",
-                                "status": Object {
-                                  "id": "active",
-                                  "name": "active",
-                                },
-                                "teams": Array [],
-                              }
-                            }
-                            renderNoAccessMessage={false}
-                            requireAll={true}
-                          >
-                            <div>
-                              <EnvironmentButton
-                                disabled={false}
-                                onClick={[Function]}
-                                size="xsmall"
-                              >
-                                <Button
-                                  className="css-10adnmx-EnvironmentButton ezuela50"
-                                  disabled={false}
-                                  onClick={[Function]}
-                                  size="xsmall"
-                                >
-                                  <StyledButton
-                                    aria-disabled={false}
-                                    aria-label="Hide"
-                                    className="css-10adnmx-EnvironmentButton ezuela50"
-                                    disabled={false}
-                                    onClick={[Function]}
-                                    role="button"
-                                    size="xsmall"
-                                  >
-                                    <ForwardRef
-                                      aria-disabled={false}
-                                      aria-label="Hide"
-                                      className="ezuela50 css-1b2zh6x-StyledButton-getColors-EnvironmentButton e12ma6z0"
-                                      disabled={false}
-                                      onClick={[Function]}
-                                      role="button"
-                                      size="xsmall"
-                                    >
-                                      <button
-                                        aria-disabled={false}
-                                        aria-label="Hide"
-                                        className="ezuela50 css-1b2zh6x-StyledButton-getColors-EnvironmentButton e12ma6z0"
-                                        onClick={[Function]}
-                                        role="button"
-                                        size="xsmall"
-                                      >
-                                        <ButtonLabel
-                                          size="xsmall"
-                                        >
-                                          <Component
-                                            className="css-uthd1f-ButtonLabel e12ma6z1"
-                                            size="xsmall"
-                                          >
-                                            <span
-                                              className="css-uthd1f-ButtonLabel e12ma6z1"
-                                            >
-                                              Hide
-                                            </span>
-                                          </Component>
-                                        </ButtonLabel>
-                                      </button>
-                                    </ForwardRef>
-                                  </StyledButton>
-                                </Button>
-                              </EnvironmentButton>
-                            </div>
-                          </Access>
-                        </AccessContainer>
-                      </withConfig(AccessContainer)>
-                    </div>
-                  </Base>
-                </PanelItem>
-              </EnvironmentRow>
-            </div>
-          </PanelBody>
-        </div>
-      </Component>
-    </Panel>
-  </div>
-</ProjectEnvironments>
-`;
-
 exports[`ProjectEnvironments render hidden renders empty message 1`] = `
 <ProjectEnvironments
   api={Client {}}
@@ -2302,14 +1173,11 @@ exports[`ProjectEnvironments render hidden renders environment list 1`] = `
                     "urlRoutingName": "zzz",
                   }
                 }
-                isDefault={false}
                 isHidden={true}
                 key="1"
                 name="zzz"
                 onHide={[Function]}
-                onSetAsDefault={[Function]}
                 shouldShowAction={true}
-                shouldShowSetDefault={false}
               >
                 <PanelItem
                   align="center"
diff --git a/tests/js/spec/views/projectEnvironments.spec.jsx b/tests/js/spec/views/projectEnvironments.spec.jsx
index 3a828a42ae..6bb0e600be 100644
--- a/tests/js/spec/views/projectEnvironments.spec.jsx
+++ b/tests/js/spec/views/projectEnvironments.spec.jsx
@@ -28,7 +28,6 @@ function mountComponent(isHidden) {
 
 describe('ProjectEnvironments', function() {
   let project;
-  let updateDefaultMock;
 
   beforeEach(function() {
     project = TestStubs.Project({
@@ -38,10 +37,6 @@ describe('ProjectEnvironments', function() {
       url: '/projects/org-slug/project-slug/',
       body: project,
     });
-    updateDefaultMock = MockApiClient.addMockResponse({
-      url: '/projects/org-slug/project-slug/',
-      method: 'PUT',
-    });
   });
 
   afterEach(function() {
@@ -58,141 +53,13 @@ describe('ProjectEnvironments', function() {
       expect(wrapper.find('ProjectEnvironments')).toMatchSnapshot();
     });
 
-    it('renders environment list and sets staging as default env', async function() {
+    it('renders environment list', async function() {
       EnvironmentStore.loadInitialData(TestStubs.Environments(false));
       const wrapper = mountComponent(false);
 
-      // Production environment is default
       const productionRow = wrapper.find('EnvironmentRow[name="production"]');
-      const stagingRow = wrapper.find('EnvironmentRow[name="staging"]');
-
-      expect(productionRow.find('Tag').prop('children')).toBe('Default');
 
       expect(productionRow.find('Button')).toHaveLength(1);
-
-      expect(stagingRow.find('Tag')).toHaveLength(0);
-
-      expect(
-        stagingRow
-          .find('Button')
-          .first()
-          .text()
-      ).toBe('Set as default');
-
-      // Can set as default
-      stagingRow
-        .find('Button')
-        .first()
-        .simulate('click');
-
-      expect(updateDefaultMock).toHaveBeenCalledWith(
-        expect.anything(),
-        expect.objectContaining({
-          data: {
-            defaultEnvironment: 'staging',
-          },
-        })
-      );
-
-      expect(wrapper.find('EnvironmentRow[name="staging"] Tag')).toHaveLength(1);
-      expect(wrapper.find('EnvironmentRow[name="production"] Tag')).toHaveLength(0);
-      expect(wrapper.find('ProjectEnvironments')).toMatchSnapshot();
-    });
-
-    it('can set "(No Environment)" as default', function() {
-      EnvironmentStore.loadInitialData([
-        ...TestStubs.Environments(false),
-        {
-          id: 'no-environment-id',
-          name: '',
-          displayName: '(No Environment)',
-        },
-      ]);
-      const wrapper = mountComponent(false);
-
-      const noEnvironmentsRow = wrapper.find('EnvironmentRow[name=""]');
-
-      // Not default
-      expect(noEnvironmentsRow.find('Tag')).toHaveLength(0);
-
-      // Is able to hide
-      expect(noEnvironmentsRow.find('Button')).toHaveLength(2);
-      expect(
-        noEnvironmentsRow
-          .find('Button')
-          .first()
-          .text()
-      ).toBe('Set as default');
-      noEnvironmentsRow
-        .find('Button')
-        .first()
-        .simulate('click');
-
-      expect(updateDefaultMock).toHaveBeenCalledWith(
-        expect.anything(),
-        expect.objectContaining({
-          data: {
-            defaultEnvironment: '',
-          },
-        })
-      );
-
-      // Is default
-      expect(wrapper.find('EnvironmentRow[name=""]').find('Tag')).toHaveLength(1);
-    });
-
-    it('can set "All Environments" as default', function() {
-      EnvironmentStore.loadInitialData(TestStubs.Environments(false));
-      const wrapper = mountComponent(false);
-
-      const allEnvironmentsRow = wrapper.find(
-        `EnvironmentRow[name="${ALL_ENVIRONMENTS_KEY}"]`
-      );
-
-      // Not default
-      expect(allEnvironmentsRow.find('Tag')).toHaveLength(0);
-
-      // Should not have hide button
-      expect(allEnvironmentsRow.find('Button')).toHaveLength(1);
-      expect(allEnvironmentsRow.find('Button').text()).toBe('Set as default');
-
-      // Set as default
-      allEnvironmentsRow.find('Button').simulate('click');
-
-      expect(updateDefaultMock).toHaveBeenCalledWith(
-        expect.anything(),
-        expect.objectContaining({
-          data: {
-            defaultEnvironment: null,
-          },
-        })
-      );
-
-      expect(
-        wrapper.find(`EnvironmentRow[name="${ALL_ENVIRONMENTS_KEY}"]`).find('Tag')
-      ).toHaveLength(1);
-    });
-
-    it('displays invalid environment in list with no actions', function() {
-      project = TestStubs.Project({
-        defaultEnvironment: 'invalid-environment',
-      });
-      MockApiClient.addMockResponse({
-        url: '/projects/org-slug/project-slug/',
-        body: project,
-      });
-      EnvironmentStore.loadInitialData(TestStubs.Environments(false));
-      const wrapper = mountComponent(false);
-
-      const row = wrapper.find('EnvironmentRow[name="invalid-environment"]');
-
-      // Is default
-      expect(row.find('Tag')).toHaveLength(1);
-
-      // Can not hide or set as default
-      expect(row.find('Button')).toHaveLength(0);
-
-      expect(wrapper.find('InvalidDefaultEnvironmentIcon')).toHaveLength(1);
     });
   });
 
