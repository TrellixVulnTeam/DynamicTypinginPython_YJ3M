commit 8e5cab07d05b4a4a986898d93f01312bac4e2326
Author: David Cramer <dcramer@gmail.com>
Date:   Mon Nov 18 21:25:58 2019 -0800

    feat(discover): Add apdex and p99 aliases

diff --git a/src/sentry/api/event_search.py b/src/sentry/api/event_search.py
index e6dca7e38c..58dcd8f19c 100644
--- a/src/sentry/api/event_search.py
+++ b/src/sentry/api/event_search.py
@@ -683,8 +683,10 @@ FIELD_ALIASES = {
     "user": {"fields": ["user.id", "user.name", "user.username", "user.email", "user.ip"]},
     # Long term these will become more complex functions but these are
     # field aliases.
+    "apdex": {"aggregations": [["apdex(duration, 300)", "", "apdex"]]},
     "p75": {"aggregations": [["quantileTiming(0.75)(duration)", "", "p75"]]},
     "p95": {"aggregations": [["quantileTiming(0.95)(duration)", "", "p95"]]},
+    "p99": {"aggregations": [["quantileTiming(0.99)(duration)", "", "p99"]]},
 }
 
 VALID_AGGREGATES = {
diff --git a/src/sentry/static/sentry/app/views/eventsV2/eventQueryParams.tsx b/src/sentry/static/sentry/app/views/eventsV2/eventQueryParams.tsx
index 1279479993..e4b3f179c3 100644
--- a/src/sentry/static/sentry/app/views/eventsV2/eventQueryParams.tsx
+++ b/src/sentry/static/sentry/app/views/eventsV2/eventQueryParams.tsx
@@ -139,9 +139,11 @@ export const FIELDS: {[key: string]: ColumnValueType} = {
 
   'transaction.duration': 'duration',
   'transaction.op': 'string',
+  apdex: 'number',
   // duration aliases
   p75: 'number',
   p95: 'number',
+  p99: 'number',
 };
 export type Field = keyof typeof FIELDS | string | '';
 
@@ -151,12 +153,14 @@ export const TRACING_FIELDS = [
   'sum',
   'transaction.duration',
   'transaction.op',
+  'apdex',
+  'p99',
   'p95',
   'p75',
 ];
 
 // list of fields that are duration-like
-export const DURATION_FIELDS = ['transaction.duration', 'p95', 'p75'];
+export const DURATION_FIELDS = ['transaction.duration', 'p99', 'p95', 'p75'];
 // acceptable list of aggregate functions, that, when applied to any of the duration-like
 // fields in DURATION_FIELDS, the resulting expression is still duration-like
 export const DURATION_AGGREGATION_WHITELIST = ['min', 'max', 'sum', 'avg'];
diff --git a/src/sentry/utils/snuba.py b/src/sentry/utils/snuba.py
index 971ba911aa..7bef52114e 100644
--- a/src/sentry/utils/snuba.py
+++ b/src/sentry/utils/snuba.py
@@ -320,7 +320,7 @@ def detect_dataset(query_args, aliased_conditions=False):
             if is_transaction:
                 return Dataset.Transactions
         # Check for transaction only field aliases
-        if isinstance(field[2], six.string_types) and field[2] in ("p95", "p75"):
+        if isinstance(field[2], six.string_types) and field[2] in ("apdex", "p95", "p75", "p99"):
             return Dataset.Transactions
 
     for field in query_args.get("groupby") or []:
diff --git a/tests/sentry/api/test_event_search.py b/tests/sentry/api/test_event_search.py
index 17f687f945..c60ca8b22b 100644
--- a/tests/sentry/api/test_event_search.py
+++ b/tests/sentry/api/test_event_search.py
@@ -1016,13 +1016,15 @@ class ResolveFieldListTest(unittest.TestCase):
         assert result["groupby"] == ["title"]
 
     def test_field_alias_duration_expansion(self):
-        fields = ["avg(transaction.duration)", "p95", "p75"]
+        fields = ["avg(transaction.duration)", "apdex", "p75", "p95", "p99"]
         result = resolve_field_list(fields, {})
         assert result["selected_columns"] == []
         assert result["aggregations"] == [
             ["avg", "transaction.duration", "avg_transaction_duration"],
-            ["quantileTiming(0.95)(duration)", "", "p95"],
+            ["apdex(duration, 300)", "", "apdex"],
             ["quantileTiming(0.75)(duration)", "", "p75"],
+            ["quantileTiming(0.95)(duration)", "", "p95"],
+            ["quantileTiming(0.99)(duration)", "", "p99"],
             ["argMax", ["id", "timestamp"], "latest_event"],
             ["argMax", ["project_id", "timestamp"], "projectid"],
         ]
