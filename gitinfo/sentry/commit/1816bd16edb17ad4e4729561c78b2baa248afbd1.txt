commit 1816bd16edb17ad4e4729561c78b2baa248afbd1
Author: David Cramer <dcramer@gmail.com>
Date:   Thu Jun 11 11:04:20 2015 -0700

    Send various warnings/messages to stderr

diff --git a/src/sentry/utils/runner.py b/src/sentry/utils/runner.py
index f7bfc1b2ea..b4ed101be1 100644
--- a/src/sentry/utils/runner.py
+++ b/src/sentry/utils/runner.py
@@ -15,6 +15,8 @@ import os
 import pkg_resources
 import warnings
 
+import sys
+
 USE_GEVENT = os.environ.get('USE_GEVENT') == '1'
 
 KEY_LENGTH = 40
@@ -317,6 +319,14 @@ def fix_south(settings):
     }
 
 
+def show_big_error(message):
+    sys.stderr.write('\n')
+    sys.stderr.write('\033[91m!! %s !!\033[0m\n' % ('!' * min(len(message), 80),))
+    sys.stderr.write('\033[91m!! %s !!\033[0m\n' % message)
+    sys.stderr.write('\033[91m!! %s !!\033[0m\n' % ('!' * min(len(message), 80),))
+    sys.stderr.write('\n')
+
+
 def apply_legacy_settings(config):
     settings = config['settings']
 
@@ -327,37 +337,21 @@ def apply_legacy_settings(config):
         settings.CELERY_ALWAYS_EAGER = (not settings.SENTRY_USE_QUEUE)
 
     if not settings.SENTRY_ADMIN_EMAIL:
-        print('')
-        print('\033[91m!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\033[0m')
-        print('\033[91m!! SENTRY_ADMIN_EMAIL is not configured !!\033[0m')
-        print('\033[91m!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\033[0m')
-        print('')
+        show_big_error('SENTRY_ADMIN_EMAIL is not configured')
     elif not isinstance(settings.SENTRY_ADMIN_EMAIL, basestring):
-        print('')
-        print('\033[91m!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\033[0m')
-        print('\033[91m!! SENTRY_ADMIN_EMAIL must be a string !!\033[0m')
-        print('\033[91m!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\033[0m')
-        print('')
+        show_big_error('SENTRY_ADMIN_EMAIL must be a string')
 
     if settings.SENTRY_URL_PREFIX in ('', 'http://sentry.example.com') and not settings.DEBUG:
         # Maybe also point to a piece of documentation for more information?
         # This directly coincides with users getting the awkward
         # `ALLOWED_HOSTS` exception.
-        print('')
-        print('\033[91m!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\033[0m')
-        print('\033[91m!! SENTRY_URL_PREFIX is not configured !!\033[0m')
-        print('\033[91m!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\033[0m')
-        print('')
+        show_big_error('SENTRY_URL_PREFIX is not configured')
         # Set `ALLOWED_HOSTS` to the catch-all so it works
         settings.ALLOWED_HOSTS = ['*']
 
     if settings.TIME_ZONE != 'UTC':
         # non-UTC timezones are not supported
-        print('')
-        print('\033[91m!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\033[0m')
-        print('\033[91m!! TIME_ZONE should be set to UTC !!\033[0m')
-        print('\033[91m!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\033[0m')
-        print('')
+        show_big_error('TIME_ZONE should be set to UTC')
 
     # Set ALLOWED_HOSTS if it's not already available
     if not settings.ALLOWED_HOSTS:
@@ -423,7 +417,7 @@ def configure(config_path=None):
 
 def main():
     if USE_GEVENT:
-        print("Configuring Sentry with gevent bindings")
+        sys.stderr.write("Configuring Sentry with gevent bindings\n")
         initialize_gevent()
 
     run_app(
