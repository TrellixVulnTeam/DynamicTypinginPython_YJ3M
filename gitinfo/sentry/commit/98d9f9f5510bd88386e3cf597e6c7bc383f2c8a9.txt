commit 98d9f9f5510bd88386e3cf597e6c7bc383f2c8a9
Author: Priscila Oliveira <priscilawebdev@gmail.com>
Date:   Fri Feb 21 10:05:00 2020 +0100

    ref(ui): Added tooltip - Datascrubbers v2 - Part 10 (#17083)

diff --git a/src/sentry/static/sentry/app/components/deviceName.tsx b/src/sentry/static/sentry/app/components/deviceName.tsx
index 64ff6a56ea..6b5915b786 100644
--- a/src/sentry/static/sentry/app/components/deviceName.tsx
+++ b/src/sentry/static/sentry/app/components/deviceName.tsx
@@ -1,5 +1,6 @@
 import PropTypes from 'prop-types';
 import React from 'react';
+
 import {IOSDeviceList} from 'app/types/iOSDeviceList';
 
 export function deviceNameMapper(model: string, iOSDeviceList): string {
@@ -17,7 +18,8 @@ export async function loadDeviceListModule() {
 }
 
 type Props = {
-  children?: string;
+  value: string;
+  children?: (name: string) => React.ReactNode;
 };
 
 type State = {
@@ -29,7 +31,8 @@ type State = {
  */
 export default class DeviceName extends React.Component<Props, State> {
   static propTypes = {
-    children: PropTypes.string,
+    value: PropTypes.string,
+    children: PropTypes.func,
   };
 
   constructor(props) {
@@ -63,22 +66,19 @@ export default class DeviceName extends React.Component<Props, State> {
   }
 
   render() {
-    const {children} = this.props;
+    const {value, children} = this.props;
     const {iOSDeviceList} = this.state;
 
-    // Children can be undefined, need to return null or else react throws
-    if (!children) {
-      return null;
-    }
-
     // If library has not loaded yet, then just render the raw model string, better than empty
     if (!iOSDeviceList) {
-      return children;
+      return value;
     }
 
+    const deviceName = deviceNameMapper(value, iOSDeviceList);
+
     return (
       <span data-test-id="loaded-device-name">
-        {deviceNameMapper(children, iOSDeviceList)}
+        {children ? children(deviceName) : deviceName}
       </span>
     );
   }
diff --git a/src/sentry/static/sentry/app/components/events/contextSummary.jsx b/src/sentry/static/sentry/app/components/events/contextSummary.jsx
index 550fa1b0eb..63f271e0d2 100644
--- a/src/sentry/static/sentry/app/components/events/contextSummary.jsx
+++ b/src/sentry/static/sentry/app/components/events/contextSummary.jsx
@@ -188,9 +188,7 @@ class DeviceSummary extends React.Component {
     return (
       <div className={`context-item ${className}`}>
         <span className="context-item-icon" />
-        <h3>
-          {data.model ? <DeviceName>{data.model}</DeviceName> : t('Unknown Device')}
-        </h3>
+        <h3>{data.model ? <DeviceName value={data.model} /> : t('Unknown Device')}</h3>
         {subTitle}
       </div>
     );
diff --git a/src/sentry/static/sentry/app/components/events/contexts/device/getDeviceKnownDataDetails.tsx b/src/sentry/static/sentry/app/components/events/contexts/device/getDeviceKnownDataDetails.tsx
index 70b2232970..c5107520d0 100644
--- a/src/sentry/static/sentry/app/components/events/contexts/device/getDeviceKnownDataDetails.tsx
+++ b/src/sentry/static/sentry/app/components/events/contexts/device/getDeviceKnownDataDetails.tsx
@@ -30,9 +30,9 @@ function getDeviceKnownDataDetails(data: DeviceData, type: DeviceKnownDataType):
         subject: t('Model'),
         value:
           typeof data.model === 'string' ? (
-            <DeviceName>
-              {`${data.model} ${data.model_id ? `(${data.model_id})` : ''}`}
-            </DeviceName>
+            <DeviceName
+              value={`${data.model} ${data.model_id ? `(${data.model_id})` : ''}`}
+            />
           ) : (
             undefined
           ),
diff --git a/src/sentry/static/sentry/app/components/events/eventEntries.jsx b/src/sentry/static/sentry/app/components/events/eventEntries.jsx
index 7efc4fa8f1..94c4d147fc 100644
--- a/src/sentry/static/sentry/app/components/events/eventEntries.jsx
+++ b/src/sentry/static/sentry/app/components/events/eventEntries.jsx
@@ -22,7 +22,7 @@ import EventGroupingInfo from 'app/components/events/groupingInfo';
 import EventPackageData from 'app/components/events/packageData';
 import EventSdk from 'app/components/events/eventSdk';
 import EventSdkUpdates from 'app/components/events/sdkUpdates';
-import EventTags from 'app/components/events/eventTags';
+import EventTags from 'app/components/events/eventTags/eventTags';
 import EventUserFeedback from 'app/components/events/userFeedback';
 import ExceptionInterface from 'app/components/events/interfaces/exception';
 import GenericInterface from 'app/components/events/interfaces/generic';
diff --git a/src/sentry/static/sentry/app/components/events/eventTags.tsx b/src/sentry/static/sentry/app/components/events/eventTags.tsx
deleted file mode 100644
index 9e9322a989..0000000000
--- a/src/sentry/static/sentry/app/components/events/eventTags.tsx
+++ /dev/null
@@ -1,110 +0,0 @@
-import React from 'react';
-import styled from '@emotion/styled';
-import {Link} from 'react-router';
-import isEmpty from 'lodash/isEmpty';
-import queryString from 'query-string';
-
-import {Location} from 'history';
-import {Event, EventTag} from 'app/types';
-
-import EventDataSection from 'app/components/events/eventDataSection';
-import DeviceName from 'app/components/deviceName';
-import {isUrl, generateQueryWithTag} from 'app/utils';
-import {t} from 'app/locale';
-import GuideAnchor from 'app/components/assistant/guideAnchor';
-import Pills from 'app/components/pills';
-import Pill from 'app/components/pill';
-import VersionHoverCard from 'app/components/versionHoverCard';
-import InlineSvg from 'app/components/inlineSvg';
-import Version from 'app/components/version';
-import space from 'app/styles/space';
-
-type DefaultProps = {
-  hideGuide: boolean;
-};
-
-type Props = DefaultProps & {
-  event: Event;
-  orgId: string;
-  projectId: string;
-  location: Location;
-};
-
-class EventTags extends React.Component<Props> {
-  renderPill(tag: EventTag, streamPath: string, releasesPath: string) {
-    const {orgId, projectId, location} = this.props;
-    const query = generateQueryWithTag(location.query, tag);
-
-    const locationSearch = `?${queryString.stringify(query)}`;
-
-    return (
-      <Pill key={tag.key} name={tag.key} value={tag.value}>
-        <Link
-          to={{
-            pathname: streamPath,
-            search: locationSearch,
-          }}
-        >
-          {tag.key === 'release' ? (
-            <Version version={tag.value} anchor={false} tooltipRawVersion truncate />
-          ) : (
-            <DeviceName>{tag.value}</DeviceName>
-          )}
-        </Link>
-        {isUrl(tag.value) && (
-          <a href={tag.value} className="external-icon">
-            <em className="icon-open" />
-          </a>
-        )}
-        {tag.key === 'release' && (
-          <VersionHoverCard
-            containerClassName="pill-icon"
-            version={tag.value}
-            orgId={orgId}
-            projectId={projectId}
-          >
-            <Link
-              to={{
-                pathname: `${releasesPath}${tag.value}/`,
-                search: locationSearch,
-              }}
-            >
-              <InlineSvg src="icon-circle-info" size="14px" />
-            </Link>
-          </VersionHoverCard>
-        )}
-      </Pill>
-    );
-  }
-
-  render() {
-    const {event, orgId} = this.props;
-    const {tags} = event;
-
-    if (isEmpty(tags)) {
-      return null;
-    }
-
-    const streamPath = `/organizations/${orgId}/issues/`;
-    const releasesPath = `/organizations/${orgId}/releases/`;
-    const title = (
-      <GuideAnchor target="tags" position="top">
-        <h3>{t('Tags')}</h3>
-      </GuideAnchor>
-    );
-
-    return (
-      <EventDataSection title={title} wrapTitle={false} type="tags">
-        <StyledPills>
-          {tags.map(tag => this.renderPill(tag, streamPath, releasesPath))}
-        </StyledPills>
-      </EventDataSection>
-    );
-  }
-}
-
-const StyledPills = styled(Pills)`
-  margin-bottom: ${space(3)};
-`;
-
-export default EventTags;
diff --git a/src/sentry/static/sentry/app/components/events/eventTags/eventTags.tsx b/src/sentry/static/sentry/app/components/events/eventTags/eventTags.tsx
new file mode 100644
index 0000000000..138ee1e658
--- /dev/null
+++ b/src/sentry/static/sentry/app/components/events/eventTags/eventTags.tsx
@@ -0,0 +1,55 @@
+import React from 'react';
+import isEmpty from 'lodash/isEmpty';
+import {Location} from 'history';
+
+import styled from '@emotion/styled';
+import {Event} from 'app/types';
+import EventDataSection from 'app/components/events/eventDataSection';
+import {generateQueryWithTag} from 'app/utils';
+import {t} from 'app/locale';
+import Pills from 'app/components/pills';
+import {getMeta} from 'app/components/events/meta/metaProxy';
+import space from 'app/styles/space';
+
+import EventTagsPill from './eventTagsPill';
+
+type Props = {
+  event: Event;
+  orgId: string;
+  projectId: string;
+  location: Location;
+};
+
+const EventTags = ({event: {tags}, orgId, projectId, location}: Props) => {
+  if (isEmpty(tags)) {
+    return null;
+  }
+
+  const streamPath = `/organizations/${orgId}/issues/`;
+  const releasesPath = `/organizations/${orgId}/releases/`;
+
+  return (
+    <StyledEventDataSection title={t('Tags')} type="tags">
+      <Pills>
+        {tags.map(tag => (
+          <EventTagsPill
+            key={tag.key}
+            tag={tag}
+            projectId={projectId}
+            orgId={orgId}
+            query={generateQueryWithTag(location.query, tag)}
+            streamPath={streamPath}
+            releasesPath={releasesPath}
+            meta={getMeta(tag, 'value')}
+          />
+        ))}
+      </Pills>
+    </StyledEventDataSection>
+  );
+};
+
+export default EventTags;
+
+const StyledEventDataSection = styled(EventDataSection)`
+  padding-bottom: ${space(3)};
+`;
diff --git a/src/sentry/static/sentry/app/components/events/eventTags/eventTagsPill.tsx b/src/sentry/static/sentry/app/components/events/eventTags/eventTagsPill.tsx
new file mode 100644
index 0000000000..4ceff1f689
--- /dev/null
+++ b/src/sentry/static/sentry/app/components/events/eventTags/eventTagsPill.tsx
@@ -0,0 +1,90 @@
+import React from 'react';
+import {Link} from 'react-router';
+import queryString from 'query-string';
+import {Query} from 'history';
+
+import {EventTag, Meta} from 'app/types';
+import AnnotatedText from 'app/components/events/meta/annotatedText';
+import DeviceName from 'app/components/deviceName';
+import {isUrl} from 'app/utils';
+import Pill from 'app/components/pill';
+import VersionHoverCard from 'app/components/versionHoverCard';
+import InlineSvg from 'app/components/inlineSvg';
+import Version from 'app/components/version';
+import {IconOpen} from 'app/icons/iconOpen';
+
+type Props = {
+  tag: EventTag;
+  streamPath: string;
+  releasesPath: string;
+  query: Query;
+  orgId: string;
+  projectId: string;
+  meta: Meta;
+};
+
+const EventTagsPill = ({
+  tag,
+  query,
+  orgId,
+  projectId,
+  streamPath,
+  releasesPath,
+  meta,
+}: Props) => {
+  const locationSearch = `?${queryString.stringify(query)}`;
+  const isRelease = tag.key === 'release';
+  return (
+    <Pill key={tag.key} name={tag.key} value={tag.value}>
+      <Link
+        to={{
+          pathname: streamPath,
+          search: locationSearch,
+        }}
+      >
+        {isRelease ? (
+          <Version version={tag.value} anchor={false} tooltipRawVersion truncate />
+        ) : (
+          <DeviceName value={tag.value}>
+            {deviceName =>
+              meta ? (
+                <AnnotatedText
+                  value={deviceName}
+                  chunks={meta.chunks}
+                  remarks={meta.rem}
+                  errors={meta.err}
+                />
+              ) : (
+                deviceName
+              )
+            }
+          </DeviceName>
+        )}
+      </Link>
+      {isUrl(tag.value) && (
+        <a href={tag.value} className="external-icon">
+          <IconOpen size="xs" />
+        </a>
+      )}
+      {isRelease && (
+        <VersionHoverCard
+          containerClassName="pill-icon"
+          version={tag.value}
+          orgId={orgId}
+          projectId={projectId}
+        >
+          <Link
+            to={{
+              pathname: `${releasesPath}${tag.value}/`,
+              search: locationSearch,
+            }}
+          >
+            <InlineSvg src="icon-circle-info" size="14px" />
+          </Link>
+        </VersionHoverCard>
+      )}
+    </Pill>
+  );
+};
+
+export default EventTagsPill;
diff --git a/src/sentry/static/sentry/app/components/eventsTable/eventsTableRow.jsx b/src/sentry/static/sentry/app/components/eventsTable/eventsTableRow.jsx
index 2157f9a02a..8a5f8ef59e 100644
--- a/src/sentry/static/sentry/app/components/eventsTable/eventsTableRow.jsx
+++ b/src/sentry/static/sentry/app/components/eventsTable/eventsTableRow.jsx
@@ -90,7 +90,7 @@ class EventsTableRow extends React.Component {
             <td key={tag.key}>
               <div>
                 {tag.key === 'device' ? (
-                  <DeviceName>{tagMap[tag.key]}</DeviceName>
+                  <DeviceName value={tagMap[tag.key]} />
                 ) : (
                   tagMap[tag.key]
                 )}
diff --git a/src/sentry/static/sentry/app/utils/formatters.tsx b/src/sentry/static/sentry/app/utils/formatters.tsx
index 1d763da447..7ddd50a873 100644
--- a/src/sentry/static/sentry/app/utils/formatters.tsx
+++ b/src/sentry/static/sentry/app/utils/formatters.tsx
@@ -26,7 +26,7 @@ export const formatVersion = (rawVersion: string, withPackage: boolean | undefin
     return `${parsedVersion.describe()}${
       withPackage && parsedVersion.package ? `, ${parsedVersion.package}` : ''
     }`;
-  } catch (error) {
+  } catch {
     return rawVersion;
   }
 };
diff --git a/src/sentry/static/sentry/app/views/organizationGroupDetails/groupTagValues.tsx b/src/sentry/static/sentry/app/views/organizationGroupDetails/groupTagValues.tsx
index 7a36550717..00a4ec496f 100644
--- a/src/sentry/static/sentry/app/views/organizationGroupDetails/groupTagValues.tsx
+++ b/src/sentry/static/sentry/app/views/organizationGroupDetails/groupTagValues.tsx
@@ -2,8 +2,8 @@ import sortBy from 'lodash/sortBy';
 import property from 'lodash/property';
 import React from 'react';
 import {RouteComponentProps} from 'react-router/lib/Router';
-import styled from '@emotion/styled';
 
+import styled from '@emotion/styled';
 import {isUrl, percent} from 'app/utils';
 import {t} from 'app/locale';
 import AsyncComponent from 'app/components/asyncComponent';
@@ -84,7 +84,7 @@ class GroupTagValues extends AsyncComponent<
                   <span className="m-left">{this.getUserDisplayName(tagValue)}</span>
                 </React.Fragment>
               ) : (
-                <DeviceName>{tagValue.name}</DeviceName>
+                <DeviceName value={tagValue.name} />
               )}
             </GlobalSelectionLink>
             {tagValue.email && (
diff --git a/src/sentry/static/sentry/app/views/organizationGroupDetails/groupTags.jsx b/src/sentry/static/sentry/app/views/organizationGroupDetails/groupTags.jsx
index 64d230e5be..783b6e580c 100644
--- a/src/sentry/static/sentry/app/views/organizationGroupDetails/groupTags.jsx
+++ b/src/sentry/static/sentry/app/views/organizationGroupDetails/groupTags.jsx
@@ -100,7 +100,7 @@ class GroupTags extends React.Component {
               >
                 <span className="tag-bar-background" style={{width: pct + '%'}} />
                 <span className="tag-bar-label">
-                  <DeviceName>{tagValue.name}</DeviceName>
+                  <DeviceName value={tagValue.name} />
                 </span>
                 <span className="tag-bar-count">
                   <Count value={tagValue.count} />
diff --git a/src/sentry/static/sentry/app/views/settings/account/accountSecurity/components/u2fEnrolledDetails.jsx b/src/sentry/static/sentry/app/views/settings/account/accountSecurity/components/u2fEnrolledDetails.jsx
index 1848124964..ea1e52153b 100644
--- a/src/sentry/static/sentry/app/views/settings/account/accountSecurity/components/u2fEnrolledDetails.jsx
+++ b/src/sentry/static/sentry/app/views/settings/account/accountSecurity/components/u2fEnrolledDetails.jsx
@@ -52,7 +52,7 @@ class U2fEnrolledDetails extends React.Component {
             devices.map(device => (
               <DevicePanelItem key={device.name}>
                 <DeviceInformation>
-                  <DeviceName>{device.name}</DeviceName>
+                  <DeviceName value={device.name} />
                   <FadedDateTime date={device.timestamp} />
                 </DeviceInformation>
 
