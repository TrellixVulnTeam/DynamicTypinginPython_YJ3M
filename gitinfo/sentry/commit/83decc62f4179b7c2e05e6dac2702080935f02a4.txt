commit 83decc62f4179b7c2e05e6dac2702080935f02a4
Author: Armin Ronacher <armin.ronacher@active-4.com>
Date:   Sun Jul 3 15:01:28 2016 +0300

    Use image_addr as key in frames instead of object_addr which is confusing.

diff --git a/src/sentry/interfaces/stacktrace.py b/src/sentry/interfaces/stacktrace.py
index 9e30255c12..0e2274348b 100644
--- a/src/sentry/interfaces/stacktrace.py
+++ b/src/sentry/interfaces/stacktrace.py
@@ -288,7 +288,7 @@ class Frame(Interface):
             'module': trim(module, 256),
             'function': trim(function, 256),
             'package': trim(data.get('package'), 256),
-            'object_addr': trim(data.get('object_addr'), 16),
+            'image_addr': trim(data.get('image_addr'), 16),
             'symbol_addr': trim(data.get('symbol_addr'), 16),
             'instruction_addr': trim(data.get('instruction_addr'), 16),
             'instruction_offset': instruction_offset,
diff --git a/src/sentry/lang/native/plugin.py b/src/sentry/lang/native/plugin.py
index 1144a5065d..a3e8ad98fd 100644
--- a/src/sentry/lang/native/plugin.py
+++ b/src/sentry/lang/native/plugin.py
@@ -388,18 +388,23 @@ def resolve_frame_symbols(data):
     with sym:
         for stacktrace in stacktraces:
             for idx, frame in enumerate(stacktrace['frames']):
-                if 'object_addr' not in frame or \
+                if 'image_addr' not in frame or \
                    'instruction_addr' not in frame or \
                    'symbol_addr' not in frame:
                     continue
                 try:
-                    sfrm = sym.symbolize_frame(frame, sdk_info,
-                                               report_error=report_error)
+                    sfrm = sym.symbolize_frame({
+                        'object_name': frame.get('package'),
+                        'object_addr': frame['image_addr'],
+                        'instruction_addr': parse_addr(frame['instruction_addr']),
+                        'symbol_addr': parse_addr(frame['symbol_addr']),
+                    }, sdk_info, report_error=report_error)
                     if not sfrm:
                         continue
-                    frame['function'] = sfrm['symbol_name'] or '<unknown>'
-                    frame['abs_path'] = sfrm['filename']
-                    frame['filename'] = posixpath.basename(sfrm['filename'])
+                    frame['function'] = sfrm.get('symbol_name') or '<unknown>'
+                    frame['abs_path'] = sfrm.get('filename') or None
+                    if frame['abs_path']:
+                        frame['filename'] = posixpath.basename(frame['abs_path'])
                     if sfrm.get('line') is not None:
                         frame['lineno'] = sfrm['line']
                     else:
diff --git a/src/sentry/lang/native/symbolizer.py b/src/sentry/lang/native/symbolizer.py
index c7dbebad69..5f9c464c49 100644
--- a/src/sentry/lang/native/symbolizer.py
+++ b/src/sentry/lang/native/symbolizer.py
@@ -71,7 +71,7 @@ class Symbolizer(object):
         if img is not None:
             # Only set the object name if we "upgrade" it from a filename to
             # full path.
-            if 'object_name' not in rv or \
+            if rv.get('object_name') is None or \
                ('/' not in rv['object_name'] and '/' in img['name']):
                 rv['object_name'] = img['name']
             rv['uuid'] = img['uuid']
diff --git a/src/sentry/lang/native/utils.py b/src/sentry/lang/native/utils.py
index 9aad08a9e3..3faae0b791 100644
--- a/src/sentry/lang/native/utils.py
+++ b/src/sentry/lang/native/utils.py
@@ -35,8 +35,8 @@ def find_stacktrace_referenced_images(debug_images, stacktraces):
     to_load = set()
     for stacktrace in stacktraces:
         for frame in stacktrace['frames']:
-            if 'object_addr' in frame:
-                img_uuid = image_map.get(frame['object_addr'])
+            if 'image_addr' in frame:
+                img_uuid = image_map.get(frame['image_addr'])
                 if img_uuid is not None:
                     to_load.add(img_uuid)
 
