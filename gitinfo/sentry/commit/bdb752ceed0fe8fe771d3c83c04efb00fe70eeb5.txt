commit bdb752ceed0fe8fe771d3c83c04efb00fe70eeb5
Author: Billy Vong <billyvg@users.noreply.github.com>
Date:   Tue Jan 22 14:36:40 2019 -0800

    ref(events-stream): Remove "EventsContext" (#11613)
    
    This became obsolete with global selection store

diff --git a/src/sentry/static/sentry/app/views/organizationEvents/eventsChart.jsx b/src/sentry/static/sentry/app/views/organizationEvents/eventsChart.jsx
index 0737f23039..d288b534c3 100644
--- a/src/sentry/static/sentry/app/views/organizationEvents/eventsChart.jsx
+++ b/src/sentry/static/sentry/app/views/organizationEvents/eventsChart.jsx
@@ -3,11 +3,12 @@ import React from 'react';
 
 import {t} from 'app/locale';
 import ChartZoom from 'app/components/charts/chartZoom';
-import ReleaseSeries from 'app/components/charts/releaseSeries';
 import LineChart from 'app/components/charts/lineChart';
+import ReleaseSeries from 'app/components/charts/releaseSeries';
+import SentryTypes from 'app/sentryTypes';
 import withApi from 'app/utils/withApi';
+import withGlobalSelection from 'app/utils/withGlobalSelection';
 
-import EventsContext from './utils/eventsContext';
 import EventsRequest from './utils/eventsRequest';
 
 const DEFAULT_GET_CATEGORY = () => t('Events');
@@ -66,23 +67,26 @@ class EventsChart extends React.Component {
   }
 }
 
-const EventsChartContainer = withApi(
-  class EventsChartWithParams extends React.Component {
-    render() {
-      return (
-        <EventsContext.Consumer>
-          {context => (
-            <EventsChart
-              {...context}
-              project={context.project || []}
-              environment={context.environment || []}
-              {...this.props}
-            />
-          )}
-        </EventsContext.Consumer>
-      );
+const EventsChartContainer = withGlobalSelection(
+  withApi(
+    class EventsChartWithParams extends React.Component {
+      static propTypes = {
+        selection: SentryTypes.GlobalSelection,
+      };
+
+      render() {
+        const {datetime, projects, environments} = this.props.selection;
+        return (
+          <EventsChart
+            {...datetime}
+            project={projects || []}
+            environment={environments || []}
+            {...this.props}
+          />
+        );
+      }
     }
-  }
+  )
 );
 
 export default EventsChartContainer;
diff --git a/src/sentry/static/sentry/app/views/organizationEvents/eventsTable.jsx b/src/sentry/static/sentry/app/views/organizationEvents/eventsTable.jsx
index 508630813b..ac4a35335f 100644
--- a/src/sentry/static/sentry/app/views/organizationEvents/eventsTable.jsx
+++ b/src/sentry/static/sentry/app/views/organizationEvents/eventsTable.jsx
@@ -13,8 +13,6 @@ import SentryTypes from 'app/sentryTypes';
 import overflowEllipsis from 'app/styles/overflowEllipsis';
 import space from 'app/styles/space';
 
-import EventsContext from './utils/eventsContext';
-
 class EventsTableBody extends React.PureComponent {
   static propTypes = {
     events: PropTypes.array,
@@ -156,16 +154,7 @@ class EventsTable extends React.Component {
   }
 }
 
-class EventsTableContainer extends React.Component {
-  render() {
-    return (
-      <EventsContext.Consumer>
-        {context => <EventsTable {...context} {...this.props} />}
-      </EventsContext.Consumer>
-    );
-  }
-}
-export default withRouter(EventsTableContainer);
+export default withRouter(EventsTable);
 export {EventsTable};
 
 const StyledPanelBody = styled(PanelBody)`
diff --git a/src/sentry/static/sentry/app/views/organizationEvents/index.jsx b/src/sentry/static/sentry/app/views/organizationEvents/index.jsx
index 2d883f306c..85194a5aee 100644
--- a/src/sentry/static/sentry/app/views/organizationEvents/index.jsx
+++ b/src/sentry/static/sentry/app/views/organizationEvents/index.jsx
@@ -14,13 +14,11 @@ import withGlobalSelection from 'app/utils/withGlobalSelection';
 import withOrganization from 'app/utils/withOrganization';
 import {PageContent, PageHeader} from 'app/styles/organization';
 
-import EventsContext from './utils/eventsContext';
 import SearchBar from './searchBar';
 
 class OrganizationEventsContainer extends React.Component {
   static propTypes = {
     organization: SentryTypes.Organization,
-    selection: SentryTypes.GlobalSelection,
     router: PropTypes.object,
   };
 
@@ -43,40 +41,32 @@ class OrganizationEventsContainer extends React.Component {
   };
 
   render() {
-    const {organization, location, selection, children} = this.props;
+    const {organization, location, children} = this.props;
 
     return (
-      <EventsContext.Provider
-        value={{
-          project: selection.projects,
-          environment: selection.environments,
-          ...selection.datetime,
-        }}
-      >
-        <Feature features={['global-views']} renderDisabled>
-          <GlobalSelectionHeader
-            organization={organization}
-            resetParamsOnChange={['zoom', 'cursor']}
-          />
-          <PageContent>
-            <Body>
-              <PageHeader>
-                <HeaderTitle>
-                  {t('Events')} <BetaTag />
-                </HeaderTitle>
-                <StyledSearchBar
-                  organization={organization}
-                  query={(location.query && location.query.query) || ''}
-                  placeholder={t('Search for events, users, tags, and everything else.')}
-                  onSearch={this.handleSearch}
-                />
-              </PageHeader>
+      <Feature features={['global-views']} renderDisabled>
+        <GlobalSelectionHeader
+          organization={organization}
+          resetParamsOnChange={['zoom', 'cursor']}
+        />
+        <PageContent>
+          <Body>
+            <PageHeader>
+              <HeaderTitle>
+                {t('Events')} <BetaTag />
+              </HeaderTitle>
+              <StyledSearchBar
+                organization={organization}
+                query={(location.query && location.query.query) || ''}
+                placeholder={t('Search for events, users, tags, and everything else.')}
+                onSearch={this.handleSearch}
+              />
+            </PageHeader>
 
-              {children}
-            </Body>
-          </PageContent>
-        </Feature>
-      </EventsContext.Provider>
+            {children}
+          </Body>
+        </PageContent>
+      </Feature>
     );
   }
 }
diff --git a/src/sentry/static/sentry/app/views/organizationEvents/utils/eventsContext.jsx b/src/sentry/static/sentry/app/views/organizationEvents/utils/eventsContext.jsx
deleted file mode 100644
index 870b66c9a3..0000000000
--- a/src/sentry/static/sentry/app/views/organizationEvents/utils/eventsContext.jsx
+++ /dev/null
@@ -1,15 +0,0 @@
-import React from 'react';
-
-import {DEFAULT_STATS_PERIOD, DEFAULT_USE_UTC} from 'app/constants';
-
-const EventsContext = React.createContext({
-  query: null,
-  project: [],
-  environment: [],
-  period: DEFAULT_STATS_PERIOD,
-  start: null,
-  end: null,
-  utc: DEFAULT_USE_UTC,
-});
-
-export default EventsContext;
