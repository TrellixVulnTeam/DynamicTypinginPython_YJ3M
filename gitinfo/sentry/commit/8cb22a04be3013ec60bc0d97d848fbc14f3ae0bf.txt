commit 8cb22a04be3013ec60bc0d97d848fbc14f3ae0bf
Author: William Mak <william@wmak.io>
Date:   Wed Dec 4 13:31:53 2019 -0500

    ref(django-1.10): Defaulting on delete to CASCADE (#15860)
    
    - `on_delete` will become a required field on foreignkeys starting in
      django 1.10, so to maintain current behaviour this defaults it to
      models.CASCADE everywhere.
    - And since FlexibleForeignKey defaults `on_delete=models.CASCADE` for
      consistency we have a similar model for OneToOne fields.
    - Using `migrations.SeparateDatabaseAndState cause we don't actually
      want to drop the one to one constraint to switch to our custom field.

diff --git a/src/sentry/db/models/fields/__init__.py b/src/sentry/db/models/fields/__init__.py
index ad55967ca4..8c965c2ef5 100644
--- a/src/sentry/db/models/fields/__init__.py
+++ b/src/sentry/db/models/fields/__init__.py
@@ -10,3 +10,4 @@ from .gzippeddict import *  # NOQA
 from .node import *  # NOQA
 from .pickle import *  # NOQA
 from .uuid import *  # NOQA
+from .onetoone import *  # NOQA
diff --git a/src/sentry/db/models/fields/foreignkey.py b/src/sentry/db/models/fields/foreignkey.py
index 3e411286b8..3f3e0924cc 100644
--- a/src/sentry/db/models/fields/foreignkey.py
+++ b/src/sentry/db/models/fields/foreignkey.py
@@ -1,11 +1,16 @@
 from __future__ import absolute_import
 
+from django.db import models
 from django.db.models import ForeignKey
 
 __all__ = ("FlexibleForeignKey",)
 
 
 class FlexibleForeignKey(ForeignKey):
+    def __init__(self, *args, **kwargs):
+        kwargs.setdefault("on_delete", models.CASCADE)
+        return super(FlexibleForeignKey, self).__init__(*args, **kwargs)
+
     def db_type(self, connection):
         # This is required to support BigAutoField (or anything similar)
         rel_field = self.target_field
diff --git a/src/sentry/db/models/fields/onetoone.py b/src/sentry/db/models/fields/onetoone.py
new file mode 100644
index 0000000000..164ceab4c5
--- /dev/null
+++ b/src/sentry/db/models/fields/onetoone.py
@@ -0,0 +1,12 @@
+from __future__ import absolute_import
+
+from django.db import models
+from django.db.models import OneToOneField
+
+__all__ = ("OneToOneCascadeDeletes",)
+
+
+class OneToOneCascadeDeletes(OneToOneField):
+    def __init__(self, *args, **kwargs):
+        kwargs.setdefault("on_delete", models.CASCADE)
+        return super(OneToOneCascadeDeletes, self).__init__(*args, **kwargs)
diff --git a/src/sentry/incidents/models.py b/src/sentry/incidents/models.py
index 1dd46302eb..9795212668 100644
--- a/src/sentry/incidents/models.py
+++ b/src/sentry/incidents/models.py
@@ -7,7 +7,7 @@ from django.db import IntegrityError, models, transaction
 from django.utils import timezone
 from enum import Enum
 
-from sentry.db.models import FlexibleForeignKey, Model, UUIDField
+from sentry.db.models import FlexibleForeignKey, Model, UUIDField, OneToOneCascadeDeletes
 from sentry.db.models import ArrayField, sane_repr
 from sentry.db.models.manager import BaseManager
 from sentry.models import Team, User
@@ -141,7 +141,7 @@ class Incident(Model):
 class IncidentSnapshot(Model):
     __core__ = True
 
-    incident = models.OneToOneField("sentry.Incident")
+    incident = OneToOneCascadeDeletes("sentry.Incident")
     event_stats_snapshot = FlexibleForeignKey("sentry.TimeSeriesSnapshot")
     unique_users = models.IntegerField()
     total_events = models.IntegerField()
diff --git a/src/sentry/migrations/0021_auto_20191203_1803.py b/src/sentry/migrations/0021_auto_20191203_1803.py
new file mode 100644
index 0000000000..5550472a7d
--- /dev/null
+++ b/src/sentry/migrations/0021_auto_20191203_1803.py
@@ -0,0 +1,41 @@
+# -*- coding: utf-8 -*-
+# Generated by Django 1.9.13 on 2019-12-03 18:03
+from __future__ import unicode_literals
+
+from django.db import migrations
+import django.db.models.deletion
+import sentry.db.models.fields.onetoone
+
+
+class Migration(migrations.Migration):
+    # This flag is used to mark that a migration shouldn't be automatically run in
+    # production. We set this to True for operations that we think are risky and want
+    # someone from ops to run manually and monitor.
+    # General advice is that if in doubt, mark your migration as `is_dangerous`.
+    # Some things you should always mark as dangerous:
+    # - Adding indexes to large tables. These indexes should be created concurrently,
+    #   unfortunately we can't run migrations outside of a transaction until Django
+    #   1.10. So until then these should be run manually.
+    # - Large data migrations. Typically we want these to be run manually by ops so that
+    #   they can be monitored. Since data migrations will now hold a transaction open
+    #   this is even more important.
+    # - Adding columns to highly active tables, even ones that are NULL.
+    is_dangerous = False
+
+
+    dependencies = [
+        ('sentry', '0020_auto_20191125_1420'),
+    ]
+
+    operations = [
+        migrations.SeparateDatabaseAndState(
+            database_operations=[],
+            state_operations=[
+                migrations.AlterField(
+                    model_name='incidentsnapshot',
+                    name='incident',
+                    field=sentry.db.models.fields.onetoone.OneToOneCascadeDeletes(on_delete=django.db.models.deletion.CASCADE, to='sentry.Incident'),
+                ),
+            ],
+        )
+    ]
