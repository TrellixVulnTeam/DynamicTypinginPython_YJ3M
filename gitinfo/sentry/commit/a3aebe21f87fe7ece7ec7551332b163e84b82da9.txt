commit a3aebe21f87fe7ece7ec7551332b163e84b82da9
Author: Eric Feng <ehfeng@users.noreply.github.com>
Date:   Wed May 2 10:30:30 2018 -0700

    feat(assistant): Alert Rules Guide (#8137)
    
    * feat(assistant): Alert Rules Guide
    
    * fixing adhiraj's comments
    
    * moving ConditionalGuideAnchor to condiitonallyGuideAnchor, we decided a function is better than a component
    
    * fixing comments
    
    * removing comment cruft
    
    * re-running snapshots with new emotion
    
    * fixing snapshot

diff --git a/src/sentry/assistant/guides.py b/src/sentry/assistant/guides.py
index be5829ac23..6dd053a6af 100644
--- a/src/sentry/assistant/guides.py
+++ b/src/sentry/assistant/guides.py
@@ -3,6 +3,24 @@ from __future__ import absolute_import
 from django.utils.translation import ugettext_lazy as _
 
 
+# Guide Schema
+# id (text, required): unique id
+# cue (text):  The text used to prompt the user to initiate the guide.
+# required_targets (list): An empty list will cause the guide to be shown regardless
+#                          of page/targets presence.
+# steps (list): List of steps
+
+# Step Schema
+# title (text, required): Title text. Tone should be active.
+# message (text, optional): Message text. Should help illustrate how to do a task, not
+#                           just literally what the button does.
+# target (text, optional): step is tied to an anchor target. If the anchor doesn't exist,
+#                          the step will not be shown. if the anchor exists but is of type
+#                         "invisible", it will not be pinged but will be scrolled to.
+#                          otherwise the anchor will be pinged and scrolled to. If you'd like
+#                          your step to show always or have a step is not tied to a specific
+#                          element but you'd still like it to be shown, set this as None.
+
 GUIDES = {
     'issue': {
         'id': 1,
@@ -117,8 +135,10 @@ GUIDES = {
             {
                 'title': _('Users'),
                 'message': _(
-                    'Sending user data to Sentry will unlock a number of features, primarily the ability to drill down into the number of users affected by an issue. '
-                    'Learn how easy it is to <a href="https://docs.sentry.io/learn/context/#capturing-the-user" target="_blank">set this up </a>today.'),
+                    'Sending user data to Sentry will unlock a number of features, primarily the ability to drill '
+                    'down into the number of users affected by an issue. '
+                    'Learn how easy it is to '
+                    '<a href="https://docs.sentry.io/learn/context/#capturing-the-user" target="_blank">set this up </a>today.'),
                 'target': 'users',
             },
         ]
@@ -150,5 +170,49 @@ GUIDES = {
                 'target': 'member_role',
             },
         ]
-    }
+    },
+    # Ideally, this would only be sent if the organization has never
+    # customized alert rules (as per FeatureAdoption)
+    'alert_rules': {
+        'id': 5,
+        'cue': _('Tips for alert rules'),
+        'required_targets': ['alert_conditions'],
+        'steps': [
+            {
+                'title': _('Reduce inbox noise'),
+                'message': _('Sentry, by default, alerts on every <i>new</i> issue via email. '
+                             'If that\'s too noisy, sending the new issue alerts to '
+                             'a service like Slack help reduce inbox noise.<br><br> Enabling '
+                             '<a href="https://sentry.io/settings/account/notifications/#weeklyReports" target="_blank">'
+                             'weekly reports</a> can also help you stay on top of issues without '
+                             'getting overwhelmed.'),
+                'target': 'alert_conditions',
+            },
+            {
+                'title': _('Define priority alerts'),
+                'message': _('Not all alerts are created equal. Create rules for frequently occuring errors or specific '
+                             'tags to escalate critical issues by alerting you via email or PagerDuty.<br><br>'
+                             '<a href="https://blog.sentry.io/2017/10/12/proactive-alert-rules" target="_blank">Learn more</a> '
+                             'about wrangling alerts.'),
+                'target': 'alert_actions',
+            },
+            {
+                'title': _('Fine-tune your personal settings'),
+                'message': _('You can control alerts at the project <em>and</em> the user level. '
+                             'If you\'d like to customize your <i>personal</i> alert settings, '
+                             'go to <a href="/account/settings/notifications/" target="_blank">Account Notifications</a>. '
+                             'There, you can choose which project\'s alert or workflow notifications you\'d like to receive.'),
+                'target': None,
+            },
+            {
+                'title': _('What are legacy integrations?'),
+                'message': _('You can see what integrations are legacy or not in '
+                             '<a href="/settings/${orgSlug}/${projectSlug}/plugins/" target="_blank">integration settings</a>. '
+                             'If you want an alert rule to trigger both legacy and global '
+                             'integrations, you need to add both as actions. '
+                             '<a href="https://help.sentry.io/hc/en-us/articles/360003063454" target="_blank">Learn more</a>.'),
+                'target': None,
+            },
+        ],
+    },
 }
diff --git a/src/sentry/static/sentry/app/components/assistant/guideAnchor.jsx b/src/sentry/static/sentry/app/components/assistant/guideAnchor.jsx
index a1eb21ba90..c24ac8dcb7 100644
--- a/src/sentry/static/sentry/app/components/assistant/guideAnchor.jsx
+++ b/src/sentry/static/sentry/app/components/assistant/guideAnchor.jsx
@@ -79,6 +79,12 @@ const GuideAnchor = createReactClass({
   },
 });
 
+export const conditionalGuideAnchor = (condition, target, type, children) => {
+  return condition
+    ? React.createElement(GuideAnchor, {target, type}, children)
+    : children;
+};
+
 const recedeAnchor = keyframes`
   0% {
     transform: scale(3, 3);
diff --git a/src/sentry/static/sentry/app/components/assistant/guideDrawer.jsx b/src/sentry/static/sentry/app/components/assistant/guideDrawer.jsx
index ed64a9b4cf..218a8db88a 100644
--- a/src/sentry/static/sentry/app/components/assistant/guideDrawer.jsx
+++ b/src/sentry/static/sentry/app/components/assistant/guideDrawer.jsx
@@ -16,6 +16,7 @@ export default class GuideDrawer extends React.Component {
     onFinish: PropTypes.func.isRequired,
     onDismiss: PropTypes.func.isRequired,
     orgSlug: PropTypes.string,
+    projectSlug: PropTypes.string,
   };
 
   handleFinish = useful => {
@@ -33,6 +34,7 @@ export default class GuideDrawer extends React.Component {
   render() {
     let messageVariables = {
       orgSlug: this.props.orgSlug,
+      projectSlug: this.props.projectSlug,
     };
 
     return (
diff --git a/src/sentry/static/sentry/app/components/assistant/helper.jsx b/src/sentry/static/sentry/app/components/assistant/helper.jsx
index dbbacd5883..b8582e2648 100644
--- a/src/sentry/static/sentry/app/components/assistant/helper.jsx
+++ b/src/sentry/static/sentry/app/components/assistant/helper.jsx
@@ -29,7 +29,8 @@ const AssistantHelper = createReactClass({
       // is null, if currentStep is 0 the Need-Help button is cued, and if it's > 0
       // the support widget is open.
       currentStep: 0,
-      currentOrg: null,
+      currentOrgSlug: null,
+      currentProjectSlug: null,
     };
   },
 
@@ -41,6 +42,8 @@ const AssistantHelper = createReactClass({
     this.setState({
       currentGuide: data.currentGuide,
       currentStep: data.currentStep,
+      currentOrgSlug: data.currentOrg ? data.currentOrg.slug : null,
+      currentProjectSlug: data.currentProject ? data.currentProject.slug : null,
     });
   },
 
@@ -67,9 +70,8 @@ const AssistantHelper = createReactClass({
               step={currentStep}
               onFinish={closeGuideOrSupport}
               onDismiss={this.handleGuideDismiss}
-              orgSlug={
-                GuideStore.state.currentOrg ? GuideStore.state.currentOrg.slug : null
-              }
+              orgSlug={this.state.currentOrgSlug}
+              projectSlug={this.state.currentProjectSlug}
             />
           )}
 
diff --git a/src/sentry/static/sentry/app/stores/guideStore.jsx b/src/sentry/static/sentry/app/stores/guideStore.jsx
index e7f774b1e9..b43b281df0 100644
--- a/src/sentry/static/sentry/app/stores/guideStore.jsx
+++ b/src/sentry/static/sentry/app/stores/guideStore.jsx
@@ -3,6 +3,7 @@ import $ from 'jquery';
 import GuideActions from 'app/actions/guideActions';
 import OrganizationsActions from 'app/actions/organizationsActions';
 import analytics from 'app/utils/analytics';
+import ProjectActions from 'app/actions/projectActions';
 
 const GuideStore = Reflux.createStore({
   init() {
@@ -19,6 +20,8 @@ const GuideStore = Reflux.createStore({
 
       currentOrg: null,
 
+      currentProject: null,
+
       forceShow: false,
       prevGuide: null,
     };
@@ -28,6 +31,7 @@ const GuideStore = Reflux.createStore({
     this.listenTo(GuideActions.registerAnchor, this.onRegisterAnchor);
     this.listenTo(GuideActions.unregisterAnchor, this.onUnregisterAnchor);
     this.listenTo(OrganizationsActions.setActive, this.onSetActiveOrganization);
+    this.listenTo(ProjectActions.setActive, this.onSetActiveProject);
     this.listenTo(OrganizationsActions.changeSlug, this.onChangeSlug);
 
     window.addEventListener('hashchange', this.onHashChange, false);
@@ -40,6 +44,12 @@ const GuideStore = Reflux.createStore({
 
   onSetActiveOrganization(data) {
     this.state.currentOrg = data;
+    this.trigger(this.state);
+  },
+
+  onSetActiveProject(data) {
+    this.state.currentProject = data;
+    this.trigger(this.state);
   },
 
   onChangeSlug(prev, next) {
@@ -120,7 +130,9 @@ const GuideStore = Reflux.createStore({
       bestGuide = $.extend(true, {}, this.state.guides[bestGuideKey]);
       // Remove steps that don't have an anchor on the page.
       bestGuide.steps = bestGuide.steps.filter(
-        step => step.target && availableTargets.indexOf(step.target) >= 0
+        step =>
+          step.target === null ||
+          (step.target && availableTargets.indexOf(step.target) >= 0)
       );
     }
     this.updatePrevGuide(bestGuide);
diff --git a/src/sentry/static/sentry/app/views/settings/projectAlerts/projectAlertRules.jsx b/src/sentry/static/sentry/app/views/settings/projectAlerts/projectAlertRules.jsx
index 3cd436dac2..1453aec296 100644
--- a/src/sentry/static/sentry/app/views/settings/projectAlerts/projectAlertRules.jsx
+++ b/src/sentry/static/sentry/app/views/settings/projectAlerts/projectAlertRules.jsx
@@ -22,6 +22,7 @@ import EnvironmentStore from 'app/stores/environmentStore';
 import ListLink from 'app/components/listLink';
 import SettingsPageHeader from 'app/views/settings/components/settingsPageHeader';
 import recreateRoute from 'app/utils/recreateRoute';
+import {conditionalGuideAnchor} from 'app/components/assistant/guideAnchor';
 
 const TextColorLink = styled(Link)`
   color: ${p => p.theme.gray3};
@@ -50,6 +51,7 @@ const RuleRow = createReactClass({
     projectId: PropTypes.string.isRequired,
     data: PropTypes.object.isRequired,
     onDelete: PropTypes.func.isRequired,
+    firstRule: PropTypes.bool,
   },
 
   mixins: [ApiMixin],
@@ -127,17 +129,22 @@ const RuleRow = createReactClass({
                   <h6>
                     When <strong>{data.actionMatch}</strong> of these conditions are met:
                   </h6>
-                  <table className="conditions-list table">
-                    <tbody>
-                      {data.conditions.map((condition, i) => {
-                        return (
-                          <tr key={i}>
-                            <td>{condition.name}</td>
-                          </tr>
-                        );
-                      })}
-                    </tbody>
-                  </table>
+                  {conditionalGuideAnchor(
+                    this.props.firstRule,
+                    'alert_conditions',
+                    'text',
+                    <table className="conditions-list table">
+                      <tbody>
+                        {data.conditions.map((condition, i) => {
+                          return (
+                            <tr key={i}>
+                              <td>{condition.name}</td>
+                            </tr>
+                          );
+                        })}
+                      </tbody>
+                    </table>
+                  )}
                 </Condition>
               )}
             </RuleDescriptionColumn>
@@ -151,17 +158,22 @@ const RuleRow = createReactClass({
                     </strong>{' '}
                     for an issue:
                   </h6>
-                  <table className="actions-list table">
-                    <tbody>
-                      {data.actions.map((action, i) => {
-                        return (
-                          <tr key={i}>
-                            <td>{action.name}</td>
-                          </tr>
-                        );
-                      })}
-                    </tbody>
-                  </table>
+                  {conditionalGuideAnchor(
+                    this.props.firstRule,
+                    'alert_actions',
+                    'text',
+                    <table className="actions-list table">
+                      <tbody>
+                        {data.actions.map((action, i) => {
+                          return (
+                            <tr key={i}>
+                              <td>{action.name}</td>
+                            </tr>
+                          );
+                        })}
+                      </tbody>
+                    </table>
+                  )}
                 </Condition>
               )}
             </RuleDescriptionColumn>
@@ -212,6 +224,7 @@ class ProjectAlertRules extends AsyncView {
               params={this.props.params}
               routes={this.props.routes}
               onDelete={this.handleDeleteRule.bind(this, rule)}
+              firstRule={this.state.ruleList.indexOf(rule) === 0}
             />
           );
         })}
diff --git a/tests/js/spec/components/assistant/__snapshots__/helper.spec.jsx.snap b/tests/js/spec/components/assistant/__snapshots__/helper.spec.jsx.snap
index 388a748f99..e5d574ee7e 100644
--- a/tests/js/spec/components/assistant/__snapshots__/helper.spec.jsx.snap
+++ b/tests/js/spec/components/assistant/__snapshots__/helper.spec.jsx.snap
@@ -47,6 +47,7 @@ exports[`Helper renders guide drawer 1`] = `
     onDismiss={[Function]}
     onFinish={[Function]}
     orgSlug={null}
+    projectSlug={null}
     step={1}
   />
 </StyledHelper>
diff --git a/tests/js/spec/components/assistant/helper.spec.jsx b/tests/js/spec/components/assistant/helper.spec.jsx
index 46ddcd9614..b3c377c763 100644
--- a/tests/js/spec/components/assistant/helper.spec.jsx
+++ b/tests/js/spec/components/assistant/helper.spec.jsx
@@ -40,7 +40,8 @@ describe('Helper', function() {
         ],
       },
       currentStep: 1,
-      currentOrg: 'test',
+      currentOrgSlug: 'testorg',
+      currentProjectSlug: 'testproj',
     });
     wrapper
       .find('.assistant-cue')
diff --git a/tests/js/spec/views/__snapshots__/projectAlertRules.spec.jsx.snap b/tests/js/spec/views/__snapshots__/projectAlertRules.spec.jsx.snap
index a0bc601fc9..6d4bd2b107 100644
--- a/tests/js/spec/views/__snapshots__/projectAlertRules.spec.jsx.snap
+++ b/tests/js/spec/views/__snapshots__/projectAlertRules.spec.jsx.snap
@@ -325,6 +325,7 @@ exports[`projectAlertRules renders 1`] = `
               "name": "My alert rule",
             }
           }
+          firstRule={true}
           key="1"
           onDelete={[Function]}
           orgId="org1"
@@ -641,19 +642,48 @@ exports[`projectAlertRules renders 1`] = `
                                   <strong />
                                    of these conditions are met:
                                 </h6>
-                                <table
-                                  className="conditions-list table"
+                                <GuideAnchor
+                                  target="alert_conditions"
+                                  type="text"
                                 >
-                                  <tbody>
-                                    <tr
-                                      key="0"
+                                  <GuideAnchorContainer
+                                    innerRef={[Function]}
+                                    type="text"
+                                  >
+                                    <div
+                                      className="css-9u5for-GuideAnchorContainer e130o4350"
+                                      type="text"
                                     >
-                                      <td>
-                                        An alert is first seen
-                                      </td>
-                                    </tr>
-                                  </tbody>
-                                </table>
+                                      <table
+                                        className="conditions-list table"
+                                      >
+                                        <tbody>
+                                          <tr
+                                            key="0"
+                                          >
+                                            <td>
+                                              An alert is first seen
+                                            </td>
+                                          </tr>
+                                        </tbody>
+                                      </table>
+                                      <StyledGuideAnchor
+                                        active={false}
+                                        className="guide-anchor-ping alert_conditions"
+                                      >
+                                        <div
+                                          className="guide-anchor-ping alert_conditions css-1yndvnf-StyledGuideAnchor e130o4351"
+                                        >
+                                          <StyledGuideAnchorRipples>
+                                            <div
+                                              className="css-3zj3g7-StyledGuideAnchorRipples e130o4352"
+                                            />
+                                          </StyledGuideAnchorRipples>
+                                        </div>
+                                      </StyledGuideAnchor>
+                                    </div>
+                                  </GuideAnchorContainer>
+                                </GuideAnchor>
                               </div>
                             </Condition>
                           </div>
@@ -682,19 +712,48 @@ exports[`projectAlertRules renders 1`] = `
                                    
                                   for an issue:
                                 </h6>
-                                <table
-                                  className="actions-list table"
+                                <GuideAnchor
+                                  target="alert_actions"
+                                  type="text"
                                 >
-                                  <tbody>
-                                    <tr
-                                      key="0"
+                                  <GuideAnchorContainer
+                                    innerRef={[Function]}
+                                    type="text"
+                                  >
+                                    <div
+                                      className="css-9u5for-GuideAnchorContainer e130o4350"
+                                      type="text"
                                     >
-                                      <td>
-                                        Send a notification to all services
-                                      </td>
-                                    </tr>
-                                  </tbody>
-                                </table>
+                                      <table
+                                        className="actions-list table"
+                                      >
+                                        <tbody>
+                                          <tr
+                                            key="0"
+                                          >
+                                            <td>
+                                              Send a notification to all services
+                                            </td>
+                                          </tr>
+                                        </tbody>
+                                      </table>
+                                      <StyledGuideAnchor
+                                        active={false}
+                                        className="guide-anchor-ping alert_actions"
+                                      >
+                                        <div
+                                          className="guide-anchor-ping alert_actions css-1yndvnf-StyledGuideAnchor e130o4351"
+                                        >
+                                          <StyledGuideAnchorRipples>
+                                            <div
+                                              className="css-3zj3g7-StyledGuideAnchorRipples e130o4352"
+                                            />
+                                          </StyledGuideAnchorRipples>
+                                        </div>
+                                      </StyledGuideAnchor>
+                                    </div>
+                                  </GuideAnchorContainer>
+                                </GuideAnchor>
                               </div>
                             </Condition>
                           </div>
