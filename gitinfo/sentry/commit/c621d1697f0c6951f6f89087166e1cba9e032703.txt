commit c621d1697f0c6951f6f89087166e1cba9e032703
Author: Ankur <ankur@flexport.com>
Date:   Thu Nov 8 16:24:27 2018 -0800

    feat: Include triggering rules in webhook payload
    
    Minor addition to the webhook payload - include the rules that triggered
    this notification.

diff --git a/src/sentry/plugins/bases/notify.py b/src/sentry/plugins/bases/notify.py
index e42c7fe0bb..966b197331 100644
--- a/src/sentry/plugins/bases/notify.py
+++ b/src/sentry/plugins/bases/notify.py
@@ -66,7 +66,7 @@ class NotificationPlugin(Plugin):
 
     def notify(self, notification):
         event = notification.event
-        return self.notify_users(event.group, event)
+        return self.notify_users(event.group, event, map(lambda r: r.label, notification.rules))
 
     def rule_notify(self, event, futures):
         rules = []
@@ -117,7 +117,7 @@ class NotificationPlugin(Plugin):
 
         self.logger.info('notification.%s' % log_event, extra=extra)
 
-    def notify_users(self, group, event, fail_silently=False):
+    def notify_users(self, group, event, triggering_rules, fail_silently=False):
         raise NotImplementedError
 
     def notify_about_activity(self, activity):
diff --git a/src/sentry/plugins/sentry_webhooks/plugin.py b/src/sentry/plugins/sentry_webhooks/plugin.py
index 51541f6201..7ba73ac6d8 100644
--- a/src/sentry/plugins/sentry_webhooks/plugin.py
+++ b/src/sentry/plugins/sentry_webhooks/plugin.py
@@ -74,7 +74,7 @@ class WebHooksPlugin(notify.NotificationPlugin):
             }
         ]
 
-    def get_group_data(self, group, event):
+    def get_group_data(self, group, event, triggering_rules):
         data = {
             'id': six.text_type(group.id),
             'project': group.project.slug,
@@ -85,6 +85,7 @@ class WebHooksPlugin(notify.NotificationPlugin):
             'culprit': group.culprit,
             'message': event.get_legacy_message(),
             'url': group.get_absolute_url(),
+            'triggering_rules': triggering_rules,
         }
         data['event'] = dict(event.data or {})
         data['event']['tags'] = event.get_tags()
@@ -103,7 +104,7 @@ class WebHooksPlugin(notify.NotificationPlugin):
             verify_ssl=False,
         )
 
-    def notify_users(self, group, event, fail_silently=False):
-        payload = self.get_group_data(group, event)
+    def notify_users(self, group, event, triggering_rules, fail_silently=False):
+        payload = self.get_group_data(group, event, triggering_rules)
         for url in self.get_webhook_urls(group.project):
             safe_execute(self.send_webhook, url, payload, _with_transaction=False)
