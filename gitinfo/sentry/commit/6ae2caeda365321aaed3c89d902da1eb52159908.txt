commit 6ae2caeda365321aaed3c89d902da1eb52159908
Author: Dan Fuller <dfuller@sentry.io>
Date:   Mon May 13 15:43:27 2019 -0700

    fix(api): Fix bug when serializing multiple incidents

diff --git a/src/sentry/api/serializers/models/incident.py b/src/sentry/api/serializers/models/incident.py
index e8928191b3..e8bf459fe3 100644
--- a/src/sentry/api/serializers/models/incident.py
+++ b/src/sentry/api/serializers/models/incident.py
@@ -30,12 +30,12 @@ class IncidentSerializer(Serializer):
             incident_projects[incident_project.incident_id].append(incident_project.project.slug)
 
         results = {}
-        for item in item_list:
-            results[item] = {'projects': incident_projects.get(item.id, [])}
-
         for incident in item_list:
-            results[item]['event_stats'] = get_incident_event_stats(incident)
-            results[item]['aggregates'] = get_incident_aggregates(incident)
+            results[incident] = {
+                'projects': incident_projects.get(incident.id, []),
+                'event_stats': get_incident_event_stats(incident),
+                'aggregates': get_incident_aggregates(incident),
+            }
 
         return results
 
diff --git a/tests/sentry/api/endpoints/test_organization_incident.py b/tests/sentry/api/endpoints/test_organization_incident.py
index 67c5caaf3d..b2e394d1b2 100644
--- a/tests/sentry/api/endpoints/test_organization_incident.py
+++ b/tests/sentry/api/endpoints/test_organization_incident.py
@@ -27,10 +27,11 @@ class IncidentListEndpointTest(APITestCase):
     def test_simple(self):
         self.create_team(organization=self.organization, members=[self.user])
         incident = self.create_incident()
+        other_incident = self.create_incident()
         self.login_as(self.user)
         with self.feature('organizations:incidents'):
             resp = self.get_valid_response(self.organization.slug)
-        assert resp.data == serialize([incident])
+        assert resp.data == serialize([incident, other_incident])
 
     def test_no_feature(self):
         self.create_team(organization=self.organization, members=[self.user])
