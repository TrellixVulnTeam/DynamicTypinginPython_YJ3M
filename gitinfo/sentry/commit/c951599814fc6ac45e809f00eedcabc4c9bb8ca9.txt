commit c951599814fc6ac45e809f00eedcabc4c9bb8ca9
Author: Ben Vinegar <ben@benv.ca>
Date:   Mon Aug 17 13:28:01 2015 -0700

    Implement Java output for RawStacktraceContent (fixes #1773)

diff --git a/src/sentry/static/sentry/app/components/interfaces/rawStacktraceContent.jsx b/src/sentry/static/sentry/app/components/interfaces/rawStacktraceContent.jsx
index 6075877c27..54b140dd46 100644
--- a/src/sentry/static/sentry/app/components/interfaces/rawStacktraceContent.jsx
+++ b/src/sentry/static/sentry/app/components/interfaces/rawStacktraceContent.jsx
@@ -16,6 +16,8 @@ var RawStacktraceContent = React.createClass({
         return this.getRubyFrame(frame);
       case "python":
         return this.getPythonFrame(frame);
+      case "java":
+        return this.getJavaFrame(frame);
       default:
         return this.getDefaultFrame(frame);
     }
@@ -92,6 +94,24 @@ var RawStacktraceContent = React.createClass({
     return result;
   },
 
+  getJavaFrame(frame) {
+    var result = '    at';
+    if (defined(frame.module)) {
+      result += ' ' + frame.module + '.';
+    }
+    if (defined(frame.function)) {
+      result += frame.function;
+    }
+    if (defined(frame.filename)) {
+      result += '(' + frame.filename;
+      if (defined(frame.lineNo) && frame.lineNo >= 0) {
+        result += ':' + frame.lineNo;
+      }
+      result += ')';
+    }
+    return result;
+  },
+
   getDefaultFrame(frame) {
     return this.getPythonFrame(frame);
   },
diff --git a/tests/js/spec/components/interfaces/rawStacktraceContent.spec.jsx b/tests/js/spec/components/interfaces/rawStacktraceContent.spec.jsx
new file mode 100644
index 0000000000..f910f8bbef
--- /dev/null
+++ b/tests/js/spec/components/interfaces/rawStacktraceContent.spec.jsx
@@ -0,0 +1,37 @@
+/*jshint expr: true*/
+var React = require("react/addons");
+var Cookies = require("js-cookie");
+
+var api = require("app/api");
+var RawStacktraceContent = require("app/components/interfaces/rawStacktraceContent");
+
+var TestUtils = React.addons.TestUtils;
+
+describe("RawStacktraceContent", function() {
+  describe("getJavaFrame()", function() {
+    it('should render java frames', function () {
+      var data = { frames: [] };
+      var elem = TestUtils.renderIntoDocument(<RawStacktraceContent data={data} />);
+
+      expect(elem.getJavaFrame({
+        module: 'org.mortbay.thread.QueuedThreadPool$PoolThread',
+        function: 'run',
+        filename: 'QueuedThreadPool.java',
+        lineNo: 582
+      })).to.eql('    at org.mortbay.thread.QueuedThreadPool$PoolThread.run(QueuedThreadPool.java:582)');
+
+      // without line number
+      expect(elem.getJavaFrame({
+        module: 'org.mortbay.thread.QueuedThreadPool$PoolThread',
+        function: 'run',
+        filename: 'QueuedThreadPool.java'
+      })).to.eql('    at org.mortbay.thread.QueuedThreadPool$PoolThread.run(QueuedThreadPool.java)');
+
+      // without line number and filename
+      expect(elem.getJavaFrame({
+        module: 'org.mortbay.thread.QueuedThreadPool$PoolThread',
+        function: 'run'
+      })).to.eql('    at org.mortbay.thread.QueuedThreadPool$PoolThread.run');
+    });
+  });
+});
