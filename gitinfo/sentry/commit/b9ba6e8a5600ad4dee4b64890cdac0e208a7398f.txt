commit b9ba6e8a5600ad4dee4b64890cdac0e208a7398f
Author: David Cramer <dcramer@gmail.com>
Date:   Mon Jan 19 12:46:52 2015 -0800

    Move logout view into CBV

diff --git a/src/sentry/web/frontend/accounts.py b/src/sentry/web/frontend/accounts.py
index 3aaecacd46..01e8596f99 100644
--- a/src/sentry/web/frontend/accounts.py
+++ b/src/sentry/web/frontend/accounts.py
@@ -78,15 +78,6 @@ def login_redirect(request):
     return HttpResponseRedirect(login_url)
 
 
-@never_cache
-def logout(request):
-    from django.contrib.auth import logout
-
-    logout(request)
-
-    return HttpResponseRedirect(reverse('sentry'))
-
-
 def recover(request):
     form = RecoverPasswordForm(request.POST or None,
                                captcha=bool(request.session.get('needs_captcha')))
diff --git a/src/sentry/web/frontend/auth_logout.py b/src/sentry/web/frontend/auth_logout.py
new file mode 100644
index 0000000000..b1ee6c203b
--- /dev/null
+++ b/src/sentry/web/frontend/auth_logout.py
@@ -0,0 +1,15 @@
+from __future__ import absolute_import, print_function
+
+from django.core.urlresolvers import reverse
+from django.contrib.auth import logout
+
+from sentry.web.frontend.base import BaseView
+
+
+class AuthLogoutView(BaseView):
+    auth_required = False
+
+    def handle(self, request):
+        logout(request)
+
+        return self.redirect(reverse('sentry'))
diff --git a/src/sentry/web/urls.py b/src/sentry/web/urls.py
index 5f4792d998..b8667d6d1c 100644
--- a/src/sentry/web/urls.py
+++ b/src/sentry/web/urls.py
@@ -39,6 +39,7 @@ __all__ = ('urlpatterns',)
 from sentry.web.frontend.accept_organization_invite import AcceptOrganizationInviteView
 from sentry.web.frontend.access_group_migration import AccessGroupMigrationView
 from sentry.web.frontend.auth_login import AuthLoginView
+from sentry.web.frontend.auth_logout import AuthLogoutView
 from sentry.web.frontend.home import HomeView
 from sentry.web.frontend.organization_audit_log import OrganizationAuditLogView
 from sentry.web.frontend.organization_home import OrganizationHomeView
@@ -101,7 +102,7 @@ urlpatterns += patterns('',
         name='sentry-login'),
     url(r'^login-redirect/$', accounts.login_redirect,
         name='sentry-login-redirect'),
-    url(r'^logout/$', accounts.logout,
+    url(r'^logout/$', AuthLogoutView.as_view(),
         name='sentry-logout'),
     url(r'^register/$', accounts.register,
         name='sentry-register'),
diff --git a/tests/sentry/web/frontend/accounts/tests.py b/tests/sentry/web/frontend/accounts/tests.py
index e45ba0273e..771531e7e1 100644
--- a/tests/sentry/web/frontend/accounts/tests.py
+++ b/tests/sentry/web/frontend/accounts/tests.py
@@ -136,24 +136,6 @@ class SettingsTest(TestCase):
         assert user.check_password('foobar')
 
 
-class LogoutTest(TestCase):
-    @fixture
-    def path(self):
-        return reverse('sentry-logout')
-
-    def test_logs_user_out(self):
-        self.login_as(self.user)
-
-        resp = self.client.get(self.path)
-        assert resp.status_code == 302
-        assert self.client.session.keys() == []
-
-    def test_same_behavior_with_anonymous_user(self):
-        resp = self.client.get(self.path)
-        assert resp.status_code == 302
-        assert self.client.session.keys() == []
-
-
 class NotificationSettingsTest(TestCase):
     @fixture
     def path(self):
diff --git a/tests/sentry/web/frontend/test_auth_logout.py b/tests/sentry/web/frontend/test_auth_logout.py
new file mode 100644
index 0000000000..f64c77eb9e
--- /dev/null
+++ b/tests/sentry/web/frontend/test_auth_logout.py
@@ -0,0 +1,24 @@
+from __future__ import absolute_import
+
+from django.core.urlresolvers import reverse
+from exam import fixture
+
+from sentry.testutils import TestCase
+
+
+class AuthLogoutTest(TestCase):
+    @fixture
+    def path(self):
+        return reverse('sentry-logout')
+
+    def test_logs_user_out(self):
+        self.login_as(self.user)
+
+        resp = self.client.get(self.path)
+        assert resp.status_code == 302
+        assert self.client.session.keys() == []
+
+    def test_same_behavior_with_anonymous_user(self):
+        resp = self.client.get(self.path)
+        assert resp.status_code == 302
+        assert self.client.session.keys() == []
