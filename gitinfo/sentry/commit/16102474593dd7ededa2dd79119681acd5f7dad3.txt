commit 16102474593dd7ededa2dd79119681acd5f7dad3
Author: David Cramer <dcramer@gmail.com>
Date:   Wed Dec 26 18:25:09 2012 -0800

    Tests for stream, dashboard, and getting started views

diff --git a/setup.py b/setup.py
index 316b9bc845..6438b2750d 100755
--- a/setup.py
+++ b/setup.py
@@ -41,6 +41,7 @@ tests_require = [
     'pytest-django',
     'nydus',
     'mock>=0.8.0',
+    'mock-django>=0.6.4',
     'redis',
     'unittest2',
 ]
diff --git a/src/sentry/web/frontend/projects.py b/src/sentry/web/frontend/projects.py
index 20b6ffb5dd..04b2386012 100644
--- a/src/sentry/web/frontend/projects.py
+++ b/src/sentry/web/frontend/projects.py
@@ -31,7 +31,7 @@ from sentry.web.helpers import render_to_response, get_project_list, \
 def dashboard(request, project):
     if not Group.objects.filter(project=project).exists():
         return HttpResponseRedirect(reverse('sentry-get-started', args=[project.slug]))
-    return HttpResponseRedirect(reverse('sentry', args=[project.slug]))
+    return HttpResponseRedirect(reverse('sentry-stream', args=[project.slug]))
 
 
 @login_required
diff --git a/tests/sentry/web/frontend/projects/tests.py b/tests/sentry/web/frontend/projects/tests.py
index e8ad424e31..090ce6ce22 100644
--- a/tests/sentry/web/frontend/projects/tests.py
+++ b/tests/sentry/web/frontend/projects/tests.py
@@ -4,11 +4,12 @@ from __future__ import absolute_import
 
 import mock
 import logging
+from mock_django.managers import ManagerMock
 
 from django.core.urlresolvers import reverse
 
 from sentry.constants import MEMBER_OWNER
-from sentry.models import Project, ProjectKey
+from sentry.models import Project, ProjectKey, Group
 from sentry.testutils import TestCase, fixture, before
 
 logger = logging.getLogger(__name__)
@@ -146,3 +147,66 @@ class RemoveProjectKeyTest(TestCase):
         resp = self.client.post(self.path)
         assert resp.status_code == 302
         assert not ProjectKey.objects.filter(id=self.key.id).exists()
+
+
+class DashboardTest(TestCase):
+    @fixture
+    def path(self):
+        return reverse('sentry', args=[self.project.id])
+
+    def test_requires_authentication(self):
+        resp = self.client.get(self.path)
+        assert resp.status_code == 302
+        assert resp['Location'] == 'http://testserver' + reverse('sentry-login')
+
+    def test_redirects_to_getting_started_if_no_groups(self):
+        self.login_as(self.user)
+
+        manager = ManagerMock(Group.objects)
+
+        with mock.patch('sentry.models.Group.objects', manager):
+            resp = self.client.get(self.path)
+
+        manager.assert_chain_calls(
+            mock.call.filter(project=self.project),
+        )
+        manager.exists.assert_called_once_with()
+
+        assert resp.status_code == 302
+        assert resp['Location'] == 'http://testserver' + reverse('sentry-get-started', args=[self.project.slug])
+
+    @mock.patch('sentry.models.Group.objects', ManagerMock(Group.objects, Group()))
+    def test_redirects_to_stream_if_has_groups(self):
+        self.login_as(self.user)
+
+        manager = ManagerMock(Group.objects, Group())
+
+        with mock.patch('sentry.models.Group.objects', manager):
+            resp = self.client.get(self.path)
+
+        manager.assert_chain_calls(
+            mock.call.filter(project=self.project),
+        )
+        manager.exists.assert_called_once_with()
+
+        assert resp.status_code == 302
+        assert resp['Location'] == 'http://testserver' + reverse('sentry-stream', args=[self.project.slug])
+
+
+class GetStartedTest(TestCase):
+    @fixture
+    def path(self):
+        return reverse('sentry-get-started', args=[self.project.id])
+
+    def test_unauthenticated_does_redirect(self):
+        resp = self.client.get(self.path)
+        assert resp.status_code == 302
+
+    def test_renders_with_required_context(self):
+        self.login_as(self.user)
+
+        resp = self.client.get(self.path)
+        assert resp.status_code == 200
+        self.assertTemplateUsed('sentry/get_started.html')
+        assert 'project' in resp.context
+        assert resp.context['project'] == self.project
diff --git a/tests/sentry/web/frontend/tests.py b/tests/sentry/web/frontend/tests.py
index 333a9a3d84..c8e9cc6172 100644
--- a/tests/sentry/web/frontend/tests.py
+++ b/tests/sentry/web/frontend/tests.py
@@ -122,8 +122,8 @@ class SentryViewsTest(BaseViewTest):
     def login_user(self):
         self.login_as(self.user)
 
-    def test_index(self):
-        resp = self.client.get(reverse('sentry', kwargs={'project_id': 1}) + '?sort=freq')
+    def test_stream_loads(self):
+        resp = self.client.get(reverse('sentry-stream', kwargs={'project_id': 1}))
         assert resp.status_code == 200
         self.assertTemplateUsed(resp, 'sentry/groups/group_list.html')
 
