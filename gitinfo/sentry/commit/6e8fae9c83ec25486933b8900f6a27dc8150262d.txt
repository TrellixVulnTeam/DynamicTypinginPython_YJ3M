commit 6e8fae9c83ec25486933b8900f6a27dc8150262d
Author: Debayan De <debayande@users.noreply.github.com>
Date:   Fri May 24 23:11:20 2019 +0100

    fix(integration): Fix repo search in the GitHub Enterprise integration
    
    Within the configuration form of the GitHub Enterprise integration in
    Sentry v9.1.1 is a drop down list for adding repos. The search
    function implemented as a part of said list does not work correctly.
    This PR, if applied, will fix that.

diff --git a/src/sentry/integrations/github_enterprise/integration.py b/src/sentry/integrations/github_enterprise/integration.py
index 5ea6f2f04b..0e30eb9de0 100644
--- a/src/sentry/integrations/github_enterprise/integration.py
+++ b/src/sentry/integrations/github_enterprise/integration.py
@@ -95,6 +95,8 @@ API_ERRORS = {
 
 
 class GitHubEnterpriseIntegration(IntegrationInstallation, GitHubIssueBasic, RepositoryMixin):
+    repo_search = True
+
     def get_client(self):
         base_url = self.model.metadata['domain_name'].split('/')[0]
         return GitHubEnterpriseAppsClient(
@@ -106,10 +108,19 @@ class GitHubEnterpriseIntegration(IntegrationInstallation, GitHubIssueBasic, Rep
         )
 
     def get_repositories(self, query=None):
-        data = []
-        for repo in self.get_client().get_repositories():
-            data.append({'name': repo['name'], 'identifier': repo['full_name']})
-        return data
+        if not query:
+            return [{
+                'name': i['name'],
+                'identifier': i['full_name']
+            } for i in self.get_client().get_repositories()]
+
+        account_type = 'user' if self.model.metadata['account_type'] == 'User' else 'org'
+        full_query = (u'%s:%s %s' % (account_type, self.model.name, query)).encode('utf-8')
+        response = self.get_client().search_repositories(full_query)
+        return [{
+            'name': i['name'],
+            'identifier': i['full_name']
+        } for i in response.get('items', [])]
 
     def search_issues(self, query):
         return self.get_client().search_issues(query)
