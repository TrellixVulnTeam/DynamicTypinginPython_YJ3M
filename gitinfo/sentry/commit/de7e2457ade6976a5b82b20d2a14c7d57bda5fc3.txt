commit de7e2457ade6976a5b82b20d2a14c7d57bda5fc3
Author: David Cramer <dcramer@gmail.com>
Date:   Sat Jul 18 15:04:35 2015 -0700

    Add tests for project/team admin pages (refs GH-1600)

diff --git a/tests/sentry/web/frontend/test_admin.py b/tests/sentry/web/frontend/test_admin.py
new file mode 100644
index 0000000000..9c3bf50e18
--- /dev/null
+++ b/tests/sentry/web/frontend/test_admin.py
@@ -0,0 +1,117 @@
+# -*- coding: utf-8 -*-
+
+from __future__ import absolute_import
+
+from django.core.urlresolvers import reverse
+from exam import fixture
+
+from sentry.testutils import TestCase
+
+
+class EnvStatusTest(TestCase):
+    @fixture
+    def path(self):
+        return reverse('sentry-admin-status')
+
+    def test_requires_auth(self):
+        resp = self.client.get(self.path)
+        self.assertEquals(resp.status_code, 302)
+
+    def test_renders_template(self):
+        self.login_as(self.user)
+
+        resp = self.client.get(self.path)
+        self.assertEquals(resp.status_code, 200)
+        self.assertTemplateUsed(resp, 'sentry/admin/status/env.html')
+
+
+class PackageStatusTest(TestCase):
+    @fixture
+    def path(self):
+        return reverse('sentry-admin-packages-status')
+
+    def test_requires_auth(self):
+        resp = self.client.get(self.path)
+        self.assertEquals(resp.status_code, 302)
+
+    def test_renders_template(self):
+        self.login_as(self.user)
+
+        resp = self.client.get(self.path)
+        self.assertEquals(resp.status_code, 200)
+        self.assertTemplateUsed(resp, 'sentry/admin/status/packages.html')
+
+
+class MailStatusTest(TestCase):
+    @fixture
+    def path(self):
+        return reverse('sentry-admin-mail-status')
+
+    def test_requires_auth(self):
+        resp = self.client.get(self.path)
+        self.assertEquals(resp.status_code, 302)
+
+    def test_renders_template(self):
+        self.login_as(self.user)
+
+        resp = self.client.get(self.path)
+        self.assertEquals(resp.status_code, 200)
+        self.assertTemplateUsed(resp, 'sentry/admin/status/mail.html')
+
+
+class OverviewTest(TestCase):
+    @fixture
+    def path(self):
+        return reverse('sentry-admin-overview')
+
+    def test_requires_auth(self):
+        resp = self.client.get(self.path)
+        self.assertEquals(resp.status_code, 302)
+
+    def test_renders_template(self):
+        self.login_as(self.user)
+
+        resp = self.client.get(self.path)
+        self.assertEquals(resp.status_code, 200)
+        self.assertTemplateUsed(resp, 'sentry/admin/stats.html')
+
+
+class ManageUsersTest(TestCase):
+    @fixture
+    def path(self):
+        return reverse('sentry-admin-users')
+
+    def test_does_render(self):
+        self.login_as(self.user)
+        resp = self.client.get(self.path)
+        assert resp.status_code == 200
+        self.assertTemplateUsed(resp, 'sentry/admin/users/list.html')
+        assert self.user in resp.context['user_list']
+
+
+class ManageTeamsTest(TestCase):
+    @fixture
+    def path(self):
+        return reverse('sentry-admin-teams')
+
+    def test_does_render(self):
+        team = self.create_team()
+        self.login_as(self.user)
+        resp = self.client.get(self.path)
+        assert resp.status_code == 200
+        self.assertTemplateUsed(resp, 'sentry/admin/teams/list.html')
+        assert team in resp.context['team_list']
+
+
+class ManageProjectsTest(TestCase):
+    @fixture
+    def path(self):
+        return reverse('sentry-admin-projects')
+
+    def test_does_render(self):
+        project = self.create_project()
+        self.login_as(self.user)
+        resp = self.client.get(self.path)
+        assert resp.status_code == 200
+        self.assertTemplateUsed(resp, 'sentry/admin/projects/list.html')
+        assert project in resp.context['project_list']
diff --git a/tests/sentry/web/frontend/tests.py b/tests/sentry/web/frontend/tests.py
index 5b0a282d4c..c8c475a026 100644
--- a/tests/sentry/web/frontend/tests.py
+++ b/tests/sentry/web/frontend/tests.py
@@ -10,86 +10,6 @@ from sentry.models import User
 from sentry.testutils import TestCase
 
 
-class EnvStatusTest(TestCase):
-    @fixture
-    def path(self):
-        return reverse('sentry-admin-status')
-
-    def test_requires_auth(self):
-        resp = self.client.get(self.path)
-        self.assertEquals(resp.status_code, 302)
-
-    def test_renders_template(self):
-        self.login_as(self.user)
-
-        resp = self.client.get(self.path)
-        self.assertEquals(resp.status_code, 200)
-        self.assertTemplateUsed(resp, 'sentry/admin/status/env.html')
-
-
-class PackageStatusTest(TestCase):
-    @fixture
-    def path(self):
-        return reverse('sentry-admin-packages-status')
-
-    def test_requires_auth(self):
-        resp = self.client.get(self.path)
-        self.assertEquals(resp.status_code, 302)
-
-    def test_renders_template(self):
-        self.login_as(self.user)
-
-        resp = self.client.get(self.path)
-        self.assertEquals(resp.status_code, 200)
-        self.assertTemplateUsed(resp, 'sentry/admin/status/packages.html')
-
-
-class MailStatusTest(TestCase):
-    @fixture
-    def path(self):
-        return reverse('sentry-admin-mail-status')
-
-    def test_requires_auth(self):
-        resp = self.client.get(self.path)
-        self.assertEquals(resp.status_code, 302)
-
-    def test_renders_template(self):
-        self.login_as(self.user)
-
-        resp = self.client.get(self.path)
-        self.assertEquals(resp.status_code, 200)
-        self.assertTemplateUsed(resp, 'sentry/admin/status/mail.html')
-
-
-class OverviewTest(TestCase):
-    @fixture
-    def path(self):
-        return reverse('sentry-admin-overview')
-
-    def test_requires_auth(self):
-        resp = self.client.get(self.path)
-        self.assertEquals(resp.status_code, 302)
-
-    def test_renders_template(self):
-        self.login_as(self.user)
-
-        resp = self.client.get(self.path)
-        self.assertEquals(resp.status_code, 200)
-        self.assertTemplateUsed(resp, 'sentry/admin/stats.html')
-
-
-class ManageUsersTest(TestCase):
-    @fixture
-    def path(self):
-        return reverse('sentry-admin-users')
-
-    def test_does_render(self):
-        self.login_as(self.user)
-        resp = self.client.get(self.path)
-        assert resp.status_code == 200
-        self.assertTemplateUsed(resp, 'sentry/admin/users/list.html')
-
-
 class ReplayTest(TestCase):
     @fixture
     def path(self):
