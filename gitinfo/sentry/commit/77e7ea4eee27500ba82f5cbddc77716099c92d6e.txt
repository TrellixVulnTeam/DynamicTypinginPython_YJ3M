commit 77e7ea4eee27500ba82f5cbddc77716099c92d6e
Author: Dan Fuller <dfuller@sentry.io>
Date:   Wed Jun 24 10:36:11 2020 -0700

    feat(metric_alerts): Move resolve_threshold and threshold_type to the rule level. (#19522)
    
    This modifies the data model to allow these fields to be imoved to the rule level. Will follow up
    with prs that start writing to these columns, and finally do a backfill.
    
    We want to move these fields to this level for a couple of reasons:
     - We feel that a single resolve threshold will be simpler to manage. This also makes adding in auto
       resolving alerts easier, since we only need to worry about the one threshold.
     - Threshold type is locked to be the same between triggers in the UI, so it makes sense to put this
       at the rule level instead.

diff --git a/migrations_lockfile.txt b/migrations_lockfile.txt
index 28a220f8e9..a2c4eb190c 100644
--- a/migrations_lockfile.txt
+++ b/migrations_lockfile.txt
@@ -10,7 +10,7 @@ auth: 0008_alter_user_username_max_length
 contenttypes: 0002_remove_content_type_name
 jira_ac: 0001_initial
 nodestore: 0001_initial
-sentry: 0087_fix_time_series_data_type
+sentry: 0088_rule_level_resolve_threshold_type
 sessions: 0001_initial
 sites: 0002_alter_domain_unique
 social_auth: 0001_initial
diff --git a/src/sentry/incidents/models.py b/src/sentry/incidents/models.py
index ff6f92728a..dacc0fd4f2 100644
--- a/src/sentry/incidents/models.py
+++ b/src/sentry/incidents/models.py
@@ -378,6 +378,8 @@ class AlertRule(Model):
     # Determines whether we include all current and future projects from this
     # organization in this rule.
     include_all_projects = models.BooleanField(default=False)
+    threshold_type = models.SmallIntegerField(null=True)
+    resolve_threshold = models.FloatField(null=True)
     threshold_period = models.IntegerField()
     date_modified = models.DateTimeField(default=timezone.now)
     date_added = models.DateTimeField(default=timezone.now)
diff --git a/src/sentry/migrations/0088_rule_level_resolve_threshold_type.py b/src/sentry/migrations/0088_rule_level_resolve_threshold_type.py
new file mode 100644
index 0000000000..ef04db3319
--- /dev/null
+++ b/src/sentry/migrations/0088_rule_level_resolve_threshold_type.py
@@ -0,0 +1,42 @@
+# -*- coding: utf-8 -*-
+# Generated by Django 1.11.29 on 2020-06-24 00:53
+from __future__ import unicode_literals
+
+from django.db import migrations, models
+
+
+class Migration(migrations.Migration):
+    # This flag is used to mark that a migration shouldn't be automatically run in
+    # production. We set this to True for operations that we think are risky and want
+    # someone from ops to run manually and monitor.
+    # General advice is that if in doubt, mark your migration as `is_dangerous`.
+    # Some things you should always mark as dangerous:
+    # - Large data migrations. Typically we want these to be run manually by ops so that
+    #   they can be monitored. Since data migrations will now hold a transaction open
+    #   this is even more important.
+    # - Adding columns to highly active tables, even ones that are NULL.
+    is_dangerous = False
+
+    # This flag is used to decide whether to run this migration in a transaction or not.
+    # By default we prefer to run in a transaction, but for migrations where you want
+    # to `CREATE INDEX CONCURRENTLY` this needs to be set to False. Typically you'll
+    # want to create an index concurrently when adding one to an existing table.
+    atomic = True
+
+
+    dependencies = [
+        ('sentry', '0087_fix_time_series_data_type'),
+    ]
+
+    operations = [
+        migrations.AddField(
+            model_name='alertrule',
+            name='resolve_threshold',
+            field=models.FloatField(null=True),
+        ),
+        migrations.AddField(
+            model_name='alertrule',
+            name='threshold_type',
+            field=models.SmallIntegerField(null=True),
+        ),
+    ]
