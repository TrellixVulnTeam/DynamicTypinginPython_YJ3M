commit ac5c5bfa364c7e4ce2e53d4bd77c29f302bb881b
Author: Jess MacQueen <jessmacqueen@gmail.com>
Date:   Thu Nov 8 15:00:54 2018 -0800

    ref(event search): Use shared constant for search:snuba name mapping

diff --git a/src/sentry/api/event_search.py b/src/sentry/api/event_search.py
index 71e0817152..538627ff41 100644
--- a/src/sentry/api/event_search.py
+++ b/src/sentry/api/event_search.py
@@ -6,6 +6,7 @@ from parsimonious.exceptions import ParseError
 from parsimonious.grammar import Grammar, NodeVisitor
 
 from sentry.search.utils import parse_datetime_string, InvalidQuery
+from sentry.utils.snuba import SENTRY_SNUBA_MAP
 
 event_search_grammar = Grammar(r"""
 # raw_search must come at the end, otherwise other
@@ -38,76 +39,12 @@ space           = ~r" "
 """)
 
 
-FIELD_LOOKUP = {
-    'user.id': {
-        'snuba_name': 'user_id',
-        'type': 'string',
-    },
-    'user.email': {
-        'snuba_name': 'email',
-        'type': 'string',
-    },
-    'user.username': {
-        'snuba_name': 'username',
-        'type': 'string',
-    },
-    'user.ip': {
-        'snuba_name': 'ip_address',
-        'type': 'string',
-    },
-    'release': {
-        'snuba_name': 'sentry:release',
-        'type': 'string',
-    },
-    'message': {
-        'snuba_name': 'message',
-        'type': 'string',
-    },
-    'timestamp': {
-        'snuba_name': 'timestamp',
-        'type': 'timestamp',
-    },
-    'start': {
-        'snuba_name': 'start',
-        'type': 'timestamp',
-    },
-    'end': {
-        'snuba_name': 'end',
-        'type': 'timestamp',
-    },
-    'project_id': {
-        'snuba_name': 'project_id',
-        'type': 'list',
-    },
-    'type': {
-        'snuba_name': 'type',
-        'type': 'string',
-    },
-    'environment': {
-        'snuba_name': 'tags[environment]',
-        'type': 'string',
-    },
-    'platform': {
-        'snuba_name': 'platform',
-        'type': 'string',
-    },
-    'stack.filename': {
-        'snuba_name': 'exception_frames.filename',
-        'type': 'string',
-    },
-    'stack.module': {
-        'snuba_name': 'exception_frames.module',
-        'type': 'string',
-    },
-    'http.url': {
-        'snuba_name': 'url',
-        'type': 'string',
-    },
-    'http.method': {
-        'snuba_name': 'http_method',
-        'type': 'string',
-    },
-}
+# add valid snuba `raw_query` args
+SEARCH_MAP = dict({
+    'start': 'start',
+    'end': 'end',
+    'project_id': 'project_id',
+}, **SENTRY_SNUBA_MAP)
 
 
 class InvalidSearchQuery(Exception):
@@ -122,14 +59,14 @@ class SearchKey(namedtuple('SearchKey', 'name')):
 
     @property
     def snuba_name(self):
-        field = FIELD_LOOKUP.get(self.name)
-        if field:
-            return field['snuba_name']
+        snuba_name = SEARCH_MAP.get(self.name)
+        if snuba_name:
+            return snuba_name
         # assume custom tag if not listed
         return 'tags[%s]' % (self.name,)
 
 
-class SearchValue(namedtuple('SearchValue', 'raw_value type')):
+class SearchValue(namedtuple('SearchValue', 'raw_value')):
     pass
 
 
@@ -151,7 +88,7 @@ class SearchVisitor(NodeVisitor):
         return SearchFilter(
             SearchKey('message'),
             "=",
-            SearchValue(node.text, FIELD_LOOKUP['message']['type']),
+            SearchValue(node.text),
         )
 
     def visit_time_filter(self, node, children):
@@ -166,7 +103,7 @@ class SearchVisitor(NodeVisitor):
             return SearchFilter(
                 SearchKey(search_key),
                 operator,
-                SearchValue(search_value, FIELD_LOOKUP[search_key]['type']),
+                SearchValue(search_value),
             )
         except KeyError:
             raise InvalidSearchQuery('Unsupported search term: %s' % (search_key,))
@@ -179,11 +116,10 @@ class SearchVisitor(NodeVisitor):
 
     def visit_basic_filter(self, node, children):
         search_key, _, search_value = children
-        field = FIELD_LOOKUP.get(search_key)
         return SearchFilter(
             SearchKey(search_key),
             "=",
-            SearchValue(search_value, field['type'] if field else 'string'),
+            SearchValue(search_value),
         )
 
     def visit_search_key(self, node, children):
@@ -218,7 +154,7 @@ def convert_endpoint_params(params):
         SearchFilter(
             SearchKey(key),
             '=',
-            SearchValue(params[key], FIELD_LOOKUP[key]['type']),
+            SearchValue(params[key]),
         ) for key in params
     ]
 
diff --git a/src/sentry/utils/snuba.py b/src/sentry/utils/snuba.py
index 175c8ef2ba..f7b8b7f37d 100644
--- a/src/sentry/utils/snuba.py
+++ b/src/sentry/utils/snuba.py
@@ -70,6 +70,13 @@ SENTRY_SNUBA_MAP = {
     'stack.colno': 'exception_frames.colno',
     'stack.lineno': 'exception_frames.lineno',
     'stack.stack_level': 'exception_frames.stack_level',
+
+    # misc
+    'release': 'tags[sentry:release]',
+    'message': 'message',
+    'timestamp': 'timestamp',
+    'type': 'type',
+    'platform': 'platform',
 }
 
 
diff --git a/tests/sentry/api/test_event_search.py b/tests/sentry/api/test_event_search.py
index 7301ebfd26..12b71a0a94 100644
--- a/tests/sentry/api/test_event_search.py
+++ b/tests/sentry/api/test_event_search.py
@@ -19,17 +19,17 @@ class EventSearchTest(TestCase):
             SearchFilter(
                 key=SearchKey(name='user.email'),
                 operator="=",
-                value=SearchValue(raw_value='foo@example.com', type='string'),
+                value=SearchValue(raw_value='foo@example.com'),
             ),
             SearchFilter(
                 key=SearchKey(name='release'),
                 operator="=",
-                value=SearchValue(raw_value='1.2.1', type='string'),
+                value=SearchValue(raw_value='1.2.1'),
             ),
             SearchFilter(
                 key=SearchKey(name='message'),
                 operator='=',
-                value=SearchValue(raw_value='hello', type='string'),
+                value=SearchValue(raw_value='hello'),
             )
         ]
 
@@ -38,9 +38,7 @@ class EventSearchTest(TestCase):
             SearchFilter(
                 key=SearchKey(name='message'),
                 operator='=',
-                value=SearchValue(
-                    raw_value='hello user.email:foo@example.com release:1.2.1',
-                    type='string'),
+                value=SearchValue(raw_value='hello user.email:foo@example.com release:1.2.1'),
             ),
         ]
 
@@ -58,7 +56,7 @@ class EventSearchTest(TestCase):
                         0,
                         0,
                         tzinfo=timezone.utc),
-                    type='timestamp'),
+                ),
             ),
         ]
         # test date time format
@@ -75,7 +73,7 @@ class EventSearchTest(TestCase):
                         15,
                         1,
                         tzinfo=timezone.utc),
-                    type='timestamp'),
+                ),
             ),
         ]
 
@@ -94,7 +92,7 @@ class EventSearchTest(TestCase):
                         1,
                         103000,
                         tzinfo=timezone.utc),
-                    type='timestamp'),
+                ),
             ),
         ]
 
@@ -103,7 +101,7 @@ class EventSearchTest(TestCase):
             SearchFilter(
                 key=SearchKey(name='release'),
                 operator='=',
-                value=SearchValue(raw_value='a release', type='string'),
+                value=SearchValue(raw_value='a release'),
             ),
         ]
 
@@ -112,7 +110,7 @@ class EventSearchTest(TestCase):
             SearchFilter(
                 key=SearchKey(name='hi:there'),
                 operator='=',
-                value=SearchValue(raw_value='value', type='string'),
+                value=SearchValue(raw_value='value'),
             ),
         ]
 
@@ -122,7 +120,7 @@ class EventSearchTest(TestCase):
             SearchFilter(
                 key=SearchKey(name='release'),
                 operator='=',
-                value=SearchValue(raw_value='a"thing"', type='string'),
+                value=SearchValue(raw_value='a"thing"'),
             ),
         ]
 
@@ -131,7 +129,7 @@ class EventSearchTest(TestCase):
             SearchFilter(
                 key=SearchKey(name='release'),
                 operator='=',
-                value=SearchValue(raw_value='a\nrelease', type='string')
+                value=SearchValue(raw_value='a\nrelease')
             ),
         ]
         # newline outside quote
@@ -143,7 +141,7 @@ class EventSearchTest(TestCase):
             SearchFilter(
                 key=SearchKey(name='release'),
                 operator='=',
-                value=SearchValue(raw_value='a\trelease', type='string')
+                value=SearchValue(raw_value='a\trelease')
             ),
         ]
         # tab outside quote
@@ -151,12 +149,12 @@ class EventSearchTest(TestCase):
             SearchFilter(
                 key=SearchKey(name='release'),
                 operator='=',
-                value=SearchValue(raw_value='a', type='string'),
+                value=SearchValue(raw_value='a'),
             ),
             SearchFilter(
                 key=SearchKey(name='message'),
                 operator='=',
-                value=SearchValue(raw_value='\trelease', type='string')
+                value=SearchValue(raw_value='\trelease')
             ),
         ]
 
@@ -165,14 +163,14 @@ class EventSearchTest(TestCase):
             SearchFilter(
                 key=SearchKey(name='release'),
                 operator='=',
-                value=SearchValue(raw_value='a"thing"', type='string')
+                value=SearchValue(raw_value='a"thing"')
             ),
         ]
         assert parse_search_query('release:"a\"\"release"') == [
             SearchFilter(
                 key=SearchKey(name='release'),
                 operator='=',
-                value=SearchValue(raw_value='a""release', type='string')
+                value=SearchValue(raw_value='a""release')
             ),
         ]
 
@@ -181,14 +179,14 @@ class EventSearchTest(TestCase):
             SearchFilter(
                 key=SearchKey(name='release'),
                 operator='=',
-                value=SearchValue(raw_value='a release', type='string')
+                value=SearchValue(raw_value='a release')
             ),
         ]
         assert parse_search_query('release:\"a release "') == [
             SearchFilter(
                 key=SearchKey(name='release'),
                 operator='=',
-                value=SearchValue(raw_value='a release ', type='string')
+                value=SearchValue(raw_value='a release ')
             ),
         ]
 
@@ -197,12 +195,12 @@ class EventSearchTest(TestCase):
             SearchFilter(
                 key=SearchKey(name='fruit'),
                 operator='=',
-                value=SearchValue(raw_value='apple', type='string'),
+                value=SearchValue(raw_value='apple'),
             ),
             SearchFilter(
                 key=SearchKey(name='release'),
                 operator='=',
-                value=SearchValue(raw_value='1.2.1', type='string'),
+                value=SearchValue(raw_value='1.2.1'),
             ),
         ]
 
@@ -214,7 +212,7 @@ class EventSearchTest(TestCase):
         }) == {
             'conditions': [
                 ['email', '=', 'foo@example.com'],
-                ['sentry:release', '=', '1.2.1'],
+                ['tags[sentry:release]', '=', '1.2.1'],
                 ['tags[fruit]', '=', 'apple'],
                 [['positionCaseInsensitive', ['message', "'hello'"]], '!=', 0],
             ],
@@ -253,12 +251,12 @@ class EventSearchTest(TestCase):
                         15,
                         1,
                         tzinfo=timezone.utc),
-                    type='timestamp')
+                )
             ),
             SearchFilter(
                 key=SearchKey(name='project_id'),
                 operator='=',
-                value=SearchValue(raw_value=[1, 2, 3], type='list')
+                value=SearchValue(raw_value=[1, 2, 3])
             ),
             SearchFilter(
                 key=SearchKey(name='end'),
@@ -272,6 +270,6 @@ class EventSearchTest(TestCase):
                         15,
                         1,
                         tzinfo=timezone.utc),
-                    type='timestamp')
+                )
             ),
         ]
