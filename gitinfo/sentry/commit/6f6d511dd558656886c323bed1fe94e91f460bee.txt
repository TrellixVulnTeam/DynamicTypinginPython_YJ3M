commit 6f6d511dd558656886c323bed1fe94e91f460bee
Author: David Cramer <dcramer@gmail.com>
Date:   Sun May 4 19:44:05 2014 -0400

    Very rough/simple "maintenance mode" / db failure support

diff --git a/src/sentry/conf/server.py b/src/sentry/conf/server.py
index 1e2f872c47..e9b0188b7d 100644
--- a/src/sentry/conf/server.py
+++ b/src/sentry/conf/server.py
@@ -24,6 +24,7 @@ socket.setdefaulttimeout(5)
 
 DEBUG = False
 TEMPLATE_DEBUG = True
+MAINTENANCE = False
 
 ADMINS = ()
 
@@ -111,6 +112,7 @@ TEMPLATE_LOADERS = (
 )
 
 MIDDLEWARE_CLASSES = (
+    'sentry.middleware.maintenance.ServicesUnavailableMiddleware',
     'sentry.middleware.debug.NoIfModifiedSinceMiddleware',
     'django.middleware.common.CommonMiddleware',
     'django.contrib.sessions.middleware.SessionMiddleware',
@@ -455,6 +457,11 @@ SENTRY_FILTERS = (
     'sentry.filters.StatusFilter',
 )
 
+SENTRY_IGNORE_EXCEPTIONS = (
+    'OperationalError',
+)
+
+
 SENTRY_KEY = None
 
 # Absolute URL to the sentry root directory. Should not include a trailing slash.
diff --git a/src/sentry/middleware/locale.py b/src/sentry/middleware/locale.py
index 0c27e5631e..c05db1a145 100644
--- a/src/sentry/middleware/locale.py
+++ b/src/sentry/middleware/locale.py
@@ -15,6 +15,7 @@ from django.core.urlresolvers import reverse
 
 from sentry.app import env
 from sentry.models import UserOption
+from sentry.utils.safe import safe_execute
 
 
 class SentryLocaleMiddleware(object):
@@ -26,9 +27,12 @@ class SentryLocaleMiddleware(object):
         # bind request to env
         env.request = request
 
-        self.load_user_conf(request)
+        safe_execute(self.load_user_conf, request)
 
     def load_user_conf(self, request):
+        if settings.MAINTENANCE:
+            return
+
         if not request.user.is_authenticated():
             return
 
diff --git a/src/sentry/middleware/maintenance.py b/src/sentry/middleware/maintenance.py
new file mode 100644
index 0000000000..1434d08c16
--- /dev/null
+++ b/src/sentry/middleware/maintenance.py
@@ -0,0 +1,38 @@
+"""
+sentry.middleware.maintenance
+~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
+
+:copyright: (c) 2010-2014 by the Sentry Team, see AUTHORS for more details.
+:license: BSD, see LICENSE for more details.
+"""
+from django.conf import settings
+from django.http import HttpResponse
+
+
+DB_ERRORS = []
+
+try:
+    import MySQLdb
+except ImportError:
+    pass
+else:
+    DB_ERRORS.append(MySQLdb.OperationalError)
+
+try:
+    import psycopg2
+except ImportError:
+    pass
+else:
+    DB_ERRORS.append(psycopg2.OperationalError)
+
+DB_ERRORS = tuple(DB_ERRORS)
+
+
+class ServicesUnavailableMiddleware(object):
+    def process_request(self, request):
+        if settings.MAINTENANCE:
+            return HttpResponse('Sentry is currently in maintenance mode', status=503)
+
+    def process_exception(self, request, exception):
+        if isinstance(exception, DB_ERRORS):
+            return HttpResponse('Sentry is currently in maintenance mode', status=503)
