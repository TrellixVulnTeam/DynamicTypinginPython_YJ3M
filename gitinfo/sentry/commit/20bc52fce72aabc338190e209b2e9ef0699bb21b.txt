commit 20bc52fce72aabc338190e209b2e9ef0699bb21b
Author: Mark Story <mark@sentry.io>
Date:   Mon Dec 9 16:19:05 2019 -0800

    feat(discover) Add support for transaction.status to conditions (#16024)
    
    You can now search transactions by the tracing status name. Integer
    values are not currently accepted as I don't think users should have to
    deal with these values.

diff --git a/src/sentry/api/event_search.py b/src/sentry/api/event_search.py
index 98c919f357..a06061f28c 100644
--- a/src/sentry/api/event_search.py
+++ b/src/sentry/api/event_search.py
@@ -11,6 +11,7 @@ from parsimonious.expressions import Optional
 from parsimonious.exceptions import IncompleteParseError, ParseError
 from parsimonious.nodes import Node
 from parsimonious.grammar import Grammar, NodeVisitor
+from semaphore.consts import SPAN_STATUS_NAME_TO_CODE
 
 from sentry import eventstore
 from sentry.models import Project
@@ -573,6 +574,15 @@ def convert_search_filter_to_snuba_query(search_filter):
         like_value = raw_value.replace("%", "\\%").replace("_", "\\_").replace("*", "%")
         operator = "LIKE" if search_filter.operator == "=" else "NOT LIKE"
         return [name, operator, like_value]
+    elif name == "transaction.status":
+        internal_value = SPAN_STATUS_NAME_TO_CODE.get(search_filter.value.raw_value)
+        if internal_value is None:
+            raise InvalidSearchQuery(
+                "Invalid value for transaction.status condition. Accepted values are {}".format(
+                    ", ".join(SPAN_STATUS_NAME_TO_CODE.keys())
+                )
+            )
+        return [name, search_filter.operator, internal_value]
     else:
         value = (
             int(to_timestamp(value)) * 1000
diff --git a/tests/sentry/api/test_event_search.py b/tests/sentry/api/test_event_search.py
index bdd4ec15d2..6225ed71c5 100644
--- a/tests/sentry/api/test_event_search.py
+++ b/tests/sentry/api/test_event_search.py
@@ -5,6 +5,7 @@ import pytest
 import six
 import unittest
 from datetime import timedelta
+from semaphore.consts import SPAN_STATUS_CODE_TO_NAME
 
 from django.utils import timezone
 from freezegun import freeze_time
@@ -1016,6 +1017,23 @@ class GetSnubaQueryArgsTest(TestCase):
         filter.filter_keys == {"project_id": [p1.id, p2.id]}
         filter.project_ids == [p1.id, p2.id]
 
+    def test_transaction_status(self):
+        for (key, val) in SPAN_STATUS_CODE_TO_NAME.items():
+            result = get_filter("transaction.status:{}".format(val))
+            assert result.conditions == [["transaction.status", "=", key]]
+
+    def test_transaction_status_no_wildcard(self):
+        with pytest.raises(InvalidSearchQuery) as err:
+            get_filter("transaction.status:o*")
+        assert "Invalid value" in six.text_type(err)
+        assert "cancelled," in six.text_type(err)
+
+    def test_transaction_status_invalid(self):
+        with pytest.raises(InvalidSearchQuery) as err:
+            get_filter("transaction.status:lol")
+        assert "Invalid value" in six.text_type(err)
+        assert "cancelled," in six.text_type(err)
+
 
 class ResolveFieldListTest(unittest.TestCase):
     def test_non_string_field_error(self):
