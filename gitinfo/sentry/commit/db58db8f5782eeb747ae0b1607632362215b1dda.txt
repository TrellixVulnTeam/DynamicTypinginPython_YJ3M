commit db58db8f5782eeb747ae0b1607632362215b1dda
Author: Daniel Griesser <daniel.griesser.86@gmail.com>
Date:   Thu Feb 9 12:29:01 2017 +0100

    Add processing issue badge also to html

diff --git a/src/sentry/static/sentry/app/components/badge.jsx b/src/sentry/static/sentry/app/components/badge.jsx
new file mode 100644
index 0000000000..3592848395
--- /dev/null
+++ b/src/sentry/static/sentry/app/components/badge.jsx
@@ -0,0 +1,21 @@
+import React from 'react';
+
+const Badge = React.createClass({
+
+  propTypes: {
+    text: React.PropTypes.string,
+    isNew: React.PropTypes.bool,
+  },
+
+  render() {
+    let className = 'badge';
+    if (this.props.isNew) {
+      className += ' new';
+    }
+    return (
+        <span className={className}>{this.props.text}</span>
+    );
+  }
+});
+
+export default Badge;
diff --git a/src/sentry/static/sentry/app/index.js b/src/sentry/static/sentry/app/index.js
index 4269352773..13d6927add 100644
--- a/src/sentry/static/sentry/app/index.js
+++ b/src/sentry/static/sentry/app/index.js
@@ -107,6 +107,7 @@ export default {
     TodoList: require('./components/todos').default,
     U2fEnrollment: require('./components/u2fenrollment').default,
     U2fSign: require('./components/u2fsign').default,
+    Badge: require('./components/badge').default,
     utils: {
       errorHandler: require('./utils/errorHandler').default,
       logging: require('./utils/logging'),
diff --git a/src/sentry/static/sentry/app/views/projectSettings/index.jsx b/src/sentry/static/sentry/app/views/projectSettings/index.jsx
index 1227b5e857..2f6b0c4ba8 100644
--- a/src/sentry/static/sentry/app/views/projectSettings/index.jsx
+++ b/src/sentry/static/sentry/app/views/projectSettings/index.jsx
@@ -1,6 +1,7 @@
 import React from 'react';
 
 import ApiMixin from '../../mixins/apiMixin';
+import Badge from '../../components/badge';
 import ListLink from '../../components/listLink';
 import LoadingError from '../../components/loadingError';
 import LoadingIndicator from '../../components/loadingIndicator';
@@ -99,7 +100,7 @@ const ProjectSettings = React.createClass({
             <ListLink className="badged" to={`/${orgId}/${projectId}/settings/processing-issues/`}>
               {t('Processing Issues')}
               {processingIssues > 0 &&
-                <span className="badge new">{processingIssues > 99 ? '99+' : processingIssues}</span>
+                <Badge text={processingIssues > 99 ? '99+' : processingIssues} isNew={true} />
               }
             </ListLink>
           </ul>
diff --git a/src/sentry/tasks/store.py b/src/sentry/tasks/store.py
index 03420b0a2d..5dd0978f7d 100644
--- a/src/sentry/tasks/store.py
+++ b/src/sentry/tasks/store.py
@@ -189,10 +189,6 @@ def save_event(cache_key=None, data=None, start_time=None, event_id=None, **kwar
     if cache_key:
         data = default_cache.get(cache_key)
 
-    if event_id is None and data is not None:
-        event_id = data['event_id']
-    delete_raw_event(project, event_id)
-
     if data is None:
         metrics.incr('events.failed', tags={'reason': 'cache', 'stage': 'post'})
         return
@@ -202,6 +198,10 @@ def save_event(cache_key=None, data=None, start_time=None, event_id=None, **kwar
         'project': project,
     })
 
+    if event_id is None and data is not None:
+        event_id = data['event_id']
+    delete_raw_event(project, event_id)
+
     try:
         manager = EventManager(data)
         manager.save(project)
diff --git a/src/sentry/templates/sentry/projects/manage.html b/src/sentry/templates/sentry/projects/manage.html
index 0d42c2dbac..d5303f8712 100644
--- a/src/sentry/templates/sentry/projects/manage.html
+++ b/src/sentry/templates/sentry/projects/manage.html
@@ -203,7 +203,17 @@
         <a href="{% absolute_uri '/{}/{}/settings/debug-symbols/' project.organization.slug project.slug %}">{% trans "Debug Symbols" %}</a>
     </li>
     <li>
-        <a href="{% absolute_uri '/{}/{}/settings/processing-issues/' project.organization.slug project.slug %}">{% trans "Processing Issues" %}</a>
+        <a class="badged" href="{% absolute_uri '/{}/{}/settings/processing-issues/' project.organization.slug project.slug %}">{% trans "Processing Issues" %}
+        <span id="processing-badge"></span>
+        </a>
+        {% if processing_issues > 0 %}
+        <script>
+          ReactDOM.render(React.createElement(Sentry.Badge, {
+            text: '{{ processing_issues|safe }}',
+            isNew: true,
+          }), document.getElementById('processing-badge'));
+        </script>
+        {% endif %}
     </li>
   </ul>
   <h6 class="nav-header">{% trans "Data" %}</h6>
diff --git a/src/sentry/web/frontend/base.py b/src/sentry/web/frontend/base.py
index 97ad426d90..9bf7c074d1 100644
--- a/src/sentry/web/frontend/base.py
+++ b/src/sentry/web/frontend/base.py
@@ -19,6 +19,7 @@ from sentry.models import (
 )
 from sentry.utils import auth
 from sentry.web.helpers import render_to_response
+from sentry.api.serializers import serialize
 
 logger = logging.getLogger(__name__)
 audit_logger = logging.getLogger('sentry.audit.ui')
@@ -460,6 +461,7 @@ class ProjectView(TeamView):
     def get_context_data(self, request, organization, team, project, **kwargs):
         context = super(ProjectView, self).get_context_data(request, organization, team)
         context['project'] = project
+        context['processing_issues'] = serialize(project).get('processingIssues', 0)
         return context
 
     def has_permission(self, request, organization, team, project, *args, **kwargs):
