commit a711c6ab1507267766c6bfb94f33c7df67c5a7ce
Author: David Cramer <dcramer@gmail.com>
Date:   Tue Mar 3 17:59:50 2015 -0800

    Abstract pagination into shared component

diff --git a/src/sentry/static/sentry/app/views/groupEvents/pagination.jsx b/src/sentry/static/sentry/app/components/pagination.jsx
similarity index 80%
rename from src/sentry/static/sentry/app/views/groupEvents/pagination.jsx
rename to src/sentry/static/sentry/app/components/pagination.jsx
index 91175c7a9a..3823b733df 100644
--- a/src/sentry/static/sentry/app/views/groupEvents/pagination.jsx
+++ b/src/sentry/static/sentry/app/components/pagination.jsx
@@ -2,20 +2,16 @@
 var React = require("react");
 var Router = require("react-router");
 
-var utils = require("../../utils");
-
-var GroupEventsPagination = React.createClass({
-  mixins: [Router.Navigation, Router.State],
+var utils = require("../utils");
 
+var Pagination = React.createClass({
   propTypes: {
+    onPage: React.PropTypes.func.isRequired,
     pageLinks: React.PropTypes.string.isRequired,
   },
 
   onPage(cursor) {
-    var queryParams = this.getQuery();
-    queryParams.cursor = cursor;
-
-    this.transitionTo('groupEvents', this.getParams(), queryParams);
+    this.props.onPage(cursor);
   },
 
   render(){
@@ -54,4 +50,4 @@ var GroupEventsPagination = React.createClass({
   }
 });
 
-module.exports = GroupEventsPagination;
+module.exports = Pagination;
diff --git a/src/sentry/static/sentry/app/views/groupEvents.jsx b/src/sentry/static/sentry/app/views/groupEvents.jsx
index 7dd70fb112..ffaa975b0f 100644
--- a/src/sentry/static/sentry/app/views/groupEvents.jsx
+++ b/src/sentry/static/sentry/app/views/groupEvents.jsx
@@ -4,10 +4,10 @@ var React = require("react");
 var Router = require("react-router");
 
 var api = require("../api");
-var GroupEventsPagination = require("./groupEvents/pagination");
 var GroupState = require("../mixins/groupState");
 var LoadingError = require("../components/loadingError");
 var LoadingIndicator = require("../components/loadingIndicator");
+var Pagination = require("../components/pagination");
 var PropTypes = require("../proptypes");
 var TimeSince = require("../components/timeSince");
 
@@ -54,6 +54,13 @@ var GroupEvents = React.createClass({
     });
   },
 
+  onPage(cursor) {
+    var queryParams = this.getQuery();
+    queryParams.cursor = cursor;
+
+    this.transitionTo('groupEvents', this.getParams(), queryParams);
+  },
+
   render() {
     if (this.state.loading) {
       return <LoadingIndicator />;
@@ -92,7 +99,7 @@ var GroupEvents = React.createClass({
           {children}
         </table>
 
-        <GroupEventsPagination pageLinks={this.state.pageLinks} />
+        <Pagination pageLinks={this.state.pageLinks} onPage={this.onPage} />
       </div>
     );
   }
diff --git a/src/sentry/static/sentry/app/views/stream.jsx b/src/sentry/static/sentry/app/views/stream.jsx
index fbb4feb1d7..2e0fe700db 100644
--- a/src/sentry/static/sentry/app/views/stream.jsx
+++ b/src/sentry/static/sentry/app/views/stream.jsx
@@ -9,11 +9,11 @@ var GroupActions = require("../actions/groupActions");
 var GroupListStore = require("../stores/groupStore");
 var LoadingError = require("../components/loadingError");
 var LoadingIndicator = require("../components/loadingIndicator");
+var Pagination = require("../components/pagination");
 var RouteMixin = require("../mixins/routeMixin");
 var StreamGroup = require('./stream/group');
 var StreamActions = require('./stream/actions');
 var StreamFilters = require('./stream/filters');
-var StreamPagination = require('./stream/pagination');
 var utils = require("../utils");
 
 // TODO(dcramer): the poller/collection needs to actually unshift/pop
@@ -67,6 +67,7 @@ StreamPoller.prototype.poll = function() {
 var Stream = React.createClass({
   mixins: [
     Reflux.listenTo(GroupListStore, "onAggListChange"),
+    Router.Navigation,
     Router.State,
     RouteMixin
   ],
@@ -161,21 +162,32 @@ var Stream = React.createClass({
 
     return '/projects/' + params.orgId + '/' + params.projectId + '/groups/?' + querystring;
   },
+
   handleRealtimeChange(event) {
     this.setState({
       realtimeActive: !this.state.realtimeActive
     });
   },
+
   handleSelectStatsPeriod(period) {
     this.setState({
       statsPeriod: period
     });
   },
+
   handleRealtimePoll(data) {
     this.setState({
       groupList: this.state.groupList.unshift(data)
     });
   },
+
+  onPage(cursor) {
+    var queryParams = this.getQuery();
+    queryParams.cursor = cursor;
+
+    this.transitionTo('stream', this.getParams(), queryParams);
+  },
+
   render() {
     var groupNodes = this.state.groupList.map((node) => {
       return <StreamGroup
@@ -213,8 +225,8 @@ var Stream = React.createClass({
             {groupNodes}
           </ul>
         )}
-        <StreamPagination
-          pageLinks={this.state.pageLinks} />
+
+        <Pagination pageLinks={this.state.pageLinks} onPage={this.onPage} />
       </div>
     );
   }
diff --git a/src/sentry/static/sentry/app/views/stream/pagination.jsx b/src/sentry/static/sentry/app/views/stream/pagination.jsx
deleted file mode 100644
index 6433eab78b..0000000000
--- a/src/sentry/static/sentry/app/views/stream/pagination.jsx
+++ /dev/null
@@ -1,57 +0,0 @@
-/*** @jsx React.DOM */
-var React = require("react");
-var Router = require("react-router");
-
-var utils = require("../../utils");
-
-var StreamPagination = React.createClass({
-  mixins: [Router.Navigation, Router.State],
-
-  propTypes: {
-    pageLinks: React.PropTypes.string.isRequired
-  },
-
-  onPage(cursor) {
-    var queryParams = this.getQuery();
-    queryParams.cursor = cursor;
-
-    this.transitionTo('stream', this.getParams(), queryParams);
-  },
-
-  render: function(){
-    if (!this.props.pageLinks) {
-      return <div />;
-    }
-
-    var links = utils.parseLinkHeader(this.props.pageLinks);
-
-    var previousPageClassName = 'btn btn-default btn-lg prev';
-    if (links.previous.results === false) {
-      previousPageClassName += ' disabled';
-    }
-
-    var nextPageClassName = 'btn btn-default btn-lg next';
-    if (links.next.results === false) {
-      nextPageClassName += ' disabled';
-    }
-
-    return (
-      <div className="stream-pagination">
-        <div className="btn-group pull-right">
-          <a className={previousPageClassName}
-             disabled={links.previous.results === false}
-             onClick={this.onPage.bind(this, links.previous.cursor)}>
-            <span title="Previous" className="icon-arrow-left"></span>
-          </a>
-          <a className={nextPageClassName}
-             disabled={links.next.results === false}
-             onClick={this.onPage.bind(this, links.next.cursor)}>
-            <span title="Next" className="icon-arrow-right"></span>
-          </a>
-        </div>
-      </div>
-    );
-  }
-});
-
-module.exports = StreamPagination;
