commit 4fc46c01d000e8c750155b79e961eb3265b2e1ea
Author: David Cramer <dcramer@gmail.com>
Date:   Sun Oct 19 19:18:11 2014 +0200

    Add logging to NotifyEventServiceAction

diff --git a/src/sentry/rules/actions/notify_event_service.py b/src/sentry/rules/actions/notify_event_service.py
index 3e6b1c6eff..58d79f05de 100644
--- a/src/sentry/rules/actions/notify_event_service.py
+++ b/src/sentry/rules/actions/notify_event_service.py
@@ -37,15 +37,18 @@ class NotifyEventServiceAction(EventAction):
         service = self.get_option('service')
 
         if not service:
+            self.logger.info('Rule has no service configured')
             return
 
         plugin = plugins.get(service)
         if not plugin.is_enabled(self.project):
+            self.logger.info('Rule is configured against disabled service')
             return
 
         group = event.group
 
         if not plugin.should_notify(group=group, event=event):
+            self.logger.info('Rule failed should_notify check')
             return
 
         plugin.notify_users(group=group, event=event)
diff --git a/src/sentry/rules/base.py b/src/sentry/rules/base.py
index f1315af309..169af66192 100644
--- a/src/sentry/rules/base.py
+++ b/src/sentry/rules/base.py
@@ -37,6 +37,7 @@ by the rule's logic. Each rule condition may be associated with a form.
 
 from __future__ import absolute_import
 
+import logging
 import re
 
 from django.utils.html import escape
@@ -54,6 +55,8 @@ class RuleBase(object):
     label = None
     form_cls = None
 
+    logger = logging.getLogger('sentry.rules')
+
     __metaclass__ = RuleDescriptor
 
     def __init__(self, project, data=None):
