commit 0b18486ed09a53d0d4a9e441cfc33802b930dc01
Author: Lyn Nagara <lyn.nagara@gmail.com>
Date:   Wed Dec 13 11:53:00 2017 -0800

    fix(api): Fix capitalization of scrubIPAddresses to match org endpoint

diff --git a/src/sentry/api/endpoints/project_details.py b/src/sentry/api/endpoints/project_details.py
index fdf028a2c4..27061f2d6a 100644
--- a/src/sentry/api/endpoints/project_details.py
+++ b/src/sentry/api/endpoints/project_details.py
@@ -91,7 +91,7 @@ class ProjectAdminSerializer(ProjectMemberSerializer):
     dataScrubberDefaults = serializers.BooleanField(required=False)
     sensitiveFields = ListField(child=serializers.CharField(), required=False)
     safeFields = ListField(child=serializers.CharField(), required=False)
-    scrubIpAddresses = serializers.BooleanField(required=False)
+    scrubIPAddresses = serializers.BooleanField(required=False)
     scrapeJavaScript = serializers.BooleanField(required=False)
     allowedDomains = ListField(child=OriginField(), required=False)
     resolveAge = serializers.IntegerField(required=False)
@@ -296,8 +296,8 @@ class ProjectDetailsEndpoint(ProjectEndpoint):
                                   result['subjectTemplate'])
         if result.get('defaultEnvironment') is not None:
             project.update_option('sentry:default_environment', result['defaultEnvironment'])
-        if result.get('scrubIpAddresses') is not None:
-            project.update_option('sentry:scrub_ip_address', result['scrubIpAddresses'])
+        if result.get('scrubIPAddresses') is not None:
+            project.update_option('sentry:scrub_ip_address', result['scrubIPAddresses'])
         if result.get('securityToken') is not None:
             project.update_option('sentry:token', result['securityToken'])
         if result.get('securityTokenHeader') is not None:
diff --git a/src/sentry/api/serializers/models/project.py b/src/sentry/api/serializers/models/project.py
index 19c9e5c350..a59c14fb79 100644
--- a/src/sentry/api/serializers/models/project.py
+++ b/src/sentry/api/serializers/models/project.py
@@ -339,7 +339,7 @@ class DetailedProjectSerializer(ProjectWithTeamSerializer):
                 'securityToken': attrs['options'].get('sentry:token') or obj.get_security_token(),
                 'securityTokenHeader': attrs['options'].get('sentry:token_header'),
                 'verifySSL': bool(attrs['options'].get('sentry:verify_ssl', False)),
-                'scrubIpAddresses': bool(attrs['options'].get('sentry:scrub_ip_address', False)),
+                'scrubIPAddresses': bool(attrs['options'].get('sentry:scrub_ip_address', False)),
                 'scrapeJavaScript': bool(attrs['options'].get('sentry:scrape_javascript', True)),
                 'organization':
                 attrs['org'],
diff --git a/src/sentry/static/sentry/app/views/projectGeneralSettings.jsx b/src/sentry/static/sentry/app/views/projectGeneralSettings.jsx
index 39cde3eab5..df271647f7 100644
--- a/src/sentry/static/sentry/app/views/projectGeneralSettings.jsx
+++ b/src/sentry/static/sentry/app/views/projectGeneralSettings.jsx
@@ -161,7 +161,7 @@ export default class ProjectGeneralSettings extends AsyncView {
       safeFields: project.safeFields,
       defaultEnvironment: project.defaultEnvironment,
       subjectPrefix: project.subjectPrefix,
-      scrubIpAddresses: project.scrubIpAddresses,
+      scrubIPAddresses: project.scrubIPAddresses,
       securityToken: project.securityToken,
       securityHeader: project.securityHeader,
       securityTokenHeader: project.securityTokenHeader,
@@ -295,7 +295,7 @@ export default class ProjectGeneralSettings extends AsyncView {
                 placeholder={t('e.g. email')}
               />
               <BooleanField
-                name="scrubIpAddresses"
+                name="scrubIPAddresses"
                 label={t("Don't store IP Addresses")}
                 help={t('Prevent IP addresses from being stored for new events.')}
               />
diff --git a/tests/sentry/api/endpoints/test_project_details.py b/tests/sentry/api/endpoints/test_project_details.py
index c9ddc88d6d..57d4c4a61e 100644
--- a/tests/sentry/api/endpoints/test_project_details.py
+++ b/tests/sentry/api/endpoints/test_project_details.py
@@ -306,18 +306,18 @@ class ProjectUpdateTest(APITestCase):
 
     def test_scrub_ip_address(self):
         resp = self.client.put(self.path, data={
-            'scrubIpAddresses': True,
+            'scrubIPAddresses': True,
         })
         assert resp.status_code == 200, resp.content
         assert self.project.get_option('sentry:scrub_ip_address') is True
-        assert resp.data['scrubIpAddresses'] is True
+        assert resp.data['scrubIPAddresses'] is True
 
         resp = self.client.put(self.path, data={
-            'scrubIpAddresses': False,
+            'scrubIPAddresses': False,
         })
         assert resp.status_code == 200, resp.content
         assert self.project.get_option('sentry:scrub_ip_address') is False
-        assert resp.data['scrubIpAddresses'] is False
+        assert resp.data['scrubIPAddresses'] is False
 
     def test_scrape_javascript(self):
         resp = self.client.put(self.path, data={
