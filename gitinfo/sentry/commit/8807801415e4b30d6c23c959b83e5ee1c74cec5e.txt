commit 8807801415e4b30d6c23c959b83e5ee1c74cec5e
Author: Jess MacQueen <jess@getsentry.com>
Date:   Thu May 5 18:34:33 2016 -0700

    rename file, take some of matt's suggestions

diff --git a/src/sentry/api/endpoints/user_option.py b/src/sentry/api/endpoints/useravatar.py
similarity index 91%
rename from src/sentry/api/endpoints/user_option.py
rename to src/sentry/api/endpoints/useravatar.py
index 39099f1d5d..77c72867ff 100644
--- a/src/sentry/api/endpoints/user_option.py
+++ b/src/sentry/api/endpoints/useravatar.py
@@ -1,7 +1,5 @@
 from __future__ import absolute_import
 
-import StringIO
-
 from PIL import Image
 
 from rest_framework import status
@@ -10,12 +8,14 @@ from rest_framework.response import Response
 from sentry.api.bases.user import UserEndpoint
 from sentry.api.serializers import serialize
 from sentry.models import UserAvatar, File
+from sentry.utils.compat import StringIO
 
 
 MIN_DIMENSION = 256
 
 MAX_DIMENSION = 1024
 
+
 class UserAvatarEndpoint(UserEndpoint):
     FILE_TYPE = 'avatar.file'
 
@@ -39,13 +39,13 @@ class UserAvatarEndpoint(UserEndpoint):
         photo = None
         if photo_string:
             photo_string = photo_string.decode('base64')
-            with Image.open(StringIO.StringIO(photo_string)) as img:
+            with Image.open(StringIO(photo_string)) as img:
                 width, height = img.size
                 if not self.is_valid_size(width, height):
                     return Response(status=status.HTTP_400_BAD_REQUEST)
             file_name = '%s.png' % user.id
             photo = File.objects.create(name=file_name, type=self.FILE_TYPE)
-            photo.putfile(StringIO.StringIO(photo_string))
+            photo.putfile(StringIO(photo_string))
 
         avatar, _ = UserAvatar.objects.get_or_create(user=user)
         if avatar.file and photo:
diff --git a/src/sentry/api/urls.py b/src/sentry/api/urls.py
index 994e1230de..177f31e378 100644
--- a/src/sentry/api/urls.py
+++ b/src/sentry/api/urls.py
@@ -77,7 +77,7 @@ from .endpoints.team_project_index import TeamProjectIndexEndpoint
 from .endpoints.team_stats import TeamStatsEndpoint
 from .endpoints.user_index import UserIndexEndpoint
 from .endpoints.user_details import UserDetailsEndpoint
-from .endpoints.user_option import UserAvatarEndpoint
+from .endpoints.useravatar import UserAvatarEndpoint
 from .endpoints.user_organizations import UserOrganizationsEndpoint
 
 
diff --git a/src/sentry/models/useravatar.py b/src/sentry/models/useravatar.py
index 839f8122b3..ad444a3576 100644
--- a/src/sentry/models/useravatar.py
+++ b/src/sentry/models/useravatar.py
@@ -1,6 +1,5 @@
 from __future__ import absolute_import
 
-import StringIO
 import uuid
 
 from PIL import Image
@@ -9,6 +8,8 @@ from django.db import models
 
 from sentry.db.models import FlexibleForeignKey, Model
 from sentry.utils.cache import cache
+from sentry.utils.compat import StringIO
+
 
 class UserAvatar(Model):
     """
@@ -48,8 +49,7 @@ class UserAvatar(Model):
         return 'avatar:%s:%s' % (self.user_id, size)
 
     def clear_cached_photos(self):
-        for size in self.ALLOWED_SIZES:
-            cache.delete(self.get_cache_key(size))
+        cache.delete_many(map(self.get_cache_key, self.ALLOWED_SIZES))
 
     def get_cached_photo(self, size):
         if not self.file:
@@ -62,7 +62,7 @@ class UserAvatar(Model):
             photo_file = self.file.getfile()
             with Image.open(photo_file) as image:
                 image = image.resize((size, size))
-                image_file = StringIO.StringIO()
+                image_file = StringIO()
                 image.save(image_file, 'PNG')
                 photo_file = image_file.getvalue()
                 cache.set(cache_key, photo_file)
