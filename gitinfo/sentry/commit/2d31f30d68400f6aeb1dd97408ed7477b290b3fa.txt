commit 2d31f30d68400f6aeb1dd97408ed7477b290b3fa
Author: Taylan Gocmen <taylangocmen@users.noreply.github.com>
Date:   Thu Jun 18 20:11:26 2020 -0700

    feat(alerts): Open in Discover opens discover results with Top 5 selected (#19436)
    
    * pass top 5 as parameter to view in discover query
    
    * dont set preset if incident is undefined
    
    * use display modes top5

diff --git a/src/sentry/static/sentry/app/views/settings/incidentRules/presets.tsx b/src/sentry/static/sentry/app/views/settings/incidentRules/presets.tsx
index 329cd5b92a..f67d3f248c 100644
--- a/src/sentry/static/sentry/app/views/settings/incidentRules/presets.tsx
+++ b/src/sentry/static/sentry/app/views/settings/incidentRules/presets.tsx
@@ -2,6 +2,7 @@ import {t} from 'app/locale';
 import {Incident, IncidentStats} from 'app/views/alerts/types';
 import {Project} from 'app/types';
 import Link from 'app/components/links/link';
+import {DisplayModes} from 'app/utils/discover/types';
 import {tokenizeSearch} from 'app/utils/tokenizeSearch';
 import {transactionSummaryRouteWithQuery} from 'app/views/performance/transactionSummary/utils';
 import {getIncidentDiscoverUrl, getStartEndFromStats} from 'app/views/alerts/utils';
@@ -172,7 +173,7 @@ function makeGenericTransactionCta(opts: {
   const extraQueryParams = {
     fields: [...new Set(['transaction', 'count()', incident.alertRule.aggregate])],
     orderby: '-count',
-    display: 'top5',
+    display: DisplayModes.TOP5,
   };
 
   const discoverUrl = getIncidentDiscoverUrl({
@@ -214,13 +215,13 @@ function makeFailureRateCta({orgSlug, incident, projects, stats}: PresetCtaOpts)
         {
           fields: ['transaction.status', 'count()'],
           orderby: '-count',
-          display: 'top5',
+          display: DisplayModes.TOP5,
         }
       : // Case 2
         {
           fields: ['transaction', 'failure_rate()'],
           orderby: '-failure_rate',
-          display: 'top5',
+          display: DisplayModes.TOP5,
         };
 
   const discoverUrl = getIncidentDiscoverUrl({
@@ -247,8 +248,19 @@ export function makeDefaultCta({
   incident,
   stats,
 }: PresetCtaOpts): PresetCta {
+  if (!incident) {
+    return {
+      buttonText: t('Open in Discover'),
+      to: '',
+    };
+  }
+
+  const extraQueryParams = {
+    display: DisplayModes.TOP5,
+  };
+
   return {
     buttonText: t('Open in Discover'),
-    to: getIncidentDiscoverUrl({orgSlug, projects, incident, stats}),
+    to: getIncidentDiscoverUrl({orgSlug, projects, incident, stats, extraQueryParams}),
   };
 }
diff --git a/tests/js/spec/views/settings/incidentRules/presets.spec.jsx b/tests/js/spec/views/settings/incidentRules/presets.spec.jsx
index 3b527c7915..8b8dc87def 100644
--- a/tests/js/spec/views/settings/incidentRules/presets.spec.jsx
+++ b/tests/js/spec/views/settings/incidentRules/presets.spec.jsx
@@ -1,5 +1,6 @@
 import {initializeOrg} from 'sentry-test/initializeOrg';
 
+import {DisplayModes} from 'app/utils/discover/types';
 import {Dataset} from 'app/views/settings/incidentRules/types';
 import {PRESET_AGGREGATES} from 'app/views/settings/incidentRules/presets';
 import {getIncidentDiscoverUrl} from 'app/views/alerts/utils';
@@ -61,6 +62,9 @@ describe('Incident Presets', function() {
         projects,
         incident,
         stats: mockStats,
+        extraQueryParams: {
+          display: DisplayModes.TOP5,
+        },
       });
 
       expect(cta).toEqual(
@@ -95,6 +99,9 @@ describe('Incident Presets', function() {
         projects,
         incident,
         stats: mockStats,
+        extraQueryParams: {
+          display: DisplayModes.TOP5,
+        },
       });
 
       expect(cta).toEqual(
@@ -132,7 +139,7 @@ describe('Incident Presets', function() {
           incident,
           stats: mockStats,
           extraQueryParams: {
-            display: 'top5',
+            display: DisplayModes.TOP5,
             fields: ['transaction', 'count()', 'p95()'],
             orderby: '-count',
           },
@@ -211,7 +218,7 @@ describe('Incident Presets', function() {
           incident,
           stats: mockStats,
           extraQueryParams: {
-            display: 'top5',
+            display: DisplayModes.TOP5,
             fields: ['transaction', 'count()', 'apdex(300)'],
             orderby: '-count',
           },
@@ -290,7 +297,7 @@ describe('Incident Presets', function() {
           incident,
           stats: mockStats,
           extraQueryParams: {
-            display: 'top5',
+            display: DisplayModes.TOP5,
             fields: ['transaction', 'count()'],
             orderby: '-count',
           },
@@ -367,7 +374,7 @@ describe('Incident Presets', function() {
           incident,
           stats: mockStats,
           extraQueryParams: {
-            display: 'top5',
+            display: DisplayModes.TOP5,
             fields: ['transaction', 'failure_rate()'],
             orderby: '-failure_rate',
           },
@@ -406,7 +413,7 @@ describe('Incident Presets', function() {
           incident,
           stats: mockStats,
           extraQueryParams: {
-            display: 'top5',
+            display: DisplayModes.TOP5,
             fields: ['transaction.status', 'count()'],
             orderby: '-count',
           },
