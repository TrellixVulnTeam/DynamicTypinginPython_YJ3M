commit 7e7ed22f053a6de82545051282cde7e9a9f80f66
Author: David Cramer <dcramer@gmail.com>
Date:   Tue Dec 27 22:37:24 2011 -0800

    Moved delete/merge logic for Project into model methods

diff --git a/sentry/models.py b/sentry/models.py
index f53521f14f..1eb9acdfdf 100644
--- a/sentry/models.py
+++ b/sentry/models.py
@@ -71,6 +71,20 @@ class Project(Model):
 
     objects = ProjectManager()
 
+    def delete(self):
+        # This hadles cascades properly
+        # TODO: this doesnt clean up the index
+        for model in (Event, Group, FilterValue, MessageFilterValue, MessageCountByMinute):
+            model.objects.filter(project=self).delete()
+
+    def merge_to(self, project):
+        for model in (Event, Group, MessageFilterValue, MessageCountByMinute):
+            model.objects.filter(project=self).update(project=project)
+        for fv in FilterValue.objects.filter(project=self):
+            FilterValue.objects.get_or_create(project=project, key=fv.key, value=fv.value)
+            fv.delete()
+        self.delete()
+
 
 class ProjectMember(Model):
     project = models.ForeignKey(Project, related_name="member_set")
diff --git a/sentry/web/frontend/projects.py b/sentry/web/frontend/projects.py
index 1a846e1cb5..d2a432c3a4 100644
--- a/sentry/web/frontend/projects.py
+++ b/sentry/web/frontend/projects.py
@@ -54,18 +54,10 @@ def remove_project(request, project):
     if form.is_valid():
         removal_type = form.cleaned_data['removal_type']
         if removal_type == '1':
-            # TODO: this doesnt clean up the index
-            for model in (Event, Group, FilterValue, MessageFilterValue, MessageCountByMinute):
-                model.objects.filter(project=project).delete()
             project.delete()
         elif removal_type == '2':
             new_project = form.cleaned_data['project']
-            for model in (Event, Group, MessageFilterValue, MessageCountByMinute):
-                model.objects.filter(project=project).update(project=new_project)
-            for fv in FilterValue.objects.filter(project=project):
-                FilterValue.objects.get_or_create(project=project, key=fv.key, value=fv.value)
-                fv.delete()
-            project.delete()
+            project.merge_to(new_project)
         elif removal_type == '3':
             project.update(status=1)
         else:
