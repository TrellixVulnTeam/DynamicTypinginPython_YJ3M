commit 38f1cb2367f83610dc35dd4d4bbc20212ed859de
Author: William Mak <william@wmak.io>
Date:   Thu May 14 15:27:42 2020 -0400

    fix(perf-views): Pass date/env between the perf views (#18830)
    
    - This allows the transaction view to have the same header as the
      performance view

diff --git a/src/sentry/static/sentry/app/views/performance/table.tsx b/src/sentry/static/sentry/app/views/performance/table.tsx
index 04ad8548b0..3afb2426d7 100644
--- a/src/sentry/static/sentry/app/views/performance/table.tsx
+++ b/src/sentry/static/sentry/app/views/performance/table.tsx
@@ -1,5 +1,5 @@
 import React from 'react';
-import {Location, LocationDescriptorObject} from 'history';
+import {Location, LocationDescriptorObject, Query} from 'history';
 import omit from 'lodash/omit';
 import styled from '@emotion/styled';
 import {browserHistory} from 'react-router';
@@ -65,13 +65,16 @@ class Table extends React.Component<Props> {
       return cells;
     }
     const columnOrder = this.props.eventView.getColumns();
+    const query = this.props.eventView.generateQueryStringObject();
 
     tableData.data.forEach((row, index: number) => {
       // check again to appease tsc
       if (!tableData.meta) {
         return;
       }
-      cells = cells.concat(this.renderRow(row, index, columnOrder, tableData.meta));
+      cells = cells.concat(
+        this.renderRow(row, index, columnOrder, tableData.meta, query)
+      );
     });
     return cells;
   }
@@ -80,7 +83,8 @@ class Table extends React.Component<Props> {
     row: TableDataRow,
     rowIndex: number,
     columnOrder: TableColumn<React.ReactText>[],
-    tableMeta: MetaType
+    tableMeta: MetaType,
+    query: Query
   ) {
     const {organization, location, projects} = this.props;
 
@@ -98,11 +102,11 @@ class Table extends React.Component<Props> {
       if (isFirstCell) {
         // the first column of the row should link to the transaction summary view
         const projectID = getProjectID(row, projects);
-
         const target = transactionSummaryRouteWithEventView({
           orgSlug: organization.slug,
           transaction: String(row.transaction) || '',
           projectID,
+          query,
         });
 
         rendered = (
diff --git a/src/sentry/static/sentry/app/views/performance/transactionSummary/breadcrumb.tsx b/src/sentry/static/sentry/app/views/performance/transactionSummary/breadcrumb.tsx
index 5136a575aa..7b5a81d995 100644
--- a/src/sentry/static/sentry/app/views/performance/transactionSummary/breadcrumb.tsx
+++ b/src/sentry/static/sentry/app/views/performance/transactionSummary/breadcrumb.tsx
@@ -41,6 +41,7 @@ class Breadcrumb extends React.Component<Props> {
       orgSlug: organization.slug,
       transaction: transactionName,
       projectID: eventView.project.map(id => String(id)),
+      query: eventView.generateQueryStringObject(),
     });
 
     crumbs.push({
diff --git a/src/sentry/static/sentry/app/views/performance/transactionSummary/utils.tsx b/src/sentry/static/sentry/app/views/performance/transactionSummary/utils.tsx
index f857c9cb6c..aa87409892 100644
--- a/src/sentry/static/sentry/app/views/performance/transactionSummary/utils.tsx
+++ b/src/sentry/static/sentry/app/views/performance/transactionSummary/utils.tsx
@@ -1,27 +1,33 @@
+import {Query} from 'history';
+
 export function generateTransactionSummaryRoute({orgSlug}: {orgSlug: String}): string {
   return `/organizations/${orgSlug}/performance/summary/`;
 }
 
 export function transactionSummaryRouteWithEventView({
   orgSlug,
-  projectID,
   transaction,
+  projectID,
+  query,
 }: {
   orgSlug: string;
-  projectID: string | string[] | undefined;
   transaction: string;
+  projectID: string | string[] | undefined;
+  query: Query;
 }) {
   const pathname = generateTransactionSummaryRoute({
     orgSlug,
   });
 
-  const query = {
-    project: projectID,
-    transaction,
-  };
-
   return {
     pathname,
-    query,
+    query: {
+      transaction,
+      project: projectID,
+      environment: query.environment,
+      statsPeriod: query.statsPeriod,
+      start: query.start,
+      end: query.end,
+    },
   };
 }
