commit 71825f5ca6b85f2af2db1ba3fd3f718040afe748
Author: Lyn Nagara <lyn.nagara@gmail.com>
Date:   Tue Dec 4 12:00:57 2018 -0800

    feat(discover): Add empty state to result table when no results (#10818)

diff --git a/src/sentry/static/sentry/app/components/emptyStateWarning.jsx b/src/sentry/static/sentry/app/components/emptyStateWarning.jsx
index 1811833a18..b03aad9aa3 100644
--- a/src/sentry/static/sentry/app/components/emptyStateWarning.jsx
+++ b/src/sentry/static/sentry/app/components/emptyStateWarning.jsx
@@ -1,8 +1,31 @@
+import PropTypes from 'prop-types';
 import React from 'react';
 import styled from 'react-emotion';
 
+import InlineSvg from 'app/components/inlineSvg';
+import EmptyMessage from 'app/views/settings/components/emptyMessage';
+
 class EmptyStateWarning extends React.Component {
+  static propTypes = {
+    small: PropTypes.bool,
+  };
+
+  static defaultProps = {
+    small: false,
+  };
+
   render() {
+    if (this.props.small) {
+      return (
+        <EmptyMessage>
+          <SmallMessage>
+            <InlineSvg src="icon-circle-exclamation" width="34px" />
+            {this.props.children}
+          </SmallMessage>
+        </EmptyMessage>
+      );
+    }
+
     return (
       <EmptyStreamWrapper className="ref-empty-state">
         <Icon className="icon icon-exclamation" />
@@ -34,4 +57,12 @@ const Icon = styled.div`
   opacity: 0.45;
 `;
 
+const SmallMessage = styled('div')`
+  display: flex;
+  align-items: center;
+  color: ${p => p.theme.gray2};
+  font-size: ${p => p.theme.fontSizeExtraLarge};
+  line-height: 1em;
+`;
+
 export default EmptyStateWarning;
diff --git a/src/sentry/static/sentry/app/views/organizationDiscover/result/table.jsx b/src/sentry/static/sentry/app/views/organizationDiscover/result/table.jsx
index 91f8a03d02..1b74286727 100644
--- a/src/sentry/static/sentry/app/views/organizationDiscover/result/table.jsx
+++ b/src/sentry/static/sentry/app/views/organizationDiscover/result/table.jsx
@@ -7,6 +7,8 @@ import SentryTypes from 'app/sentryTypes';
 import Link from 'app/components/link';
 import Tooltip from 'app/components/tooltip';
 import Panel from 'app/components/panels/panel';
+import EmptyStateWarning from 'app/components/emptyStateWarning';
+
 import {getDisplayValue, getDisplayText} from './utils';
 
 const TABLE_ROW_HEIGHT = 30;
@@ -237,38 +239,43 @@ export default class ResultTable extends React.Component {
     const cellRenderer = this.getCellRenderer(cols);
 
     return (
-      <GridContainer visibleRows={Math.min(data.length, visibleRows) + 1}>
-        <AutoSizer>
-          {size => {
-            const columnWidths = this.getColumnWidths(size.width);
-
-            // Since calculating row height might be expensive, we'll only
-            // perform the check against a subset of columns (where col width
-            // has exceeded the max value)
-            const columnsToCheck = columnWidths.reduce((acc, colWidth, idx) => {
-              if (colWidth === MAX_COL_WIDTH) {
-                acc.push(cols[idx].name);
-              }
-              return acc;
-            }, []);
-
-            return (
-              <MultiGrid
-                ref={ref => (this.grid = ref)}
-                width={size.width - 1}
-                height={size.height}
-                rowCount={data.length + 1}
-                columnCount={colCount}
-                fixedRowCount={1}
-                rowHeight={({index}) => this.getRowHeight(index, columnsToCheck)}
-                columnWidth={({index}) => columnWidths[index]}
-                cellRenderer={cellRenderer}
-                overscanByPixels={800}
-              />
-            );
-          }}
-        </AutoSizer>
-      </GridContainer>
+      <Panel>
+        <Grid visibleRows={Math.min(data.length, visibleRows) + 1}>
+          <AutoSizer>
+            {size => {
+              const columnWidths = this.getColumnWidths(size.width);
+
+              // Since calculating row height might be expensive, we'll only
+              // perform the check against a subset of columns (where col width
+              // has exceeded the max value)
+              const columnsToCheck = columnWidths.reduce((acc, colWidth, idx) => {
+                if (colWidth === MAX_COL_WIDTH) {
+                  acc.push(cols[idx].name);
+                }
+                return acc;
+              }, []);
+
+              return (
+                <MultiGrid
+                  ref={ref => (this.grid = ref)}
+                  width={size.width - 1}
+                  height={size.height}
+                  rowCount={data.length + 1}
+                  columnCount={colCount}
+                  fixedRowCount={1}
+                  rowHeight={({index}) => this.getRowHeight(index, columnsToCheck)}
+                  columnWidth={({index}) => columnWidths[index]}
+                  cellRenderer={cellRenderer}
+                  overscanByPixels={800}
+                />
+              );
+            }}
+          </AutoSizer>
+        </Grid>
+        {!data.length && (
+          <EmptyStateWarning small={true}>{t('No results')}</EmptyStateWarning>
+        )}
+      </Panel>
     );
   }
 
@@ -283,7 +290,7 @@ export default class ResultTable extends React.Component {
   }
 }
 
-const GridContainer = styled(({visibleRows, ...props}) => <Panel {...props} />)`
+const Grid = styled(({visibleRows, ...props}) => <div {...props} />)`
   height: ${p =>
     p.visibleRows * TABLE_ROW_HEIGHT_WITH_BORDER +
     2}px; /* cell height + cell border + top and bottom Panel border */
diff --git a/tests/js/spec/views/__snapshots__/projectDebugFiles.spec.jsx.snap b/tests/js/spec/views/__snapshots__/projectDebugFiles.spec.jsx.snap
index 46e744cb11..1879854e15 100644
--- a/tests/js/spec/views/__snapshots__/projectDebugFiles.spec.jsx.snap
+++ b/tests/js/spec/views/__snapshots__/projectDebugFiles.spec.jsx.snap
@@ -207,7 +207,9 @@ exports[`ProjectDebugFiles renders 1`] = `
           <div
             className="css-9vq8an-textStyles"
           >
-            <EmptyStateWarning>
+            <EmptyStateWarning
+              small={false}
+            >
               <EmptyStreamWrapper
                 className="ref-empty-state"
               >
@@ -282,7 +284,9 @@ exports[`ProjectDebugFiles renders empty 1`] = `
       disablePadding={true}
       flex={false}
     >
-      <EmptyStateWarning>
+      <EmptyStateWarning
+        small={false}
+      >
         <p>
           There are no debug symbols for this project.
         </p>
diff --git a/tests/js/spec/views/__snapshots__/projectSavedSearches.spec.jsx.snap b/tests/js/spec/views/__snapshots__/projectSavedSearches.spec.jsx.snap
index 47ec03566b..a5662924ab 100644
--- a/tests/js/spec/views/__snapshots__/projectSavedSearches.spec.jsx.snap
+++ b/tests/js/spec/views/__snapshots__/projectSavedSearches.spec.jsx.snap
@@ -1023,7 +1023,9 @@ exports[`ProjectSavedSearches renders empty 1`] = `
                 <div
                   className="css-9vq8an-textStyles"
                 >
-                  <EmptyStateWarning>
+                  <EmptyStateWarning
+                    small={false}
+                  >
                     <EmptyStreamWrapper
                       className="ref-empty-state"
                     >
