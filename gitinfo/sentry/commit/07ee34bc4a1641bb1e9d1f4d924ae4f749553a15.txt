commit 07ee34bc4a1641bb1e9d1f4d924ae4f749553a15
Author: Ben Vinegar <ben@benv.ca>
Date:   Wed May 18 14:05:09 2016 -0700

    Reject tag values w/ newline character (fixes #3254)
    
    /cc @getsentry/api

diff --git a/src/sentry/coreapi.py b/src/sentry/coreapi.py
index 58255e254c..99c5ccddf3 100644
--- a/src/sentry/coreapi.py
+++ b/src/sentry/coreapi.py
@@ -30,7 +30,7 @@ from sentry.constants import (
 )
 from sentry.interfaces.base import get_interface, InterfaceValidationError
 from sentry.interfaces.csp import Csp
-from sentry.models import EventError, Project, ProjectKey, TagKey
+from sentry.models import EventError, Project, ProjectKey, TagKey, TagValue
 from sentry.tasks.store import preprocess_event
 from sentry.utils import json
 from sentry.utils.auth import parse_auth_header
@@ -510,6 +510,15 @@ class ClientApiHelper(object):
                     })
                     continue
 
+                if not TagValue.is_valid_value(v):
+                    self.log.info('Discard invalid tag value: %s', v)
+                    data['errors'].append({
+                        'type': EventError.INVALID_DATA,
+                        'name': 'tags',
+                        'value': pair,
+                    })
+                    continue
+
                 tags.append((k, v))
             data['tags'] = tags
 
diff --git a/src/sentry/models/tagvalue.py b/src/sentry/models/tagvalue.py
index 667ae0210e..05ee7567f9 100644
--- a/src/sentry/models/tagvalue.py
+++ b/src/sentry/models/tagvalue.py
@@ -44,6 +44,10 @@ class TagValue(Model):
 
     __repr__ = sane_repr('project_id', 'key', 'value')
 
+    @classmethod
+    def is_valid_value(self, value):
+        return '\n' not in value
+
     def get_label(self):
         # HACK(dcramer): quick and dirty way to hack in better display states
         if self.key == 'sentry:user':
diff --git a/tests/sentry/coreapi/tests.py b/tests/sentry/coreapi/tests.py
index 9ce08b7d68..84379b93e8 100644
--- a/tests/sentry/coreapi/tests.py
+++ b/tests/sentry/coreapi/tests.py
@@ -302,6 +302,17 @@ class ValidateDataTest(BaseAPITest):
         assert data['errors'][0]['name'] == 'tags'
         assert data['errors'][0]['value'] == ('release', 'abc123')
 
+    def test_tag_value(self):
+        data = self.helper.validate_data(self.project, {
+            'message': 'foo',
+            'tags': [('foo', 'bar\n'), ('biz', 'baz')],
+        })
+        assert data['tags'] == [('biz', 'baz')]
+        assert len(data['errors']) == 1
+        assert data['errors'][0]['type'] == 'invalid_data'
+        assert data['errors'][0]['name'] == 'tags'
+        assert data['errors'][0]['value'] == ('foo', 'bar\n')
+
     def test_extra_as_string(self):
         data = self.helper.validate_data(self.project, {
             'message': 'foo',
