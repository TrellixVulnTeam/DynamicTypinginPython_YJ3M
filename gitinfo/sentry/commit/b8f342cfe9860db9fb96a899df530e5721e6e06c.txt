commit b8f342cfe9860db9fb96a899df530e5721e6e06c
Author: Mark Story <mark@sentry.io>
Date:   Fri Apr 3 10:07:37 2020 -0400

    ref(discover) Extract URL generation functions into a utils module (#18055)
    
    Remove cross views imports by adding an non-views module for discover
    URL generation functions. Remove some duplicate logic and use existing
    functions instead.

diff --git a/src/sentry/static/sentry/app/components/events/interfaces/spans/spanDetail.tsx b/src/sentry/static/sentry/app/components/events/interfaces/spans/spanDetail.tsx
index 29bdaebc59..d98ef61a43 100644
--- a/src/sentry/static/sentry/app/components/events/interfaces/spans/spanDetail.tsx
+++ b/src/sentry/static/sentry/app/components/events/interfaces/spans/spanDetail.tsx
@@ -11,10 +11,7 @@ import space from 'app/styles/space';
 import withApi from 'app/utils/withApi';
 import {Client} from 'app/api';
 import Button from 'app/components/button';
-import {
-  generateEventSlug,
-  generateEventDetailsRoute,
-} from 'app/views/eventsV2/eventDetails/utils';
+import {generateEventSlug, eventDetailsRoute} from 'app/utils/discover/urls';
 import EventView from 'app/utils/discover/eventView';
 import getDynamicText from 'app/utils/getDynamicText';
 import {assert} from 'app/types/utils';
@@ -110,7 +107,7 @@ class SpanDetail extends React.Component<Props, State> {
     if (this.state.transactionResults.length === 1) {
       const {eventView} = this.props;
 
-      const parentTransactionLink = generateEventDetailsRoute({
+      const parentTransactionLink = eventDetailsRoute({
         eventSlug: generateSlug(this.state.transactionResults[0]),
         orgSlug: this.props.orgId,
       });
diff --git a/src/sentry/static/sentry/app/views/eventsV2/eventDetails/utils.tsx b/src/sentry/static/sentry/app/utils/discover/urls.tsx
similarity index 60%
rename from src/sentry/static/sentry/app/views/eventsV2/eventDetails/utils.tsx
rename to src/sentry/static/sentry/app/utils/discover/urls.tsx
index 1a9731732f..ba0df86a74 100644
--- a/src/sentry/static/sentry/app/views/eventsV2/eventDetails/utils.tsx
+++ b/src/sentry/static/sentry/app/utils/discover/urls.tsx
@@ -1,22 +1,32 @@
-import EventView, {EventData} from 'app/utils/discover/eventView';
+import EventView, {EventData} from './eventView';
 
-export function generateEventDetailsRoute({
+/**
+ * Create a slug that can be used with discover details views
+ * or as a reference event for event-stats requests
+ */
+export function generateEventSlug(eventData: EventData): string {
+  const id = eventData.id || eventData.latest_event;
+  const projectSlug = eventData.project || eventData['project.name'];
+
+  return `${projectSlug}:${id}`;
+}
+
+/**
+ * Create a URL to an event details view.
+ */
+export function eventDetailsRoute({
   eventSlug,
   orgSlug,
 }: {
   eventSlug: string;
-  orgSlug: String;
+  orgSlug: string;
 }): string {
   return `/organizations/${orgSlug}/discover/${eventSlug}/`;
 }
 
-export function generateEventSlug(eventData: EventData): string {
-  const id = eventData.id || eventData.latest_event;
-  const projectSlug = eventData.project || eventData['project.name'];
-
-  return `${projectSlug}:${id}`;
-}
-
+/**
+ * Create a URL target to event details with an event view in the query string.
+ */
 export function eventDetailsRouteWithEventView({
   orgSlug,
   eventSlug,
@@ -26,7 +36,7 @@ export function eventDetailsRouteWithEventView({
   eventSlug: string;
   eventView: EventView;
 }) {
-  const pathname = generateEventDetailsRoute({
+  const pathname = eventDetailsRoute({
     orgSlug,
     eventSlug,
   });
diff --git a/src/sentry/static/sentry/app/views/eventsV2/eventDetails/lineGraph.tsx b/src/sentry/static/sentry/app/views/eventsV2/eventDetails/lineGraph.tsx
index 035c4b3f78..15c274f9a6 100644
--- a/src/sentry/static/sentry/app/views/eventsV2/eventDetails/lineGraph.tsx
+++ b/src/sentry/static/sentry/app/views/eventsV2/eventDetails/lineGraph.tsx
@@ -23,8 +23,8 @@ import {tokenizeSearch, stringifyQueryObject} from 'app/utils/tokenizeSearch';
 import theme from 'app/utils/theme';
 import {Event, Organization, GlobalSelection} from 'app/types';
 import EventView from 'app/utils/discover/eventView';
+import {eventDetailsRouteWithEventView, generateEventSlug} from 'app/utils/discover/urls';
 
-import {generateEventDetailsRoute, generateEventSlug} from './utils';
 import {PIN_ICON} from '../data';
 
 /**
@@ -157,10 +157,9 @@ const handleClick = async function(
   const event = response.data[0];
   const eventSlug = generateEventSlug(event);
 
-  browserHistory.push({
-    pathname: generateEventDetailsRoute({eventSlug, orgSlug: organization.slug}),
-    query: eventView.generateQueryStringObject(),
-  });
+  browserHistory.push(
+    eventDetailsRouteWithEventView({eventSlug, orgSlug: organization.slug, eventView})
+  );
 };
 
 type LineGraphProps = {
diff --git a/src/sentry/static/sentry/app/views/eventsV2/eventDetails/pagination.tsx b/src/sentry/static/sentry/app/views/eventsV2/eventDetails/pagination.tsx
index 2d5085f352..948eac9e6d 100644
--- a/src/sentry/static/sentry/app/views/eventsV2/eventDetails/pagination.tsx
+++ b/src/sentry/static/sentry/app/views/eventsV2/eventDetails/pagination.tsx
@@ -8,8 +8,7 @@ import {t} from 'app/locale';
 import space from 'app/styles/space';
 import {Event, Organization} from 'app/types';
 import EventView from 'app/utils/discover/eventView';
-
-import {generateEventDetailsRoute} from './utils';
+import {eventDetailsRouteWithEventView} from 'app/utils/discover/urls';
 
 type LinksType = {
   oldest: null;
@@ -41,10 +40,11 @@ function buildTargets(
     if (!eventSlug) {
       links[key] = null;
     } else {
-      links[key] = {
-        pathname: generateEventDetailsRoute({eventSlug, orgSlug: organization.slug}),
-        query: eventView.generateQueryStringObject(),
-      };
+      links[key] = eventDetailsRouteWithEventView({
+        eventSlug,
+        eventView,
+        orgSlug: organization.slug,
+      });
     }
   });
 
diff --git a/src/sentry/static/sentry/app/views/eventsV2/table/tableView.tsx b/src/sentry/static/sentry/app/views/eventsV2/table/tableView.tsx
index b7043c2034..77b58698bc 100644
--- a/src/sentry/static/sentry/app/views/eventsV2/table/tableView.tsx
+++ b/src/sentry/static/sentry/app/views/eventsV2/table/tableView.tsx
@@ -17,10 +17,10 @@ import EventView, {
 } from 'app/utils/discover/eventView';
 import {Column} from 'app/utils/discover/fields';
 import {getFieldRenderer} from 'app/utils/discover/fieldRenderers';
+import {generateEventSlug, eventDetailsRouteWithEventView} from 'app/utils/discover/urls';
 
 import {downloadAsCsv, getExpandedResults, pushEventViewToLocation} from '../utils';
 import SortLink from '../sortLink';
-import {generateEventSlug, eventDetailsRouteWithEventView} from '../eventDetails/utils';
 import ColumnEditModal from './columnEditModal';
 import {TableColumn, TableData, TableDataRow} from './types';
 import HeaderCell from './headerCell';
diff --git a/src/sentry/static/sentry/app/views/performance/transactionSummary/table.tsx b/src/sentry/static/sentry/app/views/performance/transactionSummary/table.tsx
index c03d4e710e..a258e2b7dd 100644
--- a/src/sentry/static/sentry/app/views/performance/transactionSummary/table.tsx
+++ b/src/sentry/static/sentry/app/views/performance/transactionSummary/table.tsx
@@ -17,10 +17,7 @@ import EmptyStateWarning from 'app/components/emptyStateWarning';
 import EventView, {MetaType} from 'app/utils/discover/eventView';
 import {getFieldRenderer} from 'app/utils/discover/fieldRenderers';
 import {getAggregateAlias} from 'app/utils/discover/fields';
-import {
-  generateEventSlug,
-  eventDetailsRouteWithEventView,
-} from 'app/views/eventsV2/eventDetails/utils';
+import {generateEventSlug, eventDetailsRouteWithEventView} from 'app/utils/discover/urls';
 import {tokenizeSearch} from 'app/utils/tokenizeSearch';
 
 import {
