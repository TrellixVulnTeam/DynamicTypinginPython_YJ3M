commit 9a94d87251ff5c10d16413fc4845da390b646e39
Author: Stephen Cefali <scefali@sentry.io>
Date:   Mon Jan 6 14:42:00 2020 -0800

    chore(ts): improve typing with access (#16252)

diff --git a/src/sentry/static/sentry/app/components/acl/access.tsx b/src/sentry/static/sentry/app/components/acl/access.tsx
index 1e3c410bad..631cc18969 100644
--- a/src/sentry/static/sentry/app/components/acl/access.tsx
+++ b/src/sentry/static/sentry/app/components/acl/access.tsx
@@ -2,7 +2,7 @@ import React from 'react';
 import PropTypes from 'prop-types';
 
 import {t} from 'app/locale';
-import {Config, Organization} from 'app/types';
+import {Config, Organization, Scope} from 'app/types';
 import Alert from 'app/components/alert';
 import SentryTypes from 'app/sentryTypes';
 import withConfig from 'app/utils/withConfig';
@@ -47,7 +47,7 @@ type DefaultProps = {
   /**
    * List of required access levels
    */
-  access: string[];
+  access: Scope[];
 };
 
 const defaultProps: DefaultProps = {
diff --git a/src/sentry/static/sentry/app/constants/index.tsx b/src/sentry/static/sentry/app/constants/index.tsx
index 86da005796..1722432845 100644
--- a/src/sentry/static/sentry/app/constants/index.tsx
+++ b/src/sentry/static/sentry/app/constants/index.tsx
@@ -5,7 +5,7 @@
 import {t} from 'app/locale';
 import {Scope} from 'app/types';
 
-export const API_SCOPES = [
+export const API_ACCESS_SCOPES = [
   'project:read',
   'project:write',
   'project:admin',
@@ -19,13 +19,14 @@ export const API_SCOPES = [
   'org:read',
   'org:write',
   'org:admin',
+  'org:integrations',
   'member:read',
   'member:write',
   'member:admin',
 ] as const;
 
 // Default API scopes when adding a new API token or org API token
-export const DEFAULT_API_SCOPES = [
+export const DEFAULT_API_ACCESS_SCOPES = [
   'event:read',
   'event:admin',
   'project:read',
@@ -86,7 +87,7 @@ type PermissionObj = {
 };
 
 // We expose permissions for Sentry Apps in a more resource-centric way.
-// All of the API_SCOPES from above should be represented in a more
+// All of the API_ACCESS_SCOPES from above should be represented in a more
 // User-friendly way here.
 export const SENTRY_APP_PERMISSIONS: PermissionObj[] = [
   {
diff --git a/src/sentry/static/sentry/app/types/index.tsx b/src/sentry/static/sentry/app/types/index.tsx
index 525e382ff4..d0ced0ff9d 100644
--- a/src/sentry/static/sentry/app/types/index.tsx
+++ b/src/sentry/static/sentry/app/types/index.tsx
@@ -1,5 +1,5 @@
 import {SpanEntry} from 'app/components/events/interfaces/spans/types';
-import {API_SCOPES} from 'app/constants';
+import {API_ACCESS_SCOPES} from 'app/constants';
 import {Field} from 'app/views/settings/components/forms/type';
 import {Params} from 'react-router/lib/Router';
 import {Location} from 'history';
@@ -67,7 +67,7 @@ export type LightWeightOrganization = OrganizationSummary & {
   enhancedPrivacy: boolean;
   safeFields: string[];
   storeCrashReports: number;
-  access: string[];
+  access: Scope[];
   allowSharedIssues: boolean;
   dataScrubberDefaults: boolean;
   dataScrubber: boolean;
@@ -472,7 +472,7 @@ export type IntegrationFeature = {
 
 export type WebhookEvent = 'issue' | 'error';
 
-export type Scope = typeof API_SCOPES[number];
+export type Scope = typeof API_ACCESS_SCOPES[number];
 
 export type SentryAppSchemaIssueLink = {
   type: 'issue-link';
diff --git a/src/sentry/static/sentry/app/views/settings/account/apiNewToken.jsx b/src/sentry/static/sentry/app/views/settings/account/apiNewToken.jsx
index c93a0e49ca..5ebe00042d 100644
--- a/src/sentry/static/sentry/app/views/settings/account/apiNewToken.jsx
+++ b/src/sentry/static/sentry/app/views/settings/account/apiNewToken.jsx
@@ -2,7 +2,7 @@ import {browserHistory} from 'react-router';
 import DocumentTitle from 'react-document-title';
 import React from 'react';
 
-import {API_SCOPES, DEFAULT_API_SCOPES} from 'app/constants';
+import {API_ACCESS_SCOPES, DEFAULT_API_ACCESS_SCOPES} from 'app/constants';
 import {t, tct} from 'app/locale';
 import ApiForm from 'app/views/settings/components/forms/apiForm';
 import FormField from 'app/views/settings/components/forms/formField';
@@ -11,8 +11,8 @@ import {Panel, PanelBody, PanelHeader} from 'app/components/panels';
 import SettingsPageHeader from 'app/views/settings/components/settingsPageHeader';
 import TextBlock from 'app/views/settings/components/text/textBlock';
 
-const SORTED_DEFAULT_API_SCOPES = DEFAULT_API_SCOPES.sort();
-const API_CHOICES = API_SCOPES.map(s => [s, s]);
+const SORTED_DEFAULT_API_ACCESS_SCOPES = DEFAULT_API_ACCESS_SCOPES.sort();
+const API_CHOICES = API_ACCESS_SCOPES.map(s => [s, s]);
 const API_INDEX_ROUTE = '/settings/account/api/auth-tokens/';
 
 export default class ApiNewToken extends React.Component {
@@ -47,7 +47,7 @@ export default class ApiNewToken extends React.Component {
             <ApiForm
               apiMethod="POST"
               apiEndpoint="/api-tokens/"
-              initialData={{scopes: SORTED_DEFAULT_API_SCOPES}}
+              initialData={{scopes: SORTED_DEFAULT_API_ACCESS_SCOPES}}
               onSubmitSuccess={this.onSubmitSuccess}
               onCancel={this.onCancel}
               footerStyle={{
diff --git a/src/sentry/static/sentry/app/views/settings/components/forms/fieldFromConfig.tsx b/src/sentry/static/sentry/app/views/settings/components/forms/fieldFromConfig.tsx
index 7c24863f36..1a4aaf0214 100644
--- a/src/sentry/static/sentry/app/views/settings/components/forms/fieldFromConfig.tsx
+++ b/src/sentry/static/sentry/app/views/settings/components/forms/fieldFromConfig.tsx
@@ -1,6 +1,8 @@
 import PropTypes from 'prop-types';
 import React from 'react';
 
+import {Scope} from 'app/types';
+
 import BooleanField from './booleanField';
 import EmailField from './emailField';
 import HiddenField from './hiddenField';
@@ -23,8 +25,7 @@ type Props = {
   highlighted?: boolean;
   disabled?: boolean;
 
-  // TODO(ts): Investigate further
-  access?: any;
+  access?: Scope[];
 };
 
 export default class FieldFromConfig extends React.Component<Props> {
diff --git a/src/sentry/static/sentry/app/views/settings/components/forms/formPanel.tsx b/src/sentry/static/sentry/app/views/settings/components/forms/formPanel.tsx
index 3a8a538adc..0bb1cef765 100644
--- a/src/sentry/static/sentry/app/views/settings/components/forms/formPanel.tsx
+++ b/src/sentry/static/sentry/app/views/settings/components/forms/formPanel.tsx
@@ -3,6 +3,7 @@ import React from 'react';
 import {Panel, PanelBody, PanelHeader} from 'app/components/panels';
 import FieldFromConfig from 'app/views/settings/components/forms/fieldFromConfig';
 import {sanitizeQuerySelector} from 'app/utils/sanitizeQuerySelector';
+import {Scope} from 'app/types';
 
 import {FieldObject, JsonFormObject} from './type';
 
@@ -18,8 +19,8 @@ type Props = {
   fields: FieldObject[];
 
   // TODO(ts): See if this is still in use
-  access: any;
-  features: any;
+  access?: Scope[];
+  features?: string[];
 
   additionalFieldProps: {[key: string]: any};
 
diff --git a/src/sentry/static/sentry/app/views/settings/organizationApiKeys/organizationApiKeyDetails.jsx b/src/sentry/static/sentry/app/views/settings/organizationApiKeys/organizationApiKeyDetails.jsx
index c31904c67e..39245b8215 100644
--- a/src/sentry/static/sentry/app/views/settings/organizationApiKeys/organizationApiKeyDetails.jsx
+++ b/src/sentry/static/sentry/app/views/settings/organizationApiKeys/organizationApiKeyDetails.jsx
@@ -1,7 +1,7 @@
 import {browserHistory} from 'react-router';
 import React from 'react';
 
-import {API_SCOPES} from 'app/constants';
+import {API_ACCESS_SCOPES} from 'app/constants';
 import {addErrorMessage, addSuccessMessage} from 'app/actionCreators/indicator';
 import {t} from 'app/locale';
 import ApiForm from 'app/components/forms/apiForm';
@@ -13,7 +13,7 @@ import TextField from 'app/components/forms/textField';
 import TextareaField from 'app/components/forms/textareaField';
 import recreateRoute from 'app/utils/recreateRoute';
 
-const API_CHOICES = API_SCOPES.map(s => [s, s]);
+const API_CHOICES = API_ACCESS_SCOPES.map(s => [s, s]);
 
 class OrganizationApiKeyDetails extends AsyncView {
   static contextTypes = {
diff --git a/src/sentry/static/sentry/app/views/settings/project/projectKeys/list/keyRow.tsx b/src/sentry/static/sentry/app/views/settings/project/projectKeys/list/keyRow.tsx
index 46ea4003d1..b631047d84 100644
--- a/src/sentry/static/sentry/app/views/settings/project/projectKeys/list/keyRow.tsx
+++ b/src/sentry/static/sentry/app/views/settings/project/projectKeys/list/keyRow.tsx
@@ -13,13 +13,14 @@ import Confirm from 'app/components/confirm';
 import ProjectKeyCredentials from 'app/views/settings/project/projectKeys/projectKeyCredentials';
 import recreateRoute from 'app/utils/recreateRoute';
 import space from 'app/styles/space';
+import {Scope} from 'app/types';
 
 type Props = {
   api: Client;
   orgId: string;
   projectId: string;
   data: ProjectKey;
-  access: Set<string>;
+  access: Set<Scope>;
   onToggle: (isActive: boolean, data: ProjectKey) => void;
   onRemove: (data: ProjectKey) => void;
 } & Pick<RouteComponentProps<{}, {}>, 'routes' | 'location' | 'params'>;
diff --git a/src/sentry/static/sentry/app/views/settings/types.ts b/src/sentry/static/sentry/app/views/settings/types.ts
index eb6630178d..49e031beab 100644
--- a/src/sentry/static/sentry/app/views/settings/types.ts
+++ b/src/sentry/static/sentry/app/views/settings/types.ts
@@ -1,10 +1,10 @@
-import {Organization, Project} from 'app/types';
+import {Organization, Project, Scope} from 'app/types';
 
 export type NavigationProps = {
   id?: string;
   organization?: Organization;
   project?: Project;
-  access?: Set<string>;
+  access?: Set<Scope>;
   features?: Set<string>;
 };
 
diff --git a/tests/js/spec/views/__snapshots__/apiNewToken.spec.jsx.snap b/tests/js/spec/views/__snapshots__/apiNewToken.spec.jsx.snap
index 7693653c3f..60acdd7dad 100644
--- a/tests/js/spec/views/__snapshots__/apiNewToken.spec.jsx.snap
+++ b/tests/js/spec/views/__snapshots__/apiNewToken.spec.jsx.snap
@@ -128,6 +128,10 @@ exports[`ApiNewToken render() renders 1`] = `
                   "org:admin",
                   "org:admin",
                 ],
+                Array [
+                  "org:integrations",
+                  "org:integrations",
+                ],
                 Array [
                   "member:read",
                   "member:read",
diff --git a/tests/js/spec/views/settings/__snapshots__/organizationApiKeyDetailsView.spec.jsx.snap b/tests/js/spec/views/settings/__snapshots__/organizationApiKeyDetailsView.spec.jsx.snap
index b734c253c7..e5f05b995c 100644
--- a/tests/js/spec/views/settings/__snapshots__/organizationApiKeyDetailsView.spec.jsx.snap
+++ b/tests/js/spec/views/settings/__snapshots__/organizationApiKeyDetailsView.spec.jsx.snap
@@ -221,6 +221,10 @@ exports[`OrganizationApiKeyDetails renders 1`] = `
                       "org:admin",
                       "org:admin",
                     ],
+                    Array [
+                      "org:integrations",
+                      "org:integrations",
+                    ],
                     Array [
                       "member:read",
                       "member:read",
@@ -437,6 +441,19 @@ exports[`OrganizationApiKeyDetails renders 1`] = `
                       />
                       org:admin
                     </label>
+                    <label
+                      className="checkbox"
+                      key="org:integrations"
+                    >
+                      <input
+                        checked={false}
+                        disabled={false}
+                        onChange={[Function]}
+                        type="checkbox"
+                        value="org:integrations"
+                      />
+                      org:integrations
+                    </label>
                     <label
                       className="checkbox"
                       key="member:read"
