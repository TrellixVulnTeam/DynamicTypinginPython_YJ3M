commit 5fa652e3951535c4bc99f74e8f44589b672fd55e
Author: Matt Robenolt <matt@ydekproductions.com>
Date:   Sat Nov 19 07:40:44 2016 -0800

    sourcemaps: automatically pad out base64 encoded sourcemaps (#4570)

diff --git a/src/sentry/lang/javascript/processor.py b/src/sentry/lang/javascript/processor.py
index 49a1038ffd..6d4030f55c 100644
--- a/src/sentry/lang/javascript/processor.py
+++ b/src/sentry/lang/javascript/processor.py
@@ -497,7 +497,9 @@ def is_utf8(encoding):
 def fetch_sourcemap(url, project=None, release=None, allow_scraping=True):
     if is_data_uri(url):
         try:
-            body = base64.b64decode(url[BASE64_PREAMBLE_LENGTH:])
+            body = base64.b64decode(
+                url[BASE64_PREAMBLE_LENGTH:] + (b'=' * (-(len(url) - BASE64_PREAMBLE_LENGTH) % 4))
+            )
         except TypeError as e:
             raise UnparseableSourcemap({
                 'url': '<base64>',
diff --git a/tests/sentry/lang/javascript/test_processor.py b/tests/sentry/lang/javascript/test_processor.py
index 0df03c9f78..469e9b7f8e 100644
--- a/tests/sentry/lang/javascript/test_processor.py
+++ b/tests/sentry/lang/javascript/test_processor.py
@@ -248,6 +248,14 @@ class FetchSourcemapTest(TestCase):
         assert smap_view.get_source_contents(0) == 'console.log("hello, World!")'
         assert smap_view.get_source_name(0) == u'/test.js'
 
+    def test_base64_without_padding(self):
+        smap_view = fetch_sourcemap(base64_sourcemap.rstrip('='))
+        tokens = [Token(1, 0, '/test.js', 0, 0, 0, None)]
+
+        assert list(smap_view) == tokens
+        assert smap_view.get_source_contents(0) == 'console.log("hello, World!")'
+        assert smap_view.get_source_name(0) == u'/test.js'
+
     def test_broken_base64(self):
         with pytest.raises(UnparseableSourcemap):
             fetch_sourcemap('data:application/json;base64,xxx')
