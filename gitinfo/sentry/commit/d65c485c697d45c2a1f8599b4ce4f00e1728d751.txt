commit d65c485c697d45c2a1f8599b4ce4f00e1728d751
Author: jeffkwoh <23180853+jeffkwoh@users.noreply.github.com>
Date:   Thu Jan 23 13:57:44 2020 -0800

    fix(GlobalSelectionHeader): Fix switch org bug (#16418)
    
    Context: This configuration of Sentry has
    Multiple Organizations: Enabled
    Multiple Project Selection: Disabled
    
    Switching organizations between lightweight and heavyweight routes
    sometimes causes a project that does not belong to the organization to
    be force loaded. With Multiple Project Selection disabled, GSH tries
    to enforce a single project. Therefore loading projects from the current
    organization before the new organization has been loaded from the
    switch. Thus the URL is updated with a project ID of a current project
    that does not belong to the new organization to be loaded.
    
    For example, Org-A has projects: [1,2,3]; Org-B has  projects: [4,5,6].
    From  http://localhost:8000/organizations/Org-B/eventsv2/?project=6
    we switch to Org-A from the sidebar, effectively loading the below URL:
    http://localhost:8000/organizations/Org-A/issues/
    which will be updated to
    http://localhost:8000/organizations/Org-A/issues/?project=4
    as Sentry tries to load and enforce a single project from the outdated
    Org-B details.
    
    Change:
    Added a new guard to prevent the loading of a new project from
    organization before the organization details is consistent with the URL.

diff --git a/src/sentry/static/sentry/app/components/organizations/globalSelectionHeader/index.jsx b/src/sentry/static/sentry/app/components/organizations/globalSelectionHeader/index.jsx
index 6762dbb180..96f3ab4bb9 100644
--- a/src/sentry/static/sentry/app/components/organizations/globalSelectionHeader/index.jsx
+++ b/src/sentry/static/sentry/app/components/organizations/globalSelectionHeader/index.jsx
@@ -316,14 +316,16 @@ class GlobalSelectionHeader extends React.Component {
       return;
     }
 
+    const {organization, params} = this.props;
     if (forceProject) {
       // this takes precendence over the other options
       newProject = [getProjectIdFromProject(forceProject)];
     } else if (requestedProjects && requestedProjects.length > 0) {
       // If there is a list of projects from URL params, select first project from that list
       newProject = [requestedProjects[0]];
-    } else {
-      // Otherwise, get first project from org that the user is a member of
+    } else if (organization?.slug && organization?.slug === params?.orgId) {
+      // When we have finished loading the organization into the props,  i.e. the organization slug is consistent with
+      // the URL param--Sentry will get the first project from the organization that the user is a member of.
       newProject = this.getFirstProject();
     }
 
diff --git a/tests/acceptance/test_organization_switch.py b/tests/acceptance/test_organization_switch.py
new file mode 100644
index 0000000000..898c6f69d5
--- /dev/null
+++ b/tests/acceptance/test_organization_switch.py
@@ -0,0 +1,76 @@
+from __future__ import absolute_import
+
+from sentry.testutils import AcceptanceTestCase, SnubaTestCase
+
+
+class OrganizationSwitchTest(AcceptanceTestCase, SnubaTestCase):
+    def setUp(self):
+        super(OrganizationSwitchTest, self).setUp()
+
+        self.primary_projects = [
+            self.create_project(organization=self.organization, teams=[self.team], name=name)
+            for name in ["Bengal", "Sumatra", "Siberian"]
+        ]
+
+        self.secondary_organization = self.create_organization(owner=self.user, name="Banana Duck")
+
+        self.secondary_team = self.create_team(
+            organization=self.secondary_organization, name="Second", members=[self.user]
+        )
+
+        self.secondary_projects = [
+            self.create_project(
+                organization=self.secondary_organization, teams=[self.secondary_team], name=name
+            )
+            for name in ["Gone Goose", "Peaceful Platypus"]
+        ]
+
+        self.login_as(self.user)
+
+    def test_organization_switches(self):
+        def navigate_to_issues_page_and_select_projects(org_slug):
+            issues_url = OrganizationSwitchTest.url_creator("issues", org_slug)
+            self.browser.get(issues_url)
+            self.browser.wait_until_not(".loading-indicator")
+            self.browser.click_when_visible(
+                selector='[data-test-id="global-header-project-selector"]', timeout=10
+            )
+
+        def get_project_elements_from_project_selector_dropdown():
+            return self.browser.driver.find_elements_by_css_selector(
+                '[data-test-id="autocomplete-list"] [data-test-id="badge-display-name"]'
+            )
+
+        transition_urls = [
+            OrganizationSwitchTest.url_creator(page, self.organization.slug)
+            for page in ["issues", "releases" "discover", "user-feedback"]
+        ]
+
+        with self.settings(SENTRY_SINGLE_ORGANIZATION=False), self.feature(
+            "organizations:discover"
+        ):
+            for transition_url in transition_urls:
+                navigate_to_issues_page_and_select_projects(self.organization.slug)
+                primary_projects_elements = get_project_elements_from_project_selector_dropdown()
+                OrganizationSwitchTest.expect_projects_element_text_to_match_projects_slug(
+                    primary_projects_elements, self.primary_projects
+                )
+
+                self.browser.get(transition_url)
+                self.browser.wait_until_not(".loading-indicator")
+
+                navigate_to_issues_page_and_select_projects(self.secondary_organization.slug)
+                secondary_projects_elements = get_project_elements_from_project_selector_dropdown()
+
+                OrganizationSwitchTest.expect_projects_element_text_to_match_projects_slug(
+                    secondary_projects_elements, self.secondary_projects
+                )
+
+    @staticmethod
+    def expect_projects_element_text_to_match_projects_slug(elements, projects):
+        assert len(elements) == len(projects)
+        assert {e.text for e in elements} == {p.slug for p in projects}
+
+    @staticmethod
+    def url_creator(page_path, org_slug):
+        return u"organizations/{org_id}/{page_path}/".format(org_id=org_slug, page_path=page_path)
