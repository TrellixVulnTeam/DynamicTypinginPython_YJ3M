commit 1607b4c1254d2e5730506f96837b99d0ea8400c1
Author: Lyn Nagara <lyn.nagara@gmail.com>
Date:   Wed Jan 23 11:06:53 2019 -0800

    fix(ui): Fix rendering incorrect links (#11665)
    
    Fixes a bug introduced in https://github.com/getsentry/sentry/pull/11649
    which caused incorrect links to issues to be rendered in the assigned to me,
    bookmarked and recently viewed sections.

diff --git a/src/sentry/static/sentry/app/components/compactIssue.jsx b/src/sentry/static/sentry/app/components/compactIssue.jsx
index 50157c066e..9fd315a81e 100644
--- a/src/sentry/static/sentry/app/components/compactIssue.jsx
+++ b/src/sentry/static/sentry/app/components/compactIssue.jsx
@@ -1,6 +1,5 @@
 import PropTypes from 'prop-types';
 import React from 'react';
-import {withRouter} from 'react-router';
 import createReactClass from 'create-react-class';
 import Reflux from 'reflux';
 import {Flex, Box} from 'grid-emotion';
@@ -15,9 +14,13 @@ import Link from 'app/components/link';
 import ProjectLink from 'app/components/projectLink';
 import {t} from 'app/locale';
 import {PanelItem} from 'app/components/panels';
+import SentryTypes from 'app/sentryTypes';
+import withOrganization from 'app/utils/withOrganization';
 
 class CompactIssueHeader extends React.Component {
   static propTypes = {
+    organization: SentryTypes.Organization.isRequired,
+    projectId: PropTypes.string,
     data: PropTypes.object.isRequired,
   };
 
@@ -62,13 +65,15 @@ class CompactIssueHeader extends React.Component {
   };
 
   render() {
-    let {data, params: {orgId, projectId}} = this.props;
+    let {data, organization, projectId} = this.props;
+
+    let hasNewRoutes = new Set(organization.features).has('sentry10');
 
     let styles = {};
 
-    let basePath = projectId
-      ? `/${orgId}/${projectId}/issues/`
-      : `/organizations/${orgId}/issues/`;
+    let basePath = hasNewRoutes
+      ? `/${organization.slug}/${projectId}/issues/`
+      : `/organizations/${organization.slug}/issues/`;
 
     if (data.subscriptionDetails && data.subscriptionDetails.reason === 'mentioned') {
       styles = {color: '#57be8c'};
@@ -114,6 +119,7 @@ const CompactIssue = createReactClass({
     id: PropTypes.string,
     statsPeriod: PropTypes.string,
     showActions: PropTypes.bool,
+    organization: SentryTypes.Organization.isRequired,
   },
 
   mixins: [ApiMixin, Reflux.listenTo(GroupStore, 'onGroupChange')],
@@ -159,7 +165,7 @@ const CompactIssue = createReactClass({
 
     this.api.bulkUpdate(
       {
-        orgId: this.props.params.orgId,
+        orgId: this.props.organization.slug,
         projectId: issue.project.slug,
         itemIds: [issue.id],
         data,
@@ -174,6 +180,7 @@ const CompactIssue = createReactClass({
 
   render() {
     let issue = this.state.issue;
+    let {id, organization} = this.props;
 
     let className = 'issue';
     if (issue.isBookmarked) {
@@ -195,7 +202,6 @@ const CompactIssue = createReactClass({
       className += ' with-graph';
     }
 
-    let {id, params} = this.props;
     let title = <span className="icon-more" />;
 
     return (
@@ -205,7 +211,11 @@ const CompactIssue = createReactClass({
         direction="column"
         style={{paddingTop: '12px', paddingBottom: '6px'}}
       >
-        <CompactIssueHeader data={issue} params={params} />
+        <CompactIssueHeader
+          data={issue}
+          organization={organization}
+          projectId={issue.project.slug}
+        />
         {this.props.statsPeriod && (
           <div className="event-graph">
             <GroupChart
@@ -241,7 +251,7 @@ const CompactIssue = createReactClass({
               </li>
               <li>
                 <SnoozeAction
-                  orgId={params.orgId}
+                  orgId={organization.slug}
                   groupId={id}
                   onSnooze={this.onSnooze}
                 />
@@ -256,4 +266,4 @@ const CompactIssue = createReactClass({
 });
 
 export {CompactIssue};
-export default withRouter(CompactIssue);
+export default withOrganization(CompactIssue);
diff --git a/tests/js/spec/views/userFeedback/__snapshots__/organizationUserFeedback.spec.jsx.snap b/tests/js/spec/views/userFeedback/__snapshots__/organizationUserFeedback.spec.jsx.snap
index d66dcd1430..2d2b234409 100644
--- a/tests/js/spec/views/userFeedback/__snapshots__/organizationUserFeedback.spec.jsx.snap
+++ b/tests/js/spec/views/userFeedback/__snapshots__/organizationUserFeedback.spec.jsx.snap
@@ -1726,7 +1726,7 @@ exports[`OrganizationUserFeedback renders 1`] = `
                           <div
                             className="css-9vq8an-textStyles issue-list"
                           >
-                            <withRouter(CompactIssue)
+                            <WithOrganizationMockWrappeer
                               data={
                                 Object {
                                   "assignedTo": null,
@@ -1798,108 +1798,31 @@ exports[`OrganizationUserFeedback renders 1`] = `
                                   }
                                 }
                                 id="1"
-                                location={
-                                  Object {
-                                    "query": Object {},
-                                  }
-                                }
-                                params={
-                                  Object {
-                                    "orgId": "org-slug",
-                                  }
-                                }
-                                router={
+                                organization={
                                   Object {
-                                    "createHref": [MockFunction] {
-                                      "calls": Array [
-                                        Array [
-                                          Object {
-                                            "pathname": undefined,
-                                            "query": Object {},
-                                          },
-                                        ],
-                                        Array [
-                                          Object {
-                                            "pathname": undefined,
-                                            "query": Object {
-                                              "status": "",
-                                            },
-                                          },
-                                        ],
-                                        Array [
-                                          "/organizations/org-slug/issues/1/",
-                                        ],
-                                        Array [
-                                          "/organizations/org-slug/issues/",
-                                        ],
-                                        Array [
-                                          "/organizations/org-slug/issues/1/activity/",
-                                        ],
-                                        Array [
-                                          "/organizations/org-slug/issues/1/events/1/",
-                                        ],
-                                      ],
-                                      "results": Array [
-                                        Object {
-                                          "isThrow": false,
-                                          "value": undefined,
-                                        },
-                                        Object {
-                                          "isThrow": false,
-                                          "value": undefined,
-                                        },
-                                        Object {
-                                          "isThrow": false,
-                                          "value": undefined,
-                                        },
-                                        Object {
-                                          "isThrow": false,
-                                          "value": undefined,
-                                        },
-                                        Object {
-                                          "isThrow": false,
-                                          "value": undefined,
-                                        },
-                                        Object {
-                                          "isThrow": false,
-                                          "value": undefined,
-                                        },
-                                      ],
-                                    },
-                                    "go": [MockFunction],
-                                    "goBack": [MockFunction],
-                                    "goForward": [MockFunction],
-                                    "isActive": [MockFunction],
-                                    "listen": [MockFunction],
-                                    "location": Object {
-                                      "query": Object {},
-                                    },
-                                    "params": Object {
-                                      "orgId": "org-slug",
-                                    },
-                                    "push": [MockFunction] {
-                                      "calls": Array [
-                                        Array [
-                                          Object {
-                                            "pathname": undefined,
-                                            "query": Object {
-                                              "environment": Array [],
-                                              "project": Array [],
-                                              "statsPeriod": "14d",
-                                              "utc": "true",
-                                            },
-                                          },
-                                        ],
-                                      ],
-                                      "results": Array [
-                                        Object {
-                                          "isThrow": false,
-                                          "value": undefined,
-                                        },
-                                      ],
+                                    "access": Array [
+                                      "org:read",
+                                      "org:write",
+                                      "org:admin",
+                                      "project:read",
+                                      "project:write",
+                                      "project:admin",
+                                      "team:read",
+                                      "team:write",
+                                      "team:admin",
+                                    ],
+                                    "features": Array [],
+                                    "id": "3",
+                                    "name": "Organization Name",
+                                    "onboardingTasks": Array [],
+                                    "projects": Array [],
+                                    "scrapeJavaScript": true,
+                                    "slug": "org-slug",
+                                    "status": Object {
+                                      "id": "active",
+                                      "name": "active",
                                     },
-                                    "replace": [MockFunction],
-                                    "setRouteLeaveHook": [MockFunction],
+                                    "teams": Array [],
                                   }
                                 }
                               >
@@ -1969,11 +1892,34 @@ exports[`OrganizationUserFeedback renders 1`] = `
                                             "tags": Array [],
                                           }
                                         }
-                                        params={
+                                        organization={
                                           Object {
-                                            "orgId": "org-slug",
+                                            "access": Array [
+                                              "org:read",
+                                              "org:write",
+                                              "org:admin",
+                                              "project:read",
+                                              "project:write",
+                                              "project:admin",
+                                              "team:read",
+                                              "team:write",
+                                              "team:admin",
+                                            ],
+                                            "features": Array [],
+                                            "id": "3",
+                                            "name": "Organization Name",
+                                            "onboardingTasks": Array [],
+                                            "projects": Array [],
+                                            "scrapeJavaScript": true,
+                                            "slug": "org-slug",
+                                            "status": Object {
+                                              "id": "active",
+                                              "name": "active",
+                                            },
+                                            "teams": Array [],
                                           }
                                         }
+                                        projectId="project-slug"
                                       >
                                         <Flex
                                           align="center"
@@ -2393,7 +2339,7 @@ exports[`OrganizationUserFeedback renders 1`] = `
                                   </Base>
                                 </PanelItem>
                               </CompactIssue>
-                            </withRouter(CompactIssue)>
+                            </WithOrganizationMockWrappeer>
                           </div>
                         </PanelBody>
                       </div>
diff --git a/tests/js/spec/views/userFeedback/__snapshots__/projectUserFeedback.spec.jsx.snap b/tests/js/spec/views/userFeedback/__snapshots__/projectUserFeedback.spec.jsx.snap
index ebe576f578..ee944df28a 100644
--- a/tests/js/spec/views/userFeedback/__snapshots__/projectUserFeedback.spec.jsx.snap
+++ b/tests/js/spec/views/userFeedback/__snapshots__/projectUserFeedback.spec.jsx.snap
@@ -16,7 +16,7 @@ exports[`projectUserFeedback renders 1`] = `
   }
   status="unresolved"
 >
-  <withRouter(CompactIssue)
+  <WithOrganizationMockWrappeer
     data={
       Object {
         "assignedTo": null,
@@ -104,6 +104,6 @@ exports[`projectUserFeedback renders 1`] = `
         }
       }
     />
-  </withRouter(CompactIssue)>
+  </WithOrganizationMockWrappeer>
 </UserFeedbackContainer>
 `;
