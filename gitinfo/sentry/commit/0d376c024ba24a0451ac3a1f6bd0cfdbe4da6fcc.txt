commit 0d376c024ba24a0451ac3a1f6bd0cfdbe4da6fcc
Author: David Cramer <dcramer@gmail.com>
Date:   Mon Feb 6 19:29:59 2012 -0800

    Add the ability to remove resolved issues via the cleanup command (refs #336)

diff --git a/sentry/commands/cleanup.py b/sentry/commands/cleanup.py
index 253d70570b..63370a033a 100644
--- a/sentry/commands/cleanup.py
+++ b/sentry/commands/cleanup.py
@@ -15,9 +15,11 @@ from sentry.commands.utils import options, opt
     opt('--server', help='Limit truncation to only entries from server.'),
     opt('--level', help='Limit truncation to only entries greater than or equal to level (e.g. DEBUG).'),
     opt('--project', type=int, help='Limit truncation to only entries from project.'),
+    opt('--resolved', dest='resolved', action='store_true', help='Limit truncation to only entries that are resolved.'),
+    opt('--unresolved', dest='resolved', action='store_false', help='Limit truncation to only entries that are unresolved.'),
 )
 def cleanup(days=30, logger=None, site=None, server=None, level=None,
-            project=None):
+            project=None, resolved=None):
     import logging
     from sentry.queue.tasks.cleanup import cleanup
 
@@ -30,5 +32,6 @@ def cleanup(days=30, logger=None, site=None, server=None, level=None,
         site=site,
         server=server,
         level=level,
-        project=project
+        project=project,
+        resolved=resolved,
     )
diff --git a/sentry/queue/tasks/cleanup.py b/sentry/queue/tasks/cleanup.py
index 8980b49059..a760847a79 100644
--- a/sentry/queue/tasks/cleanup.py
+++ b/sentry/queue/tasks/cleanup.py
@@ -8,7 +8,7 @@ sentry.queue.tasks.cleanup
 
 
 def cleanup(days=30, logger=None, site=None, server=None, level=None,
-            project=None):
+            project=None, resolved=None):
     """
     Deletes a portion of the trailing data in Sentry based on
     their creation dates. For example, if ``days`` is 30, this
@@ -20,8 +20,11 @@ def cleanup(days=30, logger=None, site=None, server=None, level=None,
                  site.
     :param server: limit the message deletion scope to the specified
                    server.
-    :param level: limit all deleteion scopes to messages that are greater
+    :param level: limit all deletion scopes to messages that are greater
                   than or equal to level.
+    :param project: limit all deletion scopes to messages that are part
+                    of the given project
+    :param resolved: limit all deletion scopes to messages that are resolved.
     """
     import datetime
 
@@ -59,10 +62,11 @@ def cleanup(days=30, logger=None, site=None, server=None, level=None,
         qs = qs.filter(project=project)
 
     groups_to_check = set()
-    for obj in RangeQuerySetWrapper(qs):
-        print ">>> Removing <%s: id=%s>" % (obj.__class__.__name__, obj.pk)
-        obj.delete()
-        groups_to_check.add(obj.group_id)
+    if resolved is None:
+        for obj in RangeQuerySetWrapper(qs):
+            print ">>> Removing <%s: id=%s>" % (obj.__class__.__name__, obj.pk)
+            obj.delete()
+            groups_to_check.add(obj.group_id)
 
     if not (server or site):
         # MessageCountByMinute
@@ -73,6 +77,10 @@ def cleanup(days=30, logger=None, site=None, server=None, level=None,
             qs = qs.filter(group__level__gte=level)
         if project:
             qs = qs.filter(project=project)
+        if resolved is True:
+            qs = qs.filter(status=1)
+        elif resolved is False:
+            qs = qs.filter(status=0)
 
         for obj in RangeQuerySetWrapper(qs):
             print ">>> Removing <%s: id=%s>" % (obj.__class__.__name__, obj.pk)
