commit d679afe67aebede8db1daa00dda95d45ff04d4c5
Author: David Cramer <dcramer@gmail.com>
Date:   Fri Dec 30 14:50:39 2011 -0800

    pep8 cleanup

diff --git a/sentry/coreapi.py b/sentry/coreapi.py
index dfa2480acc..18be0458c4 100644
--- a/sentry/coreapi.py
+++ b/sentry/coreapi.py
@@ -14,20 +14,29 @@ from sentry.utils.auth import get_signature, parse_auth_header
 
 logger = logging.getLogger(__name__)
 
+
 class APIError(Exception):
     http_status = 400
     msg = 'Invalid request'
+
     def __init__(self, msg=None):
         if msg:
             self.msg = msg
+
+
 class APIUnauthorized(APIError):
     http_status = 401
     msg = 'Unauthorized'
+
+
 class APIForbidden(APIError):
     http_status = 403
+
+
 class APITimestampExpired(APIError):
     http_status = 410
 
+
 def extract_auth_vars(request):
     if request.META.get('HTTP_X_SENTRY_AUTH', '').startswith('Sentry'):
         # Auth version 3.0 (same as 2.0, diff header)
@@ -38,6 +47,7 @@ def extract_auth_vars(request):
     else:
         return None
 
+
 def project_from_auth_vars(auth_vars, data):
     signature = auth_vars.get('sentry_signature')
     timestamp = auth_vars.get('sentry_timestamp')
@@ -62,6 +72,7 @@ def project_from_auth_vars(auth_vars, data):
 
     return project
 
+
 def validate_hmac(message, signature, timestamp, secret_key):
     try:
         timestamp_float = float(timestamp)
@@ -75,6 +86,7 @@ def validate_hmac(message, signature, timestamp, secret_key):
     if sig_hmac != signature:
         raise APIForbidden('Invalid signature')
 
+
 def project_from_api_key_and_id(api_key, project):
     try:
         pm = ProjectMember.objects.get(api_key=api_key, project=project)
@@ -86,6 +98,7 @@ def project_from_api_key_and_id(api_key, project):
 
     return pm.project
 
+
 def project_from_id(request):
     try:
         pm = ProjectMember.objects.get(user=request.user, project=request.GET['project_id'])
@@ -97,6 +110,7 @@ def project_from_id(request):
 
     return pm.project
 
+
 def decode_and_decompress_data(encoded_data):
     try:
         try:
@@ -109,6 +123,7 @@ def decode_and_decompress_data(encoded_data):
         logger.exception('Bad data received')
         raise APIForbidden('Bad data decoding request (%s, %s)' % (e.__class__.__name__, e))
 
+
 def safely_load_json_string(json_string):
     try:
         obj = json.loads(json_string)
@@ -130,6 +145,7 @@ def ensure_valid_project_id(desired_project, data):
     elif not desired_project:
         data['project'] = 1
 
+
 def insert_data_to_database(data):
     def process_data_timestamp(data):
         if is_float(data['timestamp']):
