commit ce88119b7a59279b933eee9fc35a8cbce1297e63
Author: Jan Michael Auer <jan.auer@sentry.io>
Date:   Fri May 24 20:00:44 2019 +0200

    feat(native): Add debug file sources to global search (#13387)

diff --git a/src/sentry/static/sentry/app/data/forms/projectDebugFiles.jsx b/src/sentry/static/sentry/app/data/forms/projectDebugFiles.jsx
new file mode 100644
index 0000000000..68f64975c0
--- /dev/null
+++ b/src/sentry/static/sentry/app/data/forms/projectDebugFiles.jsx
@@ -0,0 +1,55 @@
+import {t} from 'app/locale';
+
+// Export route to make these forms searchable by label/help
+export const route = '/settings/:orgId/projects/:projectId/debug-symbols/';
+
+export const fields = {
+  builtinSymbolSources: {
+    name: 'builtinSymbolSources',
+    type: 'select',
+    multiple: true,
+    label: t('Built-in Repositories'),
+    help: t(
+      'Configures which built-in repositories Sentry should use to resolve debug files.'
+    ),
+    choices: [
+      ['microsoft', t('Microsoft')],
+      ['amd', t('AMD')],
+      ['autodesk', t('Autodesk')],
+      ['chromium', t('Chromium')],
+      ['citrix', t('Citrix')],
+      ['intel', t('Intel')],
+      ['mozilla', t('Mozilla')],
+      ['nvidia', t('NVIDIA')],
+      ['unity', t('Unity')],
+    ],
+  },
+  symbolSources: {
+    name: 'symbolSources',
+    type: 'string',
+    label: t('Custom Repositories'),
+    placeholder: t('Paste JSON here.'),
+    multiline: true,
+    monospace: true,
+    autosize: true,
+    inline: false,
+    maxRows: 10,
+    saveOnBlur: false,
+    saveMessageAlertType: 'info',
+    saveMessage: t('Updates will apply to future events only.'),
+    formatMessageValue: false,
+    help: t(
+      'Configures custom repositories containing debug files. At the moment, only Amazon S3 buckets are supported.'
+    ),
+    validate: ({id, form}) => {
+      try {
+        if (form[id].trim()) {
+          JSON.parse(form[id]);
+        }
+      } catch (e) {
+        return [[id, e.toString().replace(/^SyntaxError: JSON.parse: /, '')]];
+      }
+      return [];
+    },
+  },
+};
diff --git a/src/sentry/static/sentry/app/views/projectDebugFiles.jsx b/src/sentry/static/sentry/app/views/projectDebugFiles.jsx
index 28614cbaf1..da7147faef 100644
--- a/src/sentry/static/sentry/app/views/projectDebugFiles.jsx
+++ b/src/sentry/static/sentry/app/views/projectDebugFiles.jsx
@@ -4,6 +4,7 @@ import React from 'react';
 import styled from 'react-emotion';
 
 import {Panel, PanelBody, PanelHeader, PanelItem} from 'app/components/panels';
+import {fields} from 'app/data/forms/projectDebugFiles';
 import {t} from 'app/locale';
 import Access from 'app/components/acl/access';
 import AsyncComponent from 'app/components/asyncComponent';
@@ -58,57 +59,6 @@ const DebugSymbolDetails = styled('div')`
   margin-top: 4px;
 `;
 
-const formFields = [
-  {
-    name: 'builtinSymbolSources',
-    type: 'select',
-    multiple: true,
-    label: t('Built-in Repositories'),
-    help: t(
-      'Configures which built-in repositories Sentry should use to resolve debug files.'
-    ),
-    choices: [
-      ['microsoft', t('Microsoft')],
-      ['citrix', t('Citrix')],
-      ['intel', t('Intel')],
-      ['amd', t('AMD')],
-      ['nvidia', t('NVIDIA')],
-      ['chromium', t('Chromium')],
-      ['unity', t('Unity')],
-      ['mozilla', t('Mozilla')],
-      ['autodesk', t('Autodesk')],
-    ],
-  },
-  {
-    name: 'symbolSources',
-    type: 'string',
-    label: t('Custom Repositories'),
-    placeholder: t('Paste JSON here.'),
-    multiline: true,
-    monospace: true,
-    autosize: true,
-    inline: false,
-    maxRows: 10,
-    saveOnBlur: false,
-    saveMessageAlertType: 'info',
-    saveMessage: t('Updates will apply to future events only.'),
-    formatMessageValue: false,
-    help: t(
-      'Configures custom repositories containing debug files. At the moment, only Amazon S3 buckets are supported.'
-    ),
-    validate: ({id, form}) => {
-      try {
-        if (form[id].trim()) {
-          JSON.parse(form[id]);
-        }
-      } catch (e) {
-        return [[id, e.toString().replace(/^SyntaxError: JSON.parse: /, '')]];
-      }
-      return [];
-    },
-  },
-];
-
 class ProjectDebugSymbols extends AsyncComponent {
   static contextTypes = {
     organization: PropTypes.object.isRequired,
@@ -285,7 +235,7 @@ class ProjectDebugSymbols extends AsyncComponent {
                 features={features}
                 title={t('External Sources')}
                 disabled={!access.has('project:write')}
-                fields={formFields}
+                fields={[fields.builtinSymbolSources, fields.symbolSources]}
               />
             </Form>
           </>
