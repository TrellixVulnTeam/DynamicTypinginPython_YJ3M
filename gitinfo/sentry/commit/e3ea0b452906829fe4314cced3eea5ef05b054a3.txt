commit e3ea0b452906829fe4314cced3eea5ef05b054a3
Author: Matt Robenolt <matt@ydekproductions.com>
Date:   Fri Apr 29 17:31:15 2016 -0700

    Files raise ValueError not IOError for ops on closed files
    
    This changes IOErrors to ValueError to match the native file API, and
    adds a bit more test coverage.

diff --git a/src/sentry/models/file.py b/src/sentry/models/file.py
index d86a1cff3e..938416da3b 100644
--- a/src/sentry/models/file.py
+++ b/src/sentry/models/file.py
@@ -243,7 +243,7 @@ class ChunkedFileBlobIndexWrapper(object):
 
     def seek(self, pos):
         if self.closed:
-            raise IOError('Cannot seek on a closed file')
+            raise ValueError('I/O operation on closed file')
         for n, idx in enumerate(self._indexes[::-1]):
             if idx.offset <= pos:
                 if idx != self._curidx:
@@ -251,15 +251,17 @@ class ChunkedFileBlobIndexWrapper(object):
                     self._nextidx()
                 break
         else:
-            raise Exception('Cannot seek to pos')
+            raise ValueError('Cannot seek to pos')
         self._curfile.seek(pos - self._curidx.offset)
 
     def tell(self):
+        if self.closed:
+            raise ValueError('I/O operation on closed file')
         return self._curidx.offset + self._curfile.tell()
 
     def read(self, bytes=4096):
         if self.closed:
-            raise IOError('Cannot read on a closed file')
+            raise ValueError('I/O operation on closed file')
         result = ''
         while bytes and self._curfile is not None:
             blob_result = self._curfile.read(bytes)
diff --git a/tests/sentry/models/test_file.py b/tests/sentry/models/test_file.py
index b08ee3bfb1..34c94deab2 100644
--- a/tests/sentry/models/test_file.py
+++ b/tests/sentry/models/test_file.py
@@ -35,6 +35,8 @@ class FileTest(TestCase):
         assert results[1].offset == 3
         assert results[2].offset == 6
 
+        fp = None
+
         with file1.getfile() as fp:
             assert fp.read() == 'foo bar'
             fp.seek(2)
@@ -48,3 +50,12 @@ class FileTest(TestCase):
             assert fp.read() == 'bar'
             fp.seek(1000)
             fp.tell() == 1000
+
+        with self.assertRaises(ValueError):
+            fp.seek(0)
+
+        with self.assertRaises(ValueError):
+            fp.tell()
+
+        with self.assertRaises(ValueError):
+            fp.read()
