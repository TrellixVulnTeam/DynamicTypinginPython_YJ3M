commit da056bd296aafe82cfb624a7d00f295f14369249
Author: Dora <dora.l.chan@gmail.com>
Date:   Mon Feb 10 14:59:25 2020 -0800

    refactoring wrappers and updating bg colors (#16922)

diff --git a/src/sentry/static/sentry/app/views/eventsV2/eventDetails/content.tsx b/src/sentry/static/sentry/app/views/eventsV2/eventDetails/content.tsx
index 725f9e1bee..e29e6f597f 100644
--- a/src/sentry/static/sentry/app/views/eventsV2/eventDetails/content.tsx
+++ b/src/sentry/static/sentry/app/views/eventsV2/eventDetails/content.tsx
@@ -31,7 +31,7 @@ import TagsTable from '../tagsTable';
 import EventInterfaces from './eventInterfaces';
 import LinkedIssue from './linkedIssue';
 import DiscoverBreadcrumb from '../breadcrumb';
-import {SectionHeading} from '../styles';
+import {SectionHeading, ContentBox, HeaderBox} from '../styles';
 import OpsBreakdown from './transaction/opsBreakdown';
 
 const slugValidator = function(
@@ -305,28 +305,6 @@ const EventMetadata = (props: {
   );
 };
 
-const ContentBox = styled('div')`
-  padding: ${space(2)} ${space(4)};
-  margin: 0;
-
-  @media (min-width: ${p => p.theme.breakpoints[1]}) {
-    display: grid;
-    grid-template-rows: 1fr 30px;
-    grid-template-columns: 65% auto;
-    grid-column-gap: ${space(3)};
-  }
-
-  @media (min-width: ${p => p.theme.breakpoints[2]}) {
-    grid-template-columns: auto 325px;
-  }
-`;
-
-const HeaderBox = styled(ContentBox)`
-  background-color: ${p => p.theme.white};
-  border-bottom: 1px solid ${p => p.theme.borderDark};
-  grid-row-gap: ${space(2)};
-`;
-
 const Controller = styled('div')`
   display: flex;
   justify-content: flex-end;
diff --git a/src/sentry/static/sentry/app/views/eventsV2/eventInputName.tsx b/src/sentry/static/sentry/app/views/eventsV2/eventInputName.tsx
index 6f7ecd8d53..d68ad427ee 100644
--- a/src/sentry/static/sentry/app/views/eventsV2/eventInputName.tsx
+++ b/src/sentry/static/sentry/app/views/eventsV2/eventInputName.tsx
@@ -94,7 +94,7 @@ const StyledListHeader = styled('div')`
   font-size: ${p => p.theme.headerFontSize};
   color: ${p => p.theme.gray4};
   grid-column: 1/2;
-  align-self: center;
+  min-height: 30px;
   ${overflowEllipsis};
 `;
 
diff --git a/src/sentry/static/sentry/app/views/eventsV2/results.tsx b/src/sentry/static/sentry/app/views/eventsV2/results.tsx
index 37f264a3d2..29eaa605f9 100644
--- a/src/sentry/static/sentry/app/views/eventsV2/results.tsx
+++ b/src/sentry/static/sentry/app/views/eventsV2/results.tsx
@@ -7,7 +7,7 @@ import omit from 'lodash/omit';
 import isEqual from 'lodash/isEqual';
 
 import {Organization, GlobalSelection} from 'app/types';
-
+import {PageContent} from 'app/styles/organization';
 import {Client} from 'app/api';
 import {getParams} from 'app/components/organizations/globalSelectionHeader/getParams';
 import {loadOrganizationTags} from 'app/actionCreators/tags';
@@ -15,7 +15,6 @@ import GlobalSelectionHeader from 'app/components/organizations/globalSelectionH
 import NoProjectMessage from 'app/components/noProjectMessage';
 import SentryDocumentTitle from 'app/components/sentryDocumentTitle';
 
-import {PageContent} from 'app/styles/organization';
 import space from 'app/styles/space';
 
 import SearchBar from 'app/views/events/searchBar';
@@ -33,6 +32,7 @@ import ResultsHeader from './resultsHeader';
 import ResultsChart from './resultsChart';
 import EventView, {isAPIPayloadSimilar} from './eventView';
 import {generateTitle, fetchTotalCount} from './utils';
+import {ContentBox} from './styles';
 
 type Props = {
   api: Client;
@@ -211,42 +211,44 @@ class Results extends React.Component<Props, State> {
       <SentryDocumentTitle title={title} objSlug={organization.slug}>
         <React.Fragment>
           <GlobalSelectionHeader organization={organization} />
-          <NoProjectMessage organization={organization}>
-            <ResultsHeader
-              organization={organization}
-              location={location}
-              eventView={eventView}
-            />
-            <StyledPageContent>
-              <Top>
-                {this.renderError(error)}
-                <StyledSearchBar
-                  organization={organization}
-                  projectIds={eventView.project}
-                  query={query}
-                  onSearch={this.handleSearch}
-                />
-                <ResultsChart
-                  router={router}
-                  organization={organization}
-                  eventView={eventView}
-                  location={location}
-                  onAxisChange={this.handleYAxisChange}
-                  total={totalValues}
-                />
-              </Top>
-              <Main eventView={eventView}>
-                <Table
-                  organization={organization}
-                  eventView={eventView}
-                  location={location}
-                  title={title}
-                  setError={this.setError}
-                />
-              </Main>
-              <Side eventView={eventView}>{this.renderTagsTable()}</Side>
-            </StyledPageContent>
-          </NoProjectMessage>
+          <StyledPageContent>
+            <NoProjectMessage organization={organization}>
+              <ResultsHeader
+                organization={organization}
+                location={location}
+                eventView={eventView}
+              />
+              <ContentBox>
+                <Top>
+                  {this.renderError(error)}
+                  <StyledSearchBar
+                    organization={organization}
+                    projectIds={eventView.project}
+                    query={query}
+                    onSearch={this.handleSearch}
+                  />
+                  <ResultsChart
+                    router={router}
+                    organization={organization}
+                    eventView={eventView}
+                    location={location}
+                    onAxisChange={this.handleYAxisChange}
+                    total={totalValues}
+                  />
+                </Top>
+                <Main eventView={eventView}>
+                  <Table
+                    organization={organization}
+                    eventView={eventView}
+                    location={location}
+                    title={title}
+                    setError={this.setError}
+                  />
+                </Main>
+                <Side eventView={eventView}>{this.renderTagsTable()}</Side>
+              </ContentBox>
+            </NoProjectMessage>
+          </StyledPageContent>
         </React.Fragment>
       </SentryDocumentTitle>
     );
@@ -255,19 +257,9 @@ class Results extends React.Component<Props, State> {
 
 // These styled components are used in getsentry to create a paywall page.
 // Be careful changing their interfaces.
-export const StyledPageContent = styled(PageContent)`
-  margin: 0;
-
-  @media (min-width: ${p => p.theme.breakpoints[1]}) {
-    display: grid;
-    grid-template-columns: 66% auto;
-    align-content: start;
-    grid-gap: ${space(3)};
-  }
 
-  @media (min-width: ${p => p.theme.breakpoints[2]}) {
-    grid-template-columns: auto 325px;
-  }
+const StyledPageContent = styled(PageContent)`
+  padding: 0;
 `;
 
 export const StyledSearchBar = styled(SearchBar)`
diff --git a/src/sentry/static/sentry/app/views/eventsV2/styles.tsx b/src/sentry/static/sentry/app/views/eventsV2/styles.tsx
index 96e8e337d1..16721673bb 100644
--- a/src/sentry/static/sentry/app/views/eventsV2/styles.tsx
+++ b/src/sentry/static/sentry/app/views/eventsV2/styles.tsx
@@ -38,18 +38,17 @@ export const ChartControls = styled('div')`
   border-top: 1px solid ${p => p.theme.borderLight};
 `;
 
-export const HeaderBox = styled('div')`
+export const ContentBox = styled('div')`
   padding: ${space(2)} ${space(4)};
-  background-color: ${p => p.theme.white};
-  border-bottom: 1px solid ${p => p.theme.borderDark};
-  grid-row-gap: ${space(2)};
   margin: 0;
+  background-color: ${p => p.theme.white};
+  flex-grow: 1;
 
   @media (min-width: ${p => p.theme.breakpoints[1]}) {
     display: grid;
-    grid-template-rows: 1fr 30px;
-    grid-template-columns: 65% auto;
-    grid-column-gap: ${space(3)};
+    grid-template-columns: 66% auto;
+    align-content: start;
+    grid-gap: ${space(3)};
   }
 
   @media (min-width: ${p => p.theme.breakpoints[2]}) {
@@ -57,6 +56,13 @@ export const HeaderBox = styled('div')`
   }
 `;
 
+export const HeaderBox = styled(ContentBox)`
+  border-bottom: 1px solid ${p => p.theme.borderDark};
+  grid-row-gap: ${space(1)};
+  background-color: transparent;
+  flex-grow: 0;
+`;
+
 export const HeaderControls = styled('div')`
   display: flex;
   justify-self: end;
