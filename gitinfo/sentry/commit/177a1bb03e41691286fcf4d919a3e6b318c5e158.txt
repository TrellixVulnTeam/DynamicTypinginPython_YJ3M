commit 177a1bb03e41691286fcf4d919a3e6b318c5e158
Author: Katie Lundsgaard <katie@getsentry.com>
Date:   Fri Aug 4 14:16:08 2017 -0700

    Don't try to create groups for events that should be ignored (#5770)

diff --git a/bin/load-mocks b/bin/load-mocks
index ea7d7785e0..0e156f804a 100755
--- a/bin/load-mocks
+++ b/bin/load-mocks
@@ -18,6 +18,7 @@ from loremipsum import Generator
 from pytz import utc
 
 from sentry import buffer, roles
+from sentry.event_manager import HashDiscarded
 from sentry.models import (
     Activity, Broadcast, Commit, CommitAuthor, CommitFileChange, Deploy,
     Environment, File, Group, GroupMeta, GroupRelease, GroupTombstone, Organization,
@@ -66,10 +67,13 @@ def make_sentence(words=None):
 
 
 def create_sample_event(*args, **kwargs):
-    event = _create_sample_event(*args, **kwargs)
-    features.record([event])
-    return event
-
+    try:
+        event = _create_sample_event(*args, **kwargs)
+    except HashDiscarded as e:
+        print "> Skipping Event: {}".format(e.message)
+    else:
+        features.record([event])
+        return event
 
 def generate_commits(user):
     commits = []
@@ -153,7 +157,11 @@ def create_system_time_series():
 
 
 def create_sample_time_series(event, release=None):
+    if event is None:
+        return
+
     group = event.group
+
     project = group.project
 
     key = project.key_set.all()[0]
@@ -541,20 +549,21 @@ def main(num_events=1, extra_events=False):
                     environment=ENVIRONMENTS.next(),
                     user=generate_user(),
                 )
+            if event5:
+                Commit.objects.get_or_create(
+                    organization_id=org.id,
+                    repository_id=repo[0].id,
+                    key=sha1(uuid4().hex).hexdigest(),
+                    defaults={
+                        'author': CommitAuthor.objects.get_or_create(
+                            organization_id=org.id,
+                            email=user.email,
+                            defaults={'name': user.name}
+                        )[0],
+                        'message': 'Ooops!\nFixes {}'.format(event5.group.qualified_short_id),
+                    },
+                )[0]
 
-            Commit.objects.get_or_create(
-                organization_id=org.id,
-                repository_id=repo[0].id,
-                key=sha1(uuid4().hex).hexdigest(),
-                defaults={
-                    'author': CommitAuthor.objects.get_or_create(
-                        organization_id=org.id,
-                        email=user.email,
-                        defaults={'name': user.name}
-                    )[0],
-                    'message': 'Ooops!\nFixes {}'.format(event5.group.qualified_short_id),
-                },
-            )[0]
 
             create_sample_event(
                 project=project,
@@ -563,23 +572,24 @@ def main(num_events=1, extra_events=False):
             )
 
             with transaction.atomic():
-                try:
-                    GroupMeta.objects.create(
-                        group=event1.group,
-                        key='github:tid',
-                        value='134',
-                    )
-                except IntegrityError:
-                    pass
-
-            UserReport.objects.create(
-                project=project,
-                event_id=event3.event_id,
-                group=event3.group,
-                name='Jane Doe',
-                email='jane@example.com',
-                comments=make_sentence(),
-            )
+                if event1:
+                    try:
+                        GroupMeta.objects.create(
+                            group=event1.group,
+                            key='github:tid',
+                            value='134',
+                        )
+                    except IntegrityError:
+                        pass
+            if event3:
+                UserReport.objects.create(
+                    project=project,
+                    event_id=event3.event_id,
+                    group=event3.group,
+                    name='Jane Doe',
+                    email='jane@example.com',
+                    comments=make_sentence(),
+                )
 
             print('    > Loading time series data'.format(project_name))
 
