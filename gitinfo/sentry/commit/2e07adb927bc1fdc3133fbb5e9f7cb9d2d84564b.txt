commit 2e07adb927bc1fdc3133fbb5e9f7cb9d2d84564b
Author: James Cunningham <jtcunning@getsentry.com>
Date:   Wed May 29 14:52:13 2019 -0700

    misc(metrics): First pass at un-sampled single metric paths. (#13434)
    
    * misc(metrics): First pass at un-sampled single metric paths.
    
    * Add integrations metrics production.

diff --git a/src/sentry/integrations/client.py b/src/sentry/integrations/client.py
index 565cf38b68..1aeb188a4c 100644
--- a/src/sentry/integrations/client.py
+++ b/src/sentry/integrations/client.py
@@ -114,11 +114,14 @@ class SequenceApiResponse(list, BaseApiResponse):
         return self
 
 
-def track_response_code(host, code):
-    metrics.incr('integrations.http_response', tags={
-        'host': host,
-        'status': code
-    })
+def track_response_code(integration, code):
+    metrics.incr(
+        'integrations.http_response',
+        sample_rate=1.0,
+        tags={
+            'integration': integration,
+            'status': code
+        })
 
 
 class ApiClient(object):
@@ -162,7 +165,11 @@ class ApiClient(object):
         full_url = self.build_url(path)
         session = build_session()
 
-        metrics.incr('integrations.http_request', tags={'integration': self.integration_name})
+        metrics.incr(
+            'integrations.http_request',
+            sample_rate=1.0,
+            tags={'integration': self.integration_name}
+        )
         try:
             resp = getattr(session, method.lower())(
                 url=full_url,
@@ -177,16 +184,22 @@ class ApiClient(object):
             )
             resp.raise_for_status()
         except ConnectionError as e:
-            metrics.incr('integrations.http_response', tags={
-                'integration': self.integration_name,
-                'status': 'connection_error'
-            })
+            metrics.incr(
+                'integrations.http_response',
+                sample_rate=1.0,
+                tags={
+                    'integration': self.integration_name,
+                    'status': 'connection_error'
+                })
             raise ApiHostError.from_exception(e)
         except Timeout as e:
-            metrics.incr('integrations.http_response', tags={
-                'integration': self.integration_name,
-                'status': 'timeout'
-            })
+            metrics.incr(
+                'integrations.http_response',
+                sample_rate=1.0,
+                tags={
+                    'integration': self.integration_name,
+                    'status': 'timeout'
+                })
             raise ApiTimeoutError.from_exception(e)
         except HTTPError as e:
             resp = e.response
diff --git a/src/sentry/runner/commands/cleanup.py b/src/sentry/runner/commands/cleanup.py
index 6ead2b8ad1..752efd0abe 100644
--- a/src/sentry/runner/commands/cleanup.py
+++ b/src/sentry/runner/commands/cleanup.py
@@ -323,7 +323,7 @@ def cleanup(days, project, concurrency, silent, model, router, timed):
 
     if timed:
         duration = int(time.time() - start_time)
-        metrics.timing('cleanup.duration', duration, instance=router)
+        metrics.timing('cleanup.duration', duration, instance=router, sample_rate=1.0)
         click.echo("Clean up took %s second(s)." % duration)
 
 
diff --git a/src/sentry/web/frontend/auth_login.py b/src/sentry/web/frontend/auth_login.py
index c72641ebe0..e3c99d9e1a 100644
--- a/src/sentry/web/frontend/auth_login.py
+++ b/src/sentry/web/frontend/auth_login.py
@@ -151,7 +151,12 @@ class AuthLoginView(BaseView):
                 login_form.errors['__all__'] = [
                     u'You have made too many login attempts. Please try again later.'
                 ]
-                metrics.incr('login.attempt', instance='rate_limited', skip_internal=True)
+                metrics.incr(
+                    'login.attempt',
+                    instance='rate_limited',
+                    skip_internal=True,
+                    sample_rate=1.0
+                )
             elif login_form.is_valid():
                 user = login_form.get_user()
 
@@ -160,14 +165,24 @@ class AuthLoginView(BaseView):
                     user,
                     organization_id=organization.id if organization else None,
                 )
-                metrics.incr('login.attempt', instance='success', skip_internal=True)
+                metrics.incr(
+                    'login.attempt',
+                    instance='success',
+                    skip_internal=True,
+                    sample_rate=1.0
+                )
 
                 if not user.is_active:
                     return self.redirect(reverse('sentry-reactivate-account'))
 
                 return self.redirect(auth.get_login_redirect(request))
             else:
-                metrics.incr('login.attempt', instance='failure', skip_internal=True)
+                metrics.incr(
+                    'login.attempt',
+                    instance='failure',
+                    skip_internal=True,
+                    sample_rate=1.0
+                )
 
         context = {
             'op': op or 'login',
