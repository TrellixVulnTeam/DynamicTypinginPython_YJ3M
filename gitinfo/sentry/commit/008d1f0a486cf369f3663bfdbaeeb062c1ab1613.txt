commit 008d1f0a486cf369f3663bfdbaeeb062c1ab1613
Author: Priscila Oliveira <priscilawebdev@gmail.com>
Date:   Tue May 26 18:46:06 2020 +0200

    ref(ui): Renamed breadcrumbs files (#19013)

diff --git a/src/sentry/static/sentry/app/components/events/eventEntriesBreadcrumbs.tsx b/src/sentry/static/sentry/app/components/events/eventEntriesBreadcrumbs.tsx
index 17d5771a66..c1bf9fe84e 100644
--- a/src/sentry/static/sentry/app/components/events/eventEntriesBreadcrumbs.tsx
+++ b/src/sentry/static/sentry/app/components/events/eventEntriesBreadcrumbs.tsx
@@ -2,16 +2,16 @@ import React from 'react';
 
 import Feature from 'app/components/acl/feature';
 import BreadcrumbsInterface from 'app/components/events/interfaces/breadcrumbs/breadcrumbs';
-import BreadcrumbsInterfaceV2 from 'app/components/events/interfaces/breadcrumbsV2/breadcrumbs';
+import {Breadcrumbs} from 'app/components/events/interfaces/breadcrumbsV2/breadcrumbs';
 
-type Props = React.ComponentProps<typeof BreadcrumbsInterfaceV2>;
+type Props = React.ComponentProps<typeof Breadcrumbs>;
 type BreadcrumbsInterfaceProps = React.ComponentProps<typeof BreadcrumbsInterface>;
 
 const EventEntriesBreadcrumbs = (props: Props) => (
   <Feature features={['breadcrumbs-v2']}>
     {({hasFeature}) =>
       hasFeature ? (
-        <BreadcrumbsInterfaceV2 {...props} />
+        <Breadcrumbs {...props} />
       ) : (
         <BreadcrumbsInterface {...(props as BreadcrumbsInterfaceProps)} />
       )
diff --git a/src/sentry/static/sentry/app/components/events/interfaces/breadcrumbsV2/breadcrumbData/breadcrumbData.tsx b/src/sentry/static/sentry/app/components/events/interfaces/breadcrumbsV2/breadcrumbData/breadcrumbData.tsx
deleted file mode 100644
index ff668cae4f..0000000000
--- a/src/sentry/static/sentry/app/components/events/interfaces/breadcrumbsV2/breadcrumbData/breadcrumbData.tsx
+++ /dev/null
@@ -1,33 +0,0 @@
-import React from 'react';
-
-import {Event} from 'app/types';
-
-import BreadcrumbDataDefault from './breadcrumbDataDefault';
-import BreadcrumbDataException from './breadcrumbDataException';
-import BreadcrumbDataHttp from './breadcrumbDataHttp';
-import {Breadcrumb, BreadcrumbType} from '../types';
-
-type Props = {
-  breadcrumb: Breadcrumb;
-  event: Event;
-  orgId: string | null;
-};
-
-const BreadcrumbData = ({breadcrumb, event, orgId}: Props) => {
-  if (breadcrumb.type === BreadcrumbType.HTTP) {
-    return <BreadcrumbDataHttp breadcrumb={breadcrumb} />;
-  }
-
-  if (
-    breadcrumb.type === BreadcrumbType.WARNING ||
-    breadcrumb.type === BreadcrumbType.ERROR
-  ) {
-    return (
-      <BreadcrumbDataException event={event} orgId={orgId} breadcrumb={breadcrumb} />
-    );
-  }
-
-  return <BreadcrumbDataDefault breadcrumb={breadcrumb} />;
-};
-
-export default BreadcrumbData;
diff --git a/src/sentry/static/sentry/app/components/events/interfaces/breadcrumbsV2/breadcrumbFilter/breadcrumbFilterGroupIcon.tsx b/src/sentry/static/sentry/app/components/events/interfaces/breadcrumbsV2/breadcrumbFilter/breadcrumbFilterGroupIcon.tsx
deleted file mode 100644
index 1887be3351..0000000000
--- a/src/sentry/static/sentry/app/components/events/interfaces/breadcrumbsV2/breadcrumbFilter/breadcrumbFilterGroupIcon.tsx
+++ /dev/null
@@ -1,21 +0,0 @@
-import React from 'react';
-
-import {IconWrapper} from '../styles';
-import {IconProps} from '../types';
-import {BreadcrumbDetails} from './types';
-
-type Props = Omit<BreadcrumbDetails, 'description'>;
-
-const BreadcrumbFilterGroupIcon = ({icon, color}: Props) => {
-  if (!icon) return null;
-
-  const Icon = icon as React.ComponentType<IconProps>;
-
-  return (
-    <IconWrapper color={color} size={20}>
-      <Icon size="xs" />
-    </IconWrapper>
-  );
-};
-
-export default BreadcrumbFilterGroupIcon;
diff --git a/src/sentry/static/sentry/app/components/events/interfaces/breadcrumbsV2/breadcrumbs.tsx b/src/sentry/static/sentry/app/components/events/interfaces/breadcrumbsV2/breadcrumbs.tsx
index f51e031346..cee83135ff 100644
--- a/src/sentry/static/sentry/app/components/events/interfaces/breadcrumbsV2/breadcrumbs.tsx
+++ b/src/sentry/static/sentry/app/components/events/interfaces/breadcrumbsV2/breadcrumbs.tsx
@@ -20,21 +20,19 @@ import {
   BreadcrumbType,
   BreadcrumbLevelType,
 } from './types';
-import BreadcrumbFilter from './breadcrumbFilter/breadcrumbFilter';
-import convertBreadcrumbType from './convertBreadcrumbType';
-import getBreadcrumbTypeDetails from './getBreadcrumbTypeDetails';
-import {FilterGroupType} from './breadcrumbFilter/types';
-import BreadcrumbsListHeader from './breadcrumbsListHeader';
-import BreadcrumbsListBody from './breadcrumbsListBody';
-import BreadcrumbLevel from './breadcrumbLevel';
-import BreadcrumbIcon from './breadcrumbIcon';
+import {getTypeDetails} from './getTypeDetails';
+import {Filter} from './filter/filter';
+import {converType} from './convertType';
+import {FilterGroupType} from './filter/types';
+import {ListHeader} from './listHeader';
+import {ListBody} from './listBody';
+import {Level} from './level';
+import {Icon} from './icon';
 
 const MAX_CRUMBS_WHEN_COLLAPSED = 10;
 
 type BreadcrumbWithDetails = Breadcrumb & BreadcrumbDetails & {id: number};
-type BreadcrumbFilterGroups = React.ComponentProps<
-  typeof BreadcrumbFilter
->['filterGroups'];
+type FilterGroups = React.ComponentProps<typeof Filter>['filterGroups'];
 
 type State = {
   isCollapsed: boolean;
@@ -43,7 +41,7 @@ type State = {
   filteredByFilter: Array<BreadcrumbWithDetails>;
   filteredByCustomSearch: Array<BreadcrumbWithDetails>;
   filteredBreadcrumbs: Array<BreadcrumbWithDetails>;
-  filterGroups: BreadcrumbFilterGroups;
+  filterGroups: FilterGroups;
 };
 
 type Props = {
@@ -55,7 +53,7 @@ type Props = {
   };
 };
 
-class BreadcrumbsContainer extends React.Component<Props, State> {
+class Breadcrumbs extends React.Component<Props, State> {
   state: State = {
     isCollapsed: true,
     searchTerm: '',
@@ -80,21 +78,19 @@ class BreadcrumbsContainer extends React.Component<Props, State> {
       breadcrumbs = [...breadcrumbs, virtualCrumb];
     }
 
-    const breadcrumbTypes: BreadcrumbFilterGroups = [];
-    const breadcrumbLevels: BreadcrumbFilterGroups = [];
+    const breadcrumbTypes: FilterGroups = [];
+    const breadcrumbLevels: FilterGroups = [];
 
     const convertedBreadcrumbs = breadcrumbs.map((breadcrumb, index) => {
-      const convertedBreadcrumb = convertBreadcrumbType(breadcrumb);
-      const breadcrumbTypeDetails = getBreadcrumbTypeDetails(convertedBreadcrumb.type);
+      const convertedBreadcrumb = converType(breadcrumb);
+      const breadcrumbTypeDetails = getTypeDetails(convertedBreadcrumb.type);
 
       if (!breadcrumbTypes.find(b => b.type === convertedBreadcrumb.type)) {
         breadcrumbTypes.push({
           groupType: FilterGroupType.TYPE,
           type: convertedBreadcrumb.type,
           description: breadcrumbTypeDetails.description,
-          symbol: (
-            <BreadcrumbIcon {...omit(breadcrumbTypeDetails, 'description')} size="xs" />
-          ),
+          symbol: <Icon {...omit(breadcrumbTypeDetails, 'description')} size="xs" />,
           isChecked: true,
         });
       }
@@ -103,7 +99,7 @@ class BreadcrumbsContainer extends React.Component<Props, State> {
         breadcrumbLevels.push({
           groupType: FilterGroupType.LEVEL,
           type: String(convertedBreadcrumb?.level) as BreadcrumbLevelType,
-          symbol: <BreadcrumbLevel level={convertedBreadcrumb.level} />,
+          symbol: <Level level={convertedBreadcrumb.level} />,
           isChecked: true,
         });
       }
@@ -199,7 +195,7 @@ class BreadcrumbsContainer extends React.Component<Props, State> {
     };
   };
 
-  handleFilter = (filterGroups: BreadcrumbFilterGroups) => () => {
+  handleFilter = (filterGroups: FilterGroups) => () => {
     //types
     const breadcrumbFilterGroupTypes = filterGroups
       .filter(
@@ -310,15 +306,13 @@ class BreadcrumbsContainer extends React.Component<Props, State> {
       <EventDataSection
         type={type}
         title={
-          <h3>
-            <GuideAnchor target="breadcrumbs" position="bottom">
-              {t('Breadcrumbs')}
-            </GuideAnchor>
-          </h3>
+          <GuideAnchor target="breadcrumbs" position="bottom">
+            <h3>{t('Breadcrumbs')} </h3>
+          </GuideAnchor>
         }
         actions={
           <Search>
-            <BreadcrumbFilter onFilter={this.handleFilter} filterGroups={filterGroups} />
+            <Filter onFilter={this.handleFilter} filterGroups={filterGroups} />
             <StyledSearchBar
               placeholder={t('Search breadcrumbs\u2026')}
               onChange={this.handleFilterBySearchTerm}
@@ -332,8 +326,8 @@ class BreadcrumbsContainer extends React.Component<Props, State> {
         <Content>
           {filteredCollapsedBreadcrumbs.length > 0 ? (
             <React.Fragment>
-              <BreadcrumbsListHeader />
-              <BreadcrumbsListBody
+              <ListHeader />
+              <ListBody
                 event={event}
                 orgId={orgId}
                 onToggleCollapse={this.handleToggleCollapse}
@@ -359,7 +353,7 @@ class BreadcrumbsContainer extends React.Component<Props, State> {
   }
 }
 
-export default BreadcrumbsContainer;
+export {Breadcrumbs};
 
 const Content = styled('div')`
   border: 1px solid ${p => p.theme.borderDark};
diff --git a/src/sentry/static/sentry/app/components/events/interfaces/breadcrumbsV2/breadcrumbCategory.tsx b/src/sentry/static/sentry/app/components/events/interfaces/breadcrumbsV2/category.tsx
similarity index 76%
rename from src/sentry/static/sentry/app/components/events/interfaces/breadcrumbsV2/breadcrumbCategory.tsx
rename to src/sentry/static/sentry/app/components/events/interfaces/breadcrumbsV2/category.tsx
index 2599d6a431..4d005eb788 100644
--- a/src/sentry/static/sentry/app/components/events/interfaces/breadcrumbsV2/breadcrumbCategory.tsx
+++ b/src/sentry/static/sentry/app/components/events/interfaces/breadcrumbsV2/category.tsx
@@ -10,18 +10,18 @@ type Props = {
   category?: string | null;
 };
 
-const BreadcrumbCategory = ({category}: Props) => {
+const Category = ({category}: Props) => {
   const title = !defined(category) ? t('generic') : category;
   return (
     <Tooltip title={title}>
-      <Category title={title}>{title}</Category>
+      <Wrapper title={title}>{title}</Wrapper>
     </Tooltip>
   );
 };
 
-export default BreadcrumbCategory;
+export {Category};
 
-const Category = styled('div')`
+const Wrapper = styled('div')`
   color: ${p => p.theme.gray5};
   font-size: ${p => p.theme.fontSizeSmall};
   font-weight: 700;
diff --git a/src/sentry/static/sentry/app/components/events/interfaces/breadcrumbsV2/breadcrumbCollapsed.tsx b/src/sentry/static/sentry/app/components/events/interfaces/breadcrumbsV2/collapsed.tsx
similarity index 88%
rename from src/sentry/static/sentry/app/components/events/interfaces/breadcrumbsV2/breadcrumbCollapsed.tsx
rename to src/sentry/static/sentry/app/components/events/interfaces/breadcrumbsV2/collapsed.tsx
index 41a2fc11d4..dff2388e37 100644
--- a/src/sentry/static/sentry/app/components/events/interfaces/breadcrumbsV2/breadcrumbCollapsed.tsx
+++ b/src/sentry/static/sentry/app/components/events/interfaces/breadcrumbsV2/collapsed.tsx
@@ -12,7 +12,7 @@ type Props = {
   quantity: number;
 };
 
-const BreadcrumbCollapsed = ({quantity, onClick}: Props) => (
+const Collapsed = ({quantity, onClick}: Props) => (
   <Wrapper data-test-id="breadcrumb-collapsed" onClick={onClick}>
     <IconWrapper>
       <IconEllipsis />
@@ -21,7 +21,7 @@ const BreadcrumbCollapsed = ({quantity, onClick}: Props) => (
   </Wrapper>
 );
 
-export default BreadcrumbCollapsed;
+export {Collapsed};
 
 const Wrapper = styled(GridCellLeft)`
   cursor: pointer;
diff --git a/src/sentry/static/sentry/app/components/events/interfaces/breadcrumbsV2/convertBreadcrumbType.tsx b/src/sentry/static/sentry/app/components/events/interfaces/breadcrumbsV2/convertType.tsx
similarity index 91%
rename from src/sentry/static/sentry/app/components/events/interfaces/breadcrumbsV2/convertBreadcrumbType.tsx
rename to src/sentry/static/sentry/app/components/events/interfaces/breadcrumbsV2/convertType.tsx
index 3fc96408f6..b1702fd554 100644
--- a/src/sentry/static/sentry/app/components/events/interfaces/breadcrumbsV2/convertBreadcrumbType.tsx
+++ b/src/sentry/static/sentry/app/components/events/interfaces/breadcrumbsV2/convertType.tsx
@@ -2,7 +2,7 @@ import {defined} from 'app/utils';
 
 import {Breadcrumb, BreadcrumbType} from './types';
 
-function convertBreadcrumbType(breadcrumb: Breadcrumb): Breadcrumb {
+function converType(breadcrumb: Breadcrumb): Breadcrumb {
   if (breadcrumb.type === BreadcrumbType.EXCEPTION) {
     return {
       ...breadcrumb,
@@ -48,4 +48,4 @@ function convertBreadcrumbType(breadcrumb: Breadcrumb): Breadcrumb {
   return breadcrumb;
 }
 
-export default convertBreadcrumbType;
+export {converType};
diff --git a/src/sentry/static/sentry/app/components/events/interfaces/breadcrumbsV2/data/data.tsx b/src/sentry/static/sentry/app/components/events/interfaces/breadcrumbsV2/data/data.tsx
new file mode 100644
index 0000000000..fbfa3ba256
--- /dev/null
+++ b/src/sentry/static/sentry/app/components/events/interfaces/breadcrumbsV2/data/data.tsx
@@ -0,0 +1,31 @@
+import React from 'react';
+
+import {Event} from 'app/types';
+
+import {Default} from './default';
+import {Exception} from './exception';
+import {Http} from './http';
+import {Breadcrumb, BreadcrumbType} from '../types';
+
+type Props = {
+  breadcrumb: Breadcrumb;
+  event: Event;
+  orgId: string | null;
+};
+
+const Data = ({breadcrumb, event, orgId}: Props) => {
+  if (breadcrumb.type === BreadcrumbType.HTTP) {
+    return <Http breadcrumb={breadcrumb} />;
+  }
+
+  if (
+    breadcrumb.type === BreadcrumbType.WARNING ||
+    breadcrumb.type === BreadcrumbType.ERROR
+  ) {
+    return <Exception event={event} orgId={orgId} breadcrumb={breadcrumb} />;
+  }
+
+  return <Default breadcrumb={breadcrumb} />;
+};
+
+export {Data};
diff --git a/src/sentry/static/sentry/app/components/events/interfaces/breadcrumbsV2/breadcrumbData/breadcrumbDataDefault.tsx b/src/sentry/static/sentry/app/components/events/interfaces/breadcrumbsV2/data/default.tsx
similarity index 68%
rename from src/sentry/static/sentry/app/components/events/interfaces/breadcrumbsV2/breadcrumbData/breadcrumbDataDefault.tsx
rename to src/sentry/static/sentry/app/components/events/interfaces/breadcrumbsV2/data/default.tsx
index dc3839069f..f205e0851e 100644
--- a/src/sentry/static/sentry/app/components/events/interfaces/breadcrumbsV2/breadcrumbData/breadcrumbDataDefault.tsx
+++ b/src/sentry/static/sentry/app/components/events/interfaces/breadcrumbsV2/data/default.tsx
@@ -4,20 +4,20 @@ import {getMeta} from 'app/components/events/meta/metaProxy';
 
 import getBreadcrumbCustomRendererValue from '../../breadcrumbs/getBreadcrumbCustomRendererValue';
 import {BreadcrumbTypeDefault, BreadcrumbTypeNavigation} from '../types';
-import BreadcrumbDataSummary from './breadcrumbDataSummary';
+import {Summary} from './summary';
 
 type Props = {
   breadcrumb: BreadcrumbTypeDefault | BreadcrumbTypeNavigation;
 };
 
-const BreadcrumbDataDefault = ({breadcrumb}: Props) => (
-  <BreadcrumbDataSummary kvData={breadcrumb.data}>
+const Default = ({breadcrumb}: Props) => (
+  <Summary kvData={breadcrumb.data}>
     {breadcrumb?.message &&
       getBreadcrumbCustomRendererValue({
         value: breadcrumb.message,
         meta: getMeta(breadcrumb, 'message'),
       })}
-  </BreadcrumbDataSummary>
+  </Summary>
 );
 
-export default BreadcrumbDataDefault;
+export {Default};
diff --git a/src/sentry/static/sentry/app/components/events/interfaces/breadcrumbsV2/breadcrumbData/breadcrumbDataException.tsx b/src/sentry/static/sentry/app/components/events/interfaces/breadcrumbsV2/data/exception.tsx
similarity index 90%
rename from src/sentry/static/sentry/app/components/events/interfaces/breadcrumbsV2/breadcrumbData/breadcrumbDataException.tsx
rename to src/sentry/static/sentry/app/components/events/interfaces/breadcrumbsV2/data/exception.tsx
index a1dbc5868a..188e3db80d 100644
--- a/src/sentry/static/sentry/app/components/events/interfaces/breadcrumbsV2/breadcrumbData/breadcrumbDataException.tsx
+++ b/src/sentry/static/sentry/app/components/events/interfaces/breadcrumbsV2/data/exception.tsx
@@ -10,7 +10,7 @@ import Link from 'app/components/links/link';
 
 import getBreadcrumbCustomRendererValue from '../../breadcrumbs/getBreadcrumbCustomRendererValue';
 import {BreadcrumbTypeDefault} from '../types';
-import BreadcrumbDataSummary from './breadcrumbDataSummary';
+import {Summary} from './summary';
 
 type Props = {
   breadcrumb: BreadcrumbTypeDefault;
@@ -18,12 +18,12 @@ type Props = {
   orgId: string | null;
 };
 
-const BreadcrumbDataException = ({breadcrumb, event, orgId}: Props) => {
+const Exception = ({breadcrumb, event, orgId}: Props) => {
   const {data} = breadcrumb;
   const dataValue = data?.value;
 
   return (
-    <BreadcrumbDataSummary kvData={omit(data, ['type', 'value'])}>
+    <Summary kvData={omit(data, ['type', 'value'])}>
       {data?.type &&
         getBreadcrumbCustomRendererValue({
           value: <strong>{`${data.type}: `}</strong>,
@@ -46,7 +46,7 @@ const BreadcrumbDataException = ({breadcrumb, event, orgId}: Props) => {
           ),
           meta: getMeta(breadcrumb, 'message'),
         })}
-    </BreadcrumbDataSummary>
+    </Summary>
   );
 };
 
@@ -93,4 +93,4 @@ const FormatMessage = withProjects(function FormatMessageInner({
   return <React.Fragment>{message}</React.Fragment>;
 });
 
-export default BreadcrumbDataException;
+export {Exception};
diff --git a/src/sentry/static/sentry/app/components/events/interfaces/breadcrumbsV2/breadcrumbData/breadcrumbDataHttp.tsx b/src/sentry/static/sentry/app/components/events/interfaces/breadcrumbsV2/data/http.tsx
similarity index 85%
rename from src/sentry/static/sentry/app/components/events/interfaces/breadcrumbsV2/breadcrumbData/breadcrumbDataHttp.tsx
rename to src/sentry/static/sentry/app/components/events/interfaces/breadcrumbsV2/data/http.tsx
index df957e248d..446eac7a49 100644
--- a/src/sentry/static/sentry/app/components/events/interfaces/breadcrumbsV2/breadcrumbData/breadcrumbDataHttp.tsx
+++ b/src/sentry/static/sentry/app/components/events/interfaces/breadcrumbsV2/data/http.tsx
@@ -8,13 +8,13 @@ import {defined} from 'app/utils';
 
 import getBreadcrumbCustomRendererValue from '../../breadcrumbs/getBreadcrumbCustomRendererValue';
 import {BreadcrumbTypeHTTP} from '../types';
-import BreadcrumbDataSummary from './breadcrumbDataSummary';
+import {Summary} from './summary';
 
 type Props = {
   breadcrumb: BreadcrumbTypeHTTP;
 };
 
-const BreadcrumbDataHttp = ({breadcrumb}: Props) => {
+const Http = ({breadcrumb}: Props) => {
   const {data} = breadcrumb;
 
   const renderUrl = (url: any) => {
@@ -38,7 +38,7 @@ const BreadcrumbDataHttp = ({breadcrumb}: Props) => {
   const statusCode = data?.status_code;
 
   return (
-    <BreadcrumbDataSummary kvData={omit(data, ['method', 'url', 'status_code'])}>
+    <Summary kvData={omit(data, ['method', 'url', 'status_code'])}>
       {data?.method &&
         getBreadcrumbCustomRendererValue({
           value: <strong>{`${data.method} `}</strong>,
@@ -56,8 +56,8 @@ const BreadcrumbDataHttp = ({breadcrumb}: Props) => {
           ),
           meta: getMeta(data, 'status_code'),
         })}
-    </BreadcrumbDataSummary>
+    </Summary>
   );
 };
 
-export default BreadcrumbDataHttp;
+export {Http};
diff --git a/src/sentry/static/sentry/app/components/events/interfaces/breadcrumbsV2/breadcrumbData/breadcrumbDataSummary.tsx b/src/sentry/static/sentry/app/components/events/interfaces/breadcrumbsV2/data/summary.tsx
similarity index 84%
rename from src/sentry/static/sentry/app/components/events/interfaces/breadcrumbsV2/breadcrumbData/breadcrumbDataSummary.tsx
rename to src/sentry/static/sentry/app/components/events/interfaces/breadcrumbsV2/data/summary.tsx
index 67c0eca94d..247b7af490 100644
--- a/src/sentry/static/sentry/app/components/events/interfaces/breadcrumbsV2/breadcrumbData/breadcrumbDataSummary.tsx
+++ b/src/sentry/static/sentry/app/components/events/interfaces/breadcrumbsV2/data/summary.tsx
@@ -16,7 +16,7 @@ type State = {
   hasOverflow: boolean;
 };
 
-class BreadcrumbDataSummary extends React.Component<Props, State> {
+class Summary extends React.Component<Props, State> {
   state = {
     isExpanded: false,
     hasOverflow: false,
@@ -43,15 +43,15 @@ class BreadcrumbDataSummary extends React.Component<Props, State> {
         const value =
           typeof kvData[key] === 'object' ? JSON.stringify(kvData[key]) : kvData[key];
         return (
-          <BreadcrumbDataSummaryData key={key}>
+          <Data key={key}>
             <StyledPre>
-              <BreadcrumbDataSummaryDataLabel>{`${key}: `}</BreadcrumbDataSummaryDataLabel>
+              <DataLabel>{`${key}: `}</DataLabel>
               {getBreadcrumbCustomRendererValue({
                 value,
                 meta: getMeta(kvData, key),
               })}
             </StyledPre>
-          </BreadcrumbDataSummaryData>
+          </Data>
         );
       });
   };
@@ -72,7 +72,7 @@ class BreadcrumbDataSummary extends React.Component<Props, State> {
   }
 }
 
-export default BreadcrumbDataSummary;
+export {Summary};
 
 const StyledPre = styled('pre')`
   padding: 0;
@@ -95,10 +95,10 @@ const StyledCode = styled('code')`
   line-height: 26px;
 `;
 
-const BreadcrumbDataSummaryData = styled('div')`
+const Data = styled('div')`
   font-size: ${p => p.theme.fontSizeSmall};
 `;
 
-const BreadcrumbDataSummaryDataLabel = styled('strong')`
+const DataLabel = styled('strong')`
   line-height: 17px;
 `;
diff --git a/src/sentry/static/sentry/app/components/events/interfaces/breadcrumbsV2/breadcrumbFilter/breadcrumbFilter.tsx b/src/sentry/static/sentry/app/components/events/interfaces/breadcrumbsV2/filter/filter.tsx
similarity index 91%
rename from src/sentry/static/sentry/app/components/events/interfaces/breadcrumbsV2/breadcrumbFilter/breadcrumbFilter.tsx
rename to src/sentry/static/sentry/app/components/events/interfaces/breadcrumbsV2/filter/filter.tsx
index 4c9b79f844..0c6492cb9a 100644
--- a/src/sentry/static/sentry/app/components/events/interfaces/breadcrumbsV2/breadcrumbFilter/breadcrumbFilter.tsx
+++ b/src/sentry/static/sentry/app/components/events/interfaces/breadcrumbsV2/filter/filter.tsx
@@ -7,9 +7,9 @@ import {t, tn} from 'app/locale';
 import DropdownControl from 'app/components/dropdownControl';
 import DropdownButton from 'app/components/dropdownButton';
 
-import BreadcrumbFilterGroup from './breadcrumbFilterGroup';
-import BreadcrumbFilterHeader from './breadcrumbFilterHeader';
-import BreadcrumbFilterFooter from './breadcrumbFilterFooter';
+import {Group} from './group';
+import {Header} from './header';
+import {Footer} from './footer';
 import {FilterGroup, FilterGroupType, FilterType} from './types';
 
 type Props = {
@@ -22,7 +22,7 @@ type State = {
   checkedOptionsQuantity: number;
 };
 
-class BreadcrumbFilter extends React.Component<Props, State> {
+class Filter extends React.Component<Props, State> {
   state: State = {
     filterGroups: [],
     checkedOptionsQuantity: 0,
@@ -125,12 +125,12 @@ class BreadcrumbFilter extends React.Component<Props, State> {
       <Wrapper>
         <DropdownControl menuWidth="240px" blendWithActor button={this.getDropDownButton}>
           <React.Fragment>
-            <BreadcrumbFilterHeader
+            <Header
               onSelectAll={this.handleSelectAll}
               selectedQuantity={checkedOptionsQuantity}
               isAllSelected={filterGroups.length === checkedOptionsQuantity}
             />
-            <BreadcrumbFilterGroup
+            <Group
               groupHeaderTitle={t('Type')}
               onClick={this.handleClickItem}
               data={filterGroups.filter(
@@ -138,7 +138,7 @@ class BreadcrumbFilter extends React.Component<Props, State> {
               )}
             />
             {hasFilterGroupsGroupTypeLevel && (
-              <BreadcrumbFilterGroup
+              <Group
                 groupHeaderTitle={t('Level')}
                 onClick={this.handleClickItem}
                 data={filterGroups.filter(
@@ -147,7 +147,7 @@ class BreadcrumbFilter extends React.Component<Props, State> {
               />
             )}
             {!isEqual(this.props.filterGroups, filterGroups) && (
-              <BreadcrumbFilterFooter onSubmit={onFilter(filterGroups)} />
+              <Footer onSubmit={onFilter(filterGroups)} />
             )}
           </React.Fragment>
         </DropdownControl>
@@ -156,7 +156,7 @@ class BreadcrumbFilter extends React.Component<Props, State> {
   }
 }
 
-export default BreadcrumbFilter;
+export {Filter};
 
 const StyledDropdownButton = styled(DropdownButton)<{hasDarkBorderBottomColor?: boolean}>`
   border-right: 0;
diff --git a/src/sentry/static/sentry/app/components/events/interfaces/breadcrumbsV2/breadcrumbFilter/breadcrumbFilterFooter.tsx b/src/sentry/static/sentry/app/components/events/interfaces/breadcrumbsV2/filter/footer.tsx
similarity index 87%
rename from src/sentry/static/sentry/app/components/events/interfaces/breadcrumbsV2/breadcrumbFilter/breadcrumbFilterFooter.tsx
rename to src/sentry/static/sentry/app/components/events/interfaces/breadcrumbsV2/filter/footer.tsx
index 09b42d2429..e1cb259ca9 100644
--- a/src/sentry/static/sentry/app/components/events/interfaces/breadcrumbsV2/breadcrumbFilter/breadcrumbFilterFooter.tsx
+++ b/src/sentry/static/sentry/app/components/events/interfaces/breadcrumbsV2/filter/footer.tsx
@@ -10,7 +10,7 @@ type Props = {
   onSubmit: () => void;
 };
 
-const BreadcrumbFilterFooter = ({onSubmit}: Props) => (
+const Footer = ({onSubmit}: Props) => (
   <Wrapper>
     <ApplyFilterButton onClick={onSubmit} size="xsmall" priority="primary">
       {t('Apply Filter')}
@@ -30,4 +30,4 @@ const ApplyFilterButton = styled(Button)`
   margin: ${space(0.5)} 0;
 `;
 
-export default BreadcrumbFilterFooter;
+export {Footer};
diff --git a/src/sentry/static/sentry/app/components/events/interfaces/breadcrumbsV2/breadcrumbFilter/breadcrumbFilterGroup.tsx b/src/sentry/static/sentry/app/components/events/interfaces/breadcrumbsV2/filter/group.tsx
similarity index 81%
rename from src/sentry/static/sentry/app/components/events/interfaces/breadcrumbsV2/breadcrumbFilter/breadcrumbFilterGroup.tsx
rename to src/sentry/static/sentry/app/components/events/interfaces/breadcrumbsV2/filter/group.tsx
index 472c0d0aac..4c2032d43b 100644
--- a/src/sentry/static/sentry/app/components/events/interfaces/breadcrumbsV2/breadcrumbFilter/breadcrumbFilterGroup.tsx
+++ b/src/sentry/static/sentry/app/components/events/interfaces/breadcrumbsV2/filter/group.tsx
@@ -12,7 +12,7 @@ type Props = {
   onClick: (type: FilterType, groupType: FilterGroupType) => void;
 };
 
-const BreadcrumbFilterGroup = ({groupHeaderTitle, data, onClick}: Props) => {
+const Group = ({groupHeaderTitle, data, onClick}: Props) => {
   const handleClick = (type: FilterType, groupType: FilterGroupType) => (
     event: React.MouseEvent<HTMLLIElement>
   ) => {
@@ -22,10 +22,10 @@ const BreadcrumbFilterGroup = ({groupHeaderTitle, data, onClick}: Props) => {
 
   return (
     <div>
-      <FilterGroupHeader>{groupHeaderTitle}</FilterGroupHeader>
-      <FilterGroupList>
+      <Header>{groupHeaderTitle}</Header>
+      <List>
         {data.map(({type, groupType, description, isChecked, symbol}) => (
-          <FilterGroupListItem
+          <ListItem
             key={type}
             isChecked={isChecked}
             onClick={handleClick(type, groupType)}
@@ -33,16 +33,16 @@ const BreadcrumbFilterGroup = ({groupHeaderTitle, data, onClick}: Props) => {
             {symbol}
             <ListItemDescription>{description}</ListItemDescription>
             <CheckboxFancy isChecked={isChecked} />
-          </FilterGroupListItem>
+          </ListItem>
         ))}
-      </FilterGroupList>
+      </List>
     </div>
   );
 };
 
-export default BreadcrumbFilterGroup;
+export {Group};
 
-const FilterGroupHeader = styled('div')`
+const Header = styled('div')`
   display: flex;
   align-items: center;
   margin: 0;
@@ -54,13 +54,13 @@ const FilterGroupHeader = styled('div')`
   border-bottom: 1px solid ${p => p.theme.borderDark};
 `;
 
-const FilterGroupList = styled('ul')`
+const List = styled('ul')`
   list-style: none;
   margin: 0;
   padding: 0;
 `;
 
-const FilterGroupListItem = styled('li')<{isChecked?: boolean}>`
+const ListItem = styled('li')<{isChecked?: boolean}>`
   display: grid;
   grid-template-columns: max-content 1fr max-content;
   grid-column-gap: ${space(1)};
diff --git a/src/sentry/static/sentry/app/components/events/interfaces/breadcrumbsV2/breadcrumbFilter/breadcrumbFilterHeader.tsx b/src/sentry/static/sentry/app/components/events/interfaces/breadcrumbsV2/filter/header.tsx
similarity index 91%
rename from src/sentry/static/sentry/app/components/events/interfaces/breadcrumbsV2/breadcrumbFilter/breadcrumbFilterHeader.tsx
rename to src/sentry/static/sentry/app/components/events/interfaces/breadcrumbsV2/filter/header.tsx
index 11716988e0..a38bf9c09e 100644
--- a/src/sentry/static/sentry/app/components/events/interfaces/breadcrumbsV2/breadcrumbFilter/breadcrumbFilterHeader.tsx
+++ b/src/sentry/static/sentry/app/components/events/interfaces/breadcrumbsV2/filter/header.tsx
@@ -11,11 +11,7 @@ type Props = {
   onSelectAll: (selectAll: boolean) => void;
 };
 
-const BreadcrumbFilterHeader = ({
-  selectedQuantity,
-  isAllSelected,
-  onSelectAll,
-}: Props) => {
+const Header = ({selectedQuantity, isAllSelected, onSelectAll}: Props) => {
   const handleClick = (event: React.MouseEvent<HTMLDivElement>) => {
     event.stopPropagation();
 
@@ -69,4 +65,4 @@ const CheckboxWrapper = styled('div')`
   font-size: ${p => p.theme.fontSizeMedium};
 `;
 
-export default BreadcrumbFilterHeader;
+export {Header};
diff --git a/src/sentry/static/sentry/app/components/events/interfaces/breadcrumbsV2/breadcrumbFilter/types.tsx b/src/sentry/static/sentry/app/components/events/interfaces/breadcrumbsV2/filter/types.tsx
similarity index 100%
rename from src/sentry/static/sentry/app/components/events/interfaces/breadcrumbsV2/breadcrumbFilter/types.tsx
rename to src/sentry/static/sentry/app/components/events/interfaces/breadcrumbsV2/filter/types.tsx
diff --git a/src/sentry/static/sentry/app/components/events/interfaces/breadcrumbsV2/getBreadcrumbTypeDetails.tsx b/src/sentry/static/sentry/app/components/events/interfaces/breadcrumbsV2/getTypeDetails.tsx
similarity index 94%
rename from src/sentry/static/sentry/app/components/events/interfaces/breadcrumbsV2/getBreadcrumbTypeDetails.tsx
rename to src/sentry/static/sentry/app/components/events/interfaces/breadcrumbsV2/getTypeDetails.tsx
index e61894cff5..c93c372b0a 100644
--- a/src/sentry/static/sentry/app/components/events/interfaces/breadcrumbsV2/getBreadcrumbTypeDetails.tsx
+++ b/src/sentry/static/sentry/app/components/events/interfaces/breadcrumbsV2/getTypeDetails.tsx
@@ -15,8 +15,8 @@ import {t} from 'app/locale';
 
 import {BreadcrumbType, BreadcrumbDetails} from './types';
 
-function getBreadcrumbTypeDetails(breadcrumbType: BreadcrumbType): BreadcrumbDetails {
-  switch (breadcrumbType) {
+function getTypeDetails(type: BreadcrumbType): BreadcrumbDetails {
+  switch (type) {
     case BreadcrumbType.USER:
     case BreadcrumbType.UI:
       return {
@@ -101,4 +101,4 @@ function getBreadcrumbTypeDetails(breadcrumbType: BreadcrumbType): BreadcrumbDet
   }
 }
 
-export default getBreadcrumbTypeDetails;
+export {getTypeDetails};
diff --git a/src/sentry/static/sentry/app/components/events/interfaces/breadcrumbsV2/breadcrumbIcon.tsx b/src/sentry/static/sentry/app/components/events/interfaces/breadcrumbsV2/icon.tsx
similarity index 67%
rename from src/sentry/static/sentry/app/components/events/interfaces/breadcrumbsV2/breadcrumbIcon.tsx
rename to src/sentry/static/sentry/app/components/events/interfaces/breadcrumbsV2/icon.tsx
index 8d61f60b5b..c4e2df47ce 100644
--- a/src/sentry/static/sentry/app/components/events/interfaces/breadcrumbsV2/breadcrumbIcon.tsx
+++ b/src/sentry/static/sentry/app/components/events/interfaces/breadcrumbsV2/icon.tsx
@@ -9,13 +9,13 @@ import {BreadcrumbDetails} from './types';
 
 type Props = Omit<BreadcrumbDetails, 'description'> & Pick<SvgIconProps, 'size'>;
 
-const BreadcrumbIcon = ({icon, color, size}: Props) => {
-  const Icon = icon as React.ComponentType<SvgIconProps>;
+const Icon = ({icon, color, size}: Props) => {
+  const Svg = icon as React.ComponentType<SvgIconProps>;
   return (
     <IconWrapper color={color}>
-      <Icon size={size} />
+      <Svg size={size} />
     </IconWrapper>
   );
 };
 
-export default BreadcrumbIcon;
+export {Icon};
diff --git a/src/sentry/static/sentry/app/components/events/interfaces/breadcrumbsV2/breadcrumbLevel.tsx b/src/sentry/static/sentry/app/components/events/interfaces/breadcrumbsV2/level.tsx
similarity index 88%
rename from src/sentry/static/sentry/app/components/events/interfaces/breadcrumbsV2/breadcrumbLevel.tsx
rename to src/sentry/static/sentry/app/components/events/interfaces/breadcrumbsV2/level.tsx
index 0f9ab89b69..3857ea5a95 100644
--- a/src/sentry/static/sentry/app/components/events/interfaces/breadcrumbsV2/breadcrumbLevel.tsx
+++ b/src/sentry/static/sentry/app/components/events/interfaces/breadcrumbsV2/level.tsx
@@ -9,7 +9,7 @@ type Props = {
   level?: BreadcrumbLevelType;
 };
 
-const BreadcrumbLevel = ({level}: Props) => {
+const Level = ({level}: Props) => {
   switch (level) {
     case BreadcrumbLevelType.FATAL:
     case BreadcrumbLevelType.ERROR:
@@ -23,4 +23,4 @@ const BreadcrumbLevel = ({level}: Props) => {
   }
 };
 
-export default BreadcrumbLevel;
+export {Level};
diff --git a/src/sentry/static/sentry/app/components/events/interfaces/breadcrumbsV2/breadcrumbsListBody.tsx b/src/sentry/static/sentry/app/components/events/interfaces/breadcrumbsV2/listBody.tsx
similarity index 71%
rename from src/sentry/static/sentry/app/components/events/interfaces/breadcrumbsV2/breadcrumbsListBody.tsx
rename to src/sentry/static/sentry/app/components/events/interfaces/breadcrumbsV2/listBody.tsx
index d9e2ac9605..5a536db4c9 100644
--- a/src/sentry/static/sentry/app/components/events/interfaces/breadcrumbsV2/breadcrumbsListBody.tsx
+++ b/src/sentry/static/sentry/app/components/events/interfaces/breadcrumbsV2/listBody.tsx
@@ -5,12 +5,12 @@ import {Event} from 'app/types';
 import Tooltip from 'app/components/tooltip';
 import space from 'app/styles/space';
 
-import BreadcrumbTime from './breadcrumbTime';
-import BreadcrumbCollapsed from './breadcrumbCollapsed';
-import BreadcrumbData from './breadcrumbData/breadcrumbData';
-import BreadcrumbCategory from './breadcrumbCategory';
-import BreadcrumbIcon from './breadcrumbIcon';
-import BreadcrumbLevel from './breadcrumbLevel';
+import {Collapsed} from './collapsed';
+import {Data} from './data/data';
+import {Category} from './category';
+import {Time} from './time';
+import {Icon} from './icon';
+import {Level} from './level';
 import {Grid, GridCell, GridCellLeft} from './styles';
 import {Breadcrumb, BreadcrumbDetails, BreadcrumbType} from './types';
 
@@ -28,7 +28,7 @@ type State = {
   breadCrumbListHeight?: React.CSSProperties['maxHeight'];
 };
 
-class BreadcrumbsListBody extends React.Component<Props, State> {
+class ListBody extends React.Component<Props, State> {
   state: State = {};
 
   componentDidMount() {
@@ -51,7 +51,7 @@ class BreadcrumbsListBody extends React.Component<Props, State> {
     return (
       <Grid maxHeight={breadCrumbListHeight} ref={this.listRef}>
         {collapsedQuantity > 0 && (
-          <BreadcrumbCollapsed onClick={onToggleCollapse} quantity={collapsedQuantity} />
+          <Collapsed onClick={onToggleCollapse} quantity={collapsedQuantity} />
         )}
         {breadcrumbs.map(({color, icon, ...crumb}, idx) => {
           const hasError = crumb.type === BreadcrumbType.ERROR;
@@ -60,24 +60,20 @@ class BreadcrumbsListBody extends React.Component<Props, State> {
             <React.Fragment key={idx}>
               <GridCellLeft hasError={hasError} isLastItem={isLastItem}>
                 <Tooltip title={crumb.description}>
-                  <BreadcrumbIcon icon={icon} color={color} />
+                  <Icon icon={icon} color={color} />
                 </Tooltip>
               </GridCellLeft>
               <GridCellCategory hasError={hasError} isLastItem={isLastItem}>
-                <BreadcrumbCategory category={crumb?.category} />
+                <Category category={crumb?.category} />
               </GridCellCategory>
               <GridCell hasError={hasError} isLastItem={isLastItem}>
-                <BreadcrumbData
-                  event={event}
-                  orgId={orgId}
-                  breadcrumb={crumb as Breadcrumb}
-                />
+                <Data event={event} orgId={orgId} breadcrumb={crumb as Breadcrumb} />
               </GridCell>
               <GridCell hasError={hasError} isLastItem={isLastItem}>
-                <BreadcrumbLevel level={crumb.level} />
+                <Level level={crumb.level} />
               </GridCell>
               <GridCell hasError={hasError} isLastItem={isLastItem}>
-                <BreadcrumbTime timestamp={crumb.timestamp} />
+                <Time timestamp={crumb.timestamp} />
               </GridCell>
             </React.Fragment>
           );
@@ -87,7 +83,7 @@ class BreadcrumbsListBody extends React.Component<Props, State> {
   }
 }
 
-export default BreadcrumbsListBody;
+export {ListBody};
 
 const GridCellCategory = styled(GridCell)`
   @media (min-width: ${p => p.theme.breakpoints[0]}) {
diff --git a/src/sentry/static/sentry/app/components/events/interfaces/breadcrumbsV2/breadcrumbsListHeader.tsx b/src/sentry/static/sentry/app/components/events/interfaces/breadcrumbsV2/listHeader.tsx
similarity index 65%
rename from src/sentry/static/sentry/app/components/events/interfaces/breadcrumbsV2/breadcrumbsListHeader.tsx
rename to src/sentry/static/sentry/app/components/events/interfaces/breadcrumbsV2/listHeader.tsx
index b366fbb7f0..ee993ec74d 100644
--- a/src/sentry/static/sentry/app/components/events/interfaces/breadcrumbsV2/breadcrumbsListHeader.tsx
+++ b/src/sentry/static/sentry/app/components/events/interfaces/breadcrumbsV2/listHeader.tsx
@@ -6,19 +6,17 @@ import space from 'app/styles/space';
 
 import {Grid, GridCell} from './styles';
 
-const BreadcrumbsListHeader = () => {
-  return (
-    <Grid>
-      <StyledGridCell>{t('Type')}</StyledGridCell>
-      <StyledGridCellCategory>{t('Category')}</StyledGridCellCategory>
-      <StyledGridCell>{t('Description')}</StyledGridCell>
-      <StyledGridCell>{t('Level')}</StyledGridCell>
-      <StyledGridCell>{t('Time')}</StyledGridCell>
-    </Grid>
-  );
-};
+const ListHeader = () => (
+  <Grid>
+    <StyledGridCell>{t('Type')}</StyledGridCell>
+    <StyledGridCellCategory>{t('Category')}</StyledGridCellCategory>
+    <StyledGridCell>{t('Description')}</StyledGridCell>
+    <StyledGridCell>{t('Level')}</StyledGridCell>
+    <StyledGridCell>{t('Time')}</StyledGridCell>
+  </Grid>
+);
 
-export default BreadcrumbsListHeader;
+export {ListHeader};
 
 const StyledGridCell = styled(GridCell)`
   border-bottom: 1px solid ${p => p.theme.borderDark};
diff --git a/src/sentry/static/sentry/app/components/events/interfaces/breadcrumbsV2/breadcrumbTime.tsx b/src/sentry/static/sentry/app/components/events/interfaces/breadcrumbsV2/time.tsx
similarity index 87%
rename from src/sentry/static/sentry/app/components/events/interfaces/breadcrumbsV2/breadcrumbTime.tsx
rename to src/sentry/static/sentry/app/components/events/interfaces/breadcrumbsV2/time.tsx
index 97e3ad95a1..e1435c48be 100644
--- a/src/sentry/static/sentry/app/components/events/interfaces/breadcrumbsV2/breadcrumbTime.tsx
+++ b/src/sentry/static/sentry/app/components/events/interfaces/breadcrumbsV2/time.tsx
@@ -17,21 +17,21 @@ type Props = {
   timestamp?: string;
 };
 
-const BreadcrumbTime = ({timestamp}: Props) =>
+const Time = ({timestamp}: Props) =>
   defined(timestamp) ? (
     <Tooltip title={getBreadcrumbTimeTooltipTitle(timestamp)}>
-      <Time>
+      <Wrapper>
         {getDynamicText({
           value: moment(timestamp).format('HH:mm:ss'),
           fixed: '00:00:00',
         })}
-      </Time>
+      </Wrapper>
     </Tooltip>
   ) : null;
 
-export default BreadcrumbTime;
+export {Time};
 
-const Time = styled('div')`
+const Wrapper = styled('div')`
   font-size: ${p => p.theme.fontSizeSmall};
   color: ${p => p.theme.gray4};
   ${overflowEllipsis};
