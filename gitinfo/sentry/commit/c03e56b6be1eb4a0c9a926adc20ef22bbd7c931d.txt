commit c03e56b6be1eb4a0c9a926adc20ef22bbd7c931d
Author: Jan Michael Auer <account@jauer.org>
Date:   Tue Oct 30 23:29:21 2018 +0100

    fix(minidump): Fix check for minidump events (#10342)
    
    * fix: Fix check for minidump events
    
    * fix: Fix AttributeErrors in CFI reprocessing
    
    * test: Add tests for is_minidump_event

diff --git a/src/sentry/lang/native/cfi.py b/src/sentry/lang/native/cfi.py
index 18cb9b7bf7..13a0378ac2 100644
--- a/src/sentry/lang/native/cfi.py
+++ b/src/sentry/lang/native/cfi.py
@@ -169,7 +169,7 @@ class ThreadProcessingHandle(object):
         self.changed = False
 
     def _get_modules(self):
-        modules = self.data.get('debug_meta', {}).get('images', [])
+        modules = (self.data.get('debug_meta') or {}).get('images') or []
         return ObjectLookup(modules)
 
     def iter_modules(self):
@@ -182,16 +182,16 @@ class ThreadProcessingHandle(object):
         """Returns an iterator over all threads of the process at the time of
         the crash, including the crashing thread. The values are of type
         ``ThreadRef``."""
-        for thread in self.data.get('threads', {}).get('values', []):
+        for thread in (self.data.get('threads') or {}).get('values') or []:
             if thread.get('crashed'):
                 # XXX: Assumes that the full list of threads is present in the
                 # original crash report. This is guaranteed by KSCrash and our
                 # minidump utility.
-                exceptions = self.data.get('exception', {}).get('values', [])
+                exceptions = (self.data.get('exception') or {}).get('values') or []
                 exception = exceptions[0] if exceptions else {}
-                frames = exception.get('stacktrace', {}).get('frames')
+                frames = (exception.get('stacktrace') or {}).get('frames')
             else:
-                frames = thread.get('stacktrace', {}).get('frames')
+                frames = (thread.get('stacktrace') or {}).get('frames')
 
             tid = thread.get('id')
             if tid and frames:
diff --git a/src/sentry/lang/native/minidump.py b/src/sentry/lang/native/minidump.py
index d25b4eda66..5d50890773 100644
--- a/src/sentry/lang/native/minidump.py
+++ b/src/sentry/lang/native/minidump.py
@@ -16,11 +16,11 @@ MINIDUMP_OS_TYPES = {
 
 
 def is_minidump_event(data):
-    exceptions = data.get('exception', {}).get('values', [])
+    exceptions = (data.get('exception') or {}).get('values') or []
     if not exceptions:
         return False
 
-    return exceptions[0].get('mechanism', {}).get('type') == 'minidump'
+    return (exceptions[0].get('mechanism') or {}).get('type') == 'minidump'
 
 
 def process_minidump(minidump, cfi=None):
diff --git a/tests/sentry/lang/native/test_minidump.py b/tests/sentry/lang/native/test_minidump.py
index fe47b12b05..6f0bc90081 100644
--- a/tests/sentry/lang/native/test_minidump.py
+++ b/tests/sentry/lang/native/test_minidump.py
@@ -1,7 +1,57 @@
 from __future__ import absolute_import
 import os
 
-from sentry.lang.native.minidump import merge_minidump_event
+from sentry.lang.native.minidump import merge_minidump_event, is_minidump_event
+
+
+def test_is_minidump():
+    assert is_minidump_event({
+        'exception': {
+            'values': [{
+                'mechanism': {
+                    'type': 'minidump'
+                }
+            }]
+        }
+    })
+
+    assert not is_minidump_event({
+        'exception': {
+            'values': [{
+                'mechanism': {
+                    'type': 'other'
+                }
+            }]
+        }
+    })
+
+    assert not is_minidump_event({
+        'exception': {
+            'values': [{
+                'mechanism': {
+                    'type': None
+                }
+            }]
+        }
+    })
+
+    assert not is_minidump_event({
+        'exception': {
+            'values': [{
+                'mechanism': None
+            }]
+        }
+    })
+
+    assert not is_minidump_event({
+        'exception': {
+            'values': []
+        }
+    })
+
+    assert not is_minidump_event({
+        'exception': None
+    })
 
 
 def test_minidump_linux():
