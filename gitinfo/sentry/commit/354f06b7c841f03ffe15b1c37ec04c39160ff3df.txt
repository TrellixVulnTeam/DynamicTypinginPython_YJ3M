commit 354f06b7c841f03ffe15b1c37ec04c39160ff3df
Author: Billy Vong <billyvg@users.noreply.github.com>
Date:   Mon May 7 11:46:31 2018 -0700

    fix(teams): Fix adding team to project after creating team (#8325)
    
    * fix(teams): Fix adding team to project after creating team
    
    This happened in during dena's user-testing. If you created a team using
    the "Add team to project" dropdown, it would fail to add to project.

diff --git a/src/sentry/static/sentry/app/views/settings/project/projectTeams.jsx b/src/sentry/static/sentry/app/views/settings/project/projectTeams.jsx
index d504687eef..bf1d499dc4 100644
--- a/src/sentry/static/sentry/app/views/settings/project/projectTeams.jsx
+++ b/src/sentry/static/sentry/app/views/settings/project/projectTeams.jsx
@@ -1,7 +1,7 @@
 import PropTypes from 'prop-types';
 import React from 'react';
 import createReactClass from 'create-react-class';
-import styled from 'react-emotion';
+import styled, {css} from 'react-emotion';
 
 import {removeTeamFromProject, addTeamToProject} from 'app/actionCreators/projects';
 import {getOrganizationState} from 'app/mixins/organizationState';
@@ -19,6 +19,7 @@ import Link from 'app/components/link';
 import {Panel, PanelBody, PanelHeader, PanelItem} from 'app/components/panels';
 import SettingsPageHeader from 'app/views/settings/components/settingsPageHeader';
 import space from 'app/styles/space';
+import Tooltip from 'app/components/tooltip';
 
 const TeamRow = createReactClass({
   displayName: 'TeamRow',
@@ -99,6 +100,14 @@ class ProjectTeams extends AsyncView {
     ];
   }
 
+  canCreateTeam = () => {
+    let {organization} = this.props;
+    let access = getOrganizationState(organization).getAccess();
+    return (
+      access.has('org:write') && access.has('team:write') && access.has('project:write')
+    );
+  };
+
   handleRemovedTeam = removedTeam => {
     this.setState(prevState => {
       return {
@@ -139,13 +148,17 @@ class ProjectTeams extends AsyncView {
 
   handleCreateTeam = e => {
     let {project, organization} = this.props;
+
+    if (!this.canCreateTeam()) return;
+
     e.stopPropagation();
     e.preventDefault();
+
     openCreateTeamModal({
       project,
       organization,
       onClose: data => {
-        addTeamToProject(this.api, organization.slug, project.slug, data.slug).then(
+        addTeamToProject(this.api, organization.slug, project.slug, data).then(
           this.remountComponent,
           this.remountComponent
         );
@@ -155,6 +168,8 @@ class ProjectTeams extends AsyncView {
 
   renderAddTeamToProject() {
     let projectTeams = new Set(this.state.projectTeams.map(team => team.slug));
+    let canCreateTeam = this.canCreateTeam();
+
     let teamsToAdd = this.state.allTeams
       .filter(team => {
         return team.hasAccess && !projectTeams.has(team.slug);
@@ -168,9 +183,15 @@ class ProjectTeams extends AsyncView {
     let menuHeader = (
       <StyledTeamsLabel>
         {t('Teams')}
-        <StyledCreateTeamLink onClick={this.handleCreateTeam}>
-          {t('Create Team')}
-        </StyledCreateTeamLink>
+        <Tooltip
+          disabled={canCreateTeam}
+          title={t('You do not have access to create teams.')}
+          tooltipOptions={{placement: 'top'}}
+        >
+          <StyledCreateTeamLink disabled={!canCreateTeam} onClick={this.handleCreateTeam}>
+            {t('Create Team')}
+          </StyledCreateTeamLink>
+        </Tooltip>
       </StyledTeamsLabel>
     );
 
@@ -220,31 +241,12 @@ class ProjectTeams extends AsyncView {
     if (this.state.projectTeams.length > 0) body = this.renderResults();
     else body = this.renderEmpty();
 
-    let {organization, params} = this.props;
-    let canCreateTeams = getOrganizationState(organization)
-      .getAccess()
-      .has('project:admin');
+    let {params} = this.props;
 
     return (
       <div>
         <SettingsPageHeader
           title={tct('[projectId] Teams', {projectId: params.projectId})}
-          action={
-            <Button
-              priority="primary"
-              size="small"
-              disabled={!canCreateTeams}
-              title={
-                !canCreateTeams
-                  ? t('You do not have permission to create teams')
-                  : undefined
-              }
-              onClick={this.handleCreateTeam}
-              icon="icon-circle-add"
-            >
-              {t('Create Team')}
-            </Button>
-          }
         />
         <Panel>
           <PanelHeader hasButtons={true}>
@@ -289,6 +291,13 @@ const StyledTeamsLabel = styled('div')`
 const StyledCreateTeamLink = styled(Link)`
   float: right;
   text-transform: none;
+  ${p =>
+    p.disabled &&
+    css`
+      cursor: not-allowed;
+      color: ${p.theme.gray2};
+      opacity: 0.6;
+    `};
 `;
 
 export default ProjectTeams;
diff --git a/tests/js/spec/views/__snapshots__/projectTeams.spec.jsx.snap b/tests/js/spec/views/__snapshots__/projectTeams.spec.jsx.snap
index e66d462d05..f79b4a0d13 100644
--- a/tests/js/spec/views/__snapshots__/projectTeams.spec.jsx.snap
+++ b/tests/js/spec/views/__snapshots__/projectTeams.spec.jsx.snap
@@ -6,18 +6,6 @@ exports[`ProjectTeams renders 1`] = `
 >
   <div>
     <SettingsPageHeading
-      action={
-        <Button
-          disabled={false}
-          icon="icon-circle-add"
-          onClick={[Function]}
-          priority="primary"
-          size="small"
-          title={undefined}
-        >
-          Create Team
-        </Button>
-      }
       title={
         <span>
           <span>
@@ -54,11 +42,22 @@ exports[`ProjectTeams renders 1`] = `
             menuHeader={
               <StyledTeamsLabel>
                 Teams
-                <StyledCreateTeamLink
-                  onClick={[Function]}
+                <Tooltip
+                  disabled={true}
+                  title="You do not have access to create teams."
+                  tooltipOptions={
+                    Object {
+                      "placement": "top",
+                    }
+                  }
                 >
-                  Create Team
-                </StyledCreateTeamLink>
+                  <StyledCreateTeamLink
+                    disabled={false}
+                    onClick={[Function]}
+                  >
+                    Create Team
+                  </StyledCreateTeamLink>
+                </Tooltip>
               </StyledTeamsLabel>
             }
             onSelect={[Function]}
diff --git a/tests/js/spec/views/projectTeams.spec.jsx b/tests/js/spec/views/projectTeams.spec.jsx
index f0b1514cc5..2f8a5ee827 100644
--- a/tests/js/spec/views/projectTeams.spec.jsx
+++ b/tests/js/spec/views/projectTeams.spec.jsx
@@ -155,32 +155,6 @@ describe('ProjectTeams', function() {
     );
   });
 
-  it('opens "create team modal" when creating a new team from header', function() {
-    let wrapper = mount(
-      <ProjectTeams
-        params={{orgId: org.slug, projectId: project.slug}}
-        project={project}
-        organization={org}
-      />,
-      TestStubs.routerContext()
-    );
-
-    // Click "Create Team" in Panel Header
-    wrapper.find('SettingsPageHeading Button').simulate('click');
-
-    // action creator to open "create team modal" is called
-    expect(openCreateTeamModal).toHaveBeenCalledWith(
-      expect.objectContaining({
-        project: expect.objectContaining({
-          slug: project.slug,
-        }),
-        organization: expect.objectContaining({
-          slug: org.slug,
-        }),
-      })
-    );
-  });
-
   it('opens "create team modal" when creating a new team from dropdown', function() {
     let wrapper = mount(
       <ProjectTeams
