commit 7c3798a099c09ac4c12b3159d2c77514ff4078f2
Author: Billy Vong <billyvg@gmail.com>
Date:   Wed Aug 23 16:51:56 2017 -0700

    fix: similarity view to use feature tag

diff --git a/src/sentry/static/sentry/app/views/groupGrouping/groupGroupingView.jsx b/src/sentry/static/sentry/app/views/groupGrouping/groupGroupingView.jsx
index 7b663fee97..1cc8bca8cd 100644
--- a/src/sentry/static/sentry/app/views/groupGrouping/groupGroupingView.jsx
+++ b/src/sentry/static/sentry/app/views/groupGrouping/groupGroupingView.jsx
@@ -2,12 +2,12 @@ import React, {PropTypes} from 'react';
 import Reflux from 'reflux';
 
 import {t} from '../../locale';
-import GroupingStore from '../../stores/groupingStore';
 import GroupingActions from '../../actions/groupingActions';
-
+import GroupingStore from '../../stores/groupingStore';
 import LoadingError from '../../components/loadingError';
 import LoadingIndicator from '../../components/loadingIndicator';
 import MergedList from './mergedList';
+import ProjectState from '../../mixins/projectState';
 import SimilarList from './similarList';
 
 const GroupGroupingView = React.createClass({
@@ -15,7 +15,7 @@ const GroupGroupingView = React.createClass({
     query: PropTypes.string
   },
 
-  mixins: [Reflux.listenTo(GroupingStore, 'onGroupingUpdate')],
+  mixins: [ProjectState, Reflux.listenTo(GroupingStore, 'onGroupingUpdate')],
 
   getInitialState() {
     return {
@@ -74,23 +74,30 @@ const GroupGroupingView = React.createClass({
   },
 
   fetchData() {
+    let projectFeatures = this.getProjectFeatures();
+
     this.setState({
       loading: true,
       error: false
     });
 
-    GroupingActions.fetch([
+    let reqs = [
       {
         endpoint: this.getEndpoint('hashes'),
         dataKey: 'merged',
         queryParams: this.props.location.query
-      },
-      {
+      }
+    ];
+
+    if (projectFeatures.has('similarity-view')) {
+      reqs.push({
         endpoint: this.getEndpoint('similar'),
         dataKey: 'similar',
         queryParams: this.props.location.query
-      }
-    ]);
+      });
+    }
+
+    GroupingActions.fetch(reqs);
   },
 
   handleMerge() {
@@ -119,8 +126,10 @@ const GroupGroupingView = React.createClass({
     let {orgId, projectId, groupId} = this.props.params;
     let isLoading = this.state.loading;
     let isError = this.state.error && !isLoading;
+    let projectFeatures = this.getProjectFeatures();
     let hasMergedItems = this.state.mergedItems.length >= 0 && !isError && !isLoading;
     let hasSimilarItems =
+      projectFeatures.has('similarity-view') &&
       (this.state.similarItems.length >= 0 ||
         this.state.filteredSimilarItems.length >= 0) &&
       !isError &&
diff --git a/tests/acceptance/test_project_issues_grouping.py b/tests/acceptance/test_project_issues_grouping.py
index a2ae467ecb..b2aa9b6495 100644
--- a/tests/acceptance/test_project_issues_grouping.py
+++ b/tests/acceptance/test_project_issues_grouping.py
@@ -41,6 +41,5 @@ class ProjectIssuesGroupingTest(AcceptanceTestCase):
         self.browser.get(
             '/{}/{}/issues/{}/grouping/'.format(self.org.slug, self.project.slug, event.group.id)
         )
-        self.browser.wait_until('.grouping-similar-list-container')
         self.browser.wait_until('.grouping-merged-list-container')
         self.browser.snapshot('issue details grouping tab')
diff --git a/tests/js/spec/views/groupGroupingView.spec.jsx b/tests/js/spec/views/groupGroupingView.spec.jsx
index 95b3938f68..99849e1c3d 100644
--- a/tests/js/spec/views/groupGroupingView.spec.jsx
+++ b/tests/js/spec/views/groupGroupingView.spec.jsx
@@ -9,7 +9,8 @@ import {Client} from 'app/api';
 jest.mock('app/api');
 jest.mock('app/mixins/projectState', () => {
   return {
-    getFeatures: () => new Set(['callsigns'])
+    getFeatures: () => new Set(['callsigns']),
+    getProjectFeatures: () => new Set(['similarity-view'])
   };
 });
 
