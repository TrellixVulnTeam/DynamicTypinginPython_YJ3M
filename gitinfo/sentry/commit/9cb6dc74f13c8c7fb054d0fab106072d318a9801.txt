commit 9cb6dc74f13c8c7fb054d0fab106072d318a9801
Author: David Cramer <dcramer@gmail.com>
Date:   Fri May 29 13:15:13 2015 +0200

    Use <FlotChart> element

diff --git a/src/sentry/static/sentry/app/components/flotChart.jsx b/src/sentry/static/sentry/app/components/flotChart.jsx
index 6fe41c196d..87fc8cc34d 100644
--- a/src/sentry/static/sentry/app/components/flotChart.jsx
+++ b/src/sentry/static/sentry/app/components/flotChart.jsx
@@ -1,14 +1,15 @@
 /*** @jsx React.DOM */
 var React = require('react');
-var $ = require('jquery');
+var jQuery = require('jquery');
 var moment = require('moment');
 
 // we need flot and the various plugins
 require('flot');
-require('flot/jquery.flot.resize');
+require('flot/jquery.flot.stack');
 require('flot/jquery.flot.time');
+require('flot-tooltip/jquery.flot.tooltip');
 
-var average = function(a) {
+var average = (a) => {
   var r = {mean: 0, variance: 0, deviation: 0}, t = a.length;
   for (var m, s = 0, l = t; l--; s += a[l]);
   for (m = r.mean = s / t, l = t, s = 0; l--; s += Math.pow(a[l] - m, 2));
@@ -16,7 +17,7 @@ var average = function(a) {
   return r;
 };
 
-var percentile = function(a, nth) {
+var percentile = (a, nth) => {
   a = a.sort();
   a.slice(0, a.length - Math.floor(nth / a.length));
   return average(a);
@@ -32,7 +33,7 @@ var timeUnitSize = {
   "year": 365.2425 * 24 * 60 * 60 * 1000
 };
 
-var tickFormatter = function (value, axis) {
+var tickFormatter = (value, axis) => {
   var d = moment(value);
 
   var t = axis.tickSize[0] * timeUnitSize[axis.tickSize[1]];
@@ -65,59 +66,19 @@ var tickFormatter = function (value, axis) {
 
 var FlotChart = React.createClass({
   propTypes: {
-    points: React.PropTypes.arrayOf(React.PropTypes.shape({
-      x: React.PropTypes.number.isRequired,
-      y: React.PropTypes.number.isRequired
-    })),
+    plotData: React.PropTypes.array
   },
 
-  renderChart: function(options) {
-    var $el = $(this.refs.chartNode.getDOMNode());
-
-    var points = [];
-    var p95Inputs = [];
-    this.props.points.forEach(function(point){
-      p95Inputs.push(point.y);
-      points.push([point.x * 1000, point.y]);
-    });
-
-    var p95th = percentile(p95Inputs);
-    var dataAvg = [];
-    points.forEach(function(point){
-      dataAvg.push([point[0], p95th.mean]);
-    });
-
-    var plotData = [
-      {
-        data: points,
-        color: 'rgba(86, 175, 232, 1)',
-        shadowSize: 0,
-        lines: {
-          lineWidth: 2,
-          show: true,
-          fill: false
-        }
-      }
-      // {
-      //   data: dataAvg,
-      //   color: 'rgba(244, 63, 32, .4)',
-      //   // color: '#000000',
-      //   shadowSize: 0,
-      //   dashes: {
-      //     lineWidth: 2,
-      //     show: true,
-      //     fill: false
-      //   }
-      // }
-    ];
+  renderChart(options) {
     var plotOptions = {
       xaxis: {
         mode: "time",
+        minTickSize: [1, "day"],
         tickFormatter: tickFormatter
       },
       yaxis: {
         min: 0,
-        tickFormatter: function(value) {
+        tickFormatter: (value) => {
           if (value > 999999) {
             return (value / 1000000) + 'mm';
           }
@@ -127,16 +88,20 @@ var FlotChart = React.createClass({
           return value;
         }
       },
-      // tooltip: true,
-      // tooltipOpts: {
-      //   content: function(label, xval, yval, flotItem) {
-      //     return yval + ' events<br>' + moment(xval).format('llll');
-      //   },
-      //   defaultTheme: false
-      // },
+      tooltip: true,
+      tooltipOpts: {
+        content: (label, xval, yval, flotItem) => {
+          xval = parseInt(xval, 10);
+          if(typeof yval.toLocaleString == "function") {
+              return yval.toLocaleString() + ' events ' + flotItem.series.label.toLowerCase() + '<br>' + moment(xval).format('llll');
+          }
+          return yval + ' events<br>' + moment(xval).format('llll');
+        },
+        defaultTheme: false
+      },
       grid: {
         show: true,
-        // hoverable: true,
+        hoverable: true,
         backgroundColor: '#ffffff',
         borderColor: '#DEE3E9',
         borderWidth: 2,
@@ -144,29 +109,35 @@ var FlotChart = React.createClass({
       },
       hoverable: false,
       legend: {
-        noColumns: 5
+        noColumns: 2,
+        position: 'nw'
       },
       lines: { show: false }
     };
 
-    $(function(){
-      $.plot($el, plotData, plotOptions);
-    });
-
-    // $(window).resize(function(){
-    //   this.renderChart();
-    // }.bind(this));
+    var chart = this.refs.chartNode.getDOMNode();
+    jQuery.plot(chart, this.props.plotData, plotOptions);
   },
-  shouldComponentUpdate: function(nextProps, nextState) {
-    return nextProps.points.length > 0;
+
+  shouldComponentUpdate(nextProps, nextState) {
+    // TODO(dcramer): improve logic here
+    return nextProps.plotData.length > 0;
   },
-  componentDidUpdate: function() {
+
+  componentDidUpdate() {
     this.renderChart();
   },
-  componentDidMount: function() {
+
+  componentDidMount() {
     this.renderChart();
+    jQuery(window).resize(this.renderChart);
   },
-  render: function() {
+
+  componentWillUnount() {
+    jQuery(window).unbind('resize', this.renderChart);
+  },
+
+  render() {
     return (
       <figure className={this.props.className} ref="chartNode" />
     );
diff --git a/src/sentry/static/sentry/app/views/organizationStats.jsx b/src/sentry/static/sentry/app/views/organizationStats.jsx
index 6dff3f0018..437ef7296f 100644
--- a/src/sentry/static/sentry/app/views/organizationStats.jsx
+++ b/src/sentry/static/sentry/app/views/organizationStats.jsx
@@ -8,6 +8,7 @@ var api = require("../api");
 var BreadcrumbMixin = require("../mixins/breadcrumbMixin");
 var ConfigStore = require("../stores/configStore");
 var Count = require("../components/count");
+var FlotChart = require("../components/flotChart");
 var LoadingError = require("../components/loadingError");
 var LoadingIndicator = require("../components/loadingIndicator");
 var OrganizationHomeContainer = require("../components/organizationHomeContainer");
@@ -155,9 +156,6 @@ var OrganizationStats = React.createClass({
     if (state.projectsLoading && !state.projectsRequestsPending) {
       this.processProjectData();
     }
-    if (!state.statsLoading) {
-      this.renderChart();
-    }
   },
 
   routeDidChange(nextPath, nextParams) {
@@ -324,13 +322,10 @@ var OrganizationStats = React.createClass({
     });
   },
 
-  renderChart() {
-    if (this._renderedChart === true) {
-      return;
-    }
-    this._renderedChart = true;
+  getChartPlotData() {
     var stats = this.state.orgStats;
-    var points = [
+
+    return [
       {
         data: stats.accepted,
         label: 'Accepted',
@@ -356,57 +351,6 @@ var OrganizationStats = React.createClass({
         }
       }
     ];
-
-    var options = {
-      xaxis: {
-        mode: "time",
-        minTickSize: [1, "day"],
-        tickFormatter: tickFormatter
-      },
-      yaxis: {
-        min: 0,
-        tickFormatter: function(value) {
-          if (value > 999999) {
-            return (value / 1000000) + 'mm';
-          }
-          if (value > 999) {
-            return (value / 1000) + 'k';
-          }
-          return value;
-        }
-      },
-      tooltip: true,
-      tooltipOpts: {
-        content: function(label, xval, yval, flotItem) {
-          xval = parseInt(xval, 10);
-          if(typeof yval.toLocaleString == "function") {
-              return yval.toLocaleString() + ' events ' + flotItem.series.label.toLowerCase() + '<br>' + moment(xval).format('llll');
-          }
-          return yval + ' events<br>' + moment(xval).format('llll');
-        },
-        defaultTheme: false
-      },
-      grid: {
-        show: true,
-        hoverable: true,
-        backgroundColor: '#ffffff',
-        borderColor: '#DEE3E9',
-        borderWidth: 2,
-        tickColor: '#f0f0f0'
-      },
-      hoverable: false,
-      legend: {
-          noColumns: 2,
-          position: 'nw'
-      },
-      lines: { show: false }
-    };
-
-    var chart = $(this.refs.chart.getDOMNode());
-    $.plot(chart, points, options);
-    $(window).resize(function(){
-      $.plot(chart, points, options);
-    });
   },
 
   render() {
@@ -415,9 +359,13 @@ var OrganizationStats = React.createClass({
         <h3>Stats</h3>
         <p>The chart below reflects events the system has received across your entire organization. Events are broken down into two categories: Accepted and Rejected. Rejected events are entries that the system threw away due to quotas being hit.</p>
 
-        <div ref="chart" className="chart">
+        {this.state.statsLoading ?
           <LoadingIndicator />
-        </div>
+        : (this.state.statsError ?
+          <LoadingError onRetry={this.fetchData} />
+        :
+          <FlotChart plotData={this.getChartPlotData()} className="chart" />
+        )}
 
         <h3>Events by Project</h3>
 
diff --git a/webpack.config.js b/webpack.config.js
index d9440e146a..3a7029c38e 100644
--- a/webpack.config.js
+++ b/webpack.config.js
@@ -19,10 +19,10 @@ module.exports = {
       "react-router",
       "react-bootstrap",
       "reflux",
-      "vendor/jquery-flot/jquery.flot",
-      "vendor/jquery-flot/jquery.flot.stack",
-      "vendor/jquery-flot/jquery.flot.time",
-      "vendor/jquery-flot-tooltip/jquery.flot.tooltip",
+      "flot/jquery.flot",
+      "flot/jquery.flot.stack",
+      "flot/jquery.flot.time",
+      "flot-tooltip/jquery.flot.tooltip",
       "vendor/simple-slider/simple-slider"
     ]
   },
@@ -50,6 +50,8 @@ module.exports = {
   resolve: {
     alias: {
       "app": path.join(__dirname, staticPrefix, "app"),
+      "flot": path.join(__dirname, staticPrefix, "vendor", "jquery-flot"),
+      "flot-tooltip": path.join(__dirname, staticPrefix, "vendor", "jquery-flot-tooltip"),
       "vendor": path.join(__dirname, staticPrefix, "vendor")
     },
     modulesDirectories: ["node_modules"],
