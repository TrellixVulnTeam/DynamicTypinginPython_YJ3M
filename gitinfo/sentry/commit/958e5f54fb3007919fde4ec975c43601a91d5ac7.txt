commit 958e5f54fb3007919fde4ec975c43601a91d5ac7
Author: James Cunningham <cunninghamjt09@gmail.com>
Date:   Tue Sep 20 16:16:49 2016 -0700

    Add Rule create/edit/remove to AuditLog. (#4187)

diff --git a/src/sentry/api/endpoints/project_rule_details.py b/src/sentry/api/endpoints/project_rule_details.py
index 3f1ad5303f..1e96b93414 100644
--- a/src/sentry/api/endpoints/project_rule_details.py
+++ b/src/sentry/api/endpoints/project_rule_details.py
@@ -6,7 +6,7 @@ from rest_framework.response import Response
 from sentry.api.bases.project import ProjectEndpoint, ProjectSettingPermission
 from sentry.api.serializers import serialize
 from sentry.api.serializers.rest_framework import RuleSerializer
-from sentry.models import Rule, RuleStatus
+from sentry.models import AuditLogEntryEvent, Rule, RuleStatus
 
 
 class ProjectRuleDetailsEndpoint(ProjectEndpoint):
@@ -53,6 +53,13 @@ class ProjectRuleDetailsEndpoint(ProjectEndpoint):
 
         if serializer.is_valid():
             rule = serializer.save(rule=rule)
+            self.create_audit_entry(
+                request=request,
+                organization=project.organization,
+                target_object=rule.id,
+                event=AuditLogEntryEvent.RULE_EDIT,
+                data=rule.get_audit_log_data(),
+            )
 
             return Response(serialize(rule, request.user))
 
@@ -69,4 +76,11 @@ class ProjectRuleDetailsEndpoint(ProjectEndpoint):
         )
 
         rule.update(status=RuleStatus.PENDING_DELETION)
+        self.create_audit_entry(
+            request=request,
+            organization=project.organization,
+            target_object=rule.id,
+            event=AuditLogEntryEvent.RULE_REMOVE,
+            data=rule.get_audit_log_data(),
+        )
         return Response(status=202)
diff --git a/src/sentry/api/endpoints/project_rules.py b/src/sentry/api/endpoints/project_rules.py
index 81c357f832..b4e2061d40 100644
--- a/src/sentry/api/endpoints/project_rules.py
+++ b/src/sentry/api/endpoints/project_rules.py
@@ -6,7 +6,7 @@ from rest_framework.response import Response
 from sentry.api.bases.project import ProjectEndpoint
 from sentry.api.serializers import serialize
 from sentry.api.serializers.rest_framework import RuleSerializer
-from sentry.models import Rule, RuleStatus
+from sentry.models import AuditLogEntryEvent, Rule, RuleStatus
 
 
 class ProjectRulesEndpoint(ProjectEndpoint):
@@ -53,6 +53,13 @@ class ProjectRulesEndpoint(ProjectEndpoint):
 
         if serializer.is_valid():
             rule = serializer.save(rule=Rule())
+            self.create_audit_entry(
+                request=request,
+                organization=project.organization,
+                target_object=rule.id,
+                event=AuditLogEntryEvent.RULE_ADD,
+                data=rule.get_audit_log_data(),
+            )
 
             return Response(serialize(rule, request.user))
 
diff --git a/src/sentry/models/auditlogentry.py b/src/sentry/models/auditlogentry.py
index 9f0197d579..0a5535fe62 100644
--- a/src/sentry/models/auditlogentry.py
+++ b/src/sentry/models/auditlogentry.py
@@ -57,6 +57,10 @@ class AuditLogEntryEvent(object):
     APIKEY_EDIT = 71
     APIKEY_REMOVE = 72
 
+    RULE_ADD = 80
+    RULE_EDIT = 81
+    RULE_REMOVE = 82
+
 
 class AuditLogEntry(Model):
     __core__ = False
@@ -113,6 +117,10 @@ class AuditLogEntry(Model):
         (AuditLogEntryEvent.APIKEY_ADD, 'api-key.create'),
         (AuditLogEntryEvent.APIKEY_EDIT, 'api-key.edit'),
         (AuditLogEntryEvent.APIKEY_REMOVE, 'api-key.remove'),
+
+        (AuditLogEntryEvent.RULE_ADD, 'rule.create'),
+        (AuditLogEntryEvent.RULE_EDIT, 'rule.edit'),
+        (AuditLogEntryEvent.RULE_REMOVE, 'rule.remove'),
     ))
     ip_address = models.GenericIPAddressField(null=True, unpack_ipv4=True)
     data = GzippedDictField()
@@ -223,4 +231,11 @@ class AuditLogEntry(Model):
         elif self.event == AuditLogEntryEvent.APIKEY_REMOVE:
             return 'removed api key %s' % (self.data['label'],)
 
+        elif self.event == AuditLogEntryEvent.RULE_ADD:
+            return 'added rule "%s"' % (self.data['label'],)
+        elif self.event == AuditLogEntryEvent.RULE_EDIT:
+            return 'edited rule "%s"' % (self.data['label'],)
+        elif self.event == AuditLogEntryEvent.RULE_REMOVE:
+            return 'removed rule "%s"' % (self.data['label'],)
+
         return ''
diff --git a/src/sentry/models/rule.py b/src/sentry/models/rule.py
index b6360d06e4..cd2c851139 100644
--- a/src/sentry/models/rule.py
+++ b/src/sentry/models/rule.py
@@ -72,3 +72,10 @@ class Rule(Model):
         cache_key = 'project:{}:rules'.format(self.project_id)
         cache.delete(cache_key)
         return rv
+
+    def get_audit_log_data(self):
+        return {
+            'label': self.label,
+            'data': self.data,
+            'status': self.status,
+        }
