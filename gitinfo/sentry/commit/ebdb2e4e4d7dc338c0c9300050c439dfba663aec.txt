commit ebdb2e4e4d7dc338c0c9300050c439dfba663aec
Author: Priscila Oliveira <priscilawebdev@gmail.com>
Date:   Wed May 6 08:24:18 2020 +0200

    feat(ui): Added breadcrumb's level (#18618)

diff --git a/src/sentry/static/sentry/app/components/events/interfaces/breadcrumbs/breadcrumbs.tsx b/src/sentry/static/sentry/app/components/events/interfaces/breadcrumbs/breadcrumbs.tsx
index e91a7115a7..83446184f8 100644
--- a/src/sentry/static/sentry/app/components/events/interfaces/breadcrumbs/breadcrumbs.tsx
+++ b/src/sentry/static/sentry/app/components/events/interfaces/breadcrumbs/breadcrumbs.tsx
@@ -14,7 +14,7 @@ import BreadcrumbTime from './breadcrumbTime';
 import BreadcrumbCollapsed from './breadcrumbCollapsed';
 import convertBreadcrumbType from './convertBreadcrumbType';
 import getBreadcrumbDetails from './getBreadcrumbDetails';
-import {Breadcrumb, BreadcrumbType, BreadcrumbLevel} from './types';
+import {Breadcrumb, BreadcrumbType, BreadcrumbLevelType} from './types';
 import {BreadCrumb, BreadCrumbIconWrapper} from './styles';
 
 const MAX_CRUMBS_WHEN_COLLAPSED = 10;
@@ -86,7 +86,7 @@ class BreadcrumbsContainer extends React.Component<Props, State> {
       const {type, value, module: mdl} = exception.data.values[0];
       return {
         type: BreadcrumbType.ERROR,
-        level: BreadcrumbLevel.ERROR,
+        level: BreadcrumbLevelType.ERROR,
         category: this.moduleToCategory(mdl) || 'exception',
         data: {
           type,
@@ -100,7 +100,7 @@ class BreadcrumbsContainer extends React.Component<Props, State> {
 
     return {
       type: BreadcrumbType.MESSAGE,
-      level: levelTag?.value as BreadcrumbLevel,
+      level: levelTag?.value as BreadcrumbLevelType,
       category: 'message',
       message: event.message,
       timestamp: event.dateCreated,
diff --git a/src/sentry/static/sentry/app/components/events/interfaces/breadcrumbs/summaryLine.jsx b/src/sentry/static/sentry/app/components/events/interfaces/breadcrumbs/summaryLine.jsx
index 4e5aeb7ca5..6a3f6b9b47 100644
--- a/src/sentry/static/sentry/app/components/events/interfaces/breadcrumbs/summaryLine.jsx
+++ b/src/sentry/static/sentry/app/components/events/interfaces/breadcrumbs/summaryLine.jsx
@@ -1,4 +1,5 @@
 import React from 'react';
+import styled from '@emotion/styled';
 
 function isOverflowing(el) {
   // XXX(mitsuhiko): subtract one because of reasons. Not sure which ones.
@@ -58,10 +59,22 @@ class SummaryLine extends React.Component {
         onClick={this.onToggle}
         ref={this.makeSummariesGreatAgain}
       >
-        {this.props.children}
+        <StyledPre>
+          <code>{this.props.children}</code>
+        </StyledPre>
       </div>
     );
   }
 }
 
 export default SummaryLine;
+
+const StyledPre = styled('pre')`
+  padding: 0;
+  background: none;
+  font-size: ${p => p.theme.fontSizeSmall};
+  box-sizing: border-box;
+  white-space: pre-wrap;
+  word-break: break-all;
+  margin: 1px 0 2px 0;
+`;
diff --git a/src/sentry/static/sentry/app/components/events/interfaces/breadcrumbs/types.tsx b/src/sentry/static/sentry/app/components/events/interfaces/breadcrumbs/types.tsx
index da7d322d86..7ca43877c6 100644
--- a/src/sentry/static/sentry/app/components/events/interfaces/breadcrumbs/types.tsx
+++ b/src/sentry/static/sentry/app/components/events/interfaces/breadcrumbs/types.tsx
@@ -1,7 +1,7 @@
 import {Color} from 'app/utils/theme';
 import {IconProps} from 'app/types/iconProps';
 
-export enum BreadcrumbLevel {
+export enum BreadcrumbLevelType {
   FATAL = 'fatal',
   ERROR = 'error',
   WARNING = 'warning',
@@ -28,7 +28,7 @@ type BreadcrumbTypeBase = {
   timestamp?: string; //it's recommended
   category?: string;
   message?: string;
-  level?: BreadcrumbLevel;
+  level?: BreadcrumbLevelType;
   event_id?: string;
 };
 
diff --git a/src/sentry/static/sentry/app/components/events/interfaces/breadcrumbsV2/breadcrumbCategory.tsx b/src/sentry/static/sentry/app/components/events/interfaces/breadcrumbsV2/breadcrumbCategory.tsx
new file mode 100644
index 0000000000..145f49bf38
--- /dev/null
+++ b/src/sentry/static/sentry/app/components/events/interfaces/breadcrumbsV2/breadcrumbCategory.tsx
@@ -0,0 +1,26 @@
+import React from 'react';
+import styled from '@emotion/styled';
+
+import Tooltip from 'app/components/tooltip';
+import overflowEllipsis from 'app/styles/overflowEllipsis';
+
+type Props = {
+  category?: string;
+};
+
+const BreadcrumbCategory = ({category = 'generic'}: Props) => (
+  <div>
+    <Tooltip title={category}>
+      <Category title={category}>{category}</Category>
+    </Tooltip>
+  </div>
+);
+
+export default BreadcrumbCategory;
+
+const Category = styled('div')`
+  color: ${p => p.theme.gray5};
+  font-size: ${p => p.theme.fontSizeSmall};
+  font-weight: 700;
+  ${overflowEllipsis};
+`;
diff --git a/src/sentry/static/sentry/app/components/events/interfaces/breadcrumbsV2/breadcrumbData/breadcrumbData.tsx b/src/sentry/static/sentry/app/components/events/interfaces/breadcrumbsV2/breadcrumbData/breadcrumbData.tsx
new file mode 100644
index 0000000000..686b1c0349
--- /dev/null
+++ b/src/sentry/static/sentry/app/components/events/interfaces/breadcrumbsV2/breadcrumbData/breadcrumbData.tsx
@@ -0,0 +1,29 @@
+import React from 'react';
+
+import BreadcrumbDataDefault from './breadcrumbDataDefault';
+import BreadcrumbDataException from './breadcrumbDataException';
+import BreadcrumbDataHttp from './breadcrumbDataHttp';
+import {Breadcrumb, BreadcrumbType} from '../../breadcrumbs/types';
+
+type Props = {
+  breadcrumb: Breadcrumb;
+};
+
+const BreadcrumbData = ({breadcrumb}: Props) => {
+  if (breadcrumb.type === BreadcrumbType.HTTP) {
+    return <BreadcrumbDataHttp breadcrumb={breadcrumb} />;
+  }
+
+  if (
+    breadcrumb.type === BreadcrumbType.WARNING ||
+    breadcrumb.type === BreadcrumbType.MESSAGE ||
+    breadcrumb.type === BreadcrumbType.EXCEPTION ||
+    breadcrumb.type === BreadcrumbType.ERROR
+  ) {
+    return <BreadcrumbDataException breadcrumb={breadcrumb} />;
+  }
+
+  return <BreadcrumbDataDefault breadcrumb={breadcrumb} />;
+};
+
+export default BreadcrumbData;
diff --git a/src/sentry/static/sentry/app/components/events/interfaces/breadcrumbsV2/breadcrumbData/breadcrumbDataDefault.tsx b/src/sentry/static/sentry/app/components/events/interfaces/breadcrumbsV2/breadcrumbData/breadcrumbDataDefault.tsx
new file mode 100644
index 0000000000..5deb15722d
--- /dev/null
+++ b/src/sentry/static/sentry/app/components/events/interfaces/breadcrumbsV2/breadcrumbData/breadcrumbDataDefault.tsx
@@ -0,0 +1,23 @@
+import React from 'react';
+
+import {getMeta} from 'app/components/events/meta/metaProxy';
+
+import getBreadcrumbCustomRendererValue from '../../breadcrumbs/getBreadcrumbCustomRendererValue';
+import {BreadcrumbTypeDefault, BreadcrumbTypeNavigation} from '../../breadcrumbs/types';
+import BreadcrumbDataSummary from './breadcrumbDataSummary';
+
+type Props = {
+  breadcrumb: BreadcrumbTypeDefault | BreadcrumbTypeNavigation;
+};
+
+const BreadcrumbDataDefault = ({breadcrumb}: Props) => (
+  <BreadcrumbDataSummary kvData={breadcrumb.data}>
+    {breadcrumb?.message &&
+      getBreadcrumbCustomRendererValue({
+        value: breadcrumb.message,
+        meta: getMeta(breadcrumb, 'message'),
+      })}
+  </BreadcrumbDataSummary>
+);
+
+export default BreadcrumbDataDefault;
diff --git a/src/sentry/static/sentry/app/components/events/interfaces/breadcrumbsV2/breadcrumbData/breadcrumbDataException.tsx b/src/sentry/static/sentry/app/components/events/interfaces/breadcrumbsV2/breadcrumbData/breadcrumbDataException.tsx
new file mode 100644
index 0000000000..f68c6cface
--- /dev/null
+++ b/src/sentry/static/sentry/app/components/events/interfaces/breadcrumbsV2/breadcrumbData/breadcrumbDataException.tsx
@@ -0,0 +1,39 @@
+import React from 'react';
+import omit from 'lodash/omit';
+
+import {getMeta} from 'app/components/events/meta/metaProxy';
+import {defined} from 'app/utils';
+
+import getBreadcrumbCustomRendererValue from '../../breadcrumbs/getBreadcrumbCustomRendererValue';
+import {BreadcrumbTypeDefault} from '../../breadcrumbs/types';
+import BreadcrumbDataSummary from './breadcrumbDataSummary';
+
+type Props = {
+  breadcrumb: BreadcrumbTypeDefault;
+};
+
+const BreadcrumbDataException = ({breadcrumb}: Props) => {
+  const {data} = breadcrumb;
+  const dataValue = data?.value;
+  return (
+    <BreadcrumbDataSummary kvData={omit(data, ['type', 'value'])}>
+      {data?.type &&
+        getBreadcrumbCustomRendererValue({
+          value: <strong>{`${data.type}: `}</strong>,
+          meta: getMeta(data, 'type'),
+        })}
+      {defined(dataValue) &&
+        getBreadcrumbCustomRendererValue({
+          value: breadcrumb?.message ? `${dataValue}. ` : dataValue,
+          meta: getMeta(data, 'value'),
+        })}
+      {breadcrumb?.message &&
+        getBreadcrumbCustomRendererValue({
+          value: breadcrumb.message,
+          meta: getMeta(breadcrumb, 'message'),
+        })}
+    </BreadcrumbDataSummary>
+  );
+};
+
+export default BreadcrumbDataException;
diff --git a/src/sentry/static/sentry/app/components/events/interfaces/breadcrumbsV2/breadcrumbData/breadcrumbDataHttp.tsx b/src/sentry/static/sentry/app/components/events/interfaces/breadcrumbsV2/breadcrumbData/breadcrumbDataHttp.tsx
new file mode 100644
index 0000000000..ac2d343d37
--- /dev/null
+++ b/src/sentry/static/sentry/app/components/events/interfaces/breadcrumbsV2/breadcrumbData/breadcrumbDataHttp.tsx
@@ -0,0 +1,63 @@
+import React from 'react';
+import omit from 'lodash/omit';
+
+import ExternalLink from 'app/components/links/externalLink';
+import {getMeta} from 'app/components/events/meta/metaProxy';
+import {t} from 'app/locale';
+import {defined} from 'app/utils';
+
+import getBreadcrumbCustomRendererValue from '../../breadcrumbs/getBreadcrumbCustomRendererValue';
+import {BreadcrumbTypeHTTP} from '../../breadcrumbs/types';
+import BreadcrumbDataSummary from './breadcrumbDataSummary';
+
+type Props = {
+  breadcrumb: BreadcrumbTypeHTTP;
+};
+
+const BreadcrumbDataHttp = ({breadcrumb}: Props) => {
+  const {data} = breadcrumb;
+
+  const renderUrl = (url: any) => {
+    if (typeof url === 'string') {
+      return url.match(/^https?:\/\//) ? (
+        <ExternalLink data-test-id="http-renderer-external-link" href={url}>
+          {url}
+        </ExternalLink>
+      ) : (
+        <span>{url}</span>
+      );
+    }
+
+    try {
+      return JSON.stringify(url);
+    } catch {
+      return t('Invalid URL');
+    }
+  };
+
+  const statusCode = data?.status_code;
+
+  return (
+    <BreadcrumbDataSummary kvData={omit(data, ['method', 'url', 'status_code'])}>
+      {data?.method &&
+        getBreadcrumbCustomRendererValue({
+          value: <strong>{`${data.method} `}</strong>,
+          meta: getMeta(data, 'method'),
+        })}
+      {data?.url &&
+        getBreadcrumbCustomRendererValue({
+          value: renderUrl(data.url),
+          meta: getMeta(data, 'url'),
+        })}
+      {defined(statusCode) &&
+        getBreadcrumbCustomRendererValue({
+          value: (
+            <span data-test-id="http-renderer-status-code">{` [${statusCode}]`}</span>
+          ),
+          meta: getMeta(data, 'status_code'),
+        })}
+    </BreadcrumbDataSummary>
+  );
+};
+
+export default BreadcrumbDataHttp;
diff --git a/src/sentry/static/sentry/app/components/events/interfaces/breadcrumbsV2/breadcrumbData/breadcrumbDataSummary.tsx b/src/sentry/static/sentry/app/components/events/interfaces/breadcrumbsV2/breadcrumbData/breadcrumbDataSummary.tsx
new file mode 100644
index 0000000000..79aa69aef5
--- /dev/null
+++ b/src/sentry/static/sentry/app/components/events/interfaces/breadcrumbsV2/breadcrumbData/breadcrumbDataSummary.tsx
@@ -0,0 +1,96 @@
+import React from 'react';
+import styled from '@emotion/styled';
+
+import {getMeta} from 'app/components/events/meta/metaProxy';
+import space from 'app/styles/space';
+import {defined} from 'app/utils';
+
+import getBreadcrumbCustomRendererValue from '../../breadcrumbs/getBreadcrumbCustomRendererValue';
+
+type Props = {
+  kvData?: Record<string, any>;
+};
+
+type State = {
+  isExpanded: boolean;
+  hasOverflow: boolean;
+};
+
+class BreadcrumbDataSummary extends React.Component<Props, State> {
+  state = {
+    isExpanded: false,
+    hasOverflow: false,
+  };
+
+  summaryNode = React.createRef<HTMLDivElement>();
+
+  onToggle = () => {
+    this.setState(prevState => ({
+      isExpanded: !prevState.isExpanded,
+    }));
+  };
+
+  renderData = () => {
+    const {kvData} = this.props;
+
+    if (!kvData) {
+      return null;
+    }
+
+    return Object.keys(kvData)
+      .filter(key => defined(kvData[key]) && !!kvData[key])
+      .map(key => (
+        <BreadcrumbDataSummaryData key={key}>
+          <BreadcrumbDataSummaryDataLabel>{`${key}: `}</BreadcrumbDataSummaryDataLabel>
+          <StyledPre>
+            {getBreadcrumbCustomRendererValue({
+              value:
+                typeof kvData[key] === 'object'
+                  ? JSON.stringify(kvData[key])
+                  : kvData[key],
+              meta: getMeta(kvData, key),
+            })}
+          </StyledPre>
+        </BreadcrumbDataSummaryData>
+      ));
+  };
+
+  // TODO(Priscila): implement Summary lifecycles
+  render() {
+    const {children} = this.props;
+    return (
+      <div>
+        <div onClick={this.onToggle} ref={this.summaryNode}>
+          <StyledPre>
+            <code>{children}</code>
+          </StyledPre>
+        </div>
+        {this.renderData()}
+      </div>
+    );
+  }
+}
+
+export default BreadcrumbDataSummary;
+
+const StyledPre = styled('pre')`
+  padding: 0;
+  background: none;
+  box-sizing: border-box;
+  white-space: pre-wrap;
+  word-break: break-all;
+  margin: 0;
+  font-size: ${p => p.theme.fontSizeSmall};
+`;
+
+const BreadcrumbDataSummaryData = styled('div')`
+  display: grid;
+  grid-template-columns: max-content 1fr;
+  grid-gap: ${space(0.5)};
+  margin: ${space(1)} 0;
+  font-size: ${p => p.theme.fontSizeSmall};
+`;
+
+const BreadcrumbDataSummaryDataLabel = styled('strong')`
+  line-height: 17px;
+`;
diff --git a/src/sentry/static/sentry/app/components/events/interfaces/breadcrumbsV2/breadcrumbFilter/breadcrumbFilterGroup.tsx b/src/sentry/static/sentry/app/components/events/interfaces/breadcrumbsV2/breadcrumbFilter/breadcrumbFilterGroup.tsx
index abdc57a3f2..1efafdcd99 100644
--- a/src/sentry/static/sentry/app/components/events/interfaces/breadcrumbsV2/breadcrumbFilter/breadcrumbFilterGroup.tsx
+++ b/src/sentry/static/sentry/app/components/events/interfaces/breadcrumbsV2/breadcrumbFilter/breadcrumbFilterGroup.tsx
@@ -5,7 +5,7 @@ import space from 'app/styles/space';
 import CheckboxFancy from 'app/components/checkboxFancy/checkboxFancy';
 
 import {FilterType, FilterGroupType, FilterGroup} from './types';
-import BreadcrumbFilterGroupIcon from './breadcrumbFilterGroupIcon';
+import BreadcrumbIcon from '../breadcrumbIcon';
 
 type Props = {
   groupHeaderTitle: string;
@@ -32,10 +32,11 @@ const BreadcrumbFilterGroup = ({groupHeaderTitle, data, onClick}: Props) => {
               isChecked={isChecked}
               onClick={handleClick(type, groupType)}
             >
-              <BreadcrumbFilterGroupIcon
+              <BreadcrumbIcon
                 icon={icon}
                 color={color}
                 borderColor={borderColor}
+                size="xs"
               />
               <ListItemDescription>{description}</ListItemDescription>
               <CheckboxFancy isChecked={isChecked} />
diff --git a/src/sentry/static/sentry/app/components/events/interfaces/breadcrumbsV2/breadcrumbFilter/breadcrumbFilterGroupIcon.tsx b/src/sentry/static/sentry/app/components/events/interfaces/breadcrumbsV2/breadcrumbFilter/breadcrumbFilterGroupIcon.tsx
deleted file mode 100644
index 69c03d05a1..0000000000
--- a/src/sentry/static/sentry/app/components/events/interfaces/breadcrumbsV2/breadcrumbFilter/breadcrumbFilterGroupIcon.tsx
+++ /dev/null
@@ -1,24 +0,0 @@
-import React from 'react';
-
-import {IconProps} from 'app/types/iconProps';
-
-import {BreadCrumbIconWrapper} from '../styles';
-import {BreadcrumbDetails} from './types';
-
-const BreadcrumbFilterGroupIcon = ({
-  icon,
-  color,
-  borderColor,
-}: Omit<BreadcrumbDetails, 'description'>) => {
-  if (!icon) return null;
-
-  const Icon = icon as React.ComponentType<IconProps>;
-
-  return (
-    <BreadCrumbIconWrapper color={color} borderColor={borderColor} size={20}>
-      <Icon size="xs" />
-    </BreadCrumbIconWrapper>
-  );
-};
-
-export default BreadcrumbFilterGroupIcon;
diff --git a/src/sentry/static/sentry/app/components/events/interfaces/breadcrumbsV2/breadcrumbFilter/types.tsx b/src/sentry/static/sentry/app/components/events/interfaces/breadcrumbsV2/breadcrumbFilter/types.tsx
index b540da7538..dd6e752636 100644
--- a/src/sentry/static/sentry/app/components/events/interfaces/breadcrumbsV2/breadcrumbFilter/types.tsx
+++ b/src/sentry/static/sentry/app/components/events/interfaces/breadcrumbsV2/breadcrumbFilter/types.tsx
@@ -1,7 +1,7 @@
 import {
   BreadcrumbDetails,
   BreadcrumbType,
-  BreadcrumbLevel,
+  BreadcrumbLevelType,
 } from '../../breadcrumbs/types';
 
 export enum FilterGroupType {
@@ -20,11 +20,11 @@ type FilterGroupTypeType = {
 
 type FilterGroupTypeLevel = {
   groupType: FilterGroupType.LEVEL;
-  type: BreadcrumbLevel;
+  type: BreadcrumbLevelType;
 } & FilterGroupBase;
 
 export type FilterGroup = FilterGroupTypeType | FilterGroupTypeLevel;
 
-export type FilterType = BreadcrumbLevel | BreadcrumbType;
+export type FilterType = BreadcrumbLevelType | BreadcrumbType;
 
 export {BreadcrumbDetails};
diff --git a/src/sentry/static/sentry/app/components/events/interfaces/breadcrumbsV2/breadcrumbIcon.tsx b/src/sentry/static/sentry/app/components/events/interfaces/breadcrumbsV2/breadcrumbIcon.tsx
new file mode 100644
index 0000000000..c06a48d656
--- /dev/null
+++ b/src/sentry/static/sentry/app/components/events/interfaces/breadcrumbsV2/breadcrumbIcon.tsx
@@ -0,0 +1,19 @@
+import React from 'react';
+
+import {IconProps} from 'app/types/iconProps';
+
+import {BreadCrumbIconWrapper} from './styles';
+import {BreadcrumbDetails} from '../breadcrumbs/types';
+
+type Props = Omit<BreadcrumbDetails, 'description'> & Pick<IconProps, 'size'>;
+
+const BreadcrumbIcon = ({icon, color, borderColor, size}: Props) => {
+  const Icon = icon as React.ComponentType<IconProps>;
+  return (
+    <BreadCrumbIconWrapper color={color} borderColor={borderColor}>
+      <Icon size={size} />
+    </BreadCrumbIconWrapper>
+  );
+};
+
+export default BreadcrumbIcon;
diff --git a/src/sentry/static/sentry/app/components/events/interfaces/breadcrumbsV2/breadcrumbLevel.tsx b/src/sentry/static/sentry/app/components/events/interfaces/breadcrumbsV2/breadcrumbLevel.tsx
new file mode 100644
index 0000000000..b10c24f78a
--- /dev/null
+++ b/src/sentry/static/sentry/app/components/events/interfaces/breadcrumbsV2/breadcrumbLevel.tsx
@@ -0,0 +1,31 @@
+import React from 'react';
+
+import Tag from 'app/views/settings/components/tag';
+
+import {BreadcrumbLevelType} from '../breadcrumbs/types';
+
+type Props = {
+  level?: BreadcrumbLevelType;
+};
+
+const BreadcrumbLevelTag = ({level}: Props) => {
+  switch (level) {
+    case BreadcrumbLevelType.FATAL:
+    case BreadcrumbLevelType.ERROR:
+      return <Tag priority="error">{level}</Tag>;
+    case BreadcrumbLevelType.INFO:
+      return <Tag priority="info">{level}</Tag>;
+    case BreadcrumbLevelType.WARNING:
+      return <Tag priority="warning">{level}</Tag>;
+    default:
+      return <Tag>{level}</Tag>;
+  }
+};
+
+const BreadcrumbLevel = ({level}: Props) => (
+  <div>
+    <BreadcrumbLevelTag level={level} />
+  </div>
+);
+
+export default BreadcrumbLevel;
diff --git a/src/sentry/static/sentry/app/components/events/interfaces/breadcrumbsV2/breadcrumbRenderer.tsx b/src/sentry/static/sentry/app/components/events/interfaces/breadcrumbsV2/breadcrumbRenderer.tsx
deleted file mode 100644
index 89a380f70e..0000000000
--- a/src/sentry/static/sentry/app/components/events/interfaces/breadcrumbsV2/breadcrumbRenderer.tsx
+++ /dev/null
@@ -1,29 +0,0 @@
-import React from 'react';
-
-import HttpRenderer from '../breadcrumbs/httpRenderer';
-import DefaultRenderer from '../breadcrumbs/defaultRenderer';
-import ErrorRenderer from '../breadcrumbs/errorRenderer';
-import {Breadcrumb, BreadcrumbType} from '../breadcrumbs/types';
-
-type Props = {
-  breadcrumb: Breadcrumb;
-};
-
-const BreadcrumbRenderer = ({breadcrumb}: Props) => {
-  if (breadcrumb.type === BreadcrumbType.HTTP) {
-    return <HttpRenderer breadcrumb={breadcrumb} />;
-  }
-
-  if (
-    breadcrumb.type === BreadcrumbType.WARNING ||
-    breadcrumb.type === BreadcrumbType.MESSAGE ||
-    breadcrumb.type === BreadcrumbType.EXCEPTION ||
-    breadcrumb.type === BreadcrumbType.ERROR
-  ) {
-    return <ErrorRenderer breadcrumb={breadcrumb} />;
-  }
-
-  return <DefaultRenderer breadcrumb={breadcrumb} />;
-};
-
-export default BreadcrumbRenderer;
diff --git a/src/sentry/static/sentry/app/components/events/interfaces/breadcrumbsV2/breadcrumbs.tsx b/src/sentry/static/sentry/app/components/events/interfaces/breadcrumbsV2/breadcrumbs.tsx
index c8d6c50209..abbdbcd721 100644
--- a/src/sentry/static/sentry/app/components/events/interfaces/breadcrumbsV2/breadcrumbs.tsx
+++ b/src/sentry/static/sentry/app/components/events/interfaces/breadcrumbsV2/breadcrumbs.tsx
@@ -8,23 +8,19 @@ import {t} from 'app/locale';
 import {Event} from 'app/types';
 import space from 'app/styles/space';
 import SearchBar from 'app/components/searchBar';
-import {IconProps} from 'app/types/iconProps';
 
-import {PlatformContextProvider} from '../breadcrumbs/platformContext';
-import BreadcrumbTime from '../breadcrumbs/breadcrumbTime';
-import BreadcrumbCollapsed from '../breadcrumbs/breadcrumbCollapsed';
 import {
   Breadcrumb,
   BreadcrumbDetails,
   BreadcrumbType,
-  BreadcrumbLevel,
+  BreadcrumbLevelType,
 } from '../breadcrumbs/types';
 import BreadcrumbFilter from './breadcrumbFilter/breadcrumbFilter';
 import convertBreadcrumbType from './convertBreadcrumbType';
 import getBreadcrumbDetails from './getBreadcrumbDetails';
-import BreadcrumbRenderer from './breadcrumbRenderer';
-import {BreadCrumb, BreadCrumbIconWrapper} from './styles';
 import {FilterGroupType} from './breadcrumbFilter/types';
+import BreadcrumbsListHeader from './breadcrumbsListHeader';
+import BreadcrumbsListBody from './breadcrumbsListBody';
 
 const MAX_CRUMBS_WHEN_COLLAPSED = 10;
 
@@ -138,7 +134,7 @@ class BreadcrumbsContainer extends React.Component<Props, State> {
       const {type, value, module: mdl} = exception.data.values[0];
       return {
         type: BreadcrumbType.EXCEPTION,
-        level: BreadcrumbLevel.ERROR,
+        level: BreadcrumbLevelType.ERROR,
         category: this.moduleToCategory(mdl) || 'exception',
         data: {
           type,
@@ -152,7 +148,7 @@ class BreadcrumbsContainer extends React.Component<Props, State> {
 
     return {
       type: BreadcrumbType.MESSAGE,
-      level: levelTag?.value as BreadcrumbLevel,
+      level: levelTag?.value as BreadcrumbLevelType,
       category: 'message',
       message: event.message,
       timestamp: event.dateCreated,
@@ -227,7 +223,7 @@ class BreadcrumbsContainer extends React.Component<Props, State> {
     });
   };
 
-  handleCollapseToggle = () => {
+  handleToggleCollapse = () => {
     this.setState(prevState => ({
       isCollapsed: !prevState.isCollapsed,
     }));
@@ -241,7 +237,7 @@ class BreadcrumbsContainer extends React.Component<Props, State> {
   };
 
   render() {
-    const {event, type} = this.props;
+    const {type} = this.props;
     const {breadcrumbFilterGroups, searchTerm} = this.state;
 
     const {
@@ -277,37 +273,14 @@ class BreadcrumbsContainer extends React.Component<Props, State> {
       >
         <Content>
           {filteredCollapsedBreadcrumbs.length > 0 ? (
-            <PlatformContextProvider value={{platform: event.platform}}>
-              <BreadCrumbs className="crumbs">
-                {collapsedQuantity > 0 && (
-                  <BreadcrumbCollapsed
-                    onClick={this.handleCollapseToggle}
-                    quantity={collapsedQuantity}
-                  />
-                )}
-                {filteredCollapsedBreadcrumbs.map(
-                  ({color, borderColor, icon, ...crumb}, idx) => {
-                    const Icon = icon as React.ComponentType<IconProps>;
-                    return (
-                      <BreadCrumb
-                        data-test-id="breadcrumb"
-                        key={idx}
-                        hasError={
-                          crumb.type === BreadcrumbType.MESSAGE ||
-                          crumb.type === BreadcrumbType.EXCEPTION
-                        }
-                      >
-                        <BreadCrumbIconWrapper color={color} borderColor={borderColor}>
-                          <Icon />
-                        </BreadCrumbIconWrapper>
-                        <BreadcrumbRenderer breadcrumb={crumb as Breadcrumb} />
-                        <BreadcrumbTime timestamp={crumb.timestamp} />
-                      </BreadCrumb>
-                    );
-                  }
-                )}
-              </BreadCrumbs>
-            </PlatformContextProvider>
+            <BreadcrumbList>
+              <BreadcrumbsListHeader />
+              <BreadcrumbsListBody
+                onToggleCollapse={this.handleToggleCollapse}
+                collapsedQuantity={collapsedQuantity}
+                breadcrumbs={filteredCollapsedBreadcrumbs}
+              />
+            </BreadcrumbList>
           ) : (
             <EmptyStateWarning small>
               {t('Sorry, no breadcrumbs match your search query.')}
@@ -321,12 +294,6 @@ class BreadcrumbsContainer extends React.Component<Props, State> {
 
 export default BreadcrumbsContainer;
 
-const BreadCrumbs = styled('ul')`
-  padding-left: 0;
-  list-style: none;
-  margin-bottom: 0;
-`;
-
 const Content = styled('div')`
   border: 1px solid ${p => p.theme.borderLight};
   border-radius: 3px;
@@ -334,6 +301,12 @@ const Content = styled('div')`
   margin-bottom: ${space(3)};
 `;
 
+const BreadcrumbList = styled('ul')`
+  padding-left: 0;
+  list-style: none;
+  margin-bottom: 0;
+`;
+
 const Search = styled('div')`
   display: flex;
   width: 100%;
diff --git a/src/sentry/static/sentry/app/components/events/interfaces/breadcrumbsV2/breadcrumbsListBody.tsx b/src/sentry/static/sentry/app/components/events/interfaces/breadcrumbsV2/breadcrumbsListBody.tsx
new file mode 100644
index 0000000000..68634feb56
--- /dev/null
+++ b/src/sentry/static/sentry/app/components/events/interfaces/breadcrumbsV2/breadcrumbsListBody.tsx
@@ -0,0 +1,45 @@
+import React from 'react';
+
+import BreadcrumbTime from '../breadcrumbs/breadcrumbTime';
+import BreadcrumbCollapsed from '../breadcrumbs/breadcrumbCollapsed';
+import {Breadcrumb, BreadcrumbDetails, BreadcrumbType} from '../breadcrumbs/types';
+import BreadcrumbData from './breadcrumbData/breadcrumbData';
+import BreadcrumbCategory from './breadcrumbCategory';
+import BreadcrumbIcon from './breadcrumbIcon';
+import BreadcrumbLevel from './breadcrumbLevel';
+import {BreadcrumbListItem} from './styles';
+
+type Breadcrumbs = Array<Breadcrumb & BreadcrumbDetails & {id: number}>;
+
+type Props = {
+  breadcrumbs: Breadcrumbs;
+  collapsedQuantity: number;
+  onToggleCollapse: () => void;
+};
+
+const BreadcrumbsListBody = ({
+  breadcrumbs,
+  collapsedQuantity,
+  onToggleCollapse,
+}: Props) => (
+  <React.Fragment>
+    {collapsedQuantity > 0 && (
+      <BreadcrumbCollapsed onClick={onToggleCollapse} quantity={collapsedQuantity} />
+    )}
+    {breadcrumbs.map(({color, borderColor, icon, ...crumb}, idx) => {
+      const hasError =
+        crumb.type === BreadcrumbType.MESSAGE || crumb.type === BreadcrumbType.EXCEPTION;
+      return (
+        <BreadcrumbListItem key={idx} data-test-id="breadcrumb" hasError={hasError}>
+          <BreadcrumbIcon icon={icon} color={color} borderColor={borderColor} />
+          <BreadcrumbCategory category={crumb.category} />
+          <BreadcrumbData breadcrumb={crumb as Breadcrumb} />
+          <BreadcrumbLevel level={crumb.level} />
+          <BreadcrumbTime timestamp={crumb.timestamp} />
+        </BreadcrumbListItem>
+      );
+    })}
+  </React.Fragment>
+);
+
+export default BreadcrumbsListBody;
diff --git a/src/sentry/static/sentry/app/components/events/interfaces/breadcrumbsV2/breadcrumbsListHeader.tsx b/src/sentry/static/sentry/app/components/events/interfaces/breadcrumbsV2/breadcrumbsListHeader.tsx
new file mode 100644
index 0000000000..12b1e629a7
--- /dev/null
+++ b/src/sentry/static/sentry/app/components/events/interfaces/breadcrumbsV2/breadcrumbsListHeader.tsx
@@ -0,0 +1,36 @@
+import React from 'react';
+import styled from '@emotion/styled';
+
+import {t} from 'app/locale';
+import space from 'app/styles/space';
+
+import {BreadcrumbListItem} from './styles';
+
+const BreadcrumbsListHeader = () => {
+  return (
+    <BreadcrumbListHeaderWrapper>
+      <BreadcrumbListHeaderItem>{t('Type')}</BreadcrumbListHeaderItem>
+      <BreadcrumbListHeaderItem>{t('Category')}</BreadcrumbListHeaderItem>
+      <BreadcrumbListHeaderItem>{t('Summary')}</BreadcrumbListHeaderItem>
+      <BreadcrumbListHeaderItem>{t('Level')}</BreadcrumbListHeaderItem>
+      <BreadcrumbListHeaderItem>{t('Datetime')}</BreadcrumbListHeaderItem>
+    </BreadcrumbListHeaderWrapper>
+  );
+};
+
+export default BreadcrumbsListHeader;
+
+const BreadcrumbListHeaderWrapper = styled(BreadcrumbListItem)`
+  padding: ${space(2)} ${space(2)} ${space(2)} ${space(3)};
+  border-bottom: 1px solid ${p => p.theme.borderDark};
+  background: ${p => p.theme.offWhite};
+`;
+
+const BreadcrumbListHeaderItem = styled('div')`
+  color: ${p => p.theme.gray3};
+  font-size: ${p => p.theme.fontSizeSmall};
+  border-radius: ${p => p.theme.borderRadius} ${p => p.theme.borderRadius} 0 0;
+  font-weight: 600;
+  text-transform: uppercase;
+  line-height: 1;
+`;
diff --git a/src/sentry/static/sentry/app/components/events/interfaces/breadcrumbsV2/styles.tsx b/src/sentry/static/sentry/app/components/events/interfaces/breadcrumbsV2/styles.tsx
index 91bc3908ad..d1d311e3ba 100644
--- a/src/sentry/static/sentry/app/components/events/interfaces/breadcrumbsV2/styles.tsx
+++ b/src/sentry/static/sentry/app/components/events/interfaces/breadcrumbsV2/styles.tsx
@@ -5,13 +5,14 @@ import {Color} from 'app/utils/theme';
 import space from 'app/styles/space';
 
 // TODO(style): the color #fffcfb and  #e7c0bc are not yet in theme and no similar theme's color was found.
-const BreadCrumb = styled('li')<{hasError?: boolean}>`
+const BreadcrumbListItem = styled('li')<{hasError?: boolean}>`
   font-size: ${p => p.theme.fontSizeMedium};
   position: relative;
-  padding: ${space(1)} ${space(3)} ${space(0.75)} ${space(3)} !important;
+  padding: ${space(1)} ${space(2)} ${space(1)} ${space(3)};
   display: grid;
-  grid-template-columns: 26px 1fr 50px;
-  grid-gap: ${space(1.5)};
+  grid-template-columns: 50px 100px 1fr 80px 80px;
+  grid-gap: ${space(2)};
+  border-bottom: 1px solid ${p => p.theme.borderLight};
   :before {
     content: '';
     display: block;
@@ -22,7 +23,9 @@ const BreadCrumb = styled('li')<{hasError?: boolean}>`
     background: ${p => p.theme.borderLight};
     position: absolute;
   }
-  border-bottom: 1px solid ${p => p.theme.borderLight};
+  :first-child:before {
+    content: none;
+  }
   :last-child:before {
     bottom: calc(100% - ${space(1)});
   }
@@ -55,4 +58,4 @@ const BreadCrumbIconWrapper = styled('div')<{
   border: 1px solid ${p => (p.color ? p.theme[p.color] : p.theme.gray2)};
 `;
 
-export {BreadCrumb, BreadCrumbIconWrapper};
+export {BreadcrumbListItem, BreadCrumbIconWrapper};
diff --git a/tests/acceptance/test_issue_details.py b/tests/acceptance/test_issue_details.py
index bfa5f89773..4d0079ff9a 100644
--- a/tests/acceptance/test_issue_details.py
+++ b/tests/acceptance/test_issue_details.py
@@ -79,11 +79,23 @@ class IssueDetailsTest(AcceptanceTestCase, SnubaTestCase):
         self.page.visit_issue(self.org.slug, event.group.id)
         self.browser.snapshot("issue details cocoa")
 
+    def test_cocoa_event_breadcrumb_v2(self):
+        with self.feature("organizations:breadcrumbs-v2"):
+            event = self.create_sample_event(platform="cocoa")
+            self.page.visit_issue(self.org.slug, event.group.id)
+            self.browser.snapshot("issue details cocoa - breadcrumbs-v2")
+
     def test_unity_event(self):
         event = self.create_sample_event(default="unity", platform="csharp")
         self.page.visit_issue(self.org.slug, event.group.id)
         self.browser.snapshot("issue details unity")
 
+    def test_unity_event_breadcrumb_v2(self):
+        with self.feature("organizations:breadcrumbs-v2"):
+            event = self.create_sample_event(default="unity", platform="csharp")
+            self.page.visit_issue(self.org.slug, event.group.id)
+            self.browser.snapshot("issue details unity - breadcrumbs v2")
+
     def test_android_event(self):
         event = self.create_sample_event(platform="android")
         self.page.visit_issue(self.org.slug, event.group.id)
@@ -114,6 +126,13 @@ class IssueDetailsTest(AcceptanceTestCase, SnubaTestCase):
 
         self.browser.snapshot("issue details rust")
 
+    def test_rust_event_breadcrumb_v2(self):
+        with self.feature("organizations:breadcrumbs-v2"):
+            # TODO: This should become its own "rust" platform type
+            event = self.create_sample_event(platform="native", sample_name="Rust")
+            self.page.visit_issue(self.org.slug, event.group.id)
+            self.browser.snapshot("issue details rust - breadcrumbs v2")
+
     def test_cordova_event(self):
         event = self.create_sample_event(platform="cordova")
         self.page.visit_issue(self.org.slug, event.group.id)
