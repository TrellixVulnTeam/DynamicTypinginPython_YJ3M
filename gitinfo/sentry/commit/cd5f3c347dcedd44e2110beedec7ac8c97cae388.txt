commit cd5f3c347dcedd44e2110beedec7ac8c97cae388
Author: Matt Robenolt <matt@ydekproductions.com>
Date:   Mon Sep 14 13:43:33 2015 -0700

    Persist comments in LocalStorage
    
    Fixes GH-1879

diff --git a/src/sentry/static/sentry/app/utils/localStorage.jsx b/src/sentry/static/sentry/app/utils/localStorage.jsx
new file mode 100644
index 0000000000..bb54a69961
--- /dev/null
+++ b/src/sentry/static/sentry/app/utils/localStorage.jsx
@@ -0,0 +1,21 @@
+var functions = {};
+
+try {
+  var mod = 'sentry';
+  localStorage.setItem(mod, mod);
+  localStorage.removeItem(mod);
+
+  functions = {
+    setItem: localStorage.setItem.bind(localStorage),
+    getItem: localStorage.getItem.bind(localStorage)
+  };
+} catch(e) {
+  functions = {
+    setItem() { return; },
+    // Returns null if key doesn't exist:
+    // https://developer.mozilla.org/en-US/docs/Web/API/Storage/getItem
+    getItem() { return null; }
+  };
+}
+
+export default functions;
diff --git a/src/sentry/static/sentry/app/views/groupActivity/noteInput.jsx b/src/sentry/static/sentry/app/views/groupActivity/noteInput.jsx
index cbd5b9ce0d..bb1bb9d2e8 100644
--- a/src/sentry/static/sentry/app/views/groupActivity/noteInput.jsx
+++ b/src/sentry/static/sentry/app/views/groupActivity/noteInput.jsx
@@ -3,14 +3,30 @@ import React from "react";
 import api from "../../api";
 import GroupStore from "../../stores/groupStore";
 import IndicatorStore from "../../stores/indicatorStore";
+import {getItem, setItem} from "../../utils/localStorage";
+
 var PureRenderMixin = require('react/addons').addons.PureRenderMixin;
+const localStorageKey = 'noteinput:latest';
 
 var NoteInput = React.createClass({
   mixins: [PureRenderMixin],
 
   getInitialState() {
-    var {item} = this.props;
+    var {item, group} = this.props;
     var updating = !!item;
+    var defaultText = '';
+
+    if (updating) {
+      defaultText = item.data.text;
+    } else {
+      var storage = getItem(localStorageKey);
+      if (storage) {
+        var {groupId, value} = JSON.parse(storage);
+        if (groupId === group.id) {
+          defaultText = value;
+        }
+      }
+    }
 
     return {
       loading: false,
@@ -19,10 +35,24 @@ var NoteInput = React.createClass({
       expanded: false,
       preview: false,
       updating: updating,
-      value: updating ? item.data.text : ''
+      value: defaultText
     };
   },
 
+  componentWillUpdate(nextProps, nextState) {
+    // We can't support this when editing an existing Note since it'll
+    // clobber the other storages
+    if (this.state.updating) return;
+
+    // Nothing changed
+    if (this.state.value === nextState.value) return;
+
+    setItem(localStorageKey, JSON.stringify({
+      groupId: this.props.group.id,
+      value: nextState.value
+    }));
+  },
+
   toggleEdit() {
     this.setState({preview: false});
   },
