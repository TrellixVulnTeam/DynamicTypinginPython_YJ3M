commit e915082cdc0c1560b7f9c8c9abe10d3a07197a02
Author: David Cramer <dcramer@gmail.com>
Date:   Mon Aug 30 21:44:11 2010 -0700

    Fix for no messages

diff --git a/dblog/templates/dblog/index.html b/dblog/templates/dblog/index.html
index 20cadbcacc..9ee5d7db19 100644
--- a/dblog/templates/dblog/index.html
+++ b/dblog/templates/dblog/index.html
@@ -181,6 +181,8 @@
 				white-space: -o-pre-wrap;    /* Opera 7                */
 				word-wrap: break-word;       /* Internet Explorer 5.5+ */
 			}
+			.no-messages { font-size: 1.1em; padding: 20px 0; }
+			
 		</style> 
 	</head> 
  
@@ -222,22 +224,23 @@
 
 		<div id="body" class="with-sidebar">
 			{% paginate message_list from request as message_list per_page 25 %}
-			{{ message_list.paging }}
-			<ul class="messages">
-				{% for message, priority in message_list.objects|with_priority %}
-					<li class="{% cycle 'row1' 'row2' %} level-{{ message.level }} priority-{{ priority }}" onclick="window.location.href='{% url dblog-group message.pk %}'">
-						<span class="count">{{ message.times_seen }}</span>
-						<h3><a href="{% url dblog-group message.pk %}">{% if message.view %}{{ message.view }}{% else %}{{ message.message }}{% endif %}</a></h3>
-						<span class="last_seen">{{ message.last_seen|timesince }} ago</span>
-						<p class="message"><span class="tag tag-level">{{ message.get_level_display }}</span> <span class="tag tag-server">{{ message.server_name }}</span> {{ message.error }}</p>
-						<pre class="traceback">{{ message.shortened_traceback }}</pre>
-					</li>
-				{% endfor %}
-			</ul>
-			{{ message_list.paging }}
-			<!-- <div id="details">
-				<pre>{{ message.traceback }}</pre>
-			</div> -->
+			{% if message_list.objects %}
+				{{ message_list.paging }}
+				<ul class="messages">
+					{% for message, priority in message_list.objects|with_priority %}
+						<li class="{% cycle 'row1' 'row2' %} level-{{ message.level }} priority-{{ priority }}" onclick="window.location.href='{% url dblog-group message.pk %}'">
+							<span class="count">{{ message.times_seen }}</span>
+							<h3><a href="{% url dblog-group message.pk %}">{% if message.view %}{{ message.view }}{% else %}{{ message.message }}{% endif %}</a></h3>
+							<span class="last_seen">{{ message.last_seen|timesince }} ago</span>
+							<p class="message"><span class="tag tag-level">{{ message.get_level_display }}</span> <span class="tag tag-server">{{ message.server_name }}</span> {{ message.error }}</p>
+							<pre class="traceback">{{ message.shortened_traceback }}</pre>
+						</li>
+					{% endfor %}
+				</ul>
+				{{ message_list.paging }}
+			{% else %}
+				<p class="no-messages">No messages match your filters.</p>
+			{% endif %}
 		</div>
  
 		<div id="footer">Powered by sexy Django magic.</div> 
diff --git a/dblog/templatetags/dblog_helpers.py b/dblog/templatetags/dblog_helpers.py
index cc8136951a..0a1b3a5c2b 100644
--- a/dblog/templatetags/dblog_helpers.py
+++ b/dblog/templatetags/dblog_helpers.py
@@ -2,24 +2,25 @@ from django import template
 register = template.Library()
 
 def with_priority(result_list, key='score'):
-    if isinstance(result_list[0], dict):
-        _get = lambda x, k: x[k]
-    else:
-        _get = lambda x, k: getattr(x, k)
-
-    min_, max_ = min([_get(r, key) for r in result_list]), max([_get(r, key) for r in result_list])
-    mid = (max_ - min_) / 4
-    for result in result_list:
-        val = _get(result, key)
-        if val > max_ - mid:
-            priority = 'veryhigh'
-        elif val > max_ - mid * 2:
-            priority = 'high'
-        elif val > max_ - mid * 3:
-            priority = 'medium'
-        elif val > max_ - mid * 4:
-            priority = 'low'
+    if result_list:
+        if isinstance(result_list[0], dict):
+            _get = lambda x, k: x[k]
         else:
-            priority = 'verylow'
-        yield result, priority
+            _get = lambda x, k: getattr(x, k)
+
+        min_, max_ = min([_get(r, key) for r in result_list]), max([_get(r, key) for r in result_list])
+        mid = (max_ - min_) / 4
+        for result in result_list:
+            val = _get(result, key)
+            if val > max_ - mid:
+                priority = 'veryhigh'
+            elif val > max_ - mid * 2:
+                priority = 'high'
+            elif val > max_ - mid * 3:
+                priority = 'medium'
+            elif val > max_ - mid * 4:
+                priority = 'low'
+            else:
+                priority = 'verylow'
+            yield result, priority
 with_priority = register.filter(with_priority)
\ No newline at end of file
