commit 2aeb0df8bad2f0265e16870919c83ab0fa986478
Author: David Cramer <dcramer@gmail.com>
Date:   Thu Jan 29 15:11:30 2015 -0800

    Add inbound mail configuration docs

diff --git a/CHANGES b/CHANGES
index c383fca4f3..23cc78a6fa 100644
--- a/CHANGES
+++ b/CHANGES
@@ -2,6 +2,7 @@ Version 7.2.0
 -------------
 
 - A py.test plugin now exists to make extension testing easier.
+- A Mailgun webhook endpoint is now available for incoming email.
 
 
 Version 7.1.4
diff --git a/docs/inbound-mail/index.rst b/docs/inbound-mail/index.rst
new file mode 100644
index 0000000000..1c82028cd2
--- /dev/null
+++ b/docs/inbound-mail/index.rst
@@ -0,0 +1,12 @@
+Inbound Mail
+============
+
+Sentry provides support for handling incoming email in various situations. Currently it only supports processing replies to error and note notifications.
+
+For configuration instructions, choose a backend:
+
+.. toctree::
+   :maxdepth: 1
+
+   mailgun
+   nginx
diff --git a/docs/inbound-mail/mailgun.rst b/docs/inbound-mail/mailgun.rst
new file mode 100644
index 0000000000..c89b324ef5
--- /dev/null
+++ b/docs/inbound-mail/mailgun.rst
@@ -0,0 +1,36 @@
+Inbound Email via Mailgun
+=========================
+
+.. versionadded:: 7.2.0
+
+Start by choosing a domain to handle inbound email. We find it easiest if you maintain a separate domain from anything else. In our example, we're going to choose ``inbound.sentry.example.com``. You'll need to configure your DNS records for the given domain according to the Mailgun documentation.
+
+Create a new route in mailgun:
+
+::
+
+    Priority:
+      0
+    Filter Expression:
+      catch_all()
+    Actions:
+      forward("https://sentry.example.com/api/hooks/mailgun/inbound/")
+    Description:
+      Sentry inbound handler
+
+Configure Sentry with the appropriate settings:
+
+.. code-block:: python
+
+    # Your Mailgun API key (used to verify incoming webhooks)
+    MAILGUN_API_KEY = ''
+
+    # Set the SMTP hostname to your configured inbound domain
+    SENTRY_SMTP_HOSTNAME = 'inbound.sentry.example.com'
+
+    # Inform Sentry to send the appropriate mail headers to enable
+    # incoming replies
+    SENTRY_ENABLE_EMAIL_REPLIES = True
+
+
+That's it! You'll now be able to respond to activity notifications on errors via your email client.
diff --git a/docs/inbound-mail/nginx.rst b/docs/inbound-mail/nginx.rst
new file mode 100644
index 0000000000..0cc4f43be1
--- /dev/null
+++ b/docs/inbound-mail/nginx.rst
@@ -0,0 +1,61 @@
+Inbound Email via Nginx
+=======================
+
+Start by choosing a domain to handle inbound email. We find it easiest if you maintain a separate domain from anything else. In our example, we're going to choose ``inbound.sentry.example.com``. You'll need to configure your DNS records appropriately.
+
+Add another supervisor config to run the Sentry ``smtp`` service:
+
+::
+
+    [program:sentry-inbound-mail]
+    directory=/www/sentry/
+    command=/www/sentry/bin/sentry start smtp
+    autostart=true
+    autorestart=true
+    redirect_stderr=true
+
+Configure an Nginx route as an SMTP mail proxy:
+
+::
+
+    http {
+      # Bind an http server to localhost only just for the smtp auth
+      server {
+        listen 127.0.0.1:80;
+
+        # Return back the address and port for the listening
+        # Sentry smtp server. Default is 127.0.0.1:1025.
+        location = /smtp {
+          add_header Auth-Server 127.0.0.1;
+          add_header Auth-Port   1025;
+          return 200;
+        }
+      }
+    }
+
+    mail {
+      auth_http localhost/smtp;
+
+      server {
+        listen 25;
+
+        protocol   smtp;
+        proxy      on;
+        smtp_auth  none;
+        xclient    off;
+      }
+    }
+
+
+And finally, update Sentry with the appropriate settings:
+
+.. code-block:: python
+
+    # Set the SMTP hostname to your configured inbound domain
+    SENTRY_SMTP_HOSTNAME = 'inbound.sentry.example.com'
+
+    # Inform Sentry to send the appropriate mail headers to enable
+    # incoming replies
+    SENTRY_ENABLE_EMAIL_REPLIES = True
+
+That's it! You'll now be able to respond to activity notifications on errors via your email client.
diff --git a/docs/index.rst b/docs/index.rst
index 18be47f757..a6d3a9d533 100644
--- a/docs/index.rst
+++ b/docs/index.rst
@@ -26,6 +26,7 @@ Users Guide
    nodestore/index
    throttling/index
    tsdb/index
+   inbound-mail/index
    performance/index
    cli/index
    client/index
diff --git a/docs/quickstart/nginx.rst b/docs/quickstart/nginx.rst
index af1d80eae9..0ad9d3cc5a 100644
--- a/docs/quickstart/nginx.rst
+++ b/docs/quickstart/nginx.rst
@@ -121,41 +121,3 @@ Finally, re-configure supervisor to run uwsgi instead of 'sentry start':
 ::
 
   /www/sentry/bin/uwsgi --ini /www/sentry/uwsgi.ini
-
-
-Proxying Incoming Email
-~~~~~~~~~~~~~~~~~~~~~~~
-
-Nginx is recommended for handling incoming emails in front of the Sentry smtp server.
-
-Below is a sample configuration for Nginx:
-
-::
-
-    http {
-      # Bind an http server to localhost only just for the smtp auth
-      server {
-        listen 127.0.0.1:80;
-
-        # Return back the address and port for the listening
-        # Sentry smtp server. Default is 127.0.0.1:1025.
-        location = /smtp {
-          add_header Auth-Server 127.0.0.1;
-          add_header Auth-Port   1025;
-          return 200;
-        }
-      }
-    }
-
-    mail {
-      auth_http localhost/smtp;
-
-      server {
-        listen 25;
-
-        protocol   smtp;
-        proxy      on;
-        smtp_auth  none;
-        xclient    off;
-      }
-    }
