commit 18bb52f3b8d4d0a092c190ee13a7a33e3d1deb40
Author: Katie Lundsgaard <katie@getsentry.com>
Date:   Wed Mar 1 13:57:58 2017 -0800

    Make endpoints inherit from the correct base

diff --git a/src/sentry/api/endpoints/filechange.py b/src/sentry/api/endpoints/filechange.py
index 2b1ccfb4b9..caefb7bddb 100644
--- a/src/sentry/api/endpoints/filechange.py
+++ b/src/sentry/api/endpoints/filechange.py
@@ -1,18 +1,19 @@
 from __future__ import absolute_import
 
+from django.core.exceptions import PermissionDenied
+
 from sentry.api.base import DocSection
-from sentry.api.bases.project import ProjectEndpoint, ProjectReleasePermission
+from sentry.api.bases.organization import OrganizationReleasesBaseEndpoint
 from sentry.api.exceptions import ResourceDoesNotExist
 from sentry.api.serializers import serialize
 from sentry.models import CommitFileChange, Release, ReleaseCommit
 from rest_framework.response import Response
 
 
-class CommitFileChangeEndpoint(ProjectEndpoint):
+class CommitFileChangeEndpoint(OrganizationReleasesBaseEndpoint):
     doc_section = DocSection.RELEASES
-    permission_classes = (ProjectReleasePermission,)
 
-    def get(self, request, project, version):
+    def get(self, request, organization, version):
         """
         List a Release's CommitFileChange objects
         ````````````````````````
@@ -21,20 +22,20 @@ class CommitFileChangeEndpoint(ProjectEndpoint):
 
         :pparam string organization_slug: the slug of the organization the
                                           release belongs to.
-        :pparam string project_slug: the slug of the project to list the
-                                     release files of.
         :pparam string version: the version identifier of the release.
         :auth: required
         """
         try:
             release = Release.objects.get(
-                organization_id=project.organization_id,
-                projects=project,
+                organization=organization,
                 version=version,
             )
         except Release.DoesNotExist:
             raise ResourceDoesNotExist
 
+        if not self.has_release_permission(request, organization, release):
+            raise PermissionDenied
+
         release_commits = list(ReleaseCommit.objects.filter(
             release=release,
         ).select_related('commit', 'commit__author'))
diff --git a/src/sentry/api/endpoints/issues_resolved_in_release.py b/src/sentry/api/endpoints/issues_resolved_in_release.py
index 0f4cac3764..101c1314cc 100644
--- a/src/sentry/api/endpoints/issues_resolved_in_release.py
+++ b/src/sentry/api/endpoints/issues_resolved_in_release.py
@@ -2,7 +2,8 @@ from __future__ import absolute_import
 
 from rest_framework.response import Response
 
-from sentry.api.bases.organization import OrganizationEndpoint
+from sentry.api.base import DocSection
+from sentry.api.bases.project import ProjectEndpoint, ProjectPermission
 from sentry.api.serializers import serialize
 from sentry.api.serializers.models.group import StreamGroupSerializer
 from sentry.models import (
@@ -11,13 +12,26 @@ from sentry.models import (
 )
 
 
-class IssuesResolvedInReleaseEndpoint(OrganizationEndpoint):
+class IssuesResolvedInReleaseEndpoint(ProjectEndpoint):
+    doc_section = DocSection.RELEASES
+    permission_classes = (ProjectPermission,)
 
-    def get(self, request, organization, project_slug, version):
+    def get(self, request, project, version):
+        """
+        List issues to be resolved in a particular release
+        ````````````````````````
 
-        release = Release.objects.get(version=version)
-        project = Project.objects.get(slug=project_slug)
+        Retrieve a list of issues to be resolved in a given release.
 
+        :pparam string organization_slug: the slug of the organization the
+                                          release belongs to.
+        :pparam string project_slug: the slug of the project associated with the release.
+        :pparam string version: the version identifier of the release.
+        :auth: required
+        """
+
+        release = Release.objects.get(version=version, organization=project.organization)
+        project = Project.objects.get(slug=project.slug, organization=project.organization)
         commits = ReleaseCommit.objects.filter(
             release=release,
         ).select_related('commit')
diff --git a/src/sentry/api/urls.py b/src/sentry/api/urls.py
index 6052145139..04e46154af 100644
--- a/src/sentry/api/urls.py
+++ b/src/sentry/api/urls.py
@@ -217,6 +217,9 @@ urlpatterns = patterns(
     url(r'^organizations/(?P<organization_slug>[^\/]+)/releases/(?P<version>[^/]+)/files/(?P<file_id>\d+)/$',
         OrganizationReleaseFileDetailsEndpoint.as_view(),
         name='sentry-api-0-organization-release-file-details'),
+    url(r'^organizations/(?P<organization_slug>[^\/]+)/releases/(?P<version>[^/]+)/commitfiles/$',
+        CommitFileChangeEndpoint.as_view(),
+        name='sentry-api-0-release-commitfilechange'),
     url(r'^organizations/(?P<organization_slug>[^\/]+)/stats/$',
         OrganizationStatsEndpoint.as_view(),
         name='sentry-api-0-organization-stats'),
@@ -304,9 +307,6 @@ urlpatterns = patterns(
     url(r'^projects/(?P<organization_slug>[^\/]+)/(?P<project_slug>[^\/]+)/releases/(?P<version>[^/]+)/commits/$',
         ReleaseCommitsEndpoint.as_view(),
         name='sentry-api-0-release-commits'),
-    url(r'^projects/(?P<organization_slug>[^\/]+)/(?P<project_slug>[^\/]+)/releases/(?P<version>[^/]+)/commitfiles/$',
-        CommitFileChangeEndpoint.as_view(),
-        name='sentry-api-0-release-commitfilechange'),
     url(r'^projects/(?P<organization_slug>[^\/]+)/(?P<project_slug>[^\/]+)/releases/(?P<version>[^/]+)/resolved/$',
         IssuesResolvedInReleaseEndpoint.as_view(),
         name='sentry-api-0-release-resolved'),
diff --git a/src/sentry/static/sentry/app/views/releases/releaseOverview.jsx b/src/sentry/static/sentry/app/views/releases/releaseOverview.jsx
index 13f419fd81..e4efdefe95 100644
--- a/src/sentry/static/sentry/app/views/releases/releaseOverview.jsx
+++ b/src/sentry/static/sentry/app/views/releases/releaseOverview.jsx
@@ -24,9 +24,9 @@ const ReleaseOverview = React.createClass({
   },
 
   componentDidMount() {
-    let {orgId, projectId, version} = this.props.params;
+    let {orgId, version} = this.props.params;
 
-    let path = `/projects/${orgId}/${projectId}/releases/${version}/commitfiles/`;
+    let path = `/organizations/${orgId}/releases/${version}/commitfiles/`;
     this.api.request(path, {
       method: 'GET',
       data: this.props.location.query,
diff --git a/tests/sentry/api/endpoints/test_commit_filechange.py b/tests/sentry/api/endpoints/test_commit_filechange.py
index e8955b00c4..49eefdcd00 100644
--- a/tests/sentry/api/endpoints/test_commit_filechange.py
+++ b/tests/sentry/api/endpoints/test_commit_filechange.py
@@ -56,7 +56,6 @@ class CommitFileChangeTest(APITestCase):
         )
         url = reverse('sentry-api-0-release-commitfilechange', kwargs={
             'organization_slug': project.organization.slug,
-            'project_slug': project.slug,
             'version': release.version,
         })
 
