commit 65823cb7837f54df3969af518363e38741c5d2cf
Author: Lyn Nagara <lyn.nagara@gmail.com>
Date:   Mon Sep 24 11:44:51 2018 -0700

    feat(discover): Add endpoint to get a saved query (#9831)

diff --git a/src/sentry/api/endpoints/organization_discover_saved_query_detail.py b/src/sentry/api/endpoints/organization_discover_saved_query_detail.py
new file mode 100644
index 0000000000..e6abeaa889
--- /dev/null
+++ b/src/sentry/api/endpoints/organization_discover_saved_query_detail.py
@@ -0,0 +1,27 @@
+from __future__ import absolute_import
+
+from rest_framework.response import Response
+from sentry.api.serializers import serialize
+from sentry.api.exceptions import ResourceDoesNotExist
+from sentry.api.bases.organization import OrganizationPermission
+from sentry.api.bases import OrganizationEndpoint
+from sentry import features
+from sentry.models import DiscoverSavedQuery
+
+
+class OrganizationDiscoverSavedQueryDetailEndpoint(OrganizationEndpoint):
+    permission_classes = (OrganizationPermission, )
+
+    def get(self, request, organization, query_id):
+        """
+        Get a saved query
+        """
+        if not features.has('organizations:discover', organization, actor=request.user):
+            return self.respond(status=404)
+
+        try:
+            item = DiscoverSavedQuery.objects.get(id=query_id, organization=organization)
+        except DiscoverSavedQuery.DoesNotExist:
+            raise ResourceDoesNotExist
+
+        return Response(serialize(item), status=200)
diff --git a/src/sentry/api/urls.py b/src/sentry/api/urls.py
index 09186713fd..ee9e6547e2 100644
--- a/src/sentry/api/urls.py
+++ b/src/sentry/api/urls.py
@@ -60,6 +60,7 @@ from .endpoints.organization_avatar import OrganizationAvatarEndpoint
 from .endpoints.organization_details import OrganizationDetailsEndpoint
 from .endpoints.organization_discover_query import OrganizationDiscoverQueryEndpoint
 from .endpoints.organization_discover_saved_queries import OrganizationDiscoverSavedQueriesEndpoint
+from .endpoints.organization_discover_saved_query_detail import OrganizationDiscoverSavedQueryDetailEndpoint
 from .endpoints.organization_health import OrganizationHealthTopEndpoint, OrganizationHealthGraphEndpoint
 from .endpoints.organization_shortid import ShortIdLookupEndpoint
 from .endpoints.organization_environments import OrganizationEnvironmentsEndpoint
@@ -385,6 +386,11 @@ urlpatterns = patterns(
         OrganizationDiscoverSavedQueriesEndpoint.as_view(),
         name='sentry-api-0-organization-discover-saved-queries'
     ),
+    url(
+        r'^organizations/(?P<organization_slug>[^\/]+)/discover/saved/(?P<query_id>[^\/]+)/$',
+        OrganizationDiscoverSavedQueryDetailEndpoint.as_view(),
+        name='sentry-api-0-organization-discover-saved-query-detail'
+    ),
     url(
         r'^organizations/(?P<organization_slug>[^\/]+)/health/top/$',
         OrganizationHealthTopEndpoint.as_view(),
diff --git a/tests/snuba/test_organization_discover_saved_query_detail.py b/tests/snuba/test_organization_discover_saved_query_detail.py
new file mode 100644
index 0000000000..2b1e5db644
--- /dev/null
+++ b/tests/snuba/test_organization_discover_saved_query_detail.py
@@ -0,0 +1,59 @@
+from __future__ import absolute_import
+
+import six
+from sentry.testutils import APITestCase
+from django.core.urlresolvers import reverse
+from sentry.testutils import SnubaTestCase
+
+from sentry.models import DiscoverSavedQuery
+
+
+class OrganizationDiscoverSavedQueryDetailTest(APITestCase, SnubaTestCase):
+    def setUp(self):
+        super(OrganizationDiscoverSavedQueryDetailTest, self).setUp()
+        self.login_as(user=self.user)
+        self.org = self.create_organization(owner=self.user)
+        self.org_without_access = self.create_organization()
+        self.project_ids = [
+            self.create_project(organization=self.org).id,
+            self.create_project(organization=self.org).id
+        ]
+        query = {
+            'fields': ['test'],
+            'conditions': [],
+            'limit': 10
+        }
+
+        model = DiscoverSavedQuery.objects.create(
+            organization=self.org, name="Test query", query=query)
+
+        model.add_projects(self.project_ids)
+
+        self.query_id = model.id
+
+    def test_get(self):
+        with self.feature('organizations:discover'):
+            url = reverse(
+                'sentry-api-0-organization-discover-saved-query-detail',
+                args=[
+                    self.org.slug,
+                    self.query_id])
+            response = self.client.get(url)
+
+        assert response.status_code == 200, response.content
+        assert response.data['id'] == six.text_type(self.query_id)
+        assert response.data['projects'] == self.project_ids
+        assert response.data['fields'] == ['test']
+        assert response.data['conditions'] == []
+        assert response.data['limit'] == 10
+
+    def test_get_org_without_access(self):
+        with self.feature('organizations:discover'):
+            url = reverse(
+                'sentry-api-0-organization-discover-saved-query-detail',
+                args=[
+                    self.org_without_access.slug,
+                    self.query_id])
+            response = self.client.get(url)
+
+        assert response.status_code == 403, response.content
