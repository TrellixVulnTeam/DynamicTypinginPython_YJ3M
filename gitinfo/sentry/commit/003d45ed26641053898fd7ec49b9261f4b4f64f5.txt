commit 003d45ed26641053898fd7ec49b9261f4b4f64f5
Author: Lovepreet Sangha <lovepreetssangha@gmail.com>
Date:   Tue Apr 24 13:01:24 2018 -0700

    feat: Audit Log Entry for Project Edits (#8158)
    
    * feat: Audit Log Entry for Project Edits
    
    We can now view changes in the project's slug in the audit log.

diff --git a/src/sentry/api/endpoints/project_details.py b/src/sentry/api/endpoints/project_details.py
index 4bfc59f9d6..667d8a3053 100644
--- a/src/sentry/api/endpoints/project_details.py
+++ b/src/sentry/api/endpoints/project_details.py
@@ -221,6 +221,8 @@ class ProjectDetailsEndpoint(ProjectEndpoint):
             or (request.access and request.access.has_scope('project:write'))
         )
 
+        changed_proj_settings = {}
+
         if has_project_write:
             serializer_cls = ProjectAdminSerializer
         else:
@@ -256,10 +258,12 @@ class ProjectDetailsEndpoint(ProjectEndpoint):
             old_slug = project.slug
             project.slug = result['slug']
             changed = True
+            changed_proj_settings['new_slug'] = project.slug
 
         if result.get('name'):
             project.name = result['name']
             changed = True
+            changed_proj_settings['new_project'] = project.name
 
         old_team_id = None
         new_team = None
@@ -485,7 +489,7 @@ class ProjectDetailsEndpoint(ProjectEndpoint):
                 organization=project.organization,
                 target_object=project.id,
                 event=AuditLogEntryEvent.PROJECT_EDIT,
-                data=project.get_audit_log_data(),
+                data=changed_proj_settings
             )
 
         data = serialize(project, request.user, DetailedProjectSerializer())
diff --git a/src/sentry/models/auditlogentry.py b/src/sentry/models/auditlogentry.py
index df4df01ba8..6461b38cda 100644
--- a/src/sentry/models/auditlogentry.py
+++ b/src/sentry/models/auditlogentry.py
@@ -230,7 +230,8 @@ class AuditLogEntry(Model):
         elif self.event == AuditLogEntryEvent.PROJECT_ADD:
             return 'created project %s' % (self.data['slug'], )
         elif self.event == AuditLogEntryEvent.PROJECT_EDIT:
-            return 'edited project %s' % (self.data['slug'], )
+            return 'edited project settings ' + (' '.join([' in %s to %s' % (key, value)
+                                                           for (key, value) in six.iteritems(self.data)]))
         elif self.event == AuditLogEntryEvent.PROJECT_REMOVE:
             return 'removed project %s' % (self.data['slug'], )
         elif self.event == AuditLogEntryEvent.PROJECT_REQUEST_TRANSFER:
diff --git a/src/sentry/models/projectoption.py b/src/sentry/models/projectoption.py
index 5ece56c10e..6819e0d7b8 100644
--- a/src/sentry/models/projectoption.py
+++ b/src/sentry/models/projectoption.py
@@ -56,7 +56,7 @@ class ProjectOptionManager(BaseManager):
         self.reload_cache(project.id)
 
     def set_value(self, project, key, value):
-        self.create_or_update(
+        inst, created = self.create_or_update(
             project=project,
             key=key,
             values={
@@ -64,6 +64,7 @@ class ProjectOptionManager(BaseManager):
             },
         )
         self.reload_cache(project.id)
+        return created or inst > 0
 
     def get_all_values(self, project):
         if isinstance(project, models.Model):
diff --git a/tests/sentry/api/endpoints/test_project_details.py b/tests/sentry/api/endpoints/test_project_details.py
index 9dc798b831..4517674edd 100644
--- a/tests/sentry/api/endpoints/test_project_details.py
+++ b/tests/sentry/api/endpoints/test_project_details.py
@@ -5,7 +5,7 @@ import six
 
 from django.core.urlresolvers import reverse
 
-from sentry.models import Project, ProjectBookmark, ProjectStatus, UserOption, DeletedProject, ProjectRedirect
+from sentry.models import Project, ProjectBookmark, ProjectStatus, UserOption, DeletedProject, ProjectRedirect, AuditLogEntry, AuditLogEntryEvent
 from sentry.testutils import APITestCase
 
 
@@ -201,6 +201,10 @@ class ProjectUpdateTest(APITestCase):
             project=self.project,
             redirect_slug=self.project.slug,
         )
+        assert AuditLogEntry.objects.filter(
+            organization=project.organization,
+            event=AuditLogEntryEvent.PROJECT_EDIT,
+        ).exists()
 
     def test_invalid_slug(self):
         new_project = self.create_project()
