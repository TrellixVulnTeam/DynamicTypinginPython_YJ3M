commit 2403baf905fbfae3cd92b83dff9ace4cde032bfa
Author: Armin Ronacher <armin.ronacher@active-4.com>
Date:   Tue Jan 31 11:59:34 2017 +0100

    Small changes to reprocessing. Emit issues for native processing

diff --git a/src/sentry/lang/native/plugin.py b/src/sentry/lang/native/plugin.py
index da351d1cb4..e66d6ae61d 100644
--- a/src/sentry/lang/native/plugin.py
+++ b/src/sentry/lang/native/plugin.py
@@ -18,6 +18,7 @@ from sentry.lang.native.utils import \
     APPLE_SDK_MAPPING
 from sentry.utils.native import parse_addr
 from sentry.stacktraces import StacktraceProcessor
+from sentry.reprocessing import report_processing_issue
 
 
 logger = logging.getLogger(__name__)
@@ -406,8 +407,27 @@ class NativeStacktraceProcessor(StacktraceProcessor):
             sfrm = self.sym.symbolize_frame(sym_frame, self.sdk_info)
         except SymbolicationFailed as e:
             if e.is_user_fixable or e.is_sdk_failure:
+                report_processing_issue(self.data,
+                    scope='native',
+                    object='dsym:%s' % e.image_uuid,
+                    type=e.type,
+                    data={
+                        'image_path': e.image_path,
+                        'image_arch': e.image_arch,
+                        'message': e.message,
+                    }
+                )
+
+                # This in many ways currently does not really do anything.
+                # The reason is that once a processing issue is reported
+                # the event will only be stored as a raw event and no
+                # group will be generated.  As a result it also means that
+                # we will not have any user facing event or error showing
+                # up at all.  We want to keep this here though in case we
+                # do not want to report some processing issues (eg:
+                # optional dsyms)
                 errors.append({
-                    'type': EventError.NATIVE_INTERNAL_FAILURE,
+                    'type': e.type,
                     'image_uuid': e.image_uuid,
                     'image_path': e.image_path,
                     'image_arch': e.image_arch,
diff --git a/src/sentry/tasks/store.py b/src/sentry/tasks/store.py
index 40409c0907..0ee4955281 100644
--- a/src/sentry/tasks/store.py
+++ b/src/sentry/tasks/store.py
@@ -118,6 +118,7 @@ def process_event(cache_key, start_time=None, **kwargs):
         if issues:
             create_failed_event(cache_key, project, issues)
             return
+
         default_cache.set(cache_key, data, 3600)
 
     save_event.delay(cache_key=cache_key, data=None, start_time=start_time)
@@ -127,6 +128,9 @@ def create_failed_event(cache_key, project, issues):
     """If processing failed we put the original data from the cache into a
     raw event.
     """
+    # We need to get the original data here instead of passing the data in
+    # from the last processing step because we do not want any
+    # modifications to take place.
     data = default_cache.get(cache_key)
     if data is None:
         metrics.incr('events.failed', tags={'reason': 'cache', 'stage': 'failed_raw'})
