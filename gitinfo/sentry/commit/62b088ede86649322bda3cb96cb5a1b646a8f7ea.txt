commit 62b088ede86649322bda3cb96cb5a1b646a8f7ea
Author: bkonkle <brandon@konkle.us>
Date:   Mon Feb 6 12:20:58 2012 -0700

    Added a default ALLOW_ORIGNS value, docs, and tests

diff --git a/docs/config/index.rst b/docs/config/index.rst
index 27dcc26710..d8ed763c0c 100644
--- a/docs/config/index.rst
+++ b/docs/config/index.rst
@@ -118,6 +118,24 @@ Authentication
 
         SENTRY_ALLOW_PROJECT_CREATION = True
 
+.. data:: sentry.conf.ALLOW_ORIGIN
+    :noindex:
+    
+    If provided, Sentry will set the Access-Control-Allow-Origin header to this
+    value on /api/store/ responses. In addition, the
+    Access-Control-Allow-Headers header will be set to 'X-Sentry-Auth'. This
+    allows JavaScript clients to submit cross-domain error reports.
+    
+    You can read more about these headers in the `Mozilla developer docs`_.
+    
+    Defaults to ``None`` (don't add the Access-Control headers)
+    
+    ::
+    
+        SENTRY_ALLOW_ORIGIN = "http://foo.example"
+
+.. _Mozilla developer docs: https://developer.mozilla.org/En/HTTP_access_control#Simple_requests
+
 Notifications
 -------------
 
diff --git a/sentry/conf/defaults.py b/sentry/conf/defaults.py
index 4051a72281..516338784f 100644
--- a/sentry/conf/defaults.py
+++ b/sentry/conf/defaults.py
@@ -142,3 +142,6 @@ SEARCH_DEFAULT_SORT_OPTION = 'date'
 
 # Default project access when a project owner is created
 DEFAULT_PROJECT_ACCESS = 'MEMBER_OWNER'
+
+# Default to not sending the Access-Control-Allow-Origin header on api/store
+ALLOW_ORIGIN = None
diff --git a/sentry/utils/http.py b/sentry/utils/http.py
index f82e1ee33c..e82c2e8839 100644
--- a/sentry/utils/http.py
+++ b/sentry/utils/http.py
@@ -55,8 +55,7 @@ def apply_access_control_headers(response):
     about these headers here:
     https://developer.mozilla.org/En/HTTP_access_control#Simple_requests
     """
-    origin = getattr(settings, 'ALLOW_ORIGIN', None)
-    if origin:
-        response['Access-Control-Allow-Origin'] = origin
+    if settings.ALLOW_ORIGIN:
+        response['Access-Control-Allow-Origin'] = settings.ALLOW_ORIGIN
         response['Access-Control-Allow-Headers'] = 'X-Sentry-Auth'
     return response
diff --git a/tests/utils/http/tests.py b/tests/utils/http/tests.py
index 8353eafd1f..1e9f1e2e7f 100644
--- a/tests/utils/http/tests.py
+++ b/tests/utils/http/tests.py
@@ -2,7 +2,9 @@
 
 from __future__ import absolute_import
 
-from sentry.utils.http import is_same_domain
+from django.http import HttpResponse
+
+from sentry.utils.http import is_same_domain, apply_access_control_headers
 
 from tests.base import TestCase
 
@@ -25,3 +27,23 @@ class SameDomainTestCase(TestCase):
         url2 = 'http://example.com:13/biz/baz'
 
         self.assertFalse(is_same_domain(url1, url2))
+
+
+class AccessControlTestCase(TestCase):
+    
+    def test_allow_origin_none(self):
+        """If ALLOW_ORIGIN is None, the headers should not be added"""
+        with self.Settings(SENTRY_ALLOW_ORIGIN=None):
+            response = apply_access_control_headers(HttpResponse())
+            self.assertEqual(response.get('Access-Control-Allow-Origin', None),
+                             None)
+            self.assertEqual(response.get('Access-Control-Allow-Headers', None),
+                             None)
+    
+    def test_allow_origin(self):
+        with self.Settings(SENTRY_ALLOW_ORIGIN="http://foo.example"):
+            response = apply_access_control_headers(HttpResponse())
+            self.assertEqual(response.get('Access-Control-Allow-Origin', None),
+                             "http://foo.example")
+            self.assertEqual(response.get('Access-Control-Allow-Headers', None),
+                             "X-Sentry-Auth")
