commit 91ce2a5c0d2a9efdd2dfc56fe6799d269d52a757
Author: David Cramer <dcramer@gmail.com>
Date:   Tue Mar 3 11:29:03 2015 -0800

    Switch to sentry.auth.access on group pages

diff --git a/src/sentry/auth/access.py b/src/sentry/auth/access.py
index b1eafb29f4..aee6319166 100644
--- a/src/sentry/auth/access.py
+++ b/src/sentry/auth/access.py
@@ -39,6 +39,9 @@ class BaseAccess(object):
             return True
         return team in self.teams
 
+    def to_django_context(self):
+        return {s.replace(':', '_'): self.has_scope(s) for s in SCOPES}
+
 
 class Access(BaseAccess):
     # TODO(dcramer): this is still a little gross, and ideally backend access
diff --git a/src/sentry/templates/sentry/groups/details.html b/src/sentry/templates/sentry/groups/details.html
index 9b356a3bcf..794905a905 100644
--- a/src/sentry/templates/sentry/groups/details.html
+++ b/src/sentry/templates/sentry/groups/details.html
@@ -122,7 +122,7 @@
 
     <ul class="nav nav-list">
         <li class="nav-header">{% trans "Actions" %}</li>
-        {% if can_admin_event %}
+        {% if ACCESS.event_write %}
             {% if not group.is_muted %}
                 <li><a href="{% url 'sentry-api-set-group-mute' group.organization.slug project.slug group.id %}">{% trans "Mute Event" %}</a></li>
             {% elif not group.is_resolved %}
@@ -145,7 +145,7 @@
         href="{% url 'sentry-group-event-json' group.organization.slug project.slug group.id event.id %}"{% else %}
         href="{% url 'sentry-group-event-json' group.organization.slug project.slug group.id 'latest' %}"{% endif %}
         >{% trans "Raw JSON Data" %}</a></li>
-        {% if can_remove_event %}
+        {% if ACCESS.event_delete %}
             <li><a href="{% url 'sentry-api-remove-group' group.organization.slug project.slug group.id %}"
                    onclick="return confirm('{% trans "Are you sure you wish to delete all data for this event?" %}');">{% trans "Remove Event Data" %}</a></li>
         {% endif %}
diff --git a/src/sentry/web/frontend/base.py b/src/sentry/web/frontend/base.py
index ea06689b6c..8166ee28c3 100644
--- a/src/sentry/web/frontend/base.py
+++ b/src/sentry/web/frontend/base.py
@@ -220,17 +220,7 @@ class OrganizationView(BaseView):
         context = super(OrganizationView, self).get_context_data(request)
         context['organization'] = organization
         context['TEAM_LIST'] = self.get_team_list(request.user, organization)
-        context['ACCESS'] = {
-            'team_read': request.access.has_scope('team:read'),
-            'team_write': request.access.has_scope('team:write'),
-            'team_delete': request.access.has_scope('team:delete'),
-            'org_read': request.access.has_scope('org:read'),
-            'org_write': request.access.has_scope('org:write'),
-            'org_delete': request.access.has_scope('org:delete'),
-            'project_read': request.access.has_scope('project:read'),
-            'project_write': request.access.has_scope('project:write'),
-            'project_delete': request.access.has_scope('project:delete'),
-        }
+        context['ACCESS'] = request.access.to_django_context()
         return context
 
     def has_permission(self, request, organization, *args, **kwargs):
diff --git a/src/sentry/web/frontend/groups.py b/src/sentry/web/frontend/groups.py
index 62ebb3c6d4..0ac9d0f981 100644
--- a/src/sentry/web/frontend/groups.py
+++ b/src/sentry/web/frontend/groups.py
@@ -23,6 +23,7 @@ from django.shortcuts import get_object_or_404
 from django.utils import timezone
 
 from sentry import app
+from sentry.auth import access
 from sentry.constants import (
     SORT_OPTIONS, MEMBER_USER, DEFAULT_SORT_OPTION, EVENTS_PER_PAGE
 )
@@ -30,9 +31,7 @@ from sentry.db.models import create_or_update
 from sentry.models import (
     Project, Group, GroupMeta, Event, Activity, EventMapping, TagKey, GroupSeen
 )
-from sentry.permissions import (
-    can_admin_group, can_remove_group, can_create_projects
-)
+from sentry.permissions import can_create_projects
 from sentry.plugins import plugins
 from sentry.search.utils import parse_query
 from sentry.utils import json
@@ -140,10 +139,16 @@ def render_with_group_context(group, template, context, request=None,
         'organization': group.project.organization,
         'project': group.project,
         'group': group,
-        'can_admin_event': can_admin_group(request.user, group),
-        'can_remove_event': can_remove_group(request.user, group),
     })
 
+    if request:
+        context['ACCESS'] = access.from_user(
+            user=request.user,
+            organization=group.organization,
+        ).to_django_context()
+    else:
+        context['ACCESS'] = access.DEFAULT.to_django_context()
+
     if event:
         if event.id:
             # TODO(dcramer): we dont want to actually use gt/lt here as it should
