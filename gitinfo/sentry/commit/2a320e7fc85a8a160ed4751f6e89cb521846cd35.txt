commit 2a320e7fc85a8a160ed4751f6e89cb521846cd35
Author: Stephen Cefali <scefali@sentry.io>
Date:   Fri Jan 24 13:01:57 2020 -0800

    feat(analytics): update analytics for search items and add resultType for select event (#16504)

diff --git a/src/sentry/static/sentry/app/components/search/index.jsx b/src/sentry/static/sentry/app/components/search/index.jsx
index c45285110b..e6e49fa191 100644
--- a/src/sentry/static/sentry/app/components/search/index.jsx
+++ b/src/sentry/static/sentry/app/components/search/index.jsx
@@ -5,7 +5,7 @@ import React from 'react';
 import styled from '@emotion/styled';
 
 import {addErrorMessage} from 'app/actionCreators/indicator';
-import {analytics} from 'app/utils/analytics';
+import {trackAnalyticsEvent} from 'app/utils/analytics';
 import {navigateTo} from 'app/actionCreators/navigation';
 import {t} from 'app/locale';
 import ApiSource from 'app/components/search/sources/apiSource';
@@ -74,7 +74,10 @@ class Search extends React.Component {
   };
 
   componentDidMount() {
-    analytics(`${this.props.entryPoint}.open`);
+    trackAnalyticsEvent({
+      eventKey: `${this.props.entryPoint}.open`,
+      eventName: `${this.props.entryPoint} Open`,
+    });
   }
 
   handleSelect = (item, state) => {
@@ -82,7 +85,13 @@ class Search extends React.Component {
       return;
     }
 
-    analytics(`${this.props.entryPoint}.select`, {query: state && state.inputValue});
+    trackAnalyticsEvent({
+      eventKey: `${this.props.entryPoint}.select`,
+      eventName: `${this.props.entryPoint} Select`,
+      query: state && state.inputValue,
+      result_type: item.resultType,
+      source_type: item.sourceType,
+    });
 
     const {to, action} = item;
 
@@ -121,7 +130,11 @@ class Search extends React.Component {
     if (!query) {
       return;
     }
-    analytics(`${this.props.entryPoint}.query`, {query});
+    trackAnalyticsEvent({
+      eventKey: `${this.props.entryPoint}.query`,
+      eventName: `${this.props.entryPoint} Query`,
+      query,
+    });
   }, 200);
 
   renderItem = ({resultObj, index, highlightedIndex, getItemProps}) => {
