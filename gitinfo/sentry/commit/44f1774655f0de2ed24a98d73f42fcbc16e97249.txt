commit 44f1774655f0de2ed24a98d73f42fcbc16e97249
Author: David Cramer <dcramer@gmail.com>
Date:   Tue Sep 1 11:26:22 2015 -0700

    Dont enforce .js check on single frame stack validation

diff --git a/src/sentry/interfaces/stacktrace.py b/src/sentry/interfaces/stacktrace.py
index 5b2e4cf758..7cab40b3fd 100644
--- a/src/sentry/interfaces/stacktrace.py
+++ b/src/sentry/interfaces/stacktrace.py
@@ -501,8 +501,8 @@ class Stacktrace(Interface):
         stack_invalid = (
             len(frames) == 1 and frames[0].lineno == 1
             and frames[0].function in ('?', None) and frames[0].is_url()
-            and not frames[0].filename.endswith('.js')
         )
+
         if stack_invalid:
             return []
 
diff --git a/tests/sentry/interfaces/test_stacktrace.py b/tests/sentry/interfaces/test_stacktrace.py
index f56e6ae9ce..f5d40baf91 100644
--- a/tests/sentry/interfaces/test_stacktrace.py
+++ b/tests/sentry/interfaces/test_stacktrace.py
@@ -278,19 +278,6 @@ class StacktraceTest(TestCase):
         result = interface.get_hash()
         assert result != []
 
-    def test_get_hash_does_not_discard_js_frames(self):
-        interface = Stacktrace.to_python({
-            'frames': [{
-                'context_line': 'function foo() {}',
-                'lineno': 1,
-                'abs_path': 'http://example.com/foo.js',
-                'filename': 'foo.js',
-                'function': '?',
-            }],
-        })
-        result = interface.get_hash()
-        assert result != []
-
     @mock.patch('sentry.interfaces.stacktrace.Stacktrace.get_stacktrace')
     def test_to_string_returns_stacktrace(self, get_stacktrace):
         event = mock.Mock(spec=Event())
