commit ba0b38ab6264af87a151828674c8ef0f22a05489
Author: Nick <me@nickbelzer.me>
Date:   Tue Mar 3 20:08:18 2020 +0100

    fix(ui): StackedBarChart Marker 24h display (#17428)
    
    Changes the format string used by momentjs to display the label for
    markers in the StackedBarChart to be a 24h equivalent version when the
    preference for 24h time format is set by the user.
    
    Fixes GH-16897

diff --git a/src/sentry/static/sentry/app/components/stackedBarChart.jsx b/src/sentry/static/sentry/app/components/stackedBarChart.jsx
index 896901084d..152c787b05 100644
--- a/src/sentry/static/sentry/app/components/stackedBarChart.jsx
+++ b/src/sentry/static/sentry/app/components/stackedBarChart.jsx
@@ -183,7 +183,8 @@ class StackedBarChart extends React.Component {
 
   timeLabelAsFull(point) {
     const timeMoment = moment(point.x * 1000);
-    return timeMoment.format('lll');
+    const format = this.use24Hours() ? 'MMM D, YYYY HH:mm' : 'lll';
+    return timeMoment.format(format);
   }
 
   getTimeLabel(point) {
@@ -209,7 +210,7 @@ class StackedBarChart extends React.Component {
   }
 
   renderMarker(marker, index, pointWidth) {
-    const timeLabel = moment(marker.x * 1000).format('lll');
+    const timeLabel = this.timeLabelAsFull(marker);
     const title = (
       <div style={{width: '130px'}}>
         {marker.label}
diff --git a/tests/js/spec/components/stackedBarChart.spec.jsx b/tests/js/spec/components/stackedBarChart.spec.jsx
index 89836a38e3..339958d893 100644
--- a/tests/js/spec/components/stackedBarChart.spec.jsx
+++ b/tests/js/spec/components/stackedBarChart.spec.jsx
@@ -61,4 +61,22 @@ describe('StackedBarChart', function() {
       expect(columns.at(2).text()).toEqual('last seen');
     });
   });
+  describe('functions', function() {
+    it('creates an AM/PM time label if use24Hours is disabled', function() {
+      const marker = {x: 1439776800, className: 'first-seen', label: 'first seen'};
+
+      const wrapper = shallow(<StackedBarChart />);
+      wrapper.instance().use24Hours = () => false;
+
+      expect(wrapper.instance().timeLabelAsFull(marker)).toMatch(/[A|P]M/);
+    });
+    it('creates a 24h time label if use24Hours is enabled', function() {
+      const marker = {x: 1439776800, className: 'first-seen', label: 'first seen'};
+
+      const wrapper = shallow(<StackedBarChart />);
+      wrapper.instance().use24Hours = () => true;
+
+      expect(wrapper.instance().timeLabelAsFull(marker)).not.toMatch(/[A|P]M/);
+    });
+  });
 });
