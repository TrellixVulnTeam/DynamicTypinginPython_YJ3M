commit 5e725a9d7b6133f59fe719899971f053c03b03fa
Author: Jess MacQueen <jessmacqueen@gmail.com>
Date:   Thu May 31 13:55:07 2018 -0700

    feat(integrations): Validate external issue ids when linking

diff --git a/src/sentry/api/endpoints/group_integration_details.py b/src/sentry/api/endpoints/group_integration_details.py
index bb317c7b71..c29d868f69 100644
--- a/src/sentry/api/endpoints/group_integration_details.py
+++ b/src/sentry/api/endpoints/group_integration_details.py
@@ -66,14 +66,18 @@ class GroupIntegrationDetailsEndpoint(GroupEndpoint):
             return Response(
                 {'detail': 'This feature is not supported for this integration.'}, status=400)
 
-        # TODO(jess): some validation from provider to ensure this
-        # issue id is valid and also maybe to fetch the title/description
-        # should go here
+        installation = integration.get_installation()
+        try:
+            data = installation.get_issue(external_issue_id)
+        except IntegrationError as exc:
+            return Response({'detail': exc.message}, status=400)
 
         external_issue = ExternalIssue.objects.get_or_create(
             organization_id=organization_id,
             integration_id=integration.id,
             key=external_issue_id,
+            title=data.get('title'),
+            description=data.get('description'),
         )[0]
 
         try:
diff --git a/src/sentry/integrations/example/integration.py b/src/sentry/integrations/example/integration.py
index 0243186f62..c5ce801196 100644
--- a/src/sentry/integrations/example/integration.py
+++ b/src/sentry/integrations/example/integration.py
@@ -55,6 +55,13 @@ class ExampleIntegration(Integration, IssueSyncMixin):
             'description': 'This is a test external issue description',
         }
 
+    def get_issue(self, issue_id):
+        return {
+            'key': issue_id,
+            'title': 'This is a test external issue title',
+            'description': 'This is a test external issue description',
+        }
+
 
 class ExampleIntegrationProvider(IntegrationProvider):
     """
diff --git a/src/sentry/integrations/issues.py b/src/sentry/integrations/issues.py
index 3bf3ccc35e..08c4c0eb0d 100644
--- a/src/sentry/integrations/issues.py
+++ b/src/sentry/integrations/issues.py
@@ -79,3 +79,21 @@ class IssueSyncMixin(object):
         >>>     }
         """
         raise NotImplementedError
+
+    def get_issue(self, issue_id, **kwargs):
+        """
+        Get an issue via the provider's API and return the issue key,
+        title and description.
+
+        Should also handle API client exceptions and reraise as an
+        IntegrationError (using the `message_from_error` helper).
+
+        >>> def get_issue(self, data, **kwargs):
+        >>>     resp = self.get_client().get_issue(issue_id)
+        >>>     return {
+        >>>         'key': resp['id'],
+        >>>         'title': resp['title'],
+        >>>         'description': resp['description'],
+        >>>     }
+        """
+        raise NotImplementedError
diff --git a/src/sentry/integrations/jira/integration.py b/src/sentry/integrations/jira/integration.py
index d430178257..a41d9ca8a3 100644
--- a/src/sentry/integrations/jira/integration.py
+++ b/src/sentry/integrations/jira/integration.py
@@ -114,6 +114,7 @@ class JiraIntegration(Integration, IssueSyncMixin):
         client = self.get_client()
         issue = client.get_issue(issue_id)
         return {
+            'key': issue_id,
             'title': issue['fields']['summary'],
             'description': issue['fields']['description'],
         }
diff --git a/tests/sentry/api/endpoints/test_group_integration_details.py b/tests/sentry/api/endpoints/test_group_integration_details.py
index c260c4ab53..9080145f16 100644
--- a/tests/sentry/api/endpoints/test_group_integration_details.py
+++ b/tests/sentry/api/endpoints/test_group_integration_details.py
@@ -104,6 +104,8 @@ class GroupIntegrationDetailsTest(APITestCase):
             integration_id=integration.id,
             organization_id=org.id,
         )
+        assert external_issue.title == 'This is a test external issue title'
+        assert external_issue.description == 'This is a test external issue description'
         assert GroupLink.objects.filter(
             linked_type=GroupLink.LinkedType.issue,
             group_id=group.id,
