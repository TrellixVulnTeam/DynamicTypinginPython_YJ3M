commit c92942351b3c4e37e3e4a7dcb70fa87021a21f03
Author: Billy Vong <billyvg@users.noreply.github.com>
Date:   Mon Mar 12 12:32:20 2018 -0700

    feat(ui): Add toasts when join/leaving teams (#7557)

diff --git a/src/sentry/static/sentry/app/views/settings/project/projectTeams.jsx b/src/sentry/static/sentry/app/views/settings/project/projectTeams.jsx
index 9c2d07dd9d..20ab7f7eae 100644
--- a/src/sentry/static/sentry/app/views/settings/project/projectTeams.jsx
+++ b/src/sentry/static/sentry/app/views/settings/project/projectTeams.jsx
@@ -3,6 +3,12 @@ import PropTypes from 'prop-types';
 import React from 'react';
 import createReactClass from 'create-react-class';
 
+import {
+  addErrorMessage,
+  addLoadingMessage,
+  addSuccessMessage,
+  removeIndicator,
+} from '../../../actionCreators/indicator';
 import {t} from '../../../locale';
 import ApiMixin from '../../../mixins/apiMixin';
 import AsyncView from '../../asyncView';
@@ -11,7 +17,6 @@ import Confirm from '../../../components/confirm';
 import DropdownAutoComplete from '../../../components/dropdownAutoComplete';
 import DropdownButton from '../../../components/dropdownButton';
 import EmptyMessage from '../components/emptyMessage';
-import IndicatorStore from '../../../stores/indicatorStore';
 import Link from '../../../components/link';
 import Panel from '../components/panel';
 import PanelBody from '../components/panelBody';
@@ -43,20 +48,22 @@ const TeamRow = createReactClass({
   handleRemove() {
     if (this.state.loading) return;
 
-    let loadingIndicator = IndicatorStore.add(t('Saving changes..'));
+    let loadingIndicator = addLoadingMessage(t('Saving changes...'));
     let {orgId, projectId, team} = this.props;
     this.api.request(`/projects/${orgId}/${projectId}/teams/${team.slug}/`, {
       method: 'DELETE',
       success: (d, _, jqXHR) => {
         this.props.onRemove();
-        IndicatorStore.remove(loadingIndicator);
+        addSuccessMessage(t(`#${team.slug} has been removed from project`));
+        removeIndicator(loadingIndicator);
       },
       error: () => {
         this.setState({
           error: true,
           loading: false,
         });
-        IndicatorStore.remove(loadingIndicator);
+        removeIndicator(loadingIndicator);
+        addErrorMessage(t(`Unable to remove #${team.slug} from project`));
       },
     });
   },
@@ -135,20 +142,22 @@ class ProjectTeams extends AsyncView {
 
     let team = this.state.allTeams.find(tm => tm.id === selection.value);
 
-    let loadingIndicator = IndicatorStore.add(t('Saving changes..'));
+    let loadingIndicator = addLoadingMessage(t('Saving changes...'));
     let {orgId, projectId} = this.props.params;
     this.api.request(`/projects/${orgId}/${projectId}/teams/${team.slug}/`, {
       method: 'POST',
       success: (d, _, jqXHR) => {
         this.handleAddedTeam(team);
-        IndicatorStore.remove(loadingIndicator);
+        addSuccessMessage(t(`#${team.slug} has been added to project`));
+        removeIndicator(loadingIndicator);
       },
       error: () => {
         this.setState({
           error: true,
           loading: false,
         });
-        IndicatorStore.remove(loadingIndicator);
+        addErrorMessage(t(`Unable to add #${team.slug} to project`));
+        removeIndicator(loadingIndicator);
       },
     });
   };
diff --git a/src/sentry/static/sentry/app/views/settings/team/allTeamsRow.jsx b/src/sentry/static/sentry/app/views/settings/team/allTeamsRow.jsx
index 6fa20991ce..26625f03cf 100644
--- a/src/sentry/static/sentry/app/views/settings/team/allTeamsRow.jsx
+++ b/src/sentry/static/sentry/app/views/settings/team/allTeamsRow.jsx
@@ -1,14 +1,14 @@
+import {Box} from 'grid-emotion';
+import {Link} from 'react-router';
 import PropTypes from 'prop-types';
 import React from 'react';
 import createReactClass from 'create-react-class';
-import {Link} from 'react-router';
-import {Box} from 'grid-emotion';
 
+import {addErrorMessage, addSuccessMessage} from '../../../actionCreators/indicator';
+import {joinTeam, leaveTeam} from '../../../actionCreators/teams';
+import {t, tct} from '../../../locale';
 import ApiMixin from '../../../mixins/apiMixin';
-import AlertActions from '../../../actions/alertActions';
 import PanelItem from '../components/panelItem';
-import {joinTeam, leaveTeam} from '../../../actionCreators/teams';
-import {t} from '../../../locale';
 
 // TODO(dcramer): this isnt great UX
 
@@ -33,6 +33,8 @@ const AllTeamsRow = createReactClass({
   },
 
   joinTeam() {
+    let {organization, team} = this.props;
+
     this.setState({
       loading: true,
     });
@@ -40,8 +42,8 @@ const AllTeamsRow = createReactClass({
     joinTeam(
       this.api,
       {
-        orgId: this.props.organization.slug,
-        teamId: this.props.team.slug,
+        orgId: organization.slug,
+        teamId: team.slug,
       },
       {
         success: () => {
@@ -49,22 +51,30 @@ const AllTeamsRow = createReactClass({
             loading: false,
             error: false,
           });
+          addSuccessMessage(
+            tct('You have joined [team]', {
+              team: `#${team.slug}`,
+            })
+          );
         },
         error: () => {
           this.setState({
             loading: false,
             error: true,
           });
-          AlertActions.addAlert({
-            message: t('There was an error while trying to join the team.'),
-            type: 'error',
-          });
+          addErrorMessage(
+            tct('Unable to join [team]', {
+              team: `#${team.slug}`,
+            })
+          );
         },
       }
     );
   },
 
   leaveTeam() {
+    let {organization, team} = this.props;
+
     this.setState({
       loading: true,
     });
@@ -72,8 +82,8 @@ const AllTeamsRow = createReactClass({
     leaveTeam(
       this.api,
       {
-        orgId: this.props.organization.slug,
-        teamId: this.props.team.slug,
+        orgId: organization.slug,
+        teamId: team.slug,
       },
       {
         success: () => {
@@ -81,16 +91,22 @@ const AllTeamsRow = createReactClass({
             loading: false,
             error: false,
           });
+          addSuccessMessage(
+            tct('You have left [team]', {
+              team: `#${team.slug}`,
+            })
+          );
         },
         error: () => {
           this.setState({
             loading: false,
             error: true,
           });
-          AlertActions.addAlert({
-            message: t('There was an error while trying to leave the team.'),
-            type: 'error',
-          });
+          addErrorMessage(
+            tct('Unable to leave [team]', {
+              team: `#${team.slug}`,
+            })
+          );
         },
       }
     );
