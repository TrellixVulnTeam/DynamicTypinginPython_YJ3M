commit 677cac5883898dfc70e4f61bd9e05d337235bcd6
Author: David Cramer <dcramer@gmail.com>
Date:   Thu Nov 6 16:47:19 2014 -0800

    Improve member settings page

diff --git a/src/sentry/templates/sentry/organization-member-settings.html b/src/sentry/templates/sentry/organization-member-settings.html
index dd73fe09e4..81d1ec790a 100644
--- a/src/sentry/templates/sentry/organization-member-settings.html
+++ b/src/sentry/templates/sentry/organization-member-settings.html
@@ -17,7 +17,7 @@
     {{ form|as_crispy_errors }}
 
     <fieldset>
-      <legend>{% trans "Details" %}</legend>
+      <h2>{% trans "Basics" %}</h2>
 
       <div class="control-group">
         <label>{% trans "User" %}</label>
@@ -41,14 +41,50 @@
     </fieldset>
 
     <fieldset>
-      <legend>{% trans "Access" %}</legend>
+      <h2>{% trans "Teams" %}</h2>
 
       {{ form.has_global_access|as_crispy_field }}
-      {{ form.teams|as_crispy_field }}
+
+      <fieldset class="team-choices">
+        {% for team_id, team_name in form.teams.field.choices %}
+          <div class="control-group">
+            <div class="controls">
+              <label class="checkbox">
+                <input type="checkbox" name="teams" value="{{ team_id }}"
+                       class="checkboxinput">
+                  {{ team_name }}
+                </label>
+            </div>
+          </div>
+        {% endfor %}
+      </fieldset>
     </fieldset>
 
     <div class="form-actions">
       <button type="submit" class="btn btn-primary">{% trans "Save Changes" %}</button>
     </div>
   </form>
+
+  <script>
+  $(function(){
+    var selectedTeams = [];
+    $('#id_has_global_access').change(function(){
+      var $this = $(this);
+      var checked = $this.is(':checked');
+      var selector = $('.team-choices input[type=checkbox]');
+
+      if (checked) {
+        selectedTeams = $('.team-choices input[type=checkbox]:checked').slice(0, selector.length);
+        selector.prop('checked', true);
+      } else {
+        selector.prop('checked', false);
+        $(selectedTeams).prop('checked', true);
+        selectedTeams = [];
+      }
+
+      $('.team-choices').prop('disabled', checked);
+
+    }).change();
+  });
+  </script>
 {% endblock %}
diff --git a/src/sentry/web/frontend/organization_member_settings.py b/src/sentry/web/frontend/organization_member_settings.py
index 81555058a5..4dec17aa67 100644
--- a/src/sentry/web/frontend/organization_member_settings.py
+++ b/src/sentry/web/frontend/organization_member_settings.py
@@ -8,16 +8,43 @@ from django.utils.translation import ugettext_lazy as _
 
 from sentry.models import (
     AuditLogEntry, AuditLogEntryEvent, OrganizationMember,
-    OrganizationMemberType
+    OrganizationMemberType, Team
 )
 from sentry.web.frontend.base import OrganizationView
 
 
 class EditOrganizationMemberForm(forms.ModelForm):
+    type = forms.TypedChoiceField(label=_('Membership Type'), choices=(
+        (OrganizationMemberType.MEMBER, _('Member')),
+        (OrganizationMemberType.ADMIN, _('Admin')),
+    ), coerce=int)
+    has_global_access = forms.BooleanField(
+        label=_('This member should have access to all teams within the organization.'),
+        required=False,
+    )
+    teams = forms.ModelMultipleChoiceField(
+        queryset=Team.objects.none(),
+        widget=forms.CheckboxSelectMultiple(),
+        required=False,
+    )
+
     class Meta:
         fields = ('type', 'has_global_access', 'teams')
         model = OrganizationMember
 
+    def __init__(self, *args, **kwargs):
+        super(EditOrganizationMemberForm, self).__init__(*args, **kwargs)
+
+        self.fields['teams'].queryset = Team.objects.filter(
+            organization=self.instance.organization,
+        )
+
+    def save(self, *args, **kwargs):
+        print self.cleaned_data
+        if self.cleaned_data['has_global_access']:
+            self.cleaned_data['teams'] = []
+        return super(EditOrganizationMemberForm, self).save(*args, **kwargs)
+
 
 class OrganizationMemberSettingsView(OrganizationView):
     required_access = OrganizationMemberType.ADMIN
diff --git a/tests/sentry/web/frontend/test_organization_member_settings.py b/tests/sentry/web/frontend/test_organization_member_settings.py
index 18626c5878..629be94793 100644
--- a/tests/sentry/web/frontend/test_organization_member_settings.py
+++ b/tests/sentry/web/frontend/test_organization_member_settings.py
@@ -39,7 +39,7 @@ class OrganizationMemberSettingsTest(TestCase):
         assert resp.context['member'] == member
         assert resp.context['form']
 
-    def test_basic_saving(self):
+    def test_setting_global_access(self):
         organization = self.create_organization(name='foo', owner=self.user)
         team_1 = self.create_team(name='foo', organization=organization)
         team_2 = self.create_team(name='bar', organization=organization)
@@ -59,6 +59,7 @@ class OrganizationMemberSettingsTest(TestCase):
 
         resp = self.client.post(path, {
             'has_global_access': True,
+            'teams': [team_1.id, team_2.id],
             'type': OrganizationMemberType.ADMIN,
         })
 
@@ -69,6 +70,53 @@ class OrganizationMemberSettingsTest(TestCase):
         assert member.has_global_access is True
         assert member.type == OrganizationMemberType.ADMIN
 
+        assert member.teams.count() == 0
+
+        ale = AuditLogEntry.objects.get(
+            organization=organization,
+            event=AuditLogEntryEvent.MEMBER_EDIT,
+        )
+
+        assert ale.actor == self.user
+        assert ale.target_object == member.id
+        assert ale.target_user == user
+        assert ale.data
+
+    def test_setting_teams(self):
+        organization = self.create_organization(name='foo', owner=self.user)
+        team_1 = self.create_team(name='foo', organization=organization)
+        team_2 = self.create_team(name='bar', organization=organization)
+
+        user = self.create_user('bar@example.com')
+        member = OrganizationMember.objects.create(
+            organization=organization,
+            user=user,
+            type=OrganizationMemberType.MEMBER,
+            has_global_access=False,
+        )
+
+        path = reverse('sentry-organization-member-settings',
+                       args=[organization.id, member.id])
+
+        self.login_as(self.user)
+
+        resp = self.client.post(path, {
+            'teams': [team_1.id, team_2.id],
+            'type': OrganizationMemberType.ADMIN,
+        })
+
+        assert resp.status_code == 302
+
+        member = OrganizationMember.objects.get(id=member.id)
+
+        assert member.has_global_access is False
+        assert member.type == OrganizationMemberType.ADMIN
+
+        teams = list(member.teams.all())
+        assert team_1 in teams
+        assert team_2 in teams
+        assert len(teams) == 2
+
         ale = AuditLogEntry.objects.get(
             organization=organization,
             event=AuditLogEntryEvent.MEMBER_EDIT,
