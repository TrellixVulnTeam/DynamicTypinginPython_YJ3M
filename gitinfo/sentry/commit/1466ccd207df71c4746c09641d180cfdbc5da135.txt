commit 1466ccd207df71c4746c09641d180cfdbc5da135
Author: Mark Story <mark@sentry.io>
Date:   Thu Oct 17 10:53:57 2019 -0400

    fix(discover2) Fix errors when using p95 with no conditions (#15117)
    
    The transaction only field aliases were not correctly accounted for when
    choosing a dataset.

diff --git a/src/sentry/utils/snuba.py b/src/sentry/utils/snuba.py
index 3ddbdc6539..90d4a1e61e 100644
--- a/src/sentry/utils/snuba.py
+++ b/src/sentry/utils/snuba.py
@@ -400,12 +400,16 @@ def detect_dataset(query_args, aliased_conditions=False):
     for field in query_args.get("aggregations") or []:
         if len(field) != 3:
             continue
+        # Check field or fields
         if isinstance(field[1], six.string_types) and field[1] in transaction_fields:
             return Dataset.Transactions
         if isinstance(field[1], (list, tuple)):
             is_transaction = [column for column in field[1] if column in transaction_fields]
             if is_transaction:
                 return Dataset.Transactions
+        # Check for transaction only field aliases
+        if isinstance(field[2], six.string_types) and field[2] in ("p95", "p75"):
+            return Dataset.Transactions
 
     for field in query_args.get("groupby") or []:
         if field in transaction_fields:
diff --git a/tests/sentry/utils/test_snuba.py b/tests/sentry/utils/test_snuba.py
index ed2a66a99c..c59d2200c1 100644
--- a/tests/sentry/utils/test_snuba.py
+++ b/tests/sentry/utils/test_snuba.py
@@ -286,10 +286,10 @@ class TransformAliasesAndQueryTransactionsTest(TestCase):
     """
 
     @patch("sentry.utils.snuba.raw_query")
-    def test_selected_columns_aliasing(self, mock_query):
+    def test_selected_columns_aliasing_in_function(self, mock_query):
         mock_query.return_value = {
-            "meta": [{"name": "transaction_name"}, {"name": "duration"}],
-            "data": [{"transaction_name": "api.do_things", "duration": 200}],
+            "meta": [{"name": "transaction"}, {"name": "duration"}],
+            "data": [{"transaction": "api.do_things", "duration": 200}],
         }
         transform_aliases_and_query(
             selected_columns=["transaction", "transaction.duration"],
@@ -316,6 +316,37 @@ class TransformAliasesAndQueryTransactionsTest(TestCase):
             orderby=None,
         )
 
+    @patch("sentry.utils.snuba.raw_query")
+    def test_selected_columns_opaque_string(self, mock_query):
+        mock_query.return_value = {
+            "meta": [{"name": "transaction"}, {"name": "p95"}],
+            "data": [{"transaction": "api.do_things", "p95": 200}],
+        }
+        transform_aliases_and_query(
+            selected_columns=["transaction"],
+            aggregations=[
+                ["quantileTiming(0.95)(duration)", "", "p95"],
+                ["uniq", "transaction", "uniq_transaction"],
+            ],
+            filter_keys={"project_id": [self.project.id]},
+        )
+        mock_query.assert_called_with(
+            selected_columns=["transaction_name"],
+            aggregations=[
+                ["quantileTiming(0.95)(duration)", "", "p95"],
+                ["uniq", "transaction_name", "uniq_transaction"],
+            ],
+            filter_keys={"project_id": [self.project.id]},
+            dataset=Dataset.Transactions,
+            arrayjoin=None,
+            end=None,
+            start=None,
+            conditions=None,
+            groupby=None,
+            having=None,
+            orderby=None,
+        )
+
     @patch("sentry.utils.snuba.raw_query")
     def test_orderby_aliasing(self, mock_query):
         mock_query.return_value = {
