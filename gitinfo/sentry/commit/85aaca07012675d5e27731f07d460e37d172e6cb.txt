commit 85aaca07012675d5e27731f07d460e37d172e6cb
Author: David Cramer <dcramer@gmail.com>
Date:   Sun Apr 27 12:55:28 2014 -0700

    Remove project attribute from data API

diff --git a/src/sentry/coreapi.py b/src/sentry/coreapi.py
index 98cef6affd..fe6d7961cc 100644
--- a/src/sentry/coreapi.py
+++ b/src/sentry/coreapi.py
@@ -222,22 +222,6 @@ def safely_load_json_string(json_string):
     return dict((smart_str(k), v) for k, v in obj.iteritems())
 
 
-def ensure_valid_project_id(desired_project, data, client=None):
-    # Confirm they're using either the master key, or their specified project
-    # matches with the signed project.
-    if desired_project and data.get('project'):
-        if str(data.get('project')) not in [str(desired_project.id), desired_project.slug]:
-            logger.info(
-                'Project ID mismatch: %s != %s', desired_project.id, desired_project.slug,
-                **client_metadata(client))
-            raise APIForbidden('Invalid credentials')
-        data['project'] = desired_project.id
-    elif not desired_project:
-        data['project'] = 1
-    elif not data.get('project'):
-        data['project'] = desired_project.id
-
-
 def process_data_timestamp(data, current_datetime=None):
     if is_float(data['timestamp']):
         try:
@@ -270,7 +254,8 @@ def process_data_timestamp(data, current_datetime=None):
 
 
 def validate_data(project, data, client=None):
-    ensure_valid_project_id(project, data, client=client)
+    # TODO(dcramer): move project out of the data packet
+    data['project'] = project.id
 
     if not data.get('message'):
         data['message'] = '<no message value>'
diff --git a/tests/sentry/coreapi/tests.py b/tests/sentry/coreapi/tests.py
index 78ae72931c..105b94fcac 100644
--- a/tests/sentry/coreapi/tests.py
+++ b/tests/sentry/coreapi/tests.py
@@ -161,13 +161,6 @@ class ValidateDataTest(BaseAPITest):
         })
         assert data['event_id'] == uuid4.return_value.hex
 
-    def test_invalid_project_id(self):
-        with self.assertRaises(APIForbidden):
-            validate_data(self.project, {
-                'project': self.project.id + 1,
-                'message': 'foo',
-            })
-
     def test_unknown_attribute(self):
         data = validate_data(self.project, {
             'message': 'foo',
@@ -237,13 +230,6 @@ class ValidateDataTest(BaseAPITest):
         })
         assert data['level'] == 40
 
-    def test_project_slug(self):
-        data = validate_data(self.project, {
-            'project': self.project.slug,
-            'message': 'foo',
-        })
-        assert data['project'] == self.project.id
-
     def test_tags_as_string(self):
         data = validate_data(self.project, {
             'message': 'foo',
