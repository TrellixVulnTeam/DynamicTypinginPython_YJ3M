commit c1863cc7abb5d512aa5cbc80f1d75bbc0c81bb69
Author: David Cramer <dcramer@gmail.com>
Date:   Wed Apr 18 13:30:50 2018 -0700

    fix(settings): Correct subject template/prefix configuration
    
    - subjectPrefix was being referenced as subjectTemplate
    - fixed docstrings on subjectPrefix and subjectTemplate

diff --git a/src/sentry/static/sentry/app/data/forms/projectAlerts.jsx b/src/sentry/static/sentry/app/data/forms/projectAlerts.jsx
index ea4677c678..d129cffcf2 100644
--- a/src/sentry/static/sentry/app/data/forms/projectAlerts.jsx
+++ b/src/sentry/static/sentry/app/data/forms/projectAlerts.jsx
@@ -15,9 +15,9 @@ export const fields = {
 
     // additional data/props that is related to rendering of form field rather than data
     label: t('Subject Template'),
-    placeholder: 'e.g. [${tag:environment}]',
+    placeholder: 'e.g. $shortID - $title',
     help: t(
-      'The email subject to use (excluding the prefix) for individual alerts. Usable variables include: $project, $title, $shortID, and ${tag:key}, such as ${tag:environment} or ${tag:release}.'
+      'The email subject to use (excluding the prefix) for individual alerts. Usable variables include: $title, $shortID, $projectID, $orgID, and ${tag:key}, such as ${tag:environment} or ${tag:release}.'
     ),
   },
   digestsMinDelay: {
diff --git a/src/sentry/static/sentry/app/data/forms/projectGeneralSettings.jsx b/src/sentry/static/sentry/app/data/forms/projectGeneralSettings.jsx
index 87970a8922..ecdf9b2575 100644
--- a/src/sentry/static/sentry/app/data/forms/projectGeneralSettings.jsx
+++ b/src/sentry/static/sentry/app/data/forms/projectGeneralSettings.jsx
@@ -76,10 +76,11 @@ export const fields = {
     help: t('Update the team that owns this project'),
   },
 
-  subjectTemplate: {
-    name: 'subjectTemplate',
+  subjectPrefix: {
+    name: 'subjectPrefix',
     type: 'string',
     label: t('Subject Prefix'),
+    placeholder: t('e.g. [my-org]'),
     help: t('Choose a custom prefix for emails from this project'),
   },
 
diff --git a/src/sentry/static/sentry/app/views/projectGeneralSettings.jsx b/src/sentry/static/sentry/app/views/projectGeneralSettings.jsx
index 80e61bd75e..b70530470f 100644
--- a/src/sentry/static/sentry/app/views/projectGeneralSettings.jsx
+++ b/src/sentry/static/sentry/app/views/projectGeneralSettings.jsx
@@ -255,7 +255,7 @@ class ProjectGeneralSettings extends AsyncView {
           <JsonForm
             {...jsonFormProps}
             title={t('Email')}
-            fields={[fields.subjectTemplate]}
+            fields={[fields.subjectPrefix]}
           />
 
           <JsonForm
diff --git a/tests/js/setup.js b/tests/js/setup.js
index 8d12ec1da1..305a48eec2 100644
--- a/tests/js/setup.js
+++ b/tests/js/setup.js
@@ -654,6 +654,7 @@ window.TestStubs = {
   ProjectDetails: params => {
     return TestStubs.Project({
       subjectTemplate: '[$project] ${tag:level}: $title',
+      subjectPrefix: '[my-org]',
       digestsMinDelay: 5,
       digestsMaxDelay: 60,
       dataScrubber: false,
diff --git a/tests/js/spec/views/__snapshots__/projectAlertSettings.spec.jsx.snap b/tests/js/spec/views/__snapshots__/projectAlertSettings.spec.jsx.snap
index b2efdecb5a..24797030ab 100644
--- a/tests/js/spec/views/__snapshots__/projectAlertSettings.spec.jsx.snap
+++ b/tests/js/spec/views/__snapshots__/projectAlertSettings.spec.jsx.snap
@@ -77,10 +77,10 @@ exports[`ProjectAlertSettings render() renders 1`] = `
         fields={
           Array [
             Object {
-              "help": "The email subject to use (excluding the prefix) for individual alerts. Usable variables include: $project, $title, $shortID, and \${tag:key}, such as \${tag:environment} or \${tag:release}.",
+              "help": "The email subject to use (excluding the prefix) for individual alerts. Usable variables include: $title, $shortID, $projectID, $orgID, and \${tag:key}, such as \${tag:environment} or \${tag:release}.",
               "label": "Subject Template",
               "name": "subjectTemplate",
-              "placeholder": "e.g. [\${tag:environment}]",
+              "placeholder": "e.g. $shortID - $title",
               "type": "string",
             },
           ]
@@ -179,6 +179,7 @@ exports[`ProjectAlertSettings render() renders 1`] = `
             "ssn",
           ],
           "slug": "project-slug",
+          "subjectPrefix": "[my-org]",
           "subjectTemplate": "[$project] \${tag:level}: $title",
           "teams": Array [],
           "verifySSL": true,
diff --git a/tests/js/spec/views/__snapshots__/projectOwnership.spec.jsx.snap b/tests/js/spec/views/__snapshots__/projectOwnership.spec.jsx.snap
index dfc01fd94c..963ed79ffb 100644
--- a/tests/js/spec/views/__snapshots__/projectOwnership.spec.jsx.snap
+++ b/tests/js/spec/views/__snapshots__/projectOwnership.spec.jsx.snap
@@ -110,6 +110,7 @@ exports[`ProjectTeamsSettings render() renders 1`] = `
                 "ssn",
               ],
               "slug": "project-slug",
+              "subjectPrefix": "[my-org]",
               "subjectTemplate": "[$project] \${tag:level}: $title",
               "teams": Array [],
               "verifySSL": true,
diff --git a/tests/js/spec/views/groupDetails/__snapshots__/actions.spec.jsx.snap b/tests/js/spec/views/groupDetails/__snapshots__/actions.spec.jsx.snap
index 6af27a6f19..c7b8401fb5 100644
--- a/tests/js/spec/views/groupDetails/__snapshots__/actions.spec.jsx.snap
+++ b/tests/js/spec/views/groupDetails/__snapshots__/actions.spec.jsx.snap
@@ -90,6 +90,7 @@ exports[`GroupActions render() renders correctly 1`] = `
           "ssn",
         ],
         "slug": "project",
+        "subjectPrefix": "[my-org]",
         "subjectTemplate": "[$project] \${tag:level}: $title",
         "teams": Array [],
         "verifySSL": true,
diff --git a/tests/js/spec/views/projectGeneralSettings.spec.jsx b/tests/js/spec/views/projectGeneralSettings.spec.jsx
index 06e239c7d7..81216fed0a 100644
--- a/tests/js/spec/views/projectGeneralSettings.spec.jsx
+++ b/tests/js/spec/views/projectGeneralSettings.spec.jsx
@@ -58,9 +58,7 @@ describe('projectGeneralSettings', function() {
 
     expect(wrapper.find('Input[name="name"]').prop('value')).toBe('Project Name');
     expect(wrapper.find('Input[name="slug"]').prop('value')).toBe('project-slug');
-    expect(wrapper.find('Input[name="subjectTemplate"]').prop('value')).toBe(
-      '[$project] ${tag:level}: $title'
-    );
+    expect(wrapper.find('Input[name="subjectPrefix"]').prop('value')).toBe('[my-org]');
     expect(wrapper.find('RangeSlider[name="resolveAge"]').prop('value')).toBe(48);
     expect(wrapper.find('Switch[name="dataScrubber"]').prop('isActive')).toBeFalsy();
     expect(
