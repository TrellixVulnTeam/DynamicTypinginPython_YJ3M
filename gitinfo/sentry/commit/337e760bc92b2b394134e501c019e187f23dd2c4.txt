commit 337e760bc92b2b394134e501c019e187f23dd2c4
Author: Priscila Oliveira <priscilawebdev@gmail.com>
Date:   Thu May 7 10:17:57 2020 +0200

    ref(ui): Improvemented breadcrumb full text search (#18643)

diff --git a/src/sentry/static/sentry/app/components/events/interfaces/breadcrumbsV2/breadcrumbData/breadcrumbDataException.tsx b/src/sentry/static/sentry/app/components/events/interfaces/breadcrumbsV2/breadcrumbData/breadcrumbDataException.tsx
index f68c6cface..4daf126acc 100644
--- a/src/sentry/static/sentry/app/components/events/interfaces/breadcrumbsV2/breadcrumbData/breadcrumbDataException.tsx
+++ b/src/sentry/static/sentry/app/components/events/interfaces/breadcrumbsV2/breadcrumbData/breadcrumbDataException.tsx
@@ -15,6 +15,7 @@ type Props = {
 const BreadcrumbDataException = ({breadcrumb}: Props) => {
   const {data} = breadcrumb;
   const dataValue = data?.value;
+
   return (
     <BreadcrumbDataSummary kvData={omit(data, ['type', 'value'])}>
       {data?.type &&
diff --git a/src/sentry/static/sentry/app/components/events/interfaces/breadcrumbsV2/breadcrumbs.tsx b/src/sentry/static/sentry/app/components/events/interfaces/breadcrumbsV2/breadcrumbs.tsx
index c606f22337..a6999eb385 100644
--- a/src/sentry/static/sentry/app/components/events/interfaces/breadcrumbsV2/breadcrumbs.tsx
+++ b/src/sentry/static/sentry/app/components/events/interfaces/breadcrumbsV2/breadcrumbs.tsx
@@ -1,5 +1,6 @@
 import React from 'react';
 import styled from '@emotion/styled';
+import pick from 'lodash/pick';
 import omit from 'lodash/omit';
 
 import EventDataSection from 'app/components/events/eventDataSection';
@@ -11,6 +12,7 @@ import space from 'app/styles/space';
 import SearchBar from 'app/components/searchBar';
 import Button from 'app/components/button';
 import {IconWarning} from 'app/icons/iconWarning';
+import {defined} from 'app/utils';
 
 import {
   Breadcrumb,
@@ -24,8 +26,8 @@ import getBreadcrumbTypeDetails from './getBreadcrumbTypeDetails';
 import {FilterGroupType} from './breadcrumbFilter/types';
 import BreadcrumbsListHeader from './breadcrumbsListHeader';
 import BreadcrumbsListBody from './breadcrumbsListBody';
-import BreadcrumbIcon from './breadcrumbIcon';
 import BreadcrumbLevel from './breadcrumbLevel';
+import BreadcrumbIcon from './breadcrumbIcon';
 
 const MAX_CRUMBS_WHEN_COLLAPSED = 10;
 
@@ -39,6 +41,7 @@ type State = {
   searchTerm: string;
   breadcrumbs: Array<BreadcrumbWithDetails>;
   filteredByFilter: Array<BreadcrumbWithDetails>;
+  filteredByCustomSearch: Array<BreadcrumbWithDetails>;
   filteredBreadcrumbs: Array<BreadcrumbWithDetails>;
   filterGroups: BreadcrumbFilterGroups;
 };
@@ -57,6 +60,7 @@ class BreadcrumbsContainer extends React.Component<Props, State> {
     searchTerm: '',
     breadcrumbs: [],
     filteredByFilter: [],
+    filteredByCustomSearch: [],
     filteredBreadcrumbs: [],
     filterGroups: [],
   };
@@ -114,6 +118,7 @@ class BreadcrumbsContainer extends React.Component<Props, State> {
       breadcrumbs: convertedBreadcrumbs,
       filteredBreadcrumbs: convertedBreadcrumbs,
       filteredByFilter: convertedBreadcrumbs,
+      filteredByCustomSearch: convertedBreadcrumbs,
       filterGroups: [
         ...breadcrumbTypes
           // in case of a breadcrumb of type BreadcrumbType.DEFAULT, moves it to the last position of the array
@@ -239,20 +244,22 @@ class BreadcrumbsContainer extends React.Component<Props, State> {
     );
   };
 
-  handleFilterBySearchTerm = (value = '') => {
-    const {filteredByFilter} = this.state;
+  handleFilterBySearchTerm = (value: string) => {
+    const {filteredByCustomSearch} = this.state;
 
     const searchTerm = value.toLocaleLowerCase();
 
-    const filteredBreadcrumbs = filteredByFilter.filter(
-      item =>
-        !!['category', 'message', 'level', 'timestamp'].find(prop => {
-          const searchValue = item[prop];
-          if (searchValue) {
-            return searchValue.toLowerCase().indexOf(searchTerm) !== -1;
-          }
+    const filteredBreadcrumbs = filteredByCustomSearch.filter(obj =>
+      Object.keys(
+        pick(obj, ['type', 'category', 'message', 'level', 'timestamp', 'data'])
+      ).some(key => {
+        if (!defined(obj[key]) || !String(obj[key]).trim()) {
           return false;
-        })
+        }
+        return JSON.stringify(obj[key])
+          .toLocaleLowerCase()
+          .includes(searchTerm);
+      })
     );
 
     this.setState({
