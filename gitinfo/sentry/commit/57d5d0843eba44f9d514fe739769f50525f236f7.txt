commit 57d5d0843eba44f9d514fe739769f50525f236f7
Author: David Cramer <dcramer@gmail.com>
Date:   Mon Jun 26 17:16:30 2017 -0700

    ui: improve form context behavior (+ tests)

diff --git a/src/sentry/static/sentry/app/components/forms/formField.jsx b/src/sentry/static/sentry/app/components/forms/formField.jsx
index 15a8f26dc6..1749921102 100644
--- a/src/sentry/static/sentry/app/components/forms/formField.jsx
+++ b/src/sentry/static/sentry/app/components/forms/formField.jsx
@@ -1,4 +1,5 @@
 import React from 'react';
+import idx from 'idx';
 
 import {defined} from '../../utils';
 
@@ -50,8 +51,8 @@ export default class FormField extends React.Component {
     if (defined(props.value)) {
       return props.value;
     }
-    if (props.name && form && defined(form.data[props.name])) {
-      return form.data[props.name];
+    if (form) {
+      return idx(form, _ => _.data[props.name]);
     }
     return props.defaultValue || '';
   }
@@ -62,7 +63,7 @@ export default class FormField extends React.Component {
     if (defined(props.error)) {
       return props.error;
     }
-    return (props.name && form && form.errors[props.name]) || null;
+    return idx(form, _ => _.errors[props.name]) || null;
   }
 
   getId() {
@@ -82,6 +83,10 @@ export default class FormField extends React.Component {
     );
   }
 
+  getField() {
+    throw new Error('Must be implemented by child.');
+  }
+
   render() {
     let className = this.getClassName();
     let error = this.getError();
diff --git a/src/sentry/static/sentry/app/components/forms/inputField.jsx b/src/sentry/static/sentry/app/components/forms/inputField.jsx
index 281670330d..71b8b0f399 100644
--- a/src/sentry/static/sentry/app/components/forms/inputField.jsx
+++ b/src/sentry/static/sentry/app/components/forms/inputField.jsx
@@ -52,4 +52,8 @@ export default class InputField extends FormField {
   getClassName() {
     return 'control-group';
   }
+
+  getType() {
+    throw new Error('Must be implemented by child.');
+  }
 }
diff --git a/tests/js/spec/components/forms/__snapshots__/textField.spec.jsx.snap b/tests/js/spec/components/forms/__snapshots__/textField.spec.jsx.snap
new file mode 100644
index 0000000000..3f77cebda6
--- /dev/null
+++ b/tests/js/spec/components/forms/__snapshots__/textField.spec.jsx.snap
@@ -0,0 +1,41 @@
+// Jest Snapshot v1, https://goo.gl/fbAQLP
+
+exports[`TextField render() renders with form context 1`] = `
+<div
+  className="control-group"
+>
+  <div
+    className="controls"
+  >
+    <input
+      className="form-control"
+      disabled={false}
+      id="id-fieldName"
+      onChange={[Function]}
+      required={false}
+      type="text"
+      value=""
+    />
+  </div>
+</div>
+`;
+
+exports[`TextField render() renders without form context 1`] = `
+<div
+  className="control-group"
+>
+  <div
+    className="controls"
+  >
+    <input
+      className="form-control"
+      disabled={false}
+      id="id-fieldName"
+      onChange={[Function]}
+      required={false}
+      type="text"
+      value=""
+    />
+  </div>
+</div>
+`;
diff --git a/tests/js/spec/components/forms/textField.spec.jsx b/tests/js/spec/components/forms/textField.spec.jsx
new file mode 100644
index 0000000000..27721c10ab
--- /dev/null
+++ b/tests/js/spec/components/forms/textField.spec.jsx
@@ -0,0 +1,28 @@
+import React from 'react';
+import {shallow} from 'enzyme';
+import toJson from 'enzyme-to-json';
+
+import {TextField} from 'app/components/forms';
+
+describe('TextField', function() {
+  describe('render()', function() {
+    it('renders without form context', function() {
+      let wrapper = shallow(<TextField name="fieldName" />);
+      expect(toJson(wrapper)).toMatchSnapshot();
+    });
+
+    it('renders with form context', function() {
+      let wrapper = shallow(<TextField name="fieldName" />, {
+        context: {
+          form: {
+            data: {
+              fieldName: 'fieldValue'
+            },
+            errors: {}
+          }
+        }
+      });
+      expect(toJson(wrapper)).toMatchSnapshot();
+    });
+  });
+});
