commit 16bcc2f0840c28916dadc4b9f1b466a8e45cb308
Author: Dan Fuller <dfuller@sentry.io>
Date:   Tue Nov 12 18:06:18 2019 -0800

    fix: Fix `get_participants` to use `__in` correctly.
    
    This will break in some cases in Django 1.9, since it no longer implicitly assumes `__in`.

diff --git a/src/sentry/models/groupsubscription.py b/src/sentry/models/groupsubscription.py
index 68b39a48bd..57a4975112 100644
--- a/src/sentry/models/groupsubscription.py
+++ b/src/sentry/models/groupsubscription.py
@@ -135,7 +135,7 @@ class GroupSubscriptionManager(BaseManager):
         users = {
             user.id: user
             for user in User.objects.filter(
-                sentry_orgmember_set__teams=group.project.teams.all(), is_active=True
+                sentry_orgmember_set__teams__in=group.project.teams.all(), is_active=True
             )
         }
 
diff --git a/tests/sentry/models/test_groupsubscription.py b/tests/sentry/models/test_groupsubscription.py
index 9f83e53583..e696b8ada0 100644
--- a/tests/sentry/models/test_groupsubscription.py
+++ b/tests/sentry/models/test_groupsubscription.py
@@ -84,7 +84,9 @@ class GetParticipantsTest(TestCase):
     def test_simple(self):
         org = self.create_organization()
         team = self.create_team(organization=org)
-        project = self.create_project(teams=[team], organization=org)
+        # Include an extra team here to prove the subquery works
+        team_2 = self.create_team(organization=org)
+        project = self.create_project(teams=[team, team_2], organization=org)
         group = self.create_group(project=project)
         user = self.create_user("foo@example.com")
         user2 = self.create_user("bar@example.com")
