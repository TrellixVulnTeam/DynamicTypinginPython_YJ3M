commit e30138f7797b406b43e8c15963ed1c0c108b434e
Author: Billy Vong <billyvg@users.noreply.github.com>
Date:   Thu Jul 26 16:27:31 2018 -0700

    feat(ui): Add <PanelChart> (#9129)
    
    This wraps content (hopefully a chart) with a Panel and has the option to
    display a legend.

diff --git a/docs-ui/components/panelChart.stories.js b/docs-ui/components/panelChart.stories.js
new file mode 100644
index 0000000000..c784d6de82
--- /dev/null
+++ b/docs-ui/components/panelChart.stories.js
@@ -0,0 +1,75 @@
+import React from 'react';
+
+import {storiesOf} from '@storybook/react';
+import {withInfo} from '@storybook/addon-info';
+
+import AreaChart from 'app/components/charts/areaChart';
+import PanelChart from 'app/components/charts/panelChart';
+import PieChart from 'app/components/charts/pieChart';
+
+// eslint-disable-next-line
+storiesOf('Charts/PanelChart', module).add(
+  'default',
+  withInfo('PanelChart')(() => {
+    const browsers = [
+      {
+        name: 'Chrome',
+        value: 3500,
+      },
+      {
+        name: 'Firefox',
+        value: 650,
+      },
+      {
+        name: 'Safari',
+        value: 250,
+      },
+    ];
+    const errorSeries = [
+      {
+        name: 'Handled',
+        data: [150, 300, 250, 600, 342, 800, 750],
+      },
+      {
+        name: 'Unhandled',
+        data: [50, 200, 150, 300, 102, 283, 341],
+      },
+    ];
+    const previousPeriodData = {
+      name: 'Previous',
+      data: [650, 300, 350, 300, 400, 250, 200],
+    };
+
+    return (
+      <React.Fragment>
+        <PanelChart
+          title="Pie Chart"
+          startDate={new Date()}
+          name="Browsers"
+          series={browsers}
+        >
+          <PieChart data={browsers} />
+          {({series, title, ...props}) => (
+            <PieChart {...props} name={title} data={series} />
+          )}
+        </PanelChart>
+
+        <PanelChart
+          title="Area Chart"
+          startDate={new Date()}
+          name="Browsers"
+          series={errorSeries}
+          previousPeriod={previousPeriodData}
+        >
+          {({title, previousPeriod, ...props}) => (
+            <AreaChart
+              {...props}
+              lines={(previousPeriod && [previousPeriod]) || []}
+              name={title}
+            />
+          )}
+        </PanelChart>
+      </React.Fragment>
+    );
+  })
+);
diff --git a/src/sentry/static/sentry/app/components/charts/panelChart/index.jsx b/src/sentry/static/sentry/app/components/charts/panelChart/index.jsx
new file mode 100644
index 0000000000..31ad046e9e
--- /dev/null
+++ b/src/sentry/static/sentry/app/components/charts/panelChart/index.jsx
@@ -0,0 +1,55 @@
+import PropTypes from 'prop-types';
+import React from 'react';
+import styled from 'react-emotion';
+
+import {Panel, PanelHeader} from 'app/components/panels';
+
+import Legend from './legend';
+
+const PanelChart = styled(
+  class PanelChart extends React.Component {
+    static propTypes = {
+      /**
+       * Can be either a react element or a render prop that receives
+       * the same props passed to `PanelChart`
+       */
+      children: PropTypes.oneOfType([PropTypes.func, PropTypes.node]),
+      showLegend: PropTypes.bool,
+      title: PropTypes.node,
+      ...Legend.propTypes,
+    };
+
+    static defaultProps = {
+      showLegend: true,
+    };
+
+    render() {
+      const {title, children, className, showLegend, ...props} = this.props;
+
+      return (
+        <Panel className={className}>
+          {(title || showLegend) && (
+            <PanelHeader>
+              {title && <span>{title}</span>}
+              {showLegend && <Legend {...props} />}
+            </PanelHeader>
+          )}
+          {children && (
+            <ChartWrapper>
+              {typeof children === 'function' ? children({title, ...props}) : children}
+            </ChartWrapper>
+          )}
+        </Panel>
+      );
+    }
+  }
+)`
+  flex: 1;
+  overflow: hidden; /* This is required to have flex containers resize */
+`;
+
+export default PanelChart;
+
+const ChartWrapper = styled('div')`
+  overflow: hidden; /* This is required to have flex containers resize */
+`;
diff --git a/src/sentry/static/sentry/app/components/charts/panelChart/legend.jsx b/src/sentry/static/sentry/app/components/charts/panelChart/legend.jsx
new file mode 100644
index 0000000000..9c47b77e86
--- /dev/null
+++ b/src/sentry/static/sentry/app/components/charts/panelChart/legend.jsx
@@ -0,0 +1,78 @@
+import {Flex} from 'grid-emotion';
+import PropTypes from 'prop-types';
+import React from 'react';
+import styled from 'react-emotion';
+
+import CircleIndicator from 'app/components/circleIndicator';
+import space from 'app/styles/space';
+import theme from 'app/utils/theme';
+
+const Legend = styled(
+  class Legend extends React.Component {
+    static propTypes = {
+      series: PropTypes.arrayOf(
+        PropTypes.shape({
+          name: PropTypes.string,
+          data: PropTypes.arrayOf(PropTypes.number),
+        })
+      ),
+
+      /**
+       * Previous Period
+       */
+      previousPeriod: PropTypes.shape({
+        name: PropTypes.string,
+        data: PropTypes.arrayOf(PropTypes.number),
+      }),
+    };
+
+    render() {
+      let {className, series, previousPeriod} = this.props;
+
+      return (
+        <Flex className={className}>
+          {previousPeriod && (
+            <SeriesGroup>
+              <DottedLineIndicator />
+              <SeriesName>{previousPeriod.name}</SeriesName>
+            </SeriesGroup>
+          )}
+
+          {series &&
+            series.map((serie, i) => {
+              return (
+                <SeriesGroup key={serie.name}>
+                  <CircleIndicator color={theme.charts.colors[i]} />
+                  <SeriesName>{serie.name}</SeriesName>
+                </SeriesGroup>
+              );
+            })}
+        </Flex>
+      );
+    }
+  }
+)`
+  flex: 1;
+  justify-content: flex-end;
+  align-items: center;
+`;
+
+const SeriesGroup = styled(Flex)`
+  margin-left: ${space(1)};
+  align-items: center;
+`;
+
+const SeriesName = styled('span')`
+  margin-left: ${space(0.5)};
+  text-transform: none;
+  font-weight: 400;
+`;
+
+const DottedLineIndicator = styled('span')`
+  display: flex;
+  width: 20px;
+  border: 1px dashed ${p => p.theme.charts.previousPeriod};
+  align-items: center;
+`;
+
+export default Legend;
diff --git a/tests/js/spec/components/charts/panelChart/index.spec.jsx b/tests/js/spec/components/charts/panelChart/index.spec.jsx
new file mode 100644
index 0000000000..9602d966ba
--- /dev/null
+++ b/tests/js/spec/components/charts/panelChart/index.spec.jsx
@@ -0,0 +1,94 @@
+import React from 'react';
+import {mount} from 'enzyme';
+
+import PanelChart from 'app/components/charts/panelChart';
+
+describe('PanelChart', function() {
+  describe('renders', function() {
+    let wrapper;
+    beforeAll(function() {
+      wrapper = mount(
+        <PanelChart
+          title="Panel Chart"
+          series={[
+            {
+              name: 'Foo',
+              data: [1, 2, 3, 4],
+            },
+            {
+              name: 'Bar',
+              data: [2, 3, 4, 5],
+            },
+          ]}
+          previousPeriod={{
+            name: 'Previous',
+            data: [1, 2, 3, 4],
+          }}
+        >
+          <div />
+        </PanelChart>,
+        TestStubs.routerContext()
+      );
+    });
+
+    it('has title', function() {
+      expect(wrapper.find('PanelHeader').contains('Panel Chart')).toBe(true);
+    });
+
+    it('has right legend items', function() {
+      // Currently only support 1 line
+      expect(wrapper.find('DottedLineIndicator')).toHaveLength(1);
+      expect(
+        wrapper
+          .find('SeriesName')
+          .at(0)
+          .prop('children')
+      ).toBe('Previous');
+
+      expect(wrapper.find('CircleIndicator')).toHaveLength(2);
+      expect(
+        wrapper
+          .find('SeriesName')
+          .at(1)
+          .prop('children')
+      ).toBe('Foo');
+      expect(
+        wrapper
+          .find('SeriesName')
+          .at(2)
+          .prop('children')
+      ).toBe('Bar');
+    });
+
+    it('renders child', function() {
+      expect(wrapper.find('ChartWrapper')).toHaveLength(1);
+    });
+  });
+
+  it('shows legend without a title', function() {
+    let wrapper = mount(
+      <PanelChart
+        series={[
+          {
+            name: 'Foo',
+            data: [1, 2, 3, 4],
+          },
+          {
+            name: 'Bar',
+            data: [2, 3, 4, 5],
+          },
+        ]}
+        previousPeriod={{
+          name: 'Previous',
+          data: [1, 2, 3, 4],
+        }}
+      >
+        <div />
+      </PanelChart>,
+      TestStubs.routerContext()
+    );
+
+    // This has 2 results because of the Legend class and styled-component wrapper
+    expect(wrapper.find('Legend')).toHaveLength(2);
+  });
+});
