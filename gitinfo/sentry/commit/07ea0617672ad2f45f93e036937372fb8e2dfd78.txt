commit 07ea0617672ad2f45f93e036937372fb8e2dfd78
Author: David Cramer <dcramer@gmail.com>
Date:   Wed Nov 23 22:18:36 2011 -0800

    More reorganizing message -> event

diff --git a/sentry/models.py b/sentry/models.py
index 9bf0f3a3ad..ab5897a418 100644
--- a/sentry/models.py
+++ b/sentry/models.py
@@ -257,8 +257,8 @@ class Event(MessageBase):
     @models.permalink
     def get_absolute_url(self):
         if self.project_id:
-            return ('sentry-group-message', [], {'group_id': self.pk, 'message_id': self.pk, 'project_id': self.project_id})
-        return ('sentry-group-message', [], {'group_id': self.pk, 'message_id': self.pk})
+            return ('sentry-group-event', [], {'group_id': self.pk, 'event_id': self.pk, 'project_id': self.project_id})
+        return ('sentry-group-event', [], {'group_id': self.pk, 'event_id': self.pk})
 
     @cached_property
     def request(self):
diff --git a/sentry/static/scripts/global.js b/sentry/static/scripts/global.js
index c5e5e1558a..369a316c0a 100644
--- a/sentry/static/scripts/global.js
+++ b/sentry/static/scripts/global.js
@@ -106,7 +106,7 @@ var Sentry = {};
                     var data = el[1];
                     $('#group_' + id).remove();
                     if (!remove) {
-                        $('#message_list').prepend(data.html);
+                        $('#event_list').prepend(data.html);
                         $('#group_' + id).addClass('fresh');
                     }
                 }
@@ -151,7 +151,7 @@ var Sentry = {};
                     var data = el[1];
                     if ((row = $('#group_' + id))) {
                         row.remove();
-                        $('#message_list').prepend(data.html);
+                        $('#event_list').prepend(data.html);
                         if (row.attr('data-sentry-count') != data.count) {
                             $('#group_' + id).addClass('fresh');
                             var url = Sentry.options.apiUrl + '?' + $.param({
@@ -164,17 +164,17 @@ var Sentry = {};
                             });
                         }
                     } else {
-                        $('#message_list').prepend(data.html);
+                        $('#event_list').prepend(data.html);
                         $('#group_' + id).addClass('fresh');
                         Sentry.notifications.show({'type': 'html', 'url': url});
                     }
                 }
-                $('#message_list .fresh').css('background-color', '#ccc').animate({backgroundColor: '#fff'}, 1200, function() {
+                $('#event_list .fresh').css('background-color', '#ccc').animate({backgroundColor: '#fff'}, 1200, function() {
                     $(this).removeClass('fresh');
                 });
                 // make sure we limit the number shown
                 var count = 0;
-                $('#message_list li').each(function(){
+                $('#event_list li').each(function(){
                     count++;
                     if (count > 50) {
                         $(this).remove();
diff --git a/sentry/templates/sentry/groups/details.html b/sentry/templates/sentry/groups/details.html
index f7ffb1231f..f4f099ab7c 100644
--- a/sentry/templates/sentry/groups/details.html
+++ b/sentry/templates/sentry/groups/details.html
@@ -40,7 +40,7 @@
 {% endblock %}
 
 {% block main %}
-    <ul class="messages" id="message_list">
+    <ul class="messages" id="event_list">
         <li class="{% cycle 'row1' 'row2' %} level-{{ group.level }} active" id="group_{{ group.pk }}" data-sentry-count="{{ group.times_seen }}">
             <span class="count">{{ group.times_seen|small_count }}</span>
             <h3>{{ group.message_top }}</h3>
@@ -65,7 +65,7 @@
 
     <ul class="nav" id="group_nav">
         <li{% ifequal page 'details' %} class="active"{% endifequal %}><a href="{% url sentry-group group.project_id group.pk %}">Details</a></li>
-        <li{% ifequal page 'messages' %} class="active"{% endifequal %}><a href="{% url sentry-group-messages group.project_id group.pk %}">Messages</a></li>
+        <li{% ifequal page 'events' %} class="active"{% endifequal %}><a href="{% url sentry-group-events group.project_id group.pk %}">Messages</a></li>
         {% for label, link, is_active in group|get_panels:request %}
             <li{% if is_active %} class="active"{% endif %}><a href="{{ link }}">{{ label }}</a></li>
         {% endfor %}
diff --git a/sentry/templates/sentry/groups/message.html b/sentry/templates/sentry/groups/event.html
similarity index 98%
rename from sentry/templates/sentry/groups/message.html
rename to sentry/templates/sentry/groups/event.html
index ff1440d236..a74a9c3df7 100644
--- a/sentry/templates/sentry/groups/message.html
+++ b/sentry/templates/sentry/groups/event.html
@@ -6,7 +6,7 @@
 {% block title %}{{ group.error }} | {{ block.super }}{% endblock %}
 
 {% block inner %}
-    <ul class="messages" id="message_list">
+    <ul class="messages" id="event_list">
         <li class="row1 active level-{{ message.level }}" data-sentry-count="{{ message.times_seen }}">
             <h3>
                 {{ message.message_top }}
diff --git a/sentry/templates/sentry/groups/message_list.html b/sentry/templates/sentry/groups/event_list.html
similarity index 61%
rename from sentry/templates/sentry/groups/message_list.html
rename to sentry/templates/sentry/groups/event_list.html
index 23075c3836..3584007381 100644
--- a/sentry/templates/sentry/groups/message_list.html
+++ b/sentry/templates/sentry/groups/event_list.html
@@ -5,20 +5,20 @@
 
 {% block inner %}
     <h2>{% trans "Message List" %}</h2>
-    {% paginate message_list from request as message_list per_page 15 %}
+    {% paginate event_list from request as event_list per_page 15 %}
     <div class="paging-wrap">
         <div class="clearfix">
-            {{ message_list.paging }}
+            {{ event_list.paging }}
         </div>
     </div>
-    <ul class="messages" id="message_list">
-        {% for event in message_list.objects %}
+    <ul class="messages" id="event_list">
+        {% for event in event_list.objects %}
             {% include "sentry/partial/_event.html" %}
         {% endfor %}
     </ul>
     <div class="paging-wrap">
         <div class="clearfix">
-            {{ message_list.paging }}
+            {{ event_list.paging }}
         </div>
     </div>
 {% endblock %}
\ No newline at end of file
diff --git a/sentry/templates/sentry/groups/group_list.html b/sentry/templates/sentry/groups/group_list.html
index 445f851794..6aa5e9919f 100644
--- a/sentry/templates/sentry/groups/group_list.html
+++ b/sentry/templates/sentry/groups/group_list.html
@@ -24,7 +24,7 @@
 {% endblock %}
 
 {% block main %}
-    {% paginate message_list from request as message_list per_page 15 %}
+    {% paginate event_list from request as event_list per_page 15 %}
 
     <div class="paging-wrap">
         <div class="clearfix">
@@ -47,25 +47,25 @@
                 </div>
             </form>
             <a id="clear_feed" href="{% url sentry-ajax %}?op=clear" onclick="Sentry.stream.clear();return false;" class="realtime realtime-pause">Clear Feed</a>
-            {{ message_list.paging }}
+            {{ event_list.paging }}
         </div>
     </div>
 
-    {% if message_list.objects %}
-        <ul class="messages" id="message_list">
-            {% for group, priority in message_list.objects|with_priority %}
+    {% if event_list.objects %}
+        <ul class="messages" id="event_list">
+            {% for group, priority in event_list.objects|with_priority %}
                 {% include "sentry/partial/_group.html" %}
             {% endfor %}
         </ul>
     {% else %}
-        <ul class="messages" id="message_list">
+        <ul class="messages" id="event_list">
             <li class="no-messages" id="no_messages">{% trans "No messages match your filters." %}</li>
         </ul>
     {% endif %}
 
     <div class="paging-wrap">
         <div class="clearfix">
-            {{ message_list.paging }}
+            {{ event_list.paging }}
         </div>
     </div>
 {% endblock %}
diff --git a/sentry/templates/sentry/partial/_event.html b/sentry/templates/sentry/partial/_event.html
index 6677d09967..efd7e289d1 100644
--- a/sentry/templates/sentry/partial/_event.html
+++ b/sentry/templates/sentry/partial/_event.html
@@ -1,25 +1,21 @@
 {% load sentry_helpers %}
 
 <li class="{% cycle 'row1' 'row2' %} level-{{ event.level }}{% if priority %} priority-{{ priority }}{% endif %}" id="message_{{ event.pk }}" data-sentry-count="{{ event.times_seen }}">
-    <h3><a href="{% url sentry-group-message event.project_id event.group_id event.pk %}">
-        {{ event.message_top }}
-        {% if event.url %}
-             on {{ event.url }}
-        {% endif %}
-    </a></h3>
+    <span class="count">{{ event.times_seen }}</span>
+    <h3><a href="{% url sentry-group-event event.project_id event.group_id event.pk %}">{% if event.view %}{{ event.view }}{% else %}{{ event.message_top|truncatechars:100 }}{% endif %}</a></h3>
+    <span class="last_seen">{{ event.last_seen|timesince }}</span>
     <span class="status status-{{ event.status }}">{{ event.get_status_display }}</span>
-    <p class="message">
-        {% if event.message_id %}
-            <span class="tag tag-id">{{ event.message_id }}</span>
-        {% endif %}
+    <p class="message" title="{{ event.message }}">
         <span class="tag tag-level">{{ event.get_level_display }}</span>
-        <span class="tag tag-server">{{ event.server_name }}</span>
+        <span class="tag tag-logger">{{ event.logger }}</span>
         {% with event.get_version as version %}
             {% if version %}
                 <span class="tag tag-version">{{ version.0 }} {{ version.1 }}</span>
             {% endif %}
         {% endwith %}
-        <span class="last_seen">{{ event.datetime|timesince }}</span>
+        {% for tag in event|get_tags:request %}<span class="tag">{{ tag }}</span> {% endfor %}
+        {{ event.error }}
     </p>
-    <a href="{% url sentry-group-message event.project_id event.group_id event.pk %}" class="row_link"></a>
+    <a href="{% url sentry-group-event event.project_id event.group_id event.pk %}" class="row_link"></a>
 </li>
+
diff --git a/sentry/templates/sentry/search.html b/sentry/templates/sentry/search.html
index dc8cd6644b..e34a7d56be 100644
--- a/sentry/templates/sentry/search.html
+++ b/sentry/templates/sentry/search.html
@@ -6,7 +6,7 @@
 {% block heading %}{% trans "Search" %}{% endblock %}
 
 {% block main %}
-    {% paginate message_list from request as message_list per_page 15 %}
+    {% paginate event_list from request as event_list per_page 15 %}
 
     <div class="paging-wrap">
         <div class="clearfix">
@@ -19,25 +19,25 @@
                 </select>
                 </div>
             </form>
-            {{ message_list.paging }}
+            {{ event_list.paging }}
         </div>
     </div>
 
-    {% if message_list.objects %}
-        <ul class="messages" id="message_list">
-            {% for group, priority in message_list.objects|with_priority %}
+    {% if event_list.objects %}
+        <ul class="messages" id="event_list">
+            {% for group, priority in event_list.objects|with_priority %}
                 {% include "sentry/partial/_group.html" %}
             {% endfor %}
         </ul>
     {% else %}
-        <ul class="messages" id="message_list">
+        <ul class="messages" id="event_list">
             <li class="no-messages" id="no_messages">{% trans "No messages match your query." %}</li>
         </ul>
     {% endif %}
 
     <div class="paging-wrap">
         <div class="clearfix">
-            {{ message_list.paging }}
+            {{ event_list.paging }}
         </div>
     </div>
 {% endblock %}
diff --git a/sentry/web/frontend/groups.py b/sentry/web/frontend/groups.py
index e335f4dd03..5cbf07d356 100644
--- a/sentry/web/frontend/groups.py
+++ b/sentry/web/frontend/groups.py
@@ -28,7 +28,7 @@ from sentry.web.helpers import render_to_response, get_search_query_set, \
     get_project_list
 
 uuid_re = re.compile(r'^[a-z0-9]{32}$', re.I)
-message_re = re.compile(r'^(?P<message_id>[a-z0-9]{32})\$(?P<checksum>[a-z0-9]{32})$', re.I)
+event_re = re.compile(r'^(?P<event_id>[a-z0-9]{32})\$(?P<checksum>[a-z0-9]{32})$', re.I)
 
 @login_required
 @csrf_exempt
@@ -49,25 +49,25 @@ def ajax_handler(request):
         offset = 0
         limit = settings.MESSAGES_PER_PAGE
 
-        message_list = Group.objects.filter(Q(project__in=projects.keys()) | Q(project__isnull=True))
+        event_list = Group.objects.filter(Q(project__in=projects.keys()) | Q(project__isnull=True))
 
         for filter_ in filters:
             if not filter_.is_set():
                 continue
-            message_list = filter_.get_query_set(message_list)
+            event_list = filter_.get_query_set(event_list)
 
         sort = request.GET.get('sort')
         if sort == 'date':
-            message_list = message_list.order_by('-last_seen')
+            event_list = event_list.order_by('-last_seen')
         elif sort == 'new':
-            message_list = message_list.order_by('-first_seen')
+            event_list = event_list.order_by('-first_seen')
         elif sort == 'freq':
-            message_list = message_list.order_by('-times_seen')
+            event_list = event_list.order_by('-times_seen')
         elif sort and sort.startswith('accel_'):
-            message_list = Group.objects.get_accelerated(message_list, minutes=int(sort.split('_', 1)[1]))
+            event_list = Group.objects.get_accelerated(event_list, minutes=int(sort.split('_', 1)[1]))
         else:
             sort = 'priority'
-            message_list = message_list.order_by('-score', '-last_seen')
+            event_list = event_list.order_by('-score', '-last_seen')
 
         data = [
             (m.pk, {
@@ -82,7 +82,7 @@ def ajax_handler(request):
                 'logger': m.logger,
                 'count': m.times_seen,
                 'priority': p,
-            }) for m, p in with_priority(message_list[offset:limit])]
+            }) for m, p in with_priority(event_list[offset:limit])]
 
         response = HttpResponse(json.dumps(data))
         response['Content-Type'] = 'application/json'
@@ -122,9 +122,9 @@ def ajax_handler(request):
     def clear(request):
         projects = get_project_list(request.user, 'change_message_status')
 
-        message_list = Group.objects.filter(Q(project__in=projects.keys()) | Q(project__isnull=True))
+        event_list = Group.objects.filter(Q(project__in=projects.keys()) | Q(project__isnull=True))
 
-        message_list.update(status=1)
+        event_list.update(status=1)
 
         if not request.is_ajax():
             return HttpResponseRedirect(request.META.get('HTTP_REFERER') or reverse('sentry'))
@@ -165,49 +165,49 @@ def search(request, project):
     has_search = bool(settings.SEARCH_ENGINE)
 
     if query:
-        result = message_re.match(query)
+        result = event_re.match(query)
         if result:
             # Forward to message if it exists
-            # message_id = result.group(1)
+            # event_id = result.group(1)
             checksum = result.group(2)
-            message_list = Group.objects.filter(checksum=checksum)
-            top_matches = message_list[:2]
+            event_list = Group.objects.filter(checksum=checksum)
+            top_matches = event_list[:2]
             if len(top_matches) == 0:
                 if not has_search:
                     return render_to_response('sentry/invalid_message_id.html')
                 else:
-                    message_list = get_search_query_set(query)
+                    event_list = get_search_query_set(query)
             elif len(top_matches) == 1:
                 return HttpResponseRedirect(top_matches[0].get_absolute_url())
         elif uuid_re.match(query):
             # Forward to message if it exists
             try:
-                message = Event.objects.get(message_id=query)
+                message = Event.objects.get(event_id=query)
             except Event.DoesNotExist:
                 if not has_search:
                     return render_to_response('sentry/invalid_message_id.html')
                 else:
-                    message_list = get_search_query_set(query)
+                    event_list = get_search_query_set(query)
             else:
                 return HttpResponseRedirect(message.get_absolute_url())
         elif not has_search:
             return render_to_response('sentry/invalid_message_id.html')
         else:
-            message_list = get_search_query_set(query)
+            event_list = get_search_query_set(query)
     else:
-        message_list = Group.objects.none()
+        event_list = Group.objects.none()
 
     sort = request.GET.get('sort')
     if sort == 'date':
-        message_list = message_list.order_by('-last_seen')
+        event_list = event_list.order_by('-last_seen')
     elif sort == 'new':
-        message_list = message_list.order_by('-first_seen')
+        event_list = event_list.order_by('-first_seen')
     else:
         sort = 'relevance'
 
     return render_to_response('sentry/search.html', {
         'project': project,
-        'message_list': message_list,
+        'event_list': event_list,
         'query': query,
         'sort': sort,
         'request': request,
@@ -228,7 +228,7 @@ def group_list(request, project):
     offset = (page - 1) * settings.MESSAGES_PER_PAGE
     limit = page * settings.MESSAGES_PER_PAGE
 
-    message_list = Group.objects.filter(project=project)
+    event_list = Group.objects.filter(project=project)
 
     # Filters only apply if we're not searching
     any_filter = False
@@ -236,20 +236,20 @@ def group_list(request, project):
         if not filter_.is_set():
             continue
         any_filter = True
-        message_list = filter_.get_query_set(message_list)
+        event_list = filter_.get_query_set(event_list)
 
     sort = request.GET.get('sort')
     if sort == 'date':
-        message_list = message_list.order_by('-last_seen')
+        event_list = event_list.order_by('-last_seen')
     elif sort == 'new':
-        message_list = message_list.order_by('-first_seen')
+        event_list = event_list.order_by('-first_seen')
     elif sort == 'freq':
-        message_list = message_list.order_by('-times_seen')
+        event_list = event_list.order_by('-times_seen')
     elif sort and sort.startswith('accel_'):
-        message_list = Group.objects.get_accelerated(message_list, minutes=int(sort.split('_', 1)[1]))
+        event_list = Group.objects.get_accelerated(event_list, minutes=int(sort.split('_', 1)[1]))
     else:
         sort = 'priority'
-        message_list = message_list.order_by('-score', '-last_seen')
+        event_list = event_list.order_by('-score', '-last_seen')
 
     today = datetime.datetime.now()
 
@@ -258,7 +258,7 @@ def group_list(request, project):
     return render_to_response('sentry/groups/group_list.html', {
         'project': project,
         'has_realtime': has_realtime,
-        'message_list': message_list[offset:limit],
+        'event_list': event_list[offset:limit],
         'today': today,
         'sort': sort,
         'any_filter': any_filter,
@@ -310,36 +310,36 @@ def group(request, project, group_id):
 
 @login_required
 @can_manage('read_message')
-def group_message_list(request, project, group_id):
+def group_event_list(request, project, group_id):
     group = get_object_or_404(Group, pk=group_id)
 
     if group.project and group.project != project:
-        return HttpResponseRedirect(reverse('sentry-group-messages', kwargs={'group_id': group.pk, 'project_id': group.project_id}))
+        return HttpResponseRedirect(reverse('sentry-group-events', kwargs={'group_id': group.pk, 'project_id': group.project_id}))
 
-    message_list = group.event_set.all().order_by('-datetime')
+    event_list = group.event_set.all().order_by('-datetime')
 
-    return render_to_response('sentry/groups/message_list.html', {
+    return render_to_response('sentry/groups/event_list.html', {
         'project': project,
         'group': group,
-        'message_list': message_list,
-        'page': 'messages',
+        'event_list': event_list,
+        'page': 'event_list',
         'request': request
     })
 
 @login_required
 @can_manage('read_message')
-def group_message_details(request, project, group_id, message_id):
+def group_event_details(request, project, group_id, event_id):
     group = get_object_or_404(Group, pk=group_id)
 
     if group.project and group.project != project:
-        return HttpResponseRedirect(reverse('sentry-group-message', kwargs={'group_id': group.pk, 'project_id': group.project_id, 'message_id': message_id}))
+        return HttpResponseRedirect(reverse('sentry-group-event', kwargs={'group_id': group.pk, 'project_id': group.project_id, 'event_id': event_id}))
 
-    event = get_object_or_404(group.event_set, pk=message_id)
+    event = get_object_or_404(group.event_set, pk=event_id)
 
 
-    return render_to_response('sentry/groups/message.html', {
+    return render_to_response('sentry/groups/event.html', {
         'project': project,
-        'page': 'messages',
+        'page': 'event_list',
         'group': group,
         'event': event,
         'interface_list': filter(None, [mark_safe(i.to_html(event) or '') for i in event.interfaces.itervalues()]),
diff --git a/sentry/web/urls.py b/sentry/web/urls.py
index bfb19a0cae..c7ee920fd2 100644
--- a/sentry/web/urls.py
+++ b/sentry/web/urls.py
@@ -35,15 +35,17 @@ urlpatterns = patterns('',
     # Legacy redirects
     # TODO:
 
+    url(r'^feeds/messages.xml$', feeds.MessageFeed(), name='sentry-feed-messages'),
+    url(r'^feeds/summaries.xml$', feeds.SummaryFeed(), name='sentry-feed-summaries'),
     url(r'^group/(?P<group_id>\d+)$', groups.group, name='sentry-group'),
-    url(r'^group/(?P<group_id>\d+)/messages$', groups.group_message_list, name='sentry-group-messages'),
-    url(r'^group/(?P<group_id>\d+)/messages/(?P<message_id>\d+)$', groups.group_message_details, name='sentry-group-message'),
+    url(r'^group/(?P<group_id>\d+)/messages$', groups.group_event_list, name='sentry-group-events'),
+    url(r'^group/(?P<group_id>\d+)/messages/(?P<event_id>\d+)$', groups.group_event_details, name='sentry-group-event'),
     url(r'^group/(?P<group_id>\d+)/actions/(?P<slug>[\w_-]+)', groups.group_plugin_action, name='sentry-group-plugin-action'),
 
     # Feeds
 
-    url(r'^feeds/messages.xml$', feeds.MessageFeed(), name='sentry-feed-messages'),
-    url(r'^feeds/summaries.xml$', feeds.SummaryFeed(), name='sentry-feed-summaries'),
+    url(r'^feeds/events.xml$', feeds.MessageFeed(), name='sentry-feed-events'),
+    url(r'^feeds/groups.xml$', feeds.SummaryFeed(), name='sentry-feed-groups'),
 
     # JS
 
@@ -71,8 +73,8 @@ urlpatterns = patterns('',
 
     url(r'^(?P<project_id>\d+)/group/(?P<group_id>\d+)$', groups.group, name='sentry-group'),
     url(r'^(?P<project_id>\d+)/group/(?P<group_id>\d+)/json$', groups.group_json, name='sentry-group-json'),
-    url(r'^(?P<project_id>\d+)/group/(?P<group_id>\d+)/events$', groups.group_message_list, name='sentry-group-messages'),
-    url(r'^(?P<project_id>\d+)/group/(?P<group_id>\d+)/events/(?P<message_id>\d+)$', groups.group_message_details, name='sentry-group-message'),
+    url(r'^(?P<project_id>\d+)/group/(?P<group_id>\d+)/events$', groups.group_event_list, name='sentry-group-events'),
+    url(r'^(?P<project_id>\d+)/group/(?P<group_id>\d+)/events/(?P<event_id>\d+)$', groups.group_event_details, name='sentry-group-event'),
     url(r'^(?P<project_id>\d+)/group/(?P<group_id>\d+)/actions/(?P<slug>[\w_-]+)', groups.group_plugin_action, name='sentry-group-plugin-action'),
 
     url(r'^(?P<project_id>\d+)/events$', events.event_list, name='sentry'),
diff --git a/tests/tests.py b/tests/tests.py
index aa188b3fbe..f979ed00a9 100644
--- a/tests/tests.py
+++ b/tests/tests.py
@@ -92,8 +92,8 @@ class SentryViewsTest(TestCase):
         resp = self.client.get(reverse('sentry', kwargs={'project_id': 1}) + '?sort=freq', follow=True)
         self.assertEquals(resp.status_code, 200)
         self.assertTemplateUsed(resp, 'sentry/groups/group_list.html')
-        self.assertEquals(len(resp.context['message_list']), 4)
-        group = resp.context['message_list'][0]
+        self.assertEquals(len(resp.context['event_list']), 4)
+        group = resp.context['event_list'][0]
         self.assertEquals(group.times_seen, 7)
         self.assertEquals(group.message, "'tuple' object has no attribute 'args'")
 
@@ -106,20 +106,20 @@ class SentryViewsTest(TestCase):
         group = Group.objects.get(pk=2)
         self.assertEquals(resp.context['group'], group)
 
-    def test_group_message_list(self):
+    def test_group_event_list(self):
         self.client.login(username='admin', password='admin')
-        resp = self.client.get(reverse('sentry-group-messages', args=[2]), follow=True)
+        resp = self.client.get(reverse('sentry-group-events', args=[2]), follow=True)
         self.assertEquals(resp.status_code, 200, resp.content)
-        self.assertTemplateUsed(resp, 'sentry/groups/message_list.html')
+        self.assertTemplateUsed(resp, 'sentry/groups/event_list.html')
         self.assertTrue('group' in resp.context)
         group = Group.objects.get(pk=2)
         self.assertEquals(resp.context['group'], group)
 
     def test_group_message_details(self):
         self.client.login(username='admin', password='admin')
-        resp = self.client.get(reverse('sentry-group-message', kwargs={'group_id': 2, 'message_id': 4}), follow=True)
+        resp = self.client.get(reverse('sentry-group-event', kwargs={'group_id': 2, 'event_id': 4}), follow=True)
         self.assertEquals(resp.status_code, 200, resp.content)
-        self.assertTemplateUsed(resp, 'sentry/groups/message.html')
+        self.assertTemplateUsed(resp, 'sentry/groups/event.html')
         self.assertTrue('group' in resp.context)
         group = Group.objects.get(pk=2)
         self.assertEquals(resp.context['group'], group)
@@ -494,10 +494,10 @@ class SentrySearchTest(TestCase):
             self.assertEquals(response.status_code, 200)
             self.assertTemplateUsed(response, 'sentry/search.html')
             context = response.context
-            self.assertTrue('message_list' in context)
-            self.assertEquals(len(context['message_list']), 2)
-            self.assertTrue(g1 in context['message_list'])
-            self.assertTrue(g2 in context['message_list'])
+            self.assertTrue('event_list' in context)
+            self.assertEquals(len(context['event_list']), 2)
+            self.assertTrue(g1 in context['event_list'])
+            self.assertTrue(g2 in context['event_list'])
 
 class DummyInterface(Interface):
     def __init__(self, baz):
