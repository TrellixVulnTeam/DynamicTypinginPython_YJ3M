commit 0062fe9a398c6b6f9e00b7802c1dd441a32badfb
Author: ckj <chriskjennings@gmail.com>
Date:   Thu Mar 24 16:30:05 2016 -0700

    Use KeyValueList to render data

diff --git a/src/sentry/static/sentry/app/components/events/interfaces/breadcrumbComponents/error.js b/src/sentry/static/sentry/app/components/events/interfaces/breadcrumbComponents/error.js
index b5a5a1fef1..e65a36bba6 100644
--- a/src/sentry/static/sentry/app/components/events/interfaces/breadcrumbComponents/error.js
+++ b/src/sentry/static/sentry/app/components/events/interfaces/breadcrumbComponents/error.js
@@ -1,26 +1,18 @@
 import React from 'react';
 
+import KeyValueList from '../keyValueList';
+
 function Error(props) {
   let {type, value} = props.data;
+
+  let list = [];
+  list.push(['type', type]);
+  list.push(['message', value]);
+
   return (
     <div>
       <h5>Error</h5>
-      <table className="table key-value">
-        <tbody>
-          <tr>
-            <td className="key">type</td>
-            <td>
-              <pre>{type}</pre>
-            </td>
-          </tr>
-          <tr>
-            <td className="key">message</td>
-            <td>
-              <pre>{value}</pre>
-            </td>
-          </tr>
-        </tbody>
-      </table>
+      <KeyValueList data={list} isSorted={false} />
     </div>
   );
 }
diff --git a/src/sentry/static/sentry/app/components/events/interfaces/breadcrumbComponents/httpRequest.jsx b/src/sentry/static/sentry/app/components/events/interfaces/breadcrumbComponents/httpRequest.jsx
index e2d43eaadd..aec6e41327 100644
--- a/src/sentry/static/sentry/app/components/events/interfaces/breadcrumbComponents/httpRequest.jsx
+++ b/src/sentry/static/sentry/app/components/events/interfaces/breadcrumbComponents/httpRequest.jsx
@@ -1,6 +1,7 @@
 import React from 'react';
 
 import Classifier from './classifier';
+import KeyValueList from '../keyValueList';
 
 const HttpRequestCrumbComponent = React.createClass({
   propTypes: {
@@ -14,28 +15,18 @@ const HttpRequestCrumbComponent = React.createClass({
   render() {
     let data = this.props.data;
 
+    let list = [];
+    list.push(['method', data.method]);
+    list.push(['url', data.url]);
+
+    if(data.response) {
+      list.push(['response', data.response.statusCode]);
+    }
+
     return (
       <div>
         <h5>HTTP Request <Classifier value={data.classifier} title="%s request" /></h5>
-        <table className="table key-value">
-          <tbody>
-            <tr>
-              <td className="key">method</td>
-              <td>
-                <pre>{data.method}</pre>
-              </td>
-            </tr>
-            <tr>
-              <td className="key">url</td>
-              <td>
-                <pre>{data.url}</pre>
-              </td>
-            </tr>
-            {data.response ?
-              <tr><td className="key">response</td><td><pre>{data.response.statusCode}</pre></td></tr> :
-              null}
-          </tbody>
-        </table>
+        <KeyValueList data={list} isSorted={false} />
       </div>
     );
   }
diff --git a/src/sentry/static/sentry/app/components/events/interfaces/breadcrumbComponents/navigation.jsx b/src/sentry/static/sentry/app/components/events/interfaces/breadcrumbComponents/navigation.jsx
index f6e6547494..dfe7fe26ad 100644
--- a/src/sentry/static/sentry/app/components/events/interfaces/breadcrumbComponents/navigation.jsx
+++ b/src/sentry/static/sentry/app/components/events/interfaces/breadcrumbComponents/navigation.jsx
@@ -1,5 +1,7 @@
 import React from 'react';
 
+import KeyValueList from '../keyValueList';
+
 const NavigationCrumbComponent = React.createClass({
   propTypes: {
     data: React.PropTypes.object.isRequired,
@@ -8,21 +10,14 @@ const NavigationCrumbComponent = React.createClass({
   render() {
     let data = this.props.data;
 
+    let list = [];
+    list.push(['from', data.from]);
+    list.push(['to', data.to]);
+
     return (
       <div>
         <h5>Navigation</h5>
-        <table className="table key-value">
-          <tbody>
-            {data.from &&
-              <tr><td className="key">from</td><td><pre>{data.from}</pre></td></tr>}
-            <tr>
-              <td className="key">to</td>
-              <td>
-                <pre>{data.to}</pre>
-              </td>
-            </tr>
-          </tbody>
-        </table>
+        <KeyValueList data={list} isSorted={false} />
       </div>
     );
   }
diff --git a/src/sentry/static/sentry/app/components/events/interfaces/breadcrumbComponents/uiEvent.jsx b/src/sentry/static/sentry/app/components/events/interfaces/breadcrumbComponents/uiEvent.jsx
index bd1fee2f62..60401ed7df 100644
--- a/src/sentry/static/sentry/app/components/events/interfaces/breadcrumbComponents/uiEvent.jsx
+++ b/src/sentry/static/sentry/app/components/events/interfaces/breadcrumbComponents/uiEvent.jsx
@@ -1,6 +1,7 @@
 import React from 'react';
 
 import Classifier from './classifier';
+import KeyValueList from '../keyValueList';
 
 const UiEventComponent = React.createClass({
   propTypes: {
@@ -9,19 +10,14 @@ const UiEventComponent = React.createClass({
 
   render() {
     let data = this.props.data;
+
+    let list = [];
+    list.push(['element', data.target || 'undefined target']);
+
     return (
       <div>
         <h5>{data.event || 'UI Event'} <Classifier value={data.classifier} title="%s call"/></h5>
-        <table className="table key-value">
-          <tbody>
-            <tr>
-              <td className="key">element</td>
-              <td>
-                <pre>{data.target || 'undefined target'}</pre>
-              </td>
-            </tr>
-          </tbody>
-        </table>
+        <KeyValueList data={list} isSorted={false} />
       </div>
     );
   }
diff --git a/src/sentry/static/sentry/app/components/events/interfaces/keyValueList.jsx b/src/sentry/static/sentry/app/components/events/interfaces/keyValueList.jsx
index 63c8c8a14f..a1ffae33b5 100644
--- a/src/sentry/static/sentry/app/components/events/interfaces/keyValueList.jsx
+++ b/src/sentry/static/sentry/app/components/events/interfaces/keyValueList.jsx
@@ -7,19 +7,25 @@ const KeyValueList = React.createClass({
   propTypes: {
     data: React.PropTypes.array.isRequired,
     isContextData: React.PropTypes.bool,
+    isSorted: React.PropTypes.bool,
     onClick: React.PropTypes.func
   },
 
   getDefaultProps() {
     return {
-      isContextData: false
+      isContextData: false,
+      isSorted: true
     };
   },
 
   render() {
     // TODO(dcramer): use non-string keys as reserved words ("unauthorized")
     // break rendering
-    let data = _.sortBy(this.props.data, (key, value) => key);
+
+    let data = this.props.isSorted ?
+                  _.sortBy(this.props.data, (key, value) => key) :
+                  this.props.data;
+
     const props = (this.props.onClick) ? {onClick: this.props.onClick} : {};
     return (
       <table className="table key-value" {...props}>
