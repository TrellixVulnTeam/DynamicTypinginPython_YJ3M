commit 94d70269ded660033d3e08851cbd9b267666df48
Author: Armin Ronacher <armin.ronacher@active-4.com>
Date:   Fri Mar 13 09:25:11 2020 +0100

    feat(sessions): add data on single release (#17627)

diff --git a/src/sentry/api/endpoints/organization_release_details.py b/src/sentry/api/endpoints/organization_release_details.py
index c5646d883b..1bb8378638 100644
--- a/src/sentry/api/endpoints/organization_release_details.py
+++ b/src/sentry/api/endpoints/organization_release_details.py
@@ -2,6 +2,7 @@ from __future__ import absolute_import
 
 import six
 from rest_framework.response import Response
+from rest_framework.exceptions import ParseError
 
 from sentry.api.base import DocSection
 from sentry.api.bases.organization import OrganizationReleasesBaseEndpoint
@@ -13,8 +14,13 @@ from sentry.api.serializers.rest_framework import (
     ReleaseHeadCommitSerializer,
     ReleaseHeadCommitSerializerDeprecated,
 )
-from sentry.models import Activity, Group, Release, ReleaseFile
+from sentry.models import Activity, Group, Release, ReleaseFile, Project
 from sentry.utils.apidocs import scenario, attach_scenarios
+from sentry.api.endpoints.organization_releases import (
+    SUMMARY_STATS_PERIOD,
+    HEALTH_STATS_PERIOD,
+    get_stats_period_detail,
+)
 
 ERR_RELEASE_REFERENCED = "This release is referenced by active issues and cannot be removed."
 
@@ -63,6 +69,19 @@ class OrganizationReleaseDetailsEndpoint(OrganizationReleasesBaseEndpoint):
         :pparam string version: the version identifier of the release.
         :auth: required
         """
+        project_id = request.GET.get("project")
+        with_health = request.GET.get("health") == "1"
+        summary_stats_period = request.GET.get("summaryStatsPeriod") or "48h"
+        health_stats_period = request.GET.get("healthStatsPeriod") or ("24h" if with_health else "")
+        if summary_stats_period not in SUMMARY_STATS_PERIOD:
+            raise ParseError(
+                detail=get_stats_period_detail("summaryStatsPeriod", SUMMARY_STATS_PERIOD)
+            )
+        if health_stats_period not in HEALTH_STATS_PERIOD:
+            raise ParseError(
+                detail=get_stats_period_detail("healthStatsPeriod", HEALTH_STATS_PERIOD)
+            )
+
         try:
             release = Release.objects.get(organization_id=organization.id, version=version)
         except Release.DoesNotExist:
@@ -71,7 +90,22 @@ class OrganizationReleaseDetailsEndpoint(OrganizationReleasesBaseEndpoint):
         if not self.has_release_permission(request, organization, release):
             raise ResourceDoesNotExist
 
-        return Response(serialize(release, request.user))
+        if with_health and project_id:
+            try:
+                project = Project.objects.get_from_cache(id=int(project_id))
+            except (ValueError, Project.DoesNotExist):
+                raise ParseError(detail="Invalid project")
+            release._for_project_id = project.id
+
+        return Response(
+            serialize(
+                release,
+                request.user,
+                with_health_data=with_health,
+                summary_stats_period=summary_stats_period,
+                health_stats_period=health_stats_period,
+            )
+        )
 
     @attach_scenarios([update_organization_release_scenario])
     def put(self, request, organization, version):
diff --git a/src/sentry/static/sentry/app/types/index.tsx b/src/sentry/static/sentry/app/types/index.tsx
index 3ccfb9fc21..b1924c3fa2 100644
--- a/src/sentry/static/sentry/app/types/index.tsx
+++ b/src/sentry/static/sentry/app/types/index.tsx
@@ -136,6 +136,7 @@ export type Health = {
   sessionsCrashed: number;
   sessionsErrored: number;
   adoption: number | null;
+  hasHealthData: boolean;
 };
 export type HealthGraphData = {
   [key: string]: [number, number][];
diff --git a/src/sentry/static/sentry/app/views/releasesV2/detail/overview/index.tsx b/src/sentry/static/sentry/app/views/releasesV2/detail/overview/index.tsx
index 080b8ec386..27283225d8 100644
--- a/src/sentry/static/sentry/app/views/releasesV2/detail/overview/index.tsx
+++ b/src/sentry/static/sentry/app/views/releasesV2/detail/overview/index.tsx
@@ -4,7 +4,8 @@ import {Params} from 'react-router/lib/Router';
 import {Location} from 'history';
 
 import withOrganization from 'app/utils/withOrganization';
-import {Organization} from 'app/types';
+import withGlobalSelection from 'app/utils/withGlobalSelection';
+import {Organization, GlobalSelection} from 'app/types';
 import space from 'app/styles/space';
 
 import HealthChart from './healthChart';
@@ -19,12 +20,13 @@ type Props = {
   organization: Organization;
   params: Params;
   location: Location;
+  selection: GlobalSelection;
 };
 
-const ReleaseOverview = ({organization, params, location}: Props) => {
-  const projectId =
-    typeof location.query.project === 'string' ? location.query.project : undefined;
+const ReleaseOverview = ({organization, params, selection}: Props) => {
+  const projectId = String(selection.projects[0]);
 
+  // TODO(releasesV2): we will handle this later with forced project selector
   if (!projectId) {
     return null;
   }
@@ -44,7 +46,7 @@ const ReleaseOverview = ({organization, params, location}: Props) => {
                 <CommitAuthorBreakdown
                   version={version}
                   orgId={organization.slug}
-                  projectId={location.query.project as string}
+                  projectId={projectId}
                   commitCount={commitCount}
                 />
               )}
@@ -78,4 +80,4 @@ const Sidebar = styled('div')`
   grid-column: 2 / 3;
 `;
 
-export default withOrganization(ReleaseOverview);
+export default withGlobalSelection(withOrganization(ReleaseOverview));
diff --git a/src/sentry/static/sentry/app/views/releasesV2/detail/releaseHeader.tsx b/src/sentry/static/sentry/app/views/releasesV2/detail/releaseHeader.tsx
index c10c9ac531..1586b7c110 100644
--- a/src/sentry/static/sentry/app/views/releasesV2/detail/releaseHeader.tsx
+++ b/src/sentry/static/sentry/app/views/releasesV2/detail/releaseHeader.tsx
@@ -8,7 +8,7 @@ import Link from 'app/components/links/link';
 import ListLink from 'app/components/links/listLink';
 import ExternalLink from 'app/components/links/externalLink';
 import NavTabs from 'app/components/navTabs';
-import {Release, Deploy} from 'app/types';
+import {Release, Deploy, GlobalSelection} from 'app/types';
 import Version from 'app/components/version';
 import Clipboard from 'app/components/clipboard';
 import {IconCopy, IconOpen} from 'app/icons';
@@ -16,6 +16,7 @@ import Tooltip from 'app/components/tooltip';
 import Badge from 'app/components/badge';
 import Count from 'app/components/count';
 import TimeSince from 'app/components/timeSince';
+import withGlobalSelection from 'app/utils/withGlobalSelection';
 
 import ReleaseStat from './releaseStat';
 import Breadcrumbs from './breadcrumbs';
@@ -26,11 +27,15 @@ type Props = {
   orgId: string;
   release: Release;
   deploys: Deploy[];
+  selection: GlobalSelection;
 };
 
-const ReleaseHeader = ({location, orgId, release, deploys}: Props) => {
+const ReleaseHeader = ({location, orgId, release, deploys, selection}: Props) => {
   const {version, newGroups, url} = release;
 
+  const healthData = release.projects.find(p => p.id === selection.projects[0])
+    ?.healthData;
+
   const releasePath = `/organizations/${orgId}/releases-v2/${encodeURIComponent(
     version
   )}/`;
@@ -78,11 +83,10 @@ const ReleaseHeader = ({location, orgId, release, deploys}: Props) => {
             </ReleaseStat>
           )}
           <ReleaseStat label={t('Crashes')}>
-            <Count value={/*release.healthData?.crashes ??*/ 0} />
+            <Count value={healthData?.sessionsCrashed ?? 0} />
           </ReleaseStat>
-          {/* TODO(releasesV2): waiting for api */}
           {/* <ReleaseStat label={t('Errors')}>
-            <Count value={release.healthData?.errors ?? 0} />
+            <Count value={healthData?.sessionsErrored ?? 0} />
           </ReleaseStat> */}
           <ReleaseStat label={t('New Issues')}>
             <Count value={newGroups} />
@@ -194,4 +198,4 @@ const StyledNavTabs = styled(NavTabs)`
   grid-column: 1 / 2;
 `;
 
-export default ReleaseHeader;
+export default withGlobalSelection(ReleaseHeader);
diff --git a/src/sentry/static/sentry/app/views/releasesV2/list/releaseCard.tsx b/src/sentry/static/sentry/app/views/releasesV2/list/releaseCard.tsx
index fe45667369..71a15adae1 100644
--- a/src/sentry/static/sentry/app/views/releasesV2/list/releaseCard.tsx
+++ b/src/sentry/static/sentry/app/views/releasesV2/list/releaseCard.tsx
@@ -91,7 +91,9 @@ const ReleaseCard = ({release, project, location}: Props) => (
       </StyledPanelItem>
     </PanelBody>
 
-    {release.healthData && <ReleaseHealth release={release} location={location} />}
+    {release.healthData?.hasHealthData && (
+      <ReleaseHealth release={release} location={location} />
+    )}
   </Panel>
 );
 
