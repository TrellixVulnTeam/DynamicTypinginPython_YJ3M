commit 2fea25bf0556c47b2debdd33bec095912bac90f7
Author: Bryan Chow <bryan@fullfactor.com>
Date:   Tue Sep 7 22:42:01 2010 -0700

    Make multi-server configuration clearer in README

diff --git a/README.rst b/README.rst
index b0e404e160..5b8d474743 100644
--- a/README.rst
+++ b/README.rst
@@ -66,29 +66,11 @@ Finally, run ``python manage.py syncdb`` to create the database tables.
 
 (If you use South, you'll need to use ``python manage.py migrate sentry``)
 
-=============
-Configuration
-=============
+==========================
+Multi-server configuration
+==========================
 
-Several options exist to configure django-sentry via your ``settings.py``:
-
-#######################
-SENTRY_CATCH_404_ERRORS
-#######################
-
-Enable catching of 404 errors in the logs. Default value is ``False``::
-
-	SENTRY_CATCH_404_ERRORS = True
-
-You can skip other custom exception types by adding a ``skip_sentry = True`` attribute to them.
-
-#################
-SENTRY_REMOTE_URL
-#################
-
-If you run on a multi server environment we highly recommend this method for storing error logs.
-
-This is a two step process. First you'll want to configure your Sentry server (not your application)::
+To configure Sentry for use in a multi-server environment, first you'll want to configure your Sentry server (not your application)::
 
 	INSTALLED_APPS = [
 	  ...
@@ -97,21 +79,41 @@ This is a two step process. First you'll want to configure your Sentry server (n
 	  'sentry',
 	  'sentry.client',
 	]
+	
+	SENTRY_KEY = '0123456789abcde'
 
-And on your main application, you need to add ``sentry.client``::
+And on each of your application servers, specify the URL of the Sentry server, add ``sentry.client`` to ``INSTALLED_APPS``, and specify the same key used in your Sentry server's settings::
 
 	# This should be the absolute URI of sentries store view
-	SENTRY_REMOTE_URL = 'SENTRY_URL_BASE/store/'
+	SENTRY_REMOTE_URL = 'http://your.sentry.server/sentry/store/'
 	
 	INSTALLED_APPS = [
 	  ...
 	  'sentry.client',
 	]
+	
+	SENTRY_KEY = '0123456789abcde'
 
 You may also specify an alternative timeout to the default (which is 5 seconds) for all outgoing logging requests::
 
 	SENTRY_REMOTE_TIMEOUT = 5
 
+===========================
+Other configuration options
+===========================
+
+Several options exist to configure django-sentry via your ``settings.py``:
+
+#######################
+SENTRY_CATCH_404_ERRORS
+#######################
+
+Enable catching of 404 errors in the logs. Default value is ``False``::
+
+	SENTRY_CATCH_404_ERRORS = True
+
+You can skip other custom exception types by adding a ``skip_sentry = True`` attribute to them.
+
 #####################
 SENTRY_DATABASE_USING
 #####################
