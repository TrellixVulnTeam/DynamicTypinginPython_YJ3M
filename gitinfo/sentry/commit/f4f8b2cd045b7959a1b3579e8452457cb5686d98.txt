commit f4f8b2cd045b7959a1b3579e8452457cb5686d98
Author: Armin Ronacher <armin.ronacher@active-4.com>
Date:   Fri Feb 10 22:37:37 2017 +0100

    Simplistic system frame cache

diff --git a/src/sentry/lang/native/symbolizer.py b/src/sentry/lang/native/symbolizer.py
index dab6fad1f6..7216d57ac9 100644
--- a/src/sentry/lang/native/symbolizer.py
+++ b/src/sentry/lang/native/symbolizer.py
@@ -9,6 +9,8 @@ from symsynd.report import ReportSymbolizer
 from symsynd.macho.arch import get_cpu_name, get_macho_vmaddr
 from symsynd.utils import parse_addr
 
+from django.core.cache import cache
+
 from sentry.lang.native.dsymcache import dsymcache
 from sentry.utils.safe import trim
 from sentry.utils.compat import implements_to_string
@@ -290,7 +292,20 @@ class Symbolizer(object):
     def symbolize_system_frame(self, frame, img, sdk_info,
                                symbolize_inlined=False):
         """Symbolizes a frame with system symbols only."""
-        symbol = find_system_symbol(img, frame['instruction_addr'], sdk_info)
+        cache_key = 'ssym:%s:%s:%s:%s:%s:%s' % (
+            frame['instruction_addr'],
+            sdk_info['sdk_name'],
+            sdk_info['dsym_type'],
+            sdk_info['version_major'],
+            sdk_info['version_minor'],
+            sdk_info['version_patchlevel'],
+        )
+
+        symbol = cache.get(cache_key)
+        if symbol is None:
+            symbol = find_system_symbol(
+                img, frame['instruction_addr'], sdk_info)
+
         if symbol is None:
             # Simulator frames cannot be symbolicated
             if self._is_simulator_frame(frame, img):
@@ -301,6 +316,8 @@ class Symbolizer(object):
                 type=type,
                 image=img
             )
+        else:
+            cache.set(cache_key, symbol, 3600)
 
         rv = self._process_frame(dict(frame,
             symbol_name=symbol, filename=None, line=0, column=0,
