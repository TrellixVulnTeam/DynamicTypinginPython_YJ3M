commit 0009c657c372fb898bb2490de0f38ffc08c3d33a
Author: Brett Hoerner <brett@bretthoerner.com>
Date:   Tue Jul 3 11:29:58 2018 -0500

    fix: Properly decode results from libGeoIP (#8917)

diff --git a/src/sentry/interfaces/geo.py b/src/sentry/interfaces/geo.py
index a4b5d0f2cd..12c943fab2 100644
--- a/src/sentry/interfaces/geo.py
+++ b/src/sentry/interfaces/geo.py
@@ -2,6 +2,8 @@ from __future__ import absolute_import
 
 __all__ = ('Geo', )
 
+import six
+
 from sentry.interfaces.base import Interface
 from sentry.utils.geo import geo_by_addr
 
@@ -40,9 +42,13 @@ class Geo(Interface):
         if not geo:
             return None
 
-        data = {
-            'country_code': geo.get('country_code'),
-            'city': geo.get('city'),
-            'region': geo.get('region'),
-        }
+        data = {}
+        for k in ('country_code', 'city', 'region'):
+            d = geo.get(k)
+
+            if isinstance(d, six.binary_type):
+                d = d.decode('ISO-8859-1')
+
+            data[k] = d
+
         return cls.to_python(data)
diff --git a/tests/sentry/interfaces/test_geo.py b/tests/sentry/interfaces/test_geo.py
index 76e458efb4..6b680b6cb8 100644
--- a/tests/sentry/interfaces/test_geo.py
+++ b/tests/sentry/interfaces/test_geo.py
@@ -44,3 +44,22 @@ class GeoTest(TestCase):
 
     def test_path(self):
         assert Geo().get_path() == 'geo'
+
+    @mock.patch('sentry.interfaces.geo.geo_by_addr')
+    def test_iso_8859_1_country_code(self, geo_by_addr_mock):
+        # https://github.com/maxmind/geoip-api-python/releases/tag/v1.3.2
+        # Previously GeoIP.country_names was populated from GeoIP_country_name in
+        # the libGeoIP C API. Some versions of the libGeoIP include non-ASCII
+        # ISO-8859-1 characters in these names, causing encoding errors under Python
+
+        geo_by_addr_mock.return_value = {
+            'city': 'San Francisco',
+            'country_code': '\xc5lborg',
+            'region': 'CA',
+        }
+
+        assert Geo.from_ip_address('192.168.0.1').to_json() == {
+            'city': u'San Francisco',
+            'country_code': u'\xc5lborg',
+            'region': u'CA'
+        }
