commit af62f72e409fa144a1fdc26d820b891a0e5add87
Author: David Cramer <dcramer@gmail.com>
Date:   Sat May 24 14:46:02 2014 -0700

    Add EveryEventCondition

diff --git a/src/sentry/constants.py b/src/sentry/constants.py
index 25932a0f82..5159873841 100644
--- a/src/sentry/constants.py
+++ b/src/sentry/constants.py
@@ -185,6 +185,7 @@ TAG_LABELS = {
 # TODO(dcramer): once this is more flushed out we want this to be extendable
 SENTRY_RULES = (
     'sentry.rules.actions.notify_event.NotifyEventAction',
+    'sentry.rules.conditions.every_event.EveryEventCondition',
     'sentry.rules.conditions.first_seen_event.FirstSeenEventCondition',
     'sentry.rules.conditions.regression_event.RegressionEventCondition',
     'sentry.rules.conditions.tagged_event.TaggedEventCondition',
diff --git a/src/sentry/rules/conditions/every_event.py b/src/sentry/rules/conditions/every_event.py
new file mode 100644
index 0000000000..1031d63ab2
--- /dev/null
+++ b/src/sentry/rules/conditions/every_event.py
@@ -0,0 +1,18 @@
+"""
+sentry.rules.conditions.every_event
+~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
+
+:copyright: (c) 2010-2014 by the Sentry Team, see AUTHORS for more details.
+:license: BSD, see LICENSE for more details.
+"""
+
+from __future__ import absolute_import
+
+from sentry.rules.conditions.base import EventCondition
+
+
+class EveryEventCondition(EventCondition):
+    label = 'Every time an event is seen'
+
+    def passes(self, event, is_new, **kwargs):
+        return True
diff --git a/tests/sentry/rules/conditions/test_every_event.py b/tests/sentry/rules/conditions/test_every_event.py
new file mode 100644
index 0000000000..0cb339875c
--- /dev/null
+++ b/tests/sentry/rules/conditions/test_every_event.py
@@ -0,0 +1,12 @@
+from sentry.testutils.cases import RuleTestCase
+from sentry.rules.conditions.every_event import EveryEventCondition
+
+
+class EveryEventConditionTest(RuleTestCase):
+    rule_cls = EveryEventCondition
+
+    def test_applies_correctly(self):
+        rule = self.get_rule()
+
+        self.assertPasses(rule, self.event, is_new=True)
+        self.assertPasses(rule, self.event, is_new=False)
