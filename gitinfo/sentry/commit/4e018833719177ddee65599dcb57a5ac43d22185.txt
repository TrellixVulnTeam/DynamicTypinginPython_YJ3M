commit 4e018833719177ddee65599dcb57a5ac43d22185
Author: Matt Robenolt <matt@ydekproductions.com>
Date:   Wed Oct 18 14:39:56 2017 -0700

    ref(group): Sharing groups is an explicit action (#6295)

diff --git a/.eslintrc b/.eslintrc
index 361b752ca3..d14f24a009 100644
--- a/.eslintrc
+++ b/.eslintrc
@@ -184,6 +184,7 @@
       2,
       {
         "ignore": [
+          "style",
           "className",
           "children",
           "location",
diff --git a/CHANGES b/CHANGES
index 3304500dca..8ce5122f98 100644
--- a/CHANGES
+++ b/CHANGES
@@ -5,6 +5,7 @@ Version 8.22 (Unreleased)
   default organization. You should use SSO or the invite flows.
 - Add support for SAML2 authentication through identity providers that
   implement the ``SAML2AuthProvider``. See getsentry/sentry-auth-saml2.
+- BREAKING: Group share urls have all been invalidated and must be regenerated.
 
 Schema Changes
 ~~~~~~~~~~~~~~
diff --git a/docs-ui/components/dropdownReact.stories.js b/docs-ui/components/dropdownReact.stories.js
new file mode 100644
index 0000000000..b715b94a83
--- /dev/null
+++ b/docs-ui/components/dropdownReact.stories.js
@@ -0,0 +1,29 @@
+import React from 'react';
+import {storiesOf} from '@storybook/react';
+// import {action} from '@storybook/addon-actions';
+import {withInfo} from '@storybook/addon-info';
+
+import DropdownReact from 'sentry-ui/dropdownReact';
+import MenuItem from 'sentry-ui/menuItem';
+
+storiesOf('Links/DropdownReact', module)
+  .add(
+    'anchor left (default)',
+    withInfo('Anchors to left side')(() => (
+      <div className="clearfix">
+        <DropdownReact title="Test">
+          <MenuItem href="">Item</MenuItem>
+        </DropdownReact>
+      </div>
+    ))
+  )
+  .add(
+    'anchor right',
+    withInfo('Anchors to right side')(() => (
+      <div className="clearfix">
+        <DropdownReact anchorRight title="Test">
+          <MenuItem href="">Item</MenuItem>
+        </DropdownReact>
+      </div>
+    ))
+  );
diff --git a/scripts/devproxy.js b/scripts/devproxy.js
index b80cb62ffe..d0c6b11be4 100644
--- a/scripts/devproxy.js
+++ b/scripts/devproxy.js
@@ -15,6 +15,10 @@ if (!WEBPACK_DEV_PORT || !WEBPACK_DEV_PROXY || !SENTRY_DEVSERVER_PORT) {
 }
 
 const createProxy = function(proxy, req, res, port, cb) {
+  if (res.headersSent) {
+    return;
+  }
+
   proxy.web(req, res, {target: 'http://localhost:' + port}, function(e, r) {
     cb && cb(e, r);
     if (e) {
diff --git a/src/sentry/api/endpoints/group_details.py b/src/sentry/api/endpoints/group_details.py
index 1623c6ba9a..45e176d8bb 100644
--- a/src/sentry/api/endpoints/group_details.py
+++ b/src/sentry/api/endpoints/group_details.py
@@ -263,6 +263,7 @@ class GroupDetailsEndpoint(GroupEndpoint):
                                      user context this allows changing of
                                      the bookmark flag.
         :param boolean isSubscribed:
+        :param boolean isPublic: sets the issue to public or private.
         :auth: required
         """
         discard = request.DATA.get('discard')
diff --git a/src/sentry/api/endpoints/project_group_index.py b/src/sentry/api/endpoints/project_group_index.py
index 930fb73407..c642e72ff2 100644
--- a/src/sentry/api/endpoints/project_group_index.py
+++ b/src/sentry/api/endpoints/project_group_index.py
@@ -21,8 +21,8 @@ from sentry.constants import DEFAULT_SORT_OPTION
 from sentry.db.models.query import create_or_update
 from sentry.models import (
     Activity, EventMapping, Group, GroupAssignee, GroupBookmark, GroupHash, GroupResolution,
-    GroupSeen, GroupSnooze, GroupStatus, GroupSubscription, GroupSubscriptionReason, GroupTombstone,
-    Release, TOMBSTONE_FIELDS_FROM_GROUP, UserOption
+    GroupSeen, GroupShare, GroupSnooze, GroupStatus, GroupSubscription, GroupSubscriptionReason,
+    GroupTombstone, Release, TOMBSTONE_FIELDS_FROM_GROUP, UserOption
 )
 from sentry.models.event import Event
 from sentry.models.group import looks_like_short_id
@@ -799,30 +799,35 @@ class ProjectGroupIndexEndpoint(ProjectEndpoint):
                 ),
             }
 
-        if result.get('isPublic'):
-            queryset.update(is_public=True)
+        if 'isPublic' in result:
+            # We always want to delete an existing share, because triggering
+            # an isPublic=True even when it's already public, should trigger
+            # regenerating.
             for group in group_list:
-                if group.is_public:
-                    continue
-                group.is_public = True
-                Activity.objects.create(
-                    project=group.project,
-                    group=group,
-                    type=Activity.SET_PUBLIC,
-                    user=acting_user,
-                )
-        elif result.get('isPublic') is False:
-            queryset.update(is_public=False)
+                if GroupShare.objects.filter(group=group).delete():
+                    result['shareId'] = None
+                    Activity.objects.create(
+                        project=group.project,
+                        group=group,
+                        type=Activity.SET_PRIVATE,
+                        user=acting_user,
+                    )
+
+        if result.get('isPublic'):
             for group in group_list:
-                if not group.is_public:
-                    continue
-                group.is_public = False
-                Activity.objects.create(
+                share, created = GroupShare.objects.get_or_create(
                     project=group.project,
                     group=group,
-                    type=Activity.SET_PRIVATE,
                     user=acting_user,
                 )
+                if created:
+                    result['shareId'] = share.uuid
+                    Activity.objects.create(
+                        project=group.project,
+                        group=group,
+                        type=Activity.SET_PUBLIC,
+                        user=acting_user,
+                    )
 
         # XXX(dcramer): this feels a bit shady like it should be its own
         # endpoint
diff --git a/src/sentry/api/serializers/models/group.py b/src/sentry/api/serializers/models/group.py
index 0da4fe203c..93935640f3 100644
--- a/src/sentry/api/serializers/models/group.py
+++ b/src/sentry/api/serializers/models/group.py
@@ -14,7 +14,7 @@ from sentry.api.serializers import Serializer, register, serialize
 from sentry.constants import LOG_LEVELS, StatsPeriod
 from sentry.models import (
     Group, GroupAssignee, GroupBookmark, GroupMeta, GroupResolution, GroupSeen, GroupSnooze,
-    GroupStatus, GroupSubscription, GroupSubscriptionReason, User, UserOption,
+    GroupShare, GroupStatus, GroupSubscription, GroupSubscriptionReason, User, UserOption,
     UserOptionValue
 )
 from sentry.utils.db import attach_foreignkey
@@ -152,6 +152,10 @@ class GroupSerializer(Serializer):
         else:
             actors = {}
 
+        share_ids = dict(GroupShare.objects.filter(
+            group__in=item_list,
+        ).values_list('group_id', 'uuid'))
+
         result = {}
         for item in item_list:
             active_date = item.active_at or item.first_seen
@@ -187,6 +191,7 @@ class GroupSerializer(Serializer):
                 'ignore_actor': ignore_actor,
                 'resolution': resolution,
                 'resolution_actor': resolution_actor,
+                'share_id': share_ids.get(item.id),
             }
         return result
 
@@ -250,10 +255,11 @@ class GroupSerializer(Serializer):
             permalink = None
 
         is_subscribed, subscription = attrs['subscription']
+        share_id = attrs['share_id']
 
         return {
             'id': six.text_type(obj.id),
-            'shareId': obj.get_share_id(),
+            'shareId': share_id,
             'shortId': obj.qualified_short_id,
             'count': six.text_type(obj.times_seen),
             'userCount': attrs['user_count'],
@@ -266,7 +272,7 @@ class GroupSerializer(Serializer):
             'level': LOG_LEVELS.get(obj.level, 'unknown'),
             'status': status_label,
             'statusDetails': status_details,
-            'isPublic': obj.is_public,
+            'isPublic': share_id is not None,
             'project': {
                 'name': obj.project.name,
                 'slug': obj.project.slug,
diff --git a/src/sentry/deletions/__init__.py b/src/sentry/deletions/__init__.py
index 388bcd9cd5..23b1be30c7 100644
--- a/src/sentry/deletions/__init__.py
+++ b/src/sentry/deletions/__init__.py
@@ -57,6 +57,7 @@ def load_defaults():
     default_manager.register(models.GroupResolution, BulkModelDeletionTask)
     default_manager.register(models.GroupRuleStatus, BulkModelDeletionTask)
     default_manager.register(models.GroupSeen, BulkModelDeletionTask)
+    default_manager.register(models.GroupShare, BulkModelDeletionTask)
     default_manager.register(models.GroupSnooze, BulkModelDeletionTask)
     default_manager.register(models.GroupSubscription, BulkModelDeletionTask)
     default_manager.register(models.GroupTagKey, BulkModelDeletionTask)
diff --git a/src/sentry/deletions/defaults/group.py b/src/sentry/deletions/defaults/group.py
index 34ef7029d0..5de9a17e27 100644
--- a/src/sentry/deletions/defaults/group.py
+++ b/src/sentry/deletions/defaults/group.py
@@ -22,6 +22,8 @@ class GroupDeletionTask(ModelDeletionTask):
             models.GroupRedirect,
             models.GroupResolution,
             models.GroupRuleStatus,
+            models.GroupSeen,
+            models.GroupShare,
             models.GroupSnooze,
             models.GroupTagValue,
             models.GroupTagKey,
diff --git a/src/sentry/deletions/defaults/project.py b/src/sentry/deletions/defaults/project.py
index 6064f3bd1a..e8669e7006 100644
--- a/src/sentry/deletions/defaults/project.py
+++ b/src/sentry/deletions/defaults/project.py
@@ -17,7 +17,7 @@ class ProjectDeletionTask(ModelDeletionTask):
             models.Activity, models.EnvironmentProject, models.EventMapping, models.EventUser,
             models.EventTag, models.GroupAssignee, models.GroupBookmark, models.GroupEmailThread,
             models.GroupHash, models.GroupRelease, models.GroupRuleStatus, models.GroupSeen,
-            models.GroupSubscription, models.GroupTagKey, models.GroupTagValue,
+            models.GroupShare, models.GroupSubscription, models.GroupTagKey, models.GroupTagValue,
             models.ProjectBookmark, models.ProjectKey, models.SavedSearchUserDefault,
             models.SavedSearch, models.TagKey, models.TagValue, models.UserReport,
         )
diff --git a/src/sentry/models/group.py b/src/sentry/models/group.py
index 6dd6da5fc6..9d52bd8776 100644
--- a/src/sentry/models/group.py
+++ b/src/sentry/models/group.py
@@ -14,7 +14,6 @@ import six
 import time
 import warnings
 
-from base64 import b16decode, b16encode
 from datetime import timedelta
 from django.core.urlresolvers import reverse
 from django.db import models
@@ -179,6 +178,7 @@ class Group(Model):
     time_spent_total = BoundedIntegerField(default=0)
     time_spent_count = BoundedIntegerField(default=0)
     score = BoundedIntegerField(default=0)
+    # deprecated, do not use. GroupShare has superseded
     is_public = models.NullBooleanField(default=False, null=True)
     data = GzippedDictField(blank=True, null=True)
     short_id = BoundedBigIntegerField(null=True)
@@ -262,20 +262,26 @@ class Group(Model):
         return status
 
     def get_share_id(self):
-        return b16encode(('{}.{}'.format(self.project_id,
-                                         self.id)).encode('utf-8')).lower().decode('utf-8')
+        from sentry.models import GroupShare
+        try:
+            return GroupShare.objects.filter(
+                group_id=self.id,
+            ).values_list('uuid', flat=True)[0]
+        except IndexError:
+            # Otherwise it has not been shared yet.
+            return None
 
     @classmethod
     def from_share_id(cls, share_id):
-        if not share_id:
-            raise cls.DoesNotExist
-        try:
-            project_id, group_id = b16decode(share_id.upper()).decode('utf-8').split('.')
-        except (ValueError, TypeError):
+        if not share_id or len(share_id) != 32:
             raise cls.DoesNotExist
-        if not (project_id.isdigit() and group_id.isdigit()):
-            raise cls.DoesNotExist
-        return cls.objects.get(project=project_id, id=group_id)
+
+        from sentry.models import GroupShare
+        return cls.objects.get(
+            id=GroupShare.objects.filter(
+                uuid=share_id,
+            ).values_list('group_id'),
+        )
 
     def get_score(self):
         return int(math.log(self.times_seen) * 600 +
diff --git a/src/sentry/models/user.py b/src/sentry/models/user.py
index a63dae65e4..0775896c45 100644
--- a/src/sentry/models/user.py
+++ b/src/sentry/models/user.py
@@ -183,8 +183,8 @@ class User(BaseModel, AbstractBaseUser):
         from sentry import roles
         from sentry.models import (
             Activity, AuditLogEntry, AuthIdentity, Authenticator, GroupAssignee, GroupBookmark, GroupSeen,
-            GroupSubscription, OrganizationMember, OrganizationMemberTeam, UserAvatar, UserEmail,
-            UserOption
+            GroupShare, GroupSubscription, OrganizationMember, OrganizationMemberTeam, UserAvatar,
+            UserEmail, UserOption,
         )
 
         audit_logger.info(
@@ -220,8 +220,8 @@ class User(BaseModel, AbstractBaseUser):
                     pass
 
         model_list = (
-            Authenticator, GroupAssignee, GroupBookmark, GroupSeen, GroupSubscription, UserAvatar, UserEmail,
-            UserOption
+            Authenticator, GroupAssignee, GroupBookmark, GroupSeen, GroupShare,
+            GroupSubscription, UserAvatar, UserEmail, UserOption,
         )
 
         for model in model_list:
diff --git a/src/sentry/static/sentry/app/__mocks__/api.jsx b/src/sentry/static/sentry/app/__mocks__/api.jsx
index 1b79ae106b..8850c38cce 100644
--- a/src/sentry/static/sentry/app/__mocks__/api.jsx
+++ b/src/sentry/static/sentry/app/__mocks__/api.jsx
@@ -22,6 +22,8 @@ export class Client {
     });
   }
 
+  clear() {}
+
   merge(params, options) {
     let path = '/projects/' + params.orgId + '/' + params.projectId + '/issues/';
     return this.request(path, {
diff --git a/src/sentry/static/sentry/app/components/assigneeSelector.jsx b/src/sentry/static/sentry/app/components/assigneeSelector.jsx
index 77a0cb2135..32c73fb1dd 100644
--- a/src/sentry/static/sentry/app/components/assigneeSelector.jsx
+++ b/src/sentry/static/sentry/app/components/assigneeSelector.jsx
@@ -9,7 +9,7 @@ import {valueIsEqual} from '../utils';
 import ApiMixin from '../mixins/apiMixin';
 import Avatar from '../components/avatar';
 import ConfigStore from '../stores/configStore';
-import DropdownLink from './dropdownLink';
+import DropdownReact from './dropdownReact';
 import FlowLayout from './flowLayout';
 import GroupStore from '../stores/groupStore';
 import LoadingIndicator from '../components/loadingIndicator';
@@ -66,6 +66,7 @@ const AssigneeSelector = React.createClass({
       assignedTo: group.assignedTo,
       memberList: MemberListStore.loaded ? MemberListStore.getAll() : null,
       filter: '',
+      isOpen: false,
       loading: false
     };
   },
@@ -82,10 +83,11 @@ const AssigneeSelector = React.createClass({
   },
 
   shouldComponentUpdate(nextProps, nextState) {
-    if (nextState.filter !== this.state.filter) {
-      return true;
-    }
-    if (nextState.loading !== this.state.loading) {
+    if (
+      nextState.isOpen !== this.state.isOpen ||
+      nextState.filter !== this.state.filter ||
+      nextState.loading !== this.state.loading
+    ) {
       return true;
     }
 
@@ -102,12 +104,6 @@ const AssigneeSelector = React.createClass({
   },
 
   componentDidUpdate(prevProps, prevState) {
-    // XXX(dcramer): fix odd dedraw issue as of Chrome 45.0.2454.15 dev (64-bit)
-    if (!this.containerRef) {
-      let node = jQuery(this.containerRef);
-      node.hide().show(0);
-    }
-
     let oldAssignee = prevState.assignedTo && prevState.assignedTo.id;
     let newAssignee = this.state.assignedTo && this.state.assignedTo.id;
     if (oldAssignee !== newAssignee) {
@@ -141,8 +137,7 @@ const AssigneeSelector = React.createClass({
 
   onFilterKeyUp(evt) {
     if (evt.key === 'Escape') {
-      if (!this.dropdownRef) return;
-      this.dropdownRef.close();
+      this.onDropdownClose();
     } else {
       this.setState({
         filter: evt.target.value
@@ -162,14 +157,25 @@ const AssigneeSelector = React.createClass({
     }
   },
 
-  onDropdownOpen() {
-    if (this.filterRef) {
-      this.filterRef.focus();
+  onFilterMount(ref) {
+    if (ref) {
+      // focus filter input
+      ref.focus();
     }
   },
 
+  onFilterClick(e) {
+    // Prevent dropdown menu from closing when filter input is clicked
+    e.stopPropagation();
+  },
+
+  onDropdownOpen() {
+    this.setState({isOpen: true});
+  },
+
   onDropdownClose() {
     this.setState({
+      isOpen: false,
       filter: ''
     });
   },
@@ -223,16 +229,17 @@ const AssigneeSelector = React.createClass({
 
     let tooltipTitle = assignedTo ? userDisplayName(assignedTo) : null;
 
+    // Outter div is needed to make tooltip work
     return (
-      <div ref={ref => (this.containerRef = ref)}>
+      <div>
         <div className={classNames(className, 'tip')} title={tooltipTitle}>
           {loading
             ? <LoadingIndicator mini />
-            : <DropdownLink
-                ref={ref => (this.dropdownRef = ref)}
+            : <DropdownReact
                 className="assignee-selector-toggle"
                 onOpen={this.onDropdownOpen}
                 onClose={this.onDropdownClose}
+                isOpen={this.state.isOpen}
                 title={
                   assignedTo
                     ? <Avatar user={assignedTo} className="avatar" size={48} />
@@ -244,7 +251,8 @@ const AssigneeSelector = React.createClass({
                       type="text"
                       className="form-control input-sm"
                       placeholder={t('Filter people')}
-                      ref={ref => (this.filterRef = ref)}
+                      ref={ref => this.onFilterMount(ref)}
+                      onClick={this.onFilterClick}
                       onKeyDown={this.onFilterKeyDown}
                       onKeyUp={this.onFilterKeyUp}
                     />
@@ -265,7 +273,7 @@ const AssigneeSelector = React.createClass({
                       <LoadingIndicator mini />
                     </FlowLayout>
                   </li>}
-              </DropdownLink>}
+              </DropdownReact>}
         </div>
       </div>
     );
diff --git a/src/sentry/static/sentry/app/components/autoSelectText.jsx b/src/sentry/static/sentry/app/components/autoSelectText.jsx
index 3523d713ae..088e92797f 100644
--- a/src/sentry/static/sentry/app/components/autoSelectText.jsx
+++ b/src/sentry/static/sentry/app/components/autoSelectText.jsx
@@ -1,6 +1,8 @@
 import React from 'react';
-import jQuery from 'jquery';
 import ReactDOM from 'react-dom';
+import jQuery from 'jquery';
+
+import {selectText} from '../utils/selectText';
 
 const AutoSelectText = React.createClass({
   componentDidMount() {
@@ -15,23 +17,15 @@ const AutoSelectText = React.createClass({
 
   selectText() {
     let node = ReactDOM.findDOMNode(this.refs.element).firstChild;
-    if (document.selection) {
-      let range = document.body.createTextRange();
-      range.moveToElementText(node);
-      range.select();
-    } else if (window.getSelection) {
-      let range = document.createRange();
-      range.selectNode(node);
-      let selection = window.getSelection();
-      selection.removeAllRanges();
-      selection.addRange(range);
-    }
+    selectText(node);
   },
 
   render() {
+    let {className, children, style} = this.props;
+
     return (
-      <div ref="element" className={this.props.className}>
-        {this.props.children}
+      <div ref="element" className={className} style={style}>
+        {children}
       </div>
     );
   }
diff --git a/src/sentry/static/sentry/app/components/buttons/button.jsx b/src/sentry/static/sentry/app/components/buttons/button.jsx
index bba452087d..1c4794e752 100644
--- a/src/sentry/static/sentry/app/components/buttons/button.jsx
+++ b/src/sentry/static/sentry/app/components/buttons/button.jsx
@@ -25,6 +25,7 @@ const Button = React.createClass({
      * Tooltip text
      */
     title: PropTypes.string,
+    borderless: PropTypes.bool,
     onClick: PropTypes.func
   },
 
@@ -57,6 +58,7 @@ const Button = React.createClass({
       disabled,
       busy,
       title,
+      borderless,
 
       // destructure from `buttonProps`
       // not necessary, but just in case someone re-orders props
@@ -70,6 +72,7 @@ const Button = React.createClass({
 
     let cx = classNames(className, 'button', {
       tip: !!title,
+      'button-no-border': borderless,
       'button-primary': isPrimary,
       'button-danger': isDanger,
       'button-default': !isPrimary && !isDanger,
diff --git a/src/sentry/static/sentry/app/components/clipboard.jsx b/src/sentry/static/sentry/app/components/clipboard.jsx
index 45786436de..de0bdc14a6 100644
--- a/src/sentry/static/sentry/app/components/clipboard.jsx
+++ b/src/sentry/static/sentry/app/components/clipboard.jsx
@@ -1,6 +1,7 @@
 import Clip from 'clipboard';
 import PropTypes from 'prop-types';
 import React from 'react';
+import ReactDOM from 'react-dom';
 
 import IndicatorStore from '../stores/indicatorStore';
 
@@ -10,6 +11,11 @@ class Clipboard extends React.Component {
     successMessage: PropTypes.string,
     errorMessage: PropTypes.string,
     hideMessages: PropTypes.bool,
+
+    /**
+     * Hide component if browser does not support "execCommand"
+     */
+    hideUnsupported: PropTypes.bool,
     onSuccess: PropTypes.func,
     onError: PropTypes.func
   };
@@ -34,7 +40,7 @@ class Clipboard extends React.Component {
     let hasErrorCb = typeof onError === 'function';
     let bindEventHandlers = !hideMessages || hasSuccessCb || hasErrorCb;
 
-    this.clipboard = new Clip(ref, {
+    this.clipboard = new Clip(ReactDOM.findDOMNode(ref), {
       text: () => this.props.value
     });
 
@@ -60,7 +66,14 @@ class Clipboard extends React.Component {
   };
 
   render() {
-    return React.cloneElement(this.props.children, {
+    let {children, hideUnsupported} = this.props;
+
+    // Browser doesn't support `execCommand`
+    if (hideUnsupported && !Clip.isSupported()) {
+      return null;
+    }
+
+    return React.cloneElement(children, {
       ref: this.handleMount
     });
   }
diff --git a/src/sentry/static/sentry/app/components/confirm.jsx b/src/sentry/static/sentry/app/components/confirm.jsx
index 05c9d35e87..e55cc7a97e 100644
--- a/src/sentry/static/sentry/app/components/confirm.jsx
+++ b/src/sentry/static/sentry/app/components/confirm.jsx
@@ -9,6 +9,8 @@ class Confirm extends React.PureComponent {
     disabled: PropTypes.bool,
     message: PropTypes.string.isRequired,
     onConfirm: PropTypes.func.isRequired,
+    onConfirming: PropTypes.func,
+    onCancel: PropTypes.func,
     priority: PropTypes.oneOf(['primary', 'danger']).isRequired,
     confirmText: PropTypes.string.isRequired,
     cancelText: PropTypes.string.isRequired
@@ -45,7 +47,19 @@ class Confirm extends React.PureComponent {
   };
 
   handleToggle = () => {
-    if (this.props.disabled) return;
+    let {onConfirming, onCancel, disabled} = this.props;
+    if (disabled) return;
+
+    // Current state is closed, means it will toggle open
+    if (!this.state.isModalOpen) {
+      if (typeof onConfirming === 'function') {
+        onConfirming();
+      }
+    } else {
+      if (typeof onCancel === 'function') {
+        onCancel();
+      }
+    }
 
     // Toggle modal display state
     // Also always reset `confirming` when modal visibility changes
@@ -53,6 +67,7 @@ class Confirm extends React.PureComponent {
       isModalOpen: !state.isModalOpen,
       disableConfirmButton: false
     }));
+
     this.confirming = false;
   };
 
@@ -78,15 +93,14 @@ class Confirm extends React.PureComponent {
       </Modal>
     );
 
-    return (
-      <span>
-        {React.cloneElement(children, {
-          disabled,
-          onClick: this.handleToggle
-        })}
-        {ConfirmModal}
-      </span>
-    );
+    return React.cloneElement(children, {
+      disabled,
+      children: [
+        (children.props && children.props.children) || null,
+        React.cloneElement(ConfirmModal, {key: 'confirm'})
+      ],
+      onClick: this.handleToggle
+    });
   }
 }
 
diff --git a/src/sentry/static/sentry/app/components/dropdownReact.jsx b/src/sentry/static/sentry/app/components/dropdownReact.jsx
new file mode 100644
index 0000000000..f449696664
--- /dev/null
+++ b/src/sentry/static/sentry/app/components/dropdownReact.jsx
@@ -0,0 +1,197 @@
+import PropTypes from 'prop-types';
+import React from 'react';
+import classNames from 'classnames';
+
+class DropdownReact extends React.Component {
+  static propTypes = {
+    title: PropTypes.node,
+    /** display dropdown caret */
+    caret: PropTypes.bool,
+    disabled: PropTypes.bool,
+    onOpen: PropTypes.func,
+    onClose: PropTypes.func,
+
+    /**
+     * Callback function to check if we should ignore click outside to
+     * hide dropdown menu
+     */
+    shouldIgnoreClickOutside: PropTypes.func,
+
+    /**
+     * If this is set, then this will become a "controlled" component.
+     * It will no longer set local state and dropdown visiblity will
+     * only follow `isOpen`.
+     */
+    isOpen: PropTypes.bool,
+
+    /** anchors menu to the right */
+    anchorRight: PropTypes.bool,
+
+    /** Keeps dropdown menu open when menu is clicked */
+    keepMenuOpen: PropTypes.bool,
+
+    /**
+     * Always render children of dropdown menu, this is included to support
+     * menu items that open a confirm modal. Otherwise when dropdown menu hides,
+     * the modal also gets unmounted
+     */
+    alwaysRenderMenu: PropTypes.bool,
+
+    topLevelClasses: PropTypes.string,
+    menuClasses: PropTypes.string
+  };
+
+  static defaultProps = {
+    disabled: false,
+    anchorRight: false,
+    keepMenuOpen: false,
+    caret: true
+  };
+
+  constructor(...args) {
+    super(...args);
+    this.state = {
+      isOpen: false
+    };
+  }
+
+  componentWillUnmount() {
+    document.removeEventListener('click', this.checkClickOutside, true);
+  }
+
+  // Gets open state from props or local state when appropriate
+  isOpen = () => {
+    let {isOpen} = this.props;
+    let isControlled = typeof isOpen !== 'undefined';
+    return (isControlled && isOpen) || this.state.isOpen;
+  };
+
+  // Checks if click happens inside of dropdown menu (or its button)
+  // Closes dropdownmenu if it is "outside"
+  checkClickOutside = e => {
+    let {shouldIgnoreClickOutside} = this.props;
+
+    if (!this.dropdownMenu) return;
+    // Dropdown menu itself
+    if (this.dropdownMenu.contains(e.target)) return;
+    // Button that controls visibility of dropdown menu
+    if (this.dropdownActor.contains(e.target)) return;
+
+    if (typeof shouldIgnoreClickOutside === 'function' && shouldIgnoreClickOutside(e))
+      return;
+
+    this.handleClose(e);
+  };
+
+  // Opens dropdown menu
+  handleOpen = e => {
+    let {onOpen, isOpen} = this.props;
+    let isControlled = typeof isOpen !== 'undefined';
+    if (!isControlled) {
+      this.setState({
+        isOpen: true
+      });
+    }
+
+    if (typeof onOpen === 'function') {
+      onOpen(e);
+    }
+  };
+
+  // Closes dropdown menu
+  handleClose = e => {
+    let {onClose, isOpen} = this.props;
+    let isControlled = typeof isOpen !== 'undefined';
+    if (!isControlled) {
+      this.setState({isOpen: false});
+    }
+
+    if (typeof onClose === 'function') {
+      onClose(e);
+    }
+  };
+
+  // When dropdown menu is displayed and mounted to DOM,
+  // bind a click handler to `document` to listen for clicks outside of
+  // this component and close menu if so
+  handleMenuMount = ref => {
+    this.dropdownMenu = ref;
+
+    if (this.dropdownMenu) {
+      // 3rd arg = useCapture = so event capturing vs event bubbling
+      document.addEventListener('click', this.checkClickOutside, true);
+    } else {
+      document.removeEventListener('click', this.checkClickOutside, true);
+    }
+  };
+
+  handleToggle = e => {
+    if (this.isOpen()) {
+      this.handleClose(e);
+    } else {
+      this.handleOpen(e);
+    }
+  };
+
+  // Control whether we should hide dropdown menu when it is clicked
+  handleDropdownMenuClick = e => {
+    if (this.props.keepMenuOpen) return;
+
+    this.handleClose(e);
+  };
+
+  render() {
+    let {
+      anchorRight,
+      disabled,
+      title,
+      caret,
+      children,
+      menuClasses,
+      className,
+      alwaysRenderMenu,
+      topLevelClasses
+    } = this.props;
+
+    // Default anchor = left
+    let isRight = anchorRight;
+    let shouldShowDropdown = this.isOpen();
+
+    let cx = classNames('dropdown-actor', className, {
+      'dropdown-menu-right': isRight,
+      'dropdown-toggle': true,
+      disabled
+    });
+
+    let topLevelCx = classNames('dropdown', topLevelClasses, {
+      'pull-right': isRight,
+      'anchor-right': isRight,
+      open: shouldShowDropdown
+    });
+
+    // .dropdown-actor-title = flexbox to fix vertical alignment on firefox
+    // Need the extra container because dropdown-menu alignment is off if `dropdown-actor` is a flexbox
+    return (
+      <span className={topLevelCx}>
+        <a
+          className={cx}
+          ref={ref => (this.dropdownActor = ref)}
+          onClick={this.handleToggle}>
+          <div className="dropdown-actor-title">
+            <span>{title}</span>
+            {caret && <i className="icon-arrow-down" />}
+          </div>
+        </a>
+        {(shouldShowDropdown || alwaysRenderMenu) &&
+          <ul
+            ref={this.handleMenuMount}
+            onClick={this.handleDropdownMenuClick}
+            className={classNames(menuClasses, 'dropdown-menu')}>
+            {children}
+          </ul>}
+      </span>
+    );
+  }
+}
+
+export default DropdownReact;
diff --git a/src/sentry/static/sentry/app/components/projectHeader/projectSelector.jsx b/src/sentry/static/sentry/app/components/projectHeader/projectSelector.jsx
index da26a5ef0b..39a81f5c5d 100644
--- a/src/sentry/static/sentry/app/components/projectHeader/projectSelector.jsx
+++ b/src/sentry/static/sentry/app/components/projectHeader/projectSelector.jsx
@@ -1,14 +1,12 @@
 import PropTypes from 'prop-types';
 import React from 'react';
-import ReactDOM from 'react-dom';
 import {browserHistory} from 'react-router';
-import jQuery from 'jquery';
 import classNames from 'classnames';
 
 import ApiMixin from '../../mixins/apiMixin';
 
 import ProjectLabel from '../../components/projectLabel';
-import DropdownLink from '../dropdownLink';
+import DropdownReact from '../dropdownReact';
 import MenuItem from '../menuItem';
 import Link from '../link';
 
@@ -37,39 +35,72 @@ const ProjectSelector = React.createClass({
 
   getInitialState() {
     return {
+      isOpen: false,
       filter: '',
       currentIndex: -1,
       ...this.getProjectState({filter: ''})
     };
   },
 
-  componentDidUpdate(prevProps, prevState) {
-    // XXX(dcramer): fix odd dedraw issue as of Chrome 45.0.2454.15 dev (64-bit)
-    let node = jQuery(ReactDOM.findDOMNode(this.refs.container));
-    node.hide().show(0);
-  },
-
   componentWillUnmount() {
     if (this.filterBlurTimeout) {
       clearTimeout(this.filterBlurTimeout);
     }
   },
 
-  onFilterChange(evt) {
-    this.setState({
-      filter: evt.target.value,
-      currentIndex: -1,
-      ...this.getProjectState({filter: evt.target.value})
-    });
+  urlPrefix() {
+    let org = this.props.organization;
+    return `/organizations/${org.slug}`;
   },
 
-  onKeyUp(evt) {
-    if (evt.key === 'Escape' || evt.keyCode === 27) {
-      // blur handler should additionally hide dropdown
-      this.close();
+  /**
+   * Returns an object with the target project url. If
+   * the router is present, passed as the 'to' property.
+   * If not, passed as an absolute URL via the 'href' property.
+   */
+  getProjectUrlProps(project) {
+    let org = this.props.organization;
+    let path = `/${org.slug}/${project.slug}/`;
+
+    if (this.context.location) {
+      return {to: path};
+    } else {
+      return {href: path};
     }
   },
 
+  getProjectState(state) {
+    state = state || this.state;
+    let org = this.props.organization;
+    let filter = state.filter.toLowerCase();
+    let projectList = [];
+    let activeTeam;
+    let activeProject;
+    org.teams.forEach(team => {
+      if (!team.isMember) {
+        return;
+      }
+      team.projects.forEach(project => {
+        if (project.slug == this.props.projectId) {
+          activeProject = project;
+          activeTeam = team;
+        }
+        let fullName = [team.name, project.name, team.slug, project.slug]
+          .join(' ')
+          .toLowerCase();
+        if (filter && fullName.indexOf(filter) === -1) {
+          return;
+        }
+        projectList.push([team, project]);
+      });
+    });
+    return {
+      projectList,
+      activeTeam,
+      activeProject
+    };
+  },
+
   onFilterBlur() {
     // HACK: setTimeout because blur might be caused by clicking
     // project link; in which case, will close dropdown before
@@ -77,25 +108,80 @@ const ProjectSelector = React.createClass({
     // period that seemed to work in all browsers.
     this.filterBlurTimeout = setTimeout(() => {
       this.filterBlurTimeout = null;
-      this.close();
+      this.onClose();
     }, 200);
   },
 
-  urlPrefix() {
-    let org = this.props.organization;
-    return `/organizations/${org.slug}`;
+  onFilterChange(evt) {
+    this.setState({
+      filter: evt.target.value,
+      currentIndex: -1,
+      ...this.getProjectState({filter: evt.target.value})
+    });
+  },
+
+  onFilterClick(e) {
+    e.stopPropagation();
+  },
+
+  onFilterMount(ref) {
+    if (ref) {
+      ref.focus();
+    }
   },
 
-  close() {
+  onKeyDown(evt) {
+    let projects = this.state.projectList;
+    if (evt.key === 'Down' || evt.keyCode === 40) {
+      if (this.state.currentIndex + 1 < projects.length) {
+        this.setState({
+          currentIndex: this.state.currentIndex + 1
+        });
+      }
+    } else if (evt.key === 'Up' || evt.keyCode === 38) {
+      if (this.state.currentIndex > 0) {
+        this.setState({
+          currentIndex: this.state.currentIndex - 1
+        });
+      }
+    } else if (evt.key === 'Enter' || evt.keyCode === 13) {
+      if (this.state.currentIndex > -1) {
+        let url = this.getProjectUrlProps(projects[this.state.currentIndex][1]);
+        if (url.to) {
+          browserHistory.pushState(null, url.to);
+        } else if (url.href) {
+          window.location = url.href;
+        }
+
+        this.onClose();
+      }
+    }
+  },
+
+  onKeyUp(evt) {
+    if (evt.key === 'Escape' || evt.keyCode === 27) {
+      // blur handler should additionally hide dropdown
+      this.onClose();
+    }
+  },
+
+  onOpen() {
     this.setState({
+      isOpen: true
+    });
+    // Not sure if this is still necessary
+    // this.setState(state => ({
+    // ...this.getProjectState(state)
+    // }));
+  },
+
+  onClose() {
+    this.setState({
+      isOpen: false,
       filter: '',
       currentIndex: -1,
       ...this.getProjectState({filter: ''})
     });
-    // dropdownLink might not exist because we try to close within
-    // onFilterBlur above after a timeout. My hunch is that sometimes
-    // this DOM element is removed within the 200ms, so we error out.
-    this.refs.dropdownLink && this.refs.dropdownLink.close();
   },
 
   getProjectNode(team, project, highlightText, hasSingleTeam, isSelected) {
@@ -163,22 +249,6 @@ const ProjectSelector = React.createClass({
     );
   },
 
-  /**
-   * Returns an object with the target project url. If
-   * the router is present, passed as the 'to' property.
-   * If not, passed as an absolute URL via the 'href' property.
-   */
-  getProjectUrlProps(project) {
-    let org = this.props.organization;
-    let path = `/${org.slug}/${project.slug}/`;
-
-    if (this.context.location) {
-      return {to: path};
-    } else {
-      return {href: path};
-    }
-  },
-
   getLinkNode(team, project) {
     let org = this.props.organization;
     let label = this.getProjectLabel(team, project);
@@ -199,81 +269,6 @@ const ProjectSelector = React.createClass({
     );
   },
 
-  onOpen(evt) {
-    if (this.refs.filter) {
-      ReactDOM.findDOMNode(this.refs.filter).focus();
-      this.setState({
-        ...this.getProjectState(this.state)
-      });
-    }
-  },
-
-  onClose() {
-    this.setState({
-      filter: '',
-      currentIndex: -1,
-      ...this.getProjectState({filter: ''})
-    });
-  },
-
-  onKeyDown(evt) {
-    let projects = this.state.projectList;
-    if (evt.key === 'Down' || evt.keyCode === 40) {
-      if (this.state.currentIndex + 1 < projects.length) {
-        this.setState({
-          currentIndex: this.state.currentIndex + 1
-        });
-      }
-    } else if (evt.key === 'Up' || evt.keyCode === 38) {
-      if (this.state.currentIndex > 0) {
-        this.setState({
-          currentIndex: this.state.currentIndex - 1
-        });
-      }
-    } else if (evt.key === 'Enter' || evt.keyCode === 13) {
-      if (this.state.currentIndex > -1) {
-        let url = this.getProjectUrlProps(projects[this.state.currentIndex][1]);
-        if (url.to) {
-          browserHistory.pushState(null, url.to);
-        } else if (url.href) {
-          window.location = url.href;
-        }
-      }
-    }
-  },
-
-  getProjectState(state) {
-    state = state || this.state;
-    let org = this.props.organization;
-    let filter = state.filter.toLowerCase();
-    let projectList = [];
-    let activeTeam;
-    let activeProject;
-    org.teams.forEach(team => {
-      if (!team.isMember) {
-        return;
-      }
-      team.projects.forEach(project => {
-        if (project.slug == this.props.projectId) {
-          activeProject = project;
-          activeTeam = team;
-        }
-        let fullName = [team.name, project.name, team.slug, project.slug]
-          .join(' ')
-          .toLowerCase();
-        if (filter && fullName.indexOf(filter) === -1) {
-          return;
-        }
-        projectList.push([team, project]);
-      });
-    });
-    return {
-      projectList,
-      activeTeam,
-      activeProject
-    };
-  },
-
   renderProjectList({organization: org, projects, filter, hasProjectWrite}) {
     const hasFilter = !!filter;
     const hasProjects = projects && projects.length;
@@ -341,10 +336,11 @@ const ProjectSelector = React.createClass({
           {this.state.activeProject
             ? this.getLinkNode(this.state.activeTeam, this.state.activeProject)
             : t('Select a project')}
-          <DropdownLink
+          <DropdownReact
             ref="dropdownLink"
             title=""
             topLevelClasses={dropdownClassNames}
+            isOpen={this.state.isOpen}
             onOpen={this.onOpen}
             onClose={this.onClose}>
 
@@ -358,7 +354,8 @@ const ProjectSelector = React.createClass({
                   onKeyUp={this.onKeyUp}
                   onKeyDown={this.onKeyDown}
                   onBlur={this.onFilterBlur}
-                  ref="filter"
+                  onClick={this.onFilterClick}
+                  ref={this.onFilterMount}
                 />
               </li>}
 
@@ -368,7 +365,7 @@ const ProjectSelector = React.createClass({
               projects: children,
               filter: this.state.filter
             })}
-          </DropdownLink>
+          </DropdownReact>
         </h3>
       </div>
     );
diff --git a/src/sentry/static/sentry/app/components/shareIssue.jsx b/src/sentry/static/sentry/app/components/shareIssue.jsx
new file mode 100644
index 0000000000..f0e082cdef
--- /dev/null
+++ b/src/sentry/static/sentry/app/components/shareIssue.jsx
@@ -0,0 +1,225 @@
+import PropTypes from 'prop-types';
+import React from 'react';
+import ReactDOM from 'react-dom';
+import classNames from 'classnames';
+
+import {selectText} from '../utils/selectText';
+import {t} from '../locale';
+import AutoSelectText from './autoSelectText';
+import Button from './buttons/button';
+import Clipboard from './clipboard';
+import Confirm from './confirm';
+import DropdownReact from './dropdownReact';
+import FlowLayout from './flowLayout';
+import IconCopy from '../icons/icon-copy';
+import IconRefresh from '../icons/icon-refresh';
+import LoadingIndicator from './loadingIndicator';
+import SpreadLayout from './spreadLayout';
+import Switch from './switch';
+
+const BORDER_COLOR = '#dad5df';
+
+class ShareUrlContainer extends React.Component {
+  static propTypes = {
+    isSharing: PropTypes.bool,
+    shareUrl: PropTypes.string,
+    onShare: PropTypes.func,
+    onConfirming: PropTypes.func,
+    onCancel: PropTypes.func,
+    busy: PropTypes.bool
+  };
+
+  handleCopyClick = () => {
+    if (!this.urlRef) return;
+    selectText(ReactDOM.findDOMNode(this.urlRef));
+  };
+
+  render() {
+    let {isSharing, busy, shareUrl, onConfirming, onCancel, onShare} = this.props;
+    let url = !busy && isSharing ? shareUrl : 'Not shared';
+
+    return (
+      <FlowLayout
+        style={{
+          flex: 'none',
+          alignItems: 'stretch',
+          border: `1px solid ${BORDER_COLOR}`,
+          borderRadius: 4
+        }}>
+
+        <div
+          style={{
+            position: 'relative',
+            display: 'flex',
+            flex: 1,
+            backgroundColor: !isSharing ? '#f9f7f9' : 'transparent',
+            borderRight: `1px solid ${BORDER_COLOR}`,
+            maxWidth: 288
+          }}>
+          <AutoSelectText
+            ref={ref => (this.urlRef = ref)}
+            style={{
+              flex: 1,
+              border: 'none',
+              padding: 4,
+              textOverflow: 'ellipsis',
+              whiteSpace: 'nowrap',
+              overflow: 'hidden'
+            }}>
+            {url}
+          </AutoSelectText>
+        </div>
+
+        <FlowLayout style={{alignItems: 'stretch'}}>
+          <Clipboard hideUnsupported value={url}>
+            <Button
+              borderless
+              size="xsmall"
+              onClick={this.handleCopyClick}
+              style={{borderRadius: 0, borderRight: `1px solid ${BORDER_COLOR}`}}>
+              <IconCopy />
+            </Button>
+          </Clipboard>
+
+          <Confirm
+            message={t(
+              'You are about to regenerate a new shared URL. Your previously shared URL will no longer work. Do you want to continue?'
+            )}
+            onCancel={onCancel}
+            onConfirming={onConfirming}
+            onConfirm={onShare}>
+            <Button borderless size="xsmall">
+              <IconRefresh />
+            </Button>
+          </Confirm>
+        </FlowLayout>
+
+      </FlowLayout>
+    );
+  }
+}
+
+const SmallHeading = ({children, ...props}) => (
+  <h6
+    {...props}
+    style={{
+      margin: 0,
+      paddingRight: 30,
+      whiteSpace: 'nowrap'
+    }}>
+    {children}
+  </h6>
+);
+
+const IndicatorDot = ({active}) => (
+  <span
+    style={{
+      display: 'inline-block',
+      marginRight: 4,
+      borderRadius: '50%',
+      width: 10,
+      height: 10,
+      background: active ? '#57be8c' : '#dfdbe4'
+    }}
+  />
+);
+IndicatorDot.propTypes = {
+  active: PropTypes.bool
+};
+
+class ShareIssue extends React.Component {
+  static propTypes = {
+    isSharing: PropTypes.bool,
+    shareUrl: PropTypes.string,
+    busy: PropTypes.bool,
+    onToggle: PropTypes.func.isRequired,
+    onShare: PropTypes.func.isRequired
+  };
+
+  constructor(props) {
+    super(props);
+    this.hasConfirmModal = false;
+    this.state = {busy: false};
+  }
+
+  componentWillReceiveProps(nextProps) {
+    if (
+      this.state.busy &&
+      (this.props.shareUrl !== nextProps.shareUrl ||
+        this.props.isSharing !== nextProps.isSharing)
+    ) {
+      this.setState({busy: false});
+    }
+  }
+
+  handleToggleShare = e => {
+    e.preventDefault();
+    this.setState({busy: true}, () => this.props.onToggle());
+  };
+
+  handleShare = () => {
+    let {onShare} = this.props;
+    this.setState({busy: true}, () => onShare());
+    this.hasConfirmModal = false;
+  };
+
+  // State of confirm modal so we can keep dropdown menu opn
+  handleConfirmCancel = e => (this.hasConfirmModal = false);
+  handleConfirmReshare = () => (this.hasConfirmModal = true);
+
+  render() {
+    let {className, isSharing} = this.props;
+    let {busy} = this.state;
+    let cx = classNames('share-issue btn-sm btn btn-default', className);
+
+    let shareTitle = 'Share';
+
+    // Needs to wrap in an inline block for DropdownReact,
+    // or else dropdown icon gets wrapped?
+    const title = (
+      <div style={{marginRight: 4}}>
+        <FlowLayout center>
+          <IndicatorDot active={isSharing} />
+          {shareTitle}
+        </FlowLayout>
+      </div>
+    );
+
+    return (
+      <DropdownReact
+        className={cx}
+        shouldIgnoreClickOutside={() => this.hasConfirmModal}
+        title={title}
+        keepMenuOpen>
+        <li
+          style={{
+            padding: '12px 18px'
+          }}
+          ref={ref => (this.container = ref)}>
+          <SpreadLayout style={{marginBottom: busy || isSharing ? 12 : undefined}}>
+            <SmallHeading>
+              {t('Enable public share link')}
+            </SmallHeading>
+            <Switch isActive={isSharing} size="sm" toggle={this.handleToggleShare} />
+          </SpreadLayout>
+
+          {busy &&
+            <FlowLayout center>
+              <LoadingIndicator mini />
+            </FlowLayout>}
+
+          {!busy &&
+            isSharing &&
+            <ShareUrlContainer
+              {...this.props}
+              onCancel={this.handleConfirmCancel}
+              onConfirming={this.handleConfirmReshare}
+              onShare={this.handleShare}
+            />}
+        </li>
+      </DropdownReact>
+    );
+  }
+}
+
+export default ShareIssue;
diff --git a/src/sentry/static/sentry/app/icons/icon-copy.js b/src/sentry/static/sentry/app/icons/icon-copy.js
new file mode 100644
index 0000000000..3741250ff8
--- /dev/null
+++ b/src/sentry/static/sentry/app/icons/icon-copy.js
@@ -0,0 +1,27 @@
+import React from 'react';
+import Icon from 'react-icon-base';
+
+function IconCopy(props) {
+  return (
+    <Icon viewBox="0 0 15 15" {...props}>
+      <g stroke="currentColor" fill="none" strokeLinecap="round" strokeLinejoin="round">
+        <path d="M8.5,2.5 L8.5,9.4263505 C8.5,10.0193107 8.04696369,10.5 7.50296986,10.5 L1.49703014,10.5 C0.946385598,10.5 0.5,10.0176792 0.5,9.42982483 L0.5,1.57017517 C0.5,0.979133744 0.951117887,0.5 1.50458289,0.5 L6.50189865,0.5 L8.5,2.5 Z" />
+        <path d="M2.5,3.5 L4.5,3.5" />
+        <path d="M2.5,5.5 L6.5,5.5" />
+        <path d="M2.5,7.5 L6.5,7.5" />
+        <path d="M8.5,4.5 L12.5018986,4.5 L14.5,6.5 L14.5,6.64285714 L14.5,13.4263505 C14.5,14.0193107 14.0469637,14.5 13.5029699,14.5 L7.49703014,14.5 C6.9463856,14.5 6.5,14.0176792 6.5,13.4298248 L6.5,10.5" />
+        <polygon points="6.5 0.5 6.5 2.5 8.5 2.5" fill="currentColor" />
+        <polygon points="12.5 4.5 12.5 6.5 14.5 6.5" fill="currentColor" />
+        <path d="M8.5,7.5 L10.5,7.5" />
+        <path d="M8.5,9.5 L12.5,9.5" />
+        <path d="M8.5,11.5 L12.5,11.5" />
+        <path
+          d="M9.5,4.5 C9.5,5.5940124 9.5,7.26067906 9.5,9.5 C9.5,10.4968262 8.46142578,11.5 7.46332443,11.5 C7.02050712,11.5 6.69939897,11.5 6.5,11.5"
+          opacity=".4"
+        />
+      </g>
+    </Icon>
+  );
+}
+
+export default IconCopy;
diff --git a/src/sentry/static/sentry/app/icons/icon-refresh.js b/src/sentry/static/sentry/app/icons/icon-refresh.js
new file mode 100644
index 0000000000..8b1541cd42
--- /dev/null
+++ b/src/sentry/static/sentry/app/icons/icon-refresh.js
@@ -0,0 +1,17 @@
+import React from 'react';
+import Icon from 'react-icon-base';
+
+function IconRefresh(props) {
+  return (
+    <Icon viewBox="0 0 17 17" {...props}>
+      <g stroke="currentColor" fill="none" strokeLinecap="round" strokeLinejoin="round">
+        <path d="M2.1500001,7 C2.61743494,3.89039704 5.42785439,1.5 8.82500005,1.5 C12.0279791,1.5 14.8121689,3.65079093 15.5,6.5" />
+        <polyline points="5.5 7.5 1.5 7.5 1.5 3.5" />
+        <path d="M14.815044,10 C14.3441566,13.109603 11.5129788,15.5 8.09074116,15.5 C4.85638673,15.5 2.14997449,13.364867 1.46504407,10.5053783" />
+        <polyline points="11.5 9.5 15.5 9.5 15.5 13.5" />
+      </g>
+    </Icon>
+  );
+}
+
+export default IconRefresh;
diff --git a/src/sentry/static/sentry/app/utils/selectText.jsx b/src/sentry/static/sentry/app/utils/selectText.jsx
new file mode 100644
index 0000000000..28d1921146
--- /dev/null
+++ b/src/sentry/static/sentry/app/utils/selectText.jsx
@@ -0,0 +1,13 @@
+export function selectText(node) {
+  if (document.selection) {
+    let range = document.body.createTextRange();
+    range.moveToElementText(node);
+    range.select();
+  } else if (window.getSelection) {
+    let range = document.createRange();
+    range.selectNode(node);
+    let selection = window.getSelection();
+    selection.removeAllRanges();
+    selection.addRange(range);
+  }
+}
diff --git a/src/sentry/static/sentry/app/views/groupDetails/actions.jsx b/src/sentry/static/sentry/app/views/groupDetails/actions.jsx
index 6c74b88e2b..24146b9313 100644
--- a/src/sentry/static/sentry/app/views/groupDetails/actions.jsx
+++ b/src/sentry/static/sentry/app/views/groupDetails/actions.jsx
@@ -1,6 +1,9 @@
+import {browserHistory} from 'react-router';
 import PropTypes from 'prop-types';
 import React from 'react';
-import {browserHistory} from 'react-router';
+
+import {getShortVersion} from '../../utils';
+import {t} from '../../locale';
 import ApiMixin from '../../mixins/apiMixin';
 import CustomIgnoreCountModal from '../../components/customIgnoreCountModal';
 import CustomIgnoreDurationModal from '../../components/customIgnoreDurationModal';
@@ -11,11 +14,10 @@ import GroupActions from '../../actions/groupActions';
 import GroupState from '../../mixins/groupState';
 import IndicatorStore from '../../stores/indicatorStore';
 import IssuePluginActions from '../../components/group/issuePluginActions';
-import MenuItem from '../../components/menuItem';
 import LinkWithConfirmation from '../../components/linkWithConfirmation';
+import MenuItem from '../../components/menuItem';
+import ShareIssue from '../../components/shareIssue';
 import TooltipMixin from '../../mixins/tooltip';
-import {t} from '../../locale';
-import {getShortVersion} from '../../utils';
 
 const ResolveActions = React.createClass({
   propTypes: {
@@ -400,7 +402,7 @@ const DeleteActions = React.createClass({
   }
 });
 
-export default React.createClass({
+const GroupDetailsActions = React.createClass({
   mixins: [
     ApiMixin,
     GroupState,
@@ -411,7 +413,18 @@ export default React.createClass({
   ],
 
   getInitialState() {
-    return {ignoreModal: null};
+    return {ignoreModal: null, shareBusy: false};
+  },
+
+  getShareUrl(shareId, absolute) {
+    if (!shareId) return '';
+
+    let path = `/share/issue/${shareId}/`;
+    if (!absolute) {
+      return path;
+    }
+    let {host, protocol} = window.location;
+    return `${protocol}//${host}${path}`;
   },
 
   onDelete() {
@@ -457,6 +470,38 @@ export default React.createClass({
     );
   },
 
+  onShare(shared) {
+    let group = this.getGroup();
+    let project = this.getProject();
+    let org = this.getOrganization();
+    this.setState({shareBusy: true});
+
+    // not sure why this is a bulkUpdate
+    this.api.bulkUpdate(
+      {
+        orgId: org.slug,
+        projectId: project.slug,
+        itemIds: [group.id],
+        data: {
+          isPublic: shared
+        }
+      },
+      {
+        error: () => {
+          IndicatorStore.add(t('Error sharing'), 'error');
+        },
+        complete: () => {
+          this.setState({shareBusy: false});
+        }
+      }
+    );
+  },
+
+  onToggleShare() {
+    let group = this.getGroup();
+    this.onShare(!group.isPublic);
+  },
+
   onToggleBookmark() {
     this.onUpdate({isBookmarked: !this.getGroup().isBookmarked});
   },
@@ -490,6 +535,7 @@ export default React.createClass({
     let group = this.getGroup();
     let project = this.getProject();
     let org = this.getOrganization();
+    let orgFeatures = new Set(this.getOrganization().features);
 
     let bookmarkClassName = 'group-bookmark btn btn-default btn-sm';
     if (group.isBookmarked) {
@@ -526,6 +572,19 @@ export default React.createClass({
           onDelete={this.onDelete}
           onDiscard={this.onDiscard}
         />
+
+        {orgFeatures.has('shared-issues') &&
+          <div className="btn-group">
+            <ShareIssue
+              shareUrl={this.getShareUrl(group.shareId, true)}
+              isSharing={group.isPublic}
+              group={group}
+              onToggle={this.onToggleShare}
+              onShare={() => this.onShare(true)}
+              busy={this.state.shareBusy}
+            />
+          </div>}
+
         {group.pluginActions.length > 1
           ? <div className="btn-group more">
               <DropdownLink className="btn btn-default btn-sm" title={t('More')}>
@@ -562,3 +621,5 @@ export default React.createClass({
     );
   }
 });
+
+export default GroupDetailsActions;
diff --git a/src/sentry/static/sentry/app/views/groupDetails/header.jsx b/src/sentry/static/sentry/app/views/groupDetails/header.jsx
index c78d281d2e..07ca2fc719 100644
--- a/src/sentry/static/sentry/app/views/groupDetails/header.jsx
+++ b/src/sentry/static/sentry/app/views/groupDetails/header.jsx
@@ -1,6 +1,6 @@
 import PropTypes from 'prop-types';
 import React from 'react';
-import {Link, browserHistory} from 'react-router';
+import {Link} from 'react-router';
 import ApiMixin from '../../mixins/apiMixin';
 import AssigneeSelector from '../../components/assigneeSelector';
 import Count from '../../components/count';
@@ -54,34 +54,6 @@ const GroupHeader = React.createClass({
     );
   },
 
-  onShare() {
-    let {shareId} = this.props.group;
-    return browserHistory.pushState(null, `/share/issue/${shareId}/`);
-  },
-
-  onTogglePublic() {
-    let group = this.props.group;
-    let project = this.getProject();
-    let org = this.getOrganization();
-    let loadingIndicator = IndicatorStore.add(t('Saving changes..'));
-
-    this.api.bulkUpdate(
-      {
-        orgId: org.slug,
-        projectId: project.slug,
-        itemIds: [group.id],
-        data: {
-          isPublic: !group.isPublic
-        }
-      },
-      {
-        complete: () => {
-          IndicatorStore.remove(loadingIndicator);
-        }
-      }
-    );
-  },
-
   getMessage() {
     let data = this.props.group;
     let metadata = data.metadata;
@@ -194,14 +166,6 @@ const GroupHeader = React.createClass({
         </div>
         <GroupSeenBy />
         <GroupActions />
-        {orgFeatures.has('shared-issues') &&
-          <div className="pull-right">
-            <div className="group-privacy">
-              <a onClick={this.onShare}>
-                <span className="icon" /> {t('Share this event')}
-              </a>
-            </div>
-          </div>}
         <ul className="nav nav-tabs">
           <ListLink
             to={`/${orgId}/${projectId}/issues/${groupId}/`}
diff --git a/src/sentry/static/sentry/app/views/organizationIntegrations.jsx b/src/sentry/static/sentry/app/views/organizationIntegrations.jsx
index 0de95cacb8..80a05efd72 100644
--- a/src/sentry/static/sentry/app/views/organizationIntegrations.jsx
+++ b/src/sentry/static/sentry/app/views/organizationIntegrations.jsx
@@ -4,7 +4,7 @@ import {sortArray} from '../utils';
 import {t} from '../locale';
 import AsyncView from './asyncView';
 import Confirm from '../components/confirm';
-import DropdownLink from '../components/dropdownLink';
+import DropdownReact from '../components/dropdownReact';
 import IndicatorStore from '../stores/indicatorStore';
 import MenuItem from '../components/menuItem';
 
@@ -134,7 +134,7 @@ export default class OrganizationIntegrations extends AsyncView {
     return (
       <div className="ref-organization-integrations">
         <div className="pull-right">
-          <DropdownLink
+          <DropdownReact
             anchorRight
             className="btn btn-primary btn-sm"
             title={t('Add Integration')}>
@@ -147,7 +147,7 @@ export default class OrganizationIntegrations extends AsyncView {
                 </MenuItem>
               );
             })}
-          </DropdownLink>
+          </DropdownReact>
         </div>
         <h3 className="m-b-2">
           {t('Integrations')}
diff --git a/src/sentry/static/sentry/app/views/organizationRepositories.jsx b/src/sentry/static/sentry/app/views/organizationRepositories.jsx
index 9a855e46ba..31ef3bc0ac 100644
--- a/src/sentry/static/sentry/app/views/organizationRepositories.jsx
+++ b/src/sentry/static/sentry/app/views/organizationRepositories.jsx
@@ -7,7 +7,7 @@ import {sortArray, parseRepo} from '../utils';
 import {t, tct} from '../locale';
 import Button from '../components/buttons/button';
 import Confirm from '../components/confirm';
-import DropdownLink from '../components/dropdownLink';
+import DropdownReact from '../components/dropdownReact';
 import IndicatorStore from '../stores/indicatorStore';
 import MenuItem from '../components/menuItem';
 import OrganizationSettingsView from './organizationSettingsView';
@@ -309,7 +309,7 @@ class OrganizationRepositories extends OrganizationSettingsView {
     return (
       <div>
         <div className="pull-right">
-          <DropdownLink
+          <DropdownReact
             anchorRight
             className="btn btn-primary btn-sm"
             title={t('Add Repository')}>
@@ -324,7 +324,7 @@ class OrganizationRepositories extends OrganizationSettingsView {
                 </MenuItem>
               );
             })}
-          </DropdownLink>
+          </DropdownReact>
         </div>
         <h3 className="m-b-2">
           {t('Repositories')}
diff --git a/src/sentry/static/sentry/app/views/sharedGroupDetails/index.jsx b/src/sentry/static/sentry/app/views/sharedGroupDetails/index.jsx
index 3a5fb560bf..e86044c2ac 100644
--- a/src/sentry/static/sentry/app/views/sharedGroupDetails/index.jsx
+++ b/src/sentry/static/sentry/app/views/sharedGroupDetails/index.jsx
@@ -1,14 +1,15 @@
+import DocumentTitle from 'react-document-title';
 import React from 'react';
 import jQuery from 'jquery';
-import DocumentTitle from 'react-document-title';
 
+import {t} from '../../locale';
 import ApiMixin from '../../mixins/apiMixin';
 import EventEntries from '../../components/events/eventEntries';
 import Footer from '../../components/footer';
 import LoadingError from '../../components/loadingError';
 import LoadingIndicator from '../../components/loadingIndicator';
+import NotFound from '../../components/errors/notFound';
 import SentryTypes from '../../proptypes';
-
 import SharedGroupHeader from './sharedGroupHeader';
 
 const SharedGroupDetails = React.createClass({
@@ -77,8 +78,13 @@ const SharedGroupDetails = React.createClass({
   render() {
     let group = this.state.group;
 
-    if (this.state.loading || !group) return <LoadingIndicator />;
-    else if (this.state.error) return <LoadingError onRetry={this.fetchData} />;
+    if (this.state.loading) {
+      return <LoadingIndicator />;
+    } else if (!group) {
+      return <NotFound />;
+    } else if (this.state.error) {
+      return <LoadingError onRetry={this.fetchData} />;
+    }
 
     let evt = this.state.group.latestEvent;
 
@@ -94,7 +100,7 @@ const SharedGroupDetails = React.createClass({
                 </a>
                 {this.state.group.permalink &&
                   <a className="pull-right" href={this.state.group.permalink}>
-                    Details
+                    {t('Details')}
                   </a>}
               </div>
               <div className="box-content">
diff --git a/src/sentry/static/sentry/less/components/button.less b/src/sentry/static/sentry/less/components/button.less
index 7c4e55c08e..3c45966981 100644
--- a/src/sentry/static/sentry/less/components/button.less
+++ b/src/sentry/static/sentry/less/components/button.less
@@ -20,6 +20,11 @@
   &:focus {
     outline: none;
   }
+
+  &.button-no-border {
+    border: none;
+    box-shadow: none;
+  }
 }
 
 // Priority concerns
diff --git a/src/sentry/static/sentry/less/shared-components.less b/src/sentry/static/sentry/less/shared-components.less
index 250192994a..84ee09f16e 100644
--- a/src/sentry/static/sentry/less/shared-components.less
+++ b/src/sentry/static/sentry/less/shared-components.less
@@ -1280,7 +1280,6 @@ table.integrations {
 
     .icon-arrow-down {
       position: relative;
-      top: -1px;
       left: 2px;
       font-size: 15px !important;
       color: @gray;
@@ -2528,6 +2527,10 @@ ul.faces {
   }
 }
 
+.dropdown-actor-title {
+  display: flex;
+}
+
 /**
 * Navs
 * ============================================================================
diff --git a/tests/acceptance/test_shared_issue.py b/tests/acceptance/test_shared_issue.py
index 2fe77137a6..623a1591e2 100644
--- a/tests/acceptance/test_shared_issue.py
+++ b/tests/acceptance/test_shared_issue.py
@@ -4,6 +4,7 @@ from datetime import datetime
 from django.utils import timezone
 
 from sentry.testutils import AcceptanceTestCase
+from sentry.models import GroupShare
 from sentry.utils.samples import create_sample_event
 
 
@@ -38,6 +39,13 @@ class SharedIssueTest(AcceptanceTestCase):
             platform='cocoa',
         )
 
-        self.browser.get('/share/issue/{}/'.format(event.group.get_share_id()))
+        group = event.group
+
+        GroupShare.objects.create(
+            project_id=group.project_id,
+            group=group,
+        )
+
+        self.browser.get('/share/issue/{}/'.format(group.get_share_id()))
         self.browser.wait_until('.entries')
         self.browser.snapshot('shared issue cocoa')
diff --git a/tests/js/spec/components/__snapshots__/confirm.spec.jsx.snap b/tests/js/spec/components/__snapshots__/confirm.spec.jsx.snap
index 97891b67b0..23a7026ce6 100644
--- a/tests/js/spec/components/__snapshots__/confirm.spec.jsx.snap
+++ b/tests/js/spec/components/__snapshots__/confirm.spec.jsx.snap
@@ -1,12 +1,10 @@
 // Jest Snapshot v1, https://goo.gl/fbAQLP
 
 exports[`Confirm renders 1`] = `
-<span>
-  <button
-    onClick={[Function]}
-  >
-    Confirm?
-  </button>
+<button
+  onClick={[Function]}
+>
+  Confirm?
   <Modal
     animation={false}
     autoFocus={true}
@@ -61,5 +59,5 @@ exports[`Confirm renders 1`] = `
       </Button>
     </div>
   </Modal>
-</span>
+</button>
 `;
diff --git a/tests/js/spec/components/__snapshots__/dropdownReact.spec.jsx.snap b/tests/js/spec/components/__snapshots__/dropdownReact.spec.jsx.snap
new file mode 100644
index 0000000000..6ac03915d7
--- /dev/null
+++ b/tests/js/spec/components/__snapshots__/dropdownReact.spec.jsx.snap
@@ -0,0 +1,45 @@
+// Jest Snapshot v1, https://goo.gl/fbAQLP
+
+exports[`DropdownReact renders and anchors to left by default 1`] = `
+<span
+  className="dropdown top-level-class"
+>
+  <a
+    className="dropdown-actor dropdown-toggle"
+    onClick={[Function]}
+  >
+    <div
+      className="dropdown-actor-title"
+    >
+      <span>
+        test
+      </span>
+      <i
+        className="icon-arrow-down"
+      />
+    </div>
+  </a>
+</span>
+`;
+
+exports[`DropdownReact renders and anchors to right 1`] = `
+<span
+  className="dropdown top-level-class pull-right anchor-right"
+>
+  <a
+    className="dropdown-actor dropdown-menu-right dropdown-toggle"
+    onClick={[Function]}
+  >
+    <div
+      className="dropdown-actor-title"
+    >
+      <span>
+        test
+      </span>
+      <i
+        className="icon-arrow-down"
+      />
+    </div>
+  </a>
+</span>
+`;
diff --git a/tests/js/spec/components/__snapshots__/shareIssue.spec.jsx.snap b/tests/js/spec/components/__snapshots__/shareIssue.spec.jsx.snap
new file mode 100644
index 0000000000..3c2fadac64
--- /dev/null
+++ b/tests/js/spec/components/__snapshots__/shareIssue.spec.jsx.snap
@@ -0,0 +1,177 @@
+// Jest Snapshot v1, https://goo.gl/fbAQLP
+
+exports[`ShareIssue renders when busy 1`] = `
+<DropdownReact
+  anchorRight={false}
+  caret={true}
+  className="share-issue btn-sm btn btn-default"
+  disabled={false}
+  keepMenuOpen={true}
+  shouldIgnoreClickOutside={[Function]}
+  title={
+    <div
+      style={
+        Object {
+          "marginRight": 4,
+        }
+      }
+    >
+      <FlowLayout
+        center={true}
+        truncate={true}
+      >
+        <IndicatorDot />
+        Share
+      </FlowLayout>
+    </div>
+  }
+>
+  <li
+    style={
+      Object {
+        "padding": "12px 18px",
+      }
+    }
+  >
+    <SpreadLayout
+      center={true}
+      responsive={false}
+      style={
+        Object {
+          "marginBottom": undefined,
+        }
+      }
+    >
+      <SmallHeading>
+        Enable public share link
+      </SmallHeading>
+      <Switch
+        size="sm"
+        toggle={[Function]}
+      />
+    </SpreadLayout>
+  </li>
+</DropdownReact>
+`;
+
+exports[`ShareIssue renders when not shared 1`] = `
+<DropdownReact
+  anchorRight={false}
+  caret={true}
+  className="share-issue btn-sm btn btn-default"
+  disabled={false}
+  keepMenuOpen={true}
+  shouldIgnoreClickOutside={[Function]}
+  title={
+    <div
+      style={
+        Object {
+          "marginRight": 4,
+        }
+      }
+    >
+      <FlowLayout
+        center={true}
+        truncate={true}
+      >
+        <IndicatorDot
+          active={false}
+        />
+        Share
+      </FlowLayout>
+    </div>
+  }
+>
+  <li
+    style={
+      Object {
+        "padding": "12px 18px",
+      }
+    }
+  >
+    <SpreadLayout
+      center={true}
+      responsive={false}
+      style={
+        Object {
+          "marginBottom": undefined,
+        }
+      }
+    >
+      <SmallHeading>
+        Enable public share link
+      </SmallHeading>
+      <Switch
+        isActive={false}
+        size="sm"
+        toggle={[Function]}
+      />
+    </SpreadLayout>
+  </li>
+</DropdownReact>
+`;
+
+exports[`ShareIssue renders when not shared 2`] = `
+<DropdownReact
+  anchorRight={false}
+  caret={true}
+  className="share-issue btn-sm btn btn-default"
+  disabled={false}
+  keepMenuOpen={true}
+  shouldIgnoreClickOutside={[Function]}
+  title={
+    <div
+      style={
+        Object {
+          "marginRight": 4,
+        }
+      }
+    >
+      <FlowLayout
+        center={true}
+        truncate={true}
+      >
+        <IndicatorDot
+          active={true}
+        />
+        Share
+      </FlowLayout>
+    </div>
+  }
+>
+  <li
+    style={
+      Object {
+        "padding": "12px 18px",
+      }
+    }
+  >
+    <SpreadLayout
+      center={true}
+      responsive={false}
+      style={
+        Object {
+          "marginBottom": 12,
+        }
+      }
+    >
+      <SmallHeading>
+        Enable public share link
+      </SmallHeading>
+      <Switch
+        isActive={true}
+        size="sm"
+        toggle={[Function]}
+      />
+    </SpreadLayout>
+    <ShareUrlContainer
+      isSharing={true}
+      onCancel={[Function]}
+      onConfirming={[Function]}
+      onShare={[Function]}
+      onToggle={[Function]}
+      shareUrl="http://sentry.io/share/test/"
+    />
+  </li>
+</DropdownReact>
+`;
diff --git a/tests/js/spec/components/assigneeSelector.spec.jsx b/tests/js/spec/components/assigneeSelector.spec.jsx
index 2e68792696..0eddad94c2 100644
--- a/tests/js/spec/components/assigneeSelector.spec.jsx
+++ b/tests/js/spec/components/assigneeSelector.spec.jsx
@@ -94,6 +94,8 @@ describe('AssigneeSelector', function() {
 
   describe('loading', function() {
     let assigneeSelector;
+    let openMenu;
+
     beforeEach(function() {
       // Reset sandbox because we don't want <LoadingIndicator /> stubbed
       this.sandbox.restore();
@@ -105,13 +107,16 @@ describe('AssigneeSelector', function() {
       MemberListStore.items = [];
       MemberListStore.loaded = false;
       assigneeSelector = mount(<AssigneeSelector id="1337" />);
+      openMenu = () => assigneeSelector.find('a').simulate('click');
     });
 
     it('should initially have loading state', function() {
+      openMenu();
       expect(assigneeSelector.find('LoadingIndicator').exists()).toBe(true);
     });
 
     it('does not have loading state and shows member list after calling MemberListStore.loadInitialData', function() {
+      openMenu();
       MemberListStore.loadInitialData([USER_1, USER_2]);
 
       expect(assigneeSelector.find('Avatar').length).toBe(2);
@@ -119,6 +124,7 @@ describe('AssigneeSelector', function() {
     });
 
     it('does NOT update member list after initial load', function() {
+      openMenu();
       MemberListStore.loadInitialData([USER_1, USER_2]);
 
       expect(assigneeSelector.find('Avatar').length).toBe(2);
@@ -132,13 +138,20 @@ describe('AssigneeSelector', function() {
   });
 
   describe('onFilterKeyDown()', function() {
+    let assigneeSelector;
+    let assignTo;
+
     beforeEach(function() {
       MemberListStore.loaded = true;
-      let assigneeSelector = (this.assigneeSelector = mount(
-        <AssigneeSelector id="1337" />
-      ));
+      if (assigneeSelector) {
+        assigneeSelector.unmount();
+      }
 
-      this.assignTo = this.sandbox.stub(assigneeSelector.instance(), 'assignTo');
+      assigneeSelector = mount(<AssigneeSelector id="1337" />);
+      // open menu
+      assigneeSelector.find('a').simulate('click');
+
+      assignTo = this.sandbox.stub(assigneeSelector.instance(), 'assignTo');
     });
 
     afterEach(function() {
@@ -146,43 +159,45 @@ describe('AssigneeSelector', function() {
     });
 
     it('should assign the first filtered member when the Enter key is pressed and filter is truthy', function() {
-      let assigneeSelector = this.assigneeSelector;
       assigneeSelector.setState({filter: 'Jane'});
 
-      let filterEl = assigneeSelector.instance().filterRef;
-      let filter = assigneeSelector.findWhere(node => node.node === filterEl);
+      let filter = assigneeSelector.find('input');
       filter.simulate('keyDown', {key: 'Enter', keyCode: 13, which: 13});
 
-      expect(this.assignTo.calledOnce).toBeTruthy();
-      expect(this.assignTo.lastCall.args[0]).toHaveProperty('name', 'Jane Doe');
+      expect(assignTo.calledOnce).toBeTruthy();
+      expect(assignTo.lastCall.args[0]).toHaveProperty('name', 'Jane Doe');
     });
 
     it('should do nothing when the Enter key is pressed, but filter is the empty string', function() {
-      let assigneeSelector = this.assigneeSelector;
       assigneeSelector.setState({filter: ''});
 
-      let filterEl = assigneeSelector.instance().filterRef;
-      let filter = assigneeSelector.findWhere(node => node.node === filterEl);
+      let filter = assigneeSelector.find('input');
       filter.simulate('keyDown', {key: 'Enter', keyCode: 13, which: 13});
 
-      expect(this.assignTo.notCalled).toBeTruthy();
+      expect(assignTo.notCalled).toBeTruthy();
     });
 
     it('should do nothing if a non-Enter key is pressed', function() {
-      let assigneeSelector = this.assigneeSelector;
       assigneeSelector.setState({filter: 'Jane'});
 
-      let filterEl = assigneeSelector.instance().filterRef;
-      let filter = assigneeSelector.findWhere(node => node.node === filterEl);
+      let filter = assigneeSelector.find('input');
       filter.simulate('keyDown', {key: 'h', keyCode: 72, which: 72});
-      expect(this.assignTo.notCalled).toBeTruthy();
+      expect(assignTo.notCalled).toBeTruthy();
     });
   });
 
   describe('onFilterKeyUp()', function() {
+    let assigneeSelector;
     beforeEach(function() {
       MemberListStore.loaded = true;
-      this.assigneeSelector = mount(<AssigneeSelector id="1337" />);
+      if (assigneeSelector) {
+        assigneeSelector.unmount();
+      }
+
+      assigneeSelector = mount(<AssigneeSelector id="1337" />);
+
+      // open menu
+      assigneeSelector.find('a').simulate('click');
     });
 
     afterEach(function() {
@@ -190,21 +205,14 @@ describe('AssigneeSelector', function() {
     });
 
     it('should close the dropdown when keyup is triggered with the Escape key', function() {
-      let assigneeSelector = this.assigneeSelector;
-      let closeStub = this.sandbox.stub(assigneeSelector.instance().dropdownRef, 'close');
-
-      let filterEl = assigneeSelector.instance().filterRef;
-      let filter = assigneeSelector.findWhere(node => node.node === filterEl);
+      let filter = assigneeSelector.find('input');
       filter.simulate('keyUp', {key: 'Escape'});
 
-      expect(closeStub.calledOnce).toBeTruthy();
+      expect(assigneeSelector.state('isOpen')).toBe(false);
     });
 
     it('should update the local filter state if any other key is pressed', function() {
-      let assigneeSelector = this.assigneeSelector;
-
-      let filterEl = assigneeSelector.instance().filterRef;
-      let filter = assigneeSelector.findWhere(node => node.node === filterEl);
+      let filter = assigneeSelector.find('input');
       filter.simulate('keyUp', {target: {value: 'foo'}});
       expect(assigneeSelector.state('filter')).toEqual('foo');
     });
diff --git a/tests/js/spec/components/dropdownReact.spec.jsx b/tests/js/spec/components/dropdownReact.spec.jsx
new file mode 100644
index 0000000000..fffcd3c24b
--- /dev/null
+++ b/tests/js/spec/components/dropdownReact.spec.jsx
@@ -0,0 +1,146 @@
+import React from 'react';
+import {shallow, mount} from 'enzyme';
+import DropdownReact from 'app/components/dropdownReact';
+
+describe('DropdownReact', function() {
+  const INPUT_1 = {
+    title: 'test',
+    onOpen: () => {},
+    onClose: () => {},
+    topLevelClasses: 'top-level-class',
+    menuClasses: ''
+  };
+
+  describe('renders', function() {
+    it('and anchors to left by default', function() {
+      let component = shallow(
+        <DropdownReact {...INPUT_1}>
+          <div>1</div>
+          <div>2</div>
+        </DropdownReact>
+      );
+
+      expect(component).toMatchSnapshot();
+    });
+
+    it('and anchors to right', function() {
+      let component = shallow(
+        <DropdownReact {...INPUT_1} anchorRight>
+          <div>1</div>
+          <div>2</div>
+        </DropdownReact>
+      );
+
+      expect(component).toMatchSnapshot();
+    });
+  });
+
+  describe('Uncontrolled', function() {
+    let wrapper;
+
+    beforeEach(function() {
+      if (wrapper) {
+        wrapper.unmount();
+      }
+
+      wrapper = mount(<DropdownReact title="test"><li>hi</li></DropdownReact>);
+    });
+
+    describe('While Closed', function() {
+      it('displays dropdown menu when dropdown actor button clicked', function() {
+        expect(wrapper.find('li').length).toBe(0);
+        expect(wrapper.state('isOpen')).toBe(false);
+
+        // open
+        wrapper.find('a').simulate('click');
+        expect(wrapper.state('isOpen')).toBe(true);
+        expect(wrapper.find('li').length).toBe(1);
+      });
+    });
+    describe('While Opened', function() {
+      beforeEach(function() {
+        // Opens dropdown menu
+        wrapper.find('a').simulate('click');
+      });
+
+      it.skip('closes when clicked outside', function() {
+        jQuery(document).click();
+        expect(wrapper.state('isOpen')).toBe(false);
+        expect(wrapper.instance().checkClickOutside).toHaveBeenCalled();
+      });
+
+      it('closes when dropdown actor button is clicked', function() {
+        wrapper.find('a').simulate('click');
+        expect(wrapper.state('isOpen')).toBe(false);
+      });
+
+      it('closes when dropdown menu item is clicked', function() {
+        wrapper.find('li').simulate('click');
+        expect(wrapper.state('isOpen')).toBe(false);
+      });
+
+      it('does not close when menu is clicked and `keepMenuOpen` is on', function() {
+        wrapper = mount(
+          <DropdownReact title="test" keepMenuOpen><li>hi</li></DropdownReact>
+        );
+        wrapper.find('a').simulate('click');
+        wrapper.find('li').simulate('click');
+        expect(wrapper.state('isOpen')).toBe(true);
+        wrapper.unmount();
+      });
+    });
+  });
+
+  describe('Controlled', function() {
+    let wrapper;
+
+    beforeEach(function() {
+      if (wrapper) {
+        wrapper.unmount();
+      }
+    });
+    describe('Opened', function() {
+      beforeEach(function() {
+        wrapper = mount(
+          <DropdownReact isOpen={true} title="test"><li>hi</li></DropdownReact>
+        );
+      });
+
+      it('does not close when menu is clicked', function() {
+        // open
+        wrapper.find('li').simulate('click');
+        // State does not change
+        expect(wrapper.state('isOpen')).toBe(false);
+        expect(wrapper.find('.dropdown-menu').length).toBe(1);
+      });
+
+      it('does not close when document is clicked', function() {
+        jQuery(document).click();
+        // State does not change
+        expect(wrapper.state('isOpen')).toBe(false);
+        expect(wrapper.find('.dropdown-menu').length).toBe(1);
+      });
+
+      it('does not close when dropdown actor is clicked', function() {
+        wrapper.find('a').simulate('click');
+        // State does not change
+        expect(wrapper.state('isOpen')).toBe(false);
+        expect(wrapper.find('.dropdown-menu').length).toBe(1);
+      });
+    });
+    describe('Closed', function() {
+      beforeEach(function() {
+        wrapper = mount(
+          <DropdownReact isOpen={false} title="test"><li>hi</li></DropdownReact>
+        );
+      });
+
+      it('does not open when dropdown actor is clicked', function() {
+        wrapper.find('a').simulate('click');
+        // State does not change
+        expect(wrapper.state('isOpen')).toBe(false);
+        expect(wrapper.find('.dropdown-menu').length).toBe(0);
+      });
+    });
+  });
+});
diff --git a/tests/js/spec/components/projectHeader/__snapshots__/projectSelector.spec.jsx.snap b/tests/js/spec/components/projectHeader/__snapshots__/projectSelector.spec.jsx.snap
index 0d0d3e477b..e9eaaa525d 100644
--- a/tests/js/spec/components/projectHeader/__snapshots__/projectSelector.spec.jsx.snap
+++ b/tests/js/spec/components/projectHeader/__snapshots__/projectSelector.spec.jsx.snap
@@ -46,28 +46,36 @@ exports[`ProjectSelector render() can filter projects by project name 1`] = `
         </a>
       </Link>
       Select a project
-      <DropdownLink
+      <DropdownReact
         anchorRight={false}
         caret={true}
         disabled={false}
+        isOpen={true}
+        keepMenuOpen={false}
         onClose={[Function]}
         onOpen={[Function]}
         title=""
         topLevelClasses="project-dropdown"
       >
         <span
-          className="project-dropdown dropdown"
+          className="dropdown project-dropdown open"
         >
           <a
-            className="dropdown-toggle"
-            data-toggle="dropdown"
+            className="dropdown-actor dropdown-toggle"
+            onClick={[Function]}
           >
-            <i
-              className="icon-arrow-down"
-            />
+            <div
+              className="dropdown-actor-title"
+            >
+              <span />
+              <i
+                className="icon-arrow-down"
+              />
+            </div>
           </a>
           <ul
             className="dropdown-menu"
+            onClick={[Function]}
           >
             <li
               className="project-filter"
@@ -75,6 +83,7 @@ exports[`ProjectSelector render() can filter projects by project name 1`] = `
               <input
                 onBlur={[Function]}
                 onChange={[Function]}
+                onClick={[Function]}
                 onKeyDown={[Function]}
                 onKeyUp={[Function]}
                 placeholder="Filter projects"
@@ -112,7 +121,7 @@ exports[`ProjectSelector render() can filter projects by project name 1`] = `
             </MenuItem>
           </ul>
         </span>
-      </DropdownLink>
+      </DropdownReact>
     </h3>
   </div>
 </ProjectSelector>
@@ -164,28 +173,36 @@ exports[`ProjectSelector render() can filter projects by team name/project name
         </a>
       </Link>
       Select a project
-      <DropdownLink
+      <DropdownReact
         anchorRight={false}
         caret={true}
         disabled={false}
+        isOpen={true}
+        keepMenuOpen={false}
         onClose={[Function]}
         onOpen={[Function]}
         title=""
         topLevelClasses="project-dropdown"
       >
         <span
-          className="project-dropdown dropdown"
+          className="dropdown project-dropdown open"
         >
           <a
-            className="dropdown-toggle"
-            data-toggle="dropdown"
+            className="dropdown-actor dropdown-toggle"
+            onClick={[Function]}
           >
-            <i
-              className="icon-arrow-down"
-            />
+            <div
+              className="dropdown-actor-title"
+            >
+              <span />
+              <i
+                className="icon-arrow-down"
+              />
+            </div>
           </a>
           <ul
             className="dropdown-menu"
+            onClick={[Function]}
           >
             <li
               className="project-filter"
@@ -193,6 +210,7 @@ exports[`ProjectSelector render() can filter projects by team name/project name
               <input
                 onBlur={[Function]}
                 onChange={[Function]}
+                onClick={[Function]}
                 onKeyDown={[Function]}
                 onKeyUp={[Function]}
                 placeholder="Filter projects"
@@ -251,7 +269,7 @@ exports[`ProjectSelector render() can filter projects by team name/project name
             </MenuItem>
           </ul>
         </span>
-      </DropdownLink>
+      </DropdownReact>
     </h3>
   </div>
 </ProjectSelector>
@@ -271,10 +289,12 @@ exports[`ProjectSelector render() lists projects and has filter 1`] = `
       />
     </Link>
     Select a project
-    <DropdownLink
+    <DropdownReact
       anchorRight={false}
       caret={true}
       disabled={false}
+      isOpen={false}
+      keepMenuOpen={false}
       onClose={[Function]}
       onOpen={[Function]}
       title=""
@@ -286,6 +306,7 @@ exports[`ProjectSelector render() lists projects and has filter 1`] = `
         <input
           onBlur={[Function]}
           onChange={[Function]}
+          onClick={[Function]}
           onKeyDown={[Function]}
           onKeyUp={[Function]}
           placeholder="Filter projects"
@@ -311,7 +332,7 @@ exports[`ProjectSelector render() lists projects and has filter 1`] = `
           Test Project
         </span>
       </MenuItem>
-    </DropdownLink>
+    </DropdownReact>
   </h3>
 </div>
 `;
@@ -330,10 +351,12 @@ exports[`ProjectSelector render() should show empty message and create project b
       />
     </Link>
     Select a project
-    <DropdownLink
+    <DropdownReact
       anchorRight={false}
       caret={true}
       disabled={false}
+      isOpen={false}
+      keepMenuOpen={false}
       onClose={[Function]}
       onOpen={[Function]}
       title=""
@@ -363,7 +386,7 @@ exports[`ProjectSelector render() should show empty message and create project b
           Create project
         </a>
       </MenuItem>
-    </DropdownLink>
+    </DropdownReact>
   </h3>
 </div>
 `;
@@ -382,10 +405,12 @@ exports[`ProjectSelector render() should show empty message with no projects but
       />
     </Link>
     Select a project
-    <DropdownLink
+    <DropdownReact
       anchorRight={false}
       caret={true}
       disabled={false}
+      isOpen={false}
+      keepMenuOpen={false}
       onClose={[Function]}
       onOpen={[Function]}
       title=""
@@ -401,7 +426,7 @@ exports[`ProjectSelector render() should show empty message with no projects but
           You have no projects.
         </div>
       </MenuItem>
-    </DropdownLink>
+    </DropdownReact>
   </h3>
 </div>
 `;
@@ -452,28 +477,36 @@ exports[`ProjectSelector render() shows empty filter message when filtering has
         </a>
       </Link>
       Select a project
-      <DropdownLink
+      <DropdownReact
         anchorRight={false}
         caret={true}
         disabled={false}
+        isOpen={true}
+        keepMenuOpen={false}
         onClose={[Function]}
         onOpen={[Function]}
         title=""
         topLevelClasses="project-dropdown is-empty"
       >
         <span
-          className="project-dropdown is-empty dropdown"
+          className="dropdown project-dropdown is-empty open"
         >
           <a
-            className="dropdown-toggle"
-            data-toggle="dropdown"
+            className="dropdown-actor dropdown-toggle"
+            onClick={[Function]}
           >
-            <i
-              className="icon-arrow-down"
-            />
+            <div
+              className="dropdown-actor-title"
+            >
+              <span />
+              <i
+                className="icon-arrow-down"
+              />
+            </div>
           </a>
           <ul
             className="dropdown-menu"
+            onClick={[Function]}
           >
             <li
               className="project-filter"
@@ -481,6 +514,7 @@ exports[`ProjectSelector render() shows empty filter message when filtering has
               <input
                 onBlur={[Function]}
                 onChange={[Function]}
+                onClick={[Function]}
                 onKeyDown={[Function]}
                 onKeyUp={[Function]}
                 placeholder="Filter projects"
@@ -507,7 +541,7 @@ exports[`ProjectSelector render() shows empty filter message when filtering has
             </MenuItem>
           </ul>
         </span>
-      </DropdownLink>
+      </DropdownReact>
     </h3>
   </div>
 </ProjectSelector>
diff --git a/tests/js/spec/components/projectHeader/projectSelector.spec.jsx b/tests/js/spec/components/projectHeader/projectSelector.spec.jsx
index 4b8a2eceef..88bddf18c9 100644
--- a/tests/js/spec/components/projectHeader/projectSelector.spec.jsx
+++ b/tests/js/spec/components/projectHeader/projectSelector.spec.jsx
@@ -26,7 +26,12 @@ describe('ProjectSelector', function() {
     ],
     access: []
   };
+
   describe('render()', function() {
+    beforeEach(function() {
+      jQuery(document).off('click');
+    });
+
     it('should show empty message with no projects button, when no projects, and has no "project:write" access', function() {
       let wrapper = shallow(
         <ProjectSelector
@@ -72,6 +77,7 @@ describe('ProjectSelector', function() {
 
     it('can filter projects by team name/project name', function() {
       let wrapper = mount(<ProjectSelector organization={mockOrg} projectId="" />, {});
+      wrapper.find('.dropdown-actor').simulate('click');
 
       const input = wrapper.find('.project-filter input');
       // Team name contains test
@@ -83,6 +89,7 @@ describe('ProjectSelector', function() {
 
     it('can filter projects by project name', function() {
       let wrapper = mount(<ProjectSelector organization={mockOrg} projectId="" />, {});
+      wrapper.find('.dropdown-actor').simulate('click');
 
       const input = wrapper.find('.project-filter input');
       input.value = 'another';
@@ -91,8 +98,28 @@ describe('ProjectSelector', function() {
       expect(wrapper).toMatchSnapshot();
     });
 
+    it('does not close dropdown when input is clicked', function() {
+      let wrapper = mount(<ProjectSelector organization={mockOrg} projectId="" />, {});
+      wrapper.find('.dropdown-actor').simulate('click');
+
+      const input = wrapper.find('.project-filter input');
+      input.simulate('click', {target: input});
+
+      expect(wrapper.find('.dropdown-menu').length).toBe(1);
+    });
+
+    it('closes dropdown when project is selected', function() {
+      let wrapper = mount(<ProjectSelector organization={mockOrg} projectId="" />, {});
+      wrapper.find('.dropdown-actor').simulate('click');
+
+      // Select first project
+      wrapper.find('.dropdown-menu [role="presentation"] a').first().simulate('click');
+      expect(wrapper.find('.dropdown-menu').length).toBe(0);
+    });
+
     it('shows empty filter message when filtering has no results', function() {
       let wrapper = mount(<ProjectSelector organization={mockOrg} projectId="" />, {});
+      wrapper.find('.dropdown-actor').simulate('click');
 
       const input = wrapper.find('.project-filter input');
       input.value = 'Foo';
diff --git a/tests/js/spec/components/shareIssue.spec.jsx b/tests/js/spec/components/shareIssue.spec.jsx
new file mode 100644
index 0000000000..b5877ac450
--- /dev/null
+++ b/tests/js/spec/components/shareIssue.spec.jsx
@@ -0,0 +1,31 @@
+import React from 'react';
+import {shallow} from 'enzyme';
+import ShareIssue from 'app/components/shareIssue';
+
+describe('ShareIssue', function() {
+  it('renders when not shared', function() {
+    let wrapper = shallow(
+      <ShareIssue isSharing={false} onToggle={() => {}} onShare={() => {}} />
+    );
+    expect(wrapper).toMatchSnapshot();
+  });
+
+  it('renders when not shared', function() {
+    let wrapper = shallow(
+      <ShareIssue
+        isSharing={true}
+        onToggle={() => {}}
+        onShare={() => {}}
+        shareUrl="http://sentry.io/share/test/"
+      />
+    );
+    expect(wrapper).toMatchSnapshot();
+  });
+
+  it('renders when busy', function() {
+    let wrapper = shallow(
+      <ShareIssue onToggle={() => {}} onShare={() => {}} busy={true} />
+    );
+    expect(wrapper).toMatchSnapshot();
+  });
+});
diff --git a/tests/js/spec/views/__snapshots__/groupMergedView.spec.jsx.snap b/tests/js/spec/views/__snapshots__/groupMergedView.spec.jsx.snap
index eec9515834..ea085049d6 100644
--- a/tests/js/spec/views/__snapshots__/groupMergedView.spec.jsx.snap
+++ b/tests/js/spec/views/__snapshots__/groupMergedView.spec.jsx.snap
@@ -325,18 +325,16 @@ exports[`Issues -> Merged View renders with mocked data 1`] = `
                             onConfirm={[Function]}
                             priority="primary"
                           >
-                            <span>
-                              <a
-                                className="btn btn-sm btn-default disabled"
-                                disabled={true}
-                                onClick={[Function]}
-                                title="Unmerging 0 events"
-                              >
-                                Unmerge
-                                 (
-                                0
-                                )
-                              </a>
+                            <a
+                              className="btn btn-sm btn-default disabled"
+                              disabled={true}
+                              onClick={[Function]}
+                              title="Unmerging 0 events"
+                            >
+                              Unmerge
+                               (
+                              0
+                              )
                               <Modal
                                 animation={false}
                                 autoFocus={true}
@@ -385,7 +383,7 @@ exports[`Issues -> Merged View renders with mocked data 1`] = `
                                   show={false}
                                 />
                               </Modal>
-                            </span>
+                            </a>
                           </Confirm>
                         </LinkWithConfirmation>
                         <Button
@@ -1648,18 +1646,16 @@ exports[`Issues -> Merged View renders with mocked data 2`] = `
                             onConfirm={[Function]}
                             priority="primary"
                           >
-                            <span>
-                              <a
-                                className="btn btn-sm btn-default disabled"
-                                disabled={true}
-                                onClick={[Function]}
-                                title="Unmerging 0 events"
-                              >
-                                Unmerge
-                                 (
-                                0
-                                )
-                              </a>
+                            <a
+                              className="btn btn-sm btn-default disabled"
+                              disabled={true}
+                              onClick={[Function]}
+                              title="Unmerging 0 events"
+                            >
+                              Unmerge
+                               (
+                              0
+                              )
                               <Modal
                                 animation={false}
                                 autoFocus={true}
@@ -1708,7 +1704,7 @@ exports[`Issues -> Merged View renders with mocked data 2`] = `
                                   show={false}
                                 />
                               </Modal>
-                            </span>
+                            </a>
                           </Confirm>
                         </LinkWithConfirmation>
                         <Button
diff --git a/tests/js/spec/views/__snapshots__/groupSimilarView.spec.jsx.snap b/tests/js/spec/views/__snapshots__/groupSimilarView.spec.jsx.snap
index 50b0db7e12..c282b7d945 100644
--- a/tests/js/spec/views/__snapshots__/groupSimilarView.spec.jsx.snap
+++ b/tests/js/spec/views/__snapshots__/groupSimilarView.spec.jsx.snap
@@ -405,18 +405,16 @@ exports[`Issues Similar View renders with mocked data 1`] = `
                                 onConfirm={[Function]}
                                 priority="primary"
                               >
-                                <span>
-                                  <a
-                                    className="btn btn-sm btn-default disabled"
-                                    disabled={true}
-                                    onClick={[Function]}
-                                    title="Merging 0 issues"
-                                  >
-                                    Merge
-                                     (
-                                    0
-                                    )
-                                  </a>
+                                <a
+                                  className="btn btn-sm btn-default disabled"
+                                  disabled={true}
+                                  onClick={[Function]}
+                                  title="Merging 0 issues"
+                                >
+                                  Merge
+                                   (
+                                  0
+                                  )
                                   <Modal
                                     animation={false}
                                     autoFocus={true}
@@ -465,7 +463,7 @@ exports[`Issues Similar View renders with mocked data 1`] = `
                                       show={false}
                                     />
                                   </Modal>
-                                </span>
+                                </a>
                               </Confirm>
                             </LinkWithConfirmation>
                           </div>
@@ -1472,18 +1470,16 @@ exports[`Issues Similar View renders with mocked data 2`] = `
                                 onConfirm={[Function]}
                                 priority="primary"
                               >
-                                <span>
-                                  <a
-                                    className="btn btn-sm btn-default disabled"
-                                    disabled={true}
-                                    onClick={[Function]}
-                                    title="Merging 0 issues"
-                                  >
-                                    Merge
-                                     (
-                                    0
-                                    )
-                                  </a>
+                                <a
+                                  className="btn btn-sm btn-default disabled"
+                                  disabled={true}
+                                  onClick={[Function]}
+                                  title="Merging 0 issues"
+                                >
+                                  Merge
+                                   (
+                                  0
+                                  )
                                   <Modal
                                     animation={false}
                                     autoFocus={true}
@@ -1532,7 +1528,7 @@ exports[`Issues Similar View renders with mocked data 2`] = `
                                       show={false}
                                     />
                                   </Modal>
-                                </span>
+                                </a>
                               </Confirm>
                             </LinkWithConfirmation>
                           </div>
diff --git a/tests/js/spec/views/__snapshots__/organizationApiKeysView.spec.jsx.snap b/tests/js/spec/views/__snapshots__/organizationApiKeysView.spec.jsx.snap
index d234d1bc49..2ef4c172cd 100644
--- a/tests/js/spec/views/__snapshots__/organizationApiKeysView.spec.jsx.snap
+++ b/tests/js/spec/views/__snapshots__/organizationApiKeysView.spec.jsx.snap
@@ -192,16 +192,14 @@ exports[`OrganizationApiKeysView renders 1`] = `
                   onConfirm={[Function]}
                   priority="primary"
                 >
-                  <span>
-                    <a
-                      className="btn btn-default btn-sm"
-                      onClick={[Function]}
-                      title="Remove API Key?"
-                    >
-                      <span
-                        className="icon-trash"
-                      />
-                    </a>
+                  <a
+                    className="btn btn-default btn-sm"
+                    onClick={[Function]}
+                    title="Remove API Key?"
+                  >
+                    <span
+                      className="icon-trash"
+                    />
                     <Modal
                       animation={false}
                       autoFocus={true}
@@ -250,7 +248,7 @@ exports[`OrganizationApiKeysView renders 1`] = `
                         show={false}
                       />
                     </Modal>
-                  </span>
+                  </a>
                 </Confirm>
               </LinkWithConfirmation>
             </td>
diff --git a/tests/js/spec/views/__snapshots__/organizationIntegrations.spec.jsx.snap b/tests/js/spec/views/__snapshots__/organizationIntegrations.spec.jsx.snap
index d14ed794be..6907d12266 100644
--- a/tests/js/spec/views/__snapshots__/organizationIntegrations.spec.jsx.snap
+++ b/tests/js/spec/views/__snapshots__/organizationIntegrations.spec.jsx.snap
@@ -17,27 +17,35 @@ exports[`OrganizationIntegrations render() with a provider renders 1`] = `
       <div
         className="pull-right"
       >
-        <DropdownLink
+        <DropdownReact
           anchorRight={true}
           caret={true}
           className="btn btn-primary btn-sm"
           disabled={false}
+          keepMenuOpen={false}
           title="Add Integration"
         >
           <span
-            className="pull-right anchor-right dropdown"
+            className="dropdown pull-right anchor-right open"
           >
             <a
-              className="btn btn-primary btn-sm dropdown-menu-right dropdown-toggle"
-              data-toggle="dropdown"
+              className="dropdown-actor btn btn-primary btn-sm dropdown-menu-right dropdown-toggle"
+              onClick={[Function]}
             >
-              Add Integration
-              <i
-                className="icon-arrow-down"
-              />
+              <div
+                className="dropdown-actor-title"
+              >
+                <span>
+                  Add Integration
+                </span>
+                <i
+                  className="icon-arrow-down"
+                />
+              </div>
             </a>
             <ul
               className="dropdown-menu"
+              onClick={[Function]}
             >
               <MenuItem
                 noAnchor={true}
@@ -57,7 +65,7 @@ exports[`OrganizationIntegrations render() with a provider renders 1`] = `
               </MenuItem>
             </ul>
           </span>
-        </DropdownLink>
+        </DropdownReact>
       </div>
       <h3
         className="m-b-2"
@@ -109,27 +117,35 @@ exports[`OrganizationIntegrations render() with a provider renders with a reposi
       <div
         className="pull-right"
       >
-        <DropdownLink
+        <DropdownReact
           anchorRight={true}
           caret={true}
           className="btn btn-primary btn-sm"
           disabled={false}
+          keepMenuOpen={false}
           title="Add Integration"
         >
           <span
-            className="pull-right anchor-right dropdown"
+            className="dropdown pull-right anchor-right open"
           >
             <a
-              className="btn btn-primary btn-sm dropdown-menu-right dropdown-toggle"
-              data-toggle="dropdown"
+              className="dropdown-actor btn btn-primary btn-sm dropdown-menu-right dropdown-toggle"
+              onClick={[Function]}
             >
-              Add Integration
-              <i
-                className="icon-arrow-down"
-              />
+              <div
+                className="dropdown-actor-title"
+              >
+                <span>
+                  Add Integration
+                </span>
+                <i
+                  className="icon-arrow-down"
+                />
+              </div>
             </a>
             <ul
               className="dropdown-menu"
+              onClick={[Function]}
             >
               <MenuItem
                 noAnchor={true}
@@ -149,7 +165,7 @@ exports[`OrganizationIntegrations render() with a provider renders with a reposi
               </MenuItem>
             </ul>
           </span>
-        </DropdownLink>
+        </DropdownReact>
       </div>
       <h3
         className="m-b-2"
@@ -206,15 +222,13 @@ exports[`OrganizationIntegrations render() with a provider renders with a reposi
                   onConfirm={[Function]}
                   priority="primary"
                 >
-                  <span>
-                    <button
-                      className="btn btn-default btn-xs"
-                      onClick={[Function]}
-                    >
-                      <span
-                        className="icon icon-trash"
-                      />
-                    </button>
+                  <button
+                    className="btn btn-default btn-xs"
+                    onClick={[Function]}
+                  >
+                    <span
+                      className="icon icon-trash"
+                    />
                     <Modal
                       animation={false}
                       autoFocus={true}
@@ -263,7 +277,7 @@ exports[`OrganizationIntegrations render() with a provider renders with a reposi
                         show={false}
                       />
                     </Modal>
-                  </span>
+                  </button>
                 </Confirm>
               </td>
             </tr>
@@ -285,11 +299,12 @@ exports[`OrganizationIntegrations render() without any providers is loading when
     <div
       className="pull-right"
     >
-      <DropdownLink
+      <DropdownReact
         anchorRight={true}
         caret={true}
         className="btn btn-primary btn-sm"
         disabled={false}
+        keepMenuOpen={false}
         title="Add Integration"
       />
     </div>
@@ -342,30 +357,38 @@ exports[`OrganizationIntegrations render() without any providers renders 1`] = `
       <div
         className="pull-right"
       >
-        <DropdownLink
+        <DropdownReact
           anchorRight={true}
           caret={true}
           className="btn btn-primary btn-sm"
           disabled={false}
+          keepMenuOpen={false}
           title="Add Integration"
         >
           <span
-            className="pull-right anchor-right dropdown"
+            className="dropdown pull-right anchor-right open"
           >
             <a
-              className="btn btn-primary btn-sm dropdown-menu-right dropdown-toggle"
-              data-toggle="dropdown"
+              className="dropdown-actor btn btn-primary btn-sm dropdown-menu-right dropdown-toggle"
+              onClick={[Function]}
             >
-              Add Integration
-              <i
-                className="icon-arrow-down"
-              />
+              <div
+                className="dropdown-actor-title"
+              >
+                <span>
+                  Add Integration
+                </span>
+                <i
+                  className="icon-arrow-down"
+                />
+              </div>
             </a>
             <ul
               className="dropdown-menu"
+              onClick={[Function]}
             />
           </span>
-        </DropdownLink>
+        </DropdownReact>
       </div>
       <h3
         className="m-b-2"
diff --git a/tests/js/spec/views/__snapshots__/organizationRepositories.spec.jsx.snap b/tests/js/spec/views/__snapshots__/organizationRepositories.spec.jsx.snap
index 31c4aa2e80..21caacc450 100644
--- a/tests/js/spec/views/__snapshots__/organizationRepositories.spec.jsx.snap
+++ b/tests/js/spec/views/__snapshots__/organizationRepositories.spec.jsx.snap
@@ -15,27 +15,35 @@ exports[`OrganizationRepositories render() with a provider renders 1`] = `
       <div
         className="pull-right"
       >
-        <DropdownLink
+        <DropdownReact
           anchorRight={true}
           caret={true}
           className="btn btn-primary btn-sm"
           disabled={false}
+          keepMenuOpen={false}
           title="Add Repository"
         >
           <span
-            className="pull-right anchor-right dropdown"
+            className="dropdown pull-right anchor-right open"
           >
             <a
-              className="btn btn-primary btn-sm dropdown-menu-right dropdown-toggle"
-              data-toggle="dropdown"
+              className="dropdown-actor btn btn-primary btn-sm dropdown-menu-right dropdown-toggle"
+              onClick={[Function]}
             >
-              Add Repository
-              <i
-                className="icon-arrow-down"
-              />
+              <div
+                className="dropdown-actor-title"
+              >
+                <span>
+                  Add Repository
+                </span>
+                <i
+                  className="icon-arrow-down"
+                />
+              </div>
             </a>
             <ul
               className="dropdown-menu"
+              onClick={[Function]}
             >
               <MenuItem
                 noAnchor={true}
@@ -124,7 +132,7 @@ exports[`OrganizationRepositories render() with a provider renders 1`] = `
               </MenuItem>
             </ul>
           </span>
-        </DropdownLink>
+        </DropdownReact>
       </div>
       <h3
         className="m-b-2"
@@ -174,27 +182,35 @@ exports[`OrganizationRepositories render() with a provider renders with a reposi
       <div
         className="pull-right"
       >
-        <DropdownLink
+        <DropdownReact
           anchorRight={true}
           caret={true}
           className="btn btn-primary btn-sm"
           disabled={false}
+          keepMenuOpen={false}
           title="Add Repository"
         >
           <span
-            className="pull-right anchor-right dropdown"
+            className="dropdown pull-right anchor-right open"
           >
             <a
-              className="btn btn-primary btn-sm dropdown-menu-right dropdown-toggle"
-              data-toggle="dropdown"
+              className="dropdown-actor btn btn-primary btn-sm dropdown-menu-right dropdown-toggle"
+              onClick={[Function]}
             >
-              Add Repository
-              <i
-                className="icon-arrow-down"
-              />
+              <div
+                className="dropdown-actor-title"
+              >
+                <span>
+                  Add Repository
+                </span>
+                <i
+                  className="icon-arrow-down"
+                />
+              </div>
             </a>
             <ul
               className="dropdown-menu"
+              onClick={[Function]}
             >
               <MenuItem
                 noAnchor={true}
@@ -283,7 +299,7 @@ exports[`OrganizationRepositories render() with a provider renders with a reposi
               </MenuItem>
             </ul>
           </span>
-        </DropdownLink>
+        </DropdownReact>
       </div>
       <h3
         className="m-b-2"
@@ -352,84 +368,82 @@ exports[`OrganizationRepositories render() with a provider renders with a reposi
                   onConfirm={[Function]}
                   priority="primary"
                 >
-                  <span>
-                    <Button
+                  <Button
+                    disabled={false}
+                    onClick={[Function]}
+                    size="xsmall"
+                  >
+                    <button
+                      className="button button-default button-xs"
                       disabled={false}
                       onClick={[Function]}
-                      size="xsmall"
+                      role="button"
                     >
-                      <button
-                        className="button button-default button-xs"
-                        disabled={false}
-                        onClick={[Function]}
-                        role="button"
+                      <FlowLayout
+                        truncate={false}
                       >
-                        <FlowLayout
-                          truncate={false}
+                        <div
+                          className="flow-layout"
                         >
-                          <div
-                            className="flow-layout"
+                          <span
+                            className="button-label"
                           >
                             <span
-                              className="button-label"
+                              className="icon icon-trash"
+                            />
+                            <Modal
+                              animation={false}
+                              autoFocus={true}
+                              backdrop={true}
+                              bsClass="modal"
+                              dialogComponentClass={[Function]}
+                              enforceFocus={true}
+                              keyboard={true}
+                              manager={
+                                ModalManager {
+                                  "containers": Array [],
+                                  "data": Array [],
+                                  "handleContainerOverflow": true,
+                                  "hideSiblingNodes": true,
+                                  "modals": Array [],
+                                }
+                              }
+                              onHide={[Function]}
+                              renderBackdrop={[Function]}
+                              restoreFocus={true}
+                              show={false}
                             >
-                              <span
-                                className="icon icon-trash"
+                              <Modal
+                                autoFocus={true}
+                                backdrop={true}
+                                backdropClassName="modal-backdrop"
+                                backdropTransitionTimeout={150}
+                                containerClassName="modal-open"
+                                dialogTransitionTimeout={300}
+                                enforceFocus={true}
+                                keyboard={true}
+                                manager={
+                                  ModalManager {
+                                    "containers": Array [],
+                                    "data": Array [],
+                                    "handleContainerOverflow": true,
+                                    "hideSiblingNodes": true,
+                                    "modals": Array [],
+                                  }
+                                }
+                                onEntering={[Function]}
+                                onExited={[Function]}
+                                onHide={[Function]}
+                                renderBackdrop={[Function]}
+                                restoreFocus={true}
+                                show={false}
                               />
-                            </span>
-                          </div>
-                        </FlowLayout>
-                      </button>
-                    </Button>
-                    <Modal
-                      animation={false}
-                      autoFocus={true}
-                      backdrop={true}
-                      bsClass="modal"
-                      dialogComponentClass={[Function]}
-                      enforceFocus={true}
-                      keyboard={true}
-                      manager={
-                        ModalManager {
-                          "containers": Array [],
-                          "data": Array [],
-                          "handleContainerOverflow": true,
-                          "hideSiblingNodes": true,
-                          "modals": Array [],
-                        }
-                      }
-                      onHide={[Function]}
-                      renderBackdrop={[Function]}
-                      restoreFocus={true}
-                      show={false}
-                    >
-                      <Modal
-                        autoFocus={true}
-                        backdrop={true}
-                        backdropClassName="modal-backdrop"
-                        backdropTransitionTimeout={150}
-                        containerClassName="modal-open"
-                        dialogTransitionTimeout={300}
-                        enforceFocus={true}
-                        keyboard={true}
-                        manager={
-                          ModalManager {
-                            "containers": Array [],
-                            "data": Array [],
-                            "handleContainerOverflow": true,
-                            "hideSiblingNodes": true,
-                            "modals": Array [],
-                          }
-                        }
-                        onEntering={[Function]}
-                        onExited={[Function]}
-                        onHide={[Function]}
-                        renderBackdrop={[Function]}
-                        restoreFocus={true}
-                        show={false}
-                      />
-                    </Modal>
-                  </span>
+                            </Modal>
+                          </span>
+                        </div>
+                      </FlowLayout>
+                    </button>
+                  </Button>
                 </Confirm>
               </td>
             </tr>
@@ -449,11 +463,12 @@ exports[`OrganizationRepositories render() without any providers is loading when
     <div
       className="pull-right"
     >
-      <DropdownLink
+      <DropdownReact
         anchorRight={true}
         caret={true}
         className="btn btn-primary btn-sm"
         disabled={false}
+        keepMenuOpen={false}
         title="Add Repository"
       />
     </div>
@@ -504,30 +519,38 @@ exports[`OrganizationRepositories render() without any providers renders 1`] = `
       <div
         className="pull-right"
       >
-        <DropdownLink
+        <DropdownReact
           anchorRight={true}
           caret={true}
           className="btn btn-primary btn-sm"
           disabled={false}
+          keepMenuOpen={false}
           title="Add Repository"
         >
           <span
-            className="pull-right anchor-right dropdown"
+            className="dropdown pull-right anchor-right open"
           >
             <a
-              className="btn btn-primary btn-sm dropdown-menu-right dropdown-toggle"
-              data-toggle="dropdown"
+              className="dropdown-actor btn btn-primary btn-sm dropdown-menu-right dropdown-toggle"
+              onClick={[Function]}
             >
-              Add Repository
-              <i
-                className="icon-arrow-down"
-              />
+              <div
+                className="dropdown-actor-title"
+              >
+                <span>
+                  Add Repository
+                </span>
+                <i
+                  className="icon-arrow-down"
+                />
+              </div>
             </a>
             <ul
               className="dropdown-menu"
+              onClick={[Function]}
             />
           </span>
-        </DropdownLink>
+        </DropdownReact>
       </div>
       <h3
         className="m-b-2"
diff --git a/tests/js/spec/views/organizationIntegrations.spec.jsx b/tests/js/spec/views/organizationIntegrations.spec.jsx
index 2c5abf0b4d..ab2cfd5d23 100644
--- a/tests/js/spec/views/organizationIntegrations.spec.jsx
+++ b/tests/js/spec/views/organizationIntegrations.spec.jsx
@@ -48,6 +48,7 @@ describe('OrganizationIntegrations', function() {
           },
           childContextTypes
         });
+        wrapper.find('.dropdown-actor').simulate('click');
         expect(wrapper.state('loading')).toBe(false);
         expect(wrapper).toMatchSnapshot();
       });
@@ -60,6 +61,7 @@ describe('OrganizationIntegrations', function() {
           body: {providers: [TestStubs.GitHubIntegrationProvider()]}
         });
       });
+
       it('renders', function() {
         Client.addMockResponse({
           url: '/organizations/org-slug/integrations/',
@@ -73,9 +75,11 @@ describe('OrganizationIntegrations', function() {
           },
           childContextTypes
         });
+        wrapper.find('.dropdown-actor').simulate('click');
         expect(wrapper.state('loading')).toBe(false);
         expect(wrapper).toMatchSnapshot();
       });
+
       it('renders with a repository', function() {
         Client.addMockResponse({
           url: '/organizations/org-slug/integrations/',
@@ -89,6 +93,7 @@ describe('OrganizationIntegrations', function() {
           },
           childContextTypes
         });
+        wrapper.find('.dropdown-actor').simulate('click');
         expect(wrapper.state('loading')).toBe(false);
         expect(wrapper).toMatchSnapshot();
       });
diff --git a/tests/js/spec/views/organizationRepositories.spec.jsx b/tests/js/spec/views/organizationRepositories.spec.jsx
index d5a475a200..710fc4564c 100644
--- a/tests/js/spec/views/organizationRepositories.spec.jsx
+++ b/tests/js/spec/views/organizationRepositories.spec.jsx
@@ -48,6 +48,7 @@ describe('OrganizationRepositories', function() {
           },
           childContextTypes
         });
+        wrapper.find('.dropdown-actor').simulate('click');
         expect(wrapper.state('loading')).toBe(false);
         expect(wrapper).toMatchSnapshot();
       });
@@ -73,6 +74,7 @@ describe('OrganizationRepositories', function() {
           },
           childContextTypes
         });
+        wrapper.find('.dropdown-actor').simulate('click');
         expect(wrapper.state('loading')).toBe(false);
         expect(wrapper).toMatchSnapshot();
       });
@@ -89,6 +91,7 @@ describe('OrganizationRepositories', function() {
           },
           childContextTypes
         });
+        wrapper.find('.dropdown-actor').simulate('click');
         expect(wrapper.state('loading')).toBe(false);
         expect(wrapper).toMatchSnapshot();
       });
diff --git a/tests/sentry/api/endpoints/test_project_group_index.py b/tests/sentry/api/endpoints/test_project_group_index.py
index cdfad6f3c8..24bc8ff62a 100644
--- a/tests/sentry/api/endpoints/test_project_group_index.py
+++ b/tests/sentry/api/endpoints/test_project_group_index.py
@@ -13,7 +13,7 @@ from sentry import tagstore
 from sentry.models import (
     Activity, EventMapping, Group, GroupAssignee, GroupBookmark, GroupHash, GroupResolution,
     GroupSeen, GroupSnooze, GroupStatus, GroupSubscription,
-    GroupTombstone, Release, UserOption
+    GroupTombstone, Release, UserOption, GroupShare,
 )
 from sentry.models.event import Event
 from sentry.testutils import APITestCase
@@ -1058,8 +1058,8 @@ class GroupUpdateTest(APITestCase):
         ).exists()
 
     def test_set_public(self):
-        group1 = self.create_group(checksum='a' * 32, is_public=False)
-        group2 = self.create_group(checksum='b' * 32, is_public=False)
+        group1 = self.create_group(checksum='a' * 32)
+        group2 = self.create_group(checksum='b' * 32)
 
         self.login_as(user=self.user)
         url = '{url}?id={group1.id}&id={group2.id}'.format(
@@ -1073,19 +1073,26 @@ class GroupUpdateTest(APITestCase):
             }, format='json'
         )
         assert response.status_code == 200
-        assert response.data == {
-            'isPublic': True,
-        }
+        assert response.data['isPublic'] is True
+        assert 'shareId' in response.data
 
         new_group1 = Group.objects.get(id=group1.id)
-        assert new_group1.is_public
+        assert bool(new_group1.get_share_id())
 
         new_group2 = Group.objects.get(id=group2.id)
-        assert new_group2.is_public
+        assert bool(new_group2.get_share_id())
 
     def test_set_private(self):
-        group1 = self.create_group(checksum='a' * 32, is_public=True)
-        group2 = self.create_group(checksum='b' * 32, is_public=True)
+        group1 = self.create_group(checksum='a' * 32)
+        group2 = self.create_group(checksum='b' * 32)
+
+        # Manually mark them as shared
+        for g in group1, group2:
+            GroupShare.objects.create(
+                project_id=g.project_id,
+                group=g,
+            )
+            assert bool(g.get_share_id())
 
         self.login_as(user=self.user)
         url = '{url}?id={group1.id}&id={group2.id}'.format(
@@ -1104,10 +1111,10 @@ class GroupUpdateTest(APITestCase):
         }
 
         new_group1 = Group.objects.get(id=group1.id)
-        assert not new_group1.is_public
+        assert not bool(new_group1.get_share_id())
 
         new_group2 = Group.objects.get(id=group2.id)
-        assert not new_group2.is_public
+        assert not bool(new_group2.get_share_id())
 
     def test_set_has_seen(self):
         group1 = self.create_group(checksum='a' * 32, status=GroupStatus.RESOLVED)
diff --git a/tests/sentry/api/endpoints/test_shared_group_details.py b/tests/sentry/api/endpoints/test_shared_group_details.py
index 42b9e9db0d..9bec2c42af 100644
--- a/tests/sentry/api/endpoints/test_shared_group_details.py
+++ b/tests/sentry/api/endpoints/test_shared_group_details.py
@@ -3,6 +3,7 @@ from __future__ import absolute_import, print_function
 import six
 
 from sentry.testutils import APITestCase
+from sentry.models import GroupShare
 
 
 class SharedGroupDetailsTest(APITestCase):
@@ -12,7 +13,18 @@ class SharedGroupDetailsTest(APITestCase):
         group = self.create_group()
         event = self.create_event(group=group)
 
-        url = '/api/0/shared/issues/{}/'.format(group.get_share_id())
+        share_id = group.get_share_id()
+        assert share_id is None
+
+        GroupShare.objects.create(
+            project_id=group.project_id,
+            group=group,
+        )
+
+        share_id = group.get_share_id()
+        assert share_id is not None
+
+        url = '/api/0/shared/issues/{}/'.format(share_id)
         response = self.client.get(url, format='json')
 
         assert response.status_code == 200, response.content
@@ -29,7 +41,18 @@ class SharedGroupDetailsTest(APITestCase):
         org.flags.disable_shared_issues = True
         org.save()
 
-        url = '/api/0/shared/issues/{}/'.format(group.get_share_id())
+        share_id = group.get_share_id()
+        assert share_id is None
+
+        GroupShare.objects.create(
+            project_id=group.project_id,
+            group=group,
+        )
+
+        share_id = group.get_share_id()
+        assert share_id is not None
+
+        url = '/api/0/shared/issues/{}/'.format(share_id)
         response = self.client.get(url, format='json')
 
         assert response.status_code == 404
@@ -37,7 +60,18 @@ class SharedGroupDetailsTest(APITestCase):
     def test_permalink(self):
         group = self.create_group()
 
-        url = '/api/0/shared/issues/{}/'.format(group.get_share_id())
+        share_id = group.get_share_id()
+        assert share_id is None
+
+        GroupShare.objects.create(
+            project_id=group.project_id,
+            group=group,
+        )
+
+        share_id = group.get_share_id()
+        assert share_id is not None
+
+        url = '/api/0/shared/issues/{}/'.format(share_id)
         response = self.client.get(url, format='json')
 
         assert response.status_code == 200, response.content
