commit d171a56c2a86d6bf3ffeff125f761df46a70a1ba
Author: David Cramer <dcramer@gmail.com>
Date:   Fri Feb 22 19:20:59 2013 -0800

    Add tests for manage projects and manage members

diff --git a/tests/sentry/web/frontend/teams/tests.py b/tests/sentry/web/frontend/teams/tests.py
index d6cc69a363..7f3a86c776 100644
--- a/tests/sentry/web/frontend/teams/tests.py
+++ b/tests/sentry/web/frontend/teams/tests.py
@@ -398,3 +398,42 @@ class AccessGroupProjectsTest(BaseAccessGroupTest):
         assert resp.status_code == 302
         assert resp['Location'] == 'http://testserver' + self.path
         assert self.group.projects.filter(id=project.id).exists()
+
+
+class ManageProjectsTest(BaseTeamTest):
+    @fixture
+    def path(self):
+        return reverse('sentry-manage-team-projects', args=[self.team.slug])
+
+    def test_does_render_with_context(self):
+        # HACK: force project create
+        project = self.project
+        resp = self.client.get(self.path)
+        assert resp.status_code == 200
+        self.assertTemplateUsed(resp, 'sentry/teams/projects/index.html')
+        assert list(resp.context['project_list']) == [project]
+        assert resp.context['team'] == self.team
+        assert resp.context['page'] == 'projects'
+        assert resp.context['SUBSECTION'] == 'projects'
+
+
+class ManageMembersTest(BaseTeamTest):
+    @fixture
+    def path(self):
+        return reverse('sentry-manage-team-members', args=[self.team.slug])
+
+    def test_does_render_with_context(self):
+        pm = self.team.pending_member_set.create(email='foo@example.com')
+        tm = self.team.member_set.get()
+        resp = self.client.get(self.path)
+        assert resp.status_code == 200
+        self.assertTemplateUsed(resp, 'sentry/teams/members/index.html')
+        assert list(resp.context['member_list']) == [
+            (tm, tm.user),
+        ]
+        assert list(resp.context['pending_member_list']) == [
+            (pm, pm.email),
+        ]
+        assert resp.context['team'] == self.team
+        assert resp.context['page'] == 'members'
+        assert resp.context['SUBSECTION'] == 'members'
