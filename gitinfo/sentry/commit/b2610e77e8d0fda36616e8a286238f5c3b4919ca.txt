commit b2610e77e8d0fda36616e8a286238f5c3b4919ca
Author: Lauryn Brown <lauryndbrown@gmail.com>
Date:   Wed Oct 17 10:07:11 2018 -0700

    feat(integrations): VSTS error messaging when accounts not found (#10022)
    
    * started on adding an error message for vsts.
    
    * Added a test
    
    * fixed test

diff --git a/src/sentry/integrations/vsts/integration.py b/src/sentry/integrations/vsts/integration.py
index 5de0c28c5f..966fdfa1a4 100644
--- a/src/sentry/integrations/vsts/integration.py
+++ b/src/sentry/integrations/vsts/integration.py
@@ -474,12 +474,21 @@ class AccountConfigView(PipelineView):
 
         )
         accounts = accounts['value']
+        if not len(accounts):
+            return render_to_response(
+                template='sentry/integrations/vsts-config.html',
+                context={
+                    'no_accounts': True,
+                },
+                request=request,
+            )
         pipeline.bind_state('accounts', accounts)
         account_form = AccountForm(accounts)
         return render_to_response(
             template='sentry/integrations/vsts-config.html',
             context={
                 'form': account_form,
+                'no_accounts': False,
             },
             request=request,
         )
diff --git a/src/sentry/templates/sentry/integrations/vsts-config.html b/src/sentry/templates/sentry/integrations/vsts-config.html
index 68a878df99..5c68d49f92 100644
--- a/src/sentry/templates/sentry/integrations/vsts-config.html
+++ b/src/sentry/templates/sentry/integrations/vsts-config.html
@@ -10,26 +10,31 @@
 
 {% block main %}
 <h3>Azure DevOps Configuration</h3>
-
-<form action="" method="post" class="form-stacked">
-  {% csrf_token %}
-  <input type="hidden" name="provider" value="vsts" />
-
+{% if no_accounts %}
   <p>
-    Configure Azure DevOps to use with Sentry.io.
+    {% trans "No accounts found. Please check that you are an account owner." %}
   </p>
-
-  {{ form|as_crispy_errors }}
-
-  {% for field in form %}
-      {{ field|as_crispy_field }}
-  {% endfor %}
-
-  <fieldset class="form-actions">
-    <button
-      type="submit"
-      class="btn btn-primary"
-      name="save_mappings" value="url">{% trans "Submit" %}</button>
-  </fieldset>
-</form>
+{% else %}
+  <form action="" method="post" class="form-stacked">
+    {% csrf_token %}
+    <input type="hidden" name="provider" value="vsts" />
+
+    <p>
+      {% trans "Configure Azure DevOps to use with Sentry." %}
+    </p>
+
+    {{ form|as_crispy_errors }}
+
+    {% for field in form %}
+        {{ field|as_crispy_field }}
+    {% endfor %}
+
+    <fieldset class="form-actions">
+      <button
+        type="submit"
+        class="btn btn-primary"
+        name="save_mappings" value="url">{% trans "Submit" %}</button>
+    </fieldset>
+  </form>
+{% endif %}
 {% endblock %}
diff --git a/tests/sentry/integrations/vsts/test_provider.py b/tests/sentry/integrations/vsts/test_provider.py
index f0c7f36860..f05d4a2c1e 100644
--- a/tests/sentry/integrations/vsts/test_provider.py
+++ b/tests/sentry/integrations/vsts/test_provider.py
@@ -1,6 +1,6 @@
 
 from __future__ import absolute_import
-from mock import Mock
+from mock import Mock, patch
 import responses
 from django.http import HttpRequest
 from sentry.identity.vsts.provider import VSTSOAuth2CallbackView, VSTSIdentityProvider
@@ -57,6 +57,7 @@ class TestVSTSOAuthCallbackView(TestCase):
 
 class TestAccountConfigView(TestCase):
     def setUp(self):
+        responses.reset()
         account_id = '1234567-8910'
         self.base_url = 'http://sentry2.visualstudio.com/'
         self.accounts = [
@@ -93,7 +94,10 @@ class TestAccountConfigView(TestCase):
         responses.add(
             responses.GET,
             'https://app.vssps.visualstudio.com/_apis/accounts',
-            json=self.accounts,
+            json={
+                'value': self.accounts,
+                'count': len(self.accounts),
+            },
             status=200,
 
         )
@@ -130,14 +134,43 @@ class TestAccountConfigView(TestCase):
     def test_get_accounts(self):
         view = AccountConfigView()
         accounts = view.get_accounts('access-token', 'user-id')
-        assert accounts[0]['accountName'] == 'sentry'
-        assert accounts[1]['accountName'] == 'sentry2'
+        assert accounts['value'][0]['accountName'] == 'sentry'
+        assert accounts['value'][1]['accountName'] == 'sentry2'
 
     def test_account_form(self):
         account_form = AccountForm(self.accounts)
         assert account_form.fields['account'].choices == [
             ('1234567-89', 'sentry'), ('1234567-8910', 'sentry2')]
 
+    @responses.activate
+    @patch('sentry.integrations.vsts.integration.get_user_info')
+    @patch('sentry.integrations.vsts.integration.render_to_response')
+    def test_no_accounts_recieved(self, mock_render_to_response, mock_get_user_info):
+        responses.reset()
+        responses.add(
+            responses.GET,
+            'https://app.vssps.visualstudio.com/_apis/accounts',
+            json={
+                'value': [],
+                'count': 0,
+            },
+            status=200,
+        )
+
+        view = AccountConfigView()
+        request = Mock()
+        request.POST = {}
+        request.user = self.user
+
+        pipeline = Mock()
+        pipeline.fetch_state = lambda key: {'data': {'access_token': '1234567890'}}
+        pipeline.organization = self.organization
+
+        view.dispatch(request, pipeline)
+        assert mock_get_user_info.called is True
+        assert mock_render_to_response.called is True
+        assert mock_render_to_response.call_args[1]['context'] == {'no_accounts': True}
+
 
 class VstsIdentityProviderTest(TestCase):
 
