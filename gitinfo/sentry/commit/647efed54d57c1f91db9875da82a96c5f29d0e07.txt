commit 647efed54d57c1f91db9875da82a96c5f29d0e07
Author: Daniel Griesser <daniel.griesser.86@gmail.com>
Date:   Wed Feb 8 17:40:27 2017 +0100

    Add project reprocessing Endpoint, Remove reprocessing on upload

diff --git a/src/sentry/api/endpoints/project_reprocessing.py b/src/sentry/api/endpoints/project_reprocessing.py
new file mode 100644
index 0000000000..27f4f18813
--- /dev/null
+++ b/src/sentry/api/endpoints/project_reprocessing.py
@@ -0,0 +1,17 @@
+from __future__ import absolute_import
+
+from rest_framework.response import Response
+
+from sentry.api.bases.project import ProjectEndpoint, ProjectReleasePermission
+from sentry.reprocessing import trigger_reprocessing
+
+
+class ProjectReprocessingEndpoint(ProjectEndpoint):
+    permission_classes = (ProjectReleasePermission,)
+
+    def post(self, request, project):
+        """
+        Triggers the reporcessing process as a task
+        """
+        trigger_reprocessing(project)
+        return Response(status=200)
diff --git a/src/sentry/api/urls.py b/src/sentry/api/urls.py
index 2b5f62765e..5c691c1efb 100644
--- a/src/sentry/api/urls.py
+++ b/src/sentry/api/urls.py
@@ -75,6 +75,7 @@ from .endpoints.project_tagkey_values import ProjectTagKeyValuesEndpoint
 from .endpoints.project_users import ProjectUsersEndpoint
 from .endpoints.project_user_reports import ProjectUserReportsEndpoint
 from .endpoints.project_processingissues import ProjectProcessingIssuesEndpoint
+from .endpoints.project_reprocessing import ProjectReprocessingEndpoint
 from .endpoints.release_commits import ReleaseCommitsEndpoint
 from .endpoints.release_details import ReleaseDetailsEndpoint
 from .endpoints.release_files import ReleaseFilesEndpoint
@@ -329,6 +330,9 @@ urlpatterns = patterns(
     url(r'^projects/(?P<organization_slug>[^\/]+)/(?P<project_slug>[^\/]+)/processingissues/$',
         ProjectProcessingIssuesEndpoint.as_view(),
         name='sentry-api-0-project-processing-issues'),
+    url(r'^projects/(?P<organization_slug>[^\/]+)/(?P<project_slug>[^\/]+)/reprocessing/$',
+        ProjectReprocessingEndpoint.as_view(),
+        name='sentry-api-0-project-reprocessing'),
 
     # Load plugin project urls
     url(r'^projects/(?P<organization_slug>[^\/]+)/(?P<project_slug>[^\/]+)/plugins/(?P<plugin_id>[^\/]+)/$',
diff --git a/src/sentry/models/processingissue.py b/src/sentry/models/processingissue.py
index 38ce560800..a92362e952 100644
--- a/src/sentry/models/processingissue.py
+++ b/src/sentry/models/processingissue.py
@@ -42,9 +42,7 @@ class ProcessingIssueManager(BaseManager):
         )
         if type is not None:
             q = q.filter(type=type)
-        probably_resolved = bool(q[:1].all())
         q.delete()
-        return probably_resolved
 
     def find_resolved(self, project_id, limit=100):
         """Returns a list of raw events that generally match the given
diff --git a/src/sentry/reprocessing.py b/src/sentry/reprocessing.py
index 2a2886668e..8195e174db 100644
--- a/src/sentry/reprocessing.py
+++ b/src/sentry/reprocessing.py
@@ -28,8 +28,11 @@ def resolve_processing_issue(project, scope, object=None, type=None):
     if object is None:
         object = '*'
     from sentry.models import ProcessingIssue
-    from sentry.tasks.reprocessing import reprocess_events
     # XXX: consider moving to task?
-    if ProcessingIssue.objects.resolve_processing_issue(
-            project=project, scope=scope, object=object, type=type):
-        reprocess_events.delay(project_id=project.id)
+    ProcessingIssue.objects.resolve_processing_issue(
+        project=project, scope=scope, object=object, type=type)
+
+
+def trigger_reprocessing(project):
+    from sentry.tasks.reprocessing import reprocess_events
+    reprocess_events.delay(project_id=project.id)
