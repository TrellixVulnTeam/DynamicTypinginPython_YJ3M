commit 33702dcc6f94c04c53a4cb7408ceb977df932ed4
Author: William Mak <william@wmak.io>
Date:   Mon Dec 9 17:17:09 2019 -0500

    ref(github): Making it clearer where these errors are from (#15904)
    
    * ref(GitHub): Making it clearer where these errors are from
    
    - Original 401 message doesn't mention that these errors are from
      GitHub, Including that detail to make it more obvious to users
    - Not sure if reusing the 404 error for GitHub enterprise makes sense,
      but not sure what to put there otherwise since the function will
      already say its a 404

diff --git a/src/sentry/integrations/github/integration.py b/src/sentry/integrations/github/integration.py
index 1433f18e75..260b326ec6 100644
--- a/src/sentry/integrations/github/integration.py
+++ b/src/sentry/integrations/github/integration.py
@@ -76,7 +76,7 @@ metadata = IntegrationMetadata(
 )
 
 API_ERRORS = {
-    404: "GitHub returned a 404 Not Found error. If this repository exists, ensure"
+    404: "If this repository exists, ensure"
     " that your installation has permission to access this repository"
     " (https://github.com/settings/installations).",
     401: ERR_UNAUTHORIZED,
@@ -126,12 +126,9 @@ class GitHubIntegration(IntegrationInstallation, GitHubIssueBasic, RepositoryMix
     def message_from_error(self, exc):
         if isinstance(exc, ApiError):
             message = API_ERRORS.get(exc.code)
-            if message:
-                return message
-            return "Error Communicating with GitHub (HTTP %s): %s" % (
-                exc.code,
-                exc.json.get("message", "unknown error") if exc.json else "unknown error",
-            )
+            if message is None:
+                message = exc.json.get("message", "unknown error") if exc.json else "unknown error"
+            return "Error Communicating with GitHub (HTTP %s): %s" % (exc.code, message)
         else:
             return ERR_INTERNAL
 
diff --git a/src/sentry/integrations/github_enterprise/integration.py b/src/sentry/integrations/github_enterprise/integration.py
index e189be8dbb..5379cf2db9 100644
--- a/src/sentry/integrations/github_enterprise/integration.py
+++ b/src/sentry/integrations/github_enterprise/integration.py
@@ -93,7 +93,12 @@ metadata = IntegrationMetadata(
 )
 
 
-API_ERRORS = {404: "GitHub Enterprise returned a 404 Not Found error.", 401: ERR_UNAUTHORIZED}
+API_ERRORS = {
+    404: "If this repository exists, ensure"
+    + " that your installation has permission to access this repository"
+    + " (https://github.com/settings/installations).",
+    401: ERR_UNAUTHORIZED,
+}
 
 
 class GitHubEnterpriseIntegration(IntegrationInstallation, GitHubIssueBasic, RepositoryMixin):
@@ -135,12 +140,9 @@ class GitHubEnterpriseIntegration(IntegrationInstallation, GitHubIssueBasic, Rep
     def message_from_error(self, exc):
         if isinstance(exc, ApiError):
             message = API_ERRORS.get(exc.code)
-            if message:
-                return message
-            return "Error Communicating with GitHub Enterprise (HTTP %s): %s" % (
-                exc.code,
-                exc.json.get("message", "unknown error") if exc.json else "unknown error",
-            )
+            if message is None:
+                message = exc.json.get("message", "unknown error") if exc.json else "unknown error"
+            return "Error Communicating with GitHub Enterprise (HTTP %s): %s" % (exc.code, message)
         else:
             return ERR_INTERNAL
 
