commit c5b5c936112726eb30a16ed1188bdea430a6e53d
Author: Max Bittker <maxbittker@gmail.com>
Date:   Thu Feb 22 10:52:12 2018 -0800

    chore(actions): new group action creator, moved assignTo (#7300)
    
    * chore(actions): new group action creator, moved assignTo
    
    * bvg rvw
    
    * do imports right

diff --git a/src/sentry/static/sentry/app/actionCreators/group.jsx b/src/sentry/static/sentry/app/actionCreators/group.jsx
new file mode 100644
index 0000000000..aefa954bcb
--- /dev/null
+++ b/src/sentry/static/sentry/app/actionCreators/group.jsx
@@ -0,0 +1,32 @@
+import {Client} from '../api';
+import GroupActions from '../actions/groupActions';
+
+export function assignTo(params) {
+  const api = new Client();
+
+  let endpoint = `/issues/${params.id}/`;
+
+  let id = api.uniqueId();
+
+  GroupActions.assignTo(id, params.id, {
+    email: (params.member && params.member.email) || '',
+  });
+
+  let request = api.requestPromise(endpoint, {
+    method: 'PUT',
+    // Sending an empty value to assignedTo is the same as "clear",
+    // so if no member exists, that implies that we want to clear the
+    // current assignee.
+    data: {assignedTo: (params.member && params.member.id) || ''},
+  });
+
+  request
+    .then(data => {
+      GroupActions.assignToSuccess(id, params.id, data);
+    })
+    .catch(data => {
+      GroupActions.assignTodata(id, params.id, data);
+    });
+
+  return request;
+}
diff --git a/src/sentry/static/sentry/app/actionCreators/members.jsx b/src/sentry/static/sentry/app/actionCreators/members.jsx
index 8eedf9e446..4e23f80068 100644
--- a/src/sentry/static/sentry/app/actionCreators/members.jsx
+++ b/src/sentry/static/sentry/app/actionCreators/members.jsx
@@ -15,7 +15,7 @@ export function updateMember(api, params) {
       error: data => {
         MemberActions.updateError(data);
         reject(data);
-      }
+      },
     })
   );
 }
@@ -29,7 +29,7 @@ export function resendMemberInvite(api, params) {
       method: 'PUT',
       data: {
         regenerate: params.regenerate,
-        reinvite: true
+        reinvite: true,
       },
       success: data => {
         MemberActions.resendMemberInviteSuccess(data);
@@ -38,7 +38,7 @@ export function resendMemberInvite(api, params) {
       error: data => {
         MemberActions.resendMemberInviteError(data);
         reject(data);
-      }
+      },
     })
   );
 }
diff --git a/src/sentry/static/sentry/app/api.jsx b/src/sentry/static/sentry/app/api.jsx
index cc2a31d508..6bf8294a44 100644
--- a/src/sentry/static/sentry/app/api.jsx
+++ b/src/sentry/static/sentry/app/api.jsx
@@ -258,31 +258,4 @@ export class Client {
       options
     );
   }
-
-  assignTo(params, options) {
-    let path = '/issues/' + params.id + '/';
-    let id = this.uniqueId();
-
-    GroupActions.assignTo(id, params.id, {
-      email: (params.member && params.member.email) || '',
-    });
-
-    return this._wrapRequest(
-      path,
-      {
-        method: 'PUT',
-        // Sending an empty value to assignedTo is the same as "clear",
-        // so if no member exists, that implies that we want to clear the
-        // current assignee.
-        data: {assignedTo: (params.member && params.member.id) || ''},
-        success: response => {
-          GroupActions.assignToSuccess(id, params.id, response);
-        },
-        error: error => {
-          GroupActions.assignToError(id, params.id, error);
-        },
-      },
-      options
-    );
-  }
 }
diff --git a/src/sentry/static/sentry/app/components/assigneeSelector.jsx b/src/sentry/static/sentry/app/components/assigneeSelector.jsx
index e4411403f5..05e0f2baee 100644
--- a/src/sentry/static/sentry/app/components/assigneeSelector.jsx
+++ b/src/sentry/static/sentry/app/components/assigneeSelector.jsx
@@ -7,12 +7,12 @@ import classNames from 'classnames';
 import {t} from '../locale';
 import {userDisplayName} from '../utils/formatters';
 import {valueIsEqual} from '../utils';
-import ApiMixin from '../mixins/apiMixin';
 import Avatar from '../components/avatar';
 import ConfigStore from '../stores/configStore';
 import DropdownLink from './dropdownLink';
 import FlowLayout from './flowLayout';
 import GroupStore from '../stores/groupStore';
+import {assignTo} from '../actionCreators/group';
 import LoadingIndicator from '../components/loadingIndicator';
 import MemberListStore from '../stores/memberListStore';
 import MenuItem from './menuItem';
@@ -31,7 +31,6 @@ const AssigneeSelector = createReactClass({
     TooltipMixin({
       selector: '.tip',
     }),
-    ApiMixin,
   ],
 
   statics: {
@@ -129,12 +128,12 @@ const AssigneeSelector = createReactClass({
   },
 
   assignTo(member) {
-    this.api.assignTo({id: this.props.id, member});
+    assignTo({id: this.props.id, member});
     this.setState({filter: '', loading: true});
   },
 
   clearAssignTo() {
-    this.api.assignTo({id: this.props.id});
+    assignTo({id: this.props.id});
     this.setState({filter: '', loading: true});
   },
 
diff --git a/src/sentry/static/sentry/app/components/group/suggestedOwners.jsx b/src/sentry/static/sentry/app/components/group/suggestedOwners.jsx
index 6745865be9..3d20793fc0 100644
--- a/src/sentry/static/sentry/app/components/group/suggestedOwners.jsx
+++ b/src/sentry/static/sentry/app/components/group/suggestedOwners.jsx
@@ -8,6 +8,7 @@ import Avatar from '../avatar';
 import TooltipMixin from '../../mixins/tooltip';
 import ApiMixin from '../../mixins/apiMixin';
 import GroupState from '../../mixins/groupState';
+import {assignTo} from '../../actionCreators/group';
 import {t} from '../../locale';
 
 const SuggestedOwners = createReactClass({
@@ -80,7 +81,7 @@ const SuggestedOwners = createReactClass({
 
   assignTo(member) {
     if (member.id !== undefined) {
-      this.api.assignTo({id: this.props.event.groupID, member});
+      assignTo({id: this.props.event.groupID, member});
     }
   },
 
