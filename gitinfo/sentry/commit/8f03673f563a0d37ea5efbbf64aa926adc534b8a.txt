commit 8f03673f563a0d37ea5efbbf64aa926adc534b8a
Author: Lyn Nagara <lyn.nagara@gmail.com>
Date:   Mon Jun 17 16:45:38 2019 -0700

    feat(events-v2): Support custom column widths for each view (#13714)
    
    Allow each view to define custom column widths for each field

diff --git a/src/sentry/static/sentry/app/views/organizationEventsV2/data.jsx b/src/sentry/static/sentry/app/views/organizationEventsV2/data.jsx
index f1618d4194..1c64f86b8b 100644
--- a/src/sentry/static/sentry/app/views/organizationEventsV2/data.jsx
+++ b/src/sentry/static/sentry/app/views/organizationEventsV2/data.jsx
@@ -32,6 +32,7 @@ export const ALL_VIEWS = deepFreeze([
       'user.ip',
       'environment',
     ],
+    columnWidths: ['3fr', '80px', '1fr', '1fr', '1.5fr'],
   },
   {
     id: 'errors',
@@ -43,6 +44,7 @@ export const ALL_VIEWS = deepFreeze([
       query: 'event.type:error',
     },
     tags: ['error.type', 'project.name'],
+    columnWidths: ['3fr', '70px', '70px', '1fr', '1.5fr'],
   },
   {
     id: 'csp',
@@ -60,6 +62,7 @@ export const ALL_VIEWS = deepFreeze([
       'os.name',
       'effective-directive',
     ],
+    columnWidths: ['3fr', '70px', '70px', '1fr', '1.5fr'],
   },
 ]);
 
diff --git a/src/sentry/static/sentry/app/views/organizationEventsV2/table.jsx b/src/sentry/static/sentry/app/views/organizationEventsV2/table.jsx
index 1ffca544a4..1d59bd44cb 100644
--- a/src/sentry/static/sentry/app/views/organizationEventsV2/table.jsx
+++ b/src/sentry/static/sentry/app/views/organizationEventsV2/table.jsx
@@ -56,7 +56,7 @@ export default class Table extends React.Component {
     }
 
     return data.map((row, idx) => (
-      <Row key={idx} className={getGridStyle(fields.length)}>
+      <Row key={idx} className={getGridStyle(view)}>
         {fields.map(field => {
           const target = {
             pathname: `/organizations/${organization.slug}/events/`,
@@ -91,7 +91,7 @@ export default class Table extends React.Component {
 
     return (
       <Panel>
-        <TableHeader className={getGridStyle(fields.length)}>
+        <TableHeader className={getGridStyle(view)}>
           {fields.map(field => (
             <HeaderItem key={field}>
               {SPECIAL_FIELDS.hasOwnProperty(field)
@@ -110,10 +110,14 @@ export default class Table extends React.Component {
   }
 }
 
-function getGridStyle(colCount) {
+function getGridStyle(view) {
+  const cols = Array.isArray(view.columnWidths)
+    ? view.columnWidths.join(' ')
+    : `3fr repeat(${view.data.fields.length - 1}, 1fr)`;
+
   return css`
     display: grid;
-    grid-template-columns: 3fr repeat(${colCount - 1}, 1fr);
+    grid-template-columns: ${cols};
     grid-gap: ${space(1)};
   `;
 }
