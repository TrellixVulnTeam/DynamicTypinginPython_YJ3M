commit 680efc930955f25a932a0d6aad0f39db372db6b0
Author: Priscila Oliveira <priscilawebdev@gmail.com>
Date:   Wed Feb 12 10:33:05 2020 +0100

    ref(ui):  Added tooltip - Datascrubbers v2 - Part 1 (#16942)

diff --git a/src/sentry/static/sentry/app/components/events/eventEntries.jsx b/src/sentry/static/sentry/app/components/events/eventEntries.jsx
index 127f1c17bf..35b8782566 100644
--- a/src/sentry/static/sentry/app/components/events/eventEntries.jsx
+++ b/src/sentry/static/sentry/app/components/events/eventEntries.jsx
@@ -20,7 +20,7 @@ import EventErrors from 'app/components/events/errors';
 import EventExtraData from 'app/components/events/extraData';
 import EventGroupingInfo from 'app/components/events/groupingInfo';
 import EventPackageData from 'app/components/events/packageData';
-import EventSdk from 'app/components/events/sdk';
+import EventSdk from 'app/components/events/eventSdk';
 import EventSdkUpdates from 'app/components/events/sdkUpdates';
 import EventTags from 'app/components/events/eventTags';
 import EventUserFeedback from 'app/components/events/userFeedback';
diff --git a/src/sentry/static/sentry/app/components/events/eventSdk.tsx b/src/sentry/static/sentry/app/components/events/eventSdk.tsx
new file mode 100644
index 0000000000..6d59331fa5
--- /dev/null
+++ b/src/sentry/static/sentry/app/components/events/eventSdk.tsx
@@ -0,0 +1,37 @@
+import React from 'react';
+
+import SentryTypes from 'app/sentryTypes';
+import EventDataSection from 'app/components/events/eventDataSection';
+import Annotated from 'app/components/events/meta/annotated';
+import {t} from 'app/locale';
+
+type Props = {
+  event: SentryTypes.Event;
+};
+
+const EventSdk = ({event: {sdk: data}}: Props) => (
+  <EventDataSection type="sdk" title={t('SDK')}>
+    <table className="table key-value">
+      <tbody>
+        <tr key="name">
+          <td className="key">{t('Name')}</td>
+          <td className="value">
+            <Annotated object={data} objectKey="name">
+              {value => <pre>{value}</pre>}
+            </Annotated>
+          </td>
+        </tr>
+        <tr key="version">
+          <td className="key">{t('Version')}</td>
+          <td className="value">
+            <Annotated object={data} objectKey="version">
+              {value => <pre>{value}</pre>}
+            </Annotated>
+          </td>
+        </tr>
+      </tbody>
+    </table>
+  </EventDataSection>
+);
+
+export default EventSdk;
diff --git a/src/sentry/static/sentry/app/components/events/interfaces/exceptionContent.jsx b/src/sentry/static/sentry/app/components/events/interfaces/exceptionContent.jsx
index f849a5c605..faa50b9076 100644
--- a/src/sentry/static/sentry/app/components/events/interfaces/exceptionContent.jsx
+++ b/src/sentry/static/sentry/app/components/events/interfaces/exceptionContent.jsx
@@ -26,7 +26,7 @@ class ExceptionContent extends React.Component {
             <span>{exc.type}</span>
           </h5>
 
-          <Annotated object={exc} prop="value" required>
+          <Annotated object={exc} objectKey="value" required>
             {value => (
               <pre className="exc-message" style={{marginTop: 0}}>
                 {value}
diff --git a/src/sentry/static/sentry/app/components/events/interfaces/message.jsx b/src/sentry/static/sentry/app/components/events/interfaces/message.jsx
index 3c398f30eb..d3e66425e4 100644
--- a/src/sentry/static/sentry/app/components/events/interfaces/message.jsx
+++ b/src/sentry/static/sentry/app/components/events/interfaces/message.jsx
@@ -38,7 +38,7 @@ class MessageInterface extends React.Component {
     return (
       <EventDataSection event={event} type="message" title={t('Message')}>
         <pre className="plain">
-          <Annotated object={data} prop="formatted" />
+          <Annotated object={data} objectKey="formatted" />
         </pre>
         {this.renderParams()}
       </EventDataSection>
diff --git a/src/sentry/static/sentry/app/components/events/meta/annotated.jsx b/src/sentry/static/sentry/app/components/events/meta/annotated.jsx
deleted file mode 100644
index d97357f79a..0000000000
--- a/src/sentry/static/sentry/app/components/events/meta/annotated.jsx
+++ /dev/null
@@ -1,45 +0,0 @@
-import PropTypes from 'prop-types';
-import React from 'react';
-
-import AnnotatedText from 'app/components/events/meta/annotatedText';
-import MetaData from 'app/components/events/meta/metaData';
-
-/**
- * Returns the value of `object[prop]` and returns an annotated component if
- * there is meta data
- */
-function Annotated({children, object, prop, required, ...other}) {
-  return (
-    <MetaData object={object} prop={prop} required={required}>
-      {(value, meta) => {
-        if (meta) {
-          value = (
-            <AnnotatedText
-              value={value}
-              chunks={meta.chunks}
-              remarks={meta.rem}
-              errors={meta.err}
-              props={other}
-            />
-          );
-        }
-
-        return children(value);
-      }}
-    </MetaData>
-  );
-}
-
-Annotated.propTypes = {
-  object: PropTypes.object.isRequired,
-  prop: PropTypes.string.isRequired,
-  required: PropTypes.bool,
-  children: PropTypes.func,
-};
-
-Annotated.defaultProps = {
-  children: value => (typeof value === 'undefined' ? null : value),
-  required: false,
-};
-
-export default Annotated;
diff --git a/src/sentry/static/sentry/app/components/events/meta/annotated.tsx b/src/sentry/static/sentry/app/components/events/meta/annotated.tsx
new file mode 100644
index 0000000000..b1d4095037
--- /dev/null
+++ b/src/sentry/static/sentry/app/components/events/meta/annotated.tsx
@@ -0,0 +1,54 @@
+import React from 'react';
+
+import AnnotatedText from 'app/components/events/meta/annotatedText';
+import MetaData from 'app/components/events/meta/metaData';
+import {isFunction} from 'app/utils';
+
+type Props<Values> = {
+  object: Values;
+  objectKey: Extract<keyof Values, string>;
+  required?: boolean;
+  children: (value: string | null | React.ReactNode) => React.ReactNode | string;
+};
+
+type ReturnedMetaValue = string | number | boolean | null;
+/**
+ * Returns the value of `object[prop]` and returns an annotated component if
+ * there is meta data
+ */
+const Annotated = <Values extends {}>({
+  children,
+  object,
+  objectKey,
+  required = false,
+}: Props<Values>) => {
+  const getToBeReturnedMetaValue = (
+    metaValue: ReturnedMetaValue
+  ): React.ReactNode | ReturnedMetaValue => {
+    if (typeof metaValue === 'number' || typeof metaValue === 'boolean') {
+      return metaValue;
+    }
+
+    return metaValue || null;
+  };
+  return (
+    <MetaData object={object} prop={objectKey} required={required}>
+      {(value, meta) => {
+        let toBeReturned = getToBeReturnedMetaValue(value);
+        if (meta) {
+          toBeReturned = (
+            <AnnotatedText
+              value={value}
+              chunks={meta.chunks}
+              remarks={meta.rem}
+              errors={meta.err}
+            />
+          );
+        }
+        return isFunction(children) ? children(toBeReturned) : toBeReturned;
+      }}
+    </MetaData>
+  );
+};
+
+export default Annotated;
diff --git a/src/sentry/static/sentry/app/components/events/sdk.jsx b/src/sentry/static/sentry/app/components/events/sdk.jsx
deleted file mode 100644
index 0dc6bb4f0b..0000000000
--- a/src/sentry/static/sentry/app/components/events/sdk.jsx
+++ /dev/null
@@ -1,39 +0,0 @@
-import React from 'react';
-import SentryTypes from 'app/sentryTypes';
-
-import EventDataSection from 'app/components/events/eventDataSection';
-import {t} from 'app/locale';
-
-class EventSdk extends React.Component {
-  static propTypes = {
-    event: SentryTypes.Event.isRequired,
-  };
-
-  render() {
-    const {event} = this.props;
-    const data = event.sdk;
-
-    return (
-      <EventDataSection event={event} type="sdk" title={t('SDK')} wrapTitle>
-        <table className="table key-value">
-          <tbody>
-            <tr key="name">
-              <td className="key">{t('Name')}</td>
-              <td className="value">
-                <pre>{data.name}</pre>
-              </td>
-            </tr>
-            <tr key="version">
-              <td className="key">{t('Version')}</td>
-              <td className="value">
-                <pre>{data.version}</pre>
-              </td>
-            </tr>
-          </tbody>
-        </table>
-      </EventDataSection>
-    );
-  }
-}
-
-export default EventSdk;
diff --git a/src/sentry/static/sentry/app/utils.tsx b/src/sentry/static/sentry/app/utils.tsx
index dc005b294d..b688488155 100644
--- a/src/sentry/static/sentry/app/utils.tsx
+++ b/src/sentry/static/sentry/app/utils.tsx
@@ -274,3 +274,5 @@ export function generateQueryWithTag(
 
   return query;
 }
+
+export const isFunction = (value: any): value is Function => typeof value === 'function';
diff --git a/tests/js/spec/components/events/__snapshots__/crashContent.spec.jsx.snap b/tests/js/spec/components/events/__snapshots__/crashContent.spec.jsx.snap
index a3f3719aab..42fd3dbecc 100644
--- a/tests/js/spec/components/events/__snapshots__/crashContent.spec.jsx.snap
+++ b/tests/js/spec/components/events/__snapshots__/crashContent.spec.jsx.snap
@@ -91,7 +91,7 @@ exports[`CrashContent renders with meta data 1`] = `
                 "value": "python err A949AE01EBB07300D62AE0178F0944DD21F8C98C err",
               }
             }
-            prop="value"
+            objectKey="value"
             required={true}
           >
             <MetaData
diff --git a/tests/js/spec/components/events/meta/annotated.spec.jsx b/tests/js/spec/components/events/meta/annotated.spec.jsx
index bbfcbef179..a85d7c45e2 100644
--- a/tests/js/spec/components/events/meta/annotated.spec.jsx
+++ b/tests/js/spec/components/events/meta/annotated.spec.jsx
@@ -32,7 +32,7 @@ describe('Annotated', () => {
         value: 'foo',
       };
       mount(
-        <Annotated object={obj} prop="value">
+        <Annotated object={obj} objectKey="value">
           {mock}
         </Annotated>
       );
@@ -43,7 +43,7 @@ describe('Annotated', () => {
       const obj = {
         value: 'foo',
       };
-      mount(<Annotated object={obj} prop="invalid" />);
+      mount(<Annotated object={obj} objectKey="invalid" />);
     });
 
     it('renders a number', () => {
@@ -51,7 +51,7 @@ describe('Annotated', () => {
         value: 0,
       };
       mount(
-        <Annotated object={obj} prop="value">
+        <Annotated object={obj} objectKey="value">
           {mock}
         </Annotated>
       );
@@ -63,7 +63,7 @@ describe('Annotated', () => {
         value: false,
       };
       mount(
-        <Annotated object={obj} prop="value">
+        <Annotated object={obj} objectKey="value">
           {mock}
         </Annotated>
       );
@@ -84,7 +84,7 @@ describe('Annotated', () => {
         },
       });
       mount(
-        <Annotated object={obj} prop="value">
+        <Annotated object={obj} objectKey="value">
           {mock}
         </Annotated>
       );
@@ -95,7 +95,7 @@ describe('Annotated', () => {
       const obj = createEvent(null, {});
 
       mount(
-        <Annotated object={obj} prop="value" required>
+        <Annotated object={obj} objectKey="value" required>
           {mock}
         </Annotated>
       );
@@ -109,7 +109,7 @@ describe('Annotated', () => {
       const obj = createEvent('foo', {err: ['something']});
 
       mount(
-        <Annotated object={obj} prop="value">
+        <Annotated object={obj} objectKey="value">
           {mock}
         </Annotated>
       );
@@ -128,7 +128,7 @@ describe('Annotated', () => {
       const obj = createEvent('foo', {rem: [{type: 't'}], chunks: [{text: 'foo'}]});
 
       mount(
-        <Annotated object={obj} prop="value">
+        <Annotated object={obj} objectKey="value">
           {mock}
         </Annotated>
       );
@@ -147,7 +147,7 @@ describe('Annotated', () => {
       const obj = createEvent(null, {err: ['something']});
 
       mount(
-        <Annotated object={obj} prop="value">
+        <Annotated object={obj} objectKey="value">
           {mock}
         </Annotated>
       );
diff --git a/tests/js/spec/views/sharedGroupDetails/__snapshots__/index.spec.jsx.snap b/tests/js/spec/views/sharedGroupDetails/__snapshots__/index.spec.jsx.snap
index c0a6920f46..302e0b1993 100644
--- a/tests/js/spec/views/sharedGroupDetails/__snapshots__/index.spec.jsx.snap
+++ b/tests/js/spec/views/sharedGroupDetails/__snapshots__/index.spec.jsx.snap
@@ -915,8 +915,7 @@ exports[`SharedGroupDetails renders 1`] = `
                                               "formatted": "Blocked script",
                                             }
                                           }
-                                          prop="formatted"
-                                          required={false}
+                                          objectKey="formatted"
                                         >
                                           <MetaData
                                             object={
