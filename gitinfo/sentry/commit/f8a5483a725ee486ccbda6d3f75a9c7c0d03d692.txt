commit f8a5483a725ee486ccbda6d3f75a9c7c0d03d692
Author: Mark Story <mark@mark-story.com>
Date:   Tue Jan 15 11:46:12 2019 -0500

    fix(search) Don't 500 on environment tag values (#11502)
    
    When a user makes a request for an environment that isn't assigned to
    the selected project via tags we should not 500. Instead the request should
    succeed with an empty result set.
    
    This alters the changes made in #8523 and takes the other approach
    mentioned in the TODO.
    
    Fixes SENTRY-6PP

diff --git a/src/sentry/search/django/backend.py b/src/sentry/search/django/backend.py
index a6c7ccf739..be2f77940b 100644
--- a/src/sentry/search/django/backend.py
+++ b/src/sentry/search/django/backend.py
@@ -17,7 +17,7 @@ from django.utils import timezone
 
 from sentry import quotas, tagstore
 from sentry.api.paginator import DateTimePaginator, Paginator, SequencePaginator
-from sentry.search.base import ANY, SearchBackend
+from sentry.search.base import SearchBackend
 from sentry.search.django.constants import (
     MSSQL_ENGINES, MSSQL_SORT_CLAUSES, MYSQL_SORT_CLAUSES, ORACLE_SORT_CLAUSES, SORT_CLAUSES,
     SQLITE_SORT_CLAUSES
@@ -301,7 +301,7 @@ class DjangoSearchBackend(SearchBackend):
     def _query(self, projects, retention_window_start, group_queryset, tags, environments,
                sort_by, limit, cursor, count_hits, paginator_options, **parameters):
 
-        from sentry.models import (Group, Environment, Event, GroupEnvironment, Release)
+        from sentry.models import (Group, Event, GroupEnvironment, Release)
 
         # this backend only supports search within one project/environment
         if len(projects) != 1 or (environments is not None and len(environments) > 1):
@@ -311,12 +311,10 @@ class DjangoSearchBackend(SearchBackend):
         environment = environments[0] if environments is not None else environments
 
         if environment is not None:
+            # An explicit environment takes precedence over one defined
+            # in the tags data.
             if 'environment' in tags:
-                environment_name = tags.pop('environment')
-                assert environment_name is ANY or Environment.objects.get(
-                    projects=project,
-                    name=environment_name,
-                ).id == environment.id
+                tags.pop('environment')
 
             event_queryset_builder = QuerySetBuilder({
                 'date_from': ScalarCondition('date_added', 'gt'),
diff --git a/tests/sentry/search/django/tests.py b/tests/sentry/search/django/tests.py
index 8e36739304..0be7e75940 100644
--- a/tests/sentry/search/django/tests.py
+++ b/tests/sentry/search/django/tests.py
@@ -301,6 +301,15 @@ class DjangoSearchBackendTest(TestCase):
                   'server': 'bar.example.com'})
         assert set(results) == set([])
 
+    def test_environment_tag_not_matching_project(self):
+        project = self.create_project(name='other')
+        results = self.backend.query(
+            [project],
+            environments=[self.environments['production']],
+            tags={'environment': 'production'},
+            query='')
+        assert set(results) == set([])
+
     def test_tags_with_environment(self):
         results = self.backend.query(
             [self.project],
