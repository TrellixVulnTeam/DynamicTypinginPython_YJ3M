commit 5d0791db9573efbf3e346c9e5085bb7ffeb994e2
Author: Daniel Griesser <daniel.griesser.86@gmail.com>
Date:   Thu Mar 12 10:06:24 2020 +0100

    feat(apm): Improve APM profiling (#17573)
    
    * chore: Bump JS SDK
    
    Add profiler to LoadingIndicator
    
    * updated displayname
    
    * fixed tests
    
    * updated component name
    
    * removed focused test
    
    * fix: Add data-entry
    
    * updated snap
    
    Co-authored-by: Priscila Oliveira <priscilawebdev@gmail.com>

diff --git a/src/sentry/static/sentry/app/components/eventOrGroupHeader.jsx b/src/sentry/static/sentry/app/components/eventOrGroupHeader.jsx
index d7efec2480..4cf4ba6694 100644
--- a/src/sentry/static/sentry/app/components/eventOrGroupHeader.jsx
+++ b/src/sentry/static/sentry/app/components/eventOrGroupHeader.jsx
@@ -34,7 +34,7 @@ class EventOrGroupHeader extends React.Component {
 
   getTitle() {
     const {hideIcons, hideLevel, includeLink, data, params, location} = this.props;
-    const {orgId} = params;
+    const orgId = params?.orgId;
 
     const {id, level, groupID} = data || {};
     const isEvent = !!data.eventID;
diff --git a/src/sentry/static/sentry/app/components/loadingIndicator.tsx b/src/sentry/static/sentry/app/components/loadingIndicator.tsx
index 9c63fecdcd..23c33a29a1 100644
--- a/src/sentry/static/sentry/app/components/loadingIndicator.tsx
+++ b/src/sentry/static/sentry/app/components/loadingIndicator.tsx
@@ -2,6 +2,8 @@ import PropTypes from 'prop-types';
 import React from 'react';
 import classNames from 'classnames';
 
+import profiler from 'app/utils/profiler';
+
 type Props = {
   overlay?: boolean;
   dark?: boolean;
@@ -79,4 +81,4 @@ LoadingIndicator.propTypes = {
   hideSpinner: PropTypes.bool,
 };
 
-export default LoadingIndicator;
+export default profiler()(LoadingIndicator);
diff --git a/src/sentry/static/sentry/app/utils/profiler.jsx b/src/sentry/static/sentry/app/utils/profiler.jsx
index 9b344bbdbc..0a06031b76 100644
--- a/src/sentry/static/sentry/app/utils/profiler.jsx
+++ b/src/sentry/static/sentry/app/utils/profiler.jsx
@@ -6,10 +6,10 @@ import getDisplayName from 'app/utils/getDisplayName';
 
 export default function profiler() {
   return WrappedComponent => {
-    const displayName = getDisplayName(WrappedComponent);
+    const componentDisplayName = getDisplayName(WrappedComponent);
 
     return class extends React.Component {
-      static displayName = displayName;
+      static displayName = `profiler(${componentDisplayName})`;
 
       static propTypes = {
         api: PropTypes.object,
@@ -20,11 +20,11 @@ export default function profiler() {
       }
 
       activity = Integrations.Tracing.pushActivity(
-        displayName,
+        componentDisplayName,
         {
           data: {},
           op: 'react',
-          description: `<${displayName}>`,
+          description: `<${componentDisplayName}>`,
         },
         {
           autoPopAfter: 500, // After this timeout we'll pop this activity regardless
diff --git a/src/sentry/static/sentry/app/views/organizationGroupDetails/groupMerged/mergedList.jsx b/src/sentry/static/sentry/app/views/organizationGroupDetails/groupMerged/mergedList.jsx
index 8327ab9eeb..cd8116143c 100644
--- a/src/sentry/static/sentry/app/views/organizationGroupDetails/groupMerged/mergedList.jsx
+++ b/src/sentry/static/sentry/app/views/organizationGroupDetails/groupMerged/mergedList.jsx
@@ -55,6 +55,7 @@ class MergedList extends React.Component {
           {itemsWithLatestEvent.map(({id, latestEvent}) => (
             <MergedItem
               key={id}
+              orgId={orgId}
               disabled={items.length === 1}
               event={latestEvent}
               fingerprint={id}
diff --git a/src/sentry/templates/sentry/layout.html b/src/sentry/templates/sentry/layout.html
index 26f3372dd2..538a17c235 100644
--- a/src/sentry/templates/sentry/layout.html
+++ b/src/sentry/templates/sentry/layout.html
@@ -38,7 +38,7 @@
   {% block scripts %}
   {% locale_js_include %}
   <script src="{% asset_url "sentry" "dist/vendor.js" %}"{% crossorigin %}></script>
-  <script src="{% asset_url "sentry" "dist/app.js" %}"{% crossorigin %}></script>
+  <script src="{% asset_url "sentry" "dist/app.js" %}"{% crossorigin %} data-entry="true"></script>
 
   <script>
     // if the ads.js file loads below it will mark this variable as false
diff --git a/tests/js/spec/components/__snapshots__/issueDiff.spec.jsx.snap b/tests/js/spec/components/__snapshots__/issueDiff.spec.jsx.snap
index d37f8a5a2c..daa05ef6cd 100644
--- a/tests/js/spec/components/__snapshots__/issueDiff.spec.jsx.snap
+++ b/tests/js/spec/components/__snapshots__/issueDiff.spec.jsx.snap
@@ -407,6 +407,6 @@ exports[`IssueDiff is loading when initially rendering 1`] = `
 <StyledIssueDiff
   loading={true}
 >
-  <LoadingIndicator />
+  <profiler(LoadingIndicator) />
 </StyledIssueDiff>
 `;
diff --git a/tests/js/spec/components/lazyLoad.spec.jsx b/tests/js/spec/components/lazyLoad.spec.jsx
index 46fad22c0a..22329989ab 100644
--- a/tests/js/spec/components/lazyLoad.spec.jsx
+++ b/tests/js/spec/components/lazyLoad.spec.jsx
@@ -1,13 +1,13 @@
 import React from 'react';
 
-import {shallow, mount} from 'sentry-test/enzyme';
+import {mount} from 'sentry-test/enzyme';
 import LazyLoad from 'app/components/lazyLoad';
 
 describe('LazyLoad', function() {
   it('renders with a loading indicator when promise is not resolved yet', function() {
-    const promise = new Promise((resolve, reject) => {});
+    const promise = new Promise(() => {});
     const getComponent = () => promise;
-    const wrapper = shallow(<LazyLoad component={getComponent} />);
+    const wrapper = mount(<LazyLoad component={getComponent} />);
 
     // Should be loading
     expect(wrapper.find('LoadingIndicator')).toHaveLength(1);
@@ -15,7 +15,7 @@ describe('LazyLoad', function() {
 
   it('renders when given a promise of a "button" component', async function() {
     let res;
-    const promise = new Promise((resolve, reject) => {
+    const promise = new Promise(resolve => {
       res = resolve;
     });
     const getComponent = () => promise;
@@ -42,7 +42,7 @@ describe('LazyLoad', function() {
     console.error = jest.fn();
     const getComponent = jest.fn(
       () =>
-        new Promise((resolve, reject) => reject(new Error('Could not load component')))
+        new Promise((_resolve, reject) => reject(new Error('Could not load component')))
     );
     let wrapper;
 
diff --git a/tests/js/spec/views/inviteMember/__snapshots__/inviteMember.spec.jsx.snap b/tests/js/spec/views/inviteMember/__snapshots__/inviteMember.spec.jsx.snap
index 60edd2faea..51001a2e7e 100644
--- a/tests/js/spec/views/inviteMember/__snapshots__/inviteMember.spec.jsx.snap
+++ b/tests/js/spec/views/inviteMember/__snapshots__/inviteMember.spec.jsx.snap
@@ -9,7 +9,7 @@ exports[`InviteMember should render loading 1`] = `
   <TextBlock>
     Invite a member to join this organization via their email address. If they do not already have an account, they will first be asked to create one. Multiple emails delimited by commas.
   </TextBlock>
-  <LoadingIndicator />
+  <profiler(LoadingIndicator) />
 </div>
 `;
 
diff --git a/tests/js/spec/views/organizationGroupDetails/__snapshots__/groupMergedView.spec.jsx.snap b/tests/js/spec/views/organizationGroupDetails/__snapshots__/groupMergedView.spec.jsx.snap
index ee0b231381..4f114a808e 100644
--- a/tests/js/spec/views/organizationGroupDetails/__snapshots__/groupMergedView.spec.jsx.snap
+++ b/tests/js/spec/views/organizationGroupDetails/__snapshots__/groupMergedView.spec.jsx.snap
@@ -1,226 +1,2043 @@
 // Jest Snapshot v1, https://goo.gl/fbAQLP
 
 exports[`Issues -> Merged View renders with mocked data 1`] = `
-<div>
-  <div
-    className="alert alert-block alert-warning"
-  >
-    <strong>
-      Warning
-      :
-    </strong>
-     
-    This is an experimental feature. Data may not be immediately available while we process unmerges.
-  </div>
-  <MergedList
-    items={
-      Array [
-        Object {
-          "id": "2c4887696f708c476a81ce4e834c4b02",
-          "latestEvent": Object {
-            "context": Object {
-              "session:duration": 46363,
-            },
-            "contexts": Object {
-              "browser": Object {
-                "name": "Chrome",
-                "type": "browser",
-                "version": "59.0.3071",
-              },
-              "os": Object {
-                "name": "Mac OS X",
-                "type": "os",
-                "version": "10.12.5",
-              },
-            },
-            "dateCreated": "2017-07-26T00:34:20Z",
-            "dateReceived": "2017-07-26T00:34:20Z",
-            "dist": null,
-            "entries": Array [],
-            "errors": Array [],
-            "eventID": "807f0de4d8c246098f21f8e0f1684f3d",
-            "fingerprints": Array [
-              "2c4887696f708c476a81ce4e834c4b02",
-              "e05da55328a860b21f62e371f0a7507d",
-            ],
-            "groupID": "268",
-            "id": "904",
-            "message": "TypeError Cannot read property 'assignedTo' of undefined app/components/assigneeSelector in assignedTo",
-            "metadata": Object {
-              "type": "TypeError",
-              "value": "Cannot read property 'assignedTo' of undefined",
-            },
-            "packages": Object {},
-            "platform": "javascript",
-            "sdk": Object {
-              "clientIP": "127.0.0.1",
-              "name": "raven-js",
-              "upstream": Object {
-                "isNewer": false,
-                "name": "raven-js",
-                "url": "https://docs.sentry.io/clients/javascript/",
-              },
-              "version": "3.16.1",
-            },
-            "size": 21896,
-            "tags": Array [
-              Object {
-                "key": "browser",
-                "value": "Chrome 59.0.3071",
-              },
-              Object {
-                "key": "browser.name",
-                "value": "Chrome",
-              },
-              Object {
-                "key": "level",
-                "value": "error",
-              },
-              Object {
-                "key": "logger",
-                "value": "javascript",
-              },
-              Object {
-                "key": "os",
-                "value": "Mac OS X 10.12.5",
-              },
-              Object {
-                "key": "os.name",
-                "value": "Mac OS X",
+<GroupMergedView
+  location={
+    Object {
+      "query": Object {},
+    }
+  }
+  params={
+    Object {
+      "groupId": "groupId",
+      "orgId": "orgId",
+      "projectId": "projectId",
+    }
+  }
+  project={
+    Object {
+      "environments": Array [],
+      "hasAccess": true,
+      "id": "2",
+      "isBookmarked": false,
+      "isMember": true,
+      "name": "Project Name",
+      "slug": "projectId",
+      "teams": Array [],
+    }
+  }
+>
+  <div>
+    <div
+      className="alert alert-block alert-warning"
+    >
+      <strong>
+        Warning
+        :
+      </strong>
+       
+      This is an experimental feature. Data may not be immediately available while we process unmerges.
+    </div>
+    <MergedList
+      items={
+        Array [
+          Object {
+            "id": "2c4887696f708c476a81ce4e834c4b02",
+            "latestEvent": Object {
+              "context": Object {
+                "session:duration": 46363,
               },
-              Object {
-                "key": "release",
-                "value": "d5241c9d9d2bcda918c7af72f07cea1e39a096ac",
+              "contexts": Object {
+                "browser": Object {
+                  "name": "Chrome",
+                  "type": "browser",
+                  "version": "59.0.3071",
+                },
+                "os": Object {
+                  "name": "Mac OS X",
+                  "type": "os",
+                  "version": "10.12.5",
+                },
               },
-              Object {
-                "key": "transaction",
-                "value": "app/components/assigneeSelector in assignedTo",
+              "dateCreated": "2017-07-26T00:34:20Z",
+              "dateReceived": "2017-07-26T00:34:20Z",
+              "dist": null,
+              "entries": Array [],
+              "errors": Array [],
+              "eventID": "807f0de4d8c246098f21f8e0f1684f3d",
+              "fingerprints": Array [
+                "2c4887696f708c476a81ce4e834c4b02",
+                "e05da55328a860b21f62e371f0a7507d",
+              ],
+              "groupID": "268",
+              "id": "904",
+              "message": "TypeError Cannot read property 'assignedTo' of undefined app/components/assigneeSelector in assignedTo",
+              "metadata": Object {
+                "type": "TypeError",
+                "value": "Cannot read property 'assignedTo' of undefined",
               },
-              Object {
-                "key": "url",
-                "value": "http://localhost:8000/sentry/internal/issues/227/grouping/",
+              "packages": Object {},
+              "platform": "javascript",
+              "sdk": Object {
+                "clientIP": "127.0.0.1",
+                "name": "raven-js",
+                "upstream": Object {
+                  "isNewer": false,
+                  "name": "raven-js",
+                  "url": "https://docs.sentry.io/clients/javascript/",
+                },
+                "version": "3.16.1",
               },
-              Object {
-                "key": "user",
-                "value": "id:1",
+              "size": 21896,
+              "tags": Array [
+                Object {
+                  "key": "browser",
+                  "value": "Chrome 59.0.3071",
+                },
+                Object {
+                  "key": "browser.name",
+                  "value": "Chrome",
+                },
+                Object {
+                  "key": "level",
+                  "value": "error",
+                },
+                Object {
+                  "key": "logger",
+                  "value": "javascript",
+                },
+                Object {
+                  "key": "os",
+                  "value": "Mac OS X 10.12.5",
+                },
+                Object {
+                  "key": "os.name",
+                  "value": "Mac OS X",
+                },
+                Object {
+                  "key": "release",
+                  "value": "d5241c9d9d2bcda918c7af72f07cea1e39a096ac",
+                },
+                Object {
+                  "key": "transaction",
+                  "value": "app/components/assigneeSelector in assignedTo",
+                },
+                Object {
+                  "key": "url",
+                  "value": "http://localhost:8000/sentry/internal/issues/227/grouping/",
+                },
+                Object {
+                  "key": "user",
+                  "value": "id:1",
+                },
+              ],
+              "title": "TypeError: Cannot read property 'assignedTo' of undefined",
+              "type": "error",
+              "user": Object {
+                "email": "billy@sentry.io",
+                "id": "1",
+                "ip_address": "127.0.0.1",
               },
-            ],
-            "title": "TypeError: Cannot read property 'assignedTo' of undefined",
-            "type": "error",
-            "user": Object {
-              "email": "billy@sentry.io",
-              "id": "1",
-              "ip_address": "127.0.0.1",
             },
+            "state": "unlocked",
           },
-          "state": "unlocked",
-        },
-        Object {
-          "id": "e05da55328a860b21f62e371f0a7507d",
-          "latestEvent": Object {
-            "context": Object {
-              "session:duration": 46363,
-            },
-            "contexts": Object {
-              "browser": Object {
-                "name": "Chrome",
-                "type": "browser",
-                "version": "59.0.3071",
-              },
-              "os": Object {
-                "name": "Mac OS X",
-                "type": "os",
-                "version": "10.12.5",
-              },
-            },
-            "dateCreated": "2017-07-26T00:34:20Z",
-            "dateReceived": "2017-07-26T00:34:20Z",
-            "dist": null,
-            "entries": Array [],
-            "errors": Array [],
-            "eventID": "807f0de4d8c246098f21f8e0f1684f3d",
-            "fingerprints": Array [
-              "2c4887696f708c476a81ce4e834c4b02",
-              "e05da55328a860b21f62e371f0a7507d",
-            ],
-            "groupID": "268",
-            "id": "904",
-            "message": "TypeError Cannot read property 'assignedTo' of undefined app/components/assigneeSelector in assignedTo",
-            "metadata": Object {
-              "type": "TypeError",
-              "value": "Cannot read property 'assignedTo' of undefined",
-            },
-            "packages": Object {},
-            "platform": "javascript",
-            "sdk": Object {
-              "clientIP": "127.0.0.1",
-              "name": "raven-js",
-              "upstream": Object {
-                "isNewer": false,
-                "name": "raven-js",
-                "url": "https://docs.sentry.io/clients/javascript/",
-              },
-              "version": "3.16.1",
-            },
-            "size": 21896,
-            "tags": Array [
-              Object {
-                "key": "browser",
-                "value": "Chrome 59.0.3071",
+          Object {
+            "id": "e05da55328a860b21f62e371f0a7507d",
+            "latestEvent": Object {
+              "context": Object {
+                "session:duration": 46363,
               },
-              Object {
-                "key": "browser.name",
-                "value": "Chrome",
+              "contexts": Object {
+                "browser": Object {
+                  "name": "Chrome",
+                  "type": "browser",
+                  "version": "59.0.3071",
+                },
+                "os": Object {
+                  "name": "Mac OS X",
+                  "type": "os",
+                  "version": "10.12.5",
+                },
               },
-              Object {
-                "key": "level",
-                "value": "error",
+              "dateCreated": "2017-07-26T00:34:20Z",
+              "dateReceived": "2017-07-26T00:34:20Z",
+              "dist": null,
+              "entries": Array [],
+              "errors": Array [],
+              "eventID": "807f0de4d8c246098f21f8e0f1684f3d",
+              "fingerprints": Array [
+                "2c4887696f708c476a81ce4e834c4b02",
+                "e05da55328a860b21f62e371f0a7507d",
+              ],
+              "groupID": "268",
+              "id": "904",
+              "message": "TypeError Cannot read property 'assignedTo' of undefined app/components/assigneeSelector in assignedTo",
+              "metadata": Object {
+                "type": "TypeError",
+                "value": "Cannot read property 'assignedTo' of undefined",
               },
-              Object {
-                "key": "logger",
-                "value": "javascript",
-              },
-              Object {
-                "key": "os",
-                "value": "Mac OS X 10.12.5",
-              },
-              Object {
-                "key": "os.name",
-                "value": "Mac OS X",
-              },
-              Object {
-                "key": "release",
-                "value": "d5241c9d9d2bcda918c7af72f07cea1e39a096ac",
-              },
-              Object {
-                "key": "transaction",
-                "value": "app/components/assigneeSelector in assignedTo",
-              },
-              Object {
-                "key": "url",
-                "value": "http://localhost:8000/sentry/internal/issues/227/grouping/",
+              "packages": Object {},
+              "platform": "javascript",
+              "sdk": Object {
+                "clientIP": "127.0.0.1",
+                "name": "raven-js",
+                "upstream": Object {
+                  "isNewer": false,
+                  "name": "raven-js",
+                  "url": "https://docs.sentry.io/clients/javascript/",
+                },
+                "version": "3.16.1",
               },
-              Object {
-                "key": "user",
-                "value": "id:1",
+              "size": 21896,
+              "tags": Array [
+                Object {
+                  "key": "browser",
+                  "value": "Chrome 59.0.3071",
+                },
+                Object {
+                  "key": "browser.name",
+                  "value": "Chrome",
+                },
+                Object {
+                  "key": "level",
+                  "value": "error",
+                },
+                Object {
+                  "key": "logger",
+                  "value": "javascript",
+                },
+                Object {
+                  "key": "os",
+                  "value": "Mac OS X 10.12.5",
+                },
+                Object {
+                  "key": "os.name",
+                  "value": "Mac OS X",
+                },
+                Object {
+                  "key": "release",
+                  "value": "d5241c9d9d2bcda918c7af72f07cea1e39a096ac",
+                },
+                Object {
+                  "key": "transaction",
+                  "value": "app/components/assigneeSelector in assignedTo",
+                },
+                Object {
+                  "key": "url",
+                  "value": "http://localhost:8000/sentry/internal/issues/227/grouping/",
+                },
+                Object {
+                  "key": "user",
+                  "value": "id:1",
+                },
+              ],
+              "title": "TypeError: Cannot read property 'assignedTo' of undefined",
+              "type": "error",
+              "user": Object {
+                "email": "billy@sentry.io",
+                "id": "1",
+                "ip_address": "127.0.0.1",
               },
-            ],
-            "title": "TypeError: Cannot read property 'assignedTo' of undefined",
-            "type": "error",
-            "user": Object {
-              "email": "billy@sentry.io",
-              "id": "1",
-              "ip_address": "127.0.0.1",
             },
+            "state": "unlocked",
           },
-          "state": "unlocked",
-        },
-      ]
-    }
-    onToggleCollapse={[Function]}
-    onUnmerge={[Function]}
-    orgId="orgId"
-    projectId="projectId"
-  />
-</div>
+        ]
+      }
+      onToggleCollapse={[Function]}
+      onUnmerge={[Function]}
+      orgId="orgId"
+      projectId="projectId"
+    >
+      <div>
+        <h2>
+          <span>
+            Merged fingerprints with latest event
+          </span>
+          <QueryCount
+            count={2}
+          >
+            <div
+              className="query-count inline"
+            >
+              <span>
+                (
+              </span>
+              <span
+                className="query-count-value"
+              >
+                2
+              </span>
+              <span>
+                )
+              </span>
+            </div>
+          </QueryCount>
+        </h2>
+        <MergedToolbar
+          onToggleCollapse={[Function]}
+          onUnmerge={[Function]}
+          orgId="orgId"
+          projectId="projectId"
+        >
+          <StyledToolbar>
+            <div
+              className="css-i4bstz-Toolbar-StyledToolbar e1seayw31"
+            >
+              <SpreadLayout>
+                <div
+                  className="spread-layout center"
+                >
+                  <SpreadLayout>
+                    <div
+                      className="spread-layout center"
+                    >
+                      <div>
+                        <LinkWithConfirmation
+                          className="btn btn-sm btn-default"
+                          disabled={true}
+                          message="These events will be unmerged and grouped into a new issue. Are you sure you want to unmerge these events?"
+                          onConfirm={[Function]}
+                          title="Unmerging 0 events"
+                        >
+                          <Confirm
+                            cancelText="Cancel"
+                            confirmText="Confirm"
+                            disableConfirmButton={false}
+                            disabled={true}
+                            message="These events will be unmerged and grouped into a new issue. Are you sure you want to unmerge these events?"
+                            onConfirm={[Function]}
+                            priority="primary"
+                            stopPropagation={false}
+                          >
+                            <a
+                              className="btn btn-sm btn-default disabled"
+                              disabled={true}
+                              onClick={[Function]}
+                              title="Unmerging 0 events"
+                            >
+                              Unmerge
+                               (
+                              0
+                              )
+                            </a>
+                            <Modal
+                              animation={false}
+                              autoFocus={true}
+                              backdrop={true}
+                              bsClass="modal"
+                              dialogComponentClass={[Function]}
+                              enforceFocus={true}
+                              keyboard={true}
+                              manager={
+                                ModalManager {
+                                  "add": [Function],
+                                  "containers": Array [],
+                                  "data": Array [],
+                                  "handleContainerOverflow": true,
+                                  "hideSiblingNodes": true,
+                                  "isTopModal": [Function],
+                                  "modals": Array [],
+                                  "remove": [Function],
+                                }
+                              }
+                              onHide={[Function]}
+                              renderBackdrop={[Function]}
+                              restoreFocus={true}
+                              show={false}
+                            >
+                              <Modal
+                                autoFocus={true}
+                                backdrop={true}
+                                backdropClassName="modal-backdrop"
+                                containerClassName="modal-open"
+                                enforceFocus={true}
+                                keyboard={true}
+                                manager={
+                                  ModalManager {
+                                    "add": [Function],
+                                    "containers": Array [],
+                                    "data": Array [],
+                                    "handleContainerOverflow": true,
+                                    "hideSiblingNodes": true,
+                                    "isTopModal": [Function],
+                                    "modals": Array [],
+                                    "remove": [Function],
+                                  }
+                                }
+                                onEntering={[Function]}
+                                onExited={[Function]}
+                                onHide={[Function]}
+                                renderBackdrop={[Function]}
+                                restoreFocus={true}
+                                show={false}
+                              />
+                            </Modal>
+                          </Confirm>
+                        </LinkWithConfirmation>
+                        <CompareButton
+                          disabled={true}
+                          onClick={[Function]}
+                          size="small"
+                        >
+                          <forwardRef<Button>
+                            className="css-1m7vbr7-CompareButton e1seayw30"
+                            disabled={true}
+                            onClick={[Function]}
+                            size="small"
+                          >
+                            <Button
+                              align="center"
+                              className="css-1m7vbr7-CompareButton e1seayw30"
+                              disabled={true}
+                              forwardRef={null}
+                              onClick={[Function]}
+                              size="small"
+                            >
+                              <StyledButton
+                                aria-disabled={true}
+                                aria-label="Compare"
+                                className="css-1m7vbr7-CompareButton e1seayw30"
+                                disabled={true}
+                                forwardRef={null}
+                                onClick={[Function]}
+                                role="button"
+                                size="small"
+                              >
+                                <Component
+                                  aria-disabled={true}
+                                  aria-label="Compare"
+                                  className="e1seayw30 css-8unam4-StyledButton-CompareButton edwq9my0"
+                                  forwardRef={null}
+                                  onClick={[Function]}
+                                  role="button"
+                                  size="small"
+                                >
+                                  <button
+                                    aria-disabled={true}
+                                    aria-label="Compare"
+                                    className="e1seayw30 css-8unam4-StyledButton-CompareButton edwq9my0"
+                                    onClick={[Function]}
+                                    role="button"
+                                    size="small"
+                                  >
+                                    <ButtonLabel
+                                      align="center"
+                                      size="small"
+                                    >
+                                      <Component
+                                        align="center"
+                                        className="css-19gcr2f-ButtonLabel edwq9my1"
+                                        size="small"
+                                      >
+                                        <span
+                                          className="css-19gcr2f-ButtonLabel edwq9my1"
+                                        >
+                                          Compare
+                                        </span>
+                                      </Component>
+                                    </ButtonLabel>
+                                  </button>
+                                </Component>
+                              </StyledButton>
+                            </Button>
+                          </forwardRef<Button>>
+                        </CompareButton>
+                      </div>
+                    </div>
+                  </SpreadLayout>
+                  <SpreadLayout>
+                    <div
+                      className="spread-layout center"
+                    >
+                      <div>
+                        <forwardRef<Button>
+                          onClick={[Function]}
+                          size="small"
+                        >
+                          <Button
+                            align="center"
+                            disabled={false}
+                            forwardRef={null}
+                            onClick={[Function]}
+                            size="small"
+                          >
+                            <StyledButton
+                              aria-disabled={false}
+                              aria-label="Collapse All"
+                              disabled={false}
+                              forwardRef={null}
+                              onClick={[Function]}
+                              role="button"
+                              size="small"
+                            >
+                              <Component
+                                aria-disabled={false}
+                                aria-label="Collapse All"
+                                className="css-12ogwys-StyledButton edwq9my0"
+                                forwardRef={null}
+                                onClick={[Function]}
+                                role="button"
+                                size="small"
+                              >
+                                <button
+                                  aria-disabled={false}
+                                  aria-label="Collapse All"
+                                  className="css-12ogwys-StyledButton edwq9my0"
+                                  onClick={[Function]}
+                                  role="button"
+                                  size="small"
+                                >
+                                  <ButtonLabel
+                                    align="center"
+                                    size="small"
+                                  >
+                                    <Component
+                                      align="center"
+                                      className="css-19gcr2f-ButtonLabel edwq9my1"
+                                      size="small"
+                                    >
+                                      <span
+                                        className="css-19gcr2f-ButtonLabel edwq9my1"
+                                      >
+                                        Collapse All
+                                      </span>
+                                    </Component>
+                                  </ButtonLabel>
+                                </button>
+                              </Component>
+                            </StyledButton>
+                          </Button>
+                        </forwardRef<Button>>
+                      </div>
+                    </div>
+                  </SpreadLayout>
+                </div>
+              </SpreadLayout>
+            </div>
+          </StyledToolbar>
+        </MergedToolbar>
+        <MergedItems>
+          <div
+            className="css-iro90a-MergedItems e16p6prb0"
+          >
+            <MergedItem
+              disabled={false}
+              event={
+                Object {
+                  "context": Object {
+                    "session:duration": 46363,
+                  },
+                  "contexts": Object {
+                    "browser": Object {
+                      "name": "Chrome",
+                      "type": "browser",
+                      "version": "59.0.3071",
+                    },
+                    "os": Object {
+                      "name": "Mac OS X",
+                      "type": "os",
+                      "version": "10.12.5",
+                    },
+                  },
+                  "dateCreated": "2017-07-26T00:34:20Z",
+                  "dateReceived": "2017-07-26T00:34:20Z",
+                  "dist": null,
+                  "entries": Array [],
+                  "errors": Array [],
+                  "eventID": "807f0de4d8c246098f21f8e0f1684f3d",
+                  "fingerprints": Array [
+                    "2c4887696f708c476a81ce4e834c4b02",
+                    "e05da55328a860b21f62e371f0a7507d",
+                  ],
+                  "groupID": "268",
+                  "id": "904",
+                  "message": "TypeError Cannot read property 'assignedTo' of undefined app/components/assigneeSelector in assignedTo",
+                  "metadata": Object {
+                    "type": "TypeError",
+                    "value": "Cannot read property 'assignedTo' of undefined",
+                  },
+                  "packages": Object {},
+                  "platform": "javascript",
+                  "sdk": Object {
+                    "clientIP": "127.0.0.1",
+                    "name": "raven-js",
+                    "upstream": Object {
+                      "isNewer": false,
+                      "name": "raven-js",
+                      "url": "https://docs.sentry.io/clients/javascript/",
+                    },
+                    "version": "3.16.1",
+                  },
+                  "size": 21896,
+                  "tags": Array [
+                    Object {
+                      "key": "browser",
+                      "value": "Chrome 59.0.3071",
+                    },
+                    Object {
+                      "key": "browser.name",
+                      "value": "Chrome",
+                    },
+                    Object {
+                      "key": "level",
+                      "value": "error",
+                    },
+                    Object {
+                      "key": "logger",
+                      "value": "javascript",
+                    },
+                    Object {
+                      "key": "os",
+                      "value": "Mac OS X 10.12.5",
+                    },
+                    Object {
+                      "key": "os.name",
+                      "value": "Mac OS X",
+                    },
+                    Object {
+                      "key": "release",
+                      "value": "d5241c9d9d2bcda918c7af72f07cea1e39a096ac",
+                    },
+                    Object {
+                      "key": "transaction",
+                      "value": "app/components/assigneeSelector in assignedTo",
+                    },
+                    Object {
+                      "key": "url",
+                      "value": "http://localhost:8000/sentry/internal/issues/227/grouping/",
+                    },
+                    Object {
+                      "key": "user",
+                      "value": "id:1",
+                    },
+                  ],
+                  "title": "TypeError: Cannot read property 'assignedTo' of undefined",
+                  "type": "error",
+                  "user": Object {
+                    "email": "billy@sentry.io",
+                    "id": "1",
+                    "ip_address": "127.0.0.1",
+                  },
+                }
+              }
+              fingerprint="2c4887696f708c476a81ce4e834c4b02"
+              key="2c4887696f708c476a81ce4e834c4b02"
+              orgId="orgId"
+            >
+              <MergedGroup
+                busy={false}
+              >
+                <div
+                  className="css-vfab7-MergedGroup e9r3vga0"
+                >
+                  <Controls
+                    expanded={true}
+                  >
+                    <Component
+                      className="css-lznge2-Controls e9r3vga2"
+                      expanded={true}
+                    >
+                      <Styled(div)
+                        className="css-lznge2-Controls e9r3vga2"
+                        justifyContent="space-between"
+                      >
+                        <div
+                          className="e9r3vga2 css-1q6dsi8-Controls"
+                        >
+                          <FlowLayout
+                            onClick={[Function]}
+                            truncate={true}
+                          >
+                            <div
+                              className="css-dk1sds-FlowLayout e1uibv5p0"
+                              onClick={[Function]}
+                            >
+                              <ActionColumn>
+                                <div
+                                  className="css-1r34rbx-ActionColumn e9r3vga1"
+                                >
+                                  <Checkbox
+                                    checked={false}
+                                    id="2c4887696f708c476a81ce4e834c4b02"
+                                    onChange={[Function]}
+                                    value="2c4887696f708c476a81ce4e834c4b02"
+                                  >
+                                    <input
+                                      checked={false}
+                                      id="2c4887696f708c476a81ce4e834c4b02"
+                                      onChange={[Function]}
+                                      type="checkbox"
+                                      value="2c4887696f708c476a81ce4e834c4b02"
+                                    />
+                                  </Checkbox>
+                                </div>
+                              </ActionColumn>
+                              <Fingerprint
+                                htmlFor="2c4887696f708c476a81ce4e834c4b02"
+                                onClick={[Function]}
+                              >
+                                <label
+                                  className="css-cx2dep-Fingerprint e9r3vga3"
+                                  htmlFor="2c4887696f708c476a81ce4e834c4b02"
+                                  onClick={[Function]}
+                                >
+                                  2c4887696f708c476a81ce4e834c4b02
+                                </label>
+                              </Fingerprint>
+                            </div>
+                          </FlowLayout>
+                          <div>
+                            <span />
+                            <Collapse
+                              onClick={[Function]}
+                            >
+                              <span
+                                className="css-1kppo88-Collapse e9r3vga4"
+                                onClick={[Function]}
+                              >
+                                <i
+                                  className="icon-arrow-up"
+                                />
+                              </span>
+                            </Collapse>
+                          </div>
+                        </div>
+                      </Styled(div)>
+                    </Component>
+                  </Controls>
+                  <MergedEventList
+                    className="event-list"
+                  >
+                    <div
+                      className="event-list css-1kmag7y-MergedEventList e9r3vga5"
+                    >
+                      <EventDetails
+                        className="event-details"
+                      >
+                        <div
+                          className="event-details css-1ryg55t-EventDetails e9r3vga6"
+                        >
+                          <FlowLayout
+                            truncate={true}
+                          >
+                            <div
+                              className="css-dk1sds-FlowLayout e1uibv5p0"
+                            >
+                              <withRouter(EventOrGroupHeader)
+                                data={
+                                  Object {
+                                    "context": Object {
+                                      "session:duration": 46363,
+                                    },
+                                    "contexts": Object {
+                                      "browser": Object {
+                                        "name": "Chrome",
+                                        "type": "browser",
+                                        "version": "59.0.3071",
+                                      },
+                                      "os": Object {
+                                        "name": "Mac OS X",
+                                        "type": "os",
+                                        "version": "10.12.5",
+                                      },
+                                    },
+                                    "dateCreated": "2017-07-26T00:34:20Z",
+                                    "dateReceived": "2017-07-26T00:34:20Z",
+                                    "dist": null,
+                                    "entries": Array [],
+                                    "errors": Array [],
+                                    "eventID": "807f0de4d8c246098f21f8e0f1684f3d",
+                                    "fingerprints": Array [
+                                      "2c4887696f708c476a81ce4e834c4b02",
+                                      "e05da55328a860b21f62e371f0a7507d",
+                                    ],
+                                    "groupID": "268",
+                                    "id": "904",
+                                    "message": "TypeError Cannot read property 'assignedTo' of undefined app/components/assigneeSelector in assignedTo",
+                                    "metadata": Object {
+                                      "type": "TypeError",
+                                      "value": "Cannot read property 'assignedTo' of undefined",
+                                    },
+                                    "packages": Object {},
+                                    "platform": "javascript",
+                                    "sdk": Object {
+                                      "clientIP": "127.0.0.1",
+                                      "name": "raven-js",
+                                      "upstream": Object {
+                                        "isNewer": false,
+                                        "name": "raven-js",
+                                        "url": "https://docs.sentry.io/clients/javascript/",
+                                      },
+                                      "version": "3.16.1",
+                                    },
+                                    "size": 21896,
+                                    "tags": Array [
+                                      Object {
+                                        "key": "browser",
+                                        "value": "Chrome 59.0.3071",
+                                      },
+                                      Object {
+                                        "key": "browser.name",
+                                        "value": "Chrome",
+                                      },
+                                      Object {
+                                        "key": "level",
+                                        "value": "error",
+                                      },
+                                      Object {
+                                        "key": "logger",
+                                        "value": "javascript",
+                                      },
+                                      Object {
+                                        "key": "os",
+                                        "value": "Mac OS X 10.12.5",
+                                      },
+                                      Object {
+                                        "key": "os.name",
+                                        "value": "Mac OS X",
+                                      },
+                                      Object {
+                                        "key": "release",
+                                        "value": "d5241c9d9d2bcda918c7af72f07cea1e39a096ac",
+                                      },
+                                      Object {
+                                        "key": "transaction",
+                                        "value": "app/components/assigneeSelector in assignedTo",
+                                      },
+                                      Object {
+                                        "key": "url",
+                                        "value": "http://localhost:8000/sentry/internal/issues/227/grouping/",
+                                      },
+                                      Object {
+                                        "key": "user",
+                                        "value": "id:1",
+                                      },
+                                    ],
+                                    "title": "TypeError: Cannot read property 'assignedTo' of undefined",
+                                    "type": "error",
+                                    "user": Object {
+                                      "email": "billy@sentry.io",
+                                      "id": "1",
+                                      "ip_address": "127.0.0.1",
+                                    },
+                                  }
+                                }
+                                hideIcons={true}
+                                hideLevel={true}
+                              >
+                                <EventOrGroupHeader
+                                  data={
+                                    Object {
+                                      "context": Object {
+                                        "session:duration": 46363,
+                                      },
+                                      "contexts": Object {
+                                        "browser": Object {
+                                          "name": "Chrome",
+                                          "type": "browser",
+                                          "version": "59.0.3071",
+                                        },
+                                        "os": Object {
+                                          "name": "Mac OS X",
+                                          "type": "os",
+                                          "version": "10.12.5",
+                                        },
+                                      },
+                                      "dateCreated": "2017-07-26T00:34:20Z",
+                                      "dateReceived": "2017-07-26T00:34:20Z",
+                                      "dist": null,
+                                      "entries": Array [],
+                                      "errors": Array [],
+                                      "eventID": "807f0de4d8c246098f21f8e0f1684f3d",
+                                      "fingerprints": Array [
+                                        "2c4887696f708c476a81ce4e834c4b02",
+                                        "e05da55328a860b21f62e371f0a7507d",
+                                      ],
+                                      "groupID": "268",
+                                      "id": "904",
+                                      "message": "TypeError Cannot read property 'assignedTo' of undefined app/components/assigneeSelector in assignedTo",
+                                      "metadata": Object {
+                                        "type": "TypeError",
+                                        "value": "Cannot read property 'assignedTo' of undefined",
+                                      },
+                                      "packages": Object {},
+                                      "platform": "javascript",
+                                      "sdk": Object {
+                                        "clientIP": "127.0.0.1",
+                                        "name": "raven-js",
+                                        "upstream": Object {
+                                          "isNewer": false,
+                                          "name": "raven-js",
+                                          "url": "https://docs.sentry.io/clients/javascript/",
+                                        },
+                                        "version": "3.16.1",
+                                      },
+                                      "size": 21896,
+                                      "tags": Array [
+                                        Object {
+                                          "key": "browser",
+                                          "value": "Chrome 59.0.3071",
+                                        },
+                                        Object {
+                                          "key": "browser.name",
+                                          "value": "Chrome",
+                                        },
+                                        Object {
+                                          "key": "level",
+                                          "value": "error",
+                                        },
+                                        Object {
+                                          "key": "logger",
+                                          "value": "javascript",
+                                        },
+                                        Object {
+                                          "key": "os",
+                                          "value": "Mac OS X 10.12.5",
+                                        },
+                                        Object {
+                                          "key": "os.name",
+                                          "value": "Mac OS X",
+                                        },
+                                        Object {
+                                          "key": "release",
+                                          "value": "d5241c9d9d2bcda918c7af72f07cea1e39a096ac",
+                                        },
+                                        Object {
+                                          "key": "transaction",
+                                          "value": "app/components/assigneeSelector in assignedTo",
+                                        },
+                                        Object {
+                                          "key": "url",
+                                          "value": "http://localhost:8000/sentry/internal/issues/227/grouping/",
+                                        },
+                                        Object {
+                                          "key": "user",
+                                          "value": "id:1",
+                                        },
+                                      ],
+                                      "title": "TypeError: Cannot read property 'assignedTo' of undefined",
+                                      "type": "error",
+                                      "user": Object {
+                                        "email": "billy@sentry.io",
+                                        "id": "1",
+                                        "ip_address": "127.0.0.1",
+                                      },
+                                    }
+                                  }
+                                  hideIcons={true}
+                                  hideLevel={true}
+                                  includeLink={true}
+                                  location={
+                                    Object {
+                                      "query": Object {},
+                                    }
+                                  }
+                                  router={
+                                    Object {
+                                      "createHref": [MockFunction] {
+                                        "calls": Array [
+                                          Array [
+                                            Object {
+                                              "pathname": "/organizations/undefined/issues/268/events/904/",
+                                              "query": Object {
+                                                "_allp": 1,
+                                                "query": undefined,
+                                              },
+                                            },
+                                          ],
+                                          Array [
+                                            Object {
+                                              "pathname": "/organizations/undefined/issues/268/events/904/",
+                                              "query": Object {
+                                                "_allp": 1,
+                                                "query": undefined,
+                                              },
+                                            },
+                                          ],
+                                          Array [
+                                            Object {
+                                              "pathname": "/organizations/undefined/issues/268/events/904/",
+                                              "query": Object {
+                                                "_allp": 1,
+                                                "query": undefined,
+                                              },
+                                            },
+                                          ],
+                                          Array [
+                                            Object {
+                                              "pathname": "/organizations/undefined/issues/268/events/904/",
+                                              "query": Object {
+                                                "_allp": 1,
+                                                "query": undefined,
+                                              },
+                                            },
+                                          ],
+                                        ],
+                                        "results": Array [
+                                          Object {
+                                            "type": "return",
+                                            "value": undefined,
+                                          },
+                                          Object {
+                                            "type": "return",
+                                            "value": undefined,
+                                          },
+                                          Object {
+                                            "type": "return",
+                                            "value": undefined,
+                                          },
+                                          Object {
+                                            "type": "return",
+                                            "value": undefined,
+                                          },
+                                        ],
+                                      },
+                                      "go": [MockFunction],
+                                      "goBack": [MockFunction],
+                                      "goForward": [MockFunction],
+                                      "isActive": [MockFunction],
+                                      "listen": [MockFunction],
+                                      "location": Object {
+                                        "query": Object {},
+                                      },
+                                      "push": [MockFunction],
+                                      "replace": [MockFunction],
+                                      "setRouteLeaveHook": [MockFunction],
+                                    }
+                                  }
+                                  size="normal"
+                                >
+                                  <div
+                                    className="event-issue-header"
+                                  >
+                                    <Title
+                                      size="normal"
+                                    >
+                                      <div
+                                        className="css-xfcjv1-Title-truncateStyles eex8od0"
+                                        size="normal"
+                                      >
+                                        <GlobalSelectionLink
+                                          data-test-id={null}
+                                          style={null}
+                                          to={
+                                            Object {
+                                              "pathname": "/organizations/undefined/issues/268/events/904/",
+                                              "query": Object {
+                                                "_allp": 1,
+                                                "query": undefined,
+                                              },
+                                            }
+                                          }
+                                        >
+                                          <Link
+                                            data-test-id={null}
+                                            onlyActiveOnIndex={false}
+                                            style={null}
+                                            to={
+                                              Object {
+                                                "pathname": "/organizations/undefined/issues/268/events/904/",
+                                                "query": Object {
+                                                  "_allp": 1,
+                                                  "query": undefined,
+                                                },
+                                              }
+                                            }
+                                          >
+                                            <a
+                                              data-test-id={null}
+                                              onClick={[Function]}
+                                              style={null}
+                                            >
+                                              <EventOrGroupTitle
+                                                data={
+                                                  Object {
+                                                    "context": Object {
+                                                      "session:duration": 46363,
+                                                    },
+                                                    "contexts": Object {
+                                                      "browser": Object {
+                                                        "name": "Chrome",
+                                                        "type": "browser",
+                                                        "version": "59.0.3071",
+                                                      },
+                                                      "os": Object {
+                                                        "name": "Mac OS X",
+                                                        "type": "os",
+                                                        "version": "10.12.5",
+                                                      },
+                                                    },
+                                                    "dateCreated": "2017-07-26T00:34:20Z",
+                                                    "dateReceived": "2017-07-26T00:34:20Z",
+                                                    "dist": null,
+                                                    "entries": Array [],
+                                                    "errors": Array [],
+                                                    "eventID": "807f0de4d8c246098f21f8e0f1684f3d",
+                                                    "fingerprints": Array [
+                                                      "2c4887696f708c476a81ce4e834c4b02",
+                                                      "e05da55328a860b21f62e371f0a7507d",
+                                                    ],
+                                                    "groupID": "268",
+                                                    "id": "904",
+                                                    "message": "TypeError Cannot read property 'assignedTo' of undefined app/components/assigneeSelector in assignedTo",
+                                                    "metadata": Object {
+                                                      "type": "TypeError",
+                                                      "value": "Cannot read property 'assignedTo' of undefined",
+                                                    },
+                                                    "packages": Object {},
+                                                    "platform": "javascript",
+                                                    "sdk": Object {
+                                                      "clientIP": "127.0.0.1",
+                                                      "name": "raven-js",
+                                                      "upstream": Object {
+                                                        "isNewer": false,
+                                                        "name": "raven-js",
+                                                        "url": "https://docs.sentry.io/clients/javascript/",
+                                                      },
+                                                      "version": "3.16.1",
+                                                    },
+                                                    "size": 21896,
+                                                    "tags": Array [
+                                                      Object {
+                                                        "key": "browser",
+                                                        "value": "Chrome 59.0.3071",
+                                                      },
+                                                      Object {
+                                                        "key": "browser.name",
+                                                        "value": "Chrome",
+                                                      },
+                                                      Object {
+                                                        "key": "level",
+                                                        "value": "error",
+                                                      },
+                                                      Object {
+                                                        "key": "logger",
+                                                        "value": "javascript",
+                                                      },
+                                                      Object {
+                                                        "key": "os",
+                                                        "value": "Mac OS X 10.12.5",
+                                                      },
+                                                      Object {
+                                                        "key": "os.name",
+                                                        "value": "Mac OS X",
+                                                      },
+                                                      Object {
+                                                        "key": "release",
+                                                        "value": "d5241c9d9d2bcda918c7af72f07cea1e39a096ac",
+                                                      },
+                                                      Object {
+                                                        "key": "transaction",
+                                                        "value": "app/components/assigneeSelector in assignedTo",
+                                                      },
+                                                      Object {
+                                                        "key": "url",
+                                                        "value": "http://localhost:8000/sentry/internal/issues/227/grouping/",
+                                                      },
+                                                      Object {
+                                                        "key": "user",
+                                                        "value": "id:1",
+                                                      },
+                                                    ],
+                                                    "title": "TypeError: Cannot read property 'assignedTo' of undefined",
+                                                    "type": "error",
+                                                    "user": Object {
+                                                      "email": "billy@sentry.io",
+                                                      "id": "1",
+                                                      "ip_address": "127.0.0.1",
+                                                    },
+                                                  }
+                                                }
+                                                hideIcons={true}
+                                                hideLevel={true}
+                                                includeLink={true}
+                                                location={
+                                                  Object {
+                                                    "query": Object {},
+                                                  }
+                                                }
+                                                router={
+                                                  Object {
+                                                    "createHref": [MockFunction] {
+                                                      "calls": Array [
+                                                        Array [
+                                                          Object {
+                                                            "pathname": "/organizations/undefined/issues/268/events/904/",
+                                                            "query": Object {
+                                                              "_allp": 1,
+                                                              "query": undefined,
+                                                            },
+                                                          },
+                                                        ],
+                                                        Array [
+                                                          Object {
+                                                            "pathname": "/organizations/undefined/issues/268/events/904/",
+                                                            "query": Object {
+                                                              "_allp": 1,
+                                                              "query": undefined,
+                                                            },
+                                                          },
+                                                        ],
+                                                        Array [
+                                                          Object {
+                                                            "pathname": "/organizations/undefined/issues/268/events/904/",
+                                                            "query": Object {
+                                                              "_allp": 1,
+                                                              "query": undefined,
+                                                            },
+                                                          },
+                                                        ],
+                                                        Array [
+                                                          Object {
+                                                            "pathname": "/organizations/undefined/issues/268/events/904/",
+                                                            "query": Object {
+                                                              "_allp": 1,
+                                                              "query": undefined,
+                                                            },
+                                                          },
+                                                        ],
+                                                      ],
+                                                      "results": Array [
+                                                        Object {
+                                                          "type": "return",
+                                                          "value": undefined,
+                                                        },
+                                                        Object {
+                                                          "type": "return",
+                                                          "value": undefined,
+                                                        },
+                                                        Object {
+                                                          "type": "return",
+                                                          "value": undefined,
+                                                        },
+                                                        Object {
+                                                          "type": "return",
+                                                          "value": undefined,
+                                                        },
+                                                      ],
+                                                    },
+                                                    "go": [MockFunction],
+                                                    "goBack": [MockFunction],
+                                                    "goForward": [MockFunction],
+                                                    "isActive": [MockFunction],
+                                                    "listen": [MockFunction],
+                                                    "location": Object {
+                                                      "query": Object {},
+                                                    },
+                                                    "push": [MockFunction],
+                                                    "replace": [MockFunction],
+                                                    "setRouteLeaveHook": [MockFunction],
+                                                  }
+                                                }
+                                                size="normal"
+                                                style={
+                                                  Object {
+                                                    "fontWeight": 600,
+                                                  }
+                                                }
+                                              >
+                                                <span
+                                                  style={
+                                                    Object {
+                                                      "fontWeight": 600,
+                                                    }
+                                                  }
+                                                >
+                                                  TypeError
+                                                </span>
+                                              </EventOrGroupTitle>
+                                            </a>
+                                          </Link>
+                                        </GlobalSelectionLink>
+                                      </div>
+                                    </Title>
+                                    <Message
+                                      size="normal"
+                                    >
+                                      <div
+                                        className="css-1ls6xj9-Message-truncateStyles eex8od2"
+                                        size="normal"
+                                      >
+                                        Cannot read property 'assignedTo' of undefined
+                                      </div>
+                                    </Message>
+                                  </div>
+                                </EventOrGroupHeader>
+                              </withRouter(EventOrGroupHeader)>
+                            </div>
+                          </FlowLayout>
+                        </div>
+                      </EventDetails>
+                    </div>
+                  </MergedEventList>
+                </div>
+              </MergedGroup>
+            </MergedItem>
+            <MergedItem
+              disabled={false}
+              event={
+                Object {
+                  "context": Object {
+                    "session:duration": 46363,
+                  },
+                  "contexts": Object {
+                    "browser": Object {
+                      "name": "Chrome",
+                      "type": "browser",
+                      "version": "59.0.3071",
+                    },
+                    "os": Object {
+                      "name": "Mac OS X",
+                      "type": "os",
+                      "version": "10.12.5",
+                    },
+                  },
+                  "dateCreated": "2017-07-26T00:34:20Z",
+                  "dateReceived": "2017-07-26T00:34:20Z",
+                  "dist": null,
+                  "entries": Array [],
+                  "errors": Array [],
+                  "eventID": "807f0de4d8c246098f21f8e0f1684f3d",
+                  "fingerprints": Array [
+                    "2c4887696f708c476a81ce4e834c4b02",
+                    "e05da55328a860b21f62e371f0a7507d",
+                  ],
+                  "groupID": "268",
+                  "id": "904",
+                  "message": "TypeError Cannot read property 'assignedTo' of undefined app/components/assigneeSelector in assignedTo",
+                  "metadata": Object {
+                    "type": "TypeError",
+                    "value": "Cannot read property 'assignedTo' of undefined",
+                  },
+                  "packages": Object {},
+                  "platform": "javascript",
+                  "sdk": Object {
+                    "clientIP": "127.0.0.1",
+                    "name": "raven-js",
+                    "upstream": Object {
+                      "isNewer": false,
+                      "name": "raven-js",
+                      "url": "https://docs.sentry.io/clients/javascript/",
+                    },
+                    "version": "3.16.1",
+                  },
+                  "size": 21896,
+                  "tags": Array [
+                    Object {
+                      "key": "browser",
+                      "value": "Chrome 59.0.3071",
+                    },
+                    Object {
+                      "key": "browser.name",
+                      "value": "Chrome",
+                    },
+                    Object {
+                      "key": "level",
+                      "value": "error",
+                    },
+                    Object {
+                      "key": "logger",
+                      "value": "javascript",
+                    },
+                    Object {
+                      "key": "os",
+                      "value": "Mac OS X 10.12.5",
+                    },
+                    Object {
+                      "key": "os.name",
+                      "value": "Mac OS X",
+                    },
+                    Object {
+                      "key": "release",
+                      "value": "d5241c9d9d2bcda918c7af72f07cea1e39a096ac",
+                    },
+                    Object {
+                      "key": "transaction",
+                      "value": "app/components/assigneeSelector in assignedTo",
+                    },
+                    Object {
+                      "key": "url",
+                      "value": "http://localhost:8000/sentry/internal/issues/227/grouping/",
+                    },
+                    Object {
+                      "key": "user",
+                      "value": "id:1",
+                    },
+                  ],
+                  "title": "TypeError: Cannot read property 'assignedTo' of undefined",
+                  "type": "error",
+                  "user": Object {
+                    "email": "billy@sentry.io",
+                    "id": "1",
+                    "ip_address": "127.0.0.1",
+                  },
+                }
+              }
+              fingerprint="e05da55328a860b21f62e371f0a7507d"
+              key="e05da55328a860b21f62e371f0a7507d"
+              orgId="orgId"
+            >
+              <MergedGroup
+                busy={false}
+              >
+                <div
+                  className="css-vfab7-MergedGroup e9r3vga0"
+                >
+                  <Controls
+                    expanded={true}
+                  >
+                    <Component
+                      className="css-lznge2-Controls e9r3vga2"
+                      expanded={true}
+                    >
+                      <Styled(div)
+                        className="css-lznge2-Controls e9r3vga2"
+                        justifyContent="space-between"
+                      >
+                        <div
+                          className="e9r3vga2 css-1q6dsi8-Controls"
+                        >
+                          <FlowLayout
+                            onClick={[Function]}
+                            truncate={true}
+                          >
+                            <div
+                              className="css-dk1sds-FlowLayout e1uibv5p0"
+                              onClick={[Function]}
+                            >
+                              <ActionColumn>
+                                <div
+                                  className="css-1r34rbx-ActionColumn e9r3vga1"
+                                >
+                                  <Checkbox
+                                    checked={false}
+                                    id="e05da55328a860b21f62e371f0a7507d"
+                                    onChange={[Function]}
+                                    value="e05da55328a860b21f62e371f0a7507d"
+                                  >
+                                    <input
+                                      checked={false}
+                                      id="e05da55328a860b21f62e371f0a7507d"
+                                      onChange={[Function]}
+                                      type="checkbox"
+                                      value="e05da55328a860b21f62e371f0a7507d"
+                                    />
+                                  </Checkbox>
+                                </div>
+                              </ActionColumn>
+                              <Fingerprint
+                                htmlFor="e05da55328a860b21f62e371f0a7507d"
+                                onClick={[Function]}
+                              >
+                                <label
+                                  className="css-cx2dep-Fingerprint e9r3vga3"
+                                  htmlFor="e05da55328a860b21f62e371f0a7507d"
+                                  onClick={[Function]}
+                                >
+                                  e05da55328a860b21f62e371f0a7507d
+                                </label>
+                              </Fingerprint>
+                            </div>
+                          </FlowLayout>
+                          <div>
+                            <span />
+                            <Collapse
+                              onClick={[Function]}
+                            >
+                              <span
+                                className="css-1kppo88-Collapse e9r3vga4"
+                                onClick={[Function]}
+                              >
+                                <i
+                                  className="icon-arrow-up"
+                                />
+                              </span>
+                            </Collapse>
+                          </div>
+                        </div>
+                      </Styled(div)>
+                    </Component>
+                  </Controls>
+                  <MergedEventList
+                    className="event-list"
+                  >
+                    <div
+                      className="event-list css-1kmag7y-MergedEventList e9r3vga5"
+                    >
+                      <EventDetails
+                        className="event-details"
+                      >
+                        <div
+                          className="event-details css-1ryg55t-EventDetails e9r3vga6"
+                        >
+                          <FlowLayout
+                            truncate={true}
+                          >
+                            <div
+                              className="css-dk1sds-FlowLayout e1uibv5p0"
+                            >
+                              <withRouter(EventOrGroupHeader)
+                                data={
+                                  Object {
+                                    "context": Object {
+                                      "session:duration": 46363,
+                                    },
+                                    "contexts": Object {
+                                      "browser": Object {
+                                        "name": "Chrome",
+                                        "type": "browser",
+                                        "version": "59.0.3071",
+                                      },
+                                      "os": Object {
+                                        "name": "Mac OS X",
+                                        "type": "os",
+                                        "version": "10.12.5",
+                                      },
+                                    },
+                                    "dateCreated": "2017-07-26T00:34:20Z",
+                                    "dateReceived": "2017-07-26T00:34:20Z",
+                                    "dist": null,
+                                    "entries": Array [],
+                                    "errors": Array [],
+                                    "eventID": "807f0de4d8c246098f21f8e0f1684f3d",
+                                    "fingerprints": Array [
+                                      "2c4887696f708c476a81ce4e834c4b02",
+                                      "e05da55328a860b21f62e371f0a7507d",
+                                    ],
+                                    "groupID": "268",
+                                    "id": "904",
+                                    "message": "TypeError Cannot read property 'assignedTo' of undefined app/components/assigneeSelector in assignedTo",
+                                    "metadata": Object {
+                                      "type": "TypeError",
+                                      "value": "Cannot read property 'assignedTo' of undefined",
+                                    },
+                                    "packages": Object {},
+                                    "platform": "javascript",
+                                    "sdk": Object {
+                                      "clientIP": "127.0.0.1",
+                                      "name": "raven-js",
+                                      "upstream": Object {
+                                        "isNewer": false,
+                                        "name": "raven-js",
+                                        "url": "https://docs.sentry.io/clients/javascript/",
+                                      },
+                                      "version": "3.16.1",
+                                    },
+                                    "size": 21896,
+                                    "tags": Array [
+                                      Object {
+                                        "key": "browser",
+                                        "value": "Chrome 59.0.3071",
+                                      },
+                                      Object {
+                                        "key": "browser.name",
+                                        "value": "Chrome",
+                                      },
+                                      Object {
+                                        "key": "level",
+                                        "value": "error",
+                                      },
+                                      Object {
+                                        "key": "logger",
+                                        "value": "javascript",
+                                      },
+                                      Object {
+                                        "key": "os",
+                                        "value": "Mac OS X 10.12.5",
+                                      },
+                                      Object {
+                                        "key": "os.name",
+                                        "value": "Mac OS X",
+                                      },
+                                      Object {
+                                        "key": "release",
+                                        "value": "d5241c9d9d2bcda918c7af72f07cea1e39a096ac",
+                                      },
+                                      Object {
+                                        "key": "transaction",
+                                        "value": "app/components/assigneeSelector in assignedTo",
+                                      },
+                                      Object {
+                                        "key": "url",
+                                        "value": "http://localhost:8000/sentry/internal/issues/227/grouping/",
+                                      },
+                                      Object {
+                                        "key": "user",
+                                        "value": "id:1",
+                                      },
+                                    ],
+                                    "title": "TypeError: Cannot read property 'assignedTo' of undefined",
+                                    "type": "error",
+                                    "user": Object {
+                                      "email": "billy@sentry.io",
+                                      "id": "1",
+                                      "ip_address": "127.0.0.1",
+                                    },
+                                  }
+                                }
+                                hideIcons={true}
+                                hideLevel={true}
+                              >
+                                <EventOrGroupHeader
+                                  data={
+                                    Object {
+                                      "context": Object {
+                                        "session:duration": 46363,
+                                      },
+                                      "contexts": Object {
+                                        "browser": Object {
+                                          "name": "Chrome",
+                                          "type": "browser",
+                                          "version": "59.0.3071",
+                                        },
+                                        "os": Object {
+                                          "name": "Mac OS X",
+                                          "type": "os",
+                                          "version": "10.12.5",
+                                        },
+                                      },
+                                      "dateCreated": "2017-07-26T00:34:20Z",
+                                      "dateReceived": "2017-07-26T00:34:20Z",
+                                      "dist": null,
+                                      "entries": Array [],
+                                      "errors": Array [],
+                                      "eventID": "807f0de4d8c246098f21f8e0f1684f3d",
+                                      "fingerprints": Array [
+                                        "2c4887696f708c476a81ce4e834c4b02",
+                                        "e05da55328a860b21f62e371f0a7507d",
+                                      ],
+                                      "groupID": "268",
+                                      "id": "904",
+                                      "message": "TypeError Cannot read property 'assignedTo' of undefined app/components/assigneeSelector in assignedTo",
+                                      "metadata": Object {
+                                        "type": "TypeError",
+                                        "value": "Cannot read property 'assignedTo' of undefined",
+                                      },
+                                      "packages": Object {},
+                                      "platform": "javascript",
+                                      "sdk": Object {
+                                        "clientIP": "127.0.0.1",
+                                        "name": "raven-js",
+                                        "upstream": Object {
+                                          "isNewer": false,
+                                          "name": "raven-js",
+                                          "url": "https://docs.sentry.io/clients/javascript/",
+                                        },
+                                        "version": "3.16.1",
+                                      },
+                                      "size": 21896,
+                                      "tags": Array [
+                                        Object {
+                                          "key": "browser",
+                                          "value": "Chrome 59.0.3071",
+                                        },
+                                        Object {
+                                          "key": "browser.name",
+                                          "value": "Chrome",
+                                        },
+                                        Object {
+                                          "key": "level",
+                                          "value": "error",
+                                        },
+                                        Object {
+                                          "key": "logger",
+                                          "value": "javascript",
+                                        },
+                                        Object {
+                                          "key": "os",
+                                          "value": "Mac OS X 10.12.5",
+                                        },
+                                        Object {
+                                          "key": "os.name",
+                                          "value": "Mac OS X",
+                                        },
+                                        Object {
+                                          "key": "release",
+                                          "value": "d5241c9d9d2bcda918c7af72f07cea1e39a096ac",
+                                        },
+                                        Object {
+                                          "key": "transaction",
+                                          "value": "app/components/assigneeSelector in assignedTo",
+                                        },
+                                        Object {
+                                          "key": "url",
+                                          "value": "http://localhost:8000/sentry/internal/issues/227/grouping/",
+                                        },
+                                        Object {
+                                          "key": "user",
+                                          "value": "id:1",
+                                        },
+                                      ],
+                                      "title": "TypeError: Cannot read property 'assignedTo' of undefined",
+                                      "type": "error",
+                                      "user": Object {
+                                        "email": "billy@sentry.io",
+                                        "id": "1",
+                                        "ip_address": "127.0.0.1",
+                                      },
+                                    }
+                                  }
+                                  hideIcons={true}
+                                  hideLevel={true}
+                                  includeLink={true}
+                                  location={
+                                    Object {
+                                      "query": Object {},
+                                    }
+                                  }
+                                  router={
+                                    Object {
+                                      "createHref": [MockFunction] {
+                                        "calls": Array [
+                                          Array [
+                                            Object {
+                                              "pathname": "/organizations/undefined/issues/268/events/904/",
+                                              "query": Object {
+                                                "_allp": 1,
+                                                "query": undefined,
+                                              },
+                                            },
+                                          ],
+                                          Array [
+                                            Object {
+                                              "pathname": "/organizations/undefined/issues/268/events/904/",
+                                              "query": Object {
+                                                "_allp": 1,
+                                                "query": undefined,
+                                              },
+                                            },
+                                          ],
+                                          Array [
+                                            Object {
+                                              "pathname": "/organizations/undefined/issues/268/events/904/",
+                                              "query": Object {
+                                                "_allp": 1,
+                                                "query": undefined,
+                                              },
+                                            },
+                                          ],
+                                          Array [
+                                            Object {
+                                              "pathname": "/organizations/undefined/issues/268/events/904/",
+                                              "query": Object {
+                                                "_allp": 1,
+                                                "query": undefined,
+                                              },
+                                            },
+                                          ],
+                                        ],
+                                        "results": Array [
+                                          Object {
+                                            "type": "return",
+                                            "value": undefined,
+                                          },
+                                          Object {
+                                            "type": "return",
+                                            "value": undefined,
+                                          },
+                                          Object {
+                                            "type": "return",
+                                            "value": undefined,
+                                          },
+                                          Object {
+                                            "type": "return",
+                                            "value": undefined,
+                                          },
+                                        ],
+                                      },
+                                      "go": [MockFunction],
+                                      "goBack": [MockFunction],
+                                      "goForward": [MockFunction],
+                                      "isActive": [MockFunction],
+                                      "listen": [MockFunction],
+                                      "location": Object {
+                                        "query": Object {},
+                                      },
+                                      "push": [MockFunction],
+                                      "replace": [MockFunction],
+                                      "setRouteLeaveHook": [MockFunction],
+                                    }
+                                  }
+                                  size="normal"
+                                >
+                                  <div
+                                    className="event-issue-header"
+                                  >
+                                    <Title
+                                      size="normal"
+                                    >
+                                      <div
+                                        className="css-xfcjv1-Title-truncateStyles eex8od0"
+                                        size="normal"
+                                      >
+                                        <GlobalSelectionLink
+                                          data-test-id={null}
+                                          style={null}
+                                          to={
+                                            Object {
+                                              "pathname": "/organizations/undefined/issues/268/events/904/",
+                                              "query": Object {
+                                                "_allp": 1,
+                                                "query": undefined,
+                                              },
+                                            }
+                                          }
+                                        >
+                                          <Link
+                                            data-test-id={null}
+                                            onlyActiveOnIndex={false}
+                                            style={null}
+                                            to={
+                                              Object {
+                                                "pathname": "/organizations/undefined/issues/268/events/904/",
+                                                "query": Object {
+                                                  "_allp": 1,
+                                                  "query": undefined,
+                                                },
+                                              }
+                                            }
+                                          >
+                                            <a
+                                              data-test-id={null}
+                                              onClick={[Function]}
+                                              style={null}
+                                            >
+                                              <EventOrGroupTitle
+                                                data={
+                                                  Object {
+                                                    "context": Object {
+                                                      "session:duration": 46363,
+                                                    },
+                                                    "contexts": Object {
+                                                      "browser": Object {
+                                                        "name": "Chrome",
+                                                        "type": "browser",
+                                                        "version": "59.0.3071",
+                                                      },
+                                                      "os": Object {
+                                                        "name": "Mac OS X",
+                                                        "type": "os",
+                                                        "version": "10.12.5",
+                                                      },
+                                                    },
+                                                    "dateCreated": "2017-07-26T00:34:20Z",
+                                                    "dateReceived": "2017-07-26T00:34:20Z",
+                                                    "dist": null,
+                                                    "entries": Array [],
+                                                    "errors": Array [],
+                                                    "eventID": "807f0de4d8c246098f21f8e0f1684f3d",
+                                                    "fingerprints": Array [
+                                                      "2c4887696f708c476a81ce4e834c4b02",
+                                                      "e05da55328a860b21f62e371f0a7507d",
+                                                    ],
+                                                    "groupID": "268",
+                                                    "id": "904",
+                                                    "message": "TypeError Cannot read property 'assignedTo' of undefined app/components/assigneeSelector in assignedTo",
+                                                    "metadata": Object {
+                                                      "type": "TypeError",
+                                                      "value": "Cannot read property 'assignedTo' of undefined",
+                                                    },
+                                                    "packages": Object {},
+                                                    "platform": "javascript",
+                                                    "sdk": Object {
+                                                      "clientIP": "127.0.0.1",
+                                                      "name": "raven-js",
+                                                      "upstream": Object {
+                                                        "isNewer": false,
+                                                        "name": "raven-js",
+                                                        "url": "https://docs.sentry.io/clients/javascript/",
+                                                      },
+                                                      "version": "3.16.1",
+                                                    },
+                                                    "size": 21896,
+                                                    "tags": Array [
+                                                      Object {
+                                                        "key": "browser",
+                                                        "value": "Chrome 59.0.3071",
+                                                      },
+                                                      Object {
+                                                        "key": "browser.name",
+                                                        "value": "Chrome",
+                                                      },
+                                                      Object {
+                                                        "key": "level",
+                                                        "value": "error",
+                                                      },
+                                                      Object {
+                                                        "key": "logger",
+                                                        "value": "javascript",
+                                                      },
+                                                      Object {
+                                                        "key": "os",
+                                                        "value": "Mac OS X 10.12.5",
+                                                      },
+                                                      Object {
+                                                        "key": "os.name",
+                                                        "value": "Mac OS X",
+                                                      },
+                                                      Object {
+                                                        "key": "release",
+                                                        "value": "d5241c9d9d2bcda918c7af72f07cea1e39a096ac",
+                                                      },
+                                                      Object {
+                                                        "key": "transaction",
+                                                        "value": "app/components/assigneeSelector in assignedTo",
+                                                      },
+                                                      Object {
+                                                        "key": "url",
+                                                        "value": "http://localhost:8000/sentry/internal/issues/227/grouping/",
+                                                      },
+                                                      Object {
+                                                        "key": "user",
+                                                        "value": "id:1",
+                                                      },
+                                                    ],
+                                                    "title": "TypeError: Cannot read property 'assignedTo' of undefined",
+                                                    "type": "error",
+                                                    "user": Object {
+                                                      "email": "billy@sentry.io",
+                                                      "id": "1",
+                                                      "ip_address": "127.0.0.1",
+                                                    },
+                                                  }
+                                                }
+                                                hideIcons={true}
+                                                hideLevel={true}
+                                                includeLink={true}
+                                                location={
+                                                  Object {
+                                                    "query": Object {},
+                                                  }
+                                                }
+                                                router={
+                                                  Object {
+                                                    "createHref": [MockFunction] {
+                                                      "calls": Array [
+                                                        Array [
+                                                          Object {
+                                                            "pathname": "/organizations/undefined/issues/268/events/904/",
+                                                            "query": Object {
+                                                              "_allp": 1,
+                                                              "query": undefined,
+                                                            },
+                                                          },
+                                                        ],
+                                                        Array [
+                                                          Object {
+                                                            "pathname": "/organizations/undefined/issues/268/events/904/",
+                                                            "query": Object {
+                                                              "_allp": 1,
+                                                              "query": undefined,
+                                                            },
+                                                          },
+                                                        ],
+                                                        Array [
+                                                          Object {
+                                                            "pathname": "/organizations/undefined/issues/268/events/904/",
+                                                            "query": Object {
+                                                              "_allp": 1,
+                                                              "query": undefined,
+                                                            },
+                                                          },
+                                                        ],
+                                                        Array [
+                                                          Object {
+                                                            "pathname": "/organizations/undefined/issues/268/events/904/",
+                                                            "query": Object {
+                                                              "_allp": 1,
+                                                              "query": undefined,
+                                                            },
+                                                          },
+                                                        ],
+                                                      ],
+                                                      "results": Array [
+                                                        Object {
+                                                          "type": "return",
+                                                          "value": undefined,
+                                                        },
+                                                        Object {
+                                                          "type": "return",
+                                                          "value": undefined,
+                                                        },
+                                                        Object {
+                                                          "type": "return",
+                                                          "value": undefined,
+                                                        },
+                                                        Object {
+                                                          "type": "return",
+                                                          "value": undefined,
+                                                        },
+                                                      ],
+                                                    },
+                                                    "go": [MockFunction],
+                                                    "goBack": [MockFunction],
+                                                    "goForward": [MockFunction],
+                                                    "isActive": [MockFunction],
+                                                    "listen": [MockFunction],
+                                                    "location": Object {
+                                                      "query": Object {},
+                                                    },
+                                                    "push": [MockFunction],
+                                                    "replace": [MockFunction],
+                                                    "setRouteLeaveHook": [MockFunction],
+                                                  }
+                                                }
+                                                size="normal"
+                                                style={
+                                                  Object {
+                                                    "fontWeight": 600,
+                                                  }
+                                                }
+                                              >
+                                                <span
+                                                  style={
+                                                    Object {
+                                                      "fontWeight": 600,
+                                                    }
+                                                  }
+                                                >
+                                                  TypeError
+                                                </span>
+                                              </EventOrGroupTitle>
+                                            </a>
+                                          </Link>
+                                        </GlobalSelectionLink>
+                                      </div>
+                                    </Title>
+                                    <Message
+                                      size="normal"
+                                    >
+                                      <div
+                                        className="css-1ls6xj9-Message-truncateStyles eex8od2"
+                                        size="normal"
+                                      >
+                                        Cannot read property 'assignedTo' of undefined
+                                      </div>
+                                    </Message>
+                                  </div>
+                                </EventOrGroupHeader>
+                              </withRouter(EventOrGroupHeader)>
+                            </div>
+                          </FlowLayout>
+                        </div>
+                      </EventDetails>
+                    </div>
+                  </MergedEventList>
+                </div>
+              </MergedGroup>
+            </MergedItem>
+          </div>
+        </MergedItems>
+        <Styled(Pagination)
+          onCursor={[Function]}
+        >
+          <Pagination
+            className="css-yneqnx e1vkspke0"
+            onCursor={[Function]}
+          />
+        </Styled(Pagination)>
+      </div>
+    </MergedList>
+  </div>
+</GroupMergedView>
 `;
diff --git a/tests/js/spec/views/organizationGroupDetails/__snapshots__/groupSimilar.spec.jsx.snap b/tests/js/spec/views/organizationGroupDetails/__snapshots__/groupSimilar.spec.jsx.snap
index 8d3056a7fe..02fc0a06c9 100644
--- a/tests/js/spec/views/organizationGroupDetails/__snapshots__/groupSimilar.spec.jsx.snap
+++ b/tests/js/spec/views/organizationGroupDetails/__snapshots__/groupSimilar.spec.jsx.snap
@@ -12,7 +12,7 @@ exports[`Issues Similar View renders initially with loading component 1`] = `
      
     This is an experimental feature. Data may not be immediately available while we process merges.
   </div>
-  <LoadingIndicator />
+  <profiler(LoadingIndicator) />
 </div>
 `;
 
diff --git a/tests/js/spec/views/organizationGroupDetails/groupMergedView.spec.jsx b/tests/js/spec/views/organizationGroupDetails/groupMergedView.spec.jsx
index 384208d886..84d9f97615 100644
--- a/tests/js/spec/views/organizationGroupDetails/groupMergedView.spec.jsx
+++ b/tests/js/spec/views/organizationGroupDetails/groupMergedView.spec.jsx
@@ -1,7 +1,7 @@
 import React from 'react';
 import PropTypes from 'prop-types';
 
-import {shallow} from 'sentry-test/enzyme';
+import {mountWithTheme} from 'sentry-test/enzyme';
 import {GroupMergedView} from 'app/views/organizationGroupDetails/groupMerged';
 import {Client} from 'app/api';
 
@@ -38,7 +38,7 @@ describe('Issues -> Merged View', function() {
   });
 
   it('renders initially with loading component', function() {
-    const wrapper = shallow(
+    const wrapper = mountWithTheme(
       <GroupMergedView
         project={TestStubs.Project({slug: 'projectId'})}
         params={{orgId: 'orgId', projectId: 'projectId', groupId: 'groupId'}}
@@ -51,7 +51,7 @@ describe('Issues -> Merged View', function() {
   });
 
   it('renders with mocked data', async function() {
-    const wrapper = shallow(
+    const wrapper = mountWithTheme(
       <GroupMergedView
         project={TestStubs.Project({slug: 'projectId'})}
         params={{orgId: 'orgId', projectId: 'projectId', groupId: 'groupId'}}
@@ -74,6 +74,7 @@ describe('Issues -> Merged View', function() {
     await tick();
     wrapper.update();
     expect(wrapper.find('LoadingIndicator')).toHaveLength(0);
+
     expect(wrapper).toMatchSnapshot();
   });
 });
diff --git a/tests/js/spec/views/projectPlugins/__snapshots__/projectPlugins.spec.jsx.snap b/tests/js/spec/views/projectPlugins/__snapshots__/projectPlugins.spec.jsx.snap
index 6427aec6a7..14f7a5213f 100644
--- a/tests/js/spec/views/projectPlugins/__snapshots__/projectPlugins.spec.jsx.snap
+++ b/tests/js/spec/views/projectPlugins/__snapshots__/projectPlugins.spec.jsx.snap
@@ -1,88 +1,1079 @@
 // Jest Snapshot v1, https://goo.gl/fbAQLP
 
 exports[`ProjectPlugins renders 1`] = `
-<Panel>
-  <PanelHeader>
-    <div>
-      Legacy Integration
-    </div>
-    <div>
-      Enabled
-    </div>
-  </PanelHeader>
-  <PanelBody
-    flexible={false}
-    withPadding={false}
-  >
-    <PanelAlert
-      type="warning"
+<ProjectPlugins
+  params={
+    Object {
+      "orgId": "org-slug",
+      "projectId": "project-slug",
+    }
+  }
+  plugins={
+    Array [
+      Object {
+        "assets": Array [],
+        "author": Object {
+          "name": "Sentry Team",
+          "url": "https://github.com/getsentry/sentry",
+        },
+        "canDisable": true,
+        "enabled": false,
+        "hasConfiguration": true,
+        "id": "amazon-sqs",
+        "isHidden": false,
+        "name": "Amazon SQS",
+        "slug": "amazon-sqs",
+        "version": "8.23.0.dev0",
+      },
+      Object {
+        "assets": Array [],
+        "author": Object {
+          "name": "Sentry Team",
+          "url": "https://github.com/getsentry/sentry",
+        },
+        "canDisable": false,
+        "enabled": true,
+        "hasConfiguration": false,
+        "id": "github",
+        "isHidden": false,
+        "name": "GitHub",
+        "slug": "github",
+        "version": "8.23.0.dev0",
+      },
+      Object {
+        "assets": Array [],
+        "author": Object {
+          "name": "Sentry Team",
+          "url": "https://github.com/getsentry/sentry",
+        },
+        "canDisable": true,
+        "enabled": false,
+        "hasConfiguration": true,
+        "id": "hidden-plugin",
+        "isHidden": true,
+        "name": "Hidden Plugin",
+        "slug": "hidden-plugin",
+        "version": "8.23.0.dev0",
+      },
+    ]
+  }
+>
+  <Panel>
+    <Component
+      className="css-15hwgrz-Panel e119nu470"
     >
-      <WithOrganizationMockWrapper
-        access={
-          Array [
-            "org:integrations",
-          ]
-        }
+      <div
+        className="css-15hwgrz-Panel e119nu470"
       >
-        <Component />
-      </WithOrganizationMockWrapper>
-    </PanelAlert>
-    <PanelItem
-      key="amazon-sqs"
-      p={2}
-    >
-      <WithOrganizationMockWrapper
-        assets={Array []}
-        author={
-          Object {
-            "name": "Sentry Team",
-            "url": "https://github.com/getsentry/sentry",
-          }
-        }
-        canDisable={true}
-        enabled={false}
-        hasConfiguration={true}
-        id="amazon-sqs"
-        isHidden={false}
-        name="Amazon SQS"
-        params={
-          Object {
-            "orgId": "org-slug",
-            "projectId": "project-slug",
-          }
-        }
-        slug="amazon-sqs"
-        version="8.23.0.dev0"
-      />
-    </PanelItem>
-    <PanelItem
-      key="github"
-      p={2}
-    >
-      <WithOrganizationMockWrapper
-        assets={Array []}
-        author={
-          Object {
-            "name": "Sentry Team",
-            "url": "https://github.com/getsentry/sentry",
-          }
-        }
-        canDisable={false}
-        enabled={true}
-        hasConfiguration={false}
-        id="github"
-        isHidden={false}
-        name="GitHub"
-        params={
-          Object {
-            "orgId": "org-slug",
-            "projectId": "project-slug",
-          }
-        }
-        slug="github"
-        version="8.23.0.dev0"
-      />
-    </PanelItem>
-  </PanelBody>
-</Panel>
+        <PanelHeader>
+          <div
+            className="css-1es1m70-PanelHeader en8g1d30"
+          >
+            <div>
+              Legacy Integration
+            </div>
+            <div>
+              Enabled
+            </div>
+          </div>
+        </PanelHeader>
+        <PanelBody
+          flexible={false}
+          withPadding={false}
+        >
+          <FlexBox
+            withPadding={false}
+          >
+            <div
+              className="css-1ehogmz-FlexBox e1vnwt6f0"
+            >
+              <PanelAlert
+                type="warning"
+              >
+                <Component
+                  className="css-14tfigf-PanelAlert e1cszazt0"
+                  type="warning"
+                >
+                  <Alert
+                    className="css-14tfigf-PanelAlert e1cszazt0"
+                    icon="icon-circle-exclamation"
+                    iconSize="24px"
+                    system={true}
+                    type="warning"
+                  >
+                    <Component
+                      className="e1cszazt0 css-952s9x-Alert-PanelAlert ejthpj82"
+                      icon="icon-circle-exclamation"
+                      iconSize="24px"
+                      system={true}
+                      type="warning"
+                    >
+                      <div
+                        className="ref-warning e1cszazt0 css-952s9x-Alert-PanelAlert ejthpj82"
+                      >
+                        <StyledInlineSvg
+                          size="24px"
+                          src="icon-circle-exclamation"
+                        >
+                          <ForwardRef
+                            className="css-p7z0xe-InlineSvg-StyledInlineSvg ejthpj80"
+                            size="24px"
+                            src="icon-circle-exclamation"
+                          >
+                            <svg
+                              className="css-p7z0xe-InlineSvg-StyledInlineSvg ejthpj80"
+                              height="24px"
+                              viewBox={Object {}}
+                              width="24px"
+                            >
+                              <use
+                                href="#test"
+                                xlinkHref="#test"
+                              />
+                            </svg>
+                          </ForwardRef>
+                        </StyledInlineSvg>
+                        <StyledTextBlock>
+                          <div
+                            className="css-c2j570-TextBlock-StyledTextBlock ejthpj81"
+                          >
+                            <WithOrganizationMockWrapper
+                              access={
+                                Array [
+                                  "org:integrations",
+                                ]
+                              }
+                            >
+                              <withConfig(Access)
+                                access={
+                                  Array [
+                                    "org:integrations",
+                                  ]
+                                }
+                                organization={
+                                  Object {
+                                    "access": Array [
+                                      "org:read",
+                                      "org:write",
+                                      "org:admin",
+                                      "org:integrations",
+                                      "project:read",
+                                      "project:write",
+                                      "project:admin",
+                                      "team:read",
+                                      "team:write",
+                                      "team:admin",
+                                    ],
+                                    "features": Array [],
+                                    "id": "3",
+                                    "name": "Organization Name",
+                                    "onboardingTasks": Array [],
+                                    "projects": Array [],
+                                    "scrapeJavaScript": true,
+                                    "slug": "org-slug",
+                                    "status": Object {
+                                      "id": "active",
+                                      "name": "active",
+                                    },
+                                    "teams": Array [],
+                                  }
+                                }
+                              >
+                                <Access
+                                  access={
+                                    Array [
+                                      "org:integrations",
+                                    ]
+                                  }
+                                  config={
+                                    Object {
+                                      "features": Set {},
+                                      "messages": Array [],
+                                      "user": Object {
+                                        "email": "foo@example.com",
+                                        "flags": Object {
+                                          "newsletter_consent_prompt": false,
+                                        },
+                                        "hasPasswordAuth": true,
+                                        "id": "1",
+                                        "isAuthenticated": true,
+                                        "name": "Foo Bar",
+                                        "options": Object {
+                                          "timezone": "UTC",
+                                        },
+                                        "permissions": Set {},
+                                        "username": "foo@example.com",
+                                      },
+                                    }
+                                  }
+                                  isSuperuser={false}
+                                  organization={
+                                    Object {
+                                      "access": Array [
+                                        "org:read",
+                                        "org:write",
+                                        "org:admin",
+                                        "org:integrations",
+                                        "project:read",
+                                        "project:write",
+                                        "project:admin",
+                                        "team:read",
+                                        "team:write",
+                                        "team:admin",
+                                      ],
+                                      "features": Array [],
+                                      "id": "3",
+                                      "name": "Organization Name",
+                                      "onboardingTasks": Array [],
+                                      "projects": Array [],
+                                      "scrapeJavaScript": true,
+                                      "slug": "org-slug",
+                                      "status": Object {
+                                        "id": "active",
+                                        "name": "active",
+                                      },
+                                      "teams": Array [],
+                                    }
+                                  }
+                                  renderNoAccessMessage={false}
+                                  requireAll={true}
+                                >
+                                  <span
+                                    key="5"
+                                  >
+                                    <span
+                                      key="0"
+                                    >
+                                      Legacy Integrations must be configured per-project. It's recommended to prefer organization integrations over the legacy project integrations when available. Visit the 
+                                    </span>
+                                    <Link
+                                      key="2"
+                                      to="/settings/org-slug/integrations"
+                                    >
+                                      <Link
+                                        onlyActiveOnIndex={false}
+                                        style={Object {}}
+                                        to="/settings/org-slug/integrations"
+                                      >
+                                        <a
+                                          onClick={[Function]}
+                                          style={Object {}}
+                                        >
+                                          <span
+                                            key="1"
+                                          >
+                                            organization integrations
+                                          </span>
+                                        </a>
+                                      </Link>
+                                    </Link>
+                                    <span
+                                      key="3"
+                                    >
+                                       settings to manage them.
+                                    </span>
+                                  </span>
+                                </Access>
+                              </withConfig(Access)>
+                            </WithOrganizationMockWrapper>
+                          </div>
+                        </StyledTextBlock>
+                      </div>
+                    </Component>
+                  </Alert>
+                </Component>
+              </PanelAlert>
+              <PanelItem
+                key="amazon-sqs"
+                p={2}
+              >
+                <div
+                  className="css-ylaqrk-PanelItem ej5ox20"
+                >
+                  <WithOrganizationMockWrapper
+                    assets={Array []}
+                    author={
+                      Object {
+                        "name": "Sentry Team",
+                        "url": "https://github.com/getsentry/sentry",
+                      }
+                    }
+                    canDisable={true}
+                    enabled={false}
+                    hasConfiguration={true}
+                    id="amazon-sqs"
+                    isHidden={false}
+                    name="Amazon SQS"
+                    params={
+                      Object {
+                        "orgId": "org-slug",
+                        "projectId": "project-slug",
+                      }
+                    }
+                    slug="amazon-sqs"
+                    version="8.23.0.dev0"
+                  >
+                    <withProject(ProjectPluginRow)
+                      assets={Array []}
+                      author={
+                        Object {
+                          "name": "Sentry Team",
+                          "url": "https://github.com/getsentry/sentry",
+                        }
+                      }
+                      canDisable={true}
+                      enabled={false}
+                      hasConfiguration={true}
+                      id="amazon-sqs"
+                      isHidden={false}
+                      name="Amazon SQS"
+                      organization={
+                        Object {
+                          "access": Array [
+                            "org:read",
+                            "org:write",
+                            "org:admin",
+                            "org:integrations",
+                            "project:read",
+                            "project:write",
+                            "project:admin",
+                            "team:read",
+                            "team:write",
+                            "team:admin",
+                          ],
+                          "features": Array [],
+                          "id": "3",
+                          "name": "Organization Name",
+                          "onboardingTasks": Array [],
+                          "projects": Array [],
+                          "scrapeJavaScript": true,
+                          "slug": "org-slug",
+                          "status": Object {
+                            "id": "active",
+                            "name": "active",
+                          },
+                          "teams": Array [],
+                        }
+                      }
+                      params={
+                        Object {
+                          "orgId": "org-slug",
+                          "projectId": "project-slug",
+                        }
+                      }
+                      slug="amazon-sqs"
+                      version="8.23.0.dev0"
+                    >
+                      <ProjectPluginRow
+                        assets={Array []}
+                        author={
+                          Object {
+                            "name": "Sentry Team",
+                            "url": "https://github.com/getsentry/sentry",
+                          }
+                        }
+                        canDisable={true}
+                        enabled={false}
+                        hasConfiguration={true}
+                        id="amazon-sqs"
+                        isHidden={false}
+                        name="Amazon SQS"
+                        organization={
+                          Object {
+                            "access": Array [
+                              "org:read",
+                              "org:write",
+                              "org:admin",
+                              "org:integrations",
+                              "project:read",
+                              "project:write",
+                              "project:admin",
+                              "team:read",
+                              "team:write",
+                              "team:admin",
+                            ],
+                            "features": Array [],
+                            "id": "3",
+                            "name": "Organization Name",
+                            "onboardingTasks": Array [],
+                            "projects": Array [],
+                            "scrapeJavaScript": true,
+                            "slug": "org-slug",
+                            "status": Object {
+                              "id": "active",
+                              "name": "active",
+                            },
+                            "teams": Array [],
+                          }
+                        }
+                        params={
+                          Object {
+                            "orgId": "org-slug",
+                            "projectId": "project-slug",
+                          }
+                        }
+                        project={
+                          Object {
+                            "environments": Array [],
+                            "hasAccess": true,
+                            "id": "2",
+                            "isBookmarked": false,
+                            "isMember": true,
+                            "name": "Project Name",
+                            "slug": "project-slug",
+                            "teams": Array [],
+                          }
+                        }
+                        slug="amazon-sqs"
+                        version="8.23.0.dev0"
+                      >
+                        <WithOrganizationMockWrapper
+                          access={
+                            Array [
+                              "project:write",
+                            ]
+                          }
+                        >
+                          <withConfig(Access)
+                            access={
+                              Array [
+                                "project:write",
+                              ]
+                            }
+                            organization={
+                              Object {
+                                "access": Array [
+                                  "org:read",
+                                  "org:write",
+                                  "org:admin",
+                                  "org:integrations",
+                                  "project:read",
+                                  "project:write",
+                                  "project:admin",
+                                  "team:read",
+                                  "team:write",
+                                  "team:admin",
+                                ],
+                                "features": Array [],
+                                "id": "3",
+                                "name": "Organization Name",
+                                "onboardingTasks": Array [],
+                                "projects": Array [],
+                                "scrapeJavaScript": true,
+                                "slug": "org-slug",
+                                "status": Object {
+                                  "id": "active",
+                                  "name": "active",
+                                },
+                                "teams": Array [],
+                              }
+                            }
+                          >
+                            <Access
+                              access={
+                                Array [
+                                  "project:write",
+                                ]
+                              }
+                              config={
+                                Object {
+                                  "features": Set {},
+                                  "messages": Array [],
+                                  "user": Object {
+                                    "email": "foo@example.com",
+                                    "flags": Object {
+                                      "newsletter_consent_prompt": false,
+                                    },
+                                    "hasPasswordAuth": true,
+                                    "id": "1",
+                                    "isAuthenticated": true,
+                                    "name": "Foo Bar",
+                                    "options": Object {
+                                      "timezone": "UTC",
+                                    },
+                                    "permissions": Set {},
+                                    "username": "foo@example.com",
+                                  },
+                                }
+                              }
+                              isSuperuser={false}
+                              organization={
+                                Object {
+                                  "access": Array [
+                                    "org:read",
+                                    "org:write",
+                                    "org:admin",
+                                    "org:integrations",
+                                    "project:read",
+                                    "project:write",
+                                    "project:admin",
+                                    "team:read",
+                                    "team:write",
+                                    "team:admin",
+                                  ],
+                                  "features": Array [],
+                                  "id": "3",
+                                  "name": "Organization Name",
+                                  "onboardingTasks": Array [],
+                                  "projects": Array [],
+                                  "scrapeJavaScript": true,
+                                  "slug": "org-slug",
+                                  "status": Object {
+                                    "id": "active",
+                                    "name": "active",
+                                  },
+                                  "teams": Array [],
+                                }
+                              }
+                              renderNoAccessMessage={false}
+                              requireAll={true}
+                            >
+                              <Styled(div)
+                                alignItems="center"
+                                className="amazon-sqs"
+                                flex="1"
+                                key="amazon-sqs"
+                              >
+                                <div
+                                  className="amazon-sqs css-1j7oo6s"
+                                >
+                                  <PluginInfo>
+                                    <div
+                                      className="css-1jrzgda-PluginInfo e1y7j6vq0"
+                                    >
+                                      <StyledPluginIcon
+                                        pluginId="amazon-sqs"
+                                        size={48}
+                                      >
+                                        <div
+                                          className="css-1xh0prp-PluginIcon-StyledPluginIcon e1y7j6vq2"
+                                          size={48}
+                                        />
+                                      </StyledPluginIcon>
+                                      <Styled(div)
+                                        flexDirection="column"
+                                        justifyContent="center"
+                                      >
+                                        <div
+                                          className="css-bq2mgp"
+                                        >
+                                          <PluginName>
+                                            <div
+                                              className="css-1rrljgj-PluginName e1y7j6vq1"
+                                            >
+                                              Amazon SQS 
+                                              <Version>
+                                                <span
+                                                  className="css-1czymow-Version e1y7j6vq3"
+                                                >
+                                                  v8.23.0.dev0
+                                                </span>
+                                              </Version>
+                                            </div>
+                                          </PluginName>
+                                          <div>
+                                            <EmotionCssPropInternal
+                                              __EMOTION_TYPE_PLEASE_DO_NOT_USE__={
+                                                Object {
+                                                  "$$typeof": Symbol(react.forward_ref),
+                                                  "render": [Function],
+                                                }
+                                              }
+                                              css={
+                                                Object {
+                                                  "name": "1nx57m5-grayText",
+                                                  "styles": "color:#979ba0;;label:grayText;",
+                                                }
+                                              }
+                                              href="https://github.com/getsentry/sentry"
+                                            >
+                                              <ForwardRef
+                                                className="css-1nx57m5-grayText"
+                                                href="https://github.com/getsentry/sentry"
+                                              >
+                                                <a
+                                                  className="css-1nx57m5-grayText"
+                                                  href="https://github.com/getsentry/sentry"
+                                                  rel="noreferrer noopener"
+                                                  target="_blank"
+                                                >
+                                                  Sentry Team
+                                                </a>
+                                              </ForwardRef>
+                                            </EmotionCssPropInternal>
+                                            <span>
+                                               
+                                              ·
+                                               
+                                              <EmotionCssPropInternal
+                                                __EMOTION_TYPE_PLEASE_DO_NOT_USE__={[Function]}
+                                                css={
+                                                  Object {
+                                                    "name": "1nx57m5-grayText",
+                                                    "styles": "color:#979ba0;;label:grayText;",
+                                                  }
+                                                }
+                                                to="amazon-sqs"
+                                              >
+                                                <Link
+                                                  className="css-1nx57m5-grayText"
+                                                  onlyActiveOnIndex={false}
+                                                  style={Object {}}
+                                                  to="amazon-sqs"
+                                                >
+                                                  <a
+                                                    className="css-1nx57m5-grayText"
+                                                    onClick={[Function]}
+                                                    style={Object {}}
+                                                  >
+                                                    Configure plugin
+                                                  </a>
+                                                </Link>
+                                              </EmotionCssPropInternal>
+                                            </span>
+                                          </div>
+                                        </div>
+                                      </Styled(div)>
+                                    </div>
+                                  </PluginInfo>
+                                  <ForwardRef
+                                    isActive={false}
+                                    isDisabled={false}
+                                    size="lg"
+                                    toggle={[Function]}
+                                  >
+                                    <Switch
+                                      forwardRef={null}
+                                      isActive={false}
+                                      isDisabled={false}
+                                      size="lg"
+                                      toggle={[Function]}
+                                    >
+                                      <SwitchButton
+                                        aria-checked={false}
+                                        data-test-id="switch"
+                                        isActive={false}
+                                        isDisabled={false}
+                                        onClick={[Function]}
+                                        role="checkbox"
+                                        size="lg"
+                                        type="button"
+                                      >
+                                        <button
+                                          aria-checked={false}
+                                          className="css-1tqvyh8-SwitchButton ezmyi9u0"
+                                          data-test-id="switch"
+                                          onClick={[Function]}
+                                          role="checkbox"
+                                          size="lg"
+                                          type="button"
+                                        >
+                                          <Toggle
+                                            isActive={false}
+                                            isDisabled={false}
+                                            size="lg"
+                                          >
+                                            <span
+                                              className="css-j7jjrc-Toggle ezmyi9u1"
+                                              size="lg"
+                                            />
+                                          </Toggle>
+                                        </button>
+                                      </SwitchButton>
+                                    </Switch>
+                                  </ForwardRef>
+                                </div>
+                              </Styled(div)>
+                            </Access>
+                          </withConfig(Access)>
+                        </WithOrganizationMockWrapper>
+                      </ProjectPluginRow>
+                    </withProject(ProjectPluginRow)>
+                  </WithOrganizationMockWrapper>
+                </div>
+              </PanelItem>
+              <PanelItem
+                key="github"
+                p={2}
+              >
+                <div
+                  className="css-ylaqrk-PanelItem ej5ox20"
+                >
+                  <WithOrganizationMockWrapper
+                    assets={Array []}
+                    author={
+                      Object {
+                        "name": "Sentry Team",
+                        "url": "https://github.com/getsentry/sentry",
+                      }
+                    }
+                    canDisable={false}
+                    enabled={true}
+                    hasConfiguration={false}
+                    id="github"
+                    isHidden={false}
+                    name="GitHub"
+                    params={
+                      Object {
+                        "orgId": "org-slug",
+                        "projectId": "project-slug",
+                      }
+                    }
+                    slug="github"
+                    version="8.23.0.dev0"
+                  >
+                    <withProject(ProjectPluginRow)
+                      assets={Array []}
+                      author={
+                        Object {
+                          "name": "Sentry Team",
+                          "url": "https://github.com/getsentry/sentry",
+                        }
+                      }
+                      canDisable={false}
+                      enabled={true}
+                      hasConfiguration={false}
+                      id="github"
+                      isHidden={false}
+                      name="GitHub"
+                      organization={
+                        Object {
+                          "access": Array [
+                            "org:read",
+                            "org:write",
+                            "org:admin",
+                            "org:integrations",
+                            "project:read",
+                            "project:write",
+                            "project:admin",
+                            "team:read",
+                            "team:write",
+                            "team:admin",
+                          ],
+                          "features": Array [],
+                          "id": "3",
+                          "name": "Organization Name",
+                          "onboardingTasks": Array [],
+                          "projects": Array [],
+                          "scrapeJavaScript": true,
+                          "slug": "org-slug",
+                          "status": Object {
+                            "id": "active",
+                            "name": "active",
+                          },
+                          "teams": Array [],
+                        }
+                      }
+                      params={
+                        Object {
+                          "orgId": "org-slug",
+                          "projectId": "project-slug",
+                        }
+                      }
+                      slug="github"
+                      version="8.23.0.dev0"
+                    >
+                      <ProjectPluginRow
+                        assets={Array []}
+                        author={
+                          Object {
+                            "name": "Sentry Team",
+                            "url": "https://github.com/getsentry/sentry",
+                          }
+                        }
+                        canDisable={false}
+                        enabled={true}
+                        hasConfiguration={false}
+                        id="github"
+                        isHidden={false}
+                        name="GitHub"
+                        organization={
+                          Object {
+                            "access": Array [
+                              "org:read",
+                              "org:write",
+                              "org:admin",
+                              "org:integrations",
+                              "project:read",
+                              "project:write",
+                              "project:admin",
+                              "team:read",
+                              "team:write",
+                              "team:admin",
+                            ],
+                            "features": Array [],
+                            "id": "3",
+                            "name": "Organization Name",
+                            "onboardingTasks": Array [],
+                            "projects": Array [],
+                            "scrapeJavaScript": true,
+                            "slug": "org-slug",
+                            "status": Object {
+                              "id": "active",
+                              "name": "active",
+                            },
+                            "teams": Array [],
+                          }
+                        }
+                        params={
+                          Object {
+                            "orgId": "org-slug",
+                            "projectId": "project-slug",
+                          }
+                        }
+                        project={
+                          Object {
+                            "environments": Array [],
+                            "hasAccess": true,
+                            "id": "2",
+                            "isBookmarked": false,
+                            "isMember": true,
+                            "name": "Project Name",
+                            "slug": "project-slug",
+                            "teams": Array [],
+                          }
+                        }
+                        slug="github"
+                        version="8.23.0.dev0"
+                      >
+                        <WithOrganizationMockWrapper
+                          access={
+                            Array [
+                              "project:write",
+                            ]
+                          }
+                        >
+                          <withConfig(Access)
+                            access={
+                              Array [
+                                "project:write",
+                              ]
+                            }
+                            organization={
+                              Object {
+                                "access": Array [
+                                  "org:read",
+                                  "org:write",
+                                  "org:admin",
+                                  "org:integrations",
+                                  "project:read",
+                                  "project:write",
+                                  "project:admin",
+                                  "team:read",
+                                  "team:write",
+                                  "team:admin",
+                                ],
+                                "features": Array [],
+                                "id": "3",
+                                "name": "Organization Name",
+                                "onboardingTasks": Array [],
+                                "projects": Array [],
+                                "scrapeJavaScript": true,
+                                "slug": "org-slug",
+                                "status": Object {
+                                  "id": "active",
+                                  "name": "active",
+                                },
+                                "teams": Array [],
+                              }
+                            }
+                          >
+                            <Access
+                              access={
+                                Array [
+                                  "project:write",
+                                ]
+                              }
+                              config={
+                                Object {
+                                  "features": Set {},
+                                  "messages": Array [],
+                                  "user": Object {
+                                    "email": "foo@example.com",
+                                    "flags": Object {
+                                      "newsletter_consent_prompt": false,
+                                    },
+                                    "hasPasswordAuth": true,
+                                    "id": "1",
+                                    "isAuthenticated": true,
+                                    "name": "Foo Bar",
+                                    "options": Object {
+                                      "timezone": "UTC",
+                                    },
+                                    "permissions": Set {},
+                                    "username": "foo@example.com",
+                                  },
+                                }
+                              }
+                              isSuperuser={false}
+                              organization={
+                                Object {
+                                  "access": Array [
+                                    "org:read",
+                                    "org:write",
+                                    "org:admin",
+                                    "org:integrations",
+                                    "project:read",
+                                    "project:write",
+                                    "project:admin",
+                                    "team:read",
+                                    "team:write",
+                                    "team:admin",
+                                  ],
+                                  "features": Array [],
+                                  "id": "3",
+                                  "name": "Organization Name",
+                                  "onboardingTasks": Array [],
+                                  "projects": Array [],
+                                  "scrapeJavaScript": true,
+                                  "slug": "org-slug",
+                                  "status": Object {
+                                    "id": "active",
+                                    "name": "active",
+                                  },
+                                  "teams": Array [],
+                                }
+                              }
+                              renderNoAccessMessage={false}
+                              requireAll={true}
+                            >
+                              <Styled(div)
+                                alignItems="center"
+                                className="github"
+                                flex="1"
+                                key="github"
+                              >
+                                <div
+                                  className="github css-1j7oo6s"
+                                >
+                                  <PluginInfo>
+                                    <div
+                                      className="css-1jrzgda-PluginInfo e1y7j6vq0"
+                                    >
+                                      <StyledPluginIcon
+                                        pluginId="github"
+                                        size={48}
+                                      >
+                                        <div
+                                          className="css-1xh0prp-PluginIcon-StyledPluginIcon e1y7j6vq2"
+                                          size={48}
+                                        />
+                                      </StyledPluginIcon>
+                                      <Styled(div)
+                                        flexDirection="column"
+                                        justifyContent="center"
+                                      >
+                                        <div
+                                          className="css-bq2mgp"
+                                        >
+                                          <PluginName>
+                                            <div
+                                              className="css-1rrljgj-PluginName e1y7j6vq1"
+                                            >
+                                              GitHub 
+                                              <Version>
+                                                <span
+                                                  className="css-1czymow-Version e1y7j6vq3"
+                                                >
+                                                  v8.23.0.dev0
+                                                </span>
+                                              </Version>
+                                            </div>
+                                          </PluginName>
+                                          <div>
+                                            <EmotionCssPropInternal
+                                              __EMOTION_TYPE_PLEASE_DO_NOT_USE__={
+                                                Object {
+                                                  "$$typeof": Symbol(react.forward_ref),
+                                                  "render": [Function],
+                                                }
+                                              }
+                                              css={
+                                                Object {
+                                                  "name": "1nx57m5-grayText",
+                                                  "styles": "color:#979ba0;;label:grayText;",
+                                                }
+                                              }
+                                              href="https://github.com/getsentry/sentry"
+                                            >
+                                              <ForwardRef
+                                                className="css-1nx57m5-grayText"
+                                                href="https://github.com/getsentry/sentry"
+                                              >
+                                                <a
+                                                  className="css-1nx57m5-grayText"
+                                                  href="https://github.com/getsentry/sentry"
+                                                  rel="noreferrer noopener"
+                                                  target="_blank"
+                                                >
+                                                  Sentry Team
+                                                </a>
+                                              </ForwardRef>
+                                            </EmotionCssPropInternal>
+                                          </div>
+                                        </div>
+                                      </Styled(div)>
+                                    </div>
+                                  </PluginInfo>
+                                  <ForwardRef
+                                    isActive={true}
+                                    isDisabled={true}
+                                    size="lg"
+                                    toggle={[Function]}
+                                  >
+                                    <Switch
+                                      forwardRef={null}
+                                      isActive={true}
+                                      isDisabled={true}
+                                      size="lg"
+                                      toggle={[Function]}
+                                    >
+                                      <SwitchButton
+                                        aria-checked={true}
+                                        data-test-id="switch"
+                                        isActive={true}
+                                        isDisabled={true}
+                                        role="checkbox"
+                                        size="lg"
+                                        type="button"
+                                      >
+                                        <button
+                                          aria-checked={true}
+                                          className="css-xyqwsd-SwitchButton ezmyi9u0"
+                                          data-test-id="switch"
+                                          role="checkbox"
+                                          size="lg"
+                                          type="button"
+                                        >
+                                          <Toggle
+                                            isActive={true}
+                                            isDisabled={true}
+                                            size="lg"
+                                          >
+                                            <span
+                                              className="css-uffmkz-Toggle ezmyi9u1"
+                                              size="lg"
+                                            />
+                                          </Toggle>
+                                        </button>
+                                      </SwitchButton>
+                                    </Switch>
+                                  </ForwardRef>
+                                </div>
+                              </Styled(div)>
+                            </Access>
+                          </withConfig(Access)>
+                        </WithOrganizationMockWrapper>
+                      </ProjectPluginRow>
+                    </withProject(ProjectPluginRow)>
+                  </WithOrganizationMockWrapper>
+                </div>
+              </PanelItem>
+            </div>
+          </FlexBox>
+        </PanelBody>
+      </div>
+    </Component>
+  </Panel>
+</ProjectPlugins>
 `;
diff --git a/tests/js/spec/views/projectPlugins/projectPlugins.spec.jsx b/tests/js/spec/views/projectPlugins/projectPlugins.spec.jsx
index f71118a880..9158134072 100644
--- a/tests/js/spec/views/projectPlugins/projectPlugins.spec.jsx
+++ b/tests/js/spec/views/projectPlugins/projectPlugins.spec.jsx
@@ -1,6 +1,6 @@
 import React from 'react';
 
-import {shallow} from 'sentry-test/enzyme';
+import {mountWithTheme} from 'sentry-test/enzyme';
 import ProjectPlugins from 'app/views/settings/projectPlugins/projectPlugins';
 
 describe('ProjectPlugins', function() {
@@ -15,7 +15,7 @@ describe('ProjectPlugins', function() {
   };
 
   it('renders', function() {
-    wrapper = shallow(
+    wrapper = mountWithTheme(
       <ProjectPlugins params={params} plugins={plugins} />,
       routerContext
     );
@@ -24,7 +24,7 @@ describe('ProjectPlugins', function() {
   });
 
   it('has loading state', function() {
-    wrapper = shallow(
+    wrapper = mountWithTheme(
       <ProjectPlugins params={params} loading plugins={[]} />,
       routerContext
     );
@@ -33,7 +33,7 @@ describe('ProjectPlugins', function() {
   });
 
   it('has error state when plugins=null and loading is true', function() {
-    wrapper = shallow(
+    wrapper = mountWithTheme(
       <ProjectPlugins
         params={params}
         plugins={null}
@@ -43,11 +43,11 @@ describe('ProjectPlugins', function() {
       routerContext
     );
 
-    expect(wrapper.dive().find('RouteError')).toHaveLength(1);
+    expect(wrapper.find('RouteError')).toHaveLength(1);
   });
 
   it('has error state when plugins=[]', function() {
-    wrapper = shallow(
+    wrapper = mountWithTheme(
       <ProjectPlugins
         params={params}
         plugins={[]}
@@ -56,6 +56,6 @@ describe('ProjectPlugins', function() {
       />,
       routerContext
     );
-    expect(wrapper.dive().find('RouteError')).toHaveLength(1);
+    expect(wrapper.find('RouteError')).toHaveLength(1);
   });
 });
diff --git a/tests/js/spec/views/settings/settingsIndex.spec.jsx b/tests/js/spec/views/settings/settingsIndex.spec.jsx
index e701c87b57..e4e9c1805f 100644
--- a/tests/js/spec/views/settings/settingsIndex.spec.jsx
+++ b/tests/js/spec/views/settings/settingsIndex.spec.jsx
@@ -14,7 +14,7 @@ describe('SettingsIndex', function() {
   });
 
   it('has loading when there is no organization', function() {
-    wrapper = shallow(<SettingsIndex organization={null} />);
+    wrapper = mountWithTheme(<SettingsIndex organization={null} />);
 
     expect(wrapper.find('LoadingIndicator')).toHaveLength(1);
   });
