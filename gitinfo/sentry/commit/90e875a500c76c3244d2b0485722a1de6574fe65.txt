commit 90e875a500c76c3244d2b0485722a1de6574fe65
Author: Lyn Nagara <lyn.nagara@gmail.com>
Date:   Thu Apr 19 18:13:20 2018 -0700

    ref: Extract getProjectsByTeam function from projects by team page
    
    Will be needed for the new org dashboard

diff --git a/src/sentry/static/sentry/app/utils/getProjectsByTeams.jsx b/src/sentry/static/sentry/app/utils/getProjectsByTeams.jsx
new file mode 100644
index 0000000000..80ee3f2e5f
--- /dev/null
+++ b/src/sentry/static/sentry/app/utils/getProjectsByTeams.jsx
@@ -0,0 +1,22 @@
+export default function getProjectsByTeams(teams, projects) {
+  const projectsByTeam = {};
+  const teamlessProjects = [];
+  const usersTeams = new Set(teams.filter(team => team.isMember).map(team => team.slug));
+
+  projects.forEach(project => {
+    if (!project.teams.length && project.isMember) {
+      teamlessProjects.push(project);
+    } else {
+      project.teams.forEach(team => {
+        if (!usersTeams.has(team.slug)) {
+          return;
+        }
+        if (!projectsByTeam[team.slug]) {
+          projectsByTeam[team.slug] = [];
+        }
+        projectsByTeam[team.slug].push(project);
+      });
+    }
+  });
+  return {projectsByTeam, teamlessProjects};
+}
diff --git a/src/sentry/static/sentry/app/views/organizationTeamsProjects.jsx b/src/sentry/static/sentry/app/views/organizationTeamsProjects.jsx
index e415a58454..5c41bce862 100644
--- a/src/sentry/static/sentry/app/views/organizationTeamsProjects.jsx
+++ b/src/sentry/static/sentry/app/views/organizationTeamsProjects.jsx
@@ -15,6 +15,7 @@ import SettingsPageHeader from './settings/components/settingsPageHeader';
 import {t, tct} from '../locale';
 import withProjects from '../utils/withProjects';
 import withTeams from '../utils/withTeams';
+import getProjectsByTeams from '../utils/getProjectsByTeams';
 
 class OrganizationTeamsProjectsView extends React.Component {
   static propTypes = {
@@ -126,26 +127,8 @@ class OrganizationTeamsProjectsView extends React.Component {
   };
 
   render() {
-    let {projects, teams} = this.props;
-    let projectsByTeam = {};
-    let teamlessProjects = [];
-    let usersTeams = new Set(teams.filter(team => team.isMember).map(team => team.slug));
-
-    projects.forEach(project => {
-      if (!project.teams.length && project.isMember) {
-        teamlessProjects.push(project);
-      } else {
-        project.teams.forEach(team => {
-          if (!usersTeams.has(team.slug)) {
-            return;
-          }
-          if (!projectsByTeam[team.slug]) {
-            projectsByTeam[team.slug] = [];
-          }
-          projectsByTeam[team.slug].push(project);
-        });
-      }
-    });
+    const {projects, teams} = this.props;
+    const {projectsByTeam, teamlessProjects} = getProjectsByTeams(teams, projects);
 
     return (
       <div className="row">
