commit 8d502e5734ed2eff4b567a137499fd0c7ae53f70
Author: David Cramer <dcramer@gmail.com>
Date:   Mon Aug 31 10:20:27 2015 -0700

    Allow javascript scraping to be disabled

diff --git a/src/sentry/lang/javascript/plugin.py b/src/sentry/lang/javascript/plugin.py
index f693d9ce3b..6042ed1bf0 100644
--- a/src/sentry/lang/javascript/plugin.py
+++ b/src/sentry/lang/javascript/plugin.py
@@ -2,6 +2,7 @@ from __future__ import absolute_import, print_function
 
 from django.conf import settings
 
+from sentry.models import Project
 from sentry.plugins import Plugin2
 
 from .processor import SourceProcessor
@@ -11,8 +12,14 @@ def preprocess_event(data):
     if data.get('platform') != 'javascript':
         return
 
+    project = Project.objects.get_from_cache(
+        id=data['project'],
+    )
+    if not bool(project.get_option('sentry:scrape_javascript', True)):
+        return
+
     processor = SourceProcessor()
-    return processor.process(data)
+    return processor.process(project, data)
 
 
 class JavascriptPlugin(Plugin2):
diff --git a/src/sentry/lang/javascript/processor.py b/src/sentry/lang/javascript/processor.py
index aacce02ee9..0f8375e5a8 100644
--- a/src/sentry/lang/javascript/processor.py
+++ b/src/sentry/lang/javascript/processor.py
@@ -19,7 +19,7 @@ from urlparse import urlparse, urljoin, urlsplit
 from sentry import http
 from sentry.constants import MAX_CULPRIT_LENGTH
 from sentry.interfaces.stacktrace import Stacktrace
-from sentry.models import EventError, Project, Release, ReleaseFile
+from sentry.models import EventError, Release, ReleaseFile
 from sentry.utils.cache import cache
 from sentry.utils.http import is_valid_origin
 from sentry.utils.strings import truncatechars
@@ -424,7 +424,7 @@ class SourceProcessor(object):
             version=data['release'],
         )
 
-    def process(self, data):
+    def process(self, project, data):
         stacktraces = self.get_stacktraces(data)
         if not stacktraces:
             logger.debug('No stacktrace for event %r', data['event_id'])
@@ -435,10 +435,6 @@ class SourceProcessor(object):
             logger.debug('Event %r has no frames with enough context to fetch remote source', data['event_id'])
             return
 
-        project = Project.objects.get_from_cache(
-            id=data['project'],
-        )
-
         data.setdefault('errors', [])
         errors = data['errors']
 
diff --git a/src/sentry/templates/sentry/projects/manage.html b/src/sentry/templates/sentry/projects/manage.html
index 1d26b40008..08387f79f0 100644
--- a/src/sentry/templates/sentry/projects/manage.html
+++ b/src/sentry/templates/sentry/projects/manage.html
@@ -69,6 +69,7 @@
         {% blocktrans %}This will restrict requests based on the <code>Origin</code> and <code>Referer</code> headers.{% endblocktrans %}</p>
         {{ field|as_crispy_field }}
         {% endwith %}
+        {{ form.scrape_javascript|as_crispy_field }}
         {{ form.token|as_crispy_field }}
       </div>
     </div>
diff --git a/src/sentry/web/frontend/project_settings.py b/src/sentry/web/frontend/project_settings.py
index 9a4a18f531..329d406495 100644
--- a/src/sentry/web/frontend/project_settings.py
+++ b/src/sentry/web/frontend/project_settings.py
@@ -54,6 +54,11 @@ class EditProjectForm(forms.ModelForm):
         help_text=_('Prevent IP addresses from being stored for new events.'),
         required=False
     )
+    scrape_javascript = forms.BooleanField(
+        label=_('Enable JavaScript source fetching'),
+        help_text=_('Allow Sentry to scrape missing JavaScript source context when possible.'),
+        required=False,
+    )
 
     class Meta:
         fields = ('name', 'platform', 'team', 'slug')
@@ -174,6 +179,7 @@ class ProjectSettingsView(ProjectView):
                 'scrub_data': bool(project.get_option('sentry:scrub_data', True)),
                 'sensitive_fields': '\n'.join(project.get_option('sentry:sensitive_fields', None) or []),
                 'scrub_ip_address': bool(project.get_option('sentry:scrub_ip_address', False)),
+                'scrape_javascript': bool(project.get_option('sentry:scrape_javascript', True)),
             },
         )
 
@@ -183,7 +189,7 @@ class ProjectSettingsView(ProjectView):
         if form.is_valid():
             project = form.save()
             for opt in ('origins', 'resolve_age', 'scrub_data', 'sensitive_fields',
-                        'scrub_ip_address', 'token'):
+                        'scrape_javascript', 'scrub_ip_address', 'token'):
                 value = form.cleaned_data.get(opt)
                 if value is None:
                     project.delete_option('sentry:%s' % (opt,))
