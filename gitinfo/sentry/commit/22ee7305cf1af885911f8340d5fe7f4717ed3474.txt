commit 22ee7305cf1af885911f8340d5fe7f4717ed3474
Author: Mark Story <mark@sentry.io>
Date:   Thu Nov 21 10:47:01 2019 -0500

    fix(discover) Fix inconsistent pagination (#15709)
    
    Augment pagination client side so that when we're going to the first
    page we drop the cursor from the query. This in turn lets us get the
    correct partial results for the first page.
    
    Based on #15691

diff --git a/src/sentry/discover/endpoints/discover_saved_queries.py b/src/sentry/discover/endpoints/discover_saved_queries.py
index 1cc1d4e815..eac22c4b1d 100644
--- a/src/sentry/discover/endpoints/discover_saved_queries.py
+++ b/src/sentry/discover/endpoints/discover_saved_queries.py
@@ -6,7 +6,7 @@ from rest_framework.response import Response
 from sentry import features
 from sentry.api.serializers import serialize
 from sentry.api.bases import OrganizationEndpoint
-from sentry.api.paginator import DateTimePaginator, OffsetPaginator
+from sentry.api.paginator import GenericOffsetPaginator
 from sentry.discover.models import DiscoverSavedQuery
 from sentry.discover.endpoints.bases import DiscoverSavedQueryPermission
 from sentry.discover.endpoints.serializers import DiscoverSavedQuerySerializer
@@ -47,26 +47,25 @@ class DiscoverSavedQueriesEndpoint(OrganizationEndpoint):
         sort_by = request.query_params.get("sortBy")
         if sort_by in ("name", "-name"):
             order_by = sort_by
-            paginator_cls = OffsetPaginator
         elif sort_by in ("dateCreated", "-dateCreated"):
             order_by = "-date_created" if sort_by.startswith("-") else "date_created"
-            paginator_cls = DateTimePaginator
         elif sort_by in ("dateUpdated", "-dateUpdated"):
             order_by = "-date_updated" if sort_by.startswith("-") else "date_updated"
-            paginator_cls = DateTimePaginator
         else:
             order_by = "name"
-            paginator_cls = OffsetPaginator
+        queryset = queryset.order_by(order_by)
 
         # Old discover expects all queries and uses this parameter.
         if request.query_params.get("all") == "1":
             saved_queries = list(queryset.all())
             return Response(serialize(saved_queries), status=200)
+
+        def data_fn(offset, limit):
+            return list(queryset[offset : offset + limit])
+
         return self.paginate(
             request=request,
-            queryset=queryset,
-            order_by=order_by,
-            paginator_cls=paginator_cls,
+            paginator=GenericOffsetPaginator(data_fn=data_fn),
             on_results=lambda x: serialize(x, request.user),
             default_per_page=25,
         )
diff --git a/src/sentry/static/sentry/app/views/eventsV2/queryList.tsx b/src/sentry/static/sentry/app/views/eventsV2/queryList.tsx
index 44770763e7..6f28c5a8b7 100644
--- a/src/sentry/static/sentry/app/views/eventsV2/queryList.tsx
+++ b/src/sentry/static/sentry/app/views/eventsV2/queryList.tsx
@@ -1,5 +1,5 @@
 import React, {MouseEvent} from 'react';
-import {Location} from 'history';
+import {Location, Query} from 'history';
 import styled from 'react-emotion';
 import classNames from 'classnames';
 import {browserHistory} from 'react-router';
@@ -189,7 +189,24 @@ class QueryList extends React.Component<Props> {
     return (
       <React.Fragment>
         <QueryGrid>{this.renderQueries()}</QueryGrid>
-        <Pagination pageLinks={pageLinks} />
+        <Pagination
+          pageLinks={pageLinks}
+          onCursor={(cursor: string, path: string, query: Query, direction: number) => {
+            const offset = Number(cursor.split(':')[1]);
+
+            const newQuery = {...query, cursor};
+            const isPrevious = direction === -1;
+
+            if (offset <= 0 && isPrevious) {
+              delete newQuery.cursor;
+            }
+
+            browserHistory.push({
+              pathname: path,
+              query: newQuery,
+            });
+          }}
+        />
       </React.Fragment>
     );
   }
