commit c2f3dbe3c80aeb35b30997e0cb23fa0c0c0f88b6
Author: Armin Ronacher <armin.ronacher@active-4.com>
Date:   Thu Feb 16 00:47:31 2017 +0100

    Optimize cache usage slightly

diff --git a/src/sentry/lang/native/plugin.py b/src/sentry/lang/native/plugin.py
index babff9f651..ace4fd899b 100644
--- a/src/sentry/lang/native/plugin.py
+++ b/src/sentry/lang/native/plugin.py
@@ -460,7 +460,6 @@ class NativeStacktraceProcessor(StacktraceProcessor):
                 'object_name': frame.get('package'),
                 'instruction_addr': processable_frame.data['instruction_addr'],
                 'symbol_name': frame.get('function'),
-                'symbol_addr': frame.get('symbol_addr'),
             }
             in_app = self.sym.is_in_app(sym_input_frame)
             raw_frame['in_app'] = in_app
@@ -484,13 +483,10 @@ class NativeStacktraceProcessor(StacktraceProcessor):
                                  exc_info=True)
                 return None, [raw_frame], errors
 
-            processable_frame.set_cache_value({
-                'in_app': in_app,
-                'symbolicated_frames': symbolicated_frames,
-            })
+            processable_frame.set_cache_value([in_app, symbolicated_frames])
         else:
-            raw_frame['in_app'] = in_app = processable_frame.cache_value['in_app']
-            symbolicated_frames = processable_frame.cache_value['symbolicated_frames']
+            in_app, symbolicated_frames = processable_frame.cache_value
+            raw_frame['in_app'] = in_app
 
         for sfrm in symbolicated_frames:
             symbol = sfrm.get('symbol_name') or \
diff --git a/src/sentry/lang/native/symbolizer.py b/src/sentry/lang/native/symbolizer.py
index 0838a00c14..65aefc8381 100644
--- a/src/sentry/lang/native/symbolizer.py
+++ b/src/sentry/lang/native/symbolizer.py
@@ -332,7 +332,7 @@ class Symbolizer(object):
 
         rv = self._process_frame(dict(frame,
             symbol_name=symbol, filename=None, line=0, column=0,
-            uuid=img['uuid'], object_name=img['name']), img)
+            object_name=img['name']), img)
 
         # We actually do not support inline symbolication for system
         # frames, so we just only ever return a single frame here.  Maybe
