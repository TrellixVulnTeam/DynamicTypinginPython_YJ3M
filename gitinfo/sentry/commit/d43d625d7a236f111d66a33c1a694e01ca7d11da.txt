commit d43d625d7a236f111d66a33c1a694e01ca7d11da
Author: David Cramer <dcramer@gmail.com>
Date:   Wed May 27 16:29:13 2015 +0200

    Allow api keys with member:delete to remove organization members

diff --git a/src/sentry/api/endpoints/organization_member_details.py b/src/sentry/api/endpoints/organization_member_details.py
index 83164bbc5d..fe4fec5fd2 100644
--- a/src/sentry/api/endpoints/organization_member_details.py
+++ b/src/sentry/api/endpoints/organization_member_details.py
@@ -16,6 +16,8 @@ ERR_NO_AUTH = 'You cannot remove this member with an unauthenticated API request
 
 ERR_INSUFFICIENT_ROLE = 'You cannot remove a member who has more access than you.'
 
+ERR_INSUFFICIENT_SCOPE = 'You are missing the member:delete scope.'
+
 ERR_ONLY_OWNER = 'You cannot remove the only remaining owner of the organization.'
 
 ERR_UNINVITABLE = 'You cannot send an invitation to a user who is already a full member.'
@@ -96,12 +98,9 @@ class OrganizationMemberDetailsEndpoint(OrganizationEndpoint):
         return Response(status=204)
 
     def delete(self, request, organization, member_id):
-        if not request.user.is_authenticated():
-            return Response({'detail': ERR_NO_AUTH}, status=400)
-
         if request.user.is_superuser:
             authorizing_access = OrganizationMemberType.OWNER
-        else:
+        elif request.user.is_authenticated():
             try:
                 authorizing_access = OrganizationMember.objects.get(
                     organization=organization,
@@ -110,6 +109,10 @@ class OrganizationMemberDetailsEndpoint(OrganizationEndpoint):
                 ).type
             except OrganizationMember.DoesNotExist:
                 return Response({'detail': ERR_INSUFFICIENT_ROLE}, status=400)
+        elif request.access.has_scope('member:delete'):
+            authorizing_access = OrganizationMemberType.OWNER
+        else:
+            return Response({'detail': ERR_INSUFFICIENT_SCOPE}, status=400)
 
         try:
             om = self._get_member(request, organization, member_id)
