commit 260a785bed5f99a4e599182b0135bed878af792f
Author: David Cramer <dcramer@gmail.com>
Date:   Sun May 12 14:37:43 2013 -0700

    Remove unmaintained example app (fixes GH-884)

diff --git a/example/README.rst b/example/README.rst
deleted file mode 100644
index 377ff0f94e..0000000000
--- a/example/README.rst
+++ /dev/null
@@ -1,22 +0,0 @@
-This is a sample Django app that illustrates various ways of sending data to Sentry.
-
-To run this app you will need raven client installed::
-
-    pip install raven
-
-Edit :file:`settings.py` and change `SENTRY_DSN` so that it matches your Sentry server.
-
-Then do::
-
-    python manage.py syncdb
-    python manage.py runserver
-
-And visit these URLS:
-
-- http://localhost:8000/captureMessage/
-- http://localhost:8000/captureException/
-- http://localhost:8000/loggingError/
-- http://localhost:8000/page_no_exist/
-
-For more information, see the `Configuring Django section of the Raven
-documentation <http://raven.readthedocs.org/en/latest/config/django.html>`_.
diff --git a/example/__init__.py b/example/__init__.py
deleted file mode 100644
index e69de29bb2..0000000000
diff --git a/example/manage.py b/example/manage.py
deleted file mode 100755
index de64a546b3..0000000000
--- a/example/manage.py
+++ /dev/null
@@ -1,22 +0,0 @@
-#!/usr/bin/env python
-from django.core.management import execute_manager
-import imp
-try:
-    imp.find_module('settings') # Assumed to be in the same directory.
-except ImportError:
-    import sys
-    sys.stderr.write("Error: Can't find the file 'settings.py' in the directory containing %r. It appears you've customized things.\nYou'll have to run django-admin.py, passing it your settings module.\n" % __file__)
-    sys.exit(1)
-
-import settings
-
-
-import sys
-import os
-
-
-sys.path.insert(0, os.path.join(os.path.dirname(__file__), '..'))
-
-
-if __name__ == "__main__":
-    execute_manager(settings)
diff --git a/example/settings.py b/example/settings.py
deleted file mode 100644
index e8b060319f..0000000000
--- a/example/settings.py
+++ /dev/null
@@ -1,167 +0,0 @@
-# Django settings for example project.
-
-import os
-
-PROJECT_ROOT = os.path.dirname(__file__)
-
-DEBUG = True
-TEMPLATE_DEBUG = DEBUG
-
-ADMINS = (
-    # ('Your Name', 'your_email@example.com'),
-)
-
-MANAGERS = ADMINS
-
-DATABASES = {
-    'default': {
-        'ENGINE': 'django.db.backends.sqlite3',
-        'NAME': 'db.sqlite',
-        'USER': '',                      # Not used with sqlite3.
-        'PASSWORD': '',                  # Not used with sqlite3.
-        'HOST': '',                      # Set to empty string for localhost. Not used with sqlite3.
-        'PORT': '',                      # Set to empty string for default. Not used with sqlite3.
-    }
-}
-
-# Local time zone for this installation. Choices can be found here:
-# http://en.wikipedia.org/wiki/List_of_tz_zones_by_name
-# although not all choices may be available on all operating systems.
-# On Unix systems, a value of None will cause Django to use the same
-# timezone as the operating system.
-# If running in a Windows environment this must be set to the same as your
-# system time zone.
-TIME_ZONE = 'America/Chicago'
-
-# Language code for this installation. All choices can be found here:
-# http://www.i18nguy.com/unicode/language-identifiers.html
-LANGUAGE_CODE = 'en-us'
-
-SITE_ID = 1
-
-# If you set this to False, Django will make some optimizations so as not
-# to load the internationalization machinery.
-USE_I18N = True
-
-# If you set this to False, Django will not format dates, numbers and
-# calendars according to the current locale
-USE_L10N = True
-
-# Absolute filesystem path to the directory that will hold user-uploaded files.
-# Example: "/home/media/media.lawrence.com/media/"
-MEDIA_ROOT = ''
-
-# URL that handles the media served from MEDIA_ROOT. Make sure to use a
-# trailing slash.
-# Examples: "http://media.lawrence.com/media/", "http://example.com/media/"
-MEDIA_URL = ''
-
-# Absolute path to the directory static files should be collected to.
-# Don't put anything in this directory yourself; store your static files
-# in apps' "static/" subdirectories and in STATICFILES_DIRS.
-# Example: "/home/media/media.lawrence.com/static/"
-STATIC_ROOT = ''
-
-# URL prefix for static files.
-# Example: "http://media.lawrence.com/static/"
-STATIC_URL = '/static/'
-
-# Additional locations of static files
-STATICFILES_DIRS = (
-    # Put strings here, like "/home/html/static" or "C:/www/django/static".
-    # Always use forward slashes, even on Windows.
-    # Don't forget to use absolute paths, not relative paths.
-)
-
-# List of finder classes that know how to find static files in
-# various locations.
-STATICFILES_FINDERS = (
-    'django.contrib.staticfiles.finders.FileSystemFinder',
-    'django.contrib.staticfiles.finders.AppDirectoriesFinder',
-#    'django.contrib.staticfiles.finders.DefaultStorageFinder',
-)
-
-# Make this unique, and don't share it with anybody.
-SECRET_KEY = '(a_$ky*+pd#^nr14=kwis+75$#y2o8a40deb@2=qtsoadv7je9'
-
-# List of callables that know how to import templates from various sources.
-TEMPLATE_LOADERS = (
-    'django.template.loaders.filesystem.Loader',
-    'django.template.loaders.app_directories.Loader',
-#     'django.template.loaders.eggs.Loader',
-)
-
-MIDDLEWARE_CLASSES = (
-    'raven.contrib.django.middleware.SentryResponseErrorIdMiddleware',
-    'raven.contrib.django.middleware.Sentry404CatchMiddleware',
-    'django.middleware.common.CommonMiddleware',
-    'django.contrib.sessions.middleware.SessionMiddleware',
-    'django.middleware.csrf.CsrfViewMiddleware',
-    'django.contrib.auth.middleware.AuthenticationMiddleware',
-    'django.contrib.messages.middleware.MessageMiddleware',
-    'sentry.middleware.SentryMiddleware',
-)
-
-ROOT_URLCONF = 'example.urls'
-
-TEMPLATE_DIRS = (
-    # Put strings here, like "/home/html/django_templates" or "C:/www/django/templates".
-    # Always use forward slashes, even on Windows.
-    # Don't forget to use absolute paths, not relative paths.
-    os.path.join(PROJECT_ROOT, 'templates'),
-)
-
-LOCALE_PATHS = (
-    os.path.join(PROJECT_ROOT, 'locale'),
-)
-
-INSTALLED_APPS = (
-    'django.contrib.auth',
-    'django.contrib.contenttypes',
-    'django.contrib.sessions',
-    'django.contrib.sites',
-    'django.contrib.messages',
-    'django.contrib.staticfiles',
-    # Uncomment the next line to enable the admin:
-    # 'django.contrib.admin',
-    # Uncomment the next line to enable admin documentation:
-    # 'django.contrib.admindocs',
-    'sentry',
-    'raven.contrib.django',
-)
-
-# DSN of your Sentry server
-# For info on configuring Django to use Sentry, see
-# http://raven.readthedocs.org/en/latest/config/django.html
-SENTRY_DSN = 'http://public:secret@example.com/1'
-
-# A sample logging configuration. The only tangible logging
-# performed by this configuration is to send an email to
-# the site admins on every HTTP 500 error.
-# See http://docs.djangoproject.com/en/dev/topics/logging for
-# more details on how to customize your logging configuration.
-LOGGING = {
-    'version': 1,
-    'disable_existing_loggers': True,
-    'root': {
-        'level': 'WARNING',
-        'handlers': ['sentry'],
-    },
-    'handlers': {
-        'sentry': {
-            'level': 'WARNING',
-            'class': 'raven.contrib.django.handlers.SentryHandler',
-        },
-        'mail_admins': {
-            'level': 'ERROR',
-            'class': 'django.utils.log.AdminEmailHandler',
-        }
-    },
-    'loggers': {
-        'django.request': {
-            'handlers': ['mail_admins'],
-            'level': 'ERROR',
-            'propagate': True,
-        },
-    }
-}
diff --git a/example/templates/captureException.html b/example/templates/captureException.html
deleted file mode 100644
index dceea3ade6..0000000000
--- a/example/templates/captureException.html
+++ /dev/null
@@ -1,5 +0,0 @@
-{% extends "layout.html" %}
-
-{% block main %}
-    <div class="alert alert-error">I just sent an exception to sentry with id {{ message_id }}.</div>
-{% endblock %}
diff --git a/example/templates/captureMessage.html b/example/templates/captureMessage.html
deleted file mode 100644
index 7e96af5fd9..0000000000
--- a/example/templates/captureMessage.html
+++ /dev/null
@@ -1,5 +0,0 @@
-{% extends "layout.html" %}
-
-{% block main %}
-    <div class="alert alert-notice">I just sent a message to sentry with id {{ message_id }}.</div>
-{% endblock %}
diff --git a/example/templates/layout.html b/example/templates/layout.html
deleted file mode 100644
index 96b2b46dc9..0000000000
--- a/example/templates/layout.html
+++ /dev/null
@@ -1,46 +0,0 @@
-{% load url from future %}
-{% load i18n %}
-{% load sentry_helpers %}
-
-<!DOCTYPE html>
-<html lang="en">
-    <head>
-        <meta http-equiv="content-type" content="text/html; charset=utf-8">
-        <meta name="robots" content="NONE,NOARCHIVE">
-        <link href="{% url 'sentry-media' "sentry" "styles/global.min.css" %}" rel="stylesheet" type="text/css"/>
-        <title>{% block title %}Sentry{% endblock %}</title>
-        {% block meta %}
-        {% endblock %}
-    </head>
-
-    <body>
-        {% block body %}
-        {% block header %}
-        {% endblock %}
-        <section id="content" class="{% block bodyclass %}with-sidebar{% endblock %}">
-            <div class="container">
-                <div class="content">
-                    {% block content_before %}
-                    {% endblock %}
-                    {% block content %}
-                        <div class="main">
-                            {% block main %}
-                            {% endblock %}
-                        </div>
-                    {% endblock %}
-                    {% block content_after %}
-                    {% endblock %}
-                    </div>
-                </div>
-            </div>
-        </section>
-        <footer>
-            <div class="container">
-                {% block footer %}
-                    Sentry {% sentry_version %} | Conjured up by the <a href="https://github.com/disqus">DISQUS</a> team and other noble <a href="https://github.com/getsentry/sentry/contributors">sorcerers</a>. | Sentry is <a href="https://github.com/getsentry/sentry">Open Source Software</a>
-                {% endblock %}
-            </div>
-        </footer>
-        {% endblock %}
-    </body>
-</html>
diff --git a/example/templates/loggingError.html b/example/templates/loggingError.html
deleted file mode 100644
index 18f25a7031..0000000000
--- a/example/templates/loggingError.html
+++ /dev/null
@@ -1,5 +0,0 @@
-{% extends "layout.html" %}
-
-{% block main %}
-    <div class="alert alert-notice">I just logged a message with id {{ request.sentry.id }}.</div>
-{% endblock %}
diff --git a/example/urls.py b/example/urls.py
deleted file mode 100644
index 7c40b5d4be..0000000000
--- a/example/urls.py
+++ /dev/null
@@ -1,9 +0,0 @@
-from django.conf.urls.defaults import patterns, include, url
-
-
-urlpatterns = patterns('',
-    (r'^sentry/', include('sentry.web.urls')),
-    (r'^captureMessage/', 'views.captureMessage'),
-    (r'^captureException/', 'views.captureException'),
-    (r'^loggingError/', 'views.loggingError'),
-)
diff --git a/example/views.py b/example/views.py
deleted file mode 100644
index 7b17847941..0000000000
--- a/example/views.py
+++ /dev/null
@@ -1,26 +0,0 @@
-import logging
-from django.http import HttpResponse
-from django.shortcuts import render
-from raven.contrib.django.models import get_client
-
-client = get_client()
-logger = logging.getLogger(__file__)
-
-def captureMessage(request):
-    message_id = client.captureMessage("This is a message from the example Django app")
-    return render(request, 'captureMessage.html', {"message_id": message_id})
-
-def captureException(request):
-    try:
-        raise RuntimeError("This is an exception from the example Django app.")
-    except RuntimeError:
-        message_id = client.captureException()
-
-    return render(request, 'captureException.html', {"message_id": message_id})
-
-def loggingError(request):
-    logger.error('This error was sent to a logger', exc_info=True, extra={
-        # Optionally pass a request and we'll grab any information we can
-        'request': request,
-    })
-    return render(request, 'loggingError.html', {"request": request})
