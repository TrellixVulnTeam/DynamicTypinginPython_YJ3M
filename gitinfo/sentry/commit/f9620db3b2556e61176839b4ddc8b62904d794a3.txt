commit f9620db3b2556e61176839b4ddc8b62904d794a3
Author: David Cramer <dcramer@gmail.com>
Date:   Fri Jan 8 11:26:39 2016 -0800

    Add basic User Reports settings page

diff --git a/src/sentry/static/sentry/app/routes.jsx b/src/sentry/static/sentry/app/routes.jsx
index f922153cdd..7a8d683a53 100644
--- a/src/sentry/static/sentry/app/routes.jsx
+++ b/src/sentry/static/sentry/app/routes.jsx
@@ -30,6 +30,7 @@ import ProjectInstallPlatform from './views/projectInstall/platform';
 import ProjectReleases from './views/projectReleases';
 import ProjectSettings from './views/projectSettings';
 import ProjectUserReports from './views/projectUserReports';
+import ProjectUserReportSettings from './views/projectUserReportSettings';
 import ReleaseAllEvents from './views/releaseAllEvents';
 import ReleaseArtifacts from './views/releaseArtifacts';
 import ReleaseDetails from './views/releaseDetails';
@@ -84,6 +85,7 @@ let routes = (
             <IndexRoute component={errorHandler(ProjectInstallOverview)}/>
             <Route path=":platform/" component={errorHandler(ProjectInstallPlatform)}/>
           </Route>
+          <Route path="user-reports/" component={errorHandler(ProjectUserReportSettings)} />
         </Route>
         <Redirect from="group/:groupId/" to="issues/:groupId/" />
         <Route path="issues/:groupId/" component={errorHandler(GroupDetails)}
diff --git a/src/sentry/static/sentry/app/views/groupUserReports.jsx b/src/sentry/static/sentry/app/views/groupUserReports.jsx
index c26106b822..0db2dacb9d 100644
--- a/src/sentry/static/sentry/app/views/groupUserReports.jsx
+++ b/src/sentry/static/sentry/app/views/groupUserReports.jsx
@@ -1,6 +1,6 @@
 import $ from 'jquery';
 import React from 'react';
-import {History} from 'react-router';
+import {Link, History} from 'react-router';
 import ApiMixin from '../mixins/apiMixin';
 import Gravatar from '../components/gravatar';
 import GroupState from '../mixins/groupState';
@@ -63,6 +63,12 @@ const GroupUserReports = React.createClass({
     });
   },
 
+  getUserReportsUrl() {
+    let params = this.props.params;
+
+    return `/${params.orgId}/${params.projectId}/settings/user-reports/`;
+  },
+
   render() {
     if (this.state.loading) {
       return <LoadingIndicator />;
@@ -102,7 +108,7 @@ const GroupUserReports = React.createClass({
       <div className="box empty-stream">
         <span className="icon icon-exclamation" />
         <p>{t('No user reports have been collected for this event.')}</p>
-        <p><a href="">{t('Learn how to integrate User Crash Reports')}</a></p>
+        <p><Link to={this.getUserReportsUrl()}>{t('Learn how to integrate User Crash Reports')}</Link></p>
       </div>
     );
   }
diff --git a/src/sentry/static/sentry/app/views/projectSettings/index.jsx b/src/sentry/static/sentry/app/views/projectSettings/index.jsx
index 9d588be1c2..ab4edca83d 100644
--- a/src/sentry/static/sentry/app/views/projectSettings/index.jsx
+++ b/src/sentry/static/sentry/app/views/projectSettings/index.jsx
@@ -75,6 +75,7 @@ const ProjectSettings = React.createClass({
     let {orgId, projectId} = this.props.params;
     let settingsUrlRoot = `${urlPrefix}/${orgId}/${projectId}/settings`;
     let project = this.state.project;
+    let features = new Set(project.features);
 
     return (
       <div className="row">
@@ -87,6 +88,9 @@ const ProjectSettings = React.createClass({
             <li><a href={`${settingsUrlRoot}/tags/`}>{t('Tags')}</a></li>
             <li><a href={`${settingsUrlRoot}/issue-tracking/`}>{t('Issue Tracking')}</a></li>
             <li><a href={`${settingsUrlRoot}/release-tracking/`}>{t('Release Tracking')}</a></li>
+            {features.has('user-reports') &&
+              <ListLink to={`/${orgId}/${projectId}/settings/user-reports/`}>{t('User Reports')}</ListLink>
+            }
           </ul>
           <h6 className="nav-header">{t('Setup')}</h6>
           <ul className="nav nav-stacked">
diff --git a/src/sentry/static/sentry/app/views/projectUserReportSettings.jsx b/src/sentry/static/sentry/app/views/projectUserReportSettings.jsx
new file mode 100644
index 0000000000..a78eac487f
--- /dev/null
+++ b/src/sentry/static/sentry/app/views/projectUserReportSettings.jsx
@@ -0,0 +1,47 @@
+import React from 'react';
+
+import {t} from '../locale';
+
+const ProjectUserReportSettings = React.createClass({
+  propTypes: {
+    setProjectNavSection: React.PropTypes.func
+  },
+
+  componentWillMount() {
+    this.props.setProjectNavSection('settings');
+  },
+
+  getInstructions() {
+    return (
+      '<!-- Sentry JS SDK 2.1.+ required -->\n' +
+      '<script src="https://cdn.ravenjs.com/2.1.0/raven.min.js"></script>\n\n' +
+      '{% if request.sentry.id %}\n' +
+      '  <script>\n' +
+      '  Raven.showErrorDialog(\'{{ request.sentry.id }}\', {\n' +
+      '    // use the public DSN (dont include your secret!)\n' +
+      '    dsn: \'https://public@sentry.example.com/1\'\n' +
+      '  })\n' +
+      '  </script>\n' +
+      '{% endif %}\n'
+    );
+  },
+
+  render() {
+    // TODO(dcramer): localize when language is final
+    return (
+      <div>
+        <h1>{t('User Reports')}</h1>
+
+        <p>Enabling User Reports allows you to interact with your users on an unprecedented level. Collect additional details about issues affecting them, and more importantly reach out to them with resolutions.</p>
+
+        <p>When configured, your users will be presented with a dialog prompting them for additional information. That information will get attached to the issue in Sentry</p>
+
+        <p>The following example uses our Django integration. Check the documentation for the SDK you're using for more details.</p>
+
+        <pre>{this.getInstructions()}</pre>
+      </div>
+    );
+  }
+});
+
+export default ProjectUserReportSettings;
diff --git a/src/sentry/static/sentry/app/views/projectUserReports.jsx b/src/sentry/static/sentry/app/views/projectUserReports.jsx
index ecfbf30665..7dc8c21547 100644
--- a/src/sentry/static/sentry/app/views/projectUserReports.jsx
+++ b/src/sentry/static/sentry/app/views/projectUserReports.jsx
@@ -1,6 +1,6 @@
 import jQuery from 'jquery';
 import React from 'react';
-import {History} from 'react-router';
+import {History, Link} from 'react-router';
 import ApiMixin from '../mixins/apiMixin';
 import Gravatar from '../components/gravatar';
 import LoadingError from '../components/loadingError';
@@ -97,6 +97,12 @@ const ProjectUserReports = React.createClass({
     return `/projects/${params.orgId}/${params.projectId}/user-reports/?${jQuery.param(queryParams)}`;
   },
 
+  getUserReportsUrl() {
+    let params = this.props.params;
+
+    return `/${params.orgId}/${params.projectId}/settings/user-reports/`;
+  },
+
   renderStreamBody() {
     let body;
 
@@ -136,7 +142,7 @@ const ProjectUserReports = React.createClass({
       <div className="box empty-stream">
         <span className="icon icon-exclamation" />
         <p>{t('No user reports have been collected for this project.')}</p>
-        <p><a href="">{t('Learn how to integrate User Crash Reports')}</a></p>
+        <p><Link to={this.getUserReportsUrl()}>{t('Learn how to integrate User Crash Reports')}</Link></p>
       </div>
     );
   },
diff --git a/src/sentry/templates/sentry/projects/manage.html b/src/sentry/templates/sentry/projects/manage.html
index d704c39545..76bfe08c70 100644
--- a/src/sentry/templates/sentry/projects/manage.html
+++ b/src/sentry/templates/sentry/projects/manage.html
@@ -176,6 +176,11 @@
     <li{% if page == 'release-tracking' %} class="active"{% endif %}>
         <a href="{% url 'sentry-project-release-tracking' project.organization.slug project.slug %}">{% trans "Release Tracking" %}</a>
     </li>
+    {% feature projects:user-reports project %}
+    <li{% if page == 'quotas' %} class="active"{% endif %}>
+        <a href="{% absolute_uri '/{}/{}/settings/user-reports/' project.organization.slug project.slug %}">{% trans "User Reports" %}</a>
+    </li>
+    {% endfeature %}
   </ul>
   <h6 class="nav-header">{% trans "Setup" %}</h6>
   <ul class="nav nav-stacked">
