commit 702cdaef8456c795323b5020e08e3c9e7b86c4bd
Author: Armin Ronacher <armin.ronacher@active-4.com>
Date:   Sat Feb 27 00:27:18 2016 +0100

    SYSTEM_KEY -> ROOT_KEY

diff --git a/src/sentry/api/authentication.py b/src/sentry/api/authentication.py
index 5a69b38837..11bd859f3c 100644
--- a/src/sentry/api/authentication.py
+++ b/src/sentry/api/authentication.py
@@ -7,7 +7,7 @@ from rest_framework.exceptions import AuthenticationFailed
 from sentry import options
 from sentry.app import raven
 from sentry.models import ApiKey
-from sentry.models.apikey import SYSTEM_KEY
+from sentry.models.apikey import ROOT_KEY
 from django.utils.crypto import constant_time_compare
 
 
@@ -24,7 +24,7 @@ class ApiKeyAuthentication(QuietBasicAuthentication):
         root_api_key = options.get('system.root-api-key')
         if root_api_key:
             if constant_time_compare(root_api_key, userid):
-                return (None, SYSTEM_KEY)
+                return (None, ROOT_KEY)
 
         try:
             key = ApiKey.objects.get_from_cache(key=userid)
diff --git a/src/sentry/api/bases/organization.py b/src/sentry/api/bases/organization.py
index eec48b1156..0d99006d9f 100644
--- a/src/sentry/api/bases/organization.py
+++ b/src/sentry/api/bases/organization.py
@@ -5,7 +5,7 @@ from sentry.api.base import Endpoint
 from sentry.api.exceptions import ResourceDoesNotExist
 from sentry.api.permissions import ScopedPermission
 from sentry.models import Organization, OrganizationStatus
-from sentry.models.apikey import SYSTEM_KEY
+from sentry.models.apikey import ROOT_KEY
 
 
 class OrganizationPermission(ScopedPermission):
@@ -18,7 +18,7 @@ class OrganizationPermission(ScopedPermission):
 
     def has_object_permission(self, request, view, organization):
         if request.auth:
-            if request.auth is SYSTEM_KEY:
+            if request.auth is ROOT_KEY:
                 return True
             return request.auth.organization_id == organization.id
 
diff --git a/src/sentry/api/bases/project.py b/src/sentry/api/bases/project.py
index 95c1bde03a..bc7bcc89bc 100644
--- a/src/sentry/api/bases/project.py
+++ b/src/sentry/api/bases/project.py
@@ -5,7 +5,7 @@ from sentry.api.base import Endpoint
 from sentry.api.exceptions import ResourceDoesNotExist
 from sentry.api.permissions import ScopedPermission
 from sentry.models import Project, ProjectStatus
-from sentry.models.apikey import SYSTEM_KEY
+from sentry.models.apikey import ROOT_KEY
 
 
 class ProjectPermission(ScopedPermission):
@@ -18,7 +18,7 @@ class ProjectPermission(ScopedPermission):
 
     def has_object_permission(self, request, view, project):
         if request.auth:
-            if request.auth is SYSTEM_KEY:
+            if request.auth is ROOT_KEY:
                 return True
             return request.auth.organization_id == project.organization_id
 
diff --git a/src/sentry/api/bases/team.py b/src/sentry/api/bases/team.py
index 9767b91c9b..a1e9483053 100644
--- a/src/sentry/api/bases/team.py
+++ b/src/sentry/api/bases/team.py
@@ -5,7 +5,7 @@ from sentry.api.base import Endpoint
 from sentry.api.exceptions import ResourceDoesNotExist
 from sentry.api.permissions import ScopedPermission
 from sentry.models import Team, TeamStatus
-from sentry.models.apikey import SYSTEM_KEY
+from sentry.models.apikey import ROOT_KEY
 
 
 class TeamPermission(ScopedPermission):
@@ -18,7 +18,7 @@ class TeamPermission(ScopedPermission):
 
     def has_object_permission(self, request, view, team):
         if request.auth:
-            if request.auth is SYSTEM_KEY:
+            if request.auth is ROOT_KEY:
                 return True
             return request.auth.organization_id == team.organization_id
 
diff --git a/src/sentry/api/bases/user.py b/src/sentry/api/bases/user.py
index 3341435a7c..d379f9a20a 100644
--- a/src/sentry/api/bases/user.py
+++ b/src/sentry/api/bases/user.py
@@ -4,12 +4,12 @@ from sentry.api.base import Endpoint
 from sentry.api.exceptions import ResourceDoesNotExist
 from sentry.api.permissions import ScopedPermission
 from sentry.models import User
-from sentry.models.apikey import SYSTEM_KEY
+from sentry.models.apikey import ROOT_KEY
 
 
 class UserPermission(ScopedPermission):
     def has_object_permission(self, request, view, user):
-        if request.auth is SYSTEM_KEY:
+        if request.auth is ROOT_KEY:
             return True
         if request.auth:
             return False
diff --git a/src/sentry/api/permissions.py b/src/sentry/api/permissions.py
index 3c5805c88d..6a6c985950 100644
--- a/src/sentry/api/permissions.py
+++ b/src/sentry/api/permissions.py
@@ -2,7 +2,7 @@ from __future__ import absolute_import
 
 from rest_framework import permissions
 
-from sentry.models.apikey import SYSTEM_KEY
+from sentry.models.apikey import ROOT_KEY
 
 
 class NoPermission(permissions.BasePermission):
@@ -51,4 +51,4 @@ class SuperuserPermission(permissions.BasePermission):
 
 class SystemPermission(permissions.BasePermission):
     def has_permission(self, request, view):
-        return request.auth is SYSTEM_KEY
+        return request.auth is ROOT_KEY
diff --git a/src/sentry/models/apikey.py b/src/sentry/models/apikey.py
index fd693c94a6..00be73c9db 100644
--- a/src/sentry/models/apikey.py
+++ b/src/sentry/models/apikey.py
@@ -118,4 +118,4 @@ class SystemKey(object):
         return ApiKey.scopes
 
 
-SYSTEM_KEY = SystemKey()
+ROOT_KEY = SystemKey()
