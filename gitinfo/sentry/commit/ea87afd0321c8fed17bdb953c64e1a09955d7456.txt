commit ea87afd0321c8fed17bdb953c64e1a09955d7456
Author: Ted Kaemming <ted@kaemming.com>
Date:   Tue Feb 9 16:34:55 2016 -0800

    Record project and issue frequency.

diff --git a/src/sentry/event_manager.py b/src/sentry/event_manager.py
index 5cd589b732..e0bf33bda1 100644
--- a/src/sentry/event_manager.py
+++ b/src/sentry/event_manager.py
@@ -662,6 +662,19 @@ class EventManager(object):
             (tsdb.models.project, project.id),
         ], timestamp=event.datetime)
 
+        tsdb.record_frequency_multi([
+            (tsdb.models.frequent_projects_by_organization, {
+                project.organization_id: {
+                    project.id: 1,
+                },
+            }),
+            (tsdb.models.frequent_issues_by_project, {
+                project.id: {
+                    group.id: 1,
+                },
+            }),
+        ], timestamp=event.datetime)
+
         return group, is_new, is_regression, is_sample
 
     def _handle_regression(self, group, event, release):
diff --git a/tests/sentry/test_event_manager.py b/tests/sentry/test_event_manager.py
index 4d6b6f0759..c6770d5b7a 100644
--- a/tests/sentry/test_event_manager.py
+++ b/tests/sentry/test_event_manager.py
@@ -398,6 +398,31 @@ class EventManagerTest(TransactionTestCase):
         data = manager.normalize()
         assert data['logger'] == DEFAULT_LOGGER_NAME
 
+    def test_record_frequencies(self):
+        project = self.project
+        manager = EventManager(self.make_event())
+        event = manager.save(project)
+
+        assert tsdb.get_most_frequent(
+            tsdb.models.frequent_issues_by_project,
+            (event.project.id,),
+            event.datetime,
+        ) == {
+            event.project.id: [
+                (event.group_id, 1.0),
+            ],
+        }
+
+        assert tsdb.get_most_frequent(
+            tsdb.models.frequent_projects_by_organization,
+            (event.project.organization_id,),
+            event.datetime,
+        ) == {
+            event.project.organization_id: [
+                (event.project_id, 1.0),
+            ],
+        }
+
     def test_event_user(self):
         manager = EventManager(self.make_event(**{
             'sentry.interfaces.User': {
