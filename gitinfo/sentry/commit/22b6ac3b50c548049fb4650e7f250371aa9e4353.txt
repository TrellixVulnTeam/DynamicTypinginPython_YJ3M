commit 22b6ac3b50c548049fb4650e7f250371aa9e4353
Author: MeredithAnya <meredith.a.heller@gmail.com>
Date:   Thu Sep 20 15:44:08 2018 -0700

    feat(integrations): Add flow for installing integration via GitHub first (#8999)
    
    * feat(integrations): Add flow for installing integration via GitHub first

diff --git a/src/sentry/static/sentry/app/routes.jsx b/src/sentry/static/sentry/app/routes.jsx
index 595d08a4fb..81b4bccd0a 100644
--- a/src/sentry/static/sentry/app/routes.jsx
+++ b/src/sentry/static/sentry/app/routes.jsx
@@ -590,6 +590,12 @@ function routes() {
           import(/*webpackChunkName:"AcceptProjectTransfer"*/ 'app/views/acceptProjectTransfer')}
         component={errorHandler(LazyLoad)}
       />
+      <Route
+        path="/extensions/external-install/:installationId"
+        componentPromise={() =>
+          import(/*webpackChunkName:"AcceptProjectTransfer"*/ 'app/views/integrationInstallation')}
+        component={errorHandler(LazyLoad)}
+      />
 
       <Route
         path="/extensions/vsts/link/"
diff --git a/src/sentry/static/sentry/app/views/integrationInstallation.jsx b/src/sentry/static/sentry/app/views/integrationInstallation.jsx
new file mode 100644
index 0000000000..be098e6175
--- /dev/null
+++ b/src/sentry/static/sentry/app/views/integrationInstallation.jsx
@@ -0,0 +1,112 @@
+import React from 'react';
+
+import AsyncView from 'app/views/asyncView';
+import Form from 'app/views/settings/components/forms/form';
+import IndicatorStore from 'app/stores/indicatorStore';
+import NarrowLayout from 'app/components/narrowLayout';
+import SelectField from 'app/views/settings/components/forms/selectField';
+import SettingsPageHeader from 'app/views/settings/components/settingsPageHeader';
+import {t, tct} from 'app/locale';
+
+class IntegrationInstallation extends AsyncView {
+  componentDidMount() {
+    this.dialog = null;
+    window.addEventListener('message', this.receiveMessage, false);
+  }
+
+  componentWillUnmount() {
+    window.removeEventListener('message', this.receiveMessage);
+
+    if (this.dialog !== null) {
+      this.dialog.close();
+    }
+  }
+
+  getEndpoints() {
+    return [['organizations', '/organizations/?owner=1']];
+  }
+
+  getTitle() {
+    return t('Choose Installation Organization');
+  }
+
+  handleSubmit = formData => {
+    const name = 'sentryAddIntegration';
+    const installationId = this.props.params.installationId;
+    const orgSlug = formData.organization;
+    this.dialog = window.open(
+      `/organizations/${orgSlug}/integrations/github/setup/?installation_id=${installationId}`,
+      name,
+      `scrollbars=yes,width=${1000},height=${1000},top=${100},left=${100}`
+    );
+
+    this.dialog.focus();
+  };
+
+  receiveMessage = message => {
+    if (message.origin !== document.origin) {
+      return;
+    }
+
+    if (message.source !== this.dialog) {
+      return;
+    }
+
+    this.dialog = null;
+
+    const {success, data} = message.data;
+
+    if (!success) {
+      IndicatorStore.addError(data.error);
+      return;
+    }
+    this.props.router.push(
+      `/settings/sentry/integrations/${data.provider.key}/${data.id}`
+    );
+    IndicatorStore.addSuccess(t('Integration Added'));
+  };
+
+  renderBody() {
+    let {organizations} = this.state;
+    let choices = [];
+    if (organizations) {
+      organizations.forEach(org => {
+        choices.push([org.organization.slug, org.organization.slug]);
+      });
+    }
+    return (
+      <NarrowLayout>
+        <SettingsPageHeader title={t('Choose Organization for your Integration')} />
+        <p>
+          {tct(
+            'Please pick a specific [organization] to link with your installation ' +
+              'You can setup further configuration in your [organizationSettings].',
+            {
+              organization: <strong>{t('Organization')}</strong>,
+              organizationSettings: <strong>{t('Organization Settings')}</strong>,
+            }
+          )}
+        </p>
+        <p>
+          {tct('Please select which [organization] you want for the installation.', {
+            organization: <strong>{t('Organization')}</strong>,
+          })}
+        </p>
+        <Form
+          onSubmit={this.handleSubmit}
+          submitLabel={t('Submit')}
+          submitPriority="primary"
+          initialData={{organization: choices[0] && choices[0][0]}}
+        >
+          <SelectField
+            choices={choices}
+            label={t('Organization')}
+            name={'organization'}
+          />
+        </Form>
+      </NarrowLayout>
+    );
+  }
+}
+
+export default IntegrationInstallation;
diff --git a/src/sentry/web/frontend/pipeline_advancer.py b/src/sentry/web/frontend/pipeline_advancer.py
index 6cbf4ffea5..9465a31ab8 100644
--- a/src/sentry/web/frontend/pipeline_advancer.py
+++ b/src/sentry/web/frontend/pipeline_advancer.py
@@ -1,5 +1,6 @@
 from __future__ import absolute_import, print_function
 
+from django.core.urlresolvers import reverse
 from django.contrib import messages
 from django.utils.translation import ugettext_lazy as _
 
@@ -14,6 +15,12 @@ from sentry.web.frontend.base import BaseView
 PIPELINE_CLASSES = [IntegrationPipeline, IdentityProviderPipeline]
 
 
+# GitHub apps may be installed directly from GitHub, in which case
+# they will redirect here *without* being in the pipeline. If that happens
+# redirect to the integration install org picker.
+FORWARD_INSTALL_FOR = ['github']
+
+
 class PipelineAdvancerView(BaseView):
     """Gets the current pipeline from the request and executes the current step."""
     auth_required = False
@@ -22,11 +29,16 @@ class PipelineAdvancerView(BaseView):
 
     def handle(self, request, provider_id):
         pipeline = None
+
         for pipeline_cls in PIPELINE_CLASSES:
             pipeline = pipeline_cls.get_for_request(request=request)
             if pipeline:
                 break
 
+        if provider_id in FORWARD_INSTALL_FOR and request.GET.get('setup_action') == 'install':
+            installation_id = request.GET.get('installation_id')
+            return self.redirect(reverse('integration-installation', args=[installation_id]))
+
         if pipeline is None or not pipeline.is_valid():
             messages.add_message(request, messages.ERROR, _("Invalid request."))
             return self.redirect('/')
diff --git a/src/sentry/web/urls.py b/src/sentry/web/urls.py
index eda32345f7..3d2585c9de 100644
--- a/src/sentry/web/urls.py
+++ b/src/sentry/web/urls.py
@@ -387,6 +387,8 @@ urlpatterns += patterns(
         react_page_view,
         name='sentry-organization-member-settings'
     ),
+    url(r'^extensions/external-install/(?P<installation_id>\w+)/$',
+        react_page_view, name='integration-installation'),
 
     # Organizations
     url(r'^(?P<organization_slug>[\w_-]+)/$',
