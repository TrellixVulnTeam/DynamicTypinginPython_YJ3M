commit 5ffab48a7ab65c68d01e8b7b29f622d98db00f90
Author: Alex Hofsteede <alex@hofsteede.com>
Date:   Fri Dec 8 10:51:15 2017 +1300

    fix: deal with User interface sent as null (#6712)
    
    * fix: deal with User interface sent as null
    
    Can't use get() defaulting as it doesn't use the default when the key
    exists and is None. Also do the same for the HTTP Interface. Also change the setting of client_ip on the sdk object until after it has been validated.
    
    fixes: SENTRY-59T

diff --git a/src/sentry/coreapi.py b/src/sentry/coreapi.py
index 10f963237f..d8597522ec 100644
--- a/src/sentry/coreapi.py
+++ b/src/sentry/coreapi.py
@@ -546,7 +546,6 @@ class LazyData(MutableMapping):
         data['project'] = self._project.id
         data['key_id'] = self._key.id
         data['sdk'] = data.get('sdk') or helper.parse_client_as_sdk(auth.client)
-        data['sdk']['client_ip'] = self._client_ip
 
         # mutates data
         manager = EventManager(data, version=auth.version)
diff --git a/src/sentry/event_manager.py b/src/sentry/event_manager.py
index 706a17354d..15f83945f9 100644
--- a/src/sentry/event_manager.py
+++ b/src/sentry/event_manager.py
@@ -346,11 +346,11 @@ class EventManager(object):
         # Fill in ip addresses marked as {{auto}}
         client_ip = request_env.get('client_ip')
         if client_ip:
-            if data.get('sentry.interfaces.Http', {}).get(
+            if (data.get('sentry.interfaces.Http') or {}).get(
                     'env', {}).get('REMOTE_ADDR') == '{{auto}}':
                 data['sentry.interfaces.Http']['env']['REMOTE_ADDR'] = client_ip
 
-            if data.get('sentry.interfaces.User', {}).get('ip_address') == '{{auto}}':
+            if (data.get('sentry.interfaces.User') or {}).get('ip_address') == '{{auto}}':
                 data['sentry.interfaces.User']['ip_address'] = client_ip
 
         # Validate main event body and tags against schema
@@ -463,6 +463,9 @@ class EventManager(object):
         elif client_ip and (is_public or data.get('platform') in add_ip_platforms):
             data.setdefault('sentry.interfaces.User', {}).setdefault('ip_address', client_ip)
 
+        if client_ip and data.get('sdk'):
+            data['sdk']['client_ip'] = client_ip
+
         # Trim values
         data['logger'] = trim(data['logger'].strip(), 64)
         trim_dict(data['extra'], max_size=settings.SENTRY_MAX_EXTRA_VARIABLE_SIZE)
diff --git a/tests/sentry/test_event_manager.py b/tests/sentry/test_event_manager.py
index 9daab0d1a1..1130066615 100644
--- a/tests/sentry/test_event_manager.py
+++ b/tests/sentry/test_event_manager.py
@@ -1015,6 +1015,18 @@ class EventManagerTest(TransactionTestCase):
             signal=event_saved,
         )
 
+    def test_bad_interfaces_no_exception(self):
+        manager = EventManager(
+            self.make_event(
+                **{
+                    'sentry.interfaces.User': None,
+                    'sentry.interfaces.Http': None,
+                    'sdk': 'A string for sdk is not valid'
+                }
+            )
+        )
+        manager.normalize({'client_ip': '1.2.3.4'})
+
 
 class ProcessDataTimestampTest(TestCase):
     def test_iso_timestamp(self):
