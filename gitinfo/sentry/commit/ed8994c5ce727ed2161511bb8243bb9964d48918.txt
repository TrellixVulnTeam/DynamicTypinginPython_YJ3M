commit ed8994c5ce727ed2161511bb8243bb9964d48918
Author: Lyn Nagara <lyn.nagara@gmail.com>
Date:   Thu Mar 29 12:49:09 2018 -0700

    test: Add snapshot test for project user reports (#7841)

diff --git a/src/sentry/static/sentry/app/views/projectUserReports.jsx b/src/sentry/static/sentry/app/views/projectUserReports.jsx
index cd00f02114..d93be0d543 100644
--- a/src/sentry/static/sentry/app/views/projectUserReports.jsx
+++ b/src/sentry/static/sentry/app/views/projectUserReports.jsx
@@ -255,4 +255,5 @@ const ProjectUserReports = createReactClass({
   },
 });
 
+export {ProjectUserReports};
 export default withEnvironmentInQueryString(ProjectUserReports);
diff --git a/tests/js/setup.js b/tests/js/setup.js
index 2658137b62..cb106166f0 100644
--- a/tests/js/setup.js
+++ b/tests/js/setup.js
@@ -894,6 +894,14 @@ window.TestStubs = {
     name: 'Foo Bar',
     ...params,
   }),
+
+  UserReport: () => ({
+    id: '123',
+    name: 'Lyn',
+    email: 'lyn@sentry.io',
+    comments: 'Something bad happened',
+    issue: TestStubs.Group(),
+  }),
 };
 
 // this is very commonly used, so expose it globally
diff --git a/tests/js/spec/views/__snapshots__/projectUserReports.spec.jsx.snap b/tests/js/spec/views/__snapshots__/projectUserReports.spec.jsx.snap
new file mode 100644
index 0000000000..4326001d7e
--- /dev/null
+++ b/tests/js/spec/views/__snapshots__/projectUserReports.spec.jsx.snap
@@ -0,0 +1,143 @@
+// Jest Snapshot v1, https://goo.gl/fbAQLP
+
+exports[`projectUserReports renders 1`] = `
+<div>
+  <div
+    className="row release-list-header"
+  >
+    <div
+      className="col-sm-9"
+    >
+      <h3>
+        User Feedback
+      </h3>
+    </div>
+    <div
+      className="col-sm-3"
+      style={
+        Object {
+          "textAlign": "right",
+        }
+      }
+    >
+      <div
+        className="btn-group"
+      >
+        <Link
+          className="btn btn-sm btn-default active"
+          onlyActiveOnIndex={false}
+          style={Object {}}
+        >
+          Unresolved
+        </Link>
+        <Link
+          className="btn btn-sm btn-default"
+          onlyActiveOnIndex={false}
+          style={Object {}}
+          to={
+            Object {
+              "pathname": undefined,
+              "query": Object {
+                "status": "",
+              },
+            }
+          }
+        >
+          All Issues
+        </Link>
+      </div>
+    </div>
+  </div>
+  <ul
+    className="issue-list"
+  >
+    <CompactIssue
+      data={
+        Object {
+          "assignedTo": null,
+          "id": "1",
+          "project": Object {
+            "id": "2",
+            "slug": "project-slug",
+          },
+          "stats": Object {
+            "24h": Array [
+              Array [
+                1517281200,
+                2,
+              ],
+              Array [
+                1517310000,
+                1,
+              ],
+            ],
+            "30d": Array [
+              Array [
+                1514764800,
+                1,
+              ],
+              Array [
+                1515024000,
+                122,
+              ],
+            ],
+          },
+          "tags": Array [],
+        }
+      }
+      id="1"
+      key="123"
+      orgId="org-slug"
+      projectId="project-slug"
+    >
+      <EventUserReport
+        issueId="1"
+        orgId="org-slug"
+        projectId="project-slug"
+        report={
+          Object {
+            "comments": "Something bad happened",
+            "email": "lyn@sentry.io",
+            "id": "123",
+            "issue": Object {
+              "assignedTo": null,
+              "id": "1",
+              "project": Object {
+                "id": "2",
+                "slug": "project-slug",
+              },
+              "stats": Object {
+                "24h": Array [
+                  Array [
+                    1517281200,
+                    2,
+                  ],
+                  Array [
+                    1517310000,
+                    1,
+                  ],
+                ],
+                "30d": Array [
+                  Array [
+                    1514764800,
+                    1,
+                  ],
+                  Array [
+                    1515024000,
+                    122,
+                  ],
+                ],
+              },
+              "tags": Array [],
+            },
+            "name": "Lyn",
+          }
+        }
+      />
+    </CompactIssue>
+  </ul>
+  <Pagination
+    onCursor={[Function]}
+  />
+</div>
+`;
diff --git a/tests/js/spec/views/projectUserReports.spec.jsx b/tests/js/spec/views/projectUserReports.spec.jsx
new file mode 100644
index 0000000000..017ff1ee6d
--- /dev/null
+++ b/tests/js/spec/views/projectUserReports.spec.jsx
@@ -0,0 +1,33 @@
+import React from 'react';
+
+import {shallow} from 'enzyme';
+import {ProjectUserReports} from 'app/views/projectUserReports';
+
+describe('projectUserReports', function() {
+  beforeEach(function() {
+    MockApiClient.addMockResponse({
+      url: '/projects/org-slug/project-slug/user-reports/',
+      body: [TestStubs.UserReport()],
+    });
+  });
+
+  afterEach(function() {
+    MockApiClient.clearMockResponses();
+  });
+
+  it('renders', function() {
+    const params = {
+      location: {query: {}},
+      setProjectNavSection: jest.fn(),
+      params: {
+        orgId: 'org-slug',
+        projectId: 'project-slug',
+      },
+    };
+    const wrapper = shallow(
+      <ProjectUserReports {...params} />,
+      TestStubs.routerContext()
+    );
+    expect(wrapper).toMatchSnapshot();
+  });
+});
