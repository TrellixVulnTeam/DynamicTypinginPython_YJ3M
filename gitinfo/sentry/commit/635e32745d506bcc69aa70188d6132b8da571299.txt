commit 635e32745d506bcc69aa70188d6132b8da571299
Author: Taylan Gocmen <taylangocmen@users.noreply.github.com>
Date:   Thu Jun 4 15:51:34 2020 -0700

    feat(alerts): Add colored indicators to alerts event and error count chart (#19156)
    
    * adding critical line to alert graph
    
    * add warning line and types for markline
    
    * simplify alert threshold marklines
    
    * simplify markline datas
    
    * fixing pieces type check
    
    * use interface type for mark line
    
    * move incident triggers to chart
    
    * fixing the pieces object error
    
    * use theme colors for line instead of custom
    
    * restore marklines
    
    * using optional chaings

diff --git a/src/sentry/static/sentry/app/components/charts/components/markLine.jsx b/src/sentry/static/sentry/app/components/charts/components/markLine.jsx
index 749fd39af9..f165fb72f4 100644
--- a/src/sentry/static/sentry/app/components/charts/components/markLine.jsx
+++ b/src/sentry/static/sentry/app/components/charts/components/markLine.jsx
@@ -3,7 +3,7 @@ import 'echarts/lib/component/markLine';
 /**
  * eCharts markLine
  *
- * See https://ecomfe.github.io/echarts-doc/public/en/option.html#series-line.markLine
+ * See https://echarts.apache.org/en/option.html#series-line.markLine
  */
 export default function MarkLine(props) {
   return {
diff --git a/src/sentry/static/sentry/app/components/charts/visualMap.tsx b/src/sentry/static/sentry/app/components/charts/components/visualMap.tsx
similarity index 100%
rename from src/sentry/static/sentry/app/components/charts/visualMap.tsx
rename to src/sentry/static/sentry/app/components/charts/components/visualMap.tsx
diff --git a/src/sentry/static/sentry/app/components/charts/worldMapChart.jsx b/src/sentry/static/sentry/app/components/charts/worldMapChart.jsx
index b2748078bd..e285febbc1 100644
--- a/src/sentry/static/sentry/app/components/charts/worldMapChart.jsx
+++ b/src/sentry/static/sentry/app/components/charts/worldMapChart.jsx
@@ -6,7 +6,7 @@ import theme from 'app/utils/theme';
 
 import BaseChart from './baseChart';
 import MapSeries from './series/mapSeries';
-import VisualMap from './visualMap';
+import VisualMap from './components/visualMap';
 
 export default class WorldMapChart extends React.Component {
   static propTypes = {
diff --git a/src/sentry/static/sentry/app/views/alerts/details/body.tsx b/src/sentry/static/sentry/app/views/alerts/details/body.tsx
index 1f6c9bdb84..bea55bcb6f 100644
--- a/src/sentry/static/sentry/app/views/alerts/details/body.tsx
+++ b/src/sentry/static/sentry/app/views/alerts/details/body.tsx
@@ -209,6 +209,7 @@ export default class DetailsBody extends React.Component<Props> {
               {this.renderChartHeader()}
               {incident && stats ? (
                 <Chart
+                  triggers={incident.alertRule.triggers}
                   aggregate={incident.alertRule.aggregate}
                   data={stats.eventStats.data}
                   detected={incident.dateDetected}
diff --git a/src/sentry/static/sentry/app/views/alerts/details/chart.tsx b/src/sentry/static/sentry/app/views/alerts/details/chart.tsx
index b062a3f9ce..8e8b438ec3 100644
--- a/src/sentry/static/sentry/app/views/alerts/details/chart.tsx
+++ b/src/sentry/static/sentry/app/views/alerts/details/chart.tsx
@@ -3,13 +3,24 @@ import moment from 'moment';
 
 import {t} from 'app/locale';
 import space from 'app/styles/space';
+import theme from 'app/utils/theme';
+import {Trigger} from 'app/views/settings/incidentRules/types';
 import LineChart from 'app/components/charts/lineChart';
 import MarkPoint from 'app/components/charts/components/markPoint';
+import MarkLine from 'app/components/charts/components/markLine';
+import VisualMap from 'app/components/charts/components/visualMap';
 
 import closedSymbol from './closedSymbol';
 import detectedSymbol from './detectedSymbol';
 
 type Data = [number, {count: number}[]];
+type PiecesObject = {
+  min?: number;
+  max?: number;
+  label?: string;
+  value?: number;
+  color?: string;
+};
 
 /**
  * So we'll have to see how this looks with real data, but echarts requires
@@ -68,10 +79,11 @@ type Props = {
   aggregate: string;
   detected: string;
   closed?: string;
+  triggers?: Trigger[];
 };
 
 const Chart = (props: Props) => {
-  const {aggregate, data, detected, closed} = props;
+  const {aggregate, data, detected, closed, triggers} = props;
   const detectedTs = detected && moment.utc(detected).unix();
   const closedTs = closed && moment.utc(closed).unix();
   const chartData = data.map(([ts, val]) => [
@@ -105,6 +117,37 @@ const Chart = (props: Props) => {
 
   const seriesName = aggregate;
 
+  const warningTrigger = triggers?.find(trig => trig.label === 'warning');
+  const criticalTrigger = triggers?.find(trig => trig.label === 'critical');
+  const warningTriggerThreshold =
+    warningTrigger &&
+    typeof warningTrigger.alertThreshold === 'number' &&
+    warningTrigger.alertThreshold;
+  const criticalTriggerThreshold =
+    criticalTrigger &&
+    typeof criticalTrigger.alertThreshold === 'number' &&
+    criticalTrigger.alertThreshold;
+
+  const visualMapPieces: PiecesObject[] = [];
+  // Echarts throws an error if when the first element in pieces doesn't have both min/max
+  if (warningTriggerThreshold ?? criticalTriggerThreshold)
+    visualMapPieces.push({
+      min: -1, // if this is 0 the x axis goes halfway over the line
+      max: (warningTriggerThreshold ?? criticalTriggerThreshold) || 0,
+      color: theme.purple500,
+    });
+  if (warningTriggerThreshold && criticalTriggerThreshold)
+    visualMapPieces.push({
+      min: warningTriggerThreshold,
+      max: criticalTriggerThreshold,
+      color: theme.yellow400,
+    });
+  if (criticalTriggerThreshold)
+    visualMapPieces.push({
+      min: criticalTriggerThreshold,
+      color: theme.red300,
+    });
+
   return (
     <LineChart
       isGroupedByDate
@@ -144,7 +187,45 @@ const Chart = (props: Props) => {
             ],
           }),
         },
-      ]}
+        warningTriggerThreshold && {
+          type: 'line',
+          markLine: MarkLine({
+            silent: true,
+            lineStyle: {color: theme.yellow400},
+            data: [
+              {
+                yAxis: warningTriggerThreshold,
+              },
+            ],
+            label: {
+              show: false,
+            },
+          }),
+          data: [],
+        },
+        criticalTriggerThreshold && {
+          type: 'line',
+          markLine: MarkLine({
+            silent: true,
+            lineStyle: {color: theme.red300},
+            data: [
+              {
+                yAxis: criticalTriggerThreshold,
+              },
+            ],
+            label: {
+              show: false,
+            },
+          }),
+          data: [],
+        },
+      ].filter(Boolean)}
+      options={{
+        visualMap: VisualMap({
+          pieces: visualMapPieces,
+          show: false,
+        }),
+      }}
     />
   );
 };
