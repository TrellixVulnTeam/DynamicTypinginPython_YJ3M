commit bd2d480fdb5c90fd0bf52146e579931b85aea20d
Author: Stephen Cefali <scefali@sentry.io>
Date:   Fri Feb 14 14:45:38 2020 -0800

    chore(ts): converts migrationWarnings (#17062)

diff --git a/src/sentry/static/sentry/app/views/organizationIntegrations/migrationWarnings.jsx b/src/sentry/static/sentry/app/views/organizationIntegrations/migrationWarnings.jsx
deleted file mode 100644
index 059e26657f..0000000000
--- a/src/sentry/static/sentry/app/views/organizationIntegrations/migrationWarnings.jsx
+++ /dev/null
@@ -1,60 +0,0 @@
-import PropTypes from 'prop-types';
-import React from 'react';
-import groupBy from 'lodash/groupBy';
-
-import {tct} from 'app/locale';
-import AddIntegration from 'app/views/organizationIntegrations/addIntegration';
-import AlertLink from 'app/components/alertLink';
-import AsyncComponent from 'app/components/asyncComponent';
-
-export default class MigrationWarnings extends AsyncComponent {
-  static propTypes = {
-    orgId: PropTypes.string.isRequired,
-    providers: PropTypes.array.isRequired,
-    onInstall: PropTypes.func.isRequired,
-  };
-
-  getEndpoints() {
-    const {orgId} = this.props;
-
-    return [['unmigratableRepos', `/organizations/${orgId}/repos/?status=unmigratable`]];
-  }
-
-  get unmigratableReposByOrg() {
-    // Group by [GitHub|BitBucket|VSTS] Org name
-    return groupBy(this.state.unmigratableRepos, repo => repo.name.split('/')[0]);
-  }
-
-  render() {
-    return Object.entries(this.unmigratableReposByOrg).map(([orgName, repos]) => {
-      // Repos use 'visualstudio', Integrations use 'vsts'. Normalize to 'vsts'.
-      const key = repos[0].provider.id === 'visualstudio' ? 'vsts' : repos[0].provider.id;
-      const provider = this.props.providers.find(p => p.key === key);
-
-      // The Org might not have access to this Integration yet.
-      if (!provider) {
-        return '';
-      }
-
-      return (
-        <AddIntegration
-          key={provider.key}
-          provider={provider}
-          onInstall={this.props.onInstall}
-        >
-          {onClick => (
-            <AlertLink onClick={() => onClick()} href="#">
-              {tct(
-                "Your [orgName] repositories can't send commit data to Sentry. Add a [orgName] [providerName] instance here.",
-                {
-                  orgName,
-                  providerName: provider.name,
-                }
-              )}
-            </AlertLink>
-          )}
-        </AddIntegration>
-      );
-    });
-  }
-}
diff --git a/src/sentry/static/sentry/app/views/organizationIntegrations/migrationWarnings.tsx b/src/sentry/static/sentry/app/views/organizationIntegrations/migrationWarnings.tsx
new file mode 100644
index 0000000000..470499b13a
--- /dev/null
+++ b/src/sentry/static/sentry/app/views/organizationIntegrations/migrationWarnings.tsx
@@ -0,0 +1,67 @@
+import React from 'react';
+import groupBy from 'lodash/groupBy';
+
+import {tct} from 'app/locale';
+import AddIntegration from 'app/views/organizationIntegrations/addIntegration';
+import AlertLink from 'app/components/alertLink';
+import AsyncComponent from 'app/components/asyncComponent';
+import {IntegrationProvider, Integration, Repository} from 'app/types';
+
+type Props = {
+  orgId: string;
+  providers: IntegrationProvider[];
+  onInstall: (integration: Integration) => void;
+} & AsyncComponent['props'];
+
+type State = {
+  unmigratableRepos: Repository[];
+} & AsyncComponent['state'];
+
+export default class MigrationWarnings extends AsyncComponent<Props, State> {
+  getEndpoints(): ([string, string] | [string, string])[] {
+    const {orgId} = this.props;
+
+    return [['unmigratableRepos', `/organizations/${orgId}/repos/?status=unmigratable`]];
+  }
+
+  get unmigratableReposByOrg() {
+    // Group by [GitHub|BitBucket|VSTS] Org name
+    return groupBy(this.state.unmigratableRepos, repo => repo.name.split('/')[0]);
+  }
+
+  render() {
+    return Object.entries(this.unmigratableReposByOrg).map(
+      ([orgName, repos]: [string, Repository[]]) => {
+        // Repos use 'visualstudio', Integrations use 'vsts'. Normalize to 'vsts'.
+        const key =
+          repos[0].provider.id === 'visualstudio' ? 'vsts' : repos[0].provider.id;
+        const provider = this.props.providers.find(p => p.key === key);
+
+        // The Org might not have access to this Integration yet.
+        if (!provider) {
+          return '';
+        }
+
+        return (
+          <AddIntegration
+            key={provider.key}
+            provider={provider}
+            onInstall={this.props.onInstall}
+          >
+            {onClick => (
+              <AlertLink onClick={() => onClick()} href="#">
+                {tct(
+                  "Your [orgName] repositories can't send commit data to Sentry. Add a [orgName] [providerName] instance here.",
+                  {
+                    orgName,
+                    providerName: provider.name,
+                  }
+                )}
+              </AlertLink>
+            )}
+          </AddIntegration>
+        );
+      }
+    );
+  }
+}
