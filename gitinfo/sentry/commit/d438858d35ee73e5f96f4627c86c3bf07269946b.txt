commit d438858d35ee73e5f96f4627c86c3bf07269946b
Author: Billy Vong <billyvg@users.noreply.github.com>
Date:   Thu Dec 19 08:45:10 2019 -0800

    feat(ui): Add delete button for Metric Alerts (#16167)
    
    This adds a delete and cancel button to Metric Alerts

diff --git a/src/sentry/static/sentry/app/views/settings/incidentRules/create.tsx b/src/sentry/static/sentry/app/views/settings/incidentRules/create.tsx
index a8a5152a98..52cdc71a4b 100644
--- a/src/sentry/static/sentry/app/views/settings/incidentRules/create.tsx
+++ b/src/sentry/static/sentry/app/views/settings/incidentRules/create.tsx
@@ -23,14 +23,13 @@ class IncidentRulesCreate extends React.Component<RouteComponentProps<{}, {}> &
   };
 
   render() {
-    const {organization, project} = this.props;
+    const {project, ...props} = this.props;
 
     return (
       <RuleForm
-        organization={organization}
         onSubmitSuccess={this.handleSubmitSuccess}
         rule={{...createDefaultRule(), projects: [project.slug]}}
-        params={this.props.params}
+        {...props}
       />
     );
   }
diff --git a/src/sentry/static/sentry/app/views/settings/incidentRules/details.tsx b/src/sentry/static/sentry/app/views/settings/incidentRules/details.tsx
index 18a9d0077f..b75d59ecf8 100644
--- a/src/sentry/static/sentry/app/views/settings/incidentRules/details.tsx
+++ b/src/sentry/static/sentry/app/views/settings/incidentRules/details.tsx
@@ -86,15 +86,13 @@ class IncidentRulesDetails extends AsyncView<
   };
 
   renderBody() {
-    const {organization, params} = this.props;
-    const {incidentRuleId} = params;
+    const {incidentRuleId} = this.props.params;
     const {rule} = this.state;
 
     return (
       <RuleForm
-        organization={organization}
+        {...this.props}
         incidentRuleId={incidentRuleId}
-        params={params}
         rule={this.getActions(rule, this.state.actions)}
       />
     );
diff --git a/src/sentry/static/sentry/app/views/settings/incidentRules/ruleForm/index.tsx b/src/sentry/static/sentry/app/views/settings/incidentRules/ruleForm/index.tsx
index a40d78fd50..a2315de849 100644
--- a/src/sentry/static/sentry/app/views/settings/incidentRules/ruleForm/index.tsx
+++ b/src/sentry/static/sentry/app/views/settings/incidentRules/ruleForm/index.tsx
@@ -1,3 +1,4 @@
+import {PlainRoute} from 'react-router/lib/Route';
 import {RouteComponentProps} from 'react-router/lib/Router';
 import React from 'react';
 
@@ -14,27 +15,34 @@ import {createDefaultTrigger} from 'app/views/settings/incidentRules/constants';
 import {defined} from 'app/utils';
 import {t} from 'app/locale';
 import AsyncComponent from 'app/components/asyncComponent';
+import Button from 'app/components/button';
+import Confirm from 'app/components/confirm';
 import Form from 'app/views/settings/components/forms/form';
 import RuleNameForm from 'app/views/settings/incidentRules/ruleNameForm';
 import Triggers from 'app/views/settings/incidentRules/triggers';
 import TriggersChart from 'app/views/settings/incidentRules/triggers/chart';
+import recreateRoute from 'app/utils/recreateRoute';
 import withApi from 'app/utils/withApi';
 import withConfig from 'app/utils/withConfig';
 import withProject from 'app/utils/withProject';
 
 import {AlertRuleAggregations, IncidentRule, Trigger} from '../types';
-import RuleConditionsForm from '../ruleConditionsForm';
-import FormModel from '../../components/forms/model';
 import {addOrUpdateRule} from '../actions';
+import FormModel from '../../components/forms/model';
+import RuleConditionsForm from '../ruleConditionsForm';
 
 type Props = {
   api: Client;
   config: Config;
   organization: Organization;
   project: Project;
+  routes: PlainRoute[];
   rule: IncidentRule;
   incidentRuleId?: string;
-} & Pick<RouteComponentProps<{orgId: string; projectId: string}, {}>, 'params'> & {
+} & RouteComponentProps<
+  {orgId: string; projectId: string; incidentRuleId: string},
+  {}
+> & {
     onSubmitSuccess?: Form['props']['onSubmitSuccess'];
   } & AsyncComponent['props'];
 
@@ -86,6 +94,12 @@ class RuleFormContainer extends AsyncComponent<Props, State> {
     ];
   }
 
+  goBack() {
+    const {router, routes, params, location} = this.props;
+
+    router.replace(recreateRoute('', {routes, params, location, stepBack: -2}));
+  }
+
   validateFieldInTrigger({errors, triggerIndex, field, message, isValid}) {
     // If valid, reset error for fieldName
     if (isValid()) {
@@ -222,6 +236,27 @@ class RuleFormContainer extends AsyncComponent<Props, State> {
     });
   };
 
+  handleDeleteRule = async () => {
+    const {api, params} = this.props;
+    const {orgId, projectId, incidentRuleId} = params;
+
+    try {
+      await api.requestPromise(
+        `/projects/${orgId}/${projectId}/alert-rules/${incidentRuleId}/`,
+        {
+          method: 'DELETE',
+        }
+      );
+      this.goBack();
+    } catch (_err) {
+      addErrorMessage(t('Error deleting rule'));
+    }
+  };
+
+  handleCancel = () => {
+    this.goBack();
+  };
+
   renderLoading() {
     return this.renderBody();
   }
@@ -253,7 +288,24 @@ class RuleFormContainer extends AsyncComponent<Props, State> {
         saveOnBlur={false}
         onSubmit={this.handleSubmit}
         onSubmitSuccess={onSubmitSuccess}
+        onCancel={this.handleCancel}
         onFieldChange={this.handleFieldChange}
+        extraButton={
+          !!rule.id ? (
+            <Confirm
+              message={t('Are you sure you want to delete this alert rule?')}
+              header={t('Delete Alert Rule?')}
+              priority="danger"
+              confirmText={t('Delete Rule')}
+              onConfirm={this.handleDeleteRule}
+            >
+              <Button type="button" priority="danger">
+                {t('Delete Rule')}
+              </Button>
+            </Confirm>
+          ) : null
+        }
+        submitLabel={t('Save Rule')}
       >
         <TriggersChart
           api={api}
diff --git a/tests/js/spec/views/settings/incidentRules/details.spec.jsx b/tests/js/spec/views/settings/incidentRules/details.spec.jsx
index 142ac252d1..1fe56fd489 100644
--- a/tests/js/spec/views/settings/incidentRules/details.spec.jsx
+++ b/tests/js/spec/views/settings/incidentRules/details.spec.jsx
@@ -141,7 +141,7 @@ describe('Incident Rules Details', function() {
     });
 
     // Save Trigger
-    wrapper.find('button[aria-label="Save Changes"]').simulate('submit');
+    wrapper.find('button[aria-label="Save Rule"]').simulate('submit');
 
     expect(editRule).toHaveBeenCalledWith(
       expect.anything(),
@@ -222,7 +222,7 @@ describe('Incident Rules Details', function() {
       .simulate('click');
 
     // Save Trigger
-    wrapper.find('button[aria-label="Save Changes"]').simulate('submit');
+    wrapper.find('button[aria-label="Save Rule"]').simulate('submit');
 
     expect(editRule).toHaveBeenCalledWith(
       expect.anything(),
