commit f96d1fc138155ec51b2f35a0be0355cf908a83fd
Author: Priscila Oliveira <priscilawebdev@gmail.com>
Date:   Thu Feb 13 11:17:52 2020 +0100

    ref(ui):  Added tooltip - Datascrubbers v2 - Part 2 (#16945)

diff --git a/src/sentry/static/sentry/app/components/contextData.jsx b/src/sentry/static/sentry/app/components/contextData.jsx
index c4c83bc1d2..025ceb2311 100644
--- a/src/sentry/static/sentry/app/components/contextData.jsx
+++ b/src/sentry/static/sentry/app/components/contextData.jsx
@@ -4,6 +4,7 @@ import React from 'react';
 import isString from 'lodash/isString';
 import isNumber from 'lodash/isNumber';
 import isArray from 'lodash/isArray';
+import AnnotatedText from 'app/components/events/meta/annotatedText';
 
 import {isUrl} from 'app/utils';
 
@@ -117,14 +118,28 @@ class ContextData extends React.Component {
   static propTypes = {
     data: PropTypes.any,
     preserveQuotes: PropTypes.bool,
+    withAnnotatedText: PropTypes.bool,
+    meta: PropTypes.any,
   };
 
   static defaultProps = {
     data: null,
+    withAnnotatedText: false,
   };
 
   renderValue = value => {
-    const {preserveQuotes} = this.props;
+    const {preserveQuotes, meta, withAnnotatedText} = this.props;
+
+    function getValueWithAnnotatedText(v, meta) {
+      return (
+        <AnnotatedText
+          value={v}
+          chunks={meta.chunks}
+          remarks={meta.rem}
+          errors={meta.err}
+        />
+      );
+    }
 
     /*eslint no-shadow:0*/
     function walk(value, depth) {
@@ -137,6 +152,11 @@ class ContextData extends React.Component {
       } else if (isString(value)) {
         const valueInfo = analyzeStringForRepr(value);
 
+        const valueToBeReturned =
+          withAnnotatedText && meta
+            ? getValueWithAnnotatedText(valueInfo.repr, meta)
+            : valueInfo.repr;
+
         const out = [
           <span
             key="value"
@@ -146,7 +166,7 @@ class ContextData extends React.Component {
               (valueInfo.isMultiLine ? ' val-string-multiline' : '')
             }
           >
-            {preserveQuotes ? `"${valueInfo.repr}"` : valueInfo.repr}
+            {preserveQuotes ? `"${valueToBeReturned}"` : valueToBeReturned}
           </span>,
         ];
 
@@ -160,7 +180,9 @@ class ContextData extends React.Component {
 
         return out;
       } else if (isNumber(value)) {
-        return <span>{value}</span>;
+        const valueToBeReturned =
+          withAnnotatedText && meta ? getValueWithAnnotatedText(value, meta) : value;
+        return <span>{valueToBeReturned}</span>;
       } else if (isArray(value)) {
         for (i = 0; i < value.length; i++) {
           children.push(
@@ -217,15 +239,14 @@ class ContextData extends React.Component {
     return walk(value, 0);
   };
 
-  renderKeyPosValue = value => {
-    if (isString(value)) {
-      return <span className="val-string">{value}</span>;
-    }
-    return this.renderValue(value);
-  };
-
   render() {
-    const {data, preserveQuotes: _preserveQuotes, ...other} = this.props;
+    const {
+      data,
+      preserveQuotes: _preserveQuotes,
+      withAnnotatedText: _withAnnotatedText,
+      meta: _meta,
+      ...other
+    } = this.props;
 
     return (
       <pre className="val-string" {...other}>
diff --git a/src/sentry/static/sentry/app/components/events/contexts/contextBlock.jsx b/src/sentry/static/sentry/app/components/events/contexts/contextBlock.jsx
index eed42750dc..8c48879f40 100644
--- a/src/sentry/static/sentry/app/components/events/contexts/contextBlock.jsx
+++ b/src/sentry/static/sentry/app/components/events/contexts/contextBlock.jsx
@@ -4,7 +4,7 @@ import sortBy from 'lodash/sortBy';
 
 import {defined} from 'app/utils';
 import ErrorBoundary from 'app/components/errorBoundary';
-import KeyValueList from 'app/components/events/interfaces/keyValueList';
+import KeyValueList from 'app/components/events/interfaces/keyValueList/keyValueList';
 
 class ContextBlock extends React.Component {
   static propTypes = {
diff --git a/src/sentry/static/sentry/app/components/events/contexts/user.jsx b/src/sentry/static/sentry/app/components/events/contexts/user.jsx
index 64ab17071b..2de491c45c 100644
--- a/src/sentry/static/sentry/app/components/events/contexts/user.jsx
+++ b/src/sentry/static/sentry/app/components/events/contexts/user.jsx
@@ -6,7 +6,7 @@ import each from 'lodash/each';
 import UserAvatar from 'app/components/avatar/userAvatar';
 import ErrorBoundary from 'app/components/errorBoundary';
 import ExternalLink from 'app/components/links/externalLink';
-import KeyValueList from 'app/components/events/interfaces/keyValueList';
+import KeyValueList from 'app/components/events/interfaces/keyValueList/keyValueList';
 import {removeFilterMaskedEntries} from 'app/components/events/interfaces/utils';
 
 const EMAIL_REGEX = /[^@]+@[^\.]+\..+/;
diff --git a/src/sentry/static/sentry/app/components/events/errorItem.jsx b/src/sentry/static/sentry/app/components/events/errorItem.jsx
index 97293aa325..db942837c9 100644
--- a/src/sentry/static/sentry/app/components/events/errorItem.jsx
+++ b/src/sentry/static/sentry/app/components/events/errorItem.jsx
@@ -2,7 +2,7 @@ import mapKeys from 'lodash/mapKeys';
 import startCase from 'lodash/startCase';
 import isEmpty from 'lodash/isEmpty';
 import React from 'react';
-import KeyValueList from 'app/components/events/interfaces/keyValueList';
+import KeyValueList from 'app/components/events/interfaces/keyValueList/keyValueList';
 import {t} from 'app/locale';
 import {EventError} from 'app/sentryTypes';
 
diff --git a/src/sentry/static/sentry/app/components/events/eventEntries.jsx b/src/sentry/static/sentry/app/components/events/eventEntries.jsx
index 336277fac8..ffd9c95948 100644
--- a/src/sentry/static/sentry/app/components/events/eventEntries.jsx
+++ b/src/sentry/static/sentry/app/components/events/eventEntries.jsx
@@ -17,7 +17,7 @@ import EventContexts from 'app/components/events/contexts';
 import EventDataSection from 'app/components/events/eventDataSection';
 import EventDevice from 'app/components/events/device';
 import EventErrors from 'app/components/events/errors';
-import EventExtraData from 'app/components/events/extraData';
+import EventExtraData from 'app/components/events/eventExtraData/eventExtraData';
 import EventGroupingInfo from 'app/components/events/groupingInfo';
 import EventPackageData from 'app/components/events/packageData';
 import EventSdk from 'app/components/events/eventSdk';
diff --git a/src/sentry/static/sentry/app/components/events/extraData.tsx b/src/sentry/static/sentry/app/components/events/eventExtraData/eventExtraData.tsx
similarity index 55%
rename from src/sentry/static/sentry/app/components/events/extraData.tsx
rename to src/sentry/static/sentry/app/components/events/eventExtraData/eventExtraData.tsx
index 46407ec8eb..198c9d7a6f 100644
--- a/src/sentry/static/sentry/app/components/events/extraData.tsx
+++ b/src/sentry/static/sentry/app/components/events/eventExtraData/eventExtraData.tsx
@@ -4,8 +4,13 @@ import {Event} from 'app/types';
 import {t} from 'app/locale';
 import ErrorBoundary from 'app/components/errorBoundary';
 import EventDataSection from 'app/components/events/eventDataSection';
-import KeyValueList from 'app/components/events/interfaces/keyValueList';
+import KeyValueList, {
+  KeyValueListData,
+} from 'app/components/events/interfaces/keyValueList/keyValueListV2';
 import SentryTypes from 'app/sentryTypes';
+import {getMeta} from 'app/components/events/meta/metaProxy';
+
+import EventExtraDataSubject, {EventExtraDataSubjectType} from './eventExtraDataSubject';
 
 type Props = {
   event: Event;
@@ -34,9 +39,24 @@ class EventExtraData extends React.Component<Props, State> {
     });
   };
 
-  render() {
-    const extraDataArray = Object.entries(this.props.event.context || {});
+  getKeyValueListData = (): Array<KeyValueListData> | undefined => {
+    const eventContext = this.props.event.context;
+
+    if (eventContext === undefined || eventContext === null) {
+      return undefined;
+    }
 
+    return Object.keys(eventContext)
+      .map(key => ({
+        key,
+        subject: <EventExtraDataSubject type={key as EventExtraDataSubjectType} />,
+        value: eventContext[key],
+        meta: getMeta(eventContext, key),
+      }))
+      .filter(data => data.key !== null);
+  };
+
+  render() {
     return (
       <div className="extra-data">
         <EventDataSection
@@ -46,7 +66,11 @@ class EventExtraData extends React.Component<Props, State> {
           raw={this.state.raw}
         >
           <ErrorBoundary mini>
-            <KeyValueList data={extraDataArray} isContextData raw={this.state.raw} />
+            <KeyValueList
+              data={this.getKeyValueListData()}
+              raw={this.state.raw}
+              isContextData
+            />
           </ErrorBoundary>
         </EventDataSection>
       </div>
diff --git a/src/sentry/static/sentry/app/components/events/eventExtraData/eventExtraDataSubject.tsx b/src/sentry/static/sentry/app/components/events/eventExtraData/eventExtraDataSubject.tsx
new file mode 100644
index 0000000000..a413190412
--- /dev/null
+++ b/src/sentry/static/sentry/app/components/events/eventExtraData/eventExtraDataSubject.tsx
@@ -0,0 +1,22 @@
+import React from 'react';
+
+import {t} from 'app/locale';
+
+export enum EventExtraDataSubjectType {
+  CRASHED_PROCESS = 'crashed_process',
+}
+
+type Props = {
+  type: EventExtraDataSubjectType;
+};
+
+const EventExtraDataSubject = ({type}: Props) => {
+  switch (type) {
+    case EventExtraDataSubjectType.CRASHED_PROCESS:
+      return <React.Fragment>{t('Crashed Process')}</React.Fragment>;
+    default:
+      return <React.Fragment>{type}</React.Fragment>;
+  }
+};
+
+export default EventExtraDataSubject;
diff --git a/src/sentry/static/sentry/app/components/events/groupingInfo.jsx b/src/sentry/static/sentry/app/components/events/groupingInfo.jsx
index abdbf0b9eb..bf1cf8bf46 100644
--- a/src/sentry/static/sentry/app/components/events/groupingInfo.jsx
+++ b/src/sentry/static/sentry/app/components/events/groupingInfo.jsx
@@ -11,7 +11,7 @@ import BetaTag from 'app/components/betaTag';
 import EventDataSection from 'app/components/events/eventDataSection';
 import SentryTypes from 'app/sentryTypes';
 import {t} from 'app/locale';
-import KeyValueList from 'app/components/events/interfaces/keyValueList';
+import KeyValueList from 'app/components/events/interfaces/keyValueList/keyValueList';
 
 import withOrganization from 'app/utils/withOrganization';
 
diff --git a/src/sentry/static/sentry/app/components/events/interfaces/cspContent.jsx b/src/sentry/static/sentry/app/components/events/interfaces/cspContent.jsx
index e6c475717c..719894ebc4 100644
--- a/src/sentry/static/sentry/app/components/events/interfaces/cspContent.jsx
+++ b/src/sentry/static/sentry/app/components/events/interfaces/cspContent.jsx
@@ -1,7 +1,7 @@
 import PropTypes from 'prop-types';
 import React from 'react';
 
-import KeyValueList from 'app/components/events/interfaces/keyValueList';
+import KeyValueList from 'app/components/events/interfaces/keyValueList/keyValueList';
 
 class CSPContent extends React.Component {
   static propTypes = {
diff --git a/src/sentry/static/sentry/app/components/events/interfaces/frameVariables.jsx b/src/sentry/static/sentry/app/components/events/interfaces/frameVariables.jsx
index 23c8ce74ad..654718f11b 100644
--- a/src/sentry/static/sentry/app/components/events/interfaces/frameVariables.jsx
+++ b/src/sentry/static/sentry/app/components/events/interfaces/frameVariables.jsx
@@ -1,7 +1,7 @@
 import PropTypes from 'prop-types';
 import React from 'react';
 
-import KeyValueList from 'app/components/events/interfaces/keyValueList';
+import KeyValueList from 'app/components/events/interfaces/keyValueList/keyValueList';
 
 class FrameVariables extends React.Component {
   static propTypes = {
diff --git a/src/sentry/static/sentry/app/components/events/interfaces/generic.jsx b/src/sentry/static/sentry/app/components/events/interfaces/generic.jsx
index 82b78ebbc1..b52126363f 100644
--- a/src/sentry/static/sentry/app/components/events/interfaces/generic.jsx
+++ b/src/sentry/static/sentry/app/components/events/interfaces/generic.jsx
@@ -3,7 +3,7 @@ import React, {Component} from 'react';
 import SentryTypes from 'app/sentryTypes';
 
 import EventDataSection from 'app/components/events/eventDataSection';
-import KeyValueList from 'app/components/events/interfaces/keyValueList';
+import KeyValueList from 'app/components/events/interfaces/keyValueList/keyValueList';
 import {t} from 'app/locale';
 
 function getView(view, data) {
diff --git a/src/sentry/static/sentry/app/components/events/interfaces/keyValueList.jsx b/src/sentry/static/sentry/app/components/events/interfaces/keyValueList/keyValueList.jsx
similarity index 100%
rename from src/sentry/static/sentry/app/components/events/interfaces/keyValueList.jsx
rename to src/sentry/static/sentry/app/components/events/interfaces/keyValueList/keyValueList.jsx
index 69d109575b..9ec1c46ee8 100644
--- a/src/sentry/static/sentry/app/components/events/interfaces/keyValueList.jsx
+++ b/src/sentry/static/sentry/app/components/events/interfaces/keyValueList/keyValueList.jsx
@@ -1,8 +1,8 @@
 import PropTypes from 'prop-types';
 import React from 'react';
 import sortBy from 'lodash/sortBy';
-import styled from '@emotion/styled';
 
+import styled from '@emotion/styled';
 import ContextData from 'app/components/contextData';
 import theme from 'app/utils/theme';
 
diff --git a/src/sentry/static/sentry/app/components/events/interfaces/keyValueList/keyValueListV2.tsx b/src/sentry/static/sentry/app/components/events/interfaces/keyValueList/keyValueListV2.tsx
new file mode 100644
index 0000000000..81e0fca67e
--- /dev/null
+++ b/src/sentry/static/sentry/app/components/events/interfaces/keyValueList/keyValueListV2.tsx
@@ -0,0 +1,99 @@
+import React from 'react';
+import sortBy from 'lodash/sortBy';
+
+import styled from '@emotion/styled';
+import ContextData from 'app/components/contextData';
+import AnnotatedText from 'app/components/events/meta/annotatedText';
+import theme from 'app/utils/theme';
+
+type Props = {
+  data?: Array<KeyValueListData>;
+  onClick?: () => void;
+  raw?: boolean;
+  longKeys?: boolean;
+  isContextData?: boolean;
+  isSorted?: boolean;
+};
+
+export type KeyValueListData = {
+  key: string;
+  subject: React.ReactNode;
+  value: string | null;
+  meta: Meta;
+};
+
+type Meta = {
+  chunks: Array<Chunks>;
+  len: number;
+  rem: Array<Array<string | number>>;
+  err: Array<any>;
+};
+
+type Chunks = {
+  text: string;
+  type: string;
+  remark?: string;
+  rule_id?: string;
+};
+
+const KeyValueList = ({
+  data,
+  isContextData = false,
+  isSorted = true,
+  raw = false,
+  longKeys = false,
+  onClick,
+}: Props) => {
+  if (data === undefined || data === null || data.length === 0) {
+    return null;
+  }
+
+  const getData = () => {
+    if (isSorted) {
+      return sortBy(data, [({key}) => key.toLowerCase()]);
+    }
+    return data;
+  };
+
+  return (
+    <table className="table key-value" onClick={onClick}>
+      <tbody>
+        {getData().map(({key, subject, value, meta}) => (
+          <tr key={key}>
+            <TableData className="key" wide={longKeys}>
+              {subject}
+            </TableData>
+            <td className="val">
+              {isContextData ? (
+                <ContextData
+                  data={!raw ? value : JSON.stringify(value)}
+                  meta={meta}
+                  withAnnotatedText
+                />
+              ) : (
+                <pre className="val-string">
+                  <AnnotatedText
+                    value={value}
+                    chunks={meta.chunks}
+                    remarks={meta.rem}
+                    errors={meta.err}
+                  />
+                </pre>
+              )}
+            </td>
+          </tr>
+        ))}
+      </tbody>
+    </table>
+  );
+};
+
+const TableData = styled('td')<{wide?: boolean}>`
+  @media (min-width: ${theme.breakpoints[2]}) {
+    max-width: ${p => (p.wide ? '620px !important' : null)};
+  }
+`;
+
+KeyValueList.displayName = 'KeyValueList';
+
+export default KeyValueList;
diff --git a/src/sentry/static/sentry/app/components/events/interfaces/message.jsx b/src/sentry/static/sentry/app/components/events/interfaces/message.jsx
index d3e66425e4..8d5fd46771 100644
--- a/src/sentry/static/sentry/app/components/events/interfaces/message.jsx
+++ b/src/sentry/static/sentry/app/components/events/interfaces/message.jsx
@@ -1,7 +1,7 @@
 import PropTypes from 'prop-types';
 import React from 'react';
 
-import KeyValueList from 'app/components/events/interfaces/keyValueList';
+import KeyValueList from 'app/components/events/interfaces/keyValueList/keyValueList';
 import Annotated from 'app/components/events/meta/annotated';
 import EventDataSection from 'app/components/events/eventDataSection';
 import SentryTypes from 'app/sentryTypes';
diff --git a/src/sentry/static/sentry/app/components/events/interfaces/richHttpContent.jsx b/src/sentry/static/sentry/app/components/events/interfaces/richHttpContent.jsx
index 13ee47e1d2..a3447f8e22 100644
--- a/src/sentry/static/sentry/app/components/events/interfaces/richHttpContent.jsx
+++ b/src/sentry/static/sentry/app/components/events/interfaces/richHttpContent.jsx
@@ -7,7 +7,7 @@ import {t} from 'app/locale';
 import ClippedBox from 'app/components/clippedBox';
 import ContextData from 'app/components/contextData';
 import ErrorBoundary from 'app/components/errorBoundary';
-import KeyValueList from 'app/components/events/interfaces/keyValueList';
+import KeyValueList from 'app/components/events/interfaces/keyValueList/keyValueList';
 import AnnotatedText from 'app/components/events/meta/annotatedText';
 import MetaData from 'app/components/events/meta/metaData';
 
diff --git a/src/sentry/static/sentry/app/components/events/packageData.tsx b/src/sentry/static/sentry/app/components/events/packageData.tsx
index 11fd5620b9..36421802d4 100644
--- a/src/sentry/static/sentry/app/components/events/packageData.tsx
+++ b/src/sentry/static/sentry/app/components/events/packageData.tsx
@@ -5,7 +5,7 @@ import {t} from 'app/locale';
 import ClippedBox from 'app/components/clippedBox';
 import ErrorBoundary from 'app/components/errorBoundary';
 import EventDataSection from 'app/components/events/eventDataSection';
-import KeyValueList from 'app/components/events/interfaces/keyValueList';
+import KeyValueList from 'app/components/events/interfaces/keyValueList/keyValueList';
 import SentryTypes from 'app/sentryTypes';
 
 type Props = {
diff --git a/src/sentry/static/sentry/app/views/eventsV2/eventDetails/eventInterfaces.tsx b/src/sentry/static/sentry/app/views/eventsV2/eventDetails/eventInterfaces.tsx
index ced41b81d4..56dc94f54e 100644
--- a/src/sentry/static/sentry/app/views/eventsV2/eventDetails/eventInterfaces.tsx
+++ b/src/sentry/static/sentry/app/views/eventsV2/eventDetails/eventInterfaces.tsx
@@ -9,7 +9,7 @@ import ErrorBoundary from 'app/components/errorBoundary';
 import EventContexts from 'app/components/events/contexts';
 import EventDataSection from 'app/components/events/eventDataSection';
 import EventDevice from 'app/components/events/device';
-import EventExtraData from 'app/components/events/extraData';
+import EventExtraData from 'app/components/events/eventExtraData/eventExtraData';
 import EventPackageData from 'app/components/events/packageData';
 import NavTabs from 'app/components/navTabs';
 import {objectIsEmpty, toTitleCase} from 'app/utils';
diff --git a/tests/js/spec/components/__snapshots__/toggleRawEventData.spec.jsx.snap b/tests/js/spec/components/__snapshots__/toggleRawEventData.spec.jsx.snap
index 4b057f1dff..2c88032f85 100644
--- a/tests/js/spec/components/__snapshots__/toggleRawEventData.spec.jsx.snap
+++ b/tests/js/spec/components/__snapshots__/toggleRawEventData.spec.jsx.snap
@@ -103,6 +103,7 @@ exports[`KeyValueList renders formatted 1`] = `
       >
         <ContextData
           data={0}
+          withAnnotatedText={false}
         />
       </td>
     </tr>
@@ -120,6 +121,7 @@ exports[`KeyValueList renders formatted 1`] = `
       >
         <ContextData
           data="here"
+          withAnnotatedText={false}
         />
       </td>
     </tr>
@@ -141,6 +143,7 @@ exports[`KeyValueList renders formatted 1`] = `
               "andsomeotherstuff": "here",
             }
           }
+          withAnnotatedText={false}
         />
       </td>
     </tr>
@@ -167,6 +170,7 @@ exports[`KeyValueList renders raw 1`] = `
       >
         <ContextData
           data="0"
+          withAnnotatedText={false}
         />
       </td>
     </tr>
@@ -184,6 +188,7 @@ exports[`KeyValueList renders raw 1`] = `
       >
         <ContextData
           data="\\"here\\""
+          withAnnotatedText={false}
         />
       </td>
     </tr>
@@ -201,6 +206,7 @@ exports[`KeyValueList renders raw 1`] = `
       >
         <ContextData
           data="{\\"andsomeotherstuff\\":\\"here\\"}"
+          withAnnotatedText={false}
         />
       </td>
     </tr>
diff --git a/tests/js/spec/components/events/interfaces/keyValueList.spec.jsx b/tests/js/spec/components/events/interfaces/keyValueList.spec.jsx
index c56f957063..4ceb09b3a8 100644
--- a/tests/js/spec/components/events/interfaces/keyValueList.spec.jsx
+++ b/tests/js/spec/components/events/interfaces/keyValueList.spec.jsx
@@ -1,7 +1,7 @@
 import React from 'react';
 import {mount} from 'sentry-test/enzyme';
 
-import KeyValueList from 'app/components/events/interfaces/keyValueList';
+import KeyValueList from 'app/components/events/interfaces/keyValueList/keyValueList';
 
 describe('KeyValueList', function() {
   describe('render', function() {
diff --git a/tests/js/spec/components/toggleRawEventData.spec.jsx b/tests/js/spec/components/toggleRawEventData.spec.jsx
index 8c8dc23d6c..db9dacf78f 100644
--- a/tests/js/spec/components/toggleRawEventData.spec.jsx
+++ b/tests/js/spec/components/toggleRawEventData.spec.jsx
@@ -1,7 +1,7 @@
 import React from 'react';
 import {shallow} from 'sentry-test/enzyme';
 import EventDataSection from 'app/components/events/eventDataSection';
-import KeyValueList from 'app/components/events/interfaces/keyValueList';
+import KeyValueList from 'app/components/events/interfaces/keyValueList/keyValueList';
 
 const data = {
   metadata: {
