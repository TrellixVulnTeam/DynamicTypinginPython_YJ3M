commit 4aede42d5979c634af95e07c5d6ea189413f7b22
Author: David Cramer <dcramer@gmail.com>
Date:   Mon Jan 2 12:58:22 2012 -0800

    Added 'sentry init' command to build configuration

diff --git a/sentry/scripts/runner.py b/sentry/scripts/runner.py
index 2a0721300b..b8ce4b0390 100644
--- a/sentry/scripts/runner.py
+++ b/sentry/scripts/runner.py
@@ -19,11 +19,13 @@ from optparse import OptionParser
 from sentry import VERSION, environment, commands
 
 
-ALL_COMMANDS = ('start', 'stop', 'restart', 'cleanup', 'upgrade', 'manage')
+ALL_COMMANDS = ('start', 'stop', 'restart', 'cleanup', 'upgrade', 'manage', 'init')
 
 KEY_LENGTH = 40
 
-SETTINGS_TEMPLATE = """
+DEFAULT_CONFIG_PATH = os.path.expanduser(os.path.join('~', '.sentry', 'sentry.conf.py'))
+
+CONFIG_TEMPLATE = """
 import os.path
 
 from sentry.conf.server import *
@@ -65,7 +67,7 @@ def copy_default_settings(filepath):
     with open(filepath, 'w') as fp:
         key = base64.b64encode(os.urandom(KEY_LENGTH))
 
-        output = SETTINGS_TEMPLATE % dict(default_key=key)
+        output = CONFIG_TEMPLATE % dict(default_key=key)
         fp.write(output)
 
 
@@ -106,32 +108,49 @@ def main():
             print "  ", cmd
         sys.exit(1)
 
+    parser = OptionParser(version="%%prog %s" % VERSION)
+    if args[1] == 'init':
+        (options, args) = parser.parse_args()
+
+        config_path = ' '.join(args[1:]) or DEFAULT_CONFIG_PATH
+
+        if os.path.exists(config_path):
+            resp = None
+            while resp not in ('Y', 'n'):
+                resp = raw_input('File already exists at %r, overwrite? [nY] ' % config_path)
+                if resp == 'n':
+                    print "Aborted!"
+                    return
+
+        try:
+            copy_default_settings(config_path)
+        except OSError, e:
+            raise e.__class__, 'Unable to write default settings file to %r' % config_path
+
+        print "Configuration file created at %r" % config_path
+
+        return
+
+    parser.add_option('--config', metavar='CONFIG', default=DEFAULT_CONFIG_PATH)
+
     command = getattr(commands, args[1])
 
-    parser = OptionParser(version="%%prog %s" % VERSION)
-    parser.add_option('--config', metavar='CONFIG')
     for option in getattr(command, 'options', []):
         parser.add_option(option)
 
     (options, args) = parser.parse_args()
 
-    # parse our options and load them before anything else
-    if options.config:
-        # assumed to be a file
-        config_path = options.config
-    else:
-        config_path = os.path.expanduser(os.path.join('~', '.sentry', 'sentry.conf.py'))
+    config_path = options.config
 
+    # We hardcode skipping this check via init
     if not os.path.exists(config_path):
-        try:
-            copy_default_settings(config_path)
-        except OSError, e:
-            raise e.__class__, 'Unable to write default settings file to %r' % config_path
+        raise ValueError("Configuration file does not exist. Use 'init' to initialize the file.")
 
     environment['config'] = config_path
     environment['start_date'] = datetime.datetime.now()
 
-    settings_from_file(config_path)
+    if args[1] != 'init':
+        settings_from_file(config_path)
 
     # set debug
     if getattr(options, 'debug', False):
