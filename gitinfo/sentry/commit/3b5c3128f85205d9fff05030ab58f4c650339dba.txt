commit 3b5c3128f85205d9fff05030ab58f4c650339dba
Author: josh <josh@jrl.ninja>
Date:   Wed Oct 16 16:25:22 2019 -0700

    Revert "py3(django): defer more model imports until after Django setup (part 2, take 2) (#15094)" (#15127)
    
    This reverts commit 86a3b5d793212bebd645b5cf5d78a8344f58f499.

diff --git a/src/sentry/api/endpoints/group_details.py b/src/sentry/api/endpoints/group_details.py
index 81bfab86c4..9c6f123ed4 100644
--- a/src/sentry/api/endpoints/group_details.py
+++ b/src/sentry/api/endpoints/group_details.py
@@ -29,8 +29,7 @@ from sentry.models import (
     User,
     UserReport,
 )
-from sentry.plugins.base import plugins
-from sentry.plugins.bases import IssueTrackingPlugin2
+from sentry.plugins import IssueTrackingPlugin2, plugins
 from sentry.signals import issue_deleted
 from sentry.utils.safe import safe_execute
 from sentry.utils.apidocs import scenario, attach_scenarios
diff --git a/src/sentry/api/endpoints/internal_packages.py b/src/sentry/api/endpoints/internal_packages.py
index 4a9472eab3..819c2021a8 100644
--- a/src/sentry/api/endpoints/internal_packages.py
+++ b/src/sentry/api/endpoints/internal_packages.py
@@ -5,7 +5,7 @@ import pkg_resources
 from rest_framework.response import Response
 
 from sentry.api.base import Endpoint
-from sentry.plugins.base import plugins
+from sentry.plugins import plugins
 from sentry.api.permissions import SuperuserPermission
 
 
diff --git a/src/sentry/api/endpoints/organization_config_repositories.py b/src/sentry/api/endpoints/organization_config_repositories.py
index 1f191901a8..c9caa624e7 100644
--- a/src/sentry/api/endpoints/organization_config_repositories.py
+++ b/src/sentry/api/endpoints/organization_config_repositories.py
@@ -3,7 +3,7 @@ from __future__ import absolute_import
 from rest_framework.response import Response
 
 from sentry.api.bases.organization import OrganizationEndpoint
-from sentry.plugins.base import bindings
+from sentry.plugins import bindings
 
 
 class OrganizationConfigRepositoriesEndpoint(OrganizationEndpoint):
diff --git a/src/sentry/api/endpoints/organization_plugins.py b/src/sentry/api/endpoints/organization_plugins.py
index 02a0cbaab9..fa2052e568 100644
--- a/src/sentry/api/endpoints/organization_plugins.py
+++ b/src/sentry/api/endpoints/organization_plugins.py
@@ -2,7 +2,7 @@ from __future__ import absolute_import
 
 from rest_framework.response import Response
 
-from sentry.plugins.base import plugins
+from sentry.plugins import plugins
 from sentry.api.bases.organization import OrganizationEndpoint
 from sentry.api.serializers import serialize
 from sentry.api.serializers.models.organization_plugin import OrganizationPluginSerializer
diff --git a/src/sentry/api/endpoints/organization_repositories.py b/src/sentry/api/endpoints/organization_repositories.py
index c40f34b2a6..dae2726bd3 100644
--- a/src/sentry/api/endpoints/organization_repositories.py
+++ b/src/sentry/api/endpoints/organization_repositories.py
@@ -8,7 +8,7 @@ from sentry.api.paginator import OffsetPaginator
 from sentry.api.serializers import serialize
 from sentry.constants import ObjectStatus
 from sentry.models import Integration, Repository
-from sentry.plugins.base import bindings
+from sentry.plugins import bindings
 from sentry.utils.sdk import capture_exception
 
 
diff --git a/src/sentry/api/endpoints/project_plugin_details.py b/src/sentry/api/endpoints/project_plugin_details.py
index c2be95e784..c1b83a480b 100644
--- a/src/sentry/api/endpoints/project_plugin_details.py
+++ b/src/sentry/api/endpoints/project_plugin_details.py
@@ -10,7 +10,7 @@ from rest_framework.response import Response
 from requests.exceptions import HTTPError
 
 from sentry.exceptions import InvalidIdentity, PluginError, PluginIdentityRequired
-from sentry.plugins.base import plugins
+from sentry.plugins import plugins
 from sentry.api.bases.project import ProjectEndpoint
 from sentry.api.exceptions import ResourceDoesNotExist
 from sentry.api.serializers import serialize
diff --git a/src/sentry/api/endpoints/project_plugins.py b/src/sentry/api/endpoints/project_plugins.py
index c516c37993..22e79992a2 100644
--- a/src/sentry/api/endpoints/project_plugins.py
+++ b/src/sentry/api/endpoints/project_plugins.py
@@ -2,7 +2,7 @@ from __future__ import absolute_import
 
 from rest_framework.response import Response
 
-from sentry.plugins.base import plugins
+from sentry.plugins import plugins
 from sentry.api.bases.project import ProjectEndpoint
 from sentry.api.serializers import serialize
 from sentry.api.serializers.models.plugin import PluginSerializer
diff --git a/src/sentry/api/serializers/models/group.py b/src/sentry/api/serializers/models/group.py
index 7c282c3bd1..1ea54a9348 100644
--- a/src/sentry/api/serializers/models/group.py
+++ b/src/sentry/api/serializers/models/group.py
@@ -142,7 +142,7 @@ class GroupSerializerBase(Serializer):
         return results
 
     def get_attrs(self, item_list, user):
-        from sentry.plugins.base import plugins
+        from sentry.plugins import plugins
 
         GroupMeta.objects.populate_cache(item_list)
 
diff --git a/src/sentry/api/serializers/models/project.py b/src/sentry/api/serializers/models/project.py
index b185dc8988..3fee9390cb 100644
--- a/src/sentry/api/serializers/models/project.py
+++ b/src/sentry/api/serializers/models/project.py
@@ -505,7 +505,7 @@ class DetailedProjectSerializer(ProjectWithTeamSerializer):
         return attrs
 
     def serialize(self, obj, attrs, user):
-        from sentry.plugins.base import plugins
+        from sentry.plugins import plugins
 
         def get_value_with_default(key):
             value = attrs["options"].get(key)
diff --git a/src/sentry/api/serializers/models/pullrequest.py b/src/sentry/api/serializers/models/pullrequest.py
index 7fb59c8f87..48558823f5 100644
--- a/src/sentry/api/serializers/models/pullrequest.py
+++ b/src/sentry/api/serializers/models/pullrequest.py
@@ -44,7 +44,7 @@ class PullRequestSerializer(Serializer):
         return result
 
     def _external_url(self, repository, pull):
-        from sentry.plugins.base import bindings
+        from sentry.plugins import bindings
 
         provider_id = repository.provider
         if not provider_id or not provider_id.startswith("integrations:"):
diff --git a/src/sentry/conf/server.py b/src/sentry/conf/server.py
index 76f40cebfc..f92d1804eb 100644
--- a/src/sentry/conf/server.py
+++ b/src/sentry/conf/server.py
@@ -324,11 +324,11 @@ INSTALLED_APPS = (
     "sentry.lang.java.apps.Config",
     "sentry.lang.javascript.apps.Config",
     "sentry.lang.native.apps.Config",
-    "sentry.plugins.sentry_interface_types.apps.Config",
-    "sentry.plugins.sentry_mail.apps.Config",
-    "sentry.plugins.sentry_urls.apps.Config",
-    "sentry.plugins.sentry_useragents.apps.Config",
-    "sentry.plugins.sentry_webhooks.apps.Config",
+    "sentry.plugins.sentry_interface_types",
+    "sentry.plugins.sentry_mail",
+    "sentry.plugins.sentry_urls",
+    "sentry.plugins.sentry_useragents",
+    "sentry.plugins.sentry_webhooks",
     "social_auth",
     "sudo",
     "sentry.eventstream",
diff --git a/src/sentry/event_manager.py b/src/sentry/event_manager.py
index b53adc901b..b07194c8ee 100644
--- a/src/sentry/event_manager.py
+++ b/src/sentry/event_manager.py
@@ -65,7 +65,7 @@ from sentry.models import (
     UserReport,
     Organization,
 )
-from sentry.plugins.base import plugins
+from sentry.plugins import plugins
 from sentry.signals import event_discarded, event_saved, first_event_received
 from sentry.tasks.integrations import kick_off_status_syncs
 from sentry.utils import metrics
diff --git a/src/sentry/features/manager.py b/src/sentry/features/manager.py
index 18775cdf39..c1cfbf8c9d 100644
--- a/src/sentry/features/manager.py
+++ b/src/sentry/features/manager.py
@@ -4,7 +4,7 @@ __all__ = ["FeatureManager"]
 
 from django.conf import settings
 
-from sentry.plugins.base import plugins
+from sentry.plugins import plugins
 from sentry.utils.safe import safe_execute
 
 from .base import Feature
diff --git a/src/sentry/integrations/bitbucket/integration.py b/src/sentry/integrations/bitbucket/integration.py
index 0917d1b4b5..55669d62e5 100644
--- a/src/sentry/integrations/bitbucket/integration.py
+++ b/src/sentry/integrations/bitbucket/integration.py
@@ -186,7 +186,7 @@ class BitbucketIntegrationProvider(IntegrationProvider):
             }
 
     def setup(self):
-        from sentry.plugins.base import bindings
+        from sentry.plugins import bindings
 
         bindings.add(
             "integration-repository.provider",
diff --git a/src/sentry/integrations/github/integration.py b/src/sentry/integrations/github/integration.py
index e9ef9dc16d..c66fab692e 100644
--- a/src/sentry/integrations/github/integration.py
+++ b/src/sentry/integrations/github/integration.py
@@ -218,7 +218,7 @@ class GitHubIntegrationProvider(IntegrationProvider):
         return integration
 
     def setup(self):
-        from sentry.plugins.base import bindings
+        from sentry.plugins import bindings
 
         bindings.add(
             "integration-repository.provider", GitHubRepositoryProvider, id="integrations:github"
diff --git a/src/sentry/integrations/github_enterprise/integration.py b/src/sentry/integrations/github_enterprise/integration.py
index e189be8dbb..0183547249 100644
--- a/src/sentry/integrations/github_enterprise/integration.py
+++ b/src/sentry/integrations/github_enterprise/integration.py
@@ -372,7 +372,7 @@ class GitHubEnterpriseIntegrationProvider(GitHubIntegrationProvider):
         return integration
 
     def setup(self):
-        from sentry.plugins.base import bindings
+        from sentry.plugins import bindings
 
         bindings.add(
             "integration-repository.provider",
diff --git a/src/sentry/integrations/gitlab/integration.py b/src/sentry/integrations/gitlab/integration.py
index 2c0ec4ccef..0466c34ca4 100644
--- a/src/sentry/integrations/gitlab/integration.py
+++ b/src/sentry/integrations/gitlab/integration.py
@@ -325,7 +325,7 @@ class GitlabIntegrationProvider(IntegrationProvider):
         return integration
 
     def setup(self):
-        from sentry.plugins.base import bindings
+        from sentry.plugins import bindings
 
         bindings.add(
             "integration-repository.provider", GitlabRepositoryProvider, id="integrations:gitlab"
diff --git a/src/sentry/integrations/vsts/integration.py b/src/sentry/integrations/vsts/integration.py
index f1b26ec2f4..e637b01eff 100644
--- a/src/sentry/integrations/vsts/integration.py
+++ b/src/sentry/integrations/vsts/integration.py
@@ -437,7 +437,7 @@ class VstsIntegrationProvider(IntegrationProvider):
         return None
 
     def setup(self):
-        from sentry.plugins.base import bindings
+        from sentry.plugins import bindings
 
         bindings.add(
             "integration-repository.provider", VstsRepositoryProvider, id="integrations:vsts"
diff --git a/src/sentry/lang/java/apps.py b/src/sentry/lang/java/apps.py
index 2180d4c886..357c57d873 100644
--- a/src/sentry/lang/java/apps.py
+++ b/src/sentry/lang/java/apps.py
@@ -8,6 +8,6 @@ class Config(AppConfig):
 
     def ready(self):
         from .plugin import JavaPlugin
-        from sentry.plugins.base import register
+        from sentry.plugins import register
 
         register(JavaPlugin)
diff --git a/src/sentry/lang/java/plugin.py b/src/sentry/lang/java/plugin.py
index 8cd998d61e..f6fd40978b 100644
--- a/src/sentry/lang/java/plugin.py
+++ b/src/sentry/lang/java/plugin.py
@@ -3,7 +3,7 @@ from __future__ import absolute_import
 import six
 
 from symbolic import ProguardMappingView
-from sentry.plugins.base.v2 import Plugin2
+from sentry.plugins import Plugin2
 from sentry.stacktraces.processing import StacktraceProcessor
 from sentry.models import ProjectDebugFile, EventError
 from sentry.reprocessing import report_processing_issue
diff --git a/src/sentry/lang/javascript/apps.py b/src/sentry/lang/javascript/apps.py
index 41aead9982..42844708b3 100644
--- a/src/sentry/lang/javascript/apps.py
+++ b/src/sentry/lang/javascript/apps.py
@@ -8,6 +8,6 @@ class Config(AppConfig):
 
     def ready(self):
         from .plugin import JavascriptPlugin
-        from sentry.plugins.base import register
+        from sentry.plugins import register
 
         register(JavascriptPlugin)
diff --git a/src/sentry/lang/javascript/plugin.py b/src/sentry/lang/javascript/plugin.py
index 3fb67816a5..d73cd841ca 100644
--- a/src/sentry/lang/javascript/plugin.py
+++ b/src/sentry/lang/javascript/plugin.py
@@ -1,6 +1,6 @@
 from __future__ import absolute_import, print_function
 
-from sentry.plugins.base.v2 import Plugin2
+from sentry.plugins import Plugin2
 from sentry.stacktraces.processing import find_stacktraces_in_data
 from sentry.utils.safe import get_path
 
diff --git a/src/sentry/lang/native/apps.py b/src/sentry/lang/native/apps.py
index 8d2cc7aa2f..be044cd018 100644
--- a/src/sentry/lang/native/apps.py
+++ b/src/sentry/lang/native/apps.py
@@ -8,6 +8,6 @@ class Config(AppConfig):
 
     def ready(self):
         from .plugin import NativePlugin
-        from sentry.plugins.base import register
+        from sentry.plugins import register
 
         register(NativePlugin)
diff --git a/src/sentry/lang/native/plugin.py b/src/sentry/lang/native/plugin.py
index f9422b8b75..a5420a11a0 100644
--- a/src/sentry/lang/native/plugin.py
+++ b/src/sentry/lang/native/plugin.py
@@ -5,7 +5,7 @@ from sentry.lang.native.processing import process_applecrashreport, \
 from sentry.lang.native.minidump import is_minidump_event
 from sentry.lang.native.utils import is_native_event
 from sentry.lang.native.unreal import is_applecrashreport_event
-from sentry.plugins.base.v2 import Plugin2
+from sentry.plugins import Plugin2
 
 
 class NativePlugin(Plugin2):
diff --git a/src/sentry/management/commands/check_notifications.py b/src/sentry/management/commands/check_notifications.py
index 03e0e1b0a4..7b686a61a8 100644
--- a/src/sentry/management/commands/check_notifications.py
+++ b/src/sentry/management/commands/check_notifications.py
@@ -6,7 +6,7 @@ from sentry.models import User
 
 
 def find_mail_plugin():
-    from sentry.plugins.base import plugins
+    from sentry.plugins import plugins
 
     for plugin in plugins.all():
         if type(plugin).__name__.endswith("MailPlugin"):
diff --git a/src/sentry/mediators/plugins/migrator.py b/src/sentry/mediators/plugins/migrator.py
index e8a3bdea3b..93c22c7467 100644
--- a/src/sentry/mediators/plugins/migrator.py
+++ b/src/sentry/mediators/plugins/migrator.py
@@ -2,7 +2,7 @@ from __future__ import absolute_import
 
 from sentry.mediators import Mediator, Param
 from sentry.models import Repository
-from sentry.plugins.base import plugins
+from sentry.plugins import plugins
 from sentry.utils.cache import memoize
 
 
diff --git a/src/sentry/models/repository.py b/src/sentry/models/repository.py
index 990331493b..9191c308dd 100644
--- a/src/sentry/models/repository.py
+++ b/src/sentry/models/repository.py
@@ -41,7 +41,7 @@ class Repository(Model, PendingDeletionMixin):
         return self.provider and self.provider.startswith("integrations:")
 
     def get_provider(self):
-        from sentry.plugins.base import bindings
+        from sentry.plugins import bindings
 
         if self.has_integration_provider():
             provider_cls = bindings.get("integration-repository.provider").get(self.provider)
diff --git a/src/sentry/plugins/__init__.py b/src/sentry/plugins/__init__.py
index 2e8b259c8c..d5f34998a4 100644
--- a/src/sentry/plugins/__init__.py
+++ b/src/sentry/plugins/__init__.py
@@ -1,3 +1,7 @@
 from __future__ import absolute_import
 
 HIDDEN_PLUGINS = ("bitbucket", "gitlab", "github", "slack", "vsts", "jira", "jira_ac")
+
+from sentry.plugins.base import *  # NOQA
+from sentry.plugins.bases import *  # NOQA
+from sentry.plugins.interfaces import *  # NOQA
diff --git a/src/sentry/plugins/base/group_api_urls.py b/src/sentry/plugins/base/group_api_urls.py
index 282039368a..9ca5615ad3 100644
--- a/src/sentry/plugins/base/group_api_urls.py
+++ b/src/sentry/plugins/base/group_api_urls.py
@@ -6,7 +6,7 @@ import re
 from django.core.urlresolvers import RegexURLResolver, RegexURLPattern
 from django.conf.urls import patterns, include, url
 
-from sentry.plugins.base import plugins
+from sentry.plugins import plugins
 
 logger = logging.getLogger("sentry.plugins")
 
diff --git a/src/sentry/plugins/base/project_api_urls.py b/src/sentry/plugins/base/project_api_urls.py
index 1a483cbb7f..b87eac3192 100644
--- a/src/sentry/plugins/base/project_api_urls.py
+++ b/src/sentry/plugins/base/project_api_urls.py
@@ -6,7 +6,7 @@ import re
 from django.core.urlresolvers import RegexURLResolver, RegexURLPattern
 from django.conf.urls import patterns, include, url
 
-from sentry.plugins.base import plugins
+from sentry.plugins import plugins
 
 logger = logging.getLogger("sentry.plugins")
 
diff --git a/src/sentry/plugins/base/urls.py b/src/sentry/plugins/base/urls.py
index ae64f21214..2a96fb68d6 100644
--- a/src/sentry/plugins/base/urls.py
+++ b/src/sentry/plugins/base/urls.py
@@ -4,7 +4,7 @@ import re
 
 from django.conf.urls import patterns, include, url
 
-from sentry.plugins.base import plugins
+from sentry.plugins import plugins
 
 urlpatterns = patterns("")
 
diff --git a/src/sentry/plugins/base/v2.py b/src/sentry/plugins/base/v2.py
index 398ea4ad49..1c8ce6d17f 100644
--- a/src/sentry/plugins/base/v2.py
+++ b/src/sentry/plugins/base/v2.py
@@ -38,7 +38,7 @@ class IPlugin2(local, PluginConfigMixin, PluginStatusMixin):
     control when or how the plugin gets instantiated, nor is it guaranteed that
     it will happen, or happen more than once.
 
-    >>> from sentry.plugins.base.v2 import Plugin2
+    >>> from sentry.plugins import Plugin2
     >>>
     >>> class MyPlugin(Plugin2):
     >>>     def get_title(self):
@@ -437,7 +437,7 @@ class IPlugin2(local, PluginConfigMixin, PluginStatusMixin):
         """
         Return an implementation of ``ReleaseHook``.
 
-        >>> from sentry.plugins.interfaces.releasehook import ReleaseHook
+        >>> from sentry.plugins import ReleaseHook
         >>>
         >>> class MyReleaseHook(ReleaseHook):
         >>>     def handle(self, request):
diff --git a/src/sentry/plugins/bases/issue.py b/src/sentry/plugins/bases/issue.py
index 85de6ec754..2d23795f96 100644
--- a/src/sentry/plugins/bases/issue.py
+++ b/src/sentry/plugins/bases/issue.py
@@ -8,7 +8,7 @@ from django.utils.html import format_html
 from social_auth.models import UserSocialAuth
 
 from sentry.models import Activity, Event, GroupMeta
-from sentry.plugins.base.v1 import Plugin
+from sentry.plugins import Plugin
 from sentry.signals import issue_tracker_used
 from sentry.utils.auth import get_auth_providers
 from sentry.utils.http import absolute_uri
diff --git a/src/sentry/plugins/bases/issue2.py b/src/sentry/plugins/bases/issue2.py
index ca92da349e..30fa88bd1c 100644
--- a/src/sentry/plugins/bases/issue2.py
+++ b/src/sentry/plugins/bases/issue2.py
@@ -15,7 +15,7 @@ from sentry.api.serializers.models.plugin import PluginSerializer
 # api compat
 from sentry.exceptions import PluginError  # NOQA
 from sentry.models import Activity, Event, GroupMeta
-from sentry.plugins.base.v1 import Plugin
+from sentry.plugins import Plugin
 from sentry.plugins.base.configuration import react_plugin_config
 from sentry.plugins.endpoints import PluginGroupEndpoint
 from sentry.signals import issue_tracker_used
diff --git a/src/sentry/plugins/bases/notify.py b/src/sentry/plugins/bases/notify.py
index 5737638cdc..01e3145f35 100644
--- a/src/sentry/plugins/bases/notify.py
+++ b/src/sentry/plugins/bases/notify.py
@@ -13,7 +13,7 @@ from sentry.digests import get_option_key as get_digest_option_key
 from sentry.digests.notifications import event_to_record, unsplit_key
 from sentry.exceptions import PluginError
 from sentry.integrations.exceptions import ApiError
-from sentry.plugins.base import Notification, Plugin
+from sentry.plugins import Notification, Plugin
 from sentry.plugins.base.configuration import react_plugin_config
 from sentry.models import ProjectOption
 from sentry.tasks.digests import deliver_digest
diff --git a/src/sentry/plugins/bases/releasetracking.py b/src/sentry/plugins/bases/releasetracking.py
index cd4455935f..610e001328 100644
--- a/src/sentry/plugins/bases/releasetracking.py
+++ b/src/sentry/plugins/bases/releasetracking.py
@@ -1,6 +1,6 @@
 from __future__ import absolute_import
 
-from sentry.plugins.base.v2 import Plugin2
+from sentry.plugins import Plugin2
 
 
 class ReleaseTrackingPlugin(Plugin2):
diff --git a/src/sentry/plugins/bases/tag.py b/src/sentry/plugins/bases/tag.py
index df935be438..ebb7784523 100644
--- a/src/sentry/plugins/bases/tag.py
+++ b/src/sentry/plugins/bases/tag.py
@@ -1,7 +1,7 @@
 from __future__ import absolute_import
 
 from sentry.constants import MAX_TAG_VALUE_LENGTH
-from sentry.plugins.base.v2 import Plugin2
+from sentry.plugins import Plugin2
 
 
 class TagPlugin(Plugin2):
diff --git a/src/sentry/plugins/sentry_interface_types/apps.py b/src/sentry/plugins/sentry_interface_types/apps.py
deleted file mode 100644
index ae3a779f4d..0000000000
--- a/src/sentry/plugins/sentry_interface_types/apps.py
+++ /dev/null
@@ -1,13 +0,0 @@
-from __future__ import absolute_import
-
-from django.apps import AppConfig
-
-
-class Config(AppConfig):
-    name = "sentry.plugins.sentry_interface_types"
-
-    def ready(self):
-        from .models import InterfaceTypePlugin
-        from sentry.plugins.base import register
-
-        register(InterfaceTypePlugin)
diff --git a/src/sentry/plugins/sentry_interface_types/models.py b/src/sentry/plugins/sentry_interface_types/models.py
index 2d2d8e7f75..3b388afb3f 100644
--- a/src/sentry/plugins/sentry_interface_types/models.py
+++ b/src/sentry/plugins/sentry_interface_types/models.py
@@ -4,6 +4,7 @@ import six
 
 import sentry
 
+from sentry.plugins import register
 from sentry.plugins.bases.tag import TagPlugin
 
 
@@ -24,3 +25,6 @@ class InterfaceTypePlugin(TagPlugin):
 
     def get_tag_values(self, event):
         return [i.rsplit(".", 1)[-1] for i in six.iterkeys(event.interfaces)]
+
+
+register(InterfaceTypePlugin)
diff --git a/src/sentry/plugins/sentry_mail/apps.py b/src/sentry/plugins/sentry_mail/apps.py
deleted file mode 100644
index 3947433e09..0000000000
--- a/src/sentry/plugins/sentry_mail/apps.py
+++ /dev/null
@@ -1,13 +0,0 @@
-from __future__ import absolute_import
-
-from django.apps import AppConfig
-
-
-class Config(AppConfig):
-    name = "sentry.plugins.sentry_mail"
-
-    def ready(self):
-        from .models import MailPlugin
-        from sentry.plugins.base import register
-
-        register(MailPlugin)
diff --git a/src/sentry/plugins/sentry_mail/models.py b/src/sentry/plugins/sentry_mail/models.py
index 54c3842ede..f97eb6a38a 100644
--- a/src/sentry/plugins/sentry_mail/models.py
+++ b/src/sentry/plugins/sentry_mail/models.py
@@ -15,6 +15,7 @@ from sentry import options
 from sentry.models import ProjectOwnership, User
 
 from sentry.digests.utilities import get_digest_metadata, get_personalized_digests
+from sentry.plugins import register
 from sentry.plugins.base.structs import Notification
 from sentry.plugins.bases.notify import NotificationPlugin
 from sentry.utils import metrics
@@ -421,3 +422,5 @@ class MailPlugin(NotificationPlugin):
 
 # Legacy compatibility
 MailProcessor = MailPlugin
+
+register(MailPlugin)
diff --git a/src/sentry/plugins/sentry_urls/apps.py b/src/sentry/plugins/sentry_urls/apps.py
deleted file mode 100644
index f7968c9b52..0000000000
--- a/src/sentry/plugins/sentry_urls/apps.py
+++ /dev/null
@@ -1,13 +0,0 @@
-from __future__ import absolute_import
-
-from django.apps import AppConfig
-
-
-class Config(AppConfig):
-    name = "sentry.plugins.sentry_urls"
-
-    def ready(self):
-        from .models import UrlsPlugin
-        from sentry.plugins.base import register
-
-        register(UrlsPlugin)
diff --git a/src/sentry/plugins/sentry_urls/models.py b/src/sentry/plugins/sentry_urls/models.py
index e355e839db..558bbe24c4 100644
--- a/src/sentry/plugins/sentry_urls/models.py
+++ b/src/sentry/plugins/sentry_urls/models.py
@@ -2,6 +2,7 @@ from __future__ import absolute_import
 
 import sentry
 
+from sentry.plugins import register
 from sentry.plugins.bases.tag import TagPlugin
 
 
@@ -26,3 +27,6 @@ class UrlsPlugin(TagPlugin):
         if not http.url:
             return []
         return [http.url]
+
+
+register(UrlsPlugin)
diff --git a/src/sentry/plugins/sentry_useragents/apps.py b/src/sentry/plugins/sentry_useragents/apps.py
deleted file mode 100644
index 3597d3d3e3..0000000000
--- a/src/sentry/plugins/sentry_useragents/apps.py
+++ /dev/null
@@ -1,15 +0,0 @@
-from __future__ import absolute_import
-
-from django.apps import AppConfig
-
-
-class Config(AppConfig):
-    name = "sentry.plugins.sentry_useragents"
-
-    def ready(self):
-        from .models import BrowserPlugin, OsPlugin, DevicePlugin
-        from sentry.plugins.base import register
-
-        register(BrowserPlugin)
-        register(OsPlugin)
-        register(DevicePlugin)
diff --git a/src/sentry/plugins/sentry_useragents/models.py b/src/sentry/plugins/sentry_useragents/models.py
index 813b97615e..ed3a816ef3 100644
--- a/src/sentry/plugins/sentry_useragents/models.py
+++ b/src/sentry/plugins/sentry_useragents/models.py
@@ -3,6 +3,7 @@ from __future__ import absolute_import
 from ua_parser.user_agent_parser import Parse
 
 import sentry
+from sentry.plugins import register
 from sentry.plugins.bases.tag import TagPlugin
 
 
@@ -66,6 +67,9 @@ class BrowserPlugin(UserAgentPlugin):
         return tag
 
 
+register(BrowserPlugin)
+
+
 class OsPlugin(UserAgentPlugin):
     """
     Automatically adds the 'os' tag from events containing interface data
@@ -90,6 +94,9 @@ class OsPlugin(UserAgentPlugin):
         return tag
 
 
+register(OsPlugin)
+
+
 class DevicePlugin(UserAgentPlugin):
     """
     Automatically adds the 'device' tag from events containing interface data
@@ -102,3 +109,6 @@ class DevicePlugin(UserAgentPlugin):
 
     def get_tag_from_ua(self, ua):
         return ua["device"]["family"]
+
+
+register(DevicePlugin)
diff --git a/src/sentry/plugins/sentry_webhooks/__init__.py b/src/sentry/plugins/sentry_webhooks/__init__.py
index c3961685ab..29af00498e 100644
--- a/src/sentry/plugins/sentry_webhooks/__init__.py
+++ b/src/sentry/plugins/sentry_webhooks/__init__.py
@@ -1 +1,7 @@
 from __future__ import absolute_import
+
+from sentry.plugins import register
+
+from .plugin import WebHooksPlugin
+
+register(WebHooksPlugin)
diff --git a/src/sentry/plugins/sentry_webhooks/apps.py b/src/sentry/plugins/sentry_webhooks/apps.py
deleted file mode 100644
index 2d7d11cdd8..0000000000
--- a/src/sentry/plugins/sentry_webhooks/apps.py
+++ /dev/null
@@ -1,13 +0,0 @@
-from __future__ import absolute_import
-
-from django.apps import AppConfig
-
-
-class Config(AppConfig):
-    name = "sentry.plugins.sentry_webhooks"
-
-    def ready(self):
-        from .plugin import WebHooksPlugin
-        from sentry.plugins.base import register
-
-        register(WebHooksPlugin)
diff --git a/src/sentry/plugins/utils.py b/src/sentry/plugins/utils.py
index 89a7296e83..455d3e4e25 100644
--- a/src/sentry/plugins/utils.py
+++ b/src/sentry/plugins/utils.py
@@ -1,6 +1,6 @@
 from __future__ import absolute_import
 
-from sentry.plugins.bases import IssueTrackingPlugin2
+from sentry.plugins import IssueTrackingPlugin2
 
 
 class TestIssuePlugin2(IssueTrackingPlugin2):
diff --git a/src/sentry/receivers/features.py b/src/sentry/receivers/features.py
index e63d53f548..e3031f7bc6 100644
--- a/src/sentry/receivers/features.py
+++ b/src/sentry/receivers/features.py
@@ -5,8 +5,7 @@ from django.db.models.signals import post_save
 from sentry import analytics
 from sentry.adoption import manager
 from sentry.models import FeatureAdoption, GroupTombstone, Organization
-from sentry.plugins.bases import IssueTrackingPlugin
-from sentry.plugins.bases import IssueTrackingPlugin2
+from sentry.plugins import IssueTrackingPlugin, IssueTrackingPlugin2
 from sentry.plugins.bases.notify import NotificationPlugin
 from sentry.receivers.rules import DEFAULT_RULE_LABEL, DEFAULT_RULE_DATA
 from sentry.signals import (
diff --git a/src/sentry/receivers/onboarding.py b/src/sentry/receivers/onboarding.py
index 94de50410b..20460427c1 100644
--- a/src/sentry/receivers/onboarding.py
+++ b/src/sentry/receivers/onboarding.py
@@ -12,9 +12,7 @@ from sentry.models import (
     OrganizationOption,
     Organization,
 )
-from sentry.plugins.bases import IssueTrackingPlugin
-from sentry.plugins.bases import IssueTrackingPlugin2
-from sentry.plugins.bases.notify import NotificationPlugin
+from sentry.plugins import IssueTrackingPlugin, IssueTrackingPlugin2, NotificationPlugin
 from sentry.signals import (
     event_processed,
     first_event_pending,
diff --git a/src/sentry/rules/__init__.py b/src/sentry/rules/__init__.py
index bb22662dee..8c9a510446 100644
--- a/src/sentry/rules/__init__.py
+++ b/src/sentry/rules/__init__.py
@@ -6,7 +6,7 @@ from .registry import RuleRegistry  # NOQA
 
 def init_registry():
     from sentry.constants import SENTRY_RULES
-    from sentry.plugins.base import plugins
+    from sentry.plugins import plugins
     from sentry.utils.imports import import_string
     from sentry.utils.safe import safe_execute
 
diff --git a/src/sentry/rules/actions/notify_event.py b/src/sentry/rules/actions/notify_event.py
index d5cc6ad266..094fcd5100 100644
--- a/src/sentry/rules/actions/notify_event.py
+++ b/src/sentry/rules/actions/notify_event.py
@@ -3,7 +3,7 @@ Used for notifying *all* enabled plugins
 """
 from __future__ import absolute_import
 
-from sentry.plugins.base import plugins
+from sentry.plugins import plugins
 from sentry.rules.actions.base import EventAction
 from sentry.rules.actions.services import LegacyPluginService
 from sentry.utils import metrics
diff --git a/src/sentry/rules/actions/notify_event_service.py b/src/sentry/rules/actions/notify_event_service.py
index 8f3e041c5b..6421d61310 100644
--- a/src/sentry/rules/actions/notify_event_service.py
+++ b/src/sentry/rules/actions/notify_event_service.py
@@ -5,7 +5,7 @@ from __future__ import absolute_import
 
 from django import forms
 
-from sentry.plugins.base import plugins
+from sentry.plugins import plugins
 from sentry.rules.actions.base import EventAction
 from sentry.rules.actions.services import PluginService, SentryAppService
 from sentry.models import SentryApp
diff --git a/src/sentry/runner/initializer.py b/src/sentry/runner/initializer.py
index 73f00e5989..b54287fbc1 100644
--- a/src/sentry/runner/initializer.py
+++ b/src/sentry/runner/initializer.py
@@ -13,7 +13,7 @@ from sentry.utils.warnings import DeprecatedSettingWarning
 
 def register_plugins(settings):
     from pkg_resources import iter_entry_points
-    from sentry.plugins.base import plugins
+    from sentry.plugins import plugins
 
     # entry_points={
     #    'sentry.plugins': [
@@ -60,7 +60,7 @@ def register_plugins(settings):
 
 
 def init_plugin(plugin):
-    from sentry.plugins.base import bindings
+    from sentry.plugins import bindings
 
     plugin.setup(bindings)
 
diff --git a/src/sentry/south_migrations/0238_fill_org_onboarding_tasks.py b/src/sentry/south_migrations/0238_fill_org_onboarding_tasks.py
index 8e7b26b4e1..82232676f8 100644
--- a/src/sentry/south_migrations/0238_fill_org_onboarding_tasks.py
+++ b/src/sentry/south_migrations/0238_fill_org_onboarding_tasks.py
@@ -4,9 +4,8 @@ from south.db import db
 from south.v2 import DataMigration
 from django.db import connection, models, IntegrityError, transaction
 
-from sentry.plugins.base import plugins
-from sentry.plugins.bases import IssueTrackingPlugin
-from sentry.plugins.bases.notify import NotificationPlugin
+from sentry.plugins import plugins
+from sentry.plugins import IssueTrackingPlugin, NotificationPlugin
 
 
 class Migration(DataMigration):
diff --git a/src/sentry/stacktraces/processing.py b/src/sentry/stacktraces/processing.py
index d9251b6f8e..05accbc45a 100644
--- a/src/sentry/stacktraces/processing.py
+++ b/src/sentry/stacktraces/processing.py
@@ -276,7 +276,7 @@ def normalize_stacktraces_for_grouping(data, grouping_config=None):
 
 
 def should_process_for_stacktraces(data):
-    from sentry.plugins.base import plugins
+    from sentry.plugins import plugins
 
     infos = find_stacktraces_in_data(data)
     platforms = set()
@@ -296,7 +296,7 @@ def should_process_for_stacktraces(data):
 
 
 def get_processors_for_stacktraces(data, infos):
-    from sentry.plugins.base import plugins
+    from sentry.plugins import plugins
 
     platforms = set()
     for info in infos:
diff --git a/src/sentry/tasks/activity.py b/src/sentry/tasks/activity.py
index 01abd14b28..5475a6bdc1 100644
--- a/src/sentry/tasks/activity.py
+++ b/src/sentry/tasks/activity.py
@@ -10,7 +10,7 @@ logger = logging.getLogger(__name__)
 
 def get_activity_notifiers(project):
     from sentry.plugins.bases.notify import NotificationPlugin
-    from sentry.plugins.base import plugins
+    from sentry.plugins import plugins
 
     results = []
     for plugin in plugins.for_project(project, version=1):
diff --git a/src/sentry/tasks/commits.py b/src/sentry/tasks/commits.py
index 894c04b409..7278aa3a46 100644
--- a/src/sentry/tasks/commits.py
+++ b/src/sentry/tasks/commits.py
@@ -8,7 +8,7 @@ from django.core.urlresolvers import reverse
 from sentry.exceptions import InvalidIdentity, PluginError
 from sentry.integrations.exceptions import IntegrationError
 from sentry.models import Deploy, LatestRelease, Release, ReleaseHeadCommit, Repository, User
-from sentry.plugins.base import bindings
+from sentry.plugins import bindings
 from sentry.tasks.base import instrumented_task, retry
 from sentry.utils.email import MessageBuilder
 from sentry.utils.http import absolute_uri
diff --git a/src/sentry/tasks/post_process.py b/src/sentry/tasks/post_process.py
index 8a071d688b..6b39c485b7 100644
--- a/src/sentry/tasks/post_process.py
+++ b/src/sentry/tasks/post_process.py
@@ -10,7 +10,7 @@ from sentry.models import EventDict
 from sentry.utils import snuba
 from sentry.utils.cache import cache
 from sentry.exceptions import PluginError
-from sentry.plugins.base import plugins
+from sentry.plugins import plugins
 from sentry.signals import event_processed
 from sentry.tasks.sentry_apps import process_resource_change_bound
 from sentry.tasks.base import instrumented_task
diff --git a/src/sentry/tasks/signals.py b/src/sentry/tasks/signals.py
index 0b6e06c6e8..1637838fbb 100644
--- a/src/sentry/tasks/signals.py
+++ b/src/sentry/tasks/signals.py
@@ -1,6 +1,6 @@
 from __future__ import absolute_import
 
-from sentry.plugins.base import plugins
+from sentry.plugins import plugins
 from sentry.tasks.base import instrumented_task
 from sentry.utils.safe import safe_execute
 
diff --git a/src/sentry/tasks/store.py b/src/sentry/tasks/store.py
index d12cb06671..6d07bcbf54 100644
--- a/src/sentry/tasks/store.py
+++ b/src/sentry/tasks/store.py
@@ -44,7 +44,7 @@ class RetrySymbolication(Exception):
 
 def should_process(data):
     """Quick check if processing is needed at all."""
-    from sentry.plugins.base import plugins
+    from sentry.plugins import plugins
 
     for plugin in plugins.all(version=2):
         processors = safe_execute(
@@ -156,7 +156,7 @@ def retry_process_event(process_task_name, task_kwargs, **kwargs):
 
 
 def _do_process_event(cache_key, start_time, event_id, process_task, data=None):
-    from sentry.plugins.base import plugins
+    from sentry.plugins import plugins
 
     if data is None:
         data = default_cache.get(cache_key)
diff --git a/src/sentry/templatetags/sentry_plugins.py b/src/sentry/templatetags/sentry_plugins.py
index 41484cc0a9..7d7124bbf7 100644
--- a/src/sentry/templatetags/sentry_plugins.py
+++ b/src/sentry/templatetags/sentry_plugins.py
@@ -2,7 +2,7 @@ from __future__ import absolute_import
 
 from django import template
 
-from sentry.plugins.base import Annotation, plugins
+from sentry.plugins import Annotation, plugins
 from sentry.utils.safe import safe_execute
 
 register = template.Library()
diff --git a/src/sentry/testutils/cases.py b/src/sentry/testutils/cases.py
index 9e49cb1c3c..fc49451011 100644
--- a/src/sentry/testutils/cases.py
+++ b/src/sentry/testutils/cases.py
@@ -77,7 +77,7 @@ from sentry.models import (
     WidgetDataSource,
     WidgetDataSourceTypes,
 )
-from sentry.plugins.base import plugins
+from sentry.plugins import plugins
 from sentry.rules import EventState
 from sentry.tagstore.snuba import SnubaTagStorage
 from sentry.utils import json
diff --git a/src/sentry/utils/pytest/sentry.py b/src/sentry/utils/pytest/sentry.py
index 8742a25c5c..53b67e2e46 100644
--- a/src/sentry/utils/pytest/sentry.py
+++ b/src/sentry/utils/pytest/sentry.py
@@ -172,7 +172,7 @@ def pytest_configure(config):
 
 
 def register_extensions():
-    from sentry.plugins.base import plugins
+    from sentry.plugins import plugins
     from sentry.plugins.utils import TestIssuePlugin2
 
     plugins.register(TestIssuePlugin2)
@@ -205,7 +205,7 @@ def register_extensions():
     integrations.register(VstsIntegrationProvider)
     integrations.register(VstsExtensionIntegrationProvider)
 
-    from sentry.plugins.base import bindings
+    from sentry.plugins import bindings
     from sentry.plugins.providers.dummy import DummyRepositoryProvider
 
     bindings.add("repository.provider", DummyRepositoryProvider, id="dummy")
diff --git a/src/sentry/web/frontend/group_plugin_action.py b/src/sentry/web/frontend/group_plugin_action.py
index 520ef580ce..83ffc0ee24 100644
--- a/src/sentry/web/frontend/group_plugin_action.py
+++ b/src/sentry/web/frontend/group_plugin_action.py
@@ -5,7 +5,7 @@ from django.shortcuts import get_object_or_404
 from sudo.utils import is_safe_url
 
 from sentry.models import Group, GroupMeta
-from sentry.plugins.base import plugins
+from sentry.plugins import plugins
 from sentry.web.frontend.base import ProjectView
 
 
diff --git a/src/sentry/web/frontend/organization_auth_settings.py b/src/sentry/web/frontend/organization_auth_settings.py
index cf85b997dd..e00895f34e 100644
--- a/src/sentry/web/frontend/organization_auth_settings.py
+++ b/src/sentry/web/frontend/organization_auth_settings.py
@@ -13,7 +13,7 @@ from sentry.auth import manager
 from sentry.auth.helper import AuthHelper
 from sentry.auth.superuser import is_active_superuser
 from sentry.models import AuditLogEntryEvent, AuthProvider, OrganizationMember, User
-from sentry.plugins.base import Response
+from sentry.plugins import Response
 from sentry.tasks.auth import email_missing_links, email_unlink_notifications
 from sentry.utils.http import absolute_uri
 from sentry.web.frontend.base import OrganizationView
diff --git a/src/sentry/web/frontend/release_webhook.py b/src/sentry/web/frontend/release_webhook.py
index 1ccfe62bf8..b46641253c 100644
--- a/src/sentry/web/frontend/release_webhook.py
+++ b/src/sentry/web/frontend/release_webhook.py
@@ -15,7 +15,7 @@ from django.utils.decorators import method_decorator
 from sentry.api import client
 from sentry.exceptions import HookValidationError
 from sentry.models import ApiKey, Project, ProjectOption
-from sentry.plugins.base import plugins
+from sentry.plugins import plugins
 from sentry.utils import json
 
 logger = logging.getLogger("sentry.webhooks")
diff --git a/src/sentry/web/helpers.py b/src/sentry/web/helpers.py
index 4dc3790ffd..30a782d542 100644
--- a/src/sentry/web/helpers.py
+++ b/src/sentry/web/helpers.py
@@ -17,7 +17,7 @@ logger = logging.getLogger("sentry")
 
 def get_default_context(request, existing_context=None, team=None):
     from sentry import options
-    from sentry.plugins.base import plugins
+    from sentry.plugins import plugins
 
     context = {
         "URL_PREFIX": options.get("system.url-prefix"),
diff --git a/tests/sentry/api/endpoints/test_organization_plugins.py b/tests/sentry/api/endpoints/test_organization_plugins.py
index f9517003b4..29e246086a 100644
--- a/tests/sentry/api/endpoints/test_organization_plugins.py
+++ b/tests/sentry/api/endpoints/test_organization_plugins.py
@@ -2,7 +2,7 @@ from __future__ import absolute_import
 
 from django.core.urlresolvers import reverse
 
-from sentry.plugins.base import plugins
+from sentry.plugins import plugins
 from sentry.testutils import APITestCase
 
 
diff --git a/tests/sentry/api/endpoints/test_project_plugin_details.py b/tests/sentry/api/endpoints/test_project_plugin_details.py
index c79d09a3dd..71069e6220 100644
--- a/tests/sentry/api/endpoints/test_project_plugin_details.py
+++ b/tests/sentry/api/endpoints/test_project_plugin_details.py
@@ -3,8 +3,7 @@ from __future__ import absolute_import
 import mock
 from django.core.urlresolvers import reverse
 
-from sentry.plugins.base import plugins
-from sentry.plugins.bases.notify import NotificationPlugin
+from sentry.plugins import plugins, NotificationPlugin
 from sentry.models import ProjectOption, AuditLogEntry
 from sentry.testutils import APITestCase
 
diff --git a/tests/sentry/api/endpoints/test_project_plugins.py b/tests/sentry/api/endpoints/test_project_plugins.py
index 153b8c8951..34c38c03bc 100644
--- a/tests/sentry/api/endpoints/test_project_plugins.py
+++ b/tests/sentry/api/endpoints/test_project_plugins.py
@@ -2,7 +2,7 @@ from __future__ import absolute_import
 
 from django.core.urlresolvers import reverse
 
-from sentry.plugins.base import plugins
+from sentry.plugins import plugins
 from sentry.testutils import APITestCase
 from mock import patch
 
diff --git a/tests/sentry/api/serializers/test_pull_request.py b/tests/sentry/api/serializers/test_pull_request.py
index 298dcf1c2b..2524ea6dbd 100644
--- a/tests/sentry/api/serializers/test_pull_request.py
+++ b/tests/sentry/api/serializers/test_pull_request.py
@@ -7,7 +7,7 @@ from uuid import uuid4
 from sentry.api.serializers import serialize
 from sentry.integrations.github.repository import GitHubRepositoryProvider
 from sentry.models import PullRequest, CommitAuthor, Release, Repository
-from sentry.plugins.base import bindings
+from sentry.plugins import bindings
 from sentry.testutils import TestCase
 
 
diff --git a/tests/sentry/integrations/bitbucket/test_installed.py b/tests/sentry/integrations/bitbucket/test_installed.py
index 24300ddc82..738bd83b44 100644
--- a/tests/sentry/integrations/bitbucket/test_installed.py
+++ b/tests/sentry/integrations/bitbucket/test_installed.py
@@ -6,7 +6,7 @@ from sentry.testutils import APITestCase
 from sentry.integrations.bitbucket.installed import BitbucketInstalledEndpoint
 from sentry.integrations.bitbucket.integration import scopes, BitbucketIntegrationProvider
 from sentry.models import Integration, Repository, Project
-from sentry.plugins.base import plugins
+from sentry.plugins import plugins
 from tests.sentry.plugins.testutils import register_mock_plugins, unregister_mock_plugins
 
 
diff --git a/tests/sentry/integrations/github/test_integration.py b/tests/sentry/integrations/github/test_integration.py
index d9838bcabb..f96188bc5d 100644
--- a/tests/sentry/integrations/github/test_integration.py
+++ b/tests/sentry/integrations/github/test_integration.py
@@ -9,7 +9,7 @@ from six.moves.urllib.parse import urlencode, urlparse
 from sentry.constants import ObjectStatus
 from sentry.integrations.github import GitHubIntegrationProvider
 from sentry.models import Integration, OrganizationIntegration, Repository, Project
-from sentry.plugins.base import plugins
+from sentry.plugins import plugins
 from sentry.testutils import IntegrationTestCase
 from tests.sentry.plugins.testutils import register_mock_plugins, unregister_mock_plugins
 
diff --git a/tests/sentry/integrations/test_migrate.py b/tests/sentry/integrations/test_migrate.py
index 70197f995f..3b4fd5cf1d 100644
--- a/tests/sentry/integrations/test_migrate.py
+++ b/tests/sentry/integrations/test_migrate.py
@@ -3,7 +3,7 @@ from __future__ import absolute_import
 from sentry.integrations.example import ExampleIntegrationProvider
 from sentry.mediators.plugins import Migrator
 from sentry.models import Integration, Repository
-from sentry.plugins.base import plugins
+from sentry.plugins import plugins
 from sentry.plugins.bases.issue2 import IssuePlugin2
 from sentry.testutils import TestCase
 
diff --git a/tests/sentry/integrations/test_pipeline.py b/tests/sentry/integrations/test_pipeline.py
index 767b32cfaf..dbb4efc9c5 100644
--- a/tests/sentry/integrations/test_pipeline.py
+++ b/tests/sentry/integrations/test_pipeline.py
@@ -6,7 +6,7 @@ from sentry.models import IdentityProvider, Identity, Integration, OrganizationI
 from sentry.testutils import IntegrationTestCase
 from sentry.integrations.example import ExampleIntegrationProvider, AliasedIntegrationProvider
 from sentry.models import Repository
-from sentry.plugins.base import plugins
+from sentry.plugins import plugins
 from sentry.plugins.bases.issue2 import IssuePlugin2
 
 
diff --git a/tests/sentry/integrations/vsts/test_integration.py b/tests/sentry/integrations/vsts/test_integration.py
index 371f679aa7..d29d9ae58d 100644
--- a/tests/sentry/integrations/vsts/test_integration.py
+++ b/tests/sentry/integrations/vsts/test_integration.py
@@ -15,7 +15,7 @@ from sentry.models import (
     Repository,
     Project,
 )
-from sentry.plugins.base import plugins
+from sentry.plugins import plugins
 from six.moves.urllib.parse import urlparse, parse_qs
 from tests.sentry.plugins.testutils import (
     register_mock_plugins,
diff --git a/tests/sentry/plugins/base/test.py b/tests/sentry/plugins/base/test.py
index 6e526be64a..570529e5ef 100644
--- a/tests/sentry/plugins/base/test.py
+++ b/tests/sentry/plugins/base/test.py
@@ -2,7 +2,7 @@ from __future__ import absolute_import
 
 from django.conf.urls import url
 
-from sentry.plugins.base.v2 import Plugin2
+from sentry.plugins import Plugin2
 from sentry.plugins.base.project_api_urls import load_plugin_urls
 from sentry.plugins.base.response import JSONResponse
 from sentry.testutils import TestCase
diff --git a/tests/sentry/plugins/bases/issue/tests.py b/tests/sentry/plugins/bases/issue/tests.py
index e7131bf239..88adf6db93 100644
--- a/tests/sentry/plugins/bases/issue/tests.py
+++ b/tests/sentry/plugins/bases/issue/tests.py
@@ -7,7 +7,7 @@ import mock
 from social_auth.models import UserSocialAuth
 
 from sentry.models import User
-from sentry.plugins.bases import IssueTrackingPlugin
+from sentry.plugins import IssueTrackingPlugin
 from sentry.testutils import TestCase
 
 
diff --git a/tests/sentry/plugins/bases/notify/tests.py b/tests/sentry/plugins/bases/notify/tests.py
index 9e1a8c606d..0974e7a43b 100644
--- a/tests/sentry/plugins/bases/notify/tests.py
+++ b/tests/sentry/plugins/bases/notify/tests.py
@@ -2,7 +2,7 @@ from __future__ import absolute_import
 
 from sentry.exceptions import PluginError
 from sentry.integrations.exceptions import ApiError
-from sentry.plugins.bases.notify import NotificationPlugin
+from sentry.plugins import NotificationPlugin
 from sentry.plugins.base.structs import Notification
 from sentry.testutils import TestCase
 from requests.exceptions import HTTPError, SSLError
diff --git a/tests/sentry/plugins/bases/test_issue2.py b/tests/sentry/plugins/bases/test_issue2.py
index 495084546a..1ea43df459 100644
--- a/tests/sentry/plugins/bases/test_issue2.py
+++ b/tests/sentry/plugins/bases/test_issue2.py
@@ -8,8 +8,7 @@ import mock
 from social_auth.models import UserSocialAuth
 
 from sentry.models import GroupMeta, User
-from sentry.plugins.base import plugins
-from sentry.plugins.bases import IssueTrackingPlugin2
+from sentry.plugins import IssueTrackingPlugin2, plugins
 from sentry.testutils import TestCase
 from sentry.testutils.helpers.datetime import iso_format, before_now
 
@@ -89,7 +88,7 @@ class IssuePlugin2GroupActionTest(TestCase):
         )
         self.group = self.event.group
 
-    @mock.patch("sentry.plugins.bases.IssueTrackingPlugin2.is_configured", return_value=True)
+    @mock.patch("sentry.plugins.IssueTrackingPlugin2.is_configured", return_value=True)
     def test_get_create(self, *args):
         self.login_as(user=self.user)
         url = "/api/0/issues/%s/plugins/issuetrackingplugin2/create/" % self.group.id
@@ -100,8 +99,8 @@ class IssuePlugin2GroupActionTest(TestCase):
         assert "title" in field_names
         assert "description" in field_names
 
-    @mock.patch("sentry.plugins.bases.IssueTrackingPlugin2.create_issue")
-    @mock.patch("sentry.plugins.bases.IssueTrackingPlugin2.is_configured", return_value=True)
+    @mock.patch("sentry.plugins.IssueTrackingPlugin2.create_issue")
+    @mock.patch("sentry.plugins.IssueTrackingPlugin2.is_configured", return_value=True)
     def test_post_create_invalid(self, *args):
         self.login_as(user=self.user)
         url = "/api/0/issues/%s/plugins/issuetrackingplugin2/create/" % self.group.id
@@ -110,9 +109,9 @@ class IssuePlugin2GroupActionTest(TestCase):
         assert response.status_code == 400
         assert content["error_type"] == "validation"
 
-    @mock.patch("sentry.plugins.bases.IssueTrackingPlugin2.create_issue", return_value=1)
-    @mock.patch("sentry.plugins.bases.IssueTrackingPlugin2.is_configured", return_value=True)
-    @mock.patch("sentry.plugins.bases.IssueTrackingPlugin2.get_issue_url", return_value="")
+    @mock.patch("sentry.plugins.IssueTrackingPlugin2.create_issue", return_value=1)
+    @mock.patch("sentry.plugins.IssueTrackingPlugin2.is_configured", return_value=True)
+    @mock.patch("sentry.plugins.IssueTrackingPlugin2.get_issue_url", return_value="")
     def test_post_create_valid(self, *args):
         self.login_as(user=self.user)
         url = "/api/0/issues/%s/plugins/issuetrackingplugin2/create/" % self.group.id
@@ -123,21 +122,21 @@ class IssuePlugin2GroupActionTest(TestCase):
         assert response.status_code == 200
         assert "issue_url" in content
 
-    @mock.patch("sentry.plugins.bases.IssueTrackingPlugin2.is_configured", return_value=True)
+    @mock.patch("sentry.plugins.IssueTrackingPlugin2.is_configured", return_value=True)
     def test_get_link(self, *args):
         self.login_as(user=self.user)
         url = "/api/0/issues/%s/plugins/issuetrackingplugin2/link/" % self.group.id
         response = self.client.get(url, format="json")
         assert response.status_code == 200
 
-    @mock.patch("sentry.plugins.bases.IssueTrackingPlugin2.is_configured", return_value=True)
+    @mock.patch("sentry.plugins.IssueTrackingPlugin2.is_configured", return_value=True)
     def test_get_unlink_invalid(self, *args):
         self.login_as(user=self.user)
         url = "/api/0/issues/%s/plugins/issuetrackingplugin2/unlink/" % self.group.id
         response = self.client.get(url, format="json")
         assert response.status_code == 400
 
-    @mock.patch("sentry.plugins.bases.IssueTrackingPlugin2.is_configured", return_value=True)
+    @mock.patch("sentry.plugins.IssueTrackingPlugin2.is_configured", return_value=True)
     def test_get_unlink_valid(self, *args):
         self.login_as(user=self.user)
         id_ = "%s:tid" % self.plugin_instance.get_conf_key()
@@ -148,7 +147,7 @@ class IssuePlugin2GroupActionTest(TestCase):
         GroupMeta.objects.populate_cache([self.group])
         assert GroupMeta.objects.get_value(self.group, id_, None) is None
 
-    @mock.patch("sentry.plugins.bases.IssueTrackingPlugin2.is_configured", return_value=True)
+    @mock.patch("sentry.plugins.IssueTrackingPlugin2.is_configured", return_value=True)
     def test_no_group_events(self, *args):
         self.login_as(user=self.user)
         group = self.create_group(project=self.project)
diff --git a/tests/sentry/plugins/interfaces/test_releasehook.py b/tests/sentry/plugins/interfaces/test_releasehook.py
index 37039c367c..7d35a75be4 100644
--- a/tests/sentry/plugins/interfaces/test_releasehook.py
+++ b/tests/sentry/plugins/interfaces/test_releasehook.py
@@ -4,7 +4,7 @@ __all__ = ["ReleaseHook"]
 
 from sentry.exceptions import HookValidationError
 from sentry.models import Commit, Release, ReleaseProject
-from sentry.plugins.interfaces.releasehook import ReleaseHook
+from sentry.plugins import ReleaseHook
 from sentry.testutils import TestCase
 
 
diff --git a/tests/sentry/plugins/mail/tests.py b/tests/sentry/plugins/mail/tests.py
index 9e9ef8da8a..cfdaae277c 100644
--- a/tests/sentry/plugins/mail/tests.py
+++ b/tests/sentry/plugins/mail/tests.py
@@ -31,7 +31,7 @@ from sentry.models import (
     UserReport,
 )
 from sentry.ownership.grammar import Owner, Matcher, dump_schema
-from sentry.plugins.base import Notification
+from sentry.plugins import Notification
 from sentry.plugins.sentry_mail.activity.base import ActivityEmail
 from sentry.plugins.sentry_mail.models import MailPlugin
 from sentry.testutils import TestCase
diff --git a/tests/sentry/plugins/sentry_webhooks/test_plugin.py b/tests/sentry/plugins/sentry_webhooks/test_plugin.py
index b898336021..b294b59f2f 100644
--- a/tests/sentry/plugins/sentry_webhooks/test_plugin.py
+++ b/tests/sentry/plugins/sentry_webhooks/test_plugin.py
@@ -10,7 +10,7 @@ from exam import fixture
 
 from sentry.exceptions import PluginError
 from sentry.models import Rule
-from sentry.plugins.base import Notification
+from sentry.plugins import Notification
 from sentry.plugins.sentry_webhooks.plugin import validate_urls, WebHooksPlugin, WebHooksOptionsForm
 from sentry.testutils import TestCase
 
diff --git a/tests/sentry/plugins/test_config.py b/tests/sentry/plugins/test_config.py
index e571514b81..29697b28aa 100644
--- a/tests/sentry/plugins/test_config.py
+++ b/tests/sentry/plugins/test_config.py
@@ -5,7 +5,7 @@ import pytest
 from django import forms
 
 from sentry.exceptions import PluginError
-from sentry.plugins.base.v2 import Plugin2
+from sentry.plugins import Plugin2
 from sentry.testutils import TestCase
 
 
diff --git a/tests/sentry/plugins/testutils.py b/tests/sentry/plugins/testutils.py
index 5027057114..d7568008f2 100644
--- a/tests/sentry/plugins/testutils.py
+++ b/tests/sentry/plugins/testutils.py
@@ -1,7 +1,6 @@
 from __future__ import absolute_import
 
-from sentry.plugins.base import plugins
-from sentry.plugins.bases import IssueTrackingPlugin2
+from sentry.plugins import plugins, IssueTrackingPlugin2
 
 
 class VstsPlugin(IssueTrackingPlugin2):
diff --git a/tests/sentry/receivers/test_featureadoption.py b/tests/sentry/receivers/test_featureadoption.py
index 748b2d33c3..1c33ad31f9 100644
--- a/tests/sentry/receivers/test_featureadoption.py
+++ b/tests/sentry/receivers/test_featureadoption.py
@@ -4,7 +4,7 @@ import json
 from django.utils import timezone
 
 from sentry.models import FeatureAdoption, GroupAssignee, GroupTombstone, Rule
-from sentry.plugins.bases import IssueTrackingPlugin2, NotificationPlugin
+from sentry.plugins import IssueTrackingPlugin2, NotificationPlugin
 from sentry.signals import (
     alert_rule_created,
     event_processed,
diff --git a/tests/sentry/receivers/test_onboarding.py b/tests/sentry/receivers/test_onboarding.py
index 99c454578e..b556039cba 100644
--- a/tests/sentry/receivers/test_onboarding.py
+++ b/tests/sentry/receivers/test_onboarding.py
@@ -18,8 +18,7 @@ from sentry.signals import (
     plugin_enabled,
     issue_tracker_used,
 )
-from sentry.plugins.bases import IssueTrackingPlugin
-from sentry.plugins.bases.notify import NotificationPlugin
+from sentry.plugins import IssueTrackingPlugin, NotificationPlugin
 from sentry.testutils import TestCase
 
 
diff --git a/tests/sentry/rules/actions/test_notify_event_service.py b/tests/sentry/rules/actions/test_notify_event_service.py
index fb017a02b9..88ce6493d8 100644
--- a/tests/sentry/rules/actions/test_notify_event_service.py
+++ b/tests/sentry/rules/actions/test_notify_event_service.py
@@ -19,7 +19,7 @@ class NotifyEventServiceActionTest(RuleTestCase):
 
         rule = self.get_rule(data={"service": "mail"})
 
-        with patch("sentry.plugins.base.plugins.get") as get_plugin:
+        with patch("sentry.plugins.plugins.get") as get_plugin:
             get_plugin.return_value = plugin
 
             results = list(rule.after(event=event, state=self.get_state()))
@@ -53,7 +53,7 @@ class NotifyEventServiceActionTest(RuleTestCase):
 
         rule = self.get_rule(data={"service": "notify"})
 
-        with patch("sentry.plugins.base.plugins.get") as get_plugin:
+        with patch("sentry.plugins.plugins.get") as get_plugin:
             get_plugin.return_value = plugin
 
             results = list(rule.after(event=event, state=self.get_state()))
diff --git a/tests/sentry/rules/test_processor.py b/tests/sentry/rules/test_processor.py
index f75733d886..854d0539c6 100644
--- a/tests/sentry/rules/test_processor.py
+++ b/tests/sentry/rules/test_processor.py
@@ -6,7 +6,7 @@ from datetime import timedelta
 from django.utils import timezone
 
 from sentry.models import GroupRuleStatus, Rule
-from sentry.plugins.base import plugins
+from sentry.plugins import plugins
 from sentry.testutils import TestCase
 from sentry.rules.processor import EventCompatibilityProxy, RuleProcessor
 
diff --git a/tests/sentry/tasks/test_activity.py b/tests/sentry/tasks/test_activity.py
index c70d147562..10e74af166 100644
--- a/tests/sentry/tasks/test_activity.py
+++ b/tests/sentry/tasks/test_activity.py
@@ -2,7 +2,7 @@ from __future__ import absolute_import
 
 import mock
 
-from sentry.plugins.bases.notify import NotificationPlugin
+from sentry.plugins import NotificationPlugin
 from sentry.testutils import PluginTestCase
 from sentry.models import Activity
 
diff --git a/tests/sentry/tasks/test_store.py b/tests/sentry/tasks/test_store.py
index acf56233ed..bcd7ffeaf5 100644
--- a/tests/sentry/tasks/test_store.py
+++ b/tests/sentry/tasks/test_store.py
@@ -6,7 +6,7 @@ from time import time
 
 from sentry import quotas, tsdb
 from sentry.event_manager import EventManager, HashDiscarded
-from sentry.plugins.base.v2 import Plugin2
+from sentry.plugins import Plugin2
 from sentry.tasks.store import preprocess_event, process_event, save_event
 from sentry.testutils import PluginTestCase
 from sentry.utils.dates import to_datetime
diff --git a/tests/sentry/templatetags/test_sentry_plugins.py b/tests/sentry/templatetags/test_sentry_plugins.py
index 3324de7ae4..cb03f3387d 100644
--- a/tests/sentry/templatetags/test_sentry_plugins.py
+++ b/tests/sentry/templatetags/test_sentry_plugins.py
@@ -3,7 +3,7 @@ from __future__ import absolute_import
 from django.template import Context, Template
 from mock import Mock
 
-from sentry.plugins.base.v2 import Plugin2
+from sentry.plugins import Plugin2
 from sentry.testutils import PluginTestCase
 
 
diff --git a/tests/sentry/web/frontend/test_release_webhook.py b/tests/sentry/web/frontend/test_release_webhook.py
index 66a7950418..dfd82792b9 100644
--- a/tests/sentry/web/frontend/test_release_webhook.py
+++ b/tests/sentry/web/frontend/test_release_webhook.py
@@ -62,7 +62,7 @@ class ReleaseWebhookTest(TestCase):
         resp = self.client.post(path)
         assert resp.status_code == 404
 
-    @patch("sentry.plugins.base.plugins.get")
+    @patch("sentry.plugins.plugins.get")
     def test_valid_signature(self, mock_plugin_get):
         MockPlugin = mock_plugin_get.return_value
         MockPlugin.is_enabled.return_value = True
@@ -74,7 +74,7 @@ class ReleaseWebhookTest(TestCase):
         MockReleaseHook.assert_called_once_with(self.project)
         assert MockReleaseHook.return_value.handle.call_count == 1
 
-    @patch("sentry.plugins.base.plugins.get")
+    @patch("sentry.plugins.plugins.get")
     def test_disabled_plugin(self, mock_plugin_get):
         MockPlugin = mock_plugin_get.return_value
         MockPlugin.is_enabled.return_value = False
