commit ffb1fe2d199f247ec8d2d12d522db48a5217e52b
Author: Armin Ronacher <armin.ronacher@active-4.com>
Date:   Wed Nov 25 23:34:36 2015 +0100

    Translated some more extended components.

diff --git a/src/sentry/static/sentry/app/components/events/errorItem.jsx b/src/sentry/static/sentry/app/components/events/errorItem.jsx
index 6b12973974..0e263b1984 100644
--- a/src/sentry/static/sentry/app/components/events/errorItem.jsx
+++ b/src/sentry/static/sentry/app/components/events/errorItem.jsx
@@ -1,4 +1,5 @@
 import React from 'react';
+import {t} from '../../locale';
 
 const EventErrorItem = React.createClass({
   getInitialState(){
@@ -21,7 +22,7 @@ const EventErrorItem = React.createClass({
     return (
       <li>
         {error.message}
-        <small> <a style={{marginLeft: 10}} onClick={this.toggle}>{isOpen ? 'Collapse' : 'Expand'}</a></small>
+        <small> <a style={{marginLeft: 10}} onClick={this.toggle}>{isOpen ? t('Collapse') : t('Expand')}</a></small>
         <pre style={{display: isOpen ? 'block' : 'none'}}>{JSON.stringify(error.data, null, 2)}</pre>
       </li>
     );
diff --git a/src/sentry/static/sentry/app/components/events/errors.jsx b/src/sentry/static/sentry/app/components/events/errors.jsx
index be57fe87d8..e28aafe2d5 100644
--- a/src/sentry/static/sentry/app/components/events/errors.jsx
+++ b/src/sentry/static/sentry/app/components/events/errors.jsx
@@ -3,6 +3,7 @@ import React from 'react';
 import EventDataSection from './eventDataSection';
 import EventErrorItem from './errorItem';
 import PropTypes from '../../proptypes';
+import {t, tn} from '../../locale';
 
 const EventErrors = React.createClass({
   propTypes: {
@@ -38,8 +39,12 @@ const EventErrors = React.createClass({
           type="errors"
           className="errors">
         <p>
-          <a className="pull-right" onClick={this.toggle}>{isOpen ? 'Hide' : 'Show'}</a>
-          There {numErrors != 1 ? ('were ' + numErrors + ' errors') : 'was 1 error'} encountered while processing this event.
+          <a className="pull-right" onClick={this.toggle}>{isOpen ? t('Hide') : t('Show')}</a>
+          {
+            tn('There was 1 error encountered while processing this event',
+               'There were %d errors encountered while processing this event',
+               numErrors)
+          }
         </p>
         <ul style={{display: isOpen ? 'block' : 'none'}}>
           {errors.map((error, errorIdx) => {
diff --git a/src/sentry/static/sentry/app/components/events/eventTags.jsx b/src/sentry/static/sentry/app/components/events/eventTags.jsx
index af48d9ae46..beebe61c4f 100644
--- a/src/sentry/static/sentry/app/components/events/eventTags.jsx
+++ b/src/sentry/static/sentry/app/components/events/eventTags.jsx
@@ -6,6 +6,7 @@ import PropTypes from '../../proptypes';
 
 import EventDataSection from './eventDataSection';
 import {isUrl} from '../../utils';
+import {t} from '../../locale';
 
 const EventTags = React.createClass({
   propTypes: {
@@ -25,7 +26,7 @@ const EventTags = React.createClass({
       <EventDataSection
           group={this.props.group}
           event={this.props.event}
-          title="Tags"
+          title={t('Tags')}
           type="tags">
         <ul className="mini-tag-list">
           {tags.map((tag) => {
diff --git a/src/sentry/static/sentry/app/components/events/extraData.jsx b/src/sentry/static/sentry/app/components/events/extraData.jsx
index 5daf67c0f4..44de9f32ce 100644
--- a/src/sentry/static/sentry/app/components/events/extraData.jsx
+++ b/src/sentry/static/sentry/app/components/events/extraData.jsx
@@ -4,6 +4,7 @@ import PropTypes from '../../proptypes';
 import {objectToArray} from '../../utils';
 import EventDataSection from './eventDataSection';
 import KeyValueList from './interfaces/keyValueList';
+import {t} from '../../locale';
 
 const EventExtraData = React.createClass({
   propTypes: {
@@ -23,7 +24,7 @@ const EventExtraData = React.createClass({
           group={this.props.group}
           event={this.props.event}
           type="extra"
-          title="Additional Data">
+          title={t('Additional Data')}>
           <KeyValueList
               data={extraDataArray}
               isContextData={true}/>
diff --git a/src/sentry/static/sentry/app/components/events/interfaces/csp.jsx b/src/sentry/static/sentry/app/components/events/interfaces/csp.jsx
index 3940519186..4ae00995a7 100644
--- a/src/sentry/static/sentry/app/components/events/interfaces/csp.jsx
+++ b/src/sentry/static/sentry/app/components/events/interfaces/csp.jsx
@@ -4,6 +4,7 @@ import PropTypes from '../../../proptypes';
 import GroupEventDataSection from '../eventDataSection';
 import CSPContent from './cspContent';
 import CSPHelp from './cspHelp';
+import {t} from '../../../locale';
 
 function getView(view, data) {
   switch (view) {
@@ -50,11 +51,11 @@ const CSPInterface = React.createClass({
     var title = (
       <div>
         <div className="btn-group">
-          <a className={(view === 'report' ? 'active' : '') + ' btn btn-default btn-sm'} onClick={this.toggleView.bind(this, 'report')}>Report</a>
-          <a className={(view === 'raw' ? 'active' : '') + ' btn btn-default btn-sm'} onClick={this.toggleView.bind(this, 'raw')}>Raw</a>
-          <a className={(view === 'help' ? 'active' : '') + ' btn btn-default btn-sm'} onClick={this.toggleView.bind(this, 'help')}>Help</a>
+          <a className={(view === 'report' ? 'active' : '') + ' btn btn-default btn-sm'} onClick={this.toggleView.bind(this, 'report')}>{t('Report')}</a>
+          <a className={(view === 'raw' ? 'active' : '') + ' btn btn-default btn-sm'} onClick={this.toggleView.bind(this, 'raw')}>{t('Raw')}</a>
+          <a className={(view === 'help' ? 'active' : '') + ' btn btn-default btn-sm'} onClick={this.toggleView.bind(this, 'help')}>{t('Help')}</a>
         </div>
-        <h3>{'CSP Report'}</h3>
+        <h3>{t('CSP Report')}</h3>
       </div>
     );
 
diff --git a/src/sentry/static/sentry/app/components/events/interfaces/cspHelp.jsx b/src/sentry/static/sentry/app/components/events/interfaces/cspHelp.jsx
index 4e4530eab3..ae4c35c040 100644
--- a/src/sentry/static/sentry/app/components/events/interfaces/cspHelp.jsx
+++ b/src/sentry/static/sentry/app/components/events/interfaces/cspHelp.jsx
@@ -1,58 +1,59 @@
 import React from 'react';
+import {t} from '../../../locale';
 
 const help = {
-  'base-uri': `
+  'base-uri': t(`
 The <code>base-uri</code> directive defines the URIs that a user agent
 may use as the document base URL. If this value is absent, then any URI
 is allowed. If this directive is absent, the user agent will use the
-value in the <code>base</code> element.`,
-  'child-src': `
+value in the <code>base</code> element.`),
+  'child-src': t(`
 The <code>child-src</code> directive defines the valid sources for web
 workers and nested browsing contexts loaded using elements such as
 <frame> and <iframe>. This directive is preferred over the
 <code>frame-src</code> directive, which is deprecated. For workers,
-non-compliant requests are treated as fatal network errors by the user agent.`,
-  'connect-src': `
+non-compliant requests are treated as fatal network errors by the user agent.`),
+  'connect-src': t(`
 The <code>connect-src</code> directive defines valid sources for fetch,
 <code>XMLHttpRequest</code>, <code>WebSocket</code>, and
-<code>EventSource</code> connections.`,
-  'font-src': `
+<code>EventSource</code> connections.`),
+  'font-src': t(`
 The <code>font-src</code> directive specifies valid sources for fonts
-loaded using <code>@font-face</code>.`,
-  'form-action': `
+loaded using <code>@font-face</code>.`),
+  'form-action': t(`
 The <code>form-action</code> directive specifies valid endpoints for
-<code>&lt;form&gt;</code> submissions.`,
-  'frame-ancestors': `
+<code>&lt;form&gt;</code> submissions.`),
+  'frame-ancestors': t(`
 The <code>frame-ancestors</code> directive specifies valid parents that
 may embed a page using the <code>&lt;frame&gt;</code> and
-<code>&lt;iframe&gt;</code> elements.`,
-  'img-src': `
+<code>&lt;iframe&gt;</code> elements.`),
+  'img-src': t(`
 The <code>img-src</code> directive specifies valid sources of images and
-favicons.`,
-  'manifest-src': `
+favicons.`),
+  'manifest-src': t(`
 The <code>manifest-src</code> directive specifies which manifest can be
-applied to the resource.`,
-  'media-src': `
+applied to the resource.`),
+  'media-src': t(`
 The <code>media-src</code> directive specifies valid sources for loading
 media using the <code>&lt;audio&gt;</code> and <code>&lt;video&gt;</code>
-elements.`,
-  'object-src': `
+elements.`),
+  'object-src': t(`
 The <code>object-src</code> directive specifies valid sources for the
 <code>&lt;object&gt;</code>, <code>&lt;embed&gt;</code>, and
-<code>&lt;applet&gt;</code> elements.`,
-  'plugin-types': `
+<code>&lt;applet&gt;</code> elements.`),
+  'plugin-types': t(`
 The <code>plugin-types</code> directive specifies the valid plugins that
-the user agent may invoke.`,
-  'referrer': `
+the user agent may invoke.`),
+  'referrer': t(`
 The <code>referrer</code> directive specifies information in the
-<code>Referer</code> header for links away from a page.`,
-  'script-src': `
+<code>Referer</code> header for links away from a page.`),
+  'script-src': t(`
 The <code>script-src</code> directive specifies valid sources
 for JavaScript. When either the <code>script-src</code> or the
 <code>default-src</code> directive is included, inline script and
 <code>eval()</code> are disabled unless you specify 'unsafe-inline'
-and 'unsafe-eval', respectively.`,
-  'style-src': `
+and 'unsafe-eval', respectively.`),
+  'style-src': t(`
 The <code>style-src</code> directive specifies valid sources for
 stylesheets. This includes both externally-loaded stylesheets and inline
 use of the <code>&lt;style&gt;</code> element and HTML style attributes.
@@ -60,7 +61,7 @@ Stylesheets from sources that aren't included in the source list are not
 requested or loaded. When either the <code>style-src</code> or the
 <code>default-src</code> directive is included, inline use of the
 <code>&lt;style&gt;</code> element and HTML style attributes are disabled
-unless you specify 'unsafe-inline'.`,
+unless you specify 'unsafe-inline'.`),
 };
 
 const linkOverrides = {
diff --git a/src/sentry/static/sentry/app/components/events/interfaces/exception.jsx b/src/sentry/static/sentry/app/components/events/interfaces/exception.jsx
index 9a926fa620..b396d9e5fc 100644
--- a/src/sentry/static/sentry/app/components/events/interfaces/exception.jsx
+++ b/src/sentry/static/sentry/app/components/events/interfaces/exception.jsx
@@ -4,6 +4,7 @@ import GroupEventDataSection from '../eventDataSection';
 import PropTypes from '../../../proptypes';
 import ExceptionContent from './exceptionContent';
 import RawExceptionContent from './rawExceptionContent';
+import {t} from '../../../locale';
 
 const ExceptionInterface = React.createClass({
   propTypes: {
@@ -54,17 +55,17 @@ const ExceptionInterface = React.createClass({
       <div>
         <div className="btn-group">
           {data.hasSystemFrames &&
-            <a className={(stackView === 'app' ? 'active' : '') + ' btn btn-default btn-sm'} onClick={this.toggleStack.bind(this, 'app')}>App Only</a>
+            <a className={(stackView === 'app' ? 'active' : '') + ' btn btn-default btn-sm'} onClick={this.toggleStack.bind(this, 'app')}>{t('App Only')}</a>
           }
-          <a className={(stackView === 'full' ? 'active' : '') + ' btn btn-default btn-sm'} onClick={this.toggleStack.bind(this, 'full')}>Full</a>
-          <a className={(stackView === 'raw' ? 'active' : '') + ' btn btn-default btn-sm'} onClick={this.toggleStack.bind(this, 'raw')}>Raw</a>
+          <a className={(stackView === 'full' ? 'active' : '') + ' btn btn-default btn-sm'} onClick={this.toggleStack.bind(this, 'full')}>{t('Full')}</a>
+          <a className={(stackView === 'raw' ? 'active' : '') + ' btn btn-default btn-sm'} onClick={this.toggleStack.bind(this, 'raw')}>{t('Raw')}</a>
         </div>
         <h3>
           {'Exception '}
           {newestFirst ?
-            <small>(most recent call first)</small>
+            <small>({t('most recent call first')})</small>
           :
-            <small>(most recent call last)</small>
+            <small>({t('most recent call last')})</small>
           }
         </h3>
       </div>
diff --git a/src/sentry/static/sentry/app/components/events/interfaces/frame.jsx b/src/sentry/static/sentry/app/components/events/interfaces/frame.jsx
index 6e96ba85a4..abe50ec6a4 100644
--- a/src/sentry/static/sentry/app/components/events/interfaces/frame.jsx
+++ b/src/sentry/static/sentry/app/components/events/interfaces/frame.jsx
@@ -5,6 +5,7 @@ import {defined, objectIsEmpty, isUrl} from '../../../utils';
 
 import TooltipMixin from '../../../mixins/tooltip';
 import FrameVariables from './frameVariables';
+import {t} from '../../../locale';
 
 
 const Frame = React.createClass({
@@ -45,17 +46,23 @@ const Frame = React.createClass({
       ? `<a href="${_.escape(data.origAbsPath)}">${_.escape(data.origAbsPath)}</a>`
       : _.escape(data.origAbsPath);
 
+    let originalFilenameText = t('Original Filename');
+    let lineNumberText = t('Line Number');
+    let columnNumberText = t('Column Number');
+    let functionText = t('Function');
+    let sourceMapText = t('Source Map');
+
     let out = `
     <div>
-      <strong>Original Filename</strong><br/>
+      <strong>${originalFilenameText}</strong><br/>
       ${escapedAbsPath}<br/>
-      <strong>Line Number</strong><br/>
+      <strong>${lineNumberText}</strong><br/>
       ${_.escape(data.origLineNo)}<br/>
-      <strong>Column Number</strong><br/>
+      <strong>${columnNumberText}</strong><br/>
       ${_.escape(data.origColNo)}<br/>
-      <strong>Function</strong><br/>
+      <strong>${functionText}</strong><br/>
       ${_.escape(data.origFunction)}<br/>
-      <strong>Source Map</strong><br/>`;
+      <strong>${sourceMapText}</strong><br/>`;
 
     // mapUrl not always present; e.g. uploaded source maps
     out += data.mapUrl
@@ -71,13 +78,16 @@ const Frame = React.createClass({
     let data = this.props.data;
     let title = [];
 
+    // TODO(mitsuhiko): this is terrible for translators but i'm too
+    // lazy to change this up right now.  This should be a format string
+
     if (defined(data.filename || data.module)) {
       title.push(<code key="filename">{data.filename || data.module}</code>);
       if (isUrl(data.absPath)) {
         title.push(<a href={data.absPath} className="icon-open" key="share" target="_blank" />);
       }
       if (defined(data.function)) {
-        title.push(<span className="in-at" key="in"> in </span>);
+        title.push(<span className="in-at" key="in"> {t('in')} </span>);
       }
     }
 
@@ -88,7 +98,7 @@ const Frame = React.createClass({
     if (defined(data.lineNo)) {
       // TODO(dcramer): we need to implement source mappings
       // title.push(<span className="pull-right blame"><a><span className="icon-mark-github"></span> View Code</a></span>);
-      title.push(<span className="in-at" key="at"> at line </span>);
+      title.push(<span className="in-at" key="at"> {t('at line')} </span>);
       if (defined(data.colNo)) {
         title.push(<code key="line">{data.lineNo}:{data.colNo}</code>);
       } else {
@@ -105,7 +115,7 @@ const Frame = React.createClass({
     }
 
     if (data.inApp) {
-      title.push(<span key="in-app"><span className="divider"/>application</span>);
+      title.push(<span key="in-app"><span className="divider"/>{t('application')}</span>);
     }
     return title;
   },
@@ -181,7 +191,7 @@ const Frame = React.createClass({
         <p>{this.renderTitle()}
           {context ?
             <a
-              title="Toggle context"
+              title={t('Toggle context')}
               onClick={this.toggleContext}
               className="btn btn-sm btn-default btn-toggle">
               <span className={this.state.isExpanded ? 'icon-minus' : 'icon-plus'}/>
diff --git a/src/sentry/static/sentry/app/components/events/interfaces/requestActions.jsx b/src/sentry/static/sentry/app/components/events/interfaces/requestActions.jsx
index 544049d3d1..2f0efb6ba2 100644
--- a/src/sentry/static/sentry/app/components/events/interfaces/requestActions.jsx
+++ b/src/sentry/static/sentry/app/components/events/interfaces/requestActions.jsx
@@ -1,5 +1,6 @@
 import React from 'react';
 import ConfigStore from '../../../stores/configStore';
+import {t} from '../../../locale';
 
 const RequestActions = React.createClass({
   render(){
@@ -14,9 +15,9 @@ const RequestActions = React.createClass({
 
     return (
       <a href={urlPrefix + '/events/' + evt.id + '/replay/'}
-         className="btn btn-sm btn-default">Replay Request</a>
+         className="btn btn-sm btn-default">{t('Replay Request')}</a>
     );
   }
 });
 
-export default RequestActions;
\ No newline at end of file
+export default RequestActions;
diff --git a/src/sentry/static/sentry/app/components/events/interfaces/richHttpContent.jsx b/src/sentry/static/sentry/app/components/events/interfaces/richHttpContent.jsx
index f44da33abb..146bb022cd 100644
--- a/src/sentry/static/sentry/app/components/events/interfaces/richHttpContent.jsx
+++ b/src/sentry/static/sentry/app/components/events/interfaces/richHttpContent.jsx
@@ -6,6 +6,7 @@ import ContextData from '../../contextData';
 
 import {objectIsEmpty} from '../../../utils';
 import queryString from 'query-string';
+import {t} from '../../../locale';
 
 const RichHttpContent = React.createClass({
 
@@ -65,34 +66,34 @@ const RichHttpContent = React.createClass({
     return (
       <div>
         {data.query &&
-          <ClippedBox title="Query String">
+          <ClippedBox title={t('Query String')}>
             {this.getQueryStringOrRaw(data.query)}
           </ClippedBox>
         }
         {data.fragment &&
-          <ClippedBox title="Fragment">
+          <ClippedBox title={t('Fragment')}>
             <pre>{data.fragment}</pre>
           </ClippedBox>
         }
 
         {data.data &&
-          <ClippedBox title="Body">
+          <ClippedBox title={t('Body')}>
             {this.getBodySection(data)}
           </ClippedBox>
         }
 
         {data.cookies && !objectIsEmpty(data.cookies) &&
-          <ClippedBox title="Cookies" defaultCollapsed>
+          <ClippedBox title={t('Cookies')} defaultCollapsed>
             <KeyValueList data={data.cookies} />
           </ClippedBox>
         }
         {!objectIsEmpty(data.headers) &&
-          <ClippedBox title="Headers">
+          <ClippedBox title={t('Headers')}>
             <KeyValueList data={data.headers} />
           </ClippedBox>
         }
         {!objectIsEmpty(data.env) &&
-          <ClippedBox title="Environment" defaultCollapsed>
+          <ClippedBox title={t('Environment')} defaultCollapsed>
             <KeyValueList data={this.objectToSortedTupleArray(data.env)}/>
           </ClippedBox>
         }
diff --git a/src/sentry/static/sentry/app/components/events/interfaces/stacktrace.jsx b/src/sentry/static/sentry/app/components/events/interfaces/stacktrace.jsx
index 8e5f75eb74..1c5d8b048d 100644
--- a/src/sentry/static/sentry/app/components/events/interfaces/stacktrace.jsx
+++ b/src/sentry/static/sentry/app/components/events/interfaces/stacktrace.jsx
@@ -4,6 +4,8 @@ import GroupEventDataSection from '../eventDataSection';
 import PropTypes from '../../../proptypes';
 import rawStacktraceContent from './rawStacktraceContent';
 import StacktraceContent from './stacktraceContent';
+import {t} from '../../../locale';
+
 
 const StacktraceInterface = React.createClass({
   propTypes: {
@@ -62,9 +64,9 @@ const StacktraceInterface = React.createClass({
         <h3>
           {'Stacktrace '}
           {newestFirst ?
-            <small>(most recent call last)</small>
+            <small>({t('most recent call last')})</small>
           :
-            <small>(most recent call first)</small>
+            <small>({t('most recent call first')})</small>
           }
         </h3>
       </div>
diff --git a/src/sentry/static/sentry/app/components/events/interfaces/template.jsx b/src/sentry/static/sentry/app/components/events/interfaces/template.jsx
index f23e4aec97..78b31b6526 100644
--- a/src/sentry/static/sentry/app/components/events/interfaces/template.jsx
+++ b/src/sentry/static/sentry/app/components/events/interfaces/template.jsx
@@ -2,6 +2,7 @@ import React from 'react';
 import GroupEventDataSection from '../eventDataSection';
 import PropTypes from '../../../proptypes';
 import Frame from './frame';
+import {t} from '../../../locale';
 
 const TemplateInterface = React.createClass({
   propTypes: {
@@ -21,7 +22,7 @@ const TemplateInterface = React.createClass({
         group={this.props.group}
         event={this.props.event}
         type={this.props.type}
-        title={<div>Template</div>}>
+        title={<div>{t('Template')}</div>}>
         <div className="traceback">
           <ul>
             <Frame data={this.props.data} isExpanded={true}/>
diff --git a/src/sentry/static/sentry/app/components/events/message.jsx b/src/sentry/static/sentry/app/components/events/message.jsx
index 7b8ea87258..84d33667a8 100644
--- a/src/sentry/static/sentry/app/components/events/message.jsx
+++ b/src/sentry/static/sentry/app/components/events/message.jsx
@@ -1,6 +1,7 @@
 import React from 'react';
 import EventDataSection from './eventDataSection';
 import utils from '../../utils';
+import {t} from '../../locale';
 
 const Message = React.createClass({
   render() {
@@ -9,7 +10,7 @@ const Message = React.createClass({
           group={this.props.group}
           event={this.props.event}
           type="message"
-          title="Message">
+          title={t('Message')}>
         <pre className="plain" dangerouslySetInnerHTML={{
           __html: utils.nl2br(utils.urlize(utils.escape(this.props.event.message)))
         }} />
diff --git a/src/sentry/static/sentry/app/components/events/packageData.jsx b/src/sentry/static/sentry/app/components/events/packageData.jsx
index c353b779c1..b9b1b04d11 100644
--- a/src/sentry/static/sentry/app/components/events/packageData.jsx
+++ b/src/sentry/static/sentry/app/components/events/packageData.jsx
@@ -5,6 +5,7 @@ import {objectToArray} from '../../utils';
 import EventDataSection from './eventDataSection';
 import ClippedBox from '../clippedBox';
 import KeyValueList from './interfaces/keyValueList';
+import {t} from '../../locale';
 
 const EventPackageData = React.createClass({
   propTypes: {
@@ -24,7 +25,7 @@ const EventPackageData = React.createClass({
           group={this.props.group}
           event={this.props.event}
           type="packages"
-          title="Packages">
+          title={t('Packages')}>
         <ClippedBox>
           <KeyValueList data={packages} />
         </ClippedBox>
diff --git a/src/sentry/static/sentry/app/components/events/user.jsx b/src/sentry/static/sentry/app/components/events/user.jsx
index 7bf98eddc0..21689df0ea 100644
--- a/src/sentry/static/sentry/app/components/events/user.jsx
+++ b/src/sentry/static/sentry/app/components/events/user.jsx
@@ -3,6 +3,7 @@ import React from 'react';
 import Gravatar from '../../components/gravatar';
 import KeyValueList from './interfaces/keyValueList';
 import EventDataSection from './eventDataSection';
+import {t} from '../../locale';
 
 
 const EventUser = React.createClass({
@@ -27,7 +28,7 @@ const EventUser = React.createClass({
           group={this.props.group}
           event={this.props.event}
           type="user"
-          title="User">
+          title={t('User')}>
         <div className="user-widget">
           <div className="pull-left"><Gravatar email={user.email} size={96} /></div>
           <KeyValueList data={builtins} isContextData={false} />
diff --git a/src/sentry/static/sentry/app/components/group/chart.jsx b/src/sentry/static/sentry/app/components/group/chart.jsx
index 48158d2973..ce6e976a5e 100644
--- a/src/sentry/static/sentry/app/components/group/chart.jsx
+++ b/src/sentry/static/sentry/app/components/group/chart.jsx
@@ -2,6 +2,8 @@ import React from 'react';
 import BarChart from '../../components/barChart';
 import PropTypes from '../../proptypes';
 import PureRenderMixin from 'react-addons-pure-render-mixin';
+import {t} from '../../locale';
+
 
 const GroupChart = React.createClass({
   propTypes: {
@@ -25,14 +27,14 @@ const GroupChart = React.createClass({
     let lastSeenX = new Date(this.props.lastSeen).getTime() / 1000;
     if (firstSeenX >= points[0].x) {
       markers.push({
-        label: 'First seen',
+        label: t('First seen'),
         x: firstSeenX,
         className: 'first-seen'
       });
     }
     if (lastSeenX >= points[0].x) {
       markers.push({
-        label: 'Last seen',
+        label: t('Last seen'),
         x: lastSeenX,
         className: 'last-seen'
       });
diff --git a/src/sentry/static/sentry/app/components/group/seenInfo.jsx b/src/sentry/static/sentry/app/components/group/seenInfo.jsx
index e01a1a83a3..1778a531ae 100644
--- a/src/sentry/static/sentry/app/components/group/seenInfo.jsx
+++ b/src/sentry/static/sentry/app/components/group/seenInfo.jsx
@@ -3,6 +3,7 @@ import DateTime from '../../components/dateTime';
 import TimeSince from '../../components/timeSince';
 import Version from '../../components/version';
 import utils from '../../utils';
+import {t} from '../../locale';
 
 const SeenInfo = React.createClass({
   propTypes: {
@@ -18,12 +19,12 @@ const SeenInfo = React.createClass({
     let {date, release} = this.props;
     return (
       <dl>
-        <dt key={0}>When:</dt>
+        <dt key={0}>{t('When')}:</dt>
         <dd key={1}><TimeSince date={date} /></dd>
-        <dt key={2}>Date:</dt>
+        <dt key={2}>{t('Date')}:</dt>
         <dd key={3}><DateTime date={date} seconds={true} /></dd>
         {utils.defined(release) && [
-          <dt key={4}>Release:</dt>,
+          <dt key={4}>{t('Release')}:</dt>,
           <dd key={5}><Version orgId={this.props.orgId} projectId={this.props.projectId} version={release.version} /></dd>
         ]}
       </dl>
diff --git a/src/sentry/static/sentry/app/components/group/sidebar.jsx b/src/sentry/static/sentry/app/components/group/sidebar.jsx
index 49ffca2a59..392b1c591f 100644
--- a/src/sentry/static/sentry/app/components/group/sidebar.jsx
+++ b/src/sentry/static/sentry/app/components/group/sidebar.jsx
@@ -3,6 +3,7 @@ import GroupChart from './chart';
 import GroupState from '../../mixins/groupState';
 import SeenInfo from './seenInfo';
 import TagDistributionMeter from './tagDistributionMeter';
+import {t} from '../../locale';
 
 const GroupSidebar = React.createClass({
   mixins: [GroupState],
@@ -15,30 +16,30 @@ const GroupSidebar = React.createClass({
     return (
       <div className="group-stats">
         <GroupChart statsPeriod="24h" group={group}
-                    title="Last 24 Hours"
+                    title={t('Last 24 Hours')}
                     firstSeen={group.firstSeen}
                     lastSeen={group.lastSeen} />
         <GroupChart statsPeriod="30d" group={group}
-                    title="Last 30 Days"
+                    title={t('Last 30 Days')}
                     className="bar-chart-small"
                     firstSeen={group.firstSeen}
                     lastSeen={group.lastSeen} />
 
-        <h6 className="first-seen"><span>First seen</span></h6>
+        <h6 className="first-seen"><span>{t('First seen')}</span></h6>
         <SeenInfo
             orgId={orgId}
             projectId={projectId}
             date={group.firstSeen}
             release={group.firstRelease} />
 
-        <h6 className="last-seen"><span>Last seen</span></h6>
+        <h6 className="last-seen"><span>{t('Last seen')}</span></h6>
         <SeenInfo
             orgId={orgId}
             projectId={projectId}
             date={group.lastSeen}
             release={group.lastRelease} />
 
-        <h6><span>Tags</span></h6>
+        <h6><span>{t('Tags')}</span></h6>
         {group.tags.map((data) => {
           return (
             <TagDistributionMeter
diff --git a/src/sentry/static/sentry/app/components/header/broadcasts.jsx b/src/sentry/static/sentry/app/components/header/broadcasts.jsx
index e34405e21d..52f01a7cf7 100644
--- a/src/sentry/static/sentry/app/components/header/broadcasts.jsx
+++ b/src/sentry/static/sentry/app/components/header/broadcasts.jsx
@@ -3,6 +3,7 @@ import React from 'react';
 import api from '../../api';
 import DropdownLink from '../dropdownLink';
 import LoadingIndicator from '../loadingIndicator';
+import {t} from '../../locale';
 
 var Broadcasts = React.createClass({
   getInitialState() {
@@ -110,7 +111,7 @@ var Broadcasts = React.createClass({
         {loading ?
           <li><LoadingIndicator /></li>
         : (broadcasts.length === 0 ?
-          <li className="empty">No recent broadcasts from the Sentry team.</li>
+          <li className="empty">{t('No recent broadcasts from the Sentry team.')}</li>
         :
           broadcasts.map((item) => {
             return (
@@ -120,7 +121,7 @@ var Broadcasts = React.createClass({
                 }
                 {item.message}
                 {item.link &&
-                  <a href={item.link} className="read-more">Read more</a>
+                  <a href={item.link} className="read-more">{t('Read more')}</a>
                 }
               </li>
             );
diff --git a/src/sentry/static/sentry/app/components/header/organizationSelector.jsx b/src/sentry/static/sentry/app/components/header/organizationSelector.jsx
index 039ca48cb5..19b03015f6 100644
--- a/src/sentry/static/sentry/app/components/header/organizationSelector.jsx
+++ b/src/sentry/static/sentry/app/components/header/organizationSelector.jsx
@@ -5,6 +5,7 @@ import DropdownLink from '../dropdownLink';
 import AppState from '../../mixins/appState';
 import OrganizationStore from '../../stores/organizationStore';
 import ConfigStore from '../../stores/configStore';
+import {t} from '../../locale';
 
 const OrganizationSelector = React.createClass({
   mixins: [
@@ -43,7 +44,7 @@ const OrganizationSelector = React.createClass({
           <MenuItem divider={true} />
         }
         {features.has('organizations:create') &&
-          <MenuItem href={urlPrefix + '/organizations/new/'}>New Organization</MenuItem>
+          <MenuItem href={urlPrefix + '/organizations/new/'}>{t('New Organization')}</MenuItem>
         }
       </DropdownLink>
     );
diff --git a/src/sentry/static/sentry/app/components/header/userNav.jsx b/src/sentry/static/sentry/app/components/header/userNav.jsx
index 40abcc0184..983e893f21 100644
--- a/src/sentry/static/sentry/app/components/header/userNav.jsx
+++ b/src/sentry/static/sentry/app/components/header/userNav.jsx
@@ -3,6 +3,7 @@ import ConfigStore from '../../stores/configStore';
 import DropdownLink from '../dropdownLink';
 import Gravatar from '../gravatar';
 import MenuItem from '../menuItem';
+import {t} from '../../locale';
 
 const UserNav = React.createClass({
   shouldComponentUpdate(nextProps, nextState) {
@@ -27,11 +28,11 @@ const UserNav = React.createClass({
           topLevelClasses={this.props.className}
           menuClasses="dropdown-menu-right"
           title={title}>
-        <MenuItem href={urlPrefix + '/account/settings/'}>Account</MenuItem>
+        <MenuItem href={urlPrefix + '/account/settings/'}>{t('Account')}</MenuItem>
         {user.isSuperuser &&
-          <MenuItem to="/manage/">Admin</MenuItem>
+          <MenuItem to="/manage/">{t('Admin')}</MenuItem>
         }
-        <MenuItem href={urlPrefix + '/auth/logout/'}>Sign out</MenuItem>
+        <MenuItem href={urlPrefix + '/auth/logout/'}>{t('Sign out')}</MenuItem>
       </DropdownLink>
     );
   }
diff --git a/src/sentry/static/sentry/app/components/organizations/homeSidebar.jsx b/src/sentry/static/sentry/app/components/organizations/homeSidebar.jsx
index 01c060f7a4..76ace96b2a 100644
--- a/src/sentry/static/sentry/app/components/organizations/homeSidebar.jsx
+++ b/src/sentry/static/sentry/app/components/organizations/homeSidebar.jsx
@@ -5,6 +5,7 @@ import OrganizationState from '../../mixins/organizationState';
 
 import ConfigStore from '../../stores/configStore';
 import HookStore from '../../stores/hookStore';
+import {t} from '../../locale';
 
 const HomeSidebar = React.createClass({
   mixins: [OrganizationState],
@@ -24,16 +25,16 @@ const HomeSidebar = React.createClass({
     let orgId = org.slug;
     return (
       <div>
-        <h6 className="nav-header">General</h6>
+        <h6 className="nav-header">{t('General')}</h6>
         <ul className="nav nav-stacked">
-          <ListLink to={`/${orgId}/`}>Projects</ListLink>
+          <ListLink to={`/${orgId}/`}>{t('Projects')}</ListLink>
           {access.has('org:read') &&
-            <ListLink to={`/organizations/${orgId}/stats/`}>Stats</ListLink>
+            <ListLink to={`/organizations/${orgId}/stats/`}>{t('Stats')}</ListLink>
           }
         </ul>
         {access.has('org:read') &&
           <div>
-            <h6 className="nav-header">Manage</h6>
+            <h6 className="nav-header">{t('Manage')}</h6>
             <ul className="nav nav-stacked">
               {access.has('org:read') &&
                 <li>
@@ -46,16 +47,16 @@ const HomeSidebar = React.createClass({
                 </li>
               }
               {features.has('sso') && access.has('org:write') &&
-                <li><a href={urlPrefix + '/auth/'}>Auth</a></li>
+                <li><a href={urlPrefix + '/auth/'}>{t('Auth')}</a></li>
               }
               {access.has('org:write') &&
-                <li><a href={urlPrefix + '/api-keys/'}>API Keys</a></li>
+                <li><a href={urlPrefix + '/api-keys/'}>{t('API Keys')}</a></li>
               }
               {access.has('org:write') &&
-                <li><a href={urlPrefix + '/audit-log/'}>Audit Log</a></li>
+                <li><a href={urlPrefix + '/audit-log/'}>{t('Audit Log')}</a></li>
               }
               {access.has('org:write') &&
-                <li><a href={urlPrefix + '/settings/'}>Settings</a></li>
+                <li><a href={urlPrefix + '/settings/'}>{t('Settings')}</a></li>
               }
             </ul>
           </div>
diff --git a/src/sentry/static/sentry/app/components/projectHeader/index.jsx b/src/sentry/static/sentry/app/components/projectHeader/index.jsx
index 2b04d111d1..17e3d069fa 100644
--- a/src/sentry/static/sentry/app/components/projectHeader/index.jsx
+++ b/src/sentry/static/sentry/app/components/projectHeader/index.jsx
@@ -3,6 +3,7 @@ import {Link} from 'react-router';
 import ConfigStore from '../../stores/configStore';
 
 import ProjectSelector from './projectSelector';
+import {t} from '../../locale';
 
 const ProjectHeader = React.createClass({
   render() {
@@ -20,23 +21,23 @@ const ProjectHeader = React.createClass({
               <ul className="nav nav-tabs">
                 <li className={navSection == 'dashboard' ? 'active' : ''}>
                   <Link to={`/${org.slug}/${project.slug}/dashboard/`}>
-                    Dashboard
+                    {t('Dashboard')}
                   </Link>
                 </li>
                 <li className={navSection == 'stream' ? 'active' : ''}>
                   <Link to={`/${org.slug}/${project.slug}/`}>
-                    Issues
+                    {t('Issues')}
                   </Link>
                 </li>
                 <li className={navSection == 'releases' ? 'active' : ''}>
                   <Link to={`/${org.slug}/${project.slug}/releases/`}>
-                    Releases
+                    {t('Releases')}
                   </Link>
                 </li>
                 {access.has('project:write') &&
                   <li className={navSection == 'settings' ? 'active' : ''}>
                     <a href={urlPrefix + `/${org.slug}/${project.slug}/settings/`}>
-                      Settings
+                      {t('Settings')}
                     </a>
                   </li>
                 }
diff --git a/src/sentry/static/sentry/app/components/projectHeader/projectSelector.jsx b/src/sentry/static/sentry/app/components/projectHeader/projectSelector.jsx
index 0c64456ce1..70cb736d0d 100644
--- a/src/sentry/static/sentry/app/components/projectHeader/projectSelector.jsx
+++ b/src/sentry/static/sentry/app/components/projectHeader/projectSelector.jsx
@@ -5,6 +5,7 @@ import jQuery from 'jquery';
 import ConfigStore from '../../stores/configStore';
 import DropdownLink from '../dropdownLink';
 import MenuItem from '../menuItem';
+import {t} from '../../locale';
 
 const ProjectSelector = React.createClass({
   contextTypes: {
@@ -164,7 +165,7 @@ const ProjectSelector = React.createClass({
             <input
               value={this.state.filter}
               type="text"
-              placeholder="Filter projects"
+              placeholder={t('Filter projects')}
               onChange={this.onFilterChange}
               onKeyUp={this.onKeyUp}
               onBlur={this.onFilterBlur}
