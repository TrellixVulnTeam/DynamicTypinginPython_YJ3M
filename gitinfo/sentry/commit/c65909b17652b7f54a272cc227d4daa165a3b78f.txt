commit c65909b17652b7f54a272cc227d4daa165a3b78f
Author: Billy Vong <billyvg@users.noreply.github.com>
Date:   Wed Sep 12 11:02:24 2018 -0700

    ref(tests): Clean up disabled tests (#8252)

diff --git a/package.json b/package.json
index f76c8d796a..ccaf033feb 100644
--- a/package.json
+++ b/package.json
@@ -161,7 +161,7 @@
     "enzyme-to-json": "3.3.1",
     "eslint": "4.4.1",
     "eslint-config-prettier": "^2.3.0",
-    "eslint-config-sentry-react": "1.1.0",
+    "eslint-config-sentry-react": "1.3.1",
     "eslint-import-resolver-webpack": "^0.8.3",
     "eslint-plugin-getsentry": "1.0.0",
     "eslint-plugin-import": "^2.7.0",
diff --git a/src/sentry/static/sentry/app/__mocks__/jquery.jsx b/src/sentry/static/sentry/app/__mocks__/jquery.jsx
index ea89f77433..f5c096852e 100644
--- a/src/sentry/static/sentry/app/__mocks__/jquery.jsx
+++ b/src/sentry/static/sentry/app/__mocks__/jquery.jsx
@@ -8,4 +8,6 @@ let jq = {
   addClass: () => jq,
 };
 
-export default () => jq;
+const jqMock = () => jq;
+
+export default jqMock;
diff --git a/src/sentry/static/sentry/app/components/events/interfaces/message.jsx b/src/sentry/static/sentry/app/components/events/interfaces/message.jsx
index ca455029fc..ba95a137a5 100644
--- a/src/sentry/static/sentry/app/components/events/interfaces/message.jsx
+++ b/src/sentry/static/sentry/app/components/events/interfaces/message.jsx
@@ -10,7 +10,6 @@ class MessageInterface extends React.Component {
   static propTypes = {
     group: SentryTypes.Group.isRequired,
     event: SentryTypes.Event.isRequired,
-    type: PropTypes.string.isRequired,
     data: PropTypes.object.isRequired,
   };
 
diff --git a/src/sentry/static/sentry/app/components/events/interfaces/request.jsx b/src/sentry/static/sentry/app/components/events/interfaces/request.jsx
index 9644f4aa70..5de2b895eb 100644
--- a/src/sentry/static/sentry/app/components/events/interfaces/request.jsx
+++ b/src/sentry/static/sentry/app/components/events/interfaces/request.jsx
@@ -15,7 +15,6 @@ class RequestInterface extends React.Component {
     event: SentryTypes.Event.isRequired,
     type: PropTypes.string.isRequired,
     data: PropTypes.object.isRequired,
-    isShare: PropTypes.bool,
   };
 
   static contextTypes = {
diff --git a/src/sentry/static/sentry/app/mixins/tooltip.jsx b/src/sentry/static/sentry/app/mixins/tooltip.jsx
index 70ece50a00..15b01a6752 100644
--- a/src/sentry/static/sentry/app/mixins/tooltip.jsx
+++ b/src/sentry/static/sentry/app/mixins/tooltip.jsx
@@ -2,7 +2,7 @@ import ReactDOM from 'react-dom';
 import $ from 'jquery';
 import 'bootstrap/js/tooltip';
 
-export default function(options) {
+export default function tooltipMixin(options) {
   options = options || {};
   return {
     componentDidMount() {
diff --git a/src/sentry/static/sentry/app/utils/parseLinkHeader.jsx b/src/sentry/static/sentry/app/utils/parseLinkHeader.jsx
index 9f0d127ef6..362570ceea 100644
--- a/src/sentry/static/sentry/app/utils/parseLinkHeader.jsx
+++ b/src/sentry/static/sentry/app/utils/parseLinkHeader.jsx
@@ -1,4 +1,4 @@
-export default function(header) {
+export default function parseLinkHeader(header) {
   if (header === null) {
     return {};
   }
diff --git a/src/sentry/static/sentry/app/views/admin/adminLayout.jsx b/src/sentry/static/sentry/app/views/admin/adminLayout.jsx
index 091fb9d145..bba0ca1482 100644
--- a/src/sentry/static/sentry/app/views/admin/adminLayout.jsx
+++ b/src/sentry/static/sentry/app/views/admin/adminLayout.jsx
@@ -7,7 +7,7 @@ import Sidebar from 'app/components/sidebar';
 import HookStore from 'app/stores/hookStore';
 import ListLink from 'app/components/listLink';
 
-export default class extends React.Component {
+export default class AdminLayout extends React.Component {
   constructor(props) {
     super(props);
     // Allow injection via getsentry et all
diff --git a/tests/js/helpers/stubReactComponent.jsx b/tests/js/helpers/stubReactComponent.jsx
index 275d9f1aa4..735c0f067e 100644
--- a/tests/js/helpers/stubReactComponent.jsx
+++ b/tests/js/helpers/stubReactComponent.jsx
@@ -5,6 +5,7 @@ import React from 'react';
 let divFactory = React.createFactory('div');
 let originalCreateElement = React.createElement;
 
+// eslint-disable-next-line import/no-anonymous-default-export
 export default function(stubber, stubbedComponents) {
   stubber.stub(React, 'createElement', function(component, props) {
     props = props || {};
diff --git a/tests/js/spec/components/pluginIcon.spec.jsx b/tests/js/spec/components/pluginIcon.spec.jsx
index e9440df9cd..97176a7d94 100644
--- a/tests/js/spec/components/pluginIcon.spec.jsx
+++ b/tests/js/spec/components/pluginIcon.spec.jsx
@@ -14,6 +14,7 @@ describe('PluginIcon', function() {
   });
 
   // doesn't work because of the above comment
+  // eslint-disable-next-line jest/no-disabled-tests
   it.skip('renders with default icon with invalid plugin id', function() {
     let wrapper = shallow(<PluginIcon pluginId="invalid" size={20} />);
     expect(wrapper).toMatchSnapshot();
diff --git a/tests/js/spec/views/accountDetail.spec.jsx b/tests/js/spec/views/accountDetail.spec.jsx
index a2837a8bb2..ba69f60c25 100644
--- a/tests/js/spec/views/accountDetail.spec.jsx
+++ b/tests/js/spec/views/accountDetail.spec.jsx
@@ -42,15 +42,13 @@ describe('AccountDetails', function() {
   });
 
   describe('Managed User', function() {
-    // I don't think this test expectation is accurate
-    // eslint-disable-next-line jest/no-disabled-tests
-    it.skip('does not have password fields', function() {
+    it('does not have password fields', function() {
       mockUserDetails({isManaged: true});
       let wrapper = mount(<AccountDetails location={{}} />, TestStubs.routerContext());
 
       expect(wrapper.find('input[name="name"]')).toHaveLength(1);
       expect(wrapper.find('input[name="password"]')).toHaveLength(0);
-      expect(wrapper.find('input[name="passwordVierfy"]')).toHaveLength(0);
+      expect(wrapper.find('input[name="passwordVerify"]')).toHaveLength(0);
     });
 
     it('has disabled username field if it is different than email', function() {
diff --git a/tests/js/spec/views/accountSecurityEnroll.spec.jsx b/tests/js/spec/views/accountSecurityEnroll.spec.jsx
index dbc7b0cda0..7d1d7a9603 100644
--- a/tests/js/spec/views/accountSecurityEnroll.spec.jsx
+++ b/tests/js/spec/views/accountSecurityEnroll.spec.jsx
@@ -71,51 +71,4 @@ describe('AccountSecurityEnroll', function() {
       );
     });
   });
-
-  // eslint-disable-next-line jest/no-disabled-tests
-  describe.skip('Recovery', function() {
-    beforeEach(function() {
-      Client.clearMockResponses();
-      Client.addMockResponse({
-        url: `${ENDPOINT}16/`,
-        body: TestStubs.Authenticators().Recovery(),
-      });
-      wrapper = mount(
-        <AccountSecurityEnroll />,
-        TestStubs.routerContext([
-          {
-            router: {
-              ...TestStubs.router(),
-              params: {
-                authId: 16,
-              },
-            },
-          },
-        ])
-      );
-    });
-
-    it('has enrolled circle indicator', function() {
-      expect(wrapper.find('CircleIndicator').prop('enabled')).toBe(true);
-    });
-
-    it('has created and last used dates', function() {
-      expect(wrapper.find('AuthenticatorDate')).toHaveLength(2);
-    });
-
-    it('does not have remove button', function() {
-      expect(wrapper.find('RemoveConfirm')).toHaveLength(0);
-    });
-
-    it('regenerates codes', function() {
-      let deleteMock = Client.addMockResponse({
-        url: `${ENDPOINT}16/`,
-        method: 'PUT',
-      });
-
-      wrapper.find('RecoveryCodes').prop('onRegenerateBackupCodes')();
-
-      expect(deleteMock).toHaveBeenCalled();
-    });
-  });
 });
diff --git a/tests/js/spec/views/projectTags.spec.jsx b/tests/js/spec/views/projectTags.spec.jsx
index 77e20fdd0b..7477ac963a 100644
--- a/tests/js/spec/views/projectTags.spec.jsx
+++ b/tests/js/spec/views/projectTags.spec.jsx
@@ -29,7 +29,7 @@ describe('ProjectTags', function() {
     );
   });
 
-  it.skip('renders empty', function() {
+  it('renders empty', function() {
     MockApiClient.clearMockResponses();
     MockApiClient.addMockResponse({
       url: `/projects/${org.slug}/${project.slug}/tags/`,
diff --git a/yarn.lock b/yarn.lock
index 346e9b67c6..4a585e7c77 100644
--- a/yarn.lock
+++ b/yarn.lock
@@ -3790,9 +3790,9 @@ eslint-config-prettier@^2.3.0:
   dependencies:
     get-stdin "^5.0.1"
 
-eslint-config-sentry-react@1.1.0:
-  version "1.1.0"
-  resolved "https://registry.yarnpkg.com/eslint-config-sentry-react/-/eslint-config-sentry-react-1.1.0.tgz#9112e05e5193c34672b18ebdedd507d0899f035a"
+eslint-config-sentry-react@1.3.1:
+  version "1.3.1"
+  resolved "https://registry.yarnpkg.com/eslint-config-sentry-react/-/eslint-config-sentry-react-1.3.1.tgz#114359f28a4f87a26a0ae76f1886ae7de49407fd"
   dependencies:
     eslint-config-sentry "^1.0.4"
 
