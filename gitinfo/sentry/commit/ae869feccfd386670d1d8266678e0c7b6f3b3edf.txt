commit ae869feccfd386670d1d8266678e0c7b6f3b3edf
Author: David Cramer <dcramer@gmail.com>
Date:   Tue Mar 10 13:51:35 2015 -0700

    Allow DELETE on org members without scope

diff --git a/src/sentry/api/endpoints/organization_member_details.py b/src/sentry/api/endpoints/organization_member_details.py
index 8a11f65b63..62b1942c90 100644
--- a/src/sentry/api/endpoints/organization_member_details.py
+++ b/src/sentry/api/endpoints/organization_member_details.py
@@ -3,7 +3,9 @@ from __future__ import absolute_import
 from rest_framework import serializers
 from rest_framework.response import Response
 
-from sentry.api.bases.organization import OrganizationEndpoint
+from sentry.api.bases.organization import (
+    OrganizationEndpoint, OrganizationPermission
+)
 from sentry.api.exceptions import ResourceDoesNotExist
 from sentry.models import (
     AuditLogEntry, AuditLogEntryEvent, AuthProvider, OrganizationMember,
@@ -21,6 +23,18 @@ class OrganizationMemberSerializer(serializers.Serializer):
     reinvite = serializers.BooleanField()
 
 
+class RelaxedOrganizationPermission(OrganizationPermission):
+    scope_map = {
+        'GET': ['org:read', 'org:write', 'org:delete'],
+        'POST': ['org:write', 'org:delete'],
+        'PUT': ['org:write', 'org:delete'],
+
+        # DELETE checks for role comparison as you can either remove a member
+        # with a lower access role, or yourself, without having the req. scope
+        'DELETE': ['org:read', 'org:write', 'org:delete'],
+    }
+
+
 class OrganizationMemberDetailsEndpoint(OrganizationEndpoint):
     def _is_only_owner(self, member):
         if member.type != OrganizationMemberType.OWNER:
