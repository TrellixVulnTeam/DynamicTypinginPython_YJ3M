commit 4299cf947868f7f4738df642b09ce697fa66e60d
Author: David Cramer <dcramer@gmail.com>
Date:   Fri Mar 16 15:45:23 2018 -0700

    feat: Change organization and project lists to default to member-only

diff --git a/src/sentry/api/endpoints/organization_index.py b/src/sentry/api/endpoints/organization_index.py
index 4b26740695..f9f0ba9ab3 100644
--- a/src/sentry/api/endpoints/organization_index.py
+++ b/src/sentry/api/endpoints/organization_index.py
@@ -69,7 +69,6 @@ class OrganizationIndexEndpoint(Endpoint):
 
         :auth: required
         """
-        member_only = request.GET.get('member') in ('1', 'true')
         owner_only = request.GET.get('owner') in ('1', 'true')
 
         queryset = Organization.objects.all()
@@ -97,7 +96,7 @@ class OrganizationIndexEndpoint(Endpoint):
 
             return Response(org_results)
 
-        elif member_only or not is_active_superuser(request):
+        elif not (is_active_superuser(request) and request.GET.get('show') == 'all'):
             queryset = queryset.filter(
                 id__in=OrganizationMember.objects.filter(
                     user=request.user,
diff --git a/src/sentry/api/endpoints/project_index.py b/src/sentry/api/endpoints/project_index.py
index 94bdf39a80..e3e6a8c805 100644
--- a/src/sentry/api/endpoints/project_index.py
+++ b/src/sentry/api/endpoints/project_index.py
@@ -60,7 +60,7 @@ class ProjectIndexEndpoint(Endpoint):
                 )
             else:
                 queryset = queryset.none()
-        elif not is_active_superuser(request):
+        elif not (is_active_superuser(request) and request.GET.get('show') == 'all'):
             queryset = queryset.filter(
                 teams__organizationmember__user=request.user,
             )
@@ -84,6 +84,8 @@ class ProjectIndexEndpoint(Endpoint):
                     )
                 elif key == 'id':
                     queryset = queryset.filter(id__in=value)
+                else:
+                    queryset = queryset.none()
 
         return self.paginate(
             request=request,
diff --git a/src/sentry/static/sentry/app/views/adminOrganizations.jsx b/src/sentry/static/sentry/app/views/adminOrganizations.jsx
index 99ffe9ef5a..5feaf744da 100644
--- a/src/sentry/static/sentry/app/views/adminOrganizations.jsx
+++ b/src/sentry/static/sentry/app/views/adminOrganizations.jsx
@@ -27,7 +27,7 @@ class AdminOrganizations extends React.Component {
         <h3>{t('Organizations')}</h3>
         <ResultGrid
           path="/manage/organizations/"
-          endpoint={'/organizations/'}
+          endpoint={'/organizations/?show=all'}
           method="GET"
           columns={columns}
           columnsForRow={this.getRow}
diff --git a/src/sentry/static/sentry/app/views/adminProjects.jsx b/src/sentry/static/sentry/app/views/adminProjects.jsx
index 74499777c8..7af6e694ed 100644
--- a/src/sentry/static/sentry/app/views/adminProjects.jsx
+++ b/src/sentry/static/sentry/app/views/adminProjects.jsx
@@ -37,7 +37,7 @@ class AdminProjects extends React.Component {
         <h3>{t('Projects')}</h3>
         <ResultGrid
           path="/manage/projects/"
-          endpoint={'/projects/'}
+          endpoint={'/projects/?show=all'}
           method="GET"
           columns={columns}
           columnsForRow={this.getRow}
diff --git a/tests/sentry/api/endpoints/test_organization_index.py b/tests/sentry/api/endpoints/test_organization_index.py
index faaffcccf7..ba23a70008 100644
--- a/tests/sentry/api/endpoints/test_organization_index.py
+++ b/tests/sentry/api/endpoints/test_organization_index.py
@@ -10,18 +10,31 @@ from sentry.testutils import APITestCase, TwoFactorAPITestCase
 
 
 class OrganizationsListTest(APITestCase):
-    @fixture
-    def path(self):
-        return reverse('sentry-api-0-organizations')
+    path = '/api/0/organizations/'
 
     def test_membership(self):
         org = self.create_organization(owner=self.user)
         self.login_as(user=self.user)
-        response = self.client.get('{}?member=1'.format(self.path))
+        response = self.client.get('{}'.format(self.path))
         assert response.status_code == 200
         assert len(response.data) == 1
         assert response.data[0]['id'] == six.text_type(org.id)
 
+    def test_show_all_with_superuser(self):
+        org = self.organization
+        self.login_as(user=self.create_user(is_superuser=True), superuser=True)
+        response = self.client.get('{}?show=all'.format(self.path))
+        assert response.status_code == 200
+        assert len(response.data) == 2
+        assert response.data[0]['id'] == six.text_type(org.id)
+
+    def test_show_all_without_superuser(self):
+        self.create_organization(owner=self.user)
+        self.login_as(user=self.create_user(is_superuser=False))
+        response = self.client.get('{}?show=all'.format(self.path))
+        assert response.status_code == 200
+        assert len(response.data) == 0
+
     def test_ownership(self):
         org = self.create_organization(name="A", owner=self.user)
         user2 = self.create_user(email="user2@example.com")
@@ -68,9 +81,7 @@ class OrganizationsListTest(APITestCase):
 
 
 class OrganizationsCreateTest(APITestCase):
-    @fixture
-    def path(self):
-        return reverse('sentry-api-0-organizations')
+    path = '/api/0/organizations/'
 
     def test_missing_params(self):
         self.login_as(user=self.user)
diff --git a/tests/sentry/api/endpoints/test_project_index.py b/tests/sentry/api/endpoints/test_project_index.py
index ce9a2a07cb..6f713fd199 100644
--- a/tests/sentry/api/endpoints/test_project_index.py
+++ b/tests/sentry/api/endpoints/test_project_index.py
@@ -2,20 +2,15 @@ from __future__ import absolute_import
 
 import six
 
-from django.core.urlresolvers import reverse
-from exam import fixture
-
 from sentry.models import Project, ProjectStatus
 from sentry.testutils import APITestCase
 
 
 class ProjectsListTest(APITestCase):
-    @fixture
-    def path(self):
-        return reverse('sentry-api-0-projects')
+    path = '/api/0/projects/'
 
     def test_member_constraints(self):
-        user = self.create_user()
+        user = self.create_user(is_superuser=True)
         org = self.create_organization()
         team = self.create_team(organization=org, members=[user])
         project = self.create_project(teams=[team])
@@ -23,7 +18,7 @@ class ProjectsListTest(APITestCase):
         team2 = self.create_team(organization=org2, members=[])
         self.create_project(teams=[team2])
 
-        self.login_as(user=user)
+        self.login_as(user=user, superuser=True)
         response = self.client.get(self.path)
         assert response.status_code == 200
         assert len(response.data) == 1
@@ -31,7 +26,7 @@ class ProjectsListTest(APITestCase):
         assert response.data[0]['id'] == six.text_type(project.id)
         assert response.data[0]['organization']['id'] == six.text_type(org.id)
 
-    def test_superuser(self):
+    def test_show_all_with_superuser(self):
         Project.objects.all().delete()
 
         user = self.create_user(is_superuser=True)
@@ -43,10 +38,26 @@ class ProjectsListTest(APITestCase):
         self.create_project(organization=org2)
 
         self.login_as(user=user, superuser=True)
-        response = self.client.get(self.path)
+        response = self.client.get('{}?show=all'.format(self.path))
         assert response.status_code == 200
         assert len(response.data) == 2
 
+    def test_show_all_without_superuser(self):
+        Project.objects.all().delete()
+
+        user = self.create_user(is_superuser=False)
+
+        org = self.create_organization(owner=user)
+        self.create_project(organization=org)
+
+        org2 = self.create_organization()
+        self.create_project(organization=org2)
+
+        self.login_as(user=user)
+        response = self.client.get(self.path)
+        assert response.status_code == 200
+        assert len(response.data) == 0
+
     def test_status_filter(self):
         Project.objects.all().delete()
 
