commit e40edcc578cf7073cd81e07246380ae5184b3ee3
Author: Lauryn Brown <lauryndbrown@gmail.com>
Date:   Wed Oct 3 13:49:28 2018 -0700

    ref(integrations): Change IntegrationRepositoryProvider method names for clarity. (#9979)
    
    * Changed names to what made sense to me. Added doc strings for clarity.
    
    * Added docstring to integration repo provider.
    
    * renamed to on_delete_repository
    
    * removed todo comment
    
    * corrected delete repo function name change
    
    * change add_repo_data to get_repo_data

diff --git a/src/sentry/integrations/bitbucket/repository.py b/src/sentry/integrations/bitbucket/repository.py
index 1b29fc7a33..9106283c6c 100644
--- a/src/sentry/integrations/bitbucket/repository.py
+++ b/src/sentry/integrations/bitbucket/repository.py
@@ -27,7 +27,7 @@ class BitbucketRepositoryProvider(providers.IntegrationRepositoryProvider):
 
         return integration_model.get_installation(organization_id)
 
-    def validate_config(self, organization, config):
+    def get_repository_data(self, organization, config):
         installation = self.get_installation(config['installation'], organization.id)
         client = installation.get_client()
         try:
@@ -56,7 +56,7 @@ class BitbucketRepositoryProvider(providers.IntegrationRepositoryProvider):
                 )
         return secret
 
-    def create_repository(self, organization, data):
+    def build_repository_config(self, organization, data):
         installation = self.get_installation(data['installation'], organization.id)
         client = installation.get_client()
         try:
@@ -84,7 +84,7 @@ class BitbucketRepositoryProvider(providers.IntegrationRepositoryProvider):
                 'integration_id': data['installation'],
             }
 
-    def delete_repository(self, repo):
+    def on_delete_repository(self, repo):
         installation = self.get_installation(repo.integration_id, repo.organization_id)
         client = installation.get_client()
 
diff --git a/src/sentry/integrations/github/repository.py b/src/sentry/integrations/github/repository.py
index 5a673c6233..98df08c2c6 100644
--- a/src/sentry/integrations/github/repository.py
+++ b/src/sentry/integrations/github/repository.py
@@ -35,14 +35,7 @@ class GitHubRepositoryProvider(providers.IntegrationRepositoryProvider):
 
         return repo_data
 
-    def validate_config(self, organization, config):
-        """
-        ```
-        if config['foo'] and not config['bar']:
-            raise PluginError('You cannot configure foo with bar')
-        return config
-        ```
-        """
+    def get_repository_data(self, organization, config):
         integration = Integration.objects.get(
             id=config['installation'], organizations=organization)
         installation = integration.get_installation(organization.id)
@@ -54,7 +47,7 @@ class GitHubRepositoryProvider(providers.IntegrationRepositoryProvider):
 
         return config
 
-    def create_repository(self, organization, data):
+    def build_repository_config(self, organization, data):
         return {
             'name': data['identifier'],
             'external_id': data['external_id'],
diff --git a/src/sentry/integrations/github_enterprise/repository.py b/src/sentry/integrations/github_enterprise/repository.py
index 96d1e9e03f..1a255137db 100644
--- a/src/sentry/integrations/github_enterprise/repository.py
+++ b/src/sentry/integrations/github_enterprise/repository.py
@@ -29,7 +29,7 @@ class GitHubEnterpriseRepositoryProvider(GitHubRepositoryProvider):
 
         return repo_data
 
-    def create_repository(self, organization, data):
+    def build_repository_config(self, organization, data):
         integration = Integration.objects.get(
             id=data['integration_id'], provider=self.repo_provider)
 
diff --git a/src/sentry/integrations/vsts/repository.py b/src/sentry/integrations/vsts/repository.py
index 522b53ecc6..e58b9383ef 100644
--- a/src/sentry/integrations/vsts/repository.py
+++ b/src/sentry/integrations/vsts/repository.py
@@ -22,7 +22,7 @@ class VstsRepositoryProvider(providers.IntegrationRepositoryProvider):
 
         return integration_model.get_installation(organization_id)
 
-    def validate_config(self, organization, config):
+    def get_repository_data(self, organization, config):
         installation = self.get_installation(config['installation'], organization.id)
         client = installation.get_client()
         instance = installation.instance
@@ -42,7 +42,7 @@ class VstsRepositoryProvider(providers.IntegrationRepositoryProvider):
         })
         return config
 
-    def create_repository(self, organization, data):
+    def build_repository_config(self, organization, data):
         return {
             'name': data['name'],
             'external_id': data['external_id'],
diff --git a/src/sentry/models/repository.py b/src/sentry/models/repository.py
index f3d764464a..3fd1bb8c9d 100644
--- a/src/sentry/models/repository.py
+++ b/src/sentry/models/repository.py
@@ -83,7 +83,7 @@ def on_delete(instance, actor=None, **kwargs):
 
     if instance.has_integration_provider():
         try:
-            instance.get_provider().delete_repository(repo=instance)
+            instance.get_provider().on_delete_repository(repo=instance)
         except Exception as exc:
             handle_exception(exc)
     else:
diff --git a/src/sentry/plugins/providers/integration_repository.py b/src/sentry/plugins/providers/integration_repository.py
index f756ccb0c0..4fff8e4807 100644
--- a/src/sentry/plugins/providers/integration_repository.py
+++ b/src/sentry/plugins/providers/integration_repository.py
@@ -12,6 +12,10 @@ from sentry.signals import repo_linked
 
 
 class IntegrationRepositoryProvider(object):
+    """
+    Repository Provider for Integrations in the Sentry Repository.
+    Does not include plugins.
+    """
     name = None
     logger = None
     repo_provider = None
@@ -21,12 +25,12 @@ class IntegrationRepositoryProvider(object):
 
     def dispatch(self, request, organization, **kwargs):
         try:
-            config = self.validate_config(organization, request.DATA)
+            config = self.get_repository_data(organization, request.DATA)
         except Exception as e:
             return self.handle_api_error(e)
 
         try:
-            result = self.create_repository(
+            result = self.build_repository_config(
                 organization=organization,
                 data=config,
             )
@@ -62,7 +66,7 @@ class IntegrationRepositoryProvider(object):
                     provider=self.id,
                     integration_id=result.get('integration_id'),
                 )
-                self.delete_repository(repo)
+                self.on_delete_repository(repo)
             except IntegrationError:
                 pass
             return Response(
@@ -102,13 +106,19 @@ class IntegrationRepositoryProvider(object):
     def get_config(self, organization):
         raise NotImplementedError
 
-    def validate_config(self, organization, config):
+    def get_repository_data(self, organization, config):
+        """
+        Gets the necessary repository data through the integration's API
+        """
         return config
 
-    def create_repository(self, organization, data):
+    def build_repository_config(self, organization, data):
+        """
+        Builds final dict containing all necessary data to create the repository
+        """
         raise NotImplementedError
 
-    def delete_repository(self, repo):
+    def on_delete_repository(self, repo):
         pass
 
     def compare_commits(self, repo, start_sha, end_sha):
diff --git a/src/sentry/plugins/providers/repository.py b/src/sentry/plugins/providers/repository.py
index 1cc9b7e54d..6ee676f9d1 100644
--- a/src/sentry/plugins/providers/repository.py
+++ b/src/sentry/plugins/providers/repository.py
@@ -19,6 +19,12 @@ logger = getLogger('sentry.integrations')
 
 
 class RepositoryProvider(ProviderMixin):
+    """
+    Plugin Repository Provider
+    Includes all plugins such as those in sentry-plugins repo
+    as well as any outside plugin respoitories (i.e. Trello, Youtrack).
+    Does not include the integrations in the sentry respoitory.
+    """
     name = None
 
     def __init__(self, id):
diff --git a/tests/sentry/integrations/bitbucket/test_repository.py b/tests/sentry/integrations/bitbucket/test_repository.py
index dbe5ca8418..bf1cf860ef 100644
--- a/tests/sentry/integrations/bitbucket/test_repository.py
+++ b/tests/sentry/integrations/bitbucket/test_repository.py
@@ -74,7 +74,7 @@ class BitbucketRepositoryProviderTest(TestCase):
         ]
 
     @responses.activate
-    def test_create_repository(self):
+    def test_build_repository_config(self):
         full_repo_name = 'laurynsentry/helloworld'
         webhook_id = 'web-hook-id'
         responses.add(
@@ -104,7 +104,7 @@ class BitbucketRepositoryProviderTest(TestCase):
             'identifier': full_repo_name,
             'installation': integration.id,
         }
-        data = self.provider.validate_config(organization, data)
+        data = self.provider.get_repository_data(organization, data)
         assert data == {
             'provider': 'integrations:bitbucket',
             'identifier': full_repo_name,
@@ -112,7 +112,7 @@ class BitbucketRepositoryProviderTest(TestCase):
             'external_id': REPO['uuid'],
             'name': full_repo_name,
         }
-        data = self.provider.create_repository(organization, data)
+        data = self.provider.build_repository_config(organization, data)
 
         assert data == {
             'name': full_repo_name,
diff --git a/tests/sentry/integrations/github/test_repository.py b/tests/sentry/integrations/github/test_repository.py
index 6e92ebef40..710e65f820 100644
--- a/tests/sentry/integrations/github/test_repository.py
+++ b/tests/sentry/integrations/github/test_repository.py
@@ -22,7 +22,7 @@ class GitHubAppsProviderTest(PluginTestCase):
         return GitHubRepositoryProvider('integrations:github')
 
     @responses.activate
-    def test_create_repository(self):
+    def test_build_repository_config(self):
         organization = self.create_organization()
         integration = Integration.objects.create(
             provider='github',
@@ -34,7 +34,7 @@ class GitHubAppsProviderTest(PluginTestCase):
             'external_id': '654321',
             'integration_id': integration.id,
         }
-        data = self.provider.create_repository(organization, data)
+        data = self.provider.build_repository_config(organization, data)
         assert data == {
             'config': {
                 'name': 'getsentry/example-repo',
diff --git a/tests/sentry/integrations/vsts/test_repository.py b/tests/sentry/integrations/vsts/test_repository.py
index b37129ae7e..23ffd128fb 100644
--- a/tests/sentry/integrations/vsts/test_repository.py
+++ b/tests/sentry/integrations/vsts/test_repository.py
@@ -84,7 +84,7 @@ class VisualStudioRepositoryProviderTest(TestCase):
         }]
 
     @responses.activate
-    def test_create_repository(self):
+    def test_build_repository_config(self):
         organization = self.create_organization()
         integration = Integration.objects.create(
             provider='vsts',
@@ -102,7 +102,7 @@ class VisualStudioRepositoryProviderTest(TestCase):
             'project': 'MyFirstProject',
             'installation': integration.id,
         }
-        data = self.provider.create_repository(organization, data)
+        data = self.provider.build_repository_config(organization, data)
 
         assert data == {
             'name': 'MyFirstProject',
