commit a11550367abcc41854cd041f4974051e7eb9ecb7
Author: David Cramer <dcramer@gmail.com>
Date:   Mon Mar 28 15:33:35 2016 -0700

    Make unique value count relative to group (fixes GH-2793)

diff --git a/src/sentry/api/endpoints/group_tagkey_details.py b/src/sentry/api/endpoints/group_tagkey_details.py
index 599f8710c8..2f9f438500 100644
--- a/src/sentry/api/endpoints/group_tagkey_details.py
+++ b/src/sentry/api/endpoints/group_tagkey_details.py
@@ -6,7 +6,9 @@ from sentry.api.base import DocSection
 from sentry.api.bases.group import GroupEndpoint
 from sentry.api.exceptions import ResourceDoesNotExist
 from sentry.api.serializers import serialize
-from sentry.models import GroupTagValue, TagKey, TagKeyStatus, Group
+from sentry.models import (
+    GroupTagKey, GroupTagValue, TagKey, TagKeyStatus, Group
+)
 from sentry.utils.apidocs import scenario
 
 
@@ -51,6 +53,14 @@ class GroupTagKeyDetailsEndpoint(GroupEndpoint):
         except TagKey.DoesNotExist:
             raise ResourceDoesNotExist
 
+        try:
+            group_tag_key = GroupTagKey.objects.get(
+                group=group,
+                key=lookup_key,
+            )
+        except GroupTagKey.DoesNotExist:
+            raise ResourceDoesNotExist
+
         total_values = GroupTagValue.get_value_count(group.id, lookup_key)
 
         top_values = GroupTagValue.get_top_values(group.id, lookup_key, limit=3)
@@ -58,7 +68,7 @@ class GroupTagKeyDetailsEndpoint(GroupEndpoint):
         data = {
             'key': key,
             'name': tag_key.get_label(),
-            'uniqueValues': tag_key.values_seen,
+            'uniqueValues': group_tag_key.values_seen,
             'totalValues': total_values,
             'topValues': serialize(top_values, request.user),
         }
diff --git a/tests/sentry/api/endpoints/test_group_tagkey_details.py b/tests/sentry/api/endpoints/test_group_tagkey_details.py
index 42440c4bc3..a38635e8d2 100644
--- a/tests/sentry/api/endpoints/test_group_tagkey_details.py
+++ b/tests/sentry/api/endpoints/test_group_tagkey_details.py
@@ -15,13 +15,13 @@ class GroupTagDetailsTest(APITestCase):
         tagkey = TagKey.objects.create(
             project=group.project,
             key=key,
-            values_seen=1,
+            values_seen=2,
         )
         TagValue.objects.create(
             project=group.project,
             key=key,
             value=value,
-            times_seen=1,
+            times_seen=4,
         )
         GroupTagKey.objects.create(
             project=group.project,
@@ -34,7 +34,7 @@ class GroupTagDetailsTest(APITestCase):
             group=group,
             key=key,
             value=value,
-            times_seen=1,
+            times_seen=3,
         )
 
         self.login_as(user=self.user)
@@ -44,4 +44,4 @@ class GroupTagDetailsTest(APITestCase):
         assert response.status_code == 200, response.content
         assert response.data['key'] == str(tagkey.key)
         assert response.data['uniqueValues'] == 1
-        assert response.data['totalValues'] == 1
+        assert response.data['totalValues'] == 3
