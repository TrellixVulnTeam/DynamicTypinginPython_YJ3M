commit e0b2200fa85fc71e593e9c9a19e5d2fc4e502bfa
Author: David Cramer <dcramer@gmail.com>
Date:   Mon Aug 6 13:45:45 2018 -0700

    More fixes

diff --git a/src/bitfield/query.py b/src/bitfield/query.py
index 6be818a827..35747214df 100644
--- a/src/bitfield/query.py
+++ b/src/bitfield/query.py
@@ -32,7 +32,7 @@ try:
                 lhs_sql = lhs_sql + ' & %s'
             else:
                 lhs_sql = lhs_sql + ' | %s'
-            params.extend(self.get_db_prep_lookup(self.rhs, connection)[1])
+            params.append(self.get_db_prep_lookup(self.rhs, connection)[1])
             return lhs_sql, params
 
         def get_db_prep_lookup(self, value, connection, prepared=False):
diff --git a/src/sentry/south_migrations/0392_auto__add_projectownership.py b/src/sentry/south_migrations/0392_auto__add_projectownership.py
index 14d11b539c..75170930d6 100644
--- a/src/sentry/south_migrations/0392_auto__add_projectownership.py
+++ b/src/sentry/south_migrations/0392_auto__add_projectownership.py
@@ -20,8 +20,8 @@ class Migration(SchemaMigration):
             ('raw', self.gf('django.db.models.fields.TextField')(null=True)),
             ('schema', self.gf('jsonfield.fields.JSONField')(null=True)),
             ('fallthrough', self.gf('django.db.models.fields.BooleanField')(default=True)),
-            ('date_created', self.gf('django.db.models.fields.DateTimeField')()),
-            ('last_updated', self.gf('django.db.models.fields.DateTimeField')()),
+            ('date_created', self.gf('django.db.models.fields.DateTimeField')(default=datetime.datetime.now)),
+            ('last_updated', self.gf('django.db.models.fields.DateTimeField')(default=datetime.datetime.now)),
             ('is_active', self.gf('django.db.models.fields.BooleanField')(default=True)),
         ))
         db.send_create_signal('sentry', ['ProjectOwnership'])
diff --git a/src/sentry/south_migrations/0395_auto__add_releaseprojectenvironment__add_unique_releaseprojectenvironm.py b/src/sentry/south_migrations/0395_auto__add_releaseprojectenvironment__add_unique_releaseprojectenvironm.py
index 1f16cd6c30..d69dc04037 100644
--- a/src/sentry/south_migrations/0395_auto__add_releaseprojectenvironment__add_unique_releaseprojectenvironm.py
+++ b/src/sentry/south_migrations/0395_auto__add_releaseprojectenvironment__add_unique_releaseprojectenvironm.py
@@ -22,9 +22,9 @@ class Migration(SchemaMigration):
             ('environment', self.gf('sentry.db.models.fields.foreignkey.FlexibleForeignKey')(
                 to=orm['sentry.Environment'])),
             ('new_issues_count', self.gf('sentry.db.models.fields.bounded.BoundedPositiveIntegerField')(default=0)),
-            ('first_seen', self.gf('django.db.models.fields.DateTimeField')()),
+            ('first_seen', self.gf('django.db.models.fields.DateTimeField')(default=datetime.datetime.now)),
             ('last_seen', self.gf('django.db.models.fields.DateTimeField')(
-                db_index=True)),
+                default=datetime.datetime.now, db_index=True)),
         ))
         db.send_create_signal('sentry', ['ReleaseProjectEnvironment'])
 
diff --git a/src/sentry/south_migrations/0400_auto__add_projectredirect__add_unique_projectredirect_organization_red.py b/src/sentry/south_migrations/0400_auto__add_projectredirect__add_unique_projectredirect_organization_red.py
index a6486c180d..8a717c4a71 100644
--- a/src/sentry/south_migrations/0400_auto__add_projectredirect__add_unique_projectredirect_organization_red.py
+++ b/src/sentry/south_migrations/0400_auto__add_projectredirect__add_unique_projectredirect_organization_red.py
@@ -20,7 +20,7 @@ class Migration(SchemaMigration):
                 to=orm['sentry.Project'])),
             ('organization', self.gf('sentry.db.models.fields.foreignkey.FlexibleForeignKey')(
                 to=orm['sentry.Organization'])),
-            ('date_added', self.gf('django.db.models.fields.DateTimeField')()),
+            ('date_added', self.gf('django.db.models.fields.DateTimeField')(default=datetime.datetime.now)),
         ))
         db.send_create_signal('sentry', ['ProjectRedirect'])
 
diff --git a/src/sentry/south_migrations/0413_auto__add_externalissue__add_unique_externalissue_organization_id_inte.py b/src/sentry/south_migrations/0413_auto__add_externalissue__add_unique_externalissue_organization_id_inte.py
index b1e8c9d4a6..3c4b83ad97 100644
--- a/src/sentry/south_migrations/0413_auto__add_externalissue__add_unique_externalissue_organization_id_inte.py
+++ b/src/sentry/south_migrations/0413_auto__add_externalissue__add_unique_externalissue_organization_id_inte.py
@@ -18,7 +18,7 @@ class Migration(SchemaMigration):
             ('organization_id', self.gf('sentry.db.models.fields.bounded.BoundedPositiveIntegerField')()),
             ('integration_id', self.gf('sentry.db.models.fields.bounded.BoundedPositiveIntegerField')()),
             ('key', self.gf('django.db.models.fields.CharField')(max_length=128)),
-            ('date_added', self.gf('django.db.models.fields.DateTimeField')()),
+            ('date_added', self.gf('django.db.models.fields.DateTimeField')(default=datetime.datetime.now)),
             ('title', self.gf('django.db.models.fields.TextField')(null=True)),
             ('description', self.gf('django.db.models.fields.TextField')(null=True)),
         ))
diff --git a/src/sentry/south_migrations/0415_auto__add_relay.py b/src/sentry/south_migrations/0415_auto__add_relay.py
index c13efbe89b..37dea4ff37 100644
--- a/src/sentry/south_migrations/0415_auto__add_relay.py
+++ b/src/sentry/south_migrations/0415_auto__add_relay.py
@@ -17,8 +17,8 @@ class Migration(SchemaMigration):
             ('id', self.gf('sentry.db.models.fields.bounded.BoundedBigAutoField')(primary_key=True)),
             ('relay_id', self.gf('django.db.models.fields.CharField')(unique=True, max_length=64)),
             ('public_key', self.gf('django.db.models.fields.CharField')(max_length=200)),
-            ('first_seen', self.gf('django.db.models.fields.DateTimeField')()),
-            ('last_seen', self.gf('django.db.models.fields.DateTimeField')()),
+            ('first_seen', self.gf('django.db.models.fields.DateTimeField')(default=datetime.datetime.now)),
+            ('last_seen', self.gf('django.db.models.fields.DateTimeField')(default=datetime.datetime.now)),
         ))
         db.send_create_signal('sentry', ['Relay'])
 
diff --git a/src/sentry/south_migrations/0422_auto__add_grouphashtombstone__add_unique_grouphashtombstone_project_ha.py b/src/sentry/south_migrations/0422_auto__add_grouphashtombstone__add_unique_grouphashtombstone_project_ha.py
index 45a35673ed..5101a60dd4 100644
--- a/src/sentry/south_migrations/0422_auto__add_grouphashtombstone__add_unique_grouphashtombstone_project_ha.py
+++ b/src/sentry/south_migrations/0422_auto__add_grouphashtombstone__add_unique_grouphashtombstone_project_ha.py
@@ -15,10 +15,9 @@ class Migration(SchemaMigration):
         # Adding model 'GroupHashTombstone'
         db.create_table('sentry_grouphashtombstone', (
             ('id', self.gf('sentry.db.models.fields.bounded.BoundedBigAutoField')(primary_key=True)),
-            ('project', self.gf('sentry.db.models.fields.foreignkey.FlexibleForeignKey')(
-                to=orm['sentry.Project'])),
+            ('project', self.gf('sentry.db.models.fields.foreignkey.FlexibleForeignKey')(to=orm['sentry.Project'])),
             ('hash', self.gf('django.db.models.fields.CharField')(max_length=32)),
-            ('deleted_at', self.gf('django.db.models.fields.DateTimeField')()),
+            ('deleted_at', self.gf('django.db.models.fields.DateTimeField')(default=datetime.datetime.now)),
         ))
         db.send_create_signal('sentry', ['GroupHashTombstone'])
 
diff --git a/src/sentry/south_migrations/0426_auto__add_sentryappinstallation__add_sentryapp__add_field_user_is_sent.py b/src/sentry/south_migrations/0426_auto__add_sentryappinstallation__add_sentryapp__add_field_user_is_sent.py
index c66e68e16b..27df0bd77d 100644
--- a/src/sentry/south_migrations/0426_auto__add_sentryappinstallation__add_sentryapp__add_field_user_is_sent.py
+++ b/src/sentry/south_migrations/0426_auto__add_sentryappinstallation__add_sentryapp__add_field_user_is_sent.py
@@ -16,28 +16,13 @@ class Migration(SchemaMigration):
         db.create_table('sentry_sentryappinstallation', (
             ('id', self.gf('sentry.db.models.fields.bounded.BoundedBigAutoField')(primary_key=True)),
             ('date_deleted', self.gf('django.db.models.fields.DateTimeField')(null=True, blank=True)),
-            ('sentry_app', self.gf('sentry.db.models.fields.foreignkey.FlexibleForeignKey')(
-                related_name='installations', to=orm['sentry.SentryApp'])),
-            ('organization', self.gf('sentry.db.models.fields.foreignkey.FlexibleForeignKey')(
-                related_name='sentry_app_installations', to=orm['sentry.Organization'])),
-            ('authorization',
-             self.gf('django.db.models.fields.related.OneToOneField')(related_name='sentry_app_installation',
-                                                                      unique=True,
-                                                                      null=True,
-                                                                      on_delete=models.SET_NULL,
-                                                                      to=orm['sentry.ApiAuthorization'])),
-            (
-                'api_grant',
-                self.gf('django.db.models.fields.related.OneToOneField')(
-                    related_name='sentry_app_installation',
-                    unique=True,
-                    null=True,
-                    on_delete=models.SET_NULL,
-                    to=orm['sentry.ApiGrant'])),
-            ('uuid', self.gf('django.db.models.fields.CharField')
-             (default='b0d8118e-f1fa-4224-a090-28c812ef94e4', max_length=64)),
-            ('date_added', self.gf('django.db.models.fields.DateTimeField')()),
-            ('date_updated', self.gf('django.db.models.fields.DateTimeField')()),
+            ('sentry_app', self.gf('sentry.db.models.fields.foreignkey.FlexibleForeignKey')(related_name='installations', to=orm['sentry.SentryApp'])),
+            ('organization', self.gf('sentry.db.models.fields.foreignkey.FlexibleForeignKey')(related_name='sentry_app_installations', to=orm['sentry.Organization'])),
+            ('authorization', self.gf('django.db.models.fields.related.OneToOneField')(related_name='sentry_app_installation', unique=True, null=True, on_delete=models.SET_NULL, to=orm['sentry.ApiAuthorization'])),
+            ('api_grant', self.gf('django.db.models.fields.related.OneToOneField')(related_name='sentry_app_installation', unique=True, null=True, on_delete=models.SET_NULL, to=orm['sentry.ApiGrant'])),
+            ('uuid', self.gf('django.db.models.fields.CharField')(default='b0d8118e-f1fa-4224-a090-28c812ef94e4', max_length=64)),
+            ('date_added', self.gf('django.db.models.fields.DateTimeField')(default=datetime.datetime.now)),
+            ('date_updated', self.gf('django.db.models.fields.DateTimeField')(default=datetime.datetime.now)),
         ))
         db.send_create_signal('sentry', ['SentryAppInstallation'])
 
@@ -45,29 +30,23 @@ class Migration(SchemaMigration):
         db.create_table('sentry_sentryapp', (
             ('id', self.gf('sentry.db.models.fields.bounded.BoundedBigAutoField')(primary_key=True)),
             ('date_deleted', self.gf('django.db.models.fields.DateTimeField')(null=True, blank=True)),
-            ('application', self.gf('django.db.models.fields.related.OneToOneField')
-             (related_name='sentry_app', unique=True, to=orm['sentry.ApiApplication'])),
-            ('proxy_user', self.gf('django.db.models.fields.related.OneToOneField')(
-                related_name='sentry_app', unique=True, to=orm['sentry.User'])),
-            ('owner', self.gf('sentry.db.models.fields.foreignkey.FlexibleForeignKey')(
-                related_name='owned_sentry_apps', to=orm['sentry.User'])),
+            ('application', self.gf('django.db.models.fields.related.OneToOneField')(related_name='sentry_app', unique=True, to=orm['sentry.ApiApplication'])),
+            ('proxy_user', self.gf('django.db.models.fields.related.OneToOneField')(related_name='sentry_app', unique=True, to=orm['sentry.User'])),
+            ('owner', self.gf('sentry.db.models.fields.foreignkey.FlexibleForeignKey')(related_name='owned_sentry_apps', to=orm['sentry.User'])),
             ('scopes', self.gf('django.db.models.fields.BigIntegerField')(default=None)),
-            ('scope_list', self.gf('sentry.db.models.fields.array.ArrayField')(
-                of=('django.db.models.fields.TextField', [], {}))),
+            ('scope_list', self.gf('sentry.db.models.fields.array.ArrayField')(of=('django.db.models.fields.TextField', [], {}))),
             ('name', self.gf('django.db.models.fields.TextField')()),
             ('slug', self.gf('django.db.models.fields.CharField')(unique=True, max_length=64)),
-            ('uuid', self.gf('django.db.models.fields.CharField')
-             (default='45ab4e12-5a17-461b-8665-bca3fbe00836', max_length=64)),
+            ('uuid', self.gf('django.db.models.fields.CharField')(default='45ab4e12-5a17-461b-8665-bca3fbe00836', max_length=64)),
             ('webhook_url', self.gf('django.db.models.fields.TextField')()),
-            ('date_added', self.gf('django.db.models.fields.DateTimeField')()),
-            ('date_updated', self.gf('django.db.models.fields.DateTimeField')()),
+            ('date_added', self.gf('django.db.models.fields.DateTimeField')(default=datetime.datetime.now)),
+            ('date_updated', self.gf('django.db.models.fields.DateTimeField')(default=datetime.datetime.now)),
         ))
         db.send_create_signal('sentry', ['SentryApp'])
 
         # Adding field 'User.is_sentry_app'
         db.add_column('auth_user', 'is_sentry_app',
-                      self.gf('django.db.models.fields.NullBooleanField')(
-                          default=None, null=True, blank=True),
+                      self.gf('django.db.models.fields.NullBooleanField')(default=None, null=True, blank=True),
                       keep_default=False)
 
     def backwards(self, orm):
diff --git a/src/sentry/south_migrations/0427_auto__add_eventattachment__add_unique_eventattachment_project_id_event.py b/src/sentry/south_migrations/0427_auto__add_eventattachment__add_unique_eventattachment_project_id_event.py
index c7bc543741..2ae71ce3a1 100644
--- a/src/sentry/south_migrations/0427_auto__add_eventattachment__add_unique_eventattachment_project_id_event.py
+++ b/src/sentry/south_migrations/0427_auto__add_eventattachment__add_unique_eventattachment_project_id_event.py
@@ -18,10 +18,9 @@ class Migration(SchemaMigration):
             ('project_id', self.gf('sentry.db.models.fields.bounded.BoundedBigIntegerField')()),
             ('group_id', self.gf('sentry.db.models.fields.bounded.BoundedBigIntegerField')(null=True)),
             ('event_id', self.gf('django.db.models.fields.CharField')(max_length=32)),
-            ('file', self.gf('sentry.db.models.fields.foreignkey.FlexibleForeignKey')(
-                to=orm['sentry.File'])),
+            ('file', self.gf('sentry.db.models.fields.foreignkey.FlexibleForeignKey')(to=orm['sentry.File'])),
             ('name', self.gf('django.db.models.fields.TextField')()),
-            ('date_added', self.gf('django.db.models.fields.DateTimeField')()),
+            ('date_added', self.gf('django.db.models.fields.DateTimeField')(default=datetime.datetime.now)),
         ))
         db.send_create_signal('sentry', ['EventAttachment'])
 
diff --git a/src/sentry/south_migrations/0429_auto__add_integrationexternalproject__add_unique_integrationexternalpr.py b/src/sentry/south_migrations/0429_auto__add_integrationexternalproject__add_unique_integrationexternalpr.py
index 0b324fdd60..74fa08348f 100644
--- a/src/sentry/south_migrations/0429_auto__add_integrationexternalproject__add_unique_integrationexternalpr.py
+++ b/src/sentry/south_migrations/0429_auto__add_integrationexternalproject__add_unique_integrationexternalpr.py
@@ -17,7 +17,7 @@ class Migration(SchemaMigration):
             ('id', self.gf('sentry.db.models.fields.bounded.BoundedBigAutoField')(primary_key=True)),
             ('organization_integration_id', self.gf(
                 'sentry.db.models.fields.bounded.BoundedPositiveIntegerField')(db_index=True)),
-            ('date_added', self.gf('django.db.models.fields.DateTimeField')()),
+            ('date_added', self.gf('django.db.models.fields.DateTimeField')(default=datetime.datetime.now)),
             ('name', self.gf('django.db.models.fields.CharField')(max_length=128)),
             ('external_id', self.gf('django.db.models.fields.CharField')(max_length=64)),
             ('resolved_status', self.gf('django.db.models.fields.CharField')(max_length=64)),
diff --git a/src/south/db/generic.py b/src/south/db/generic.py
index 64f42922c5..72c53e78ec 100644
--- a/src/south/db/generic.py
+++ b/src/south/db/generic.py
@@ -723,12 +723,14 @@ class DatabaseOperations(object):
             if not getattr(field, '_suppress_default', False):
                 if field.has_default():
                     default = field.get_default()
+                    # If the default is a callable, then scrap it as we dont want python-based defaults
+                    # written into the database
+                    if callable(default):
+                        get_logger().warn(text_type('discarded column default "%r" on "%s"' % (default, table_name)))
+                        default = None
+
                     # If the default is actually None, don't add a default term
                     if default is not None:
-                        # If the default is a callable, then call it!
-                        if callable(default):
-                            default = default()
-
                         default = field.get_db_prep_save(default, connection=self._get_connection())
                         default = self._default_value_workaround(default)
                         # Now do some very cheap quoting. TODO: Redesign return values to avoid
diff --git a/tests/sentry/tasks/test_unmerge.py b/tests/sentry/tasks/test_unmerge.py
index cad3970554..30ac7e9f32 100644
--- a/tests/sentry/tasks/test_unmerge.py
+++ b/tests/sentry/tasks/test_unmerge.py
@@ -314,7 +314,7 @@ class UnmergeTestCase(TestCase):
         assert set(
             [(gtv.key, gtv.value, gtv.times_seen)
              for gtv in
-             GroupTagValue.objects.select_related('_key', '_value').filter(
+             GroupTagValue.objects.filter(
                  project_id=source.project_id,
                  group_id=source.id,
             )]
