commit 3f113ebf5132020befabf32b3cdb689751e0f36d
Author: Matt Robenolt <matt@ydekproductions.com>
Date:   Mon Jun 27 18:58:35 2016 -0700

    Expose 2fa status on User serializer (#3603)
    
    Fixes GH-3602

diff --git a/src/sentry/api/serializers/models/user.py b/src/sentry/api/serializers/models/user.py
index 5572c30b03..e3ad680105 100644
--- a/src/sentry/api/serializers/models/user.py
+++ b/src/sentry/api/serializers/models/user.py
@@ -4,7 +4,7 @@ from django.conf import settings
 
 from sentry.app import env
 from sentry.api.serializers import Serializer, register
-from sentry.models import AuthIdentity, User, UserAvatar, UserOption
+from sentry.models import AuthIdentity, Authenticator, User, UserAvatar, UserOption
 from sentry.utils.avatar import get_gravatar_url
 
 
@@ -32,11 +32,14 @@ class UserSerializer(Serializer):
         }
         identities = self._get_identities(item_list, user)
 
+        authenticators = Authenticator.objects.bulk_users_have_2fa([i.id for i in item_list])
+
         data = {}
         for item in item_list:
             data[item] = {
                 'avatar': avatars.get(item.id),
                 'identities': identities.get(item.id),
+                'has2fa': authenticators[item.id],
             }
         return data
 
@@ -50,6 +53,7 @@ class UserSerializer(Serializer):
             'isActive': obj.is_active,
             'isManaged': obj.is_managed,
             'dateJoined': obj.date_joined,
+            'has2fa': attrs['has2fa'],
         }
         if obj == user:
             options = {
diff --git a/tests/sentry/api/serializers/test_user.py b/tests/sentry/api/serializers/test_user.py
new file mode 100644
index 0000000000..6603be8438
--- /dev/null
+++ b/tests/sentry/api/serializers/test_user.py
@@ -0,0 +1,26 @@
+# -*- coding: utf-8 -*-
+
+from __future__ import absolute_import
+
+from sentry.api.serializers import serialize
+from sentry.testutils import TestCase
+from sentry.models import Authenticator
+from sentry.models.authenticator import available_authenticators
+
+
+class UserSerializerTest(TestCase):
+    def test_simple(self):
+        user = self.create_user()
+
+        result = serialize(user)
+        assert result['id'] == str(user.id)
+        assert result['has2fa'] is False
+
+        Authenticator.objects.create(
+            user=user,
+            type=available_authenticators(ignore_backup=True)[0].type,
+        )
+
+        result = serialize(user)
+        assert result['id'] == str(user.id)
+        assert result['has2fa'] is True
