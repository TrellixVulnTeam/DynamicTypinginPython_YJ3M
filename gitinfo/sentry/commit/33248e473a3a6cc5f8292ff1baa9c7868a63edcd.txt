commit 33248e473a3a6cc5f8292ff1baa9c7868a63edcd
Author: Armin Ronacher <armin.ronacher@active-4.com>
Date:   Mon May 15 13:54:36 2017 +0200

    Fixed some tests for changed in_app behavior

diff --git a/tests/sentry/interfaces/test_exception.py b/tests/sentry/interfaces/test_exception.py
index 923371b781..36db02863b 100644
--- a/tests/sentry/interfaces/test_exception.py
+++ b/tests/sentry/interfaces/test_exception.py
@@ -8,6 +8,7 @@ from sentry.interfaces.exception import (
     SingleException, Exception, slim_exception_data
 )
 from sentry.testutils import TestCase
+from sentry.stacktraces import normalize_in_app
 
 
 class ExceptionTest(TestCase):
@@ -152,7 +153,7 @@ ValueError: hello world
         assert not context['hasSystemFrames']
 
     def test_context_with_only_app_frames(self):
-        inst = Exception.to_python(dict(values=[{
+        values = [{
             'type': 'ValueError',
             'value': 'hello world',
             'module': 'foo.bar',
@@ -170,7 +171,10 @@ ValueError: hello world
                 'lineno': 1,
                 'in_app': True,
             }]},
-        }]))
+        }]
+        exc = dict(values=values)
+        normalize_in_app({'sentry.interfaces.Exception': exc})
+        inst = Exception.to_python(exc)
 
         self.create_event(data={
             'sentry.interfaces.Exception': inst.to_json(),
diff --git a/tests/sentry/interfaces/test_stacktrace.py b/tests/sentry/interfaces/test_stacktrace.py
index 9c24afcfa8..3cbc481a81 100644
--- a/tests/sentry/interfaces/test_stacktrace.py
+++ b/tests/sentry/interfaces/test_stacktrace.py
@@ -410,18 +410,6 @@ class StacktraceTest(TestCase):
         ]))
         assert stacktrace.get_culprit_string(platform='javascript') == u'\U0001f60d(\U0001f62d)'
 
-    def test_exclude_libswiftCore_from_in_app(self):
-        stacktrace = Stacktrace.to_python(dict(frames=[
-            {
-                'filename': 'foo/baz.c',
-                'package': '/foo/bar/libswiftCore.dylib',
-                'lineno': 1,
-                'in_app': True,
-                'function': 'fooBar',
-            }
-        ]))
-        assert stacktrace.frames[0].in_app is False
-
     def test_cocoa_strict_stacktrace(self):
         stacktrace = Stacktrace.to_python(dict(frames=[
             {
