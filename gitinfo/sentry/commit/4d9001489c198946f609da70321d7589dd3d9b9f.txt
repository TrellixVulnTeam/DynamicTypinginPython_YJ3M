commit 4d9001489c198946f609da70321d7589dd3d9b9f
Author: bkonkle <brandon@konkle.us>
Date:   Mon Feb 6 11:27:15 2012 -0700

    Only apply the access control headers to the /api/store/ url

diff --git a/sentry/conf/server.py b/sentry/conf/server.py
index d402cb8758..1eab00636a 100644
--- a/sentry/conf/server.py
+++ b/sentry/conf/server.py
@@ -83,7 +83,6 @@ MIDDLEWARE_CLASSES = (
     'django.middleware.csrf.CsrfViewMiddleware',
     'django.contrib.auth.middleware.AuthenticationMiddleware',
     # 'django.contrib.messages.middleware.MessageMiddleware',
-    'sentry.middleware.AccessControlMiddleware',
 )
 
 ROOT_URLCONF = 'sentry.conf.urls'
diff --git a/sentry/middleware.py b/sentry/middleware.py
index b40c69ffa3..a02ab030b0 100644
--- a/sentry/middleware.py
+++ b/sentry/middleware.py
@@ -1,22 +1,3 @@
-from sentry.conf import settings
-
-
 class SentryMiddleware(object):
     # DEPRECATED
     pass
-
-
-class AccessControlMiddleware(object):
-    """
-    This middleware provides the Access-Control-Allow-Origin and
-    Access-Control-Allow-Headers header to enable cross-site HTTP requests. You
-    can find more information about these headers here:
-    https://developer.mozilla.org/En/HTTP_access_control#Simple_requests
-    """
-
-    def process_response(self, request, response):
-        origin = getattr(settings, 'ALLOW_ORIGIN', None)
-        if origin:
-            response['Access-Control-Allow-Origin'] = origin
-            response['Access-Control-Allow-Headers'] = 'X-Sentry-Auth'
-        return response
diff --git a/sentry/utils/http.py b/sentry/utils/http.py
index 47f37cfb08..f82e1ee33c 100644
--- a/sentry/utils/http.py
+++ b/sentry/utils/http.py
@@ -8,6 +8,8 @@ sentry.utils.http
 import urllib
 from urlparse import urlparse
 
+from sentry.conf import settings
+
 
 def safe_urlencode(params, doseq=0):
     """
@@ -44,3 +46,17 @@ def is_same_domain(url1, url2):
     url1 = urlparse(url1)
     url2 = urlparse(url2)
     return url1.netloc == url2.netloc
+
+
+def apply_access_control_headers(response):
+    """
+    Provides the Access-Control-Allow-Origin and Access-Control-Allow-Headers
+    headers to enable cross-site HTTP requests. You can find more information
+    about these headers here:
+    https://developer.mozilla.org/En/HTTP_access_control#Simple_requests
+    """
+    origin = getattr(settings, 'ALLOW_ORIGIN', None)
+    if origin:
+        response['Access-Control-Allow-Origin'] = origin
+        response['Access-Control-Allow-Headers'] = 'X-Sentry-Auth'
+    return response
diff --git a/sentry/web/api.py b/sentry/web/api.py
index b8ab1a2622..7faeefc5b9 100644
--- a/sentry/web/api.py
+++ b/sentry/web/api.py
@@ -19,7 +19,7 @@ from sentry.coreapi import project_from_auth_vars, project_from_api_key_and_id,
   extract_auth_vars, InvalidTimestamp
 from sentry.models import Group, GroupBookmark, Project, View, ProjectDomain
 from sentry.utils import json
-from sentry.utils.http import is_same_domain
+from sentry.utils.http import is_same_domain, apply_access_control_headers
 from sentry.web.decorators import has_access
 from sentry.web.frontend.groups import _get_group_list
 from sentry.web.helpers import render_to_response, render_to_string
@@ -108,8 +108,10 @@ def store(request):
 
         insert_data_to_database(data)
     except APIError, error:
-        return HttpResponse(error.msg, status=error.http_status)
-    return HttpResponse('')
+        response = HttpResponse(error.msg, status=error.http_status)
+    else:
+        response = HttpResponse('')
+    return apply_access_control_headers(response)
 
 
 @csrf_exempt
