commit 54357f286f86915ff3a3a5c85f161fa35cf7bdd2
Author: Jess MacQueen <jessmacqueen@gmail.com>
Date:   Thu Feb 7 17:48:25 2019 -0800

    feat(metrics): Add path and org id to metrics data

diff --git a/src/sentry/static/sentry/app/components/organizations/globalSelectionHeader/globalSelectionHeader.jsx b/src/sentry/static/sentry/app/components/organizations/globalSelectionHeader/globalSelectionHeader.jsx
index 95cb88454c..206ac34ef3 100644
--- a/src/sentry/static/sentry/app/components/organizations/globalSelectionHeader/globalSelectionHeader.jsx
+++ b/src/sentry/static/sentry/app/components/organizations/globalSelectionHeader/globalSelectionHeader.jsx
@@ -390,6 +390,7 @@ class GlobalSelectionHeader extends React.Component {
                 utc={utc}
                 onChange={this.handleChangeTime}
                 onUpdate={this.handleUpdateTime}
+                organization={organization}
               />
             </HeaderItemPosition>
           </React.Fragment>
diff --git a/src/sentry/static/sentry/app/components/organizations/timeRangeSelector/dateRange/dateRange.jsx b/src/sentry/static/sentry/app/components/organizations/timeRangeSelector/dateRange/dateRange.jsx
index cc2d5076eb..c29ef3dda0 100644
--- a/src/sentry/static/sentry/app/components/organizations/timeRangeSelector/dateRange/dateRange.jsx
+++ b/src/sentry/static/sentry/app/components/organizations/timeRangeSelector/dateRange/dateRange.jsx
@@ -9,8 +9,10 @@ import styled from 'react-emotion';
 
 import {analytics} from 'app/utils/analytics';
 import {getEndOfDay, getStartOfPeriodAgo, setDateToTime} from 'app/utils/dates';
+import getRouteStringFromRoutes from 'app/utils/getRouteStringFromRoutes';
 import {t} from 'app/locale';
 import Checkbox from 'app/components/checkbox';
+import SentryTypes from 'app/sentryTypes';
 import TimePicker from 'app/components/organizations/timeRangeSelector/timePicker';
 import space from 'app/styles/space';
 import theme from 'app/utils/theme';
@@ -60,6 +62,11 @@ class DateRange extends React.Component {
      * Callback when value changes
      */
     onChange: PropTypes.func,
+
+    /**
+     * Just used for metrics
+     */
+    organization: SentryTypes.Organization,
   };
 
   static defaultProps = {
@@ -68,6 +75,10 @@ class DateRange extends React.Component {
     maxPickableDays: MAX_PICKABLE_DAYS,
   };
 
+  static contextTypes = {
+    router: PropTypes.object,
+  };
+
   static getTimeStringFromDate = date => {
     return moment(date)
       .local()
@@ -97,6 +108,8 @@ class DateRange extends React.Component {
     analytics('dateselector.time_changed', {
       field_changed: 'start',
       time: startTime,
+      path: getRouteStringFromRoutes(this.context.router.routes),
+      org_id: parseInt(this.props.organization.id, 10),
     });
 
     onChange({
@@ -112,6 +125,8 @@ class DateRange extends React.Component {
     analytics('dateselector.time_changed', {
       field_changed: 'end',
       time: endTime,
+      path: getRouteStringFromRoutes(this.context.router.routes),
+      org_id: parseInt(this.props.organization.id, 10),
     });
 
     onChange({
diff --git a/src/sentry/static/sentry/app/components/organizations/timeRangeSelector/index.jsx b/src/sentry/static/sentry/app/components/organizations/timeRangeSelector/index.jsx
index 4cd4249cbb..67356bfeef 100644
--- a/src/sentry/static/sentry/app/components/organizations/timeRangeSelector/index.jsx
+++ b/src/sentry/static/sentry/app/components/organizations/timeRangeSelector/index.jsx
@@ -13,6 +13,7 @@ import {
   getUtcToSystem,
 } from 'app/utils/dates';
 import {parsePeriodToHours} from 'app/utils';
+import getRouteStringFromRoutes from 'app/utils/getRouteStringFromRoutes';
 import {t} from 'app/locale';
 import DateRange from 'app/components/organizations/timeRangeSelector/dateRange';
 import DateSummary from 'app/components/organizations/timeRangeSelector/dateSummary';
@@ -21,6 +22,7 @@ import HeaderItem from 'app/components/organizations/headerItem';
 import InlineSvg from 'app/components/inlineSvg';
 import RelativeSelector from 'app/components/organizations/timeRangeSelector/dateRange/relativeSelector';
 import SelectorItem from 'app/components/organizations/timeRangeSelector/dateRange/selectorItem';
+import SentryTypes from 'app/sentryTypes';
 import getDynamicText from 'app/utils/getDynamicText';
 
 // Strips timezone from local date, creates a new moment date object with timezone
@@ -92,6 +94,11 @@ class TimeRangeSelector extends React.PureComponent {
      * Callback when "Update" button is clicked
      */
     onUpdate: PropTypes.func,
+
+    /**
+     * Just used for metrics
+     */
+    organization: SentryTypes.Organization,
   };
 
   static defaultProps = {
@@ -100,6 +107,10 @@ class TimeRangeSelector extends React.PureComponent {
     utc: getUserTimezone() === 'UTC',
   };
 
+  static contextTypes = {
+    router: PropTypes.object,
+  };
+
   constructor(props) {
     super(props);
 
@@ -238,8 +249,11 @@ class TimeRangeSelector extends React.PureComponent {
 
     this.setState(state => {
       const utc = !state.utc;
+
       analytics('dateselector.utc_changed', {
         utc,
+        path: getRouteStringFromRoutes(this.context.router.routes),
+        org_id: parseInt(this.props.organization.id, 10),
       });
       const newDateTime = {
         relative: null,
@@ -257,7 +271,7 @@ class TimeRangeSelector extends React.PureComponent {
   };
 
   render() {
-    const {showAbsolute, showRelative} = this.props;
+    const {showAbsolute, showRelative, organization} = this.props;
     const {start, end, relative} = this.state;
 
     const shouldShowAbsolute = showAbsolute;
@@ -322,6 +336,7 @@ class TimeRangeSelector extends React.PureComponent {
                     end={end}
                     onChange={this.handleSelectDateRange}
                     onChangeUtc={this.handleUseUtc}
+                    organization={organization}
                   />
                 )}
               </Menu>
diff --git a/tests/js/spec/components/organizations/timeRangeSelector/dateRange.spec.jsx b/tests/js/spec/components/organizations/timeRangeSelector/dateRange.spec.jsx
index a922c62515..72c2bd5c37 100644
--- a/tests/js/spec/components/organizations/timeRangeSelector/dateRange.spec.jsx
+++ b/tests/js/spec/components/organizations/timeRangeSelector/dateRange.spec.jsx
@@ -61,6 +61,7 @@ describe('DateRange', function() {
           showTimePicker
           onChange={onChange}
           onChangeUtc={jest.fn()}
+          organization={TestStubs.Organization()}
         />,
         routerContext
       );
@@ -131,6 +132,7 @@ describe('DateRange', function() {
           utc
           onChange={onChange}
           onChangeUtc={jest.fn()}
+          organization={TestStubs.Organization()}
         />,
         routerContext
       );
diff --git a/tests/js/spec/components/organizations/timeRangeSelector/index.spec.jsx b/tests/js/spec/components/organizations/timeRangeSelector/index.spec.jsx
index 7e530b8a7c..36546337ca 100644
--- a/tests/js/spec/components/organizations/timeRangeSelector/index.spec.jsx
+++ b/tests/js/spec/components/organizations/timeRangeSelector/index.spec.jsx
@@ -11,7 +11,13 @@ describe('TimeRangeSelector', function() {
 
   const createWrapper = (props = {}) =>
     mount(
-      <TimeRangeSelector showAbsolute showRelative onChange={onChange} {...props} />,
+      <TimeRangeSelector
+        showAbsolute
+        showRelative
+        onChange={onChange}
+        organization={TestStubs.Organization()}
+        {...props}
+      />,
       routerContext
     );
 
diff --git a/tests/js/spec/views/userFeedback/__snapshots__/organizationUserFeedback.spec.jsx.snap b/tests/js/spec/views/userFeedback/__snapshots__/organizationUserFeedback.spec.jsx.snap
index 4466deec50..2cd3761fbb 100644
--- a/tests/js/spec/views/userFeedback/__snapshots__/organizationUserFeedback.spec.jsx.snap
+++ b/tests/js/spec/views/userFeedback/__snapshots__/organizationUserFeedback.spec.jsx.snap
@@ -1693,6 +1693,45 @@ exports[`OrganizationUserFeedback renders 1`] = `
                             key="period:14d-start:null-end:null-utc:true"
                             onChange={[Function]}
                             onUpdate={[Function]}
+                            organization={
+                              Object {
+                                "access": Array [
+                                  "org:read",
+                                  "org:write",
+                                  "org:admin",
+                                  "project:read",
+                                  "project:write",
+                                  "project:admin",
+                                  "team:read",
+                                  "team:write",
+                                  "team:admin",
+                                ],
+                                "features": Array [
+                                  "sentry10",
+                                ],
+                                "id": "3",
+                                "name": "Organization Name",
+                                "onboardingTasks": Array [],
+                                "projects": Array [
+                                  Object {
+                                    "hasAccess": true,
+                                    "id": "2",
+                                    "isBookmarked": false,
+                                    "isMember": true,
+                                    "name": "Project Name",
+                                    "slug": "project-slug",
+                                    "teams": Array [],
+                                  },
+                                ],
+                                "scrapeJavaScript": true,
+                                "slug": "org-slug",
+                                "status": Object {
+                                  "id": "active",
+                                  "name": "active",
+                                },
+                                "teams": Array [],
+                              }
+                            }
                             relative="14d"
                             showAbsolute={true}
                             showRelative={true}
