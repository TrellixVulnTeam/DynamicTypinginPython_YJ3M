commit 338a7107e3cf36850f903ad5e749ea632ce622ae
Author: David Cramer <dcramer@gmail.com>
Date:   Mon Feb 11 12:50:49 2013 -0800

    Store tag keys with values_seen, and tag values with times_seen, last_seen, and first_seen

diff --git a/src/sentry/manager.py b/src/sentry/manager.py
index fcc1c20f7a..672462aeaf 100644
--- a/src/sentry/manager.py
+++ b/src/sentry/manager.py
@@ -664,14 +664,10 @@ class GroupManager(BaseManager, ChartMixin):
             if len(value) > MAX_TAG_LENGTH:
                 continue
 
-            app.buffer.incr(FilterKey, {
-                'times_seen': 1,
-            }, {
-                'project': project,
-                'key': key,
-            }, {
-                'last_seen': date,
-            })
+            FilterKey.objects.get_or_create(
+                project=project,
+                key=key,
+            )
 
             app.buffer.incr(FilterValue, {
                 'times_seen': 1,
diff --git a/src/sentry/migrations/0090_auto__add_field_filtervalue_times_seen__add_field_filtervalue_last_see.py b/src/sentry/migrations/0090_auto__add_grouptagkey__add_unique_grouptagkey_project_group_key__add_f.py
similarity index 92%
rename from src/sentry/migrations/0090_auto__add_field_filtervalue_times_seen__add_field_filtervalue_last_see.py
rename to src/sentry/migrations/0090_auto__add_grouptagkey__add_unique_grouptagkey_project_group_key__add_f.py
index ca3a1cc042..7f016a9d20 100644
--- a/src/sentry/migrations/0090_auto__add_field_filtervalue_times_seen__add_field_filtervalue_last_see.py
+++ b/src/sentry/migrations/0090_auto__add_grouptagkey__add_unique_grouptagkey_project_group_key__add_f.py
@@ -8,6 +8,19 @@ from django.db import models
 class Migration(SchemaMigration):
 
     def forwards(self, orm):
+        # Adding model 'GroupTagKey'
+        db.create_table('sentry_grouptagkey', (
+            ('id', self.gf('django.db.models.fields.AutoField')(primary_key=True)),
+            ('project', self.gf('django.db.models.fields.related.ForeignKey')(to=orm['sentry.Project'], null=True)),
+            ('group', self.gf('django.db.models.fields.related.ForeignKey')(to=orm['sentry.Group'])),
+            ('key', self.gf('django.db.models.fields.CharField')(max_length=32)),
+            ('values_seen', self.gf('django.db.models.fields.PositiveIntegerField')(default=0)),
+        ))
+        db.send_create_signal('sentry', ['GroupTagKey'])
+
+        # Adding unique constraint on 'GroupTagKey', fields ['project', 'group', 'key']
+        db.create_unique('sentry_grouptagkey', ['project_id', 'group_id', 'key'])
+
         # Adding field 'FilterValue.times_seen'
         db.add_column('sentry_filtervalue', 'times_seen',
                       self.gf('django.db.models.fields.PositiveIntegerField')(default=0),
@@ -23,23 +36,19 @@ class Migration(SchemaMigration):
                       self.gf('django.db.models.fields.DateTimeField')(default=datetime.datetime.now, null=True, db_index=True),
                       keep_default=False)
 
-        # Adding field 'FilterKey.times_seen'
-        db.add_column('sentry_filterkey', 'times_seen',
+        # Adding field 'FilterKey.values_seen'
+        db.add_column('sentry_filterkey', 'values_seen',
                       self.gf('django.db.models.fields.PositiveIntegerField')(default=0),
                       keep_default=False)
 
-        # Adding field 'FilterKey.last_seen'
-        db.add_column('sentry_filterkey', 'last_seen',
-                      self.gf('django.db.models.fields.DateTimeField')(default=datetime.datetime.now, null=True, db_index=True),
-                      keep_default=False)
 
-        # Adding field 'FilterKey.first_seen'
-        db.add_column('sentry_filterkey', 'first_seen',
-                      self.gf('django.db.models.fields.DateTimeField')(default=datetime.datetime.now, null=True, db_index=True),
-                      keep_default=False)
+    def backwards(self, orm):
+        # Removing unique constraint on 'GroupTagKey', fields ['project', 'group', 'key']
+        db.delete_unique('sentry_grouptagkey', ['project_id', 'group_id', 'key'])
 
+        # Deleting model 'GroupTagKey'
+        db.delete_table('sentry_grouptagkey')
 
-    def backwards(self, orm):
         # Deleting field 'FilterValue.times_seen'
         db.delete_column('sentry_filtervalue', 'times_seen')
 
@@ -49,14 +58,8 @@ class Migration(SchemaMigration):
         # Deleting field 'FilterValue.first_seen'
         db.delete_column('sentry_filtervalue', 'first_seen')
 
-        # Deleting field 'FilterKey.times_seen'
-        db.delete_column('sentry_filterkey', 'times_seen')
-
-        # Deleting field 'FilterKey.last_seen'
-        db.delete_column('sentry_filterkey', 'last_seen')
-
-        # Deleting field 'FilterKey.first_seen'
-        db.delete_column('sentry_filterkey', 'first_seen')
+        # Deleting field 'FilterKey.values_seen'
+        db.delete_column('sentry_filterkey', 'values_seen')
 
 
     models = {
@@ -152,12 +155,10 @@ class Migration(SchemaMigration):
         },
         'sentry.filterkey': {
             'Meta': {'unique_together': "(('project', 'key'),)", 'object_name': 'FilterKey'},
-            'first_seen': ('django.db.models.fields.DateTimeField', [], {'default': 'datetime.datetime.now', 'null': 'True', 'db_index': 'True'}),
             'id': ('django.db.models.fields.AutoField', [], {'primary_key': 'True'}),
             'key': ('django.db.models.fields.CharField', [], {'max_length': '32'}),
-            'last_seen': ('django.db.models.fields.DateTimeField', [], {'default': 'datetime.datetime.now', 'null': 'True', 'db_index': 'True'}),
             'project': ('django.db.models.fields.related.ForeignKey', [], {'to': "orm['sentry.Project']"}),
-            'times_seen': ('django.db.models.fields.PositiveIntegerField', [], {'default': '0'})
+            'values_seen': ('django.db.models.fields.PositiveIntegerField', [], {'default': '0'})
         },
         'sentry.filtervalue': {
             'Meta': {'unique_together': "(('project', 'key', 'value'),)", 'object_name': 'FilterValue'},
@@ -228,6 +229,14 @@ class Migration(SchemaMigration):
             'times_seen': ('django.db.models.fields.PositiveIntegerField', [], {'default': '0'}),
             'value': ('django.db.models.fields.CharField', [], {'max_length': '200'})
         },
+        'sentry.grouptagkey': {
+            'Meta': {'unique_together': "(('project', 'group', 'key'),)", 'object_name': 'GroupTagKey'},
+            'group': ('django.db.models.fields.related.ForeignKey', [], {'to': "orm['sentry.Group']"}),
+            'id': ('django.db.models.fields.AutoField', [], {'primary_key': 'True'}),
+            'key': ('django.db.models.fields.CharField', [], {'max_length': '32'}),
+            'project': ('django.db.models.fields.related.ForeignKey', [], {'to': "orm['sentry.Project']", 'null': 'True'}),
+            'values_seen': ('django.db.models.fields.PositiveIntegerField', [], {'default': '0'})
+        },
         'sentry.lostpasswordhash': {
             'Meta': {'object_name': 'LostPasswordHash'},
             'date_added': ('django.db.models.fields.DateTimeField', [], {'default': 'datetime.datetime.now'}),
diff --git a/src/sentry/models.py b/src/sentry/models.py
index 909a47c8e3..a6a388cb8b 100644
--- a/src/sentry/models.py
+++ b/src/sentry/models.py
@@ -720,9 +720,7 @@ class FilterKey(Model):
     """
     project = models.ForeignKey(Project)
     key = models.CharField(max_length=32)
-    times_seen = models.PositiveIntegerField(default=0)
-    last_seen = models.DateTimeField(default=timezone.now, db_index=True, null=True)
-    first_seen = models.DateTimeField(default=timezone.now, db_index=True, null=True)
+    values_seen = models.PositiveIntegerField(default=0)
 
     objects = FilterKeyManager()
 
@@ -751,6 +749,25 @@ class FilterValue(Model):
     __repr__ = sane_repr('project_id', 'key', 'value')
 
 
+class GroupTagKey(Model):
+    """
+    Stores a unique tag key name for a group.
+
+    An example key might be "url" or "server_name".
+    """
+    project = models.ForeignKey(Project, null=True)
+    group = models.ForeignKey(Group)
+    key = models.CharField(max_length=32)
+    values_seen = models.PositiveIntegerField(default=0)
+
+    objects = BaseManager()
+
+    class Meta:
+        unique_together = (('project', 'group', 'key'),)
+
+    __repr__ = sane_repr('project_id', 'group_id', 'key')
+
+
 class GroupTag(Model):
     """
     Stores the total number of messages seen by a group matching
diff --git a/src/sentry/tasks/cleanup.py b/src/sentry/tasks/cleanup.py
index 185c660758..cf067afa7d 100644
--- a/src/sentry/tasks/cleanup.py
+++ b/src/sentry/tasks/cleanup.py
@@ -23,8 +23,9 @@ def cleanup(days=30, project=None, **kwargs):
 
     from django.utils import timezone
 
+    # TODO: FilterKey and GroupTagKey need cleaned up
     from sentry.models import (Group, Event, GroupCountByMinute,
-        GroupTag, FilterKey, FilterValue, ProjectCountByMinute,
+        GroupTag, FilterValue, ProjectCountByMinute,
         SearchDocument, Activity, AffectedUserByGroup, LostPasswordHash)
     from sentry.utils.query import RangeQuerySetWrapper
 
@@ -36,7 +37,6 @@ def cleanup(days=30, project=None, **kwargs):
         (Event, 'datetime'),
         (Activity, 'datetime'),
         (AffectedUserByGroup, 'last_seen'),
-        (FilterKey, 'last_seen'),
         (FilterValue, 'last_seen'),
 
         # Group should probably be last
