commit a08174a39a7f6a4da4b6d06d7be2766d30791c6b
Author: David Cramer <dcramer@gmail.com>
Date:   Wed Feb 1 21:51:17 2012 -0800

    Correct widgets rendering

diff --git a/TODO b/TODO
index 13365893d3..0b62d5e6b8 100644
--- a/TODO
+++ b/TODO
@@ -5,4 +5,5 @@
 - Polling API is awful
 - Pause/Play, Sort By, and Notification settings should be saved in a cookie
 - Add first_seen, last_seen for all filter values
-- Potentially add graphs per server/url/etc ?
\ No newline at end of file
+- Potentially add graphs per server/url/etc ?
+- Make uninteresting frames in stacktraces opaque
\ No newline at end of file
diff --git a/sentry/models.py b/sentry/models.py
index b0ee644c43..181415d235 100644
--- a/sentry/models.py
+++ b/sentry/models.py
@@ -313,30 +313,6 @@ class Group(MessageBase):
                 self._latest_event = None
         return self._latest_event
 
-    @property
-    def unique_urls(self):
-        return self.messagefiltervalue_set.filter(key='url')\
-                   .values_list('value')\
-                   .annotate(times_seen=Sum('times_seen'))\
-                   .values_list('value', 'times_seen')\
-                   .order_by('-times_seen')
-
-    @property
-    def unique_servers(self):
-        return self.messagefiltervalue_set.filter(key='server_name')\
-                   .values_list('value')\
-                   .annotate(times_seen=Sum('times_seen'))\
-                   .values_list('value', 'times_seen')\
-                   .order_by('-times_seen')
-
-    @property
-    def unique_sites(self):
-        return self.messagefiltervalue_set.filter(key='site')\
-                   .values_list('value')\
-                   .annotate(times_seen=Sum('times_seen'))\
-                   .values_list('value', 'times_seen')\
-                   .order_by('-times_seen')
-
     def get_version(self):
         if not self.data:
             return
diff --git a/sentry/plugins/base.py b/sentry/plugins/base.py
index 66ffbdc706..0d985fb16e 100644
--- a/sentry/plugins/base.py
+++ b/sentry/plugins/base.py
@@ -9,7 +9,7 @@ sentry.plugins.base
 __all__ = ('Plugin', 'plugins')
 
 from django.core.urlresolvers import reverse
-from django.http import HttpResponseRedirect
+from django.http import HttpResponseRedirect, HttpResponse
 
 from sentry.utils import InstanceManager
 
@@ -20,11 +20,17 @@ class Response(object):
         self.context = context
 
     def respond(self, request, context=None):
-        from sentry.web.helpers import render_to_response
+        return HttpResponse(self.render(request, context))
 
+    def render(self, request, context=None):
+        from sentry.web.helpers import render_to_string
+
+        if not context:
+            context = {}
         if self.context:
             context.update(self.context)
-        return render_to_response(self.template, context, request)
+
+        return render_to_string(self.template, context, request)
 
 
 class PluginManager(InstanceManager):
diff --git a/sentry/plugins/sentry_servers/__init__.py b/sentry/plugins/sentry_servers/__init__.py
index 99fb2f166a..45d504f5f0 100644
--- a/sentry/plugins/sentry_servers/__init__.py
+++ b/sentry/plugins/sentry_servers/__init__.py
@@ -6,6 +6,7 @@ sentry.plugins.sentry_servers
 :license: BSD, see LICENSE for more details.
 """
 
+from django.db.models import Sum
 from sentry.plugins import Plugin
 
 
@@ -19,6 +20,13 @@ class ServersPlugin(Plugin):
 
     title = 'Servers'
 
+    def get_unique_servers(self, group):
+        return group.messagefiltervalue_set.filter(key='server_name')\
+                   .values_list('value')\
+                   .annotate(times_seen=Sum('times_seen'))\
+                   .values_list('value', 'times_seen')\
+                   .order_by('-times_seen')
+
     def panels(self, request, group, panel_list, **kwargs):
         panel_list.append((self.get_title(), self.get_url(group)))
         return panel_list
@@ -27,4 +35,7 @@ class ServersPlugin(Plugin):
         return self.render('sentry/plugins/sentry_servers/index.html')
 
     def widget(self, request, group, **kwargs):
-        return self.render('sentry/plugins/sentry_servers/widget.html')
+        return self.render('sentry/plugins/sentry_servers/widget.html', {
+            'unique_servers': list(self.get_unique_servers(group)[:10]),
+            'group': group,
+        })
diff --git a/sentry/plugins/sentry_servers/templates/sentry/plugins/sentry_servers/widget.html b/sentry/plugins/sentry_servers/templates/sentry/plugins/sentry_servers/widget.html
index 54d33ad74c..1377e723a1 100644
--- a/sentry/plugins/sentry_servers/templates/sentry/plugins/sentry_servers/widget.html
+++ b/sentry/plugins/sentry_servers/templates/sentry/plugins/sentry_servers/widget.html
@@ -1,16 +1,14 @@
 {% load i18n %}
 {% load sentry_helpers %}
 
-{% with group.unique_servers|slice:"10" as unique_servers %}
-    {% if unique_servers %}
-        <div class="page-header">
-            <h3>{% trans "Servers" %}</h3>
-        </div>
+{% if unique_servers %}
+    <div class="page-header">
+        <h3>{% trans "Servers" %}</h3>
+    </div>
 
-        <ul class="server-list">
-            {% for server in unique_servers %}
-                <li><span class="count">{{ server.1|small_count }}</span> <a href="{% url sentry group.project_id %}?server_name={{ server.0 }}">{{ server.0 }}</a></li>
-            {% endfor %}
-        </ul>
-    {% endif %}
-{% endwith %}
\ No newline at end of file
+    <ul class="server-list">
+        {% for server in unique_servers %}
+            <li><span class="count">{{ server.1|small_count }}</span> <a href="{% url sentry group.project_id %}?server_name={{ server.0 }}">{{ server.0 }}</a></li>
+        {% endfor %}
+    </ul>
+{% endif %}
diff --git a/sentry/plugins/sentry_sites/__init__.py b/sentry/plugins/sentry_sites/__init__.py
index 4ce2b314b3..47649bae0f 100644
--- a/sentry/plugins/sentry_sites/__init__.py
+++ b/sentry/plugins/sentry_sites/__init__.py
@@ -5,7 +5,7 @@ sentry.plugins.sentry_sites
 :copyright: (c) 2010 by the Sentry Team, see AUTHORS for more details.
 :license: BSD, see LICENSE for more details.
 """
-
+from django.db.models import Sum
 from sentry.plugins import Plugin
 
 
@@ -19,6 +19,13 @@ class SitesPlugin(Plugin):
 
     title = 'Sites'
 
+    def get_unique_sites(self, group):
+        return group.messagefiltervalue_set.filter(key='site')\
+                   .values_list('value')\
+                   .annotate(times_seen=Sum('times_seen'))\
+                   .values_list('value', 'times_seen')\
+                   .order_by('-times_seen')
+
     def panels(self, request, group, panel_list, **kwargs):
         panel_list.append((self.get_title(), self.get_url(group)))
         return panel_list
@@ -27,4 +34,7 @@ class SitesPlugin(Plugin):
         return self.render('sentry/plugins/sentry_sites/index.html')
 
     def widget(self, request, group, **kwargs):
-        return self.render('sentry/plugins/sentry_sites/widget.html')
+        return self.render('sentry/plugins/sentry_sites/widget.html', {
+            'group': group,
+            'unique_sites': list(self.get_unique_sites(group)[:10]),
+        })
diff --git a/sentry/plugins/sentry_urls/__init__.py b/sentry/plugins/sentry_urls/__init__.py
index a722a44992..943c745c9b 100644
--- a/sentry/plugins/sentry_urls/__init__.py
+++ b/sentry/plugins/sentry_urls/__init__.py
@@ -5,7 +5,7 @@ sentry.plugins.sentry_urls
 :copyright: (c) 2010 by the Sentry Team, see AUTHORS for more details.
 :license: BSD, see LICENSE for more details.
 """
-
+from django.db.models import Sum
 from sentry.plugins import Plugin
 
 
@@ -19,6 +19,13 @@ class UrlsPlugin(Plugin):
 
     title = 'URLs'
 
+    def get_unique_urls(self, group):
+        return group.messagefiltervalue_set.filter(key='url')\
+           .values_list('value')\
+           .annotate(times_seen=Sum('times_seen'))\
+           .values_list('value', 'times_seen')\
+           .order_by('-times_seen')
+
     def panels(self, request, group, panel_list, **kwargs):
         panel_list.append((self.get_title(), self.get_url(group)))
         return panel_list
@@ -27,4 +34,7 @@ class UrlsPlugin(Plugin):
         return self.render('sentry/plugins/sentry_urls/index.html')
 
     def widget(self, request, group, **kwargs):
-        return self.render('sentry/plugins/sentry_urls/widget.html')
+        return self.render('sentry/plugins/sentry_urls/widget.html', {
+            'group': group,
+            'unique_urls': list(self.get_unique_urls(group)[:10]),
+        })
diff --git a/sentry/templatetags/sentry_helpers.py b/sentry/templatetags/sentry_helpers.py
index fe540883c4..02779923ae 100644
--- a/sentry/templatetags/sentry_helpers.py
+++ b/sentry/templatetags/sentry_helpers.py
@@ -159,6 +159,8 @@ def get_widgets(group, request):
     for inst in plugins.all():
         try:
             resp = inst.widget(request, group)
+            if resp:
+                resp = resp.render(request)
         except:
             logger = logging.getLogger('sentry.plugins')
             logger.exception('Error processing widget() on %r', inst.__class__)
