commit 9afea8084cbccaee4d72378f0521a1116ad8290a
Author: David Cramer <dcramer@gmail.com>
Date:   Fri Apr 17 12:46:02 2015 -0700

    Various fixes for react-router

diff --git a/src/sentry/static/sentry/app/components/listLink.jsx b/src/sentry/static/sentry/app/components/listLink.jsx
index 518de4698f..f7e0d06773 100644
--- a/src/sentry/static/sentry/app/components/listLink.jsx
+++ b/src/sentry/static/sentry/app/components/listLink.jsx
@@ -16,24 +16,23 @@ var ListLink = React.createClass({
     onClick: React.PropTypes.func
   },
 
+  contextTypes: {
+    router: React.PropTypes.func
+  },
+
   getDefaultProps() {
     return {
       activeClassName: 'active'
     };
   },
 
-  mixins: [
-    Router.Navigation,
-    Router.State
-  ],
-
   getClassName() {
     var classNames = {};
 
     if (this.props.className)
       classNames[this.props.className] = true;
 
-    if (this.isActive(this.props.to, this.props.params, this.props.query))
+    if (this.context.router.isActive(this.props.to, this.props.params, this.props.query))
       classNames[this.props.activeClassName] = true;
 
     return classSet(classNames);
diff --git a/src/sentry/static/sentry/app/components/projectHeader.jsx b/src/sentry/static/sentry/app/components/projectHeader.jsx
index 8f9761c206..d10330223a 100644
--- a/src/sentry/static/sentry/app/components/projectHeader.jsx
+++ b/src/sentry/static/sentry/app/components/projectHeader.jsx
@@ -19,11 +19,13 @@ var DateRangePicker = React.createClass({
   }
 });
 
-var OrganizationHeader = React.createClass({
-  mixins: [Router.State],
+var ProjectHeader = React.createClass({
+  contextTypes: {
+    router: React.PropTypes.func
+  },
 
   render() {
-    var routeParams = this.getParams();
+    var routeParams = this.context.router.getCurrentParams();
     var navSection = this.props.activeSection;
     var urlPrefix = ConfigStore.get('urlPrefix');
 
@@ -51,4 +53,4 @@ var OrganizationHeader = React.createClass({
   }
 });
 
-module.exports = OrganizationHeader;
+module.exports = ProjectHeader;
diff --git a/src/sentry/static/sentry/app/mixins/breadcrumbMixin.jsx b/src/sentry/static/sentry/app/mixins/breadcrumbMixin.jsx
index 0efac000f6..227654ab02 100644
--- a/src/sentry/static/sentry/app/mixins/breadcrumbMixin.jsx
+++ b/src/sentry/static/sentry/app/mixins/breadcrumbMixin.jsx
@@ -22,32 +22,17 @@ module.exports = {
    * }
    */
 
-  // Require both Router.State and Router.Navigation contexts
-  // We do this to avoid potentially duplicating mixins
   contextTypes: {
-    // Router.State
-    getCurrentPath: React.PropTypes.func.isRequired,
-    getCurrentRoutes: React.PropTypes.func.isRequired,
-    getCurrentPathname: React.PropTypes.func.isRequired,
-    getCurrentParams: React.PropTypes.func.isRequired,
-    getCurrentQuery: React.PropTypes.func.isRequired,
-    isActive: React.PropTypes.func.isRequired,
-
-    // Router.Navigation
-    makePath: React.PropTypes.func.isRequired,
-    makeHref: React.PropTypes.func.isRequired,
-    transitionTo: React.PropTypes.func.isRequired,
-    replaceWith: React.PropTypes.func.isRequired,
-    goBack: React.PropTypes.func.isRequired
+    router: React.PropTypes.func.isRequired
   },
 
   goToRoute(node) {
-    return this.context.transitionTo(node.to, node.params, node.query);
+    return this.context.router.transitionTo(node.to, node.params, node.query);
   },
 
   breadcrumbFromNode(node) {
     if (typeof node.params === 'undefined') {
-      node.params = this.context.getCurrentParams();
+      node.params = this.context.router.getCurrentParams();
     }
 
     return (
diff --git a/src/sentry/static/sentry/app/views/groupDetails/header.jsx b/src/sentry/static/sentry/app/views/groupDetails/header.jsx
index b7d6ad9c41..27c0c9a56e 100644
--- a/src/sentry/static/sentry/app/views/groupDetails/header.jsx
+++ b/src/sentry/static/sentry/app/views/groupDetails/header.jsx
@@ -14,17 +14,20 @@ var PropTypes = require("../../proptypes");
 
 var GroupHeader = React.createClass({
   mixins: [
-    GroupState,
-    Router.State,
+    GroupState
   ],
 
+  contextTypes: {
+    router: React.PropTypes.func.isRequired
+  },
+
   propTypes: {
     memberList: React.PropTypes.instanceOf(Array).isRequired,
     statsPeriod: React.PropTypes.string.isRequired
   },
 
   isEventDetailView() {
-    var currentRoutes = this.context.getCurrentRoutes();
+    var currentRoutes = this.context.router.getCurrentRoutes();
     return currentRoutes[currentRoutes.length - 1].name == 'groupEventDetails';
   },
 
@@ -51,7 +54,7 @@ var GroupHeader = React.createClass({
       className += " isResolved";
     }
 
-    var groupRouteParams = this.getParams();
+    var groupRouteParams = this.context.router.getCurrentParams();
 
     return (
       <div className={className}>
