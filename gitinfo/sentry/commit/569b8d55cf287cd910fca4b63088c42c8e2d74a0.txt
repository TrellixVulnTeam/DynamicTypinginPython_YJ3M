commit 569b8d55cf287cd910fca4b63088c42c8e2d74a0
Author: MeredithAnya <meredith.a.heller@gmail.com>
Date:   Wed Jul 8 15:40:55 2020 -0700

    ref(integrations): Add new feature flags (#19728)
    
    * ref(integrations): Add new feature flags

diff --git a/src/sentry/conf/server.py b/src/sentry/conf/server.py
index c5b39cd734..6b2d019973 100644
--- a/src/sentry/conf/server.py
+++ b/src/sentry/conf/server.py
@@ -850,7 +850,14 @@ SENTRY_FEATURES = {
     # issues on external services.
     "organizations:integrations-issue-sync": True,
     # Enable interface functionality to receive event hooks.
-    "organizations:integrations-event-hooks": False,
+    "organizations:integrations-event-hooks": True,
+    # Enable integration functionality to work with alert rules
+    "organizations:integrations-alert-rule": True,
+    # Enable integration functionality to work with alert rules (specifically chat integrations)
+    "organizations:integrations-chat-unfurl": True,
+    # Enable integration functionality to work with alert rules (specifically indicdent)
+    # management integrations)
+    "organizations:integrations-incident-management": True,
     # Enable the Vercel integration
     "organizations:integrations-vercel": False,
     # Enable data forwarding functionality for organizations.
diff --git a/src/sentry/features/__init__.py b/src/sentry/features/__init__.py
index 51049b5bbd..6229295832 100644
--- a/src/sentry/features/__init__.py
+++ b/src/sentry/features/__init__.py
@@ -76,6 +76,9 @@ default_manager.add("organizations:incidents", OrganizationFeature)  # NOQA
 default_manager.add("organizations:integrations-event-hooks", OrganizationFeature)  # NOQA
 default_manager.add("organizations:integrations-issue-basic", OrganizationFeature)  # NOQA
 default_manager.add("organizations:integrations-issue-sync", OrganizationFeature)  # NOQA
+default_manager.add("organizations:integrations-alert-rule", OrganizationFeature)  # NOQA
+default_manager.add("organizations:integrations-chat-unfurl", OrganizationFeature)  # NOQA
+default_manager.add("organizations:integrations-incident-management", OrganizationFeature)  # NOQA
 default_manager.add("organizations:integrations-vercel", OrganizationFeature)  # NOQA
 default_manager.add("organizations:internal-catchall", OrganizationFeature)  # NOQA
 default_manager.add("organizations:invite-members", OrganizationFeature)  # NOQA
diff --git a/src/sentry/integrations/pagerduty/integration.py b/src/sentry/integrations/pagerduty/integration.py
index 5d435dbc95..0289658e9b 100644
--- a/src/sentry/integrations/pagerduty/integration.py
+++ b/src/sentry/integrations/pagerduty/integration.py
@@ -134,7 +134,7 @@ class PagerDutyIntegrationProvider(IntegrationProvider):
     key = "pagerduty"
     name = "PagerDuty"
     metadata = metadata
-    features = frozenset([IntegrationFeatures.ALERT_RULE])
+    features = frozenset([IntegrationFeatures.ALERT_RULE, IntegrationFeatures.INCIDENT_MANAGEMENT])
     integration_cls = PagerDutyIntegration
 
     setup_dialog_config = {"width": 600, "height": 900}
diff --git a/tests/sentry/api/endpoints/test_sentry_app_details.py b/tests/sentry/api/endpoints/test_sentry_app_details.py
index 2e69dffe84..ca35256b8d 100644
--- a/tests/sentry/api/endpoints/test_sentry_app_details.py
+++ b/tests/sentry/api/endpoints/test_sentry_app_details.py
@@ -4,7 +4,7 @@ from django.core.urlresolvers import reverse
 from sentry.constants import SentryAppStatus
 from sentry.models import SentryApp, OrganizationMember
 from sentry.testutils import APITestCase
-from sentry.testutils.helpers import with_feature
+from sentry.testutils.helpers import Feature, with_feature
 from sentry.utils import json
 from sentry.utils.compat.mock import patch
 
@@ -228,10 +228,11 @@ class UpdateSentryAppDetailsTest(SentryAppDetailsTest):
 
     def test_cannot_add_error_created_hook_without_flag(self):
         self.login_as(user=self.user)
-        app = self.create_sentry_app(name="SampleApp", organization=self.org)
-        url = reverse("sentry-api-0-sentry-app-details", args=[app.slug])
-        response = self.client.put(url, data={"events": ("error",)}, format="json")
-        assert response.status_code == 403
+        with Feature({"organizations:integrations-event-hooks": False}):
+            app = self.create_sentry_app(name="SampleApp", organization=self.org)
+            url = reverse("sentry-api-0-sentry-app-details", args=[app.slug])
+            response = self.client.put(url, data={"events": ("error",)}, format="json")
+            assert response.status_code == 403
 
     @with_feature("organizations:integrations-event-hooks")
     def test_can_add_error_created_hook_with_flag(self):
diff --git a/tests/sentry/api/endpoints/test_sentry_apps.py b/tests/sentry/api/endpoints/test_sentry_apps.py
index 97174b6a3d..4d806f9fd7 100644
--- a/tests/sentry/api/endpoints/test_sentry_apps.py
+++ b/tests/sentry/api/endpoints/test_sentry_apps.py
@@ -9,7 +9,7 @@ from django.core.urlresolvers import reverse
 from sentry.constants import SentryAppStatus
 from sentry.utils import json
 from sentry.testutils import APITestCase
-from sentry.testutils.helpers import with_feature
+from sentry.testutils.helpers import Feature, with_feature
 from sentry.models import (
     SentryApp,
     SentryAppInstallationToken,
@@ -435,14 +435,15 @@ class PostSentryAppsTest(SentryAppsTest):
     def test_cannot_create_with_error_created_hook_without_flag(self):
         self.login_as(user=self.user)
 
-        kwargs = {"events": ("error",)}
-        response = self._post(**kwargs)
+        with Feature({"organizations:integrations-event-hooks": False}):
+            kwargs = {"events": ("error",)}
+            response = self._post(**kwargs)
 
-        assert response.status_code == 403, response.content
-        assert (
-            response.content
-            == '{"non_field_errors":["Your organization does not have access to the \'error\' resource subscription."]}'
-        )
+            assert response.status_code == 403, response.content
+            assert (
+                response.content
+                == '{"non_field_errors":["Your organization does not have access to the \'error\' resource subscription."]}'
+            )
 
     def test_allows_empty_schema(self):
         self.login_as(self.user)
diff --git a/tests/sentry/api/serializers/test_organization.py b/tests/sentry/api/serializers/test_organization.py
index d542e512ad..7f1f269584 100644
--- a/tests/sentry/api/serializers/test_organization.py
+++ b/tests/sentry/api/serializers/test_organization.py
@@ -26,6 +26,10 @@ class OrganizationSerializerTest(TestCase):
                 "open-membership",
                 "integrations-issue-basic",
                 "integrations-issue-sync",
+                "integrations-alert-rule",
+                "integrations-chat-unfurl",
+                "integrations-incident-management",
+                "integrations-event-hooks",
                 "data-forwarding",
                 "invite-members",
                 "sso-saml2",
