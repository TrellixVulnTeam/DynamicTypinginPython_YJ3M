commit ed4b257ca1f527da07fffc2a4a9b1bcb75aa1e73
Author: Matt Robenolt <matt@ydekproductions.com>
Date:   Wed Nov 2 09:18:57 2016 -0700

    auth: prevent open redirects (#4446)
    
    These were introduced in GH-4255

diff --git a/src/sentry/utils/auth.py b/src/sentry/utils/auth.py
index 40d2f3c22c..6fc0c7b548 100644
--- a/src/sentry/utils/auth.py
+++ b/src/sentry/utils/auth.py
@@ -9,12 +9,13 @@ from __future__ import absolute_import
 
 import six
 import logging
+from time import time
 
 from django.conf import settings
 from django.contrib.auth import login as _login
 from django.contrib.auth.backends import ModelBackend
 from django.core.urlresolvers import reverse, resolve
-from time import time
+from sudo.utils import is_safe_url
 
 from sentry.models import User, Authenticator
 
@@ -128,20 +129,18 @@ def get_login_redirect(request, default=None):
     if not login_url:
         return default
 
-    if not is_valid_redirect(login_url):
+    if not is_valid_redirect(login_url, host=request.get_host()):
         login_url = default
 
     return login_url
 
 
-def is_valid_redirect(url):
+def is_valid_redirect(url, host=None):
     if not url:
         return False
-    if url.startswith(('http://', 'https://')):
-        return False
     if url.startswith(get_login_url()):
         return False
-    return True
+    return is_safe_url(url, host=host)
 
 
 def mark_sso_complete(request, organization_id):
diff --git a/src/sentry/web/frontend/auth_login.py b/src/sentry/web/frontend/auth_login.py
index 173cda8c06..a68c31ec7f 100644
--- a/src/sentry/web/frontend/auth_login.py
+++ b/src/sentry/web/frontend/auth_login.py
@@ -126,7 +126,7 @@ class AuthLoginView(BaseView):
     def handle(self, request):
         next_uri = request.GET.get(REDIRECT_FIELD_NAME, None)
         if request.user.is_authenticated():
-            if auth.is_valid_redirect(next_uri):
+            if auth.is_valid_redirect(next_uri, host=request.get_host()):
                 return self.redirect(next_uri)
             return self.redirect_to_org(request)
 
diff --git a/src/sentry/web/frontend/auth_logout.py b/src/sentry/web/frontend/auth_logout.py
index 99f469d5ae..efc1955b91 100644
--- a/src/sentry/web/frontend/auth_logout.py
+++ b/src/sentry/web/frontend/auth_logout.py
@@ -2,6 +2,7 @@ from __future__ import absolute_import
 
 from django.contrib.auth import logout, REDIRECT_FIELD_NAME
 from django.contrib.auth.models import AnonymousUser
+from sudo.utils import is_safe_url
 
 from sentry.web.frontend.base import BaseView
 from sentry.utils import auth
@@ -12,7 +13,7 @@ class AuthLogoutView(BaseView):
 
     def handle(self, request):
         next = request.GET.get(REDIRECT_FIELD_NAME, '')
-        if not next.startswith('/'):
+        if not is_safe_url(next, host=request.get_host()):
             next = auth.get_login_url()
         logout(request)
         request.user = AnonymousUser()
diff --git a/tests/sentry/utils/auth/tests.py b/tests/sentry/utils/auth/tests.py
index d641304fc2..64f78ab2b4 100644
--- a/tests/sentry/utils/auth/tests.py
+++ b/tests/sentry/utils/auth/tests.py
@@ -37,6 +37,8 @@ class EmailAuthBackendTest(TestCase):
 class GetLoginRedirectTest(TestCase):
     def make_request(self, next=None):
         request = HttpRequest()
+        request.META['SERVER_NAME'] = 'testserver'
+        request.META['SERVER_PORT'] = '80'
         request.session = {}
         request.user = self.user
         if next:
