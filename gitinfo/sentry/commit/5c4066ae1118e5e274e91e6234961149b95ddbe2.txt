commit 5c4066ae1118e5e274e91e6234961149b95ddbe2
Author: David Cramer <dcramer@gmail.com>
Date:   Tue Aug 31 14:08:49 2010 -0700

    Add a hard foreignkey for groups so that managers work better

diff --git a/example_project/fixtures/sample.json b/example_project/fixtures/sample.json
index cc6e2b32f1..a7f6928fcb 100644
--- a/example_project/fixtures/sample.json
+++ b/example_project/fixtures/sample.json
@@ -3,7 +3,6 @@
     "fields": {
       "status": 0, 
       "first_seen": "2010-08-31 17:50:40", 
-      "server_name": "dcramer.local", 
       "level": 40, 
       "class_name": "DoesNotExist", 
       "checksum": "5155a8196fbc979218602d3fb4091e59", 
@@ -21,7 +20,6 @@
     "fields": {
       "status": 0, 
       "first_seen": "2010-08-31 17:50:47", 
-      "server_name": "dcramer.local", 
       "level": 40, 
       "class_name": "KeyError", 
       "checksum": "ed77d1185670a58e7242fde014d980e9", 
@@ -39,7 +37,6 @@
     "fields": {
       "status": 0, 
       "first_seen": "2010-08-31 17:53:31", 
-      "server_name": "dcramer.local", 
       "level": 40, 
       "class_name": "NameError", 
       "checksum": "ff554a446687e950d719b0c996f55953", 
@@ -57,7 +54,6 @@
     "fields": {
       "status": 0, 
       "first_seen": "2010-08-31 17:53:53", 
-      "server_name": "dcramer.local", 
       "level": 40, 
       "class_name": "AttributeError", 
       "checksum": "561fd84df24b5ff5c4b24cf3ab757b3b", 
@@ -75,7 +71,6 @@
     "fields": {
       "status": 0, 
       "first_seen": "2010-08-31 17:54:23", 
-      "server_name": "dcramer.local", 
       "level": 40, 
       "class_name": "AttributeError", 
       "checksum": "e27c40cb7b42d2752efc37f4f7ecfb12", 
@@ -93,7 +88,6 @@
     "fields": {
       "status": 0, 
       "first_seen": "2010-08-31 17:54:43", 
-      "server_name": "dcramer.local", 
       "level": 40, 
       "class_name": "TemplateSyntaxError", 
       "checksum": "1be8fabd857629e0413cbbd8bf396381", 
@@ -109,57 +103,7 @@
   }, 
   {
     "fields": {
-      "server_name": "dcramer.local", 
-      "level": 40, 
-      "class_name": "DoesNotExist", 
-      "checksum": "5155a8196fbc979218602d3fb4091e59", 
-      "traceback": "Traceback (most recent call last):\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/core/handlers/base.py\", line 100, in get_response\n    response = callback(request, *callback_args, **callback_kwargs)\n\n  File \"/Users/dcramer/Development/django-sentry/sentry/views.py\", line 85, in group\n    ).get(pk=group_id)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/db/models/query.py\", line 342, in get\n    % self.model._meta.object_name)\n\nDoesNotExist: GroupedMessage matching query does not exist.\n", 
-      "datetime": "2010-08-31 17:50:40", 
-      "url": "http://dcramer.local:8002/group/19", 
-      "logger": "root", 
-      "data": "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", 
-      "message": "GroupedMessage matching query does not exist.", 
-      "view": "django.core.handlers.base.get"
-    }, 
-    "model": "sentry.message", 
-    "pk": 1
-  }, 
-  {
-    "fields": {
-      "server_name": "dcramer.local", 
-      "level": 40, 
-      "class_name": "DoesNotExist", 
-      "checksum": "5155a8196fbc979218602d3fb4091e59", 
-      "traceback": "Traceback (most recent call last):\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/core/handlers/base.py\", line 100, in get_response\n    response = callback(request, *callback_args, **callback_kwargs)\n\n  File \"/Users/dcramer/Development/django-sentry/sentry/views.py\", line 85, in group\n    ).get(pk=group_id)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/db/models/query.py\", line 342, in get\n    % self.model._meta.object_name)\n\nDoesNotExist: GroupedMessage matching query does not exist.\n", 
-      "datetime": "2010-08-31 17:50:42", 
-      "url": "http://dcramer.local:8002/group/19", 
-      "logger": "root", 
-      "data": "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", 
-      "message": "GroupedMessage matching query does not exist.", 
-      "view": "django.core.handlers.base.get"
-    }, 
-    "model": "sentry.message", 
-    "pk": 2
-  }, 
-  {
-    "fields": {
-      "server_name": "dcramer.local", 
-      "level": 40, 
-      "class_name": "DoesNotExist", 
-      "checksum": "5155a8196fbc979218602d3fb4091e59", 
-      "traceback": "Traceback (most recent call last):\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/core/handlers/base.py\", line 100, in get_response\n    response = callback(request, *callback_args, **callback_kwargs)\n\n  File \"/Users/dcramer/Development/django-sentry/sentry/views.py\", line 85, in group\n    ).get(pk=group_id)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/db/models/query.py\", line 342, in get\n    % self.model._meta.object_name)\n\nDoesNotExist: GroupedMessage matching query does not exist.\n", 
-      "datetime": "2010-08-31 17:50:43", 
-      "url": "http://dcramer.local:8002/group/19", 
-      "logger": "root", 
-      "data": "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", 
-      "message": "GroupedMessage matching query does not exist.", 
-      "view": "django.core.handlers.base.get"
-    }, 
-    "model": "sentry.message", 
-    "pk": 3
-  }, 
-  {
-    "fields": {
+      "group": 2, 
       "server_name": "dcramer.local", 
       "level": 40, 
       "class_name": "KeyError", 
@@ -177,6 +121,7 @@
   }, 
   {
     "fields": {
+      "group": 3, 
       "server_name": "dcramer.local", 
       "level": 40, 
       "class_name": "NameError", 
@@ -194,6 +139,7 @@
   }, 
   {
     "fields": {
+      "group": 3, 
       "server_name": "dcramer.local", 
       "level": 40, 
       "class_name": "NameError", 
@@ -211,6 +157,7 @@
   }, 
   {
     "fields": {
+      "group": 3, 
       "server_name": "dcramer.local", 
       "level": 40, 
       "class_name": "NameError", 
@@ -228,23 +175,7 @@
   }, 
   {
     "fields": {
-      "server_name": "dcramer.local", 
-      "level": 40, 
-      "class_name": "NameError", 
-      "checksum": "ff554a446687e950d719b0c996f55953", 
-      "traceback": "Traceback (most recent call last):\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/core/handlers/base.py\", line 100, in get_response\n    response = callback(request, *callback_args, **callback_kwargs)\n\n  File \"/Users/dcramer/Development/django-sentry/sentry/views.py\", line 113, in group\n    fake_request.FOO = bar\n\nNameError: global name 'bar' is not defined\n", 
-      "datetime": "2010-08-31 17:53:31", 
-      "url": "http://dcramer.local:8002/group/1", 
-      "logger": "root", 
-      "data": "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", 
-      "message": "global name 'bar' is not defined", 
-      "view": "sentry.views.group"
-    }, 
-    "model": "sentry.message", 
-    "pk": 8
-  }, 
-  {
-    "fields": {
+      "group": 4, 
       "server_name": "dcramer.local", 
       "level": 40, 
       "class_name": "AttributeError", 
@@ -262,6 +193,7 @@
   }, 
   {
     "fields": {
+      "group": 4, 
       "server_name": "dcramer.local", 
       "level": 40, 
       "class_name": "AttributeError", 
@@ -279,6 +211,7 @@
   }, 
   {
     "fields": {
+      "group": 4, 
       "server_name": "dcramer.local", 
       "level": 40, 
       "class_name": "AttributeError", 
@@ -296,108 +229,115 @@
   }, 
   {
     "fields": {
+      "group": 5, 
       "server_name": "dcramer.local", 
       "level": 40, 
       "class_name": "AttributeError", 
-      "checksum": "561fd84df24b5ff5c4b24cf3ab757b3b", 
-      "traceback": "Traceback (most recent call last):\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/core/handlers/base.py\", line 100, in get_response\n    response = callback(request, *callback_args, **callback_kwargs)\n\n  File \"/Users/dcramer/Development/django-sentry/sentry/views.py\", line 110, in group\n    exc_value.args = args\n\nAttributeError: 'tuple' object has no attribute 'args'\n", 
-      "datetime": "2010-08-31 17:53:54", 
-      "url": "http://dcramer.local:8002/group/3", 
+      "checksum": "e27c40cb7b42d2752efc37f4f7ecfb12", 
+      "traceback": "Traceback (most recent call last):\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/core/handlers/base.py\", line 100, in get_response\n    response = callback(request, *callback_args, **callback_kwargs)\n\n  File \"/Users/dcramer/Development/django-sentry/sentry/views.py\", line 43, in index\n    today = datetime.datetime.tomorrow()\n\nAttributeError: type object 'datetime.datetime' has no attribute 'tomorrow'\n", 
+      "datetime": "2010-08-31 17:54:23", 
+      "url": "http://dcramer.local:8002/", 
       "logger": "root", 
-      "data": "", 
-      "message": "'tuple' object has no attribute 'args'", 
-      "view": "sentry.views.group"
+      "data": "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", 
+      "message": "type object 'datetime.datetime' has no attribute 'tomorrow'", 
+      "view": "sentry.views.index"
     }, 
     "model": "sentry.message", 
-    "pk": 12
+    "pk": 16
   }, 
   {
     "fields": {
+      "group": 5, 
       "server_name": "dcramer.local", 
       "level": 40, 
       "class_name": "AttributeError", 
-      "checksum": "561fd84df24b5ff5c4b24cf3ab757b3b", 
-      "traceback": "Traceback (most recent call last):\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/core/handlers/base.py\", line 100, in get_response\n    response = callback(request, *callback_args, **callback_kwargs)\n\n  File \"/Users/dcramer/Development/django-sentry/sentry/views.py\", line 110, in group\n    exc_value.args = args\n\nAttributeError: 'tuple' object has no attribute 'args'\n", 
-      "datetime": "2010-08-31 17:53:54", 
-      "url": "http://dcramer.local:8002/group/3", 
+      "checksum": "e27c40cb7b42d2752efc37f4f7ecfb12", 
+      "traceback": "Traceback (most recent call last):\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/core/handlers/base.py\", line 100, in get_response\n    response = callback(request, *callback_args, **callback_kwargs)\n\n  File \"/Users/dcramer/Development/django-sentry/sentry/views.py\", line 43, in index\n    today = datetime.datetime.tomorrow()\n\nAttributeError: type object 'datetime.datetime' has no attribute 'tomorrow'\n", 
+      "datetime": "2010-08-31 17:54:23", 
+      "url": "http://dcramer.local:8002/", 
       "logger": "root", 
-      "data": "", 
-      "message": "'tuple' object has no attribute 'args'", 
-      "view": "sentry.views.group"
+      "data": "eJztW21z2siy/s6vmKrzAdjFegUBjp0qFmObjQ1ewE6c5FyVgAG0ERKRRGxnK//99DOSkBDgJHfv1qm6ZVeKaLp7emZ6Znq6n5FK05VaGBbb/f6bbmdYLKy0Qmm60om0DM2Jt1xyN+Q+0atEcqpV/+v9mf37+7XR70wfz2+H97/r9+Prx8no8rdF7/7idt56vL4n8VohGBY39U3XWnKiGqTEmi5tl57rkJj+aU75eD03V5bLHaI2SGJhTyHcLAQkcdEZ0bOqoFuqijprH4KqBskwXB3L8nTik35fcryJ5Rw3FEWTIaFD2jQD6oL/ZJogVYWaGlXljxMQjELJWan1wp1pjte2E9quaRK5UbBAbxbuwqcVZ974Tz4JWXFqhTy0l1xKHopsYQXM9ZgVhr49XoecFUNv6fm+9wBjKgULijQV7Wro8mztTkLbgwU0vXA356Hp82DluQEnShVdXvmcTE92ewwhVUMXNaNwx3J//2Kt1cp5Yl9s/sCW9nTq8AfLh5p6wdqRnnl+Rshc8nDhTZntsoA7M8mEEjPlH5OWxh4t+Ev6y053FZZ8/nnNg7DCaCqcsTX5lD6Zlj8PMsVPDyCUqaXmgZbs2aYx6pCuHBCLOhWufZelttRVkt5TgdYCdGkFi0z9xfIDsrGuw8Z6VfzWCne0OPgKsxQQzyAlJ0tvunZocqd/Wu7ckyaez6VUqshmvrdkRfk24H6QrEdZ+mL74dpyuPuFiHbweR3Ijj2WV09kKleTDDmwQ360ImNYc04iQrkM5XKqXFo9TYqvqSP1aDHpDeog9elvrUy9GSmrKoW7rfmhna6KxV/VYglapQEPaWcIZhXW2FjBnUlX1tenYcxPumOFTHlUFaVujfWmQn2v1mJltIx31gyxsWBPxt7anbJ4YbYDf3ZHa/J6Iy2tfG/Cg0AsVebNWNKNVKE0oVrSbtVcv1Q+blZV5TU61og71sQonRl5LmVrhKR0Ybmkxw+kh2BuS2+HF93LiLKjtqlVxXBraqS1phXu4g1BRB2KUX0QkT6uFUWxyMEdn/yx5v7TmT0Jj9lf315XIs5Nf3iIFfvr47/yPvaYxQ42FmR5F0sCwr9u+Ft+nrg/7OS/xSquO6MWdQS+iJs36/FwPTaH3uQTebYBd6eRVjlcrmTHIue3OKpbvf6lI8fMTUfa/evrVu/MvO6fdVBl7dqPmqLoWYneqNMbmVed3sXoEjK7vNH9jagN7ymvHCtrivZwcG5GpoNIYzw1qrVarV6dKDOjWtemhtpQjUmjWm1qTSvT8Fl3eHPVus8PRJ+9a+kXsufPpcdjJSP+e6t30TeHndGo27sYYkS3V6JJ/mgtYSZaylg5UrKx0rrnraur31rtN+bZ/dWZedX9bdAa3Js3rWi8srcKZXHMwZGktS5ao87b1r3ZJSMMzltt0Vj7oiurkpqR6o7Mzll31B+A7Vqul/Iuu8MRbDjoX4mO+lbAp+tVpmeX/WuhdtvJZfij0Y3Zarc7NyOxDGk92BMLLkx+XDqVrfIiXDq/giqmCaVXn08VqVlJp00QGhV7Sa5RXrnzyi/yL4JW29uk2b5sDcjiaLo77B81GrXmkVpZh7OjhqhWr0TV9f3VO712/4xmC/XnX+1VZcpnDvnSSjCdLPZXuaJZvm1dRBPrHt0OKzzudU6+3WpfdsyMdZfW4xEN61TJC/Z7vU571O33IPWJ89WR5dhf+I5YsoSzm/f0R3fuK7btNE6Fx3jFtj3F6babEA1fkkdCs7sBV05w0DnvDDpimR2O0ea+t17J+fm4HXYGJlm1J1q69r7ajmPJNUlhpWtrYruhFyxesdtXrEsDcBjRWH/I3jFVMQ2z+oqJmSiL0Ii/5eM3dijXdF2qstKby9H1VYU59ifOLvjkk1dm7QWd2xzaJb1ek1StzobWzPLtqE7aNcx1NM/UQel2dH6UmWTapaN+/6r7XszJnHZm6HmO/TVjvqv+Ra8V7Z+djdO/Ort5e7a7teQz/oU73gpTFccGR1Ewm9bdOIbvRx5j2z3e9h/yygvCOYVMn52GDr6cFbiyx77lP8nnUPng+Z8C+UYELtIsoch31ChiFBnBTK6BXDEQ5XXg75TFw6YU0fPSm+I7VUVh2wLk9877ZIZ1Uc4wuliHf9x2Bx3zrjsY3bbo3LgTZ4O/5nm54Q1tvO/KpXzzt9Zwjzvctnym8lCFcCmaizLItUn0+yFb4B/0+it1mSX9+8Nz0npeOlt4+Kl2fkr4OWllW5RlzPBz61zOnZcZRfejy35vz7H406v2uYD8OG3wj9sOncPD0SA+I1LOoHPdH3XM1tmZ8HdqU5NUoyFptezRGwslDjTLIM3DkUlR1GVfGAcZb8q+7ZnXrW5vdzkO24MuHUKxV1lnVJIDvSMfmvM3kefdkbrpD0SPtp14whz0R/12dGbBOW+HE7HQsH8+etsaiLYQ3Q65/4UmVZFUFlkeZs6e2sPLzpVQKVzO2AoWWd7VneBl2xlemq1b2uXDfvtNPga7vNTef67TtAchd2leM9XuegejHYqSrkF9pDNweTTxHM/fZmLoF4OWEIoi2xFJ2m7Wglk5kywxjM9trZ4500bXN2dd0QOZkk155jlTLP2bW/oXKM5kqXf++Nx4t7TqjtdczH6lv1FXPhotV0cZ9zF6LzpC00ghlNxe0O88MxycmXuPlthfmbFD+/4pkVZ92x+86ffM/VHfVtW0jglJSV5aLm0fylszHLN9Hh3to8677WiLUqfz2rGSDaBFosUpVaX5PGYn3oq7bGYj/z4JQrKf/7pYYZSSE+GhuMk2tepU5crrbS2oZj74FH2KRORk4lhBsJ3HB2LBBhKtRI5oRTqnOm/jKjl1trtah9ATiAxHMqE/TgNz2eBMnynTfHeWaye040SW1JxbTsD3SIQLn1tTEhjRnt/m+2vX9NwJ31977TtmMFnwKBXEaHJW/RL5PuKW1ApTyt+QrlbjdLWWggFEFcBHglcxm7K1xzTVnXFdE6lujErUGkh1A8+hBogKROdkwOf88XZwNYjpLJ/+UG8DVup5Lj/GT5n9j0wqjRg1M9TCHUkkWgPiaIewmKzcP4DGZNUneIyhx92sCsDItN2ZR9SaQE8Mo3B3IhCaYgbJaSVYTAdrWyip/10kxwBMdxL61oRj3nZWodYcTxtoCYgPulbPQj4RBldY1QH6TFf1GPSp62I2YyitDtAHE0SPMZBTN8TcAAEiIgaxb26JBXxlG9M0Hdvl5IyJ2SzcNfXCqqEI2JOC0Qzu2VCBxjW0XdwzMijrJHatMKCDDf0AOvgv1p2xcMEjnNS3bEpsmeUyntanPcXskIQoI5kvUg5prR7UmsJOFVI3BViJVjaVMwIxOhkwizTWDmpMLF5h64CTMiuUWJ90+g82iD4Xnd9uRSKNxgGN34F8Nzq2cd/GPvQ4hVl/BPvlZVLTEAgr/GOM/jdouv8P92QCyyGCwGFTWDXFOtosryb5DzoW6EEDPRyDphd+ZLM0BRBvT1GDnGJV1+pGtapqUGZEVxvpWoZQfXeZ5syVbLnUSr/kgPFfftmFxpuNQoCN2WwW5rgvEF4Y9yE01Hl0NUD9jhovS9Qj3yqBrWXmkGabBnn6F+j5TVIMYEsRXZKrCcyA01Ers9LKeyiVZo7n+SWhdBKW+MqbLCLX6hK3zI4YnaWhqFKmOrqhKGX2K9PKFaZS+ItntVysoNnsLvoGQrIJypLn04Fujp9KxaOoLxVWPNooLpYhnSxwPNczz1hi8wi8V5Wm+E8l7+Z483mMbZALUtXIt6niysj3PHgXVYWHo2c80mQLp6aqNaDAiAZEZfAMcYsQcWmSHaQqoDcy9GZM37SIex+0qOFuTVXEdRU5MoGu4FncTOkRnU4PmmzXdgVH3JtpEcfAdONMUTVxWVaLyHTQzqzQQi+0JuhVQddp4CJkwrOajEjPItCq/gJBv0DQLxD0CwT9AkG/QNAvEPQLBP0CQb9A0C8Q9AsE/QJBv0DQ/1UIWtVjDFrVt3NwpNN4BQ/ptF6ndHrbl4BLCfEWEbRmkgBXN3gAXv9U06y9SpkxqQ9omZiOLdLjKtLjDycXCAr59DpiUi/rFMttIbfHO+ViuKYdWkwmYBexBZ5DM8l2tVfLrEedjxVlHueON7YcBiuw4tjyi8yG1pBRXmC7fLpXm15mZx4Pel7YeaRRHedK2/JsaYWTBWV/7DNSfDYlWdECh7S0twH1+8b4G3j2oSbf8KdYefpECTadzKS1+PrfmD2soGAOUJkWDJVrhWAeocgq3juMcaPJwvJD83PATlncghR1NYhiBdQ8jIBiM5PDLiWDMc15yE9Db2o9sSO2GSt+ptwJrdLCW/vBqVYtl1P1h16sJfURgpcgdkXUjpL2CINDOYLgkqbKxW9l6YvlrHlQisQzDR16r5YaslyaZ9JRctfL07a3dsMS8M5yokzsiVhjhc6u9VJAceLtSKBue8DcwzFU/B8A+EAgtWpNpckBQEt7jkoaSt+DZifiwkmt6RDOoLJNDdQqqDEMG83HKdtZe1Ky0EpiMDV4CbxlDgAJvqRmRC+Iw9Fs4h7Q8V66CH5QEKjbVpKJN8mVZ19ITzJNSIrX2LOHG4gAJ5874SATv9G+/xyDAN7STw8zUASgeCC/AN/IDMwQMGM+pgIDw38usIKMsMregIS4dVgHUQmexfijEAxFMfJNHAaKGGcuLAUdw4s/CKiLgSU5LQhGejiIshiMCEtQauS4orcieMfr/srzxv//mb9i4GIqthILUDEjRbHI49XZ0HcMJMjimgSJJQr4rGKTXX788PFjkrR9pPwxLutR+ePHh5xErpiUFRSYUC/uXRIYFARs0mewUIg08mtSUJtUMRdREzm6PRIoC0qA7rNQC2jaZuPnED8wYaLvwH4QqyZdEiXYLJsBgCYG+gyWDZn82LcBbUhEQ38vnsWAc5E7vk5RNuOJ8TwQ1dzHP/8IqIeGtIy3iXexpuh7QjxNqUYOIc1yQYTttlJdEI3ItyCFQxF2UsVSzsem4DZily0KwiNkcDSiqfALWTANNDX1qDvIDvha6lG16BukOAFDGR7sf5GFoWotYy6RMoMIpyfyZhQi953mnKBhiCLxREEMMXeFQXRNSfZ7BtMAHUvhnwM20EK0Braya5D13PLeSbEhJBZFNr0EsfZDnlyIGpE1Mlc+oGLFbO59QGhsVk+UeYFGwc+Pp1/40ktJFk0evgNT/U6fhZCw1DNXM5DRt+cL9zMgC0NlwRoQKYDaDCyb8IFnFLqKmvENmysBMGGgzL0ASI1UduueATz4nvSyAd+4CVuYRaJn83Rw1Jx/FUTsp3/wJgdN6BtLJLkpqOJzMI3SiC6ljV1FvM6Qvx+AHPbgf/mSAN0Qu3/3Fg4sOIHkKg7l5ma8m1QeHxoqNO1KxtMKqBAMNfEP8T0BaHvi1cOXBaigby+3BIEAq5o0vPduCxLik83tCy6QjXylTDSsiSh+9yINnGjBZu4bQcRKTS8diWJEuzYasLFnl/44agwF2fNuA2uCgW27wTZBEBv2wBUu+NEHrAfucSFgZB29uI8GFfbIXEqDlO7cZLKNZv4EPk4OmLqwR+YKFzQ1c8DUtc0cb4FeYCG7+2nkCxWFMbL35iDCAt+9PIegselRDOaBSGniTyJ6qNVIUoborgckJMHiM+Wb2HoN8aGyhrha+g8mNrJv", 
+      "message": "type object 'datetime.datetime' has no attribute 'tomorrow'", 
+      "view": "sentry.views.index"
     }, 
     "model": "sentry.message", 
-    "pk": 13
+    "pk": 17
   }, 
   {
     "fields": {
+      "group": 5, 
       "server_name": "dcramer.local", 
       "level": 40, 
       "class_name": "AttributeError", 
-      "checksum": "561fd84df24b5ff5c4b24cf3ab757b3b", 
-      "traceback": "Traceback (most recent call last):\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/core/handlers/base.py\", line 100, in get_response\n    response = callback(request, *callback_args, **callback_kwargs)\n\n  File \"/Users/dcramer/Development/django-sentry/sentry/views.py\", line 110, in group\n    exc_value.args = args\n\nAttributeError: 'tuple' object has no attribute 'args'\n", 
-      "datetime": "2010-08-31 17:53:55", 
-      "url": "http://dcramer.local:8002/group/3", 
+      "checksum": "e27c40cb7b42d2752efc37f4f7ecfb12", 
+      "traceback": "Traceback (most recent call last):\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/core/handlers/base.py\", line 100, in get_response\n    response = callback(request, *callback_args, **callback_kwargs)\n\n  File \"/Users/dcramer/Development/django-sentry/sentry/views.py\", line 43, in index\n    today = datetime.datetime.tomorrow()\n\nAttributeError: type object 'datetime.datetime' has no attribute 'tomorrow'\n", 
+      "datetime": "2010-08-31 17:54:24", 
+      "url": "http://dcramer.local:8002/", 
       "logger": "root", 
-      "data": "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", 
-      "message": "'tuple' object has no attribute 'args'", 
-      "view": "sentry.views.group"
+      "data": "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", 
+      "message": "type object 'datetime.datetime' has no attribute 'tomorrow'", 
+      "view": "sentry.views.index"
     }, 
     "model": "sentry.message", 
-    "pk": 14
+    "pk": 18
   }, 
   {
     "fields": {
+      "group": 6, 
       "server_name": "dcramer.local", 
       "level": 40, 
-      "class_name": "AttributeError", 
-      "checksum": "561fd84df24b5ff5c4b24cf3ab757b3b", 
-      "traceback": "Traceback (most recent call last):\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/core/handlers/base.py\", line 100, in get_response\n    response = callback(request, *callback_args, **callback_kwargs)\n\n  File \"/Users/dcramer/Development/django-sentry/sentry/views.py\", line 110, in group\n    exc_value.args = args\n\nAttributeError: 'tuple' object has no attribute 'args'\n", 
-      "datetime": "2010-08-31 17:53:57", 
-      "url": "http://dcramer.local:8002/group/3", 
+      "class_name": "TemplateSyntaxError", 
+      "checksum": "1be8fabd857629e0413cbbd8bf396381", 
+      "traceback": "Traceback (most recent call last):\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/core/handlers/base.py\", line 100, in get_response\n    response = callback(request, *callback_args, **callback_kwargs)\n\n  File \"/Users/dcramer/Development/django-sentry/sentry/views.py\", line 78, in index\n    return render_to_response('sentry/index.html', locals())\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/shortcuts/__init__.py\", line 20, in render_to_response\n    return HttpResponse(loader.render_to_string(*args, **kwargs), **httpresponse_kwargs)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/loader.py\", line 181, in render_to_string\n    t = get_template(template_name)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/loader.py\", line 157, in get_template\n    template, origin = find_template(template_name)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/loader.py\", line 134, in find_template\n    source, display_name = loader(name, dirs)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/loader.py\", line 42, in __call__\n    return self.load_template(template_name, template_dirs)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/loader.py\", line 48, in load_template\n    template = get_template_from_string(source, origin, template_name)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/loader.py\", line 168, in get_template_from_string\n    return Template(source, origin, name)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/__init__.py\", line 158, in __init__\n    self.nodelist = compile_string(template_string, origin)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/__init__.py\", line 186, in compile_string\n    return parser.parse()\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/__init__.py\", line 280, in parse\n    self.invalid_block_tag(token, command, parse_until)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/__init__.py\", line 334, in invalid_block_tag\n    raise self.error(token, \"Invalid block tag: '%s'\" % command)\n\nTemplateSyntaxError: Invalid block tag: 'WE'\n", 
+      "datetime": "2010-08-31 17:54:43", 
+      "url": "http://dcramer.local:8002/", 
       "logger": "root", 
-      "data": "", 
-      "message": "'tuple' object has no attribute 'args'", 
-      "view": "sentry.views.group"
+      "data": "", 
+      "message": "Invalid block tag: 'WE'", 
+      "view": "django.core.handlers.base.invalid_block_tag"
     }, 
     "model": "sentry.message", 
-    "pk": 15
+    "pk": 21
   }, 
   {
     "fields": {
+      "group": 6, 
       "server_name": "dcramer.local", 
       "level": 40, 
-      "class_name": "AttributeError", 
-      "checksum": "e27c40cb7b42d2752efc37f4f7ecfb12", 
-      "traceback": "Traceback (most recent call last):\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/core/handlers/base.py\", line 100, in get_response\n    response = callback(request, *callback_args, **callback_kwargs)\n\n  File \"/Users/dcramer/Development/django-sentry/sentry/views.py\", line 43, in index\n    today = datetime.datetime.tomorrow()\n\nAttributeError: type object 'datetime.datetime' has no attribute 'tomorrow'\n", 
-      "datetime": "2010-08-31 17:54:23", 
+      "class_name": "TemplateSyntaxError", 
+      "checksum": "1be8fabd857629e0413cbbd8bf396381", 
+      "traceback": "Traceback (most recent call last):\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/core/handlers/base.py\", line 100, in get_response\n    response = callback(request, *callback_args, **callback_kwargs)\n\n  File \"/Users/dcramer/Development/django-sentry/sentry/views.py\", line 78, in index\n    return render_to_response('sentry/index.html', locals())\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/shortcuts/__init__.py\", line 20, in render_to_response\n    return HttpResponse(loader.render_to_string(*args, **kwargs), **httpresponse_kwargs)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/loader.py\", line 181, in render_to_string\n    t = get_template(template_name)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/loader.py\", line 157, in get_template\n    template, origin = find_template(template_name)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/loader.py\", line 134, in find_template\n    source, display_name = loader(name, dirs)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/loader.py\", line 42, in __call__\n    return self.load_template(template_name, template_dirs)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/loader.py\", line 48, in load_template\n    template = get_template_from_string(source, origin, template_name)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/loader.py\", line 168, in get_template_from_string\n    return Template(source, origin, name)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/__init__.py\", line 158, in __init__\n    self.nodelist = compile_string(template_string, origin)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/__init__.py\", line 186, in compile_string\n    return parser.parse()\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/__init__.py\", line 280, in parse\n    self.invalid_block_tag(token, command, parse_until)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/__init__.py\", line 334, in invalid_block_tag\n    raise self.error(token, \"Invalid block tag: '%s'\" % command)\n\nTemplateSyntaxError: Invalid block tag: 'WE'\n", 
+      "datetime": "2010-08-31 17:54:44", 
       "url": "http://dcramer.local:8002/", 
       "logger": "root", 
-      "data": "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", 
-      "message": "type object 'datetime.datetime' has no attribute 'tomorrow'", 
-      "view": "sentry.views.index"
+      "data": "", 
+      "message": "Invalid block tag: 'WE'", 
+      "view": "django.core.handlers.base.invalid_block_tag"
     }, 
     "model": "sentry.message", 
-    "pk": 16
+    "pk": 22
   }, 
   {
     "fields": {
+      "group": null, 
       "server_name": "dcramer.local", 
       "level": 40, 
-      "class_name": "AttributeError", 
-      "checksum": "e27c40cb7b42d2752efc37f4f7ecfb12", 
-      "traceback": "Traceback (most recent call last):\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/core/handlers/base.py\", line 100, in get_response\n    response = callback(request, *callback_args, **callback_kwargs)\n\n  File \"/Users/dcramer/Development/django-sentry/sentry/views.py\", line 43, in index\n    today = datetime.datetime.tomorrow()\n\nAttributeError: type object 'datetime.datetime' has no attribute 'tomorrow'\n", 
-      "datetime": "2010-08-31 17:54:23", 
+      "class_name": "FieldError", 
+      "checksum": "f0f5903b5dd704cc7073801c5f4f5056", 
+      "traceback": "Traceback (most recent call last):\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/core/handlers/base.py\", line 100, in get_response\n    response = callback(request, *callback_args, **callback_kwargs)\n\n  File \"/Users/dcramer/Development/django-sentry/sentry/views.py\", line 17, in index\n    server_names = SortedDict((l, l) for l in GroupedMessage.objects.values_list('server_name', flat=True).distinct())\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/db/models/manager.py\", line 174, in values_list\n    return self.get_query_set().values_list(*args, **kwargs)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/db/models/query.py\", line 518, in values_list\n    _fields=fields)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/db/models/query.py\", line 753, in _clone\n    c._setup_query()\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/db/models/query.py\", line 876, in _setup_query\n    self.query.add_fields(self.field_names, False)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/db/models/sql/query.py\", line 1516, in add_fields\n    \"Choices are: %s\" % (name, \", \".join(names)))\n\nFieldError: Cannot resolve keyword 'server_name' into field. Choices are: checksum, class_name, first_seen, id, last_seen, level, logger, message, status, times_seen, traceback, view\n", 
+      "datetime": "2010-08-31 18:00:00", 
       "url": "http://dcramer.local:8002/", 
       "logger": "root", 
-      "data": "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", 
-      "message": "type object 'datetime.datetime' has no attribute 'tomorrow'", 
-      "view": "sentry.views.index"
+      "data": "", 
+      "message": "Cannot resolve keyword 'server_name' into field. Choices are: checksum, class_name, first_seen, id, last_seen, level, logger, message, status, times_seen, traceback, view", 
+      "view": "django.core.handlers.base.add_fields"
     }, 
     "model": "sentry.message", 
-    "pk": 17
+    "pk": 28
   }, 
   {
     "fields": {
+      "group": 5, 
       "server_name": "dcramer.local", 
       "level": 40, 
       "class_name": "AttributeError", 
@@ -406,83 +346,196 @@
       "datetime": "2010-08-31 17:54:24", 
       "url": "http://dcramer.local:8002/", 
       "logger": "root", 
-      "data": "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", 
+      "data": "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", 
       "message": "type object 'datetime.datetime' has no attribute 'tomorrow'", 
       "view": "sentry.views.index"
     }, 
     "model": "sentry.message", 
-    "pk": 18
+    "pk": 20
   }, 
   {
     "fields": {
+      "group": null, 
       "server_name": "dcramer.local", 
       "level": 40, 
-      "class_name": "AttributeError", 
-      "checksum": "e27c40cb7b42d2752efc37f4f7ecfb12", 
-      "traceback": "Traceback (most recent call last):\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/core/handlers/base.py\", line 100, in get_response\n    response = callback(request, *callback_args, **callback_kwargs)\n\n  File \"/Users/dcramer/Development/django-sentry/sentry/views.py\", line 43, in index\n    today = datetime.datetime.tomorrow()\n\nAttributeError: type object 'datetime.datetime' has no attribute 'tomorrow'\n", 
-      "datetime": "2010-08-31 17:54:24", 
+      "class_name": "FieldError", 
+      "checksum": "f0f5903b5dd704cc7073801c5f4f5056", 
+      "traceback": "Traceback (most recent call last):\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/core/handlers/base.py\", line 100, in get_response\n    response = callback(request, *callback_args, **callback_kwargs)\n\n  File \"/Users/dcramer/Development/django-sentry/sentry/views.py\", line 17, in index\n    server_names = SortedDict((l, l) for l in GroupedMessage.objects.values_list('server_name', flat=True).distinct())\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/db/models/manager.py\", line 174, in values_list\n    return self.get_query_set().values_list(*args, **kwargs)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/db/models/query.py\", line 518, in values_list\n    _fields=fields)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/db/models/query.py\", line 753, in _clone\n    c._setup_query()\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/db/models/query.py\", line 876, in _setup_query\n    self.query.add_fields(self.field_names, False)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/db/models/sql/query.py\", line 1516, in add_fields\n    \"Choices are: %s\" % (name, \", \".join(names)))\n\nFieldError: Cannot resolve keyword 'server_name' into field. Choices are: checksum, class_name, first_seen, id, last_seen, level, logger, message, status, times_seen, traceback, view\n", 
+      "datetime": "2010-08-31 18:00:01", 
       "url": "http://dcramer.local:8002/", 
       "logger": "root", 
-      "data": "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", 
-      "message": "type object 'datetime.datetime' has no attribute 'tomorrow'", 
-      "view": "sentry.views.index"
+      "data": "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", 
+      "message": "Cannot resolve keyword 'server_name' into field. Choices are: checksum, class_name, first_seen, id, last_seen, level, logger, message, status, times_seen, traceback, view", 
+      "view": "django.core.handlers.base.add_fields"
     }, 
     "model": "sentry.message", 
-    "pk": 19
+    "pk": 29
+  }, 
+  {
+    "fields": {
+      "group": 1, 
+      "server_name": "dcramer.local", 
+      "level": 40, 
+      "class_name": "DoesNotExist", 
+      "checksum": "5155a8196fbc979218602d3fb4091e59", 
+      "traceback": "Traceback (most recent call last):\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/core/handlers/base.py\", line 100, in get_response\n    response = callback(request, *callback_args, **callback_kwargs)\n\n  File \"/Users/dcramer/Development/django-sentry/sentry/views.py\", line 85, in group\n    ).get(pk=group_id)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/db/models/query.py\", line 342, in get\n    % self.model._meta.object_name)\n\nDoesNotExist: GroupedMessage matching query does not exist.\n", 
+      "datetime": "2010-08-31 17:50:40", 
+      "url": "http://dcramer.local:8002/group/19", 
+      "logger": "root", 
+      "data": "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", 
+      "message": "GroupedMessage matching query does not exist.", 
+      "view": "django.core.handlers.base.get"
+    }, 
+    "model": "sentry.message", 
+    "pk": 1
+  }, 
+  {
+    "fields": {
+      "group": 1, 
+      "server_name": "dcramer.local", 
+      "level": 40, 
+      "class_name": "DoesNotExist", 
+      "checksum": "5155a8196fbc979218602d3fb4091e59", 
+      "traceback": "Traceback (most recent call last):\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/core/handlers/base.py\", line 100, in get_response\n    response = callback(request, *callback_args, **callback_kwargs)\n\n  File \"/Users/dcramer/Development/django-sentry/sentry/views.py\", line 85, in group\n    ).get(pk=group_id)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/db/models/query.py\", line 342, in get\n    % self.model._meta.object_name)\n\nDoesNotExist: GroupedMessage matching query does not exist.\n", 
+      "datetime": "2010-08-31 17:50:42", 
+      "url": "http://dcramer.local:8002/group/19", 
+      "logger": "root", 
+      "data": "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", 
+      "message": "GroupedMessage matching query does not exist.", 
+      "view": "django.core.handlers.base.get"
+    }, 
+    "model": "sentry.message", 
+    "pk": 2
   }, 
   {
     "fields": {
+      "group": 1, 
+      "server_name": "dcramer.local", 
+      "level": 40, 
+      "class_name": "DoesNotExist", 
+      "checksum": "5155a8196fbc979218602d3fb4091e59", 
+      "traceback": "Traceback (most recent call last):\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/core/handlers/base.py\", line 100, in get_response\n    response = callback(request, *callback_args, **callback_kwargs)\n\n  File \"/Users/dcramer/Development/django-sentry/sentry/views.py\", line 85, in group\n    ).get(pk=group_id)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/db/models/query.py\", line 342, in get\n    % self.model._meta.object_name)\n\nDoesNotExist: GroupedMessage matching query does not exist.\n", 
+      "datetime": "2010-08-31 17:50:43", 
+      "url": "http://dcramer.local:8002/group/19", 
+      "logger": "root", 
+      "data": "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", 
+      "message": "GroupedMessage matching query does not exist.", 
+      "view": "django.core.handlers.base.get"
+    }, 
+    "model": "sentry.message", 
+    "pk": 3
+  }, 
+  {
+    "fields": {
+      "group": 3, 
+      "server_name": "dcramer.local", 
+      "level": 40, 
+      "class_name": "NameError", 
+      "checksum": "ff554a446687e950d719b0c996f55953", 
+      "traceback": "Traceback (most recent call last):\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/core/handlers/base.py\", line 100, in get_response\n    response = callback(request, *callback_args, **callback_kwargs)\n\n  File \"/Users/dcramer/Development/django-sentry/sentry/views.py\", line 113, in group\n    fake_request.FOO = bar\n\nNameError: global name 'bar' is not defined\n", 
+      "datetime": "2010-08-31 17:53:31", 
+      "url": "http://dcramer.local:8002/group/1", 
+      "logger": "root", 
+      "data": "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", 
+      "message": "global name 'bar' is not defined", 
+      "view": "sentry.views.group"
+    }, 
+    "model": "sentry.message", 
+    "pk": 8
+  }, 
+  {
+    "fields": {
+      "group": 4, 
       "server_name": "dcramer.local", 
       "level": 40, 
       "class_name": "AttributeError", 
-      "checksum": "e27c40cb7b42d2752efc37f4f7ecfb12", 
-      "traceback": "Traceback (most recent call last):\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/core/handlers/base.py\", line 100, in get_response\n    response = callback(request, *callback_args, **callback_kwargs)\n\n  File \"/Users/dcramer/Development/django-sentry/sentry/views.py\", line 43, in index\n    today = datetime.datetime.tomorrow()\n\nAttributeError: type object 'datetime.datetime' has no attribute 'tomorrow'\n", 
-      "datetime": "2010-08-31 17:54:24", 
-      "url": "http://dcramer.local:8002/", 
+      "checksum": "561fd84df24b5ff5c4b24cf3ab757b3b", 
+      "traceback": "Traceback (most recent call last):\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/core/handlers/base.py\", line 100, in get_response\n    response = callback(request, *callback_args, **callback_kwargs)\n\n  File \"/Users/dcramer/Development/django-sentry/sentry/views.py\", line 110, in group\n    exc_value.args = args\n\nAttributeError: 'tuple' object has no attribute 'args'\n", 
+      "datetime": "2010-08-31 17:53:54", 
+      "url": "http://dcramer.local:8002/group/3", 
       "logger": "root", 
-      "data": "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", 
-      "message": "type object 'datetime.datetime' has no attribute 'tomorrow'", 
-      "view": "sentry.views.index"
+      "data": "", 
+      "message": "'tuple' object has no attribute 'args'", 
+      "view": "sentry.views.group"
     }, 
     "model": "sentry.message", 
-    "pk": 20
+    "pk": 12
   }, 
   {
     "fields": {
+      "group": 4, 
       "server_name": "dcramer.local", 
       "level": 40, 
-      "class_name": "TemplateSyntaxError", 
-      "checksum": "1be8fabd857629e0413cbbd8bf396381", 
-      "traceback": "Traceback (most recent call last):\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/core/handlers/base.py\", line 100, in get_response\n    response = callback(request, *callback_args, **callback_kwargs)\n\n  File \"/Users/dcramer/Development/django-sentry/sentry/views.py\", line 78, in index\n    return render_to_response('sentry/index.html', locals())\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/shortcuts/__init__.py\", line 20, in render_to_response\n    return HttpResponse(loader.render_to_string(*args, **kwargs), **httpresponse_kwargs)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/loader.py\", line 181, in render_to_string\n    t = get_template(template_name)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/loader.py\", line 157, in get_template\n    template, origin = find_template(template_name)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/loader.py\", line 134, in find_template\n    source, display_name = loader(name, dirs)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/loader.py\", line 42, in __call__\n    return self.load_template(template_name, template_dirs)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/loader.py\", line 48, in load_template\n    template = get_template_from_string(source, origin, template_name)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/loader.py\", line 168, in get_template_from_string\n    return Template(source, origin, name)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/__init__.py\", line 158, in __init__\n    self.nodelist = compile_string(template_string, origin)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/__init__.py\", line 186, in compile_string\n    return parser.parse()\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/__init__.py\", line 280, in parse\n    self.invalid_block_tag(token, command, parse_until)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/__init__.py\", line 334, in invalid_block_tag\n    raise self.error(token, \"Invalid block tag: '%s'\" % command)\n\nTemplateSyntaxError: Invalid block tag: 'WE'\n", 
-      "datetime": "2010-08-31 17:54:43", 
-      "url": "http://dcramer.local:8002/", 
+      "class_name": "AttributeError", 
+      "checksum": "561fd84df24b5ff5c4b24cf3ab757b3b", 
+      "traceback": "Traceback (most recent call last):\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/core/handlers/base.py\", line 100, in get_response\n    response = callback(request, *callback_args, **callback_kwargs)\n\n  File \"/Users/dcramer/Development/django-sentry/sentry/views.py\", line 110, in group\n    exc_value.args = args\n\nAttributeError: 'tuple' object has no attribute 'args'\n", 
+      "datetime": "2010-08-31 17:53:54", 
+      "url": "http://dcramer.local:8002/group/3", 
       "logger": "root", 
-      "data": "", 
-      "message": "Invalid block tag: 'WE'", 
-      "view": "django.core.handlers.base.invalid_block_tag"
+      "data": "", 
+      "message": "'tuple' object has no attribute 'args'", 
+      "view": "sentry.views.group"
     }, 
     "model": "sentry.message", 
-    "pk": 21
+    "pk": 13
   }, 
   {
     "fields": {
+      "group": 4, 
       "server_name": "dcramer.local", 
       "level": 40, 
-      "class_name": "TemplateSyntaxError", 
-      "checksum": "1be8fabd857629e0413cbbd8bf396381", 
-      "traceback": "Traceback (most recent call last):\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/core/handlers/base.py\", line 100, in get_response\n    response = callback(request, *callback_args, **callback_kwargs)\n\n  File \"/Users/dcramer/Development/django-sentry/sentry/views.py\", line 78, in index\n    return render_to_response('sentry/index.html', locals())\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/shortcuts/__init__.py\", line 20, in render_to_response\n    return HttpResponse(loader.render_to_string(*args, **kwargs), **httpresponse_kwargs)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/loader.py\", line 181, in render_to_string\n    t = get_template(template_name)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/loader.py\", line 157, in get_template\n    template, origin = find_template(template_name)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/loader.py\", line 134, in find_template\n    source, display_name = loader(name, dirs)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/loader.py\", line 42, in __call__\n    return self.load_template(template_name, template_dirs)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/loader.py\", line 48, in load_template\n    template = get_template_from_string(source, origin, template_name)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/loader.py\", line 168, in get_template_from_string\n    return Template(source, origin, name)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/__init__.py\", line 158, in __init__\n    self.nodelist = compile_string(template_string, origin)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/__init__.py\", line 186, in compile_string\n    return parser.parse()\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/__init__.py\", line 280, in parse\n    self.invalid_block_tag(token, command, parse_until)\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/template/__init__.py\", line 334, in invalid_block_tag\n    raise self.error(token, \"Invalid block tag: '%s'\" % command)\n\nTemplateSyntaxError: Invalid block tag: 'WE'\n", 
-      "datetime": "2010-08-31 17:54:44", 
+      "class_name": "AttributeError", 
+      "checksum": "561fd84df24b5ff5c4b24cf3ab757b3b", 
+      "traceback": "Traceback (most recent call last):\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/core/handlers/base.py\", line 100, in get_response\n    response = callback(request, *callback_args, **callback_kwargs)\n\n  File \"/Users/dcramer/Development/django-sentry/sentry/views.py\", line 110, in group\n    exc_value.args = args\n\nAttributeError: 'tuple' object has no attribute 'args'\n", 
+      "datetime": "2010-08-31 17:53:55", 
+      "url": "http://dcramer.local:8002/group/3", 
+      "logger": "root", 
+      "data": "", 
+      "message": "'tuple' object has no attribute 'args'", 
+      "view": "sentry.views.group"
+    }, 
+    "model": "sentry.message", 
+    "pk": 14
+  }, 
+  {
+    "fields": {
+      "group": 4, 
+      "server_name": "dcramer.local", 
+      "level": 40, 
+      "class_name": "AttributeError", 
+      "checksum": "561fd84df24b5ff5c4b24cf3ab757b3b", 
+      "traceback": "Traceback (most recent call last):\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/core/handlers/base.py\", line 100, in get_response\n    response = callback(request, *callback_args, **callback_kwargs)\n\n  File \"/Users/dcramer/Development/django-sentry/sentry/views.py\", line 110, in group\n    exc_value.args = args\n\nAttributeError: 'tuple' object has no attribute 'args'\n", 
+      "datetime": "2010-08-31 17:53:57", 
+      "url": "http://dcramer.local:8002/group/3", 
+      "logger": "root", 
+      "data": "", 
+      "message": "'tuple' object has no attribute 'args'", 
+      "view": "sentry.views.group"
+    }, 
+    "model": "sentry.message", 
+    "pk": 15
+  }, 
+  {
+    "fields": {
+      "group": 5, 
+      "server_name": "dcramer.local", 
+      "level": 40, 
+      "class_name": "AttributeError", 
+      "checksum": "e27c40cb7b42d2752efc37f4f7ecfb12", 
+      "traceback": "Traceback (most recent call last):\n\n  File \"/Users/dcramer/.virtualenvs/disqus/lib/python2.6/site-packages/django/core/handlers/base.py\", line 100, in get_response\n    response = callback(request, *callback_args, **callback_kwargs)\n\n  File \"/Users/dcramer/Development/django-sentry/sentry/views.py\", line 43, in index\n    today = datetime.datetime.tomorrow()\n\nAttributeError: type object 'datetime.datetime' has no attribute 'tomorrow'\n", 
+      "datetime": "2010-08-31 17:54:24", 
       "url": "http://dcramer.local:8002/", 
       "logger": "root", 
-      "data": "eJztfWt72zay8Of4V+A4b9dyK1G8ipJsZx/Fli+NbbmS7DRNe/hQEiVxI4kKScV2s/nv78yAF5CiL2nS3fNBTmuTwGAADAaDwQwwLI2WylZv57DTeXPW7u1sLdWt0mipQdI8tIbefO4sQseHdB2SZrru//nuyP35t1Wt0x7dHV/33v2svRtc3A37p6+nl+9Orietu4t3AG5sBb2dpLy1sOcOpNYAiT2auwt4NhFi9C9r5AxWE2tpL5wZpNYBYuqOELixFQDESbsPz4qMzVIULLPyEVBRETIMl81qdTT0Ab8vzbyhPWvWZVmtIoSG0JYVQBP8e8vCJJ3QGFDUuRtiQm2rNFsq5taNZQ1W7ix0F5YFyfUtG9MbWzdni0/2zB2xASD/wEJ70mQ7b9tIKHnLRiBVQZwqNme8WgxD18PeqdrWzcQJLd8Jlt4icCBFx+YsfQfICjS5CxHKwOrV2tYNy/28ZK3lcnbPPrnOLZu7o9HMubV9RGNu2WvQY88XgKy5E069EXMXLHBmY8lCJFaa3wQs9QIs+BO3lx2sIyz5zseVE4RlBmSeDezhh/TJsv1JILx+uMWEXaip8UBN7jipDBqkyQ+A8UaFK3/BUlpqCkAXFIBxRlzqlg2k/mT7AdBY05DGmk6/ja0bGHhniaMUQF4NkOzPvdFq5jBgRnsx8aSh5ztSCrXDxr43ZzvV68Dxg5jXqtIn1w9X9sxZfIJEN/i4Cqozd1Bd3gOpFqpUqwZu6FSWQAx74gAIIa8i8mqKXFreD3deQUNMzkxaHRq4ZU9i5tKAAzMkhokoE2/qCofQ1a2bwAmBcSlTww4lHVmMpXP7z/telM+8wb+cYcjskMl3iiyb9kBryFC9rkfIgD5rww7ZRKaBt1qMWMRbh4E/vgG2ukigpaXvDZ0gIG5j3pjFzUgRSkMoJa0XzbVLcRqONpJfYcMiuuh17OVsDCmNTA8B6dReAB4/kG6DiSu97Z2cnfKUNbTmQFewu0ZEXUPZuol4GhJVRIzFuzzp95UsyzbIn+b+LyvHvz9yh2GTff7yqsxzrjq9h7Iicdr8nBeBIDy4/IsAWV4CAgCJvyQ/I4Yh99ky+EuE4qLdb0FDUJw41tVq0FsNrB7IMhBOXWcx4lir4XxZndkgv6YV077snM6qUWbSkMPOxUXr8si66By1schq4d6psqyJEJf99mXfOm9fnvRPEWY9r//uikqjAKwuZ7ZIisNe99jipEOQkWpoNdloOPpgZGqKXjdrhiaPG6N6TdUa43pa8Oisd3XeepfviDb+taWdVD1/It01ZQH859blScfqtfv9s8uTHvbo+pyqdO7sOZIJWBk5R4onVlr2uHV+/rp1+MY6end+ZJ2fve62uu+sqxbvb9VbhlVahVAWpKVOWv3229Y76wyI0D1uHVJlhydnVUVSBKizvtU+Out3upi9sBdemnd61usjDbudc2qobwfOaLUUWnbauSC0WTkl5Pf7V1br8LB91Sc2BH5whzZKoerdfFbOvE/D+ewnTKVhwre9jwey1Cinw0YJ9bI7B+lWXS4m5R+rP1KaUVildXja6gLFseqzXqdSrxuNilJeheNKnYqZZV5cKy7evjzsHMFoYfnJn+6yPHLGMzt0ysFoOC0ucg6jfN064QO7qFz3yk7U6hz8YevwtG0J1J3bdxXo1oGcB+xcXrYP+2edS4T64DjLCugGn5w1sJiFxcl78NyZu8eyQuOAJMYey0qKg6yYoIpPQSLRzFnTh3KA3fZxu9smNntYhZr43mpZzY/Hda/dtYCql1TThfenO5vZVUOSWenCHrqL0Aume+x6j51BB2YM0linx35limzVLH2P0UjsknbjvHUGb9ywamiapLPSm9P+xXmZzdwPDjtxhh+8XXY4haXXQeySZhqSopqsZ49t3+Vl0qbhWPNxhgZK1/3jijDIMEv7nc752W80JhOYmaHnzdw/BfKdd04uW3z+rE2czvnR1duj9alVPXI+OTNviUMVLe8VrmumZRPB8LTyMHAXzaz8qC69IJyA1vNxVtcwvyoCnLsD3/bvq8eI8tbzPwTVK9I9pHGcUr2BSlHNqKI+kqsg9xrQ+yrw197pIXnj6Xno5PVXRcGXLAVA7h13gAyrnaqQcYZ8+Mv1Wbdt3Zx1+9ctWDduaG3wV04erncFE+9JuDTfet3qFYjDLOWFwj0FgUt8LHYx2Rjy3+/FF+e9Zu4pczHpj/ePQWt5aPHl9qvq+Srgx6DlLCgTyPB1fF7NrZcConf9085lwbL41Vz7mE7dTCv85boN63Cv343WiDSn277o9NtW6+iI5J3SUCWlVpdUQ1x6I6BYgIoZgLnXt0CLOu0QcXBDmmZfX1oXrbPLdXbsHXbPYBGKpMpKQAkC9AZkaE7ecMm7BnXV6VKLskI8zux2+p1DvmahcM6qExFQr3Pcf9vqUl2o3fYc/xMMqiwpjFMeySyu2r3T9jmhJJEzsIOpmHd+Q3liPb1Tq3UNs7zXOXyT18FOT9XfPpow7EHoLGBchWI3lw9qO6AlXWDqHayB88rQm3l+NhO7ftJtERDXbPsA6S5ECopwFlCiF63bqimsaf2Lq6MzakEV9ovVsTcbIetfXcN/gTwbzrX2Lx/rv85tc+Y1puOf4Kd/Vq3058uKID76v1FDYBhBhaoeTuH3ROgOrpmFS0skr6xIoD29SqRF33a6bzqXVrHWlymalrEQUqrO7QVMH9h6CjnW4TFf2vvtX7PaFmydjo2mLCrQtNFyfN+D8WyyfW/pLNjYxS30fhAC/fxXO2UGu2pIuN1JdpuqPlIc+VUWCxazbn3QPmkjsj+c2UGQ3YoHxLCBBJzooLYiHUOZt1GRHDp3sVyFiCegHY5kIf5oG5jbDY4b8miUb858NQvdaCMLaI7tWeAUQIRT37FHANCHOZ/N91cLy1sMneLSK39mBcOpw7eC2JscVT9x2Qe5JaXM5N0vuF3Vou2qnhoDINXA/WpscmIu7Nbu0q2uo2oqbXVrUVkTt7qBN4MKIBXNP/tdZ+LcXXfPu1E6y29/oLUBK116C6eJv3bZ/1YRZYOjrMlbNwARYw22ljXlIXOKCPc3GFRE9LFJpaZGzdTI5mO5i7EHqTpZT2rG1k2O10IH+g47CqkfPfTuF6F910Y2J3y1yC5zsx/69tDBUVjjKdswycJQQ7sFVVQXDDjcKAa5QMHSaGlGZgiTzBCxbctEOwSSGx6jgTd1ojTacyARx71opCALBztrZLRm7sIB0QqZwAENDf7WyQ4JqqVgiDQbaB6ry+uGSG6rYu3YZFVmaK6rKw+Y616yszELpw43XPq2C9tUZi+Yk5aHGcLcEIBgfzGZpjmAVX0Qa2pEKgO6EVoPsZaksAAQmQsDZgNG7UGMMcXLbBU4gMwOJdYBnP6ti4m+Q43P1iIBRv0BjE/YYBMcWUNs3XjU7vkcY6yzC2hqZPJEaReZ2usw3N9xhsVGNtQHcOmACoiPEvaqN7ZuQMhvLRsypocDtOADYz9jsjRULOGOsARMVl1T64oh1wmZzv0IKS8jkLHOpjlyxVMupdKPOUv1jz+u26obta0AJ2bD3JqgAZ9kKiRDTyfcVN9o8KqHU9sPcfECcQ5byVGJJ6Bl6KTbub48KsNelH52dtF7EVu3OZg9GllU1gcCO6UYEuR9mSkErzwOLzuD8RjgYYlQCV7NwAcOzu2Zt/KD0vsU+06DfnbStv1BhbW1wkhoKwjvZw6uQrxJughlgcBBMlMJ9HPAe4nADLLMBxNudldk7mCRcfnxbgOEqJPwU+TGVm9HMSUZ3TAKSB5VwQcFhoB8L4q6dTMCZDAQ8BJJQkXR0RCMCgHZRjCL18hza1s3M9ytYLoppNejdCqErVC4CFZAoEMrqA1Q/w0ZWPCZWFLj6cAJwCELd0E5xJEqzzGQR3BZUdQaJhs8GTo7tkMbW6HSLNF5OjAPaU3om5LjfmpQ7cybTKIeYePQgYGN09AP53teSN4sHUnohfhoJIVrggVbQS/CxoS9MWFvTNgbE/bGhL0xYW9M2BsT9saEvTFhb0zYGxP2xoS9MWH/90zYilaPtuJ0og3NBngak6ypy/uJ501mDjcm9FwUx+fuwjnE9/UuOw0yGinxATgFT8AlRgnMQHtGpBNG9pOlG0i8EhiPOU/953AaHsyG/xhOgwOtrt/BlhyeRwdOU/qGn3KrJUmtr/gpfw1w/gcaPPQOuDGnzK07Zf4GOeODwaQcpO/zg0H0UpbLSln5wRxCApmS4FUtKwAzCw4wHS0x8ZlABQ8Fcvp+ROMEHQZ8X0LLTZmpyu4fmGbGsPWMeYbgI0uLgZaW7EoBuXgEL5OIaWps3jC02DaCyXpq0DHwoCIwOAgBa+aS8cOgdu2foMrvjC54JvCgCZp6GPruYBU6ZMxvrr3vhCvguZ2Y16Z2wBYesFwEBTtNHzbQr8psHbvxNPbwfpmccNwZwYYvdOeOFD/sFFQXenMPyt4WV6nvskugV4RdeJzMvIE9Y0h4tjOw/R3mIuaQwUYT5tOoEJu2y448J7j0wvYdELKZe8vCs7kdDqfuYsI+os2IjQCWanAQWiqsQNllBR6VZnHiA6etH0L8xrmPCqZPO7EjZ+cVsqYRs6YBrBl6I/seE/EQqSorckWuVzSFKUbT0Ju6LsmqWa/reC488s0oNWBQ2ExbWAxdStxMWUN7ZDBBn4pJ7/oWvJETRUHfEsAB0RntP1MbNL1a7mi3iUVqkUE14mN2kCO2xHkmkJy70LdLWEQ8+x04IDLDg8+Ynj/NvRPgskMaHbBYYAUOLG9VVlp6t6XSeOZ5fomQDsOSs/SGU+6RW0DuLqswWL9CKrILZbSaLO+yn5i6W2YKqJz4rOzulLFa8Wj3F0hAh1YwKfA8PKx+R3/QWxSQW0EBegIOWCXMOr6BLJg86UfQanVcEkwNgWMXgt6o13AoTRyb2GeQHCVHy6AVeskB/dJO1BQy+ktoMAINgERSUNpF07ZpcO+AYta4e2AdCUKZibNAgR7EnFBQ4Y+xIyLyPyBTmDFJt7e38RpC7Dfoxi4tdgoLWzd2dNxOPfhN7pFFiLMdvQTOiN3C8k6eK6gMFns8jY3eDm7BTnx3ecfnzLOhjVLa1AAk0mICPJHgW4Jqgw49f7LCwQwkxKdm2xy7E3AJjjsb+ViAxz/vzIElUSYCe/JUaektS2lymZGzGRkKnW2JK6HOiVqvbd0UoEZok680dbxEkqDDDOAm7lFVGondHZkqKthQo+seGq5eOS7AfJ0jbhhkj7/FawVKo0Z3SRqm4MZo1CM3RoNfXhHt+nRlhK6xgOBJ7fqqrG5NyKIP8MLSSVnQHnKy4fShBF1IENAaHC3wpejFUGXkxaz/QpXrlJZ4LlS5QQmpz0JVZEpJvRUqemWg2kiQYZXondl4Gjaeho2nYeNp2HgaNp6Gjadh42nYeBo2noaNp2Hjadh4Gjaehv+ap0HlYR/IYE0bVdgy/0UXg6pQFIvRzhYdQlSVWoLZ4kEoVIwcsXE1fKOrQVXqKWE/kkUDI29kfQyqSueKRecCAsbRN9QC54IKozYhb0JiiqHUyIgi+g8o3dja+A82/oOs/0DlB3vJcUBMAhP+MceByg/8kseA4BvcIqjyA78UMAZP/MZGSzU666tqqUdBQWGjpR4FVTMEO/LI9YETSqFXZgUWZFWridZYVTPzFuRFxoTcjfCx0CMDrw3yfOm70H123T2nSw2UHBt8EWXsbeDGYAmTYrM1hrl5yAnwF68fBFPPD4erMKhalrtwQ8siP4Gqx34CEAzw9jw/wRj9BKqe8RMYsKLUMbXATyCSqvSQfTw/DPhYYKHGYDh65ENQ9TUfAkeGMKkHQUV/KjYHj9jHfFlmMChuCHPpng1gaBhJHxxAvMjC3UIJMCbD5B0xbwFCZIzo47HCcY3BAryoggkoDCXB3cBbhWNsyBnGMhIvgksX0GCfwg7EF2jk5y8IGLsH3DHIE3cRhDas+KW4ZhLlZVbCisu8K7vEyIZ4dScE3LmeZTEgcY34ioIzo5hCKl6Ri90HqlHjf4AxMyURDjm6wPCvxlfdVLzrFt9CibsA+XThjXsW1Pi+mYoXzlI6YA53H6g1A5Yj7jZQa7XUbaDWzEhI1EB4wNhHboJaQ3ATmHLsJphEfoFJ5A6YxPZ/U8nZ/8l5lrP/k49MtP+Teyxj/0dHV9b+b9ao3o3Rf2P03xj9N0b/jdF/Y/TfGP03Rv+N0X9j9N8Y/TdG/43Rf2P0/+8a/fmpy2+x9fOwKImt32wQwo15/zuY9+sy0XLdpF9HE15swq8XmvDriQl/EhnuJxtD/cZQX2Cor+vEG0/Z5+sGgcVm+TqGfInt7iYBmKnhvR6ZX90xy1v/KIi6eAA+DyCtljj0pdQUSNHQ5ZyNsqE8goMdsEOelEcTG1UjO3UYWaVLeQwErEUxWb6fUT4mfTWyiZNFHoP1kEUej5jDq/Esk/yAxC+G3hGP7je0Gqaagkk+tgOLtvB1IzAG6yFra6PBLewiOMaZlxPruiYrGWO/aGB3J+4CoVUeaJ4uczxcLwWw10T7uJbEy0lt6bBgLF08nh/PiJgcsZdl4n5y0mbQ/C4jqjhGFAVhwkmZgLiLKWhUnFd8Z7iCpRF2IvcSlqpl22OmtnBNrvM/jTVbuKbIxbZwTVFSB5UhY4KaTBRN0ZKJglICJB1KuVJK0R3OnztEKkWMofVS6LDjjAL0WAychFgILsbISoCzjGDhDZbYIZMfyDLLs4mm1HITKOWQKHDQ2phnqgi8lT9MKjhAH0CZBoweeS/rf/+c05RGPOcME798ID9nzuk6zjlNVXJusDoOq6oKcy5PSaA6epMenn8aTDmafxqs1jT/MvAIYKQTUPzyBU4C3jPCxSOnceOy1G9fXJ23YPt53mkdwT6FPvKQ/xAGL5xvocWTSwJqamb+yhRwboQgWksp7CFCFn3AgoMGEqrYi1GEHPFmvmORtIFzS9QUvAVDekhULKBy8TKQkoFccsUYsF2aGCwv+vAFOpGTSR598gKdxyMXwzNq5Bvm7iot+eIEfnIimvvkxi2a+3r8OQqdglVhGzBVFT7FkLtFRKSxuG8ZWMcJpHPeqfw3GcbmgD5BoemCA1xFXtZTD7im50K+RbM2mYZz+4NjcRZFCxW05D5yLPLm8LlZZkgIvMyl6TWBelGMw1gsZxQjhM1zGjq+MT3mIR4psKh4KeY38rpGQiXLn7wLpbR9qQQxvrMrvVCCGLEfHSOMweuzHOm1ITrSNSPnSDdhWkGqnlu18SceKXF0YCJEs1MYHUQQeck1I/KSWxZeX8Mv82hG6h3X8Eon3w6/hp0vZ7ASbyynXzx13cBaBfZghjXSnhM//SKn35DBUYlPF5QwXmPh2QqtJupqERPU1Dwa3tQITc7NnbxmB7omztsan7d4jTQDjnDCBK7FExhDjOZX8dpDMzmOOaph0FH+RRXN/K7z2EznMYgeeBemsckPssS0wirSpeRrCGaK0/cB1qK4m5kq4rn2WB3If6Y44ZOF72EZ82BNj3eHqqqvS3Ezv+I8R+fJKiQFGk/9PyFM6rEwgbUB3p4lS0yb+KaekyUNHcVRPS9LIsm/TvInR7UeS5V6JFUyxRFAEC3xzu8vT+nM3vCvN7qRk1J/fcpkNprffco01P/YlGlo61OmIVwU1hp8CGFLeZNs5Bo4pb/2VnpyOqpaJEob9fgbXY01Sa1TxFcuqXU5/lSXjCFNBTJgnva926XL8ce8ZGNtYdBpV1hYKv7Slpx+aktufMeFQVeipUdXcOmhwcZUZJzPPxBjw5oKozWxKDZBwH74wg2/cW70Ib+pM1uiFh1n89/7/3PUOcSzMwyd5Ozq+vX52SHbrlSrb7XDavWof8QzdElWWN+3FyDU0J4yq1bbl9tsOzLz3t7eSrea5PmTar9L5zp0EHBe4EijcLT9ikWVYQabAV0Otp3F9iue+mJ/6tijGObFi/25E9p0Db7ifFy5nw62o5v6FbQUbsf39g+20zMkFFEXtj0HdOxjO4+LNpjbvjfwwkAof9m5bJcvO63u4enZTTtpzov90A1nziugX2Rmw1eg2xGNKOsRPSEXtjAc4Icv+1VeJq04GPouKMfY5Kil/7I/2TxVaGC1uv8/lUr8loSlh/WqPXPo6Ojr+0PU1dCOWfLas3kZDxf27cklFwihn2Tvfo7xAFr21ndD6Ccb3LOfYcDCqb1gvYXnfSgzYdACTJGGdvVf3mKPtUajircIsEzXGzg+bOfu5/YiU8KnjAWmoy0/qfKT7TPb9+NmgxgrpQ1lBwds+8dt9o9/sJE3pDOxEiwOu//MvLJmgg17KmWoEGESkO7u5SvnRiOhCQvnlrV8374vCcAizVB6C6+S78BsBcFd5T7sSnVSZtuiV7uynavW6zqT9t0yqoy/lLZL//tvsVSwu81+ytQEr9ulDMi//9/uGu6oK2kq7HNLmOMeyHvM3RcILoEmMgmnkPrTTwInvIhxQAMF6PfuHynSF+64FHUD5BVsv+Iy0jDhLRHlizVSS8tVME2KCb148SV5TJ/ibegamt0Y5MvajMBTSa3ZrOQAaLDLktbwrT/RBAcTqOKwfUZQCUUcoEha4gVlvnf+kChUtxQtLVB4ZwErz85eivrLWntuQfp7t5K3INF6wOL2lTJNihv7wDSOeb7MdkLcXmFocfrs5u7u3l9B4mHMFfx8QSX+NMG3IfKC8FsxjdxPhMoOQgeP7Qho1sc29CaTmVMqHlWXj6oLo5rGTxF5XRjZmAsSoZI29PX92aiUIAD2F5jUHbOSI+JhzFljjrWUmF/YP9kOrQM7rJlnobSzAjMliu0Y99SP0AW60+ekmbkLkNvuKEOiiGw7n3ZAmECeMFBICJR/WK5YjO4ESxuG5b38R67YCmYllOzxE+y4V0IX8KE3ckrynWoMavl6Rk8UGIoFAsldLByfdIqD7NsBr/qfHGGT3va+mmbBrRsOp1cR3x2DirUYze6JgBniBQrUv90jaLSdD73lfcVejCrEsvQdjm2x3aoATjsyKOPiUUob6v20XoAoL/Y1n3CATfgnIm7C0976sA4wZI7j9+M9oDif0sTdZ5OoWq1UUh2nylWRNIG4W9RXhkEgKCovSHf7kX0GbXM0gpFuwqScw4RyF/iUCveBN7rPwCny8o6p8KsAKocvl/8ZpMAibAZz1A0C0D1Boffd8R4NAJ4iXYya7KXjOGLJqRKVq9w67mQaNheeDwhyIDYA0fGfZuwM2mPY68rIGXo+nVZuMpzLmXIqlOJ9roAuGXrzplR35nuZ6lhBfSrD2Ra3K3D/dJp1+Ye9qAUva7Xa3lNN1pKqm4ozZzKTDPyTgdFTGFmAeKJ1tARByYHnw0akqcBo0cc52MvhcLgXJeNZqZm9DJwmi5/22K07CqcwvtgVYUhup26YoVtIoxmOYFfKn6ZQ3SfQIt2hPcOTzpNFM/SWewkrqNAGLcswIW4SeMmEsQCqBv8rMbTQhpdjB/9Fg8qrmDnjsJjO6bAoCiFaI8VoNCroEbYmIoKKfCBU5mMF2RGO2l2hrCaOjohS4MiXmqZlspqfXDQmjQqYNoVazdLhZ5xH8LeareYl0hH2m4I6R70f23N3dt9k27PV0B3ZbAJ7vZGzXU4ScP7BKwzbyF7YZXE+pqiyE5OOtiQcFM2YHFEfKEusV/2R1ACYhhUQRhqLJGLAfqwKrXdnIIWbbOl7E3fUPPr1DG8O0FYVCs+lC3foe4E3BmXAt0ewHISwhbD98BAJCRr5wc7L5MMwsFYIyUP6AQkbN+SsnalZbDBw1OCDG1aSOvBbMLZfZsh0INKX0RMnQpkiB5ZejlX8twvzwishNXbTuji+4i5nKp57f1Z4ZWnlVB+xEf6BYineses7Yw8mjFT7SUSacojEDQaVmQebXYFNIsUHeQ/rq5DOs5djo5yYeYDJps7sk4Oz/wE2SucjU+swIdOceIYgf6SpRISIzZAGq6DJsuUez3wWPTk5X+q6/iA1EdkTFG0OoIDviISNDBKgPP7jZaOuyntF+mN2WPiSmJ/DEcVUsXPrMx8XyNxYihIwWqppiKfRaKp6hl7pMDgG/osEXzC1YW/UJHkc/0+irKAN6hNtUJ9uQ+GyFjesXq/v5ZZqligsFZyK0E758V59wQaPPS9EccmGM2CJJk7gaSLSgC8eWSTizuYWWK5VCDwXoqxa2j5u9MXiuMYAwwWw6RrY2ATYmLlcM/GdmY1q5xo8ViPK0XED/2HH7yp8pWJ8vfZAkI9nOFywqRs5iwymtEoAsYFU0WoWYdDqOBbJOkyzKSYtkgTXnRytK2taQrqERcQkwEeoid2TMKRmJW1eVAdfUZkuy+nqHSU+gjBGI9Fx1DXVjvciYy1Fy9qPLPHKZKTyRo36P6FG0TBIaE1JtSEDGiAzpIae24YI0ERXevWdj/AWa+vRmjX3Fh5M0qGzrjqHI2mIZ9I/Z0byIaiR+wkgk+m3Pvt4I7iln9NG7P1DcI+0lxipQi/Npe88opDltlKrmZR6ID/TJfcKbRPJEt/Mb48y4DOXX7xZm1ZKdryAHFJkaxLVV9wzyg/BebOUfbnY0ORUBMHeR4mWsKS9qeR0FzjtH8E8c7+CkuLI4DFCeFl6ZBZ4uIb4kbQMXh1HM5gB4cTpV4nQkwB5Nrp4q5mR3PnS8zmo9+kUiaR0fnpkYO18Q/P75Tw/vEyPwSWPlYUXVug0dHalejmu4b+CZaQAn4Aks+mR6V/e1PBytXBx5lWmMDC5WnMM/1Jk9zW4ZL1T8jVEEX4xNMAD3cpwq6LKhSumuDatgOr++nI+Hj7WjrgUGSoe1Y9ysuSlcweUXdA4PkGiuI6/qtWItJqqwBqZBE1Uc1ItR+RSVCUeob9gKYlFTiVPXd9Zej5eg45UplQJzOg0xTsE7CkoYEvHDlkAe0tQxJHtXh7Dz+FhkeKdre6lKCQLxGrR3v5hFJ8fU8PW6SRiwRUvnzRNRlRUmx8ww2X0c3sVemJl/B5XIQOLm5qlM3TH7jBd5YZDTZNzVquBN8voDZFBTZRjqe4hmTDaKWwW0G6iHZZ9jioz2katoQvQINWl9JvDn+zZysktBxkKZKaTsH9RuFqSXc4KVjVRrYw/aDByQtudZXTL6KpahUd7wcte8SOPz5W84REIesnwVWzJzMh6I8sbErejxIUzoHIk68PYqNJkoLo4/tAOnAdxAG/jipHs8ri5IOVWqv9Jk+sayuYUVSfoazZDiszwdp7hYiPUgyjFkhmRmWG6goEK2ARvngLviiM1hHrDfCNkZOgiI4Uu7lfEtIRMMidUdqOjre2OlQYmxew4xh4X22ueYD4iitifpLNPMlSGsdNyMUVSYRrtItWUA7iuz4YUm+IJu07tMbtONjMhov4N9MpS3ii2raTdpeUnsVkUmFIo6dG6HiQl4EYufXrSpMSPxzVjbkplVpoqrhvZtU8Qa7LUALFW0P+iqkN7Is7/bE+TocFdmZHbdcI+0cB/RcQv7KW4HCYVPkwVWnazy+bjphWhKt+7VR4yshQW4Bs8cQDSuuwBbLxWoSNQO+qqkmG0FzQsWXOVyLuFg2U8yaszl0vTokYWoheQLH3XAyXlvgLl76fQ6IKJnhXEquqoYk9jk/nAu0tMhzJZIZAn/MnALsll/Cepu+sy4avKfC142u5CczCXU2jVZ6BBtY+UQ1WHh1ZL0RRzt0A3FHXhR4n5HEKOx4YO68lfbe6xUjs0D+Hh9bEu68ff1Ny5A2J3/nSDzfq3NLjVMpQWPuhmS5W/qcGgtkStLT/AyinEI/0ZfMsAOOORYQ7xQbYd+S/1J5UuyUenBO/hYDDIKKNcaj+u/a3JhDITaolUpAenNtexvtahEhva8QmdX0/6qF5EJhYW21i+l6bwuHBMaFxEk8IRME1TpO4y6+/JqcSCYiSYlxge58L4FXsvGEPCHPZ6FQ2hWIYkmTJEhaQgFYsCaZVZ4OJtV6XRaLx4uLxYKRTuLB3fZnql9kS1nlAwKWYiXKYMjAABQc99x/5QwYS4exjVy184IWvfLYGIQHdDMh7yUC68iqCXZvZdtNVPtYsHd1z7VdJkkwMu+9XMKeToz+cf2Ns2O+/ctFl8mZK1u91Ot5eco04Q4AY6PS+TnB6mffUPSQP20f7rjg62uXNIPGGzP1Ve7dtsCsx/sA3lYZsXHd6G8tuv9smwRycyD7YFZ+A2P6B8sJ05n7z9KvMK3YXSr/arNvwP9QiVqq+O7GA68Gx/BFmqcEQImpo2b60DkftkO4vrHKYDU3V26sFczeBLlcR9dz5hgT+EXn5mSWBw9uXLdtw9Stxm9iyMn6tFeLA+2gCLNaXZq1mMT9gmM2H7J7T9xf7MBZpHN7E5PJA9RsBn+zY/9Q1AP3xJh+qfQnTtA+iR8Ap9+oc9X+7Rxhzz6AF7+spe3EfV8EGZuUJjoB4UhB+ce34FEy+1il9Fk2D2wZLlzAOBtcRORB04OEAcz+0HL4TNxEJR0/9S5+AlgijuHFSO/RPavl9dzR4aYkT75Ainpo9nDTA19fuNb0K5iPDJCGM9zx3g9PN0T48vtf8rhzcep68b3aKuReP7b3414i+NcmaIeeywp8ZYsII9a5DF3nwtjWJefnx4eQ3PHF8xCP+TAyy2/euGOTekwmB/Ree+cQLztSM7ksnCgStiIulFh74wkFAF3WrC65viFwf4J1cjez+zg2wm6B3WEs0dqiE2jVNUhIw/EpshPvQ5A8OvVQEJBPZKmTFWQETui4c9yiuzeGuBw19U/7+x+1YClWEF5IW4MsA7vB9iIDS0P+zQH3UHOYLLvbTpUjy2Sd2YmdSAa6y3GM7c4QekPV1mwKhRaI+QiIF2MppHhYK1JsiXeNlpJ9NlPDosKCa0dSL+icsI39JFbiI9JFt+qj2g9xTVvv0qM5wSHryGZKFCSvnyBbl0FjjZvNgexrOjyRNpRdoj3Uq0/EzXktR/UydJwwbK2xOvsJ/LHO/kdDo0mMH/FRrBTD14fZmvDvHtg4SSrBAFlwEZHFnRHpcWALi/BrOW+XbD/iWuILa0ZXHjxwachTOyUkscIfKdR2jKjU7br/7h2x9X3l4ByXJyp1jw5FSHZ0zjlDMEJMngCJuL7VeXXmrup+Be7B4U22j1CaQMrQSOKpKDbE0Q8rNl26+u0JnijPDaXeDc3bNIc59Dw4dSTg3P3jtMNi+0+eBv+3Qnkq6OpjEFdAXf05gCulIcGiR12Ue3cJXnR/zQlXzEj5fsbByFJKL4S8KnE9itA6JytRjxMCBBIdIyv2rhjccs9LCCfPiZl1G7Y+zRaRgb0MYzhRg+DhUl1o40hxXkAxA+9OiqrIRV5KMIvGT9qRvAVmTm3QaEaOj59O0PWLQWITovudu8hIj9XfxqNH37Y4jRAdIaw6kdUkA4qESV1ypJo8RhvvL3Bx3QKWIRBR2o45v2nKADho0BTHRVzwYd0HUZU42CACbfIwiDjl+TwRgEumquRycTUSFsPQlHoGO8ugLmBihN/i7RqvQkABGFC9OT6EJ/PXwZHlUpI6rkg+BfEb5M1/Rse4RPeehajf8x0wv+On2V5vtepNeir38gU6QX1kEA2RMukShPjcMn6RjBqPBuva6noY1qKL/wMzCx/NJrBR+JzwUys+L4OHEMwGgI89H+0uFMYhZx8iWhivCSflAwWnw5RXHDGxHgF2aSz75zWOHjLjZO/uRLMlEzJBAwTg5j8pEa3qNYQGECvM4EQbYKONsn35n5ft+80Y3/hBgyYjGk1FAOGc+SQzWN5JCRk0MGxqrUDVEORVM/nnxrsiYWMUYsYgwzDp7EAxthniBSjMbWQ7GP0pAcNGhFcmNn/3rxYeHdpg16RbH99Jq8Fp1Dz8RNEmVpVAFeoJyT8YwfcCvl8rFbNXV9+b7m4EcO/uZRQRFSy9WWDc/VXgA0ICX40nacHLAhKHTeYnbPow/CjPJXQ7yqRBu1qGXIhvTthIifA2mbGicGNKQ9bz5w3VH79fUJza8oOAqsxFGEOb1m5BqcxE/hV1E7PIBKEVFqglSsmfxPXZCKFAfq+0rFOIKUjhGkcm3CbDUjHk0tiSZi6kXRRPKLSRqZeazzuCGmEeOqJaKWIjQVtq4uRKlEUUuBnCNRW5fTJZ0C0ERhbyKkdWUtIhieJ+Ozgpi7LjIhv9E1iiwiiA1eZpEGWc8zIUIHq0FcAP8SnJ6Dw59715mNYmgEMv4m8ZX5opqOsXCjWJIowCgc0tOKlEICrF7PCjAM6AqpjZwilaETUD7SKdbWu6zgQVZvyJFYgxaRWMsWRQg1FW6NNB7pA3MRid8QiU/TnD4fw9w5HiVkR/hy7tyhD5GerzA2i48FxRk7QwiL9lxltiQQ/gb9ewRFvB2JAgHrDfOZOCN0KaZ4badCeEE7LfwoRePlm+OHgmJFJcIihd4HZ+H+6ZQwaqIhy6m8MWSF/wEFSKgRoZD3c3Hqk/lOFJZSuuy8whJRyCIDQxbFwsugWEXfVXgZcZQjA6McpY3AnMbXNjqOZ2RgPKNZhEYpjKWXL18g7DRDJqRajFTfullGQ2xQBNzHsHJmWJ+eGpehBm5+OVqzQGgbuB1NhbaBodoz3GrQPu8Z1OEFiDxqFPXKgO3ZjchZmPdMDhHRCTo0iHNISHVoQ+U6NEfYR5YVwkAaSaTYIlUHgS08rlyO4ykFvJC4Q38pwLH5CkQX6Aj9zpv2JX0Nohw937S68ePr887hG9QW+Ct+Gq592ZcQsbgvJ3kotoES4oZgoNiC9gGSaNf39y8KhpaEB4XlAV6fFdJPHxHXabmQfhjBH1ILvrPJ+UOiPyWUNFoUrM/QomB9lIUZaZA+Q6tvra2dkWp4hrM+VgkNrSiGb0J/6Hh4b5ElygptWIWQ5tgIPW/d4LwAM3iI4fsxKiARIInZwXfCoNqh+RKVPR4fGHoZ4EcxQNPlK7qh5zXitDH0VbPomHcp+hvxKbVJLSjJ9WxDzysd8U+8VmJD4zB/0MTgfYT/DyxcpIlE1EyC7iOcsBM39Br/Yybr8cjinUVInEL7r8nCd4n6DvfvSzymPTByk73f7+PlH567k3H077z6A3lIjzbhBuwLb2LNAdJxS0fJ+E3KdREytqEN2EUKS3dJqvu6cORsSl8azTSE2x9J7hiFWuuzKmiMDS7UDaO4gsjMWRy5jtde+w4kNMx89Y9HeeM1oyLNKdyIVXiDNnffsg7V4kUBtnM3xNOYqKWdpLQm2y46rCJJ0jYhibUFDJFLcgE2jqGL6ztuiCgnXudxNxQxOWajHHjbhqd4F2PgLkacHphHa3gyqUcelw1pSENHrdVQ6zWEWLf4YVVISA3ThmmsS6doombC1xZM1HgSCRoyNkdcs1AWmHkztTBl432V8NWNMnOo8rztOf5JnM20BKXV0g0Scqpw0Qh4aIlci1Mr/tCmG4DqRTKUS7o74OCRFc/pUvxQzlNB6HH97zLkZBe9emzKwW/XwOvzTMpjYvF63pQDKiGkFpmUM+Rw+RdR8usQUYOvAQKrEy0iQ49Rjww9axgQKLX4GNghQRPKL3sic+HwNsSR4zYUPm4iJ2y3EUv6GRc0hxiN3EZ6vWtCXcUdTCyZRiayLLCoAETZxdaegpYWfXLmhwCDpdwtHbL0/BBssx9YuuhyC+RdSO630vttBEeIJS30S9zHC635Y5f2SGIoWoOHojUwFG0s7Wif9xXSLg4za2CY2Yy0q+F2DHJqcYDZGu7FEmlXw33YJJF0NfxaNJfjNfkb9xM13JrFQb4xWH9NTr+aU8O9lTD6IEFmXuCsD7/Iz03E0XiM4bjxcfs6woYDCKvfDwHDEWEYU0z6l+cuSiJWGI+akoug/IBky3AkcV5NWQ/3XsP93d8vgGqKFgkg/IoDvOrPEkA1GhvFyAogDBAPqbV8IO2vnCdI5oi3iKwmfTipl36FCRPpuzI13D9uQvpuQvpuQvoKlW9C+m5C+m5C+m5C+m5C+m5C+m5C+uZItAnpK4BsQvomxTax6P5PxKLbhPTdhPTdhPQVgDchfR8elk1I301I301I301I340atQnpuwnpuwnpuwnpuwnpuwnpuwnpuwnpuwnpuwnpuwnpuwnpmxHmm5C+m5C+m5C+BXTYhPTdhPTdhPTdhPTdhPR9RDhuQvpuQvpuQvqudWAT0ncT0ncT0ncT0ncT0ncT0jc/gTchfTchfTchfTchfTchff+LIX1rGFHoTJE1DP6AfxsUNw4DQQVBb+ei3W/hhVJV2SqN4I+61dvpXl9aF62zS0rXICH0V3TrFIO49nZO+/0rq9s+bnfbXUo1ACS6Gxhd0iVpMmvWZVmt0uytagRZw/JvO903nUvrtHPRpkQTij9yx5dg6ljQsg6Preteu0uxgKz25WHn6OzyhAAagES+U46NptyUMUWTscjVGTa1d9U+7Fs3Z93+deu8fXlD+YrQMQy209sBzDeAvNc57r9tdalxGnb/be/kjOsmVVlS2BVdNK6qUk0yCIao0m93L6yrbuek27qwAE3vrEME1JA6qkn916j/vdP2+Tm9Us8H7qI6gL0XpVA/u+1frtu9vgVjc9o5onTs3km7j886dey8c3LZ4gTUsScR5eidOoN0ojctl0utvWr1T+nNeJz48QVraGSz6i3DKg0sv2/tBeHEd4KPs7pGnRABzt2Bb/v31WNECTv8D0GVk42fB8KU6g1UCgtOgJTMV5B7Deh9Ffhr7/SQvPH0PHTy+qui4At1nIYC6Nx9Z/X63YiNdByRHWLyiDv1+hqBKLlBVOwp+GLIAFPilNr9/ff3v//uvNfMPWX+++9/vI/fNf7++++3OYjca/wu4wsj9ArWdXTWuzpvvaMEnKTVcL6szuzVYjitaONfW9pJ1fMn0h3nfoyJmuVJStWhYGu5nDlW3/HnoFjNKNkgjmpxGhg1AHIWMNEkCsBJaWYy8VuHh+2rvnV42ur2OEMaSKKzXqdSrxuNilKm69d7Hw9kySz/SH+J+Y1G3CR8qyHN7kDwzfn5JkqjjvL2Xa0GvdXA6oGEg2WvS6FyCSbfd9O+7JzOqgIE7/pv9EwdnqN/1q4eTuH3xKN0I+nPYafz5oyGuoYdn4cUEopstQczXff/fHfk/vzbqtZpj+6Or3vvftbeDS7uhv3T19PLdyfXk9bdxbs9lpThGrc9AuLusdG/LAr1AOroAnRuvDhJFZmCtIlnca2ezlMuPim1wQXCRafftlpHRzSlTaSd0lAlpVaXVEMiJjQVLlvOb0i2mEgnhVj5Npi4eFrACoZTZ04tMLVIZNMLSYTzs9f9Tuf87DdqjYlyYQLTPPS8mfsnL1RLJeov12fddk6imqYgUU2SZP2Lq6Mz3maUYNVPtl8dezMMe1y9uob/Ank2nGvtXz7Wf53b5sxrTMc/wU//rFrpz5eVKhatywK5rjpdYro6Cj1cX+iFi++bS6t9dNbvUIV17OLCXtB416mLh53Lfvuyb0GDT7j4qxvxfL96B7L2MhaLdWSFbxFnjwWkaFINnAd6p1brun8Ka87hG0qu59j79FT97aMJDQhQtfJpNawTU0TEtyLqN+RnSXICVTg1Li5al0fWReeIhryBHLNauHeqLNOEbWgJ97iL5SqkNH3rZj+gSSlZoP84UXCMtYhc8ohCftUaRsw0KbNYr1s9XmXtiTYTEFHquHV+/rp1+MY6end+ZAGzdlsguePxatSz4wXkp2QiVO+wewYSK5popixv3SQdm2O0uBA2HfaI8pStM1kRZMPlJWgOfCU3ZSTQB8dZ4kmFTw4laSls6/C0jSX63c455aHswRP3MOgHMqUQLawdSJeqc3tBu5l7yqnl5Csl4nyyQRpGnwuo3s1n5cw7qng/YWoaBAPFbYO/wxYBhBAm1MsuXoeqLheT8o9VLpMNqqKeUOITZ19KpegypiJvnSmgM2Io0qhxpHy1TmASIZyCczByLVQNSWalC3voLkIvmO6x6z2y5s8YpLFOj/3KFNmqWfoeaK6V694uIzn/1hm8ccOqoWmSzkpv8FJsmc3cDw47cYYfvF12OIWtvoPYJc0EUaearGePbd/lZagZNPtPWv3229Y76wzmePe4dUhjraAQODw5qyokJE1FT/rrrxYW7IFpGBUDhl0WJO1pp8d7WIvlQ+f86OrtEaUV6KsPBkulAvUsuy19bwi7CcpqxBWLayuuxNdAZYRQZVqNgWJlJxpMSlbyhQRt2CQtfvKnuyyPnDGdvQ1GwynlcIY96/UFTlWRUx3fDpzRakntUvms5R1WC2bpw9FhnTt7jgs49BJFAiEQ1ztQR/qdw6hinLbYiXh8VJqwRz8DAToWqBd96FAPJdT1OVFDI2pka5DiuMMEoIiCHkPaUCrSI50TlJTO3HiwNT2/AjejBcbUiB4nZ/10gTG1WrrAmJqZjDFKRQsdXEvSR0yMnZmLwDr0/HgrHkig+zu4FEvHUPBtVO4VFiRiHPa6x6mSYupIgZFqaDXZaDj6YARd1usmKHzyuDGqw36tMSYO0ZWkRbSnJ/LgNxT2vaWzwL2rw3b2gxDWYv/VTpnN8VrCzu1OLMNlVR8pDspwU9fiLQPMruMOIYJ1oLqFG8iriHqwk4ANpIl6tfT/AbdsL04=", 
-      "message": "Invalid block tag: 'WE'", 
-      "view": "django.core.handlers.base.invalid_block_tag"
+      "data": "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", 
+      "message": "type object 'datetime.datetime' has no attribute 'tomorrow'", 
+      "view": "sentry.views.index"
     }, 
     "model": "sentry.message", 
-    "pk": 22
+    "pk": 19
   }, 
   {
     "fields": {
+      "group": 6, 
       "server_name": "dcramer.local", 
       "level": 40, 
       "class_name": "TemplateSyntaxError", 
@@ -500,6 +553,7 @@
   }, 
   {
     "fields": {
+      "group": 6, 
       "server_name": "dcramer.local", 
       "level": 40, 
       "class_name": "TemplateSyntaxError", 
@@ -517,6 +571,7 @@
   }, 
   {
     "fields": {
+      "group": 6, 
       "server_name": "dcramer.local", 
       "level": 40, 
       "class_name": "TemplateSyntaxError", 
@@ -534,6 +589,7 @@
   }, 
   {
     "fields": {
+      "group": 6, 
       "server_name": "dcramer.local", 
       "level": 40, 
       "class_name": "TemplateSyntaxError", 
@@ -551,6 +607,7 @@
   }, 
   {
     "fields": {
+      "group": 6, 
       "server_name": "dcramer.local", 
       "level": 40, 
       "class_name": "TemplateSyntaxError", 
diff --git a/example_project/settings.py b/example_project/settings.py
index 12930a92e9..3a17a9b133 100644
--- a/example_project/settings.py
+++ b/example_project/settings.py
@@ -2,7 +2,7 @@ import os.path
 
 # Django settings for example_project project.
 
-DEBUG = False
+DEBUG = True
 TEMPLATE_DEBUG = True
 
 ADMINS = (
diff --git a/sentry/manager.py b/sentry/manager.py
index 92ec975a7e..49ce7755ac 100644
--- a/sentry/manager.py
+++ b/sentry/manager.py
@@ -63,8 +63,7 @@ class DBLogManager(models.Manager):
                 return
 
         try:
-            instance.save()
-            batch, created = GroupedMessage.objects.get_or_create(
+            group, created = GroupedMessage.objects.get_or_create(
                 view=view,
                 logger=logger_name,
                 checksum=instance.checksum,
@@ -76,6 +75,8 @@ class DBLogManager(models.Manager):
                     status=0,
                     last_seen=datetime.datetime.now(),
                 )
+            instance.group = group
+            instance.save()
         except Exception, exc:
             try:
                 logger.exception(u'Unable to process log entry: %s' % (exc,))
diff --git a/sentry/migrations/0003_auto__add_field_message_group__del_field_groupedmessage_server_name.py b/sentry/migrations/0003_auto__add_field_message_group__del_field_groupedmessage_server_name.py
new file mode 100644
index 0000000000..97bc7f74c3
--- /dev/null
+++ b/sentry/migrations/0003_auto__add_field_message_group__del_field_groupedmessage_server_name.py
@@ -0,0 +1,61 @@
+# encoding: utf-8
+import datetime
+from south.db import db
+from south.v2 import SchemaMigration
+from django.db import models
+
+class Migration(SchemaMigration):
+
+    def forwards(self, orm):
+        
+        # Adding field 'Message.group'
+        db.add_column('sentry_message', 'group', self.gf('django.db.models.fields.related.ForeignKey')(blank=True, related_name='message_set', null=True, to=orm['sentry.GroupedMessage']), keep_default=False)
+
+        # Deleting field 'GroupedMessage.server_name'
+        db.delete_column('sentry_groupedmessage', 'server_name')
+
+
+    def backwards(self, orm):
+        
+        # Deleting field 'Message.group'
+        db.delete_column('sentry_message', 'group_id')
+
+        # Adding field 'GroupedMessage.server_name'
+        db.add_column('sentry_groupedmessage', 'server_name', self.gf('django.db.models.fields.CharField')(default='', max_length=128, db_index=True), keep_default=False)
+
+
+    models = {
+        'sentry.groupedmessage': {
+            'Meta': {'unique_together': "(('logger', 'view', 'checksum'),)", 'object_name': 'GroupedMessage'},
+            'checksum': ('django.db.models.fields.CharField', [], {'max_length': '32', 'db_index': 'True'}),
+            'class_name': ('django.db.models.fields.CharField', [], {'db_index': 'True', 'max_length': '128', 'null': 'True', 'blank': 'True'}),
+            'first_seen': ('django.db.models.fields.DateTimeField', [], {'default': 'datetime.datetime.now', 'db_index': 'True'}),
+            'id': ('django.db.models.fields.AutoField', [], {'primary_key': 'True'}),
+            'last_seen': ('django.db.models.fields.DateTimeField', [], {'default': 'datetime.datetime.now', 'db_index': 'True'}),
+            'level': ('django.db.models.fields.PositiveIntegerField', [], {'default': '40', 'db_index': 'True', 'blank': 'True'}),
+            'logger': ('django.db.models.fields.CharField', [], {'default': "'root'", 'max_length': '64', 'db_index': 'True', 'blank': 'True'}),
+            'message': ('django.db.models.fields.TextField', [], {}),
+            'status': ('django.db.models.fields.PositiveIntegerField', [], {'default': '0'}),
+            'times_seen': ('django.db.models.fields.PositiveIntegerField', [], {'default': '1'}),
+            'traceback': ('django.db.models.fields.TextField', [], {'null': 'True', 'blank': 'True'}),
+            'view': ('django.db.models.fields.CharField', [], {'db_index': 'True', 'max_length': '255', 'null': 'True', 'blank': 'True'})
+        },
+        'sentry.message': {
+            'Meta': {'object_name': 'Message'},
+            'checksum': ('django.db.models.fields.CharField', [], {'max_length': '32', 'db_index': 'True'}),
+            'class_name': ('django.db.models.fields.CharField', [], {'db_index': 'True', 'max_length': '128', 'null': 'True', 'blank': 'True'}),
+            'data': ('django.db.models.fields.TextField', [], {'null': 'True', 'blank': 'True'}),
+            'datetime': ('django.db.models.fields.DateTimeField', [], {'default': 'datetime.datetime.now', 'db_index': 'True'}),
+            'group': ('django.db.models.fields.related.ForeignKey', [], {'blank': 'True', 'related_name': "'message_set'", 'null': 'True', 'to': "orm['sentry.GroupedMessage']"}),
+            'id': ('django.db.models.fields.AutoField', [], {'primary_key': 'True'}),
+            'level': ('django.db.models.fields.PositiveIntegerField', [], {'default': '40', 'db_index': 'True', 'blank': 'True'}),
+            'logger': ('django.db.models.fields.CharField', [], {'default': "'root'", 'max_length': '64', 'db_index': 'True', 'blank': 'True'}),
+            'message': ('django.db.models.fields.TextField', [], {}),
+            'server_name': ('django.db.models.fields.CharField', [], {'max_length': '128', 'db_index': 'True'}),
+            'traceback': ('django.db.models.fields.TextField', [], {'null': 'True', 'blank': 'True'}),
+            'url': ('django.db.models.fields.URLField', [], {'max_length': '200', 'null': 'True', 'blank': 'True'}),
+            'view': ('django.db.models.fields.CharField', [], {'db_index': 'True', 'max_length': '255', 'null': 'True', 'blank': 'True'})
+        }
+    }
+
+    complete_apps = ['sentry']
diff --git a/sentry/models.py b/sentry/models.py
index 58aff70812..c93f742e1d 100644
--- a/sentry/models.py
+++ b/sentry/models.py
@@ -45,7 +45,6 @@ class MessageBase(Model):
     message         = models.TextField()
     traceback       = models.TextField(blank=True, null=True)
     view            = models.CharField(max_length=255, db_index=True, blank=True, null=True)
-    server_name     = models.CharField(max_length=128, db_index=True)
     checksum        = models.CharField(max_length=32, db_index=True)
 
     objects         = DBLogManager()
@@ -156,9 +155,11 @@ class GroupedMessage(MessageBase):
                 warnings.warn(u'Unable to process log entry: %s' % (exc,))
 
 class Message(MessageBase):
+    group           = models.ForeignKey(GroupedMessage, blank=True, null=True, related_name="message_set")
     datetime        = models.DateTimeField(default=datetime.datetime.now, db_index=True)
     data            = GzippedDictField(blank=True, null=True)
     url             = models.URLField(verify_exists=False, null=True, blank=True)
+    server_name     = models.CharField(max_length=128, db_index=True)
 
     class Meta:
         verbose_name = _('message')
diff --git a/sentry/templates/sentry/group.html b/sentry/templates/sentry/group.html
index 70bf1f16bd..a26dcb5224 100644
--- a/sentry/templates/sentry/group.html
+++ b/sentry/templates/sentry/group.html
@@ -2,7 +2,7 @@
 
 {% load sentry_helpers %}
 
-{% block title %}{{ message.error }} | Django Sentry{% endblock %}
+{% block title %}{{ group.error }} | Django Sentry{% endblock %}
 
 {% block body %}
 	<div id="header"> 
@@ -19,11 +19,11 @@
 		
 		<dl class="flat">
 			<dt>First Seen:</dt>
-			<dd>{{ message.first_seen }}</dd>
+			<dd>{{ group.first_seen }}</dd>
 			<dt>Last Seen:</dt>
-			<dd>{{ message.last_seen }}</dd>
+			<dd>{{ group.last_seen }}</dd>
 			<dt>Status:</dt>
-			<dd>{{ message.get_status_display|title }}</dd>
+			<dd>{{ group.get_status_display|title }}</dd>
 		</dl>
 		
 		<h2>URLs</h2>
@@ -45,11 +45,11 @@
 
 	<div id="body" class="with-sidebar"> 
 		<ul class="messages">
-			<li class="{% cycle 'row1' 'row2' %} level-{{ message.level }} active">
-				<span class="count">{{ message.times_seen }}</span>
-				<h3>{% if message.view %}{{ message.view }}{% else %}{{ message.message }}{% endif %}</h3>
-				<p class="message">{{ message.error }}</p>
-				<pre class="traceback">{{ message.shortened_traceback }}</pre>
+			<li class="{% cycle 'row1' 'row2' %} level-{{ group.level }} active">
+				<span class="count">{{ group.times_seen }}</span>
+				<h3>{% if group.view %}{{ group.view }}{% else %}{{ group.message }}{% endif %}</h3>
+				<p class="message">{{ group.error }}</p>
+				<pre class="traceback">{{ group.shortened_traceback }}</pre>
 			</li>
 		</ul>
 		
diff --git a/sentry/views.py b/sentry/views.py
index d4f948b264..4c5717bf72 100644
--- a/sentry/views.py
+++ b/sentry/views.py
@@ -14,7 +14,7 @@ import datetime
 
 def index(request):
     logger_names = SortedDict((l, l) for l in GroupedMessage.objects.values_list('logger', flat=True).distinct())
-    server_names = SortedDict((l, l) for l in GroupedMessage.objects.values_list('server_name', flat=True).distinct())
+    server_names = SortedDict((l, l) for l in Message.objects.values_list('server_name', flat=True).distinct())
     level_names = SortedDict((str(k), v) for k, v in LOG_LEVELS)
 
     logger = request.GET.get('logger')
@@ -56,7 +56,7 @@ def index(request):
         chart_qs = chart_qs.filter(level=level)
 
     if server_name:
-        message_list = message_list.filter(server_name=server_name)
+        message_list = message_list.filter(message_set__server_name=server_name).distinct()
         chart_qs = chart_qs.filter(server_name=server_name)
 
     rows = dict(chart_qs)
@@ -78,25 +78,9 @@ def index(request):
     return render_to_response('sentry/index.html', locals())
 
 def group(request, group_id):
-    message = GroupedMessage.objects.extra(
-        select={
-            'score': 'times_seen / (pow((floor(extract(epoch from now() - last_seen) / 3600) + 2), 1.25) + 1)',
-        }
-    ).get(pk=group_id)
-
-    score = log(message.score)
-    if score > 2:
-        message.priority = 'high'
-    elif score > 1:
-        message.priority = 'medium'
-    elif score >= 0:
-        message.priority = 'low'
-    elif score < 0:
-        message.priority = 'verylow'
-    else:
-        message.priority = 'veryhigh'
+    group = GroupedMessage.objects.get(pk=group_id)
 
-    message_list = Message.objects.filter(checksum=message.checksum, logger=message.logger, view=message.view)
+    message_list = group.message_set.all()
     
     obj = message_list[0]
     if '__sentry__' in obj.data:
@@ -124,7 +108,7 @@ def group(request, group_id):
         reporter = ImprovedExceptionReporter(fake_request, exc_type, exc_value, frames, obj.data['__sentry__'].get('template'))
         traceback = mark_safe(reporter.get_traceback_html())
     else:
-        traceback = mark_safe('<pre>%s</pre>' % (message.traceback,))
+        traceback = mark_safe('<pre>%s</pre>' % (group.traceback,))
     
     unique_urls = message_list.filter(url__isnull=False).values_list('url', 'logger', 'view', 'checksum').annotate(times_seen=Count('url')).values('url', 'times_seen')
     
