commit 41603119497aa052cca8e3db0b969fdf6a9ec995
Author: Billy Vong <billyvg@users.noreply.github.com>
Date:   Mon May 20 15:16:23 2019 -0700

    ref(ui): Refactor `<GroupSeenBy>` to more generic component (#13273)
    
    * accepts a `seenBy` array of users and some props to pass into `AvatarList`
    * allow styling via className and prop for direction

diff --git a/docs-ui/components/seenByList.stories.js b/docs-ui/components/seenByList.stories.js
new file mode 100644
index 0000000000..c56454febb
--- /dev/null
+++ b/docs-ui/components/seenByList.stories.js
@@ -0,0 +1,28 @@
+import React from 'react';
+
+import {number, string} from '@storybook/addon-knobs';
+import {storiesOf} from '@storybook/react';
+import {withInfo} from '@storybook/addon-info';
+import SeenByList from 'app/components/seenByList';
+
+const USER = {
+  id: 1,
+  name: 'Jane Doe',
+  email: 'janedoe@example.com',
+};
+
+// eslint-disable-next-line
+storiesOf('UI|Other/SeenByList', module).add(
+  'default',
+  withInfo('This displays a list of avatars but filters out the current user')(() => {
+    const user = {...USER};
+    return (
+      <SeenByList
+        seenBy={[user]}
+        avatarSize={number('avatarSize', 28)}
+        iconTooltip={string('iconTooltip', 'icon tooltip message')}
+        maxVisibleAvatars={number('maxVisibleAvatars', 5)}
+      />
+    );
+  })
+);
diff --git a/src/sentry/static/sentry/app/views/groupDetails/shared/seenBy.jsx b/src/sentry/static/sentry/app/components/seenByList.jsx
similarity index 61%
rename from src/sentry/static/sentry/app/views/groupDetails/shared/seenBy.jsx
rename to src/sentry/static/sentry/app/components/seenByList.jsx
index 90a9a44348..ecf67dac95 100644
--- a/src/sentry/static/sentry/app/views/groupDetails/shared/seenBy.jsx
+++ b/src/sentry/static/sentry/app/components/seenByList.jsx
@@ -1,22 +1,51 @@
+import PropTypes from 'prop-types';
 import React from 'react';
+import classNames from 'classnames';
 import moment from 'moment';
 import styled from 'react-emotion';
 
-import SentryTypes from 'app/sentryTypes';
-import ConfigStore from 'app/stores/configStore';
-import AvatarList from 'app/components/avatar/avatarList';
+import {t} from 'app/locale';
 import {userDisplayName} from 'app/utils/formatters';
+import AvatarList from 'app/components/avatar/avatarList';
+import ConfigStore from 'app/stores/configStore';
+import SentryTypes from 'app/sentryTypes';
 import Tooltip from 'app/components/tooltip';
-import {t} from 'app/locale';
 
-export default class GroupSeenBy extends React.Component {
+export default class SeenByList extends React.Component {
   static propTypes = {
-    group: SentryTypes.Group.isRequired,
+    // Avatar size
+    avatarSize: PropTypes.number,
+
+    // List of *all* users that have seen something
+    seenBy: PropTypes.arrayOf(SentryTypes.User).isRequired,
+
+    // Tooltip message for the "Seen By" icon
+    iconTooltip: PropTypes.string,
+
+    iconPosition: PropTypes.oneOf(['left', 'right']),
+
+    // Max avatars to display
+    maxVisibleAvatars: PropTypes.number,
+  };
+
+  static defaultProps = {
+    avatarSize: 28,
+    iconTooltip: t('People who have viewed this'),
+    iconPosition: 'left',
+    maxVisibleAvatars: 10,
+    seenBy: [],
   };
 
   render() {
     const activeUser = ConfigStore.get('user');
-    const group = this.props.group;
+    const {
+      className,
+      avatarSize,
+      maxVisibleAvatars,
+      seenBy,
+      iconPosition,
+      iconTooltip,
+    } = this.props;
 
     // NOTE: Sometimes group.seenBy is undefined, even though the /groups/{id} API
     //       endpoint guarantees an array. We haven't figured out HOW GroupSeenBy
@@ -25,19 +54,20 @@ export default class GroupSeenBy extends React.Component {
     //
     // See: https://github.com/getsentry/sentry/issues/2387
 
-    const seenBy = group.seenBy || [];
     if (seenBy.length === 0) {
       return null;
     }
 
     // Note className="seen-by" is required for responsive design
     return (
-      <SeenByWrapper className="seen-by">
+      <SeenByWrapper
+        iconPosition={iconPosition}
+        className={classNames('seen-by', className)}
+      >
         <AvatarList
           users={seenBy.filter(user => activeUser.id !== user.id)}
-          avatarSize={28}
-          maxVisibleAvatars={10}
-          tooltipOptions={{html: true}}
+          avatarSize={avatarSize}
+          maxVisibleAvatars={maxVisibleAvatars}
           renderTooltip={user => (
             <React.Fragment>
               {userDisplayName(user)}
@@ -47,7 +77,7 @@ export default class GroupSeenBy extends React.Component {
           )}
         />
         <IconWrapper>
-          <Tooltip title={t("People who've viewed this issue")}>
+          <Tooltip title={iconTooltip}>
             <EyeIcon className="icon-eye" />
           </Tooltip>
         </IconWrapper>
@@ -58,9 +88,9 @@ export default class GroupSeenBy extends React.Component {
 
 const SeenByWrapper = styled('div')`
   display: flex;
-  flex-direction: row-reverse;
   margin-top: 15px;
   float: right;
+  ${p => (p.iconPosition === 'left' ? 'flex-direction: row-reverse' : '')};
 `;
 
 const IconWrapper = styled('div')`
diff --git a/src/sentry/static/sentry/app/views/groupDetails/shared/header.jsx b/src/sentry/static/sentry/app/views/groupDetails/shared/header.jsx
index df904949c1..9e0953154f 100644
--- a/src/sentry/static/sentry/app/views/groupDetails/shared/header.jsx
+++ b/src/sentry/static/sentry/app/views/groupDetails/shared/header.jsx
@@ -1,28 +1,29 @@
+import {Link} from 'react-router';
+import {omit} from 'lodash';
 import PropTypes from 'prop-types';
 import React from 'react';
-import styled from 'react-emotion';
 import createReactClass from 'create-react-class';
-import {Link} from 'react-router';
-import withApi from 'app/utils/withApi';
-import {omit} from 'lodash';
 import qs from 'query-string';
+import styled from 'react-emotion';
+
 import {fetchOrgMembers} from 'app/actionCreators/members';
+import {t} from 'app/locale';
 import AssigneeSelector from 'app/components/assigneeSelector';
 import Count from 'app/components/count';
+import EventOrGroupTitle from 'app/components/eventOrGroupTitle';
+import GuideAnchor from 'app/components/assistant/guideAnchor';
 import IndicatorStore from 'app/stores/indicatorStore';
 import ListLink from 'app/components/links/listLink';
 import NavTabs from 'app/components/navTabs';
-import ShortId from 'app/components/shortId';
-import EventOrGroupTitle from 'app/components/eventOrGroupTitle';
-import GuideAnchor from 'app/components/assistant/guideAnchor';
 import OrganizationState from 'app/mixins/organizationState';
 import ProjectBadge from 'app/components/idBadge/projectBadge';
-import Tooltip from 'app/components/tooltip';
-import {t} from 'app/locale';
+import SeenByList from 'app/components/seenByList';
 import SentryTypes from 'app/sentryTypes';
+import ShortId from 'app/components/shortId';
+import Tooltip from 'app/components/tooltip';
+import withApi from 'app/utils/withApi';
 
 import GroupActions from './actions';
-import GroupSeenBy from './seenBy';
 
 const GroupHeader = createReactClass({
   displayName: 'GroupHeader',
@@ -208,7 +209,10 @@ const GroupHeader = createReactClass({
             </div>
           </div>
         </div>
-        <GroupSeenBy group={group} />
+        <SeenByList
+          seenBy={group.seenBy}
+          iconTooltip={t('People who have viewed this issue')}
+        />
         <GroupActions group={group} project={project} />
         <NavTabs>
           <ListLink
diff --git a/tests/js/spec/components/seenByList.spec.jsx b/tests/js/spec/components/seenByList.spec.jsx
new file mode 100644
index 0000000000..fc90d5fa8d
--- /dev/null
+++ b/tests/js/spec/components/seenByList.spec.jsx
@@ -0,0 +1,53 @@
+import React from 'react';
+
+import {mount} from 'enzyme';
+import ConfigStore from 'app/stores/configStore';
+import SeenByList from 'app/components/seenByList';
+
+describe('SeenByList', function() {
+  beforeEach(function() {
+    jest.spyOn(ConfigStore, 'get').mockImplementation(() => ({}));
+  });
+
+  afterEach(function() {});
+
+  it('should return null if seenBy is falsy', function() {
+    const wrapper = mount(<SeenByList />);
+    expect(wrapper.children()).toHaveLength(0);
+  });
+
+  it('should return a list of each user that saw', function() {
+    const wrapper = mount(
+      <SeenByList
+        seenBy={[
+          {id: '1', email: 'jane@example.com'},
+          {id: '2', email: 'john@example.com'},
+        ]}
+      />
+    );
+
+    expect(wrapper.find('EyeIcon')).toHaveLength(1);
+    expect(wrapper.find('AvatarList')).toHaveLength(1);
+    expect(wrapper.find('Avatar')).toHaveLength(2);
+  });
+
+  it('filters out the current user from list of users', function() {
+    jest
+      .spyOn(ConfigStore, 'get')
+      .mockImplementation(() => ({id: '1', email: 'jane@example.com'}));
+
+    const wrapper = mount(
+      <SeenByList
+        seenBy={[
+          {id: '1', email: 'jane@example.com'},
+          {id: '2', email: 'john@example.com'},
+        ]}
+      />
+    );
+
+    expect(wrapper.find('EyeIcon')).toHaveLength(1);
+    expect(wrapper.find('AvatarList')).toHaveLength(1);
+    expect(wrapper.find('Avatar')).toHaveLength(1);
+    expect(wrapper.find('LetterAvatar').prop('displayName')).toBe('john@example.com');
+  });
+});
diff --git a/tests/js/spec/views/groupDetails/seenBy.spec.jsx b/tests/js/spec/views/groupDetails/seenBy.spec.jsx
deleted file mode 100644
index b7fd6cf525..0000000000
--- a/tests/js/spec/views/groupDetails/seenBy.spec.jsx
+++ /dev/null
@@ -1,39 +0,0 @@
-import React from 'react';
-import {shallow} from 'enzyme';
-
-import GroupSeenBy from 'app/views/groupDetails/shared/seenBy';
-import ConfigStore from 'app/stores/configStore';
-
-describe('GroupSeenBy', function() {
-  beforeEach(function() {
-    jest.spyOn(ConfigStore, 'get').mockImplementation(() => []);
-  });
-
-  afterEach(function() {});
-
-  describe('render()', function() {
-    it('should return null if seenBy is falsy', function() {
-      const wrapper = shallow(
-        <GroupSeenBy group={TestStubs.Group({seenBy: undefined})} />
-      );
-      expect(wrapper.children()).toHaveLength(0);
-    });
-
-    it('should return a list of each user that saw', function() {
-      const wrapper = shallow(
-        <GroupSeenBy
-          group={TestStubs.Group({
-            seenBy: [
-              {id: '1', email: 'jane@example.com'},
-              {id: '2', email: 'john@example.com'},
-            ],
-          })}
-        />
-      );
-
-      expect(wrapper.find('EyeIcon')).toHaveLength(1);
-      expect(wrapper.find('AvatarList')).toHaveLength(1);
-      expect(wrapper.find('AvatarList').prop('users')).toHaveLength(2);
-    });
-  });
-});
