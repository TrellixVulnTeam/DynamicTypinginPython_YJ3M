commit 54e60f041cbfb4ee5657d919ef1ad094d4b11729
Author: Matt Robenolt <matt@ydekproductions.com>
Date:   Tue Feb 7 11:56:23 2017 -0800

    accounts: add audit information to password reset emails

diff --git a/src/sentry/models/lostpasswordhash.py b/src/sentry/models/lostpasswordhash.py
index 01fec51881..95f1783272 100644
--- a/src/sentry/models/lostpasswordhash.py
+++ b/src/sentry/models/lostpasswordhash.py
@@ -51,7 +51,7 @@ class LostPasswordHash(Model):
             args=[self.user.id, self.hash]
         ))
 
-    def send_recover_mail(self):
+    def send_recover_mail(self, request):
         from sentry import options
         from sentry.http import get_server_hostname
         from sentry.utils.email import MessageBuilder
@@ -60,7 +60,10 @@ class LostPasswordHash(Model):
             'user': self.user,
             'domain': get_server_hostname(),
             'url': self.get_absolute_url(),
+            'datetime': timezone.now(),
+            'ip_address': request.META['REMOTE_ADDR'],
         }
+
         msg = MessageBuilder(
             subject='%sPassword Recovery' % (options.get('mail.subject-prefix'),),
             template='sentry/emails/recover_account.txt',
diff --git a/src/sentry/templates/sentry/emails/recover_account.html b/src/sentry/templates/sentry/emails/recover_account.html
index fabe61b587..741f50e3a2 100644
--- a/src/sentry/templates/sentry/emails/recover_account.html
+++ b/src/sentry/templates/sentry/emails/recover_account.html
@@ -7,6 +7,10 @@
     <p>A password reset was requested for your account ({{ user.username|safe }}) on Sentry ({{ domain }}). If you did not authorize this, you may simply ignore this email.</p>
     <p>To continue with your password reset, simply click the button below, and you will be able to change your password. This link will expire in 48 hours.</p>
 
-    <a href="{{ url|safe }}" class="btn">Reset Password</a>
-</p>
+    <p><a href="{{ url|safe }}" class="btn">Reset Password</a></p>
+
+    <p><small>This request was made by:</small></p>
+    <p><small><pre>
+IP: {{ ip_address }}
+Date: {{ datetime|date:"N j, Y, P e" }}</pre></small><p>
 {% endblock %}
diff --git a/src/sentry/templates/sentry/emails/recover_account.txt b/src/sentry/templates/sentry/emails/recover_account.txt
index 38ffc90f4a..9ece894860 100644
--- a/src/sentry/templates/sentry/emails/recover_account.txt
+++ b/src/sentry/templates/sentry/emails/recover_account.txt
@@ -6,3 +6,7 @@ To continue with your password reset, simply follow the link below, and you will
 {{ url|safe }}
 
 This link will expire in 48 hours.
+
+This request was made by:
+IP: {{ ip_address }}
+Date: {{ datetime|date:"N j, Y, P e" }}
diff --git a/src/sentry/web/frontend/accounts.py b/src/sentry/web/frontend/accounts.py
index cd87a2c670..e330fef5f2 100644
--- a/src/sentry/web/frontend/accounts.py
+++ b/src/sentry/web/frontend/accounts.py
@@ -45,7 +45,7 @@ from sentry.utils import auth
 logger = logging.getLogger('sentry.accounts')
 
 
-def send_password_recovery_mail(user):
+def send_password_recovery_mail(request, user):
     password_hash, created = LostPasswordHash.objects.get_or_create(
         user=user
     )
@@ -53,7 +53,7 @@ def send_password_recovery_mail(user):
         password_hash.date_added = timezone.now()
         password_hash.set_hash()
         password_hash.save()
-    password_hash.send_recover_mail()
+    password_hash.send_recover_mail(request)
     return password_hash
 
 
@@ -64,7 +64,7 @@ def login_redirect(request):
 
 
 def expired(request, user):
-    password_hash = send_password_recovery_mail(user)
+    password_hash = send_password_recovery_mail(request, user)
     return render_to_response('sentry/account/recover/expired.html', {
         'email': password_hash.user.email,
     }, request)
@@ -85,7 +85,7 @@ def recover(request):
 
     form = RecoverPasswordForm(request.POST or None)
     if form.is_valid():
-        password_hash = send_password_recovery_mail(form.cleaned_data['user'])
+        password_hash = send_password_recovery_mail(request, form.cleaned_data['user'])
 
         return render_to_response('sentry/account/recover/sent.html', {
             'email': password_hash.user.email,
diff --git a/src/sentry/web/frontend/debug/mail.py b/src/sentry/web/frontend/debug/mail.py
index b363491cdb..4936a43963 100644
--- a/src/sentry/web/frontend/debug/mail.py
+++ b/src/sentry/web/frontend/debug/mail.py
@@ -651,6 +651,8 @@ def recover_account(request):
                 args=[request.user.id, 'XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX']
             )),
             'domain': get_server_hostname(),
+            'ip_address': request.META['REMOTE_ADDR'],
+            'datetime': timezone.now(),
         },
     ).render(request)
 
diff --git a/tests/sentry/models/tests.py b/tests/sentry/models/tests.py
index b1eaccf218..b3dda7d660 100644
--- a/tests/sentry/models/tests.py
+++ b/tests/sentry/models/tests.py
@@ -8,6 +8,7 @@ from datetime import timedelta
 from django.core import mail
 from django.core.urlresolvers import reverse
 from django.db import connection
+from django.http import HttpRequest
 from django.utils import timezone
 from exam import fixture
 
@@ -59,8 +60,12 @@ class LostPasswordTest(TestCase):
         )
 
     def test_send_recover_mail(self):
+        request = HttpRequest()
+        request.method = 'GET'
+        request.META['REMOTE_ADDR'] = '1.1.1.1'
+
         with self.options({'system.url-prefix': 'http://testserver'}), self.tasks():
-            self.password_hash.send_recover_mail()
+            self.password_hash.send_recover_mail(request)
 
         assert len(mail.outbox) == 1
         msg = mail.outbox[0]
diff --git a/tests/sentry/web/frontend/accounts/tests.py b/tests/sentry/web/frontend/accounts/tests.py
index 054e62cee8..d0ed006ba1 100644
--- a/tests/sentry/web/frontend/accounts/tests.py
+++ b/tests/sentry/web/frontend/accounts/tests.py
@@ -240,7 +240,7 @@ class RecoverPasswordTest(TestCase):
         assert resp.status_code == 200
         self.assertTemplateUsed(resp, 'sentry/account/recover/sent.html')
         assert 'email' in resp.context
-        send_recover_mail.assert_called_once_with()
+        send_recover_mail.call_count == 1
 
 
 class RecoverPasswordConfirmTest(TestCase):
