commit 1b88c5f217a90190346983748a67dd9b4af16023
Author: NisanthanNanthakumar <nisanthan.nanthakumar@sentry.io>
Date:   Tue Feb 11 13:58:16 2020 -0800

    feat: Show installation status in the Detailed Views of integrations/plugins/apps (#16926)
    
    Problem
    We do not know if the installation status integration/plugin/app in the Information tab of the Detailed View.
    
    Solution
    We will put the status in the top to the left of the name of the integration/plugin/app.

diff --git a/src/sentry/static/sentry/app/views/organizationIntegrations/IntegrationDirectorySentryAppRow.tsx b/src/sentry/static/sentry/app/views/organizationIntegrations/IntegrationDirectorySentryAppRow.tsx
index 86fcc50a2e..1aa64f2322 100644
--- a/src/sentry/static/sentry/app/views/organizationIntegrations/IntegrationDirectorySentryAppRow.tsx
+++ b/src/sentry/static/sentry/app/views/organizationIntegrations/IntegrationDirectorySentryAppRow.tsx
@@ -6,14 +6,12 @@ import styled from '@emotion/styled';
 import {PanelItem} from 'app/components/panels';
 import {t} from 'app/locale';
 import space from 'app/styles/space';
-import CircleIndicator from 'app/components/circleIndicator';
 import PluginIcon from 'app/plugins/components/pluginIcon';
 import {Organization, SentryApp, SentryAppInstallation} from 'app/types';
-import theme from 'app/utils/theme';
 
-const INSTALLED = 'Installed';
-const NOT_INSTALLED = 'Not Installed';
-const PENDING = 'Pending';
+import {NOT_INSTALLED} from './constants';
+
+import IntegrationStatus from './integrationStatus';
 
 type Props = {
   app: SentryApp;
@@ -34,10 +32,9 @@ export default class IntegrationDirectorySentryAppRow extends React.PureComponen
   renderStatus() {
     const {app} = this.props;
     const status = this.installationStatus;
-
     return (
       <React.Fragment>
-        <StatusIndicator status={status} />
+        <IntegrationStatus status={status} />
         {!this.isPublished && <PublishStatus status={app.status} />}
       </React.Fragment>
     );
@@ -45,7 +42,7 @@ export default class IntegrationDirectorySentryAppRow extends React.PureComponen
 
   get installationStatus() {
     if (this.props.install) {
-      return capitalize(this.props.install.status);
+      return capitalize(this.props.install.status) as 'Installed' | 'Pending';
     }
 
     return NOT_INSTALLED;
@@ -118,27 +115,6 @@ const FlexContainer = styled('div')`
   display: flex;
   align-items: center;
 `;
-const color = {
-  [INSTALLED]: 'success',
-  [NOT_INSTALLED]: 'gray2',
-  [PENDING]: 'yellowOrange',
-};
-
-type StatusIndicatorProps = {status: string; theme?: any};
-
-const StatusIndicator = styled(({status, ...props}: StatusIndicatorProps) => {
-  return (
-    <FlexContainer>
-      <CircleIndicator size={6} color={theme[color[status]]} />
-      <div {...props}>{t(`${status}`)}</div>
-    </FlexContainer>
-  );
-})`
-  color: ${(props: StatusIndicatorProps) => props.theme[color[props.status]]};
-  margin-left: ${space(0.5)};
-  font-weight: light;
-  margin-right: ${space(0.75)};
-`;
 
 type PublishStatusProps = {status: SentryApp['status']; theme?: any};
 
diff --git a/src/sentry/static/sentry/app/views/organizationIntegrations/constants.tsx b/src/sentry/static/sentry/app/views/organizationIntegrations/constants.tsx
new file mode 100644
index 0000000000..7063a638f1
--- /dev/null
+++ b/src/sentry/static/sentry/app/views/organizationIntegrations/constants.tsx
@@ -0,0 +1,9 @@
+export const INSTALLED = 'Installed';
+export const NOT_INSTALLED = 'Not Installed';
+export const PENDING = 'Pending';
+
+export const colors = {
+  [INSTALLED]: 'success',
+  [NOT_INSTALLED]: 'gray2',
+  [PENDING]: 'yellowOrange',
+};
diff --git a/src/sentry/static/sentry/app/views/organizationIntegrations/integrationDetailedView.tsx b/src/sentry/static/sentry/app/views/organizationIntegrations/integrationDetailedView.tsx
index 63bc5ce62f..604c0b1abe 100644
--- a/src/sentry/static/sentry/app/views/organizationIntegrations/integrationDetailedView.tsx
+++ b/src/sentry/static/sentry/app/views/organizationIntegrations/integrationDetailedView.tsx
@@ -29,6 +29,7 @@ import marked, {singleLineRenderer} from 'app/utils/marked';
 import withOrganization from 'app/utils/withOrganization';
 import {growDown, highlight} from 'app/styles/animations';
 import {sortArray} from 'app/utils';
+import IntegrationStatus from './integrationStatus';
 
 type State = {
   configurations: Integration[];
@@ -60,6 +61,14 @@ class IntegrationDetailedView extends AsyncComponent<
     return this.state.information.providers[0];
   }
 
+  get isEnabled() {
+    return this.state.configurations.length > 0;
+  }
+
+  get status() {
+    return this.isEnabled ? 'Installed' : 'Not Installed';
+  }
+
   getEndpoints(): ([string, string, any] | [string, string])[] {
     const {orgId, providerKey} = this.props.params;
     const baseEndpoints: ([string, string, any] | [string, string])[] = [
@@ -211,7 +220,10 @@ class IntegrationDetailedView extends AsyncComponent<
         <Flex>
           <PluginIcon size={60} pluginId={information.key} />
           <TitleContainer>
-            <Title>{information.name}</Title>
+            <Flex>
+              <Title>{information.name}</Title>
+              <Status status={this.status} />
+            </Flex>
             <Flex>
               {information.features.length && this.featureTags(information.features)}
             </Flex>
@@ -372,6 +384,18 @@ const StyledInstalledIntegration = styled(
   border: 1px solid ${p => p.theme.borderLight};
 `;
 
+const StatusWrapper = styled('div')`
+  margin-bottom: ${space(1)};
+  padding-left: ${space(2)};
+  line-height: 1.5em;
+`;
+
+const Status = p => (
+  <StatusWrapper>
+    <IntegrationStatus {...p} />
+  </StatusWrapper>
+);
+
 const InformationCard = ({children, alerts, information}: InformationCardProps) => {
   const {metadata} = information;
   const description = marked(metadata.description);
diff --git a/src/sentry/static/sentry/app/views/organizationIntegrations/integrationListDirectory.tsx b/src/sentry/static/sentry/app/views/organizationIntegrations/integrationListDirectory.tsx
index 308f111040..9fcc72d1e5 100644
--- a/src/sentry/static/sentry/app/views/organizationIntegrations/integrationListDirectory.tsx
+++ b/src/sentry/static/sentry/app/views/organizationIntegrations/integrationListDirectory.tsx
@@ -110,7 +110,7 @@ class OrganizationIntegrations extends AsyncComponent<
 
     const combined = ([] as AppOrProviderOrPlugin[])
       .concat(published)
-      .concat(orgOwned.filter(a => a.status === 'published'))
+      .concat(orgOwned)
       .concat(this.providers)
       .concat(plugins);
 
diff --git a/src/sentry/static/sentry/app/views/organizationIntegrations/integrationPluginRow.tsx b/src/sentry/static/sentry/app/views/organizationIntegrations/integrationPluginRow.tsx
index ddc3059489..13810b17f0 100644
--- a/src/sentry/static/sentry/app/views/organizationIntegrations/integrationPluginRow.tsx
+++ b/src/sentry/static/sentry/app/views/organizationIntegrations/integrationPluginRow.tsx
@@ -1,13 +1,11 @@
-import {withTheme} from 'emotion-theming';
 import React from 'react';
 import styled from '@emotion/styled';
 import Link from 'app/components/links/link';
 import {PanelItem} from 'app/components/panels';
-import {t} from 'app/locale';
-import CircleIndicator from 'app/components/circleIndicator';
 import PluginIcon from 'app/plugins/components/pluginIcon';
 import space from 'app/styles/space';
 import {PluginWithProjectList, Organization} from 'app/types';
+import IntegrationStatus from './integrationStatus';
 
 type Props = {
   plugin: PluginWithProjectList;
@@ -22,6 +20,10 @@ export default class PluginRow extends React.Component<Props> {
     return this.props.plugin.projectList.length > 0;
   }
 
+  get status() {
+    return this.isEnabled ? 'Installed' : 'Not Installed';
+  }
+
   render() {
     const {
       plugin,
@@ -38,7 +40,7 @@ export default class PluginRow extends React.Component<Props> {
               {`${plugin.name} ${isLegacy ? '(Legacy)' : ''}`}
             </ProviderName>
             <ProviderDetails>
-              <Status enabled={this.isEnabled} />
+              <IntegrationStatus status={this.status} />
               {plugin.projectList.length ? (
                 <StyledLink
                   to={`/settings/${slug}/plugins/${plugin.slug}/?tab=configurations`}
@@ -79,36 +81,6 @@ const ProviderDetails = styled(Flex)`
   font-size: 0.8em;
 `;
 
-type StatusProps = {
-  enabled: boolean;
-  theme?: any; //TS complains if we don't make this optional
-};
-
-const Status = styled(
-  withTheme((props: StatusProps) => {
-    const {enabled, theme, ...p} = props;
-    return (
-      <StatusWrapper>
-        <CircleIndicator
-          enabled={enabled}
-          size={6}
-          color={enabled ? theme.success : theme.gray2}
-        />
-        <div {...p}>{enabled ? t('Installed') : t('Not Installed')}</div>
-      </StatusWrapper>
-    );
-  })
-)`
-  color: ${(p: StatusProps) => (p.enabled ? p.theme.success : p.theme.gray2)};
-  margin-left: ${space(0.5)};
-  margin-right: ${space(0.75)};
-`;
-
-const StatusWrapper = styled('div')`
-  display: flex;
-  align-items: center;
-`;
-
 const StyledLink = styled(Link)`
   color: ${p => p.theme.gray2};
   &:before {
diff --git a/src/sentry/static/sentry/app/views/organizationIntegrations/integrationProviderRow.tsx b/src/sentry/static/sentry/app/views/organizationIntegrations/integrationProviderRow.tsx
index c4f97c9c39..48406c49fa 100644
--- a/src/sentry/static/sentry/app/views/organizationIntegrations/integrationProviderRow.tsx
+++ b/src/sentry/static/sentry/app/views/organizationIntegrations/integrationProviderRow.tsx
@@ -1,15 +1,13 @@
-import {withTheme} from 'emotion-theming';
 import PropTypes from 'prop-types';
 import React from 'react';
 import styled from '@emotion/styled';
 import Link from 'app/components/links/link';
 import {PanelItem} from 'app/components/panels';
-import {t} from 'app/locale';
-import CircleIndicator from 'app/components/circleIndicator';
 import PluginIcon from 'app/plugins/components/pluginIcon';
 import SentryTypes from 'app/sentryTypes';
 import space from 'app/styles/space';
 import {IntegrationProvider, Integration} from 'app/types';
+import IntegrationStatus from './integrationStatus';
 
 type Props = {
   provider: IntegrationProvider;
@@ -30,6 +28,10 @@ export default class ProviderRow extends React.Component<Props> {
     return this.props.integrations.length > 0;
   }
 
+  get status() {
+    return this.isEnabled ? 'Installed' : 'Not Installed';
+  }
+
   render() {
     const {provider, integrations} = this.props;
     const {
@@ -44,7 +46,7 @@ export default class ProviderRow extends React.Component<Props> {
               {provider.name}
             </ProviderName>
             <ProviderDetails>
-              <Status enabled={this.isEnabled} />
+              <IntegrationStatus status={this.status} />
               {integrations.length ? (
                 <StyledLink
                   to={`/settings/${slug}/integrations/${provider.key}/?tab=configurations`}
@@ -75,36 +77,6 @@ const ProviderDetails = styled(Flex)`
   font-size: 0.8em;
 `;
 
-type StatusProps = {
-  enabled: boolean;
-  theme?: any; //TS complains if we don't make this optional
-};
-
-const Status = styled(
-  withTheme((props: StatusProps) => {
-    const {enabled, theme, ...p} = props;
-    return (
-      <StatusWrapper>
-        <CircleIndicator
-          enabled={enabled}
-          size={6}
-          color={enabled ? theme.success : theme.gray2}
-        />
-        <div {...p}>{enabled ? t('Installed') : t('Not Installed')}</div>
-      </StatusWrapper>
-    );
-  })
-)`
-  color: ${(p: StatusProps) => (p.enabled ? p.theme.success : p.theme.gray2)};
-  margin-left: ${space(0.5)};
-  margin-right: ${space(0.75)};
-`;
-
-const StatusWrapper = styled('div')`
-  display: flex;
-  align-items: center;
-`;
-
 const StyledLink = styled(Link)`
   color: ${p => p.theme.gray2};
   &:before {
diff --git a/src/sentry/static/sentry/app/views/organizationIntegrations/integrationStatus.tsx b/src/sentry/static/sentry/app/views/organizationIntegrations/integrationStatus.tsx
new file mode 100644
index 0000000000..f817468dff
--- /dev/null
+++ b/src/sentry/static/sentry/app/views/organizationIntegrations/integrationStatus.tsx
@@ -0,0 +1,34 @@
+import React from 'react';
+import styled from '@emotion/styled';
+import CircleIndicator from 'app/components/circleIndicator';
+import theme from 'app/utils/theme';
+import {t} from 'app/locale';
+import space from 'app/styles/space';
+
+import {colors} from './constants';
+
+type StatusProps = {
+  status: 'Installed' | 'Not Installed' | 'Pending';
+};
+
+const StatusWrapper = styled('div')`
+  display: flex;
+  align-items: center;
+`;
+
+const IntegrationStatus = styled((props: StatusProps) => {
+  const {status, ...p} = props;
+  return (
+    <StatusWrapper>
+      <CircleIndicator size={6} color={theme[colors[status]]} />
+      <div {...p}>{`${t(status)}`}</div>
+    </StatusWrapper>
+  );
+})`
+  color: ${(props: StatusProps) => theme[colors[props.status]]};
+  margin-left: ${space(0.5)};
+  font-weight: light;
+  margin-right: ${space(0.75)};
+`;
+
+export default IntegrationStatus;
diff --git a/src/sentry/static/sentry/app/views/organizationIntegrations/pluginDetailedView.tsx b/src/sentry/static/sentry/app/views/organizationIntegrations/pluginDetailedView.tsx
index e0bce8935e..899c8a7528 100644
--- a/src/sentry/static/sentry/app/views/organizationIntegrations/pluginDetailedView.tsx
+++ b/src/sentry/static/sentry/app/views/organizationIntegrations/pluginDetailedView.tsx
@@ -23,6 +23,7 @@ import {openModal} from 'app/actionCreators/modal';
 import ContextPickerModal from 'app/components/contextPickerModal';
 import {getIntegrationFeatureGate} from 'app/utils/integrationUtil';
 import {t} from 'app/locale';
+import IntegrationStatus from './integrationStatus';
 
 type Tab = 'information' | 'configurations';
 const tabs: Tab[] = ['information', 'configurations'];
@@ -59,6 +60,14 @@ class PluginDetailedView extends AsyncComponent<
     return this.state.plugins[0];
   }
 
+  get isEnabled() {
+    return this.state.plugins[0].projectList.length > 0;
+  }
+
+  get status() {
+    return this.isEnabled ? 'Installed' : 'Not Installed';
+  }
+
   handleResetConfiguration = (projectId: string) => {
     //make a copy of our project list
     const projectList = this.plugin.projectList.slice();
@@ -163,7 +172,10 @@ class PluginDetailedView extends AsyncComponent<
         <Flex>
           <PluginIcon size={60} pluginId={plugin.slug} />
           <TitleContainer>
-            <Title>{plugin.name}</Title>
+            <Flex>
+              <Title>{plugin.name}</Title>
+              <Status status={this.status} />
+            </Flex>
             <Flex>{this.featureTags()}</Flex>
           </TitleContainer>
           <IntegrationFeatures {...featureProps}>
@@ -305,6 +317,18 @@ const DisabledNotice = styled(({reason, ...p}: {reason: React.ReactNode}) => (
   font-size: 0.9em;
 `;
 
+const StatusWrapper = styled('div')`
+  margin-bottom: ${space(1)};
+  padding-left: ${space(2)};
+  line-height: 1.5em;
+`;
+
+const Status = p => (
+  <StatusWrapper>
+    <IntegrationStatus {...p} />
+  </StatusWrapper>
+);
+
 type InformationCardProps = {
   children: React.ReactNode;
   plugin: PluginNoProject;
diff --git a/src/sentry/static/sentry/app/views/organizationIntegrations/sentryAppDetailedView.tsx b/src/sentry/static/sentry/app/views/organizationIntegrations/sentryAppDetailedView.tsx
index 3f4e5c99ae..b965ca2134 100644
--- a/src/sentry/static/sentry/app/views/organizationIntegrations/sentryAppDetailedView.tsx
+++ b/src/sentry/static/sentry/app/views/organizationIntegrations/sentryAppDetailedView.tsx
@@ -1,6 +1,7 @@
 import React from 'react';
 import styled from '@emotion/styled';
 import {RouteComponentProps} from 'react-router/lib/Router';
+import capitalize from 'lodash/capitalize';
 
 import {addErrorMessage, addSuccessMessage} from 'app/actionCreators/indicator';
 import Access from 'app/components/acl/access';
@@ -30,6 +31,8 @@ import {getIntegrationFeatureGate} from 'app/utils/integrationUtil';
 import SplitInstallationIdModal from 'app/views/organizationIntegrations/SplitInstallationIdModal';
 import {openModal} from 'app/actionCreators/modal';
 import {UninstallButton} from '../settings/organizationDeveloperSettings/sentryApplicationRow/installButtons';
+import IntegrationStatus from './integrationStatus';
+import {NOT_INSTALLED} from './constants';
 
 type State = {
   sentryApp: SentryApp;
@@ -82,6 +85,11 @@ class SentryAppDetailedView extends AsyncComponent<
     return toPermissions(this.state.sentryApp.scopes);
   }
 
+  get installationStatus() {
+    const install = this.isInstalled();
+    return (install && capitalize(install.status)) || NOT_INSTALLED;
+  }
+
   isInstalled = () => {
     return this.state.appInstalls.find(i => i.app.slug === this.state.sentryApp.slug);
   };
@@ -207,7 +215,10 @@ class SentryAppDetailedView extends AsyncComponent<
           <Flex>
             <PluginIcon pluginId={sentryApp.slug} size={50} />
             <NameContainer>
-              <Name>{sentryApp.name}</Name>
+              <Flex>
+                <Name>{sentryApp.name}</Name>
+                <Status status={this.installationStatus} />
+              </Flex>
               <Flex>{features.length && this.featureTags(features)}</Flex>
             </NameContainer>
             <IntegrationFeatures {...featureProps}>
@@ -345,4 +356,16 @@ const Indicator = styled(p => <CircleIndicator size={7} {...p} />)`
   color: ${p => p.theme.success};
 `;
 
+const StatusWrapper = styled('div')`
+  margin-bottom: ${space(1)};
+  padding-left: ${space(2)};
+  line-height: 1.5em;
+`;
+
+const Status = p => (
+  <StatusWrapper>
+    <IntegrationStatus {...p} />
+  </StatusWrapper>
+);
+
 export default withOrganization(SentryAppDetailedView);
