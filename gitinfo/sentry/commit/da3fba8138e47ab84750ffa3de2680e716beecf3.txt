commit da3fba8138e47ab84750ffa3de2680e716beecf3
Author: Armin Ronacher <armin.ronacher@active-4.com>
Date:   Tue Mar 1 00:13:37 2016 +0100

    Added privilege check for ROOT_KEY

diff --git a/src/sentry/api/permissions.py b/src/sentry/api/permissions.py
index 6a6c985950..b05983e1b5 100644
--- a/src/sentry/api/permissions.py
+++ b/src/sentry/api/permissions.py
@@ -3,6 +3,7 @@ from __future__ import absolute_import
 from rest_framework import permissions
 
 from sentry.models.apikey import ROOT_KEY
+from sentry.auth.utils import is_privileged_request
 
 
 class NoPermission(permissions.BasePermission):
@@ -51,4 +52,5 @@ class SuperuserPermission(permissions.BasePermission):
 
 class SystemPermission(permissions.BasePermission):
     def has_permission(self, request, view):
-        return request.auth is ROOT_KEY
+        return request.auth is ROOT_KEY and \
+            is_privileged_request(request)
diff --git a/src/sentry/auth/utils.py b/src/sentry/auth/utils.py
index 73b83afa50..0384939507 100644
--- a/src/sentry/auth/utils.py
+++ b/src/sentry/auth/utils.py
@@ -3,6 +3,21 @@ from __future__ import absolute_import
 from django.conf import settings
 
 
+def is_internal_ip(request):
+    if not settings.INTERNAL_IPS:
+        return False
+    ip = request.META['REMOTE_ADDR']
+    if not any(ip in addr for addr in settings.INTERNAL_IPS):
+        return False
+    return True
+
+
+def is_privileged_request(request):
+    if settings.INTERNAL_IPS:
+        return is_internal_ip(request)
+    return True
+
+
 def is_active_superuser(request):
     user = getattr(request, 'user', None)
     if not user:
