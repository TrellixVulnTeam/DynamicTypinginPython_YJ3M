commit b0bda044b13af92545ad8c0c9cc2e0fb9db6d4ae
Author: David Cramer <dcramer@gmail.com>
Date:   Fri Oct 16 14:39:22 2015 -0700

    Some basic loading/error handling on all team list

diff --git a/src/sentry/static/sentry/app/views/organizationTeams/allTeamsList.jsx b/src/sentry/static/sentry/app/views/organizationTeams/allTeamsList.jsx
new file mode 100644
index 0000000000..7e08b67a80
--- /dev/null
+++ b/src/sentry/static/sentry/app/views/organizationTeams/allTeamsList.jsx
@@ -0,0 +1,36 @@
+import React from "react";
+
+import ConfigStore from "../../stores/configStore";
+import PropTypes from "../../proptypes";
+
+import AllTeamsRow from "./allTeamsRow";
+
+var AllTeamsList = React.createClass({
+  propTypes: {
+    organization: PropTypes.Organization.isRequired,
+    teamList: React.PropTypes.arrayOf(PropTypes.Team).isRequired,
+    openMembership: React.PropTypes.bool
+  },
+
+  render() {
+    var {organization, openMembership} = this.props;
+    var urlPrefix = ConfigStore.get('urlPrefix') + '/organizations/' + organization.slug;
+
+    var teamNodes = this.props.teamList.map((team, teamIdx) => {
+      return <AllTeamsRow team={team} organization={organization} openMembership={openMembership} />;
+    });
+
+    if (teamNodes.length !== 0) {
+      return (
+        <table className="table">
+          {teamNodes}
+        </table>
+      );
+    }
+    return (
+      <p>You dont have any teams for this organization yet. Get started by <a href={urlPrefix + '/teams/new/'}>creating your first team</a>.</p>
+    );
+  }
+});
+
+export default AllTeamsList;
diff --git a/src/sentry/static/sentry/app/views/organizationTeams/allTeamsRow.jsx b/src/sentry/static/sentry/app/views/organizationTeams/allTeamsRow.jsx
new file mode 100644
index 0000000000..2b1c2a8690
--- /dev/null
+++ b/src/sentry/static/sentry/app/views/organizationTeams/allTeamsRow.jsx
@@ -0,0 +1,96 @@
+import React from "react";
+
+import api from "../../api";
+import AlertActions from "../../actions/alertActions";
+
+// TODO(dcramer): this isnt great UX
+const ERR_JOIN = 'There was an error while trying to join the team.';
+const ERR_LEAVE = 'There was an error while trying to leave the team.';
+
+var AllTeamsRow = React.createClass({
+  getInitialState() {
+    return {
+      loading: false,
+      error: false
+    };
+  },
+
+  joinTeam() {
+    this.setState({
+      loading: true
+    });
+
+    api.joinTeam({
+      orgId: this.props.organization.slug,
+      teamId: this.props.team.slug
+    }, {
+      success: () => {
+        this.setState({
+          loading: false,
+          error: false
+        });
+      },
+      error: () => {
+        this.setState({
+          loading: false,
+          error: true
+        });
+        AlertActions.addAlert(ERR_JOIN, 'error');
+      }
+    });
+  },
+
+  leaveTeam() {
+    this.setState({
+      loading: true
+    });
+
+    api.leaveTeam({
+      orgId: this.props.organization.slug,
+      teamId: this.props.team.slug
+    }, {
+      success: () => {
+        this.setState({
+          loading: false,
+          error: false
+        });
+      },
+      error: () => {
+        this.setState({
+          loading: false,
+          error: true
+        });
+        AlertActions.addAlert(ERR_LEAVE, 'error');
+      }
+    });
+  },
+
+  render() {
+    let {team, openMembership} = this.props;
+    return (
+     <tr key={team.slug}>
+        <td>
+          <h5>{team.name}</h5>
+        </td>
+        <td className="actions align-right">
+          {this.state.loading ?
+            <a className="btn btn-default btn-sm btn-loading btn-disabled">...</a>
+          : (team.isMember ?
+            <a className="leave-team btn btn-default btn-sm"
+               onClick={this.leaveTeam}>Leave Team</a>
+          : (team.isPending ?
+            <a className="join-team btn btn-default btn-sm">Request Pending</a>
+          : (openMembership ?
+            <a className="join-team btn btn-default btn-sm"
+               onClick={this.joinTeam}>Join Team</a>
+          :
+            <a className="join-team btn btn-default btn-sm"
+               onClick={this.joinTeam}>Request Access</a>
+          )))}
+        </td>
+      </tr>
+    );
+  }
+});
+
+export default AllTeamsRow;
diff --git a/src/sentry/static/sentry/app/views/organizationTeams/index.jsx b/src/sentry/static/sentry/app/views/organizationTeams/index.jsx
index c2cf4d4ddb..7935b4dd49 100644
--- a/src/sentry/static/sentry/app/views/organizationTeams/index.jsx
+++ b/src/sentry/static/sentry/app/views/organizationTeams/index.jsx
@@ -10,7 +10,7 @@ import TooltipMixin from "../../mixins/tooltip";
 import {sortArray} from "../../utils";
 
 import ExpandedTeamList from "./expandedTeamList";
-import SlimTeamList from "./slimTeamList";
+import AllTeamsList from "./allTeamsList";
 import OrganizationStatOverview from "./organizationStatOverview";
 
 var OrganizationTeams = React.createClass({
@@ -134,7 +134,7 @@ var OrganizationTeams = React.createClass({
                     hasTeams={allTeams.length !== 0}
                     showAllTeams={this.toggleTeams.bind(this, "all-teams")} />
               :
-                <SlimTeamList
+                <AllTeamsList
                   organization={org} teamList={allTeams}
                   openMembership={features.has('open-membership') || access.has('org:write')} />
               }
diff --git a/src/sentry/static/sentry/app/views/organizationTeams/slimTeamList.jsx b/src/sentry/static/sentry/app/views/organizationTeams/slimTeamList.jsx
deleted file mode 100644
index a2d8e2e7b6..0000000000
--- a/src/sentry/static/sentry/app/views/organizationTeams/slimTeamList.jsx
+++ /dev/null
@@ -1,71 +0,0 @@
-import React from "react";
-
-import api from "../../api";
-import ConfigStore from "../../stores/configStore";
-import PropTypes from "../../proptypes";
-
-var SlimTeamList = React.createClass({
-  propTypes: {
-    organization: PropTypes.Organization.isRequired,
-    teamList: React.PropTypes.arrayOf(PropTypes.Team).isRequired,
-    openMembership: React.PropTypes.bool
-  },
-
-  joinTeam(team) {
-    // TODO(dcramer): handle 'requested' case and loading indicator
-    api.joinTeam({
-      orgId: this.props.organization.slug,
-      teamId: team.slug
-    });
-  },
-
-  leaveTeam(team) {
-    // TODO(dcramer): handle loading indicator
-    api.leaveTeam({
-      orgId: this.props.organization.slug,
-      teamId: team.slug
-    });
-  },
-
-  render() {
-    var org = this.props.organization;
-    var urlPrefix = ConfigStore.get('urlPrefix') + '/organizations/' + org.slug;
-
-    var teamNodes = this.props.teamList.map((team, teamIdx) => {
-      return (
-        <tr key={team.slug}>
-          <td>
-            <h5>{team.name}</h5>
-          </td>
-          <td className="actions align-right">
-            {team.isMember ?
-              <a className="leave-team btn btn-default btn-sm"
-                 onClick={this.leaveTeam.bind(this, team)}>Leave Team</a>
-            : (team.isPending ?
-              <a className="join-team btn btn-default btn-sm">Request Pending</a>
-            : (this.props.openMembership ?
-              <a className="join-team btn btn-default btn-sm"
-                 onClick={this.joinTeam.bind(this, team)}>Join Team</a>
-            :
-              <a className="join-team btn btn-default btn-sm"
-                 onClick={this.joinTeam.bind(this, team)}>Request Access</a>
-            ))}
-          </td>
-        </tr>
-      );
-    });
-
-    if (teamNodes.length !== 0) {
-      return (
-        <table className="table">
-          {teamNodes}
-        </table>
-      );
-    }
-    return (
-      <p>You dont have any teams for this organization yet. Get started by <a href={urlPrefix + '/teams/new/'}>creating your first team</a>.</p>
-    );
-  }
-});
-
-export default SlimTeamList;
