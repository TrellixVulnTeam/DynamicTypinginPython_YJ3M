commit 2fb04b5429785ecf937691c9b91f377b2a1e0d0b
Author: Matte Noble <me@mattenoble.com>
Date:   Mon Feb 25 16:02:29 2019 -0800

    fix(app-platform): Include `code` in redirect (#12162)
    
    Previous changes removed `code` (the ApiGrant code) from ever being
    included in the Redirect and the Installation Webhook. This change fixes
    that in two parts:
    
    First, when a Grant Code is exchanged for an Access Token, we delete the
    ApiGrant.
    
    Second, we use the fact that a SentryAppInstallation has NO ApiGrant
    associated with it to mean it was already exchanged and therefor no
    longer an attribute we need to serialize.
    
    The outcome is that `code` will be included in all requests (webhook and
    redirect), but only when it's valid.

diff --git a/src/sentry/api/serializers/models/sentry_app_installation.py b/src/sentry/api/serializers/models/sentry_app_installation.py
index 17e0794e0a..b26c911698 100644
--- a/src/sentry/api/serializers/models/sentry_app_installation.py
+++ b/src/sentry/api/serializers/models/sentry_app_installation.py
@@ -19,7 +19,7 @@ class SentryAppInstallationSerializer(Serializer):
             'uuid': install.uuid,
         }
 
-        if 'code' in attrs:
-            data['code'] = attrs['code']
+        if install.api_grant:
+            data['code'] = install.api_grant.code
 
         return data
diff --git a/src/sentry/mediators/sentry_app_installations/installation_notifier.py b/src/sentry/mediators/sentry_app_installations/installation_notifier.py
index 259e0e310a..799ee8ebef 100644
--- a/src/sentry/mediators/sentry_app_installations/installation_notifier.py
+++ b/src/sentry/mediators/sentry_app_installations/installation_notifier.py
@@ -36,7 +36,7 @@ class InstallationNotifier(Mediator):
     def request(self):
         attrs = {}
 
-        if self.install.is_new and self.api_grant:
+        if self.action == 'created' and self.api_grant:
             attrs['code'] = self.api_grant.code
 
         data = SentryAppInstallationSerializer().serialize(
diff --git a/src/sentry/mediators/token_exchange/grant_exchanger.py b/src/sentry/mediators/token_exchange/grant_exchanger.py
index 0bd3c61c09..bb3532c857 100644
--- a/src/sentry/mediators/token_exchange/grant_exchanger.py
+++ b/src/sentry/mediators/token_exchange/grant_exchanger.py
@@ -25,6 +25,10 @@ class GrantExchanger(Mediator):
     def call(self):
         self._validate()
 
+        # Once it's exchanged it's no longer valid and should not be
+        # exchangable, so we delete it.
+        self._delete_grant()
+
         return ApiToken.objects.create(
             user=self.user,
             application=self.application,
@@ -57,6 +61,9 @@ class GrantExchanger(Mediator):
     def _grant_is_active(self):
         return self.grant.expires_at > datetime.now(pytz.UTC)
 
+    def _delete_grant(self):
+        self.grant.delete()
+
     @memoize
     def grant(self):
         try:
diff --git a/tests/sentry/api/endpoints/test_organization_sentry_app_installation_details.py b/tests/sentry/api/endpoints/test_organization_sentry_app_installation_details.py
index dfd475d80f..595cee26f3 100644
--- a/tests/sentry/api/endpoints/test_organization_sentry_app_installation_details.py
+++ b/tests/sentry/api/endpoints/test_organization_sentry_app_installation_details.py
@@ -58,6 +58,7 @@ class GetSentryAppInstallationDetailsTest(SentryAppInstallationDetailsTest):
                 'slug': self.org.slug,
             },
             'uuid': self.installation2.uuid,
+            'code': self.installation2.api_grant.code,
         }
 
     @with_feature('organizations:sentry-apps')
diff --git a/tests/sentry/api/endpoints/test_organization_sentry_app_installations.py b/tests/sentry/api/endpoints/test_organization_sentry_app_installations.py
index 57639a6d9c..f86b337ccd 100644
--- a/tests/sentry/api/endpoints/test_organization_sentry_app_installations.py
+++ b/tests/sentry/api/endpoints/test_organization_sentry_app_installations.py
@@ -59,6 +59,7 @@ class GetSentryAppInstallationsTest(SentryAppInstallationsTest):
                 'slug': self.org.slug,
             },
             'uuid': self.installation2.uuid,
+            'code': self.installation2.api_grant.code,
         }]
 
         url = reverse(
@@ -78,6 +79,7 @@ class GetSentryAppInstallationsTest(SentryAppInstallationsTest):
                 'slug': self.super_org.slug,
             },
             'uuid': self.installation.uuid,
+            'code': self.installation.api_grant.code,
         }]
 
     @with_feature('organizations:sentry-apps')
@@ -95,6 +97,7 @@ class GetSentryAppInstallationsTest(SentryAppInstallationsTest):
                 'slug': self.org.slug,
             },
             'uuid': self.installation2.uuid,
+            'code': self.installation2.api_grant.code,
         }]
 
         # Org the User is not a part of
diff --git a/tests/sentry/mediators/sentry_app_installations/test_creator.py b/tests/sentry/mediators/sentry_app_installations/test_creator.py
index 867d7d6447..a99bbce66d 100644
--- a/tests/sentry/mediators/sentry_app_installations/test_creator.py
+++ b/tests/sentry/mediators/sentry_app_installations/test_creator.py
@@ -71,11 +71,12 @@ class TestCreator(TestCase):
         assert not ServiceHookProject.objects.all()
 
     @responses.activate
-    @patch('sentry.tasks.sentry_apps.installation_webhook.delay')
-    def test_notifies_service(self, installation_webhook):
-        responses.add(responses.POST, 'https://example.com/webhook')
-        install = self.creator.call()
-        installation_webhook.assert_called_once_with(install.id, self.user.id)
+    @patch('sentry.mediators.sentry_app_installations.InstallationNotifier.run')
+    def test_notifies_service(self, run):
+        with self.tasks():
+            responses.add(responses.POST, 'https://example.com/webhook')
+            install = self.creator.call()
+            run.assert_called_once_with(install=install, user=self.user, action='created')
 
     @responses.activate
     def test_associations(self):
diff --git a/tests/sentry/mediators/token_exchange/test_grant_exchanger.py b/tests/sentry/mediators/token_exchange/test_grant_exchanger.py
index d1510ee552..9907d70243 100644
--- a/tests/sentry/mediators/token_exchange/test_grant_exchanger.py
+++ b/tests/sentry/mediators/token_exchange/test_grant_exchanger.py
@@ -4,7 +4,7 @@ from mock import patch
 from datetime import datetime, timedelta
 
 from sentry.coreapi import APIUnauthorized
-from sentry.models import ApiApplication, SentryApp
+from sentry.models import ApiApplication, SentryApp, ApiGrant
 from sentry.mediators.token_exchange import GrantExchanger
 from sentry.testutils import TestCase
 
@@ -70,3 +70,8 @@ class TestGrantExchanger(TestCase):
     def test_sentry_app_must_exist(self, _):
         with self.assertRaises(APIUnauthorized):
             self.grant_exchanger.call()
+
+    def test_deletes_grant_on_successful_exchange(self):
+        grant_id = self.install.api_grant_id
+        self.grant_exchanger.call()
+        assert not ApiGrant.objects.filter(id=grant_id)
