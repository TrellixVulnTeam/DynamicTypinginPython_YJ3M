commit ac130d6bdfa7dff91dd6ce4670699c490714a0a2
Author: David Cramer <dcramer@gmail.com>
Date:   Tue Mar 18 01:30:38 2014 -0700

    Dont require password validation on forms

diff --git a/src/sentry/web/forms/accounts.py b/src/sentry/web/forms/accounts.py
index a1f96cf813..ce5a312f98 100644
--- a/src/sentry/web/forms/accounts.py
+++ b/src/sentry/web/forms/accounts.py
@@ -11,7 +11,6 @@ import pytz
 from datetime import datetime
 
 from django import forms
-from django.contrib.auth import authenticate
 from django.contrib.auth.forms import AuthenticationForm as AuthenticationForm_
 from django.utils.translation import ugettext_lazy as _
 
@@ -130,7 +129,6 @@ class NotificationSettingsForm(forms.Form):
 
 
 class AccountSettingsForm(forms.Form):
-    old_password = forms.CharField(label=_('Current password'), widget=forms.PasswordInput)
     username = forms.CharField(label=_('Username'), max_length=128)
     email = forms.EmailField(label=_('Email'))
     first_name = forms.CharField(required=True, label=_('Name'), max_length=30)
@@ -154,15 +152,6 @@ class AccountSettingsForm(forms.Form):
             raise forms.ValidationError(_("That username is already in use."))
         return value
 
-    def clean_old_password(self):
-        """
-        Validates that the old_password field is correct.
-        """
-        old_password = self.cleaned_data["old_password"]
-        if not isinstance(authenticate(username=self.user.username, password=old_password), User):
-            raise forms.ValidationError(_("Your old password was entered incorrectly. Please enter it again."))
-        return old_password
-
     def save(self, commit=True):
         if self.cleaned_data.get('new_password'):
             self.user.set_password(self.cleaned_data['new_password'])
diff --git a/src/sentry/web/forms/projects.py b/src/sentry/web/forms/projects.py
index a66556cfec..f5eea99c41 100644
--- a/src/sentry/web/forms/projects.py
+++ b/src/sentry/web/forms/projects.py
@@ -7,11 +7,10 @@ sentry.web.forms.projects
 """
 from django import forms
 from django.conf import settings
-from django.contrib.auth import authenticate
 from django.utils.translation import ugettext_lazy as _
 
-from sentry.constants import EMPTY_PASSWORD_VALUES, TAG_LABELS
-from sentry.models import Project, ProjectOption, User
+from sentry.constants import TAG_LABELS
+from sentry.models import Project, ProjectOption
 from sentry.permissions import can_set_public_projects
 from sentry.web.forms.fields import (
     UserField, OriginsField, RangeField, get_team_choices)
@@ -82,25 +81,9 @@ class NewProjectAdminForm(NewProjectForm):
 
 
 class RemoveProjectForm(forms.Form):
-    password = forms.CharField(
-        label=_("Password"), widget=forms.PasswordInput,
-        help_text=_("Confirm your identity by entering your password."))
-
     def __init__(self, user, *args, **kwargs):
         super(RemoveProjectForm, self).__init__(*args, **kwargs)
         self.user = user
-        # HACK: don't require current password if they don't have one
-        if self.user.password in EMPTY_PASSWORD_VALUES:
-            del self.fields['password']
-
-    def clean_password(self):
-        """
-        Validates that the old_password field is correct.
-        """
-        password = self.cleaned_data["password"]
-        if not isinstance(authenticate(username=self.user.username, password=password), User):
-            raise forms.ValidationError(_("Your password was entered incorrectly. Please enter it again."))
-        return password
 
 
 class EditProjectForm(BaseProjectForm):
