commit 2b7913fea6e8e509f924c303d53b398434181d5f
Author: David Cramer <dcramer@gmail.com>
Date:   Tue Sep 6 10:07:15 2011 -0700

    Make the minute normalization configurable

diff --git a/sentry/conf/defaults.py b/sentry/conf/defaults.py
index 14a51a3eaa..7b35173ad3 100644
--- a/sentry/conf/defaults.py
+++ b/sentry/conf/defaults.py
@@ -96,6 +96,11 @@ MAIL_INCLUDE_LOGGERS = None
 # A list of loggers to exclude in emails.
 MAIL_EXCLUDE_LOGGERS = []
 
+# Normalize counts to the 5 minute marker. This value MUST be less than 60. A
+# value of 0 would store counts for every minute, and is the lowest level of
+# accuracy provided.
+MINUTE_NORMALIZATION = 5
+
 ## The following settings refer to the built-in webserver
 
 WEB_HOST = 'localhost'
diff --git a/sentry/utils/manager.py b/sentry/utils/manager.py
index 424c09f959..7dfffaba61 100644
--- a/sentry/utils/manager.py
+++ b/sentry/utils/manager.py
@@ -161,8 +161,12 @@ class SentryManager(models.Manager):
             if not settings.SAMPLE_DATA or group.times_seen % min(count_limit(group.times_seen), time_limit(silence)) == 0:
                 instance.save()
 
-            # rounded down to the nearest 5m interval
-            normalized_datetime = now.replace(second=0, microsecond=0, minute=(now.minute - (now.minute % 5)))
+            # rounded down to the nearest interval
+            if settings.MINUTE_NORMALIZATION:
+                minutes = (now.minute - (now.minute % settings.MINUTE_NORMALIZATION))
+            else:
+                minutes = now.minute
+            normalized_datetime = now.replace(second=0, microsecond=0, minute=minutes)
 
             affected = group.messagecountbyminute_set.filter(date=normalized_datetime).update(times_seen=F('times_seen') + 1)
             if not affected:
diff --git a/tests/tests.py b/tests/tests.py
index dde9d17eb4..9be229f073 100644
--- a/tests/tests.py
+++ b/tests/tests.py
@@ -841,6 +841,8 @@ class SentryTest(BaseTestCase):
         self.assertEquals(last.data['tuple'][-1], '(450 more elements)')
 
     def test_denormalized_counters(self):
+        settings.MINUTE_NORMALIZATION = 0
+        
         get_client().create_from_text('hi', timestamp=datetime.datetime.now() - datetime.timedelta(minutes=3))
 
         self.assertEquals(Message.objects.count(), 1)
