commit 1c4d146939d16b7a079ea6885948cb10d8470b0a
Author: Daniel Griesser <daniel.griesser.86@gmail.com>
Date:   Tue Dec 6 13:29:09 2016 +0100

    Add test for culprit string generation

diff --git a/src/sentry/interfaces/stacktrace.py b/src/sentry/interfaces/stacktrace.py
index c6e430d748..27631e3257 100644
--- a/src/sentry/interfaces/stacktrace.py
+++ b/src/sentry/interfaces/stacktrace.py
@@ -514,7 +514,7 @@ class Frame(Interface):
                     self.function or '?',
                     trim_package(self.package),
                 )
-            if self.filename and self.function:
+            if self.filename and self.function and self.in_app:
                 return '%s (%s)' % (
                     self.function,
                     self.filename
@@ -836,6 +836,6 @@ class Stacktrace(Interface):
                 cluprit = frame.get_culprit_string(platform=platform, strict=strict)
                 if cluprit:
                     return cluprit
-            elif default is None and not strict:
-                default = frame.get_culprit_string(platform=platform)
+            elif default is None and strict is False:
+                default = frame.get_culprit_string(platform=platform, strict=strict)
         return default
diff --git a/tests/sentry/interfaces/test_stacktrace.py b/tests/sentry/interfaces/test_stacktrace.py
index 98d34bd019..34177eb991 100644
--- a/tests/sentry/interfaces/test_stacktrace.py
+++ b/tests/sentry/interfaces/test_stacktrace.py
@@ -398,7 +398,37 @@ class StacktraceTest(TestCase):
                 'function': 'fooBar',
             }
         ]))
-        assert stacktrace.frames[0].in_app == False
+        assert stacktrace.frames[0].in_app is False
+
+    def test_cocoa_strict_stacktrace(self):
+        stacktrace = Stacktrace.to_python(dict(frames=[
+            {
+                'filename': 'foo/baz.c',
+                'package': '/foo/bar/libswiftCore.dylib',
+                'lineno': 1,
+                'in_app': True,
+                'function': 'fooBar',
+            },
+            {
+                'filename': 'foo/baz.c',
+                'package': '/foo/bar/libswiftCore.dylib',
+                'lineno': 1,
+                'in_app': False,
+                'function': 'fooBar',
+            },
+            {
+                'package': '/foo/bar/MyApp',
+                'in_app': True,
+                'function': 'fooBar2',
+            },
+            {
+                'filename': 'Mycontroller.swift',
+                'package': '/foo/bar/MyApp',
+                'in_app': True,
+                'function': 'fooBar3',
+            }
+        ]))
+        assert stacktrace.get_culprit_string(platform='cocoa') == 'fooBar3 (Mycontroller.swift)'
 
     def test_get_hash_does_not_group_different_js_errors(self):
         interface = Stacktrace.to_python({
