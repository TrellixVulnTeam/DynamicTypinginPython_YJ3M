commit 7922f0f95971ae01b9f7aa1e25eb9750050c3f5c
Author: David Cramer <dcramer@gmail.com>
Date:   Tue May 8 12:53:26 2012 -0500

    Correct handling of date filters in polling

diff --git a/sentry/static/scripts/global.js b/sentry/static/scripts/global.js
index f86f42ef98..5a15eccce6 100644
--- a/sentry/static/scripts/global.js
+++ b/sentry/static/scripts/global.js
@@ -7,19 +7,6 @@ function varToggle(link, id) {
     return false;
 }
 
-function getQueryParams()
-{
-    var vars = {}, hash;
-    var href = window.location.href;
-    var hashes = href.slice(href.indexOf('?') + 1, (href.indexOf('#') !== -1 ? href.indexOf('#') : href.length)).split('&');
-    for(var i = 0; i < hashes.length; i++)
-    {
-        hash = hashes[i].split('=');
-        vars[hash[0]] = hash[1];
-    }
-    return vars;
-}
-
 (function() {
   /**
    * @private
@@ -304,6 +291,18 @@ if (Sentry === undefined) {
       $el.toggle();
     };
 
+    Sentry.getQueryParams = function() {
+        var vars = {}, hash;
+        var href = window.location.href;
+        var hashes = href.slice(href.indexOf('?') + 1, (href.indexOf('#') !== -1 ? href.indexOf('#') : href.length)).split('&');
+        for(var i = 0; i < hashes.length; i++)
+        {
+            hash = hashes[i].split('=');
+            vars[hash[0]] = decodeURIComponent(hash[1]).replace(/\+/, ' ');
+        }
+        return vars;
+    };
+
     $(document).ready(function(){
         $('.filter-list').each(function(_, el){
             var $el = $(el);
@@ -530,7 +529,7 @@ if (Sentry === undefined) {
             setTimeout(Sentry.realtime.poll, 1000);
             return;
         }
-        data = getQueryParams();
+        data = Sentry.getQueryParams();
         data.view_id = Sentry.realtime.options.viewId || undefined;
         data.cursor = Sentry.realtime.cursor || undefined;
         $.ajax({
diff --git a/sentry/static/scripts/global.min.js b/sentry/static/scripts/global.min.js
index 727b294448..1c723f4fcf 100644
--- a/sentry/static/scripts/global.min.js
+++ b/sentry/static/scripts/global.min.js
@@ -1 +1 @@
-function varToggle(a,b){$("#v"+b).toggle();var c=a.getElementsByTagName("span")[0],d=String.fromCharCode(9654),e=String.fromCharCode(9660);return c.innerHTML=c.innerHTML==d?e:d,!1}function getQueryParams(){var a={},b,c=window.location.href,d=c.slice(c.indexOf("?")+1,c.indexOf("#")!==-1?c.indexOf("#"):c.length).split("&");for(var e=0;e<d.length;e++)b=d[e].split("="),a[b[0]]=b[1];return a}(function(){var a=function(a,b){return b.priority-a.priority},b=function(a,b){return a.priority-b.priority};Queue=function(c){var d=[],e=!1,f;c===undefined&&(c={}),c.low?f=a:c.high&&(f=b);var g=function(){d.sort(f),e=!0},h={pop:function(){!e&&f&&g();var a=d.pop();return a?a.object:undefined},top:function(){e||g();var a=d[d.length-1];return a?a.object:undefined},includes:function(a){for(var b=d.length-1;b>=0;b--)if(d[b].object===a)return!0;return!1},replace:function(a,b,c){for(var e=d.length-1;e>=0;e--)if(d[e].object[c]===a[c])return d[e]={object:a,priority:b},!0;return h.push(a,b),!1},size:function(){return d.length},empty:function(){return d.length===0},push:function(a,b){d.push({object:a,priority:b}),e=!1}};return h}})(),function(a,b){var c=a.parse,d=[1,4,5,6,7,10,11];a.parse=function(e){var f,g,h=0;if(g=/^(\d{4}|[+\-]\d{6})(?:-(\d{2})(?:-(\d{2}))?)?(?:T(\d{2}):(\d{2})(?::(\d{2})(?:\.(\d{3}))?)?(?:(Z)|([+\-])(\d{2})(?::(\d{2}))?)?)?$/.exec(e)){for(var i=0,j;j=d[i];++i)g[j]=+g[j]||0;g[2]=(+g[2]||1)-1,g[3]=+g[3]||1,g[8]!=="Z"&&g[9]!==b&&(h=g[10]*60+g[11],g[9]==="+"&&(h=0-h)),f=a.UTC(g[1],g[2],g[3],g[4],g[5]+h,g[6],g[7])}else f=c?c(e):NaN;return f}}(Date);if(Sentry===undefined)var Sentry={};(function(){Sentry.options={urlPrefix:"",mediaUrl:"/media/",defaultImage:"/media/images/sentry.png"},Sentry.config=function(a){$.each(a,function(a,b){Sentry.options[a]=b})},Sentry.prettyDate=function(a){var b=Date.parse(a),c=new Date,d=Date.UTC(c.getUTCFullYear(),c.getUTCMonth(),c.getUTCDate(),c.getUTCHours(),c.getUTCMinutes(),c.getUTCSeconds()),e=(d-b)/1e3,f="ago",g=[[60,"just now","just now"],[120,"1 minute ago","1 minute from now"],[3600,"minutes",60],[7200,"1 hour ago","1 hour from now"],[86400,"hours",3600],[172800,"yesterday","tomorrow"],[604800,"days",86400],[1209600,"last week","next week"],[2419200,"weeks",604800],[4838400,"last month","next month"],[29030400,"months",2419200],[58060800,"last year","next year"],[290304e4,"years",29030400],[580608e4,"last century","next century"],[580608e5,"centuries",290304e4]],h=1;e<0&&(e=Math.abs(e),f="from now",h=2);for(var i=0,j;j=g[i];i++)if(e<j[0])return typeof j[2]=="string"?j[h]:Math.floor(e/j[2])+" "+j[1]+" "+f;return b},Sentry.prettyDates=function(){$(".pretty-date").each(function(a,b){var c=$(b),d=c.attr("title");if(d){var e=Sentry.prettyDate(d);e&&c.text(e)}})},Sentry.toggle=function(a){var b=$(a);b.toggle()},$(document).ready(function(){$(".filter-list").each(function(a,b){var c=$(b);if(c.find("li").length>6){var d=$("<select></select>"),e=$('<div class="filter-select sidebar-module">').appendTo(c.parent());c.find("li a").each(function(a,b){b=$(b);var c=$('<option value="'+b.attr("href")+'">'+b.text()+"</option>").appendTo(d);b.parent().hasClass("active")&&c.attr("selected","selected")}),c.remove(),d.appendTo(e).change(function(){window.location.href=$(this).val()})}}),setInterval(Sentry.prettyDates,5e3),Sentry.prettyDates()}),$(document).ajaxSend(function(a,b,c){function d(a){var b=null;if(document.cookie&&document.cookie!==""){var c=document.cookie.split(";");for(var d=0;d<c.length;d++){var e=jQuery.trim(c[d]);if(e.substring(0,a.length+1)==a+"="){b=decodeURIComponent(e.substring(a.length+1));break}}}return b}function e(a){var b=document.location.host,c=document.location.protocol,d="//"+b,e=c+d;return a==e||a.slice(0,e.length+1)==e+"/"||a==d||a.slice(0,d.length+1)==d+"/"||!/^(\/\/|http:|https:).*/.test(a)}function f(a){return/^(GET|HEAD|OPTIONS|TRACE)$/.test(a)}!f(c.type)&&e(c.url)&&b.setRequestHeader("X-CSRFToken",d("csrftoken"))}),$(".popup").live("click",function(){var a=$(this),b=$(window),c=$(a.attr("data-container")),d=a.attr("data-title")||"Untitled",e=c.html(),f=Math.min(b.height()-100,c.height()+40),g=Math.min(b.width()-100,c.width()+40),h=window.open("about:blank","dsqApiExpand","toolbar=0,status=0,location=0,menubar=0,height="+f+",width="+g);h.document.write("<!DOCTYPE html><html><head><title>"+d+"</title>"+'<link href="'+Sentry.options.popupCss+'" rel="stylesheet" type="text/css"/>'+"</head><body>"+'<div id="popup">'+e+"</div></body>"+"</html>")})})();if(Sentry===undefined)var Sentry={};(function(){function a(a,b,c){for(var d=0,e;e=a[d];d++)if(b>e[c])return d;return-1}function b(a,b,c){for(var d=0,e;e=a[d];d++)if(b==e[c])return d;return-1}Sentry.realtime={},Sentry.realtime.options={viewId:null,projectId:null},Sentry.realtime.status=!1,Sentry.realtime.queue=Queue({high:!0}),Sentry.realtime.init=function(){var a=[];$("#event_list .event").each(function(b,c){var d=$(c);a.push([d.attr("data-score"),d.attr("id")])}),Sentry.realtime.events=a,$("#sentry-realtime").click(function(){Sentry.realtime.status?Sentry.realtime.disable():Sentry.realtime.enable()}),Sentry.realtime.poll(),setInterval(Sentry.realtime.tick,300)},Sentry.realtime.config=function(a){$.each(a,function(a,b){Sentry.realtime.options[a]=b})},Sentry.realtime.toggle=function(){Sentry.realtime.status?Sentry.realtime.enable():Sentry.realtime.disable()},Sentry.realtime.enable=function(){var a=$("#sentry-realtime");a.removeClass("realtime-play"),a.addClass("realtime-pause"),a.text("Pause Feed"),Sentry.realtime.status=!0},Sentry.realtime.disable=function(){var a=$("#sentry-realtime");a.addClass("realtime-play"),a.removeClass("realtime-pause"),a.text("Go Live"),Sentry.realtime.status=!1},Sentry.realtime.tick=function(){if(Sentry.realtime.queue.empty())return;var c=Sentry.realtime.queue.pop(),d="group_"+c.id,e=$("#"+d),f=e.length===0;$("#no_messages").remove(),Sentry.realtime.events.sort(function(a,b){return b[0]-a[0]});if(!f&&e.attr("data-count")==c.count)return;pos=a(Sentry.realtime.events,c.score,0),old_pos=b(Sentry.realtime.events,d,1);if(old_pos!==-1){Sentry.realtime.events[old_pos][0]=c.score;if(old_pos==pos)return;e.remove()}else f||e.remove();e=$(c.html),pos===-1?$("#event_list").append(e):$("#"+Sentry.realtime.events[pos][1]).before(e),f&&Sentry.realtime.events.splice(pos,0,[c.score,d]),e.css("background-color","#ddd").animate({backgroundColor:"#fff"},1200)},Sentry.realtime.poll=function(){if(!Sentry.realtime.status){setTimeout(Sentry.realtime.poll,1e3);return}data=getQueryParams(),data.view_id=Sentry.realtime.options.viewId||undefined,data.cursor=Sentry.realtime.cursor||undefined,$.ajax({url:Sentry.options.urlPrefix+"/api/"+Sentry.realtime.options.projectId+"/poll/",type:"get",dataType:"json",data:data,success:function(a){if(!a.length){setTimeout(Sentry.realtime.poll,5e3);return}Sentry.realtime.cursor=a[a.length-1].score||undefined,$(a).each(function(a,b){Sentry.realtime.queue.replace(b,b.score,"id")}),setTimeout(Sentry.realtime.poll,1e3)},error:function(){setTimeout(Sentry.realtime.poll,1e4)}});while(Sentry.realtime.events.length>50){var a=Sentry.realtime.events.pop();$("#"+a[1]).remove()}},$(document).ready(function(){Sentry.realtime.init()})})();if(Sentry===undefined)var Sentry={};(function(){Sentry.charts={},Sentry.charts.render=function(a,b,c,d){var e=$(a);if(e.length<1)return;$.ajax({url:Sentry.options.urlPrefix+"/api/"+b+"/chart/",type:"get",dataType:"json",data:{days:1,gid:c||undefined},success:function(a){var b=(new Date).getTime()-a.length*36e5,c=[];for(var f=0;f<a.length;f++)c.push([b+36e5*f,a[f]]);e.height(e.parent().height()),$.plot(e,[{data:c,color:"#3079d0",shadowSize:0,lines:{lineWidth:1,show:!0,fill:!0}}],{xaxis:{mode:"time"},grid:{show:d||!1,borderColor:"#dddddd",borderWidth:1,backgroundColor:"#F5F5F5"},lines:{show:!1}})}})}})();if(Sentry===undefined)var Sentry={};(function(){Sentry.notifications={},Sentry.notifications.status=!1,Sentry.notifications.enable=function(){window.webkitNotifications.requestPermission(function(){Sentry.notifications.status=!0,Sentry.notifications.show({type:"simple",title:"Sentry",body:"Notifications have been enabled."}),$("#sentry_notify").text("Disable Notifications")})},Sentry.notifications.disable=function(){Sentry.notifications.status=!1,$("#sentry_notify").text("Enable Notifications")},Sentry.notifications.show=function(a){if(!Sentry.notifications.status)return;var b;a.type=="html"?b=window.webkitNotifications.createHTMLNotification(a.url):b=window.webkitNotifications.createNotification(a.image||Sentry.options.defaultImage,a.title,a.body),b.ondisplay=function(){setTimeout(function(){b.cancel()},1e4)},b.show()},$(document).ready(function(){window.webkitNotifications&&(Sentry.notifications.status=window.webkitNotifications.checkPermission()>0,$('<li><a id="sentry_notify" href="javascript:void()">'+(Sentry.notifications.status?"Disable Notifications":"Enable Notifications")+"</a></li>").click(function(){Sentry.notifications.status?Sentry.notifications.disable():Sentry.notifications.enable()}).prependTo("#account"))})})();if(Sentry===undefined)var Sentry={};(function(){Sentry.stream={},Sentry.stream.clear=function(a){confirm("Are you sure you want to mark all your stream as resolved?")&&$.ajax({url:Sentry.options.urlPrefix+"/api/"+a+"/clear/",type:"post",dataType:"json",success:function(a){window.location.reload()}})},Sentry.stream.resolve=function(a,b,c){typeof c=="undefined"&&(c=!0),$.ajax({url:Sentry.options.urlPrefix+"/api/"+a+"/resolve/",type:"post",dataType:"json",data:{gid:b},success:function(a){for(var b=a.length-1,d,e;d=a[b];b--){var f=d[0],g=d[1];$("#group_"+f).remove(),c||($("#event_list").prepend(g.html),$("#group_"+f).addClass("fresh"))}}})},Sentry.stream.bookmark=function(a,b,c){$.ajax({url:Sentry.options.urlPrefix+"/api/"+a+"/bookmark/",type:"post",dataType:"json",data:{gid:b},success:function(a){if(!c)return;var b=$(c);a.bookmarked?b.addClass("checked"):b.removeClass("checked")}})}})();
\ No newline at end of file
+function varToggle(a,b){$("#v"+b).toggle();var c=a.getElementsByTagName("span")[0],d=String.fromCharCode(9654),e=String.fromCharCode(9660);return c.innerHTML=c.innerHTML==d?e:d,!1}(function(){var a=function(a,b){return b.priority-a.priority},b=function(a,b){return a.priority-b.priority};Queue=function(c){var d=[],e=!1,f;c===undefined&&(c={}),c.low?f=a:c.high&&(f=b);var g=function(){d.sort(f),e=!0},h={pop:function(){!e&&f&&g();var a=d.pop();return a?a.object:undefined},top:function(){e||g();var a=d[d.length-1];return a?a.object:undefined},includes:function(a){for(var b=d.length-1;b>=0;b--)if(d[b].object===a)return!0;return!1},replace:function(a,b,c){for(var e=d.length-1;e>=0;e--)if(d[e].object[c]===a[c])return d[e]={object:a,priority:b},!0;return h.push(a,b),!1},size:function(){return d.length},empty:function(){return d.length===0},push:function(a,b){d.push({object:a,priority:b}),e=!1}};return h}})(),function(a,b){var c=a.parse,d=[1,4,5,6,7,10,11];a.parse=function(e){var f,g,h=0;if(g=/^(\d{4}|[+\-]\d{6})(?:-(\d{2})(?:-(\d{2}))?)?(?:T(\d{2}):(\d{2})(?::(\d{2})(?:\.(\d{3}))?)?(?:(Z)|([+\-])(\d{2})(?::(\d{2}))?)?)?$/.exec(e)){for(var i=0,j;j=d[i];++i)g[j]=+g[j]||0;g[2]=(+g[2]||1)-1,g[3]=+g[3]||1,g[8]!=="Z"&&g[9]!==b&&(h=g[10]*60+g[11],g[9]==="+"&&(h=0-h)),f=a.UTC(g[1],g[2],g[3],g[4],g[5]+h,g[6],g[7])}else f=c?c(e):NaN;return f}}(Date);if(Sentry===undefined)var Sentry={};(function(){Sentry.options={urlPrefix:"",mediaUrl:"/media/",defaultImage:"/media/images/sentry.png"},Sentry.config=function(a){$.each(a,function(a,b){Sentry.options[a]=b})},Sentry.prettyDate=function(a){var b=Date.parse(a),c=new Date,d=Date.UTC(c.getUTCFullYear(),c.getUTCMonth(),c.getUTCDate(),c.getUTCHours(),c.getUTCMinutes(),c.getUTCSeconds()),e=(d-b)/1e3,f="ago",g=[[60,"just now","just now"],[120,"1 minute ago","1 minute from now"],[3600,"minutes",60],[7200,"1 hour ago","1 hour from now"],[86400,"hours",3600],[172800,"yesterday","tomorrow"],[604800,"days",86400],[1209600,"last week","next week"],[2419200,"weeks",604800],[4838400,"last month","next month"],[29030400,"months",2419200],[58060800,"last year","next year"],[290304e4,"years",29030400],[580608e4,"last century","next century"],[580608e5,"centuries",290304e4]],h=1;e<0&&(e=Math.abs(e),f="from now",h=2);for(var i=0,j;j=g[i];i++)if(e<j[0])return typeof j[2]=="string"?j[h]:Math.floor(e/j[2])+" "+j[1]+" "+f;return b},Sentry.prettyDates=function(){$(".pretty-date").each(function(a,b){var c=$(b),d=c.attr("title");if(d){var e=Sentry.prettyDate(d);e&&c.text(e)}})},Sentry.toggle=function(a){var b=$(a);b.toggle()},Sentry.getQueryParams=function(){var a={},b,c=window.location.href,d=c.slice(c.indexOf("?")+1,c.indexOf("#")!==-1?c.indexOf("#"):c.length).split("&");for(var e=0;e<d.length;e++)b=d[e].split("="),a[b[0]]=decodeURIComponent(b[1]).replace(/\+/," ");return a},$(document).ready(function(){$(".filter-list").each(function(a,b){var c=$(b);if(c.find("li").length>6){var d=$("<select></select>"),e=$('<div class="filter-select sidebar-module">').appendTo(c.parent());c.find("li a").each(function(a,b){b=$(b);var c=$('<option value="'+b.attr("href")+'">'+b.text()+"</option>").appendTo(d);b.parent().hasClass("active")&&c.attr("selected","selected")}),c.remove(),d.appendTo(e).change(function(){window.location.href=$(this).val()})}}),setInterval(Sentry.prettyDates,5e3),Sentry.prettyDates()}),$(document).ajaxSend(function(a,b,c){function d(a){var b=null;if(document.cookie&&document.cookie!==""){var c=document.cookie.split(";");for(var d=0;d<c.length;d++){var e=jQuery.trim(c[d]);if(e.substring(0,a.length+1)==a+"="){b=decodeURIComponent(e.substring(a.length+1));break}}}return b}function e(a){var b=document.location.host,c=document.location.protocol,d="//"+b,e=c+d;return a==e||a.slice(0,e.length+1)==e+"/"||a==d||a.slice(0,d.length+1)==d+"/"||!/^(\/\/|http:|https:).*/.test(a)}function f(a){return/^(GET|HEAD|OPTIONS|TRACE)$/.test(a)}!f(c.type)&&e(c.url)&&b.setRequestHeader("X-CSRFToken",d("csrftoken"))}),$(".popup").live("click",function(){var a=$(this),b=$(window),c=$(a.attr("data-container")),d=a.attr("data-title")||"Untitled",e=c.html(),f=Math.min(b.height()-100,c.height()+40),g=Math.min(b.width()-100,c.width()+40),h=window.open("about:blank","dsqApiExpand","toolbar=0,status=0,location=0,menubar=0,height="+f+",width="+g);h.document.write("<!DOCTYPE html><html><head><title>"+d+"</title>"+'<link href="'+Sentry.options.popupCss+'" rel="stylesheet" type="text/css"/>'+"</head><body>"+'<div id="popup">'+e+"</div></body>"+"</html>")})})();if(Sentry===undefined)var Sentry={};(function(){function a(a,b,c){for(var d=0,e;e=a[d];d++)if(b>e[c])return d;return-1}function b(a,b,c){for(var d=0,e;e=a[d];d++)if(b==e[c])return d;return-1}Sentry.realtime={},Sentry.realtime.options={viewId:null,projectId:null},Sentry.realtime.status=!1,Sentry.realtime.queue=Queue({high:!0}),Sentry.realtime.init=function(){var a=[];$("#event_list .event").each(function(b,c){var d=$(c);a.push([d.attr("data-score"),d.attr("id")])}),Sentry.realtime.events=a,$("#sentry-realtime").click(function(){Sentry.realtime.status?Sentry.realtime.disable():Sentry.realtime.enable()}),Sentry.realtime.poll(),setInterval(Sentry.realtime.tick,300)},Sentry.realtime.config=function(a){$.each(a,function(a,b){Sentry.realtime.options[a]=b})},Sentry.realtime.toggle=function(){Sentry.realtime.status?Sentry.realtime.enable():Sentry.realtime.disable()},Sentry.realtime.enable=function(){var a=$("#sentry-realtime");a.removeClass("realtime-play"),a.addClass("realtime-pause"),a.text("Pause Feed"),Sentry.realtime.status=!0},Sentry.realtime.disable=function(){var a=$("#sentry-realtime");a.addClass("realtime-play"),a.removeClass("realtime-pause"),a.text("Go Live"),Sentry.realtime.status=!1},Sentry.realtime.tick=function(){if(Sentry.realtime.queue.empty())return;var c=Sentry.realtime.queue.pop(),d="group_"+c.id,e=$("#"+d),f=e.length===0;$("#no_messages").remove(),Sentry.realtime.events.sort(function(a,b){return b[0]-a[0]});if(!f&&e.attr("data-count")==c.count)return;pos=a(Sentry.realtime.events,c.score,0),old_pos=b(Sentry.realtime.events,d,1);if(old_pos!==-1){Sentry.realtime.events[old_pos][0]=c.score;if(old_pos==pos)return;e.remove()}else f||e.remove();e=$(c.html),pos===-1?$("#event_list").append(e):$("#"+Sentry.realtime.events[pos][1]).before(e),f&&Sentry.realtime.events.splice(pos,0,[c.score,d]),e.css("background-color","#ddd").animate({backgroundColor:"#fff"},1200)},Sentry.realtime.poll=function(){if(!Sentry.realtime.status){setTimeout(Sentry.realtime.poll,1e3);return}data=Sentry.getQueryParams(),data.view_id=Sentry.realtime.options.viewId||undefined,data.cursor=Sentry.realtime.cursor||undefined,$.ajax({url:Sentry.options.urlPrefix+"/api/"+Sentry.realtime.options.projectId+"/poll/",type:"get",dataType:"json",data:data,success:function(a){if(!a.length){setTimeout(Sentry.realtime.poll,5e3);return}Sentry.realtime.cursor=a[a.length-1].score||undefined,$(a).each(function(a,b){Sentry.realtime.queue.replace(b,b.score,"id")}),setTimeout(Sentry.realtime.poll,1e3)},error:function(){setTimeout(Sentry.realtime.poll,1e4)}});while(Sentry.realtime.events.length>50){var a=Sentry.realtime.events.pop();$("#"+a[1]).remove()}},$(document).ready(function(){Sentry.realtime.init()})})();if(Sentry===undefined)var Sentry={};(function(){Sentry.charts={},Sentry.charts.render=function(a,b,c,d){var e=$(a);if(e.length<1)return;$.ajax({url:Sentry.options.urlPrefix+"/api/"+b+"/chart/",type:"get",dataType:"json",data:{days:1,gid:c||undefined},success:function(a){var b=(new Date).getTime()-a.length*36e5,c=[];for(var f=0;f<a.length;f++)c.push([b+36e5*f,a[f]]);e.height(e.parent().height()),$.plot(e,[{data:c,color:"#3079d0",shadowSize:0,lines:{lineWidth:1,show:!0,fill:!0}}],{xaxis:{mode:"time"},grid:{show:d||!1,borderColor:"#dddddd",borderWidth:1,backgroundColor:"#F5F5F5"},lines:{show:!1}})}})}})();if(Sentry===undefined)var Sentry={};(function(){Sentry.notifications={},Sentry.notifications.status=!1,Sentry.notifications.enable=function(){window.webkitNotifications.requestPermission(function(){Sentry.notifications.status=!0,Sentry.notifications.show({type:"simple",title:"Sentry",body:"Notifications have been enabled."}),$("#sentry_notify").text("Disable Notifications")})},Sentry.notifications.disable=function(){Sentry.notifications.status=!1,$("#sentry_notify").text("Enable Notifications")},Sentry.notifications.show=function(a){if(!Sentry.notifications.status)return;var b;a.type=="html"?b=window.webkitNotifications.createHTMLNotification(a.url):b=window.webkitNotifications.createNotification(a.image||Sentry.options.defaultImage,a.title,a.body),b.ondisplay=function(){setTimeout(function(){b.cancel()},1e4)},b.show()},$(document).ready(function(){window.webkitNotifications&&(Sentry.notifications.status=window.webkitNotifications.checkPermission()>0,$('<li><a id="sentry_notify" href="javascript:void()">'+(Sentry.notifications.status?"Disable Notifications":"Enable Notifications")+"</a></li>").click(function(){Sentry.notifications.status?Sentry.notifications.disable():Sentry.notifications.enable()}).prependTo("#account"))})})();if(Sentry===undefined)var Sentry={};(function(){Sentry.stream={},Sentry.stream.clear=function(a){confirm("Are you sure you want to mark all your stream as resolved?")&&$.ajax({url:Sentry.options.urlPrefix+"/api/"+a+"/clear/",type:"post",dataType:"json",success:function(a){window.location.reload()}})},Sentry.stream.resolve=function(a,b,c){typeof c=="undefined"&&(c=!0),$.ajax({url:Sentry.options.urlPrefix+"/api/"+a+"/resolve/",type:"post",dataType:"json",data:{gid:b},success:function(a){for(var b=a.length-1,d,e;d=a[b];b--){var f=d[0],g=d[1];$("#group_"+f).remove(),c||($("#event_list").prepend(g.html),$("#group_"+f).addClass("fresh"))}}})},Sentry.stream.bookmark=function(a,b,c){$.ajax({url:Sentry.options.urlPrefix+"/api/"+a+"/bookmark/",type:"post",dataType:"json",data:{gid:b},success:function(a){if(!c)return;var b=$(c);a.bookmarked?b.addClass("checked"):b.removeClass("checked")}})}})();
\ No newline at end of file
diff --git a/sentry/static/scripts/sentry.core.js b/sentry/static/scripts/sentry.core.js
index 21316c1f59..f820ba776b 100644
--- a/sentry/static/scripts/sentry.core.js
+++ b/sentry/static/scripts/sentry.core.js
@@ -7,19 +7,6 @@ function varToggle(link, id) {
     return false;
 }
 
-function getQueryParams()
-{
-    var vars = {}, hash;
-    var href = window.location.href;
-    var hashes = href.slice(href.indexOf('?') + 1, (href.indexOf('#') !== -1 ? href.indexOf('#') : href.length)).split('&');
-    for(var i = 0; i < hashes.length; i++)
-    {
-        hash = hashes[i].split('=');
-        vars[hash[0]] = hash[1];
-    }
-    return vars;
-}
-
 (function() {
   /**
    * @private
@@ -304,6 +291,18 @@ if (Sentry === undefined) {
       $el.toggle();
     };
 
+    Sentry.getQueryParams = function() {
+        var vars = {}, hash;
+        var href = window.location.href;
+        var hashes = href.slice(href.indexOf('?') + 1, (href.indexOf('#') !== -1 ? href.indexOf('#') : href.length)).split('&');
+        for(var i = 0; i < hashes.length; i++)
+        {
+            hash = hashes[i].split('=');
+            vars[hash[0]] = decodeURIComponent(hash[1]).replace(/\+/, ' ');
+        }
+        return vars;
+    };
+
     $(document).ready(function(){
         $('.filter-list').each(function(_, el){
             var $el = $(el);
diff --git a/sentry/static/scripts/sentry.realtime.js b/sentry/static/scripts/sentry.realtime.js
index 3b692f92c4..3712434f5c 100644
--- a/sentry/static/scripts/sentry.realtime.js
+++ b/sentry/static/scripts/sentry.realtime.js
@@ -141,7 +141,7 @@ if (Sentry === undefined) {
             setTimeout(Sentry.realtime.poll, 1000);
             return;
         }
-        data = getQueryParams();
+        data = Sentry.getQueryParams();
         data.view_id = Sentry.realtime.options.viewId || undefined;
         data.cursor = Sentry.realtime.cursor || undefined;
         $.ajax({
diff --git a/sentry/web/api.py b/sentry/web/api.py
index 35b91647a5..2abffa775c 100644
--- a/sentry/web/api.py
+++ b/sentry/web/api.py
@@ -166,12 +166,13 @@ def poll(request, project):
     else:
         view = None
 
-    filters, event_list = _get_group_list(
+    response = _get_group_list(
         request=request,
         project=project,
         view=view,
     )
 
+    event_list = response['event_list']
     event_list = list(event_list[offset:limit])
     handle_before_events(request, event_list)
 
diff --git a/sentry/web/frontend/groups.py b/sentry/web/frontend/groups.py
index d46ad62b9d..e72ba83b13 100644
--- a/sentry/web/frontend/groups.py
+++ b/sentry/web/frontend/groups.py
@@ -99,6 +99,31 @@ def _get_group_list(request, project, view=None):
     elif sort.startswith('accel_'):
         event_list = Group.objects.get_accelerated(event_list, minutes=int(sort.split('_', 1)[1]))
 
+    date_from = request.GET.get('df')
+    time_from = request.GET.get('tf')
+    date_to = request.GET.get('dt')
+    time_to = request.GET.get('tt')
+
+    today = datetime.datetime.utcnow()
+
+    # date format is Y-m-d
+    if any(x is not None for x in [date_from, time_from, date_to, time_to]):
+        date_from, date_to = parse_date(date_from, time_from), parse_date(date_to, time_to)
+    else:
+        date_from = today - datetime.timedelta(days=3)
+        date_to = None
+
+    if date_from:
+        if not date_to:
+            event_list = event_list.filter(last_seen__gte=date_from)
+        else:
+            event_list = event_list.filter(messagecountbyminute__date__gte=date_from)
+    if date_to:
+        if not date_from:
+            event_list = event_list.filter(last_seen__lte=date_to)
+        else:
+            event_list = event_list.filter(messagecountbyminute__date__lte=date_to)
+
     if sort_clause:
         event_list = event_list.extra(
             select={'sort_value': sort_clause},
@@ -110,7 +135,14 @@ def _get_group_list(request, project, view=None):
                 params=[cursor],
             )
 
-    return filters, event_list
+    return {
+        'filters': filters,
+        'event_list': event_list,
+        'date_from': date_from,
+        'date_to': date_to,
+        'today': today,
+        'sort': sort,
+    }
 
 
 @login_required
@@ -190,55 +222,27 @@ def group_list(request, project, view_id=None):
     else:
         view = None
 
-    filters, event_list = _get_group_list(
+    response = _get_group_list(
         request=request,
         project=project,
         view=view,
     )
 
-    date_from = request.GET.get('df')
-    time_from = request.GET.get('tf')
-    date_to = request.GET.get('dt')
-    time_to = request.GET.get('tt')
-
-    today = datetime.datetime.utcnow()
-
-    # date format is Y-m-d
-    if any(x is not None for x in [date_from, time_from, date_to, time_to]):
-        date_from, date_to = parse_date(date_from, time_from), parse_date(date_to, time_to)
-    else:
-        date_from = today - datetime.timedelta(days=3)
-        date_to = None
-
-    if date_from:
-        if not date_to:
-            event_list = event_list.filter(last_seen__gte=date_from)
-        else:
-            event_list = event_list.filter(messagecountbyminute__date__gte=date_from)
-    if date_to:
-        if not date_from:
-            event_list = event_list.filter(last_seen__lte=date_to)
-        else:
-            event_list = event_list.filter(messagecountbyminute__date__lte=date_to)
-
     # XXX: this is duplicate in _get_group_list
-    sort = request.GET.get('sort')
-    if sort not in SORT_OPTIONS:
-        sort = settings.DEFAULT_SORT_OPTION
-    sort_label = SORT_OPTIONS[sort]
+    sort_label = SORT_OPTIONS[response['sort']]
 
     has_realtime = page == 1
 
     return render_to_response('sentry/groups/group_list.html', {
         'project': project,
-        'from_date': date_from,
-        'to_date': date_to,
+        'from_date': response['date_from'],
+        'to_date': response['date_to'],
         'has_realtime': has_realtime,
-        'event_list': event_list,
-        'today': today,
-        'sort': sort,
+        'event_list': response['event_list'],
+        'today': response['today'],
+        'sort': response['sort'],
         'sort_label': sort_label,
-        'filters': filters,
+        'filters': response['filters'],
         'view': view,
         'SORT_OPTIONS': SORT_OPTIONS,
         'HAS_TRENDING': has_trending(),
