commit 17fcebaa672ecc6cdaa21cbc27f783432214bfdf
Author: Evan Purkhiser <evanpurkhiser@gmail.com>
Date:   Fri Sep 22 11:10:44 2017 -0700

    feat: Add util.retries.timed_retry decorator

diff --git a/src/sentry/utils/retries.py b/src/sentry/utils/retries.py
index 7ddc16433c..10c71b4a69 100644
--- a/src/sentry/utils/retries.py
+++ b/src/sentry/utils/retries.py
@@ -4,6 +4,7 @@ import itertools
 import logging
 import random
 import time
+import functools
 
 from django.utils.encoding import force_bytes
 
@@ -29,6 +30,22 @@ class RetryPolicy(object):
     def __call__(self, function):
         raise NotImplementedError
 
+    @classmethod
+    def wrap(cls, *args, **kwargs):
+        """
+        A decorator that may be used to wrap a function to be retried using
+        this policy.
+        """
+        retrier = cls(*args, **kwargs)
+
+        def decorator(fn):
+            @functools.wraps(fn)
+            def execute_with_retry(*args, **kwargs):
+                return retrier(functools.partial(fn, *args, **kwargs))
+
+            return execute_with_retry
+        return decorator
+
 
 class TimedRetryPolicy(RetryPolicy):
     """
diff --git a/tests/sentry/utils/test_retries.py b/tests/sentry/utils/test_retries.py
index b9e8f1f934..44334ea61f 100644
--- a/tests/sentry/utils/test_retries.py
+++ b/tests/sentry/utils/test_retries.py
@@ -36,3 +36,18 @@ class TimedRetryPolicyTestCase(TestCase):
             self.fail('Expected {!r}!'.format(RetryException))
 
         assert callable.call_count == 2
+
+    def test_decorator(self):
+        bomb = Exception('Boom!')
+        callable = mock.MagicMock(side_effect=[bomb, mock.sentinel.OK])
+
+        @TimedRetryPolicy.wrap(30, delay=lambda i: 10)
+        def retrying_func():
+            return callable()
+
+        retrying_func.clock = mock.Mock()
+        retrying_func.clock.sleep = mock.MagicMock()
+        retrying_func.clock.time = mock.MagicMock(side_effect=[0, 15, 25])
+
+        assert retrying_func() is mock.sentinel.OK
+        assert callable.call_count == 2
