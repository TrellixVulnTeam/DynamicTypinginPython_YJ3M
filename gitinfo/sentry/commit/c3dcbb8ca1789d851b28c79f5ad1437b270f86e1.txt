commit c3dcbb8ca1789d851b28c79f5ad1437b270f86e1
Author: Chris Fuller <cfuller@sentry.io>
Date:   Fri May 15 14:03:43 2020 -0400

    feat(workflow): Using environment in chart api requests (#18828)

diff --git a/src/sentry/static/sentry/app/views/settings/incidentRules/ruleForm/index.tsx b/src/sentry/static/sentry/app/views/settings/incidentRules/ruleForm/index.tsx
index 764c1e4808..f0088609fe 100644
--- a/src/sentry/static/sentry/app/views/settings/incidentRules/ruleForm/index.tsx
+++ b/src/sentry/static/sentry/app/views/settings/incidentRules/ruleForm/index.tsx
@@ -59,6 +59,7 @@ type State = {
   query: string;
   aggregation: AlertRuleAggregations;
   timeWindow: number;
+  environment: string | string[] | null;
 } & AsyncComponent['state'];
 
 const isEmpty = (str: unknown): boolean => str === '' || !defined(str);
@@ -79,6 +80,7 @@ class RuleFormContainer extends AsyncComponent<Props, State> {
       aggregation: rule.aggregation,
       query: rule.query || '',
       timeWindow: rule.timeWindow,
+      environment: rule.environment || null,
       triggerErrors: new Map(),
       availableActions: null,
       triggers: this.props.rule.triggers,
@@ -272,7 +274,7 @@ class RuleFormContainer extends AsyncComponent<Props, State> {
   }
 
   handleFieldChange = (name: string, value: unknown) => {
-    if (['timeWindow', 'aggregation'].includes(name)) {
+    if (['timeWindow', 'environment', 'aggregation'].includes(name)) {
       this.setState({[name]: value});
     }
   };
@@ -394,7 +396,7 @@ class RuleFormContainer extends AsyncComponent<Props, State> {
 
   renderBody() {
     const {organization, ruleId, rule, params, onSubmitSuccess} = this.props;
-    const {query, aggregation, timeWindow, triggers} = this.state;
+    const {query, aggregation, timeWindow, triggers, environment} = this.state;
 
     const queryAndAlwaysErrorEvents = !query.includes('event.type')
       ? `${query} ${this.getEventType()}`.trim()
@@ -409,6 +411,7 @@ class RuleFormContainer extends AsyncComponent<Props, State> {
         query={queryAndAlwaysErrorEvents}
         aggregation={aggregation}
         timeWindow={timeWindow}
+        environment={environment}
       />
     );
 
@@ -426,11 +429,7 @@ class RuleFormContainer extends AsyncComponent<Props, State> {
               aggregation: rule.aggregation,
               query: rule.query || '',
               timeWindow: rule.timeWindow,
-              // TODO(epurkhiser): Remove when the API response with a single env
-              environment:
-                (Array.isArray(rule.environment)
-                  ? rule.environment[0]
-                  : rule.environment) || null,
+              environment: rule.environment || null,
             }}
             saveOnBlur={false}
             onSubmit={this.handleSubmit}
diff --git a/src/sentry/static/sentry/app/views/settings/incidentRules/triggers/chart/index.tsx b/src/sentry/static/sentry/app/views/settings/incidentRules/triggers/chart/index.tsx
index e35ef725a8..26c97b07d3 100644
--- a/src/sentry/static/sentry/app/views/settings/incidentRules/triggers/chart/index.tsx
+++ b/src/sentry/static/sentry/app/views/settings/incidentRules/triggers/chart/index.tsx
@@ -21,6 +21,7 @@ type Props = {
 
   query: IncidentRule['query'];
   timeWindow: IncidentRule['timeWindow'];
+  environment: string | string[] | null;
   aggregation: IncidentRule['aggregation'];
   triggers: Trigger[];
 };
@@ -39,6 +40,7 @@ class TriggersChart extends React.PureComponent<Props> {
       query,
       aggregation,
       triggers,
+      environment,
     } = this.props;
 
     const period = getPeriodForTimeWindow(timeWindow);
@@ -48,6 +50,13 @@ class TriggersChart extends React.PureComponent<Props> {
         api={api}
         organization={organization}
         query={query}
+        environment={
+          environment
+            ? Array.isArray(environment)
+              ? environment
+              : [environment]
+            : undefined
+        }
         project={projects.map(({id}) => Number(id))}
         interval={`${timeWindow}m`}
         period={period}
