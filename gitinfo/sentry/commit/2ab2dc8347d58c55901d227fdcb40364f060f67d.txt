commit 2ab2dc8347d58c55901d227fdcb40364f060f67d
Author: Lyn Nagara <lyn.nagara@gmail.com>
Date:   Mon Jun 10 10:13:02 2019 -0700

    ref(sentry10): Remove unused project layout files (#13593)

diff --git a/src/sentry/static/sentry/app/components/projectHeader/index.jsx b/src/sentry/static/sentry/app/components/projectHeader/index.jsx
deleted file mode 100644
index 102aa6b04f..0000000000
--- a/src/sentry/static/sentry/app/components/projectHeader/index.jsx
+++ /dev/null
@@ -1,134 +0,0 @@
-import PropTypes from 'prop-types';
-import React from 'react';
-import {Link} from 'react-router';
-import styled from 'react-emotion';
-
-import SentryTypes from 'app/sentryTypes';
-import ProjectLink from 'app/components/projectLink';
-import ProjectSelector from 'app/components/projectHeader/projectSelector';
-import BookmarkToggle from 'app/components/projects/bookmarkToggle';
-import DropdownLink from 'app/components/dropdownLink';
-import MenuItem from 'app/components/menuItem';
-import Button from 'app/components/button';
-import NavTabs from 'app/components/navTabs';
-
-import {t} from 'app/locale';
-
-import {
-  setActiveEnvironment,
-  clearActiveEnvironment,
-} from 'app/actionCreators/environments';
-
-class ProjectHeader extends React.Component {
-  static propTypes = {
-    project: PropTypes.object.isRequired,
-    organization: PropTypes.object.isRequired,
-    environments: PropTypes.array.isRequired,
-    activeSection: PropTypes.string,
-    activeEnvironment: SentryTypes.Environment,
-  };
-
-  static defaultProps = {
-    environments: [],
-  };
-
-  render() {
-    const {project, environments, activeEnvironment} = this.props;
-    const navSection = this.props.activeSection;
-    const org = this.props.organization;
-    const allEnvironmentsLabel = t('All environments');
-
-    const pagesWithEnvironments = new Set(['stream', 'releases', 'dashboard', 'events']);
-    const showEnvironmentsToggle = pagesWithEnvironments.has(navSection);
-
-    const activeEnvironmentTitle = activeEnvironment
-      ? activeEnvironment.displayName
-      : allEnvironmentsLabel;
-
-    return (
-      <div className="sub-header flex flex-container flex-vertically-centered">
-        <div className="project-header">
-          <div className="project-header-main">
-            <div className="project-select-wrapper">
-              <ProjectSelector organization={org} projectId={project.slug} />
-              <BookmarkToggle />
-            </div>
-
-            <NavTabs>
-              <li className={navSection == 'stream' ? 'active' : ''}>
-                <ProjectLink to={`/${org.slug}/${project.slug}/`}>
-                  {t('Issues')}
-                </ProjectLink>
-              </li>
-              <li className={navSection == 'dashboard' ? 'active' : ''}>
-                <ProjectLink to={`/${org.slug}/${project.slug}/dashboard/`}>
-                  {t('Overview')}
-                </ProjectLink>
-              </li>
-              <li className={navSection == 'releases' ? 'active' : ''}>
-                <ProjectLink to={`/${org.slug}/${project.slug}/releases/`}>
-                  {t('Releases')}
-                </ProjectLink>
-              </li>
-              <li className={navSection == 'settings' ? 'active' : ''}>
-                <Link to={`/settings/${org.slug}/projects/${project.slug}/`}>
-                  {t('Settings')}
-                </Link>
-              </li>
-            </NavTabs>
-          </div>
-          {showEnvironmentsToggle && (
-            <EnvironmentsToggle>
-              <div className="project-header-toggle">
-                <label>{t('Environment')}</label>
-                <DropdownLink
-                  anchorRight={true}
-                  title={activeEnvironmentTitle}
-                  className="environment-selector-toggle"
-                >
-                  <MenuItem
-                    onClick={clearActiveEnvironment}
-                    className={activeEnvironment === null && 'active'}
-                    linkClassName="truncate"
-                  >
-                    {allEnvironmentsLabel}
-                  </MenuItem>
-                  {environments.map(env => (
-                    <MenuItem
-                      key={env.id}
-                      onClick={() => setActiveEnvironment(env)}
-                      className={
-                        activeEnvironment &&
-                        activeEnvironment.name === env.name &&
-                        'active'
-                      }
-                      linkClassName="truncate"
-                    >
-                      {env.displayName}
-                    </MenuItem>
-                  ))}
-                  <MenuItem divider={true} />
-                  <div style={{textAlign: 'center', padding: '5px 0px'}}>
-                    <Button
-                      to={`/settings/${org.slug}/projects/${project.slug}/environments/`}
-                      size="small"
-                    >
-                      {t('Manage environments')}
-                    </Button>
-                  </div>
-                </DropdownLink>
-              </div>
-            </EnvironmentsToggle>
-          )}
-        </div>
-      </div>
-    );
-  }
-}
-
-const EnvironmentsToggle = styled('div')`
-  display: flex;
-  position: relative;
-`;
-
-export default ProjectHeader;
diff --git a/src/sentry/static/sentry/app/routes.jsx b/src/sentry/static/sentry/app/routes.jsx
index f549a4ce83..bcfc348c75 100644
--- a/src/sentry/static/sentry/app/routes.jsx
+++ b/src/sentry/static/sentry/app/routes.jsx
@@ -23,7 +23,6 @@ import OrganizationStreamOverview from 'app/views/organizationStream/overview';
 import ProjectChooser from 'app/views/projectChooser';
 import ProjectDataForwarding from 'app/views/projectDataForwarding';
 import ProjectDebugFiles from 'app/views/projectDebugFiles';
-import ProjectDetails from 'app/views/projectDetails';
 import ProjectEnvironments from 'app/views/projectEnvironments';
 import ProjectEventRedirect from 'app/views/projectEventRedirect';
 import ProjectGettingStarted from 'app/views/projectInstall/gettingStarted';
@@ -1131,173 +1130,174 @@ function routes() {
           <Route path=":platform/" component={errorHandler(ProjectInstallPlatform)} />
         </Route>
 
-        <Route path=":projectId/" component={errorHandler(ProjectDetails)}>
-          <IndexRedirect to="/organizations/:orgId/issues/" />
-          <Redirect from="issues/" to="/organizations/:orgId/issues/" />
-          <Redirect from="searches/:searchId/" to="/organizations/:orgId/issues/" />
-          <Redirect from="dashboard/" to="/organizations/:orgId/dashboards/" />
-          <Redirect from="releases/" to="/organizations/:orgId/releases/" />
+        <Redirect from=":projectId/" to="/organizations/:orgId/issues/" />
+        <Redirect from=":projectId/issues/" to="/organizations/:orgId/issues/" />
+        <Redirect
+          from=":projectId/searches/:searchId/"
+          to="/organizations/:orgId/issues/"
+        />
+        <Redirect from=":projectId/dashboard/" to="/organizations/:orgId/dashboards/" />
+        <Redirect from=":projectId/releases/" to="/organizations/:orgId/releases/" />
+        <Redirect
+          from=":projectId/releases/:version/"
+          to="/organizations/:orgId/releases/:version/"
+        />
+        <Redirect
+          from=":projectId/releases/:version/new-events/"
+          to="/organizations/:orgId/releases/:version/new-events/"
+        />
+        <Redirect
+          from=":projectId/releases/:version/all-events/"
+          to="/organizations/:orgId/releases/:version/all-events/"
+        />
+        <Redirect
+          from=":projectId/releases/:version/artifacts/"
+          to="/organizations/:orgId/releases/:version/artifacts/"
+        />
+        <Redirect
+          from=":projectId/releases/:version/commits/"
+          to="/organizations/:orgId/releases/:version/commits/"
+        />
+
+        <Redirect
+          from=":projectId/user-feedback/"
+          to="/organizations/:orgId/user-feedback/"
+        />
+        <Route path=":projectId/settings/" component={errorHandler(ProjectSettings)}>
+          <Redirect from="teams/" to="/settings/:orgId/projects/:projectId/teams/" />
+          <Redirect from="alerts/" to="/settings/:orgId/projects/:projectId/alerts/" />
           <Redirect
-            from="releases/:version/"
-            to="/organizations/:orgId/releases/:version/"
+            from="alerts/rules/"
+            to="/settings/:orgId/projects/:projectId/alerts/rules/"
           />
           <Redirect
-            from="releases/:version/new-events/"
-            to="/organizations/:orgId/releases/:version/new-events/"
+            from="alerts/rules/new/"
+            to="/settings/:orgId/projects/:projectId/alerts/rules/new/"
           />
           <Redirect
-            from="releases/:version/all-events/"
-            to="/organizations/:orgId/releases/:version/all-events/"
+            from="alerts/rules/:ruleId/"
+            to="/settings/:orgId/projects/:projectId/alerts/rules/:ruleId/"
           />
           <Redirect
-            from="releases/:version/artifacts/"
-            to="/organizations/:orgId/releases/:version/artifacts/"
+            from="environments/"
+            to="/settings/:orgId/projects/:projectId/environments/"
           />
           <Redirect
-            from="releases/:version/commits/"
-            to="/organizations/:orgId/releases/:version/commits/"
+            from="environments/hidden/"
+            to="/settings/:orgId/projects/:projectId/environments/hidden/"
+          />
+          <Redirect
+            from="tags/"
+            to="/settings/projects/:orgId/projects/:projectId/tags/"
+          />
+          <Redirect
+            from="issue-tracking/"
+            to="/settings/:orgId/projects/:projectId/issue-tracking/"
+          />
+          <Redirect
+            from="release-tracking/"
+            to="/settings/:orgId/projects/:projectId/release-tracking/"
+          />
+          <Redirect
+            from="ownership/"
+            to="/settings/:orgId/projects/:projectId/ownership/"
           />
-
-          <Redirect from="user-feedback/" to="/organizations/:orgId/user-feedback/" />
-          <Route path="settings/" component={errorHandler(ProjectSettings)}>
-            <Redirect from="teams/" to="/settings/:orgId/projects/:projectId/teams/" />
-            <Redirect from="alerts/" to="/settings/:orgId/projects/:projectId/alerts/" />
-            <Redirect
-              from="alerts/rules/"
-              to="/settings/:orgId/projects/:projectId/alerts/rules/"
-            />
-            <Redirect
-              from="alerts/rules/new/"
-              to="/settings/:orgId/projects/:projectId/alerts/rules/new/"
-            />
-            <Redirect
-              from="alerts/rules/:ruleId/"
-              to="/settings/:orgId/projects/:projectId/alerts/rules/:ruleId/"
-            />
-            <Redirect
-              from="environments/"
-              to="/settings/:orgId/projects/:projectId/environments/"
-            />
-            <Redirect
-              from="environments/hidden/"
-              to="/settings/:orgId/projects/:projectId/environments/hidden/"
-            />
-            <Redirect
-              from="tags/"
-              to="/settings/projects/:orgId/projects/:projectId/tags/"
-            />
-            <Redirect
-              from="issue-tracking/"
-              to="/settings/:orgId/projects/:projectId/issue-tracking/"
-            />
-            <Redirect
-              from="release-tracking/"
-              to="/settings/:orgId/projects/:projectId/release-tracking/"
-            />
-            <Redirect
-              from="ownership/"
-              to="/settings/:orgId/projects/:projectId/ownership/"
-            />
-            <Redirect
-              from="data-forwarding/"
-              to="/settings/:orgId/projects/:projectId/data-forwarding/"
-            />
-            <Redirect
-              from="saved-searches/"
-              to="/settings/:orgId/projects/:projectId/saved-searches/"
-            />
-            <Redirect
-              from="debug-symbols/"
-              to="/settings/:orgId/projects/:projectId/debug-symbols/"
-            />
-            <Redirect
-              from="processing-issues/"
-              to="/settings/:orgId/projects/:projectId/processing-issues/"
-            />
-            <Redirect
-              from="filters/"
-              to="/settings/:orgId/projects/:projectId/filters/"
-            />
-            <Redirect from="hooks/" to="/settings/:orgId/projects/:projectId/hooks/" />
-            <Redirect from="keys/" to="/settings/:orgId/projects/:projectId/keys/" />
-            <Redirect
-              from="keys/:keyId/"
-              to="/settings/:orgId/projects/:projectId/keys/:keyId/"
-            />
-            <Redirect
-              from="user-feedback/"
-              to="/settings/:orgId/projects/:projectId/user-feedback/"
-            />
-            <Redirect
-              from="security-headers/"
-              to="/settings/:orgId/projects/:projectId/security-headers/"
-            />
-            <Redirect
-              from="security-headers/csp/"
-              to="/settings/:orgId/projects/:projectId/security-headers/csp/"
-            />
-            <Redirect
-              from="security-headers/expect-ct/"
-              to="/settings/:orgId/projects/:projectId/security-headers/expect-ct/"
-            />
-            <Redirect
-              from="security-headers/hpkp/"
-              to="/settings/:orgId/projects/:projectId/security-headers/hpkp/"
-            />
-            <Redirect
-              from="plugins/"
-              to="/settings/:orgId/projects/:projectId/plugins/"
-            />
-            <Redirect
-              from="plugins/:pluginId/"
-              to="/settings/:orgId/projects/:projectId/plugins/:pluginId/"
-            />
-            <Redirect
-              from="integrations/:providerKey/"
-              to="/settings/:orgId/projects/:projectId/integrations/:providerKey/"
-            />
-            <Redirect
-              from="install/"
-              to="/settings/:orgId/projects/:projectId/install/"
-            />
-            <Redirect
-              from="install/:platform'"
-              to="/settings/:orgId/projects/:projectId/install/:platform/"
-            />
-            {projectSettingsRoutes}
-          </Route>
-          <Redirect from="group/:groupId/" to="issues/:groupId/" />
-          <Redirect from="issues/:groupId/" to="/organizations/:orgId/issues/:groupId/" />
           <Redirect
-            from="issues/:groupId/events/"
-            to="/organizations/:orgId/issues/:groupId/events/"
+            from="data-forwarding/"
+            to="/settings/:orgId/projects/:projectId/data-forwarding/"
           />
           <Redirect
-            from="issues/:groupId/events/:eventId/"
-            to="/organizations/:orgId/issues/:groupId/events/:eventId/"
+            from="saved-searches/"
+            to="/settings/:orgId/projects/:projectId/saved-searches/"
           />
           <Redirect
-            from="issues/:groupId/tags/"
-            to="/organizations/:orgId/issues/:groupId/tags/"
+            from="debug-symbols/"
+            to="/settings/:orgId/projects/:projectId/debug-symbols/"
           />
           <Redirect
-            from="issues/:groupId/tags/:tagKey/"
-            to="/organizations/:orgId/issues/:groupId/tags/:tagKey/"
+            from="processing-issues/"
+            to="/settings/:orgId/projects/:projectId/processing-issues/"
           />
+          <Redirect from="filters/" to="/settings/:orgId/projects/:projectId/filters/" />
+          <Redirect from="hooks/" to="/settings/:orgId/projects/:projectId/hooks/" />
+          <Redirect from="keys/" to="/settings/:orgId/projects/:projectId/keys/" />
           <Redirect
-            from="issues/:groupId/feedback/"
-            to="/organizations/:orgId/issues/:groupId/feedback/"
+            from="keys/:keyId/"
+            to="/settings/:orgId/projects/:projectId/keys/:keyId/"
           />
           <Redirect
-            from="issues/:groupId/similar/"
-            to="/organizations/:orgId/issues/:groupId/similar/"
+            from="user-feedback/"
+            to="/settings/:orgId/projects/:projectId/user-feedback/"
           />
           <Redirect
-            from="issues/:groupId/merged/"
-            to="/organizations/:orgId/issues/:groupId/merged/"
+            from="security-headers/"
+            to="/settings/:orgId/projects/:projectId/security-headers/"
           />
-          <Route path="events/:eventId/" component={errorHandler(ProjectEventRedirect)} />
+          <Redirect
+            from="security-headers/csp/"
+            to="/settings/:orgId/projects/:projectId/security-headers/csp/"
+          />
+          <Redirect
+            from="security-headers/expect-ct/"
+            to="/settings/:orgId/projects/:projectId/security-headers/expect-ct/"
+          />
+          <Redirect
+            from="security-headers/hpkp/"
+            to="/settings/:orgId/projects/:projectId/security-headers/hpkp/"
+          />
+          <Redirect from="plugins/" to="/settings/:orgId/projects/:projectId/plugins/" />
+          <Redirect
+            from="plugins/:pluginId/"
+            to="/settings/:orgId/projects/:projectId/plugins/:pluginId/"
+          />
+          <Redirect
+            from="integrations/:providerKey/"
+            to="/settings/:orgId/projects/:projectId/integrations/:providerKey/"
+          />
+          <Redirect from="install/" to="/settings/:orgId/projects/:projectId/install/" />
+          <Redirect
+            from="install/:platform'"
+            to="/settings/:orgId/projects/:projectId/install/:platform/"
+          />
+          {projectSettingsRoutes}
         </Route>
+        <Redirect from=":projectId/group/:groupId/" to="issues/:groupId/" />
+        <Redirect
+          from=":projectId/issues/:groupId/"
+          to="/organizations/:orgId/issues/:groupId/"
+        />
+        <Redirect
+          from=":projectId/issues/:groupId/events/"
+          to="/organizations/:orgId/issues/:groupId/events/"
+        />
+        <Redirect
+          from=":projectId/issues/:groupId/events/:eventId/"
+          to="/organizations/:orgId/issues/:groupId/events/:eventId/"
+        />
+        <Redirect
+          from=":projectId/issues/:groupId/tags/"
+          to="/organizations/:orgId/issues/:groupId/tags/"
+        />
+        <Redirect
+          from=":projectId/issues/:groupId/tags/:tagKey/"
+          to="/organizations/:orgId/issues/:groupId/tags/:tagKey/"
+        />
+        <Redirect
+          from=":projectId/issues/:groupId/feedback/"
+          to="/organizations/:orgId/issues/:groupId/feedback/"
+        />
+        <Redirect
+          from=":projectId/issues/:groupId/similar/"
+          to="/organizations/:orgId/issues/:groupId/similar/"
+        />
+        <Redirect
+          from=":projectId/issues/:groupId/merged/"
+          to="/organizations/:orgId/issues/:groupId/merged/"
+        />
+        <Route
+          path=":projectId/events/:eventId/"
+          component={errorHandler(ProjectEventRedirect)}
+        />
       </Route>
       {hook('routes')}
       <Route
diff --git a/src/sentry/static/sentry/app/views/projectDetails.jsx b/src/sentry/static/sentry/app/views/projectDetails.jsx
deleted file mode 100644
index a6d1d6b03f..0000000000
--- a/src/sentry/static/sentry/app/views/projectDetails.jsx
+++ /dev/null
@@ -1,17 +0,0 @@
-import React from 'react';
-
-import ProjectContext from 'app/views/projects/projectContext';
-import ProjectDetailsLayout from 'app/views/projectDetailsLayout';
-
-class ProjectDetails extends React.Component {
-  render() {
-    const {projectId, orgId} = this.props.params;
-    return (
-      <ProjectContext orgId={orgId} projectId={projectId}>
-        <ProjectDetailsLayout>{this.props.children}</ProjectDetailsLayout>
-      </ProjectContext>
-    );
-  }
-}
-
-export default ProjectDetails;
diff --git a/src/sentry/static/sentry/app/views/projectDetailsLayout.jsx b/src/sentry/static/sentry/app/views/projectDetailsLayout.jsx
deleted file mode 100644
index 2c521253a3..0000000000
--- a/src/sentry/static/sentry/app/views/projectDetailsLayout.jsx
+++ /dev/null
@@ -1,77 +0,0 @@
-import {withRouter} from 'react-router';
-import React from 'react';
-import Reflux from 'reflux';
-import createReactClass from 'create-react-class';
-
-import {setLastRoute} from 'app/actionCreators/navigation';
-import SentryTypes from 'app/sentryTypes';
-import EnvironmentStore from 'app/stores/environmentStore';
-import ProjectHeader from 'app/components/projectHeader';
-import ProjectState from 'app/mixins/projectState';
-import withEnvironment from 'app/utils/withEnvironment';
-import GuideAnchor from 'app/components/assistant/guideAnchor';
-
-const ProjectDetailsLayout = createReactClass({
-  displayName: 'ProjectDetailsLayout',
-
-  propTypes: {
-    environment: SentryTypes.Environment,
-  },
-
-  mixins: [ProjectState, Reflux.connect(EnvironmentStore, 'environments')],
-
-  getInitialState() {
-    return {
-      environments: EnvironmentStore.getActive() || [],
-      projectNavSection: null,
-    };
-  },
-
-  componentWillUnmount() {
-    const {location} = this.props;
-    const {pathname, search} = location;
-    // Save last route so that we can jump back to view from settings
-    setLastRoute(`${pathname}${search || ''}`);
-  },
-
-  /**
-   * This callback can be invoked by the child component
-   * to update the active nav section (which is then passed
-   * to the ProjectHeader
-   */
-  setProjectNavSection(section) {
-    this.setState({
-      projectNavSection: section,
-    });
-  },
-
-  render() {
-    if (!this.context.project) {
-      return null;
-    }
-
-    return (
-      <React.Fragment>
-        <GuideAnchor target="project_details" type="invisible" />
-        <ProjectHeader
-          activeSection={this.state.projectNavSection}
-          project={this.context.project}
-          organization={this.getOrganization()}
-          environments={this.state.environments}
-          activeEnvironment={this.props.environment}
-        />
-        <div className="container">
-          <div className="content content-with-margin">
-            {React.cloneElement(this.props.children, {
-              setProjectNavSection: this.setProjectNavSection,
-              memberList: this.state.memberList,
-            })}
-          </div>
-        </div>
-      </React.Fragment>
-    );
-  },
-});
-
-export {ProjectDetailsLayout};
-export default withRouter(withEnvironment(ProjectDetailsLayout));
diff --git a/tests/js/spec/views/projects/projectDetailsLayout.spec.jsx b/tests/js/spec/views/projects/projectDetailsLayout.spec.jsx
deleted file mode 100644
index f04449d9a8..0000000000
--- a/tests/js/spec/views/projects/projectDetailsLayout.spec.jsx
+++ /dev/null
@@ -1,23 +0,0 @@
-import React from 'react';
-import {mount} from 'enzyme';
-
-import {ProjectDetailsLayout} from 'app/views/projectDetailsLayout';
-import {setLastRoute} from 'app/actionCreators/navigation';
-
-jest.mock('app/actionCreators/navigation', () => ({
-  setLastRoute: jest.fn(),
-}));
-
-jest.unmock('app/utils/recreateRoute');
-
-describe('ProjectLayout', function() {
-  it('calls `setLastRoute` when unmounting', function() {
-    const wrapper = mount(
-      <ProjectDetailsLayout location={{pathname: '/org-slug/dashboard/'}} />
-    );
-
-    wrapper.unmount();
-
-    expect(setLastRoute).toHaveBeenCalledWith('/org-slug/dashboard/');
-  });
-});
