commit 8128c91c9f073f6d6491e849af5a0be8fd09d970
Author: Ben Vinegar <ben@benv.ca>
Date:   Tue Oct 25 17:41:19 2016 -0700

    Remove sidebar/topnav from project install page

diff --git a/src/sentry/static/sentry/app/routes.jsx b/src/sentry/static/sentry/app/routes.jsx
index 4e473566fa..2b6ffd29de 100644
--- a/src/sentry/static/sentry/app/routes.jsx
+++ b/src/sentry/static/sentry/app/routes.jsx
@@ -33,6 +33,7 @@ import OrganizationTeams from './views/organizationTeams';
 import AllTeamsList from './views/organizationTeams/allTeamsList';
 import ProjectAlertSettings from './views/projectAlertSettings';
 import ProjectAlertRules from './views/projectAlertRules';
+import ProjectCreation from './views/projects/projectCreation';
 import ProjectChooser from './views/projectChooser';
 import ProjectCspSettings from './views/projectCspSettings';
 import ProjectDashboard from './views/projectDashboard';
@@ -121,13 +122,27 @@ function routes() {
         <Route path="/organizations/:orgId/issues/assigned/" component={errorHandler(MyIssuesAssignedToMe)} />
         <Route path="/organizations/:orgId/issues/bookmarks/" component={errorHandler(MyIssuesBookmarked)} />
         <Route path="/organizations/:orgId/issues/history/" component={errorHandler(MyIssuesViewed)} />
+
+        <Route path="/organizations/:orgId/projects/_new/" component={errorHandler(ProjectCreation)} />
         <Route path="/organizations/:orgId/projects/choose/" component={errorHandler(ProjectChooser)} />
         <Route path="/organizations/:orgId/rate-limits/" component={errorHandler(OrganizationRateLimits)} />
         <Route path="/organizations/:orgId/stats/" component={errorHandler(OrganizationStats)} />
+
+
+        <Route path="/organizations/:orgId/teams/:teamId/" component={errorHandler(TeamDetails)}>
+          <IndexRedirect to="settings/" />
+          <Route path="settings/" component={errorHandler(TeamSettings)} />
+          <Route path="members/" component={errorHandler(TeamMembers)} />
+        </Route>
         <Route path="/organizations/:orgId/actions/set-callsigns/" component={errorHandler(SetCallsignsAction)} />
 
         {hooksOrgRoutes}
 
+        <Route path=":projectId/settings/install/" component={errorHandler(ProjectInstall)}>
+          <IndexRoute component={errorHandler(ProjectInstallOverview)}/>
+          <Route path=":platform/" component={errorHandler(ProjectInstallPlatform)}/>
+        </Route>
+
         <Route path=":projectId/" component={errorHandler(ProjectDetails)}>
           <IndexRoute component={errorHandler(Stream)} />
           <Route path="searches/:searchId/" component={errorHandler(Stream)} />
@@ -143,10 +158,6 @@ function routes() {
           <Route path="settings/" component={errorHandler(ProjectSettings)}>
             <Route path="alerts/" component={errorHandler(ProjectAlertSettings)} />
             <Route path="alerts/rules/" component={errorHandler(ProjectAlertRules)} />
-            <Route path="install/" component={errorHandler(ProjectInstall)}>
-              <IndexRoute component={errorHandler(ProjectInstallOverview)}/>
-              <Route path=":platform/" component={errorHandler(ProjectInstallPlatform)}/>
-            </Route>
             <Route path="filters/" component={errorHandler(ProjectFilters)} />
             <Route path="saved-searches/" component={errorHandler(ProjectSavedSearches)} />
             <Route path="debug-symbols/" component={errorHandler(ProjectDebugSymbols)} />
diff --git a/src/sentry/static/sentry/app/views/projectInstall/index.jsx b/src/sentry/static/sentry/app/views/projectInstall/index.jsx
index 5c7611d056..d58351d59c 100644
--- a/src/sentry/static/sentry/app/views/projectInstall/index.jsx
+++ b/src/sentry/static/sentry/app/views/projectInstall/index.jsx
@@ -1,27 +1,42 @@
 import React from 'react';
 
 import ApiMixin from '../../mixins/apiMixin';
+import DocumentTitle from 'react-document-title';
+import ProjectSelector from '../../components/projectHeader/projectSelector';
 import LoadingError from '../../components/loadingError';
 import LoadingIndicator from '../../components/loadingIndicator';
 
+import OrganizationState from '../../mixins/organizationState';
+
 const ProjectInstall = React.createClass({
-  propTypes: {
-    setProjectNavSection: React.PropTypes.func
+  childContextTypes: {
+    project: React.PropTypes.Project,
+    team: React.PropTypes.object
   },
 
   mixins: [
-    ApiMixin
+    ApiMixin,
+    OrganizationState
   ],
 
   getInitialState() {
     return {
       loading: true,
-      platformList: null
+      platformList: null,
+      project: null,
+      team: null
+    };
+  },
+
+  getChildContext() {
+    return {
+      project: this.state.project,
+      team: this.state.team
     };
   },
 
   componentWillMount() {
-    this.props.setProjectNavSection('settings');
+    // this.props.setProjectNavSection('settings');
   },
 
   componentDidMount() {
@@ -29,6 +44,18 @@ const ProjectInstall = React.createClass({
   },
 
   fetchData() {
+    let org = this.context.organization;
+    if (!org) {
+      return;
+    }
+
+    let [activeTeam, activeProject] = this.identifyProject();
+
+    this.setState({
+      project: activeProject,
+      team: activeTeam
+    });
+
     let {orgId, projectId} = this.props.params;
     this.api.request(`/projects/${orgId}/${projectId}/docs/`, {
       success: (data) => {
@@ -40,7 +67,28 @@ const ProjectInstall = React.createClass({
     });
   },
 
-  render() {
+  identifyProject() {
+    let {params} = this.props;
+    let projectSlug = params.projectId;
+    let activeProject = null;
+    let activeTeam = null;
+    let org = this.context.organization;
+    org.teams.forEach((team) => {
+      team.projects.forEach((project) => {
+        if (project.slug == projectSlug) {
+          activeProject = project;
+          activeTeam = team;
+        }
+      });
+    });
+    return [activeTeam, activeProject];
+  },
+
+  getTitle() {
+    return 'lol';
+  },
+
+  renderBody() {
     if (this.state.loading)
       return <LoadingIndicator />;
     else if (this.state.error)
@@ -50,6 +98,32 @@ const ProjectInstall = React.createClass({
     return React.cloneElement(this.props.children, {
       platformData: data // {...this.props}
     });
+  },
+
+  render() {
+    let org = this.context.organization;
+    let {project} = this.state;
+    if (!project)
+      return null;
+
+    return (
+      <DocumentTitle title={this.getTitle()}>
+        <div>
+          <div className="sub-header flex flex-container flex-vertically-centered">
+            <div className="p-t-1">
+              <ProjectSelector
+                  organization={org}
+                  projectId={project.slug}/>
+            </div>
+          </div>
+          <div className="container">
+            <div className="content">
+              {this.renderBody()}
+            </div>
+          </div>
+        </div>
+      </DocumentTitle>
+    );
   }
 });
 
