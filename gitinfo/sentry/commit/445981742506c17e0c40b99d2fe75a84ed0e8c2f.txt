commit 445981742506c17e0c40b99d2fe75a84ed0e8c2f
Author: David Cramer <dcramer@gmail.com>
Date:   Mon Jun 8 07:17:49 2015 -0700

    Improve handling of duplicate event datetimes
    
    Refs 4766a3bc92c1834d07dbba71a67b66a0a24ab9c2

diff --git a/src/sentry/web/frontend/groups.py b/src/sentry/web/frontend/groups.py
index 6a57937f4d..3727665394 100644
--- a/src/sentry/web/frontend/groups.py
+++ b/src/sentry/web/frontend/groups.py
@@ -151,23 +151,29 @@ def render_with_group_context(group, template, context, request=None,
 
     if event:
         if event.id:
-            # TODO(dcramer): we dont want to actually use gt/lt here as it should
-            # be inclusive. However, that would need to ensure we have some kind
-            # of way to know which event was the previous (an offset), or to add
-            # a third sort key (which is not yet indexed)
-            base_qs = group.event_set.exclude(id=event.id)
+            # HACK(dcramer): work around lack of unique sorting on datetime
+            base_qs = Event.objects.filter(
+                group=event.group_id,
+            ).exclude(id=event.id)
             try:
-                next_event = base_qs.filter(
-                    datetime__gt=event.datetime,
-                ).order_by('datetime')[0:1].get()
-            except Event.DoesNotExist:
+                next_event = sorted(
+                    base_qs.filter(
+                        datetime__gte=event.datetime
+                    ).order_by('datetime')[0:5],
+                    key=lambda x: (x.datetime, x.id)
+                )[0]
+            except IndexError:
                 next_event = None
 
             try:
-                prev_event = base_qs.filter(
-                    datetime__lt=event.datetime,
-                ).order_by('-datetime')[0:1].get()
-            except Event.DoesNotExist:
+                prev_event = sorted(
+                    base_qs.filter(
+                        datetime__lte=event.datetime,
+                    ).order_by('-datetime')[0:5],
+                    key=lambda x: (x.datetime, x.id),
+                    reverse=True
+                )[0]
+            except IndexError:
                 prev_event = None
         else:
             next_event = None
