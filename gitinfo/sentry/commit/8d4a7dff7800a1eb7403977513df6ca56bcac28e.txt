commit 8d4a7dff7800a1eb7403977513df6ca56bcac28e
Author: Dora <dora.l.chan@gmail.com>
Date:   Thu Mar 19 15:47:49 2020 -0700

    feat/datascrubbers-design-cleanup (#17783)
    
    * moved subtitle out and updated styling
    
    * use tsc instead
    
    Co-authored-by: Dora Chan <dora.lchan@gmail.com>

diff --git a/src/sentry/static/sentry/app/views/settings/components/dataPrivacyRulesPanel/dataPrivacyRulesPanel.tsx b/src/sentry/static/sentry/app/views/settings/components/dataPrivacyRulesPanel/dataPrivacyRulesPanel.tsx
index 5353721fd9..06241b5ba1 100644
--- a/src/sentry/static/sentry/app/views/settings/components/dataPrivacyRulesPanel/dataPrivacyRulesPanel.tsx
+++ b/src/sentry/static/sentry/app/views/settings/components/dataPrivacyRulesPanel/dataPrivacyRulesPanel.tsx
@@ -3,7 +3,7 @@ import styled from '@emotion/styled';
 import omit from 'lodash/omit';
 
 import space from 'app/styles/space';
-import {t} from 'app/locale';
+import {t, tct} from 'app/locale';
 import {Panel, PanelHeader, PanelAlert, PanelBody} from 'app/components/panels';
 import Button from 'app/components/button';
 import {IconAdd} from 'app/icons/iconAdd';
@@ -41,7 +41,7 @@ type Props = {
   disabled?: boolean;
   endpoint: string;
   relayPiiConfig?: string;
-  panelHeaderSubTitle?: React.ReactNode;
+  additionalContext?: React.ReactNode;
 };
 
 type State = {
@@ -237,25 +237,25 @@ class DataPrivacyRulesPanel extends React.Component<Props, State> {
   };
 
   render() {
-    const {panelHeaderSubTitle, disabled} = this.props;
+    const {additionalContext, disabled} = this.props;
     const {rules, savedRules} = this.state;
     const hideButtonBar = savedRules.length === 0 && rules.length === 0;
     return (
       <React.Fragment>
         <Panel>
-          <StyledPanelHeader>
-            {t('Data Privacy Rules')}
-            {panelHeaderSubTitle && (
-              <PanelHeaderSubTitle>{panelHeaderSubTitle}</PanelHeaderSubTitle>
-            )}
-          </StyledPanelHeader>
-          <PanelAlert type="info" icon="icon-docs">
-            <Link
-              href="https://docs.sentry.io/data-management/advanced-datascrubbing/"
-              target="_blank"
-            >
-              {t('Check out how to use advanced datascrubbing')}
-            </Link>
+          <StyledPanelHeader>{t('Data Privacy Rules')}</StyledPanelHeader>
+          <PanelAlert type="info">
+            {additionalContext}
+            {tct('To learn more about datascubbing, [linkToDocs].', {
+              linkToDocs: (
+                <Link
+                  href="https://docs.sentry.io/data-management/advanced-datascrubbing/"
+                  target="_blank"
+                >
+                  {t('read the docs.')}
+                </Link>
+              ),
+            })}
           </PanelAlert>
           <PanelBody>
             {rules.map(rule => (
@@ -268,14 +268,15 @@ class DataPrivacyRulesPanel extends React.Component<Props, State> {
               />
             ))}
             <PanelAction>
-              <StyledButton
+              <StyledLink
                 disabled={disabled}
                 icon={<IconAdd circle />}
                 onClick={this.handleAddRule}
+                size="zero"
                 borderless
               >
                 {t('Add Rule')}
-              </StyledButton>
+              </StyledLink>
             </PanelAction>
           </PanelBody>
         </Panel>
@@ -301,29 +302,20 @@ const StyledPanelHeader = styled(PanelHeader)`
   grid-gap: ${space(1)};
 `;
 
-const PanelHeaderSubTitle = styled('div')`
-  color: ${p => p.theme.gray2};
-  font-size: ${p => p.theme.fontSizeMedium};
-  line-height: 1.4;
-  text-transform: initial;
-  font-weight: normal;
-`;
-
 const PanelAction = styled('div')`
   padding: ${space(2)} ${space(3)};
 `;
 
-// TODO(style): color #2c58a8 not yet in the theme
-const StyledButton = styled(Button)`
-  color: ${p => (p.disabled ? p.theme.disabled : p.theme.blue)};
-  :hover {
-    color: ${p => (p.disabled ? p.theme.disabled : '#2c58a8')};
-  }
-  > *:first-child {
-    padding: 0;
-  }
-`;
-
 const StyledButtonBar = styled(ButtonBar)`
   justify-content: flex-end;
 `;
+
+const StyledLink = styled(Button)`
+  color: ${p => p.theme.blue};
+
+  &:hover,
+  &:active,
+  &:focus {
+    color: ${p => p.theme.blueDark};
+  }
+`;
diff --git a/src/sentry/static/sentry/app/views/settings/components/dataPrivacyRulesPanel/dataPrivacyRulesPanelForm.tsx b/src/sentry/static/sentry/app/views/settings/components/dataPrivacyRulesPanel/dataPrivacyRulesPanelForm.tsx
index c853a947ef..79ea2def10 100644
--- a/src/sentry/static/sentry/app/views/settings/components/dataPrivacyRulesPanel/dataPrivacyRulesPanelForm.tsx
+++ b/src/sentry/static/sentry/app/views/settings/components/dataPrivacyRulesPanel/dataPrivacyRulesPanelForm.tsx
@@ -170,16 +170,18 @@ const Wrapper = styled('div')<{hasError?: boolean}>`
   grid-gap: ${space(2)};
   grid-template-columns: 1fr 40px;
   align-items: center;
-  border-bottom: 1px solid ${p => p.theme.offWhite2};
+  border-bottom: 1px solid ${p => p.theme.borderDark};
 `;
 
 const WrapperFields = styled('div')`
   display: grid;
   grid-gap: ${space(2)};
-  align-items: flex-start;
+  align-items: center;
+  justify-items: start;
 
   @media (min-width: ${p => p.theme.breakpoints[2]}) {
     grid-template-columns: minmax(157px, 1fr) minmax(300px, 1fr);
+    justify-items: end;
   }
 
   @media (min-width: ${p => p.theme.breakpoints[3]}) {
@@ -187,13 +189,11 @@ const WrapperFields = styled('div')`
         300px,
         1fr
       );
+    justify-items: start;
   }
 `;
 
 const From = styled('div')<{disabled?: boolean}>`
-  height: 40px;
-  display: flex;
-  align-items: center;
   color: ${p => (p.disabled ? p.theme.disabled : p.theme.gray5)};
 `;
 
@@ -229,6 +229,7 @@ const CustomRegularExpression = styled(StyledTextField)`
 `;
 
 const StyledIconTrash = styled(Button)`
+  color: ${p => p.theme.gray3};
   width: 40px;
   height: 100%;
 `;
diff --git a/src/sentry/static/sentry/app/views/settings/organizationSecurityAndPrivacy/organizationSecurityAndPrivacyContent.tsx b/src/sentry/static/sentry/app/views/settings/organizationSecurityAndPrivacy/organizationSecurityAndPrivacyContent.tsx
index 32f4912207..21f4259888 100644
--- a/src/sentry/static/sentry/app/views/settings/organizationSecurityAndPrivacy/organizationSecurityAndPrivacyContent.tsx
+++ b/src/sentry/static/sentry/app/views/settings/organizationSecurityAndPrivacy/organizationSecurityAndPrivacyContent.tsx
@@ -77,7 +77,7 @@ class OrganizationSecurityAndPrivacyContent extends AsyncView<Props> {
           />
         </Form>
         <DataPrivacyRulesPanel
-          panelHeaderSubTitle={t('This can also be configured per-project')}
+          additionalContext={t('These rules can be configured for each project. ')}
           endpoint={endpoint}
           relayPiiConfig={relayPiiConfig}
           disabled={!access.has('org:write')}
diff --git a/src/sentry/static/sentry/app/views/settings/projectDataPrivacy/projectDataPrivacyContent.tsx b/src/sentry/static/sentry/app/views/settings/projectDataPrivacy/projectDataPrivacyContent.tsx
index 3e3d93c7e1..ca6857c83e 100644
--- a/src/sentry/static/sentry/app/views/settings/projectDataPrivacy/projectDataPrivacyContent.tsx
+++ b/src/sentry/static/sentry/app/views/settings/projectDataPrivacy/projectDataPrivacyContent.tsx
@@ -1,6 +1,5 @@
 import React from 'react';
 import PropTypes from 'prop-types';
-import styled from '@emotion/styled';
 
 import Link from 'app/components/links/link';
 import {t, tct} from 'app/locale';
@@ -77,19 +76,19 @@ class ProjectDataPrivacyContent extends AsyncView<Props> {
           />
         </Form>
         <DataPrivacyRulesPanel
-          panelHeaderSubTitle={
-            <PanelHeaderSubTitle>
+          additionalContext={
+            <span>
               {tct(
-                'This can also be configured organization-wide in [linkToOrganizationSecurityAndPrivacy]',
+                'These rules can be configured at the organization level in [linkToOrganizationSecurityAndPrivacy]',
                 {
                   linkToOrganizationSecurityAndPrivacy: (
                     <Link to={`/settings/${orgId}/security-and-privacy/`}>
-                      {t('Organization Security and Privacy')}
+                      {t('Security and Privacy. ')}
                     </Link>
                   ),
                 }
               )}
-            </PanelHeaderSubTitle>
+            </span>
           }
           endpoint={endpoint}
           relayPiiConfig={relayPiiConfig}
@@ -101,9 +100,3 @@ class ProjectDataPrivacyContent extends AsyncView<Props> {
 }
 
 export default ProjectDataPrivacyContent;
-
-const PanelHeaderSubTitle = styled('div')`
-  display: grid;
-  grid-gap: 4px;
-  grid-template-columns: auto 1fr;
-`;
