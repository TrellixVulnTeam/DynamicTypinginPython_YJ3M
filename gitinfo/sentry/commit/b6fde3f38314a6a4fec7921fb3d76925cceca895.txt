commit b6fde3f38314a6a4fec7921fb3d76925cceca895
Author: MeredithAnya <meredith.a.heller@gmail.com>
Date:   Fri Jul 27 08:35:13 2018 -0700

    ref(ui): Various clean up for new issue ui (#9216)
    
    * ref(ui): Various clean up for new issue ui

diff --git a/src/sentry/api/serializers/models/integration.py b/src/sentry/api/serializers/models/integration.py
index 40ac66fce2..06087b3ecd 100644
--- a/src/sentry/api/serializers/models/integration.py
+++ b/src/sentry/api/serializers/models/integration.py
@@ -184,12 +184,13 @@ class IntegrationIssueSerializer(IntegrationSerializer):
         )
 
         issues_by_integration = defaultdict(list)
+        ints_by_id = {i.id: i for i in item_list}
         for ei in external_issues:
             # TODO(jess): move into an external issue serializer?
             issues_by_integration[ei.integration_id].append({
                 'id': six.text_type(ei.id),
                 'key': ei.key,
-                'url': [i.get_installation(self.group.organization.id).get_issue_url(ei.key) for i in item_list if i.id == ei.integration_id][0],
+                'url': ints_by_id[ei.integration_id].get_installation(self.group.organization.id).get_issue_url(ei.key),
                 'title': ei.title,
                 'description': ei.description,
             })
diff --git a/src/sentry/integrations/example/integration.py b/src/sentry/integrations/example/integration.py
index e933950db0..235ce82789 100644
--- a/src/sentry/integrations/example/integration.py
+++ b/src/sentry/integrations/example/integration.py
@@ -50,7 +50,7 @@ class ExampleIntegration(Integration, IssueSyncMixin):
     outbound_assignee_key = 'sync_assignee_outbound'
     inbound_assignee_key = 'sync_assignee_inbound'
 
-    def get_issue_url(self, key, **kwargs):
+    def get_issue_url(self, key):
         return 'https://example/issues/{}'.format(key)
 
     def create_comment(self):
diff --git a/src/sentry/integrations/github/issues.py b/src/sentry/integrations/github/issues.py
index 43b3b7924d..e70dcbe9e8 100644
--- a/src/sentry/integrations/github/issues.py
+++ b/src/sentry/integrations/github/issues.py
@@ -9,7 +9,7 @@ class GitHubIssueBasic(IssueBasicMixin):
     def make_external_key(self, data):
         return '{}#{}'.format(data['repo'], data['key'])
 
-    def get_issue_url(self, key, **kwargs):
+    def get_issue_url(self, key):
         domain_name, user = self.model.metadata['domain_name'].split('/')
         repo, issue_id = key.split('#')
         return "https://{}/{}/issues/{}".format(domain_name, repo, issue_id)
diff --git a/src/sentry/integrations/issues.py b/src/sentry/integrations/issues.py
index adeb93751a..c292c77f58 100644
--- a/src/sentry/integrations/issues.py
+++ b/src/sentry/integrations/issues.py
@@ -15,7 +15,7 @@ class IssueBasicMixin(object):
     def get_group_title(self, group, event, **kwargs):
         return event.error()
 
-    def get_issue_url(self, key, **kwargs):
+    def get_issue_url(self, key):
         """
         Given the key of the external_issue return the external issue link.
         """
diff --git a/src/sentry/static/sentry/app/components/group/externalIssueActions.jsx b/src/sentry/static/sentry/app/components/group/externalIssueActions.jsx
index 7a163c7a47..78e6e64dc4 100644
--- a/src/sentry/static/sentry/app/components/group/externalIssueActions.jsx
+++ b/src/sentry/static/sentry/app/components/group/externalIssueActions.jsx
@@ -255,19 +255,14 @@ class ExternalIssueActions extends AsyncComponent {
               </li>
             </ul>
             <Modal.Body>
-              {action === 'create' && (
+              {action && (
                 <ExternalIssueForm
+                  // need the key here so React will re-render
+                  // with a new action prop
+                  key={action}
                   group={this.props.group}
                   integration={selectedIntegration}
-                  action={'create'}
-                  onSubmitSuccess={this.closeModal}
-                />
-              )}
-              {action === 'link' && (
-                <ExternalIssueForm
-                  group={this.props.group}
-                  integration={selectedIntegration}
-                  action={'link'}
+                  action={action}
                   onSubmitSuccess={this.closeModal}
                 />
               )}
diff --git a/src/sentry/static/sentry/app/components/group/externalIssuesList.jsx b/src/sentry/static/sentry/app/components/group/externalIssuesList.jsx
index 623dfd2443..fa497b7e0f 100644
--- a/src/sentry/static/sentry/app/components/group/externalIssuesList.jsx
+++ b/src/sentry/static/sentry/app/components/group/externalIssuesList.jsx
@@ -48,7 +48,7 @@ class ExternalIssueList extends AsyncComponent {
   renderPluginActions() {
     const {group} = this.props;
 
-    return group.pluginActions && group.pluginActions.length
+    return group.pluginActions
       ? group.pluginActions.map((plugin, i) => {
           return (
             <IssueSyncListElement externalIssueLink={plugin[1]} key={i}>
@@ -61,16 +61,14 @@ class ExternalIssueList extends AsyncComponent {
 
   renderBody() {
     return (
-      <React.Fragment>
-        <div className="m-b-2">
-          <h6>
-            <span>Linked Issues</span>
-          </h6>
-          {this.renderIntegrationIssues(this.state.integrations)}
-          {this.renderPluginIssues()}
-          {this.renderPluginActions()}
-        </div>
-      </React.Fragment>
+      <div className="m-b-2">
+        <h6>
+          <span>Linked Issues</span>
+        </h6>
+        {this.renderIntegrationIssues(this.state.integrations)}
+        {this.renderPluginIssues()}
+        {this.renderPluginActions()}
+      </div>
     );
   }
 }
diff --git a/src/sentry/static/sentry/app/components/group/pluginActions.jsx b/src/sentry/static/sentry/app/components/group/pluginActions.jsx
index 8e2c9ffb58..986bb39319 100644
--- a/src/sentry/static/sentry/app/components/group/pluginActions.jsx
+++ b/src/sentry/static/sentry/app/components/group/pluginActions.jsx
@@ -39,12 +39,6 @@ const PluginActions = createReactClass({
     }
   },
 
-  ACTION_LABELS: {
-    create: t('Create New Issue'),
-    link: t('Link with Existing Issue'),
-    unlink: t('Unlink Issue'),
-  },
-
   deleteIssue() {
     const plugin = {
       ...this.props.plugin,
@@ -92,10 +86,8 @@ const PluginActions = createReactClass({
     });
   },
 
-  handleClick(evt) {
-    this.setState({
-      actionType: evt.target.id,
-    });
+  handleClick(actionType) {
+    this.setState({actionType});
   },
 
   render() {
@@ -126,38 +118,24 @@ const PluginActions = createReactClass({
             style={{borderBottom: '1px solid rgb(221, 221, 221)'}}
           >
             <li className={actionType == 'create' ? 'active' : ''}>
-              <a id="create" onClick={this.handleClick}>
-                Create
-              </a>
+              <a onClick={() => this.handleClick('create')}>{t('Create')}</a>
             </li>
             <li className={actionType == 'link' ? 'active' : ''}>
-              <a id="link" onClick={this.handleClick}>
-                Link
-              </a>
+              <a onClick={() => this.handleClick('link')}>{t('Link')}</a>
             </li>
           </ul>
-          {this.state.showModal && actionType == 'create' &&
-            !this.state.pluginLoading && (
-              <Modal.Body>
-                {plugins.get(plugin).renderGroupActions({
-                  plugin,
-                  group: this.getGroup(),
-                  project: this.getProject(),
-                  organization: this.getOrganization(),
-                  actionType: 'create',
-                  onSuccess: this.closeModal,
-                })}
-              </Modal.Body>
-            )}
-          {this.state.showModal && actionType == 'link' &&
+          {this.state.showModal &&
+            actionType &&
             !this.state.pluginLoading && (
-              <Modal.Body>
+              // need the key here so React will re-render
+              // with new action prop
+              <Modal.Body key={actionType}>
                 {plugins.get(plugin).renderGroupActions({
                   plugin,
                   group: this.getGroup(),
                   project: this.getProject(),
                   organization: this.getOrganization(),
-                  actionType: 'link',
+                  actionType,
                   onSuccess: this.closeModal,
                 })}
               </Modal.Body>
