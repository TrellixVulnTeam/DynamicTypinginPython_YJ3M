commit fe8e9a2474876a00a933f63247643ca34f2e6bc9
Author: evanh <evanh@users.noreply.github.com>
Date:   Fri Mar 6 09:38:49 2020 -0500

    fix(discover) Fix some errors with issue alias (#17479)
    
    If the user requests the issue field and receives data where the issue no longer
    exists (deleted or merged etc) then it will now show the issue as "unknown".
    Also fix a bug with sorting on the issue name.

diff --git a/src/sentry/api/endpoints/organization_events.py b/src/sentry/api/endpoints/organization_events.py
index 4af3f964d9..125e50f3f8 100644
--- a/src/sentry/api/endpoints/organization_events.py
+++ b/src/sentry/api/endpoints/organization_events.py
@@ -228,7 +228,7 @@ class OrganizationEventsV2Endpoint(OrganizationEventsEndpointBase):
             }
             for result in results:
                 if "issue.id" in result:
-                    result["issue"] = issues[result["issue.id"]]
+                    result["issue"] = issues.get(result["issue.id"], "unknown")
 
         if not ("project.id" in first_row or "projectid" in first_row):
             return results
diff --git a/src/sentry/api/event_search.py b/src/sentry/api/event_search.py
index ee3a854a13..155cbfc241 100644
--- a/src/sentry/api/event_search.py
+++ b/src/sentry/api/event_search.py
@@ -1168,6 +1168,12 @@ def resolve_orderby(orderby, fields, aggregations):
         if found:
             prefix = "-" if column.startswith("-") else ""
             validated.append(prefix + bare_column)
+            continue
+
+        if bare_column in FIELD_ALIASES and FIELD_ALIASES[bare_column].get("column_alias"):
+            prefix = "-" if column.startswith("-") else ""
+            validated.append(prefix + FIELD_ALIASES[bare_column]["column_alias"])
+            continue
 
     if len(validated) == len(orderby):
         return validated
diff --git a/tests/snuba/api/endpoints/test_organization_events_v2.py b/tests/snuba/api/endpoints/test_organization_events_v2.py
index b8dd23f18c..44fa493f80 100644
--- a/tests/snuba/api/endpoints/test_organization_events_v2.py
+++ b/tests/snuba/api/endpoints/test_organization_events_v2.py
@@ -1927,3 +1927,30 @@ class OrganizationEventsV2EndpointTest(APITestCase, SnubaTestCase):
             data = response.data["data"]
             assert len(data) == 1
             assert data[0]["count_unique_issue"] == 2
+
+    def test_deleted_issue_in_results(self):
+        self.login_as(user=self.user)
+
+        project = self.create_project()
+        event1 = self.store_event(
+            data={"event_id": "a" * 32, "timestamp": self.two_min_ago, "fingerprint": ["group_1"]},
+            project_id=project.id,
+        )
+        event2 = self.store_event(
+            data={"event_id": "b" * 32, "timestamp": self.min_ago, "fingerprint": ["group_2"]},
+            project_id=project.id,
+        )
+        event2.group.delete()
+
+        with self.feature(
+            {"organizations:discover-basic": True, "organizations:global-views": True}
+        ):
+            response = self.client.get(
+                self.url, format="json", data={"field": ["issue", "count()"], "sort": "issue"}
+            )
+
+            assert response.status_code == 200, response.content
+            data = response.data["data"]
+            assert len(data) == 2
+            assert data[0]["issue"] == event1.group.qualified_short_id
+            assert data[1]["issue"] == "unknown"
