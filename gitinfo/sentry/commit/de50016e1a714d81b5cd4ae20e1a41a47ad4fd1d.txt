commit de50016e1a714d81b5cd4ae20e1a41a47ad4fd1d
Author: Jess MacQueen <macqueen@users.noreply.github.com>
Date:   Thu Jul 19 15:20:34 2018 -0700

    feat(jira): Support outbound status sync (#9114)

diff --git a/src/sentry/integrations/jira/client.py b/src/sentry/integrations/jira/client.py
index d8f143ec15..b2a0b90a54 100644
--- a/src/sentry/integrations/jira/client.py
+++ b/src/sentry/integrations/jira/client.py
@@ -35,6 +35,7 @@ class JiraApiClient(ApiClient):
     USERS_URL = '/rest/api/2/user/assignable/search'
     SERVER_INFO_URL = '/rest/api/2/serverInfo'
     ASSIGN_URL = '/rest/api/2/issue/%s/assignee'
+    TRANSITION_URL = '/rest/api/2/issue/%s/transitions'
 
     def __init__(self, base_url, shared_secret):
         self.base_url = base_url
@@ -142,5 +143,13 @@ class JiraApiClient(ApiClient):
     def get_valid_statuses(self):
         return self.request('GET', self.STATUS_URL)
 
+    def get_transitions(self, issue_key):
+        return self.get(self.TRANSITION_URL % issue_key)['transitions']
+
+    def transition_issue(self, issue_key, transition_id):
+        return self.post(self.TRANSITION_URL % issue_key, {
+            'transition': {'id': transition_id},
+        })
+
     def assign_issue(self, key, username):
         return self.put(self.ASSIGN_URL % key, data={'name': username})
diff --git a/src/sentry/integrations/jira/integration.py b/src/sentry/integrations/jira/integration.py
index 20d042ef57..303a27750e 100644
--- a/src/sentry/integrations/jira/integration.py
+++ b/src/sentry/integrations/jira/integration.py
@@ -11,6 +11,7 @@ from sentry.integrations import (
 )
 from sentry.integrations.exceptions import ApiUnauthorized, ApiError, IntegrationError
 from sentry.integrations.issues import IssueSyncMixin
+from sentry.models import IntegrationExternalProject, OrganizationIntegration
 from sentry.utils.http import absolute_uri
 
 from .client import JiraApiClient
@@ -505,12 +506,59 @@ class JiraIntegration(Integration, IssueSyncMixin):
             logger.info(
                 'jira.failed-to-assign',
                 extra={
+                    'organization_id': external_issue.organization_id,
                     'integration_id': external_issue.integration_id,
                     'user_id': user.id,
                     'issue_key': external_issue.key,
                 }
             )
 
+    def sync_status_outbound(self, external_issue, is_resolved, project_id, **kwargs):
+        """
+        Propagate a sentry issue's status to a linked issue's status.
+        """
+        client = self.get_client()
+        jira_issue = client.get_issue(external_issue.key)
+        jira_project = jira_issue['fields']['project']
+
+        try:
+            external_project = IntegrationExternalProject.objects.get(
+                external_id=jira_project['id'],
+                organization_integration_id__in=OrganizationIntegration.objects.filter(
+                    organization_id=external_issue.organization_id,
+                    integration_id=external_issue.integration_id,
+                )
+            )
+        except IntegrationExternalProject.DoesNotExist:
+            return
+
+        jira_status = external_project.resolved_status if \
+            is_resolved else external_project.unresolved_status
+
+        # don't bother updating if it's already the status we'd change it to
+        if jira_issue['fields']['status']['id'] == jira_status:
+            return
+
+        transitions = client.get_transitions(external_issue.key)
+
+        try:
+            transition = [
+                t for t in transitions if t['to']['id'] == jira_status
+            ][0]
+        except IndexError:
+            # TODO(jess): Email for failure
+            logger.warning(
+                'jira.status-sync-fail',
+                extra={
+                    'organization_id': external_issue.organization_id,
+                    'integration_id': external_issue.integration_id,
+                    'issue_key': external_issue.key,
+                }
+            )
+            return
+
+        client.transition_issue(external_issue.key, transition['id'])
+
 
 class JiraIntegrationProvider(IntegrationProvider):
     key = 'jira'
diff --git a/tests/sentry/integrations/jira/test_integration.py b/tests/sentry/integrations/jira/test_integration.py
index 649bbee079..956c5cd29f 100644
--- a/tests/sentry/integrations/jira/test_integration.py
+++ b/tests/sentry/integrations/jira/test_integration.py
@@ -5,7 +5,9 @@ import mock
 
 from django.core.urlresolvers import reverse
 
-from sentry.models import Integration
+from sentry.models import (
+    ExternalIssue, Integration, IntegrationExternalProject, OrganizationIntegration
+)
 from sentry.testutils import APITestCase
 from sentry.utils.http import absolute_uri
 
@@ -95,197 +97,241 @@ SAMPLE_PROJECT_LIST_RESPONSE = """
 
 SAMPLE_GET_ISSUE_RESPONSE = """
 {
-  "id": "10002",
-  "self": "http://www.example.com/jira/rest/api/2/issue/10002",
-  "key": "EX-1",
-  "fields": {
-    "watcher": {
-      "self": "http://www.example.com/jira/rest/api/2/issue/EX-1/watchers",
-      "isWatching": false,
-      "watchCount": 1,
-      "watchers": [
-        {
-          "self": "http://www.example.com/jira/rest/api/2/user?username=fred",
-          "name": "fred",
-          "displayName": "Fred F. User",
-          "active": false
-        }
-      ]
-    },
-    "attachment": [
-      {
-        "id": 10001,
-        "self": "http://www.example.com/jira/rest/api/2.0/attachments/10000",
-        "filename": "picture.jpg",
-        "author": {
-          "self": "http://www.example.com/jira/rest/api/2/user?username=fred",
-          "key": "fred",
-          "accountId": "99:27935d01-92a7-4687-8272-a9b8d3b2ae2e",
-          "name": "fred",
-          "avatarUrls": {
-            "48x48": "http://www.example.com/jira/secure/useravatar?size=large&ownerId=fred",
-            "24x24": "http://www.example.com/jira/secure/useravatar?size=small&ownerId=fred",
-            "16x16": "http://www.example.com/jira/secure/useravatar?size=xsmall&ownerId=fred",
-            "32x32": "http://www.example.com/jira/secure/useravatar?size=medium&ownerId=fred"
-          },
-          "displayName": "Fred F. User",
-          "active": false
+    "expand": "renderedFields,names,schema,operations,editmeta,changelog,versionedRepresentations",
+    "fields": {
+        "aggregateprogress": {
+            "progress": 0,
+            "total": 0
         },
-        "created": "2018-05-19T01:17:45.901+0000",
-        "size": 23123,
-        "mimeType": "image/jpeg",
-        "content": "http://www.example.com/jira/attachments/10000",
-        "thumbnail": "http://www.example.com/jira/secure/thumbnail/10000"
-      }
-    ],
-    "sub-tasks": [
-      {
-        "id": "10000",
-        "type": {
-          "id": "10000",
-          "name": "",
-          "inward": "Parent",
-          "outward": "Sub-task"
+        "aggregatetimeestimate": null,
+        "aggregatetimeoriginalestimate": null,
+        "aggregatetimespent": null,
+        "assignee": null,
+        "attachment": [],
+        "comment": {
+            "comments": [],
+            "maxResults": 0,
+            "startAt": 0,
+            "total": 0
         },
-        "outwardIssue": {
-          "id": "10003",
-          "key": "EX-2",
-          "self": "http://www.example.com/jira/rest/api/2/issue/EX-2",
-          "fields": {
-            "status": {
-              "iconUrl": "http://www.example.com/jira//images/icons/statuses/open.png",
-              "name": "Open"
-            }
-          }
-        }
-      }
-    ],
-    "description": "example bug report",
-    "summary": "example summary",
-    "project": {
-      "self": "http://www.example.com/jira/rest/api/2/project/EX",
-      "id": "10000",
-      "key": "EX",
-      "name": "Example",
-      "avatarUrls": {
-        "48x48": "http://www.example.com/jira/secure/projectavatar?size=large&pid=10000",
-        "24x24": "http://www.example.com/jira/secure/projectavatar?size=small&pid=10000",
-        "16x16": "http://www.example.com/jira/secure/projectavatar?size=xsmall&pid=10000",
-        "32x32": "http://www.example.com/jira/secure/projectavatar?size=medium&pid=10000"
-      },
-      "projectCategory": {
-        "self": "http://www.example.com/jira/rest/api/2/projectCategory/10000",
-        "id": "10000",
-        "name": "FIRST",
-        "description": "First Project Category"
-      },
-      "simplified": false
-    },
-    "comment": [
-      {
-        "self": "http://www.example.com/jira/rest/api/2/issue/10010/comment/10000",
-        "id": "10000",
-        "author": {
-          "self": "http://www.example.com/jira/rest/api/2/user?username=fred",
-          "name": "fred",
-          "displayName": "Fred F. User",
-          "active": false
+        "components": [],
+        "created": "2018-06-15T11:47:57.111-0700",
+        "creator": {
+            "accountId": "5ada5260ba41192e23d7c924",
+            "active": true,
+            "avatarUrls": {
+                "16x16": "https://avatar-cdn.atlassian.com/a2f1a9a289088349aecc98a4fc6eff2b?s=16&d=https%3A%2F%2Fsecure.gravatar.com%2Favatar%2Fa2f1a9a289088349aecc98a4fc6eff2b%3Fd%3Dmm%26s%3D16%26noRedirect%3Dtrue",
+                "24x24": "https://avatar-cdn.atlassian.com/a2f1a9a289088349aecc98a4fc6eff2b?s=24&d=https%3A%2F%2Fsecure.gravatar.com%2Favatar%2Fa2f1a9a289088349aecc98a4fc6eff2b%3Fd%3Dmm%26s%3D24%26noRedirect%3Dtrue",
+                "32x32": "https://avatar-cdn.atlassian.com/a2f1a9a289088349aecc98a4fc6eff2b?s=32&d=https%3A%2F%2Fsecure.gravatar.com%2Favatar%2Fa2f1a9a289088349aecc98a4fc6eff2b%3Fd%3Dmm%26s%3D32%26noRedirect%3Dtrue",
+                "48x48": "https://avatar-cdn.atlassian.com/a2f1a9a289088349aecc98a4fc6eff2b?s=48&d=https%3A%2F%2Fsecure.gravatar.com%2Favatar%2Fa2f1a9a289088349aecc98a4fc6eff2b%3Fd%3Dmm%26s%3D48%26noRedirect%3Dtrue"
+            },
+            "displayName": "Sentry",
+            "emailAddress": "example.io.jira@connect.atlassian.com",
+            "key": "addon_example.io.jira",
+            "name": "addon_example.io.jira",
+            "self": "https://getsentry-dev.atlassian.net/rest/api/2/user?username=addon_example.io.jira",
+            "timeZone": "America/Los_Angeles"
         },
-        "body": "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque eget venenatis elit. Duis eu justo eget augue iaculis fermentum. Sed semper quam laoreet nisi egestas at posuere augue semper.",
-        "updateAuthor": {
-          "self": "http://www.example.com/jira/rest/api/2/user?username=fred",
-          "name": "fred",
-          "displayName": "Fred F. User",
-          "active": false
+        "customfield_10000": null,
+        "customfield_10001": null,
+        "customfield_10002": null,
+        "customfield_10006": [],
+        "customfield_10007": "0|i000b3:",
+        "customfield_10008": null,
+        "customfield_10009": [],
+        "customfield_10010": null,
+        "customfield_10011": null,
+        "customfield_10012": null,
+        "customfield_10026": null,
+        "customfield_10027": null,
+        "customfield_10028": null,
+        "customfield_10100": null,
+        "customfield_10200": "{}",
+        "customfield_10400": null,
+        "customfield_10500": null,
+        "customfield_10600": null,
+        "customfield_10601": null,
+        "customfield_10602": null,
+        "customfield_10603": null,
+        "customfield_10604": null,
+        "customfield_10605": null,
+        "customfield_10701": null,
+        "customfield_10702": null,
+        "description": "example bug report",
+        "duedate": null,
+        "environment": null,
+        "fixVersions": [],
+        "issuelinks": [],
+        "issuetype": {
+            "avatarId": 10318,
+            "description": "A task that needs to be done.",
+            "iconUrl": "https://getsentry-dev.atlassian.net/secure/viewavatar?size=xsmall&avatarId=10318&avatarType=issuetype",
+            "id": "10200",
+            "name": "Task",
+            "self": "https://getsentry-dev.atlassian.net/rest/api/2/issuetype/10200",
+            "subtask": false
         },
-        "created": "2018-05-19T01:17:45.902+0000",
-        "updated": "2018-05-19T01:17:45.902+0000",
-        "visibility": {
-          "type": "role",
-          "value": "Administrators"
-        }
-      }
-    ],
-    "issuelinks": [
-      {
-        "id": "10001",
-        "type": {
-          "id": "10000",
-          "name": "Dependent",
-          "inward": "depends on",
-          "outward": "is depended by"
+        "labels": [],
+        "lastViewed": null,
+        "priority": {
+            "iconUrl": "https://getsentry-dev.atlassian.net/images/icons/priorities/medium.svg",
+            "id": "3",
+            "name": "Medium",
+            "self": "https://getsentry-dev.atlassian.net/rest/api/2/priority/3"
         },
-        "outwardIssue": {
-          "id": "10004L",
-          "key": "PRJ-2",
-          "self": "http://www.example.com/jira/rest/api/2/issue/PRJ-2",
-          "fields": {
-            "status": {
-              "iconUrl": "http://www.example.com/jira//images/icons/statuses/open.png",
-              "name": "Open"
-            }
-          }
-        }
-      },
-      {
-        "id": "10002",
-        "type": {
-          "id": "10000",
-          "name": "Dependent",
-          "inward": "depends on",
-          "outward": "is depended by"
+        "progress": {
+            "progress": 0,
+            "total": 0
         },
-        "inwardIssue": {
-          "id": "10004",
-          "key": "PRJ-3",
-          "self": "http://www.example.com/jira/rest/api/2/issue/PRJ-3",
-          "fields": {
-            "status": {
-              "iconUrl": "http://www.example.com/jira//images/icons/statuses/open.png",
-              "name": "Open"
+        "project": {
+            "avatarUrls": {
+                "16x16": "https://getsentry-dev.atlassian.net/secure/projectavatar?size=xsmall&avatarId=10324",
+                "24x24": "https://getsentry-dev.atlassian.net/secure/projectavatar?size=small&avatarId=10324",
+                "32x32": "https://getsentry-dev.atlassian.net/secure/projectavatar?size=medium&avatarId=10324",
+                "48x48": "https://getsentry-dev.atlassian.net/secure/projectavatar?avatarId=10324"
+            },
+            "id": "10100",
+            "key": "SEN",
+            "name": "sentry",
+            "projectTypeKey": "software",
+            "self": "https://getsentry-dev.atlassian.net/rest/api/2/project/10100"
+        },
+        "reporter": {
+            "accountId": "557058:2b9b2878-fb9d-48b2-a166-86c179604206",
+            "active": true,
+            "avatarUrls": {
+                "16x16": "https://avatar-cdn.atlassian.com/d8bd4a393e73ee8e17b54afba66af5e8?s=16&d=https%3A%2F%2Fsecure.gravatar.com%2Favatar%2Fd8bd4a393e73ee8e17b54afba66af5e8%3Fd%3Dmm%26s%3D16%26noRedirect%3Dtrue",
+                "24x24": "https://avatar-cdn.atlassian.com/d8bd4a393e73ee8e17b54afba66af5e8?s=24&d=https%3A%2F%2Fsecure.gravatar.com%2Favatar%2Fd8bd4a393e73ee8e17b54afba66af5e8%3Fd%3Dmm%26s%3D24%26noRedirect%3Dtrue",
+                "32x32": "https://avatar-cdn.atlassian.com/d8bd4a393e73ee8e17b54afba66af5e8?s=32&d=https%3A%2F%2Fsecure.gravatar.com%2Favatar%2Fd8bd4a393e73ee8e17b54afba66af5e8%3Fd%3Dmm%26s%3D32%26noRedirect%3Dtrue",
+                "48x48": "https://avatar-cdn.atlassian.com/d8bd4a393e73ee8e17b54afba66af5e8?s=48&d=https%3A%2F%2Fsecure.gravatar.com%2Favatar%2Fd8bd4a393e73ee8e17b54afba66af5e8%3Fd%3Dmm%26s%3D48%26noRedirect%3Dtrue"
+            },
+            "displayName": "Jess MacQueen",
+            "emailAddress": "jess@sentry.io",
+            "key": "admin",
+            "name": "admin",
+            "self": "https://getsentry-dev.atlassian.net/rest/api/2/user?username=admin",
+            "timeZone": "America/Los_Angeles"
+        },
+        "resolution": null,
+        "resolutiondate": null,
+        "security": null,
+        "status": {
+            "description": "",
+            "iconUrl": "https://getsentry-dev.atlassian.net/",
+            "id": "10100",
+            "name": "To Do",
+            "self": "https://getsentry-dev.atlassian.net/rest/api/2/status/10100",
+            "statusCategory": {
+                "colorName": "blue-gray",
+                "id": 2,
+                "key": "new",
+                "name": "To Do",
+                "self": "https://getsentry-dev.atlassian.net/rest/api/2/statuscategory/2"
             }
-          }
-        }
-      }
-    ],
-    "worklog": [
-      {
-        "self": "http://www.example.com/jira/rest/api/2/issue/10010/worklog/10000",
-        "author": {
-          "self": "http://www.example.com/jira/rest/api/2/user?username=fred",
-          "name": "fred",
-          "displayName": "Fred F. User",
-          "active": false
         },
-        "updateAuthor": {
-          "self": "http://www.example.com/jira/rest/api/2/user?username=fred",
-          "name": "fred",
-          "displayName": "Fred F. User",
-          "active": false
+        "subtasks": [],
+        "summary": "example summary",
+        "timeestimate": null,
+        "timeoriginalestimate": null,
+        "timespent": null,
+        "timetracking": {},
+        "updated": "2018-06-28T14:12:29.014-0700",
+        "versions": [],
+        "votes": {
+            "hasVoted": false,
+            "self": "https://getsentry-dev.atlassian.net/rest/api/2/issue/SEN-5/votes",
+            "votes": 0
         },
-        "comment": "I did some work here.",
-        "updated": "2018-05-19T01:17:45.905+0000",
-        "visibility": {
-          "type": "group",
-          "value": "jira-developers"
+        "watches": {
+            "isWatching": true,
+            "self": "https://getsentry-dev.atlassian.net/rest/api/2/issue/SEN-5/watchers",
+            "watchCount": 1
         },
-        "started": "2018-05-19T01:17:45.905+0000",
-        "timeSpent": "3h 20m",
-        "timeSpentSeconds": 12000,
-        "id": "100028",
-        "issueId": "10002"
-      }
-    ],
-    "updated": 1,
-    "timetracking": {
-      "originalEstimate": "10m",
-      "remainingEstimate": "3m",
-      "timeSpent": "6m",
-      "originalEstimateSeconds": 600,
-      "remainingEstimateSeconds": 200,
-      "timeSpentSeconds": 400
-    }
-  }
+        "worklog": {
+            "maxResults": 20,
+            "startAt": 0,
+            "total": 0,
+            "worklogs": []
+        },
+        "workratio": -1
+    },
+    "id": "10305",
+    "key": "SEN-5",
+    "self": "https://getsentry-dev.atlassian.net/rest/api/2/issue/10305"
+}
+"""
+
+SAMPLE_TRANSITION_RESPONSE = """
+{
+    "expand": "transitions",
+    "transitions": [
+        {
+            "hasScreen": false,
+            "id": "11",
+            "isConditional": false,
+            "isGlobal": true,
+            "isInitial": false,
+            "name": "To Do",
+            "to": {
+                "description": "",
+                "iconUrl": "https://getsentry-dev.atlassian.net/",
+                "id": "10100",
+                "name": "To Do",
+                "self": "https://getsentry-dev.atlassian.net/rest/api/2/status/10100",
+                "statusCategory": {
+                    "colorName": "blue-gray",
+                    "id": 2,
+                    "key": "new",
+                    "name": "To Do",
+                    "self": "https://getsentry-dev.atlassian.net/rest/api/2/statuscategory/2"
+                }
+            }
+        },
+        {
+            "hasScreen": false,
+            "id": "21",
+            "isConditional": false,
+            "isGlobal": true,
+            "isInitial": false,
+            "name": "In Progress",
+            "to": {
+                "description": "This issue is being actively worked on at the moment by the assignee.",
+                "iconUrl": "https://getsentry-dev.atlassian.net/images/icons/statuses/inprogress.png",
+                "id": "3",
+                "name": "In Progress",
+                "self": "https://getsentry-dev.atlassian.net/rest/api/2/status/3",
+                "statusCategory": {
+                    "colorName": "yellow",
+                    "id": 4,
+                    "key": "indeterminate",
+                    "name": "In Progress",
+                    "self": "https://getsentry-dev.atlassian.net/rest/api/2/statuscategory/4"
+                }
+            }
+        },
+        {
+            "hasScreen": false,
+            "id": "31",
+            "isConditional": false,
+            "isGlobal": true,
+            "isInitial": false,
+            "name": "Done",
+            "to": {
+                "description": "",
+                "iconUrl": "https://getsentry-dev.atlassian.net/",
+                "id": "10101",
+                "name": "Done",
+                "self": "https://getsentry-dev.atlassian.net/rest/api/2/status/10101",
+                "statusCategory": {
+                    "colorName": "green",
+                    "id": 3,
+                    "key": "done",
+                    "name": "Done",
+                    "self": "https://getsentry-dev.atlassian.net/rest/api/2/statuscategory/3"
+                }
+            }
+        }
+    ]
 }
 """
 
@@ -301,11 +347,17 @@ class MockJiraApiClient(object):
         return json.loads(SAMPLE_PROJECT_LIST_RESPONSE)
 
     def get_issue(self, issue_key):
-        return json.loads(SAMPLE_GET_ISSUE_RESPONSE)
+        return json.loads(SAMPLE_GET_ISSUE_RESPONSE.strip())
 
     def create_issue(self, data):
         return {'key': 'APP-123'}
 
+    def get_transitions(self, issue_key):
+        return json.loads(SAMPLE_TRANSITION_RESPONSE)['transitions']
+
+    def transition_issue(self, issue_key, transition_id):
+        pass
+
 
 class JiraIntegrationTest(APITestCase):
     def test_get_create_issue_config(self):
@@ -407,3 +459,45 @@ class JiraIntegrationTest(APITestCase):
                 'description': 'example bug report',
                 'key': 'APP-123'
             }
+
+    def test_outbound_issue_sync(self):
+        org = self.organization
+        project = self.project
+        self.login_as(self.user)
+
+        integration = Integration.objects.create(
+            provider='jira',
+            name='Example Jira',
+        )
+        integration.add_organization(org.id)
+
+        external_issue = ExternalIssue.objects.create(
+            organization_id=org.id,
+            integration_id=integration.id,
+            key='SEN-5',
+        )
+
+        IntegrationExternalProject.objects.create(
+            external_id="10100",
+            organization_integration_id=OrganizationIntegration.objects.get(
+                organization_id=org.id,
+                integration_id=integration.id,
+            ).id,
+            resolved_status="10101",
+            unresolved_status="3",
+        )
+
+        installation = integration.get_installation(org.id)
+
+        with mock.patch.object(MockJiraApiClient, 'transition_issue') as mock_transition_issue:
+            def get_client():
+                return MockJiraApiClient()
+
+            with mock.patch.object(installation, 'get_client', get_client):
+                # test unresolve -- 21 is "in progress" transition id
+                installation.sync_status_outbound(external_issue, False, project.id)
+                mock_transition_issue.assert_called_with('SEN-5', '21')
+
+                # test resolve -- 31 is "done" transition id
+                installation.sync_status_outbound(external_issue, True, project.id)
+                mock_transition_issue.assert_called_with('SEN-5', '31')
