commit a680c0c72c6fccdddba93af78f2489289e8794b4
Author: Matt Robenolt <matt@ydekproductions.com>
Date:   Mon Feb 22 16:31:14 2016 -0800

    Refactor so renderContext doesn't return a tuple

diff --git a/src/sentry/static/sentry/app/components/events/interfaces/frame.jsx b/src/sentry/static/sentry/app/components/events/interfaces/frame.jsx
index 52575f35b1..93a5478e67 100644
--- a/src/sentry/static/sentry/app/components/events/interfaces/frame.jsx
+++ b/src/sentry/static/sentry/app/components/events/interfaces/frame.jsx
@@ -37,6 +37,23 @@ const Frame = React.createClass({
     });
   },
 
+  hasContextSource() {
+    return defined(this.props.data.context) && this.props.data.context.length;
+  },
+
+  hasExtendedSource() {
+    return this.hasContextSource() && this.props.data.context.length > 1;
+  },
+
+  hasContextVars() {
+    return !objectIsEmpty(this.props.data.vars);
+  },
+
+  isExpandable() {
+    return this.hasExtendedSource() || this.hasContextVars();
+  },
+
+
   renderOriginalSourceInfo() {
     let data = this.props.data;
 
@@ -129,10 +146,9 @@ const Frame = React.createClass({
       outerClassName += ' expanded';
     }
 
-    let hasContextSource = defined(data.context) && data.context.length;
-    let hasExtendedSource = hasContextSource && data.context.length > 1;
-    let hasContextVars = !objectIsEmpty(data.vars);
-    let expandable = hasExtendedSource || hasContextVars;
+    let hasContextSource = this.hasContextSource();
+    let hasContextVars = this.hasContextVars();
+    let expandable = this.isExpandable();
 
     if (hasContextSource || hasContextVars) {
       let startLineNo = hasContextSource ? data.context[0][0] : '';
@@ -172,7 +188,7 @@ const Frame = React.createClass({
         </ol>
       );
     }
-    return [context, expandable];
+    return context;
   },
 
   render() {
@@ -184,12 +200,12 @@ const Frame = React.createClass({
       'frame-errors': data.errors,
     });
 
-    let [context, expandable] = this.renderContext();
+    let context = this.renderContext();
 
     return (
       <li className={className}>
         <p>{this.renderTitle()}
-          {expandable ?
+          {this.isExpandable() ?
             <a
               title={t('Toggle context')}
               onClick={this.toggleContext}
