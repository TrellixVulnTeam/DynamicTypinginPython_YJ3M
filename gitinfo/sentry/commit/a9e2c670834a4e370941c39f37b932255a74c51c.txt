commit a9e2c670834a4e370941c39f37b932255a74c51c
Author: Matt Robenolt <matt@ydekproductions.com>
Date:   Fri Mar 4 14:15:38 2016 -0800

    Truncate Group.message more intelligently
    
    Prior, it was taking the first line, and chopping from there, but if
    this first line was empty, Group.message was an empty string.
    
    This change applies the same logic used elsewhere for truncating
    messages so we strip leading/trailing first.

diff --git a/src/sentry/models/group.py b/src/sentry/models/group.py
index 7b52b3799b..a7c9cbe174 100644
--- a/src/sentry/models/group.py
+++ b/src/sentry/models/group.py
@@ -150,9 +150,10 @@ class Group(Model):
             self.first_seen = self.last_seen
         if not self.active_at:
             self.active_at = self.first_seen
+        # We limit what we store for the message body
+        self.message = strip(self.message)
         if self.message:
-            # We limit what we store for the message body
-            self.message = self.message.splitlines()[0][:255]
+            self.message = truncatechars(self.message.splitlines()[0], 255)
         super(Group, self).save(*args, **kwargs)
 
     def get_absolute_url(self):
diff --git a/tests/sentry/models/test_group.py b/tests/sentry/models/test_group.py
index 427788a458..ca5c64e90f 100644
--- a/tests/sentry/models/test_group.py
+++ b/tests/sentry/models/test_group.py
@@ -118,3 +118,9 @@ class GroupTest(TestCase):
 
         group = Group.objects.get(id=group.id)
         assert group.first_release == release
+
+    def test_save_truncate_message(self):
+        assert len(self.create_group(message='x' * 300).message) == 255
+        assert self.create_group(message='\nfoo\n   ').message == 'foo'
+        assert self.create_group(message='foo').message == 'foo'
+        assert self.create_group(message='').message == ''
