commit 1b2b93bfb258838419b5b7a17b92cf55ee45602c
Author: Xavier Ordoquy <xordoquy@linovia.com>
Date:   Sun Jan 8 01:54:13 2012 +0100

    Moved the plugin configuration function in the helpers and made it site and project wide.

diff --git a/sentry/web/frontend/generic.py b/sentry/web/frontend/generic.py
index da3bdf5100..8766eb8afb 100644
--- a/sentry/web/frontend/generic.py
+++ b/sentry/web/frontend/generic.py
@@ -19,11 +19,10 @@ from django.template import RequestContext
 
 from sentry import environment
 from sentry.conf import settings
-from sentry.models import Option
 from sentry.plugins import Plugin
 from sentry.web.decorators import login_required
 from sentry.web.helpers import get_project_list, render_to_response, \
-  get_login_url
+  get_login_url, plugin_config
 
 
 @login_required
@@ -36,39 +35,6 @@ def dashboard(request):
     return render_to_response('sentry/dashboard.html', request=request)
 
 
-def _site_config(plugin, request):
-    """
-    Configure the plugin site wide.
-
-    returns a tuple composed of a redirection boolean and the content to
-    be displayed.
-    """
-
-    plugin_key = plugin.site_conf_title.lower()
-    initials = {}
-    for field in plugin.site_conf_form.base_fields:
-        key = '%s:%s' % (plugin_key, field)
-        value = Option.objects.get_value(key, None)
-        if value:
-            initials[field] = value
-
-    form = plugin.site_conf_form(
-        request.POST or None,
-        initial=initials,
-        prefix=plugin_key
-    )
-    if form.is_valid():
-        for key, value in form.cleaned_data.iteritems():
-            option_key = '%s:%s' % (plugin_key, key)
-            Option.objects.set_value(option_key, value)
-
-        return ('redirect', None)
-
-    return ('display', render_to_string(plugin.site_conf_template, {
-            'form': form,
-        }, context_instance=RequestContext(request)))
-
-
 @login_required
 def status(request):
     from sentry.views import View
@@ -78,7 +44,7 @@ def status(request):
     site_configs = []
     for name, cls in Plugin.plugins.iteritems():
         if hasattr(cls, 'site_conf_form'):
-            action, view = _site_config(cls, request)
+            action, view = plugin_config(cls, None, request)
             if action == 'redirect':
                 return redirect(request.path)
             item = {
diff --git a/sentry/web/helpers.py b/sentry/web/helpers.py
index bf83905d96..72e2ae57c9 100644
--- a/sentry/web/helpers.py
+++ b/sentry/web/helpers.py
@@ -15,7 +15,7 @@ from django.template import loader, RequestContext, Context
 
 from sentry.conf import settings
 from sentry.models import ProjectMember, Project, View, \
-  MEMBER_USER
+  MEMBER_USER, Option, ProjectOption
 
 logger = logging.getLogger('sentry.errors')
 
@@ -108,3 +108,46 @@ def render_to_response(template, context=None, request=None, status=200):
     response.status_code = status
 
     return response
+
+
+def plugin_config(plugin, project, request):
+    """
+    Configure the plugin site wide.
+
+    returns a tuple composed of a redirection boolean and the content to
+    be displayed.
+    """
+
+    plugin_key = plugin.site_conf_title.lower()
+    if project:
+        form_class = plugin.project_conf_form
+    else:
+        form_class = plugin.site_conf_form
+    initials = {}
+    for field in form_class.base_fields:
+        key = '%s:%s' % (plugin_key, field)
+        if project:
+            value = ProjectOption.objects.get_value(project, key, None)
+        else:
+            value = Option.objects.get_value(key, None)
+        if value:
+            initials[field] = value
+
+    form = form_class(
+        request.POST or None,
+        initial=initials,
+        prefix=plugin_key
+    )
+    if form.is_valid():
+        for field, value in form.cleaned_data.iteritems():
+            key = '%s:%s' % (plugin_key, field)
+            if project:
+                ProjectOption.objects.set_value(project, key, value)
+            else:
+                Option.objects.set_value(key, value)
+
+        return ('redirect', None)
+
+    return ('display', render_to_string(plugin.site_conf_template, {
+            'form': form,
+        }, context_instance=RequestContext(request)))
