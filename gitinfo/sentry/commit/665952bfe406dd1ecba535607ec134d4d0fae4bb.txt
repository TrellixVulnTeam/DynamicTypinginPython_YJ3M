commit 665952bfe406dd1ecba535607ec134d4d0fae4bb
Author: Matt Robenolt <matt@ydekproductions.com>
Date:   Thu Jun 30 20:14:48 2016 -0700

    Cleanup LOG_LEVEL_REVERSE_MAP (#3559)
    
    This was repeated in multiple places now, so move and centralize into
    constants.

diff --git a/src/sentry/constants.py b/src/sentry/constants.py
index b9eb6c4c38..5647c64759 100644
--- a/src/sentry/constants.py
+++ b/src/sentry/constants.py
@@ -89,6 +89,8 @@ LOG_LEVELS = {
 }
 DEFAULT_LOG_LEVEL = 'error'
 DEFAULT_LOGGER_NAME = ''
+LOG_LEVELS_MAP = {v: k for k, v in LOG_LEVELS.iteritems()}
+
 
 # Default alerting threshold values
 DEFAULT_ALERT_PROJECT_THRESHOLD = (500, 25)  # 500%, 25 events
diff --git a/src/sentry/coreapi.py b/src/sentry/coreapi.py
index 6ca364447d..bbf5577c09 100644
--- a/src/sentry/coreapi.py
+++ b/src/sentry/coreapi.py
@@ -25,8 +25,8 @@ from time import time
 from sentry.app import env
 from sentry.cache import default_cache
 from sentry.constants import (
-    CLIENT_RESERVED_ATTRS, DEFAULT_LOG_LEVEL, LOG_LEVELS, MAX_TAG_VALUE_LENGTH,
-    MAX_TAG_KEY_LENGTH, VALID_PLATFORMS
+    CLIENT_RESERVED_ATTRS, DEFAULT_LOG_LEVEL, LOG_LEVELS_MAP,
+    MAX_TAG_VALUE_LENGTH, MAX_TAG_KEY_LENGTH, VALID_PLATFORMS
 )
 from sentry.interfaces.base import get_interface, InterfaceValidationError
 from sentry.interfaces.csp import Csp
@@ -38,8 +38,6 @@ from sentry.utils.compat import StringIO
 from sentry.utils.strings import decompress
 from sentry.utils.validators import is_float, is_event_id
 
-LOG_LEVEL_REVERSE_MAP = dict((v, k) for k, v in LOG_LEVELS.iteritems())
-
 
 class APIError(Exception):
     http_status = 400
@@ -620,7 +618,7 @@ class ClientApiHelper(object):
         if isinstance(level, six.string_types) and not level.isdigit():
             # assume it's something like 'warning'
             try:
-                data['level'] = LOG_LEVEL_REVERSE_MAP[level]
+                data['level'] = LOG_LEVELS_MAP[level]
             except KeyError as e:
                 self.log.debug(
                     'Discarded invalid logger value: %s', level)
@@ -629,7 +627,7 @@ class ClientApiHelper(object):
                     'name': 'level',
                     'value': level,
                 })
-                data['level'] = LOG_LEVEL_REVERSE_MAP.get(
+                data['level'] = LOG_LEVELS_MAP.get(
                     DEFAULT_LOG_LEVEL, DEFAULT_LOG_LEVEL)
 
         if data.get('release'):
diff --git a/src/sentry/rules/conditions/level.py b/src/sentry/rules/conditions/level.py
index 54c053e603..90df9f3722 100644
--- a/src/sentry/rules/conditions/level.py
+++ b/src/sentry/rules/conditions/level.py
@@ -11,7 +11,7 @@ from __future__ import absolute_import
 from collections import OrderedDict
 
 from django import forms
-from sentry.constants import LOG_LEVELS
+from sentry.constants import LOG_LEVELS, LOG_LEVELS_MAP
 
 from sentry.rules.conditions.base import EventCondition
 
@@ -19,7 +19,6 @@ LEVEL_CHOICES = OrderedDict([
     ("{0}".format(k), "{0}".format(v.capitalize()))
     for k, v in sorted(LOG_LEVELS.items(), key=lambda x: x[0], reverse=True)
 ])
-LOG_LEVEL_REVERSE_MAP = dict((v, k) for k, v in LOG_LEVELS.iteritems())
 
 
 class LevelMatchType(object):
@@ -62,7 +61,7 @@ class LevelCondition(EventCondition):
         # Fetch the event level from the tags since event.level is
         # event.group.level which may have changed
         try:
-            level = LOG_LEVEL_REVERSE_MAP[event.get_tag('level')]
+            level = LOG_LEVELS_MAP[event.get_tag('level')]
         except KeyError:
             return False
 
