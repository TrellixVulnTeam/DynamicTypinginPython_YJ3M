commit 3169ff599ab0879f6e66b0a7087fb186d731a205
Author: Ted Kaemming <ted@kaemming.com>
Date:   Mon Dec 7 12:30:03 2015 -0800

    Explicitly fingerprint `SoftTimeLimitExceeded` exceptions in Celery tasks.

diff --git a/src/sentry/tasks/base.py b/src/sentry/tasks/base.py
index 979775552f..ea4e572707 100644
--- a/src/sentry/tasks/base.py
+++ b/src/sentry/tasks/base.py
@@ -11,6 +11,7 @@ import resource
 from contextlib import contextmanager
 from functools import wraps
 
+from celery.exceptions import SoftTimeLimitExceeded
 from celery.task import current
 from raven.contrib.django.models import client as Raven
 
@@ -44,10 +45,14 @@ def instrumented_task(name, stat_suffix=None, **kwargs):
             with metrics.timer(key, instance=instance), \
                     track_memory_usage('jobs.memory_change', instance=instance):
                 try:
-                    result = func(*args, **kwargs)
+                    return func(*args, **kwargs)
+                except SoftTimeLimitExceeded as error:
+                    Raven.context.merge({
+                        'fingerprint': [type(error).__name__, instance],
+                    })
+                    raise
                 finally:
                     Raven.context.clear()
-            return result
         return app.task(name=name, **kwargs)(_wrapped)
     return wrapped
 
