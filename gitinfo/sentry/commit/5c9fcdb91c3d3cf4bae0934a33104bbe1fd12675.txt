commit 5c9fcdb91c3d3cf4bae0934a33104bbe1fd12675
Author: Armin Ronacher <armin.ronacher@active-4.com>
Date:   Wed Jan 15 16:31:30 2020 +0100

    feat(grouping): Add improvements to PHP7 anonymous classes (#16463)
    
    * feat(grouping): Add improvements to PHP7 anonymous classes
    
    * feat: Added changelog entry

diff --git a/src/sentry/grouping/strategies/configurations.py b/src/sentry/grouping/strategies/configurations.py
index e69b767b67..d5cac3967a 100644
--- a/src/sentry/grouping/strategies/configurations.py
+++ b/src/sentry/grouping/strategies/configurations.py
@@ -92,6 +92,7 @@ register_strategy_config(
     changelog="""
         * Better rules for when to take context lines into account for
           JavaScript platforms for grouping purposes.
+        * Better support for PHP7 anonymous classes.
     """,
 )
 
diff --git a/src/sentry/grouping/strategies/newstyle.py b/src/sentry/grouping/strategies/newstyle.py
index 23dc59a390..5b5e8a2e0f 100644
--- a/src/sentry/grouping/strategies/newstyle.py
+++ b/src/sentry/grouping/strategies/newstyle.py
@@ -127,6 +127,7 @@ def get_function_component(
     context_line_available=False,
     raw_function=None,
     javascript_fuzzing=False,
+    php_detect_anonymous_classes=False,
 ):
     """
     Attempt to normalize functions by removing common platform outliers.
@@ -167,8 +168,12 @@ def get_function_component(
                 )
 
     elif platform == "php":
-        if func.startswith("[Anonymous"):
+        if func.startswith(("[Anonymous", "class@anonymous\x00")):
             function_component.update(contributes=False, hint="ignored anonymous function")
+        if php_detect_anonymous_classes and func.startswith("class@anonymous"):
+            new_function = func.rsplit("::", 1)[-1]
+            if new_function != func:
+                function_component.update(values=[new_function], hint="anonymous class method")
 
     elif platform == "java":
         if func.startswith("lambda$"):
@@ -213,6 +218,7 @@ def frame(frame, event, **meta):
 
     use_contextline = False
     javascript_fuzzing = False
+    php_detect_anonymous_classes = False
 
     # Version specific bugs
     legacy_function_logic = id == "frame:v1"
@@ -225,6 +231,11 @@ def frame(frame, event, **meta):
         # this assumes that we have sourcemaps available.
         use_contextline = platform in ("javascript", "node", "python", "php", "ruby")
 
+    # Starting with v4 we're adding support for anonymous classes
+    # detection
+    if id == "frame:v4":
+        php_detect_anonymous_classes = True
+
     return get_frame_component(
         frame,
         event,
@@ -233,6 +244,7 @@ def frame(frame, event, **meta):
         use_contextline=use_contextline,
         javascript_fuzzing=javascript_fuzzing,
         with_context_line_file_origin_bug=with_context_line_file_origin_bug,
+        php_detect_anonymous_classes=php_detect_anonymous_classes,
     )
 
 
@@ -270,6 +282,7 @@ def get_frame_component(
     use_contextline=False,
     javascript_fuzzing=False,
     with_context_line_file_origin_bug=False,
+    php_detect_anonymous_classes=False,
 ):
     platform = frame.platform or event.platform
 
@@ -305,6 +318,7 @@ def get_frame_component(
         context_line_available=context_line_component and context_line_component.contributes,
         legacy_function_logic=legacy_function_logic,
         javascript_fuzzing=javascript_fuzzing,
+        php_detect_anonymous_classes=php_detect_anonymous_classes,
     )
 
     values = [module_component, filename_component, function_component]
diff --git a/tests/sentry/grouping/grouping_inputs/laravel-anonymous.json b/tests/sentry/grouping/grouping_inputs/laravel-anonymous.json
new file mode 100644
index 0000000000..7c42fc966f
--- /dev/null
+++ b/tests/sentry/grouping/grouping_inputs/laravel-anonymous.json
@@ -0,0 +1,87 @@
+{
+  "culprit": "/",
+  "event_id": "52291722d1c24b4cb2a29c4ea1e5cc6f",
+  "environment": "local",
+  "platform": "php",
+  "logger": "",
+  "exception": {
+    "values": [
+      {
+        "stacktrace": {
+          "frames": [
+            {
+              "abs_path": "/server.php",
+              "pre_context": [
+                "// application without having installed a \"real\" web server software here.",
+                "if ($uri !== '/' && file_exists(__DIR__.'/public'.$uri)) {",
+                "    return false;",
+                "}",
+                ""
+              ],
+              "post_context": [
+                ""
+              ],
+              "in_app": true,
+              "lineno": 21,
+              "filename": "/server.php",
+              "context_line": "require_once __DIR__.'/public/index.php';"
+            },
+            {
+              "function": "class@anonymous\u0000/var/www/html/dummy.php0x7190ad3c35cf::run",
+              "abs_path": "/var/www/html/dummy.php",
+              "pre_context": [
+                "                try {",
+                "                    $slice = parent::carry();",
+                "",
+                "                    $callable = $slice($stack, $pipe);",
+                ""
+              ],
+              "vars": {
+                "param1": "Object Illuminate\\Http\\Request"
+              },
+              "post_context": [
+                "                } catch (Exception $e) {",
+                "                    return $this->handleException($passable, $e);",
+                "                } catch (Throwable $e) {",
+                "                    return $this->handleException($passable, new FatalThrowableError($e));",
+                "                }"
+              ],
+              "filename": "/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php",
+              "lineno": 53,
+              "in_app": false,
+              "context_line": "                    return $callable($passable);"
+            },
+            {
+              "function": "Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}",
+              "abs_path": "/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php",
+              "pre_context": [
+                "                    // since the object we're given was already a fully instantiated object.",
+                "                    $parameters = [$passable, $stack];",
+                "                }",
+                "",
+                "                $response = method_exists($pipe, $this->method)"
+              ],
+              "vars": {
+                "param1": "Object Illuminate\\Http\\Request"
+              },
+              "post_context": [
+                "                                : $pipe(...$parameters);",
+                "",
+                "                return $response instanceof Responsable",
+                "                            ? $response->toResponse($this->getContainer()->make(Request::class))",
+                "                            : $response;"
+              ],
+              "filename": "/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php",
+              "lineno": 163,
+              "in_app": false,
+              "context_line": "                                ? $pipe->{$this->method}(...$parameters)"
+            }
+          ]
+        },
+        "type": "Exception",
+        "value": "LARAVEL TEST"
+      }
+    ]
+  },
+  "release": null
+}
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/laravel_anonymous.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/laravel_anonymous.pysnap
new file mode 100644
index 0000000000..722e7ef0eb
--- /dev/null
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined@2019_04_07/laravel_anonymous.pysnap
@@ -0,0 +1,76 @@
+---
+created: '2020-01-15T14:24:37.613020Z'
+creator: sentry
+source: tests/sentry/grouping/test_variants.py
+---
+app:
+  hash: '260f8f0a5856cd6db03c549b83080d5d'
+  component:
+    app*
+      exception*
+        stacktrace*
+          frame*
+            filename*
+              u'/server.php'
+            context-line*
+              u"require_once __DIR__.'/public/index.php';"
+            lineno (line number is not used if context-line is available)
+              21
+          frame (non app frame)
+            filename*
+              u'/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php'
+            context-line*
+              u'                    return $callable($passable);'
+            function (function name is not used if context-line is available)
+              u'class@anonymous\x00/var/www/html/dummy.php0x7190ad3c35cf::run'
+            lineno (line number is not used if context-line is available)
+              53
+          frame (non app frame)
+            filename*
+              u'/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php'
+            context-line*
+              u'                                ? $pipe->{$this->method}(...$parameters)'
+            function (function name is not used if context-line is available)
+              u'Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}'
+            lineno (line number is not used if context-line is available)
+              163
+        type*
+          u'Exception'
+        value (stacktrace and type take precedence)
+          u'LARAVEL TEST'
+--------------------------------------------------------------------------
+system:
+  hash: 'babe97015e0a63eaaab253c266bae20d'
+  component:
+    system*
+      exception*
+        stacktrace*
+          frame*
+            filename*
+              u'/server.php'
+            context-line*
+              u"require_once __DIR__.'/public/index.php';"
+            lineno (line number is not used if context-line is available)
+              21
+          frame*
+            filename*
+              u'/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php'
+            context-line*
+              u'                    return $callable($passable);'
+            function (function name is not used if context-line is available)
+              u'class@anonymous\x00/var/www/html/dummy.php0x7190ad3c35cf::run'
+            lineno (line number is not used if context-line is available)
+              53
+          frame*
+            filename*
+              u'/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php'
+            context-line*
+              u'                                ? $pipe->{$this->method}(...$parameters)'
+            function (function name is not used if context-line is available)
+              u'Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}'
+            lineno (line number is not used if context-line is available)
+              163
+        type*
+          u'Exception'
+        value (stacktrace and type take precedence)
+          u'LARAVEL TEST'
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/laravel_anonymous.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/laravel_anonymous.pysnap
new file mode 100644
index 0000000000..ecdc5f2566
--- /dev/null
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy@2019_03_12/laravel_anonymous.pysnap
@@ -0,0 +1,76 @@
+---
+created: '2020-01-15T14:24:39.451185Z'
+creator: sentry
+source: tests/sentry/grouping/test_variants.py
+---
+app:
+  hash: '260f8f0a5856cd6db03c549b83080d5d'
+  component:
+    app*
+      exception*
+        stacktrace*
+          frame*
+            filename*
+              u'/server.php'
+            context-line*
+              u"require_once __DIR__.'/public/index.php';"
+            lineno (line number is not used if context-line is available)
+              21
+          frame (non app frame)
+            filename*
+              u'/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php'
+            context-line*
+              u'                    return $callable($passable);'
+            function (function name is not used if context-line is available)
+              u'class@anonymous\x00/var/www/html/dummy.php0x7190ad3c35cf::run'
+            lineno (line number is not used if context-line is available)
+              53
+          frame (non app frame)
+            filename*
+              u'/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php'
+            context-line*
+              u'                                ? $pipe->{$this->method}(...$parameters)'
+            function (function name is not used if context-line is available)
+              u'Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}'
+            lineno (line number is not used if context-line is available)
+              163
+        type*
+          u'Exception'
+        value (stacktrace and type take precedence)
+          u'LARAVEL TEST'
+--------------------------------------------------------------------------
+system:
+  hash: 'babe97015e0a63eaaab253c266bae20d'
+  component:
+    system*
+      exception*
+        stacktrace*
+          frame*
+            filename*
+              u'/server.php'
+            context-line*
+              u"require_once __DIR__.'/public/index.php';"
+            lineno (line number is not used if context-line is available)
+              21
+          frame*
+            filename*
+              u'/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php'
+            context-line*
+              u'                    return $callable($passable);'
+            function (function name is not used if context-line is available)
+              u'class@anonymous\x00/var/www/html/dummy.php0x7190ad3c35cf::run'
+            lineno (line number is not used if context-line is available)
+              53
+          frame*
+            filename*
+              u'/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php'
+            context-line*
+              u'                                ? $pipe->{$this->method}(...$parameters)'
+            function (function name is not used if context-line is available)
+              u'Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}'
+            lineno (line number is not used if context-line is available)
+              163
+        type*
+          u'Exception'
+        value (stacktrace and type take precedence)
+          u'LARAVEL TEST'
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/laravel_anonymous.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/laravel_anonymous.pysnap
new file mode 100644
index 0000000000..1cd03bd02a
--- /dev/null
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_05/laravel_anonymous.pysnap
@@ -0,0 +1,48 @@
+---
+created: '2020-01-15T14:24:41.163911Z'
+creator: sentry
+source: tests/sentry/grouping/test_variants.py
+---
+app:
+  hash: '6c99fc6b18e4fa4040a94e10729969db'
+  component:
+    app*
+      exception*
+        stacktrace*
+          frame*
+            filename*
+              u'server.php'
+          frame (non app frame)
+            filename*
+              u'pipeline.php'
+            function (ignored anonymous function)
+              u'class@anonymous\x00/var/www/html/dummy.php0x7190ad3c35cf::run'
+          frame (non app frame)
+            filename*
+              u'pipeline.php'
+            function*
+              u'Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}'
+        type*
+          u'Exception'
+--------------------------------------------------------------------------
+system:
+  hash: '64809e005de3afd90f703a70e36a2591'
+  component:
+    system*
+      exception*
+        stacktrace*
+          frame*
+            filename*
+              u'server.php'
+          frame*
+            filename*
+              u'pipeline.php'
+            function (ignored anonymous function)
+              u'class@anonymous\x00/var/www/html/dummy.php0x7190ad3c35cf::run'
+          frame*
+            filename*
+              u'pipeline.php'
+            function*
+              u'Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}'
+        type*
+          u'Exception'
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/laravel_anonymous.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/laravel_anonymous.pysnap
new file mode 100644
index 0000000000..8a9446a7b2
--- /dev/null
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_04_17/laravel_anonymous.pysnap
@@ -0,0 +1,52 @@
+---
+created: '2020-01-15T14:24:42.837532Z'
+creator: sentry
+source: tests/sentry/grouping/test_variants.py
+---
+app:
+  hash: '6c99fc6b18e4fa4040a94e10729969db'
+  component:
+    app*
+      exception*
+        stacktrace*
+          frame*
+            filename*
+              u'server.php'
+          frame (non app frame)
+            filename*
+              u'pipeline.php'
+            function (ignored anonymous function)
+              u'class@anonymous\x00/var/www/html/dummy.php0x7190ad3c35cf::run'
+          frame (non app frame)
+            filename*
+              u'pipeline.php'
+            function*
+              u'Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}'
+        type*
+          u'Exception'
+        value (ignored because stacktrace takes precedence)
+          u'LARAVEL TEST'
+--------------------------------------------------------------------------
+system:
+  hash: '64809e005de3afd90f703a70e36a2591'
+  component:
+    system*
+      exception*
+        stacktrace*
+          frame*
+            filename*
+              u'server.php'
+          frame*
+            filename*
+              u'pipeline.php'
+            function (ignored anonymous function)
+              u'class@anonymous\x00/var/www/html/dummy.php0x7190ad3c35cf::run'
+          frame*
+            filename*
+              u'pipeline.php'
+            function*
+              u'Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}'
+        type*
+          u'Exception'
+        value (ignored because stacktrace takes precedence)
+          u'LARAVEL TEST'
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/laravel_anonymous.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/laravel_anonymous.pysnap
new file mode 100644
index 0000000000..c6592aef29
--- /dev/null
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_05_08/laravel_anonymous.pysnap
@@ -0,0 +1,64 @@
+---
+created: '2020-01-15T14:24:44.628338Z'
+creator: sentry
+source: tests/sentry/grouping/test_variants.py
+---
+app:
+  hash: 'a728cdf5d62c8e017c35c3fe04051b6e'
+  component:
+    app*
+      exception*
+        stacktrace*
+          frame*
+            filename*
+              u'server.php'
+            context-line*
+              u"require_once __DIR__.'/public/index.php';"
+          frame (non app frame)
+            filename*
+              u'pipeline.php'
+            function (ignored anonymous function)
+              u'class@anonymous\x00/var/www/html/dummy.php0x7190ad3c35cf::run'
+            context-line*
+              u'return $callable($passable);'
+          frame (non app frame)
+            filename*
+              u'pipeline.php'
+            function*
+              u'Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}'
+            context-line*
+              u'? $pipe->{$this->method}(...$parameters)'
+        type*
+          u'Exception'
+        value (ignored because stacktrace takes precedence)
+          u'LARAVEL TEST'
+--------------------------------------------------------------------------
+system:
+  hash: '38f89a430b4a251a06a5a15b382638b5'
+  component:
+    system*
+      exception*
+        stacktrace*
+          frame*
+            filename*
+              u'server.php'
+            context-line*
+              u"require_once __DIR__.'/public/index.php';"
+          frame*
+            filename*
+              u'pipeline.php'
+            function (ignored anonymous function)
+              u'class@anonymous\x00/var/www/html/dummy.php0x7190ad3c35cf::run'
+            context-line*
+              u'return $callable($passable);'
+          frame*
+            filename*
+              u'pipeline.php'
+            function*
+              u'Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}'
+            context-line*
+              u'? $pipe->{$this->method}(...$parameters)'
+        type*
+          u'Exception'
+        value (ignored because stacktrace takes precedence)
+          u'LARAVEL TEST'
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/laravel_anonymous.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/laravel_anonymous.pysnap
new file mode 100644
index 0000000000..9eefebb060
--- /dev/null
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle@2019_10_29/laravel_anonymous.pysnap
@@ -0,0 +1,64 @@
+---
+created: '2020-01-15T14:24:46.412146Z'
+creator: sentry
+source: tests/sentry/grouping/test_variants.py
+---
+app:
+  hash: 'a728cdf5d62c8e017c35c3fe04051b6e'
+  component:
+    app*
+      exception*
+        stacktrace*
+          frame*
+            filename*
+              u'server.php'
+            context-line*
+              u"require_once __DIR__.'/public/index.php';"
+          frame (non app frame)
+            filename*
+              u'pipeline.php'
+            function* (anonymous class method)
+              u'run'
+            context-line*
+              u'return $callable($passable);'
+          frame (non app frame)
+            filename*
+              u'pipeline.php'
+            function*
+              u'Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}'
+            context-line*
+              u'? $pipe->{$this->method}(...$parameters)'
+        type*
+          u'Exception'
+        value (ignored because stacktrace takes precedence)
+          u'LARAVEL TEST'
+--------------------------------------------------------------------------
+system:
+  hash: '63c67781779781d9b0a442a5b2bdb976'
+  component:
+    system*
+      exception*
+        stacktrace*
+          frame*
+            filename*
+              u'server.php'
+            context-line*
+              u"require_once __DIR__.'/public/index.php';"
+          frame*
+            filename*
+              u'pipeline.php'
+            function* (anonymous class method)
+              u'run'
+            context-line*
+              u'return $callable($passable);'
+          frame*
+            filename*
+              u'pipeline.php'
+            function*
+              u'Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}'
+            context-line*
+              u'? $pipe->{$this->method}(...$parameters)'
+        type*
+          u'Exception'
+        value (ignored because stacktrace takes precedence)
+          u'LARAVEL TEST'
