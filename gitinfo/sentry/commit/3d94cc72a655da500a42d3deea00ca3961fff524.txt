commit 3d94cc72a655da500a42d3deea00ca3961fff524
Author: Ted Kaemming <ted@kaemming.com>
Date:   Fri Oct 9 16:26:27 2015 -0700

    Hack together a working example of the digest with the new data.

diff --git a/src/sentry/digests/notifications.py b/src/sentry/digests/notifications.py
index d7ae572d83..ad43f021ab 100644
--- a/src/sentry/digests/notifications.py
+++ b/src/sentry/digests/notifications.py
@@ -5,6 +5,9 @@ import itertools
 import logging
 from collections import namedtuple
 
+from django.utils import timezone
+
+from sentry.app import tsdb
 from sentry.models import Project
 from sentry.utils.dates import to_timestamp
 
@@ -50,23 +53,47 @@ filter_muted_groups = functools.partial(
 )
 
 
+Digest = namedtuple('Digest', 'start end rules')
+Summary = namedtuple('Summary', 'records events users')
+
+
 def build_digest(project, records):
     # Extract all groups from the records.
+    groups = set()
+    for record in records:
+        groups.add(record.value.event.group_id)
 
-    # Fetch the time series data for all groups.
+    start = records[-1].datetime
+    end = timezone.now()
 
     # Fetch the event counts for all groups.
+    events = tsdb.get_sums(
+        tsdb.models.group,
+        groups,
+        start,
+        end,
+    )
+
     # Fetch the user counts for all groups.
+    users = tsdb.get_distinct_counts_totals(
+        tsdb.models.users_affected_by_group,
+        groups,
+        start,
+        end,
+    )
 
     # Group the records by [rule][group].
-
-    # Sort the group lists by events.
-    # Sort the rules by number of groups.
-
-    rules = {}
-
+    groups_by_rule = {}
     for record in records:
         for rule in record.value.rules:
-            rules.setdefault(rule, {}).setdefault(record.value.event.group, []).append(record)
-
-    return rules
+            group = record.value.event.group
+            summary = groups_by_rule.setdefault(rule, {}).get(group)
+            if summary is None:
+                summary = groups_by_rule[rule][group] = Summary(
+                    [],
+                    events[group.id],
+                    users[group.id],
+                )
+            summary.records.append(record)
+
+    return Digest(start, end, groups_by_rule)
diff --git a/src/sentry/templates/sentry/emails/digests/body.html b/src/sentry/templates/sentry/emails/digests/body.html
index 52aa7c716a..794ace5fb0 100644
--- a/src/sentry/templates/sentry/emails/digests/body.html
+++ b/src/sentry/templates/sentry/emails/digests/body.html
@@ -6,18 +6,31 @@
 
 <h2>{{ project.name }}</h2>
 
-{% for rule, groups in digest.items %}
+{% for rule, groups in digest.rules.iteritems %}
 
     <h3>{{ rule.label }}</h3>
 
-    <ul>
-    {% for group, records in groups.items %}
-        <li>
-            {% url 'sentry-group' group.organization.slug group.project.slug group.id as group_link %}
-            <a href="{% absolute_uri group_link %}">{{ group.title }}</a>
-        </li>
-    {% endfor %}
-    </ul>
+    <table>
+        <tr>
+            <th>Issue</th>
+            <th>Events</th>
+            <th>Users</th>
+        </tr>
+        {% for group, summary in groups.items %}
+            <tr>
+                <th>
+                    {% url 'sentry-group' group.organization.slug group.project.slug group.id as group_link %}
+                    <a href="{% absolute_uri group_link %}">{{ group.title }}</a>
+                </th>
+                <td>
+                    {{ summary.events }}
+                </td>
+                <td>
+                    {{ summary.users }}
+                </td>
+            </tr>
+        {% endfor %}
+    </table>
 
 {% endfor %}
 
