commit 1b25a920767451d9378bbe5776967075b2094868
Author: David Cramer <dcramer@gmail.com>
Date:   Sat Oct 19 15:46:35 2013 -0700

    Tests for multi backend

diff --git a/src/sentry/nodestore/multi/backend.py b/src/sentry/nodestore/multi/backend.py
index 9bdcaa050a..99ad574ba5 100644
--- a/src/sentry/nodestore/multi/backend.py
+++ b/src/sentry/nodestore/multi/backend.py
@@ -32,14 +32,15 @@ class MultiNodeStorage(NodeStorage):
 
         self.backends = []
         for backend, backend_options in backends:
-            cls = import_string(backend)
-            self.backends.append(cls(**backend_options))
+            if isinstance(backend, basestring):
+                backend = import_string(backend)
+            self.backends.append(backend(**backend_options))
         super(MultiNodeStorage, self).__init__(**kwargs)
 
     def get(self, id):
         # just fetch it from a random backend, we're not aiming for consistency
         backend = random.choice(self.backends)
-        return backend.get(id=id)
+        return backend.get(id)
 
     def get_multi(self, id_list):
         backend = random.choice(self.backends)
@@ -49,7 +50,7 @@ class MultiNodeStorage(NodeStorage):
         should_raise = False
         for backend in self.backends:
             try:
-                backend.set(id=id, data=data)
+                backend.set(id, data)
             except Exception:
                 should_raise = True
 
diff --git a/tests/sentry/nodestore/multi/__init__.py b/tests/sentry/nodestore/multi/__init__.py
new file mode 100644
index 0000000000..e69de29bb2
diff --git a/tests/sentry/nodestore/multi/backend/__init__.py b/tests/sentry/nodestore/multi/backend/__init__.py
new file mode 100644
index 0000000000..e69de29bb2
diff --git a/tests/sentry/nodestore/multi/backend/tests.py b/tests/sentry/nodestore/multi/backend/tests.py
new file mode 100644
index 0000000000..1a282ff22a
--- /dev/null
+++ b/tests/sentry/nodestore/multi/backend/tests.py
@@ -0,0 +1,82 @@
+# -*- coding: utf-8 -*-
+
+from __future__ import absolute_import
+
+from sentry.nodestore.base import NodeStorage
+from sentry.nodestore.multi.backend import MultiNodeStorage
+from sentry.testutils import TestCase
+
+
+class InMemoryBackend(NodeStorage):
+    def __init__(self):
+        self._data = {}
+
+    def set(self, id, data):
+        self._data[id] = data
+
+    def get(self, id):
+        return self._data.get(id)
+
+
+class MultiNodeStorageTest(TestCase):
+    def setUp(self):
+        self.ns = MultiNodeStorage([
+            (InMemoryBackend, {}),
+            (InMemoryBackend, {}),
+        ])
+
+    def test_basic_integration(self):
+        node_id = self.ns.create({
+            'foo': 'bar',
+        })
+        assert node_id is not None
+        for backend in self.ns.backends:
+            assert backend.get(node_id) == {
+                'foo': 'bar',
+            }
+
+        self.ns.set(node_id, {
+            'foo': 'baz',
+        })
+        for backend in self.ns.backends:
+            assert backend.get(node_id) == {
+                'foo': 'baz',
+            }
+
+        result = self.ns.get(node_id)
+        assert result == {
+            'foo': 'baz',
+        }
+
+        node_id2 = self.ns.create({
+            'foo': 'bar',
+        })
+        for backend in self.ns.backends:
+            assert backend.get(node_id2) == {
+                'foo': 'bar',
+            }
+
+        result = self.ns.get_multi([node_id, node_id2])
+        assert result[node_id] == {
+            'foo': 'baz',
+        }
+        assert result[node_id2] == {
+            'foo': 'bar',
+        }
+
+        result = self.ns.set_multi({
+            node_id: {
+                'foo': 'biz',
+            },
+            node_id2: {
+                'foo': 'bir',
+            },
+        })
+
+        for backend in self.ns.backends:
+            assert backend.get(node_id) == {
+                'foo': 'biz',
+            }
+            assert backend.get(node_id2) == {
+                'foo': 'bir',
+            }
