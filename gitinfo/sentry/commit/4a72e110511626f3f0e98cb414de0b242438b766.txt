commit 4a72e110511626f3f0e98cb414de0b242438b766
Author: Matt Robenolt <matt@ydekproductions.com>
Date:   Fri Nov 18 17:34:34 2016 -0800

    sourcemaps: guard against bad base64 sourcemap data (#4503)

diff --git a/src/sentry/lang/javascript/processor.py b/src/sentry/lang/javascript/processor.py
index 13e5912a29..49a1038ffd 100644
--- a/src/sentry/lang/javascript/processor.py
+++ b/src/sentry/lang/javascript/processor.py
@@ -496,7 +496,13 @@ def is_utf8(encoding):
 
 def fetch_sourcemap(url, project=None, release=None, allow_scraping=True):
     if is_data_uri(url):
-        body = base64.b64decode(url[BASE64_PREAMBLE_LENGTH:])
+        try:
+            body = base64.b64decode(url[BASE64_PREAMBLE_LENGTH:])
+        except TypeError as e:
+            raise UnparseableSourcemap({
+                'url': '<base64>',
+                'reason': e.message,
+            })
     else:
         result = fetch_file(url, project=project, release=release,
                             allow_scraping=allow_scraping)
diff --git a/tests/sentry/lang/javascript/test_processor.py b/tests/sentry/lang/javascript/test_processor.py
index bd49eb7bb1..0df03c9f78 100644
--- a/tests/sentry/lang/javascript/test_processor.py
+++ b/tests/sentry/lang/javascript/test_processor.py
@@ -248,6 +248,10 @@ class FetchSourcemapTest(TestCase):
         assert smap_view.get_source_contents(0) == 'console.log("hello, World!")'
         assert smap_view.get_source_name(0) == u'/test.js'
 
+    def test_broken_base64(self):
+        with pytest.raises(UnparseableSourcemap):
+            fetch_sourcemap('data:application/json;base64,xxx')
+
     @responses.activate
     def test_simple_non_utf8(self):
         responses.add(responses.GET, 'http://example.com', body='{}',
