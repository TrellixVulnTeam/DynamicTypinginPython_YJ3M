commit 9fd7b5d1c81e01581615d191a0481373a56ea7cb
Author: David Cramer <dcramer@gmail.com>
Date:   Sun Feb 12 17:57:14 2012 -0800

    Document the various bits required by the header

diff --git a/docs/client/index.rst b/docs/client/index.rst
index a9c2e55630..44305b603c 100644
--- a/docs/client/index.rst
+++ b/docs/client/index.rst
@@ -235,29 +235,41 @@ An authentication header is expected to be sent along with the message body, whi
 for the message, as well as an ownership identifier::
 
     X-Sentry-Auth: Sentry sentry_version=2.0,
-    sentry_signature=<hmac signature>,
+    sentry_client=<client version, arbitrary>]]
     sentry_timestamp=<signature timestamp>[,
     sentry_key=<public api key>,[
-    sentry_client=<client version, arbitrary>]]
+    sentry_signature=<hmac signature>,
+
+.. data:: sentry_version
+
+    The protocol version. This should be sent as the value "2.0".
+
+.. data:: sentry_client
+
+    An arbitrary string which identifies your client, including it's version.
+
+    For example, the Python client might send this as "raven-python/1.0"
+
+.. data:: sentry_timestamp
+
+    The unix timestamp representing the time at which this POST request was generated.
+
+.. data:: sentry_key
+
+    The public key which should be provided as part of the client configuration
 
-The header is composed of a SHA1-signed HMAC, the timestamp from when the message
-was generated, and an arbitrary client version string. The client version should
-be something distinct to your client, and is simply for reporting purposes.
+.. data:: sentry_signature
 
-To generate the HMAC signature, take the following example (in Python)::
+    A SHA1-signed HMAC, for example::
 
-    hmac.new(public_key, '%s %s' % (timestamp, message), hashlib.sha1).hexdigest()
+        hmac.new(secret_key, '%s %s' % (timestamp, message), hashlib.sha1).hexdigest()
 
-If you are using project auth, you should sign with your project-specific ``secret_key``
-instead of the global superuser key. If you are signing with your secret key, you will
-also need to ensure you've provided your ``public_key`` as ``sentry_key`` in the
-auth header.
+    The variables which are required within the signing of the message consist of the following:
 
-The variables which are required within the signing of the message consist of the following:
+    - ``secret_key`` is provided as part of the client configuration.
+    - ``timestamp`` is the timestamp of which this message was generated
+    - ``message`` is the encoded JSON body
 
-- ``key`` is either the ``public_key`` or the shared global key between client and server.
-- ``timestamp`` is the timestamp of which this message was generated
-- ``message`` is the encoded :ref:`POST Body`
 
 A Working Example
 ~~~~~~~~~~~~~~~~~
