commit 15809864971288cde108bc3188d33db08b3127e7
Author: Lauryn Brown <lauryndbrown@gmail.com>
Date:   Wed Jul 18 14:13:12 2018 -0700

    ref(integrations): IntegrationRepositoryProvider (#9074)
    
    * First pass.
    
    * fixed typo
    
    * Made organization_id required
    
    * fixed duplicate commits test
    
    * fixed dummy provider.
    
    * fixed hand_exception errors
    
    * fixed calls to compare_commits for github and bitbucket
    
    * removed org_id since repo has it.

diff --git a/src/sentry/integrations/bitbucket/repository.py b/src/sentry/integrations/bitbucket/repository.py
index 1fcfa3aef6..c0c152ed6a 100644
--- a/src/sentry/integrations/bitbucket/repository.py
+++ b/src/sentry/integrations/bitbucket/repository.py
@@ -56,7 +56,7 @@ class BitbucketRepositoryProvider(providers.IntegrationRepositoryProvider):
             },
         ]
 
-    def validate_config(self, organization, config, actor=None):
+    def validate_config(self, organization, config):
         """
         ```
         if config['foo'] and not config['bar']:
@@ -92,7 +92,7 @@ class BitbucketRepositoryProvider(providers.IntegrationRepositoryProvider):
                 )
         return secret
 
-    def create_repository(self, organization, data, actor=None):
+    def create_repository(self, organization, data):
         installation = self.get_installation(data['integration_id'], organization.id)
         client = installation.get_client()
         try:
@@ -120,7 +120,7 @@ class BitbucketRepositoryProvider(providers.IntegrationRepositoryProvider):
                 'integration_id': data['integration_id'],
             }
 
-    def delete_repository(self, repo, actor=None):
+    def delete_repository(self, repo):
         installation = self.get_installation(repo.integration_id, repo.organization_id)
         client = installation.get_client()
 
@@ -143,7 +143,7 @@ class BitbucketRepositoryProvider(providers.IntegrationRepositoryProvider):
             } for c in commit_list
         ]
 
-    def compare_commits(self, repo, start_sha, end_sha, actor=None):
+    def compare_commits(self, repo, start_sha, end_sha):
         installation = self.get_installation(repo.integration_id, repo.organization_id)
         client = installation.get_client()
         # use config name because that is kept in sync via webhooks
diff --git a/src/sentry/integrations/github/repository.py b/src/sentry/integrations/github/repository.py
index 964933247b..627c87c811 100644
--- a/src/sentry/integrations/github/repository.py
+++ b/src/sentry/integrations/github/repository.py
@@ -57,7 +57,7 @@ class GitHubRepositoryProvider(providers.IntegrationRepositoryProvider):
 
         return repo_data
 
-    def validate_config(self, organization, config, actor=None):
+    def validate_config(self, organization, config):
         """
         ```
         if config['foo'] and not config['bar']:
@@ -77,7 +77,7 @@ class GitHubRepositoryProvider(providers.IntegrationRepositoryProvider):
 
         return config
 
-    def create_repository(self, organization, data, actor=None):
+    def create_repository(self, organization, data):
         return {
             'name': data['name'],
             'external_id': data['external_id'],
@@ -99,7 +99,7 @@ class GitHubRepositoryProvider(providers.IntegrationRepositoryProvider):
             } for c in commit_list
         ]
 
-    def compare_commits(self, repo, start_sha, end_sha, actor=None):
+    def compare_commits(self, repo, start_sha, end_sha):
         integration_id = repo.integration_id
         if integration_id is None:
             raise NotImplementedError('GitHub apps requires an integration id to fetch commits')
diff --git a/src/sentry/integrations/github_enterprise/repository.py b/src/sentry/integrations/github_enterprise/repository.py
index a66eaec47d..a466589d9e 100644
--- a/src/sentry/integrations/github_enterprise/repository.py
+++ b/src/sentry/integrations/github_enterprise/repository.py
@@ -14,7 +14,7 @@ class GitHubEnterpriseRepositoryProvider(GitHubRepositoryProvider):
     logger = logging.getLogger('sentry.plugins.github_enterprise')
     repo_provider = 'github_enterprise'
 
-    def create_repository(self, organization, data, actor=None):
+    def create_repository(self, organization, data):
         integration = Integration.objects.get(
             id=data['integration_id'], provider=self.repo_provider)
 
diff --git a/src/sentry/integrations/vsts/repository.py b/src/sentry/integrations/vsts/repository.py
index 660dc6a0fd..9e21e69869 100644
--- a/src/sentry/integrations/vsts/repository.py
+++ b/src/sentry/integrations/vsts/repository.py
@@ -57,7 +57,7 @@ class VstsRepositoryProvider(providers.IntegrationRepositoryProvider):
             }
         ]
 
-    def validate_config(self, organization, config, actor=None):
+    def validate_config(self, organization, config):
         if config.get('url'):
             installation = self.get_installation(config['integration_id'], organization.id)
             client = installation.get_client()
@@ -81,7 +81,7 @@ class VstsRepositoryProvider(providers.IntegrationRepositoryProvider):
             })
         return config
 
-    def create_repository(self, organization, data, actor=None):
+    def create_repository(self, organization, data):
         return {
             'name': data['name'],
             'external_id': data['external_id'],
@@ -130,9 +130,8 @@ class VstsRepositoryProvider(providers.IntegrationRepositoryProvider):
 
         return commit_list
 
-    def compare_commits(self, repo, start_sha, end_sha, actor=None, organization_id=None):
-
-        installation = self.get_installation(repo.integration_id, organization_id)
+    def compare_commits(self, repo, start_sha, end_sha):
+        installation = self.get_installation(repo.integration_id, repo.organization_id)
         client = installation.get_client()
         instance = repo.config['instance']
 
@@ -144,7 +143,7 @@ class VstsRepositoryProvider(providers.IntegrationRepositoryProvider):
         except Exception as e:
             installation.raise_error(e)
 
-        commits = self.zip_commit_data(repo, res['value'], organization_id)
+        commits = self.zip_commit_data(repo, res['value'], repo.organization_id)
         return self._format_commits(repo, commits)
 
     def _format_commits(self, repo, commit_list):
diff --git a/src/sentry/models/repository.py b/src/sentry/models/repository.py
index d5825dc82f..f61c163e46 100644
--- a/src/sentry/models/repository.py
+++ b/src/sentry/models/repository.py
@@ -35,9 +35,12 @@ class Repository(Model):
 
     __repr__ = sane_repr('organization_id', 'name', 'provider')
 
+    def has_integration_provider(self):
+        return self.provider and self.provider.startswith('integrations:')
+
     def get_provider(self):
         from sentry.plugins import bindings
-        if self.provider and self.provider.startswith('integrations:'):
+        if self.has_integration_provider():
             provider_cls = bindings.get('integration-repository.provider').get(self.provider)
             return provider_cls(self.provider)
 
@@ -62,21 +65,31 @@ class Repository(Model):
 
 
 def on_delete(instance, actor=None, **kwargs):
-    from sentry.exceptions import InvalidIdentity, PluginError
-    try:
-        instance.get_provider().delete_repository(
-            repo=instance,
-            actor=actor,
-        )
-    except Exception as exc:
-        if isinstance(exc, (PluginError, InvalidIdentity)):
+    # TODO(lb): I'm assuming that this is used by integrations... is it?
+    def handle_exception(exc):
+        from sentry.exceptions import InvalidIdentity, PluginError
+        from sentry.integrations.exceptions import IntegrationError
+        if isinstance(exc, (IntegrationError, PluginError, InvalidIdentity)):
             error = exc.message
         else:
             error = 'An unknown error occurred'
-
         if actor is not None:
             msg = instance.generate_delete_fail_email(error)
             msg.send_async(to=[actor.email])
 
+    if instance.has_integration_provider():
+        try:
+            instance.get_provider().delete_repository(repo=instance)
+        except Exception as exc:
+            handle_exception(exc)
+    else:
+        try:
+            instance.get_provider().delete_repository(
+                repo=instance,
+                actor=actor,
+            )
+        except Exception as exc:
+            handle_exception(exc)
+
 
 pending_delete.connect(on_delete, sender=Repository, weak=False)
diff --git a/src/sentry/plugins/providers/integration_repository.py b/src/sentry/plugins/providers/integration_repository.py
index 34da477352..f221fee1d0 100644
--- a/src/sentry/plugins/providers/integration_repository.py
+++ b/src/sentry/plugins/providers/integration_repository.py
@@ -1,15 +1,12 @@
 from __future__ import absolute_import
 
 import six
-
 from django.db import IntegrityError, transaction
 from rest_framework.response import Response
 
 from sentry.api.serializers import serialize
 from sentry.integrations.exceptions import IntegrationError
-from sentry.exceptions import PluginError
 from sentry.models import Repository
-from sentry.plugins.config import ConfigValidator
 
 
 class IntegrationRepositoryProvider(object):
@@ -22,24 +19,7 @@ class IntegrationRepositoryProvider(object):
 
     def dispatch(self, request, organization, **kwargs):
         try:
-            fields = self.get_config(organization)
-        except Exception as e:
-            return self.handle_api_error(e)
-
-        if request.method == 'GET':
-            return Response(fields)
-
-        validator = ConfigValidator(fields, request.DATA)
-        if not validator.is_valid():
-            return Response(
-                {
-                    'error_type': 'validation',
-                    'errors': validator.errors,
-                }, status=400
-            )
-
-        try:
-            config = self.validate_config(organization, validator.result, actor=request.user)
+            config = self.validate_config(organization, request.DATA)
         except Exception as e:
             return self.handle_api_error(e)
 
@@ -47,9 +27,8 @@ class IntegrationRepositoryProvider(object):
             result = self.create_repository(
                 organization=organization,
                 data=config,
-                actor=request.user,
             )
-        except PluginError as e:
+        except IntegrationError as e:
             return Response(
                 {
                     'errors': {
@@ -81,8 +60,8 @@ class IntegrationRepositoryProvider(object):
                     provider=self.id,
                     integration_id=result.get('integration_id'),
                 )
-                self.delete_repository(repo, actor=request.user)
-            except PluginError:
+                self.delete_repository(repo)
+            except IntegrationError:
                 pass
             return Response(
                 {'errors': {'__all__': 'A repository with that name already exists'}},
@@ -113,16 +92,16 @@ class IntegrationRepositoryProvider(object):
     def get_config(self, organization):
         raise NotImplementedError
 
-    def validate_config(self, organization, config, actor=None):
+    def validate_config(self, organization, config):
         return config
 
-    def create_repository(self, organization, data, actor=None):
+    def create_repository(self, organization, data):
         raise NotImplementedError
 
-    def delete_repository(self, repo, actor=None):
+    def delete_repository(self, repo):
         pass
 
-    def compare_commits(self, repo, start_sha, end_sha, actor=None, organization_id=None):
+    def compare_commits(self, repo, start_sha, end_sha):
         raise NotImplementedError
 
     @staticmethod
diff --git a/src/sentry/tasks/commits.py b/src/sentry/tasks/commits.py
index 4ac1641de6..b83f29462e 100644
--- a/src/sentry/tasks/commits.py
+++ b/src/sentry/tasks/commits.py
@@ -92,8 +92,7 @@ def fetch_commits(release_id, user_id, refs, prev_release_id=None, **kwargs):
             )
             continue
 
-        binding_key = 'integration-repository.provider' if repo.provider and repo.provider.startswith(
-            'integrations:') else 'repository.provider'
+        binding_key = 'integration-repository.provider' if is_integration_provider(repo.provider) else 'repository.provider'
         try:
             provider_cls = bindings.get(binding_key).get(repo.provider)
         except KeyError:
@@ -120,7 +119,10 @@ def fetch_commits(release_id, user_id, refs, prev_release_id=None, **kwargs):
         end_sha = ref['commit']
         provider = provider_cls(id=repo.provider)
         try:
-            repo_commits = provider.compare_commits(repo, start_sha, end_sha, actor=user)
+            if is_integration_provider(provider.id):
+                repo_commits = provider.compare_commits(repo, start_sha, end_sha)
+            else:
+                repo_commits = provider.compare_commits(repo, start_sha, end_sha, actor=user)
         except NotImplementedError:
             pass
         except Exception as exc:
@@ -207,3 +209,7 @@ def fetch_commits(release_id, user_id, refs, prev_release_id=None, **kwargs):
 
         for deploy_id in pending_notifications:
             Deploy.notify_if_ready(deploy_id, fetch_complete=True)
+
+
+def is_integration_provider(provider):
+    return provider and provider.startswith('integrations:')
diff --git a/tests/sentry/integrations/vsts/test_repository.py b/tests/sentry/integrations/vsts/test_repository.py
index 7359dd9a91..2a1e0d1c90 100644
--- a/tests/sentry/integrations/vsts/test_repository.py
+++ b/tests/sentry/integrations/vsts/test_repository.py
@@ -64,7 +64,7 @@ class VisualStudioRepositoryProviderTest(TestCase):
             integration_id=integration.id,
         )
 
-        res = self.provider.compare_commits(repo, "a", "b", organization_id=self.organization.id)
+        res = self.provider.compare_commits(repo, "a", "b")
 
         assert res == [{
             'patch_set': [{'path': u'/README.md',
