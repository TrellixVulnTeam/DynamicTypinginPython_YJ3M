commit 5793c6cac19aeb7d2e19f9a09f4421b771af4306
Author: David Cramer <dcramer@gmail.com>
Date:   Mon Aug 26 16:30:00 2013 -0700

    Whitelist allowed interfaces (thanks @jbalogh)

diff --git a/src/sentry/conf/server.py b/src/sentry/conf/server.py
index 4dc5654c07..c9a777ae58 100644
--- a/src/sentry/conf/server.py
+++ b/src/sentry/conf/server.py
@@ -462,6 +462,16 @@ SENTRY_QUEUE = {
     'transport': 'kombu.transport.django.Transport',
 }
 
+SENTRY_ALLOWED_INTERFACES = {
+    'sentry.interfaces.Exception',
+    'sentry.interfaces.Message',
+    'sentry.interfaces.Stacktrace',
+    'sentry.interfaces.Template',
+    'sentry.interfaces.Query',
+    'sentry.interfaces.Http',
+    'sentry.interfaces.User',
+}
+
 # Should users without 'sentry.add_project' permissions be allowed
 # to create new projects
 SENTRY_ALLOW_PROJECT_CREATION = False
diff --git a/src/sentry/coreapi.py b/src/sentry/coreapi.py
index cd3219e809..5b0ed46762 100644
--- a/src/sentry/coreapi.py
+++ b/src/sentry/coreapi.py
@@ -15,6 +15,7 @@ import logging
 import uuid
 import zlib
 
+from django.conf import settings
 from django.utils.encoding import smart_str
 
 from sentry.app import env
@@ -91,6 +92,18 @@ class APIRateLimited(APIError):
     msg = 'Creation of this event was denied due to rate limiting.'
 
 
+def get_interface(name):
+    if name not in settings.SENTRY_ALLOWED_INTERFACES:
+        raise ValueError
+
+    try:
+        interface = import_string(name)
+    except Exception:
+        raise ValueError('Unable to load interface: %s' % (name,))
+
+    return interface
+
+
 def client_metadata(client=None, project=None, exception=None, tags=None, extra=None):
     if not extra:
         extra = {}
@@ -322,11 +335,11 @@ def validate_data(project, data, client=None):
             continue
 
         try:
-            interface = import_string(import_path)
-        except (ImportError, AttributeError) as e:
+            interface = get_interface(import_path)
+        except ValueError:
             logger.info(
                 'Invalid unknown attribute: %s', k,
-                **client_metadata(client, project, exception=e))
+                **client_metadata(client, project))
             del data[k]
             continue
 
diff --git a/tests/sentry/coreapi/tests.py b/tests/sentry/coreapi/tests.py
index a83b21b634..4f43a7371b 100644
--- a/tests/sentry/coreapi/tests.py
+++ b/tests/sentry/coreapi/tests.py
@@ -9,7 +9,7 @@ from sentry.models import Project, User
 from sentry.exceptions import InvalidTimestamp
 from sentry.coreapi import (
     extract_auth_vars, project_from_auth_vars, APIForbidden,
-    process_data_timestamp, validate_data, INTERFACE_ALIASES)
+    process_data_timestamp, validate_data, INTERFACE_ALIASES, get_interface)
 from sentry.testutils import TestCase
 
 
@@ -263,3 +263,14 @@ class ValidateDataTest(BaseAPITest):
             'extra': 'bar',
         })
         assert 'extra' not in data
+
+
+class GetInterfaceTest(TestCase):
+    def test_does_not_let_through_disallowed_name(self):
+        with self.assertRaises(ValueError):
+            get_interface('subprocess')
+
+    def test_allows_http(self):
+        from sentry.interfaces import Http
+        result = get_interface('sentry.interfaces.Http')
+        assert result is Http
