commit d2cdb55bb6456844cecf1a1dd93ecbc8e707116d
Author: Armin Ronacher <armin.ronacher@active-4.com>
Date:   Mon Apr 8 16:13:01 2019 +0200

    Revert "feat(grouping): Support for grouping enhancements and fingerprinting (#12514)"
    
    This reverts commit ae24a1b0aca8f28e10c36cd6dec2811e6ce1557f.

diff --git a/requirements-base.txt b/requirements-base.txt
index 3441583200..78fa005a0e 100644
--- a/requirements-base.txt
+++ b/requirements-base.txt
@@ -56,7 +56,7 @@ redis>=2.10.3,<2.10.6
 requests-oauthlib==0.3.3
 requests[security]>=2.20.0,<2.21.0
 selenium==3.141.0
-semaphore>=0.4.24,<0.5.0
+semaphore>=0.4.21,<0.5.0
 sentry-sdk>=0.7.0
 setproctitle>=1.1.7,<1.2.0
 simplejson>=3.2.0,<3.9.0
diff --git a/src/sentry/api/endpoints/grouping_configs.py b/src/sentry/api/endpoints/grouping_configs.py
index eb951c0e47..b5c73f87ec 100644
--- a/src/sentry/api/endpoints/grouping_configs.py
+++ b/src/sentry/api/endpoints/grouping_configs.py
@@ -12,6 +12,6 @@ class GroupingConfigsEndpoint(Endpoint):
 
     def get(self, request):
         return Response(serialize([
-            config.as_dict() for config in sorted(CONFIGURATIONS.values(),
-                                                  key=lambda x: x.id)
+            config().as_dict() for config in sorted(CONFIGURATIONS.values(),
+                                                    key=lambda x: x.id)
         ]))
diff --git a/src/sentry/api/endpoints/grouping_enhancements.py b/src/sentry/api/endpoints/grouping_enhancements.py
deleted file mode 100644
index bfff875aa1..0000000000
--- a/src/sentry/api/endpoints/grouping_enhancements.py
+++ /dev/null
@@ -1,17 +0,0 @@
-from __future__ import absolute_import
-
-from rest_framework.response import Response
-
-from sentry.api.base import Endpoint
-from sentry.api.serializers import serialize
-from sentry.grouping.enhancer import ENHANCEMENT_BASES
-
-
-class GroupingEnhancementsEndpoint(Endpoint):
-    permission_classes = ()
-
-    def get(self, request):
-        return Response(serialize([
-            e.as_dict() for e in sorted(ENHANCEMENT_BASES.values(),
-                                        key=lambda x: x.id)
-        ]))
diff --git a/src/sentry/api/endpoints/project_details.py b/src/sentry/api/endpoints/project_details.py
index 9295c90f18..53dbeacd63 100644
--- a/src/sentry/api/endpoints/project_details.py
+++ b/src/sentry/api/endpoints/project_details.py
@@ -24,8 +24,6 @@ from sentry.models import (
     AuditLogEntryEvent, Group, GroupStatus, Project, ProjectBookmark, ProjectRedirect,
     ProjectStatus, ProjectTeam, UserOption,
 )
-from sentry.grouping.enhancer import Enhancements, InvalidEnhancerConfig
-from sentry.grouping.fingerprinting import FingerprintingRules, InvalidFingerprintingConfig
 from sentry.tasks.deletion import delete_project
 from sentry.utils.apidocs import scenario, attach_scenarios
 
@@ -100,9 +98,6 @@ class ProjectAdminSerializer(ProjectMemberSerializer):
     relayPiiConfig = serializers.CharField(required=False)
     scrubIPAddresses = serializers.BooleanField(required=False)
     groupingConfig = serializers.CharField(required=False)
-    groupingEnhancements = serializers.CharField(required=False)
-    groupingEnhancementsBase = serializers.CharField(required=False)
-    fingerprintingRules = serializers.CharField(required=False)
     scrapeJavaScript = serializers.BooleanField(required=False)
     allowedDomains = ListField(child=OriginField(), required=False)
     resolveAge = serializers.IntegerField(required=False)
@@ -173,28 +168,6 @@ class ProjectAdminSerializer(ProjectMemberSerializer):
             )
         return attrs
 
-    def validate_groupingEnhancements(self, attrs, source):
-        if not attrs[source]:
-            return attrs
-
-        try:
-            Enhancements.from_config_string(attrs[source])
-        except InvalidEnhancerConfig as e:
-            raise serializers.ValidationError(e.message)
-
-        return attrs
-
-    def validate_fingerprintingRules(self, attrs, source):
-        if not attrs[source]:
-            return attrs
-
-        try:
-            FingerprintingRules.from_config_string(attrs[source])
-        except InvalidFingerprintingConfig as e:
-            raise serializers.ValidationError(e.message)
-
-        return attrs
-
     def validate_copy_from_project(self, attrs, source):
         other_project_id = attrs[source]
 
@@ -407,17 +380,6 @@ class ProjectDetailsEndpoint(ProjectEndpoint):
         if result.get('groupingConfig') is not None:
             if project.update_option('sentry:grouping_config', result['groupingConfig']):
                 changed_proj_settings['sentry:grouping_config'] = result['groupingConfig']
-        if result.get('groupingEnhancements') is not None:
-            if project.update_option('sentry:grouping_enhancements',
-                                     result['groupingEnhancements']):
-                changed_proj_settings['sentry:grouping_enhancements'] = result['groupingEnhancements']
-        if result.get('groupingEnhancementsBase') is not None:
-            if project.update_option('sentry:grouping_enhancements_base',
-                                     result['groupingEnhancementsBase']):
-                changed_proj_settings['sentry:grouping_enhancements_base'] = result['groupingEnhancementsBase']
-        if result.get('fingerprintingRules') is not None:
-            if project.update_option('sentry:fingerprinting_rules', result['fingerprintingRules']):
-                changed_proj_settings['sentry:fingerprinting_rules'] = result['fingerprintingRules']
         if result.get('securityToken') is not None:
             if project.update_option('sentry:token', result['securityToken']):
                 changed_proj_settings['sentry:token'] = result['securityToken']
@@ -520,11 +482,6 @@ class ProjectDetailsEndpoint(ProjectEndpoint):
                     'sentry:grouping_config',
                     options['sentry:grouping_config'],
                 )
-            if 'sentry:fingerprinting_rules' in options:
-                project.update_option(
-                    'sentry:fingerprinting_rules',
-                    options['sentry:fingerprinting_rules'],
-                )
             if 'mail:subject_prefix' in options:
                 project.update_option(
                     'mail:subject_prefix',
diff --git a/src/sentry/api/serializers/models/project.py b/src/sentry/api/serializers/models/project.py
index f2db17ff40..c6b36292d5 100644
--- a/src/sentry/api/serializers/models/project.py
+++ b/src/sentry/api/serializers/models/project.py
@@ -21,7 +21,6 @@ from sentry.models import (
     ProjectStatus, ProjectTeam, Release, ReleaseProjectEnvironment, Deploy, UserOption, DEFAULT_SUBJECT_TEMPLATE
 )
 from sentry.grouping.strategies.configurations import DEFAULT_CONFIG as DEFAULT_GROUPING_CONFIG
-from sentry.grouping.enhancer import DEFAULT_ENHANCEMENT_BASE
 from sentry.utils.data_filters import FilterTypes
 from sentry.utils.db import is_postgres
 
@@ -426,9 +425,6 @@ class DetailedProjectSerializer(ProjectWithTeamSerializer):
             'sentry:verify_ssl',
             'sentry:scrub_ip_address',
             'sentry:grouping_config',
-            'sentry:grouping_enhancements',
-            'sentry:grouping_enhancements_base',
-            'sentry:fingerprinting_rules',
             'sentry:relay_pii_config',
             'feedback:branding',
             'digests:mail:minimum_delay',
@@ -547,9 +543,6 @@ class DetailedProjectSerializer(ProjectWithTeamSerializer):
                 'scrubIPAddresses': bool(attrs['options'].get('sentry:scrub_ip_address', False)),
                 'scrapeJavaScript': bool(attrs['options'].get('sentry:scrape_javascript', True)),
                 'groupingConfig': attrs['options'].get('sentry:grouping_config') or DEFAULT_GROUPING_CONFIG,
-                'groupingEnhancements': attrs['options'].get('sentry:grouping_enhancements') or u'',
-                'groupingEnhancementsBase': attrs['options'].get('sentry:grouping_enhancements_base') or DEFAULT_ENHANCEMENT_BASE,
-                'fingerprintingRules': attrs['options'].get('sentry:fingerprinting_rules') or u'',
                 'organization':
                 attrs['org'],
                 'plugins':
diff --git a/src/sentry/api/urls.py b/src/sentry/api/urls.py
index ad92a76196..f0caadcca6 100644
--- a/src/sentry/api/urls.py
+++ b/src/sentry/api/urls.py
@@ -217,7 +217,6 @@ from .endpoints.user_subscriptions import UserSubscriptionsEndpoint
 from .endpoints.event_file_committers import EventFileCommittersEndpoint
 from .endpoints.setup_wizard import SetupWizard
 from .endpoints.grouping_configs import GroupingConfigsEndpoint
-from .endpoints.grouping_enhancements import GroupingEnhancementsEndpoint
 
 
 urlpatterns = patterns(
@@ -1293,10 +1292,6 @@ urlpatterns = patterns(
         r'^grouping-configs/$', GroupingConfigsEndpoint.as_view(),
         name='sentry-api-0-grouping-configs'
     ),
-    url(
-        r'^grouping-enhancements/$', GroupingEnhancementsEndpoint.as_view(),
-        name='sentry-api-0-grouping-enhancements'
-    ),
 
     # Internal
     url(r'^internal/health/$', SystemHealthEndpoint.as_view(),
diff --git a/src/sentry/event_manager.py b/src/sentry/event_manager.py
index cfa598b62a..6051be6fcb 100644
--- a/src/sentry/event_manager.py
+++ b/src/sentry/event_manager.py
@@ -20,9 +20,7 @@ from sentry import buffer, eventtypes, eventstream, features, tagstore, tsdb, fi
 from sentry.constants import (
     LOG_LEVELS, LOG_LEVELS_MAP, VALID_PLATFORMS, MAX_TAG_VALUE_LENGTH,
 )
-from sentry.grouping.api import get_grouping_config_dict_for_project, \
-    get_grouping_config_dict_for_event_data, load_grouping_config, \
-    apply_server_fingerprinting, get_fingerprinting_config_for_project
+from sentry.grouping.api import get_grouping_config_dict_for_project
 from sentry.coreapi import (
     APIError,
     APIForbidden,
@@ -57,7 +55,7 @@ from sentry.utils.safe import safe_execute, trim, get_path, setdefault_path
 from sentry.utils.geo import rust_geoip
 from sentry.utils.validators import is_float
 from sentry.utils.contexts_normalization import normalize_user_agent
-from sentry.stacktraces import normalize_stacktraces_for_grouping
+from sentry.stacktraces import normalize_in_app
 from sentry.culprit import generate_culprit
 
 
@@ -692,9 +690,7 @@ class EventManager(object):
 
         # At this point we want to normalize the in_app values in case the
         # clients did not set this appropriately so far.
-        grouping_config = load_grouping_config(
-            get_grouping_config_dict_for_event_data(data, project))
-        normalize_stacktraces_for_grouping(data, grouping_config)
+        normalize_in_app(data)
 
         for plugin in plugins.for_project(project, version=None):
             added_tags = safe_execute(plugin.get_tags, event, _with_transaction=False)
@@ -717,7 +713,6 @@ class EventManager(object):
         # removed it from the payload.  The call to get_hashes will then
         # look at `grouping_config` to pick the right paramters.
         data['fingerprint'] = data.get('fingerprint') or ['{{ default }}']
-        apply_server_fingerprinting(data, get_fingerprinting_config_for_project(project))
         hashes = event.get_hashes()
         data['hashes'] = hashes
 
diff --git a/src/sentry/eventtypes/error.py b/src/sentry/eventtypes/error.py
index 80eaf3aa5d..fca03cd82b 100644
--- a/src/sentry/eventtypes/error.py
+++ b/src/sentry/eventtypes/error.py
@@ -15,7 +15,7 @@ def get_crash_location(exception, platform=None):
         if fn:
             func = frame.get('function')
             if func is not None:
-                from sentry.grouping.strategies.utils import trim_function_name
+                from sentry.interfaces.stacktrace import trim_function_name
                 func = trim_function_name(func, frame.get('platform') or platform)
             if frame.get('in_app'):
                 return fn, func
diff --git a/src/sentry/grouping/api.py b/src/sentry/grouping/api.py
index cb445e6b3d..95aa0e8f22 100644
--- a/src/sentry/grouping/api.py
+++ b/src/sentry/grouping/api.py
@@ -7,8 +7,6 @@ from sentry.grouping.strategies.configurations import CONFIGURATIONS, DEFAULT_CO
 from sentry.grouping.component import GroupingComponent
 from sentry.grouping.variants import ChecksumVariant, FallbackVariant, \
     ComponentVariant, CustomFingerprintVariant, SaltedComponentVariant
-from sentry.grouping.enhancer import Enhancements, InvalidEnhancerConfig, \
-    DEFAULT_ENHANCEMENTS_CONFIG, DEFAULT_ENHANCEMENT_BASE, ENHANCEMENT_BASES
 from sentry.grouping.utils import DEFAULT_FINGERPRINT_VALUES, hash_from_values
 
 
@@ -31,7 +29,9 @@ def get_grouping_config_dict_for_project(project, silent=True):
     if config_id is None:
         config_id = DEFAULT_CONFIG
     else:
-        if config_id not in CONFIGURATIONS:
+        try:
+            CONFIGURATIONS[config_id]
+        except KeyError:
             if not silent:
                 raise ConfigNotFoundException(config_id)
             config_id = DEFAULT_CONFIG
@@ -40,51 +40,13 @@ def get_grouping_config_dict_for_project(project, silent=True):
     # such as frames that mark the end of a stacktrace and more.
     return {
         'id': config_id,
-        'enhancements': _get_project_enhancements_config(project),
     }
 
 
-def get_grouping_config_dict_for_event_data(data, project):
-    """Returns the grouping config for an event dictionary."""
-    return data.get('grouping_config') \
-        or get_grouping_config_dict_for_project(project)
-
-
-def _get_project_enhancements_config(project):
-    enhancements = project.get_option('sentry:grouping_enhancements')
-    enhancements_base = project.get_option('sentry:grouping_enhancements_base')
-    if not enhancements and not enhancements_base:
-        return DEFAULT_ENHANCEMENTS_CONFIG
-
-    if enhancements_base is None or enhancements_base not in ENHANCEMENT_BASES:
-        enhancements_base = DEFAULT_ENHANCEMENT_BASE
-
-    # Instead of parsing and dumping out config here, we can make a
-    # shortcut
-    from sentry.utils.cache import cache
-    from sentry.utils.hashlib import md5_text
-    cache_key = 'grouping-enhancements:' + \
-        md5_text('%s|%s' % (enhancements_base, enhancements)).hexdigest()
-    rv = cache.get(cache_key)
-    if rv is not None:
-        return rv
-
-    try:
-        rv = Enhancements.from_config_string(
-            enhancements or '', bases=[enhancements_base]).dumps()
-    except InvalidEnhancerConfig:
-        rv = DEFAULT_ENHANCEMENTS_CONFIG
-    cache.set(cache_key, rv)
-    return rv
-
-
-def get_default_grouping_config_dict(id=None):
+def get_default_grouping_config_dict():
     """Returns the default grouping config."""
-    if id is None:
-        id = DEFAULT_CONFIG
     return {
-        'id': id,
-        'enhancements': DEFAULT_ENHANCEMENTS_CONFIG,
+        'id': DEFAULT_CONFIG,
     }
 
 
@@ -101,48 +63,6 @@ def load_grouping_config(config_dict=None):
     return CONFIGURATIONS[config_id](**config_dict)
 
 
-def get_fingerprinting_config_for_project(project):
-    from sentry.grouping.fingerprinting import FingerprintingRules, \
-        InvalidFingerprintingConfig
-    rules = project.get_option('sentry:fingerprint_rules')
-    if not rules:
-        return FingerprintingRules([])
-
-    from sentry.utils.cache import cache
-    from sentry.utils.hashlib import md5_text
-    cache_key = 'fingerprinting-rules:' + md5_text(rules).hexdigest()
-    rv = cache.get(cache_key)
-    if rv is not None:
-        return FingerprintingRules.from_json(rv)
-
-    try:
-        rv = FingerprintingRules.from_config_string(
-            rules or '')
-    except InvalidFingerprintingConfig:
-        rv = FingerprintingRules([])
-    cache.set(cache_key, rv.to_json())
-    return rv
-
-
-def apply_server_fingerprinting(event, config):
-    fingerprint = event['fingerprint']
-    if not any(x in DEFAULT_FINGERPRINT_VALUES for x in fingerprint):
-        return
-
-    new_values = config.get_fingerprint_values_for_event(event)
-    if new_values is None:
-        return
-
-    new_fingerprint = []
-    for value in fingerprint:
-        if value in DEFAULT_FINGERPRINT_VALUES:
-            new_fingerprint.extend(new_values)
-        else:
-            new_fingerprint.append(value)
-
-    event['fingerprint'] = new_fingerprint
-
-
 def _get_calculated_grouping_variants_for_event(event, config):
     winning_strategy = None
     precedence_hint = None
diff --git a/src/sentry/grouping/enhancement-configs/common:2019-03-23.txt b/src/sentry/grouping/enhancement-configs/common:2019-03-23.txt
deleted file mode 100644
index 890c7c0d00..0000000000
--- a/src/sentry/grouping/enhancement-configs/common:2019-03-23.txt
+++ /dev/null
@@ -1,32 +0,0 @@
-## * The default configuration of stacktrace grouping enhancers
-
-# exclude common paths
-family:native path:/usr/lib/**                                    -app
-family:native path:/usr/local/lib/**                              -app
-family:native path:/usr/local/Cellar/**                           -app
-
-# rust common modules
-family:native function:std::*                                     -app
-family:native function:core::*                                    -app
-family:native function:alloc::*                                   -app
-family:native function:__rust_*                                   -app
-
-# rust borders
-family:native function:std::panicking::begin_panic                ^-group -group -app
-family:native function:core::panicking::begin_panic               ^-group -group -app
-family:native function:failure::backtrace::Backtrace::new         ^-group -group -app
-family:native function:error_chain::make_backtrace                ^-group -group -app
-
-# C++ borders
-family:native function:_CxxThrowException                         ^-group -group -app
-family:native function:__cxa_throw                                ^-group -group -app
-family:native function:__assert_rtn                               ^-group -group -app
-
-# Objective-C
-family:native function:_NSRaiseError                              ^-group -group -app
-family:native function:_mh_execute_header                         -group -app
-
-# Breakpad
-family:native function:google_breakpad::*                         -app -group
-family:native function:google_breakpad::ExceptionHandler::SignalHandler ^-group -group
-family:native function:google_breakpad::ExceptionHandler::WriteMinidumpWithException ^-group -group
diff --git a/src/sentry/grouping/enhancement-configs/legacy:2019-03-12.txt b/src/sentry/grouping/enhancement-configs/legacy:2019-03-12.txt
deleted file mode 100644
index 395eb8cae5..0000000000
--- a/src/sentry/grouping/enhancement-configs/legacy:2019-03-12.txt
+++ /dev/null
@@ -1 +0,0 @@
-## * completely empty enhancement configs for legacy grouping
diff --git a/src/sentry/grouping/enhancer.py b/src/sentry/grouping/enhancer.py
deleted file mode 100644
index 915923b03c..0000000000
--- a/src/sentry/grouping/enhancer.py
+++ /dev/null
@@ -1,418 +0,0 @@
-from __future__ import absolute_import
-
-import os
-import six
-import base64
-import msgpack
-import inspect
-from itertools import izip
-
-from parsimonious.grammar import Grammar, NodeVisitor
-from parsimonious.exceptions import ParseError
-
-from sentry.grouping.utils import get_grouping_family_for_platform
-from sentry.utils.compat import implements_to_string
-from sentry.utils.glob import glob_match
-
-
-# Grammar is defined in EBNF syntax.
-enhancements_grammar = Grammar(r"""
-
-enhancements = line+
-
-line = _ (comment / rule / empty) newline?
-
-rule = _ matchers actions
-
-matchers       = matcher+
-matcher        = _ matcher_type sep argument
-matcher_type   = "path" / "function" / "module" / "family"
-
-actions        = action+
-action         = _ range? flag action_name
-action_name    = "group" / "app"
-flag           = "+" / "-"
-range          = "^" / "v"
-
-comment        = ~r"#[^\r\n]*"
-
-argument       = quoted / unquoted
-quoted         = ~r'"([^"\\]*(?:\\.[^"\\]*)*)"'
-unquoted       = ~r"\S+"
-
-sep     = ":"
-space   = " "
-empty   = ""
-newline = ~r"[\r\n]"
-_       = space*
-
-""")
-
-
-FAMILIES = {
-    'native': 'N',
-    'javascript': 'J',
-    'all': 'a',
-}
-REVERSE_FAMILIES = dict((v, k) for k, v in six.iteritems(FAMILIES))
-
-VERSION = 1
-MATCH_KEYS = {
-    'path': 'p',
-    'function': 'f',
-    'module': 'm',
-    'family': 'F',
-}
-SHORT_MATCH_KEYS = dict((v, k) for k, v in six.iteritems(MATCH_KEYS))
-
-ACTIONS = ['group', 'app']
-ACTION_FLAGS = {
-    (True, None): 0,
-    (True, 'up'): 1,
-    (True, 'down'): 2,
-    (False, None): 3,
-    (False, 'up'): 4,
-    (False, 'down'): 5,
-}
-REVERSE_ACTION_FLAGS = dict((v, k) for k, v in six.iteritems(ACTION_FLAGS))
-
-
-class InvalidEnhancerConfig(Exception):
-    pass
-
-
-class Match(object):
-
-    def __init__(self, key, pattern):
-        self.key = key
-        self.pattern = pattern
-
-    def matches_frame(self, frame_data, platform):
-        # Path matches are always case insensitive
-        if self.key == 'path':
-            value = frame_data.get('abs_path') or frame_data.get('filename') or ''
-            if glob_match(value, self.pattern, ignorecase=True,
-                          doublestar=True, path_normalize=True):
-                return True
-            if not value.startswith('/') and glob_match('/' + value, self.pattern,
-                                                        ignorecase=True, doublestar=True, path_normalize=True):
-                return True
-            return False
-
-        # families need custom handling as well
-        if self.key == 'family':
-            flags = self.pattern.split(',')
-            if 'all' in flags:
-                return True
-            family = get_grouping_family_for_platform(frame_data.get('platform') or platform)
-            return family in flags
-
-        # all other matches are case sensitive
-        if self.key == 'function':
-            from sentry.grouping.strategies.utils import trim_function_name
-            value = trim_function_name(
-                frame_data.get('function') or '<unknown>',
-                frame_data.get('platform') or platform)
-        elif self.key == 'module':
-            value = frame_data.get('module') or '<unknown>'
-        else:
-            # should not happen :)
-            value = '<unknown>'
-        return glob_match(value, self.pattern)
-
-    def _to_config_structure(self):
-        if self.key == 'family':
-            arg = ''.join(filter(None, [FAMILIES.get(x) for x in self.pattern.split(',')]))
-        else:
-            arg = self.pattern
-        return MATCH_KEYS[self.key] + arg
-
-    @classmethod
-    def _from_config_structure(cls, obj):
-        key = SHORT_MATCH_KEYS[obj[0]]
-        if key == 'family':
-            arg = ','.join(filter(None, [REVERSE_FAMILIES.get(x) for x in obj[1:]]))
-        else:
-            arg = obj[1:]
-        return cls(key, arg)
-
-
-@implements_to_string
-class Action(object):
-
-    def __init__(self, key, flag, range):
-        self.key = key
-        self.flag = flag
-        self.range = range
-
-    def __str__(self):
-        return '%s%s%s' % (
-            {'up': '^', 'down': 'v'}.get(self.range, ''),
-            self.flag and '+' or '-',
-            self.key,
-        )
-
-    def _to_config_structure(self):
-        return ACTIONS.index(self.key) | (ACTION_FLAGS[self.flag, self.range] << 4)
-
-    def _slice_to_range(self, seq, idx):
-        if self.range is None:
-            return [seq[idx]]
-        elif self.range == 'down':
-            return seq[idx + 1:]
-        elif self.range == 'up':
-            return seq[:idx]
-        return []
-
-    def apply_modifications_to_frame(self, frames, idx):
-        # Grouping is not stored on the frame
-        if self.key == 'group':
-            return
-        for frame in self._slice_to_range(frames, idx):
-            if self.key == 'app':
-                frame['in_app'] = self.flag
-
-    def update_frame_components_contributions(self, components, idx):
-        for component in self._slice_to_range(components, idx):
-            if self.key == 'group' and self.flag != component.contributes:
-                component.update(
-                    contributes=self.flag,
-                    hint='%s by grouping enhancement rule' % (
-                        self.flag and 'un-ignored' or 'ignored')
-                )
-            # The in app flag was set by `apply_modifications_to_frame`
-            # but we want to add a hint if there is none yet.
-            elif self.key == 'app' and \
-                    self.flag == component.contributes and \
-                    component.hint is None:
-                component.update(
-                    hint='marked %s by grouping enhancement rule' % (
-                        self.flag and 'in-app' or 'out of app')
-                )
-
-    @classmethod
-    def _from_config_structure(cls, num):
-        flag, range = REVERSE_ACTION_FLAGS[num >> 4]
-        return cls(ACTIONS[num & 0xf], flag, range)
-
-
-class Enhancements(object):
-
-    def __init__(self, rules, changelog=None, version=None, bases=None, id=None):
-        self.id = id
-        self.rules = rules
-        self.changelog = changelog
-        if version is None:
-            version = VERSION
-        self.version = version
-        if bases is None:
-            bases = []
-        self.bases = bases
-
-    def apply_modifications_to_frame(self, frames, platform):
-        """This applies the frame modifications to the frames itself.  This
-        does not affect grouping.
-        """
-        for rule in self.iter_rules():
-            for idx, frame in enumerate(frames):
-                actions = rule.get_matching_frame_actions(frame, platform)
-                for action in actions or ():
-                    action.apply_modifications_to_frame(frames, idx)
-
-    def update_frame_components_contributions(self, components, frames, platform):
-        for rule in self.iter_rules():
-            for idx, (component, frame) in enumerate(izip(components, frames)):
-                actions = rule.get_matching_frame_actions(frame, platform)
-                for action in actions or ():
-                    action.update_frame_components_contributions(components, idx)
-
-    def as_dict(self, with_rules=False):
-        rv = {
-            'id': self.id,
-            'changelog': self.changelog,
-            'bases': self.bases,
-        }
-        if with_rules:
-            rv['rules'] = [x.as_dict() for x in self.rules]
-        return rv
-
-    def _to_config_structure(self):
-        return [self.version, self.bases, [x._to_config_structure() for x in self.rules]]
-
-    def dumps(self):
-        return base64.urlsafe_b64encode(msgpack.dumps(
-            self._to_config_structure()).encode('zlib')).strip('=')
-
-    def iter_rules(self):
-        for base in self.bases:
-            base = ENHANCEMENT_BASES.get(base)
-            if base:
-                for rule in base.iter_rules():
-                    yield rule
-        for rule in self.rules:
-            yield rule
-
-    @classmethod
-    def _from_config_structure(cls, data):
-        version, bases, rules = data
-        if version != VERSION:
-            raise ValueError('Unknown version')
-        return cls(
-            rules=[Rule._from_config_structure(x) for x in rules],
-            version=version,
-            bases=bases
-        )
-
-    @classmethod
-    def loads(cls, data):
-        if six.PY2 and isinstance(data, six.text_type):
-            data = data.encode('ascii', 'ignore')
-        padded = data + b'=' * (4 - (len(data) % 4))
-        try:
-            return cls._from_config_structure(msgpack.loads(
-                base64.urlsafe_b64decode(padded).decode('zlib')))
-        except (LookupError, AttributeError, TypeError, ValueError) as e:
-            raise ValueError('invalid grouping enhancement config: %s' % e)
-
-    @classmethod
-    def from_config_string(self, s, bases=None, id=None):
-        try:
-            tree = enhancements_grammar.parse(s)
-        except ParseError as e:
-            context = e.text[e.pos:e.pos + 33]
-            if len(context) == 33:
-                context = context[:-1] + '...'
-            raise InvalidEnhancerConfig('Invalid syntax near "%s" (line %s, column %s)' % (
-                context, e.line(), e.column(),
-            ))
-        return EnhancmentsVisitor(bases, id).visit(tree)
-
-
-class Rule(object):
-
-    def __init__(self, matchers, actions):
-        self.matchers = matchers
-        self.actions = actions
-
-    def as_dict(self):
-        matchers = {}
-        for matcher in self.matchers:
-            matchers[matcher.key] = matcher.pattern
-        return {
-            'match': matchers,
-            'actions': [six.text_type(x) for x in self.actions],
-        }
-
-    def get_matching_frame_actions(self, frame_data, platform):
-        """Given a frame returns all the matching actions based on this rule.
-        If the rule does not match `None` is returned.
-        """
-        if self.matchers and all(m.matches_frame(frame_data, platform) for m in self.matchers):
-            return self.actions
-
-    def _to_config_structure(self):
-        return [
-            [x._to_config_structure() for x in self.matchers],
-            [x._to_config_structure() for x in self.actions],
-        ]
-
-    @classmethod
-    def _from_config_structure(cls, tuple):
-        return Rule([Match._from_config_structure(x) for x in tuple[0]],
-                    [Action._from_config_structure(x) for x in tuple[1]])
-
-
-class EnhancmentsVisitor(NodeVisitor):
-    visit_comment = visit_empty = lambda *a: None
-
-    def __init__(self, bases, id=None):
-        self.bases = bases
-        self.id = id
-
-    def visit_comment(self, node, children):
-        return node.text
-
-    def visit_enhancements(self, node, children):
-        changelog = []
-        rules = []
-        in_header = True
-        for child in children:
-            if isinstance(child, six.string_types):
-                if in_header and child[:2] == '##':
-                    changelog.append(child[2:].rstrip())
-                else:
-                    in_header = False
-            elif child is not None:
-                rules.append(child)
-                in_header = False
-        return Enhancements(
-            rules,
-            inspect.cleandoc('\n'.join(changelog)).rstrip() or None,
-            bases=self.bases,
-            id=self.id,
-        )
-
-    def visit_line(self, node, children):
-        _, line, _ = children
-        comment_or_rule_or_empty = line[0]
-        if comment_or_rule_or_empty:
-            return comment_or_rule_or_empty
-
-    def visit_rule(self, node, children):
-        _, matcher, actions = children
-        return Rule(matcher, actions)
-
-    def visit_matcher(self, node, children):
-        _, ty, _, argument = children
-        return Match(ty, argument)
-
-    def visit_matcher_type(self, node, children):
-        return node.text
-
-    def visit_argument(self, node, children):
-        return children[0]
-
-    def visit_action(self, node, children):
-        _, rng, flag, action_name = children
-        return Action(action_name, flag, rng[0] if rng else None)
-
-    def visit_action_name(self, node, children):
-        return node.text
-
-    def visit_flag(self, node, children):
-        return node.text == '+'
-
-    def visit_range(self, node, children):
-        if node.text == '^':
-            return 'up'
-        return 'down'
-
-    def visit_quoted(self, node, children):
-        return node.text[1:-1] \
-            .encode('ascii', 'backslashreplace') \
-            .decode('unicode-escape')
-
-    def visit_unquoted(self, node, children):
-        return node.text
-
-    def generic_visit(self, node, children):
-        return children
-
-
-def _load_configs():
-    rv = {}
-    base = os.path.join(os.path.abspath(os.path.dirname(__file__)), 'enhancement-configs')
-    for fn in os.listdir(base):
-        if fn.endswith('.txt'):
-            with open(os.path.join(base, fn)) as f:
-                rv[fn[:-4]] = Enhancements.from_config_string(f.read().decode('utf-8'), id=fn[:-4])
-    return rv
-
-
-ENHANCEMENT_BASES = _load_configs()
-LATEST_ENHANCEMENT_BASE = sorted(x for x in ENHANCEMENT_BASES
-                                 if x.startswith('common:'))[-1]
-DEFAULT_ENHANCEMENT_BASE = 'legacy:2019-03-12'
-DEFAULT_ENHANCEMENTS_CONFIG = Enhancements(rules=[], bases=[DEFAULT_ENHANCEMENT_BASE]).dumps()
-assert DEFAULT_ENHANCEMENT_BASE in ENHANCEMENT_BASES
-del _load_configs
diff --git a/src/sentry/grouping/fingerprinting.py b/src/sentry/grouping/fingerprinting.py
deleted file mode 100644
index 55890206d4..0000000000
--- a/src/sentry/grouping/fingerprinting.py
+++ /dev/null
@@ -1,323 +0,0 @@
-from __future__ import absolute_import
-
-import six
-import inspect
-
-from parsimonious.grammar import Grammar, NodeVisitor
-from parsimonious.exceptions import ParseError
-
-from sentry.grouping.utils import get_grouping_family_for_platform
-from sentry.utils.safe import get_path
-from sentry.utils.glob import glob_match
-
-
-VERSION = 1
-
-
-# Grammar is defined in EBNF syntax.
-fingerprinting_grammar = Grammar(r"""
-
-fingerprinting_rules = line+
-
-line = _ (comment / rule / empty) newline?
-
-rule = _ matchers _ follow _ fingerprint
-
-matchers       = matcher+
-matcher        = _ matcher_type sep argument
-matcher_type   = "path" / "function" / "module" / "family" / "type" / "value" / "message"
-argument       = quoted / unquoted
-
-fingerprint    = fp_value+
-fp_value        = _ fp_argument _ ","?
-fp_argument    = quoted / unquoted_no_comma
-
-comment        = ~r"#[^\r\n]*"
-
-quoted         = ~r'"([^"\\]*(?:\\.[^"\\]*)*)"'
-unquoted       = ~r"\S+"
-unquoted_no_comma = ~r"[^\s,]+"
-
-follow  = "->"
-sep     = ":"
-space   = " "
-empty   = ""
-newline = ~r"[\r\n]"
-_       = space*
-
-""")
-
-
-class InvalidFingerprintingConfig(Exception):
-    pass
-
-
-class EventAccess(object):
-
-    def __init__(self, event):
-        self.event = event
-        self._exceptions = None
-        self._frames = None
-        self._messages = None
-
-    def get_messages(self):
-        if self._messages is None:
-            self._messages = []
-            message = get_path(self.event, 'logentry', 'formatted', filter=True)
-            if message:
-                self._messages.append({
-                    'message': message,
-                    'family': get_grouping_family_for_platform(self.event.get('platform')),
-                })
-        return self._messages
-
-    def get_exceptions(self):
-        if self._exceptions is None:
-            self._exceptions = []
-            for exc in get_path(self.event, 'exception', 'values', filter=True) or ():
-                self._exceptions.append({
-                    'type': exc.get('type'),
-                    'value': exc.get('value'),
-                    'family': get_grouping_family_for_platform(self.event.get('platform')),
-                })
-        return self._exceptions
-
-    def get_frames(self, with_functions=False):
-        from sentry.grouping.strategies.utils import trim_function_name
-        if self._frames is None:
-            self._frames = []
-
-            def _push_frame(frame):
-                self._frames.append({
-                    'function': trim_function_name(frame.get('function'), '<unknown>'),
-                    'path': frame.get('abs_path') or frame.get('filename'),
-                    'module': frame.get('module'),
-                    'family': get_grouping_family_for_platform(frame.get('platform') or self.event.get('platform')),
-                })
-
-            have_errors = False
-            for exc in get_path(self.event, 'exception', 'values', filter=True) or ():
-                for frame in get_path(exc, 'stacktrace', 'frames', filter=True) or ():
-                    _push_frame(frame)
-                have_errors = True
-
-            if not have_errors:
-                frames = get_path(self.event, 'stacktrace', 'frames', filter=True)
-                if not frames:
-                    threads = get_path(self.event, 'threads', 'values', filter=True)
-                    if threads and len(threads) == 1:
-                        frames = get_path(threads, 0, 'stacktrace', 'frames')
-                for frame in frames or ():
-                    _push_frame(frame)
-
-        return self._frames
-
-    def get_values(self, interface):
-        if interface == 'message':
-            return self.get_messages()
-        elif interface == 'exception':
-            return self.get_exceptions()
-        elif interface == 'frame':
-            return self.get_frames()
-        return []
-
-
-class FingerprintingRules(object):
-
-    def __init__(self, rules, changelog=None, version=None):
-        if version is None:
-            version = VERSION
-        self.version = version
-        self.rules = rules
-        self.changelog = changelog
-
-    def iter_rules(self):
-        return iter(self.rules)
-
-    def get_fingerprint_values_for_event(self, event):
-        if not self.rules:
-            return
-        access = EventAccess(event)
-        for rule in self.iter_rules():
-            new_values = rule.get_fingerprint_values_for_event_access(access)
-            if new_values is not None:
-                return new_values
-
-    @classmethod
-    def _from_config_structure(cls, data):
-        version = data['version']
-        if version != VERSION:
-            raise ValueError('Unknown version')
-        return cls(
-            rules=[Rule._from_config_structure(x) for x in data['rules']],
-            version=version,
-        )
-
-    def _to_config_structure(self):
-        return {
-            'version': self.version,
-            'rules': [x._to_config_structure() for x in self.rules],
-        }
-
-    def to_json(self):
-        return self._to_config_structure()
-
-    @classmethod
-    def from_json(cls, value):
-        try:
-            return cls._from_config_structure(value)
-        except (LookupError, AttributeError, TypeError, ValueError) as e:
-            raise ValueError('invalid fingerprinting config: %s' % e)
-
-    @classmethod
-    def from_config_string(self, s):
-        try:
-            tree = fingerprinting_grammar.parse(s)
-        except ParseError as e:
-            context = e.text[e.pos:e.pos + 33]
-            if len(context) == 33:
-                context = context[:-1] + '...'
-            raise InvalidFingerprintingConfig('Invalid syntax near "%s" (line %s, column %s)' % (
-                context, e.line(), e.column(),
-            ))
-        return FingerprintingVisitor().visit(tree)
-
-
-class Match(object):
-
-    def __init__(self, key, pattern):
-        self.key = key
-        self.pattern = pattern
-
-    @property
-    def interface(self):
-        if self.key == 'message':
-            return 'message'
-        elif self.key in ('type', 'value'):
-            return 'exception'
-        return 'frame'
-
-    def matches_value(self, value):
-        if value is None:
-            return False
-        if self.key == 'path':
-            if glob_match(value, self.pattern, ignorecase=True,
-                          doublestar=True, path_normalize=True):
-                return True
-            if not value.startswith('/') and glob_match(
-                    '/' + value, self.pattern, ignorecase=True,
-                    doublestar=True, path_normalize=True):
-                return True
-        elif self.key == 'family':
-            flags = self.pattern.split(',')
-            if 'all' in flags or value in flags:
-                return True
-        elif glob_match(value, self.pattern, ignorecase=self.key in ('message', 'value')):
-            return True
-        return False
-
-    def _to_config_structure(self):
-        return [self.key, self.pattern]
-
-    @classmethod
-    def _from_config_structure(cls, obj):
-        return cls(obj[0], obj[1])
-
-
-class Rule(object):
-
-    def __init__(self, matchers, fingerprint):
-        self.matchers = matchers
-        self.fingerprint = fingerprint
-
-    def get_fingerprint_values_for_event_access(self, access):
-        by_interface = {}
-        for matcher in self.matchers:
-            by_interface.setdefault(matcher.interface, []).append(matcher)
-
-        for interface, matchers in six.iteritems(by_interface):
-            for values in access.get_values(interface):
-                if all(x.matches_value(values.get(x.key)) for x in matchers):
-                    break
-            else:
-                return
-
-        return self.fingerprint
-
-    def _to_config_structure(self):
-        return {
-            'matchers': [x._to_config_structure() for x in self.matchers],
-            'fingerprint': self.fingerprint,
-        }
-
-    @classmethod
-    def _from_config_structure(cls, obj):
-        return cls(
-            [Match._from_config_structure(x) for x in obj['matchers']],
-            obj['fingerprint']
-        )
-
-
-class FingerprintingVisitor(NodeVisitor):
-    visit_comment = visit_empty = lambda *a: None
-
-    def visit_comment(self, node, children):
-        return node.text
-
-    def visit_fingerprinting_rules(self, node, children):
-        changelog = []
-        rules = []
-        in_header = True
-        for child in children:
-            if isinstance(child, six.string_types):
-                if in_header and child[:2] == '##':
-                    changelog.append(child[2:].rstrip())
-                else:
-                    in_header = False
-            elif child is not None:
-                rules.append(child)
-                in_header = False
-        return FingerprintingRules(
-            rules,
-            inspect.cleandoc('\n'.join(changelog)).rstrip() or None,
-        )
-
-    def visit_line(self, node, children):
-        _, line, _ = children
-        comment_or_rule_or_empty = line[0]
-        if comment_or_rule_or_empty:
-            return comment_or_rule_or_empty
-
-    def visit_rule(self, node, children):
-        _, matcher, _, _, _, fingerprint = children
-        return Rule(matcher, fingerprint)
-
-    def visit_matcher(self, node, children):
-        _, ty, _, argument = children
-        return Match(ty, argument)
-
-    def visit_matcher_type(self, node, children):
-        return node.text
-
-    def visit_argument(self, node, children):
-        return children[0]
-    visit_fp_argument = visit_argument
-
-    def visit_fingerprint(self, node, children):
-        return children
-
-    def visit_fp_value(self, node, children):
-        _, argument, _, _ = children
-        return argument
-
-    def visit_quoted(self, node, children):
-        return node.text[1:-1] \
-            .encode('ascii', 'backslashreplace') \
-            .decode('unicode-escape')
-
-    def visit_unquoted(self, node, children):
-        return node.text
-    visit_unquoted_no_comma = visit_unquoted
-
-    def generic_visit(self, node, children):
-        return children
diff --git a/src/sentry/grouping/strategies/__init__.py b/src/sentry/grouping/strategies/__init__.py
index 4acf30d386..99fdadf569 100644
--- a/src/sentry/grouping/strategies/__init__.py
+++ b/src/sentry/grouping/strategies/__init__.py
@@ -2,20 +2,15 @@ from __future__ import absolute_import
 
 
 def _import_all():
-    # The import order here is important due to cross dependencies
-    strategy_modules = [
-        'message',
-        'security',
-        'threads',
-        'template',
-        'legacy',
-        'newstyle',
-        'combined',
-        'configurations',
-    ]
-    for module in strategy_modules:
+    import pkgutil
+    for _, module, _ in pkgutil.iter_modules(__path__):
+        if module == 'configurations':
+            continue
         __import__('%s.%s' % (__name__, module))
 
+    # import these last
+    __import__('%s.configurations' % __name__)
+
 
 _import_all()
 del _import_all
diff --git a/src/sentry/grouping/strategies/base.py b/src/sentry/grouping/strategies/base.py
index 3ba8eb52ab..6ef157d8ff 100644
--- a/src/sentry/grouping/strategies/base.py
+++ b/src/sentry/grouping/strategies/base.py
@@ -3,7 +3,6 @@ from __future__ import absolute_import
 import inspect
 
 from sentry.grouping.component import GroupingComponent
-from sentry.grouping.enhancer import Enhancements
 
 
 STRATEGIES = {}
@@ -164,12 +163,10 @@ class StrategyConfiguration(object):
     delegates = {}
     changelog = None
 
-    def __init__(self, enhancements=None):
-        if enhancements is None:
-            enhancements = Enhancements([])
-        else:
-            enhancements = Enhancements.loads(enhancements)
-        self.enhancements = enhancements
+    def __init__(self, options=None):
+        if options is None:
+            options = {}
+        self.options = options
 
     def __repr__(self):
         return '<%s %r>' % (
@@ -195,12 +192,11 @@ class StrategyConfiguration(object):
             hint='grouping algorithm does not consider this value',
         )
 
-    @classmethod
     def as_dict(self):
         return {
             'id': self.id,
+            'options': self.options,
             'strategies': sorted(self.strategies),
-            'changelog': self.changelog,
             'delegates': sorted(x.id for x in self.delegates.values()),
         }
 
diff --git a/src/sentry/grouping/strategies/combined.py b/src/sentry/grouping/strategies/combined.py
deleted file mode 100644
index c38454dae4..0000000000
--- a/src/sentry/grouping/strategies/combined.py
+++ /dev/null
@@ -1,79 +0,0 @@
-# coding: utf-8
-from __future__ import absolute_import
-
-from sentry.grouping.strategies.base import strategy, lookup_strategy
-from sentry.grouping.utils import get_grouping_family_for_platform
-
-
-def dispatch_strategy(id, targets, score=None):
-    interfaces = None
-    variants = None
-    has_variant_processor = False
-    selectors = []
-
-    for target, selector in targets:
-        s = lookup_strategy(target)
-        selectors.append((s, selector))
-        if interfaces is None:
-            interfaces = s.interfaces
-        if variants is None:
-            variants = s.variants
-        if score is None:
-            score = s.score
-        if s.variant_processor_func is not None:
-            has_variant_processor = True
-
-    @strategy(id=id, interfaces=interfaces, variants=variants, score=score)
-    def main_strategy(_interface, **meta):
-        for s, selector in selectors:
-            if selector(_interface, **meta):
-                return s(_interface, **meta)
-
-    if has_variant_processor:
-        @main_strategy.variant_processor
-        def variant_processor(variants, **meta):
-            for s, selector in selectors:
-                if selector(None, **meta):
-                    if s.variant_processor_func is None:
-                        return variants
-                    return s.variant_processor_func(variants, **meta)
-            return variants
-
-    return main_strategy
-
-
-def is_native(meta):
-    return get_grouping_family_for_platform(meta['event'].platform) == 'native'
-
-
-stacktrace_v1nl = dispatch_strategy(
-    id='stacktrace:v1nl',
-    targets=[
-        ('stacktrace:v1', lambda stacktrace, **meta: is_native(meta)),
-        ('stacktrace:legacy', lambda stacktrace, **meta: True),
-    ]
-)
-
-frame_v1nl = dispatch_strategy(
-    id='frame:v1nl',
-    targets=[
-        ('frame:v1', lambda stacktrace, **meta: is_native(meta)),
-        ('frame:legacy', lambda stacktrace, **meta: True),
-    ]
-)
-
-single_exception_v1nl = dispatch_strategy(
-    id='single-exception:v1nl',
-    targets=[
-        ('single-exception:v1', lambda exception, **meta: is_native(meta)),
-        ('single-exception:legacy', lambda exception, **meta: True),
-    ]
-)
-
-chained_exception_v1nl = dispatch_strategy(
-    id='chained-exception:v1nl',
-    targets=[
-        ('chained-exception:v1', lambda chained_exception, **meta: is_native(meta)),
-        ('chained-exception:legacy', lambda chained_exception, **meta: True),
-    ]
-)
diff --git a/src/sentry/grouping/strategies/configurations.py b/src/sentry/grouping/strategies/configurations.py
index ad875aab87..6b864bf207 100644
--- a/src/sentry/grouping/strategies/configurations.py
+++ b/src/sentry/grouping/strategies/configurations.py
@@ -46,19 +46,17 @@ register_strategy_config(
     ],
     changelog='''
         * Traditional grouping algorithm
-        * Some known weaknesses with regards to grouping of native frames
-        * No support for grouping enhancements
+        * Some known weeknesses with regards to grouping of native frames
     '''
 )
 
-# Simple newstyle grouping
+# Newstyle grouping
 #
-# This is a grouping strategy that applies very simple rules and will
-# become the new default at one point.  Optimized for native and
-# javascript but works for all platforms.
+# This is the new grouping strategy but it's not yet versioned because
+# it's not available to customers yet.
 
 register_strategy_config(
-    id='newstyle:2019-04-05',
+    id='new:wip',
     strategies=[
         'expect-ct:v1',
         'expect-staple:v1',
@@ -76,34 +74,6 @@ register_strategy_config(
         'single-exception:v1',
     ],
     changelog='''
-        * New grouping strategy optimized for native and javascript
-        * Supports grouping enhancements.
-    '''
-)
-
-# This is a combined strategy that dispatches to legacy:2019-03-12 and
-# newstyle:2019-04-05 depending on the platform.
-
-register_strategy_config(
-    id='combined:2019-04-07',
-    strategies=[
-        'expect-ct:v1',
-        'expect-staple:v1',
-        'hpkp:v1',
-        'csp:v1',
-        'threads:v1',
-        'stacktrace:v1nl',
-        'chained-exception:v1nl',
-        'template:v1',
-        'message:v1',
-    ],
-    delegates=[
-        'frame:v1nl',
-        'stacktrace:v1nl',
-        'single-exception:v1nl',
-    ],
-    changelog='''
-        * Uses `newstyle:2019-04-05` for native platforms
-        * Uses `legacy:2019-03-12` for all other platforms
+        * Work in progress grouping algorith that is not frozen in behavior yet
     '''
 )
diff --git a/src/sentry/grouping/strategies/exception.py b/src/sentry/grouping/strategies/exception.py
new file mode 100644
index 0000000000..1e8b165d5f
--- /dev/null
+++ b/src/sentry/grouping/strategies/exception.py
@@ -0,0 +1,58 @@
+from __future__ import absolute_import
+
+from sentry.grouping.component import GroupingComponent
+from sentry.grouping.strategies.base import strategy
+
+
+@strategy(
+    id='single-exception:v1',
+    interfaces=['singleexception'],
+    variants=['!system', 'app'],
+)
+def single_exception_v1(exception, config, **meta):
+    if exception.stacktrace is not None:
+        stacktrace_component = config.get_grouping_component(
+            exception.stacktrace, **meta)
+    else:
+        stacktrace_component = GroupingComponent(id='stacktrace')
+
+    type_component = GroupingComponent(
+        id='type',
+        values=[exception.type] if exception.type else [],
+    )
+
+    if exception.mechanism and exception.mechanism.synthetic:
+        type_component.update(
+            contributes=False,
+            hint='ignored because exception is synthetic'
+        )
+
+    return GroupingComponent(
+        id='exception',
+        values=[
+            stacktrace_component,
+            type_component,
+        ]
+    )
+
+
+@strategy(
+    id='chained-exception:v1',
+    interfaces=['exception'],
+    variants=['!system', 'app'],
+    score=2000,
+)
+def chained_exception_v1(chained_exception, config, **meta):
+    # Case 1: we have a single exception, use the single exception
+    # component directly to avoid a level of nesting
+    exceptions = chained_exception.exceptions()
+    if len(exceptions) == 1:
+        return config.get_grouping_component(exceptions[0], **meta)
+
+    # Case 2: produce a component for each chained exception
+    values = [config.get_grouping_component(exception, **meta)
+              for exception in exceptions]
+    return GroupingComponent(
+        id='chained-exception',
+        values=values,
+    )
diff --git a/src/sentry/grouping/strategies/legacy_exception.py b/src/sentry/grouping/strategies/legacy_exception.py
new file mode 100644
index 0000000000..028f862519
--- /dev/null
+++ b/src/sentry/grouping/strategies/legacy_exception.py
@@ -0,0 +1,128 @@
+from __future__ import absolute_import
+
+import six
+
+from sentry.grouping.component import GroupingComponent
+from sentry.grouping.strategies.base import strategy
+
+
+@strategy(
+    id='single-exception:legacy',
+    interfaces=['singleexception'],
+    variants=['!system', 'app'],
+)
+def single_exception_legacy(exception, config, **meta):
+    type_component = GroupingComponent(
+        id='type',
+        values=[exception.type] if exception.type else [],
+        contributes=False
+    )
+    value_component = GroupingComponent(
+        id='value',
+        values=[exception.value] if exception.value else [],
+        contributes=False
+    )
+    stacktrace_component = GroupingComponent(id='stacktrace')
+
+    if exception.stacktrace is not None:
+        stacktrace_component = config.get_grouping_component(
+            exception.stacktrace, **meta)
+        if stacktrace_component.contributes:
+            if exception.type:
+                type_component.update(contributes=True)
+                if exception.value:
+                    value_component.update(hint='stacktrace and type take precedence')
+            elif exception.value:
+                value_component.update(hint='stacktrace takes precedence')
+
+    if not stacktrace_component.contributes:
+        if exception.type:
+            type_component.update(contributes=True)
+        if exception.value:
+            value_component.update(contributes=True)
+
+    return GroupingComponent(
+        id='exception',
+        values=[
+            stacktrace_component,
+            type_component,
+            value_component,
+        ]
+    )
+
+
+@strategy(
+    id='chained-exception:legacy',
+    interfaces=['exception'],
+    variants=['!system', 'app'],
+    score=2000,
+)
+def chained_exception_legacy(chained_exception, config, **meta):
+    # Case 1: we have a single exception, use the single exception
+    # component directly
+    exceptions = chained_exception.exceptions()
+    if len(exceptions) == 1:
+        return config.get_grouping_component(exceptions[0], **meta)
+
+    # Case 2: try to build a new component out of the individual
+    # errors however with a trick.  In case any exeption has a
+    # stacktrace we want to ignore all other exceptions.
+    any_stacktraces = False
+    values = []
+    for exception in exceptions:
+        exception_component = config.get_grouping_component(exception, **meta)
+        stacktrace_component = exception_component.get_subcomponent('stacktrace')
+        if stacktrace_component is not None and \
+           stacktrace_component.contributes:
+            any_stacktraces = True
+        values.append(exception_component)
+
+    if any_stacktraces:
+        for value in values:
+            stacktrace_component = value.get_subcomponent('stacktrace')
+            if stacktrace_component is None or not stacktrace_component.contributes:
+                value.update(
+                    contributes=False,
+                    hint='exception has no stacktrace',
+                )
+
+    return GroupingComponent(
+        id='chained-exception',
+        values=values,
+    )
+
+
+@chained_exception_legacy.variant_processor
+def chained_exception_legacy_variant_processor(variants, config, **meta):
+    if len(variants) <= 1:
+        return variants
+    any_stacktrace_contributes = False
+    non_contributing_components = []
+    stacktrace_variants = set()
+
+    # In case any of the variants has a contributing stacktrace, we want
+    # to make all other variants non contributing.  Thr e
+    for (key, component) in six.iteritems(variants):
+        if any(s.contributes for s in component.iter_subcomponents(
+                id='stacktrace', recursive=True)):
+            any_stacktrace_contributes = True
+            stacktrace_variants.add(key)
+        else:
+            non_contributing_components.append(component)
+
+    if any_stacktrace_contributes:
+        if len(stacktrace_variants) == 1:
+            hint_suffix = 'but the %s variant does' % next(iter(stacktrace_variants))
+        else:
+            # this branch is basically dead because we only have two
+            # variants right now, but this is so this does not break in
+            # the future.
+            hint_suffix = 'others do'
+        for component in non_contributing_components:
+            component.update(
+                contributes=False,
+                hint='ignored because this variant does not contain a '
+                'stacktrace, but %s' % hint_suffix
+            )
+
+    return variants
diff --git a/src/sentry/grouping/strategies/legacy.py b/src/sentry/grouping/strategies/legacy_stacktrace.py
similarity index 77%
rename from src/sentry/grouping/strategies/legacy.py
rename to src/sentry/grouping/strategies/legacy_stacktrace.py
index b824c19384..f36e9be1fd 100644
--- a/src/sentry/grouping/strategies/legacy.py
+++ b/src/sentry/grouping/strategies/legacy_stacktrace.py
@@ -1,7 +1,6 @@
 from __future__ import absolute_import
 
 import re
-import six
 import posixpath
 
 from sentry.grouping.component import GroupingComponent
@@ -160,128 +159,6 @@ def remove_function_outliers_legacy(function):
     return new_function, None
 
 
-@strategy(
-    id='single-exception:legacy',
-    interfaces=['singleexception'],
-    variants=['!system', 'app'],
-)
-def single_exception_legacy(exception, config, **meta):
-    type_component = GroupingComponent(
-        id='type',
-        values=[exception.type] if exception.type else [],
-        contributes=False
-    )
-    value_component = GroupingComponent(
-        id='value',
-        values=[exception.value] if exception.value else [],
-        contributes=False
-    )
-    stacktrace_component = GroupingComponent(id='stacktrace')
-
-    if exception.stacktrace is not None:
-        stacktrace_component = config.get_grouping_component(
-            exception.stacktrace, **meta)
-        if stacktrace_component.contributes:
-            if exception.type:
-                type_component.update(contributes=True)
-                if exception.value:
-                    value_component.update(hint='stacktrace and type take precedence')
-            elif exception.value:
-                value_component.update(hint='stacktrace takes precedence')
-
-    if not stacktrace_component.contributes:
-        if exception.type:
-            type_component.update(contributes=True)
-        if exception.value:
-            value_component.update(contributes=True)
-
-    return GroupingComponent(
-        id='exception',
-        values=[
-            stacktrace_component,
-            type_component,
-            value_component,
-        ]
-    )
-
-
-@strategy(
-    id='chained-exception:legacy',
-    interfaces=['exception'],
-    variants=['!system', 'app'],
-    score=2000,
-)
-def chained_exception_legacy(chained_exception, config, **meta):
-    # Case 1: we have a single exception, use the single exception
-    # component directly
-    exceptions = chained_exception.exceptions()
-    if len(exceptions) == 1:
-        return config.get_grouping_component(exceptions[0], **meta)
-
-    # Case 2: try to build a new component out of the individual
-    # errors however with a trick.  In case any exeption has a
-    # stacktrace we want to ignore all other exceptions.
-    any_stacktraces = False
-    values = []
-    for exception in exceptions:
-        exception_component = config.get_grouping_component(exception, **meta)
-        stacktrace_component = exception_component.get_subcomponent('stacktrace')
-        if stacktrace_component is not None and \
-           stacktrace_component.contributes:
-            any_stacktraces = True
-        values.append(exception_component)
-
-    if any_stacktraces:
-        for value in values:
-            stacktrace_component = value.get_subcomponent('stacktrace')
-            if stacktrace_component is None or not stacktrace_component.contributes:
-                value.update(
-                    contributes=False,
-                    hint='exception has no stacktrace',
-                )
-
-    return GroupingComponent(
-        id='chained-exception',
-        values=values,
-    )
-
-
-@chained_exception_legacy.variant_processor
-def chained_exception_legacy_variant_processor(variants, config, **meta):
-    if len(variants) <= 1:
-        return variants
-    any_stacktrace_contributes = False
-    non_contributing_components = []
-    stacktrace_variants = set()
-
-    # In case any of the variants has a contributing stacktrace, we want
-    # to make all other variants non contributing.  Thr e
-    for (key, component) in six.iteritems(variants):
-        if any(s.contributes for s in component.iter_subcomponents(
-                id='stacktrace', recursive=True)):
-            any_stacktrace_contributes = True
-            stacktrace_variants.add(key)
-        else:
-            non_contributing_components.append(component)
-
-    if any_stacktrace_contributes:
-        if len(stacktrace_variants) == 1:
-            hint_suffix = 'but the %s variant does' % next(iter(stacktrace_variants))
-        else:
-            # this branch is basically dead because we only have two
-            # variants right now, but this is so this does not break in
-            # the future.
-            hint_suffix = 'others do'
-        for component in non_contributing_components:
-            component.update(
-                contributes=False,
-                hint='ignored because this variant does not contain a '
-                'stacktrace, but %s' % hint_suffix
-            )
-
-    return variants
-
-
 @strategy(
     id='frame:legacy',
     interfaces=['frame'],
diff --git a/src/sentry/grouping/strategies/newstyle.py b/src/sentry/grouping/strategies/stacktrace.py
similarity index 82%
rename from src/sentry/grouping/strategies/newstyle.py
rename to src/sentry/grouping/strategies/stacktrace.py
index d1631aea3f..69eeee1a5a 100644
--- a/src/sentry/grouping/strategies/newstyle.py
+++ b/src/sentry/grouping/strategies/stacktrace.py
@@ -8,9 +8,7 @@ from sentry.grouping.strategies.base import strategy
 from sentry.grouping.strategies.utils import replace_enclosed_string, split_func_tokens
 
 
-_rust_hash = re.compile(r'::h[a-z0-9]{16}$')
-_windecl_hash = re.compile(r'^@?(.*?)@[0-9]+$')
-_ruby_erb_func = re.compile(r'__\d{4,}_\d{4,}$')
+_ruby_anon_func = re.compile(r'_\d{2,}')
 _basename_re = re.compile(r'[/\\]')
 _cpp_trailer_re = re.compile(r'(\bconst\b|&)$')
 
@@ -198,17 +196,10 @@ def isolate_native_function_v1(function):
     # The last token is the function name.
     tokens = split_func_tokens(function)
     if tokens:
-        function = tokens[-1].replace(u'⟨', '<').replace(u'◯', '()')
+        return tokens[-1].replace(u'⟨', '<').replace(u'◯', '()')
 
     # This really should never happen
-    else:
-        function = original_function
-
-    # trim off rust markers
-    function = _rust_hash.sub('', function)
-
-    # trim off windows decl markers
-    return _windecl_hash.sub('\\1', function)
+    return original_function
 
 
 def get_function_component_v1(function, platform):
@@ -234,11 +225,11 @@ def get_function_component_v1(function, platform):
                 hint='ruby block'
             )
         else:
-            new_function = _ruby_erb_func.sub('', function)
+            new_function = _ruby_anon_func.sub('_<anon>', function)
             if new_function != function:
                 function_component.update(
                     values=[new_function],
-                    hint='removed generated erb template suffix'
+                    hint='removed integer suffix'
                 )
 
     elif platform == 'php':
@@ -322,7 +313,6 @@ def stacktrace_v1(stacktrace, config, variant, **meta):
 
     values = []
     prev_frame = None
-    frames_for_filtering = []
     for frame in frames:
         frame_component = config.get_grouping_component(frame, variant=variant, **meta)
         if variant == 'app' and not frame.in_app and not all_frames_considered_in_app:
@@ -340,68 +330,10 @@ def stacktrace_v1(stacktrace, config, variant, **meta):
                 hint='frame considered in-app because no frame is in-app'
             )
         values.append(frame_component)
-        frames_for_filtering.append(frame._data)
         prev_frame = frame
 
-    config.enhancements.update_frame_components_contributions(
-        values, frames_for_filtering, meta['event'].platform)
-
     return GroupingComponent(
         id='stacktrace',
         values=values,
         hint=hint,
     )
-
-
-@strategy(
-    id='single-exception:v1',
-    interfaces=['singleexception'],
-    variants=['!system', 'app'],
-)
-def single_exception_v1(exception, config, **meta):
-    if exception.stacktrace is not None:
-        stacktrace_component = config.get_grouping_component(
-            exception.stacktrace, **meta)
-    else:
-        stacktrace_component = GroupingComponent(id='stacktrace')
-
-    type_component = GroupingComponent(
-        id='type',
-        values=[exception.type] if exception.type else [],
-    )
-
-    if exception.mechanism and exception.mechanism.synthetic:
-        type_component.update(
-            contributes=False,
-            hint='ignored because exception is synthetic'
-        )
-
-    return GroupingComponent(
-        id='exception',
-        values=[
-            stacktrace_component,
-            type_component,
-        ]
-    )
-
-
-@strategy(
-    id='chained-exception:v1',
-    interfaces=['exception'],
-    variants=['!system', 'app'],
-    score=2000,
-)
-def chained_exception_v1(chained_exception, config, **meta):
-    # Case 1: we have a single exception, use the single exception
-    # component directly to avoid a level of nesting
-    exceptions = chained_exception.exceptions()
-    if len(exceptions) == 1:
-        return config.get_grouping_component(exceptions[0], **meta)
-
-    # Case 2: produce a component for each chained exception
-    values = [config.get_grouping_component(exception, **meta)
-              for exception in exceptions]
-    return GroupingComponent(
-        id='chained-exception',
-        values=values,
-    )
diff --git a/src/sentry/grouping/strategies/utils.py b/src/sentry/grouping/strategies/utils.py
index edb6f4163c..f2005190c9 100644
--- a/src/sentry/grouping/strategies/utils.py
+++ b/src/sentry/grouping/strategies/utils.py
@@ -1,8 +1,5 @@
 from __future__ import absolute_import
 
-import six
-
-
 PAIRS = {
     '(': ')',
     '{': '}',
@@ -65,18 +62,3 @@ def split_func_tokens(s):
         rv.append(buf)
 
     return [''.join(x) for x in rv]
-
-
-def trim_function_name(function, platform):
-    """This works similar to `get_function_component_v1` but returns a
-    string in all situations that was just trimmed.  This function is supposed
-    to be used for display purposes in the UI.
-
-    The return value of this function does not need to be kept stable so it
-    can be upgraded without breaking grouping.
-    """
-    from sentry.grouping.strategies.newstyle import get_function_component_v1
-    component = get_function_component_v1(function, platform)
-    if len(component.values) == 1 and isinstance(component.values[0], six.string_types):
-        return component.values[0]
-    return function
diff --git a/src/sentry/grouping/utils.py b/src/sentry/grouping/utils.py
index a760a8702c..79f1e214a3 100644
--- a/src/sentry/grouping/utils.py
+++ b/src/sentry/grouping/utils.py
@@ -12,11 +12,3 @@ def hash_from_values(values):
     for value in values:
         result.update(force_bytes(value, errors='replace'))
     return result.hexdigest()
-
-
-def get_grouping_family_for_platform(platform):
-    if platform in ('objc', 'cocoa', 'swift', 'native', 'c'):
-        return 'native'
-    if platform in ('javascript', 'node'):
-        return 'javascript'
-    return 'other'
diff --git a/src/sentry/interfaces/stacktrace.py b/src/sentry/interfaces/stacktrace.py
index f69124186f..6ff55dfa0b 100644
--- a/src/sentry/interfaces/stacktrace.py
+++ b/src/sentry/interfaces/stacktrace.py
@@ -10,6 +10,7 @@ from __future__ import absolute_import
 
 __all__ = ('Stacktrace', )
 
+import re
 import six
 from itertools import islice, chain
 
@@ -25,6 +26,11 @@ from sentry.utils.safe import trim, trim_dict
 from sentry.web.helpers import render_to_string
 
 
+# Native function trim re.  For now this is a simple hack until we have the
+# language hints in which will let us trim this down better.
+_native_function_trim_re = re.compile(r'^(.[^(]*)\(')
+
+
 def max_addr(cur, addr):
     if addr is None:
         return cur
@@ -49,6 +55,20 @@ def trim_package(pkg):
     return pkg
 
 
+def trim_function_name(func, platform):
+    # TODO(mitsuhiko): we actually want to use the language information here
+    # but we don't have that yet.
+    if platform in ('objc', 'cocoa', 'native'):
+        # objc function
+        if func.startswith(('[', '+[', '-[')):
+            return func
+        # c/c++ function hopefully
+        match = _native_function_trim_re.match(func.strip())
+        if match is not None:
+            return match.group(1).strip()
+    return func
+
+
 def to_hex_addr(addr):
     if addr is None:
         return None
@@ -643,8 +663,7 @@ class Stacktrace(Interface):
         # This is a simplified logic from how the normalizer works.
         # Because this always works on normalized data we do not have to
         # consider the "all frames are in_app" case.  The normalizer lives
-        # in stacktraces.normalize_stacktraces_for_grouping which will take
-        # care of that.
+        # in stacktraces.normalize_in_app which will take care of that.
         return any(frame.in_app for frame in self.frames)
 
     def get_longest_address(self):
diff --git a/src/sentry/models/event.py b/src/sentry/models/event.py
index 9370a8b3cd..25f4ddcb1d 100644
--- a/src/sentry/models/event.py
+++ b/src/sentry/models/event.py
@@ -115,10 +115,7 @@ class EventCommon(object):
 
     @project.setter
     def project(self, project):
-        if project is None:
-            self.project_id = None
-        else:
-            self.project_id = project.id
+        self.project_id = project.id
         self._project_cache = project
 
     def get_interfaces(self):
@@ -163,8 +160,9 @@ class EventCommon(object):
 
     def get_grouping_config(self):
         """Returns the event grouping config."""
-        from sentry.grouping.api import get_grouping_config_dict_for_event_data
-        return get_grouping_config_dict_for_event_data(self.data, self.project)
+        from sentry.grouping.api import get_grouping_config_dict_for_project
+        return self.data.get('grouping_config') \
+            or get_grouping_config_dict_for_project(self.project)
 
     def get_hashes(self, force_config=None):
         """
diff --git a/src/sentry/stacktraces.py b/src/sentry/stacktraces.py
index f579c0ff98..b3ff6104b5 100644
--- a/src/sentry/stacktraces.py
+++ b/src/sentry/stacktraces.py
@@ -197,7 +197,7 @@ def find_stacktraces_in_data(data, include_raw=False):
     return rv
 
 
-def normalize_stacktraces_for_grouping(data, grouping_config=None):
+def normalize_in_app(data):
     def _has_system_frames(frames):
         system_frames = 0
         for frame in frames:
@@ -205,24 +205,8 @@ def normalize_stacktraces_for_grouping(data, grouping_config=None):
                 system_frames += 1
         return bool(system_frames) and len(frames) != system_frames
 
-    stacktraces = []
-
     for stacktrace_info in find_stacktraces_in_data(data, include_raw=True):
         frames = get_path(stacktrace_info.stacktrace, 'frames', filter=True, default=())
-        if frames:
-            stacktraces.append(frames)
-
-    if not stacktraces:
-        return
-
-    # If a grouping config is available, run grouping enhancers
-    if grouping_config is not None:
-        platform = data.get('platform')
-        for frames in stacktraces:
-            grouping_config.enhancements.apply_modifications_to_frame(frames, platform)
-
-    # normalize in-app
-    for frames in stacktraces:
         has_system_frames = _has_system_frames(frames)
         for frame in frames:
             if not has_system_frames:
@@ -376,7 +360,7 @@ def dedup_errors(errors):
     return rv
 
 
-def process_stacktraces(data, make_processors=None, set_raw_stacktrace=True):
+def process_stacktraces(data, make_processors=None):
     infos = find_stacktraces_in_data(data)
     if make_processors is None:
         processors = get_processors_for_stacktraces(data, infos)
@@ -407,8 +391,7 @@ def process_stacktraces(data, make_processors=None, set_raw_stacktrace=True):
             if new_frames is not None:
                 stacktrace_info.stacktrace['frames'] = new_frames
                 changed = True
-            if set_raw_stacktrace and \
-               new_raw_frames is not None and \
+            if new_raw_frames is not None and \
                stacktrace_info.container is not None:
                 stacktrace_info.container['raw_stacktrace'] = dict(
                     stacktrace_info.stacktrace, frames=new_raw_frames
diff --git a/src/sentry/static/sentry/app/components/panels/hintPanelItem.jsx b/src/sentry/static/sentry/app/components/panels/hintPanelItem.jsx
deleted file mode 100644
index 4dc849f5b8..0000000000
--- a/src/sentry/static/sentry/app/components/panels/hintPanelItem.jsx
+++ /dev/null
@@ -1,29 +0,0 @@
-import {Flex} from 'grid-emotion';
-import PropTypes from 'prop-types';
-import styled from 'react-emotion';
-
-const HintPanelItem = styled(Flex)`
-  border-top: 1px solid ${p => p.theme.borderLighter};
-  border-left: 1px solid ${p => p.theme.borderLighter};
-  border-bottom: 1px solid ${p => p.theme.borderLight};
-  background: ${p => p.theme.whiteDark};
-  font-size: ${p => p.theme.fontSizeMedium};
-
-  h2 {
-    font-size: ${p => p.theme.fontSizeLarge};
-    margin-bottom: 0;
-  }
-
-  &:last-child {
-    border: 0;
-  }
-`;
-
-HintPanelItem.propTypes = {
-  p: PropTypes.number,
-};
-HintPanelItem.defaultProps = {
-  p: 2,
-};
-
-export default HintPanelItem;
diff --git a/src/sentry/static/sentry/app/data/forms/projectGeneralSettings.jsx b/src/sentry/static/sentry/app/data/forms/projectGeneralSettings.jsx
index b0d38831f9..8516d7ac97 100644
--- a/src/sentry/static/sentry/app/data/forms/projectGeneralSettings.jsx
+++ b/src/sentry/static/sentry/app/data/forms/projectGeneralSettings.jsx
@@ -1,13 +1,11 @@
 import {Flex} from 'grid-emotion';
 import React from 'react';
 import styled from 'react-emotion';
-import marked from 'marked';
 
 import {extractMultilineFields} from 'app/utils';
 import {flattenedPlatforms} from 'app/views/onboarding/utils';
 import {t, tct, tn} from 'app/locale';
 import Platformicon from 'app/components/platformicon';
-import HintPanelItem from 'app/components/panels/hintPanelItem';
 import getDynamicText from 'app/utils/getDynamicText';
 import slugify from 'app/utils/slugify';
 import space from 'app/styles/space';
@@ -116,134 +114,11 @@ export const fields = {
     name: 'groupingConfig',
     type: 'array',
     label: t('Grouping Config'),
-    saveOnBlur: false,
-    saveMessageAlertType: 'info',
-    saveMessage: t('Changing grouping config will apply to future events only.'),
-    selectionInfoFunction: args => {
-      const {groupingConfigs, value} = args;
-      const selection = groupingConfigs.find(({id}) => id == value);
-      const changelog = (selection && selection.changelog) || '';
-      if (!changelog) {
-        return null;
-      }
-      return (
-        <HintPanelItem>
-          <div>
-            <h2>{selection.id}:</h2>
-            <div dangerouslySetInnerHTML={{__html: marked(changelog)}} />
-          </div>
-        </HintPanelItem>
-      );
-    },
     choices: ({groupingConfigs}) => {
       return groupingConfigs.map(({id}) => [id.toString(), <code key={id}>{id}</code>]);
     },
     help: t('Sets the grouping algorithm to be used for new events.'),
   },
-  groupingEnhancementsBase: {
-    name: 'groupingEnhancementsBase',
-    type: 'array',
-    label: t('Grouping Enhancements Base'),
-    saveOnBlur: false,
-    saveMessageAlertType: 'info',
-    saveMessage: t('Changing grouping enhancements will apply to future events only.'),
-    selectionInfoFunction: args => {
-      const {groupingEnhancementBases, value} = args;
-      const selection = groupingEnhancementBases.find(({id}) => id == value);
-      const changelog = (selection && selection.changelog) || '';
-      if (!changelog) {
-        return null;
-      }
-      return (
-        <HintPanelItem>
-          <div>
-            <h2>{selection.id}:</h2>
-            <div dangerouslySetInnerHTML={{__html: marked(changelog)}} />
-          </div>
-        </HintPanelItem>
-      );
-    },
-    choices: ({groupingEnhancementBases}) => {
-      return groupingEnhancementBases.map(({id}) => [
-        id.toString(),
-        <code key={id}>{id}</code>,
-      ]);
-    },
-    help: t('The built-in base version of grouping enhancements.'),
-  },
-  groupingEnhancements: {
-    name: 'groupingEnhancements',
-    type: 'string',
-    label: t('Custom Grouping Enhancements'),
-    placeholder: t('function:raise_an_exception ^-group\nfunction:namespace::* +app'),
-    multiline: true,
-    monospace: true,
-    autosize: true,
-    inline: false,
-    maxRows: 20,
-    saveOnBlur: false,
-    saveMessageAlertType: 'info',
-    saveMessage: t('Changing grouping enhancements will apply to future events only.'),
-    formatMessageValue: false,
-    help: (
-      <React.Fragment>
-        <div style={{marginBottom: 3}}>
-          {tct(
-            `This can be used to enhance the grouping algorithm with custom rules.
-        Rules follow the pattern [pattern].`,
-            {
-              pattern: <code>matcher:glob [^v]?[+-]flag</code>,
-            }
-          )}
-        </div>
-        <pre>
-          {'# remove all frames above a certain function from grouping\n' +
-            'function:panic_handler      ^-group\n' +
-            '# mark all functions following a prefix in-app\n' +
-            'function:mylibrary_*        +app\n'}
-        </pre>
-      </React.Fragment>
-    ),
-    validate: ({id, form}) => {
-      return [];
-    },
-  },
-  fingerprintingRules: {
-    name: 'fingerprintingRules',
-    type: 'string',
-    label: t('Server Side Fingerprinting'),
-    placeholder: t(
-      'type:MyException -> fingerprint-value\nfunction:some_panic_function -> fingerprint-value'
-    ),
-    multiline: true,
-    monospace: true,
-    autosize: true,
-    inline: false,
-    maxRows: 20,
-    saveOnBlur: false,
-    saveMessageAlertType: 'info',
-    saveMessage: t('Changing fingerprinting rules will apply to future events only.'),
-    formatMessageValue: false,
-    help: (
-      <React.Fragment>
-        <div style={{marginBottom: 3}}>
-          {tct(
-            `This can be used to modify the fingerprinting rules on the server with custom rules.
-        Rules follow the pattern [pattern].`,
-            {
-              pattern: <code>matcher:glob -> fingerprint, values</code>,
-            }
-          )}
-        </div>
-        <pre>
-          {'# force all errors of the same type to have the same fingerprint\n' +
-            'type:DatabaseUnavailable -> system-down\n' +
-            '# force all memory allocation errors to be grouped together\n' +
-            'family:native function:malloc -> memory-allocation-error\n'}
-        </pre>
-      </React.Fragment>
-    ),
-  },
 
   dataScrubber: {
     name: 'dataScrubber',
diff --git a/src/sentry/static/sentry/app/styles/input.jsx b/src/sentry/static/sentry/app/styles/input.jsx
index 0df2cb7a47..adff183751 100644
--- a/src/sentry/static/sentry/app/styles/input.jsx
+++ b/src/sentry/static/sentry/app/styles/input.jsx
@@ -20,8 +20,6 @@ const inputStyles = props => {
     transition: border 0.1s linear;
     resize: vertical;
 
-    ${props.monospace ? `font-family: ${props.theme.text.familyMono}` : ''};
-
     ${readOnlyStyle(props)};
 
     &:focus {
diff --git a/src/sentry/static/sentry/app/views/settings/components/forms/controls/textarea.jsx b/src/sentry/static/sentry/app/views/settings/components/forms/controls/textarea.jsx
index bb3142ce6c..5e86cacdfb 100644
--- a/src/sentry/static/sentry/app/views/settings/components/forms/controls/textarea.jsx
+++ b/src/sentry/static/sentry/app/views/settings/components/forms/controls/textarea.jsx
@@ -23,10 +23,6 @@ TextAreaControl.propTypes = {
    * Number of rows to default to.
    */
   rows: PropTypes.number,
-  /**
-   * Requests monospace input
-   */
-  monospace: PropTypes.bool,
 };
 
 const propFilter = p => ['autosize', 'rows', 'maxRows'].includes(p) || isPropValid(p);
diff --git a/src/sentry/static/sentry/app/views/settings/components/forms/formField/index.jsx b/src/sentry/static/sentry/app/views/settings/components/forms/formField/index.jsx
index bfcb8d1581..e0a0b3840c 100644
--- a/src/sentry/static/sentry/app/views/settings/components/forms/formField/index.jsx
+++ b/src/sentry/static/sentry/app/views/settings/components/forms/formField/index.jsx
@@ -213,11 +213,6 @@ class FormField extends React.Component {
      */
     saveMessageAlertType: PropTypes.oneOf(['', 'info', 'warning', 'success', 'error']),
 
-    /**
-     * A function producing an optional component with extra information.
-     */
-    selectionInfoFunction: PropTypes.func,
-
     /**
      * Should hide error message?
      */
@@ -369,7 +364,6 @@ class FormField extends React.Component {
       saveOnBlur,
       saveMessage,
       saveMessageAlertType,
-      selectionInfoFunction,
 
       // Don't pass `defaultValue` down to input fields, will be handled in form model
       // eslint-disable-next-line no-unused-vars
@@ -442,15 +436,6 @@ class FormField extends React.Component {
             </FieldControl>
           )}
         </Field>
-        {selectionInfoFunction && (
-          <Observer>
-            {() => {
-              const error = this.getError();
-              const value = model.getValue(name);
-              return selectionInfoFunction({...props, error, value});
-            }}
-          </Observer>
-        )}
         {saveOnBlurFieldOverride && (
           <Observer>
             {() => {
diff --git a/src/sentry/static/sentry/app/views/settings/projectGeneralSettings.jsx b/src/sentry/static/sentry/app/views/settings/projectGeneralSettings.jsx
index 433cd7cbf4..33db0c246a 100644
--- a/src/sentry/static/sentry/app/views/settings/projectGeneralSettings.jsx
+++ b/src/sentry/static/sentry/app/views/settings/projectGeneralSettings.jsx
@@ -49,14 +49,10 @@ class ProjectGeneralSettings extends AsyncView {
 
   getEndpoints() {
     const {orgId, projectId} = this.props.params;
-    const endpoints = [['data', `/projects/${orgId}/${projectId}/`]];
-    const {organization} = this.context;
-    const features = new Set(organization.features);
-    if (features.has('set-grouping-config')) {
-      endpoints.push(['groupingConfigs', '/grouping-configs/']);
-      endpoints.push(['groupingEnhancementBases', '/grouping-enhancements/']);
-    }
-    return endpoints;
+    return [
+      ['data', `/projects/${orgId}/${projectId}/`],
+      ['groupingConfigs', '/grouping-configs/'],
+    ];
   }
 
   handleTransferFieldChange = (id, value) => {
@@ -236,11 +232,7 @@ class ProjectGeneralSettings extends AsyncView {
     const endpoint = `/projects/${orgId}/${projectId}/`;
     const access = new Set(organization.access);
     const jsonFormProps = {
-      additionalFieldProps: {
-        organization,
-        groupingConfigs: this.state.groupingConfigs,
-        groupingEnhancementBases: this.state.groupingEnhancementBases,
-      },
+      additionalFieldProps: {organization, groupingConfigs: this.state.groupingConfigs},
       features: new Set(organization.features),
       access,
       disabled: !access.has('project:write'),
@@ -292,12 +284,7 @@ class ProjectGeneralSettings extends AsyncView {
             <JsonForm
               {...jsonFormProps}
               title={t('Grouping Settings')}
-              fields={[
-                fields.groupingConfig,
-                fields.groupingEnhancementsBase,
-                fields.groupingEnhancements,
-                fields.fingerprintingRules,
-              ]}
+              fields={[fields.groupingConfig]}
               renderHeader={() => (
                 <PanelAlert type="warning">
                   <TextBlock noMargin>
diff --git a/src/sentry/utils/glob.py b/src/sentry/utils/glob.py
deleted file mode 100644
index 09c0a6f671..0000000000
--- a/src/sentry/utils/glob.py
+++ /dev/null
@@ -1,57 +0,0 @@
-from __future__ import absolute_import
-
-import re
-from functools32 import lru_cache
-
-
-@lru_cache(maxsize=500)
-def _translate(pat, doublestar=False):
-    i, n = 0, len(pat)
-    res = []
-    while i < n:
-        c = pat[i]
-        i = i + 1
-        if c == '*':
-            if doublestar:
-                if pat[i:i + 1] == '*':
-                    res.append('.*')
-                    i += 1
-                else:
-                    res.append('[^/]*')
-            else:
-                res.append('.*')
-        elif c == '?':
-            res.append('.')
-        elif c == '[':
-            j = i
-            if j < n and pat[j] == '!':
-                j = j + 1
-            if j < n and pat[j] == ']':
-                j = j + 1
-            while j < n and pat[j] != ']':
-                j = j + 1
-            if j >= n:
-                res.append('\\[')
-            else:
-                stuff = pat[i:j].replace('\\', '\\\\')
-                i = j + 1
-                if stuff[0] == '!':
-                    stuff = '^' + stuff[1:]
-                elif stuff[0] == '^':
-                    stuff = '\\' + stuff
-                res.append('[%s]' % stuff)
-        else:
-            res.append(re.escape(c))
-    res.append('\Z(?ms)')
-    return re.compile(''.join(res))
-
-
-def glob_match(value, pat, doublestar=False, ignorecase=False, path_normalize=False):
-    """A beefed up version of fnmatch.fnmatch"""
-    if ignorecase:
-        value = value.lower()
-        pat = pat.lower()
-    if path_normalize:
-        value = value.replace('\\', '/')
-        pat = pat.replace('\\', '/')
-    return _translate(pat, doublestar=doublestar).match(value) is not None
diff --git a/tests/js/fixtures/groupingEnhancements.js b/tests/js/fixtures/groupingEnhancements.js
deleted file mode 100644
index acea3f3b7a..0000000000
--- a/tests/js/fixtures/groupingEnhancements.js
+++ /dev/null
@@ -1,7 +0,0 @@
-export function GroupingEnhancements(params) {
-  return [
-    {
-      id: 'default:XXXX',
-    },
-  ];
-}
diff --git a/tests/js/spec/components/__snapshots__/confirmDelete.spec.jsx.snap b/tests/js/spec/components/__snapshots__/confirmDelete.spec.jsx.snap
index 8e8f3c68cb..6c1557d1af 100644
--- a/tests/js/spec/components/__snapshots__/confirmDelete.spec.jsx.snap
+++ b/tests/js/spec/components/__snapshots__/confirmDelete.spec.jsx.snap
@@ -181,7 +181,7 @@ exports[`ConfirmDelete renders 1`] = `
                                                         value=""
                                                       >
                                                         <input
-                                                          className="css-13yodx8-Input-inputStyles e1xej46s0"
+                                                          className="css-pzg7em-Input-inputStyles e1xej46s0"
                                                           onChange={[Function]}
                                                           placeholder="CoolOrg"
                                                           type="text"
diff --git a/tests/js/spec/components/__snapshots__/dropdownAutoCompleteMenu.spec.jsx.snap b/tests/js/spec/components/__snapshots__/dropdownAutoCompleteMenu.spec.jsx.snap
index 4019dcb03b..518320b69d 100644
--- a/tests/js/spec/components/__snapshots__/dropdownAutoCompleteMenu.spec.jsx.snap
+++ b/tests/js/spec/components/__snapshots__/dropdownAutoCompleteMenu.spec.jsx.snap
@@ -90,7 +90,7 @@ exports[`DropdownAutoCompleteMenu renders with a group 1`] = `
                       >
                         <input
                           autoFocus={true}
-                          className="css-1rdiewf-Input-inputStyles-StyledInput ejumqxq3"
+                          className="css-dqpq6t-Input-inputStyles-StyledInput ejumqxq3"
                           onBlur={[Function]}
                           onChange={[Function]}
                           onFocus={[Function]}
@@ -269,7 +269,7 @@ exports[`DropdownAutoCompleteMenu renders without a group 1`] = `
                       >
                         <input
                           autoFocus={true}
-                          className="css-1rdiewf-Input-inputStyles-StyledInput ejumqxq3"
+                          className="css-dqpq6t-Input-inputStyles-StyledInput ejumqxq3"
                           onBlur={[Function]}
                           onChange={[Function]}
                           onFocus={[Function]}
diff --git a/tests/js/spec/components/forms/__snapshots__/formField.spec.jsx.snap b/tests/js/spec/components/forms/__snapshots__/formField.spec.jsx.snap
index 74e57aa644..49af12b325 100644
--- a/tests/js/spec/components/forms/__snapshots__/formField.spec.jsx.snap
+++ b/tests/js/spec/components/forms/__snapshots__/formField.spec.jsx.snap
@@ -210,7 +210,7 @@ exports[`FormField + model renders with Form 1`] = `
                                                             value=""
                                                           >
                                                             <input
-                                                              className="css-13yodx8-Input-inputStyles e1xej46s0"
+                                                              className="css-pzg7em-Input-inputStyles e1xej46s0"
                                                               disabled={false}
                                                               id="fieldName"
                                                               name="fieldName"
diff --git a/tests/js/spec/views/__snapshots__/ownershipInput.spec.jsx.snap b/tests/js/spec/views/__snapshots__/ownershipInput.spec.jsx.snap
index c2c281ad9e..70c2cf946d 100644
--- a/tests/js/spec/views/__snapshots__/ownershipInput.spec.jsx.snap
+++ b/tests/js/spec/views/__snapshots__/ownershipInput.spec.jsx.snap
@@ -487,7 +487,7 @@ exports[`Project Ownership Input renders 1`] = `
           value=""
         >
           <input
-            className="css-exo5e5-Input-inputStyles-BuilderInput e1hyuoc77"
+            className="css-1enrgn8-Input-inputStyles-BuilderInput e1hyuoc77"
             onChange={[Function]}
             placeholder="src/example/*"
             value=""
@@ -995,7 +995,7 @@ url:http://example.com/settings/* #product"
         autoCapitalize="off"
         autoComplete="off"
         autoCorrect="off"
-        className="css-2wuf31-StyledTextArea-inputStyles en3n9di2"
+        className="css-cqfvlz-StyledTextArea-inputStyles en3n9di2"
         onChange={[Function]}
         placeholder="#example usage
 path:src/example/pipeline/* person@sentry.io #infra
@@ -1009,7 +1009,7 @@ url:http://example.com/settings/* #product"
           autoCapitalize="off"
           autoComplete="off"
           autoCorrect="off"
-          className="css-2wuf31-StyledTextArea-inputStyles en3n9di2"
+          className="css-cqfvlz-StyledTextArea-inputStyles en3n9di2"
           onChange={[Function]}
           placeholder="#example usage
 path:src/example/pipeline/* person@sentry.io #infra
diff --git a/tests/js/spec/views/__snapshots__/projectDebugFiles.spec.jsx.snap b/tests/js/spec/views/__snapshots__/projectDebugFiles.spec.jsx.snap
index 6a4cf3db57..08d8870d09 100644
--- a/tests/js/spec/views/__snapshots__/projectDebugFiles.spec.jsx.snap
+++ b/tests/js/spec/views/__snapshots__/projectDebugFiles.spec.jsx.snap
@@ -190,7 +190,7 @@ exports[`ProjectDebugFiles renders 1`] = `
                                   value=""
                                 >
                                   <input
-                                    className="search css-13yodx8-Input-inputStyles e1xej46s0"
+                                    className="search css-pzg7em-Input-inputStyles e1xej46s0"
                                     onChange={[Function]}
                                     placeholder="Search DIFs"
                                     value=""
diff --git a/tests/js/spec/views/__snapshots__/ruleBuilder.spec.jsx.snap b/tests/js/spec/views/__snapshots__/ruleBuilder.spec.jsx.snap
index 58d6b1f92f..029d8a83eb 100644
--- a/tests/js/spec/views/__snapshots__/ruleBuilder.spec.jsx.snap
+++ b/tests/js/spec/views/__snapshots__/ruleBuilder.spec.jsx.snap
@@ -460,7 +460,7 @@ exports[`RuleBuilder renders 1`] = `
         value=""
       >
         <input
-          className="css-exo5e5-Input-inputStyles-BuilderInput e1hyuoc77"
+          className="css-1enrgn8-Input-inputStyles-BuilderInput e1hyuoc77"
           onChange={[Function]}
           placeholder="src/example/*"
           value=""
@@ -1757,7 +1757,7 @@ exports[`RuleBuilder renders with suggestions 1`] = `
         value="a/bar"
       >
         <input
-          className="css-exo5e5-Input-inputStyles-BuilderInput e1hyuoc77"
+          className="css-1enrgn8-Input-inputStyles-BuilderInput e1hyuoc77"
           onChange={[Function]}
           placeholder="src/example/*"
           value="a/bar"
diff --git a/tests/js/spec/views/onboarding/__snapshots__/createProject.spec.jsx.snap b/tests/js/spec/views/onboarding/__snapshots__/createProject.spec.jsx.snap
index 9862f1666f..0a72d5382c 100644
--- a/tests/js/spec/views/onboarding/__snapshots__/createProject.spec.jsx.snap
+++ b/tests/js/spec/views/onboarding/__snapshots__/createProject.spec.jsx.snap
@@ -332,7 +332,7 @@ exports[`CreateProject should deal with incorrect platform name if its provided
           </CategoryNav>
           <SearchBar>
             <div
-              className="css-otjzwm-SearchBar-inputStyles ewlrg791"
+              className="css-1e5tau1-SearchBar-inputStyles ewlrg791"
             >
               <InlineSvg
                 src="icon-search"
@@ -1190,7 +1190,7 @@ exports[`CreateProject should deal with incorrect platform name if its provided
           </FormLabel>
           <ProjectNameInput>
             <div
-              className="css-1pwlbw7-ProjectNameInput-inputStyles eovdm173"
+              className="css-1dtytc5-ProjectNameInput-inputStyles eovdm173"
             >
               <ProjectPlatformicon
                 monoTone={true}
@@ -1837,7 +1837,7 @@ exports[`CreateProject should fill in platform name if its provided by url 1`] =
           </CategoryNav>
           <SearchBar>
             <div
-              className="css-otjzwm-SearchBar-inputStyles ewlrg791"
+              className="css-1e5tau1-SearchBar-inputStyles ewlrg791"
             >
               <InlineSvg
                 src="icon-search"
@@ -2149,7 +2149,7 @@ exports[`CreateProject should fill in platform name if its provided by url 1`] =
           </FormLabel>
           <ProjectNameInput>
             <div
-              className="css-1pwlbw7-ProjectNameInput-inputStyles eovdm173"
+              className="css-1dtytc5-ProjectNameInput-inputStyles eovdm173"
             >
               <ProjectPlatformicon
                 monoTone={true}
@@ -2796,7 +2796,7 @@ exports[`CreateProject should fill in project name if its empty when platform is
           </CategoryNav>
           <SearchBar>
             <div
-              className="css-otjzwm-SearchBar-inputStyles ewlrg791"
+              className="css-1e5tau1-SearchBar-inputStyles ewlrg791"
             >
               <InlineSvg
                 src="icon-search"
@@ -3758,7 +3758,7 @@ exports[`CreateProject should fill in project name if its empty when platform is
           </FormLabel>
           <ProjectNameInput>
             <div
-              className="css-1pwlbw7-ProjectNameInput-inputStyles eovdm173"
+              className="css-1dtytc5-ProjectNameInput-inputStyles eovdm173"
             >
               <ProjectPlatformicon
                 monoTone={true}
diff --git a/tests/js/spec/views/onboarding/project/__snapshots__/platformpicker.spec.jsx.snap b/tests/js/spec/views/onboarding/project/__snapshots__/platformpicker.spec.jsx.snap
index 7aa5ba322d..9b97cbdd35 100644
--- a/tests/js/spec/views/onboarding/project/__snapshots__/platformpicker.spec.jsx.snap
+++ b/tests/js/spec/views/onboarding/project/__snapshots__/platformpicker.spec.jsx.snap
@@ -690,7 +690,7 @@ exports[`PlatformPicker render() should update State.tab onClick when particular
       </CategoryNav>
       <SearchBar>
         <div
-          className="css-otjzwm-SearchBar-inputStyles ewlrg791"
+          className="css-1e5tau1-SearchBar-inputStyles ewlrg791"
         >
           <InlineSvg
             src="icon-search"
diff --git a/tests/js/spec/views/projectGeneralSettings.spec.jsx b/tests/js/spec/views/projectGeneralSettings.spec.jsx
index 096a9b5a86..b268cece9e 100644
--- a/tests/js/spec/views/projectGeneralSettings.spec.jsx
+++ b/tests/js/spec/views/projectGeneralSettings.spec.jsx
@@ -14,7 +14,6 @@ describe('projectGeneralSettings', function() {
   const org = TestStubs.Organization();
   const project = TestStubs.ProjectDetails();
   const groupingConfigs = TestStubs.GroupingConfigs();
-  const groupingEnhancements = TestStubs.GroupingEnhancements();
   let routerContext;
   let putMock;
 
@@ -37,11 +36,6 @@ describe('projectGeneralSettings', function() {
       method: 'GET',
       body: groupingConfigs,
     });
-    MockApiClient.addMockResponse({
-      url: '/grouping-enhancements/',
-      method: 'GET',
-      body: groupingEnhancements,
-    });
     MockApiClient.addMockResponse({
       url: `/projects/${org.slug}/${project.slug}/`,
       method: 'GET',
diff --git a/tests/js/spec/views/settings/__snapshots__/organizationProjects.spec.jsx.snap b/tests/js/spec/views/settings/__snapshots__/organizationProjects.spec.jsx.snap
index 21801bcb96..a9cda5d1dc 100644
--- a/tests/js/spec/views/settings/__snapshots__/organizationProjects.spec.jsx.snap
+++ b/tests/js/spec/views/settings/__snapshots__/organizationProjects.spec.jsx.snap
@@ -300,7 +300,7 @@ exports[`OrganizationProjects Should render the projects in the store 1`] = `
                                   value=""
                                 >
                                   <input
-                                    className="search css-13yodx8-Input-inputStyles e1xej46s0"
+                                    className="search css-pzg7em-Input-inputStyles e1xej46s0"
                                     onChange={[Function]}
                                     placeholder="Search Projects"
                                     value=""
diff --git a/tests/js/spec/views/settings/organizationDeveloperSettings/__snapshots__/sentryApplicationDetails.spec.jsx.snap b/tests/js/spec/views/settings/organizationDeveloperSettings/__snapshots__/sentryApplicationDetails.spec.jsx.snap
index 677e133cad..e9752c8131 100644
--- a/tests/js/spec/views/settings/organizationDeveloperSettings/__snapshots__/sentryApplicationDetails.spec.jsx.snap
+++ b/tests/js/spec/views/settings/organizationDeveloperSettings/__snapshots__/sentryApplicationDetails.spec.jsx.snap
@@ -1450,7 +1450,7 @@ exports[`Sentry Application Details edit existing application renders() it shows
                                                                                           value="Sample App"
                                                                                         >
                                                                                           <input
-                                                                                            className="css-13yodx8-Input-inputStyles e1xej46s0"
+                                                                                            className="css-pzg7em-Input-inputStyles e1xej46s0"
                                                                                             disabled={false}
                                                                                             id="name"
                                                                                             label="Name"
@@ -2662,7 +2662,7 @@ exports[`Sentry Application Details edit existing application renders() it shows
                                                                                           value="Sentry"
                                                                                         >
                                                                                           <input
-                                                                                            className="css-13yodx8-Input-inputStyles e1xej46s0"
+                                                                                            className="css-pzg7em-Input-inputStyles e1xej46s0"
                                                                                             disabled={false}
                                                                                             id="author"
                                                                                             label="Author"
@@ -3874,7 +3874,7 @@ exports[`Sentry Application Details edit existing application renders() it shows
                                                                                           value="https://example.com/webhook"
                                                                                         >
                                                                                           <input
-                                                                                            className="css-13yodx8-Input-inputStyles e1xej46s0"
+                                                                                            className="css-pzg7em-Input-inputStyles e1xej46s0"
                                                                                             disabled={false}
                                                                                             id="webhookUrl"
                                                                                             label="Webhook URL"
@@ -5076,7 +5076,7 @@ exports[`Sentry Application Details edit existing application renders() it shows
                                                                                           value="https://example/com/setup"
                                                                                         >
                                                                                           <input
-                                                                                            className="css-13yodx8-Input-inputStyles e1xej46s0"
+                                                                                            className="css-pzg7em-Input-inputStyles e1xej46s0"
                                                                                             disabled={false}
                                                                                             id="redirectUrl"
                                                                                             label="Redirect URL"
@@ -7624,7 +7624,7 @@ exports[`Sentry Application Details edit existing application renders() it shows
                                                                                         >
                                                                                           <ForwardRef
                                                                                             autosize={true}
-                                                                                            className="css-b17l26-TextArea-inputStyles e1oph3pe0"
+                                                                                            className="css-tlekg1-TextArea-inputStyles e1oph3pe0"
                                                                                             disabled={false}
                                                                                             id="schema"
                                                                                             label="Schema"
@@ -7636,7 +7636,7 @@ exports[`Sentry Application Details edit existing application renders() it shows
                                                                                           >
                                                                                             <TextareaAutosize
                                                                                               async={true}
-                                                                                              className="css-b17l26-TextArea-inputStyles e1oph3pe0"
+                                                                                              className="css-tlekg1-TextArea-inputStyles e1oph3pe0"
                                                                                               disabled={false}
                                                                                               id="schema"
                                                                                               innerRef={[Function]}
@@ -7650,7 +7650,7 @@ exports[`Sentry Application Details edit existing application renders() it shows
                                                                                             >
                                                                                               <textarea
                                                                                                 async={true}
-                                                                                                className="css-b17l26-TextArea-inputStyles e1oph3pe0"
+                                                                                                className="css-tlekg1-TextArea-inputStyles e1oph3pe0"
                                                                                                 disabled={false}
                                                                                                 id="schema"
                                                                                                 label="Schema"
@@ -8852,7 +8852,7 @@ exports[`Sentry Application Details edit existing application renders() it shows
                                                                                         >
                                                                                           <ForwardRef
                                                                                             autosize={true}
-                                                                                            className="css-b17l26-TextArea-inputStyles e1oph3pe0"
+                                                                                            className="css-tlekg1-TextArea-inputStyles e1oph3pe0"
                                                                                             disabled={false}
                                                                                             id="overview"
                                                                                             label="Overview"
@@ -8864,7 +8864,7 @@ exports[`Sentry Application Details edit existing application renders() it shows
                                                                                           >
                                                                                             <TextareaAutosize
                                                                                               async={true}
-                                                                                              className="css-b17l26-TextArea-inputStyles e1oph3pe0"
+                                                                                              className="css-tlekg1-TextArea-inputStyles e1oph3pe0"
                                                                                               disabled={false}
                                                                                               id="overview"
                                                                                               innerRef={[Function]}
@@ -8878,7 +8878,7 @@ exports[`Sentry Application Details edit existing application renders() it shows
                                                                                             >
                                                                                               <textarea
                                                                                                 async={true}
-                                                                                                className="css-b17l26-TextArea-inputStyles e1oph3pe0"
+                                                                                                className="css-tlekg1-TextArea-inputStyles e1oph3pe0"
                                                                                                 disabled={false}
                                                                                                 id="overview"
                                                                                                 label="Overview"
@@ -20807,13 +20807,13 @@ exports[`Sentry Application Details edit existing application renders() it shows
                                                                                       value="client-id"
                                                                                     >
                                                                                       <Component
-                                                                                        className="css-1ol5ohr-StyledInput-readOnlyStyle-inputStyles e1usehz70"
+                                                                                        className="css-11zlv92-StyledInput-readOnlyStyle-inputStyles e1usehz70"
                                                                                         onClick={[Function]}
                                                                                         readOnly={true}
                                                                                         value="client-id"
                                                                                       >
                                                                                         <input
-                                                                                          className="css-1ol5ohr-StyledInput-readOnlyStyle-inputStyles e1usehz70"
+                                                                                          className="css-11zlv92-StyledInput-readOnlyStyle-inputStyles e1usehz70"
                                                                                           onClick={[Function]}
                                                                                           readOnly={true}
                                                                                           value="client-id"
@@ -21949,13 +21949,13 @@ exports[`Sentry Application Details edit existing application renders() it shows
                                                                                       value="client-secret"
                                                                                     >
                                                                                       <Component
-                                                                                        className="css-1ol5ohr-StyledInput-readOnlyStyle-inputStyles e1usehz70"
+                                                                                        className="css-11zlv92-StyledInput-readOnlyStyle-inputStyles e1usehz70"
                                                                                         onClick={[Function]}
                                                                                         readOnly={true}
                                                                                         value="client-secret"
                                                                                       >
                                                                                         <input
-                                                                                          className="css-1ol5ohr-StyledInput-readOnlyStyle-inputStyles e1usehz70"
+                                                                                          className="css-11zlv92-StyledInput-readOnlyStyle-inputStyles e1usehz70"
                                                                                           onClick={[Function]}
                                                                                           readOnly={true}
                                                                                           value="client-secret"
@@ -23867,7 +23867,7 @@ exports[`Sentry Application Details new sentry application renders() it shows em
                                                                                           value=""
                                                                                         >
                                                                                           <input
-                                                                                            className="css-13yodx8-Input-inputStyles e1xej46s0"
+                                                                                            className="css-pzg7em-Input-inputStyles e1xej46s0"
                                                                                             disabled={false}
                                                                                             id="name"
                                                                                             label="Name"
@@ -24951,7 +24951,7 @@ exports[`Sentry Application Details new sentry application renders() it shows em
                                                                                           value=""
                                                                                         >
                                                                                           <input
-                                                                                            className="css-13yodx8-Input-inputStyles e1xej46s0"
+                                                                                            className="css-pzg7em-Input-inputStyles e1xej46s0"
                                                                                             disabled={false}
                                                                                             id="author"
                                                                                             label="Author"
@@ -26035,7 +26035,7 @@ exports[`Sentry Application Details new sentry application renders() it shows em
                                                                                           value=""
                                                                                         >
                                                                                           <input
-                                                                                            className="css-13yodx8-Input-inputStyles e1xej46s0"
+                                                                                            className="css-pzg7em-Input-inputStyles e1xej46s0"
                                                                                             disabled={false}
                                                                                             id="webhookUrl"
                                                                                             label="Webhook URL"
@@ -27109,7 +27109,7 @@ exports[`Sentry Application Details new sentry application renders() it shows em
                                                                                           value=""
                                                                                         >
                                                                                           <input
-                                                                                            className="css-13yodx8-Input-inputStyles e1xej46s0"
+                                                                                            className="css-pzg7em-Input-inputStyles e1xej46s0"
                                                                                             disabled={false}
                                                                                             id="redirectUrl"
                                                                                             label="Redirect URL"
@@ -29401,7 +29401,7 @@ exports[`Sentry Application Details new sentry application renders() it shows em
                                                                                         >
                                                                                           <ForwardRef
                                                                                             autosize={true}
-                                                                                            className="css-b17l26-TextArea-inputStyles e1oph3pe0"
+                                                                                            className="css-tlekg1-TextArea-inputStyles e1oph3pe0"
                                                                                             disabled={false}
                                                                                             id="schema"
                                                                                             label="Schema"
@@ -29413,7 +29413,7 @@ exports[`Sentry Application Details new sentry application renders() it shows em
                                                                                           >
                                                                                             <TextareaAutosize
                                                                                               async={true}
-                                                                                              className="css-b17l26-TextArea-inputStyles e1oph3pe0"
+                                                                                              className="css-tlekg1-TextArea-inputStyles e1oph3pe0"
                                                                                               disabled={false}
                                                                                               id="schema"
                                                                                               innerRef={[Function]}
@@ -29427,7 +29427,7 @@ exports[`Sentry Application Details new sentry application renders() it shows em
                                                                                             >
                                                                                               <textarea
                                                                                                 async={true}
-                                                                                                className="css-b17l26-TextArea-inputStyles e1oph3pe0"
+                                                                                                className="css-tlekg1-TextArea-inputStyles e1oph3pe0"
                                                                                                 disabled={false}
                                                                                                 id="schema"
                                                                                                 label="Schema"
@@ -30501,7 +30501,7 @@ exports[`Sentry Application Details new sentry application renders() it shows em
                                                                                         >
                                                                                           <ForwardRef
                                                                                             autosize={true}
-                                                                                            className="css-b17l26-TextArea-inputStyles e1oph3pe0"
+                                                                                            className="css-tlekg1-TextArea-inputStyles e1oph3pe0"
                                                                                             disabled={false}
                                                                                             id="overview"
                                                                                             label="Overview"
@@ -30513,7 +30513,7 @@ exports[`Sentry Application Details new sentry application renders() it shows em
                                                                                           >
                                                                                             <TextareaAutosize
                                                                                               async={true}
-                                                                                              className="css-b17l26-TextArea-inputStyles e1oph3pe0"
+                                                                                              className="css-tlekg1-TextArea-inputStyles e1oph3pe0"
                                                                                               disabled={false}
                                                                                               id="overview"
                                                                                               innerRef={[Function]}
@@ -30527,7 +30527,7 @@ exports[`Sentry Application Details new sentry application renders() it shows em
                                                                                             >
                                                                                               <textarea
                                                                                                 async={true}
-                                                                                                className="css-b17l26-TextArea-inputStyles e1oph3pe0"
+                                                                                                className="css-tlekg1-TextArea-inputStyles e1oph3pe0"
                                                                                                 disabled={false}
                                                                                                 id="overview"
                                                                                                 label="Overview"
diff --git a/tests/sentry/event_manager/interfaces/test_exception.py b/tests/sentry/event_manager/interfaces/test_exception.py
index b8288f38a2..15331ecdab 100644
--- a/tests/sentry/event_manager/interfaces/test_exception.py
+++ b/tests/sentry/event_manager/interfaces/test_exception.py
@@ -5,7 +5,7 @@ from __future__ import absolute_import
 import pytest
 
 from sentry.interfaces.exception import Exception, slim_exception_data
-from sentry.stacktraces import normalize_stacktraces_for_grouping
+from sentry.stacktraces import normalize_in_app
 from sentry.models import Event
 from sentry.event_manager import EventManager
 
@@ -205,7 +205,7 @@ def test_context_with_only_app_frames(make_exception_snapshot):
         }
     ]
     exc = dict(values=values)
-    normalize_stacktraces_for_grouping({'exception': exc})
+    normalize_in_app({'exception': exc})
     make_exception_snapshot(exc)
 
 
diff --git a/tests/sentry/event_manager/interfaces/test_stacktrace.py b/tests/sentry/event_manager/interfaces/test_stacktrace.py
index 5c172df154..2e30b6b8b4 100644
--- a/tests/sentry/event_manager/interfaces/test_stacktrace.py
+++ b/tests/sentry/event_manager/interfaces/test_stacktrace.py
@@ -7,7 +7,10 @@ import pytest
 import mock
 from django.conf import settings
 
-from sentry.interfaces.stacktrace import get_context, is_url
+from sentry.interfaces.stacktrace import (
+    get_context, is_url,
+    trim_function_name
+)
 from sentry.event_manager import EventManager
 from sentry.models import Event
 
@@ -23,6 +26,16 @@ def test_is_url():
     assert is_url('blob:\x00') is False
 
 
+def test_trim_function_name():
+    assert trim_function_name('+[foo:(bar)]', 'objc') == '+[foo:(bar)]'
+    assert trim_function_name('[foo:(bar)]', 'objc') == '[foo:(bar)]'
+    assert trim_function_name('-[foo:(bar)]', 'objc') == '-[foo:(bar)]'
+    assert trim_function_name(
+        '(anonymous namespace)::foo(int)',
+        'native') == '(anonymous namespace)::foo'
+    assert trim_function_name('foo::bar::foo(int)', 'native') == 'foo::bar::foo'
+
+
 def test_works_with_empty_filename():
     result = get_context(0, 'hello world')
     assert result == [(0, 'hello world')]
diff --git a/tests/sentry/grouping/fingerprint_inputs/fingerprint-exception-type-and-module.json b/tests/sentry/grouping/fingerprint_inputs/fingerprint-exception-type-and-module.json
deleted file mode 100644
index 13aee6909e..0000000000
--- a/tests/sentry/grouping/fingerprint_inputs/fingerprint-exception-type-and-module.json
+++ /dev/null
@@ -1,33 +0,0 @@
-{
-  "_fingerprinting_rules": [
-    {
-      "matchers": [
-        ["type", "DatabaseUnavailable"],
-        ["module", "io.sentry.example.*"]
-      ],
-      "fingerprint": ["database-unavailable"]
-    }
-  ],
-  "fingerprint": ["my-route", "{{ default }}"],
-  "exception": {
-    "values": [
-      {
-        "stacktrace": {
-          "frames": [
-            {
-              "function": "main",
-              "abs_path": "Application.java",
-              "module": "io.sentry.example.Application",
-              "filename": "Application.java",
-              "lineno": 13,
-              "in_app": false
-            }
-          ]
-        },
-        "type": "DatabaseUnavailable",
-        "value": "For some reason the database went away"
-      }
-    ]
-  },
-  "platform": "java"
-}
diff --git a/tests/sentry/grouping/fingerprint_inputs/fingerprint-exception-type-and-module2.json b/tests/sentry/grouping/fingerprint_inputs/fingerprint-exception-type-and-module2.json
deleted file mode 100644
index 3589c10be1..0000000000
--- a/tests/sentry/grouping/fingerprint_inputs/fingerprint-exception-type-and-module2.json
+++ /dev/null
@@ -1,34 +0,0 @@
-{
-  "_fingerprinting_rules": [
-    {
-      "matchers": [
-        ["type", "DatabaseUnavailable"],
-        ["module", "invalid.databasestuff.*"]
-      ],
-      "fingerprint": ["database-unavailable"]
-    }
-  ],
-  "fingerprint": ["my-route", "{{ default }}"],
-  "exception": {
-    "values": [
-      {
-        "stacktrace": {
-          "frames": [
-            {
-              "function": "main",
-              "abs_path": "Application.java",
-              "module": "io.sentry.example.Application",
-              "filename": "Application.java",
-              "lineno": 13,
-              "in_app": false
-            }
-          ]
-        },
-        "type": "DatabaseUnavailable",
-        "module": "invalid.databasestuff.database",
-        "value": "For some reason the database went away"
-      }
-    ]
-  },
-  "platform": "java"
-}
diff --git a/tests/sentry/grouping/fingerprint_inputs/fingerprint-exception-type.json b/tests/sentry/grouping/fingerprint_inputs/fingerprint-exception-type.json
deleted file mode 100644
index 517bb2cdb9..0000000000
--- a/tests/sentry/grouping/fingerprint_inputs/fingerprint-exception-type.json
+++ /dev/null
@@ -1,32 +0,0 @@
-{
-  "_fingerprinting_rules": [
-    {
-      "matchers": [
-        ["type", "DatabaseUnavailable"]
-      ],
-      "fingerprint": ["database-unavailable"]
-    }
-  ],
-  "fingerprint": ["my-route", "{{ default }}"],
-  "exception": {
-    "values": [
-      {
-        "stacktrace": {
-          "frames": [
-            {
-              "function": "main",
-              "abs_path": "Application.java",
-              "module": "io.sentry.example.Application",
-              "filename": "Application.java",
-              "lineno": 13,
-              "in_app": false
-            }
-          ]
-        },
-        "type": "DatabaseUnavailable",
-        "value": "For some reason the database went away"
-      }
-    ]
-  },
-  "platform": "java"
-}
diff --git a/tests/sentry/grouping/fingerprint_inputs/fingerprint-exception-value.json b/tests/sentry/grouping/fingerprint_inputs/fingerprint-exception-value.json
deleted file mode 100644
index 1eb32f025b..0000000000
--- a/tests/sentry/grouping/fingerprint_inputs/fingerprint-exception-value.json
+++ /dev/null
@@ -1,32 +0,0 @@
-{
-  "_fingerprinting_rules": [
-    {
-      "matchers": [
-        ["value", "*went wrong*"]
-      ],
-      "fingerprint": ["something-went-wrong"]
-    }
-  ],
-  "fingerprint": ["{{ default }}"],
-  "exception": {
-    "values": [
-      {
-        "stacktrace": {
-          "frames": [
-            {
-              "function": "main",
-              "abs_path": "Application.java",
-              "module": "io.sentry.example.Application",
-              "filename": "Application.java",
-              "lineno": 13,
-              "in_app": false
-            }
-          ]
-        },
-        "type": "EndOfWorld",
-        "value": "something went wrong"
-      }
-    ]
-  },
-  "platform": "java"
-}
diff --git a/tests/sentry/grouping/fingerprint_inputs/fingerprint-message.json b/tests/sentry/grouping/fingerprint_inputs/fingerprint-message.json
deleted file mode 100644
index 4fce7420e4..0000000000
--- a/tests/sentry/grouping/fingerprint_inputs/fingerprint-message.json
+++ /dev/null
@@ -1,13 +0,0 @@
-{
-  "_fingerprinting_rules": [
-    {
-      "matchers": [
-        ["message", "*love*"]
-      ],
-      "fingerprint": ["what-is-love"]
-    }
-  ],
-  "logentry": {
-    "formatted": "Hello my sweet Love"
-  }
-}
diff --git a/tests/sentry/grouping/fingerprint_inputs/fingerprint-native.json b/tests/sentry/grouping/fingerprint_inputs/fingerprint-native.json
deleted file mode 100644
index 304c0b5448..0000000000
--- a/tests/sentry/grouping/fingerprint_inputs/fingerprint-native.json
+++ /dev/null
@@ -1,450 +0,0 @@
-{
-  "_fingerprinting_rules": [
-    {
-      "matchers": [
-        ["type", "SymCacheError"],
-        ["function", "symbolicator::actors::symcaches::*"]
-      ],
-      "fingerprint": ["symcache-error"]
-    }
-  ],
-  "platform": "native",
-  "exception": {
-    "values": [
-      {
-        "type": "Custom",
-        "value": "out of range"
-      },
-      {
-        "stacktrace": {
-          "frames": [
-            {
-              "function": "<unknown> ",
-              "instruction_addr": "0x0",
-              "in_app": true
-            },
-            {
-              "function": "_start ",
-              "instruction_addr": "0x55b95be9f979",
-              "in_app": true
-            },
-            {
-              "function": "__libc_start_main ",
-              "instruction_addr": "0x7f9c5f4242e0",
-              "in_app": true
-            },
-            {
-              "function": "main ",
-              "instruction_addr": "0x55b95be9fab1",
-              "in_app": true
-            },
-            {
-              "function": "std::panicking::try::h72cb0fef6e9c0ab1 ",
-              "abs_path": "src/libstd/panicking.rs",
-              "package": "std",
-              "filename": "panicking.rs",
-              "lineno": 276,
-              "in_app": false,
-              "instruction_addr": "0x55b95c701ac5"
-            },
-            {
-              "function": "__rust_maybe_catch_panic ",
-              "abs_path": "src/libpanic_unwind/lib.rs",
-              "filename": "lib.rs",
-              "lineno": 92,
-              "in_app": false,
-              "instruction_addr": "0x55b95c706549"
-            },
-            {
-              "function": "std::rt::lang_start_internal::{{closure}}::h8ad4264c6b68797c ",
-              "abs_path": "src/libstd/rt.rs",
-              "package": "std",
-              "filename": "rt.rs",
-              "lineno": 49,
-              "in_app": false,
-              "instruction_addr": "0x55b95c700eb2"
-            },
-            {
-              "function": "std::rt::lang_start::{{closure}}::h4e8f5f76222f4872 ",
-              "package": "std",
-              "instruction_addr": "0x55b95be9fac2",
-              "in_app": false
-            },
-            {
-              "function": "symbolicator::main::h6f87bb5c61153edd ",
-              "package": "symbolicator",
-              "instruction_addr": "0x55b95be9fa86",
-              "in_app": true
-            },
-            {
-              "function": "symbolicator::app::main::h81af9cd0e252b957 ",
-              "package": "symbolicator",
-              "instruction_addr": "0x55b95bec77d3",
-              "in_app": true
-            },
-            {
-              "function": "actix::system::SystemRunner::run::hc8b42dd589d5f34d ",
-              "package": "actix",
-              "instruction_addr": "0x55b95c5c57ab",
-              "in_app": true
-            },
-            {
-              "function": "tokio::runtime::current_thread::runtime::Runtime::block_on::h1384999a7df7dbf5 ",
-              "package": "tokio",
-              "instruction_addr": "0x55b95c5907cf",
-              "in_app": true
-            },
-            {
-              "function": "<std::thread::local::LocalKey<T>>::with::h118d351120ec801c ",
-              "instruction_addr": "0x55b95c5b9832",
-              "in_app": false
-            },
-            {
-              "function": "<std::thread::local::LocalKey<T>>::with::h443d9baf3a401142 ",
-              "instruction_addr": "0x55b95c5ba56e",
-              "in_app": false
-            },
-            {
-              "function": "<std::thread::local::LocalKey<T>>::with::h899f4e1afe99ecb6 ",
-              "instruction_addr": "0x55b95c5bb735",
-              "in_app": false
-            },
-            {
-              "function": "<std::thread::local::LocalKey<T>>::with::h2befa73a071a6170 ",
-              "instruction_addr": "0x55b95c5b9f37",
-              "in_app": false
-            },
-            {
-              "function": "<tokio_current_thread::Entered<'a, P>>::block_on::h45ae18bcb1b8db5c ",
-              "instruction_addr": "0x55b95c588e13",
-              "in_app": true
-            },
-            {
-              "function": "<tokio_current_thread::Entered<'a, P>>::tick::hcea2e6d62cc2b7e5 ",
-              "instruction_addr": "0x55b95c588cf4",
-              "in_app": true
-            },
-            {
-              "function": "<tokio_current_thread::scheduler::Scheduler<U>>::tick::he19f21143658e3f0 ",
-              "instruction_addr": "0x55b95c5b3b19",
-              "in_app": true
-            },
-            {
-              "function": "tokio_current_thread::CurrentRunner::set_spawn::h9e70e2daaa86c968 ",
-              "package": "tokio_current_thread",
-              "instruction_addr": "0x55b95c585783",
-              "in_app": true
-            },
-            {
-              "function": "<futures::task_impl::Spawn<T>>::poll_future_notify::h1da2d19e6bf539c6 ",
-              "instruction_addr": "0x55b95c5b7055",
-              "in_app": true
-            },
-            {
-              "function": "futures::task_impl::std::set::h1cc47adb4a176e58 ",
-              "package": "futures",
-              "instruction_addr": "0x55b95c5914e1",
-              "in_app": true
-            },
-            {
-              "function": "<actix::contextimpl::ContextFut<A, C> as futures::future::Future>::poll::h9de5fbebc1652d47 ",
-              "instruction_addr": "0x55b95bebee0d",
-              "in_app": true
-            },
-            {
-              "function": "<futures::future::then::Then<A, B, F> as futures::future::Future>::poll::h67e771243743eb30 ",
-              "instruction_addr": "0x55b95bf8999f",
-              "in_app": true
-            },
-            {
-              "function": "<futures::future::lazy::Lazy<F, R> as futures::future::Future>::poll::h9b62d88151002ac4 ",
-              "instruction_addr": "0x55b95bef8608",
-              "in_app": true
-            },
-            {
-              "function": "<futures::future::then::Then<A, B, F> as futures::future::Future>::poll::h5567ae25991a6daa ",
-              "instruction_addr": "0x55b95bf89129",
-              "in_app": true
-            },
-            {
-              "function": "<futures::future::map_err::MapErr<A, F> as futures::future::Future>::poll::he74c1a2a9e15b1b7 ",
-              "instruction_addr": "0x55b95c04c4e3",
-              "in_app": true
-            },
-            {
-              "function": "<futures::future::chain::Chain<A, B, C>>::poll::h7a8ce6865477e15d ",
-              "instruction_addr": "0x55b95bf6c656",
-              "in_app": true
-            },
-            {
-              "function": "<futures::future::map::Map<A, F> as futures::future::Future>::poll::h8e9ff78b067eab2e ",
-              "instruction_addr": "0x55b95bfefa21",
-              "in_app": true
-            },
-            {
-              "function": "<futures::future::join_all::JoinAll<I> as futures::future::Future>::poll::hbb462bf2c5cac86c ",
-              "instruction_addr": "0x55b95c016474",
-              "in_app": true
-            },
-            {
-              "function": "<futures::future::chain::Chain<A, B, C>>::poll::hbc46b1836174f434 ",
-              "instruction_addr": "0x55b95bf75b51",
-              "in_app": true
-            },
-            {
-              "function": "symbolicator::actors::symcaches::SymCacheFile::parse::hdccb68bbe02b50a3 ",
-              "package": "symbolicator",
-              "instruction_addr": "0x55b95bec3b73",
-              "in_app": true
-            },
-            {
-              "function": "symbolic_symcache::cache::SymCache::parse::hb8a4e051c56bfdd0 ",
-              "package": "symbolic_symcache",
-              "instruction_addr": "0x55b95c41433f",
-              "in_app": true
-            },
-            {
-              "function": "symbolic_symcache::format::Header::parse::h9e4b9050799f7a0b ",
-              "package": "symbolic_symcache",
-              "instruction_addr": "0x55b95c4159b0",
-              "in_app": true
-            },
-            {
-              "function": "<failure::error::error_impl::ErrorImpl as core::convert::From<F>>::from::he5d6dd47a3a261a9 ",
-              "instruction_addr": "0x55b95c4167b5",
-              "in_app": false
-            },
-            {
-              "function": "<failure::backtrace::Backtrace as core::default::Default>::default::h493a6077db117c42 ",
-              "instruction_addr": "0x55b95c69a1cf",
-              "in_app": false
-            },
-            {
-              "function": "failure::backtrace::internal::InternalBacktrace::new::h5c964837d568bbe5 ",
-              "package": "failure",
-              "instruction_addr": "0x55b95c699f2f",
-              "in_app": false
-            }
-          ]
-        },
-        "type": "SymCacheError",
-        "value": "invalid symcache header"
-      },
-      {
-        "stacktrace": {
-          "frames": [
-            {
-              "function": "<unknown> ",
-              "instruction_addr": "0x0",
-              "in_app": true
-            },
-            {
-              "function": "_start ",
-              "instruction_addr": "0x55b95be9f979",
-              "in_app": true
-            },
-            {
-              "function": "__libc_start_main ",
-              "instruction_addr": "0x7f9c5f4242e0",
-              "in_app": true
-            },
-            {
-              "function": "main ",
-              "instruction_addr": "0x55b95be9fab1",
-              "in_app": true
-            },
-            {
-              "function": "std::panicking::try::h72cb0fef6e9c0ab1 ",
-              "abs_path": "src/libstd/panicking.rs",
-              "package": "std",
-              "filename": "panicking.rs",
-              "lineno": 276,
-              "in_app": false,
-              "instruction_addr": "0x55b95c701ac5"
-            },
-            {
-              "function": "__rust_maybe_catch_panic ",
-              "abs_path": "src/libpanic_unwind/lib.rs",
-              "filename": "lib.rs",
-              "lineno": 92,
-              "in_app": false,
-              "instruction_addr": "0x55b95c706549"
-            },
-            {
-              "function": "std::rt::lang_start_internal::{{closure}}::h8ad4264c6b68797c ",
-              "abs_path": "src/libstd/rt.rs",
-              "package": "std",
-              "filename": "rt.rs",
-              "lineno": 49,
-              "in_app": false,
-              "instruction_addr": "0x55b95c700eb2"
-            },
-            {
-              "function": "std::rt::lang_start::{{closure}}::h4e8f5f76222f4872 ",
-              "package": "std",
-              "instruction_addr": "0x55b95be9fac2",
-              "in_app": false
-            },
-            {
-              "function": "symbolicator::main::h6f87bb5c61153edd ",
-              "package": "symbolicator",
-              "instruction_addr": "0x55b95be9fa86",
-              "in_app": true
-            },
-            {
-              "function": "symbolicator::app::main::h81af9cd0e252b957 ",
-              "package": "symbolicator",
-              "instruction_addr": "0x55b95bec77d3",
-              "in_app": true
-            },
-            {
-              "function": "actix::system::SystemRunner::run::hc8b42dd589d5f34d ",
-              "package": "actix",
-              "instruction_addr": "0x55b95c5c57ab",
-              "in_app": true
-            },
-            {
-              "function": "tokio::runtime::current_thread::runtime::Runtime::block_on::h1384999a7df7dbf5 ",
-              "package": "tokio",
-              "instruction_addr": "0x55b95c5907cf",
-              "in_app": true
-            },
-            {
-              "function": "<std::thread::local::LocalKey<T>>::with::h118d351120ec801c ",
-              "instruction_addr": "0x55b95c5b9832",
-              "in_app": false
-            },
-            {
-              "function": "<std::thread::local::LocalKey<T>>::with::h443d9baf3a401142 ",
-              "instruction_addr": "0x55b95c5ba56e",
-              "in_app": false
-            },
-            {
-              "function": "<std::thread::local::LocalKey<T>>::with::h899f4e1afe99ecb6 ",
-              "instruction_addr": "0x55b95c5bb735",
-              "in_app": false
-            },
-            {
-              "function": "<std::thread::local::LocalKey<T>>::with::h2befa73a071a6170 ",
-              "instruction_addr": "0x55b95c5b9f37",
-              "in_app": false
-            },
-            {
-              "function": "<tokio_current_thread::Entered<'a, P>>::block_on::h45ae18bcb1b8db5c ",
-              "instruction_addr": "0x55b95c588e13",
-              "in_app": true
-            },
-            {
-              "function": "<tokio_current_thread::Entered<'a, P>>::tick::hcea2e6d62cc2b7e5 ",
-              "instruction_addr": "0x55b95c588cf4",
-              "in_app": true
-            },
-            {
-              "function": "<tokio_current_thread::scheduler::Scheduler<U>>::tick::he19f21143658e3f0 ",
-              "instruction_addr": "0x55b95c5b3b19",
-              "in_app": true
-            },
-            {
-              "function": "tokio_current_thread::CurrentRunner::set_spawn::h9e70e2daaa86c968 ",
-              "package": "tokio_current_thread",
-              "instruction_addr": "0x55b95c585783",
-              "in_app": true
-            },
-            {
-              "function": "<futures::task_impl::Spawn<T>>::poll_future_notify::h1da2d19e6bf539c6 ",
-              "instruction_addr": "0x55b95c5b7055",
-              "in_app": true
-            },
-            {
-              "function": "futures::task_impl::std::set::h1cc47adb4a176e58 ",
-              "package": "futures",
-              "instruction_addr": "0x55b95c5914e1",
-              "in_app": true
-            },
-            {
-              "function": "<actix::contextimpl::ContextFut<A, C> as futures::future::Future>::poll::h9de5fbebc1652d47 ",
-              "instruction_addr": "0x55b95bebee0d",
-              "in_app": true
-            },
-            {
-              "function": "<futures::future::then::Then<A, B, F> as futures::future::Future>::poll::h67e771243743eb30 ",
-              "instruction_addr": "0x55b95bf8999f",
-              "in_app": true
-            },
-            {
-              "function": "<futures::future::lazy::Lazy<F, R> as futures::future::Future>::poll::h9b62d88151002ac4 ",
-              "instruction_addr": "0x55b95bef8608",
-              "in_app": true
-            },
-            {
-              "function": "<futures::future::then::Then<A, B, F> as futures::future::Future>::poll::h5567ae25991a6daa ",
-              "instruction_addr": "0x55b95bf89129",
-              "in_app": true
-            },
-            {
-              "function": "<futures::future::map_err::MapErr<A, F> as futures::future::Future>::poll::he74c1a2a9e15b1b7 ",
-              "instruction_addr": "0x55b95c04c4e3",
-              "in_app": true
-            },
-            {
-              "function": "<futures::future::chain::Chain<A, B, C>>::poll::h7a8ce6865477e15d ",
-              "instruction_addr": "0x55b95bf6c656",
-              "in_app": true
-            },
-            {
-              "function": "<futures::future::map::Map<A, F> as futures::future::Future>::poll::h8e9ff78b067eab2e ",
-              "instruction_addr": "0x55b95bfefa21",
-              "in_app": true
-            },
-            {
-              "function": "<futures::future::join_all::JoinAll<I> as futures::future::Future>::poll::hbb462bf2c5cac86c ",
-              "instruction_addr": "0x55b95c016474",
-              "in_app": true
-            },
-            {
-              "function": "<futures::future::chain::Chain<A, B, C>>::poll::hbc46b1836174f434 ",
-              "instruction_addr": "0x55b95bf75b51",
-              "in_app": true
-            },
-            {
-              "function": "symbolicator::actors::symcaches::SymCacheFile::parse::hdccb68bbe02b50a3 ",
-              "package": "symbolicator",
-              "instruction_addr": "0x55b95bec3b73",
-              "in_app": true
-            },
-            {
-              "function": "symbolic_symcache::cache::SymCache::parse::hb8a4e051c56bfdd0 ",
-              "package": "symbolic_symcache",
-              "instruction_addr": "0x55b95c41433f",
-              "in_app": true
-            },
-            {
-              "function": "symbolic_symcache::format::Header::parse::h9e4b9050799f7a0b ",
-              "package": "symbolic_symcache",
-              "instruction_addr": "0x55b95c4159b0",
-              "in_app": true
-            },
-            {
-              "function": "<failure::error::error_impl::ErrorImpl as core::convert::From<F>>::from::he5d6dd47a3a261a9 ",
-              "instruction_addr": "0x55b95c4167b5",
-              "in_app": false
-            },
-            {
-              "function": "<failure::backtrace::Backtrace as core::default::Default>::default::h493a6077db117c42 ",
-              "instruction_addr": "0x55b95c69a1cf",
-              "in_app": false
-            },
-            {
-              "function": "failure::backtrace::internal::InternalBacktrace::new::h5c964837d568bbe5 ",
-              "package": "failure",
-              "instruction_addr": "0x55b95c699f2f",
-              "in_app": false
-            }
-          ]
-        },
-        "type": "SymCacheError",
-        "value": "failed to parse symcache"
-      }
-    ]
-  }
-}
diff --git a/tests/sentry/grouping/fingerprint_inputs/fingerprint-no-match.json b/tests/sentry/grouping/fingerprint_inputs/fingerprint-no-match.json
deleted file mode 100644
index a9b3072d8b..0000000000
--- a/tests/sentry/grouping/fingerprint_inputs/fingerprint-no-match.json
+++ /dev/null
@@ -1,34 +0,0 @@
-{
-  "_fingerprinting_rules": [
-    {
-      "matchers": [
-        ["type", "DatabaseUnavailable"],
-        ["module", "invalid.databasestuff.*"]
-      ],
-      "fingerprint": ["database-unavailable"]
-    }
-  ],
-  "fingerprint": ["my-route", "{{ default }}"],
-  "exception": {
-    "values": [
-      {
-        "stacktrace": {
-          "frames": [
-            {
-              "function": "main",
-              "abs_path": "Application.java",
-              "module": "io.sentry.example.Application",
-              "filename": "Application.java",
-              "lineno": 13,
-              "in_app": false
-            }
-          ]
-        },
-        "type": "DatabaseUnavailable",
-        "module": "invalid.someothercompany.software",
-        "value": "For some reason the database went away"
-      }
-    ]
-  },
-  "platform": "java"
-}
diff --git a/tests/sentry/grouping/fingerprint_inputs/fingerprint-python.json b/tests/sentry/grouping/fingerprint_inputs/fingerprint-python.json
deleted file mode 100644
index 434dc48ab1..0000000000
--- a/tests/sentry/grouping/fingerprint_inputs/fingerprint-python.json
+++ /dev/null
@@ -1,232 +0,0 @@
-{
-  "_fingerprinting_rules": [
-    {
-      "matchers": [
-        ["type", "ReadTimeout"],
-        ["path", "**/requests/adapters.py"]
-      ],
-      "fingerprint": ["timeout-in-requests"]
-    }
-  ],
-  "platform": "python",
-  "exception": {
-    "values": [
-      {
-        "stacktrace": {
-          "frames": [
-            {
-              "function": "safe_execute",
-              "abs_path": "/usr/src/getsentry/src/sentry/src/sentry/utils/safe.py",
-              "pre_context": [
-                "    _with_transaction = kwargs.pop('_with_transaction', True)",
-                "    expected_errors = kwargs.pop('expected_errors', None)",
-                "    try:",
-                "        if _with_transaction:",
-                "            with transaction.atomic():"
-              ],
-              "module": "sentry.utils.safe",
-              "filename": "sentry/utils/safe.py",
-              "post_context": [
-                "        else:",
-                "            result = func(*args, **kwargs)",
-                "    except Exception as e:",
-                "        if hasattr(func, 'im_class'):",
-                "            cls = func.im_class"
-              ],
-              "in_app": true,
-              "context_line": "                result = func(*args, **kwargs)",
-              "lineno": 30
-            },
-            {
-              "function": "rule_notify",
-              "abs_path": "/usr/src/getsentry/src/sentry/src/sentry/plugins/bases/notify.py",
-              "pre_context": [
-                "        else:",
-                "            notification = Notification(",
-                "                event=event,",
-                "                rules=rules,",
-                "            )"
-              ],
-              "module": "sentry.plugins.bases.notify",
-              "filename": "sentry/plugins/bases/notify.py",
-              "post_context": [
-                "",
-                "        self.logger.info('notification.%s' % log_event, extra=extra)",
-                "",
-                "    def notify_users(self, group, event, triggering_rules, fail_silently=False, **kwargs):",
-                "        raise NotImplementedError"
-              ],
-              "in_app": true,
-              "context_line": "            self.notify(notification)",
-              "lineno": 129
-            },
-            {
-              "function": "notify",
-              "abs_path": "/usr/src/getsentry/src/sentry/src/sentry/plugins/bases/notify.py",
-              "pre_context": [
-                "",
-                "    def notify(self, notification):",
-                "        event = notification.event",
-                "        try:",
-                "            return self.notify_users(event.group, event, triggering_rules=["
-              ],
-              "module": "sentry.plugins.bases.notify",
-              "filename": "sentry/plugins/bases/notify.py",
-              "post_context": [
-                "        except (SSLError, HTTPError, ApiError, PluginError, urllib2.HTTPError) as err:",
-                "            self.logger.info('notification-plugin.notify-failed.', extra={",
-                "                'error': six.text_type(err),",
-                "                'plugin': self.slug",
-                "            })"
-              ],
-              "in_app": true,
-              "context_line": "                                     r.label for r in notification.rules])",
-              "lineno": 76
-            },
-            {
-              "function": "notify_users",
-              "abs_path": "/usr/src/getsentry/src/sentry-opsgenie/src/sentry_opsgenie/plugin.py",
-              "pre_context": [
-                "        headers = {'Authorization': 'GenieKey ' + api_key}",
-                "",
-                "        if recipients:",
-                "            payload['recipients'] = recipients",
-                ""
-              ],
-              "module": "sentry_opsgenie.plugin",
-              "filename": "sentry_opsgenie/plugin.py",
-              "post_context": [
-                "        if not resp.ok:",
-                "            raise HTTPError('Unsuccessful response from OpsGenie: %s' % resp.json())"
-              ],
-              "in_app": false,
-              "context_line": "        resp = http.safe_urlopen(alert_url, json=payload, headers=headers)",
-              "lineno": 107
-            },
-            {
-              "function": "safe_urlopen",
-              "abs_path": "/usr/src/getsentry/src/sentry/src/sentry/http.py",
-              "pre_context": [
-                "        method=method,",
-                "        url=url,",
-                "        allow_redirects=allow_redirects,",
-                "        timeout=timeout,",
-                "        verify=verify_ssl,"
-              ],
-              "module": "sentry.http",
-              "filename": "sentry/http.py",
-              "post_context": [
-                "    )",
-                "",
-                "    return response",
-                "",
-                ""
-              ],
-              "in_app": true,
-              "context_line": "        **kwargs",
-              "lineno": 124
-            },
-            {
-              "function": "request",
-              "abs_path": "/usr/src/getsentry/src/sentry/src/sentry/net/http.py",
-              "pre_context": [
-                "",
-                "",
-                "class Session(_Session):",
-                "    def request(self, *args, **kwargs):",
-                "        kwargs.setdefault('timeout', 30)"
-              ],
-              "module": "sentry.net.http",
-              "filename": "sentry/net/http.py",
-              "post_context": [
-                "        # requests' attempts to use chardet internally when no encoding is found",
-                "        # and we want to avoid that slow behavior",
-                "        if not response.encoding:",
-                "            response.encoding = 'utf-8'",
-                "        return response"
-              ],
-              "in_app": true,
-              "context_line": "        response = _Session.request(self, *args, **kwargs)",
-              "lineno": 154
-            },
-            {
-              "function": "request",
-              "abs_path": "/usr/local/lib/python2.7/site-packages/requests/sessions.py",
-              "pre_context": [
-                "        send_kwargs = {",
-                "            'timeout': timeout,",
-                "            'allow_redirects': allow_redirects,",
-                "        }",
-                "        send_kwargs.update(settings)"
-              ],
-              "module": "requests.sessions",
-              "filename": "requests/sessions.py",
-              "post_context": [
-                "",
-                "        return resp",
-                "",
-                "    def get(self, url, **kwargs):",
-                "        r\"\"\"Sends a GET request. Returns :class:`Response` object."
-              ],
-              "in_app": false,
-              "context_line": "        resp = self.send(prep, **send_kwargs)",
-              "lineno": 533
-            },
-            {
-              "function": "send",
-              "abs_path": "/usr/local/lib/python2.7/site-packages/requests/sessions.py",
-              "pre_context": [
-                "",
-                "        # Start time (approximately) of the request",
-                "        start = preferred_clock()",
-                "",
-                "        # Send the request"
-              ],
-              "module": "requests.sessions",
-              "filename": "requests/sessions.py",
-              "post_context": [
-                "",
-                "        # Total elapsed time of the request (approximately)",
-                "        elapsed = preferred_clock() - start",
-                "        r.elapsed = timedelta(seconds=elapsed)",
-                ""
-              ],
-              "in_app": false,
-              "context_line": "        r = adapter.send(request, **kwargs)",
-              "lineno": 646
-            },
-            {
-              "function": "send",
-              "abs_path": "/usr/local/lib/python2.7/site-packages/requests/adapters.py",
-              "pre_context": [
-                "        except (_SSLError, _HTTPError) as e:",
-                "            if isinstance(e, _SSLError):",
-                "                # This branch is for urllib3 versions earlier than v1.22",
-                "                raise SSLError(e, request=request)",
-                "            elif isinstance(e, ReadTimeoutError):"
-              ],
-              "module": "requests.adapters",
-              "filename": "requests/adapters.py",
-              "post_context": [
-                "            else:",
-                "                raise",
-                "",
-                "        return self.build_response(request, resp)"
-              ],
-              "in_app": false,
-              "context_line": "                raise ReadTimeout(e, request=request)",
-              "lineno": 529
-            }
-          ]
-        },
-        "type": "ReadTimeout",
-        "value": "SafeHTTPSConnectionPool(host='api.opsgenie.com', port=443): Read timed out. (read timeout=30)",
-        "module": "requests.exceptions",
-        "mechanism": {
-          "type": "logging",
-          "handled": true
-        }
-      }
-    ]
-  }
-}
diff --git a/tests/sentry/grouping/grouping_inputs/stacktrace-rust.json b/tests/sentry/grouping/grouping_inputs/stacktrace-rust.json
deleted file mode 100644
index abf53a4989..0000000000
--- a/tests/sentry/grouping/grouping_inputs/stacktrace-rust.json
+++ /dev/null
@@ -1,52 +0,0 @@
-{
-  "_grouping": {
-    "enhancement_base": "common:2019-03-23",
-    "enhancements": "family:native function:log_demo::* +app"
-  },
-  "exception": {
-    "values": [
-      {
-        "stacktrace": {
-          "frames": [
-            {
-              "function": "_main",
-              "instruction_addr": "0x10d6dd338"
-            },
-            {
-              "function": "std::rt::lang_start_internal",
-              "package": "std",
-              "instruction_addr": "0x10d98ea2c"
-            },
-            {
-              "function": "___rust_maybe_catch_panic",
-              "instruction_addr": "0x10d99175e"
-            },
-            {
-              "function": "std::panicking::try::do_call",
-              "package": "std",
-              "instruction_addr": "0x10d98df37"
-            },
-            {
-              "function": "std::rt::lang_start::{{closure}}",
-              "package": "std",
-              "instruction_addr": "0x10d6d93b5"
-            },
-            {
-              "function": "log_demo::main",
-              "package": "log_demo",
-              "instruction_addr": "0x10d6dd251"
-            },
-            {
-              "function": "log::__private_api_log",
-              "package": "log",
-              "instruction_addr": "0x10d97fdbb"
-            }
-          ]
-        },
-        "type": "log_demo",
-        "value": "Holy shit everything is on fire!"
-      }
-    ]
-  },
-  "platform": "native"
-}
diff --git a/tests/sentry/grouping/grouping_inputs/stacktrace-rust2.json b/tests/sentry/grouping/grouping_inputs/stacktrace-rust2.json
deleted file mode 100644
index 000d342d32..0000000000
--- a/tests/sentry/grouping/grouping_inputs/stacktrace-rust2.json
+++ /dev/null
@@ -1,52 +0,0 @@
-{
-  "_grouping": {
-    "enhancement_base": "common:2019-03-23",
-    "enhancements": "family:native function:log_demo::* +app\nfamily:native function:__* -group\nfamily:native function:*::__* -group"
-  },
-  "exception": {
-    "values": [
-      {
-        "stacktrace": {
-          "frames": [
-            {
-              "function": "_main",
-              "instruction_addr": "0x10d6dd338"
-            },
-            {
-              "function": "std::rt::lang_start_internal",
-              "package": "std",
-              "instruction_addr": "0x10d98ea2c"
-            },
-            {
-              "function": "___rust_maybe_catch_panic",
-              "instruction_addr": "0x10d99175e"
-            },
-            {
-              "function": "std::panicking::try::do_call",
-              "package": "std",
-              "instruction_addr": "0x10d98df37"
-            },
-            {
-              "function": "std::rt::lang_start::{{closure}}",
-              "package": "std",
-              "instruction_addr": "0x10d6d93b5"
-            },
-            {
-              "function": "log_demo::main",
-              "package": "log_demo",
-              "instruction_addr": "0x10d6dd251"
-            },
-            {
-              "function": "log::__private_api_log",
-              "package": "log",
-              "instruction_addr": "0x10d97fdbb"
-            }
-          ]
-        },
-        "type": "log_demo",
-        "value": "Holy shit everything is on fire!"
-      }
-    ]
-  },
-  "platform": "native"
-}
diff --git a/tests/sentry/grouping/grouping_inputs/actix.json b/tests/sentry/grouping/inputs/actix.json
similarity index 100%
rename from tests/sentry/grouping/grouping_inputs/actix.json
rename to tests/sentry/grouping/inputs/actix.json
diff --git a/tests/sentry/grouping/grouping_inputs/aspnetcore.json b/tests/sentry/grouping/inputs/aspnetcore.json
similarity index 100%
rename from tests/sentry/grouping/grouping_inputs/aspnetcore.json
rename to tests/sentry/grouping/inputs/aspnetcore.json
diff --git a/tests/sentry/grouping/grouping_inputs/connection-error.json b/tests/sentry/grouping/inputs/connection-error.json
similarity index 100%
rename from tests/sentry/grouping/grouping_inputs/connection-error.json
rename to tests/sentry/grouping/inputs/connection-error.json
diff --git a/tests/sentry/grouping/grouping_inputs/csp-img-src.json b/tests/sentry/grouping/inputs/csp-img-src.json
similarity index 100%
rename from tests/sentry/grouping/grouping_inputs/csp-img-src.json
rename to tests/sentry/grouping/inputs/csp-img-src.json
diff --git a/tests/sentry/grouping/grouping_inputs/csp-no-blocked-uri.json b/tests/sentry/grouping/inputs/csp-no-blocked-uri.json
similarity index 100%
rename from tests/sentry/grouping/grouping_inputs/csp-no-blocked-uri.json
rename to tests/sentry/grouping/inputs/csp-no-blocked-uri.json
diff --git a/tests/sentry/grouping/grouping_inputs/csp-script-data-uri.json b/tests/sentry/grouping/inputs/csp-script-data-uri.json
similarity index 100%
rename from tests/sentry/grouping/grouping_inputs/csp-script-data-uri.json
rename to tests/sentry/grouping/inputs/csp-script-data-uri.json
diff --git a/tests/sentry/grouping/grouping_inputs/csp-script-src-uri.json b/tests/sentry/grouping/inputs/csp-script-src-uri.json
similarity index 100%
rename from tests/sentry/grouping/grouping_inputs/csp-script-src-uri.json
rename to tests/sentry/grouping/inputs/csp-script-src-uri.json
diff --git a/tests/sentry/grouping/grouping_inputs/csp-style-src-elem.json b/tests/sentry/grouping/inputs/csp-style-src-elem.json
similarity index 100%
rename from tests/sentry/grouping/grouping_inputs/csp-style-src-elem.json
rename to tests/sentry/grouping/inputs/csp-style-src-elem.json
diff --git a/tests/sentry/grouping/grouping_inputs/csp.json b/tests/sentry/grouping/inputs/csp.json
similarity index 100%
rename from tests/sentry/grouping/grouping_inputs/csp.json
rename to tests/sentry/grouping/inputs/csp.json
diff --git a/tests/sentry/grouping/grouping_inputs/custom-fingerprint.json b/tests/sentry/grouping/inputs/custom-fingerprint.json
similarity index 100%
rename from tests/sentry/grouping/grouping_inputs/custom-fingerprint.json
rename to tests/sentry/grouping/inputs/custom-fingerprint.json
diff --git a/tests/sentry/grouping/grouping_inputs/empty.json b/tests/sentry/grouping/inputs/empty.json
similarity index 100%
rename from tests/sentry/grouping/grouping_inputs/empty.json
rename to tests/sentry/grouping/inputs/empty.json
diff --git a/tests/sentry/grouping/grouping_inputs/empty.out b/tests/sentry/grouping/inputs/empty.out
similarity index 100%
rename from tests/sentry/grouping/grouping_inputs/empty.out
rename to tests/sentry/grouping/inputs/empty.out
diff --git a/tests/sentry/grouping/grouping_inputs/exception-comput-hashes.json b/tests/sentry/grouping/inputs/exception-comput-hashes.json
similarity index 100%
rename from tests/sentry/grouping/grouping_inputs/exception-comput-hashes.json
rename to tests/sentry/grouping/inputs/exception-comput-hashes.json
diff --git a/tests/sentry/grouping/grouping_inputs/exception-compute-hashes-2.json b/tests/sentry/grouping/inputs/exception-compute-hashes-2.json
similarity index 100%
rename from tests/sentry/grouping/grouping_inputs/exception-compute-hashes-2.json
rename to tests/sentry/grouping/inputs/exception-compute-hashes-2.json
diff --git a/tests/sentry/grouping/grouping_inputs/exception-compute-hashes-3.json b/tests/sentry/grouping/inputs/exception-compute-hashes-3.json
similarity index 100%
rename from tests/sentry/grouping/grouping_inputs/exception-compute-hashes-3.json
rename to tests/sentry/grouping/inputs/exception-compute-hashes-3.json
diff --git a/tests/sentry/grouping/grouping_inputs/exception-compute-hashes.json b/tests/sentry/grouping/inputs/exception-compute-hashes.json
similarity index 100%
rename from tests/sentry/grouping/grouping_inputs/exception-compute-hashes.json
rename to tests/sentry/grouping/inputs/exception-compute-hashes.json
diff --git a/tests/sentry/grouping/grouping_inputs/exception-without-type.json b/tests/sentry/grouping/inputs/exception-without-type.json
similarity index 100%
rename from tests/sentry/grouping/grouping_inputs/exception-without-type.json
rename to tests/sentry/grouping/inputs/exception-without-type.json
diff --git a/tests/sentry/grouping/grouping_inputs/exception-without-value.json b/tests/sentry/grouping/inputs/exception-without-value.json
similarity index 100%
rename from tests/sentry/grouping/grouping_inputs/exception-without-value.json
rename to tests/sentry/grouping/inputs/exception-without-value.json
diff --git a/tests/sentry/grouping/grouping_inputs/expectct.json b/tests/sentry/grouping/inputs/expectct.json
similarity index 100%
rename from tests/sentry/grouping/grouping_inputs/expectct.json
rename to tests/sentry/grouping/inputs/expectct.json
diff --git a/tests/sentry/grouping/grouping_inputs/frame-comput-hashes-ignores-ENHANCED-clojure-classes.json b/tests/sentry/grouping/inputs/frame-comput-hashes-ignores-ENHANCED-clojure-classes.json
similarity index 100%
rename from tests/sentry/grouping/grouping_inputs/frame-comput-hashes-ignores-ENHANCED-clojure-classes.json
rename to tests/sentry/grouping/inputs/frame-comput-hashes-ignores-ENHANCED-clojure-classes.json
diff --git a/tests/sentry/grouping/grouping_inputs/frame-ignores-ENHANCED-spring-classes.json b/tests/sentry/grouping/inputs/frame-ignores-ENHANCED-spring-classes.json
similarity index 100%
rename from tests/sentry/grouping/grouping_inputs/frame-ignores-ENHANCED-spring-classes.json
rename to tests/sentry/grouping/inputs/frame-ignores-ENHANCED-spring-classes.json
diff --git a/tests/sentry/grouping/grouping_inputs/frame-ignores-extra-ENHANCED-clojure-classes.json b/tests/sentry/grouping/inputs/frame-ignores-extra-ENHANCED-clojure-classes.json
similarity index 100%
rename from tests/sentry/grouping/grouping_inputs/frame-ignores-extra-ENHANCED-clojure-classes.json
rename to tests/sentry/grouping/inputs/frame-ignores-extra-ENHANCED-clojure-classes.json
diff --git a/tests/sentry/grouping/grouping_inputs/frame-ignores-extra-ENHANCED-spring-classes.json b/tests/sentry/grouping/inputs/frame-ignores-extra-ENHANCED-spring-classes.json
similarity index 100%
rename from tests/sentry/grouping/grouping_inputs/frame-ignores-extra-ENHANCED-spring-classes.json
rename to tests/sentry/grouping/inputs/frame-ignores-extra-ENHANCED-spring-classes.json
diff --git a/tests/sentry/grouping/grouping_inputs/frame-ignores-filename-if-abs-path-is-http.json b/tests/sentry/grouping/inputs/frame-ignores-filename-if-abs-path-is-http.json
similarity index 100%
rename from tests/sentry/grouping/grouping_inputs/frame-ignores-filename-if-abs-path-is-http.json
rename to tests/sentry/grouping/inputs/frame-ignores-filename-if-abs-path-is-http.json
diff --git a/tests/sentry/grouping/grouping_inputs/frame-ignores-filename-if-blob.json b/tests/sentry/grouping/inputs/frame-ignores-filename-if-blob.json
similarity index 100%
rename from tests/sentry/grouping/grouping_inputs/frame-ignores-filename-if-blob.json
rename to tests/sentry/grouping/inputs/frame-ignores-filename-if-blob.json
diff --git a/tests/sentry/grouping/grouping_inputs/frame-ignores-filename-if-http.json b/tests/sentry/grouping/inputs/frame-ignores-filename-if-http.json
similarity index 100%
rename from tests/sentry/grouping/grouping_inputs/frame-ignores-filename-if-http.json
rename to tests/sentry/grouping/inputs/frame-ignores-filename-if-http.json
diff --git a/tests/sentry/grouping/grouping_inputs/frame-ignores-filename-if-https.json b/tests/sentry/grouping/inputs/frame-ignores-filename-if-https.json
similarity index 100%
rename from tests/sentry/grouping/grouping_inputs/frame-ignores-filename-if-https.json
rename to tests/sentry/grouping/inputs/frame-ignores-filename-if-https.json
diff --git a/tests/sentry/grouping/grouping_inputs/frame-ignores-java8-lambda-function.json b/tests/sentry/grouping/inputs/frame-ignores-java8-lambda-function.json
similarity index 100%
rename from tests/sentry/grouping/grouping_inputs/frame-ignores-java8-lambda-function.json
rename to tests/sentry/grouping/inputs/frame-ignores-java8-lambda-function.json
diff --git a/tests/sentry/grouping/grouping_inputs/frame-ignores-java8-lambda-module.json b/tests/sentry/grouping/inputs/frame-ignores-java8-lambda-module.json
similarity index 100%
rename from tests/sentry/grouping/grouping_inputs/frame-ignores-java8-lambda-module.json
rename to tests/sentry/grouping/inputs/frame-ignores-java8-lambda-module.json
diff --git a/tests/sentry/grouping/grouping_inputs/frame-ignores-javassist-2.json b/tests/sentry/grouping/inputs/frame-ignores-javassist-2.json
similarity index 100%
rename from tests/sentry/grouping/grouping_inputs/frame-ignores-javassist-2.json
rename to tests/sentry/grouping/inputs/frame-ignores-javassist-2.json
diff --git a/tests/sentry/grouping/grouping_inputs/frame-ignores-javassist-3.json b/tests/sentry/grouping/inputs/frame-ignores-javassist-3.json
similarity index 100%
rename from tests/sentry/grouping/grouping_inputs/frame-ignores-javassist-3.json
rename to tests/sentry/grouping/inputs/frame-ignores-javassist-3.json
diff --git a/tests/sentry/grouping/grouping_inputs/frame-ignores-javassist.json b/tests/sentry/grouping/inputs/frame-ignores-javassist.json
similarity index 100%
rename from tests/sentry/grouping/grouping_inputs/frame-ignores-javassist.json
rename to tests/sentry/grouping/inputs/frame-ignores-javassist.json
diff --git a/tests/sentry/grouping/grouping_inputs/frame-ignores-module-if-page-url-2.json b/tests/sentry/grouping/inputs/frame-ignores-module-if-page-url-2.json
similarity index 100%
rename from tests/sentry/grouping/grouping_inputs/frame-ignores-module-if-page-url-2.json
rename to tests/sentry/grouping/inputs/frame-ignores-module-if-page-url-2.json
diff --git a/tests/sentry/grouping/grouping_inputs/frame-ignores-module-if-page-url.json b/tests/sentry/grouping/inputs/frame-ignores-module-if-page-url.json
similarity index 100%
rename from tests/sentry/grouping/grouping_inputs/frame-ignores-module-if-page-url.json
rename to tests/sentry/grouping/inputs/frame-ignores-module-if-page-url.json
diff --git a/tests/sentry/grouping/grouping_inputs/frame-ignores-safari-native-code.json b/tests/sentry/grouping/inputs/frame-ignores-safari-native-code.json
similarity index 100%
rename from tests/sentry/grouping/grouping_inputs/frame-ignores-safari-native-code.json
rename to tests/sentry/grouping/inputs/frame-ignores-safari-native-code.json
diff --git a/tests/sentry/grouping/grouping_inputs/frame-ignores-sun-java-generated-constructors-2.json b/tests/sentry/grouping/inputs/frame-ignores-sun-java-generated-constructors-2.json
similarity index 100%
rename from tests/sentry/grouping/grouping_inputs/frame-ignores-sun-java-generated-constructors-2.json
rename to tests/sentry/grouping/inputs/frame-ignores-sun-java-generated-constructors-2.json
diff --git a/tests/sentry/grouping/grouping_inputs/frame-ignores-sun-java-generated-constructors.json b/tests/sentry/grouping/inputs/frame-ignores-sun-java-generated-constructors.json
similarity index 100%
rename from tests/sentry/grouping/grouping_inputs/frame-ignores-sun-java-generated-constructors.json
rename to tests/sentry/grouping/inputs/frame-ignores-sun-java-generated-constructors.json
diff --git a/tests/sentry/grouping/grouping_inputs/frame-ignores-sun-java-generated-methods.json b/tests/sentry/grouping/inputs/frame-ignores-sun-java-generated-methods.json
similarity index 100%
rename from tests/sentry/grouping/grouping_inputs/frame-ignores-sun-java-generated-methods.json
rename to tests/sentry/grouping/inputs/frame-ignores-sun-java-generated-methods.json
diff --git a/tests/sentry/grouping/grouping_inputs/frame-sanitizes-block-functions.json b/tests/sentry/grouping/inputs/frame-sanitizes-block-functions.json
similarity index 100%
rename from tests/sentry/grouping/grouping_inputs/frame-sanitizes-block-functions.json
rename to tests/sentry/grouping/inputs/frame-sanitizes-block-functions.json
diff --git a/tests/sentry/grouping/grouping_inputs/frame-sanitizes-erb-templates.json b/tests/sentry/grouping/inputs/frame-sanitizes-erb-templates.json
similarity index 100%
rename from tests/sentry/grouping/grouping_inputs/frame-sanitizes-erb-templates.json
rename to tests/sentry/grouping/inputs/frame-sanitizes-erb-templates.json
diff --git a/tests/sentry/grouping/grouping_inputs/frame-sanitizes-versioned-filenames-2.json b/tests/sentry/grouping/inputs/frame-sanitizes-versioned-filenames-2.json
similarity index 100%
rename from tests/sentry/grouping/grouping_inputs/frame-sanitizes-versioned-filenames-2.json
rename to tests/sentry/grouping/inputs/frame-sanitizes-versioned-filenames-2.json
diff --git a/tests/sentry/grouping/grouping_inputs/frame-sanitizes-versioned-filenames.json b/tests/sentry/grouping/inputs/frame-sanitizes-versioned-filenames.json
similarity index 100%
rename from tests/sentry/grouping/grouping_inputs/frame-sanitizes-versioned-filenames.json
rename to tests/sentry/grouping/inputs/frame-sanitizes-versioned-filenames.json
diff --git a/tests/sentry/grouping/grouping_inputs/frame-skips-symbol-if-unknown.json b/tests/sentry/grouping/inputs/frame-skips-symbol-if-unknown.json
similarity index 100%
rename from tests/sentry/grouping/grouping_inputs/frame-skips-symbol-if-unknown.json
rename to tests/sentry/grouping/inputs/frame-skips-symbol-if-unknown.json
diff --git a/tests/sentry/grouping/grouping_inputs/frame-uses-context-line-over-function.json b/tests/sentry/grouping/inputs/frame-uses-context-line-over-function.json
similarity index 100%
rename from tests/sentry/grouping/grouping_inputs/frame-uses-context-line-over-function.json
rename to tests/sentry/grouping/inputs/frame-uses-context-line-over-function.json
diff --git a/tests/sentry/grouping/grouping_inputs/frame-uses-function-over-lineno.json b/tests/sentry/grouping/inputs/frame-uses-function-over-lineno.json
similarity index 100%
rename from tests/sentry/grouping/grouping_inputs/frame-uses-function-over-lineno.json
rename to tests/sentry/grouping/inputs/frame-uses-function-over-lineno.json
diff --git a/tests/sentry/grouping/grouping_inputs/frame-uses-module-over-filename.json b/tests/sentry/grouping/inputs/frame-uses-module-over-filename.json
similarity index 100%
rename from tests/sentry/grouping/grouping_inputs/frame-uses-module-over-filename.json
rename to tests/sentry/grouping/inputs/frame-uses-module-over-filename.json
diff --git a/tests/sentry/grouping/grouping_inputs/frame-uses-symbol-instead-of-function.json b/tests/sentry/grouping/inputs/frame-uses-symbol-instead-of-function.json
similarity index 100%
rename from tests/sentry/grouping/grouping_inputs/frame-uses-symbol-instead-of-function.json
rename to tests/sentry/grouping/inputs/frame-uses-symbol-instead-of-function.json
diff --git a/tests/sentry/grouping/grouping_inputs/frame-with-only-required-vars.json b/tests/sentry/grouping/inputs/frame-with-only-required-vars.json
similarity index 100%
rename from tests/sentry/grouping/grouping_inputs/frame-with-only-required-vars.json
rename to tests/sentry/grouping/inputs/frame-with-only-required-vars.json
diff --git a/tests/sentry/grouping/grouping_inputs/hpkp.json b/tests/sentry/grouping/inputs/hpkp.json
similarity index 100%
rename from tests/sentry/grouping/grouping_inputs/hpkp.json
rename to tests/sentry/grouping/inputs/hpkp.json
diff --git a/tests/sentry/grouping/grouping_inputs/java-chained.json b/tests/sentry/grouping/inputs/java-chained.json
similarity index 100%
rename from tests/sentry/grouping/grouping_inputs/java-chained.json
rename to tests/sentry/grouping/inputs/java-chained.json
diff --git a/tests/sentry/grouping/grouping_inputs/java-minimal.json b/tests/sentry/grouping/inputs/java-minimal.json
similarity index 100%
rename from tests/sentry/grouping/grouping_inputs/java-minimal.json
rename to tests/sentry/grouping/inputs/java-minimal.json
diff --git a/tests/sentry/grouping/grouping_inputs/javascript-exception-no-in-app.json b/tests/sentry/grouping/inputs/javascript-exception-no-in-app.json
similarity index 100%
rename from tests/sentry/grouping/grouping_inputs/javascript-exception-no-in-app.json
rename to tests/sentry/grouping/inputs/javascript-exception-no-in-app.json
diff --git a/tests/sentry/grouping/grouping_inputs/javascript-message.json b/tests/sentry/grouping/inputs/javascript-message.json
similarity index 100%
rename from tests/sentry/grouping/grouping_inputs/javascript-message.json
rename to tests/sentry/grouping/inputs/javascript-message.json
diff --git a/tests/sentry/grouping/grouping_inputs/laravel.json b/tests/sentry/grouping/inputs/laravel.json
similarity index 100%
rename from tests/sentry/grouping/grouping_inputs/laravel.json
rename to tests/sentry/grouping/inputs/laravel.json
diff --git a/tests/sentry/grouping/grouping_inputs/logentry-prefers-message.json b/tests/sentry/grouping/inputs/logentry-prefers-message.json
similarity index 100%
rename from tests/sentry/grouping/grouping_inputs/logentry-prefers-message.json
rename to tests/sentry/grouping/inputs/logentry-prefers-message.json
diff --git a/tests/sentry/grouping/grouping_inputs/logentry-uses-formatted.json b/tests/sentry/grouping/inputs/logentry-uses-formatted.json
similarity index 100%
rename from tests/sentry/grouping/grouping_inputs/logentry-uses-formatted.json
rename to tests/sentry/grouping/inputs/logentry-uses-formatted.json
diff --git a/tests/sentry/grouping/grouping_inputs/message-prefers-message.json b/tests/sentry/grouping/inputs/message-prefers-message.json
similarity index 100%
rename from tests/sentry/grouping/grouping_inputs/message-prefers-message.json
rename to tests/sentry/grouping/inputs/message-prefers-message.json
diff --git a/tests/sentry/grouping/grouping_inputs/message-uses-formatted.json b/tests/sentry/grouping/inputs/message-uses-formatted.json
similarity index 100%
rename from tests/sentry/grouping/grouping_inputs/message-uses-formatted.json
rename to tests/sentry/grouping/inputs/message-uses-formatted.json
diff --git a/tests/sentry/grouping/grouping_inputs/minified-javascript.json b/tests/sentry/grouping/inputs/minified-javascript.json
similarity index 100%
rename from tests/sentry/grouping/grouping_inputs/minified-javascript.json
rename to tests/sentry/grouping/inputs/minified-javascript.json
diff --git a/tests/sentry/grouping/grouping_inputs/native-complex-function-names.json b/tests/sentry/grouping/inputs/native-complex-function-names.json
similarity index 100%
rename from tests/sentry/grouping/grouping_inputs/native-complex-function-names.json
rename to tests/sentry/grouping/inputs/native-complex-function-names.json
diff --git a/tests/sentry/grouping/grouping_inputs/native-no-filenames.json b/tests/sentry/grouping/inputs/native-no-filenames.json
similarity index 100%
rename from tests/sentry/grouping/grouping_inputs/native-no-filenames.json
rename to tests/sentry/grouping/inputs/native-no-filenames.json
diff --git a/tests/sentry/grouping/grouping_inputs/node-exception-weird.json b/tests/sentry/grouping/inputs/node-exception-weird.json
similarity index 100%
rename from tests/sentry/grouping/grouping_inputs/node-exception-weird.json
rename to tests/sentry/grouping/inputs/node-exception-weird.json
diff --git a/tests/sentry/grouping/grouping_inputs/python-exception-base.json b/tests/sentry/grouping/inputs/python-exception-base.json
similarity index 100%
rename from tests/sentry/grouping/grouping_inputs/python-exception-base.json
rename to tests/sentry/grouping/inputs/python-exception-base.json
diff --git a/tests/sentry/grouping/grouping_inputs/python-http-error.json b/tests/sentry/grouping/inputs/python-http-error.json
similarity index 100%
rename from tests/sentry/grouping/grouping_inputs/python-http-error.json
rename to tests/sentry/grouping/inputs/python-http-error.json
diff --git a/tests/sentry/grouping/grouping_inputs/react-native.json b/tests/sentry/grouping/inputs/react-native.json
similarity index 100%
rename from tests/sentry/grouping/grouping_inputs/react-native.json
rename to tests/sentry/grouping/inputs/react-native.json
diff --git a/tests/sentry/grouping/grouping_inputs/stacktrace-cocoa.json b/tests/sentry/grouping/inputs/stacktrace-cocoa.json
similarity index 100%
rename from tests/sentry/grouping/grouping_inputs/stacktrace-cocoa.json
rename to tests/sentry/grouping/inputs/stacktrace-cocoa.json
diff --git a/tests/sentry/grouping/grouping_inputs/stacktrace-collapse-recursion.json b/tests/sentry/grouping/inputs/stacktrace-collapse-recursion.json
similarity index 100%
rename from tests/sentry/grouping/grouping_inputs/stacktrace-collapse-recursion.json
rename to tests/sentry/grouping/inputs/stacktrace-collapse-recursion.json
diff --git a/tests/sentry/grouping/grouping_inputs/stacktrace-compute-hashes.json b/tests/sentry/grouping/inputs/stacktrace-compute-hashes.json
similarity index 100%
rename from tests/sentry/grouping/grouping_inputs/stacktrace-compute-hashes.json
rename to tests/sentry/grouping/inputs/stacktrace-compute-hashes.json
diff --git a/tests/sentry/grouping/grouping_inputs/stacktrace-discards-seemingly-useless-stack.json b/tests/sentry/grouping/inputs/stacktrace-discards-seemingly-useless-stack.json
similarity index 100%
rename from tests/sentry/grouping/grouping_inputs/stacktrace-discards-seemingly-useless-stack.json
rename to tests/sentry/grouping/inputs/stacktrace-discards-seemingly-useless-stack.json
diff --git a/tests/sentry/grouping/grouping_inputs/stacktrace-does-not-discard-non-urls.json b/tests/sentry/grouping/inputs/stacktrace-does-not-discard-non-urls.json
similarity index 100%
rename from tests/sentry/grouping/grouping_inputs/stacktrace-does-not-discard-non-urls.json
rename to tests/sentry/grouping/inputs/stacktrace-does-not-discard-non-urls.json
diff --git a/tests/sentry/grouping/grouping_inputs/stacktrace-does-not-group-different-js-errors.json b/tests/sentry/grouping/inputs/stacktrace-does-not-group-different-js-errors.json
similarity index 100%
rename from tests/sentry/grouping/grouping_inputs/stacktrace-does-not-group-different-js-errors.json
rename to tests/sentry/grouping/inputs/stacktrace-does-not-group-different-js-errors.json
diff --git a/tests/sentry/grouping/grouping_inputs/stacktrace-excludes-single-frame-urls.json b/tests/sentry/grouping/inputs/stacktrace-excludes-single-frame-urls.json
similarity index 100%
rename from tests/sentry/grouping/grouping_inputs/stacktrace-excludes-single-frame-urls.json
rename to tests/sentry/grouping/inputs/stacktrace-excludes-single-frame-urls.json
diff --git a/tests/sentry/grouping/grouping_inputs/stacktrace-hash-without-system-frames.json b/tests/sentry/grouping/inputs/stacktrace-hash-without-system-frames.json
similarity index 100%
rename from tests/sentry/grouping/grouping_inputs/stacktrace-hash-without-system-frames.json
rename to tests/sentry/grouping/inputs/stacktrace-hash-without-system-frames.json
diff --git a/tests/sentry/grouping/grouping_inputs/stacktrace-ignores-singular-anonymous-frame.json b/tests/sentry/grouping/inputs/stacktrace-ignores-singular-anonymous-frame.json
similarity index 100%
rename from tests/sentry/grouping/grouping_inputs/stacktrace-ignores-singular-anonymous-frame.json
rename to tests/sentry/grouping/inputs/stacktrace-ignores-singular-anonymous-frame.json
diff --git a/tests/sentry/grouping/grouping_inputs/stacktrace-with-minimal-app-frames.json b/tests/sentry/grouping/inputs/stacktrace-with-minimal-app-frames.json
similarity index 100%
rename from tests/sentry/grouping/grouping_inputs/stacktrace-with-minimal-app-frames.json
rename to tests/sentry/grouping/inputs/stacktrace-with-minimal-app-frames.json
diff --git a/tests/sentry/grouping/grouping_inputs/template-compute-hashes.json b/tests/sentry/grouping/inputs/template-compute-hashes.json
similarity index 100%
rename from tests/sentry/grouping/grouping_inputs/template-compute-hashes.json
rename to tests/sentry/grouping/inputs/template-compute-hashes.json
diff --git a/tests/sentry/grouping/grouping_inputs/threads-compute-hashes.json b/tests/sentry/grouping/inputs/threads-compute-hashes.json
similarity index 100%
rename from tests/sentry/grouping/grouping_inputs/threads-compute-hashes.json
rename to tests/sentry/grouping/inputs/threads-compute-hashes.json
diff --git a/tests/sentry/grouping/grouping_inputs/threads-no-hash.json b/tests/sentry/grouping/inputs/threads-no-hash.json
similarity index 100%
rename from tests/sentry/grouping/grouping_inputs/threads-no-hash.json
rename to tests/sentry/grouping/inputs/threads-no-hash.json
diff --git a/tests/sentry/grouping/snapshots/test_enhancer/test_basic_parsing.pysnap b/tests/sentry/grouping/snapshots/test_enhancer/test_basic_parsing.pysnap
deleted file mode 100644
index 1824ea68b7..0000000000
--- a/tests/sentry/grouping/snapshots/test_enhancer/test_basic_parsing.pysnap
+++ /dev/null
@@ -1,74 +0,0 @@
----
-created: '2019-04-03T18:39:26.343115Z'
-creator: sentry
-source: tests/sentry/grouping/test_enhancer.py
----
-bases:
-- common:v1
-changelog: null
-id: null
-rules:
-- actions:
-  - flag: true
-    key: app
-    range: null
-  matchers:
-  - key: path
-    pattern: '*/code/game/whatever/*'
-- actions:
-  - flag: false
-    key: group
-    range: up
-  - flag: false
-    key: group
-    range: null
-  matchers:
-  - key: function
-    pattern: panic_handler
-- actions:
-  - flag: false
-    key: group
-    range: down
-  matchers:
-  - key: function
-    pattern: ThreadStartWin32
-- actions:
-  - flag: false
-    key: group
-    range: down
-  matchers:
-  - key: function
-    pattern: ThreadStartLinux
-- actions:
-  - flag: false
-    key: group
-    range: down
-  matchers:
-  - key: function
-    pattern: ThreadStartMac
-- actions:
-  - flag: false
-    key: app
-    range: null
-  matchers:
-  - key: family
-    pattern: native
-  - key: module
-    pattern: std::*
-- actions:
-  - flag: false
-    key: app
-    range: null
-  matchers:
-  - key: module
-    pattern: core::*
-- actions:
-  - flag: false
-    key: app
-    range: null
-  matchers:
-  - key: family
-    pattern: javascript
-  - key: path
-    pattern: '*/test.js'
-version: 1
diff --git a/tests/sentry/grouping/snapshots/test_fingerprinting/test_event_hash_variant/fingerprint_exception_type.pysnap b/tests/sentry/grouping/snapshots/test_fingerprinting/test_event_hash_variant/fingerprint_exception_type.pysnap
deleted file mode 100644
index 432e3fbb8b..0000000000
--- a/tests/sentry/grouping/snapshots/test_fingerprinting/test_event_hash_variant/fingerprint_exception_type.pysnap
+++ /dev/null
@@ -1,16 +0,0 @@
----
-created: '2019-04-07T22:40:59.176960Z'
-creator: sentry
-source: tests/sentry/grouping/test_fingerprinting.py
----
-config:
-  rules:
-  - fingerprint:
-    - database-unavailable
-    matchers:
-    - - type
-      - DatabaseUnavailable
-  version: 1
-fingerprint:
-- my-route
-- database-unavailable
diff --git a/tests/sentry/grouping/snapshots/test_fingerprinting/test_event_hash_variant/fingerprint_exception_type_and_module.pysnap b/tests/sentry/grouping/snapshots/test_fingerprinting/test_event_hash_variant/fingerprint_exception_type_and_module.pysnap
deleted file mode 100644
index edb874aa86..0000000000
--- a/tests/sentry/grouping/snapshots/test_fingerprinting/test_event_hash_variant/fingerprint_exception_type_and_module.pysnap
+++ /dev/null
@@ -1,18 +0,0 @@
----
-created: '2019-04-08T10:22:55.667584Z'
-creator: sentry
-source: tests/sentry/grouping/test_fingerprinting.py
----
-config:
-  rules:
-  - fingerprint:
-    - database-unavailable
-    matchers:
-    - - type
-      - DatabaseUnavailable
-    - - module
-      - io.sentry.example.*
-  version: 1
-fingerprint:
-- my-route
-- database-unavailable
diff --git a/tests/sentry/grouping/snapshots/test_fingerprinting/test_event_hash_variant/fingerprint_exception_type_and_module2.pysnap b/tests/sentry/grouping/snapshots/test_fingerprinting/test_event_hash_variant/fingerprint_exception_type_and_module2.pysnap
deleted file mode 100644
index 8430873318..0000000000
--- a/tests/sentry/grouping/snapshots/test_fingerprinting/test_event_hash_variant/fingerprint_exception_type_and_module2.pysnap
+++ /dev/null
@@ -1,18 +0,0 @@
----
-created: '2019-04-08T09:04:34.343282Z'
-creator: sentry
-source: tests/sentry/grouping/test_fingerprinting.py
----
-config:
-  rules:
-  - fingerprint:
-    - database-unavailable
-    matchers:
-    - - type
-      - DatabaseUnavailable
-    - - module
-      - invalid.databasestuff.*
-  version: 1
-fingerprint:
-- my-route
-- '{{ default }}'
diff --git a/tests/sentry/grouping/snapshots/test_fingerprinting/test_event_hash_variant/fingerprint_exception_value.pysnap b/tests/sentry/grouping/snapshots/test_fingerprinting/test_event_hash_variant/fingerprint_exception_value.pysnap
deleted file mode 100644
index 923f709108..0000000000
--- a/tests/sentry/grouping/snapshots/test_fingerprinting/test_event_hash_variant/fingerprint_exception_value.pysnap
+++ /dev/null
@@ -1,15 +0,0 @@
----
-created: '2019-04-07T22:42:22.847873Z'
-creator: sentry
-source: tests/sentry/grouping/test_fingerprinting.py
----
-config:
-  rules:
-  - fingerprint:
-    - something-went-wrong
-    matchers:
-    - - value
-      - '*went wrong*'
-  version: 1
-fingerprint:
-- something-went-wrong
diff --git a/tests/sentry/grouping/snapshots/test_fingerprinting/test_event_hash_variant/fingerprint_message.pysnap b/tests/sentry/grouping/snapshots/test_fingerprinting/test_event_hash_variant/fingerprint_message.pysnap
deleted file mode 100644
index 44b1a8e9e7..0000000000
--- a/tests/sentry/grouping/snapshots/test_fingerprinting/test_event_hash_variant/fingerprint_message.pysnap
+++ /dev/null
@@ -1,15 +0,0 @@
----
-created: '2019-04-08T10:25:47.460482Z'
-creator: sentry
-source: tests/sentry/grouping/test_fingerprinting.py
----
-config:
-  rules:
-  - fingerprint:
-    - what-is-love
-    matchers:
-    - - message
-      - '*love*'
-  version: 1
-fingerprint:
-- what-is-love
diff --git a/tests/sentry/grouping/snapshots/test_fingerprinting/test_event_hash_variant/fingerprint_native.pysnap b/tests/sentry/grouping/snapshots/test_fingerprinting/test_event_hash_variant/fingerprint_native.pysnap
deleted file mode 100644
index 219e0c32fe..0000000000
--- a/tests/sentry/grouping/snapshots/test_fingerprinting/test_event_hash_variant/fingerprint_native.pysnap
+++ /dev/null
@@ -1,17 +0,0 @@
----
-created: '2019-04-08T10:39:51.270105Z'
-creator: sentry
-source: tests/sentry/grouping/test_fingerprinting.py
----
-config:
-  rules:
-  - fingerprint:
-    - symcache-error
-    matchers:
-    - - type
-      - SymCacheError
-    - - function
-      - symbolicator::actors::symcaches::*
-  version: 1
-fingerprint:
-- symcache-error
diff --git a/tests/sentry/grouping/snapshots/test_fingerprinting/test_event_hash_variant/fingerprint_no_match.pysnap b/tests/sentry/grouping/snapshots/test_fingerprinting/test_event_hash_variant/fingerprint_no_match.pysnap
deleted file mode 100644
index a1f305b559..0000000000
--- a/tests/sentry/grouping/snapshots/test_fingerprinting/test_event_hash_variant/fingerprint_no_match.pysnap
+++ /dev/null
@@ -1,18 +0,0 @@
----
-created: '2019-04-07T22:45:06.546058Z'
-creator: sentry
-source: tests/sentry/grouping/test_fingerprinting.py
----
-config:
-  rules:
-  - fingerprint:
-    - database-unavailable
-    matchers:
-    - - type
-      - DatabaseUnavailable
-    - - module
-      - invalid.databasestuff.*
-  version: 1
-fingerprint:
-- my-route
-- '{{ default }}'
diff --git a/tests/sentry/grouping/snapshots/test_fingerprinting/test_event_hash_variant/fingerprint_python.pysnap b/tests/sentry/grouping/snapshots/test_fingerprinting/test_event_hash_variant/fingerprint_python.pysnap
deleted file mode 100644
index 1ee7305e69..0000000000
--- a/tests/sentry/grouping/snapshots/test_fingerprinting/test_event_hash_variant/fingerprint_python.pysnap
+++ /dev/null
@@ -1,17 +0,0 @@
----
-created: '2019-04-08T10:31:31.548578Z'
-creator: sentry
-source: tests/sentry/grouping/test_fingerprinting.py
----
-config:
-  rules:
-  - fingerprint:
-    - timeout-in-requests
-    matchers:
-    - - type
-      - ReadTimeout
-    - - path
-      - '**/requests/adapters.py'
-  version: 1
-fingerprint:
-- timeout-in-requests
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined:2019_04_07/actix.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined:2019_04_07/actix.pysnap
deleted file mode 100644
index a249911c9a..0000000000
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined:2019_04_07/actix.pysnap
+++ /dev/null
@@ -1,784 +0,0 @@
----
-created: '2019-04-07T10:03:30.926320Z'
-creator: sentry
-source: tests/sentry/grouping/test_variants.py
----
-app:
-  hash: '3abe7858e37e8eb76c484efa7c7ba121'
-  component:
-    app*
-      exception*
-        stacktrace*
-          frame*
-            function*
-              u'__pthread_start'
-          frame*
-            function*
-              u'__pthread_body'
-          frame (non app frame)
-            filename*
-              u'thread.rs'
-            function*
-              u'std::sys::unix::thread::Thread::new::thread_start'
-          frame*
-            filename*
-              u'boxed.rs'
-            function* (isolated function)
-              u'<F as alloc::boxed::FnBox<T>>::call_box'
-          frame (non app frame)
-            filename*
-              u'mod.rs'
-            function*
-              u'std::thread::Builder::spawn_unchecked::{{closure}}'
-          frame (non app frame)
-            filename*
-              u'panic.rs'
-            function*
-              u'std::panic::catch_unwind'
-          frame (non app frame)
-            filename*
-              u'panicking.rs'
-            function*
-              u'std::panicking::try'
-          frame*
-            filename*
-              u'lib.rs'
-            function*
-              u'___rust_maybe_catch_panic'
-          frame (non app frame)
-            filename*
-              u'panicking.rs'
-            function*
-              u'std::panicking::try::do_call'
-          frame (non app frame)
-            filename*
-              u'panic.rs'
-            function* (isolated function)
-              u'<std::panic::AssertUnwindSafe<T> as core::ops::function::FnOnce<T>>::call_once'
-          frame (non app frame)
-            filename*
-              u'mod.rs'
-            function*
-              u'std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}}'
-          frame (non app frame)
-            filename*
-              u'backtrace.rs'
-            function*
-              u'std::sys_common::backtrace::__rust_begin_short_backtrace'
-          frame*
-            filename*
-              u'arbiter.rs'
-            function*
-              u'actix::arbiter::Arbiter::new_with_builder::{{closure}}'
-          frame*
-            filename*
-              u'runtime.rs'
-            function*
-              u'tokio::runtime::current_thread::runtime::Runtime::block_on'
-          frame*
-            filename*
-              u'runtime.rs'
-            function*
-              u'tokio::runtime::current_thread::runtime::Runtime::enter'
-          frame*
-            filename*
-              u'lib.rs'
-            function*
-              u'tokio_reactor::with_default'
-          frame (non app frame)
-            filename*
-              u'local.rs'
-            function*
-              u'<std::thread::local::LocalKey<T>>::with'
-          frame (non app frame)
-            filename*
-              u'local.rs'
-            function*
-              u'<std::thread::local::LocalKey<T>>::try_with'
-          frame*
-            filename*
-              u'lib.rs'
-            function*
-              u'tokio_reactor::with_default::{{closure}}'
-          frame*
-            filename*
-              u'runtime.rs'
-            function*
-              u'tokio::runtime::current_thread::runtime::Runtime::enter::{{closure}}'
-          frame*
-            filename*
-              u'clock.rs'
-            function*
-              u'tokio_timer::clock::clock::with_default'
-          frame (non app frame)
-            filename*
-              u'local.rs'
-            function*
-              u'<std::thread::local::LocalKey<T>>::with'
-          frame (non app frame)
-            filename*
-              u'local.rs'
-            function*
-              u'<std::thread::local::LocalKey<T>>::try_with'
-          frame*
-            filename*
-              u'clock.rs'
-            function*
-              u'tokio_timer::clock::clock::with_default::{{closure}}'
-          frame*
-            filename*
-              u'runtime.rs'
-            function*
-              u'tokio::runtime::current_thread::runtime::Runtime::enter::{{closure}}::{{closure}}'
-          frame*
-            filename*
-              u'handle.rs'
-            function*
-              u'tokio_timer::timer::handle::with_default'
-          frame (non app frame)
-            filename*
-              u'local.rs'
-            function*
-              u'<std::thread::local::LocalKey<T>>::with'
-          frame (non app frame)
-            filename*
-              u'local.rs'
-            function*
-              u'<std::thread::local::LocalKey<T>>::try_with'
-          frame*
-            filename*
-              u'handle.rs'
-            function*
-              u'tokio_timer::timer::handle::with_default::{{closure}}'
-          frame*
-            filename*
-              u'runtime.rs'
-            function*
-              u'tokio::runtime::current_thread::runtime::Runtime::enter::{{closure}}::{{closure}}::{{closure}}'
-          frame*
-            filename*
-              u'global.rs'
-            function*
-              u'tokio_executor::global::with_default'
-          frame (non app frame)
-            filename*
-              u'local.rs'
-            function*
-              u'<std::thread::local::LocalKey<T>>::with'
-          frame (non app frame)
-            filename*
-              u'local.rs'
-            function*
-              u'<std::thread::local::LocalKey<T>>::try_with'
-          frame*
-            filename*
-              u'global.rs'
-            function*
-              u'tokio_executor::global::with_default::{{closure}}'
-          frame*
-            filename*
-              u'runtime.rs'
-            function*
-              u'tokio::runtime::current_thread::runtime::Runtime::enter::{{closure}}::{{closure}}::{{closure}}::{{closure}}'
-          frame*
-            filename*
-              u'runtime.rs'
-            function*
-              u'tokio::runtime::current_thread::runtime::Runtime::block_on::{{closure}}'
-          frame*
-            filename*
-              u'lib.rs'
-            function* (isolated function)
-              u'<tokio_current_thread::Entered<T>>::block_on'
-          frame*
-            filename*
-              u'lib.rs'
-            function* (isolated function)
-              u'<tokio_current_thread::Entered<T>>::tick'
-          frame*
-            filename*
-              u'scheduler.rs'
-            function* (isolated function)
-              u'<tokio_current_thread::scheduler::Scheduler<T>>::tick'
-          frame*
-            filename*
-              u'lib.rs'
-            function* (isolated function)
-              u'<tokio_current_thread::Borrow<T>>::enter'
-          frame (non app frame)
-            filename*
-              u'local.rs'
-            function*
-              u'<std::thread::local::LocalKey<T>>::with'
-          frame (non app frame)
-            filename*
-              u'local.rs'
-            function*
-              u'<std::thread::local::LocalKey<T>>::try_with'
-          frame*
-            filename*
-              u'lib.rs'
-            function* (isolated function)
-              u'<tokio_current_thread::Borrow<T>>::enter::{{closure}}'
-          frame*
-            filename*
-              u'lib.rs'
-            function*
-              u'tokio_current_thread::CurrentRunner::set_spawn'
-          frame*
-            filename*
-              u'lib.rs'
-            function* (isolated function)
-              u'<tokio_current_thread::Borrow<T>>::enter::{{closure}}::{{closure}}'
-          frame*
-            filename*
-              u'scheduler.rs'
-            function* (isolated function)
-              u'<tokio_current_thread::scheduler::Scheduler<T>>::tick::{{closure}}'
-          frame*
-            filename*
-              u'scheduler.rs'
-            function* (isolated function)
-              u'<tokio_current_thread::scheduler::Scheduled<T>>::tick'
-          frame*
-            filename*
-              u'mod.rs'
-            function*
-              u'<futures::task_impl::Spawn<T>>::poll_future_notify'
-          frame*
-            filename*
-              u'mod.rs'
-            function*
-              u'<futures::task_impl::Spawn<T>>::poll_fn_notify'
-          frame*
-            filename*
-              u'mod.rs'
-            function*
-              u'<futures::task_impl::Spawn<T>>::enter'
-          frame*
-            filename*
-              u'mod.rs'
-            function*
-              u'futures::task_impl::std::set'
-          frame*
-            filename*
-              u'mod.rs'
-            function*
-              u'<futures::task_impl::Spawn<T>>::enter::{{closure}}'
-          frame*
-            filename*
-              u'mod.rs'
-            function*
-              u'<futures::task_impl::Spawn<T>>::poll_future_notify::{{closure}}'
-          frame (non app frame)
-            filename*
-              u'mod.rs'
-            function* (isolated function)
-              u'<alloc::boxed::Box<T> as futures::future::Future>::poll'
-          frame*
-            filename*
-              u'then.rs'
-            function* (isolated function)
-              u'<futures::future::then::Then<T> as futures::future::Future>::poll'
-          frame*
-            filename*
-              u'chain.rs'
-            function* (isolated function)
-              u'<futures::future::chain::Chain<T>>::poll'
-          frame*
-            filename*
-              u'either.rs'
-            function* (isolated function)
-              u'<futures::future::either::Either<T> as futures::future::Future>::poll'
-          frame (ignored due to recursion)
-            filename*
-              u'either.rs'
-            function* (isolated function)
-              u'<futures::future::either::Either<T> as futures::future::Future>::poll'
-          frame*
-            filename*
-              u'acceptor.rs'
-            function*
-              u'<actix_web::server::acceptor::ServerMessageAcceptorServiceFut<T> as futures::future::Future>::poll'
-          frame*
-            filename*
-              u'and_then.rs'
-            function* (isolated function)
-              u'<actix_net::service::and_then::AndThenFuture<T> as futures::future::Future>::poll'
-          frame*
-            filename*
-              u'map_err.rs'
-            function* (isolated function)
-              u'<actix_net::service::map_err::MapErrFuture<T> as futures::future::Future>::poll'
-          frame*
-            filename*
-              u'channel.rs'
-            function* (isolated function)
-              u'<actix_web::server::channel::HttpChannel<T> as futures::future::Future>::poll'
-          frame*
-            filename*
-              u'channel.rs'
-            function* (isolated function)
-              u'<actix_web::server::channel::HttpChannel<T> as futures::future::Future>::poll'
-          frame*
-            filename*
-              u'h1.rs'
-            function* (isolated function)
-              u'<actix_web::server::h1::Http1Dispatcher<T>>::poll'
-          frame*
-            filename*
-              u'h1.rs'
-            function* (isolated function)
-              u'<actix_web::server::h1::Http1Dispatcher<T>>::poll_handler'
-          frame*
-            filename*
-              u'h1.rs'
-            function* (isolated function)
-              u'<actix_web::server::h1::Http1Dispatcher<T>>::poll_io'
-          frame*
-            filename*
-              u'h1.rs'
-            function* (isolated function)
-              u'<actix_web::server::h1::Http1Dispatcher<T>>::parse'
-          frame*
-            filename*
-              u'pipeline.rs'
-            function* (isolated function)
-              u'<actix_web::pipeline::Pipeline<T> as actix_web::server::handler::HttpHandlerTask>::poll_io'
-          frame*
-            filename*
-              u'<::log::macros::log macros>'
-            function* (isolated function)
-              u'<actix_web::pipeline::ProcessResponse<T>>::poll_io'
-          frame*
-            filename*
-              u'lib.rs'
-            function*
-              u'log::__private_api_log'
-          frame (non app frame)
-            filename*
-              u'log.rs'
-            function*
-              u'<sentry::integrations::log::Logger as log::Log>::log'
-          frame (non app frame)
-            filename*
-              u'hub.rs'
-            function*
-              u'sentry::hub::Hub::with_active'
-          frame (non app frame)
-            filename*
-              u'hub.rs'
-            function*
-              u'sentry::hub::Hub::with'
-          frame (non app frame)
-            filename*
-              u'local.rs'
-            function*
-              u'<std::thread::local::LocalKey<T>>::with'
-          frame (non app frame)
-            filename*
-              u'local.rs'
-            function*
-              u'<std::thread::local::LocalKey<T>>::try_with'
-          frame (non app frame)
-            filename*
-              u'hub.rs'
-            function*
-              u'sentry::hub::Hub::with::{{closure}}'
-          frame (non app frame)
-            filename*
-              u'hub.rs'
-            function*
-              u'sentry::hub::Hub::with_active::{{closure}}'
-        type*
-          u'actix_web::pipeline'
---------------------------------------------------------------------------
-system:
-  hash: '7f12fecf89ac9e64cdfa36b08e634681'
-  component:
-    system*
-      exception*
-        stacktrace*
-          frame*
-            function*
-              u'__pthread_start'
-          frame*
-            function*
-              u'__pthread_body'
-          frame*
-            filename*
-              u'thread.rs'
-            function*
-              u'std::sys::unix::thread::Thread::new::thread_start'
-          frame*
-            filename*
-              u'boxed.rs'
-            function* (isolated function)
-              u'<F as alloc::boxed::FnBox<T>>::call_box'
-          frame*
-            filename*
-              u'mod.rs'
-            function*
-              u'std::thread::Builder::spawn_unchecked::{{closure}}'
-          frame*
-            filename*
-              u'panic.rs'
-            function*
-              u'std::panic::catch_unwind'
-          frame*
-            filename*
-              u'panicking.rs'
-            function*
-              u'std::panicking::try'
-          frame*
-            filename*
-              u'lib.rs'
-            function*
-              u'___rust_maybe_catch_panic'
-          frame*
-            filename*
-              u'panicking.rs'
-            function*
-              u'std::panicking::try::do_call'
-          frame*
-            filename*
-              u'panic.rs'
-            function* (isolated function)
-              u'<std::panic::AssertUnwindSafe<T> as core::ops::function::FnOnce<T>>::call_once'
-          frame*
-            filename*
-              u'mod.rs'
-            function*
-              u'std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}}'
-          frame*
-            filename*
-              u'backtrace.rs'
-            function*
-              u'std::sys_common::backtrace::__rust_begin_short_backtrace'
-          frame*
-            filename*
-              u'arbiter.rs'
-            function*
-              u'actix::arbiter::Arbiter::new_with_builder::{{closure}}'
-          frame*
-            filename*
-              u'runtime.rs'
-            function*
-              u'tokio::runtime::current_thread::runtime::Runtime::block_on'
-          frame*
-            filename*
-              u'runtime.rs'
-            function*
-              u'tokio::runtime::current_thread::runtime::Runtime::enter'
-          frame*
-            filename*
-              u'lib.rs'
-            function*
-              u'tokio_reactor::with_default'
-          frame*
-            filename*
-              u'local.rs'
-            function*
-              u'<std::thread::local::LocalKey<T>>::with'
-          frame*
-            filename*
-              u'local.rs'
-            function*
-              u'<std::thread::local::LocalKey<T>>::try_with'
-          frame*
-            filename*
-              u'lib.rs'
-            function*
-              u'tokio_reactor::with_default::{{closure}}'
-          frame*
-            filename*
-              u'runtime.rs'
-            function*
-              u'tokio::runtime::current_thread::runtime::Runtime::enter::{{closure}}'
-          frame*
-            filename*
-              u'clock.rs'
-            function*
-              u'tokio_timer::clock::clock::with_default'
-          frame*
-            filename*
-              u'local.rs'
-            function*
-              u'<std::thread::local::LocalKey<T>>::with'
-          frame*
-            filename*
-              u'local.rs'
-            function*
-              u'<std::thread::local::LocalKey<T>>::try_with'
-          frame*
-            filename*
-              u'clock.rs'
-            function*
-              u'tokio_timer::clock::clock::with_default::{{closure}}'
-          frame*
-            filename*
-              u'runtime.rs'
-            function*
-              u'tokio::runtime::current_thread::runtime::Runtime::enter::{{closure}}::{{closure}}'
-          frame*
-            filename*
-              u'handle.rs'
-            function*
-              u'tokio_timer::timer::handle::with_default'
-          frame*
-            filename*
-              u'local.rs'
-            function*
-              u'<std::thread::local::LocalKey<T>>::with'
-          frame*
-            filename*
-              u'local.rs'
-            function*
-              u'<std::thread::local::LocalKey<T>>::try_with'
-          frame*
-            filename*
-              u'handle.rs'
-            function*
-              u'tokio_timer::timer::handle::with_default::{{closure}}'
-          frame*
-            filename*
-              u'runtime.rs'
-            function*
-              u'tokio::runtime::current_thread::runtime::Runtime::enter::{{closure}}::{{closure}}::{{closure}}'
-          frame*
-            filename*
-              u'global.rs'
-            function*
-              u'tokio_executor::global::with_default'
-          frame*
-            filename*
-              u'local.rs'
-            function*
-              u'<std::thread::local::LocalKey<T>>::with'
-          frame*
-            filename*
-              u'local.rs'
-            function*
-              u'<std::thread::local::LocalKey<T>>::try_with'
-          frame*
-            filename*
-              u'global.rs'
-            function*
-              u'tokio_executor::global::with_default::{{closure}}'
-          frame*
-            filename*
-              u'runtime.rs'
-            function*
-              u'tokio::runtime::current_thread::runtime::Runtime::enter::{{closure}}::{{closure}}::{{closure}}::{{closure}}'
-          frame*
-            filename*
-              u'runtime.rs'
-            function*
-              u'tokio::runtime::current_thread::runtime::Runtime::block_on::{{closure}}'
-          frame*
-            filename*
-              u'lib.rs'
-            function* (isolated function)
-              u'<tokio_current_thread::Entered<T>>::block_on'
-          frame*
-            filename*
-              u'lib.rs'
-            function* (isolated function)
-              u'<tokio_current_thread::Entered<T>>::tick'
-          frame*
-            filename*
-              u'scheduler.rs'
-            function* (isolated function)
-              u'<tokio_current_thread::scheduler::Scheduler<T>>::tick'
-          frame*
-            filename*
-              u'lib.rs'
-            function* (isolated function)
-              u'<tokio_current_thread::Borrow<T>>::enter'
-          frame*
-            filename*
-              u'local.rs'
-            function*
-              u'<std::thread::local::LocalKey<T>>::with'
-          frame*
-            filename*
-              u'local.rs'
-            function*
-              u'<std::thread::local::LocalKey<T>>::try_with'
-          frame*
-            filename*
-              u'lib.rs'
-            function* (isolated function)
-              u'<tokio_current_thread::Borrow<T>>::enter::{{closure}}'
-          frame*
-            filename*
-              u'lib.rs'
-            function*
-              u'tokio_current_thread::CurrentRunner::set_spawn'
-          frame*
-            filename*
-              u'lib.rs'
-            function* (isolated function)
-              u'<tokio_current_thread::Borrow<T>>::enter::{{closure}}::{{closure}}'
-          frame*
-            filename*
-              u'scheduler.rs'
-            function* (isolated function)
-              u'<tokio_current_thread::scheduler::Scheduler<T>>::tick::{{closure}}'
-          frame*
-            filename*
-              u'scheduler.rs'
-            function* (isolated function)
-              u'<tokio_current_thread::scheduler::Scheduled<T>>::tick'
-          frame*
-            filename*
-              u'mod.rs'
-            function*
-              u'<futures::task_impl::Spawn<T>>::poll_future_notify'
-          frame*
-            filename*
-              u'mod.rs'
-            function*
-              u'<futures::task_impl::Spawn<T>>::poll_fn_notify'
-          frame*
-            filename*
-              u'mod.rs'
-            function*
-              u'<futures::task_impl::Spawn<T>>::enter'
-          frame*
-            filename*
-              u'mod.rs'
-            function*
-              u'futures::task_impl::std::set'
-          frame*
-            filename*
-              u'mod.rs'
-            function*
-              u'<futures::task_impl::Spawn<T>>::enter::{{closure}}'
-          frame*
-            filename*
-              u'mod.rs'
-            function*
-              u'<futures::task_impl::Spawn<T>>::poll_future_notify::{{closure}}'
-          frame*
-            filename*
-              u'mod.rs'
-            function* (isolated function)
-              u'<alloc::boxed::Box<T> as futures::future::Future>::poll'
-          frame*
-            filename*
-              u'then.rs'
-            function* (isolated function)
-              u'<futures::future::then::Then<T> as futures::future::Future>::poll'
-          frame*
-            filename*
-              u'chain.rs'
-            function* (isolated function)
-              u'<futures::future::chain::Chain<T>>::poll'
-          frame*
-            filename*
-              u'either.rs'
-            function* (isolated function)
-              u'<futures::future::either::Either<T> as futures::future::Future>::poll'
-          frame (ignored due to recursion)
-            filename*
-              u'either.rs'
-            function* (isolated function)
-              u'<futures::future::either::Either<T> as futures::future::Future>::poll'
-          frame*
-            filename*
-              u'acceptor.rs'
-            function*
-              u'<actix_web::server::acceptor::ServerMessageAcceptorServiceFut<T> as futures::future::Future>::poll'
-          frame*
-            filename*
-              u'and_then.rs'
-            function* (isolated function)
-              u'<actix_net::service::and_then::AndThenFuture<T> as futures::future::Future>::poll'
-          frame*
-            filename*
-              u'map_err.rs'
-            function* (isolated function)
-              u'<actix_net::service::map_err::MapErrFuture<T> as futures::future::Future>::poll'
-          frame*
-            filename*
-              u'channel.rs'
-            function* (isolated function)
-              u'<actix_web::server::channel::HttpChannel<T> as futures::future::Future>::poll'
-          frame*
-            filename*
-              u'channel.rs'
-            function* (isolated function)
-              u'<actix_web::server::channel::HttpChannel<T> as futures::future::Future>::poll'
-          frame*
-            filename*
-              u'h1.rs'
-            function* (isolated function)
-              u'<actix_web::server::h1::Http1Dispatcher<T>>::poll'
-          frame*
-            filename*
-              u'h1.rs'
-            function* (isolated function)
-              u'<actix_web::server::h1::Http1Dispatcher<T>>::poll_handler'
-          frame*
-            filename*
-              u'h1.rs'
-            function* (isolated function)
-              u'<actix_web::server::h1::Http1Dispatcher<T>>::poll_io'
-          frame*
-            filename*
-              u'h1.rs'
-            function* (isolated function)
-              u'<actix_web::server::h1::Http1Dispatcher<T>>::parse'
-          frame*
-            filename*
-              u'pipeline.rs'
-            function* (isolated function)
-              u'<actix_web::pipeline::Pipeline<T> as actix_web::server::handler::HttpHandlerTask>::poll_io'
-          frame*
-            filename*
-              u'<::log::macros::log macros>'
-            function* (isolated function)
-              u'<actix_web::pipeline::ProcessResponse<T>>::poll_io'
-          frame*
-            filename*
-              u'lib.rs'
-            function*
-              u'log::__private_api_log'
-          frame*
-            filename*
-              u'log.rs'
-            function*
-              u'<sentry::integrations::log::Logger as log::Log>::log'
-          frame*
-            filename*
-              u'hub.rs'
-            function*
-              u'sentry::hub::Hub::with_active'
-          frame*
-            filename*
-              u'hub.rs'
-            function*
-              u'sentry::hub::Hub::with'
-          frame*
-            filename*
-              u'local.rs'
-            function*
-              u'<std::thread::local::LocalKey<T>>::with'
-          frame*
-            filename*
-              u'local.rs'
-            function*
-              u'<std::thread::local::LocalKey<T>>::try_with'
-          frame*
-            filename*
-              u'hub.rs'
-            function*
-              u'sentry::hub::Hub::with::{{closure}}'
-          frame*
-            filename*
-              u'hub.rs'
-            function*
-              u'sentry::hub::Hub::with_active::{{closure}}'
-        type*
-          u'actix_web::pipeline'
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined:2019_04_07/aspnetcore.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined:2019_04_07/aspnetcore.pysnap
deleted file mode 100644
index be22f5ba1a..0000000000
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined:2019_04_07/aspnetcore.pysnap
+++ /dev/null
@@ -1,473 +0,0 @@
----
-created: '2019-04-07T10:03:30.946441Z'
-creator: sentry
-source: tests/sentry/grouping/test_variants.py
----
-app:
-  hash: None
-  component:
-    app (exception of system takes precedence)
-      exception (ignored because this variant does not contain a stacktrace, but but the system variant does)
-        stacktrace (less than 10% of frames are in-app)
-          frame (non app frame)
-            module*
-              u'Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware'
-            context-line*
-              u'Void MoveNext()'
-            function (function name is used only if module or filename are available)
-              u'Invoke'
-          frame (non app frame)
-            module*
-              u'System.Runtime.CompilerServices.TaskAwaiter'
-            context-line*
-              u'Void HandleNonSuccessAndDebuggerNotification(System.Threading.Tasks.Task)'
-            function (function name is used only if module or filename are available)
-              u'HandleNonSuccessAndDebuggerNotification'
-          frame (non app frame)
-            module*
-              u'System.Runtime.ExceptionServices.ExceptionDispatchInfo'
-            context-line*
-              u'Void Throw()'
-            function (function name is used only if module or filename are available)
-              u'Throw'
-          frame (non app frame)
-            module*
-              u'Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware'
-            context-line*
-              u'Void MoveNext()'
-            function (function name is used only if module or filename are available)
-              u'Invoke'
-          frame (non app frame)
-            module*
-              u'System.Runtime.CompilerServices.TaskAwaiter'
-            context-line*
-              u'Void HandleNonSuccessAndDebuggerNotification(System.Threading.Tasks.Task)'
-            function (function name is used only if module or filename are available)
-              u'HandleNonSuccessAndDebuggerNotification'
-          frame (non app frame)
-            module*
-              u'System.Runtime.ExceptionServices.ExceptionDispatchInfo'
-            context-line*
-              u'Void Throw()'
-            function (function name is used only if module or filename are available)
-              u'Throw'
-          frame (non app frame)
-            module*
-              u'Microsoft.AspNetCore.Routing.EndpointMiddleware'
-            context-line*
-              u'Void MoveNext()'
-            function (function name is used only if module or filename are available)
-              u'Invoke'
-          frame (non app frame)
-            module*
-              u'System.Runtime.CompilerServices.TaskAwaiter'
-            context-line*
-              u'Void HandleNonSuccessAndDebuggerNotification(System.Threading.Tasks.Task)'
-            function (function name is used only if module or filename are available)
-              u'HandleNonSuccessAndDebuggerNotification'
-          frame (non app frame)
-            module*
-              u'System.Runtime.ExceptionServices.ExceptionDispatchInfo'
-            context-line*
-              u'Void Throw()'
-            function (function name is used only if module or filename are available)
-              u'Throw'
-          frame (non app frame)
-            module*
-              u'Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker'
-            context-line*
-              u'Void MoveNext()'
-            function (function name is used only if module or filename are available)
-              u'InvokeAsync'
-          frame (non app frame)
-            module*
-              u'System.Runtime.CompilerServices.TaskAwaiter'
-            context-line*
-              u'Void HandleNonSuccessAndDebuggerNotification(System.Threading.Tasks.Task)'
-            function (function name is used only if module or filename are available)
-              u'HandleNonSuccessAndDebuggerNotification'
-          frame (non app frame)
-            module*
-              u'System.Runtime.ExceptionServices.ExceptionDispatchInfo'
-            context-line*
-              u'Void Throw()'
-            function (function name is used only if module or filename are available)
-              u'Throw'
-          frame (non app frame)
-            module*
-              u'Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker'
-            context-line*
-              u'Void MoveNext()'
-            function (function name is used only if module or filename are available)
-              u'InvokeFilterPipelineAsync'
-          frame (non app frame)
-            module*
-              u'Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker'
-            context-line*
-              u'System.Threading.Tasks.Task Next(State ByRef, Scope ByRef, System.Object ByRef, Boolean ByRef)'
-            function (function name is used only if module or filename are available)
-              u'Next'
-          frame (non app frame)
-            module*
-              u'Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker'
-            context-line*
-              u'Void Rethrow(Microsoft.AspNetCore.Mvc.Filters.ResourceExecutedContext)'
-            function (function name is used only if module or filename are available)
-              u'Rethrow'
-          frame (non app frame)
-            module*
-              u'System.Runtime.ExceptionServices.ExceptionDispatchInfo'
-            context-line*
-              u'Void Throw()'
-            function (function name is used only if module or filename are available)
-              u'Throw'
-          frame (non app frame)
-            module*
-              u'Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker'
-            context-line*
-              u'Void MoveNext()'
-            function (function name is used only if module or filename are available)
-              u'InvokeNextResourceFilter'
-          frame (non app frame)
-            module*
-              u'System.Runtime.CompilerServices.TaskAwaiter'
-            context-line*
-              u'Void HandleNonSuccessAndDebuggerNotification(System.Threading.Tasks.Task)'
-            function (function name is used only if module or filename are available)
-              u'HandleNonSuccessAndDebuggerNotification'
-          frame (non app frame)
-            module*
-              u'System.Runtime.ExceptionServices.ExceptionDispatchInfo'
-            context-line*
-              u'Void Throw()'
-            function (function name is used only if module or filename are available)
-              u'Throw'
-          frame (non app frame)
-            module*
-              u'Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker'
-            context-line*
-              u'Void MoveNext()'
-            function (function name is used only if module or filename are available)
-              u'InvokeInnerFilterAsync'
-          frame (non app frame)
-            module*
-              u'Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker'
-            context-line*
-              u'System.Threading.Tasks.Task Next(State ByRef, Scope ByRef, System.Object ByRef, Boolean ByRef)'
-            function (function name is used only if module or filename are available)
-              u'Next'
-          frame (non app frame)
-            module*
-              u'Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker'
-            context-line*
-              u'Void Rethrow(Microsoft.AspNetCore.Mvc.Filters.ActionExecutedContext)'
-            function (function name is used only if module or filename are available)
-              u'Rethrow'
-          frame (non app frame)
-            module*
-              u'System.Runtime.ExceptionServices.ExceptionDispatchInfo'
-            context-line*
-              u'Void Throw()'
-            function (function name is used only if module or filename are available)
-              u'Throw'
-          frame (non app frame)
-            module*
-              u'Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker'
-            context-line*
-              u'Void MoveNext()'
-            function (function name is used only if module or filename are available)
-              u'InvokeNextActionFilterAsync'
-          frame (non app frame)
-            module*
-              u'System.Runtime.CompilerServices.TaskAwaiter'
-            context-line*
-              u'Void HandleNonSuccessAndDebuggerNotification(System.Threading.Tasks.Task)'
-            function (function name is used only if module or filename are available)
-              u'HandleNonSuccessAndDebuggerNotification'
-          frame (non app frame)
-            module*
-              u'System.Runtime.ExceptionServices.ExceptionDispatchInfo'
-            context-line*
-              u'Void Throw()'
-            function (function name is used only if module or filename are available)
-              u'Throw'
-          frame (non app frame)
-            module*
-              u'Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker'
-            context-line*
-              u'Void MoveNext()'
-            function (function name is used only if module or filename are available)
-              u'InvokeActionMethodAsync'
-          frame (non app frame)
-            module*
-              u'Microsoft.AspNetCore.Mvc.Internal.ActionMethodExecutor+SyncObjectResultExecutor'
-            context-line (discarded because line too long)
-            function*
-              u'Execute'
-          frame (non app frame)
-            module*
-              u'Microsoft.Extensions.Internal.ObjectMethodExecutor'
-            context-line*
-              u'System.Object Execute(System.Object, System.Object[])'
-            function (function name is used only if module or filename are available)
-              u'Execute'
-          frame*
-            module*
-              u'(unknown)'
-            context-line*
-              u'System.Object lambda_method(System.Runtime.CompilerServices.Closure, System.Object, System.Object[])'
-            function (function name is used only if module or filename are available)
-              u'lambda_method'
-          frame*
-            module*
-              u'SentryTest2.Controllers.ValuesController'
-            filename (module takes precedence)
-              u'C:\\Users\\dvora\\source\\repos\\SentryTest2\\SentryTest2\\Controllers\\ValuesController.cs'
-            context-line*
-              u'Microsoft.AspNetCore.Mvc.ActionResult`1[System.String] Get(Int32)'
-            function (function name is used only if module or filename are available)
-              u'Get'
-            lineno (line number is used only if module or filename are available)
-              27
-        type*
-          u'System.Exception'
-        value*
-          u'sync exception'
---------------------------------------------------------------------------
-default:
-  hash: None
-  component:
-    default (exception of system takes precedence)
-      message (exception of system takes precedence)
-        u'An unhandled exception has occurred while executing the request.'
---------------------------------------------------------------------------
-system:
-  hash: '13dfa104801704079b63004347f8fae6'
-  component:
-    system*
-      exception*
-        stacktrace*
-          frame*
-            module*
-              u'Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware'
-            context-line*
-              u'Void MoveNext()'
-            function (function name is used only if module or filename are available)
-              u'Invoke'
-          frame*
-            module*
-              u'System.Runtime.CompilerServices.TaskAwaiter'
-            context-line*
-              u'Void HandleNonSuccessAndDebuggerNotification(System.Threading.Tasks.Task)'
-            function (function name is used only if module or filename are available)
-              u'HandleNonSuccessAndDebuggerNotification'
-          frame*
-            module*
-              u'System.Runtime.ExceptionServices.ExceptionDispatchInfo'
-            context-line*
-              u'Void Throw()'
-            function (function name is used only if module or filename are available)
-              u'Throw'
-          frame*
-            module*
-              u'Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware'
-            context-line*
-              u'Void MoveNext()'
-            function (function name is used only if module or filename are available)
-              u'Invoke'
-          frame*
-            module*
-              u'System.Runtime.CompilerServices.TaskAwaiter'
-            context-line*
-              u'Void HandleNonSuccessAndDebuggerNotification(System.Threading.Tasks.Task)'
-            function (function name is used only if module or filename are available)
-              u'HandleNonSuccessAndDebuggerNotification'
-          frame*
-            module*
-              u'System.Runtime.ExceptionServices.ExceptionDispatchInfo'
-            context-line*
-              u'Void Throw()'
-            function (function name is used only if module or filename are available)
-              u'Throw'
-          frame*
-            module*
-              u'Microsoft.AspNetCore.Routing.EndpointMiddleware'
-            context-line*
-              u'Void MoveNext()'
-            function (function name is used only if module or filename are available)
-              u'Invoke'
-          frame*
-            module*
-              u'System.Runtime.CompilerServices.TaskAwaiter'
-            context-line*
-              u'Void HandleNonSuccessAndDebuggerNotification(System.Threading.Tasks.Task)'
-            function (function name is used only if module or filename are available)
-              u'HandleNonSuccessAndDebuggerNotification'
-          frame*
-            module*
-              u'System.Runtime.ExceptionServices.ExceptionDispatchInfo'
-            context-line*
-              u'Void Throw()'
-            function (function name is used only if module or filename are available)
-              u'Throw'
-          frame*
-            module*
-              u'Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker'
-            context-line*
-              u'Void MoveNext()'
-            function (function name is used only if module or filename are available)
-              u'InvokeAsync'
-          frame*
-            module*
-              u'System.Runtime.CompilerServices.TaskAwaiter'
-            context-line*
-              u'Void HandleNonSuccessAndDebuggerNotification(System.Threading.Tasks.Task)'
-            function (function name is used only if module or filename are available)
-              u'HandleNonSuccessAndDebuggerNotification'
-          frame*
-            module*
-              u'System.Runtime.ExceptionServices.ExceptionDispatchInfo'
-            context-line*
-              u'Void Throw()'
-            function (function name is used only if module or filename are available)
-              u'Throw'
-          frame*
-            module*
-              u'Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker'
-            context-line*
-              u'Void MoveNext()'
-            function (function name is used only if module or filename are available)
-              u'InvokeFilterPipelineAsync'
-          frame*
-            module*
-              u'Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker'
-            context-line*
-              u'System.Threading.Tasks.Task Next(State ByRef, Scope ByRef, System.Object ByRef, Boolean ByRef)'
-            function (function name is used only if module or filename are available)
-              u'Next'
-          frame*
-            module*
-              u'Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker'
-            context-line*
-              u'Void Rethrow(Microsoft.AspNetCore.Mvc.Filters.ResourceExecutedContext)'
-            function (function name is used only if module or filename are available)
-              u'Rethrow'
-          frame*
-            module*
-              u'System.Runtime.ExceptionServices.ExceptionDispatchInfo'
-            context-line*
-              u'Void Throw()'
-            function (function name is used only if module or filename are available)
-              u'Throw'
-          frame*
-            module*
-              u'Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker'
-            context-line*
-              u'Void MoveNext()'
-            function (function name is used only if module or filename are available)
-              u'InvokeNextResourceFilter'
-          frame*
-            module*
-              u'System.Runtime.CompilerServices.TaskAwaiter'
-            context-line*
-              u'Void HandleNonSuccessAndDebuggerNotification(System.Threading.Tasks.Task)'
-            function (function name is used only if module or filename are available)
-              u'HandleNonSuccessAndDebuggerNotification'
-          frame*
-            module*
-              u'System.Runtime.ExceptionServices.ExceptionDispatchInfo'
-            context-line*
-              u'Void Throw()'
-            function (function name is used only if module or filename are available)
-              u'Throw'
-          frame*
-            module*
-              u'Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker'
-            context-line*
-              u'Void MoveNext()'
-            function (function name is used only if module or filename are available)
-              u'InvokeInnerFilterAsync'
-          frame*
-            module*
-              u'Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker'
-            context-line*
-              u'System.Threading.Tasks.Task Next(State ByRef, Scope ByRef, System.Object ByRef, Boolean ByRef)'
-            function (function name is used only if module or filename are available)
-              u'Next'
-          frame*
-            module*
-              u'Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker'
-            context-line*
-              u'Void Rethrow(Microsoft.AspNetCore.Mvc.Filters.ActionExecutedContext)'
-            function (function name is used only if module or filename are available)
-              u'Rethrow'
-          frame*
-            module*
-              u'System.Runtime.ExceptionServices.ExceptionDispatchInfo'
-            context-line*
-              u'Void Throw()'
-            function (function name is used only if module or filename are available)
-              u'Throw'
-          frame*
-            module*
-              u'Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker'
-            context-line*
-              u'Void MoveNext()'
-            function (function name is used only if module or filename are available)
-              u'InvokeNextActionFilterAsync'
-          frame*
-            module*
-              u'System.Runtime.CompilerServices.TaskAwaiter'
-            context-line*
-              u'Void HandleNonSuccessAndDebuggerNotification(System.Threading.Tasks.Task)'
-            function (function name is used only if module or filename are available)
-              u'HandleNonSuccessAndDebuggerNotification'
-          frame*
-            module*
-              u'System.Runtime.ExceptionServices.ExceptionDispatchInfo'
-            context-line*
-              u'Void Throw()'
-            function (function name is used only if module or filename are available)
-              u'Throw'
-          frame*
-            module*
-              u'Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker'
-            context-line*
-              u'Void MoveNext()'
-            function (function name is used only if module or filename are available)
-              u'InvokeActionMethodAsync'
-          frame*
-            module*
-              u'Microsoft.AspNetCore.Mvc.Internal.ActionMethodExecutor+SyncObjectResultExecutor'
-            context-line (discarded because line too long)
-            function*
-              u'Execute'
-          frame*
-            module*
-              u'Microsoft.Extensions.Internal.ObjectMethodExecutor'
-            context-line*
-              u'System.Object Execute(System.Object, System.Object[])'
-            function (function name is used only if module or filename are available)
-              u'Execute'
-          frame*
-            module*
-              u'(unknown)'
-            context-line*
-              u'System.Object lambda_method(System.Runtime.CompilerServices.Closure, System.Object, System.Object[])'
-            function (function name is used only if module or filename are available)
-              u'lambda_method'
-          frame*
-            module*
-              u'SentryTest2.Controllers.ValuesController'
-            filename (module takes precedence)
-              u'C:\\Users\\dvora\\source\\repos\\SentryTest2\\SentryTest2\\Controllers\\ValuesController.cs'
-            context-line*
-              u'Microsoft.AspNetCore.Mvc.ActionResult`1[System.String] Get(Int32)'
-            function (function name is used only if module or filename are available)
-              u'Get'
-            lineno (line number is used only if module or filename are available)
-              27
-        type*
-          u'System.Exception'
-        value (stacktrace and type take precedence)
-          u'sync exception'
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined:2019_04_07/connection_error.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined:2019_04_07/connection_error.pysnap
deleted file mode 100644
index 93b5aad803..0000000000
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined:2019_04_07/connection_error.pysnap
+++ /dev/null
@@ -1,275 +0,0 @@
----
-created: '2019-04-07T10:03:30.960302Z'
-creator: sentry
-source: tests/sentry/grouping/test_variants.py
----
-app:
-  hash: '8abb6be15864dac05d46e61bfe1dd6d3'
-  component:
-    app*
-      exception*
-        stacktrace*
-          frame*
-            module*
-              u'sentry.utils.safe'
-            filename (module takes precedence)
-              u'sentry/utils/safe.py'
-            context-line*
-              u'            result = func(*args, **kwargs)'
-            function (function name is used only if module or filename are available)
-              u'safe_execute'
-            lineno (line number is used only if module or filename are available)
-              31
-          frame*
-            module*
-              u'sentry.utils.services'
-            filename (module takes precedence)
-              u'sentry/utils/services.py'
-            context-line*
-              u'                context[key] = (lambda f: lambda *a, **k: getattr(self, f)(*a, **k))(key)'
-            function (function name is used only if module or filename are available)
-              u'<lambda>'
-            lineno (line number is used only if module or filename are available)
-              91
-          frame*
-            module*
-              u'getsentry.quotas'
-            filename (module takes precedence)
-              u'getsentry/quotas.py'
-            context-line*
-              u'        return super(SubscriptionQuota, self).is_rate_limited(project, key=key)'
-            function (function name is used only if module or filename are available)
-              u'is_rate_limited'
-            lineno (line number is used only if module or filename are available)
-              136
-          frame*
-            module*
-              u'sentry.quotas.redis'
-            filename (module takes precedence)
-              u'sentry/quotas/redis.py'
-            context-line*
-              u'        rejections = is_rate_limited(client, keys, args)'
-            function (function name is used only if module or filename are available)
-              u'is_rate_limited'
-            lineno (line number is used only if module or filename are available)
-              189
-          frame*
-            module*
-              u'sentry.utils.redis'
-            filename (module takes precedence)
-              u'sentry/utils/redis.py'
-            context-line*
-              u'        return script(keys, args, client)'
-            function (function name is used only if module or filename are available)
-              u'call_script'
-            lineno (line number is used only if module or filename are available)
-              239
-          frame (non app frame)
-            module*
-              u'redis.client'
-            filename (module takes precedence)
-              u'redis/client.py'
-            context-line*
-              u'            return client.evalsha(self.sha, len(keys), *args)'
-            function (function name is used only if module or filename are available)
-              u'__call__'
-            lineno (line number is used only if module or filename are available)
-              2694
-          frame (non app frame)
-            module*
-              u'redis.client'
-            filename (module takes precedence)
-              u'redis/client.py'
-            context-line*
-              u"        return self.execute_command('EVALSHA', sha, numkeys, *keys_and_args)"
-            function (function name is used only if module or filename are available)
-              u'evalsha'
-            lineno (line number is used only if module or filename are available)
-              1944
-          frame (non app frame)
-            module*
-              u'redis.client'
-            filename (module takes precedence)
-              u'redis/client.py'
-            context-line*
-              u'            return self.parse_response(connection, command_name, **options)'
-            function (function name is used only if module or filename are available)
-              u'execute_command'
-            lineno (line number is used only if module or filename are available)
-              579
-          frame (non app frame)
-            module*
-              u'redis.client'
-            filename (module takes precedence)
-              u'redis/client.py'
-            context-line*
-              u'        response = connection.read_response()'
-            function (function name is used only if module or filename are available)
-              u'parse_response'
-            lineno (line number is used only if module or filename are available)
-              585
-          frame (non app frame)
-            module*
-              u'redis.connection'
-            filename (module takes precedence)
-              u'redis/connection.py'
-            context-line*
-              u'            response = self._parser.read_response()'
-            function (function name is used only if module or filename are available)
-              u'read_response'
-            lineno (line number is used only if module or filename are available)
-              577
-          frame (non app frame)
-            module*
-              u'redis.connection'
-            filename (module takes precedence)
-              u'redis/connection.py'
-            context-line*
-              u'                                      (e.args,))'
-            function (function name is used only if module or filename are available)
-              u'read_response'
-            lineno (line number is used only if module or filename are available)
-              357
-        type*
-          u'ConnectionError'
-        value (stacktrace and type take precedence)
-          u"Error while reading from socket: ('Connection closed by server.',)"
---------------------------------------------------------------------------
-default:
-  hash: None
-  component:
-    default (exception of app takes precedence)
-      message (exception of app takes precedence)
-        u'%s.process_error'
---------------------------------------------------------------------------
-system:
-  hash: '6391c18be56c7e7c95e58be4b3eaf0bd'
-  component:
-    system*
-      exception*
-        stacktrace*
-          frame*
-            module*
-              u'sentry.utils.safe'
-            filename (module takes precedence)
-              u'sentry/utils/safe.py'
-            context-line*
-              u'            result = func(*args, **kwargs)'
-            function (function name is used only if module or filename are available)
-              u'safe_execute'
-            lineno (line number is used only if module or filename are available)
-              31
-          frame*
-            module*
-              u'sentry.utils.services'
-            filename (module takes precedence)
-              u'sentry/utils/services.py'
-            context-line*
-              u'                context[key] = (lambda f: lambda *a, **k: getattr(self, f)(*a, **k))(key)'
-            function (function name is used only if module or filename are available)
-              u'<lambda>'
-            lineno (line number is used only if module or filename are available)
-              91
-          frame*
-            module*
-              u'getsentry.quotas'
-            filename (module takes precedence)
-              u'getsentry/quotas.py'
-            context-line*
-              u'        return super(SubscriptionQuota, self).is_rate_limited(project, key=key)'
-            function (function name is used only if module or filename are available)
-              u'is_rate_limited'
-            lineno (line number is used only if module or filename are available)
-              136
-          frame*
-            module*
-              u'sentry.quotas.redis'
-            filename (module takes precedence)
-              u'sentry/quotas/redis.py'
-            context-line*
-              u'        rejections = is_rate_limited(client, keys, args)'
-            function (function name is used only if module or filename are available)
-              u'is_rate_limited'
-            lineno (line number is used only if module or filename are available)
-              189
-          frame*
-            module*
-              u'sentry.utils.redis'
-            filename (module takes precedence)
-              u'sentry/utils/redis.py'
-            context-line*
-              u'        return script(keys, args, client)'
-            function (function name is used only if module or filename are available)
-              u'call_script'
-            lineno (line number is used only if module or filename are available)
-              239
-          frame*
-            module*
-              u'redis.client'
-            filename (module takes precedence)
-              u'redis/client.py'
-            context-line*
-              u'            return client.evalsha(self.sha, len(keys), *args)'
-            function (function name is used only if module or filename are available)
-              u'__call__'
-            lineno (line number is used only if module or filename are available)
-              2694
-          frame*
-            module*
-              u'redis.client'
-            filename (module takes precedence)
-              u'redis/client.py'
-            context-line*
-              u"        return self.execute_command('EVALSHA', sha, numkeys, *keys_and_args)"
-            function (function name is used only if module or filename are available)
-              u'evalsha'
-            lineno (line number is used only if module or filename are available)
-              1944
-          frame*
-            module*
-              u'redis.client'
-            filename (module takes precedence)
-              u'redis/client.py'
-            context-line*
-              u'            return self.parse_response(connection, command_name, **options)'
-            function (function name is used only if module or filename are available)
-              u'execute_command'
-            lineno (line number is used only if module or filename are available)
-              579
-          frame*
-            module*
-              u'redis.client'
-            filename (module takes precedence)
-              u'redis/client.py'
-            context-line*
-              u'        response = connection.read_response()'
-            function (function name is used only if module or filename are available)
-              u'parse_response'
-            lineno (line number is used only if module or filename are available)
-              585
-          frame*
-            module*
-              u'redis.connection'
-            filename (module takes precedence)
-              u'redis/connection.py'
-            context-line*
-              u'            response = self._parser.read_response()'
-            function (function name is used only if module or filename are available)
-              u'read_response'
-            lineno (line number is used only if module or filename are available)
-              577
-          frame*
-            module*
-              u'redis.connection'
-            filename (module takes precedence)
-              u'redis/connection.py'
-            context-line*
-              u'                                      (e.args,))'
-            function (function name is used only if module or filename are available)
-              u'read_response'
-            lineno (line number is used only if module or filename are available)
-              357
-        type*
-          u'ConnectionError'
-        value (stacktrace and type take precedence)
-          u"Error while reading from socket: ('Connection closed by server.',)"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined:2019_04_07/csp.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined:2019_04_07/csp.pysnap
deleted file mode 100644
index 2312c1abd2..0000000000
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined:2019_04_07/csp.pysnap
+++ /dev/null
@@ -1,17 +0,0 @@
----
-created: '2019-04-07T10:03:30.971425Z'
-creator: sentry
-source: tests/sentry/grouping/test_variants.py
----
-default:
-  hash: '666766514295bb52812324097cdaf53e'
-  component:
-    default*
-      csp*
-        salt* (a static salt)
-          u'script-src'
-        violation (not a local script violation)
-        uri*
-          u'YYY'
-      message (csp takes precedence)
-        u"Blocked 'script' from 'YYY'"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined:2019_04_07/csp_img_src.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined:2019_04_07/csp_img_src.pysnap
deleted file mode 100644
index 792bd5b7ec..0000000000
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined:2019_04_07/csp_img_src.pysnap
+++ /dev/null
@@ -1,15 +0,0 @@
----
-created: '2019-04-07T10:03:30.979341Z'
-creator: sentry
-source: tests/sentry/grouping/test_variants.py
----
-default:
-  hash: '1742101e08eb1608f569751dfedd0062'
-  component:
-    default*
-      csp*
-        salt* (a static salt)
-          u'img-src'
-        violation (not a local script violation)
-        uri*
-          u'ftp://example.com'
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined:2019_04_07/csp_no_blocked_uri.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined:2019_04_07/csp_no_blocked_uri.pysnap
deleted file mode 100644
index 02e4636a7a..0000000000
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined:2019_04_07/csp_no_blocked_uri.pysnap
+++ /dev/null
@@ -1,15 +0,0 @@
----
-created: '2019-04-07T10:03:30.987667Z'
-creator: sentry
-source: tests/sentry/grouping/test_variants.py
----
-default:
-  hash: 'efddf1cde918097259aa7d4904fb1942'
-  component:
-    default*
-      csp*
-        salt* (a static salt)
-          u'script-src'
-        violation (not a local script violation)
-        uri*
-          "'self'"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined:2019_04_07/csp_script_data_uri.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined:2019_04_07/csp_script_data_uri.pysnap
deleted file mode 100644
index 069e39f0cc..0000000000
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined:2019_04_07/csp_script_data_uri.pysnap
+++ /dev/null
@@ -1,15 +0,0 @@
----
-created: '2019-04-07T10:03:30.996295Z'
-creator: sentry
-source: tests/sentry/grouping/test_variants.py
----
-default:
-  hash: '4e6f2bce9d121aa89f4dc5e5da08afb5'
-  component:
-    default*
-      csp*
-        salt* (a static salt)
-          u'img-src'
-        violation (not a local script violation)
-        uri*
-          u'data:'
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined:2019_04_07/csp_script_src_uri.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined:2019_04_07/csp_script_src_uri.pysnap
deleted file mode 100644
index c6eb02f70d..0000000000
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined:2019_04_07/csp_script_src_uri.pysnap
+++ /dev/null
@@ -1,15 +0,0 @@
----
-created: '2019-04-07T10:03:31.006212Z'
-creator: sentry
-source: tests/sentry/grouping/test_variants.py
----
-default:
-  hash: '223cdacfe5b4b830dc700b5c18cc21b4'
-  component:
-    default*
-      csp*
-        salt* (a static salt)
-          u'script-src'
-        violation (not a local script violation)
-        uri*
-          u'example.com'
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined:2019_04_07/csp_style_src_elem.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined:2019_04_07/csp_style_src_elem.pysnap
deleted file mode 100644
index 414c438019..0000000000
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined:2019_04_07/csp_style_src_elem.pysnap
+++ /dev/null
@@ -1,17 +0,0 @@
----
-created: '2019-04-07T10:03:31.015187Z'
-creator: sentry
-source: tests/sentry/grouping/test_variants.py
----
-default:
-  hash: '537a973f594c364842893e9a72af62a5'
-  component:
-    default*
-      csp*
-        salt* (a static salt)
-          u'style-src-elem'
-        violation (not a local script violation)
-        uri*
-          u'use.fontawesome.com'
-      message (csp takes precedence)
-        u"Blocked 'style' from 'use.fontawesome.com'"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined:2019_04_07/custom_fingerprint.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined:2019_04_07/custom_fingerprint.pysnap
deleted file mode 100644
index c418ae27f1..0000000000
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined:2019_04_07/custom_fingerprint.pysnap
+++ /dev/null
@@ -1,8 +0,0 @@
----
-created: '2019-04-07T10:03:31.025569Z'
-creator: sentry
-source: tests/sentry/grouping/test_variants.py
----
-custom-fingerprint:
-  hash: 'f30afa00b85f5cac5ee0bce01b31f08d'
-  values: [u'celery', u'SoftTimeLimitExceeded', u'sentry.tasks.store.process_event']
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined:2019_04_07/empty.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined:2019_04_07/empty.pysnap
deleted file mode 100644
index 43a994c849..0000000000
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined:2019_04_07/empty.pysnap
+++ /dev/null
@@ -1,7 +0,0 @@
----
-created: '2019-04-07T10:03:31.034571Z'
-creator: sentry
-source: tests/sentry/grouping/test_variants.py
----
-fallback:
-  hash: 'd41d8cd98f00b204e9800998ecf8427e'
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined:2019_04_07/exception_comput_hashes.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined:2019_04_07/exception_comput_hashes.pysnap
deleted file mode 100644
index 07200bf3de..0000000000
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined:2019_04_07/exception_comput_hashes.pysnap
+++ /dev/null
@@ -1,24 +0,0 @@
----
-created: '2019-04-07T10:03:31.043281Z'
-creator: sentry
-source: tests/sentry/grouping/test_variants.py
----
-app:
-  hash: None
-  component:
-    app (exception of system takes precedence)
-      exception (ignored because hash matches system variant)
-        type*
-          u'ValueError'
-        value*
-          u'hello world'
---------------------------------------------------------------------------
-system:
-  hash: 'b23ee1963904c2ca87b145febf94b66c'
-  component:
-    system*
-      exception*
-        type*
-          u'ValueError'
-        value*
-          u'hello world'
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined:2019_04_07/exception_compute_hashes.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined:2019_04_07/exception_compute_hashes.pysnap
deleted file mode 100644
index cd6210ca39..0000000000
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined:2019_04_07/exception_compute_hashes.pysnap
+++ /dev/null
@@ -1,36 +0,0 @@
----
-created: '2019-04-07T10:03:31.052438Z'
-creator: sentry
-source: tests/sentry/grouping/test_variants.py
----
-app:
-  hash: None
-  component:
-    app (exception of system takes precedence)
-      exception (ignored because hash matches system variant)
-        stacktrace*
-          frame* (frame considered in-app because no frame is in-app)
-            filename*
-              u'foo/baz.py'
-            lineno*
-              1
-        type*
-          u'ValueError'
-        value (stacktrace and type take precedence)
-          u'hello world'
---------------------------------------------------------------------------
-system:
-  hash: 'baf0bfa8bb312627cd5ef4171aec9f4e'
-  component:
-    system*
-      exception*
-        stacktrace*
-          frame*
-            filename*
-              u'foo/baz.py'
-            lineno*
-              1
-        type*
-          u'ValueError'
-        value (stacktrace and type take precedence)
-          u'hello world'
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined:2019_04_07/exception_compute_hashes_2.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined:2019_04_07/exception_compute_hashes_2.pysnap
deleted file mode 100644
index 08f9dc4bb0..0000000000
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined:2019_04_07/exception_compute_hashes_2.pysnap
+++ /dev/null
@@ -1,36 +0,0 @@
----
-created: '2019-04-07T10:03:31.061127Z'
-creator: sentry
-source: tests/sentry/grouping/test_variants.py
----
-app:
-  hash: None
-  component:
-    app (exception of system takes precedence)
-      exception (ignored because hash matches system variant)
-        stacktrace*
-          frame* (frame considered in-app because no frame is in-app)
-            filename*
-              u'foo/baz.py'
-            lineno*
-              1
-        type*
-          u'ValueError'
-        value (stacktrace and type take precedence)
-          u'hello world'
---------------------------------------------------------------------------
-system:
-  hash: 'baf0bfa8bb312627cd5ef4171aec9f4e'
-  component:
-    system*
-      exception*
-        stacktrace*
-          frame*
-            filename*
-              u'foo/baz.py'
-            lineno*
-              1
-        type*
-          u'ValueError'
-        value (stacktrace and type take precedence)
-          u'hello world'
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined:2019_04_07/exception_compute_hashes_3.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined:2019_04_07/exception_compute_hashes_3.pysnap
deleted file mode 100644
index 2a0974af26..0000000000
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined:2019_04_07/exception_compute_hashes_3.pysnap
+++ /dev/null
@@ -1,60 +0,0 @@
----
-created: '2019-04-07T10:03:31.070700Z'
-creator: sentry
-source: tests/sentry/grouping/test_variants.py
----
-app:
-  hash: None
-  component:
-    app (exception of system takes precedence)
-      chained-exception (ignored because hash matches system variant)
-        exception*
-          stacktrace*
-            frame* (frame considered in-app because no frame is in-app)
-              filename*
-                u'foo/baz.py'
-              lineno*
-                1
-          type*
-            u'ValueError'
-          value (stacktrace and type take precedence)
-            u'hello world'
-        exception*
-          stacktrace*
-            frame* (frame considered in-app because no frame is in-app)
-              filename*
-                u'foo/baz.py'
-              lineno*
-                1
-          type*
-            u'ValueError'
-          value (stacktrace and type take precedence)
-            u'hello world'
---------------------------------------------------------------------------
-system:
-  hash: '9aef9026a457d312531c07644b271314'
-  component:
-    system*
-      chained-exception*
-        exception*
-          stacktrace*
-            frame*
-              filename*
-                u'foo/baz.py'
-              lineno*
-                1
-          type*
-            u'ValueError'
-          value (stacktrace and type take precedence)
-            u'hello world'
-        exception*
-          stacktrace*
-            frame*
-              filename*
-                u'foo/baz.py'
-              lineno*
-                1
-          type*
-            u'ValueError'
-          value (stacktrace and type take precedence)
-            u'hello world'
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined:2019_04_07/exception_without_type.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined:2019_04_07/exception_without_type.pysnap
deleted file mode 100644
index 2577d9a844..0000000000
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined:2019_04_07/exception_without_type.pysnap
+++ /dev/null
@@ -1,20 +0,0 @@
----
-created: '2019-04-07T10:03:31.079216Z'
-creator: sentry
-source: tests/sentry/grouping/test_variants.py
----
-app:
-  hash: None
-  component:
-    app (exception of system takes precedence)
-      exception (ignored because hash matches system variant)
-        value*
-          u'hello world'
---------------------------------------------------------------------------
-system:
-  hash: '5eb63bbbe01eeed093cb22bb8f5acdc3'
-  component:
-    system*
-      exception*
-        value*
-          u'hello world'
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined:2019_04_07/exception_without_value.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined:2019_04_07/exception_without_value.pysnap
deleted file mode 100644
index 6c26ec4e11..0000000000
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined:2019_04_07/exception_without_value.pysnap
+++ /dev/null
@@ -1,20 +0,0 @@
----
-created: '2019-04-07T10:03:31.087226Z'
-creator: sentry
-source: tests/sentry/grouping/test_variants.py
----
-app:
-  hash: None
-  component:
-    app (exception of system takes precedence)
-      exception (ignored because hash matches system variant)
-        type*
-          u'ValueError'
---------------------------------------------------------------------------
-system:
-  hash: '5a2cfd89b7b171fd7b4794b08023d04f'
-  component:
-    system*
-      exception*
-        type*
-          u'ValueError'
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined:2019_04_07/expectct.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined:2019_04_07/expectct.pysnap
deleted file mode 100644
index 3b095cd835..0000000000
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined:2019_04_07/expectct.pysnap
+++ /dev/null
@@ -1,14 +0,0 @@
----
-created: '2019-04-07T10:03:31.101526Z'
-creator: sentry
-source: tests/sentry/grouping/test_variants.py
----
-default:
-  hash: '3d2933f4b5ec459ec8d569a398fd328c'
-  component:
-    default*
-      expect-ct*
-        salt* (a static salt)
-          'expect-ct'
-        hostname*
-          u'example.com'
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined:2019_04_07/frame_comput_hashes_ignores_ENHANCED_clojure_classes.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined:2019_04_07/frame_comput_hashes_ignores_ENHANCED_clojure_classes.pysnap
deleted file mode 100644
index 650a05b135..0000000000
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined:2019_04_07/frame_comput_hashes_ignores_ENHANCED_clojure_classes.pysnap
+++ /dev/null
@@ -1,26 +0,0 @@
----
-created: '2019-04-07T10:03:31.110186Z'
-creator: sentry
-source: tests/sentry/grouping/test_variants.py
----
-app:
-  hash: None
-  component:
-    app (stacktrace of system takes precedence)
-      stacktrace (ignored because hash matches system variant)
-        frame* (frame considered in-app because no frame is in-app)
-          module* (removed codegen marker)
-            u'sentry_clojure_example.core$_main$fn__<auto>'
-          function*
-            u'invoke'
---------------------------------------------------------------------------
-system:
-  hash: '526b64456c48836a46ec1a89544fd412'
-  component:
-    system*
-      stacktrace*
-        frame*
-          module* (removed codegen marker)
-            u'sentry_clojure_example.core$_main$fn__<auto>'
-          function*
-            u'invoke'
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined:2019_04_07/frame_ignores_ENHANCED_spring_classes.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined:2019_04_07/frame_ignores_ENHANCED_spring_classes.pysnap
deleted file mode 100644
index ead71d4c1d..0000000000
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined:2019_04_07/frame_ignores_ENHANCED_spring_classes.pysnap
+++ /dev/null
@@ -1,26 +0,0 @@
----
-created: '2019-04-07T10:03:31.119029Z'
-creator: sentry
-source: tests/sentry/grouping/test_variants.py
----
-app:
-  hash: None
-  component:
-    app (stacktrace of system takes precedence)
-      stacktrace (ignored because hash matches system variant)
-        frame* (frame considered in-app because no frame is in-app)
-          module* (removed codegen marker)
-            u'invalid.gruml.talkytalkyhub.common.config.JipJipConfig$$EnhancerBySpringCGLIB$$<auto>'
-          function*
-            u'jipJipManagementApplication'
---------------------------------------------------------------------------
-system:
-  hash: '45c0b0a8c777e7a7040d7c39233a08a5'
-  component:
-    system*
-      stacktrace*
-        frame*
-          module* (removed codegen marker)
-            u'invalid.gruml.talkytalkyhub.common.config.JipJipConfig$$EnhancerBySpringCGLIB$$<auto>'
-          function*
-            u'jipJipManagementApplication'
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined:2019_04_07/frame_ignores_extra_ENHANCED_clojure_classes.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined:2019_04_07/frame_ignores_extra_ENHANCED_clojure_classes.pysnap
deleted file mode 100644
index 93834e2fa2..0000000000
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined:2019_04_07/frame_ignores_extra_ENHANCED_clojure_classes.pysnap
+++ /dev/null
@@ -1,26 +0,0 @@
----
-created: '2019-04-07T10:03:31.127614Z'
-creator: sentry
-source: tests/sentry/grouping/test_variants.py
----
-app:
-  hash: None
-  component:
-    app (stacktrace of system takes precedence)
-      stacktrace (ignored because hash matches system variant)
-        frame* (frame considered in-app because no frame is in-app)
-          module* (removed codegen marker)
-            u'sentry_clojure_example.core$_main$fn__<auto>$fn__<auto>'
-          function*
-            u'invoke'
---------------------------------------------------------------------------
-system:
-  hash: '353e05904b48bd3ae4fa9623934a70d0'
-  component:
-    system*
-      stacktrace*
-        frame*
-          module* (removed codegen marker)
-            u'sentry_clojure_example.core$_main$fn__<auto>$fn__<auto>'
-          function*
-            u'invoke'
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined:2019_04_07/frame_ignores_extra_ENHANCED_spring_classes.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined:2019_04_07/frame_ignores_extra_ENHANCED_spring_classes.pysnap
deleted file mode 100644
index 7b1ae0719e..0000000000
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined:2019_04_07/frame_ignores_extra_ENHANCED_spring_classes.pysnap
+++ /dev/null
@@ -1,26 +0,0 @@
----
-created: '2019-04-07T10:03:31.136120Z'
-creator: sentry
-source: tests/sentry/grouping/test_variants.py
----
-app:
-  hash: None
-  component:
-    app (stacktrace of system takes precedence)
-      stacktrace (ignored because hash matches system variant)
-        frame* (frame considered in-app because no frame is in-app)
-          module* (removed codegen marker)
-            u'invalid.gruml.talkytalkyhub.common.config.JipJipConfig$$EnhancerBySpringCGLIB$$<auto>$$EnhancerBySpringCGLIB$$<auto>$$FastClassBySpringCGLIB$$<auto>'
-          function*
-            u'jipJipManagementApplication'
---------------------------------------------------------------------------
-system:
-  hash: 'be15ca3d511b96918e087c4f42503ca2'
-  component:
-    system*
-      stacktrace*
-        frame*
-          module* (removed codegen marker)
-            u'invalid.gruml.talkytalkyhub.common.config.JipJipConfig$$EnhancerBySpringCGLIB$$<auto>$$EnhancerBySpringCGLIB$$<auto>$$FastClassBySpringCGLIB$$<auto>'
-          function*
-            u'jipJipManagementApplication'
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined:2019_04_07/frame_ignores_filename_if_abs_path_is_http.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined:2019_04_07/frame_ignores_filename_if_abs_path_is_http.pysnap
deleted file mode 100644
index 7ac3cdcfdb..0000000000
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined:2019_04_07/frame_ignores_filename_if_abs_path_is_http.pysnap
+++ /dev/null
@@ -1,30 +0,0 @@
----
-created: '2019-04-07T10:03:31.144386Z'
-creator: sentry
-source: tests/sentry/grouping/test_variants.py
----
-app:
-  hash: None
-  component:
-    app (stacktrace of system takes precedence)
-      stacktrace (ignored because hash matches system variant)
-        frame* (frame considered in-app because no frame is in-app)
-          filename (ignored because filename is a URL)
-            u'foo.py'
-          context-line*
-            u'hello world'
-          function (function name is used only if module or filename are available)
-            u'test'
---------------------------------------------------------------------------
-system:
-  hash: '5eb63bbbe01eeed093cb22bb8f5acdc3'
-  component:
-    system*
-      stacktrace*
-        frame*
-          filename (ignored because filename is a URL)
-            u'foo.py'
-          context-line*
-            u'hello world'
-          function (function name is used only if module or filename are available)
-            u'test'
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined:2019_04_07/frame_ignores_filename_if_blob.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined:2019_04_07/frame_ignores_filename_if_blob.pysnap
deleted file mode 100644
index d0a0bb4637..0000000000
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined:2019_04_07/frame_ignores_filename_if_blob.pysnap
+++ /dev/null
@@ -1,25 +0,0 @@
----
-created: '2019-04-07T10:03:31.152792Z'
-creator: sentry
-source: tests/sentry/grouping/test_variants.py
----
-app:
-  hash: None
-  component:
-    app
-      stacktrace (ignored single frame stack)
-        frame (non app frame)
-          filename (ignored because filename is a URL)
-            u'blob:http://example.com/7f7aaadf-a006-4217-9ed5-5fbf8585c6c0'
---------------------------------------------------------------------------
-fallback:
-  hash: 'd41d8cd98f00b204e9800998ecf8427e'
---------------------------------------------------------------------------
-system:
-  hash: None
-  component:
-    system
-      stacktrace (ignored single frame stack)
-        frame
-          filename (ignored because filename is a URL)
-            u'blob:http://example.com/7f7aaadf-a006-4217-9ed5-5fbf8585c6c0'
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined:2019_04_07/frame_ignores_filename_if_http.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined:2019_04_07/frame_ignores_filename_if_http.pysnap
deleted file mode 100644
index 9486730bbe..0000000000
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined:2019_04_07/frame_ignores_filename_if_http.pysnap
+++ /dev/null
@@ -1,30 +0,0 @@
----
-created: '2019-04-07T10:03:31.160938Z'
-creator: sentry
-source: tests/sentry/grouping/test_variants.py
----
-app:
-  hash: None
-  component:
-    app (stacktrace of system takes precedence)
-      stacktrace (ignored because hash matches system variant)
-        frame* (frame considered in-app because no frame is in-app)
-          filename (ignored because filename is a URL)
-            u'/foo.py'
-          context-line*
-            u'hello world'
-          function (function name is used only if module or filename are available)
-            u'test'
---------------------------------------------------------------------------
-system:
-  hash: '5eb63bbbe01eeed093cb22bb8f5acdc3'
-  component:
-    system*
-      stacktrace*
-        frame*
-          filename (ignored because filename is a URL)
-            u'/foo.py'
-          context-line*
-            u'hello world'
-          function (function name is used only if module or filename are available)
-            u'test'
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined:2019_04_07/frame_ignores_filename_if_https.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined:2019_04_07/frame_ignores_filename_if_https.pysnap
deleted file mode 100644
index 6596536fa5..0000000000
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined:2019_04_07/frame_ignores_filename_if_https.pysnap
+++ /dev/null
@@ -1,30 +0,0 @@
----
-created: '2019-04-07T10:03:31.170291Z'
-creator: sentry
-source: tests/sentry/grouping/test_variants.py
----
-app:
-  hash: None
-  component:
-    app (stacktrace of system takes precedence)
-      stacktrace (ignored because hash matches system variant)
-        frame* (frame considered in-app because no frame is in-app)
-          filename (ignored because filename is a URL)
-            u'/foo.py'
-          context-line*
-            u'hello world'
-          function (function name is used only if module or filename are available)
-            u'test'
---------------------------------------------------------------------------
-system:
-  hash: '5eb63bbbe01eeed093cb22bb8f5acdc3'
-  component:
-    system*
-      stacktrace*
-        frame*
-          filename (ignored because filename is a URL)
-            u'/foo.py'
-          context-line*
-            u'hello world'
-          function (function name is used only if module or filename are available)
-            u'test'
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined:2019_04_07/frame_ignores_java8_lambda_function.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined:2019_04_07/frame_ignores_java8_lambda_function.pysnap
deleted file mode 100644
index 2d17c2492e..0000000000
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined:2019_04_07/frame_ignores_java8_lambda_function.pysnap
+++ /dev/null
@@ -1,28 +0,0 @@
----
-created: '2019-04-07T10:03:31.178431Z'
-creator: sentry
-source: tests/sentry/grouping/test_variants.py
----
-app:
-  hash: None
-  component:
-    app (stacktrace of system takes precedence)
-      stacktrace (ignored because hash matches system variant)
-        frame* (frame considered in-app because no frame is in-app)
-          module*
-            u'foo.bar.Baz'
-          function*
-            salt* (normalized lambda function name)
-              '<function>'
---------------------------------------------------------------------------
-system:
-  hash: 'aee9aaca552e7fd593d085ca5a2260cf'
-  component:
-    system*
-      stacktrace*
-        frame*
-          module*
-            u'foo.bar.Baz'
-          function*
-            salt* (normalized lambda function name)
-              '<function>'
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined:2019_04_07/frame_ignores_java8_lambda_module.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined:2019_04_07/frame_ignores_java8_lambda_module.pysnap
deleted file mode 100644
index 51c246b76e..0000000000
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined:2019_04_07/frame_ignores_java8_lambda_module.pysnap
+++ /dev/null
@@ -1,28 +0,0 @@
----
-created: '2019-04-07T10:03:31.186754Z'
-creator: sentry
-source: tests/sentry/grouping/test_variants.py
----
-app:
-  hash: None
-  component:
-    app (stacktrace of system takes precedence)
-      stacktrace (ignored because hash matches system variant)
-        frame* (frame considered in-app because no frame is in-app)
-          module* (ignored module)
-            salt* (normalized generated module name)
-              '<module>'
-          function*
-            u'call'
---------------------------------------------------------------------------
-system:
-  hash: '5fd1358271b3a3dba3287e135029688d'
-  component:
-    system*
-      stacktrace*
-        frame*
-          module* (ignored module)
-            salt* (normalized generated module name)
-              '<module>'
-          function*
-            u'call'
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined:2019_04_07/frame_ignores_javassist.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined:2019_04_07/frame_ignores_javassist.pysnap
deleted file mode 100644
index 67265d9a45..0000000000
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined:2019_04_07/frame_ignores_javassist.pysnap
+++ /dev/null
@@ -1,26 +0,0 @@
----
-created: '2019-04-07T10:03:31.195053Z'
-creator: sentry
-source: tests/sentry/grouping/test_variants.py
----
-app:
-  hash: None
-  component:
-    app (stacktrace of system takes precedence)
-      stacktrace (ignored because hash matches system variant)
-        frame* (frame considered in-app because no frame is in-app)
-          module* (removed codegen marker)
-            u'com.example.api.entry.EntriesResource_$$_javassist<auto>'
-          function*
-            u'fn'
---------------------------------------------------------------------------
-system:
-  hash: '538bdfd8d7bb2495d0d6429c3689a420'
-  component:
-    system*
-      stacktrace*
-        frame*
-          module* (removed codegen marker)
-            u'com.example.api.entry.EntriesResource_$$_javassist<auto>'
-          function*
-            u'fn'
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined:2019_04_07/frame_ignores_javassist_2.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined:2019_04_07/frame_ignores_javassist_2.pysnap
deleted file mode 100644
index b29954c720..0000000000
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined:2019_04_07/frame_ignores_javassist_2.pysnap
+++ /dev/null
@@ -1,26 +0,0 @@
----
-created: '2019-04-07T10:03:31.203697Z'
-creator: sentry
-source: tests/sentry/grouping/test_variants.py
----
-app:
-  hash: None
-  component:
-    app (stacktrace of system takes precedence)
-      stacktrace (ignored because hash matches system variant)
-        frame* (frame considered in-app because no frame is in-app)
-          module* (removed codegen marker)
-            u'com.example.api.entry.EntriesResource_$$_javassist<auto>'
-          function*
-            u'fn'
---------------------------------------------------------------------------
-system:
-  hash: '538bdfd8d7bb2495d0d6429c3689a420'
-  component:
-    system*
-      stacktrace*
-        frame*
-          module* (removed codegen marker)
-            u'com.example.api.entry.EntriesResource_$$_javassist<auto>'
-          function*
-            u'fn'
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined:2019_04_07/frame_ignores_javassist_3.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined:2019_04_07/frame_ignores_javassist_3.pysnap
deleted file mode 100644
index 74c6532bcb..0000000000
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined:2019_04_07/frame_ignores_javassist_3.pysnap
+++ /dev/null
@@ -1,26 +0,0 @@
----
-created: '2019-04-07T10:03:31.212042Z'
-creator: sentry
-source: tests/sentry/grouping/test_variants.py
----
-app:
-  hash: None
-  component:
-    app (stacktrace of system takes precedence)
-      stacktrace (ignored because hash matches system variant)
-        frame* (frame considered in-app because no frame is in-app)
-          filename* (removed javassist parts)
-            u'EntriesResource_$$_javassist<auto>.java'
-          function*
-            u'fn'
---------------------------------------------------------------------------
-system:
-  hash: '813856376ba744b15a01916ed2557344'
-  component:
-    system*
-      stacktrace*
-        frame*
-          filename* (removed javassist parts)
-            u'EntriesResource_$$_javassist<auto>.java'
-          function*
-            u'fn'
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined:2019_04_07/frame_ignores_module_if_page_url.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined:2019_04_07/frame_ignores_module_if_page_url.pysnap
deleted file mode 100644
index 85ea749a1c..0000000000
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined:2019_04_07/frame_ignores_module_if_page_url.pysnap
+++ /dev/null
@@ -1,29 +0,0 @@
----
-created: '2019-04-07T10:03:31.220242Z'
-creator: sentry
-source: tests/sentry/grouping/test_variants.py
----
-app:
-  hash: None
-  component:
-    app
-      stacktrace (ignored single frame stack)
-        frame (non app frame)
-          module*
-            u'foo/bar/baz'
-          filename (module takes precedence)
-            u'foo.py'
---------------------------------------------------------------------------
-fallback:
-  hash: 'd41d8cd98f00b204e9800998ecf8427e'
---------------------------------------------------------------------------
-system:
-  hash: None
-  component:
-    system
-      stacktrace (ignored single frame stack)
-        frame*
-          module*
-            u'foo/bar/baz'
-          filename (module takes precedence)
-            u'foo.py'
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined:2019_04_07/frame_ignores_module_if_page_url_2.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined:2019_04_07/frame_ignores_module_if_page_url_2.pysnap
deleted file mode 100644
index feab78e0f6..0000000000
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined:2019_04_07/frame_ignores_module_if_page_url_2.pysnap
+++ /dev/null
@@ -1,31 +0,0 @@
----
-created: '2019-04-07T10:03:31.228497Z'
-creator: sentry
-source: tests/sentry/grouping/test_variants.py
----
-app:
-  hash: None
-  component:
-    app
-      stacktrace (ignored single frame stack)
-        frame (non app frame)
-          module* (ignored module)
-            salt* (normalized generated module name)
-              '<module>'
-          filename (module takes precedence)
-            u'foo.py'
---------------------------------------------------------------------------
-fallback:
-  hash: 'd41d8cd98f00b204e9800998ecf8427e'
---------------------------------------------------------------------------
-system:
-  hash: None
-  component:
-    system
-      stacktrace (ignored single frame stack)
-        frame*
-          module* (ignored module)
-            salt* (normalized generated module name)
-              '<module>'
-          filename (module takes precedence)
-            u'foo.py'
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined:2019_04_07/frame_ignores_safari_native_code.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined:2019_04_07/frame_ignores_safari_native_code.pysnap
deleted file mode 100644
index 435d88bca7..0000000000
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined:2019_04_07/frame_ignores_safari_native_code.pysnap
+++ /dev/null
@@ -1,25 +0,0 @@
----
-created: '2019-04-07T10:03:31.237122Z'
-creator: sentry
-source: tests/sentry/grouping/test_variants.py
----
-app:
-  hash: None
-  component:
-    app
-      stacktrace
-        frame (frame considered in-app because no frame is in-app)
-          function (function name is used only if module or filename are available)
-            u'forEach'
---------------------------------------------------------------------------
-fallback:
-  hash: 'd41d8cd98f00b204e9800998ecf8427e'
---------------------------------------------------------------------------
-system:
-  hash: None
-  component:
-    system
-      stacktrace
-        frame (native code indicated by filename)
-          function (function name is used only if module or filename are available)
-            u'forEach'
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined:2019_04_07/frame_ignores_sun_java_generated_constructors.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined:2019_04_07/frame_ignores_sun_java_generated_constructors.pysnap
deleted file mode 100644
index cd78697c20..0000000000
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined:2019_04_07/frame_ignores_sun_java_generated_constructors.pysnap
+++ /dev/null
@@ -1,26 +0,0 @@
----
-created: '2019-04-07T10:03:31.245710Z'
-creator: sentry
-source: tests/sentry/grouping/test_variants.py
----
-app:
-  hash: None
-  component:
-    app (stacktrace of system takes precedence)
-      stacktrace (ignored because hash matches system variant)
-        frame* (frame considered in-app because no frame is in-app)
-          module* (removed codegen marker)
-            u'sun.reflect.GeneratedSerializationConstructorAccessor<auto>'
-          function*
-            u'invoke'
---------------------------------------------------------------------------
-system:
-  hash: '07d1a8e5728b3c4c7aa8b8273fd0e753'
-  component:
-    system*
-      stacktrace*
-        frame*
-          module* (removed codegen marker)
-            u'sun.reflect.GeneratedSerializationConstructorAccessor<auto>'
-          function*
-            u'invoke'
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined:2019_04_07/frame_ignores_sun_java_generated_constructors_2.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined:2019_04_07/frame_ignores_sun_java_generated_constructors_2.pysnap
deleted file mode 100644
index 9b1ad89b0e..0000000000
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined:2019_04_07/frame_ignores_sun_java_generated_constructors_2.pysnap
+++ /dev/null
@@ -1,26 +0,0 @@
----
-created: '2019-04-07T10:03:31.253982Z'
-creator: sentry
-source: tests/sentry/grouping/test_variants.py
----
-app:
-  hash: None
-  component:
-    app (stacktrace of system takes precedence)
-      stacktrace (ignored because hash matches system variant)
-        frame* (frame considered in-app because no frame is in-app)
-          module* (removed codegen marker)
-            u'sun.reflect.GeneratedConstructorAccessor<auto>'
-          function*
-            u'invoke'
---------------------------------------------------------------------------
-system:
-  hash: '09e0efcab18f545166318118ed4e0292'
-  component:
-    system*
-      stacktrace*
-        frame*
-          module* (removed codegen marker)
-            u'sun.reflect.GeneratedConstructorAccessor<auto>'
-          function*
-            u'invoke'
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined:2019_04_07/frame_ignores_sun_java_generated_methods.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined:2019_04_07/frame_ignores_sun_java_generated_methods.pysnap
deleted file mode 100644
index 1f90251067..0000000000
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined:2019_04_07/frame_ignores_sun_java_generated_methods.pysnap
+++ /dev/null
@@ -1,26 +0,0 @@
----
-created: '2019-04-07T10:03:31.262050Z'
-creator: sentry
-source: tests/sentry/grouping/test_variants.py
----
-app:
-  hash: None
-  component:
-    app (stacktrace of system takes precedence)
-      stacktrace (ignored because hash matches system variant)
-        frame* (frame considered in-app because no frame is in-app)
-          module* (removed reflection marker)
-            'sun.reflect.GeneratedMethodAccessor'
-          function*
-            u'invoke'
---------------------------------------------------------------------------
-system:
-  hash: 'df0a8233b314c542a0b98a4e8865c7b5'
-  component:
-    system*
-      stacktrace*
-        frame*
-          module* (removed reflection marker)
-            'sun.reflect.GeneratedMethodAccessor'
-          function*
-            u'invoke'
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined:2019_04_07/frame_sanitizes_block_functions.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined:2019_04_07/frame_sanitizes_block_functions.pysnap
deleted file mode 100644
index 1ea224ce97..0000000000
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined:2019_04_07/frame_sanitizes_block_functions.pysnap
+++ /dev/null
@@ -1,26 +0,0 @@
----
-created: '2019-04-07T10:03:31.270589Z'
-creator: sentry
-source: tests/sentry/grouping/test_variants.py
----
-app:
-  hash: None
-  component:
-    app (stacktrace of system takes precedence)
-      stacktrace (ignored because hash matches system variant)
-        frame* (frame considered in-app because no frame is in-app)
-          filename*
-            u'foo.py'
-          function* (ruby block)
-            'block'
---------------------------------------------------------------------------
-system:
-  hash: '27eed4125fc13d42163ddb0b8f357b48'
-  component:
-    system*
-      stacktrace*
-        frame*
-          filename*
-            u'foo.py'
-          function* (ruby block)
-            'block'
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined:2019_04_07/frame_sanitizes_versioned_filenames.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined:2019_04_07/frame_sanitizes_versioned_filenames.pysnap
deleted file mode 100644
index ff237c74cb..0000000000
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined:2019_04_07/frame_sanitizes_versioned_filenames.pysnap
+++ /dev/null
@@ -1,26 +0,0 @@
----
-created: '2019-04-07T10:03:31.287291Z'
-creator: sentry
-source: tests/sentry/grouping/test_variants.py
----
-app:
-  hash: None
-  component:
-    app (stacktrace of system takes precedence)
-      stacktrace (ignored because hash matches system variant)
-        frame* (frame considered in-app because no frame is in-app)
-          filename* (removed version)
-            u'/data/foo/releases/<version>/app/views/foo.html.erb'
-          context-line*
-            u'<% if @hotels.size > 0 %>'
---------------------------------------------------------------------------
-system:
-  hash: '00ffe2f3150414a00633fb5671a918f8'
-  component:
-    system*
-      stacktrace*
-        frame*
-          filename* (removed version)
-            u'/data/foo/releases/<version>/app/views/foo.html.erb'
-          context-line*
-            u'<% if @hotels.size > 0 %>'
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined:2019_04_07/frame_sanitizes_versioned_filenames_2.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined:2019_04_07/frame_sanitizes_versioned_filenames_2.pysnap
deleted file mode 100644
index a5220a6dfa..0000000000
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined:2019_04_07/frame_sanitizes_versioned_filenames_2.pysnap
+++ /dev/null
@@ -1,26 +0,0 @@
----
-created: '2019-04-07T10:03:31.295860Z'
-creator: sentry
-source: tests/sentry/grouping/test_variants.py
----
-app:
-  hash: None
-  component:
-    app (stacktrace of system takes precedence)
-      stacktrace (ignored because hash matches system variant)
-        frame* (frame considered in-app because no frame is in-app)
-          filename* (removed version)
-            u'<version>/app/views/foo.html.erb'
-          context-line*
-            u'<% if @hotels.size > 0 %>'
---------------------------------------------------------------------------
-system:
-  hash: 'babff59ccf75f6cade7c5805f6d9aa59'
-  component:
-    system*
-      stacktrace*
-        frame*
-          filename* (removed version)
-            u'<version>/app/views/foo.html.erb'
-          context-line*
-            u'<% if @hotels.size > 0 %>'
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined:2019_04_07/frame_skips_symbol_if_unknown.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined:2019_04_07/frame_skips_symbol_if_unknown.pysnap
deleted file mode 100644
index adf2d85171..0000000000
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined:2019_04_07/frame_skips_symbol_if_unknown.pysnap
+++ /dev/null
@@ -1,26 +0,0 @@
----
-created: '2019-04-07T10:03:31.304601Z'
-creator: sentry
-source: tests/sentry/grouping/test_variants.py
----
-app:
-  hash: None
-  component:
-    app (stacktrace of system takes precedence)
-      stacktrace (ignored because hash matches system variant)
-        frame* (frame considered in-app because no frame is in-app)
-          module*
-            u'libfoo'
-          function*
-            u'main'
---------------------------------------------------------------------------
-system:
-  hash: 'a972f399399f5566f39b14a7afdd24ff'
-  component:
-    system*
-      stacktrace*
-        frame*
-          module*
-            u'libfoo'
-          function*
-            u'main'
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined:2019_04_07/frame_uses_context_line_over_function.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined:2019_04_07/frame_uses_context_line_over_function.pysnap
deleted file mode 100644
index b00e29d393..0000000000
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined:2019_04_07/frame_uses_context_line_over_function.pysnap
+++ /dev/null
@@ -1,34 +0,0 @@
----
-created: '2019-04-07T10:03:31.312882Z'
-creator: sentry
-source: tests/sentry/grouping/test_variants.py
----
-app:
-  hash: None
-  component:
-    app (stacktrace of system takes precedence)
-      stacktrace (ignored because hash matches system variant)
-        frame* (frame considered in-app because no frame is in-app)
-          filename*
-            u'foo.py'
-          context-line*
-            u'foo bar'
-          function (function name is used only if module or filename are available)
-            u'bar'
-          lineno (line number is used only if module or filename are available)
-            1
---------------------------------------------------------------------------
-system:
-  hash: '60e0a667027bef0d0b7c4882891df7e8'
-  component:
-    system*
-      stacktrace*
-        frame*
-          filename*
-            u'foo.py'
-          context-line*
-            u'foo bar'
-          function (function name is used only if module or filename are available)
-            u'bar'
-          lineno (line number is used only if module or filename are available)
-            1
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined:2019_04_07/frame_uses_function_over_lineno.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined:2019_04_07/frame_uses_function_over_lineno.pysnap
deleted file mode 100644
index c0274b4bfb..0000000000
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined:2019_04_07/frame_uses_function_over_lineno.pysnap
+++ /dev/null
@@ -1,30 +0,0 @@
----
-created: '2019-04-07T10:03:31.321509Z'
-creator: sentry
-source: tests/sentry/grouping/test_variants.py
----
-app:
-  hash: None
-  component:
-    app (stacktrace of system takes precedence)
-      stacktrace (ignored because hash matches system variant)
-        frame* (frame considered in-app because no frame is in-app)
-          filename*
-            u'foo.py'
-          function*
-            u'bar'
-          lineno (function takes precedence)
-            1
---------------------------------------------------------------------------
-system:
-  hash: 'fb73cb54ced59b1c0c60d9bb40b7336b'
-  component:
-    system*
-      stacktrace*
-        frame*
-          filename*
-            u'foo.py'
-          function*
-            u'bar'
-          lineno (function takes precedence)
-            1
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined:2019_04_07/frame_uses_module_over_filename.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined:2019_04_07/frame_uses_module_over_filename.pysnap
deleted file mode 100644
index c7542f233b..0000000000
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined:2019_04_07/frame_uses_module_over_filename.pysnap
+++ /dev/null
@@ -1,30 +0,0 @@
----
-created: '2019-04-07T10:03:31.329732Z'
-creator: sentry
-source: tests/sentry/grouping/test_variants.py
----
-app:
-  hash: None
-  component:
-    app (stacktrace of system takes precedence)
-      stacktrace (ignored because hash matches system variant)
-        frame* (frame considered in-app because no frame is in-app)
-          module*
-            u'foo'
-          filename (module takes precedence)
-            u'foo.py'
-          lineno*
-            1
---------------------------------------------------------------------------
-system:
-  hash: '299a0be4a5a79e6a59fdd251b19d78bb'
-  component:
-    system*
-      stacktrace*
-        frame*
-          module*
-            u'foo'
-          filename (module takes precedence)
-            u'foo.py'
-          lineno*
-            1
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined:2019_04_07/frame_uses_symbol_instead_of_function.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined:2019_04_07/frame_uses_symbol_instead_of_function.pysnap
deleted file mode 100644
index 58d6b824a9..0000000000
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined:2019_04_07/frame_uses_symbol_instead_of_function.pysnap
+++ /dev/null
@@ -1,30 +0,0 @@
----
-created: '2019-04-07T10:03:31.338045Z'
-creator: sentry
-source: tests/sentry/grouping/test_variants.py
----
-app:
-  hash: None
-  component:
-    app (stacktrace of system takes precedence)
-      stacktrace (ignored because hash matches system variant)
-        frame* (frame considered in-app because no frame is in-app)
-          module*
-            u'libfoo'
-          symbol*
-            u'_main'
-          function (symbol takes precedence)
-            u'int main()'
---------------------------------------------------------------------------
-system:
-  hash: '01143b49f8875c22617bac5bb1aaf638'
-  component:
-    system*
-      stacktrace*
-        frame*
-          module*
-            u'libfoo'
-          symbol*
-            u'_main'
-          function (symbol takes precedence)
-            u'int main()'
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined:2019_04_07/frame_with_only_required_vars.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined:2019_04_07/frame_with_only_required_vars.pysnap
deleted file mode 100644
index 6972ef9b5d..0000000000
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined:2019_04_07/frame_with_only_required_vars.pysnap
+++ /dev/null
@@ -1,26 +0,0 @@
----
-created: '2019-04-07T10:03:31.346300Z'
-creator: sentry
-source: tests/sentry/grouping/test_variants.py
----
-app:
-  hash: None
-  component:
-    app (stacktrace of system takes precedence)
-      stacktrace (ignored because hash matches system variant)
-        frame* (frame considered in-app because no frame is in-app)
-          filename*
-            u'foo.py'
-          lineno*
-            1
---------------------------------------------------------------------------
-system:
-  hash: '19fcc04a0c59eaf564ee1a00c58574cc'
-  component:
-    system*
-      stacktrace*
-        frame*
-          filename*
-            u'foo.py'
-          lineno*
-            1
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined:2019_04_07/hpkp.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined:2019_04_07/hpkp.pysnap
deleted file mode 100644
index b16f40cba5..0000000000
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined:2019_04_07/hpkp.pysnap
+++ /dev/null
@@ -1,14 +0,0 @@
----
-created: '2019-04-07T10:03:31.354920Z'
-creator: sentry
-source: tests/sentry/grouping/test_variants.py
----
-default:
-  hash: '1e37a374cb33572622d02ff7a6237c44'
-  component:
-    default*
-      hpkp*
-        salt* (a static salt)
-          'hpkp'
-        hostname*
-          u'example.com'
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined:2019_04_07/java_chained.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined:2019_04_07/java_chained.pysnap
deleted file mode 100644
index 26ac21e527..0000000000
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined:2019_04_07/java_chained.pysnap
+++ /dev/null
@@ -1,991 +0,0 @@
----
-created: '2019-04-07T10:03:31.387173Z'
-creator: sentry
-source: tests/sentry/grouping/test_variants.py
----
-app:
-  hash: 'ca1e356d85bc74d82d4ae8f3f8bfbbf7'
-  component:
-    app*
-      chained-exception*
-        exception*
-          stacktrace*
-            frame* (frame considered in-app because no frame is in-app)
-              module*
-                u'io.sentry.example.Application'
-              filename (module takes precedence)
-                u'Application.java'
-              function*
-                u'main'
-              lineno (function takes precedence)
-                86
-            frame* (frame considered in-app because no frame is in-app)
-              module*
-                u'org.springframework.boot.SpringApplication'
-              filename (module takes precedence)
-                u'SpringApplication.java'
-              function*
-                u'run'
-              lineno (function takes precedence)
-                1151
-            frame* (frame considered in-app because no frame is in-app)
-              module*
-                u'org.springframework.boot.SpringApplication'
-              filename (module takes precedence)
-                u'SpringApplication.java'
-              function*
-                u'run'
-              lineno (function takes precedence)
-                1162
-            frame* (frame considered in-app because no frame is in-app)
-              module*
-                u'org.springframework.boot.SpringApplication'
-              filename (module takes precedence)
-                u'SpringApplication.java'
-              function*
-                u'run'
-              lineno (function takes precedence)
-                314
-            frame* (frame considered in-app because no frame is in-app)
-              module*
-                u'org.springframework.boot.SpringApplication'
-              filename (module takes precedence)
-                u'SpringApplication.java'
-              function*
-                u'refreshContext'
-              lineno (function takes precedence)
-                370
-            frame* (frame considered in-app because no frame is in-app)
-              module*
-                u'org.springframework.boot.SpringApplication'
-              filename (module takes precedence)
-                u'SpringApplication.java'
-              function*
-                u'refresh'
-              lineno (function takes precedence)
-                737
-            frame* (frame considered in-app because no frame is in-app)
-              module*
-                u'org.springframework.boot.context.embedded.EmbeddedWebApplicationContext'
-              filename (module takes precedence)
-                u'EmbeddedWebApplicationContext.java'
-              function*
-                u'refresh'
-              lineno (function takes precedence)
-                122
-            frame* (frame considered in-app because no frame is in-app)
-              module*
-                u'org.springframework.context.support.AbstractApplicationContext'
-              filename (module takes precedence)
-                u'AbstractApplicationContext.java'
-              function*
-                u'refresh'
-              lineno (function takes precedence)
-                545
-            frame* (frame considered in-app because no frame is in-app)
-              module*
-                u'org.springframework.boot.context.embedded.EmbeddedWebApplicationContext'
-              filename (module takes precedence)
-                u'EmbeddedWebApplicationContext.java'
-              function*
-                u'finishRefresh'
-              lineno (function takes precedence)
-                145
-            frame* (frame considered in-app because no frame is in-app)
-              module*
-                u'org.springframework.boot.context.embedded.EmbeddedWebApplicationContext'
-              filename (module takes precedence)
-                u'EmbeddedWebApplicationContext.java'
-              function*
-                u'startEmbeddedServletContainer'
-              lineno (function takes precedence)
-                297
-            frame* (frame considered in-app because no frame is in-app)
-              module*
-                u'org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer'
-              filename (module takes precedence)
-                u'TomcatEmbeddedServletContainer.java'
-              function*
-                u'start'
-              lineno (function takes precedence)
-                190
-            frame* (frame considered in-app because no frame is in-app)
-              module*
-                u'org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer'
-              filename (module takes precedence)
-                u'TomcatEmbeddedServletContainer.java'
-              function*
-                u'addPreviouslyRemovedConnectors'
-              lineno (function takes precedence)
-                247
-            frame* (frame considered in-app because no frame is in-app)
-              module*
-                u'org.apache.catalina.core.StandardService'
-              filename (module takes precedence)
-                u'StandardService.java'
-              function*
-                u'addConnector'
-              lineno (function takes precedence)
-                225
-            frame* (frame considered in-app because no frame is in-app)
-              module*
-                u'org.apache.catalina.util.LifecycleBase'
-              filename (module takes precedence)
-                u'LifecycleBase.java'
-              function*
-                u'start'
-              lineno (function takes precedence)
-                150
-            frame* (frame considered in-app because no frame is in-app)
-              module*
-                u'org.apache.catalina.connector.Connector'
-              filename (module takes precedence)
-                u'Connector.java'
-              function*
-                u'startInternal'
-              lineno (function takes precedence)
-                993
-            frame* (frame considered in-app because no frame is in-app)
-              module*
-                u'org.apache.coyote.AbstractProtocol'
-              filename (module takes precedence)
-                u'AbstractProtocol.java'
-              function*
-                u'start'
-              lineno (function takes precedence)
-                573
-            frame* (frame considered in-app because no frame is in-app)
-              module*
-                u'org.apache.tomcat.util.net.AbstractEndpoint'
-              filename (module takes precedence)
-                u'AbstractEndpoint.java'
-              function*
-                u'start'
-              lineno (function takes precedence)
-                980
-            frame* (frame considered in-app because no frame is in-app)
-              module*
-                u'org.apache.tomcat.util.net.NioEndpoint'
-              filename (module takes precedence)
-                u'NioEndpoint.java'
-              function*
-                u'bind'
-              lineno (function takes precedence)
-                210
-            frame* (frame considered in-app because no frame is in-app)
-              module*
-                u'sun.nio.ch.ServerSocketAdaptor'
-              filename (module takes precedence)
-                u'ServerSocketAdaptor.java'
-              function*
-                u'bind'
-              lineno (function takes precedence)
-                74
-            frame* (frame considered in-app because no frame is in-app)
-              module*
-                u'sun.nio.ch.ServerSocketChannelImpl'
-              filename (module takes precedence)
-                u'ServerSocketChannelImpl.java'
-              function*
-                u'bind'
-              lineno (function takes precedence)
-                223
-            frame* (frame considered in-app because no frame is in-app)
-              module*
-                u'sun.nio.ch.Net'
-              filename (module takes precedence)
-                u'Net.java'
-              function*
-                u'bind'
-              lineno (function takes precedence)
-                425
-            frame* (frame considered in-app because no frame is in-app)
-              module*
-                u'sun.nio.ch.Net'
-              filename (module takes precedence)
-                u'Net.java'
-              function*
-                u'bind'
-              lineno (function takes precedence)
-                433
-            frame* (frame considered in-app because no frame is in-app)
-              module*
-                u'sun.nio.ch.Net'
-              filename (module takes precedence)
-                u'Net.java'
-              function*
-                u'bind0'
-          type*
-            u'BindException'
-          value (stacktrace and type take precedence)
-            u'Address already in use'
-        exception*
-          stacktrace*
-            frame* (frame considered in-app because no frame is in-app)
-              module*
-                u'io.sentry.example.Application'
-              filename (module takes precedence)
-                u'Application.java'
-              function*
-                u'main'
-              lineno (function takes precedence)
-                86
-            frame* (frame considered in-app because no frame is in-app)
-              module*
-                u'org.springframework.boot.SpringApplication'
-              filename (module takes precedence)
-                u'SpringApplication.java'
-              function*
-                u'run'
-              lineno (function takes precedence)
-                1151
-            frame* (frame considered in-app because no frame is in-app)
-              module*
-                u'org.springframework.boot.SpringApplication'
-              filename (module takes precedence)
-                u'SpringApplication.java'
-              function*
-                u'run'
-              lineno (function takes precedence)
-                1162
-            frame* (frame considered in-app because no frame is in-app)
-              module*
-                u'org.springframework.boot.SpringApplication'
-              filename (module takes precedence)
-                u'SpringApplication.java'
-              function*
-                u'run'
-              lineno (function takes precedence)
-                314
-            frame* (frame considered in-app because no frame is in-app)
-              module*
-                u'org.springframework.boot.SpringApplication'
-              filename (module takes precedence)
-                u'SpringApplication.java'
-              function*
-                u'refreshContext'
-              lineno (function takes precedence)
-                370
-            frame* (frame considered in-app because no frame is in-app)
-              module*
-                u'org.springframework.boot.SpringApplication'
-              filename (module takes precedence)
-                u'SpringApplication.java'
-              function*
-                u'refresh'
-              lineno (function takes precedence)
-                737
-            frame* (frame considered in-app because no frame is in-app)
-              module*
-                u'org.springframework.boot.context.embedded.EmbeddedWebApplicationContext'
-              filename (module takes precedence)
-                u'EmbeddedWebApplicationContext.java'
-              function*
-                u'refresh'
-              lineno (function takes precedence)
-                122
-            frame* (frame considered in-app because no frame is in-app)
-              module*
-                u'org.springframework.context.support.AbstractApplicationContext'
-              filename (module takes precedence)
-                u'AbstractApplicationContext.java'
-              function*
-                u'refresh'
-              lineno (function takes precedence)
-                545
-            frame* (frame considered in-app because no frame is in-app)
-              module*
-                u'org.springframework.boot.context.embedded.EmbeddedWebApplicationContext'
-              filename (module takes precedence)
-                u'EmbeddedWebApplicationContext.java'
-              function*
-                u'finishRefresh'
-              lineno (function takes precedence)
-                145
-            frame* (frame considered in-app because no frame is in-app)
-              module*
-                u'org.springframework.boot.context.embedded.EmbeddedWebApplicationContext'
-              filename (module takes precedence)
-                u'EmbeddedWebApplicationContext.java'
-              function*
-                u'startEmbeddedServletContainer'
-              lineno (function takes precedence)
-                297
-            frame* (frame considered in-app because no frame is in-app)
-              module*
-                u'org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer'
-              filename (module takes precedence)
-                u'TomcatEmbeddedServletContainer.java'
-              function*
-                u'start'
-              lineno (function takes precedence)
-                190
-            frame* (frame considered in-app because no frame is in-app)
-              module*
-                u'org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer'
-              filename (module takes precedence)
-                u'TomcatEmbeddedServletContainer.java'
-              function*
-                u'addPreviouslyRemovedConnectors'
-              lineno (function takes precedence)
-                247
-            frame* (frame considered in-app because no frame is in-app)
-              module*
-                u'org.apache.catalina.core.StandardService'
-              filename (module takes precedence)
-                u'StandardService.java'
-              function*
-                u'addConnector'
-              lineno (function takes precedence)
-                225
-            frame* (frame considered in-app because no frame is in-app)
-              module*
-                u'org.apache.catalina.util.LifecycleBase'
-              filename (module takes precedence)
-                u'LifecycleBase.java'
-              function*
-                u'start'
-              lineno (function takes precedence)
-                150
-            frame* (frame considered in-app because no frame is in-app)
-              module*
-                u'org.apache.catalina.connector.Connector'
-              filename (module takes precedence)
-                u'Connector.java'
-              function*
-                u'startInternal'
-              lineno (function takes precedence)
-                1000
-          type*
-            u'LifecycleException'
-          value (stacktrace and type take precedence)
-            u'service.getName(): "Tomcat";  Protocol handler start failed'
-        exception (exception has no stacktrace)
-          stacktrace (less than 10% of frames are in-app)
-            frame*
-              module*
-                u'io.sentry.example.Application'
-              filename (module takes precedence)
-                u'Application.java'
-              function*
-                u'main'
-              lineno (function takes precedence)
-                86
-            frame (non app frame)
-              module*
-                u'org.springframework.boot.SpringApplication'
-              filename (module takes precedence)
-                u'SpringApplication.java'
-              function*
-                u'run'
-              lineno (function takes precedence)
-                1151
-            frame (non app frame)
-              module*
-                u'org.springframework.boot.SpringApplication'
-              filename (module takes precedence)
-                u'SpringApplication.java'
-              function*
-                u'run'
-              lineno (function takes precedence)
-                1162
-            frame (non app frame)
-              module*
-                u'org.springframework.boot.SpringApplication'
-              filename (module takes precedence)
-                u'SpringApplication.java'
-              function*
-                u'run'
-              lineno (function takes precedence)
-                314
-            frame (non app frame)
-              module*
-                u'org.springframework.boot.SpringApplication'
-              filename (module takes precedence)
-                u'SpringApplication.java'
-              function*
-                u'refreshContext'
-              lineno (function takes precedence)
-                370
-            frame (non app frame)
-              module*
-                u'org.springframework.boot.SpringApplication'
-              filename (module takes precedence)
-                u'SpringApplication.java'
-              function*
-                u'refresh'
-              lineno (function takes precedence)
-                737
-            frame (non app frame)
-              module*
-                u'org.springframework.boot.context.embedded.EmbeddedWebApplicationContext'
-              filename (module takes precedence)
-                u'EmbeddedWebApplicationContext.java'
-              function*
-                u'refresh'
-              lineno (function takes precedence)
-                122
-            frame (non app frame)
-              module*
-                u'org.springframework.context.support.AbstractApplicationContext'
-              filename (module takes precedence)
-                u'AbstractApplicationContext.java'
-              function*
-                u'refresh'
-              lineno (function takes precedence)
-                545
-            frame (non app frame)
-              module*
-                u'org.springframework.boot.context.embedded.EmbeddedWebApplicationContext'
-              filename (module takes precedence)
-                u'EmbeddedWebApplicationContext.java'
-              function*
-                u'finishRefresh'
-              lineno (function takes precedence)
-                145
-            frame (non app frame)
-              module*
-                u'org.springframework.boot.context.embedded.EmbeddedWebApplicationContext'
-              filename (module takes precedence)
-                u'EmbeddedWebApplicationContext.java'
-              function*
-                u'startEmbeddedServletContainer'
-              lineno (function takes precedence)
-                297
-            frame (non app frame)
-              module*
-                u'org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer'
-              filename (module takes precedence)
-                u'TomcatEmbeddedServletContainer.java'
-              function*
-                u'start'
-              lineno (function takes precedence)
-                190
-            frame (non app frame)
-              module*
-                u'org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer'
-              filename (module takes precedence)
-                u'TomcatEmbeddedServletContainer.java'
-              function*
-                u'addPreviouslyRemovedConnectors'
-              lineno (function takes precedence)
-                247
-            frame (non app frame)
-              module*
-                u'org.apache.catalina.core.StandardService'
-              filename (module takes precedence)
-                u'StandardService.java'
-              function*
-                u'addConnector'
-              lineno (function takes precedence)
-                225
-            frame (non app frame)
-              module*
-                u'org.apache.catalina.util.LifecycleBase'
-              filename (module takes precedence)
-                u'LifecycleBase.java'
-              function*
-                u'start'
-              lineno (function takes precedence)
-                167
-          type*
-            u'LifecycleException'
-          value*
-            u'Failed to start component [Connector[HTTP/1.1-8080]]'
---------------------------------------------------------------------------
-default:
-  hash: None
-  component:
-    default (exception of app takes precedence)
-      message (exception of app takes precedence)
-        u'Failed to start connector [Connector[HTTP/1.1-8080]]'
---------------------------------------------------------------------------
-system:
-  hash: '8924849495809d42431719c2b9ab65c8'
-  component:
-    system*
-      chained-exception*
-        exception*
-          stacktrace*
-            frame*
-              module*
-                u'io.sentry.example.Application'
-              filename (module takes precedence)
-                u'Application.java'
-              function*
-                u'main'
-              lineno (function takes precedence)
-                86
-            frame*
-              module*
-                u'org.springframework.boot.SpringApplication'
-              filename (module takes precedence)
-                u'SpringApplication.java'
-              function*
-                u'run'
-              lineno (function takes precedence)
-                1151
-            frame*
-              module*
-                u'org.springframework.boot.SpringApplication'
-              filename (module takes precedence)
-                u'SpringApplication.java'
-              function*
-                u'run'
-              lineno (function takes precedence)
-                1162
-            frame*
-              module*
-                u'org.springframework.boot.SpringApplication'
-              filename (module takes precedence)
-                u'SpringApplication.java'
-              function*
-                u'run'
-              lineno (function takes precedence)
-                314
-            frame*
-              module*
-                u'org.springframework.boot.SpringApplication'
-              filename (module takes precedence)
-                u'SpringApplication.java'
-              function*
-                u'refreshContext'
-              lineno (function takes precedence)
-                370
-            frame*
-              module*
-                u'org.springframework.boot.SpringApplication'
-              filename (module takes precedence)
-                u'SpringApplication.java'
-              function*
-                u'refresh'
-              lineno (function takes precedence)
-                737
-            frame*
-              module*
-                u'org.springframework.boot.context.embedded.EmbeddedWebApplicationContext'
-              filename (module takes precedence)
-                u'EmbeddedWebApplicationContext.java'
-              function*
-                u'refresh'
-              lineno (function takes precedence)
-                122
-            frame*
-              module*
-                u'org.springframework.context.support.AbstractApplicationContext'
-              filename (module takes precedence)
-                u'AbstractApplicationContext.java'
-              function*
-                u'refresh'
-              lineno (function takes precedence)
-                545
-            frame*
-              module*
-                u'org.springframework.boot.context.embedded.EmbeddedWebApplicationContext'
-              filename (module takes precedence)
-                u'EmbeddedWebApplicationContext.java'
-              function*
-                u'finishRefresh'
-              lineno (function takes precedence)
-                145
-            frame*
-              module*
-                u'org.springframework.boot.context.embedded.EmbeddedWebApplicationContext'
-              filename (module takes precedence)
-                u'EmbeddedWebApplicationContext.java'
-              function*
-                u'startEmbeddedServletContainer'
-              lineno (function takes precedence)
-                297
-            frame*
-              module*
-                u'org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer'
-              filename (module takes precedence)
-                u'TomcatEmbeddedServletContainer.java'
-              function*
-                u'start'
-              lineno (function takes precedence)
-                190
-            frame*
-              module*
-                u'org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer'
-              filename (module takes precedence)
-                u'TomcatEmbeddedServletContainer.java'
-              function*
-                u'addPreviouslyRemovedConnectors'
-              lineno (function takes precedence)
-                247
-            frame*
-              module*
-                u'org.apache.catalina.core.StandardService'
-              filename (module takes precedence)
-                u'StandardService.java'
-              function*
-                u'addConnector'
-              lineno (function takes precedence)
-                225
-            frame*
-              module*
-                u'org.apache.catalina.util.LifecycleBase'
-              filename (module takes precedence)
-                u'LifecycleBase.java'
-              function*
-                u'start'
-              lineno (function takes precedence)
-                150
-            frame*
-              module*
-                u'org.apache.catalina.connector.Connector'
-              filename (module takes precedence)
-                u'Connector.java'
-              function*
-                u'startInternal'
-              lineno (function takes precedence)
-                993
-            frame*
-              module*
-                u'org.apache.coyote.AbstractProtocol'
-              filename (module takes precedence)
-                u'AbstractProtocol.java'
-              function*
-                u'start'
-              lineno (function takes precedence)
-                573
-            frame*
-              module*
-                u'org.apache.tomcat.util.net.AbstractEndpoint'
-              filename (module takes precedence)
-                u'AbstractEndpoint.java'
-              function*
-                u'start'
-              lineno (function takes precedence)
-                980
-            frame*
-              module*
-                u'org.apache.tomcat.util.net.NioEndpoint'
-              filename (module takes precedence)
-                u'NioEndpoint.java'
-              function*
-                u'bind'
-              lineno (function takes precedence)
-                210
-            frame*
-              module*
-                u'sun.nio.ch.ServerSocketAdaptor'
-              filename (module takes precedence)
-                u'ServerSocketAdaptor.java'
-              function*
-                u'bind'
-              lineno (function takes precedence)
-                74
-            frame*
-              module*
-                u'sun.nio.ch.ServerSocketChannelImpl'
-              filename (module takes precedence)
-                u'ServerSocketChannelImpl.java'
-              function*
-                u'bind'
-              lineno (function takes precedence)
-                223
-            frame*
-              module*
-                u'sun.nio.ch.Net'
-              filename (module takes precedence)
-                u'Net.java'
-              function*
-                u'bind'
-              lineno (function takes precedence)
-                425
-            frame*
-              module*
-                u'sun.nio.ch.Net'
-              filename (module takes precedence)
-                u'Net.java'
-              function*
-                u'bind'
-              lineno (function takes precedence)
-                433
-            frame*
-              module*
-                u'sun.nio.ch.Net'
-              filename (module takes precedence)
-                u'Net.java'
-              function*
-                u'bind0'
-          type*
-            u'BindException'
-          value (stacktrace and type take precedence)
-            u'Address already in use'
-        exception*
-          stacktrace*
-            frame*
-              module*
-                u'io.sentry.example.Application'
-              filename (module takes precedence)
-                u'Application.java'
-              function*
-                u'main'
-              lineno (function takes precedence)
-                86
-            frame*
-              module*
-                u'org.springframework.boot.SpringApplication'
-              filename (module takes precedence)
-                u'SpringApplication.java'
-              function*
-                u'run'
-              lineno (function takes precedence)
-                1151
-            frame*
-              module*
-                u'org.springframework.boot.SpringApplication'
-              filename (module takes precedence)
-                u'SpringApplication.java'
-              function*
-                u'run'
-              lineno (function takes precedence)
-                1162
-            frame*
-              module*
-                u'org.springframework.boot.SpringApplication'
-              filename (module takes precedence)
-                u'SpringApplication.java'
-              function*
-                u'run'
-              lineno (function takes precedence)
-                314
-            frame*
-              module*
-                u'org.springframework.boot.SpringApplication'
-              filename (module takes precedence)
-                u'SpringApplication.java'
-              function*
-                u'refreshContext'
-              lineno (function takes precedence)
-                370
-            frame*
-              module*
-                u'org.springframework.boot.SpringApplication'
-              filename (module takes precedence)
-                u'SpringApplication.java'
-              function*
-                u'refresh'
-              lineno (function takes precedence)
-                737
-            frame*
-              module*
-                u'org.springframework.boot.context.embedded.EmbeddedWebApplicationContext'
-              filename (module takes precedence)
-                u'EmbeddedWebApplicationContext.java'
-              function*
-                u'refresh'
-              lineno (function takes precedence)
-                122
-            frame*
-              module*
-                u'org.springframework.context.support.AbstractApplicationContext'
-              filename (module takes precedence)
-                u'AbstractApplicationContext.java'
-              function*
-                u'refresh'
-              lineno (function takes precedence)
-                545
-            frame*
-              module*
-                u'org.springframework.boot.context.embedded.EmbeddedWebApplicationContext'
-              filename (module takes precedence)
-                u'EmbeddedWebApplicationContext.java'
-              function*
-                u'finishRefresh'
-              lineno (function takes precedence)
-                145
-            frame*
-              module*
-                u'org.springframework.boot.context.embedded.EmbeddedWebApplicationContext'
-              filename (module takes precedence)
-                u'EmbeddedWebApplicationContext.java'
-              function*
-                u'startEmbeddedServletContainer'
-              lineno (function takes precedence)
-                297
-            frame*
-              module*
-                u'org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer'
-              filename (module takes precedence)
-                u'TomcatEmbeddedServletContainer.java'
-              function*
-                u'start'
-              lineno (function takes precedence)
-                190
-            frame*
-              module*
-                u'org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer'
-              filename (module takes precedence)
-                u'TomcatEmbeddedServletContainer.java'
-              function*
-                u'addPreviouslyRemovedConnectors'
-              lineno (function takes precedence)
-                247
-            frame*
-              module*
-                u'org.apache.catalina.core.StandardService'
-              filename (module takes precedence)
-                u'StandardService.java'
-              function*
-                u'addConnector'
-              lineno (function takes precedence)
-                225
-            frame*
-              module*
-                u'org.apache.catalina.util.LifecycleBase'
-              filename (module takes precedence)
-                u'LifecycleBase.java'
-              function*
-                u'start'
-              lineno (function takes precedence)
-                150
-            frame*
-              module*
-                u'org.apache.catalina.connector.Connector'
-              filename (module takes precedence)
-                u'Connector.java'
-              function*
-                u'startInternal'
-              lineno (function takes precedence)
-                1000
-          type*
-            u'LifecycleException'
-          value (stacktrace and type take precedence)
-            u'service.getName(): "Tomcat";  Protocol handler start failed'
-        exception*
-          stacktrace*
-            frame*
-              module*
-                u'io.sentry.example.Application'
-              filename (module takes precedence)
-                u'Application.java'
-              function*
-                u'main'
-              lineno (function takes precedence)
-                86
-            frame*
-              module*
-                u'org.springframework.boot.SpringApplication'
-              filename (module takes precedence)
-                u'SpringApplication.java'
-              function*
-                u'run'
-              lineno (function takes precedence)
-                1151
-            frame*
-              module*
-                u'org.springframework.boot.SpringApplication'
-              filename (module takes precedence)
-                u'SpringApplication.java'
-              function*
-                u'run'
-              lineno (function takes precedence)
-                1162
-            frame*
-              module*
-                u'org.springframework.boot.SpringApplication'
-              filename (module takes precedence)
-                u'SpringApplication.java'
-              function*
-                u'run'
-              lineno (function takes precedence)
-                314
-            frame*
-              module*
-                u'org.springframework.boot.SpringApplication'
-              filename (module takes precedence)
-                u'SpringApplication.java'
-              function*
-                u'refreshContext'
-              lineno (function takes precedence)
-                370
-            frame*
-              module*
-                u'org.springframework.boot.SpringApplication'
-              filename (module takes precedence)
-                u'SpringApplication.java'
-              function*
-                u'refresh'
-              lineno (function takes precedence)
-                737
-            frame*
-              module*
-                u'org.springframework.boot.context.embedded.EmbeddedWebApplicationContext'
-              filename (module takes precedence)
-                u'EmbeddedWebApplicationContext.java'
-              function*
-                u'refresh'
-              lineno (function takes precedence)
-                122
-            frame*
-              module*
-                u'org.springframework.context.support.AbstractApplicationContext'
-              filename (module takes precedence)
-                u'AbstractApplicationContext.java'
-              function*
-                u'refresh'
-              lineno (function takes precedence)
-                545
-            frame*
-              module*
-                u'org.springframework.boot.context.embedded.EmbeddedWebApplicationContext'
-              filename (module takes precedence)
-                u'EmbeddedWebApplicationContext.java'
-              function*
-                u'finishRefresh'
-              lineno (function takes precedence)
-                145
-            frame*
-              module*
-                u'org.springframework.boot.context.embedded.EmbeddedWebApplicationContext'
-              filename (module takes precedence)
-                u'EmbeddedWebApplicationContext.java'
-              function*
-                u'startEmbeddedServletContainer'
-              lineno (function takes precedence)
-                297
-            frame*
-              module*
-                u'org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer'
-              filename (module takes precedence)
-                u'TomcatEmbeddedServletContainer.java'
-              function*
-                u'start'
-              lineno (function takes precedence)
-                190
-            frame*
-              module*
-                u'org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer'
-              filename (module takes precedence)
-                u'TomcatEmbeddedServletContainer.java'
-              function*
-                u'addPreviouslyRemovedConnectors'
-              lineno (function takes precedence)
-                247
-            frame*
-              module*
-                u'org.apache.catalina.core.StandardService'
-              filename (module takes precedence)
-                u'StandardService.java'
-              function*
-                u'addConnector'
-              lineno (function takes precedence)
-                225
-            frame*
-              module*
-                u'org.apache.catalina.util.LifecycleBase'
-              filename (module takes precedence)
-                u'LifecycleBase.java'
-              function*
-                u'start'
-              lineno (function takes precedence)
-                167
-          type*
-            u'LifecycleException'
-          value (stacktrace and type take precedence)
-            u'Failed to start component [Connector[HTTP/1.1-8080]]'
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined:2019_04_07/java_minimal.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined:2019_04_07/java_minimal.pysnap
deleted file mode 100644
index 31d75ee020..0000000000
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined:2019_04_07/java_minimal.pysnap
+++ /dev/null
@@ -1,1019 +0,0 @@
----
-created: '2019-04-07T10:03:31.415919Z'
-creator: sentry
-source: tests/sentry/grouping/test_variants.py
----
-app:
-  hash: None
-  component:
-    app (exception of system takes precedence)
-      exception (ignored because hash matches system variant)
-        stacktrace*
-          frame* (frame considered in-app because no frame is in-app)
-            module*
-              u'java.lang.Thread'
-            filename (module takes precedence)
-              u'Thread.java'
-            function*
-              u'run'
-            lineno (function takes precedence)
-              844
-          frame* (frame considered in-app because no frame is in-app)
-            module*
-              u'org.apache.tomcat.util.threads.TaskThread$WrappingRunnable'
-            filename (module takes precedence)
-              u'TaskThread.java'
-            function*
-              u'run'
-            lineno (function takes precedence)
-              61
-          frame* (frame considered in-app because no frame is in-app)
-            module*
-              u'java.util.concurrent.ThreadPoolExecutor$Worker'
-            filename (module takes precedence)
-              u'ThreadPoolExecutor.java'
-            function*
-              u'run'
-            lineno (function takes precedence)
-              641
-          frame* (frame considered in-app because no frame is in-app)
-            module*
-              u'java.util.concurrent.ThreadPoolExecutor'
-            filename (module takes precedence)
-              u'ThreadPoolExecutor.java'
-            function*
-              u'runWorker'
-            lineno (function takes precedence)
-              1167
-          frame* (frame considered in-app because no frame is in-app)
-            module*
-              u'org.apache.tomcat.util.net.SocketProcessorBase'
-            filename (module takes precedence)
-              u'SocketProcessorBase.java'
-            function*
-              u'run'
-            lineno (function takes precedence)
-              49
-          frame* (frame considered in-app because no frame is in-app)
-            module*
-              u'org.apache.tomcat.util.net.NioEndpoint$SocketProcessor'
-            filename (module takes precedence)
-              u'NioEndpoint.java'
-            function*
-              u'doRun'
-            lineno (function takes precedence)
-              1434
-          frame* (frame considered in-app because no frame is in-app)
-            module*
-              u'org.apache.coyote.AbstractProtocol$ConnectionHandler'
-            filename (module takes precedence)
-              u'AbstractProtocol.java'
-            function*
-              u'process'
-            lineno (function takes precedence)
-              798
-          frame* (frame considered in-app because no frame is in-app)
-            module*
-              u'org.apache.coyote.AbstractProcessorLight'
-            filename (module takes precedence)
-              u'AbstractProcessorLight.java'
-            function*
-              u'process'
-            lineno (function takes precedence)
-              66
-          frame* (frame considered in-app because no frame is in-app)
-            module*
-              u'org.apache.coyote.http11.Http11Processor'
-            filename (module takes precedence)
-              u'Http11Processor.java'
-            function*
-              u'service'
-            lineno (function takes precedence)
-              783
-          frame* (frame considered in-app because no frame is in-app)
-            module*
-              u'org.apache.catalina.connector.CoyoteAdapter'
-            filename (module takes precedence)
-              u'CoyoteAdapter.java'
-            function*
-              u'service'
-            lineno (function takes precedence)
-              349
-          frame* (frame considered in-app because no frame is in-app)
-            module*
-              u'org.apache.catalina.core.StandardEngineValve'
-            filename (module takes precedence)
-              u'StandardEngineValve.java'
-            function*
-              u'invoke'
-            lineno (function takes precedence)
-              87
-          frame* (frame considered in-app because no frame is in-app)
-            module*
-              u'org.apache.catalina.valves.ErrorReportValve'
-            filename (module takes precedence)
-              u'ErrorReportValve.java'
-            function*
-              u'invoke'
-            lineno (function takes precedence)
-              79
-          frame* (frame considered in-app because no frame is in-app)
-            module*
-              u'org.apache.catalina.core.StandardHostValve'
-            filename (module takes precedence)
-              u'StandardHostValve.java'
-            function*
-              u'invoke'
-            lineno (function takes precedence)
-              140
-          frame* (frame considered in-app because no frame is in-app)
-            module*
-              u'org.apache.catalina.authenticator.AuthenticatorBase'
-            filename (module takes precedence)
-              u'AuthenticatorBase.java'
-            function*
-              u'invoke'
-            lineno (function takes precedence)
-              474
-          frame* (frame considered in-app because no frame is in-app)
-            module*
-              u'org.apache.catalina.core.StandardContextValve'
-            filename (module takes precedence)
-              u'StandardContextValve.java'
-            function*
-              u'invoke'
-            lineno (function takes precedence)
-              96
-          frame* (frame considered in-app because no frame is in-app)
-            module*
-              u'org.apache.catalina.core.StandardWrapperValve'
-            filename (module takes precedence)
-              u'StandardWrapperValve.java'
-            function*
-              u'invoke'
-            lineno (function takes precedence)
-              198
-          frame* (frame considered in-app because no frame is in-app)
-            module*
-              u'org.apache.catalina.core.ApplicationFilterChain'
-            filename (module takes precedence)
-              u'ApplicationFilterChain.java'
-            function*
-              u'doFilter'
-            lineno (function takes precedence)
-              165
-          frame* (frame considered in-app because no frame is in-app)
-            module*
-              u'org.apache.catalina.core.ApplicationFilterChain'
-            filename (module takes precedence)
-              u'ApplicationFilterChain.java'
-            function*
-              u'internalDoFilter'
-            lineno (function takes precedence)
-              192
-          frame* (frame considered in-app because no frame is in-app)
-            module*
-              u'org.springframework.web.filter.OncePerRequestFilter'
-            filename (module takes precedence)
-              u'OncePerRequestFilter.java'
-            function*
-              u'doFilter'
-            lineno (function takes precedence)
-              107
-          frame* (frame considered in-app because no frame is in-app)
-            module*
-              u'org.springframework.web.filter.CharacterEncodingFilter'
-            filename (module takes precedence)
-              u'CharacterEncodingFilter.java'
-            function*
-              u'doFilterInternal'
-            lineno (function takes precedence)
-              197
-          frame* (frame considered in-app because no frame is in-app)
-            module*
-              u'org.apache.catalina.core.ApplicationFilterChain'
-            filename (module takes precedence)
-              u'ApplicationFilterChain.java'
-            function*
-              u'doFilter'
-            lineno (function takes precedence)
-              165
-          frame* (frame considered in-app because no frame is in-app)
-            module*
-              u'org.apache.catalina.core.ApplicationFilterChain'
-            filename (module takes precedence)
-              u'ApplicationFilterChain.java'
-            function*
-              u'internalDoFilter'
-            lineno (function takes precedence)
-              192
-          frame* (frame considered in-app because no frame is in-app)
-            module*
-              u'org.springframework.web.filter.OncePerRequestFilter'
-            filename (module takes precedence)
-              u'OncePerRequestFilter.java'
-            function*
-              u'doFilter'
-            lineno (function takes precedence)
-              107
-          frame* (frame considered in-app because no frame is in-app)
-            module*
-              u'org.springframework.web.filter.HiddenHttpMethodFilter'
-            filename (module takes precedence)
-              u'HiddenHttpMethodFilter.java'
-            function*
-              u'doFilterInternal'
-            lineno (function takes precedence)
-              81
-          frame* (frame considered in-app because no frame is in-app)
-            module*
-              u'org.apache.catalina.core.ApplicationFilterChain'
-            filename (module takes precedence)
-              u'ApplicationFilterChain.java'
-            function*
-              u'doFilter'
-            lineno (function takes precedence)
-              165
-          frame* (frame considered in-app because no frame is in-app)
-            module*
-              u'org.apache.catalina.core.ApplicationFilterChain'
-            filename (module takes precedence)
-              u'ApplicationFilterChain.java'
-            function*
-              u'internalDoFilter'
-            lineno (function takes precedence)
-              192
-          frame* (frame considered in-app because no frame is in-app)
-            module*
-              u'org.springframework.web.filter.OncePerRequestFilter'
-            filename (module takes precedence)
-              u'OncePerRequestFilter.java'
-            function*
-              u'doFilter'
-            lineno (function takes precedence)
-              107
-          frame* (frame considered in-app because no frame is in-app)
-            module*
-              u'org.springframework.web.filter.HttpPutFormContentFilter'
-            filename (module takes precedence)
-              u'HttpPutFormContentFilter.java'
-            function*
-              u'doFilterInternal'
-            lineno (function takes precedence)
-              105
-          frame* (frame considered in-app because no frame is in-app)
-            module*
-              u'org.apache.catalina.core.ApplicationFilterChain'
-            filename (module takes precedence)
-              u'ApplicationFilterChain.java'
-            function*
-              u'doFilter'
-            lineno (function takes precedence)
-              165
-          frame* (frame considered in-app because no frame is in-app)
-            module*
-              u'org.apache.catalina.core.ApplicationFilterChain'
-            filename (module takes precedence)
-              u'ApplicationFilterChain.java'
-            function*
-              u'internalDoFilter'
-            lineno (function takes precedence)
-              192
-          frame* (frame considered in-app because no frame is in-app)
-            module*
-              u'org.springframework.web.filter.OncePerRequestFilter'
-            filename (module takes precedence)
-              u'OncePerRequestFilter.java'
-            function*
-              u'doFilter'
-            lineno (function takes precedence)
-              107
-          frame* (frame considered in-app because no frame is in-app)
-            module*
-              u'org.springframework.web.filter.RequestContextFilter'
-            filename (module takes precedence)
-              u'RequestContextFilter.java'
-            function*
-              u'doFilterInternal'
-            lineno (function takes precedence)
-              99
-          frame* (frame considered in-app because no frame is in-app)
-            module*
-              u'org.apache.catalina.core.ApplicationFilterChain'
-            filename (module takes precedence)
-              u'ApplicationFilterChain.java'
-            function*
-              u'doFilter'
-            lineno (function takes precedence)
-              165
-          frame* (frame considered in-app because no frame is in-app)
-            module*
-              u'org.apache.catalina.core.ApplicationFilterChain'
-            filename (module takes precedence)
-              u'ApplicationFilterChain.java'
-            function*
-              u'internalDoFilter'
-            lineno (function takes precedence)
-              192
-          frame* (frame considered in-app because no frame is in-app)
-            module*
-              u'org.apache.tomcat.websocket.server.WsFilter'
-            filename (module takes precedence)
-              u'WsFilter.java'
-            function*
-              u'doFilter'
-            lineno (function takes precedence)
-              52
-          frame* (frame considered in-app because no frame is in-app)
-            module*
-              u'org.apache.catalina.core.ApplicationFilterChain'
-            filename (module takes precedence)
-              u'ApplicationFilterChain.java'
-            function*
-              u'doFilter'
-            lineno (function takes precedence)
-              165
-          frame* (frame considered in-app because no frame is in-app)
-            module*
-              u'org.apache.catalina.core.ApplicationFilterChain'
-            filename (module takes precedence)
-              u'ApplicationFilterChain.java'
-            function*
-              u'internalDoFilter'
-            lineno (function takes precedence)
-              230
-          frame* (frame considered in-app because no frame is in-app)
-            module*
-              u'javax.servlet.http.HttpServlet'
-            filename (module takes precedence)
-              u'HttpServlet.java'
-            function*
-              u'service'
-            lineno (function takes precedence)
-              729
-          frame* (frame considered in-app because no frame is in-app)
-            module*
-              u'org.springframework.web.servlet.FrameworkServlet'
-            filename (module takes precedence)
-              u'FrameworkServlet.java'
-            function*
-              u'service'
-            lineno (function takes precedence)
-              846
-          frame* (frame considered in-app because no frame is in-app)
-            module*
-              u'javax.servlet.http.HttpServlet'
-            filename (module takes precedence)
-              u'HttpServlet.java'
-            function*
-              u'service'
-            lineno (function takes precedence)
-              622
-          frame* (frame considered in-app because no frame is in-app)
-            module*
-              u'org.springframework.web.servlet.FrameworkServlet'
-            filename (module takes precedence)
-              u'FrameworkServlet.java'
-            function*
-              u'doGet'
-            lineno (function takes precedence)
-              861
-          frame* (frame considered in-app because no frame is in-app)
-            module*
-              u'org.springframework.web.servlet.FrameworkServlet'
-            filename (module takes precedence)
-              u'FrameworkServlet.java'
-            function*
-              u'processRequest'
-            lineno (function takes precedence)
-              970
-          frame* (frame considered in-app because no frame is in-app)
-            module*
-              u'org.springframework.web.servlet.DispatcherServlet'
-            filename (module takes precedence)
-              u'DispatcherServlet.java'
-            function*
-              u'doService'
-            lineno (function takes precedence)
-              897
-          frame* (frame considered in-app because no frame is in-app)
-            module*
-              u'org.springframework.web.servlet.DispatcherServlet'
-            filename (module takes precedence)
-              u'DispatcherServlet.java'
-            function*
-              u'doDispatch'
-            lineno (function takes precedence)
-              963
-          frame* (frame considered in-app because no frame is in-app)
-            module*
-              u'org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter'
-            filename (module takes precedence)
-              u'AbstractHandlerMethodAdapter.java'
-            function*
-              u'handle'
-            lineno (function takes precedence)
-              85
-          frame* (frame considered in-app because no frame is in-app)
-            module*
-              u'org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter'
-            filename (module takes precedence)
-              u'RequestMappingHandlerAdapter.java'
-            function*
-              u'handleInternal'
-            lineno (function takes precedence)
-              738
-          frame* (frame considered in-app because no frame is in-app)
-            module*
-              u'org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter'
-            filename (module takes precedence)
-              u'RequestMappingHandlerAdapter.java'
-            function*
-              u'invokeHandlerMethod'
-            lineno (function takes precedence)
-              827
-          frame* (frame considered in-app because no frame is in-app)
-            module*
-              u'org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod'
-            filename (module takes precedence)
-              u'ServletInvocableHandlerMethod.java'
-            function*
-              u'invokeAndHandle'
-            lineno (function takes precedence)
-              116
-          frame* (frame considered in-app because no frame is in-app)
-            module*
-              u'org.springframework.web.method.support.InvocableHandlerMethod'
-            filename (module takes precedence)
-              u'InvocableHandlerMethod.java'
-            function*
-              u'invokeForRequest'
-            lineno (function takes precedence)
-              133
-          frame* (frame considered in-app because no frame is in-app)
-            module*
-              u'org.springframework.web.method.support.InvocableHandlerMethod'
-            filename (module takes precedence)
-              u'InvocableHandlerMethod.java'
-            function*
-              u'doInvoke'
-            lineno (function takes precedence)
-              205
-          frame* (frame considered in-app because no frame is in-app)
-            module*
-              u'java.lang.reflect.Method'
-            filename (module takes precedence)
-              u'Method.java'
-            function*
-              u'invoke'
-            lineno (function takes precedence)
-              564
-          frame* (frame considered in-app because no frame is in-app)
-            module*
-              u'jdk.internal.reflect.DelegatingMethodAccessorImpl'
-            filename (module takes precedence)
-              u'DelegatingMethodAccessorImpl.java'
-            function*
-              u'invoke'
-            lineno (function takes precedence)
-              43
-          frame* (frame considered in-app because no frame is in-app)
-            module*
-              u'jdk.internal.reflect.NativeMethodAccessorImpl'
-            filename (module takes precedence)
-              u'NativeMethodAccessorImpl.java'
-            function*
-              u'invoke'
-            lineno (function takes precedence)
-              62
-          frame* (frame considered in-app because no frame is in-app)
-            module*
-              u'jdk.internal.reflect.NativeMethodAccessorImpl'
-            filename (module takes precedence)
-              u'NativeMethodAccessorImpl.java'
-            function*
-              u'invoke0'
-          frame* (frame considered in-app because no frame is in-app)
-            module*
-              u'io.sentry.example.Application'
-            filename (module takes precedence)
-              u'Application.java'
-            function*
-              u'home'
-            lineno (function takes precedence)
-              30
-        type*
-          u'ArithmeticException'
-        value (stacktrace and type take precedence)
-          u'/ by zero'
---------------------------------------------------------------------------
-default:
-  hash: None
-  component:
-    default (exception of system takes precedence)
-      message (exception of system takes precedence)
-        u'Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.ArithmeticException: / by zero] with root cause'
---------------------------------------------------------------------------
-system:
-  hash: 'ec87dd10e4f7512ecccb4a068c5774ae'
-  component:
-    system*
-      exception*
-        stacktrace*
-          frame*
-            module*
-              u'java.lang.Thread'
-            filename (module takes precedence)
-              u'Thread.java'
-            function*
-              u'run'
-            lineno (function takes precedence)
-              844
-          frame*
-            module*
-              u'org.apache.tomcat.util.threads.TaskThread$WrappingRunnable'
-            filename (module takes precedence)
-              u'TaskThread.java'
-            function*
-              u'run'
-            lineno (function takes precedence)
-              61
-          frame*
-            module*
-              u'java.util.concurrent.ThreadPoolExecutor$Worker'
-            filename (module takes precedence)
-              u'ThreadPoolExecutor.java'
-            function*
-              u'run'
-            lineno (function takes precedence)
-              641
-          frame*
-            module*
-              u'java.util.concurrent.ThreadPoolExecutor'
-            filename (module takes precedence)
-              u'ThreadPoolExecutor.java'
-            function*
-              u'runWorker'
-            lineno (function takes precedence)
-              1167
-          frame*
-            module*
-              u'org.apache.tomcat.util.net.SocketProcessorBase'
-            filename (module takes precedence)
-              u'SocketProcessorBase.java'
-            function*
-              u'run'
-            lineno (function takes precedence)
-              49
-          frame*
-            module*
-              u'org.apache.tomcat.util.net.NioEndpoint$SocketProcessor'
-            filename (module takes precedence)
-              u'NioEndpoint.java'
-            function*
-              u'doRun'
-            lineno (function takes precedence)
-              1434
-          frame*
-            module*
-              u'org.apache.coyote.AbstractProtocol$ConnectionHandler'
-            filename (module takes precedence)
-              u'AbstractProtocol.java'
-            function*
-              u'process'
-            lineno (function takes precedence)
-              798
-          frame*
-            module*
-              u'org.apache.coyote.AbstractProcessorLight'
-            filename (module takes precedence)
-              u'AbstractProcessorLight.java'
-            function*
-              u'process'
-            lineno (function takes precedence)
-              66
-          frame*
-            module*
-              u'org.apache.coyote.http11.Http11Processor'
-            filename (module takes precedence)
-              u'Http11Processor.java'
-            function*
-              u'service'
-            lineno (function takes precedence)
-              783
-          frame*
-            module*
-              u'org.apache.catalina.connector.CoyoteAdapter'
-            filename (module takes precedence)
-              u'CoyoteAdapter.java'
-            function*
-              u'service'
-            lineno (function takes precedence)
-              349
-          frame*
-            module*
-              u'org.apache.catalina.core.StandardEngineValve'
-            filename (module takes precedence)
-              u'StandardEngineValve.java'
-            function*
-              u'invoke'
-            lineno (function takes precedence)
-              87
-          frame*
-            module*
-              u'org.apache.catalina.valves.ErrorReportValve'
-            filename (module takes precedence)
-              u'ErrorReportValve.java'
-            function*
-              u'invoke'
-            lineno (function takes precedence)
-              79
-          frame*
-            module*
-              u'org.apache.catalina.core.StandardHostValve'
-            filename (module takes precedence)
-              u'StandardHostValve.java'
-            function*
-              u'invoke'
-            lineno (function takes precedence)
-              140
-          frame*
-            module*
-              u'org.apache.catalina.authenticator.AuthenticatorBase'
-            filename (module takes precedence)
-              u'AuthenticatorBase.java'
-            function*
-              u'invoke'
-            lineno (function takes precedence)
-              474
-          frame*
-            module*
-              u'org.apache.catalina.core.StandardContextValve'
-            filename (module takes precedence)
-              u'StandardContextValve.java'
-            function*
-              u'invoke'
-            lineno (function takes precedence)
-              96
-          frame*
-            module*
-              u'org.apache.catalina.core.StandardWrapperValve'
-            filename (module takes precedence)
-              u'StandardWrapperValve.java'
-            function*
-              u'invoke'
-            lineno (function takes precedence)
-              198
-          frame*
-            module*
-              u'org.apache.catalina.core.ApplicationFilterChain'
-            filename (module takes precedence)
-              u'ApplicationFilterChain.java'
-            function*
-              u'doFilter'
-            lineno (function takes precedence)
-              165
-          frame*
-            module*
-              u'org.apache.catalina.core.ApplicationFilterChain'
-            filename (module takes precedence)
-              u'ApplicationFilterChain.java'
-            function*
-              u'internalDoFilter'
-            lineno (function takes precedence)
-              192
-          frame*
-            module*
-              u'org.springframework.web.filter.OncePerRequestFilter'
-            filename (module takes precedence)
-              u'OncePerRequestFilter.java'
-            function*
-              u'doFilter'
-            lineno (function takes precedence)
-              107
-          frame*
-            module*
-              u'org.springframework.web.filter.CharacterEncodingFilter'
-            filename (module takes precedence)
-              u'CharacterEncodingFilter.java'
-            function*
-              u'doFilterInternal'
-            lineno (function takes precedence)
-              197
-          frame*
-            module*
-              u'org.apache.catalina.core.ApplicationFilterChain'
-            filename (module takes precedence)
-              u'ApplicationFilterChain.java'
-            function*
-              u'doFilter'
-            lineno (function takes precedence)
-              165
-          frame*
-            module*
-              u'org.apache.catalina.core.ApplicationFilterChain'
-            filename (module takes precedence)
-              u'ApplicationFilterChain.java'
-            function*
-              u'internalDoFilter'
-            lineno (function takes precedence)
-              192
-          frame*
-            module*
-              u'org.springframework.web.filter.OncePerRequestFilter'
-            filename (module takes precedence)
-              u'OncePerRequestFilter.java'
-            function*
-              u'doFilter'
-            lineno (function takes precedence)
-              107
-          frame*
-            module*
-              u'org.springframework.web.filter.HiddenHttpMethodFilter'
-            filename (module takes precedence)
-              u'HiddenHttpMethodFilter.java'
-            function*
-              u'doFilterInternal'
-            lineno (function takes precedence)
-              81
-          frame*
-            module*
-              u'org.apache.catalina.core.ApplicationFilterChain'
-            filename (module takes precedence)
-              u'ApplicationFilterChain.java'
-            function*
-              u'doFilter'
-            lineno (function takes precedence)
-              165
-          frame*
-            module*
-              u'org.apache.catalina.core.ApplicationFilterChain'
-            filename (module takes precedence)
-              u'ApplicationFilterChain.java'
-            function*
-              u'internalDoFilter'
-            lineno (function takes precedence)
-              192
-          frame*
-            module*
-              u'org.springframework.web.filter.OncePerRequestFilter'
-            filename (module takes precedence)
-              u'OncePerRequestFilter.java'
-            function*
-              u'doFilter'
-            lineno (function takes precedence)
-              107
-          frame*
-            module*
-              u'org.springframework.web.filter.HttpPutFormContentFilter'
-            filename (module takes precedence)
-              u'HttpPutFormContentFilter.java'
-            function*
-              u'doFilterInternal'
-            lineno (function takes precedence)
-              105
-          frame*
-            module*
-              u'org.apache.catalina.core.ApplicationFilterChain'
-            filename (module takes precedence)
-              u'ApplicationFilterChain.java'
-            function*
-              u'doFilter'
-            lineno (function takes precedence)
-              165
-          frame*
-            module*
-              u'org.apache.catalina.core.ApplicationFilterChain'
-            filename (module takes precedence)
-              u'ApplicationFilterChain.java'
-            function*
-              u'internalDoFilter'
-            lineno (function takes precedence)
-              192
-          frame*
-            module*
-              u'org.springframework.web.filter.OncePerRequestFilter'
-            filename (module takes precedence)
-              u'OncePerRequestFilter.java'
-            function*
-              u'doFilter'
-            lineno (function takes precedence)
-              107
-          frame*
-            module*
-              u'org.springframework.web.filter.RequestContextFilter'
-            filename (module takes precedence)
-              u'RequestContextFilter.java'
-            function*
-              u'doFilterInternal'
-            lineno (function takes precedence)
-              99
-          frame*
-            module*
-              u'org.apache.catalina.core.ApplicationFilterChain'
-            filename (module takes precedence)
-              u'ApplicationFilterChain.java'
-            function*
-              u'doFilter'
-            lineno (function takes precedence)
-              165
-          frame*
-            module*
-              u'org.apache.catalina.core.ApplicationFilterChain'
-            filename (module takes precedence)
-              u'ApplicationFilterChain.java'
-            function*
-              u'internalDoFilter'
-            lineno (function takes precedence)
-              192
-          frame*
-            module*
-              u'org.apache.tomcat.websocket.server.WsFilter'
-            filename (module takes precedence)
-              u'WsFilter.java'
-            function*
-              u'doFilter'
-            lineno (function takes precedence)
-              52
-          frame*
-            module*
-              u'org.apache.catalina.core.ApplicationFilterChain'
-            filename (module takes precedence)
-              u'ApplicationFilterChain.java'
-            function*
-              u'doFilter'
-            lineno (function takes precedence)
-              165
-          frame*
-            module*
-              u'org.apache.catalina.core.ApplicationFilterChain'
-            filename (module takes precedence)
-              u'ApplicationFilterChain.java'
-            function*
-              u'internalDoFilter'
-            lineno (function takes precedence)
-              230
-          frame*
-            module*
-              u'javax.servlet.http.HttpServlet'
-            filename (module takes precedence)
-              u'HttpServlet.java'
-            function*
-              u'service'
-            lineno (function takes precedence)
-              729
-          frame*
-            module*
-              u'org.springframework.web.servlet.FrameworkServlet'
-            filename (module takes precedence)
-              u'FrameworkServlet.java'
-            function*
-              u'service'
-            lineno (function takes precedence)
-              846
-          frame*
-            module*
-              u'javax.servlet.http.HttpServlet'
-            filename (module takes precedence)
-              u'HttpServlet.java'
-            function*
-              u'service'
-            lineno (function takes precedence)
-              622
-          frame*
-            module*
-              u'org.springframework.web.servlet.FrameworkServlet'
-            filename (module takes precedence)
-              u'FrameworkServlet.java'
-            function*
-              u'doGet'
-            lineno (function takes precedence)
-              861
-          frame*
-            module*
-              u'org.springframework.web.servlet.FrameworkServlet'
-            filename (module takes precedence)
-              u'FrameworkServlet.java'
-            function*
-              u'processRequest'
-            lineno (function takes precedence)
-              970
-          frame*
-            module*
-              u'org.springframework.web.servlet.DispatcherServlet'
-            filename (module takes precedence)
-              u'DispatcherServlet.java'
-            function*
-              u'doService'
-            lineno (function takes precedence)
-              897
-          frame*
-            module*
-              u'org.springframework.web.servlet.DispatcherServlet'
-            filename (module takes precedence)
-              u'DispatcherServlet.java'
-            function*
-              u'doDispatch'
-            lineno (function takes precedence)
-              963
-          frame*
-            module*
-              u'org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter'
-            filename (module takes precedence)
-              u'AbstractHandlerMethodAdapter.java'
-            function*
-              u'handle'
-            lineno (function takes precedence)
-              85
-          frame*
-            module*
-              u'org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter'
-            filename (module takes precedence)
-              u'RequestMappingHandlerAdapter.java'
-            function*
-              u'handleInternal'
-            lineno (function takes precedence)
-              738
-          frame*
-            module*
-              u'org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter'
-            filename (module takes precedence)
-              u'RequestMappingHandlerAdapter.java'
-            function*
-              u'invokeHandlerMethod'
-            lineno (function takes precedence)
-              827
-          frame*
-            module*
-              u'org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod'
-            filename (module takes precedence)
-              u'ServletInvocableHandlerMethod.java'
-            function*
-              u'invokeAndHandle'
-            lineno (function takes precedence)
-              116
-          frame*
-            module*
-              u'org.springframework.web.method.support.InvocableHandlerMethod'
-            filename (module takes precedence)
-              u'InvocableHandlerMethod.java'
-            function*
-              u'invokeForRequest'
-            lineno (function takes precedence)
-              133
-          frame*
-            module*
-              u'org.springframework.web.method.support.InvocableHandlerMethod'
-            filename (module takes precedence)
-              u'InvocableHandlerMethod.java'
-            function*
-              u'doInvoke'
-            lineno (function takes precedence)
-              205
-          frame*
-            module*
-              u'java.lang.reflect.Method'
-            filename (module takes precedence)
-              u'Method.java'
-            function*
-              u'invoke'
-            lineno (function takes precedence)
-              564
-          frame*
-            module*
-              u'jdk.internal.reflect.DelegatingMethodAccessorImpl'
-            filename (module takes precedence)
-              u'DelegatingMethodAccessorImpl.java'
-            function*
-              u'invoke'
-            lineno (function takes precedence)
-              43
-          frame*
-            module*
-              u'jdk.internal.reflect.NativeMethodAccessorImpl'
-            filename (module takes precedence)
-              u'NativeMethodAccessorImpl.java'
-            function*
-              u'invoke'
-            lineno (function takes precedence)
-              62
-          frame*
-            module*
-              u'jdk.internal.reflect.NativeMethodAccessorImpl'
-            filename (module takes precedence)
-              u'NativeMethodAccessorImpl.java'
-            function*
-              u'invoke0'
-          frame*
-            module*
-              u'io.sentry.example.Application'
-            filename (module takes precedence)
-              u'Application.java'
-            function*
-              u'home'
-            lineno (function takes precedence)
-              30
-        type*
-          u'ArithmeticException'
-        value (stacktrace and type take precedence)
-          u'/ by zero'
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined:2019_04_07/javascript_exception_no_in_app.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined:2019_04_07/javascript_exception_no_in_app.pysnap
deleted file mode 100644
index 45185924a9..0000000000
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined:2019_04_07/javascript_exception_no_in_app.pysnap
+++ /dev/null
@@ -1,194 +0,0 @@
----
-created: '2019-04-07T10:03:31.428375Z'
-creator: sentry
-source: tests/sentry/grouping/test_variants.py
----
-app:
-  hash: None
-  component:
-    app (exception of system takes precedence)
-      exception (ignored because hash matches system variant)
-        stacktrace*
-          frame* (frame considered in-app because no frame is in-app)
-            filename*
-              u'webpack-internal:///../../../../node_modules/react-dom/cjs/react-dom.development.js'
-            function*
-              u'dispatchInteractiveEvent'
-            lineno (function takes precedence)
-              4913
-          frame* (frame considered in-app because no frame is in-app)
-            filename*
-              u'webpack-internal:///../../../../node_modules/react-dom/cjs/react-dom.development.js'
-            function*
-              u'interactiveUpdates'
-            lineno (function takes precedence)
-              2208
-          frame* (frame considered in-app because no frame is in-app)
-            filename*
-              u'webpack-internal:///../../../../node_modules/react-dom/cjs/react-dom.development.js'
-            function*
-              u'interactiveUpdates$1'
-            lineno (function takes precedence)
-              17557
-          frame* (frame considered in-app because no frame is in-app)
-            filename*
-              u'webpack-internal:///../../../../node_modules/react-dom/cjs/react-dom.development.js'
-            function*
-              u'performSyncWork'
-            lineno (function takes precedence)
-              17266
-          frame* (frame considered in-app because no frame is in-app)
-            filename*
-              u'webpack-internal:///../../../../node_modules/react-dom/cjs/react-dom.development.js'
-            function*
-              u'performWork'
-            lineno (function takes precedence)
-              17294
-          frame* (frame considered in-app because no frame is in-app)
-            filename*
-              u'webpack-internal:///../../../../node_modules/react-dom/cjs/react-dom.development.js'
-            function*
-              u'performWorkOnRoot'
-            lineno (function takes precedence)
-              17386
-          frame* (frame considered in-app because no frame is in-app)
-            filename*
-              u'webpack-internal:///../../../../node_modules/react-dom/cjs/react-dom.development.js'
-            function*
-              u'renderRoot'
-            lineno (function takes precedence)
-              16547
-          frame* (frame considered in-app because no frame is in-app)
-            filename*
-              u'webpack-internal:///../../../../node_modules/react-dom/cjs/react-dom.development.js'
-            function*
-              u'replayUnitOfWork'
-            lineno (function takes precedence)
-              15744
-          frame* (frame considered in-app because no frame is in-app)
-            filename*
-              u'webpack-internal:///../../../../node_modules/react-dom/cjs/react-dom.development.js'
-            function*
-              u'invokeGuardedCallback'
-            lineno (function takes precedence)
-              248
-          frame* (frame considered in-app because no frame is in-app)
-            filename*
-              u'webpack-internal:///../../../../node_modules/react-dom/cjs/react-dom.development.js'
-            function*
-              u'Object.invokeGuardedCallbackDev'
-            lineno (function takes precedence)
-              195
-          frame* (frame considered in-app because no frame is in-app)
-            filename*
-              u'webpack-internal:///../../../../node_modules/@sentry/browser/dist/index.js'
-            function*
-              u'HTMLUnknownElement.sentryWrapped'
-            lineno (function takes precedence)
-              3197
-          frame* (frame considered in-app because no frame is in-app)
-            filename*
-              u'webpack-internal:///../../../../node_modules/react-dom/cjs/react-dom.development.js'
-            function*
-              u'HTMLUnknownElement.callCallback'
-            lineno (function takes precedence)
-              145
-        type*
-          u'ReferenceError'
-        value (stacktrace and type take precedence)
-          u'varant is not defined'
---------------------------------------------------------------------------
-system:
-  hash: '60443ca22b22a43806f4358109278791'
-  component:
-    system*
-      exception*
-        stacktrace*
-          frame*
-            filename*
-              u'webpack-internal:///../../../../node_modules/react-dom/cjs/react-dom.development.js'
-            function*
-              u'dispatchInteractiveEvent'
-            lineno (function takes precedence)
-              4913
-          frame*
-            filename*
-              u'webpack-internal:///../../../../node_modules/react-dom/cjs/react-dom.development.js'
-            function*
-              u'interactiveUpdates'
-            lineno (function takes precedence)
-              2208
-          frame*
-            filename*
-              u'webpack-internal:///../../../../node_modules/react-dom/cjs/react-dom.development.js'
-            function*
-              u'interactiveUpdates$1'
-            lineno (function takes precedence)
-              17557
-          frame*
-            filename*
-              u'webpack-internal:///../../../../node_modules/react-dom/cjs/react-dom.development.js'
-            function*
-              u'performSyncWork'
-            lineno (function takes precedence)
-              17266
-          frame*
-            filename*
-              u'webpack-internal:///../../../../node_modules/react-dom/cjs/react-dom.development.js'
-            function*
-              u'performWork'
-            lineno (function takes precedence)
-              17294
-          frame*
-            filename*
-              u'webpack-internal:///../../../../node_modules/react-dom/cjs/react-dom.development.js'
-            function*
-              u'performWorkOnRoot'
-            lineno (function takes precedence)
-              17386
-          frame*
-            filename*
-              u'webpack-internal:///../../../../node_modules/react-dom/cjs/react-dom.development.js'
-            function*
-              u'renderRoot'
-            lineno (function takes precedence)
-              16547
-          frame*
-            filename*
-              u'webpack-internal:///../../../../node_modules/react-dom/cjs/react-dom.development.js'
-            function*
-              u'replayUnitOfWork'
-            lineno (function takes precedence)
-              15744
-          frame*
-            filename*
-              u'webpack-internal:///../../../../node_modules/react-dom/cjs/react-dom.development.js'
-            function*
-              u'invokeGuardedCallback'
-            lineno (function takes precedence)
-              248
-          frame*
-            filename*
-              u'webpack-internal:///../../../../node_modules/react-dom/cjs/react-dom.development.js'
-            function*
-              u'Object.invokeGuardedCallbackDev'
-            lineno (function takes precedence)
-              195
-          frame*
-            filename*
-              u'webpack-internal:///../../../../node_modules/@sentry/browser/dist/index.js'
-            function*
-              u'HTMLUnknownElement.sentryWrapped'
-            lineno (function takes precedence)
-              3197
-          frame*
-            filename*
-              u'webpack-internal:///../../../../node_modules/react-dom/cjs/react-dom.development.js'
-            function*
-              u'HTMLUnknownElement.callCallback'
-            lineno (function takes precedence)
-              145
-        type*
-          u'ReferenceError'
-        value (stacktrace and type take precedence)
-          u'varant is not defined'
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined:2019_04_07/javascript_message.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined:2019_04_07/javascript_message.pysnap
deleted file mode 100644
index 8c9971bc6e..0000000000
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined:2019_04_07/javascript_message.pysnap
+++ /dev/null
@@ -1,11 +0,0 @@
----
-created: '2019-04-07T10:03:31.435518Z'
-creator: sentry
-source: tests/sentry/grouping/test_variants.py
----
-default:
-  hash: '4119639092e62c55ea8be348e4d9260d'
-  component:
-    default*
-      message*
-        u'event'
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined:2019_04_07/laravel.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined:2019_04_07/laravel.pysnap
deleted file mode 100644
index 176adcc771..0000000000
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined:2019_04_07/laravel.pysnap
+++ /dev/null
@@ -1,922 +0,0 @@
----
-created: '2019-04-07T10:03:31.465550Z'
-creator: sentry
-source: tests/sentry/grouping/test_variants.py
----
-app:
-  hash: None
-  component:
-    app (exception of system takes precedence)
-      exception (ignored because this variant does not contain a stacktrace, but but the system variant does)
-        stacktrace (less than 10% of frames are in-app)
-          frame*
-            filename*
-              u'/server.php'
-            context-line*
-              u"require_once __DIR__.'/public/index.php';"
-            lineno (line number is used only if module or filename are available)
-              21
-          frame*
-            filename*
-              u'/public/index.php'
-            context-line*
-              u'    $request = Illuminate\\Http\\Request::capture()'
-            function (function name is used only if module or filename are available)
-              u'require_once'
-            lineno (line number is used only if module or filename are available)
-              55
-          frame (non app frame)
-            filename*
-              u'/vendor/laravel/framework/src/Illuminate/Foundation/Http/Kernel.php'
-            context-line*
-              u'            $response = $this->sendRequestThroughRouter($request);'
-            function (function name is used only if module or filename are available)
-              u'Illuminate\\Foundation\\Http\\Kernel::handle'
-            lineno (line number is used only if module or filename are available)
-              116
-          frame (non app frame)
-            filename*
-              u'/vendor/laravel/framework/src/Illuminate/Foundation/Http/Kernel.php'
-            context-line*
-              u'                    ->then($this->dispatchToRouter());'
-            function (function name is used only if module or filename are available)
-              u'Illuminate\\Foundation\\Http\\Kernel::sendRequestThroughRouter'
-            lineno (line number is used only if module or filename are available)
-              151
-          frame (non app frame)
-            filename*
-              u'/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php'
-            context-line*
-              u'        return $pipeline($this->passable);'
-            function (function name is used only if module or filename are available)
-              u'Illuminate\\Pipeline\\Pipeline::then'
-            lineno (line number is used only if module or filename are available)
-              104
-          frame (non app frame)
-            filename*
-              u'/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php'
-            context-line*
-              u'                    return $callable($passable);'
-            function (function name is used only if module or filename are available)
-              u'Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}'
-            lineno (line number is used only if module or filename are available)
-              53
-          frame (non app frame)
-            filename*
-              u'/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php'
-            context-line*
-              u'                                ? $pipe->{$this->method}(...$parameters)'
-            function (function name is used only if module or filename are available)
-              u'Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}'
-            lineno (line number is used only if module or filename are available)
-              163
-          frame (non app frame)
-            filename*
-              u'/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/CheckForMaintenanceMode.php'
-            context-line*
-              u'        return $next($request);'
-            function (function name is used only if module or filename are available)
-              u'Illuminate\\Foundation\\Http\\Middleware\\CheckForMaintenanceMode::handle'
-            lineno (line number is used only if module or filename are available)
-              62
-          frame (non app frame)
-            filename*
-              u'/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php'
-            context-line*
-              u'                    return $callable($passable);'
-            function (function name is used only if module or filename are available)
-              u'Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}'
-            lineno (line number is used only if module or filename are available)
-              53
-          frame (non app frame)
-            filename*
-              u'/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php'
-            context-line*
-              u'                                ? $pipe->{$this->method}(...$parameters)'
-            function (function name is used only if module or filename are available)
-              u'Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}'
-            lineno (line number is used only if module or filename are available)
-              163
-          frame (non app frame)
-            filename*
-              u'/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/ValidatePostSize.php'
-            context-line*
-              u'        return $next($request);'
-            function (function name is used only if module or filename are available)
-              u'Illuminate\\Foundation\\Http\\Middleware\\ValidatePostSize::handle'
-            lineno (line number is used only if module or filename are available)
-              27
-          frame (non app frame)
-            filename*
-              u'/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php'
-            context-line*
-              u'                    return $callable($passable);'
-            function (function name is used only if module or filename are available)
-              u'Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}'
-            lineno (line number is used only if module or filename are available)
-              53
-          frame (non app frame)
-            filename*
-              u'/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php'
-            context-line*
-              u'                                ? $pipe->{$this->method}(...$parameters)'
-            function (function name is used only if module or filename are available)
-              u'Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}'
-            lineno (line number is used only if module or filename are available)
-              163
-          frame (non app frame)
-            filename*
-              u'/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/TransformsRequest.php'
-            context-line*
-              u'        return $next($request);'
-            function (function name is used only if module or filename are available)
-              u'Illuminate\\Foundation\\Http\\Middleware\\TransformsRequest::handle'
-            lineno (line number is used only if module or filename are available)
-              21
-          frame (non app frame)
-            filename*
-              u'/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php'
-            context-line*
-              u'                    return $callable($passable);'
-            function (function name is used only if module or filename are available)
-              u'Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}'
-            lineno (line number is used only if module or filename are available)
-              53
-          frame (non app frame)
-            filename*
-              u'/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php'
-            context-line*
-              u'                                ? $pipe->{$this->method}(...$parameters)'
-            function (function name is used only if module or filename are available)
-              u'Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}'
-            lineno (line number is used only if module or filename are available)
-              163
-          frame (non app frame)
-            filename*
-              u'/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/TransformsRequest.php'
-            context-line*
-              u'        return $next($request);'
-            function (function name is used only if module or filename are available)
-              u'Illuminate\\Foundation\\Http\\Middleware\\TransformsRequest::handle'
-            lineno (line number is used only if module or filename are available)
-              21
-          frame (non app frame)
-            filename*
-              u'/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php'
-            context-line*
-              u'                    return $callable($passable);'
-            function (function name is used only if module or filename are available)
-              u'Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}'
-            lineno (line number is used only if module or filename are available)
-              53
-          frame (non app frame)
-            filename*
-              u'/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php'
-            context-line*
-              u'                                ? $pipe->{$this->method}(...$parameters)'
-            function (function name is used only if module or filename are available)
-              u'Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}'
-            lineno (line number is used only if module or filename are available)
-              163
-          frame (non app frame)
-            filename*
-              u'/vendor/fideloper/proxy/src/TrustProxies.php'
-            context-line*
-              u'        return $next($request);'
-            function (function name is used only if module or filename are available)
-              u'Fideloper\\Proxy\\TrustProxies::handle'
-            lineno (line number is used only if module or filename are available)
-              57
-          frame (non app frame)
-            filename*
-              u'/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php'
-            context-line*
-              u'                return $destination($passable);'
-            function (function name is used only if module or filename are available)
-              u'Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}'
-            lineno (line number is used only if module or filename are available)
-              30
-          frame (non app frame)
-            filename*
-              u'/vendor/laravel/framework/src/Illuminate/Foundation/Http/Kernel.php'
-            context-line*
-              u'            return $this->router->dispatch($request);'
-            function (function name is used only if module or filename are available)
-              u'Illuminate\\Foundation\\Http\\Kernel::Illuminate\\Foundation\\Http\\{closure}'
-            lineno (line number is used only if module or filename are available)
-              176
-          frame (non app frame)
-            filename*
-              u'/vendor/laravel/framework/src/Illuminate/Routing/Router.php'
-            context-line*
-              u'        return $this->dispatchToRoute($request);'
-            function (function name is used only if module or filename are available)
-              u'Illuminate\\Routing\\Router::dispatch'
-            lineno (line number is used only if module or filename are available)
-              612
-          frame (non app frame)
-            filename*
-              u'/vendor/laravel/framework/src/Illuminate/Routing/Router.php'
-            context-line*
-              u'        return $this->runRoute($request, $this->findRoute($request));'
-            function (function name is used only if module or filename are available)
-              u'Illuminate\\Routing\\Router::dispatchToRoute'
-            lineno (line number is used only if module or filename are available)
-              623
-          frame (non app frame)
-            filename*
-              u'/vendor/laravel/framework/src/Illuminate/Routing/Router.php'
-            context-line*
-              u'            $this->runRouteWithinStack($route, $request)'
-            function (function name is used only if module or filename are available)
-              u'Illuminate\\Routing\\Router::runRoute'
-            lineno (line number is used only if module or filename are available)
-              657
-          frame (non app frame)
-            filename*
-              u'/vendor/laravel/framework/src/Illuminate/Routing/Router.php'
-            context-line*
-              u'                        });'
-            function (function name is used only if module or filename are available)
-              u'Illuminate\\Routing\\Router::runRouteWithinStack'
-            lineno (line number is used only if module or filename are available)
-              682
-          frame (non app frame)
-            filename*
-              u'/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php'
-            context-line*
-              u'        return $pipeline($this->passable);'
-            function (function name is used only if module or filename are available)
-              u'Illuminate\\Pipeline\\Pipeline::then'
-            lineno (line number is used only if module or filename are available)
-              104
-          frame (non app frame)
-            filename*
-              u'/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php'
-            context-line*
-              u'                    return $callable($passable);'
-            function (function name is used only if module or filename are available)
-              u'Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}'
-            lineno (line number is used only if module or filename are available)
-              53
-          frame (non app frame)
-            filename*
-              u'/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php'
-            context-line*
-              u'                                ? $pipe->{$this->method}(...$parameters)'
-            function (function name is used only if module or filename are available)
-              u'Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}'
-            lineno (line number is used only if module or filename are available)
-              163
-          frame (non app frame)
-            filename*
-              u'/vendor/laravel/framework/src/Illuminate/Cookie/Middleware/EncryptCookies.php'
-            context-line*
-              u'        return $this->encrypt($next($this->decrypt($request)));'
-            function (function name is used only if module or filename are available)
-              u'Illuminate\\Cookie\\Middleware\\EncryptCookies::handle'
-            lineno (line number is used only if module or filename are available)
-              66
-          frame (non app frame)
-            filename*
-              u'/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php'
-            context-line*
-              u'                    return $callable($passable);'
-            function (function name is used only if module or filename are available)
-              u'Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}'
-            lineno (line number is used only if module or filename are available)
-              53
-          frame (non app frame)
-            filename*
-              u'/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php'
-            context-line*
-              u'                                ? $pipe->{$this->method}(...$parameters)'
-            function (function name is used only if module or filename are available)
-              u'Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}'
-            lineno (line number is used only if module or filename are available)
-              163
-          frame (non app frame)
-            filename*
-              u'/vendor/laravel/framework/src/Illuminate/Cookie/Middleware/AddQueuedCookiesToResponse.php'
-            context-line*
-              u'        $response = $next($request);'
-            function (function name is used only if module or filename are available)
-              u'Illuminate\\Cookie\\Middleware\\AddQueuedCookiesToResponse::handle'
-            lineno (line number is used only if module or filename are available)
-              37
-          frame (non app frame)
-            filename*
-              u'/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php'
-            context-line*
-              u'                    return $callable($passable);'
-            function (function name is used only if module or filename are available)
-              u'Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}'
-            lineno (line number is used only if module or filename are available)
-              53
-          frame (non app frame)
-            filename*
-              u'/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php'
-            context-line*
-              u'                                ? $pipe->{$this->method}(...$parameters)'
-            function (function name is used only if module or filename are available)
-              u'Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}'
-            lineno (line number is used only if module or filename are available)
-              163
-          frame (non app frame)
-            filename*
-              u'/vendor/laravel/framework/src/Illuminate/Session/Middleware/StartSession.php'
-            context-line*
-              u'            $response = $next($request), $session'
-            function (function name is used only if module or filename are available)
-              u'Illuminate\\Session\\Middleware\\StartSession::handle'
-            lineno (line number is used only if module or filename are available)
-              59
-          frame (non app frame)
-            filename*
-              u'/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php'
-            context-line*
-              u'                    return $callable($passable);'
-            function (function name is used only if module or filename are available)
-              u'Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}'
-            lineno (line number is used only if module or filename are available)
-              53
-          frame (non app frame)
-            filename*
-              u'/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php'
-            context-line*
-              u'                                ? $pipe->{$this->method}(...$parameters)'
-            function (function name is used only if module or filename are available)
-              u'Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}'
-            lineno (line number is used only if module or filename are available)
-              163
-          frame (non app frame)
-            filename*
-              u'/vendor/laravel/framework/src/Illuminate/View/Middleware/ShareErrorsFromSession.php'
-            context-line*
-              u'        return $next($request);'
-            function (function name is used only if module or filename are available)
-              u'Illuminate\\View\\Middleware\\ShareErrorsFromSession::handle'
-            lineno (line number is used only if module or filename are available)
-              49
-          frame (non app frame)
-            filename*
-              u'/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php'
-            context-line*
-              u'                    return $callable($passable);'
-            function (function name is used only if module or filename are available)
-              u'Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}'
-            lineno (line number is used only if module or filename are available)
-              53
-          frame (non app frame)
-            filename*
-              u'/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php'
-            context-line*
-              u'                                ? $pipe->{$this->method}(...$parameters)'
-            function (function name is used only if module or filename are available)
-              u'Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}'
-            lineno (line number is used only if module or filename are available)
-              163
-          frame (non app frame)
-            filename*
-              u'/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/VerifyCsrfToken.php'
-            context-line*
-              u'            return tap($next($request), function ($response) use ($request) {'
-            function (function name is used only if module or filename are available)
-              u'Illuminate\\Foundation\\Http\\Middleware\\VerifyCsrfToken::handle'
-            lineno (line number is used only if module or filename are available)
-              75
-          frame (non app frame)
-            filename*
-              u'/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php'
-            context-line*
-              u'                    return $callable($passable);'
-            function (function name is used only if module or filename are available)
-              u'Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}'
-            lineno (line number is used only if module or filename are available)
-              53
-          frame (non app frame)
-            filename*
-              u'/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php'
-            context-line*
-              u'                                ? $pipe->{$this->method}(...$parameters)'
-            function (function name is used only if module or filename are available)
-              u'Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}'
-            lineno (line number is used only if module or filename are available)
-              163
-          frame (non app frame)
-            filename*
-              u'/vendor/laravel/framework/src/Illuminate/Routing/Middleware/SubstituteBindings.php'
-            context-line*
-              u'        return $next($request);'
-            function (function name is used only if module or filename are available)
-              u'Illuminate\\Routing\\Middleware\\SubstituteBindings::handle'
-            lineno (line number is used only if module or filename are available)
-              41
-          frame (non app frame)
-            filename*
-              u'/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php'
-            context-line*
-              u'                return $destination($passable);'
-            function (function name is used only if module or filename are available)
-              u'Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}'
-            lineno (line number is used only if module or filename are available)
-              30
-          frame (non app frame)
-            filename*
-              u'/vendor/laravel/framework/src/Illuminate/Routing/Router.php'
-            context-line*
-              u'                                $request, $route->run()'
-            function (function name is used only if module or filename are available)
-              u'Illuminate\\Routing\\Router::Illuminate\\Routing\\{closure}'
-            lineno (line number is used only if module or filename are available)
-              680
-          frame (non app frame)
-            filename*
-              u'/vendor/laravel/framework/src/Illuminate/Routing/Route.php'
-            context-line*
-              u'            return $this->runCallable();'
-            function (function name is used only if module or filename are available)
-              u'Illuminate\\Routing\\Route::run'
-            lineno (line number is used only if module or filename are available)
-              179
-          frame (non app frame)
-            filename*
-              u'/vendor/laravel/framework/src/Illuminate/Routing/Route.php'
-            context-line*
-              u"            $this->parametersWithoutNulls(), new ReflectionFunction($this->action['uses'])"
-            function (function name is used only if module or filename are available)
-              u'Illuminate\\Routing\\Route::runCallable'
-            lineno (line number is used only if module or filename are available)
-              205
-          frame*
-            filename*
-              u'/routes/web.php'
-            context-line*
-              u"    throw new Exception('LARAVEL TEST');"
-            function (function name is used only if module or filename are available)
-              u'Illuminate\\Routing\\RouteFileRegistrar::{closure}'
-            lineno (line number is used only if module or filename are available)
-              22
-        type*
-          u'Exception'
-        value*
-          u'LARAVEL TEST'
---------------------------------------------------------------------------
-system:
-  hash: '89037a724fe48e9f6144c3a14e182b9c'
-  component:
-    system*
-      exception*
-        stacktrace*
-          frame*
-            filename*
-              u'/server.php'
-            context-line*
-              u"require_once __DIR__.'/public/index.php';"
-            lineno (line number is used only if module or filename are available)
-              21
-          frame*
-            filename*
-              u'/public/index.php'
-            context-line*
-              u'    $request = Illuminate\\Http\\Request::capture()'
-            function (function name is used only if module or filename are available)
-              u'require_once'
-            lineno (line number is used only if module or filename are available)
-              55
-          frame*
-            filename*
-              u'/vendor/laravel/framework/src/Illuminate/Foundation/Http/Kernel.php'
-            context-line*
-              u'            $response = $this->sendRequestThroughRouter($request);'
-            function (function name is used only if module or filename are available)
-              u'Illuminate\\Foundation\\Http\\Kernel::handle'
-            lineno (line number is used only if module or filename are available)
-              116
-          frame*
-            filename*
-              u'/vendor/laravel/framework/src/Illuminate/Foundation/Http/Kernel.php'
-            context-line*
-              u'                    ->then($this->dispatchToRouter());'
-            function (function name is used only if module or filename are available)
-              u'Illuminate\\Foundation\\Http\\Kernel::sendRequestThroughRouter'
-            lineno (line number is used only if module or filename are available)
-              151
-          frame*
-            filename*
-              u'/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php'
-            context-line*
-              u'        return $pipeline($this->passable);'
-            function (function name is used only if module or filename are available)
-              u'Illuminate\\Pipeline\\Pipeline::then'
-            lineno (line number is used only if module or filename are available)
-              104
-          frame*
-            filename*
-              u'/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php'
-            context-line*
-              u'                    return $callable($passable);'
-            function (function name is used only if module or filename are available)
-              u'Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}'
-            lineno (line number is used only if module or filename are available)
-              53
-          frame*
-            filename*
-              u'/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php'
-            context-line*
-              u'                                ? $pipe->{$this->method}(...$parameters)'
-            function (function name is used only if module or filename are available)
-              u'Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}'
-            lineno (line number is used only if module or filename are available)
-              163
-          frame*
-            filename*
-              u'/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/CheckForMaintenanceMode.php'
-            context-line*
-              u'        return $next($request);'
-            function (function name is used only if module or filename are available)
-              u'Illuminate\\Foundation\\Http\\Middleware\\CheckForMaintenanceMode::handle'
-            lineno (line number is used only if module or filename are available)
-              62
-          frame*
-            filename*
-              u'/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php'
-            context-line*
-              u'                    return $callable($passable);'
-            function (function name is used only if module or filename are available)
-              u'Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}'
-            lineno (line number is used only if module or filename are available)
-              53
-          frame*
-            filename*
-              u'/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php'
-            context-line*
-              u'                                ? $pipe->{$this->method}(...$parameters)'
-            function (function name is used only if module or filename are available)
-              u'Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}'
-            lineno (line number is used only if module or filename are available)
-              163
-          frame*
-            filename*
-              u'/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/ValidatePostSize.php'
-            context-line*
-              u'        return $next($request);'
-            function (function name is used only if module or filename are available)
-              u'Illuminate\\Foundation\\Http\\Middleware\\ValidatePostSize::handle'
-            lineno (line number is used only if module or filename are available)
-              27
-          frame*
-            filename*
-              u'/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php'
-            context-line*
-              u'                    return $callable($passable);'
-            function (function name is used only if module or filename are available)
-              u'Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}'
-            lineno (line number is used only if module or filename are available)
-              53
-          frame*
-            filename*
-              u'/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php'
-            context-line*
-              u'                                ? $pipe->{$this->method}(...$parameters)'
-            function (function name is used only if module or filename are available)
-              u'Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}'
-            lineno (line number is used only if module or filename are available)
-              163
-          frame*
-            filename*
-              u'/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/TransformsRequest.php'
-            context-line*
-              u'        return $next($request);'
-            function (function name is used only if module or filename are available)
-              u'Illuminate\\Foundation\\Http\\Middleware\\TransformsRequest::handle'
-            lineno (line number is used only if module or filename are available)
-              21
-          frame*
-            filename*
-              u'/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php'
-            context-line*
-              u'                    return $callable($passable);'
-            function (function name is used only if module or filename are available)
-              u'Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}'
-            lineno (line number is used only if module or filename are available)
-              53
-          frame*
-            filename*
-              u'/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php'
-            context-line*
-              u'                                ? $pipe->{$this->method}(...$parameters)'
-            function (function name is used only if module or filename are available)
-              u'Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}'
-            lineno (line number is used only if module or filename are available)
-              163
-          frame*
-            filename*
-              u'/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/TransformsRequest.php'
-            context-line*
-              u'        return $next($request);'
-            function (function name is used only if module or filename are available)
-              u'Illuminate\\Foundation\\Http\\Middleware\\TransformsRequest::handle'
-            lineno (line number is used only if module or filename are available)
-              21
-          frame*
-            filename*
-              u'/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php'
-            context-line*
-              u'                    return $callable($passable);'
-            function (function name is used only if module or filename are available)
-              u'Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}'
-            lineno (line number is used only if module or filename are available)
-              53
-          frame*
-            filename*
-              u'/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php'
-            context-line*
-              u'                                ? $pipe->{$this->method}(...$parameters)'
-            function (function name is used only if module or filename are available)
-              u'Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}'
-            lineno (line number is used only if module or filename are available)
-              163
-          frame*
-            filename*
-              u'/vendor/fideloper/proxy/src/TrustProxies.php'
-            context-line*
-              u'        return $next($request);'
-            function (function name is used only if module or filename are available)
-              u'Fideloper\\Proxy\\TrustProxies::handle'
-            lineno (line number is used only if module or filename are available)
-              57
-          frame*
-            filename*
-              u'/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php'
-            context-line*
-              u'                return $destination($passable);'
-            function (function name is used only if module or filename are available)
-              u'Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}'
-            lineno (line number is used only if module or filename are available)
-              30
-          frame*
-            filename*
-              u'/vendor/laravel/framework/src/Illuminate/Foundation/Http/Kernel.php'
-            context-line*
-              u'            return $this->router->dispatch($request);'
-            function (function name is used only if module or filename are available)
-              u'Illuminate\\Foundation\\Http\\Kernel::Illuminate\\Foundation\\Http\\{closure}'
-            lineno (line number is used only if module or filename are available)
-              176
-          frame*
-            filename*
-              u'/vendor/laravel/framework/src/Illuminate/Routing/Router.php'
-            context-line*
-              u'        return $this->dispatchToRoute($request);'
-            function (function name is used only if module or filename are available)
-              u'Illuminate\\Routing\\Router::dispatch'
-            lineno (line number is used only if module or filename are available)
-              612
-          frame*
-            filename*
-              u'/vendor/laravel/framework/src/Illuminate/Routing/Router.php'
-            context-line*
-              u'        return $this->runRoute($request, $this->findRoute($request));'
-            function (function name is used only if module or filename are available)
-              u'Illuminate\\Routing\\Router::dispatchToRoute'
-            lineno (line number is used only if module or filename are available)
-              623
-          frame*
-            filename*
-              u'/vendor/laravel/framework/src/Illuminate/Routing/Router.php'
-            context-line*
-              u'            $this->runRouteWithinStack($route, $request)'
-            function (function name is used only if module or filename are available)
-              u'Illuminate\\Routing\\Router::runRoute'
-            lineno (line number is used only if module or filename are available)
-              657
-          frame*
-            filename*
-              u'/vendor/laravel/framework/src/Illuminate/Routing/Router.php'
-            context-line*
-              u'                        });'
-            function (function name is used only if module or filename are available)
-              u'Illuminate\\Routing\\Router::runRouteWithinStack'
-            lineno (line number is used only if module or filename are available)
-              682
-          frame*
-            filename*
-              u'/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php'
-            context-line*
-              u'        return $pipeline($this->passable);'
-            function (function name is used only if module or filename are available)
-              u'Illuminate\\Pipeline\\Pipeline::then'
-            lineno (line number is used only if module or filename are available)
-              104
-          frame*
-            filename*
-              u'/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php'
-            context-line*
-              u'                    return $callable($passable);'
-            function (function name is used only if module or filename are available)
-              u'Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}'
-            lineno (line number is used only if module or filename are available)
-              53
-          frame*
-            filename*
-              u'/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php'
-            context-line*
-              u'                                ? $pipe->{$this->method}(...$parameters)'
-            function (function name is used only if module or filename are available)
-              u'Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}'
-            lineno (line number is used only if module or filename are available)
-              163
-          frame*
-            filename*
-              u'/vendor/laravel/framework/src/Illuminate/Cookie/Middleware/EncryptCookies.php'
-            context-line*
-              u'        return $this->encrypt($next($this->decrypt($request)));'
-            function (function name is used only if module or filename are available)
-              u'Illuminate\\Cookie\\Middleware\\EncryptCookies::handle'
-            lineno (line number is used only if module or filename are available)
-              66
-          frame*
-            filename*
-              u'/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php'
-            context-line*
-              u'                    return $callable($passable);'
-            function (function name is used only if module or filename are available)
-              u'Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}'
-            lineno (line number is used only if module or filename are available)
-              53
-          frame*
-            filename*
-              u'/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php'
-            context-line*
-              u'                                ? $pipe->{$this->method}(...$parameters)'
-            function (function name is used only if module or filename are available)
-              u'Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}'
-            lineno (line number is used only if module or filename are available)
-              163
-          frame*
-            filename*
-              u'/vendor/laravel/framework/src/Illuminate/Cookie/Middleware/AddQueuedCookiesToResponse.php'
-            context-line*
-              u'        $response = $next($request);'
-            function (function name is used only if module or filename are available)
-              u'Illuminate\\Cookie\\Middleware\\AddQueuedCookiesToResponse::handle'
-            lineno (line number is used only if module or filename are available)
-              37
-          frame*
-            filename*
-              u'/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php'
-            context-line*
-              u'                    return $callable($passable);'
-            function (function name is used only if module or filename are available)
-              u'Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}'
-            lineno (line number is used only if module or filename are available)
-              53
-          frame*
-            filename*
-              u'/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php'
-            context-line*
-              u'                                ? $pipe->{$this->method}(...$parameters)'
-            function (function name is used only if module or filename are available)
-              u'Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}'
-            lineno (line number is used only if module or filename are available)
-              163
-          frame*
-            filename*
-              u'/vendor/laravel/framework/src/Illuminate/Session/Middleware/StartSession.php'
-            context-line*
-              u'            $response = $next($request), $session'
-            function (function name is used only if module or filename are available)
-              u'Illuminate\\Session\\Middleware\\StartSession::handle'
-            lineno (line number is used only if module or filename are available)
-              59
-          frame*
-            filename*
-              u'/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php'
-            context-line*
-              u'                    return $callable($passable);'
-            function (function name is used only if module or filename are available)
-              u'Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}'
-            lineno (line number is used only if module or filename are available)
-              53
-          frame*
-            filename*
-              u'/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php'
-            context-line*
-              u'                                ? $pipe->{$this->method}(...$parameters)'
-            function (function name is used only if module or filename are available)
-              u'Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}'
-            lineno (line number is used only if module or filename are available)
-              163
-          frame*
-            filename*
-              u'/vendor/laravel/framework/src/Illuminate/View/Middleware/ShareErrorsFromSession.php'
-            context-line*
-              u'        return $next($request);'
-            function (function name is used only if module or filename are available)
-              u'Illuminate\\View\\Middleware\\ShareErrorsFromSession::handle'
-            lineno (line number is used only if module or filename are available)
-              49
-          frame*
-            filename*
-              u'/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php'
-            context-line*
-              u'                    return $callable($passable);'
-            function (function name is used only if module or filename are available)
-              u'Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}'
-            lineno (line number is used only if module or filename are available)
-              53
-          frame*
-            filename*
-              u'/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php'
-            context-line*
-              u'                                ? $pipe->{$this->method}(...$parameters)'
-            function (function name is used only if module or filename are available)
-              u'Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}'
-            lineno (line number is used only if module or filename are available)
-              163
-          frame*
-            filename*
-              u'/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/VerifyCsrfToken.php'
-            context-line*
-              u'            return tap($next($request), function ($response) use ($request) {'
-            function (function name is used only if module or filename are available)
-              u'Illuminate\\Foundation\\Http\\Middleware\\VerifyCsrfToken::handle'
-            lineno (line number is used only if module or filename are available)
-              75
-          frame*
-            filename*
-              u'/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php'
-            context-line*
-              u'                    return $callable($passable);'
-            function (function name is used only if module or filename are available)
-              u'Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}'
-            lineno (line number is used only if module or filename are available)
-              53
-          frame*
-            filename*
-              u'/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php'
-            context-line*
-              u'                                ? $pipe->{$this->method}(...$parameters)'
-            function (function name is used only if module or filename are available)
-              u'Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}'
-            lineno (line number is used only if module or filename are available)
-              163
-          frame*
-            filename*
-              u'/vendor/laravel/framework/src/Illuminate/Routing/Middleware/SubstituteBindings.php'
-            context-line*
-              u'        return $next($request);'
-            function (function name is used only if module or filename are available)
-              u'Illuminate\\Routing\\Middleware\\SubstituteBindings::handle'
-            lineno (line number is used only if module or filename are available)
-              41
-          frame*
-            filename*
-              u'/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php'
-            context-line*
-              u'                return $destination($passable);'
-            function (function name is used only if module or filename are available)
-              u'Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}'
-            lineno (line number is used only if module or filename are available)
-              30
-          frame*
-            filename*
-              u'/vendor/laravel/framework/src/Illuminate/Routing/Router.php'
-            context-line*
-              u'                                $request, $route->run()'
-            function (function name is used only if module or filename are available)
-              u'Illuminate\\Routing\\Router::Illuminate\\Routing\\{closure}'
-            lineno (line number is used only if module or filename are available)
-              680
-          frame*
-            filename*
-              u'/vendor/laravel/framework/src/Illuminate/Routing/Route.php'
-            context-line*
-              u'            return $this->runCallable();'
-            function (function name is used only if module or filename are available)
-              u'Illuminate\\Routing\\Route::run'
-            lineno (line number is used only if module or filename are available)
-              179
-          frame*
-            filename*
-              u'/vendor/laravel/framework/src/Illuminate/Routing/Route.php'
-            context-line*
-              u"            $this->parametersWithoutNulls(), new ReflectionFunction($this->action['uses'])"
-            function (function name is used only if module or filename are available)
-              u'Illuminate\\Routing\\Route::runCallable'
-            lineno (line number is used only if module or filename are available)
-              205
-          frame*
-            filename*
-              u'/routes/web.php'
-            context-line*
-              u"    throw new Exception('LARAVEL TEST');"
-            function (function name is used only if module or filename are available)
-              u'Illuminate\\Routing\\RouteFileRegistrar::{closure}'
-            lineno (line number is used only if module or filename are available)
-              22
-        type*
-          u'Exception'
-        value (stacktrace and type take precedence)
-          u'LARAVEL TEST'
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined:2019_04_07/logentry_prefers_message.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined:2019_04_07/logentry_prefers_message.pysnap
deleted file mode 100644
index 20c3e8b47b..0000000000
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined:2019_04_07/logentry_prefers_message.pysnap
+++ /dev/null
@@ -1,11 +0,0 @@
----
-created: '2019-04-07T10:03:31.473459Z'
-creator: sentry
-source: tests/sentry/grouping/test_variants.py
----
-default:
-  hash: '8ec8bbc71eb6e2af7fbe5076a8534f96'
-  component:
-    default*
-      message*
-        u'Hello there %s!'
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined:2019_04_07/logentry_uses_formatted.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined:2019_04_07/logentry_uses_formatted.pysnap
deleted file mode 100644
index 1c29c1cff1..0000000000
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined:2019_04_07/logentry_uses_formatted.pysnap
+++ /dev/null
@@ -1,11 +0,0 @@
----
-created: '2019-04-07T10:03:31.480871Z'
-creator: sentry
-source: tests/sentry/grouping/test_variants.py
----
-default:
-  hash: '329b29efcf1f77067a063e34f56e7791'
-  component:
-    default*
-      message*
-        u'Hello there world!'
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined:2019_04_07/message_prefers_message.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined:2019_04_07/message_prefers_message.pysnap
deleted file mode 100644
index a3eb64af9d..0000000000
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined:2019_04_07/message_prefers_message.pysnap
+++ /dev/null
@@ -1,11 +0,0 @@
----
-created: '2019-04-07T10:03:31.488522Z'
-creator: sentry
-source: tests/sentry/grouping/test_variants.py
----
-default:
-  hash: '8ec8bbc71eb6e2af7fbe5076a8534f96'
-  component:
-    default*
-      message*
-        u'Hello there %s!'
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined:2019_04_07/message_uses_formatted.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined:2019_04_07/message_uses_formatted.pysnap
deleted file mode 100644
index b60a0d1bab..0000000000
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined:2019_04_07/message_uses_formatted.pysnap
+++ /dev/null
@@ -1,11 +0,0 @@
----
-created: '2019-04-07T10:03:31.495958Z'
-creator: sentry
-source: tests/sentry/grouping/test_variants.py
----
-default:
-  hash: 'd3f5e52d24e9c1eae5abe6c866cced63'
-  component:
-    default*
-      message*
-        u'Hello there Peter!'
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined:2019_04_07/minified_javascript.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined:2019_04_07/minified_javascript.pysnap
deleted file mode 100644
index 3f81d2607c..0000000000
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined:2019_04_07/minified_javascript.pysnap
+++ /dev/null
@@ -1,462 +0,0 @@
----
-created: '2019-04-07T10:03:31.513544Z'
-creator: sentry
-source: tests/sentry/grouping/test_variants.py
----
-app:
-  hash: None
-  component:
-    app (exception of system takes precedence)
-      exception (ignored because hash matches system variant)
-        stacktrace*
-          frame* (frame considered in-app because no frame is in-app)
-            module*
-              u'sentry/dist/vendor'
-            filename (module takes precedence)
-              u'/_static/5788ef38fefa0df624cb96af56fd1435/sentry/dist/vendor.js'
-            context-line (discarded because line too long)
-            function*
-              u'M'
-            lineno (function takes precedence)
-              172
-          frame* (frame considered in-app because no frame is in-app)
-            module*
-              u'sentry/dist/vendor'
-            filename (module takes precedence)
-              u'/_static/5788ef38fefa0df624cb96af56fd1435/sentry/dist/vendor.js'
-            context-line (discarded because line too long)
-            function*
-              u'S/<'
-            lineno (function takes precedence)
-              147
-          frame* (frame considered in-app because no frame is in-app)
-            module*
-              u'sentry/dist/vendor'
-            filename (module takes precedence)
-              u'/_static/5788ef38fefa0df624cb96af56fd1435/sentry/dist/vendor.js'
-            context-line (discarded because line too long)
-            function*
-              u'i'
-            lineno (function takes precedence)
-              147
-          frame* (frame considered in-app because no frame is in-app)
-            module*
-              u'sentry/dist/vendor'
-            filename (module takes precedence)
-              u'/_static/5788ef38fefa0df624cb96af56fd1435/sentry/dist/vendor.js'
-            context-line (discarded because line too long)
-            function*
-              u'b'
-            lineno (function takes precedence)
-              64
-          frame* (frame considered in-app because no frame is in-app)
-            module*
-              u'sentry/dist/vendor'
-            filename (module takes precedence)
-              u'/_static/5788ef38fefa0df624cb96af56fd1435/sentry/dist/vendor.js'
-            context-line (discarded because line too long)
-            function*
-              u'n'
-            lineno (function takes precedence)
-              64
-          frame* (frame considered in-app because no frame is in-app)
-            module*
-              u'sentry/dist/vendor'
-            filename (module takes precedence)
-              u'/_static/5788ef38fefa0df624cb96af56fd1435/sentry/dist/vendor.js'
-            context-line (discarded because line too long)
-            function*
-              u'g/</t[e]'
-            lineno (function takes precedence)
-              147
-          frame* (frame considered in-app because no frame is in-app)
-            module*
-              u'sentry/dist/vendor'
-            filename (module takes precedence)
-              u'/_static/5788ef38fefa0df624cb96af56fd1435/sentry/dist/vendor.js'
-            context-line (discarded because line too long)
-            function*
-              u'h/p._invoke</<'
-            lineno (function takes precedence)
-              147
-          frame* (frame considered in-app because no frame is in-app)
-            module*
-              u'sentry/dist/vendor'
-            filename (module takes precedence)
-              u'/_static/5788ef38fefa0df624cb96af56fd1435/sentry/dist/vendor.js'
-            context-line (discarded because line too long)
-            function*
-              u'W'
-            lineno (function takes precedence)
-              147
-          frame* (frame considered in-app because no frame is in-app)
-            module*
-              u'sentry/dist/app'
-            filename (module takes precedence)
-              u'/_static/5788ef38fefa0df624cb96af56fd1435/sentry/dist/app.js'
-            context-line (discarded because line too long)
-            function*
-              u'e/<'
-            lineno (function takes precedence)
-              1
-          frame* (frame considered in-app because no frame is in-app)
-            module*
-              u'sentry/dist/app'
-            filename (module takes precedence)
-              u'/_static/5788ef38fefa0df624cb96af56fd1435/sentry/dist/app.js'
-            context-line (discarded because line too long)
-            function*
-              u'e/</a</<'
-            lineno (function takes precedence)
-              1
-          frame* (frame considered in-app because no frame is in-app)
-            module*
-              u'sentry/dist/vendor'
-            filename (module takes precedence)
-              u'/_static/5788ef38fefa0df624cb96af56fd1435/sentry/dist/vendor.js'
-            context-line (discarded because line too long)
-            function*
-              u't.exports/<'
-            lineno (function takes precedence)
-              64
-          frame* (frame considered in-app because no frame is in-app)
-            module*
-              u'sentry/dist/vendor'
-            filename (module takes precedence)
-              u'/_static/5788ef38fefa0df624cb96af56fd1435/sentry/dist/vendor.js'
-            context-line (discarded because line too long)
-            function*
-              u'L'
-            lineno (function takes precedence)
-              147
-          frame* (frame considered in-app because no frame is in-app)
-            module*
-              u'sentry/dist/vendor'
-            filename (module takes precedence)
-              u'/_static/5788ef38fefa0df624cb96af56fd1435/sentry/dist/vendor.js'
-            context-line (discarded because line too long)
-            function*
-              u't.exports/</<'
-            lineno (function takes precedence)
-              64
-          frame* (frame considered in-app because no frame is in-app)
-            module*
-              u'sentry/dist/vendor'
-            filename (module takes precedence)
-              u'/_static/5788ef38fefa0df624cb96af56fd1435/sentry/dist/vendor.js'
-            context-line (discarded because line too long)
-            function*
-              u'c'
-            lineno (function takes precedence)
-              64
-          frame* (frame considered in-app because no frame is in-app)
-            module*
-              u'sentry/dist/vendor'
-            filename (module takes precedence)
-              u'/_static/5788ef38fefa0df624cb96af56fd1435/sentry/dist/vendor.js'
-            context-line (discarded because line too long)
-            function*
-              u'n'
-            lineno (function takes precedence)
-              64
-          frame* (frame considered in-app because no frame is in-app)
-            module*
-              u'sentry/dist/vendor'
-            filename (module takes precedence)
-              u'/_static/5788ef38fefa0df624cb96af56fd1435/sentry/dist/vendor.js'
-            context-line (discarded because line too long)
-            function*
-              u'g/</t[e]'
-            lineno (function takes precedence)
-              147
-          frame* (frame considered in-app because no frame is in-app)
-            module*
-              u'sentry/dist/vendor'
-            filename (module takes precedence)
-              u'/_static/5788ef38fefa0df624cb96af56fd1435/sentry/dist/vendor.js'
-            context-line (discarded because line too long)
-            function*
-              u'h/p._invoke</<'
-            lineno (function takes precedence)
-              147
-          frame* (frame considered in-app because no frame is in-app)
-            module*
-              u'sentry/dist/vendor'
-            filename (module takes precedence)
-              u'/_static/5788ef38fefa0df624cb96af56fd1435/sentry/dist/vendor.js'
-            context-line (discarded because line too long)
-            function*
-              u'W'
-            lineno (function takes precedence)
-              147
-          frame* (frame considered in-app because no frame is in-app)
-            module*
-              u'sentry/dist/app'
-            filename (module takes precedence)
-              u'/_static/5788ef38fefa0df624cb96af56fd1435/sentry/dist/app.js'
-            context-line (discarded because line too long)
-            function*
-              u'e/<'
-            lineno (function takes precedence)
-              1
-          frame* (frame considered in-app because no frame is in-app)
-            module*
-              u'sentry/dist/app'
-            filename (module takes precedence)
-              u'/_static/5788ef38fefa0df624cb96af56fd1435/sentry/dist/app.js'
-            context-line (discarded because line too long)
-            function*
-              u'componentPromise'
-            lineno (function takes precedence)
-              1
-          frame* (frame considered in-app because no frame is in-app)
-            module*
-              u'sentry/dist/app'
-            filename (module takes precedence)
-              u'/_static/5788ef38fefa0df624cb96af56fd1435/sentry/dist/app.js'
-            context-line (discarded because line too long)
-            function*
-              u'o.e'
-            lineno (function takes precedence)
-              1
-          frame* (frame considered in-app because no frame is in-app)
-            module*
-              u'sentry/dist/vendor'
-            filename (module takes precedence)
-              u'/_static/5788ef38fefa0df624cb96af56fd1435/sentry/dist/vendor.js'
-            context-line (discarded because line too long)
-            function*
-              u'Pt</t.prototype.wrapTimeFunction/<'
-            lineno (function takes precedence)
-              14
-        type*
-          u'NS_ERROR_NOT_INITIALIZED'
---------------------------------------------------------------------------
-system:
-  hash: '074e2ed5d89f602d31be5742ac107fef'
-  component:
-    system*
-      exception*
-        stacktrace*
-          frame*
-            module*
-              u'sentry/dist/vendor'
-            filename (module takes precedence)
-              u'/_static/5788ef38fefa0df624cb96af56fd1435/sentry/dist/vendor.js'
-            context-line (discarded because line too long)
-            function*
-              u'M'
-            lineno (function takes precedence)
-              172
-          frame*
-            module*
-              u'sentry/dist/vendor'
-            filename (module takes precedence)
-              u'/_static/5788ef38fefa0df624cb96af56fd1435/sentry/dist/vendor.js'
-            context-line (discarded because line too long)
-            function*
-              u'S/<'
-            lineno (function takes precedence)
-              147
-          frame*
-            module*
-              u'sentry/dist/vendor'
-            filename (module takes precedence)
-              u'/_static/5788ef38fefa0df624cb96af56fd1435/sentry/dist/vendor.js'
-            context-line (discarded because line too long)
-            function*
-              u'i'
-            lineno (function takes precedence)
-              147
-          frame*
-            module*
-              u'sentry/dist/vendor'
-            filename (module takes precedence)
-              u'/_static/5788ef38fefa0df624cb96af56fd1435/sentry/dist/vendor.js'
-            context-line (discarded because line too long)
-            function*
-              u'b'
-            lineno (function takes precedence)
-              64
-          frame*
-            module*
-              u'sentry/dist/vendor'
-            filename (module takes precedence)
-              u'/_static/5788ef38fefa0df624cb96af56fd1435/sentry/dist/vendor.js'
-            context-line (discarded because line too long)
-            function*
-              u'n'
-            lineno (function takes precedence)
-              64
-          frame*
-            module*
-              u'sentry/dist/vendor'
-            filename (module takes precedence)
-              u'/_static/5788ef38fefa0df624cb96af56fd1435/sentry/dist/vendor.js'
-            context-line (discarded because line too long)
-            function*
-              u'g/</t[e]'
-            lineno (function takes precedence)
-              147
-          frame*
-            module*
-              u'sentry/dist/vendor'
-            filename (module takes precedence)
-              u'/_static/5788ef38fefa0df624cb96af56fd1435/sentry/dist/vendor.js'
-            context-line (discarded because line too long)
-            function*
-              u'h/p._invoke</<'
-            lineno (function takes precedence)
-              147
-          frame*
-            module*
-              u'sentry/dist/vendor'
-            filename (module takes precedence)
-              u'/_static/5788ef38fefa0df624cb96af56fd1435/sentry/dist/vendor.js'
-            context-line (discarded because line too long)
-            function*
-              u'W'
-            lineno (function takes precedence)
-              147
-          frame*
-            module*
-              u'sentry/dist/app'
-            filename (module takes precedence)
-              u'/_static/5788ef38fefa0df624cb96af56fd1435/sentry/dist/app.js'
-            context-line (discarded because line too long)
-            function*
-              u'e/<'
-            lineno (function takes precedence)
-              1
-          frame*
-            module*
-              u'sentry/dist/app'
-            filename (module takes precedence)
-              u'/_static/5788ef38fefa0df624cb96af56fd1435/sentry/dist/app.js'
-            context-line (discarded because line too long)
-            function*
-              u'e/</a</<'
-            lineno (function takes precedence)
-              1
-          frame*
-            module*
-              u'sentry/dist/vendor'
-            filename (module takes precedence)
-              u'/_static/5788ef38fefa0df624cb96af56fd1435/sentry/dist/vendor.js'
-            context-line (discarded because line too long)
-            function*
-              u't.exports/<'
-            lineno (function takes precedence)
-              64
-          frame*
-            module*
-              u'sentry/dist/vendor'
-            filename (module takes precedence)
-              u'/_static/5788ef38fefa0df624cb96af56fd1435/sentry/dist/vendor.js'
-            context-line (discarded because line too long)
-            function*
-              u'L'
-            lineno (function takes precedence)
-              147
-          frame*
-            module*
-              u'sentry/dist/vendor'
-            filename (module takes precedence)
-              u'/_static/5788ef38fefa0df624cb96af56fd1435/sentry/dist/vendor.js'
-            context-line (discarded because line too long)
-            function*
-              u't.exports/</<'
-            lineno (function takes precedence)
-              64
-          frame*
-            module*
-              u'sentry/dist/vendor'
-            filename (module takes precedence)
-              u'/_static/5788ef38fefa0df624cb96af56fd1435/sentry/dist/vendor.js'
-            context-line (discarded because line too long)
-            function*
-              u'c'
-            lineno (function takes precedence)
-              64
-          frame*
-            module*
-              u'sentry/dist/vendor'
-            filename (module takes precedence)
-              u'/_static/5788ef38fefa0df624cb96af56fd1435/sentry/dist/vendor.js'
-            context-line (discarded because line too long)
-            function*
-              u'n'
-            lineno (function takes precedence)
-              64
-          frame*
-            module*
-              u'sentry/dist/vendor'
-            filename (module takes precedence)
-              u'/_static/5788ef38fefa0df624cb96af56fd1435/sentry/dist/vendor.js'
-            context-line (discarded because line too long)
-            function*
-              u'g/</t[e]'
-            lineno (function takes precedence)
-              147
-          frame*
-            module*
-              u'sentry/dist/vendor'
-            filename (module takes precedence)
-              u'/_static/5788ef38fefa0df624cb96af56fd1435/sentry/dist/vendor.js'
-            context-line (discarded because line too long)
-            function*
-              u'h/p._invoke</<'
-            lineno (function takes precedence)
-              147
-          frame*
-            module*
-              u'sentry/dist/vendor'
-            filename (module takes precedence)
-              u'/_static/5788ef38fefa0df624cb96af56fd1435/sentry/dist/vendor.js'
-            context-line (discarded because line too long)
-            function*
-              u'W'
-            lineno (function takes precedence)
-              147
-          frame*
-            module*
-              u'sentry/dist/app'
-            filename (module takes precedence)
-              u'/_static/5788ef38fefa0df624cb96af56fd1435/sentry/dist/app.js'
-            context-line (discarded because line too long)
-            function*
-              u'e/<'
-            lineno (function takes precedence)
-              1
-          frame*
-            module*
-              u'sentry/dist/app'
-            filename (module takes precedence)
-              u'/_static/5788ef38fefa0df624cb96af56fd1435/sentry/dist/app.js'
-            context-line (discarded because line too long)
-            function*
-              u'componentPromise'
-            lineno (function takes precedence)
-              1
-          frame*
-            module*
-              u'sentry/dist/app'
-            filename (module takes precedence)
-              u'/_static/5788ef38fefa0df624cb96af56fd1435/sentry/dist/app.js'
-            context-line (discarded because line too long)
-            function*
-              u'o.e'
-            lineno (function takes precedence)
-              1
-          frame*
-            module*
-              u'sentry/dist/vendor'
-            filename (module takes precedence)
-              u'/_static/5788ef38fefa0df624cb96af56fd1435/sentry/dist/vendor.js'
-            context-line (discarded because line too long)
-            function*
-              u'Pt</t.prototype.wrapTimeFunction/<'
-            lineno (function takes precedence)
-              14
-        type*
-          u'NS_ERROR_NOT_INITIALIZED'
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined:2019_04_07/native_complex_function_names.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined:2019_04_07/native_complex_function_names.pysnap
deleted file mode 100644
index df8cd94d10..0000000000
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined:2019_04_07/native_complex_function_names.pysnap
+++ /dev/null
@@ -1,34 +0,0 @@
----
-created: '2019-04-07T10:03:31.522541Z'
-creator: sentry
-source: tests/sentry/grouping/test_variants.py
----
-app:
-  hash: None
-  component:
-    app (exception of system takes precedence)
-      exception
-        stacktrace
-          frame (non app frame)
-            function* (isolated function)
-              u'Scaleform::GFx::IME::GImeNamesManagerVista::OnActivated'
-          frame (non app frame)
-            function* (isolated function)
-              u'Scaleform::GFx::AS3::IMEManager::DispatchEvent'
-        type (ignored because exception is synthetic)
-          u'log_demo'
---------------------------------------------------------------------------
-system:
-  hash: '9b78cced1eefcd0c655a0a3d8ce2cdd2'
-  component:
-    system*
-      exception*
-        stacktrace*
-          frame*
-            function* (isolated function)
-              u'Scaleform::GFx::IME::GImeNamesManagerVista::OnActivated'
-          frame*
-            function* (isolated function)
-              u'Scaleform::GFx::AS3::IMEManager::DispatchEvent'
-        type (ignored because exception is synthetic)
-          u'log_demo'
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined:2019_04_07/native_no_filenames.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined:2019_04_07/native_no_filenames.pysnap
deleted file mode 100644
index 96f57adc6d..0000000000
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined:2019_04_07/native_no_filenames.pysnap
+++ /dev/null
@@ -1,106 +0,0 @@
----
-created: '2019-04-07T10:03:31.534504Z'
-creator: sentry
-source: tests/sentry/grouping/test_variants.py
----
-app:
-  hash: '418120a66f7031923031f5c52aca0724'
-  component:
-    app*
-      exception*
-        stacktrace*
-          frame*
-            function*
-              u'_main'
-          frame (non app frame)
-            function*
-              u'std::rt::lang_start'
-          frame (non app frame)
-            function*
-              u'std::rt::lang_start_internal'
-          frame*
-            function*
-              u'___rust_maybe_catch_panic'
-          frame (non app frame)
-            function*
-              u'std::panicking::try::do_call'
-          frame (non app frame)
-            function*
-              u'std::rt::lang_start::{{closure}}'
-          frame*
-            function*
-              u'log_demo::main'
-          frame*
-            function*
-              u'log::__private_api_log'
-          frame (non app frame)
-            function*
-              u'<sentry::integrations::log::Logger as log::Log>::log'
-          frame (non app frame)
-            function*
-              u'sentry::hub::Hub::with_active'
-          frame (non app frame)
-            function*
-              u'sentry::hub::Hub::with'
-          frame (non app frame)
-            function*
-              u'sentry::hub::Hub::with_active::{{closure}}'
-          frame (non app frame)
-            function (ignored unknown function)
-              u'<unknown>'
-          frame (non app frame)
-            function (ignored unknown function)
-              u'<redacted>'
-        type (ignored because exception is synthetic)
-          u'log_demo'
---------------------------------------------------------------------------
-system:
-  hash: '06f8f02638bc75df5a5c88712055ee5f'
-  component:
-    system*
-      exception*
-        stacktrace*
-          frame*
-            function*
-              u'_main'
-          frame*
-            function*
-              u'std::rt::lang_start'
-          frame*
-            function*
-              u'std::rt::lang_start_internal'
-          frame*
-            function*
-              u'___rust_maybe_catch_panic'
-          frame*
-            function*
-              u'std::panicking::try::do_call'
-          frame*
-            function*
-              u'std::rt::lang_start::{{closure}}'
-          frame*
-            function*
-              u'log_demo::main'
-          frame*
-            function*
-              u'log::__private_api_log'
-          frame*
-            function*
-              u'<sentry::integrations::log::Logger as log::Log>::log'
-          frame*
-            function*
-              u'sentry::hub::Hub::with_active'
-          frame*
-            function*
-              u'sentry::hub::Hub::with'
-          frame*
-            function*
-              u'sentry::hub::Hub::with_active::{{closure}}'
-          frame
-            function (ignored unknown function)
-              u'<unknown>'
-          frame
-            function (ignored unknown function)
-              u'<redacted>'
-        type (ignored because exception is synthetic)
-          u'log_demo'
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined:2019_04_07/node_exception_weird.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined:2019_04_07/node_exception_weird.pysnap
deleted file mode 100644
index 9e5dd9dacb..0000000000
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined:2019_04_07/node_exception_weird.pysnap
+++ /dev/null
@@ -1,238 +0,0 @@
----
-created: '2019-04-07T10:03:31.547922Z'
-creator: sentry
-source: tests/sentry/grouping/test_variants.py
----
-app:
-  hash: 'bc6bc0f8bfa8a2fe5f0e4034384bfec1'
-  component:
-    app*
-      exception*
-        stacktrace*
-          frame*
-            module*
-              u'hub'
-            filename (module takes precedence)
-              u'/home/travis/build/getsentry/sentry-javascript/packages/hub/dist/hub.js'
-            context-line*
-              u'     */'
-            function (function name is used only if module or filename are available)
-              u'Hub.Object.<anonymous>.Hub.withScope'
-            lineno (line number is used only if module or filename are available)
-              171
-          frame*
-            module*
-              u'onunhandledrejection.ts'
-            filename (module takes precedence)
-              u'/home/travis/build/getsentry/sentry-javascript/packages/node/src/integrations/onunhandledrejection.ts'
-            function*
-              u'null.<anonymous>'
-            lineno (function takes precedence)
-              808
-          frame (non app frame)
-            module*
-              u'jest-mock.build:index'
-            filename (module takes precedence)
-              u'/home/travis/build/getsentry/sentry-javascript/node_modules/jest-mock/build/index.js'
-            context-line*
-              u'        return fn.apply(this, arguments);'
-            function (function name is used only if module or filename are available)
-              u'Hub.mockConstructor [as captureException]'
-            lineno (line number is used only if module or filename are available)
-              150
-          frame (non app frame)
-            module*
-              u'jest-mock.build:index'
-            filename (module takes precedence)
-              u'/home/travis/build/getsentry/sentry-javascript/node_modules/jest-mock/build/index.js'
-            context-line*
-              u'          })();'
-            function (function name is used only if module or filename are available)
-              u'Hub.<anonymous>'
-            lineno (line number is used only if module or filename are available)
-              446
-          frame (non app frame)
-            module*
-              u'jest-mock.build:index'
-            filename (module takes precedence)
-              u'/home/travis/build/getsentry/sentry-javascript/node_modules/jest-mock/build/index.js'
-            context-line*
-              u'                return specificMockImpl.apply(this, arguments);'
-            function (function name is used only if module or filename are available)
-              u'finalReturnValue'
-            lineno (line number is used only if module or filename are available)
-              437
-          frame (non app frame)
-            module*
-              u'jest-mock.build:index'
-            filename (module takes precedence)
-              u'/home/travis/build/getsentry/sentry-javascript/node_modules/jest-mock/build/index.js'
-            context-line*
-              u'        return original.apply(this, arguments);'
-            function (function name is used only if module or filename are available)
-              u'Hub.<anonymous>'
-            lineno (line number is used only if module or filename are available)
-              806
-          frame*
-            module*
-              u'hub.ts'
-            filename (module takes precedence)
-              u'/home/travis/build/getsentry/sentry-javascript/packages/hub/src/hub.ts'
-            context-line*
-              u'    if (maxBreadcrumbs <= 0) {'
-            function (function name is used only if module or filename are available)
-              u'Hub.Object.<anonymous>.Hub.captureException'
-            lineno (line number is used only if module or filename are available)
-              255
-          frame*
-            module*
-              u'hub'
-            filename (module takes precedence)
-              u'/home/travis/build/getsentry/sentry-javascript/packages/hub/dist/hub.js'
-            context-line*
-              u'     * @returns Scope, the new cloned scope'
-            function (function name is used only if module or filename are available)
-              u'Hub.Object.<anonymous>.Hub.invokeClient'
-            lineno (line number is used only if module or filename are available)
-              91
-          frame*
-            module*
-              u'baseclient.ts'
-            filename (module takes precedence)
-              u'/home/travis/build/getsentry/sentry-javascript/packages/core/src/baseclient.ts'
-            context-line*
-              u'    promisedEvent'
-            function (function name is used only if module or filename are available)
-              u'NodeClient.Object.<anonymous>.BaseClient.captureException'
-            lineno (line number is used only if module or filename are available)
-              110
-          frame*
-            module*
-              u'backend.ts'
-            filename (module takes precedence)
-              u'/home/travis/build/getsentry/sentry-javascript/packages/node/src/backend.ts'
-            function*
-              u'NodeBackend.Object.<anonymous>.NodeBackend.eventFromException'
-            lineno (function takes precedence)
-              2093
-        type*
-          u'Error'
-        value (stacktrace and type take precedence)
-          u'bla'
---------------------------------------------------------------------------
-system:
-  hash: '6a3275e56067560bf20cb311f724f897'
-  component:
-    system*
-      exception*
-        stacktrace*
-          frame*
-            module*
-              u'hub'
-            filename (module takes precedence)
-              u'/home/travis/build/getsentry/sentry-javascript/packages/hub/dist/hub.js'
-            context-line*
-              u'     */'
-            function (function name is used only if module or filename are available)
-              u'Hub.Object.<anonymous>.Hub.withScope'
-            lineno (line number is used only if module or filename are available)
-              171
-          frame*
-            module*
-              u'onunhandledrejection.ts'
-            filename (module takes precedence)
-              u'/home/travis/build/getsentry/sentry-javascript/packages/node/src/integrations/onunhandledrejection.ts'
-            function*
-              u'null.<anonymous>'
-            lineno (function takes precedence)
-              808
-          frame*
-            module*
-              u'jest-mock.build:index'
-            filename (module takes precedence)
-              u'/home/travis/build/getsentry/sentry-javascript/node_modules/jest-mock/build/index.js'
-            context-line*
-              u'        return fn.apply(this, arguments);'
-            function (function name is used only if module or filename are available)
-              u'Hub.mockConstructor [as captureException]'
-            lineno (line number is used only if module or filename are available)
-              150
-          frame*
-            module*
-              u'jest-mock.build:index'
-            filename (module takes precedence)
-              u'/home/travis/build/getsentry/sentry-javascript/node_modules/jest-mock/build/index.js'
-            context-line*
-              u'          })();'
-            function (function name is used only if module or filename are available)
-              u'Hub.<anonymous>'
-            lineno (line number is used only if module or filename are available)
-              446
-          frame*
-            module*
-              u'jest-mock.build:index'
-            filename (module takes precedence)
-              u'/home/travis/build/getsentry/sentry-javascript/node_modules/jest-mock/build/index.js'
-            context-line*
-              u'                return specificMockImpl.apply(this, arguments);'
-            function (function name is used only if module or filename are available)
-              u'finalReturnValue'
-            lineno (line number is used only if module or filename are available)
-              437
-          frame*
-            module*
-              u'jest-mock.build:index'
-            filename (module takes precedence)
-              u'/home/travis/build/getsentry/sentry-javascript/node_modules/jest-mock/build/index.js'
-            context-line*
-              u'        return original.apply(this, arguments);'
-            function (function name is used only if module or filename are available)
-              u'Hub.<anonymous>'
-            lineno (line number is used only if module or filename are available)
-              806
-          frame*
-            module*
-              u'hub.ts'
-            filename (module takes precedence)
-              u'/home/travis/build/getsentry/sentry-javascript/packages/hub/src/hub.ts'
-            context-line*
-              u'    if (maxBreadcrumbs <= 0) {'
-            function (function name is used only if module or filename are available)
-              u'Hub.Object.<anonymous>.Hub.captureException'
-            lineno (line number is used only if module or filename are available)
-              255
-          frame*
-            module*
-              u'hub'
-            filename (module takes precedence)
-              u'/home/travis/build/getsentry/sentry-javascript/packages/hub/dist/hub.js'
-            context-line*
-              u'     * @returns Scope, the new cloned scope'
-            function (function name is used only if module or filename are available)
-              u'Hub.Object.<anonymous>.Hub.invokeClient'
-            lineno (line number is used only if module or filename are available)
-              91
-          frame*
-            module*
-              u'baseclient.ts'
-            filename (module takes precedence)
-              u'/home/travis/build/getsentry/sentry-javascript/packages/core/src/baseclient.ts'
-            context-line*
-              u'    promisedEvent'
-            function (function name is used only if module or filename are available)
-              u'NodeClient.Object.<anonymous>.BaseClient.captureException'
-            lineno (line number is used only if module or filename are available)
-              110
-          frame*
-            module*
-              u'backend.ts'
-            filename (module takes precedence)
-              u'/home/travis/build/getsentry/sentry-javascript/packages/node/src/backend.ts'
-            function*
-              u'NodeBackend.Object.<anonymous>.NodeBackend.eventFromException'
-            lineno (function takes precedence)
-              2093
-        type*
-          u'Error'
-        value (stacktrace and type take precedence)
-          u'bla'
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined:2019_04_07/python_exception_base.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined:2019_04_07/python_exception_base.pysnap
deleted file mode 100644
index 47d55a13b0..0000000000
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined:2019_04_07/python_exception_base.pysnap
+++ /dev/null
@@ -1,60 +0,0 @@
----
-created: '2019-04-07T10:03:31.557389Z'
-creator: sentry
-source: tests/sentry/grouping/test_variants.py
----
-app:
-  hash: None
-  component:
-    app (exception of system takes precedence)
-      chained-exception (ignored because hash matches system variant)
-        exception*
-          stacktrace*
-            frame* (frame considered in-app because no frame is in-app)
-              filename*
-                u'foo/baz.py'
-              lineno*
-                1
-          type*
-            u'ValueError'
-          value (stacktrace and type take precedence)
-            u'hello world'
-        exception*
-          stacktrace*
-            frame* (frame considered in-app because no frame is in-app)
-              filename*
-                u'foo/baz.py'
-              lineno*
-                1
-          type*
-            u'ValueError'
-          value (stacktrace and type take precedence)
-            u'hello world'
---------------------------------------------------------------------------
-system:
-  hash: '9aef9026a457d312531c07644b271314'
-  component:
-    system*
-      chained-exception*
-        exception*
-          stacktrace*
-            frame*
-              filename*
-                u'foo/baz.py'
-              lineno*
-                1
-          type*
-            u'ValueError'
-          value (stacktrace and type take precedence)
-            u'hello world'
-        exception*
-          stacktrace*
-            frame*
-              filename*
-                u'foo/baz.py'
-              lineno*
-                1
-          type*
-            u'ValueError'
-          value (stacktrace and type take precedence)
-            u'hello world'
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined:2019_04_07/python_http_error.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined:2019_04_07/python_http_error.pysnap
deleted file mode 100644
index 72ff6e44a8..0000000000
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined:2019_04_07/python_http_error.pysnap
+++ /dev/null
@@ -1,99 +0,0 @@
----
-created: '2019-04-07T10:03:31.566737Z'
-creator: sentry
-source: tests/sentry/grouping/test_variants.py
----
-app:
-  hash: '55b71821bccfe62d0df089e2f406c651'
-  component:
-    app*
-      exception*
-        stacktrace*
-          frame*
-            module*
-              u'sentry.utils.safe'
-            filename (module takes precedence)
-              u'sentry/utils/safe.py'
-            context-line*
-              u'                result = func(*args, **kwargs)'
-            function (function name is used only if module or filename are available)
-              u'safe_execute'
-            lineno (line number is used only if module or filename are available)
-              29
-          frame*
-            module*
-              u'sentry.integrations.slack.notify_action'
-            filename (module takes precedence)
-              u'sentry/integrations/slack/notify_action.py'
-            context-line*
-              u'            resp.raise_for_status()'
-            function (function name is used only if module or filename are available)
-              u'send_notification'
-            lineno (line number is used only if module or filename are available)
-              119
-          frame (non app frame)
-            module*
-              u'requests.models'
-            filename (module takes precedence)
-              u'requests/models.py'
-            context-line*
-              u'            raise HTTPError(http_error_msg, response=self)'
-            function (function name is used only if module or filename are available)
-              u'raise_for_status'
-            lineno (line number is used only if module or filename are available)
-              940
-        type*
-          u'HTTPError'
-        value (stacktrace and type take precedence)
-          u'429 Client Error: Too Many Requests for url: https://slack.com/api/chat.postMessage'
---------------------------------------------------------------------------
-default:
-  hash: None
-  component:
-    default (exception of app takes precedence)
-      message (exception of app takes precedence)
-        u'%s.process_error'
---------------------------------------------------------------------------
-system:
-  hash: 'a140a9ee6bbfb7ca9c21234dc287f2a6'
-  component:
-    system*
-      exception*
-        stacktrace*
-          frame*
-            module*
-              u'sentry.utils.safe'
-            filename (module takes precedence)
-              u'sentry/utils/safe.py'
-            context-line*
-              u'                result = func(*args, **kwargs)'
-            function (function name is used only if module or filename are available)
-              u'safe_execute'
-            lineno (line number is used only if module or filename are available)
-              29
-          frame*
-            module*
-              u'sentry.integrations.slack.notify_action'
-            filename (module takes precedence)
-              u'sentry/integrations/slack/notify_action.py'
-            context-line*
-              u'            resp.raise_for_status()'
-            function (function name is used only if module or filename are available)
-              u'send_notification'
-            lineno (line number is used only if module or filename are available)
-              119
-          frame*
-            module*
-              u'requests.models'
-            filename (module takes precedence)
-              u'requests/models.py'
-            context-line*
-              u'            raise HTTPError(http_error_msg, response=self)'
-            function (function name is used only if module or filename are available)
-              u'raise_for_status'
-            lineno (line number is used only if module or filename are available)
-              940
-        type*
-          u'HTTPError'
-        value (stacktrace and type take precedence)
-          u'429 Client Error: Too Many Requests for url: https://slack.com/api/chat.postMessage'
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined:2019_04_07/react_native.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined:2019_04_07/react_native.pysnap
deleted file mode 100644
index 110f319576..0000000000
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined:2019_04_07/react_native.pysnap
+++ /dev/null
@@ -1,494 +0,0 @@
----
-created: '2019-04-07T10:03:31.590097Z'
-creator: sentry
-source: tests/sentry/grouping/test_variants.py
----
-app:
-  hash: None
-  component:
-    app (exception of system takes precedence)
-      exception (ignored because this variant does not contain a stacktrace, but but the system variant does)
-        stacktrace (less than 10% of frames are in-app)
-          frame (non app frame)
-            module*
-              u'react-native/Libraries/BatchedBridge/MessageQueue'
-            filename (module takes precedence)
-              u'node_modules/react-native/Libraries/BatchedBridge/MessageQueue.js'
-            context-line*
-              u'    return this.flushedQueue();'
-            function (function name is used only if module or filename are available)
-              u'value'
-            lineno (line number is used only if module or filename are available)
-              119
-          frame (non app frame)
-            module*
-              u'react-native/Libraries/BatchedBridge/MessageQueue'
-            filename (module takes precedence)
-              u'node_modules/react-native/Libraries/BatchedBridge/MessageQueue.js'
-            context-line*
-              u'      this._inCall--;'
-            function (function name is used only if module or filename are available)
-              u'flushedQueue'
-            lineno (line number is used only if module or filename are available)
-              318
-          frame (non app frame)
-            module*
-              u'react-native/Libraries/BatchedBridge/MessageQueue'
-            filename (module takes precedence)
-              u'node_modules/react-native/Libraries/BatchedBridge/MessageQueue.js'
-            context-line*
-              u'    return this.flushedQueue();'
-            function (function name is used only if module or filename are available)
-              u'_inCall'
-            lineno (line number is used only if module or filename are available)
-              119
-          frame (non app frame)
-            module*
-              u'react-native/Libraries/BatchedBridge/MessageQueue'
-            filename (module takes precedence)
-              u'node_modules/react-native/Libraries/BatchedBridge/MessageQueue.js'
-            context-line*
-              u'    this._lastFlush = new Date().getTime();'
-            function (function name is used only if module or filename are available)
-              u'flushedQueue'
-            lineno (line number is used only if module or filename are available)
-              357
-          frame (non app frame)
-            module*
-              u'react-native/Libraries/Renderer/ReactNativeRenderer-prod'
-            filename (module takes precedence)
-              u'node_modules/react-native/Libraries/Renderer/ReactNativeRenderer-prod.js'
-            context-line*
-              u'      _receiveRootNodeIDEvent(index, eventTopLevelType, i);'
-            function (function name is used only if module or filename are available)
-              u'_lastFlush'
-            lineno (line number is used only if module or filename are available)
-              1160
-          frame (non app frame)
-            module*
-              u'react-native/Libraries/Renderer/ReactNativeRenderer-prod'
-            filename (module takes precedence)
-              u'node_modules/react-native/Libraries/Renderer/ReactNativeRenderer-prod.js'
-            context-line*
-              u'  batchedUpdates(function() {'
-            function (function name is used only if module or filename are available)
-              u'_receiveRootNodeIDEvent'
-            lineno (line number is used only if module or filename are available)
-              1095
-          frame (non app frame)
-            module*
-              u'react-native/Libraries/Renderer/ReactNativeRenderer-prod'
-            filename (module takes precedence)
-              u'node_modules/react-native/Libraries/Renderer/ReactNativeRenderer-prod.js'
-            context-line*
-              u'    return _batchedUpdates(fn, bookkeeping);'
-            function (function name is used only if module or filename are available)
-              u'batchedUpdates'
-            lineno (line number is used only if module or filename are available)
-              1054
-          frame (non app frame)
-            module*
-              u'react-native/Libraries/Renderer/ReactNativeRenderer-prod'
-            filename (module takes precedence)
-              u'node_modules/react-native/Libraries/Renderer/ReactNativeRenderer-prod.js'
-            context-line*
-              u'        return fn(a);'
-            function (function name is used only if module or filename are available)
-              u'_batchedUpdates'
-            lineno (line number is used only if module or filename are available)
-              5928
-          frame (non app frame)
-            module*
-              u'react-native/Libraries/Renderer/ReactNativeRenderer-prod'
-            filename (module takes precedence)
-              u'node_modules/react-native/Libraries/Renderer/ReactNativeRenderer-prod.js'
-            context-line*
-              u'      (forEachAccumulated(events, executeDispatchesAndReleaseTopLevel),'
-            function (function name is used only if module or filename are available)
-              u'fn'
-            lineno (line number is used only if module or filename are available)
-              1113
-          frame (non app frame)
-            module*
-              u'react-native/Libraries/Renderer/ReactNativeRenderer-prod'
-            filename (module takes precedence)
-              u'node_modules/react-native/Libraries/Renderer/ReactNativeRenderer-prod.js'
-            context-line*
-              u'  Array.isArray(arr) ? arr.forEach(cb, scope) : arr && cb.call(scope, arr);'
-            function (function name is used only if module or filename are available)
-              u'forEachAccumulated'
-            lineno (line number is used only if module or filename are available)
-              219
-          frame (non app frame)
-            function (function name is used only if module or filename are available)
-              u'[native code] forEach'
-          frame (non app frame)
-            module*
-              u'react-native/Libraries/Renderer/ReactNativeRenderer-prod'
-            filename (module takes precedence)
-              u'node_modules/react-native/Libraries/Renderer/ReactNativeRenderer-prod.js'
-            context-line*
-              u'        executeDispatch(e, !1, dispatchListeners, dispatchInstances);'
-            function (function name is used only if module or filename are available)
-              u'D'
-            lineno (line number is used only if module or filename are available)
-              235
-          frame (non app frame)
-            module*
-              u'react-native/Libraries/Renderer/ReactNativeRenderer-prod'
-            filename (module takes precedence)
-              u'node_modules/react-native/Libraries/Renderer/ReactNativeRenderer-prod.js'
-            context-line*
-              u'  ReactErrorUtils.invokeGuardedCallbackAndCatchFirstError('
-            function (function name is used only if module or filename are available)
-              u'executeDispatch'
-            lineno (line number is used only if module or filename are available)
-              181
-          frame (non app frame)
-            module*
-              u'react-native/Libraries/Renderer/ReactNativeRenderer-prod'
-            filename (module takes precedence)
-              u'node_modules/react-native/Libraries/Renderer/ReactNativeRenderer-prod.js'
-            context-line*
-              u'    ReactErrorUtils.invokeGuardedCallback.apply(this, arguments);'
-            function (function name is used only if module or filename are available)
-              u'invokeGuardedCallbackAndCatchFirstError'
-            lineno (line number is used only if module or filename are available)
-              54
-          frame (non app frame)
-            module*
-              u'react-native/Libraries/Renderer/ReactNativeRenderer-prod'
-            filename (module takes precedence)
-              u'node_modules/react-native/Libraries/Renderer/ReactNativeRenderer-prod.js'
-            context-line*
-              u'    invokeGuardedCallback.apply(ReactErrorUtils, arguments);'
-            function (function name is used only if module or filename are available)
-              u'apply'
-            lineno (line number is used only if module or filename are available)
-              41
-          frame (non app frame)
-            module*
-              u'react-native/Libraries/Renderer/ReactNativeRenderer-prod'
-            filename (module takes precedence)
-              u'node_modules/react-native/Libraries/Renderer/ReactNativeRenderer-prod.js'
-            context-line*
-              u'  var funcArgs = Array.prototype.slice.call(arguments, 3);'
-            function (function name is used only if module or filename are available)
-              u'apply'
-            lineno (line number is used only if module or filename are available)
-              28
-          frame (non app frame)
-            module*
-              u'react-native/Libraries/Components/Touchable/Touchable'
-            filename (module takes precedence)
-              u'node_modules/react-native/Libraries/Components/Touchable/Touchable.js'
-            context-line*
-              u'  touchableHandleResponderRelease: function(e) {'
-            function (function name is used only if module or filename are available)
-              u'arguments'
-            lineno (line number is used only if module or filename are available)
-              430
-          frame (non app frame)
-            module*
-              u'react-native/Libraries/Components/Touchable/Touchable'
-            filename (module takes precedence)
-              u'node_modules/react-native/Libraries/Components/Touchable/Touchable.js'
-            context-line*
-              u'      this._performSideEffectsForTransition(curState, nextState, signal, e);'
-            function (function name is used only if module or filename are available)
-              u'_receiveSignal'
-            lineno (line number is used only if module or filename are available)
-              662
-          frame (non app frame)
-            module*
-              u'react-native/Libraries/Components/Touchable/Touchable'
-            filename (module takes precedence)
-              u'node_modules/react-native/Libraries/Components/Touchable/Touchable.js'
-            context-line*
-              u'        this.touchableHandlePress(e);'
-            function (function name is used only if module or filename are available)
-              u'_performSideEffectsForTransition'
-            lineno (line number is used only if module or filename are available)
-              744
-          frame (non app frame)
-            module*
-              u'react-native/Libraries/Components/Touchable/TouchableNativeFeedback.android'
-            filename (module takes precedence)
-              u'node_modules/react-native/Libraries/Components/Touchable/TouchableNativeFeedback.android.js'
-            context-line*
-              u'    this.props.onPress && this.props.onPress(e);'
-            function (function name is used only if module or filename are available)
-              u'this'
-            lineno (line number is used only if module or filename are available)
-              175
-          frame*
-            module*
-              u'App'
-            filename (module takes precedence)
-              u'App.js'
-            context-line*
-              u'        <Button'
-            function (function name is used only if module or filename are available)
-              u'onPress'
-            lineno (line number is used only if module or filename are available)
-              143
-          frame*
-            module*
-              u'App'
-            filename (module takes precedence)
-              u'App.js'
-            context-line*
-              u'        <Button'
-            function (function name is used only if module or filename are available)
-              u'Button'
-            lineno (line number is used only if module or filename are available)
-              115
-        type*
-          u'TypeError'
-        value*
-          u"undefined is not a function (evaluating '({}).invalidFunction()')"
---------------------------------------------------------------------------
-system:
-  hash: 'f8f4d8cbe0c85758ed193d0f5d9955b3'
-  component:
-    system*
-      exception*
-        stacktrace*
-          frame*
-            module*
-              u'react-native/Libraries/BatchedBridge/MessageQueue'
-            filename (module takes precedence)
-              u'node_modules/react-native/Libraries/BatchedBridge/MessageQueue.js'
-            context-line*
-              u'    return this.flushedQueue();'
-            function (function name is used only if module or filename are available)
-              u'value'
-            lineno (line number is used only if module or filename are available)
-              119
-          frame*
-            module*
-              u'react-native/Libraries/BatchedBridge/MessageQueue'
-            filename (module takes precedence)
-              u'node_modules/react-native/Libraries/BatchedBridge/MessageQueue.js'
-            context-line*
-              u'      this._inCall--;'
-            function (function name is used only if module or filename are available)
-              u'flushedQueue'
-            lineno (line number is used only if module or filename are available)
-              318
-          frame*
-            module*
-              u'react-native/Libraries/BatchedBridge/MessageQueue'
-            filename (module takes precedence)
-              u'node_modules/react-native/Libraries/BatchedBridge/MessageQueue.js'
-            context-line*
-              u'    return this.flushedQueue();'
-            function (function name is used only if module or filename are available)
-              u'_inCall'
-            lineno (line number is used only if module or filename are available)
-              119
-          frame*
-            module*
-              u'react-native/Libraries/BatchedBridge/MessageQueue'
-            filename (module takes precedence)
-              u'node_modules/react-native/Libraries/BatchedBridge/MessageQueue.js'
-            context-line*
-              u'    this._lastFlush = new Date().getTime();'
-            function (function name is used only if module or filename are available)
-              u'flushedQueue'
-            lineno (line number is used only if module or filename are available)
-              357
-          frame*
-            module*
-              u'react-native/Libraries/Renderer/ReactNativeRenderer-prod'
-            filename (module takes precedence)
-              u'node_modules/react-native/Libraries/Renderer/ReactNativeRenderer-prod.js'
-            context-line*
-              u'      _receiveRootNodeIDEvent(index, eventTopLevelType, i);'
-            function (function name is used only if module or filename are available)
-              u'_lastFlush'
-            lineno (line number is used only if module or filename are available)
-              1160
-          frame*
-            module*
-              u'react-native/Libraries/Renderer/ReactNativeRenderer-prod'
-            filename (module takes precedence)
-              u'node_modules/react-native/Libraries/Renderer/ReactNativeRenderer-prod.js'
-            context-line*
-              u'  batchedUpdates(function() {'
-            function (function name is used only if module or filename are available)
-              u'_receiveRootNodeIDEvent'
-            lineno (line number is used only if module or filename are available)
-              1095
-          frame*
-            module*
-              u'react-native/Libraries/Renderer/ReactNativeRenderer-prod'
-            filename (module takes precedence)
-              u'node_modules/react-native/Libraries/Renderer/ReactNativeRenderer-prod.js'
-            context-line*
-              u'    return _batchedUpdates(fn, bookkeeping);'
-            function (function name is used only if module or filename are available)
-              u'batchedUpdates'
-            lineno (line number is used only if module or filename are available)
-              1054
-          frame*
-            module*
-              u'react-native/Libraries/Renderer/ReactNativeRenderer-prod'
-            filename (module takes precedence)
-              u'node_modules/react-native/Libraries/Renderer/ReactNativeRenderer-prod.js'
-            context-line*
-              u'        return fn(a);'
-            function (function name is used only if module or filename are available)
-              u'_batchedUpdates'
-            lineno (line number is used only if module or filename are available)
-              5928
-          frame*
-            module*
-              u'react-native/Libraries/Renderer/ReactNativeRenderer-prod'
-            filename (module takes precedence)
-              u'node_modules/react-native/Libraries/Renderer/ReactNativeRenderer-prod.js'
-            context-line*
-              u'      (forEachAccumulated(events, executeDispatchesAndReleaseTopLevel),'
-            function (function name is used only if module or filename are available)
-              u'fn'
-            lineno (line number is used only if module or filename are available)
-              1113
-          frame*
-            module*
-              u'react-native/Libraries/Renderer/ReactNativeRenderer-prod'
-            filename (module takes precedence)
-              u'node_modules/react-native/Libraries/Renderer/ReactNativeRenderer-prod.js'
-            context-line*
-              u'  Array.isArray(arr) ? arr.forEach(cb, scope) : arr && cb.call(scope, arr);'
-            function (function name is used only if module or filename are available)
-              u'forEachAccumulated'
-            lineno (line number is used only if module or filename are available)
-              219
-          frame
-            function (function name is used only if module or filename are available)
-              u'[native code] forEach'
-          frame*
-            module*
-              u'react-native/Libraries/Renderer/ReactNativeRenderer-prod'
-            filename (module takes precedence)
-              u'node_modules/react-native/Libraries/Renderer/ReactNativeRenderer-prod.js'
-            context-line*
-              u'        executeDispatch(e, !1, dispatchListeners, dispatchInstances);'
-            function (function name is used only if module or filename are available)
-              u'D'
-            lineno (line number is used only if module or filename are available)
-              235
-          frame*
-            module*
-              u'react-native/Libraries/Renderer/ReactNativeRenderer-prod'
-            filename (module takes precedence)
-              u'node_modules/react-native/Libraries/Renderer/ReactNativeRenderer-prod.js'
-            context-line*
-              u'  ReactErrorUtils.invokeGuardedCallbackAndCatchFirstError('
-            function (function name is used only if module or filename are available)
-              u'executeDispatch'
-            lineno (line number is used only if module or filename are available)
-              181
-          frame*
-            module*
-              u'react-native/Libraries/Renderer/ReactNativeRenderer-prod'
-            filename (module takes precedence)
-              u'node_modules/react-native/Libraries/Renderer/ReactNativeRenderer-prod.js'
-            context-line*
-              u'    ReactErrorUtils.invokeGuardedCallback.apply(this, arguments);'
-            function (function name is used only if module or filename are available)
-              u'invokeGuardedCallbackAndCatchFirstError'
-            lineno (line number is used only if module or filename are available)
-              54
-          frame*
-            module*
-              u'react-native/Libraries/Renderer/ReactNativeRenderer-prod'
-            filename (module takes precedence)
-              u'node_modules/react-native/Libraries/Renderer/ReactNativeRenderer-prod.js'
-            context-line*
-              u'    invokeGuardedCallback.apply(ReactErrorUtils, arguments);'
-            function (function name is used only if module or filename are available)
-              u'apply'
-            lineno (line number is used only if module or filename are available)
-              41
-          frame*
-            module*
-              u'react-native/Libraries/Renderer/ReactNativeRenderer-prod'
-            filename (module takes precedence)
-              u'node_modules/react-native/Libraries/Renderer/ReactNativeRenderer-prod.js'
-            context-line*
-              u'  var funcArgs = Array.prototype.slice.call(arguments, 3);'
-            function (function name is used only if module or filename are available)
-              u'apply'
-            lineno (line number is used only if module or filename are available)
-              28
-          frame*
-            module*
-              u'react-native/Libraries/Components/Touchable/Touchable'
-            filename (module takes precedence)
-              u'node_modules/react-native/Libraries/Components/Touchable/Touchable.js'
-            context-line*
-              u'  touchableHandleResponderRelease: function(e) {'
-            function (function name is used only if module or filename are available)
-              u'arguments'
-            lineno (line number is used only if module or filename are available)
-              430
-          frame*
-            module*
-              u'react-native/Libraries/Components/Touchable/Touchable'
-            filename (module takes precedence)
-              u'node_modules/react-native/Libraries/Components/Touchable/Touchable.js'
-            context-line*
-              u'      this._performSideEffectsForTransition(curState, nextState, signal, e);'
-            function (function name is used only if module or filename are available)
-              u'_receiveSignal'
-            lineno (line number is used only if module or filename are available)
-              662
-          frame*
-            module*
-              u'react-native/Libraries/Components/Touchable/Touchable'
-            filename (module takes precedence)
-              u'node_modules/react-native/Libraries/Components/Touchable/Touchable.js'
-            context-line*
-              u'        this.touchableHandlePress(e);'
-            function (function name is used only if module or filename are available)
-              u'_performSideEffectsForTransition'
-            lineno (line number is used only if module or filename are available)
-              744
-          frame*
-            module*
-              u'react-native/Libraries/Components/Touchable/TouchableNativeFeedback.android'
-            filename (module takes precedence)
-              u'node_modules/react-native/Libraries/Components/Touchable/TouchableNativeFeedback.android.js'
-            context-line*
-              u'    this.props.onPress && this.props.onPress(e);'
-            function (function name is used only if module or filename are available)
-              u'this'
-            lineno (line number is used only if module or filename are available)
-              175
-          frame*
-            module*
-              u'App'
-            filename (module takes precedence)
-              u'App.js'
-            context-line*
-              u'        <Button'
-            function (function name is used only if module or filename are available)
-              u'onPress'
-            lineno (line number is used only if module or filename are available)
-              143
-          frame*
-            module*
-              u'App'
-            filename (module takes precedence)
-              u'App.js'
-            context-line*
-              u'        <Button'
-            function (function name is used only if module or filename are available)
-              u'Button'
-            lineno (line number is used only if module or filename are available)
-              115
-        type*
-          u'TypeError'
-        value (stacktrace and type take precedence)
-          u"undefined is not a function (evaluating '({}).invalidFunction()')"
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined:2019_04_07/stacktrace_cocoa.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined:2019_04_07/stacktrace_cocoa.pysnap
deleted file mode 100644
index 34fcc05cf7..0000000000
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined:2019_04_07/stacktrace_cocoa.pysnap
+++ /dev/null
@@ -1,28 +0,0 @@
----
-created: '2019-04-07T10:03:31.598442Z'
-creator: sentry
-source: tests/sentry/grouping/test_variants.py
----
-app:
-  hash: 'eb416f98479efa56a77c524602dc9979'
-  component:
-    app*
-      stacktrace*
-        frame*
-          filename*
-            u'bar.m'
-        frame (non app frame)
-          filename*
-            u'baz.m'
---------------------------------------------------------------------------
-system:
-  hash: '1df786c8c266506e1acb6669c8df5154'
-  component:
-    system*
-      stacktrace*
-        frame*
-          filename*
-            u'bar.m'
-        frame*
-          filename*
-            u'baz.m'
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined:2019_04_07/stacktrace_collapse_recursion.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined:2019_04_07/stacktrace_collapse_recursion.pysnap
deleted file mode 100644
index b6f017f8c9..0000000000
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined:2019_04_07/stacktrace_collapse_recursion.pysnap
+++ /dev/null
@@ -1,142 +0,0 @@
----
-created: '2019-04-07T10:03:31.608784Z'
-creator: sentry
-source: tests/sentry/grouping/test_variants.py
----
-app:
-  hash: None
-  component:
-    app (stacktrace of system takes precedence)
-      stacktrace (ignored because hash matches system variant)
-        frame* (frame considered in-app because no frame is in-app)
-          module*
-            u'io.sentry.example.Application'
-          filename (module takes precedence)
-            u'Application.java'
-          function*
-            u'main'
-          lineno (function takes precedence)
-            13
-        frame* (frame considered in-app because no frame is in-app)
-          module*
-            u'io.sentry.example.Application'
-          filename (module takes precedence)
-            u'Application.java'
-          function*
-            u'normalFunc'
-          lineno (function takes precedence)
-            20
-        frame* (frame considered in-app because no frame is in-app)
-          module*
-            u'io.sentry.example.Application'
-          filename (module takes precedence)
-            u'Application.java'
-          function*
-            u'recurFunc'
-          lineno (function takes precedence)
-            27
-        frame (ignored due to recursion)
-          module*
-            u'io.sentry.example.Application'
-          filename (module takes precedence)
-            u'Application.java'
-          function*
-            u'recurFunc'
-          lineno (function takes precedence)
-            27
-        frame (ignored due to recursion)
-          module*
-            u'io.sentry.example.Application'
-          filename (module takes precedence)
-            u'Application.java'
-          function*
-            u'recurFunc'
-          lineno (function takes precedence)
-            27
-        frame* (frame considered in-app because no frame is in-app)
-          module*
-            u'io.sentry.example.Application'
-          filename (module takes precedence)
-            u'Application.java'
-          function*
-            u'recurFunc'
-          lineno (function takes precedence)
-            25
-        frame* (frame considered in-app because no frame is in-app)
-          module*
-            u'io.sentry.example.Application'
-          filename (module takes precedence)
-            u'Application.java'
-          function*
-            u'throwError'
-          lineno (function takes precedence)
-            32
---------------------------------------------------------------------------
-system:
-  hash: '894c3489e2ade384dc107bca6829d134'
-  component:
-    system*
-      stacktrace*
-        frame*
-          module*
-            u'io.sentry.example.Application'
-          filename (module takes precedence)
-            u'Application.java'
-          function*
-            u'main'
-          lineno (function takes precedence)
-            13
-        frame*
-          module*
-            u'io.sentry.example.Application'
-          filename (module takes precedence)
-            u'Application.java'
-          function*
-            u'normalFunc'
-          lineno (function takes precedence)
-            20
-        frame*
-          module*
-            u'io.sentry.example.Application'
-          filename (module takes precedence)
-            u'Application.java'
-          function*
-            u'recurFunc'
-          lineno (function takes precedence)
-            27
-        frame (ignored due to recursion)
-          module*
-            u'io.sentry.example.Application'
-          filename (module takes precedence)
-            u'Application.java'
-          function*
-            u'recurFunc'
-          lineno (function takes precedence)
-            27
-        frame (ignored due to recursion)
-          module*
-            u'io.sentry.example.Application'
-          filename (module takes precedence)
-            u'Application.java'
-          function*
-            u'recurFunc'
-          lineno (function takes precedence)
-            27
-        frame*
-          module*
-            u'io.sentry.example.Application'
-          filename (module takes precedence)
-            u'Application.java'
-          function*
-            u'recurFunc'
-          lineno (function takes precedence)
-            25
-        frame*
-          module*
-            u'io.sentry.example.Application'
-          filename (module takes precedence)
-            u'Application.java'
-          function*
-            u'throwError'
-          lineno (function takes precedence)
-            32
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined:2019_04_07/stacktrace_compute_hashes.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined:2019_04_07/stacktrace_compute_hashes.pysnap
deleted file mode 100644
index 53d5a82398..0000000000
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined:2019_04_07/stacktrace_compute_hashes.pysnap
+++ /dev/null
@@ -1,36 +0,0 @@
----
-created: '2019-04-07T10:03:31.617317Z'
-creator: sentry
-source: tests/sentry/grouping/test_variants.py
----
-app:
-  hash: 'fbad177f80c1eff3bd6b252e09576292'
-  component:
-    app*
-      stacktrace*
-        frame*
-          filename*
-            u'a/foo.py'
-          lineno*
-            1
-        frame (non app frame)
-          filename*
-            u'a/bar.py'
-          lineno*
-            1
---------------------------------------------------------------------------
-system:
-  hash: '06d370794820bec071005bf2e589d247'
-  component:
-    system*
-      stacktrace*
-        frame*
-          filename*
-            u'a/foo.py'
-          lineno*
-            1
-        frame*
-          filename*
-            u'a/bar.py'
-          lineno*
-            1
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined:2019_04_07/stacktrace_discards_seemingly_useless_stack.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined:2019_04_07/stacktrace_discards_seemingly_useless_stack.pysnap
deleted file mode 100644
index 704892acb1..0000000000
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined:2019_04_07/stacktrace_discards_seemingly_useless_stack.pysnap
+++ /dev/null
@@ -1,31 +0,0 @@
----
-created: '2019-04-07T10:03:31.625402Z'
-creator: sentry
-source: tests/sentry/grouping/test_variants.py
----
-app:
-  hash: None
-  component:
-    app
-      stacktrace (ignored single frame stack)
-        frame (non app frame)
-          filename (ignored because filename is a URL)
-            u'foo'
-          context-line (discarded because from URL origin)
-          lineno (line number is used only if module or filename are available)
-            1
---------------------------------------------------------------------------
-fallback:
-  hash: 'd41d8cd98f00b204e9800998ecf8427e'
---------------------------------------------------------------------------
-system:
-  hash: None
-  component:
-    system
-      stacktrace (ignored single frame stack)
-        frame
-          filename (ignored because filename is a URL)
-            u'foo'
-          context-line (discarded because from URL origin)
-          lineno (line number is used only if module or filename are available)
-            1
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined:2019_04_07/stacktrace_does_not_discard_non_urls.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined:2019_04_07/stacktrace_does_not_discard_non_urls.pysnap
deleted file mode 100644
index 59a43e8bc6..0000000000
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined:2019_04_07/stacktrace_does_not_discard_non_urls.pysnap
+++ /dev/null
@@ -1,30 +0,0 @@
----
-created: '2019-04-07T10:03:31.633429Z'
-creator: sentry
-source: tests/sentry/grouping/test_variants.py
----
-app:
-  hash: None
-  component:
-    app (stacktrace of system takes precedence)
-      stacktrace (ignored because hash matches system variant)
-        frame* (frame considered in-app because no frame is in-app)
-          filename*
-            u'foo'
-          context-line*
-            u'<HTML>'
-          lineno (line number is used only if module or filename are available)
-            1
---------------------------------------------------------------------------
-system:
-  hash: '9b478586e7375aef8bedb80ae2fcaab7'
-  component:
-    system*
-      stacktrace*
-        frame*
-          filename*
-            u'foo'
-          context-line*
-            u'<HTML>'
-          lineno (line number is used only if module or filename are available)
-            1
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined:2019_04_07/stacktrace_does_not_group_different_js_errors.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined:2019_04_07/stacktrace_does_not_group_different_js_errors.pysnap
deleted file mode 100644
index c62da4bad2..0000000000
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined:2019_04_07/stacktrace_does_not_group_different_js_errors.pysnap
+++ /dev/null
@@ -1,31 +0,0 @@
----
-created: '2019-04-07T10:03:31.641600Z'
-creator: sentry
-source: tests/sentry/grouping/test_variants.py
----
-app:
-  hash: None
-  component:
-    app
-      stacktrace (ignored single frame stack)
-        frame (non app frame)
-          filename (ignored because filename is a URL)
-            u'/index.js'
-          context-line (discarded because from URL origin)
-          lineno (line number is used only if module or filename are available)
-            20
---------------------------------------------------------------------------
-fallback:
-  hash: 'd41d8cd98f00b204e9800998ecf8427e'
---------------------------------------------------------------------------
-system:
-  hash: None
-  component:
-    system
-      stacktrace (ignored single frame stack)
-        frame
-          filename (ignored because filename is a URL)
-            u'/index.js'
-          context-line (discarded because from URL origin)
-          lineno (line number is used only if module or filename are available)
-            20
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined:2019_04_07/stacktrace_excludes_single_frame_urls.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined:2019_04_07/stacktrace_excludes_single_frame_urls.pysnap
deleted file mode 100644
index 421d5268ca..0000000000
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined:2019_04_07/stacktrace_excludes_single_frame_urls.pysnap
+++ /dev/null
@@ -1,35 +0,0 @@
----
-created: '2019-04-07T10:03:31.649772Z'
-creator: sentry
-source: tests/sentry/grouping/test_variants.py
----
-app:
-  hash: None
-  component:
-    app
-      stacktrace (ignored single frame stack)
-        frame (non app frame)
-          module*
-            u'<unknown module>'
-          filename (module takes precedence)
-            u'/bar/'
-          context-line (discarded because from URL origin)
-          lineno*
-            107
---------------------------------------------------------------------------
-fallback:
-  hash: 'd41d8cd98f00b204e9800998ecf8427e'
---------------------------------------------------------------------------
-system:
-  hash: None
-  component:
-    system
-      stacktrace (ignored single frame stack)
-        frame*
-          module*
-            u'<unknown module>'
-          filename (module takes precedence)
-            u'/bar/'
-          context-line (discarded because from URL origin)
-          lineno*
-            107
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined:2019_04_07/stacktrace_hash_without_system_frames.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined:2019_04_07/stacktrace_hash_without_system_frames.pysnap
deleted file mode 100644
index 947a868be8..0000000000
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined:2019_04_07/stacktrace_hash_without_system_frames.pysnap
+++ /dev/null
@@ -1,36 +0,0 @@
----
-created: '2019-04-07T10:03:31.658705Z'
-creator: sentry
-source: tests/sentry/grouping/test_variants.py
----
-app:
-  hash: '19fcc04a0c59eaf564ee1a00c58574cc'
-  component:
-    app*
-      stacktrace*
-        frame*
-          filename*
-            u'foo.py'
-          lineno*
-            1
-        frame (non app frame)
-          filename*
-            u'bar.py'
-          lineno*
-            1
---------------------------------------------------------------------------
-system:
-  hash: '3aa7e7dacc3a98cf8316a226c4485053'
-  component:
-    system*
-      stacktrace*
-        frame*
-          filename*
-            u'foo.py'
-          lineno*
-            1
-        frame*
-          filename*
-            u'bar.py'
-          lineno*
-            1
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined:2019_04_07/stacktrace_ignores_singular_anonymous_frame.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined:2019_04_07/stacktrace_ignores_singular_anonymous_frame.pysnap
deleted file mode 100644
index 5180f92d82..0000000000
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined:2019_04_07/stacktrace_ignores_singular_anonymous_frame.pysnap
+++ /dev/null
@@ -1,53 +0,0 @@
----
-created: '2019-04-07T10:03:31.667889Z'
-creator: sentry
-source: tests/sentry/grouping/test_variants.py
----
-app:
-  hash: None
-  component:
-    app
-      stacktrace
-        frame (frame considered in-app because no frame is in-app)
-          filename (anonymous filename discarded)
-            u'<anonymous>'
-        frame (frame considered in-app because no frame is in-app)
-          filename (ignored because filename is a URL)
-            u'/C:/Users/redacted/AppData/Local/redacted/app-2.4.1/resources/app.asar/dojo/dojo.js'
-          function (function name is used only if module or filename are available)
-            u'c'
-          lineno (line number is used only if module or filename are available)
-            1188
-        frame (frame considered in-app because no frame is in-app)
-          filename (ignored because filename is a URL)
-            u'/C:/Users/redacted/AppData/Local/redacted/app-2.4.1/resources/app.asar/dojo/dojo.js'
-          function (function name is used only if module or filename are available)
-            u'Object._createDocumentViewModel'
-          lineno (line number is used only if module or filename are available)
-            1184
---------------------------------------------------------------------------
-fallback:
-  hash: 'd41d8cd98f00b204e9800998ecf8427e'
---------------------------------------------------------------------------
-system:
-  hash: None
-  component:
-    system
-      stacktrace
-        frame
-          filename (anonymous filename discarded)
-            u'<anonymous>'
-        frame
-          filename (ignored because filename is a URL)
-            u'/C:/Users/redacted/AppData/Local/redacted/app-2.4.1/resources/app.asar/dojo/dojo.js'
-          function (function name is used only if module or filename are available)
-            u'c'
-          lineno (line number is used only if module or filename are available)
-            1188
-        frame
-          filename (ignored because filename is a URL)
-            u'/C:/Users/redacted/AppData/Local/redacted/app-2.4.1/resources/app.asar/dojo/dojo.js'
-          function (function name is used only if module or filename are available)
-            u'Object._createDocumentViewModel'
-          lineno (line number is used only if module or filename are available)
-            1184
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined:2019_04_07/stacktrace_rust.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined:2019_04_07/stacktrace_rust.pysnap
deleted file mode 100644
index 5f049eaa2c..0000000000
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined:2019_04_07/stacktrace_rust.pysnap
+++ /dev/null
@@ -1,64 +0,0 @@
----
-created: '2019-04-07T12:50:18.036682Z'
-creator: sentry
-source: tests/sentry/grouping/test_variants.py
----
-app:
-  hash: 'eb87c1031dba55b67df86fb9fff59dc6'
-  component:
-    app*
-      exception*
-        stacktrace*
-          frame (non app frame)
-            function*
-              u'_main'
-          frame (non app frame)
-            function*
-              u'std::rt::lang_start_internal'
-          frame (non app frame)
-            function*
-              u'___rust_maybe_catch_panic'
-          frame (non app frame)
-            function*
-              u'std::panicking::try::do_call'
-          frame (non app frame)
-            function*
-              u'std::rt::lang_start::{{closure}}'
-          frame* (marked in-app by grouping enhancement rule)
-            function*
-              u'log_demo::main'
-          frame (non app frame)
-            function*
-              u'log::__private_api_log'
-        type*
-          u'log_demo'
---------------------------------------------------------------------------
-system:
-  hash: 'e0b4eea234ff891472cb927c00153bbe'
-  component:
-    system*
-      exception*
-        stacktrace*
-          frame*
-            function*
-              u'_main'
-          frame*
-            function*
-              u'std::rt::lang_start_internal'
-          frame*
-            function*
-              u'___rust_maybe_catch_panic'
-          frame*
-            function*
-              u'std::panicking::try::do_call'
-          frame*
-            function*
-              u'std::rt::lang_start::{{closure}}'
-          frame* (marked in-app by grouping enhancement rule)
-            function*
-              u'log_demo::main'
-          frame*
-            function*
-              u'log::__private_api_log'
-        type*
-          u'log_demo'
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined:2019_04_07/stacktrace_rust2.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined:2019_04_07/stacktrace_rust2.pysnap
deleted file mode 100644
index 25d9a8b5a3..0000000000
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined:2019_04_07/stacktrace_rust2.pysnap
+++ /dev/null
@@ -1,64 +0,0 @@
----
-created: '2019-04-07T13:12:37.272426Z'
-creator: sentry
-source: tests/sentry/grouping/test_variants.py
----
-app:
-  hash: 'eb87c1031dba55b67df86fb9fff59dc6'
-  component:
-    app*
-      exception*
-        stacktrace*
-          frame (non app frame)
-            function*
-              u'_main'
-          frame (non app frame)
-            function*
-              u'std::rt::lang_start_internal'
-          frame (non app frame)
-            function*
-              u'___rust_maybe_catch_panic'
-          frame (non app frame)
-            function*
-              u'std::panicking::try::do_call'
-          frame (non app frame)
-            function*
-              u'std::rt::lang_start::{{closure}}'
-          frame* (marked in-app by grouping enhancement rule)
-            function*
-              u'log_demo::main'
-          frame (non app frame)
-            function*
-              u'log::__private_api_log'
-        type*
-          u'log_demo'
---------------------------------------------------------------------------
-system:
-  hash: '9b33b65a645c66239cafcd276fcd0659'
-  component:
-    system*
-      exception*
-        stacktrace*
-          frame*
-            function*
-              u'_main'
-          frame*
-            function*
-              u'std::rt::lang_start_internal'
-          frame (ignored by grouping enhancement rule)
-            function*
-              u'___rust_maybe_catch_panic'
-          frame*
-            function*
-              u'std::panicking::try::do_call'
-          frame*
-            function*
-              u'std::rt::lang_start::{{closure}}'
-          frame* (marked in-app by grouping enhancement rule)
-            function*
-              u'log_demo::main'
-          frame (ignored by grouping enhancement rule)
-            function*
-              u'log::__private_api_log'
-        type*
-          u'log_demo'
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined:2019_04_07/stacktrace_with_minimal_app_frames.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined:2019_04_07/stacktrace_with_minimal_app_frames.pysnap
deleted file mode 100644
index fc06bf4b19..0000000000
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined:2019_04_07/stacktrace_with_minimal_app_frames.pysnap
+++ /dev/null
@@ -1,136 +0,0 @@
----
-created: '2019-04-07T10:03:31.710297Z'
-creator: sentry
-source: tests/sentry/grouping/test_variants.py
----
-app:
-  hash: None
-  component:
-    app (stacktrace of system takes precedence)
-      stacktrace (less than 10% of frames are in-app)
-        frame*
-          filename*
-            u'foo.py'
-          lineno*
-            1
-        frame (non app frame)
-          filename*
-            u'bar.py'
-          lineno*
-            1
-        frame (non app frame)
-          filename*
-            u'bar.py'
-          lineno*
-            1
-        frame (non app frame)
-          filename*
-            u'bar.py'
-          lineno*
-            1
-        frame (non app frame)
-          filename*
-            u'bar.py'
-          lineno*
-            1
-        frame (non app frame)
-          filename*
-            u'bar.py'
-          lineno*
-            1
-        frame (non app frame)
-          filename*
-            u'bar.py'
-          lineno*
-            1
-        frame (non app frame)
-          filename*
-            u'bar.py'
-          lineno*
-            1
-        frame (non app frame)
-          filename*
-            u'bar.py'
-          lineno*
-            1
-        frame (non app frame)
-          filename*
-            u'bar.py'
-          lineno*
-            1
-        frame (non app frame)
-          filename*
-            u'bar.py'
-          lineno*
-            1
-        frame (non app frame)
-          filename*
-            u'bar.py'
-          lineno*
-            1
---------------------------------------------------------------------------
-system:
-  hash: '3aa7e7dacc3a98cf8316a226c4485053'
-  component:
-    system*
-      stacktrace*
-        frame*
-          filename*
-            u'foo.py'
-          lineno*
-            1
-        frame*
-          filename*
-            u'bar.py'
-          lineno*
-            1
-        frame (ignored due to recursion)
-          filename*
-            u'bar.py'
-          lineno*
-            1
-        frame (ignored due to recursion)
-          filename*
-            u'bar.py'
-          lineno*
-            1
-        frame (ignored due to recursion)
-          filename*
-            u'bar.py'
-          lineno*
-            1
-        frame (ignored due to recursion)
-          filename*
-            u'bar.py'
-          lineno*
-            1
-        frame (ignored due to recursion)
-          filename*
-            u'bar.py'
-          lineno*
-            1
-        frame (ignored due to recursion)
-          filename*
-            u'bar.py'
-          lineno*
-            1
-        frame (ignored due to recursion)
-          filename*
-            u'bar.py'
-          lineno*
-            1
-        frame (ignored due to recursion)
-          filename*
-            u'bar.py'
-          lineno*
-            1
-        frame (ignored due to recursion)
-          filename*
-            u'bar.py'
-          lineno*
-            1
-        frame (ignored due to recursion)
-          filename*
-            u'bar.py'
-          lineno*
-            1
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined:2019_04_07/template_compute_hashes.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined:2019_04_07/template_compute_hashes.pysnap
deleted file mode 100644
index ca78d79594..0000000000
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined:2019_04_07/template_compute_hashes.pysnap
+++ /dev/null
@@ -1,14 +0,0 @@
----
-created: '2019-04-07T10:03:31.718875Z'
-creator: sentry
-source: tests/sentry/grouping/test_variants.py
----
-default:
-  hash: '826f66ef602835f68030c04c634df320'
-  component:
-    default*
-      template*
-        filename*
-          u'foo.html'
-        context-line*
-          u'hello world'
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined:2019_04_07/threads_compute_hashes.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined:2019_04_07/threads_compute_hashes.pysnap
deleted file mode 100644
index 42f9427c2c..0000000000
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined:2019_04_07/threads_compute_hashes.pysnap
+++ /dev/null
@@ -1,32 +0,0 @@
----
-created: '2019-04-07T10:03:31.728531Z'
-creator: sentry
-source: tests/sentry/grouping/test_variants.py
----
-app:
-  hash: None
-  component:
-    app (threads of system takes precedence)
-      threads (ignored because hash matches system variant)
-        stacktrace*
-          frame* (frame considered in-app because no frame is in-app)
-            filename*
-              u'foo/baz.c'
-            function*
-              u'main'
-            lineno (function takes precedence)
-              1
---------------------------------------------------------------------------
-system:
-  hash: '39db5b4edf187e89cec12245e5c9fb3c'
-  component:
-    system*
-      threads*
-        stacktrace*
-          frame*
-            filename*
-              u'foo/baz.c'
-            function*
-              u'main'
-            lineno (function takes precedence)
-              1
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined:2019_04_07/threads_no_hash.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined:2019_04_07/threads_no_hash.pysnap
deleted file mode 100644
index 8f9699598f..0000000000
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined:2019_04_07/threads_no_hash.pysnap
+++ /dev/null
@@ -1,19 +0,0 @@
----
-created: '2019-04-07T10:03:31.736771Z'
-creator: sentry
-source: tests/sentry/grouping/test_variants.py
----
-app:
-  hash: None
-  component:
-    app
-      threads (ignored because contains 2 threads)
---------------------------------------------------------------------------
-fallback:
-  hash: 'd41d8cd98f00b204e9800998ecf8427e'
---------------------------------------------------------------------------
-system:
-  hash: None
-  component:
-    system
-      threads (ignored because contains 2 threads)
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy:2019_03_12/exception_compute_hashes.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy:2019_03_12/exception_compute_hashes.pysnap
index bdf8a30f6b..c545c94321 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy:2019_03_12/exception_compute_hashes.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy:2019_03_12/exception_compute_hashes.pysnap
@@ -1,5 +1,5 @@
 ---
-created: '2019-04-03T22:37:14.837619Z'
+created: '2019-03-14T17:12:36.983119Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
@@ -9,7 +9,7 @@ app:
     app (exception of system takes precedence)
       exception (ignored because hash matches system variant)
         stacktrace*
-          frame* (frame considered in-app because no frame is in-app)
+          frame*
             filename*
               u'foo/baz.py'
             lineno*
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy:2019_03_12/exception_compute_hashes_2.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy:2019_03_12/exception_compute_hashes_2.pysnap
index 83f6a39f93..55cb48c425 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy:2019_03_12/exception_compute_hashes_2.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy:2019_03_12/exception_compute_hashes_2.pysnap
@@ -1,5 +1,5 @@
 ---
-created: '2019-04-03T22:37:14.848447Z'
+created: '2019-03-14T17:12:36.992373Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
@@ -9,7 +9,7 @@ app:
     app (exception of system takes precedence)
       exception (ignored because hash matches system variant)
         stacktrace*
-          frame* (frame considered in-app because no frame is in-app)
+          frame*
             filename*
               u'foo/baz.py'
             lineno*
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy:2019_03_12/exception_compute_hashes_3.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy:2019_03_12/exception_compute_hashes_3.pysnap
index 267aa21487..b5145c70d5 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy:2019_03_12/exception_compute_hashes_3.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy:2019_03_12/exception_compute_hashes_3.pysnap
@@ -1,5 +1,5 @@
 ---
-created: '2019-04-03T22:37:14.859523Z'
+created: '2019-03-14T17:12:37.002186Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
@@ -10,7 +10,7 @@ app:
       chained-exception (ignored because hash matches system variant)
         exception*
           stacktrace*
-            frame* (frame considered in-app because no frame is in-app)
+            frame*
               filename*
                 u'foo/baz.py'
               lineno*
@@ -21,7 +21,7 @@ app:
             u'hello world'
         exception*
           stacktrace*
-            frame* (frame considered in-app because no frame is in-app)
+            frame*
               filename*
                 u'foo/baz.py'
               lineno*
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy:2019_03_12/python_exception_base.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy:2019_03_12/python_exception_base.pysnap
index ba1d7e9e79..e245ce4e15 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy:2019_03_12/python_exception_base.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy:2019_03_12/python_exception_base.pysnap
@@ -1,5 +1,5 @@
 ---
-created: '2019-04-03T22:37:15.346805Z'
+created: '2019-03-14T17:12:37.459025Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
@@ -10,7 +10,7 @@ app:
       chained-exception (ignored because hash matches system variant)
         exception*
           stacktrace*
-            frame* (frame considered in-app because no frame is in-app)
+            frame*
               filename*
                 u'foo/baz.py'
               lineno*
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy:2019_03_12/stacktrace_rust.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy:2019_03_12/stacktrace_rust.pysnap
deleted file mode 100644
index 22e8592027..0000000000
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy:2019_03_12/stacktrace_rust.pysnap
+++ /dev/null
@@ -1,68 +0,0 @@
----
-created: '2019-04-03T22:37:15.475204Z'
-creator: sentry
-source: tests/sentry/grouping/test_variants.py
----
-app:
-  hash: None
-  component:
-    app (exception of system takes precedence)
-      exception (ignored because hash matches system variant)
-        stacktrace
-          frame (non app frame)
-            function (function name is used only if module or filename are available)
-              u'_main'
-          frame (non app frame)
-            function (function name is used only if module or filename are available)
-              u'std::rt::lang_start_internal'
-          frame (non app frame)
-            function (function name is used only if module or filename are available)
-              u'___rust_maybe_catch_panic'
-          frame (non app frame)
-            function (function name is used only if module or filename are available)
-              u'std::panicking::try::do_call'
-          frame (non app frame)
-            function (function name is used only if module or filename are available)
-              u'std::rt::lang_start::{{closure}}'
-          frame
-            function (function name is used only if module or filename are available)
-              u'log_demo::main'
-          frame (non app frame)
-            function (function name is used only if module or filename are available)
-              u'log::__private_api_log'
-        type*
-          u'log_demo'
-        value*
-          u'Holy shit everything is on fire!'
---------------------------------------------------------------------------
-system:
-  hash: '3e0ae2ce25cce2fca3390f3416e6a82a'
-  component:
-    system*
-      exception*
-        stacktrace
-          frame
-            function (function name is used only if module or filename are available)
-              u'_main'
-          frame
-            function (function name is used only if module or filename are available)
-              u'std::rt::lang_start_internal'
-          frame
-            function (function name is used only if module or filename are available)
-              u'___rust_maybe_catch_panic'
-          frame
-            function (function name is used only if module or filename are available)
-              u'std::panicking::try::do_call'
-          frame
-            function (function name is used only if module or filename are available)
-              u'std::rt::lang_start::{{closure}}'
-          frame
-            function (function name is used only if module or filename are available)
-              u'log_demo::main'
-          frame
-            function (function name is used only if module or filename are available)
-              u'log::__private_api_log'
-        type*
-          u'log_demo'
-        value*
-          u'Holy shit everything is on fire!'
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy:2019_03_12/stacktrace_rust2.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy:2019_03_12/stacktrace_rust2.pysnap
deleted file mode 100644
index eb9b764e89..0000000000
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy:2019_03_12/stacktrace_rust2.pysnap
+++ /dev/null
@@ -1,68 +0,0 @@
----
-created: '2019-04-07T13:12:38.163514Z'
-creator: sentry
-source: tests/sentry/grouping/test_variants.py
----
-app:
-  hash: None
-  component:
-    app (exception of system takes precedence)
-      exception (ignored because hash matches system variant)
-        stacktrace
-          frame (non app frame)
-            function (function name is used only if module or filename are available)
-              u'_main'
-          frame (non app frame)
-            function (function name is used only if module or filename are available)
-              u'std::rt::lang_start_internal'
-          frame (non app frame)
-            function (function name is used only if module or filename are available)
-              u'___rust_maybe_catch_panic'
-          frame (non app frame)
-            function (function name is used only if module or filename are available)
-              u'std::panicking::try::do_call'
-          frame (non app frame)
-            function (function name is used only if module or filename are available)
-              u'std::rt::lang_start::{{closure}}'
-          frame
-            function (function name is used only if module or filename are available)
-              u'log_demo::main'
-          frame (non app frame)
-            function (function name is used only if module or filename are available)
-              u'log::__private_api_log'
-        type*
-          u'log_demo'
-        value*
-          u'Holy shit everything is on fire!'
---------------------------------------------------------------------------
-system:
-  hash: '3e0ae2ce25cce2fca3390f3416e6a82a'
-  component:
-    system*
-      exception*
-        stacktrace
-          frame
-            function (function name is used only if module or filename are available)
-              u'_main'
-          frame
-            function (function name is used only if module or filename are available)
-              u'std::rt::lang_start_internal'
-          frame
-            function (function name is used only if module or filename are available)
-              u'___rust_maybe_catch_panic'
-          frame
-            function (function name is used only if module or filename are available)
-              u'std::panicking::try::do_call'
-          frame
-            function (function name is used only if module or filename are available)
-              u'std::rt::lang_start::{{closure}}'
-          frame
-            function (function name is used only if module or filename are available)
-              u'log_demo::main'
-          frame
-            function (function name is used only if module or filename are available)
-              u'log::__private_api_log'
-        type*
-          u'log_demo'
-        value*
-          u'Holy shit everything is on fire!'
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy:2019_03_12/threads_compute_hashes.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy:2019_03_12/threads_compute_hashes.pysnap
index df395f33bd..0bd2881059 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy:2019_03_12/threads_compute_hashes.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/legacy:2019_03_12/threads_compute_hashes.pysnap
@@ -1,5 +1,5 @@
 ---
-created: '2019-04-03T22:37:15.506746Z'
+created: '2019-03-14T17:12:37.589685Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
@@ -9,7 +9,7 @@ app:
     app (threads of system takes precedence)
       threads (ignored because hash matches system variant)
         stacktrace*
-          frame* (frame considered in-app because no frame is in-app)
+          frame*
             filename*
               u'foo/baz.c'
             function*
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle:2019_04_05/actix.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/new:wip/actix.pysnap
similarity index 100%
rename from tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle:2019_04_05/actix.pysnap
rename to tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/new:wip/actix.pysnap
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle:2019_04_05/aspnetcore.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/new:wip/aspnetcore.pysnap
similarity index 100%
rename from tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle:2019_04_05/aspnetcore.pysnap
rename to tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/new:wip/aspnetcore.pysnap
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle:2019_04_05/connection_error.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/new:wip/connection_error.pysnap
similarity index 100%
rename from tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle:2019_04_05/connection_error.pysnap
rename to tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/new:wip/connection_error.pysnap
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle:2019_04_05/csp.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/new:wip/csp.pysnap
similarity index 100%
rename from tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle:2019_04_05/csp.pysnap
rename to tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/new:wip/csp.pysnap
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle:2019_04_05/csp_img_src.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/new:wip/csp_img_src.pysnap
similarity index 100%
rename from tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle:2019_04_05/csp_img_src.pysnap
rename to tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/new:wip/csp_img_src.pysnap
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle:2019_04_05/csp_no_blocked_uri.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/new:wip/csp_no_blocked_uri.pysnap
similarity index 100%
rename from tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle:2019_04_05/csp_no_blocked_uri.pysnap
rename to tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/new:wip/csp_no_blocked_uri.pysnap
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle:2019_04_05/csp_script_data_uri.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/new:wip/csp_script_data_uri.pysnap
similarity index 100%
rename from tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle:2019_04_05/csp_script_data_uri.pysnap
rename to tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/new:wip/csp_script_data_uri.pysnap
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle:2019_04_05/csp_script_src_uri.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/new:wip/csp_script_src_uri.pysnap
similarity index 100%
rename from tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle:2019_04_05/csp_script_src_uri.pysnap
rename to tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/new:wip/csp_script_src_uri.pysnap
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle:2019_04_05/csp_style_src_elem.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/new:wip/csp_style_src_elem.pysnap
similarity index 100%
rename from tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle:2019_04_05/csp_style_src_elem.pysnap
rename to tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/new:wip/csp_style_src_elem.pysnap
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle:2019_04_05/custom_fingerprint.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/new:wip/custom_fingerprint.pysnap
similarity index 100%
rename from tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle:2019_04_05/custom_fingerprint.pysnap
rename to tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/new:wip/custom_fingerprint.pysnap
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle:2019_04_05/empty.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/new:wip/empty.pysnap
similarity index 100%
rename from tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle:2019_04_05/empty.pysnap
rename to tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/new:wip/empty.pysnap
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle:2019_04_05/exception_comput_hashes.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/new:wip/exception_comput_hashes.pysnap
similarity index 100%
rename from tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle:2019_04_05/exception_comput_hashes.pysnap
rename to tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/new:wip/exception_comput_hashes.pysnap
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle:2019_04_05/exception_compute_hashes.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/new:wip/exception_compute_hashes.pysnap
similarity index 70%
rename from tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle:2019_04_05/exception_compute_hashes.pysnap
rename to tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/new:wip/exception_compute_hashes.pysnap
index e560507955..3319952631 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle:2019_04_05/exception_compute_hashes.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/new:wip/exception_compute_hashes.pysnap
@@ -1,15 +1,15 @@
 ---
-created: '2019-04-03T22:37:15.731313Z'
+created: '2019-03-15T11:58:32.789150Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: '5a2cfd89b7b171fd7b4794b08023d04f'
+  hash: None
   component:
-    app*
-      exception*
-        stacktrace
-          frame (non app frame)
+    app (exception of system takes precedence)
+      exception (ignored because hash matches system variant)
+        stacktrace*
+          frame*
             filename*
               u'baz.py'
         type*
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle:2019_04_05/exception_compute_hashes_2.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/new:wip/exception_compute_hashes_2.pysnap
similarity index 70%
rename from tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle:2019_04_05/exception_compute_hashes_2.pysnap
rename to tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/new:wip/exception_compute_hashes_2.pysnap
index 4d16a1dcf0..805a60163b 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle:2019_04_05/exception_compute_hashes_2.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/new:wip/exception_compute_hashes_2.pysnap
@@ -1,15 +1,15 @@
 ---
-created: '2019-04-03T22:37:15.741137Z'
+created: '2019-03-15T11:58:32.796674Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: '5a2cfd89b7b171fd7b4794b08023d04f'
+  hash: None
   component:
-    app*
-      exception*
-        stacktrace
-          frame (non app frame)
+    app (exception of system takes precedence)
+      exception (ignored because hash matches system variant)
+        stacktrace*
+          frame*
             filename*
               u'baz.py'
         type*
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle:2019_04_05/exception_compute_hashes_3.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/new:wip/exception_compute_hashes_3.pysnap
similarity index 75%
rename from tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle:2019_04_05/exception_compute_hashes_3.pysnap
rename to tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/new:wip/exception_compute_hashes_3.pysnap
index 5b9940b704..c9190a12c6 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle:2019_04_05/exception_compute_hashes_3.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/new:wip/exception_compute_hashes_3.pysnap
@@ -1,23 +1,23 @@
 ---
-created: '2019-04-03T22:37:15.751245Z'
+created: '2019-03-15T11:58:32.805460Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: '9c694b5c648e2e8a0822dcbd4c7f9c36'
+  hash: None
   component:
-    app*
-      chained-exception*
+    app (exception of system takes precedence)
+      chained-exception (ignored because hash matches system variant)
         exception*
-          stacktrace
-            frame (non app frame)
+          stacktrace*
+            frame*
               filename*
                 u'baz.py'
           type*
             u'ValueError'
         exception*
-          stacktrace
-            frame (non app frame)
+          stacktrace*
+            frame*
               filename*
                 u'baz.py'
           type*
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle:2019_04_05/exception_without_type.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/new:wip/exception_without_type.pysnap
similarity index 100%
rename from tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle:2019_04_05/exception_without_type.pysnap
rename to tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/new:wip/exception_without_type.pysnap
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle:2019_04_05/exception_without_value.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/new:wip/exception_without_value.pysnap
similarity index 100%
rename from tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle:2019_04_05/exception_without_value.pysnap
rename to tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/new:wip/exception_without_value.pysnap
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle:2019_04_05/expectct.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/new:wip/expectct.pysnap
similarity index 100%
rename from tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle:2019_04_05/expectct.pysnap
rename to tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/new:wip/expectct.pysnap
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle:2019_04_05/frame_comput_hashes_ignores_ENHANCED_clojure_classes.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/new:wip/frame_comput_hashes_ignores_ENHANCED_clojure_classes.pysnap
similarity index 100%
rename from tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle:2019_04_05/frame_comput_hashes_ignores_ENHANCED_clojure_classes.pysnap
rename to tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/new:wip/frame_comput_hashes_ignores_ENHANCED_clojure_classes.pysnap
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle:2019_04_05/frame_ignores_ENHANCED_spring_classes.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/new:wip/frame_ignores_ENHANCED_spring_classes.pysnap
similarity index 100%
rename from tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle:2019_04_05/frame_ignores_ENHANCED_spring_classes.pysnap
rename to tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/new:wip/frame_ignores_ENHANCED_spring_classes.pysnap
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle:2019_04_05/frame_ignores_extra_ENHANCED_clojure_classes.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/new:wip/frame_ignores_extra_ENHANCED_clojure_classes.pysnap
similarity index 100%
rename from tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle:2019_04_05/frame_ignores_extra_ENHANCED_clojure_classes.pysnap
rename to tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/new:wip/frame_ignores_extra_ENHANCED_clojure_classes.pysnap
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle:2019_04_05/frame_ignores_extra_ENHANCED_spring_classes.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/new:wip/frame_ignores_extra_ENHANCED_spring_classes.pysnap
similarity index 100%
rename from tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle:2019_04_05/frame_ignores_extra_ENHANCED_spring_classes.pysnap
rename to tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/new:wip/frame_ignores_extra_ENHANCED_spring_classes.pysnap
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle:2019_04_05/frame_ignores_filename_if_abs_path_is_http.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/new:wip/frame_ignores_filename_if_abs_path_is_http.pysnap
similarity index 100%
rename from tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle:2019_04_05/frame_ignores_filename_if_abs_path_is_http.pysnap
rename to tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/new:wip/frame_ignores_filename_if_abs_path_is_http.pysnap
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle:2019_04_05/frame_ignores_filename_if_blob.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/new:wip/frame_ignores_filename_if_blob.pysnap
similarity index 100%
rename from tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle:2019_04_05/frame_ignores_filename_if_blob.pysnap
rename to tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/new:wip/frame_ignores_filename_if_blob.pysnap
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle:2019_04_05/frame_ignores_filename_if_http.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/new:wip/frame_ignores_filename_if_http.pysnap
similarity index 100%
rename from tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle:2019_04_05/frame_ignores_filename_if_http.pysnap
rename to tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/new:wip/frame_ignores_filename_if_http.pysnap
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle:2019_04_05/frame_ignores_filename_if_https.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/new:wip/frame_ignores_filename_if_https.pysnap
similarity index 100%
rename from tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle:2019_04_05/frame_ignores_filename_if_https.pysnap
rename to tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/new:wip/frame_ignores_filename_if_https.pysnap
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle:2019_04_05/frame_ignores_java8_lambda_function.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/new:wip/frame_ignores_java8_lambda_function.pysnap
similarity index 100%
rename from tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle:2019_04_05/frame_ignores_java8_lambda_function.pysnap
rename to tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/new:wip/frame_ignores_java8_lambda_function.pysnap
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle:2019_04_05/frame_ignores_java8_lambda_module.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/new:wip/frame_ignores_java8_lambda_module.pysnap
similarity index 100%
rename from tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle:2019_04_05/frame_ignores_java8_lambda_module.pysnap
rename to tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/new:wip/frame_ignores_java8_lambda_module.pysnap
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle:2019_04_05/frame_ignores_javassist.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/new:wip/frame_ignores_javassist.pysnap
similarity index 100%
rename from tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle:2019_04_05/frame_ignores_javassist.pysnap
rename to tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/new:wip/frame_ignores_javassist.pysnap
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle:2019_04_05/frame_ignores_javassist_2.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/new:wip/frame_ignores_javassist_2.pysnap
similarity index 100%
rename from tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle:2019_04_05/frame_ignores_javassist_2.pysnap
rename to tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/new:wip/frame_ignores_javassist_2.pysnap
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle:2019_04_05/frame_ignores_javassist_3.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/new:wip/frame_ignores_javassist_3.pysnap
similarity index 100%
rename from tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle:2019_04_05/frame_ignores_javassist_3.pysnap
rename to tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/new:wip/frame_ignores_javassist_3.pysnap
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle:2019_04_05/frame_ignores_module_if_page_url.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/new:wip/frame_ignores_module_if_page_url.pysnap
similarity index 100%
rename from tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle:2019_04_05/frame_ignores_module_if_page_url.pysnap
rename to tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/new:wip/frame_ignores_module_if_page_url.pysnap
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle:2019_04_05/frame_ignores_module_if_page_url_2.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/new:wip/frame_ignores_module_if_page_url_2.pysnap
similarity index 100%
rename from tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle:2019_04_05/frame_ignores_module_if_page_url_2.pysnap
rename to tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/new:wip/frame_ignores_module_if_page_url_2.pysnap
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle:2019_04_05/frame_ignores_safari_native_code.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/new:wip/frame_ignores_safari_native_code.pysnap
similarity index 100%
rename from tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle:2019_04_05/frame_ignores_safari_native_code.pysnap
rename to tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/new:wip/frame_ignores_safari_native_code.pysnap
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle:2019_04_05/frame_ignores_sun_java_generated_constructors.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/new:wip/frame_ignores_sun_java_generated_constructors.pysnap
similarity index 100%
rename from tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle:2019_04_05/frame_ignores_sun_java_generated_constructors.pysnap
rename to tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/new:wip/frame_ignores_sun_java_generated_constructors.pysnap
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle:2019_04_05/frame_ignores_sun_java_generated_constructors_2.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/new:wip/frame_ignores_sun_java_generated_constructors_2.pysnap
similarity index 100%
rename from tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle:2019_04_05/frame_ignores_sun_java_generated_constructors_2.pysnap
rename to tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/new:wip/frame_ignores_sun_java_generated_constructors_2.pysnap
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle:2019_04_05/frame_ignores_sun_java_generated_methods.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/new:wip/frame_ignores_sun_java_generated_methods.pysnap
similarity index 100%
rename from tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle:2019_04_05/frame_ignores_sun_java_generated_methods.pysnap
rename to tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/new:wip/frame_ignores_sun_java_generated_methods.pysnap
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle:2019_04_05/frame_sanitizes_block_functions.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/new:wip/frame_sanitizes_block_functions.pysnap
similarity index 100%
rename from tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle:2019_04_05/frame_sanitizes_block_functions.pysnap
rename to tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/new:wip/frame_sanitizes_block_functions.pysnap
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined:2019_04_07/frame_sanitizes_erb_templates.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/new:wip/frame_sanitizes_erb_templates.pysnap
similarity index 66%
rename from tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined:2019_04_07/frame_sanitizes_erb_templates.pysnap
rename to tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/new:wip/frame_sanitizes_erb_templates.pysnap
index 9291c57b0a..0d499875a6 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/combined:2019_04_07/frame_sanitizes_erb_templates.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/new:wip/frame_sanitizes_erb_templates.pysnap
@@ -1,5 +1,5 @@
 ---
-created: '2019-04-07T10:03:31.278758Z'
+created: '2019-03-19T22:59:40.922214Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
@@ -7,11 +7,11 @@ app:
   hash: None
   component:
     app (stacktrace of system takes precedence)
-      stacktrace (ignored because hash matches system variant)
-        frame* (frame considered in-app because no frame is in-app)
+      stacktrace
+        frame (non app frame)
           filename*
             u'foo.html.erb'
-          function* (trimmed integer suffix)
+          function* (removed integer suffix)
             u'_foo_html_erb__<anon>_<anon>'
 --------------------------------------------------------------------------
 system:
@@ -22,5 +22,5 @@ system:
         frame*
           filename*
             u'foo.html.erb'
-          function* (trimmed integer suffix)
+          function* (removed integer suffix)
             u'_foo_html_erb__<anon>_<anon>'
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle:2019_04_05/frame_sanitizes_versioned_filenames.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/new:wip/frame_sanitizes_versioned_filenames.pysnap
similarity index 100%
rename from tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle:2019_04_05/frame_sanitizes_versioned_filenames.pysnap
rename to tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/new:wip/frame_sanitizes_versioned_filenames.pysnap
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle:2019_04_05/frame_sanitizes_versioned_filenames_2.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/new:wip/frame_sanitizes_versioned_filenames_2.pysnap
similarity index 100%
rename from tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle:2019_04_05/frame_sanitizes_versioned_filenames_2.pysnap
rename to tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/new:wip/frame_sanitizes_versioned_filenames_2.pysnap
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle:2019_04_05/frame_skips_symbol_if_unknown.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/new:wip/frame_skips_symbol_if_unknown.pysnap
similarity index 100%
rename from tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle:2019_04_05/frame_skips_symbol_if_unknown.pysnap
rename to tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/new:wip/frame_skips_symbol_if_unknown.pysnap
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle:2019_04_05/frame_uses_context_line_over_function.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/new:wip/frame_uses_context_line_over_function.pysnap
similarity index 100%
rename from tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle:2019_04_05/frame_uses_context_line_over_function.pysnap
rename to tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/new:wip/frame_uses_context_line_over_function.pysnap
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle:2019_04_05/frame_uses_function_over_lineno.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/new:wip/frame_uses_function_over_lineno.pysnap
similarity index 100%
rename from tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle:2019_04_05/frame_uses_function_over_lineno.pysnap
rename to tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/new:wip/frame_uses_function_over_lineno.pysnap
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle:2019_04_05/frame_uses_module_over_filename.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/new:wip/frame_uses_module_over_filename.pysnap
similarity index 100%
rename from tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle:2019_04_05/frame_uses_module_over_filename.pysnap
rename to tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/new:wip/frame_uses_module_over_filename.pysnap
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle:2019_04_05/frame_uses_symbol_instead_of_function.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/new:wip/frame_uses_symbol_instead_of_function.pysnap
similarity index 100%
rename from tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle:2019_04_05/frame_uses_symbol_instead_of_function.pysnap
rename to tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/new:wip/frame_uses_symbol_instead_of_function.pysnap
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle:2019_04_05/frame_with_only_required_vars.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/new:wip/frame_with_only_required_vars.pysnap
similarity index 100%
rename from tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle:2019_04_05/frame_with_only_required_vars.pysnap
rename to tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/new:wip/frame_with_only_required_vars.pysnap
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle:2019_04_05/hpkp.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/new:wip/hpkp.pysnap
similarity index 100%
rename from tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle:2019_04_05/hpkp.pysnap
rename to tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/new:wip/hpkp.pysnap
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle:2019_04_05/java_chained.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/new:wip/java_chained.pysnap
similarity index 100%
rename from tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle:2019_04_05/java_chained.pysnap
rename to tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/new:wip/java_chained.pysnap
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle:2019_04_05/java_minimal.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/new:wip/java_minimal.pysnap
similarity index 100%
rename from tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle:2019_04_05/java_minimal.pysnap
rename to tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/new:wip/java_minimal.pysnap
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle:2019_04_05/javascript_exception_no_in_app.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/new:wip/javascript_exception_no_in_app.pysnap
similarity index 100%
rename from tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle:2019_04_05/javascript_exception_no_in_app.pysnap
rename to tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/new:wip/javascript_exception_no_in_app.pysnap
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle:2019_04_05/javascript_message.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/new:wip/javascript_message.pysnap
similarity index 100%
rename from tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle:2019_04_05/javascript_message.pysnap
rename to tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/new:wip/javascript_message.pysnap
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle:2019_04_05/laravel.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/new:wip/laravel.pysnap
similarity index 100%
rename from tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle:2019_04_05/laravel.pysnap
rename to tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/new:wip/laravel.pysnap
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle:2019_04_05/logentry_prefers_message.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/new:wip/logentry_prefers_message.pysnap
similarity index 100%
rename from tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle:2019_04_05/logentry_prefers_message.pysnap
rename to tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/new:wip/logentry_prefers_message.pysnap
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle:2019_04_05/logentry_uses_formatted.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/new:wip/logentry_uses_formatted.pysnap
similarity index 100%
rename from tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle:2019_04_05/logentry_uses_formatted.pysnap
rename to tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/new:wip/logentry_uses_formatted.pysnap
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle:2019_04_05/message_prefers_message.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/new:wip/message_prefers_message.pysnap
similarity index 100%
rename from tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle:2019_04_05/message_prefers_message.pysnap
rename to tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/new:wip/message_prefers_message.pysnap
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle:2019_04_05/message_uses_formatted.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/new:wip/message_uses_formatted.pysnap
similarity index 100%
rename from tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle:2019_04_05/message_uses_formatted.pysnap
rename to tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/new:wip/message_uses_formatted.pysnap
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle:2019_04_05/minified_javascript.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/new:wip/minified_javascript.pysnap
similarity index 100%
rename from tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle:2019_04_05/minified_javascript.pysnap
rename to tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/new:wip/minified_javascript.pysnap
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle:2019_04_05/native_complex_function_names.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/new:wip/native_complex_function_names.pysnap
similarity index 100%
rename from tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle:2019_04_05/native_complex_function_names.pysnap
rename to tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/new:wip/native_complex_function_names.pysnap
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle:2019_04_05/native_no_filenames.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/new:wip/native_no_filenames.pysnap
similarity index 100%
rename from tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle:2019_04_05/native_no_filenames.pysnap
rename to tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/new:wip/native_no_filenames.pysnap
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle:2019_04_05/node_exception_weird.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/new:wip/node_exception_weird.pysnap
similarity index 100%
rename from tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle:2019_04_05/node_exception_weird.pysnap
rename to tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/new:wip/node_exception_weird.pysnap
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle:2019_04_05/python_exception_base.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/new:wip/python_exception_base.pysnap
similarity index 86%
rename from tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle:2019_04_05/python_exception_base.pysnap
rename to tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/new:wip/python_exception_base.pysnap
index 81ed8d9c38..98e4ada6f8 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle:2019_04_05/python_exception_base.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/new:wip/python_exception_base.pysnap
@@ -1,16 +1,16 @@
 ---
-created: '2019-04-03T22:37:16.216837Z'
+created: '2019-03-15T11:58:33.303732Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
 app:
-  hash: '9c694b5c648e2e8a0822dcbd4c7f9c36'
+  hash: '92816681b15788a8230e065fa299dc88'
   component:
     app*
       chained-exception*
         exception*
-          stacktrace
-            frame (non app frame)
+          stacktrace*
+            frame*
               filename*
                 u'baz.py'
           type*
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle:2019_04_05/python_http_error.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/new:wip/python_http_error.pysnap
similarity index 100%
rename from tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle:2019_04_05/python_http_error.pysnap
rename to tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/new:wip/python_http_error.pysnap
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle:2019_04_05/react_native.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/new:wip/react_native.pysnap
similarity index 100%
rename from tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle:2019_04_05/react_native.pysnap
rename to tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/new:wip/react_native.pysnap
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle:2019_04_05/stacktrace_cocoa.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/new:wip/stacktrace_cocoa.pysnap
similarity index 100%
rename from tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle:2019_04_05/stacktrace_cocoa.pysnap
rename to tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/new:wip/stacktrace_cocoa.pysnap
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle:2019_04_05/stacktrace_collapse_recursion.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/new:wip/stacktrace_collapse_recursion.pysnap
similarity index 100%
rename from tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle:2019_04_05/stacktrace_collapse_recursion.pysnap
rename to tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/new:wip/stacktrace_collapse_recursion.pysnap
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle:2019_04_05/stacktrace_compute_hashes.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/new:wip/stacktrace_compute_hashes.pysnap
similarity index 100%
rename from tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle:2019_04_05/stacktrace_compute_hashes.pysnap
rename to tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/new:wip/stacktrace_compute_hashes.pysnap
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle:2019_04_05/stacktrace_discards_seemingly_useless_stack.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/new:wip/stacktrace_discards_seemingly_useless_stack.pysnap
similarity index 100%
rename from tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle:2019_04_05/stacktrace_discards_seemingly_useless_stack.pysnap
rename to tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/new:wip/stacktrace_discards_seemingly_useless_stack.pysnap
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle:2019_04_05/stacktrace_does_not_discard_non_urls.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/new:wip/stacktrace_does_not_discard_non_urls.pysnap
similarity index 100%
rename from tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle:2019_04_05/stacktrace_does_not_discard_non_urls.pysnap
rename to tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/new:wip/stacktrace_does_not_discard_non_urls.pysnap
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle:2019_04_05/stacktrace_does_not_group_different_js_errors.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/new:wip/stacktrace_does_not_group_different_js_errors.pysnap
similarity index 100%
rename from tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle:2019_04_05/stacktrace_does_not_group_different_js_errors.pysnap
rename to tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/new:wip/stacktrace_does_not_group_different_js_errors.pysnap
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle:2019_04_05/stacktrace_excludes_single_frame_urls.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/new:wip/stacktrace_excludes_single_frame_urls.pysnap
similarity index 100%
rename from tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle:2019_04_05/stacktrace_excludes_single_frame_urls.pysnap
rename to tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/new:wip/stacktrace_excludes_single_frame_urls.pysnap
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle:2019_04_05/stacktrace_hash_without_system_frames.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/new:wip/stacktrace_hash_without_system_frames.pysnap
similarity index 100%
rename from tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle:2019_04_05/stacktrace_hash_without_system_frames.pysnap
rename to tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/new:wip/stacktrace_hash_without_system_frames.pysnap
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle:2019_04_05/stacktrace_ignores_singular_anonymous_frame.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/new:wip/stacktrace_ignores_singular_anonymous_frame.pysnap
similarity index 100%
rename from tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle:2019_04_05/stacktrace_ignores_singular_anonymous_frame.pysnap
rename to tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/new:wip/stacktrace_ignores_singular_anonymous_frame.pysnap
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle:2019_04_05/stacktrace_with_minimal_app_frames.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/new:wip/stacktrace_with_minimal_app_frames.pysnap
similarity index 100%
rename from tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle:2019_04_05/stacktrace_with_minimal_app_frames.pysnap
rename to tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/new:wip/stacktrace_with_minimal_app_frames.pysnap
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle:2019_04_05/template_compute_hashes.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/new:wip/template_compute_hashes.pysnap
similarity index 100%
rename from tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle:2019_04_05/template_compute_hashes.pysnap
rename to tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/new:wip/template_compute_hashes.pysnap
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle:2019_04_05/threads_compute_hashes.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/new:wip/threads_compute_hashes.pysnap
similarity index 79%
rename from tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle:2019_04_05/threads_compute_hashes.pysnap
rename to tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/new:wip/threads_compute_hashes.pysnap
index 2c10362414..8e48de0202 100644
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle:2019_04_05/threads_compute_hashes.pysnap
+++ b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/new:wip/threads_compute_hashes.pysnap
@@ -1,5 +1,5 @@
 ---
-created: '2019-04-03T22:37:16.384086Z'
+created: '2019-03-15T11:55:35.379089Z'
 creator: sentry
 source: tests/sentry/grouping/test_variants.py
 ---
@@ -7,9 +7,9 @@ app:
   hash: None
   component:
     app (threads of system takes precedence)
-      threads
-        stacktrace
-          frame (non app frame)
+      threads (ignored because hash matches system variant)
+        stacktrace*
+          frame*
             filename*
               u'baz.c'
             function*
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle:2019_04_05/threads_no_hash.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/new:wip/threads_no_hash.pysnap
similarity index 100%
rename from tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle:2019_04_05/threads_no_hash.pysnap
rename to tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/new:wip/threads_no_hash.pysnap
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle:2019_04_05/frame_sanitizes_erb_templates.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle:2019_04_05/frame_sanitizes_erb_templates.pysnap
deleted file mode 100644
index 447407d945..0000000000
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle:2019_04_05/frame_sanitizes_erb_templates.pysnap
+++ /dev/null
@@ -1,26 +0,0 @@
----
-created: '2019-04-01T17:31:12.333493Z'
-creator: sentry
-source: tests/sentry/grouping/test_variants.py
----
-app:
-  hash: None
-  component:
-    app (stacktrace of system takes precedence)
-      stacktrace
-        frame (non app frame)
-          filename*
-            u'foo.html.erb'
-          function* (removed generated erb template suffix)
-            u'_foo_html_erb'
---------------------------------------------------------------------------
-system:
-  hash: '4067a71d7098866f87c746a57a77b2bb'
-  component:
-    system*
-      stacktrace*
-        frame*
-          filename*
-            u'foo.html.erb'
-          function* (removed generated erb template suffix)
-            u'_foo_html_erb'
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle:2019_04_05/stacktrace_rust.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle:2019_04_05/stacktrace_rust.pysnap
deleted file mode 100644
index 9b18bd62c0..0000000000
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle:2019_04_05/stacktrace_rust.pysnap
+++ /dev/null
@@ -1,64 +0,0 @@
----
-created: '2019-04-07T12:50:19.615853Z'
-creator: sentry
-source: tests/sentry/grouping/test_variants.py
----
-app:
-  hash: 'eb87c1031dba55b67df86fb9fff59dc6'
-  component:
-    app*
-      exception*
-        stacktrace*
-          frame (non app frame)
-            function*
-              u'_main'
-          frame (non app frame)
-            function*
-              u'std::rt::lang_start_internal'
-          frame (non app frame)
-            function*
-              u'___rust_maybe_catch_panic'
-          frame (non app frame)
-            function*
-              u'std::panicking::try::do_call'
-          frame (non app frame)
-            function*
-              u'std::rt::lang_start::{{closure}}'
-          frame* (marked in-app by grouping enhancement rule)
-            function*
-              u'log_demo::main'
-          frame (non app frame)
-            function*
-              u'log::__private_api_log'
-        type*
-          u'log_demo'
---------------------------------------------------------------------------
-system:
-  hash: 'e0b4eea234ff891472cb927c00153bbe'
-  component:
-    system*
-      exception*
-        stacktrace*
-          frame*
-            function*
-              u'_main'
-          frame*
-            function*
-              u'std::rt::lang_start_internal'
-          frame*
-            function*
-              u'___rust_maybe_catch_panic'
-          frame*
-            function*
-              u'std::panicking::try::do_call'
-          frame*
-            function*
-              u'std::rt::lang_start::{{closure}}'
-          frame* (marked in-app by grouping enhancement rule)
-            function*
-              u'log_demo::main'
-          frame*
-            function*
-              u'log::__private_api_log'
-        type*
-          u'log_demo'
diff --git a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle:2019_04_05/stacktrace_rust2.pysnap b/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle:2019_04_05/stacktrace_rust2.pysnap
deleted file mode 100644
index 3f9c1faa6f..0000000000
--- a/tests/sentry/grouping/snapshots/test_variants/test_event_hash_variant/newstyle:2019_04_05/stacktrace_rust2.pysnap
+++ /dev/null
@@ -1,64 +0,0 @@
----
-created: '2019-04-07T13:12:38.958947Z'
-creator: sentry
-source: tests/sentry/grouping/test_variants.py
----
-app:
-  hash: 'eb87c1031dba55b67df86fb9fff59dc6'
-  component:
-    app*
-      exception*
-        stacktrace*
-          frame (non app frame)
-            function*
-              u'_main'
-          frame (non app frame)
-            function*
-              u'std::rt::lang_start_internal'
-          frame (non app frame)
-            function*
-              u'___rust_maybe_catch_panic'
-          frame (non app frame)
-            function*
-              u'std::panicking::try::do_call'
-          frame (non app frame)
-            function*
-              u'std::rt::lang_start::{{closure}}'
-          frame* (marked in-app by grouping enhancement rule)
-            function*
-              u'log_demo::main'
-          frame (non app frame)
-            function*
-              u'log::__private_api_log'
-        type*
-          u'log_demo'
---------------------------------------------------------------------------
-system:
-  hash: '9b33b65a645c66239cafcd276fcd0659'
-  component:
-    system*
-      exception*
-        stacktrace*
-          frame*
-            function*
-              u'_main'
-          frame*
-            function*
-              u'std::rt::lang_start_internal'
-          frame (ignored by grouping enhancement rule)
-            function*
-              u'___rust_maybe_catch_panic'
-          frame*
-            function*
-              u'std::panicking::try::do_call'
-          frame*
-            function*
-              u'std::rt::lang_start::{{closure}}'
-          frame* (marked in-app by grouping enhancement rule)
-            function*
-              u'log_demo::main'
-          frame (ignored by grouping enhancement rule)
-            function*
-              u'log::__private_api_log'
-        type*
-          u'log_demo'
diff --git a/tests/sentry/grouping/test_enhancer.py b/tests/sentry/grouping/test_enhancer.py
deleted file mode 100644
index eca3512367..0000000000
--- a/tests/sentry/grouping/test_enhancer.py
+++ /dev/null
@@ -1,99 +0,0 @@
-# -*- coding: utf-8 -*-
-
-from __future__ import absolute_import, print_function
-
-import six
-
-from sentry.grouping.enhancer import Enhancements
-
-
-def dump_obj(obj):
-    if not isinstance(getattr(obj, '__dict__', None), dict):
-        return obj
-    rv = {}
-    for (key, value) in six.iteritems(obj.__dict__):
-        if isinstance(value, list):
-            rv[key] = [dump_obj(x) for x in value]
-        elif isinstance(value, dict):
-            rv[key] = {k: dump_obj(v) for k, v in six.iteritems(value)}
-        else:
-            rv[key] = value
-    return rv
-
-
-def test_basic_parsing(insta_snapshot):
-    enhancement = Enhancements.from_config_string('''
-# This is a config
-path:*/code/game/whatever/*                     +app
-function:panic_handler                          ^-group -group
-function:ThreadStartWin32                       v-group
-function:ThreadStartLinux                       v-group
-function:ThreadStartMac                         v-group
-family:native module:std::*                     -app
-module:core::*                                  -app
-family:javascript path:*/test.js                -app
-''', bases=['common:v1'])
-
-    dumped = enhancement.dumps()
-    insta_snapshot(dump_obj(enhancement))
-    assert Enhancements.loads(dumped).dumps() == dumped
-    assert Enhancements.loads(dumped)._to_config_structure() == enhancement._to_config_structure()
-    assert isinstance(dumped, six.string_types)
-
-
-def test_basic_path_matching():
-    enhancement = Enhancements.from_config_string('''
-        path:**/test.js              +app
-    ''')
-    js_rule = enhancement.rules[0]
-
-    assert bool(js_rule.get_matching_frame_actions({
-        'abs_path': 'http://example.com/foo/test.js',
-        'filename': '/foo/test.js',
-    }, 'javascript'))
-
-    assert not bool(js_rule.get_matching_frame_actions({
-        'abs_path': 'http://example.com/foo/bar.js',
-        'filename': '/foo/bar.js',
-    }, 'javascript'))
-
-    assert bool(js_rule.get_matching_frame_actions({
-        'abs_path': 'http://example.com/foo/test.js',
-    }, 'javascript'))
-
-    assert not bool(js_rule.get_matching_frame_actions({
-        'filename': '/foo/bar.js',
-    }, 'javascript'))
-
-    assert bool(js_rule.get_matching_frame_actions({
-        'abs_path': 'http://example.com/foo/TEST.js',
-    }, 'javascript'))
-
-    assert not bool(js_rule.get_matching_frame_actions({
-        'abs_path': 'http://example.com/foo/bar.js',
-    }, 'javascript'))
-
-
-def test_family_matching():
-    enhancement = Enhancements.from_config_string('''
-        family:javascript path:**/test.js              +app
-        family:native function:std::*                  -app
-    ''')
-    js_rule, native_rule = enhancement.rules
-
-    assert bool(js_rule.get_matching_frame_actions({
-        'abs_path': 'http://example.com/foo/TEST.js',
-    }, 'javascript'))
-
-    assert not bool(js_rule.get_matching_frame_actions({
-        'abs_path': 'http://example.com/foo/TEST.js',
-    }, 'native'))
-
-    assert not bool(native_rule.get_matching_frame_actions({
-        'abs_path': 'http://example.com/foo/TEST.js',
-        'function': 'std::whatever',
-    }, 'javascript'))
-
-    assert bool(native_rule.get_matching_frame_actions({
-        'function': 'std::whatever',
-    }, 'native'))
diff --git a/tests/sentry/grouping/test_fingerprinting.py b/tests/sentry/grouping/test_fingerprinting.py
deleted file mode 100644
index 2175277cd1..0000000000
--- a/tests/sentry/grouping/test_fingerprinting.py
+++ /dev/null
@@ -1,69 +0,0 @@
-# -*- coding: utf-8 -*-
-
-from __future__ import absolute_import
-
-import os
-import json
-import pytest
-
-from sentry.event_manager import EventManager
-from sentry.grouping.api import apply_server_fingerprinting
-from sentry.grouping.fingerprinting import FingerprintingRules
-
-
-def test_basic_parsing(insta_snapshot):
-    rules = FingerprintingRules.from_config_string('''
-# This is a config
-type:DatabaseUnavailable                        -> DatabaseUnavailable
-function:assertion_failed module:foo            -> AssertionFailed, foo
-''')
-    assert rules._to_config_structure() == {
-        'rules': [
-            {'matchers': [['type', 'DatabaseUnavailable']],
-             'fingerprint': ['DatabaseUnavailable']},
-            {'matchers': [['function', 'assertion_failed'],
-                          ['module', 'foo']],
-             'fingerprint': ['AssertionFailed', 'foo']}
-        ],
-        'version': 1
-    }
-
-    assert FingerprintingRules._from_config_structure(
-        rules._to_config_structure())._to_config_structure() == rules._to_config_structure()
-
-
-_fixture_path = os.path.join(os.path.dirname(__file__), 'fingerprint_inputs')
-
-
-def load_configs():
-    rv = []
-    for filename in os.listdir(_fixture_path):
-        if filename.endswith('.json'):
-            rv.append(filename[:-5])
-    return sorted(rv)
-
-
-@pytest.mark.parametrize(
-    'testcase',
-    load_configs(),
-    ids=lambda x: x.replace("-", "_")  # Nicer folder structure for insta_snapshot
-)
-def test_event_hash_variant(insta_snapshot, testcase):
-    with open(os.path.join(_fixture_path, testcase + '.json')) as f:
-        input = json.load(f)
-
-    config = FingerprintingRules.from_json({
-        'rules': input.pop('_fingerprinting_rules'),
-        'version': 1,
-    })
-    mgr = EventManager(data=input)
-    mgr.normalize()
-    data = mgr.get_data()
-
-    data.setdefault('fingerprint', ['{{ default }}'])
-    apply_server_fingerprinting(data, config)
-
-    insta_snapshot({
-        'config': config.to_json(),
-        'fingerprint': data['fingerprint'],
-    })
diff --git a/tests/sentry/grouping/test_strategy_utils.py b/tests/sentry/grouping/test_strategy_utils.py
index 78b95c2a72..f467dd985d 100644
--- a/tests/sentry/grouping/test_strategy_utils.py
+++ b/tests/sentry/grouping/test_strategy_utils.py
@@ -2,8 +2,8 @@ from __future__ import absolute_import
 
 import pytest
 
-from sentry.grouping.strategies.newstyle import isolate_native_function_v1
-from sentry.grouping.strategies.utils import replace_enclosed_string, split_func_tokens, trim_function_name
+from sentry.grouping.strategies.stacktrace import isolate_native_function_v1
+from sentry.grouping.strategies.utils import replace_enclosed_string, split_func_tokens
 
 
 @pytest.mark.parametrize(
@@ -73,23 +73,10 @@ from sentry.grouping.strategies.utils import replace_enclosed_string, split_func
             'unsigned int mynamespace::MyClass::operator()(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, v8::internal::MaybeObjectBrief const&)',
             'mynamespace::MyClass::operator()',
         ],
-        [
-            '<actix::contextimpl::ContextFut<A, C> as futures::future::Future>::poll::h9de5fbebc1652d47',
-            '<actix::contextimpl::ContextFut<T> as futures::future::Future>::poll',
-        ],
-        [
-            'ThreadStartWhatever@16',
-            'ThreadStartWhatever',
-        ],
-        [
-            '@ThreadStartWhatever@16',
-            'ThreadStartWhatever',
-        ],
     ]
 )
 def test_isolate_native_function_v1(input, output):
     assert isolate_native_function_v1(input) == output
-    assert trim_function_name(input, 'native') == output
 
 
 def replace_group(value, start):
@@ -124,13 +111,3 @@ def test_enclosed_string_simple(input, start, end, replacement, output):
 )
 def test_split_func_tokens(input, output):
     assert split_func_tokens(input) == output
-
-
-def test_trim_function_name():
-    assert trim_function_name('+[foo:(bar)]', 'objc') == '+[foo:(bar)]'
-    assert trim_function_name('[foo:(bar)]', 'objc') == '[foo:(bar)]'
-    assert trim_function_name('-[foo:(bar)]', 'objc') == '-[foo:(bar)]'
-    assert trim_function_name(
-        '(anonymous namespace)::foo(int)',
-        'native') == '(anonymous namespace)::foo'
-    assert trim_function_name('foo::bar::foo(int)', 'native') == 'foo::bar::foo'
diff --git a/tests/sentry/grouping/test_utils.py b/tests/sentry/grouping/test_utils.py
deleted file mode 100644
index 34a0b3a40b..0000000000
--- a/tests/sentry/grouping/test_utils.py
+++ /dev/null
@@ -1,23 +0,0 @@
-from __future__ import absolute_import
-
-import pytest
-
-from sentry.grouping.utils import get_grouping_family_for_platform
-
-
-@pytest.mark.parametrize(
-    'input,output',
-    [
-        ('native', 'native'),
-        ('c', 'native'),
-        ('swift', 'native'),
-        ('cocoa', 'native'),
-        ('objc', 'native'),
-        ('javascript', 'javascript'),
-        ('node', 'javascript'),
-        ('elixir', 'other'),
-        ('whatever', 'other'),
-    ]
-)
-def test_get_grouping_family_for_platform(input, output):
-    assert get_grouping_family_for_platform(input) == output
diff --git a/tests/sentry/grouping/test_variants.py b/tests/sentry/grouping/test_variants.py
index 8646128ce4..01b95c23c3 100644
--- a/tests/sentry/grouping/test_variants.py
+++ b/tests/sentry/grouping/test_variants.py
@@ -7,12 +7,9 @@ import json
 import pytest
 
 from sentry.models import Event
-from sentry.stacktraces import normalize_stacktraces_for_grouping
 from sentry.event_manager import EventManager
 from sentry.grouping.component import GroupingComponent
 from sentry.grouping.strategies.configurations import CONFIGURATIONS
-from sentry.grouping.enhancer import Enhancements
-from sentry.grouping.api import get_default_grouping_config_dict, load_grouping_config
 
 
 def dump_variant(variant, lines=None, indent=0):
@@ -48,7 +45,7 @@ def dump_variant(variant, lines=None, indent=0):
     return lines
 
 
-_fixture_path = os.path.join(os.path.dirname(__file__), 'grouping_inputs')
+_fixture_path = os.path.join(os.path.dirname(__file__), 'inputs')
 
 
 def load_configs():
@@ -74,31 +71,14 @@ def test_event_hash_variant(insta_snapshot, config_name, test_name, log):
     with open(os.path.join(_fixture_path, test_name + '.json')) as f:
         input = json.load(f)
 
-    # Cutomize grouping config from the _grouping config
-    grouping_config = get_default_grouping_config_dict(config_name)
-    grouping_info = input.pop('_grouping', None) or {}
-    enhancement_base = grouping_info.get('enhancement_base')
-    enhancements = grouping_info.get('enhancements')
-    if enhancement_base or enhancements:
-        enhancement_bases = [enhancement_base] if enhancement_base else []
-        e = Enhancements.from_config_string(
-            enhancements or '', bases=enhancement_bases)
-        grouping_config['enhancements'] = e.dumps()
-
-    # Noramlize the event
+    grouping_config = {
+        'id': config_name,
+    }
     mgr = EventManager(data=input, grouping_config=grouping_config)
     mgr.normalize()
     data = mgr.get_data()
-
-    # Normalize the stacktrace for grouping.  This normally happens in
-    # save()
-    normalize_stacktraces_for_grouping(data, load_grouping_config(grouping_config))
     evt = Event(data=data, platform=data['platform'])
 
-    # Make sure we don't need to touch the DB here because this would
-    # break stuff later on.
-    evt.project = None
-
     rv = []
     for (key, value) in sorted(evt.get_grouping_variants().items()):
         if rv:
diff --git a/tests/sentry/test_stacktraces.py b/tests/sentry/test_stacktraces.py
index 59855a11b5..5cc3991770 100644
--- a/tests/sentry/test_stacktraces.py
+++ b/tests/sentry/test_stacktraces.py
@@ -1,6 +1,6 @@
 from __future__ import absolute_import
 
-from sentry.stacktraces import find_stacktraces_in_data, normalize_stacktraces_for_grouping
+from sentry.stacktraces import find_stacktraces_in_data, normalize_in_app
 from sentry.testutils import TestCase
 
 
@@ -181,7 +181,7 @@ class NormalizeInApptest(TestCase):
             }
         }
 
-        normalize_stacktraces_for_grouping(data)
+        normalize_in_app(data)
         assert data['stacktrace']['frames'][1]['in_app'] is True
         assert data['stacktrace']['frames'][2]['in_app'] is False
 
@@ -206,6 +206,6 @@ class NormalizeInApptest(TestCase):
             }
         }
 
-        normalize_stacktraces_for_grouping(data)
+        normalize_in_app(data)
         assert data['stacktrace']['frames'][1]['in_app'] is False
         assert data['stacktrace']['frames'][2]['in_app'] is False
diff --git a/tests/sentry/utils/test_glob.py b/tests/sentry/utils/test_glob.py
deleted file mode 100644
index bcf6ecf23d..0000000000
--- a/tests/sentry/utils/test_glob.py
+++ /dev/null
@@ -1,41 +0,0 @@
-from __future__ import absolute_import
-
-import pytest
-
-from sentry.utils.glob import glob_match
-
-
-class GlobInput(object):
-
-    def __init__(self, value, pat, doublestar=False, ignorecase=False, path_normalize=False):
-        self.value = value
-        self.pat = pat
-        self.doublestar = doublestar
-        self.ignorecase = ignorecase
-        self.path_normalize = path_normalize
-
-    def __call__(self):
-        return glob_match(**self.__dict__)
-
-
-@pytest.mark.parametrize(
-    'glob_input,expect',
-    [
-        [GlobInput('hello.py', '*.py'), True],
-        [GlobInput('hello.py', '*.js'), False],
-        [GlobInput('foo/hello.py', '*.py'), True],
-        [GlobInput('foo/hello.py', '*.py', doublestar=True), False],
-        [GlobInput('foo/hello.py', '**/*.py', doublestar=True), True],
-        [GlobInput('foo/hello.PY', '**/*.py'), False],
-        [GlobInput('foo/hello.PY', '**/*.py', doublestar=True), False],
-        [GlobInput('foo/hello.PY', '**/*.py', ignorecase=True), True],
-        [GlobInput('foo/hello.PY', '**/*.py', doublestar=True, ignorecase=True), True],
-        [GlobInput('foo\\hello.PY', '**/*.py', ignorecase=True), False],
-        [GlobInput('foo\\hello.PY', '**/*.py', doublestar=True, ignorecase=True), False],
-        [GlobInput('foo\\hello.PY', '**/*.py', ignorecase=True, path_normalize=True), True],
-        [GlobInput('foo\\hello.PY', '**/*.py', doublestar=True,
-                   ignorecase=True, path_normalize=True), True],
-    ]
-)
-def test_glob_match(glob_input, expect):
-    assert glob_input() == expect
