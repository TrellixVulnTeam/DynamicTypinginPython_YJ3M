commit 397767f19831c4b34d923745e669f00d594bb8fe
Author: David Cramer <dcramer@gmail.com>
Date:   Fri Aug 24 00:43:39 2012 -0700

    Bring IssuePlugin base to a useable state

diff --git a/src/sentry/plugins/bases/issue.py b/src/sentry/plugins/bases/issue.py
index 206fec211d..c6355244ea 100644
--- a/src/sentry/plugins/bases/issue.py
+++ b/src/sentry/plugins/bases/issue.py
@@ -14,24 +14,8 @@ from django.utils.safestring import mark_safe
 
 
 class NewIssueForm(forms.Form):
-    title = forms.CharField(max_length=200)
-    description = forms.CharField(widget=forms.Textarea())
-
-
-class BaseIssueOptionsForm(forms.Form):
-    def __init__(self, plugin, user, *args, **kwargs):
-        self.plugin = plugin
-        self.user = user
-        super(BaseIssueOptionsForm, self).__init__(*args, **kwargs)
-
-    def get_title(self):
-        raise NotImplementedError
-
-    def get_description(self):
-        return ""
-
-    def save(self):
-        raise NotImplementedError
+    title = forms.CharField(max_length=200, widget=forms.TextInput(attrs={'class': 'span9'}))
+    description = forms.CharField(widget=forms.Textarea(attrs={'class': 'span9'}))
 
 
 class IssuePlugin(Plugin):
@@ -69,31 +53,19 @@ class IssuePlugin(Plugin):
         return event.error()
 
     def is_configured(self, project):
-        # return all((self.get_option(k, project) for k in ('host', 'username', 'certificate')))
-        raise NotImplementedError
-
-    def get_issue_url(self, issue_id):
         raise NotImplementedError
 
     def get_new_issue_title(self):
         return 'Create %s Issue' % self.get_title()
 
+    def get_issue_url(self, group, issue_id):
+        raise NotImplementedError
+
     def create_issue(self, group, form_data):
         """
         Creates the issue on the remote service and returns an issue ID.
         """
         raise NotImplementedError
-        # try:
-        #     data = api.maniphest.createtask(
-        #         title=form.cleaned_data['title'].encode('utf-8'),
-        #         description=form.cleaned_data['description'].encode('utf-8'),
-        #     )
-        # except phabricator.APIError, e:
-        #     form.errors['__all__'] = '%s %s' % (e.code, e.message)
-        # except httplib.HTTPException, e:
-        #     form.errors['__all__'] = 'Unable to reach Phabricator host: %s' % (e.reason,)
-        # else:
-        #     return data['id']
 
     def get_initial_form_data(self, request, group, event):
         return {
@@ -122,6 +94,7 @@ class IssuePlugin(Plugin):
 
         context = {
             'form': form,
+            'title': self.get_new_issue_title(),
         }
 
         return self.render(self.create_issue_template, context)
@@ -145,7 +118,7 @@ class IssuePlugin(Plugin):
             return tag_list
 
         tag_list.append(mark_safe('<a href="%s">#%s</a>' % (
-            self.get_issue_url(issue_id),
+            self.get_issue_url(group, issue_id),
             escape(issue_id),
         )))
 
diff --git a/src/sentry/plugins/bases/notify.py b/src/sentry/plugins/bases/notify.py
index b71cb1951a..ecf4b596e7 100644
--- a/src/sentry/plugins/bases/notify.py
+++ b/src/sentry/plugins/bases/notify.py
@@ -29,7 +29,7 @@ class BaseNotificationUserOptionsForm(forms.Form):
         super(BaseNotificationUserOptionsForm, self).__init__(*args, **kwargs)
 
     def get_title(self):
-        raise NotImplementedError
+        return self.plugin.get_conf_title()
 
     def get_description(self):
         return ""
@@ -56,9 +56,6 @@ class NotificationUserOptionsForm(BaseNotificationUserOptionsForm):
                 enabled_projects.append(slug)
         self.fields['projects'].initial = enabled_projects
 
-    def get_title(self):
-        return self.plugin.get_conf_title()
-
     def get_description(self):
         return _('Send notifications for new events when a new event is seen, or when an '
                  'already resolved event has changed back to unresolved.')
diff --git a/src/sentry/templates/sentry/plugins/bases/issue/create_issue.html b/src/sentry/templates/sentry/plugins/bases/issue/create_issue.html
new file mode 100644
index 0000000000..23956a2028
--- /dev/null
+++ b/src/sentry/templates/sentry/plugins/bases/issue/create_issue.html
@@ -0,0 +1,35 @@
+{% extends "sentry/groups/details.html" %}
+
+{% load i18n %}
+
+{% block title %}{{ title }} | {{ block.super }}{% endblock %}
+
+{% block inner %}
+    <div class="span12">
+        <div class="page-header">
+            <h3>{{ title }}</h3>
+        </div>
+        {% if form.errors %}
+            <div class="alert-message error">{% trans "Please correct the errors below." %}</div>
+        {% endif %}
+
+        <form class="form-stacked" action="" method="post">
+            {% csrf_token %}
+            <input type="hidden" name="next" value="{{ next }}" />
+            <fieldset>
+                {% for field in form %}
+                    <div class="clearfix{% if field.errors %} error{% endif %}">
+                        {{ field.label_tag }}
+                        <div class="input">{{ field }}</div>
+                        {% if field.help_text %}
+                            <span class="help-block">{{ field.help_text }}</span>
+                        {% endif %}
+                    </div>
+                {% endfor %}
+            </fieldset>
+            <p class="actions">
+                <button type="submit" class="btn btn-primary">{% trans "Save Changes" %}</button>
+            </p>
+        </form>
+    </div>
+{% endblock %}
\ No newline at end of file
diff --git a/src/sentry/templates/sentry/plugins/bases/issue/not_configured.html b/src/sentry/templates/sentry/plugins/bases/issue/not_configured.html
new file mode 100644
index 0000000000..11edfe9576
--- /dev/null
+++ b/src/sentry/templates/sentry/plugins/bases/issue/not_configured.html
@@ -0,0 +1,14 @@
+{% extends "sentry/groups/details.html" %}
+
+{% load i18n %}
+
+{% block title %}{{ title }} | {{ block.super }}{% endblock %}
+
+{% block inner %}
+    <div class="span12">
+        <div class="page-header">
+            <h3>{{ title }}</h3>
+        </div>
+        <div class="alert-message error">{% trans "You have not yet configured this plugin for this project." %}</div>
+    </div>
+{% endblock %}
\ No newline at end of file
diff --git a/src/sentry/web/helpers.py b/src/sentry/web/helpers.py
index 58b933032f..40cde22337 100644
--- a/src/sentry/web/helpers.py
+++ b/src/sentry/web/helpers.py
@@ -153,7 +153,7 @@ def plugin_config(plugin, project, request):
     """
     Configure the plugin site wide.
 
-    returns a tuple composed of a redirection boolean and the content to
+    Returns a tuple composed of a redirection boolean and the content to
     be displayed.
     """
     NOTSET = object()
