commit d1f75b8c99b7d7c710c042ca324d129c8c965c76
Author: David Cramer <dcramer@gmail.com>
Date:   Fri Dec 5 17:49:43 2014 -0800

    Globalize project creation

diff --git a/src/sentry/templates/sentry/teams/projects/new.html b/src/sentry/templates/sentry/create-project.html
similarity index 90%
rename from src/sentry/templates/sentry/teams/projects/new.html
rename to src/sentry/templates/sentry/create-project.html
index 4ccb3deae6..3e37105b26 100644
--- a/src/sentry/templates/sentry/teams/projects/new.html
+++ b/src/sentry/templates/sentry/create-project.html
@@ -1,4 +1,4 @@
-{% extends "sentry/bases/team.html" %}
+{% extends "sentry/bases/modal.html" %}
 
 {% load i18n %}
 
@@ -11,7 +11,6 @@
     </div>
     <h2>
       {% trans "Create a New Project" %}
-      <small>{{ team.name }}</small>
     </h2>
   </div>
 
diff --git a/src/sentry/templates/sentry/dashboard.html b/src/sentry/templates/sentry/dashboard.html
index f6126d17e7..997ccc0eb8 100644
--- a/src/sentry/templates/sentry/dashboard.html
+++ b/src/sentry/templates/sentry/dashboard.html
@@ -54,7 +54,7 @@
                         </div>
                     </div>
                 {% else %}
-                    {% url 'sentry-new-project' team.slug as link %}
+                    {% url 'sentry-create-project' organization.id as link %}
                     <div class="alert alert-info">{% blocktrans %}You do not have access to any projects. Would you like to <a href="{{ link }}">create a new project</a>?{% endblocktrans %}</div>
                 {% endif %}
             </section>
diff --git a/src/sentry/templates/sentry/organization-home.html b/src/sentry/templates/sentry/organization-home.html
index 78d829861f..412c51a8cd 100644
--- a/src/sentry/templates/sentry/organization-home.html
+++ b/src/sentry/templates/sentry/organization-home.html
@@ -7,6 +7,8 @@
 {% block actions %}
   <a href="{% url 'sentry-create-team' organization.id %}"
      class="btn btn-small btn-primary">{% trans "New Team" %}</a>
+  <a href="{% url 'sentry-create-project' organization.id %}"
+     class="btn btn-small btn-primary">{% trans "New Project" %}</a>
 {% endblock %}
 
 {% block inner %}
@@ -23,12 +25,11 @@
             </div>
           </div>
           <div class="pull-right actions">
-            <a href="{% url 'sentry-new-project' team.slug %}">New Project</a> &mdash;
             <a href="{% url 'sentry-manage-team' team.slug %}">Team Settings</a>
           </div>
           <h3><a href="{% url 'sentry' team.slug %}">{{ team.name }}</a></h3>
           {% if not project_list %}
-            <p>There are no projects in this team. Would you like to <a href="{% url 'sentry-new-project' team.slug %}">create a project</a>?</p>
+            <p>There are no projects in this team. Would you like to <a href="{% url 'sentry-create-project' organization.id %}">create a project</a>?</p>
           {% else %}
             <ul>
               {% for project in project_list %}
diff --git a/src/sentry/web/frontend/create_organization.py b/src/sentry/web/frontend/create_organization.py
index e9beb498d8..7b9d67f8e1 100644
--- a/src/sentry/web/frontend/create_organization.py
+++ b/src/sentry/web/frontend/create_organization.py
@@ -28,16 +28,7 @@ class CreateOrganizationView(BaseView):
             return False
         return True
 
-    def get(self, request):
-        form = self.get_form(request)
-
-        context = {
-            'form': form,
-        }
-
-        return self.respond('sentry/create-organization.html', context)
-
-    def post(self, request):
+    def handle(self, request):
         form = self.get_form(request)
         if form.is_valid():
             org = form.save(commit=False)
@@ -50,7 +41,7 @@ class CreateOrganizationView(BaseView):
                 organization=org,
                 owner=org.owner,
             )
-            return HttpResponseRedirect(reverse('sentry-new-project', args=[team.slug]))
+            return HttpResponseRedirect(reverse('sentry-create-project', args=[org.id]))
 
         context = {
             'form': form,
diff --git a/src/sentry/web/frontend/create_project.py b/src/sentry/web/frontend/create_project.py
index ac6fa51ec7..f7769f541b 100644
--- a/src/sentry/web/frontend/create_project.py
+++ b/src/sentry/web/frontend/create_project.py
@@ -5,16 +5,15 @@ from django.core.urlresolvers import reverse
 from django.http import HttpResponseRedirect
 from django.utils.translation import ugettext_lazy as _
 
-from sentry.models import Project, OrganizationMemberType
-from sentry.permissions import can_create_projects, Permissions
-from sentry.web.frontend.base import TeamView
-from sentry.web.frontend.generic import missing_perm
+from sentry.models import Project, OrganizationMemberType, Team
+from sentry.web.frontend.base import OrganizationView
 from sentry.utils.samples import create_sample_event
 
 BLANK_CHOICE = [("", "")]
 
 
 class NewProjectForm(forms.ModelForm):
+    team = forms.ChoiceField(choices=(), required=True)
     name = forms.CharField(label=_('Project Name'), max_length=200,
         widget=forms.TextInput(attrs={'placeholder': _('Production')}))
     platform = forms.ChoiceField(
@@ -23,36 +22,47 @@ class NewProjectForm(forms.ModelForm):
     )
 
     class Meta:
-        fields = ('name', 'platform')
+        fields = ('name', 'team', 'platform')
         model = Project
 
+    def __init__(self, user, team_list, *args, **kwargs):
+        super(NewProjectForm, self).__init__(*args, **kwargs)
 
-class CreateProjectView(TeamView):
-    required_access = OrganizationMemberType.ADMIN
+        self.team_list = team_list
 
-    def get_form(self, request):
-        return NewProjectForm(request.POST or None)
+        self.fields['team'].choices = (
+            (t.slug, t.name)
+            for t in team_list
+        )
+        self.fields['team'].widget.choices = self.fields['team'].choices
 
-    def get(self, request, organization, team):
-        if not can_create_projects(request.user, team):
-            return missing_perm(request, Permissions.ADD_PROJECT, team=team)
+    def clean_team(self):
+        value = self.cleaned_data['team']
+        for team in self.team_list:
+            if value == team.slug:
+                return team
+        return None
 
-        form = self.get_form(request)
 
-        context = {
-            'form': form,
-        }
+class CreateProjectView(OrganizationView):
+    # TODO(dcramer): I'm 95% certain the access is incorrect here as it would
+    # be probably validating against global org access, and all we care about is
+    # team admin
+    required_access = OrganizationMemberType.ADMIN
 
-        return self.respond('sentry/teams/projects/new.html', context)
+    def get_form(self, request, organization):
+        team_list = Team.objects.get_for_user(
+            organization=organization,
+            user=request.user,
+            access=OrganizationMemberType.ADMIN,
+        )
 
-    def post(self, request, organization, team):
-        if not can_create_projects(request.user, team):
-            return missing_perm(request, Permissions.ADD_PROJECT, team=team)
+        return NewProjectForm(request.user, team_list, request.POST or None)
 
-        form = self.get_form(request)
+    def handle(self, request, organization):
+        form = self.get_form(request, organization)
         if form.is_valid():
             project = form.save(commit=False)
-            project.team = team
             project.save()
 
             create_sample_event(project)
@@ -67,4 +77,4 @@ class CreateProjectView(TeamView):
             'form': form,
         }
 
-        return self.respond('sentry/teams/projects/new.html', context)
+        return self.respond('sentry/create-project.html', context)
diff --git a/src/sentry/web/frontend/create_team.py b/src/sentry/web/frontend/create_team.py
index 56b8dffb0b..6ce4302edd 100644
--- a/src/sentry/web/frontend/create_team.py
+++ b/src/sentry/web/frontend/create_team.py
@@ -48,7 +48,7 @@ class CreateTeamView(OrganizationView):
             team.organization = organization
             team.owner = organization.owner
             team.save()
-            return HttpResponseRedirect(reverse('sentry-new-project', args=[team.slug]))
+            return HttpResponseRedirect(reverse('sentry-create-project', args=[organization.id]))
 
         context = {
             'form': form,
diff --git a/src/sentry/web/frontend/groups.py b/src/sentry/web/frontend/groups.py
index 1e3678e46d..1d63a2de83 100644
--- a/src/sentry/web/frontend/groups.py
+++ b/src/sentry/web/frontend/groups.py
@@ -190,7 +190,7 @@ def dashboard(request, team):
     project_list = list(Project.objects.filter(team=team))
 
     if not project_list and can_create_projects(request.user, team=team):
-        return HttpResponseRedirect(reverse('sentry-new-project', args=[team.slug]))
+        return HttpResponseRedirect(reverse('sentry-create-project', args=[team.organization.id]))
 
     for project in project_list:
         project.team = team
diff --git a/src/sentry/web/urls.py b/src/sentry/web/urls.py
index 66c5e23dd9..086238013d 100644
--- a/src/sentry/web/urls.py
+++ b/src/sentry/web/urls.py
@@ -132,6 +132,8 @@ urlpatterns += patterns('',
         name='sentry-organization-settings'),
     url(r'^organizations/(?P<organization_id>\d+)/teams/new/$', CreateTeamView.as_view(),
         name='sentry-create-team'),
+    url(r'^organizations/(?P<organization_id>\d+)/projects/new/$', CreateProjectView.as_view(),
+        name='sentry-create-project'),
     url(r'^organizations/(?P<organization_id>\d+)/remove/$', RemoveOrganizationView.as_view(),
         name='sentry-remove-organization'),
     url(r'^accept/(?P<member_id>\d+)/(?P<token>\w+)/$', AcceptOrganizationInviteView.as_view(),
@@ -142,8 +144,6 @@ urlpatterns += patterns('',
         name='sentry-manage-team'),
     url(r'^account/teams/(?P<team_slug>[\w_-]+)/remove/$', RemoveTeamView.as_view(),
         name='sentry-remove-team'),
-    url(r'^account/teams/(?P<team_slug>[\w_-]+)/projects/new/$', CreateProjectView.as_view(),
-        name='sentry-new-project'),
 
     # Settings - Projects
     url(r'^(?P<team_slug>[\w_-]+)/(?P<project_id>[\w_-]+)/get-started/$',
diff --git a/tests/sentry/web/frontend/projects/tests.py b/tests/sentry/web/frontend/projects/tests.py
index a71e3f4703..b230bbe1e5 100644
--- a/tests/sentry/web/frontend/projects/tests.py
+++ b/tests/sentry/web/frontend/projects/tests.py
@@ -94,7 +94,7 @@ class DashboardTest(TestCase):
         can_create_projects.assert_called_once_with(self.user, team=self.team)
 
         assert resp.status_code == 302
-        assert resp['Location'] == 'http://testserver' + reverse('sentry-new-project', args=[self.team.slug])
+        assert resp['Location'] == 'http://testserver' + reverse('sentry-create-project', args=[self.organization.id])
 
     @mock.patch('sentry.web.frontend.groups.can_create_projects')
     def test_does_not_reidrect_if_missing_project_permission(self, can_create_projects):
diff --git a/tests/sentry/web/frontend/test_create_organization.py b/tests/sentry/web/frontend/test_create_organization.py
index dfa157e79a..773698b8b2 100644
--- a/tests/sentry/web/frontend/test_create_organization.py
+++ b/tests/sentry/web/frontend/test_create_organization.py
@@ -35,5 +35,5 @@ class CreateOrganizationTest(TestCase):
         assert team.name == 'bar'
         assert team.owner == org.owner
 
-        redirect_uri = reverse('sentry-new-project', args=[team.slug])
+        redirect_uri = reverse('sentry-create-project', args=[org.id])
         assert resp['Location'] == 'http://testserver' + redirect_uri
diff --git a/tests/sentry/web/frontend/test_create_project.py b/tests/sentry/web/frontend/test_create_project.py
new file mode 100644
index 0000000000..922bbcbb51
--- /dev/null
+++ b/tests/sentry/web/frontend/test_create_project.py
@@ -0,0 +1,39 @@
+from __future__ import absolute_import
+
+from django.core.urlresolvers import reverse
+
+from sentry.models import Project
+from sentry.testutils import TestCase
+
+
+class CreateProjectTest(TestCase):
+    def test_renders_with_context(self):
+        organization = self.create_organization()
+        team = self.create_team(organization=organization)
+        path = reverse('sentry-create-project', args=[organization.id])
+        self.login_as(self.user)
+        resp = self.client.get(path)
+        assert resp.status_code == 200
+        self.assertTemplateUsed(resp, 'sentry/create-project.html')
+        assert resp.context['organization'] == organization
+        assert resp.context['form']
+
+    def test_valid_params(self):
+        organization = self.create_organization()
+        team = self.create_team(organization=organization, name='Foo', slug='foo')
+        path = reverse('sentry-create-project', args=[organization.id])
+        self.login_as(self.user)
+        resp = self.client.post(path, {
+            'name': 'bar',
+            'team': team.slug,
+            'platform': 'python',
+        })
+        assert resp.status_code == 302, resp.context['form'].errors
+
+        project = Project.objects.get(team__organization=organization, name='bar')
+
+        assert project.platform == 'python'
+        assert project.team == team
+
+        redirect_uri = reverse('sentry-docs-client', args=[team.slug, project.slug, project.platform])
+        assert resp['Location'] == 'http://testserver' + redirect_uri
diff --git a/tests/sentry/web/frontend/test_create_team.py b/tests/sentry/web/frontend/test_create_team.py
index 8c49f4bb45..08bf502987 100644
--- a/tests/sentry/web/frontend/test_create_team.py
+++ b/tests/sentry/web/frontend/test_create_team.py
@@ -30,5 +30,5 @@ class CreateTeamTest(TestCase):
 
         assert team.name == 'bar'
 
-        redirect_uri = reverse('sentry-new-project', args=[team.slug])
+        redirect_uri = reverse('sentry-create-project', args=[organization.id])
         assert resp['Location'] == 'http://testserver' + redirect_uri
diff --git a/tests/sentry/web/frontend/tests.py b/tests/sentry/web/frontend/tests.py
index 3bac52bb2c..567c0e597c 100644
--- a/tests/sentry/web/frontend/tests.py
+++ b/tests/sentry/web/frontend/tests.py
@@ -179,29 +179,6 @@ class PermissionBase(TestCase):
             self.assertTemplateNotUsed(resp, template)
 
 
-class NewTeamProjectTest(PermissionBase):
-    template = 'sentry/teams/projects/new.html'
-
-    @fixture
-    def path(self):
-        return reverse('sentry-new-project', args=[self.team.slug])
-
-    def test_admin_can_load(self):
-        self._assertPerm(self.path, self.template, self.admin.username)
-
-    def test_user_cannot_load(self):
-        self._assertPerm(self.path, self.template, self.nobody.username, False)
-
-    def test_anonymous_cannot_load(self):
-        self._assertPerm(self.path, self.template, None, False)
-
-    def test_public_creation_admin_can_load(self):
-        self._assertPerm(self.path, self.template, self.admin.username)
-
-    def test_public_anonymous_cannot_load(self):
-        self._assertPerm(self.path, self.template, None, False)
-
-
 class RemoveProjectTest(PermissionBase):
     template = 'sentry/projects/remove.html'
 
