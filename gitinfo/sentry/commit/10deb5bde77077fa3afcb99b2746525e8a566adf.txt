commit 10deb5bde77077fa3afcb99b2746525e8a566adf
Author: David Cramer <dcramer@gmail.com>
Date:   Mon Feb 11 20:39:28 2013 -0800

    Add REDIS_OPTIONS and default the RedisBuffer to use REDIS_OPTIONS

diff --git a/src/sentry/buffer/redis.py b/src/sentry/buffer/redis.py
index 7a26c3b2db..68369c808e 100644
--- a/src/sentry/buffer/redis.py
+++ b/src/sentry/buffer/redis.py
@@ -12,22 +12,27 @@ from django.db import models
 from hashlib import md5
 from nydus.db import create_cluster
 from sentry.buffer import Buffer
+from sentry.conf import settings
 from sentry.utils.compat import pickle
 
 
 class RedisBuffer(Buffer):
     key_expire = 60 * 60  # 1 hour
 
-    def __init__(self, hosts=None, router='nydus.db.routers.keyvalue.PartitionRouter', **options):
+    def __init__(self, **options):
+        if not options:
+            # inherit default options from REDIS_OPTIONS
+            options = settings.REDIS_OPTIONS
+
         super(RedisBuffer, self).__init__(**options)
-        if hosts is None:
-            hosts = {
-                0: {}  # localhost / default
-            }
+        options.setdefault('hosts', {
+            0: {},
+        })
+        options.setdefault('router', 'nydus.db.routers.keyvalue.PartitionRouter')
         self.conn = create_cluster({
             'engine': 'nydus.db.backends.redis.Redis',
-            'router': router,
-            'hosts': hosts,
+            'router': options['router'],
+            'hosts': options['hosts'],
         })
 
     def _map_column(self, model, column, value):
diff --git a/src/sentry/conf/defaults.py b/src/sentry/conf/defaults.py
index fad7b79bb1..c75f993c63 100644
--- a/src/sentry/conf/defaults.py
+++ b/src/sentry/conf/defaults.py
@@ -163,6 +163,9 @@ CACHE_BACKEND = 'dummy://'
 # The maximum number of events which can be requested as JSON
 MAX_JSON_RESULTS = 1000
 
+# Redis connection information (see Nydus documentation)
+REDIS_OPTIONS = {}
+
 # Buffer backend to use
 BUFFER = 'sentry.buffer.Buffer'
 BUFFER_OPTIONS = {}
diff --git a/src/sentry/utils/runner.py b/src/sentry/utils/runner.py
index fee41d84e1..9ef4c9be52 100644
--- a/src/sentry/utils/runner.py
+++ b/src/sentry/utils/runner.py
@@ -57,8 +57,7 @@ DATABASES = {
 # http://celery.readthedocs.org/en/latest/
 # BROKER_URL = 'redis://localhost:6379'
 
-# SENTRY_BUFFER = 'sentry.buffer.redis.RedisBuffer'
-# SENTRY_BUFFER_OPTIONS = {
+# SENTRY_REDIS_OPTIONS = {
 #     'hosts': {
 #         0: {
 #             'host': '127.0.0.1',
@@ -67,6 +66,8 @@ DATABASES = {
 #     }
 # }
 
+# SENTRY_BUFFER = 'sentry.buffer.redis.RedisBuffer'
+
 SENTRY_KEY = %(default_key)r
 
 # You should configure the absolute URI to Sentry. It will attempt to guess it if you don't
