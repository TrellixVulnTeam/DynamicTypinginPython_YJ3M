commit 944126a91df2bc7ad3e985def2d6d28b478f2298
Author: David Cramer <dcramer@gmail.com>
Date:   Thu Aug 11 18:41:05 2016 -0700

    Fix propagation of project to tag receivers

diff --git a/src/sentry/receivers/core.py b/src/sentry/receivers/core.py
index 7630cec242..2f00a30147 100644
--- a/src/sentry/receivers/core.py
+++ b/src/sentry/receivers/core.py
@@ -159,7 +159,7 @@ def record_project_tag_count(filters, created, **kwargs):
 
 
 @buffer_incr_complete.connect(sender=GroupTagValue, weak=False)
-def record_group_tag_count(filters, created, **kwargs):
+def record_group_tag_count(filters, created, extra, **kwargs):
     from sentry import app
 
     if not created:
@@ -168,7 +168,7 @@ def record_group_tag_count(filters, created, **kwargs):
     # TODO(dcramer): remove in 7.6.x
     project_id = filters.get('project_id')
     if not project_id:
-        project_id = filters['project'].id
+        project_id = extra['project']
 
     group_id = filters.get('group_id')
     if not group_id:
diff --git a/tests/integration/tests.py b/tests/integration/tests.py
index 3e33a462be..806c2c108a 100644
--- a/tests/integration/tests.py
+++ b/tests/integration/tests.py
@@ -19,7 +19,9 @@ from exam import fixture
 from raven import Client
 from six import StringIO
 
-from sentry.models import Group, Event
+from sentry.models import (
+    Group, GroupTagKey, GroupTagValue, Event, TagKey, TagValue
+)
 from sentry.testutils import TestCase, TransactionTestCase
 from sentry.testutils.helpers import get_auth_header
 from sentry.utils.settings import (
@@ -145,7 +147,7 @@ class SentryRemoteTest(TestCase):
         return reverse('sentry-api-store')
 
     def test_minimal(self):
-        kwargs = {'message': 'hello'}
+        kwargs = {'message': 'hello', 'tags': {'foo': 'bar'}}
 
         resp = self._postWithHeader(kwargs)
 
@@ -156,6 +158,20 @@ class SentryRemoteTest(TestCase):
 
         assert instance.message == 'hello'
 
+        assert TagKey.objects.filter(
+            key='foo', project=self.project,
+        ).exists()
+        assert TagValue.objects.filter(
+            key='foo', value='bar', project=self.project,
+        ).exists()
+        assert GroupTagKey.objects.filter(
+            key='foo', group=instance.group_id, project=self.project,
+        ).exists()
+        assert GroupTagValue.objects.filter(
+            key='foo', value='bar', group=instance.group_id,
+            project=self.project,
+        ).exists()
+
     def test_timestamp(self):
         timestamp = timezone.now().replace(microsecond=0, tzinfo=timezone.utc) - datetime.timedelta(hours=1)
         kwargs = {u'message': 'hello', 'timestamp': timestamp.strftime('%s.%f')}
