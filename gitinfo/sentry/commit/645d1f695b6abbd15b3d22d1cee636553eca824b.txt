commit 645d1f695b6abbd15b3d22d1cee636553eca824b
Author: David Cramer <dcramer@gmail.com>
Date:   Mon Sep 5 11:32:00 2011 -0700

    Cleaning up some documentation

diff --git a/docs/config/index.rst b/docs/config/index.rst
index 49d88196c5..6dd9fc703b 100644
--- a/docs/config/index.rst
+++ b/docs/config/index.rst
@@ -5,15 +5,18 @@ This document describes additional configuration options available to Sentry.
 
 .. note:: While these are prefixed with ``SENTRY_`` in your ``settings.py``, if you were to configure or reference them via
           Sentry's internal tools the prefix would be dropped.
+          
+          For example, ``SENTRY_PUBLIC`` would be ``sentry.conf.settings.PUBLIC``.
+
 
 Integration with ``logging``
 ----------------------------
 
 Sentry supports the ability to directly tie into the ``logging`` module. To use it simply add ``SentryHandler`` to your logger.
 
-##########
+
 Django 1.3
-##########
+~~~~~~~~~~
 
 ::
 
@@ -45,9 +48,9 @@ Django 1.3
         },
     }
 
-##############
+
 Older Versions
-##############
+~~~~~~~~~~~~~~
 
 ::
 
@@ -64,9 +67,9 @@ Older Versions
         logger.propagate = False
         logger.addHandler(logging.StreamHandler())
 
-#####
+
 Usage
-#####
+~~~~~
 
 A recommended pattern in logging is to simply reference the modules name for each logger, so for example, you might at the top of your module define the following::
 
@@ -206,9 +209,8 @@ Other Settings
 
 Several options exist to configure django-sentry via your ``settings.py``:
 
-#############
 SENTRY_CLIENT
-#############
+~~~~~~~~~~~~~~
 
 In some situations you may wish for a slightly different behavior to how Sentry communicates with your server. For
 this, Sentry allows you to specify a custom client::
@@ -217,7 +219,6 @@ this, Sentry allows you to specify a custom client::
 
 In addition to the default client (which will handle multi-db and REMOTE_URL for you) we also include two additional options:
 
-*******************
 LoggingSentryClient
 *******************
 
@@ -228,7 +229,6 @@ this would be the way to do it.
 
 	SENTRY_CLIENT = 'sentry.client.log.LoggingSentryClient'
 
-******************
 CelerySentryClient
 ******************
 
@@ -246,7 +246,6 @@ name (defaults to ``sentry``).
 	    'sentry.client.celery',
 	)
 
-*****************
 AsyncSentryClient
 *****************
 
@@ -256,9 +255,8 @@ Spawns a background thread within the process that will handle sending messages
 
 	SENTRY_CLIENT = 'sentry.client.async.AsyncSentryClient'
 
-#############
 SENTRY_ADMINS
-#############
+~~~~~~~~~~~~~
 
 On smaller sites you may wish to enable throttled emails, we recommend doing this by first
 removing the ``ADMINS`` setting in Django, and adding in ``SENTRY_ADMINS``::
@@ -269,28 +267,30 @@ removing the ``ADMINS`` setting in Django, and adding in ``SENTRY_ADMINS``::
 This will send out a notification the first time an error is seen, and the first time an error is
 seen after it has been resolved.
 
-#################
 SENTRY_MAIL_LEVEL
-#################
+~~~~~~~~~~~~~~~~~
+
+.. versionadded:: 1.10.0
 
 The threshold level to restrict emails to. Defaults to ``logging.DEBUG``.
 
-###########################
 SENTRY_MAIL_INCLUDE_LOGGERS
-###########################
+~~~~~~~~~~~~~~~~~~~~~~~~~~~
+
+.. versionadded:: 1.10.0
 
 An explicit list of all logger names to restrict emails to. Defaults to ``None``, which
 translates to "all loggers".
 
-###########################
 SENTRY_MAIL_EXCLUDE_LOGGERS
-###########################
+~~~~~~~~~~~~~~~~~~~~~~~~~~~
+
+.. versionadded:: 1.10.0
 
 An explicit list of all logger names to exclude from emails. Defaults to ``[]``.
 
-##############
 SENTRY_TESTING
-##############
+~~~~~~~~~~~~~~
 
 Enabling this setting allows the testing of Sentry exception handler even if Django ``DEBUG`` is enabled.
 
@@ -298,57 +298,52 @@ Default value is ``False``
 
 .. note:: Normally when Django DEBUG is enabled the Sentry exception handler is immediately skipped
 
-###########
 SENTRY_NAME
-###########
+~~~~~~~~~~~
 
 This will override the ``server_name`` value for this installation. Defaults to ``socket.gethostname()``.
 
-#################
 SENTRY_URL_PREFIX
-#################
+~~~~~~~~~~~~~~~~~
 
 Absolute URL to the sentry root directory. Should not include a trailing slash. Defaults to ``""``.
 
-####################
 SENTRY_EXCLUDE_PATHS
-####################
+~~~~~~~~~~~~~~~~~~~~
 
 Extending this allow you to ignore module prefixes when we attempt to discover which function an error comes from (typically a view)
 
-####################
 SENTRY_INCLUDE_PATHS
-####################
+~~~~~~~~~~~~~~~~~~~~
 
 By default Sentry only looks at modules in INSTALLED_APPS for drilling down where an exception is located
 
-######################
 SENTRY_MAX_LENGTH_LIST
-######################
+~~~~~~~~~~~~~~~~~~~~~~
 
 The maximum number of items a list-like container should store. Defaults to ``50``.
 
-########################
 SENTRY_MAX_LENGTH_STRING
-########################
+~~~~~~~~~~~~~~~~~~~~~~~~
 
 The maximum characters of a string that should be stored. Defaults to ``200``.
 
-#############
 SENTRY_PUBLIC
-#############
+~~~~~~~~~~~~~
 
-Should Sentry be protected by a username and password (using @login_required) or be publicly accessible. Defaults to False (password protection).
+Should Sentry be protected by a username and password (using @login_required) or be publicly accessible. Defaults to ``False`` (password protection).
 
-######################
 SENTRY_AUTO_LOG_STACKS
-######################
+~~~~~~~~~~~~~~~~~~~~~~
+
+.. versionadded:: 1.10.0
 
 Should Sentry automatically log frame stacks (including locals) for ``create_from_record`` (``logging``) calls as it would for exceptions. Defaults to ``False``.
 
-#################
 SENTRY_SAMPLE_DATA
-#################
+~~~~~~~~~~~~~~~~~~
+
+.. versionadded:: 1.10.0
 
 Controls sampling of data. Defaults to ``True``.
 
diff --git a/docs/extensions.rst b/docs/extensions.rst
deleted file mode 100644
index 946da30e8d..0000000000
--- a/docs/extensions.rst
+++ /dev/null
@@ -1,68 +0,0 @@
-Extending Sentry
-================
-
-There are several interfaces currently available to extend Sentry. These are a work in
-progress and the API is not frozen.
-
-.. note::
-
-   If you write a plugin be prepared to maintain it until we're content with the API.
-
-Bundled Plugins
----------------
-
-Sentry includes several plugins by default. To enable a plugin, it's as simple as adding it to
-your ``INSTALLED_APPS``::
-
-	INSTALLED_APPS = [
-	  ...
-	  'sentry.plugins.sentry_servers',
-	  'sentry.plugins.sentry_sites',
-	  'sentry.plugins.sentry_urls',
-	]
-
-Servers
-*******
-
-Enables a list of most seen servers in the message details sidebar, as well
-as a dedicated panel to view all servers a message has been seen on.
-
-::
-
-	INSTALLED_APPS = [
-	  'sentry.plugins.sentry_servers',
-	]
-
-URLs
-****
-
-Enables a list of most seen urls in the message details sidebar, as well
-as a dedicated panel to view all urls a message has been seen on.
-
-::
-
-	INSTALLED_APPS = [
-	  'sentry.plugins.sentry_urls',
-	]
-
-Sites
-*****
-
-.. versionadded:: 1.3.13
-
-Enables a list of most seen sites in the message details sidebar, as well
-as a dedicated panel to view all sites a message has been seen on.
-
-::
-
-	INSTALLED_APPS = [
-	  'sentry.plugins.sentry_sites',
-	]
-
-Building Plugins
-----------------
-
-*The plugin interface is a work in progress and the API is not frozen.**
-
-More and better docs coming soon.
-
diff --git a/docs/index.rst b/docs/index.rst
index fbbe68b3b4..b755e5b66e 100644
--- a/docs/index.rst
+++ b/docs/index.rst
@@ -7,12 +7,11 @@ it allows you to interact and view near real-time information to discover issues
 easily trace them in your application.
 
 .. toctree::
-   :maxdepth: 1
+   :maxdepth: 2
 
    install/index
    config/index
-   extensions
-   technical
+   technical/index
    contributing/index
 
 .. image:: http://dl.dropbox.com/u/116385/Screenshots/l6xk.png
diff --git a/docs/technical.rst b/docs/technical/index.rst
similarity index 63%
rename from docs/technical.rst
rename to docs/technical/index.rst
index 3c25de716e..1aa0c340a7 100644
--- a/docs/technical.rst
+++ b/docs/technical/index.rst
@@ -1,48 +1,73 @@
-Integration with Sentry
-=======================
+Extending Sentry
+================
 
-This page describes various internals of Sentry, as well as the client's storage API.
+There are several interfaces currently available to extend Sentry. These are a work in
+progress and the API is not frozen.
 
-API
----
+Bundled Plugins
+---------------
 
-If you wish to access Sentry within your own views and models, you may do so via the standard model API::
+Sentry includes several plugins by default. To enable a plugin, it's as simple as adding it to
+your ``INSTALLED_APPS``::
 
-	from sentry.models import Message, GroupedMessage
-	
-	# Pull the last 10 unresolved errors.
-	GroupedMessage.objects.filter(status=0).order_by('-last_seen')[0:10]
+	INSTALLED_APPS = [
+	  ...
+	  'sentry.plugins.sentry_servers',
+	  'sentry.plugins.sentry_sites',
+	  'sentry.plugins.sentry_urls',
+	]
 
-You can also record errors outside of handler if you want::
+sentry.plugins.sentry_server
+~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 
-	from sentry.client.models import client
-	
-	try:
-	    ...
-	except Exception, exc:
-	    message_id = client.create_from_exception([exc_info=None, url=None, view=None])
+Enables a list of most seen servers in the message details sidebar, as well
+as a dedicated panel to view all servers a message has been seen on.
 
-If you wish to log normal messages (useful for non-``logging`` integration)::
+::
 
-	from sentry.client.models import client
-	import logging
-	
-	message_id = client.create_from_text('Message Message', level=logging.WARNING, url=None)
+	INSTALLED_APPS = [
+	  'sentry.plugins.sentry_servers',
+	]
 
-Both the ``url`` and ``level`` parameters are optional. ``level`` should be one of the following:
+sentry.plugins.sentry_urls
+~~~~~~~~~~~~~~~~~~~~~~~~~~
 
-* ``logging.DEBUG``
-* ``logging.INFO``
-* ``logging.WARNING``
-* ``logging.ERROR``
-* ``logging.FATAL``
+Enables a list of most seen urls in the message details sidebar, as well
+as a dedicated panel to view all urls a message has been seen on.
 
-If you have a custom exception class, similar to Http404, or something else you don't want to log,
-you can also add ``skip_sentry = True`` to your exception class or instance, and Sentry will simply ignore
-the error.
+::
 
-Writing a sentry client
------------------------
+	INSTALLED_APPS = [
+	  'sentry.plugins.sentry_urls',
+	]
+
+sentry.plugins.sentry_sites
+~~~~~~~~~~~~~~~~~~~~~~~~~~~
+
+.. versionadded:: 1.3.13
+
+Enables a list of most seen sites in the message details sidebar, as well
+as a dedicated panel to view all sites a message has been seen on.
+
+::
+
+	INSTALLED_APPS = [
+	  'sentry.plugins.sentry_sites',
+	]
+
+Writing a Plugin
+----------------
+
+*The plugin interface is a work in progress and the API is not frozen.**
+
+More and better docs coming soon.
+
+.. note::
+
+   If you write a plugin be prepared to maintain it until we're content with the API.
+
+Writing a Client
+----------------
 
 *work in progress!*
 
@@ -58,12 +83,12 @@ In general, the action taken by a logging handler compatible with
 attributable formatted logging record.  Every logging record has its
 own severity level.  
 
-:timestamped: ``timestamp`` is the time when the logging record has been produced.
-:attributable: ``logger``, the name of the logger that produced the record.
-:formatted: the logger has combined all logging record properties into one string: the logging ``message``.
-:severity level: ``level`` is a numeric property.
+:timestamped: ``timestamp`` is the time the event happened.
+:attributable: ``logger`` is the name of the logger that produced the record.
+:formatted: The finalized message of the action, stored as ``message``.
+:severity level: ``level`` is a numeric value, corresponding to the ``logging`` levels.
 
-On top of these, Sentry requires the logger to report the ``view``,
+On top of these, Sentry suggests the logger report the ``view``,
 the name of the function that has caused the logging record.
 
 Authentication
