commit cd307dd502d02c308e4c9b857630b54468af5b48
Author: Dora <dora.l.chan@gmail.com>
Date:   Wed Nov 20 14:47:26 2019 -0800

    feat(discoverv2): clean up padding (#15705)
    
    * spacing adjustments for header
    
    * fixing sidebar headers

diff --git a/src/sentry/static/sentry/app/views/eventsV2/eventDetails/content.tsx b/src/sentry/static/sentry/app/views/eventsV2/eventDetails/content.tsx
index 0452b912bf..306f084911 100644
--- a/src/sentry/static/sentry/app/views/eventsV2/eventDetails/content.tsx
+++ b/src/sentry/static/sentry/app/views/eventsV2/eventDetails/content.tsx
@@ -107,9 +107,7 @@ class EventDetailsContent extends AsyncComponent<Props, State & AsyncComponent['
 
     return (
       <ContentGrid>
-        <HeaderBox>
-          <EventHeader event={event} />
-        </HeaderBox>
+        <EventHeader event={event} />
         {isGroupedView && (
           <Pagination event={event} organization={organization} eventView={eventView} />
         )}
@@ -227,6 +225,8 @@ const EventHeader = (props: {event: Event}) => {
 };
 
 const StyledEventHeader = styled('div')`
+  display: flex;
+  align-items: center;
   font-size: ${p => p.theme.headerFontSize};
   white-space: nowrap;
   overflow: hidden;
@@ -294,10 +294,6 @@ const ContentGrid = styled('div')`
   }
 `;
 
-const HeaderBox = styled('div')`
-  margin-bottom: ${space(1)};
-`;
-
 const MainBox = styled('div')`
   grid-column: 1/2;
 `;
diff --git a/src/sentry/static/sentry/app/views/eventsV2/eventDetails/pagination.tsx b/src/sentry/static/sentry/app/views/eventsV2/eventDetails/pagination.tsx
index ed25713928..849f03f9ea 100644
--- a/src/sentry/static/sentry/app/views/eventsV2/eventDetails/pagination.tsx
+++ b/src/sentry/static/sentry/app/views/eventsV2/eventDetails/pagination.tsx
@@ -119,7 +119,6 @@ const Paginator = styled('div')`
   background: ${p => p.theme.offWhite};
   border: 1px solid ${p => p.theme.borderDark};
   border-radius: ${p => p.theme.borderRadius};
-  margin-bottom: ${space(1)};
 `;
 
 export default Pagination;
diff --git a/src/sentry/static/sentry/app/views/eventsV2/eventInputName.tsx b/src/sentry/static/sentry/app/views/eventsV2/eventInputName.tsx
index 0e1c5d8566..9cb3afb4e6 100644
--- a/src/sentry/static/sentry/app/views/eventsV2/eventInputName.tsx
+++ b/src/sentry/static/sentry/app/views/eventsV2/eventInputName.tsx
@@ -6,11 +6,11 @@ import {Client} from 'app/api';
 import {t} from 'app/locale';
 import {Organization, SavedQuery} from 'app/types';
 import withApi from 'app/utils/withApi';
+import space from 'app/styles/space';
 
 import {addErrorMessage} from 'app/actionCreators/indicator';
 
 import InlineInput from 'app/components/inputInline';
-import space from 'app/styles/space';
 import {handleUpdateQueryName} from './savedQuery/utils';
 
 import EventView from './eventView';
@@ -93,7 +93,10 @@ class EventInputName extends React.Component<Props> {
 }
 
 const StyledHeader = styled('div')`
-  margin-bottom: ${space(3)};
+  display: flex;
+  align-items: center;
+  height: 40px;
+  margin-bottom: ${space(1.5)};
 `;
 
 export default withApi(EventInputName);
diff --git a/src/sentry/static/sentry/app/views/eventsV2/queryList.tsx b/src/sentry/static/sentry/app/views/eventsV2/queryList.tsx
index bb0b646901..44770763e7 100644
--- a/src/sentry/static/sentry/app/views/eventsV2/queryList.tsx
+++ b/src/sentry/static/sentry/app/views/eventsV2/queryList.tsx
@@ -207,10 +207,6 @@ const QueryGrid = styled('div')`
   @media (min-width: ${p => p.theme.breakpoints[2]}) {
     grid-template-columns: repeat(3, minmax(100px, 1fr));
   }
-
-  @media (min-width: ${p => p.theme.breakpoints[4]}) {
-    grid-template-columns: repeat(5, minmax(100px, 1fr));
-  }
 `;
 
 class ContextMenu extends React.Component {
diff --git a/src/sentry/static/sentry/app/views/eventsV2/tags.tsx b/src/sentry/static/sentry/app/views/eventsV2/tags.tsx
index 611d93cbd1..da480c9d50 100644
--- a/src/sentry/static/sentry/app/views/eventsV2/tags.tsx
+++ b/src/sentry/static/sentry/app/views/eventsV2/tags.tsx
@@ -6,6 +6,7 @@ import {Location} from 'history';
 import {t} from 'app/locale';
 import * as Sentry from '@sentry/browser';
 
+import space from 'app/styles/space';
 import {Client} from 'app/api';
 import SentryTypes from 'app/sentryTypes';
 import Placeholder from 'app/components/placeholder';
@@ -13,6 +14,7 @@ import TagDistributionMeter from 'app/components/tagDistributionMeter';
 import withApi from 'app/utils/withApi';
 import {Organization} from 'app/types';
 import {trackAnalyticsEvent} from 'app/utils/analytics';
+import {SectionHeading} from './styles';
 
 import {
   fetchTagDistribution,
@@ -145,18 +147,19 @@ class Tags extends React.Component<Props, State> {
   render() {
     return (
       <TagSection>
-        <TagSectionHeading>{t('Event Tag Summary')}</TagSectionHeading>
+        <StyledHeading>{t('Event Tag Summary')}</StyledHeading>
         {this.props.eventView.tags.map(tag => this.renderTag(tag))}
       </TagSection>
     );
   }
 }
 
-const TagSection = styled('div')`
-  margin: 16px 0;
+const StyledHeading = styled(SectionHeading)`
+  margin: 0 0 ${space(2)} 0;
 `;
-const TagSectionHeading = styled('h6')`
-  color: ${p => p.theme.gray3};
+
+const TagSection = styled('div')`
+  margin: ${space(2)} 0;
 `;
 
 const StyledPlaceholder = styled(Placeholder)`
diff --git a/src/sentry/static/sentry/app/views/eventsV2/tagsTable.tsx b/src/sentry/static/sentry/app/views/eventsV2/tagsTable.tsx
index 4e45394900..1b2d793cbe 100644
--- a/src/sentry/static/sentry/app/views/eventsV2/tagsTable.tsx
+++ b/src/sentry/static/sentry/app/views/eventsV2/tagsTable.tsx
@@ -20,35 +20,34 @@ type Props = {
 const TagsTable = (props: Props) => {
   const {location, tags} = props;
   return (
-    <div>
+    <StyledTable>
       <SectionHeading>{t('Event Tag Details')}</SectionHeading>
-      <StyledTable>
-        <tbody>
-          {tags.map(tag => {
-            const tagInQuery =
-              location.query.query && location.query.query.indexOf(`${tag.key}:`) !== -1;
-            return (
-              <StyledTr key={tag.key}>
-                <TagKey>{tag.key}</TagKey>
-                <TagValue>
-                  {tagInQuery ? (
-                    <Tooltip title={t('This tag is in the current filter conditions')}>
-                      <span>{tag.value}</span>
-                    </Tooltip>
-                  ) : (
-                    <Link to={getEventTagSearchUrl(tag.key, tag.value, location)}>
-                      {tag.value}
-                    </Link>
-                  )}
-                </TagValue>
-              </StyledTr>
-            );
-          })}
-        </tbody>
-      </StyledTable>
-    </div>
+      <tbody>
+        {tags.map(tag => {
+          const tagInQuery =
+            location.query.query && location.query.query.indexOf(`${tag.key}:`) !== -1;
+          return (
+            <StyledTr key={tag.key}>
+              <TagKey>{tag.key}</TagKey>
+              <TagValue>
+                {tagInQuery ? (
+                  <Tooltip title={t('This tag is in the current filter conditions')}>
+                    <span>{tag.value}</span>
+                  </Tooltip>
+                ) : (
+                  <Link to={getEventTagSearchUrl(tag.key, tag.value, location)}>
+                    {tag.value}
+                  </Link>
+                )}
+              </TagValue>
+            </StyledTr>
+          );
+        })}
+      </tbody>
+    </StyledTable>
   );
 };
+
 TagsTable.propTypes = {
   tags: PropTypes.array.isRequired,
   location: PropTypes.object,
@@ -58,6 +57,7 @@ const StyledTable = styled('table')`
   table-layout: fixed;
   width: 100%;
   max-width: 100%;
+  margin-bottom: 30px;
 `;
 
 const StyledTr = styled('tr')`
