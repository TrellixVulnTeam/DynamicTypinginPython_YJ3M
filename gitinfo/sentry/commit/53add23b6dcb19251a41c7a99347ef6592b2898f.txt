commit 53add23b6dcb19251a41c7a99347ef6592b2898f
Author: Matt Robenolt <matt@ydekproductions.com>
Date:   Sun Mar 6 13:30:33 2016 -0800

    Add tests for serving precompressed files

diff --git a/tests/sentry/web/frontend/generic/test_static_media.py b/tests/sentry/web/frontend/generic/test_static_media.py
index 7c8bd8f995..ad769dfc04 100644
--- a/tests/sentry/web/frontend/generic/test_static_media.py
+++ b/tests/sentry/web/frontend/generic/test_static_media.py
@@ -1,5 +1,6 @@
 from __future__ import absolute_import
 
+import os
 from django.test.utils import override_settings
 from sentry.testutils import TestCase
 from sentry.web.frontend.generic import FOREVER_CACHE, NEVER_CACHE
@@ -12,8 +13,9 @@ class StaticMediaTest(TestCase):
         response = self.client.get(url)
         assert response.status_code == 200, response
         assert response['Cache-Control'] == NEVER_CACHE
-        assert 'Vary' not in response
+        assert response['Vary'] == 'Accept-Encoding'
         assert response['Access-Control-Allow-Origin'] == '*'
+        'Content-Encoding' not in response
 
     @override_settings(DEBUG=False)
     def test_versioned(self):
@@ -21,21 +23,23 @@ class StaticMediaTest(TestCase):
         response = self.client.get(url)
         assert response.status_code == 200, response
         assert response['Cache-Control'] == FOREVER_CACHE
-        assert 'Vary' not in response
+        assert response['Vary'] == 'Accept-Encoding'
         assert response['Access-Control-Allow-Origin'] == '*'
+        'Content-Encoding' not in response
 
         url = '/_static/a43db3b08ddd4918972f80739f15344b/sentry/app/index.js'
         response = self.client.get(url)
         assert response.status_code == 200, response
         assert response['Cache-Control'] == FOREVER_CACHE
-        assert 'Vary' not in response
+        assert response['Vary'] == 'Accept-Encoding'
         assert response['Access-Control-Allow-Origin'] == '*'
+        'Content-Encoding' not in response
 
         with override_settings(DEBUG=True):
             response = self.client.get(url)
             assert response.status_code == 200, response
             assert response['Cache-Control'] == NEVER_CACHE
-            assert 'Vary' not in response
+            assert response['Vary'] == 'Accept-Encoding'
             assert response['Access-Control-Allow-Origin'] == '*'
 
     @override_settings(DEBUG=False)
@@ -44,5 +48,37 @@ class StaticMediaTest(TestCase):
         response = self.client.get(url)
         assert response.status_code == 200, response
         assert response['Cache-Control'] == NEVER_CACHE
-        assert 'Vary' not in response
+        assert response['Vary'] == 'Accept-Encoding'
         assert 'Access-Control-Allow-Origin' not in response
+        'Content-Encoding' not in response
+
+    def test_404(self):
+        url = '/_static/sentry/app/thisfiledoesnotexistlol.js'
+        response = self.client.get(url)
+        assert response.status_code == 404, response
+
+    def test_gzip(self):
+        url = '/_static/sentry/app/index.js'
+        response = self.client.get(url, HTTP_ACCEPT_ENCODING='gzip,deflate')
+        assert response.status_code == 200, response
+        assert response['Vary'] == 'Accept-Encoding'
+        'Content-Encoding' not in response
+
+        try:
+            open('src/sentry/static/sentry/app/index.js.gz', 'a').close()
+
+            # Not a gzip Accept-Encoding, so shouldn't serve gzipped file
+            response = self.client.get(url, HTTP_ACCEPT_ENCODING='lol')
+            assert response.status_code == 200, response
+            assert response['Vary'] == 'Accept-Encoding'
+            'Content-Encoding' not in response
+
+            response = self.client.get(url, HTTP_ACCEPT_ENCODING='gzip,deflate')
+            assert response.status_code == 200, response
+            assert response['Vary'] == 'Accept-Encoding'
+            assert response['Content-Encoding'] == 'gzip'
+        finally:
+            try:
+                os.unlink('src/sentry/static/sentry/app/index.js.gz')
+            except Exception:
+                pass
