commit de06547ead44327b0d7eb7817c36ae01173a0be7
Author: David Cramer <dcramer@gmail.com>
Date:   Mon Apr 6 21:51:13 2015 -0700

    Functional SSO redirection

diff --git a/src/sentry/templates/sentry/login.html b/src/sentry/templates/sentry/login.html
index f3e8ac7309..180506aa17 100644
--- a/src/sentry/templates/sentry/login.html
+++ b/src/sentry/templates/sentry/login.html
@@ -45,10 +45,12 @@
                 <fieldset>
                     <legend style="border: 0; margin: 0 0 10px;">Single sign-on</legend>
                 </fieldset>
-                <form class="form-stacked">
+                <form class="form-stacked" method="post">
+                    {% csrf_token %}
+                    <input type="hidden" name="op" value="sso" />
                     <div class="control-group">
                         <div class="controls">
-                            <span style="padding: 7px 0; font-size: 15px">app.getsentry.com/</span> <input style="width: 190px; margin: 0 0 4px; padding: 6px;" type="text" placeholder="acme">
+                            <span style="padding: 7px 0; font-size: 15px">app.getsentry.com/</span> <input style="width: 190px; margin: 0 0 4px; padding: 6px;" type="text" name="organization" placeholder="acme">
                             <p class="help-block">Enter your organization's ID and we'll get things started.</p>
                         </div>
                     </div>
diff --git a/src/sentry/web/frontend/auth_login.py b/src/sentry/web/frontend/auth_login.py
index 4638604724..71fd922672 100644
--- a/src/sentry/web/frontend/auth_login.py
+++ b/src/sentry/web/frontend/auth_login.py
@@ -1,20 +1,55 @@
 from __future__ import absolute_import, print_function
 
+from django.contrib import messages
 from django.contrib.auth import login
+from django.core.urlresolvers import reverse
+from django.http import HttpResponseRedirect
+from django.utils.translation import ugettext_lazy as _
 
 from sentry import features
+from sentry.models import AuthProvider, Organization
 from sentry.web.forms.accounts import AuthenticationForm
 from sentry.web.frontend.base import BaseView
 from sentry.utils.auth import get_login_redirect
 
+ERR_NO_SSO = _('The organization does not exist or does not have Single Sign-On enabled.')
+
 
 class AuthLoginView(BaseView):
     auth_required = False
 
+    def get_auth_provider(self, organization_slug):
+        try:
+            organization = Organization.objects.get(
+                slug=organization_slug
+            )
+        except Organization.DoesNotExist:
+            return None
+
+        try:
+            auth_provider = AuthProvider.objects.get(
+                organization=organization
+            )
+        except AuthProvider.DoesNotExist:
+            return None
+
+        return auth_provider
+
     def handle(self, request):
         if request.user.is_authenticated():
             return self.redirect(get_login_redirect(request))
 
+        if request.POST.get('op') == 'sso' and request.POST.get('organization'):
+            auth_provider = self.get_auth_provider(request.POST['organization'])
+            if auth_provider:
+                next_uri = reverse('sentry-auth-organization',
+                                   args=[request.POST['organization']])
+            else:
+                next_uri = request.path
+                messages.add_message(request, messages.ERROR, ERR_NO_SSO)
+
+            return HttpResponseRedirect(next_uri)
+
         form = AuthenticationForm(request, request.POST or None,
                                   captcha=bool(request.session.get('needs_captcha')))
         if form.is_valid():
