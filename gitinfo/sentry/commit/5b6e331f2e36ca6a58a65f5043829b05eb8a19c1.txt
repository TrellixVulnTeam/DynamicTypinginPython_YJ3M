commit 5b6e331f2e36ca6a58a65f5043829b05eb8a19c1
Author: Priscila Oliveira <priscilawebdev@gmail.com>
Date:   Thu Jul 9 12:08:22 2020 +0200

    Ref(crumbs): Flip filter checked options (#19774)

diff --git a/src/sentry/static/sentry/app/components/events/interfaces/breadcrumbsV2/convertCrumbType.tsx b/src/sentry/static/sentry/app/components/events/interfaces/breadcrumbsV2/convertCrumbType.tsx
index fa29c01cc9..d09afafbde 100644
--- a/src/sentry/static/sentry/app/components/events/interfaces/breadcrumbsV2/convertCrumbType.tsx
+++ b/src/sentry/static/sentry/app/components/events/interfaces/breadcrumbsV2/convertCrumbType.tsx
@@ -45,6 +45,13 @@ function convertCrumbType(breadcrumb: Breadcrumb): Breadcrumb {
     }
   }
 
+  if (!Object.values(BreadcrumbType).includes(breadcrumb.type)) {
+    return {
+      ...breadcrumb,
+      type: BreadcrumbType.DEFAULT,
+    };
+  }
+
   return breadcrumb;
 }
 
diff --git a/src/sentry/static/sentry/app/components/events/interfaces/breadcrumbsV2/filter/filter.tsx b/src/sentry/static/sentry/app/components/events/interfaces/breadcrumbsV2/filter/filter.tsx
index c499c71597..ce3906b4f9 100644
--- a/src/sentry/static/sentry/app/components/events/interfaces/breadcrumbsV2/filter/filter.tsx
+++ b/src/sentry/static/sentry/app/components/events/interfaces/breadcrumbsV2/filter/filter.tsx
@@ -6,7 +6,6 @@ import DropdownControl from 'app/components/dropdownControl';
 
 import DropDownButton from './dropdownButton';
 import OptionsGroup from './optionsGroup';
-import Header from './header';
 import {OptionType, OptionLevel, Option} from './types';
 
 type OnClick = React.ComponentProps<typeof OptionsGroup>['onClick'];
@@ -15,11 +14,9 @@ type Options = [Array<OptionType>, Array<OptionLevel>];
 type Props = {
   options: Options;
   onFilter: (options: Options) => void;
-  onCheckAll: (checkAll: boolean) => void;
 };
 
 type State = {
-  checkAll: boolean;
   hasTypeOption: boolean;
   hasLevelOption: boolean;
   checkedQuantity: number;
@@ -27,7 +24,6 @@ type State = {
 
 class Filter extends React.Component<Props, State> {
   state: State = {
-    checkAll: true,
     hasTypeOption: false,
     hasLevelOption: false,
     checkedQuantity: this.props.options.length,
@@ -52,19 +48,6 @@ class Filter extends React.Component<Props, State> {
     });
   };
 
-  handleToggleCheckAll = () => {
-    const {onCheckAll} = this.props;
-
-    this.setState(
-      prevState => ({
-        checkAll: !prevState.checkAll,
-      }),
-      () => {
-        onCheckAll(this.state.checkAll);
-      }
-    );
-  };
-
   getCheckedQuantity = () => {
     const {options} = this.props;
 
@@ -81,91 +64,33 @@ class Filter extends React.Component<Props, State> {
     return checkedQuantity;
   };
 
-  filterOptionsFirstStep = (options: Array<Option>, option: Option) => {
-    const filteredOptions = options.map(type => {
-      if (isEqual(type, option)) {
+  filterOptionsFirstStep = <T extends Option>(
+    options: Array<T>,
+    filterOption: T
+  ): Array<T> => {
+    return options.map(option => {
+      if (isEqual(option, filterOption)) {
         return {
-          ...type,
-          isChecked: !type.isChecked,
+          ...option,
+          isChecked: !option.isChecked,
         };
       }
-      return type;
+      return option;
     });
-
-    const checkedOptions = filteredOptions.filter(t => t.isChecked);
-
-    return [filteredOptions, checkedOptions];
-  };
-
-  filterOptionsByLevel = (options: Options, option: Option): Options => {
-    // Filter levels
-    const [levels, checkedLevels] = this.filterOptionsFirstStep(options[1], option) as [
-      Options[1],
-      Options[1]
-    ];
-
-    // Filter types
-    const types = options[0].map(type => {
-      if (
-        !type.levels.some(level =>
-          checkedLevels.some(checkedLevel => checkedLevel.type === level)
-        )
-      ) {
-        const isAllLevelsWithTypeDisabled = levels
-          .filter(l => type.levels.includes(l.type))
-          .every(l => l.isDisabled);
-
-        return {
-          ...type,
-          isDisabled: !isAllLevelsWithTypeDisabled,
-        };
-      }
-      return {
-        ...type,
-        isDisabled: false,
-      };
-    });
-
-    return [types, levels];
-  };
-
-  filterOptionsByType = (options: Options, option: Option): Options => {
-    // Filter types
-    const [types, checkedTypes] = this.filterOptionsFirstStep(options[0], option) as [
-      Options[0],
-      Options[0]
-    ];
-
-    // Filter levels
-    const levels = options[1].map(level => {
-      if (!checkedTypes.some(type => type.levels.includes(level.type))) {
-        const isAllTypesWithLevelDisabled = types
-          .filter(t => t.levels.includes(level.type))
-          .every(t => t.isDisabled);
-        return {
-          ...level,
-          isDisabled: !isAllTypesWithLevelDisabled,
-        };
-      }
-      return {
-        ...level,
-        isDisabled: false,
-      };
-    });
-
-    return [types, levels];
   };
 
   handleClick = (...args: Parameters<OnClick>) => {
     const [type, option] = args;
     const {onFilter, options} = this.props;
 
-    const updatedOptions =
-      type === 'type'
-        ? this.filterOptionsByType(options, option)
-        : this.filterOptionsByLevel(options, option);
+    if (type === 'type') {
+      const filteredTypes = this.filterOptionsFirstStep(options[0], option);
+      onFilter([filteredTypes, options[1]] as Options);
+      return;
+    }
 
-    onFilter(updatedOptions);
+    const filteredLevels = this.filterOptionsFirstStep(options[1], option);
+    onFilter([options[0], filteredLevels] as Options);
   };
 
   render() {
@@ -189,11 +114,6 @@ class Filter extends React.Component<Props, State> {
             />
           )}
         >
-          <Header
-            onCheckAll={this.handleToggleCheckAll}
-            checkedQuantity={checkedQuantity}
-            isAllChecked={false}
-          />
           {hasTypeOption && (
             <OptionsGroup type="type" onClick={this.handleClick} options={options[0]} />
           )}
diff --git a/src/sentry/static/sentry/app/components/events/interfaces/breadcrumbsV2/filter/header.tsx b/src/sentry/static/sentry/app/components/events/interfaces/breadcrumbsV2/filter/header.tsx
deleted file mode 100644
index 7d1c2d9a3c..0000000000
--- a/src/sentry/static/sentry/app/components/events/interfaces/breadcrumbsV2/filter/header.tsx
+++ /dev/null
@@ -1,68 +0,0 @@
-import React from 'react';
-import styled from '@emotion/styled';
-
-import space from 'app/styles/space';
-import {t, tct} from 'app/locale';
-import CheckboxFancy from 'app/components/checkboxFancy/checkboxFancy';
-
-type Props = {
-  checkedQuantity: number;
-  isAllChecked: boolean;
-  onCheckAll: (checkAll: boolean) => void;
-};
-
-const Header = ({checkedQuantity, isAllChecked, onCheckAll}: Props) => {
-  const handleClick = (event: React.MouseEvent<HTMLDivElement>) => {
-    event.stopPropagation();
-
-    if (isAllChecked) {
-      onCheckAll(false);
-      return;
-    }
-
-    onCheckAll(true);
-  };
-
-  const getCheckboxLabel = () => {
-    if (isAllChecked) {
-      return t('Uncheck All');
-    }
-
-    if (checkedQuantity === 0) {
-      return t('Check All');
-    }
-
-    return tct('[checkedQuantity] checked', {checkedQuantity});
-  };
-
-  return (
-    <Wrapper>
-      <CheckboxWrapper onClick={handleClick}>
-        <span>{getCheckboxLabel()}</span>
-        <CheckboxFancy
-          isChecked={isAllChecked}
-          isIndeterminate={!isAllChecked && checkedQuantity > 0}
-        />
-      </CheckboxWrapper>
-    </Wrapper>
-  );
-};
-
-export default Header;
-
-const Wrapper = styled('div')`
-  display: flex;
-  background-color: ${p => p.theme.gray100};
-  padding: ${space(1)} ${space(2)};
-  border-bottom: 1px solid ${p => p.theme.borderDark};
-  justify-content: flex-end;
-`;
-
-const CheckboxWrapper = styled('div')`
-  text-align: right;
-  align-items: center;
-  display: grid;
-  grid-gap: ${space(1)};
-  grid-template-columns: minmax(100px, auto) 16px;
-  font-size: ${p => p.theme.fontSizeMedium};
-`;
diff --git a/src/sentry/static/sentry/app/components/events/interfaces/breadcrumbsV2/filter/optionsGroup.tsx b/src/sentry/static/sentry/app/components/events/interfaces/breadcrumbsV2/filter/optionsGroup.tsx
index 19489b097b..982d69006f 100644
--- a/src/sentry/static/sentry/app/components/events/interfaces/breadcrumbsV2/filter/optionsGroup.tsx
+++ b/src/sentry/static/sentry/app/components/events/interfaces/breadcrumbsV2/filter/optionsGroup.tsx
@@ -18,11 +18,6 @@ type Props = {
 const OptionsGroup = ({type, options, onClick}: Props) => {
   const handleClick = (option: Option) => (event: React.MouseEvent<HTMLLIElement>) => {
     event.stopPropagation();
-
-    if (option.isDisabled) {
-      return;
-    }
-
     onClick(type, option);
   };
 
@@ -35,11 +30,10 @@ const OptionsGroup = ({type, options, onClick}: Props) => {
             key={option.type}
             isChecked={option.isChecked}
             onClick={handleClick(option)}
-            isDisabled={option.isDisabled}
           >
             {option.symbol}
             <ListItemDescription>{option.description}</ListItemDescription>
-            <CheckboxFancy isChecked={option.isChecked} isDisabled={option.isDisabled} />
+            <CheckboxFancy isChecked={option.isChecked} />
           </ListItem>
         ))}
       </List>
@@ -67,14 +61,13 @@ const List = styled('ul')`
   padding: 0;
 `;
 
-const ListItem = styled('li')<{isChecked?: boolean; isDisabled?: boolean}>`
+const ListItem = styled('li')<{isChecked?: boolean}>`
   display: grid;
   grid-template-columns: max-content 1fr max-content;
   grid-column-gap: ${space(1)};
   align-items: center;
   padding: ${space(1)} ${space(2)};
   border-bottom: 1px solid ${p => p.theme.borderDark};
-  cursor: ${p => (p.isDisabled ? 'not-allowed' : 'pointer')};
   :hover {
     background-color: ${p => p.theme.gray100};
   }
diff --git a/src/sentry/static/sentry/app/components/events/interfaces/breadcrumbsV2/filter/types.tsx b/src/sentry/static/sentry/app/components/events/interfaces/breadcrumbsV2/filter/types.tsx
index 84e785cffc..912ba3ce8f 100644
--- a/src/sentry/static/sentry/app/components/events/interfaces/breadcrumbsV2/filter/types.tsx
+++ b/src/sentry/static/sentry/app/components/events/interfaces/breadcrumbsV2/filter/types.tsx
@@ -3,7 +3,6 @@ import {BreadcrumbType, BreadcrumbLevelType} from '../types';
 type OptionBase = {
   symbol: React.ReactElement;
   isChecked: boolean;
-  isDisabled: boolean;
   description?: string;
 };
 
diff --git a/src/sentry/static/sentry/app/components/events/interfaces/breadcrumbsV2/index.tsx b/src/sentry/static/sentry/app/components/events/interfaces/breadcrumbsV2/index.tsx
index cc58933bd8..3e8c8741dc 100644
--- a/src/sentry/static/sentry/app/components/events/interfaces/breadcrumbsV2/index.tsx
+++ b/src/sentry/static/sentry/app/components/events/interfaces/breadcrumbsV2/index.tsx
@@ -30,7 +30,8 @@ import {aroundContentStyle} from './styles';
 const MAX_CRUMBS_WHEN_COLLAPSED = 10;
 const ISO_STRING_DATE_AND_TIME_DIVISION = 10;
 
-type FilterOptions = React.ComponentProps<typeof Filter>['options'];
+type FilterProps = React.ComponentProps<typeof Filter>;
+type FilterOptions = FilterProps['options'];
 
 type Props = {
   event: Event;
@@ -75,18 +76,16 @@ class Breadcrumbs extends React.Component<Props, State> {
 
   listRef = React.createRef<HTMLDivElement>();
 
-  expandCollapsedCrumbs = () => {
+  expandCollapsedCrumbs() {
     this.setState(
       prevState => ({
         filteredBySearch: prevState.breadcrumbs,
       }),
-      () => {
-        this.scrollToTheBottom();
-      }
+      this.scrollToTheBottom
     );
-  };
+  }
 
-  scrollToTheBottom = () => {
+  scrollToTheBottom() {
     const element = this.listRef?.current;
 
     if (!element) {
@@ -97,9 +96,9 @@ class Breadcrumbs extends React.Component<Props, State> {
       top: element.scrollHeight,
       left: 0,
     });
-  };
+  }
 
-  loadBreadcrumbs = () => {
+  loadBreadcrumbs() {
     const {data} = this.props;
     let breadcrumbs = data.values;
 
@@ -118,21 +117,21 @@ class Breadcrumbs extends React.Component<Props, State> {
       filteredBySearch: this.getCollapsedBreadcrumbs(tranformedCrumbs),
       filterOptions,
     });
-  };
+  }
 
-  getCollapsedBreadcrumbs = (breadcrumbs: BreadcrumbsWithDetails) => {
+  getCollapsedBreadcrumbs(breadcrumbs: BreadcrumbsWithDetails) {
     return breadcrumbs.length > MAX_CRUMBS_WHEN_COLLAPSED
       ? breadcrumbs.slice(-MAX_CRUMBS_WHEN_COLLAPSED)
       : breadcrumbs;
-  };
+  }
 
-  getFilterOptions = (breadcrumbs: ReturnType<typeof transformCrumbs>): FilterOptions => {
+  getFilterOptions(breadcrumbs: ReturnType<typeof transformCrumbs>): FilterOptions {
     const types = this.getFilterTypes(breadcrumbs);
     const levels = this.getFilterLevels(types);
     return [types, levels];
-  };
+  }
 
-  getFilterTypes = (breadcrumbs: ReturnType<typeof transformCrumbs>) => {
+  getFilterTypes(breadcrumbs: ReturnType<typeof transformCrumbs>) {
     const filterTypes: FilterOptions[0] = [];
 
     for (const index in breadcrumbs) {
@@ -145,8 +144,7 @@ class Breadcrumbs extends React.Component<Props, State> {
           description: breadcrumb.description,
           symbol: <Icon {...omit(breadcrumb, 'description')} size="xs" />,
           levels: breadcrumb?.level ? [breadcrumb.level] : [],
-          isChecked: true,
-          isDisabled: false,
+          isChecked: false,
         });
         continue;
       }
@@ -160,9 +158,9 @@ class Breadcrumbs extends React.Component<Props, State> {
     }
 
     return filterTypes;
-  };
+  }
 
-  getFilterLevels = (types: FilterOptions[0]) => {
+  getFilterLevels(types: FilterOptions[0]) {
     const filterLevels: FilterOptions[1] = [];
 
     for (const indexType in types) {
@@ -176,16 +174,15 @@ class Breadcrumbs extends React.Component<Props, State> {
         filterLevels.push({
           type: level,
           symbol: <Level level={level} />,
-          isChecked: true,
-          isDisabled: false,
+          isChecked: false,
         });
       }
     }
 
     return filterLevels;
-  };
+  }
 
-  moduleToCategory = (module: any) => {
+  moduleToCategory(module?: string | null) {
     if (!module) {
       return undefined;
     }
@@ -194,9 +191,9 @@ class Breadcrumbs extends React.Component<Props, State> {
       return module.split(/./)[0];
     }
     return match[1];
-  };
+  }
 
-  getVirtualCrumb = (breadcrumb: Breadcrumb): Breadcrumb | undefined => {
+  getVirtualCrumb(breadcrumb: Breadcrumb): Breadcrumb | undefined {
     const {event} = this.props;
 
     const timestamp =
@@ -238,9 +235,9 @@ class Breadcrumbs extends React.Component<Props, State> {
       message: event.message,
       timestamp,
     };
-  };
+  }
 
-  filterBySearch = (searchTerm: string, breadcrumbs: BreadcrumbsWithDetails) => {
+  filterBySearch(searchTerm: string, breadcrumbs: BreadcrumbsWithDetails) {
     if (!searchTerm.trim()) {
       return breadcrumbs;
     }
@@ -269,81 +266,89 @@ class Breadcrumbs extends React.Component<Props, State> {
           .includes(searchFor);
       })
     );
-  };
-
-  handleSearch = (value: string) => {
-    this.setState(prevState => ({
-      searchTerm: value,
-      filteredBySearch: this.filterBySearch(value, prevState.filteredByFilter),
-    }));
-  };
-
-  handleCleanSearch = () => {
-    this.setState({
-      searchTerm: '',
-    });
-  };
-
-  handleResetFilter = () => {
-    this.handleClickFilterCheckAll(true);
-  };
-
-  handleClickFilterCheckAll = (checkAll: boolean) => {
-    const {breadcrumbs} = this.state;
-
-    const filteredByFilter = checkAll ? breadcrumbs : [];
-
-    this.setState(prevState => ({
-      filteredByFilter,
-      filterOptions: prevState.filterOptions.map(filterOption =>
-        (filterOption as Array<FilterOptions[0][0] | FilterOptions[1][0]>).map(
-          option => ({
-            ...option,
-            isChecked: checkAll,
-            isDisabled: false,
-          })
-        )
-      ) as FilterOptions,
-      filteredBySearch: this.filterBySearch(prevState.searchTerm, filteredByFilter),
-    }));
-  };
+  }
 
-  filterCrumbsBy = (
+  filterCrumbsBy(
     type: keyof Pick<BreadcrumbsWithDetails[0], 'level' | 'type'>,
     breadcrumbs: BreadcrumbsWithDetails,
     filterOptions: Array<FilterOptions[0][0] | FilterOptions[1][0]>
-  ) => {
+  ) {
     return breadcrumbs.filter(b => {
       const crumbProperty = b[type];
       if (!crumbProperty) {
         return true;
       }
       const foundInFilterOptions = filterOptions.find(f => f.type === crumbProperty);
+
       if (foundInFilterOptions) {
         return foundInFilterOptions.isChecked;
       }
-      return true;
+
+      return false;
     });
-  };
+  }
 
-  handleFilter = (filterOptions: FilterOptions) => {
+  getFilteredCrumbs(
+    hasCheckedType: boolean,
+    hasCheckedLevel: boolean,
+    filterOptions: FilterOptions
+  ) {
     const {breadcrumbs} = this.state;
 
-    const filteredCrumbsByType = this.filterCrumbsBy(
-      'type',
-      breadcrumbs,
-      filterOptions[0]
-    );
+    if (!hasCheckedType && !hasCheckedLevel) {
+      return breadcrumbs;
+    }
+
+    if (hasCheckedType) {
+      const filteredCrumbsByType = this.filterCrumbsBy(
+        'type',
+        breadcrumbs,
+        filterOptions[0]
+      );
+
+      if (hasCheckedLevel) {
+        const filteredCrumbsByLevel = this.filterCrumbsBy(
+          'level',
+          filteredCrumbsByType,
+          filterOptions[1]
+        );
+
+        return filteredCrumbsByLevel;
+      }
+
+      return filteredCrumbsByType;
+    }
+
     const filteredCrumbsByLevel = this.filterCrumbsBy(
       'level',
-      filteredCrumbsByType,
+      breadcrumbs,
       filterOptions[1]
     );
 
+    return filteredCrumbsByLevel;
+  }
+
+  handleSearch = (value: string) => {
+    this.setState(prevState => ({
+      searchTerm: value,
+      filteredBySearch: this.filterBySearch(value, prevState.filteredByFilter),
+    }));
+  };
+
+  handleFilter = (filterOptions: FilterOptions) => {
+    const hasCheckedType = filterOptions[0].some(filterOption => filterOption.isChecked);
+    const hasCheckedLevel = filterOptions[1].some(filterOption => filterOption.isChecked);
+
+    const filteredCrumbs = this.getFilteredCrumbs(
+      hasCheckedType,
+      hasCheckedLevel,
+      filterOptions
+    );
+
     this.setState(prevState => ({
       filterOptions,
-      filteredByFilter: filteredCrumbsByLevel,
-      filteredBySearch: this.filterBySearch(prevState.searchTerm, filteredCrumbsByLevel),
+      filteredByFilter: filteredCrumbs,
+      filteredBySearch: this.filterBySearch(prevState.searchTerm, filteredCrumbs),
     }));
   };
 
@@ -353,6 +358,27 @@ class Breadcrumbs extends React.Component<Props, State> {
     }));
   };
 
+  handleCleanSearch = () => {
+    this.setState({
+      searchTerm: '',
+    });
+  };
+
+  handleResetFilter = () => {
+    this.setState(prevState => ({
+      filteredByFilter: prevState.breadcrumbs,
+      filterOptions: prevState.filterOptions.map(filterOption =>
+        (filterOption as Array<FilterOptions[0][0] | FilterOptions[1][0]>).map(
+          option => ({
+            ...option,
+            isChecked: false,
+          })
+        )
+      ) as FilterOptions,
+      filteredBySearch: this.filterBySearch(prevState.searchTerm, prevState.breadcrumbs),
+    }));
+  };
+
   render() {
     const {type, event, orgId} = this.props;
     const {filterOptions, searchTerm, filteredBySearch, displayRelativeTime} = this.state;
@@ -367,11 +393,7 @@ class Breadcrumbs extends React.Component<Props, State> {
         }
         actions={
           <Search>
-            <Filter
-              onCheckAll={this.handleClickFilterCheckAll}
-              onFilter={this.handleFilter}
-              options={filterOptions}
-            />
+            <Filter onFilter={this.handleFilter} options={filterOptions} />
             <StyledSearchBar
               placeholder={t('Search breadcrumbs\u2026')}
               onSearch={this.handleSearch}
diff --git a/src/sentry/static/sentry/app/types/index.tsx b/src/sentry/static/sentry/app/types/index.tsx
index 7e42a2218d..697a5e1ae2 100644
--- a/src/sentry/static/sentry/app/types/index.tsx
+++ b/src/sentry/static/sentry/app/types/index.tsx
@@ -222,7 +222,7 @@ export type EventAttachment = {
   event_id: string;
 };
 
-export type EntryTypeData = {[key: string]: any | any[]};
+export type EntryTypeData = Record<string, any | Array<any>>;
 
 type EntryType = {
   data: EntryTypeData;
diff --git a/tests/js/spec/components/events/interfaces/breadcrumbs/__snapshots__/filter.spec.tsx.snap b/tests/js/spec/components/events/interfaces/breadcrumbs/__snapshots__/filter.spec.tsx.snap
index 2f7c87ae02..fd74fb583b 100644
--- a/tests/js/spec/components/events/interfaces/breadcrumbs/__snapshots__/filter.spec.tsx.snap
+++ b/tests/js/spec/components/events/interfaces/breadcrumbs/__snapshots__/filter.spec.tsx.snap
@@ -2,7 +2,6 @@
 
 exports[`Filter default render 1`] = `
 <Filter
-  onCheckAll={[MockFunction]}
   onFilter={[MockFunction]}
   options={
     Array [
@@ -10,7 +9,6 @@ exports[`Filter default render 1`] = `
         Object {
           "description": "HTTP request",
           "isChecked": true,
-          "isDisabled": false,
           "levels": Array [
             "info",
           ],
@@ -30,7 +28,6 @@ exports[`Filter default render 1`] = `
         Object {
           "description": "Transaction",
           "isChecked": true,
-          "isDisabled": false,
           "levels": Array [
             "error",
           ],
@@ -50,7 +47,6 @@ exports[`Filter default render 1`] = `
         Object {
           "description": "User Action",
           "isChecked": true,
-          "isDisabled": false,
           "levels": Array [
             "info",
           ],
@@ -70,7 +66,6 @@ exports[`Filter default render 1`] = `
         Object {
           "description": "Navigation",
           "isChecked": true,
-          "isDisabled": false,
           "levels": Array [
             "info",
           ],
@@ -90,7 +85,6 @@ exports[`Filter default render 1`] = `
         Object {
           "description": "Debug",
           "isChecked": true,
-          "isDisabled": false,
           "levels": Array [
             "info",
           ],
@@ -110,7 +104,6 @@ exports[`Filter default render 1`] = `
         Object {
           "description": "Error",
           "isChecked": true,
-          "isDisabled": false,
           "levels": Array [
             "error",
           ],
@@ -131,7 +124,6 @@ exports[`Filter default render 1`] = `
       Array [
         Object {
           "isChecked": true,
-          "isDisabled": false,
           "symbol": <UNDEFINED
             level="info"
           />,
@@ -139,7 +131,6 @@ exports[`Filter default render 1`] = `
         },
         Object {
           "isChecked": true,
-          "isDisabled": false,
           "symbol": <UNDEFINED
             level="error"
           />,
@@ -727,90 +718,6 @@ exports[`Filter default render 1`] = `
                   onMouseLeave={[Function]}
                   width="240px"
                 >
-                  <Header
-                    checkedQuantity={8}
-                    isAllChecked={false}
-                    onCheckAll={[Function]}
-                  >
-                    <Wrapper>
-                      <div
-                        className="css-3q7twp-Wrapper ej4ytze0"
-                      >
-                        <CheckboxWrapper
-                          onClick={[Function]}
-                        >
-                          <div
-                            className="css-qa49kf-CheckboxWrapper ej4ytze1"
-                            onClick={[Function]}
-                          >
-                            <span>
-                              <span
-                                key="4"
-                              >
-                                <span
-                                  key="1"
-                                >
-                                  8
-                                </span>
-                                <span
-                                  key="2"
-                                >
-                                   checked
-                                </span>
-                              </span>
-                            </span>
-                            <CheckboxFancy
-                              isChecked={false}
-                              isIndeterminate={true}
-                              size="16px"
-                            >
-                              <Component
-                                className="css-wyd0n8-CheckboxFancy e1i89tzt0"
-                                isChecked={false}
-                                isIndeterminate={true}
-                                size="16px"
-                              >
-                                <div
-                                  aria-checked={false}
-                                  className="css-wyd0n8-CheckboxFancy e1i89tzt0"
-                                  data-test-id="checkbox-fancy"
-                                  role="checkbox"
-                                >
-                                  <CheckboxFancyContent
-                                    isChecked={false}
-                                    isIndeterminate={true}
-                                  >
-                                    <IconSubtract
-                                      color="white"
-                                      size="70%"
-                                    >
-                                      <ForwardRef(SvgIcon)
-                                        color="white"
-                                        data-test-id="icon-subtract"
-                                        size="70%"
-                                      >
-                                        <svg
-                                          data-test-id="icon-subtract"
-                                          fill="#FFFFFF"
-                                          height="70%"
-                                          viewBox="0 0 16 16"
-                                          width="70%"
-                                        >
-                                          <path
-                                            d="M14,8.75H2a.75.75,0,0,1,0-1.5H14a.75.75,0,0,1,0,1.5Z"
-                                          />
-                                        </svg>
-                                      </ForwardRef(SvgIcon)>
-                                    </IconSubtract>
-                                  </CheckboxFancyContent>
-                                </div>
-                              </Component>
-                            </CheckboxFancy>
-                          </div>
-                        </CheckboxWrapper>
-                      </div>
-                    </Wrapper>
-                  </Header>
                   <OptionsGroup
                     onClick={[Function]}
                     options={
@@ -818,7 +725,6 @@ exports[`Filter default render 1`] = `
                         Object {
                           "description": "HTTP request",
                           "isChecked": true,
-                          "isDisabled": false,
                           "levels": Array [
                             "info",
                           ],
@@ -838,7 +744,6 @@ exports[`Filter default render 1`] = `
                         Object {
                           "description": "Transaction",
                           "isChecked": true,
-                          "isDisabled": false,
                           "levels": Array [
                             "error",
                           ],
@@ -858,7 +763,6 @@ exports[`Filter default render 1`] = `
                         Object {
                           "description": "User Action",
                           "isChecked": true,
-                          "isDisabled": false,
                           "levels": Array [
                             "info",
                           ],
@@ -878,7 +782,6 @@ exports[`Filter default render 1`] = `
                         Object {
                           "description": "Navigation",
                           "isChecked": true,
-                          "isDisabled": false,
                           "levels": Array [
                             "info",
                           ],
@@ -898,7 +801,6 @@ exports[`Filter default render 1`] = `
                         Object {
                           "description": "Debug",
                           "isChecked": true,
-                          "isDisabled": false,
                           "levels": Array [
                             "info",
                           ],
@@ -918,7 +820,6 @@ exports[`Filter default render 1`] = `
                         Object {
                           "description": "Error",
                           "isChecked": true,
-                          "isDisabled": false,
                           "levels": Array [
                             "error",
                           ],
@@ -953,12 +854,11 @@ exports[`Filter default render 1`] = `
                         >
                           <ListItem
                             isChecked={true}
-                            isDisabled={false}
                             key="http"
                             onClick={[Function]}
                           >
                             <li
-                              className="css-1y2halr-ListItem e1cujor52"
+                              className="css-7g0svi-ListItem e1cujor52"
                               onClick={[Function]}
                             >
                               <Memo()
@@ -1017,20 +917,17 @@ exports[`Filter default render 1`] = `
                               </ListItemDescription>
                               <CheckboxFancy
                                 isChecked={true}
-                                isDisabled={false}
                                 isIndeterminate={false}
                                 size="16px"
                               >
                                 <Component
                                   className="css-wyd0n8-CheckboxFancy e1i89tzt0"
                                   isChecked={true}
-                                  isDisabled={false}
                                   isIndeterminate={false}
                                   size="16px"
                                 >
                                   <div
                                     aria-checked={true}
-                                    aria-disabled={false}
                                     className="css-wyd0n8-CheckboxFancy e1i89tzt0"
                                     data-test-id="checkbox-fancy"
                                     role="checkbox"
@@ -1069,12 +966,11 @@ exports[`Filter default render 1`] = `
                           </ListItem>
                           <ListItem
                             isChecked={true}
-                            isDisabled={false}
                             key="transaction"
                             onClick={[Function]}
                           >
                             <li
-                              className="css-1y2halr-ListItem e1cujor52"
+                              className="css-7g0svi-ListItem e1cujor52"
                               onClick={[Function]}
                             >
                               <Memo()
@@ -1124,20 +1020,17 @@ exports[`Filter default render 1`] = `
                               </ListItemDescription>
                               <CheckboxFancy
                                 isChecked={true}
-                                isDisabled={false}
                                 isIndeterminate={false}
                                 size="16px"
                               >
                                 <Component
                                   className="css-wyd0n8-CheckboxFancy e1i89tzt0"
                                   isChecked={true}
-                                  isDisabled={false}
                                   isIndeterminate={false}
                                   size="16px"
                                 >
                                   <div
                                     aria-checked={true}
-                                    aria-disabled={false}
                                     className="css-wyd0n8-CheckboxFancy e1i89tzt0"
                                     data-test-id="checkbox-fancy"
                                     role="checkbox"
@@ -1176,12 +1069,11 @@ exports[`Filter default render 1`] = `
                           </ListItem>
                           <ListItem
                             isChecked={true}
-                            isDisabled={false}
                             key="ui"
                             onClick={[Function]}
                           >
                             <li
-                              className="css-1y2halr-ListItem e1cujor52"
+                              className="css-7g0svi-ListItem e1cujor52"
                               onClick={[Function]}
                             >
                               <Memo()
@@ -1234,20 +1126,17 @@ exports[`Filter default render 1`] = `
                               </ListItemDescription>
                               <CheckboxFancy
                                 isChecked={true}
-                                isDisabled={false}
                                 isIndeterminate={false}
                                 size="16px"
                               >
                                 <Component
                                   className="css-wyd0n8-CheckboxFancy e1i89tzt0"
                                   isChecked={true}
-                                  isDisabled={false}
                                   isIndeterminate={false}
                                   size="16px"
                                 >
                                   <div
                                     aria-checked={true}
-                                    aria-disabled={false}
                                     className="css-wyd0n8-CheckboxFancy e1i89tzt0"
                                     data-test-id="checkbox-fancy"
                                     role="checkbox"
@@ -1286,12 +1175,11 @@ exports[`Filter default render 1`] = `
                           </ListItem>
                           <ListItem
                             isChecked={true}
-                            isDisabled={false}
                             key="navigation"
                             onClick={[Function]}
                           >
                             <li
-                              className="css-1y2halr-ListItem e1cujor52"
+                              className="css-7g0svi-ListItem e1cujor52"
                               onClick={[Function]}
                             >
                               <Memo()
@@ -1344,20 +1232,17 @@ exports[`Filter default render 1`] = `
                               </ListItemDescription>
                               <CheckboxFancy
                                 isChecked={true}
-                                isDisabled={false}
                                 isIndeterminate={false}
                                 size="16px"
                               >
                                 <Component
                                   className="css-wyd0n8-CheckboxFancy e1i89tzt0"
                                   isChecked={true}
-                                  isDisabled={false}
                                   isIndeterminate={false}
                                   size="16px"
                                 >
                                   <div
                                     aria-checked={true}
-                                    aria-disabled={false}
                                     className="css-wyd0n8-CheckboxFancy e1i89tzt0"
                                     data-test-id="checkbox-fancy"
                                     role="checkbox"
@@ -1396,12 +1281,11 @@ exports[`Filter default render 1`] = `
                           </ListItem>
                           <ListItem
                             isChecked={true}
-                            isDisabled={false}
                             key="debug"
                             onClick={[Function]}
                           >
                             <li
-                              className="css-1y2halr-ListItem e1cujor52"
+                              className="css-7g0svi-ListItem e1cujor52"
                               onClick={[Function]}
                             >
                               <Memo()
@@ -1451,20 +1335,17 @@ exports[`Filter default render 1`] = `
                               </ListItemDescription>
                               <CheckboxFancy
                                 isChecked={true}
-                                isDisabled={false}
                                 isIndeterminate={false}
                                 size="16px"
                               >
                                 <Component
                                   className="css-wyd0n8-CheckboxFancy e1i89tzt0"
                                   isChecked={true}
-                                  isDisabled={false}
                                   isIndeterminate={false}
                                   size="16px"
                                 >
                                   <div
                                     aria-checked={true}
-                                    aria-disabled={false}
                                     className="css-wyd0n8-CheckboxFancy e1i89tzt0"
                                     data-test-id="checkbox-fancy"
                                     role="checkbox"
@@ -1503,12 +1384,11 @@ exports[`Filter default render 1`] = `
                           </ListItem>
                           <ListItem
                             isChecked={true}
-                            isDisabled={false}
                             key="error"
                             onClick={[Function]}
                           >
                             <li
-                              className="css-1y2halr-ListItem e1cujor52"
+                              className="css-7g0svi-ListItem e1cujor52"
                               onClick={[Function]}
                             >
                               <Memo()
@@ -1558,20 +1438,17 @@ exports[`Filter default render 1`] = `
                               </ListItemDescription>
                               <CheckboxFancy
                                 isChecked={true}
-                                isDisabled={false}
                                 isIndeterminate={false}
                                 size="16px"
                               >
                                 <Component
                                   className="css-wyd0n8-CheckboxFancy e1i89tzt0"
                                   isChecked={true}
-                                  isDisabled={false}
                                   isIndeterminate={false}
                                   size="16px"
                                 >
                                   <div
                                     aria-checked={true}
-                                    aria-disabled={false}
                                     className="css-wyd0n8-CheckboxFancy e1i89tzt0"
                                     data-test-id="checkbox-fancy"
                                     role="checkbox"
@@ -1618,7 +1495,6 @@ exports[`Filter default render 1`] = `
                       Array [
                         Object {
                           "isChecked": true,
-                          "isDisabled": false,
                           "symbol": <UNDEFINED
                             level="info"
                           />,
@@ -1626,7 +1502,6 @@ exports[`Filter default render 1`] = `
                         },
                         Object {
                           "isChecked": true,
-                          "isDisabled": false,
                           "symbol": <UNDEFINED
                             level="error"
                           />,
@@ -1650,12 +1525,11 @@ exports[`Filter default render 1`] = `
                         >
                           <ListItem
                             isChecked={true}
-                            isDisabled={false}
                             key="info"
                             onClick={[Function]}
                           >
                             <li
-                              className="css-1y2halr-ListItem e1cujor52"
+                              className="css-7g0svi-ListItem e1cujor52"
                               onClick={[Function]}
                             >
                               <Memo()
@@ -1693,20 +1567,17 @@ exports[`Filter default render 1`] = `
                               </ListItemDescription>
                               <CheckboxFancy
                                 isChecked={true}
-                                isDisabled={false}
                                 isIndeterminate={false}
                                 size="16px"
                               >
                                 <Component
                                   className="css-wyd0n8-CheckboxFancy e1i89tzt0"
                                   isChecked={true}
-                                  isDisabled={false}
                                   isIndeterminate={false}
                                   size="16px"
                                 >
                                   <div
                                     aria-checked={true}
-                                    aria-disabled={false}
                                     className="css-wyd0n8-CheckboxFancy e1i89tzt0"
                                     data-test-id="checkbox-fancy"
                                     role="checkbox"
@@ -1745,12 +1616,11 @@ exports[`Filter default render 1`] = `
                           </ListItem>
                           <ListItem
                             isChecked={true}
-                            isDisabled={false}
                             key="error"
                             onClick={[Function]}
                           >
                             <li
-                              className="css-1y2halr-ListItem e1cujor52"
+                              className="css-7g0svi-ListItem e1cujor52"
                               onClick={[Function]}
                             >
                               <Memo()
@@ -1788,20 +1658,17 @@ exports[`Filter default render 1`] = `
                               </ListItemDescription>
                               <CheckboxFancy
                                 isChecked={true}
-                                isDisabled={false}
                                 isIndeterminate={false}
                                 size="16px"
                               >
                                 <Component
                                   className="css-wyd0n8-CheckboxFancy e1i89tzt0"
                                   isChecked={true}
-                                  isDisabled={false}
                                   isIndeterminate={false}
                                   size="16px"
                                 >
                                   <div
                                     aria-checked={true}
-                                    aria-disabled={false}
                                     className="css-wyd0n8-CheckboxFancy e1i89tzt0"
                                     data-test-id="checkbox-fancy"
                                     role="checkbox"
diff --git a/tests/js/spec/components/events/interfaces/breadcrumbs/filter.spec.tsx b/tests/js/spec/components/events/interfaces/breadcrumbs/filter.spec.tsx
index 7e28337943..84d05f3df7 100644
--- a/tests/js/spec/components/events/interfaces/breadcrumbs/filter.spec.tsx
+++ b/tests/js/spec/components/events/interfaces/breadcrumbs/filter.spec.tsx
@@ -11,8 +11,6 @@ import {
   BreadcrumbLevelType,
 } from 'app/components/events/interfaces/breadcrumbsV2/types';
 
-type FilterOptions = React.ComponentProps<typeof Filter>['options'];
-
 const options: React.ComponentProps<typeof Filter>['options'] = [
   [
     {
@@ -21,7 +19,6 @@ const options: React.ComponentProps<typeof Filter>['options'] = [
       levels: [BreadcrumbLevelType.INFO],
       symbol: <Icon color="green400" icon={IconSwitch} size="xs" />,
       isChecked: true,
-      isDisabled: false,
     },
     {
       type: BreadcrumbType.TRANSACTION,
@@ -29,7 +26,6 @@ const options: React.ComponentProps<typeof Filter>['options'] = [
       levels: [BreadcrumbLevelType.ERROR],
       symbol: <Icon color="pink400" icon={IconSpan} size="xs" />,
       isChecked: true,
-      isDisabled: false,
     },
     {
       type: BreadcrumbType.UI,
@@ -37,7 +33,6 @@ const options: React.ComponentProps<typeof Filter>['options'] = [
       levels: [BreadcrumbLevelType.INFO],
       symbol: <Icon color="purple400" icon={IconUser} size="xs" />,
       isChecked: true,
-      isDisabled: false,
     },
     {
       type: BreadcrumbType.NAVIGATION,
@@ -45,7 +40,6 @@ const options: React.ComponentProps<typeof Filter>['options'] = [
       levels: [BreadcrumbLevelType.INFO],
       symbol: <Icon color="green500" icon={IconLocation} size="xs" />,
       isChecked: true,
-      isDisabled: false,
     },
     {
       type: BreadcrumbType.DEBUG,
@@ -53,7 +47,6 @@ const options: React.ComponentProps<typeof Filter>['options'] = [
       levels: [BreadcrumbLevelType.INFO],
       symbol: <Icon color="purple500" icon={IconFix} size="xs" />,
       isChecked: true,
-      isDisabled: false,
     },
     {
       type: BreadcrumbType.ERROR,
@@ -61,7 +54,6 @@ const options: React.ComponentProps<typeof Filter>['options'] = [
       levels: [BreadcrumbLevelType.ERROR],
       symbol: <Icon color="red400" icon={IconFire} size="xs" />,
       isChecked: true,
-      isDisabled: false,
     },
   ],
   [
@@ -69,30 +61,24 @@ const options: React.ComponentProps<typeof Filter>['options'] = [
       type: BreadcrumbLevelType.INFO,
       symbol: <Level level={BreadcrumbLevelType.INFO} />,
       isChecked: true,
-      isDisabled: false,
     },
     {
       type: BreadcrumbLevelType.ERROR,
       symbol: <Level level={BreadcrumbLevelType.ERROR} />,
       isChecked: true,
-      isDisabled: false,
     },
   ],
 ];
 
 describe('Filter', () => {
   let handleFilter;
-  let handleCheckAll;
 
   beforeEach(() => {
     handleFilter = jest.fn();
-    handleCheckAll = jest.fn();
   });
 
   it('default render', () => {
-    const wrapper = mountWithTheme(
-      <Filter options={options} onFilter={handleFilter} onCheckAll={handleCheckAll} />
-    );
+    const wrapper = mountWithTheme(<Filter options={options} onFilter={handleFilter} />);
 
     expect(wrapper.find('OptionsGroup')).toHaveLength(2);
     expect(
@@ -125,20 +111,14 @@ describe('Filter', () => {
   });
 
   it('Without Options', () => {
-    const wrapper = mountWithTheme(
-      <Filter options={[[], []]} onFilter={handleFilter} onCheckAll={handleCheckAll} />
-    );
+    const wrapper = mountWithTheme(<Filter options={[[], []]} onFilter={handleFilter} />);
     expect(wrapper.find('Header')).toHaveLength(0);
     expect(wrapper.find('OptionsGroup')).toHaveLength(0);
   });
 
   it('With Option Type only', () => {
     const wrapper = mountWithTheme(
-      <Filter
-        options={[options[0], []]}
-        onFilter={handleFilter}
-        onCheckAll={handleCheckAll}
-      />
+      <Filter options={[options[0], []]} onFilter={handleFilter} />
     );
 
     const optionsGroup = wrapper.find('OptionsGroup');
@@ -168,11 +148,7 @@ describe('Filter', () => {
 
   it('With Option Level only', () => {
     const wrapper = mountWithTheme(
-      <Filter
-        options={[[], options[1]]}
-        onFilter={handleFilter}
-        onCheckAll={handleCheckAll}
-      />
+      <Filter options={[[], options[1]]} onFilter={handleFilter} />
     );
 
     const optionsGroup = wrapper.find('OptionsGroup');
@@ -199,87 +175,4 @@ describe('Filter', () => {
 
     expect(handleFilter).toHaveBeenCalledTimes(1);
   });
-
-  it('Uncheck All', () => {
-    const wrapper = mountWithTheme(
-      <Filter options={options} onFilter={handleFilter} onCheckAll={handleCheckAll} />
-    );
-
-    const filterHeader = wrapper.find('Header').first();
-
-    expect(filterHeader).toHaveLength(1);
-    expect(filterHeader.text()).toBe(`${options[0].length + options[1].length} checked`);
-
-    const checkAllButton = filterHeader.find('[role="checkbox"]');
-
-    expect(checkAllButton).toHaveLength(1);
-
-    checkAllButton.simulate('click');
-
-    expect(wrapper.state().checkAll).toBeFalsy();
-    expect(handleCheckAll).toHaveBeenCalled();
-  });
-
-  it('Check All', () => {
-    const wrapper = mountWithTheme(
-      <Filter
-        options={
-          options.map(option =>
-            (option as Array<FilterOptions[0][0] | FilterOptions[1][0]>).map(
-              optionItem => ({
-                ...optionItem,
-                isChecked: false,
-              })
-            )
-          ) as FilterOptions
-        }
-        onFilter={handleFilter}
-        onCheckAll={handleCheckAll}
-      />
-    );
-
-    expect(wrapper.state().checkedQuantity).toBe(0);
-
-    const filterHeader = wrapper.find('Header').first();
-
-    expect(filterHeader).toHaveLength(1);
-    expect(filterHeader.text()).toBe('Check All');
-
-    const checkAllButton = filterHeader.find('[role="checkbox"]');
-
-    expect(checkAllButton).toHaveLength(1);
-
-    checkAllButton.simulate('click');
-
-    expect(handleCheckAll).toHaveBeenCalled();
-  });
-
-  it('Disable Options', () => {
-    const wrapper = mountWithTheme(
-      <Filter
-        options={
-          options.map(option =>
-            (option as Array<FilterOptions[0][0] | FilterOptions[1][0]>).map(
-              optionItem => ({
-                ...optionItem,
-                isDisabled: true,
-              })
-            )
-          ) as FilterOptions
-        }
-        onFilter={handleFilter}
-        onCheckAll={handleCheckAll}
-      />
-    );
-
-    const firstOptionType = wrapper
-      .find('OptionsGroup')
-      .at(0)
-      .find('ListItem')
-      .at(0);
-
-    expect(firstOptionType.text()).toBe(options[0][0].description);
-    firstOptionType.simulate('click');
-    expect(handleFilter).toHaveBeenCalledTimes(0);
-  });
 });
