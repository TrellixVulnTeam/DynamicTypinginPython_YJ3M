commit 881d437aab8a332f3e226d219b1b09e93b53586a
Author: David Cramer <dcramer@gmail.com>
Date:   Thu Sep 10 14:49:36 2015 -0500

    Remove primary usage of Organization.owner

diff --git a/src/sentry/receivers/core.py b/src/sentry/receivers/core.py
index 7891ee5685..4d8d540ba2 100644
--- a/src/sentry/receivers/core.py
+++ b/src/sentry/receivers/core.py
@@ -11,7 +11,7 @@ from pkg_resources import parse_version as Version
 
 from sentry import options
 from sentry.models import (
-    Organization, OrganizationMemberType, Project, User, Team, ProjectKey,
+    Organization, Project, User, Team, ProjectKey,
     TagKey, TagValue, GroupTagValue, GroupTagKey, Activity
 )
 from sentry.signals import buffer_incr_complete, regression_signal
@@ -137,20 +137,6 @@ def create_keys_for_project(instance, created, **kwargs):
         )
 
 
-def create_org_member_for_owner(instance, created, **kwargs):
-    if not created:
-        return
-
-    if not instance.owner:
-        return
-
-    instance.member_set.get_or_create(
-        user=instance.owner,
-        type=OrganizationMemberType.OWNER,
-        has_global_access=True,
-    )
-
-
 @buffer_incr_complete.connect(sender=TagValue, weak=False)
 def record_project_tag_count(filters, created, **kwargs):
     from sentry import app
@@ -221,9 +207,3 @@ post_save.connect(
     dispatch_uid="create_keys_for_project",
     weak=False,
 )
-post_save.connect(
-    handle_db_failure(create_org_member_for_owner),
-    sender=Organization,
-    dispatch_uid="create_org_member_for_owner",
-    weak=False,
-)
diff --git a/src/sentry/testutils/fixtures.py b/src/sentry/testutils/fixtures.py
index 69aa26b380..37ad142ab1 100644
--- a/src/sentry/testutils/fixtures.py
+++ b/src/sentry/testutils/fixtures.py
@@ -78,11 +78,20 @@ class Fixtures(object):
         )
 
     def create_organization(self, **kwargs):
+        owner = kwargs.pop('owner', None)
+        if not owner:
+            owner = self.user
+
         kwargs.setdefault('name', uuid4().hex)
-        if not kwargs.get('owner'):
-            kwargs['owner'] = self.user
 
-        return Organization.objects.create(**kwargs)
+        org = Organization.objects.create(owner=owner, **kwargs)
+        self.create_member(
+            organization=org,
+            user=owner,
+            type=OrganizationMemberType.OWNER,
+            has_global_access=True,
+        )
+        return org
 
     def create_member(self, teams=None, **kwargs):
         kwargs.setdefault('type', OrganizationMemberType.MEMBER)
diff --git a/src/sentry/web/frontend/create_organization.py b/src/sentry/web/frontend/create_organization.py
index 101ae96407..aaca95c846 100644
--- a/src/sentry/web/frontend/create_organization.py
+++ b/src/sentry/web/frontend/create_organization.py
@@ -7,7 +7,8 @@ from django.utils.translation import ugettext_lazy as _
 
 from sentry import features
 from sentry.models import (
-    AuditLogEntry, AuditLogEntryEvent, Organization
+    AuditLogEntry, AuditLogEntryEvent, Organization, OrganizationMember,
+    OrganizationMemberType
 )
 from sentry.web.frontend.base import BaseView
 
@@ -35,6 +36,13 @@ class CreateOrganizationView(BaseView):
             org.owner = request.user
             org.save()
 
+            OrganizationMember.objects.create(
+                organization=org,
+                user=request.user,
+                type=OrganizationMemberType.OWNER,
+                has_global_access=True,
+            )
+
             AuditLogEntry.objects.create(
                 organization=org,
                 actor=request.user,
diff --git a/tests/sentry/web/frontend/test_create_organization.py b/tests/sentry/web/frontend/test_create_organization.py
index bcac89974f..cc98458fa4 100644
--- a/tests/sentry/web/frontend/test_create_organization.py
+++ b/tests/sentry/web/frontend/test_create_organization.py
@@ -3,7 +3,9 @@ from __future__ import absolute_import
 from django.core.urlresolvers import reverse
 from exam import fixture
 
-from sentry.models import Organization
+from sentry.models import (
+    Organization, OrganizationMember, OrganizationMemberType
+)
 from sentry.testutils import TestCase
 
 
@@ -28,7 +30,11 @@ class CreateOrganizationTest(TestCase):
 
         org = Organization.objects.get(name='bar')
 
-        assert org.owner == self.user
+        assert OrganizationMember.objects.filter(
+            organization=org,
+            user=self.user,
+            type=OrganizationMemberType.OWNER,
+        ).exists()
 
         redirect_uri = reverse('sentry-create-team', args=[org.slug])
         assert resp['Location'] == 'http://testserver%s' % (redirect_uri,)
diff --git a/tests/sentry/web/frontend/test_project_issue_tracking.py b/tests/sentry/web/frontend/test_project_issue_tracking.py
index 4d9056f908..9659d50d8e 100644
--- a/tests/sentry/web/frontend/test_project_issue_tracking.py
+++ b/tests/sentry/web/frontend/test_project_issue_tracking.py
@@ -9,7 +9,8 @@ from sentry.testutils import TestCase
 class ProjectIssueTrackingTest(TestCase):
     def setUp(self):
         super(ProjectIssueTrackingTest, self).setUp()
-        self.organization = self.create_organization()
+        self.owner = self.create_user()
+        self.organization = self.create_organization(owner=self.owner)
         self.team = self.create_team(organization=self.organization)
         self.project = self.create_project(team=self.team)
 
@@ -20,7 +21,7 @@ class ProjectIssueTrackingTest(TestCase):
         ])
 
     def test_renders_with_context(self):
-        self.login_as(self.organization.owner)
+        self.login_as(self.owner)
         resp = self.client.get(self.path)
         assert resp.status_code == 200
         self.assertTemplateUsed(resp, 'sentry/project-issue-tracking.html')
diff --git a/tests/sentry/web/frontend/test_project_notifications.py b/tests/sentry/web/frontend/test_project_notifications.py
index 24c0bb0747..bbb42166f9 100644
--- a/tests/sentry/web/frontend/test_project_notifications.py
+++ b/tests/sentry/web/frontend/test_project_notifications.py
@@ -9,7 +9,8 @@ from sentry.testutils import TestCase
 class ProjectNotificationsTest(TestCase):
     def setUp(self):
         super(ProjectNotificationsTest, self).setUp()
-        self.organization = self.create_organization()
+        self.owner = self.create_user()
+        self.organization = self.create_organization(owner=self.owner)
         self.team = self.create_team(organization=self.organization)
         self.project = self.create_project(team=self.team)
 
@@ -20,7 +21,7 @@ class ProjectNotificationsTest(TestCase):
         ])
 
     def test_renders_with_context(self):
-        self.login_as(self.organization.owner)
+        self.login_as(self.owner)
         resp = self.client.get(self.path)
         assert resp.status_code == 200
         self.assertTemplateUsed(resp, 'sentry/project-notifications.html')
diff --git a/tests/sentry/web/frontend/test_project_release_tracking.py b/tests/sentry/web/frontend/test_project_release_tracking.py
index 84fb245db6..705907efff 100644
--- a/tests/sentry/web/frontend/test_project_release_tracking.py
+++ b/tests/sentry/web/frontend/test_project_release_tracking.py
@@ -9,7 +9,8 @@ from sentry.testutils import TestCase
 class ProjectReleaseTrackingTest(TestCase):
     def setUp(self):
         super(ProjectReleaseTrackingTest, self).setUp()
-        self.organization = self.create_organization()
+        self.owner = self.create_user()
+        self.organization = self.create_organization(owner=self.owner)
         self.team = self.create_team(organization=self.organization)
         self.project = self.create_project(team=self.team)
 
@@ -20,7 +21,7 @@ class ProjectReleaseTrackingTest(TestCase):
         ])
 
     def test_renders_with_context(self):
-        self.login_as(self.organization.owner)
+        self.login_as(self.owner)
         resp = self.client.get(self.path)
         assert resp.status_code == 200
         self.assertTemplateUsed(resp, 'sentry/project-release-tracking.html')
diff --git a/tests/sentry/web/frontend/test_project_settings.py b/tests/sentry/web/frontend/test_project_settings.py
index 15f576e9cb..0cc0be3698 100644
--- a/tests/sentry/web/frontend/test_project_settings.py
+++ b/tests/sentry/web/frontend/test_project_settings.py
@@ -57,7 +57,8 @@ class OriginsFieldTest(TestCase):
 class ProjectSettingsTest(TestCase):
     def setUp(self):
         super(ProjectSettingsTest, self).setUp()
-        self.organization = self.create_organization()
+        self.owner = self.create_user()
+        self.organization = self.create_organization(owner=self.owner)
         self.team = self.create_team(organization=self.organization)
         self.project = self.create_project(team=self.team)
 
@@ -66,14 +67,14 @@ class ProjectSettingsTest(TestCase):
         return reverse('sentry-manage-project', args=[self.organization.slug, self.project.slug])
 
     def test_renders_with_context(self):
-        self.login_as(self.organization.owner)
+        self.login_as(self.owner)
         resp = self.client.get(self.path)
         assert resp.status_code == 200
         self.assertTemplateUsed(resp, 'sentry/projects/manage.html')
         assert resp.context['project'] == self.project
 
     def test_valid_params(self):
-        self.login_as(self.organization.owner)
+        self.login_as(self.owner)
         resp = self.client.post(self.path, {
             'name': 'bar',
             'slug': self.project.slug,
diff --git a/tests/sentry/web/frontend/test_remove_team.py b/tests/sentry/web/frontend/test_remove_team.py
index fa3d8c4f49..15b46cc8be 100644
--- a/tests/sentry/web/frontend/test_remove_team.py
+++ b/tests/sentry/web/frontend/test_remove_team.py
@@ -30,11 +30,11 @@ class RemoveTeamPermissionTest(PermissionTestCase):
 class RemoveTeamTest(TestCase):
     def setUp(self):
         super(RemoveTeamTest, self).setUp()
-        owner = self.create_user(email='example@example.com')
-        organization = self.create_organization(owner=owner)
-        self.team = self.create_team(name='bar', organization=organization)
-        self.path = reverse('sentry-remove-team', args=[organization.slug, self.team.slug])
-        self.login_as(self.organization.owner)
+        self.owner = self.create_user(email='example@example.com')
+        self.organization = self.create_organization(owner=self.owner)
+        self.team = self.create_team(name='bar', organization=self.organization)
+        self.path = reverse('sentry-remove-team', args=[self.organization.slug, self.team.slug])
+        self.login_as(self.owner)
 
     def test_does_load(self):
         resp = self.client.get(self.path)
