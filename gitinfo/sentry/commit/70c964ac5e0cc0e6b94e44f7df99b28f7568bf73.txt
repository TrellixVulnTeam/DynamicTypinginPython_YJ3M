commit 70c964ac5e0cc0e6b94e44f7df99b28f7568bf73
Author: David Cramer <dcramer@gmail.com>
Date:   Mon Nov 30 16:22:29 2015 -0800

    Capture package versions with beacon (fixes GH-2316)

diff --git a/src/sentry/debug/utils/packages.py b/src/sentry/debug/utils/packages.py
new file mode 100644
index 0000000000..74748ac6b2
--- /dev/null
+++ b/src/sentry/debug/utils/packages.py
@@ -0,0 +1,69 @@
+from __future__ import absolute_import
+
+import sys
+
+try:
+    import pkg_resources
+except ImportError:
+    pkg_resources = None  # NOQA
+
+
+def get_package_version(module_name, app):
+    version = None
+
+    # Try to pull version from pkg_resource first
+    # as it is able to detect version tagged with egg_info -b
+    if pkg_resources is not None:
+        # pull version from pkg_resources if distro exists
+        try:
+            return pkg_resources.get_distribution(module_name).version
+        except pkg_resources.DistributionNotFound:
+            pass
+
+    if hasattr(app, 'get_version'):
+        version = app.get_version
+    elif hasattr(app, '__version__'):
+        version = app.__version__
+    elif hasattr(app, 'VERSION'):
+        version = app.VERSION
+    elif hasattr(app, 'version'):
+        version = app.version
+
+    if callable(version):
+        try:
+            version = version()
+        except Exception:
+            return None
+
+    if not isinstance(version, (basestring, list, tuple)):
+        version = None
+
+    if version is None:
+        return None
+
+    if isinstance(version, (list, tuple)):
+        version = '.'.join(map(str, version))
+
+    return str(version)
+
+
+def get_all_package_versions():
+    packages = {}
+    for module_name, app in sys.modules.items():
+        # ignore items that look like submodules
+        if '.' in module_name:
+            continue
+
+        if 'sys' == module_name:
+            continue
+
+        version = get_package_version(module_name, app)
+
+        if version is None:
+            continue
+
+        packages[module_name] = version
+
+    packages['sys'] = '{0}.{1}.{2}'.format(*sys.version_info)
+
+    return packages
diff --git a/src/sentry/tasks/beacon.py b/src/sentry/tasks/beacon.py
index ce01b217a4..7950d875bb 100644
--- a/src/sentry/tasks/beacon.py
+++ b/src/sentry/tasks/beacon.py
@@ -21,6 +21,7 @@ from uuid import uuid4
 from sentry.app import tsdb
 from sentry.http import safe_urlopen, safe_urlread
 from sentry.tasks.base import instrumented_task
+from sentry.debug.utils.packages import get_all_package_versions
 
 BEACON_URL = 'https://getsentry.com/remote/beacon/'
 
@@ -67,7 +68,8 @@ def send_beacon():
             'teams': Team.objects.count(),
             'organizations': Organization.objects.count(),
             'events.24h': events_24h,
-        }
+        },
+        'packages': get_all_package_versions(),
     }
 
     # TODO(dcramer): relay the response 'notices' as admin broadcasts
