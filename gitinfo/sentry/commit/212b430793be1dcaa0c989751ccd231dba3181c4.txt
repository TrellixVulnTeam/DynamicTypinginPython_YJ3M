commit 212b430793be1dcaa0c989751ccd231dba3181c4
Author: Mark Story <mark@sentry.io>
Date:   Mon Feb 10 15:18:28 2020 -0500

    fix(discover) Reflow the results table on column removal (#16887)
    
    If all columns in the result table are sized and a column is removed,
    the first column should be set to autoflow. This ensures that the
    remaining columns shrink/expand to fill the available space in the
    table.

diff --git a/src/sentry/static/sentry/app/views/eventsV2/eventView.tsx b/src/sentry/static/sentry/app/views/eventsV2/eventView.tsx
index ab36d7f4ba..844cc1143b 100644
--- a/src/sentry/static/sentry/app/views/eventsV2/eventView.tsx
+++ b/src/sentry/static/sentry/app/views/eventsV2/eventView.tsx
@@ -707,6 +707,13 @@ class EventView {
     fields.splice(columnIndex, 1);
     newEventView.fields = fields;
 
+    // Ensure there is at least one auto width column
+    // To ensure a well formed table results.
+    const hasAutoIndex = fields.find(field => field.width === COL_WIDTH_UNDEFINED);
+    if (!hasAutoIndex) {
+      newEventView.fields[0].width = COL_WIDTH_UNDEFINED;
+    }
+
     // if the deleted column is one of the sorted columns, we need to remove
     // it from the list of sorts
     const columnToBeDeleted = this.fields[columnIndex];
diff --git a/tests/js/spec/views/eventsV2/eventView.spec.jsx b/tests/js/spec/views/eventsV2/eventView.spec.jsx
index 120306843b..43bf4ca723 100644
--- a/tests/js/spec/views/eventsV2/eventView.spec.jsx
+++ b/tests/js/spec/views/eventsV2/eventView.spec.jsx
@@ -1507,6 +1507,34 @@ describe('EventView.withDeletedColumn()', function() {
 
       expect(eventView2).toMatchObject(nextState);
     });
+
+    it('ensures there is at one auto-width column on deletion', function() {
+      const modifiedState = {
+        ...state,
+        fields: [
+          {field: 'id', width: 75},
+          {field: 'title', width: 100},
+          {field: 'project', width: 80},
+          {field: 'environment', width: 99},
+        ],
+      };
+
+      const eventView = new EventView(modifiedState);
+      let updated = eventView.withDeletedColumn(0, meta);
+      let updatedFields = [
+        {field: 'title', width: -1},
+        {field: 'project', width: 80},
+        {field: 'environment', width: 99},
+      ];
+      expect(updated.fields).toEqual(updatedFields);
+
+      updated = updated.withDeletedColumn(0, meta);
+      updatedFields = [
+        {field: 'project', width: -1},
+        {field: 'environment', width: 99},
+      ];
+      expect(updated.fields).toEqual(updatedFields);
+    });
   });
 });
 
