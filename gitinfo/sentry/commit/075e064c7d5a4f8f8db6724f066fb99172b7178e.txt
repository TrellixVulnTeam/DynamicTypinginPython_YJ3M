commit 075e064c7d5a4f8f8db6724f066fb99172b7178e
Author: Bruno Garcia <github@brunogarcia.com>
Date:   Thu Oct 25 21:33:13 2018 +0200

    feat: new device fields (#10232)
    
    * feat: new device fields
    * ref: remove dupe ignore entry
    * test: unity snapshot
    * ref: prettify json
    * ref: allow 4 contexts when possible

diff --git a/.gitignore b/.gitignore
index 746470a1e2..1f07cc05ba 100644
--- a/.gitignore
+++ b/.gitignore
@@ -41,5 +41,4 @@ Gemfile.lock
 coverage.xml
 junit.xml
 *.codestyle.xml
-.pytest_cache/
 package-lock.json
diff --git a/src/sentry/data/samples/unity.json b/src/sentry/data/samples/unity.json
new file mode 100644
index 0000000000..d3e5c8fd8f
--- /dev/null
+++ b/src/sentry/data/samples/unity.json
@@ -0,0 +1,228 @@
+{
+  "event_id": "ce6ab074ae0d45388af7a1cbb9eb092d",
+  "message": "DivideByZeroException",
+  "timestamp": "2018-10-25T13:03:40",
+  "logger": "",
+  "platform": "csharp",
+  "release": "1.1",
+  "contexts": {
+    "app": {
+      "app_identifier": "",
+      "app_start_time": "2018-10-25T13:02:58Z",
+      "device_app_hash": "",
+      "build_type": "release",
+      "app_name": "",
+      "app_version": "",
+      "app_build": ""
+    },
+    "gpu": {
+      "name": "AMD Radeon Pro 560",
+      "id": 0,
+      "vendor_id": 0,
+      "vendor_name": "Apple",
+      "memory_size": 4096,
+      "api_type": "Metal",
+      "multi_threaded_rendering": true,
+      "version": "Metal",
+      "npot_support": "Full"
+    },
+    "os": {
+      "name": "Mac OS X 10.14.0",
+      "version": "",
+      "raw_description": "",
+      "build": "",
+      "kernel_version": ""
+    },
+    "device": {
+      "name": "Brunoâ€™s MacBook Pro",
+      "family": "",
+      "model": "MacBookPro14,3",
+      "model_id": "",
+      "arch": "",
+      "cpu_description": "Intel(R) Core(TM) i7-7920HQ CPU @ 3.10GHz",
+      "battery_level": 100,
+      "battery_status": "Full",
+      "orientation": "",
+      "simulator": false,
+      "memory_size": 17179869184,
+      "timezone": "",
+      "device_type": "Desktop"
+    }
+  },
+  "sdk": {
+    "name": "sentry.unity.lite",
+    "version": "0.0.2"
+  },
+  "breadcrumbs": [
+    {
+      "timestamp": "2018-10-25T13:03:02",
+      "message": "Frame number: 100"
+    },
+    {
+      "timestamp": "2018-10-25T13:03:04",
+      "message": "Frame number: 200"
+    },
+    {
+      "timestamp": "2018-10-25T13:03:06",
+      "message": "Frame number: 300"
+    },
+    {
+      "timestamp": "2018-10-25T13:03:07",
+      "message": "Frame number: 400"
+    },
+    {
+      "timestamp": "2018-10-25T13:03:10",
+      "message": "Frame number: 500"
+    },
+    {
+      "timestamp": "2018-10-25T13:03:12",
+      "message": "Frame number: 600"
+    },
+    {
+      "timestamp": "2018-10-25T13:03:14",
+      "message": "Frame number: 700"
+    },
+    {
+      "timestamp": "2018-10-25T13:03:15",
+      "message": "Frame number: 800"
+    },
+    {
+      "timestamp": "2018-10-25T13:03:17",
+      "message": "Frame number: 900"
+    },
+    {
+      "timestamp": "2018-10-25T13:03:19",
+      "message": "Frame number: 1000"
+    },
+    {
+      "timestamp": "2018-10-25T13:03:20",
+      "message": "Frame number: 1100"
+    },
+    {
+      "timestamp": "2018-10-25T13:03:22",
+      "message": "Frame number: 1200"
+    },
+    {
+      "timestamp": "2018-10-25T13:03:24",
+      "message": "Frame number: 1300"
+    },
+    {
+      "timestamp": "2018-10-25T13:03:25",
+      "message": "Frame number: 1400"
+    },
+    {
+      "timestamp": "2018-10-25T13:03:27",
+      "message": "Frame number: 1500"
+    },
+    {
+      "timestamp": "2018-10-25T13:03:29",
+      "message": "Frame number: 1600"
+    },
+    {
+      "timestamp": "2018-10-25T13:03:30",
+      "message": "Frame number: 1700"
+    },
+    {
+      "timestamp": "2018-10-25T13:03:32",
+      "message": "Frame number: 1800"
+    },
+    {
+      "timestamp": "2018-10-25T13:03:34",
+      "message": "Frame number: 1900"
+    },
+    {
+      "timestamp": "2018-10-25T13:03:35",
+      "message": "Frame number: 2000"
+    },
+    {
+      "timestamp": "2018-10-25T13:03:37",
+      "message": "Frame number: 2100"
+    },
+    {
+      "timestamp": "2018-10-25T13:03:39",
+      "message": "Frame number: 2200"
+    }
+  ],
+  "tags": {
+    "deviceUniqueIdentifier": "C52DC39D-DAF3-5E36-A8D3-BF5F53A5D38F"
+  },
+  "extra": {
+    "unityVersion": "2018.3.0b4",
+    "screenOrientation": "Portrait"
+  },
+  "exception": {
+    "values": [
+      {
+        "type": "DivideByZeroException",
+        "value": "Attempted to divide by zero.",
+        "stacktrace": {
+          "frames": [
+            {
+              "filename": "",
+              "function": "UnityEngine.EventSystems.EventSystem:Update()",
+              "module": "",
+              "lineno": -1,
+              "in_app": false
+            },
+            {
+              "filename": "",
+              "function": "UnityEngine.EventSystems.ExecuteEvents.Execute[T] (UnityEngine.GameObject target, UnityEngine.EventSystems.BaseEventData eventData, UnityEngine.EventSystems.ExecuteEvents+EventFunction`1[T1] functor)",
+              "module": "",
+              "lineno": 0,
+              "in_app": false
+            },
+            {
+              "filename": "",
+              "function": "UnityEngine.EventSystems.ExecuteEvents.Execute (UnityEngine.EventSystems.IPointerClickHandler handler, UnityEngine.EventSystems.BaseEventData eventData)",
+              "module": "",
+              "lineno": 0,
+              "in_app": false
+            },
+            {
+              "filename": "",
+              "function": "UnityEngine.UI.Button.OnPointerClick (UnityEngine.EventSystems.PointerEventData eventData)",
+              "module": "",
+              "lineno": 0,
+              "in_app": false
+            },
+            {
+              "filename": "",
+              "function": "UnityEngine.UI.Button.Press ()",
+              "module": "",
+              "lineno": 0,
+              "in_app": false
+            },
+            {
+              "filename": "",
+              "function": "UnityEngine.Events.UnityEvent.Invoke ()",
+              "module": "",
+              "lineno": 0,
+              "in_app": false
+            },
+            {
+              "filename": "",
+              "function": "UnityEngine.Events.CachedInvokableCall`1[T].Invoke (System.Object[] args)",
+              "module": "",
+              "lineno": 0,
+              "in_app": false
+            },
+            {
+              "filename": "",
+              "function": "UnityEngine.Events.InvokableCall`1[T1].Invoke (T1 args0)",
+              "module": "",
+              "lineno": 0,
+              "in_app": false
+            },
+            {
+              "filename": "",
+              "function": "SentryTest.SendMessage (System.String message)",
+              "module": "",
+              "lineno": 0,
+              "in_app": true
+            }
+          ]
+        }
+      }
+    ]
+  }
+}
\ No newline at end of file
diff --git a/src/sentry/static/sentry/app/components/events/contexts/device.jsx b/src/sentry/static/sentry/app/components/events/contexts/device.jsx
index 4171919f07..60dc7efbe1 100644
--- a/src/sentry/static/sentry/app/components/events/contexts/device.jsx
+++ b/src/sentry/static/sentry/app/components/events/contexts/device.jsx
@@ -58,8 +58,10 @@ class DeviceContextType extends React.Component {
       family,
       model,
       model_id,
+      cpu_description,
       arch,
       battery_level,
+      battery_status,
       orientation,
       simulator,
       memory_size,
@@ -71,6 +73,7 @@ class DeviceContextType extends React.Component {
       external_free_storage,
       boot_time,
       timezone,
+      device_type,
       ...data
     } = this.props.data;
     let memory = this.formatMemory(memory_size, free_memory, usable_memory);
@@ -87,14 +90,17 @@ class DeviceContextType extends React.Component {
           ['?Name', name],
           ['?Family', family],
           ['?Model', model + (model_id ? ` (${model_id})` : '')],
+          ['?CPU Description', cpu_description],
           ['?Architecture', arch],
           ['?Battery Level', defined(battery_level) ? `${battery_level}%` : null],
+          ['?Battery Status', battery_status],
           ['?Orientation', orientation],
           ['?Memory', memory],
           ['?Capacity', storage],
           ['?Simulator', simulator],
           ['?Boot Time', boot_time],
           ['?Timezone', timezone],
+          ['?Device Type', device_type],
         ]}
         alias={this.props.alias}
       />
diff --git a/src/sentry/static/sentry/less/group-detail.less b/src/sentry/static/sentry/less/group-detail.less
index c37d63dc73..5b733a6faf 100644
--- a/src/sentry/static/sentry/less/group-detail.less
+++ b/src/sentry/static/sentry/less/group-detail.less
@@ -2673,6 +2673,19 @@ ul.crumbs {
   }
 }
 
+/**
+* Responsive medium-large screen
+* ============================================================================
+*/
+
+@media (max-width: 1460px) {
+  .context-summary {
+    .context-item:nth-child(4) {
+      display: none;
+    }
+  }
+}
+
 /**
 * Responsive medium screen
 * ============================================================================
@@ -2799,6 +2812,10 @@ ul.crumbs {
       padding-bottom: 14px;
       min-height: 67px;
 
+      &:nth-child(4) {
+        display: block;
+      }
+
       .context-item-icon {
         top: 9px;
       }
diff --git a/tests/acceptance/test_issue_details.py b/tests/acceptance/test_issue_details.py
index 40f9cfe100..fd59c4f697 100644
--- a/tests/acceptance/test_issue_details.py
+++ b/tests/acceptance/test_issue_details.py
@@ -20,10 +20,11 @@ class IssueDetailsTest(AcceptanceTestCase):
         )
         self.login_as(self.user)
 
-    def create_sample_event(self, platform, sample_name=None):
+    def create_sample_event(self, platform, default=None, sample_name=None):
         event = create_sample_event(
             project=self.project,
             platform=platform,
+            default=default,
             sample_name=sample_name,
             event_id='d964fdbd649a4cf8bfc35d18082b6b0e',
             timestamp=1452683305,
@@ -57,6 +58,19 @@ class IssueDetailsTest(AcceptanceTestCase):
         self.browser.wait_until('[data-test-id="loaded-device-name"]')
         self.browser.snapshot('issue details cocoa')
 
+    def test_unity_event(self):
+        event = self.create_sample_event(
+            default='unity',
+            platform='csharp'
+        )
+
+        self.browser.get(
+            u'/{}/{}/issues/{}/'.format(self.org.slug, self.project.slug, event.group.id)
+        )
+        self.browser.wait_until('.entries')
+        self.browser.wait_until('[data-test-id="loaded-device-name"]')
+        self.browser.snapshot('issue details unity')
+
     def test_javascript_specific_event(self):
         event = self.create_sample_event(
             platform='javascript'
