commit 310d38488963c46ae4f182382d68d0045ab87de2
Author: MeredithAnya <meredith.a.heller@gmail.com>
Date:   Wed Oct 24 10:16:59 2018 -0700

    feat(app-platform): Add org sentry apps endpoint (#10253)

diff --git a/src/sentry/api/endpoints/organization_sentry_apps.py b/src/sentry/api/endpoints/organization_sentry_apps.py
new file mode 100644
index 0000000000..e6897e272b
--- /dev/null
+++ b/src/sentry/api/endpoints/organization_sentry_apps.py
@@ -0,0 +1,23 @@
+from __future__ import absolute_import
+
+from sentry.api.bases import OrganizationEndpoint
+from sentry.api.paginator import OffsetPaginator
+from sentry.api.serializers import serialize
+from sentry.features.helpers import requires_feature
+from sentry.models import SentryApp
+
+
+class OrganizationSentryAppsEndpoint(OrganizationEndpoint):
+    @requires_feature('organizations:internal-catchall')
+    def get(self, request, organization):
+        queryset = SentryApp.objects.filter(
+            owner=organization,
+        )
+
+        return self.paginate(
+            request=request,
+            queryset=queryset,
+            order_by='-date_added',
+            paginator_cls=OffsetPaginator,
+            on_results=lambda x: serialize(x, request.user),
+        )
diff --git a/src/sentry/api/urls.py b/src/sentry/api/urls.py
index efbef7bd50..b694c6ae9e 100644
--- a/src/sentry/api/urls.py
+++ b/src/sentry/api/urls.py
@@ -94,6 +94,7 @@ from .endpoints.organization_repository_commits import OrganizationRepositoryCom
 from .endpoints.organization_repository_details import OrganizationRepositoryDetailsEndpoint
 from .endpoints.organization_sentry_app_installations import OrganizationSentryAppInstallationsEndpoint
 from .endpoints.organization_sentry_app_installation_details import OrganizationSentryAppInstallationDetailsEndpoint
+from .endpoints.organization_sentry_apps import OrganizationSentryAppsEndpoint
 from .endpoints.organization_stats import OrganizationStatsEndpoint
 from .endpoints.organization_teams import OrganizationTeamsEndpoint
 from .endpoints.organization_user_issues import OrganizationUserIssuesEndpoint
@@ -618,6 +619,11 @@ urlpatterns = patterns(
         OrganizationSentryAppInstallationDetailsEndpoint.as_view(),
         name='sentry-api-0-organization-sentry-app-installations-details'
     ),
+    url(
+        r'^organizations/(?P<organization_slug>[^\/]+)/sentry-apps/$',
+        OrganizationSentryAppsEndpoint.as_view(),
+        name='sentry-api-0-organization-sentry-apps'
+    ),
     url(
         r'^organizations/(?P<organization_slug>[^\/]+)/stats/$',
         OrganizationStatsEndpoint.as_view(),
diff --git a/tests/sentry/api/endpoints/test_organization_sentry_apps.py b/tests/sentry/api/endpoints/test_organization_sentry_apps.py
new file mode 100644
index 0000000000..594840874f
--- /dev/null
+++ b/tests/sentry/api/endpoints/test_organization_sentry_apps.py
@@ -0,0 +1,59 @@
+from __future__ import absolute_import
+
+from django.core.urlresolvers import reverse
+
+from sentry.constants import SentryAppStatus
+from sentry.testutils import APITestCase
+from sentry.testutils.helpers import with_feature
+from sentry.mediators.sentry_apps import Creator as SentryAppCreator
+
+
+class OrganizationSentryAppsTest(APITestCase):
+    def setUp(self):
+        self.superuser = self.create_user(email='a@example.com', is_superuser=True)
+        self.user = self.create_user(email='boop@example.com')
+        self.org = self.create_organization(owner=self.user)
+        self.super_org = self.create_organization(owner=self.superuser)
+        self.published_app = SentryAppCreator.run(
+            name='Test',
+            organization=self.super_org,
+            scopes=(),
+            webhook_url='https://example.com',
+        )
+        self.published_app.update(status=SentryAppStatus.PUBLISHED)
+        self.unpublished_app = SentryAppCreator.run(
+            name='Testin',
+            organization=self.org,
+            scopes=(),
+            webhook_url='https://example.com',
+        )
+        self.url = reverse('sentry-api-0-organization-sentry-apps', args=[self.org.slug])
+
+
+class GetOrganizationSentryAppsTest(OrganizationSentryAppsTest):
+    @with_feature('organizations:internal-catchall')
+    def test_gets_all_apps_in_own_org(self):
+        self.login_as(user=self.user)
+        response = self.client.get(self.url, format='json')
+
+        assert response.status_code == 200
+        assert response.data == [{
+            'name': self.unpublished_app.name,
+            'scopes': [],
+            'uuid': self.unpublished_app.uuid,
+            'webhook_url': self.unpublished_app.webhook_url,
+        }]
+
+    @with_feature('organizations:internal-catchall')
+    def test_cannot_see_apps_in_other_orgs(self):
+        self.login_as(user=self.user)
+        url = reverse('sentry-api-0-organization-sentry-apps', args=[self.super_org.slug])
+        response = self.client.get(url, format='json')
+
+        assert response.status_code == 403
+
+    def test_no_access_without_internal_catchall(self):
+        self.login_as(user=self.user)
+
+        response = self.client.get(self.url, format='json')
+        assert response.status_code == 404
