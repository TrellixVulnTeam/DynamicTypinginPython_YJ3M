commit 964b6660ae82808f99ad95feffd56fc78336e259
Author: David Cramer <dcramer@gmail.com>
Date:   Sun Nov 23 04:26:20 2014 -0800

    Remove TestCase.login() and use of @before

diff --git a/src/sentry/testutils/cases.py b/src/sentry/testutils/cases.py
index 0b947af2e4..8dfed2e73e 100644
--- a/src/sentry/testutils/cases.py
+++ b/src/sentry/testutils/cases.py
@@ -89,9 +89,6 @@ class BaseTestCase(Fixtures, Exam):
         }
         self.client.cookies[session_cookie].update(cookie_data)
 
-    def login(self):
-        self.login_as(self.user)
-
     def load_fixture(self, filepath):
         filepath = os.path.join(
             MODULE_ROOT,
diff --git a/tests/sentry/web/api/tests.py b/tests/sentry/web/api/tests.py
index a9691d3b0b..be87d329d0 100644
--- a/tests/sentry/web/api/tests.py
+++ b/tests/sentry/web/api/tests.py
@@ -5,7 +5,7 @@ from __future__ import absolute_import
 import mock
 
 from django.core.urlresolvers import reverse
-from exam import before, fixture
+from exam import fixture
 
 from sentry.models import OrganizationMember, User
 from sentry.testutils import TestCase
@@ -130,9 +130,9 @@ class SearchUsersTest(TestCase):
     def path(self):
         return reverse('sentry-api-search-users', args=[self.team.slug])
 
-    @before
-    def login_user(self):
-        self.login()
+    def setUp(self):
+        super(SearchUsersTest, self).setUp()
+        self.login_as(self.user)
 
     def test_finds_users_from_organization_members(self):
         otheruser = User.objects.create(first_name='Bob Ross', username='bobross', email='bob@example.com')
@@ -173,9 +173,9 @@ class SearchProjectsTest(TestCase):
     def path(self):
         return reverse('sentry-api-search-projects', args=[self.team.slug])
 
-    @before
-    def login_user(self):
-        self.login()
+    def setUp(self):
+        super(SearchProjectsTest, self).setUp()
+        self.login_as(self.user)
 
     def test_finds_projects_from_team(self):
         project = self.create_project(team=self.team, name='Sample')
diff --git a/tests/sentry/web/frontend/accounts/tests.py b/tests/sentry/web/frontend/accounts/tests.py
index 7f3b8fa487..e8e9638a33 100644
--- a/tests/sentry/web/frontend/accounts/tests.py
+++ b/tests/sentry/web/frontend/accounts/tests.py
@@ -6,7 +6,7 @@ import mock
 
 from django.core.urlresolvers import reverse
 from django.http import HttpRequest
-from exam import before, fixture
+from exam import fixture
 from social_auth.models import UserSocialAuth
 
 from sentry.models import UserOption, LostPasswordHash, User
@@ -307,8 +307,8 @@ class RecoverPasswordTest(TestCase):
 
 
 class RecoverPasswordConfirmTest(TestCase):
-    @before
-    def create_hash(self):
+    def setUp(self):
+        super(RecoverPasswordConfirmTest, self).setUp()
         self.password_hash = LostPasswordHash.objects.create(user=self.user)
 
     @fixture
diff --git a/tests/sentry/web/frontend/generic/tests.py b/tests/sentry/web/frontend/generic/tests.py
index d8b08106b2..46012b1724 100644
--- a/tests/sentry/web/frontend/generic/tests.py
+++ b/tests/sentry/web/frontend/generic/tests.py
@@ -1,7 +1,7 @@
 import mock
 
 from django.core.urlresolvers import reverse
-from exam import before, fixture
+from exam import fixture
 
 from sentry import options
 from sentry.models import Team
@@ -9,9 +9,9 @@ from sentry.testutils import TestCase
 
 
 class DashboardTest(TestCase):
-    @before
-    def login_user(self):
-        self.login()
+    def setUp(self):
+        super(DashboardTest, self).setUp()
+        self.login_as(self.user)
 
     @fixture
     def path(self):
@@ -60,10 +60,10 @@ class UpdateAvailableTest(TestCase):
 
     UPDATE_MESSAGE = "You're running a year old version of Sentry"
 
-    @before
-    def login_user(self):
+    def setUp(self):
+        super(UpdateAvailableTest, self).setUp()
         Team.objects.create(name='test', owner=self.user)
-        self.login()
+        self.login_as(self.user)
 
     @fixture
     def path(self):
diff --git a/tests/sentry/web/frontend/groups/tests.py b/tests/sentry/web/frontend/groups/tests.py
index 240c12dedd..566ba16acf 100644
--- a/tests/sentry/web/frontend/groups/tests.py
+++ b/tests/sentry/web/frontend/groups/tests.py
@@ -7,7 +7,7 @@ import json
 from datetime import timedelta
 from django.core.urlresolvers import reverse
 from django.utils import timezone
-from exam import before, fixture
+from exam import fixture
 
 from sentry.models import GroupSeen, Group
 from sentry.testutils import TestCase
@@ -23,7 +23,7 @@ class GroupDetailsTest(TestCase):
         })
 
     def test_simple(self):
-        self.login()
+        self.login_as(self.user)
         resp = self.client.get(self.path)
         assert resp.status_code == 200
         self.assertTemplateUsed(resp, 'sentry/groups/details.html')
@@ -47,8 +47,8 @@ class GroupListTest(TestCase):
             'project_id': self.project.slug,
         })
 
-    @before
-    def create_a_couple_events(self):
+    def setUp(self):
+        super(GroupListTest, self).setUp()
         later = timezone.now()
         now = later - timedelta(hours=1)
         past = now - timedelta(hours=1)
@@ -69,7 +69,7 @@ class GroupListTest(TestCase):
         )
 
     def test_does_render(self):
-        self.login()
+        self.login_as(self.user)
         resp = self.client.get(self.path)
         assert resp.status_code == 200
         self.assertTemplateUsed(resp, 'sentry/groups/group_list.html')
@@ -80,14 +80,14 @@ class GroupListTest(TestCase):
         assert resp.context['team'] == self.team
 
     def test_date_sort(self):
-        self.login()
+        self.login_as(self.user)
         resp = self.client.get(self.path + '?sort=date')
         assert resp.status_code == 200
         self.assertTemplateUsed(resp, 'sentry/groups/group_list.html')
         assert list(resp.context['event_list']) == [self.group2, self.group1]
 
     def test_new_sort(self):
-        self.login()
+        self.login_as(self.user)
         resp = self.client.get(self.path + '?sort=new')
         assert resp.status_code == 200
         self.assertTemplateUsed(resp, 'sentry/groups/group_list.html')
@@ -95,7 +95,7 @@ class GroupListTest(TestCase):
         assert list(resp.context['event_list']) == [self.group1, self.group2]
 
     def test_freq_sort(self):
-        self.login()
+        self.login_as(self.user)
         resp = self.client.get(self.path + '?sort=freq')
         assert resp.status_code == 200
         self.assertTemplateUsed(resp, 'sentry/groups/group_list.html')
@@ -117,7 +117,7 @@ class GroupEventListTest(TestCase):
         event2 = self.create_event(
             event_id='b' * 32, datetime=timezone.now())
 
-        self.login()
+        self.login_as(self.user)
         resp = self.client.get(self.path)
         assert resp.status_code == 200
         self.assertTemplateUsed(resp, 'sentry/groups/event_list.html')
@@ -144,7 +144,7 @@ class GroupTagListTest(TestCase):
         })
 
     def test_does_render(self):
-        self.login()
+        self.login_as(self.user)
         resp = self.client.get(self.path)
         assert resp.status_code == 200
         self.assertTemplateUsed(resp, 'sentry/groups/tag_list.html')
@@ -168,7 +168,7 @@ class GroupEventDetailsTest(TestCase):
         })
 
     def test_does_render(self):
-        self.login()
+        self.login_as(self.user)
         resp = self.client.get(self.path)
         assert resp.status_code == 200
         self.assertTemplateUsed(resp, 'sentry/groups/details.html')
@@ -193,7 +193,7 @@ class GroupEventJsonTest(TestCase):
         })
 
     def test_does_render(self):
-        self.login()
+        self.login_as(self.user)
         resp = self.client.get(self.path)
         assert resp.status_code == 200
         assert resp['Content-Type'] == 'application/json'
diff --git a/tests/sentry/web/frontend/projects/tests.py b/tests/sentry/web/frontend/projects/tests.py
index bc9632f08c..a71e3f4703 100644
--- a/tests/sentry/web/frontend/projects/tests.py
+++ b/tests/sentry/web/frontend/projects/tests.py
@@ -6,7 +6,7 @@ import mock
 import logging
 
 from django.core.urlresolvers import reverse
-from exam import before, fixture
+from exam import fixture
 
 from sentry.models import ProjectKey, ProjectOption, TagKey
 from sentry.testutils import TestCase
@@ -52,8 +52,8 @@ class NewProjectKeyTest(TestCase):
 
 
 class RemoveProjectKeyTest(TestCase):
-    @before
-    def create_key(self):
+    def setUp(self):
+        super(RemoveProjectKeyTest, self).setUp()
         self.key = ProjectKey.objects.create(project=self.project)
 
     @fixture
diff --git a/tests/sentry/web/frontend/teams/tests.py b/tests/sentry/web/frontend/teams/tests.py
index 14277543b4..0798a74ab3 100644
--- a/tests/sentry/web/frontend/teams/tests.py
+++ b/tests/sentry/web/frontend/teams/tests.py
@@ -3,7 +3,7 @@
 from __future__ import absolute_import
 
 from django.core.urlresolvers import reverse
-from exam import before, fixture
+from exam import fixture
 
 from sentry.constants import MEMBER_OWNER, MEMBER_USER
 from sentry.models import User
@@ -25,8 +25,8 @@ class BaseTeamTest(TestCase):
     def tm2(self):
         return self.team.member_set.get(user=self.user2)
 
-    @before
-    def login_user(self):
+    def setUp(self):
+        super(BaseTeamTest, self).setUp()
         self.login_as(self.user)
 
 
diff --git a/tests/sentry/web/frontend/test_accept_organization_invite.py b/tests/sentry/web/frontend/test_accept_organization_invite.py
index 93ab821e72..d440e6c0ce 100644
--- a/tests/sentry/web/frontend/test_accept_organization_invite.py
+++ b/tests/sentry/web/frontend/test_accept_organization_invite.py
@@ -1,7 +1,6 @@
 from __future__ import absolute_import
 
 from django.core.urlresolvers import reverse
-from exam import before
 
 from sentry.models import (
     AuditLogEntry, AuditLogEntryEvent, OrganizationMember,
@@ -11,8 +10,8 @@ from sentry.testutils import TestCase
 
 
 class AcceptInviteTest(TestCase):
-    @before
-    def setup_fixtures(self):
+    def setUp(self):
+        super(AcceptInviteTest, self).setUp()
         self.organization = self.create_organization(
             owner=self.create_user('foo@example.com'),
         )
diff --git a/tests/sentry/web/frontend/test_remove_team.py b/tests/sentry/web/frontend/test_remove_team.py
index 9352f78b8b..56ba1b7de5 100644
--- a/tests/sentry/web/frontend/test_remove_team.py
+++ b/tests/sentry/web/frontend/test_remove_team.py
@@ -3,15 +3,14 @@ from __future__ import absolute_import
 import mock
 
 from django.core.urlresolvers import reverse
-from exam import before
 
 from sentry.models import Team, TeamStatus
 from sentry.testutils import TestCase
 
 
 class RemoveTeamTest(TestCase):
-    @before
-    def setup_fixtures(self):
+    def setUp(self):
+        super(RemoveTeamTest, self).setUp()
         owner = self.create_user(email='example@example.com')
         organization = self.create_organization(owner=owner)
         self.team = self.create_team(name='bar', organization=organization)
diff --git a/tests/sentry/web/frontend/tests.py b/tests/sentry/web/frontend/tests.py
index 08a5ae319e..686e6aae0d 100644
--- a/tests/sentry/web/frontend/tests.py
+++ b/tests/sentry/web/frontend/tests.py
@@ -20,7 +20,7 @@ class EnvStatusTest(TestCase):
         self.assertEquals(resp.status_code, 302)
 
     def test_renders_template(self):
-        self.login()
+        self.login_as(self.user)
 
         resp = self.client.get(self.path)
         self.assertEquals(resp.status_code, 200)
@@ -37,7 +37,7 @@ class PackageStatusTest(TestCase):
         self.assertEquals(resp.status_code, 302)
 
     def test_renders_template(self):
-        self.login()
+        self.login_as(self.user)
 
         resp = self.client.get(self.path)
         self.assertEquals(resp.status_code, 200)
@@ -54,7 +54,7 @@ class MailStatusTest(TestCase):
         self.assertEquals(resp.status_code, 302)
 
     def test_renders_template(self):
-        self.login()
+        self.login_as(self.user)
 
         resp = self.client.get(self.path)
         self.assertEquals(resp.status_code, 200)
@@ -71,7 +71,7 @@ class StatsTest(TestCase):
         self.assertEquals(resp.status_code, 302)
 
     def test_renders_template(self):
-        self.login()
+        self.login_as(self.user)
 
         resp = self.client.get(self.path)
         self.assertEquals(resp.status_code, 200)
@@ -84,7 +84,7 @@ class ManageUsersTest(TestCase):
         return reverse('sentry-admin-users')
 
     def test_does_render(self):
-        self.login()
+        self.login_as(self.user)
         resp = self.client.get(self.path)
         assert resp.status_code == 200
         self.assertTemplateUsed(resp, 'sentry/admin/users/list.html')
@@ -101,7 +101,7 @@ class ReplayTest(TestCase):
         })
 
     def test_does_render(self):
-        self.login()
+        self.login_as(self.user)
         resp = self.client.get(self.path)
         self.assertEquals(resp.status_code, 200)
         self.assertTemplateUsed(resp, 'sentry/events/replay_request.html')
