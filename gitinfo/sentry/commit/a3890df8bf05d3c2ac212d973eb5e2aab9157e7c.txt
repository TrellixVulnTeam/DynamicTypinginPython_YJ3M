commit a3890df8bf05d3c2ac212d973eb5e2aab9157e7c
Author: Lyn Nagara <lyn.nagara@gmail.com>
Date:   Wed Jan 30 10:41:19 2019 -0800

    feat(ui): Update activity page for Sentry 10 (#11787)
    
    Render links to new pages for Sentry 10

diff --git a/src/sentry/static/sentry/app/components/activity/feed.jsx b/src/sentry/static/sentry/app/components/activity/feed.jsx
index f745fd0123..696ab272a2 100644
--- a/src/sentry/static/sentry/app/components/activity/feed.jsx
+++ b/src/sentry/static/sentry/app/components/activity/feed.jsx
@@ -10,12 +10,14 @@ import ErrorBoundary from 'app/components/errorBoundary';
 import LoadingError from 'app/components/loadingError';
 import LoadingIndicator from 'app/components/loadingIndicator';
 import Pagination from 'app/components/pagination';
+import SentryTypes from 'app/sentryTypes';
 import space from 'app/styles/space';
 
 const ActivityFeed = createReactClass({
   displayName: 'ActivityFeed',
 
   propTypes: {
+    organization: SentryTypes.Organization,
     endpoint: PropTypes.string,
     query: PropTypes.object,
     renderEmpty: PropTypes.func,
@@ -87,7 +89,6 @@ const ActivityFeed = createReactClass({
 
   renderResults() {
     let body;
-    let {orgId} = this.props.params;
 
     if (this.state.loading) body = this.renderLoading();
     else if (this.state.error) body = <LoadingError onRetry={this.fetchData} />;
@@ -103,7 +104,7 @@ const ActivityFeed = createReactClass({
                     css={{marginBottom: space(1), borderRadius: 0}}
                     key={item.id}
                   >
-                    <ActivityItem orgId={orgId} item={item} />
+                    <ActivityItem organization={this.props.organization} item={item} />
                   </ErrorBoundary>
                 );
               } catch (ex) {
diff --git a/src/sentry/static/sentry/app/components/activity/item.jsx b/src/sentry/static/sentry/app/components/activity/item.jsx
index 59cc267769..3c0c576d08 100644
--- a/src/sentry/static/sentry/app/components/activity/item.jsx
+++ b/src/sentry/static/sentry/app/components/activity/item.jsx
@@ -11,6 +11,7 @@ import Avatar from 'app/components/avatar';
 import IssueLink from 'app/components/issueLink';
 import VersionHoverCard from 'app/components/versionHoverCard';
 import MemberListStore from 'app/stores/memberListStore';
+import SentryTypes from 'app/sentryTypes';
 import TeamStore from 'app/stores/teamStore';
 import TimeSince from 'app/components/timeSince';
 import Version from 'app/components/version';
@@ -19,10 +20,10 @@ import {t, tn, tct} from 'app/locale';
 
 class ActivityItem extends React.Component {
   static propTypes = {
+    organization: SentryTypes.Organization,
     clipHeight: PropTypes.number,
     defaultClipped: PropTypes.bool,
     item: PropTypes.object.isRequired,
-    orgId: PropTypes.string.isRequired,
   };
 
   static defaultProps = {
@@ -51,21 +52,41 @@ class ActivityItem extends React.Component {
     }
   }
 
+  hasSentry10 = () => {
+    return new Set(this.props.organization.features).has('sentry10');
+  };
+
   formatProjectActivity = (author, item) => {
     let data = item.data;
-    let orgId = this.props.orgId;
+    let orgId = this.props.organization.slug;
     let project = item.project;
     let issue = item.issue;
 
+    let hasSentry10 = this.hasSentry10();
+
+    let basePath = hasSentry10
+      ? `/organizations/${orgId}/issues/`
+      : `/${orgId}/${project.slug}/issues/`;
+
     let issueLink = issue ? (
-      <IssueLink orgId={orgId} projectId={project.slug} issue={issue}>
+      <IssueLink
+        organization={this.props.organization}
+        orgId={orgId}
+        projectId={project.slug}
+        issue={issue}
+        to={`${basePath}${issue.id}/`}
+      >
         {issue.shortId}
       </IssueLink>
     ) : null;
 
     let versionLink = data.version ? (
       <VersionHoverCard orgId={orgId} projectId={project.slug} version={data.version}>
-        <Version version={data.version} orgId={orgId} projectId={project.slug} />
+        <Version
+          version={data.version}
+          orgId={orgId}
+          projectId={hasSentry10 ? null : project.slug}
+        />
       </VersionHoverCard>
     ) : null;
 
@@ -75,6 +96,7 @@ class ActivityItem extends React.Component {
           author,
           issue: (
             <IssueLink
+              organization={this.props.organization}
               orgId={orgId}
               projectId={project.slug}
               issue={issue}
@@ -295,7 +317,7 @@ class ActivityItem extends React.Component {
 
   render() {
     let item = this.props.item;
-    let orgId = this.props.orgId;
+    let orgId = this.props.organization.slug;
 
     let bubbleClassName = 'activity-item-bubble';
     if (this.state.clipped) {
@@ -315,6 +337,8 @@ class ActivityItem extends React.Component {
       avatar,
     };
 
+    let hasSentry10 = this.hasSentry10();
+
     if (item.type === 'note') {
       let noteBody = marked(item.data.text);
       return (
@@ -333,9 +357,13 @@ class ActivityItem extends React.Component {
               dangerouslySetInnerHTML={{__html: noteBody}}
             />
             <div className="activity-meta">
-              <Link className="project" to={`/${orgId}/${item.project.slug}/`}>
-                {item.project.slug}
-              </Link>
+              {hasSentry10 ? (
+                <strong>{item.project.slug}</strong>
+              ) : (
+                <Link className="project" to={`/${orgId}/${item.project.slug}/`}>
+                  {item.project.slug}
+                </Link>
+              )}
               <span className="bullet" />
               <TimeSince date={item.dateCreated} />
             </div>
@@ -378,9 +406,13 @@ class ActivityItem extends React.Component {
               item
             )}
             <div className="activity-meta">
-              <Link className="project" to={`/${orgId}/${item.project.slug}/`}>
-                {item.project.slug}
-              </Link>
+              {hasSentry10 ? (
+                <strong>{item.project.slug}</strong>
+              ) : (
+                <Link className="project" to={`/${orgId}/${item.project.slug}/`}>
+                  {item.project.slug}
+                </Link>
+              )}
               <span className="bullet" />
               <TimeSince date={item.dateCreated} />
             </div>
diff --git a/src/sentry/static/sentry/app/components/issueLink.jsx b/src/sentry/static/sentry/app/components/issueLink.jsx
index eb65c8f04c..219157eef0 100644
--- a/src/sentry/static/sentry/app/components/issueLink.jsx
+++ b/src/sentry/static/sentry/app/components/issueLink.jsx
@@ -3,6 +3,7 @@ import React from 'react';
 import classNames from 'classnames';
 import {Link} from 'react-router';
 
+import SentryTypes from 'app/sentryTypes';
 import Hovercard from 'app/components/hovercard';
 import Count from 'app/components/count';
 import EventOrGroupTitle from 'app/components/eventOrGroupTitle';
@@ -11,10 +12,11 @@ import {t} from 'app/locale';
 
 export default class IssueLink extends React.Component {
   static propTypes = {
+    organization: SentryTypes.Organization.isRequired,
     orgId: PropTypes.string.isRequired,
     projectId: PropTypes.string.isRequired,
     issue: PropTypes.object.isRequired,
-    to: PropTypes.string,
+    to: PropTypes.string.isRequired,
     card: PropTypes.bool,
   };
 
@@ -35,7 +37,7 @@ export default class IssueLink extends React.Component {
   }
 
   renderBody() {
-    const {issue, orgId, projectId} = this.props;
+    const {organization, issue, orgId, projectId} = this.props;
     const message = this.getMessage(issue);
 
     const className = classNames(`type-${issue.type}`, `level-${issue.level}`, {
@@ -44,6 +46,10 @@ export default class IssueLink extends React.Component {
       isResolved: issue.status === 'resolved',
     });
 
+    const streamPath = new Set(organization.features).has('sentry10')
+      ? `/organizations/${orgId}/issues/`
+      : `/${orgId}/${projectId}/`;
+
     return (
       <div className={className}>
         <div style={{marginBottom: 15}}>
@@ -57,7 +63,7 @@ export default class IssueLink extends React.Component {
               <span className="event-annotation">
                 <Link
                   to={{
-                    pathname: `/${orgId}/${projectId}/`,
+                    pathname: streamPath,
                     query: {query: 'logger:' + issue.logger},
                   }}
                 >
@@ -100,19 +106,13 @@ export default class IssueLink extends React.Component {
     );
   }
 
-  getLinkTo() {
-    let {issue, orgId, projectId} = this.props;
-
-    return this.props.to || `/${orgId}/${projectId}/issues/${issue.id}/`;
-  }
-
   render() {
-    let {card, issue} = this.props;
-    if (!card) return <Link to={this.getLinkTo()}>{this.props.children}</Link>;
+    let {card, issue, to} = this.props;
+    if (!card) return <Link to={to}>{this.props.children}</Link>;
 
     return (
       <Hovercard body={this.renderBody()} header={issue.shortId}>
-        <Link to={this.getLinkTo()}>{this.props.children}</Link>
+        <Link to={to}>{this.props.children}</Link>
       </Hovercard>
     );
   }
diff --git a/src/sentry/static/sentry/app/views/organizationActivity.jsx b/src/sentry/static/sentry/app/views/organizationActivity.jsx
index adacaeb422..b90c49c06f 100644
--- a/src/sentry/static/sentry/app/views/organizationActivity.jsx
+++ b/src/sentry/static/sentry/app/views/organizationActivity.jsx
@@ -26,6 +26,7 @@ export default class OrganizationActivity extends AsyncView {
       <React.Fragment>
         <PageHeading withMargins>{t('Activity')}</PageHeading>
         <ActivityFeed
+          organization={this.context.organization}
           endpoint={this.getEndpoint()}
           query={{
             per_page: 100,
