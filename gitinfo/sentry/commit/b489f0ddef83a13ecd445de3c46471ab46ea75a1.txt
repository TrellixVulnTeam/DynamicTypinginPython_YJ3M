commit b489f0ddef83a13ecd445de3c46471ab46ea75a1
Author: Mark Story <mark@sentry.io>
Date:   Wed Oct 17 15:04:48 2018 -0400

    fix(ui) debounce external issue autocomplete fields
    
    External Issue autocomplete fields (project, member etc.) did not have
    debounced input handling. This resulted in them emitting an HTTP request
    for each keypress causing some UI jank.
    
    Fixes APP-614

diff --git a/src/sentry/static/sentry/app/components/group/externalIssueActions.jsx b/src/sentry/static/sentry/app/components/group/externalIssueActions.jsx
index 7a8df76e4a..f3dff66c08 100644
--- a/src/sentry/static/sentry/app/components/group/externalIssueActions.jsx
+++ b/src/sentry/static/sentry/app/components/group/externalIssueActions.jsx
@@ -16,6 +16,7 @@ import SentryTypes from 'app/sentryTypes';
 import {t} from 'app/locale';
 import overflowEllipsis from 'app/styles/overflowEllipsis';
 import space from 'app/styles/space';
+import {debounce} from 'lodash';
 
 const MESSAGES_BY_ACTION = {
   link: t('Successfully linked issue.'),
@@ -109,25 +110,34 @@ class ExternalIssueForm extends AsyncComponent {
       const options = (field.choices || []).map(([value, label]) => ({value, label}));
       return Promise.resolve({options});
     }
-
-    let query = queryString.stringify({
-      ...this.state.dynamicFieldValues,
-      field: field.name,
-      query: input,
+    return new Promise(resolve => {
+      this.debouncedOptionLoad(field, input, resolve);
     });
+  };
 
-    let url = field.url;
-    let separator = url.includes('?') ? '&' : '?';
-
-    let request = {
-      url: [url, separator, query].join(''),
-      method: 'GET',
-    };
+  debouncedOptionLoad = debounce(
+    (field, input, resolve) => {
+      let query = queryString.stringify({
+        ...this.state.dynamicFieldValues,
+        field: field.name,
+        query: input,
+      });
 
-    // We can't use the API client here since the URL is not scapped under the
-    // API endpoints (which the client prefixes)
-    return $.ajax(request).then(data => ({options: data}));
-  };
+      let url = field.url;
+      let separator = url.includes('?') ? '&' : '?';
+
+      let request = {
+        url: [url, separator, query].join(''),
+        method: 'GET',
+      };
+
+      // We can't use the API client here since the URL is not scoped under the
+      // API endpoints (which the client prefixes)
+      $.ajax(request).then(data => resolve({options: data}));
+    },
+    200,
+    {trailing: true}
+  );
 
   getFieldProps = field =>
     field.url
