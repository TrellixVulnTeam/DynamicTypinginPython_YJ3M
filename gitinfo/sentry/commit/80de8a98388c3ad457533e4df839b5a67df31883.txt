commit 80de8a98388c3ad457533e4df839b5a67df31883
Author: Jan Michael Auer <jan.auer@sentry.io>
Date:   Thu Nov 14 13:01:56 2019 +0100

    feat(ui): Render errored threads in issue details (#15516)
    
    Introduces a new thread attribute called `errored`. It indicates that a thread is the cause of an error, without having crashed the application. Formally, the UI would only handle `crashed` threads.
    
    This extends the UI to also consider threads with `errored`, if there is no crashed thread. Such a thread is marked specially in the thread list, and selected by default.

diff --git a/src/sentry/data/samples/android.json b/src/sentry/data/samples/android.json
new file mode 100644
index 0000000000..8bb220b26d
--- /dev/null
+++ b/src/sentry/data/samples/android.json
@@ -0,0 +1,457 @@
+{
+    "release": "io.sentry.sample-1.0",
+    "dist": "1",
+    "platform": "java",
+    "contexts": {
+        "device": {
+            "screen_resolution": "1369x720",
+            "orientation": "portrait",
+            "family": "Redmi",
+            "battery_level": 97,
+            "screen_dpi": 320,
+            "memory_size": 2955337728,
+            "timezone": "Europe/Vienna",
+            "external_storage_size": 23785328640,
+            "external_free_storage": 20191956992,
+            "screen_width_pixels": 720,
+            "low_memory": false,
+            "simulator": false,
+            "screen_height_pixels": 1369,
+            "free_memory": 1435279360,
+            "online": true,
+            "screen_density": 2,
+            "type": "device",
+            "charging": true,
+            "model_id": "PKQ1.181021.001",
+            "brand": "xiaomi",
+            "storage_size": 23785328640,
+            "boot_time": "2019-11-02T02:10:23Z",
+            "arch": "arm64-v8a",
+            "manufacturer": "Xiaomi",
+            "name": "Redmi 7",
+            "free_storage": 20191956992,
+            "model": "Redmi 7",
+            "archs": [
+                "arm64-v8a",
+                "armeabi-v7a",
+                "armeabi"
+            ]
+        },
+        "app": {
+            "app_identifier": "io.sentry.sample",
+            "app_name": "Sentry sample",
+            "app_start_time": "2019-11-08T08:40:05Z",
+            "app_version": "1.0",
+            "type": "app",
+            "app_build": "1"
+        },
+        "os": {
+            "rooted": false,
+            "kernel_version": "4.9.112-perf+",
+            "version": "9",
+            "build": "PKQ1.181021.001",
+            "type": "os",
+            "name": "Android"
+        }
+    },
+    "culprit": "com.android.internal.os.ZygoteInit in main",
+    "exception": {
+        "values": [
+            {
+                "stacktrace": {
+                    "frames": [
+                        {
+                            "function": "lambda$onCreate$2",
+                            "abs_path": "MainActivity.java",
+                            "module": "io.sentry.sample.MainActivity",
+                            "in_app": false,
+                            "lineno": 36,
+                            "filename": "MainActivity.java"
+                        },
+                        {
+                            "function": "onClick",
+                            "lineno": 0,
+                            "module": "io.sentry.sample.-$$Lambda$MainActivity$tVGPRGxxb8SivUa5SKhzp6BuXOI",
+                            "in_app": false
+                        },
+                        {
+                            "function": "performClick",
+                            "abs_path": "View.java",
+                            "module": "android.view.View",
+                            "in_app": false,
+                            "lineno": 6608,
+                            "filename": "View.java"
+                        },
+                        {
+                            "function": "performClickInternal",
+                            "abs_path": "View.java",
+                            "module": "android.view.View",
+                            "in_app": false,
+                            "lineno": 6585,
+                            "filename": "View.java"
+                        },
+                        {
+                            "function": "access$3100",
+                            "abs_path": "View.java",
+                            "module": "android.view.View",
+                            "in_app": false,
+                            "lineno": 785,
+                            "filename": "View.java"
+                        },
+                        {
+                            "function": "run",
+                            "abs_path": "View.java",
+                            "module": "android.view.View$PerformClick",
+                            "in_app": false,
+                            "lineno": 25919,
+                            "filename": "View.java"
+                        },
+                        {
+                            "function": "handleCallback",
+                            "abs_path": "Handler.java",
+                            "module": "android.os.Handler",
+                            "in_app": false,
+                            "lineno": 873,
+                            "filename": "Handler.java"
+                        },
+                        {
+                            "function": "dispatchMessage",
+                            "abs_path": "Handler.java",
+                            "module": "android.os.Handler",
+                            "in_app": false,
+                            "lineno": 99,
+                            "filename": "Handler.java"
+                        },
+                        {
+                            "function": "loop",
+                            "abs_path": "Looper.java",
+                            "module": "android.os.Looper",
+                            "in_app": false,
+                            "lineno": 201,
+                            "filename": "Looper.java"
+                        },
+                        {
+                            "function": "main",
+                            "abs_path": "ActivityThread.java",
+                            "module": "android.app.ActivityThread",
+                            "in_app": false,
+                            "lineno": 6810,
+                            "filename": "ActivityThread.java"
+                        },
+                        {
+                            "function": "invoke",
+                            "abs_path": "Method.java",
+                            "in_app": false,
+                            "module": "java.lang.reflect.Method",
+                            "filename": "Method.java"
+                        },
+                        {
+                            "function": "run",
+                            "abs_path": "RuntimeInit.java",
+                            "module": "com.android.internal.os.RuntimeInit$MethodAndArgsCaller",
+                            "in_app": false,
+                            "lineno": 547,
+                            "filename": "RuntimeInit.java"
+                        },
+                        {
+                            "function": "main",
+                            "abs_path": "ZygoteInit.java",
+                            "module": "com.android.internal.os.ZygoteInit",
+                            "in_app": false,
+                            "lineno": 873,
+                            "filename": "ZygoteInit.java"
+                        }
+                    ]
+                },
+                "type": "Exception",
+                "module": "java.lang",
+                "value": "Some exception."
+            }
+        ]
+    },
+    "level": "error",
+    "threads": {
+        "values": [
+            {
+                "stacktrace": {
+                    "frames": [
+                        {
+                            "function": "observe",
+                            "abs_path": "FileObserver.java",
+                            "in_app": false,
+                            "module": "android.os.FileObserver$ObserverThread",
+                            "filename": "FileObserver.java"
+                        },
+                        {
+                            "function": "run",
+                            "abs_path": "FileObserver.java",
+                            "module": "android.os.FileObserver$ObserverThread",
+                            "in_app": false,
+                            "lineno": 86,
+                            "filename": "FileObserver.java"
+                        }
+                    ]
+                },
+                "id": 5273,
+                "name": "FileObserver"
+            },
+            {
+                "errored": true,
+                "stacktrace": {
+                    "frames": [
+                        {
+                            "function": "getThreadStackTrace",
+                            "abs_path": "VMStack.java",
+                            "in_app": true,
+                            "module": "dalvik.system.VMStack",
+                            "filename": "VMStack.java"
+                        },
+                        {
+                            "function": "getStackTrace",
+                            "abs_path": "Thread.java",
+                            "module": "java.lang.Thread",
+                            "in_app": false,
+                            "lineno": 1538,
+                            "filename": "Thread.java"
+                        },
+                        {
+                            "function": "getAllStackTraces",
+                            "abs_path": "Thread.java",
+                            "module": "java.lang.Thread",
+                            "in_app": false,
+                            "lineno": 1588,
+                            "filename": "Thread.java"
+                        },
+                        {
+                            "function": "getCurrentThreads",
+                            "abs_path": "SentryThreadFactory.java",
+                            "module": "io.sentry.core.SentryThreadFactory",
+                            "in_app": false,
+                            "lineno": 32,
+                            "filename": "SentryThreadFactory.java"
+                        },
+                        {
+                            "function": "process",
+                            "abs_path": "MainEventProcessor.java",
+                            "module": "io.sentry.core.MainEventProcessor",
+                            "in_app": false,
+                            "lineno": 64,
+                            "filename": "MainEventProcessor.java"
+                        },
+                        {
+                            "function": "captureEvent",
+                            "abs_path": "SentryClient.java",
+                            "module": "io.sentry.core.SentryClient",
+                            "in_app": false,
+                            "lineno": 105,
+                            "filename": "SentryClient.java"
+                        },
+                        {
+                            "function": "$default$captureException",
+                            "abs_path": "ISentryClient.java",
+                            "module": "io.sentry.core.ISentryClient$-CC",
+                            "in_app": false,
+                            "lineno": 48,
+                            "filename": "ISentryClient.java"
+                        },
+                        {
+                            "function": "captureException",
+                            "lineno": 0,
+                            "module": "io.sentry.core.SentryClient",
+                            "in_app": false
+                        },
+                        {
+                            "function": "$default$captureException",
+                            "abs_path": "ISentryClient.java",
+                            "module": "io.sentry.core.ISentryClient$-CC",
+                            "in_app": false,
+                            "lineno": 56,
+                            "filename": "ISentryClient.java"
+                        },
+                        {
+                            "function": "captureException",
+                            "lineno": 0,
+                            "module": "io.sentry.core.SentryClient",
+                            "in_app": false
+                        },
+                        {
+                            "function": "captureException",
+                            "abs_path": "Hub.java",
+                            "module": "io.sentry.core.Hub",
+                            "in_app": false,
+                            "lineno": 145,
+                            "filename": "Hub.java"
+                        },
+                        {
+                            "function": "$default$captureException",
+                            "abs_path": "IHub.java",
+                            "module": "io.sentry.core.IHub$-CC",
+                            "in_app": false,
+                            "lineno": 21,
+                            "filename": "IHub.java"
+                        },
+                        {
+                            "function": "captureException",
+                            "lineno": 0,
+                            "module": "io.sentry.core.Hub",
+                            "in_app": false
+                        },
+                        {
+                            "function": "captureException",
+                            "abs_path": "Sentry.java",
+                            "module": "io.sentry.core.Sentry",
+                            "in_app": false,
+                            "lineno": 87,
+                            "filename": "Sentry.java"
+                        },
+                        {
+                            "function": "lambda$onCreate$2",
+                            "abs_path": "MainActivity.java",
+                            "module": "io.sentry.sample.MainActivity",
+                            "in_app": false,
+                            "lineno": 36,
+                            "filename": "MainActivity.java"
+                        },
+                        {
+                            "function": "onClick",
+                            "lineno": 0,
+                            "module": "io.sentry.sample.-$$Lambda$MainActivity$tVGPRGxxb8SivUa5SKhzp6BuXOI",
+                            "in_app": false
+                        },
+                        {
+                            "function": "performClick",
+                            "abs_path": "View.java",
+                            "module": "android.view.View",
+                            "in_app": false,
+                            "lineno": 6608,
+                            "filename": "View.java"
+                        },
+                        {
+                            "function": "performClickInternal",
+                            "abs_path": "View.java",
+                            "module": "android.view.View",
+                            "in_app": false,
+                            "lineno": 6585,
+                            "filename": "View.java"
+                        },
+                        {
+                            "function": "access$3100",
+                            "abs_path": "View.java",
+                            "module": "android.view.View",
+                            "in_app": false,
+                            "lineno": 785,
+                            "filename": "View.java"
+                        },
+                        {
+                            "function": "run",
+                            "abs_path": "View.java",
+                            "module": "android.view.View$PerformClick",
+                            "in_app": false,
+                            "lineno": 25919,
+                            "filename": "View.java"
+                        },
+                        {
+                            "function": "handleCallback",
+                            "abs_path": "Handler.java",
+                            "module": "android.os.Handler",
+                            "in_app": false,
+                            "lineno": 873,
+                            "filename": "Handler.java"
+                        },
+                        {
+                            "function": "dispatchMessage",
+                            "abs_path": "Handler.java",
+                            "module": "android.os.Handler",
+                            "in_app": false,
+                            "lineno": 99,
+                            "filename": "Handler.java"
+                        },
+                        {
+                            "function": "loop",
+                            "abs_path": "Looper.java",
+                            "module": "android.os.Looper",
+                            "in_app": false,
+                            "lineno": 201,
+                            "filename": "Looper.java"
+                        },
+                        {
+                            "function": "main",
+                            "abs_path": "ActivityThread.java",
+                            "module": "android.app.ActivityThread",
+                            "in_app": false,
+                            "lineno": 6810,
+                            "filename": "ActivityThread.java"
+                        },
+                        {
+                            "function": "invoke",
+                            "abs_path": "Method.java",
+                            "in_app": false,
+                            "module": "java.lang.reflect.Method",
+                            "filename": "Method.java"
+                        },
+                        {
+                            "function": "run",
+                            "abs_path": "RuntimeInit.java",
+                            "module": "com.android.internal.os.RuntimeInit$MethodAndArgsCaller",
+                            "in_app": false,
+                            "lineno": 547,
+                            "filename": "RuntimeInit.java"
+                        },
+                        {
+                            "function": "main",
+                            "abs_path": "ZygoteInit.java",
+                            "module": "com.android.internal.os.ZygoteInit",
+                            "in_app": false,
+                            "lineno": 873,
+                            "filename": "ZygoteInit.java"
+                        }
+                    ]
+                },
+                "id": 2,
+                "name": "main"
+            },
+            {
+                "stacktrace": {
+                    "frames": [
+                        {
+                            "function": "sleep",
+                            "abs_path": "Thread.java",
+                            "in_app": false,
+                            "module": "java.lang.Thread",
+                            "filename": "Thread.java"
+                        },
+                        {
+                            "function": "sleep",
+                            "abs_path": "Thread.java",
+                            "module": "java.lang.Thread",
+                            "in_app": false,
+                            "lineno": 373,
+                            "filename": "Thread.java"
+                        },
+                        {
+                            "function": "sleep",
+                            "abs_path": "Thread.java",
+                            "module": "java.lang.Thread",
+                            "in_app": false,
+                            "lineno": 314,
+                            "filename": "Thread.java"
+                        },
+                        {
+                            "function": "run",
+                            "abs_path": "ANRWatchDog.java",
+                            "module": "io.sentry.android.core.ANRWatchDog",
+                            "in_app": false,
+                            "lineno": 77,
+                            "filename": "ANRWatchDog.java"
+                        }
+                    ]
+                },
+                "id": 5274,
+                "name": "|ANR-WatchDog|"
+            }
+        ]
+    },
+    "user": {
+        "id": "1761a9fcb6836d4c"
+    }
+}
diff --git a/src/sentry/interfaces/threads.py b/src/sentry/interfaces/threads.py
index 70a01d450f..be9cca0761 100644
--- a/src/sentry/interfaces/threads.py
+++ b/src/sentry/interfaces/threads.py
@@ -36,6 +36,7 @@ class Threads(Interface):
                     "id": trim(thread.get("id"), 40),
                     "crashed": bool(thread.get("crashed")),
                     "current": bool(thread.get("current")),
+                    "errored": bool(thread.get("errored")),
                     "name": trim(thread.get("name"), 200),
                 }
             )
@@ -51,6 +52,7 @@ class Threads(Interface):
                 "id": data["id"],
                 "current": data["current"],
                 "crashed": data["crashed"],
+                "errored": data["errored"],
                 "name": data["name"],
                 "stacktrace": None,
             }
@@ -68,6 +70,7 @@ class Threads(Interface):
                 "id": data["id"],
                 "current": data["current"],
                 "crashed": data["crashed"],
+                "errored": data["errored"],
                 "name": data["name"],
                 "stacktrace": None,
                 "rawStacktrace": None,
diff --git a/src/sentry/static/sentry/app/components/events/interfaces/threads.jsx b/src/sentry/static/sentry/app/components/events/interfaces/threads.jsx
index 22c3e4fa77..d537c59078 100644
--- a/src/sentry/static/sentry/app/components/events/interfaces/threads.jsx
+++ b/src/sentry/static/sentry/app/components/events/interfaces/threads.jsx
@@ -93,12 +93,13 @@ function getThreadTitle(thread, event, simplified) {
       );
     }
 
-    if (thread.crashed) {
+    if (thread.crashed || thread.errored) {
       const exc = findThreadException(thread, event);
+      const result = thread.crashed ? 'crashed' : 'errored';
       bits.push(' — ');
       bits.push(
         <small key="crashed">
-          {exc ? `(crashed with ${exc.values[0].type})` : '(crashed)'}
+          {exc ? `(${result} with ${exc.values[0].type})` : `(${result})`}
         </small>
       );
     }
@@ -113,17 +114,14 @@ function getIntendedStackView(thread, event) {
 }
 
 function findBestThread(threads) {
-  for (const thread of threads) {
-    if (thread.crashed) {
-      return thread;
-    }
-  }
-  for (const thread of threads) {
-    if (thread.stacktrace) {
-      return thread;
-    }
-  }
-  return threads[0];
+  // Search the enire threads list for a crashed, errored or thread with stack
+  // trace. Prefer any crashed thread over errored threads, etc.
+  return (
+    threads.find(thread => thread.crashed) ||
+    threads.find(thread => thread.errored) ||
+    threads.find(thread => thread.stacktrace) ||
+    threads[0]
+  );
 }
 
 class Thread extends React.Component {
@@ -139,14 +137,20 @@ class Thread extends React.Component {
   };
 
   renderMissingStacktrace = () => {
+    const {crashed, errored} = this.props.data;
+    let message = t('No or unknown stacktrace');
+    if (crashed) {
+      message = t('Thread Crashed');
+    } else if (errored) {
+      message = t('Thread Errored');
+    }
+
     return (
       <div className="traceback missing-traceback">
         <ul>
           <li className="frame missing-frame">
             <div className="title">
-              <span className="informal">
-                {this.props.data.crashed ? 'Thread Crashed' : 'No or unknown stacktrace'}
-              </span>
+              <span className="informal">{message}</span>
             </div>
           </li>
         </ul>
@@ -183,6 +187,11 @@ class Thread extends React.Component {
             <Pill name="crashed" className={data.crashed ? 'false' : 'true'}>
               {data.crashed ? 'yes' : 'no'}
             </Pill>
+            {!data.crashed && (
+              <Pill name="errored" className={data.errored ? 'false' : 'true'}>
+                {data.errored ? 'yes' : 'no'}
+              </Pill>
+            )}
           </Pills>
         )}
 
diff --git a/tests/acceptance/test_issue_details.py b/tests/acceptance/test_issue_details.py
index 27bdfdc265..37fe1a1d02 100644
--- a/tests/acceptance/test_issue_details.py
+++ b/tests/acceptance/test_issue_details.py
@@ -82,6 +82,11 @@ class IssueDetailsTest(AcceptanceTestCase, SnubaTestCase):
         self.visit_issue(event.group.id)
         self.browser.snapshot("issue details unity")
 
+    def test_android_event(self):
+        event = self.create_sample_event(platform="android")
+        self.visit_issue(event.group.id)
+        self.browser.snapshot("issue details android")
+
     def test_aspnetcore_event(self):
         event = self.create_sample_event(default="aspnetcore", platform="csharp")
         self.visit_issue(event.group.id)
diff --git a/tests/sentry/event_manager/interfaces/snapshots/test_threads/test_basics.pysnap b/tests/sentry/event_manager/interfaces/snapshots/test_threads/test_basics.pysnap
index f151415dac..1ebfa56bb7 100644
--- a/tests/sentry/event_manager/interfaces/snapshots/test_threads/test_basics.pysnap
+++ b/tests/sentry/event_manager/interfaces/snapshots/test_threads/test_basics.pysnap
@@ -1,5 +1,5 @@
 ---
-created: '2019-05-27T10:51:12.052455Z'
+created: '2019-11-14T11:21:19.912555Z'
 creator: sentry
 source: tests/sentry/event_manager/interfaces/test_threads.py
 ---
@@ -7,6 +7,7 @@ api_context:
   values:
   - crashed: false
     current: true
+    errored: false
     id: 42
     name: Main Thread
     rawStacktrace:
@@ -58,6 +59,7 @@ to_json:
   values:
   - crashed: false
     current: true
+    errored: false
     id: 42
     name: Main Thread
     raw_stacktrace:
diff --git a/tests/sentry/event_manager/interfaces/snapshots/test_threads/test_errored.pysnap b/tests/sentry/event_manager/interfaces/snapshots/test_threads/test_errored.pysnap
new file mode 100644
index 0000000000..e1f17b48db
--- /dev/null
+++ b/tests/sentry/event_manager/interfaces/snapshots/test_threads/test_errored.pysnap
@@ -0,0 +1,76 @@
+---
+created: '2019-11-14T11:21:19.993917Z'
+creator: sentry
+source: tests/sentry/event_manager/interfaces/test_threads.py
+---
+api_context:
+  values:
+  - crashed: false
+    current: true
+    errored: true
+    id: 42
+    name: Main Thread
+    rawStacktrace:
+      frames:
+      - absPath: null
+        colNo: null
+        context: []
+        errors: null
+        filename: null
+        function: <redacted>
+        inApp: true
+        instructionAddr: null
+        lineNo: 1
+        module: null
+        package: null
+        platform: null
+        rawFunction: null
+        symbol: null
+        symbolAddr: null
+        trust: null
+        vars: null
+      framesOmitted: null
+      hasSystemFrames: true
+      registers: null
+    stacktrace:
+      frames:
+      - absPath: foo/baz.c
+        colNo: null
+        context: []
+        errors: null
+        filename: foo/baz.c
+        function: main
+        inApp: true
+        instructionAddr: null
+        lineNo: 1
+        module: null
+        package: null
+        platform: null
+        rawFunction: null
+        symbol: null
+        symbolAddr: null
+        trust: null
+        vars: null
+      framesOmitted: null
+      hasSystemFrames: true
+      registers: null
+errors: null
+to_json:
+  values:
+  - crashed: false
+    current: true
+    errored: true
+    id: 42
+    name: Main Thread
+    raw_stacktrace:
+      frames:
+      - function: <redacted>
+        in_app: true
+        lineno: 1
+    stacktrace:
+      frames:
+      - abs_path: foo/baz.c
+        filename: foo/baz.c
+        function: main
+        in_app: true
+        lineno: 1
diff --git a/tests/sentry/event_manager/interfaces/test_threads.py b/tests/sentry/event_manager/interfaces/test_threads.py
index 222c44fc00..a525a7e872 100644
--- a/tests/sentry/event_manager/interfaces/test_threads.py
+++ b/tests/sentry/event_manager/interfaces/test_threads.py
@@ -2,6 +2,7 @@
 
 from __future__ import absolute_import
 
+from copy import deepcopy
 import pytest
 
 from sentry.event_manager import EventManager
@@ -53,6 +54,12 @@ def test_basics(make_threads_snapshot):
     make_threads_snapshot(basic_payload)
 
 
+def test_errored(make_threads_snapshot):
+    payload = deepcopy(basic_payload)
+    payload["values"][0]["errored"] = True
+    make_threads_snapshot(payload)
+
+
 @pytest.mark.parametrize(
     "input",
     [
