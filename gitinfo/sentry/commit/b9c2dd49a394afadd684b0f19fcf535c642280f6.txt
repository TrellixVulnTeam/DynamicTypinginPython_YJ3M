commit b9c2dd49a394afadd684b0f19fcf535c642280f6
Author: Chris Fuller <cfuller@sentry.io>
Date:   Thu Mar 19 17:10:46 2020 -0400

    change(workflow): Change email verbiage (#17698)
    
    * Updating email text

diff --git a/src/sentry/incidents/action_handlers.py b/src/sentry/incidents/action_handlers.py
index 7a00ab15e6..2018eeaecc 100644
--- a/src/sentry/incidents/action_handlers.py
+++ b/src/sentry/incidents/action_handlers.py
@@ -12,6 +12,7 @@ from sentry.incidents.models import (
     QueryAggregations,
     TriggerStatus,
     IncidentStatus,
+    INCIDENT_STATUS,
 )
 from sentry.utils.email import MessageBuilder
 from sentry.utils.http import absolute_uri
@@ -20,12 +21,6 @@ from sentry.utils.http import absolute_uri
 @six.add_metaclass(abc.ABCMeta)
 class ActionHandler(object):
     status_display = {TriggerStatus.ACTIVE: "Fired", TriggerStatus.RESOLVED: "Resolved"}
-    incident_status = {
-        IncidentStatus.OPEN: "Open",
-        IncidentStatus.CLOSED: "Resolved",
-        IncidentStatus.CRITICAL: "Critical",
-        IncidentStatus.WARNING: "Warning",
-    }
 
     def __init__(self, action, incident, project):
         self.action = action
@@ -142,7 +137,7 @@ class EmailActionHandler(ActionHandler):
             # if alert threshold and threshold type is above then show '>'
             # if resolve threshold and threshold type is *BELOW* then show '>'
             "threshold_direction_string": ">" if show_greater_than_string else "<",
-            "status": self.incident_status[IncidentStatus(self.incident.status)],
+            "status": INCIDENT_STATUS[IncidentStatus(self.incident.status)],
             "is_critical": self.incident.status == IncidentStatus.CRITICAL,
             "is_warning": self.incident.status == IncidentStatus.WARNING,
             "unsubscribe_link": None,
diff --git a/src/sentry/incidents/models.py b/src/sentry/incidents/models.py
index 6f75501dc1..97b043b044 100644
--- a/src/sentry/incidents/models.py
+++ b/src/sentry/incidents/models.py
@@ -140,6 +140,14 @@ class IncidentStatus(Enum):
     CRITICAL = 20
 
 
+INCIDENT_STATUS = {
+    IncidentStatus.OPEN: "Open",
+    IncidentStatus.CLOSED: "Resolved",
+    IncidentStatus.CRITICAL: "Critical",
+    IncidentStatus.WARNING: "Warning",
+}
+
+
 class Incident(Model):
     __core__ = True
 
diff --git a/src/sentry/incidents/tasks.py b/src/sentry/incidents/tasks.py
index fb9abd3b06..e9028c77a9 100644
--- a/src/sentry/incidents/tasks.py
+++ b/src/sentry/incidents/tasks.py
@@ -16,6 +16,7 @@ from sentry.incidents.models import (
     IncidentActivity,
     IncidentActivityType,
     IncidentStatus,
+    INCIDENT_STATUS,
 )
 from sentry.models import Project
 from sentry.snuba.query_subscription_consumer import register_subscriber
@@ -61,7 +62,7 @@ def send_subscriber_notifications(activity_id):
 def generate_incident_activity_email(activity, user):
     incident = activity.incident
     return MessageBuilder(
-        subject=u"Activity on Incident {} (#{})".format(incident.title, incident.identifier),
+        subject=u"Activity on Alert {} (#{})".format(incident.title, incident.identifier),
         template=u"sentry/emails/incidents/activity.txt",
         html_template=u"sentry/emails/incidents/activity.html",
         type="incident.activity",
@@ -74,12 +75,12 @@ def build_activity_context(activity, user):
         action = "left a comment"
     else:
         action = "changed status from %s to %s" % (
-            IncidentStatus(int(activity.previous_value)).name.lower(),
-            IncidentStatus(int(activity.value)).name.lower(),
+            INCIDENT_STATUS[IncidentStatus(int(activity.previous_value))],
+            INCIDENT_STATUS[IncidentStatus(int(activity.value))],
         )
     incident = activity.incident
 
-    action = "%s on incident %s (#%s)" % (action, incident.title, incident.identifier)
+    action = "%s on alert %s (#%s)" % (action, incident.title, incident.identifier)
 
     return {
         "user_name": activity.user.name if activity.user else "Sentry",
diff --git a/src/sentry/templates/sentry/emails/incidents/activity.txt b/src/sentry/templates/sentry/emails/incidents/activity.txt
index a33e6c1ce7..103dc8a378 100644
--- a/src/sentry/templates/sentry/emails/incidents/activity.txt
+++ b/src/sentry/templates/sentry/emails/incidents/activity.txt
@@ -1,6 +1,6 @@
 {% spaceless %}
 {% autoescape off %}
-# New Incident Activity
+# New Alert Activity
 
 {{ user_name }} {{ action }}:
 {% if enhanced_privacy %}
@@ -8,7 +8,7 @@ Details about this activity are not shown in this email since enhanced privacy
 controls are enabled. For more details about this activity, view on Sentry:
 {{ link }}.
 {% else %}
-Incident: {{ link }}
+Alert: {{ link }}
 {% if comment %}
 Comment Details:
 {{ comment }}
diff --git a/src/sentry/templates/sentry/emails/incidents/trigger.txt b/src/sentry/templates/sentry/emails/incidents/trigger.txt
index 2b4b2d871a..e092e14258 100644
--- a/src/sentry/templates/sentry/emails/incidents/trigger.txt
+++ b/src/sentry/templates/sentry/emails/incidents/trigger.txt
@@ -7,7 +7,7 @@ Details about this alert are not shown in this email since enhanced privacy
 controls are enabled. For more details about this alert alert, view on Sentry:
 {{ incident_link }}.
 {% else %}
-Incident: {{ link }}
+Alert: {{ link }}
 Rule: {{ rule_link }}
 Status: {{ status }}
 
diff --git a/tests/sentry/incidents/test_action_handlers.py b/tests/sentry/incidents/test_action_handlers.py
index e1de63369e..49ae14c128 100644
--- a/tests/sentry/incidents/test_action_handlers.py
+++ b/tests/sentry/incidents/test_action_handlers.py
@@ -18,6 +18,7 @@ from sentry.incidents.models import (
     IncidentStatus,
     QueryAggregations,
     TriggerStatus,
+    INCIDENT_STATUS,
 )
 from sentry.integrations.slack.utils import build_incident_attachment
 from sentry.models import Integration, UserOption
@@ -111,7 +112,7 @@ class EmailActionHandlerGenerateEmailContextTest(TestCase):
             ],
             "query": action.alert_rule_trigger.alert_rule.query,
             "threshold": action.alert_rule_trigger.alert_threshold,
-            "status": handler.incident_status[IncidentStatus(incident.status)],
+            "status": INCIDENT_STATUS[IncidentStatus(incident.status)],
             "environment": "All",
             "is_critical": False,
             "is_warning": False,
diff --git a/tests/sentry/incidents/test_tasks.py b/tests/sentry/incidents/test_tasks.py
index 11b53bda3c..c18221e1ab 100644
--- a/tests/sentry/incidents/test_tasks.py
+++ b/tests/sentry/incidents/test_tasks.py
@@ -17,6 +17,7 @@ from sentry.incidents.models import (
     AlertRuleTriggerAction,
     IncidentActivityType,
     IncidentStatus,
+    INCIDENT_STATUS,
     IncidentSubscription,
 )
 from sentry.incidents.tasks import (
@@ -79,7 +80,7 @@ class TestGenerateIncidentActivityEmail(BaseIncidentActivityTest, TestCase):
         incident = activity.incident
         recipient = self.create_user()
         message = generate_incident_activity_email(activity, recipient)
-        assert message.subject == "Activity on Incident {} (#{})".format(
+        assert message.subject == "Activity on Alert {} (#{})".format(
             incident.title, incident.identifier
         )
         assert message.type == "incident.activity"
@@ -93,7 +94,7 @@ class TestBuildActivityContext(BaseIncidentActivityTest, TestCase):
         incident = activity.incident
         context = build_activity_context(activity, expected_recipient)
         assert context["user_name"] == expected_username
-        assert context["action"] == "%s on incident %s (#%s)" % (
+        assert context["action"] == "%s on alert %s (#%s)" % (
             expected_action,
             activity.incident.title,
             activity.incident.identifier,
@@ -133,7 +134,7 @@ class TestBuildActivityContext(BaseIncidentActivityTest, TestCase):
             activity,
             expected_username=activity.user.name,
             expected_action="changed status from %s to %s"
-            % (IncidentStatus.WARNING.name.lower(), IncidentStatus.CLOSED.name.lower()),
+            % (INCIDENT_STATUS[IncidentStatus.WARNING], INCIDENT_STATUS[IncidentStatus.CLOSED]),
             expected_comment=activity.comment,
             expected_recipient=recipient,
         )
