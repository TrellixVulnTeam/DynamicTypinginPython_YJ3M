commit c215c6625527b94afd9a62ad2bace04a3230f202
Author: Priscila Oliveira <priscilawebdev@gmail.com>
Date:   Mon Mar 16 17:48:00 2020 +0100

    ref(alertMessage): converted to ts (#17675)

diff --git a/docs-ui/components/alertMessage.stories.js b/docs-ui/components/alertMessage.stories.js
index 0f68be76a2..481a0deac7 100644
--- a/docs-ui/components/alertMessage.stories.js
+++ b/docs-ui/components/alertMessage.stories.js
@@ -17,7 +17,7 @@ storiesOf('UI|Alerts/AlertMessage', module)
             id: 'id',
             message: 'Info message with a url',
             type: 'info',
-            url: 'url',
+            url: '#',
           }}
         />
 
@@ -34,7 +34,7 @@ storiesOf('UI|Alerts/AlertMessage', module)
             id: 'id',
             message: 'Warning Message',
             type: 'warning',
-            url: 'url',
+            url: '#',
           }}
         />
 
@@ -43,7 +43,7 @@ storiesOf('UI|Alerts/AlertMessage', module)
             id: 'id',
             message: 'Error Message',
             type: 'error',
-            url: 'url',
+            url: '#',
           }}
         />
       </Grid>
@@ -58,7 +58,7 @@ storiesOf('UI|Alerts/AlertMessage', module)
             id: 'id',
             message: 'Info message with a url',
             type: 'info',
-            url: 'url',
+            url: '#',
           }}
           system
         />
@@ -88,7 +88,7 @@ storiesOf('UI|Alerts/AlertMessage', module)
             message:
               "Background workers haven't checked in recently. This can mean an issue with your configuration or a serious backlog in tasks.",
             type: 'error',
-            url: 'url',
+            url: '#',
           }}
           system
         />
diff --git a/src/sentry/static/sentry/app/components/alert.tsx b/src/sentry/static/sentry/app/components/alert.tsx
index aab6a9f633..20d92e96e1 100644
--- a/src/sentry/static/sentry/app/components/alert.tsx
+++ b/src/sentry/static/sentry/app/components/alert.tsx
@@ -86,8 +86,8 @@ const alertStyles = ({
 const StyledTextBlock = styled(TextBlock)`
   line-height: 1.4;
   margin-bottom: 0;
-  flex: 1;
   align-self: center;
+  width: 100%;
 `;
 
 const Alert = styled(
diff --git a/src/sentry/static/sentry/app/components/alertMessage.jsx b/src/sentry/static/sentry/app/components/alertMessage.jsx
deleted file mode 100644
index 26b9bf62a9..0000000000
--- a/src/sentry/static/sentry/app/components/alertMessage.jsx
+++ /dev/null
@@ -1,76 +0,0 @@
-import PropTypes from 'prop-types';
-import React from 'react';
-import styled from '@emotion/styled';
-
-import Alert from 'app/components/alert';
-import AlertActions from 'app/actions/alertActions';
-import InlineSvg from 'app/components/inlineSvg';
-import {t} from 'app/locale';
-
-const StyledAlert = styled(Alert)`
-  padding: ${p => p.theme.grid}px ${p => p.theme.grid * 2}px;
-  position: relative;
-  margin: 0;
-  padding-right: ${p => p.theme.grid * 4}px;
-`;
-
-const StyledInlineSvg = styled(InlineSvg)`
-  /* Exists soley to enable its use as a selector in StyledCloseButton */
-`;
-
-const StyledCloseButton = styled('button')`
-  background: none;
-  border: 0;
-  opacity: 0.4;
-  transition: opacity 0.2s linear;
-  position: absolute;
-  right: ${p => p.theme.grid}px;
-  top: 7px;
-
-  &:hover {
-    opacity: 0.8;
-  }
-`;
-
-export default class AlertMessage extends React.PureComponent {
-  static propTypes = {
-    alert: PropTypes.shape({
-      id: PropTypes.string,
-      message: PropTypes.node.isRequired,
-      type: PropTypes.oneOf(['success', 'error', 'warning', 'info']),
-      url: PropTypes.string,
-    }),
-    system: PropTypes.bool,
-  };
-
-  closeAlert = () => {
-    AlertActions.closeAlert(this.props.alert);
-  };
-
-  render = () => {
-    const {alert, system} = this.props;
-    let icon;
-
-    if (alert.type === 'success') {
-      icon = 'icon-circle-check';
-    } else {
-      icon = 'icon-circle-exclamation';
-    }
-    return (
-      <StyledAlert type={this.props.alert.type} icon={icon} system={system}>
-        <StyledCloseButton
-          type="button"
-          aria-label={t('Close')}
-          onClick={this.closeAlert}
-        >
-          <StyledInlineSvg aria-hidden="true" src="icon-circle-close" />
-        </StyledCloseButton>
-        {this.props.alert.url ? (
-          <a href={this.props.alert.url}>{this.props.alert.message}</a>
-        ) : (
-          this.props.alert.message
-        )}
-      </StyledAlert>
-    );
-  };
-}
diff --git a/src/sentry/static/sentry/app/components/alertMessage.tsx b/src/sentry/static/sentry/app/components/alertMessage.tsx
new file mode 100644
index 0000000000..7f7df8386e
--- /dev/null
+++ b/src/sentry/static/sentry/app/components/alertMessage.tsx
@@ -0,0 +1,67 @@
+import React from 'react';
+import styled from '@emotion/styled';
+
+import space from 'app/styles/space';
+import Link from 'app/components/links/link';
+import Alert from 'app/components/alert';
+import AlertActions from 'app/actions/alertActions';
+import Button from 'app/components/button';
+import {IconClose} from 'app/icons/iconClose';
+import {t} from 'app/locale';
+
+type Alert = {
+  id: string;
+  message: React.ReactNode;
+  type: 'success' | 'error' | 'warning' | 'info';
+  url?: string;
+};
+
+type Props = {
+  alert: Alert;
+  system: boolean;
+};
+
+const AlertMessage = ({alert, system}: Props) => {
+  const handleCloseAlert = () => {
+    AlertActions.closeAlert(alert);
+  };
+
+  const {url, message, type} = alert;
+  const icon = type === 'success' ? 'icon-circle-check' : 'icon-circle-exclamation';
+
+  return (
+    <StyledAlert type={type} icon={icon} system={system}>
+      <StyledCloseButton
+        icon={<IconClose circle />}
+        aria-label={t('Close')}
+        onClick={handleCloseAlert}
+        borderless
+      />
+      {url ? <Link href={url}>{message}</Link> : message}
+    </StyledAlert>
+  );
+};
+
+export default AlertMessage;
+
+const StyledAlert = styled(Alert)`
+  padding: ${space(1)} ${space(4)} ${space(1)} ${space(2)};
+  position: relative;
+  margin: 0;
+`;
+
+const StyledCloseButton = styled(Button)`
+  background: none;
+  opacity: 0.4;
+  transition: opacity 0.2s linear;
+  position: absolute;
+  right: ${space(1)};
+
+  &:hover {
+    opacity: 0.8;
+    background: none;
+  }
+  > *:first-child {
+    padding: 0 ${space(1)};
+  }
+`;
diff --git a/src/sentry/static/sentry/app/components/alerts.jsx b/src/sentry/static/sentry/app/components/alerts.tsx
similarity index 59%
rename from src/sentry/static/sentry/app/components/alerts.jsx
rename to src/sentry/static/sentry/app/components/alerts.tsx
index 9948a2af2d..d0e68a9db5 100644
--- a/src/sentry/static/sentry/app/components/alerts.jsx
+++ b/src/sentry/static/sentry/app/components/alerts.tsx
@@ -7,9 +7,15 @@ import AlertStore from 'app/stores/alertStore';
 import AlertMessage from 'app/components/alertMessage';
 import theme from 'app/utils/theme';
 
-const Alerts = createReactClass({
+type Alert = React.ComponentProps<typeof AlertMessage>['alert'];
+
+type State = {
+  alerts: Array<Alert>;
+};
+
+const Alerts = createReactClass<{}, State>({
   displayName: 'Alerts',
-  mixins: [Reflux.connect(AlertStore, 'alerts')],
+  mixins: [Reflux.connect(AlertStore, 'alerts') as any],
 
   getInitialState() {
     return {
@@ -18,12 +24,13 @@ const Alerts = createReactClass({
   },
 
   render() {
+    const alerts = this.state.alerts as Array<Alert>;
     return (
       <ThemeProvider theme={theme}>
         <div {...this.props}>
-          {this.state.alerts.map(function(alert) {
-            return <AlertMessage alert={alert} key={alert.key} system />;
-          })}
+          {alerts.map(alert => (
+            <AlertMessage alert={alert} key={alert.id} system />
+          ))}
         </div>
       </ThemeProvider>
     );
diff --git a/src/sentry/static/sentry/app/views/settings/project/projectServiceHooks.jsx b/src/sentry/static/sentry/app/views/settings/project/projectServiceHooks.jsx
index 20a3347e47..296b7ded91 100644
--- a/src/sentry/static/sentry/app/views/settings/project/projectServiceHooks.jsx
+++ b/src/sentry/static/sentry/app/views/settings/project/projectServiceHooks.jsx
@@ -115,8 +115,9 @@ export default class ProjectServiceHooks extends AsyncView {
         <PanelHeader key="header">{t('Service Hook')}</PanelHeader>
         <PanelBody key="body">
           <PanelAlert type="info" icon="icon-circle-exclamation">
-            Service Hooks are an early adopter preview feature and will change in the
-            future.
+            {t(
+              'Service Hooks are an early adopter preview feature and will change in the future.'
+            )}
           </PanelAlert>
           {this.state.hookList.map(hook => (
             <ServiceHookRow
diff --git a/tests/js/spec/components/__snapshots__/confirmDelete.spec.jsx.snap b/tests/js/spec/components/__snapshots__/confirmDelete.spec.jsx.snap
index 04afba6267..da2ac99e06 100644
--- a/tests/js/spec/components/__snapshots__/confirmDelete.spec.jsx.snap
+++ b/tests/js/spec/components/__snapshots__/confirmDelete.spec.jsx.snap
@@ -44,7 +44,7 @@ exports[`ConfirmDelete renders 1`] = `
               >
                 <StyledTextBlock>
                   <div
-                    className="css-c2j570-TextBlock-StyledTextBlock ejthpj81"
+                    className="css-1n7zgo7-TextBlock-StyledTextBlock ejthpj81"
                   >
                     Are you sure?
                   </div>
diff --git a/tests/js/spec/components/events/__snapshots__/sdkUpdates.spec.jsx.snap b/tests/js/spec/components/events/__snapshots__/sdkUpdates.spec.jsx.snap
index 025f2a8db3..662098d02a 100644
--- a/tests/js/spec/components/events/__snapshots__/sdkUpdates.spec.jsx.snap
+++ b/tests/js/spec/components/events/__snapshots__/sdkUpdates.spec.jsx.snap
@@ -83,7 +83,7 @@ exports[`EventSdkUpdates renders a suggestion to update the sdk and then enable
                   </StyledInlineSvg>
                   <StyledTextBlock>
                     <div
-                      className="css-c2j570-TextBlock-StyledTextBlock ejthpj81"
+                      className="css-1n7zgo7-TextBlock-StyledTextBlock ejthpj81"
                     >
                       We recommend you 
                       <EventSdkUpdateSuggestion
diff --git a/tests/js/spec/components/modals/__snapshots__/integrationDetailsModal.spec.jsx.snap b/tests/js/spec/components/modals/__snapshots__/integrationDetailsModal.spec.jsx.snap
index 5d41b80b73..08fdf4aefb 100644
--- a/tests/js/spec/components/modals/__snapshots__/integrationDetailsModal.spec.jsx.snap
+++ b/tests/js/spec/components/modals/__snapshots__/integrationDetailsModal.spec.jsx.snap
@@ -295,7 +295,7 @@ exports[`IntegrationDetailsModal renders simple integration 1`] = `
       >
         <StyledTextBlock>
           <div
-            className="css-c2j570-TextBlock-StyledTextBlock ejthpj81"
+            className="css-1n7zgo7-TextBlock-StyledTextBlock ejthpj81"
           >
             <span
               dangerouslySetInnerHTML={
diff --git a/tests/js/spec/views/projectPlugins/__snapshots__/projectPlugins.spec.jsx.snap b/tests/js/spec/views/projectPlugins/__snapshots__/projectPlugins.spec.jsx.snap
index 14f7a5213f..02629e5fd9 100644
--- a/tests/js/spec/views/projectPlugins/__snapshots__/projectPlugins.spec.jsx.snap
+++ b/tests/js/spec/views/projectPlugins/__snapshots__/projectPlugins.spec.jsx.snap
@@ -135,7 +135,7 @@ exports[`ProjectPlugins renders 1`] = `
                         </StyledInlineSvg>
                         <StyledTextBlock>
                           <div
-                            className="css-c2j570-TextBlock-StyledTextBlock ejthpj81"
+                            className="css-1n7zgo7-TextBlock-StyledTextBlock ejthpj81"
                           >
                             <WithOrganizationMockWrapper
                               access={
