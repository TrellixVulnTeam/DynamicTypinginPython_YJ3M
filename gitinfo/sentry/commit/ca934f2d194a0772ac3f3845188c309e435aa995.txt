commit ca934f2d194a0772ac3f3845188c309e435aa995
Author: adhiraj <693121+adhiraj@users.noreply.github.com>
Date:   Mon Jul 16 15:08:11 2018 -0700

    feat(auth): Combine link-identity and extensions-setup views (#9049)
    
    They're doing basically the same thing, and this change will make it so that we can use the combined view for social auth

diff --git a/src/sentry/identity/pipeline.py b/src/sentry/identity/pipeline.py
index e247602e0f..f451013727 100644
--- a/src/sentry/identity/pipeline.py
+++ b/src/sentry/identity/pipeline.py
@@ -26,7 +26,10 @@ class IdentityProviderPipeline(Pipeline):
     provider_model_cls = IdentityProvider
 
     def redirect_url(self):
-        associate_url = reverse('sentry-account-link-identity')
+        associate_url = reverse('sentry-extension-setup', kwargs={
+            # TODO(adhiraj): Remove provider_id from the callback URL, it's unused.
+            'provider_id': 'default',
+        })
 
         # Use configured redirect_url if specified for the pipeline if available
         return self.config.get('redirect_url', associate_url)
diff --git a/src/sentry/testutils/cases.py b/src/sentry/testutils/cases.py
index 87b12a64e3..f5bb537653 100644
--- a/src/sentry/testutils/cases.py
+++ b/src/sentry/testutils/cases.py
@@ -742,7 +742,7 @@ class IntegrationTestCase(TestCase):
             'provider_id': self.provider.key,
         })
 
-        self.setup_path = reverse('sentry-integrations-setup', kwargs={
+        self.setup_path = reverse('sentry-extension-setup', kwargs={
             'provider_id': self.provider.key,
         })
 
diff --git a/src/sentry/web/frontend/account_identity.py b/src/sentry/web/frontend/account_identity.py
index 231f08044c..382a45d756 100644
--- a/src/sentry/web/frontend/account_identity.py
+++ b/src/sentry/web/frontend/account_identity.py
@@ -5,7 +5,7 @@ from django.views.decorators.cache import never_cache
 
 from sentry.models import IdentityProvider
 from sentry.identity.pipeline import IdentityProviderPipeline
-from sentry.web.frontend.base import OrganizationView, BaseView
+from sentry.web.frontend.base import OrganizationView
 from sentry.web.helpers import render_to_response
 
 
@@ -37,14 +37,3 @@ class AccountIdentityAssociateView(OrganizationView):
         pipeline.initialize()
 
         return pipeline.current_step()
-
-
-class AccountIdentityLinkView(BaseView):
-    @never_cache
-    def handle(self, request):
-        pipeline = IdentityProviderPipeline.get_for_request(request)
-
-        if pipeline is None or not pipeline.is_valid():
-            return self.redirect(reverse('sentry-account-settings-identities'))
-
-        return pipeline.current_step()
diff --git a/src/sentry/web/frontend/integration_setup.py b/src/sentry/web/frontend/integration_setup.py
deleted file mode 100644
index 4a3d9271bb..0000000000
--- a/src/sentry/web/frontend/integration_setup.py
+++ /dev/null
@@ -1,22 +0,0 @@
-from __future__ import absolute_import, print_function
-
-import logging
-
-from sentry.integrations.pipeline import IntegrationPipeline
-from sentry.web.frontend.base import BaseView
-
-logger = logging.getLogger('sentry.integrations')
-
-
-class IntegrationSetupView(BaseView):
-    required_scope = 'org:integrations'
-
-    csrf_protect = False
-
-    def handle(self, request, provider_id):
-        pipeline = IntegrationPipeline.get_for_request(request=request)
-        if not pipeline:
-            logging.error('integration.setup-error')
-            return self.redirect('/')
-
-        return pipeline.current_step()
diff --git a/src/sentry/web/frontend/pipeline_advancer.py b/src/sentry/web/frontend/pipeline_advancer.py
new file mode 100644
index 0000000000..6cbf4ffea5
--- /dev/null
+++ b/src/sentry/web/frontend/pipeline_advancer.py
@@ -0,0 +1,34 @@
+from __future__ import absolute_import, print_function
+
+from django.contrib import messages
+from django.utils.translation import ugettext_lazy as _
+
+from sentry.identity.pipeline import IdentityProviderPipeline
+from sentry.integrations.pipeline import IntegrationPipeline
+from sentry.web.frontend.base import BaseView
+
+
+# The request doesn't contain the pipeline type (pipeline information is stored
+# in redis keyed by the pipeline name), so we try to construct multiple pipelines
+# and use whichever one works.
+PIPELINE_CLASSES = [IntegrationPipeline, IdentityProviderPipeline]
+
+
+class PipelineAdvancerView(BaseView):
+    """Gets the current pipeline from the request and executes the current step."""
+    auth_required = False
+
+    csrf_protect = False
+
+    def handle(self, request, provider_id):
+        pipeline = None
+        for pipeline_cls in PIPELINE_CLASSES:
+            pipeline = pipeline_cls.get_for_request(request=request)
+            if pipeline:
+                break
+
+        if pipeline is None or not pipeline.is_valid():
+            messages.add_message(request, messages.ERROR, _("Invalid request."))
+            return self.redirect('/')
+
+        return pipeline.current_step()
diff --git a/src/sentry/web/urls.py b/src/sentry/web/urls.py
index 4fb4d2b2f0..9f06813a95 100644
--- a/src/sentry/web/urls.py
+++ b/src/sentry/web/urls.py
@@ -28,7 +28,7 @@ from sentry.web.frontend.group_event_json import GroupEventJsonView
 from sentry.web.frontend.group_plugin_action import GroupPluginActionView
 from sentry.web.frontend.group_tag_export import GroupTagExportView
 from sentry.web.frontend.home import HomeView
-from sentry.web.frontend.integration_setup import IntegrationSetupView
+from sentry.web.frontend.pipeline_advancer import PipelineAdvancerView
 from sentry.web.frontend.mailgun_inbound_webhook import \
     MailgunInboundWebhookView
 from sentry.web.frontend.oauth_authorize import OAuthAuthorizeView
@@ -48,7 +48,7 @@ from sentry.web.frontend.restore_organization import RestoreOrganizationView
 from sentry.web.frontend.remove_project import RemoveProjectView
 from sentry.web.frontend.transfer_project import TransferProjectView
 from sentry.web.frontend.team_avatar import TeamAvatarPhotoView
-from sentry.web.frontend.account_identity import AccountIdentityAssociateView, AccountIdentityLinkView
+from sentry.web.frontend.account_identity import AccountIdentityAssociateView
 from sentry.web.frontend.remove_team import RemoveTeamView
 from sentry.web.frontend.sudo import SudoView
 from sentry.web.frontend.unsubscribe_issue_notifications import \
@@ -249,11 +249,6 @@ urlpatterns += patterns(
         AccountIdentityAssociateView.as_view(),
         name='sentry-account-associate-identity'
     ),
-    url(
-        r'^account/settings/identities/associate/$',
-        AccountIdentityLinkView.as_view(),
-        name='sentry-account-link-identity'
-    ),
     url(
         r'^account/settings/security/',
         RedirectView.as_view(pattern_name="sentry-account-settings-security", permanent=False),
@@ -521,8 +516,8 @@ urlpatterns += patterns(
     # assets for the time being
     url(
         r'^extensions/(?P<provider_id>[\w_-]+)/setup/$',
-        IntegrationSetupView.as_view(),
-        name='sentry-integrations-setup'
+        PipelineAdvancerView.as_view(),
+        name='sentry-extension-setup'
     ),
     url(r'^extensions/cloudflare/', include('sentry.integrations.cloudflare.urls')),
     url(r'^extensions/jira/', include('sentry.integrations.jira.urls')),
