commit 28fc444d9ae7e242cbbd1c6d689483bb50bc9cee
Author: Jess MacQueen <jess@getsentry.com>
Date:   Mon Dec 18 11:53:17 2017 -0800

    test(teams): Expand TeamManager.get_for_user tests

diff --git a/tests/sentry/manager/tests.py b/tests/sentry/manager/tests.py
index 9942cdc9e6..2f3e8732c3 100644
--- a/tests/sentry/manager/tests.py
+++ b/tests/sentry/manager/tests.py
@@ -54,7 +54,6 @@ class SentryManagerTest(TestCase):
 class TeamManagerTest(TestCase):
     def test_simple(self):
         user = User.objects.create(username='foo')
-        user2 = User.objects.create(username='bar')
         org = self.create_organization()
         team = self.create_team(organization=org, name='Test')
         self.create_member(organization=org, user=user, teams=[team])
@@ -65,6 +64,11 @@ class TeamManagerTest(TestCase):
         )
         assert result == [team]
 
+    def test_invalid_scope(self):
+        user = User.objects.create(username='foo')
+        org = self.create_organization()
+        team = self.create_team(organization=org, name='Test')
+        self.create_member(organization=org, user=user, teams=[team])
         result = Team.objects.get_for_user(
             organization=org,
             user=user,
@@ -72,8 +76,41 @@ class TeamManagerTest(TestCase):
         )
         assert result == []
 
+    def test_valid_scope(self):
+        user = User.objects.create(username='foo')
+        org = self.create_organization()
+        team = self.create_team(organization=org, name='Test')
+        self.create_member(organization=org, user=user, teams=[team])
+        result = Team.objects.get_for_user(
+            organization=org,
+            user=user,
+            scope='project:read',
+        )
+        assert result == [team]
+
+    def test_user_no_access(self):
+        user = User.objects.create(username='foo')
+        user2 = User.objects.create(username='bar')
+        org = self.create_organization()
+        team = self.create_team(organization=org, name='Test')
+        self.create_member(organization=org, user=user, teams=[team])
+
         result = Team.objects.get_for_user(
             organization=org,
             user=user2,
         )
         assert result == []
+
+    def test_with_projects(self):
+        user = User.objects.create(username='foo')
+        org = self.create_organization()
+        team = self.create_team(organization=org, name='Test')
+        self.create_member(organization=org, user=user, teams=[team])
+        project = self.create_project(team=team, name='foo')
+        project2 = self.create_project(team=team, name='bar')
+        result = Team.objects.get_for_user(
+            organization=org,
+            user=user,
+            with_projects=True,
+        )
+        assert result == [(team, [project2, project])]
