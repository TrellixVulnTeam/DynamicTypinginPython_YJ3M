commit ba4f938ebcf118b3a2afa48bb98f72a2e486c336
Author: Ted Kaemming <ted@kaemming.com>
Date:   Wed Mar 9 16:43:16 2016 -0800

    Add documentation to `ListResolver`.

diff --git a/src/sentry/utils/email.py b/src/sentry/utils/email.py
index 5a5f46f08f..ec14e04b2c 100644
--- a/src/sentry/utils/email.py
+++ b/src/sentry/utils/email.py
@@ -166,16 +166,38 @@ def get_email_addresses(user_ids, project=None):
 
 
 class ListResolver(object):
+    """
+    Manages the generation of RFC 2919 compliant list-id strings from varying
+    objects types.
+    """
 
     class UnregisteredTypeError(Exception):
-        pass
+        """
+        Error raised when attempting to build a list-id from an unregisted object type.
+        """
 
     def __init__(self, namespace, type_handlers):
         assert is_valid_dot_atom(namespace)
+
+        # The list-id-namespace that will be used when generating the list-id
+        # string. This should be a domain name under the control of the
+        # generator (see RFC 2919.)
         self.__namespace = namespace
+
+        # A mapping of classes to functions that accept an instance of that
+        # class, returning a tuple of values that will be used to generate the
+        # list label. Returned values must be valid RFC 2822 dot-atom-text
+        # values.
         self.__type_handlers = type_handlers
 
     def __call__(self, instance):
+        """
+        Build a list-id string from an instance.
+
+        Raises ``UnregisteredTypeError`` if there is no registered handler for
+        the instance type. Raises ``AssertionError`` if there is valid list-id
+        string cannot be generated from the values returned by the type handler.
+        """
         try:
             handler = self.__type_handlers[type(instance)]
         except KeyError:
