commit 866c0894b73fd0a282a16748f89762644c3aa2df
Author: Billy Vong <billyvg@gmail.com>
Date:   Wed Jun 28 11:41:09 2017 -0700

    Add test + snapshots for projectSelector

diff --git a/tests/js/spec/components/projectHeader/__snapshots__/projectSelector.spec.jsx.snap b/tests/js/spec/components/projectHeader/__snapshots__/projectSelector.spec.jsx.snap
new file mode 100644
index 0000000000..a7f112127e
--- /dev/null
+++ b/tests/js/spec/components/projectHeader/__snapshots__/projectSelector.spec.jsx.snap
@@ -0,0 +1,457 @@
+// Jest Snapshot v1, https://goo.gl/fbAQLP
+
+exports[`ProjectSelector render() can filter projects by project name 1`] = `
+<ProjectSelector
+  organization={
+    Object {
+      "access": Array [],
+      "id": "org",
+      "slug": "org",
+      "teams": Array [
+        Object {
+          "isMember": true,
+          "name": "Test Team",
+          "projects": Array [
+            Object {
+              "name": "Test Project",
+              "slug": "test-project",
+            },
+            Object {
+              "name": "Another Project",
+              "slug": "another-project",
+            },
+          ],
+          "slug": "test-team",
+        },
+      ],
+    }
+  }
+  projectId=""
+>
+  <div
+    className="project-select"
+  >
+    <h3>
+      <Link
+        className="home-crumb"
+        to="/org/"
+      >
+        <a
+          className="home-crumb"
+          href="/org/"
+        >
+          <span
+            className="icon-home"
+          />
+        </a>
+      </Link>
+      Select a project
+      <DropdownLink
+        caret={true}
+        disabled={false}
+        onClose={[Function]}
+        onOpen={[Function]}
+        title=""
+        topLevelClasses="project-dropdown"
+      >
+        <span
+          className="project-dropdown dropdown"
+        >
+          <a
+            className="dropdown-toggle"
+            data-toggle="dropdown"
+          >
+            <i
+              className="icon-arrow-down"
+            />
+          </a>
+          <ul
+            className="dropdown-menu"
+          >
+            <li
+              className="project-filter"
+            >
+              <input
+                onBlur={[Function]}
+                onChange={[Function]}
+                onKeyDown={[Function]}
+                onKeyUp={[Function]}
+                placeholder="Filter projects"
+                type="text"
+                value="another"
+              />
+            </li>
+            <MenuItem
+              className=""
+              href="/org/another-project/"
+              linkClassName=""
+            >
+              <li
+                className=""
+                href={null}
+                role="presentation"
+                title={null}
+              >
+                <a
+                  className=""
+                  href="/org/another-project/"
+                  onClick={[Function]}
+                  tabIndex="-1"
+                >
+                  <span>
+                    <strong
+                      className="highlight"
+                    >
+                      Another
+                    </strong>
+                     Project
+                  </span>
+                </a>
+              </li>
+            </MenuItem>
+          </ul>
+        </span>
+      </DropdownLink>
+    </h3>
+  </div>
+</ProjectSelector>
+`;
+
+exports[`ProjectSelector render() can filter projects by team name/project name 1`] = `
+<ProjectSelector
+  organization={
+    Object {
+      "access": Array [],
+      "id": "org",
+      "slug": "org",
+      "teams": Array [
+        Object {
+          "isMember": true,
+          "name": "Test Team",
+          "projects": Array [
+            Object {
+              "name": "Test Project",
+              "slug": "test-project",
+            },
+            Object {
+              "name": "Another Project",
+              "slug": "another-project",
+            },
+          ],
+          "slug": "test-team",
+        },
+      ],
+    }
+  }
+  projectId=""
+>
+  <div
+    className="project-select"
+  >
+    <h3>
+      <Link
+        className="home-crumb"
+        to="/org/"
+      >
+        <a
+          className="home-crumb"
+          href="/org/"
+        >
+          <span
+            className="icon-home"
+          />
+        </a>
+      </Link>
+      Select a project
+      <DropdownLink
+        caret={true}
+        disabled={false}
+        onClose={[Function]}
+        onOpen={[Function]}
+        title=""
+        topLevelClasses="project-dropdown"
+      >
+        <span
+          className="project-dropdown dropdown"
+        >
+          <a
+            className="dropdown-toggle"
+            data-toggle="dropdown"
+          >
+            <i
+              className="icon-arrow-down"
+            />
+          </a>
+          <ul
+            className="dropdown-menu"
+          >
+            <li
+              className="project-filter"
+            >
+              <input
+                onBlur={[Function]}
+                onChange={[Function]}
+                onKeyDown={[Function]}
+                onKeyUp={[Function]}
+                placeholder="Filter projects"
+                type="text"
+                value="TEST"
+              />
+            </li>
+            <MenuItem
+              className=""
+              href="/org/another-project/"
+              linkClassName=""
+            >
+              <li
+                className=""
+                href={null}
+                role="presentation"
+                title={null}
+              >
+                <a
+                  className=""
+                  href="/org/another-project/"
+                  onClick={[Function]}
+                  tabIndex="-1"
+                >
+                  Another Project
+                </a>
+              </li>
+            </MenuItem>
+            <MenuItem
+              className=""
+              href="/org/test-project/"
+              linkClassName=""
+            >
+              <li
+                className=""
+                href={null}
+                role="presentation"
+                title={null}
+              >
+                <a
+                  className=""
+                  href="/org/test-project/"
+                  onClick={[Function]}
+                  tabIndex="-1"
+                >
+                  <span>
+                    <strong
+                      className="highlight"
+                    >
+                      Test
+                    </strong>
+                     Project
+                  </span>
+                </a>
+              </li>
+            </MenuItem>
+          </ul>
+        </span>
+      </DropdownLink>
+    </h3>
+  </div>
+</ProjectSelector>
+`;
+
+exports[`ProjectSelector render() has no filter and empty message with no projects 1`] = `
+<div
+  className="project-select"
+>
+  <h3>
+    <Link
+      className="home-crumb"
+      to="/undefined/"
+    >
+      <span
+        className="icon-home"
+      />
+    </Link>
+    Select a project
+    <DropdownLink
+      caret={true}
+      disabled={false}
+      onClose={[Function]}
+      onOpen={[Function]}
+      title=""
+      topLevelClasses="project-dropdown is-empty"
+    >
+      <MenuItem
+        empty={true}
+        noAnchor={true}
+      >
+        <div
+          className="empty-message"
+        >
+          You have no projects.
+        </div>
+      </MenuItem>
+    </DropdownLink>
+  </h3>
+</div>
+`;
+
+exports[`ProjectSelector render() lists projects and has filter 1`] = `
+<div
+  className="project-select"
+>
+  <h3>
+    <Link
+      className="home-crumb"
+      to="/org/"
+    >
+      <span
+        className="icon-home"
+      />
+    </Link>
+    Select a project
+    <DropdownLink
+      caret={true}
+      disabled={false}
+      onClose={[Function]}
+      onOpen={[Function]}
+      title=""
+      topLevelClasses="project-dropdown"
+    >
+      <li
+        className="project-filter"
+      >
+        <input
+          onBlur={[Function]}
+          onChange={[Function]}
+          onKeyDown={[Function]}
+          onKeyUp={[Function]}
+          placeholder="Filter projects"
+          type="text"
+          value=""
+        />
+      </li>
+      <MenuItem
+        className=""
+        href="/org/another-project/"
+        linkClassName=""
+      >
+        <span>
+          Another Project
+        </span>
+      </MenuItem>
+      <MenuItem
+        className=""
+        href="/org/test-project/"
+        linkClassName=""
+      >
+        <span>
+          Test Project
+        </span>
+      </MenuItem>
+    </DropdownLink>
+  </h3>
+</div>
+`;
+
+exports[`ProjectSelector render() shows empty filter message when filtering has no results 1`] = `
+<ProjectSelector
+  organization={
+    Object {
+      "access": Array [],
+      "id": "org",
+      "slug": "org",
+      "teams": Array [
+        Object {
+          "isMember": true,
+          "name": "Test Team",
+          "projects": Array [
+            Object {
+              "name": "Test Project",
+              "slug": "test-project",
+            },
+            Object {
+              "name": "Another Project",
+              "slug": "another-project",
+            },
+          ],
+          "slug": "test-team",
+        },
+      ],
+    }
+  }
+  projectId=""
+>
+  <div
+    className="project-select"
+  >
+    <h3>
+      <Link
+        className="home-crumb"
+        to="/org/"
+      >
+        <a
+          className="home-crumb"
+          href="/org/"
+        >
+          <span
+            className="icon-home"
+          />
+        </a>
+      </Link>
+      Select a project
+      <DropdownLink
+        caret={true}
+        disabled={false}
+        onClose={[Function]}
+        onOpen={[Function]}
+        title=""
+        topLevelClasses="project-dropdown is-empty"
+      >
+        <span
+          className="project-dropdown is-empty dropdown"
+        >
+          <a
+            className="dropdown-toggle"
+            data-toggle="dropdown"
+          >
+            <i
+              className="icon-arrow-down"
+            />
+          </a>
+          <ul
+            className="dropdown-menu"
+          >
+            <li
+              className="project-filter"
+            >
+              <input
+                onBlur={[Function]}
+                onChange={[Function]}
+                onKeyDown={[Function]}
+                onKeyUp={[Function]}
+                placeholder="Filter projects"
+                type="text"
+                value="Foo"
+              />
+            </li>
+            <MenuItem
+              empty={true}
+              noAnchor={true}
+            >
+              <li
+                className=""
+                href={null}
+                role="presentation"
+                title={null}
+              >
+                <div
+                  className="empty-message"
+                >
+                  No projects found
+                </div>
+              </li>
+            </MenuItem>
+          </ul>
+        </span>
+      </DropdownLink>
+    </h3>
+  </div>
+</ProjectSelector>
+`;
diff --git a/tests/js/spec/components/projectHeader/projectSelector.spec.jsx b/tests/js/spec/components/projectHeader/projectSelector.spec.jsx
new file mode 100644
index 0000000000..c0de489172
--- /dev/null
+++ b/tests/js/spec/components/projectHeader/projectSelector.spec.jsx
@@ -0,0 +1,86 @@
+import React from 'react';
+import {mount, shallow} from 'enzyme';
+import toJson from 'enzyme-to-json';
+
+import ProjectSelector from 'app/components/projectHeader/projectSelector';
+
+describe('ProjectSelector', function() {
+  const mockOrg = {
+    id: 'org',
+    slug: 'org',
+    teams: [
+      {
+        name: 'Test Team',
+        slug: 'test-team',
+        isMember: true,
+        projects: [
+          {
+            slug: 'test-project',
+            name: 'Test Project'
+          },
+          {
+            slug: 'another-project',
+            name: 'Another Project'
+          }
+        ]
+      }
+    ],
+    access: []
+  };
+  describe('render()', function() {
+    it('has no filter and empty message with no projects', function() {
+      let wrapper = shallow(
+        <ProjectSelector
+          organization={{
+            id: 'org',
+            teams: [],
+            access: []
+          }}
+          projectId=""
+        />,
+        {
+          context: {router: TestStubs.router()}
+        }
+      );
+      expect(toJson(wrapper)).toMatchSnapshot();
+    });
+
+    it('lists projects and has filter', function() {
+      let wrapper = shallow(<ProjectSelector organization={mockOrg} projectId="" />, {
+        context: {router: TestStubs.router()}
+      });
+      expect(toJson(wrapper)).toMatchSnapshot();
+    });
+
+    it('can filter projects by team name/project name', function() {
+      let wrapper = mount(<ProjectSelector organization={mockOrg} projectId="" />, {});
+
+      const input = wrapper.find('.project-filter input');
+      // Team name contains test
+      input.value = 'TEST';
+      input.simulate('change', {target: input});
+
+      expect(toJson(wrapper)).toMatchSnapshot();
+    });
+
+    it('can filter projects by project name', function() {
+      let wrapper = mount(<ProjectSelector organization={mockOrg} projectId="" />, {});
+
+      const input = wrapper.find('.project-filter input');
+      input.value = 'another';
+      input.simulate('change', {target: input});
+
+      expect(toJson(wrapper)).toMatchSnapshot();
+    });
+
+    it('shows empty filter message when filtering has no results', function() {
+      let wrapper = mount(<ProjectSelector organization={mockOrg} projectId="" />, {});
+
+      const input = wrapper.find('.project-filter input');
+      input.value = 'Foo';
+      input.simulate('change', {target: input});
+
+      expect(toJson(wrapper)).toMatchSnapshot();
+    });
+  });
+});
