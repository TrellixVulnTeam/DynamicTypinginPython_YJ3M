commit 708d78b7c120dc1fc4d81c1fd5b27545b3572227
Author: Mark Story <mark@sentry.io>
Date:   Fri Jun 21 11:55:01 2019 -0400

    fix(ui) Don't give links to add redundant filters (#13737)
    
    If a tag is already being used in the current filter query offering
    a link to re-add that condition seems redundant. Instead we can display
    disabled text with a tooltip.

diff --git a/src/sentry/static/sentry/app/views/organizationEventsV2/tagsTable.jsx b/src/sentry/static/sentry/app/views/organizationEventsV2/tagsTable.jsx
index bba01713dc..9b9b92119a 100644
--- a/src/sentry/static/sentry/app/views/organizationEventsV2/tagsTable.jsx
+++ b/src/sentry/static/sentry/app/views/organizationEventsV2/tagsTable.jsx
@@ -4,27 +4,39 @@ import PropTypes from 'prop-types';
 import {withRouter} from 'react-router';
 
 import Link from 'app/components/links/link';
+import Tooltip from 'app/components/tooltip';
 import {t} from 'app/locale';
 import space from 'app/styles/space';
 import overflowEllipsis from 'app/styles/overflowEllipsis';
 import {getEventTagSearchUrl} from './utils';
 
 const TagsTable = props => {
+  const {location, tags} = props;
   return (
     <div>
       <TagHeading>{t('Tags')}</TagHeading>
       <StyledTable>
         <tbody>
-          {props.tags.map(tag => (
-            <StyledTr key={tag.key}>
-              <TagKey>{tag.key}</TagKey>
-              <TagValue>
-                <Link to={getEventTagSearchUrl(tag.key, tag.value, props.location)}>
-                  {tag.value}
-                </Link>
-              </TagValue>
-            </StyledTr>
-          ))}
+          {tags.map(tag => {
+            const tagInQuery =
+              location.query.query && location.query.query.indexOf(`${tag.key}:`) !== -1;
+            return (
+              <StyledTr key={tag.key}>
+                <TagKey>{tag.key}</TagKey>
+                <TagValue>
+                  {tagInQuery ? (
+                    <Tooltip title={t('This tag is in the current filter conditions')}>
+                      <span>{tag.value}</span>
+                    </Tooltip>
+                  ) : (
+                    <Link to={getEventTagSearchUrl(tag.key, tag.value, location)}>
+                      {tag.value}
+                    </Link>
+                  )}
+                </TagValue>
+              </StyledTr>
+            );
+          })}
         </tbody>
       </StyledTable>
     </div>
