commit 4910e616d4129c44c6345268ed4fcc6a741cb1ea
Author: Markus Unterwaditzer <markus@unterwaditzer.net>
Date:   Tue Jan 22 09:48:49 2019 +0100

    fix: Request should not need a URL (#11560)
    
    * fix: Request should not need a URL
    
    * fix: parsedUrl was always null
    
    * fix: Linting errors
    
    * fix: More JS linting fun
    
    * fix: Get rid of isValidUrl, better comments
    
    * Update src/sentry/static/sentry/app/components/events/interfaces/request.jsx
    
    Co-Authored-By: untitaker <markus@unterwaditzer.net>
    
    * Update src/sentry/static/sentry/app/components/events/interfaces/request.jsx
    
    Co-Authored-By: untitaker <markus@unterwaditzer.net>
    
    * fix: Remove superfluous cond
    
    * ref: Use ExternalLink for request interface

diff --git a/src/sentry/interfaces/schemas.py b/src/sentry/interfaces/schemas.py
index 12bde7755c..e7ebca2ec6 100644
--- a/src/sentry/interfaces/schemas.py
+++ b/src/sentry/interfaces/schemas.py
@@ -90,7 +90,7 @@ HTTP_INTERFACE_SCHEMA = {
         'data': {'type': ['string', 'object', 'array']},
         'fragment': {'type': 'string'},
     },
-    'required': ['url'],
+    'required': [],
     'additionalProperties': True,
 }
 
diff --git a/src/sentry/static/sentry/app/components/events/interfaces/request.jsx b/src/sentry/static/sentry/app/components/events/interfaces/request.jsx
index 5de2b895eb..2fa0e2a9b4 100644
--- a/src/sentry/static/sentry/app/components/events/interfaces/request.jsx
+++ b/src/sentry/static/sentry/app/components/events/interfaces/request.jsx
@@ -6,6 +6,7 @@ import RichHttpContent from 'app/components/events/interfaces/richHttpContent';
 import {getCurlCommand} from 'app/components/events/interfaces/utils';
 import {isUrl} from 'app/utils';
 import {t} from 'app/locale';
+import ExternalLink from 'app/components/externalLink';
 
 import Truncate from 'app/components/truncate';
 
@@ -33,7 +34,7 @@ class RequestInterface extends React.Component {
     // We assume we only have a partial interface is we're missing
     // an HTTP method. This means we don't have enough information
     // to reliably construct a full HTTP request.
-    return !this.props.data.method;
+    return !this.props.data.method || !this.props.data.url;
   };
 
   toggleView = value => {
@@ -49,23 +50,31 @@ class RequestInterface extends React.Component {
     let view = this.state.view;
 
     let fullUrl = data.url;
-    if (data.query) {
-      fullUrl = fullUrl + '?' + data.query;
-    }
-    if (data.fragment) {
-      fullUrl = fullUrl + '#' + data.fragment;
+    let parsedUrl = null;
+    if (fullUrl) {
+      if (data.query) {
+        fullUrl += '?' + data.query;
+      }
+      if (data.fragment) {
+        fullUrl += '#' + data.fragment;
+      }
+
+      if (!isUrl(fullUrl)) {
+        // Check if the url passed in is a safe url to avoid XSS
+        fullUrl = null;
+      }
     }
 
-    // lol
-    let parsedUrl = document.createElement('a');
-    parsedUrl.href = fullUrl;
+    // check `fullUrl` again because of `isUrl` check
+    if (fullUrl) {
+      // use html tag to parse url, lol
+      parsedUrl = document.createElement('a');
+      parsedUrl.href = fullUrl;
+    }
 
     let children = [];
 
-    // Check if the url passed in is a safe url to avoid XSS
-    let isValidUrl = isUrl(fullUrl);
-
-    if (!this.isPartial() && isValidUrl) {
+    if (!this.isPartial() && fullUrl) {
       children.push(
         <div key="view-buttons" className="btn-group">
           <a
@@ -87,19 +96,23 @@ class RequestInterface extends React.Component {
 
     children.push(
       <h3 key="title">
-        <a href={isValidUrl ? fullUrl : null} title={fullUrl}>
+        <ExternalLink href={fullUrl} title={fullUrl}>
           <span className="path">
             <strong>{data.method || 'GET'}</strong>
-            <Truncate value={parsedUrl.pathname} maxLength={36} leftTrim={true} />
+            <Truncate
+              value={parsedUrl ? parsedUrl.pathname : ''}
+              maxLength={36}
+              leftTrim={true}
+            />
           </span>
-          {isValidUrl && (
+          {fullUrl && (
             <span className="external-icon">
               <em className="icon-open" />
             </span>
           )}
-        </a>
+        </ExternalLink>
         <small style={{marginLeft: 10}} className="host">
-          {parsedUrl.hostname}
+          {parsedUrl ? parsedUrl.hostname : ''}
         </small>
       </h3>
     );
