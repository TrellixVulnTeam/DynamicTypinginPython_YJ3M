commit 3ca907dafc6ccd4872cc9f1a8c605ff6bedfd36c
Author: Lyn Nagara <lyn.nagara@gmail.com>
Date:   Mon Jun 10 15:57:43 2019 -0700

    fix(sentry10): Remove project result from search (#13597)
    
    This view doesn't exist anymore, remove it from search results

diff --git a/src/sentry/static/sentry/app/components/search/sources/apiSource.jsx b/src/sentry/static/sentry/app/components/search/sources/apiSource.jsx
index 7d1249e99b..3c18dc324a 100644
--- a/src/sentry/static/sentry/app/components/search/sources/apiSource.jsx
+++ b/src/sentry/static/sentry/app/components/search/sources/apiSource.jsx
@@ -45,14 +45,6 @@ async function createProjectResults(projectsPromise, orgId) {
   const projects = (await projectsPromise) || [];
   return flatten(
     projects.map(project => [
-      {
-        title: `${project.slug} Dashboard`,
-        description: 'Project Dashboard',
-        model: project,
-        sourceType: 'project',
-        resultType: 'route',
-        to: `/${orgId}/${project.slug}/`,
-      },
       {
         title: `${project.slug} Settings`,
         description: 'Project Settings',
diff --git a/tests/js/spec/components/search/sources/apiSource.spec.jsx b/tests/js/spec/components/search/sources/apiSource.spec.jsx
index 89a40acd0b..8aab6925c1 100644
--- a/tests/js/spec/components/search/sources/apiSource.spec.jsx
+++ b/tests/js/spec/components/search/sources/apiSource.spec.jsx
@@ -228,18 +228,6 @@ describe('ApiSource', function() {
           matches: expect.anything(),
           score: expect.anything(),
         }),
-        expect.objectContaining({
-          item: expect.objectContaining({
-            model: expect.objectContaining({
-              slug: 'foo-project',
-            }),
-            sourceType: 'project',
-            resultType: 'route',
-            to: '/org-slug/foo-project/',
-          }),
-          matches: expect.anything(),
-          score: expect.anything(),
-        }),
         expect.objectContaining({
           item: expect.objectContaining({
             model: expect.objectContaining({
@@ -256,7 +244,7 @@ describe('ApiSource', function() {
     });
 
     // There are no members that match
-    expect(mock.mock.calls[1][0].results).toHaveLength(5);
+    expect(mock.mock.calls[1][0].results).toHaveLength(4);
   });
 
   it('render function is called with correct results when API requests partially succeed', async function() {
@@ -321,7 +309,7 @@ describe('ApiSource', function() {
     wrapper.update();
 
     // There are no members that match
-    expect(mock.mock.calls[1][0].results).toHaveLength(5);
+    expect(mock.mock.calls[1][0].results).toHaveLength(4);
     expect(mock.mock.calls[1][0].results[0].item.model.slug).toBe('foo-org');
 
     mock.mockClear();
@@ -329,8 +317,8 @@ describe('ApiSource', function() {
     await tick();
     wrapper.update();
 
-    // Still have 5 results, but is re-ordered
-    expect(mock.mock.calls[0][0].results).toHaveLength(5);
+    // Still have 4 results, but is re-ordered
+    expect(mock.mock.calls[0][0].results).toHaveLength(4);
     expect(mock.mock.calls[0][0].results[0].item.model.slug).toBe('foo-team');
   });
 
