commit 3beb660b7b9051386eaa64528a96a3823025fad3
Author: Armin Ronacher <armin.ronacher@active-4.com>
Date:   Mon Jun 20 20:45:42 2016 +0200

    Add multi faceting for u2f

diff --git a/src/sentry/models/authenticator.py b/src/sentry/models/authenticator.py
index 1e5b8854c7..70f48e5827 100644
--- a/src/sentry/models/authenticator.py
+++ b/src/sentry/models/authenticator.py
@@ -22,6 +22,7 @@ from django.db import models
 from django.utils import timezone
 from django.utils.translation import ugettext_lazy as _
 from django.utils.functional import cached_property
+from django.core.urlresolvers import reverse
 
 from sentry import options
 from sentry.db.models import BaseManager, BaseModel, BoundedAutoField, \
@@ -30,6 +31,7 @@ from sentry.utils.decorators import classproperty
 from sentry.utils.otp import generate_secret_key, TOTP
 from sentry.utils.sms import send_sms, sms_available
 from sentry.utils.dates import to_datetime
+from sentry.utils.http import absolute_uri
 
 
 class ActivationResult(object):
@@ -435,18 +437,22 @@ class U2fInterface(AuthenticatorInterface):
 
     @classproperty
     def u2f_app_id(cls):
-        return options.get('system.url-prefix')
+        facets = options.get('u2f.facets')
+        if not facets:
+            return options.get('system.url-prefix')
+        return absolute_uri(reverse('sentry-u2f-app-id'))
 
     @classproperty
     def u2f_facets(cls):
-        app_id = cls.u2f_app_id
-        return app_id and [app_id] or []
+        facets = options.get('u2f.facets')
+        if not facets:
+            return [cls.u2f_app_id]
+        return [x.rstrip('/') for x in facets]
 
     @classproperty
     def is_available(cls):
-        app_id = cls.u2f_app_id
-        return app_id is not None and \
-            app_id.startswith('https://')
+        url_prefix = options.get('system.url-prefix')
+        return url_prefix and url_prefix.startswith('https://')
 
     def generate_new_config(self):
         return {}
diff --git a/src/sentry/options/defaults.py b/src/sentry/options/defaults.py
index 8f20a503e0..e97ca2e9fe 100644
--- a/src/sentry/options/defaults.py
+++ b/src/sentry/options/defaults.py
@@ -12,7 +12,7 @@ from sentry.options import (
     FLAG_IMMUTABLE, FLAG_NOSTORE, FLAG_PRIORITIZE_DISK, FLAG_REQUIRED, FLAG_ALLOW_EMPTY,
     register,
 )
-from sentry.utils.types import Dict, String
+from sentry.utils.types import Dict, String, Sequence
 
 # Cache
 # register('cache.backend', flags=FLAG_NOSTORE)
@@ -69,3 +69,7 @@ register('mail.mailgun-api-key', default='', flags=FLAG_ALLOW_EMPTY | FLAG_PRIOR
 register('sms.twilio-account', default='', flags=FLAG_ALLOW_EMPTY | FLAG_PRIORITIZE_DISK)
 register('sms.twilio-token', default='', flags=FLAG_ALLOW_EMPTY | FLAG_PRIORITIZE_DISK)
 register('sms.twilio-number', default='', flags=FLAG_ALLOW_EMPTY | FLAG_PRIORITIZE_DISK)
+
+# U2F
+register('u2f.facets', default=(), type=Sequence,
+         flags=FLAG_ALLOW_EMPTY | FLAG_PRIORITIZE_DISK)
diff --git a/src/sentry/utils/types.py b/src/sentry/utils/types.py
index 0a54f4f666..ed2eb1c1dd 100644
--- a/src/sentry/utils/types.py
+++ b/src/sentry/utils/types.py
@@ -134,7 +134,7 @@ class SequenceType(Type):
     """Coerce a tuple out of a json/yaml string or a list"""
     name = 'sequence'
     default = ()
-    expected_types = (tuple,)
+    expected_types = (tuple, list)
     compatible_types = (basestring, tuple, list)
 
     def convert(self, value):
diff --git a/src/sentry/web/frontend/twofactor.py b/src/sentry/web/frontend/twofactor.py
index b50fc74996..c8aa61a331 100644
--- a/src/sentry/web/frontend/twofactor.py
+++ b/src/sentry/web/frontend/twofactor.py
@@ -2,10 +2,11 @@ from __future__ import absolute_import
 
 import time
 
-from django.http import HttpResponseRedirect
+from django.http import HttpResponseRedirect, HttpResponse
 from django.core.urlresolvers import reverse
 from django.utils.translation import ugettext as _
 
+from sentry import options
 from sentry.web.frontend.base import BaseView
 from sentry.web.forms.accounts import TwoFactorForm
 from sentry.web.helpers import render_to_response
@@ -142,3 +143,18 @@ class TwoFactorAuthView(BaseView):
             'other_interfaces': self.get_other_interfaces(interface, interfaces),
             'activation': activation,
         }, request, status=200)
+
+
+def u2f_appid(request):
+    facets = options.get('u2f.facets')
+    if not facets:
+        facets = [options.get('system.url-prefix')]
+    return HttpResponse(json.dumps({
+        'trustedFacets': [{
+            'version': {
+                'major': 1,
+                'minor': 0
+            },
+            'ids': [x.rstrip('/') for x in facets]
+        }]
+    }), content_type='application/fido.trusted-apps+json')
diff --git a/src/sentry/web/urls.py b/src/sentry/web/urls.py
index 486ed31a0c..686793ff53 100644
--- a/src/sentry/web/urls.py
+++ b/src/sentry/web/urls.py
@@ -18,7 +18,7 @@ from sentry.web.frontend.accept_organization_invite import \
     AcceptOrganizationInviteView
 from sentry.web.frontend.admin_queue import AdminQueueView
 from sentry.web.frontend.auth_login import AuthLoginView
-from sentry.web.frontend.twofactor import TwoFactorAuthView
+from sentry.web.frontend.twofactor import TwoFactorAuthView, u2f_appid
 from sentry.web.frontend.auth_logout import AuthLogoutView
 from sentry.web.frontend.auth_organization_login import \
     AuthOrganizationLoginView
@@ -174,6 +174,8 @@ urlpatterns += patterns(
         name='sentry-auth-organization'),
     url(r'^auth/2fa/$', TwoFactorAuthView.as_view(),
         name='sentry-2fa-dialog'),
+    url(r'^auth/2fa/u2fappid\.json$', u2f_appid,
+        name='sentry-u2f-app-id'),
     url(r'^auth/sso/$', AuthProviderLoginView.as_view(),
         name='sentry-auth-sso'),
     url(r'^auth/logout/$', AuthLogoutView.as_view(),
