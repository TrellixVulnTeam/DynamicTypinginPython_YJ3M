commit b73570048c0dff42be2d2b6526b5cab845784651
Author: David Cramer <dcramer@gmail.com>
Date:   Thu Dec 11 22:41:19 2014 -0800

    Various organization cleanup

diff --git a/src/sentry/api/endpoints/organization_member_details.py b/src/sentry/api/endpoints/organization_member_details.py
new file mode 100644
index 0000000000..c1d10d080e
--- /dev/null
+++ b/src/sentry/api/endpoints/organization_member_details.py
@@ -0,0 +1,54 @@
+from __future__ import absolute_import
+
+from rest_framework.response import Response
+
+from sentry.api.base import Endpoint
+from sentry.api.permissions import assert_perm
+from sentry.models import (
+    AuditLogEntry, AuditLogEntryEvent, Organization, OrganizationMember,
+    OrganizationMemberType
+)
+
+
+class OrganizationMemberDetailsEndpoint(Endpoint):
+    def delete(self, request, organization_slug, member_id):
+        try:
+            organization = Organization.objects.get_from_cache(
+                slug=organization_slug,
+            )
+        except Organization.DoesNotExist:
+            return Response(status=404)
+
+        assert_perm(organization, request.user, request.auth)
+
+        if request.user.is_superuser:
+            authorizing_access = OrganizationMemberType.OWNER
+        else:
+            authorizing_access = OrganizationMember.objects.get(
+                user=request.user,
+            ).type
+
+        try:
+            om = OrganizationMember.objects.filter(
+                organization=organization,
+                id=member_id,
+                type__gte=authorizing_access,
+            ).select_related('user').get()
+        except OrganizationMember.DoesNotExist:
+            return Response(status=404)
+
+        audit_data = om.get_audit_log_data()
+
+        om.delete()
+
+        AuditLogEntry.objects.create(
+            organization=organization,
+            actor=request.user,
+            ip_address=request.META['REMOTE_ADDR'],
+            target_object=om.id,
+            target_user=om.user,
+            event=AuditLogEntryEvent.MEMBER_REMOVE,
+            data=audit_data,
+        )
+
+        return Response(status=204)
diff --git a/src/sentry/api/endpoints/organization_projects.py b/src/sentry/api/endpoints/organization_projects.py
index a1dfe84934..fb49fd4a6f 100644
--- a/src/sentry/api/endpoints/organization_projects.py
+++ b/src/sentry/api/endpoints/organization_projects.py
@@ -9,8 +9,10 @@ from sentry.models import Organization, Project, Team
 
 
 class OrganizationProjectsEndpoint(Endpoint):
-    def get(self, request, organization_id):
-        organization = Organization.objects.get_from_cache(id=organization_id)
+    def get(self, request, organization_slug):
+        organization = Organization.objects.get_from_cache(
+            slug=organization_slug,
+        )
 
         assert_perm(organization, request.user, request.auth)
 
diff --git a/src/sentry/api/endpoints/organization_stats.py b/src/sentry/api/endpoints/organization_stats.py
index 3fb5a1b32a..ec45ee28a8 100644
--- a/src/sentry/api/endpoints/organization_stats.py
+++ b/src/sentry/api/endpoints/organization_stats.py
@@ -9,8 +9,10 @@ from sentry.models import Organization, Project, Team
 
 
 class OrganizationStatsEndpoint(BaseStatsEndpoint):
-    def get(self, request, organization_id):
-        organization = Organization.objects.get_from_cache(id=organization_id)
+    def get(self, request, organization_slug):
+        organization = Organization.objects.get_from_cache(
+            slug=organization_slug,
+        )
 
         assert_perm(organization, request.user, request.auth)
 
diff --git a/src/sentry/api/endpoints/organization_teams.py b/src/sentry/api/endpoints/organization_teams.py
index 6cb1c91c16..5d298130c7 100644
--- a/src/sentry/api/endpoints/organization_teams.py
+++ b/src/sentry/api/endpoints/organization_teams.py
@@ -15,22 +15,10 @@ class TeamSerializer(serializers.Serializer):
 
 
 class OrganizationTeamsEndpoint(Endpoint):
-    def get_organization(self, request, organization_id):
-        organization_id = str(organization_id)
-        try:
-            return (
-                o for o in Organization.objects.get_for_user(
-                    user=request.user,
-                )
-                if str(o.id) == organization_id
-            ).next()
-        except StopIteration:
-            return
-
-    def get(self, request, organization_id):
-        organization = self.get_organization(request, organization_id)
-        if organization is None:
-            return Response(status=403)
+    def get(self, request, organization_slug):
+        organization = Organization.objects.get_from_cache(
+            slug=organization_slug,
+        )
 
         if request.auth:
             teams = [request.auth.project.team]
@@ -43,10 +31,10 @@ class OrganizationTeamsEndpoint(Endpoint):
             )
         return Response(serialize(teams, request.user))
 
-    def post(self, request, organization_id):
-        organization = self.get_organization(request, organization_id)
-        if organization is None:
-            return Response(status=403)
+    def post(self, request, organization_slug):
+        organization = Organization.objects.get_from_cache(
+            slug=organization_slug,
+        )
 
         if not can_create_teams(request.user, organization):
             return Response(status=403)
diff --git a/src/sentry/api/urls.py b/src/sentry/api/urls.py
index 0fccc36d0b..2574e85901 100644
--- a/src/sentry/api/urls.py
+++ b/src/sentry/api/urls.py
@@ -16,6 +16,7 @@ from .endpoints.group_events_latest import GroupEventsLatestEndpoint
 from .endpoints.group_notes import GroupNotesEndpoint
 from .endpoints.group_stats import GroupStatsEndpoint
 from .endpoints.group_tags import GroupTagsEndpoint
+from .endpoints.organization_member_details import OrganizationMemberDetailsEndpoint
 from .endpoints.organization_projects import OrganizationProjectsEndpoint
 from .endpoints.organization_stats import OrganizationStatsEndpoint
 from .endpoints.organization_teams import OrganizationTeamsEndpoint
@@ -44,13 +45,16 @@ urlpatterns = patterns(
         name='sentry-api-0-user-details'),
 
     # Organizations
-    url(r'^organizations/(?P<organization_id>\d+)/projects/$',
+    url(r'^organizations/(?P<organization_slug>[^\/]+)/members/(?P<member_id>\d+)/$',
+        OrganizationMemberDetailsEndpoint.as_view(),
+        name='sentry-api-0-organization-member-details'),
+    url(r'^organizations/(?P<organization_slug>[^\/]+)/projects/$',
         OrganizationProjectsEndpoint.as_view(),
         name='sentry-api-0-organization-projects'),
-    url(r'^organizations/(?P<organization_id>\d+)/stats/$',
+    url(r'^organizations/(?P<organization_slug>[^\/]+)/stats/$',
         OrganizationStatsEndpoint.as_view(),
         name='sentry-api-0-organization-stats'),
-    url(r'^organizations/(?P<organization_id>\d+)/teams/$',
+    url(r'^organizations/(?P<organization_slug>[^\/]+)/teams/$',
         OrganizationTeamsEndpoint.as_view(),
         name='sentry-api-0-organization-teams'),
 
diff --git a/src/sentry/models/auditlogentry.py b/src/sentry/models/auditlogentry.py
index b8f4d0a11b..fad90c699a 100644
--- a/src/sentry/models/auditlogentry.py
+++ b/src/sentry/models/auditlogentry.py
@@ -34,7 +34,7 @@ class AuditLogEntry(Model):
         (AuditLogEntryEvent.MEMBER_INVITE, 'org.invite-member'),
         (AuditLogEntryEvent.MEMBER_ADD, 'org.add-member'),
         (AuditLogEntryEvent.MEMBER_ACCEPT, 'org.accept-invite'),
-        (AuditLogEntryEvent.MEMBER_REMOVE, 'org.rempve-member'),
+        (AuditLogEntryEvent.MEMBER_REMOVE, 'org.rempoe-member'),
         (AuditLogEntryEvent.MEMBER_EDIT, 'org.edit-member'),
     ))
     ip_address = models.GenericIPAddressField(null=True, unpack_ipv4=True)
diff --git a/src/sentry/templates/sentry/layout.html b/src/sentry/templates/sentry/layout.html
index 00cfe0146a..210a86716c 100644
--- a/src/sentry/templates/sentry/layout.html
+++ b/src/sentry/templates/sentry/layout.html
@@ -41,6 +41,10 @@
                 app.config.projectId = null;
                 app.config.teamId = {{ team.slug|to_json|safe }};
                 app.config.organizationId = {{ team.organization.slug|to_json|safe }};
+            {% elif organization %}
+                app.config.projectId = null;
+                app.config.teamId = null;
+                app.config.organizationId = {{ organization.slug|to_json|safe }};
             {% else %}
                 app.config.projectId = null;
                 app.config.teamId = null;
diff --git a/src/sentry/templates/sentry/organization-member-details.html b/src/sentry/templates/sentry/organization-member-details.html
new file mode 100644
index 0000000000..043385c634
--- /dev/null
+++ b/src/sentry/templates/sentry/organization-member-details.html
@@ -0,0 +1,65 @@
+{% extends "sentry/bases/modal.html" %}
+
+{% load crispy_forms_tags %}
+{% load i18n %}
+{% load sentry_helpers %}
+
+{% block title %}{% trans "Member Details" %} | {{ block.super }}{% endblock %}
+
+{% block inner %}
+  <div class="page-header">
+    <div class="pull-right">
+      <a href="{% url 'sentry-organization-members' organization.slug %}">Back to Organization Members</a>
+    </div>
+    <h2>
+      Member Details
+      <small>{{ member.get_display_name }}</small>
+    </h2>
+  </div>
+
+  <div class="alert alert-block alert-info">
+    {% if member.user == user %}
+      <p>You cannot make changes to your own membership, unless you're looking to <a href="#">leave this organization</a>.</p>
+    {% else %}
+      <p>You cannot make changes to this member as they have more access than you.</p>
+    {% endif %}
+  </div>
+
+  <fieldset>
+    <div class="control-group">
+      <label>{% trans "Status" %}</label>
+      <div class="controls">
+        {% if member.is_pending %}
+          Invited
+        {% else %}
+          Active
+        {% endif %}
+      </div>
+    </div>
+
+    {{ member.get_type_display }}
+  </fieldset>
+
+  <fieldset>
+    <h2>{% trans "Teams" %}</h2>
+
+    <label>
+      <input type="checkbox" disabled="disabled"{% if member.has_global_access %} checked="checked'{% endif %}">
+      This member should have access to all teams within the organization.
+    </label>
+
+    <fieldset class="team-choices">
+      {% for team in all_teams %}
+        <div class="control-group">
+          <div class="controls">
+            <label class="checkbox">
+              <input type="checkbox" disabled="disabled"
+                     class="checkboxinput"{% if team in enabled_teams %} checked="checked"{% endif %}>
+                {{ team.name }}
+              </label>
+          </div>
+        </div>
+      {% endfor %}
+    </fieldset>
+  </fieldset>
+{% endblock %}
diff --git a/src/sentry/templates/sentry/organization-members.html b/src/sentry/templates/sentry/organization-members.html
index 1263877ac2..dfacdacbf9 100644
--- a/src/sentry/templates/sentry/organization-members.html
+++ b/src/sentry/templates/sentry/organization-members.html
@@ -17,7 +17,7 @@
 
   <br>
 
-  <table class="table table-striped">
+  <table class="table table-striped member-list">
     <colgroup>
       <col width="20px"/>
       <col/>
@@ -62,10 +62,38 @@
             {% endif %}
           </td>
           <td>
-            <a href=""><span class="icon icon-remove"></span></a>
+            {% if authorizing_access <= member.type %}
+              <a href="javascript:void(0)" class="remove-member" data-member-id="{{ member.id }}">
+                <span class="icon icon-remove"></span>
+              </a>
+            {% endif %}
           </td>
         </tr>
       {% endfor %}
     </tbody>
   </table>
 {% endblock %}
+
+{% block content_after %}
+  <style>
+  .member-list form {
+    display: inline-block;
+  }
+  </style>
+  <script>
+  $('.remove-member').click(function(){
+    if (!confirm('Are you sure you wish to remove this member?')) {
+      return;
+    }
+
+    var $this = $(this);
+    $.ajax({
+      url: app.config.urlPrefix + '/api/0/organizations/' + app.config.organizationId + '/members/' + $this.data('member-id') + '/',
+      method: 'DELETE',
+      success: function() {
+        $this.parents('tr').remove();
+      }
+    });
+  });
+  </script>
+{% endblock %}
diff --git a/src/sentry/templates/sentry/organization-stats.html b/src/sentry/templates/sentry/organization-stats.html
index e2d1a2ba5f..ff75f9f1d3 100644
--- a/src/sentry/templates/sentry/organization-stats.html
+++ b/src/sentry/templates/sentry/organization-stats.html
@@ -58,7 +58,7 @@
   $(function(){
     var $sparkline = $('#chart');
     var rawData = {received: null, rejected: null};
-    var statsEndpoint = '{% url 'sentry-api-0-organization-stats' organization.id %}';
+    var statsEndpoint = app.config.urlPrefix + '/api/0/organizations/' + app.config.organizationId + '/stats/';
     var stats = {received: [], rejected: []};
     var projectTotals = [];
     var orgTotal = {received: 0, rejected: 0, accepted: 0};
@@ -68,7 +68,7 @@
     $sparkline.height('250px');
 
     $.ajax({
-      url: '{% url 'sentry-api-0-organization-projects' organization.id %}',
+      url: app.config.urlPrefix + '/api/0/organizations/' + app.config.organizationId + '/projects/',
       type: 'get',
       dataType: 'json',
       success: function(data) {
diff --git a/src/sentry/web/frontend/organization_member_settings.py b/src/sentry/web/frontend/organization_member_settings.py
index 5ce729caf9..4d55378137 100644
--- a/src/sentry/web/frontend/organization_member_settings.py
+++ b/src/sentry/web/frontend/organization_member_settings.py
@@ -2,10 +2,9 @@ from __future__ import absolute_import
 
 from django.contrib import messages
 from django.core.urlresolvers import reverse
-from django.http import HttpResponseRedirect
 from django.utils.translation import ugettext_lazy as _, ugettext
 
-from sentry.models import OrganizationMember, OrganizationMemberType
+from sentry.models import OrganizationMember, OrganizationMemberType, Team
 from sentry.web.frontend.base import OrganizationView
 from sentry.web.forms.edit_organization_member import EditOrganizationMemberForm
 
@@ -13,13 +12,7 @@ from sentry.web.forms.edit_organization_member import EditOrganizationMemberForm
 class OrganizationMemberSettingsView(OrganizationView):
     required_access = OrganizationMemberType.ADMIN
 
-    def get_form(self, request, member):
-        if request.user.is_superuser:
-            authorizing_access = OrganizationMemberType.OWNER
-        else:
-            membership = OrganizationMember.objects.get(user=request.user)
-            authorizing_access = membership.type
-
+    def get_form(self, request, member, authorizing_access):
         return EditOrganizationMemberForm(
             authorizing_access=authorizing_access,
             data=request.POST or None,
@@ -29,26 +22,49 @@ class OrganizationMemberSettingsView(OrganizationView):
             }
         )
 
+    def resend_invite(self, request, organization, member):
+        messages.success(request, ugettext('An invitation to join %(organization)s has been sent to %(email)s') % {
+            'organization': organization.name,
+            'email': member.email,
+        })
+
+        member.send_invite_email()
+
+        redirect = reverse('sentry-organization-member-settings',
+                           args=[organization.slug, member.id])
+
+        return self.redirect(redirect)
+
+    def view_member(self, request, organization, member):
+        context = {
+            'member': member,
+            'enabled_teams': set(member.teams.all()),
+            'all_teams': Team.objects.filter(
+                organization=organization,
+            ),
+        }
+
+        return self.respond('sentry/organization-member-details.html', context)
+
     def handle(self, request, organization, member_id):
         try:
             member = OrganizationMember.objects.get(id=member_id)
         except OrganizationMember.DoesNotExist:
-            return HttpResponseRedirect(reverse('sentry'))
+            return self.redirect(reverse('sentry'))
 
         if request.POST.get('op') == 'reinvite' and member.is_pending:
-            messages.success(request, ugettext('An invitation to join %(organization)s has been sent to %(email)s') % {
-                'organization': organization.name,
-                'email': member.email,
-            })
+            return self.resend_invite(request, organization, member)
 
-            member.send_invite_email()
-
-            redirect = reverse('sentry-organization-member-settings',
-                               args=[organization.slug, member.id])
+        if request.user.is_superuser:
+            authorizing_access = OrganizationMemberType.OWNER
+        else:
+            membership = OrganizationMember.objects.get(user=request.user)
+            authorizing_access = membership.type
 
-            return HttpResponseRedirect(redirect)
+        if authorizing_access > member.type:
+            return self.view_member(request, organization, member)
 
-        form = self.get_form(request, member)
+        form = self.get_form(request, member, authorizing_access)
         if form.is_valid():
             member = form.save(request.user, organization, request.META['REMOTE_ADDR'])
 
@@ -58,7 +74,7 @@ class OrganizationMemberSettingsView(OrganizationView):
             redirect = reverse('sentry-organization-member-settings',
                                args=[organization.slug, member.id])
 
-            return HttpResponseRedirect(redirect)
+            return self.redirect(redirect)
 
         context = {
             'member': member,
diff --git a/src/sentry/web/frontend/organization_members.py b/src/sentry/web/frontend/organization_members.py
index 14b9995f57..14776f3c52 100644
--- a/src/sentry/web/frontend/organization_members.py
+++ b/src/sentry/web/frontend/organization_members.py
@@ -11,7 +11,14 @@ from sentry.web.frontend.base import OrganizationView
 class OrganizationMembersView(OrganizationView):
     required_access = OrganizationMemberType.ADMIN
 
-    def get(self, request, organization):
+    def handle(self, request, organization):
+        if request.user.is_superuser:
+            authorizing_access = OrganizationMemberType.OWNER
+        else:
+            authorizing_access = OrganizationMember.objects.get(
+                user=request.user,
+            ).type
+
         queryset = OrganizationMemberTeams.objects.filter(
             organizationmember__organization=organization,
         ).select_related('team')
@@ -32,6 +39,7 @@ class OrganizationMembersView(OrganizationView):
 
         context = {
             'member_list': member_list,
+            'authorizing_access': authorizing_access,
         }
 
         return self.respond('sentry/organization-members.html', context)
diff --git a/tests/sentry/api/endpoints/test_organization_member_details.py b/tests/sentry/api/endpoints/test_organization_member_details.py
new file mode 100644
index 0000000000..2a89955ee5
--- /dev/null
+++ b/tests/sentry/api/endpoints/test_organization_member_details.py
@@ -0,0 +1,31 @@
+from __future__ import absolute_import
+
+from django.core.urlresolvers import reverse
+
+from sentry.models import OrganizationMember, OrganizationMemberType
+from sentry.testutils import APITestCase
+
+
+class DeleteOrganizationMemberTest(APITestCase):
+    def test_simple(self):
+        self.login_as(user=self.user)
+
+        organization = self.create_organization(name='foo', owner=self.user)
+        member = self.create_user('bar@example.com')
+
+        member_om = OrganizationMember.objects.create(
+            organization=organization,
+            user=member,
+            type=OrganizationMemberType.MEMBER,
+            has_global_access=False,
+        )
+
+        path = reverse('sentry-api-0-organization-member-details', args=[organization.slug, member_om.id])
+
+        self.login_as(self.user)
+
+        resp = self.client.delete(path)
+
+        assert resp.status_code == 204
+
+        assert not OrganizationMember.objects.filter(id=member_om.id).exists()
diff --git a/tests/sentry/api/endpoints/test_organization_projects.py b/tests/sentry/api/endpoints/test_organization_projects.py
index 26b18d5168..d82b99feb6 100644
--- a/tests/sentry/api/endpoints/test_organization_projects.py
+++ b/tests/sentry/api/endpoints/test_organization_projects.py
@@ -1,3 +1,5 @@
+from __future__ import absolute_import
+
 from django.core.urlresolvers import reverse
 
 from sentry.testutils import APITestCase
@@ -11,9 +13,7 @@ class OrganizationProjectsTest(APITestCase):
         team = self.create_team(organization=org)
         project = self.create_project(team=team)
 
-        url = reverse('sentry-api-0-organization-projects', kwargs={
-            'organization_id': org.id,
-        })
+        url = reverse('sentry-api-0-organization-projects', args=[org.slug])
         response = self.client.get(url, format='json')
 
         assert response.status_code == 200, response.content
diff --git a/tests/sentry/api/endpoints/test_organization_stats.py b/tests/sentry/api/endpoints/test_organization_stats.py
index 9a9a9e9312..a8480c2171 100644
--- a/tests/sentry/api/endpoints/test_organization_stats.py
+++ b/tests/sentry/api/endpoints/test_organization_stats.py
@@ -1,3 +1,5 @@
+from __future__ import absolute_import
+
 from django.core.urlresolvers import reverse
 
 from sentry.app import tsdb
@@ -12,9 +14,7 @@ class OrganizationStatsTest(APITestCase):
 
         tsdb.incr(tsdb.models.organization_total_received, org.id, count=3)
 
-        url = reverse('sentry-api-0-organization-stats', kwargs={
-            'organization_id': org.id,
-        })
+        url = reverse('sentry-api-0-organization-stats', args=[org.slug])
         response = self.client.get(url, format='json')
 
         assert response.status_code == 200, response.content
diff --git a/tests/sentry/api/endpoints/test_organization_teams.py b/tests/sentry/api/endpoints/test_organization_teams.py
index 464219ddc9..d4f488824e 100644
--- a/tests/sentry/api/endpoints/test_organization_teams.py
+++ b/tests/sentry/api/endpoints/test_organization_teams.py
@@ -1,3 +1,5 @@
+from __future__ import absolute_import
+
 from django.core.urlresolvers import reverse
 from exam import fixture
 from mock import Mock, patch
@@ -9,7 +11,7 @@ from sentry.testutils import APITestCase
 class OrganizationTeamsListTest(APITestCase):
     @fixture
     def path(self):
-        return reverse('sentry-api-0-organization-teams', args=[self.organization.id])
+        return reverse('sentry-api-0-organization-teams', args=[self.organization.slug])
 
     def test_simple(self):
         team = self.create_team()  # force creation
@@ -23,7 +25,7 @@ class OrganizationTeamsListTest(APITestCase):
 class OrganizationTeamsCreateTest(APITestCase):
     @fixture
     def path(self):
-        return reverse('sentry-api-0-organization-teams', args=[self.organization.id])
+        return reverse('sentry-api-0-organization-teams', args=[self.organization.slug])
 
     @patch('sentry.api.endpoints.organization_teams.can_create_teams', Mock(return_value=False))
     def test_missing_permission(self):
