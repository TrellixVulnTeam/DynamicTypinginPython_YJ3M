commit d7292be4ae3320e38c7b55a731598d649b51b3ed
Author: Lyn Nagara <lyn.nagara@gmail.com>
Date:   Wed May 15 13:39:55 2019 -0700

    feat(events-v2): Add feature flag for events v2 (#13226)
    
    Add feature flag for events v2 and render new views if flag is active

diff --git a/src/sentry/conf/server.py b/src/sentry/conf/server.py
index d52bfb7bef..321dbc5b55 100644
--- a/src/sentry/conf/server.py
+++ b/src/sentry/conf/server.py
@@ -814,6 +814,8 @@ SENTRY_FEATURES = {
     'organizations:symbol-sources': False,
     # Enable the events stream interface.
     'organizations:events': False,
+    # Enable events v2 instead of the events stream
+    'organizations:events-v2': False,
     # Enable multi project selection
     'organizations:global-views': False,
     # Turns on grouping info.
diff --git a/src/sentry/features/__init__.py b/src/sentry/features/__init__.py
index 470144049c..280caadfe2 100644
--- a/src/sentry/features/__init__.py
+++ b/src/sentry/features/__init__.py
@@ -58,6 +58,7 @@ default_manager.add('organizations:boolean-search', OrganizationFeature)  # NOQA
 default_manager.add('organizations:api-keys', OrganizationFeature)  # NOQA
 default_manager.add('organizations:discover', OrganizationFeature)  # NOQA
 default_manager.add('organizations:events', OrganizationFeature)  # NOQA
+default_manager.add('organizations:events-v2', OrganizationFeature)  # NOQA
 default_manager.add('organizations:event-attachments', OrganizationFeature)  # NOQA
 default_manager.add('organizations:symbol-sources', OrganizationFeature)  # NOQA
 default_manager.add('organizations:global-views', OrganizationFeature)  # NOQA
diff --git a/src/sentry/static/sentry/app/components/sidebar/index.jsx b/src/sentry/static/sentry/app/components/sidebar/index.jsx
index c3b882dc7e..5fef1f2e09 100644
--- a/src/sentry/static/sentry/app/components/sidebar/index.jsx
+++ b/src/sentry/static/sentry/app/components/sidebar/index.jsx
@@ -279,7 +279,8 @@ class Sidebar extends React.Component {
                 </Feature>
 
                 <Feature
-                  features={['events']}
+                  features={['events', 'events-v2']}
+                  requireAll={false}
                   hookName="events-sidebar-item"
                   organization={organization}
                 >
diff --git a/src/sentry/static/sentry/app/views/organizationEvents/index.jsx b/src/sentry/static/sentry/app/views/organizationEvents/index.jsx
index 9cfa9a925a..c40f5b2852 100644
--- a/src/sentry/static/sentry/app/views/organizationEvents/index.jsx
+++ b/src/sentry/static/sentry/app/views/organizationEvents/index.jsx
@@ -13,6 +13,7 @@ import PageHeading from 'app/components/pageHeading';
 import withGlobalSelection from 'app/utils/withGlobalSelection';
 import withOrganization from 'app/utils/withOrganization';
 import {PageContent, PageHeader} from 'app/styles/organization';
+import LazyLoad from 'app/components/lazyLoad';
 
 import SearchBar from './searchBar';
 
@@ -42,6 +43,21 @@ class OrganizationEventsContainer extends React.Component {
   render() {
     const {organization, location, children} = this.props;
 
+    const hasEventsV2 = new Set(organization.features).has('events-v2');
+
+    if (hasEventsV2) {
+      return (
+        <LazyLoad
+          component={() =>
+            import(/* webpackChunkName: "organizationEventsV2" */ 'app/views/organizationEventsV2').then(
+              mod => mod.default
+            )
+          }
+          organization={organization}
+        />
+      );
+    }
+
     return (
       <Feature features={['events']} hookName="events-page" renderDisabled>
         <GlobalSelectionHeader
diff --git a/src/sentry/static/sentry/app/views/organizationEventsV2/index.jsx b/src/sentry/static/sentry/app/views/organizationEventsV2/index.jsx
new file mode 100644
index 0000000000..248c6ab4c1
--- /dev/null
+++ b/src/sentry/static/sentry/app/views/organizationEventsV2/index.jsx
@@ -0,0 +1,34 @@
+import React from 'react';
+import DocumentTitle from 'react-document-title';
+
+import {t} from 'app/locale';
+import SentryTypes from 'app/sentryTypes';
+import GlobalSelectionHeader from 'app/components/organizations/globalSelectionHeader';
+import {PageContent, PageHeader} from 'app/styles/organization';
+import PageHeading from 'app/components/pageHeading';
+import BetaTag from 'app/components/betaTag';
+
+export default class OrganizationEventsV2 extends React.Component {
+  static propTypes = {
+    organization: SentryTypes.Organization,
+  };
+
+  render() {
+    const {organization} = this.props;
+
+    return (
+      <DocumentTitle title={`Events - ${organization.slug} - Sentry`}>
+        <React.Fragment>
+          <GlobalSelectionHeader organization={organization} />
+          <PageContent>
+            <PageHeader>
+              <PageHeading>
+                {t('Events')} <BetaTag />
+              </PageHeading>
+            </PageHeader>
+          </PageContent>
+        </React.Fragment>
+      </DocumentTitle>
+    );
+  }
+}
diff --git a/tests/js/spec/views/organizationEventsV2/index.spec.jsx b/tests/js/spec/views/organizationEventsV2/index.spec.jsx
new file mode 100644
index 0000000000..1e23614d9a
--- /dev/null
+++ b/tests/js/spec/views/organizationEventsV2/index.spec.jsx
@@ -0,0 +1,15 @@
+import React from 'react';
+import {mount} from 'enzyme';
+
+import OrganizationEventsV2 from 'app/views/organizationEventsV2';
+
+describe('OrganizationEventsV2', function() {
+  it('renders', function() {
+    const wrapper = mount(
+      <OrganizationEventsV2 organization={TestStubs.Organization()} />,
+      TestStubs.routerContext()
+    );
+    const content = wrapper.find('PageContent');
+    expect(content.text()).toContain('Events');
+  });
+});
