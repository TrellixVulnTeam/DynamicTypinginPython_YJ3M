commit faaceb076b5feeaf5fd3573beedbc3238d0813f8
Author: Chris Clark <christopherchristopherclark@gmail.com>
Date:   Fri Mar 2 14:26:57 2018 -0800

    feat(settings): team member list polish (#7428)
    
    * remove le table
    
    * I don't expect to see a disabled remove button on someone elses follower list, so people don't need to see a disabled remove button for a team they didn't create
    
    * add hasButtons to the propTypes and pass it into styled to prevent react error messages from old components
    
    * sweet sweet padding
    
    * style user badge and add some padding
    
    * padding falafel sandwich
    
    * add remove icon
    
    * if using styled u gotta pass the classname 'avatar'
    
    * add empty message
    
    * consistent dividers

diff --git a/src/sentry/static/sentry/app/components/userBadge.jsx b/src/sentry/static/sentry/app/components/userBadge.jsx
index 18313d3bc5..996ea0cdcc 100644
--- a/src/sentry/static/sentry/app/components/userBadge.jsx
+++ b/src/sentry/static/sentry/app/components/userBadge.jsx
@@ -1,19 +1,20 @@
 import PropTypes from 'prop-types';
 import React from 'react';
+import styled from 'react-emotion';
 import Avatar from './avatar';
 import Link from './link';
 
 const UserBadge = ({user, orgId}) => {
   return (
-    <div>
-      <Avatar user={user} size={80} />
-      <h5>
-        <Link to={`/settings/organization/${orgId}/members/${user.id}`}>
+    <StyledUserBadge>
+      <StyledAvatar user={user} size={80} className="avatar" />
+      <div>
+        <StyledLink to={`/settings/organization/${orgId}/members/${user.id}`}>
           {user.email}
-        </Link>
-      </h5>
-      {user.email}
-    </div>
+        </StyledLink>
+        <StyledEmail>{user.email}</StyledEmail>
+      </div>
+    </StyledUserBadge>
   );
 };
 
@@ -22,4 +23,25 @@ UserBadge.propTypes = {
   orgId: PropTypes.string,
 };
 
+const StyledUserBadge = styled('div')`
+  display: flex;
+  align-items: center;
+`;
+
+const StyledEmail = styled('div')`
+  font-size: 0.875em;
+`;
+
+const StyledLink = styled(Link)`
+  font-weight: bold;
+  display: block;
+  margin-bottom: 0.2em;
+`;
+
+const StyledAvatar = styled(props => <Avatar {...props} />)`
+  width: 2em;
+  height: 2em;
+  margin-right: 0.5em;
+`;
+
 export default UserBadge;
diff --git a/src/sentry/static/sentry/app/views/settings/components/panelHeader.jsx b/src/sentry/static/sentry/app/views/settings/components/panelHeader.jsx
index 85d21a3a35..35b8f955fa 100644
--- a/src/sentry/static/sentry/app/views/settings/components/panelHeader.jsx
+++ b/src/sentry/static/sentry/app/views/settings/components/panelHeader.jsx
@@ -10,7 +10,9 @@ const getPadding = ({disablePadding, hasButtons}) => css`
 
 const getFlex = ({isFlex}) => (isFlex ? 'display: flex' : '');
 
-const StyledPanelHeader = styled(({disablePadding, ...props}) => <div {...props} />)`
+const StyledPanelHeader = styled(({disablePadding, hasButtons, ...props}) => (
+  <div {...props} />
+))`
   border-bottom: 1px solid ${p => p.theme.borderDark};
   border-radius: ${p => p.theme.borderRadius} ${p => p.theme.borderRadius} 0 0;
   background: ${p => p.theme.offWhite};
@@ -47,6 +49,7 @@ class PanelHeader extends React.Component {
 PanelHeader.propTypes = {
   isFlex: PropTypes.bool,
   disablePadding: PropTypes.bool,
+  hasButtons: PropTypes.bool,
   lightText: PropTypes.bool,
 };
 
diff --git a/src/sentry/static/sentry/app/views/settings/team/teamMembers.jsx b/src/sentry/static/sentry/app/views/settings/team/teamMembers.jsx
index f864aaf8d9..5c570ce203 100644
--- a/src/sentry/static/sentry/app/views/settings/team/teamMembers.jsx
+++ b/src/sentry/static/sentry/app/views/settings/team/teamMembers.jsx
@@ -10,17 +10,12 @@ import {leaveTeam} from '../../../actionCreators/teams';
 import LoadingError from '../../../components/loadingError';
 import LoadingIndicator from '../../../components/loadingIndicator';
 import OrganizationState from '../../../mixins/organizationState';
-import Tooltip from '../../../components/tooltip';
 import Panel from '../components/panel';
 import PanelHeader from '../components/panelHeader';
+import InlineSvg from '../../../components/inlineSvg';
+import EmptyMessage from '../components/emptyMessage';
 import {t} from '../../../locale';
 
-const PanelHeaderContentContainer = styled('div')`
-  display: flex;
-  align-items: center;
-  justify-content: space-between;
-`;
-
 const TeamMembers = createReactClass({
   displayName: 'TeamMembers',
   mixins: [ApiMixin, OrganizationState],
@@ -124,6 +119,19 @@ const TeamMembers = createReactClass({
     );
   },
 
+  removeButton(member) {
+    return (
+      <Button size="small" onClick={this.removeMember.bind(this, member)}>
+        <InlineSvg
+          src="icon-circle-subtract"
+          size="1.25em"
+          style={{marginRight: '0.5em'}}
+        />
+        {t('Remove')}
+      </Button>
+    );
+  },
+
   render() {
     if (this.state.loading) return <LoadingIndicator />;
     else if (this.state.error) return <LoadingError onRetry={this.fetchData} />;
@@ -133,51 +141,41 @@ const TeamMembers = createReactClass({
     let access = this.getAccess();
 
     return (
-      <div>
-        <Panel>
-          <PanelHeader>
-            <PanelHeaderContentContainer>
-              <div>{t('Members')}</div>
-              {this.addMemberButton(access, params.orgId)}
-            </PanelHeaderContentContainer>
-          </PanelHeader>
-          <table className="table member-list">
-            <tbody>
-              {this.state.memberList.map((member, i) => {
-                return (
-                  <tr key={i}>
-                    <td className="table-user-info">
-                      <UserBadge user={member} orgId={params.orgId} />
-                    </td>
-                    <td>
-                      {access.has('org:write') ? (
-                        <Button
-                          size="small"
-                          onClick={this.removeMember.bind(this, member)}
-                        >
-                          {t('Remove')}
-                        </Button>
-                      ) : (
-                        <Tooltip
-                          title={t("You don't have have permission to remove members")}
-                        >
-                          <span>
-                            <Button size="small" disabled={true}>
-                              {t('Remove')}
-                            </Button>
-                          </span>
-                        </Tooltip>
-                      )}
-                    </td>
-                  </tr>
-                );
-              })}
-            </tbody>
-          </table>
-        </Panel>
-      </div>
+      <Panel>
+        <PanelHeader hasButtons disablePadding>
+          <StyledHeaderContainer>
+            <div>{t('Members')}</div>
+            {this.addMemberButton(access, params.orgId)}
+          </StyledHeaderContainer>
+        </PanelHeader>
+        {this.state.memberList.length ? (
+          this.state.memberList.map((member, i) => (
+            <StyledMemberContainer key={i}>
+              <UserBadge user={member} orgId={params.orgId} />
+              {access.has('org:write') && this.removeButton(member)}
+            </StyledMemberContainer>
+          ))
+        ) : (
+          <EmptyMessage icon="icon-user">Your Team is Empty</EmptyMessage>
+        )}
+      </Panel>
     );
   },
 });
 
+const StyledHeaderContainer = styled('div')`
+  display: flex;
+  align-items: center;
+  justify-content: space-between;
+  padding-left: 1em;
+  padding-right: 1em;
+`;
+
+const StyledMemberContainer = styled('div')`
+  display: flex;
+  justify-content: space-between;
+  padding: 1.25em 1em;
+  border-bottom: 1px solid ${p => p.theme.borderLight};
+`;
+
 export default TeamMembers;
diff --git a/tests/js/spec/views/__snapshots__/projectPluginDetails.spec.jsx.snap b/tests/js/spec/views/__snapshots__/projectPluginDetails.spec.jsx.snap
index a4bc079f5e..4e6a832fa2 100644
--- a/tests/js/spec/views/__snapshots__/projectPluginDetails.spec.jsx.snap
+++ b/tests/js/spec/views/__snapshots__/projectPluginDetails.spec.jsx.snap
@@ -444,7 +444,6 @@ exports[`ProjectPluginDetails renders 1`] = `
                         >
                           <div
                             className="glamor-21 glamor-22"
-                            hasButtons={true}
                           >
                             <StyledPanelHeading>
                               <Component
diff --git a/tests/js/spec/views/__snapshots__/teamMembers.spec.jsx.snap b/tests/js/spec/views/__snapshots__/teamMembers.spec.jsx.snap
index 0a0b7b4909..d0fc09a032 100644
--- a/tests/js/spec/views/__snapshots__/teamMembers.spec.jsx.snap
+++ b/tests/js/spec/views/__snapshots__/teamMembers.spec.jsx.snap
@@ -1,151 +1,155 @@
 // Jest Snapshot v1, https://goo.gl/fbAQLP
 
 exports[`TeamMembers render() renders 1`] = `
-<div>
-  <Panel>
-    <PanelHeader>
-      <PanelHeaderContentContainer>
-        <div>
-          Members
-        </div>
-        <Button
-          className="pull-right"
-          disabled={false}
-          priority="primary"
-          size="small"
-          to="/settings/organization/org-slug/members/new/"
-        >
-          <span
-            className="icon-plus"
-          />
-           
-          Invite Member
-        </Button>
-      </PanelHeaderContentContainer>
-    </PanelHeader>
-    <table
-      className="table member-list"
+<Panel>
+  <PanelHeader
+    disablePadding={true}
+    hasButtons={true}
+  >
+    <StyledHeaderContainer>
+      <div>
+        Members
+      </div>
+      <Button
+        className="pull-right"
+        disabled={false}
+        priority="primary"
+        size="small"
+        to="/settings/organization/org-slug/members/new/"
+      >
+        <span
+          className="icon-plus"
+        />
+         
+        Invite Member
+      </Button>
+    </StyledHeaderContainer>
+  </PanelHeader>
+  <StyledMemberContainer
+    key="0"
+  >
+    <UserBadge
+      orgId="org-slug"
+      user={
+        Object {
+          "email": "",
+          "flags": Object {
+            "sso:linked": false,
+          },
+          "id": "1",
+          "name": "",
+          "pending": false,
+          "roleName": "",
+          "user": Object {
+            "email": "sentry1@test.com",
+            "has2fa": false,
+            "id": "1",
+            "name": "Sentry 1 Name",
+            "username": "Sentry 1 Username",
+          },
+        }
+      }
+    />
+    <Button
+      disabled={false}
+      onClick={[Function]}
+      size="small"
     >
-      <tbody>
-        <tr
-          key="0"
-        >
-          <td
-            className="table-user-info"
-          >
-            <UserBadge
-              orgId="org-slug"
-              user={
-                Object {
-                  "email": "",
-                  "flags": Object {
-                    "sso:linked": false,
-                  },
-                  "id": "1",
-                  "name": "",
-                  "pending": false,
-                  "roleName": "",
-                  "user": Object {
-                    "email": "sentry1@test.com",
-                    "has2fa": false,
-                    "id": "1",
-                    "name": "Sentry 1 Name",
-                    "username": "Sentry 1 Username",
-                  },
-                }
-              }
-            />
-          </td>
-          <td>
-            <Button
-              disabled={false}
-              onClick={[Function]}
-              size="small"
-            >
-              Remove
-            </Button>
-          </td>
-        </tr>
-        <tr
-          key="1"
-        >
-          <td
-            className="table-user-info"
-          >
-            <UserBadge
-              orgId="org-slug"
-              user={
-                Object {
-                  "email": "",
-                  "flags": Object {
-                    "sso:linked": false,
-                  },
-                  "id": "2",
-                  "name": "",
-                  "pending": false,
-                  "roleName": "",
-                  "user": Object {
-                    "email": "sentry2@test.com",
-                    "has2fa": true,
-                    "id": "2",
-                    "name": "Sentry 2 Name",
-                    "username": "Sentry 2 Username",
-                  },
-                }
-              }
-            />
-          </td>
-          <td>
-            <Button
-              disabled={false}
-              onClick={[Function]}
-              size="small"
-            >
-              Remove
-            </Button>
-          </td>
-        </tr>
-        <tr
-          key="2"
-        >
-          <td
-            className="table-user-info"
-          >
-            <UserBadge
-              orgId="org-slug"
-              user={
-                Object {
-                  "email": "",
-                  "flags": Object {
-                    "sso:linked": true,
-                  },
-                  "id": "3",
-                  "name": "",
-                  "pending": false,
-                  "roleName": "",
-                  "user": Object {
-                    "email": "sentry3@test.com",
-                    "has2fa": true,
-                    "id": "3",
-                    "name": "Sentry 3 Name",
-                    "username": "Sentry 3 Username",
-                  },
-                }
-              }
-            />
-          </td>
-          <td>
-            <Button
-              disabled={false}
-              onClick={[Function]}
-              size="small"
-            >
-              Remove
-            </Button>
-          </td>
-        </tr>
-      </tbody>
-    </table>
-  </Panel>
-</div>
+      <InlineSvg
+        size="1.25em"
+        src="icon-circle-subtract"
+        style={
+          Object {
+            "marginRight": "0.5em",
+          }
+        }
+      />
+      Remove
+    </Button>
+  </StyledMemberContainer>
+  <StyledMemberContainer
+    key="1"
+  >
+    <UserBadge
+      orgId="org-slug"
+      user={
+        Object {
+          "email": "",
+          "flags": Object {
+            "sso:linked": false,
+          },
+          "id": "2",
+          "name": "",
+          "pending": false,
+          "roleName": "",
+          "user": Object {
+            "email": "sentry2@test.com",
+            "has2fa": true,
+            "id": "2",
+            "name": "Sentry 2 Name",
+            "username": "Sentry 2 Username",
+          },
+        }
+      }
+    />
+    <Button
+      disabled={false}
+      onClick={[Function]}
+      size="small"
+    >
+      <InlineSvg
+        size="1.25em"
+        src="icon-circle-subtract"
+        style={
+          Object {
+            "marginRight": "0.5em",
+          }
+        }
+      />
+      Remove
+    </Button>
+  </StyledMemberContainer>
+  <StyledMemberContainer
+    key="2"
+  >
+    <UserBadge
+      orgId="org-slug"
+      user={
+        Object {
+          "email": "",
+          "flags": Object {
+            "sso:linked": true,
+          },
+          "id": "3",
+          "name": "",
+          "pending": false,
+          "roleName": "",
+          "user": Object {
+            "email": "sentry3@test.com",
+            "has2fa": true,
+            "id": "3",
+            "name": "Sentry 3 Name",
+            "username": "Sentry 3 Username",
+          },
+        }
+      }
+    />
+    <Button
+      disabled={false}
+      onClick={[Function]}
+      size="small"
+    >
+      <InlineSvg
+        size="1.25em"
+        src="icon-circle-subtract"
+        style={
+          Object {
+            "marginRight": "0.5em",
+          }
+        }
+      />
+      Remove
+    </Button>
+  </StyledMemberContainer>
+</Panel>
 `;
