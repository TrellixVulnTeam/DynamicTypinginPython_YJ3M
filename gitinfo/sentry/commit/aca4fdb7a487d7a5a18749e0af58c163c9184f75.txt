commit aca4fdb7a487d7a5a18749e0af58c163c9184f75
Author: David Cramer <dcramer@gmail.com>
Date:   Fri Oct 19 00:53:40 2012 -0700

    Remove code for storing element positions

diff --git a/src/sentry/static/sentry/coffee/views.coffee b/src/sentry/static/sentry/coffee/views.coffee
index 995d44f3e9..c28050c26a 100644
--- a/src/sentry/static/sentry/coffee/views.coffee
+++ b/src/sentry/static/sentry/coffee/views.coffee
@@ -31,11 +31,7 @@ jQuery ->
                 @renderMemberInContainer(member)
 
         updateMember: (member) ->
-            currentPosition = @collection.indexOf(obj)
-
             obj = @collection.get(member.id)
-            # We need previousPosition for sorting
-            obj.set('previousPosition', @collection.indexOf(obj))
             obj.set('count', member.get('count'))
             obj.set('score', member.get('score'))
 
@@ -48,23 +44,17 @@ jQuery ->
             @collection.remove(member)
 
         renderMemberInContainer: (member) ->
-            # TODO: we might want to optimize here and get old positions/new positions
-            # all at once so there's a single sort cost
             new_pos = @collection.indexOf(member)
 
-            # check to see if the row already exists in the sort,
-            # and get the current position
-            old_pos = member.get('previousPosition') || -1;
-
-            # if the row was already present, adjust its score
-            if old_pos == new_pos
-                return
-        
             # create the element if it does not yet exist
             $el = $(@id + member.id)
             if !$el.length
                 $el = @renderMember(member)
 
+            # if the row was already present, ensure it moved
+            else if $el.index() == new_pos
+                return
+
             # top item
             if new_pos == 0
                 @$parent.prepend($el)
@@ -86,7 +76,7 @@ jQuery ->
                 id: @id + member.id
 
             out = view.render()
-            out.el
+            $(out.el)
 
         unrenderMember: (member) ->
             $(@id + member.id).remove()
diff --git a/src/sentry/static/sentry/scripts/site.js b/src/sentry/static/sentry/scripts/site.js
index cafb9d089c..b332f5e300 100644
--- a/src/sentry/static/sentry/scripts/site.js
+++ b/src/sentry/static/sentry/scripts/site.js
@@ -171,10 +171,8 @@
       };
 
       GroupListView.prototype.updateMember = function(member) {
-        var currentPosition, obj;
-        currentPosition = this.collection.indexOf(obj);
+        var obj;
         obj = this.collection.get(member.id);
-        obj.set('previousPosition', this.collection.indexOf(obj));
         obj.set('count', member.get('count'));
         obj.set('score', member.get('score'));
         return this.collection.sort();
@@ -193,15 +191,13 @@
       };
 
       GroupListView.prototype.renderMemberInContainer = function(member) {
-        var $el, $rel, new_pos, old_pos;
+        var $el, $rel, new_pos;
         new_pos = this.collection.indexOf(member);
-        old_pos = member.get('previousPosition') || -1;
-        if (old_pos === new_pos) {
-          return;
-        }
         $el = $(this.id + member.id);
         if (!$el.length) {
           $el = this.renderMember(member);
+        } else if ($el.index() === new_pos) {
+          return;
         }
         if (new_pos === 0) {
           return this.$parent.prepend($el);
@@ -222,7 +218,7 @@
           id: this.id + member.id
         });
         out = view.render();
-        return out.el;
+        return $(out.el);
       };
 
       GroupListView.prototype.unrenderMember = function(member) {
