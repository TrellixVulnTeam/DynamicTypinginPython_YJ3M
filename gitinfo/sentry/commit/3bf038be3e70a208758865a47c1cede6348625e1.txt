commit 3bf038be3e70a208758865a47c1cede6348625e1
Author: David Cramer <dcramer@gmail.com>
Date:   Tue Oct 16 20:50:09 2012 -0700

    Correct datepicker

diff --git a/src/datepicker.less b/src/datepicker.less
index 3a63421200..5ed1f9f5cc 100644
--- a/src/datepicker.less
+++ b/src/datepicker.less
@@ -1,113 +1,274 @@
-// DATE PICKER
-// -----------
+/*!
+ * Datepicker for Bootstrap
+ *
+ * Copyright 2012 Stefan Petre
+ * Improvements by Andrew Rowls
+ * Licensed under the Apache License v2.0
+ * http://www.apache.org/licenses/LICENSE-2.0
+ *
+ */
 .datepicker {
-    background-color: @white;
-    border-color: #999;
-    border-color: rgba(0, 0, 0, 0.2);
-    border-style: solid;
-    border-width: 1px;
-    .border-radius(4px);
-    .box-shadow(0 2px 4px rgba(0,0,0,.2));
-    .background-clip(padding-box);
-    display: none; // None by default, shown in javascript.
-    position: absolute;
-    z-index: 900;
-    margin-left: 0;
-    margin-right: 0;
-    margin-bottom: 18px;
-    padding-bottom: 4px;
+  top: 0;
+  left: 0;
+  padding: 4px;
+  margin-top: 1px;
+  -webkit-border-radius: 4px;
+  -moz-border-radius: 4px;
+  border-radius: 4px;
+  /*.dow {
+        border-top: 1px solid #ddd !important;
+    }*/
 
-    width: 218px;
-
-    .nav {
-        font-weight: bold;
-        width: 100%;
-        padding: 4px 0;
-        background-color: #f5f5f5;
-        color: @gray;
-        border-bottom: 1px solid #ddd;
-        .box-shadow(inset 0 1px 0 @white);
-        .clearfix();
-
-        span {
-            display: block;
-            float: left;
-            text-align: center;
-            height: 28px;
-            line-height: 28px;
-            position: relative;
-        }
-        .bg {
-            width: 100%;
-            background-color: #fdf5d9;
-            height: 28px;
-            position: absolute;
-            top: 0;
-            left: 0;
-            .border-radius(4px);
-        }
-        .fg {
-            width: 100%;
-            position: absolute;
-            top: 0;
-            left: 0;
-        }
-    }
-    .button {
-        cursor: pointer;
-        padding: 0 4px;
-        .border-radius(4px);
-
-        &:hover {
-            background-color: @gray;
-            color: @white;
-        }
-    }
-    .months {
-        float: left;
-        margin-left: 4px;
-        .name {
-            width: 72px;
-            padding: 0;
-        }
-    }
-    .years {
-        float: right;
-        margin-right: 4px;
-        .name {
-            width: 36px;
-            padding: 0;
-        }
-    }
-    .dow, .days div {
-        float: left;
-        width: 30px;
-        line-height: 25px;
-        text-align: center;
-    }
-    .dow {
-        font-weight: bold;
-        color: @gray;
-    }
-    .calendar {
-        padding: 4px;
-    }
-    .days div {
-        cursor: pointer;
-        .border-radius(4px);
-        &:hover {
-            background-color: @blueDark;
-            color: @white;
-        }
-    }
-    .overlap {
-        color: @grayLight;
-    }
-    .today {
-        background-color: #fee9cc;
-    }
-    .selected {
-        background-color: @grayLight;
-        color: @white;
-    }
 }
+.datepicker:before {
+  content: '';
+  display: inline-block;
+  border-left: 7px solid transparent;
+  border-right: 7px solid transparent;
+  border-bottom: 7px solid #ccc;
+  border-bottom-color: rgba(0, 0, 0, 0.2);
+  position: absolute;
+  top: -7px;
+  left: 6px;
+}
+.datepicker:after {
+  content: '';
+  display: inline-block;
+  border-left: 6px solid transparent;
+  border-right: 6px solid transparent;
+  border-bottom: 6px solid #ffffff;
+  position: absolute;
+  top: -6px;
+  left: 7px;
+}
+.datepicker > div {
+  display: none;
+}
+.datepicker.days div.datepicker-days {
+  display: block;
+}
+.datepicker.months div.datepicker-months {
+  display: block;
+}
+.datepicker.years div.datepicker-years {
+  display: block;
+}
+.datepicker table {
+  margin: 0;
+}
+.datepicker td,
+.datepicker th {
+  text-align: center;
+  width: 20px;
+  height: 20px;
+  -webkit-border-radius: 4px;
+  -moz-border-radius: 4px;
+  border-radius: 4px;
+}
+.datepicker td.day:hover {
+  background: #eeeeee;
+  cursor: pointer;
+}
+.datepicker td.old,
+.datepicker td.new {
+  color: #999999;
+}
+.datepicker td.disabled,
+.datepicker td.disabled:hover {
+  background: none;
+  color: #999999;
+  cursor: default;
+}
+.datepicker td.today,
+.datepicker td.today:hover,
+.datepicker td.today.disabled,
+.datepicker td.today.disabled:hover {
+  background-color: #fde19a;
+  background-image: -moz-linear-gradient(top, #fdd49a, #fdf59a);
+  background-image: -ms-linear-gradient(top, #fdd49a, #fdf59a);
+  background-image: -webkit-gradient(linear, 0 0, 0 100%, from(#fdd49a), to(#fdf59a));
+  background-image: -webkit-linear-gradient(top, #fdd49a, #fdf59a);
+  background-image: -o-linear-gradient(top, #fdd49a, #fdf59a);
+  background-image: linear-gradient(top, #fdd49a, #fdf59a);
+  background-repeat: repeat-x;
+  filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#fdd49a', endColorstr='#fdf59a', GradientType=0);
+  border-color: #fdf59a #fdf59a #fbed50;
+  border-color: rgba(0, 0, 0, 0.1) rgba(0, 0, 0, 0.1) rgba(0, 0, 0, 0.25);
+  filter: progid:dximagetransform.microsoft.gradient(enabled=false);
+}
+.datepicker td.today:hover,
+.datepicker td.today:hover:hover,
+.datepicker td.today.disabled:hover,
+.datepicker td.today.disabled:hover:hover,
+.datepicker td.today:active,
+.datepicker td.today:hover:active,
+.datepicker td.today.disabled:active,
+.datepicker td.today.disabled:hover:active,
+.datepicker td.today.active,
+.datepicker td.today:hover.active,
+.datepicker td.today.disabled.active,
+.datepicker td.today.disabled:hover.active,
+.datepicker td.today.disabled,
+.datepicker td.today:hover.disabled,
+.datepicker td.today.disabled.disabled,
+.datepicker td.today.disabled:hover.disabled,
+.datepicker td.today[disabled],
+.datepicker td.today:hover[disabled],
+.datepicker td.today.disabled[disabled],
+.datepicker td.today.disabled:hover[disabled] {
+  background-color: #fdf59a;
+}
+.datepicker td.today:active,
+.datepicker td.today:hover:active,
+.datepicker td.today.disabled:active,
+.datepicker td.today.disabled:hover:active,
+.datepicker td.today.active,
+.datepicker td.today:hover.active,
+.datepicker td.today.disabled.active,
+.datepicker td.today.disabled:hover.active {
+  background-color: #fbf069 \9;
+}
+.datepicker td.active,
+.datepicker td.active:hover,
+.datepicker td.active.disabled,
+.datepicker td.active.disabled:hover {
+  background-color: #006dcc;
+  background-image: -moz-linear-gradient(top, #0088cc, #0044cc);
+  background-image: -ms-linear-gradient(top, #0088cc, #0044cc);
+  background-image: -webkit-gradient(linear, 0 0, 0 100%, from(#0088cc), to(#0044cc));
+  background-image: -webkit-linear-gradient(top, #0088cc, #0044cc);
+  background-image: -o-linear-gradient(top, #0088cc, #0044cc);
+  background-image: linear-gradient(top, #0088cc, #0044cc);
+  background-repeat: repeat-x;
+  filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#0088cc', endColorstr='#0044cc', GradientType=0);
+  border-color: #0044cc #0044cc #002a80;
+  border-color: rgba(0, 0, 0, 0.1) rgba(0, 0, 0, 0.1) rgba(0, 0, 0, 0.25);
+  filter: progid:dximagetransform.microsoft.gradient(enabled=false);
+  color: #fff;
+  text-shadow: 0 -1px 0 rgba(0, 0, 0, 0.25);
+}
+.datepicker td.active:hover,
+.datepicker td.active:hover:hover,
+.datepicker td.active.disabled:hover,
+.datepicker td.active.disabled:hover:hover,
+.datepicker td.active:active,
+.datepicker td.active:hover:active,
+.datepicker td.active.disabled:active,
+.datepicker td.active.disabled:hover:active,
+.datepicker td.active.active,
+.datepicker td.active:hover.active,
+.datepicker td.active.disabled.active,
+.datepicker td.active.disabled:hover.active,
+.datepicker td.active.disabled,
+.datepicker td.active:hover.disabled,
+.datepicker td.active.disabled.disabled,
+.datepicker td.active.disabled:hover.disabled,
+.datepicker td.active[disabled],
+.datepicker td.active:hover[disabled],
+.datepicker td.active.disabled[disabled],
+.datepicker td.active.disabled:hover[disabled] {
+  background-color: #0044cc;
+}
+.datepicker td.active:active,
+.datepicker td.active:hover:active,
+.datepicker td.active.disabled:active,
+.datepicker td.active.disabled:hover:active,
+.datepicker td.active.active,
+.datepicker td.active:hover.active,
+.datepicker td.active.disabled.active,
+.datepicker td.active.disabled:hover.active {
+  background-color: #003399 \9;
+}
+.datepicker td span {
+  display: block;
+  width: 23%;
+  height: 54px;
+  line-height: 54px;
+  float: left;
+  margin: 1%;
+  cursor: pointer;
+  -webkit-border-radius: 4px;
+  -moz-border-radius: 4px;
+  border-radius: 4px;
+}
+.datepicker td span:hover {
+  background: #eeeeee;
+}
+.datepicker td span.disabled,
+.datepicker td span.disabled:hover {
+  background: none;
+  color: #999999;
+  cursor: default;
+}
+.datepicker td span.active,
+.datepicker td span.active:hover,
+.datepicker td span.active.disabled,
+.datepicker td span.active.disabled:hover {
+  background-color: #006dcc;
+  background-image: -moz-linear-gradient(top, #0088cc, #0044cc);
+  background-image: -ms-linear-gradient(top, #0088cc, #0044cc);
+  background-image: -webkit-gradient(linear, 0 0, 0 100%, from(#0088cc), to(#0044cc));
+  background-image: -webkit-linear-gradient(top, #0088cc, #0044cc);
+  background-image: -o-linear-gradient(top, #0088cc, #0044cc);
+  background-image: linear-gradient(top, #0088cc, #0044cc);
+  background-repeat: repeat-x;
+  filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#0088cc', endColorstr='#0044cc', GradientType=0);
+  border-color: #0044cc #0044cc #002a80;
+  border-color: rgba(0, 0, 0, 0.1) rgba(0, 0, 0, 0.1) rgba(0, 0, 0, 0.25);
+  filter: progid:dximagetransform.microsoft.gradient(enabled=false);
+  color: #fff;
+  text-shadow: 0 -1px 0 rgba(0, 0, 0, 0.25);
+}
+.datepicker td span.active:hover,
+.datepicker td span.active:hover:hover,
+.datepicker td span.active.disabled:hover,
+.datepicker td span.active.disabled:hover:hover,
+.datepicker td span.active:active,
+.datepicker td span.active:hover:active,
+.datepicker td span.active.disabled:active,
+.datepicker td span.active.disabled:hover:active,
+.datepicker td span.active.active,
+.datepicker td span.active:hover.active,
+.datepicker td span.active.disabled.active,
+.datepicker td span.active.disabled:hover.active,
+.datepicker td span.active.disabled,
+.datepicker td span.active:hover.disabled,
+.datepicker td span.active.disabled.disabled,
+.datepicker td span.active.disabled:hover.disabled,
+.datepicker td span.active[disabled],
+.datepicker td span.active:hover[disabled],
+.datepicker td span.active.disabled[disabled],
+.datepicker td span.active.disabled:hover[disabled] {
+  background-color: #0044cc;
+}
+.datepicker td span.active:active,
+.datepicker td span.active:hover:active,
+.datepicker td span.active.disabled:active,
+.datepicker td span.active.disabled:hover:active,
+.datepicker td span.active.active,
+.datepicker td span.active:hover.active,
+.datepicker td span.active.disabled.active,
+.datepicker td span.active.disabled:hover.active {
+  background-color: #003399 \9;
+}
+.datepicker td span.old {
+  color: #999999;
+}
+.datepicker th.switch {
+  width: 145px;
+}
+.datepicker thead tr:first-child th,
+.datepicker tfoot tr:first-child th {
+  cursor: pointer;
+}
+.datepicker thead tr:first-child th:hover,
+.datepicker tfoot tr:first-child th:hover {
+  background: #eeeeee;
+}
+.input-append.date .add-on i,
+.input-prepend.date .add-on i {
+  display: block;
+  cursor: pointer;
+  width: 16px;
+  height: 16px;
+}
\ No newline at end of file
diff --git a/src/sentry/static/sentry/scripts/bootstrap-datepicker.js b/src/sentry/static/sentry/scripts/bootstrap-datepicker.js
index 221e56ab68..061d96a3ba 100755
--- a/src/sentry/static/sentry/scripts/bootstrap-datepicker.js
+++ b/src/sentry/static/sentry/scripts/bootstrap-datepicker.js
@@ -1,8 +1,9 @@
 /* =========================================================
- * bootstrap-datepicker.js 
+ * bootstrap-datepicker.js
  * http://www.eyecon.ro/bootstrap-datepicker
  * =========================================================
  * Copyright 2012 Stefan Petre
+ * Improvements by Andrew Rowls
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
@@ -16,95 +17,130 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  * ========================================================= */
- 
+
 !function( $ ) {
-  
+
+  function UTCDate(){
+    return new Date(Date.UTC.apply(Date, arguments));
+  }
+  function UTCToday(){
+    var today = new Date();
+    return UTCDate(today.getUTCFullYear(), today.getUTCMonth(), today.getUTCDate());
+  }
+
   // Picker object
-  
-  var Datepicker = function(element, options){
+
+  var Datepicker = function(element, options) {
+    var that = this;
+
     this.element = $(element);
+    this.language = options.language||this.element.data('date-language')||"en";
+    this.language = this.language in dates ? this.language : "en";
     this.format = DPGlobal.parseFormat(options.format||this.element.data('date-format')||'mm/dd/yyyy');
     this.picker = $(DPGlobal.template)
               .appendTo('body')
               .on({
-                click: $.proxy(this.click, this),
-                mousedown: $.proxy(this.mousedown, this)
+                click: $.proxy(this.click, this)
               });
     this.isInput = this.element.is('input');
     this.component = this.element.is('.date') ? this.element.find('.add-on') : false;
-    
+    this.hasInput = this.component && this.element.find('input').length;
+    if(this.component && this.component.length === 0)
+      this.component = false;
+
     if (this.isInput) {
       this.element.on({
         focus: $.proxy(this.show, this),
-        blur: $.proxy(this.hide, this),
-        keyup: $.proxy(this.update, this)
+        keyup: $.proxy(this.update, this),
+        keydown: $.proxy(this.keydown, this)
       });
     } else {
-      if (this.component){
+      if (this.component && this.hasInput){
+        // For components that are not readonly, allow keyboard nav
+        this.element.find('input').on({
+          focus: $.proxy(this.show, this),
+          keyup: $.proxy(this.update, this),
+          keydown: $.proxy(this.keydown, this)
+        });
+
         this.component.on('click', $.proxy(this.show, this));
       } else {
         this.element.on('click', $.proxy(this.show, this));
       }
     }
-    this.minViewMode = options.minViewMode||this.element.data('date-minviewmode')||0;
-    if (typeof this.minViewMode === 'string') {
-      switch (this.minViewMode) {
-        case 'months':
-          this.minViewMode = 1;
-          break;
-        case 'years':
-          this.minViewMode = 2;
-          break;
-        default:
-          this.minViewMode = 0;
-          break;
+
+    $(document).on('mousedown', function (e) {
+      // Clicked outside the datepicker, hide it
+      if ($(e.target).closest('.datepicker').length == 0) {
+        that.hide();
       }
+    });
+
+    this.autoclose = false;
+    if ('autoclose' in options) {
+      this.autoclose = options.autoclose;
+    } else if ('dateAutoclose' in this.element.data()) {
+      this.autoclose = this.element.data('date-autoclose');
     }
-    this.viewMode = options.viewMode||this.element.data('date-viewmode')||0;
-    if (typeof this.viewMode === 'string') {
-      switch (this.viewMode) {
-        case 'months':
-          this.viewMode = 1;
-          break;
-        case 'years':
-          this.viewMode = 2;
-          break;
-        default:
-          this.viewMode = 0;
-          break;
-      }
+
+    this.keyboardNavigation = true;
+    if ('keyboardNavigation' in options) {
+      this.keyboardNavigation = options.keyboardNavigation;
+    } else if ('dateKeyboardNavigation' in this.element.data()) {
+      this.keyboardNavigation = this.element.data('date-keyboard-navigation');
+    }
+
+    switch(options.startView || this.element.data('date-start-view')){
+      case 2:
+      case 'decade':
+        this.viewMode = this.startViewMode = 2;
+        break;
+      case 1:
+      case 'year':
+        this.viewMode = this.startViewMode = 1;
+        break;
+      case 0:
+      case 'month':
+      default:
+        this.viewMode = this.startViewMode = 0;
+        break;
     }
-    this.startViewMode = this.viewMode;
-    this.weekStart = options.weekStart||this.element.data('date-weekstart')||0;
-    this.weekEnd = this.weekStart === 0 ? 6 : this.weekStart - 1;
+
+    this.todayBtn = (options.todayBtn||this.element.data('date-today-btn')||false);
+    this.todayHighlight = (options.todayHighlight||this.element.data('date-today-highlight')||false);
+
+    this.weekStart = ((options.weekStart||this.element.data('date-weekstart')||dates[this.language].weekStart||0) % 7);
+    this.weekEnd = ((this.weekStart + 6) % 7);
+    this.startDate = -Infinity;
+    this.endDate = Infinity;
+    this.setStartDate(options.startDate||this.element.data('date-startdate'));
+    this.setEndDate(options.endDate||this.element.data('date-enddate'));
     this.fillDow();
     this.fillMonths();
     this.update();
     this.showMode();
   };
-  
+
   Datepicker.prototype = {
     constructor: Datepicker,
-    
+
     show: function(e) {
       this.picker.show();
       this.height = this.component ? this.component.outerHeight() : this.element.outerHeight();
+      this.update();
       this.place();
       $(window).on('resize', $.proxy(this.place, this));
       if (e ) {
         e.stopPropagation();
         e.preventDefault();
       }
-      if (!this.isInput) {
-        $(document).on('mousedown', $.proxy(this.hide, this));
-      }
       this.element.trigger({
         type: 'show',
         date: this.date
       });
     },
-    
-    hide: function(){
+
+    hide: function(e){
       this.picker.hide();
       $(window).off('resize', this.place);
       this.viewMode = this.startViewMode;
@@ -112,119 +148,184 @@
       if (!this.isInput) {
         $(document).off('mousedown', this.hide);
       }
-      this.set();
+      if (e && e.currentTarget.value)
+        this.setValue();
       this.element.trigger({
         type: 'hide',
         date: this.date
       });
     },
-    
-    set: function() {
-      var formated = DPGlobal.formatDate(this.date, this.format);
+
+    getDate: function() {
+      var d = this.getUTCDate();
+      return new Date(d.getTime() + (d.getTimezoneOffset()*60000))
+    },
+
+    getUTCDate: function() {
+      return this.date;
+    },
+
+    setDate: function(d) {
+      this.setUTCDate(new Date(d.getTime() - (d.getTimezoneOffset()*60000)));
+    },
+
+    setUTCDate: function(d) {
+      this.date = d;
+      this.setValue();
+    },
+
+    setValue: function() {
+      var formatted = DPGlobal.formatDate(this.date, this.format, this.language);
       if (!this.isInput) {
         if (this.component){
-          this.element.find('input').prop('value', formated);
+          this.element.find('input').prop('value', formatted);
         }
-        this.element.data('date', formated);
+        this.element.data('date', formatted);
       } else {
-        this.element.prop('value', formated);
+        this.element.prop('value', formatted);
       }
     },
-    
-    setValue: function(newDate) {
-      if (typeof newDate === 'string') {
-        this.date = DPGlobal.parseDate(newDate, this.format);
-      } else {
-        this.date = new Date(newDate);
+
+    setStartDate: function(startDate){
+      this.startDate = startDate||-Infinity;
+      if (this.startDate !== -Infinity) {
+        this.startDate = DPGlobal.parseDate(this.startDate, this.format, this.language);
       }
-      this.set();
-      this.viewDate = new Date(this.date.getFullYear(), this.date.getMonth(), 1, 0, 0, 0, 0);
-      this.fill();
+      this.update();
+      this.updateNavArrows();
     },
-    
+
+    setEndDate: function(endDate){
+      this.endDate = endDate||Infinity;
+      if (this.endDate !== Infinity) {
+        this.endDate = DPGlobal.parseDate(this.endDate, this.format, this.language);
+      }
+      this.update();
+      this.updateNavArrows();
+    },
+
     place: function(){
+      var zIndex = parseInt(this.element.parents().filter(function() {
+              return $(this).css('z-index') != 'auto';
+            }).first().css('z-index'))+10;
       var offset = this.component ? this.component.offset() : this.element.offset();
       this.picker.css({
         top: offset.top + this.height,
-        left: offset.left
+        left: offset.left,
+        zIndex: zIndex
       });
     },
-    
-    update: function(newDate){
+
+    update: function(){
       this.date = DPGlobal.parseDate(
-        typeof newDate === 'string' ? newDate : (this.isInput ? this.element.prop('value') : this.element.data('date')),
-        this.format
+        this.isInput ? this.element.prop('value') : this.element.data('date') || this.element.find('input').prop('value'),
+        this.format, this.language
       );
-      this.viewDate = new Date(this.date.getFullYear(), this.date.getMonth(), 1, 0, 0, 0, 0);
+      if (this.date < this.startDate) {
+        this.viewDate = new Date(this.startDate);
+      } else if (this.date > this.endDate) {
+        this.viewDate = new Date(this.endDate);
+      } else {
+        this.viewDate = new Date(this.date);
+      }
       this.fill();
     },
-    
+
     fillDow: function(){
       var dowCnt = this.weekStart;
       var html = '<tr>';
       while (dowCnt < this.weekStart + 7) {
-        html += '<th class="dow">'+DPGlobal.dates.daysMin[(dowCnt++)%7]+'</th>';
+        html += '<th class="dow">'+dates[this.language].daysMin[(dowCnt++)%7]+'</th>';
       }
       html += '</tr>';
       this.picker.find('.datepicker-days thead').append(html);
     },
-    
+
     fillMonths: function(){
       var html = '';
       var i = 0
       while (i < 12) {
-        html += '<span class="month">'+DPGlobal.dates.monthsShort[i++]+'</span>';
+        html += '<span class="month">'+dates[this.language].monthsShort[i++]+'</span>';
       }
-      this.picker.find('.datepicker-months td').append(html);
+      this.picker.find('.datepicker-months td').html(html);
     },
-    
+
     fill: function() {
       var d = new Date(this.viewDate),
-        year = d.getFullYear(),
-        month = d.getMonth(),
-        currentDate = this.date.valueOf();
-      this.picker.find('.datepicker-days th:eq(1)')
-            .text(DPGlobal.dates.months[month]+' '+year);
-      var prevMonth = new Date(year, month-1, 28,0,0,0,0),
-        day = DPGlobal.getDaysInMonth(prevMonth.getFullYear(), prevMonth.getMonth());
-      prevMonth.setDate(day);
-      prevMonth.setDate(day - (prevMonth.getDay() - this.weekStart + 7)%7);
+        year = d.getUTCFullYear(),
+        month = d.getUTCMonth(),
+        startYear = this.startDate !== -Infinity ? this.startDate.getUTCFullYear() : -Infinity,
+        startMonth = this.startDate !== -Infinity ? this.startDate.getUTCMonth() : -Infinity,
+        endYear = this.endDate !== Infinity ? this.endDate.getUTCFullYear() : Infinity,
+        endMonth = this.endDate !== Infinity ? this.endDate.getUTCMonth() : Infinity,
+        currentDate = this.date.valueOf(),
+        today = new Date();
+      this.picker.find('.datepicker-days thead th:eq(1)')
+            .text(dates[this.language].months[month]+' '+year);
+      this.picker.find('tfoot th.today')
+            .text(dates[this.language].today)
+            .toggle(this.todayBtn);
+      this.updateNavArrows();
+      this.fillMonths();
+      var prevMonth = UTCDate(year, month-1, 28,0,0,0,0),
+        day = DPGlobal.getDaysInMonth(prevMonth.getUTCFullYear(), prevMonth.getUTCMonth());
+      prevMonth.setUTCDate(day);
+      prevMonth.setUTCDate(day - (prevMonth.getUTCDay() - this.weekStart + 7)%7);
       var nextMonth = new Date(prevMonth);
-      nextMonth.setDate(nextMonth.getDate() + 42);
+      nextMonth.setUTCDate(nextMonth.getUTCDate() + 42);
       nextMonth = nextMonth.valueOf();
-      html = [];
+      var html = [];
       var clsName;
       while(prevMonth.valueOf() < nextMonth) {
-        if (prevMonth.getDay() === this.weekStart) {
+        if (prevMonth.getUTCDay() == this.weekStart) {
           html.push('<tr>');
         }
         clsName = '';
-        if (prevMonth.getMonth() < month) {
+        if (prevMonth.getUTCFullYear() < year || (prevMonth.getUTCFullYear() == year && prevMonth.getUTCMonth() < month)) {
           clsName += ' old';
-        } else if (prevMonth.getMonth() > month) {
+        } else if (prevMonth.getUTCFullYear() > year || (prevMonth.getUTCFullYear() == year && prevMonth.getUTCMonth() > month)) {
           clsName += ' new';
         }
-        if (prevMonth.valueOf() === currentDate) {
+        // Compare internal UTC date with local today, not UTC today
+        if (this.todayHighlight &&
+          prevMonth.getUTCFullYear() == today.getFullYear() &&
+          prevMonth.getUTCMonth() == today.getMonth() &&
+          prevMonth.getUTCDate() == today.getDate()) {
+          clsName += ' today';
+        }
+        if (prevMonth.valueOf() == currentDate) {
           clsName += ' active';
         }
-        html.push('<td class="day'+clsName+'">'+prevMonth.getDate() + '</td>');
-        if (prevMonth.getDay() === this.weekEnd) {
+        if (prevMonth.valueOf() < this.startDate || prevMonth.valueOf() > this.endDate) {
+          clsName += ' disabled';
+        }
+        html.push('<td class="day'+clsName+'">'+prevMonth.getUTCDate() + '</td>');
+        if (prevMonth.getUTCDay() == this.weekEnd) {
           html.push('</tr>');
         }
-        prevMonth.setDate(prevMonth.getDate()+1);
+        prevMonth.setUTCDate(prevMonth.getUTCDate()+1);
       }
       this.picker.find('.datepicker-days tbody').empty().append(html.join(''));
-      var currentYear = this.date.getFullYear();
-      
+      var currentYear = this.date.getUTCFullYear();
+
       var months = this.picker.find('.datepicker-months')
             .find('th:eq(1)')
               .text(year)
               .end()
             .find('span').removeClass('active');
-      if (currentYear === year) {
-        months.eq(this.date.getMonth()).addClass('active');
+      if (currentYear == year) {
+        months.eq(this.date.getUTCMonth()).addClass('active');
+      }
+      if (year < startYear || year > endYear) {
+        months.addClass('disabled');
+      }
+      if (year == startYear) {
+        months.slice(0, startMonth).addClass('disabled');
       }
-      
+      if (year == endYear) {
+        months.slice(endMonth+1).addClass('disabled');
+      }
+
       html = '';
       year = parseInt(year/10, 10) * 10;
       var yearCont = this.picker.find('.datepicker-years')
@@ -234,17 +335,50 @@
                 .find('td');
       year -= 1;
       for (var i = -1; i < 11; i++) {
-        html += '<span class="year'+(i === -1 || i === 10 ? ' old' : '')+(currentYear === year ? ' active' : '')+'">'+year+'</span>';
+        html += '<span class="year'+(i == -1 || i == 10 ? ' old' : '')+(currentYear == year ? ' active' : '')+(year < startYear || year > endYear ? ' disabled' : '')+'">'+year+'</span>';
         year += 1;
       }
       yearCont.html(html);
     },
-    
+
+    updateNavArrows: function() {
+      var d = new Date(this.viewDate),
+        year = d.getUTCFullYear(),
+        month = d.getUTCMonth();
+      switch (this.viewMode) {
+        case 0:
+          if (this.startDate !== -Infinity && year <= this.startDate.getUTCFullYear() && month <= this.startDate.getUTCMonth()) {
+            this.picker.find('.prev').css({visibility: 'hidden'});
+          } else {
+            this.picker.find('.prev').css({visibility: 'visible'});
+          }
+          if (this.endDate !== Infinity && year >= this.endDate.getUTCFullYear() && month >= this.endDate.getUTCMonth()) {
+            this.picker.find('.next').css({visibility: 'hidden'});
+          } else {
+            this.picker.find('.next').css({visibility: 'visible'});
+          }
+          break;
+        case 1:
+        case 2:
+          if (this.startDate !== -Infinity && year <= this.startDate.getUTCFullYear()) {
+            this.picker.find('.prev').css({visibility: 'hidden'});
+          } else {
+            this.picker.find('.prev').css({visibility: 'visible'});
+          }
+          if (this.endDate !== Infinity && year >= this.endDate.getUTCFullYear()) {
+            this.picker.find('.next').css({visibility: 'hidden'});
+          } else {
+            this.picker.find('.next').css({visibility: 'visible'});
+          }
+          break;
+      }
+    },
+
     click: function(e) {
       e.stopPropagation();
       e.preventDefault();
       var target = $(e.target).closest('span, td, th');
-      if (target.length === 1) {
+      if (target.length == 1) {
         switch(target[0].nodeName.toLowerCase()) {
           case 'th':
             switch(target[0].className) {
@@ -253,90 +387,281 @@
                 break;
               case 'prev':
               case 'next':
-                this.viewDate['set'+DPGlobal.modes[this.viewMode].navFnc].call(
-                  this.viewDate,
-                  this.viewDate['get'+DPGlobal.modes[this.viewMode].navFnc].call(this.viewDate) + 
-                  DPGlobal.modes[this.viewMode].navStep * (target[0].className === 'prev' ? -1 : 1)
-                );
+                var dir = DPGlobal.modes[this.viewMode].navStep * (target[0].className == 'prev' ? -1 : 1);
+                switch(this.viewMode){
+                  case 0:
+                    this.viewDate = this.moveMonth(this.viewDate, dir);
+                    break;
+                  case 1:
+                  case 2:
+                    this.viewDate = this.moveYear(this.viewDate, dir);
+                    break;
+                }
                 this.fill();
-                this.set();
+                break;
+              case 'today':
+                var date = new Date();
+                date.setUTCHours(0);
+                date.setUTCMinutes(0);
+                date.setUTCSeconds(0);
+                date.setUTCMilliseconds(0);
+
+                this.showMode(-2);
+                var which = this.todayBtn == 'linked' ? null : 'view';
+                this._setDate(date, which);
                 break;
             }
             break;
           case 'span':
-            if (target.is('.month')) {
-              var month = target.parent().find('span').index(target);
-              this.viewDate.setMonth(month);
-            } else {
-              var year = parseInt(target.text(), 10)||0;
-              this.viewDate.setFullYear(year);
-            }
-            if (this.viewMode !== 0) {
-              this.date = new Date(this.viewDate);
-              this.element.trigger({
-                type: 'changeDate',
-                date: this.date,
-                viewMode: DPGlobal.modes[this.viewMode].clsName
-              });
+            if (!target.is('.disabled')) {
+              this.viewDate.setUTCDate(1);
+              if (target.is('.month')) {
+                var month = target.parent().find('span').index(target);
+                this.viewDate.setUTCMonth(month);
+                this.element.trigger({
+                  type: 'changeMonth',
+                  date: this.viewDate
+                });
+              } else {
+                var year = parseInt(target.text(), 10)||0;
+                this.viewDate.setUTCFullYear(year);
+                this.element.trigger({
+                  type: 'changeYear',
+                  date: this.viewDate
+                });
+              }
+              this.showMode(-1);
+              this.fill();
             }
-            this.showMode(-1);
-            this.fill();
-            this.set();
             break;
           case 'td':
-            if (target.is('.day')){
+            if (target.is('.day') && !target.is('.disabled')){
               var day = parseInt(target.text(), 10)||1;
-              var month = this.viewDate.getMonth();
+              var year = this.viewDate.getUTCFullYear(),
+                month = this.viewDate.getUTCMonth();
               if (target.is('.old')) {
-                month -= 1;
+                if (month == 0) {
+                  month = 11;
+                  year -= 1;
+                } else {
+                  month -= 1;
+                }
               } else if (target.is('.new')) {
-                month += 1;
+                if (month == 11) {
+                  month = 0;
+                  year += 1;
+                } else {
+                  month += 1;
+                }
               }
-              var year = this.viewDate.getFullYear();
-              this.date = new Date(year, month, day,0,0,0,0);
-              this.viewDate = new Date(year, month, Math.min(28, day),0,0,0,0);
-              this.fill();
-              this.set();
-              this.element.trigger({
-                type: 'changeDate',
-                date: this.date,
-                viewMode: DPGlobal.modes[this.viewMode].clsName
-              });
+              this._setDate(UTCDate(year, month, day,0,0,0,0));
             }
             break;
         }
       }
     },
-    
-    mousedown: function(e){
-      e.stopPropagation();
-      e.preventDefault();
+
+    _setDate: function(date, which){
+      if (!which || which == 'date')
+        this.date = date;
+      if (!which || which  == 'view')
+        this.viewDate = date;
+      this.fill();
+      this.setValue();
+      this.element.trigger({
+        type: 'changeDate',
+        date: this.date
+      });
+      var element;
+      if (this.isInput) {
+        element = this.element;
+      } else if (this.component){
+        element = this.element.find('input');
+      }
+      if (element) {
+        element.change();
+        if (this.autoclose) {
+                  this.hide();
+        }
+      }
     },
-    
+
+    moveMonth: function(date, dir){
+      if (!dir) return date;
+      var new_date = new Date(date.valueOf()),
+        day = new_date.getUTCDate(),
+        month = new_date.getUTCMonth(),
+        mag = Math.abs(dir),
+        new_month, test;
+      dir = dir > 0 ? 1 : -1;
+      if (mag == 1){
+        test = dir == -1
+          // If going back one month, make sure month is not current month
+          // (eg, Mar 31 -> Feb 31 == Feb 28, not Mar 02)
+          ? function(){ return new_date.getUTCMonth() == month; }
+          // If going forward one month, make sure month is as expected
+          // (eg, Jan 31 -> Feb 31 == Feb 28, not Mar 02)
+          : function(){ return new_date.getUTCMonth() != new_month; };
+        new_month = month + dir;
+        new_date.setUTCMonth(new_month);
+        // Dec -> Jan (12) or Jan -> Dec (-1) -- limit expected date to 0-11
+        if (new_month < 0 || new_month > 11)
+          new_month = (new_month + 12) % 12;
+      } else {
+        // For magnitudes >1, move one month at a time...
+        for (var i=0; i<mag; i++)
+          // ...which might decrease the day (eg, Jan 31 to Feb 28, etc)...
+          new_date = this.moveMonth(new_date, dir);
+        // ...then reset the day, keeping it in the new month
+        new_month = new_date.getUTCMonth();
+        new_date.setUTCDate(day);
+        test = function(){ return new_month != new_date.getUTCMonth(); };
+      }
+      // Common date-resetting loop -- if date is beyond end of month, make it
+      // end of month
+      while (test()){
+        new_date.setUTCDate(--day);
+        new_date.setUTCMonth(new_month);
+      }
+      return new_date;
+    },
+
+    moveYear: function(date, dir){
+      return this.moveMonth(date, dir*12);
+    },
+
+    dateWithinRange: function(date){
+      return date >= this.startDate && date <= this.endDate;
+    },
+
+    keydown: function(e){
+      if (this.picker.is(':not(:visible)')){
+        if (e.keyCode == 27) // allow escape to hide and re-show picker
+          this.show();
+        return;
+      }
+      var dateChanged = false,
+        dir, day, month,
+        newDate, newViewDate;
+      switch(e.keyCode){
+        case 27: // escape
+          this.hide();
+          e.preventDefault();
+          break;
+        case 37: // left
+        case 39: // right
+          if (!this.keyboardNavigation) break;
+          dir = e.keyCode == 37 ? -1 : 1;
+          if (e.ctrlKey){
+            newDate = this.moveYear(this.date, dir);
+            newViewDate = this.moveYear(this.viewDate, dir);
+          } else if (e.shiftKey){
+            newDate = this.moveMonth(this.date, dir);
+            newViewDate = this.moveMonth(this.viewDate, dir);
+          } else {
+            newDate = new Date(this.date);
+            newDate.setUTCDate(this.date.getUTCDate() + dir);
+            newViewDate = new Date(this.viewDate);
+            newViewDate.setUTCDate(this.viewDate.getUTCDate() + dir);
+          }
+          if (this.dateWithinRange(newDate)){
+            this.date = newDate;
+            this.viewDate = newViewDate;
+            this.setValue();
+            this.update();
+            e.preventDefault();
+            dateChanged = true;
+          }
+          break;
+        case 38: // up
+        case 40: // down
+          if (!this.keyboardNavigation) break;
+          dir = e.keyCode == 38 ? -1 : 1;
+          if (e.ctrlKey){
+            newDate = this.moveYear(this.date, dir);
+            newViewDate = this.moveYear(this.viewDate, dir);
+          } else if (e.shiftKey){
+            newDate = this.moveMonth(this.date, dir);
+            newViewDate = this.moveMonth(this.viewDate, dir);
+          } else {
+            newDate = new Date(this.date);
+            newDate.setUTCDate(this.date.getUTCDate() + dir * 7);
+            newViewDate = new Date(this.viewDate);
+            newViewDate.setUTCDate(this.viewDate.getUTCDate() + dir * 7);
+          }
+          if (this.dateWithinRange(newDate)){
+            this.date = newDate;
+            this.viewDate = newViewDate;
+            this.setValue();
+            this.update();
+            e.preventDefault();
+            dateChanged = true;
+          }
+          break;
+        case 13: // enter
+          this.hide();
+          e.preventDefault();
+          break;
+        case 9: // tab
+          this.hide();
+          break;
+      }
+      if (dateChanged){
+        this.element.trigger({
+          type: 'changeDate',
+          date: this.date
+        });
+        var element;
+        if (this.isInput) {
+          element = this.element;
+        } else if (this.component){
+          element = this.element.find('input');
+        }
+        if (element) {
+          element.change();
+        }
+      }
+    },
+
     showMode: function(dir) {
       if (dir) {
-        this.viewMode = Math.max(this.minViewMode, Math.min(2, this.viewMode + dir));
+        this.viewMode = Math.max(0, Math.min(2, this.viewMode + dir));
       }
       this.picker.find('>div').hide().filter('.datepicker-'+DPGlobal.modes[this.viewMode].clsName).show();
+      this.updateNavArrows();
     }
   };
-  
-  $.fn.datepicker = function ( option, val ) {
+
+  $.fn.datepicker = function ( option ) {
+    var args = Array.apply(null, arguments);
+    args.shift();
     return this.each(function () {
       var $this = $(this),
         data = $this.data('datepicker'),
-        options = typeof option === 'object' && option;
+        options = typeof option == 'object' && option;
       if (!data) {
         $this.data('datepicker', (data = new Datepicker(this, $.extend({}, $.fn.datepicker.defaults,options))));
       }
-      if (typeof option === 'string') data[option](val);
+      if (typeof option == 'string' && typeof data[option] == 'function') {
+        data[option].apply(data, args);
+      }
     });
   };
 
   $.fn.datepicker.defaults = {
   };
   $.fn.datepicker.Constructor = Datepicker;
-  
+  var dates = $.fn.datepicker.dates = {
+    en: {
+      days: ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday"],
+      daysShort: ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat", "Sun"],
+      daysMin: ["Su", "Mo", "Tu", "We", "Th", "Fr", "Sa", "Su"],
+      months: ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"],
+      monthsShort: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"],
+      today: "Today"
+    }
+  }
+
   var DPGlobal = {
     modes: [
       {
@@ -354,101 +679,158 @@
         navFnc: 'FullYear',
         navStep: 10
     }],
-    dates:{
-      days: ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday"],
-      daysShort: ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat", "Sun"],
-      daysMin: ["Su", "Mo", "Tu", "We", "Th", "Fr", "Sa", "Su"],
-      months: ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"],
-      monthsShort: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"]
-    },
     isLeapYear: function (year) {
       return (((year % 4 === 0) && (year % 100 !== 0)) || (year % 400 === 0))
     },
     getDaysInMonth: function (year, month) {
       return [31, (DPGlobal.isLeapYear(year) ? 29 : 28), 31, 30, 31, 30, 31, 31, 30, 31, 30, 31][month]
     },
+    validParts: /dd?|mm?|MM?|yy(?:yy)?/g,
+    nonpunctuation: /[^ -\/:-@\[-`{-~\t\n\r]+/g,
     parseFormat: function(format){
-      var separator = format.match(/[.\/\-\s].*?/),
-        parts = format.split(/\W+/);
-      if (!separator || !parts || parts.length === 0){
+      // IE treats \0 as a string end in inputs (truncating the value),
+      // so it's a bad format delimiter, anyway
+      var separators = format.replace(this.validParts, '\0').split('\0'),
+        parts = format.match(this.validParts);
+      if (!separators || !separators.length || !parts || parts.length == 0){
         throw new Error("Invalid date format.");
       }
-      return {separator: separator, parts: parts};
+      return {separators: separators, parts: parts};
     },
-    parseDate: function(date, format) {
-      var parts = date.split(format.separator),
-        date = new Date(),
-        val;
-      date.setHours(0);
-      date.setMinutes(0);
-      date.setSeconds(0);
-      date.setMilliseconds(0);
-      if (parts.length === format.parts.length) {
-        for (var i=0, cnt = format.parts.length; i < cnt; i++) {
-          val = parseInt(parts[i], 10)||1;
-          switch(format.parts[i]) {
-            case 'dd':
+    parseDate: function(date, format, language) {
+      if (date instanceof Date) return date;
+      if (/^[-+]\d+[dmwy]([\s,]+[-+]\d+[dmwy])*$/.test(date)) {
+        var part_re = /([-+]\d+)([dmwy])/,
+          parts = date.match(/([-+]\d+)([dmwy])/g),
+          part, dir;
+        date = new Date();
+        for (var i=0; i<parts.length; i++) {
+          part = part_re.exec(parts[i]);
+          dir = parseInt(part[1]);
+          switch(part[2]){
             case 'd':
-              date.setDate(val);
+              date.setUTCDate(date.getUTCDate() + dir);
               break;
-            case 'mm':
             case 'm':
-              date.setMonth(val - 1);
+              date = Datepicker.prototype.moveMonth.call(Datepicker.prototype, date, dir);
               break;
-            case 'yy':
-              date.setFullYear(2000 + val);
+            case 'w':
+              date.setUTCDate(date.getUTCDate() + dir * 7);
               break;
-            case 'yyyy':
-              date.setFullYear(val);
+            case 'y':
+              date = Datepicker.prototype.moveYear.call(Datepicker.prototype, date, dir);
               break;
           }
         }
+        return UTCDate(date.getUTCFullYear(), date.getUTCMonth(), date.getUTCDate(), 0, 0, 0);
+      }
+      var parts = date && date.match(this.nonpunctuation) || [],
+        date = new Date(),
+        parsed = {},
+        setters_order = ['yyyy', 'yy', 'M', 'MM', 'm', 'mm', 'd', 'dd'],
+        setters_map = {
+          yyyy: function(d,v){ return d.setUTCFullYear(v); },
+          yy: function(d,v){ return d.setUTCFullYear(2000+v); },
+          m: function(d,v){
+            v -= 1;
+            while (v<0) v += 12;
+            v %= 12;
+            d.setUTCMonth(v);
+            while (d.getUTCMonth() != v)
+              d.setUTCDate(d.getUTCDate()-1);
+            return d;
+          },
+          d: function(d,v){ return d.setUTCDate(v); }
+        },
+        val, filtered, part;
+      setters_map['M'] = setters_map['MM'] = setters_map['mm'] = setters_map['m'];
+      setters_map['dd'] = setters_map['d'];
+      date = UTCDate(date.getUTCFullYear(), date.getUTCMonth(), date.getUTCDate(), 0, 0, 0);
+      if (parts.length == format.parts.length) {
+        for (var i=0, cnt = format.parts.length; i < cnt; i++) {
+          val = parseInt(parts[i], 10);
+          part = format.parts[i];
+          if (isNaN(val)) {
+            switch(part) {
+              case 'MM':
+                filtered = $(dates[language].months).filter(function(){
+                  var m = this.slice(0, parts[i].length),
+                    p = parts[i].slice(0, m.length);
+                  return m == p;
+                });
+                val = $.inArray(filtered[0], dates[language].months) + 1;
+                break;
+              case 'M':
+                filtered = $(dates[language].monthsShort).filter(function(){
+                  var m = this.slice(0, parts[i].length),
+                    p = parts[i].slice(0, m.length);
+                  return m == p;
+                });
+                val = $.inArray(filtered[0], dates[language].monthsShort) + 1;
+                break;
+            }
+          }
+          parsed[part] = val;
+        }
+        for (var i=0, s; i<setters_order.length; i++){
+          s = setters_order[i];
+          if (s in parsed)
+            setters_map[s](date, parsed[s])
+        }
       }
       return date;
     },
-    formatDate: function(date, format){
+    formatDate: function(date, format, language){
       var val = {
-        d: date.getDate(),
-        m: date.getMonth() + 1,
-        yy: date.getFullYear().toString().substring(2),
-        yyyy: date.getFullYear()
+        d: date.getUTCDate(),
+        m: date.getUTCMonth() + 1,
+        M: dates[language].monthsShort[date.getUTCMonth()],
+        MM: dates[language].months[date.getUTCMonth()],
+        yy: date.getUTCFullYear().toString().substring(2),
+        yyyy: date.getUTCFullYear()
       };
       val.dd = (val.d < 10 ? '0' : '') + val.d;
       val.mm = (val.m < 10 ? '0' : '') + val.m;
-      var date = [];
+      var date = [],
+        seps = $.extend([], format.separators);
       for (var i=0, cnt = format.parts.length; i < cnt; i++) {
+        if (seps.length)
+          date.push(seps.shift())
         date.push(val[format.parts[i]]);
       }
-      return date.join(format.separator);
+      return date.join('');
     },
     headTemplate: '<thead>'+
               '<tr>'+
-                '<th class="prev">&lsaquo;</th>'+
+                '<th class="prev"><i class="icon-arrow-left"/></th>'+
                 '<th colspan="5" class="switch"></th>'+
-                '<th class="next">&rsaquo;</th>'+
+                '<th class="next"><i class="icon-arrow-right"/></th>'+
               '</tr>'+
             '</thead>',
-    contTemplate: '<tbody><tr><td colspan="7"></td></tr></tbody>'
+    contTemplate: '<tbody><tr><td colspan="7"></td></tr></tbody>',
+    footTemplate: '<tfoot><tr><th colspan="7" class="today"></th></tr></tfoot>'
   };
   DPGlobal.template = '<div class="datepicker dropdown-menu">'+
               '<div class="datepicker-days">'+
                 '<table class=" table-condensed">'+
                   DPGlobal.headTemplate+
                   '<tbody></tbody>'+
+                  DPGlobal.footTemplate+
                 '</table>'+
               '</div>'+
               '<div class="datepicker-months">'+
                 '<table class="table-condensed">'+
                   DPGlobal.headTemplate+
                   DPGlobal.contTemplate+
+                  DPGlobal.footTemplate+
                 '</table>'+
               '</div>'+
               '<div class="datepicker-years">'+
                 '<table class="table-condensed">'+
                   DPGlobal.headTemplate+
                   DPGlobal.contTemplate+
+                  DPGlobal.footTemplate+
                 '</table>'+
               '</div>'+
             '</div>';
-
-}( window.jQuery )
\ No newline at end of file
+}( window.jQuery );
\ No newline at end of file
diff --git a/src/sentry/static/sentry/scripts/bootstrap.js b/src/sentry/static/sentry/scripts/bootstrap.js
index 938a3e57a3..950d0c81cf 100644
--- a/src/sentry/static/sentry/scripts/bootstrap.js
+++ b/src/sentry/static/sentry/scripts/bootstrap.js
@@ -2025,10 +2025,11 @@
 
 
 }(window.jQuery);/* =========================================================
- * bootstrap-datepicker.js 
+ * bootstrap-datepicker.js
  * http://www.eyecon.ro/bootstrap-datepicker
  * =========================================================
  * Copyright 2012 Stefan Petre
+ * Improvements by Andrew Rowls
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
@@ -2042,95 +2043,130 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  * ========================================================= */
- 
+
 !function( $ ) {
-  
+
+  function UTCDate(){
+    return new Date(Date.UTC.apply(Date, arguments));
+  }
+  function UTCToday(){
+    var today = new Date();
+    return UTCDate(today.getUTCFullYear(), today.getUTCMonth(), today.getUTCDate());
+  }
+
   // Picker object
-  
-  var Datepicker = function(element, options){
+
+  var Datepicker = function(element, options) {
+    var that = this;
+
     this.element = $(element);
+    this.language = options.language||this.element.data('date-language')||"en";
+    this.language = this.language in dates ? this.language : "en";
     this.format = DPGlobal.parseFormat(options.format||this.element.data('date-format')||'mm/dd/yyyy');
     this.picker = $(DPGlobal.template)
               .appendTo('body')
               .on({
-                click: $.proxy(this.click, this),
-                mousedown: $.proxy(this.mousedown, this)
+                click: $.proxy(this.click, this)
               });
     this.isInput = this.element.is('input');
     this.component = this.element.is('.date') ? this.element.find('.add-on') : false;
-    
+    this.hasInput = this.component && this.element.find('input').length;
+    if(this.component && this.component.length === 0)
+      this.component = false;
+
     if (this.isInput) {
       this.element.on({
         focus: $.proxy(this.show, this),
-        blur: $.proxy(this.hide, this),
-        keyup: $.proxy(this.update, this)
+        keyup: $.proxy(this.update, this),
+        keydown: $.proxy(this.keydown, this)
       });
     } else {
-      if (this.component){
+      if (this.component && this.hasInput){
+        // For components that are not readonly, allow keyboard nav
+        this.element.find('input').on({
+          focus: $.proxy(this.show, this),
+          keyup: $.proxy(this.update, this),
+          keydown: $.proxy(this.keydown, this)
+        });
+
         this.component.on('click', $.proxy(this.show, this));
       } else {
         this.element.on('click', $.proxy(this.show, this));
       }
     }
-    this.minViewMode = options.minViewMode||this.element.data('date-minviewmode')||0;
-    if (typeof this.minViewMode === 'string') {
-      switch (this.minViewMode) {
-        case 'months':
-          this.minViewMode = 1;
-          break;
-        case 'years':
-          this.minViewMode = 2;
-          break;
-        default:
-          this.minViewMode = 0;
-          break;
-      }
-    }
-    this.viewMode = options.viewMode||this.element.data('date-viewmode')||0;
-    if (typeof this.viewMode === 'string') {
-      switch (this.viewMode) {
-        case 'months':
-          this.viewMode = 1;
-          break;
-        case 'years':
-          this.viewMode = 2;
-          break;
-        default:
-          this.viewMode = 0;
-          break;
+
+    $(document).on('mousedown', function (e) {
+      // Clicked outside the datepicker, hide it
+      if ($(e.target).closest('.datepicker').length == 0) {
+        that.hide();
       }
-    }
-    this.startViewMode = this.viewMode;
-    this.weekStart = options.weekStart||this.element.data('date-weekstart')||0;
-    this.weekEnd = this.weekStart === 0 ? 6 : this.weekStart - 1;
+    });
+
+    this.autoclose = false;
+    if ('autoclose' in options) {
+      this.autoclose = options.autoclose;
+    } else if ('dateAutoclose' in this.element.data()) {
+      this.autoclose = this.element.data('date-autoclose');
+    }
+
+    this.keyboardNavigation = true;
+    if ('keyboardNavigation' in options) {
+      this.keyboardNavigation = options.keyboardNavigation;
+    } else if ('dateKeyboardNavigation' in this.element.data()) {
+      this.keyboardNavigation = this.element.data('date-keyboard-navigation');
+    }
+
+    switch(options.startView || this.element.data('date-start-view')){
+      case 2:
+      case 'decade':
+        this.viewMode = this.startViewMode = 2;
+        break;
+      case 1:
+      case 'year':
+        this.viewMode = this.startViewMode = 1;
+        break;
+      case 0:
+      case 'month':
+      default:
+        this.viewMode = this.startViewMode = 0;
+        break;
+    }
+
+    this.todayBtn = (options.todayBtn||this.element.data('date-today-btn')||false);
+    this.todayHighlight = (options.todayHighlight||this.element.data('date-today-highlight')||false);
+
+    this.weekStart = ((options.weekStart||this.element.data('date-weekstart')||dates[this.language].weekStart||0) % 7);
+    this.weekEnd = ((this.weekStart + 6) % 7);
+    this.startDate = -Infinity;
+    this.endDate = Infinity;
+    this.setStartDate(options.startDate||this.element.data('date-startdate'));
+    this.setEndDate(options.endDate||this.element.data('date-enddate'));
     this.fillDow();
     this.fillMonths();
     this.update();
     this.showMode();
   };
-  
+
   Datepicker.prototype = {
     constructor: Datepicker,
-    
+
     show: function(e) {
       this.picker.show();
       this.height = this.component ? this.component.outerHeight() : this.element.outerHeight();
+      this.update();
       this.place();
       $(window).on('resize', $.proxy(this.place, this));
       if (e ) {
         e.stopPropagation();
         e.preventDefault();
       }
-      if (!this.isInput) {
-        $(document).on('mousedown', $.proxy(this.hide, this));
-      }
       this.element.trigger({
         type: 'show',
         date: this.date
       });
     },
-    
-    hide: function(){
+
+    hide: function(e){
       this.picker.hide();
       $(window).off('resize', this.place);
       this.viewMode = this.startViewMode;
@@ -2138,119 +2174,184 @@
       if (!this.isInput) {
         $(document).off('mousedown', this.hide);
       }
-      this.set();
+      if (e && e.currentTarget.value)
+        this.setValue();
       this.element.trigger({
         type: 'hide',
         date: this.date
       });
     },
-    
-    set: function() {
-      var formated = DPGlobal.formatDate(this.date, this.format);
+
+    getDate: function() {
+      var d = this.getUTCDate();
+      return new Date(d.getTime() + (d.getTimezoneOffset()*60000))
+    },
+
+    getUTCDate: function() {
+      return this.date;
+    },
+
+    setDate: function(d) {
+      this.setUTCDate(new Date(d.getTime() - (d.getTimezoneOffset()*60000)));
+    },
+
+    setUTCDate: function(d) {
+      this.date = d;
+      this.setValue();
+    },
+
+    setValue: function() {
+      var formatted = DPGlobal.formatDate(this.date, this.format, this.language);
       if (!this.isInput) {
         if (this.component){
-          this.element.find('input').prop('value', formated);
+          this.element.find('input').prop('value', formatted);
         }
-        this.element.data('date', formated);
+        this.element.data('date', formatted);
       } else {
-        this.element.prop('value', formated);
+        this.element.prop('value', formatted);
       }
     },
-    
-    setValue: function(newDate) {
-      if (typeof newDate === 'string') {
-        this.date = DPGlobal.parseDate(newDate, this.format);
-      } else {
-        this.date = new Date(newDate);
+
+    setStartDate: function(startDate){
+      this.startDate = startDate||-Infinity;
+      if (this.startDate !== -Infinity) {
+        this.startDate = DPGlobal.parseDate(this.startDate, this.format, this.language);
       }
-      this.set();
-      this.viewDate = new Date(this.date.getFullYear(), this.date.getMonth(), 1, 0, 0, 0, 0);
-      this.fill();
+      this.update();
+      this.updateNavArrows();
     },
-    
+
+    setEndDate: function(endDate){
+      this.endDate = endDate||Infinity;
+      if (this.endDate !== Infinity) {
+        this.endDate = DPGlobal.parseDate(this.endDate, this.format, this.language);
+      }
+      this.update();
+      this.updateNavArrows();
+    },
+
     place: function(){
+      var zIndex = parseInt(this.element.parents().filter(function() {
+              return $(this).css('z-index') != 'auto';
+            }).first().css('z-index'))+10;
       var offset = this.component ? this.component.offset() : this.element.offset();
       this.picker.css({
         top: offset.top + this.height,
-        left: offset.left
+        left: offset.left,
+        zIndex: zIndex
       });
     },
-    
-    update: function(newDate){
+
+    update: function(){
       this.date = DPGlobal.parseDate(
-        typeof newDate === 'string' ? newDate : (this.isInput ? this.element.prop('value') : this.element.data('date')),
-        this.format
+        this.isInput ? this.element.prop('value') : this.element.data('date') || this.element.find('input').prop('value'),
+        this.format, this.language
       );
-      this.viewDate = new Date(this.date.getFullYear(), this.date.getMonth(), 1, 0, 0, 0, 0);
+      if (this.date < this.startDate) {
+        this.viewDate = new Date(this.startDate);
+      } else if (this.date > this.endDate) {
+        this.viewDate = new Date(this.endDate);
+      } else {
+        this.viewDate = new Date(this.date);
+      }
       this.fill();
     },
-    
+
     fillDow: function(){
       var dowCnt = this.weekStart;
       var html = '<tr>';
       while (dowCnt < this.weekStart + 7) {
-        html += '<th class="dow">'+DPGlobal.dates.daysMin[(dowCnt++)%7]+'</th>';
+        html += '<th class="dow">'+dates[this.language].daysMin[(dowCnt++)%7]+'</th>';
       }
       html += '</tr>';
       this.picker.find('.datepicker-days thead').append(html);
     },
-    
+
     fillMonths: function(){
       var html = '';
       var i = 0
       while (i < 12) {
-        html += '<span class="month">'+DPGlobal.dates.monthsShort[i++]+'</span>';
+        html += '<span class="month">'+dates[this.language].monthsShort[i++]+'</span>';
       }
-      this.picker.find('.datepicker-months td').append(html);
+      this.picker.find('.datepicker-months td').html(html);
     },
-    
+
     fill: function() {
       var d = new Date(this.viewDate),
-        year = d.getFullYear(),
-        month = d.getMonth(),
-        currentDate = this.date.valueOf();
-      this.picker.find('.datepicker-days th:eq(1)')
-            .text(DPGlobal.dates.months[month]+' '+year);
-      var prevMonth = new Date(year, month-1, 28,0,0,0,0),
-        day = DPGlobal.getDaysInMonth(prevMonth.getFullYear(), prevMonth.getMonth());
-      prevMonth.setDate(day);
-      prevMonth.setDate(day - (prevMonth.getDay() - this.weekStart + 7)%7);
+        year = d.getUTCFullYear(),
+        month = d.getUTCMonth(),
+        startYear = this.startDate !== -Infinity ? this.startDate.getUTCFullYear() : -Infinity,
+        startMonth = this.startDate !== -Infinity ? this.startDate.getUTCMonth() : -Infinity,
+        endYear = this.endDate !== Infinity ? this.endDate.getUTCFullYear() : Infinity,
+        endMonth = this.endDate !== Infinity ? this.endDate.getUTCMonth() : Infinity,
+        currentDate = this.date.valueOf(),
+        today = new Date();
+      this.picker.find('.datepicker-days thead th:eq(1)')
+            .text(dates[this.language].months[month]+' '+year);
+      this.picker.find('tfoot th.today')
+            .text(dates[this.language].today)
+            .toggle(this.todayBtn);
+      this.updateNavArrows();
+      this.fillMonths();
+      var prevMonth = UTCDate(year, month-1, 28,0,0,0,0),
+        day = DPGlobal.getDaysInMonth(prevMonth.getUTCFullYear(), prevMonth.getUTCMonth());
+      prevMonth.setUTCDate(day);
+      prevMonth.setUTCDate(day - (prevMonth.getUTCDay() - this.weekStart + 7)%7);
       var nextMonth = new Date(prevMonth);
-      nextMonth.setDate(nextMonth.getDate() + 42);
+      nextMonth.setUTCDate(nextMonth.getUTCDate() + 42);
       nextMonth = nextMonth.valueOf();
-      html = [];
+      var html = [];
       var clsName;
       while(prevMonth.valueOf() < nextMonth) {
-        if (prevMonth.getDay() === this.weekStart) {
+        if (prevMonth.getUTCDay() == this.weekStart) {
           html.push('<tr>');
         }
         clsName = '';
-        if (prevMonth.getMonth() < month) {
+        if (prevMonth.getUTCFullYear() < year || (prevMonth.getUTCFullYear() == year && prevMonth.getUTCMonth() < month)) {
           clsName += ' old';
-        } else if (prevMonth.getMonth() > month) {
+        } else if (prevMonth.getUTCFullYear() > year || (prevMonth.getUTCFullYear() == year && prevMonth.getUTCMonth() > month)) {
           clsName += ' new';
         }
-        if (prevMonth.valueOf() === currentDate) {
+        // Compare internal UTC date with local today, not UTC today
+        if (this.todayHighlight &&
+          prevMonth.getUTCFullYear() == today.getFullYear() &&
+          prevMonth.getUTCMonth() == today.getMonth() &&
+          prevMonth.getUTCDate() == today.getDate()) {
+          clsName += ' today';
+        }
+        if (prevMonth.valueOf() == currentDate) {
           clsName += ' active';
         }
-        html.push('<td class="day'+clsName+'">'+prevMonth.getDate() + '</td>');
-        if (prevMonth.getDay() === this.weekEnd) {
+        if (prevMonth.valueOf() < this.startDate || prevMonth.valueOf() > this.endDate) {
+          clsName += ' disabled';
+        }
+        html.push('<td class="day'+clsName+'">'+prevMonth.getUTCDate() + '</td>');
+        if (prevMonth.getUTCDay() == this.weekEnd) {
           html.push('</tr>');
         }
-        prevMonth.setDate(prevMonth.getDate()+1);
+        prevMonth.setUTCDate(prevMonth.getUTCDate()+1);
       }
       this.picker.find('.datepicker-days tbody').empty().append(html.join(''));
-      var currentYear = this.date.getFullYear();
-      
+      var currentYear = this.date.getUTCFullYear();
+
       var months = this.picker.find('.datepicker-months')
             .find('th:eq(1)')
               .text(year)
               .end()
             .find('span').removeClass('active');
-      if (currentYear === year) {
-        months.eq(this.date.getMonth()).addClass('active');
+      if (currentYear == year) {
+        months.eq(this.date.getUTCMonth()).addClass('active');
       }
-      
+      if (year < startYear || year > endYear) {
+        months.addClass('disabled');
+      }
+      if (year == startYear) {
+        months.slice(0, startMonth).addClass('disabled');
+      }
+      if (year == endYear) {
+        months.slice(endMonth+1).addClass('disabled');
+      }
+
       html = '';
       year = parseInt(year/10, 10) * 10;
       var yearCont = this.picker.find('.datepicker-years')
@@ -2260,17 +2361,50 @@
                 .find('td');
       year -= 1;
       for (var i = -1; i < 11; i++) {
-        html += '<span class="year'+(i === -1 || i === 10 ? ' old' : '')+(currentYear === year ? ' active' : '')+'">'+year+'</span>';
+        html += '<span class="year'+(i == -1 || i == 10 ? ' old' : '')+(currentYear == year ? ' active' : '')+(year < startYear || year > endYear ? ' disabled' : '')+'">'+year+'</span>';
         year += 1;
       }
       yearCont.html(html);
     },
-    
+
+    updateNavArrows: function() {
+      var d = new Date(this.viewDate),
+        year = d.getUTCFullYear(),
+        month = d.getUTCMonth();
+      switch (this.viewMode) {
+        case 0:
+          if (this.startDate !== -Infinity && year <= this.startDate.getUTCFullYear() && month <= this.startDate.getUTCMonth()) {
+            this.picker.find('.prev').css({visibility: 'hidden'});
+          } else {
+            this.picker.find('.prev').css({visibility: 'visible'});
+          }
+          if (this.endDate !== Infinity && year >= this.endDate.getUTCFullYear() && month >= this.endDate.getUTCMonth()) {
+            this.picker.find('.next').css({visibility: 'hidden'});
+          } else {
+            this.picker.find('.next').css({visibility: 'visible'});
+          }
+          break;
+        case 1:
+        case 2:
+          if (this.startDate !== -Infinity && year <= this.startDate.getUTCFullYear()) {
+            this.picker.find('.prev').css({visibility: 'hidden'});
+          } else {
+            this.picker.find('.prev').css({visibility: 'visible'});
+          }
+          if (this.endDate !== Infinity && year >= this.endDate.getUTCFullYear()) {
+            this.picker.find('.next').css({visibility: 'hidden'});
+          } else {
+            this.picker.find('.next').css({visibility: 'visible'});
+          }
+          break;
+      }
+    },
+
     click: function(e) {
       e.stopPropagation();
       e.preventDefault();
       var target = $(e.target).closest('span, td, th');
-      if (target.length === 1) {
+      if (target.length == 1) {
         switch(target[0].nodeName.toLowerCase()) {
           case 'th':
             switch(target[0].className) {
@@ -2279,90 +2413,281 @@
                 break;
               case 'prev':
               case 'next':
-                this.viewDate['set'+DPGlobal.modes[this.viewMode].navFnc].call(
-                  this.viewDate,
-                  this.viewDate['get'+DPGlobal.modes[this.viewMode].navFnc].call(this.viewDate) + 
-                  DPGlobal.modes[this.viewMode].navStep * (target[0].className === 'prev' ? -1 : 1)
-                );
+                var dir = DPGlobal.modes[this.viewMode].navStep * (target[0].className == 'prev' ? -1 : 1);
+                switch(this.viewMode){
+                  case 0:
+                    this.viewDate = this.moveMonth(this.viewDate, dir);
+                    break;
+                  case 1:
+                  case 2:
+                    this.viewDate = this.moveYear(this.viewDate, dir);
+                    break;
+                }
                 this.fill();
-                this.set();
+                break;
+              case 'today':
+                var date = new Date();
+                date.setUTCHours(0);
+                date.setUTCMinutes(0);
+                date.setUTCSeconds(0);
+                date.setUTCMilliseconds(0);
+
+                this.showMode(-2);
+                var which = this.todayBtn == 'linked' ? null : 'view';
+                this._setDate(date, which);
                 break;
             }
             break;
           case 'span':
-            if (target.is('.month')) {
-              var month = target.parent().find('span').index(target);
-              this.viewDate.setMonth(month);
-            } else {
-              var year = parseInt(target.text(), 10)||0;
-              this.viewDate.setFullYear(year);
-            }
-            if (this.viewMode !== 0) {
-              this.date = new Date(this.viewDate);
-              this.element.trigger({
-                type: 'changeDate',
-                date: this.date,
-                viewMode: DPGlobal.modes[this.viewMode].clsName
-              });
+            if (!target.is('.disabled')) {
+              this.viewDate.setUTCDate(1);
+              if (target.is('.month')) {
+                var month = target.parent().find('span').index(target);
+                this.viewDate.setUTCMonth(month);
+                this.element.trigger({
+                  type: 'changeMonth',
+                  date: this.viewDate
+                });
+              } else {
+                var year = parseInt(target.text(), 10)||0;
+                this.viewDate.setUTCFullYear(year);
+                this.element.trigger({
+                  type: 'changeYear',
+                  date: this.viewDate
+                });
+              }
+              this.showMode(-1);
+              this.fill();
             }
-            this.showMode(-1);
-            this.fill();
-            this.set();
             break;
           case 'td':
-            if (target.is('.day')){
+            if (target.is('.day') && !target.is('.disabled')){
               var day = parseInt(target.text(), 10)||1;
-              var month = this.viewDate.getMonth();
+              var year = this.viewDate.getUTCFullYear(),
+                month = this.viewDate.getUTCMonth();
               if (target.is('.old')) {
-                month -= 1;
+                if (month == 0) {
+                  month = 11;
+                  year -= 1;
+                } else {
+                  month -= 1;
+                }
               } else if (target.is('.new')) {
-                month += 1;
+                if (month == 11) {
+                  month = 0;
+                  year += 1;
+                } else {
+                  month += 1;
+                }
               }
-              var year = this.viewDate.getFullYear();
-              this.date = new Date(year, month, day,0,0,0,0);
-              this.viewDate = new Date(year, month, Math.min(28, day),0,0,0,0);
-              this.fill();
-              this.set();
-              this.element.trigger({
-                type: 'changeDate',
-                date: this.date,
-                viewMode: DPGlobal.modes[this.viewMode].clsName
-              });
+              this._setDate(UTCDate(year, month, day,0,0,0,0));
             }
             break;
         }
       }
     },
-    
-    mousedown: function(e){
-      e.stopPropagation();
-      e.preventDefault();
+
+    _setDate: function(date, which){
+      if (!which || which == 'date')
+        this.date = date;
+      if (!which || which  == 'view')
+        this.viewDate = date;
+      this.fill();
+      this.setValue();
+      this.element.trigger({
+        type: 'changeDate',
+        date: this.date
+      });
+      var element;
+      if (this.isInput) {
+        element = this.element;
+      } else if (this.component){
+        element = this.element.find('input');
+      }
+      if (element) {
+        element.change();
+        if (this.autoclose) {
+                  this.hide();
+        }
+      }
+    },
+
+    moveMonth: function(date, dir){
+      if (!dir) return date;
+      var new_date = new Date(date.valueOf()),
+        day = new_date.getUTCDate(),
+        month = new_date.getUTCMonth(),
+        mag = Math.abs(dir),
+        new_month, test;
+      dir = dir > 0 ? 1 : -1;
+      if (mag == 1){
+        test = dir == -1
+          // If going back one month, make sure month is not current month
+          // (eg, Mar 31 -> Feb 31 == Feb 28, not Mar 02)
+          ? function(){ return new_date.getUTCMonth() == month; }
+          // If going forward one month, make sure month is as expected
+          // (eg, Jan 31 -> Feb 31 == Feb 28, not Mar 02)
+          : function(){ return new_date.getUTCMonth() != new_month; };
+        new_month = month + dir;
+        new_date.setUTCMonth(new_month);
+        // Dec -> Jan (12) or Jan -> Dec (-1) -- limit expected date to 0-11
+        if (new_month < 0 || new_month > 11)
+          new_month = (new_month + 12) % 12;
+      } else {
+        // For magnitudes >1, move one month at a time...
+        for (var i=0; i<mag; i++)
+          // ...which might decrease the day (eg, Jan 31 to Feb 28, etc)...
+          new_date = this.moveMonth(new_date, dir);
+        // ...then reset the day, keeping it in the new month
+        new_month = new_date.getUTCMonth();
+        new_date.setUTCDate(day);
+        test = function(){ return new_month != new_date.getUTCMonth(); };
+      }
+      // Common date-resetting loop -- if date is beyond end of month, make it
+      // end of month
+      while (test()){
+        new_date.setUTCDate(--day);
+        new_date.setUTCMonth(new_month);
+      }
+      return new_date;
+    },
+
+    moveYear: function(date, dir){
+      return this.moveMonth(date, dir*12);
     },
-    
+
+    dateWithinRange: function(date){
+      return date >= this.startDate && date <= this.endDate;
+    },
+
+    keydown: function(e){
+      if (this.picker.is(':not(:visible)')){
+        if (e.keyCode == 27) // allow escape to hide and re-show picker
+          this.show();
+        return;
+      }
+      var dateChanged = false,
+        dir, day, month,
+        newDate, newViewDate;
+      switch(e.keyCode){
+        case 27: // escape
+          this.hide();
+          e.preventDefault();
+          break;
+        case 37: // left
+        case 39: // right
+          if (!this.keyboardNavigation) break;
+          dir = e.keyCode == 37 ? -1 : 1;
+          if (e.ctrlKey){
+            newDate = this.moveYear(this.date, dir);
+            newViewDate = this.moveYear(this.viewDate, dir);
+          } else if (e.shiftKey){
+            newDate = this.moveMonth(this.date, dir);
+            newViewDate = this.moveMonth(this.viewDate, dir);
+          } else {
+            newDate = new Date(this.date);
+            newDate.setUTCDate(this.date.getUTCDate() + dir);
+            newViewDate = new Date(this.viewDate);
+            newViewDate.setUTCDate(this.viewDate.getUTCDate() + dir);
+          }
+          if (this.dateWithinRange(newDate)){
+            this.date = newDate;
+            this.viewDate = newViewDate;
+            this.setValue();
+            this.update();
+            e.preventDefault();
+            dateChanged = true;
+          }
+          break;
+        case 38: // up
+        case 40: // down
+          if (!this.keyboardNavigation) break;
+          dir = e.keyCode == 38 ? -1 : 1;
+          if (e.ctrlKey){
+            newDate = this.moveYear(this.date, dir);
+            newViewDate = this.moveYear(this.viewDate, dir);
+          } else if (e.shiftKey){
+            newDate = this.moveMonth(this.date, dir);
+            newViewDate = this.moveMonth(this.viewDate, dir);
+          } else {
+            newDate = new Date(this.date);
+            newDate.setUTCDate(this.date.getUTCDate() + dir * 7);
+            newViewDate = new Date(this.viewDate);
+            newViewDate.setUTCDate(this.viewDate.getUTCDate() + dir * 7);
+          }
+          if (this.dateWithinRange(newDate)){
+            this.date = newDate;
+            this.viewDate = newViewDate;
+            this.setValue();
+            this.update();
+            e.preventDefault();
+            dateChanged = true;
+          }
+          break;
+        case 13: // enter
+          this.hide();
+          e.preventDefault();
+          break;
+        case 9: // tab
+          this.hide();
+          break;
+      }
+      if (dateChanged){
+        this.element.trigger({
+          type: 'changeDate',
+          date: this.date
+        });
+        var element;
+        if (this.isInput) {
+          element = this.element;
+        } else if (this.component){
+          element = this.element.find('input');
+        }
+        if (element) {
+          element.change();
+        }
+      }
+    },
+
     showMode: function(dir) {
       if (dir) {
-        this.viewMode = Math.max(this.minViewMode, Math.min(2, this.viewMode + dir));
+        this.viewMode = Math.max(0, Math.min(2, this.viewMode + dir));
       }
       this.picker.find('>div').hide().filter('.datepicker-'+DPGlobal.modes[this.viewMode].clsName).show();
+      this.updateNavArrows();
     }
   };
-  
-  $.fn.datepicker = function ( option, val ) {
+
+  $.fn.datepicker = function ( option ) {
+    var args = Array.apply(null, arguments);
+    args.shift();
     return this.each(function () {
       var $this = $(this),
         data = $this.data('datepicker'),
-        options = typeof option === 'object' && option;
+        options = typeof option == 'object' && option;
       if (!data) {
         $this.data('datepicker', (data = new Datepicker(this, $.extend({}, $.fn.datepicker.defaults,options))));
       }
-      if (typeof option === 'string') data[option](val);
+      if (typeof option == 'string' && typeof data[option] == 'function') {
+        data[option].apply(data, args);
+      }
     });
   };
 
   $.fn.datepicker.defaults = {
   };
   $.fn.datepicker.Constructor = Datepicker;
-  
+  var dates = $.fn.datepicker.dates = {
+    en: {
+      days: ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday"],
+      daysShort: ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat", "Sun"],
+      daysMin: ["Su", "Mo", "Tu", "We", "Th", "Fr", "Sa", "Su"],
+      months: ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"],
+      monthsShort: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"],
+      today: "Today"
+    }
+  }
+
   var DPGlobal = {
     modes: [
       {
@@ -2380,101 +2705,158 @@
         navFnc: 'FullYear',
         navStep: 10
     }],
-    dates:{
-      days: ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday"],
-      daysShort: ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat", "Sun"],
-      daysMin: ["Su", "Mo", "Tu", "We", "Th", "Fr", "Sa", "Su"],
-      months: ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"],
-      monthsShort: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"]
-    },
     isLeapYear: function (year) {
       return (((year % 4 === 0) && (year % 100 !== 0)) || (year % 400 === 0))
     },
     getDaysInMonth: function (year, month) {
       return [31, (DPGlobal.isLeapYear(year) ? 29 : 28), 31, 30, 31, 30, 31, 31, 30, 31, 30, 31][month]
     },
+    validParts: /dd?|mm?|MM?|yy(?:yy)?/g,
+    nonpunctuation: /[^ -\/:-@\[-`{-~\t\n\r]+/g,
     parseFormat: function(format){
-      var separator = format.match(/[.\/\-\s].*?/),
-        parts = format.split(/\W+/);
-      if (!separator || !parts || parts.length === 0){
+      // IE treats \0 as a string end in inputs (truncating the value),
+      // so it's a bad format delimiter, anyway
+      var separators = format.replace(this.validParts, '\0').split('\0'),
+        parts = format.match(this.validParts);
+      if (!separators || !separators.length || !parts || parts.length == 0){
         throw new Error("Invalid date format.");
       }
-      return {separator: separator, parts: parts};
+      return {separators: separators, parts: parts};
     },
-    parseDate: function(date, format) {
-      var parts = date.split(format.separator),
-        date = new Date(),
-        val;
-      date.setHours(0);
-      date.setMinutes(0);
-      date.setSeconds(0);
-      date.setMilliseconds(0);
-      if (parts.length === format.parts.length) {
-        for (var i=0, cnt = format.parts.length; i < cnt; i++) {
-          val = parseInt(parts[i], 10)||1;
-          switch(format.parts[i]) {
-            case 'dd':
+    parseDate: function(date, format, language) {
+      if (date instanceof Date) return date;
+      if (/^[-+]\d+[dmwy]([\s,]+[-+]\d+[dmwy])*$/.test(date)) {
+        var part_re = /([-+]\d+)([dmwy])/,
+          parts = date.match(/([-+]\d+)([dmwy])/g),
+          part, dir;
+        date = new Date();
+        for (var i=0; i<parts.length; i++) {
+          part = part_re.exec(parts[i]);
+          dir = parseInt(part[1]);
+          switch(part[2]){
             case 'd':
-              date.setDate(val);
+              date.setUTCDate(date.getUTCDate() + dir);
               break;
-            case 'mm':
             case 'm':
-              date.setMonth(val - 1);
+              date = Datepicker.prototype.moveMonth.call(Datepicker.prototype, date, dir);
               break;
-            case 'yy':
-              date.setFullYear(2000 + val);
+            case 'w':
+              date.setUTCDate(date.getUTCDate() + dir * 7);
               break;
-            case 'yyyy':
-              date.setFullYear(val);
+            case 'y':
+              date = Datepicker.prototype.moveYear.call(Datepicker.prototype, date, dir);
               break;
           }
         }
+        return UTCDate(date.getUTCFullYear(), date.getUTCMonth(), date.getUTCDate(), 0, 0, 0);
+      }
+      var parts = date && date.match(this.nonpunctuation) || [],
+        date = new Date(),
+        parsed = {},
+        setters_order = ['yyyy', 'yy', 'M', 'MM', 'm', 'mm', 'd', 'dd'],
+        setters_map = {
+          yyyy: function(d,v){ return d.setUTCFullYear(v); },
+          yy: function(d,v){ return d.setUTCFullYear(2000+v); },
+          m: function(d,v){
+            v -= 1;
+            while (v<0) v += 12;
+            v %= 12;
+            d.setUTCMonth(v);
+            while (d.getUTCMonth() != v)
+              d.setUTCDate(d.getUTCDate()-1);
+            return d;
+          },
+          d: function(d,v){ return d.setUTCDate(v); }
+        },
+        val, filtered, part;
+      setters_map['M'] = setters_map['MM'] = setters_map['mm'] = setters_map['m'];
+      setters_map['dd'] = setters_map['d'];
+      date = UTCDate(date.getUTCFullYear(), date.getUTCMonth(), date.getUTCDate(), 0, 0, 0);
+      if (parts.length == format.parts.length) {
+        for (var i=0, cnt = format.parts.length; i < cnt; i++) {
+          val = parseInt(parts[i], 10);
+          part = format.parts[i];
+          if (isNaN(val)) {
+            switch(part) {
+              case 'MM':
+                filtered = $(dates[language].months).filter(function(){
+                  var m = this.slice(0, parts[i].length),
+                    p = parts[i].slice(0, m.length);
+                  return m == p;
+                });
+                val = $.inArray(filtered[0], dates[language].months) + 1;
+                break;
+              case 'M':
+                filtered = $(dates[language].monthsShort).filter(function(){
+                  var m = this.slice(0, parts[i].length),
+                    p = parts[i].slice(0, m.length);
+                  return m == p;
+                });
+                val = $.inArray(filtered[0], dates[language].monthsShort) + 1;
+                break;
+            }
+          }
+          parsed[part] = val;
+        }
+        for (var i=0, s; i<setters_order.length; i++){
+          s = setters_order[i];
+          if (s in parsed)
+            setters_map[s](date, parsed[s])
+        }
       }
       return date;
     },
-    formatDate: function(date, format){
+    formatDate: function(date, format, language){
       var val = {
-        d: date.getDate(),
-        m: date.getMonth() + 1,
-        yy: date.getFullYear().toString().substring(2),
-        yyyy: date.getFullYear()
+        d: date.getUTCDate(),
+        m: date.getUTCMonth() + 1,
+        M: dates[language].monthsShort[date.getUTCMonth()],
+        MM: dates[language].months[date.getUTCMonth()],
+        yy: date.getUTCFullYear().toString().substring(2),
+        yyyy: date.getUTCFullYear()
       };
       val.dd = (val.d < 10 ? '0' : '') + val.d;
       val.mm = (val.m < 10 ? '0' : '') + val.m;
-      var date = [];
+      var date = [],
+        seps = $.extend([], format.separators);
       for (var i=0, cnt = format.parts.length; i < cnt; i++) {
+        if (seps.length)
+          date.push(seps.shift())
         date.push(val[format.parts[i]]);
       }
-      return date.join(format.separator);
+      return date.join('');
     },
     headTemplate: '<thead>'+
               '<tr>'+
-                '<th class="prev">&lsaquo;</th>'+
+                '<th class="prev"><i class="icon-arrow-left"/></th>'+
                 '<th colspan="5" class="switch"></th>'+
-                '<th class="next">&rsaquo;</th>'+
+                '<th class="next"><i class="icon-arrow-right"/></th>'+
               '</tr>'+
             '</thead>',
-    contTemplate: '<tbody><tr><td colspan="7"></td></tr></tbody>'
+    contTemplate: '<tbody><tr><td colspan="7"></td></tr></tbody>',
+    footTemplate: '<tfoot><tr><th colspan="7" class="today"></th></tr></tfoot>'
   };
   DPGlobal.template = '<div class="datepicker dropdown-menu">'+
               '<div class="datepicker-days">'+
                 '<table class=" table-condensed">'+
                   DPGlobal.headTemplate+
                   '<tbody></tbody>'+
+                  DPGlobal.footTemplate+
                 '</table>'+
               '</div>'+
               '<div class="datepicker-months">'+
                 '<table class="table-condensed">'+
                   DPGlobal.headTemplate+
                   DPGlobal.contTemplate+
+                  DPGlobal.footTemplate+
                 '</table>'+
               '</div>'+
               '<div class="datepicker-years">'+
                 '<table class="table-condensed">'+
                   DPGlobal.headTemplate+
                   DPGlobal.contTemplate+
+                  DPGlobal.footTemplate+
                 '</table>'+
               '</div>'+
             '</div>';
-
-}( window.jQuery )
\ No newline at end of file
+}( window.jQuery );
\ No newline at end of file
diff --git a/src/sentry/static/sentry/scripts/bootstrap.min.js b/src/sentry/static/sentry/scripts/bootstrap.min.js
index fb00bb931a..8746235e68 100644
--- a/src/sentry/static/sentry/scripts/bootstrap.min.js
+++ b/src/sentry/static/sentry/scripts/bootstrap.min.js
@@ -1,2 +1,2 @@
-!function(e){e(function(){"use strict";e.support.transition=function(){var e=function(){var e=document.createElement("bootstrap"),t={WebkitTransition:"webkitTransitionEnd",MozTransition:"transitionend",OTransition:"oTransitionEnd otransitionend",transition:"transitionend"},n;for(n in t)if(e.style[n]!==undefined)return t[n]}();return e&&{end:e}}()})}(window.jQuery),!function(e){"use strict";var t='[data-dismiss="alert"]',n=function(n){e(n).on("click",t,this.close)};n.prototype.close=function(t){function s(){i.trigger("closed").remove()}var n=e(this),r=n.attr("data-target"),i;r||(r=n.attr("href"),r=r&&r.replace(/.*(?=#[^\s]*$)/,"")),i=e(r),t&&t.preventDefault(),i.length||(i=n.hasClass("alert")?n:n.parent()),i.trigger(t=e.Event("close"));if(t.isDefaultPrevented())return;i.removeClass("in"),e.support.transition&&i.hasClass("fade")?i.on(e.support.transition.end,s):s()},e.fn.alert=function(t){return this.each(function(){var r=e(this),i=r.data("alert");i||r.data("alert",i=new n(this)),typeof t=="string"&&i[t].call(r)})},e.fn.alert.Constructor=n,e(function(){e("body").on("click.alert.data-api",t,n.prototype.close)})}(window.jQuery),!function(e){"use strict";var t=function(t,n){this.$element=e(t),this.options=e.extend({},e.fn.button.defaults,n)};t.prototype.setState=function(e){var t="disabled",n=this.$element,r=n.data(),i=n.is("input")?"val":"html";e+="Text",r.resetText||n.data("resetText",n[i]()),n[i](r[e]||this.options[e]),setTimeout(function(){e=="loadingText"?n.addClass(t).attr(t,t):n.removeClass(t).removeAttr(t)},0)},t.prototype.toggle=function(){var e=this.$element.closest('[data-toggle="buttons-radio"]');e&&e.find(".active").removeClass("active"),this.$element.toggleClass("active")},e.fn.button=function(n){return this.each(function(){var r=e(this),i=r.data("button"),s=typeof n=="object"&&n;i||r.data("button",i=new t(this,s)),n=="toggle"?i.toggle():n&&i.setState(n)})},e.fn.button.defaults={loadingText:"loading..."},e.fn.button.Constructor=t,e(function(){e("body").on("click.button.data-api","[data-toggle^=button]",function(t){var n=e(t.target);n.hasClass("btn")||(n=n.closest(".btn")),n.button("toggle")})})}(window.jQuery),!function(e){"use strict";var t=function(t,n){this.$element=e(t),this.options=n,this.options.slide&&this.slide(this.options.slide),this.options.pause=="hover"&&this.$element.on("mouseenter",e.proxy(this.pause,this)).on("mouseleave",e.proxy(this.cycle,this))};t.prototype={cycle:function(t){return t||(this.paused=!1),this.options.interval&&!this.paused&&(this.interval=setInterval(e.proxy(this.next,this),this.options.interval)),this},to:function(t){var n=this.$element.find(".item.active"),r=n.parent().children(),i=r.index(n),s=this;if(t>r.length-1||t<0)return;return this.sliding?this.$element.one("slid",function(){s.to(t)}):i==t?this.pause().cycle():this.slide(t>i?"next":"prev",e(r[t]))},pause:function(t){return t||(this.paused=!0),this.$element.find(".next, .prev").length&&e.support.transition.end&&(this.$element.trigger(e.support.transition.end),this.cycle()),clearInterval(this.interval),this.interval=null,this},next:function(){if(this.sliding)return;return this.slide("next")},prev:function(){if(this.sliding)return;return this.slide("prev")},slide:function(t,n){var r=this.$element.find(".item.active"),i=n||r[t](),s=this.interval,o=t=="next"?"left":"right",u=t=="next"?"first":"last",a=this,f=e.Event("slide",{relatedTarget:i[0]});this.sliding=!0,s&&this.pause(),i=i.length?i:this.$element.find(".item")[u]();if(i.hasClass("active"))return;if(e.support.transition&&this.$element.hasClass("slide")){this.$element.trigger(f);if(f.isDefaultPrevented())return;i.addClass(t),i[0].offsetWidth,r.addClass(o),i.addClass(o),this.$element.one(e.support.transition.end,function(){i.removeClass([t,o].join(" ")).addClass("active"),r.removeClass(["active",o].join(" ")),a.sliding=!1,setTimeout(function(){a.$element.trigger("slid")},0)})}else{this.$element.trigger(f);if(f.isDefaultPrevented())return;r.removeClass("active"),i.addClass("active"),this.sliding=!1,this.$element.trigger("slid")}return s&&this.cycle(),this}},e.fn.carousel=function(n){return this.each(function(){var r=e(this),i=r.data("carousel"),s=e.extend({},e.fn.carousel.defaults,typeof n=="object"&&n),o=typeof n=="string"?n:s.slide;i||r.data("carousel",i=new t(this,s)),typeof n=="number"?i.to(n):o?i[o]():s.interval&&i.cycle()})},e.fn.carousel.defaults={interval:5e3,pause:"hover"},e.fn.carousel.Constructor=t,e(function(){e("body").on("click.carousel.data-api","[data-slide]",function(t){var n=e(this),r,i=e(n.attr("data-target")||(r=n.attr("href"))&&r.replace(/.*(?=#[^\s]+$)/,"")),s=!i.data("modal")&&e.extend({},i.data(),n.data());i.carousel(s),t.preventDefault()})})}(window.jQuery),!function(e){"use strict";var t=function(t,n){this.$element=e(t),this.options=e.extend({},e.fn.collapse.defaults,n),this.options.parent&&(this.$parent=e(this.options.parent)),this.options.toggle&&this.toggle()};t.prototype={constructor:t,dimension:function(){var e=this.$element.hasClass("width");return e?"width":"height"},show:function(){var t,n,r,i;if(this.transitioning)return;t=this.dimension(),n=e.camelCase(["scroll",t].join("-")),r=this.$parent&&this.$parent.find("> .accordion-group > .in");if(r&&r.length){i=r.data("collapse");if(i&&i.transitioning)return;r.collapse("hide"),i||r.data("collapse",null)}this.$element[t](0),this.transition("addClass",e.Event("show"),"shown"),e.support.transition&&this.$element[t](this.$element[0][n])},hide:function(){var t;if(this.transitioning)return;t=this.dimension(),this.reset(this.$element[t]()),this.transition("removeClass",e.Event("hide"),"hidden"),this.$element[t](0)},reset:function(e){var t=this.dimension();return this.$element.removeClass("collapse")[t](e||"auto")[0].offsetWidth,this.$element[e!==null?"addClass":"removeClass"]("collapse"),this},transition:function(t,n,r){var i=this,s=function(){n.type=="show"&&i.reset(),i.transitioning=0,i.$element.trigger(r)};this.$element.trigger(n);if(n.isDefaultPrevented())return;this.transitioning=1,this.$element[t]("in"),e.support.transition&&this.$element.hasClass("collapse")?this.$element.one(e.support.transition.end,s):s()},toggle:function(){this[this.$element.hasClass("in")?"hide":"show"]()}},e.fn.collapse=function(n){return this.each(function(){var r=e(this),i=r.data("collapse"),s=typeof n=="object"&&n;i||r.data("collapse",i=new t(this,s)),typeof n=="string"&&i[n]()})},e.fn.collapse.defaults={toggle:!0},e.fn.collapse.Constructor=t,e(function(){e("body").on("click.collapse.data-api","[data-toggle=collapse]",function(t){var n=e(this),r,i=n.attr("data-target")||t.preventDefault()||(r=n.attr("href"))&&r.replace(/.*(?=#[^\s]+$)/,""),s=e(i).data("collapse")?"toggle":n.data();n[e(i).hasClass("in")?"addClass":"removeClass"]("collapsed"),e(i).collapse(s)})})}(window.jQuery),!function(e){"use strict";function r(){i(e(t)).removeClass("open")}function i(t){var n=t.attr("data-target"),r;return n||(n=t.attr("href"),n=n&&/#/.test(n)&&n.replace(/.*(?=#[^\s]*$)/,"")),r=e(n),r.length||(r=t.parent()),r}var t="[data-toggle=dropdown]",n=function(t){var n=e(t).on("click.dropdown.data-api",this.toggle);e("html").on("click.dropdown.data-api",function(){n.parent().removeClass("open")})};n.prototype={constructor:n,toggle:function(t){var n=e(this),s,o;if(n.is(".disabled, :disabled"))return;return s=i(n),o=s.hasClass("open"),r(),o||(s.toggleClass("open"),n.focus()),!1},keydown:function(t){var n,r,s,o,u,a;if(!/(38|40|27)/.test(t.keyCode))return;n=e(this),t.preventDefault(),t.stopPropagation();if(n.is(".disabled, :disabled"))return;o=i(n),u=o.hasClass("open");if(!u||u&&t.keyCode==27)return n.click();r=e("[role=menu] li:not(.divider) a",o);if(!r.length)return;a=r.index(r.filter(":focus")),t.keyCode==38&&a>0&&a--,t.keyCode==40&&a<r.length-1&&a++,~a||(a=0),r.eq(a).focus()}},e.fn.dropdown=function(t){return this.each(function(){var r=e(this),i=r.data("dropdown");i||r.data("dropdown",i=new n(this)),typeof t=="string"&&i[t].call(r)})},e.fn.dropdown.Constructor=n,e(function(){e("html").on("click.dropdown.data-api touchstart.dropdown.data-api",r),e("body").on("click.dropdown touchstart.dropdown.data-api",".dropdown form",function(e){e.stopPropagation()}).on("click.dropdown.data-api touchstart.dropdown.data-api",t,n.prototype.toggle).on("keydown.dropdown.data-api touchstart.dropdown.data-api",t+", [role=menu]",n.prototype.keydown)})}(window.jQuery),!function(e){"use strict";var t=function(t,n){this.options=n,this.$element=e(t).delegate('[data-dismiss="modal"]',"click.dismiss.modal",e.proxy(this.hide,this)),this.options.remote&&this.$element.find(".modal-body").load(this.options.remote)};t.prototype={constructor:t,toggle:function(){return this[this.isShown?"hide":"show"]()},show:function(){var t=this,n=e.Event("show");this.$element.trigger(n);if(this.isShown||n.isDefaultPrevented())return;e("body").addClass("modal-open"),this.isShown=!0,this.escape(),this.backdrop(function(){var n=e.support.transition&&t.$element.hasClass("fade");t.$element.parent().length||t.$element.appendTo(document.body),t.$element.show(),n&&t.$element[0].offsetWidth,t.$element.addClass("in").attr("aria-hidden",!1).focus(),t.enforceFocus(),n?t.$element.one(e.support.transition.end,function(){t.$element.trigger("shown")}):t.$element.trigger("shown")})},hide:function(t){t&&t.preventDefault();var n=this;t=e.Event("hide"),this.$element.trigger(t);if(!this.isShown||t.isDefaultPrevented())return;this.isShown=!1,e("body").removeClass("modal-open"),this.escape(),e(document).off("focusin.modal"),this.$element.removeClass("in").attr("aria-hidden",!0),e.support.transition&&this.$element.hasClass("fade")?this.hideWithTransition():this.hideModal()},enforceFocus:function(){var t=this;e(document).on("focusin.modal",function(e){t.$element[0]!==e.target&&!t.$element.has(e.target).length&&t.$element.focus()})},escape:function(){var e=this;this.isShown&&this.options.keyboard?this.$element.on("keyup.dismiss.modal",function(t){t.which==27&&e.hide()}):this.isShown||this.$element.off("keyup.dismiss.modal")},hideWithTransition:function(){var t=this,n=setTimeout(function(){t.$element.off(e.support.transition.end),t.hideModal()},500);this.$element.one(e.support.transition.end,function(){clearTimeout(n),t.hideModal()})},hideModal:function(e){this.$element.hide().trigger("hidden"),this.backdrop()},removeBackdrop:function(){this.$backdrop.remove(),this.$backdrop=null},backdrop:function(t){var n=this,r=this.$element.hasClass("fade")?"fade":"";if(this.isShown&&this.options.backdrop){var i=e.support.transition&&r;this.$backdrop=e('<div class="modal-backdrop '+r+'" />').appendTo(document.body),this.options.backdrop!="static"&&this.$backdrop.click(e.proxy(this.hide,this)),i&&this.$backdrop[0].offsetWidth,this.$backdrop.addClass("in"),i?this.$backdrop.one(e.support.transition.end,t):t()}else!this.isShown&&this.$backdrop?(this.$backdrop.removeClass("in"),e.support.transition&&this.$element.hasClass("fade")?this.$backdrop.one(e.support.transition.end,e.proxy(this.removeBackdrop,this)):this.removeBackdrop()):t&&t()}},e.fn.modal=function(n){return this.each(function(){var r=e(this),i=r.data("modal"),s=e.extend({},e.fn.modal.defaults,r.data(),typeof n=="object"&&n);i||r.data("modal",i=new t(this,s)),typeof n=="string"?i[n]():s.show&&i.show()})},e.fn.modal.defaults={backdrop:!0,keyboard:!0,show:!0},e.fn.modal.Constructor=t,e(function(){e("body").on("click.modal.data-api",'[data-toggle="modal"]',function(t){var n=e(this),r=n.attr("href"),i=e(n.attr("data-target")||r&&r.replace(/.*(?=#[^\s]+$)/,"")),s=i.data("modal")?"toggle":e.extend({remote:!/#/.test(r)&&r},i.data(),n.data());t.preventDefault(),i.modal(s).one("hide",function(){n.focus()})})})}(window.jQuery),!function(e){"use strict";var t=function(e,t){this.init("tooltip",e,t)};t.prototype={constructor:t,init:function(t,n,r){var i,s;this.type=t,this.$element=e(n),this.options=this.getOptions(r),this.enabled=!0,this.options.trigger=="click"?this.$element.on("click."+this.type,this.options.selector,e.proxy(this.toggle,this)):this.options.trigger!="manual"&&(i=this.options.trigger=="hover"?"mouseenter":"focus",s=this.options.trigger=="hover"?"mouseleave":"blur",this.$element.on(i+"."+this.type,this.options.selector,e.proxy(this.enter,this)),this.$element.on(s+"."+this.type,this.options.selector,e.proxy(this.leave,this))),this.options.selector?this._options=e.extend({},this.options,{trigger:"manual",selector:""}):this.fixTitle()},getOptions:function(t){return t=e.extend({},e.fn[this.type].defaults,t,this.$element.data()),t.delay&&typeof t.delay=="number"&&(t.delay={show:t.delay,hide:t.delay}),t},enter:function(t){var n=e(t.currentTarget)[this.type](this._options).data(this.type);if(!n.options.delay||!n.options.delay.show)return n.show();clearTimeout(this.timeout),n.hoverState="in",this.timeout=setTimeout(function(){n.hoverState=="in"&&n.show()},n.options.delay.show)},leave:function(t){var n=e(t.currentTarget)[this.type](this._options).data(this.type);this.timeout&&clearTimeout(this.timeout);if(!n.options.delay||!n.options.delay.hide)return n.hide();n.hoverState="out",this.timeout=setTimeout(function(){n.hoverState=="out"&&n.hide()},n.options.delay.hide)},show:function(){var e,t,n,r,i,s,o;if(this.hasContent()&&this.enabled){e=this.tip(),this.setContent(),this.options.animation&&e.addClass("fade"),s=typeof this.options.placement=="function"?this.options.placement.call(this,e[0],this.$element[0]):this.options.placement,t=/in/.test(s),e.remove().css({top:0,left:0,display:"block"}).appendTo(t?this.$element:document.body),n=this.getPosition(t),r=e[0].offsetWidth,i=e[0].offsetHeight;switch(t?s.split(" ")[1]:s){case"bottom":o={top:n.top+n.height,left:n.left+n.width/2-r/2};break;case"top":o={top:n.top-i,left:n.left+n.width/2-r/2};break;case"left":o={top:n.top+n.height/2-i/2,left:n.left-r};break;case"right":o={top:n.top+n.height/2-i/2,left:n.left+n.width}}e.css(o).addClass(s).addClass("in")}},setContent:function(){var e=this.tip(),t=this.getTitle();e.find(".tooltip-inner")[this.options.html?"html":"text"](t),e.removeClass("fade in top bottom left right")},hide:function(){function r(){var t=setTimeout(function(){n.off(e.support.transition.end).remove()},500);n.one(e.support.transition.end,function(){clearTimeout(t),n.remove()})}var t=this,n=this.tip();return n.removeClass("in"),e.support.transition&&this.$tip.hasClass("fade")?r():n.remove(),this},fixTitle:function(){var e=this.$element;(e.attr("title")||typeof e.attr("data-original-title")!="string")&&e.attr("data-original-title",e.attr("title")||"").removeAttr("title")},hasContent:function(){return this.getTitle()},getPosition:function(t){return e.extend({},t?{top:0,left:0}:this.$element.offset(),{width:this.$element[0].offsetWidth,height:this.$element[0].offsetHeight})},getTitle:function(){var e,t=this.$element,n=this.options;return e=t.attr("data-original-title")||(typeof n.title=="function"?n.title.call(t[0]):n.title),e},tip:function(){return this.$tip=this.$tip||e(this.options.template)},validate:function(){this.$element[0].parentNode||(this.hide(),this.$element=null,this.options=null)},enable:function(){this.enabled=!0},disable:function(){this.enabled=!1},toggleEnabled:function(){this.enabled=!this.enabled},toggle:function(){this[this.tip().hasClass("in")?"hide":"show"]()},destroy:function(){this.hide().$element.off("."+this.type).removeData(this.type)}},e.fn.tooltip=function(n){return this.each(function(){var r=e(this),i=r.data("tooltip"),s=typeof n=="object"&&n;i||r.data("tooltip",i=new t(this,s)),typeof n=="string"&&i[n]()})},e.fn.tooltip.Constructor=t,e.fn.tooltip.defaults={animation:!0,placement:"top",selector:!1,template:'<div class="tooltip"><div class="tooltip-arrow"></div><div class="tooltip-inner"></div></div>',trigger:"hover",title:"",delay:0,html:!0}}(window.jQuery),!function(e){"use strict";var t=function(e,t){this.init("popover",e,t)};t.prototype=e.extend({},e.fn.tooltip.Constructor.prototype,{constructor:t,setContent:function(){var e=this.tip(),t=this.getTitle(),n=this.getContent();e.find(".popover-title")[this.options.html?"html":"text"](t),e.find(".popover-content > *")[this.options.html?"html":"text"](n),e.removeClass("fade top bottom left right in")},hasContent:function(){return this.getTitle()||this.getContent()},getContent:function(){var e,t=this.$element,n=this.options;return e=t.attr("data-content")||(typeof n.content=="function"?n.content.call(t[0]):n.content),e},tip:function(){return this.$tip||(this.$tip=e(this.options.template)),this.$tip},destroy:function(){this.hide().$element.off("."+this.type).removeData(this.type)}}),e.fn.popover=function(n){return this.each(function(){var r=e(this),i=r.data("popover"),s=typeof n=="object"&&n;i||r.data("popover",i=new t(this,s)),typeof n=="string"&&i[n]()})},e.fn.popover.Constructor=t,e.fn.popover.defaults=e.extend({},e.fn.tooltip.defaults,{placement:"right",trigger:"click",content:"",template:'<div class="popover"><div class="arrow"></div><div class="popover-inner"><h3 class="popover-title"></h3><div class="popover-content"><p></p></div></div></div>'})}(window.jQuery),!function(e){"use strict";function t(t,n){var r=e.proxy(this.process,this),i=e(t).is("body")?e(window):e(t),s;this.options=e.extend({},e.fn.scrollspy.defaults,n),this.$scrollElement=i.on("scroll.scroll-spy.data-api",r),this.selector=(this.options.target||(s=e(t).attr("href"))&&s.replace(/.*(?=#[^\s]+$)/,"")||"")+" .nav li > a",this.$body=e("body"),this.refresh(),this.process()}t.prototype={constructor:t,refresh:function(){var t=this,n;this.offsets=e([]),this.targets=e([]),n=this.$body.find(this.selector).map(function(){var t=e(this),n=t.data("target")||t.attr("href"),r=/^#\w/.test(n)&&e(n);return r&&r.length&&[[r.position().top,n]]||null}).sort(function(e,t){return e[0]-t[0]}).each(function(){t.offsets.push(this[0]),t.targets.push(this[1])})},process:function(){var e=this.$scrollElement.scrollTop()+this.options.offset,t=this.$scrollElement[0].scrollHeight||this.$body[0].scrollHeight,n=t-this.$scrollElement.height(),r=this.offsets,i=this.targets,s=this.activeTarget,o;if(e>=n)return s!=(o=i.last()[0])&&this.activate(o);for(o=r.length;o--;)s!=i[o]&&e>=r[o]&&(!r[o+1]||e<=r[o+1])&&this.activate(i[o])},activate:function(t){var n,r;this.activeTarget=t,e(this.selector).parent(".active").removeClass("active"),r=this.selector+'[data-target="'+t+'"],'+this.selector+'[href="'+t+'"]',n=e(r).parent("li").addClass("active"),n.parent(".dropdown-menu").length&&(n=n.closest("li.dropdown").addClass("active")),n.trigger("activate")}},e.fn.scrollspy=function(n){return this.each(function(){var r=e(this),i=r.data("scrollspy"),s=typeof n=="object"&&n;i||r.data("scrollspy",i=new t(this,s)),typeof n=="string"&&i[n]()})},e.fn.scrollspy.Constructor=t,e.fn.scrollspy.defaults={offset:10},e(window).on("load",function(){e('[data-spy="scroll"]').each(function(){var t=e(this);t.scrollspy(t.data())})})}(window.jQuery),!function(e){"use strict";var t=function(t){this.element=e(t)};t.prototype={constructor:t,show:function(){var t=this.element,n=t.closest("ul:not(.dropdown-menu)"),r=t.attr("data-target"),i,s,o;r||(r=t.attr("href"),r=r&&r.replace(/.*(?=#[^\s]*$)/,""));if(t.parent("li").hasClass("active"))return;i=n.find(".active a").last()[0],o=e.Event("show",{relatedTarget:i}),t.trigger(o);if(o.isDefaultPrevented())return;s=e(r),this.activate(t.parent("li"),n),this.activate(s,s.parent(),function(){t.trigger({type:"shown",relatedTarget:i})})},activate:function(t,n,r){function o(){i.removeClass("active").find("> .dropdown-menu > .active").removeClass("active"),t.addClass("active"),s?(t[0].offsetWidth,t.addClass("in")):t.removeClass("fade"),t.parent(".dropdown-menu")&&t.closest("li.dropdown").addClass("active"),r&&r()}var i=n.find("> .active"),s=r&&e.support.transition&&i.hasClass("fade");s?i.one(e.support.transition.end,o):o(),i.removeClass("in")}},e.fn.tab=function(n){return this.each(function(){var r=e(this),i=r.data("tab");i||r.data("tab",i=new t(this)),typeof n=="string"&&i[n]()})},e.fn.tab.Constructor=t,e(function(){e("body").on("click.tab.data-api",'[data-toggle="tab"], [data-toggle="pill"]',function(t){t.preventDefault(),e(this).tab("show")})})}(window.jQuery),!function(e){"use strict";var t=function(t,n){this.$element=e(t),this.options=e.extend({},e.fn.typeahead.defaults,n),this.matcher=this.options.matcher||this.matcher,this.sorter=this.options.sorter||this.sorter,this.highlighter=this.options.highlighter||this.highlighter,this.updater=this.options.updater||this.updater,this.$menu=e(this.options.menu).appendTo("body"),this.source=this.options.source,this.shown=!1,this.listen()};t.prototype={constructor:t,select:function(){var e=this.$menu.find(".active").attr("data-value");return this.$element.val(this.updater(e)).change(),this.hide()},updater:function(e){return e},show:function(){var t=e.extend({},this.$element.offset(),{height:this.$element[0].offsetHeight});return this.$menu.css({top:t.top+t.height,left:t.left}),this.$menu.show(),this.shown=!0,this},hide:function(){return this.$menu.hide(),this.shown=!1,this},lookup:function(t){var n;return this.query=this.$element.val(),!this.query||this.query.length<this.options.minLength?this.shown?this.hide():this:(n=e.isFunction(this.source)?this.source(this.query,e.proxy(this.process,this)):this.source,n?this.process(n):this)},process:function(t){var n=this;return t=e.grep(t,function(e){return n.matcher(e)}),t=this.sorter(t),t.length?this.render(t.slice(0,this.options.items)).show():this.shown?this.hide():this},matcher:function(e){return~e.toLowerCase().indexOf(this.query.toLowerCase())},sorter:function(e){var t=[],n=[],r=[],i;while(i=e.shift())i.toLowerCase().indexOf(this.query.toLowerCase())?~i.indexOf(this.query)?n.push(i):r.push(i):t.push(i);return t.concat(n,r)},highlighter:function(e){var t=this.query.replace(/[\-\[\]{}()*+?.,\\\^$|#\s]/g,"\\$&");return e.replace(new RegExp("("+t+")","ig"),function(e,t){return"<strong>"+t+"</strong>"})},render:function(t){var n=this;return t=e(t).map(function(t,r){return t=e(n.options.item).attr("data-value",r),t.find("a").html(n.highlighter(r)),t[0]}),t.first().addClass("active"),this.$menu.html(t),this},next:function(t){var n=this.$menu.find(".active").removeClass("active"),r=n.next();r.length||(r=e(this.$menu.find("li")[0])),r.addClass("active")},prev:function(e){var t=this.$menu.find(".active").removeClass("active"),n=t.prev();n.length||(n=this.$menu.find("li").last()),n.addClass("active")},listen:function(){this.$element.on("blur",e.proxy(this.blur,this)).on("keypress",e.proxy(this.keypress,this)).on("keyup",e.proxy(this.keyup,this)),(e.browser.chrome||e.browser.webkit||e.browser.msie)&&this.$element.on("keydown",e.proxy(this.keydown,this)),this.$menu.on("click",e.proxy(this.click,this)).on("mouseenter","li",e.proxy(this.mouseenter,this))},move:function(e){if(!this.shown)return;switch(e.keyCode){case 9:case 13:case 27:e.preventDefault();break;case 38:e.preventDefault(),this.prev();break;case 40:e.preventDefault(),this.next()}e.stopPropagation()},keydown:function(t){this.suppressKeyPressRepeat=!~e.inArray(t.keyCode,[40,38,9,13,27]),this.move(t)},keypress:function(e){if(this.suppressKeyPressRepeat)return;this.move(e)},keyup:function(e){switch(e.keyCode){case 40:case 38:break;case 9:case 13:if(!this.shown)return;this.select();break;case 27:if(!this.shown)return;this.hide();break;default:this.lookup()}e.stopPropagation(),e.preventDefault()},blur:function(e){var t=this;setTimeout(function(){t.hide()},150)},click:function(e){e.stopPropagation(),e.preventDefault(),this.select()},mouseenter:function(t){this.$menu.find(".active").removeClass("active"),e(t.currentTarget).addClass("active")}},e.fn.typeahead=function(n){return this.each(function(){var r=e(this),i=r.data("typeahead"),s=typeof n=="object"&&n;i||r.data("typeahead",i=new t(this,s)),typeof n=="string"&&i[n]()})},e.fn.typeahead.defaults={source:[],items:8,menu:'<ul class="typeahead dropdown-menu"></ul>',item:'<li><a href="#"></a></li>',minLength:1},e.fn.typeahead.Constructor=t,e(function(){e("body").on("focus.typeahead.data-api",'[data-provide="typeahead"]',function(t){var n=e(this);if(n.data("typeahead"))return;t.preventDefault(),n.typeahead(n.data())})})}(window.jQuery),!function(e){"use strict";var t=function(t,n){this.options=e.extend({},e.fn.affix.defaults,n),this.$window=e(window).on("scroll.affix.data-api",e.proxy(this.checkPosition,this)),this.$element=e(t),this.checkPosition()};t.prototype.checkPosition=function(){if(!this.$element.is(":visible"))return;var t=e(document).height(),n=this.$window.scrollTop(),r=this.$element.offset(),i=this.options.offset,s=i.bottom,o=i.top,u="affix affix-top affix-bottom",a;typeof i!="object"&&(s=o=i),typeof o=="function"&&(o=i.top()),typeof s=="function"&&(s=i.bottom()),a=this.unpin!=null&&n+this.unpin<=r.top?!1:s!=null&&r.top+this.$element.height()>=t-s?"bottom":o!=null&&n<=o?"top":!1;if(this.affixed===a)return;this.affixed=a,this.unpin=a=="bottom"?r.top-n:null,this.$element.removeClass(u).addClass("affix"+(a?"-"+a:""))},e.fn.affix=function(n){return this.each(function(){var r=e(this),i=r.data("affix"),s=typeof n=="object"&&n;i||r.data("affix",i=new t(this,s)),typeof n=="string"&&i[n]()})},e.fn.affix.Constructor=t,e.fn.affix.defaults={offset:0},e(window).on("load",function(){e('[data-spy="affix"]').each(function(){var t=e(this),n=t.data();n.offset=n.offset||{},n.offsetBottom&&(n.offset.bottom=n.offsetBottom),n.offsetTop&&(n.offset.top=n.offsetTop),t.affix(n)})})}(window.jQuery),!function(e){var t=function(t,r){this.element=e(t),this.format=n.parseFormat(r.format||this.element.data("date-format")||"mm/dd/yyyy"),this.picker=e(n.template).appendTo("body").on({click:e.proxy(this.click,this),mousedown:e.proxy(this.mousedown,this)}),this.isInput=this.element.is("input"),this.component=this.element.is(".date")?this.element.find(".add-on"):!1,this.isInput?this.element.on({focus:e.proxy(this.show,this),blur:e.proxy(this.hide,this),keyup:e.proxy(this.update,this)}):this.component?this.component.on("click",e.proxy(this.show,this)):this.element.on("click",e.proxy(this.show,this)),this.minViewMode=r.minViewMode||this.element.data("date-minviewmode")||0;if(typeof this.minViewMode=="string")switch(this.minViewMode){case"months":this.minViewMode=1;break;case"years":this.minViewMode=2;break;default:this.minViewMode=0}this.viewMode=r.viewMode||this.element.data("date-viewmode")||0;if(typeof this.viewMode=="string")switch(this.viewMode){case"months":this.viewMode=1;break;case"years":this.viewMode=2;break;default:this.viewMode=0}this.startViewMode=this.viewMode,this.weekStart=r.weekStart||this.element.data("date-weekstart")||0,this.weekEnd=this.weekStart===0?6:this.weekStart-1,this.fillDow(),this.fillMonths(),this.update(),this.showMode()};t.prototype={constructor:t,show:function(t){this.picker.show(),this.height=this.component?this.component.outerHeight():this.element.outerHeight(),this.place(),e(window).on("resize",e.proxy(this.place,this)),t&&(t.stopPropagation(),t.preventDefault()),this.isInput||e(document).on("mousedown",e.proxy(this.hide,this)),this.element.trigger({type:"show",date:this.date})},hide:function(){this.picker.hide(),e(window).off("resize",this.place),this.viewMode=this.startViewMode,this.showMode(),this.isInput||e(document).off("mousedown",this.hide),this.set(),this.element.trigger({type:"hide",date:this.date})},set:function(){var e=n.formatDate(this.date,this.format);this.isInput?this.element.prop("value",e):(this.component&&this.element.find("input").prop("value",e),this.element.data("date",e))},setValue:function(e){typeof e=="string"?this.date=n.parseDate(e,this.format):this.date=new Date(e),this.set(),this.viewDate=new Date(this.date.getFullYear(),this.date.getMonth(),1,0,0,0,0),this.fill()},place:function(){var e=this.component?this.component.offset():this.element.offset();this.picker.css({top:e.top+this.height,left:e.left})},update:function(e){this.date=n.parseDate(typeof e=="string"?e:this.isInput?this.element.prop("value"):this.element.data("date"),this.format),this.viewDate=new Date(this.date.getFullYear(),this.date.getMonth(),1,0,0,0,0),this.fill()},fillDow:function(){var e=this.weekStart,t="<tr>";while(e<this.weekStart+7)t+='<th class="dow">'+n.dates.daysMin[e++%7]+"</th>";t+="</tr>",this.picker.find(".datepicker-days thead").append(t)},fillMonths:function(){var e="",t=0;while(t<12)e+='<span class="month">'+n.dates.monthsShort[t++]+"</span>";this.picker.find(".datepicker-months td").append(e)},fill:function(){var e=new Date(this.viewDate),t=e.getFullYear(),r=e.getMonth(),i=this.date.valueOf();this.picker.find(".datepicker-days th:eq(1)").text(n.dates.months[r]+" "+t);var s=new Date(t,r-1,28,0,0,0,0),o=n.getDaysInMonth(s.getFullYear(),s.getMonth());s.setDate(o),s.setDate(o-(s.getDay()-this.weekStart+7)%7);var u=new Date(s);u.setDate(u.getDate()+42),u=u.valueOf(),html=[];var a;while(s.valueOf()<u)s.getDay()===this.weekStart&&html.push("<tr>"),a="",s.getMonth()<r?a+=" old":s.getMonth()>r&&(a+=" new"),s.valueOf()===i&&(a+=" active"),html.push('<td class="day'+a+'">'+s.getDate()+"</td>"),s.getDay()===this.weekEnd&&html.push("</tr>"),s.setDate(s.getDate()+1);this.picker.find(".datepicker-days tbody").empty().append(html.join(""));var f=this.date.getFullYear(),l=this.picker.find(".datepicker-months").find("th:eq(1)").text(t).end().find("span").removeClass("active");f===t&&l.eq(this.date.getMonth()).addClass("active"),html="",t=parseInt(t/10,10)*10;var c=this.picker.find(".datepicker-years").find("th:eq(1)").text(t+"-"+(t+9)).end().find("td");t-=1;for(var h=-1;h<11;h++)html+='<span class="year'+(h===-1||h===10?" old":"")+(f===t?" active":"")+'">'+t+"</span>",t+=1;c.html(html)},click:function(t){t.stopPropagation(),t.preventDefault();var r=e(t.target).closest("span, td, th");if(r.length===1)switch(r[0].nodeName.toLowerCase()){case"th":switch(r[0].className){case"switch":this.showMode(1);break;case"prev":case"next":this.viewDate["set"+n.modes[this.viewMode].navFnc].call(this.viewDate,this.viewDate["get"+n.modes[this.viewMode].navFnc].call(this.viewDate)+n.modes[this.viewMode].navStep*(r[0].className==="prev"?-1:1)),this.fill(),this.set()}break;case"span":if(r.is(".month")){var i=r.parent().find("span").index(r);this.viewDate.setMonth(i)}else{var s=parseInt(r.text(),10)||0;this.viewDate.setFullYear(s)}this.viewMode!==0&&(this.date=new Date(this.viewDate),this.element.trigger({type:"changeDate",date:this.date,viewMode:n.modes[this.viewMode].clsName})),this.showMode(-1),this.fill(),this.set();break;case"td":if(r.is(".day")){var o=parseInt(r.text(),10)||1,i=this.viewDate.getMonth();r.is(".old")?i-=1:r.is(".new")&&(i+=1);var s=this.viewDate.getFullYear();this.date=new Date(s,i,o,0,0,0,0),this.viewDate=new Date(s,i,Math.min(28,o),0,0,0,0),this.fill(),this.set(),this.element.trigger({type:"changeDate",date:this.date,viewMode:n.modes[this.viewMode].clsName})}}},mousedown:function(e){e.stopPropagation(),e.preventDefault()},showMode:function(e){e&&(this.viewMode=Math.max(this.minViewMode,Math.min(2,this.viewMode+e))),this.picker.find(">div").hide().filter(".datepicker-"+n.modes[this.viewMode].clsName).show()}},e.fn.datepicker=function(n,r){return this.each(function(){var i=e(this),s=i.data("datepicker"),o=typeof n=="object"&&n;s||i.data("datepicker",s=new t(this,e.extend({},e.fn.datepicker.defaults,o))),typeof n=="string"&&s[n](r)})},e.fn.datepicker.defaults={},e.fn.datepicker.Constructor=t;var n={modes:[{clsName:"days",navFnc:"Month",navStep:1},{clsName:"months",navFnc:"FullYear",navStep:1},{clsName:"years",navFnc:"FullYear",navStep:10}],dates:{days:["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday","Sunday"],daysShort:["Sun","Mon","Tue","Wed","Thu","Fri","Sat","Sun"],daysMin:["Su","Mo","Tu","We","Th","Fr","Sa","Su"],months:["January","February","March","April","May","June","July","August","September","October","November","December"],monthsShort:["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"]},isLeapYear:function(e){return e%4===0&&e%100!==0||e%400===0},getDaysInMonth:function(e,t){return[31,n.isLeapYear(e)?29:28,31,30,31,30,31,31,30,31,30,31][t]},parseFormat:function(e){var t=e.match(/[.\/\-\s].*?/),n=e.split(/\W+/);if(!t||!n||n.length===0)throw new Error("Invalid date format.");return{separator:t,parts:n}},parseDate:function(e,t){var n=e.split(t.separator),e=new Date,r;e.setHours(0),e.setMinutes(0),e.setSeconds(0),e.setMilliseconds(0);if(n.length===t.parts.length)for(var i=0,s=t.parts.length;i<s;i++){r=parseInt(n[i],10)||1;switch(t.parts[i]){case"dd":case"d":e.setDate(r);break;case"mm":case"m":e.setMonth(r-1);break;case"yy":e.setFullYear(2e3+r);break;case"yyyy":e.setFullYear(r)}}return e},formatDate:function(e,t){var n={d:e.getDate(),m:e.getMonth()+1,yy:e.getFullYear().toString().substring(2),yyyy:e.getFullYear()};n.dd=
-(n.d<10?"0":"")+n.d,n.mm=(n.m<10?"0":"")+n.m;var e=[];for(var r=0,i=t.parts.length;r<i;r++)e.push(n[t.parts[r]]);return e.join(t.separator)},headTemplate:'<thead><tr><th class="prev">&lsaquo;</th><th colspan="5" class="switch"></th><th class="next">&rsaquo;</th></tr></thead>',contTemplate:'<tbody><tr><td colspan="7"></td></tr></tbody>'};n.template='<div class="datepicker dropdown-menu"><div class="datepicker-days"><table class=" table-condensed">'+n.headTemplate+"<tbody></tbody>"+"</table>"+"</div>"+'<div class="datepicker-months">'+'<table class="table-condensed">'+n.headTemplate+n.contTemplate+"</table>"+"</div>"+'<div class="datepicker-years">'+'<table class="table-condensed">'+n.headTemplate+n.contTemplate+"</table>"+"</div>"+"</div>"}(window.jQuery);
\ No newline at end of file
+!function(e){e(function(){"use strict";e.support.transition=function(){var e=function(){var e=document.createElement("bootstrap"),t={WebkitTransition:"webkitTransitionEnd",MozTransition:"transitionend",OTransition:"oTransitionEnd otransitionend",transition:"transitionend"},n;for(n in t)if(e.style[n]!==undefined)return t[n]}();return e&&{end:e}}()})}(window.jQuery),!function(e){"use strict";var t='[data-dismiss="alert"]',n=function(n){e(n).on("click",t,this.close)};n.prototype.close=function(t){function s(){i.trigger("closed").remove()}var n=e(this),r=n.attr("data-target"),i;r||(r=n.attr("href"),r=r&&r.replace(/.*(?=#[^\s]*$)/,"")),i=e(r),t&&t.preventDefault(),i.length||(i=n.hasClass("alert")?n:n.parent()),i.trigger(t=e.Event("close"));if(t.isDefaultPrevented())return;i.removeClass("in"),e.support.transition&&i.hasClass("fade")?i.on(e.support.transition.end,s):s()},e.fn.alert=function(t){return this.each(function(){var r=e(this),i=r.data("alert");i||r.data("alert",i=new n(this)),typeof t=="string"&&i[t].call(r)})},e.fn.alert.Constructor=n,e(function(){e("body").on("click.alert.data-api",t,n.prototype.close)})}(window.jQuery),!function(e){"use strict";var t=function(t,n){this.$element=e(t),this.options=e.extend({},e.fn.button.defaults,n)};t.prototype.setState=function(e){var t="disabled",n=this.$element,r=n.data(),i=n.is("input")?"val":"html";e+="Text",r.resetText||n.data("resetText",n[i]()),n[i](r[e]||this.options[e]),setTimeout(function(){e=="loadingText"?n.addClass(t).attr(t,t):n.removeClass(t).removeAttr(t)},0)},t.prototype.toggle=function(){var e=this.$element.closest('[data-toggle="buttons-radio"]');e&&e.find(".active").removeClass("active"),this.$element.toggleClass("active")},e.fn.button=function(n){return this.each(function(){var r=e(this),i=r.data("button"),s=typeof n=="object"&&n;i||r.data("button",i=new t(this,s)),n=="toggle"?i.toggle():n&&i.setState(n)})},e.fn.button.defaults={loadingText:"loading..."},e.fn.button.Constructor=t,e(function(){e("body").on("click.button.data-api","[data-toggle^=button]",function(t){var n=e(t.target);n.hasClass("btn")||(n=n.closest(".btn")),n.button("toggle")})})}(window.jQuery),!function(e){"use strict";var t=function(t,n){this.$element=e(t),this.options=n,this.options.slide&&this.slide(this.options.slide),this.options.pause=="hover"&&this.$element.on("mouseenter",e.proxy(this.pause,this)).on("mouseleave",e.proxy(this.cycle,this))};t.prototype={cycle:function(t){return t||(this.paused=!1),this.options.interval&&!this.paused&&(this.interval=setInterval(e.proxy(this.next,this),this.options.interval)),this},to:function(t){var n=this.$element.find(".item.active"),r=n.parent().children(),i=r.index(n),s=this;if(t>r.length-1||t<0)return;return this.sliding?this.$element.one("slid",function(){s.to(t)}):i==t?this.pause().cycle():this.slide(t>i?"next":"prev",e(r[t]))},pause:function(t){return t||(this.paused=!0),this.$element.find(".next, .prev").length&&e.support.transition.end&&(this.$element.trigger(e.support.transition.end),this.cycle()),clearInterval(this.interval),this.interval=null,this},next:function(){if(this.sliding)return;return this.slide("next")},prev:function(){if(this.sliding)return;return this.slide("prev")},slide:function(t,n){var r=this.$element.find(".item.active"),i=n||r[t](),s=this.interval,o=t=="next"?"left":"right",u=t=="next"?"first":"last",a=this,f=e.Event("slide",{relatedTarget:i[0]});this.sliding=!0,s&&this.pause(),i=i.length?i:this.$element.find(".item")[u]();if(i.hasClass("active"))return;if(e.support.transition&&this.$element.hasClass("slide")){this.$element.trigger(f);if(f.isDefaultPrevented())return;i.addClass(t),i[0].offsetWidth,r.addClass(o),i.addClass(o),this.$element.one(e.support.transition.end,function(){i.removeClass([t,o].join(" ")).addClass("active"),r.removeClass(["active",o].join(" ")),a.sliding=!1,setTimeout(function(){a.$element.trigger("slid")},0)})}else{this.$element.trigger(f);if(f.isDefaultPrevented())return;r.removeClass("active"),i.addClass("active"),this.sliding=!1,this.$element.trigger("slid")}return s&&this.cycle(),this}},e.fn.carousel=function(n){return this.each(function(){var r=e(this),i=r.data("carousel"),s=e.extend({},e.fn.carousel.defaults,typeof n=="object"&&n),o=typeof n=="string"?n:s.slide;i||r.data("carousel",i=new t(this,s)),typeof n=="number"?i.to(n):o?i[o]():s.interval&&i.cycle()})},e.fn.carousel.defaults={interval:5e3,pause:"hover"},e.fn.carousel.Constructor=t,e(function(){e("body").on("click.carousel.data-api","[data-slide]",function(t){var n=e(this),r,i=e(n.attr("data-target")||(r=n.attr("href"))&&r.replace(/.*(?=#[^\s]+$)/,"")),s=!i.data("modal")&&e.extend({},i.data(),n.data());i.carousel(s),t.preventDefault()})})}(window.jQuery),!function(e){"use strict";var t=function(t,n){this.$element=e(t),this.options=e.extend({},e.fn.collapse.defaults,n),this.options.parent&&(this.$parent=e(this.options.parent)),this.options.toggle&&this.toggle()};t.prototype={constructor:t,dimension:function(){var e=this.$element.hasClass("width");return e?"width":"height"},show:function(){var t,n,r,i;if(this.transitioning)return;t=this.dimension(),n=e.camelCase(["scroll",t].join("-")),r=this.$parent&&this.$parent.find("> .accordion-group > .in");if(r&&r.length){i=r.data("collapse");if(i&&i.transitioning)return;r.collapse("hide"),i||r.data("collapse",null)}this.$element[t](0),this.transition("addClass",e.Event("show"),"shown"),e.support.transition&&this.$element[t](this.$element[0][n])},hide:function(){var t;if(this.transitioning)return;t=this.dimension(),this.reset(this.$element[t]()),this.transition("removeClass",e.Event("hide"),"hidden"),this.$element[t](0)},reset:function(e){var t=this.dimension();return this.$element.removeClass("collapse")[t](e||"auto")[0].offsetWidth,this.$element[e!==null?"addClass":"removeClass"]("collapse"),this},transition:function(t,n,r){var i=this,s=function(){n.type=="show"&&i.reset(),i.transitioning=0,i.$element.trigger(r)};this.$element.trigger(n);if(n.isDefaultPrevented())return;this.transitioning=1,this.$element[t]("in"),e.support.transition&&this.$element.hasClass("collapse")?this.$element.one(e.support.transition.end,s):s()},toggle:function(){this[this.$element.hasClass("in")?"hide":"show"]()}},e.fn.collapse=function(n){return this.each(function(){var r=e(this),i=r.data("collapse"),s=typeof n=="object"&&n;i||r.data("collapse",i=new t(this,s)),typeof n=="string"&&i[n]()})},e.fn.collapse.defaults={toggle:!0},e.fn.collapse.Constructor=t,e(function(){e("body").on("click.collapse.data-api","[data-toggle=collapse]",function(t){var n=e(this),r,i=n.attr("data-target")||t.preventDefault()||(r=n.attr("href"))&&r.replace(/.*(?=#[^\s]+$)/,""),s=e(i).data("collapse")?"toggle":n.data();n[e(i).hasClass("in")?"addClass":"removeClass"]("collapsed"),e(i).collapse(s)})})}(window.jQuery),!function(e){"use strict";function r(){i(e(t)).removeClass("open")}function i(t){var n=t.attr("data-target"),r;return n||(n=t.attr("href"),n=n&&/#/.test(n)&&n.replace(/.*(?=#[^\s]*$)/,"")),r=e(n),r.length||(r=t.parent()),r}var t="[data-toggle=dropdown]",n=function(t){var n=e(t).on("click.dropdown.data-api",this.toggle);e("html").on("click.dropdown.data-api",function(){n.parent().removeClass("open")})};n.prototype={constructor:n,toggle:function(t){var n=e(this),s,o;if(n.is(".disabled, :disabled"))return;return s=i(n),o=s.hasClass("open"),r(),o||(s.toggleClass("open"),n.focus()),!1},keydown:function(t){var n,r,s,o,u,a;if(!/(38|40|27)/.test(t.keyCode))return;n=e(this),t.preventDefault(),t.stopPropagation();if(n.is(".disabled, :disabled"))return;o=i(n),u=o.hasClass("open");if(!u||u&&t.keyCode==27)return n.click();r=e("[role=menu] li:not(.divider) a",o);if(!r.length)return;a=r.index(r.filter(":focus")),t.keyCode==38&&a>0&&a--,t.keyCode==40&&a<r.length-1&&a++,~a||(a=0),r.eq(a).focus()}},e.fn.dropdown=function(t){return this.each(function(){var r=e(this),i=r.data("dropdown");i||r.data("dropdown",i=new n(this)),typeof t=="string"&&i[t].call(r)})},e.fn.dropdown.Constructor=n,e(function(){e("html").on("click.dropdown.data-api touchstart.dropdown.data-api",r),e("body").on("click.dropdown touchstart.dropdown.data-api",".dropdown form",function(e){e.stopPropagation()}).on("click.dropdown.data-api touchstart.dropdown.data-api",t,n.prototype.toggle).on("keydown.dropdown.data-api touchstart.dropdown.data-api",t+", [role=menu]",n.prototype.keydown)})}(window.jQuery),!function(e){"use strict";var t=function(t,n){this.options=n,this.$element=e(t).delegate('[data-dismiss="modal"]',"click.dismiss.modal",e.proxy(this.hide,this)),this.options.remote&&this.$element.find(".modal-body").load(this.options.remote)};t.prototype={constructor:t,toggle:function(){return this[this.isShown?"hide":"show"]()},show:function(){var t=this,n=e.Event("show");this.$element.trigger(n);if(this.isShown||n.isDefaultPrevented())return;e("body").addClass("modal-open"),this.isShown=!0,this.escape(),this.backdrop(function(){var n=e.support.transition&&t.$element.hasClass("fade");t.$element.parent().length||t.$element.appendTo(document.body),t.$element.show(),n&&t.$element[0].offsetWidth,t.$element.addClass("in").attr("aria-hidden",!1).focus(),t.enforceFocus(),n?t.$element.one(e.support.transition.end,function(){t.$element.trigger("shown")}):t.$element.trigger("shown")})},hide:function(t){t&&t.preventDefault();var n=this;t=e.Event("hide"),this.$element.trigger(t);if(!this.isShown||t.isDefaultPrevented())return;this.isShown=!1,e("body").removeClass("modal-open"),this.escape(),e(document).off("focusin.modal"),this.$element.removeClass("in").attr("aria-hidden",!0),e.support.transition&&this.$element.hasClass("fade")?this.hideWithTransition():this.hideModal()},enforceFocus:function(){var t=this;e(document).on("focusin.modal",function(e){t.$element[0]!==e.target&&!t.$element.has(e.target).length&&t.$element.focus()})},escape:function(){var e=this;this.isShown&&this.options.keyboard?this.$element.on("keyup.dismiss.modal",function(t){t.which==27&&e.hide()}):this.isShown||this.$element.off("keyup.dismiss.modal")},hideWithTransition:function(){var t=this,n=setTimeout(function(){t.$element.off(e.support.transition.end),t.hideModal()},500);this.$element.one(e.support.transition.end,function(){clearTimeout(n),t.hideModal()})},hideModal:function(e){this.$element.hide().trigger("hidden"),this.backdrop()},removeBackdrop:function(){this.$backdrop.remove(),this.$backdrop=null},backdrop:function(t){var n=this,r=this.$element.hasClass("fade")?"fade":"";if(this.isShown&&this.options.backdrop){var i=e.support.transition&&r;this.$backdrop=e('<div class="modal-backdrop '+r+'" />').appendTo(document.body),this.options.backdrop!="static"&&this.$backdrop.click(e.proxy(this.hide,this)),i&&this.$backdrop[0].offsetWidth,this.$backdrop.addClass("in"),i?this.$backdrop.one(e.support.transition.end,t):t()}else!this.isShown&&this.$backdrop?(this.$backdrop.removeClass("in"),e.support.transition&&this.$element.hasClass("fade")?this.$backdrop.one(e.support.transition.end,e.proxy(this.removeBackdrop,this)):this.removeBackdrop()):t&&t()}},e.fn.modal=function(n){return this.each(function(){var r=e(this),i=r.data("modal"),s=e.extend({},e.fn.modal.defaults,r.data(),typeof n=="object"&&n);i||r.data("modal",i=new t(this,s)),typeof n=="string"?i[n]():s.show&&i.show()})},e.fn.modal.defaults={backdrop:!0,keyboard:!0,show:!0},e.fn.modal.Constructor=t,e(function(){e("body").on("click.modal.data-api",'[data-toggle="modal"]',function(t){var n=e(this),r=n.attr("href"),i=e(n.attr("data-target")||r&&r.replace(/.*(?=#[^\s]+$)/,"")),s=i.data("modal")?"toggle":e.extend({remote:!/#/.test(r)&&r},i.data(),n.data());t.preventDefault(),i.modal(s).one("hide",function(){n.focus()})})})}(window.jQuery),!function(e){"use strict";var t=function(e,t){this.init("tooltip",e,t)};t.prototype={constructor:t,init:function(t,n,r){var i,s;this.type=t,this.$element=e(n),this.options=this.getOptions(r),this.enabled=!0,this.options.trigger=="click"?this.$element.on("click."+this.type,this.options.selector,e.proxy(this.toggle,this)):this.options.trigger!="manual"&&(i=this.options.trigger=="hover"?"mouseenter":"focus",s=this.options.trigger=="hover"?"mouseleave":"blur",this.$element.on(i+"."+this.type,this.options.selector,e.proxy(this.enter,this)),this.$element.on(s+"."+this.type,this.options.selector,e.proxy(this.leave,this))),this.options.selector?this._options=e.extend({},this.options,{trigger:"manual",selector:""}):this.fixTitle()},getOptions:function(t){return t=e.extend({},e.fn[this.type].defaults,t,this.$element.data()),t.delay&&typeof t.delay=="number"&&(t.delay={show:t.delay,hide:t.delay}),t},enter:function(t){var n=e(t.currentTarget)[this.type](this._options).data(this.type);if(!n.options.delay||!n.options.delay.show)return n.show();clearTimeout(this.timeout),n.hoverState="in",this.timeout=setTimeout(function(){n.hoverState=="in"&&n.show()},n.options.delay.show)},leave:function(t){var n=e(t.currentTarget)[this.type](this._options).data(this.type);this.timeout&&clearTimeout(this.timeout);if(!n.options.delay||!n.options.delay.hide)return n.hide();n.hoverState="out",this.timeout=setTimeout(function(){n.hoverState=="out"&&n.hide()},n.options.delay.hide)},show:function(){var e,t,n,r,i,s,o;if(this.hasContent()&&this.enabled){e=this.tip(),this.setContent(),this.options.animation&&e.addClass("fade"),s=typeof this.options.placement=="function"?this.options.placement.call(this,e[0],this.$element[0]):this.options.placement,t=/in/.test(s),e.remove().css({top:0,left:0,display:"block"}).appendTo(t?this.$element:document.body),n=this.getPosition(t),r=e[0].offsetWidth,i=e[0].offsetHeight;switch(t?s.split(" ")[1]:s){case"bottom":o={top:n.top+n.height,left:n.left+n.width/2-r/2};break;case"top":o={top:n.top-i,left:n.left+n.width/2-r/2};break;case"left":o={top:n.top+n.height/2-i/2,left:n.left-r};break;case"right":o={top:n.top+n.height/2-i/2,left:n.left+n.width}}e.css(o).addClass(s).addClass("in")}},setContent:function(){var e=this.tip(),t=this.getTitle();e.find(".tooltip-inner")[this.options.html?"html":"text"](t),e.removeClass("fade in top bottom left right")},hide:function(){function r(){var t=setTimeout(function(){n.off(e.support.transition.end).remove()},500);n.one(e.support.transition.end,function(){clearTimeout(t),n.remove()})}var t=this,n=this.tip();return n.removeClass("in"),e.support.transition&&this.$tip.hasClass("fade")?r():n.remove(),this},fixTitle:function(){var e=this.$element;(e.attr("title")||typeof e.attr("data-original-title")!="string")&&e.attr("data-original-title",e.attr("title")||"").removeAttr("title")},hasContent:function(){return this.getTitle()},getPosition:function(t){return e.extend({},t?{top:0,left:0}:this.$element.offset(),{width:this.$element[0].offsetWidth,height:this.$element[0].offsetHeight})},getTitle:function(){var e,t=this.$element,n=this.options;return e=t.attr("data-original-title")||(typeof n.title=="function"?n.title.call(t[0]):n.title),e},tip:function(){return this.$tip=this.$tip||e(this.options.template)},validate:function(){this.$element[0].parentNode||(this.hide(),this.$element=null,this.options=null)},enable:function(){this.enabled=!0},disable:function(){this.enabled=!1},toggleEnabled:function(){this.enabled=!this.enabled},toggle:function(){this[this.tip().hasClass("in")?"hide":"show"]()},destroy:function(){this.hide().$element.off("."+this.type).removeData(this.type)}},e.fn.tooltip=function(n){return this.each(function(){var r=e(this),i=r.data("tooltip"),s=typeof n=="object"&&n;i||r.data("tooltip",i=new t(this,s)),typeof n=="string"&&i[n]()})},e.fn.tooltip.Constructor=t,e.fn.tooltip.defaults={animation:!0,placement:"top",selector:!1,template:'<div class="tooltip"><div class="tooltip-arrow"></div><div class="tooltip-inner"></div></div>',trigger:"hover",title:"",delay:0,html:!0}}(window.jQuery),!function(e){"use strict";var t=function(e,t){this.init("popover",e,t)};t.prototype=e.extend({},e.fn.tooltip.Constructor.prototype,{constructor:t,setContent:function(){var e=this.tip(),t=this.getTitle(),n=this.getContent();e.find(".popover-title")[this.options.html?"html":"text"](t),e.find(".popover-content > *")[this.options.html?"html":"text"](n),e.removeClass("fade top bottom left right in")},hasContent:function(){return this.getTitle()||this.getContent()},getContent:function(){var e,t=this.$element,n=this.options;return e=t.attr("data-content")||(typeof n.content=="function"?n.content.call(t[0]):n.content),e},tip:function(){return this.$tip||(this.$tip=e(this.options.template)),this.$tip},destroy:function(){this.hide().$element.off("."+this.type).removeData(this.type)}}),e.fn.popover=function(n){return this.each(function(){var r=e(this),i=r.data("popover"),s=typeof n=="object"&&n;i||r.data("popover",i=new t(this,s)),typeof n=="string"&&i[n]()})},e.fn.popover.Constructor=t,e.fn.popover.defaults=e.extend({},e.fn.tooltip.defaults,{placement:"right",trigger:"click",content:"",template:'<div class="popover"><div class="arrow"></div><div class="popover-inner"><h3 class="popover-title"></h3><div class="popover-content"><p></p></div></div></div>'})}(window.jQuery),!function(e){"use strict";function t(t,n){var r=e.proxy(this.process,this),i=e(t).is("body")?e(window):e(t),s;this.options=e.extend({},e.fn.scrollspy.defaults,n),this.$scrollElement=i.on("scroll.scroll-spy.data-api",r),this.selector=(this.options.target||(s=e(t).attr("href"))&&s.replace(/.*(?=#[^\s]+$)/,"")||"")+" .nav li > a",this.$body=e("body"),this.refresh(),this.process()}t.prototype={constructor:t,refresh:function(){var t=this,n;this.offsets=e([]),this.targets=e([]),n=this.$body.find(this.selector).map(function(){var t=e(this),n=t.data("target")||t.attr("href"),r=/^#\w/.test(n)&&e(n);return r&&r.length&&[[r.position().top,n]]||null}).sort(function(e,t){return e[0]-t[0]}).each(function(){t.offsets.push(this[0]),t.targets.push(this[1])})},process:function(){var e=this.$scrollElement.scrollTop()+this.options.offset,t=this.$scrollElement[0].scrollHeight||this.$body[0].scrollHeight,n=t-this.$scrollElement.height(),r=this.offsets,i=this.targets,s=this.activeTarget,o;if(e>=n)return s!=(o=i.last()[0])&&this.activate(o);for(o=r.length;o--;)s!=i[o]&&e>=r[o]&&(!r[o+1]||e<=r[o+1])&&this.activate(i[o])},activate:function(t){var n,r;this.activeTarget=t,e(this.selector).parent(".active").removeClass("active"),r=this.selector+'[data-target="'+t+'"],'+this.selector+'[href="'+t+'"]',n=e(r).parent("li").addClass("active"),n.parent(".dropdown-menu").length&&(n=n.closest("li.dropdown").addClass("active")),n.trigger("activate")}},e.fn.scrollspy=function(n){return this.each(function(){var r=e(this),i=r.data("scrollspy"),s=typeof n=="object"&&n;i||r.data("scrollspy",i=new t(this,s)),typeof n=="string"&&i[n]()})},e.fn.scrollspy.Constructor=t,e.fn.scrollspy.defaults={offset:10},e(window).on("load",function(){e('[data-spy="scroll"]').each(function(){var t=e(this);t.scrollspy(t.data())})})}(window.jQuery),!function(e){"use strict";var t=function(t){this.element=e(t)};t.prototype={constructor:t,show:function(){var t=this.element,n=t.closest("ul:not(.dropdown-menu)"),r=t.attr("data-target"),i,s,o;r||(r=t.attr("href"),r=r&&r.replace(/.*(?=#[^\s]*$)/,""));if(t.parent("li").hasClass("active"))return;i=n.find(".active a").last()[0],o=e.Event("show",{relatedTarget:i}),t.trigger(o);if(o.isDefaultPrevented())return;s=e(r),this.activate(t.parent("li"),n),this.activate(s,s.parent(),function(){t.trigger({type:"shown",relatedTarget:i})})},activate:function(t,n,r){function o(){i.removeClass("active").find("> .dropdown-menu > .active").removeClass("active"),t.addClass("active"),s?(t[0].offsetWidth,t.addClass("in")):t.removeClass("fade"),t.parent(".dropdown-menu")&&t.closest("li.dropdown").addClass("active"),r&&r()}var i=n.find("> .active"),s=r&&e.support.transition&&i.hasClass("fade");s?i.one(e.support.transition.end,o):o(),i.removeClass("in")}},e.fn.tab=function(n){return this.each(function(){var r=e(this),i=r.data("tab");i||r.data("tab",i=new t(this)),typeof n=="string"&&i[n]()})},e.fn.tab.Constructor=t,e(function(){e("body").on("click.tab.data-api",'[data-toggle="tab"], [data-toggle="pill"]',function(t){t.preventDefault(),e(this).tab("show")})})}(window.jQuery),!function(e){"use strict";var t=function(t,n){this.$element=e(t),this.options=e.extend({},e.fn.typeahead.defaults,n),this.matcher=this.options.matcher||this.matcher,this.sorter=this.options.sorter||this.sorter,this.highlighter=this.options.highlighter||this.highlighter,this.updater=this.options.updater||this.updater,this.$menu=e(this.options.menu).appendTo("body"),this.source=this.options.source,this.shown=!1,this.listen()};t.prototype={constructor:t,select:function(){var e=this.$menu.find(".active").attr("data-value");return this.$element.val(this.updater(e)).change(),this.hide()},updater:function(e){return e},show:function(){var t=e.extend({},this.$element.offset(),{height:this.$element[0].offsetHeight});return this.$menu.css({top:t.top+t.height,left:t.left}),this.$menu.show(),this.shown=!0,this},hide:function(){return this.$menu.hide(),this.shown=!1,this},lookup:function(t){var n;return this.query=this.$element.val(),!this.query||this.query.length<this.options.minLength?this.shown?this.hide():this:(n=e.isFunction(this.source)?this.source(this.query,e.proxy(this.process,this)):this.source,n?this.process(n):this)},process:function(t){var n=this;return t=e.grep(t,function(e){return n.matcher(e)}),t=this.sorter(t),t.length?this.render(t.slice(0,this.options.items)).show():this.shown?this.hide():this},matcher:function(e){return~e.toLowerCase().indexOf(this.query.toLowerCase())},sorter:function(e){var t=[],n=[],r=[],i;while(i=e.shift())i.toLowerCase().indexOf(this.query.toLowerCase())?~i.indexOf(this.query)?n.push(i):r.push(i):t.push(i);return t.concat(n,r)},highlighter:function(e){var t=this.query.replace(/[\-\[\]{}()*+?.,\\\^$|#\s]/g,"\\$&");return e.replace(new RegExp("("+t+")","ig"),function(e,t){return"<strong>"+t+"</strong>"})},render:function(t){var n=this;return t=e(t).map(function(t,r){return t=e(n.options.item).attr("data-value",r),t.find("a").html(n.highlighter(r)),t[0]}),t.first().addClass("active"),this.$menu.html(t),this},next:function(t){var n=this.$menu.find(".active").removeClass("active"),r=n.next();r.length||(r=e(this.$menu.find("li")[0])),r.addClass("active")},prev:function(e){var t=this.$menu.find(".active").removeClass("active"),n=t.prev();n.length||(n=this.$menu.find("li").last()),n.addClass("active")},listen:function(){this.$element.on("blur",e.proxy(this.blur,this)).on("keypress",e.proxy(this.keypress,this)).on("keyup",e.proxy(this.keyup,this)),(e.browser.chrome||e.browser.webkit||e.browser.msie)&&this.$element.on("keydown",e.proxy(this.keydown,this)),this.$menu.on("click",e.proxy(this.click,this)).on("mouseenter","li",e.proxy(this.mouseenter,this))},move:function(e){if(!this.shown)return;switch(e.keyCode){case 9:case 13:case 27:e.preventDefault();break;case 38:e.preventDefault(),this.prev();break;case 40:e.preventDefault(),this.next()}e.stopPropagation()},keydown:function(t){this.suppressKeyPressRepeat=!~e.inArray(t.keyCode,[40,38,9,13,27]),this.move(t)},keypress:function(e){if(this.suppressKeyPressRepeat)return;this.move(e)},keyup:function(e){switch(e.keyCode){case 40:case 38:break;case 9:case 13:if(!this.shown)return;this.select();break;case 27:if(!this.shown)return;this.hide();break;default:this.lookup()}e.stopPropagation(),e.preventDefault()},blur:function(e){var t=this;setTimeout(function(){t.hide()},150)},click:function(e){e.stopPropagation(),e.preventDefault(),this.select()},mouseenter:function(t){this.$menu.find(".active").removeClass("active"),e(t.currentTarget).addClass("active")}},e.fn.typeahead=function(n){return this.each(function(){var r=e(this),i=r.data("typeahead"),s=typeof n=="object"&&n;i||r.data("typeahead",i=new t(this,s)),typeof n=="string"&&i[n]()})},e.fn.typeahead.defaults={source:[],items:8,menu:'<ul class="typeahead dropdown-menu"></ul>',item:'<li><a href="#"></a></li>',minLength:1},e.fn.typeahead.Constructor=t,e(function(){e("body").on("focus.typeahead.data-api",'[data-provide="typeahead"]',function(t){var n=e(this);if(n.data("typeahead"))return;t.preventDefault(),n.typeahead(n.data())})})}(window.jQuery),!function(e){"use strict";var t=function(t,n){this.options=e.extend({},e.fn.affix.defaults,n),this.$window=e(window).on("scroll.affix.data-api",e.proxy(this.checkPosition,this)),this.$element=e(t),this.checkPosition()};t.prototype.checkPosition=function(){if(!this.$element.is(":visible"))return;var t=e(document).height(),n=this.$window.scrollTop(),r=this.$element.offset(),i=this.options.offset,s=i.bottom,o=i.top,u="affix affix-top affix-bottom",a;typeof i!="object"&&(s=o=i),typeof o=="function"&&(o=i.top()),typeof s=="function"&&(s=i.bottom()),a=this.unpin!=null&&n+this.unpin<=r.top?!1:s!=null&&r.top+this.$element.height()>=t-s?"bottom":o!=null&&n<=o?"top":!1;if(this.affixed===a)return;this.affixed=a,this.unpin=a=="bottom"?r.top-n:null,this.$element.removeClass(u).addClass("affix"+(a?"-"+a:""))},e.fn.affix=function(n){return this.each(function(){var r=e(this),i=r.data("affix"),s=typeof n=="object"&&n;i||r.data("affix",i=new t(this,s)),typeof n=="string"&&i[n]()})},e.fn.affix.Constructor=t,e.fn.affix.defaults={offset:0},e(window).on("load",function(){e('[data-spy="affix"]').each(function(){var t=e(this),n=t.data();n.offset=n.offset||{},n.offsetBottom&&(n.offset.bottom=n.offsetBottom),n.offsetTop&&(n.offset.top=n.offsetTop),t.affix(n)})})}(window.jQuery),!function(e){function t(){return new Date(Date.UTC.apply(Date,arguments))}function n(){var e=new Date;return t(e.getUTCFullYear(),e.getUTCMonth(),e.getUTCDate())}var r=function(t,n){var r=this;this.element=e(t),this.language=n.language||this.element.data("date-language")||"en",this.language=this.language in i?this.language:"en",this.format=s.parseFormat(n.format||this.element.data("date-format")||"mm/dd/yyyy"),this.picker=e(s.template).appendTo("body").on({click:e.proxy(this.click,this)}),this.isInput=this.element.is("input"),this.component=this.element.is(".date")?this.element.find(".add-on"):!1,this.hasInput=this.component&&this.element.find("input").length,this.component&&this.component.length===0&&(this.component=!1),this.isInput?this.element.on({focus:e.proxy(this.show,this),keyup:e.proxy(this.update,this),keydown:e.proxy(this.keydown,this)}):this.component&&this.hasInput?(this.element.find("input").on({focus:e.proxy(this.show,this),keyup:e.proxy(this.update,this),keydown:e.proxy(this.keydown,this)}),this.component.on("click",e.proxy(this.show,this))):this.element.on("click",e.proxy(this.show,this)),e(document).on("mousedown",function(t){e(t.target).closest(".datepicker").length==0&&r.hide()}),this.autoclose=!1,"autoclose"in n?this.autoclose=n.autoclose:"dateAutoclose"in this.element.data()&&(this.autoclose=this.element.data("date-autoclose")),this.keyboardNavigation=!0,"keyboardNavigation"in n?this.keyboardNavigation=n.keyboardNavigation:"dateKeyboardNavigation"in this.element.data()&&(this.keyboardNavigation=this.element.data("date-keyboard-navigation"));switch(n.startView||this.element.data("date-start-view")){case 2:case"decade":this.viewMode=this.startViewMode=2;break;case 1:case"year":this.viewMode=this.startViewMode=1;break;case 0:case"month":default:this.viewMode=this.startViewMode=0}this.todayBtn=n.todayBtn||this.element.data("date-today-btn")||!1,this.todayHighlight=n.todayHighlight||this.element.data("date-today-highlight")||!1,this.weekStart=(n.weekStart||this.element.data("date-weekstart")||i[this.language].weekStart||0)%7,this.weekEnd=(this.weekStart+6)%7,this.startDate=-Infinity,this.endDate=Infinity,this.setStartDate(n.startDate||this.element.data("date-startdate")),this.setEndDate(n.endDate||this.element.data("date-enddate")),this.fillDow(),this.fillMonths(),this.update(),this.showMode()};r.prototype={constructor:r,show:function(t){this.picker.show(),this.height=this.component?this.component.outerHeight():this.element.outerHeight(),this.update(),this.place(),e(window).on("resize",e.proxy(this.place,this)),t&&(t.stopPropagation(),t.preventDefault()),this.element.trigger({type:"show",date:this.date})},hide:function(t){this.picker.hide(),e(window).off("resize",this.place),this.viewMode=this.startViewMode,this.showMode(),this.isInput||e(document).off("mousedown",this.hide),t&&t.currentTarget.value&&this.setValue(),this.element.trigger({type:"hide",date:this.date})},getDate:function(){var e=this.getUTCDate();return new Date(e.getTime()+e.getTimezoneOffset()*6e4)},getUTCDate:function(){return this.date},setDate:function(e){this.setUTCDate(new Date(e.getTime()-e.getTimezoneOffset()*6e4))},setUTCDate:function(e){this.date=e,this.setValue()},setValue:function(){var e=s.formatDate(this.date,this.format,this.language);this.isInput?this.element.prop("value",e):(this.component&&this.element.find("input").prop("value",e),this.element.data("date",e))},setStartDate:function(e){this.startDate=e||-Infinity,this.startDate!==-Infinity&&(this.startDate=s.parseDate(this.startDate,this.format,this.language)),this.update(),this.updateNavArrows()},setEndDate:function(e){this.endDate=e||Infinity,this.endDate!==Infinity&&(this.endDate=s.parseDate(this.endDate,this.format,this.language)),this.update(),this.updateNavArrows()},place:function(){var t=parseInt(this.element.parents().filter(function(){return e(this).css("z-index")!="auto"}).first().css("z-index"))+10,n=this.component?this.component.offset():this.element.offset();this.picker.css({top:n.top+this.height,left:n.left,zIndex:t})},update:function(){this.date=s.parseDate(this.isInput?this.element.prop("value"):this.element.data("date")||this.element.find("input").prop("value"),this.format,this.language),this.date<this.startDate?this.viewDate=new Date(this.startDate):this.date>this.endDate?this.viewDate=new Date(this.endDate):this.viewDate=new Date(this.date),this.fill()},fillDow:function(){var e=this.weekStart,t="<tr>";while(e<this.weekStart+7)t+='<th class="dow">'+i[this.language].daysMin[e++%7]+"</th>";t+="</tr>",this.picker.find(".datepicker-days thead").append(t)},fillMonths:function(){var e="",t=0;while(t<12)e+='<span class="month">'+i[this.language].monthsShort[t++]+"</span>";this.picker.find(".datepicker-months td").html(e)},fill:function(){var e=new Date(this.viewDate),n=e.getUTCFullYear(),r=e.getUTCMonth(),o=this.startDate!==-Infinity?this.startDate.getUTCFullYear():-Infinity,u=this.startDate!==-Infinity?this.startDate.getUTCMonth():-Infinity,a=this.endDate!==Infinity?this.endDate.getUTCFullYear():Infinity,f=this.endDate!==Infinity?this.endDate.getUTCMonth():Infinity,l=this.date.valueOf(),c=new Date;this.picker.find(".datepicker-days thead th:eq(1)").text(i[this.language].months[r]+" "+n),this.picker.find("tfoot th.today").text(i[this.language].today).toggle(this.todayBtn),this.updateNavArrows(),this.fillMonths();var h=t(n,r-1,28,0,0,0,0),p=s.getDaysInMonth(h.getUTCFullYear(),h.getUTCMonth());h.setUTCDate(p),h.setUTCDate(p-(h.getUTCDay()-this.weekStart+7)%7);var d=new Date(h);d.setUTCDate(d.getUTCDate()+42),d=d.valueOf();var v=[],m;while(h.valueOf()<d){h.getUTCDay()==this.weekStart&&v.push("<tr>"),m="";if(h.getUTCFullYear()<n||h.getUTCFullYear()==n&&h.getUTCMonth()<r)m+=" old";else if(h.getUTCFullYear()>n||h.getUTCFullYear()==n&&h.getUTCMonth()>r)m+=" new";this.todayHighlight&&h.getUTCFullYear()==c.getFullYear()&&h.getUTCMonth()==c.getMonth()&&h.getUTCDate()==c.getDate()&&(m+=" today"),h.valueOf()==l&&(m+=" active");if(h.valueOf()<this.startDate||h.valueOf()>this.endDate)m+=" disabled";v.push('<td class="day'+m+'">'+h.getUTCDate()+"</td>"),h.getUTCDay()==this.weekEnd&&v.push("</tr>"),h.setUTCDate(h.getUTCDate()+1)}this.picker.find(".datepicker-days tbody").empty().append(v.join(""));var g=this.date.getUTCFullYear(),y=this.picker.find(".datepicker-months").find("th:eq(1)").text(n).end().find("span").removeClass("active");g==n&&y.eq(this.date.getUTCMonth()).addClass("active"),(n<o||n>a)&&y.addClass("disabled"),n==o&&y.slice(0,u).addClass("disabled"),n==a&&y.slice(f+1).addClass("disabled"),v="",n=parseInt(n/10,10)*10;var b=this.picker.find(".datepicker-years").find("th:eq(1)").text(n+"-"+(n+9)).end().find("td");n-=1;for(var w=-1;w<11;w++)v+='<span class="year'+(w==-1||w==10?" old":"")+(g==n?" active":"")+(n<o||n>a?" disabled":"")+'">'+n+"</span>",n+=1;b.html(v)},updateNavArrows:function(){var e=new Date(this.viewDate),t=e.getUTCFullYear(),n=e.getUTCMonth();switch(this.viewMode){case 0:this.startDate!==-Infinity&&t<=this.startDate.getUTCFullYear()&&n<=this.startDate.getUTCMonth()?this.picker.find(".prev").css({visibility:"hidden"}):this.picker.find(".prev").css({visibility:"visible"}),this.endDate!==Infinity&&t>=this.endDate.getUTCFullYear()&&n>=this.endDate.getUTCMonth()?this.picker.find(".next").css({visibility:"hidden"}):this.picker
+.find(".next").css({visibility:"visible"});break;case 1:case 2:this.startDate!==-Infinity&&t<=this.startDate.getUTCFullYear()?this.picker.find(".prev").css({visibility:"hidden"}):this.picker.find(".prev").css({visibility:"visible"}),this.endDate!==Infinity&&t>=this.endDate.getUTCFullYear()?this.picker.find(".next").css({visibility:"hidden"}):this.picker.find(".next").css({visibility:"visible"})}},click:function(n){n.stopPropagation(),n.preventDefault();var r=e(n.target).closest("span, td, th");if(r.length==1)switch(r[0].nodeName.toLowerCase()){case"th":switch(r[0].className){case"switch":this.showMode(1);break;case"prev":case"next":var i=s.modes[this.viewMode].navStep*(r[0].className=="prev"?-1:1);switch(this.viewMode){case 0:this.viewDate=this.moveMonth(this.viewDate,i);break;case 1:case 2:this.viewDate=this.moveYear(this.viewDate,i)}this.fill();break;case"today":var o=new Date;o.setUTCHours(0),o.setUTCMinutes(0),o.setUTCSeconds(0),o.setUTCMilliseconds(0),this.showMode(-2);var u=this.todayBtn=="linked"?null:"view";this._setDate(o,u)}break;case"span":if(!r.is(".disabled")){this.viewDate.setUTCDate(1);if(r.is(".month")){var a=r.parent().find("span").index(r);this.viewDate.setUTCMonth(a),this.element.trigger({type:"changeMonth",date:this.viewDate})}else{var f=parseInt(r.text(),10)||0;this.viewDate.setUTCFullYear(f),this.element.trigger({type:"changeYear",date:this.viewDate})}this.showMode(-1),this.fill()}break;case"td":if(r.is(".day")&&!r.is(".disabled")){var l=parseInt(r.text(),10)||1,f=this.viewDate.getUTCFullYear(),a=this.viewDate.getUTCMonth();r.is(".old")?a==0?(a=11,f-=1):a-=1:r.is(".new")&&(a==11?(a=0,f+=1):a+=1),this._setDate(t(f,a,l,0,0,0,0))}}},_setDate:function(e,t){if(!t||t=="date")this.date=e;if(!t||t=="view")this.viewDate=e;this.fill(),this.setValue(),this.element.trigger({type:"changeDate",date:this.date});var n;this.isInput?n=this.element:this.component&&(n=this.element.find("input")),n&&(n.change(),this.autoclose&&this.hide())},moveMonth:function(e,t){if(!t)return e;var n=new Date(e.valueOf()),r=n.getUTCDate(),i=n.getUTCMonth(),s=Math.abs(t),o,u;t=t>0?1:-1;if(s==1){u=t==-1?function(){return n.getUTCMonth()==i}:function(){return n.getUTCMonth()!=o},o=i+t,n.setUTCMonth(o);if(o<0||o>11)o=(o+12)%12}else{for(var a=0;a<s;a++)n=this.moveMonth(n,t);o=n.getUTCMonth(),n.setUTCDate(r),u=function(){return o!=n.getUTCMonth()}}while(u())n.setUTCDate(--r),n.setUTCMonth(o);return n},moveYear:function(e,t){return this.moveMonth(e,t*12)},dateWithinRange:function(e){return e>=this.startDate&&e<=this.endDate},keydown:function(e){if(this.picker.is(":not(:visible)")){e.keyCode==27&&this.show();return}var t=!1,n,r,i,s,o;switch(e.keyCode){case 27:this.hide(),e.preventDefault();break;case 37:case 39:if(!this.keyboardNavigation)break;n=e.keyCode==37?-1:1,e.ctrlKey?(s=this.moveYear(this.date,n),o=this.moveYear(this.viewDate,n)):e.shiftKey?(s=this.moveMonth(this.date,n),o=this.moveMonth(this.viewDate,n)):(s=new Date(this.date),s.setUTCDate(this.date.getUTCDate()+n),o=new Date(this.viewDate),o.setUTCDate(this.viewDate.getUTCDate()+n)),this.dateWithinRange(s)&&(this.date=s,this.viewDate=o,this.setValue(),this.update(),e.preventDefault(),t=!0);break;case 38:case 40:if(!this.keyboardNavigation)break;n=e.keyCode==38?-1:1,e.ctrlKey?(s=this.moveYear(this.date,n),o=this.moveYear(this.viewDate,n)):e.shiftKey?(s=this.moveMonth(this.date,n),o=this.moveMonth(this.viewDate,n)):(s=new Date(this.date),s.setUTCDate(this.date.getUTCDate()+n*7),o=new Date(this.viewDate),o.setUTCDate(this.viewDate.getUTCDate()+n*7)),this.dateWithinRange(s)&&(this.date=s,this.viewDate=o,this.setValue(),this.update(),e.preventDefault(),t=!0);break;case 13:this.hide(),e.preventDefault();break;case 9:this.hide()}if(t){this.element.trigger({type:"changeDate",date:this.date});var u;this.isInput?u=this.element:this.component&&(u=this.element.find("input")),u&&u.change()}},showMode:function(e){e&&(this.viewMode=Math.max(0,Math.min(2,this.viewMode+e))),this.picker.find(">div").hide().filter(".datepicker-"+s.modes[this.viewMode].clsName).show(),this.updateNavArrows()}},e.fn.datepicker=function(t){var n=Array.apply(null,arguments);return n.shift(),this.each(function(){var i=e(this),s=i.data("datepicker"),o=typeof t=="object"&&t;s||i.data("datepicker",s=new r(this,e.extend({},e.fn.datepicker.defaults,o))),typeof t=="string"&&typeof s[t]=="function"&&s[t].apply(s,n)})},e.fn.datepicker.defaults={},e.fn.datepicker.Constructor=r;var i=e.fn.datepicker.dates={en:{days:["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday","Sunday"],daysShort:["Sun","Mon","Tue","Wed","Thu","Fri","Sat","Sun"],daysMin:["Su","Mo","Tu","We","Th","Fr","Sa","Su"],months:["January","February","March","April","May","June","July","August","September","October","November","December"],monthsShort:["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],today:"Today"}},s={modes:[{clsName:"days",navFnc:"Month",navStep:1},{clsName:"months",navFnc:"FullYear",navStep:1},{clsName:"years",navFnc:"FullYear",navStep:10}],isLeapYear:function(e){return e%4===0&&e%100!==0||e%400===0},getDaysInMonth:function(e,t){return[31,s.isLeapYear(e)?29:28,31,30,31,30,31,31,30,31,30,31][t]},validParts:/dd?|mm?|MM?|yy(?:yy)?/g,nonpunctuation:/[^ -\/:-@\[-`{-~\t\n\r]+/g,parseFormat:function(e){var t=e.replace(this.validParts,"\0").split("\0"),n=e.match(this.validParts);if(!t||!t.length||!n||n.length==0)throw new Error("Invalid date format.");return{separators:t,parts:n}},parseDate:function(n,s,o){if(n instanceof Date)return n;if(/^[-+]\d+[dmwy]([\s,]+[-+]\d+[dmwy])*$/.test(n)){var u=/([-+]\d+)([dmwy])/,a=n.match(/([-+]\d+)([dmwy])/g),f,l;n=new Date;for(var c=0;c<a.length;c++){f=u.exec(a[c]),l=parseInt(f[1]);switch(f[2]){case"d":n.setUTCDate(n.getUTCDate()+l);break;case"m":n=r.prototype.moveMonth.call(r.prototype,n,l);break;case"w":n.setUTCDate(n.getUTCDate()+l*7);break;case"y":n=r.prototype.moveYear.call(r.prototype,n,l)}}return t(n.getUTCFullYear(),n.getUTCMonth(),n.getUTCDate(),0,0,0)}var a=n&&n.match(this.nonpunctuation)||[],n=new Date,h={},p=["yyyy","yy","M","MM","m","mm","d","dd"],d={yyyy:function(e,t){return e.setUTCFullYear(t)},yy:function(e,t){return e.setUTCFullYear(2e3+t)},m:function(e,t){t-=1;while(t<0)t+=12;t%=12,e.setUTCMonth(t);while(e.getUTCMonth()!=t)e.setUTCDate(e.getUTCDate()-1);return e},d:function(e,t){return e.setUTCDate(t)}},v,m,f;d.M=d.MM=d.mm=d.m,d.dd=d.d,n=t(n.getUTCFullYear(),n.getUTCMonth(),n.getUTCDate(),0,0,0);if(a.length==s.parts.length){for(var c=0,g=s.parts.length;c<g;c++){v=parseInt(a[c],10),f=s.parts[c];if(isNaN(v))switch(f){case"MM":m=e(i[o].months).filter(function(){var e=this.slice(0,a[c].length),t=a[c].slice(0,e.length);return e==t}),v=e.inArray(m[0],i[o].months)+1;break;case"M":m=e(i[o].monthsShort).filter(function(){var e=this.slice(0,a[c].length),t=a[c].slice(0,e.length);return e==t}),v=e.inArray(m[0],i[o].monthsShort)+1}h[f]=v}for(var c=0,y;c<p.length;c++)y=p[c],y in h&&d[y](n,h[y])}return n},formatDate:function(t,n,r){var s={d:t.getUTCDate(),m:t.getUTCMonth()+1,M:i[r].monthsShort[t.getUTCMonth()],MM:i[r].months[t.getUTCMonth()],yy:t.getUTCFullYear().toString().substring(2),yyyy:t.getUTCFullYear()};s.dd=(s.d<10?"0":"")+s.d,s.mm=(s.m<10?"0":"")+s.m;var t=[],o=e.extend([],n.separators);for(var u=0,a=n.parts.length;u<a;u++)o.length&&t.push(o.shift()),t.push(s[n.parts[u]]);return t.join("")},headTemplate:'<thead><tr><th class="prev"><i class="icon-arrow-left"/></th><th colspan="5" class="switch"></th><th class="next"><i class="icon-arrow-right"/></th></tr></thead>',contTemplate:'<tbody><tr><td colspan="7"></td></tr></tbody>',footTemplate:'<tfoot><tr><th colspan="7" class="today"></th></tr></tfoot>'};s.template='<div class="datepicker dropdown-menu"><div class="datepicker-days"><table class=" table-condensed">'+s.headTemplate+"<tbody></tbody>"+s.footTemplate+"</table>"+"</div>"+'<div class="datepicker-months">'+'<table class="table-condensed">'+s.headTemplate+s.contTemplate+s.footTemplate+"</table>"+"</div>"+'<div class="datepicker-years">'+'<table class="table-condensed">'+s.headTemplate+s.contTemplate+s.footTemplate+"</table>"+"</div>"+"</div>"}(window.jQuery);
\ No newline at end of file
diff --git a/src/sentry/static/sentry/styles/global.css b/src/sentry/static/sentry/styles/global.css
index 8e7937b2cc..e1e99fc700 100644
--- a/src/sentry/static/sentry/styles/global.css
+++ b/src/sentry/static/sentry/styles/global.css
@@ -4879,136 +4879,279 @@ a.badge:hover {
 .affix {
   position: fixed;
 }
+/*!
+ * Datepicker for Bootstrap
+ *
+ * Copyright 2012 Stefan Petre
+ * Improvements by Andrew Rowls
+ * Licensed under the Apache License v2.0
+ * http://www.apache.org/licenses/LICENSE-2.0
+ *
+ */
 .datepicker {
-  background-color: #ffffff;
-  border-color: #999;
-  border-color: rgba(0, 0, 0, 0.2);
-  border-style: solid;
-  border-width: 1px;
+  top: 0;
+  left: 0;
+  padding: 4px;
+  margin-top: 1px;
   -webkit-border-radius: 4px;
   -moz-border-radius: 4px;
   border-radius: 4px;
-  -webkit-box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);
-  -moz-box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);
-  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);
-  -webkit-background-clip: padding-box;
-  -moz-background-clip: padding-box;
-  background-clip: padding-box;
-  display: none;
+  /*.dow {
+        border-top: 1px solid #ddd !important;
+    }*/
+
+}
+.datepicker:before {
+  content: '';
+  display: inline-block;
+  border-left: 7px solid transparent;
+  border-right: 7px solid transparent;
+  border-bottom: 7px solid #ccc;
+  border-bottom-color: rgba(0, 0, 0, 0.2);
   position: absolute;
-  z-index: 900;
-  margin-left: 0;
-  margin-right: 0;
-  margin-bottom: 18px;
-  padding-bottom: 4px;
-  width: 218px;
+  top: -7px;
+  left: 6px;
 }
-.datepicker .nav {
-  font-weight: bold;
-  width: 100%;
-  padding: 4px 0;
-  background-color: #f5f5f5;
-  color: #6d757e;
-  border-bottom: 1px solid #ddd;
-  -webkit-box-shadow: inset 0 1px 0 #ffffff;
-  -moz-box-shadow: inset 0 1px 0 #ffffff;
-  box-shadow: inset 0 1px 0 #ffffff;
-  *zoom: 1;
+.datepicker:after {
+  content: '';
+  display: inline-block;
+  border-left: 6px solid transparent;
+  border-right: 6px solid transparent;
+  border-bottom: 6px solid #ffffff;
+  position: absolute;
+  top: -6px;
+  left: 7px;
 }
-.datepicker .nav:before,
-.datepicker .nav:after {
-  display: table;
-  content: "";
-  line-height: 0;
+.datepicker > div {
+  display: none;
 }
-.datepicker .nav:after {
-  clear: both;
+.datepicker.days div.datepicker-days {
+  display: block;
 }
-.datepicker .nav span {
+.datepicker.months div.datepicker-months {
   display: block;
-  float: left;
-  text-align: center;
-  height: 28px;
-  line-height: 28px;
-  position: relative;
 }
-.datepicker .nav .bg {
-  width: 100%;
-  background-color: #fdf5d9;
-  height: 28px;
-  position: absolute;
-  top: 0;
-  left: 0;
-  -webkit-border-radius: 4px;
-  -moz-border-radius: 4px;
-  border-radius: 4px;
+.datepicker.years div.datepicker-years {
+  display: block;
 }
-.datepicker .nav .fg {
-  width: 100%;
-  position: absolute;
-  top: 0;
-  left: 0;
+.datepicker table {
+  margin: 0;
 }
-.datepicker .button {
-  cursor: pointer;
-  padding: 0 4px;
+.datepicker td,
+.datepicker th {
+  text-align: center;
+  width: 20px;
+  height: 20px;
   -webkit-border-radius: 4px;
   -moz-border-radius: 4px;
   border-radius: 4px;
 }
-.datepicker .button:hover {
-  background-color: #6d757e;
-  color: #ffffff;
-}
-.datepicker .months {
-  float: left;
-  margin-left: 4px;
+.datepicker td.day:hover {
+  background: #eeeeee;
+  cursor: pointer;
 }
-.datepicker .months .name {
-  width: 72px;
-  padding: 0;
+.datepicker td.old,
+.datepicker td.new {
+  color: #999999;
 }
-.datepicker .years {
-  float: right;
-  margin-right: 4px;
+.datepicker td.disabled,
+.datepicker td.disabled:hover {
+  background: none;
+  color: #999999;
+  cursor: default;
 }
-.datepicker .years .name {
-  width: 36px;
-  padding: 0;
+.datepicker td.today,
+.datepicker td.today:hover,
+.datepicker td.today.disabled,
+.datepicker td.today.disabled:hover {
+  background-color: #fde19a;
+  background-image: -moz-linear-gradient(top, #fdd49a, #fdf59a);
+  background-image: -ms-linear-gradient(top, #fdd49a, #fdf59a);
+  background-image: -webkit-gradient(linear, 0 0, 0 100%, from(#fdd49a), to(#fdf59a));
+  background-image: -webkit-linear-gradient(top, #fdd49a, #fdf59a);
+  background-image: -o-linear-gradient(top, #fdd49a, #fdf59a);
+  background-image: linear-gradient(top, #fdd49a, #fdf59a);
+  background-repeat: repeat-x;
+  filter: progid:dximagetransform.microsoft.gradient(startColorstr='#fdd49a', endColorstr='#fdf59a', GradientType=0);
+  border-color: #fdf59a #fdf59a #fbed50;
+  border-color: rgba(0, 0, 0, 0.1) rgba(0, 0, 0, 0.1) rgba(0, 0, 0, 0.25);
+  filter: progid:dximagetransform.microsoft.gradient(enabled=false);
+}
+.datepicker td.today:hover,
+.datepicker td.today:hover:hover,
+.datepicker td.today.disabled:hover,
+.datepicker td.today.disabled:hover:hover,
+.datepicker td.today:active,
+.datepicker td.today:hover:active,
+.datepicker td.today.disabled:active,
+.datepicker td.today.disabled:hover:active,
+.datepicker td.today.active,
+.datepicker td.today:hover.active,
+.datepicker td.today.disabled.active,
+.datepicker td.today.disabled:hover.active,
+.datepicker td.today.disabled,
+.datepicker td.today:hover.disabled,
+.datepicker td.today.disabled.disabled,
+.datepicker td.today.disabled:hover.disabled,
+.datepicker td.today[disabled],
+.datepicker td.today:hover[disabled],
+.datepicker td.today.disabled[disabled],
+.datepicker td.today.disabled:hover[disabled] {
+  background-color: #fdf59a;
+}
+.datepicker td.today:active,
+.datepicker td.today:hover:active,
+.datepicker td.today.disabled:active,
+.datepicker td.today.disabled:hover:active,
+.datepicker td.today.active,
+.datepicker td.today:hover.active,
+.datepicker td.today.disabled.active,
+.datepicker td.today.disabled:hover.active {
+  background-color: #fbf069 \9;
+}
+.datepicker td.active,
+.datepicker td.active:hover,
+.datepicker td.active.disabled,
+.datepicker td.active.disabled:hover {
+  background-color: #006dcc;
+  background-image: -moz-linear-gradient(top, #0088cc, #0044cc);
+  background-image: -ms-linear-gradient(top, #0088cc, #0044cc);
+  background-image: -webkit-gradient(linear, 0 0, 0 100%, from(#0088cc), to(#0044cc));
+  background-image: -webkit-linear-gradient(top, #0088cc, #0044cc);
+  background-image: -o-linear-gradient(top, #0088cc, #0044cc);
+  background-image: linear-gradient(top, #0088cc, #0044cc);
+  background-repeat: repeat-x;
+  filter: progid:dximagetransform.microsoft.gradient(startColorstr='#0088cc', endColorstr='#0044cc', GradientType=0);
+  border-color: #0044cc #0044cc #002a80;
+  border-color: rgba(0, 0, 0, 0.1) rgba(0, 0, 0, 0.1) rgba(0, 0, 0, 0.25);
+  filter: progid:dximagetransform.microsoft.gradient(enabled=false);
+  color: #fff;
+  text-shadow: 0 -1px 0 rgba(0, 0, 0, 0.25);
 }
-.datepicker .dow,
-.datepicker .days div {
+.datepicker td.active:hover,
+.datepicker td.active:hover:hover,
+.datepicker td.active.disabled:hover,
+.datepicker td.active.disabled:hover:hover,
+.datepicker td.active:active,
+.datepicker td.active:hover:active,
+.datepicker td.active.disabled:active,
+.datepicker td.active.disabled:hover:active,
+.datepicker td.active.active,
+.datepicker td.active:hover.active,
+.datepicker td.active.disabled.active,
+.datepicker td.active.disabled:hover.active,
+.datepicker td.active.disabled,
+.datepicker td.active:hover.disabled,
+.datepicker td.active.disabled.disabled,
+.datepicker td.active.disabled:hover.disabled,
+.datepicker td.active[disabled],
+.datepicker td.active:hover[disabled],
+.datepicker td.active.disabled[disabled],
+.datepicker td.active.disabled:hover[disabled] {
+  background-color: #0044cc;
+}
+.datepicker td.active:active,
+.datepicker td.active:hover:active,
+.datepicker td.active.disabled:active,
+.datepicker td.active.disabled:hover:active,
+.datepicker td.active.active,
+.datepicker td.active:hover.active,
+.datepicker td.active.disabled.active,
+.datepicker td.active.disabled:hover.active {
+  background-color: #003399 \9;
+}
+.datepicker td span {
+  display: block;
+  width: 23%;
+  height: 54px;
+  line-height: 54px;
   float: left;
-  width: 30px;
-  line-height: 25px;
-  text-align: center;
-}
-.datepicker .dow {
-  font-weight: bold;
-  color: #6d757e;
-}
-.datepicker .calendar {
-  padding: 4px;
-}
-.datepicker .days div {
+  margin: 1%;
   cursor: pointer;
   -webkit-border-radius: 4px;
   -moz-border-radius: 4px;
   border-radius: 4px;
 }
-.datepicker .days div:hover {
-  background-color: #0064cd;
-  color: #ffffff;
+.datepicker td span:hover {
+  background: #eeeeee;
+}
+.datepicker td span.disabled,
+.datepicker td span.disabled:hover {
+  background: none;
+  color: #999999;
+  cursor: default;
+}
+.datepicker td span.active,
+.datepicker td span.active:hover,
+.datepicker td span.active.disabled,
+.datepicker td span.active.disabled:hover {
+  background-color: #006dcc;
+  background-image: -moz-linear-gradient(top, #0088cc, #0044cc);
+  background-image: -ms-linear-gradient(top, #0088cc, #0044cc);
+  background-image: -webkit-gradient(linear, 0 0, 0 100%, from(#0088cc), to(#0044cc));
+  background-image: -webkit-linear-gradient(top, #0088cc, #0044cc);
+  background-image: -o-linear-gradient(top, #0088cc, #0044cc);
+  background-image: linear-gradient(top, #0088cc, #0044cc);
+  background-repeat: repeat-x;
+  filter: progid:dximagetransform.microsoft.gradient(startColorstr='#0088cc', endColorstr='#0044cc', GradientType=0);
+  border-color: #0044cc #0044cc #002a80;
+  border-color: rgba(0, 0, 0, 0.1) rgba(0, 0, 0, 0.1) rgba(0, 0, 0, 0.25);
+  filter: progid:dximagetransform.microsoft.gradient(enabled=false);
+  color: #fff;
+  text-shadow: 0 -1px 0 rgba(0, 0, 0, 0.25);
 }
-.datepicker .overlap {
+.datepicker td span.active:hover,
+.datepicker td span.active:hover:hover,
+.datepicker td span.active.disabled:hover,
+.datepicker td span.active.disabled:hover:hover,
+.datepicker td span.active:active,
+.datepicker td span.active:hover:active,
+.datepicker td span.active.disabled:active,
+.datepicker td span.active.disabled:hover:active,
+.datepicker td span.active.active,
+.datepicker td span.active:hover.active,
+.datepicker td span.active.disabled.active,
+.datepicker td span.active.disabled:hover.active,
+.datepicker td span.active.disabled,
+.datepicker td span.active:hover.disabled,
+.datepicker td span.active.disabled.disabled,
+.datepicker td span.active.disabled:hover.disabled,
+.datepicker td span.active[disabled],
+.datepicker td span.active:hover[disabled],
+.datepicker td span.active.disabled[disabled],
+.datepicker td span.active.disabled:hover[disabled] {
+  background-color: #0044cc;
+}
+.datepicker td span.active:active,
+.datepicker td span.active:hover:active,
+.datepicker td span.active.disabled:active,
+.datepicker td span.active.disabled:hover:active,
+.datepicker td span.active.active,
+.datepicker td span.active:hover.active,
+.datepicker td span.active.disabled.active,
+.datepicker td span.active.disabled:hover.active {
+  background-color: #003399 \9;
+}
+.datepicker td span.old {
   color: #999999;
 }
-.datepicker .today {
-  background-color: #fee9cc;
+.datepicker th.switch {
+  width: 145px;
 }
-.datepicker .selected {
-  background-color: #999999;
-  color: #ffffff;
+.datepicker thead tr:first-child th,
+.datepicker tfoot tr:first-child th {
+  cursor: pointer;
+}
+.datepicker thead tr:first-child th:hover,
+.datepicker tfoot tr:first-child th:hover {
+  background: #eeeeee;
+}
+.input-append.date .add-on i,
+.input-prepend.date .add-on i {
+  display: block;
+  cursor: pointer;
+  width: 16px;
+  height: 16px;
 }
 /* =============================  Global  ============================== */
 body {
diff --git a/src/sentry/static/sentry/styles/global.min.css b/src/sentry/static/sentry/styles/global.min.css
index 4ec5a6b392..0c7b1a2230 100644
--- a/src/sentry/static/sentry/styles/global.min.css
+++ b/src/sentry/static/sentry/styles/global.min.css
@@ -824,21 +824,35 @@ a.label:hover,a.badge:hover{color:#ffffff;text-decoration:none;cursor:pointer;}
 .show{display:block;}
 .invisible{visibility:hidden;}
 .affix{position:fixed;}
-.datepicker{background-color:#ffffff;border-color:#999;border-color:rgba(0, 0, 0, 0.2);border-style:solid;border-width:1px;-webkit-border-radius:4px;-moz-border-radius:4px;border-radius:4px;-webkit-box-shadow:0 2px 4px rgba(0, 0, 0, 0.2);-moz-box-shadow:0 2px 4px rgba(0, 0, 0, 0.2);box-shadow:0 2px 4px rgba(0, 0, 0, 0.2);-webkit-background-clip:padding-box;-moz-background-clip:padding-box;background-clip:padding-box;display:none;position:absolute;z-index:900;margin-left:0;margin-right:0;margin-bottom:18px;padding-bottom:4px;width:218px;}.datepicker .nav{font-weight:bold;width:100%;padding:4px 0;background-color:#f5f5f5;color:#6d757e;border-bottom:1px solid #ddd;-webkit-box-shadow:inset 0 1px 0 #ffffff;-moz-box-shadow:inset 0 1px 0 #ffffff;box-shadow:inset 0 1px 0 #ffffff;*zoom:1;}.datepicker .nav:before,.datepicker .nav:after{display:table;content:"";line-height:0;}
-.datepicker .nav:after{clear:both;}
-.datepicker .nav span{display:block;float:left;text-align:center;height:28px;line-height:28px;position:relative;}
-.datepicker .nav .bg{width:100%;background-color:#fdf5d9;height:28px;position:absolute;top:0;left:0;-webkit-border-radius:4px;-moz-border-radius:4px;border-radius:4px;}
-.datepicker .nav .fg{width:100%;position:absolute;top:0;left:0;}
-.datepicker .button{cursor:pointer;padding:0 4px;-webkit-border-radius:4px;-moz-border-radius:4px;border-radius:4px;}.datepicker .button:hover{background-color:#6d757e;color:#ffffff;}
-.datepicker .months{float:left;margin-left:4px;}.datepicker .months .name{width:72px;padding:0;}
-.datepicker .years{float:right;margin-right:4px;}.datepicker .years .name{width:36px;padding:0;}
-.datepicker .dow,.datepicker .days div{float:left;width:30px;line-height:25px;text-align:center;}
-.datepicker .dow{font-weight:bold;color:#6d757e;}
-.datepicker .calendar{padding:4px;}
-.datepicker .days div{cursor:pointer;-webkit-border-radius:4px;-moz-border-radius:4px;border-radius:4px;}.datepicker .days div:hover{background-color:#0064cd;color:#ffffff;}
-.datepicker .overlap{color:#999999;}
-.datepicker .today{background-color:#fee9cc;}
-.datepicker .selected{background-color:#999999;color:#ffffff;}
+.datepicker{top:0;left:0;padding:4px;margin-top:1px;-webkit-border-radius:4px;-moz-border-radius:4px;border-radius:4px;}
+.datepicker:before{content:'';display:inline-block;border-left:7px solid transparent;border-right:7px solid transparent;border-bottom:7px solid #ccc;border-bottom-color:rgba(0, 0, 0, 0.2);position:absolute;top:-7px;left:6px;}
+.datepicker:after{content:'';display:inline-block;border-left:6px solid transparent;border-right:6px solid transparent;border-bottom:6px solid #ffffff;position:absolute;top:-6px;left:7px;}
+.datepicker>div{display:none;}
+.datepicker.days div.datepicker-days{display:block;}
+.datepicker.months div.datepicker-months{display:block;}
+.datepicker.years div.datepicker-years{display:block;}
+.datepicker table{margin:0;}
+.datepicker td,.datepicker th{text-align:center;width:20px;height:20px;-webkit-border-radius:4px;-moz-border-radius:4px;border-radius:4px;}
+.datepicker td.day:hover{background:#eeeeee;cursor:pointer;}
+.datepicker td.old,.datepicker td.new{color:#999999;}
+.datepicker td.disabled,.datepicker td.disabled:hover{background:none;color:#999999;cursor:default;}
+.datepicker td.today,.datepicker td.today:hover,.datepicker td.today.disabled,.datepicker td.today.disabled:hover{background-color:#fde19a;background-image:-moz-linear-gradient(top, #fdd49a, #fdf59a);background-image:-ms-linear-gradient(top, #fdd49a, #fdf59a);background-image:-webkit-gradient(linear, 0 0, 0 100%, from(#fdd49a), to(#fdf59a));background-image:-webkit-linear-gradient(top, #fdd49a, #fdf59a);background-image:-o-linear-gradient(top, #fdd49a, #fdf59a);background-image:linear-gradient(top, #fdd49a, #fdf59a);background-repeat:repeat-x;filter:progid:dximagetransform.microsoft.gradient(startColorstr='#fdd49a', endColorstr='#fdf59a', GradientType=0);border-color:#fdf59a #fdf59a #fbed50;border-color:rgba(0, 0, 0, 0.1) rgba(0, 0, 0, 0.1) rgba(0, 0, 0, 0.25);filter:progid:dximagetransform.microsoft.gradient(enabled=false);}
+.datepicker td.today:hover,.datepicker td.today:hover:hover,.datepicker td.today.disabled:hover,.datepicker td.today.disabled:hover:hover,.datepicker td.today:active,.datepicker td.today:hover:active,.datepicker td.today.disabled:active,.datepicker td.today.disabled:hover:active,.datepicker td.today.active,.datepicker td.today:hover.active,.datepicker td.today.disabled.active,.datepicker td.today.disabled:hover.active,.datepicker td.today.disabled,.datepicker td.today:hover.disabled,.datepicker td.today.disabled.disabled,.datepicker td.today.disabled:hover.disabled,.datepicker td.today[disabled],.datepicker td.today:hover[disabled],.datepicker td.today.disabled[disabled],.datepicker td.today.disabled:hover[disabled]{background-color:#fdf59a;}
+.datepicker td.today:active,.datepicker td.today:hover:active,.datepicker td.today.disabled:active,.datepicker td.today.disabled:hover:active,.datepicker td.today.active,.datepicker td.today:hover.active,.datepicker td.today.disabled.active,.datepicker td.today.disabled:hover.active{background-color:#fbf069 \9;}
+.datepicker td.active,.datepicker td.active:hover,.datepicker td.active.disabled,.datepicker td.active.disabled:hover{background-color:#006dcc;background-image:-moz-linear-gradient(top, #0088cc, #0044cc);background-image:-ms-linear-gradient(top, #0088cc, #0044cc);background-image:-webkit-gradient(linear, 0 0, 0 100%, from(#0088cc), to(#0044cc));background-image:-webkit-linear-gradient(top, #0088cc, #0044cc);background-image:-o-linear-gradient(top, #0088cc, #0044cc);background-image:linear-gradient(top, #0088cc, #0044cc);background-repeat:repeat-x;filter:progid:dximagetransform.microsoft.gradient(startColorstr='#0088cc', endColorstr='#0044cc', GradientType=0);border-color:#0044cc #0044cc #002a80;border-color:rgba(0, 0, 0, 0.1) rgba(0, 0, 0, 0.1) rgba(0, 0, 0, 0.25);filter:progid:dximagetransform.microsoft.gradient(enabled=false);color:#fff;text-shadow:0 -1px 0 rgba(0, 0, 0, 0.25);}
+.datepicker td.active:hover,.datepicker td.active:hover:hover,.datepicker td.active.disabled:hover,.datepicker td.active.disabled:hover:hover,.datepicker td.active:active,.datepicker td.active:hover:active,.datepicker td.active.disabled:active,.datepicker td.active.disabled:hover:active,.datepicker td.active.active,.datepicker td.active:hover.active,.datepicker td.active.disabled.active,.datepicker td.active.disabled:hover.active,.datepicker td.active.disabled,.datepicker td.active:hover.disabled,.datepicker td.active.disabled.disabled,.datepicker td.active.disabled:hover.disabled,.datepicker td.active[disabled],.datepicker td.active:hover[disabled],.datepicker td.active.disabled[disabled],.datepicker td.active.disabled:hover[disabled]{background-color:#0044cc;}
+.datepicker td.active:active,.datepicker td.active:hover:active,.datepicker td.active.disabled:active,.datepicker td.active.disabled:hover:active,.datepicker td.active.active,.datepicker td.active:hover.active,.datepicker td.active.disabled.active,.datepicker td.active.disabled:hover.active{background-color:#003399 \9;}
+.datepicker td span{display:block;width:23%;height:54px;line-height:54px;float:left;margin:1%;cursor:pointer;-webkit-border-radius:4px;-moz-border-radius:4px;border-radius:4px;}
+.datepicker td span:hover{background:#eeeeee;}
+.datepicker td span.disabled,.datepicker td span.disabled:hover{background:none;color:#999999;cursor:default;}
+.datepicker td span.active,.datepicker td span.active:hover,.datepicker td span.active.disabled,.datepicker td span.active.disabled:hover{background-color:#006dcc;background-image:-moz-linear-gradient(top, #0088cc, #0044cc);background-image:-ms-linear-gradient(top, #0088cc, #0044cc);background-image:-webkit-gradient(linear, 0 0, 0 100%, from(#0088cc), to(#0044cc));background-image:-webkit-linear-gradient(top, #0088cc, #0044cc);background-image:-o-linear-gradient(top, #0088cc, #0044cc);background-image:linear-gradient(top, #0088cc, #0044cc);background-repeat:repeat-x;filter:progid:dximagetransform.microsoft.gradient(startColorstr='#0088cc', endColorstr='#0044cc', GradientType=0);border-color:#0044cc #0044cc #002a80;border-color:rgba(0, 0, 0, 0.1) rgba(0, 0, 0, 0.1) rgba(0, 0, 0, 0.25);filter:progid:dximagetransform.microsoft.gradient(enabled=false);color:#fff;text-shadow:0 -1px 0 rgba(0, 0, 0, 0.25);}
+.datepicker td span.active:hover,.datepicker td span.active:hover:hover,.datepicker td span.active.disabled:hover,.datepicker td span.active.disabled:hover:hover,.datepicker td span.active:active,.datepicker td span.active:hover:active,.datepicker td span.active.disabled:active,.datepicker td span.active.disabled:hover:active,.datepicker td span.active.active,.datepicker td span.active:hover.active,.datepicker td span.active.disabled.active,.datepicker td span.active.disabled:hover.active,.datepicker td span.active.disabled,.datepicker td span.active:hover.disabled,.datepicker td span.active.disabled.disabled,.datepicker td span.active.disabled:hover.disabled,.datepicker td span.active[disabled],.datepicker td span.active:hover[disabled],.datepicker td span.active.disabled[disabled],.datepicker td span.active.disabled:hover[disabled]{background-color:#0044cc;}
+.datepicker td span.active:active,.datepicker td span.active:hover:active,.datepicker td span.active.disabled:active,.datepicker td span.active.disabled:hover:active,.datepicker td span.active.active,.datepicker td span.active:hover.active,.datepicker td span.active.disabled.active,.datepicker td span.active.disabled:hover.active{background-color:#003399 \9;}
+.datepicker td span.old{color:#999999;}
+.datepicker th.switch{width:145px;}
+.datepicker thead tr:first-child th,.datepicker tfoot tr:first-child th{cursor:pointer;}
+.datepicker thead tr:first-child th:hover,.datepicker tfoot tr:first-child th:hover{background:#eeeeee;}
+.input-append.date .add-on i,.input-prepend.date .add-on i{display:block;cursor:pointer;width:16px;height:16px;}
 body{margin:0;font-family:"Helvetica Neue",Helvetica,Arial,sans-serif;font-size:13px;line-height:20px;color:#6d757e;-webkit-font-smoothing:antialiased;font-family:"helvetica neue",helvetica,sans-serif;background:#6d757e;}
 .container{width:auto;}
 a{color:#4593de;text-decoration:none;-webkit-transition:color linear 0.2s;-moz-transition:color linear 0.2s;-o-transition:color linear 0.2s;transition:color linear 0.2s;}
diff --git a/src/sentry/templates/sentry/groups/group_list.html b/src/sentry/templates/sentry/groups/group_list.html
index 67463ff6b0..0ff4469644 100644
--- a/src/sentry/templates/sentry/groups/group_list.html
+++ b/src/sentry/templates/sentry/groups/group_list.html
@@ -118,10 +118,10 @@
             {% endfor %}
             <div class="input">
               <div class="inline-inputs">
-                <input data-datepicker="datepicker" name="df" class="date" type="text" value="{% if from_date %}{{ from_date|date:"Y-m-d" }}{% endif %}" />
+                <input data-toggle="datepicker"  data-date-format="yyyy-mm-dd"name="df" class="date" type="text" value="{% if from_date %}{{ from_date|date:"Y-m-d" }}{% endif %}" />
                 <input class="time" type="text" name="tf" value="{% if from_date %}{{ from_date|time:"h:i A" }}{% endif %}" />
                 to
-                <input data-datepicker="datepicker" name="dt" class="date" type="text" value="{% if to_date %}{{ to_date|date:"Y-m-d" }}{% endif %}" />
+                <input data-toggle="datepicker" data-date-format="yyyy-mm-dd" name="dt" class="date" type="text" value="{% if to_date %}{{ to_date|date:"Y-m-d" }}{% endif %}" />
                 <input class="time" type="text" name="tt" value="{% if to_date %}{{ to_date|time:"h:i A" }}{% endif %}" />
               </div>
             </div>
diff --git a/src/sentry/templates/sentry/layout.html b/src/sentry/templates/sentry/layout.html
index e720b3ba11..a55bf630ca 100644
--- a/src/sentry/templates/sentry/layout.html
+++ b/src/sentry/templates/sentry/layout.html
@@ -123,6 +123,7 @@
                 clippy_path: '{% url sentry-media "sentry" "clippy.swf" %}',
                 keep_text: true
             });
+            $('input[data-toggle="datepicker"]').datepicker();
             $('.tip').tooltip();
             $('.nav-tabs .active a').tab('show')
             $('.sparkline').sparkline('html', {enableTagOptions: true});
