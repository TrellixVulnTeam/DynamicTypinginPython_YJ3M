commit 456d94114f6d33c54ba97212a903fe067f477057
Author: Megan Heskett <meg.heskett@gmail.com>
Date:   Fri Mar 13 11:55:46 2020 -0700

    fix(ui): Fix invite members without access (#17532)

diff --git a/src/sentry/static/sentry/app/components/modals/inviteMembersModal/index.tsx b/src/sentry/static/sentry/app/components/modals/inviteMembersModal/index.tsx
index db471dc171..3d3b5b8188 100644
--- a/src/sentry/static/sentry/app/components/modals/inviteMembersModal/index.tsx
+++ b/src/sentry/static/sentry/app/components/modals/inviteMembersModal/index.tsx
@@ -285,7 +285,7 @@ class InviteMembersModal extends AsyncComponent<Props, State> {
   }
 
   get willInvite() {
-    return this.props.organization.access.includes('member:write');
+    return this.props.organization.access?.includes('member:write');
   }
 
   get inviteButtonLabel() {
diff --git a/tests/js/spec/components/modals/inviteMembersModal.spec.jsx b/tests/js/spec/components/modals/inviteMembersModal.spec.jsx
index c648c47d2c..6d10ed6cba 100644
--- a/tests/js/spec/components/modals/inviteMembersModal.spec.jsx
+++ b/tests/js/spec/components/modals/inviteMembersModal.spec.jsx
@@ -55,6 +55,21 @@ describe('InviteMembersModal', function() {
     expect(wrapper.find('RoleSelectControl Value').text()).toBe('Member');
   });
 
+  it('renders without organization.access', async function() {
+    const organization = TestStubs.Organization({access: undefined});
+    const wrapper = mountWithTheme(
+      <InviteMembersModal
+        Body={Modal.Body}
+        Header={Modal.Header}
+        Footer={Modal.Footer}
+        organization={organization}
+      />,
+      TestStubs.routerContext()
+    );
+
+    expect(wrapper.find('StyledInviteRow').exists()).toBe(true);
+  });
+
   it('can add a second row', async function() {
     const wrapper = mountWithTheme(
       <InviteMembersModal
