commit 4db46b4ad1f12138a7f570e792243669f39b910c
Author: Lyn Nagara <lyn.nagara@gmail.com>
Date:   Thu Jun 6 12:15:17 2019 -0700

    ref(sentry10): Remove sentry9 group details code (#13533)

diff --git a/src/sentry/static/sentry/app/routes.jsx b/src/sentry/static/sentry/app/routes.jsx
index 73c56eae48..c768179cd0 100644
--- a/src/sentry/static/sentry/app/routes.jsx
+++ b/src/sentry/static/sentry/app/routes.jsx
@@ -30,14 +30,6 @@ import ProjectDetails from 'app/views/projectDetails';
 import ProjectEnvironments from 'app/views/projectEnvironments';
 import ProjectEventRedirect from 'app/views/projectEventRedirect';
 import ProjectGettingStarted from 'app/views/projectInstall/gettingStarted';
-import ProjectGroupDetails from 'app/views/groupDetails/project';
-import ProjectGroupEventDetails from 'app/views/groupDetails/project/groupEventDetails';
-import ProjectGroupEvents from 'app/views/groupDetails/project/groupEvents';
-import ProjectGroupMergedView from 'app/views/groupDetails/shared/groupMerged';
-import ProjectGroupSimilarView from 'app/views/groupDetails/shared/groupSimilar';
-import ProjectGroupTagValues from 'app/views/groupDetails/project/groupTagValues';
-import ProjectGroupTags from 'app/views/groupDetails/project/groupTags';
-import ProjectGroupUserFeedback from 'app/views/groupDetails/project/groupUserFeedback';
 import ProjectInstallOverview from 'app/views/projectInstall/overview';
 import ProjectInstallPlatform from 'app/views/projectInstall/platform';
 import ProjectPluginDetails from 'app/views/projectPluginDetails';
@@ -975,69 +967,69 @@ function routes() {
           <Route
             path="/organizations/:orgId/issues/:groupId/"
             componentPromise={() =>
-              import(/* webpackChunkName: "OrganizationGroupDetails" */ './views/groupDetails/organization')
+              import(/* webpackChunkName: "OrganizationGroupDetails" */ './views/organizationGroupDetails')
             }
             component={errorHandler(LazyLoad)}
           >
             <IndexRoute
               componentPromise={() =>
-                import(/* webpackChunkName: "OrganizationGroupEventDetails" */ './views/groupDetails/organization/groupEventDetails')
+                import(/* webpackChunkName: "OrganizationGroupEventDetails" */ './views/organizationGroupDetails/groupEventDetails')
               }
               component={errorHandler(LazyLoad)}
             />
             <Route
               path="/organizations/:orgId/issues/:groupId/activity/"
               componentPromise={() =>
-                import(/* webpackChunkName: "GroupActivity" */ './views/groupDetails/shared/groupActivity')
+                import(/* webpackChunkName: "GroupActivity" */ './views/organizationGroupDetails/groupActivity')
               }
               component={errorHandler(LazyLoad)}
             />
             <Route
               path="/organizations/:orgId/issues/:groupId/events/:eventId/"
               componentPromise={() =>
-                import(/* webpackChunkName: "OrganizationGroupEventDetails" */ './views/groupDetails/organization/groupEventDetails')
+                import(/* webpackChunkName: "OrganizationGroupEventDetails" */ './views/organizationGroupDetails/groupEventDetails')
               }
               component={errorHandler(LazyLoad)}
             />
             <Route
               path="/organizations/:orgId/issues/:groupId/events/"
               componentPromise={() =>
-                import(/* webpackChunkName: "OrganizationGroupEvents" */ './views/groupDetails/organization/groupEvents')
+                import(/* webpackChunkName: "OrganizationGroupEvents" */ './views/organizationGroupDetails/groupEvents')
               }
               component={errorHandler(LazyLoad)}
             />
             <Route
               path="/organizations/:orgId/issues/:groupId/tags/"
               componentPromise={() =>
-                import(/* webpackChunkName: "OrganizationGroupTags" */ './views/groupDetails/organization/groupTags')
+                import(/* webpackChunkName: "OrganizationGroupTags" */ './views/organizationGroupDetails/groupTags')
               }
               component={errorHandler(LazyLoad)}
             />
             <Route
               path="/organizations/:orgId/issues/:groupId/tags/:tagKey/"
               componentPromise={() =>
-                import(/* webpackChunkName: "OrganizationGroupTagsValues" */ './views/groupDetails/organization/groupTagValues')
+                import(/* webpackChunkName: "OrganizationGroupTagsValues" */ './views/organizationGroupDetails/groupTagValues')
               }
               component={errorHandler(LazyLoad)}
             />
             <Route
               path="/organizations/:orgId/issues/:groupId/feedback/"
               componentPromise={() =>
-                import(/* webpackChunkName: "OrganizationGroupUserFeedback" */ './views/groupDetails/organization/groupUserFeedback')
+                import(/* webpackChunkName: "OrganizationGroupUserFeedback" */ './views/organizationGroupDetails/groupUserFeedback')
               }
               component={errorHandler(LazyLoad)}
             />
             <Route
               path="/organizations/:orgId/issues/:groupId/similar/"
               componentPromise={() =>
-                import(/* webpackChunkName: "GroupSimilarView" */ './views/groupDetails/shared/groupSimilar')
+                import(/* webpackChunkName: "GroupSimilarView" */ './views/organizationGroupDetails/groupSimilar')
               }
               component={errorHandler(LazyLoad)}
             />
             <Route
               path="/organizations/:orgId/issues/:groupId/merged/"
               componentPromise={() =>
-                import(/* webpackChunkName: "GroupSimilarView" */ './views/groupDetails/shared/groupMerged')
+                import(/* webpackChunkName: "GroupSimilarView" */ './views/organizationGroupDetails/groupMerged')
               }
               component={errorHandler(LazyLoad)}
             />
@@ -1325,32 +1317,35 @@ function routes() {
             {projectSettingsRoutes}
           </Route>
           <Redirect from="group/:groupId/" to="issues/:groupId/" />
-          <Route
-            path="issues/:groupId/"
-            component={errorHandler(ProjectGroupDetails)}
-            ignoreScrollBehavior
-          >
-            <IndexRoute component={errorHandler(ProjectGroupEventDetails)} />
-
-            <Route
-              path="activity/"
-              componentPromise={() =>
-                import(/* webpackChunkName: "GroupActivity" */ './views/groupDetails/shared/groupActivity')
-              }
-              component={errorHandler(LazyLoad)}
-            />
-
-            <Route
-              path="events/:eventId/"
-              component={errorHandler(ProjectGroupEventDetails)}
-            />
-            <Route path="events/" component={errorHandler(ProjectGroupEvents)} />
-            <Route path="tags/" component={errorHandler(ProjectGroupTags)} />
-            <Route path="tags/:tagKey/" component={errorHandler(ProjectGroupTagValues)} />
-            <Route path="feedback/" component={errorHandler(ProjectGroupUserFeedback)} />
-            <Route path="similar/" component={errorHandler(ProjectGroupSimilarView)} />
-            <Route path="merged/" component={errorHandler(ProjectGroupMergedView)} />
-          </Route>
+          <Redirect from="issues/:groupId/" to="/organizations/:orgId/issues/:groupId/" />
+          <Redirect
+            from="issues/:groupId/events/"
+            to="/organizations/:orgId/issues/:groupId/events/"
+          />
+          <Redirect
+            from="issues/:groupId/events/:eventId/"
+            to="/organizations/:orgId/issues/:groupId/events/:eventId/"
+          />
+          <Redirect
+            from="issues/:groupId/tags/"
+            to="/organizations/:orgId/issues/:groupId/tags/"
+          />
+          <Redirect
+            from="issues/:groupId/tags/:tagKey/"
+            to="/organizations/:orgId/issues/:groupId/tags/:tagKey/"
+          />
+          <Redirect
+            from="issues/:groupId/feedback/"
+            to="/organizations/:orgId/issues/:groupId/feedback/"
+          />
+          <Redirect
+            from="issues/:groupId/similar/"
+            to="/organizations/:orgId/issues/:groupId/similar/"
+          />
+          <Redirect
+            from="issues/:groupId/merged/"
+            to="/organizations/:orgId/issues/:groupId/merged/"
+          />
           <Route path="events/:eventId/" component={errorHandler(ProjectEventRedirect)} />
         </Route>
       </Route>
diff --git a/src/sentry/static/sentry/app/views/groupDetails/organization/groupEventDetails.jsx b/src/sentry/static/sentry/app/views/groupDetails/organization/groupEventDetails.jsx
deleted file mode 100644
index a167b78db3..0000000000
--- a/src/sentry/static/sentry/app/views/groupDetails/organization/groupEventDetails.jsx
+++ /dev/null
@@ -1,14 +0,0 @@
-import React from 'react';
-import withGlobalSelection from 'app/utils/withGlobalSelection';
-import OrganizationEnvironmentStore from 'app/stores/organizationEnvironmentsStore';
-
-import GroupEventDetails from '../shared/groupEventDetails';
-
-export default withGlobalSelection(props => {
-  const {selection, ...otherProps} = props;
-  const environments = OrganizationEnvironmentStore.getActive().filter(env =>
-    selection.environments.includes(env.name)
-  );
-
-  return <GroupEventDetails {...otherProps} environments={environments} />;
-});
diff --git a/src/sentry/static/sentry/app/views/groupDetails/organization/groupTagValues.jsx b/src/sentry/static/sentry/app/views/groupDetails/organization/groupTagValues.jsx
deleted file mode 100644
index f12f2a3b16..0000000000
--- a/src/sentry/static/sentry/app/views/groupDetails/organization/groupTagValues.jsx
+++ /dev/null
@@ -1,20 +0,0 @@
-import React from 'react';
-import PropTypes from 'prop-types';
-import SentryTypes from 'app/sentryTypes';
-
-import GroupTagValues from '../shared/groupTagValues';
-
-class OrganizationGroupTagValues extends React.Component {
-  static propTypes = {
-    group: SentryTypes.Group.isRequired,
-    location: PropTypes.object,
-  };
-
-  render() {
-    // Clone so we don't have props mutate in place.
-    const query = {...this.props.location.query};
-    return <GroupTagValues {...this.props} query={query} />;
-  }
-}
-
-export default OrganizationGroupTagValues;
diff --git a/src/sentry/static/sentry/app/views/groupDetails/organization/groupTags.jsx b/src/sentry/static/sentry/app/views/groupDetails/organization/groupTags.jsx
deleted file mode 100644
index 56ff2a2daf..0000000000
--- a/src/sentry/static/sentry/app/views/groupDetails/organization/groupTags.jsx
+++ /dev/null
@@ -1,13 +0,0 @@
-import React from 'react';
-import SentryTypes from 'app/sentryTypes';
-import GroupTags from '../shared/groupTags';
-
-export default class OrganizationGroupTags extends React.Component {
-  static propTypes = {
-    group: SentryTypes.Group.isRequired,
-  };
-
-  render() {
-    return <GroupTags group={this.props.group} params={this.props.params} query={{}} />;
-  }
-}
diff --git a/src/sentry/static/sentry/app/views/groupDetails/organization/groupUserFeedback.jsx b/src/sentry/static/sentry/app/views/groupDetails/organization/groupUserFeedback.jsx
deleted file mode 100644
index e4414a9415..0000000000
--- a/src/sentry/static/sentry/app/views/groupDetails/organization/groupUserFeedback.jsx
+++ /dev/null
@@ -1,20 +0,0 @@
-import React from 'react';
-
-import SentryTypes from 'app/sentryTypes';
-
-import GroupUserFeedback from '../shared/groupUserFeedback';
-
-class OrganizationGroupUserFeedback extends React.Component {
-  static propTypes = {
-    group: SentryTypes.Group.isRequired,
-  };
-
-  render() {
-    const {group} = this.props;
-    const query = {...this.props.params};
-
-    return <GroupUserFeedback group={group} query={query} />;
-  }
-}
-
-export default OrganizationGroupUserFeedback;
diff --git a/src/sentry/static/sentry/app/views/groupDetails/project/groupEventDetails.jsx b/src/sentry/static/sentry/app/views/groupDetails/project/groupEventDetails.jsx
deleted file mode 100644
index 9a3b345802..0000000000
--- a/src/sentry/static/sentry/app/views/groupDetails/project/groupEventDetails.jsx
+++ /dev/null
@@ -1,11 +0,0 @@
-import React from 'react';
-
-import withEnvironmentInQueryString from 'app/utils/withEnvironmentInQueryString';
-import GroupEventDetails from '../shared/groupEventDetails';
-
-export default withEnvironmentInQueryString(props => {
-  const {environment, ...otherProps} = props;
-  return (
-    <GroupEventDetails {...otherProps} environments={environment ? [environment] : []} />
-  );
-});
diff --git a/src/sentry/static/sentry/app/views/groupDetails/project/groupEvents.jsx b/src/sentry/static/sentry/app/views/groupDetails/project/groupEvents.jsx
deleted file mode 100644
index d41e021df0..0000000000
--- a/src/sentry/static/sentry/app/views/groupDetails/project/groupEvents.jsx
+++ /dev/null
@@ -1,233 +0,0 @@
-import PropTypes from 'prop-types';
-import {browserHistory} from 'react-router';
-import React from 'react';
-import createReactClass from 'create-react-class';
-import {isEqual, omit} from 'lodash';
-import qs from 'query-string';
-
-import {Panel, PanelBody} from 'app/components/panels';
-import {
-  getQueryEnvironment,
-  getQueryStringWithEnvironment,
-  getQueryStringWithoutEnvironment,
-} from 'app/utils/queryString';
-import {setActiveEnvironmentName} from 'app/actionCreators/environments';
-import {t, tct} from 'app/locale';
-import withApi from 'app/utils/withApi';
-import EmptyStateWarning from 'app/components/emptyStateWarning';
-import EventsTable from 'app/components/eventsTable/eventsTable';
-import LoadingError from 'app/components/loadingError';
-import LoadingIndicator from 'app/components/loadingIndicator';
-import Pagination from 'app/components/pagination';
-import SearchBar from 'app/components/searchBar';
-import SentryTypes from 'app/sentryTypes';
-import parseApiError from 'app/utils/parseApiError';
-import withEnvironmentInQueryString from 'app/utils/withEnvironmentInQueryString';
-
-const GroupEvents = createReactClass({
-  displayName: 'GroupEvents',
-
-  propTypes: {
-    api: PropTypes.object,
-    group: SentryTypes.Group,
-    environment: SentryTypes.Environment,
-  },
-
-  getInitialState() {
-    const queryParams = this.props.location.query;
-
-    const initialState = {
-      eventList: [],
-      loading: true,
-      error: false,
-      pageLinks: '',
-      query: queryParams.query || '',
-      environment: this.props.environment,
-    };
-
-    // If an environment is specified in the query, update the global environment
-    // Otherwise if a global environment is present update the query
-    const queryEnvironment = getQueryEnvironment(queryParams.query || '');
-
-    if (queryEnvironment) {
-      setActiveEnvironmentName(queryEnvironment);
-    } else if (this.props.environment) {
-      const newQuery = getQueryStringWithEnvironment(
-        initialState.query,
-        initialState.environment.name
-      );
-      this.handleSearch(newQuery);
-    }
-
-    return initialState;
-  },
-
-  componentWillMount() {
-    this.fetchData();
-  },
-
-  componentWillReceiveProps(nextProps) {
-    // omit when environment changes in query string since we handle that separately
-    const searchHasChanged = !isEqual(
-      omit(qs.parse(nextProps.location.search), 'environment'),
-      omit(qs.parse(this.props.location.search), 'environment')
-    );
-
-    if (searchHasChanged) {
-      const queryParams = nextProps.location.query;
-
-      this.setState(
-        {
-          query: queryParams.query,
-        },
-        this.fetchData
-      );
-    }
-
-    // If environment has changed, refetch data
-    if (nextProps.environment !== this.props.environment) {
-      this.setState(
-        {
-          environment: nextProps.environment,
-        },
-        this.fetchData
-      );
-    }
-  },
-
-  handleSearch(query) {
-    const queryEnvironment = getQueryEnvironment(query);
-
-    if (queryEnvironment) {
-      setActiveEnvironmentName(queryEnvironment);
-    }
-
-    query = getQueryStringWithoutEnvironment(query);
-    const targetQueryParams = {...this.props.location.query};
-    targetQueryParams.query = query;
-    const {groupId, orgId, projectId} = this.props.params;
-
-    browserHistory.push({
-      pathname: `/${orgId}/${projectId}/issues/${groupId}/events/`,
-      query: targetQueryParams,
-    });
-  },
-
-  fetchData() {
-    this.setState({
-      loading: true,
-      error: false,
-    });
-
-    const query = {...this.props.location.query, limit: 50, query: this.state.query};
-
-    if (this.state.environment) {
-      query.environment = this.state.environment.name;
-    } else {
-      delete query.environment;
-    }
-
-    this.props.api.request(`/issues/${this.props.params.groupId}/events/`, {
-      query,
-      method: 'GET',
-      success: (data, _, jqXHR) => {
-        this.setState({
-          eventList: data,
-          error: false,
-          loading: false,
-          pageLinks: jqXHR.getResponseHeader('Link'),
-        });
-      },
-      error: err => {
-        this.setState({
-          error: parseApiError(err),
-          loading: false,
-        });
-      },
-    });
-  },
-
-  renderNoQueryResults() {
-    const {environment} = this.state;
-    const message = environment
-      ? tct('Sorry, no events match your search query in the [env] environment.', {
-          env: environment.displayName,
-        })
-      : t('Sorry, no events match your search query.');
-
-    return (
-      <EmptyStateWarning>
-        <p>{message}</p>
-      </EmptyStateWarning>
-    );
-  },
-
-  renderEmpty() {
-    const {environment} = this.state;
-    const message = environment
-      ? tct("There don't seem to be any events in the [env] environment yet.", {
-          env: environment.displayName,
-        })
-      : t("There don't seem to be any events yet.");
-    return (
-      <EmptyStateWarning>
-        <p>{t(message)}</p>
-      </EmptyStateWarning>
-    );
-  },
-
-  renderResults() {
-    const {group, params} = this.props;
-    const tagList = group.tags.filter(tag => tag.key !== 'user') || [];
-
-    return (
-      <EventsTable
-        tagList={tagList}
-        events={this.state.eventList}
-        orgId={params.orgId}
-        projectId={params.projectId}
-        groupId={params.groupId}
-      />
-    );
-  },
-
-  renderBody() {
-    let body;
-
-    if (this.state.loading) {
-      body = <LoadingIndicator />;
-    } else if (this.state.error) {
-      body = <LoadingError message={this.state.error} onRetry={this.fetchData} />;
-    } else if (this.state.eventList.length > 0) {
-      body = this.renderResults();
-    } else if (this.state.query && this.state.query !== '') {
-      body = this.renderNoQueryResults();
-    } else {
-      body = this.renderEmpty();
-    }
-
-    return body;
-  },
-
-  render() {
-    return (
-      <div>
-        <div style={{marginBottom: 20}}>
-          <SearchBar
-            defaultQuery=""
-            placeholder={t('search event id, message, or tags')}
-            query={this.state.query}
-            onSearch={this.handleSearch}
-          />
-        </div>
-        <Panel className="event-list">
-          <PanelBody>{this.renderBody()}</PanelBody>
-        </Panel>
-        <Pagination pageLinks={this.state.pageLinks} />
-      </div>
-    );
-  },
-});
-
-export {GroupEvents}; // For tests
-export default withApi(withEnvironmentInQueryString(GroupEvents));
diff --git a/src/sentry/static/sentry/app/views/groupDetails/project/groupTagValues.jsx b/src/sentry/static/sentry/app/views/groupDetails/project/groupTagValues.jsx
deleted file mode 100644
index a19e7fd439..0000000000
--- a/src/sentry/static/sentry/app/views/groupDetails/project/groupTagValues.jsx
+++ /dev/null
@@ -1,17 +0,0 @@
-import React from 'react';
-import SentryTypes from 'app/sentryTypes';
-import withEnvironmentInQueryString from 'app/utils/withEnvironmentInQueryString';
-import GroupTagValues from '../shared/groupTagValues';
-
-class ProjectGroupTagValues extends React.Component {
-  static propTypes = {
-    environment: SentryTypes.Environment,
-  };
-  render() {
-    const {environment} = this.props;
-    const query = environment ? {environment: environment.name} : {};
-    return <GroupTagValues {...this.props} query={query} />;
-  }
-}
-
-export default withEnvironmentInQueryString(ProjectGroupTagValues);
diff --git a/src/sentry/static/sentry/app/views/groupDetails/project/groupTags.jsx b/src/sentry/static/sentry/app/views/groupDetails/project/groupTags.jsx
deleted file mode 100644
index 7aee98eae1..0000000000
--- a/src/sentry/static/sentry/app/views/groupDetails/project/groupTags.jsx
+++ /dev/null
@@ -1,39 +0,0 @@
-import React from 'react';
-import SentryTypes from 'app/sentryTypes';
-import withEnvironmentInQueryString from 'app/utils/withEnvironmentInQueryString';
-import GroupTags from '../shared/groupTags';
-
-class ProjectGroupTags extends React.Component {
-  static propTypes = {
-    group: SentryTypes.Group.isRequired,
-    environment: SentryTypes.Environment,
-  };
-
-  constructor(props) {
-    super(props);
-    this.state = {
-      query: this.getQueryFromEnvironment(props.environment),
-    };
-  }
-  componentWillReceiveProps(nextProps) {
-    if (nextProps.environment !== this.props.environment) {
-      this.setState({query: this.getQueryFromEnvironment(nextProps.environment)});
-    }
-  }
-
-  getQueryFromEnvironment(environment) {
-    return environment ? {environment: environment.name} : {};
-  }
-
-  render() {
-    return (
-      <GroupTags
-        group={this.props.group}
-        params={this.props.params}
-        query={this.state.query}
-      />
-    );
-  }
-}
-
-export default withEnvironmentInQueryString(ProjectGroupTags);
diff --git a/src/sentry/static/sentry/app/views/groupDetails/project/groupUserFeedback.jsx b/src/sentry/static/sentry/app/views/groupDetails/project/groupUserFeedback.jsx
deleted file mode 100644
index 3d6b595591..0000000000
--- a/src/sentry/static/sentry/app/views/groupDetails/project/groupUserFeedback.jsx
+++ /dev/null
@@ -1,26 +0,0 @@
-import React from 'react';
-
-import SentryTypes from 'app/sentryTypes';
-import withEnvironmentInQueryString from 'app/utils/withEnvironmentInQueryString';
-
-import GroupUserFeedback from '../shared/groupUserFeedback';
-
-class ProjectGroupUserFeedback extends React.Component {
-  static propTypes = {
-    group: SentryTypes.Group.isRequired,
-    environment: SentryTypes.Environment,
-  };
-
-  render() {
-    const {group, environment} = this.props;
-    const query = {...this.props.params, ...this.props.location.query};
-
-    if (environment) {
-      query.environment = environment.name;
-    }
-
-    return <GroupUserFeedback group={group} query={query} />;
-  }
-}
-
-export default withEnvironmentInQueryString(ProjectGroupUserFeedback);
diff --git a/src/sentry/static/sentry/app/views/groupDetails/project/index.jsx b/src/sentry/static/sentry/app/views/groupDetails/project/index.jsx
deleted file mode 100644
index fddee8f164..0000000000
--- a/src/sentry/static/sentry/app/views/groupDetails/project/index.jsx
+++ /dev/null
@@ -1,58 +0,0 @@
-import React from 'react';
-import PropTypes from 'prop-types';
-import SentryTypes from 'app/sentryTypes';
-import {browserHistory} from 'react-router';
-
-import withEnvironment from 'app/utils/withEnvironment';
-import {analytics} from 'app/utils/analytics';
-import GroupDetails from '../shared/groupDetails';
-
-class ProjectGroupDetails extends React.Component {
-  static propTypes = {
-    setProjectNavSection: PropTypes.func,
-    environment: SentryTypes.Environment,
-  };
-
-  static contextTypes = {
-    organization: SentryTypes.Organization,
-    project: SentryTypes.Project,
-  };
-
-  componentDidMount() {
-    // Redirect any Sentry 10 user that has followed an old link and ended up here
-    const {
-      location,
-      params: {orgId, groupId, eventId},
-    } = this.props;
-    const hasSentry10 = new Set(this.context.organization.features).has('sentry10');
-
-    if (hasSentry10) {
-      const redirectPath = eventId
-        ? `/organizations/${orgId}/issues/${groupId}/events/${eventId}/${location.search}`
-        : `/organizations/${orgId}/issues/${groupId}/${location.search}`;
-
-      browserHistory.replace(redirectPath);
-    }
-
-    this.props.setProjectNavSection('stream');
-    analytics('issue_page.viewed', {
-      group_id: parseInt(this.props.params.groupId, 10),
-      org_id: parseInt(this.context.organization.id, 10),
-    });
-  }
-
-  render() {
-    // eslint-disable-next-line no-unused-vars
-    const {setProjectNavSection, environment, ...props} = this.props;
-
-    return (
-      <GroupDetails
-        project={this.context.project}
-        environments={environment ? [environment.name] : []}
-        {...props}
-      />
-    );
-  }
-}
-
-export default withEnvironment(ProjectGroupDetails);
diff --git a/src/sentry/static/sentry/app/views/groupDetails/shared/actions.jsx b/src/sentry/static/sentry/app/views/organizationGroupDetails/actions.jsx
similarity index 100%
rename from src/sentry/static/sentry/app/views/groupDetails/shared/actions.jsx
rename to src/sentry/static/sentry/app/views/organizationGroupDetails/actions.jsx
diff --git a/src/sentry/static/sentry/app/views/groupDetails/shared/constants.jsx b/src/sentry/static/sentry/app/views/organizationGroupDetails/constants.jsx
similarity index 100%
rename from src/sentry/static/sentry/app/views/groupDetails/shared/constants.jsx
rename to src/sentry/static/sentry/app/views/organizationGroupDetails/constants.jsx
diff --git a/src/sentry/static/sentry/app/views/groupDetails/shared/eventToolbar.jsx b/src/sentry/static/sentry/app/views/organizationGroupDetails/eventToolbar.jsx
similarity index 100%
rename from src/sentry/static/sentry/app/views/groupDetails/shared/eventToolbar.jsx
rename to src/sentry/static/sentry/app/views/organizationGroupDetails/eventToolbar.jsx
diff --git a/src/sentry/static/sentry/app/views/groupDetails/shared/groupActivity.jsx b/src/sentry/static/sentry/app/views/organizationGroupDetails/groupActivity.jsx
similarity index 98%
rename from src/sentry/static/sentry/app/views/groupDetails/shared/groupActivity.jsx
rename to src/sentry/static/sentry/app/views/organizationGroupDetails/groupActivity.jsx
index eed2d241fb..37a7e238c9 100644
--- a/src/sentry/static/sentry/app/views/groupDetails/shared/groupActivity.jsx
+++ b/src/sentry/static/sentry/app/views/organizationGroupDetails/groupActivity.jsx
@@ -14,7 +14,6 @@ import ActivityAuthor from 'app/components/activity/author';
 import ActivityItem from 'app/components/activity/item';
 import ConfigStore from 'app/stores/configStore';
 import ErrorBoundary from 'app/components/errorBoundary';
-import GroupActivityItem from 'app/views/groupDetails/shared/groupActivityItem';
 import MemberListStore from 'app/stores/memberListStore';
 import Note from 'app/components/activity/note';
 import NoteInputWithStorage from 'app/components/activity/note/inputWithStorage';
@@ -23,6 +22,8 @@ import SentryTypes from 'app/sentryTypes';
 import withApi from 'app/utils/withApi';
 import withOrganization from 'app/utils/withOrganization';
 
+import GroupActivityItem from './groupActivityItem';
+
 function makeDefaultErrorJson() {
   return {detail: t('Unknown error. Please try again.')};
 }
diff --git a/src/sentry/static/sentry/app/views/groupDetails/shared/groupActivityItem.jsx b/src/sentry/static/sentry/app/views/organizationGroupDetails/groupActivityItem.jsx
similarity index 100%
rename from src/sentry/static/sentry/app/views/groupDetails/shared/groupActivityItem.jsx
rename to src/sentry/static/sentry/app/views/organizationGroupDetails/groupActivityItem.jsx
diff --git a/src/sentry/static/sentry/app/views/groupDetails/shared/groupDetails.jsx b/src/sentry/static/sentry/app/views/organizationGroupDetails/groupDetails.jsx
similarity index 98%
rename from src/sentry/static/sentry/app/views/groupDetails/shared/groupDetails.jsx
rename to src/sentry/static/sentry/app/views/organizationGroupDetails/groupDetails.jsx
index bd4fd93da4..a07ad99aa5 100644
--- a/src/sentry/static/sentry/app/views/groupDetails/shared/groupDetails.jsx
+++ b/src/sentry/static/sentry/app/views/organizationGroupDetails/groupDetails.jsx
@@ -17,8 +17,8 @@ import LoadingIndicator from 'app/components/loadingIndicator';
 import ProjectsStore from 'app/stores/projectsStore';
 import SentryTypes from 'app/sentryTypes';
 
-import {ERROR_TYPES} from '../shared/constants';
-import GroupHeader from '../shared/header';
+import {ERROR_TYPES} from './constants';
+import GroupHeader from './header';
 
 const GroupDetails = createReactClass({
   displayName: 'GroupDetails',
diff --git a/src/sentry/static/sentry/app/views/groupDetails/shared/groupEventDetails.jsx b/src/sentry/static/sentry/app/views/organizationGroupDetails/groupEventDetails.jsx
similarity index 90%
rename from src/sentry/static/sentry/app/views/groupDetails/shared/groupEventDetails.jsx
rename to src/sentry/static/sentry/app/views/organizationGroupDetails/groupEventDetails.jsx
index cacb52cd5a..3a793bb33c 100644
--- a/src/sentry/static/sentry/app/views/groupDetails/shared/groupEventDetails.jsx
+++ b/src/sentry/static/sentry/app/views/organizationGroupDetails/groupEventDetails.jsx
@@ -13,8 +13,10 @@ import ResolutionBox from 'app/components/resolutionBox';
 import MutedBox from 'app/components/mutedBox';
 import withApi from 'app/utils/withApi';
 import withOrganization from 'app/utils/withOrganization';
+import withGlobalSelection from 'app/utils/withGlobalSelection';
 import fetchSentryAppInstallations from 'app/utils/fetchSentryAppInstallations';
 import {fetchSentryAppComponents} from 'app/actionCreators/sentryAppComponents';
+import OrganizationEnvironmentsStore from 'app/stores/organizationEnvironmentsStore';
 
 import GroupEventToolbar from './eventToolbar';
 import {fetchGroupEventAndMarkSeen, getEventEnvironment} from './utils';
@@ -176,4 +178,17 @@ class GroupEventDetails extends React.Component {
   }
 }
 
-export default withApi(withOrganization(GroupEventDetails));
+export {GroupEventDetails};
+
+export default withApi(
+  withOrganization(
+    withGlobalSelection(props => {
+      const {selection, ...otherProps} = props;
+      const environments = OrganizationEnvironmentsStore.getActive().filter(env =>
+        selection.environments.includes(env.name)
+      );
+
+      return <GroupEventDetails {...otherProps} environments={environments} />;
+    })
+  )
+);
diff --git a/src/sentry/static/sentry/app/views/groupDetails/organization/groupEvents.jsx b/src/sentry/static/sentry/app/views/organizationGroupDetails/groupEvents.jsx
similarity index 100%
rename from src/sentry/static/sentry/app/views/groupDetails/organization/groupEvents.jsx
rename to src/sentry/static/sentry/app/views/organizationGroupDetails/groupEvents.jsx
diff --git a/src/sentry/static/sentry/app/views/groupDetails/shared/groupMerged/index.jsx b/src/sentry/static/sentry/app/views/organizationGroupDetails/groupMerged/index.jsx
similarity index 100%
rename from src/sentry/static/sentry/app/views/groupDetails/shared/groupMerged/index.jsx
rename to src/sentry/static/sentry/app/views/organizationGroupDetails/groupMerged/index.jsx
diff --git a/src/sentry/static/sentry/app/views/groupDetails/shared/groupMerged/mergedItem.jsx b/src/sentry/static/sentry/app/views/organizationGroupDetails/groupMerged/mergedItem.jsx
similarity index 100%
rename from src/sentry/static/sentry/app/views/groupDetails/shared/groupMerged/mergedItem.jsx
rename to src/sentry/static/sentry/app/views/organizationGroupDetails/groupMerged/mergedItem.jsx
diff --git a/src/sentry/static/sentry/app/views/groupDetails/shared/groupMerged/mergedList.jsx b/src/sentry/static/sentry/app/views/organizationGroupDetails/groupMerged/mergedList.jsx
similarity index 100%
rename from src/sentry/static/sentry/app/views/groupDetails/shared/groupMerged/mergedList.jsx
rename to src/sentry/static/sentry/app/views/organizationGroupDetails/groupMerged/mergedList.jsx
diff --git a/src/sentry/static/sentry/app/views/groupDetails/shared/groupMerged/mergedToolbar.jsx b/src/sentry/static/sentry/app/views/organizationGroupDetails/groupMerged/mergedToolbar.jsx
similarity index 100%
rename from src/sentry/static/sentry/app/views/groupDetails/shared/groupMerged/mergedToolbar.jsx
rename to src/sentry/static/sentry/app/views/organizationGroupDetails/groupMerged/mergedToolbar.jsx
diff --git a/src/sentry/static/sentry/app/views/groupDetails/shared/groupSimilar/index.jsx b/src/sentry/static/sentry/app/views/organizationGroupDetails/groupSimilar/index.jsx
similarity index 100%
rename from src/sentry/static/sentry/app/views/groupDetails/shared/groupSimilar/index.jsx
rename to src/sentry/static/sentry/app/views/organizationGroupDetails/groupSimilar/index.jsx
diff --git a/src/sentry/static/sentry/app/views/groupDetails/shared/groupSimilar/similarItem.jsx b/src/sentry/static/sentry/app/views/organizationGroupDetails/groupSimilar/similarItem.jsx
similarity index 100%
rename from src/sentry/static/sentry/app/views/groupDetails/shared/groupSimilar/similarItem.jsx
rename to src/sentry/static/sentry/app/views/organizationGroupDetails/groupSimilar/similarItem.jsx
diff --git a/src/sentry/static/sentry/app/views/groupDetails/shared/groupSimilar/similarList.jsx b/src/sentry/static/sentry/app/views/organizationGroupDetails/groupSimilar/similarList.jsx
similarity index 100%
rename from src/sentry/static/sentry/app/views/groupDetails/shared/groupSimilar/similarList.jsx
rename to src/sentry/static/sentry/app/views/organizationGroupDetails/groupSimilar/similarList.jsx
diff --git a/src/sentry/static/sentry/app/views/groupDetails/shared/groupSimilar/similarToolbar.jsx b/src/sentry/static/sentry/app/views/organizationGroupDetails/groupSimilar/similarToolbar.jsx
similarity index 100%
rename from src/sentry/static/sentry/app/views/groupDetails/shared/groupSimilar/similarToolbar.jsx
rename to src/sentry/static/sentry/app/views/organizationGroupDetails/groupSimilar/similarToolbar.jsx
diff --git a/src/sentry/static/sentry/app/views/groupDetails/shared/groupTagValues.jsx b/src/sentry/static/sentry/app/views/organizationGroupDetails/groupTagValues.jsx
similarity index 100%
rename from src/sentry/static/sentry/app/views/groupDetails/shared/groupTagValues.jsx
rename to src/sentry/static/sentry/app/views/organizationGroupDetails/groupTagValues.jsx
diff --git a/src/sentry/static/sentry/app/views/groupDetails/shared/groupTags.jsx b/src/sentry/static/sentry/app/views/organizationGroupDetails/groupTags.jsx
similarity index 95%
rename from src/sentry/static/sentry/app/views/groupDetails/shared/groupTags.jsx
rename to src/sentry/static/sentry/app/views/organizationGroupDetails/groupTags.jsx
index d76a346397..efeb50c474 100644
--- a/src/sentry/static/sentry/app/views/groupDetails/shared/groupTags.jsx
+++ b/src/sentry/static/sentry/app/views/organizationGroupDetails/groupTags.jsx
@@ -20,7 +20,6 @@ class GroupTags extends React.Component {
     organization: SentryTypes.Organization.isRequired,
     group: SentryTypes.Group.isRequired,
     api: PropTypes.object.isRequired,
-    query: PropTypes.object.isRequired,
     params: PropTypes.object.isRequired,
   };
 
@@ -37,21 +36,14 @@ class GroupTags extends React.Component {
     this.fetchData();
   }
 
-  componentDidUpdate(prevProps) {
-    if (prevProps.query !== this.props.query) {
-      this.fetchData();
-    }
-  }
-
   fetchData = () => {
-    const {api, query, group} = this.props;
+    const {api, group} = this.props;
     this.setState({
       loading: true,
       error: false,
     });
 
     api.request('/issues/' + group.id + '/tags/', {
-      query,
       success: data => {
         this.setState({
           tagList: data,
diff --git a/src/sentry/static/sentry/app/views/groupDetails/shared/groupUserFeedback.jsx b/src/sentry/static/sentry/app/views/organizationGroupDetails/groupUserFeedback.jsx
similarity index 92%
rename from src/sentry/static/sentry/app/views/groupDetails/shared/groupUserFeedback.jsx
rename to src/sentry/static/sentry/app/views/organizationGroupDetails/groupUserFeedback.jsx
index 5e9284ddc8..532ae36e8f 100644
--- a/src/sentry/static/sentry/app/views/groupDetails/shared/groupUserFeedback.jsx
+++ b/src/sentry/static/sentry/app/views/organizationGroupDetails/groupUserFeedback.jsx
@@ -1,5 +1,4 @@
 import React from 'react';
-import PropTypes from 'prop-types';
 import {Link} from 'react-router';
 import {isEqual} from 'lodash';
 
@@ -18,7 +17,6 @@ class GroupUserFeedback extends React.Component {
   static propTypes = {
     organization: SentryTypes.Organization.isRequired,
     group: SentryTypes.Group.isRequired,
-    query: PropTypes.object.isRequired,
   };
 
   constructor(props) {
@@ -36,7 +34,7 @@ class GroupUserFeedback extends React.Component {
   }
 
   componentDidUpdate(prevProps) {
-    if (!isEqual(prevProps.query, this.props.query)) {
+    if (!isEqual(prevProps.params, this.props.params)) {
       this.fetchData();
     }
   }
@@ -47,7 +45,7 @@ class GroupUserFeedback extends React.Component {
       error: false,
     });
 
-    fetchGroupUserReports(this.props.group.id, this.props.query)
+    fetchGroupUserReports(this.props.group.id, this.props.params)
       .then(([data, _, jqXHR]) => {
         this.setState({
           error: false,
@@ -101,7 +99,7 @@ class GroupUserFeedback extends React.Component {
       );
     }
 
-    const emptyStateMessage = isEqual(this.props.query, {})
+    const emptyStateMessage = isEqual(this.props.params, {})
       ? t('No user reports match your selected filters.')
       : t('No user reports have been collected.');
 
diff --git a/src/sentry/static/sentry/app/views/groupDetails/shared/header.jsx b/src/sentry/static/sentry/app/views/organizationGroupDetails/header.jsx
similarity index 100%
rename from src/sentry/static/sentry/app/views/groupDetails/shared/header.jsx
rename to src/sentry/static/sentry/app/views/organizationGroupDetails/header.jsx
diff --git a/src/sentry/static/sentry/app/views/groupDetails/organization/index.jsx b/src/sentry/static/sentry/app/views/organizationGroupDetails/index.jsx
similarity index 95%
rename from src/sentry/static/sentry/app/views/groupDetails/organization/index.jsx
rename to src/sentry/static/sentry/app/views/organizationGroupDetails/index.jsx
index 8530249ba9..121084903c 100644
--- a/src/sentry/static/sentry/app/views/groupDetails/organization/index.jsx
+++ b/src/sentry/static/sentry/app/views/organizationGroupDetails/index.jsx
@@ -5,7 +5,7 @@ import {analytics} from 'app/utils/analytics';
 import withGlobalSelection from 'app/utils/withGlobalSelection';
 import withOrganization from 'app/utils/withOrganization';
 
-import GroupDetails from '../shared/groupDetails';
+import GroupDetails from './groupDetails';
 
 class OrganizationGroupDetails extends React.Component {
   static propTypes = {
diff --git a/src/sentry/static/sentry/app/views/groupDetails/shared/utils.jsx b/src/sentry/static/sentry/app/views/organizationGroupDetails/utils.jsx
similarity index 100%
rename from src/sentry/static/sentry/app/views/groupDetails/shared/utils.jsx
rename to src/sentry/static/sentry/app/views/organizationGroupDetails/utils.jsx
diff --git a/tests/acceptance/test_issue_details.py b/tests/acceptance/test_issue_details.py
index b5d3392414..3f10e3fefe 100644
--- a/tests/acceptance/test_issue_details.py
+++ b/tests/acceptance/test_issue_details.py
@@ -42,11 +42,10 @@ class IssueDetailsTest(AcceptanceTestCase, SnubaTestCase):
 
     def visit_issue(self, groupid):
         self.dismiss_assistant()
-        with self.feature('organizations:sentry10'):
-            self.browser.get(
-                u'/organizations/{}/issues/{}/'.format(self.org.slug, groupid)
-            )
-            self.wait_until_loaded()
+        self.browser.get(
+            u'/organizations/{}/issues/{}/'.format(self.org.slug, groupid)
+        )
+        self.wait_until_loaded()
 
     def test_python_event(self):
         event = self.create_sample_event(
@@ -83,17 +82,8 @@ class IssueDetailsTest(AcceptanceTestCase, SnubaTestCase):
             platform='javascript'
         )
 
-        # Don't enable sentry10 so we have coverage for sentry9 as well.
         self.dismiss_assistant()
-        self.browser.get(
-            u'/{}/{}/issues/{}/events/{}/'.format(
-                self.org.slug,
-                self.project.slug,
-                event.group.id,
-                event.id
-            )
-        )
-        self.wait_until_loaded()
+        self.visit_issue(event.group.id)
         self.browser.snapshot('issue details javascript - event details')
 
         self.browser.find_element_by_xpath("//a//code[contains(text(), 'curl')]").click()
@@ -154,13 +144,12 @@ class IssueDetailsTest(AcceptanceTestCase, SnubaTestCase):
             platform='python',
         )
 
-        with self.feature('organizations:sentry10'):
-            self.browser.get(
-                u'/organizations/{}/issues/{}/activity/'.format(
-                    self.org.slug, event.group.id)
-            )
-            self.browser.wait_until_test_id('activity-item')
-            self.browser.snapshot('issue activity python')
+        self.browser.get(
+            u'/organizations/{}/issues/{}/activity/'.format(
+                self.org.slug, event.group.id)
+        )
+        self.browser.wait_until_test_id('activity-item')
+        self.browser.snapshot('issue activity python')
 
     def wait_until_loaded(self):
         self.browser.wait_until_not('.loading-indicator')
diff --git a/tests/js/spec/views/groupDetails/__snapshots__/projectGroupEvents.spec.jsx.snap b/tests/js/spec/views/groupDetails/__snapshots__/projectGroupEvents.spec.jsx.snap
deleted file mode 100644
index 38773524a2..0000000000
--- a/tests/js/spec/views/groupDetails/__snapshots__/projectGroupEvents.spec.jsx.snap
+++ /dev/null
@@ -1,60 +0,0 @@
-// Jest Snapshot v1, https://goo.gl/fbAQLP
-
-exports[`groupEvents renders 1`] = `
-<div>
-  <div
-    style={
-      Object {
-        "marginBottom": 20,
-      }
-    }
-  >
-    <SearchBar
-      defaultQuery=""
-      onSearch={[Function]}
-      placeholder="search event id, message, or tags"
-      query=""
-    />
-  </div>
-  <Panel
-    className="event-list"
-  >
-    <PanelBody
-      direction="column"
-      disablePadding={true}
-      flex={false}
-    >
-      <EventsTable
-        events={
-          Array [
-            Object {
-              "dateCreated": "2019-05-21T18:01:48.762Z",
-              "eventID": "12345",
-              "groupID": "1",
-              "id": "1",
-              "message": "ApiException",
-              "tags": Array [],
-            },
-            Object {
-              "dateCreated": "2019-05-21T18:01:48.762Z",
-              "eventID": "12346",
-              "groupID": "1",
-              "id": "2",
-              "message": "TestException",
-              "tags": Array [],
-            },
-          ]
-        }
-        groupId="1"
-        orgId="orgId"
-        projectId="projectId"
-        tagList={Array []}
-      />
-    </PanelBody>
-  </Panel>
-  <Pagination
-    className="css-1yt0wm7-streamCss"
-    onCursor={[Function]}
-  />
-</div>
-`;
diff --git a/tests/js/spec/views/groupDetails/projectGroupEvents.spec.jsx b/tests/js/spec/views/groupDetails/projectGroupEvents.spec.jsx
deleted file mode 100644
index 7d2ae0701f..0000000000
--- a/tests/js/spec/views/groupDetails/projectGroupEvents.spec.jsx
+++ /dev/null
@@ -1,102 +0,0 @@
-import React from 'react';
-import PropTypes from 'prop-types';
-import {shallow} from 'enzyme';
-import {browserHistory} from 'react-router';
-
-import {GroupEvents} from 'app/views/groupDetails/project/groupEvents';
-
-describe('groupEvents', function() {
-  beforeEach(function() {
-    MockApiClient.addMockResponse({
-      url: '/issues/1/events/',
-      body: TestStubs.Events(),
-    });
-
-    browserHistory.push = jest.fn();
-  });
-
-  it('renders', function() {
-    const component = shallow(
-      <GroupEvents
-        api={new MockApiClient()}
-        group={TestStubs.Group()}
-        params={{orgId: 'orgId', projectId: 'projectId', groupId: '1'}}
-        location={{query: {}}}
-      />,
-      {
-        context: TestStubs.router(),
-        childContextTypes: {
-          router: PropTypes.object,
-        },
-      }
-    );
-
-    expect(component).toMatchSnapshot();
-  });
-
-  it('handles search', function() {
-    const component = shallow(
-      <GroupEvents
-        api={new MockApiClient()}
-        group={TestStubs.Group()}
-        params={{orgId: 'orgId', projectId: 'projectId', groupId: '1'}}
-        location={{query: {}}}
-      />,
-      {
-        context: TestStubs.router(),
-        childContextTypes: {
-          router: PropTypes.object,
-        },
-      }
-    );
-
-    const list = [
-      {searchTerm: '', expectedQuery: ''},
-      {searchTerm: 'test', expectedQuery: 'test'},
-      {searchTerm: 'environment:production test', expectedQuery: 'test'},
-    ];
-
-    list.forEach(item => {
-      component.instance().handleSearch(item.searchTerm);
-      expect(browserHistory.push).toHaveBeenCalledWith(
-        expect.objectContaining({
-          query: {query: item.expectedQuery},
-        })
-      );
-    });
-  });
-
-  describe('changing environment', function() {
-    let component, eventsMock;
-    beforeEach(function() {
-      component = shallow(
-        <GroupEvents
-          api={new MockApiClient()}
-          group={TestStubs.Group()}
-          params={{orgId: 'orgId', projectId: 'projectId', groupId: '1'}}
-          location={{query: {}}}
-          environment={TestStubs.Environments()[0]}
-        />,
-        {
-          context: TestStubs.router(),
-          childContextTypes: {
-            router: PropTypes.object,
-          },
-        }
-      );
-
-      eventsMock = MockApiClient.addMockResponse({
-        url: '/issues/1/events/',
-      });
-    });
-    it('select environment', function() {
-      component.setProps({environment: TestStubs.Environments()[1]});
-      expect(eventsMock.mock.calls[0][1].query.environment).toEqual('staging');
-    });
-
-    it('select all environments', function() {
-      component.setProps({environment: null});
-      expect(eventsMock.mock.calls[0][1].query.environment).toEqual(undefined);
-    });
-  });
-});
diff --git a/tests/js/spec/views/groupDetails/__snapshots__/actions.spec.jsx.snap b/tests/js/spec/views/organizationGroupDetails/__snapshots__/actions.spec.jsx.snap
similarity index 100%
rename from tests/js/spec/views/groupDetails/__snapshots__/actions.spec.jsx.snap
rename to tests/js/spec/views/organizationGroupDetails/__snapshots__/actions.spec.jsx.snap
diff --git a/tests/js/spec/views/groupDetails/__snapshots__/groupMergedView.spec.jsx.snap b/tests/js/spec/views/organizationGroupDetails/__snapshots__/groupMergedView.spec.jsx.snap
similarity index 100%
rename from tests/js/spec/views/groupDetails/__snapshots__/groupMergedView.spec.jsx.snap
rename to tests/js/spec/views/organizationGroupDetails/__snapshots__/groupMergedView.spec.jsx.snap
diff --git a/tests/js/spec/views/groupDetails/__snapshots__/groupSimilar.spec.jsx.snap b/tests/js/spec/views/organizationGroupDetails/__snapshots__/groupSimilar.spec.jsx.snap
similarity index 100%
rename from tests/js/spec/views/groupDetails/__snapshots__/groupSimilar.spec.jsx.snap
rename to tests/js/spec/views/organizationGroupDetails/__snapshots__/groupSimilar.spec.jsx.snap
diff --git a/tests/js/spec/views/groupDetails/__snapshots__/organizationGroupEvents.spec.jsx.snap b/tests/js/spec/views/organizationGroupDetails/__snapshots__/organizationGroupEvents.spec.jsx.snap
similarity index 100%
rename from tests/js/spec/views/groupDetails/__snapshots__/organizationGroupEvents.spec.jsx.snap
rename to tests/js/spec/views/organizationGroupDetails/__snapshots__/organizationGroupEvents.spec.jsx.snap
diff --git a/tests/js/spec/views/groupDetails/actions.spec.jsx b/tests/js/spec/views/organizationGroupDetails/actions.spec.jsx
similarity index 92%
rename from tests/js/spec/views/groupDetails/actions.spec.jsx
rename to tests/js/spec/views/organizationGroupDetails/actions.spec.jsx
index 9652d649f9..776a760e70 100644
--- a/tests/js/spec/views/groupDetails/actions.spec.jsx
+++ b/tests/js/spec/views/organizationGroupDetails/actions.spec.jsx
@@ -1,7 +1,7 @@
 import React from 'react';
 import {shallow} from 'enzyme';
 
-import GroupActions from 'app/views/groupDetails/shared/actions';
+import GroupActions from 'app/views/organizationGroupDetails/actions';
 import ConfigStore from 'app/stores/configStore';
 
 describe('GroupActions', function() {
diff --git a/tests/js/spec/views/groupDetails/shared/groupActivity.spec.jsx b/tests/js/spec/views/organizationGroupDetails/groupActivity.spec.jsx
similarity index 96%
rename from tests/js/spec/views/groupDetails/shared/groupActivity.spec.jsx
rename to tests/js/spec/views/organizationGroupDetails/groupActivity.spec.jsx
index e5a7af2bef..77a6aaca57 100644
--- a/tests/js/spec/views/groupDetails/shared/groupActivity.spec.jsx
+++ b/tests/js/spec/views/organizationGroupDetails/groupActivity.spec.jsx
@@ -2,7 +2,7 @@ import React from 'react';
 import {mount} from 'enzyme';
 
 import {initializeOrg} from 'app-test/helpers/initializeOrg';
-import {GroupActivity} from 'app/views/groupDetails/shared/groupActivity';
+import {GroupActivity} from 'app/views/organizationGroupDetails/groupActivity';
 import NoteInput from 'app/components/activity/note/input';
 import ConfigStore from 'app/stores/configStore';
 import GroupStore from 'app/stores/groupStore';
diff --git a/tests/js/spec/views/groupDetails/groupEventDetails.spec.jsx b/tests/js/spec/views/organizationGroupDetails/groupEventDetails.spec.jsx
similarity index 96%
rename from tests/js/spec/views/groupDetails/groupEventDetails.spec.jsx
rename to tests/js/spec/views/organizationGroupDetails/groupEventDetails.spec.jsx
index 009c088309..cfa347c6db 100644
--- a/tests/js/spec/views/groupDetails/groupEventDetails.spec.jsx
+++ b/tests/js/spec/views/organizationGroupDetails/groupEventDetails.spec.jsx
@@ -3,7 +3,7 @@ import {mount} from 'enzyme';
 import {browserHistory} from 'react-router';
 
 import {initializeOrg} from 'app-test/helpers/initializeOrg';
-import GroupEventDetails from 'app/views/groupDetails/shared/groupEventDetails';
+import {GroupEventDetails} from 'app/views/organizationGroupDetails/groupEventDetails';
 
 describe('groupEventDetails', () => {
   let org;
@@ -96,6 +96,7 @@ describe('groupEventDetails', () => {
     });
     const wrapper = mount(
       <GroupEventDetails
+        api={new MockApiClient()}
         group={group}
         project={project}
         organization={org}
@@ -120,6 +121,7 @@ describe('groupEventDetails', () => {
     });
     const wrapper = mount(
       <GroupEventDetails
+        api={new MockApiClient()}
         group={group}
         project={project}
         organization={org}
@@ -155,6 +157,7 @@ describe('groupEventDetails', () => {
 
     const wrapper = mount(
       <GroupEventDetails
+        api={new MockApiClient()}
         group={group}
         project={project}
         organization={org}
@@ -202,6 +205,7 @@ describe('groupEventDetails', () => {
 
     mount(
       <GroupEventDetails
+        api={new MockApiClient()}
         group={group}
         project={project}
         organization={org}
@@ -225,6 +229,7 @@ describe('groupEventDetails', () => {
 
     mount(
       <GroupEventDetails
+        api={new MockApiClient()}
         group={group}
         project={project}
         organization={org}
diff --git a/tests/js/spec/views/groupDetails/groupMergedView.spec.jsx b/tests/js/spec/views/organizationGroupDetails/groupMergedView.spec.jsx
similarity index 95%
rename from tests/js/spec/views/groupDetails/groupMergedView.spec.jsx
rename to tests/js/spec/views/organizationGroupDetails/groupMergedView.spec.jsx
index 6a0be441bc..a9d3741512 100644
--- a/tests/js/spec/views/groupDetails/groupMergedView.spec.jsx
+++ b/tests/js/spec/views/organizationGroupDetails/groupMergedView.spec.jsx
@@ -3,7 +3,7 @@ import PropTypes from 'prop-types';
 
 import {shallow} from 'enzyme';
 
-import {GroupMergedView} from 'app/views/groupDetails/shared/groupMerged';
+import {GroupMergedView} from 'app/views/organizationGroupDetails/groupMerged';
 import {Client} from 'app/api';
 import events from 'app-test/mocks/events';
 
diff --git a/tests/js/spec/views/groupDetails/groupSimilar.spec.jsx b/tests/js/spec/views/organizationGroupDetails/groupSimilar.spec.jsx
similarity index 97%
rename from tests/js/spec/views/groupDetails/groupSimilar.spec.jsx
rename to tests/js/spec/views/organizationGroupDetails/groupSimilar.spec.jsx
index b382b7d84c..92e32ebb02 100644
--- a/tests/js/spec/views/groupDetails/groupSimilar.spec.jsx
+++ b/tests/js/spec/views/organizationGroupDetails/groupSimilar.spec.jsx
@@ -3,7 +3,7 @@ import React from 'react';
 
 import {mount, shallow} from 'enzyme';
 
-import GroupSimilar from 'app/views/groupDetails/shared/groupSimilar';
+import GroupSimilar from 'app/views/organizationGroupDetails/groupSimilar';
 import issues from 'app-test/mocks/issues';
 
 const project = TestStubs.Project({
diff --git a/tests/js/spec/views/groupDetails/shared/groupTagValues.spec.jsx b/tests/js/spec/views/organizationGroupDetails/groupTagValues.spec.jsx
similarity index 93%
rename from tests/js/spec/views/groupDetails/shared/groupTagValues.spec.jsx
rename to tests/js/spec/views/organizationGroupDetails/groupTagValues.spec.jsx
index 3b40e2b79f..47cacffcb6 100644
--- a/tests/js/spec/views/groupDetails/shared/groupTagValues.spec.jsx
+++ b/tests/js/spec/views/organizationGroupDetails/groupTagValues.spec.jsx
@@ -2,7 +2,7 @@ import React from 'react';
 
 import {initializeOrg} from 'app-test/helpers/initializeOrg';
 import {mount} from 'enzyme';
-import GroupTagValues from 'app/views/groupDetails/shared/groupTagValues';
+import GroupTagValues from 'app/views/organizationGroupDetails/groupTagValues';
 
 describe('GroupTagValues', function() {
   const {routerContext, router} = initializeOrg({});
diff --git a/tests/js/spec/views/groupDetails/shared/groupTags.spec.jsx b/tests/js/spec/views/organizationGroupDetails/groupTags.spec.jsx
similarity index 92%
rename from tests/js/spec/views/groupDetails/shared/groupTags.spec.jsx
rename to tests/js/spec/views/organizationGroupDetails/groupTags.spec.jsx
index f8abbb4566..b111136701 100644
--- a/tests/js/spec/views/groupDetails/shared/groupTags.spec.jsx
+++ b/tests/js/spec/views/organizationGroupDetails/groupTags.spec.jsx
@@ -2,7 +2,7 @@ import React from 'react';
 
 import {initializeOrg} from 'app-test/helpers/initializeOrg';
 import {mount} from 'enzyme';
-import GroupTags from 'app/views/groupDetails/shared/groupTags';
+import GroupTags from 'app/views/organizationGroupDetails/groupTags';
 
 describe('GroupTags', function() {
   const {routerContext, router} = initializeOrg();
diff --git a/tests/js/spec/views/groupDetails/organizationGroupEvents.spec.jsx b/tests/js/spec/views/organizationGroupDetails/organizationGroupEvents.spec.jsx
similarity index 97%
rename from tests/js/spec/views/groupDetails/organizationGroupEvents.spec.jsx
rename to tests/js/spec/views/organizationGroupDetails/organizationGroupEvents.spec.jsx
index f3fbc4add2..059da05816 100644
--- a/tests/js/spec/views/groupDetails/organizationGroupEvents.spec.jsx
+++ b/tests/js/spec/views/organizationGroupDetails/organizationGroupEvents.spec.jsx
@@ -3,7 +3,7 @@ import PropTypes from 'prop-types';
 import {mount, shallow} from 'enzyme';
 import {browserHistory} from 'react-router';
 
-import {GroupEvents} from 'app/views/groupDetails/organization/groupEvents';
+import {GroupEvents} from 'app/views/organizationGroupDetails/groupEvents';
 
 const OrgnanizationGroupEvents = GroupEvents;
 
