commit cc762bb2f2bc55da7b0bcffae958adb2dd4c0208
Author: Lyn Nagara <lyn.nagara@gmail.com>
Date:   Fri Nov 22 10:47:21 2019 -0800

    ref: Remove event child deletions (#15735)
    
    We already handle deleting nodestore, user reports and event attachments
    at the group level, this code is no longer necessary.
    
    We'll need to remove this before the rest of the event deletions
    in https://github.com/getsentry/sentry/pull/15676 so that we can safely
    remove data from the sentry_message table without these child deletions
    being inadvertently triggered.

diff --git a/src/sentry/deletions/__init__.py b/src/sentry/deletions/__init__.py
index 0a22083694..43c74e58f7 100644
--- a/src/sentry/deletions/__init__.py
+++ b/src/sentry/deletions/__init__.py
@@ -42,7 +42,6 @@ def load_defaults():
     default_manager.register(models.CommitFileChange, BulkModelDeletionTask)
     default_manager.register(models.Dashboard, ModelDeletionTask)
     default_manager.register(models.EnvironmentProject, BulkModelDeletionTask)
-    default_manager.register(models.Event, defaults.EventDeletionTask)
     default_manager.register(models.EventUser, BulkModelDeletionTask)
     default_manager.register(models.Group, defaults.GroupDeletionTask)
     default_manager.register(models.GroupAssignee, BulkModelDeletionTask)
diff --git a/src/sentry/deletions/defaults/event.py b/src/sentry/deletions/defaults/event.py
deleted file mode 100644
index 3b74663af8..0000000000
--- a/src/sentry/deletions/defaults/event.py
+++ /dev/null
@@ -1,41 +0,0 @@
-from __future__ import absolute_import, print_function
-
-from sentry import nodestore
-
-from ..base import BaseDeletionTask, BaseRelation, ModelDeletionTask, ModelRelation
-
-
-class NodeDeletionTask(BaseDeletionTask):
-    def __init__(self, manager, nodes, **kwargs):
-        self.nodes = nodes
-        super(NodeDeletionTask, self).__init__(manager, **kwargs)
-
-    def chunk(self):
-        nodestore.delete_multi(self.nodes)
-        return False
-
-
-class EventDeletionTask(ModelDeletionTask):
-    def get_child_relations(self, instance):
-        from sentry import models
-
-        relations = super(EventDeletionTask, self).get_child_relations(instance)
-        key = {"project_id": instance.project_id, "event_id": instance.event_id}
-        relations.extend(
-            [ModelRelation(models.EventAttachment, key), ModelRelation(models.UserReport, key)]
-        )
-        return relations
-
-    def get_child_relations_bulk(self, instance_list):
-        from sentry.models import Event
-
-        node_ids = []
-        for i in instance_list:
-            node_id = Event.generate_node_id(i.project_id, i.event_id)
-            node_ids.append(node_id)
-            # Unbind the NodeField so it doesn't attempt to get
-            # get deleted a second time after NodeDeletionTask
-            # runs, when the Event itself is deleted.
-            i.data = None
-
-        return [BaseRelation({"nodes": node_ids}, NodeDeletionTask)]
