commit 9779b8981df15744d21eb8438ebd193d1c170f02
Author: Mark Story <mark@sentry.io>
Date:   Mon Apr 6 10:18:34 2020 -0400

    feat(discover) Add metrics for newer discover features (#18091)
    
    Refs getsentry/reload#154

diff --git a/src/sentry/static/sentry/app/views/eventsV2/table/cellAction.tsx b/src/sentry/static/sentry/app/views/eventsV2/table/cellAction.tsx
index 8f2daa12d4..2e54681619 100644
--- a/src/sentry/static/sentry/app/views/eventsV2/table/cellAction.tsx
+++ b/src/sentry/static/sentry/app/views/eventsV2/table/cellAction.tsx
@@ -12,12 +12,13 @@ import space from 'app/styles/space';
 import theme from 'app/utils/theme';
 import {tokenizeSearch, stringifyQueryObject} from 'app/utils/tokenizeSearch';
 import {OrganizationSummary} from 'app/types';
+import {trackAnalyticsEvent} from 'app/utils/analytics';
 
 import {TableColumn, TableDataRow} from './types';
 
 enum Actions {
-  ADD,
-  EXCLUDE,
+  ADD = 'add',
+  EXCLUDE = 'exclude',
 }
 
 type Props = {
@@ -116,6 +117,11 @@ export default class CellAction extends React.Component<Props, State> {
       default:
         throw new Error(`Unknown action type. ${action}`);
     }
+    trackAnalyticsEvent({
+      eventKey: 'discover_v2.results.cellaction',
+      eventName: 'Discoverv2: Cell Action Clicked',
+      action,
+    });
     const nextView = eventView.clone();
     nextView.query = stringifyQueryObject(query);
 
diff --git a/src/sentry/static/sentry/app/views/eventsV2/table/tableView.tsx b/src/sentry/static/sentry/app/views/eventsV2/table/tableView.tsx
index 77b58698bc..59c62c8d82 100644
--- a/src/sentry/static/sentry/app/views/eventsV2/table/tableView.tsx
+++ b/src/sentry/static/sentry/app/views/eventsV2/table/tableView.tsx
@@ -3,7 +3,7 @@ import styled from '@emotion/styled';
 import {browserHistory} from 'react-router';
 import {Location, LocationDescriptorObject} from 'history';
 
-import {Organization} from 'app/types';
+import {Organization, OrganizationSummary} from 'app/types';
 import {trackAnalyticsEvent} from 'app/utils/analytics';
 import GridEditable, {COL_WIDTH_UNDEFINED} from 'app/components/gridEditable';
 import {IconEvent, IconStack} from 'app/icons';
@@ -174,6 +174,7 @@ class TableView extends React.Component<TableViewProps> {
     if (aggregation) {
       return (
         <ExpandAggregateRow
+          organization={organization}
           eventView={eventView}
           column={column}
           dataRow={dataRow}
@@ -240,7 +241,7 @@ class TableView extends React.Component<TableViewProps> {
   }
 
   render() {
-    const {isLoading, error, tableData, eventView, title} = this.props;
+    const {isLoading, error, tableData, eventView, title, organization} = this.props;
 
     const columnOrder = eventView.getColumns();
     const columnSortBy = eventView.getSorts();
@@ -263,7 +264,14 @@ class TableView extends React.Component<TableViewProps> {
         }}
         actions={{
           editColumns: this.handleEditColumns,
-          downloadAsCsv: () => downloadAsCsv(tableData, columnOrder, title),
+          downloadAsCsv: () => {
+            trackAnalyticsEvent({
+              eventKey: 'discover_v2.results.download_csv',
+              eventName: 'Discoverv2: Download CSV',
+              organization_id: parseInt(organization.id, 10),
+            });
+            downloadAsCsv(tableData, columnOrder, title);
+          },
         }}
       />
     );
@@ -271,6 +279,7 @@ class TableView extends React.Component<TableViewProps> {
 }
 
 function ExpandAggregateRow(props: {
+  organization: OrganizationSummary;
   children: React.ReactNode;
   eventView: EventView;
   column: TableColumn<keyof TableDataRow>;
@@ -278,10 +287,18 @@ function ExpandAggregateRow(props: {
   location: Location;
   tableMeta: MetaType;
 }) {
-  const {children, column, dataRow, eventView, location} = props;
+  const {children, column, dataRow, eventView, location, organization} = props;
   const aggregation =
     column.column.kind === 'function' ? column.column.function[0] : undefined;
 
+  function handleClick() {
+    trackAnalyticsEvent({
+      eventKey: 'discover_v2.results.drilldown',
+      eventName: 'Discoverv2: Click aggregate drilldown',
+      organization_id: parseInt(organization.id, 10),
+    });
+  }
+
   // count(column) drilldown
   if (aggregation === 'count') {
     const nextView = getExpandedResults(eventView, {}, dataRow);
@@ -291,7 +308,11 @@ function ExpandAggregateRow(props: {
       query: nextView.generateQueryStringObject(),
     };
 
-    return <Link to={target}>{children}</Link>;
+    return (
+      <Link to={target} onClick={handleClick}>
+        {children}
+      </Link>
+    );
   }
 
   // count_unique(column) drilldown
@@ -307,7 +328,11 @@ function ExpandAggregateRow(props: {
       query: nextView.generateQueryStringObject(),
     };
 
-    return <Link to={target}>{children}</Link>;
+    return (
+      <Link to={target} onClick={handleClick}>
+        {children}
+      </Link>
+    );
   }
 
   return <React.Fragment>{children}</React.Fragment>;
