commit 3dd392024b41c503aa680fb04a9f65c72c0231b3
Author: David Cramer <cramer@dropbox.com>
Date:   Tue May 20 11:50:50 2014 -0700

    Hardcode all existing interface names

diff --git a/src/sentry/interfaces/base.py b/src/sentry/interfaces/base.py
index 0fe723ca00..c2c9156fee 100644
--- a/src/sentry/interfaces/base.py
+++ b/src/sentry/interfaces/base.py
@@ -62,7 +62,8 @@ class Interface(object):
         )
 
     def get_path(self):
-        return '%s.%s' % (self.__module__, self.__name__)
+        cls = type(self)
+        return '%s.%s' % (cls.__module__, cls.__name__)
 
     def get_alias(self):
         return self.get_slug()
diff --git a/src/sentry/interfaces/exception.py b/src/sentry/interfaces/exception.py
index 84b306796b..efd35810a0 100644
--- a/src/sentry/interfaces/exception.py
+++ b/src/sentry/interfaces/exception.py
@@ -69,6 +69,9 @@ class SingleException(Interface):
     def get_alias(self):
         return 'exception'
 
+    def get_path(self):
+        return 'sentry.interfaces.Exception'
+
     def get_hash(self):
         output = None
         if self.stacktrace:
@@ -166,15 +169,18 @@ class Exception(Interface):
     def __len__(self):
         return len(self.values)
 
+    def get_alias(self):
+        return 'exception'
+
+    def get_path(self):
+        return 'sentry.interfaces.Exception'
+
     def get_hash(self):
         output = []
         for value in self.values:
             output.extend(value.get_hash())
         return output
 
-    def get_alias(self):
-        return 'exception'
-
     def get_composite_hash(self, interfaces):
         # optimize around the fact that some exceptions might have stacktraces
         # while others may not and we ALWAYS want stacktraces over values
diff --git a/src/sentry/interfaces/http.py b/src/sentry/interfaces/http.py
index 449baee10e..1bbc14f3f7 100644
--- a/src/sentry/interfaces/http.py
+++ b/src/sentry/interfaces/http.py
@@ -126,6 +126,9 @@ class Http(Interface):
 
         return cls(**kwargs)
 
+    def get_path(self):
+        return 'sentry.interfaces.Http'
+
     @property
     def full_url(self):
         url = self.url
diff --git a/src/sentry/interfaces/message.py b/src/sentry/interfaces/message.py
index 98999fd845..1add5cca86 100644
--- a/src/sentry/interfaces/message.py
+++ b/src/sentry/interfaces/message.py
@@ -42,5 +42,8 @@ class Message(Interface):
 
         return cls(**kwargs)
 
+    def get_path(self):
+        return 'sentry.interfaces.Message'
+
     def get_hash(self):
         return [self.message]
diff --git a/src/sentry/interfaces/query.py b/src/sentry/interfaces/query.py
index 9f46674fb7..0f701884ad 100644
--- a/src/sentry/interfaces/query.py
+++ b/src/sentry/interfaces/query.py
@@ -33,3 +33,6 @@ class Query(Interface):
 
     def get_hash(self):
         return [self.query]
+
+    def get_path(self):
+        return 'sentry.interfaces.Query'
diff --git a/src/sentry/interfaces/stacktrace.py b/src/sentry/interfaces/stacktrace.py
index c3a060e085..e378c0cffb 100644
--- a/src/sentry/interfaces/stacktrace.py
+++ b/src/sentry/interfaces/stacktrace.py
@@ -412,6 +412,9 @@ class Stacktrace(Interface):
             'frames_omitted': self.frames_omitted,
         }
 
+    def get_path(self):
+        return 'sentry.interfaces.Stacktrace'
+
     def has_app_frames(self):
         return any(f.in_app is not None for f in self.frames)
 
diff --git a/src/sentry/interfaces/template.py b/src/sentry/interfaces/template.py
index 41712de268..7475dabb33 100644
--- a/src/sentry/interfaces/template.py
+++ b/src/sentry/interfaces/template.py
@@ -57,6 +57,12 @@ class Template(Interface):
         }
         return cls(**kwargs)
 
+    def get_alias(self):
+        return 'template'
+
+    def get_path(self):
+        return 'sentry.interfaces.Template'
+
     def get_hash(self):
         return [self.filename, self.context_line]
 
diff --git a/src/sentry/interfaces/user.py b/src/sentry/interfaces/user.py
index 671f19579f..301669c056 100644
--- a/src/sentry/interfaces/user.py
+++ b/src/sentry/interfaces/user.py
@@ -54,6 +54,9 @@ class User(Interface):
         kwargs['data'] = trim_dict(data.pop('data', data))
         return cls(**kwargs)
 
+    def get_path(self):
+        return 'sentry.interfaces.User'
+
     def get_hash(self):
         return []
 
diff --git a/tests/sentry/coreapi/tests.py b/tests/sentry/coreapi/tests.py
index 935e429821..d0e9bb333e 100644
--- a/tests/sentry/coreapi/tests.py
+++ b/tests/sentry/coreapi/tests.py
@@ -180,7 +180,7 @@ class ValidateDataTest(BaseAPITest):
         })
         assert 'tests.manager.tests.DummyInterface' not in data
 
-    def test_doesnt_expand_list(self):
+    def test_does_expand_list(self):
         data = validate_data(self.project, {
             'message': 'foo',
             'exception': [{
@@ -189,7 +189,7 @@ class ValidateDataTest(BaseAPITest):
                 'module': 'foo.bar',
             }]
         })
-        assert 'sentry.interfaces.Exception' not in data
+        assert 'sentry.interfaces.Exception' in data
 
     def test_log_level_as_string(self):
         data = validate_data(self.project, {
diff --git a/tests/sentry/interfaces/test_exception.py b/tests/sentry/interfaces/test_exception.py
index 19298a78ee..85484bdfcd 100644
--- a/tests/sentry/interfaces/test_exception.py
+++ b/tests/sentry/interfaces/test_exception.py
@@ -31,6 +31,9 @@ class ExceptionTest(TestCase):
             }]},
         }]))
 
+    def test_path(self):
+        assert self.interface.get_path() == 'sentry.interfaces.Exception'
+
     def test_args_as_keyword_args(self):
         inst = Exception.to_python(dict(values=[{
             'type': 'ValueError',
diff --git a/tests/sentry/interfaces/test_http.py b/tests/sentry/interfaces/test_http.py
index 5f8dc825e9..74376a0f20 100644
--- a/tests/sentry/interfaces/test_http.py
+++ b/tests/sentry/interfaces/test_http.py
@@ -15,6 +15,9 @@ class HttpTest(TestCase):
             url='http://example.com',
         ))
 
+    def test_path(self):
+        assert self.interface.get_path() == 'sentry.interfaces.Http'
+
     def test_serialize_unserialize_behavior(self):
         result = type(self.interface).to_python(self.interface.to_json())
         assert result.to_json() == self.interface.to_json()
diff --git a/tests/sentry/interfaces/test_user.py b/tests/sentry/interfaces/test_user.py
index c6bd6ce750..fed93b6b12 100644
--- a/tests/sentry/interfaces/test_user.py
+++ b/tests/sentry/interfaces/test_user.py
@@ -23,6 +23,9 @@ class UserTest(TestCase):
             favorite_color='brown',
         ))
 
+    def test_path(self):
+        assert self.interface.get_path() == 'sentry.interfaces.User'
+
     def test_serialize_behavior(self):
         assert self.interface.to_json() == {
             'id': 1,
