commit 84f0c8589b7abf0b72120b71041943afe8dc1199
Author: David Cramer <dcramer@gmail.com>
Date:   Sun Sep 30 13:13:48 2012 +0300

    Remove queue and initial work on mail settings page

diff --git a/src/sentry/templates/sentry/admin/base.html b/src/sentry/templates/sentry/admin/base.html
index 4eb808f044..37278a1811 100644
--- a/src/sentry/templates/sentry/admin/base.html
+++ b/src/sentry/templates/sentry/admin/base.html
@@ -35,7 +35,7 @@
     <ul class="nav nav-tabs nav-stacked">
         <li{% block admin-nav-status %}{% endblock %}><a href="{% url sentry-admin-status %}">{% trans "Environment" %}</a></li>
         <li{% block admin-nav-packages %}{% endblock %}><a href="{% url sentry-admin-packages-status %}">{% trans "Packages" %}</a></li>
-        <li{% block admin-nav-queue %}{% endblock %}><a href="{% url sentry-admin-queue-status %}">{% trans "Queue" %}</a></li>
+        <li{% block admin-nav-mail %}{% endblock %}><a href="{% url sentry-admin-mail-status %}">{% trans "Mail" %}</a></li>
     </ul>
     <h6>{% trans "Statistics" %}</h6>
     <ul class="nav nav-tabs nav-stacked">
diff --git a/src/sentry/templates/sentry/admin/status/mail.html b/src/sentry/templates/sentry/admin/status/mail.html
new file mode 100644
index 0000000000..39c2af2d44
--- /dev/null
+++ b/src/sentry/templates/sentry/admin/status/mail.html
@@ -0,0 +1,67 @@
+{% extends "sentry/admin/base.html" %}
+
+{% block admin-nav-queue %} class="active"{% endblock %}
+
+{% load i18n %}
+{% load sentry_helpers %}
+
+{% block title %}{% trans "Mail Configuration" %} | {{ block.super }}{% endblock %}
+
+{% block breadcrumb %}
+    <li class="divider">/</li>
+    <li><a href="{% url sentry-admin-mail-status %}">{% trans "Mail Configuration" %}</a></li>
+{% endblock %}
+
+{% block inner %}
+    <div class="page-header">
+        <h2>{% trans "SMTP Settings" %}</h2>
+    </div>
+    <table class="table vars table-bordered table-striped">
+        <colgroup>
+            <col style="width:120px">
+        </colgroup>
+        <tbody>
+            <tr>
+                <th>{% trans "Host" %}</th>
+                <td>{{ EMAIL_HOST }}:{{ EMAIL_PORT }}</td>
+            </tr>
+            <tr>
+                <th>{% trans "Username" %}</th>
+                <td>{% if EMAIL_HOST_USER %}{{ EMAIL_HOST_USER }}{% else %}<em>{% trans "not set" %}</em>{% endif %}</td>
+            </tr>
+            <tr>
+                <th>{% trans "Password" %}</th>
+                <td>{% if EMAIL_HOST_PASSWORD %}********{% else %}<em>{% trans "not set" %}</em>{% endif %}</td>
+            </tr>
+            <tr>
+                <th>{% trans "TLS?" %}</th>
+                <td>{% if EMAIL_USE_TLS %}{% trans "Yes" %}{% else %}{% trans "No" %}{% endif %}</td>
+            </tr>
+        </tbody>
+    </table>
+    <div class="page-header">
+        <h3>{% trans "Test Settings" %}
+    </div>
+    <form method="post" action="">
+        {% csrf_token %}
+
+        <p>{% trans "Send an email to your account's email address to confirm that everything is configured correctly." %}</p>
+
+        {% if form.non_field_errors %}
+            <div class="alert alert-block alert-error">
+                <p>{% trans "There was an error sending a test email:" %}</p>
+                <ul>
+                    {% for error in form.non_field_errors %}
+                        <li>{{ error }}</li>
+                    {% endfor %}
+                </ul>
+            </div>
+        {% endif %}
+
+        {% for field in form %}
+            {% include "sentry/partial/_form_field.html" %}
+        {% endfor %}
+
+        <input type="submit" class="btn" value="{% blocktrans with request.user.email as email %}Send a test email to {{ email }}{% endblocktrans %}">
+    </form>
+{% endblock %}
diff --git a/src/sentry/templates/sentry/admin/status/queue.html b/src/sentry/templates/sentry/admin/status/queue.html
deleted file mode 100644
index a3b65fb085..0000000000
--- a/src/sentry/templates/sentry/admin/status/queue.html
+++ /dev/null
@@ -1,55 +0,0 @@
-{% extends "sentry/admin/base.html" %}
-
-{% block admin-nav-queue %} class="active"{% endblock %}
-
-{% load i18n %}
-{% load sentry_helpers %}
-
-{% block title %}{% trans "Queue Status" %} | {{ block.super }}{% endblock %}
-
-{% block breadcrumb %}
-    <li class="divider">/</li>
-    <li><a href="{% url sentry-admin-queue-status %}">{% trans "Queue Status" %}</a></li>
-{% endblock %}
-
-{% block inner %}
-    <div id="workers" class="tab-pane">
-        <div class="page-header">
-            <h2>{% trans "Background Processes" %}</h2>
-        </div>
-        {% if background_procs %}
-            <table class="table vars table-bordered table-striped">
-                <colgroup>
-                    <col style="width:220px">
-                </colgroup>
-                <tbody>
-                </tbody>
-            </table>
-        {% else %}
-            <p>{% trans "No information available." %}</p>
-        {% endif %}
-        <div class="page-header">
-            <h2>{% trans "Pending Tasks" %}</h2>
-        </div>
-        <table class="table vars table-bordered table-striped">
-            <colgroup>
-                <col>
-                <col style="width:150px">
-            </colgroup>
-            <thead>
-                <tr>
-                    <th>{% trans "Queue" %}</th>
-                    <th>{% trans "Pending Tasks" %}</th>
-                </tr>
-            </thead>
-            <tbody>
-                {% for queue, num_pending in pending_tasks %}
-                    <tr>
-                        <td>{{ queue }}</td>
-                        <td>{{ num_pending }}</td>
-                    </tr>
-                {% endfor %}
-            </tbody>
-        </table>
-    </div>
-{% endblock %}
diff --git a/src/sentry/web/forms/__init__.py b/src/sentry/web/forms/__init__.py
index a81ecf3617..24b4d747cb 100644
--- a/src/sentry/web/forms/__init__.py
+++ b/src/sentry/web/forms/__init__.py
@@ -151,3 +151,7 @@ class RemoveUserForm(forms.Form):
         ('1', _('Disable the account.')),
         ('2', _('Permanently remove the user and their data.')),
     ), widget=forms.RadioSelect(renderer=RadioFieldRenderer))
+
+
+class TestEmailForm(forms.Form):
+    pass
diff --git a/src/sentry/web/frontend/admin.py b/src/sentry/web/frontend/admin.py
index f9e540dca7..a06ae74d9e 100644
--- a/src/sentry/web/frontend/admin.py
+++ b/src/sentry/web/frontend/admin.py
@@ -12,21 +12,21 @@ import sys
 import uuid
 
 from django.contrib.auth.models import User
+from django.conf import settings as dj_settings
 from django.core.context_processors import csrf
 from django.core.mail import send_mail
 from django.core.urlresolvers import reverse
 from django.db import transaction
-from django.db.models import Sum, Count
+from django.db.models import Sum
 from django.http import HttpResponseRedirect
 from django.utils import timezone
 from django.views.decorators.csrf import csrf_protect
-from kombu.transport.django.models import Queue
 
 from sentry import environment
 from sentry.conf import settings
 from sentry.models import Project, MessageCountByMinute
 from sentry.plugins import plugins
-from sentry.web.forms import NewUserForm, ChangeUserForm, RemoveUserForm
+from sentry.web.forms import NewUserForm, ChangeUserForm, RemoveUserForm, TestEmailForm
 from sentry.web.decorators import requires_admin
 from sentry.web.helpers import render_to_response, plugin_config, \
   render_to_string
@@ -293,22 +293,26 @@ def status_packages(request):
 
 
 @requires_admin
-def status_queue(request):
-    worker_status = (settings.QUEUE['transport'] == 'kombu.transport.django.Transport')
-    if worker_status:
-        pending_tasks = list(Queue.objects.filter(
-            messages__visible=True,
-        ).annotate(num=Count('messages__id')).values_list('name', 'num'))
-        # fetch queues which had no pending tasks
-        pending_tasks.extend((q, 0) for q in Queue.objects.exclude(
-            name__in=[p[0] for p in pending_tasks],
-        ).values_list('name', flat=True))
-    else:
-        pending_tasks = None
-
-    return render_to_response('sentry/admin/status/queue.html', {
-        'pending_tasks': pending_tasks,
-        'worker_status': worker_status,
+@csrf_protect
+def status_mail(request):
+    form = TestEmailForm(request.POST or None)
+
+    if form.is_valid():
+        body = """This email was sent as a request to test the Sentry outbound email configuration."""
+        try:
+            send_mail('%s Test Email' % (settings.EMAIL_SUBJECT_PREFIX,),
+                body, settings.SERVER_EMAIL, [request.user.email],
+                fail_silently=False)
+        except Exception, e:
+            form.errors['__all__'] = [unicode(e)]
+
+    return render_to_response('sentry/admin/status/mail.html', {
+        'form': form,
+        'EMAIL_HOST': dj_settings.EMAIL_HOST,
+        'EMAIL_HOST_PASSWORD': bool(dj_settings.EMAIL_HOST_PASSWORD),
+        'EMAIL_HOST_USER': dj_settings.EMAIL_HOST_USER,
+        'EMAIL_PORT': dj_settings.EMAIL_PORT,
+        'EMAIL_USE_TLS': dj_settings.EMAIL_USE_TLS,
     }, request)
 
 
diff --git a/src/sentry/web/urls.py b/src/sentry/web/urls.py
index 94a757c542..e3d1d4e1bf 100644
--- a/src/sentry/web/urls.py
+++ b/src/sentry/web/urls.py
@@ -109,7 +109,7 @@ urlpatterns = patterns('',
     url(r'^$', generic.dashboard, name='sentry'),
     url(r'^manage/status/$', admin.status_env, name='sentry-admin-status'),
     url(r'^manage/status/packages/$', admin.status_packages, name='sentry-admin-packages-status'),
-    url(r'^manage/status/queue/$', admin.status_queue, name='sentry-admin-queue-status'),
+    url(r'^manage/status/mail/$', admin.status_mail, name='sentry-admin-mail-status'),
     url(r'^manage/stats/$', admin.stats, name='sentry-admin-stats'),
 
     # Admin - Projects
diff --git a/tests/sentry/web/frontend/tests.py b/tests/sentry/web/frontend/tests.py
index d27b53b95b..4b122cd8dd 100644
--- a/tests/sentry/web/frontend/tests.py
+++ b/tests/sentry/web/frontend/tests.py
@@ -123,11 +123,11 @@ class SentryViewsTest(TestCase):
         self.assertEquals(resp.status_code, 200)
         self.assertTemplateUsed(resp, 'sentry/admin/status/packages.html')
 
-    def test_status_queue(self):
+    def test_status_mail(self):
         self.client.login(username='admin', password='admin')
-        resp = self.client.get(reverse('sentry-admin-queue-status'), follow=True)
+        resp = self.client.get(reverse('sentry-admin-mail-status'), follow=True)
         self.assertEquals(resp.status_code, 200)
-        self.assertTemplateUsed(resp, 'sentry/admin/status/queue.html')
+        self.assertTemplateUsed(resp, 'sentry/admin/status/mail.html')
 
     def test_stats(self):
         self.client.login(username='admin', password='admin')
