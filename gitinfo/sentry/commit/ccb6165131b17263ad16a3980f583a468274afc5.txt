commit ccb6165131b17263ad16a3980f583a468274afc5
Author: David Cramer <dcramer@gmail.com>
Date:   Fri Feb 6 12:49:48 2015 -0800

    Handle search queries with react-router

diff --git a/src/sentry/api/endpoints/project_group_index.py b/src/sentry/api/endpoints/project_group_index.py
index 6b806df1d9..b9df9bf043 100644
--- a/src/sentry/api/endpoints/project_group_index.py
+++ b/src/sentry/api/endpoints/project_group_index.py
@@ -121,6 +121,7 @@ class ProjectGroupIndexEndpoint(Endpoint):
             query_kwargs['cursor'] = Cursor.from_string(cursor)
 
         query = request.GET.get('query', 'is:unresolved')
+        print (query)
         if query is not None:
             query_kwargs.update(parse_query(query, request.user))
 
diff --git a/src/sentry/static/sentry/app/views/stream.jsx b/src/sentry/static/sentry/app/views/stream.jsx
index d6b08a7fd2..c4e3a6326c 100644
--- a/src/sentry/static/sentry/app/views/stream.jsx
+++ b/src/sentry/static/sentry/app/views/stream.jsx
@@ -80,9 +80,6 @@ var Stream = React.createClass({
   },
 
   getInitialState() {
-    var queryParams = utils.getQueryParams();
-    var query = queryParams.query === undefined ? 'is:unresolved' : queryParams.query;
-
     return {
       aggList: new utils.Collection([], {
         limit: 50
@@ -93,7 +90,6 @@ var Stream = React.createClass({
       statsPeriod: '24h',
       realtimeActive: false,
       pageLinks: '',
-      query: query,
       loading: true,
       error: false
     };
@@ -112,6 +108,20 @@ var Stream = React.createClass({
     this.fetchData();
   },
 
+  componentWillUnmount() {
+    this._poller.disable();
+  },
+
+  componentDidUpdate(prevProps, prevState) {
+    if (prevState.realtimeActive !== this.state.realtimeActive) {
+      if (this.state.realtimeActive) {
+        this._poller.enable();
+      } else {
+        this._poller.disable();
+      }
+    }
+  },
+
   fetchData() {
     this.setState({
       loading: true,
@@ -142,27 +152,10 @@ var Stream = React.createClass({
     });
   },
 
-  componentWillUnmount() {
-    this._poller.disable();
-  },
-
-  componentDidUpdate(prevProps, prevState) {
-    if (prevState.realtimeActive !== this.state.realtimeActive) {
-      if (this.state.realtimeActive) {
-        this._poller.enable();
-      } else {
-        this._poller.disable();
-      }
-    }
-  },
-
   getAggregateListEndpoint() {
-    var queryParams = utils.getQueryParams();
-    if (typeof queryParams.query === 'undefined') {
-      queryParams.query = this.state.query;
-    }
-    var querystring = $.param(queryParams);
     var params = this.getParams();
+    var queryParams = this.getQuery();
+    var querystring = $.param(queryParams);
 
     return '/projects/' + params.orgId + '/' + params.projectId + '/groups/?' + querystring;
   },
@@ -176,11 +169,6 @@ var Stream = React.createClass({
       statsPeriod: period
     });
   },
-  handleQueryChange(value, event) {
-    this.setState({
-      query: value
-    });
-  },
   handleRealtimePoll(data) {
     this.setState({
       aggList: this.state.aggList.unshift(data)
@@ -199,7 +187,7 @@ var Stream = React.createClass({
 
     return (
       <div>
-        <StreamFilters query={this.state.query} onQueryChange={this.handleQueryChange} />
+        <StreamFilters />
         <div className="group-header-container" data-spy="affix" data-offset-top="134">
           <div className="container">
             <div className="group-header">
diff --git a/src/sentry/static/sentry/app/views/stream/filters.jsx b/src/sentry/static/sentry/app/views/stream/filters.jsx
index 2e4474af86..97ea4866b1 100644
--- a/src/sentry/static/sentry/app/views/stream/filters.jsx
+++ b/src/sentry/static/sentry/app/views/stream/filters.jsx
@@ -46,21 +46,29 @@ var SearchDropdown = React.createClass({
 });
 
 var SearchBar = React.createClass({
-  mixins: [Router.State],
-
-  propTypes: {
-    query: React.PropTypes.string.isRequired,
-    onQueryChange: React.PropTypes.func.isRequired
-  },
+  mixins: [Router.Navigation, Router.State],
 
   getInitialState() {
+    var queryParams = this.getQuery();
+    var query = (typeof queryParams.query === 'undefined' ?
+      'is:unresolved' :
+      queryParams.query);
+
     return {
-      dropdownVisible: false
+      dropdownVisible: false,
+      query: query
     };
   },
 
-  onQueryChange(event) {
-    return this.props.onQueryChange(event.target.value, event);
+  onSubmit(event) {
+    var queryParams = this.getQuery();
+    queryParams.query = this.state.query;
+
+    event.preventDefault();
+
+    this.refs.searchInput.getDOMNode().blur();
+
+    this.transitionTo('stream', this.getParams(), queryParams);
   },
 
   onQueryFocus() {
@@ -75,15 +83,22 @@ var SearchBar = React.createClass({
     });
   },
 
+  onQueryChange() {
+    this.setState({
+      query: event.target.value
+    });
+  },
+
   render() {
     return (
       <div className="search">
-        <form className="form-horizontal">
+        <form className="form-horizontal" onSubmit={this.onSubmit}>
           <div>
             <input type="text" className="search-input form-control"
                    placeholder="Search for events, users, tags, and everything else."
                    name="query"
-                   value={this.props.query}
+                   ref="searchInput"
+                   value={this.state.query}
                    onFocus={this.onQueryFocus}
                    onBlur={this.onQueryBlur}
                    onChange={this.onQueryChange} />
@@ -99,6 +114,10 @@ var SearchBar = React.createClass({
 var FilterSelectLink = React.createClass({
   mixins: [Router.State],
 
+  propTypes: {
+    query: React.PropTypes.object.isRequired
+  },
+
   render() {
     var className = this.props.extraClass;
     className += ' btn btn-default';
@@ -107,14 +126,17 @@ var FilterSelectLink = React.createClass({
       className += ' active';
     }
 
-    var queryString = '?' + this.props.query;
+    var queryParams = this.getQuery();
+    for (var key in this.props.query) {
+      queryParams[key] = this.props.query[key];
+    }
 
     return (
       <Router.Link
           to="stream"
           activeClassName=""
           params={this.getParams()}
-          query={this.props.query}
+          query={queryParams}
           className={className}>
         {this.props.label}
       </Router.Link>
@@ -123,10 +145,7 @@ var FilterSelectLink = React.createClass({
 });
 
 var StreamFilters = React.createClass({
-  propTypes: {
-    query: React.PropTypes.string.isRequired,
-    onQueryChange: React.PropTypes.func.isRequired
-  },
+  mixins: [Router.State],
 
   render() {
     var params = utils.getQueryParams();
@@ -140,7 +159,7 @@ var StreamFilters = React.createClass({
     }
 
     return (
-      <div className="filter-nav" ng-controller="ProjectStreamControlsCtrl">
+      <div className="filter-nav">
         <div className="row">
           <div className="col-sm-4 primary-filters">
             <div className="btn-group btn-group-justified">
@@ -159,7 +178,7 @@ var StreamFilters = React.createClass({
             </div>
           </div>
           <div className="col-sm-8">
-            <SearchBar query={this.props.query} onQueryChange={this.props.onQueryChange} />
+            <SearchBar />
           </div>
         </div>
       </div>
