commit 9c15d581252641757f78e4e13464ca1cc896ff2d
Author: David Cramer <dcramer@gmail.com>
Date:   Sat Feb 4 00:30:39 2012 -0800

    Safely encode URLs in replay request (fixes GH-329)

diff --git a/sentry/utils/http.py b/sentry/utils/http.py
new file mode 100644
index 0000000000..7c7b099218
--- /dev/null
+++ b/sentry/utils/http.py
@@ -0,0 +1,35 @@
+"""
+sentry.utils.http
+~~~~~~~~~~~~~~~~~
+
+:copyright: (c) 2010 by the Sentry Team, see AUTHORS for more details.
+:license: BSD, see LICENSE for more details.
+"""
+import urllib
+
+
+def safe_urlencode(params, doseq=0):
+    """
+    UTF-8-safe version of safe_urlencode
+
+    The stdlib safe_urlencode prior to Python 3.x chokes on UTF-8 values
+    which can't fail down to ascii.
+    """
+    # Snippet originally from pysolr: https://github.com/toastdriven/pysolr
+
+    if hasattr(params, "items"):
+        params = params.items()
+
+    new_params = list()
+
+    for k, v in params:
+        k = k.encode("utf-8")
+
+        if isinstance(v, basestring):
+            new_params.append((k, v.encode("utf-8")))
+        elif isinstance(v, (list, tuple)):
+            new_params.append((k, [i.encode("utf-8") for i in v]))
+        else:
+            new_params.append((k, unicode(v)))
+
+    return urllib.urlencode(new_params, doseq)
diff --git a/sentry/web/frontend/events.py b/sentry/web/frontend/events.py
index e91a02da84..ad1c6ee1a5 100644
--- a/sentry/web/frontend/events.py
+++ b/sentry/web/frontend/events.py
@@ -6,7 +6,6 @@ sentry.web.frontend.events
 :license: BSD, see LICENSE for more details.
 """
 import datetime
-import urllib
 
 from django.core.context_processors import csrf
 from django.core.urlresolvers import reverse
@@ -17,6 +16,7 @@ from sentry.conf import settings
 from sentry.models import Event
 from sentry.filters import Filter
 from sentry.replays import Replayer
+from sentry.utils.http import safe_urlencode
 from sentry.web.decorators import login_required, has_access, render_to_response
 from sentry.web.forms import ReplayForm
 
@@ -78,7 +78,7 @@ def replay_event(request, project_id, event_id):
         headers = ''
 
     if isinstance(http.data, dict):
-        data = urllib.urlencode(http.data)
+        data = safe_urlencode(http.data)
     else:
         data = http.data
 
