commit abbd18d6d4ee18dd5b6c2ff66a581d49e984f9f0
Author: David Cramer <dcramer@gmail.com>
Date:   Fri Dec 19 10:23:27 2014 -0800

    Improve organization members
    
    - Allow all users to view membership
    - Allow users to remove themselves assuming other owners are present

diff --git a/src/sentry/templates/sentry/organization-members.html b/src/sentry/templates/sentry/organization-members.html
index 625322de25..79198532a9 100644
--- a/src/sentry/templates/sentry/organization-members.html
+++ b/src/sentry/templates/sentry/organization-members.html
@@ -66,9 +66,11 @@
           </td>
           <td>
             {% if authorizing_access <= member.type %}
-              <a href="javascript:void(0)" class="remove-member" data-member-id="{{ member.id }}">
-                <span class="icon icon-remove"></span>
-              </a>
+              {% if member.user != request.user or member_can_leave %}
+                <a href="javascript:void(0)" class="remove-member" data-member-id="{{ member.id }}">
+                  <span class="icon icon-remove"></span>
+                </a>
+              {% endif %}
             {% endif %}
           </td>
         </tr>
diff --git a/src/sentry/web/frontend/organization_members.py b/src/sentry/web/frontend/organization_members.py
index b9b57e1174..d808cd8940 100644
--- a/src/sentry/web/frontend/organization_members.py
+++ b/src/sentry/web/frontend/organization_members.py
@@ -9,8 +9,6 @@ from sentry.web.frontend.base import OrganizationView
 
 
 class OrganizationMembersView(OrganizationView):
-    required_access = OrganizationMemberType.ADMIN
-
     def handle(self, request, organization):
         if request.user.is_superuser:
             authorizing_access = OrganizationMemberType.OWNER
@@ -38,9 +36,16 @@ class OrganizationMembersView(OrganizationView):
         for om in queryset:
             member_list.append((om, team_map[om.id]))
 
+        # if the member is not the only owner we allow them to leave the org
+        member_can_leave = any(
+            1 for om, _ in member_list
+            if om.type == OrganizationMemberType.OWNER and om.user != request.user
+        )
+
         context = {
             'member_list': member_list,
             'authorizing_access': authorizing_access,
+            'member_can_leave': member_can_leave,
         }
 
         return self.respond('sentry/organization-members.html', context)
diff --git a/tests/sentry/web/frontend/test_organization_members.py b/tests/sentry/web/frontend/test_organization_members.py
index fcf0be4a08..a702bf444a 100644
--- a/tests/sentry/web/frontend/test_organization_members.py
+++ b/tests/sentry/web/frontend/test_organization_members.py
@@ -3,7 +3,22 @@ from __future__ import absolute_import
 from django.core.urlresolvers import reverse
 
 from sentry.models import OrganizationMember, OrganizationMemberType
-from sentry.testutils import TestCase
+from sentry.testutils import TestCase, PermissionTestCase
+
+
+class OrganizationMembersPermissionTest(PermissionTestCase):
+    def setUp(self):
+        super(OrganizationMembersPermissionTest, self).setUp()
+        self.path = reverse('sentry-organization-members', args=[self.organization.slug])
+
+    def test_teamless_member_can_load(self):
+        self.assert_teamless_member_can_access(self.path)
+
+    def test_org_member_can_load(self):
+        self.assert_org_member_can_access(self.path)
+
+    def test_non_member_cannot_load(self):
+        self.assert_non_member_cannot_access(self.path)
 
 
 class OrganizationMembersTest(TestCase):
