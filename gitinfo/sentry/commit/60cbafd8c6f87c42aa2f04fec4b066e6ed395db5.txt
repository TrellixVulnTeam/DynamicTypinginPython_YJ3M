commit 60cbafd8c6f87c42aa2f04fec4b066e6ed395db5
Author: Armin Ronacher <armin.ronacher@active-4.com>
Date:   Mon Mar 7 00:37:18 2016 +0100

    Put callsigns behind feature flag

diff --git a/src/sentry/api/serializers/models/organization.py b/src/sentry/api/serializers/models/organization.py
index 1482f1a660..796bc59825 100644
--- a/src/sentry/api/serializers/models/organization.py
+++ b/src/sentry/api/serializers/models/organization.py
@@ -53,7 +53,10 @@ class DetailedOrganizationSerializer(OrganizationSerializer):
         feature_list = []
         if features.has('organizations:sso', obj, actor=user):
             feature_list.append('sso')
-        if features.has('organizations:onboarding', obj, actor=user) and not OrganizationOption.objects.filter(organization=obj).exists():
+        if features.has('organizations:callsigns', obj, actor=user):
+            feature_list.append('callsigns')
+        if features.has('organizations:onboarding', obj, actor=user) and \
+           not OrganizationOption.objects.filter(organization=obj).exists():
             feature_list.append('onboarding')
 
         if getattr(obj.flags, 'allow_joinleave'):
diff --git a/src/sentry/conf/server.py b/src/sentry/conf/server.py
index 99462163fc..648fe89393 100644
--- a/src/sentry/conf/server.py
+++ b/src/sentry/conf/server.py
@@ -615,6 +615,7 @@ SENTRY_FEATURES = {
     'auth:register': True,
     'organizations:create': True,
     'organizations:sso': True,
+    'organizations:callsigns': False,
     'projects:event-types': False,
     'projects:global-events': False,
     'projects:quotas': True,
diff --git a/src/sentry/features/__init__.py b/src/sentry/features/__init__.py
index 0d178840b6..44525f070f 100644
--- a/src/sentry/features/__init__.py
+++ b/src/sentry/features/__init__.py
@@ -10,6 +10,7 @@ default_manager.add('auth:register')
 default_manager.add('organizations:create')
 default_manager.add('organizations:sso', OrganizationFeature)
 default_manager.add('organizations:onboarding', OrganizationFeature)
+default_manager.add('organizations:callsigns', OrganizationFeature)
 default_manager.add('projects:event-types', ProjectFeature)
 default_manager.add('projects:global-events', ProjectFeature)
 default_manager.add('projects:quotas', ProjectFeature)
diff --git a/src/sentry/static/sentry/app/components/projectLabel.jsx b/src/sentry/static/sentry/app/components/projectLabel.jsx
index d5d9fb0697..16c001c4b2 100644
--- a/src/sentry/static/sentry/app/components/projectLabel.jsx
+++ b/src/sentry/static/sentry/app/components/projectLabel.jsx
@@ -1,5 +1,6 @@
 import React from 'react';
 import PureRenderMixin from 'react-addons-pure-render-mixin';
+import OrganizationState from '../mixins/organizationState';
 
 const ProjectLabel = React.createClass({
   propTypes: {
@@ -7,15 +8,17 @@ const ProjectLabel = React.createClass({
   },
 
   mixins: [
-    PureRenderMixin
+    PureRenderMixin,
+    OrganizationState
   ],
 
   render() {
     let project = this.props.project;
+    let features = this.getFeatures();
     return (
       <span className="project-label">
         <span className="project-name">{project.name}</span>
-        {project.callSign
+        {features.has('callsigns') && project.callSign
           ? <span className="callsign-addon">{project.callSign}</span>
           : null}
       </span>
diff --git a/src/sentry/static/sentry/app/components/stream/group.jsx b/src/sentry/static/sentry/app/components/stream/group.jsx
index b045bfea2a..11b021efe7 100644
--- a/src/sentry/static/sentry/app/components/stream/group.jsx
+++ b/src/sentry/static/sentry/app/components/stream/group.jsx
@@ -11,6 +11,7 @@ import ProjectState from '../../mixins/projectState';
 import TimeSince from '../timeSince';
 import GroupStore from '../../stores/groupStore';
 import SelectedGroupStore from '../../stores/selectedGroupStore';
+import OrganizationState from '../../mixins/organizationState';
 
 import {valueIsEqual} from '../../utils';
 
@@ -21,6 +22,7 @@ const StreamGroupHeader = React.createClass({
     projectId: React.PropTypes.string.isRequired,
     hasEventTypes: React.PropTypes.bool,
   },
+  mixins: [OrganizationState],
 
   getTitle() {
     let data = this.props.data;
@@ -81,7 +83,7 @@ const StreamGroupHeader = React.createClass({
             }
             <span className="icon icon-soundoff"></span>
             <span className="icon icon-bookmark"></span>
-            {data.shortId
+            {this.getFeatures().has('callsigns') && data.shortId
               ? <span className="short-id">{data.shortId}</span>
               : null}
             {data.title}
diff --git a/src/sentry/static/sentry/app/views/groupDetails/header.jsx b/src/sentry/static/sentry/app/views/groupDetails/header.jsx
index b7dac95852..8530b9e3a8 100644
--- a/src/sentry/static/sentry/app/views/groupDetails/header.jsx
+++ b/src/sentry/static/sentry/app/views/groupDetails/header.jsx
@@ -98,7 +98,7 @@ const GroupHeader = React.createClass({
         <div className="row">
           <div className="col-sm-8">
             <h3>
-              {group.shortId
+              {this.getFeatures().has('callsigns') && group.shortId
                 ? <span className="short-id">{group.shortId}</span>
                 : null}
               {group.title}
diff --git a/src/sentry/static/sentry/app/views/requiredAdminActions/setCallsigns.jsx b/src/sentry/static/sentry/app/views/requiredAdminActions/setCallsigns.jsx
index f9dec7a336..019594fbc6 100644
--- a/src/sentry/static/sentry/app/views/requiredAdminActions/setCallsigns.jsx
+++ b/src/sentry/static/sentry/app/views/requiredAdminActions/setCallsigns.jsx
@@ -196,7 +196,8 @@ const SetCallsignsAction = React.createClass({
 
 SetCallsignsAction.requiresAction = function(org) {
   let info = getProjectInfoForReview(org);
-  return info.requiresReview > 0 && info.canReviewAnything;
+  return info.requiresReview > 0 && info.canReviewAnything &&
+    (new Set(org.access)).has('callsigns');
 };
 
 SetCallsignsAction.getActionLinkTitle = function() {
diff --git a/src/sentry/templates/sentry/create-project.html b/src/sentry/templates/sentry/create-project.html
index e8869516e2..29829b637b 100644
--- a/src/sentry/templates/sentry/create-project.html
+++ b/src/sentry/templates/sentry/create-project.html
@@ -1,6 +1,8 @@
 {% extends "sentry/bases/modal.html" %}
 
+{% load crispy_forms_tags %}
 {% load i18n %}
+{% load sentry_features %}
 
 {% block title %}{% trans "New Project" %} | {{ block.super }}{% endblock %}
 
@@ -12,6 +14,21 @@
 
   <p>{% blocktrans %}Projects allow you to scope events to a specific application in your organization. For example, you might have separate projects for production vs development instances, or separate projects for your web app and mobile app.{% endblocktrans %}</p>
 
-  {% include "sentry/partial/_form.html" %}
+  <form action="" method="post">
+    {% csrf_token %}
+    {% if form.errors %}
+      <div class="alert alert-block alert-error">{% trans "Please correct the errors below." %}</div>
+    {% endif %}
+
+    {{ form|as_crispy_errors }}
+
+    {{ form.name|as_crispy_field }}
+    {% feature organizations:callsigns organization %}
+      {{ form.callsign|as_crispy_field }}
+    {% endfeature %}
+    {{ form.team|as_crispy_field }}
+
+    <button type="submit" class="btn btn-primary" name="action_save">{% trans "Create Project" %}</button>
+  </form>
 </div>
 {% endblock %}
diff --git a/src/sentry/templates/sentry/projects/manage.html b/src/sentry/templates/sentry/projects/manage.html
index 3db4940b74..a9f11f2e62 100644
--- a/src/sentry/templates/sentry/projects/manage.html
+++ b/src/sentry/templates/sentry/projects/manage.html
@@ -39,7 +39,9 @@
       <div class="box-content with-padding">
         {{ form.name|as_crispy_field }}
         {{ form.slug|as_crispy_field }}
-        {{ form.callsign|as_crispy_field }}
+        {% feature organizations:callsigns project.organization %}
+          {{ form.callsign|as_crispy_field }}
+        {% endfeature %}
         {{ form.team|as_crispy_field }}
       </div>
     </div>
diff --git a/src/sentry/web/frontend/project_settings.py b/src/sentry/web/frontend/project_settings.py
index b54bedd4e9..73d6ead448 100644
--- a/src/sentry/web/frontend/project_settings.py
+++ b/src/sentry/web/frontend/project_settings.py
@@ -161,7 +161,14 @@ class EditProjectForm(forms.ModelForm):
         return slug
 
     def clean_callsign(self):
-        callsign = validate_callsign(self.cleaned_data.get('callsign'))
+        # If no callsign was provided we go with the old one.  This
+        # primarily exists so that people without the callsign feature
+        # enabled will not screw up their callsigns.
+        callsign = self.cleaned_data.get('callsign')
+        if not callsign:
+            return self.instance.callsign
+
+        callsign = validate_callsign(callsign)
         if callsign is None:
             raise forms.ValidationError(_('Callsign must be between 2 '
                                           'and 6 letters'))
