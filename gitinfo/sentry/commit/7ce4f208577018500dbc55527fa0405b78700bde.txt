commit 7ce4f208577018500dbc55527fa0405b78700bde
Author: David Cramer <dcramer@gmail.com>
Date:   Thu Feb 7 17:31:46 2013 -0800

    more work on access groups pages

diff --git a/src/sentry/templates/sentry/projects/manage.html b/src/sentry/templates/sentry/projects/manage.html
index fd8eabfa60..7267870fd6 100644
--- a/src/sentry/templates/sentry/projects/manage.html
+++ b/src/sentry/templates/sentry/projects/manage.html
@@ -16,15 +16,15 @@
 {% block bodyclass %} with-left-sidebar{% endblock %}
 
 {% block above_content %}
-<div class="project-controls">
-    <a href="{% url sentry-manage-team-projects team.slug %}" class="dashboard-icon"><i aria-hidden="true" class="icon-list"></i></a>
-    <select class="project-selector" data-placeholder="{% trans "Select a Project" %}">
-        <option value=""></option>
-        {% for p in PROJECT_LIST %}
-            <option value="{{ p.slug }}"{% if p == project %} selected="selected"{% endif %} data-url="{% url sentry-manage-project p.team.slug p.slug %}">{{ p.name }}</option>
-        {% endfor %}
-    </select>
-</div>
+    <div class="project-controls">
+        <a href="{% url sentry-manage-team-projects team.slug %}" class="dashboard-icon"><i aria-hidden="true" class="icon-list"></i></a>
+        <select class="project-selector" data-placeholder="{% trans "Select a Project" %}">
+            <option value=""></option>
+            {% for p in PROJECT_LIST %}
+                <option {% if p == project %} selected="selected"{% endif %} data-url="{% url sentry-manage-project p.team.slug p.slug %}">{{ p.name }}</option>
+            {% endfor %}
+        </select>
+    </div>
 {% endblock %}
 
 {% block main %}
diff --git a/src/sentry/templates/sentry/teams/groups/details.html b/src/sentry/templates/sentry/teams/groups/details.html
index 481f74f3b4..f95e3d0f08 100644
--- a/src/sentry/templates/sentry/teams/groups/details.html
+++ b/src/sentry/templates/sentry/teams/groups/details.html
@@ -1,96 +1,45 @@
 {% extends "sentry/teams/groups/list.html" %}
 
+{% load i18n %}
+{% load sentry_helpers %}
+
 {% block title %}
     {{ group.name }} | {{ block.super }}
 {% endblock %}
 
-{% load i18n %}
-{% load sentry_helpers %}
+{% block bodyclass %} with-left-sidebar{% endblock %}
 
-{% block breadcrumb %}
-    {{ block.super }}
-    <li class="divider"></li>
-    <li><a href="{% url sentry-edit-access-group team.slug group.id %}">{{ group.name }}</a></li>
+{% block above_content %}
+    <div class="project-controls">
+        <a href="{% url sentry-manage-access-groups team.slug %}" class="dashboard-icon"><i aria-hidden="true" class="icon-list"></i></a>
+        <select class="project-selector" data-placeholder="{% trans "Select a Project" %}">
+            <option value=""></option>
+            {% for g in group_list %}
+                <option {% if g == group %} selected="selected"{% endif %} data-url="{% url sentry-edit-access-group g.team.slug g.id %}">{{ g.name }}</option>
+            {% endfor %}
+        </select>
+    </div>
 {% endblock %}
 
-{% block bodyclass %}{% endblock %}
+{% block sidebar %}
+    <ul class="nav nav-list">
+        <li class="nav-header">{% trans "Access Group" %}</li>
+        <li{% if page == 'details' %} class="active"{% endif %}>
+            <a href="{% url sentry-edit-access-group group.team.slug group.id %}">{% trans "Settings" %}</a>
+        </li>
+        <li{% if page == 'members' %} class="active"{% endif %}>
+            <a href="{% url sentry-access-group-members group.team.slug group.id %}">{% trans "Members" %}</a>
+        </li>
+        <li{% if page == 'projects' %} class="active"{% endif %}>
+            <a href="{% url sentry-access-group-projects group.team.slug group.id %}">{% trans "Projects" %}</a>
+        </li>
+    </ul>
+{% endblock %}
 
 {% block inner %}
     <div class="page-header">
-        <h2>{{ group.name }}</h2>
+        <h2>{% trans "Group Settings" %}</h2>
     </div>
 
-    <div class="row-fluid">
-        <div class="span4">
-            <h3>Settings</h3>
-            {% include "sentry/partial/_form.html" %}
-        </div>
-        <div class="span4">
-            <div class="pull-right">
-                <a href="#" class="btn btn-small btn-primary">Add Project</a>
-            </div>
-            <h3>Projects</h3>
-            {% if group_list %}
-                <table class="table table-striped">
-                    <colgroup>
-                        <col/>
-                        <col width="100px"/>
-                        <col width="100px"/>
-                    </colgroup>
-                    <thead>
-                        <tr>
-                            <th>{% trans "Name" %}</th>
-                            <th style="text-align:center;">{% trans "Access Type" %}</th>
-                            <th style="text-align:center">{% trans "Actions" %}</th>
-                        </tr>
-                    </thead>
-                    <tbody>
-                        {% for group in group_list %}
-                            <tr>
-                                <td><a href="{% url sentry-edit-access-group team.slug group.id %}">{{ group.name }}</a>{% if group.managed %} ({% trans "automatically managed" %}){% endif %}</td>
-                                <td style="text-align:center">{{ group.get_type_display }}</td>
-                                <td style="text-align:center"><a href="#" class="btn">{% trans "Remove" %}</a></td>
-                            </tr>
-                        {% endfor %}
-                    </tbody>
-                </table>
-            {% else %}
-                <p>{% trans "You have not created any access groups yet." %}</p>
-            {% endif %}
-        </div>
-
-        <div class="span4">
-            <div class="pull-right">
-                <a href="#" class="btn btn-small btn-primary">Add Member</a>
-            </div>
-            <h3>Members</h3>
-            {% if group_list %}
-                <table class="table table-striped">
-                    <colgroup>
-                        <col/>
-                        <col width="100px"/>
-                        <col width="100px"/>
-                    </colgroup>
-                    <thead>
-                        <tr>
-                            <th>{% trans "Name" %}</th>
-                            <th style="text-align:center;">{% trans "Access Type" %}</th>
-                            <th style="text-align:center">{% trans "Actions" %}</th>
-                        </tr>
-                    </thead>
-                    <tbody>
-                        {% for group in group_list %}
-                            <tr>
-                                <td><a href="{% url sentry-edit-access-group team.slug group.id %}">{{ group.name }}</a>{% if group.managed %} ({% trans "automatically managed" %}){% endif %}</td>
-                                <td style="text-align:center">{{ group.get_type_display }}</td>
-                                <td style="text-align:center"><a href="#" class="btn">{% trans "Remove" %}</a></td>
-                            </tr>
-                        {% endfor %}
-                    </tbody>
-                </table>
-            {% else %}
-                <p>{% trans "You have not created any access groups yet." %}</p>
-            {% endif %}
-        </div>
-    </div>
+    {% include "sentry/partial/_form.html" %}
 {% endblock %}
diff --git a/src/sentry/templates/sentry/teams/groups/members.html b/src/sentry/templates/sentry/teams/groups/members.html
new file mode 100644
index 0000000000..ed63aaa2c5
--- /dev/null
+++ b/src/sentry/templates/sentry/teams/groups/members.html
@@ -0,0 +1,47 @@
+{% extends "sentry/teams/groups/details.html" %}
+
+{% load i18n %}
+{% load sentry_helpers %}
+
+{% block title %}
+    {{ group.name }} | {{ block.super }}
+{% endblock %}
+
+
+{% block inner %}
+    <div class="page-header">
+        <h2>{% trans "Group Members" %}</h2>
+    </div>
+
+    {% if member_list %}
+        <table class="table table-striped">
+            <colgroup>
+                <col/>
+                <col width="100px"/>
+                <col width="180px"/>
+            </colgroup>
+            <thead>
+                <tr>
+                    <th>{% trans "User" %}</th>
+                    <th style="text-align:center">{% trans "Actions" %}</th>
+                </tr>
+            </thead>
+            <tbody>
+                {% for member, user in member_list %}
+                    <tr>
+                        <td>
+                            <a href="{% url sentry-edit-group-member team.slug member.id %}">{{ user.username }}</a><br>
+                            {{ user.email }}
+                        </td>
+                        <td style="text-align:center;">
+                            <a href="{% url sentry-remove-group-member team.slug member.id %}" class="btn btn-danger btn-small">{% trans "Remove" %}</a>
+                        </td>
+                    </tr>
+                {% endfor %}
+            </tbody>
+        </table>
+    {% else %}
+        <p>{% trans "There are no members assigned to this group." %}
+    {% endif %}
+
+{% endblock %}
diff --git a/src/sentry/templates/sentry/teams/groups/projects.html b/src/sentry/templates/sentry/teams/groups/projects.html
new file mode 100644
index 0000000000..e69de29bb2
diff --git a/src/sentry/web/api.py b/src/sentry/web/api.py
index 161e5a2e99..3dc69ba1d5 100644
--- a/src/sentry/web/api.py
+++ b/src/sentry/web/api.py
@@ -9,11 +9,10 @@ import datetime
 import logging
 from functools import wraps
 
-from django.contrib.auth.models import AnonymousUser
+from django.contrib.auth.models import AnonymousUser, User
 from django.core.urlresolvers import reverse
-from django.db.models import Sum
-from django.http import HttpResponse, \
-  HttpResponseForbidden, HttpResponseRedirect
+from django.db.models import Sum, Q
+from django.http import HttpResponse, HttpResponseForbidden, HttpResponseRedirect
 from django.utils import timezone
 from django.views.decorators.cache import never_cache
 from django.views.decorators.csrf import csrf_exempt
@@ -696,6 +695,27 @@ def search_tags(request, team, project):
     return response
 
 
+@never_cache
+@csrf_exempt
+@has_access
+def search_users(request, team):
+    limit = min(100, int(request.GET.get('limit', 10)))
+    query = request.GET['query']
+
+    results = list(User.objects.filter(
+        Q(email__istartswith=query) | Q(first_name__istartswith=query) | Q(username__istartswith=query),
+    ).filter(
+        Q(team_memberships=team) | Q(accessgroup__team=team),
+    ).distinct().order_by('first_name', 'email').values('id', 'username', 'first_name', 'email')[:limit])
+
+    response = HttpResponse(json.dumps({
+        'results': results,
+    }))
+    response['Content-Type'] = 'application/json'
+
+    return response
+
+
 def crossdomain_xml_index(request):
     response = HttpResponse("""<cross-domain-policy>
         <site-control permitted-cross-domain-policies="all"></site-control>
diff --git a/src/sentry/web/frontend/teams.py b/src/sentry/web/frontend/teams.py
index d5dafad9d8..2498e5c9b1 100644
--- a/src/sentry/web/frontend/teams.py
+++ b/src/sentry/web/frontend/teams.py
@@ -527,10 +527,54 @@ def access_group_details(request, team, group_id):
         'team': team,
         'group': group,
         'form': form,
-        'projects': group.projects.all(),
-        'members': group.members.all(),
+        'group_list': AccessGroup.objects.filter(team=team),
+        'page': 'details',
         'SECTION': 'team',
         'SUBSECTION': 'groups',
     })
 
     return render_to_response('sentry/teams/groups/details.html', context, request)
+
+
+@has_access(MEMBER_OWNER)
+@csrf_protect
+def access_group_members(request, team, group_id):
+    try:
+        group = AccessGroup.objects.get(team=team, id=group_id)
+    except AccessGroup.DoesNotExist:
+        return HttpResponseRedirect(reverse('sentry-manage-access-groups', args=[team.slug]))
+
+    context = csrf(request)
+    context.update({
+        'team': team,
+        'group': group,
+        'member_list': group.members.all(),
+        'group_list': AccessGroup.objects.filter(team=team),
+        'page': 'members',
+        'SECTION': 'team',
+        'SUBSECTION': 'groups',
+    })
+
+    return render_to_response('sentry/teams/groups/members.html', context, request)
+
+
+@has_access(MEMBER_OWNER)
+@csrf_protect
+def access_group_projects(request, team, group_id):
+    try:
+        group = AccessGroup.objects.get(team=team, id=group_id)
+    except AccessGroup.DoesNotExist:
+        return HttpResponseRedirect(reverse('sentry-manage-access-groups', args=[team.slug]))
+
+    context = csrf(request)
+    context.update({
+        'team': team,
+        'group': group,
+        'project_list': group.projects.all(),
+        'group_list': AccessGroup.objects.filter(team=team),
+        'page': 'projects',
+        'SECTION': 'team',
+        'SUBSECTION': 'groups',
+    })
+
+    return render_to_response('sentry/teams/groups/projects.html', context, request)
diff --git a/src/sentry/web/helpers.py b/src/sentry/web/helpers.py
index 902377ce70..808cd18733 100644
--- a/src/sentry/web/helpers.py
+++ b/src/sentry/web/helpers.py
@@ -127,7 +127,7 @@ def get_default_context(request, existing_context=None, team=None):
             })
 
         if not existing_context or 'PROJECT_LIST' not in existing_context:
-            project_list = get_project_list(request.user, team=team).values()
+            project_list = Project.objects.get_for_user(request.user, team=team)
             context['PROJECT_LIST'] = sorted(project_list, key=lambda x: x.name)
         if not existing_context or 'TEAM_LIST' not in existing_context:
             context['TEAM_LIST'] = sorted(Team.objects.get_for_user(request.user).values(), key=lambda x: x.name)
diff --git a/src/sentry/web/urls.py b/src/sentry/web/urls.py
index 77e5469874..f889cf9f70 100644
--- a/src/sentry/web/urls.py
+++ b/src/sentry/web/urls.py
@@ -60,6 +60,10 @@ urlpatterns = patterns('',
         name='sentry-new-access-group'),
     url(r'^account/teams/(?P<team_slug>[\w_-]+)/groups/(?P<group_id>\d+)/edit/$', teams.access_group_details,
         name='sentry-edit-access-group'),
+    url(r'^account/teams/(?P<team_slug>[\w_-]+)/groups/(?P<group_id>\d+)/members/$', teams.access_group_members,
+        name='sentry-access-group-members'),
+    url(r'^account/teams/(?P<team_slug>[\w_-]+)/groups/(?P<group_id>\d+)/projects/$', teams.access_group_projects,
+        name='sentry-access-group-projects'),
     url(r'^account/teams/(?P<team_slug>[\w_-]+)/members/$', teams.manage_team_members,
         name='sentry-manage-team-members'),
     url(r'^account/teams/(?P<team_slug>[\w_-]+)/members/new/$', teams.new_team_member,
@@ -171,6 +175,8 @@ urlpatterns = patterns('',
         name='sentry-api-stats'),
     url(r'^api/(?P<team_slug>[\w_-]+)/(?P<project_id>[\w_-]+)/tags/search/$', api.search_tags,
         name='sentry-api-search-tags'),
+    url(r'^api/(?P<team_slug>[\w_-]+)/users/search/$', api.search_users,
+        name='sentry-api-search-users'),
 
     # Users
     url(r'^(?P<team_slug>[\w_-]+)/users/$', users.user_list, name='sentry-users'),
diff --git a/tests/sentry/web/api/tests.py b/tests/sentry/web/api/tests.py
index 502aa5cc8b..0fb329e6f8 100644
--- a/tests/sentry/web/api/tests.py
+++ b/tests/sentry/web/api/tests.py
@@ -3,9 +3,11 @@
 from __future__ import absolute_import
 
 import mock
+from django.contrib.auth.models import User
 from django.core.urlresolvers import reverse
-from sentry.models import Project
-from sentry.testutils import TestCase, fixture
+from sentry.models import Project, TeamMember, AccessGroup
+from sentry.testutils import TestCase, fixture, before
+from sentry.utils import json
 
 
 class StoreViewTest(TestCase):
@@ -126,3 +128,59 @@ class CrossDomainXmlIndexTest(TestCase):
         self.assertEquals(resp.status_code, 200)
         self.assertEquals(resp['Content-Type'], 'application/xml')
         self.assertIn('<site-control permitted-cross-domain-policies="all"></site-control>', resp.content)
+
+
+class SearchUsersTest(TestCase):
+    @fixture
+    def path(self):
+        return reverse('sentry-api-search-users', args=[self.team.slug])
+
+    @before
+    def login_user(self):
+        self.login()
+
+    def test_finds_users_from_team_members(self):
+        otheruser = User.objects.create(first_name='Bob Ross', username='bobross', email='bob@example.com')
+        TeamMember.objects.create(team=self.team, user=otheruser)
+
+        resp = self.client.get(self.path, {'query': 'bob'})
+
+        assert resp.status_code == 200
+        assert resp['Content-Type'] == 'application/json'
+        assert json.loads(resp.content) == {
+            'results': [{
+                'id': otheruser.id,
+                'first_name': otheruser.first_name,
+                'username': otheruser.username,
+                'email': otheruser.email,
+            }]
+        }
+
+    def test_finds_users_from_access_group_members(self):
+        otheruser = User.objects.create(first_name='Bob Ross', username='bobross', email='bob@example.com')
+        group = AccessGroup.objects.create(team=self.team, name='Test')
+        group.members.add(otheruser)
+
+        resp = self.client.get(self.path, {'query': 'bob'})
+
+        assert resp.status_code == 200
+        assert resp['Content-Type'] == 'application/json'
+        assert json.loads(resp.content) == {
+            'results': [{
+                'id': otheruser.id,
+                'first_name': otheruser.first_name,
+                'username': otheruser.username,
+                'email': otheruser.email,
+            }]
+        }
+
+    def test_does_not_include_users_who_are_not_members(self):
+        User.objects.create(first_name='Bob Ross', username='bobross', email='bob@example.com')
+
+        resp = self.client.get(self.path, {'query': 'bob'})
+
+        assert resp.status_code == 200
+        assert resp['Content-Type'] == 'application/json'
+        assert json.loads(resp.content) == {
+            'results': []
+        }
