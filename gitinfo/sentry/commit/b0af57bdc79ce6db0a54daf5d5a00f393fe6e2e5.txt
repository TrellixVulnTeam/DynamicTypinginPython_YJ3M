commit b0af57bdc79ce6db0a54daf5d5a00f393fe6e2e5
Author: David Cramer <dcramer@gmail.com>
Date:   Sat Oct 19 18:21:40 2013 -0700

    Add tests for node data transitions

diff --git a/src/sentry/models.py b/src/sentry/models.py
index da974933fb..32500e617c 100644
--- a/src/sentry/models.py
+++ b/src/sentry/models.py
@@ -756,16 +756,6 @@ class Event(EventBase):
 
         return SortedDict((k, v) for k, v in sorted(result, key=lambda x: x[1].get_score(), reverse=True))
 
-    def bind_node_data(self):
-        from sentry import app
-
-        node_id = self._data.get('data_nid')
-
-        if not node_id:
-            return self._data
-
-        self._node_data_cache = app.nodestore.get(node_id)
-
     def get_version(self):
         if not self.data:
             return
diff --git a/tests/sentry/models/tests.py b/tests/sentry/models/tests.py
index 36062e2c44..b00174517e 100644
--- a/tests/sentry/models/tests.py
+++ b/tests/sentry/models/tests.py
@@ -8,13 +8,17 @@ from datetime import timedelta
 from django.conf import settings
 from django.core import mail
 from django.core.urlresolvers import reverse
+from django.db import connection
 from django.utils import timezone
 from sentry.constants import MINUTE_NORMALIZATION
+from sentry.db.models.fields.node import NodeData
 from sentry.models import (
     Project, ProjectKey, Group, Event, Team,
     GroupTag, GroupCountByMinute, TagValue, PendingTeamMember,
     LostPasswordHash, Alert, User, create_default_project)
 from sentry.testutils import TestCase, fixture
+from sentry.utils.compat import pickle
+from sentry.utils.strings import compress
 
 
 class ProjectTest(TestCase):
@@ -169,3 +173,33 @@ class CreateDefaultProjectTest(TestCase):
         team = project.team
         assert team.owner == user
         assert team.slug == 'sentry'
+
+
+class EventNodeStoreTest(TestCase):
+    def test_does_transition_data_to_node(self):
+        group = self.group
+        data = {'key': 'value'}
+
+        cursor = connection.cursor()
+        cursor.execute(
+            "INSERT INTO sentry_message (group_id, project_id, data, logger, level, message, checksum, datetime) VALUES(%s, %s, %s, '', 0, %s, %s, %s)",
+            [group.id, group.project_id, compress(pickle.dumps(data)), 'test', 'a' * 32, timezone.now()]
+        )
+        event_id = cursor.lastrowid
+        event = Event.objects.get(id=event_id)
+        assert type(event.data) == NodeData
+        assert event.data == data
+        assert event.data.id is None
+
+        event.save()
+
+        assert event.data == data
+        assert event.data.id is not None
+
+        node_id = event.data.id
+        event = Event.objects.get(id=event_id)
+
+        Event.objects.bind_nodes([event], 'data')
+
+        assert event.data == data
+        assert event.data.id == node_id
