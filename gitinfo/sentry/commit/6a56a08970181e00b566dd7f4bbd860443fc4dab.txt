commit 6a56a08970181e00b566dd7f4bbd860443fc4dab
Author: Matte Noble <me@mattenoble.com>
Date:   Tue Sep 4 14:58:32 2018 -0700

    fix(integrations): migratable repos when enabled (#9611)
    
    Only show Migratable Repositories if the OrganizationIntegration is
    enabled.

diff --git a/src/sentry/api/endpoints/organization_repositories.py b/src/sentry/api/endpoints/organization_repositories.py
index 9d5e952178..87247fad75 100644
--- a/src/sentry/api/endpoints/organization_repositories.py
+++ b/src/sentry/api/endpoints/organization_repositories.py
@@ -8,7 +8,7 @@ from sentry.api.bases.organization import OrganizationEndpoint
 from sentry.api.paginator import OffsetPaginator
 from sentry.api.serializers import serialize
 from sentry.constants import ObjectStatus
-from sentry.models import Integration, OrganizationIntegration, Repository
+from sentry.models import Integration, Repository
 from sentry.plugins import bindings
 
 
@@ -56,13 +56,11 @@ class OrganizationRepositoriesEndpoint(OrganizationEndpoint):
         elif status == 'unmigratable':
             repos = []
 
-            org_integrations = OrganizationIntegration.objects.filter(
-                organization_id=organization.id,
-            )
-
             integrations = Integration.objects.filter(
-                id__in=org_integrations.values('integration_id'),
+                organizationintegration__organization=organization,
+                organizationintegration__status=ObjectStatus.ACTIVE,
                 provider__in=('bitbucket', 'github', 'vsts'),
+                status=ObjectStatus.ACTIVE,
             )
 
             repos = [
diff --git a/tests/sentry/api/endpoints/test_organization_repositories.py b/tests/sentry/api/endpoints/test_organization_repositories.py
index be464d35c8..1607adff55 100644
--- a/tests/sentry/api/endpoints/test_organization_repositories.py
+++ b/tests/sentry/api/endpoints/test_organization_repositories.py
@@ -6,6 +6,7 @@ from mock import patch
 
 from django.core.urlresolvers import reverse
 
+from sentry.constants import ObjectStatus
 from sentry.models import Integration, OrganizationIntegration, Repository
 from sentry.plugins.providers.dummy.repository import DummyRepositoryProvider
 from sentry.testutils import APITestCase
@@ -82,6 +83,70 @@ class OrganizationRepositoriesListTest(APITestCase):
             assert response.status_code == 200, response.content
             assert len(response.data) == 0
 
+    def test_status_unmigratable_disabled_integration(self):
+        self.url = self.url + '?status=unmigratable'
+
+        integration = Integration.objects.create(
+            provider='github',
+            status=ObjectStatus.DISABLED,
+        )
+
+        OrganizationIntegration.objects.create(
+            integration_id=integration.id,
+            organization_id=self.org.id,
+        )
+
+        unmigratable_repo = Repository.objects.create(
+            name='NotConnected/foo',
+            organization_id=self.org.id,
+        )
+
+        with patch('sentry.integrations.github.GitHubIntegration.get_unmigratable_repositories') as f:
+            f.return_value = [unmigratable_repo]
+
+            response = self.client.get(self.url, format='json')
+
+            assert response.status_code == 200
+
+            # Shouldn't return the above "unmigratable repo" since the
+            # Integration is disabled.
+            assert len(response.data) == 0
+
+            # Shouldn't even make the request to get repos
+            assert not f.called
+
+    def test_status_unmigratable_disabled_org_integration(self):
+        self.url = self.url + '?status=unmigratable'
+
+        integration = Integration.objects.create(
+            provider='github',
+        )
+
+        OrganizationIntegration.objects.create(
+            integration_id=integration.id,
+            organization_id=self.org.id,
+            status=ObjectStatus.DISABLED,
+        )
+
+        unmigratable_repo = Repository.objects.create(
+            name='NotConnected/foo',
+            organization_id=self.org.id,
+        )
+
+        with patch('sentry.integrations.github.GitHubIntegration.get_unmigratable_repositories') as f:
+            f.return_value = [unmigratable_repo]
+
+            response = self.client.get(self.url, format='json')
+
+            assert response.status_code == 200
+
+            # Shouldn't return the above "unmigratable repo" since the
+            # Integration is disabled.
+            assert len(response.data) == 0
+
+            # Shouldn't even make the request to get repos
+            assert not f.called
+
 
 class OrganizationRepositoriesCreateTest(APITestCase):
     def test_simple(self):
