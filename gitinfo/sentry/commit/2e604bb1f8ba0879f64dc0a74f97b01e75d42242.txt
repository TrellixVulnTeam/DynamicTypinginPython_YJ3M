commit 2e604bb1f8ba0879f64dc0a74f97b01e75d42242
Author: Armin Ronacher <armin.ronacher@active-4.com>
Date:   Mon May 2 17:17:41 2016 +0200

    Refactored body rendering

diff --git a/src/sentry/interfaces/breadcrumbs.py b/src/sentry/interfaces/breadcrumbs.py
index df5086334f..e7992cc201 100644
--- a/src/sentry/interfaces/breadcrumbs.py
+++ b/src/sentry/interfaces/breadcrumbs.py
@@ -126,7 +126,7 @@ class Breadcrumbs(Interface):
                 'level': x.get('level', 'info'),
                 'message': x.get('message'),
                 'category': x.get('category'),
-                'data': x.get('data') or {},
+                'data': x.get('data') or None,
             }
         return {
             'values': map(_convert, self.values),
diff --git a/src/sentry/static/sentry/app/components/events/interfaces/breadcrumbComponents/crumb.jsx b/src/sentry/static/sentry/app/components/events/interfaces/breadcrumbComponents/crumb.jsx
index 6bcd391567..6fc2aebc11 100644
--- a/src/sentry/static/sentry/app/components/events/interfaces/breadcrumbComponents/crumb.jsx
+++ b/src/sentry/static/sentry/app/components/events/interfaces/breadcrumbComponents/crumb.jsx
@@ -12,11 +12,10 @@ const CrumbComponent = React.createClass({
 
   renderSummary() {
     let {crumb} = this.props;
-    let {message, type} = crumb;
 
     return (
       <div className="summary">
-        {message && <pre><code>{message}</code></pre>}
+        {crumb.message && <pre><code>{crumb.message}</code></pre>}
         {crumb.category && <Category value={crumb.category}/>}
         {crumb.duration &&
           <span className="crumb-timing">
@@ -59,8 +58,13 @@ const CrumbComponent = React.createClass({
     );
   },
 
-  render() {
-    let crumb = this.props.crumb;
+  renderData() {
+    let {crumb} = this.props;
+
+    if (!crumb.data) {
+      return null;
+    }
+
     let body = _.chain(crumb.data)
       .map((val, key) => [val, key])
       .map(([val, key]) => {
@@ -73,6 +77,14 @@ const CrumbComponent = React.createClass({
       })
       .value();
 
+    return (
+      <tbody>{body}</tbody>
+    );
+  },
+
+  render() {
+    let crumb = this.props.crumb;
+
     return (
       <li className={this.getClassName()}>
         <span className="icon-container">
@@ -89,11 +101,7 @@ const CrumbComponent = React.createClass({
               <td className="value">{this.renderSummary()}</td>
             </tr>
           </thead>
-          {crumb.data &&
-            <tbody>
-              {body}
-            </tbody>
-          }
+          {this.renderData()}
         </table>
       </li>
     );
