commit 0ec22232d2e6acd0ff82c7a9aae2f950001ad56f
Author: Lyn Nagara <lyn.nagara@gmail.com>
Date:   Tue Feb 6 11:52:21 2018 -0800

    fix: Use tooltip component in stream/group details (#7148)
    
    Fixes #7145

diff --git a/src/sentry/static/sentry/app/components/actions/ignore.jsx b/src/sentry/static/sentry/app/components/actions/ignore.jsx
index 4843d56efc..a0d7b5def3 100644
--- a/src/sentry/static/sentry/app/components/actions/ignore.jsx
+++ b/src/sentry/static/sentry/app/components/actions/ignore.jsx
@@ -9,6 +9,7 @@ import Duration from '../duration';
 import CustomIgnoreCountModal from '../customIgnoreCountModal';
 import CustomIgnoreDurationModal from '../customIgnoreDurationModal';
 import ActionLink from './actionLink';
+import Tooltip from '../tooltip';
 
 export default class IgnoreActions extends React.Component {
   static propTypes = {
@@ -80,13 +81,11 @@ export default class IgnoreActions extends React.Component {
     if (isIgnored) {
       return (
         <div className="btn-group">
-          <a
-            className={linkClassName + ' tip'}
-            title={t('Change status to unresolved')}
-            onClick={() => onUpdate({status: 'unresolved'})}
-          >
-            <span className="icon-ban" />
-          </a>
+          <Tooltip title={t('Change status to unresolved')}>
+            <a className={linkClassName} onClick={() => onUpdate({status: 'unresolved'})}>
+              <span className="icon-ban" />
+            </a>
+          </Tooltip>
         </div>
       );
     }
diff --git a/src/sentry/static/sentry/app/components/actions/resolve.jsx b/src/sentry/static/sentry/app/components/actions/resolve.jsx
index 99a50afa6d..e67a998dec 100644
--- a/src/sentry/static/sentry/app/components/actions/resolve.jsx
+++ b/src/sentry/static/sentry/app/components/actions/resolve.jsx
@@ -7,6 +7,7 @@ import CustomResolutionModal from '../customResolutionModal';
 import MenuItem from '../menuItem';
 import DropdownLink from '../dropdownLink';
 import ActionLink from './actionLink';
+import Tooltip from '../tooltip';
 
 export default class ResolveActions extends React.Component {
   static propTypes = {
@@ -54,26 +55,29 @@ export default class ResolveActions extends React.Component {
     if (isAutoResolved) {
       return (
         <div className="btn-group">
-          <a
-            className={this.getButtonClass('active tip')}
+          <Tooltip
             title={t(
               'This event is resolved due to the Auto Resolve configuration for this project'
             )}
           >
-            <span className="icon-checkmark" />
-          </a>
+            <a className={this.getButtonClass('active')}>
+              <span className="icon-checkmark" />
+            </a>
+          </Tooltip>
         </div>
       );
     } else {
       return (
         <div className="btn-group">
-          <a
-            className={this.getButtonClass('active')}
-            title={t('Unresolve')}
-            onClick={() => onUpdate({status: 'unresolved'})}
-          >
-            <span className="icon-checkmark" />
-          </a>
+          <Tooltip title={t('Unresolve')}>
+            <a
+              className={this.getButtonClass('active')}
+              title={t('Unresolve')}
+              onClick={() => onUpdate({status: 'unresolved'})}
+            >
+              <span className="icon-checkmark" />
+            </a>
+          </Tooltip>
         </div>
       );
     }
@@ -99,7 +103,6 @@ export default class ResolveActions extends React.Component {
       return this.renderResolved();
     }
 
-    let actionClassName = 'tip';
     let actionTitle = !hasRelease
       ? t('Set up release tracking in order to use this feature.')
       : '';
@@ -141,54 +144,56 @@ export default class ResolveActions extends React.Component {
           >
             <MenuItem header={true}>{t('Resolved In')}</MenuItem>
             <MenuItem noAnchor={true}>
-              <ActionLink
-                {...actionLinkProps}
-                title={actionTitle}
-                className={actionClassName}
-                onAction={() => {
-                  return (
-                    hasRelease &&
-                    onUpdate({
-                      status: 'resolved',
-                      statusDetails: {
-                        inNextRelease: true,
-                      },
-                    })
-                  );
-                }}
-              >
-                {t('The next release')}
-              </ActionLink>
-              <ActionLink
-                {...actionLinkProps}
-                title={actionTitle}
-                onAction={() => {
-                  return (
-                    hasRelease &&
-                    onUpdate({
-                      status: 'resolved',
-                      statusDetails: {
-                        inRelease: latestRelease ? latestRelease.version : 'latest',
-                      },
-                    })
-                  );
-                }}
-                className={actionClassName}
-              >
-                {latestRelease
-                  ? t('The current release (%s)', getShortVersion(latestRelease.version))
-                  : t('The current release')}
-              </ActionLink>
-
-              <ActionLink
-                {...actionLinkProps}
-                title={actionTitle}
-                onAction={() => hasRelease && this.setState({modal: true})}
-                className={actionClassName}
-                shouldConfirm={false}
-              >
-                {t('Another version ...')}
-              </ActionLink>
+              <Tooltip title={actionTitle}>
+                <ActionLink
+                  {...actionLinkProps}
+                  onAction={() => {
+                    return (
+                      hasRelease &&
+                      onUpdate({
+                        status: 'resolved',
+                        statusDetails: {
+                          inNextRelease: true,
+                        },
+                      })
+                    );
+                  }}
+                >
+                  {t('The next release')}
+                </ActionLink>
+              </Tooltip>
+              <Tooltip title={actionTitle}>
+                <ActionLink
+                  {...actionLinkProps}
+                  onAction={() => {
+                    return (
+                      hasRelease &&
+                      onUpdate({
+                        status: 'resolved',
+                        statusDetails: {
+                          inRelease: latestRelease ? latestRelease.version : 'latest',
+                        },
+                      })
+                    );
+                  }}
+                >
+                  {latestRelease
+                    ? t(
+                        'The current release (%s)',
+                        getShortVersion(latestRelease.version)
+                      )
+                    : t('The current release')}
+                </ActionLink>
+              </Tooltip>
+              <Tooltip title={actionTitle}>
+                <ActionLink
+                  {...actionLinkProps}
+                  onAction={() => hasRelease && this.setState({modal: true})}
+                  shouldConfirm={false}
+                >
+                  {t('Another version ...')}
+                </ActionLink>
+              </Tooltip>
             </MenuItem>
           </DropdownLink>
         </div>
diff --git a/src/sentry/static/sentry/app/views/groupDetails/actions.jsx b/src/sentry/static/sentry/app/views/groupDetails/actions.jsx
index 49f77160b3..59b7b1db74 100644
--- a/src/sentry/static/sentry/app/views/groupDetails/actions.jsx
+++ b/src/sentry/static/sentry/app/views/groupDetails/actions.jsx
@@ -15,7 +15,6 @@ import IssuePluginActions from '../../components/group/issuePluginActions';
 import LinkWithConfirmation from '../../components/linkWithConfirmation';
 import MenuItem from '../../components/menuItem';
 import ShareIssue from '../../components/shareIssue';
-import TooltipMixin from '../../mixins/tooltip';
 
 import ResolveActions from '../../components/actions/resolve';
 import IgnoreActions from '../../components/actions/ignore';
@@ -86,14 +85,7 @@ class DeleteActions extends React.Component {
 const GroupDetailsActions = createReactClass({
   displayName: 'GroupDetailsActions',
 
-  mixins: [
-    ApiMixin,
-    GroupState,
-    TooltipMixin({
-      selector: '.tip',
-      container: 'body',
-    }),
-  ],
+  mixins: [ApiMixin, GroupState],
 
   getInitialState() {
     return {ignoreModal: null, shareBusy: false};
diff --git a/src/sentry/static/sentry/app/views/stream/actions.jsx b/src/sentry/static/sentry/app/views/stream/actions.jsx
index d8c766447b..5759c60aa2 100644
--- a/src/sentry/static/sentry/app/views/stream/actions.jsx
+++ b/src/sentry/static/sentry/app/views/stream/actions.jsx
@@ -5,7 +5,6 @@ import Reflux from 'reflux';
 import {capitalize} from 'lodash';
 
 import ApiMixin from '../../mixins/apiMixin';
-import TooltipMixin from '../../mixins/tooltip';
 import DropdownLink from '../../components/dropdownLink';
 import IndicatorStore from '../../stores/indicatorStore';
 import MenuItem from '../../components/menuItem';
@@ -18,6 +17,7 @@ import ToolbarHeader from '../../components/toolbarHeader';
 import ResolveActions from '../../components/actions/resolve';
 import IgnoreActions from '../../components/actions/ignore';
 import ActionLink from '../../components/actions/actionLink';
+import Tooltip from '../../components/tooltip';
 
 const BULK_LIMIT_STR = '1,000';
 
@@ -115,20 +115,7 @@ const StreamActions = createReactClass({
     latestRelease: PropTypes.object,
   },
 
-  mixins: [
-    ApiMixin,
-    TooltipMixin({
-      selector: '.tip',
-      placement: 'bottom',
-      container: 'body',
-      constraints: [
-        {
-          attachment: 'together',
-        },
-      ],
-    }),
-    Reflux.listenTo(SelectedGroupStore, 'onSelectedGroupChange'),
-  ],
+  mixins: [ApiMixin, Reflux.listenTo(SelectedGroupStore, 'onSelectedGroupChange')],
 
   getDefaultProps() {
     return {hasReleases: false, latestRelease: null};
@@ -145,14 +132,6 @@ const StreamActions = createReactClass({
     };
   },
 
-  componentWillReceiveProps({realtimeActive}) {
-    // Need to re-attach tooltips
-    if (this.props.realtimeActive !== realtimeActive) {
-      this.removeTooltips();
-      this.attachTooltips();
-    }
-  },
-
   selectAll() {
     this.setState({
       allInQuerySelected: true,
@@ -392,19 +371,22 @@ const StreamActions = createReactClass({
             </div>
 
             <div className="btn-group">
-              <a
-                className="btn btn-default btn-sm hidden-xs realtime-control tip"
+              <Tooltip
                 title={`${this.props.realtimeActive
                   ? 'Pause'
                   : 'Enable'} real-time updates`}
-                onClick={this.onRealtimeChange}
               >
-                {this.props.realtimeActive ? (
-                  <span className="icon icon-pause" />
-                ) : (
-                  <span className="icon icon-play" />
-                )}
-              </a>
+                <a
+                  className="btn btn-default btn-sm hidden-xs realtime-control"
+                  onClick={this.onRealtimeChange}
+                >
+                  {this.props.realtimeActive ? (
+                    <span className="icon icon-pause" />
+                  ) : (
+                    <span className="icon icon-play" />
+                  )}
+                </a>
+              </Tooltip>
             </div>
           </div>
           <div className="hidden-sm stream-actions-assignee col-md-1" />
diff --git a/tests/js/spec/components/actions/__snapshots__/resolve.spec.jsx.snap b/tests/js/spec/components/actions/__snapshots__/resolve.spec.jsx.snap
index 2573af2228..b13db7619e 100644
--- a/tests/js/spec/components/actions/__snapshots__/resolve.spec.jsx.snap
+++ b/tests/js/spec/components/actions/__snapshots__/resolve.spec.jsx.snap
@@ -224,60 +224,39 @@ exports[`ResolveActions with confirmation step renders 1`] = `
                   role="presentation"
                   title={null}
                 >
-                  <ActionLink
-                    className="tip"
-                    confirmLabel="Resolve"
-                    disabled={false}
-                    message="Are you sure???"
-                    onAction={[Function]}
-                    shouldConfirm={true}
+                  <Tooltip
                     title="Set up release tracking in order to use this feature."
                   >
-                    <Confirm
-                      cancelText="Cancel"
-                      confirmText="Resolve"
+                    <ActionLink
+                      className="tip"
+                      confirmLabel="Resolve"
+                      disabled={false}
                       message="Are you sure???"
-                      onConfirm={[Function]}
-                      priority="primary"
+                      onAction={[Function]}
+                      shouldConfirm={true}
+                      title="Set up release tracking in order to use this feature."
                     >
-                      <a
-                        className="tip"
-                        onClick={[Function]}
-                        title="Set up release tracking in order to use this feature."
-                      >
-                         
-                        The next release
-                      </a>
-                      <Modal
-                        animation={false}
-                        autoFocus={true}
-                        backdrop={true}
-                        bsClass="modal"
-                        dialogComponentClass={[Function]}
-                        enforceFocus={true}
-                        keyboard={true}
-                        manager={
-                          ModalManager {
-                            "add": [Function],
-                            "containers": Array [],
-                            "data": Array [],
-                            "handleContainerOverflow": true,
-                            "hideSiblingNodes": true,
-                            "isTopModal": [Function],
-                            "modals": Array [],
-                            "remove": [Function],
-                          }
-                        }
-                        onHide={[Function]}
-                        renderBackdrop={[Function]}
-                        restoreFocus={true}
-                        show={false}
+                      <Confirm
+                        cancelText="Cancel"
+                        confirmText="Resolve"
+                        message="Are you sure???"
+                        onConfirm={[Function]}
+                        priority="primary"
                       >
+                        <a
+                          className="tip"
+                          onClick={[Function]}
+                          title="Set up release tracking in order to use this feature."
+                        >
+                           
+                          The next release
+                        </a>
                         <Modal
+                          animation={false}
                           autoFocus={true}
                           backdrop={true}
-                          backdropClassName="modal-backdrop"
-                          containerClassName="modal-open"
+                          bsClass="modal"
+                          dialogComponentClass={[Function]}
                           enforceFocus={true}
                           keyboard={true}
                           manager={
@@ -292,70 +271,74 @@ exports[`ResolveActions with confirmation step renders 1`] = `
                               "remove": [Function],
                             }
                           }
-                          onEntering={[Function]}
-                          onExited={[Function]}
                           onHide={[Function]}
                           renderBackdrop={[Function]}
                           restoreFocus={true}
                           show={false}
-                        />
-                      </Modal>
-                    </Confirm>
-                  </ActionLink>
-                  <ActionLink
-                    className="tip"
-                    confirmLabel="Resolve"
-                    disabled={false}
-                    message="Are you sure???"
-                    onAction={[Function]}
-                    shouldConfirm={true}
+                        >
+                          <Modal
+                            autoFocus={true}
+                            backdrop={true}
+                            backdropClassName="modal-backdrop"
+                            containerClassName="modal-open"
+                            enforceFocus={true}
+                            keyboard={true}
+                            manager={
+                              ModalManager {
+                                "add": [Function],
+                                "containers": Array [],
+                                "data": Array [],
+                                "handleContainerOverflow": true,
+                                "hideSiblingNodes": true,
+                                "isTopModal": [Function],
+                                "modals": Array [],
+                                "remove": [Function],
+                              }
+                            }
+                            onEntering={[Function]}
+                            onExited={[Function]}
+                            onHide={[Function]}
+                            renderBackdrop={[Function]}
+                            restoreFocus={true}
+                            show={false}
+                          />
+                        </Modal>
+                      </Confirm>
+                    </ActionLink>
+                  </Tooltip>
+                  <Tooltip
                     title="Set up release tracking in order to use this feature."
                   >
-                    <Confirm
-                      cancelText="Cancel"
-                      confirmText="Resolve"
+                    <ActionLink
+                      className="tip"
+                      confirmLabel="Resolve"
+                      disabled={false}
                       message="Are you sure???"
-                      onConfirm={[Function]}
-                      priority="primary"
+                      onAction={[Function]}
+                      shouldConfirm={true}
+                      title="Set up release tracking in order to use this feature."
                     >
-                      <a
-                        className="tip"
-                        onClick={[Function]}
-                        title="Set up release tracking in order to use this feature."
-                      >
-                         
-                        The current release
-                      </a>
-                      <Modal
-                        animation={false}
-                        autoFocus={true}
-                        backdrop={true}
-                        bsClass="modal"
-                        dialogComponentClass={[Function]}
-                        enforceFocus={true}
-                        keyboard={true}
-                        manager={
-                          ModalManager {
-                            "add": [Function],
-                            "containers": Array [],
-                            "data": Array [],
-                            "handleContainerOverflow": true,
-                            "hideSiblingNodes": true,
-                            "isTopModal": [Function],
-                            "modals": Array [],
-                            "remove": [Function],
-                          }
-                        }
-                        onHide={[Function]}
-                        renderBackdrop={[Function]}
-                        restoreFocus={true}
-                        show={false}
+                      <Confirm
+                        cancelText="Cancel"
+                        confirmText="Resolve"
+                        message="Are you sure???"
+                        onConfirm={[Function]}
+                        priority="primary"
                       >
+                        <a
+                          className="tip"
+                          onClick={[Function]}
+                          title="Set up release tracking in order to use this feature."
+                        >
+                           
+                          The current release
+                        </a>
                         <Modal
+                          animation={false}
                           autoFocus={true}
                           backdrop={true}
-                          backdropClassName="modal-backdrop"
-                          containerClassName="modal-open"
+                          bsClass="modal"
+                          dialogComponentClass={[Function]}
                           enforceFocus={true}
                           keyboard={true}
                           manager={
@@ -370,33 +353,62 @@ exports[`ResolveActions with confirmation step renders 1`] = `
                               "remove": [Function],
                             }
                           }
-                          onEntering={[Function]}
-                          onExited={[Function]}
                           onHide={[Function]}
                           renderBackdrop={[Function]}
                           restoreFocus={true}
                           show={false}
-                        />
-                      </Modal>
-                    </Confirm>
-                  </ActionLink>
-                  <ActionLink
-                    className="tip"
-                    confirmLabel="Resolve"
-                    disabled={false}
-                    message="Are you sure???"
-                    onAction={[Function]}
-                    shouldConfirm={false}
+                        >
+                          <Modal
+                            autoFocus={true}
+                            backdrop={true}
+                            backdropClassName="modal-backdrop"
+                            containerClassName="modal-open"
+                            enforceFocus={true}
+                            keyboard={true}
+                            manager={
+                              ModalManager {
+                                "add": [Function],
+                                "containers": Array [],
+                                "data": Array [],
+                                "handleContainerOverflow": true,
+                                "hideSiblingNodes": true,
+                                "isTopModal": [Function],
+                                "modals": Array [],
+                                "remove": [Function],
+                              }
+                            }
+                            onEntering={[Function]}
+                            onExited={[Function]}
+                            onHide={[Function]}
+                            renderBackdrop={[Function]}
+                            restoreFocus={true}
+                            show={false}
+                          />
+                        </Modal>
+                      </Confirm>
+                    </ActionLink>
+                  </Tooltip>
+                  <Tooltip
                     title="Set up release tracking in order to use this feature."
                   >
-                    <a
+                    <ActionLink
                       className="tip"
+                      confirmLabel="Resolve"
                       disabled={false}
-                      onClick={[Function]}
+                      message="Are you sure???"
+                      onAction={[Function]}
+                      shouldConfirm={false}
+                      title="Set up release tracking in order to use this feature."
                     >
-                      Another version ...
-                    </a>
-                  </ActionLink>
+                      <a
+                        className="tip"
+                        disabled={false}
+                        onClick={[Function]}
+                      >
+                        Another version ...
+                      </a>
+                    </ActionLink>
+                  </Tooltip>
                 </li>
               </MenuItem>
             </ul>
@@ -568,54 +580,66 @@ exports[`ResolveActions without confirmation renders 1`] = `
                   role="presentation"
                   title={null}
                 >
-                  <ActionLink
-                    className="tip"
-                    confirmLabel="Resolve"
-                    disabled={false}
-                    onAction={[Function]}
-                    shouldConfirm={false}
+                  <Tooltip
                     title="Set up release tracking in order to use this feature."
                   >
-                    <a
+                    <ActionLink
                       className="tip"
+                      confirmLabel="Resolve"
                       disabled={false}
-                      onClick={[Function]}
+                      onAction={[Function]}
+                      shouldConfirm={false}
+                      title="Set up release tracking in order to use this feature."
                     >
-                      The next release
-                    </a>
-                  </ActionLink>
-                  <ActionLink
-                    className="tip"
-                    confirmLabel="Resolve"
-                    disabled={false}
-                    onAction={[Function]}
-                    shouldConfirm={false}
+                      <a
+                        className="tip"
+                        disabled={false}
+                        onClick={[Function]}
+                      >
+                        The next release
+                      </a>
+                    </ActionLink>
+                  </Tooltip>
+                  <Tooltip
                     title="Set up release tracking in order to use this feature."
                   >
-                    <a
+                    <ActionLink
                       className="tip"
+                      confirmLabel="Resolve"
                       disabled={false}
-                      onClick={[Function]}
+                      onAction={[Function]}
+                      shouldConfirm={false}
+                      title="Set up release tracking in order to use this feature."
                     >
-                      The current release
-                    </a>
-                  </ActionLink>
-                  <ActionLink
-                    className="tip"
-                    confirmLabel="Resolve"
-                    disabled={false}
-                    onAction={[Function]}
-                    shouldConfirm={false}
+                      <a
+                        className="tip"
+                        disabled={false}
+                        onClick={[Function]}
+                      >
+                        The current release
+                      </a>
+                    </ActionLink>
+                  </Tooltip>
+                  <Tooltip
                     title="Set up release tracking in order to use this feature."
                   >
-                    <a
+                    <ActionLink
                       className="tip"
+                      confirmLabel="Resolve"
                       disabled={false}
-                      onClick={[Function]}
+                      onAction={[Function]}
+                      shouldConfirm={false}
+                      title="Set up release tracking in order to use this feature."
                     >
-                      Another version ...
-                    </a>
-                  </ActionLink>
+                      <a
+                        className="tip"
+                        disabled={false}
+                        onClick={[Function]}
+                      >
+                        Another version ...
+                      </a>
+                    </ActionLink>
+                  </Tooltip>
                 </li>
               </MenuItem>
             </ul>
