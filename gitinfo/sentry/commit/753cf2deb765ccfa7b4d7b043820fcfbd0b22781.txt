commit 753cf2deb765ccfa7b4d7b043820fcfbd0b22781
Author: mikellykels <kelly@sentry.io>
Date:   Thu Jun 14 12:59:26 2018 -0700

    feat(analytics): Add tracking for source map errors (#8693)
    
    * feat(analytics): Add tracking for source map errors
    
    Add tracking for what errors people are running into when using source maps.
    
    * refactor
    
    * handle for empty array
    
    * add another check

diff --git a/src/sentry/static/sentry/app/components/events/eventEntries.jsx b/src/sentry/static/sentry/app/components/events/eventEntries.jsx
index 2e3d7f9f0b..297c89512f 100644
--- a/src/sentry/static/sentry/app/components/events/eventEntries.jsx
+++ b/src/sentry/static/sentry/app/components/events/eventEntries.jsx
@@ -3,6 +3,7 @@ import React from 'react';
 
 import createReactClass from 'create-react-class';
 
+import analytics from 'app/utils/analytics';
 import {logException} from 'app/utils/logging';
 import EventCause from 'app/components/events/eventCause';
 import EventContexts from 'app/components/events/contexts';
@@ -67,6 +68,26 @@ const EventEntries = createReactClass({
     };
   },
 
+  recordSourcemapError(errorTypes) {
+    let {project, event} = this.props;
+
+    analytics('sourcemap.sourcemap_error', {
+      'org_id': project.organization.id,
+      'group': event.groupID,
+      'error_type': errorTypes
+    })
+  },
+
+  componentDidMount() {
+    let {event} = this.props;
+
+    if (!event.errors || !event.errors.length > 0) return;
+    let errors = event.errors;
+    let errorTypes = errors.map((errorEntries) => errorEntries.type);
+
+    this.recordSourcemapError(errorTypes);
+  },
+
   shouldComponentUpdate(nextProps, nextState) {
     return this.props.event.id !== nextProps.event.id;
   },
