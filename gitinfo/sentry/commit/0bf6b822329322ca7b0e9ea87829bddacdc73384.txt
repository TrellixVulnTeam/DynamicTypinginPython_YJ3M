commit 0bf6b822329322ca7b0e9ea87829bddacdc73384
Author: Ben Vinegar <ben@benv.ca>
Date:   Wed Sep 9 14:18:11 2015 -0700

    Output non-breaking spaces for empty DefinitionList values (fxies #1931)

diff --git a/src/sentry/static/sentry/app/components/events/interfaces/definitionList.jsx b/src/sentry/static/sentry/app/components/events/interfaces/definitionList.jsx
index ebf367c761..ff7ebc1fa1 100644
--- a/src/sentry/static/sentry/app/components/events/interfaces/definitionList.jsx
+++ b/src/sentry/static/sentry/app/components/events/interfaces/definitionList.jsx
@@ -13,7 +13,7 @@ var DefinitionList = React.createClass({
         {data.map(([key, value]) => {
           return [
             <dt key={'dt-' + key }>{key}</dt>,
-            <dd key={'dd-' + key }><pre>{value}</pre></dd>
+            <dd key={'dd-' + key }><pre>{value || '&nbsp;'}</pre></dd>
           ];
         })}
       </dl>
diff --git a/tests/js/spec/components/events/interfaces/definitionList.spec.jsx b/tests/js/spec/components/events/interfaces/definitionList.spec.jsx
index 9707898ae1..6afe5b7e76 100644
--- a/tests/js/spec/components/events/interfaces/definitionList.spec.jsx
+++ b/tests/js/spec/components/events/interfaces/definitionList.spec.jsx
@@ -33,5 +33,20 @@ describe('DefinitionList', function () {
       expect(dds[0].getDOMNode().textContent).to.eql('x');
       expect(dds[1].getDOMNode().textContent).to.eql('y');
     });
+
+    it("should use a non-breaking space for values that are an empty string", function () {
+      var data = [
+        ['b', 'y'], ['a', ''] // empty string
+      ];
+      var elem = TestUtils.renderIntoDocument(<DefinitionList data={data} />);
+
+      var dts = TestUtils.scryRenderedDOMComponentsWithTag(elem, 'dt');
+      expect(dts[0].getDOMNode().textContent).to.eql('a');
+      expect(dts[1].getDOMNode().textContent).to.eql('b');
+
+      var dds = TestUtils.scryRenderedDOMComponentsWithTag(elem, 'dd');
+      expect(dds[0].getDOMNode().textContent).to.eql('&nbsp;');
+      expect(dds[1].getDOMNode().textContent).to.eql('y');
+    });
   });
 });
