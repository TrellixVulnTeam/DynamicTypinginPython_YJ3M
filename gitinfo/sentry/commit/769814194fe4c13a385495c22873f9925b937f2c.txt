commit 769814194fe4c13a385495c22873f9925b937f2c
Author: Stephen Cefali <scefali@sentry.io>
Date:   Wed Nov 20 11:48:39 2019 -0800

    ref(plugins): move new_sentry_plugins into sentry_plugins (#15700)

diff --git a/conftest.py b/conftest.py
index 25bf89549a..2d1e9442c3 100644
--- a/conftest.py
+++ b/conftest.py
@@ -32,7 +32,7 @@ def install_sentry_plugins():
     from sentry.runner.importer import install_plugin_apps
     from django.conf import settings
 
-    install_plugin_apps("sentry.new_apps", settings)
+    install_plugin_apps("sentry.apps", settings)
 
     from sentry.runner.initializer import register_plugins
 
diff --git a/setup.py b/setup.py
index 6d2ea65f0e..0d439ef9f0 100755
--- a/setup.py
+++ b/setup.py
@@ -140,31 +140,31 @@ setup(
     include_package_data=True,
     entry_points={
         "console_scripts": ["sentry = sentry.runner:main"],
-        "sentry.new_apps": [
-            "jira_ac = new_sentry_plugins.jira_ac",
-            "jira = new_sentry_plugins.jira",
-            "sessionstack = new_sentry_plugins.sessionstack",
+        "sentry.apps": [
+            "jira_ac = sentry_plugins.jira_ac",
+            "jira = sentry_plugins.jira",
+            "sessionstack = sentry_plugins.sessionstack",
         ],
-        "sentry.new_plugins": [
-            "amazon_sqs = new_sentry_plugins.amazon_sqs.plugin:AmazonSQSPlugin",
-            "asana = new_sentry_plugins.asana.plugin:AsanaPlugin",
-            "bitbucket = new_sentry_plugins.bitbucket.plugin:BitbucketPlugin",
-            "clubhouse = new_sentry_plugins.clubhouse.plugin:ClubhousePlugin",
-            "github = new_sentry_plugins.github.plugin:GitHubPlugin",
-            "gitlab = new_sentry_plugins.gitlab.plugin:GitLabPlugin",
-            "heroku = new_sentry_plugins.heroku.plugin:HerokuPlugin",
-            "jira = new_sentry_plugins.jira.plugin:JiraPlugin",
-            "jira_ac = new_sentry_plugins.jira_ac.plugin:JiraACPlugin",
-            "phabricator = new_sentry_plugins.phabricator.plugin:PhabricatorPlugin",
-            "pagerduty = new_sentry_plugins.pagerduty.plugin:PagerDutyPlugin",
-            "pivotal = new_sentry_plugins.pivotal.plugin:PivotalPlugin",
-            "pushover = new_sentry_plugins.pushover.plugin:PushoverPlugin",
-            "segment = new_sentry_plugins.segment.plugin:SegmentPlugin",
-            "sessionstack = new_sentry_plugins.sessionstack.plugin:SessionStackPlugin",
-            "slack = new_sentry_plugins.slack.plugin:SlackPlugin",
-            "splunk = new_sentry_plugins.splunk.plugin:SplunkPlugin",
-            "victorops = new_sentry_plugins.victorops.plugin:VictorOpsPlugin",
-            "vsts = new_sentry_plugins.vsts.plugin:VstsPlugin",
+        "sentry.plugins": [
+            "amazon_sqs = sentry_plugins.amazon_sqs.plugin:AmazonSQSPlugin",
+            "asana = sentry_plugins.asana.plugin:AsanaPlugin",
+            "bitbucket = sentry_plugins.bitbucket.plugin:BitbucketPlugin",
+            "clubhouse = sentry_plugins.clubhouse.plugin:ClubhousePlugin",
+            "github = sentry_plugins.github.plugin:GitHubPlugin",
+            "gitlab = sentry_plugins.gitlab.plugin:GitLabPlugin",
+            "heroku = sentry_plugins.heroku.plugin:HerokuPlugin",
+            "jira = sentry_plugins.jira.plugin:JiraPlugin",
+            "jira_ac = sentry_plugins.jira_ac.plugin:JiraACPlugin",
+            "phabricator = sentry_plugins.phabricator.plugin:PhabricatorPlugin",
+            "pagerduty = sentry_plugins.pagerduty.plugin:PagerDutyPlugin",
+            "pivotal = sentry_plugins.pivotal.plugin:PivotalPlugin",
+            "pushover = sentry_plugins.pushover.plugin:PushoverPlugin",
+            "segment = sentry_plugins.segment.plugin:SegmentPlugin",
+            "sessionstack = sentry_plugins.sessionstack.plugin:SessionStackPlugin",
+            "slack = sentry_plugins.slack.plugin:SlackPlugin",
+            "splunk = sentry_plugins.splunk.plugin:SplunkPlugin",
+            "victorops = sentry_plugins.victorops.plugin:VictorOpsPlugin",
+            "vsts = sentry_plugins.vsts.plugin:VstsPlugin",
         ],
     },
     classifiers=[
diff --git a/src/new_sentry_plugins/github/__init__.py b/src/new_sentry_plugins/github/__init__.py
deleted file mode 100644
index 6c2cba01b4..0000000000
--- a/src/new_sentry_plugins/github/__init__.py
+++ /dev/null
@@ -1,7 +0,0 @@
-from __future__ import absolute_import
-
-from new_sentry_plugins.base import assert_package_not_installed
-
-assert_package_not_installed("sentry-github")
-
-from new_sentry_plugins.github import options  # NOQA
diff --git a/src/sentry/runner/importer.py b/src/sentry/runner/importer.py
index c00a4fec7d..35c9187592 100644
--- a/src/sentry/runner/importer.py
+++ b/src/sentry/runner/importer.py
@@ -79,7 +79,6 @@ class Importer(object):
         load_settings(self.config_path, settings=settings_mod, silent=True)
 
         install_plugin_apps("sentry.apps", settings_mod)
-        install_plugin_apps("sentry.new_apps", settings_mod)
 
         return settings_mod
 
diff --git a/src/sentry/runner/initializer.py b/src/sentry/runner/initializer.py
index 79d3462d82..cf7766ed8a 100644
--- a/src/sentry/runner/initializer.py
+++ b/src/sentry/runner/initializer.py
@@ -20,22 +20,19 @@ def register_plugins(settings, raise_on_plugin_load_failure=False):
     #         'phabricator = sentry_phabricator.plugins:PhabricatorPlugin'
     #     ],
     # },
-    entry_points = ["sentry.new_plugins", "sentry.plugins"]
-
-    for entry_point in entry_points:
-        for ep in iter_entry_points(entry_point):
-            try:
-                plugin = ep.load()
-            except Exception:
-                import traceback
+    for ep in iter_entry_points("sentry.plugins"):
+        try:
+            plugin = ep.load()
+        except Exception:
+            import traceback
 
-                click.echo(
-                    "Failed to load plugin %r:\n%s" % (ep.name, traceback.format_exc()), err=True
-                )
-                if raise_on_plugin_load_failure:
-                    raise
-            else:
-                plugins.register(plugin)
+            click.echo(
+                "Failed to load plugin %r:\n%s" % (ep.name, traceback.format_exc()), err=True
+            )
+            if raise_on_plugin_load_failure:
+                raise
+        else:
+            plugins.register(plugin)
 
     for plugin in plugins.all(version=None):
         init_plugin(plugin)
diff --git a/src/sentry/testutils/cases.py b/src/sentry/testutils/cases.py
index 2ed854cfc9..963befc035 100644
--- a/src/sentry/testutils/cases.py
+++ b/src/sentry/testutils/cases.py
@@ -674,19 +674,6 @@ class PluginTestCase(TestCase):
                 )
         self.fail("Missing app from entry_points: %r" % (name,))
 
-    # TODO (Steve): remove function
-    def assertNewAppInstalled(self, name, path):
-        for ep in iter_entry_points("sentry.new_apps"):
-            if ep.name == name:
-                ep_path = ep.module_name
-                if ep_path == path:
-                    return
-                self.fail(
-                    "Found app in entry_points, but wrong class. Got %r, expected %r"
-                    % (ep_path, path)
-                )
-        self.fail("Missing app from entry_points: %r" % (name,))
-
     def assertPluginInstalled(self, name, plugin):
         path = type(plugin).__module__ + ":" + type(plugin).__name__
         for ep in iter_entry_points("sentry.plugins"):
@@ -700,20 +687,6 @@ class PluginTestCase(TestCase):
                 )
         self.fail("Missing plugin from entry_points: %r" % (name,))
 
-    # TODO (Steve): remove function
-    def assertNewPluginInstalled(self, name, plugin):
-        path = type(plugin).__module__ + ":" + type(plugin).__name__
-        for ep in iter_entry_points("sentry.new_plugins"):
-            if ep.name == name:
-                ep_path = ep.module_name + ":" + ".".join(ep.attrs)
-                if ep_path == path:
-                    return
-                self.fail(
-                    "Found plugin in entry_points, but wrong class. Got %r, expected %r"
-                    % (ep_path, path)
-                )
-        self.fail("Missing plugin from entry_points: %r" % (name,))
-
 
 class CliTestCase(TestCase):
     runner = fixture(CliRunner)
diff --git a/src/new_sentry_plugins/__init__.py b/src/sentry_plugins/__init__.py
similarity index 100%
rename from src/new_sentry_plugins/__init__.py
rename to src/sentry_plugins/__init__.py
diff --git a/src/new_sentry_plugins/amazon_sqs/__init__.py b/src/sentry_plugins/amazon_sqs/__init__.py
similarity index 100%
rename from src/new_sentry_plugins/amazon_sqs/__init__.py
rename to src/sentry_plugins/amazon_sqs/__init__.py
diff --git a/src/new_sentry_plugins/amazon_sqs/plugin.py b/src/sentry_plugins/amazon_sqs/plugin.py
similarity index 94%
rename from src/new_sentry_plugins/amazon_sqs/plugin.py
rename to src/sentry_plugins/amazon_sqs/plugin.py
index 53f1c1dd51..a2493e5af3 100644
--- a/src/new_sentry_plugins/amazon_sqs/plugin.py
+++ b/src/sentry_plugins/amazon_sqs/plugin.py
@@ -4,9 +4,9 @@ import logging
 
 import boto3
 from botocore.client import ClientError
-from new_sentry_plugins.base import CorePluginMixin
+from sentry_plugins.base import CorePluginMixin
 from sentry.plugins.bases.data_forwarding import DataForwardingPlugin
-from new_sentry_plugins.utils import get_secret_field_config
+from sentry_plugins.utils import get_secret_field_config
 from sentry.utils import json, metrics
 
 logger = logging.getLogger(__name__)
@@ -93,7 +93,7 @@ class AmazonSQSPlugin(CorePluginMixin, DataForwardingPlugin):
             if e.message.startswith("An error occurred (AccessDenied)"):
                 # If there's an issue with the user's token then we can't do
                 # anything to recover. Just log and continue.
-                metrics_name = "new_sentry_plugins.amazon_sqs.access_token_invalid"
+                metrics_name = "sentry_plugins.amazon_sqs.access_token_invalid"
                 logger.info(
                     metrics_name,
                     extra={
@@ -113,7 +113,7 @@ class AmazonSQSPlugin(CorePluginMixin, DataForwardingPlugin):
                 )
                 return False
             elif e.message.endswith("must contain the parameter MessageGroupId."):
-                metrics_name = "new_sentry_plugins.amazon_sqs.missing_message_group_id"
+                metrics_name = "sentry_plugins.amazon_sqs.missing_message_group_id"
                 logger.info(
                     metrics_name,
                     extra={
diff --git a/src/new_sentry_plugins/anonymizeip.py b/src/sentry_plugins/anonymizeip.py
similarity index 100%
rename from src/new_sentry_plugins/anonymizeip.py
rename to src/sentry_plugins/anonymizeip.py
diff --git a/src/new_sentry_plugins/asana/README.rst b/src/sentry_plugins/asana/README.rst
similarity index 100%
rename from src/new_sentry_plugins/asana/README.rst
rename to src/sentry_plugins/asana/README.rst
diff --git a/src/new_sentry_plugins/asana/__init__.py b/src/sentry_plugins/asana/__init__.py
similarity index 100%
rename from src/new_sentry_plugins/asana/__init__.py
rename to src/sentry_plugins/asana/__init__.py
diff --git a/src/new_sentry_plugins/asana/client.py b/src/sentry_plugins/asana/client.py
similarity index 95%
rename from src/new_sentry_plugins/asana/client.py
rename to src/sentry_plugins/asana/client.py
index 231f77d834..6592ea2ba7 100644
--- a/src/new_sentry_plugins/asana/client.py
+++ b/src/sentry_plugins/asana/client.py
@@ -1,6 +1,6 @@
 from __future__ import absolute_import
 
-from new_sentry_plugins.client import AuthApiClient
+from sentry_plugins.client import AuthApiClient
 from six import text_type
 
 
diff --git a/src/new_sentry_plugins/asana/plugin.py b/src/sentry_plugins/asana/plugin.py
similarity index 99%
rename from src/new_sentry_plugins/asana/plugin.py
rename to src/sentry_plugins/asana/plugin.py
index 472a4bfbd8..9f8bd430b6 100644
--- a/src/new_sentry_plugins/asana/plugin.py
+++ b/src/sentry_plugins/asana/plugin.py
@@ -8,7 +8,7 @@ from sentry.exceptions import PluginError, PluginIdentityRequired
 from sentry.plugins.bases.issue2 import IssuePlugin2, IssueGroupActionEndpoint
 from sentry.utils.http import absolute_uri
 
-from new_sentry_plugins.base import CorePluginMixin
+from sentry_plugins.base import CorePluginMixin
 from .client import AsanaClient
 
 
diff --git a/src/new_sentry_plugins/base.py b/src/sentry_plugins/base.py
similarity index 94%
rename from src/new_sentry_plugins/base.py
rename to src/sentry_plugins/base.py
index 5432bdbd36..240057a896 100644
--- a/src/new_sentry_plugins/base.py
+++ b/src/sentry_plugins/base.py
@@ -1,18 +1,18 @@
 from __future__ import absolute_import
 
 import pkg_resources
-import new_sentry_plugins
+import sentry_plugins
 import six
 import sys
 
 from sentry.exceptions import InvalidIdentity, PluginError
 
-from new_sentry_plugins.constants import (
+from sentry_plugins.constants import (
     ERR_INTERNAL,
     ERR_UNAUTHORIZED,
     ERR_UNSUPPORTED_RESPONSE_TYPE,
 )
-from new_sentry_plugins.exceptions import (
+from sentry_plugins.exceptions import (
     ApiError,
     ApiHostError,
     ApiUnauthorized,
@@ -23,7 +23,7 @@ from new_sentry_plugins.exceptions import (
 class CorePluginMixin(object):
     author = "Sentry Team"
     author_url = "https://github.com/getsentry/sentry"
-    version = new_sentry_plugins.VERSION
+    version = sentry_plugins.VERSION
     resource_links = [
         ("Bug Tracker", "https://github.com/getsentry/sentry/issues"),
         ("Source", "https://github.com/getsentry/sentry"),
diff --git a/src/new_sentry_plugins/bitbucket/README.rst b/src/sentry_plugins/bitbucket/README.rst
similarity index 100%
rename from src/new_sentry_plugins/bitbucket/README.rst
rename to src/sentry_plugins/bitbucket/README.rst
diff --git a/src/new_sentry_plugins/bitbucket/__init__.py b/src/sentry_plugins/bitbucket/__init__.py
similarity index 58%
rename from src/new_sentry_plugins/bitbucket/__init__.py
rename to src/sentry_plugins/bitbucket/__init__.py
index 12350e2bd6..9cc5c4d2cf 100644
--- a/src/new_sentry_plugins/bitbucket/__init__.py
+++ b/src/sentry_plugins/bitbucket/__init__.py
@@ -1,5 +1,5 @@
 from __future__ import absolute_import
 
-from new_sentry_plugins.base import assert_package_not_installed
+from sentry_plugins.base import assert_package_not_installed
 
 assert_package_not_installed("sentry-bitbucket")
diff --git a/src/new_sentry_plugins/bitbucket/client.py b/src/sentry_plugins/bitbucket/client.py
similarity index 98%
rename from src/new_sentry_plugins/bitbucket/client.py
rename to src/sentry_plugins/bitbucket/client.py
index 4befa9e3dd..eca5703f52 100644
--- a/src/new_sentry_plugins/bitbucket/client.py
+++ b/src/sentry_plugins/bitbucket/client.py
@@ -6,7 +6,7 @@ from django.conf import settings
 from requests_oauthlib import OAuth1
 from unidiff import PatchSet
 
-from new_sentry_plugins.client import AuthApiClient
+from sentry_plugins.client import AuthApiClient
 
 
 class BitbucketClient(AuthApiClient):
diff --git a/src/new_sentry_plugins/bitbucket/endpoints/__init__.py b/src/sentry_plugins/bitbucket/endpoints/__init__.py
similarity index 100%
rename from src/new_sentry_plugins/bitbucket/endpoints/__init__.py
rename to src/sentry_plugins/bitbucket/endpoints/__init__.py
diff --git a/src/new_sentry_plugins/bitbucket/endpoints/webhook.py b/src/sentry_plugins/bitbucket/endpoints/webhook.py
similarity index 100%
rename from src/new_sentry_plugins/bitbucket/endpoints/webhook.py
rename to src/sentry_plugins/bitbucket/endpoints/webhook.py
diff --git a/src/new_sentry_plugins/bitbucket/mixins.py b/src/sentry_plugins/bitbucket/mixins.py
similarity index 90%
rename from src/new_sentry_plugins/bitbucket/mixins.py
rename to src/sentry_plugins/bitbucket/mixins.py
index 3a194be704..ec9a941deb 100644
--- a/src/new_sentry_plugins/bitbucket/mixins.py
+++ b/src/sentry_plugins/bitbucket/mixins.py
@@ -4,7 +4,7 @@ import logging
 
 from sentry.exceptions import PluginError
 
-from new_sentry_plugins.base import CorePluginMixin
+from sentry_plugins.base import CorePluginMixin
 
 from .client import BitbucketClient
 
diff --git a/src/new_sentry_plugins/bitbucket/plugin.py b/src/sentry_plugins/bitbucket/plugin.py
similarity index 98%
rename from src/new_sentry_plugins/bitbucket/plugin.py
rename to src/sentry_plugins/bitbucket/plugin.py
index d7c75319a3..d2843d4394 100644
--- a/src/new_sentry_plugins/bitbucket/plugin.py
+++ b/src/sentry_plugins/bitbucket/plugin.py
@@ -5,7 +5,7 @@ from rest_framework.response import Response
 from sentry.plugins.bases.issue2 import IssuePlugin2, IssueGroupActionEndpoint
 from sentry.utils.http import absolute_uri
 
-from new_sentry_plugins.exceptions import ApiError
+from sentry_plugins.exceptions import ApiError
 
 from .mixins import BitbucketMixin
 from .repository_provider import BitbucketRepositoryProvider
@@ -49,7 +49,7 @@ class BitbucketPlugin(BitbucketMixin, IssuePlugin2):
         ]
 
     def get_url_module(self):
-        return "new_sentry_plugins.bitbucket.urls"
+        return "sentry_plugins.bitbucket.urls"
 
     def is_configured(self, request, project, **kwargs):
         return bool(self.get_option("repo", project))
diff --git a/src/new_sentry_plugins/bitbucket/repository_provider.py b/src/sentry_plugins/bitbucket/repository_provider.py
similarity index 98%
rename from src/new_sentry_plugins/bitbucket/repository_provider.py
rename to src/sentry_plugins/bitbucket/repository_provider.py
index a6bbe3afa5..335d144bdb 100644
--- a/src/new_sentry_plugins/bitbucket/repository_provider.py
+++ b/src/sentry_plugins/bitbucket/repository_provider.py
@@ -9,7 +9,7 @@ from sentry.models import OrganizationOption
 from sentry.plugins import providers
 from sentry.utils.http import absolute_uri
 
-from new_sentry_plugins.exceptions import ApiError
+from sentry_plugins.exceptions import ApiError
 
 from .endpoints.webhook import parse_raw_user_email, parse_raw_user_name
 from .mixins import BitbucketMixin
diff --git a/src/new_sentry_plugins/bitbucket/testutils.py b/src/sentry_plugins/bitbucket/testutils.py
similarity index 100%
rename from src/new_sentry_plugins/bitbucket/testutils.py
rename to src/sentry_plugins/bitbucket/testutils.py
diff --git a/src/new_sentry_plugins/bitbucket/urls.py b/src/sentry_plugins/bitbucket/urls.py
similarity index 100%
rename from src/new_sentry_plugins/bitbucket/urls.py
rename to src/sentry_plugins/bitbucket/urls.py
diff --git a/src/new_sentry_plugins/client.py b/src/sentry_plugins/client.py
similarity index 100%
rename from src/new_sentry_plugins/client.py
rename to src/sentry_plugins/client.py
diff --git a/src/new_sentry_plugins/clubhouse/__init__.py b/src/sentry_plugins/clubhouse/__init__.py
similarity index 100%
rename from src/new_sentry_plugins/clubhouse/__init__.py
rename to src/sentry_plugins/clubhouse/__init__.py
diff --git a/src/new_sentry_plugins/clubhouse/client.py b/src/sentry_plugins/clubhouse/client.py
similarity index 96%
rename from src/new_sentry_plugins/clubhouse/client.py
rename to src/sentry_plugins/clubhouse/client.py
index 9137c6be1f..94368a98d9 100644
--- a/src/new_sentry_plugins/clubhouse/client.py
+++ b/src/sentry_plugins/clubhouse/client.py
@@ -1,6 +1,6 @@
 from __future__ import absolute_import
 
-from new_sentry_plugins.client import ApiClient
+from sentry_plugins.client import ApiClient
 
 
 class ClubhouseClient(ApiClient):
diff --git a/src/new_sentry_plugins/clubhouse/plugin.py b/src/sentry_plugins/clubhouse/plugin.py
similarity index 98%
rename from src/new_sentry_plugins/clubhouse/plugin.py
rename to src/sentry_plugins/clubhouse/plugin.py
index 054c8d49ff..34f080cf3e 100644
--- a/src/new_sentry_plugins/clubhouse/plugin.py
+++ b/src/sentry_plugins/clubhouse/plugin.py
@@ -8,8 +8,8 @@ from sentry.exceptions import PluginError
 from sentry.plugins.bases.issue2 import IssuePlugin2, IssueGroupActionEndpoint
 from sentry.utils.http import absolute_uri
 
-from new_sentry_plugins.base import CorePluginMixin
-from new_sentry_plugins.utils import get_secret_field_config
+from sentry_plugins.base import CorePluginMixin
+from sentry_plugins.utils import get_secret_field_config
 
 from .client import ClubhouseClient
 
diff --git a/src/new_sentry_plugins/constants.py b/src/sentry_plugins/constants.py
similarity index 100%
rename from src/new_sentry_plugins/constants.py
rename to src/sentry_plugins/constants.py
diff --git a/src/new_sentry_plugins/exceptions.py b/src/sentry_plugins/exceptions.py
similarity index 100%
rename from src/new_sentry_plugins/exceptions.py
rename to src/sentry_plugins/exceptions.py
diff --git a/src/new_sentry_plugins/github/README.rst b/src/sentry_plugins/github/README.rst
similarity index 100%
rename from src/new_sentry_plugins/github/README.rst
rename to src/sentry_plugins/github/README.rst
diff --git a/src/sentry_plugins/github/__init__.py b/src/sentry_plugins/github/__init__.py
new file mode 100644
index 0000000000..189b29c6a8
--- /dev/null
+++ b/src/sentry_plugins/github/__init__.py
@@ -0,0 +1,7 @@
+from __future__ import absolute_import
+
+from sentry_plugins.base import assert_package_not_installed
+
+assert_package_not_installed("sentry-github")
+
+from sentry_plugins.github import options  # NOQA
diff --git a/src/new_sentry_plugins/github/client.py b/src/sentry_plugins/github/client.py
similarity index 98%
rename from src/new_sentry_plugins/github/client.py
rename to src/sentry_plugins/github/client.py
index d81b042462..dd2e5d0d77 100644
--- a/src/new_sentry_plugins/github/client.py
+++ b/src/sentry_plugins/github/client.py
@@ -8,7 +8,7 @@ import time
 from django.conf import settings
 from sentry import options
 
-from new_sentry_plugins.client import ApiClient, AuthApiClient
+from sentry_plugins.client import ApiClient, AuthApiClient
 
 
 class GitHubClientMixin(AuthApiClient):
diff --git a/src/new_sentry_plugins/github/endpoints/__init__.py b/src/sentry_plugins/github/endpoints/__init__.py
similarity index 100%
rename from src/new_sentry_plugins/github/endpoints/__init__.py
rename to src/sentry_plugins/github/endpoints/__init__.py
diff --git a/src/new_sentry_plugins/github/endpoints/webhook.py b/src/sentry_plugins/github/endpoints/webhook.py
similarity index 99%
rename from src/new_sentry_plugins/github/endpoints/webhook.py
rename to src/sentry_plugins/github/endpoints/webhook.py
index 01ade861de..020db8053a 100644
--- a/src/new_sentry_plugins/github/endpoints/webhook.py
+++ b/src/sentry_plugins/github/endpoints/webhook.py
@@ -30,8 +30,8 @@ from sentry.models import (
 from sentry.plugins.providers import RepositoryProvider
 from sentry.utils import json
 
-from new_sentry_plugins.exceptions import ApiError
-from new_sentry_plugins.github.client import GitHubClient
+from sentry_plugins.exceptions import ApiError
+from sentry_plugins.github.client import GitHubClient
 
 logger = logging.getLogger("sentry.webhooks")
 
diff --git a/src/new_sentry_plugins/github/options.py b/src/sentry_plugins/github/options.py
similarity index 100%
rename from src/new_sentry_plugins/github/options.py
rename to src/sentry_plugins/github/options.py
diff --git a/src/new_sentry_plugins/github/plugin.py b/src/sentry_plugins/github/plugin.py
similarity index 98%
rename from src/new_sentry_plugins/github/plugin.py
rename to src/sentry_plugins/github/plugin.py
index 5764cb1cf2..97c8367614 100644
--- a/src/new_sentry_plugins/github/plugin.py
+++ b/src/sentry_plugins/github/plugin.py
@@ -16,9 +16,9 @@ from sentry.plugins.bases.issue2 import IssuePlugin2, IssueGroupActionEndpoint
 from sentry.plugins import providers
 from sentry.utils.http import absolute_uri
 
-from new_sentry_plugins.base import CorePluginMixin
-from new_sentry_plugins.constants import ERR_UNAUTHORIZED, ERR_INTERNAL
-from new_sentry_plugins.exceptions import ApiError
+from sentry_plugins.base import CorePluginMixin
+from sentry_plugins.constants import ERR_UNAUTHORIZED, ERR_INTERNAL
+from sentry_plugins.exceptions import ApiError
 
 from .client import GitHubClient, GitHubAppsClient
 
@@ -77,7 +77,7 @@ class GitHubPlugin(GitHubMixin, IssuePlugin2):
         ]
 
     def get_url_module(self):
-        return "new_sentry_plugins.github.urls"
+        return "sentry_plugins.github.urls"
 
     def is_configured(self, request, project, **kwargs):
         return bool(self.get_option("repo", project))
diff --git a/src/new_sentry_plugins/github/testutils.py b/src/sentry_plugins/github/testutils.py
similarity index 100%
rename from src/new_sentry_plugins/github/testutils.py
rename to src/sentry_plugins/github/testutils.py
diff --git a/src/new_sentry_plugins/github/urls.py b/src/sentry_plugins/github/urls.py
similarity index 100%
rename from src/new_sentry_plugins/github/urls.py
rename to src/sentry_plugins/github/urls.py
diff --git a/src/new_sentry_plugins/gitlab/README.rst b/src/sentry_plugins/gitlab/README.rst
similarity index 100%
rename from src/new_sentry_plugins/gitlab/README.rst
rename to src/sentry_plugins/gitlab/README.rst
diff --git a/src/new_sentry_plugins/gitlab/__init__.py b/src/sentry_plugins/gitlab/__init__.py
similarity index 57%
rename from src/new_sentry_plugins/gitlab/__init__.py
rename to src/sentry_plugins/gitlab/__init__.py
index 250c582cc4..e15a932122 100644
--- a/src/new_sentry_plugins/gitlab/__init__.py
+++ b/src/sentry_plugins/gitlab/__init__.py
@@ -1,5 +1,5 @@
 from __future__ import absolute_import
 
-from new_sentry_plugins.base import assert_package_not_installed
+from sentry_plugins.base import assert_package_not_installed
 
 assert_package_not_installed("sentry-gitlab")
diff --git a/src/new_sentry_plugins/gitlab/client.py b/src/sentry_plugins/gitlab/client.py
similarity index 94%
rename from src/new_sentry_plugins/gitlab/client.py
rename to src/sentry_plugins/gitlab/client.py
index 3565a41e9f..6be637c6ef 100644
--- a/src/new_sentry_plugins/gitlab/client.py
+++ b/src/sentry_plugins/gitlab/client.py
@@ -1,9 +1,9 @@
 from __future__ import absolute_import
 
 from six.moves.urllib.parse import quote
-from new_sentry_plugins.client import ApiClient
+from sentry_plugins.client import ApiClient
 
-from new_sentry_plugins.exceptions import ApiError
+from sentry_plugins.exceptions import ApiError
 
 
 class GitLabClient(ApiClient):
diff --git a/src/new_sentry_plugins/gitlab/endpoints.py b/src/sentry_plugins/gitlab/endpoints.py
similarity index 100%
rename from src/new_sentry_plugins/gitlab/endpoints.py
rename to src/sentry_plugins/gitlab/endpoints.py
diff --git a/src/new_sentry_plugins/gitlab/plugin.py b/src/sentry_plugins/gitlab/plugin.py
similarity index 97%
rename from src/new_sentry_plugins/gitlab/plugin.py
rename to src/sentry_plugins/gitlab/plugin.py
index 8a32ac9a65..54df0ee34c 100644
--- a/src/new_sentry_plugins/gitlab/plugin.py
+++ b/src/sentry_plugins/gitlab/plugin.py
@@ -3,9 +3,9 @@ from __future__ import absolute_import
 from sentry.plugins.bases.issue2 import IssuePlugin2
 from sentry.utils.http import absolute_uri
 
-from new_sentry_plugins.base import CorePluginMixin
-from new_sentry_plugins.exceptions import ApiError
-from new_sentry_plugins.utils import get_secret_field_config
+from sentry_plugins.base import CorePluginMixin
+from sentry_plugins.exceptions import ApiError
+from sentry_plugins.utils import get_secret_field_config
 
 from .client import GitLabClient
 
diff --git a/src/new_sentry_plugins/heroku/__init__.py b/src/sentry_plugins/heroku/__init__.py
similarity index 57%
rename from src/new_sentry_plugins/heroku/__init__.py
rename to src/sentry_plugins/heroku/__init__.py
index eac7bc3a61..13de32a23d 100644
--- a/src/new_sentry_plugins/heroku/__init__.py
+++ b/src/sentry_plugins/heroku/__init__.py
@@ -1,5 +1,5 @@
 from __future__ import absolute_import
 
-from new_sentry_plugins.base import assert_package_not_installed
+from sentry_plugins.base import assert_package_not_installed
 
 assert_package_not_installed("sentry-heroku")
diff --git a/src/new_sentry_plugins/heroku/plugin.py b/src/sentry_plugins/heroku/plugin.py
similarity index 98%
rename from src/new_sentry_plugins/heroku/plugin.py
rename to src/sentry_plugins/heroku/plugin.py
index 089761ec92..d6492d5861 100644
--- a/src/new_sentry_plugins/heroku/plugin.py
+++ b/src/sentry_plugins/heroku/plugin.py
@@ -6,7 +6,7 @@ from sentry.api import client
 
 from sentry.models import ApiKey, User, ProjectOption, Repository
 from sentry.plugins.interfaces.releasehook import ReleaseHook
-from new_sentry_plugins.base import CorePluginMixin
+from sentry_plugins.base import CorePluginMixin
 from sentry.plugins.base.configuration import react_plugin_config
 from sentry.plugins.bases import ReleaseTrackingPlugin
 
diff --git a/src/new_sentry_plugins/jira/__init__.py b/src/sentry_plugins/jira/__init__.py
similarity index 56%
rename from src/new_sentry_plugins/jira/__init__.py
rename to src/sentry_plugins/jira/__init__.py
index 55004ee429..ecde9e6a59 100644
--- a/src/new_sentry_plugins/jira/__init__.py
+++ b/src/sentry_plugins/jira/__init__.py
@@ -1,5 +1,5 @@
 from __future__ import absolute_import
 
-from new_sentry_plugins.base import assert_package_not_installed
+from sentry_plugins.base import assert_package_not_installed
 
 assert_package_not_installed("sentry-jira")
diff --git a/src/new_sentry_plugins/jira/client.py b/src/sentry_plugins/jira/client.py
similarity index 97%
rename from src/new_sentry_plugins/jira/client.py
rename to src/sentry_plugins/jira/client.py
index b528860921..8a15289ab5 100644
--- a/src/new_sentry_plugins/jira/client.py
+++ b/src/sentry_plugins/jira/client.py
@@ -7,8 +7,8 @@ from hashlib import md5 as _md5
 from sentry.utils.cache import cache
 from django.utils.encoding import force_bytes
 
-from new_sentry_plugins.exceptions import ApiError
-from new_sentry_plugins.client import ApiClient
+from sentry_plugins.exceptions import ApiError
+from sentry_plugins.client import ApiClient
 
 log = logging.getLogger(__name__)
 
diff --git a/src/new_sentry_plugins/jira/plugin.py b/src/sentry_plugins/jira/plugin.py
similarity index 99%
rename from src/new_sentry_plugins/jira/plugin.py
rename to src/sentry_plugins/jira/plugin.py
index ee247c909f..6da0a595d8 100644
--- a/src/new_sentry_plugins/jira/plugin.py
+++ b/src/sentry_plugins/jira/plugin.py
@@ -19,10 +19,10 @@ from sentry.models import GroupMeta
 from sentry.plugins.bases.issue2 import IssuePlugin2, IssueGroupActionEndpoint, PluginError
 from sentry.utils.http import absolute_uri
 
-from new_sentry_plugins.base import CorePluginMixin
-from new_sentry_plugins.exceptions import ApiError, ApiUnauthorized
-from new_sentry_plugins.jira.client import JiraClient
-from new_sentry_plugins.utils import get_secret_field_config
+from sentry_plugins.base import CorePluginMixin
+from sentry_plugins.exceptions import ApiError, ApiUnauthorized
+from sentry_plugins.jira.client import JiraClient
+from sentry_plugins.utils import get_secret_field_config
 
 # A list of common builtin custom field types for JIRA for easy reference.
 JIRA_CUSTOM_FIELD_TYPES = {
diff --git a/src/new_sentry_plugins/jira/static/jira/components/issueActions.jsx b/src/sentry_plugins/jira/static/jira/components/issueActions.jsx
similarity index 100%
rename from src/new_sentry_plugins/jira/static/jira/components/issueActions.jsx
rename to src/sentry_plugins/jira/static/jira/components/issueActions.jsx
diff --git a/src/new_sentry_plugins/jira/static/jira/components/settings.jsx b/src/sentry_plugins/jira/static/jira/components/settings.jsx
similarity index 100%
rename from src/new_sentry_plugins/jira/static/jira/components/settings.jsx
rename to src/sentry_plugins/jira/static/jira/components/settings.jsx
diff --git a/src/new_sentry_plugins/jira/static/jira/dist/jira.js b/src/sentry_plugins/jira/static/jira/dist/jira.js
similarity index 100%
rename from src/new_sentry_plugins/jira/static/jira/dist/jira.js
rename to src/sentry_plugins/jira/static/jira/dist/jira.js
diff --git a/src/new_sentry_plugins/jira/static/jira/dist/jira.js.gz b/src/sentry_plugins/jira/static/jira/dist/jira.js.gz
similarity index 100%
rename from src/new_sentry_plugins/jira/static/jira/dist/jira.js.gz
rename to src/sentry_plugins/jira/static/jira/dist/jira.js.gz
diff --git a/src/new_sentry_plugins/jira/static/jira/dist/jira.js.map b/src/sentry_plugins/jira/static/jira/dist/jira.js.map
similarity index 100%
rename from src/new_sentry_plugins/jira/static/jira/dist/jira.js.map
rename to src/sentry_plugins/jira/static/jira/dist/jira.js.map
diff --git a/src/new_sentry_plugins/jira/static/jira/dist/jira.js.map.gz b/src/sentry_plugins/jira/static/jira/dist/jira.js.map.gz
similarity index 100%
rename from src/new_sentry_plugins/jira/static/jira/dist/jira.js.map.gz
rename to src/sentry_plugins/jira/static/jira/dist/jira.js.map.gz
diff --git a/src/new_sentry_plugins/jira/static/jira/jira.jsx b/src/sentry_plugins/jira/static/jira/jira.jsx
similarity index 100%
rename from src/new_sentry_plugins/jira/static/jira/jira.jsx
rename to src/sentry_plugins/jira/static/jira/jira.jsx
diff --git a/src/new_sentry_plugins/jira_ac/__init__.py b/src/sentry_plugins/jira_ac/__init__.py
similarity index 100%
rename from src/new_sentry_plugins/jira_ac/__init__.py
rename to src/sentry_plugins/jira_ac/__init__.py
diff --git a/src/new_sentry_plugins/jira_ac/forms.py b/src/sentry_plugins/jira_ac/forms.py
similarity index 100%
rename from src/new_sentry_plugins/jira_ac/forms.py
rename to src/sentry_plugins/jira_ac/forms.py
diff --git a/src/new_sentry_plugins/jira_ac/migrations/0001_initial.py b/src/sentry_plugins/jira_ac/migrations/0001_initial.py
similarity index 100%
rename from src/new_sentry_plugins/jira_ac/migrations/0001_initial.py
rename to src/sentry_plugins/jira_ac/migrations/0001_initial.py
diff --git a/src/new_sentry_plugins/jira_ac/migrations/__init__.py b/src/sentry_plugins/jira_ac/migrations/__init__.py
similarity index 100%
rename from src/new_sentry_plugins/jira_ac/migrations/__init__.py
rename to src/sentry_plugins/jira_ac/migrations/__init__.py
diff --git a/src/new_sentry_plugins/jira_ac/models.py b/src/sentry_plugins/jira_ac/models.py
similarity index 94%
rename from src/new_sentry_plugins/jira_ac/models.py
rename to src/sentry_plugins/jira_ac/models.py
index 7f4e94f4a2..4d51128152 100644
--- a/src/new_sentry_plugins/jira_ac/models.py
+++ b/src/sentry_plugins/jira_ac/models.py
@@ -7,7 +7,7 @@ import jwt
 from django.db import models
 
 from sentry.db.models import Model, FlexibleForeignKey
-from new_sentry_plugins.jira_ac.utils import get_query_hash
+from sentry_plugins.jira_ac.utils import get_query_hash
 
 
 class JiraTenant(Model):
diff --git a/src/new_sentry_plugins/jira_ac/plugin.py b/src/sentry_plugins/jira_ac/plugin.py
similarity index 75%
rename from src/new_sentry_plugins/jira_ac/plugin.py
rename to src/sentry_plugins/jira_ac/plugin.py
index 0ce9a064e7..cd36b497a6 100644
--- a/src/new_sentry_plugins/jira_ac/plugin.py
+++ b/src/sentry_plugins/jira_ac/plugin.py
@@ -2,7 +2,7 @@ from __future__ import absolute_import
 
 from sentry.plugins.base import Plugin
 
-from new_sentry_plugins.base import CorePluginMixin
+from sentry_plugins.base import CorePluginMixin
 
 
 class JiraACPlugin(CorePluginMixin, Plugin):
@@ -13,4 +13,4 @@ class JiraACPlugin(CorePluginMixin, Plugin):
     conf_key = "jira-ac"
 
     def get_url_module(self):
-        return "new_sentry_plugins.jira_ac.urls"
+        return "sentry_plugins.jira_ac.urls"
diff --git a/src/new_sentry_plugins/jira_ac/templates/base.html b/src/sentry_plugins/jira_ac/templates/base.html
similarity index 100%
rename from src/new_sentry_plugins/jira_ac/templates/base.html
rename to src/sentry_plugins/jira_ac/templates/base.html
diff --git a/src/new_sentry_plugins/jira_ac/templates/config.html b/src/sentry_plugins/jira_ac/templates/config.html
similarity index 100%
rename from src/new_sentry_plugins/jira_ac/templates/config.html
rename to src/sentry_plugins/jira_ac/templates/config.html
diff --git a/src/new_sentry_plugins/jira_ac/templates/error.html b/src/sentry_plugins/jira_ac/templates/error.html
similarity index 100%
rename from src/new_sentry_plugins/jira_ac/templates/error.html
rename to src/sentry_plugins/jira_ac/templates/error.html
diff --git a/src/new_sentry_plugins/jira_ac/templates/signin.html b/src/sentry_plugins/jira_ac/templates/signin.html
similarity index 100%
rename from src/new_sentry_plugins/jira_ac/templates/signin.html
rename to src/sentry_plugins/jira_ac/templates/signin.html
diff --git a/src/new_sentry_plugins/jira_ac/templates/widget.html b/src/sentry_plugins/jira_ac/templates/widget.html
similarity index 100%
rename from src/new_sentry_plugins/jira_ac/templates/widget.html
rename to src/sentry_plugins/jira_ac/templates/widget.html
diff --git a/src/new_sentry_plugins/jira_ac/urls.py b/src/sentry_plugins/jira_ac/urls.py
similarity index 89%
rename from src/new_sentry_plugins/jira_ac/urls.py
rename to src/sentry_plugins/jira_ac/urls.py
index 7cdcce0f88..2801529c10 100644
--- a/src/new_sentry_plugins/jira_ac/urls.py
+++ b/src/sentry_plugins/jira_ac/urls.py
@@ -2,7 +2,7 @@ from __future__ import absolute_import
 
 from django.conf.urls import url
 
-from new_sentry_plugins.jira_ac.views import (
+from sentry_plugins.jira_ac.views import (
     JiraConfigView,
     JiraDescriptorView,
     JiraInstalledCallback,
diff --git a/src/new_sentry_plugins/jira_ac/utils.py b/src/sentry_plugins/jira_ac/utils.py
similarity index 95%
rename from src/new_sentry_plugins/jira_ac/utils.py
rename to src/sentry_plugins/jira_ac/utils.py
index 5012531483..114c3514d9 100644
--- a/src/new_sentry_plugins/jira_ac/utils.py
+++ b/src/sentry_plugins/jira_ac/utils.py
@@ -5,7 +5,7 @@ import jwt
 
 from six.moves.urllib.parse import quote
 
-from new_sentry_plugins.exceptions import ApiError
+from sentry_plugins.exceptions import ApiError
 
 
 def percent_encode(val):
@@ -51,7 +51,7 @@ def get_jira_auth_from_request(request):
     issuer = decoded["iss"]
     # Look up the sharedSecret for the clientKey, as stored
     # by the add-on during the installation handshake
-    from new_sentry_plugins.jira_ac.models import JiraTenant
+    from sentry_plugins.jira_ac.models import JiraTenant
 
     jira_auth = JiraTenant.objects.get(client_key=issuer)
     # Verify the signature with the sharedSecret and
diff --git a/src/new_sentry_plugins/jira_ac/views.py b/src/sentry_plugins/jira_ac/views.py
similarity index 97%
rename from src/new_sentry_plugins/jira_ac/views.py
rename to src/sentry_plugins/jira_ac/views.py
index 2bfe41209c..316232f425 100644
--- a/src/new_sentry_plugins/jira_ac/views.py
+++ b/src/sentry_plugins/jira_ac/views.py
@@ -15,9 +15,9 @@ from sentry.models import Organization
 from sentry.utils.http import absolute_uri
 from sentry.web.helpers import render_to_response
 
-from new_sentry_plugins.jira_ac.forms import JiraConfigForm
-from new_sentry_plugins.jira_ac.models import JiraTenant
-from new_sentry_plugins.jira_ac.utils import get_jira_auth_from_request, ApiError
+from sentry_plugins.jira_ac.forms import JiraConfigForm
+from sentry_plugins.jira_ac.models import JiraTenant
+from sentry_plugins.jira_ac.utils import get_jira_auth_from_request, ApiError
 from jwt.exceptions import ExpiredSignatureError
 
 JIRA_KEY = "%s.jira_ac" % (urlparse(absolute_uri()).hostname,)
diff --git a/src/new_sentry_plugins/pagerduty/__init__.py b/src/sentry_plugins/pagerduty/__init__.py
similarity index 58%
rename from src/new_sentry_plugins/pagerduty/__init__.py
rename to src/sentry_plugins/pagerduty/__init__.py
index 97157bb135..55556ca521 100644
--- a/src/new_sentry_plugins/pagerduty/__init__.py
+++ b/src/sentry_plugins/pagerduty/__init__.py
@@ -1,5 +1,5 @@
 from __future__ import absolute_import
 
-from new_sentry_plugins.base import assert_package_not_installed
+from sentry_plugins.base import assert_package_not_installed
 
 assert_package_not_installed("sentry-pagerduty")
diff --git a/src/new_sentry_plugins/pagerduty/client.py b/src/sentry_plugins/pagerduty/client.py
similarity index 96%
rename from src/new_sentry_plugins/pagerduty/client.py
rename to src/sentry_plugins/pagerduty/client.py
index 6f0fbf31e2..c3ddd064c8 100644
--- a/src/new_sentry_plugins/pagerduty/client.py
+++ b/src/sentry_plugins/pagerduty/client.py
@@ -1,7 +1,7 @@
 from __future__ import absolute_import
 
 from sentry.utils.http import absolute_uri
-from new_sentry_plugins.client import ApiClient
+from sentry_plugins.client import ApiClient
 
 # https://v2.developer.pagerduty.com/docs/events-api
 INTEGRATION_API_URL = "https://events.pagerduty.com/generic/2010-04-15/create_event.json"
diff --git a/src/new_sentry_plugins/pagerduty/plugin.py b/src/sentry_plugins/pagerduty/plugin.py
similarity index 96%
rename from src/new_sentry_plugins/pagerduty/plugin.py
rename to src/sentry_plugins/pagerduty/plugin.py
index d8ad220e3c..78a36cdfbc 100644
--- a/src/new_sentry_plugins/pagerduty/plugin.py
+++ b/src/sentry_plugins/pagerduty/plugin.py
@@ -5,8 +5,8 @@ import six
 from sentry.plugins.bases.notify import NotifyPlugin
 from sentry.utils.http import absolute_uri
 
-from new_sentry_plugins.base import CorePluginMixin
-from new_sentry_plugins.utils import get_secret_field_config
+from sentry_plugins.base import CorePluginMixin
+from sentry_plugins.utils import get_secret_field_config
 
 from .client import PagerDutyClient
 
diff --git a/src/new_sentry_plugins/phabricator/__init__.py b/src/sentry_plugins/phabricator/__init__.py
similarity index 100%
rename from src/new_sentry_plugins/phabricator/__init__.py
rename to src/sentry_plugins/phabricator/__init__.py
diff --git a/src/new_sentry_plugins/phabricator/plugin.py b/src/sentry_plugins/phabricator/plugin.py
similarity index 98%
rename from src/new_sentry_plugins/phabricator/plugin.py
rename to src/sentry_plugins/phabricator/plugin.py
index e870819fc4..0e9bcce733 100644
--- a/src/new_sentry_plugins/phabricator/plugin.py
+++ b/src/sentry_plugins/phabricator/plugin.py
@@ -6,8 +6,8 @@ from sentry.plugins.bases.issue2 import IssuePlugin2, IssueGroupActionEndpoint
 from sentry.utils.http import absolute_uri
 from six.moves.urllib.parse import urljoin
 
-from new_sentry_plugins.base import CorePluginMixin
-from new_sentry_plugins.utils import get_secret_field_config
+from sentry_plugins.base import CorePluginMixin
+from sentry_plugins.utils import get_secret_field_config
 
 import httplib
 import json
diff --git a/src/new_sentry_plugins/pivotal/__init__.py b/src/sentry_plugins/pivotal/__init__.py
similarity index 57%
rename from src/new_sentry_plugins/pivotal/__init__.py
rename to src/sentry_plugins/pivotal/__init__.py
index 49b0760b46..3e3caee7aa 100644
--- a/src/new_sentry_plugins/pivotal/__init__.py
+++ b/src/sentry_plugins/pivotal/__init__.py
@@ -1,5 +1,5 @@
 from __future__ import absolute_import
 
-from new_sentry_plugins.base import assert_package_not_installed
+from sentry_plugins.base import assert_package_not_installed
 
 assert_package_not_installed("sentry-pivotal")
diff --git a/src/new_sentry_plugins/pivotal/plugin.py b/src/sentry_plugins/pivotal/plugin.py
similarity index 98%
rename from src/new_sentry_plugins/pivotal/plugin.py
rename to src/sentry_plugins/pivotal/plugin.py
index ef6856439f..37ec249ba7 100644
--- a/src/new_sentry_plugins/pivotal/plugin.py
+++ b/src/sentry_plugins/pivotal/plugin.py
@@ -10,8 +10,8 @@ from sentry.http import safe_urlopen, safe_urlread
 from sentry.utils import json
 from six.moves.urllib.parse import urlencode
 
-from new_sentry_plugins.base import CorePluginMixin
-from new_sentry_plugins.utils import get_secret_field_config
+from sentry_plugins.base import CorePluginMixin
+from sentry_plugins.utils import get_secret_field_config
 
 
 class PivotalPlugin(CorePluginMixin, IssuePlugin2):
diff --git a/src/new_sentry_plugins/pushover/__init__.py b/src/sentry_plugins/pushover/__init__.py
similarity index 57%
rename from src/new_sentry_plugins/pushover/__init__.py
rename to src/sentry_plugins/pushover/__init__.py
index 9b498c7e99..b5f88ec73d 100644
--- a/src/new_sentry_plugins/pushover/__init__.py
+++ b/src/sentry_plugins/pushover/__init__.py
@@ -1,5 +1,5 @@
 from __future__ import absolute_import
 
-from new_sentry_plugins.base import assert_package_not_installed
+from sentry_plugins.base import assert_package_not_installed
 
 assert_package_not_installed("sentry-pushover")
diff --git a/src/new_sentry_plugins/pushover/client.py b/src/sentry_plugins/pushover/client.py
similarity index 94%
rename from src/new_sentry_plugins/pushover/client.py
rename to src/sentry_plugins/pushover/client.py
index e2f33cbb9b..979b88680e 100644
--- a/src/new_sentry_plugins/pushover/client.py
+++ b/src/sentry_plugins/pushover/client.py
@@ -1,6 +1,6 @@
 from __future__ import absolute_import
 
-from new_sentry_plugins.client import ApiClient
+from sentry_plugins.client import ApiClient
 
 
 class PushoverClient(ApiClient):
diff --git a/src/new_sentry_plugins/pushover/plugin.py b/src/sentry_plugins/pushover/plugin.py
similarity index 97%
rename from src/new_sentry_plugins/pushover/plugin.py
rename to src/sentry_plugins/pushover/plugin.py
index 1037a20bd0..b7a5c7177f 100644
--- a/src/new_sentry_plugins/pushover/plugin.py
+++ b/src/sentry_plugins/pushover/plugin.py
@@ -4,8 +4,8 @@ import six
 
 from sentry.plugins.bases.notify import NotifyPlugin
 
-from new_sentry_plugins.base import CorePluginMixin
-from new_sentry_plugins.utils import get_secret_field_config
+from sentry_plugins.base import CorePluginMixin
+from sentry_plugins.utils import get_secret_field_config
 
 from .client import PushoverClient
 
diff --git a/src/new_sentry_plugins/segment/__init__.py b/src/sentry_plugins/segment/__init__.py
similarity index 100%
rename from src/new_sentry_plugins/segment/__init__.py
rename to src/sentry_plugins/segment/__init__.py
diff --git a/src/new_sentry_plugins/segment/plugin.py b/src/sentry_plugins/segment/plugin.py
similarity index 97%
rename from src/new_sentry_plugins/segment/plugin.py
rename to src/sentry_plugins/segment/plugin.py
index f609698d3c..2f7ea88a79 100644
--- a/src/new_sentry_plugins/segment/plugin.py
+++ b/src/sentry_plugins/segment/plugin.py
@@ -3,8 +3,8 @@ from __future__ import absolute_import
 from sentry import http
 from sentry.plugins.bases.data_forwarding import DataForwardingPlugin
 
-from new_sentry_plugins.base import CorePluginMixin
-from new_sentry_plugins.utils import get_secret_field_config
+from sentry_plugins.base import CorePluginMixin
+from sentry_plugins.utils import get_secret_field_config
 
 
 class SegmentPlugin(CorePluginMixin, DataForwardingPlugin):
diff --git a/src/new_sentry_plugins/sessionstack/__init__.py b/src/sentry_plugins/sessionstack/__init__.py
similarity index 100%
rename from src/new_sentry_plugins/sessionstack/__init__.py
rename to src/sentry_plugins/sessionstack/__init__.py
diff --git a/src/new_sentry_plugins/sessionstack/client.py b/src/sentry_plugins/sessionstack/client.py
similarity index 100%
rename from src/new_sentry_plugins/sessionstack/client.py
rename to src/sentry_plugins/sessionstack/client.py
diff --git a/src/new_sentry_plugins/sessionstack/plugin.py b/src/sentry_plugins/sessionstack/plugin.py
similarity index 99%
rename from src/new_sentry_plugins/sessionstack/plugin.py
rename to src/sentry_plugins/sessionstack/plugin.py
index c1a2913f94..dd60c0520b 100644
--- a/src/new_sentry_plugins/sessionstack/plugin.py
+++ b/src/sentry_plugins/sessionstack/plugin.py
@@ -8,7 +8,7 @@ from sentry.plugins.base import Plugin2
 from sentry.plugins.base.configuration import react_plugin_config
 from sentry.exceptions import PluginError
 
-from new_sentry_plugins.base import CorePluginMixin
+from sentry_plugins.base import CorePluginMixin
 
 from .client import SessionStackClient, UnauthorizedError, InvalidWebsiteIdError, InvalidApiUrlError
 
diff --git a/src/new_sentry_plugins/sessionstack/static/sessionstack/components/settings.jsx b/src/sentry_plugins/sessionstack/static/sessionstack/components/settings.jsx
similarity index 100%
rename from src/new_sentry_plugins/sessionstack/static/sessionstack/components/settings.jsx
rename to src/sentry_plugins/sessionstack/static/sessionstack/components/settings.jsx
diff --git a/src/new_sentry_plugins/sessionstack/static/sessionstack/contexts/sessionstack.jsx b/src/sentry_plugins/sessionstack/static/sessionstack/contexts/sessionstack.jsx
similarity index 100%
rename from src/new_sentry_plugins/sessionstack/static/sessionstack/contexts/sessionstack.jsx
rename to src/sentry_plugins/sessionstack/static/sessionstack/contexts/sessionstack.jsx
diff --git a/src/new_sentry_plugins/sessionstack/static/sessionstack/dist/sessionstack.js b/src/sentry_plugins/sessionstack/static/sessionstack/dist/sessionstack.js
similarity index 100%
rename from src/new_sentry_plugins/sessionstack/static/sessionstack/dist/sessionstack.js
rename to src/sentry_plugins/sessionstack/static/sessionstack/dist/sessionstack.js
diff --git a/src/new_sentry_plugins/sessionstack/static/sessionstack/dist/sessionstack.js.gz b/src/sentry_plugins/sessionstack/static/sessionstack/dist/sessionstack.js.gz
similarity index 100%
rename from src/new_sentry_plugins/sessionstack/static/sessionstack/dist/sessionstack.js.gz
rename to src/sentry_plugins/sessionstack/static/sessionstack/dist/sessionstack.js.gz
diff --git a/src/new_sentry_plugins/sessionstack/static/sessionstack/dist/sessionstack.js.map b/src/sentry_plugins/sessionstack/static/sessionstack/dist/sessionstack.js.map
similarity index 100%
rename from src/new_sentry_plugins/sessionstack/static/sessionstack/dist/sessionstack.js.map
rename to src/sentry_plugins/sessionstack/static/sessionstack/dist/sessionstack.js.map
diff --git a/src/new_sentry_plugins/sessionstack/static/sessionstack/dist/sessionstack.js.map.gz b/src/sentry_plugins/sessionstack/static/sessionstack/dist/sessionstack.js.map.gz
similarity index 100%
rename from src/new_sentry_plugins/sessionstack/static/sessionstack/dist/sessionstack.js.map.gz
rename to src/sentry_plugins/sessionstack/static/sessionstack/dist/sessionstack.js.map.gz
diff --git a/src/new_sentry_plugins/sessionstack/static/sessionstack/sessionstack.jsx b/src/sentry_plugins/sessionstack/static/sessionstack/sessionstack.jsx
similarity index 100%
rename from src/new_sentry_plugins/sessionstack/static/sessionstack/sessionstack.jsx
rename to src/sentry_plugins/sessionstack/static/sessionstack/sessionstack.jsx
diff --git a/src/new_sentry_plugins/sessionstack/utils.py b/src/sentry_plugins/sessionstack/utils.py
similarity index 100%
rename from src/new_sentry_plugins/sessionstack/utils.py
rename to src/sentry_plugins/sessionstack/utils.py
diff --git a/src/new_sentry_plugins/slack/README.rst b/src/sentry_plugins/slack/README.rst
similarity index 100%
rename from src/new_sentry_plugins/slack/README.rst
rename to src/sentry_plugins/slack/README.rst
diff --git a/src/new_sentry_plugins/slack/__init__.py b/src/sentry_plugins/slack/__init__.py
similarity index 56%
rename from src/new_sentry_plugins/slack/__init__.py
rename to src/sentry_plugins/slack/__init__.py
index a37e36c003..dd49f748de 100644
--- a/src/new_sentry_plugins/slack/__init__.py
+++ b/src/sentry_plugins/slack/__init__.py
@@ -1,5 +1,5 @@
 from __future__ import absolute_import
 
-from new_sentry_plugins.base import assert_package_not_installed
+from sentry_plugins.base import assert_package_not_installed
 
 assert_package_not_installed("sentry-slack")
diff --git a/src/new_sentry_plugins/slack/plugin.py b/src/sentry_plugins/slack/plugin.py
similarity index 99%
rename from src/new_sentry_plugins/slack/plugin.py
rename to src/sentry_plugins/slack/plugin.py
index 02b667345c..cffcdc235a 100644
--- a/src/new_sentry_plugins/slack/plugin.py
+++ b/src/sentry_plugins/slack/plugin.py
@@ -5,7 +5,7 @@ from sentry.plugins.bases import notify
 from sentry.utils import json
 from sentry.utils.http import absolute_uri
 
-from new_sentry_plugins.base import CorePluginMixin
+from sentry_plugins.base import CorePluginMixin
 
 LEVEL_TO_COLOR = {
     "debug": "cfd3da",
diff --git a/src/new_sentry_plugins/splunk/README.rst b/src/sentry_plugins/splunk/README.rst
similarity index 100%
rename from src/new_sentry_plugins/splunk/README.rst
rename to src/sentry_plugins/splunk/README.rst
diff --git a/src/new_sentry_plugins/splunk/__init__.py b/src/sentry_plugins/splunk/__init__.py
similarity index 100%
rename from src/new_sentry_plugins/splunk/__init__.py
rename to src/sentry_plugins/splunk/__init__.py
diff --git a/src/new_sentry_plugins/splunk/plugin.py b/src/sentry_plugins/splunk/plugin.py
similarity index 98%
rename from src/new_sentry_plugins/splunk/plugin.py
rename to src/sentry_plugins/splunk/plugin.py
index 4adccc4190..200e33d488 100644
--- a/src/new_sentry_plugins/splunk/plugin.py
+++ b/src/sentry_plugins/splunk/plugin.py
@@ -27,9 +27,9 @@ from sentry.plugins.base.configuration import react_plugin_config
 from sentry.utils import metrics
 from sentry.utils.hashlib import md5_text
 
-from new_sentry_plugins.base import CorePluginMixin
-from new_sentry_plugins.utils import get_secret_field_config
-from new_sentry_plugins.anonymizeip import anonymize_ip
+from sentry_plugins.base import CorePluginMixin
+from sentry_plugins.utils import get_secret_field_config
+from sentry_plugins.anonymizeip import anonymize_ip
 
 logger = logging.getLogger(__name__)
 
diff --git a/src/new_sentry_plugins/utils.py b/src/sentry_plugins/utils.py
similarity index 100%
rename from src/new_sentry_plugins/utils.py
rename to src/sentry_plugins/utils.py
diff --git a/src/new_sentry_plugins/victorops/__init__.py b/src/sentry_plugins/victorops/__init__.py
similarity index 100%
rename from src/new_sentry_plugins/victorops/__init__.py
rename to src/sentry_plugins/victorops/__init__.py
diff --git a/src/new_sentry_plugins/victorops/client.py b/src/sentry_plugins/victorops/client.py
similarity index 96%
rename from src/new_sentry_plugins/victorops/client.py
rename to src/sentry_plugins/victorops/client.py
index a80b04569a..db4b21ebbc 100644
--- a/src/new_sentry_plugins/victorops/client.py
+++ b/src/sentry_plugins/victorops/client.py
@@ -1,6 +1,6 @@
 from __future__ import absolute_import
 
-from new_sentry_plugins.client import ApiClient
+from sentry_plugins.client import ApiClient
 
 
 class VictorOpsClient(ApiClient):
diff --git a/src/new_sentry_plugins/victorops/plugin.py b/src/sentry_plugins/victorops/plugin.py
similarity index 94%
rename from src/new_sentry_plugins/victorops/plugin.py
rename to src/sentry_plugins/victorops/plugin.py
index 17270f35f5..c486ac405c 100644
--- a/src/new_sentry_plugins/victorops/plugin.py
+++ b/src/sentry_plugins/victorops/plugin.py
@@ -5,9 +5,9 @@ import six
 from sentry.exceptions import PluginError
 from sentry.plugins.bases.notify import NotifyPlugin
 
-from new_sentry_plugins.base import CorePluginMixin
-from new_sentry_plugins.exceptions import ApiError
-from new_sentry_plugins.utils import get_secret_field_config
+from sentry_plugins.base import CorePluginMixin
+from sentry_plugins.exceptions import ApiError
+from sentry_plugins.utils import get_secret_field_config
 
 from .client import VictorOpsClient
 
diff --git a/src/new_sentry_plugins/vsts/.gitignore b/src/sentry_plugins/vsts/.gitignore
similarity index 100%
rename from src/new_sentry_plugins/vsts/.gitignore
rename to src/sentry_plugins/vsts/.gitignore
diff --git a/src/new_sentry_plugins/vsts/LICENSE b/src/sentry_plugins/vsts/LICENSE
similarity index 100%
rename from src/new_sentry_plugins/vsts/LICENSE
rename to src/sentry_plugins/vsts/LICENSE
diff --git a/src/new_sentry_plugins/vsts/README.rst b/src/sentry_plugins/vsts/README.rst
similarity index 100%
rename from src/new_sentry_plugins/vsts/README.rst
rename to src/sentry_plugins/vsts/README.rst
diff --git a/src/new_sentry_plugins/vsts/__init__.py b/src/sentry_plugins/vsts/__init__.py
similarity index 100%
rename from src/new_sentry_plugins/vsts/__init__.py
rename to src/sentry_plugins/vsts/__init__.py
diff --git a/src/new_sentry_plugins/vsts/client.py b/src/sentry_plugins/vsts/client.py
similarity index 98%
rename from src/new_sentry_plugins/vsts/client.py
rename to src/sentry_plugins/vsts/client.py
index 1352ff953a..fe4505cc1a 100644
--- a/src/new_sentry_plugins/vsts/client.py
+++ b/src/sentry_plugins/vsts/client.py
@@ -1,6 +1,6 @@
 from __future__ import absolute_import
 
-from new_sentry_plugins.client import AuthApiClient
+from sentry_plugins.client import AuthApiClient
 
 UNSET = object()
 
diff --git a/src/new_sentry_plugins/vsts/mixins.py b/src/sentry_plugins/vsts/mixins.py
similarity index 84%
rename from src/new_sentry_plugins/vsts/mixins.py
rename to src/sentry_plugins/vsts/mixins.py
index 5d1b802c07..f9885a1d27 100644
--- a/src/new_sentry_plugins/vsts/mixins.py
+++ b/src/sentry_plugins/vsts/mixins.py
@@ -4,8 +4,8 @@ import logging
 
 from sentry.exceptions import PluginError
 
-from new_sentry_plugins.base import CorePluginMixin
-from new_sentry_plugins.constants import ERR_UNAUTHORIZED
+from sentry_plugins.base import CorePluginMixin
+from sentry_plugins.constants import ERR_UNAUTHORIZED
 
 from .client import VstsClient
 
diff --git a/src/new_sentry_plugins/vsts/plugin.py b/src/sentry_plugins/vsts/plugin.py
similarity index 100%
rename from src/new_sentry_plugins/vsts/plugin.py
rename to src/sentry_plugins/vsts/plugin.py
diff --git a/src/new_sentry_plugins/vsts/repository_provider.py b/src/sentry_plugins/vsts/repository_provider.py
similarity index 100%
rename from src/new_sentry_plugins/vsts/repository_provider.py
rename to src/sentry_plugins/vsts/repository_provider.py
diff --git a/src/new_sentry_plugins/vsts/testutils.py b/src/sentry_plugins/vsts/testutils.py
similarity index 100%
rename from src/new_sentry_plugins/vsts/testutils.py
rename to src/sentry_plugins/vsts/testutils.py
diff --git a/tests/sentry_plugins/amazon_sqs/test_plugin.py b/tests/sentry_plugins/amazon_sqs/test_plugin.py
index aa1c5d2dfb..d351719cbd 100644
--- a/tests/sentry_plugins/amazon_sqs/test_plugin.py
+++ b/tests/sentry_plugins/amazon_sqs/test_plugin.py
@@ -7,7 +7,7 @@ from mock import patch
 from sentry.testutils import PluginTestCase
 from sentry.utils import json
 
-from new_sentry_plugins.amazon_sqs.plugin import AmazonSQSPlugin
+from sentry_plugins.amazon_sqs.plugin import AmazonSQSPlugin
 
 
 class AmazonSQSPluginTest(PluginTestCase):
@@ -19,7 +19,7 @@ class AmazonSQSPluginTest(PluginTestCase):
         assert self.plugin.conf_key == "amazon-sqs"
 
     def test_entry_point(self):
-        self.assertNewPluginInstalled("amazon_sqs", self.plugin)
+        self.assertPluginInstalled("amazon_sqs", self.plugin)
 
     def run_test(self):
         self.plugin.set_option("access_key", "access-key", self.project)
@@ -59,7 +59,7 @@ class AmazonSQSPluginTest(PluginTestCase):
             MessageBody=json.dumps(self.plugin.get_event_payload(event)),
         )
 
-    @patch("new_sentry_plugins.amazon_sqs.plugin.logger")
+    @patch("sentry_plugins.amazon_sqs.plugin.logger")
     @patch("boto3.client")
     def test_token_error(self, mock_client, logger):
         mock_client.return_value.send_message.side_effect = ClientError(
@@ -76,10 +76,10 @@ class AmazonSQSPluginTest(PluginTestCase):
         assert len(logger.info.call_args_list) == 1
         assert (
             logger.info.call_args_list[0][0][0]
-            == "new_sentry_plugins.amazon_sqs.access_token_invalid"
+            == "sentry_plugins.amazon_sqs.access_token_invalid"
         )
 
-    @patch("new_sentry_plugins.amazon_sqs.plugin.logger")
+    @patch("sentry_plugins.amazon_sqs.plugin.logger")
     @patch("boto3.client")
     def test_message_group_error(self, mock_client, logger):
         mock_client.return_value.send_message.side_effect = ClientError(
@@ -97,7 +97,7 @@ class AmazonSQSPluginTest(PluginTestCase):
         assert len(logger.info.call_args_list) == 1
         assert (
             logger.info.call_args_list[0][0][0]
-            == "new_sentry_plugins.amazon_sqs.missing_message_group_id"
+            == "sentry_plugins.amazon_sqs.missing_message_group_id"
         )
 
     @patch("uuid.uuid4")
diff --git a/tests/sentry_plugins/asana/test_plugin.py b/tests/sentry_plugins/asana/test_plugin.py
index f5a818ef2a..514d28da8c 100644
--- a/tests/sentry_plugins/asana/test_plugin.py
+++ b/tests/sentry_plugins/asana/test_plugin.py
@@ -10,7 +10,7 @@ from sentry.testutils import PluginTestCase
 from sentry.utils import json
 from social_auth.models import UserSocialAuth
 
-from new_sentry_plugins.asana.plugin import AsanaPlugin
+from sentry_plugins.asana.plugin import AsanaPlugin
 
 
 class AsanaPluginTest(PluginTestCase):
@@ -26,7 +26,7 @@ class AsanaPluginTest(PluginTestCase):
         assert self.plugin.conf_key == "asana"
 
     def test_entry_point(self):
-        self.assertNewPluginInstalled("asana", self.plugin)
+        self.assertPluginInstalled("asana", self.plugin)
 
     def test_get_issue_label(self):
         group = self.create_group(message="Hello world", culprit="foo.bar")
diff --git a/tests/sentry_plugins/bitbucket/endpoints/test_webhooks.py b/tests/sentry_plugins/bitbucket/endpoints/test_webhooks.py
index c92d6d73fa..fadb61ce05 100644
--- a/tests/sentry_plugins/bitbucket/endpoints/test_webhooks.py
+++ b/tests/sentry_plugins/bitbucket/endpoints/test_webhooks.py
@@ -6,8 +6,8 @@ from django.utils import timezone
 from sentry.models import Commit, CommitAuthor, Repository
 from sentry.testutils import APITestCase, TestCase
 
-from new_sentry_plugins.bitbucket.endpoints.webhook import parse_raw_user_email, parse_raw_user_name
-from new_sentry_plugins.bitbucket.testutils import PUSH_EVENT_EXAMPLE
+from sentry_plugins.bitbucket.endpoints.webhook import parse_raw_user_email, parse_raw_user_name
+from sentry_plugins.bitbucket.testutils import PUSH_EVENT_EXAMPLE
 
 BAD_IP = "109.111.111.10"
 BITBUCKET_IP_IN_RANGE = "104.192.143.10"
diff --git a/tests/sentry_plugins/bitbucket/test_plugin.py b/tests/sentry_plugins/bitbucket/test_plugin.py
index c5c1361d9f..cc51966a02 100644
--- a/tests/sentry_plugins/bitbucket/test_plugin.py
+++ b/tests/sentry_plugins/bitbucket/test_plugin.py
@@ -10,7 +10,7 @@ from sentry.testutils import PluginTestCase
 
 from social_auth.models import UserSocialAuth
 
-from new_sentry_plugins.bitbucket.plugin import BitbucketPlugin
+from sentry_plugins.bitbucket.plugin import BitbucketPlugin
 
 
 class BitbucketPluginTest(PluginTestCase):
@@ -26,7 +26,7 @@ class BitbucketPluginTest(PluginTestCase):
         assert self.plugin.conf_key == "bitbucket"
 
     def test_entry_point(self):
-        self.assertNewPluginInstalled("bitbucket", self.plugin)
+        self.assertPluginInstalled("bitbucket", self.plugin)
 
     def test_get_issue_label(self):
         group = self.create_group(message="Hello world", culprit="foo.bar")
diff --git a/tests/sentry_plugins/bitbucket/test_repository_provider.py b/tests/sentry_plugins/bitbucket/test_repository_provider.py
index 57ba6a1699..1c0452e5db 100644
--- a/tests/sentry_plugins/bitbucket/test_repository_provider.py
+++ b/tests/sentry_plugins/bitbucket/test_repository_provider.py
@@ -7,8 +7,8 @@ from sentry.models import Repository
 from sentry.testutils import PluginTestCase
 from social_auth.models import UserSocialAuth
 
-from new_sentry_plugins.bitbucket.plugin import BitbucketRepositoryProvider
-from new_sentry_plugins.bitbucket.testutils import COMPARE_COMMITS_EXAMPLE, COMMIT_DIFF_PATCH
+from sentry_plugins.bitbucket.plugin import BitbucketRepositoryProvider
+from sentry_plugins.bitbucket.testutils import COMPARE_COMMITS_EXAMPLE, COMMIT_DIFF_PATCH
 
 
 class BitbucketPluginTest(PluginTestCase):
diff --git a/tests/sentry_plugins/clubhouse/test_plugin.py b/tests/sentry_plugins/clubhouse/test_plugin.py
index 01d6660682..169d09db14 100644
--- a/tests/sentry_plugins/clubhouse/test_plugin.py
+++ b/tests/sentry_plugins/clubhouse/test_plugin.py
@@ -8,7 +8,7 @@ from django.test import RequestFactory
 from sentry.testutils import PluginTestCase
 from sentry.utils import json
 
-from new_sentry_plugins.clubhouse.plugin import ClubhousePlugin
+from sentry_plugins.clubhouse.plugin import ClubhousePlugin
 
 
 class ClubhousePluginTest(PluginTestCase):
@@ -24,7 +24,7 @@ class ClubhousePluginTest(PluginTestCase):
         assert self.plugin.conf_key == "clubhouse"
 
     def test_entry_point(self):
-        self.assertNewPluginInstalled("clubhouse", self.plugin)
+        self.assertPluginInstalled("clubhouse", self.plugin)
 
     def test_get_issue_label(self):
         group = self.create_group(message="Hello world", culprit="foo.bar")
diff --git a/tests/sentry_plugins/github/endpoints/test_webhooks.py b/tests/sentry_plugins/github/endpoints/test_webhooks.py
index 7101cd58df..90e413abcd 100644
--- a/tests/sentry_plugins/github/endpoints/test_webhooks.py
+++ b/tests/sentry_plugins/github/endpoints/test_webhooks.py
@@ -16,7 +16,7 @@ from sentry.models import (
 from sentry.testutils import APITestCase
 from uuid import uuid4
 
-from new_sentry_plugins.github.testutils import (
+from sentry_plugins.github.testutils import (
     INSTALLATION_EVENT_EXAMPLE,
     INSTALLATION_REPO_EVENT,
     PUSH_EVENT_EXAMPLE,
diff --git a/tests/sentry_plugins/github/test_plugin.py b/tests/sentry_plugins/github/test_plugin.py
index 1854daa655..fa3745a878 100644
--- a/tests/sentry_plugins/github/test_plugin.py
+++ b/tests/sentry_plugins/github/test_plugin.py
@@ -10,7 +10,7 @@ from sentry.testutils import PluginTestCase
 from sentry.utils import json
 from social_auth.models import UserSocialAuth
 
-from new_sentry_plugins.github.plugin import GitHubPlugin
+from sentry_plugins.github.plugin import GitHubPlugin
 
 
 class GitHubPluginTest(PluginTestCase):
@@ -26,7 +26,7 @@ class GitHubPluginTest(PluginTestCase):
         assert self.plugin.conf_key == "github"
 
     def test_entry_point(self):
-        self.assertNewPluginInstalled("github", self.plugin)
+        self.assertPluginInstalled("github", self.plugin)
 
     def test_get_issue_label(self):
         group = self.create_group(message="Hello world", culprit="foo.bar")
diff --git a/tests/sentry_plugins/github/test_provider.py b/tests/sentry_plugins/github/test_provider.py
index 101a03c7ad..c7cb128094 100644
--- a/tests/sentry_plugins/github/test_provider.py
+++ b/tests/sentry_plugins/github/test_provider.py
@@ -9,9 +9,9 @@ from sentry.models import Integration, OrganizationIntegration, Repository
 from sentry.testutils import PluginTestCase
 from sentry.utils import json
 
-from new_sentry_plugins.github.client import GitHubClient, GitHubAppsClient
-from new_sentry_plugins.github.plugin import GitHubAppsRepositoryProvider, GitHubRepositoryProvider
-from new_sentry_plugins.github.testutils import (
+from sentry_plugins.github.client import GitHubClient, GitHubAppsClient
+from sentry_plugins.github.plugin import GitHubAppsRepositoryProvider, GitHubRepositoryProvider
+from sentry_plugins.github.testutils import (
     COMPARE_COMMITS_EXAMPLE,
     GET_LAST_COMMITS_EXAMPLE,
     INTSTALLATION_REPOSITORIES_API_RESPONSE,
diff --git a/tests/sentry_plugins/gitlab/test_plugin.py b/tests/sentry_plugins/gitlab/test_plugin.py
index 38a582acf5..2184d3942d 100644
--- a/tests/sentry_plugins/gitlab/test_plugin.py
+++ b/tests/sentry_plugins/gitlab/test_plugin.py
@@ -8,7 +8,7 @@ from django.test import RequestFactory
 from sentry.testutils import PluginTestCase
 from sentry.utils import json
 
-from new_sentry_plugins.gitlab.plugin import GitLabPlugin
+from sentry_plugins.gitlab.plugin import GitLabPlugin
 
 
 class GitLabPluginTest(PluginTestCase):
@@ -24,7 +24,7 @@ class GitLabPluginTest(PluginTestCase):
         assert self.plugin.conf_key == "gitlab"
 
     def test_entry_point(self):
-        self.assertNewPluginInstalled("gitlab", self.plugin)
+        self.assertPluginInstalled("gitlab", self.plugin)
 
     def test_get_issue_label(self):
         group = self.create_group(message="Hello world", culprit="foo.bar")
diff --git a/tests/sentry_plugins/heroku/test_plugin.py b/tests/sentry_plugins/heroku/test_plugin.py
index 4773d0f817..70f96f1072 100644
--- a/tests/sentry_plugins/heroku/test_plugin.py
+++ b/tests/sentry_plugins/heroku/test_plugin.py
@@ -20,7 +20,7 @@ from sentry.models import (
 )
 from sentry.testutils import TestCase
 
-from new_sentry_plugins.heroku.plugin import HerokuReleaseHook
+from sentry_plugins.heroku.plugin import HerokuReleaseHook
 
 
 class SetRefsTest(TestCase):
diff --git a/tests/sentry_plugins/jira/test_plugin.py b/tests/sentry_plugins/jira/test_plugin.py
index c029f8dab2..ce4d3a639a 100644
--- a/tests/sentry_plugins/jira/test_plugin.py
+++ b/tests/sentry_plugins/jira/test_plugin.py
@@ -9,7 +9,7 @@ from django.test import RequestFactory
 from sentry.testutils import TestCase
 from sentry.utils import json
 
-from new_sentry_plugins.jira.plugin import JiraPlugin
+from sentry_plugins.jira.plugin import JiraPlugin
 
 create_meta_response = {
     "expand": "projects",
diff --git a/tests/sentry_plugins/jira_ac/test_plugin.py b/tests/sentry_plugins/jira_ac/test_plugin.py
index 56bc138803..23134b6e95 100644
--- a/tests/sentry_plugins/jira_ac/test_plugin.py
+++ b/tests/sentry_plugins/jira_ac/test_plugin.py
@@ -4,7 +4,7 @@ from exam import fixture
 from django.test import RequestFactory
 from sentry.testutils import PluginTestCase
 
-from new_sentry_plugins.jira_ac.plugin import JiraACPlugin
+from sentry_plugins.jira_ac.plugin import JiraACPlugin
 
 
 class JiraPluginTest(PluginTestCase):
@@ -20,5 +20,5 @@ class JiraPluginTest(PluginTestCase):
         assert self.plugin.conf_key == "jira-ac"
 
     def test_entry_point(self):
-        self.assertNewAppInstalled("jira_ac", "new_sentry_plugins.jira_ac")
-        self.assertNewPluginInstalled("jira_ac", self.plugin)
+        self.assertAppInstalled("jira_ac", "sentry_plugins.jira_ac")
+        self.assertPluginInstalled("jira_ac", self.plugin)
diff --git a/tests/sentry_plugins/pagerduty/test_plugin.py b/tests/sentry_plugins/pagerduty/test_plugin.py
index 9a7e816e9d..c893f20cc6 100644
--- a/tests/sentry_plugins/pagerduty/test_plugin.py
+++ b/tests/sentry_plugins/pagerduty/test_plugin.py
@@ -10,7 +10,7 @@ from sentry.plugins.base import Notification
 from sentry.testutils import PluginTestCase
 from sentry.utils import json
 
-from new_sentry_plugins.pagerduty.plugin import PagerDutyPlugin
+from sentry_plugins.pagerduty.plugin import PagerDutyPlugin
 
 INVALID_METHOD = (
     '{"status":"invalid method","message":"You must use HTTP POST to submit your event"}'
@@ -32,7 +32,7 @@ class PagerDutyPluginTest(PluginTestCase):
         assert self.plugin.conf_key == "pagerduty"
 
     def test_entry_point(self):
-        self.assertNewPluginInstalled("pagerduty", self.plugin)
+        self.assertPluginInstalled("pagerduty", self.plugin)
 
     def test_is_configured(self):
         assert self.plugin.is_configured(self.project) is False
diff --git a/tests/sentry_plugins/phabricator/test_plugin.py b/tests/sentry_plugins/phabricator/test_plugin.py
index f97be2b438..ee571dede1 100644
--- a/tests/sentry_plugins/phabricator/test_plugin.py
+++ b/tests/sentry_plugins/phabricator/test_plugin.py
@@ -6,7 +6,7 @@ from exam import fixture
 from django.test import RequestFactory
 from sentry.testutils import PluginTestCase
 
-from new_sentry_plugins.phabricator.plugin import PhabricatorPlugin
+from sentry_plugins.phabricator.plugin import PhabricatorPlugin
 
 
 class PhabricatorPluginTest(PluginTestCase):
@@ -22,7 +22,7 @@ class PhabricatorPluginTest(PluginTestCase):
         assert self.plugin.conf_key == "phabricator"
 
     def test_entry_point(self):
-        self.assertNewPluginInstalled("phabricator", self.plugin)
+        self.assertPluginInstalled("phabricator", self.plugin)
 
     def test_get_issue_label(self):
         group = self.create_group(message="Hello world", culprit="foo.bar")
diff --git a/tests/sentry_plugins/pivotal/test_pivotal_plugin.py b/tests/sentry_plugins/pivotal/test_pivotal_plugin.py
index e868ded260..cf8294f331 100644
--- a/tests/sentry_plugins/pivotal/test_pivotal_plugin.py
+++ b/tests/sentry_plugins/pivotal/test_pivotal_plugin.py
@@ -5,7 +5,7 @@ from django.core.urlresolvers import reverse
 from sentry.testutils import PluginTestCase
 from sentry.utils import json
 
-from new_sentry_plugins.pivotal.plugin import PivotalPlugin
+from sentry_plugins.pivotal.plugin import PivotalPlugin
 
 
 class PivotalPluginTest(PluginTestCase):
@@ -17,7 +17,7 @@ class PivotalPluginTest(PluginTestCase):
         assert self.plugin.conf_key == "pivotal"
 
     def test_entry_point(self):
-        self.assertNewPluginInstalled("pivotal", self.plugin)
+        self.assertPluginInstalled("pivotal", self.plugin)
 
     def test_get_issue_label(self):
         group = self.create_group(message="Hello world", culprit="foo.bar")
diff --git a/tests/sentry_plugins/pushover/test_plugin.py b/tests/sentry_plugins/pushover/test_plugin.py
index 1f177e68d0..145db0656a 100644
--- a/tests/sentry_plugins/pushover/test_plugin.py
+++ b/tests/sentry_plugins/pushover/test_plugin.py
@@ -10,7 +10,7 @@ from sentry.testutils import PluginTestCase
 from sentry.utils import json
 from six.moves.urllib.parse import parse_qs
 
-from new_sentry_plugins.pushover.plugin import PushoverPlugin
+from sentry_plugins.pushover.plugin import PushoverPlugin
 
 SUCCESS = """{"status":1,"request":"e460545a8b333d0da2f3602aff3133d6"}"""
 
@@ -24,7 +24,7 @@ class PushoverPluginTest(PluginTestCase):
         assert self.plugin.conf_key == "pushover"
 
     def test_entry_point(self):
-        self.assertNewPluginInstalled("pushover", self.plugin)
+        self.assertPluginInstalled("pushover", self.plugin)
 
     def test_is_configured(self):
         assert self.plugin.is_configured(self.project) is False
diff --git a/tests/sentry_plugins/segment/test_plugin.py b/tests/sentry_plugins/segment/test_plugin.py
index 9a17a6f578..1770f38196 100644
--- a/tests/sentry_plugins/segment/test_plugin.py
+++ b/tests/sentry_plugins/segment/test_plugin.py
@@ -6,7 +6,7 @@ from exam import fixture
 from sentry.testutils import PluginTestCase
 from sentry.utils import json
 
-from new_sentry_plugins.segment.plugin import SegmentPlugin
+from sentry_plugins.segment.plugin import SegmentPlugin
 
 
 class SegmentPluginTest(PluginTestCase):
@@ -18,7 +18,7 @@ class SegmentPluginTest(PluginTestCase):
         assert self.plugin.conf_key == "segment"
 
     def test_entry_point(self):
-        self.assertNewPluginInstalled("segment", self.plugin)
+        self.assertPluginInstalled("segment", self.plugin)
 
     @responses.activate
     def test_simple_notification(self):
diff --git a/tests/sentry_plugins/sessionstack/test_plugin.py b/tests/sentry_plugins/sessionstack/test_plugin.py
index 16999ad859..5b49f3e901 100644
--- a/tests/sentry_plugins/sessionstack/test_plugin.py
+++ b/tests/sentry_plugins/sessionstack/test_plugin.py
@@ -5,7 +5,7 @@ import responses
 from exam import fixture
 from sentry.testutils import PluginTestCase
 
-from new_sentry_plugins.sessionstack.plugin import SessionStackPlugin
+from sentry_plugins.sessionstack.plugin import SessionStackPlugin
 
 EXPECTED_SESSION_URL = (
     "https://app.sessionstack.com/player/#/sessions/588778a6c5762c1d566653ff"
@@ -26,8 +26,8 @@ class SessionStackPluginTest(PluginTestCase):
         assert self.plugin.conf_key == "sessionstack"
 
     def test_entry_point(self):
-        self.assertNewPluginInstalled("sessionstack", self.plugin)
-        self.assertNewAppInstalled("sessionstack", "new_sentry_plugins.sessionstack")
+        self.assertPluginInstalled("sessionstack", self.plugin)
+        self.assertAppInstalled("sessionstack", "sentry_plugins.sessionstack")
 
     @responses.activate
     def test_config_validation(self):
diff --git a/tests/sentry_plugins/slack/test_plugin.py b/tests/sentry_plugins/slack/test_plugin.py
index 5d37820134..7553cd3cb9 100644
--- a/tests/sentry_plugins/slack/test_plugin.py
+++ b/tests/sentry_plugins/slack/test_plugin.py
@@ -9,7 +9,7 @@ from sentry.testutils import PluginTestCase
 from sentry.utils import json
 from six.moves.urllib.parse import parse_qs
 
-from new_sentry_plugins.slack.plugin import SlackPlugin
+from sentry_plugins.slack.plugin import SlackPlugin
 
 
 class SlackPluginTest(PluginTestCase):
@@ -21,7 +21,7 @@ class SlackPluginTest(PluginTestCase):
         assert self.plugin.conf_key == "slack"
 
     def test_entry_point(self):
-        self.assertNewPluginInstalled("slack", self.plugin)
+        self.assertPluginInstalled("slack", self.plugin)
 
     @responses.activate
     def test_simple_notification(self):
diff --git a/tests/sentry_plugins/splunk/test_plugin.py b/tests/sentry_plugins/splunk/test_plugin.py
index a5fe0c9f46..b57dd940ea 100644
--- a/tests/sentry_plugins/splunk/test_plugin.py
+++ b/tests/sentry_plugins/splunk/test_plugin.py
@@ -6,7 +6,7 @@ from exam import fixture
 from sentry.testutils import PluginTestCase
 from sentry.utils import json
 
-from new_sentry_plugins.splunk.plugin import SplunkPlugin
+from sentry_plugins.splunk.plugin import SplunkPlugin
 
 
 class SplunkPluginTest(PluginTestCase):
@@ -18,7 +18,7 @@ class SplunkPluginTest(PluginTestCase):
         assert self.plugin.conf_key == "splunk"
 
     def test_entry_point(self):
-        self.assertNewPluginInstalled("splunk", self.plugin)
+        self.assertPluginInstalled("splunk", self.plugin)
 
     @responses.activate
     def test_simple_notification(self):
diff --git a/tests/sentry_plugins/test_anonymizeip.py b/tests/sentry_plugins/test_anonymizeip.py
index 2d9f8e38cd..57d8984a0e 100644
--- a/tests/sentry_plugins/test_anonymizeip.py
+++ b/tests/sentry_plugins/test_anonymizeip.py
@@ -1,6 +1,6 @@
 from __future__ import absolute_import
 
-from new_sentry_plugins.anonymizeip import anonymize_ip
+from sentry_plugins.anonymizeip import anonymize_ip
 
 
 def test_ipv6():
diff --git a/tests/sentry_plugins/test_client.py b/tests/sentry_plugins/test_client.py
index a17ee294cf..b5ac7a25ed 100644
--- a/tests/sentry_plugins/test_client.py
+++ b/tests/sentry_plugins/test_client.py
@@ -6,13 +6,13 @@ import responses
 from mock import Mock
 from sentry.testutils import TestCase
 
-from new_sentry_plugins.exceptions import (
+from sentry_plugins.exceptions import (
     ApiError,
     ApiHostError,
     ApiUnauthorized,
     UnsupportedResponseType,
 )
-from new_sentry_plugins.client import ApiClient, AuthApiClient
+from sentry_plugins.client import ApiClient, AuthApiClient
 
 
 class ApiClientTest(TestCase):
diff --git a/tests/sentry_plugins/victorops/test_plugin.py b/tests/sentry_plugins/victorops/test_plugin.py
index bf9c101cc7..322cb79702 100644
--- a/tests/sentry_plugins/victorops/test_plugin.py
+++ b/tests/sentry_plugins/victorops/test_plugin.py
@@ -8,7 +8,7 @@ from sentry.plugins.base import Notification
 from sentry.testutils import PluginTestCase
 from sentry.utils import json
 
-from new_sentry_plugins.victorops.plugin import VictorOpsPlugin
+from sentry_plugins.victorops.plugin import VictorOpsPlugin
 
 SUCCESS = """{
   "result":"success",
@@ -37,7 +37,7 @@ class VictorOpsPluginTest(PluginTestCase):
         assert self.plugin.conf_key == "victorops"
 
     def test_entry_point(self):
-        self.assertNewPluginInstalled("victorops", self.plugin)
+        self.assertPluginInstalled("victorops", self.plugin)
 
     def test_is_configured(self):
         assert self.plugin.is_configured(self.project) is False
diff --git a/tests/sentry_plugins/vsts/test_plugin.py b/tests/sentry_plugins/vsts/test_plugin.py
index dc66c68091..c3bb3a7c03 100644
--- a/tests/sentry_plugins/vsts/test_plugin.py
+++ b/tests/sentry_plugins/vsts/test_plugin.py
@@ -11,7 +11,7 @@ from sentry.testutils import PluginTestCase
 from sentry.utils import json
 from social_auth.models import UserSocialAuth
 
-from new_sentry_plugins.vsts.plugin import VstsPlugin
+from sentry_plugins.vsts.plugin import VstsPlugin
 
 WORK_ITEM_RESPONSE = """{
   "id": 309,
@@ -72,7 +72,7 @@ class VstsPluginTest(PluginTestCase):
         assert self.plugin.conf_key == "vsts"
 
     def test_entry_point(self):
-        self.assertNewPluginInstalled("vsts", self.plugin)
+        self.assertPluginInstalled("vsts", self.plugin)
 
     def test_get_issue_label(self):
         group = self.create_group(message="Hello world", culprit="foo.bar")
diff --git a/tests/sentry_plugins/vsts/test_provider.py b/tests/sentry_plugins/vsts/test_provider.py
index ae4209fb4d..bbe6e0a59b 100644
--- a/tests/sentry_plugins/vsts/test_provider.py
+++ b/tests/sentry_plugins/vsts/test_provider.py
@@ -7,8 +7,8 @@ from social_auth.models import UserSocialAuth
 from sentry.testutils import PluginTestCase
 from sentry.models import Repository
 
-from new_sentry_plugins.vsts.repository_provider import VisualStudioRepositoryProvider
-from new_sentry_plugins.vsts.testutils import COMPARE_COMMITS_EXAMPLE, FILE_CHANGES_EXAMPLE
+from sentry_plugins.vsts.repository_provider import VisualStudioRepositoryProvider
+from sentry_plugins.vsts.testutils import COMPARE_COMMITS_EXAMPLE, FILE_CHANGES_EXAMPLE
 
 
 class VisualStudioRepositoryProviderPluginTest(PluginTestCase):
