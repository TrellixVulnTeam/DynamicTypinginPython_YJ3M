commit 34a71b75ebf9cce86fc476a71fa86410dad46009
Author: David Cramer <dcramer@gmail.com>
Date:   Fri Jan 2 11:06:34 2015 -0800

    Add Plugin2.get_notifiers

diff --git a/src/sentry/plugins/base/notifier.py b/src/sentry/plugins/base/notifier.py
new file mode 100644
index 0000000000..f3cc749659
--- /dev/null
+++ b/src/sentry/plugins/base/notifier.py
@@ -0,0 +1,42 @@
+"""
+sentry.plugins.base.notifier
+~~~~~~~~~~~~~~~~~~~~~~~~~~~~
+
+:copyright: (c) 2010-2013 by the Sentry Team, see AUTHORS for more details.
+:license: BSD, see LICENSE for more details.
+"""
+
+from __future__ import absolute_import, print_function
+
+__all__ = ('Notifier',)
+
+from sentry.app import ratelimiter
+
+
+class Notifier(object):
+    def notify(self, notification, **kwargs):
+        """
+        Send a notification.
+
+        See :class:`sentry.plugins.Notification` for notification properties.
+
+        >>> def notify(self, notification):
+        >>>     self.logger.info('Received notification for event %r', notification.event)
+        """
+
+    def should_notify(self, group, event):
+        if group.is_muted():
+            return False
+
+        project = group.project
+
+        rate_limited = ratelimiter.is_limited(
+            project=project,
+            key=self.get_conf_key(),
+            limit=15,
+        )
+
+        if rate_limited:
+            self.logger.info('Notification for project %s dropped due to rate limiting', project.id)
+
+        return not rate_limited
diff --git a/src/sentry/plugins/base/structs.py b/src/sentry/plugins/base/structs.py
index 3d0e3ac874..8241230f3b 100644
--- a/src/sentry/plugins/base/structs.py
+++ b/src/sentry/plugins/base/structs.py
@@ -8,7 +8,7 @@ sentry.plugins.base.structs
 
 from __future__ import absolute_import, print_function
 
-__all__ = ('Annotation',)
+__all__ = ('Annotation', 'Notification')
 
 
 class Annotation(object):
@@ -18,3 +18,11 @@ class Annotation(object):
         self.label = label
         self.url = url
         self.description = description
+
+
+class Notification(object):
+    __slots__ = ['event', 'rule']
+
+    def __init__(self, event, rule=None):
+        self.event = event
+        self.rule = rule
diff --git a/src/sentry/plugins/base/v2.py b/src/sentry/plugins/base/v2.py
index 3141b64755..b646e370c4 100644
--- a/src/sentry/plugins/base/v2.py
+++ b/src/sentry/plugins/base/v2.py
@@ -9,6 +9,8 @@ from __future__ import absolute_import, print_function
 
 __all__ = ('Plugin2',)
 
+import logging
+
 from django.http import HttpResponseRedirect
 from threading import local
 
@@ -24,6 +26,8 @@ class PluginMount(type):
             new_cls.title = new_cls.__name__
         if not new_cls.slug:
             new_cls.slug = new_cls.title.replace(' ', '-').lower()
+        if not hasattr(new_cls, 'logger'):
+            new_cls.logger = logging.getLogger('sentry.plugins.%s' % (new_cls.slug,))
         return new_cls
 
 
@@ -250,6 +254,17 @@ class IPlugin2(local):
         """
         return []
 
+    def get_notifiers(self, **kwargs):
+        """
+        Return a list of notifiers to append to the registry.
+
+        Notifiers must extend :class:`sentry.plugins.Notifier`.
+
+        >>> def get_notifiers(self, **kwargs):
+        >>>     return [MyNotifier]
+        """
+        return []
+
 
 class Plugin2(IPlugin2):
     """
diff --git a/src/sentry/plugins/bases/notify.py b/src/sentry/plugins/bases/notify.py
index 460b29136b..b7cf1a25d8 100644
--- a/src/sentry/plugins/bases/notify.py
+++ b/src/sentry/plugins/bases/notify.py
@@ -17,12 +17,6 @@ from sentry.plugins import Plugin
 from sentry.models import UserOption, AccessGroup
 
 
-class Notification(object):
-    def __init__(self, event, rule=None):
-        self.event = event
-        self.rule = rule
-
-
 class NotificationConfigurationForm(forms.Form):
     pass
 
diff --git a/src/sentry/rules/actions/notify_event.py b/src/sentry/rules/actions/notify_event.py
index 2b725d0485..047d92889b 100644
--- a/src/sentry/rules/actions/notify_event.py
+++ b/src/sentry/rules/actions/notify_event.py
@@ -8,8 +8,7 @@ sentry.rules.actions.notify_event
 
 from __future__ import absolute_import
 
-from sentry.plugins import plugins
-from sentry.plugins.bases.notify import Notification
+from sentry.plugins import Notification, plugins
 from sentry.rules.actions.base import EventAction
 from sentry.utils.safe import safe_execute
 
@@ -21,10 +20,15 @@ class NotifyEventAction(EventAction):
         from sentry.plugins.bases.notify import NotificationPlugin
 
         results = []
-        for plugin in plugins.for_project(self.project):
+        for plugin in plugins.for_project(self.project, version=1):
             if not isinstance(plugin, NotificationPlugin):
                 continue
             results.append(plugin)
+
+        for plugin in plugins.for_project(self.project, version=2):
+            for notifier in (safe_execute(plugin.get_notifiers) or ()):
+                results.append(notifier)
+
         return results
 
     def after(self, event, state):
diff --git a/src/sentry/rules/actions/notify_event_service.py b/src/sentry/rules/actions/notify_event_service.py
index 1599a14d18..0b7b236738 100644
--- a/src/sentry/rules/actions/notify_event_service.py
+++ b/src/sentry/rules/actions/notify_event_service.py
@@ -10,9 +10,9 @@ from __future__ import absolute_import
 
 from django import forms
 
-from sentry.plugins import plugins
-from sentry.plugins.bases.notify import Notification
+from sentry.plugins import Notification, plugins
 from sentry.rules.actions.base import EventAction
+from sentry.utils import safe_execute
 
 
 class NotifyEventServiceForm(forms.Form):
@@ -59,10 +59,15 @@ class NotifyEventServiceAction(EventAction):
         from sentry.plugins.bases.notify import NotificationPlugin
 
         results = []
-        for plugin in plugins.for_project(self.project):
+        for plugin in plugins.for_project(self.project, version=1):
             if not isinstance(plugin, NotificationPlugin):
                 continue
             results.append(plugin)
+
+        for plugin in plugins.for_project(self.project, version=2):
+            for notifier in (safe_execute(plugin.get_notifiers) or ()):
+                results.append(notifier)
+
         return results
 
     def get_form_instance(self):
diff --git a/tests/sentry/plugins/mail/tests.py b/tests/sentry/plugins/mail/tests.py
index c44f7afdb7..fdbd30daf4 100644
--- a/tests/sentry/plugins/mail/tests.py
+++ b/tests/sentry/plugins/mail/tests.py
@@ -11,7 +11,7 @@ from mock import Mock
 
 from sentry.interfaces.stacktrace import Stacktrace
 from sentry.models import AccessGroup, Alert, Event, Group, Rule
-from sentry.plugins.bases.notify import Notification
+from sentry.plugins import Notification
 from sentry.plugins.sentry_mail.models import MailPlugin
 from sentry.testutils import TestCase
 
