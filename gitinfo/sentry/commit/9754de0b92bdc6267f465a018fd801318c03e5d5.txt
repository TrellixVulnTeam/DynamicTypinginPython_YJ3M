commit 9754de0b92bdc6267f465a018fd801318c03e5d5
Author: Megan Heskett <meg.heskett@gmail.com>
Date:   Fri Jun 21 11:30:04 2019 -0700

    ref(date-picker): Add disabled feature to date picker (#13680)

diff --git a/src/sentry/conf/server.py b/src/sentry/conf/server.py
index 617ecd61a6..cdfaca2463 100644
--- a/src/sentry/conf/server.py
+++ b/src/sentry/conf/server.py
@@ -854,8 +854,6 @@ SENTRY_FEATURES = {
     # Enable organizations to create and utilize Sentry Apps.
     'organizations:sentry-apps': False,
 
-    # Enable filters for extended data retention.
-    'organizations:extended-data-retention': True,
     # Enable the relay functionality, for use with sentry semaphore. See
     # https://github.com/getsentry/semaphore.
     'organizations:relay': False,
diff --git a/src/sentry/features/__init__.py b/src/sentry/features/__init__.py
index 1b546d729b..36e887274a 100644
--- a/src/sentry/features/__init__.py
+++ b/src/sentry/features/__init__.py
@@ -84,7 +84,6 @@ default_manager.add('organizations:sso-saml2', OrganizationFeature)  # NOQA
 default_manager.add('organizations:grouping-info', OrganizationFeature)  # NOQA
 default_manager.add('organizations:tweak-grouping-config', OrganizationFeature)  # NOQA
 default_manager.add('organizations:set-grouping-config', OrganizationFeature)  # NOQA
-default_manager.add('organizations:extended-data-retention', OrganizationFeature)  # NOQA
 
 # Project scoped features
 default_manager.add('projects:custom-inbound-filters', ProjectFeature)  # NOQA
diff --git a/src/sentry/static/sentry/app/components/organizations/timeRangeSelector/dateRange/index.jsx b/src/sentry/static/sentry/app/components/organizations/timeRangeSelector/dateRange/index.jsx
index 1118ef38a1..f34e367e9e 100644
--- a/src/sentry/static/sentry/app/components/organizations/timeRangeSelector/dateRange/index.jsx
+++ b/src/sentry/static/sentry/app/components/organizations/timeRangeSelector/dateRange/index.jsx
@@ -16,6 +16,7 @@ import {
   isValidTime,
   setDateToTime,
 } from 'app/utils/dates';
+import {MAX_PICKABLE_DAYS} from 'app/constants';
 import {t} from 'app/locale';
 import Checkbox from 'app/components/checkbox';
 import SentryTypes from 'app/sentryTypes';
@@ -24,9 +25,6 @@ import getRouteStringFromRoutes from 'app/utils/getRouteStringFromRoutes';
 import space from 'app/styles/space';
 import theme from 'app/utils/theme';
 
-// This is currently the max number of days back you can search
-const MAX_PICKABLE_DAYS = 90;
-
 class DateRange extends React.Component {
   static propTypes = {
     /**
diff --git a/src/sentry/static/sentry/app/components/organizations/timeRangeSelector/dateRange/relativeSelector.jsx b/src/sentry/static/sentry/app/components/organizations/timeRangeSelector/dateRange/relativeSelector.jsx
index 6b088ef40e..f9d02f8f98 100644
--- a/src/sentry/static/sentry/app/components/organizations/timeRangeSelector/dateRange/relativeSelector.jsx
+++ b/src/sentry/static/sentry/app/components/organizations/timeRangeSelector/dateRange/relativeSelector.jsx
@@ -4,18 +4,20 @@ import React from 'react';
 import {DEFAULT_RELATIVE_PERIODS} from 'app/constants';
 import SelectorItem from './selectorItem';
 
-const RelativeSelector = ({onClick, selected}) => {
+const RelativeSelector = ({onClick, selected, relativePeriods}) => {
   return (
     <React.Fragment>
-      {Object.entries(DEFAULT_RELATIVE_PERIODS).map(([value, label]) => (
-        <SelectorItem
-          key={value}
-          onClick={onClick}
-          value={value}
-          label={label}
-          selected={selected === value}
-        />
-      ))}
+      {Object.entries(relativePeriods || DEFAULT_RELATIVE_PERIODS).map(
+        ([value, label]) => (
+          <SelectorItem
+            key={value}
+            onClick={onClick}
+            value={value}
+            label={label}
+            selected={selected === value}
+          />
+        )
+      )}
     </React.Fragment>
   );
 };
@@ -23,6 +25,7 @@ const RelativeSelector = ({onClick, selected}) => {
 RelativeSelector.propTypes = {
   onClick: PropTypes.func,
   selected: PropTypes.string,
+  relativePeriods: PropTypes.object,
 };
 
 export default RelativeSelector;
diff --git a/src/sentry/static/sentry/app/components/organizations/timeRangeSelector/dateRange/selectorItem.jsx b/src/sentry/static/sentry/app/components/organizations/timeRangeSelector/dateRange/selectorItem.jsx
index 47ec266821..731b8660fb 100644
--- a/src/sentry/static/sentry/app/components/organizations/timeRangeSelector/dateRange/selectorItem.jsx
+++ b/src/sentry/static/sentry/app/components/organizations/timeRangeSelector/dateRange/selectorItem.jsx
@@ -33,7 +33,7 @@ const StyledSelectorItem = styled(SelectorItem)`
   padding: ${space(1)};
   align-items: center;
   flex: 1;
-  background-color: ${p => (p.selected ? p.theme.offWhite : 'transpatent')};
+  background-color: ${p => (p.selected ? p.theme.offWhite : 'transparent')};
   font-weight: ${p => (p.selected ? 'bold' : 'normal')};
   border-bottom: 1px solid ${p => (p.last ? 'transparent' : p.theme.borderLight)};
 
diff --git a/src/sentry/static/sentry/app/components/organizations/timeRangeSelector/dateRange/selectorItems.jsx b/src/sentry/static/sentry/app/components/organizations/timeRangeSelector/dateRange/selectorItems.jsx
new file mode 100644
index 0000000000..44c60ca721
--- /dev/null
+++ b/src/sentry/static/sentry/app/components/organizations/timeRangeSelector/dateRange/selectorItems.jsx
@@ -0,0 +1,41 @@
+import PropTypes from 'prop-types';
+import React from 'react';
+
+import {t} from 'app/locale';
+import RelativeSelector from 'app/components/organizations/timeRangeSelector/dateRange/relativeSelector';
+import SelectorItem from 'app/components/organizations/timeRangeSelector/dateRange/selectorItem';
+
+const SelectorItems = ({
+  shouldShowRelative,
+  shouldShowAbsolute,
+  handleSelectRelative,
+  handleAbsoluteClick,
+  relativeSelected,
+  isAbsoluteSelected,
+}) => (
+  <React.Fragment>
+    {shouldShowRelative && (
+      <RelativeSelector onClick={handleSelectRelative} selected={relativeSelected} />
+    )}
+    {shouldShowAbsolute && (
+      <SelectorItem
+        onClick={handleAbsoluteClick}
+        value="absolute"
+        label={t('Absolute date')}
+        selected={isAbsoluteSelected}
+        last={true}
+      />
+    )}
+  </React.Fragment>
+);
+
+SelectorItems.propTypes = {
+  shouldShowRelative: PropTypes.bool,
+  shouldShowAbsolute: PropTypes.bool,
+  handleSelectRelative: PropTypes.func,
+  handleAbsoluteClick: PropTypes.func,
+  relativeSelected: PropTypes.string,
+  isAbsoluteSelected: PropTypes.bool,
+};
+
+export default SelectorItems;
diff --git a/src/sentry/static/sentry/app/components/organizations/timeRangeSelector/index.jsx b/src/sentry/static/sentry/app/components/organizations/timeRangeSelector/index.jsx
index fc55dd42ad..956464b503 100644
--- a/src/sentry/static/sentry/app/components/organizations/timeRangeSelector/index.jsx
+++ b/src/sentry/static/sentry/app/components/organizations/timeRangeSelector/index.jsx
@@ -15,15 +15,14 @@ import {
   parsePeriodToHours,
 } from 'app/utils/dates';
 import {getRelativeSummary} from 'app/components/organizations/timeRangeSelector/utils';
-import {t} from 'app/locale';
 import DateRange from 'app/components/organizations/timeRangeSelector/dateRange';
 import DateSummary from 'app/components/organizations/timeRangeSelector/dateSummary';
 import DropdownMenu from 'app/components/dropdownMenu';
 import HeaderItem from 'app/components/organizations/headerItem';
+import HookOrDefault from 'app/components/hookOrDefault';
 import InlineSvg from 'app/components/inlineSvg';
 import MultipleSelectorSubmitRow from 'app/components/organizations/multipleSelectorSubmitRow';
-import RelativeSelector from 'app/components/organizations/timeRangeSelector/dateRange/relativeSelector';
-import SelectorItem from 'app/components/organizations/timeRangeSelector/dateRange/selectorItem';
+import SelectorItems from 'app/components/organizations/timeRangeSelector/dateRange/selectorItems';
 import SentryTypes from 'app/sentryTypes';
 import space from 'app/styles/space';
 import getDynamicText from 'app/utils/getDynamicText';
@@ -52,6 +51,16 @@ const getInternalDate = (date, utc) => {
   }
 };
 
+const DateRangeHook = HookOrDefault({
+  hookName: 'component:header-date-range',
+  defaultComponent: DateRange,
+});
+
+const SelectorItemsHook = HookOrDefault({
+  hookName: 'component:header-selector-items',
+  defaultComponent: SelectorItems,
+});
+
 class TimeRangeSelector extends React.PureComponent {
   static propTypes = {
     /**
@@ -299,6 +308,8 @@ class TimeRangeSelector extends React.PureComponent {
       getRelativeSummary(relative || DEFAULT_STATS_PERIOD)
     );
 
+    const relativeSelected = isAbsoluteSelected ? null : relative || DEFAULT_STATS_PERIOD;
+
     return (
       <DropdownMenu
         isOpen={this.state.isOpen}
@@ -329,32 +340,29 @@ class TimeRangeSelector extends React.PureComponent {
                 isAbsoluteSelected={isAbsoluteSelected}
               >
                 <SelectorList isAbsoluteSelected={isAbsoluteSelected}>
-                  {shouldShowRelative && (
-                    <RelativeSelector
-                      onClick={this.handleSelectRelative}
-                      selected={relative || DEFAULT_STATS_PERIOD}
-                    />
-                  )}
-                  {shouldShowAbsolute && (
-                    <SelectorItem
-                      onClick={this.handleAbsoluteClick}
-                      value="absolute"
-                      label={t('Absolute Date')}
-                      selected={isAbsoluteSelected}
-                      last={true}
-                    />
-                  )}
+                  <SelectorItemsHook
+                    {...{
+                      isAbsoluteSelected,
+                      relativeSelected,
+                      shouldShowRelative,
+                      shouldShowAbsolute,
+                    }}
+                    handleAbsoluteClick={this.handleAbsoluteClick}
+                    handleSelectRelative={this.handleSelectRelative}
+                  />
                 </SelectorList>
                 {isAbsoluteSelected && (
                   <div>
-                    <DateRange
+                    <DateRangeHook
+                      {...{
+                        start,
+                        end,
+                        organization,
+                      }}
                       showTimePicker
                       utc={this.state.utc}
-                      start={start}
-                      end={end}
                       onChange={this.handleSelectDateRange}
                       onChangeUtc={this.handleUseUtc}
-                      organization={organization}
                     />
                     {this.state.hasChanges && (
                       <SubmitRow>
diff --git a/src/sentry/static/sentry/app/constants/index.jsx b/src/sentry/static/sentry/app/constants/index.jsx
index 591a17a68a..79390dab96 100644
--- a/src/sentry/static/sentry/app/constants/index.jsx
+++ b/src/sentry/static/sentry/app/constants/index.jsx
@@ -126,6 +126,8 @@ export const AVATAR_URL_MAP = {
 
 export const MENU_CLOSE_DELAY = 200;
 
+export const MAX_PICKABLE_DAYS = 90;
+
 export const DEFAULT_STATS_PERIOD = '14d';
 
 export const DEFAULT_USE_UTC = true;
diff --git a/src/sentry/static/sentry/app/stores/hookStore.jsx b/src/sentry/static/sentry/app/stores/hookStore.jsx
index 4151241901..dd9a2a2765 100644
--- a/src/sentry/static/sentry/app/stores/hookStore.jsx
+++ b/src/sentry/static/sentry/app/stores/hookStore.jsx
@@ -24,6 +24,8 @@ const validHookNames = new Set([
   // Specific component customizations
   'component:org-auth-view',
   'component:org-members-view',
+  'component:header-date-range',
+  'component:header-selector-items',
 
   // Additional settings
   'settings:organization-navigation',
@@ -50,9 +52,9 @@ const validHookNames = new Set([
   // feature-disabled:<feature-flag> hooks should return components that will
   // be rendered in place for Feature components when the feature is not
   // enabled.
+  'feature-disabled:custom-inbound-filters',
   'feature-disabled:discard-groups',
   'feature-disabled:data-forwarding',
-  'feature-disabled:custom-inbound-filters',
   'feature-disabled:rate-limits',
   'feature-disabled:sso-basic',
   'feature-disabled:sso-rippling',
diff --git a/tests/js/spec/components/organizations/timeRangeSelector/index.spec.jsx b/tests/js/spec/components/organizations/timeRangeSelector/index.spec.jsx
index ac25e54818..c461c35028 100644
--- a/tests/js/spec/components/organizations/timeRangeSelector/index.spec.jsx
+++ b/tests/js/spec/components/organizations/timeRangeSelector/index.spec.jsx
@@ -268,4 +268,17 @@ describe('TimeRangeSelector', function() {
       utc: false,
     });
   });
+
+  it('deselects default filter when absolute date selected', async function() {
+    wrapper = createWrapper({
+      relative: '14d',
+      utc: false,
+    });
+
+    await wrapper.find('HeaderItem').simulate('click');
+    await wrapper.find('SelectorItem[value="absolute"]').simulate('click');
+
+    expect(wrapper.find('SelectorItem[value="absolute"]').prop('selected')).toBe(true);
+    expect(wrapper.find('SelectorItem[value="14d"]').prop('selected')).toBe(false);
+  });
 });
diff --git a/tests/sentry/api/serializers/test_organization.py b/tests/sentry/api/serializers/test_organization.py
index 6a7ce27824..54324b0098 100644
--- a/tests/sentry/api/serializers/test_organization.py
+++ b/tests/sentry/api/serializers/test_organization.py
@@ -26,5 +26,4 @@ class OrganizationSerializerTest(TestCase):
             'sso-saml2',
             'sso-basic',
             'sentry10',
-            'extended-data-retention',
         ])
