commit d348dc492a36a2eccabfbcacb0e7d6d7f0a0adbf
Author: David Cramer <dcramer@gmail.com>
Date:   Thu Jun 28 15:15:42 2018 -0700

    feat: Implement basics of pre-commit
    
    - Add pre-commit framework
    - Implement a number of reasonable defaults and exclusions
    - Move CI generated artifacts into .artifacts/
    - Run pre-commit over entirety of codebase (and apply various fixes)
    - Remove dead runtests.js

diff --git a/.artifacts/README b/.artifacts/README
new file mode 100644
index 0000000000..4b9edbfeed
--- /dev/null
+++ b/.artifacts/README
@@ -0,0 +1 @@
+This folder captures artifacts generated from .pre-commit, such as lint violations. It is primarily used for continuous integration services.
diff --git a/.coveragerc b/.coveragerc
deleted file mode 100644
index c09f1b21d2..0000000000
--- a/.coveragerc
+++ /dev/null
@@ -1,2 +0,0 @@
-[report]
-omit=src/sentry/south_migrations/*
diff --git a/.eslintignore b/.eslintignore
index a9302d11ca..165b642fcd 100644
--- a/.eslintignore
+++ b/.eslintignore
@@ -4,3 +4,4 @@
 **/tests/sentry/lang/javascript/example-project/**/*
 /examples/
 /scripts/
+/src/debug_toolbar/static/debug_toolbar/js/toolbar.js
diff --git a/.gitignore b/.gitignore
index 87dc41e8ee..6ae886bdd7 100644
--- a/.gitignore
+++ b/.gitignore
@@ -13,6 +13,7 @@ test.conf
 pip-log.txt
 celerybeat-schedule
 sentry-package.json
+/.artifacts
 /coverage/
 /cover
 /build
diff --git a/.pre-commit-config.yaml b/.pre-commit-config.yaml
new file mode 100644
index 0000000000..d689398c04
--- /dev/null
+++ b/.pre-commit-config.yaml
@@ -0,0 +1,41 @@
+exclude: >
+    (?x)(
+        LICENSE$|
+        \.snap$|
+        \.map$|
+        \.map\.js$|
+        ^tests/sentry/lang/.*/fixtures/|
+        ^tests/fixtures/|
+        ^src/sentry/static/sentry/vendor/|
+        ^tests/sentry/lang/javascript/example-project/|
+        ^src/.*/locale/|
+        ^src/sentry/data/
+    )
+repos:
+# -   repo: https://github.com/ambv/black
+#     rev: 18.6b2
+#     hooks:
+#     - id: black
+#       python_version: python3.6
+-   repo: git://github.com/pre-commit/pre-commit-hooks
+    rev: v1.3.0
+    hooks:
+    - id: check-case-conflict
+    - id: check-executables-have-shebangs
+    - id: check-merge-conflict
+    - id: check-symlinks
+    - id: end-of-file-fixer
+      exclude_types: [svg]
+    - id: trailing-whitespace
+      exclude_types: [svg]
+    - id: debug-statements
+    # - id: flake8
+    #   log_file: '.artifacts/flake8.pycodestyle.log'
+    - id: requirements-txt-fixer
+# -   repo: git://github.com/getsentry/pre-commit-hooks
+#     rev: f3237d2d65af81d435c49dee3593dc8f03d23c2d
+#     hooks:
+#     - id: prettier
+#     - id: eslint
+#       args: ['--format=checkstyle']
+#       log_file: '.artifacts/eslint.checkstyle.xml'
diff --git a/.storybook/storybook.less b/.storybook/storybook.less
index 9e1740bfb5..b44bce97a4 100644
--- a/.storybook/storybook.less
+++ b/.storybook/storybook.less
@@ -1,6 +1,19 @@
 html > body {
   background-color: rgba(0, 0, 0, 0.05);
-  background-image: repeating-linear-gradient(0deg, transparent, transparent 7px, rgba(0, 0, 0, 0.1) 1px, transparent 8px), repeating-linear-gradient(90deg, transparent, transparent 7px, rgba(0, 0, 0, 0.1) 1px, transparent 8px);
+  background-image: repeating-linear-gradient(
+      0deg,
+      transparent,
+      transparent 7px,
+      rgba(0, 0, 0, 0.1) 1px,
+      transparent 8px
+    ),
+    repeating-linear-gradient(
+      90deg,
+      transparent,
+      transparent 7px,
+      rgba(0, 0, 0, 0.1) 1px,
+      transparent 8px
+    );
   background-size: 8px 8px;
 }
 
@@ -9,7 +22,8 @@ html {
   font-size: 14px;
 }
 
-*, *:before, *:after {
+*,
+*:before,
+*:after {
   box-sizing: inherit;
 }
-
diff --git a/.travis.yml b/.travis.yml
index 914ca1fada..ad5238efc8 100644
--- a/.travis.yml
+++ b/.travis.yml
@@ -51,14 +51,13 @@ after_failure:
   - dmesg | tail -n 100
 
 after_script:
-  - zeus upload -t "text/xml+xunit" junit.xml
-    -t "text/xml+xunit" jest.junit.xml
-    -t "text/xml+coverage" coverage.xml
-    -t "text/xml+coverage" coverage/cobertura-coverage.xml
-    -t "text/html+pytest" pytest.html
-    -t "text/plain+pycodestyle" flake8.pycodestyle.log
-    -t "text/xml+checkstyle" eslint.checkstyle.xml
-    -t "application/webpack-stats+json" webpack-stats.json
+  - zeus upload -t "text/xml+xunit" .artifacts/*.junit.xml
+    -t "text/xml+coverage" .artifacts/*.coverage.xml
+    -t "text/xml+coverage" .artifacts/coverage/cobertura-coverage.xml
+    -t "text/html+pytest" .artifacts/*.pytest.html
+    -t "text/plain+pycodestyle" .artifacts/*.pycodestyle.log
+    -t "text/xml+checkstyle" .artifacts/*.checkstyle.xml
+    -t "application/webpack-stats+json" .artifacts/webpack-stats.json
 
 # each job in the matrix inherits `env/global` and uses everything above,
 # but custom `services`, `before_install`, `install`, and `before_script` directives
diff --git a/Makefile b/Makefile
index 7b4eef38bc..d74c5e7e07 100644
--- a/Makefile
+++ b/Makefile
@@ -41,6 +41,8 @@ clean:
 
 setup-git:
 	@echo "--> Installing git hooks"
+	pip install "pre-commit>=1.10.1,<1.11.0"
+	pre-commit install
 	git config branch.autosetuprebase always
 	cd .git/hooks && ln -sf ../../config/hooks/* ./
 	@echo ""
@@ -106,7 +108,7 @@ test-cli:
 
 test-js: node-version-check
 	@echo "--> Building static assets"
-	@$(WEBPACK) --profile --json > webpack-stats.json
+	@$(WEBPACK) --profile --json > .artifacts/webpack-stats.json
 	@echo "--> Running JavaScript tests"
 	@npm run test-ci
 	@echo ""
@@ -119,26 +121,26 @@ test-styleguide:
 
 test-python: build-platform-assets
 	@echo "--> Running Python tests"
-	py.test tests/integration tests/sentry --cov . --cov-report="xml:coverage.xml" --junit-xml="junit.xml" || exit 1
+	py.test tests/integration tests/sentry --cov . --cov-report="xml:.artifacts/python.coverage.xml" --junit-xml=".artifacts/python.junit.xml" || exit 1
 	@echo ""
 
 test-snuba:
 	@echo "--> Running snuba tests"
-	py.test tests/snuba -vv --cov . --cov-report="xml:coverage.xml" --junit-xml="junit.xml"
+	py.test tests/snuba -vv --cov . --cov-report="xml:.artifacts/snuba.coverage.xml" --junit-xml=".artifacts/snuba.junit.xml"
 	@echo ""
 
 test-acceptance: build-platform-assets node-version-check
 	@echo "--> Building static assets"
 	@$(WEBPACK) --display errors-only
 	@echo "--> Running acceptance tests"
-	py.test tests/acceptance --cov . --cov-report="xml:coverage.xml" --junit-xml="junit.xml" --html="pytest.html"
+	py.test tests/acceptance --cov . --cov-report="xml:.artifacts/acceptance.coverage.xml" --junit-xml=".artifacts/acceptance.junit.xml" --html=".artifacts/acceptance.pytest.html"
 	@echo ""
 
 lint: lint-python lint-js
 
 lint-python:
 	@echo "--> Linting python"
-	bash -eo pipefail -c "bin/lint --python --parseable | tee flake8.pycodestyle.log"
+	bash -eo pipefail -c "bin/lint --python --parseable | tee .artifacts/flake8.pycodestyle.log"
 	@echo ""
 
 lint-js:
diff --git a/doc-requirements.txt b/doc-requirements.txt
index 78ee71ac4b..8987578356 100644
--- a/doc-requirements.txt
+++ b/doc-requirements.txt
@@ -1,5 +1,5 @@
+docutils>=0.7
 Jinja2>=2.3
+markupsafe
 Pygments>=1.2
 Sphinx>=1.3
-docutils>=0.7
-markupsafe
diff --git a/docs/_themes/kr/static/small_flask.css b/docs/_themes/kr/static/small_flask.css
index 8d55e95fb4..a0af646ea6 100644
--- a/docs/_themes/kr/static/small_flask.css
+++ b/docs/_themes/kr/static/small_flask.css
@@ -87,4 +87,4 @@ div.body {
 
 .github {
     display: none;
-}
\ No newline at end of file
+}
diff --git a/docs/_themes/kr/theme.conf b/docs/_themes/kr/theme.conf
index 307a1f0d65..07698f6f6e 100644
--- a/docs/_themes/kr/theme.conf
+++ b/docs/_themes/kr/theme.conf
@@ -4,4 +4,4 @@ stylesheet = flasky.css
 pygments_style = flask_theme_support.FlaskyStyle
 
 [options]
-touch_icon = 
+touch_icon =
diff --git a/docs/cli/config/index.rst b/docs/cli/config/index.rst
index 5b4a8f2301..2f41073e8d 100644
--- a/docs/cli/config/index.rst
+++ b/docs/cli/config/index.rst
@@ -20,4 +20,3 @@ Subcommands
  discover <discover/index>
  generate-secret-key <generate-secret-key/index>
  delete <delete/index>
-
diff --git a/docs/cli/files/index.rst b/docs/cli/files/index.rst
index 98bddfb631..106544025f 100644
--- a/docs/cli/files/index.rst
+++ b/docs/cli/files/index.rst
@@ -16,4 +16,3 @@ Subcommands
 
  info <info/index>
  get <get/index>
-
diff --git a/docs/cli/index.rst b/docs/cli/index.rst
index a5c15b8235..4e8c5f8881 100644
--- a/docs/cli/index.rst
+++ b/docs/cli/index.rst
@@ -13,4 +13,4 @@ configuration via the ``SENTRY_CONF`` environment variable::
 For a list of commands, you can also use ``sentry help``, or ``sentry
 [command] --help`` for help on a specific command.
 
-.. include:: index.rst.inc
\ No newline at end of file
+.. include:: index.rst.inc
diff --git a/docs/cli/index.rst.inc b/docs/cli/index.rst.inc
index 33885f886b..490eb394cc 100644
--- a/docs/cli/index.rst.inc
+++ b/docs/cli/index.rst.inc
@@ -40,4 +40,3 @@ Subcommands
  shell <shell/index>
  config <config/index>
  tsdb <tsdb/index>
-
diff --git a/docs/cli/plugins/index.rst b/docs/cli/plugins/index.rst
index b84e7044a8..5d79bdd0f2 100644
--- a/docs/cli/plugins/index.rst
+++ b/docs/cli/plugins/index.rst
@@ -15,4 +15,3 @@ Subcommands
  :maxdepth: 1
 
  list <list/index>
-
diff --git a/docs/cli/queues/index.rst b/docs/cli/queues/index.rst
index 1c00365a8d..34d945f960 100644
--- a/docs/cli/queues/index.rst
+++ b/docs/cli/queues/index.rst
@@ -16,4 +16,3 @@ Subcommands
 
  purge <purge/index>
  list <list/index>
-
diff --git a/docs/cli/run/index.rst b/docs/cli/run/index.rst
index 563d4cca0d..9dbd3449e4 100644
--- a/docs/cli/run/index.rst
+++ b/docs/cli/run/index.rst
@@ -18,4 +18,3 @@ Subcommands
  web <web/index>
  cron <cron/index>
  smtp <smtp/index>
-
diff --git a/docs/cli/tsdb/index.rst b/docs/cli/tsdb/index.rst
index bf5f3d677a..97f6bf2d84 100644
--- a/docs/cli/tsdb/index.rst
+++ b/docs/cli/tsdb/index.rst
@@ -15,4 +15,3 @@ Subcommands
  :maxdepth: 1
 
  query <query/index>
-
diff --git a/docs/cli/tsdb/query/index.rst b/docs/cli/tsdb/query/index.rst
index 8bacc15894..04acb27a12 100644
--- a/docs/cli/tsdb/query/index.rst
+++ b/docs/cli/tsdb/query/index.rst
@@ -15,4 +15,3 @@ Subcommands
  :maxdepth: 1
 
  organizations <organizations/index>
-
diff --git a/docs/tsdb.rst b/docs/tsdb.rst
index 62e60cb9d6..bc0d0da0e8 100644
--- a/docs/tsdb.rst
+++ b/docs/tsdb.rst
@@ -33,4 +33,3 @@ different cluster, provide the ``cluster`` option, as such:
     SENTRY_TSDB_OPTIONS = {
         'cluster': 'tsdb',
     }
-
diff --git a/package.json b/package.json
index 05541fde2b..1eeba502cf 100644
--- a/package.json
+++ b/package.json
@@ -115,6 +115,7 @@
       "lcov",
       "cobertura"
     ],
+    "coverageDirectory": ".artifacts/coverage/",
     "snapshotSerializers": [
       "enzyme-to-json/serializer"
     ],
@@ -142,6 +143,9 @@
       "<rootDir>/node_modules/reflux"
     ]
   },
+  "jest-junit": {
+    "output": ".artifacts/jest.junit.xml"
+  },
   "devDependencies": {
     "@percy-io/percy-storybook": "^1.3.3",
     "@storybook/addon-actions": "^3.2.17",
diff --git a/requirements-base.txt b/requirements-base.txt
index 878bce2631..a0f54b3407 100644
--- a/requirements-base.txt
+++ b/requirements-base.txt
@@ -1,16 +1,16 @@
 BeautifulSoup>=3.2.1
-botocore<1.5.71
 boto3>=1.4.1,<1.4.6
+botocore<1.5.71
 celery>=3.1.8,<3.1.19
 click>=5.0,<7.0
 # 'cryptography>=1.3,<1.4
 cssutils>=0.9.9,<0.10.0
-Django>=1.6.11,<1.7
 django-crispy-forms>=1.4.0,<1.5.0
 django-jsonfield>=0.9.13,<0.9.14
 django-picklefield>=0.3.0,<0.4.0
 django-sudo>=2.1.0,<3.0.0
 django-templatetag-sugar>=0.1.0
+Django>=1.6.11,<1.7
 djangorestframework>=2.4.8,<2.5.0
 email-reply-parser>=0.2.0,<0.3.0
 enum34>=1.1.6,<1.2.0
@@ -20,13 +20,16 @@ futures>=3.2.0,<4.0.0
 # broken on python3
 hiredis>=0.1.0,<0.2.0
 honcho>=1.0.0,<1.1.0
-kombu==3.0.35
 ipaddress>=1.0.16,<1.1.0
-loremipsum>=1.0.5,<1.1.0
 jsonschema==2.6.0
+jsonschema==2.6.0
+kombu==3.0.35
+loremipsum>=1.0.5,<1.1.0
 lxml>=3.4.1
-mock==2.0.0
+# for vsts repo
+mistune>0.7,<0.9
 mmh3>=2.3.1,<2.4
+mock==2.0.0
 oauth2>=1.5.167
 parsimonious==0.8.0
 percy>=1.1.2
@@ -35,37 +38,34 @@ Pillow>=3.2.0,<=4.2.1
 progressbar2>=3.10,<3.11
 psycopg2>=2.6.0,<2.8.0
 PyJWT>=1.5.0,<1.6.0
-pytest>=3.5.0,<3.6.0
 pytest-django>=2.9.1,<2.10.0
 pytest-html>=1.9.0,<1.10.0
+pytest>=3.5.0,<3.6.0
 python-dateutil>=2.0.0,<3.0.0
 python-memcached>=1.53,<2.0.0
 python-openid>=2.2
+python-u2flib-server>=4.0.1,<4.1.0
 PyYAML>=3.11,<3.12
+qrcode>=5.2.2,<6.0.0
 querystring_parser>=1.2.3,<2.0.0
 raven>=6.0.0,<=6.4.0
+rb>=1.7.0,<2.0.0
+redis-py-cluster>=1.3.4,<1.4.0
 redis>=2.10.3,<2.10.6
 requests[security]>=2.18.4,<2.19.0
 selenium==3.11.0
 semaphore>=0.1.0,<0.2.0
+setproctitle>=1.1.7,<1.2.0
 simplejson>=3.2.0,<3.9.0
 six>=1.10.0,<1.11.0
-setproctitle>=1.1.7,<1.2.0
+sqlparse>=0.1.16,<0.2.0
 statsd>=3.1.0,<3.2.0
 strict-rfc3339>=0.7
 structlog==16.1.0
-sqlparse>=0.1.16,<0.2.0
 symbolic>=5.0.0,<6.0.0
 toronado>=0.0.11,<0.1.0
 ua-parser>=0.6.1,<0.8.0
-urllib3>=1.22,<1.23
-uwsgi>2.0.0,<2.1.0
-rb>=1.7.0,<2.0.0
-qrcode>=5.2.2,<6.0.0
-python-u2flib-server>=4.0.1,<4.1.0
-redis-py-cluster>=1.3.4,<1.4.0
-jsonschema==2.6.0
 # for bitbucket client
 unidiff>=0.5.4
-# for vsts repo
-mistune>0.7,<0.9
+urllib3>=1.22,<1.23
+uwsgi>2.0.0,<2.1.0
diff --git a/requirements-dev.txt b/requirements-dev.txt
index baf0cb545f..29cc454004 100644
--- a/requirements-dev.txt
+++ b/requirements-dev.txt
@@ -1,5 +1,5 @@
 autopep8
 Babel
 flake8>=2.6,<2.7
-pycodestyle>=2.0,<2.1
 isort>=4.2.2,<4.3.0
+pycodestyle>=2.0,<2.1
diff --git a/runtests.js b/runtests.js
deleted file mode 100644
index c1561dba2d..0000000000
--- a/runtests.js
+++ /dev/null
@@ -1,64 +0,0 @@
-/*global phantom:true console:true console_reporter:true */
-
-// Runs a Jasmine Suite from an html page
-// @page is a PhantomJs page object
-// @exit_func is the function to call in order to exit the script
-
-(function(phantom, WebPage){
-  "use strict";
-
-  var PhantomJasmineRunner = function(page, exit_func){
-    this.page = page;
-    this.exit_func = exit_func || phantom.exit;
-    this.tries = 0;
-    this.max_tries = 10;
-
-    this.get_status = function(){
-      return this.page.evaluate(function(){
-        return console_reporter.status;
-      });
-    };
-
-    this.terminate = function(){
-      var status = this.get_status();
-      if (status === 'success') {
-        this.exit_func(0);
-      } else if (status === 'fail') {
-        this.exit_func(1);
-      } else {
-        this.exit_func(2);
-      }
-    };
-  };
-
-  // Script Begin
-  if (phantom.args.length === 0) {
-    console.log("Need a url as the argument");
-    phantom.exit(1);
-  }
-
-  var page = new WebPage();
-  var runner = new PhantomJasmineRunner(page);
-  var address = phantom.args[0];
-
-  // Don't supress console output
-  page.onConsoleMessage = function(msg){
-    console.log(msg);
-
-    // Terminate when the reporter singals that testing is over.
-    // We cannot use a callback function for this (because page.evaluate is sandboxed),
-    // so we have to *observe* the website.
-    if (msg == "ConsoleReporter finished") {
-      runner.terminate();
-    }
-  };
-
-  page.open(address, function(status){
-    if (status != "success") {
-      console.log("can't load the address!");
-      phantom.exit(1);
-    }
-    // Now we wait until onConsoleMessage reads the termination signal from the log.
-  });
-
-}(phantom, WebPage));
\ No newline at end of file
diff --git a/setup.cfg b/setup.cfg
index 6f7c41192c..537b974bf0 100644
--- a/setup.cfg
+++ b/setup.cfg
@@ -24,3 +24,11 @@ max-line-length = 100
 ignore = W690,E701,E70,E711,E721
 aggressive = 1
 exclude = */south_migrations/*
+
+[coverage:run]
+omit =
+    src/sentry/south_migrations/*
+    src/sentry/migrations/*
+source =
+    src
+    tests
diff --git a/src/debug_toolbar/static/debug_toolbar/js/toolbar.js b/src/debug_toolbar/static/debug_toolbar/js/toolbar.js
index 3132d6872d..7eef10c5da 100644
--- a/src/debug_toolbar/static/debug_toolbar/js/toolbar.js
+++ b/src/debug_toolbar/static/debug_toolbar/js/toolbar.js
@@ -1,305 +1,351 @@
-(function ($, publicAPI) {
-    var djdt = {
-        handleDragged: false,
-        events: {
-            ready: []
-        },
-        isReady: false,
-        init: function() {
-            $('#djDebug').show();
-            var current = null;
-            $('#djDebugPanelList').on('click', 'li a', function() {
-                if (!this.className) {
-                    return false;
-                }
-                current = $('#djDebug #' + this.className);
-                if (current.is(':visible')) {
-                    $(document).trigger('close.djDebug');
-                    $(this).parent().removeClass('djdt-active');
-                } else {
-                    $('.djdt-panelContent').hide(); // Hide any that are already open
-                    var inner = current.find('.djDebugPanelContent .djdt-scroll'),
-                        store_id = $('#djDebug').data('store-id'),
-                        render_panel_url = $('#djDebug').data('render-panel-url');
-                    if (store_id !== '' && inner.children().length === 0) {
-                        var ajax_data = {
-                            data: {
-                                store_id: store_id,
-                                panel_id: this.className
-                            },
-                            type: 'GET',
-                            url: render_panel_url
-                        };
-                        $.ajax(ajax_data).done(function(data){
-                            inner.prev().remove();  // Remove AJAX loader
-                            inner.html(data);
-                        }).fail(function(xhr){
-                            var message = '<div class="djDebugPanelTitle"><a class="djDebugClose djDebugBack" href=""></a><h3>'+xhr.status+': '+xhr.statusText+'</h3></div>';
-                            $('#djDebugWindow').html(message).show();
-                        });
-                    }
-                    current.show();
-                    $('#djDebugToolbar li').removeClass('djdt-active');
-                    $(this).parent().addClass('djdt-active');
-                }
-                return false;
-            });
-            $('#djDebug').on('click', 'a.djDebugClose', function() {
-                $(document).trigger('close.djDebug');
-                $('#djDebugToolbar li').removeClass('djdt-active');
-                return false;
-            });
-            $('#djDebug').on('click', '.djDebugPanelButton input[type=checkbox]', function() {
-                djdt.cookie.set($(this).attr('data-cookie'), $(this).prop('checked') ? 'on' : 'off', {
-                    path: '/',
-                    expires: 10
-                });
-            });
-
-            // Used by the SQL and template panels
-            $('#djDebug').on('click', '.remoteCall', function() {
-                var self = $(this);
-                var name = self[0].tagName.toLowerCase();
-                var ajax_data = {};
+(function($, publicAPI) {
+  var djdt = {
+    handleDragged: false,
+    events: {
+      ready: [],
+    },
+    isReady: false,
+    init: function() {
+      $('#djDebug').show();
+      let current = null;
+      $('#djDebugPanelList').on('click', 'li a', function() {
+        if (!this.className) {
+          return false;
+        }
+        current = $('#djDebug #' + this.className);
+        if (current.is(':visible')) {
+          $(document).trigger('close.djDebug');
+          $(this)
+            .parent()
+            .removeClass('djdt-active');
+        } else {
+          $('.djdt-panelContent').hide(); // Hide any that are already open
+          let inner = current.find('.djDebugPanelContent .djdt-scroll'),
+            store_id = $('#djDebug').data('store-id'),
+            render_panel_url = $('#djDebug').data('render-panel-url');
+          if (store_id !== '' && inner.children().length === 0) {
+            let ajax_data = {
+              data: {
+                store_id,
+                panel_id: this.className,
+              },
+              type: 'GET',
+              url: render_panel_url,
+            };
+            $.ajax(ajax_data)
+              .done(function(data) {
+                inner.prev().remove(); // Remove AJAX loader
+                inner.html(data);
+              })
+              .fail(function(xhr) {
+                let message =
+                  '<div class="djDebugPanelTitle"><a class="djDebugClose djDebugBack" href=""></a><h3>' +
+                  xhr.status +
+                  ': ' +
+                  xhr.statusText +
+                  '</h3></div>';
+                $('#djDebugWindow')
+                  .html(message)
+                  .show();
+              });
+          }
+          current.show();
+          $('#djDebugToolbar li').removeClass('djdt-active');
+          $(this)
+            .parent()
+            .addClass('djdt-active');
+        }
+        return false;
+      });
+      $('#djDebug').on('click', 'a.djDebugClose', function() {
+        $(document).trigger('close.djDebug');
+        $('#djDebugToolbar li').removeClass('djdt-active');
+        return false;
+      });
+      $('#djDebug').on('click', '.djDebugPanelButton input[type=checkbox]', function() {
+        djdt.cookie.set(
+          $(this).attr('data-cookie'),
+          $(this).prop('checked') ? 'on' : 'off',
+          {
+            path: '/',
+            expires: 10,
+          }
+        );
+      });
 
-                if (name == 'button') {
-                    var form = self.parents('form:eq(0)');
-                    ajax_data['url'] = self.attr('formaction');
+      // Used by the SQL and template panels
+      $('#djDebug').on('click', '.remoteCall', function() {
+        let self = $(this);
+        let name = self[0].tagName.toLowerCase();
+        let ajax_data = {};
 
-                    if (form.length) {
-                        ajax_data['data'] = form.serialize();
-                        ajax_data['type'] = form.attr('method') || 'POST';
-                    }
-                }
+        if (name == 'button') {
+          let form = self.parents('form:eq(0)');
+          ajax_data.url = self.attr('formaction');
 
-                if (name == 'a') {
-                    ajax_data['url'] = self.attr('href');
-                }
+          if (form.length) {
+            ajax_data.data = form.serialize();
+            ajax_data.type = form.attr('method') || 'POST';
+          }
+        }
 
-                $.ajax(ajax_data).done(function(data){
-                    $('#djDebugWindow').html(data).show();
-                }).fail(function(xhr){
-                        var message = '<div class="djDebugPanelTitle"><a class="djDebugClose djDebugBack" href=""></a><h3>'+xhr.status+': '+xhr.statusText+'</h3></div>';
-                        $('#djDebugWindow').html(message).show();
-                });
+        if (name == 'a') {
+          ajax_data.url = self.attr('href');
+        }
 
-                $('#djDebugWindow').on('click', 'a.djDebugBack', function() {
-                    $(this).parent().parent().hide();
-                    return false;
-                });
+        $.ajax(ajax_data)
+          .done(function(data) {
+            $('#djDebugWindow')
+              .html(data)
+              .show();
+          })
+          .fail(function(xhr) {
+            let message =
+              '<div class="djDebugPanelTitle"><a class="djDebugClose djDebugBack" href=""></a><h3>' +
+              xhr.status +
+              ': ' +
+              xhr.statusText +
+              '</h3></div>';
+            $('#djDebugWindow')
+              .html(message)
+              .show();
+          });
 
-                return false;
-            });
+        $('#djDebugWindow').on('click', 'a.djDebugBack', function() {
+          $(this)
+            .parent()
+            .parent()
+            .hide();
+          return false;
+        });
 
-            // Used by the cache, profiling and SQL panels
-            $('#djDebug').on('click', 'a.djToggleSwitch', function(e) {
-                e.preventDefault();
-                var btn = $(this);
-                var id = btn.attr('data-toggle-id');
-                var open_me = btn.text() == btn.attr('data-toggle-open');
-                if (id === '' || !id) {
-                    return;
-                }
-                var name = btn.attr('data-toggle-name');
-                btn.parents('.djDebugPanelContent').find('#' + name + '_' + id).find('.djDebugCollapsed').toggle(open_me);
-                btn.parents('.djDebugPanelContent').find('#' + name + '_' + id).find('.djDebugUncollapsed').toggle(!open_me);
-                $(this).parents('.djDebugPanelContent').find('.djToggleDetails_' + id).each(function(){
-                    var $this = $(this);
-                    if (open_me) {
-                        $this.addClass('djSelected');
-                        $this.removeClass('djUnselected');
-                        btn.text(btn.attr('data-toggle-close'));
-                        $this.find('.djToggleSwitch').text(btn.text());
-                    } else {
-                        $this.removeClass('djSelected');
-                        $this.addClass('djUnselected');
-                        btn.text(btn.attr('data-toggle-open'));
-                        $this.find('.djToggleSwitch').text(btn.text());
-                    }
-                });
-                return;
-            });
+        return false;
+      });
 
-            $('#djHideToolBarButton').click(function() {
-                djdt.hide_toolbar(true);
-                return false;
-            });
-            $('#djShowToolBarButton').click(function() {
-                if (!djdt.handleDragged) {
-                    djdt.show_toolbar();
-                }
-                return false;
-            });
-            var handle = $('#djDebugToolbarHandle');
-            $('#djShowToolBarButton').on('mousedown', function (event) {
-                var startPageY = event.pageY;
-                var baseY = handle.offset().top - startPageY;
-                var windowHeight = $(window).height();
-                $(document).on('mousemove.djDebug', function (event) {
-                    // Chrome can send spurious mousemove events, so don't do anything unless the
-                    // cursor really moved.  Otherwise, it will be impossible to expand the toolbar
-                    // due to djdt.handleDragged being set to true.
-                    if (djdt.handleDragged || event.pageY != startPageY) {
-                        var top = baseY + event.clientY;
-                        
-                        if (top < 0) {
-                            top = 0;
-                        } else if (top + handle.height() > windowHeight) {
-                            top = windowHeight - handle.height();
-                        }
-                        
-                        handle.css({top: top});
-                        djdt.handleDragged = true;
-                    }
-                });
-                return false;
-            });
-            $(document).on('mouseup', function () {
-                $(document).off('mousemove.djDebug');
-                if (djdt.handleDragged) {
-                    var top = handle.offset().top - window.pageYOffset;
-                    djdt.cookie.set('djdttop', top, {
-                        path: '/',
-                        expires: 10
-                    });
-                    setTimeout(function () {
-                        djdt.handleDragged = false;
-                    }, 10);
-                    return false;
-                }
-            });
-            $(document).bind('close.djDebug', function() {
-                // If a sub-panel is open, close that
-                if ($('#djDebugWindow').is(':visible')) {
-                    $('#djDebugWindow').hide();
-                    return;
-                }
-                // If a panel is open, close that
-                if ($('.djdt-panelContent').is(':visible')) {
-                    $('.djdt-panelContent').hide();
-                    $('#djDebugToolbar li').removeClass('djdt-active');
-                    return;
-                }
-                // Otherwise, just minimize the toolbar
-                if ($('#djDebugToolbar').is(':visible')) {
-                    djdt.hide_toolbar(true);
-                    return;
-                }
-            });
-            if (djdt.cookie.get('djdt') == 'hide') {
-                djdt.hide_toolbar(false);
-            } else {
-                djdt.show_toolbar(false);
-            }
-            $('#djDebug .djDebugHoverable').hover(function(){
-                $(this).addClass('djDebugHover');
-            }, function(){
-                $(this).removeClass('djDebugHover');
-            });
-            djdt.isReady = true;
-            $.each(djdt.events.ready, function(_, callback){
-                callback(djdt);
-            });
-        },
-        close: function() {
-            $(document).trigger('close.djDebug');
-            return false;
-        },
-        hide_toolbar: function(setCookie) {
-            // close any sub panels
-            $('#djDebugWindow').hide();
-            // close all panels
-            $('.djdt-panelContent').hide();
-            $('#djDebugToolbar li').removeClass('djdt-active');
-            // finally close toolbar
-            $('#djDebugToolbar').hide('fast');
-            $('#djDebugToolbarHandle').show();
-            // set handle position
-            var handleTop = djdt.cookie.get('djdttop');
-            if (handleTop) {
-                $('#djDebugToolbarHandle').css({top: handleTop + 'px'});
-            }
-            // Unbind keydown
-            $(document).unbind('keydown.djDebug');
-            if (setCookie) {
-                djdt.cookie.set('djdt', 'hide', {
-                    path: '/',
-                    expires: 10
-                });
-            }
-        },
-        show_toolbar: function(animate) {
-            // Set up keybindings
-            $(document).bind('keydown.djDebug', function(e) {
-                if (e.keyCode == 27) {
-                    djdt.close();
-                }
-            });
-            $('#djDebugToolbarHandle').hide();
-            if (animate) {
-                $('#djDebugToolbar').show('fast');
+      // Used by the cache, profiling and SQL panels
+      $('#djDebug').on('click', 'a.djToggleSwitch', function(e) {
+        e.preventDefault();
+        let btn = $(this);
+        let id = btn.attr('data-toggle-id');
+        let open_me = btn.text() == btn.attr('data-toggle-open');
+        if (id === '' || !id) {
+          return;
+        }
+        let name = btn.attr('data-toggle-name');
+        btn
+          .parents('.djDebugPanelContent')
+          .find('#' + name + '_' + id)
+          .find('.djDebugCollapsed')
+          .toggle(open_me);
+        btn
+          .parents('.djDebugPanelContent')
+          .find('#' + name + '_' + id)
+          .find('.djDebugUncollapsed')
+          .toggle(!open_me);
+        $(this)
+          .parents('.djDebugPanelContent')
+          .find('.djToggleDetails_' + id)
+          .each(function() {
+            let $this = $(this);
+            if (open_me) {
+              $this.addClass('djSelected');
+              $this.removeClass('djUnselected');
+              btn.text(btn.attr('data-toggle-close'));
+              $this.find('.djToggleSwitch').text(btn.text());
             } else {
-                $('#djDebugToolbar').show();
+              $this.removeClass('djSelected');
+              $this.addClass('djUnselected');
+              btn.text(btn.attr('data-toggle-open'));
+              $this.find('.djToggleSwitch').text(btn.text());
             }
-            djdt.cookie.set('djdt', 'show', {
-                path: '/',
-                expires: 10
-            });
-        },
-        ready: function(callback){
-            if (djdt.isReady) {
-                callback(djdt);
-            } else {
-                djdt.events.ready.push(callback);
+          });
+        return;
+      });
+
+      $('#djHideToolBarButton').click(function() {
+        djdt.hide_toolbar(true);
+        return false;
+      });
+      $('#djShowToolBarButton').click(function() {
+        if (!djdt.handleDragged) {
+          djdt.show_toolbar();
+        }
+        return false;
+      });
+      let handle = $('#djDebugToolbarHandle');
+      $('#djShowToolBarButton').on('mousedown', function(event) {
+        let startPageY = event.pageY;
+        let baseY = handle.offset().top - startPageY;
+        let windowHeight = $(window).height();
+        $(document).on('mousemove.djDebug', function(event) {
+          // Chrome can send spurious mousemove events, so don't do anything unless the
+          // cursor really moved.  Otherwise, it will be impossible to expand the toolbar
+          // due to djdt.handleDragged being set to true.
+          if (djdt.handleDragged || event.pageY != startPageY) {
+            let top = baseY + event.clientY;
+
+            if (top < 0) {
+              top = 0;
+            } else if (top + handle.height() > windowHeight) {
+              top = windowHeight - handle.height();
             }
+
+            handle.css({top});
+            djdt.handleDragged = true;
+          }
+        });
+        return false;
+      });
+      $(document).on('mouseup', function() {
+        $(document).off('mousemove.djDebug');
+        if (djdt.handleDragged) {
+          let top = handle.offset().top - window.pageYOffset;
+          djdt.cookie.set('djdttop', top, {
+            path: '/',
+            expires: 10,
+          });
+          setTimeout(function() {
+            djdt.handleDragged = false;
+          }, 10);
+          return false;
+        }
+      });
+      $(document).bind('close.djDebug', function() {
+        // If a sub-panel is open, close that
+        if ($('#djDebugWindow').is(':visible')) {
+          $('#djDebugWindow').hide();
+          return;
+        }
+        // If a panel is open, close that
+        if ($('.djdt-panelContent').is(':visible')) {
+          $('.djdt-panelContent').hide();
+          $('#djDebugToolbar li').removeClass('djdt-active');
+          return;
+        }
+        // Otherwise, just minimize the toolbar
+        if ($('#djDebugToolbar').is(':visible')) {
+          djdt.hide_toolbar(true);
+          return;
+        }
+      });
+      if (djdt.cookie.get('djdt') == 'hide') {
+        djdt.hide_toolbar(false);
+      } else {
+        djdt.show_toolbar(false);
+      }
+      $('#djDebug .djDebugHoverable').hover(
+        function() {
+          $(this).addClass('djDebugHover');
         },
-        cookie: {
-            get: function(key){
-                if (document.cookie.indexOf(key) === -1) return null;
+        function() {
+          $(this).removeClass('djDebugHover');
+        }
+      );
+      djdt.isReady = true;
+      $.each(djdt.events.ready, function(_, callback) {
+        callback(djdt);
+      });
+    },
+    close: function() {
+      $(document).trigger('close.djDebug');
+      return false;
+    },
+    hide_toolbar: function(setCookie) {
+      // close any sub panels
+      $('#djDebugWindow').hide();
+      // close all panels
+      $('.djdt-panelContent').hide();
+      $('#djDebugToolbar li').removeClass('djdt-active');
+      // finally close toolbar
+      $('#djDebugToolbar').hide('fast');
+      $('#djDebugToolbarHandle').show();
+      // set handle position
+      let handleTop = djdt.cookie.get('djdttop');
+      if (handleTop) {
+        $('#djDebugToolbarHandle').css({top: handleTop + 'px'});
+      }
+      // Unbind keydown
+      $(document).unbind('keydown.djDebug');
+      if (setCookie) {
+        djdt.cookie.set('djdt', 'hide', {
+          path: '/',
+          expires: 10,
+        });
+      }
+    },
+    show_toolbar: function(animate) {
+      // Set up keybindings
+      $(document).bind('keydown.djDebug', function(e) {
+        if (e.keyCode == 27) {
+          djdt.close();
+        }
+      });
+      $('#djDebugToolbarHandle').hide();
+      if (animate) {
+        $('#djDebugToolbar').show('fast');
+      } else {
+        $('#djDebugToolbar').show();
+      }
+      djdt.cookie.set('djdt', 'show', {
+        path: '/',
+        expires: 10,
+      });
+    },
+    ready: function(callback) {
+      if (djdt.isReady) {
+        callback(djdt);
+      } else {
+        djdt.events.ready.push(callback);
+      }
+    },
+    cookie: {
+      get: function(key) {
+        if (document.cookie.indexOf(key) === -1) return null;
 
-                var cookieArray = document.cookie.split('; '),
-                    cookies = {};
+        let cookieArray = document.cookie.split('; '),
+          cookies = {};
 
-                cookieArray.forEach(function(e){
-                    var parts = e.split('=');
-                    cookies[ parts[0] ] = parts[1];
-                });
+        cookieArray.forEach(function(e) {
+          let parts = e.split('=');
+          cookies[parts[0]] = parts[1];
+        });
 
-                return cookies[ key ];
-            },
-            set: function(key, value, options){
-                options = options || {};
+        return cookies[key];
+      },
+      set: function(key, value, options) {
+        options = options || {};
 
-                if (typeof options.expires === 'number') {
-                    var days = options.expires, t = options.expires = new Date();
-                    t.setDate(t.getDate() + days);
-                }
+        if (typeof options.expires === 'number') {
+          let days = options.expires,
+            t = (options.expires = new Date());
+          t.setDate(t.getDate() + days);
+        }
 
-                document.cookie = [
-                    encodeURIComponent(key) + '=' + String(value),
-                    options.expires ? '; expires=' + options.expires.toUTCString() : '',
-                    options.path    ? '; path=' + options.path : '',
-                    options.domain  ? '; domain=' + options.domain : '',
-                    options.secure  ? '; secure' : ''
-                ].join('');
+        document.cookie = [
+          encodeURIComponent(key) + '=' + String(value),
+          options.expires ? '; expires=' + options.expires.toUTCString() : '',
+          options.path ? '; path=' + options.path : '',
+          options.domain ? '; domain=' + options.domain : '',
+          options.secure ? '; secure' : '',
+        ].join('');
 
-                return value;
-            }
-        },
-        applyStyle: function(name) {
-            $('#djDebug [data-' + name + ']').each(function() {
-                var css = {};
-                css[name] = $(this).data(name);
-                $(this).css(css);
-            });
-        }
-    };
-    $.extend(publicAPI, {
-        show_toolbar: djdt.show_toolbar,
-        hide_toolbar: djdt.hide_toolbar,
-        close: djdt.close,
-        cookie: djdt.cookie,
-        applyStyle: djdt.applyStyle
-    });
-    $(document).ready(djdt.init);
+        return value;
+      },
+    },
+    applyStyle: function(name) {
+      $('#djDebug [data-' + name + ']').each(function() {
+        let css = {};
+        css[name] = $(this).data(name);
+        $(this).css(css);
+      });
+    },
+  };
+  $.extend(publicAPI, {
+    show_toolbar: djdt.show_toolbar,
+    hide_toolbar: djdt.hide_toolbar,
+    close: djdt.close,
+    cookie: djdt.cookie,
+    applyStyle: djdt.applyStyle,
+  });
+  $(document).ready(djdt.init);
 })(djdt.jQuery, djdt);
diff --git a/src/debug_toolbar/templates/debug_toolbar/panels/logging.html b/src/debug_toolbar/templates/debug_toolbar/panels/logging.html
index 3908f4fea6..ba30b202c1 100644
--- a/src/debug_toolbar/templates/debug_toolbar/panels/logging.html
+++ b/src/debug_toolbar/templates/debug_toolbar/panels/logging.html
@@ -25,4 +25,3 @@
 {% else %}
 	<p>{% trans "No messages logged" %}.</p>
 {% endif %}
-
diff --git a/src/sentry/runner/__init__.py b/src/sentry/runner/__init__.py
old mode 100755
new mode 100644
diff --git a/src/sentry/south_migrations/0376_auto__add_userpermission__add_unique_userpermission_user_permission.py b/src/sentry/south_migrations/0376_auto__add_userpermission__add_unique_userpermission_user_permission.py
index c982a5a6d6..208b97f994 100644
--- a/src/sentry/south_migrations/0376_auto__add_userpermission__add_unique_userpermission_user_permission.py
+++ b/src/sentry/south_migrations/0376_auto__add_userpermission__add_unique_userpermission_user_permission.py
@@ -23,7 +23,6 @@ class Migration(SchemaMigration):
         # Adding unique constraint on 'UserPermission', fields ['user', 'permission']
         db.create_unique('sentry_userpermission', ['user_id', 'permission'])
 
-
     def backwards(self, orm):
         # Removing unique constraint on 'UserPermission', fields ['user', 'permission']
         db.delete_unique('sentry_userpermission', ['user_id', 'permission'])
@@ -31,7 +30,6 @@ class Migration(SchemaMigration):
         # Deleting model 'UserPermission'
         db.delete_table('sentry_userpermission')
 
-
     models = {
         'sentry.activity': {
             'Meta': {'object_name': 'Activity'},
@@ -1048,4 +1046,4 @@ class Migration(SchemaMigration):
         }
     }
 
-    complete_apps = ['sentry']
\ No newline at end of file
+    complete_apps = ['sentry']
diff --git a/src/sentry/south_migrations/0380_auto__chg_field_servicehook_url.py b/src/sentry/south_migrations/0380_auto__chg_field_servicehook_url.py
index bd0cd12270..20c694a63b 100644
--- a/src/sentry/south_migrations/0380_auto__chg_field_servicehook_url.py
+++ b/src/sentry/south_migrations/0380_auto__chg_field_servicehook_url.py
@@ -1049,4 +1049,4 @@ class Migration(SchemaMigration):
         }
     }
 
-    complete_apps = ['sentry']
\ No newline at end of file
+    complete_apps = ['sentry']
diff --git a/src/sentry/south_migrations/0382_auto__add_groupenvironment__add_unique_groupenvironment_group_id_envir.py b/src/sentry/south_migrations/0382_auto__add_groupenvironment__add_unique_groupenvironment_group_id_envir.py
index fcf3b25317..13798a39ed 100644
--- a/src/sentry/south_migrations/0382_auto__add_groupenvironment__add_unique_groupenvironment_group_id_envir.py
+++ b/src/sentry/south_migrations/0382_auto__add_groupenvironment__add_unique_groupenvironment_group_id_envir.py
@@ -23,7 +23,6 @@ class Migration(SchemaMigration):
         # Adding unique constraint on 'GroupEnvironment', fields ['group_id', 'environment_id']
         db.create_unique('sentry_groupenvironment', ['group_id', 'environment_id'])
 
-
     def backwards(self, orm):
         # Removing unique constraint on 'GroupEnvironment', fields ['group_id', 'environment_id']
         db.delete_unique('sentry_groupenvironment', ['group_id', 'environment_id'])
@@ -31,7 +30,6 @@ class Migration(SchemaMigration):
         # Deleting model 'GroupEnvironment'
         db.delete_table('sentry_groupenvironment')
 
-
     models = {
         'sentry.activity': {
             'Meta': {'object_name': 'Activity'},
@@ -1063,4 +1061,4 @@ class Migration(SchemaMigration):
         }
     }
 
-    complete_apps = ['sentry']
\ No newline at end of file
+    complete_apps = ['sentry']
diff --git a/src/sentry/south_migrations/0385_auto__add_field_rule_environment_id.py b/src/sentry/south_migrations/0385_auto__add_field_rule_environment_id.py
index 86ba4b1e74..d92ea1a549 100644
--- a/src/sentry/south_migrations/0385_auto__add_field_rule_environment_id.py
+++ b/src/sentry/south_migrations/0385_auto__add_field_rule_environment_id.py
@@ -17,12 +17,10 @@ class Migration(SchemaMigration):
                       self.gf('sentry.db.models.fields.bounded.BoundedPositiveIntegerField')(null=True),
                       keep_default=False)
 
-
     def backwards(self, orm):
         # Deleting field 'Rule.environment_id'
         db.delete_column('sentry_rule', 'environment_id')
 
-
     models = {
         'sentry.activity': {
             'Meta': {'object_name': 'Activity'},
@@ -1055,4 +1053,4 @@ class Migration(SchemaMigration):
         }
     }
 
-    complete_apps = ['sentry']
\ No newline at end of file
+    complete_apps = ['sentry']
diff --git a/src/sentry/south_migrations/0388_auto__add_field_environmentproject_is_hidden.py b/src/sentry/south_migrations/0388_auto__add_field_environmentproject_is_hidden.py
index af80b392c8..fb1567729e 100644
--- a/src/sentry/south_migrations/0388_auto__add_field_environmentproject_is_hidden.py
+++ b/src/sentry/south_migrations/0388_auto__add_field_environmentproject_is_hidden.py
@@ -17,12 +17,10 @@ class Migration(SchemaMigration):
                       self.gf('django.db.models.fields.NullBooleanField')(null=True, blank=True),
                       keep_default=False)
 
-
     def backwards(self, orm):
         # Deleting field 'EnvironmentProject.is_hidden'
         db.delete_column('sentry_environmentproject', 'is_hidden')
 
-
     models = {
         'sentry.activity': {
             'Meta': {'object_name': 'Activity'},
@@ -1057,4 +1055,4 @@ class Migration(SchemaMigration):
         }
     }
 
-    complete_apps = ['sentry']
\ No newline at end of file
+    complete_apps = ['sentry']
diff --git a/src/sentry/south_migrations/0389_auto__add_field_groupenvironment_first_release_id__add_index_groupenvi.py b/src/sentry/south_migrations/0389_auto__add_field_groupenvironment_first_release_id__add_index_groupenvi.py
index 276b8cad7a..8c48c84971 100644
--- a/src/sentry/south_migrations/0389_auto__add_field_groupenvironment_first_release_id__add_index_groupenvi.py
+++ b/src/sentry/south_migrations/0389_auto__add_field_groupenvironment_first_release_id__add_index_groupenvi.py
@@ -35,7 +35,6 @@ class Migration(SchemaMigration):
         else:
             db.create_index(table, fields)
 
-
     def backwards(self, orm):
         # Removing index on 'GroupEnvironment', fields ['environment_id', 'first_release_id']
         db.delete_index('sentry_groupenvironment', ['environment_id', 'first_release_id'])
@@ -43,7 +42,6 @@ class Migration(SchemaMigration):
         # Deleting field 'GroupEnvironment.first_release_id'
         db.delete_column('sentry_groupenvironment', 'first_release_id')
 
-
     models = {
         'sentry.activity': {
             'Meta': {'object_name': 'Activity'},
@@ -1079,4 +1077,4 @@ class Migration(SchemaMigration):
         }
     }
 
-    complete_apps = ['sentry']
\ No newline at end of file
+    complete_apps = ['sentry']
diff --git a/src/sentry/south_migrations/0412_auto__chg_field_file_name.py b/src/sentry/south_migrations/0412_auto__chg_field_file_name.py
index 6d5dfbf068..a55e4c2c68 100644
--- a/src/sentry/south_migrations/0412_auto__chg_field_file_name.py
+++ b/src/sentry/south_migrations/0412_auto__chg_field_file_name.py
@@ -1138,4 +1138,4 @@ class Migration(SchemaMigration):
         }
     }
 
-    complete_apps = ['sentry']
\ No newline at end of file
+    complete_apps = ['sentry']
diff --git a/src/sentry/static/sentry/debug/icons/demo.css b/src/sentry/static/sentry/debug/icons/demo.css
old mode 100755
new mode 100644
index d63f07fdb6..e82963f161
--- a/src/sentry/static/sentry/debug/icons/demo.css
+++ b/src/sentry/static/sentry/debug/icons/demo.css
@@ -161,4 +161,3 @@ p {
 .fs5 {
     font-size: 32px;
 }
-
diff --git a/src/sentry/static/sentry/debug/icons/demo.js b/src/sentry/static/sentry/debug/icons/demo.js
old mode 100755
new mode 100644
index f2eb834dbf..cc245809fc
--- a/src/sentry/static/sentry/debug/icons/demo.js
+++ b/src/sentry/static/sentry/debug/icons/demo.js
@@ -1,30 +1,29 @@
 if (!('boxShadow' in document.body.style)) {
-    document.body.setAttribute('class', 'noBoxShadow');
+  document.body.setAttribute('class', 'noBoxShadow');
 }
 
 document.body.addEventListener('click', function(e) {
-    var target = e.target;
-    if (target.tagName === 'INPUT' &&
-        target.getAttribute('class').indexOf('liga') === -1) {
-        target.select();
-    }
+  let target = e.target;
+  if (target.tagName === 'INPUT' && target.getAttribute('class').indexOf('liga') === -1) {
+    target.select();
+  }
 });
 
 (function() {
-    var fontSize = document.getElementById('fontSize'),
-        testDrive = document.getElementById('testDrive'),
-        testText = document.getElementById('testText');
-    function updateTest() {
-        testDrive.innerHTML = testText.value || String.fromCharCode(160);
-        if (window.icomoonLiga) {
-            window.icomoonLiga(testDrive);
-        }
-    }
-    function updateSize() {
-        testDrive.style.fontSize = fontSize.value + 'px';
+  let fontSize = document.getElementById('fontSize'),
+    testDrive = document.getElementById('testDrive'),
+    testText = document.getElementById('testText');
+  function updateTest() {
+    testDrive.innerHTML = testText.value || String.fromCharCode(160);
+    if (window.icomoonLiga) {
+      window.icomoonLiga(testDrive);
     }
-    fontSize.addEventListener('change', updateSize, false);
-    testText.addEventListener('input', updateTest, false);
-    testText.addEventListener('change', updateTest, false);
-    updateSize();
-}());
+  }
+  function updateSize() {
+    testDrive.style.fontSize = fontSize.value + 'px';
+  }
+  fontSize.addEventListener('change', updateSize, false);
+  testText.addEventListener('input', updateTest, false);
+  testText.addEventListener('change', updateTest, false);
+  updateSize();
+})();
diff --git a/src/sentry/static/sentry/fonts/OFL.txt b/src/sentry/static/sentry/fonts/OFL.txt
index f1a20ac1a8..70e4f161ea 100644
--- a/src/sentry/static/sentry/fonts/OFL.txt
+++ b/src/sentry/static/sentry/fonts/OFL.txt
@@ -22,7 +22,7 @@ with others.
 
 The OFL allows the licensed fonts to be used, studied, modified and
 redistributed freely as long as they are not sold by themselves. The
-fonts, including any derivative works, can be bundled, embedded, 
+fonts, including any derivative works, can be bundled, embedded,
 redistributed and/or sold with any software provided that any reserved
 names are not used by derivative works. The fonts and derivatives,
 however, cannot be released under any other type of license. The
diff --git a/src/sentry/static/sentry/fonts/lato-bold.svg b/src/sentry/static/sentry/fonts/lato-bold.svg
old mode 100755
new mode 100644
diff --git a/src/sentry/static/sentry/fonts/lato-regular.svg b/src/sentry/static/sentry/fonts/lato-regular.svg
old mode 100755
new mode 100644
diff --git a/src/sentry/static/sentry/fonts/sentry-simple.svg b/src/sentry/static/sentry/fonts/sentry-simple.svg
old mode 100755
new mode 100644
diff --git a/src/sentry/templates/sentry/account/twofactor/enroll_sms.html b/src/sentry/templates/sentry/account/twofactor/enroll_sms.html
index df5edcec19..bca52c5357 100644
--- a/src/sentry/templates/sentry/account/twofactor/enroll_sms.html
+++ b/src/sentry/templates/sentry/account/twofactor/enroll_sms.html
@@ -36,9 +36,9 @@
       <div>
         <a href="{% url 'sentry-account-settings-2fa-sms' %}" class="btn btn-default">{% trans "Cancel" %}</a>
         {% if not auth.phone_number %}
-        <button type="submit" class="btn btn-primary">{% trans "Send Confirmation Code" %}</button> 
+        <button type="submit" class="btn btn-primary">{% trans "Send Confirmation Code" %}</button>
         {% else %}
-        <button type="submit" class="btn btn-primary">{% trans "Confirm" %}</button> 
+        <button type="submit" class="btn btn-primary">{% trans "Confirm" %}</button>
         {% endif %}
       </div>
     </fieldset>
diff --git a/src/sentry/templates/sentry/emails/welcome_mail.txt b/src/sentry/templates/sentry/emails/welcome_mail.txt
index a649e883ea..9495cab22f 100644
--- a/src/sentry/templates/sentry/emails/welcome_mail.txt
+++ b/src/sentry/templates/sentry/emails/welcome_mail.txt
@@ -14,4 +14,4 @@ with the following value for the Sentry DSN to start sending events:
 
     {{ dsn }}
 {% endif %}
-{% endspaceless %}
\ No newline at end of file
+{% endspaceless %}
diff --git a/src/sentry/templates/sentry/partial/_form_field.html b/src/sentry/templates/sentry/partial/_form_field.html
index 3708ef8cc6..71af736fd0 100644
--- a/src/sentry/templates/sentry/partial/_form_field.html
+++ b/src/sentry/templates/sentry/partial/_form_field.html
@@ -1,3 +1,3 @@
 {% load crispy_forms_tags %}
 
-{{ field|as_crispy_field }}
\ No newline at end of file
+{{ field|as_crispy_field }}
diff --git a/src/sentry/templates/sentry/partial/github_button.html b/src/sentry/templates/sentry/partial/github_button.html
index 6cefddfeeb..66d52f0fcd 100644
--- a/src/sentry/templates/sentry/partial/github_button.html
+++ b/src/sentry/templates/sentry/partial/github_button.html
@@ -5,4 +5,4 @@
 			<span id="gh-text" class="gh-text">{{ repo }}</span>
 		</a>
 	</span>
-</span>
\ No newline at end of file
+</span>
diff --git a/src/sentry/templates/sentry/pipeline-error.html b/src/sentry/templates/sentry/pipeline-error.html
index 2f1bc48344..826bae253a 100644
--- a/src/sentry/templates/sentry/pipeline-error.html
+++ b/src/sentry/templates/sentry/pipeline-error.html
@@ -30,4 +30,3 @@
   }
   </script>
 {% endblock %}
-
diff --git a/src/sentry/templates/sentry/plugins/site_configuration.html b/src/sentry/templates/sentry/plugins/site_configuration.html
index 8805ba2f2b..7b9e44d895 100644
--- a/src/sentry/templates/sentry/plugins/site_configuration.html
+++ b/src/sentry/templates/sentry/plugins/site_configuration.html
@@ -7,4 +7,4 @@
     </div>
 {% endif %}
 
-{% include "sentry/partial/_form.html" %}
\ No newline at end of file
+{% include "sentry/partial/_form.html" %}
diff --git a/tests/sentry/lang/native/fixtures/windows.sym b/tests/sentry/lang/native/fixtures/windows.sym
old mode 100755
new mode 100644
diff --git a/tests/sentry/templates/sentry-tests/error.html b/tests/sentry/templates/sentry-tests/error.html
index 7d36b9b214..50c63529be 100644
--- a/tests/sentry/templates/sentry-tests/error.html
+++ b/tests/sentry/templates/sentry-tests/error.html
@@ -1 +1 @@
-{% invalid template tag %}
\ No newline at end of file
+{% invalid template tag %}
