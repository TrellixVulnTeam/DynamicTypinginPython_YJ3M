commit d18817c7d043893b5daf12f74428df9ec950bb92
Author: Jan Michael Auer <jan.auer@sentry.io>
Date:   Mon Mar 9 11:05:44 2020 +0100

    fix(ingest): Store group_id of individual attachments (#17525)

diff --git a/src/sentry/ingest/ingest_consumer.py b/src/sentry/ingest/ingest_consumer.py
index a7ef42de14..171bdbd9b8 100644
--- a/src/sentry/ingest/ingest_consumer.py
+++ b/src/sentry/ingest/ingest_consumer.py
@@ -11,7 +11,7 @@ import multiprocessing as _multiprocessing
 from django.conf import settings
 from django.core.cache import cache
 
-from sentry import features
+from sentry import eventstore, features
 from sentry.cache import default_cache
 from sentry.models import Project, File, EventAttachment
 from sentry.signals import event_accepted
@@ -217,6 +217,17 @@ def process_individual_attachment(message, projects):
         logger.info("Organization has no event attachments: %s", project_id)
         return
 
+    # Attachments may be uploaded for events that already exist. Fetch the
+    # existing group_id, so that the attachment can be fetched by group-level
+    # APIs. This is inherently racy.
+    events = eventstore.get_unfetched_events(
+        filter=eventstore.Filter(event_ids=[event_id], project_ids=[project.id]), limit=1
+    )
+
+    group_id = None
+    if events:
+        group_id = events[0].group_id
+
     attachment = message["attachment"]
     attachment = attachment_cache.get_from_chunks(
         key=cache_key, type=attachment.pop("attachment_type"), **attachment
@@ -231,7 +242,7 @@ def process_individual_attachment(message, projects):
 
     file.putfile(BytesIO(attachment.data))
     EventAttachment.objects.create(
-        project_id=project.id, event_id=event_id, name=attachment.name, file=file
+        project_id=project.id, group_id=group_id, event_id=event_id, name=attachment.name, file=file
     )
 
     attachment.delete()
diff --git a/tests/sentry/ingest/ingest_consumer/test_ingest_kafka.py b/tests/sentry/ingest/ingest_consumer/test_ingest_consumer_kafka.py
similarity index 100%
rename from tests/sentry/ingest/ingest_consumer/test_ingest_kafka.py
rename to tests/sentry/ingest/ingest_consumer/test_ingest_consumer_kafka.py
diff --git a/tests/sentry/ingest/ingest_consumer/test_ingest_processing.py b/tests/sentry/ingest/ingest_consumer/test_ingest_consumer_processing.py
similarity index 90%
rename from tests/sentry/ingest/ingest_consumer/test_ingest_processing.py
rename to tests/sentry/ingest/ingest_consumer/test_ingest_consumer_processing.py
index 5c9e4a30e0..430b9a616b 100644
--- a/tests/sentry/ingest/ingest_consumer/test_ingest_processing.py
+++ b/tests/sentry/ingest/ingest_consumer/test_ingest_consumer_processing.py
@@ -136,12 +136,24 @@ def test_with_attachments(default_project, task_runner, preprocess_event):
 @pytest.mark.parametrize(
     "chunks", [(b"Hello ", b"World!"), (b"",), ()], ids=["basic", "zerolen", "nochunks"]
 )
-def test_individual_attachments(default_project, monkeypatch, event_attachments, chunks):
+@pytest.mark.parametrize("with_group", [True, False], ids=["with_group", "without_group"])
+def test_individual_attachments(
+    default_project, factories, monkeypatch, event_attachments, chunks, with_group
+):
     monkeypatch.setattr("sentry.features.has", lambda *a, **kw: event_attachments)
 
     event_id = "515539018c9b4260a6f999572f1661ee"
     attachment_id = "ca90fb45-6dd9-40a0-a18f-8693aa621abb"
     project_id = default_project.id
+    group_id = None
+
+    if with_group:
+        event = factories.store_event(
+            data={"event_id": event_id, "message": "existence is pain"}, project_id=project_id
+        )
+
+        group_id = event.group.id
+        assert group_id, "this test requires a group to work"
 
     for i, chunk in enumerate(chunks):
         process_attachment_chunk(
@@ -180,12 +192,13 @@ def test_individual_attachments(default_project, monkeypatch, event_attachments,
     if not event_attachments:
         assert not attachments
     else:
-        att1, = attachments
-        assert att1.file.type == "event.attachment"
-        assert att1.file.headers == {"Content-Type": "application/octet-stream"}
-        f = att1.file.getfile()
-        assert f.read() == b"".join(chunks)
-        assert f.name == "foo.txt"
+        attachment, = attachments
+        assert attachment.file.type == "event.attachment"
+        assert attachment.file.headers == {"Content-Type": "application/octet-stream"}
+        assert attachment.group_id == group_id
+        file = attachment.file.getfile()
+        assert file.read() == b"".join(chunks)
+        assert file.name == "foo.txt"
 
 
 @pytest.mark.django_db
diff --git a/tests/sentry/ingest/outcome_consumer/test_outcomes_kafka.py b/tests/sentry/ingest/test_outcomes_consumer.py
similarity index 100%
rename from tests/sentry/ingest/outcome_consumer/test_outcomes_kafka.py
rename to tests/sentry/ingest/test_outcomes_consumer.py
