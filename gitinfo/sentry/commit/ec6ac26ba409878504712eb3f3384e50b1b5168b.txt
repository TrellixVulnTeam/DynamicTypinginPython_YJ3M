commit ec6ac26ba409878504712eb3f3384e50b1b5168b
Author: Armin Ronacher <armin.ronacher@active-4.com>
Date:   Fri Nov 11 18:32:02 2016 +0100

    Added test for raw stacks

diff --git a/tests/sentry/interfaces/test_exception.py b/tests/sentry/interfaces/test_exception.py
index 65bf4d206d..0854d85946 100644
--- a/tests/sentry/interfaces/test_exception.py
+++ b/tests/sentry/interfaces/test_exception.py
@@ -157,6 +157,32 @@ ValueError: hello world
         context = inst.get_api_context()
         assert not context['hasSystemFrames']
 
+    def test_context_with_raw_stacks(self):
+        inst = Exception.to_python(dict(values=[{
+            'type': 'ValueError',
+            'value': 'hello world',
+            'module': 'foobar',
+            'raw_stacktrace': {'frames': [{
+                'filename': None,
+                'lineno': 1,
+                'function': '<redacted>',
+                'in_app': True,
+            }]},
+            'stacktrace': {'frames': [{
+                'filename': 'foo/baz.c',
+                'lineno': 1,
+                'function': 'main',
+                'in_app': True,
+            }]},
+        }]))
+
+        self.create_event(data={
+            'sentry.interfaces.Exception': inst.to_json(),
+        })
+        context = inst.get_api_context()
+        assert context['values'][0]['stacktrace']['frames'][0]['function'] == 'main'
+        assert context['values'][0]['rawStacktrace']['frames'][0]['function'] == '<redacted>'
+
 
 class SingleExceptionTest(TestCase):
     @fixture
diff --git a/tests/sentry/interfaces/test_threads.py b/tests/sentry/interfaces/test_threads.py
new file mode 100644
index 0000000000..4b41b9c733
--- /dev/null
+++ b/tests/sentry/interfaces/test_threads.py
@@ -0,0 +1,43 @@
+# -*- coding: utf-8 -*-
+
+from __future__ import absolute_import
+
+from exam import fixture
+
+from sentry.interfaces.threads import Threads
+from sentry.testutils import TestCase
+
+
+class ThreadsTest(TestCase):
+    @fixture
+    def interface(self):
+        return Threads.to_python(dict(values=[{
+            'id': 42,
+            'crashed': False,
+            'current': True,
+            'name': 'Main Thread',
+            'stacktrace': {'frames': [{
+                'filename': 'foo/baz.c',
+                'function': 'main',
+                'lineno': 1,
+                'in_app': True,
+            }]},
+            'raw_stacktrace': {'frames': [{
+                'filename': None,
+                'lineno': 1,
+                'function': '<redacted>',
+                'in_app': True,
+            }]},
+        }]))
+
+    def test_basics(self):
+        self.create_event(data={
+            'sentry.interfaces.Exception': self.interface.to_json(),
+        })
+        context = self.interface.get_api_context()
+        assert context['values'][0]['stacktrace']['frames'][0]['function'] == 'main'
+        assert context['values'][0]['rawStacktrace']['frames'][0]['function'] == '<redacted>'
+        assert context['values'][0]['id'] == 42
+        assert context['values'][0]['name'] == 'Main Thread'
+        assert context['values'][0]['crashed'] is False
+        assert context['values'][0]['current'] is True
