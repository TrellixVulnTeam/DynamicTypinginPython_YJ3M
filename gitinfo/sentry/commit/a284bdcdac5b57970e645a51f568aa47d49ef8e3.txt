commit a284bdcdac5b57970e645a51f568aa47d49ef8e3
Author: josh <josh@jrl.ninja>
Date:   Mon Jan 6 15:41:46 2020 -0800

    ref: misc cleanup (#16115)

diff --git a/src/sentry/templatetags/sentry_plugins.py b/src/sentry/templatetags/sentry_plugins.py
index 7ed46d924c..79b31a4e0a 100644
--- a/src/sentry/templatetags/sentry_plugins.py
+++ b/src/sentry/templatetags/sentry_plugins.py
@@ -30,33 +30,6 @@ def get_actions(group, request):
     return [(a[0], a[1]) for a in action_list]
 
 
-@register.filter
-def get_panels(group, request):
-    project = group.project
-
-    panel_list = []
-    for plugin in plugins.for_project(project):
-        results = safe_execute(plugin.panels, request, group, panel_list, _with_transaction=False)
-
-        if not results:
-            continue
-
-        panel_list = results
-
-    return [(p[0], p[1], request.path == p[1]) for p in panel_list]
-
-
-@register.filter
-def get_widgets(group, request):
-    project = group.project
-
-    for plugin in plugins.for_project(project):
-        resp = safe_execute(plugin.widget, request, group, _with_transaction=False)
-
-        if resp:
-            yield resp.render(request)
-
-
 @register.filter
 def get_annotations(group, request=None):
     project = group.project
@@ -71,20 +44,3 @@ def get_annotations(group, request=None):
                 annotation_list.append(annotation)
 
     return annotation_list
-
-
-@register.filter
-def get_plugins(project):
-    results = []
-    for plugin in plugins.for_project(project, version=None):
-        if plugin.has_project_conf():
-            results.append(plugin)
-    return results
-
-
-@register.filter
-def get_plugins_with_status(project):
-    return [
-        (plugin, safe_execute(plugin.is_enabled, project, _with_transaction=False))
-        for plugin in plugins.configurable_for_project(project, version=None)
-    ]
diff --git a/src/sentry/testutils/skips.py b/src/sentry/testutils/skips.py
index f729e4e182..267590df28 100644
--- a/src/sentry/testutils/skips.py
+++ b/src/sentry/testutils/skips.py
@@ -10,23 +10,6 @@ import pytest
 _service_status = {}
 
 
-def cassandra_is_available():
-    if "cassandra" in _service_status:
-        return _service_status["cassandra"]
-    try:
-        socket.create_connection(("127.0.0.1", 9042), 1.0)
-    except socket.error:
-        _service_status["cassandra"] = False
-    else:
-        _service_status["cassandra"] = True
-    return _service_status["cassandra"]
-
-
-requires_cassandra = pytest.mark.skipif(
-    not cassandra_is_available(), reason="requires cassandra server running"
-)
-
-
 def snuba_is_available():
     if "snuba" in _service_status:
         return _service_status["snuba"]
diff --git a/src/sentry/web/forms/fields.py b/src/sentry/web/forms/fields.py
index 8682d2c979..66ae2e3ad4 100644
--- a/src/sentry/web/forms/fields.py
+++ b/src/sentry/web/forms/fields.py
@@ -2,10 +2,9 @@ from __future__ import absolute_import
 
 import six
 
-from django.forms.widgets import RadioFieldRenderer, TextInput, Widget
+from django.forms.widgets import TextInput, Widget
 from django.forms.utils import flatatt
 from django.forms import Field, CharField, EmailField, TypedChoiceField, ValidationError
-from django.utils.encoding import force_text
 from django.utils.html import format_html
 from django.utils.safestring import mark_safe
 from django.utils.translation import ugettext_lazy as _
@@ -33,20 +32,6 @@ class CustomTypedChoiceField(TypedChoiceField):
             )
 
 
-class RadioFieldRenderer(RadioFieldRenderer):
-    """
-    This is identical to Django's builtin widget, except that
-    it renders as a Bootstrap2 compatible widget. Would be great if
-    we didn't have to create this stupid code, but Django widgets are not
-    flexible.
-    """
-
-    def render(self):
-        return mark_safe(
-            u'\n<div class="inputs-list">%s</div>\n' % u"\n".join([force_text(w) for w in self])
-        )
-
-
 class UserField(CharField):
     class widget(TextInput):
         def render(self, name, value, attrs=None):
