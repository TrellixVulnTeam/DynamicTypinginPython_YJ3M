commit 076114027404c3e7d675677898db3a811d901a86
Author: David Cramer <dcramer@gmail.com>
Date:   Fri May 2 12:27:51 2014 -0300

    Abstract stats endpoint into base class

diff --git a/src/sentry/api/base.py b/src/sentry/api/base.py
index 7224d01cd4..b8fea5a664 100644
--- a/src/sentry/api/base.py
+++ b/src/sentry/api/base.py
@@ -1,15 +1,23 @@
+from datetime import datetime, timedelta
+from pytz import utc
 from rest_framework.authentication import SessionAuthentication
 from rest_framework.parsers import JSONParser
 from rest_framework.response import Response
 from rest_framework.views import APIView
 from urllib2 import quote
 
+from sentry.tsdb.base import ROLLUPS
+
 from .authentication import KeyAuthentication
 from .paginator import Paginator
 
 
 LINK_HEADER = '<{uri}&cursor={cursor}>; rel="{name}"'
 
+ONE_MINUTE = 60
+ONE_HOUR = ONE_MINUTE * 60
+ONE_DAY = ONE_HOUR * 24
+
 
 class Endpoint(APIView):
     authentication_classes = (KeyAuthentication, SessionAuthentication)
@@ -60,3 +68,42 @@ class Endpoint(APIView):
             headers['Link'] = ', '.join(link_values)
 
         return Response(results, headers=headers)
+
+
+class BaseStatsEndpoint(Endpoint):
+    def _parse_args(self, request):
+        resolution = request.GET.get('resolution')
+        if resolution:
+            resolution = self._parse_resolution(resolution)
+
+            assert any(r for r in ROLLUPS if r[0] == resolution)
+
+        end = request.GET.get('until')
+        if end:
+            end = datetime.fromtimestamp(float(end)).replace(tzinfo=utc)
+        else:
+            end = datetime.utcnow().replace(tzinfo=utc)
+
+        start = request.GET.get('since')
+        if start:
+            start = datetime.fromtimestamp(float(start)).replace(tzinfo=utc)
+        else:
+            start = end - timedelta(days=1, seconds=-1)
+
+        return {
+            'start': start,
+            'end': end,
+            'rollup': resolution,
+        }
+
+    def _parse_resolution(self, value):
+        if value.endswith('h'):
+            return int(value[:-1]) * ONE_HOUR
+        elif value.endswith('d'):
+            return int(value[:-1]) * ONE_DAY
+        elif value.endswith('m'):
+            return int(value[:-1]) * ONE_MINUTE
+        elif value.endswith('s'):
+            return int(value[:-1])
+        else:
+            raise ValueError(value)
diff --git a/src/sentry/api/endpoints/group_stats.py b/src/sentry/api/endpoints/group_stats.py
index 49182d6618..b1c179c305 100644
--- a/src/sentry/api/endpoints/group_stats.py
+++ b/src/sentry/api/endpoints/group_stats.py
@@ -1,15 +1,12 @@
-from datetime import datetime, timedelta
-from pytz import utc
 from rest_framework.response import Response
 
 from sentry.app import tsdb
-from sentry.api.base import Endpoint
+from sentry.api.base import BaseStatsEndpoint
 from sentry.api.permissions import assert_perm
 from sentry.models import Group
-from sentry.tsdb.base import ROLLUPS
 
 
-class GroupStatsEndpoint(Endpoint):
+class GroupStatsEndpoint(BaseStatsEndpoint):
     def get(self, request, group_id):
         group = Group.objects.get(
             id=group_id,
@@ -17,30 +14,10 @@ class GroupStatsEndpoint(Endpoint):
 
         assert_perm(group, request.user)
 
-        resolution = request.GET.get('resolution')
-        if resolution:
-            resolution = tsdb.parse_resolution(resolution)
-
-            assert any(r for r in ROLLUPS if r[0] == resolution)
-
-        end = request.GET.get('until')
-        if end:
-            end = datetime.fromtimestamp(float(end)).replace(tzinfo=utc)
-        else:
-            end = datetime.utcnow().replace(tzinfo=utc)
-
-        start = request.GET.get('since')
-        if start:
-            start = datetime.fromtimestamp(float(start)).replace(tzinfo=utc)
-        else:
-            start = end - timedelta(days=1, seconds=-1)
-
         data = tsdb.get_range(
             model=tsdb.models.group,
             keys=[group.id],
-            start=start,
-            end=end,
-            rollup=resolution,
+            **self._parse_args(request)
         )[group.id]
 
         return Response(data)
diff --git a/src/sentry/tsdb/base.py b/src/sentry/tsdb/base.py
index 0d7c2edf1e..ccd8e0b418 100644
--- a/src/sentry/tsdb/base.py
+++ b/src/sentry/tsdb/base.py
@@ -37,18 +37,6 @@ class BaseTSDB(object):
     def __init__(self, rollups=ROLLUPS):
         self.rollups = rollups
 
-    def parse_resolution(self, value):
-        if value.endswith('h'):
-            return int(value[:-1]) * ONE_HOUR
-        elif value.endswith('d'):
-            return int(value[:-1]) * ONE_DAY
-        elif value.endswith('m'):
-            return int(value[:-1]) * ONE_MINUTE
-        elif value.endswith('s'):
-            return int(value[:-1])
-        else:
-            raise ValueError(value)
-
     def normalize_to_epoch(self, timestamp, seconds):
         """
         Given a ``timestamp`` (datetime object) normalize the datetime object
