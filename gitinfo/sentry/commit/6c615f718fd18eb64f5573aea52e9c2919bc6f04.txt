commit 6c615f718fd18eb64f5573aea52e9c2919bc6f04
Author: Brett Hoerner <brett@bretthoerner.com>
Date:   Wed Jun 27 08:37:21 2018 -0700

    ref(snuba): Add project_id to `issues` in request. (#8855)

diff --git a/src/sentry/utils/snuba.py b/src/sentry/utils/snuba.py
index acefcc438c..29317d926d 100644
--- a/src/sentry/utils/snuba.py
+++ b/src/sentry/utils/snuba.py
@@ -346,13 +346,16 @@ def get_project_issues(project_ids, issue_ids=None):
             tombstone.project_id, {}
         )[tombstone.hash] = tombstone.deleted_at
 
-    # return [(gid, [(hash, tombstone_date), (hash, tombstone_date), ...]), ...]
+    # return [(gid, pid, [(hash, tombstone_date), (hash, tombstone_date), ...]), ...]
     result = {}
     for h in hashes:
         tombstone_date = tombstones_by_project.get(h.project_id, {}).get(h.hash, None)
-        pair = (h.hash, tombstone_date.strftime("%Y-%m-%d %H:%M:%S") if tombstone_date else None)
-        result.setdefault(h.group_id, []).append(pair)
-    return list(result.items())[:MAX_ISSUES]
+        pair = (
+            h.hash,
+            tombstone_date.strftime("%Y-%m-%d %H:%M:%S") if tombstone_date else None
+        )
+        result.setdefault((h.group_id, h.project_id), []).append(pair)
+    return [k + (v,) for k, v in result.items()][:MAX_ISSUES]
 
 
 def get_related_project_ids(column, ids):
diff --git a/tests/snuba/test_snuba.py b/tests/snuba/test_snuba.py
index aa402462b0..81651294a6 100644
--- a/tests/snuba/test_snuba.py
+++ b/tests/snuba/test_snuba.py
@@ -58,7 +58,7 @@ class SnubaTest(SnubaTestCase):
             )
 
         assert snuba.get_project_issues([self.project], [self.group.id]) == \
-            [(self.group.id, [('aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa', None)])]
+            [(self.group.id, self.group.project_id, [('aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa', None)])]
 
         # GroupHash without a group_id, should not be included in get_project_issues
         GroupHash.objects.create(
@@ -66,8 +66,9 @@ class SnubaTest(SnubaTestCase):
             hash='0' * 32,
         )
 
-        assert self.group.id in dict(snuba.get_project_issues([self.project]))
-        assert None not in dict(snuba.get_project_issues([self.project]))
+        group_ids = [i[0] for i in (snuba.get_project_issues([self.project]))]
+        assert self.group.id in group_ids
+        assert None not in group_ids
 
     def test_project_issues_with_tombstones(self):
         base_time = datetime.utcnow()
@@ -106,7 +107,7 @@ class SnubaTest(SnubaTestCase):
             hash=a_hash
         )
         assert snuba.get_project_issues([self.project], [group1.id]) == \
-            [(group1.id, [('aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa', None)])]
+            [(group1.id, group1.project_id, [('aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa', None)])]
 
         # 1 event in the groups, no deletes have happened
         _insert_event_for_time(base_time)
@@ -126,7 +127,7 @@ class SnubaTest(SnubaTestCase):
 
         # tombstone time is returned as expected
         assert snuba.get_project_issues([self.project], [group2.id]) == \
-            [(group2.id, [('aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa',
+            [(group2.id, group2.project_id, [('aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa',
                            ght.deleted_at.strftime("%Y-%m-%d %H:%M:%S"))])]
 
         # events <= to the tombstone date aren't returned
