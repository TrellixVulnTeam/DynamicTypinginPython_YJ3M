commit e0d4cd8c182fd8bff1f4cba9d8a18bbaeae67727
Author: Ted Kaemming <ted@kaemming.com>
Date:   Fri Oct 2 12:22:11 2015 -0700

    Move `result` to `timer` itself, add tests for `timer`.

diff --git a/src/sentry/tasks/base.py b/src/sentry/tasks/base.py
index dce1c10222..7a0dd179f7 100644
--- a/src/sentry/tasks/base.py
+++ b/src/sentry/tasks/base.py
@@ -23,14 +23,8 @@ def instrumented_task(name, stat_suffix=None, **kwargs):
                 instance = '{}.{}'.format(name, stat_suffix(*args, **kwargs))
             else:
                 instance = name
-            with metrics.timer(key, instance=instance) as tags:
-                try:
-                    result = func(*args, **kwargs)
-                except Exception:
-                    tags['result'] = 'failure'
-                    raise
-                else:
-                    tags['result'] = 'success'
+            with metrics.timer(key, instance=instance):
+                result = func(*args, **kwargs)
             return result
         return app.task(name=name, **kwargs)(_wrapped)
     return wrapped
diff --git a/src/sentry/utils/metrics.py b/src/sentry/utils/metrics.py
index def52d699b..1f1060e7d2 100644
--- a/src/sentry/utils/metrics.py
+++ b/src/sentry/utils/metrics.py
@@ -72,5 +72,10 @@ def timer(key, instance=None, tags=None):
     start = time()
     try:
         yield tags
+    except Exception:
+        tags['result'] = 'failure'
+        raise
+    else:
+        tags['result'] = 'success'
     finally:
         timing(key, time() - start, instance, tags)
diff --git a/tests/sentry/utils/test_metrics.py b/tests/sentry/utils/test_metrics.py
new file mode 100644
index 0000000000..176f49c46e
--- /dev/null
+++ b/tests/sentry/utils/test_metrics.py
@@ -0,0 +1,40 @@
+from __future__ import absolute_import
+
+import mock
+import pytest
+
+from sentry.utils.metrics import timer
+
+
+def test_timer_success():
+    with mock.patch('sentry.utils.metrics.timing') as timing:
+        with timer('key', tags={'foo': True}) as tags:
+            tags['bar'] = False
+
+        assert timing.call_count is 1
+        args, kwargs = timing.call_args
+        assert args[0] is 'key'
+        assert args[3] == {
+            'foo': True,
+            'bar': False,
+            'result': 'success',
+        }
+
+
+class ExpectedError(Exception):
+    pass
+
+
+def test_timer_failure():
+    with mock.patch('sentry.utils.metrics.timing') as timing:
+        with pytest.raises(ExpectedError):
+            with timer('key', tags={'foo': True}) as tags:
+                raise ExpectedError
+
+        assert timing.call_count is 1
+        args, kwargs = timing.call_args
+        assert args[0] is 'key'
+        assert args[3] == {
+            'foo': True,
+            'result': 'failure',
+        }
