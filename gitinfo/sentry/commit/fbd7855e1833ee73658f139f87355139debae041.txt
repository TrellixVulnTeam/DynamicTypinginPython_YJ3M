commit fbd7855e1833ee73658f139f87355139debae041
Author: NisanthanNanthakumar <nisanthan.nanthakumar@sentry.io>
Date:   Mon Mar 30 16:38:30 2020 -0700

    feat(SentryApps): Create db migration to add new integration feature choices (#17981)
    
    Objective
    Certain Sentry Apps still have the default integration feature of api that doesnâ€™t actually explain what the integration does. Amixr should have the category incident-management and ClickUp should be project-management.

diff --git a/migrations_lockfile.txt b/migrations_lockfile.txt
index 92d3e1a264..4254a12469 100644
--- a/migrations_lockfile.txt
+++ b/migrations_lockfile.txt
@@ -10,7 +10,7 @@ auth: 0008_alter_user_username_max_length
 contenttypes: 0002_remove_content_type_name
 jira_ac: 0001_initial
 nodestore: 0001_initial
-sentry: 0058_project_issue_alerts_targeting
+sentry: 0059_add_new_sentry_app_features
 sessions: 0001_initial
 sites: 0002_alter_domain_unique
 social_auth: 0001_initial
diff --git a/src/sentry/migrations/0059_add_new_sentry_app_features.py b/src/sentry/migrations/0059_add_new_sentry_app_features.py
new file mode 100644
index 0000000000..fa4cf70325
--- /dev/null
+++ b/src/sentry/migrations/0059_add_new_sentry_app_features.py
@@ -0,0 +1,45 @@
+# -*- coding: utf-8 -*-
+# Generated by Django 1.11.27 on 2020-03-30 21:35
+from __future__ import unicode_literals
+
+from django.db import migrations
+import sentry.db.models.fields.bounded
+
+
+class Migration(migrations.Migration):
+    # This flag is used to mark that a migration shouldn't be automatically run in
+    # production. We set this to True for operations that we think are risky and want
+    # someone from ops to run manually and monitor.
+    # General advice is that if in doubt, mark your migration as `is_dangerous`.
+    # Some things you should always mark as dangerous:
+    # - Large data migrations. Typically we want these to be run manually by ops so that
+    #   they can be monitored. Since data migrations will now hold a transaction open
+    #   this is even more important.
+    # - Adding columns to highly active tables, even ones that are NULL.
+    is_dangerous = False
+
+    # This flag is used to decide whether to run this migration in a transaction or not.
+    # By default we prefer to run in a transaction, but for migrations where you want
+    # to `CREATE INDEX CONCURRENTLY` this needs to be set to False. Typically you'll
+    # want to create an index concurrently when adding one to an existing table.
+    atomic = True
+
+    dependencies = [
+        ('sentry', '0058_project_issue_alerts_targeting'),
+    ]
+
+    operations = [
+        migrations.AlterField(
+            model_name='integrationfeature',
+            name='feature',
+            field=sentry.db.models.fields.bounded.BoundedPositiveIntegerField(
+                choices=[(0, b'integrations-api'),
+                         (1, b'integrations-issue-link'),
+                         (2, b'integrations-stacktrace-link'),
+                         (3, b'integrations-event-hooks'),
+                         (4, b'integrations-project-management'),
+                         (5, b'integrations-incident-management'),
+                         (6, b'integrations-feature-flag')],
+                default=0),
+        ),
+    ]
diff --git a/src/sentry/models/integrationfeature.py b/src/sentry/models/integrationfeature.py
index 4bc54c60f3..5039f07b8b 100644
--- a/src/sentry/models/integrationfeature.py
+++ b/src/sentry/models/integrationfeature.py
@@ -11,6 +11,9 @@ class Feature(object):
     ISSUE_LINK = 1
     STACKTRACE_LINK = 2
     EVENT_HOOKS = 3
+    PROJECT_MANAGEMENT = 4
+    INCIDENT_MANAGEMENT = 5
+    FEATURE_FLAG = 6
 
     @classmethod
     def as_choices(cls):
@@ -19,6 +22,9 @@ class Feature(object):
             (cls.ISSUE_LINK, "integrations-issue-link"),
             (cls.STACKTRACE_LINK, "integrations-stacktrace-link"),
             (cls.EVENT_HOOKS, "integrations-event-hooks"),
+            (cls.PROJECT_MANAGEMENT, "integrations-project-management"),
+            (cls.INCIDENT_MANAGEMENT, "integrations-incident-management"),
+            (cls.FEATURE_FLAG, "integrations-feature-flag"),
         )
 
     @classmethod
@@ -31,10 +37,16 @@ class Feature(object):
             return "integrations-stacktrace-link"
         elif feature == cls.EVENT_HOOKS:
             return "integrations-event-hooks"
+        elif feature == cls.PROJECT_MANAGEMENT:
+            return "integrations-project-management"
+        elif feature == cls.INCIDENT_MANAGEMENT:
+            return "integrations-incident-management"
+        elif feature == cls.FEATURE_FLAG:
+            return "integrations-feature-flag"
 
     @classmethod
     def description(cls, feature, name):
-        if feature == cls.API:
+        if feature in [cls.API, cls.PROJECT_MANAGEMENT, cls.INCIDENT_MANAGEMENT, cls.FEATURE_FLAG]:
             return (
                 "%s can **utilize the Sentry API** to pull data or update resources in Sentry (with permissions granted, of course)."
                 % name
