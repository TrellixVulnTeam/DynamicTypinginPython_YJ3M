commit 52ea3916bed928b26661fde113b8ecfb159f0d04
Author: Mark Story <mark@mark-story.com>
Date:   Mon Jan 28 11:21:25 2019 -0500

    ref(issues) Use available data instead of fetching projects again (#11720)
    
    With #11678 merged, we can use it in the organization issue list to skip
    doing requests for project metadata.
    
    Fixes APP-1045

diff --git a/src/sentry/static/sentry/app/views/organizationStream/overview.jsx b/src/sentry/static/sentry/app/views/organizationStream/overview.jsx
index c655ff32b3..c92ee5a3bf 100644
--- a/src/sentry/static/sentry/app/views/organizationStream/overview.jsx
+++ b/src/sentry/static/sentry/app/views/organizationStream/overview.jsx
@@ -18,7 +18,6 @@ import Pagination from 'app/components/pagination';
 import {Panel, PanelBody} from 'app/components/panels';
 import StreamGroup from 'app/components/stream/group';
 import {updateProjects} from 'app/actionCreators/globalSelection';
-import {fetchProject} from 'app/actionCreators/projects';
 import {fetchTags} from 'app/actionCreators/tags';
 import {fetchOrgMembers} from 'app/actionCreators/members';
 import {fetchSavedSearches} from 'app/actionCreators/savedSearches';
@@ -429,24 +428,10 @@ const OrganizationStream = createReactClass({
       this.setState({selectedProject: null});
       return;
     }
-    this.fetchProject(uniqProjects[0]);
-  },
-
-  /**
-   * Fetch the selected project from the API
-   * We need to do this as `props.organization.projects` lacks the `latestRelease` property
-   */
-  fetchProject(projectSlug) {
-    if (projectSlug in this.projectCache) {
-      this.setState({selectedProject: this.projectCache[projectSlug]});
-      return;
-    }
-
-    let orgId = this.props.organization.slug;
-    fetchProject(this.api, orgId, projectSlug).then(project => {
-      this.projectCache[project.slug] = project;
-      this.setState({selectedProject: project});
-    });
+    let selectedProject = this.props.organization.projects.find(
+      p => p.slug === uniqProjects[0]
+    );
+    this.setState({selectedProject});
   },
 
   /**
@@ -624,7 +609,8 @@ const OrganizationStream = createReactClass({
     let access = this.getAccess();
     let query = this.getQuery();
 
-    // If we have a selected project we can get release data
+    // If we have a selected project set release data up
+    // enabling stream actions
     let hasReleases = false;
     let projectId = null;
     let latestRelease = null;
