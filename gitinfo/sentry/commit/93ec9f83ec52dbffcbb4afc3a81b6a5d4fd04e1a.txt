commit 93ec9f83ec52dbffcbb4afc3a81b6a5d4fd04e1a
Author: Billy Vong <billyvg@gmail.com>
Date:   Thu Jul 13 17:31:30 2017 -0700

    Add pagination on org->stats table

diff --git a/src/sentry/static/sentry/app/views/organizationStats/index.jsx b/src/sentry/static/sentry/app/views/organizationStats/index.jsx
index 1fbb114b61..fc391d6a3c 100644
--- a/src/sentry/static/sentry/app/views/organizationStats/index.jsx
+++ b/src/sentry/static/sentry/app/views/organizationStats/index.jsx
@@ -6,6 +6,7 @@ import LoadingIndicator from '../../components/loadingIndicator';
 import OrganizationHomeContainer from '../../components/organizations/homeContainer';
 import StackedBarChart from '../../components/stackedBarChart';
 import OrganizationState from '../../mixins/organizationState';
+import Pagination from '../../components/pagination';
 
 import ProjectTable from './projectTable';
 import {t} from '../../locale';
@@ -40,6 +41,19 @@ const OrganizationStats = React.createClass({
     this.fetchData();
   },
 
+  componentWillReceiveProps(nextProps) {
+    // If query string changes, it will be due to pagination.
+    // Intentionally only fetch projects since stats are fetched for a fixed period during
+    // the initial payload
+    if (nextProps.location.search !== this.props.location.search) {
+      this.setState({
+        projectsError: false,
+        projectsRequestsPending: 1,
+        projectsLoading: true
+      });
+    }
+  },
+
   componentDidUpdate(prevProps) {
     let prevParams = prevProps.params, currentParams = this.props.params;
 
@@ -47,6 +61,15 @@ const OrganizationStats = React.createClass({
       this.fetchData();
     }
 
+    // Query string is changed, probably due to pagination, re-fetch only project data
+    if (prevProps.location.search !== this.props.location.search) {
+      // Not sure why, but when we use pagination and the new results load and re-render,
+      // the scroll position does not reset to top like in Audit Log
+      if (window.scrollTo) {
+        window.scrollTo(0, 0);
+      }
+      this.fetchProjectData();
+    }
     let state = this.state;
     if (state.statsLoading && !state.statsRequestsPending) {
       this.processOrgData();
@@ -56,6 +79,31 @@ const OrganizationStats = React.createClass({
     }
   },
 
+  fetchProjectData() {
+    this.api.request(this.getOrganizationProjectsEndpoint(), {
+      query: this.props.location.query,
+      success: (data, textStatus, jqxhr) => {
+        let projectMap = {};
+        data.forEach(project => {
+          projectMap[project.id] = project;
+        });
+
+        this.state.projectsRequestsPending -= 1;
+
+        this.setState({
+          pageLinks: jqxhr.getResponseHeader('Link'),
+          projectMap: projectMap,
+          projectsRequestsPending: this.state.projectsRequestsPending
+        });
+      },
+      error: () => {
+        this.setState({
+          projectsError: true
+        });
+      }
+    });
+  },
+
   fetchData() {
     this.setState({
       statsError: false,
@@ -116,25 +164,7 @@ const OrganizationStats = React.createClass({
       });
     });
 
-    this.api.request(this.getOrganizationProjectsEndpoint(), {
-      success: data => {
-        let projectMap = {};
-        data.forEach(project => {
-          projectMap[project.id] = project;
-        });
-
-        this.state.projectsRequestsPending -= 1;
-        this.setState({
-          projectMap: projectMap,
-          projectsRequestsPending: this.state.projectsRequestsPending
-        });
-      },
-      error: () => {
-        this.setState({
-          projectsError: true
-        });
-      }
-    });
+    this.fetchProjectData();
   },
 
   getOrganizationStatsEndpoint() {
@@ -286,7 +316,10 @@ const OrganizationStats = React.createClass({
                       projectMap={this.state.projectMap}
                     />}
           </div>
+
         </div>
+        {this.state.pageLinks &&
+          <Pagination pageLinks={this.state.pageLinks} {...this.props} />}
       </OrganizationHomeContainer>
     );
   }
diff --git a/src/sentry/static/sentry/app/views/organizationStats/projectTable.jsx b/src/sentry/static/sentry/app/views/organizationStats/projectTable.jsx
index e264405ec9..6e77447948 100644
--- a/src/sentry/static/sentry/app/views/organizationStats/projectTable.jsx
+++ b/src/sentry/static/sentry/app/views/organizationStats/projectTable.jsx
@@ -54,6 +54,10 @@ const ProjectTable = React.createClass({
           {projectTotals.map(item => {
             let project = projectMap[item.id];
 
+            if (!project) {
+              return null;
+            }
+
             return (
               <tr key={item.id}>
                 <td>
