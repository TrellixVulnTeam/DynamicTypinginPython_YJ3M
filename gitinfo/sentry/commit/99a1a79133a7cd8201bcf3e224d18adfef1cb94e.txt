commit 99a1a79133a7cd8201bcf3e224d18adfef1cb94e
Author: Evan Purkhiser <evanpurkhiser@gmail.com>
Date:   Tue Apr 2 13:54:04 2019 -0700

    ref(ui): Refactors CreateProject UI to styled components (#12533)
    
    This is a relatively large refactoring of the CreateProject component.
    Some of the highlights are:
    
     * The component is now nearly 100% Styled Components. Much of the less
       has been removed from onboarding and shared-components files.
    
     * The no-teams state has been removed, and a create team icon has been
       added next to the team selector.
    
     * The Platform picker now has a much better empty state, making it
       clear that you can create your project and that there are 3rd party
       clients available.
    
     * Small intermediate componets have been removed (Platformcard,
       onboarding project index).
    
     * You can now clear the platform via the platform picker.
    
    Overall the UI should be much cleaner and consistent, many small details
    have been updated.

diff --git a/src/sentry/static/sentry/app/routes.jsx b/src/sentry/static/sentry/app/routes.jsx
index 6648456422..e129984d43 100644
--- a/src/sentry/static/sentry/app/routes.jsx
+++ b/src/sentry/static/sentry/app/routes.jsx
@@ -673,13 +673,13 @@ function routes() {
       />
       <Route path="/organizations/new/" component={errorHandler(OrganizationCreate)} />
       <Route path="/onboarding/:orgId/" component={errorHandler(OrganizationContext)}>
-        <Route path="" component={errorHandler(OnboardingWizard)}>
+        <Route component={errorHandler(OnboardingWizard)}>
           <IndexRoute component={errorHandler(CreateProject)} />
-          {hook('routes:onboarding-survey')}
           <Route
-            path=":projectId/configure/(:platform)"
+            path=":projectId/configure/:platform/"
             component={errorHandler(OnboardingConfigure)}
           />
+          {hook('routes:onboarding-survey')}
         </Route>
       </Route>
       <Route component={errorHandler(OrganizationDetails)}>
diff --git a/src/sentry/static/sentry/app/views/onboarding/createProject.jsx b/src/sentry/static/sentry/app/views/onboarding/createProject.jsx
index e628dc3fe6..9250262a41 100644
--- a/src/sentry/static/sentry/app/views/onboarding/createProject.jsx
+++ b/src/sentry/static/sentry/app/views/onboarding/createProject.jsx
@@ -1,98 +1,70 @@
+import {browserHistory} from 'react-router';
 import PropTypes from 'prop-types';
 import React from 'react';
-import Reflux from 'reflux';
-import createReactClass from 'create-react-class';
-import styled from 'react-emotion';
 import * as Sentry from '@sentry/browser';
+import styled from 'react-emotion';
 
-import {Panel} from 'app/components/panels';
 import {getPlatformName} from 'app/views/onboarding/utils';
+import {inputStyles} from 'app/styles/input';
 import {openCreateTeamModal} from 'app/actionCreators/modal';
 import {t} from 'app/locale';
-import ApiMixin from 'app/mixins/apiMixin';
+import Alert from 'app/components/alert';
 import Button from 'app/components/button';
 import HookStore from 'app/stores/hookStore';
-import OnboardingProject from 'app/views/onboarding/project';
-import OrganizationState from 'app/mixins/organizationState';
-import PanelAlert from 'app/components/panels/panelAlert';
+import PageHeading from 'app/components/pageHeading';
+import PlatformPicker from 'app/views/onboarding/project/platformpicker';
+import PlatformiconTile from 'app/views/onboarding/project/platformiconTile';
 import ProjectActions from 'app/actions/projectActions';
-import TeamActions from 'app/actions/teamActions';
+import SelectControl from 'app/components/forms/selectControl';
+import SentryTypes from 'app/sentryTypes';
+import Tooltip from 'app/components/tooltip';
 import space from 'app/styles/space';
+import withApi from 'app/utils/withApi';
+import withOrganization from 'app/utils/withOrganization';
+import withTeams from 'app/utils/withTeams';
 
-const CreateProject = createReactClass({
-  displayName: 'CreateProject',
+class CreateProject extends React.Component {
+  static propTypes = {
+    api: PropTypes.object,
+    teams: PropTypes.arrayOf(SentryTypes.Team),
+    organization: SentryTypes.Organization,
+    nextStepUrl: PropTypes.func,
+  };
 
-  propTypes: {
-    getDocsUrl: PropTypes.func,
-  },
+  static defaultProps = {
+    nextStepUrl: ({slug, projectSlug, platform}) =>
+      `/onboarding/${slug}/${projectSlug}/configure/${platform}`,
+  };
 
-  contextTypes: {
-    router: PropTypes.object,
+  static contextTypes = {
     location: PropTypes.object,
-  },
-
-  mixins: [
-    ApiMixin,
-    OrganizationState,
-    Reflux.listenTo(TeamActions.createTeamSuccess, 'onTeamCreated'),
-  ],
-
-  getDefaultProps() {
-    return {
-      getDocsUrl: ({slug, projectSlug, platform}) =>
-        `/onboarding/${slug}/${projectSlug}/configure/${platform}`,
-    };
-  },
+  };
+
+  constructor(props, ...args) {
+    super(props, ...args);
 
-  getInitialState() {
-    const {teams} = this.getOrganization();
-    const accessTeams = teams.filter(team => team.hasAccess);
     const {query} = this.context.location;
+    const {teams} = this.props.organization;
+    const accessTeams = teams.filter(team => team.hasAccess);
 
     const team = query.team || (accessTeams.length && accessTeams[0].slug);
     const platform = getPlatformName(query.platform) ? query.platform : '';
 
-    return {
-      loading: true,
+    this.state = {
       error: false,
       projectName: getPlatformName(platform) || '',
       team,
       platform,
       inFlight: false,
     };
-  },
-
-  onTeamCreated() {
-    const {router} = this.context;
-    // After team gets created we need to force OrganizationContext to basically remount
-    router.replace({
-      pathname: router.location.pathname,
-      state: 'refresh',
-    });
-  },
-
-  navigateNextUrl(data) {
-    const organization = this.getOrganization();
-
-    const url =
-      HookStore.get('utils:onboarding-survey-url').length &&
-      organization.projects.length === 0
-        ? HookStore.get('utils:onboarding-survey-url')[0](data, organization)
-        : data.docsUrl;
+  }
 
-    this.setState({inFlight: false});
-    data.router.push(url);
-  },
+  createProject = e => {
+    e.preventDefault();
+    const {organization, api, nextStepUrl} = this.props;
+    const {projectName, platform, team} = this.state;
+    const {slug} = organization;
 
-  createProject() {
-    const {router} = this.context;
-    const {slug} = this.getOrganization();
-    const {projectName, platform, team, inFlight} = this.state;
-
-    //prevent double-trigger
-    if (inFlight) {
-      return;
-    }
     this.setState({inFlight: true});
 
     if (!projectName) {
@@ -103,7 +75,7 @@ const CreateProject = createReactClass({
       });
     }
 
-    this.api.request(`/teams/${slug}/${team}/projects/`, {
+    api.request(`/teams/${slug}/${team}/projects/`, {
       method: 'POST',
       data: {
         name: projectName,
@@ -112,9 +84,19 @@ const CreateProject = createReactClass({
       success: data => {
         ProjectActions.createSuccess(data);
 
-        // navigate to new url _now_
-        const docsUrl = this.props.getDocsUrl({slug, projectSlug: data.slug, platform});
-        this.navigateNextUrl({router, slug, projectSlug: data.slug, platform, docsUrl});
+        const urlData = {
+          slug: organization.slug,
+          projectSlug: data.slug,
+          platform: platform || 'other',
+        };
+
+        const defaultNextUrl = nextStepUrl(urlData);
+        const hookNextUrl =
+          organization.projects.length === 0 &&
+          HookStore.get('utils:onboarding-survey-url').length &&
+          HookStore.get('utils:onboarding-survey-url')[0](urlData, organization);
+
+        browserHistory.push(hookNextUrl || defaultNextUrl);
       },
       error: err => {
         this.setState({
@@ -135,70 +117,144 @@ const CreateProject = createReactClass({
         }
       },
     });
-  },
+  };
 
-  render() {
-    const {projectName, platform, error} = this.state;
-    const organization = this.getOrganization();
-    const {teams} = organization;
-    const accessTeams = teams.filter(team => team.hasAccess);
+  setPlatform = platformId =>
+    this.setState(({projectName, platform}) => ({
+      platform: platformId,
+      projectName:
+        !projectName || (platform && getPlatformName(platform) === projectName)
+          ? getPlatformName(platformId)
+          : projectName,
+    }));
 
-    const stepProps = {
-      next: this.createProject,
-      platform,
-      setPlatform: p => {
-        if (!projectName || (platform && getPlatformName(platform) === projectName)) {
-          this.setState({projectName: getPlatformName(p)});
-        }
-        this.setState({platform: p});
-      },
-      name: projectName,
-      setName: n => this.setState({projectName: n}),
-      team: this.state.team,
-      teams: accessTeams,
-      setTeam: teamSlug => this.setState({team: teamSlug}),
-    };
+  render() {
+    const {organization} = this.props;
+    const {projectName, team, platform, error, inFlight} = this.state;
+    const teams = this.props.teams.filter(filterTeam => filterTeam.hasAccess);
 
     return (
-      <div>
-        {error && <h2 className="alert alert-error">{error}</h2>}
-        {accessTeams.length ? (
-          <OnboardingProject {...stepProps} />
-        ) : (
-          <Panel
-            title={t('Cannot Create Project')}
-            body={
-              <React.Fragment>
-                <PanelAlert type="error">
-                  {t(
-                    'You cannot create a new project because there are no teams to assign it to.'
-                  )}
-                </PanelAlert>
-                <CreateTeamBody>
+      <React.Fragment>
+        {error && <Alert type="error">{error}</Alert>}
+
+        <div data-test-id="onboarding-info">
+          <PageHeading withMargins>{t('Create a new Project')}</PageHeading>
+          <HelpText>
+            {t(
+              `Projects allow you to scope events to a specific application in
+               your organization. For example, you might have separate projects
+               for your API server and frontend client.`
+            )}
+          </HelpText>
+
+          <PlatformPicker platform={platform} setPlatform={this.setPlatform} showOther />
+          <CreateProjectForm onSubmit={this.createProject}>
+            <div>
+              <FormLabel>{t('Give your project a name')}</FormLabel>
+              <ProjectNameInput>
+                <ProjectPlatformicon monoTone platform={platform} />
+                <input
+                  type="text"
+                  name="name"
+                  label={t('Project Name')}
+                  placeholder={t('Project name')}
+                  autoComplete="off"
+                  value={projectName}
+                  onChange={e => this.setState({projectName: e.target.value})}
+                />
+              </ProjectNameInput>
+            </div>
+            <div>
+              <FormLabel>{t('Assign a Team')}</FormLabel>
+              <TeamSelectInput>
+                <SelectControl
+                  name="select-team"
+                  clearable={false}
+                  value={team}
+                  placeholder={t('Select a Team')}
+                  onChange={val => this.setState({team: val})}
+                  options={teams.map(({slug}) => ({
+                    label: `#${slug}`,
+                    value: slug,
+                  }))}
+                />
+                <Tooltip title={t('Create a team')}>
                   <Button
-                    className="ref-create-team"
-                    priority="primary"
+                    borderless
+                    data-test-id="create-team"
+                    type="button"
+                    icon="icon-circle-add"
                     onClick={() =>
                       openCreateTeamModal({
                         organization,
+                        onClose: ({slug}) => this.setState({team: slug}),
                       })}
-                  >
-                    {t('Create a Team')}
-                  </Button>
-                </CreateTeamBody>
-              </React.Fragment>
-            }
-          />
-        )}
-      </div>
+                  />
+                </Tooltip>
+              </TeamSelectInput>
+            </div>
+            <div>
+              <Button
+                data-test-id="create-project"
+                priority="primary"
+                disabled={inFlight || !team || projectName === ''}
+              >
+                {t('Create Project')}
+              </Button>
+            </div>
+          </CreateProjectForm>
+        </div>
+      </React.Fragment>
     );
-  },
-});
+  }
+}
+
+export default withApi(withTeams(withOrganization(CreateProject)));
+export {CreateProject};
+
+const CreateProjectForm = styled('form')`
+  display: grid;
+  grid-template-columns: 300px 250px max-content;
+  grid-gap: ${space(2)};
+  align-items: end;
+  padding: ${space(3)} 0;
+  margin-top: ${space(2)};
+  box-shadow: 0 -1px 0 rgba(0, 0, 0, 0.1);
+  background: #fff;
+  position: sticky;
+  bottom: 0;
+`;
 
-export default CreateProject;
+const FormLabel = styled('div')`
+  font-size: ${p => p.theme.fontSizeExtraLarge};
+  margin-bottom: ${space(1)};
+`;
+
+const ProjectPlatformicon = styled(PlatformiconTile)`
+  font-size: 25px;
+`;
+
+const ProjectNameInput = styled('div')`
+  ${inputStyles};
+  display: grid;
+  grid-template-columns: min-content 1fr;
+  grid-gap: ${space(1)};
+  align-items: center;
+  padding: 5px 10px;
+
+  input {
+    border: 0;
+    outline: 0;
+  }
+`;
+
+const TeamSelectInput = styled('div')`
+  display: grid;
+  grid-template-columns: 1fr min-content;
+  align-items: center;
+`;
 
-const CreateTeamBody = styled('div')`
-  display: flex;
-  justify-content: center;
-  padding: ${space(2)};
+const HelpText = styled('p')`
+  color: ${p => p.theme.gray3};
+  max-width: 700px;
 `;
diff --git a/src/sentry/static/sentry/app/views/onboarding/project/index.jsx b/src/sentry/static/sentry/app/views/onboarding/project/index.jsx
deleted file mode 100644
index 595c668fa6..0000000000
--- a/src/sentry/static/sentry/app/views/onboarding/project/index.jsx
+++ /dev/null
@@ -1,115 +0,0 @@
-import PropTypes from 'prop-types';
-import React from 'react';
-import classnames from 'classnames';
-
-import {analytics} from 'app/utils/analytics';
-import PlatformPicker from 'app/views/onboarding/project/platformpicker';
-import PlatformiconTile from 'app/views/onboarding/project/platformiconTile';
-import SelectField from 'app/components/forms/selectField';
-import PageHeading from 'app/components/pageHeading';
-import {t} from 'app/locale';
-
-class OnboardingProject extends React.Component {
-  static propTypes = {
-    next: PropTypes.func,
-    setPlatform: PropTypes.func,
-    platform: PropTypes.string,
-    setName: PropTypes.func,
-    name: PropTypes.string,
-    team: PropTypes.string,
-    setTeam: PropTypes.func,
-    teams: PropTypes.array,
-  };
-
-  static defaultProps = {
-    team: '',
-    setTeam: () => {},
-    teams: [],
-  };
-
-  constructor(...args) {
-    super(...args);
-    this.state = {projectRequired: false};
-  }
-
-  componentWillReceiveProps(newProps) {
-    this.setWarning(newProps.name);
-  }
-
-  setWarning = value => {
-    this.setState({projectRequired: !value});
-  };
-
-  submit = () => {
-    this.setWarning(this.props.name);
-    if (this.props.name) {
-      analytics('platformpicker.create_project');
-      this.props.next();
-    }
-  };
-
-  renderTeamPicker = () => {
-    const {team, teams, setTeam} = this.props;
-    return (
-      <div className="new-project-team">
-        <PageHeading withMargins>{t('Team') + ':'}</PageHeading>
-        <div>
-          <SelectField
-            name="select-team"
-            clearable={false}
-            value={team}
-            style={{width: 180, marginBottom: 0}}
-            onChange={val => setTeam(val)}
-            options={teams.map(({slug}) => ({
-              label: `#${slug}`,
-              value: slug,
-            }))}
-          />
-        </div>
-      </div>
-    );
-  };
-
-  render() {
-    return (
-      <div className="onboarding-info">
-        <PageHeading withMargins>{t('Choose a language or framework') + ':'}</PageHeading>
-        <PlatformPicker {...this.props} showOther={true} />
-        <div className="create-project-form">
-          <div className="new-project-name client-platform">
-            <PageHeading withMargins>{t('Give your project a name') + ':'}</PageHeading>
-            <div
-              className={classnames('project-name-wrapper', {
-                required: this.state.projectRequired,
-              })}
-            >
-              <PlatformiconTile platform={this.props.platform} />
-              <input
-                type="text"
-                name="name"
-                label={t('Project Name')}
-                placeholder={t('Project name')}
-                autoComplete="off"
-                value={this.props.name}
-                onChange={e => this.props.setName(e.target.value)}
-              />
-            </div>
-          </div>
-          {this.renderTeamPicker()}
-          <div>
-            <button className="btn btn-primary new-project-submit" onClick={this.submit}>
-              {t('Create Project')}
-            </button>
-          </div>
-          <p>
-            {t(
-              'Projects allow you to scope events to a specific application in your organization. For example, you might have separate projects for your API server and frontend client.'
-            )}
-          </p>
-        </div>
-      </div>
-    );
-  }
-}
-
-export default OnboardingProject;
diff --git a/src/sentry/static/sentry/app/views/onboarding/project/platformCard.jsx b/src/sentry/static/sentry/app/views/onboarding/project/platformCard.jsx
deleted file mode 100644
index a7b7756dd8..0000000000
--- a/src/sentry/static/sentry/app/views/onboarding/project/platformCard.jsx
+++ /dev/null
@@ -1,29 +0,0 @@
-import PropTypes from 'prop-types';
-import React from 'react';
-import classnames from 'classnames';
-
-import {flattenedPlatforms} from 'app/views/onboarding/utils';
-import PlatformiconTile from 'app/views/onboarding/project/platformiconTile';
-
-class PlatformCard extends React.Component {
-  static propTypes = {
-    platform: PropTypes.string,
-    onClick: PropTypes.func,
-  };
-
-  render() {
-    const platform = flattenedPlatforms.find(p => p.id === this.props.platform);
-
-    return (
-      <span
-        className={classnames('platform-card', this.props.className)}
-        onClick={this.props.onClick}
-      >
-        <PlatformiconTile {...this.props} />
-        <h5> {platform.name} </h5>
-      </span>
-    );
-  }
-}
-
-export default PlatformCard;
diff --git a/src/sentry/static/sentry/app/views/onboarding/project/platformiconTile.jsx b/src/sentry/static/sentry/app/views/onboarding/project/platformiconTile.jsx
index 1dd047f3f3..3c4c402527 100644
--- a/src/sentry/static/sentry/app/views/onboarding/project/platformiconTile.jsx
+++ b/src/sentry/static/sentry/app/views/onboarding/project/platformiconTile.jsx
@@ -1,25 +1,100 @@
 import PropTypes from 'prop-types';
-import React from 'react';
-
-class PlatformiconTile extends React.Component {
-  static propTypes = {
-    platform: PropTypes.string,
-    className: PropTypes.string,
-  };
-
-  render() {
-    const {platform, className} = this.props;
-
-    return (
-      <li
-        className={`platform-tile list-unstyled ${platform} ${platform.split(
-          '-'
-        )[0]} ${className}`}
-      >
-        <span className={`platformicon platformicon-${platform}`} />
-      </li>
-    );
+import styled, {css} from 'react-emotion';
+
+const PLATFORM_ICONS = {
+  'app-engine': '\\e60b',
+  'c-sharp': '\\e60f',
+  'java-appengine': '\\e60b',
+  'javascript-angular': '\\e900',
+  'javascript-angularjs': '\\e900',
+  'javascript-ember': '\\e800',
+  'javascript-react': '\\e801',
+  'objective-c': '\\e60e',
+  'php-laravel': '\\e60d',
+  'python-bottle': '\\e60c',
+  'python-django': '\\e605',
+  'python-flask': '\\e610',
+  'ruby-rails': '\\e603',
+  angular: '\\e900',
+  angularjs: '\\e900',
+  apple: '\\e60e',
+  bottle: '\\e60c',
+  csharp: '\\e60f',
+  django: '\\e605',
+  dotnet: '\\e902',
+  elixir: 'e903',
+  ember: '\\e800',
+  flask: '\\e610',
+  generic: '\\e60a',
+  go: '\\e606',
+  ios: '\\e607',
+  java: '\\e608',
+  javascript: '\\e600',
+  js: '\\e600',
+  laravel: '\\e60d',
+  node: '\\e609',
+  objc: '\\e60e',
+  perl: '\\e901',
+  php: '\\e601',
+  python: '\\e602',
+  rails: '\\e603',
+  react: '\\e801',
+  ruby: '\\e604',
+  swift: '\\e60e',
+};
+
+// platformName: [background, forground]
+const PLATFORM_COLORS = {
+  python: ['#3060b8'],
+  javascript: ['#ecd744', '#111'],
+  ruby: ['#e03e2f', '#fff'],
+  rails: ['#e03e2f', '#fff'],
+  java: ['#ec5e44'],
+  php: ['#6c5fc7'],
+  node: ['#90c541'],
+  csharp: ['#638cd7'],
+  go: ['#fff', '#493e54'],
+  elixir: ['#4e3fb4'],
+  'app-engine': ['#ec5e44'],
+  'python-django': ['#57be8c'],
+  'javascript-react': ['#2d2d2d', '#00d8ff'],
+  'javascript-ember': ['#ed573e', '#fff'],
+  'javascript-angular': ['#e03e2f', '#fff'],
+};
+
+const selectPlatfrom = (object, platform) =>
+  object[platform] || object[platform.split('-')[0]];
+
+const getColorStyles = ({monoTone, platform}) => {
+  const [bg, fg] = selectPlatfrom(PLATFORM_COLORS, platform) || [];
+
+  return (
+    !monoTone &&
+    css`
+      background-color: ${bg || '#625471'};
+      color: ${fg || '#fff'};
+    `
+  );
+};
+
+const PlatformiconTile = styled('div')`
+  /* stylelint-disable-next-line font-family-no-missing-generic-family-keyword */
+  font-family: 'platformicons';
+  font-weight: normal;
+  speak: none;
+  -webkit-font-smoothing: antialiased;
+  -moz-osx-font-smoothing: grayscale;
+  ${getColorStyles};
+
+  &:before {
+    content: '${p => selectPlatfrom(PLATFORM_ICONS, p.platform) || '\\e60a'}';
   }
-}
+`;
+
+PlatformiconTile.propTypes = {
+  platform: PropTypes.string,
+  className: PropTypes.string,
+  monoTone: PropTypes.bool,
+};
 
 export default PlatformiconTile;
diff --git a/src/sentry/static/sentry/app/views/onboarding/project/platformpicker.jsx b/src/sentry/static/sentry/app/views/onboarding/project/platformpicker.jsx
index 6f76ad99fd..d4af445e20 100644
--- a/src/sentry/static/sentry/app/views/onboarding/project/platformpicker.jsx
+++ b/src/sentry/static/sentry/app/views/onboarding/project/platformpicker.jsx
@@ -1,16 +1,23 @@
+import {debounce} from 'lodash';
 import PropTypes from 'prop-types';
 import React from 'react';
-import classnames from 'classnames';
-import _ from 'lodash';
+import keydown from 'react-keydown';
+import styled from 'react-emotion';
 
 import {analytics} from 'app/utils/analytics';
+import {flattenedPlatforms, categoryList} from 'app/views/onboarding/utils';
+import {inputStyles} from 'app/styles/input';
+import {t, tct} from 'app/locale';
+import Button from 'app/components/button';
+import EmptyMessage from 'app/views/settings/components/emptyMessage';
+import ExternalLink from 'app/components/externalLink';
+import InlineSvg from 'app/components/inlineSvg';
 import ListLink from 'app/components/listLink';
 import NavTabs from 'app/components/navTabs';
-import {flattenedPlatforms, categoryList} from 'app/views/onboarding/utils';
-import PlatformCard from 'app/views/onboarding/project/platformCard';
-import {t} from 'app/locale';
+import PlatformiconTile from 'app/views/onboarding/project/platformiconTile';
+import space from 'app/styles/space';
 
-const allCategories = categoryList.concat({id: 'all', name: t('All')});
+const PLATFORM_CATEGORIES = categoryList.concat({id: 'all', name: t('All')});
 
 class PlatformPicker extends React.Component {
   static propTypes = {
@@ -19,112 +26,223 @@ class PlatformPicker extends React.Component {
     showOther: PropTypes.bool,
   };
 
-  static defaultProps = {showOther: true};
+  static defaultProps = {
+    showOther: true,
+  };
 
-  constructor(...args) {
-    super(...args);
+  constructor(props, ...args) {
+    super(props, ...args);
     this.state = {
-      tab: allCategories[0].id,
-      filter: (this.props.platform || '').split('-')[0],
+      category: PLATFORM_CATEGORIES[0].id,
+      filter: props.platform?.split('-')[0],
     };
   }
 
-  logSearch = _.debounce(() => {
-    if (this.state.filter) {
-      analytics('platformpicker.search', {
-        query: this.state.filter.toLowerCase(),
-        num_results: this.getPlatformList().length,
-      });
-    }
-  }, 300);
+  get platformList() {
+    const {category} = this.state;
+    const currentCategory = categoryList.find(({id}) => id === category);
 
-  getPlatformList = () => {
     const subsetMatch = ({id}) => id.includes(this.state.filter.toLowerCase());
-    let filtered;
+    const categoryMatch = platform =>
+      category === 'all' || currentCategory.platforms.includes(platform.id);
 
+    const filtered = flattenedPlatforms.filter(
+      this.state.filter ? subsetMatch : categoryMatch
+    );
+
+    return this.props.showOther ? filtered : filtered.filter(({id}) => id !== 'other');
+  }
+
+  logSearch = debounce(() => {
     if (this.state.filter) {
-      filtered = flattenedPlatforms.filter(subsetMatch);
-    } else {
-      const {tab} = this.state;
-      const currentCategory = categoryList.find(({id}) => id === tab);
-      const tabSubset = flattenedPlatforms.filter(platform => {
-        return tab === 'all' || currentCategory.platforms.includes(platform.id);
+      analytics('platformpicker.search', {
+        query: this.state.filter.toLowerCase(),
+        num_results: this.platformList.length,
       });
-      filtered = tabSubset.filter(subsetMatch);
     }
+  }, 300);
 
-    if (!this.props.showOther) {
-      filtered = filtered.filter(({id}) => id !== 'other');
+  @keydown('/')
+  focusSearch(e) {
+    if (e.target !== this.searchInput.current) {
+      this.searchInput.current.focus();
+      e.preventDefault();
     }
+  }
 
-    return filtered;
-  };
+  searchInput = React.createRef();
 
   render() {
-    const {filter} = this.state;
-    const filtered = this.getPlatformList();
+    const platformList = this.platformList;
+    const {setPlatform} = this.props;
+    const {filter, category} = this.state;
+
     return (
-      <div className="platform-picker">
-        <NavTabs>
-          <li style={{float: 'right', marginRight: 0}}>
-            <div className="platform-filter-container">
-              <span className="icon icon-search" />
-              <input
-                type="text"
-                value={this.state.filter}
-                className="platform-filter"
-                label={t('Filter')}
-                placeholder="Filter"
-                onChange={e => this.setState({filter: e.target.value}, this.logSearch)}
-              />
-            </div>
-          </li>
-          {allCategories.map(({id, name}) => {
-            return (
+      <React.Fragment>
+        <NavContainer>
+          <CategoryNav>
+            {PLATFORM_CATEGORIES.map(({id, name}) => (
               <ListLink
                 key={id}
                 onClick={e => {
-                  analytics('platformpicker.select_tab', {tab: id});
-                  this.setState({tab: id, filter: ''});
+                  analytics('platformpicker.select_tab', {category: id});
+                  this.setState({category: id, filter: ''});
                   e.preventDefault();
                 }}
                 to={''}
-                isActive={() => id === (filter ? 'all' : this.state.tab)}
+                isActive={() => id === (filter ? 'all' : category)}
               >
                 {name}
               </ListLink>
-            );
-          })}
-        </NavTabs>
-        {filtered.length ? (
-          <ul className="client-platform-list platform-tiles">
-            {filtered.map((platform, idx) => {
-              return (
-                <PlatformCard
-                  platform={platform.id}
-                  className={classnames({
-                    selected: this.props.platform === platform.id,
-                  })}
-                  key={platform.id}
-                  onClick={e => {
-                    analytics('platformpicker.select_platform', {platform: platform.id});
-                    this.props.setPlatform(platform.id);
-                    e.preventDefault();
-                  }}
-                />
-              );
-            })}
-          </ul>
-        ) : (
-          <p>
-            {t(
-              "Not finding your platform? There's a rich ecosystem of community supported SDKs as well (including Perl, CFML, Clojure, and ActionScript).\n Try searching for Sentry clients or contacting support."
+            ))}
+          </CategoryNav>
+          <SearchBar>
+            <InlineSvg src="icon-search" />
+            <input
+              type="text"
+              ref={this.searchInput}
+              value={filter}
+              label={t('Filter Platforms')}
+              placeholder={t('Filter Platforms')}
+              onChange={e => this.setState({filter: e.target.value}, this.logSearch)}
+            />
+          </SearchBar>
+        </NavContainer>
+        <PlatformList>
+          {platformList.map(platform => (
+            <PlatformCard
+              data-test-id={`platform-${platform.id}`}
+              key={platform.id}
+              platform={platform}
+              selected={this.props.platform === platform.id}
+              onClear={e => {
+                setPlatform('');
+                e.stopPropagation();
+              }}
+              onClick={e => {
+                analytics('platformpicker.select_platform', {platform: platform.id});
+                setPlatform(platform.id);
+              }}
+            />
+          ))}
+        </PlatformList>
+        {platformList.length === 0 && (
+          <EmptyMessage
+            icon="icon-project"
+            title={t("We don't have an SDK for that yet!")}
+          >
+            {tct(
+              `Not finding your platform? You can still create your project,
+              but looks like we don't have an official SDK for your platform
+              yet. However, there's a rich ecosystem of community supported
+              SDKs (including Perl, CFML, Clojure, and ActionScript). Try
+              [search:searching for Sentry clients] or contacting support.`,
+              {
+                search: (
+                  <ExternalLink href="https://github.com/search?q=-org%3Agetsentry+topic%3Asentry&type=Repositories" />
+                ),
+              }
             )}
-          </p>
+          </EmptyMessage>
         )}
-      </div>
+      </React.Fragment>
     );
   }
 }
 
+const NavContainer = styled('div')`
+  border-bottom: 1px solid ${p => p.theme.borderLight};
+  margin-bottom: ${space(2)};
+  display: grid;
+  grid-template-columns: 1fr 300px;
+  align-items: start;
+`;
+
+const SearchBar = styled('div')`
+  ${inputStyles};
+  padding: 0 8px;
+  color: ${p => p.theme.gray3};
+  display: flex;
+  align-items: center;
+  font-size: 15px;
+
+  input {
+    border: none;
+    background: none;
+    padding: 2px 4px;
+    width: 100%;
+
+    &:focus {
+      outline: none;
+    }
+  }
+`;
+
+const CategoryNav = styled(NavTabs)`
+  margin: 0;
+  margin-top: 4px;
+`;
+
+const PlatformList = styled('div')`
+  display: grid;
+  grid-gap: ${space(1)};
+  grid-template-columns: repeat(auto-fill, 112px);
+`;
+
+const StyledPlatformiconTile = styled(PlatformiconTile)`
+  width: 56px;
+  height: 56px;
+  font-size: 42px;
+  line-height: 58px;
+  text-align: center;
+  margin: ${space(2)};
+  border-radius: 5px;
+`;
+
+const ClearButton = styled(p => (
+  <Button {...p} icon="icon-circle-close" size="xsmall" borderless />
+))`
+  position: absolute;
+  top: -6px;
+  right: -6px;
+  height: 22px;
+  width: 22px;
+  border-radius: 50%;
+  background: #fff;
+  color: ${p => p.theme.gray4};
+`;
+
+const PlatformCard = styled(({platform, selected, onClear, ...props}) => (
+  <div {...props}>
+    <StyledPlatformiconTile platform={platform.id} />
+    <h3>{platform.name}</h3>
+    {selected && <ClearButton onClick={onClear} />}
+  </div>
+))`
+  position: relative;
+  display: flex;
+  flex-direction: column;
+  align-items: center;
+  padding: 0 0 14px;
+  border-radius: 4px;
+  cursor: pointer;
+  background: ${p => p.selected && '#ecf5fd'};
+
+  &:hover {
+    background: #f7f5fa;
+  }
+
+  h3 {
+    display: block;
+    width: 100%;
+    text-align: center;
+    font-size: 15px;
+    margin: 0;
+    overflow: hidden;
+    text-overflow: ellipsis;
+    white-space: nowrap;
+    line-height: 1.2;
+  }
+`;
+
 export default PlatformPicker;
diff --git a/src/sentry/static/sentry/app/views/projectInstall/newProject.jsx b/src/sentry/static/sentry/app/views/projectInstall/newProject.jsx
index 6dfce8f2b6..b62149a427 100644
--- a/src/sentry/static/sentry/app/views/projectInstall/newProject.jsx
+++ b/src/sentry/static/sentry/app/views/projectInstall/newProject.jsx
@@ -1,46 +1,37 @@
-import React from 'react';
-import createReactClass from 'create-react-class';
 import DocumentTitle from 'react-document-title';
+import React from 'react';
 import styled from 'react-emotion';
-import space from 'app/styles/space';
-
-import OrganizationState from 'app/mixins/organizationState';
 
 import CreateProject from 'app/views/onboarding/createProject';
 import ProjectSelector from 'app/components/projectHeader/projectSelector';
+import SentryTypes from 'app/sentryTypes';
+import space from 'app/styles/space';
+import withOrganization from 'app/utils/withOrganization';
 
-const NewProject = createReactClass({
-  displayName: 'NewProject',
-  mixins: [OrganizationState],
-
-  render() {
-    const hasSentry10 = this.getFeatures().has('sentry10');
-    return (
-      <Container>
-        {!hasSentry10 && (
-          <div className="sub-header flex flex-container flex-vertically-centered">
-            <div className="p-t-1 p-b-1">
-              <ProjectSelector organization={this.getOrganization()} />
-            </div>
-          </div>
-        )}
-        <div className="container">
-          <Content>
-            <DocumentTitle title={'Sentry'} />
-            <CreateProject
-              getDocsUrl={({slug, projectSlug, platform}) => {
-                if (platform === 'other') {
-                  platform = '';
-                }
-                return `/${slug}/${projectSlug}/getting-started/${platform}`;
-              }}
-            />
-          </Content>
+const NewProject = ({organization}) => (
+  <Container>
+    {!organization.features.includes('sentry10') && (
+      <div className="sub-header flex flex-container flex-vertically-centered">
+        <div className="p-t-1 p-b-1">
+          <ProjectSelector organization={organization} />
         </div>
-      </Container>
-    );
-  },
-});
+      </div>
+    )}
+    <div className="container">
+      <Content>
+        <DocumentTitle title={'Sentry'} />
+        <CreateProject
+          nextStepUrl={({slug, projectSlug, platform}) =>
+            `/${slug}/${projectSlug}/getting-started/${platform}/`}
+        />
+      </Content>
+    </div>
+  </Container>
+);
+
+NewProject.propTypes = {
+  organization: SentryTypes.Organization.isRequired,
+};
 
 const Container = styled('div')`
   flex: 1;
@@ -52,4 +43,4 @@ const Content = styled('div')`
   margin-top: ${space(3)};
 `;
 
-export default NewProject;
+export default withOrganization(NewProject);
diff --git a/src/sentry/static/sentry/less/onboarding.less b/src/sentry/static/sentry/less/onboarding.less
index 10c5e28ff7..56bbe6aa57 100644
--- a/src/sentry/static/sentry/less/onboarding.less
+++ b/src/sentry/static/sentry/less/onboarding.less
@@ -110,160 +110,3 @@
     }
   }
 }
-
-.create-project-form {
-  display: flex;
-  justify-content: space-between;
-  align-items: flex-end;
-  flex-wrap: wrap;
-  padding: 20px 0;
-  box-shadow: 0 -1px 0 rgba(0, 0, 0, 0.1);
-
-  position: sticky;
-  bottom: 0;
-  background: white;
-
-  p {
-    margin-top: 20px;
-    color: @50;
-  }
-
-  @media (max-width: @screen-sm-max) {
-    margin-top: 20px;
-  }
-}
-
-.new-project-name {
-  display: flex;
-  flex-direction: column;
-  background: #fff;
-  .clearfix;
-
-  .platform-tile {
-    display: inline-block;
-    vertical-align: middle;
-  }
-
-  h4 {
-    display: inline-block;
-  }
-
-  .project-name-wrapper {
-    .form-control;
-    position: relative;
-    padding-left: 44px;
-    width: 300px;
-
-    &.required {
-      border: 1px #e03e2f solid;
-    }
-
-    input {
-      background: none;
-      border: 0;
-      display: block;
-      width: 100%;
-      font-weight: 600;
-
-      &:focus {
-        outline: none;
-      }
-
-      &::placeholder {
-        color: @50;
-      }
-    }
-
-    .platform-tile {
-      position: absolute;
-      left: 6px;
-      top: 3px;
-      .platformicon {
-        color: @40 !important;
-      }
-    }
-  }
-}
-.platformicon-stack {
-  background-color: white;
-  position: absolute;
-}
-
-.platform-picker {
-  .nav-tabs {
-    border-bottom: 1px solid @trim;
-    margin: 0 0 15px;
-  }
-  .platform-filter-container {
-    .form-control;
-    border-radius: 22px;
-    padding: 0 8px;
-    position: relative;
-    top: -4px;
-
-    @media (max-width: @screen-sm-max) {
-      display: none;
-    }
-
-    .icon-search {
-      color: @30;
-      font-size: 12px;
-      margin-right: 4px;
-    }
-  }
-  .platform-filter {
-    background: transparent;
-    border: none;
-    font-size: 14px;
-    &:focus {
-      outline: none;
-    }
-
-    &::placeholder {
-      color: @50;
-    }
-  }
-  .platform-tiles {
-    margin: auto;
-    display: flex;
-    flex-wrap: wrap;
-    padding: 0 0 15px;
-
-    .platform-card {
-      display: flex;
-      flex-direction: column;
-      width: 120px;
-      padding: 0 0 14px;
-      cursor: pointer;
-      border-radius: 4px;
-
-      @media (max-width: @screen-sm-max) {
-        width: 70px;
-      }
-
-      &:hover {
-        background: #f7f5fa;
-      }
-
-      &.selected {
-        background: darken(@alert-info-bg-color, 2);
-      }
-    }
-
-    &.client-platform-list li {
-      margin: 0 auto;
-    }
-    &.client-platform-list.shade {
-      background-color: @40;
-      filter: brightness(0.4);
-    }
-  }
-
-  h5 {
-    text-align: center;
-    margin: 0;
-    font-size: 15px;
-    .truncate;
-    line-height: 1.2;
-  }
-}
diff --git a/src/sentry/static/sentry/less/shared-components.less b/src/sentry/static/sentry/less/shared-components.less
index 708ac32ba2..249847e9cd 100644
--- a/src/sentry/static/sentry/less/shared-components.less
+++ b/src/sentry/static/sentry/less/shared-components.less
@@ -2057,210 +2057,6 @@ ul.radio-inputs {
   }
 }
 
-/**
-* Client platform list
-* ============================================================================
-*/
-.client-platform-list {
-  .list-unstyled;
-  .clearfix;
-
-  li {
-    float: left;
-    margin: 0 20px 20px 0;
-    text-align: center;
-    position: relative;
-    min-width: 80px;
-    font-size: 16px;
-
-    a {
-      color: inherit;
-      opacity: 0.85;
-      .transition(opacity 0.1s);
-      font-weight: 600;
-
-      &:hover {
-        opacity: 1;
-      }
-
-      &:after {
-        display: block;
-        content: '';
-        position: absolute;
-        top: 0;
-        right: 0;
-        bottom: 0;
-        left: 0;
-      }
-    }
-  }
-
-  .platformicon {
-    display: block;
-    .square(56px);
-    font-size: 42px;
-    line-height: 58px;
-    text-align: center;
-    margin: 15px auto 15px;
-    border-radius: 5px;
-    color: #fff;
-    text-shadow: 0 2px 0 rgba(0, 0, 0, 0.06);
-    background: @gray; // Default BG
-  }
-
-  li.go .platformicon {
-    border: 2px solid @gray;
-  }
-}
-
-.client-platform-list,
-.client-platform {
-  li,
-  span {
-    &.python .platformicon {
-      background: darken(@blue, 6);
-    }
-    &.python-pylons .platformicon:before {
-      content: '\e602';
-    }
-    &.python-celery .platformicon:before {
-      content: '\e602';
-    }
-    &.python-awslambda .platformicon:before {
-      content: '\e602';
-    }
-    &.python-pyramid .platformicon:before {
-      content: '\e602';
-    }
-    &.python-tornado .platformicon:before {
-      content: '\e602';
-    }
-    &.python-rq .platformicon:before {
-      content: '\e602';
-    }
-    &.python-sanic .platformicon:before {
-      content: '\e602';
-    }
-
-    &.javascript .platformicon {
-      background: @yellow;
-      color: #111;
-      text-shadow: none;
-    }
-    &.javascript-backbone .platformicon:before {
-      content: '\e600';
-    }
-    &.javascript-vue .platformicon:before {
-      content: '\e600';
-    }
-
-    &.ruby .platformicon,
-    &.rails .platformicon,
-    &.javascript-angular .platformicon {
-      background: @red;
-      color: #fff;
-    }
-    &.ruby-rack .platformicon:before {
-      content: '\e604';
-    }
-
-    &.javascript-angular2 .platformicon {
-      background: @blue;
-      color: #fff;
-      &:before {
-        content: '\e900';
-      }
-    }
-
-    &.java .platformicon {
-      background: @orange;
-    }
-    &.java-log4j .platformicon:before {
-      content: '\e608';
-    }
-    &.java-log4j2 .platformicon:before {
-      content: '\e608';
-    }
-    &.java-logback .platformicon:before {
-      content: '\e608';
-    }
-
-    &.php .platformicon {
-      background: @purple;
-    }
-    &.php-symfony2 .platformicon:before {
-      content: '\e601';
-    }
-    &.php-monolog .platformicon:before {
-      content: '\e601';
-    }
-
-    &.python-django .platformicon {
-      background: @green;
-    }
-
-    &.node .platformicon {
-      background: #90c541;
-    }
-
-    &.node-express .platformicon:before {
-      content: '\e609';
-    }
-    &.node-connect .platformicon:before {
-      content: '\e609';
-    }
-    &.node-koa .platformicon:before {
-      content: '\e609';
-    }
-
-    &.objc .platformicon,
-    &.cocoa .platformicon {
-      background: @gray;
-    }
-
-    &.app-engine .platformicon {
-      background: @orange;
-    }
-
-    &.csharp .platformicon {
-      background: @blue-light;
-    }
-
-    &.go .platformicon {
-      color: @gray-dark;
-      background: #fff;
-      text-shadow: none;
-    }
-    &.go-http .platformicon:before {
-      content: '\e606';
-    }
-
-    &.javascript-react .platformicon {
-      background: #2d2d2d;
-      color: #00d8ff;
-    }
-
-    &.javascript-ember .platformicon {
-      background: #ed573e;
-      color: #fff;
-    }
-
-    &.elixir .platformicon {
-      background: @purple-dark;
-    }
-  }
-}
-
-.client-platform {
-  li,
-  span {
-    .platformicon {
-      color: black !important;
-      background: white !important;
-    }
-  }
-}
-
 /**
  * Error level colors
  * ============================================================================
diff --git a/src/sentry/utils/pytest/selenium.py b/src/sentry/utils/pytest/selenium.py
index e3d3ceac29..b5cc5fd47c 100644
--- a/src/sentry/utils/pytest/selenium.py
+++ b/src/sentry/utils/pytest/selenium.py
@@ -118,7 +118,7 @@ class Browser(object):
 
         return self
 
-    def wait_until(self, selector=None, title=None, timeout=3):
+    def wait_until(self, selector=None, xpath=None, title=None, timeout=3):
         """
         Waits until ``selector`` is found in the browser, or until ``timeout``
         is hit, whichever happens first.
@@ -127,6 +127,8 @@ class Browser(object):
 
         if selector:
             condition = expected_conditions.presence_of_element_located((By.CSS_SELECTOR, selector))
+        elif xpath:
+            condition = expected_conditions.presence_of_element_located((By.XPATH, xpath))
         elif title:
             condition = expected_conditions.title_is(title)
         else:
diff --git a/tests/acceptance/test_create_project.py b/tests/acceptance/test_create_project.py
index 8da2730528..efac9ea02f 100644
--- a/tests/acceptance/test_create_project.py
+++ b/tests/acceptance/test_create_project.py
@@ -26,10 +26,10 @@ class CreateProjectTest(AcceptanceTestCase):
         self.browser.get(self.path)
         self.browser.wait_until_not('.loading')
 
-        self.browser.click('.platformicon-java')
+        self.browser.click('[data-test-id="platform-java"]')
         self.browser.snapshot(name='create project')
 
-        self.browser.click('.new-project-submit')
+        self.browser.click('[data-test-id="create-project"]')
         self.browser.wait_until(title='java')
         self.browser.wait_until_not('.loading')
 
@@ -48,18 +48,16 @@ class CreateProjectTest(AcceptanceTestCase):
         )
         self.browser.get(self.path)
         self.browser.wait_until_not('.loading')
-        self.browser.snapshot(name='create project no teams - index')
 
-        self.browser.click('.ref-create-team')
+        self.browser.click('[data-test-id="create-team"]')
         self.browser.wait_until('.modal-dialog')
         input = self.browser.element('input[name="slug"]')
         input.send_keys('new-team')
 
-        self.browser.snapshot(name='create project no teams - create team modal')
         self.browser.element('.modal-dialog form').submit()
 
         # After creating team, should end up in onboarding screen
-        self.browser.wait_until('.onboarding-info')
+        self.browser.wait_until(xpath='//span[text()="#new-team"]')
         self.browser.snapshot(name='create project no teams - after create team')
 
     def test_many_teams(self):
diff --git a/tests/acceptance/test_onboarding.py b/tests/acceptance/test_onboarding.py
index 97e623c452..cde9157f24 100644
--- a/tests/acceptance/test_onboarding.py
+++ b/tests/acceptance/test_onboarding.py
@@ -32,8 +32,8 @@ class OrganizationOnboardingTest(AcceptanceTestCase):
         self.browser.wait_until_not('.loading-indicator')
         self.browser.snapshot(name='onboarding-choose-platform')
 
-        self.browser.click('.platform-tile.javascript-angular')
-        self.browser.click('.btn-primary')
+        self.browser.click('[data-test-id="platform-javascript-angular"]')
+        self.browser.click('[data-test-id="create-project"]')
 
         self.browser.wait_until('.onboarding-Configure')
         self.browser.wait_until_not('.loading-indicator')
diff --git a/tests/js/spec/views/onboarding/__snapshots__/createProject.spec.jsx.snap b/tests/js/spec/views/onboarding/__snapshots__/createProject.spec.jsx.snap
index 1993f36a22..0a72d5382c 100644
--- a/tests/js/spec/views/onboarding/__snapshots__/createProject.spec.jsx.snap
+++ b/tests/js/spec/views/onboarding/__snapshots__/createProject.spec.jsx.snap
@@ -1,134 +1,176 @@
 // Jest Snapshot v1, https://goo.gl/fbAQLP
 
 exports[`CreateProject should block if you have access to no teams 1`] = `
-<div>
-  <Panel
-    body={
-      <React.Fragment>
-        <PanelAlert
-          type="error"
-        >
-          You cannot create a new project because there are no teams to assign it to.
-        </PanelAlert>
-        <CreateTeamBody>
-          <Button
-            className="ref-create-team"
-            disabled={false}
-            onClick={[Function]}
-            priority="primary"
+<Fragment>
+  <div
+    data-test-id="onboarding-info"
+  >
+    <PageHeading
+      withMargins={true}
+    >
+      Create a new Project
+    </PageHeading>
+    <HelpText>
+      Projects allow you to scope events to a specific application in
+               your organization. For example, you might have separate projects
+               for your API server and frontend client.
+    </HelpText>
+    <PlatformPicker
+      platform=""
+      setPlatform={[Function]}
+      showOther={true}
+    />
+    <CreateProjectForm
+      onSubmit={[Function]}
+    >
+      <div>
+        <FormLabel>
+          Give your project a name
+        </FormLabel>
+        <ProjectNameInput>
+          <ProjectPlatformicon
+            monoTone={true}
+            platform=""
+          />
+          <input
+            autoComplete="off"
+            label="Project Name"
+            name="name"
+            onChange={[Function]}
+            placeholder="Project name"
+            type="text"
+            value=""
+          />
+        </ProjectNameInput>
+      </div>
+      <div>
+        <FormLabel>
+          Assign a Team
+        </FormLabel>
+        <TeamSelectInput>
+          <SelectControl
+            clearable={false}
+            height={36}
+            multiple={false}
+            name="select-team"
+            onChange={[Function]}
+            options={Array []}
+            placeholder="Select a Team"
+            value={0}
+          />
+          <Tooltip
+            title="Create a team"
           >
-            Create a Team
-          </Button>
-        </CreateTeamBody>
-      </React.Fragment>
-    }
-    title="Cannot Create Project"
-  />
-</div>
+            <Button
+              borderless={true}
+              data-test-id="create-team"
+              disabled={false}
+              icon="icon-circle-add"
+              onClick={[Function]}
+              type="button"
+            />
+          </Tooltip>
+        </TeamSelectInput>
+      </div>
+      <div>
+        <Button
+          data-test-id="create-project"
+          disabled={true}
+          priority="primary"
+        >
+          Create Project
+        </Button>
+      </div>
+    </CreateProjectForm>
+  </div>
+</Fragment>
 `;
 
 exports[`CreateProject should deal with incorrect platform name if its provided by url 1`] = `
 <CreateProject
-  getDocsUrl={[Function]}
   location={
     Object {
       "query": Object {},
     }
   }
+  nextStepUrl={[Function]}
+  organization={
+    Object {
+      "access": Array [
+        "org:read",
+        "org:write",
+        "org:admin",
+        "org:integrations",
+        "project:read",
+        "project:write",
+        "project:admin",
+        "team:read",
+        "team:write",
+        "team:admin",
+      ],
+      "features": Array [],
+      "id": "3",
+      "name": "Organization Name",
+      "onboardingTasks": Array [],
+      "projects": Array [],
+      "scrapeJavaScript": true,
+      "slug": "org-slug",
+      "status": Object {
+        "id": "active",
+        "name": "active",
+      },
+      "teams": Array [],
+    }
+  }
   params={
     Object {
       "orgId": "testOrg",
       "projectId": "",
     }
   }
+  teams={Array []}
 >
-  <div>
-    <OnboardingProject
-      name=""
-      next={[Function]}
+  <div
+    data-test-id="onboarding-info"
+  >
+    <PageHeading
+      withMargins={true}
+    >
+      <Wrapper
+        withMargins={true}
+      >
+        <h1
+          className="css-13ev48w-Wrapper e1f8hk460"
+        >
+          Create a new Project
+        </h1>
+      </Wrapper>
+    </PageHeading>
+    <HelpText>
+      <p
+        className="css-15uvbvk-HelpText eovdm175"
+      >
+        Projects allow you to scope events to a specific application in
+               your organization. For example, you might have separate projects
+               for your API server and frontend client.
+      </p>
+    </HelpText>
+    <PlatformPicker
       platform=""
-      setName={[Function]}
       setPlatform={[Function]}
-      setTeam={[Function]}
-      team="test"
-      teams={
-        Array [
-          Object {
-            "hasAccess": true,
-            "id": "1",
-            "name": "test",
-            "slug": "test",
-          },
-        ]
-      }
+      showOther={true}
     >
-      <div
-        className="onboarding-info"
-      >
-        <PageHeading
-          withMargins={true}
+      <NavContainer>
+        <div
+          className="css-xl0stt-NavContainer ewlrg790"
         >
-          <Wrapper
-            withMargins={true}
-          >
-            <h1
-              className="css-13ev48w-Wrapper e1f8hk460"
+          <CategoryNav>
+            <NavTabs
+              className="css-5tazcq-CategoryNav ewlrg792"
             >
-              Choose a language or framework:
-            </h1>
-          </Wrapper>
-        </PageHeading>
-        <PlatformPicker
-          name=""
-          next={[Function]}
-          platform=""
-          setName={[Function]}
-          setPlatform={[Function]}
-          setTeam={[Function]}
-          showOther={true}
-          team="test"
-          teams={
-            Array [
-              Object {
-                "hasAccess": true,
-                "id": "1",
-                "name": "test",
-                "slug": "test",
-              },
-            ]
-          }
-        >
-          <div
-            className="platform-picker"
-          >
-            <NavTabs>
               <ul
-                className="nav nav-tabs"
+                className="nav nav-tabs css-5tazcq-CategoryNav ewlrg792"
               >
-                <li
-                  style={
-                    Object {
-                      "float": "right",
-                      "marginRight": 0,
-                    }
-                  }
-                >
-                  <div
-                    className="platform-filter-container"
-                  >
-                    <span
-                      className="icon icon-search"
-                    />
-                    <input
-                      className="platform-filter"
-                      label="Filter"
-                      onChange={[Function]}
-                      placeholder="Filter"
-                      type="text"
-                      value=""
-                    />
-                  </div>
-                </li>
                 <ListLink
                   activeClassName="active"
                   index={false}
@@ -287,525 +329,877 @@ exports[`CreateProject should deal with incorrect platform name if its provided
                 </ListLink>
               </ul>
             </NavTabs>
-            <ul
-              className="client-platform-list platform-tiles"
+          </CategoryNav>
+          <SearchBar>
+            <div
+              className="css-1e5tau1-SearchBar-inputStyles ewlrg791"
             >
-              <PlatformCard
-                className=""
-                key="csharp"
-                onClick={[Function]}
-                platform="csharp"
+              <InlineSvg
+                src="icon-search"
               >
-                <span
-                  className="platform-card"
-                  onClick={[Function]}
+                <StyledSvg
+                  height="1em"
+                  viewBox={Object {}}
+                  width="1em"
                 >
-                  <PlatformiconTile
-                    className=""
-                    onClick={[Function]}
-                    platform="csharp"
+                  <svg
+                    className="css-ryh69w-StyledSvg e2idor0"
+                    height="1em"
+                    viewBox={Object {}}
+                    width="1em"
                   >
-                    <li
-                      className="platform-tile list-unstyled csharp csharp "
-                    >
-                      <span
-                        className="platformicon platformicon-csharp"
-                      />
-                    </li>
-                  </PlatformiconTile>
-                  <h5>
-                     
-                    C#
-                     
-                  </h5>
-                </span>
-              </PlatformCard>
-              <PlatformCard
-                className=""
-                key="java"
+                    <use
+                      href="#test"
+                      xlinkHref="#test"
+                    />
+                  </svg>
+                </StyledSvg>
+              </InlineSvg>
+              <input
+                label="Filter Platforms"
+                onChange={[Function]}
+                placeholder="Filter Platforms"
+                type="text"
+                value=""
+              />
+            </div>
+          </SearchBar>
+        </div>
+      </NavContainer>
+      <PlatformList>
+        <div
+          className="css-545rh6-PlatformList ewlrg793"
+        >
+          <PlatformCard
+            data-test-id="platform-csharp"
+            key="csharp"
+            onClear={[Function]}
+            onClick={[Function]}
+            platform={
+              Object {
+                "id": "csharp",
+                "language": "csharp",
+                "link": "https://docs.getsentry.com/hosted/clients/csharp/",
+                "name": "C#",
+                "type": "language",
+              }
+            }
+            selected={false}
+          >
+            <Component
+              className="css-16kw2fg-PlatformCard ewlrg796"
+              data-test-id="platform-csharp"
+              onClear={[Function]}
+              onClick={[Function]}
+              platform={
+                Object {
+                  "id": "csharp",
+                  "language": "csharp",
+                  "link": "https://docs.getsentry.com/hosted/clients/csharp/",
+                  "name": "C#",
+                  "type": "language",
+                }
+              }
+              selected={false}
+            >
+              <div
+                className="css-16kw2fg-PlatformCard ewlrg796"
+                data-test-id="platform-csharp"
                 onClick={[Function]}
-                platform="java"
               >
-                <span
-                  className="platform-card"
-                  onClick={[Function]}
+                <StyledPlatformiconTile
+                  platform="csharp"
                 >
-                  <PlatformiconTile
-                    className=""
-                    onClick={[Function]}
-                    platform="java"
-                  >
-                    <li
-                      className="platform-tile list-unstyled java java "
-                    >
-                      <span
-                        className="platformicon platformicon-java"
-                      />
-                    </li>
-                  </PlatformiconTile>
-                  <h5>
-                     
-                    Java
-                     
-                  </h5>
-                </span>
-              </PlatformCard>
-              <PlatformCard
-                className=""
-                key="javascript-angular"
+                  <div
+                    className="css-tzg8rc-PlatformiconTile-getColorStyles-StyledPlatformiconTile ewlrg794"
+                  />
+                </StyledPlatformiconTile>
+                <h3>
+                  C#
+                </h3>
+              </div>
+            </Component>
+          </PlatformCard>
+          <PlatformCard
+            data-test-id="platform-java"
+            key="java"
+            onClear={[Function]}
+            onClick={[Function]}
+            platform={
+              Object {
+                "id": "java",
+                "language": "java",
+                "link": "https://docs.getsentry.com/hosted/clients/java/",
+                "name": "Java",
+                "type": "language",
+              }
+            }
+            selected={false}
+          >
+            <Component
+              className="css-16kw2fg-PlatformCard ewlrg796"
+              data-test-id="platform-java"
+              onClear={[Function]}
+              onClick={[Function]}
+              platform={
+                Object {
+                  "id": "java",
+                  "language": "java",
+                  "link": "https://docs.getsentry.com/hosted/clients/java/",
+                  "name": "Java",
+                  "type": "language",
+                }
+              }
+              selected={false}
+            >
+              <div
+                className="css-16kw2fg-PlatformCard ewlrg796"
+                data-test-id="platform-java"
                 onClick={[Function]}
-                platform="javascript-angular"
               >
-                <span
-                  className="platform-card"
-                  onClick={[Function]}
+                <StyledPlatformiconTile
+                  platform="java"
                 >
-                  <PlatformiconTile
-                    className=""
-                    onClick={[Function]}
-                    platform="javascript-angular"
-                  >
-                    <li
-                      className="platform-tile list-unstyled javascript-angular javascript "
-                    >
-                      <span
-                        className="platformicon platformicon-javascript-angular"
-                      />
-                    </li>
-                  </PlatformiconTile>
-                  <h5>
-                     
-                    Angular
-                     
-                  </h5>
-                </span>
-              </PlatformCard>
-              <PlatformCard
-                className=""
-                key="javascript"
+                  <div
+                    className="css-lc48x8-PlatformiconTile-getColorStyles-StyledPlatformiconTile ewlrg794"
+                  />
+                </StyledPlatformiconTile>
+                <h3>
+                  Java
+                </h3>
+              </div>
+            </Component>
+          </PlatformCard>
+          <PlatformCard
+            data-test-id="platform-javascript-angular"
+            key="javascript-angular"
+            onClear={[Function]}
+            onClick={[Function]}
+            platform={
+              Object {
+                "id": "javascript-angular",
+                "language": "javascript",
+                "link": "https://docs.getsentry.com/hosted/clients/javascript/integrations/angular/",
+                "name": "Angular",
+                "type": "framework",
+              }
+            }
+            selected={false}
+          >
+            <Component
+              className="css-16kw2fg-PlatformCard ewlrg796"
+              data-test-id="platform-javascript-angular"
+              onClear={[Function]}
+              onClick={[Function]}
+              platform={
+                Object {
+                  "id": "javascript-angular",
+                  "language": "javascript",
+                  "link": "https://docs.getsentry.com/hosted/clients/javascript/integrations/angular/",
+                  "name": "Angular",
+                  "type": "framework",
+                }
+              }
+              selected={false}
+            >
+              <div
+                className="css-16kw2fg-PlatformCard ewlrg796"
+                data-test-id="platform-javascript-angular"
                 onClick={[Function]}
-                platform="javascript"
               >
-                <span
-                  className="platform-card"
-                  onClick={[Function]}
+                <StyledPlatformiconTile
+                  platform="javascript-angular"
                 >
-                  <PlatformiconTile
-                    className=""
-                    onClick={[Function]}
-                    platform="javascript"
-                  >
-                    <li
-                      className="platform-tile list-unstyled javascript javascript "
-                    >
-                      <span
-                        className="platformicon platformicon-javascript"
-                      />
-                    </li>
-                  </PlatformiconTile>
-                  <h5>
-                     
-                    JavaScript
-                     
-                  </h5>
-                </span>
-              </PlatformCard>
-              <PlatformCard
-                className=""
-                key="javascript-react"
+                  <div
+                    className="css-b15x81-PlatformiconTile-getColorStyles-StyledPlatformiconTile ewlrg794"
+                  />
+                </StyledPlatformiconTile>
+                <h3>
+                  Angular
+                </h3>
+              </div>
+            </Component>
+          </PlatformCard>
+          <PlatformCard
+            data-test-id="platform-javascript"
+            key="javascript"
+            onClear={[Function]}
+            onClick={[Function]}
+            platform={
+              Object {
+                "id": "javascript",
+                "language": "javascript",
+                "link": "https://docs.getsentry.com/hosted/clients/javascript/install/",
+                "name": "JavaScript",
+                "type": "language",
+              }
+            }
+            selected={false}
+          >
+            <Component
+              className="css-16kw2fg-PlatformCard ewlrg796"
+              data-test-id="platform-javascript"
+              onClear={[Function]}
+              onClick={[Function]}
+              platform={
+                Object {
+                  "id": "javascript",
+                  "language": "javascript",
+                  "link": "https://docs.getsentry.com/hosted/clients/javascript/install/",
+                  "name": "JavaScript",
+                  "type": "language",
+                }
+              }
+              selected={false}
+            >
+              <div
+                className="css-16kw2fg-PlatformCard ewlrg796"
+                data-test-id="platform-javascript"
                 onClick={[Function]}
-                platform="javascript-react"
               >
-                <span
-                  className="platform-card"
-                  onClick={[Function]}
+                <StyledPlatformiconTile
+                  platform="javascript"
                 >
-                  <PlatformiconTile
-                    className=""
-                    onClick={[Function]}
-                    platform="javascript-react"
-                  >
-                    <li
-                      className="platform-tile list-unstyled javascript-react javascript "
-                    >
-                      <span
-                        className="platformicon platformicon-javascript-react"
-                      />
-                    </li>
-                  </PlatformiconTile>
-                  <h5>
-                     
-                    React
-                     
-                  </h5>
-                </span>
-              </PlatformCard>
-              <PlatformCard
-                className=""
-                key="node-express"
+                  <div
+                    className="css-105qz5e-PlatformiconTile-getColorStyles-StyledPlatformiconTile ewlrg794"
+                  />
+                </StyledPlatformiconTile>
+                <h3>
+                  JavaScript
+                </h3>
+              </div>
+            </Component>
+          </PlatformCard>
+          <PlatformCard
+            data-test-id="platform-javascript-react"
+            key="javascript-react"
+            onClear={[Function]}
+            onClick={[Function]}
+            platform={
+              Object {
+                "id": "javascript-react",
+                "language": "javascript",
+                "link": "https://docs.getsentry.com/hosted/clients/javascript/integrations/react/",
+                "name": "React",
+                "type": "framework",
+              }
+            }
+            selected={false}
+          >
+            <Component
+              className="css-16kw2fg-PlatformCard ewlrg796"
+              data-test-id="platform-javascript-react"
+              onClear={[Function]}
+              onClick={[Function]}
+              platform={
+                Object {
+                  "id": "javascript-react",
+                  "language": "javascript",
+                  "link": "https://docs.getsentry.com/hosted/clients/javascript/integrations/react/",
+                  "name": "React",
+                  "type": "framework",
+                }
+              }
+              selected={false}
+            >
+              <div
+                className="css-16kw2fg-PlatformCard ewlrg796"
+                data-test-id="platform-javascript-react"
                 onClick={[Function]}
-                platform="node-express"
               >
-                <span
-                  className="platform-card"
-                  onClick={[Function]}
+                <StyledPlatformiconTile
+                  platform="javascript-react"
                 >
-                  <PlatformiconTile
-                    className=""
-                    onClick={[Function]}
-                    platform="node-express"
-                  >
-                    <li
-                      className="platform-tile list-unstyled node-express node "
-                    >
-                      <span
-                        className="platformicon platformicon-node-express"
-                      />
-                    </li>
-                  </PlatformiconTile>
-                  <h5>
-                     
-                    Express
-                     
-                  </h5>
-                </span>
-              </PlatformCard>
-              <PlatformCard
-                className=""
-                key="node"
+                  <div
+                    className="css-fosd7h-PlatformiconTile-getColorStyles-StyledPlatformiconTile ewlrg794"
+                  />
+                </StyledPlatformiconTile>
+                <h3>
+                  React
+                </h3>
+              </div>
+            </Component>
+          </PlatformCard>
+          <PlatformCard
+            data-test-id="platform-node-express"
+            key="node-express"
+            onClear={[Function]}
+            onClick={[Function]}
+            platform={
+              Object {
+                "id": "node-express",
+                "language": "node",
+                "link": "https://docs.getsentry.com/hosted/clients/node/integrations/express/",
+                "name": "Express",
+                "type": "framework",
+              }
+            }
+            selected={false}
+          >
+            <Component
+              className="css-16kw2fg-PlatformCard ewlrg796"
+              data-test-id="platform-node-express"
+              onClear={[Function]}
+              onClick={[Function]}
+              platform={
+                Object {
+                  "id": "node-express",
+                  "language": "node",
+                  "link": "https://docs.getsentry.com/hosted/clients/node/integrations/express/",
+                  "name": "Express",
+                  "type": "framework",
+                }
+              }
+              selected={false}
+            >
+              <div
+                className="css-16kw2fg-PlatformCard ewlrg796"
+                data-test-id="platform-node-express"
                 onClick={[Function]}
-                platform="node"
               >
-                <span
-                  className="platform-card"
-                  onClick={[Function]}
+                <StyledPlatformiconTile
+                  platform="node-express"
                 >
-                  <PlatformiconTile
-                    className=""
-                    onClick={[Function]}
-                    platform="node"
-                  >
-                    <li
-                      className="platform-tile list-unstyled node node "
-                    >
-                      <span
-                        className="platformicon platformicon-node"
-                      />
-                    </li>
-                  </PlatformiconTile>
-                  <h5>
-                     
-                    Node.js
-                     
-                  </h5>
-                </span>
-              </PlatformCard>
-              <PlatformCard
-                className=""
-                key="php-laravel"
+                  <div
+                    className="css-1wbn021-PlatformiconTile-getColorStyles-StyledPlatformiconTile ewlrg794"
+                  />
+                </StyledPlatformiconTile>
+                <h3>
+                  Express
+                </h3>
+              </div>
+            </Component>
+          </PlatformCard>
+          <PlatformCard
+            data-test-id="platform-node"
+            key="node"
+            onClear={[Function]}
+            onClick={[Function]}
+            platform={
+              Object {
+                "id": "node",
+                "language": "node",
+                "link": "https://docs.getsentry.com/hosted/clients/node/",
+                "name": "Node.js",
+                "type": "language",
+              }
+            }
+            selected={false}
+          >
+            <Component
+              className="css-16kw2fg-PlatformCard ewlrg796"
+              data-test-id="platform-node"
+              onClear={[Function]}
+              onClick={[Function]}
+              platform={
+                Object {
+                  "id": "node",
+                  "language": "node",
+                  "link": "https://docs.getsentry.com/hosted/clients/node/",
+                  "name": "Node.js",
+                  "type": "language",
+                }
+              }
+              selected={false}
+            >
+              <div
+                className="css-16kw2fg-PlatformCard ewlrg796"
+                data-test-id="platform-node"
                 onClick={[Function]}
-                platform="php-laravel"
               >
-                <span
-                  className="platform-card"
-                  onClick={[Function]}
+                <StyledPlatformiconTile
+                  platform="node"
                 >
-                  <PlatformiconTile
-                    className=""
-                    onClick={[Function]}
-                    platform="php-laravel"
-                  >
-                    <li
-                      className="platform-tile list-unstyled php-laravel php "
-                    >
-                      <span
-                        className="platformicon platformicon-php-laravel"
-                      />
-                    </li>
-                  </PlatformiconTile>
-                  <h5>
-                     
-                    Laravel
-                     
-                  </h5>
-                </span>
-              </PlatformCard>
-              <PlatformCard
-                className=""
-                key="php"
+                  <div
+                    className="css-1wbn021-PlatformiconTile-getColorStyles-StyledPlatformiconTile ewlrg794"
+                  />
+                </StyledPlatformiconTile>
+                <h3>
+                  Node.js
+                </h3>
+              </div>
+            </Component>
+          </PlatformCard>
+          <PlatformCard
+            data-test-id="platform-php-laravel"
+            key="php-laravel"
+            onClear={[Function]}
+            onClick={[Function]}
+            platform={
+              Object {
+                "id": "php-laravel",
+                "language": "php",
+                "link": "https://docs.getsentry.com/hosted/clients/php/integrations/laravel/",
+                "name": "Laravel",
+                "type": "framework",
+              }
+            }
+            selected={false}
+          >
+            <Component
+              className="css-16kw2fg-PlatformCard ewlrg796"
+              data-test-id="platform-php-laravel"
+              onClear={[Function]}
+              onClick={[Function]}
+              platform={
+                Object {
+                  "id": "php-laravel",
+                  "language": "php",
+                  "link": "https://docs.getsentry.com/hosted/clients/php/integrations/laravel/",
+                  "name": "Laravel",
+                  "type": "framework",
+                }
+              }
+              selected={false}
+            >
+              <div
+                className="css-16kw2fg-PlatformCard ewlrg796"
+                data-test-id="platform-php-laravel"
                 onClick={[Function]}
-                platform="php"
               >
-                <span
-                  className="platform-card"
-                  onClick={[Function]}
+                <StyledPlatformiconTile
+                  platform="php-laravel"
                 >
-                  <PlatformiconTile
-                    className=""
-                    onClick={[Function]}
-                    platform="php"
-                  >
-                    <li
-                      className="platform-tile list-unstyled php php "
-                    >
-                      <span
-                        className="platformicon platformicon-php"
-                      />
-                    </li>
-                  </PlatformiconTile>
-                  <h5>
-                     
-                    PHP
-                     
-                  </h5>
-                </span>
-              </PlatformCard>
-              <PlatformCard
-                className=""
-                key="php-symfony2"
+                  <div
+                    className="css-jzifau-PlatformiconTile-getColorStyles-StyledPlatformiconTile ewlrg794"
+                  />
+                </StyledPlatformiconTile>
+                <h3>
+                  Laravel
+                </h3>
+              </div>
+            </Component>
+          </PlatformCard>
+          <PlatformCard
+            data-test-id="platform-php"
+            key="php"
+            onClear={[Function]}
+            onClick={[Function]}
+            platform={
+              Object {
+                "id": "php",
+                "language": "php",
+                "link": "https://docs.getsentry.com/hosted/clients/php/",
+                "name": "PHP",
+                "type": "language",
+              }
+            }
+            selected={false}
+          >
+            <Component
+              className="css-16kw2fg-PlatformCard ewlrg796"
+              data-test-id="platform-php"
+              onClear={[Function]}
+              onClick={[Function]}
+              platform={
+                Object {
+                  "id": "php",
+                  "language": "php",
+                  "link": "https://docs.getsentry.com/hosted/clients/php/",
+                  "name": "PHP",
+                  "type": "language",
+                }
+              }
+              selected={false}
+            >
+              <div
+                className="css-16kw2fg-PlatformCard ewlrg796"
+                data-test-id="platform-php"
                 onClick={[Function]}
-                platform="php-symfony2"
               >
-                <span
-                  className="platform-card"
-                  onClick={[Function]}
+                <StyledPlatformiconTile
+                  platform="php"
                 >
-                  <PlatformiconTile
-                    className=""
-                    onClick={[Function]}
-                    platform="php-symfony2"
-                  >
-                    <li
-                      className="platform-tile list-unstyled php-symfony2 php "
-                    >
-                      <span
-                        className="platformicon platformicon-php-symfony2"
-                      />
-                    </li>
-                  </PlatformiconTile>
-                  <h5>
-                     
-                    Symfony2
-                     
-                  </h5>
-                </span>
-              </PlatformCard>
-              <PlatformCard
-                className=""
-                key="python-django"
+                  <div
+                    className="css-f6lc5m-PlatformiconTile-getColorStyles-StyledPlatformiconTile ewlrg794"
+                  />
+                </StyledPlatformiconTile>
+                <h3>
+                  PHP
+                </h3>
+              </div>
+            </Component>
+          </PlatformCard>
+          <PlatformCard
+            data-test-id="platform-php-symfony2"
+            key="php-symfony2"
+            onClear={[Function]}
+            onClick={[Function]}
+            platform={
+              Object {
+                "id": "php-symfony2",
+                "language": "php",
+                "link": "https://docs.getsentry.com/hosted/clients/php/integrations/symfony2/",
+                "name": "Symfony2",
+                "type": "framework",
+              }
+            }
+            selected={false}
+          >
+            <Component
+              className="css-16kw2fg-PlatformCard ewlrg796"
+              data-test-id="platform-php-symfony2"
+              onClear={[Function]}
+              onClick={[Function]}
+              platform={
+                Object {
+                  "id": "php-symfony2",
+                  "language": "php",
+                  "link": "https://docs.getsentry.com/hosted/clients/php/integrations/symfony2/",
+                  "name": "Symfony2",
+                  "type": "framework",
+                }
+              }
+              selected={false}
+            >
+              <div
+                className="css-16kw2fg-PlatformCard ewlrg796"
+                data-test-id="platform-php-symfony2"
                 onClick={[Function]}
-                platform="python-django"
               >
-                <span
-                  className="platform-card"
-                  onClick={[Function]}
+                <StyledPlatformiconTile
+                  platform="php-symfony2"
                 >
-                  <PlatformiconTile
-                    className=""
-                    onClick={[Function]}
-                    platform="python-django"
-                  >
-                    <li
-                      className="platform-tile list-unstyled python-django python "
-                    >
-                      <span
-                        className="platformicon platformicon-python-django"
-                      />
-                    </li>
-                  </PlatformiconTile>
-                  <h5>
-                     
-                    Django
-                     
-                  </h5>
-                </span>
-              </PlatformCard>
-              <PlatformCard
-                className=""
-                key="python-flask"
+                  <div
+                    className="css-f6lc5m-PlatformiconTile-getColorStyles-StyledPlatformiconTile ewlrg794"
+                  />
+                </StyledPlatformiconTile>
+                <h3>
+                  Symfony2
+                </h3>
+              </div>
+            </Component>
+          </PlatformCard>
+          <PlatformCard
+            data-test-id="platform-python-django"
+            key="python-django"
+            onClear={[Function]}
+            onClick={[Function]}
+            platform={
+              Object {
+                "id": "python-django",
+                "language": "python",
+                "link": "https://docs.getsentry.com/hosted/clients/python/integrations/django/",
+                "name": "Django",
+                "type": "framework",
+              }
+            }
+            selected={false}
+          >
+            <Component
+              className="css-16kw2fg-PlatformCard ewlrg796"
+              data-test-id="platform-python-django"
+              onClear={[Function]}
+              onClick={[Function]}
+              platform={
+                Object {
+                  "id": "python-django",
+                  "language": "python",
+                  "link": "https://docs.getsentry.com/hosted/clients/python/integrations/django/",
+                  "name": "Django",
+                  "type": "framework",
+                }
+              }
+              selected={false}
+            >
+              <div
+                className="css-16kw2fg-PlatformCard ewlrg796"
+                data-test-id="platform-python-django"
                 onClick={[Function]}
-                platform="python-flask"
               >
-                <span
-                  className="platform-card"
-                  onClick={[Function]}
+                <StyledPlatformiconTile
+                  platform="python-django"
                 >
-                  <PlatformiconTile
-                    className=""
-                    onClick={[Function]}
-                    platform="python-flask"
-                  >
-                    <li
-                      className="platform-tile list-unstyled python-flask python "
-                    >
-                      <span
-                        className="platformicon platformicon-python-flask"
-                      />
-                    </li>
-                  </PlatformiconTile>
-                  <h5>
-                     
-                    Flask
-                     
-                  </h5>
-                </span>
-              </PlatformCard>
-              <PlatformCard
-                className=""
-                key="python"
+                  <div
+                    className="css-13uplim-PlatformiconTile-getColorStyles-StyledPlatformiconTile ewlrg794"
+                  />
+                </StyledPlatformiconTile>
+                <h3>
+                  Django
+                </h3>
+              </div>
+            </Component>
+          </PlatformCard>
+          <PlatformCard
+            data-test-id="platform-python-flask"
+            key="python-flask"
+            onClear={[Function]}
+            onClick={[Function]}
+            platform={
+              Object {
+                "id": "python-flask",
+                "language": "python",
+                "link": "https://docs.getsentry.com/hosted/clients/python/integrations/flask/",
+                "name": "Flask",
+                "type": "framework",
+              }
+            }
+            selected={false}
+          >
+            <Component
+              className="css-16kw2fg-PlatformCard ewlrg796"
+              data-test-id="platform-python-flask"
+              onClear={[Function]}
+              onClick={[Function]}
+              platform={
+                Object {
+                  "id": "python-flask",
+                  "language": "python",
+                  "link": "https://docs.getsentry.com/hosted/clients/python/integrations/flask/",
+                  "name": "Flask",
+                  "type": "framework",
+                }
+              }
+              selected={false}
+            >
+              <div
+                className="css-16kw2fg-PlatformCard ewlrg796"
+                data-test-id="platform-python-flask"
                 onClick={[Function]}
-                platform="python"
               >
-                <span
-                  className="platform-card"
-                  onClick={[Function]}
+                <StyledPlatformiconTile
+                  platform="python-flask"
                 >
-                  <PlatformiconTile
-                    className=""
-                    onClick={[Function]}
-                    platform="python"
-                  >
-                    <li
-                      className="platform-tile list-unstyled python python "
-                    >
-                      <span
-                        className="platformicon platformicon-python"
-                      />
-                    </li>
-                  </PlatformiconTile>
-                  <h5>
-                     
-                    Python
-                     
-                  </h5>
-                </span>
-              </PlatformCard>
-              <PlatformCard
-                className=""
-                key="cocoa"
+                  <div
+                    className="css-1lbt1li-PlatformiconTile-getColorStyles-StyledPlatformiconTile ewlrg794"
+                  />
+                </StyledPlatformiconTile>
+                <h3>
+                  Flask
+                </h3>
+              </div>
+            </Component>
+          </PlatformCard>
+          <PlatformCard
+            data-test-id="platform-python"
+            key="python"
+            onClear={[Function]}
+            onClick={[Function]}
+            platform={
+              Object {
+                "id": "python",
+                "language": "python",
+                "link": "https://docs.getsentry.com/hosted/clients/python/",
+                "name": "Python",
+                "type": "language",
+              }
+            }
+            selected={false}
+          >
+            <Component
+              className="css-16kw2fg-PlatformCard ewlrg796"
+              data-test-id="platform-python"
+              onClear={[Function]}
+              onClick={[Function]}
+              platform={
+                Object {
+                  "id": "python",
+                  "language": "python",
+                  "link": "https://docs.getsentry.com/hosted/clients/python/",
+                  "name": "Python",
+                  "type": "language",
+                }
+              }
+              selected={false}
+            >
+              <div
+                className="css-16kw2fg-PlatformCard ewlrg796"
+                data-test-id="platform-python"
                 onClick={[Function]}
-                platform="cocoa"
               >
-                <span
-                  className="platform-card"
-                  onClick={[Function]}
+                <StyledPlatformiconTile
+                  platform="python"
                 >
-                  <PlatformiconTile
-                    className=""
-                    onClick={[Function]}
-                    platform="cocoa"
-                  >
-                    <li
-                      className="platform-tile list-unstyled cocoa cocoa "
-                    >
-                      <span
-                        className="platformicon platformicon-cocoa"
-                      />
-                    </li>
-                  </PlatformiconTile>
-                  <h5>
-                     
-                    React-Native
-                     
-                  </h5>
-                </span>
-              </PlatformCard>
-              <PlatformCard
-                className=""
-                key="ruby-rails"
+                  <div
+                    className="css-1vvuenp-PlatformiconTile-getColorStyles-StyledPlatformiconTile ewlrg794"
+                  />
+                </StyledPlatformiconTile>
+                <h3>
+                  Python
+                </h3>
+              </div>
+            </Component>
+          </PlatformCard>
+          <PlatformCard
+            data-test-id="platform-cocoa"
+            key="cocoa"
+            onClear={[Function]}
+            onClick={[Function]}
+            platform={
+              Object {
+                "id": "cocoa",
+                "language": "cocoa",
+                "link": "https://docs.getsentry.com/hosted/clients/react-native/",
+                "name": "React-Native",
+                "type": "language",
+              }
+            }
+            selected={false}
+          >
+            <Component
+              className="css-16kw2fg-PlatformCard ewlrg796"
+              data-test-id="platform-cocoa"
+              onClear={[Function]}
+              onClick={[Function]}
+              platform={
+                Object {
+                  "id": "cocoa",
+                  "language": "cocoa",
+                  "link": "https://docs.getsentry.com/hosted/clients/react-native/",
+                  "name": "React-Native",
+                  "type": "language",
+                }
+              }
+              selected={false}
+            >
+              <div
+                className="css-16kw2fg-PlatformCard ewlrg796"
+                data-test-id="platform-cocoa"
                 onClick={[Function]}
-                platform="ruby-rails"
               >
-                <span
-                  className="platform-card"
-                  onClick={[Function]}
+                <StyledPlatformiconTile
+                  platform="cocoa"
                 >
-                  <PlatformiconTile
-                    className=""
-                    onClick={[Function]}
-                    platform="ruby-rails"
-                  >
-                    <li
-                      className="platform-tile list-unstyled ruby-rails ruby "
-                    >
-                      <span
-                        className="platformicon platformicon-ruby-rails"
-                      />
-                    </li>
-                  </PlatformiconTile>
-                  <h5>
-                     
-                    Rails
-                     
-                  </h5>
-                </span>
-              </PlatformCard>
-              <PlatformCard
-                className=""
-                key="ruby"
+                  <div
+                    className="css-yhb6wb-PlatformiconTile-getColorStyles-StyledPlatformiconTile ewlrg794"
+                  />
+                </StyledPlatformiconTile>
+                <h3>
+                  React-Native
+                </h3>
+              </div>
+            </Component>
+          </PlatformCard>
+          <PlatformCard
+            data-test-id="platform-ruby-rails"
+            key="ruby-rails"
+            onClear={[Function]}
+            onClick={[Function]}
+            platform={
+              Object {
+                "id": "ruby-rails",
+                "language": "ruby",
+                "link": "https://docs.getsentry.com/hosted/clients/ruby/integrations/rails/",
+                "name": "Rails",
+                "type": "framework",
+              }
+            }
+            selected={false}
+          >
+            <Component
+              className="css-16kw2fg-PlatformCard ewlrg796"
+              data-test-id="platform-ruby-rails"
+              onClear={[Function]}
+              onClick={[Function]}
+              platform={
+                Object {
+                  "id": "ruby-rails",
+                  "language": "ruby",
+                  "link": "https://docs.getsentry.com/hosted/clients/ruby/integrations/rails/",
+                  "name": "Rails",
+                  "type": "framework",
+                }
+              }
+              selected={false}
+            >
+              <div
+                className="css-16kw2fg-PlatformCard ewlrg796"
+                data-test-id="platform-ruby-rails"
                 onClick={[Function]}
-                platform="ruby"
               >
-                <span
-                  className="platform-card"
-                  onClick={[Function]}
+                <StyledPlatformiconTile
+                  platform="ruby-rails"
                 >
-                  <PlatformiconTile
-                    className=""
-                    onClick={[Function]}
-                    platform="ruby"
-                  >
-                    <li
-                      className="platform-tile list-unstyled ruby ruby "
-                    >
-                      <span
-                        className="platformicon platformicon-ruby"
-                      />
-                    </li>
-                  </PlatformiconTile>
-                  <h5>
-                     
-                    Ruby
-                     
-                  </h5>
-                </span>
-              </PlatformCard>
-            </ul>
-          </div>
-        </PlatformPicker>
-        <div
-          className="create-project-form"
-        >
-          <div
-            className="new-project-name client-platform"
+                  <div
+                    className="css-15nw1ir-PlatformiconTile-getColorStyles-StyledPlatformiconTile ewlrg794"
+                  />
+                </StyledPlatformiconTile>
+                <h3>
+                  Rails
+                </h3>
+              </div>
+            </Component>
+          </PlatformCard>
+          <PlatformCard
+            data-test-id="platform-ruby"
+            key="ruby"
+            onClear={[Function]}
+            onClick={[Function]}
+            platform={
+              Object {
+                "id": "ruby",
+                "language": "ruby",
+                "link": "https://docs.getsentry.com/hosted/clients/ruby/",
+                "name": "Ruby",
+                "type": "language",
+              }
+            }
+            selected={false}
           >
-            <PageHeading
-              withMargins={true}
+            <Component
+              className="css-16kw2fg-PlatformCard ewlrg796"
+              data-test-id="platform-ruby"
+              onClear={[Function]}
+              onClick={[Function]}
+              platform={
+                Object {
+                  "id": "ruby",
+                  "language": "ruby",
+                  "link": "https://docs.getsentry.com/hosted/clients/ruby/",
+                  "name": "Ruby",
+                  "type": "language",
+                }
+              }
+              selected={false}
             >
-              <Wrapper
-                withMargins={true}
+              <div
+                className="css-16kw2fg-PlatformCard ewlrg796"
+                data-test-id="platform-ruby"
+                onClick={[Function]}
               >
-                <h1
-                  className="css-13ev48w-Wrapper e1f8hk460"
+                <StyledPlatformiconTile
+                  platform="ruby"
                 >
-                  Give your project a name:
-                </h1>
-              </Wrapper>
-            </PageHeading>
+                  <div
+                    className="css-ze44n6-PlatformiconTile-getColorStyles-StyledPlatformiconTile ewlrg794"
+                  />
+                </StyledPlatformiconTile>
+                <h3>
+                  Ruby
+                </h3>
+              </div>
+            </Component>
+          </PlatformCard>
+        </div>
+      </PlatformList>
+    </PlatformPicker>
+    <CreateProjectForm
+      onSubmit={[Function]}
+    >
+      <form
+        className="css-1ibxl16-CreateProjectForm eovdm170"
+        onSubmit={[Function]}
+      >
+        <div>
+          <FormLabel>
             <div
-              className="project-name-wrapper"
+              className="css-4lvcxw-FormLabel eovdm171"
             >
-              <PlatformiconTile
+              Give your project a name
+            </div>
+          </FormLabel>
+          <ProjectNameInput>
+            <div
+              className="css-1dtytc5-ProjectNameInput-inputStyles eovdm173"
+            >
+              <ProjectPlatformicon
+                monoTone={true}
                 platform=""
               >
-                <li
-                  className="platform-tile list-unstyled   undefined"
-                >
-                  <span
-                    className="platformicon platformicon-"
-                  />
-                </li>
-              </PlatformiconTile>
+                <div
+                  className="css-th4j3q-PlatformiconTile-ProjectPlatformicon eovdm172"
+                />
+              </ProjectPlatformicon>
               <input
                 autoComplete="off"
                 label="Project Name"
@@ -816,476 +1210,472 @@ exports[`CreateProject should deal with incorrect platform name if its provided
                 value=""
               />
             </div>
-          </div>
-          <div
-            className="new-project-team"
-          >
-            <PageHeading
-              withMargins={true}
+          </ProjectNameInput>
+        </div>
+        <div>
+          <FormLabel>
+            <div
+              className="css-4lvcxw-FormLabel eovdm171"
             >
-              <Wrapper
-                withMargins={true}
-              >
-                <h1
-                  className="css-13ev48w-Wrapper e1f8hk460"
-                >
-                  Team:
-                </h1>
-              </Wrapper>
-            </PageHeading>
-            <div>
-              <SelectField
+              Assign a Team
+            </div>
+          </FormLabel>
+          <TeamSelectInput>
+            <div
+              className="css-75pel-TeamSelectInput eovdm174"
+            >
+              <SelectControl
                 clearable={false}
-                disabled={false}
-                hideErrorMessage={false}
+                height={36}
                 multiple={false}
                 name="select-team"
                 onChange={[Function]}
-                options={
-                  Array [
-                    Object {
-                      "label": "#test",
-                      "value": "test",
-                    },
-                  ]
-                }
-                required={false}
-                style={
-                  Object {
-                    "marginBottom": 0,
-                    "width": 180,
-                  }
-                }
-                value="test"
+                options={Array []}
+                placeholder="Select a Team"
+                value={0}
               >
-                <div
-                  className=""
-                  style={
-                    Object {
-                      "marginBottom": 0,
-                      "width": 180,
-                    }
-                  }
+                <StyledSelect
+                  arrowRenderer={[Function]}
+                  backspaceRemoves={false}
+                  clearable={false}
+                  deleteRemoves={false}
+                  height={36}
+                  multiple={false}
+                  name="select-team"
+                  onChange={[Function]}
+                  options={Array []}
+                  placeholder="Select a Team"
+                  value={0}
                 >
-                  <div
-                    className="controls"
+                  <ForwardRef(SelectPicker)
+                    arrowRenderer={[Function]}
+                    backspaceRemoves={false}
+                    className="css-6lbkok-StyledSelect eho28m20"
+                    clearable={false}
+                    deleteRemoves={false}
+                    height={36}
+                    multiple={false}
+                    name="select-team"
+                    onChange={[Function]}
+                    options={Array []}
+                    placeholder="Select a Team"
+                    value={0}
                   >
-                    <StyledSelectControl
+                    <SelectPicker
+                      arrowRenderer={[Function]}
+                      backspaceRemoves={false}
+                      className="css-6lbkok-StyledSelect eho28m20"
                       clearable={false}
-                      disabled={false}
-                      id="id-select-team"
+                      deleteRemoves={false}
+                      forwardedRef={null}
+                      height={36}
                       multiple={false}
                       name="select-team"
                       onChange={[Function]}
-                      options={
-                        Array [
-                          Object {
-                            "label": "#test",
-                            "value": "test",
-                          },
-                        ]
-                      }
-                      required={false}
-                      value="test"
+                      options={Array []}
+                      placeholder="Select a Team"
+                      value={0}
                     >
-                      <SelectControl
-                        className="css-j6zs66-StyledSelectControl e1qrhqd00"
+                      <Select
+                        arrowRenderer={[Function]}
+                        autosize={true}
+                        backspaceRemoves={false}
+                        backspaceToRemoveMessage="Press backspace to remove {label}"
+                        className="css-6lbkok-StyledSelect eho28m20"
+                        clearAllText="Clear all"
+                        clearRenderer={[Function]}
+                        clearValueText="Clear value"
                         clearable={false}
+                        closeOnSelect={true}
+                        deleteRemoves={false}
+                        delimiter=","
                         disabled={false}
+                        escapeClearsValue={true}
+                        filterOptions={[Function]}
                         height={36}
-                        id="id-select-team"
+                        ignoreAccents={true}
+                        ignoreCase={true}
+                        inputProps={Object {}}
+                        isLoading={false}
+                        joinValues={false}
+                        labelKey="label"
+                        matchPos="any"
+                        matchProp="any"
+                        menuBuffer={0}
+                        menuRenderer={[Function]}
+                        multi={false}
                         multiple={false}
                         name="select-team"
+                        noResultsText="No results found"
+                        onBlurResetsInput={true}
                         onChange={[Function]}
-                        options={
-                          Array [
-                            Object {
-                              "label": "#test",
-                              "value": "test",
-                            },
-                          ]
-                        }
+                        onCloseResetsInput={true}
+                        onSelectResetsInput={true}
+                        openOnClick={true}
+                        optionComponent={[Function]}
+                        options={Array []}
+                        pageSize={5}
+                        placeholder="Select a Team"
+                        removeSelected={true}
                         required={false}
-                        value="test"
+                        rtl={false}
+                        scrollMenuIntoView={true}
+                        searchable={true}
+                        simpleValue={false}
+                        tabSelectsValue={true}
+                        trimFilter={true}
+                        value={0}
+                        valueComponent={[Function]}
+                        valueKey="value"
                       >
-                        <StyledSelect
-                          arrowRenderer={[Function]}
-                          backspaceRemoves={false}
-                          className="css-j6zs66-StyledSelectControl e1qrhqd00"
-                          clearable={false}
-                          deleteRemoves={false}
-                          disabled={false}
-                          height={36}
-                          id="id-select-team"
-                          multiple={false}
-                          name="select-team"
-                          onChange={[Function]}
-                          options={
-                            Array [
-                              Object {
-                                "label": "#test",
-                                "value": "test",
-                              },
-                            ]
-                          }
-                          required={false}
-                          value="test"
+                        <div
+                          className="Select css-6lbkok-StyledSelect eho28m20 is-searchable Select--single"
                         >
-                          <ForwardRef(SelectPicker)
-                            arrowRenderer={[Function]}
-                            backspaceRemoves={false}
-                            className="e1qrhqd00 css-pr263a-StyledSelect-StyledSelectControl eho28m20"
-                            clearable={false}
-                            deleteRemoves={false}
-                            disabled={false}
-                            height={36}
-                            id="id-select-team"
-                            multiple={false}
-                            name="select-team"
-                            onChange={[Function]}
-                            options={
-                              Array [
-                                Object {
-                                  "label": "#test",
-                                  "value": "test",
-                                },
-                              ]
-                            }
-                            required={false}
-                            value="test"
+                          <div
+                            className="Select-control"
+                            onKeyDown={[Function]}
+                            onMouseDown={[Function]}
+                            onTouchEnd={[Function]}
+                            onTouchMove={[Function]}
+                            onTouchStart={[Function]}
                           >
-                            <SelectPicker
-                              arrowRenderer={[Function]}
-                              backspaceRemoves={false}
-                              className="e1qrhqd00 css-pr263a-StyledSelect-StyledSelectControl eho28m20"
-                              clearable={false}
-                              deleteRemoves={false}
-                              disabled={false}
-                              forwardedRef={null}
-                              height={36}
-                              id="id-select-team"
-                              multiple={false}
-                              name="select-team"
-                              onChange={[Function]}
-                              options={
-                                Array [
-                                  Object {
-                                    "label": "#test",
-                                    "value": "test",
-                                  },
-                                ]
-                              }
-                              required={false}
-                              value="test"
+                            <span
+                              className="Select-multi-value-wrapper"
+                              id="react-select-5--value"
                             >
-                              <Select
-                                arrowRenderer={[Function]}
-                                autosize={true}
-                                backspaceRemoves={false}
-                                backspaceToRemoveMessage="Press backspace to remove {label}"
-                                className="e1qrhqd00 css-pr263a-StyledSelect-StyledSelectControl eho28m20"
-                                clearAllText="Clear all"
-                                clearRenderer={[Function]}
-                                clearValueText="Clear value"
-                                clearable={false}
-                                closeOnSelect={true}
-                                deleteRemoves={false}
-                                delimiter=","
-                                disabled={false}
-                                escapeClearsValue={true}
-                                filterOptions={[Function]}
-                                height={36}
-                                id="id-select-team"
-                                ignoreAccents={true}
-                                ignoreCase={true}
-                                inputProps={Object {}}
-                                isLoading={false}
-                                joinValues={false}
-                                labelKey="label"
-                                matchPos="any"
-                                matchProp="any"
-                                menuBuffer={0}
-                                menuRenderer={[Function]}
-                                multi={false}
-                                multiple={false}
-                                name="select-team"
-                                noResultsText="No results found"
-                                onBlurResetsInput={true}
+                              <div
+                                className="Select-placeholder"
+                              >
+                                Select a Team
+                              </div>
+                              <AutosizeInput
+                                aria-activedescendant="react-select-5--value"
+                                aria-expanded="false"
+                                aria-haspopup="false"
+                                aria-owns=""
+                                className="Select-input"
+                                injectStyles={true}
+                                minWidth="5"
+                                onBlur={[Function]}
                                 onChange={[Function]}
-                                onCloseResetsInput={true}
-                                onSelectResetsInput={true}
-                                openOnClick={true}
-                                optionComponent={[Function]}
-                                options={
-                                  Array [
-                                    Object {
-                                      "label": "#test",
-                                      "value": "test",
-                                    },
-                                  ]
-                                }
-                                pageSize={5}
-                                placeholder="Select..."
-                                removeSelected={true}
+                                onFocus={[Function]}
                                 required={false}
-                                rtl={false}
-                                scrollMenuIntoView={true}
-                                searchable={true}
-                                simpleValue={false}
-                                tabSelectsValue={true}
-                                trimFilter={true}
-                                value="test"
-                                valueComponent={[Function]}
-                                valueKey="value"
+                                role="combobox"
+                                value=""
                               >
                                 <div
-                                  className="Select e1qrhqd00 css-pr263a-StyledSelect-StyledSelectControl eho28m20 has-value is-searchable Select--single"
+                                  className="Select-input"
+                                  style={
+                                    Object {
+                                      "display": "inline-block",
+                                    }
+                                  }
                                 >
                                   <input
-                                    disabled={false}
-                                    key="hidden.0"
-                                    name="select-team"
-                                    type="hidden"
-                                    value="test"
+                                    aria-activedescendant="react-select-5--value"
+                                    aria-expanded="false"
+                                    aria-haspopup="false"
+                                    aria-owns=""
+                                    onBlur={[Function]}
+                                    onChange={[Function]}
+                                    onFocus={[Function]}
+                                    required={false}
+                                    role="combobox"
+                                    style={
+                                      Object {
+                                        "boxSizing": "content-box",
+                                        "width": "5px",
+                                      }
+                                    }
+                                    value=""
                                   />
                                   <div
-                                    className="Select-control"
-                                    onKeyDown={[Function]}
-                                    onMouseDown={[Function]}
-                                    onTouchEnd={[Function]}
-                                    onTouchMove={[Function]}
-                                    onTouchStart={[Function]}
+                                    style={
+                                      Object {
+                                        "height": 0,
+                                        "left": 0,
+                                        "overflow": "scroll",
+                                        "position": "absolute",
+                                        "top": 0,
+                                        "visibility": "hidden",
+                                        "whiteSpace": "pre",
+                                      }
+                                    }
+                                  />
+                                </div>
+                              </AutosizeInput>
+                            </span>
+                            <span
+                              className="Select-arrow-zone"
+                              onMouseDown={[Function]}
+                            >
+                              <span
+                                className="icon-arrow-down"
+                              />
+                            </span>
+                          </div>
+                        </div>
+                      </Select>
+                    </SelectPicker>
+                  </ForwardRef(SelectPicker)>
+                </StyledSelect>
+              </SelectControl>
+              <Tooltip
+                title="Create a team"
+              >
+                <Button
+                  borderless={true}
+                  className="tip"
+                  data-test-id="create-team"
+                  disabled={false}
+                  icon="icon-circle-add"
+                  onClick={[Function]}
+                  title="Create a team"
+                  type="button"
+                >
+                  <Tooltip
+                    title="Create a team"
+                  >
+                    <StyledButton
+                      aria-disabled={false}
+                      borderless={true}
+                      className="tip tip"
+                      data-test-id="create-team"
+                      disabled={false}
+                      onClick={[Function]}
+                      role="button"
+                      title="Create a team"
+                      type="button"
+                    >
+                      <Component
+                        aria-disabled={false}
+                        className="tip tip css-1v8ytf5-StyledButton-getColors eqrebog0"
+                        data-test-id="create-team"
+                        onClick={[Function]}
+                        role="button"
+                        title="Create a team"
+                        type="button"
+                      >
+                        <button
+                          aria-disabled={false}
+                          className="tip tip css-1v8ytf5-StyledButton-getColors eqrebog0"
+                          data-test-id="create-team"
+                          onClick={[Function]}
+                          role="button"
+                          title="Create a team"
+                          type="button"
+                        >
+                          <ButtonLabel
+                            borderless={true}
+                          >
+                            <Component
+                              borderless={true}
+                              className="css-uthd1f-ButtonLabel eqrebog1"
+                            >
+                              <span
+                                className="css-uthd1f-ButtonLabel eqrebog1"
+                              >
+                                <Icon
+                                  hasChildren={false}
+                                >
+                                  <Component
+                                    className="css-ljhpxy-Icon eqrebog2"
+                                    hasChildren={false}
                                   >
                                     <span
-                                      className="Select-multi-value-wrapper"
-                                      id="react-select-4--value"
+                                      className="css-ljhpxy-Icon eqrebog2"
                                     >
-                                      <Value
-                                        disabled={false}
-                                        id="react-select-4--value-item"
-                                        instancePrefix="react-select-4-"
-                                        onClick={null}
-                                        placeholder="Select..."
-                                        value={
-                                          Object {
-                                            "label": "#test",
-                                            "value": "test",
-                                          }
-                                        }
+                                      <StyledInlineSvg
+                                        size="16px"
+                                        src="icon-circle-add"
                                       >
-                                        <div
-                                          className="Select-value"
+                                        <InlineSvg
+                                          className="css-1ov3rcq-StyledInlineSvg eqrebog3"
+                                          size="16px"
+                                          src="icon-circle-add"
                                         >
-                                          <span
-                                            aria-selected="true"
-                                            className="Select-value-label"
-                                            id="react-select-4--value-item"
-                                            role="option"
+                                          <StyledSvg
+                                            className="css-1ov3rcq-StyledInlineSvg eqrebog3"
+                                            height="16px"
+                                            viewBox={Object {}}
+                                            width="16px"
                                           >
-                                            #test
-                                          </span>
-                                        </div>
-                                      </Value>
-                                      <AutosizeInput
-                                        aria-activedescendant="react-select-4--value"
-                                        aria-expanded="false"
-                                        aria-haspopup="false"
-                                        aria-owns=""
-                                        className="Select-input"
-                                        id="id-select-team"
-                                        injectStyles={true}
-                                        minWidth="5"
-                                        onBlur={[Function]}
-                                        onChange={[Function]}
-                                        onFocus={[Function]}
-                                        required={false}
-                                        role="combobox"
-                                        value=""
-                                      >
-                                        <div
-                                          className="Select-input"
-                                          style={
-                                            Object {
-                                              "display": "inline-block",
-                                            }
-                                          }
-                                        >
-                                          <input
-                                            aria-activedescendant="react-select-4--value"
-                                            aria-expanded="false"
-                                            aria-haspopup="false"
-                                            aria-owns=""
-                                            id="id-select-team"
-                                            onBlur={[Function]}
-                                            onChange={[Function]}
-                                            onFocus={[Function]}
-                                            required={false}
-                                            role="combobox"
-                                            style={
-                                              Object {
-                                                "boxSizing": "content-box",
-                                                "width": "5px",
-                                              }
-                                            }
-                                            value=""
-                                          />
-                                          <div
-                                            style={
-                                              Object {
-                                                "height": 0,
-                                                "left": 0,
-                                                "overflow": "scroll",
-                                                "position": "absolute",
-                                                "top": 0,
-                                                "visibility": "hidden",
-                                                "whiteSpace": "pre",
-                                              }
-                                            }
-                                          />
-                                        </div>
-                                      </AutosizeInput>
-                                    </span>
-                                    <span
-                                      className="Select-arrow-zone"
-                                      onMouseDown={[Function]}
-                                    >
-                                      <span
-                                        className="icon-arrow-down"
-                                      />
+                                            <svg
+                                              className="eqrebog3 css-1jjmnki-StyledSvg-StyledInlineSvg e2idor0"
+                                              height="16px"
+                                              viewBox={Object {}}
+                                              width="16px"
+                                            >
+                                              <use
+                                                href="#test"
+                                                xlinkHref="#test"
+                                              />
+                                            </svg>
+                                          </StyledSvg>
+                                        </InlineSvg>
+                                      </StyledInlineSvg>
                                     </span>
-                                  </div>
-                                </div>
-                              </Select>
-                            </SelectPicker>
-                          </ForwardRef(SelectPicker)>
-                        </StyledSelect>
-                      </SelectControl>
-                    </StyledSelectControl>
-                  </div>
-                </div>
-              </SelectField>
+                                  </Component>
+                                </Icon>
+                              </span>
+                            </Component>
+                          </ButtonLabel>
+                        </button>
+                      </Component>
+                    </StyledButton>
+                  </Tooltip>
+                </Button>
+              </Tooltip>
             </div>
-          </div>
-          <div>
-            <button
-              className="btn btn-primary new-project-submit"
+          </TeamSelectInput>
+        </div>
+        <div>
+          <Button
+            data-test-id="create-project"
+            disabled={true}
+            priority="primary"
+          >
+            <StyledButton
+              aria-disabled={true}
+              aria-label="Create Project"
+              data-test-id="create-project"
+              disabled={true}
+              href={null}
               onClick={[Function]}
+              priority="primary"
+              role="button"
+              to={null}
             >
-              Create Project
-            </button>
-          </div>
-          <p>
-            Projects allow you to scope events to a specific application in your organization. For example, you might have separate projects for your API server and frontend client.
-          </p>
+              <Component
+                aria-disabled={true}
+                aria-label="Create Project"
+                className="css-bo8dlg-StyledButton-getColors eqrebog0"
+                data-test-id="create-project"
+                href={null}
+                onClick={[Function]}
+                role="button"
+                to={null}
+              >
+                <button
+                  aria-disabled={true}
+                  aria-label="Create Project"
+                  className="css-bo8dlg-StyledButton-getColors eqrebog0"
+                  data-test-id="create-project"
+                  href={null}
+                  onClick={[Function]}
+                  role="button"
+                  to={null}
+                >
+                  <ButtonLabel
+                    priority="primary"
+                  >
+                    <Component
+                      className="css-ga4b18-ButtonLabel eqrebog1"
+                      priority="primary"
+                    >
+                      <span
+                        className="css-ga4b18-ButtonLabel eqrebog1"
+                      >
+                        Create Project
+                      </span>
+                    </Component>
+                  </ButtonLabel>
+                </button>
+              </Component>
+            </StyledButton>
+          </Button>
         </div>
-      </div>
-    </OnboardingProject>
+      </form>
+    </CreateProjectForm>
   </div>
 </CreateProject>
 `;
 
 exports[`CreateProject should fill in platform name if its provided by url 1`] = `
 <CreateProject
-  getDocsUrl={[Function]}
   location={
     Object {
       "query": Object {},
     }
   }
+  nextStepUrl={[Function]}
+  organization={
+    Object {
+      "access": Array [
+        "org:read",
+        "org:write",
+        "org:admin",
+        "org:integrations",
+        "project:read",
+        "project:write",
+        "project:admin",
+        "team:read",
+        "team:write",
+        "team:admin",
+      ],
+      "features": Array [],
+      "id": "3",
+      "name": "Organization Name",
+      "onboardingTasks": Array [],
+      "projects": Array [],
+      "scrapeJavaScript": true,
+      "slug": "org-slug",
+      "status": Object {
+        "id": "active",
+        "name": "active",
+      },
+      "teams": Array [],
+    }
+  }
   params={
     Object {
       "orgId": "testOrg",
       "projectId": "",
     }
   }
+  teams={Array []}
 >
-  <div>
-    <OnboardingProject
-      name="Ruby"
-      next={[Function]}
+  <div
+    data-test-id="onboarding-info"
+  >
+    <PageHeading
+      withMargins={true}
+    >
+      <Wrapper
+        withMargins={true}
+      >
+        <h1
+          className="css-13ev48w-Wrapper e1f8hk460"
+        >
+          Create a new Project
+        </h1>
+      </Wrapper>
+    </PageHeading>
+    <HelpText>
+      <p
+        className="css-15uvbvk-HelpText eovdm175"
+      >
+        Projects allow you to scope events to a specific application in
+               your organization. For example, you might have separate projects
+               for your API server and frontend client.
+      </p>
+    </HelpText>
+    <PlatformPicker
       platform="ruby"
-      setName={[Function]}
       setPlatform={[Function]}
-      setTeam={[Function]}
-      team="test"
-      teams={
-        Array [
-          Object {
-            "hasAccess": true,
-            "id": "1",
-            "name": "test",
-            "slug": "test",
-          },
-        ]
-      }
+      showOther={true}
     >
-      <div
-        className="onboarding-info"
-      >
-        <PageHeading
-          withMargins={true}
+      <NavContainer>
+        <div
+          className="css-xl0stt-NavContainer ewlrg790"
         >
-          <Wrapper
-            withMargins={true}
-          >
-            <h1
-              className="css-13ev48w-Wrapper e1f8hk460"
+          <CategoryNav>
+            <NavTabs
+              className="css-5tazcq-CategoryNav ewlrg792"
             >
-              Choose a language or framework:
-            </h1>
-          </Wrapper>
-        </PageHeading>
-        <PlatformPicker
-          name="Ruby"
-          next={[Function]}
-          platform="ruby"
-          setName={[Function]}
-          setPlatform={[Function]}
-          setTeam={[Function]}
-          showOther={true}
-          team="test"
-          teams={
-            Array [
-              Object {
-                "hasAccess": true,
-                "id": "1",
-                "name": "test",
-                "slug": "test",
-              },
-            ]
-          }
-        >
-          <div
-            className="platform-picker"
-          >
-            <NavTabs>
               <ul
-                className="nav nav-tabs"
+                className="nav nav-tabs css-5tazcq-CategoryNav ewlrg792"
               >
-                <li
-                  style={
-                    Object {
-                      "float": "right",
-                      "marginRight": 0,
-                    }
-                  }
-                >
-                  <div
-                    className="platform-filter-container"
-                  >
-                    <span
-                      className="icon icon-search"
-                    />
-                    <input
-                      className="platform-filter"
-                      label="Filter"
-                      onChange={[Function]}
-                      placeholder="Filter"
-                      type="text"
-                      value="ruby"
-                    />
-                  </div>
-                </li>
                 <ListLink
                   activeClassName="active"
                   index={false}
@@ -1444,135 +1834,331 @@ exports[`CreateProject should fill in platform name if its provided by url 1`] =
                 </ListLink>
               </ul>
             </NavTabs>
-            <ul
-              className="client-platform-list platform-tiles"
+          </CategoryNav>
+          <SearchBar>
+            <div
+              className="css-1e5tau1-SearchBar-inputStyles ewlrg791"
             >
-              <PlatformCard
-                className=""
-                key="ruby-rack"
-                onClick={[Function]}
-                platform="ruby-rack"
+              <InlineSvg
+                src="icon-search"
               >
-                <span
-                  className="platform-card"
-                  onClick={[Function]}
+                <StyledSvg
+                  height="1em"
+                  viewBox={Object {}}
+                  width="1em"
                 >
-                  <PlatformiconTile
-                    className=""
-                    onClick={[Function]}
-                    platform="ruby-rack"
+                  <svg
+                    className="css-ryh69w-StyledSvg e2idor0"
+                    height="1em"
+                    viewBox={Object {}}
+                    width="1em"
                   >
-                    <li
-                      className="platform-tile list-unstyled ruby-rack ruby "
-                    >
-                      <span
-                        className="platformicon platformicon-ruby-rack"
-                      />
-                    </li>
-                  </PlatformiconTile>
-                  <h5>
-                     
-                    Rack
-                     
-                  </h5>
-                </span>
-              </PlatformCard>
-              <PlatformCard
-                className=""
-                key="ruby-rails"
+                    <use
+                      href="#test"
+                      xlinkHref="#test"
+                    />
+                  </svg>
+                </StyledSvg>
+              </InlineSvg>
+              <input
+                label="Filter Platforms"
+                onChange={[Function]}
+                placeholder="Filter Platforms"
+                type="text"
+                value="ruby"
+              />
+            </div>
+          </SearchBar>
+        </div>
+      </NavContainer>
+      <PlatformList>
+        <div
+          className="css-545rh6-PlatformList ewlrg793"
+        >
+          <PlatformCard
+            data-test-id="platform-ruby-rack"
+            key="ruby-rack"
+            onClear={[Function]}
+            onClick={[Function]}
+            platform={
+              Object {
+                "id": "ruby-rack",
+                "language": "ruby",
+                "link": "https://docs.getsentry.com/hosted/clients/ruby/integrations/rack/",
+                "name": "Rack",
+                "type": "framework",
+              }
+            }
+            selected={false}
+          >
+            <Component
+              className="css-16kw2fg-PlatformCard ewlrg796"
+              data-test-id="platform-ruby-rack"
+              onClear={[Function]}
+              onClick={[Function]}
+              platform={
+                Object {
+                  "id": "ruby-rack",
+                  "language": "ruby",
+                  "link": "https://docs.getsentry.com/hosted/clients/ruby/integrations/rack/",
+                  "name": "Rack",
+                  "type": "framework",
+                }
+              }
+              selected={false}
+            >
+              <div
+                className="css-16kw2fg-PlatformCard ewlrg796"
+                data-test-id="platform-ruby-rack"
                 onClick={[Function]}
-                platform="ruby-rails"
               >
-                <span
-                  className="platform-card"
-                  onClick={[Function]}
+                <StyledPlatformiconTile
+                  platform="ruby-rack"
                 >
-                  <PlatformiconTile
-                    className=""
-                    onClick={[Function]}
-                    platform="ruby-rails"
-                  >
-                    <li
-                      className="platform-tile list-unstyled ruby-rails ruby "
-                    >
-                      <span
-                        className="platformicon platformicon-ruby-rails"
-                      />
-                    </li>
-                  </PlatformiconTile>
-                  <h5>
-                     
-                    Rails
-                     
-                  </h5>
-                </span>
-              </PlatformCard>
-              <PlatformCard
-                className="selected"
-                key="ruby"
+                  <div
+                    className="css-ze44n6-PlatformiconTile-getColorStyles-StyledPlatformiconTile ewlrg794"
+                  />
+                </StyledPlatformiconTile>
+                <h3>
+                  Rack
+                </h3>
+              </div>
+            </Component>
+          </PlatformCard>
+          <PlatformCard
+            data-test-id="platform-ruby-rails"
+            key="ruby-rails"
+            onClear={[Function]}
+            onClick={[Function]}
+            platform={
+              Object {
+                "id": "ruby-rails",
+                "language": "ruby",
+                "link": "https://docs.getsentry.com/hosted/clients/ruby/integrations/rails/",
+                "name": "Rails",
+                "type": "framework",
+              }
+            }
+            selected={false}
+          >
+            <Component
+              className="css-16kw2fg-PlatformCard ewlrg796"
+              data-test-id="platform-ruby-rails"
+              onClear={[Function]}
+              onClick={[Function]}
+              platform={
+                Object {
+                  "id": "ruby-rails",
+                  "language": "ruby",
+                  "link": "https://docs.getsentry.com/hosted/clients/ruby/integrations/rails/",
+                  "name": "Rails",
+                  "type": "framework",
+                }
+              }
+              selected={false}
+            >
+              <div
+                className="css-16kw2fg-PlatformCard ewlrg796"
+                data-test-id="platform-ruby-rails"
+                onClick={[Function]}
+              >
+                <StyledPlatformiconTile
+                  platform="ruby-rails"
+                >
+                  <div
+                    className="css-15nw1ir-PlatformiconTile-getColorStyles-StyledPlatformiconTile ewlrg794"
+                  />
+                </StyledPlatformiconTile>
+                <h3>
+                  Rails
+                </h3>
+              </div>
+            </Component>
+          </PlatformCard>
+          <PlatformCard
+            data-test-id="platform-ruby"
+            key="ruby"
+            onClear={[Function]}
+            onClick={[Function]}
+            platform={
+              Object {
+                "id": "ruby",
+                "language": "ruby",
+                "link": "https://docs.getsentry.com/hosted/clients/ruby/",
+                "name": "Ruby",
+                "type": "language",
+              }
+            }
+            selected={true}
+          >
+            <Component
+              className="css-1aqwt2p-PlatformCard ewlrg796"
+              data-test-id="platform-ruby"
+              onClear={[Function]}
+              onClick={[Function]}
+              platform={
+                Object {
+                  "id": "ruby",
+                  "language": "ruby",
+                  "link": "https://docs.getsentry.com/hosted/clients/ruby/",
+                  "name": "Ruby",
+                  "type": "language",
+                }
+              }
+              selected={true}
+            >
+              <div
+                className="css-1aqwt2p-PlatformCard ewlrg796"
+                data-test-id="platform-ruby"
                 onClick={[Function]}
-                platform="ruby"
               >
-                <span
-                  className="platform-card selected"
+                <StyledPlatformiconTile
+                  platform="ruby"
+                >
+                  <div
+                    className="css-ze44n6-PlatformiconTile-getColorStyles-StyledPlatformiconTile ewlrg794"
+                  />
+                </StyledPlatformiconTile>
+                <h3>
+                  Ruby
+                </h3>
+                <ClearButton
                   onClick={[Function]}
                 >
-                  <PlatformiconTile
-                    className="selected"
+                  <Component
+                    className="css-9ldjwa-ClearButton ewlrg795"
                     onClick={[Function]}
-                    platform="ruby"
                   >
-                    <li
-                      className="platform-tile list-unstyled ruby ruby selected"
+                    <Button
+                      borderless={true}
+                      className="css-9ldjwa-ClearButton ewlrg795"
+                      disabled={false}
+                      icon="icon-circle-close"
+                      onClick={[Function]}
+                      size="xsmall"
                     >
-                      <span
-                        className="platformicon platformicon-ruby"
-                      />
-                    </li>
-                  </PlatformiconTile>
-                  <h5>
-                     
-                    Ruby
-                     
-                  </h5>
-                </span>
-              </PlatformCard>
-            </ul>
-          </div>
-        </PlatformPicker>
-        <div
-          className="create-project-form"
-        >
-          <div
-            className="new-project-name client-platform"
-          >
-            <PageHeading
-              withMargins={true}
+                      <StyledButton
+                        aria-disabled={false}
+                        borderless={true}
+                        className="css-9ldjwa-ClearButton ewlrg795"
+                        disabled={false}
+                        onClick={[Function]}
+                        role="button"
+                        size="xsmall"
+                      >
+                        <Component
+                          aria-disabled={false}
+                          className="ewlrg795 css-2lxdh0-StyledButton-getColors-ClearButton eqrebog0"
+                          onClick={[Function]}
+                          role="button"
+                          size="xsmall"
+                        >
+                          <button
+                            aria-disabled={false}
+                            className="ewlrg795 css-2lxdh0-StyledButton-getColors-ClearButton eqrebog0"
+                            onClick={[Function]}
+                            role="button"
+                            size="xsmall"
+                          >
+                            <ButtonLabel
+                              borderless={true}
+                              size="xsmall"
+                            >
+                              <Component
+                                borderless={true}
+                                className="css-10ltac7-ButtonLabel eqrebog1"
+                                size="xsmall"
+                              >
+                                <span
+                                  className="css-10ltac7-ButtonLabel eqrebog1"
+                                >
+                                  <Icon
+                                    hasChildren={false}
+                                    size="xsmall"
+                                  >
+                                    <Component
+                                      className="css-ljhpxy-Icon eqrebog2"
+                                      hasChildren={false}
+                                      size="xsmall"
+                                    >
+                                      <span
+                                        className="css-ljhpxy-Icon eqrebog2"
+                                        size="xsmall"
+                                      >
+                                        <StyledInlineSvg
+                                          size="12px"
+                                          src="icon-circle-close"
+                                        >
+                                          <InlineSvg
+                                            className="css-1ov3rcq-StyledInlineSvg eqrebog3"
+                                            size="12px"
+                                            src="icon-circle-close"
+                                          >
+                                            <StyledSvg
+                                              className="css-1ov3rcq-StyledInlineSvg eqrebog3"
+                                              height="12px"
+                                              viewBox={Object {}}
+                                              width="12px"
+                                            >
+                                              <svg
+                                                className="eqrebog3 css-1jjmnki-StyledSvg-StyledInlineSvg e2idor0"
+                                                height="12px"
+                                                viewBox={Object {}}
+                                                width="12px"
+                                              >
+                                                <use
+                                                  href="#test"
+                                                  xlinkHref="#test"
+                                                />
+                                              </svg>
+                                            </StyledSvg>
+                                          </InlineSvg>
+                                        </StyledInlineSvg>
+                                      </span>
+                                    </Component>
+                                  </Icon>
+                                </span>
+                              </Component>
+                            </ButtonLabel>
+                          </button>
+                        </Component>
+                      </StyledButton>
+                    </Button>
+                  </Component>
+                </ClearButton>
+              </div>
+            </Component>
+          </PlatformCard>
+        </div>
+      </PlatformList>
+    </PlatformPicker>
+    <CreateProjectForm
+      onSubmit={[Function]}
+    >
+      <form
+        className="css-1ibxl16-CreateProjectForm eovdm170"
+        onSubmit={[Function]}
+      >
+        <div>
+          <FormLabel>
+            <div
+              className="css-4lvcxw-FormLabel eovdm171"
             >
-              <Wrapper
-                withMargins={true}
-              >
-                <h1
-                  className="css-13ev48w-Wrapper e1f8hk460"
-                >
-                  Give your project a name:
-                </h1>
-              </Wrapper>
-            </PageHeading>
+              Give your project a name
+            </div>
+          </FormLabel>
+          <ProjectNameInput>
             <div
-              className="project-name-wrapper"
+              className="css-1dtytc5-ProjectNameInput-inputStyles eovdm173"
             >
-              <PlatformiconTile
+              <ProjectPlatformicon
+                monoTone={true}
                 platform="ruby"
               >
-                <li
-                  className="platform-tile list-unstyled ruby ruby undefined"
-                >
-                  <span
-                    className="platformicon platformicon-ruby"
-                  />
-                </li>
-              </PlatformiconTile>
+                <div
+                  className="css-5kvz9y-PlatformiconTile-ProjectPlatformicon eovdm172"
+                />
+              </ProjectPlatformicon>
               <input
                 autoComplete="off"
                 label="Project Name"
@@ -1583,476 +2169,472 @@ exports[`CreateProject should fill in platform name if its provided by url 1`] =
                 value="Ruby"
               />
             </div>
-          </div>
-          <div
-            className="new-project-team"
-          >
-            <PageHeading
-              withMargins={true}
+          </ProjectNameInput>
+        </div>
+        <div>
+          <FormLabel>
+            <div
+              className="css-4lvcxw-FormLabel eovdm171"
             >
-              <Wrapper
-                withMargins={true}
-              >
-                <h1
-                  className="css-13ev48w-Wrapper e1f8hk460"
-                >
-                  Team:
-                </h1>
-              </Wrapper>
-            </PageHeading>
-            <div>
-              <SelectField
+              Assign a Team
+            </div>
+          </FormLabel>
+          <TeamSelectInput>
+            <div
+              className="css-75pel-TeamSelectInput eovdm174"
+            >
+              <SelectControl
                 clearable={false}
-                disabled={false}
-                hideErrorMessage={false}
+                height={36}
                 multiple={false}
                 name="select-team"
                 onChange={[Function]}
-                options={
-                  Array [
-                    Object {
-                      "label": "#test",
-                      "value": "test",
-                    },
-                  ]
-                }
-                required={false}
-                style={
-                  Object {
-                    "marginBottom": 0,
-                    "width": 180,
-                  }
-                }
-                value="test"
+                options={Array []}
+                placeholder="Select a Team"
+                value={0}
               >
-                <div
-                  className=""
-                  style={
-                    Object {
-                      "marginBottom": 0,
-                      "width": 180,
-                    }
-                  }
+                <StyledSelect
+                  arrowRenderer={[Function]}
+                  backspaceRemoves={false}
+                  clearable={false}
+                  deleteRemoves={false}
+                  height={36}
+                  multiple={false}
+                  name="select-team"
+                  onChange={[Function]}
+                  options={Array []}
+                  placeholder="Select a Team"
+                  value={0}
                 >
-                  <div
-                    className="controls"
+                  <ForwardRef(SelectPicker)
+                    arrowRenderer={[Function]}
+                    backspaceRemoves={false}
+                    className="css-6lbkok-StyledSelect eho28m20"
+                    clearable={false}
+                    deleteRemoves={false}
+                    height={36}
+                    multiple={false}
+                    name="select-team"
+                    onChange={[Function]}
+                    options={Array []}
+                    placeholder="Select a Team"
+                    value={0}
                   >
-                    <StyledSelectControl
+                    <SelectPicker
+                      arrowRenderer={[Function]}
+                      backspaceRemoves={false}
+                      className="css-6lbkok-StyledSelect eho28m20"
                       clearable={false}
-                      disabled={false}
-                      id="id-select-team"
+                      deleteRemoves={false}
+                      forwardedRef={null}
+                      height={36}
                       multiple={false}
                       name="select-team"
                       onChange={[Function]}
-                      options={
-                        Array [
-                          Object {
-                            "label": "#test",
-                            "value": "test",
-                          },
-                        ]
-                      }
-                      required={false}
-                      value="test"
+                      options={Array []}
+                      placeholder="Select a Team"
+                      value={0}
                     >
-                      <SelectControl
-                        className="css-j6zs66-StyledSelectControl e1qrhqd00"
+                      <Select
+                        arrowRenderer={[Function]}
+                        autosize={true}
+                        backspaceRemoves={false}
+                        backspaceToRemoveMessage="Press backspace to remove {label}"
+                        className="css-6lbkok-StyledSelect eho28m20"
+                        clearAllText="Clear all"
+                        clearRenderer={[Function]}
+                        clearValueText="Clear value"
                         clearable={false}
+                        closeOnSelect={true}
+                        deleteRemoves={false}
+                        delimiter=","
                         disabled={false}
+                        escapeClearsValue={true}
+                        filterOptions={[Function]}
                         height={36}
-                        id="id-select-team"
+                        ignoreAccents={true}
+                        ignoreCase={true}
+                        inputProps={Object {}}
+                        isLoading={false}
+                        joinValues={false}
+                        labelKey="label"
+                        matchPos="any"
+                        matchProp="any"
+                        menuBuffer={0}
+                        menuRenderer={[Function]}
+                        multi={false}
                         multiple={false}
                         name="select-team"
+                        noResultsText="No results found"
+                        onBlurResetsInput={true}
                         onChange={[Function]}
-                        options={
-                          Array [
-                            Object {
-                              "label": "#test",
-                              "value": "test",
-                            },
-                          ]
-                        }
+                        onCloseResetsInput={true}
+                        onSelectResetsInput={true}
+                        openOnClick={true}
+                        optionComponent={[Function]}
+                        options={Array []}
+                        pageSize={5}
+                        placeholder="Select a Team"
+                        removeSelected={true}
                         required={false}
-                        value="test"
+                        rtl={false}
+                        scrollMenuIntoView={true}
+                        searchable={true}
+                        simpleValue={false}
+                        tabSelectsValue={true}
+                        trimFilter={true}
+                        value={0}
+                        valueComponent={[Function]}
+                        valueKey="value"
                       >
-                        <StyledSelect
-                          arrowRenderer={[Function]}
-                          backspaceRemoves={false}
-                          className="css-j6zs66-StyledSelectControl e1qrhqd00"
-                          clearable={false}
-                          deleteRemoves={false}
-                          disabled={false}
-                          height={36}
-                          id="id-select-team"
-                          multiple={false}
-                          name="select-team"
-                          onChange={[Function]}
-                          options={
-                            Array [
-                              Object {
-                                "label": "#test",
-                                "value": "test",
-                              },
-                            ]
-                          }
-                          required={false}
-                          value="test"
+                        <div
+                          className="Select css-6lbkok-StyledSelect eho28m20 is-searchable Select--single"
                         >
-                          <ForwardRef(SelectPicker)
-                            arrowRenderer={[Function]}
-                            backspaceRemoves={false}
-                            className="e1qrhqd00 css-pr263a-StyledSelect-StyledSelectControl eho28m20"
-                            clearable={false}
-                            deleteRemoves={false}
-                            disabled={false}
-                            height={36}
-                            id="id-select-team"
-                            multiple={false}
-                            name="select-team"
-                            onChange={[Function]}
-                            options={
-                              Array [
-                                Object {
-                                  "label": "#test",
-                                  "value": "test",
-                                },
-                              ]
-                            }
-                            required={false}
-                            value="test"
+                          <div
+                            className="Select-control"
+                            onKeyDown={[Function]}
+                            onMouseDown={[Function]}
+                            onTouchEnd={[Function]}
+                            onTouchMove={[Function]}
+                            onTouchStart={[Function]}
                           >
-                            <SelectPicker
-                              arrowRenderer={[Function]}
-                              backspaceRemoves={false}
-                              className="e1qrhqd00 css-pr263a-StyledSelect-StyledSelectControl eho28m20"
-                              clearable={false}
-                              deleteRemoves={false}
-                              disabled={false}
-                              forwardedRef={null}
-                              height={36}
-                              id="id-select-team"
-                              multiple={false}
-                              name="select-team"
-                              onChange={[Function]}
-                              options={
-                                Array [
-                                  Object {
-                                    "label": "#test",
-                                    "value": "test",
-                                  },
-                                ]
-                              }
-                              required={false}
-                              value="test"
+                            <span
+                              className="Select-multi-value-wrapper"
+                              id="react-select-4--value"
                             >
-                              <Select
-                                arrowRenderer={[Function]}
-                                autosize={true}
-                                backspaceRemoves={false}
-                                backspaceToRemoveMessage="Press backspace to remove {label}"
-                                className="e1qrhqd00 css-pr263a-StyledSelect-StyledSelectControl eho28m20"
-                                clearAllText="Clear all"
-                                clearRenderer={[Function]}
-                                clearValueText="Clear value"
-                                clearable={false}
-                                closeOnSelect={true}
-                                deleteRemoves={false}
-                                delimiter=","
-                                disabled={false}
-                                escapeClearsValue={true}
-                                filterOptions={[Function]}
-                                height={36}
-                                id="id-select-team"
-                                ignoreAccents={true}
-                                ignoreCase={true}
-                                inputProps={Object {}}
-                                isLoading={false}
-                                joinValues={false}
-                                labelKey="label"
-                                matchPos="any"
-                                matchProp="any"
-                                menuBuffer={0}
-                                menuRenderer={[Function]}
-                                multi={false}
-                                multiple={false}
-                                name="select-team"
-                                noResultsText="No results found"
-                                onBlurResetsInput={true}
+                              <div
+                                className="Select-placeholder"
+                              >
+                                Select a Team
+                              </div>
+                              <AutosizeInput
+                                aria-activedescendant="react-select-4--value"
+                                aria-expanded="false"
+                                aria-haspopup="false"
+                                aria-owns=""
+                                className="Select-input"
+                                injectStyles={true}
+                                minWidth="5"
+                                onBlur={[Function]}
                                 onChange={[Function]}
-                                onCloseResetsInput={true}
-                                onSelectResetsInput={true}
-                                openOnClick={true}
-                                optionComponent={[Function]}
-                                options={
-                                  Array [
-                                    Object {
-                                      "label": "#test",
-                                      "value": "test",
-                                    },
-                                  ]
-                                }
-                                pageSize={5}
-                                placeholder="Select..."
-                                removeSelected={true}
+                                onFocus={[Function]}
                                 required={false}
-                                rtl={false}
-                                scrollMenuIntoView={true}
-                                searchable={true}
-                                simpleValue={false}
-                                tabSelectsValue={true}
-                                trimFilter={true}
-                                value="test"
-                                valueComponent={[Function]}
-                                valueKey="value"
+                                role="combobox"
+                                value=""
                               >
                                 <div
-                                  className="Select e1qrhqd00 css-pr263a-StyledSelect-StyledSelectControl eho28m20 has-value is-searchable Select--single"
+                                  className="Select-input"
+                                  style={
+                                    Object {
+                                      "display": "inline-block",
+                                    }
+                                  }
                                 >
                                   <input
-                                    disabled={false}
-                                    key="hidden.0"
-                                    name="select-team"
-                                    type="hidden"
-                                    value="test"
+                                    aria-activedescendant="react-select-4--value"
+                                    aria-expanded="false"
+                                    aria-haspopup="false"
+                                    aria-owns=""
+                                    onBlur={[Function]}
+                                    onChange={[Function]}
+                                    onFocus={[Function]}
+                                    required={false}
+                                    role="combobox"
+                                    style={
+                                      Object {
+                                        "boxSizing": "content-box",
+                                        "width": "5px",
+                                      }
+                                    }
+                                    value=""
                                   />
                                   <div
-                                    className="Select-control"
-                                    onKeyDown={[Function]}
-                                    onMouseDown={[Function]}
-                                    onTouchEnd={[Function]}
-                                    onTouchMove={[Function]}
-                                    onTouchStart={[Function]}
+                                    style={
+                                      Object {
+                                        "height": 0,
+                                        "left": 0,
+                                        "overflow": "scroll",
+                                        "position": "absolute",
+                                        "top": 0,
+                                        "visibility": "hidden",
+                                        "whiteSpace": "pre",
+                                      }
+                                    }
+                                  />
+                                </div>
+                              </AutosizeInput>
+                            </span>
+                            <span
+                              className="Select-arrow-zone"
+                              onMouseDown={[Function]}
+                            >
+                              <span
+                                className="icon-arrow-down"
+                              />
+                            </span>
+                          </div>
+                        </div>
+                      </Select>
+                    </SelectPicker>
+                  </ForwardRef(SelectPicker)>
+                </StyledSelect>
+              </SelectControl>
+              <Tooltip
+                title="Create a team"
+              >
+                <Button
+                  borderless={true}
+                  className="tip"
+                  data-test-id="create-team"
+                  disabled={false}
+                  icon="icon-circle-add"
+                  onClick={[Function]}
+                  title="Create a team"
+                  type="button"
+                >
+                  <Tooltip
+                    title="Create a team"
+                  >
+                    <StyledButton
+                      aria-disabled={false}
+                      borderless={true}
+                      className="tip tip"
+                      data-test-id="create-team"
+                      disabled={false}
+                      onClick={[Function]}
+                      role="button"
+                      title="Create a team"
+                      type="button"
+                    >
+                      <Component
+                        aria-disabled={false}
+                        className="tip tip css-1v8ytf5-StyledButton-getColors eqrebog0"
+                        data-test-id="create-team"
+                        onClick={[Function]}
+                        role="button"
+                        title="Create a team"
+                        type="button"
+                      >
+                        <button
+                          aria-disabled={false}
+                          className="tip tip css-1v8ytf5-StyledButton-getColors eqrebog0"
+                          data-test-id="create-team"
+                          onClick={[Function]}
+                          role="button"
+                          title="Create a team"
+                          type="button"
+                        >
+                          <ButtonLabel
+                            borderless={true}
+                          >
+                            <Component
+                              borderless={true}
+                              className="css-uthd1f-ButtonLabel eqrebog1"
+                            >
+                              <span
+                                className="css-uthd1f-ButtonLabel eqrebog1"
+                              >
+                                <Icon
+                                  hasChildren={false}
+                                >
+                                  <Component
+                                    className="css-ljhpxy-Icon eqrebog2"
+                                    hasChildren={false}
                                   >
                                     <span
-                                      className="Select-multi-value-wrapper"
-                                      id="react-select-3--value"
+                                      className="css-ljhpxy-Icon eqrebog2"
                                     >
-                                      <Value
-                                        disabled={false}
-                                        id="react-select-3--value-item"
-                                        instancePrefix="react-select-3-"
-                                        onClick={null}
-                                        placeholder="Select..."
-                                        value={
-                                          Object {
-                                            "label": "#test",
-                                            "value": "test",
-                                          }
-                                        }
+                                      <StyledInlineSvg
+                                        size="16px"
+                                        src="icon-circle-add"
                                       >
-                                        <div
-                                          className="Select-value"
+                                        <InlineSvg
+                                          className="css-1ov3rcq-StyledInlineSvg eqrebog3"
+                                          size="16px"
+                                          src="icon-circle-add"
                                         >
-                                          <span
-                                            aria-selected="true"
-                                            className="Select-value-label"
-                                            id="react-select-3--value-item"
-                                            role="option"
+                                          <StyledSvg
+                                            className="css-1ov3rcq-StyledInlineSvg eqrebog3"
+                                            height="16px"
+                                            viewBox={Object {}}
+                                            width="16px"
                                           >
-                                            #test
-                                          </span>
-                                        </div>
-                                      </Value>
-                                      <AutosizeInput
-                                        aria-activedescendant="react-select-3--value"
-                                        aria-expanded="false"
-                                        aria-haspopup="false"
-                                        aria-owns=""
-                                        className="Select-input"
-                                        id="id-select-team"
-                                        injectStyles={true}
-                                        minWidth="5"
-                                        onBlur={[Function]}
-                                        onChange={[Function]}
-                                        onFocus={[Function]}
-                                        required={false}
-                                        role="combobox"
-                                        value=""
-                                      >
-                                        <div
-                                          className="Select-input"
-                                          style={
-                                            Object {
-                                              "display": "inline-block",
-                                            }
-                                          }
-                                        >
-                                          <input
-                                            aria-activedescendant="react-select-3--value"
-                                            aria-expanded="false"
-                                            aria-haspopup="false"
-                                            aria-owns=""
-                                            id="id-select-team"
-                                            onBlur={[Function]}
-                                            onChange={[Function]}
-                                            onFocus={[Function]}
-                                            required={false}
-                                            role="combobox"
-                                            style={
-                                              Object {
-                                                "boxSizing": "content-box",
-                                                "width": "5px",
-                                              }
-                                            }
-                                            value=""
-                                          />
-                                          <div
-                                            style={
-                                              Object {
-                                                "height": 0,
-                                                "left": 0,
-                                                "overflow": "scroll",
-                                                "position": "absolute",
-                                                "top": 0,
-                                                "visibility": "hidden",
-                                                "whiteSpace": "pre",
-                                              }
-                                            }
-                                          />
-                                        </div>
-                                      </AutosizeInput>
-                                    </span>
-                                    <span
-                                      className="Select-arrow-zone"
-                                      onMouseDown={[Function]}
-                                    >
-                                      <span
-                                        className="icon-arrow-down"
-                                      />
+                                            <svg
+                                              className="eqrebog3 css-1jjmnki-StyledSvg-StyledInlineSvg e2idor0"
+                                              height="16px"
+                                              viewBox={Object {}}
+                                              width="16px"
+                                            >
+                                              <use
+                                                href="#test"
+                                                xlinkHref="#test"
+                                              />
+                                            </svg>
+                                          </StyledSvg>
+                                        </InlineSvg>
+                                      </StyledInlineSvg>
                                     </span>
-                                  </div>
-                                </div>
-                              </Select>
-                            </SelectPicker>
-                          </ForwardRef(SelectPicker)>
-                        </StyledSelect>
-                      </SelectControl>
-                    </StyledSelectControl>
-                  </div>
-                </div>
-              </SelectField>
+                                  </Component>
+                                </Icon>
+                              </span>
+                            </Component>
+                          </ButtonLabel>
+                        </button>
+                      </Component>
+                    </StyledButton>
+                  </Tooltip>
+                </Button>
+              </Tooltip>
             </div>
-          </div>
-          <div>
-            <button
-              className="btn btn-primary new-project-submit"
+          </TeamSelectInput>
+        </div>
+        <div>
+          <Button
+            data-test-id="create-project"
+            disabled={true}
+            priority="primary"
+          >
+            <StyledButton
+              aria-disabled={true}
+              aria-label="Create Project"
+              data-test-id="create-project"
+              disabled={true}
+              href={null}
               onClick={[Function]}
+              priority="primary"
+              role="button"
+              to={null}
             >
-              Create Project
-            </button>
-          </div>
-          <p>
-            Projects allow you to scope events to a specific application in your organization. For example, you might have separate projects for your API server and frontend client.
-          </p>
+              <Component
+                aria-disabled={true}
+                aria-label="Create Project"
+                className="css-bo8dlg-StyledButton-getColors eqrebog0"
+                data-test-id="create-project"
+                href={null}
+                onClick={[Function]}
+                role="button"
+                to={null}
+              >
+                <button
+                  aria-disabled={true}
+                  aria-label="Create Project"
+                  className="css-bo8dlg-StyledButton-getColors eqrebog0"
+                  data-test-id="create-project"
+                  href={null}
+                  onClick={[Function]}
+                  role="button"
+                  to={null}
+                >
+                  <ButtonLabel
+                    priority="primary"
+                  >
+                    <Component
+                      className="css-ga4b18-ButtonLabel eqrebog1"
+                      priority="primary"
+                    >
+                      <span
+                        className="css-ga4b18-ButtonLabel eqrebog1"
+                      >
+                        Create Project
+                      </span>
+                    </Component>
+                  </ButtonLabel>
+                </button>
+              </Component>
+            </StyledButton>
+          </Button>
         </div>
-      </div>
-    </OnboardingProject>
+      </form>
+    </CreateProjectForm>
   </div>
 </CreateProject>
 `;
 
 exports[`CreateProject should fill in project name if its empty when platform is chosen 1`] = `
 <CreateProject
-  getDocsUrl={[Function]}
   location={
     Object {
       "query": Object {},
     }
   }
+  nextStepUrl={[Function]}
+  organization={
+    Object {
+      "access": Array [
+        "org:read",
+        "org:write",
+        "org:admin",
+        "org:integrations",
+        "project:read",
+        "project:write",
+        "project:admin",
+        "team:read",
+        "team:write",
+        "team:admin",
+      ],
+      "features": Array [],
+      "id": "3",
+      "name": "Organization Name",
+      "onboardingTasks": Array [],
+      "projects": Array [],
+      "scrapeJavaScript": true,
+      "slug": "org-slug",
+      "status": Object {
+        "id": "active",
+        "name": "active",
+      },
+      "teams": Array [],
+    }
+  }
   params={
     Object {
       "orgId": "testOrg",
       "projectId": "",
     }
   }
+  teams={Array []}
 >
-  <div>
-    <OnboardingProject
-      name="another"
-      next={[Function]}
+  <div
+    data-test-id="onboarding-info"
+  >
+    <PageHeading
+      withMargins={true}
+    >
+      <Wrapper
+        withMargins={true}
+      >
+        <h1
+          className="css-13ev48w-Wrapper e1f8hk460"
+        >
+          Create a new Project
+        </h1>
+      </Wrapper>
+    </PageHeading>
+    <HelpText>
+      <p
+        className="css-15uvbvk-HelpText eovdm175"
+      >
+        Projects allow you to scope events to a specific application in
+               your organization. For example, you might have separate projects
+               for your API server and frontend client.
+      </p>
+    </HelpText>
+    <PlatformPicker
       platform="csharp"
-      setName={[Function]}
       setPlatform={[Function]}
-      setTeam={[Function]}
-      team="test"
-      teams={
-        Array [
-          Object {
-            "hasAccess": true,
-            "id": "1",
-            "name": "test",
-            "slug": "test",
-          },
-        ]
-      }
+      showOther={true}
     >
-      <div
-        className="onboarding-info"
-      >
-        <PageHeading
-          withMargins={true}
+      <NavContainer>
+        <div
+          className="css-xl0stt-NavContainer ewlrg790"
         >
-          <Wrapper
-            withMargins={true}
-          >
-            <h1
-              className="css-13ev48w-Wrapper e1f8hk460"
+          <CategoryNav>
+            <NavTabs
+              className="css-5tazcq-CategoryNav ewlrg792"
             >
-              Choose a language or framework:
-            </h1>
-          </Wrapper>
-        </PageHeading>
-        <PlatformPicker
-          name="another"
-          next={[Function]}
-          platform="csharp"
-          setName={[Function]}
-          setPlatform={[Function]}
-          setTeam={[Function]}
-          showOther={true}
-          team="test"
-          teams={
-            Array [
-              Object {
-                "hasAccess": true,
-                "id": "1",
-                "name": "test",
-                "slug": "test",
-              },
-            ]
-          }
-        >
-          <div
-            className="platform-picker"
-          >
-            <NavTabs>
               <ul
-                className="nav nav-tabs"
+                className="nav nav-tabs css-5tazcq-CategoryNav ewlrg792"
               >
-                <li
-                  style={
-                    Object {
-                      "float": "right",
-                      "marginRight": 0,
-                    }
-                  }
-                >
-                  <div
-                    className="platform-filter-container"
-                  >
-                    <span
-                      className="icon icon-search"
-                    />
-                    <input
-                      className="platform-filter"
-                      label="Filter"
-                      onChange={[Function]}
-                      placeholder="Filter"
-                      type="text"
-                      value=""
-                    />
-                  </div>
-                </li>
                 <ListLink
                   activeClassName="active"
                   index={false}
@@ -2211,525 +2793,981 @@ exports[`CreateProject should fill in project name if its empty when platform is
                 </ListLink>
               </ul>
             </NavTabs>
-            <ul
-              className="client-platform-list platform-tiles"
+          </CategoryNav>
+          <SearchBar>
+            <div
+              className="css-1e5tau1-SearchBar-inputStyles ewlrg791"
             >
-              <PlatformCard
-                className="selected"
-                key="csharp"
-                onClick={[Function]}
-                platform="csharp"
+              <InlineSvg
+                src="icon-search"
               >
-                <span
-                  className="platform-card selected"
-                  onClick={[Function]}
+                <StyledSvg
+                  height="1em"
+                  viewBox={Object {}}
+                  width="1em"
                 >
-                  <PlatformiconTile
-                    className="selected"
-                    onClick={[Function]}
-                    platform="csharp"
+                  <svg
+                    className="css-ryh69w-StyledSvg e2idor0"
+                    height="1em"
+                    viewBox={Object {}}
+                    width="1em"
                   >
-                    <li
-                      className="platform-tile list-unstyled csharp csharp selected"
-                    >
-                      <span
-                        className="platformicon platformicon-csharp"
-                      />
-                    </li>
-                  </PlatformiconTile>
-                  <h5>
-                     
-                    C#
-                     
-                  </h5>
-                </span>
-              </PlatformCard>
-              <PlatformCard
-                className=""
-                key="java"
+                    <use
+                      href="#test"
+                      xlinkHref="#test"
+                    />
+                  </svg>
+                </StyledSvg>
+              </InlineSvg>
+              <input
+                label="Filter Platforms"
+                onChange={[Function]}
+                placeholder="Filter Platforms"
+                type="text"
+                value=""
+              />
+            </div>
+          </SearchBar>
+        </div>
+      </NavContainer>
+      <PlatformList>
+        <div
+          className="css-545rh6-PlatformList ewlrg793"
+        >
+          <PlatformCard
+            data-test-id="platform-csharp"
+            key="csharp"
+            onClear={[Function]}
+            onClick={[Function]}
+            platform={
+              Object {
+                "id": "csharp",
+                "language": "csharp",
+                "link": "https://docs.getsentry.com/hosted/clients/csharp/",
+                "name": "C#",
+                "type": "language",
+              }
+            }
+            selected={true}
+          >
+            <Component
+              className="css-1aqwt2p-PlatformCard ewlrg796"
+              data-test-id="platform-csharp"
+              onClear={[Function]}
+              onClick={[Function]}
+              platform={
+                Object {
+                  "id": "csharp",
+                  "language": "csharp",
+                  "link": "https://docs.getsentry.com/hosted/clients/csharp/",
+                  "name": "C#",
+                  "type": "language",
+                }
+              }
+              selected={true}
+            >
+              <div
+                className="css-1aqwt2p-PlatformCard ewlrg796"
+                data-test-id="platform-csharp"
                 onClick={[Function]}
-                platform="java"
               >
-                <span
-                  className="platform-card"
+                <StyledPlatformiconTile
+                  platform="csharp"
+                >
+                  <div
+                    className="css-tzg8rc-PlatformiconTile-getColorStyles-StyledPlatformiconTile ewlrg794"
+                  />
+                </StyledPlatformiconTile>
+                <h3>
+                  C#
+                </h3>
+                <ClearButton
                   onClick={[Function]}
                 >
-                  <PlatformiconTile
-                    className=""
+                  <Component
+                    className="css-9ldjwa-ClearButton ewlrg795"
                     onClick={[Function]}
-                    platform="java"
                   >
-                    <li
-                      className="platform-tile list-unstyled java java "
+                    <Button
+                      borderless={true}
+                      className="css-9ldjwa-ClearButton ewlrg795"
+                      disabled={false}
+                      icon="icon-circle-close"
+                      onClick={[Function]}
+                      size="xsmall"
                     >
-                      <span
-                        className="platformicon platformicon-java"
-                      />
-                    </li>
-                  </PlatformiconTile>
-                  <h5>
-                     
-                    Java
-                     
-                  </h5>
-                </span>
-              </PlatformCard>
-              <PlatformCard
-                className=""
-                key="javascript-angular"
+                      <StyledButton
+                        aria-disabled={false}
+                        borderless={true}
+                        className="css-9ldjwa-ClearButton ewlrg795"
+                        disabled={false}
+                        onClick={[Function]}
+                        role="button"
+                        size="xsmall"
+                      >
+                        <Component
+                          aria-disabled={false}
+                          className="ewlrg795 css-2lxdh0-StyledButton-getColors-ClearButton eqrebog0"
+                          onClick={[Function]}
+                          role="button"
+                          size="xsmall"
+                        >
+                          <button
+                            aria-disabled={false}
+                            className="ewlrg795 css-2lxdh0-StyledButton-getColors-ClearButton eqrebog0"
+                            onClick={[Function]}
+                            role="button"
+                            size="xsmall"
+                          >
+                            <ButtonLabel
+                              borderless={true}
+                              size="xsmall"
+                            >
+                              <Component
+                                borderless={true}
+                                className="css-10ltac7-ButtonLabel eqrebog1"
+                                size="xsmall"
+                              >
+                                <span
+                                  className="css-10ltac7-ButtonLabel eqrebog1"
+                                >
+                                  <Icon
+                                    hasChildren={false}
+                                    size="xsmall"
+                                  >
+                                    <Component
+                                      className="css-ljhpxy-Icon eqrebog2"
+                                      hasChildren={false}
+                                      size="xsmall"
+                                    >
+                                      <span
+                                        className="css-ljhpxy-Icon eqrebog2"
+                                        size="xsmall"
+                                      >
+                                        <StyledInlineSvg
+                                          size="12px"
+                                          src="icon-circle-close"
+                                        >
+                                          <InlineSvg
+                                            className="css-1ov3rcq-StyledInlineSvg eqrebog3"
+                                            size="12px"
+                                            src="icon-circle-close"
+                                          >
+                                            <StyledSvg
+                                              className="css-1ov3rcq-StyledInlineSvg eqrebog3"
+                                              height="12px"
+                                              viewBox={Object {}}
+                                              width="12px"
+                                            >
+                                              <svg
+                                                className="eqrebog3 css-1jjmnki-StyledSvg-StyledInlineSvg e2idor0"
+                                                height="12px"
+                                                viewBox={Object {}}
+                                                width="12px"
+                                              >
+                                                <use
+                                                  href="#test"
+                                                  xlinkHref="#test"
+                                                />
+                                              </svg>
+                                            </StyledSvg>
+                                          </InlineSvg>
+                                        </StyledInlineSvg>
+                                      </span>
+                                    </Component>
+                                  </Icon>
+                                </span>
+                              </Component>
+                            </ButtonLabel>
+                          </button>
+                        </Component>
+                      </StyledButton>
+                    </Button>
+                  </Component>
+                </ClearButton>
+              </div>
+            </Component>
+          </PlatformCard>
+          <PlatformCard
+            data-test-id="platform-java"
+            key="java"
+            onClear={[Function]}
+            onClick={[Function]}
+            platform={
+              Object {
+                "id": "java",
+                "language": "java",
+                "link": "https://docs.getsentry.com/hosted/clients/java/",
+                "name": "Java",
+                "type": "language",
+              }
+            }
+            selected={false}
+          >
+            <Component
+              className="css-16kw2fg-PlatformCard ewlrg796"
+              data-test-id="platform-java"
+              onClear={[Function]}
+              onClick={[Function]}
+              platform={
+                Object {
+                  "id": "java",
+                  "language": "java",
+                  "link": "https://docs.getsentry.com/hosted/clients/java/",
+                  "name": "Java",
+                  "type": "language",
+                }
+              }
+              selected={false}
+            >
+              <div
+                className="css-16kw2fg-PlatformCard ewlrg796"
+                data-test-id="platform-java"
                 onClick={[Function]}
-                platform="javascript-angular"
               >
-                <span
-                  className="platform-card"
-                  onClick={[Function]}
+                <StyledPlatformiconTile
+                  platform="java"
                 >
-                  <PlatformiconTile
-                    className=""
-                    onClick={[Function]}
-                    platform="javascript-angular"
-                  >
-                    <li
-                      className="platform-tile list-unstyled javascript-angular javascript "
-                    >
-                      <span
-                        className="platformicon platformicon-javascript-angular"
-                      />
-                    </li>
-                  </PlatformiconTile>
-                  <h5>
-                     
-                    Angular
-                     
-                  </h5>
-                </span>
-              </PlatformCard>
-              <PlatformCard
-                className=""
-                key="javascript"
+                  <div
+                    className="css-lc48x8-PlatformiconTile-getColorStyles-StyledPlatformiconTile ewlrg794"
+                  />
+                </StyledPlatformiconTile>
+                <h3>
+                  Java
+                </h3>
+              </div>
+            </Component>
+          </PlatformCard>
+          <PlatformCard
+            data-test-id="platform-javascript-angular"
+            key="javascript-angular"
+            onClear={[Function]}
+            onClick={[Function]}
+            platform={
+              Object {
+                "id": "javascript-angular",
+                "language": "javascript",
+                "link": "https://docs.getsentry.com/hosted/clients/javascript/integrations/angular/",
+                "name": "Angular",
+                "type": "framework",
+              }
+            }
+            selected={false}
+          >
+            <Component
+              className="css-16kw2fg-PlatformCard ewlrg796"
+              data-test-id="platform-javascript-angular"
+              onClear={[Function]}
+              onClick={[Function]}
+              platform={
+                Object {
+                  "id": "javascript-angular",
+                  "language": "javascript",
+                  "link": "https://docs.getsentry.com/hosted/clients/javascript/integrations/angular/",
+                  "name": "Angular",
+                  "type": "framework",
+                }
+              }
+              selected={false}
+            >
+              <div
+                className="css-16kw2fg-PlatformCard ewlrg796"
+                data-test-id="platform-javascript-angular"
                 onClick={[Function]}
-                platform="javascript"
               >
-                <span
-                  className="platform-card"
-                  onClick={[Function]}
+                <StyledPlatformiconTile
+                  platform="javascript-angular"
                 >
-                  <PlatformiconTile
-                    className=""
-                    onClick={[Function]}
-                    platform="javascript"
-                  >
-                    <li
-                      className="platform-tile list-unstyled javascript javascript "
-                    >
-                      <span
-                        className="platformicon platformicon-javascript"
-                      />
-                    </li>
-                  </PlatformiconTile>
-                  <h5>
-                     
-                    JavaScript
-                     
-                  </h5>
-                </span>
-              </PlatformCard>
-              <PlatformCard
-                className=""
-                key="javascript-react"
+                  <div
+                    className="css-b15x81-PlatformiconTile-getColorStyles-StyledPlatformiconTile ewlrg794"
+                  />
+                </StyledPlatformiconTile>
+                <h3>
+                  Angular
+                </h3>
+              </div>
+            </Component>
+          </PlatformCard>
+          <PlatformCard
+            data-test-id="platform-javascript"
+            key="javascript"
+            onClear={[Function]}
+            onClick={[Function]}
+            platform={
+              Object {
+                "id": "javascript",
+                "language": "javascript",
+                "link": "https://docs.getsentry.com/hosted/clients/javascript/install/",
+                "name": "JavaScript",
+                "type": "language",
+              }
+            }
+            selected={false}
+          >
+            <Component
+              className="css-16kw2fg-PlatformCard ewlrg796"
+              data-test-id="platform-javascript"
+              onClear={[Function]}
+              onClick={[Function]}
+              platform={
+                Object {
+                  "id": "javascript",
+                  "language": "javascript",
+                  "link": "https://docs.getsentry.com/hosted/clients/javascript/install/",
+                  "name": "JavaScript",
+                  "type": "language",
+                }
+              }
+              selected={false}
+            >
+              <div
+                className="css-16kw2fg-PlatformCard ewlrg796"
+                data-test-id="platform-javascript"
                 onClick={[Function]}
-                platform="javascript-react"
               >
-                <span
-                  className="platform-card"
-                  onClick={[Function]}
+                <StyledPlatformiconTile
+                  platform="javascript"
                 >
-                  <PlatformiconTile
-                    className=""
-                    onClick={[Function]}
-                    platform="javascript-react"
-                  >
-                    <li
-                      className="platform-tile list-unstyled javascript-react javascript "
-                    >
-                      <span
-                        className="platformicon platformicon-javascript-react"
-                      />
-                    </li>
-                  </PlatformiconTile>
-                  <h5>
-                     
-                    React
-                     
-                  </h5>
-                </span>
-              </PlatformCard>
-              <PlatformCard
-                className=""
-                key="node-express"
+                  <div
+                    className="css-105qz5e-PlatformiconTile-getColorStyles-StyledPlatformiconTile ewlrg794"
+                  />
+                </StyledPlatformiconTile>
+                <h3>
+                  JavaScript
+                </h3>
+              </div>
+            </Component>
+          </PlatformCard>
+          <PlatformCard
+            data-test-id="platform-javascript-react"
+            key="javascript-react"
+            onClear={[Function]}
+            onClick={[Function]}
+            platform={
+              Object {
+                "id": "javascript-react",
+                "language": "javascript",
+                "link": "https://docs.getsentry.com/hosted/clients/javascript/integrations/react/",
+                "name": "React",
+                "type": "framework",
+              }
+            }
+            selected={false}
+          >
+            <Component
+              className="css-16kw2fg-PlatformCard ewlrg796"
+              data-test-id="platform-javascript-react"
+              onClear={[Function]}
+              onClick={[Function]}
+              platform={
+                Object {
+                  "id": "javascript-react",
+                  "language": "javascript",
+                  "link": "https://docs.getsentry.com/hosted/clients/javascript/integrations/react/",
+                  "name": "React",
+                  "type": "framework",
+                }
+              }
+              selected={false}
+            >
+              <div
+                className="css-16kw2fg-PlatformCard ewlrg796"
+                data-test-id="platform-javascript-react"
                 onClick={[Function]}
-                platform="node-express"
               >
-                <span
-                  className="platform-card"
-                  onClick={[Function]}
+                <StyledPlatformiconTile
+                  platform="javascript-react"
                 >
-                  <PlatformiconTile
-                    className=""
-                    onClick={[Function]}
-                    platform="node-express"
-                  >
-                    <li
-                      className="platform-tile list-unstyled node-express node "
-                    >
-                      <span
-                        className="platformicon platformicon-node-express"
-                      />
-                    </li>
-                  </PlatformiconTile>
-                  <h5>
-                     
-                    Express
-                     
-                  </h5>
-                </span>
-              </PlatformCard>
-              <PlatformCard
-                className=""
-                key="node"
+                  <div
+                    className="css-fosd7h-PlatformiconTile-getColorStyles-StyledPlatformiconTile ewlrg794"
+                  />
+                </StyledPlatformiconTile>
+                <h3>
+                  React
+                </h3>
+              </div>
+            </Component>
+          </PlatformCard>
+          <PlatformCard
+            data-test-id="platform-node-express"
+            key="node-express"
+            onClear={[Function]}
+            onClick={[Function]}
+            platform={
+              Object {
+                "id": "node-express",
+                "language": "node",
+                "link": "https://docs.getsentry.com/hosted/clients/node/integrations/express/",
+                "name": "Express",
+                "type": "framework",
+              }
+            }
+            selected={false}
+          >
+            <Component
+              className="css-16kw2fg-PlatformCard ewlrg796"
+              data-test-id="platform-node-express"
+              onClear={[Function]}
+              onClick={[Function]}
+              platform={
+                Object {
+                  "id": "node-express",
+                  "language": "node",
+                  "link": "https://docs.getsentry.com/hosted/clients/node/integrations/express/",
+                  "name": "Express",
+                  "type": "framework",
+                }
+              }
+              selected={false}
+            >
+              <div
+                className="css-16kw2fg-PlatformCard ewlrg796"
+                data-test-id="platform-node-express"
                 onClick={[Function]}
-                platform="node"
               >
-                <span
-                  className="platform-card"
-                  onClick={[Function]}
+                <StyledPlatformiconTile
+                  platform="node-express"
                 >
-                  <PlatformiconTile
-                    className=""
-                    onClick={[Function]}
-                    platform="node"
-                  >
-                    <li
-                      className="platform-tile list-unstyled node node "
-                    >
-                      <span
-                        className="platformicon platformicon-node"
-                      />
-                    </li>
-                  </PlatformiconTile>
-                  <h5>
-                     
-                    Node.js
-                     
-                  </h5>
-                </span>
-              </PlatformCard>
-              <PlatformCard
-                className=""
-                key="php-laravel"
+                  <div
+                    className="css-1wbn021-PlatformiconTile-getColorStyles-StyledPlatformiconTile ewlrg794"
+                  />
+                </StyledPlatformiconTile>
+                <h3>
+                  Express
+                </h3>
+              </div>
+            </Component>
+          </PlatformCard>
+          <PlatformCard
+            data-test-id="platform-node"
+            key="node"
+            onClear={[Function]}
+            onClick={[Function]}
+            platform={
+              Object {
+                "id": "node",
+                "language": "node",
+                "link": "https://docs.getsentry.com/hosted/clients/node/",
+                "name": "Node.js",
+                "type": "language",
+              }
+            }
+            selected={false}
+          >
+            <Component
+              className="css-16kw2fg-PlatformCard ewlrg796"
+              data-test-id="platform-node"
+              onClear={[Function]}
+              onClick={[Function]}
+              platform={
+                Object {
+                  "id": "node",
+                  "language": "node",
+                  "link": "https://docs.getsentry.com/hosted/clients/node/",
+                  "name": "Node.js",
+                  "type": "language",
+                }
+              }
+              selected={false}
+            >
+              <div
+                className="css-16kw2fg-PlatformCard ewlrg796"
+                data-test-id="platform-node"
                 onClick={[Function]}
-                platform="php-laravel"
               >
-                <span
-                  className="platform-card"
-                  onClick={[Function]}
+                <StyledPlatformiconTile
+                  platform="node"
                 >
-                  <PlatformiconTile
-                    className=""
-                    onClick={[Function]}
-                    platform="php-laravel"
-                  >
-                    <li
-                      className="platform-tile list-unstyled php-laravel php "
-                    >
-                      <span
-                        className="platformicon platformicon-php-laravel"
-                      />
-                    </li>
-                  </PlatformiconTile>
-                  <h5>
-                     
-                    Laravel
-                     
-                  </h5>
-                </span>
-              </PlatformCard>
-              <PlatformCard
-                className=""
-                key="php"
+                  <div
+                    className="css-1wbn021-PlatformiconTile-getColorStyles-StyledPlatformiconTile ewlrg794"
+                  />
+                </StyledPlatformiconTile>
+                <h3>
+                  Node.js
+                </h3>
+              </div>
+            </Component>
+          </PlatformCard>
+          <PlatformCard
+            data-test-id="platform-php-laravel"
+            key="php-laravel"
+            onClear={[Function]}
+            onClick={[Function]}
+            platform={
+              Object {
+                "id": "php-laravel",
+                "language": "php",
+                "link": "https://docs.getsentry.com/hosted/clients/php/integrations/laravel/",
+                "name": "Laravel",
+                "type": "framework",
+              }
+            }
+            selected={false}
+          >
+            <Component
+              className="css-16kw2fg-PlatformCard ewlrg796"
+              data-test-id="platform-php-laravel"
+              onClear={[Function]}
+              onClick={[Function]}
+              platform={
+                Object {
+                  "id": "php-laravel",
+                  "language": "php",
+                  "link": "https://docs.getsentry.com/hosted/clients/php/integrations/laravel/",
+                  "name": "Laravel",
+                  "type": "framework",
+                }
+              }
+              selected={false}
+            >
+              <div
+                className="css-16kw2fg-PlatformCard ewlrg796"
+                data-test-id="platform-php-laravel"
                 onClick={[Function]}
-                platform="php"
               >
-                <span
-                  className="platform-card"
-                  onClick={[Function]}
+                <StyledPlatformiconTile
+                  platform="php-laravel"
                 >
-                  <PlatformiconTile
-                    className=""
-                    onClick={[Function]}
-                    platform="php"
-                  >
-                    <li
-                      className="platform-tile list-unstyled php php "
-                    >
-                      <span
-                        className="platformicon platformicon-php"
-                      />
-                    </li>
-                  </PlatformiconTile>
-                  <h5>
-                     
-                    PHP
-                     
-                  </h5>
-                </span>
-              </PlatformCard>
-              <PlatformCard
-                className=""
-                key="php-symfony2"
+                  <div
+                    className="css-jzifau-PlatformiconTile-getColorStyles-StyledPlatformiconTile ewlrg794"
+                  />
+                </StyledPlatformiconTile>
+                <h3>
+                  Laravel
+                </h3>
+              </div>
+            </Component>
+          </PlatformCard>
+          <PlatformCard
+            data-test-id="platform-php"
+            key="php"
+            onClear={[Function]}
+            onClick={[Function]}
+            platform={
+              Object {
+                "id": "php",
+                "language": "php",
+                "link": "https://docs.getsentry.com/hosted/clients/php/",
+                "name": "PHP",
+                "type": "language",
+              }
+            }
+            selected={false}
+          >
+            <Component
+              className="css-16kw2fg-PlatformCard ewlrg796"
+              data-test-id="platform-php"
+              onClear={[Function]}
+              onClick={[Function]}
+              platform={
+                Object {
+                  "id": "php",
+                  "language": "php",
+                  "link": "https://docs.getsentry.com/hosted/clients/php/",
+                  "name": "PHP",
+                  "type": "language",
+                }
+              }
+              selected={false}
+            >
+              <div
+                className="css-16kw2fg-PlatformCard ewlrg796"
+                data-test-id="platform-php"
                 onClick={[Function]}
-                platform="php-symfony2"
               >
-                <span
-                  className="platform-card"
-                  onClick={[Function]}
+                <StyledPlatformiconTile
+                  platform="php"
                 >
-                  <PlatformiconTile
-                    className=""
-                    onClick={[Function]}
-                    platform="php-symfony2"
-                  >
-                    <li
-                      className="platform-tile list-unstyled php-symfony2 php "
-                    >
-                      <span
-                        className="platformicon platformicon-php-symfony2"
-                      />
-                    </li>
-                  </PlatformiconTile>
-                  <h5>
-                     
-                    Symfony2
-                     
-                  </h5>
-                </span>
-              </PlatformCard>
-              <PlatformCard
-                className=""
-                key="python-django"
+                  <div
+                    className="css-f6lc5m-PlatformiconTile-getColorStyles-StyledPlatformiconTile ewlrg794"
+                  />
+                </StyledPlatformiconTile>
+                <h3>
+                  PHP
+                </h3>
+              </div>
+            </Component>
+          </PlatformCard>
+          <PlatformCard
+            data-test-id="platform-php-symfony2"
+            key="php-symfony2"
+            onClear={[Function]}
+            onClick={[Function]}
+            platform={
+              Object {
+                "id": "php-symfony2",
+                "language": "php",
+                "link": "https://docs.getsentry.com/hosted/clients/php/integrations/symfony2/",
+                "name": "Symfony2",
+                "type": "framework",
+              }
+            }
+            selected={false}
+          >
+            <Component
+              className="css-16kw2fg-PlatformCard ewlrg796"
+              data-test-id="platform-php-symfony2"
+              onClear={[Function]}
+              onClick={[Function]}
+              platform={
+                Object {
+                  "id": "php-symfony2",
+                  "language": "php",
+                  "link": "https://docs.getsentry.com/hosted/clients/php/integrations/symfony2/",
+                  "name": "Symfony2",
+                  "type": "framework",
+                }
+              }
+              selected={false}
+            >
+              <div
+                className="css-16kw2fg-PlatformCard ewlrg796"
+                data-test-id="platform-php-symfony2"
                 onClick={[Function]}
-                platform="python-django"
               >
-                <span
-                  className="platform-card"
-                  onClick={[Function]}
+                <StyledPlatformiconTile
+                  platform="php-symfony2"
                 >
-                  <PlatformiconTile
-                    className=""
-                    onClick={[Function]}
-                    platform="python-django"
-                  >
-                    <li
-                      className="platform-tile list-unstyled python-django python "
-                    >
-                      <span
-                        className="platformicon platformicon-python-django"
-                      />
-                    </li>
-                  </PlatformiconTile>
-                  <h5>
-                     
-                    Django
-                     
-                  </h5>
-                </span>
-              </PlatformCard>
-              <PlatformCard
-                className=""
-                key="python-flask"
+                  <div
+                    className="css-f6lc5m-PlatformiconTile-getColorStyles-StyledPlatformiconTile ewlrg794"
+                  />
+                </StyledPlatformiconTile>
+                <h3>
+                  Symfony2
+                </h3>
+              </div>
+            </Component>
+          </PlatformCard>
+          <PlatformCard
+            data-test-id="platform-python-django"
+            key="python-django"
+            onClear={[Function]}
+            onClick={[Function]}
+            platform={
+              Object {
+                "id": "python-django",
+                "language": "python",
+                "link": "https://docs.getsentry.com/hosted/clients/python/integrations/django/",
+                "name": "Django",
+                "type": "framework",
+              }
+            }
+            selected={false}
+          >
+            <Component
+              className="css-16kw2fg-PlatformCard ewlrg796"
+              data-test-id="platform-python-django"
+              onClear={[Function]}
+              onClick={[Function]}
+              platform={
+                Object {
+                  "id": "python-django",
+                  "language": "python",
+                  "link": "https://docs.getsentry.com/hosted/clients/python/integrations/django/",
+                  "name": "Django",
+                  "type": "framework",
+                }
+              }
+              selected={false}
+            >
+              <div
+                className="css-16kw2fg-PlatformCard ewlrg796"
+                data-test-id="platform-python-django"
                 onClick={[Function]}
-                platform="python-flask"
               >
-                <span
-                  className="platform-card"
-                  onClick={[Function]}
+                <StyledPlatformiconTile
+                  platform="python-django"
                 >
-                  <PlatformiconTile
-                    className=""
-                    onClick={[Function]}
-                    platform="python-flask"
-                  >
-                    <li
-                      className="platform-tile list-unstyled python-flask python "
-                    >
-                      <span
-                        className="platformicon platformicon-python-flask"
-                      />
-                    </li>
-                  </PlatformiconTile>
-                  <h5>
-                     
-                    Flask
-                     
-                  </h5>
-                </span>
-              </PlatformCard>
-              <PlatformCard
-                className=""
-                key="python"
+                  <div
+                    className="css-13uplim-PlatformiconTile-getColorStyles-StyledPlatformiconTile ewlrg794"
+                  />
+                </StyledPlatformiconTile>
+                <h3>
+                  Django
+                </h3>
+              </div>
+            </Component>
+          </PlatformCard>
+          <PlatformCard
+            data-test-id="platform-python-flask"
+            key="python-flask"
+            onClear={[Function]}
+            onClick={[Function]}
+            platform={
+              Object {
+                "id": "python-flask",
+                "language": "python",
+                "link": "https://docs.getsentry.com/hosted/clients/python/integrations/flask/",
+                "name": "Flask",
+                "type": "framework",
+              }
+            }
+            selected={false}
+          >
+            <Component
+              className="css-16kw2fg-PlatformCard ewlrg796"
+              data-test-id="platform-python-flask"
+              onClear={[Function]}
+              onClick={[Function]}
+              platform={
+                Object {
+                  "id": "python-flask",
+                  "language": "python",
+                  "link": "https://docs.getsentry.com/hosted/clients/python/integrations/flask/",
+                  "name": "Flask",
+                  "type": "framework",
+                }
+              }
+              selected={false}
+            >
+              <div
+                className="css-16kw2fg-PlatformCard ewlrg796"
+                data-test-id="platform-python-flask"
                 onClick={[Function]}
-                platform="python"
               >
-                <span
-                  className="platform-card"
-                  onClick={[Function]}
+                <StyledPlatformiconTile
+                  platform="python-flask"
                 >
-                  <PlatformiconTile
-                    className=""
-                    onClick={[Function]}
-                    platform="python"
-                  >
-                    <li
-                      className="platform-tile list-unstyled python python "
-                    >
-                      <span
-                        className="platformicon platformicon-python"
-                      />
-                    </li>
-                  </PlatformiconTile>
-                  <h5>
-                     
-                    Python
-                     
-                  </h5>
-                </span>
-              </PlatformCard>
-              <PlatformCard
-                className=""
-                key="cocoa"
+                  <div
+                    className="css-1lbt1li-PlatformiconTile-getColorStyles-StyledPlatformiconTile ewlrg794"
+                  />
+                </StyledPlatformiconTile>
+                <h3>
+                  Flask
+                </h3>
+              </div>
+            </Component>
+          </PlatformCard>
+          <PlatformCard
+            data-test-id="platform-python"
+            key="python"
+            onClear={[Function]}
+            onClick={[Function]}
+            platform={
+              Object {
+                "id": "python",
+                "language": "python",
+                "link": "https://docs.getsentry.com/hosted/clients/python/",
+                "name": "Python",
+                "type": "language",
+              }
+            }
+            selected={false}
+          >
+            <Component
+              className="css-16kw2fg-PlatformCard ewlrg796"
+              data-test-id="platform-python"
+              onClear={[Function]}
+              onClick={[Function]}
+              platform={
+                Object {
+                  "id": "python",
+                  "language": "python",
+                  "link": "https://docs.getsentry.com/hosted/clients/python/",
+                  "name": "Python",
+                  "type": "language",
+                }
+              }
+              selected={false}
+            >
+              <div
+                className="css-16kw2fg-PlatformCard ewlrg796"
+                data-test-id="platform-python"
                 onClick={[Function]}
-                platform="cocoa"
               >
-                <span
-                  className="platform-card"
-                  onClick={[Function]}
+                <StyledPlatformiconTile
+                  platform="python"
                 >
-                  <PlatformiconTile
-                    className=""
-                    onClick={[Function]}
-                    platform="cocoa"
-                  >
-                    <li
-                      className="platform-tile list-unstyled cocoa cocoa "
-                    >
-                      <span
-                        className="platformicon platformicon-cocoa"
-                      />
-                    </li>
-                  </PlatformiconTile>
-                  <h5>
-                     
-                    React-Native
-                     
-                  </h5>
-                </span>
-              </PlatformCard>
-              <PlatformCard
-                className=""
-                key="ruby-rails"
+                  <div
+                    className="css-1vvuenp-PlatformiconTile-getColorStyles-StyledPlatformiconTile ewlrg794"
+                  />
+                </StyledPlatformiconTile>
+                <h3>
+                  Python
+                </h3>
+              </div>
+            </Component>
+          </PlatformCard>
+          <PlatformCard
+            data-test-id="platform-cocoa"
+            key="cocoa"
+            onClear={[Function]}
+            onClick={[Function]}
+            platform={
+              Object {
+                "id": "cocoa",
+                "language": "cocoa",
+                "link": "https://docs.getsentry.com/hosted/clients/react-native/",
+                "name": "React-Native",
+                "type": "language",
+              }
+            }
+            selected={false}
+          >
+            <Component
+              className="css-16kw2fg-PlatformCard ewlrg796"
+              data-test-id="platform-cocoa"
+              onClear={[Function]}
+              onClick={[Function]}
+              platform={
+                Object {
+                  "id": "cocoa",
+                  "language": "cocoa",
+                  "link": "https://docs.getsentry.com/hosted/clients/react-native/",
+                  "name": "React-Native",
+                  "type": "language",
+                }
+              }
+              selected={false}
+            >
+              <div
+                className="css-16kw2fg-PlatformCard ewlrg796"
+                data-test-id="platform-cocoa"
                 onClick={[Function]}
-                platform="ruby-rails"
               >
-                <span
-                  className="platform-card"
-                  onClick={[Function]}
+                <StyledPlatformiconTile
+                  platform="cocoa"
                 >
-                  <PlatformiconTile
-                    className=""
-                    onClick={[Function]}
-                    platform="ruby-rails"
-                  >
-                    <li
-                      className="platform-tile list-unstyled ruby-rails ruby "
-                    >
-                      <span
-                        className="platformicon platformicon-ruby-rails"
-                      />
-                    </li>
-                  </PlatformiconTile>
-                  <h5>
-                     
-                    Rails
-                     
-                  </h5>
-                </span>
-              </PlatformCard>
-              <PlatformCard
-                className=""
-                key="ruby"
+                  <div
+                    className="css-yhb6wb-PlatformiconTile-getColorStyles-StyledPlatformiconTile ewlrg794"
+                  />
+                </StyledPlatformiconTile>
+                <h3>
+                  React-Native
+                </h3>
+              </div>
+            </Component>
+          </PlatformCard>
+          <PlatformCard
+            data-test-id="platform-ruby-rails"
+            key="ruby-rails"
+            onClear={[Function]}
+            onClick={[Function]}
+            platform={
+              Object {
+                "id": "ruby-rails",
+                "language": "ruby",
+                "link": "https://docs.getsentry.com/hosted/clients/ruby/integrations/rails/",
+                "name": "Rails",
+                "type": "framework",
+              }
+            }
+            selected={false}
+          >
+            <Component
+              className="css-16kw2fg-PlatformCard ewlrg796"
+              data-test-id="platform-ruby-rails"
+              onClear={[Function]}
+              onClick={[Function]}
+              platform={
+                Object {
+                  "id": "ruby-rails",
+                  "language": "ruby",
+                  "link": "https://docs.getsentry.com/hosted/clients/ruby/integrations/rails/",
+                  "name": "Rails",
+                  "type": "framework",
+                }
+              }
+              selected={false}
+            >
+              <div
+                className="css-16kw2fg-PlatformCard ewlrg796"
+                data-test-id="platform-ruby-rails"
                 onClick={[Function]}
-                platform="ruby"
               >
-                <span
-                  className="platform-card"
-                  onClick={[Function]}
+                <StyledPlatformiconTile
+                  platform="ruby-rails"
                 >
-                  <PlatformiconTile
-                    className=""
-                    onClick={[Function]}
-                    platform="ruby"
-                  >
-                    <li
-                      className="platform-tile list-unstyled ruby ruby "
-                    >
-                      <span
-                        className="platformicon platformicon-ruby"
-                      />
-                    </li>
-                  </PlatformiconTile>
-                  <h5>
-                     
-                    Ruby
-                     
-                  </h5>
-                </span>
-              </PlatformCard>
-            </ul>
-          </div>
-        </PlatformPicker>
-        <div
-          className="create-project-form"
-        >
-          <div
-            className="new-project-name client-platform"
+                  <div
+                    className="css-15nw1ir-PlatformiconTile-getColorStyles-StyledPlatformiconTile ewlrg794"
+                  />
+                </StyledPlatformiconTile>
+                <h3>
+                  Rails
+                </h3>
+              </div>
+            </Component>
+          </PlatformCard>
+          <PlatformCard
+            data-test-id="platform-ruby"
+            key="ruby"
+            onClear={[Function]}
+            onClick={[Function]}
+            platform={
+              Object {
+                "id": "ruby",
+                "language": "ruby",
+                "link": "https://docs.getsentry.com/hosted/clients/ruby/",
+                "name": "Ruby",
+                "type": "language",
+              }
+            }
+            selected={false}
           >
-            <PageHeading
-              withMargins={true}
+            <Component
+              className="css-16kw2fg-PlatformCard ewlrg796"
+              data-test-id="platform-ruby"
+              onClear={[Function]}
+              onClick={[Function]}
+              platform={
+                Object {
+                  "id": "ruby",
+                  "language": "ruby",
+                  "link": "https://docs.getsentry.com/hosted/clients/ruby/",
+                  "name": "Ruby",
+                  "type": "language",
+                }
+              }
+              selected={false}
             >
-              <Wrapper
-                withMargins={true}
+              <div
+                className="css-16kw2fg-PlatformCard ewlrg796"
+                data-test-id="platform-ruby"
+                onClick={[Function]}
               >
-                <h1
-                  className="css-13ev48w-Wrapper e1f8hk460"
+                <StyledPlatformiconTile
+                  platform="ruby"
                 >
-                  Give your project a name:
-                </h1>
-              </Wrapper>
-            </PageHeading>
+                  <div
+                    className="css-ze44n6-PlatformiconTile-getColorStyles-StyledPlatformiconTile ewlrg794"
+                  />
+                </StyledPlatformiconTile>
+                <h3>
+                  Ruby
+                </h3>
+              </div>
+            </Component>
+          </PlatformCard>
+        </div>
+      </PlatformList>
+    </PlatformPicker>
+    <CreateProjectForm
+      onSubmit={[Function]}
+    >
+      <form
+        className="css-1ibxl16-CreateProjectForm eovdm170"
+        onSubmit={[Function]}
+      >
+        <div>
+          <FormLabel>
+            <div
+              className="css-4lvcxw-FormLabel eovdm171"
+            >
+              Give your project a name
+            </div>
+          </FormLabel>
+          <ProjectNameInput>
             <div
-              className="project-name-wrapper"
+              className="css-1dtytc5-ProjectNameInput-inputStyles eovdm173"
             >
-              <PlatformiconTile
+              <ProjectPlatformicon
+                monoTone={true}
                 platform="csharp"
               >
-                <li
-                  className="platform-tile list-unstyled csharp csharp undefined"
-                >
-                  <span
-                    className="platformicon platformicon-csharp"
-                  />
-                </li>
-              </PlatformiconTile>
+                <div
+                  className="css-yuv2jf-PlatformiconTile-ProjectPlatformicon eovdm172"
+                />
+              </ProjectPlatformicon>
               <input
                 autoComplete="off"
                 label="Project Name"
@@ -2740,370 +3778,383 @@ exports[`CreateProject should fill in project name if its empty when platform is
                 value="another"
               />
             </div>
-          </div>
-          <div
-            className="new-project-team"
-          >
-            <PageHeading
-              withMargins={true}
+          </ProjectNameInput>
+        </div>
+        <div>
+          <FormLabel>
+            <div
+              className="css-4lvcxw-FormLabel eovdm171"
             >
-              <Wrapper
-                withMargins={true}
-              >
-                <h1
-                  className="css-13ev48w-Wrapper e1f8hk460"
-                >
-                  Team:
-                </h1>
-              </Wrapper>
-            </PageHeading>
-            <div>
-              <SelectField
+              Assign a Team
+            </div>
+          </FormLabel>
+          <TeamSelectInput>
+            <div
+              className="css-75pel-TeamSelectInput eovdm174"
+            >
+              <SelectControl
                 clearable={false}
-                disabled={false}
-                hideErrorMessage={false}
+                height={36}
                 multiple={false}
                 name="select-team"
                 onChange={[Function]}
-                options={
-                  Array [
-                    Object {
-                      "label": "#test",
-                      "value": "test",
-                    },
-                  ]
-                }
-                required={false}
-                style={
-                  Object {
-                    "marginBottom": 0,
-                    "width": 180,
-                  }
-                }
-                value="test"
+                options={Array []}
+                placeholder="Select a Team"
+                value={0}
               >
-                <div
-                  className=""
-                  style={
-                    Object {
-                      "marginBottom": 0,
-                      "width": 180,
-                    }
-                  }
+                <StyledSelect
+                  arrowRenderer={[Function]}
+                  backspaceRemoves={false}
+                  clearable={false}
+                  deleteRemoves={false}
+                  height={36}
+                  multiple={false}
+                  name="select-team"
+                  onChange={[Function]}
+                  options={Array []}
+                  placeholder="Select a Team"
+                  value={0}
                 >
-                  <div
-                    className="controls"
+                  <ForwardRef(SelectPicker)
+                    arrowRenderer={[Function]}
+                    backspaceRemoves={false}
+                    className="css-6lbkok-StyledSelect eho28m20"
+                    clearable={false}
+                    deleteRemoves={false}
+                    height={36}
+                    multiple={false}
+                    name="select-team"
+                    onChange={[Function]}
+                    options={Array []}
+                    placeholder="Select a Team"
+                    value={0}
                   >
-                    <StyledSelectControl
+                    <SelectPicker
+                      arrowRenderer={[Function]}
+                      backspaceRemoves={false}
+                      className="css-6lbkok-StyledSelect eho28m20"
                       clearable={false}
-                      disabled={false}
-                      id="id-select-team"
+                      deleteRemoves={false}
+                      forwardedRef={null}
+                      height={36}
                       multiple={false}
                       name="select-team"
                       onChange={[Function]}
-                      options={
-                        Array [
-                          Object {
-                            "label": "#test",
-                            "value": "test",
-                          },
-                        ]
-                      }
-                      required={false}
-                      value="test"
+                      options={Array []}
+                      placeholder="Select a Team"
+                      value={0}
                     >
-                      <SelectControl
-                        className="css-j6zs66-StyledSelectControl e1qrhqd00"
+                      <Select
+                        arrowRenderer={[Function]}
+                        autosize={true}
+                        backspaceRemoves={false}
+                        backspaceToRemoveMessage="Press backspace to remove {label}"
+                        className="css-6lbkok-StyledSelect eho28m20"
+                        clearAllText="Clear all"
+                        clearRenderer={[Function]}
+                        clearValueText="Clear value"
                         clearable={false}
+                        closeOnSelect={true}
+                        deleteRemoves={false}
+                        delimiter=","
                         disabled={false}
+                        escapeClearsValue={true}
+                        filterOptions={[Function]}
                         height={36}
-                        id="id-select-team"
+                        ignoreAccents={true}
+                        ignoreCase={true}
+                        inputProps={Object {}}
+                        isLoading={false}
+                        joinValues={false}
+                        labelKey="label"
+                        matchPos="any"
+                        matchProp="any"
+                        menuBuffer={0}
+                        menuRenderer={[Function]}
+                        multi={false}
                         multiple={false}
                         name="select-team"
+                        noResultsText="No results found"
+                        onBlurResetsInput={true}
                         onChange={[Function]}
-                        options={
-                          Array [
-                            Object {
-                              "label": "#test",
-                              "value": "test",
-                            },
-                          ]
-                        }
+                        onCloseResetsInput={true}
+                        onSelectResetsInput={true}
+                        openOnClick={true}
+                        optionComponent={[Function]}
+                        options={Array []}
+                        pageSize={5}
+                        placeholder="Select a Team"
+                        removeSelected={true}
                         required={false}
-                        value="test"
+                        rtl={false}
+                        scrollMenuIntoView={true}
+                        searchable={true}
+                        simpleValue={false}
+                        tabSelectsValue={true}
+                        trimFilter={true}
+                        value={0}
+                        valueComponent={[Function]}
+                        valueKey="value"
                       >
-                        <StyledSelect
-                          arrowRenderer={[Function]}
-                          backspaceRemoves={false}
-                          className="css-j6zs66-StyledSelectControl e1qrhqd00"
-                          clearable={false}
-                          deleteRemoves={false}
-                          disabled={false}
-                          height={36}
-                          id="id-select-team"
-                          multiple={false}
-                          name="select-team"
-                          onChange={[Function]}
-                          options={
-                            Array [
-                              Object {
-                                "label": "#test",
-                                "value": "test",
-                              },
-                            ]
-                          }
-                          required={false}
-                          value="test"
+                        <div
+                          className="Select css-6lbkok-StyledSelect eho28m20 is-searchable Select--single"
                         >
-                          <ForwardRef(SelectPicker)
-                            arrowRenderer={[Function]}
-                            backspaceRemoves={false}
-                            className="e1qrhqd00 css-pr263a-StyledSelect-StyledSelectControl eho28m20"
-                            clearable={false}
-                            deleteRemoves={false}
-                            disabled={false}
-                            height={36}
-                            id="id-select-team"
-                            multiple={false}
-                            name="select-team"
-                            onChange={[Function]}
-                            options={
-                              Array [
-                                Object {
-                                  "label": "#test",
-                                  "value": "test",
-                                },
-                              ]
-                            }
-                            required={false}
-                            value="test"
+                          <div
+                            className="Select-control"
+                            onKeyDown={[Function]}
+                            onMouseDown={[Function]}
+                            onTouchEnd={[Function]}
+                            onTouchMove={[Function]}
+                            onTouchStart={[Function]}
                           >
-                            <SelectPicker
-                              arrowRenderer={[Function]}
-                              backspaceRemoves={false}
-                              className="e1qrhqd00 css-pr263a-StyledSelect-StyledSelectControl eho28m20"
-                              clearable={false}
-                              deleteRemoves={false}
-                              disabled={false}
-                              forwardedRef={null}
-                              height={36}
-                              id="id-select-team"
-                              multiple={false}
-                              name="select-team"
-                              onChange={[Function]}
-                              options={
-                                Array [
-                                  Object {
-                                    "label": "#test",
-                                    "value": "test",
-                                  },
-                                ]
-                              }
-                              required={false}
-                              value="test"
+                            <span
+                              className="Select-multi-value-wrapper"
+                              id="react-select-3--value"
                             >
-                              <Select
-                                arrowRenderer={[Function]}
-                                autosize={true}
-                                backspaceRemoves={false}
-                                backspaceToRemoveMessage="Press backspace to remove {label}"
-                                className="e1qrhqd00 css-pr263a-StyledSelect-StyledSelectControl eho28m20"
-                                clearAllText="Clear all"
-                                clearRenderer={[Function]}
-                                clearValueText="Clear value"
-                                clearable={false}
-                                closeOnSelect={true}
-                                deleteRemoves={false}
-                                delimiter=","
-                                disabled={false}
-                                escapeClearsValue={true}
-                                filterOptions={[Function]}
-                                height={36}
-                                id="id-select-team"
-                                ignoreAccents={true}
-                                ignoreCase={true}
-                                inputProps={Object {}}
-                                isLoading={false}
-                                joinValues={false}
-                                labelKey="label"
-                                matchPos="any"
-                                matchProp="any"
-                                menuBuffer={0}
-                                menuRenderer={[Function]}
-                                multi={false}
-                                multiple={false}
-                                name="select-team"
-                                noResultsText="No results found"
-                                onBlurResetsInput={true}
+                              <div
+                                className="Select-placeholder"
+                              >
+                                Select a Team
+                              </div>
+                              <AutosizeInput
+                                aria-activedescendant="react-select-3--value"
+                                aria-expanded="false"
+                                aria-haspopup="false"
+                                aria-owns=""
+                                className="Select-input"
+                                injectStyles={true}
+                                minWidth="5"
+                                onBlur={[Function]}
                                 onChange={[Function]}
-                                onCloseResetsInput={true}
-                                onSelectResetsInput={true}
-                                openOnClick={true}
-                                optionComponent={[Function]}
-                                options={
-                                  Array [
-                                    Object {
-                                      "label": "#test",
-                                      "value": "test",
-                                    },
-                                  ]
-                                }
-                                pageSize={5}
-                                placeholder="Select..."
-                                removeSelected={true}
+                                onFocus={[Function]}
                                 required={false}
-                                rtl={false}
-                                scrollMenuIntoView={true}
-                                searchable={true}
-                                simpleValue={false}
-                                tabSelectsValue={true}
-                                trimFilter={true}
-                                value="test"
-                                valueComponent={[Function]}
-                                valueKey="value"
+                                role="combobox"
+                                value=""
                               >
                                 <div
-                                  className="Select e1qrhqd00 css-pr263a-StyledSelect-StyledSelectControl eho28m20 has-value is-searchable Select--single"
+                                  className="Select-input"
+                                  style={
+                                    Object {
+                                      "display": "inline-block",
+                                    }
+                                  }
                                 >
                                   <input
-                                    disabled={false}
-                                    key="hidden.0"
-                                    name="select-team"
-                                    type="hidden"
-                                    value="test"
+                                    aria-activedescendant="react-select-3--value"
+                                    aria-expanded="false"
+                                    aria-haspopup="false"
+                                    aria-owns=""
+                                    onBlur={[Function]}
+                                    onChange={[Function]}
+                                    onFocus={[Function]}
+                                    required={false}
+                                    role="combobox"
+                                    style={
+                                      Object {
+                                        "boxSizing": "content-box",
+                                        "width": "5px",
+                                      }
+                                    }
+                                    value=""
                                   />
                                   <div
-                                    className="Select-control"
-                                    onKeyDown={[Function]}
-                                    onMouseDown={[Function]}
-                                    onTouchEnd={[Function]}
-                                    onTouchMove={[Function]}
-                                    onTouchStart={[Function]}
+                                    style={
+                                      Object {
+                                        "height": 0,
+                                        "left": 0,
+                                        "overflow": "scroll",
+                                        "position": "absolute",
+                                        "top": 0,
+                                        "visibility": "hidden",
+                                        "whiteSpace": "pre",
+                                      }
+                                    }
+                                  />
+                                </div>
+                              </AutosizeInput>
+                            </span>
+                            <span
+                              className="Select-arrow-zone"
+                              onMouseDown={[Function]}
+                            >
+                              <span
+                                className="icon-arrow-down"
+                              />
+                            </span>
+                          </div>
+                        </div>
+                      </Select>
+                    </SelectPicker>
+                  </ForwardRef(SelectPicker)>
+                </StyledSelect>
+              </SelectControl>
+              <Tooltip
+                title="Create a team"
+              >
+                <Button
+                  borderless={true}
+                  className="tip"
+                  data-test-id="create-team"
+                  disabled={false}
+                  icon="icon-circle-add"
+                  onClick={[Function]}
+                  title="Create a team"
+                  type="button"
+                >
+                  <Tooltip
+                    title="Create a team"
+                  >
+                    <StyledButton
+                      aria-disabled={false}
+                      borderless={true}
+                      className="tip tip"
+                      data-test-id="create-team"
+                      disabled={false}
+                      onClick={[Function]}
+                      role="button"
+                      title="Create a team"
+                      type="button"
+                    >
+                      <Component
+                        aria-disabled={false}
+                        className="tip tip css-1v8ytf5-StyledButton-getColors eqrebog0"
+                        data-test-id="create-team"
+                        onClick={[Function]}
+                        role="button"
+                        title="Create a team"
+                        type="button"
+                      >
+                        <button
+                          aria-disabled={false}
+                          className="tip tip css-1v8ytf5-StyledButton-getColors eqrebog0"
+                          data-test-id="create-team"
+                          onClick={[Function]}
+                          role="button"
+                          title="Create a team"
+                          type="button"
+                        >
+                          <ButtonLabel
+                            borderless={true}
+                          >
+                            <Component
+                              borderless={true}
+                              className="css-uthd1f-ButtonLabel eqrebog1"
+                            >
+                              <span
+                                className="css-uthd1f-ButtonLabel eqrebog1"
+                              >
+                                <Icon
+                                  hasChildren={false}
+                                >
+                                  <Component
+                                    className="css-ljhpxy-Icon eqrebog2"
+                                    hasChildren={false}
                                   >
                                     <span
-                                      className="Select-multi-value-wrapper"
-                                      id="react-select-2--value"
+                                      className="css-ljhpxy-Icon eqrebog2"
                                     >
-                                      <Value
-                                        disabled={false}
-                                        id="react-select-2--value-item"
-                                        instancePrefix="react-select-2-"
-                                        onClick={null}
-                                        placeholder="Select..."
-                                        value={
-                                          Object {
-                                            "label": "#test",
-                                            "value": "test",
-                                          }
-                                        }
+                                      <StyledInlineSvg
+                                        size="16px"
+                                        src="icon-circle-add"
                                       >
-                                        <div
-                                          className="Select-value"
+                                        <InlineSvg
+                                          className="css-1ov3rcq-StyledInlineSvg eqrebog3"
+                                          size="16px"
+                                          src="icon-circle-add"
                                         >
-                                          <span
-                                            aria-selected="true"
-                                            className="Select-value-label"
-                                            id="react-select-2--value-item"
-                                            role="option"
+                                          <StyledSvg
+                                            className="css-1ov3rcq-StyledInlineSvg eqrebog3"
+                                            height="16px"
+                                            viewBox={Object {}}
+                                            width="16px"
                                           >
-                                            #test
-                                          </span>
-                                        </div>
-                                      </Value>
-                                      <AutosizeInput
-                                        aria-activedescendant="react-select-2--value"
-                                        aria-expanded="false"
-                                        aria-haspopup="false"
-                                        aria-owns=""
-                                        className="Select-input"
-                                        id="id-select-team"
-                                        injectStyles={true}
-                                        minWidth="5"
-                                        onBlur={[Function]}
-                                        onChange={[Function]}
-                                        onFocus={[Function]}
-                                        required={false}
-                                        role="combobox"
-                                        value=""
-                                      >
-                                        <div
-                                          className="Select-input"
-                                          style={
-                                            Object {
-                                              "display": "inline-block",
-                                            }
-                                          }
-                                        >
-                                          <input
-                                            aria-activedescendant="react-select-2--value"
-                                            aria-expanded="false"
-                                            aria-haspopup="false"
-                                            aria-owns=""
-                                            id="id-select-team"
-                                            onBlur={[Function]}
-                                            onChange={[Function]}
-                                            onFocus={[Function]}
-                                            required={false}
-                                            role="combobox"
-                                            style={
-                                              Object {
-                                                "boxSizing": "content-box",
-                                                "width": "5px",
-                                              }
-                                            }
-                                            value=""
-                                          />
-                                          <div
-                                            style={
-                                              Object {
-                                                "height": 0,
-                                                "left": 0,
-                                                "overflow": "scroll",
-                                                "position": "absolute",
-                                                "top": 0,
-                                                "visibility": "hidden",
-                                                "whiteSpace": "pre",
-                                              }
-                                            }
-                                          />
-                                        </div>
-                                      </AutosizeInput>
+                                            <svg
+                                              className="eqrebog3 css-1jjmnki-StyledSvg-StyledInlineSvg e2idor0"
+                                              height="16px"
+                                              viewBox={Object {}}
+                                              width="16px"
+                                            >
+                                              <use
+                                                href="#test"
+                                                xlinkHref="#test"
+                                              />
+                                            </svg>
+                                          </StyledSvg>
+                                        </InlineSvg>
+                                      </StyledInlineSvg>
                                     </span>
-                                    <span
-                                      className="Select-arrow-zone"
-                                      onMouseDown={[Function]}
-                                    >
-                                      <span
-                                        className="icon-arrow-down"
-                                      />
-                                    </span>
-                                  </div>
-                                </div>
-                              </Select>
-                            </SelectPicker>
-                          </ForwardRef(SelectPicker)>
-                        </StyledSelect>
-                      </SelectControl>
-                    </StyledSelectControl>
-                  </div>
-                </div>
-              </SelectField>
+                                  </Component>
+                                </Icon>
+                              </span>
+                            </Component>
+                          </ButtonLabel>
+                        </button>
+                      </Component>
+                    </StyledButton>
+                  </Tooltip>
+                </Button>
+              </Tooltip>
             </div>
-          </div>
-          <div>
-            <button
-              className="btn btn-primary new-project-submit"
+          </TeamSelectInput>
+        </div>
+        <div>
+          <Button
+            data-test-id="create-project"
+            disabled={true}
+            priority="primary"
+          >
+            <StyledButton
+              aria-disabled={true}
+              aria-label="Create Project"
+              data-test-id="create-project"
+              disabled={true}
+              href={null}
               onClick={[Function]}
+              priority="primary"
+              role="button"
+              to={null}
             >
-              Create Project
-            </button>
-          </div>
-          <p>
-            Projects allow you to scope events to a specific application in your organization. For example, you might have separate projects for your API server and frontend client.
-          </p>
+              <Component
+                aria-disabled={true}
+                aria-label="Create Project"
+                className="css-bo8dlg-StyledButton-getColors eqrebog0"
+                data-test-id="create-project"
+                href={null}
+                onClick={[Function]}
+                role="button"
+                to={null}
+              >
+                <button
+                  aria-disabled={true}
+                  aria-label="Create Project"
+                  className="css-bo8dlg-StyledButton-getColors eqrebog0"
+                  data-test-id="create-project"
+                  href={null}
+                  onClick={[Function]}
+                  role="button"
+                  to={null}
+                >
+                  <ButtonLabel
+                    priority="primary"
+                  >
+                    <Component
+                      className="css-ga4b18-ButtonLabel eqrebog1"
+                      priority="primary"
+                    >
+                      <span
+                        className="css-ga4b18-ButtonLabel eqrebog1"
+                      >
+                        Create Project
+                      </span>
+                    </Component>
+                  </ButtonLabel>
+                </button>
+              </Component>
+            </StyledButton>
+          </Button>
         </div>
-      </div>
-    </OnboardingProject>
+      </form>
+    </CreateProjectForm>
   </div>
 </CreateProject>
 `;
diff --git a/tests/js/spec/views/onboarding/__snapshots__/index.spec.jsx.snap b/tests/js/spec/views/onboarding/__snapshots__/index.spec.jsx.snap
index c036279225..06fc647cd1 100644
--- a/tests/js/spec/views/onboarding/__snapshots__/index.spec.jsx.snap
+++ b/tests/js/spec/views/onboarding/__snapshots__/index.spec.jsx.snap
@@ -23,2559 +23,3 @@ exports[`OnboardingWizard render() should render NotFound if no matching organiz
   </div>
 </OnboardingBackground>
 `;
-
-exports[`OnboardingWizard render() should render and respond to click events 1`] = `
-<OnboardingWizard
-  location={
-    Object {
-      "query": Object {},
-    }
-  }
-  params={
-    Object {
-      "orgId": "testOrg",
-      "projectId": "",
-    }
-  }
->
-  <OnboardingBackground>
-    <div
-      className="css-pv6tzi-OnboardingBackground e1nt3q690"
-    >
-      <div
-        className="onboarding-container"
-      >
-        <SideEffect(DocumentTitle)
-          title="Sentry"
-        >
-          <DocumentTitle
-            title="Sentry"
-          />
-        </SideEffect(DocumentTitle)>
-        <div
-          className="step-container"
-        >
-          <ProgressNodes
-            params={
-              Object {
-                "orgId": "testOrg",
-                "projectId": "",
-              }
-            }
-          >
-            <div
-              className="onboarding-sidebar"
-            >
-              <div
-                className="sentry-flag"
-              >
-                <span
-                  className="icon-sentry-logo-full"
-                  href="/"
-                />
-              </div>
-              <Node
-                active={false}
-                data-test-id="node"
-                done={true}
-                key="0"
-              >
-                <div
-                  className="css-zrjk08-Node e1en1fxy0"
-                  data-test-id="node"
-                >
-                  <NodeIcon
-                    src="icon-circle-check"
-                  >
-                    <InlineSvg
-                      className="css-1y5anzy-NodeIcon e1en1fxy1"
-                      src="icon-circle-check"
-                    >
-                      <StyledSvg
-                        className="css-1y5anzy-NodeIcon e1en1fxy1"
-                        height="1em"
-                        viewBox={Object {}}
-                        width="1em"
-                      >
-                        <svg
-                          className="e1en1fxy1 css-x6jhby-StyledSvg-NodeIcon e2idor0"
-                          height="1em"
-                          viewBox={Object {}}
-                          width="1em"
-                        >
-                          <use
-                            href="#test"
-                            xlinkHref="#test"
-                          />
-                        </svg>
-                      </StyledSvg>
-                    </InlineSvg>
-                  </NodeIcon>
-                  <NodeDescription
-                    data-test-id="node-description"
-                  >
-                    <div
-                      className="css-yyeqaq-NodeDescription e1en1fxy2"
-                      data-test-id="node-description"
-                    >
-                      Create an organization in Sentry
-                    </div>
-                  </NodeDescription>
-                </div>
-              </Node>
-              <Node
-                active={true}
-                data-test-id="node"
-                done={false}
-                key="1"
-              >
-                <div
-                  className="css-pe396z-Node e1en1fxy0"
-                  data-test-id="node"
-                >
-                  <NodeIcon
-                    src="icon-circle-empty"
-                  >
-                    <InlineSvg
-                      className="css-1y5anzy-NodeIcon e1en1fxy1"
-                      src="icon-circle-empty"
-                    >
-                      <StyledSvg
-                        className="css-1y5anzy-NodeIcon e1en1fxy1"
-                        height="1em"
-                        viewBox={Object {}}
-                        width="1em"
-                      >
-                        <svg
-                          className="e1en1fxy1 css-x6jhby-StyledSvg-NodeIcon e2idor0"
-                          height="1em"
-                          viewBox={Object {}}
-                          width="1em"
-                        >
-                          <use
-                            href="#test"
-                            xlinkHref="#test"
-                          />
-                        </svg>
-                      </StyledSvg>
-                    </InlineSvg>
-                  </NodeIcon>
-                  <NodeDescription
-                    data-test-id="node-description"
-                  >
-                    <div
-                      className="css-yyeqaq-NodeDescription e1en1fxy2"
-                      data-test-id="node-description"
-                    >
-                      Tell us about your project
-                    </div>
-                  </NodeDescription>
-                </div>
-              </Node>
-              <Node
-                active={false}
-                data-test-id="node"
-                done={false}
-                key="2"
-              >
-                <div
-                  className="css-zrjk08-Node e1en1fxy0"
-                  data-test-id="node"
-                >
-                  <NodeIcon
-                    src="icon-circle-empty"
-                  >
-                    <InlineSvg
-                      className="css-1y5anzy-NodeIcon e1en1fxy1"
-                      src="icon-circle-empty"
-                    >
-                      <StyledSvg
-                        className="css-1y5anzy-NodeIcon e1en1fxy1"
-                        height="1em"
-                        viewBox={Object {}}
-                        width="1em"
-                      >
-                        <svg
-                          className="e1en1fxy1 css-x6jhby-StyledSvg-NodeIcon e2idor0"
-                          height="1em"
-                          viewBox={Object {}}
-                          width="1em"
-                        >
-                          <use
-                            href="#test"
-                            xlinkHref="#test"
-                          />
-                        </svg>
-                      </StyledSvg>
-                    </InlineSvg>
-                  </NodeIcon>
-                  <NodeDescription
-                    data-test-id="node-description"
-                  >
-                    <div
-                      className="css-yyeqaq-NodeDescription e1en1fxy2"
-                      data-test-id="node-description"
-                    >
-                      Send an event from your application
-                    </div>
-                  </NodeDescription>
-                </div>
-              </Node>
-              <div
-                className="stuck"
-              >
-                <a
-                  href="/organizations/testOrg/support/"
-                >
-                  <p>
-                     Stuck?
-                  </p>
-                  <p>
-                     Ask for help
-                  </p>
-                </a>
-              </div>
-            </div>
-          </ProgressNodes>
-          <div>
-            <OnboardingProject
-              name=""
-              next={[MockFunction]}
-              platform=""
-              setName={[MockFunction]}
-              setPlatform={[MockFunction]}
-              setTeam={[Function]}
-              team=""
-              teams={Array []}
-            >
-              <div
-                className="onboarding-info"
-              >
-                <PageHeading
-                  withMargins={true}
-                >
-                  <Wrapper
-                    withMargins={true}
-                  >
-                    <h1
-                      className="css-wxef79-Wrapper e1f8hk460"
-                    >
-                      Choose a language or framework:
-                    </h1>
-                  </Wrapper>
-                </PageHeading>
-                <PlatformPicker
-                  name=""
-                  next={[MockFunction]}
-                  platform=""
-                  setName={[MockFunction]}
-                  setPlatform={[MockFunction]}
-                  setTeam={[Function]}
-                  showOther={true}
-                  team=""
-                  teams={Array []}
-                >
-                  <div
-                    className="platform-picker"
-                  >
-                    <NavTabs>
-                      <ul
-                        className="nav nav-tabs"
-                      >
-                        <li
-                          style={
-                            Object {
-                              "float": "right",
-                              "marginRight": 0,
-                            }
-                          }
-                        >
-                          <div
-                            className="platform-filter-container"
-                          >
-                            <span
-                              className="icon icon-search"
-                            />
-                            <input
-                              className="platform-filter"
-                              label="Filter"
-                              onChange={[Function]}
-                              placeholder="Filter"
-                              type="text"
-                              value=""
-                            />
-                          </div>
-                        </li>
-                        <ListLink
-                          activeClassName="active"
-                          index={false}
-                          isActive={[Function]}
-                          key="popular"
-                          onClick={[Function]}
-                          to=""
-                        >
-                          <li
-                            className="active"
-                          >
-                            <Link
-                              onClick={[Function]}
-                              onlyActiveOnIndex={false}
-                              style={Object {}}
-                              to=""
-                            >
-                              <a
-                                onClick={[Function]}
-                                style={Object {}}
-                              >
-                                Popular
-                              </a>
-                            </Link>
-                          </li>
-                        </ListLink>
-                        <ListLink
-                          activeClassName="active"
-                          index={false}
-                          isActive={[Function]}
-                          key="browser"
-                          onClick={[Function]}
-                          to=""
-                        >
-                          <li
-                            className=""
-                          >
-                            <Link
-                              onClick={[Function]}
-                              onlyActiveOnIndex={false}
-                              style={Object {}}
-                              to=""
-                            >
-                              <a
-                                onClick={[Function]}
-                                style={Object {}}
-                              >
-                                Browser
-                              </a>
-                            </Link>
-                          </li>
-                        </ListLink>
-                        <ListLink
-                          activeClassName="active"
-                          index={false}
-                          isActive={[Function]}
-                          key="server"
-                          onClick={[Function]}
-                          to=""
-                        >
-                          <li
-                            className=""
-                          >
-                            <Link
-                              onClick={[Function]}
-                              onlyActiveOnIndex={false}
-                              style={Object {}}
-                              to=""
-                            >
-                              <a
-                                onClick={[Function]}
-                                style={Object {}}
-                              >
-                                Server
-                              </a>
-                            </Link>
-                          </li>
-                        </ListLink>
-                        <ListLink
-                          activeClassName="active"
-                          index={false}
-                          isActive={[Function]}
-                          key="mobile"
-                          onClick={[Function]}
-                          to=""
-                        >
-                          <li
-                            className=""
-                          >
-                            <Link
-                              onClick={[Function]}
-                              onlyActiveOnIndex={false}
-                              style={Object {}}
-                              to=""
-                            >
-                              <a
-                                onClick={[Function]}
-                                style={Object {}}
-                              >
-                                Mobile
-                              </a>
-                            </Link>
-                          </li>
-                        </ListLink>
-                        <ListLink
-                          activeClassName="active"
-                          index={false}
-                          isActive={[Function]}
-                          key="desktop"
-                          onClick={[Function]}
-                          to=""
-                        >
-                          <li
-                            className=""
-                          >
-                            <Link
-                              onClick={[Function]}
-                              onlyActiveOnIndex={false}
-                              style={Object {}}
-                              to=""
-                            >
-                              <a
-                                onClick={[Function]}
-                                style={Object {}}
-                              >
-                                Desktop
-                              </a>
-                            </Link>
-                          </li>
-                        </ListLink>
-                        <ListLink
-                          activeClassName="active"
-                          index={false}
-                          isActive={[Function]}
-                          key="all"
-                          onClick={[Function]}
-                          to=""
-                        >
-                          <li
-                            className=""
-                          >
-                            <Link
-                              onClick={[Function]}
-                              onlyActiveOnIndex={false}
-                              style={Object {}}
-                              to=""
-                            >
-                              <a
-                                onClick={[Function]}
-                                style={Object {}}
-                              >
-                                All
-                              </a>
-                            </Link>
-                          </li>
-                        </ListLink>
-                      </ul>
-                    </NavTabs>
-                    <ul
-                      className="client-platform-list platform-tiles"
-                    >
-                      <PlatformCard
-                        className=""
-                        key="csharp"
-                        onClick={[Function]}
-                        platform="csharp"
-                      >
-                        <span
-                          className="platform-card"
-                          onClick={[Function]}
-                        >
-                          <PlatformiconTile
-                            className=""
-                            onClick={[Function]}
-                            platform="csharp"
-                          >
-                            <li
-                              className="platform-tile list-unstyled csharp csharp "
-                            >
-                              <span
-                                className="platformicon platformicon-csharp"
-                              />
-                            </li>
-                          </PlatformiconTile>
-                          <h5>
-                             
-                            C#
-                             
-                          </h5>
-                        </span>
-                      </PlatformCard>
-                      <PlatformCard
-                        className=""
-                        key="java"
-                        onClick={[Function]}
-                        platform="java"
-                      >
-                        <span
-                          className="platform-card"
-                          onClick={[Function]}
-                        >
-                          <PlatformiconTile
-                            className=""
-                            onClick={[Function]}
-                            platform="java"
-                          >
-                            <li
-                              className="platform-tile list-unstyled java java "
-                            >
-                              <span
-                                className="platformicon platformicon-java"
-                              />
-                            </li>
-                          </PlatformiconTile>
-                          <h5>
-                             
-                            Java
-                             
-                          </h5>
-                        </span>
-                      </PlatformCard>
-                      <PlatformCard
-                        className=""
-                        key="javascript-angular"
-                        onClick={[Function]}
-                        platform="javascript-angular"
-                      >
-                        <span
-                          className="platform-card"
-                          onClick={[Function]}
-                        >
-                          <PlatformiconTile
-                            className=""
-                            onClick={[Function]}
-                            platform="javascript-angular"
-                          >
-                            <li
-                              className="platform-tile list-unstyled javascript-angular javascript "
-                            >
-                              <span
-                                className="platformicon platformicon-javascript-angular"
-                              />
-                            </li>
-                          </PlatformiconTile>
-                          <h5>
-                             
-                            Angular
-                             
-                          </h5>
-                        </span>
-                      </PlatformCard>
-                      <PlatformCard
-                        className=""
-                        key="javascript"
-                        onClick={[Function]}
-                        platform="javascript"
-                      >
-                        <span
-                          className="platform-card"
-                          onClick={[Function]}
-                        >
-                          <PlatformiconTile
-                            className=""
-                            onClick={[Function]}
-                            platform="javascript"
-                          >
-                            <li
-                              className="platform-tile list-unstyled javascript javascript "
-                            >
-                              <span
-                                className="platformicon platformicon-javascript"
-                              />
-                            </li>
-                          </PlatformiconTile>
-                          <h5>
-                             
-                            JavaScript
-                             
-                          </h5>
-                        </span>
-                      </PlatformCard>
-                      <PlatformCard
-                        className=""
-                        key="javascript-react"
-                        onClick={[Function]}
-                        platform="javascript-react"
-                      >
-                        <span
-                          className="platform-card"
-                          onClick={[Function]}
-                        >
-                          <PlatformiconTile
-                            className=""
-                            onClick={[Function]}
-                            platform="javascript-react"
-                          >
-                            <li
-                              className="platform-tile list-unstyled javascript-react javascript "
-                            >
-                              <span
-                                className="platformicon platformicon-javascript-react"
-                              />
-                            </li>
-                          </PlatformiconTile>
-                          <h5>
-                             
-                            React
-                             
-                          </h5>
-                        </span>
-                      </PlatformCard>
-                      <PlatformCard
-                        className=""
-                        key="node-express"
-                        onClick={[Function]}
-                        platform="node-express"
-                      >
-                        <span
-                          className="platform-card"
-                          onClick={[Function]}
-                        >
-                          <PlatformiconTile
-                            className=""
-                            onClick={[Function]}
-                            platform="node-express"
-                          >
-                            <li
-                              className="platform-tile list-unstyled node-express node "
-                            >
-                              <span
-                                className="platformicon platformicon-node-express"
-                              />
-                            </li>
-                          </PlatformiconTile>
-                          <h5>
-                             
-                            Express
-                             
-                          </h5>
-                        </span>
-                      </PlatformCard>
-                      <PlatformCard
-                        className=""
-                        key="node"
-                        onClick={[Function]}
-                        platform="node"
-                      >
-                        <span
-                          className="platform-card"
-                          onClick={[Function]}
-                        >
-                          <PlatformiconTile
-                            className=""
-                            onClick={[Function]}
-                            platform="node"
-                          >
-                            <li
-                              className="platform-tile list-unstyled node node "
-                            >
-                              <span
-                                className="platformicon platformicon-node"
-                              />
-                            </li>
-                          </PlatformiconTile>
-                          <h5>
-                             
-                            Node.js
-                             
-                          </h5>
-                        </span>
-                      </PlatformCard>
-                      <PlatformCard
-                        className=""
-                        key="php-laravel"
-                        onClick={[Function]}
-                        platform="php-laravel"
-                      >
-                        <span
-                          className="platform-card"
-                          onClick={[Function]}
-                        >
-                          <PlatformiconTile
-                            className=""
-                            onClick={[Function]}
-                            platform="php-laravel"
-                          >
-                            <li
-                              className="platform-tile list-unstyled php-laravel php "
-                            >
-                              <span
-                                className="platformicon platformicon-php-laravel"
-                              />
-                            </li>
-                          </PlatformiconTile>
-                          <h5>
-                             
-                            Laravel
-                             
-                          </h5>
-                        </span>
-                      </PlatformCard>
-                      <PlatformCard
-                        className=""
-                        key="php"
-                        onClick={[Function]}
-                        platform="php"
-                      >
-                        <span
-                          className="platform-card"
-                          onClick={[Function]}
-                        >
-                          <PlatformiconTile
-                            className=""
-                            onClick={[Function]}
-                            platform="php"
-                          >
-                            <li
-                              className="platform-tile list-unstyled php php "
-                            >
-                              <span
-                                className="platformicon platformicon-php"
-                              />
-                            </li>
-                          </PlatformiconTile>
-                          <h5>
-                             
-                            PHP
-                             
-                          </h5>
-                        </span>
-                      </PlatformCard>
-                      <PlatformCard
-                        className=""
-                        key="php-symfony2"
-                        onClick={[Function]}
-                        platform="php-symfony2"
-                      >
-                        <span
-                          className="platform-card"
-                          onClick={[Function]}
-                        >
-                          <PlatformiconTile
-                            className=""
-                            onClick={[Function]}
-                            platform="php-symfony2"
-                          >
-                            <li
-                              className="platform-tile list-unstyled php-symfony2 php "
-                            >
-                              <span
-                                className="platformicon platformicon-php-symfony2"
-                              />
-                            </li>
-                          </PlatformiconTile>
-                          <h5>
-                             
-                            Symfony2
-                             
-                          </h5>
-                        </span>
-                      </PlatformCard>
-                      <PlatformCard
-                        className=""
-                        key="python-django"
-                        onClick={[Function]}
-                        platform="python-django"
-                      >
-                        <span
-                          className="platform-card"
-                          onClick={[Function]}
-                        >
-                          <PlatformiconTile
-                            className=""
-                            onClick={[Function]}
-                            platform="python-django"
-                          >
-                            <li
-                              className="platform-tile list-unstyled python-django python "
-                            >
-                              <span
-                                className="platformicon platformicon-python-django"
-                              />
-                            </li>
-                          </PlatformiconTile>
-                          <h5>
-                             
-                            Django
-                             
-                          </h5>
-                        </span>
-                      </PlatformCard>
-                      <PlatformCard
-                        className=""
-                        key="python-flask"
-                        onClick={[Function]}
-                        platform="python-flask"
-                      >
-                        <span
-                          className="platform-card"
-                          onClick={[Function]}
-                        >
-                          <PlatformiconTile
-                            className=""
-                            onClick={[Function]}
-                            platform="python-flask"
-                          >
-                            <li
-                              className="platform-tile list-unstyled python-flask python "
-                            >
-                              <span
-                                className="platformicon platformicon-python-flask"
-                              />
-                            </li>
-                          </PlatformiconTile>
-                          <h5>
-                             
-                            Flask
-                             
-                          </h5>
-                        </span>
-                      </PlatformCard>
-                      <PlatformCard
-                        className=""
-                        key="python"
-                        onClick={[Function]}
-                        platform="python"
-                      >
-                        <span
-                          className="platform-card"
-                          onClick={[Function]}
-                        >
-                          <PlatformiconTile
-                            className=""
-                            onClick={[Function]}
-                            platform="python"
-                          >
-                            <li
-                              className="platform-tile list-unstyled python python "
-                            >
-                              <span
-                                className="platformicon platformicon-python"
-                              />
-                            </li>
-                          </PlatformiconTile>
-                          <h5>
-                             
-                            Python
-                             
-                          </h5>
-                        </span>
-                      </PlatformCard>
-                      <PlatformCard
-                        className=""
-                        key="cocoa"
-                        onClick={[Function]}
-                        platform="cocoa"
-                      >
-                        <span
-                          className="platform-card"
-                          onClick={[Function]}
-                        >
-                          <PlatformiconTile
-                            className=""
-                            onClick={[Function]}
-                            platform="cocoa"
-                          >
-                            <li
-                              className="platform-tile list-unstyled cocoa cocoa "
-                            >
-                              <span
-                                className="platformicon platformicon-cocoa"
-                              />
-                            </li>
-                          </PlatformiconTile>
-                          <h5>
-                             
-                            React-Native
-                             
-                          </h5>
-                        </span>
-                      </PlatformCard>
-                      <PlatformCard
-                        className=""
-                        key="ruby-rails"
-                        onClick={[Function]}
-                        platform="ruby-rails"
-                      >
-                        <span
-                          className="platform-card"
-                          onClick={[Function]}
-                        >
-                          <PlatformiconTile
-                            className=""
-                            onClick={[Function]}
-                            platform="ruby-rails"
-                          >
-                            <li
-                              className="platform-tile list-unstyled ruby-rails ruby "
-                            >
-                              <span
-                                className="platformicon platformicon-ruby-rails"
-                              />
-                            </li>
-                          </PlatformiconTile>
-                          <h5>
-                             
-                            Rails
-                             
-                          </h5>
-                        </span>
-                      </PlatformCard>
-                      <PlatformCard
-                        className=""
-                        key="ruby"
-                        onClick={[Function]}
-                        platform="ruby"
-                      >
-                        <span
-                          className="platform-card"
-                          onClick={[Function]}
-                        >
-                          <PlatformiconTile
-                            className=""
-                            onClick={[Function]}
-                            platform="ruby"
-                          >
-                            <li
-                              className="platform-tile list-unstyled ruby ruby "
-                            >
-                              <span
-                                className="platformicon platformicon-ruby"
-                              />
-                            </li>
-                          </PlatformiconTile>
-                          <h5>
-                             
-                            Ruby
-                             
-                          </h5>
-                        </span>
-                      </PlatformCard>
-                    </ul>
-                  </div>
-                </PlatformPicker>
-                <div
-                  className="create-project-form"
-                >
-                  <div
-                    className="new-project-name client-platform"
-                  >
-                    <PageHeading
-                      withMargins={true}
-                    >
-                      <Wrapper
-                        withMargins={true}
-                      >
-                        <h1
-                          className="css-wxef79-Wrapper e1f8hk460"
-                        >
-                          Give your project a name:
-                        </h1>
-                      </Wrapper>
-                    </PageHeading>
-                    <div
-                      className="project-name-wrapper"
-                    >
-                      <PlatformiconTile
-                        platform=""
-                      >
-                        <li
-                          className="platform-tile list-unstyled   undefined"
-                        >
-                          <span
-                            className="platformicon platformicon-"
-                          />
-                        </li>
-                      </PlatformiconTile>
-                      <input
-                        autoComplete="off"
-                        label="Project Name"
-                        name="name"
-                        onChange={[Function]}
-                        placeholder="Project name"
-                        type="text"
-                        value=""
-                      />
-                    </div>
-                  </div>
-                  <div
-                    className="new-project-team"
-                  >
-                    <PageHeading
-                      withMargins={true}
-                    >
-                      <Wrapper
-                        withMargins={true}
-                      >
-                        <h1
-                          className="css-wxef79-Wrapper e1f8hk460"
-                        >
-                          Team:
-                        </h1>
-                      </Wrapper>
-                    </PageHeading>
-                    <div>
-                      <SelectField
-                        clearable={false}
-                        disabled={false}
-                        hideErrorMessage={false}
-                        multiple={false}
-                        name="select-team"
-                        onChange={[Function]}
-                        options={Array []}
-                        required={false}
-                        style={
-                          Object {
-                            "marginBottom": 0,
-                            "width": 180,
-                          }
-                        }
-                        value=""
-                      >
-                        <div
-                          className=""
-                          style={
-                            Object {
-                              "marginBottom": 0,
-                              "width": 180,
-                            }
-                          }
-                        >
-                          <div
-                            className="controls"
-                          >
-                            <StyledSelectControl
-                              clearable={false}
-                              disabled={false}
-                              id="id-select-team"
-                              multiple={false}
-                              name="select-team"
-                              onChange={[Function]}
-                              options={Array []}
-                              required={false}
-                              value=""
-                            >
-                              <SelectControl
-                                className="css-j6zs66-StyledSelectControl e1qrhqd00"
-                                clearable={false}
-                                disabled={false}
-                                height={36}
-                                id="id-select-team"
-                                multiple={false}
-                                name="select-team"
-                                onChange={[Function]}
-                                options={Array []}
-                                required={false}
-                                value=""
-                              >
-                                <StyledSelect
-                                  arrowRenderer={[Function]}
-                                  backspaceRemoves={false}
-                                  className="css-j6zs66-StyledSelectControl e1qrhqd00"
-                                  clearable={false}
-                                  deleteRemoves={false}
-                                  disabled={false}
-                                  height={36}
-                                  id="id-select-team"
-                                  multiple={false}
-                                  name="select-team"
-                                  onChange={[Function]}
-                                  options={Array []}
-                                  required={false}
-                                  value=""
-                                >
-                                  <ForwardRef(SelectPicker)
-                                    arrowRenderer={[Function]}
-                                    backspaceRemoves={false}
-                                    className="e1qrhqd00 css-1cl3z8x-StyledSelect-StyledSelectControl eho28m20"
-                                    clearable={false}
-                                    deleteRemoves={false}
-                                    disabled={false}
-                                    height={36}
-                                    id="id-select-team"
-                                    multiple={false}
-                                    name="select-team"
-                                    onChange={[Function]}
-                                    options={Array []}
-                                    required={false}
-                                    value=""
-                                  >
-                                    <SelectPicker
-                                      arrowRenderer={[Function]}
-                                      backspaceRemoves={false}
-                                      className="e1qrhqd00 css-1cl3z8x-StyledSelect-StyledSelectControl eho28m20"
-                                      clearable={false}
-                                      deleteRemoves={false}
-                                      disabled={false}
-                                      forwardedRef={null}
-                                      height={36}
-                                      id="id-select-team"
-                                      multiple={false}
-                                      name="select-team"
-                                      onChange={[Function]}
-                                      options={Array []}
-                                      required={false}
-                                      value=""
-                                    >
-                                      <Select
-                                        arrowRenderer={[Function]}
-                                        autosize={true}
-                                        backspaceRemoves={false}
-                                        backspaceToRemoveMessage="Press backspace to remove {label}"
-                                        className="e1qrhqd00 css-1cl3z8x-StyledSelect-StyledSelectControl eho28m20"
-                                        clearAllText="Clear all"
-                                        clearRenderer={[Function]}
-                                        clearValueText="Clear value"
-                                        clearable={false}
-                                        closeOnSelect={true}
-                                        deleteRemoves={false}
-                                        delimiter=","
-                                        disabled={false}
-                                        escapeClearsValue={true}
-                                        filterOptions={[Function]}
-                                        height={36}
-                                        id="id-select-team"
-                                        ignoreAccents={true}
-                                        ignoreCase={true}
-                                        inputProps={Object {}}
-                                        isLoading={false}
-                                        joinValues={false}
-                                        labelKey="label"
-                                        matchPos="any"
-                                        matchProp="any"
-                                        menuBuffer={0}
-                                        menuRenderer={[Function]}
-                                        multi={false}
-                                        multiple={false}
-                                        name="select-team"
-                                        noResultsText="No results found"
-                                        onBlurResetsInput={true}
-                                        onChange={[Function]}
-                                        onCloseResetsInput={true}
-                                        onSelectResetsInput={true}
-                                        openOnClick={true}
-                                        optionComponent={[Function]}
-                                        options={Array []}
-                                        pageSize={5}
-                                        placeholder="Select..."
-                                        removeSelected={true}
-                                        required={false}
-                                        rtl={false}
-                                        scrollMenuIntoView={true}
-                                        searchable={true}
-                                        simpleValue={false}
-                                        tabSelectsValue={true}
-                                        trimFilter={true}
-                                        value=""
-                                        valueComponent={[Function]}
-                                        valueKey="value"
-                                      >
-                                        <div
-                                          className="Select e1qrhqd00 css-1cl3z8x-StyledSelect-StyledSelectControl eho28m20 is-searchable Select--single"
-                                        >
-                                          <div
-                                            className="Select-control"
-                                            onKeyDown={[Function]}
-                                            onMouseDown={[Function]}
-                                            onTouchEnd={[Function]}
-                                            onTouchMove={[Function]}
-                                            onTouchStart={[Function]}
-                                          >
-                                            <span
-                                              className="Select-multi-value-wrapper"
-                                              id="react-select-2--value"
-                                            >
-                                              <div
-                                                className="Select-placeholder"
-                                              >
-                                                Select...
-                                              </div>
-                                              <AutosizeInput
-                                                aria-activedescendant="react-select-2--value"
-                                                aria-expanded="false"
-                                                aria-haspopup="false"
-                                                aria-owns=""
-                                                className="Select-input"
-                                                id="id-select-team"
-                                                injectStyles={true}
-                                                minWidth="5"
-                                                onBlur={[Function]}
-                                                onChange={[Function]}
-                                                onFocus={[Function]}
-                                                required={false}
-                                                role="combobox"
-                                                value=""
-                                              >
-                                                <div
-                                                  className="Select-input"
-                                                  style={
-                                                    Object {
-                                                      "display": "inline-block",
-                                                    }
-                                                  }
-                                                >
-                                                  <input
-                                                    aria-activedescendant="react-select-2--value"
-                                                    aria-expanded="false"
-                                                    aria-haspopup="false"
-                                                    aria-owns=""
-                                                    id="id-select-team"
-                                                    onBlur={[Function]}
-                                                    onChange={[Function]}
-                                                    onFocus={[Function]}
-                                                    required={false}
-                                                    role="combobox"
-                                                    style={
-                                                      Object {
-                                                        "boxSizing": "content-box",
-                                                        "width": "5px",
-                                                      }
-                                                    }
-                                                    value=""
-                                                  />
-                                                  <div
-                                                    style={
-                                                      Object {
-                                                        "height": 0,
-                                                        "left": 0,
-                                                        "overflow": "scroll",
-                                                        "position": "absolute",
-                                                        "top": 0,
-                                                        "visibility": "hidden",
-                                                        "whiteSpace": "pre",
-                                                      }
-                                                    }
-                                                  />
-                                                </div>
-                                              </AutosizeInput>
-                                            </span>
-                                            <span
-                                              className="Select-arrow-zone"
-                                              onMouseDown={[Function]}
-                                            >
-                                              <span
-                                                className="icon-arrow-down"
-                                              />
-                                            </span>
-                                          </div>
-                                        </div>
-                                      </Select>
-                                    </SelectPicker>
-                                  </ForwardRef(SelectPicker)>
-                                </StyledSelect>
-                              </SelectControl>
-                            </StyledSelectControl>
-                          </div>
-                        </div>
-                      </SelectField>
-                    </div>
-                  </div>
-                  <div>
-                    <button
-                      className="btn btn-primary new-project-submit"
-                      onClick={[Function]}
-                    >
-                      Create Project
-                    </button>
-                  </div>
-                  <p>
-                    Projects allow you to scope events to a specific application in your organization. For example, you might have separate projects for your API server and frontend client.
-                  </p>
-                </div>
-              </div>
-            </OnboardingProject>
-          </div>
-        </div>
-      </div>
-    </div>
-  </OnboardingBackground>
-</OnboardingWizard>
-`;
-
-exports[`OnboardingWizard render() should render and respond to click events 2`] = `
-<OnboardingWizard
-  location={
-    Object {
-      "query": Object {},
-    }
-  }
-  params={
-    Object {
-      "orgId": "testOrg",
-      "projectId": "",
-    }
-  }
->
-  <OnboardingBackground>
-    <div
-      className="css-pv6tzi-OnboardingBackground e1nt3q690"
-    >
-      <div
-        className="onboarding-container"
-      >
-        <SideEffect(DocumentTitle)
-          title="Sentry"
-        >
-          <DocumentTitle
-            title="Sentry"
-          />
-        </SideEffect(DocumentTitle)>
-        <div
-          className="step-container"
-        >
-          <ProgressNodes
-            params={
-              Object {
-                "orgId": "testOrg",
-                "projectId": "",
-              }
-            }
-          >
-            <div
-              className="onboarding-sidebar"
-            >
-              <div
-                className="sentry-flag"
-              >
-                <span
-                  className="icon-sentry-logo-full"
-                  href="/"
-                />
-              </div>
-              <Node
-                active={false}
-                data-test-id="node"
-                done={true}
-                key="0"
-              >
-                <div
-                  className="css-zrjk08-Node e1en1fxy0"
-                  data-test-id="node"
-                >
-                  <NodeIcon
-                    src="icon-circle-check"
-                  >
-                    <InlineSvg
-                      className="css-1y5anzy-NodeIcon e1en1fxy1"
-                      src="icon-circle-check"
-                    >
-                      <StyledSvg
-                        className="css-1y5anzy-NodeIcon e1en1fxy1"
-                        height="1em"
-                        viewBox={Object {}}
-                        width="1em"
-                      >
-                        <svg
-                          className="e1en1fxy1 css-x6jhby-StyledSvg-NodeIcon e2idor0"
-                          height="1em"
-                          viewBox={Object {}}
-                          width="1em"
-                        >
-                          <use
-                            href="#test"
-                            xlinkHref="#test"
-                          />
-                        </svg>
-                      </StyledSvg>
-                    </InlineSvg>
-                  </NodeIcon>
-                  <NodeDescription
-                    data-test-id="node-description"
-                  >
-                    <div
-                      className="css-yyeqaq-NodeDescription e1en1fxy2"
-                      data-test-id="node-description"
-                    >
-                      Create an organization in Sentry
-                    </div>
-                  </NodeDescription>
-                </div>
-              </Node>
-              <Node
-                active={true}
-                data-test-id="node"
-                done={false}
-                key="1"
-              >
-                <div
-                  className="css-pe396z-Node e1en1fxy0"
-                  data-test-id="node"
-                >
-                  <NodeIcon
-                    src="icon-circle-empty"
-                  >
-                    <InlineSvg
-                      className="css-1y5anzy-NodeIcon e1en1fxy1"
-                      src="icon-circle-empty"
-                    >
-                      <StyledSvg
-                        className="css-1y5anzy-NodeIcon e1en1fxy1"
-                        height="1em"
-                        viewBox={Object {}}
-                        width="1em"
-                      >
-                        <svg
-                          className="e1en1fxy1 css-x6jhby-StyledSvg-NodeIcon e2idor0"
-                          height="1em"
-                          viewBox={Object {}}
-                          width="1em"
-                        >
-                          <use
-                            href="#test"
-                            xlinkHref="#test"
-                          />
-                        </svg>
-                      </StyledSvg>
-                    </InlineSvg>
-                  </NodeIcon>
-                  <NodeDescription
-                    data-test-id="node-description"
-                  >
-                    <div
-                      className="css-yyeqaq-NodeDescription e1en1fxy2"
-                      data-test-id="node-description"
-                    >
-                      Tell us about your project
-                    </div>
-                  </NodeDescription>
-                </div>
-              </Node>
-              <Node
-                active={false}
-                data-test-id="node"
-                done={false}
-                key="2"
-              >
-                <div
-                  className="css-zrjk08-Node e1en1fxy0"
-                  data-test-id="node"
-                >
-                  <NodeIcon
-                    src="icon-circle-empty"
-                  >
-                    <InlineSvg
-                      className="css-1y5anzy-NodeIcon e1en1fxy1"
-                      src="icon-circle-empty"
-                    >
-                      <StyledSvg
-                        className="css-1y5anzy-NodeIcon e1en1fxy1"
-                        height="1em"
-                        viewBox={Object {}}
-                        width="1em"
-                      >
-                        <svg
-                          className="e1en1fxy1 css-x6jhby-StyledSvg-NodeIcon e2idor0"
-                          height="1em"
-                          viewBox={Object {}}
-                          width="1em"
-                        >
-                          <use
-                            href="#test"
-                            xlinkHref="#test"
-                          />
-                        </svg>
-                      </StyledSvg>
-                    </InlineSvg>
-                  </NodeIcon>
-                  <NodeDescription
-                    data-test-id="node-description"
-                  >
-                    <div
-                      className="css-yyeqaq-NodeDescription e1en1fxy2"
-                      data-test-id="node-description"
-                    >
-                      Send an event from your application
-                    </div>
-                  </NodeDescription>
-                </div>
-              </Node>
-              <div
-                className="stuck"
-              >
-                <a
-                  href="/organizations/testOrg/support/"
-                >
-                  <p>
-                     Stuck?
-                  </p>
-                  <p>
-                     Ask for help
-                  </p>
-                </a>
-              </div>
-            </div>
-          </ProgressNodes>
-          <div>
-            <OnboardingProject
-              name=""
-              next={[MockFunction]}
-              platform=""
-              setName={[MockFunction]}
-              setPlatform={
-                [MockFunction] {
-                  "calls": Array [
-                    Array [
-                      "csharp",
-                    ],
-                  ],
-                  "results": Array [
-                    Object {
-                      "type": "return",
-                      "value": undefined,
-                    },
-                  ],
-                }
-              }
-              setTeam={[Function]}
-              team=""
-              teams={Array []}
-            >
-              <div
-                className="onboarding-info"
-              >
-                <PageHeading
-                  withMargins={true}
-                >
-                  <Wrapper
-                    withMargins={true}
-                  >
-                    <h1
-                      className="css-wxef79-Wrapper e1f8hk460"
-                    >
-                      Choose a language or framework:
-                    </h1>
-                  </Wrapper>
-                </PageHeading>
-                <PlatformPicker
-                  name=""
-                  next={[MockFunction]}
-                  platform=""
-                  setName={[MockFunction]}
-                  setPlatform={
-                    [MockFunction] {
-                      "calls": Array [
-                        Array [
-                          "csharp",
-                        ],
-                      ],
-                      "results": Array [
-                        Object {
-                          "type": "return",
-                          "value": undefined,
-                        },
-                      ],
-                    }
-                  }
-                  setTeam={[Function]}
-                  showOther={true}
-                  team=""
-                  teams={Array []}
-                >
-                  <div
-                    className="platform-picker"
-                  >
-                    <NavTabs>
-                      <ul
-                        className="nav nav-tabs"
-                      >
-                        <li
-                          style={
-                            Object {
-                              "float": "right",
-                              "marginRight": 0,
-                            }
-                          }
-                        >
-                          <div
-                            className="platform-filter-container"
-                          >
-                            <span
-                              className="icon icon-search"
-                            />
-                            <input
-                              className="platform-filter"
-                              label="Filter"
-                              onChange={[Function]}
-                              placeholder="Filter"
-                              type="text"
-                              value=""
-                            />
-                          </div>
-                        </li>
-                        <ListLink
-                          activeClassName="active"
-                          index={false}
-                          isActive={[Function]}
-                          key="popular"
-                          onClick={[Function]}
-                          to=""
-                        >
-                          <li
-                            className="active"
-                          >
-                            <Link
-                              onClick={[Function]}
-                              onlyActiveOnIndex={false}
-                              style={Object {}}
-                              to=""
-                            >
-                              <a
-                                onClick={[Function]}
-                                style={Object {}}
-                              >
-                                Popular
-                              </a>
-                            </Link>
-                          </li>
-                        </ListLink>
-                        <ListLink
-                          activeClassName="active"
-                          index={false}
-                          isActive={[Function]}
-                          key="browser"
-                          onClick={[Function]}
-                          to=""
-                        >
-                          <li
-                            className=""
-                          >
-                            <Link
-                              onClick={[Function]}
-                              onlyActiveOnIndex={false}
-                              style={Object {}}
-                              to=""
-                            >
-                              <a
-                                onClick={[Function]}
-                                style={Object {}}
-                              >
-                                Browser
-                              </a>
-                            </Link>
-                          </li>
-                        </ListLink>
-                        <ListLink
-                          activeClassName="active"
-                          index={false}
-                          isActive={[Function]}
-                          key="server"
-                          onClick={[Function]}
-                          to=""
-                        >
-                          <li
-                            className=""
-                          >
-                            <Link
-                              onClick={[Function]}
-                              onlyActiveOnIndex={false}
-                              style={Object {}}
-                              to=""
-                            >
-                              <a
-                                onClick={[Function]}
-                                style={Object {}}
-                              >
-                                Server
-                              </a>
-                            </Link>
-                          </li>
-                        </ListLink>
-                        <ListLink
-                          activeClassName="active"
-                          index={false}
-                          isActive={[Function]}
-                          key="mobile"
-                          onClick={[Function]}
-                          to=""
-                        >
-                          <li
-                            className=""
-                          >
-                            <Link
-                              onClick={[Function]}
-                              onlyActiveOnIndex={false}
-                              style={Object {}}
-                              to=""
-                            >
-                              <a
-                                onClick={[Function]}
-                                style={Object {}}
-                              >
-                                Mobile
-                              </a>
-                            </Link>
-                          </li>
-                        </ListLink>
-                        <ListLink
-                          activeClassName="active"
-                          index={false}
-                          isActive={[Function]}
-                          key="desktop"
-                          onClick={[Function]}
-                          to=""
-                        >
-                          <li
-                            className=""
-                          >
-                            <Link
-                              onClick={[Function]}
-                              onlyActiveOnIndex={false}
-                              style={Object {}}
-                              to=""
-                            >
-                              <a
-                                onClick={[Function]}
-                                style={Object {}}
-                              >
-                                Desktop
-                              </a>
-                            </Link>
-                          </li>
-                        </ListLink>
-                        <ListLink
-                          activeClassName="active"
-                          index={false}
-                          isActive={[Function]}
-                          key="all"
-                          onClick={[Function]}
-                          to=""
-                        >
-                          <li
-                            className=""
-                          >
-                            <Link
-                              onClick={[Function]}
-                              onlyActiveOnIndex={false}
-                              style={Object {}}
-                              to=""
-                            >
-                              <a
-                                onClick={[Function]}
-                                style={Object {}}
-                              >
-                                All
-                              </a>
-                            </Link>
-                          </li>
-                        </ListLink>
-                      </ul>
-                    </NavTabs>
-                    <ul
-                      className="client-platform-list platform-tiles"
-                    >
-                      <PlatformCard
-                        className=""
-                        key="csharp"
-                        onClick={[Function]}
-                        platform="csharp"
-                      >
-                        <span
-                          className="platform-card"
-                          onClick={[Function]}
-                        >
-                          <PlatformiconTile
-                            className=""
-                            onClick={[Function]}
-                            platform="csharp"
-                          >
-                            <li
-                              className="platform-tile list-unstyled csharp csharp "
-                            >
-                              <span
-                                className="platformicon platformicon-csharp"
-                              />
-                            </li>
-                          </PlatformiconTile>
-                          <h5>
-                             
-                            C#
-                             
-                          </h5>
-                        </span>
-                      </PlatformCard>
-                      <PlatformCard
-                        className=""
-                        key="java"
-                        onClick={[Function]}
-                        platform="java"
-                      >
-                        <span
-                          className="platform-card"
-                          onClick={[Function]}
-                        >
-                          <PlatformiconTile
-                            className=""
-                            onClick={[Function]}
-                            platform="java"
-                          >
-                            <li
-                              className="platform-tile list-unstyled java java "
-                            >
-                              <span
-                                className="platformicon platformicon-java"
-                              />
-                            </li>
-                          </PlatformiconTile>
-                          <h5>
-                             
-                            Java
-                             
-                          </h5>
-                        </span>
-                      </PlatformCard>
-                      <PlatformCard
-                        className=""
-                        key="javascript-angular"
-                        onClick={[Function]}
-                        platform="javascript-angular"
-                      >
-                        <span
-                          className="platform-card"
-                          onClick={[Function]}
-                        >
-                          <PlatformiconTile
-                            className=""
-                            onClick={[Function]}
-                            platform="javascript-angular"
-                          >
-                            <li
-                              className="platform-tile list-unstyled javascript-angular javascript "
-                            >
-                              <span
-                                className="platformicon platformicon-javascript-angular"
-                              />
-                            </li>
-                          </PlatformiconTile>
-                          <h5>
-                             
-                            Angular
-                             
-                          </h5>
-                        </span>
-                      </PlatformCard>
-                      <PlatformCard
-                        className=""
-                        key="javascript"
-                        onClick={[Function]}
-                        platform="javascript"
-                      >
-                        <span
-                          className="platform-card"
-                          onClick={[Function]}
-                        >
-                          <PlatformiconTile
-                            className=""
-                            onClick={[Function]}
-                            platform="javascript"
-                          >
-                            <li
-                              className="platform-tile list-unstyled javascript javascript "
-                            >
-                              <span
-                                className="platformicon platformicon-javascript"
-                              />
-                            </li>
-                          </PlatformiconTile>
-                          <h5>
-                             
-                            JavaScript
-                             
-                          </h5>
-                        </span>
-                      </PlatformCard>
-                      <PlatformCard
-                        className=""
-                        key="javascript-react"
-                        onClick={[Function]}
-                        platform="javascript-react"
-                      >
-                        <span
-                          className="platform-card"
-                          onClick={[Function]}
-                        >
-                          <PlatformiconTile
-                            className=""
-                            onClick={[Function]}
-                            platform="javascript-react"
-                          >
-                            <li
-                              className="platform-tile list-unstyled javascript-react javascript "
-                            >
-                              <span
-                                className="platformicon platformicon-javascript-react"
-                              />
-                            </li>
-                          </PlatformiconTile>
-                          <h5>
-                             
-                            React
-                             
-                          </h5>
-                        </span>
-                      </PlatformCard>
-                      <PlatformCard
-                        className=""
-                        key="node-express"
-                        onClick={[Function]}
-                        platform="node-express"
-                      >
-                        <span
-                          className="platform-card"
-                          onClick={[Function]}
-                        >
-                          <PlatformiconTile
-                            className=""
-                            onClick={[Function]}
-                            platform="node-express"
-                          >
-                            <li
-                              className="platform-tile list-unstyled node-express node "
-                            >
-                              <span
-                                className="platformicon platformicon-node-express"
-                              />
-                            </li>
-                          </PlatformiconTile>
-                          <h5>
-                             
-                            Express
-                             
-                          </h5>
-                        </span>
-                      </PlatformCard>
-                      <PlatformCard
-                        className=""
-                        key="node"
-                        onClick={[Function]}
-                        platform="node"
-                      >
-                        <span
-                          className="platform-card"
-                          onClick={[Function]}
-                        >
-                          <PlatformiconTile
-                            className=""
-                            onClick={[Function]}
-                            platform="node"
-                          >
-                            <li
-                              className="platform-tile list-unstyled node node "
-                            >
-                              <span
-                                className="platformicon platformicon-node"
-                              />
-                            </li>
-                          </PlatformiconTile>
-                          <h5>
-                             
-                            Node.js
-                             
-                          </h5>
-                        </span>
-                      </PlatformCard>
-                      <PlatformCard
-                        className=""
-                        key="php-laravel"
-                        onClick={[Function]}
-                        platform="php-laravel"
-                      >
-                        <span
-                          className="platform-card"
-                          onClick={[Function]}
-                        >
-                          <PlatformiconTile
-                            className=""
-                            onClick={[Function]}
-                            platform="php-laravel"
-                          >
-                            <li
-                              className="platform-tile list-unstyled php-laravel php "
-                            >
-                              <span
-                                className="platformicon platformicon-php-laravel"
-                              />
-                            </li>
-                          </PlatformiconTile>
-                          <h5>
-                             
-                            Laravel
-                             
-                          </h5>
-                        </span>
-                      </PlatformCard>
-                      <PlatformCard
-                        className=""
-                        key="php"
-                        onClick={[Function]}
-                        platform="php"
-                      >
-                        <span
-                          className="platform-card"
-                          onClick={[Function]}
-                        >
-                          <PlatformiconTile
-                            className=""
-                            onClick={[Function]}
-                            platform="php"
-                          >
-                            <li
-                              className="platform-tile list-unstyled php php "
-                            >
-                              <span
-                                className="platformicon platformicon-php"
-                              />
-                            </li>
-                          </PlatformiconTile>
-                          <h5>
-                             
-                            PHP
-                             
-                          </h5>
-                        </span>
-                      </PlatformCard>
-                      <PlatformCard
-                        className=""
-                        key="php-symfony2"
-                        onClick={[Function]}
-                        platform="php-symfony2"
-                      >
-                        <span
-                          className="platform-card"
-                          onClick={[Function]}
-                        >
-                          <PlatformiconTile
-                            className=""
-                            onClick={[Function]}
-                            platform="php-symfony2"
-                          >
-                            <li
-                              className="platform-tile list-unstyled php-symfony2 php "
-                            >
-                              <span
-                                className="platformicon platformicon-php-symfony2"
-                              />
-                            </li>
-                          </PlatformiconTile>
-                          <h5>
-                             
-                            Symfony2
-                             
-                          </h5>
-                        </span>
-                      </PlatformCard>
-                      <PlatformCard
-                        className=""
-                        key="python-django"
-                        onClick={[Function]}
-                        platform="python-django"
-                      >
-                        <span
-                          className="platform-card"
-                          onClick={[Function]}
-                        >
-                          <PlatformiconTile
-                            className=""
-                            onClick={[Function]}
-                            platform="python-django"
-                          >
-                            <li
-                              className="platform-tile list-unstyled python-django python "
-                            >
-                              <span
-                                className="platformicon platformicon-python-django"
-                              />
-                            </li>
-                          </PlatformiconTile>
-                          <h5>
-                             
-                            Django
-                             
-                          </h5>
-                        </span>
-                      </PlatformCard>
-                      <PlatformCard
-                        className=""
-                        key="python-flask"
-                        onClick={[Function]}
-                        platform="python-flask"
-                      >
-                        <span
-                          className="platform-card"
-                          onClick={[Function]}
-                        >
-                          <PlatformiconTile
-                            className=""
-                            onClick={[Function]}
-                            platform="python-flask"
-                          >
-                            <li
-                              className="platform-tile list-unstyled python-flask python "
-                            >
-                              <span
-                                className="platformicon platformicon-python-flask"
-                              />
-                            </li>
-                          </PlatformiconTile>
-                          <h5>
-                             
-                            Flask
-                             
-                          </h5>
-                        </span>
-                      </PlatformCard>
-                      <PlatformCard
-                        className=""
-                        key="python"
-                        onClick={[Function]}
-                        platform="python"
-                      >
-                        <span
-                          className="platform-card"
-                          onClick={[Function]}
-                        >
-                          <PlatformiconTile
-                            className=""
-                            onClick={[Function]}
-                            platform="python"
-                          >
-                            <li
-                              className="platform-tile list-unstyled python python "
-                            >
-                              <span
-                                className="platformicon platformicon-python"
-                              />
-                            </li>
-                          </PlatformiconTile>
-                          <h5>
-                             
-                            Python
-                             
-                          </h5>
-                        </span>
-                      </PlatformCard>
-                      <PlatformCard
-                        className=""
-                        key="cocoa"
-                        onClick={[Function]}
-                        platform="cocoa"
-                      >
-                        <span
-                          className="platform-card"
-                          onClick={[Function]}
-                        >
-                          <PlatformiconTile
-                            className=""
-                            onClick={[Function]}
-                            platform="cocoa"
-                          >
-                            <li
-                              className="platform-tile list-unstyled cocoa cocoa "
-                            >
-                              <span
-                                className="platformicon platformicon-cocoa"
-                              />
-                            </li>
-                          </PlatformiconTile>
-                          <h5>
-                             
-                            React-Native
-                             
-                          </h5>
-                        </span>
-                      </PlatformCard>
-                      <PlatformCard
-                        className=""
-                        key="ruby-rails"
-                        onClick={[Function]}
-                        platform="ruby-rails"
-                      >
-                        <span
-                          className="platform-card"
-                          onClick={[Function]}
-                        >
-                          <PlatformiconTile
-                            className=""
-                            onClick={[Function]}
-                            platform="ruby-rails"
-                          >
-                            <li
-                              className="platform-tile list-unstyled ruby-rails ruby "
-                            >
-                              <span
-                                className="platformicon platformicon-ruby-rails"
-                              />
-                            </li>
-                          </PlatformiconTile>
-                          <h5>
-                             
-                            Rails
-                             
-                          </h5>
-                        </span>
-                      </PlatformCard>
-                      <PlatformCard
-                        className=""
-                        key="ruby"
-                        onClick={[Function]}
-                        platform="ruby"
-                      >
-                        <span
-                          className="platform-card"
-                          onClick={[Function]}
-                        >
-                          <PlatformiconTile
-                            className=""
-                            onClick={[Function]}
-                            platform="ruby"
-                          >
-                            <li
-                              className="platform-tile list-unstyled ruby ruby "
-                            >
-                              <span
-                                className="platformicon platformicon-ruby"
-                              />
-                            </li>
-                          </PlatformiconTile>
-                          <h5>
-                             
-                            Ruby
-                             
-                          </h5>
-                        </span>
-                      </PlatformCard>
-                    </ul>
-                  </div>
-                </PlatformPicker>
-                <div
-                  className="create-project-form"
-                >
-                  <div
-                    className="new-project-name client-platform"
-                  >
-                    <PageHeading
-                      withMargins={true}
-                    >
-                      <Wrapper
-                        withMargins={true}
-                      >
-                        <h1
-                          className="css-wxef79-Wrapper e1f8hk460"
-                        >
-                          Give your project a name:
-                        </h1>
-                      </Wrapper>
-                    </PageHeading>
-                    <div
-                      className="project-name-wrapper"
-                    >
-                      <PlatformiconTile
-                        platform=""
-                      >
-                        <li
-                          className="platform-tile list-unstyled   undefined"
-                        >
-                          <span
-                            className="platformicon platformicon-"
-                          />
-                        </li>
-                      </PlatformiconTile>
-                      <input
-                        autoComplete="off"
-                        label="Project Name"
-                        name="name"
-                        onChange={[Function]}
-                        placeholder="Project name"
-                        type="text"
-                        value=""
-                      />
-                    </div>
-                  </div>
-                  <div
-                    className="new-project-team"
-                  >
-                    <PageHeading
-                      withMargins={true}
-                    >
-                      <Wrapper
-                        withMargins={true}
-                      >
-                        <h1
-                          className="css-wxef79-Wrapper e1f8hk460"
-                        >
-                          Team:
-                        </h1>
-                      </Wrapper>
-                    </PageHeading>
-                    <div>
-                      <SelectField
-                        clearable={false}
-                        disabled={false}
-                        hideErrorMessage={false}
-                        multiple={false}
-                        name="select-team"
-                        onChange={[Function]}
-                        options={Array []}
-                        required={false}
-                        style={
-                          Object {
-                            "marginBottom": 0,
-                            "width": 180,
-                          }
-                        }
-                        value=""
-                      >
-                        <div
-                          className=""
-                          style={
-                            Object {
-                              "marginBottom": 0,
-                              "width": 180,
-                            }
-                          }
-                        >
-                          <div
-                            className="controls"
-                          >
-                            <StyledSelectControl
-                              clearable={false}
-                              disabled={false}
-                              id="id-select-team"
-                              multiple={false}
-                              name="select-team"
-                              onChange={[Function]}
-                              options={Array []}
-                              required={false}
-                              value=""
-                            >
-                              <SelectControl
-                                className="css-j6zs66-StyledSelectControl e1qrhqd00"
-                                clearable={false}
-                                disabled={false}
-                                height={36}
-                                id="id-select-team"
-                                multiple={false}
-                                name="select-team"
-                                onChange={[Function]}
-                                options={Array []}
-                                required={false}
-                                value=""
-                              >
-                                <StyledSelect
-                                  arrowRenderer={[Function]}
-                                  backspaceRemoves={false}
-                                  className="css-j6zs66-StyledSelectControl e1qrhqd00"
-                                  clearable={false}
-                                  deleteRemoves={false}
-                                  disabled={false}
-                                  height={36}
-                                  id="id-select-team"
-                                  multiple={false}
-                                  name="select-team"
-                                  onChange={[Function]}
-                                  options={Array []}
-                                  required={false}
-                                  value=""
-                                >
-                                  <ForwardRef(SelectPicker)
-                                    arrowRenderer={[Function]}
-                                    backspaceRemoves={false}
-                                    className="e1qrhqd00 css-1cl3z8x-StyledSelect-StyledSelectControl eho28m20"
-                                    clearable={false}
-                                    deleteRemoves={false}
-                                    disabled={false}
-                                    height={36}
-                                    id="id-select-team"
-                                    multiple={false}
-                                    name="select-team"
-                                    onChange={[Function]}
-                                    options={Array []}
-                                    required={false}
-                                    value=""
-                                  >
-                                    <SelectPicker
-                                      arrowRenderer={[Function]}
-                                      backspaceRemoves={false}
-                                      className="e1qrhqd00 css-1cl3z8x-StyledSelect-StyledSelectControl eho28m20"
-                                      clearable={false}
-                                      deleteRemoves={false}
-                                      disabled={false}
-                                      forwardedRef={null}
-                                      height={36}
-                                      id="id-select-team"
-                                      multiple={false}
-                                      name="select-team"
-                                      onChange={[Function]}
-                                      options={Array []}
-                                      required={false}
-                                      value=""
-                                    >
-                                      <Select
-                                        arrowRenderer={[Function]}
-                                        autosize={true}
-                                        backspaceRemoves={false}
-                                        backspaceToRemoveMessage="Press backspace to remove {label}"
-                                        className="e1qrhqd00 css-1cl3z8x-StyledSelect-StyledSelectControl eho28m20"
-                                        clearAllText="Clear all"
-                                        clearRenderer={[Function]}
-                                        clearValueText="Clear value"
-                                        clearable={false}
-                                        closeOnSelect={true}
-                                        deleteRemoves={false}
-                                        delimiter=","
-                                        disabled={false}
-                                        escapeClearsValue={true}
-                                        filterOptions={[Function]}
-                                        height={36}
-                                        id="id-select-team"
-                                        ignoreAccents={true}
-                                        ignoreCase={true}
-                                        inputProps={Object {}}
-                                        isLoading={false}
-                                        joinValues={false}
-                                        labelKey="label"
-                                        matchPos="any"
-                                        matchProp="any"
-                                        menuBuffer={0}
-                                        menuRenderer={[Function]}
-                                        multi={false}
-                                        multiple={false}
-                                        name="select-team"
-                                        noResultsText="No results found"
-                                        onBlurResetsInput={true}
-                                        onChange={[Function]}
-                                        onCloseResetsInput={true}
-                                        onSelectResetsInput={true}
-                                        openOnClick={true}
-                                        optionComponent={[Function]}
-                                        options={Array []}
-                                        pageSize={5}
-                                        placeholder="Select..."
-                                        removeSelected={true}
-                                        required={false}
-                                        rtl={false}
-                                        scrollMenuIntoView={true}
-                                        searchable={true}
-                                        simpleValue={false}
-                                        tabSelectsValue={true}
-                                        trimFilter={true}
-                                        value=""
-                                        valueComponent={[Function]}
-                                        valueKey="value"
-                                      >
-                                        <div
-                                          className="Select e1qrhqd00 css-1cl3z8x-StyledSelect-StyledSelectControl eho28m20 is-searchable Select--single"
-                                        >
-                                          <div
-                                            className="Select-control"
-                                            onKeyDown={[Function]}
-                                            onMouseDown={[Function]}
-                                            onTouchEnd={[Function]}
-                                            onTouchMove={[Function]}
-                                            onTouchStart={[Function]}
-                                          >
-                                            <span
-                                              className="Select-multi-value-wrapper"
-                                              id="react-select-2--value"
-                                            >
-                                              <div
-                                                className="Select-placeholder"
-                                              >
-                                                Select...
-                                              </div>
-                                              <AutosizeInput
-                                                aria-activedescendant="react-select-2--value"
-                                                aria-expanded="false"
-                                                aria-haspopup="false"
-                                                aria-owns=""
-                                                className="Select-input"
-                                                id="id-select-team"
-                                                injectStyles={true}
-                                                minWidth="5"
-                                                onBlur={[Function]}
-                                                onChange={[Function]}
-                                                onFocus={[Function]}
-                                                required={false}
-                                                role="combobox"
-                                                value=""
-                                              >
-                                                <div
-                                                  className="Select-input"
-                                                  style={
-                                                    Object {
-                                                      "display": "inline-block",
-                                                    }
-                                                  }
-                                                >
-                                                  <input
-                                                    aria-activedescendant="react-select-2--value"
-                                                    aria-expanded="false"
-                                                    aria-haspopup="false"
-                                                    aria-owns=""
-                                                    id="id-select-team"
-                                                    onBlur={[Function]}
-                                                    onChange={[Function]}
-                                                    onFocus={[Function]}
-                                                    required={false}
-                                                    role="combobox"
-                                                    style={
-                                                      Object {
-                                                        "boxSizing": "content-box",
-                                                        "width": "5px",
-                                                      }
-                                                    }
-                                                    value=""
-                                                  />
-                                                  <div
-                                                    style={
-                                                      Object {
-                                                        "height": 0,
-                                                        "left": 0,
-                                                        "overflow": "scroll",
-                                                        "position": "absolute",
-                                                        "top": 0,
-                                                        "visibility": "hidden",
-                                                        "whiteSpace": "pre",
-                                                      }
-                                                    }
-                                                  />
-                                                </div>
-                                              </AutosizeInput>
-                                            </span>
-                                            <span
-                                              className="Select-arrow-zone"
-                                              onMouseDown={[Function]}
-                                            >
-                                              <span
-                                                className="icon-arrow-down"
-                                              />
-                                            </span>
-                                          </div>
-                                        </div>
-                                      </Select>
-                                    </SelectPicker>
-                                  </ForwardRef(SelectPicker)>
-                                </StyledSelect>
-                              </SelectControl>
-                            </StyledSelectControl>
-                          </div>
-                        </div>
-                      </SelectField>
-                    </div>
-                  </div>
-                  <div>
-                    <button
-                      className="btn btn-primary new-project-submit"
-                      onClick={[Function]}
-                    >
-                      Create Project
-                    </button>
-                  </div>
-                  <p>
-                    Projects allow you to scope events to a specific application in your organization. For example, you might have separate projects for your API server and frontend client.
-                  </p>
-                </div>
-              </div>
-            </OnboardingProject>
-          </div>
-        </div>
-      </div>
-    </div>
-  </OnboardingBackground>
-</OnboardingWizard>
-`;
diff --git a/tests/js/spec/views/onboarding/createProject.spec.jsx b/tests/js/spec/views/onboarding/createProject.spec.jsx
index a5e60daa96..d7bdfab4f2 100644
--- a/tests/js/spec/views/onboarding/createProject.spec.jsx
+++ b/tests/js/spec/views/onboarding/createProject.spec.jsx
@@ -1,7 +1,7 @@
 import React from 'react';
 import {shallow, mount} from 'enzyme';
 
-import CreateProject from 'app/views/onboarding/createProject';
+import {CreateProject} from 'app/views/onboarding/createProject';
 import {openCreateTeamModal} from 'app/actionCreators/modal';
 
 jest.mock('app/actionCreators/modal');
@@ -9,6 +9,8 @@ jest.mock('app/actionCreators/modal');
 describe('CreateProject', function() {
   const baseProps = {
     location: {query: {}},
+    organization: TestStubs.Organization(),
+    teams: [],
     params: {
       projectId: '',
       orgId: 'testOrg',
@@ -37,7 +39,7 @@ describe('CreateProject', function() {
     expect(wrapper).toMatchSnapshot();
   });
 
-  it('can create a new team if no access to teams', function() {
+  it('can create a new team', function() {
     const props = {
       ...baseProps,
     };
@@ -55,7 +57,7 @@ describe('CreateProject', function() {
       ])
     );
 
-    wrapper.find('CreateTeamBody Button').simulate('click');
+    wrapper.find('TeamSelectInput Button').simulate('click');
     expect(openCreateTeamModal).toHaveBeenCalled();
   });
 
@@ -80,18 +82,18 @@ describe('CreateProject', function() {
 
     let node = wrapper.find('PlatformCard').first();
     node.simulate('click');
-    expect(wrapper.state().projectName).toBe('C#');
+    expect(wrapper.find('ProjectNameInput input').props().value).toBe('C#');
 
     node = wrapper.find('PlatformCard').last();
     node.simulate('click');
-    expect(wrapper.state().projectName).toBe('Ruby');
+    expect(wrapper.find('ProjectNameInput input').props().value).toBe('Ruby');
 
     //but not replace it when project name is something else:
     wrapper.setState({projectName: 'another'});
 
     node = wrapper.find('PlatformCard').first();
     node.simulate('click');
-    expect(wrapper.state().projectName).toBe('another');
+    expect(wrapper.find('ProjectNameInput input').props().value).toBe('another');
 
     expect(wrapper).toMatchSnapshot();
   });
@@ -115,7 +117,7 @@ describe('CreateProject', function() {
       ])
     );
 
-    expect(wrapper.state().projectName).toBe('Ruby');
+    expect(wrapper.find('ProjectNameInput input').props().value).toBe('Ruby');
 
     expect(wrapper).toMatchSnapshot();
   });
@@ -139,7 +141,7 @@ describe('CreateProject', function() {
       ])
     );
 
-    expect(wrapper.state().projectName).toBe('');
+    expect(wrapper.find('ProjectNameInput input').props().value).toBe('');
 
     expect(wrapper).toMatchSnapshot();
   });
diff --git a/tests/js/spec/views/onboarding/index.spec.jsx b/tests/js/spec/views/onboarding/index.spec.jsx
index f295cabe2a..a30f46dd55 100644
--- a/tests/js/spec/views/onboarding/index.spec.jsx
+++ b/tests/js/spec/views/onboarding/index.spec.jsx
@@ -1,10 +1,8 @@
 import React from 'react';
-import PropTypes from 'prop-types';
-import {shallow, mount} from 'enzyme';
+import {shallow} from 'enzyme';
 
 import {Client} from 'app/api';
 import OnboardingWizard from 'app/views/onboarding/';
-import Project from 'app/views/onboarding/project';
 
 describe('OnboardingWizard', function() {
   beforeEach(function() {
@@ -35,38 +33,5 @@ describe('OnboardingWizard', function() {
       });
       expect(wrapper).toMatchSnapshot();
     });
-
-    it('should render and respond to click events', function() {
-      const props = {
-        ...baseProps,
-        children: (
-          <Project
-            next={jest.fn()}
-            platform={''}
-            setName={jest.fn()}
-            name={''}
-            setPlatform={jest.fn()}
-          />
-        ),
-      };
-
-      const wrapper = mount(<OnboardingWizard {...props} />, {
-        context: {
-          organization: {id: '1337', slug: 'testOrg', experiments: {}},
-          router: TestStubs.router(),
-          location: {pathname: 'http://lol/', query: {}},
-        },
-        childContextTypes: {
-          router: PropTypes.object,
-          organization: PropTypes.object,
-          location: PropTypes.object,
-        },
-      });
-
-      expect(wrapper).toMatchSnapshot();
-      const node = wrapper.find('PlatformCard').first();
-      node.simulate('click');
-      expect(wrapper).toMatchSnapshot();
-    });
   });
 });
diff --git a/tests/js/spec/views/onboarding/project/__snapshots__/index.spec.jsx.snap b/tests/js/spec/views/onboarding/project/__snapshots__/index.spec.jsx.snap
deleted file mode 100644
index 093b3c0af3..0000000000
--- a/tests/js/spec/views/onboarding/project/__snapshots__/index.spec.jsx.snap
+++ /dev/null
@@ -1,1193 +0,0 @@
-// Jest Snapshot v1, https://goo.gl/fbAQLP
-
-exports[`Project render() should render NotFound if no matching organization 1`] = `
-<div
-  className="onboarding-info"
->
-  <PageHeading
-    withMargins={true}
-  >
-    Choose a language or framework:
-  </PageHeading>
-  <PlatformPicker
-    location={
-      Object {
-        "query": Object {},
-      }
-    }
-    name=""
-    next={[MockFunction]}
-    params={
-      Object {
-        "orgId": "my-cool-org",
-      }
-    }
-    platform=""
-    setName={[MockFunction]}
-    setPlatform={[MockFunction]}
-    setTeam={[Function]}
-    showOther={true}
-    team=""
-    teams={Array []}
-  />
-  <div
-    className="create-project-form"
-  >
-    <div
-      className="new-project-name client-platform"
-    >
-      <PageHeading
-        withMargins={true}
-      >
-        Give your project a name:
-      </PageHeading>
-      <div
-        className="project-name-wrapper"
-      >
-        <PlatformiconTile
-          platform=""
-        />
-        <input
-          autoComplete="off"
-          label="Project Name"
-          name="name"
-          onChange={[Function]}
-          placeholder="Project name"
-          type="text"
-          value=""
-        />
-      </div>
-    </div>
-    <div
-      className="new-project-team"
-    >
-      <PageHeading
-        withMargins={true}
-      >
-        Team:
-      </PageHeading>
-      <div>
-        <SelectField
-          clearable={false}
-          disabled={false}
-          hideErrorMessage={false}
-          multiple={false}
-          name="select-team"
-          onChange={[Function]}
-          options={Array []}
-          required={false}
-          style={
-            Object {
-              "marginBottom": 0,
-              "width": 180,
-            }
-          }
-          value=""
-        />
-      </div>
-    </div>
-    <div>
-      <button
-        className="btn btn-primary new-project-submit"
-        onClick={[Function]}
-      >
-        Create Project
-      </button>
-    </div>
-    <p>
-      Projects allow you to scope events to a specific application in your organization. For example, you might have separate projects for your API server and frontend client.
-    </p>
-  </div>
-</div>
-`;
-
-exports[`Project render() should set required class on empty submit 1`] = `
-<OnboardingProject
-  location={
-    Object {
-      "query": Object {},
-    }
-  }
-  name="bar"
-  next={
-    [MockFunction] {
-      "calls": Array [
-        Array [],
-      ],
-      "results": Array [
-        Object {
-          "type": "return",
-          "value": undefined,
-        },
-      ],
-    }
-  }
-  params={
-    Object {
-      "orgId": "testOrg",
-      "projectId": "",
-    }
-  }
-  platform=""
-  setName={[MockFunction]}
-  setPlatform={[MockFunction]}
-  setTeam={[Function]}
-  team=""
-  teams={Array []}
->
-  <div
-    className="onboarding-info"
-  >
-    <PageHeading
-      withMargins={true}
-    >
-      <Wrapper
-        withMargins={true}
-      >
-        <h1
-          className="css-wxef79-Wrapper e1f8hk460"
-        >
-          Choose a language or framework:
-        </h1>
-      </Wrapper>
-    </PageHeading>
-    <PlatformPicker
-      location={
-        Object {
-          "query": Object {},
-        }
-      }
-      name="bar"
-      next={
-        [MockFunction] {
-          "calls": Array [
-            Array [],
-          ],
-          "results": Array [
-            Object {
-              "type": "return",
-              "value": undefined,
-            },
-          ],
-        }
-      }
-      params={
-        Object {
-          "orgId": "testOrg",
-          "projectId": "",
-        }
-      }
-      platform=""
-      setName={[MockFunction]}
-      setPlatform={[MockFunction]}
-      setTeam={[Function]}
-      showOther={true}
-      team=""
-      teams={Array []}
-    >
-      <div
-        className="platform-picker"
-      >
-        <NavTabs>
-          <ul
-            className="nav nav-tabs"
-          >
-            <li
-              style={
-                Object {
-                  "float": "right",
-                  "marginRight": 0,
-                }
-              }
-            >
-              <div
-                className="platform-filter-container"
-              >
-                <span
-                  className="icon icon-search"
-                />
-                <input
-                  className="platform-filter"
-                  label="Filter"
-                  onChange={[Function]}
-                  placeholder="Filter"
-                  type="text"
-                  value=""
-                />
-              </div>
-            </li>
-            <ListLink
-              activeClassName="active"
-              index={false}
-              isActive={[Function]}
-              key="popular"
-              onClick={[Function]}
-              to=""
-            >
-              <li
-                className="active"
-              >
-                <Link
-                  onClick={[Function]}
-                  onlyActiveOnIndex={false}
-                  style={Object {}}
-                  to=""
-                >
-                  <a
-                    onClick={[Function]}
-                    style={Object {}}
-                  >
-                    Popular
-                  </a>
-                </Link>
-              </li>
-            </ListLink>
-            <ListLink
-              activeClassName="active"
-              index={false}
-              isActive={[Function]}
-              key="browser"
-              onClick={[Function]}
-              to=""
-            >
-              <li
-                className=""
-              >
-                <Link
-                  onClick={[Function]}
-                  onlyActiveOnIndex={false}
-                  style={Object {}}
-                  to=""
-                >
-                  <a
-                    onClick={[Function]}
-                    style={Object {}}
-                  >
-                    Browser
-                  </a>
-                </Link>
-              </li>
-            </ListLink>
-            <ListLink
-              activeClassName="active"
-              index={false}
-              isActive={[Function]}
-              key="server"
-              onClick={[Function]}
-              to=""
-            >
-              <li
-                className=""
-              >
-                <Link
-                  onClick={[Function]}
-                  onlyActiveOnIndex={false}
-                  style={Object {}}
-                  to=""
-                >
-                  <a
-                    onClick={[Function]}
-                    style={Object {}}
-                  >
-                    Server
-                  </a>
-                </Link>
-              </li>
-            </ListLink>
-            <ListLink
-              activeClassName="active"
-              index={false}
-              isActive={[Function]}
-              key="mobile"
-              onClick={[Function]}
-              to=""
-            >
-              <li
-                className=""
-              >
-                <Link
-                  onClick={[Function]}
-                  onlyActiveOnIndex={false}
-                  style={Object {}}
-                  to=""
-                >
-                  <a
-                    onClick={[Function]}
-                    style={Object {}}
-                  >
-                    Mobile
-                  </a>
-                </Link>
-              </li>
-            </ListLink>
-            <ListLink
-              activeClassName="active"
-              index={false}
-              isActive={[Function]}
-              key="desktop"
-              onClick={[Function]}
-              to=""
-            >
-              <li
-                className=""
-              >
-                <Link
-                  onClick={[Function]}
-                  onlyActiveOnIndex={false}
-                  style={Object {}}
-                  to=""
-                >
-                  <a
-                    onClick={[Function]}
-                    style={Object {}}
-                  >
-                    Desktop
-                  </a>
-                </Link>
-              </li>
-            </ListLink>
-            <ListLink
-              activeClassName="active"
-              index={false}
-              isActive={[Function]}
-              key="all"
-              onClick={[Function]}
-              to=""
-            >
-              <li
-                className=""
-              >
-                <Link
-                  onClick={[Function]}
-                  onlyActiveOnIndex={false}
-                  style={Object {}}
-                  to=""
-                >
-                  <a
-                    onClick={[Function]}
-                    style={Object {}}
-                  >
-                    All
-                  </a>
-                </Link>
-              </li>
-            </ListLink>
-          </ul>
-        </NavTabs>
-        <ul
-          className="client-platform-list platform-tiles"
-        >
-          <PlatformCard
-            className=""
-            key="csharp"
-            onClick={[Function]}
-            platform="csharp"
-          >
-            <span
-              className="platform-card"
-              onClick={[Function]}
-            >
-              <PlatformiconTile
-                className=""
-                onClick={[Function]}
-                platform="csharp"
-              >
-                <li
-                  className="platform-tile list-unstyled csharp csharp "
-                >
-                  <span
-                    className="platformicon platformicon-csharp"
-                  />
-                </li>
-              </PlatformiconTile>
-              <h5>
-                 
-                C#
-                 
-              </h5>
-            </span>
-          </PlatformCard>
-          <PlatformCard
-            className=""
-            key="java"
-            onClick={[Function]}
-            platform="java"
-          >
-            <span
-              className="platform-card"
-              onClick={[Function]}
-            >
-              <PlatformiconTile
-                className=""
-                onClick={[Function]}
-                platform="java"
-              >
-                <li
-                  className="platform-tile list-unstyled java java "
-                >
-                  <span
-                    className="platformicon platformicon-java"
-                  />
-                </li>
-              </PlatformiconTile>
-              <h5>
-                 
-                Java
-                 
-              </h5>
-            </span>
-          </PlatformCard>
-          <PlatformCard
-            className=""
-            key="javascript-angular"
-            onClick={[Function]}
-            platform="javascript-angular"
-          >
-            <span
-              className="platform-card"
-              onClick={[Function]}
-            >
-              <PlatformiconTile
-                className=""
-                onClick={[Function]}
-                platform="javascript-angular"
-              >
-                <li
-                  className="platform-tile list-unstyled javascript-angular javascript "
-                >
-                  <span
-                    className="platformicon platformicon-javascript-angular"
-                  />
-                </li>
-              </PlatformiconTile>
-              <h5>
-                 
-                Angular
-                 
-              </h5>
-            </span>
-          </PlatformCard>
-          <PlatformCard
-            className=""
-            key="javascript"
-            onClick={[Function]}
-            platform="javascript"
-          >
-            <span
-              className="platform-card"
-              onClick={[Function]}
-            >
-              <PlatformiconTile
-                className=""
-                onClick={[Function]}
-                platform="javascript"
-              >
-                <li
-                  className="platform-tile list-unstyled javascript javascript "
-                >
-                  <span
-                    className="platformicon platformicon-javascript"
-                  />
-                </li>
-              </PlatformiconTile>
-              <h5>
-                 
-                JavaScript
-                 
-              </h5>
-            </span>
-          </PlatformCard>
-          <PlatformCard
-            className=""
-            key="javascript-react"
-            onClick={[Function]}
-            platform="javascript-react"
-          >
-            <span
-              className="platform-card"
-              onClick={[Function]}
-            >
-              <PlatformiconTile
-                className=""
-                onClick={[Function]}
-                platform="javascript-react"
-              >
-                <li
-                  className="platform-tile list-unstyled javascript-react javascript "
-                >
-                  <span
-                    className="platformicon platformicon-javascript-react"
-                  />
-                </li>
-              </PlatformiconTile>
-              <h5>
-                 
-                React
-                 
-              </h5>
-            </span>
-          </PlatformCard>
-          <PlatformCard
-            className=""
-            key="node-express"
-            onClick={[Function]}
-            platform="node-express"
-          >
-            <span
-              className="platform-card"
-              onClick={[Function]}
-            >
-              <PlatformiconTile
-                className=""
-                onClick={[Function]}
-                platform="node-express"
-              >
-                <li
-                  className="platform-tile list-unstyled node-express node "
-                >
-                  <span
-                    className="platformicon platformicon-node-express"
-                  />
-                </li>
-              </PlatformiconTile>
-              <h5>
-                 
-                Express
-                 
-              </h5>
-            </span>
-          </PlatformCard>
-          <PlatformCard
-            className=""
-            key="node"
-            onClick={[Function]}
-            platform="node"
-          >
-            <span
-              className="platform-card"
-              onClick={[Function]}
-            >
-              <PlatformiconTile
-                className=""
-                onClick={[Function]}
-                platform="node"
-              >
-                <li
-                  className="platform-tile list-unstyled node node "
-                >
-                  <span
-                    className="platformicon platformicon-node"
-                  />
-                </li>
-              </PlatformiconTile>
-              <h5>
-                 
-                Node.js
-                 
-              </h5>
-            </span>
-          </PlatformCard>
-          <PlatformCard
-            className=""
-            key="php-laravel"
-            onClick={[Function]}
-            platform="php-laravel"
-          >
-            <span
-              className="platform-card"
-              onClick={[Function]}
-            >
-              <PlatformiconTile
-                className=""
-                onClick={[Function]}
-                platform="php-laravel"
-              >
-                <li
-                  className="platform-tile list-unstyled php-laravel php "
-                >
-                  <span
-                    className="platformicon platformicon-php-laravel"
-                  />
-                </li>
-              </PlatformiconTile>
-              <h5>
-                 
-                Laravel
-                 
-              </h5>
-            </span>
-          </PlatformCard>
-          <PlatformCard
-            className=""
-            key="php"
-            onClick={[Function]}
-            platform="php"
-          >
-            <span
-              className="platform-card"
-              onClick={[Function]}
-            >
-              <PlatformiconTile
-                className=""
-                onClick={[Function]}
-                platform="php"
-              >
-                <li
-                  className="platform-tile list-unstyled php php "
-                >
-                  <span
-                    className="platformicon platformicon-php"
-                  />
-                </li>
-              </PlatformiconTile>
-              <h5>
-                 
-                PHP
-                 
-              </h5>
-            </span>
-          </PlatformCard>
-          <PlatformCard
-            className=""
-            key="php-symfony2"
-            onClick={[Function]}
-            platform="php-symfony2"
-          >
-            <span
-              className="platform-card"
-              onClick={[Function]}
-            >
-              <PlatformiconTile
-                className=""
-                onClick={[Function]}
-                platform="php-symfony2"
-              >
-                <li
-                  className="platform-tile list-unstyled php-symfony2 php "
-                >
-                  <span
-                    className="platformicon platformicon-php-symfony2"
-                  />
-                </li>
-              </PlatformiconTile>
-              <h5>
-                 
-                Symfony2
-                 
-              </h5>
-            </span>
-          </PlatformCard>
-          <PlatformCard
-            className=""
-            key="python-django"
-            onClick={[Function]}
-            platform="python-django"
-          >
-            <span
-              className="platform-card"
-              onClick={[Function]}
-            >
-              <PlatformiconTile
-                className=""
-                onClick={[Function]}
-                platform="python-django"
-              >
-                <li
-                  className="platform-tile list-unstyled python-django python "
-                >
-                  <span
-                    className="platformicon platformicon-python-django"
-                  />
-                </li>
-              </PlatformiconTile>
-              <h5>
-                 
-                Django
-                 
-              </h5>
-            </span>
-          </PlatformCard>
-          <PlatformCard
-            className=""
-            key="python-flask"
-            onClick={[Function]}
-            platform="python-flask"
-          >
-            <span
-              className="platform-card"
-              onClick={[Function]}
-            >
-              <PlatformiconTile
-                className=""
-                onClick={[Function]}
-                platform="python-flask"
-              >
-                <li
-                  className="platform-tile list-unstyled python-flask python "
-                >
-                  <span
-                    className="platformicon platformicon-python-flask"
-                  />
-                </li>
-              </PlatformiconTile>
-              <h5>
-                 
-                Flask
-                 
-              </h5>
-            </span>
-          </PlatformCard>
-          <PlatformCard
-            className=""
-            key="python"
-            onClick={[Function]}
-            platform="python"
-          >
-            <span
-              className="platform-card"
-              onClick={[Function]}
-            >
-              <PlatformiconTile
-                className=""
-                onClick={[Function]}
-                platform="python"
-              >
-                <li
-                  className="platform-tile list-unstyled python python "
-                >
-                  <span
-                    className="platformicon platformicon-python"
-                  />
-                </li>
-              </PlatformiconTile>
-              <h5>
-                 
-                Python
-                 
-              </h5>
-            </span>
-          </PlatformCard>
-          <PlatformCard
-            className=""
-            key="cocoa"
-            onClick={[Function]}
-            platform="cocoa"
-          >
-            <span
-              className="platform-card"
-              onClick={[Function]}
-            >
-              <PlatformiconTile
-                className=""
-                onClick={[Function]}
-                platform="cocoa"
-              >
-                <li
-                  className="platform-tile list-unstyled cocoa cocoa "
-                >
-                  <span
-                    className="platformicon platformicon-cocoa"
-                  />
-                </li>
-              </PlatformiconTile>
-              <h5>
-                 
-                React-Native
-                 
-              </h5>
-            </span>
-          </PlatformCard>
-          <PlatformCard
-            className=""
-            key="ruby-rails"
-            onClick={[Function]}
-            platform="ruby-rails"
-          >
-            <span
-              className="platform-card"
-              onClick={[Function]}
-            >
-              <PlatformiconTile
-                className=""
-                onClick={[Function]}
-                platform="ruby-rails"
-              >
-                <li
-                  className="platform-tile list-unstyled ruby-rails ruby "
-                >
-                  <span
-                    className="platformicon platformicon-ruby-rails"
-                  />
-                </li>
-              </PlatformiconTile>
-              <h5>
-                 
-                Rails
-                 
-              </h5>
-            </span>
-          </PlatformCard>
-          <PlatformCard
-            className=""
-            key="ruby"
-            onClick={[Function]}
-            platform="ruby"
-          >
-            <span
-              className="platform-card"
-              onClick={[Function]}
-            >
-              <PlatformiconTile
-                className=""
-                onClick={[Function]}
-                platform="ruby"
-              >
-                <li
-                  className="platform-tile list-unstyled ruby ruby "
-                >
-                  <span
-                    className="platformicon platformicon-ruby"
-                  />
-                </li>
-              </PlatformiconTile>
-              <h5>
-                 
-                Ruby
-                 
-              </h5>
-            </span>
-          </PlatformCard>
-        </ul>
-      </div>
-    </PlatformPicker>
-    <div
-      className="create-project-form"
-    >
-      <div
-        className="new-project-name client-platform"
-      >
-        <PageHeading
-          withMargins={true}
-        >
-          <Wrapper
-            withMargins={true}
-          >
-            <h1
-              className="css-wxef79-Wrapper e1f8hk460"
-            >
-              Give your project a name:
-            </h1>
-          </Wrapper>
-        </PageHeading>
-        <div
-          className="project-name-wrapper"
-        >
-          <PlatformiconTile
-            platform=""
-          >
-            <li
-              className="platform-tile list-unstyled   undefined"
-            >
-              <span
-                className="platformicon platformicon-"
-              />
-            </li>
-          </PlatformiconTile>
-          <input
-            autoComplete="off"
-            label="Project Name"
-            name="name"
-            onChange={[Function]}
-            placeholder="Project name"
-            type="text"
-            value="bar"
-          />
-        </div>
-      </div>
-      <div
-        className="new-project-team"
-      >
-        <PageHeading
-          withMargins={true}
-        >
-          <Wrapper
-            withMargins={true}
-          >
-            <h1
-              className="css-wxef79-Wrapper e1f8hk460"
-            >
-              Team:
-            </h1>
-          </Wrapper>
-        </PageHeading>
-        <div>
-          <SelectField
-            clearable={false}
-            disabled={false}
-            hideErrorMessage={false}
-            multiple={false}
-            name="select-team"
-            onChange={[Function]}
-            options={Array []}
-            required={false}
-            style={
-              Object {
-                "marginBottom": 0,
-                "width": 180,
-              }
-            }
-            value=""
-          >
-            <div
-              className=""
-              style={
-                Object {
-                  "marginBottom": 0,
-                  "width": 180,
-                }
-              }
-            >
-              <div
-                className="controls"
-              >
-                <StyledSelectControl
-                  clearable={false}
-                  disabled={false}
-                  id="id-select-team"
-                  multiple={false}
-                  name="select-team"
-                  onChange={[Function]}
-                  options={Array []}
-                  required={false}
-                  value=""
-                >
-                  <SelectControl
-                    className="css-j6zs66-StyledSelectControl e1qrhqd00"
-                    clearable={false}
-                    disabled={false}
-                    height={36}
-                    id="id-select-team"
-                    multiple={false}
-                    name="select-team"
-                    onChange={[Function]}
-                    options={Array []}
-                    required={false}
-                    value=""
-                  >
-                    <StyledSelect
-                      arrowRenderer={[Function]}
-                      backspaceRemoves={false}
-                      className="css-j6zs66-StyledSelectControl e1qrhqd00"
-                      clearable={false}
-                      deleteRemoves={false}
-                      disabled={false}
-                      height={36}
-                      id="id-select-team"
-                      multiple={false}
-                      name="select-team"
-                      onChange={[Function]}
-                      options={Array []}
-                      required={false}
-                      value=""
-                    >
-                      <ForwardRef(SelectPicker)
-                        arrowRenderer={[Function]}
-                        backspaceRemoves={false}
-                        className="e1qrhqd00 css-1cl3z8x-StyledSelect-StyledSelectControl eho28m20"
-                        clearable={false}
-                        deleteRemoves={false}
-                        disabled={false}
-                        height={36}
-                        id="id-select-team"
-                        multiple={false}
-                        name="select-team"
-                        onChange={[Function]}
-                        options={Array []}
-                        required={false}
-                        value=""
-                      >
-                        <SelectPicker
-                          arrowRenderer={[Function]}
-                          backspaceRemoves={false}
-                          className="e1qrhqd00 css-1cl3z8x-StyledSelect-StyledSelectControl eho28m20"
-                          clearable={false}
-                          deleteRemoves={false}
-                          disabled={false}
-                          forwardedRef={null}
-                          height={36}
-                          id="id-select-team"
-                          multiple={false}
-                          name="select-team"
-                          onChange={[Function]}
-                          options={Array []}
-                          required={false}
-                          value=""
-                        >
-                          <Select
-                            arrowRenderer={[Function]}
-                            autosize={true}
-                            backspaceRemoves={false}
-                            backspaceToRemoveMessage="Press backspace to remove {label}"
-                            className="e1qrhqd00 css-1cl3z8x-StyledSelect-StyledSelectControl eho28m20"
-                            clearAllText="Clear all"
-                            clearRenderer={[Function]}
-                            clearValueText="Clear value"
-                            clearable={false}
-                            closeOnSelect={true}
-                            deleteRemoves={false}
-                            delimiter=","
-                            disabled={false}
-                            escapeClearsValue={true}
-                            filterOptions={[Function]}
-                            height={36}
-                            id="id-select-team"
-                            ignoreAccents={true}
-                            ignoreCase={true}
-                            inputProps={Object {}}
-                            isLoading={false}
-                            joinValues={false}
-                            labelKey="label"
-                            matchPos="any"
-                            matchProp="any"
-                            menuBuffer={0}
-                            menuRenderer={[Function]}
-                            multi={false}
-                            multiple={false}
-                            name="select-team"
-                            noResultsText="No results found"
-                            onBlurResetsInput={true}
-                            onChange={[Function]}
-                            onCloseResetsInput={true}
-                            onSelectResetsInput={true}
-                            openOnClick={true}
-                            optionComponent={[Function]}
-                            options={Array []}
-                            pageSize={5}
-                            placeholder="Select..."
-                            removeSelected={true}
-                            required={false}
-                            rtl={false}
-                            scrollMenuIntoView={true}
-                            searchable={true}
-                            simpleValue={false}
-                            tabSelectsValue={true}
-                            trimFilter={true}
-                            value=""
-                            valueComponent={[Function]}
-                            valueKey="value"
-                          >
-                            <div
-                              className="Select e1qrhqd00 css-1cl3z8x-StyledSelect-StyledSelectControl eho28m20 is-searchable Select--single"
-                            >
-                              <div
-                                className="Select-control"
-                                onKeyDown={[Function]}
-                                onMouseDown={[Function]}
-                                onTouchEnd={[Function]}
-                                onTouchMove={[Function]}
-                                onTouchStart={[Function]}
-                              >
-                                <span
-                                  className="Select-multi-value-wrapper"
-                                  id="react-select-2--value"
-                                >
-                                  <div
-                                    className="Select-placeholder"
-                                  >
-                                    Select...
-                                  </div>
-                                  <AutosizeInput
-                                    aria-activedescendant="react-select-2--value"
-                                    aria-expanded="false"
-                                    aria-haspopup="false"
-                                    aria-owns=""
-                                    className="Select-input"
-                                    id="id-select-team"
-                                    injectStyles={true}
-                                    minWidth="5"
-                                    onBlur={[Function]}
-                                    onChange={[Function]}
-                                    onFocus={[Function]}
-                                    required={false}
-                                    role="combobox"
-                                    value=""
-                                  >
-                                    <div
-                                      className="Select-input"
-                                      style={
-                                        Object {
-                                          "display": "inline-block",
-                                        }
-                                      }
-                                    >
-                                      <input
-                                        aria-activedescendant="react-select-2--value"
-                                        aria-expanded="false"
-                                        aria-haspopup="false"
-                                        aria-owns=""
-                                        id="id-select-team"
-                                        onBlur={[Function]}
-                                        onChange={[Function]}
-                                        onFocus={[Function]}
-                                        required={false}
-                                        role="combobox"
-                                        style={
-                                          Object {
-                                            "boxSizing": "content-box",
-                                            "width": "5px",
-                                          }
-                                        }
-                                        value=""
-                                      />
-                                      <div
-                                        style={
-                                          Object {
-                                            "height": 0,
-                                            "left": 0,
-                                            "overflow": "scroll",
-                                            "position": "absolute",
-                                            "top": 0,
-                                            "visibility": "hidden",
-                                            "whiteSpace": "pre",
-                                          }
-                                        }
-                                      />
-                                    </div>
-                                  </AutosizeInput>
-                                </span>
-                                <span
-                                  className="Select-arrow-zone"
-                                  onMouseDown={[Function]}
-                                >
-                                  <span
-                                    className="icon-arrow-down"
-                                  />
-                                </span>
-                              </div>
-                            </div>
-                          </Select>
-                        </SelectPicker>
-                      </ForwardRef(SelectPicker)>
-                    </StyledSelect>
-                  </SelectControl>
-                </StyledSelectControl>
-              </div>
-            </div>
-          </SelectField>
-        </div>
-      </div>
-      <div>
-        <button
-          className="btn btn-primary new-project-submit"
-          onClick={[Function]}
-        >
-          Create Project
-        </button>
-      </div>
-      <p>
-        Projects allow you to scope events to a specific application in your organization. For example, you might have separate projects for your API server and frontend client.
-      </p>
-    </div>
-  </div>
-</OnboardingProject>
-`;
diff --git a/tests/js/spec/views/onboarding/project/__snapshots__/platformpicker.spec.jsx.snap b/tests/js/spec/views/onboarding/project/__snapshots__/platformpicker.spec.jsx.snap
index e68186f769..9b97cbdd35 100644
--- a/tests/js/spec/views/onboarding/project/__snapshots__/platformpicker.spec.jsx.snap
+++ b/tests/js/spec/views/onboarding/project/__snapshots__/platformpicker.spec.jsx.snap
@@ -1,378 +1,510 @@
 // Jest Snapshot v1, https://goo.gl/fbAQLP
 
 exports[`PlatformPicker render() should only render Mobile platforms under Mobile tab 1`] = `
-<div
-  className="platform-picker"
->
-  <NavTabs>
-    <li
-      style={
-        Object {
-          "float": "right",
-          "marginRight": 0,
-        }
-      }
-    >
-      <div
-        className="platform-filter-container"
+<Fragment>
+  <NavContainer>
+    <CategoryNav>
+      <ListLink
+        activeClassName="active"
+        index={false}
+        isActive={[Function]}
+        key="popular"
+        onClick={[Function]}
+        to=""
       >
-        <span
-          className="icon icon-search"
-        />
-        <input
-          className="platform-filter"
-          label="Filter"
-          onChange={[Function]}
-          placeholder="Filter"
-          type="text"
-          value=""
-        />
-      </div>
-    </li>
-    <ListLink
-      activeClassName="active"
-      index={false}
-      isActive={[Function]}
-      key="popular"
-      onClick={[Function]}
-      to=""
-    >
-      Popular
-    </ListLink>
-    <ListLink
-      activeClassName="active"
-      index={false}
-      isActive={[Function]}
-      key="browser"
-      onClick={[Function]}
-      to=""
-    >
-      Browser
-    </ListLink>
-    <ListLink
-      activeClassName="active"
-      index={false}
-      isActive={[Function]}
-      key="server"
-      onClick={[Function]}
-      to=""
-    >
-      Server
-    </ListLink>
-    <ListLink
-      activeClassName="active"
-      index={false}
-      isActive={[Function]}
-      key="mobile"
-      onClick={[Function]}
-      to=""
-    >
-      Mobile
-    </ListLink>
-    <ListLink
-      activeClassName="active"
-      index={false}
-      isActive={[Function]}
-      key="desktop"
-      onClick={[Function]}
-      to=""
-    >
-      Desktop
-    </ListLink>
-    <ListLink
-      activeClassName="active"
-      index={false}
-      isActive={[Function]}
-      key="all"
-      onClick={[Function]}
-      to=""
-    >
-      All
-    </ListLink>
-  </NavTabs>
-  <ul
-    className="client-platform-list platform-tiles"
-  >
+        Popular
+      </ListLink>
+      <ListLink
+        activeClassName="active"
+        index={false}
+        isActive={[Function]}
+        key="browser"
+        onClick={[Function]}
+        to=""
+      >
+        Browser
+      </ListLink>
+      <ListLink
+        activeClassName="active"
+        index={false}
+        isActive={[Function]}
+        key="server"
+        onClick={[Function]}
+        to=""
+      >
+        Server
+      </ListLink>
+      <ListLink
+        activeClassName="active"
+        index={false}
+        isActive={[Function]}
+        key="mobile"
+        onClick={[Function]}
+        to=""
+      >
+        Mobile
+      </ListLink>
+      <ListLink
+        activeClassName="active"
+        index={false}
+        isActive={[Function]}
+        key="desktop"
+        onClick={[Function]}
+        to=""
+      >
+        Desktop
+      </ListLink>
+      <ListLink
+        activeClassName="active"
+        index={false}
+        isActive={[Function]}
+        key="all"
+        onClick={[Function]}
+        to=""
+      >
+        All
+      </ListLink>
+    </CategoryNav>
+    <SearchBar>
+      <InlineSvg
+        src="icon-search"
+      />
+      <input
+        label="Filter Platforms"
+        onChange={[Function]}
+        placeholder="Filter Platforms"
+        type="text"
+        value=""
+      />
+    </SearchBar>
+  </NavContainer>
+  <PlatformList>
     <PlatformCard
-      className=""
+      data-test-id="platform-cordova"
       key="cordova"
+      onClear={[Function]}
       onClick={[Function]}
-      platform="cordova"
+      platform={
+        Object {
+          "id": "cordova",
+          "language": "cordova",
+          "link": "https://docs.getsentry.com/hosted/clients/cordova/",
+          "name": "Cordova",
+          "type": "language",
+        }
+      }
+      selected={false}
     />
     <PlatformCard
-      className=""
+      data-test-id="platform-java-android"
       key="java-android"
+      onClear={[Function]}
       onClick={[Function]}
-      platform="java-android"
+      platform={
+        Object {
+          "id": "java-android",
+          "language": "java",
+          "link": "https://docs.getsentry.com/hosted/clients/java/modules/android/",
+          "name": "Android",
+          "type": "framework",
+        }
+      }
+      selected={false}
     />
     <PlatformCard
-      className=""
+      data-test-id="platform-objc"
       key="objc"
+      onClear={[Function]}
       onClick={[Function]}
-      platform="objc"
+      platform={
+        Object {
+          "id": "objc",
+          "language": "objc",
+          "link": "https://docs.getsentry.com/hosted/clients/cocoa/",
+          "name": "Objective-C",
+          "type": "language",
+        }
+      }
+      selected={false}
     />
     <PlatformCard
-      className=""
+      data-test-id="platform-cocoa"
       key="cocoa"
+      onClear={[Function]}
       onClick={[Function]}
-      platform="cocoa"
+      platform={
+        Object {
+          "id": "cocoa",
+          "language": "cocoa",
+          "link": "https://docs.getsentry.com/hosted/clients/react-native/",
+          "name": "React-Native",
+          "type": "language",
+        }
+      }
+      selected={false}
     />
     <PlatformCard
-      className=""
+      data-test-id="platform-swift"
       key="swift"
+      onClear={[Function]}
       onClick={[Function]}
-      platform="swift"
+      platform={
+        Object {
+          "id": "swift",
+          "language": "swift",
+          "link": "https://docs.getsentry.com/hosted/clients/cocoa/",
+          "name": "Swift",
+          "type": "language",
+        }
+      }
+      selected={false}
     />
-  </ul>
-</div>
+  </PlatformList>
+</Fragment>
 `;
 
 exports[`PlatformPicker render() should render renderPlatformList with Python when filtered with py 1`] = `
-<div
-  className="platform-picker"
->
-  <NavTabs>
-    <li
-      style={
-        Object {
-          "float": "right",
-          "marginRight": 0,
-        }
-      }
-    >
-      <div
-        className="platform-filter-container"
+<Fragment>
+  <NavContainer>
+    <CategoryNav>
+      <ListLink
+        activeClassName="active"
+        index={false}
+        isActive={[Function]}
+        key="popular"
+        onClick={[Function]}
+        to=""
       >
-        <span
-          className="icon icon-search"
-        />
-        <input
-          className="platform-filter"
-          label="Filter"
-          onChange={[Function]}
-          placeholder="Filter"
-          type="text"
-          value="py"
-        />
-      </div>
-    </li>
-    <ListLink
-      activeClassName="active"
-      index={false}
-      isActive={[Function]}
-      key="popular"
-      onClick={[Function]}
-      to=""
-    >
-      Popular
-    </ListLink>
-    <ListLink
-      activeClassName="active"
-      index={false}
-      isActive={[Function]}
-      key="browser"
-      onClick={[Function]}
-      to=""
-    >
-      Browser
-    </ListLink>
-    <ListLink
-      activeClassName="active"
-      index={false}
-      isActive={[Function]}
-      key="server"
-      onClick={[Function]}
-      to=""
-    >
-      Server
-    </ListLink>
-    <ListLink
-      activeClassName="active"
-      index={false}
-      isActive={[Function]}
-      key="mobile"
-      onClick={[Function]}
-      to=""
-    >
-      Mobile
-    </ListLink>
-    <ListLink
-      activeClassName="active"
-      index={false}
-      isActive={[Function]}
-      key="desktop"
-      onClick={[Function]}
-      to=""
-    >
-      Desktop
-    </ListLink>
-    <ListLink
-      activeClassName="active"
-      index={false}
-      isActive={[Function]}
-      key="all"
-      onClick={[Function]}
-      to=""
-    >
-      All
-    </ListLink>
-  </NavTabs>
-  <ul
-    className="client-platform-list platform-tiles"
-  >
+        Popular
+      </ListLink>
+      <ListLink
+        activeClassName="active"
+        index={false}
+        isActive={[Function]}
+        key="browser"
+        onClick={[Function]}
+        to=""
+      >
+        Browser
+      </ListLink>
+      <ListLink
+        activeClassName="active"
+        index={false}
+        isActive={[Function]}
+        key="server"
+        onClick={[Function]}
+        to=""
+      >
+        Server
+      </ListLink>
+      <ListLink
+        activeClassName="active"
+        index={false}
+        isActive={[Function]}
+        key="mobile"
+        onClick={[Function]}
+        to=""
+      >
+        Mobile
+      </ListLink>
+      <ListLink
+        activeClassName="active"
+        index={false}
+        isActive={[Function]}
+        key="desktop"
+        onClick={[Function]}
+        to=""
+      >
+        Desktop
+      </ListLink>
+      <ListLink
+        activeClassName="active"
+        index={false}
+        isActive={[Function]}
+        key="all"
+        onClick={[Function]}
+        to=""
+      >
+        All
+      </ListLink>
+    </CategoryNav>
+    <SearchBar>
+      <InlineSvg
+        src="icon-search"
+      />
+      <input
+        label="Filter Platforms"
+        onChange={[Function]}
+        placeholder="Filter Platforms"
+        type="text"
+        value="py"
+      />
+    </SearchBar>
+  </NavContainer>
+  <PlatformList>
     <PlatformCard
-      className=""
+      data-test-id="platform-python-bottle"
       key="python-bottle"
+      onClear={[Function]}
       onClick={[Function]}
-      platform="python-bottle"
+      platform={
+        Object {
+          "id": "python-bottle",
+          "language": "python",
+          "link": "https://docs.getsentry.com/hosted/clients/python/integrations/bottle/",
+          "name": "Bottle",
+          "type": "framework",
+        }
+      }
+      selected={false}
     />
     <PlatformCard
-      className=""
+      data-test-id="platform-python-celery"
       key="python-celery"
+      onClear={[Function]}
       onClick={[Function]}
-      platform="python-celery"
+      platform={
+        Object {
+          "id": "python-celery",
+          "language": "python",
+          "link": "https://docs.getsentry.com/hosted/clients/python/integrations/celery/",
+          "name": "Celery",
+          "type": "library",
+        }
+      }
+      selected={false}
     />
     <PlatformCard
-      className=""
+      data-test-id="platform-python-django"
       key="python-django"
+      onClear={[Function]}
       onClick={[Function]}
-      platform="python-django"
+      platform={
+        Object {
+          "id": "python-django",
+          "language": "python",
+          "link": "https://docs.getsentry.com/hosted/clients/python/integrations/django/",
+          "name": "Django",
+          "type": "framework",
+        }
+      }
+      selected={false}
     />
     <PlatformCard
-      className=""
+      data-test-id="platform-python-flask"
       key="python-flask"
+      onClear={[Function]}
       onClick={[Function]}
-      platform="python-flask"
+      platform={
+        Object {
+          "id": "python-flask",
+          "language": "python",
+          "link": "https://docs.getsentry.com/hosted/clients/python/integrations/flask/",
+          "name": "Flask",
+          "type": "framework",
+        }
+      }
+      selected={false}
     />
     <PlatformCard
-      className=""
+      data-test-id="platform-python-pylons"
       key="python-pylons"
+      onClear={[Function]}
       onClick={[Function]}
-      platform="python-pylons"
+      platform={
+        Object {
+          "id": "python-pylons",
+          "language": "python",
+          "link": "https://docs.getsentry.com/hosted/clients/python/integrations/pylons/",
+          "name": "Pylons",
+          "type": "framework",
+        }
+      }
+      selected={false}
     />
     <PlatformCard
-      className=""
+      data-test-id="platform-python-pyramid"
       key="python-pyramid"
+      onClear={[Function]}
       onClick={[Function]}
-      platform="python-pyramid"
+      platform={
+        Object {
+          "id": "python-pyramid",
+          "language": "python",
+          "link": "https://docs.getsentry.com/hosted/clients/python/integrations/pyramid/",
+          "name": "Pyramid",
+          "type": "framework",
+        }
+      }
+      selected={false}
     />
     <PlatformCard
-      className=""
+      data-test-id="platform-python"
       key="python"
+      onClear={[Function]}
       onClick={[Function]}
-      platform="python"
+      platform={
+        Object {
+          "id": "python",
+          "language": "python",
+          "link": "https://docs.getsentry.com/hosted/clients/python/",
+          "name": "Python",
+          "type": "language",
+        }
+      }
+      selected={false}
     />
     <PlatformCard
-      className=""
+      data-test-id="platform-python-rq"
       key="python-rq"
+      onClear={[Function]}
       onClick={[Function]}
-      platform="python-rq"
+      platform={
+        Object {
+          "id": "python-rq",
+          "language": "python",
+          "link": "https://docs.getsentry.com/hosted/clients/python/integrations/rq/",
+          "name": "RQ",
+          "type": "framework",
+        }
+      }
+      selected={false}
     />
     <PlatformCard
-      className=""
+      data-test-id="platform-python-tornado"
       key="python-tornado"
+      onClear={[Function]}
       onClick={[Function]}
-      platform="python-tornado"
+      platform={
+        Object {
+          "id": "python-tornado",
+          "language": "python",
+          "link": "https://docs.getsentry.com/hosted/clients/python/integrations/tornado/",
+          "name": "Tornado",
+          "type": "framework",
+        }
+      }
+      selected={false}
     />
-  </ul>
-</div>
+  </PlatformList>
+</Fragment>
 `;
 
 exports[`PlatformPicker render() should render renderPlatformList with community SDKs message if platform not found 1`] = `
-<div
-  className="platform-picker"
->
-  <NavTabs>
-    <li
-      style={
-        Object {
-          "float": "right",
-          "marginRight": 0,
-        }
-      }
+<Fragment>
+  <NavContainer>
+    <CategoryNav>
+      <ListLink
+        activeClassName="active"
+        index={false}
+        isActive={[Function]}
+        key="popular"
+        onClick={[Function]}
+        to=""
+      >
+        Popular
+      </ListLink>
+      <ListLink
+        activeClassName="active"
+        index={false}
+        isActive={[Function]}
+        key="browser"
+        onClick={[Function]}
+        to=""
+      >
+        Browser
+      </ListLink>
+      <ListLink
+        activeClassName="active"
+        index={false}
+        isActive={[Function]}
+        key="server"
+        onClick={[Function]}
+        to=""
+      >
+        Server
+      </ListLink>
+      <ListLink
+        activeClassName="active"
+        index={false}
+        isActive={[Function]}
+        key="mobile"
+        onClick={[Function]}
+        to=""
+      >
+        Mobile
+      </ListLink>
+      <ListLink
+        activeClassName="active"
+        index={false}
+        isActive={[Function]}
+        key="desktop"
+        onClick={[Function]}
+        to=""
+      >
+        Desktop
+      </ListLink>
+      <ListLink
+        activeClassName="active"
+        index={false}
+        isActive={[Function]}
+        key="all"
+        onClick={[Function]}
+        to=""
+      >
+        All
+      </ListLink>
+    </CategoryNav>
+    <SearchBar>
+      <InlineSvg
+        src="icon-search"
+      />
+      <input
+        label="Filter Platforms"
+        onChange={[Function]}
+        placeholder="Filter Platforms"
+        type="text"
+        value="aaaaaa"
+      />
+    </SearchBar>
+  </NavContainer>
+  <PlatformList />
+  <EmptyMessage
+    icon="icon-project"
+    title="We don't have an SDK for that yet!"
+  >
+    <span
+      key="5"
     >
-      <div
-        className="platform-filter-container"
+      <span
+        key="0"
+      >
+        Not finding your platform? You can still create your project,
+              but looks like we don't have an official SDK for your platform
+              yet. However, there's a rich ecosystem of community supported
+              SDKs (including Perl, CFML, Clojure, and ActionScript). Try
+              
+      </span>
+      <ExternalLink
+        href="https://github.com/search?q=-org%3Agetsentry+topic%3Asentry&type=Repositories"
+        key="2"
+        rel="noreferrer noopener"
+        target="_blank"
       >
         <span
-          className="icon icon-search"
-        />
-        <input
-          className="platform-filter"
-          label="Filter"
-          onChange={[Function]}
-          placeholder="Filter"
-          type="text"
-          value="aaaaaa"
-        />
-      </div>
-    </li>
-    <ListLink
-      activeClassName="active"
-      index={false}
-      isActive={[Function]}
-      key="popular"
-      onClick={[Function]}
-      to=""
-    >
-      Popular
-    </ListLink>
-    <ListLink
-      activeClassName="active"
-      index={false}
-      isActive={[Function]}
-      key="browser"
-      onClick={[Function]}
-      to=""
-    >
-      Browser
-    </ListLink>
-    <ListLink
-      activeClassName="active"
-      index={false}
-      isActive={[Function]}
-      key="server"
-      onClick={[Function]}
-      to=""
-    >
-      Server
-    </ListLink>
-    <ListLink
-      activeClassName="active"
-      index={false}
-      isActive={[Function]}
-      key="mobile"
-      onClick={[Function]}
-      to=""
-    >
-      Mobile
-    </ListLink>
-    <ListLink
-      activeClassName="active"
-      index={false}
-      isActive={[Function]}
-      key="desktop"
-      onClick={[Function]}
-      to=""
-    >
-      Desktop
-    </ListLink>
-    <ListLink
-      activeClassName="active"
-      index={false}
-      isActive={[Function]}
-      key="all"
-      onClick={[Function]}
-      to=""
-    >
-      All
-    </ListLink>
-  </NavTabs>
-  <p>
-    Not finding your platform? There's a rich ecosystem of community supported SDKs as well (including Perl, CFML, Clojure, and ActionScript).
- Try searching for Sentry clients or contacting support.
-  </p>
-</div>
+          key="1"
+        >
+          searching for Sentry clients
+        </span>
+      </ExternalLink>
+      <span
+        key="3"
+      >
+         or contacting support.
+      </span>
+    </span>
+  </EmptyMessage>
+</Fragment>
 `;
 
 exports[`PlatformPicker render() should update State.tab onClick when particular tab is clicked 1`] = `
@@ -386,1609 +518,2567 @@ exports[`PlatformPicker render() should update State.tab onClick when particular
   setPlatform={[Function]}
   showOther={true}
 >
-  <div
-    className="platform-picker"
-  >
-    <NavTabs>
-      <ul
-        className="nav nav-tabs"
-      >
-        <li
-          style={
-            Object {
-              "float": "right",
-              "marginRight": 0,
-            }
-          }
-        >
-          <div
-            className="platform-filter-container"
-          >
-            <span
-              className="icon icon-search"
-            />
-            <input
-              className="platform-filter"
-              label="Filter"
-              onChange={[Function]}
-              placeholder="Filter"
-              type="text"
-              value=""
-            />
-          </div>
-        </li>
-        <ListLink
-          activeClassName="active"
-          index={false}
-          isActive={[Function]}
-          key="popular"
-          onClick={[Function]}
-          to=""
+  <NavContainer>
+    <div
+      className="css-xl0stt-NavContainer ewlrg790"
+    >
+      <CategoryNav>
+        <NavTabs
+          className="css-5tazcq-CategoryNav ewlrg792"
         >
-          <li
-            className=""
+          <ul
+            className="nav nav-tabs css-5tazcq-CategoryNav ewlrg792"
           >
-            <Link
+            <ListLink
+              activeClassName="active"
+              index={false}
+              isActive={[Function]}
+              key="popular"
               onClick={[Function]}
-              onlyActiveOnIndex={false}
-              style={Object {}}
               to=""
             >
-              <a
-                onClick={[Function]}
-                style={Object {}}
+              <li
+                className=""
               >
-                Popular
-              </a>
-            </Link>
-          </li>
-        </ListLink>
-        <ListLink
-          activeClassName="active"
-          index={false}
-          isActive={[Function]}
-          key="browser"
-          onClick={[Function]}
-          to=""
-        >
-          <li
-            className=""
-          >
-            <Link
+                <Link
+                  onClick={[Function]}
+                  onlyActiveOnIndex={false}
+                  style={Object {}}
+                  to=""
+                >
+                  <a
+                    onClick={[Function]}
+                    style={Object {}}
+                  >
+                    Popular
+                  </a>
+                </Link>
+              </li>
+            </ListLink>
+            <ListLink
+              activeClassName="active"
+              index={false}
+              isActive={[Function]}
+              key="browser"
               onClick={[Function]}
-              onlyActiveOnIndex={false}
-              style={Object {}}
               to=""
             >
-              <a
-                onClick={[Function]}
-                style={Object {}}
+              <li
+                className=""
               >
-                Browser
-              </a>
-            </Link>
-          </li>
-        </ListLink>
-        <ListLink
-          activeClassName="active"
-          index={false}
-          isActive={[Function]}
-          key="server"
-          onClick={[Function]}
-          to=""
-        >
-          <li
-            className=""
-          >
-            <Link
+                <Link
+                  onClick={[Function]}
+                  onlyActiveOnIndex={false}
+                  style={Object {}}
+                  to=""
+                >
+                  <a
+                    onClick={[Function]}
+                    style={Object {}}
+                  >
+                    Browser
+                  </a>
+                </Link>
+              </li>
+            </ListLink>
+            <ListLink
+              activeClassName="active"
+              index={false}
+              isActive={[Function]}
+              key="server"
               onClick={[Function]}
-              onlyActiveOnIndex={false}
-              style={Object {}}
               to=""
             >
-              <a
-                onClick={[Function]}
-                style={Object {}}
+              <li
+                className=""
               >
-                Server
-              </a>
-            </Link>
-          </li>
-        </ListLink>
-        <ListLink
-          activeClassName="active"
-          index={false}
-          isActive={[Function]}
-          key="mobile"
-          onClick={[Function]}
-          to=""
-        >
-          <li
-            className=""
-          >
-            <Link
+                <Link
+                  onClick={[Function]}
+                  onlyActiveOnIndex={false}
+                  style={Object {}}
+                  to=""
+                >
+                  <a
+                    onClick={[Function]}
+                    style={Object {}}
+                  >
+                    Server
+                  </a>
+                </Link>
+              </li>
+            </ListLink>
+            <ListLink
+              activeClassName="active"
+              index={false}
+              isActive={[Function]}
+              key="mobile"
               onClick={[Function]}
-              onlyActiveOnIndex={false}
-              style={Object {}}
               to=""
             >
-              <a
-                onClick={[Function]}
-                style={Object {}}
+              <li
+                className=""
               >
-                Mobile
-              </a>
-            </Link>
-          </li>
-        </ListLink>
-        <ListLink
-          activeClassName="active"
-          index={false}
-          isActive={[Function]}
-          key="desktop"
-          onClick={[Function]}
-          to=""
-        >
-          <li
-            className=""
-          >
-            <Link
+                <Link
+                  onClick={[Function]}
+                  onlyActiveOnIndex={false}
+                  style={Object {}}
+                  to=""
+                >
+                  <a
+                    onClick={[Function]}
+                    style={Object {}}
+                  >
+                    Mobile
+                  </a>
+                </Link>
+              </li>
+            </ListLink>
+            <ListLink
+              activeClassName="active"
+              index={false}
+              isActive={[Function]}
+              key="desktop"
               onClick={[Function]}
-              onlyActiveOnIndex={false}
-              style={Object {}}
               to=""
             >
-              <a
-                onClick={[Function]}
-                style={Object {}}
+              <li
+                className=""
               >
-                Desktop
-              </a>
-            </Link>
-          </li>
-        </ListLink>
-        <ListLink
-          activeClassName="active"
-          index={false}
-          isActive={[Function]}
-          key="all"
-          onClick={[Function]}
-          to=""
-        >
-          <li
-            className="active"
-          >
-            <Link
+                <Link
+                  onClick={[Function]}
+                  onlyActiveOnIndex={false}
+                  style={Object {}}
+                  to=""
+                >
+                  <a
+                    onClick={[Function]}
+                    style={Object {}}
+                  >
+                    Desktop
+                  </a>
+                </Link>
+              </li>
+            </ListLink>
+            <ListLink
+              activeClassName="active"
+              index={false}
+              isActive={[Function]}
+              key="all"
               onClick={[Function]}
-              onlyActiveOnIndex={false}
-              style={Object {}}
               to=""
             >
-              <a
-                onClick={[Function]}
-                style={Object {}}
+              <li
+                className="active"
               >
-                All
-              </a>
-            </Link>
-          </li>
-        </ListLink>
-      </ul>
-    </NavTabs>
-    <ul
-      className="client-platform-list platform-tiles"
+                <Link
+                  onClick={[Function]}
+                  onlyActiveOnIndex={false}
+                  style={Object {}}
+                  to=""
+                >
+                  <a
+                    onClick={[Function]}
+                    style={Object {}}
+                  >
+                    All
+                  </a>
+                </Link>
+              </li>
+            </ListLink>
+          </ul>
+        </NavTabs>
+      </CategoryNav>
+      <SearchBar>
+        <div
+          className="css-1e5tau1-SearchBar-inputStyles ewlrg791"
+        >
+          <InlineSvg
+            src="icon-search"
+          >
+            <StyledSvg
+              height="1em"
+              viewBox={Object {}}
+              width="1em"
+            >
+              <svg
+                className="css-ryh69w-StyledSvg e2idor0"
+                height="1em"
+                viewBox={Object {}}
+                width="1em"
+              >
+                <use
+                  href="#test"
+                  xlinkHref="#test"
+                />
+              </svg>
+            </StyledSvg>
+          </InlineSvg>
+          <input
+            label="Filter Platforms"
+            onChange={[Function]}
+            placeholder="Filter Platforms"
+            type="text"
+            value=""
+          />
+        </div>
+      </SearchBar>
+    </div>
+  </NavContainer>
+  <PlatformList>
+    <div
+      className="css-545rh6-PlatformList ewlrg793"
     >
       <PlatformCard
-        className=""
+        data-test-id="platform-csharp"
         key="csharp"
+        onClear={[Function]}
         onClick={[Function]}
-        platform="csharp"
+        platform={
+          Object {
+            "id": "csharp",
+            "language": "csharp",
+            "link": "https://docs.getsentry.com/hosted/clients/csharp/",
+            "name": "C#",
+            "type": "language",
+          }
+        }
+        selected={false}
       >
-        <span
-          className="platform-card"
+        <Component
+          className="css-16kw2fg-PlatformCard ewlrg796"
+          data-test-id="platform-csharp"
+          onClear={[Function]}
           onClick={[Function]}
+          platform={
+            Object {
+              "id": "csharp",
+              "language": "csharp",
+              "link": "https://docs.getsentry.com/hosted/clients/csharp/",
+              "name": "C#",
+              "type": "language",
+            }
+          }
+          selected={false}
         >
-          <PlatformiconTile
-            className=""
+          <div
+            className="css-16kw2fg-PlatformCard ewlrg796"
+            data-test-id="platform-csharp"
             onClick={[Function]}
-            platform="csharp"
           >
-            <li
-              className="platform-tile list-unstyled csharp csharp "
+            <StyledPlatformiconTile
+              platform="csharp"
             >
-              <span
-                className="platformicon platformicon-csharp"
+              <div
+                className="css-tzg8rc-PlatformiconTile-getColorStyles-StyledPlatformiconTile ewlrg794"
               />
-            </li>
-          </PlatformiconTile>
-          <h5>
-             
-            C#
-             
-          </h5>
-        </span>
+            </StyledPlatformiconTile>
+            <h3>
+              C#
+            </h3>
+          </div>
+        </Component>
       </PlatformCard>
       <PlatformCard
-        className=""
+        data-test-id="platform-cordova"
         key="cordova"
+        onClear={[Function]}
         onClick={[Function]}
-        platform="cordova"
+        platform={
+          Object {
+            "id": "cordova",
+            "language": "cordova",
+            "link": "https://docs.getsentry.com/hosted/clients/cordova/",
+            "name": "Cordova",
+            "type": "language",
+          }
+        }
+        selected={false}
       >
-        <span
-          className="platform-card"
+        <Component
+          className="css-16kw2fg-PlatformCard ewlrg796"
+          data-test-id="platform-cordova"
+          onClear={[Function]}
           onClick={[Function]}
+          platform={
+            Object {
+              "id": "cordova",
+              "language": "cordova",
+              "link": "https://docs.getsentry.com/hosted/clients/cordova/",
+              "name": "Cordova",
+              "type": "language",
+            }
+          }
+          selected={false}
         >
-          <PlatformiconTile
-            className=""
+          <div
+            className="css-16kw2fg-PlatformCard ewlrg796"
+            data-test-id="platform-cordova"
             onClick={[Function]}
-            platform="cordova"
           >
-            <li
-              className="platform-tile list-unstyled cordova cordova "
+            <StyledPlatformiconTile
+              platform="cordova"
             >
-              <span
-                className="platformicon platformicon-cordova"
+              <div
+                className="css-yhb6wb-PlatformiconTile-getColorStyles-StyledPlatformiconTile ewlrg794"
               />
-            </li>
-          </PlatformiconTile>
-          <h5>
-             
-            Cordova
-             
-          </h5>
-        </span>
+            </StyledPlatformiconTile>
+            <h3>
+              Cordova
+            </h3>
+          </div>
+        </Component>
       </PlatformCard>
       <PlatformCard
-        className=""
+        data-test-id="platform-electron"
         key="electron"
+        onClear={[Function]}
         onClick={[Function]}
-        platform="electron"
+        platform={
+          Object {
+            "id": "electron",
+            "language": "electron",
+            "link": "https://docs.getsentry.com/hosted/clients/electron/",
+            "name": "Electron",
+            "type": "language",
+          }
+        }
+        selected={false}
       >
-        <span
-          className="platform-card"
+        <Component
+          className="css-16kw2fg-PlatformCard ewlrg796"
+          data-test-id="platform-electron"
+          onClear={[Function]}
           onClick={[Function]}
+          platform={
+            Object {
+              "id": "electron",
+              "language": "electron",
+              "link": "https://docs.getsentry.com/hosted/clients/electron/",
+              "name": "Electron",
+              "type": "language",
+            }
+          }
+          selected={false}
         >
-          <PlatformiconTile
-            className=""
+          <div
+            className="css-16kw2fg-PlatformCard ewlrg796"
+            data-test-id="platform-electron"
             onClick={[Function]}
-            platform="electron"
           >
-            <li
-              className="platform-tile list-unstyled electron electron "
+            <StyledPlatformiconTile
+              platform="electron"
             >
-              <span
-                className="platformicon platformicon-electron"
+              <div
+                className="css-yhb6wb-PlatformiconTile-getColorStyles-StyledPlatformiconTile ewlrg794"
               />
-            </li>
-          </PlatformiconTile>
-          <h5>
-             
-            Electron
-             
-          </h5>
-        </span>
+            </StyledPlatformiconTile>
+            <h3>
+              Electron
+            </h3>
+          </div>
+        </Component>
       </PlatformCard>
       <PlatformCard
-        className=""
+        data-test-id="platform-elixir"
         key="elixir"
+        onClear={[Function]}
         onClick={[Function]}
-        platform="elixir"
+        platform={
+          Object {
+            "id": "elixir",
+            "language": "elixir",
+            "link": "https://docs.getsentry.com/hosted/clients/elixir/",
+            "name": "Elixir",
+            "type": "language",
+          }
+        }
+        selected={false}
       >
-        <span
-          className="platform-card"
+        <Component
+          className="css-16kw2fg-PlatformCard ewlrg796"
+          data-test-id="platform-elixir"
+          onClear={[Function]}
           onClick={[Function]}
+          platform={
+            Object {
+              "id": "elixir",
+              "language": "elixir",
+              "link": "https://docs.getsentry.com/hosted/clients/elixir/",
+              "name": "Elixir",
+              "type": "language",
+            }
+          }
+          selected={false}
         >
-          <PlatformiconTile
-            className=""
+          <div
+            className="css-16kw2fg-PlatformCard ewlrg796"
+            data-test-id="platform-elixir"
             onClick={[Function]}
-            platform="elixir"
           >
-            <li
-              className="platform-tile list-unstyled elixir elixir "
+            <StyledPlatformiconTile
+              platform="elixir"
             >
-              <span
-                className="platformicon platformicon-elixir"
+              <div
+                className="css-1mdonx9-PlatformiconTile-getColorStyles-StyledPlatformiconTile ewlrg794"
               />
-            </li>
-          </PlatformiconTile>
-          <h5>
-             
-            Elixir
-             
-          </h5>
-        </span>
+            </StyledPlatformiconTile>
+            <h3>
+              Elixir
+            </h3>
+          </div>
+        </Component>
       </PlatformCard>
       <PlatformCard
-        className=""
+        data-test-id="platform-go"
         key="go"
+        onClear={[Function]}
         onClick={[Function]}
-        platform="go"
+        platform={
+          Object {
+            "id": "go",
+            "language": "go",
+            "link": "https://docs.getsentry.com/hosted/clients/go/",
+            "name": "Go",
+            "type": "language",
+          }
+        }
+        selected={false}
       >
-        <span
-          className="platform-card"
+        <Component
+          className="css-16kw2fg-PlatformCard ewlrg796"
+          data-test-id="platform-go"
+          onClear={[Function]}
           onClick={[Function]}
+          platform={
+            Object {
+              "id": "go",
+              "language": "go",
+              "link": "https://docs.getsentry.com/hosted/clients/go/",
+              "name": "Go",
+              "type": "language",
+            }
+          }
+          selected={false}
         >
-          <PlatformiconTile
-            className=""
+          <div
+            className="css-16kw2fg-PlatformCard ewlrg796"
+            data-test-id="platform-go"
             onClick={[Function]}
-            platform="go"
           >
-            <li
-              className="platform-tile list-unstyled go go "
+            <StyledPlatformiconTile
+              platform="go"
             >
-              <span
-                className="platformicon platformicon-go"
+              <div
+                className="css-ks66kg-PlatformiconTile-getColorStyles-StyledPlatformiconTile ewlrg794"
               />
-            </li>
-          </PlatformiconTile>
-          <h5>
-             
-            Go
-             
-          </h5>
-        </span>
+            </StyledPlatformiconTile>
+            <h3>
+              Go
+            </h3>
+          </div>
+        </Component>
       </PlatformCard>
       <PlatformCard
-        className=""
+        data-test-id="platform-go-http"
         key="go-http"
+        onClear={[Function]}
         onClick={[Function]}
-        platform="go-http"
+        platform={
+          Object {
+            "id": "go-http",
+            "language": "go",
+            "link": null,
+            "name": "net/http",
+            "type": "framework",
+          }
+        }
+        selected={false}
       >
-        <span
-          className="platform-card"
+        <Component
+          className="css-16kw2fg-PlatformCard ewlrg796"
+          data-test-id="platform-go-http"
+          onClear={[Function]}
           onClick={[Function]}
+          platform={
+            Object {
+              "id": "go-http",
+              "language": "go",
+              "link": null,
+              "name": "net/http",
+              "type": "framework",
+            }
+          }
+          selected={false}
         >
-          <PlatformiconTile
-            className=""
+          <div
+            className="css-16kw2fg-PlatformCard ewlrg796"
+            data-test-id="platform-go-http"
             onClick={[Function]}
-            platform="go-http"
           >
-            <li
-              className="platform-tile list-unstyled go-http go "
+            <StyledPlatformiconTile
+              platform="go-http"
             >
-              <span
-                className="platformicon platformicon-go-http"
+              <div
+                className="css-ks66kg-PlatformiconTile-getColorStyles-StyledPlatformiconTile ewlrg794"
               />
-            </li>
-          </PlatformiconTile>
-          <h5>
-             
-            net/http
-             
-          </h5>
-        </span>
+            </StyledPlatformiconTile>
+            <h3>
+              net/http
+            </h3>
+          </div>
+        </Component>
       </PlatformCard>
       <PlatformCard
-        className=""
+        data-test-id="platform-java-android"
         key="java-android"
+        onClear={[Function]}
         onClick={[Function]}
-        platform="java-android"
+        platform={
+          Object {
+            "id": "java-android",
+            "language": "java",
+            "link": "https://docs.getsentry.com/hosted/clients/java/modules/android/",
+            "name": "Android",
+            "type": "framework",
+          }
+        }
+        selected={false}
       >
-        <span
-          className="platform-card"
+        <Component
+          className="css-16kw2fg-PlatformCard ewlrg796"
+          data-test-id="platform-java-android"
+          onClear={[Function]}
           onClick={[Function]}
+          platform={
+            Object {
+              "id": "java-android",
+              "language": "java",
+              "link": "https://docs.getsentry.com/hosted/clients/java/modules/android/",
+              "name": "Android",
+              "type": "framework",
+            }
+          }
+          selected={false}
         >
-          <PlatformiconTile
-            className=""
+          <div
+            className="css-16kw2fg-PlatformCard ewlrg796"
+            data-test-id="platform-java-android"
             onClick={[Function]}
-            platform="java-android"
           >
-            <li
-              className="platform-tile list-unstyled java-android java "
+            <StyledPlatformiconTile
+              platform="java-android"
             >
-              <span
-                className="platformicon platformicon-java-android"
+              <div
+                className="css-lc48x8-PlatformiconTile-getColorStyles-StyledPlatformiconTile ewlrg794"
               />
-            </li>
-          </PlatformiconTile>
-          <h5>
-             
-            Android
-             
-          </h5>
-        </span>
+            </StyledPlatformiconTile>
+            <h3>
+              Android
+            </h3>
+          </div>
+        </Component>
       </PlatformCard>
       <PlatformCard
-        className=""
+        data-test-id="platform-java-appengine"
         key="java-appengine"
+        onClear={[Function]}
         onClick={[Function]}
-        platform="java-appengine"
+        platform={
+          Object {
+            "id": "java-appengine",
+            "language": "java",
+            "link": "https://docs.getsentry.com/hosted/clients/java/modules/appengine/",
+            "name": "Google App Engine",
+            "type": "framework",
+          }
+        }
+        selected={false}
       >
-        <span
-          className="platform-card"
+        <Component
+          className="css-16kw2fg-PlatformCard ewlrg796"
+          data-test-id="platform-java-appengine"
+          onClear={[Function]}
           onClick={[Function]}
+          platform={
+            Object {
+              "id": "java-appengine",
+              "language": "java",
+              "link": "https://docs.getsentry.com/hosted/clients/java/modules/appengine/",
+              "name": "Google App Engine",
+              "type": "framework",
+            }
+          }
+          selected={false}
         >
-          <PlatformiconTile
-            className=""
+          <div
+            className="css-16kw2fg-PlatformCard ewlrg796"
+            data-test-id="platform-java-appengine"
             onClick={[Function]}
-            platform="java-appengine"
           >
-            <li
-              className="platform-tile list-unstyled java-appengine java "
+            <StyledPlatformiconTile
+              platform="java-appengine"
             >
-              <span
-                className="platformicon platformicon-java-appengine"
+              <div
+                className="css-1s03x3z-PlatformiconTile-getColorStyles-StyledPlatformiconTile ewlrg794"
               />
-            </li>
-          </PlatformiconTile>
-          <h5>
-             
-            Google App Engine
-             
-          </h5>
-        </span>
+            </StyledPlatformiconTile>
+            <h3>
+              Google App Engine
+            </h3>
+          </div>
+        </Component>
       </PlatformCard>
       <PlatformCard
-        className=""
+        data-test-id="platform-java"
         key="java"
+        onClear={[Function]}
         onClick={[Function]}
-        platform="java"
+        platform={
+          Object {
+            "id": "java",
+            "language": "java",
+            "link": "https://docs.getsentry.com/hosted/clients/java/",
+            "name": "Java",
+            "type": "language",
+          }
+        }
+        selected={false}
       >
-        <span
-          className="platform-card"
+        <Component
+          className="css-16kw2fg-PlatformCard ewlrg796"
+          data-test-id="platform-java"
+          onClear={[Function]}
           onClick={[Function]}
+          platform={
+            Object {
+              "id": "java",
+              "language": "java",
+              "link": "https://docs.getsentry.com/hosted/clients/java/",
+              "name": "Java",
+              "type": "language",
+            }
+          }
+          selected={false}
         >
-          <PlatformiconTile
-            className=""
+          <div
+            className="css-16kw2fg-PlatformCard ewlrg796"
+            data-test-id="platform-java"
             onClick={[Function]}
-            platform="java"
           >
-            <li
-              className="platform-tile list-unstyled java java "
+            <StyledPlatformiconTile
+              platform="java"
             >
-              <span
-                className="platformicon platformicon-java"
+              <div
+                className="css-lc48x8-PlatformiconTile-getColorStyles-StyledPlatformiconTile ewlrg794"
               />
-            </li>
-          </PlatformiconTile>
-          <h5>
-             
-            Java
-             
-          </h5>
-        </span>
+            </StyledPlatformiconTile>
+            <h3>
+              Java
+            </h3>
+          </div>
+        </Component>
       </PlatformCard>
       <PlatformCard
-        className=""
+        data-test-id="platform-java-log4j"
         key="java-log4j"
+        onClear={[Function]}
         onClick={[Function]}
-        platform="java-log4j"
+        platform={
+          Object {
+            "id": "java-log4j",
+            "language": "java",
+            "link": "https://docs.getsentry.com/hosted/clients/java/modules/log4j/",
+            "name": "Log4j 1.x",
+            "type": "framework",
+          }
+        }
+        selected={false}
       >
-        <span
-          className="platform-card"
+        <Component
+          className="css-16kw2fg-PlatformCard ewlrg796"
+          data-test-id="platform-java-log4j"
+          onClear={[Function]}
           onClick={[Function]}
+          platform={
+            Object {
+              "id": "java-log4j",
+              "language": "java",
+              "link": "https://docs.getsentry.com/hosted/clients/java/modules/log4j/",
+              "name": "Log4j 1.x",
+              "type": "framework",
+            }
+          }
+          selected={false}
         >
-          <PlatformiconTile
-            className=""
+          <div
+            className="css-16kw2fg-PlatformCard ewlrg796"
+            data-test-id="platform-java-log4j"
             onClick={[Function]}
-            platform="java-log4j"
           >
-            <li
-              className="platform-tile list-unstyled java-log4j java "
+            <StyledPlatformiconTile
+              platform="java-log4j"
             >
-              <span
-                className="platformicon platformicon-java-log4j"
+              <div
+                className="css-lc48x8-PlatformiconTile-getColorStyles-StyledPlatformiconTile ewlrg794"
               />
-            </li>
-          </PlatformiconTile>
-          <h5>
-             
-            Log4j 1.x
-             
-          </h5>
-        </span>
+            </StyledPlatformiconTile>
+            <h3>
+              Log4j 1.x
+            </h3>
+          </div>
+        </Component>
       </PlatformCard>
       <PlatformCard
-        className=""
+        data-test-id="platform-java-log4j2"
         key="java-log4j2"
+        onClear={[Function]}
         onClick={[Function]}
-        platform="java-log4j2"
+        platform={
+          Object {
+            "id": "java-log4j2",
+            "language": "java",
+            "link": "https://docs.getsentry.com/hosted/clients/java/modules/log4j2/",
+            "name": "Log4j 2.x",
+            "type": "framework",
+          }
+        }
+        selected={false}
       >
-        <span
-          className="platform-card"
+        <Component
+          className="css-16kw2fg-PlatformCard ewlrg796"
+          data-test-id="platform-java-log4j2"
+          onClear={[Function]}
           onClick={[Function]}
+          platform={
+            Object {
+              "id": "java-log4j2",
+              "language": "java",
+              "link": "https://docs.getsentry.com/hosted/clients/java/modules/log4j2/",
+              "name": "Log4j 2.x",
+              "type": "framework",
+            }
+          }
+          selected={false}
         >
-          <PlatformiconTile
-            className=""
+          <div
+            className="css-16kw2fg-PlatformCard ewlrg796"
+            data-test-id="platform-java-log4j2"
             onClick={[Function]}
-            platform="java-log4j2"
           >
-            <li
-              className="platform-tile list-unstyled java-log4j2 java "
+            <StyledPlatformiconTile
+              platform="java-log4j2"
             >
-              <span
-                className="platformicon platformicon-java-log4j2"
+              <div
+                className="css-lc48x8-PlatformiconTile-getColorStyles-StyledPlatformiconTile ewlrg794"
               />
-            </li>
-          </PlatformiconTile>
-          <h5>
-             
-            Log4j 2.x
-             
-          </h5>
-        </span>
+            </StyledPlatformiconTile>
+            <h3>
+              Log4j 2.x
+            </h3>
+          </div>
+        </Component>
       </PlatformCard>
       <PlatformCard
-        className=""
+        data-test-id="platform-java-logback"
         key="java-logback"
+        onClear={[Function]}
         onClick={[Function]}
-        platform="java-logback"
+        platform={
+          Object {
+            "id": "java-logback",
+            "language": "java",
+            "link": "https://docs.getsentry.com/hosted/clients/java/modules/logback/",
+            "name": "Logback",
+            "type": "framework",
+          }
+        }
+        selected={false}
       >
-        <span
-          className="platform-card"
+        <Component
+          className="css-16kw2fg-PlatformCard ewlrg796"
+          data-test-id="platform-java-logback"
+          onClear={[Function]}
           onClick={[Function]}
+          platform={
+            Object {
+              "id": "java-logback",
+              "language": "java",
+              "link": "https://docs.getsentry.com/hosted/clients/java/modules/logback/",
+              "name": "Logback",
+              "type": "framework",
+            }
+          }
+          selected={false}
         >
-          <PlatformiconTile
-            className=""
+          <div
+            className="css-16kw2fg-PlatformCard ewlrg796"
+            data-test-id="platform-java-logback"
             onClick={[Function]}
-            platform="java-logback"
           >
-            <li
-              className="platform-tile list-unstyled java-logback java "
+            <StyledPlatformiconTile
+              platform="java-logback"
             >
-              <span
-                className="platformicon platformicon-java-logback"
+              <div
+                className="css-lc48x8-PlatformiconTile-getColorStyles-StyledPlatformiconTile ewlrg794"
               />
-            </li>
-          </PlatformiconTile>
-          <h5>
-             
-            Logback
-             
-          </h5>
-        </span>
+            </StyledPlatformiconTile>
+            <h3>
+              Logback
+            </h3>
+          </div>
+        </Component>
       </PlatformCard>
       <PlatformCard
-        className=""
+        data-test-id="platform-java-logging"
         key="java-logging"
+        onClear={[Function]}
         onClick={[Function]}
-        platform="java-logging"
+        platform={
+          Object {
+            "id": "java-logging",
+            "language": "java",
+            "link": "https://docs.getsentry.com/hosted/clients/java/modules/jul/",
+            "name": "java.util.logging",
+            "type": "framework",
+          }
+        }
+        selected={false}
       >
-        <span
-          className="platform-card"
+        <Component
+          className="css-16kw2fg-PlatformCard ewlrg796"
+          data-test-id="platform-java-logging"
+          onClear={[Function]}
           onClick={[Function]}
+          platform={
+            Object {
+              "id": "java-logging",
+              "language": "java",
+              "link": "https://docs.getsentry.com/hosted/clients/java/modules/jul/",
+              "name": "java.util.logging",
+              "type": "framework",
+            }
+          }
+          selected={false}
         >
-          <PlatformiconTile
-            className=""
+          <div
+            className="css-16kw2fg-PlatformCard ewlrg796"
+            data-test-id="platform-java-logging"
             onClick={[Function]}
-            platform="java-logging"
           >
-            <li
-              className="platform-tile list-unstyled java-logging java "
+            <StyledPlatformiconTile
+              platform="java-logging"
             >
-              <span
-                className="platformicon platformicon-java-logging"
+              <div
+                className="css-lc48x8-PlatformiconTile-getColorStyles-StyledPlatformiconTile ewlrg794"
               />
-            </li>
-          </PlatformiconTile>
-          <h5>
-             
-            java.util.logging
-             
-          </h5>
-        </span>
+            </StyledPlatformiconTile>
+            <h3>
+              java.util.logging
+            </h3>
+          </div>
+        </Component>
       </PlatformCard>
       <PlatformCard
-        className=""
+        data-test-id="platform-javascript-angular"
         key="javascript-angular"
+        onClear={[Function]}
         onClick={[Function]}
-        platform="javascript-angular"
+        platform={
+          Object {
+            "id": "javascript-angular",
+            "language": "javascript",
+            "link": "https://docs.getsentry.com/hosted/clients/javascript/integrations/angular/",
+            "name": "Angular",
+            "type": "framework",
+          }
+        }
+        selected={false}
       >
-        <span
-          className="platform-card"
+        <Component
+          className="css-16kw2fg-PlatformCard ewlrg796"
+          data-test-id="platform-javascript-angular"
+          onClear={[Function]}
           onClick={[Function]}
+          platform={
+            Object {
+              "id": "javascript-angular",
+              "language": "javascript",
+              "link": "https://docs.getsentry.com/hosted/clients/javascript/integrations/angular/",
+              "name": "Angular",
+              "type": "framework",
+            }
+          }
+          selected={false}
         >
-          <PlatformiconTile
-            className=""
+          <div
+            className="css-16kw2fg-PlatformCard ewlrg796"
+            data-test-id="platform-javascript-angular"
             onClick={[Function]}
-            platform="javascript-angular"
           >
-            <li
-              className="platform-tile list-unstyled javascript-angular javascript "
+            <StyledPlatformiconTile
+              platform="javascript-angular"
             >
-              <span
-                className="platformicon platformicon-javascript-angular"
+              <div
+                className="css-b15x81-PlatformiconTile-getColorStyles-StyledPlatformiconTile ewlrg794"
               />
-            </li>
-          </PlatformiconTile>
-          <h5>
-             
-            Angular
-             
-          </h5>
-        </span>
+            </StyledPlatformiconTile>
+            <h3>
+              Angular
+            </h3>
+          </div>
+        </Component>
       </PlatformCard>
       <PlatformCard
-        className=""
+        data-test-id="platform-javascript-angularjs"
         key="javascript-angularjs"
+        onClear={[Function]}
         onClick={[Function]}
-        platform="javascript-angularjs"
+        platform={
+          Object {
+            "id": "javascript-angularjs",
+            "language": "javascript",
+            "link": "https://docs.getsentry.com/hosted/clients/javascript/integrations/angularjs/",
+            "name": "AngularJS",
+            "type": "framework",
+          }
+        }
+        selected={false}
       >
-        <span
-          className="platform-card"
+        <Component
+          className="css-16kw2fg-PlatformCard ewlrg796"
+          data-test-id="platform-javascript-angularjs"
+          onClear={[Function]}
           onClick={[Function]}
+          platform={
+            Object {
+              "id": "javascript-angularjs",
+              "language": "javascript",
+              "link": "https://docs.getsentry.com/hosted/clients/javascript/integrations/angularjs/",
+              "name": "AngularJS",
+              "type": "framework",
+            }
+          }
+          selected={false}
         >
-          <PlatformiconTile
-            className=""
+          <div
+            className="css-16kw2fg-PlatformCard ewlrg796"
+            data-test-id="platform-javascript-angularjs"
             onClick={[Function]}
-            platform="javascript-angularjs"
           >
-            <li
-              className="platform-tile list-unstyled javascript-angularjs javascript "
+            <StyledPlatformiconTile
+              platform="javascript-angularjs"
             >
-              <span
-                className="platformicon platformicon-javascript-angularjs"
+              <div
+                className="css-6586kg-PlatformiconTile-getColorStyles-StyledPlatformiconTile ewlrg794"
               />
-            </li>
-          </PlatformiconTile>
-          <h5>
-             
-            AngularJS
-             
-          </h5>
-        </span>
+            </StyledPlatformiconTile>
+            <h3>
+              AngularJS
+            </h3>
+          </div>
+        </Component>
       </PlatformCard>
       <PlatformCard
-        className=""
+        data-test-id="platform-javascript-backbone"
         key="javascript-backbone"
+        onClear={[Function]}
         onClick={[Function]}
-        platform="javascript-backbone"
+        platform={
+          Object {
+            "id": "javascript-backbone",
+            "language": "javascript",
+            "link": "https://docs.getsentry.com/hosted/clients/javascript/integrations/backbone/",
+            "name": "Backbone",
+            "type": "framework",
+          }
+        }
+        selected={false}
       >
-        <span
-          className="platform-card"
+        <Component
+          className="css-16kw2fg-PlatformCard ewlrg796"
+          data-test-id="platform-javascript-backbone"
+          onClear={[Function]}
           onClick={[Function]}
+          platform={
+            Object {
+              "id": "javascript-backbone",
+              "language": "javascript",
+              "link": "https://docs.getsentry.com/hosted/clients/javascript/integrations/backbone/",
+              "name": "Backbone",
+              "type": "framework",
+            }
+          }
+          selected={false}
         >
-          <PlatformiconTile
-            className=""
+          <div
+            className="css-16kw2fg-PlatformCard ewlrg796"
+            data-test-id="platform-javascript-backbone"
             onClick={[Function]}
-            platform="javascript-backbone"
           >
-            <li
-              className="platform-tile list-unstyled javascript-backbone javascript "
+            <StyledPlatformiconTile
+              platform="javascript-backbone"
             >
-              <span
-                className="platformicon platformicon-javascript-backbone"
+              <div
+                className="css-105qz5e-PlatformiconTile-getColorStyles-StyledPlatformiconTile ewlrg794"
               />
-            </li>
-          </PlatformiconTile>
-          <h5>
-             
-            Backbone
-             
-          </h5>
-        </span>
+            </StyledPlatformiconTile>
+            <h3>
+              Backbone
+            </h3>
+          </div>
+        </Component>
       </PlatformCard>
       <PlatformCard
-        className=""
+        data-test-id="platform-javascript-ember"
         key="javascript-ember"
+        onClear={[Function]}
         onClick={[Function]}
-        platform="javascript-ember"
+        platform={
+          Object {
+            "id": "javascript-ember",
+            "language": "javascript",
+            "link": "https://docs.getsentry.com/hosted/clients/javascript/integrations/ember/",
+            "name": "Ember",
+            "type": "framework",
+          }
+        }
+        selected={false}
       >
-        <span
-          className="platform-card"
+        <Component
+          className="css-16kw2fg-PlatformCard ewlrg796"
+          data-test-id="platform-javascript-ember"
+          onClear={[Function]}
           onClick={[Function]}
+          platform={
+            Object {
+              "id": "javascript-ember",
+              "language": "javascript",
+              "link": "https://docs.getsentry.com/hosted/clients/javascript/integrations/ember/",
+              "name": "Ember",
+              "type": "framework",
+            }
+          }
+          selected={false}
         >
-          <PlatformiconTile
-            className=""
+          <div
+            className="css-16kw2fg-PlatformCard ewlrg796"
+            data-test-id="platform-javascript-ember"
             onClick={[Function]}
-            platform="javascript-ember"
           >
-            <li
-              className="platform-tile list-unstyled javascript-ember javascript "
+            <StyledPlatformiconTile
+              platform="javascript-ember"
             >
-              <span
-                className="platformicon platformicon-javascript-ember"
+              <div
+                className="css-1bbhz2-PlatformiconTile-getColorStyles-StyledPlatformiconTile ewlrg794"
               />
-            </li>
-          </PlatformiconTile>
-          <h5>
-             
-            Ember
-             
-          </h5>
-        </span>
+            </StyledPlatformiconTile>
+            <h3>
+              Ember
+            </h3>
+          </div>
+        </Component>
       </PlatformCard>
       <PlatformCard
-        className=""
+        data-test-id="platform-javascript"
         key="javascript"
+        onClear={[Function]}
         onClick={[Function]}
-        platform="javascript"
+        platform={
+          Object {
+            "id": "javascript",
+            "language": "javascript",
+            "link": "https://docs.getsentry.com/hosted/clients/javascript/install/",
+            "name": "JavaScript",
+            "type": "language",
+          }
+        }
+        selected={false}
       >
-        <span
-          className="platform-card"
+        <Component
+          className="css-16kw2fg-PlatformCard ewlrg796"
+          data-test-id="platform-javascript"
+          onClear={[Function]}
           onClick={[Function]}
+          platform={
+            Object {
+              "id": "javascript",
+              "language": "javascript",
+              "link": "https://docs.getsentry.com/hosted/clients/javascript/install/",
+              "name": "JavaScript",
+              "type": "language",
+            }
+          }
+          selected={false}
         >
-          <PlatformiconTile
-            className=""
+          <div
+            className="css-16kw2fg-PlatformCard ewlrg796"
+            data-test-id="platform-javascript"
             onClick={[Function]}
-            platform="javascript"
           >
-            <li
-              className="platform-tile list-unstyled javascript javascript "
+            <StyledPlatformiconTile
+              platform="javascript"
             >
-              <span
-                className="platformicon platformicon-javascript"
+              <div
+                className="css-105qz5e-PlatformiconTile-getColorStyles-StyledPlatformiconTile ewlrg794"
               />
-            </li>
-          </PlatformiconTile>
-          <h5>
-             
-            JavaScript
-             
-          </h5>
-        </span>
+            </StyledPlatformiconTile>
+            <h3>
+              JavaScript
+            </h3>
+          </div>
+        </Component>
       </PlatformCard>
       <PlatformCard
-        className=""
+        data-test-id="platform-javascript-react"
         key="javascript-react"
+        onClear={[Function]}
         onClick={[Function]}
-        platform="javascript-react"
+        platform={
+          Object {
+            "id": "javascript-react",
+            "language": "javascript",
+            "link": "https://docs.getsentry.com/hosted/clients/javascript/integrations/react/",
+            "name": "React",
+            "type": "framework",
+          }
+        }
+        selected={false}
       >
-        <span
-          className="platform-card"
+        <Component
+          className="css-16kw2fg-PlatformCard ewlrg796"
+          data-test-id="platform-javascript-react"
+          onClear={[Function]}
           onClick={[Function]}
+          platform={
+            Object {
+              "id": "javascript-react",
+              "language": "javascript",
+              "link": "https://docs.getsentry.com/hosted/clients/javascript/integrations/react/",
+              "name": "React",
+              "type": "framework",
+            }
+          }
+          selected={false}
         >
-          <PlatformiconTile
-            className=""
+          <div
+            className="css-16kw2fg-PlatformCard ewlrg796"
+            data-test-id="platform-javascript-react"
             onClick={[Function]}
-            platform="javascript-react"
           >
-            <li
-              className="platform-tile list-unstyled javascript-react javascript "
+            <StyledPlatformiconTile
+              platform="javascript-react"
             >
-              <span
-                className="platformicon platformicon-javascript-react"
+              <div
+                className="css-fosd7h-PlatformiconTile-getColorStyles-StyledPlatformiconTile ewlrg794"
               />
-            </li>
-          </PlatformiconTile>
-          <h5>
-             
-            React
-             
-          </h5>
-        </span>
+            </StyledPlatformiconTile>
+            <h3>
+              React
+            </h3>
+          </div>
+        </Component>
       </PlatformCard>
       <PlatformCard
-        className=""
+        data-test-id="platform-javascript-vue"
         key="javascript-vue"
+        onClear={[Function]}
         onClick={[Function]}
-        platform="javascript-vue"
+        platform={
+          Object {
+            "id": "javascript-vue",
+            "language": "javascript",
+            "link": "https://docs.getsentry.com/hosted/clients/javascript/integrations/vue/",
+            "name": "Vue",
+            "type": "framework",
+          }
+        }
+        selected={false}
       >
-        <span
-          className="platform-card"
+        <Component
+          className="css-16kw2fg-PlatformCard ewlrg796"
+          data-test-id="platform-javascript-vue"
+          onClear={[Function]}
           onClick={[Function]}
+          platform={
+            Object {
+              "id": "javascript-vue",
+              "language": "javascript",
+              "link": "https://docs.getsentry.com/hosted/clients/javascript/integrations/vue/",
+              "name": "Vue",
+              "type": "framework",
+            }
+          }
+          selected={false}
         >
-          <PlatformiconTile
-            className=""
+          <div
+            className="css-16kw2fg-PlatformCard ewlrg796"
+            data-test-id="platform-javascript-vue"
             onClick={[Function]}
-            platform="javascript-vue"
           >
-            <li
-              className="platform-tile list-unstyled javascript-vue javascript "
+            <StyledPlatformiconTile
+              platform="javascript-vue"
             >
-              <span
-                className="platformicon platformicon-javascript-vue"
+              <div
+                className="css-105qz5e-PlatformiconTile-getColorStyles-StyledPlatformiconTile ewlrg794"
               />
-            </li>
-          </PlatformiconTile>
-          <h5>
-             
-            Vue
-             
-          </h5>
-        </span>
+            </StyledPlatformiconTile>
+            <h3>
+              Vue
+            </h3>
+          </div>
+        </Component>
       </PlatformCard>
       <PlatformCard
-        className=""
+        data-test-id="platform-minidump"
         key="minidump"
+        onClear={[Function]}
         onClick={[Function]}
-        platform="minidump"
+        platform={
+          Object {
+            "id": "minidump",
+            "language": "minidump",
+            "link": "https://docs.getsentry.com/hosted/clients/minidump/",
+            "name": "Minidump",
+            "type": "language",
+          }
+        }
+        selected={false}
       >
-        <span
-          className="platform-card"
+        <Component
+          className="css-16kw2fg-PlatformCard ewlrg796"
+          data-test-id="platform-minidump"
+          onClear={[Function]}
           onClick={[Function]}
+          platform={
+            Object {
+              "id": "minidump",
+              "language": "minidump",
+              "link": "https://docs.getsentry.com/hosted/clients/minidump/",
+              "name": "Minidump",
+              "type": "language",
+            }
+          }
+          selected={false}
         >
-          <PlatformiconTile
-            className=""
+          <div
+            className="css-16kw2fg-PlatformCard ewlrg796"
+            data-test-id="platform-minidump"
             onClick={[Function]}
-            platform="minidump"
           >
-            <li
-              className="platform-tile list-unstyled minidump minidump "
+            <StyledPlatformiconTile
+              platform="minidump"
             >
-              <span
-                className="platformicon platformicon-minidump"
+              <div
+                className="css-yhb6wb-PlatformiconTile-getColorStyles-StyledPlatformiconTile ewlrg794"
               />
-            </li>
-          </PlatformiconTile>
-          <h5>
-             
-            Minidump
-             
-          </h5>
-        </span>
+            </StyledPlatformiconTile>
+            <h3>
+              Minidump
+            </h3>
+          </div>
+        </Component>
       </PlatformCard>
       <PlatformCard
-        className=""
+        data-test-id="platform-node-connect"
         key="node-connect"
+        onClear={[Function]}
         onClick={[Function]}
-        platform="node-connect"
+        platform={
+          Object {
+            "id": "node-connect",
+            "language": "node",
+            "link": "https://docs.getsentry.com/hosted/clients/node/integrations/connect/",
+            "name": "Connect",
+            "type": "framework",
+          }
+        }
+        selected={false}
       >
-        <span
-          className="platform-card"
+        <Component
+          className="css-16kw2fg-PlatformCard ewlrg796"
+          data-test-id="platform-node-connect"
+          onClear={[Function]}
           onClick={[Function]}
+          platform={
+            Object {
+              "id": "node-connect",
+              "language": "node",
+              "link": "https://docs.getsentry.com/hosted/clients/node/integrations/connect/",
+              "name": "Connect",
+              "type": "framework",
+            }
+          }
+          selected={false}
         >
-          <PlatformiconTile
-            className=""
+          <div
+            className="css-16kw2fg-PlatformCard ewlrg796"
+            data-test-id="platform-node-connect"
             onClick={[Function]}
-            platform="node-connect"
           >
-            <li
-              className="platform-tile list-unstyled node-connect node "
+            <StyledPlatformiconTile
+              platform="node-connect"
             >
-              <span
-                className="platformicon platformicon-node-connect"
+              <div
+                className="css-1wbn021-PlatformiconTile-getColorStyles-StyledPlatformiconTile ewlrg794"
               />
-            </li>
-          </PlatformiconTile>
-          <h5>
-             
-            Connect
-             
-          </h5>
-        </span>
+            </StyledPlatformiconTile>
+            <h3>
+              Connect
+            </h3>
+          </div>
+        </Component>
       </PlatformCard>
       <PlatformCard
-        className=""
+        data-test-id="platform-node-express"
         key="node-express"
+        onClear={[Function]}
         onClick={[Function]}
-        platform="node-express"
+        platform={
+          Object {
+            "id": "node-express",
+            "language": "node",
+            "link": "https://docs.getsentry.com/hosted/clients/node/integrations/express/",
+            "name": "Express",
+            "type": "framework",
+          }
+        }
+        selected={false}
       >
-        <span
-          className="platform-card"
+        <Component
+          className="css-16kw2fg-PlatformCard ewlrg796"
+          data-test-id="platform-node-express"
+          onClear={[Function]}
           onClick={[Function]}
+          platform={
+            Object {
+              "id": "node-express",
+              "language": "node",
+              "link": "https://docs.getsentry.com/hosted/clients/node/integrations/express/",
+              "name": "Express",
+              "type": "framework",
+            }
+          }
+          selected={false}
         >
-          <PlatformiconTile
-            className=""
+          <div
+            className="css-16kw2fg-PlatformCard ewlrg796"
+            data-test-id="platform-node-express"
             onClick={[Function]}
-            platform="node-express"
           >
-            <li
-              className="platform-tile list-unstyled node-express node "
+            <StyledPlatformiconTile
+              platform="node-express"
             >
-              <span
-                className="platformicon platformicon-node-express"
+              <div
+                className="css-1wbn021-PlatformiconTile-getColorStyles-StyledPlatformiconTile ewlrg794"
               />
-            </li>
-          </PlatformiconTile>
-          <h5>
-             
-            Express
-             
-          </h5>
-        </span>
+            </StyledPlatformiconTile>
+            <h3>
+              Express
+            </h3>
+          </div>
+        </Component>
       </PlatformCard>
       <PlatformCard
-        className=""
+        data-test-id="platform-node-koa"
         key="node-koa"
+        onClear={[Function]}
         onClick={[Function]}
-        platform="node-koa"
+        platform={
+          Object {
+            "id": "node-koa",
+            "language": "node",
+            "link": "https://docs.getsentry.com/hosted/clients/node/integrations/koa/",
+            "name": "Koa",
+            "type": "framework",
+          }
+        }
+        selected={false}
       >
-        <span
-          className="platform-card"
+        <Component
+          className="css-16kw2fg-PlatformCard ewlrg796"
+          data-test-id="platform-node-koa"
+          onClear={[Function]}
           onClick={[Function]}
+          platform={
+            Object {
+              "id": "node-koa",
+              "language": "node",
+              "link": "https://docs.getsentry.com/hosted/clients/node/integrations/koa/",
+              "name": "Koa",
+              "type": "framework",
+            }
+          }
+          selected={false}
         >
-          <PlatformiconTile
-            className=""
+          <div
+            className="css-16kw2fg-PlatformCard ewlrg796"
+            data-test-id="platform-node-koa"
             onClick={[Function]}
-            platform="node-koa"
           >
-            <li
-              className="platform-tile list-unstyled node-koa node "
+            <StyledPlatformiconTile
+              platform="node-koa"
             >
-              <span
-                className="platformicon platformicon-node-koa"
+              <div
+                className="css-1wbn021-PlatformiconTile-getColorStyles-StyledPlatformiconTile ewlrg794"
               />
-            </li>
-          </PlatformiconTile>
-          <h5>
-             
-            Koa
-             
-          </h5>
-        </span>
+            </StyledPlatformiconTile>
+            <h3>
+              Koa
+            </h3>
+          </div>
+        </Component>
       </PlatformCard>
       <PlatformCard
-        className=""
+        data-test-id="platform-node"
         key="node"
+        onClear={[Function]}
         onClick={[Function]}
-        platform="node"
+        platform={
+          Object {
+            "id": "node",
+            "language": "node",
+            "link": "https://docs.getsentry.com/hosted/clients/node/",
+            "name": "Node.js",
+            "type": "language",
+          }
+        }
+        selected={false}
       >
-        <span
-          className="platform-card"
+        <Component
+          className="css-16kw2fg-PlatformCard ewlrg796"
+          data-test-id="platform-node"
+          onClear={[Function]}
           onClick={[Function]}
+          platform={
+            Object {
+              "id": "node",
+              "language": "node",
+              "link": "https://docs.getsentry.com/hosted/clients/node/",
+              "name": "Node.js",
+              "type": "language",
+            }
+          }
+          selected={false}
         >
-          <PlatformiconTile
-            className=""
+          <div
+            className="css-16kw2fg-PlatformCard ewlrg796"
+            data-test-id="platform-node"
             onClick={[Function]}
-            platform="node"
           >
-            <li
-              className="platform-tile list-unstyled node node "
+            <StyledPlatformiconTile
+              platform="node"
             >
-              <span
-                className="platformicon platformicon-node"
+              <div
+                className="css-1wbn021-PlatformiconTile-getColorStyles-StyledPlatformiconTile ewlrg794"
               />
-            </li>
-          </PlatformiconTile>
-          <h5>
-             
-            Node.js
-             
-          </h5>
-        </span>
+            </StyledPlatformiconTile>
+            <h3>
+              Node.js
+            </h3>
+          </div>
+        </Component>
       </PlatformCard>
       <PlatformCard
-        className=""
+        data-test-id="platform-objc"
         key="objc"
+        onClear={[Function]}
         onClick={[Function]}
-        platform="objc"
+        platform={
+          Object {
+            "id": "objc",
+            "language": "objc",
+            "link": "https://docs.getsentry.com/hosted/clients/cocoa/",
+            "name": "Objective-C",
+            "type": "language",
+          }
+        }
+        selected={false}
       >
-        <span
-          className="platform-card"
+        <Component
+          className="css-16kw2fg-PlatformCard ewlrg796"
+          data-test-id="platform-objc"
+          onClear={[Function]}
           onClick={[Function]}
+          platform={
+            Object {
+              "id": "objc",
+              "language": "objc",
+              "link": "https://docs.getsentry.com/hosted/clients/cocoa/",
+              "name": "Objective-C",
+              "type": "language",
+            }
+          }
+          selected={false}
         >
-          <PlatformiconTile
-            className=""
+          <div
+            className="css-16kw2fg-PlatformCard ewlrg796"
+            data-test-id="platform-objc"
             onClick={[Function]}
-            platform="objc"
           >
-            <li
-              className="platform-tile list-unstyled objc objc "
+            <StyledPlatformiconTile
+              platform="objc"
             >
-              <span
-                className="platformicon platformicon-objc"
+              <div
+                className="css-1e8vskw-PlatformiconTile-getColorStyles-StyledPlatformiconTile ewlrg794"
               />
-            </li>
-          </PlatformiconTile>
-          <h5>
-             
-            Objective-C
-             
-          </h5>
-        </span>
+            </StyledPlatformiconTile>
+            <h3>
+              Objective-C
+            </h3>
+          </div>
+        </Component>
       </PlatformCard>
       <PlatformCard
-        className=""
+        data-test-id="platform-php-laravel"
         key="php-laravel"
+        onClear={[Function]}
         onClick={[Function]}
-        platform="php-laravel"
+        platform={
+          Object {
+            "id": "php-laravel",
+            "language": "php",
+            "link": "https://docs.getsentry.com/hosted/clients/php/integrations/laravel/",
+            "name": "Laravel",
+            "type": "framework",
+          }
+        }
+        selected={false}
       >
-        <span
-          className="platform-card"
+        <Component
+          className="css-16kw2fg-PlatformCard ewlrg796"
+          data-test-id="platform-php-laravel"
+          onClear={[Function]}
           onClick={[Function]}
+          platform={
+            Object {
+              "id": "php-laravel",
+              "language": "php",
+              "link": "https://docs.getsentry.com/hosted/clients/php/integrations/laravel/",
+              "name": "Laravel",
+              "type": "framework",
+            }
+          }
+          selected={false}
         >
-          <PlatformiconTile
-            className=""
+          <div
+            className="css-16kw2fg-PlatformCard ewlrg796"
+            data-test-id="platform-php-laravel"
             onClick={[Function]}
-            platform="php-laravel"
           >
-            <li
-              className="platform-tile list-unstyled php-laravel php "
+            <StyledPlatformiconTile
+              platform="php-laravel"
             >
-              <span
-                className="platformicon platformicon-php-laravel"
+              <div
+                className="css-jzifau-PlatformiconTile-getColorStyles-StyledPlatformiconTile ewlrg794"
               />
-            </li>
-          </PlatformiconTile>
-          <h5>
-             
-            Laravel
-             
-          </h5>
-        </span>
+            </StyledPlatformiconTile>
+            <h3>
+              Laravel
+            </h3>
+          </div>
+        </Component>
       </PlatformCard>
       <PlatformCard
-        className=""
+        data-test-id="platform-php-monolog"
         key="php-monolog"
+        onClear={[Function]}
         onClick={[Function]}
-        platform="php-monolog"
+        platform={
+          Object {
+            "id": "php-monolog",
+            "language": "php",
+            "link": "https://docs.getsentry.com/hosted/clients/php/integrations/monolog/",
+            "name": "Monolog",
+            "type": "framework",
+          }
+        }
+        selected={false}
       >
-        <span
-          className="platform-card"
+        <Component
+          className="css-16kw2fg-PlatformCard ewlrg796"
+          data-test-id="platform-php-monolog"
+          onClear={[Function]}
           onClick={[Function]}
+          platform={
+            Object {
+              "id": "php-monolog",
+              "language": "php",
+              "link": "https://docs.getsentry.com/hosted/clients/php/integrations/monolog/",
+              "name": "Monolog",
+              "type": "framework",
+            }
+          }
+          selected={false}
         >
-          <PlatformiconTile
-            className=""
+          <div
+            className="css-16kw2fg-PlatformCard ewlrg796"
+            data-test-id="platform-php-monolog"
             onClick={[Function]}
-            platform="php-monolog"
           >
-            <li
-              className="platform-tile list-unstyled php-monolog php "
+            <StyledPlatformiconTile
+              platform="php-monolog"
             >
-              <span
-                className="platformicon platformicon-php-monolog"
+              <div
+                className="css-f6lc5m-PlatformiconTile-getColorStyles-StyledPlatformiconTile ewlrg794"
               />
-            </li>
-          </PlatformiconTile>
-          <h5>
-             
-            Monolog
-             
-          </h5>
-        </span>
+            </StyledPlatformiconTile>
+            <h3>
+              Monolog
+            </h3>
+          </div>
+        </Component>
       </PlatformCard>
       <PlatformCard
-        className=""
+        data-test-id="platform-php"
         key="php"
+        onClear={[Function]}
         onClick={[Function]}
-        platform="php"
+        platform={
+          Object {
+            "id": "php",
+            "language": "php",
+            "link": "https://docs.getsentry.com/hosted/clients/php/",
+            "name": "PHP",
+            "type": "language",
+          }
+        }
+        selected={false}
       >
-        <span
-          className="platform-card"
+        <Component
+          className="css-16kw2fg-PlatformCard ewlrg796"
+          data-test-id="platform-php"
+          onClear={[Function]}
           onClick={[Function]}
+          platform={
+            Object {
+              "id": "php",
+              "language": "php",
+              "link": "https://docs.getsentry.com/hosted/clients/php/",
+              "name": "PHP",
+              "type": "language",
+            }
+          }
+          selected={false}
         >
-          <PlatformiconTile
-            className=""
+          <div
+            className="css-16kw2fg-PlatformCard ewlrg796"
+            data-test-id="platform-php"
             onClick={[Function]}
-            platform="php"
           >
-            <li
-              className="platform-tile list-unstyled php php "
+            <StyledPlatformiconTile
+              platform="php"
             >
-              <span
-                className="platformicon platformicon-php"
+              <div
+                className="css-f6lc5m-PlatformiconTile-getColorStyles-StyledPlatformiconTile ewlrg794"
               />
-            </li>
-          </PlatformiconTile>
-          <h5>
-             
-            PHP
-             
-          </h5>
-        </span>
+            </StyledPlatformiconTile>
+            <h3>
+              PHP
+            </h3>
+          </div>
+        </Component>
       </PlatformCard>
       <PlatformCard
-        className=""
+        data-test-id="platform-php-symfony2"
         key="php-symfony2"
+        onClear={[Function]}
         onClick={[Function]}
-        platform="php-symfony2"
+        platform={
+          Object {
+            "id": "php-symfony2",
+            "language": "php",
+            "link": "https://docs.getsentry.com/hosted/clients/php/integrations/symfony2/",
+            "name": "Symfony2",
+            "type": "framework",
+          }
+        }
+        selected={false}
       >
-        <span
-          className="platform-card"
+        <Component
+          className="css-16kw2fg-PlatformCard ewlrg796"
+          data-test-id="platform-php-symfony2"
+          onClear={[Function]}
           onClick={[Function]}
+          platform={
+            Object {
+              "id": "php-symfony2",
+              "language": "php",
+              "link": "https://docs.getsentry.com/hosted/clients/php/integrations/symfony2/",
+              "name": "Symfony2",
+              "type": "framework",
+            }
+          }
+          selected={false}
         >
-          <PlatformiconTile
-            className=""
+          <div
+            className="css-16kw2fg-PlatformCard ewlrg796"
+            data-test-id="platform-php-symfony2"
             onClick={[Function]}
-            platform="php-symfony2"
           >
-            <li
-              className="platform-tile list-unstyled php-symfony2 php "
+            <StyledPlatformiconTile
+              platform="php-symfony2"
             >
-              <span
-                className="platformicon platformicon-php-symfony2"
+              <div
+                className="css-f6lc5m-PlatformiconTile-getColorStyles-StyledPlatformiconTile ewlrg794"
               />
-            </li>
-          </PlatformiconTile>
-          <h5>
-             
-            Symfony2
-             
-          </h5>
-        </span>
+            </StyledPlatformiconTile>
+            <h3>
+              Symfony2
+            </h3>
+          </div>
+        </Component>
       </PlatformCard>
       <PlatformCard
-        className=""
+        data-test-id="platform-python-bottle"
         key="python-bottle"
+        onClear={[Function]}
         onClick={[Function]}
-        platform="python-bottle"
+        platform={
+          Object {
+            "id": "python-bottle",
+            "language": "python",
+            "link": "https://docs.getsentry.com/hosted/clients/python/integrations/bottle/",
+            "name": "Bottle",
+            "type": "framework",
+          }
+        }
+        selected={false}
       >
-        <span
-          className="platform-card"
+        <Component
+          className="css-16kw2fg-PlatformCard ewlrg796"
+          data-test-id="platform-python-bottle"
+          onClear={[Function]}
           onClick={[Function]}
+          platform={
+            Object {
+              "id": "python-bottle",
+              "language": "python",
+              "link": "https://docs.getsentry.com/hosted/clients/python/integrations/bottle/",
+              "name": "Bottle",
+              "type": "framework",
+            }
+          }
+          selected={false}
         >
-          <PlatformiconTile
-            className=""
+          <div
+            className="css-16kw2fg-PlatformCard ewlrg796"
+            data-test-id="platform-python-bottle"
             onClick={[Function]}
-            platform="python-bottle"
           >
-            <li
-              className="platform-tile list-unstyled python-bottle python "
+            <StyledPlatformiconTile
+              platform="python-bottle"
             >
-              <span
-                className="platformicon platformicon-python-bottle"
+              <div
+                className="css-jprxon-PlatformiconTile-getColorStyles-StyledPlatformiconTile ewlrg794"
               />
-            </li>
-          </PlatformiconTile>
-          <h5>
-             
-            Bottle
-             
-          </h5>
-        </span>
+            </StyledPlatformiconTile>
+            <h3>
+              Bottle
+            </h3>
+          </div>
+        </Component>
       </PlatformCard>
       <PlatformCard
-        className=""
+        data-test-id="platform-python-celery"
         key="python-celery"
+        onClear={[Function]}
         onClick={[Function]}
-        platform="python-celery"
+        platform={
+          Object {
+            "id": "python-celery",
+            "language": "python",
+            "link": "https://docs.getsentry.com/hosted/clients/python/integrations/celery/",
+            "name": "Celery",
+            "type": "library",
+          }
+        }
+        selected={false}
       >
-        <span
-          className="platform-card"
+        <Component
+          className="css-16kw2fg-PlatformCard ewlrg796"
+          data-test-id="platform-python-celery"
+          onClear={[Function]}
           onClick={[Function]}
+          platform={
+            Object {
+              "id": "python-celery",
+              "language": "python",
+              "link": "https://docs.getsentry.com/hosted/clients/python/integrations/celery/",
+              "name": "Celery",
+              "type": "library",
+            }
+          }
+          selected={false}
         >
-          <PlatformiconTile
-            className=""
+          <div
+            className="css-16kw2fg-PlatformCard ewlrg796"
+            data-test-id="platform-python-celery"
             onClick={[Function]}
-            platform="python-celery"
           >
-            <li
-              className="platform-tile list-unstyled python-celery python "
+            <StyledPlatformiconTile
+              platform="python-celery"
             >
-              <span
-                className="platformicon platformicon-python-celery"
+              <div
+                className="css-1vvuenp-PlatformiconTile-getColorStyles-StyledPlatformiconTile ewlrg794"
               />
-            </li>
-          </PlatformiconTile>
-          <h5>
-             
-            Celery
-             
-          </h5>
-        </span>
+            </StyledPlatformiconTile>
+            <h3>
+              Celery
+            </h3>
+          </div>
+        </Component>
       </PlatformCard>
       <PlatformCard
-        className=""
+        data-test-id="platform-python-django"
         key="python-django"
+        onClear={[Function]}
         onClick={[Function]}
-        platform="python-django"
+        platform={
+          Object {
+            "id": "python-django",
+            "language": "python",
+            "link": "https://docs.getsentry.com/hosted/clients/python/integrations/django/",
+            "name": "Django",
+            "type": "framework",
+          }
+        }
+        selected={false}
       >
-        <span
-          className="platform-card"
+        <Component
+          className="css-16kw2fg-PlatformCard ewlrg796"
+          data-test-id="platform-python-django"
+          onClear={[Function]}
           onClick={[Function]}
+          platform={
+            Object {
+              "id": "python-django",
+              "language": "python",
+              "link": "https://docs.getsentry.com/hosted/clients/python/integrations/django/",
+              "name": "Django",
+              "type": "framework",
+            }
+          }
+          selected={false}
         >
-          <PlatformiconTile
-            className=""
+          <div
+            className="css-16kw2fg-PlatformCard ewlrg796"
+            data-test-id="platform-python-django"
             onClick={[Function]}
-            platform="python-django"
           >
-            <li
-              className="platform-tile list-unstyled python-django python "
+            <StyledPlatformiconTile
+              platform="python-django"
             >
-              <span
-                className="platformicon platformicon-python-django"
+              <div
+                className="css-13uplim-PlatformiconTile-getColorStyles-StyledPlatformiconTile ewlrg794"
               />
-            </li>
-          </PlatformiconTile>
-          <h5>
-             
-            Django
-             
-          </h5>
-        </span>
+            </StyledPlatformiconTile>
+            <h3>
+              Django
+            </h3>
+          </div>
+        </Component>
       </PlatformCard>
       <PlatformCard
-        className=""
+        data-test-id="platform-python-flask"
         key="python-flask"
+        onClear={[Function]}
         onClick={[Function]}
-        platform="python-flask"
+        platform={
+          Object {
+            "id": "python-flask",
+            "language": "python",
+            "link": "https://docs.getsentry.com/hosted/clients/python/integrations/flask/",
+            "name": "Flask",
+            "type": "framework",
+          }
+        }
+        selected={false}
       >
-        <span
-          className="platform-card"
+        <Component
+          className="css-16kw2fg-PlatformCard ewlrg796"
+          data-test-id="platform-python-flask"
+          onClear={[Function]}
           onClick={[Function]}
+          platform={
+            Object {
+              "id": "python-flask",
+              "language": "python",
+              "link": "https://docs.getsentry.com/hosted/clients/python/integrations/flask/",
+              "name": "Flask",
+              "type": "framework",
+            }
+          }
+          selected={false}
         >
-          <PlatformiconTile
-            className=""
+          <div
+            className="css-16kw2fg-PlatformCard ewlrg796"
+            data-test-id="platform-python-flask"
             onClick={[Function]}
-            platform="python-flask"
           >
-            <li
-              className="platform-tile list-unstyled python-flask python "
+            <StyledPlatformiconTile
+              platform="python-flask"
             >
-              <span
-                className="platformicon platformicon-python-flask"
+              <div
+                className="css-1lbt1li-PlatformiconTile-getColorStyles-StyledPlatformiconTile ewlrg794"
               />
-            </li>
-          </PlatformiconTile>
-          <h5>
-             
-            Flask
-             
-          </h5>
-        </span>
+            </StyledPlatformiconTile>
+            <h3>
+              Flask
+            </h3>
+          </div>
+        </Component>
       </PlatformCard>
       <PlatformCard
-        className=""
+        data-test-id="platform-python-pylons"
         key="python-pylons"
+        onClear={[Function]}
         onClick={[Function]}
-        platform="python-pylons"
+        platform={
+          Object {
+            "id": "python-pylons",
+            "language": "python",
+            "link": "https://docs.getsentry.com/hosted/clients/python/integrations/pylons/",
+            "name": "Pylons",
+            "type": "framework",
+          }
+        }
+        selected={false}
       >
-        <span
-          className="platform-card"
+        <Component
+          className="css-16kw2fg-PlatformCard ewlrg796"
+          data-test-id="platform-python-pylons"
+          onClear={[Function]}
           onClick={[Function]}
+          platform={
+            Object {
+              "id": "python-pylons",
+              "language": "python",
+              "link": "https://docs.getsentry.com/hosted/clients/python/integrations/pylons/",
+              "name": "Pylons",
+              "type": "framework",
+            }
+          }
+          selected={false}
         >
-          <PlatformiconTile
-            className=""
+          <div
+            className="css-16kw2fg-PlatformCard ewlrg796"
+            data-test-id="platform-python-pylons"
             onClick={[Function]}
-            platform="python-pylons"
           >
-            <li
-              className="platform-tile list-unstyled python-pylons python "
+            <StyledPlatformiconTile
+              platform="python-pylons"
             >
-              <span
-                className="platformicon platformicon-python-pylons"
+              <div
+                className="css-1vvuenp-PlatformiconTile-getColorStyles-StyledPlatformiconTile ewlrg794"
               />
-            </li>
-          </PlatformiconTile>
-          <h5>
-             
-            Pylons
-             
-          </h5>
-        </span>
+            </StyledPlatformiconTile>
+            <h3>
+              Pylons
+            </h3>
+          </div>
+        </Component>
       </PlatformCard>
       <PlatformCard
-        className=""
+        data-test-id="platform-python-pyramid"
         key="python-pyramid"
+        onClear={[Function]}
         onClick={[Function]}
-        platform="python-pyramid"
+        platform={
+          Object {
+            "id": "python-pyramid",
+            "language": "python",
+            "link": "https://docs.getsentry.com/hosted/clients/python/integrations/pyramid/",
+            "name": "Pyramid",
+            "type": "framework",
+          }
+        }
+        selected={false}
       >
-        <span
-          className="platform-card"
+        <Component
+          className="css-16kw2fg-PlatformCard ewlrg796"
+          data-test-id="platform-python-pyramid"
+          onClear={[Function]}
           onClick={[Function]}
+          platform={
+            Object {
+              "id": "python-pyramid",
+              "language": "python",
+              "link": "https://docs.getsentry.com/hosted/clients/python/integrations/pyramid/",
+              "name": "Pyramid",
+              "type": "framework",
+            }
+          }
+          selected={false}
         >
-          <PlatformiconTile
-            className=""
+          <div
+            className="css-16kw2fg-PlatformCard ewlrg796"
+            data-test-id="platform-python-pyramid"
             onClick={[Function]}
-            platform="python-pyramid"
           >
-            <li
-              className="platform-tile list-unstyled python-pyramid python "
+            <StyledPlatformiconTile
+              platform="python-pyramid"
             >
-              <span
-                className="platformicon platformicon-python-pyramid"
+              <div
+                className="css-1vvuenp-PlatformiconTile-getColorStyles-StyledPlatformiconTile ewlrg794"
               />
-            </li>
-          </PlatformiconTile>
-          <h5>
-             
-            Pyramid
-             
-          </h5>
-        </span>
+            </StyledPlatformiconTile>
+            <h3>
+              Pyramid
+            </h3>
+          </div>
+        </Component>
       </PlatformCard>
       <PlatformCard
-        className=""
+        data-test-id="platform-python"
         key="python"
+        onClear={[Function]}
         onClick={[Function]}
-        platform="python"
+        platform={
+          Object {
+            "id": "python",
+            "language": "python",
+            "link": "https://docs.getsentry.com/hosted/clients/python/",
+            "name": "Python",
+            "type": "language",
+          }
+        }
+        selected={false}
       >
-        <span
-          className="platform-card"
+        <Component
+          className="css-16kw2fg-PlatformCard ewlrg796"
+          data-test-id="platform-python"
+          onClear={[Function]}
           onClick={[Function]}
+          platform={
+            Object {
+              "id": "python",
+              "language": "python",
+              "link": "https://docs.getsentry.com/hosted/clients/python/",
+              "name": "Python",
+              "type": "language",
+            }
+          }
+          selected={false}
         >
-          <PlatformiconTile
-            className=""
+          <div
+            className="css-16kw2fg-PlatformCard ewlrg796"
+            data-test-id="platform-python"
             onClick={[Function]}
-            platform="python"
           >
-            <li
-              className="platform-tile list-unstyled python python "
+            <StyledPlatformiconTile
+              platform="python"
             >
-              <span
-                className="platformicon platformicon-python"
+              <div
+                className="css-1vvuenp-PlatformiconTile-getColorStyles-StyledPlatformiconTile ewlrg794"
               />
-            </li>
-          </PlatformiconTile>
-          <h5>
-             
-            Python
-             
-          </h5>
-        </span>
+            </StyledPlatformiconTile>
+            <h3>
+              Python
+            </h3>
+          </div>
+        </Component>
       </PlatformCard>
       <PlatformCard
-        className=""
+        data-test-id="platform-python-rq"
         key="python-rq"
+        onClear={[Function]}
         onClick={[Function]}
-        platform="python-rq"
+        platform={
+          Object {
+            "id": "python-rq",
+            "language": "python",
+            "link": "https://docs.getsentry.com/hosted/clients/python/integrations/rq/",
+            "name": "RQ",
+            "type": "framework",
+          }
+        }
+        selected={false}
       >
-        <span
-          className="platform-card"
+        <Component
+          className="css-16kw2fg-PlatformCard ewlrg796"
+          data-test-id="platform-python-rq"
+          onClear={[Function]}
           onClick={[Function]}
+          platform={
+            Object {
+              "id": "python-rq",
+              "language": "python",
+              "link": "https://docs.getsentry.com/hosted/clients/python/integrations/rq/",
+              "name": "RQ",
+              "type": "framework",
+            }
+          }
+          selected={false}
         >
-          <PlatformiconTile
-            className=""
+          <div
+            className="css-16kw2fg-PlatformCard ewlrg796"
+            data-test-id="platform-python-rq"
             onClick={[Function]}
-            platform="python-rq"
           >
-            <li
-              className="platform-tile list-unstyled python-rq python "
+            <StyledPlatformiconTile
+              platform="python-rq"
             >
-              <span
-                className="platformicon platformicon-python-rq"
+              <div
+                className="css-1vvuenp-PlatformiconTile-getColorStyles-StyledPlatformiconTile ewlrg794"
               />
-            </li>
-          </PlatformiconTile>
-          <h5>
-             
-            RQ
-             
-          </h5>
-        </span>
+            </StyledPlatformiconTile>
+            <h3>
+              RQ
+            </h3>
+          </div>
+        </Component>
       </PlatformCard>
       <PlatformCard
-        className=""
+        data-test-id="platform-python-tornado"
         key="python-tornado"
+        onClear={[Function]}
         onClick={[Function]}
-        platform="python-tornado"
+        platform={
+          Object {
+            "id": "python-tornado",
+            "language": "python",
+            "link": "https://docs.getsentry.com/hosted/clients/python/integrations/tornado/",
+            "name": "Tornado",
+            "type": "framework",
+          }
+        }
+        selected={false}
       >
-        <span
-          className="platform-card"
+        <Component
+          className="css-16kw2fg-PlatformCard ewlrg796"
+          data-test-id="platform-python-tornado"
+          onClear={[Function]}
           onClick={[Function]}
+          platform={
+            Object {
+              "id": "python-tornado",
+              "language": "python",
+              "link": "https://docs.getsentry.com/hosted/clients/python/integrations/tornado/",
+              "name": "Tornado",
+              "type": "framework",
+            }
+          }
+          selected={false}
         >
-          <PlatformiconTile
-            className=""
+          <div
+            className="css-16kw2fg-PlatformCard ewlrg796"
+            data-test-id="platform-python-tornado"
             onClick={[Function]}
-            platform="python-tornado"
           >
-            <li
-              className="platform-tile list-unstyled python-tornado python "
+            <StyledPlatformiconTile
+              platform="python-tornado"
             >
-              <span
-                className="platformicon platformicon-python-tornado"
+              <div
+                className="css-1vvuenp-PlatformiconTile-getColorStyles-StyledPlatformiconTile ewlrg794"
               />
-            </li>
-          </PlatformiconTile>
-          <h5>
-             
-            Tornado
-             
-          </h5>
-        </span>
+            </StyledPlatformiconTile>
+            <h3>
+              Tornado
+            </h3>
+          </div>
+        </Component>
       </PlatformCard>
       <PlatformCard
-        className=""
+        data-test-id="platform-cocoa"
         key="cocoa"
+        onClear={[Function]}
         onClick={[Function]}
-        platform="cocoa"
+        platform={
+          Object {
+            "id": "cocoa",
+            "language": "cocoa",
+            "link": "https://docs.getsentry.com/hosted/clients/react-native/",
+            "name": "React-Native",
+            "type": "language",
+          }
+        }
+        selected={false}
       >
-        <span
-          className="platform-card"
+        <Component
+          className="css-16kw2fg-PlatformCard ewlrg796"
+          data-test-id="platform-cocoa"
+          onClear={[Function]}
           onClick={[Function]}
+          platform={
+            Object {
+              "id": "cocoa",
+              "language": "cocoa",
+              "link": "https://docs.getsentry.com/hosted/clients/react-native/",
+              "name": "React-Native",
+              "type": "language",
+            }
+          }
+          selected={false}
         >
-          <PlatformiconTile
-            className=""
+          <div
+            className="css-16kw2fg-PlatformCard ewlrg796"
+            data-test-id="platform-cocoa"
             onClick={[Function]}
-            platform="cocoa"
           >
-            <li
-              className="platform-tile list-unstyled cocoa cocoa "
+            <StyledPlatformiconTile
+              platform="cocoa"
             >
-              <span
-                className="platformicon platformicon-cocoa"
+              <div
+                className="css-yhb6wb-PlatformiconTile-getColorStyles-StyledPlatformiconTile ewlrg794"
               />
-            </li>
-          </PlatformiconTile>
-          <h5>
-             
-            React-Native
-             
-          </h5>
-        </span>
+            </StyledPlatformiconTile>
+            <h3>
+              React-Native
+            </h3>
+          </div>
+        </Component>
       </PlatformCard>
       <PlatformCard
-        className=""
+        data-test-id="platform-ruby-rack"
         key="ruby-rack"
+        onClear={[Function]}
         onClick={[Function]}
-        platform="ruby-rack"
+        platform={
+          Object {
+            "id": "ruby-rack",
+            "language": "ruby",
+            "link": "https://docs.getsentry.com/hosted/clients/ruby/integrations/rack/",
+            "name": "Rack",
+            "type": "framework",
+          }
+        }
+        selected={false}
       >
-        <span
-          className="platform-card"
+        <Component
+          className="css-16kw2fg-PlatformCard ewlrg796"
+          data-test-id="platform-ruby-rack"
+          onClear={[Function]}
           onClick={[Function]}
+          platform={
+            Object {
+              "id": "ruby-rack",
+              "language": "ruby",
+              "link": "https://docs.getsentry.com/hosted/clients/ruby/integrations/rack/",
+              "name": "Rack",
+              "type": "framework",
+            }
+          }
+          selected={false}
         >
-          <PlatformiconTile
-            className=""
+          <div
+            className="css-16kw2fg-PlatformCard ewlrg796"
+            data-test-id="platform-ruby-rack"
             onClick={[Function]}
-            platform="ruby-rack"
           >
-            <li
-              className="platform-tile list-unstyled ruby-rack ruby "
+            <StyledPlatformiconTile
+              platform="ruby-rack"
             >
-              <span
-                className="platformicon platformicon-ruby-rack"
+              <div
+                className="css-ze44n6-PlatformiconTile-getColorStyles-StyledPlatformiconTile ewlrg794"
               />
-            </li>
-          </PlatformiconTile>
-          <h5>
-             
-            Rack
-             
-          </h5>
-        </span>
+            </StyledPlatformiconTile>
+            <h3>
+              Rack
+            </h3>
+          </div>
+        </Component>
       </PlatformCard>
       <PlatformCard
-        className=""
+        data-test-id="platform-ruby-rails"
         key="ruby-rails"
+        onClear={[Function]}
         onClick={[Function]}
-        platform="ruby-rails"
+        platform={
+          Object {
+            "id": "ruby-rails",
+            "language": "ruby",
+            "link": "https://docs.getsentry.com/hosted/clients/ruby/integrations/rails/",
+            "name": "Rails",
+            "type": "framework",
+          }
+        }
+        selected={false}
       >
-        <span
-          className="platform-card"
+        <Component
+          className="css-16kw2fg-PlatformCard ewlrg796"
+          data-test-id="platform-ruby-rails"
+          onClear={[Function]}
           onClick={[Function]}
+          platform={
+            Object {
+              "id": "ruby-rails",
+              "language": "ruby",
+              "link": "https://docs.getsentry.com/hosted/clients/ruby/integrations/rails/",
+              "name": "Rails",
+              "type": "framework",
+            }
+          }
+          selected={false}
         >
-          <PlatformiconTile
-            className=""
+          <div
+            className="css-16kw2fg-PlatformCard ewlrg796"
+            data-test-id="platform-ruby-rails"
             onClick={[Function]}
-            platform="ruby-rails"
           >
-            <li
-              className="platform-tile list-unstyled ruby-rails ruby "
+            <StyledPlatformiconTile
+              platform="ruby-rails"
             >
-              <span
-                className="platformicon platformicon-ruby-rails"
+              <div
+                className="css-15nw1ir-PlatformiconTile-getColorStyles-StyledPlatformiconTile ewlrg794"
               />
-            </li>
-          </PlatformiconTile>
-          <h5>
-             
-            Rails
-             
-          </h5>
-        </span>
+            </StyledPlatformiconTile>
+            <h3>
+              Rails
+            </h3>
+          </div>
+        </Component>
       </PlatformCard>
       <PlatformCard
-        className=""
+        data-test-id="platform-ruby"
         key="ruby"
+        onClear={[Function]}
         onClick={[Function]}
-        platform="ruby"
+        platform={
+          Object {
+            "id": "ruby",
+            "language": "ruby",
+            "link": "https://docs.getsentry.com/hosted/clients/ruby/",
+            "name": "Ruby",
+            "type": "language",
+          }
+        }
+        selected={false}
       >
-        <span
-          className="platform-card"
+        <Component
+          className="css-16kw2fg-PlatformCard ewlrg796"
+          data-test-id="platform-ruby"
+          onClear={[Function]}
           onClick={[Function]}
+          platform={
+            Object {
+              "id": "ruby",
+              "language": "ruby",
+              "link": "https://docs.getsentry.com/hosted/clients/ruby/",
+              "name": "Ruby",
+              "type": "language",
+            }
+          }
+          selected={false}
         >
-          <PlatformiconTile
-            className=""
+          <div
+            className="css-16kw2fg-PlatformCard ewlrg796"
+            data-test-id="platform-ruby"
             onClick={[Function]}
-            platform="ruby"
           >
-            <li
-              className="platform-tile list-unstyled ruby ruby "
+            <StyledPlatformiconTile
+              platform="ruby"
             >
-              <span
-                className="platformicon platformicon-ruby"
+              <div
+                className="css-ze44n6-PlatformiconTile-getColorStyles-StyledPlatformiconTile ewlrg794"
               />
-            </li>
-          </PlatformiconTile>
-          <h5>
-             
-            Ruby
-             
-          </h5>
-        </span>
+            </StyledPlatformiconTile>
+            <h3>
+              Ruby
+            </h3>
+          </div>
+        </Component>
       </PlatformCard>
       <PlatformCard
-        className=""
+        data-test-id="platform-rust"
         key="rust"
+        onClear={[Function]}
         onClick={[Function]}
-        platform="rust"
+        platform={
+          Object {
+            "id": "rust",
+            "language": "rust",
+            "link": "https://docs.getsentry.com/hosted/clients/rust/",
+            "name": "Rust",
+            "type": "language",
+          }
+        }
+        selected={false}
       >
-        <span
-          className="platform-card"
+        <Component
+          className="css-16kw2fg-PlatformCard ewlrg796"
+          data-test-id="platform-rust"
+          onClear={[Function]}
           onClick={[Function]}
+          platform={
+            Object {
+              "id": "rust",
+              "language": "rust",
+              "link": "https://docs.getsentry.com/hosted/clients/rust/",
+              "name": "Rust",
+              "type": "language",
+            }
+          }
+          selected={false}
         >
-          <PlatformiconTile
-            className=""
+          <div
+            className="css-16kw2fg-PlatformCard ewlrg796"
+            data-test-id="platform-rust"
             onClick={[Function]}
-            platform="rust"
           >
-            <li
-              className="platform-tile list-unstyled rust rust "
+            <StyledPlatformiconTile
+              platform="rust"
             >
-              <span
-                className="platformicon platformicon-rust"
+              <div
+                className="css-yhb6wb-PlatformiconTile-getColorStyles-StyledPlatformiconTile ewlrg794"
               />
-            </li>
-          </PlatformiconTile>
-          <h5>
-             
-            Rust
-             
-          </h5>
-        </span>
+            </StyledPlatformiconTile>
+            <h3>
+              Rust
+            </h3>
+          </div>
+        </Component>
       </PlatformCard>
       <PlatformCard
-        className=""
+        data-test-id="platform-swift"
         key="swift"
+        onClear={[Function]}
         onClick={[Function]}
-        platform="swift"
+        platform={
+          Object {
+            "id": "swift",
+            "language": "swift",
+            "link": "https://docs.getsentry.com/hosted/clients/cocoa/",
+            "name": "Swift",
+            "type": "language",
+          }
+        }
+        selected={false}
       >
-        <span
-          className="platform-card"
+        <Component
+          className="css-16kw2fg-PlatformCard ewlrg796"
+          data-test-id="platform-swift"
+          onClear={[Function]}
           onClick={[Function]}
+          platform={
+            Object {
+              "id": "swift",
+              "language": "swift",
+              "link": "https://docs.getsentry.com/hosted/clients/cocoa/",
+              "name": "Swift",
+              "type": "language",
+            }
+          }
+          selected={false}
         >
-          <PlatformiconTile
-            className=""
+          <div
+            className="css-16kw2fg-PlatformCard ewlrg796"
+            data-test-id="platform-swift"
             onClick={[Function]}
-            platform="swift"
           >
-            <li
-              className="platform-tile list-unstyled swift swift "
+            <StyledPlatformiconTile
+              platform="swift"
             >
-              <span
-                className="platformicon platformicon-swift"
+              <div
+                className="css-1e8vskw-PlatformiconTile-getColorStyles-StyledPlatformiconTile ewlrg794"
               />
-            </li>
-          </PlatformiconTile>
-          <h5>
-             
-            Swift
-             
-          </h5>
-        </span>
+            </StyledPlatformiconTile>
+            <h3>
+              Swift
+            </h3>
+          </div>
+        </Component>
       </PlatformCard>
       <PlatformCard
-        className=""
+        data-test-id="platform-mock"
         key="mock"
+        onClear={[Function]}
         onClick={[Function]}
-        platform="mock"
+        platform={
+          Object {
+            "id": "mock",
+            "language": "mock",
+            "link": "",
+            "name": "Mock Integration",
+            "type": "language",
+          }
+        }
+        selected={false}
       >
-        <span
-          className="platform-card"
+        <Component
+          className="css-16kw2fg-PlatformCard ewlrg796"
+          data-test-id="platform-mock"
+          onClear={[Function]}
           onClick={[Function]}
+          platform={
+            Object {
+              "id": "mock",
+              "language": "mock",
+              "link": "",
+              "name": "Mock Integration",
+              "type": "language",
+            }
+          }
+          selected={false}
         >
-          <PlatformiconTile
-            className=""
+          <div
+            className="css-16kw2fg-PlatformCard ewlrg796"
+            data-test-id="platform-mock"
             onClick={[Function]}
-            platform="mock"
           >
-            <li
-              className="platform-tile list-unstyled mock mock "
+            <StyledPlatformiconTile
+              platform="mock"
             >
-              <span
-                className="platformicon platformicon-mock"
+              <div
+                className="css-yhb6wb-PlatformiconTile-getColorStyles-StyledPlatformiconTile ewlrg794"
               />
-            </li>
-          </PlatformiconTile>
-          <h5>
-             
-            Mock Integration
-             
-          </h5>
-        </span>
+            </StyledPlatformiconTile>
+            <h3>
+              Mock Integration
+            </h3>
+          </div>
+        </Component>
       </PlatformCard>
       <PlatformCard
-        className=""
+        data-test-id="platform-other"
         key="other"
+        onClear={[Function]}
         onClick={[Function]}
-        platform="other"
+        platform={
+          Object {
+            "id": "other",
+            "language": "other",
+            "link": "https://docs.getsentry.com/hosted/clients/",
+            "name": "Other",
+            "type": "language",
+          }
+        }
+        selected={false}
       >
-        <span
-          className="platform-card"
+        <Component
+          className="css-16kw2fg-PlatformCard ewlrg796"
+          data-test-id="platform-other"
+          onClear={[Function]}
           onClick={[Function]}
+          platform={
+            Object {
+              "id": "other",
+              "language": "other",
+              "link": "https://docs.getsentry.com/hosted/clients/",
+              "name": "Other",
+              "type": "language",
+            }
+          }
+          selected={false}
         >
-          <PlatformiconTile
-            className=""
+          <div
+            className="css-16kw2fg-PlatformCard ewlrg796"
+            data-test-id="platform-other"
             onClick={[Function]}
-            platform="other"
           >
-            <li
-              className="platform-tile list-unstyled other other "
+            <StyledPlatformiconTile
+              platform="other"
             >
-              <span
-                className="platformicon platformicon-other"
+              <div
+                className="css-yhb6wb-PlatformiconTile-getColorStyles-StyledPlatformiconTile ewlrg794"
               />
-            </li>
-          </PlatformiconTile>
-          <h5>
-             
-            Other
-             
-          </h5>
-        </span>
+            </StyledPlatformiconTile>
+            <h3>
+              Other
+            </h3>
+          </div>
+        </Component>
       </PlatformCard>
-    </ul>
-  </div>
+    </div>
+  </PlatformList>
 </PlatformPicker>
 `;
diff --git a/tests/js/spec/views/onboarding/project/index.spec.jsx b/tests/js/spec/views/onboarding/project/index.spec.jsx
deleted file mode 100644
index dddd87e728..0000000000
--- a/tests/js/spec/views/onboarding/project/index.spec.jsx
+++ /dev/null
@@ -1,70 +0,0 @@
-import PropTypes from 'prop-types';
-import React from 'react';
-import {shallow, mount} from 'enzyme';
-
-import {Client} from 'app/api';
-import Project from 'app/views/onboarding/project';
-
-describe('Project', function() {
-  beforeEach(function() {
-    this.stubbedApiRequest = jest.spyOn(Client.prototype, 'request');
-  });
-
-  afterEach(function() {});
-
-  describe('render()', function() {
-    const baseProps = {
-      next: jest.fn(),
-      platform: '',
-      setName: jest.fn(),
-      name: '',
-      setPlatform: jest.fn(),
-      location: {query: {}},
-      params: {
-        projectId: '',
-        orgId: 'testOrg',
-      },
-    };
-
-    it('should render NotFound if no matching organization', function() {
-      const props = {
-        ...baseProps,
-        params: {
-          orgId: 'my-cool-org',
-        },
-      };
-
-      const wrapper = shallow(<Project {...props} />, {
-        organization: {id: '1337', slug: 'testOrg'},
-      });
-      expect(wrapper).toMatchSnapshot();
-    });
-
-    it('should set required class on empty submit', function() {
-      const props = {
-        ...baseProps,
-      };
-
-      const wrapper = mount(<Project {...props} />, {
-        context: {
-          organization: {id: '1337', slug: 'testOrg'},
-          router: TestStubs.router(),
-        },
-        childContextTypes: {
-          router: PropTypes.object,
-          organization: PropTypes.object,
-        },
-      });
-
-      const submit = wrapper.find('button').last();
-      expect(wrapper.state().projectRequired).toBe(false);
-      submit.simulate('click');
-      expect(wrapper.state().projectRequired).toBe(true);
-      wrapper.setProps({name: 'bar'});
-      submit.simulate('click');
-      expect(wrapper.state().projectRequired).toBe(false);
-
-      expect(wrapper).toMatchSnapshot();
-    });
-  });
-});
diff --git a/tests/js/spec/views/onboarding/project/platformpicker.spec.jsx b/tests/js/spec/views/onboarding/project/platformpicker.spec.jsx
index dd6d06688e..72d46393ec 100644
--- a/tests/js/spec/views/onboarding/project/platformpicker.spec.jsx
+++ b/tests/js/spec/views/onboarding/project/platformpicker.spec.jsx
@@ -1,4 +1,3 @@
-import PropTypes from 'prop-types';
 import React from 'react';
 import {shallow, mount} from 'enzyme';
 
@@ -27,10 +26,10 @@ describe('PlatformPicker', function() {
       };
 
       const wrapper = shallow(<PlatformPicker {...props} />);
-      wrapper.setState({tab: 'mobile'});
+      wrapper.setState({category: 'mobile'});
       const filteredPlatforms = wrapper
         .find('PlatformCard')
-        .map(node => node.prop('platform'));
+        .map(node => node.prop('platform').id);
 
       expect(filteredPlatforms).not.toContain('java');
       expect(filteredPlatforms).toContain('swift');
@@ -45,11 +44,11 @@ describe('PlatformPicker', function() {
 
       const wrapper = shallow(<PlatformPicker {...props} />);
 
-      wrapper.setState({tab: 'all', filter: 'py'});
+      wrapper.setState({category: 'all', filter: 'py'});
 
       const filteredPlatforms = wrapper
         .find('PlatformCard')
-        .map(node => node.prop('platform'));
+        .map(node => node.prop('platform').id);
       expect(filteredPlatforms).not.toContain('java');
       expect(filteredPlatforms).toContain('python-flask');
 
@@ -64,7 +63,7 @@ describe('PlatformPicker', function() {
       const wrapper = shallow(<PlatformPicker {...props} />);
       wrapper.setState({filter: 'aaaaaa'});
 
-      expect(wrapper.text()).toContain('Not finding your platform?');
+      expect(wrapper.find('EmptyMessage')).toHaveLength(1);
 
       expect(wrapper).toMatchSnapshot();
     });
@@ -74,28 +73,31 @@ describe('PlatformPicker', function() {
         ...baseProps,
       };
 
-      const wrapper = mount(<PlatformPicker {...props} />, {
-        context: {
-          router: TestStubs.router(),
-        },
-        childContextTypes: {
-          router: PropTypes.object,
-        },
-      });
+      const wrapper = mount(<PlatformPicker {...props} />, TestStubs.routerContext());
 
       const testListLink = wrapper
         .find('ListLink')
         .last()
         .find('a');
-      expect(wrapper.state().tab).toBe('popular');
-      expect(wrapper.state().tab).not.toBe('all');
+      expect(wrapper.state().category).toBe('popular');
 
       testListLink.simulate('click');
-
-      expect(wrapper.state().tab).not.toBe('popular');
-      expect(wrapper.state().tab).toBe('all');
+      expect(wrapper.state().category).toBe('all');
 
       expect(wrapper).toMatchSnapshot();
     });
+
+    it('should clear the platform when clear is clicked', function() {
+      const props = {
+        ...baseProps,
+        platform: 'java',
+        setPlatform: jest.fn(),
+      };
+
+      const wrapper = mount(<PlatformPicker {...props} />, TestStubs.routerContext());
+
+      wrapper.find('ClearButton').simulate('click');
+      expect(props.setPlatform).toHaveBeenCalledWith('');
+    });
   });
 });
diff --git a/tests/js/spec/views/projectInstall/__snapshots__/newProject.spec.jsx.snap b/tests/js/spec/views/projectInstall/__snapshots__/newProject.spec.jsx.snap
index 7b001f6398..77e180d7b7 100644
--- a/tests/js/spec/views/projectInstall/__snapshots__/newProject.spec.jsx.snap
+++ b/tests/js/spec/views/projectInstall/__snapshots__/newProject.spec.jsx.snap
@@ -1,39 +1,17 @@
 // Jest Snapshot v1, https://goo.gl/fbAQLP
 
 exports[`NewProjectPlatform render() should render 1`] = `
-<Container>
-  <div
-    className="sub-header flex flex-container flex-vertically-centered"
-  >
-    <div
-      className="p-t-1 p-b-1"
-    >
-      <withRouter(ProjectHeaderProjectSelector)
-        organization={
-          Object {
-            "id": "1337",
-            "slug": "testOrg",
-            "teams": Array [
-              Array [
-                "testProject",
-              ],
-            ],
-          }
-        }
-      />
-    </div>
-  </div>
-  <div
-    className="container"
-  >
-    <Content>
-      <SideEffect(DocumentTitle)
-        title="Sentry"
-      />
-      <CreateProject
-        getDocsUrl={[Function]}
-      />
-    </Content>
-  </div>
-</Container>
+<NewProject
+  organization={
+    Object {
+      "id": "1337",
+      "slug": "testOrg",
+      "teams": Array [
+        Array [
+          "testProject",
+        ],
+      ],
+    }
+  }
+/>
 `;
