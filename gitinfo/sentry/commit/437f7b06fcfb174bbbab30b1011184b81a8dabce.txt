commit 437f7b06fcfb174bbbab30b1011184b81a8dabce
Author: Colleen O'Rourke <colleen@sentry.io>
Date:   Thu Feb 13 10:49:41 2020 -0800

    ref(pagerduty): Remove PagerDutyServiceProject Model (#16998)

diff --git a/migrations_lockfile.txt b/migrations_lockfile.txt
index 327234b063..8d9e29c69c 100644
--- a/migrations_lockfile.txt
+++ b/migrations_lockfile.txt
@@ -10,7 +10,7 @@ auth: 0008_alter_user_username_max_length
 contenttypes: 0002_remove_content_type_name
 jira_ac: 0001_initial
 nodestore: 0001_initial
-sentry: 0036_auto_20200213_0106
+sentry: 0037_auto_20200213_0140
 sessions: 0001_initial
 sites: 0002_alter_domain_unique
 social_auth: 0001_initial
diff --git a/src/sentry/migrations/0037_auto_20200213_0140.py b/src/sentry/migrations/0037_auto_20200213_0140.py
new file mode 100644
index 0000000000..dafb6e95b7
--- /dev/null
+++ b/src/sentry/migrations/0037_auto_20200213_0140.py
@@ -0,0 +1,37 @@
+# -*- coding: utf-8 -*-
+# Generated by Django 1.11.28 on 2020-02-13 01:40
+from __future__ import unicode_literals
+
+from django.db import migrations
+import sentry.db.models.fields.bounded
+
+
+class Migration(migrations.Migration):
+    # This flag is used to mark that a migration shouldn't be automatically run in
+    # production. We set this to True for operations that we think are risky and want
+    # someone from ops to run manually and monitor.
+    # General advice is that if in doubt, mark your migration as `is_dangerous`.
+    # Some things you should always mark as dangerous:
+    # - Large data migrations. Typically we want these to be run manually by ops so that
+    #   they can be monitored. Since data migrations will now hold a transaction open
+    #   this is even more important.
+    # - Adding columns to highly active tables, even ones that are NULL.
+    is_dangerous = False
+
+    # This flag is used to decide whether to run this migration in a transaction or not.
+    # By default we prefer to run in a transaction, but for migrations where you want
+    # to `CREATE INDEX CONCURRENTLY` this needs to be set to False. Typically you'll
+    # want to create an index concurrently when adding one to an existing table.
+    atomic = True
+
+
+    dependencies = [
+        ('sentry', '0036_auto_20200213_0106'),
+    ]
+
+    operations = [
+        migrations.SeparateDatabaseAndState(
+            state_operations=[migrations.DeleteModel(name="PagerDutyServiceProject")],
+            database_operations=[],
+        )
+    ]
diff --git a/src/sentry/models/integration.py b/src/sentry/models/integration.py
index da2adc4219..c81d9b4290 100644
--- a/src/sentry/models/integration.py
+++ b/src/sentry/models/integration.py
@@ -7,7 +7,6 @@ from django.utils import timezone
 
 from sentry.constants import ObjectStatus
 from sentry.db.models import (
-    BoundedBigIntegerField,
     BoundedPositiveIntegerField,
     EncryptedJsonField,
     FlexibleForeignKey,
@@ -32,25 +31,6 @@ class PagerDutyService(Model):
         db_table = "sentry_pagerdutyservice"
 
 
-class PagerDutyServiceProject(Model):
-    __core__ = False
-
-    project = BoundedBigIntegerField(db_column="project_id")
-    pagerduty_service = BoundedBigIntegerField(db_column="pagerduty_service_id", db_index=True)
-    organization_integration = BoundedBigIntegerField(
-        db_column="organization_integration_id", db_index=True, null=True
-    )
-    integration_key = models.CharField(max_length=255, null=True)
-    service_id = models.CharField(max_length=255, null=True)
-    service_name = models.CharField(max_length=255, null=True)
-    date_added = models.DateTimeField(default=timezone.now, null=True)
-
-    class Meta:
-        app_label = "sentry"
-        db_table = "sentry_pagerdutyserviceproject"
-        unique_together = (("project", "pagerduty_service"),)
-
-
 class IntegrationExternalProject(Model):
     __core__ = False
 
