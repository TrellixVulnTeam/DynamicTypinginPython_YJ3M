commit 74de3073b085057865f50ce381598e0d06419c78
Author: Burak Yigit Kaya <byk@sentry.io>
Date:   Tue May 26 21:59:53 2020 +0300

    build(sync_docs): Parallelize sync_docs to save time (#19014)

diff --git a/src/sentry/utils/integrationdocs.py b/src/sentry/utils/integrationdocs.py
index 3012773fc0..b4a04bdde0 100644
--- a/src/sentry/utils/integrationdocs.py
+++ b/src/sentry/utils/integrationdocs.py
@@ -3,6 +3,8 @@
 from __future__ import absolute_import
 
 import io
+import multiprocessing
+import multiprocessing.dummy
 import os
 import sys
 import json
@@ -50,8 +52,7 @@ logger = logging.getLogger("sentry")
 
 
 def echo(what):
-    sys.stdout.write(what)
-    sys.stdout.write("\n")
+    sys.stdout.write(what + "\n")
     sys.stdout.flush()
 
 
@@ -122,9 +123,19 @@ def sync_docs(quiet=False):
 
     dump_doc("_platforms", {"platforms": platform_list})
 
+    # This value is derived from https://docs.python.org/3/library/concurrent.futures.html#threadpoolexecutor
+    MAX_THREADS = 32
+    # TODO(python3): Migrate this to concurrent.futures.ThreadPoolExecutor context manager
+    executor = multiprocessing.dummy.Pool(
+        min(len(data["platforms"]), multiprocessing.cpu_count() * 5, MAX_THREADS)
+    )
     for platform_id, platform_data in iteritems(data["platforms"]):
         for integration_id, integration in iteritems(platform_data):
-            sync_integration_docs(platform_id, integration_id, integration["details"], quiet)
+            executor.apply_async(
+                sync_integration_docs, (platform_id, integration_id, integration["details"], quiet)
+            )
+    executor.close()
+    executor.join()
 
 
 def sync_integration_docs(platform_id, integration_id, path, quiet=False):
