commit d514d29f0ff72b75104f547a2f535b19d29c43f0
Author: Matej Minar <matej.minar@sentry.io>
Date:   Thu Jun 18 14:47:52 2020 +0200

    feat(ui): Add project icon to global header (#19338)

diff --git a/src/sentry/static/sentry/app/components/organizations/multipleProjectSelector.jsx b/src/sentry/static/sentry/app/components/organizations/multipleProjectSelector.jsx
index 82c371a220..2a9e7c0049 100644
--- a/src/sentry/static/sentry/app/components/organizations/multipleProjectSelector.jsx
+++ b/src/sentry/static/sentry/app/components/organizations/multipleProjectSelector.jsx
@@ -10,11 +10,12 @@ import {ALL_ACCESS_PROJECTS} from 'app/constants/globalSelectionHeader';
 import getRouteStringFromRoutes from 'app/utils/getRouteStringFromRoutes';
 import {t, tct} from 'app/locale';
 import Button from 'app/components/button';
-import InlineSvg from 'app/components/inlineSvg';
 import Tooltip from 'app/components/tooltip';
 import HeaderItem from 'app/components/organizations/headerItem';
 import {growIn} from 'app/styles/animations';
 import space from 'app/styles/space';
+import PlatformList from 'app/components/platformList';
+import {IconProject} from 'app/icons';
 
 import ProjectSelector from './projectSelector';
 
@@ -202,7 +203,14 @@ export default class MultipleProjectSelector extends React.PureComponent {
     return shouldForceProject ? (
       <StyledHeaderItem
         data-test-id="global-header-project-selector"
-        icon={<StyledInlineSvg src="icon-project" />}
+        icon={
+          forceProject && (
+            <PlatformList
+              platforms={forceProject.platform ? [forceProject.platform] : []}
+              max={1}
+            />
+          )
+        }
         locked
         lockedMessage={this.getLockedMessage()}
         settingsLink={
@@ -216,7 +224,7 @@ export default class MultipleProjectSelector extends React.PureComponent {
     ) : !isGlobalSelectionReady ? (
       <StyledHeaderItem
         data-test-id="global-header-project-selector"
-        icon={<StyledInlineSvg src="icon-project" />}
+        icon={<IconProject />}
         loading
       >
         {t('Loading\u2026')}
@@ -261,12 +269,20 @@ export default class MultipleProjectSelector extends React.PureComponent {
                 : selectedProjectIds.has(ALL_ACCESS_PROJECTS)
                 ? t('All Projects')
                 : t('My Projects');
+              const icon = hasSelected ? (
+                <PlatformList
+                  platforms={selectedProjects.map(p => p.platform ?? 'other').reverse()}
+                  max={5}
+                />
+              ) : (
+                <IconProject />
+              );
 
               return (
                 <StyledHeaderItem
                   data-test-id="global-header-project-selector"
                   active={hasSelected || isOpen}
-                  icon={<StyledInlineSvg src="icon-project" />}
+                  icon={icon}
                   hasSelected={hasSelected}
                   hasChanges={this.state.hasChanges}
                   isOpen={isOpen}
@@ -382,12 +398,6 @@ const StyledHeaderItem = styled(HeaderItem)`
   ${p => p.locked && 'cursor: default'};
 `;
 
-const StyledInlineSvg = styled(InlineSvg)`
-  height: 18px;
-  width: 18px;
-  transform: translateY(-2px);
-`;
-
 const StyledLink = styled(Link)`
   color: ${p => p.theme.gray500};
 
diff --git a/src/sentry/static/sentry/app/components/platformList.jsx b/src/sentry/static/sentry/app/components/platformList.jsx
index ef18dab452..df748d2b83 100644
--- a/src/sentry/static/sentry/app/components/platformList.jsx
+++ b/src/sentry/static/sentry/app/components/platformList.jsx
@@ -31,9 +31,9 @@ class PlatformList extends React.Component {
     consistentWidth: false,
   };
 
-  getIcon = platform => {
+  getIcon = (platform, index) => {
     const {size} = this.props;
-    return <StyledPlatformIcon key={platform} platform={platform} size={size} />;
+    return <StyledPlatformIcon key={platform + index} platform={platform} size={size} />;
   };
 
   getIcons = platforms =>
diff --git a/tests/js/spec/components/organizations/globalSelectionHeader.spec.jsx b/tests/js/spec/components/organizations/globalSelectionHeader.spec.jsx
index 8251352cfa..457770ffde 100644
--- a/tests/js/spec/components/organizations/globalSelectionHeader.spec.jsx
+++ b/tests/js/spec/components/organizations/globalSelectionHeader.spec.jsx
@@ -1127,4 +1127,97 @@ describe('GlobalSelectionHeader', function() {
       ).toEqual('View My Projects');
     });
   });
+
+  describe('project icons', function() {
+    const initialData = initializeOrg({
+      organization: {features: ['global-views']},
+      projects: [
+        {id: 0, slug: 'go', platform: 'go'},
+        {id: 1, slug: 'javascript', platform: 'javascript'},
+        {id: 2, slug: 'other', platform: 'other'},
+        {id: 3, slug: 'php', platform: 'php'},
+        {id: 4, slug: 'python', platform: 'python'},
+        {id: 5, slug: 'rust', platform: 'rust'},
+        {id: 6, slug: 'swift', platform: 'swift'},
+      ],
+    });
+
+    beforeEach(function() {
+      jest.spyOn(ProjectsStore, 'getState').mockImplementation(() => ({
+        projects: initialData.organization.projects,
+        loading: false,
+      }));
+    });
+
+    it('shows IconProject when no projects are selected', async function() {
+      const wrapper = mountWithTheme(
+        <GlobalSelectionHeader
+          organization={initialData.organization}
+          projects={initialData.organization.projects}
+        />,
+        changeQuery(initialData.routerContext, {project: -1})
+      );
+
+      await tick();
+      wrapper.update();
+
+      const projectSelector = wrapper.find('MultipleProjectSelector');
+
+      expect(projectSelector.find('IconContainer svg').exists()).toBeTruthy();
+      expect(projectSelector.find('PlatformIcon').exists()).toBeFalsy();
+
+      expect(projectSelector.find('Content').text()).toEqual('All Projects');
+    });
+
+    it('shows PlatformIcon when one project is selected', async function() {
+      const wrapper = mountWithTheme(
+        <GlobalSelectionHeader
+          organization={initialData.organization}
+          projects={initialData.organization.projects}
+        />,
+        changeQuery(initialData.routerContext, {project: 1})
+      );
+
+      await tick();
+      wrapper.update();
+
+      const projectSelector = wrapper.find('MultipleProjectSelector');
+
+      expect(projectSelector.find('PlatformIcon').props().platform).toEqual('javascript');
+
+      expect(projectSelector.find('Content').text()).toEqual('javascript');
+    });
+
+    it('shows multiple PlatformIcons when multiple projects are selected, no more than 5', async function() {
+      const wrapper = mountWithTheme(
+        <GlobalSelectionHeader
+          organization={initialData.organization}
+          projects={initialData.organization.projects}
+        />,
+        initialData.routerContext
+      );
+
+      await tick();
+      wrapper.update();
+
+      // select 6 projects
+      const headerItem = wrapper.find('MultipleProjectSelector HeaderItem');
+      headerItem.simulate('click');
+      wrapper
+        .find('MultipleProjectSelector CheckboxFancy')
+        .forEach(project => project.simulate('click'));
+      headerItem.simulate('click');
+
+      await tick();
+      wrapper.update();
+
+      // assert title and icons
+      const title = wrapper.find('MultipleProjectSelector Content');
+      const icons = wrapper.find('MultipleProjectSelector PlatformIcon');
+      expect(title.text()).toBe('javascript, other, php, python, rust, swift');
+      expect(icons.length).toBe(5);
+      expect(icons.at(3).props().platform).toBe('rust');
+      expect(icons.at(4).props().platform).toBe('swift');
+    });
+  });
 });
diff --git a/tests/js/spec/views/projectsDashboard/__snapshots__/projectCard.spec.jsx.snap b/tests/js/spec/views/projectsDashboard/__snapshots__/projectCard.spec.jsx.snap
index eb009809e1..a2c301e01b 100644
--- a/tests/js/spec/views/projectsDashboard/__snapshots__/projectCard.spec.jsx.snap
+++ b/tests/js/spec/views/projectsDashboard/__snapshots__/projectCard.spec.jsx.snap
@@ -416,7 +416,7 @@ exports[`ProjectCard renders 1`] = `
                                                 size={18}
                                               >
                                                 <StyledPlatformIcon
-                                                  key="javascript"
+                                                  key="javascript0"
                                                   platform="javascript"
                                                   size={18}
                                                 >
