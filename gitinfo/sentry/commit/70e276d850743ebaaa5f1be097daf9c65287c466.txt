commit 70e276d850743ebaaa5f1be097daf9c65287c466
Author: David Cramer <dcramer@gmail.com>
Date:   Sun Apr 7 22:53:21 2013 -0700

    Support to_string, stacktrace, and single exception rendering

diff --git a/src/sentry/interfaces.py b/src/sentry/interfaces.py
index 5a4be50e1e..b8f12797c3 100644
--- a/src/sentry/interfaces.py
+++ b/src/sentry/interfaces.py
@@ -505,7 +505,8 @@ class Stacktrace(Interface):
             output.extend(frame.get_hash())
         return output
 
-    def get_context(self, event, is_public=False, newest_first=None, **kwargs):
+    def get_context(self, event, is_public=False, newest_first=None,
+                    with_stacktrace=True, **kwargs):
         system_frames = 0
         frames = []
         for frame in self.frames:
@@ -527,20 +528,20 @@ class Stacktrace(Interface):
             if newest_first:
                 frames = frames[::-1]
 
-        return {
+        context = {
             'is_public': is_public,
             'newest_first': newest_first,
             'system_frames': system_frames,
             'event': event,
             'frames': frames,
-            'stacktrace': self.get_traceback(event, newest_first=newest_first),
         }
+        if with_stacktrace:
+            context['stacktrace'] = self.get_traceback(event, newest_first=newest_first)
+        return context
 
-    def to_html(self, event, is_public=False, newest_first=None, **kwargs):
+    def to_html(self, event, **kwargs):
         context = self.get_context(
             event=event,
-            is_public=is_public,
-            newest_first=newest_first,
             **kwargs
         )
         return render_to_string('sentry/partial/interfaces/stacktrace.html', context)
@@ -773,26 +774,42 @@ class Exception(Interface):
         for e in self.values:
             context = e.get_context(**context_kwargs)
             if e.stacktrace:
-                context['stacktrace'] = e.stacktrace.get_context(**context_kwargs)
+                context['stacktrace'] = e.stacktrace.get_context(
+                    with_stacktrace=False, **context_kwargs)
             else:
                 context['stacktrace'] = {}
             exceptions.append(context)
-
         return {
             'newest_first': newest_first,
             'system_frames': any(e['stacktrace'].get('system_frames') for e in exceptions),
             'exceptions': exceptions,
+            'stacktrace': self.get_stacktrace(event, newest_first=newest_first)
         }
 
-    def to_html(self, event, is_public=False, **kwargs):
+    def to_html(self, event, **kwargs):
         if not self.values:
             return ''
-        context = self.get_context(event=event, is_public=is_public, **kwargs)
+
+        if len(self.values) == 1 and not self.values[0].stacktrace:
+            exception = self.values[0]
+            context = exception.get_context(event=event, **kwargs)
+            return render_to_string('sentry/partial/interfaces/exception.html', context)
+
+        context = self.get_context(event=event, **kwargs)
         return render_to_string('sentry/partial/interfaces/chained_exception.html', context)
 
+    def to_string(self, event, is_public=False, **kwargs):
+        return self.get_stacktrace(event, system_frames=False, max_frames=5)
+
     def get_search_context(self, event):
         return self.values[0].get_search_context(event)
 
+    def get_stacktrace(self, *args, **kwargs):
+        exc = self.values[0]
+        if exc.stacktrace:
+            return exc.stacktrace.get_stacktrace(*args, **kwargs)
+        return ''
+
 
 class Http(Interface):
     """
diff --git a/src/sentry/templates/sentry/partial/interfaces/chained_exception.html b/src/sentry/templates/sentry/partial/interfaces/chained_exception.html
index a4de765634..6395be562b 100644
--- a/src/sentry/templates/sentry/partial/interfaces/chained_exception.html
+++ b/src/sentry/templates/sentry/partial/interfaces/chained_exception.html
@@ -37,12 +37,9 @@
     </div>
 </div>
 
-{% comment %}
-TODO:
 <div id="raw_stacktrace" style="display: none;">
     <pre>{{ stacktrace }}</pre>
 </div>
-{% endcomment %}
 
 {% if system_frames %}
     <script type="text/javascript">
diff --git a/src/sentry/templatetags/sentry_helpers.py b/src/sentry/templatetags/sentry_helpers.py
index 55f9951c3c..afbe259651 100644
--- a/src/sentry/templatetags/sentry_helpers.py
+++ b/src/sentry/templatetags/sentry_helpers.py
@@ -343,7 +343,7 @@ def get_rendered_interfaces(event, request):
     interface_list = []
     is_public = group_is_public(event.group, request.user)
     for interface in event.interfaces.itervalues():
-        html = safe_execute(interface.to_html, event, is_public)
+        html = safe_execute(interface.to_html, event, is_public=is_public)
         if not html:
             continue
         interface_list.append((interface, mark_safe(html)))
