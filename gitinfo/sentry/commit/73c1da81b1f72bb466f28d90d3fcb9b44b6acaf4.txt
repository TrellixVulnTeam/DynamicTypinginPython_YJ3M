commit 73c1da81b1f72bb466f28d90d3fcb9b44b6acaf4
Author: Lauryn Brown <lauryndbrown@gmail.com>
Date:   Wed Oct 17 10:09:03 2018 -0700

    feat(integrations): Bitbucket default repo field. (#9842)
    
    * bb default repo field.
    
    * Added a test for linking
    
    * Fixed issues with the kwargs and tests.
    
    * fix tests
    
    * removed old git repos for bb.
    
    * Added get repo from issues to bitbucket.
    
    * small change to test.

diff --git a/src/sentry/integrations/bitbucket/issues.py b/src/sentry/integrations/bitbucket/issues.py
index 5a87b476ab..f721e85640 100644
--- a/src/sentry/integrations/bitbucket/issues.py
+++ b/src/sentry/integrations/bitbucket/issues.py
@@ -20,25 +20,12 @@ class BitbucketIssueBasicMixin(IssueBasicMixin):
         repo, issue_id = key.split('#')
         return u'https://bitbucket.org/{}/issues/{}'.format(repo, issue_id)
 
-    def get_repo_choices(self, **kwargs):
-        try:
-            repos = self.get_repositories()
-        except ApiError:
-            return [], None
-
-        repo_choices = [(repo['identifier'], repo['name']) for repo in repos]
-        params = kwargs.get('params', {})
-
-        try:
-            default_repo = params.get('repo', repo_choices[0][0])
-        except IndexError:
-            return repo_choices, None
-
-        return repo_choices, default_repo
+    def get_persisted_default_config_fields(self):
+        return ['repo']
 
     def get_create_issue_config(self, group, **kwargs):
         fields = super(BitbucketIssueBasicMixin, self).get_create_issue_config(group, **kwargs)
-        repo_choices, default_repo = self.get_repo_choices(**kwargs)
+        default_repo, repo_choices = self.get_repository_choices(group, **kwargs)
 
         org = group.organization
         autocomplete_url = reverse(
@@ -48,12 +35,12 @@ class BitbucketIssueBasicMixin(IssueBasicMixin):
         return [
             {
                 'name': 'repo',
-                'label': 'Bitbucket Repository',
+                'required': True,
                 'type': 'select',
-                'default': default_repo,
-                'defaultLabel': default_repo,
                 'url': autocomplete_url,
-                'required': True,
+                'choices': repo_choices,
+                'defaultValue': default_repo,
+                'label': 'Bitbucket Repository',
             }
         ] + fields + [
             {
@@ -72,7 +59,7 @@ class BitbucketIssueBasicMixin(IssueBasicMixin):
         ]
 
     def get_link_issue_config(self, group, **kwargs):
-        repo_choices, default_repo = self.get_repo_choices(**kwargs)
+        default_repo, repo_choices = self.get_repository_choices(group, **kwargs)
 
         org = group.organization
         autocomplete_url = reverse(
@@ -81,13 +68,12 @@ class BitbucketIssueBasicMixin(IssueBasicMixin):
 
         return [{
             'name': 'repo',
-            'label': 'Bitbucket Repository',
+            'required': True,
             'type': 'select',
-            'default': default_repo,
-            'defaultLabel': default_repo,
             'url': autocomplete_url,
-            'required': True,
-            'updatesForm': True,
+            'choices': repo_choices,
+            'defaultValue': default_repo,
+            'label': 'Bitbucket Repository',
         }, {
             'name': 'externalIssue',
             'label': 'Issue',
diff --git a/tests/sentry/integrations/bitbucket/test_issues.py b/tests/sentry/integrations/bitbucket/test_issues.py
index 27ac4dafa7..7768fd2dd6 100644
--- a/tests/sentry/integrations/bitbucket/test_issues.py
+++ b/tests/sentry/integrations/bitbucket/test_issues.py
@@ -5,6 +5,7 @@ from sentry.testutils import APITestCase
 
 import json
 import responses
+import six
 
 
 class BitbucketIssueTest(APITestCase):
@@ -74,3 +75,60 @@ class BitbucketIssueTest(APITestCase):
         assert responses.calls[0].response.status_code == 201
         payload = json.loads(request.body)
         assert payload == {'content': {'raw': comment['comment']}}
+
+    @responses.activate
+    def test_default_repo_link_fields(self):
+        responses.add(
+            responses.GET,
+            'https://api.bitbucket.org/2.0/repositories/myaccount',
+            body=b"""{
+                "values": [
+                    {"full_name": "myaccount/repo1"},
+                    {"full_name": "myaccount/repo2"}
+                ]
+            }""",
+            content_type='application/json',
+        )
+        group = self.create_group()
+        self.create_event(group=group)
+        org_integration = self.integration.add_organization(self.organization)
+        org_integration.config = {
+            'project_issue_defaults': {
+                six.text_type(group.project_id): {'repo': 'myaccount/repo1'}
+            }
+        }
+        org_integration.save()
+        installation = self.integration.get_installation(self.organization.id)
+        fields = installation.get_link_issue_config(group)
+        repo_field = [field for field in fields if field['name'] == 'repo'][0]
+        assert repo_field['defaultValue'] == 'myaccount/repo1'
+
+    @responses.activate
+    def test_default_repo_create_fields(self):
+        responses.add(
+            responses.GET,
+            'https://api.bitbucket.org/2.0/repositories/myaccount',
+            body=b"""{
+                "values": [
+                    {"full_name": "myaccount/repo1"},
+                    {"full_name": "myaccount/repo2"}
+                ]
+            }""",
+            content_type='application/json',
+        )
+        group = self.create_group()
+        self.create_event(group=group)
+        org_integration = self.integration.add_organization(self.organization)
+        org_integration.config = {
+            'project_issue_defaults': {
+                six.text_type(group.project_id): {'repo': 'myaccount/repo1'}
+            }
+        }
+        org_integration.save()
+        installation = self.integration.get_installation(self.organization.id)
+        fields = installation.get_create_issue_config(group)
+        for field in fields:
+            if field['name'] == 'repo':
+                repo_field = field
+                break
+        assert repo_field['defaultValue'] == 'myaccount/repo1'
