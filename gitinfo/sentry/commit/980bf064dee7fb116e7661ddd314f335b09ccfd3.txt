commit 980bf064dee7fb116e7661ddd314f335b09ccfd3
Author: David Cramer <dcramer@gmail.com>
Date:   Mon Feb 22 14:36:29 2016 -0800

    Handle duplicate slugs in org merging

diff --git a/src/sentry/models/organization.py b/src/sentry/models/organization.py
index f57988ae7c..7a9731d5c9 100644
--- a/src/sentry/models/organization.py
+++ b/src/sentry/models/organization.py
@@ -9,7 +9,7 @@ from __future__ import absolute_import, print_function
 
 from bitfield import BitField
 from django.conf import settings
-from django.db import models
+from django.db import IntegrityError, models, transaction
 from django.utils import timezone
 from django.utils.functional import cached_property
 from django.utils.translation import ugettext_lazy as _
@@ -194,7 +194,30 @@ class Organization(Model):
                             'is_active': True,
                         },
                     )
-        for model in (Team, Project, ApiKey, AuditLogEntry):
+
+        for team in Team.objects.filter(organization=from_org):
+            try:
+                with transaction.atomic():
+                    team.update(organization=to_org)
+            except IntegrityError:
+                slugify_instance(team, team.name, organization=to_org)
+                team.update(
+                    organization=to_org,
+                    slug=team.slug,
+                )
+
+        for project in Project.objects.filter(organization=from_org):
+            try:
+                with transaction.atomic():
+                    project.update(organization=to_org)
+            except IntegrityError:
+                slugify_instance(project, project.name, organization=to_org)
+                project.update(
+                    organization=to_org,
+                    slug=project.slug,
+                )
+
+        for model in (ApiKey, AuditLogEntry):
             model.objects.filter(
                 organization=from_org,
             ).update(organization=to_org)
diff --git a/tests/sentry/models/test_organization.py b/tests/sentry/models/test_organization.py
index 83a7b4abe0..f0939c9b5c 100644
--- a/tests/sentry/models/test_organization.py
+++ b/tests/sentry/models/test_organization.py
@@ -1,6 +1,8 @@
 from __future__ import absolute_import
 
-from sentry.models import OrganizationMember, OrganizationMemberTeam, Team
+from sentry.models import (
+    OrganizationMember, OrganizationMemberTeam, Project, Team
+)
 from sentry.testutils import TestCase
 
 
@@ -9,6 +11,12 @@ class OrganizationTest(TestCase):
         from_owner = self.create_user('foo@example.com')
         from_org = self.create_organization(owner=from_owner)
         from_team = self.create_team(organization=from_org)
+        from_team_two = self.create_team(organization=from_org, slug='bizzy')
+        from_project_two = self.create_project(
+            organization=from_org,
+            team=from_team_two,
+            slug='bizzy',
+        )
         from_user = self.create_user('baz@example.com')
         other_user = self.create_user('bizbaz@example.com')
         self.create_member(organization=from_org, user=from_user)
@@ -22,6 +30,12 @@ class OrganizationTest(TestCase):
         to_owner = self.create_user('bar@example.com')
         to_org = self.create_organization(owner=to_owner)
         to_team = self.create_team(organization=to_org)
+        to_team_two = self.create_team(organization=to_org, slug='bizzy')
+        to_project_two = self.create_project(
+            organization=to_org,
+            team=to_team_two,
+            slug='bizzy',
+        )
         to_member = self.create_member(organization=to_org, user=other_user)
 
         OrganizationMemberTeam.objects.create(
@@ -55,6 +69,24 @@ class OrganizationTest(TestCase):
             is_active=True,
         ).exists()
 
+        from_team_two = Team.objects.get(id=from_team_two.id)
+        assert from_team_two.slug != 'bizzy'
+        assert from_team_two.organization == to_org
+
+        from_project_two = Project.objects.get(id=from_project_two.id)
+        assert from_project_two.slug != 'bizzy'
+        assert from_project_two.organization == to_org
+        assert from_project_two.team == from_team_two
+
+        to_team_two = Team.objects.get(id=to_team_two.id)
+        assert to_team_two.slug == 'bizzy'
+        assert to_team_two.organization == to_org
+
+        to_project_two = Project.objects.get(id=to_project_two.id)
+        assert to_project_two.slug == 'bizzy'
+        assert to_project_two.organization == to_org
+        assert to_project_two.team == to_team_two
+
     def test_get_default_owner(self):
         user = self.create_user('foo@example.com')
         org = self.create_organization(owner=user)
