commit f63026c4d0539009119c4d0328d15bec9ce01b09
Author: Matej Minar <matej.minar@sentry.io>
Date:   Mon Apr 27 17:20:47 2020 +0200

    feat(ui): Add ability to delete release v2 (#18478)

diff --git a/src/sentry/static/sentry/app/views/releasesV2/detail/releaseActions.tsx b/src/sentry/static/sentry/app/views/releasesV2/detail/releaseActions.tsx
new file mode 100644
index 0000000000..e11e0df454
--- /dev/null
+++ b/src/sentry/static/sentry/app/views/releasesV2/detail/releaseActions.tsx
@@ -0,0 +1,74 @@
+import React from 'react';
+import styled from '@emotion/styled';
+import {browserHistory} from 'react-router';
+
+import {t} from 'app/locale';
+import space from 'app/styles/space';
+import Button from 'app/components/button';
+import {IconDelete} from 'app/icons';
+import Confirm from 'app/components/confirm';
+import {
+  addErrorMessage,
+  addLoadingMessage,
+  addSuccessMessage,
+} from 'app/actionCreators/indicator';
+import Tooltip from 'app/components/tooltip';
+
+import {deleteRelease} from './utils';
+
+type Props = {
+  orgId: string;
+  version: string;
+};
+
+const ReleaseActions = ({orgId, version}: Props) => {
+  const handleDelete = async () => {
+    const redirectPath = `/organizations/${orgId}/releases/`;
+    addLoadingMessage(t('Deleting Release...'));
+
+    try {
+      await deleteRelease(orgId, version);
+      addSuccessMessage(t('Release was successfully removed.'));
+      browserHistory.push(redirectPath);
+    } catch (error) {
+      const errorMessage =
+        error.responseJSON?.detail ?? t('Release could not be be removed.');
+      addErrorMessage(errorMessage);
+    }
+  };
+
+  return (
+    <Wrapper>
+      <Confirm
+        onConfirm={handleDelete}
+        message={t(
+          'Deleting this release is permanent and will affect other projects associated with it. Are you sure you wish to continue?'
+        )}
+      >
+        <div>
+          <Tooltip
+            title={t(
+              'You can only delete releases if they have no issues or health data.'
+            )}
+          >
+            <Button icon={<IconDelete />} />
+          </Tooltip>
+        </div>
+      </Confirm>
+    </Wrapper>
+  );
+};
+
+const Wrapper = styled('div')`
+  display: grid;
+  grid-auto-flow: column;
+  grid-auto-columns: min-content;
+  grid-gap: ${space(0.5)};
+
+  @media (max-width: ${p => p.theme.breakpoints[0]}) {
+    width: 100%;
+    margin: ${space(1)} 0 ${space(2)} 0;
+  }
+`;
+
+export default ReleaseActions;
diff --git a/src/sentry/static/sentry/app/views/releasesV2/detail/releaseHeader.tsx b/src/sentry/static/sentry/app/views/releasesV2/detail/releaseHeader.tsx
index 6ebcc75520..dcecf332c7 100644
--- a/src/sentry/static/sentry/app/views/releasesV2/detail/releaseHeader.tsx
+++ b/src/sentry/static/sentry/app/views/releasesV2/detail/releaseHeader.tsx
@@ -20,6 +20,7 @@ import {formatVersion} from 'app/utils/formatters';
 import Breadcrumbs from 'app/components/breadcrumbs';
 
 import ReleaseStat from './releaseStat';
+import ReleaseActions from './releaseActions';
 
 type Props = {
   location: Location;
@@ -86,6 +87,7 @@ const ReleaseHeader = ({location, orgId, release, deploys, project}: Props) => {
           <ReleaseStat label={t('New Issues')}>
             <Count value={newGroups} />
           </ReleaseStat>
+          <ReleaseActions version={version} orgId={orgId} />
         </StatsWrapper>
       </Layout>
 
