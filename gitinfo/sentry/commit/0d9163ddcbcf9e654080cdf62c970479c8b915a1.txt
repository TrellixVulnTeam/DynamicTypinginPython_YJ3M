commit 0d9163ddcbcf9e654080cdf62c970479c8b915a1
Author: David Cramer <dcramer@gmail.com>
Date:   Thu Jun 9 12:59:09 2016 -0700

    Include UserAvatar in user merge

diff --git a/src/sentry/models/user.py b/src/sentry/models/user.py
index 5ca4bdedea..c9895d76f6 100644
--- a/src/sentry/models/user.py
+++ b/src/sentry/models/user.py
@@ -104,7 +104,8 @@ class User(BaseModel, AbstractBaseUser):
         from sentry import roles
         from sentry.models import (
             AuditLogEntry, Activity, AuthIdentity, GroupAssignee, GroupBookmark,
-            GroupSeen, OrganizationMember, OrganizationMemberTeam, UserOption
+            GroupSeen, OrganizationMember, OrganizationMemberTeam, UserAvatar,
+            UserOption
         )
 
         for obj in OrganizationMember.objects.filter(user=from_user):
@@ -132,7 +133,15 @@ class User(BaseModel, AbstractBaseUser):
                 except IntegrityError:
                     pass
 
-        for model in (GroupAssignee, GroupBookmark, GroupSeen, UserOption):
+        model_list = (
+            GroupAssignee,
+            GroupBookmark,
+            GroupSeen,
+            UserAvatar,
+            UserOption
+        )
+
+        for model in model_list:
             for obj in model.objects.filter(user=from_user):
                 try:
                     with transaction.atomic():
@@ -140,15 +149,6 @@ class User(BaseModel, AbstractBaseUser):
                 except IntegrityError:
                     pass
 
-        # remove any duplicate identities that exist on the current user that
-        # might conflict w/ the new users existing SSO
-        AuthIdentity.objects.filter(
-            user=from_user,
-            auth_provider__organization__in=AuthIdentity.objects.filter(
-                user=to_user,
-            ).values('auth_provider__organization')
-        ).delete()
-
         Activity.objects.filter(
             user=from_user,
         ).update(user=to_user)
@@ -158,6 +158,15 @@ class User(BaseModel, AbstractBaseUser):
         AuditLogEntry.objects.filter(
             target_user=from_user,
         ).update(target_user=to_user)
+
+        # remove any duplicate identities that exist on the current user that
+        # might conflict w/ the new users existing SSO
+        AuthIdentity.objects.filter(
+            user=from_user,
+            auth_provider__organization__in=AuthIdentity.objects.filter(
+                user=to_user,
+            ).values('auth_provider__organization')
+        ).delete()
         AuthIdentity.objects.filter(
             user=from_user,
         ).update(user=to_user)
