commit 0703c50addafc4d9c4eb64dec2d6c3deb19cbeaf
Author: Brett Hoerner <brett@bretthoerner.com>
Date:   Wed Sep 27 12:16:57 2017 -0500

    ref: Drop old/unused tag key logic (#6207)
    
    Attempt number 2. See #6199.
    
    Fixes SENTRY-4PY

diff --git a/src/sentry/constants.py b/src/sentry/constants.py
index 82beda64a5..f845feb0c4 100644
--- a/src/sentry/constants.py
+++ b/src/sentry/constants.py
@@ -115,8 +115,6 @@ LANGUAGES = [(k, LANGUAGE_MAP[k]) for k in get_all_languages() if k in LANGUAGE_
 TAG_LABELS = {
     'exc_type': 'Exception Type',
     'sentry:user': 'User',
-    'sentry:filename': 'File',
-    'sentry:function': 'Function',
     'sentry:release': 'Release',
     'sentry:dist': 'Distribution',
     'os': 'OS',
diff --git a/src/sentry/models/release.py b/src/sentry/models/release.py
index e393dda522..55ff660180 100644
--- a/src/sentry/models/release.py
+++ b/src/sentry/models/release.py
@@ -243,7 +243,10 @@ class Release(Model):
 
     @property
     def short_version(self):
-        version = self.version
+        return Release.get_display_version(self.version)
+
+    @staticmethod
+    def get_display_version(version):
         match = _dotted_path_prefix_re.match(version)
         if match is not None:
             version = version[match.end():]
diff --git a/src/sentry/models/tagvalue.py b/src/sentry/models/tagvalue.py
index b7822ca9e6..add71dda30 100644
--- a/src/sentry/models/tagvalue.py
+++ b/src/sentry/models/tagvalue.py
@@ -7,7 +7,6 @@ sentry.models.tagvalue
 """
 from __future__ import absolute_import, print_function
 
-from django.core.urlresolvers import reverse
 from django.db import models
 from django.utils import timezone
 
@@ -15,7 +14,7 @@ from sentry.constants import MAX_TAG_KEY_LENGTH, MAX_TAG_VALUE_LENGTH
 from sentry.db.models import (
     Model, BoundedPositiveIntegerField, GzippedDictField, BaseManager, sane_repr
 )
-from sentry.utils.http import absolute_uri
+from sentry.models import Release
 
 
 class TagValue(Model):
@@ -49,35 +48,6 @@ class TagValue(Model):
 
     def get_label(self):
         # HACK(dcramer): quick and dirty way to hack in better display states
-        if self.key == 'sentry:user':
-            return self.data.get('email') or self.value
-        elif self.key == 'sentry:function':
-            return '%s in %s' % (self.data['function'], self.data['filename'])
-        elif self.key == 'sentry:filename':
-            return self.data['filename']
-        elif self.key == 'sentry:release' and len(self.value) == 40:
-            return self.value[:12]
+        if self.key == 'sentry:release':
+            return Release.get_display_version(self.value)
         return self.value
-
-    def get_absolute_url(self):
-        # HACK(dcramer): quick and dirty way to support code/users
-        if self.key == 'sentry:user':
-            url_name = 'sentry-user-details'
-        elif self.key == 'sentry:filename':
-            url_name = 'sentry-explore-code-details'
-        elif self.key == 'sentry:function':
-            url_name = 'sentry-explore-code-details-by-function'
-        else:
-            url_name = 'sentry-explore-tag-value'
-            return absolute_uri(
-                reverse(
-                    url_name,
-                    args=[self.project.organization.slug,
-                          self.project.slug, self.key, self.id]
-                )
-            )
-
-        return absolute_uri(
-            reverse(url_name, args=[
-                    self.project.organization.slug, self.project.slug, self.id])
-        )
diff --git a/tests/sentry/api/serializers/test_tagvalue.py b/tests/sentry/api/serializers/test_tagvalue.py
index 51d711bc21..ce2e18c42f 100644
--- a/tests/sentry/api/serializers/test_tagvalue.py
+++ b/tests/sentry/api/serializers/test_tagvalue.py
@@ -43,3 +43,18 @@ class TagValueSerializerTest(TestCase):
         assert result['key'] == 'user'
         assert result['value'] == tagvalue.value
         assert result['name'] == tagvalue.get_label()
+
+    def test_release(self):
+        user = self.create_user()
+        project = self.create_project()
+        tagvalue = TagValue.objects.create(
+            project_id=project.id,
+            key='sentry:release',
+            value='df84bccbb23ca15f2868be1f2a5f7c7a6464fadd',
+        )
+
+        result = serialize(tagvalue, user)
+        assert result['id'] == six.text_type(tagvalue.id)
+        assert result['key'] == 'release'
+        assert result['value'] == tagvalue.value
+        assert result['name'] == tagvalue.get_label()
