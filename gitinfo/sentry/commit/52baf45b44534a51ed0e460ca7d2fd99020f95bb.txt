commit 52baf45b44534a51ed0e460ca7d2fd99020f95bb
Author: Billy Vong <billyvg@users.noreply.github.com>
Date:   Thu May 17 11:51:44 2018 -0700

    ref(js): Rename "SidebarStore" to "PreferencesStore" (#8468)
    
    This is so we can re-use this store for other preferences we want to store in Cookies

diff --git a/src/sentry/static/sentry/app/actionCreators/preferences.jsx b/src/sentry/static/sentry/app/actionCreators/preferences.jsx
new file mode 100644
index 0000000000..c08a1613fb
--- /dev/null
+++ b/src/sentry/static/sentry/app/actionCreators/preferences.jsx
@@ -0,0 +1,24 @@
+import Cookies from 'js-cookie';
+
+import PreferencesActions from '../actions/preferencesActions';
+
+const SIDEBAR_COOKIE_KEY = 'sidebar_collapsed';
+const COOKIE_ENABLED = '1';
+const COOKIE_DISABLED = '0';
+
+export function hideSidebar() {
+  PreferencesActions.hideSidebar();
+  Cookies.set(SIDEBAR_COOKIE_KEY, COOKIE_ENABLED);
+}
+
+export function showSidebar() {
+  PreferencesActions.showSidebar();
+  Cookies.set(SIDEBAR_COOKIE_KEY, COOKIE_DISABLED);
+}
+
+export function loadPreferencesState() {
+  // Set initial "collapsed" state to true or false
+  PreferencesActions.loadInitialState({
+    collapsed: Cookies.get(SIDEBAR_COOKIE_KEY) === COOKIE_ENABLED,
+  });
+}
diff --git a/src/sentry/static/sentry/app/actionCreators/sidebar.jsx b/src/sentry/static/sentry/app/actionCreators/sidebar.jsx
deleted file mode 100644
index 824229dcfc..0000000000
--- a/src/sentry/static/sentry/app/actionCreators/sidebar.jsx
+++ /dev/null
@@ -1,24 +0,0 @@
-import Cookies from 'js-cookie';
-
-import SidebarActions from '../actions/sidebarActions';
-
-const SIDEBAR_COOKIE_KEY = 'sidebar_collapsed';
-const SIDEBAR_COOKIE_ENABLED = '1';
-const SIDEBAR_COOKIE_DISABLED = '0';
-
-export function hideSidebar() {
-  SidebarActions.hideSidebar();
-  Cookies.set(SIDEBAR_COOKIE_KEY, SIDEBAR_COOKIE_ENABLED);
-}
-
-export function showSidebar() {
-  SidebarActions.showSidebar();
-  Cookies.set(SIDEBAR_COOKIE_KEY, SIDEBAR_COOKIE_DISABLED);
-}
-
-export function loadSidebarState() {
-  // Set initial "collapsed" state to true or false
-  SidebarActions.loadInitialState(
-    Cookies.get(SIDEBAR_COOKIE_KEY) === SIDEBAR_COOKIE_ENABLED
-  );
-}
diff --git a/src/sentry/static/sentry/app/actions/sidebarActions.jsx b/src/sentry/static/sentry/app/actions/preferencesActions.jsx
similarity index 52%
rename from src/sentry/static/sentry/app/actions/sidebarActions.jsx
rename to src/sentry/static/sentry/app/actions/preferencesActions.jsx
index e18febf0d7..0ab54343bc 100644
--- a/src/sentry/static/sentry/app/actions/sidebarActions.jsx
+++ b/src/sentry/static/sentry/app/actions/preferencesActions.jsx
@@ -1,9 +1,9 @@
 import Reflux from 'reflux';
 
-let SidebarActions = Reflux.createActions([
+let PreferencesActions = Reflux.createActions([
   'loadInitialState',
   'hideSidebar',
   'showSidebar',
 ]);
 
-export default SidebarActions;
+export default PreferencesActions;
diff --git a/src/sentry/static/sentry/app/components/sidebar/index.jsx b/src/sentry/static/sentry/app/components/sidebar/index.jsx
index fb33049bd7..760c520e02 100644
--- a/src/sentry/static/sentry/app/components/sidebar/index.jsx
+++ b/src/sentry/static/sentry/app/components/sidebar/index.jsx
@@ -6,13 +6,13 @@ import Reflux from 'reflux';
 import createReactClass from 'create-react-class';
 import styled, {css, cx} from 'react-emotion';
 
-import {hideSidebar, loadSidebarState, showSidebar} from 'app/actionCreators/sidebar';
+import {hideSidebar, showSidebar} from 'app/actionCreators/preferences';
 import {load as loadIncidents} from 'app/actionCreators/incidents';
 import {t} from 'app/locale';
 import ConfigStore from 'app/stores/configStore';
 import InlineSvg from 'app/components/inlineSvg';
 import SentryTypes from 'app/proptypes';
-import SidebarStore from 'app/stores/sidebarStore';
+import PreferencesStore from 'app/stores/preferencesStore';
 import theme from 'app/utils/theme';
 import space from 'app/styles/space';
 import withLatestContext from 'app/utils/withLatestContext';
@@ -50,7 +50,6 @@ class Sidebar extends React.Component {
     jQuery(document).on('click', this.documentClickHandler);
 
     loadIncidents();
-    loadSidebarState();
 
     // router can potentially not exist in server side (django) views
     // Otherwise when we change routes using collapsed sidebar, the tooltips will remain after
@@ -295,15 +294,23 @@ class Sidebar extends React.Component {
 const SidebarContainer = withRouter(
   createReactClass({
     displayName: 'SidebarContainer',
-    mixins: [Reflux.connect(SidebarStore, 'sidebar')],
+    mixins: [Reflux.listenTo(PreferencesStore, 'onPreferenceChange')],
+    getInitialState() {
+      return {
+        collapsed: PreferencesStore.getInitialState().collapsed,
+      };
+    },
+
+    onPreferenceChange(store) {
+      if (store.collapsed === this.state.collapsed) return;
+
+      this.setState({
+        collapsed: store.collapsed,
+      });
+    },
 
     render() {
-      return (
-        <Sidebar
-          {...this.props}
-          collapsed={this.state.sidebar && this.state.sidebar.collapsed}
-        />
-      );
+      return <Sidebar {...this.props} collapsed={this.state.collapsed} />;
     },
   })
 );
diff --git a/src/sentry/static/sentry/app/main.jsx b/src/sentry/static/sentry/app/main.jsx
index ee7c7aec87..b9d3eebd27 100644
--- a/src/sentry/static/sentry/app/main.jsx
+++ b/src/sentry/static/sentry/app/main.jsx
@@ -2,11 +2,11 @@ import React from 'react';
 import {Router, browserHistory} from 'react-router';
 
 import routes from 'app/routes';
-import {loadSidebarState} from 'app/actionCreators/sidebar';
+import {loadPreferencesState} from 'app/actionCreators/preferences';
 
 export default class Main extends React.Component {
   componentDidMount() {
-    loadSidebarState();
+    loadPreferencesState();
   }
 
   render() {
diff --git a/src/sentry/static/sentry/app/stores/preferencesStore.jsx b/src/sentry/static/sentry/app/stores/preferencesStore.jsx
new file mode 100644
index 0000000000..f36087fc92
--- /dev/null
+++ b/src/sentry/static/sentry/app/stores/preferencesStore.jsx
@@ -0,0 +1,43 @@
+import Reflux from 'reflux';
+import PreferencesActions from '../actions/preferencesActions';
+
+/**
+ * This store is used to hold local user preferences
+ * Side-effects (like reading/writing to cookies) are done in associated actionCreators
+ */
+const PreferencesStore = Reflux.createStore({
+  init() {
+    this.reset();
+
+    this.listenTo(PreferencesActions.hideSidebar, this.onHideSidebar);
+    this.listenTo(PreferencesActions.showSidebar, this.onShowSidebar);
+    this.listenTo(PreferencesActions.loadInitialState, this.loadInitialState);
+  },
+
+  getInitialState() {
+    return this._state;
+  },
+
+  reset() {
+    this._state = {
+      collapsed: false,
+    };
+  },
+
+  loadInitialState(state) {
+    this._state = {...state};
+    this.trigger(this._state);
+  },
+
+  onHideSidebar() {
+    this._state.collapsed = true;
+    this.trigger(this._state);
+  },
+
+  onShowSidebar() {
+    this._state.collapsed = false;
+    this.trigger(this._state);
+  },
+});
+
+export default PreferencesStore;
diff --git a/src/sentry/static/sentry/app/stores/sidebarStore.jsx b/src/sentry/static/sentry/app/stores/sidebarStore.jsx
deleted file mode 100644
index 5000995861..0000000000
--- a/src/sentry/static/sentry/app/stores/sidebarStore.jsx
+++ /dev/null
@@ -1,39 +0,0 @@
-import Reflux from 'reflux';
-import SidebarActions from '../actions/sidebarActions';
-
-const SidebarStore = Reflux.createStore({
-  init() {
-    this.reset();
-
-    this.listenTo(SidebarActions.hideSidebar, this.onHideSidebar);
-    this.listenTo(SidebarActions.showSidebar, this.onShowSidebar);
-    this.listenTo(SidebarActions.loadInitialState, this.loadInitialState);
-  },
-
-  getInitialState() {
-    return this._state;
-  },
-
-  reset() {
-    this._state = {
-      collapsed: false,
-    };
-  },
-
-  loadInitialState(collapsed) {
-    this._state.collapsed = collapsed;
-    this.trigger(this._state);
-  },
-
-  onHideSidebar() {
-    this._state.collapsed = true;
-    this.trigger(this._state);
-  },
-
-  onShowSidebar() {
-    this._state.collapsed = false;
-    this.trigger(this._state);
-  },
-});
-
-export default SidebarStore;
