commit eea5a3e269f7001ca9550728acfcfdc433ea0593
Author: Matt Robenolt <matt@ydekproductions.com>
Date:   Tue Sep 22 15:12:04 2015 -0700

    Sanitize tag key names

diff --git a/src/sentry/event_manager.py b/src/sentry/event_manager.py
index 3db5ea9d5f..e6d61e3521 100644
--- a/src/sentry/event_manager.py
+++ b/src/sentry/event_manager.py
@@ -10,6 +10,7 @@ from __future__ import absolute_import, print_function
 import logging
 import math
 import six
+import re
 
 from datetime import datetime, timedelta
 from django.conf import settings
@@ -38,6 +39,9 @@ from sentry.tasks.post_process import post_process_group
 from sentry.utils.db import get_db_engine
 from sentry.utils.safe import safe_execute, trim, trim_dict
 
+# Valid pattern for tag key names
+TAG_KEY_RE = re.compile(r'^[a-zA-Z0-9_\.:-]+$')
+
 
 def count_limit(count):
     # TODO: could we do something like num_to_store = max(math.sqrt(100*count)+59, 200) ?
@@ -171,7 +175,11 @@ class EventManager(object):
         if not data.get('logger'):
             data['logger'] = DEFAULT_LOGGER_NAME
         else:
-            data['logger'] = trim(data['logger'], 64)
+            logger = trim(data['logger'].strip(), 64)
+            if TAG_KEY_RE.match(logger):
+                data['logger'] = logger
+            else:
+                data['logger'] = DEFAULT_LOGGER_NAME
 
         if data.get('platform'):
             data['platform'] = trim(data['platform'], 64)
@@ -227,6 +235,10 @@ class EventManager(object):
 
             if len(value) > MAX_TAG_VALUE_LENGTH:
                 continue
+
+            if not TAG_KEY_RE.match(key):
+                continue
+
             data['tags'].append((key, value))
 
         if not isinstance(data['extra'], dict):
diff --git a/tests/sentry/test_event_manager.py b/tests/sentry/test_event_manager.py
index 22c6acbf56..35ab460962 100644
--- a/tests/sentry/test_event_manager.py
+++ b/tests/sentry/test_event_manager.py
@@ -8,7 +8,7 @@ from mock import patch
 
 from django.conf import settings
 
-from sentry.constants import MAX_CULPRIT_LENGTH
+from sentry.constants import MAX_CULPRIT_LENGTH, DEFAULT_LOGGER_NAME
 from sentry.event_manager import (
     EventManager, get_hashes_for_event, get_hashes_from_fingerprint
 )
@@ -261,6 +261,16 @@ class EventManagerTest(TransactionTestCase):
         group = event.group
         assert group.first_release.version == '1.0'
 
+    def test_bad_logger(self):
+        manager = EventManager(self.make_event(logger='foo bar'))
+        data = manager.normalize()
+        assert data['logger'] == DEFAULT_LOGGER_NAME
+
+    def test_bad_tag_key(self):
+        manager = EventManager(self.make_event(tags=[('foo bar', 'x')]))
+        data = manager.normalize()
+        assert data['tags'] == []
+
 
 class GetHashesFromEventTest(TestCase):
     @patch('sentry.interfaces.stacktrace.Stacktrace.compute_hashes')
