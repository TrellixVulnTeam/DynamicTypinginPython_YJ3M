commit 31cac625fbbf4518ddd1fb8f3926190ea5da1563
Author: David Cramer <dcramer@gmail.com>
Date:   Fri Oct 15 12:13:20 2010 -0700

    Communicating with rails API ugliness is not working (Redmine tests pass).

diff --git a/sentry/plugins/sentry_redmine/models.py b/sentry/plugins/sentry_redmine/models.py
index 78f6d9200f..313b16fc3a 100644
--- a/sentry/plugins/sentry_redmine/models.py
+++ b/sentry/plugins/sentry_redmine/models.py
@@ -28,29 +28,26 @@ class CreateRedmineIssue(GroupActionProvider):
         if request.POST:
             form = RedmineIssueForm(request.POST)
             if form.is_valid():
-                data = {
+                data = simplejson.dumps({
                     'issue': {
                         'subject': form.cleaned_data['subject'],
                         'description': form.cleaned_data['description'],
                     }
-                }
+                })
                 url = conf.REDMINE_URL + '/projects/' + conf.REDMINE_PROJECT_SLUG + '/issues.json'
                 
                 req = urllib2.Request(url, urllib.urlencode({
                     'key': conf.REDMINE_API_KEY,
                 }), headers={
-                    'Content-type': 'text/json',
+                    'Content-type': 'application/json',
                 })
                 try:
-                    print simplejson.dumps(data)
-                    response = urllib2.urlopen(req, simplejson.dumps(data)).read()
+                    response = urllib2.urlopen(req, data).read()
                 except urllib2.HTTPError, e:
                     raise Exception('%s: %s' % (e.code, e.read()))
-                    
-                print response
-                raise Exception
-                #RedmineIssue.objects.create(group=group, issue_id=response['issue_id'])
                 
+                data = simplejson.loads(response)
+                RedmineIssue.objects.create(group=group, issue_id=data['id'])
         else:
             description = 'Sentry Message: %s' % request.build_absolute_uri(group.get_absolute_url())
             description += '\n\n' + (group.traceback or group.message)
diff --git a/sentry/plugins/sentry_redmine/tests/__init__.py b/sentry/plugins/sentry_redmine/tests/__init__.py
index 56479dd074..bbdc47c6ab 100644
--- a/sentry/plugins/sentry_redmine/tests/__init__.py
+++ b/sentry/plugins/sentry_redmine/tests/__init__.py
@@ -4,7 +4,7 @@ from django.test import TestCase
 
 from sentry.models import GroupedMessage
 from sentry.plugins.sentry_redmine import conf
-from sentry.plugins.sentry_redmine.models import CreateRedmineIssue
+from sentry.plugins.sentry_redmine.models import CreateRedmineIssue, RedmineIssue
 
 class CreateIssueTest(TestCase):
     fixtures = ['sentry/plugins/sentry_redmine/tests/fixtures/regression.json']
@@ -32,4 +32,5 @@ class CreateIssueTest(TestCase):
         })
         self.assertEquals(response.status_code, 200)
         self.assertTemplateUsed(response, 'sentry/plugins/redmine/create_issue.html')
-        
\ No newline at end of file
+        
+        self.assertTrue(RedmineIssue.objects.filter(group=group).exists())
\ No newline at end of file
