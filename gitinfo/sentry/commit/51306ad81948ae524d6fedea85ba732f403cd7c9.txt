commit 51306ad81948ae524d6fedea85ba732f403cd7c9
Author: David Cramer <dcramer@gmail.com>
Date:   Wed Aug 17 14:35:39 2016 -0700

    Utilize six.raise_from on lock exceptions (#3952)
    
    * Utilize six.raise_from on lock exceptions
    
    @tkaemming

diff --git a/src/sentry/utils/locking/lock.py b/src/sentry/utils/locking/lock.py
index a3c1fbc02b..23ce507929 100644
--- a/src/sentry/utils/locking/lock.py
+++ b/src/sentry/utils/locking/lock.py
@@ -1,6 +1,7 @@
 from __future__ import absolute_import
 
 import logging
+import six
 
 from contextlib import contextmanager
 
@@ -32,7 +33,7 @@ class Lock(object):
         try:
             self.backend.acquire(self.key, self.duration, self.routing_key)
         except Exception as error:
-            raise UnableToAcquireLock('Unable to acquire {!r} due to error: {}'.format(self, error))
+            six.raise_from(UnableToAcquireLock('Unable to acquire {!r} due to error: {}'.format(self, error)), error)
 
         @contextmanager
         def releaser():
