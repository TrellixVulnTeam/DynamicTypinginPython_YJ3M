commit 1b275a363855ad8ff56eafbcc016846f814414a5
Author: Chris Fuller <cfuller@sentry.io>
Date:   Wed Feb 26 09:48:59 2020 -0500

    Changing pre window calculation (#17246)

diff --git a/src/sentry/incidents/logic.py b/src/sentry/incidents/logic.py
index 0a42abf240..88977453bf 100644
--- a/src/sentry/incidents/logic.py
+++ b/src/sentry/incidents/logic.py
@@ -292,8 +292,8 @@ def bulk_build_incident_query_params(incidents, start=None, end=None):
             "start": incident.date_started if start is None else start,
             "end": incident.current_end_date if end is None else end,
         }
-        # Make start about 20% earlier:
-        params["start"] = params["start"] - (params["end"] - params["start"]) / 5
+        prewindow_time_range = calculate_incident_prewindow(params["start"], params["end"])
+        params["start"] = params["start"] - prewindow_time_range
         group_ids = incident_groups[incident.id]
         if group_ids:
             params["group_ids"] = group_ids
@@ -315,6 +315,15 @@ def bulk_build_incident_query_params(incidents, start=None, end=None):
     return query_args_list
 
 
+def calculate_incident_prewindow(start, end, incident=None):
+    # Make the a bit earlier to show more relevant data from before the incident started:
+    prewindow = (end - start) / 5
+    if incident and incident.alert_rule is not None:
+        alert_rule_time_window = incident.alert_rule.time_window
+        prewindow = max(alert_rule_time_window, prewindow)
+    return prewindow
+
+
 def get_incident_event_stats(incident, start=None, end=None, data_points=50):
     """
     Gets event stats for an incident. If start/end are provided, uses that time
diff --git a/tests/sentry/incidents/test_logic.py b/tests/sentry/incidents/test_logic.py
index 886521e065..c8c8ed7b75 100644
--- a/tests/sentry/incidents/test_logic.py
+++ b/tests/sentry/incidents/test_logic.py
@@ -48,6 +48,7 @@ from sentry.incidents.logic import (
     update_alert_rule_trigger_action,
     update_alert_rule_trigger,
     update_incident_status,
+    calculate_incident_prewindow,
 )
 from sentry.incidents.models import (
     AlertRule,
@@ -263,7 +264,9 @@ class GetIncidentEventStatsTest(TestCase, BaseIncidentEventStatsTest):
         assert result.rollup == 15
         expected_start = start if start else incident.date_started
         expected_end = end if end else incident.current_end_date
-        expected_start = expected_start - (expected_end - expected_start) / 5
+        expected_start = expected_start - calculate_incident_prewindow(
+            expected_start, expected_end, incident
+        )
         assert result.start == expected_start
         assert result.end == expected_end
         assert [r["count"] for r in result.data["data"]] == expected_results
@@ -286,7 +289,9 @@ class BulkGetIncidentEventStatsTest(TestCase, BaseIncidentEventStatsTest):
             assert result.rollup == 15
             expected_start = start if start else incident.date_started
             expected_end = end if end else incident.current_end_date
-            expected_start = expected_start - (expected_end - expected_start) / 5
+            expected_start = expected_start - calculate_incident_prewindow(
+                expected_start, expected_end, incident
+            )
             assert result.start == expected_start
             assert result.end == expected_end
             assert [r["count"] for r in result.data["data"]] == expected_results
@@ -558,7 +563,9 @@ class BulkGetIncidentStatusTest(TestCase, BaseIncidentsTest):
             expected_start = incident_stats["event_stats"].start
             expected_end = incident_stats["event_stats"].end
             if not changed:
-                expected_start = expected_start - (expected_end - expected_start) / 5
+                expected_start = expected_start - calculate_incident_prewindow(
+                    expected_start, expected_end, incident
+                )
                 changed = True
             assert event_stats.start == expected_start
             assert event_stats.end == expected_end
