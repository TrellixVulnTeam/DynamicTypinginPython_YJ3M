commit 5320696708eb8e9efe8e26702ab230cd81f72367
Author: Armin Ronacher <armin.ronacher@active-4.com>
Date:   Sun May 17 13:33:08 2020 +0200

    fix(sessions): Fix small inaccuracy for errored and add healthy response (#18826)

diff --git a/src/sentry/snuba/sessions.py b/src/sentry/snuba/sessions.py
index 257c6ce59f..c404c24663 100644
--- a/src/sentry/snuba/sessions.py
+++ b/src/sentry/snuba/sessions.py
@@ -382,7 +382,17 @@ def get_project_release_stats(project_id, release, stat, rollup, start, end, env
     buckets = int((end - start).total_seconds() / rollup)
     stats = _make_stats(start, rollup, buckets, default=None)
 
-    totals = {stat: 0, stat + "_crashed": 0, stat + "_abnormal": 0, stat + "_errored": 0}
+    # Due to the nature of the probabilistic data structures some
+    # subtractions can become negative.  As such we're making sure a number
+    # never goes below zero to avoid confusion.
+
+    totals = {
+        stat: 0,
+        stat + "_healthy": 0,
+        stat + "_crashed": 0,
+        stat + "_abnormal": 0,
+        stat + "_errored": 0,
+    }
 
     for rv in raw_query(
         dataset=Dataset.Sessions,
@@ -405,11 +415,13 @@ def get_project_release_stats(project_id, release, stat, rollup, start, end, env
         bucket = int((ts - start).total_seconds() / rollup)
         stats[bucket][1] = {
             stat: rv[stat],
+            stat + "_healthy": max(0, rv[stat] - rv[stat + "_errored"]),
             stat + "_crashed": rv[stat + "_crashed"],
             stat + "_abnormal": rv[stat + "_abnormal"],
-            # Due to the nature of the probabilistic data structures this
-            # subtraction can become negative.
-            stat + "_errored": max(0, rv[stat + "_errored"] - rv[stat + "_crashed"]),
+            stat
+            + "_errored": max(
+                0, rv[stat + "_errored"] - rv[stat + "_crashed"] - rv[stat + "_abnormal"]
+            ),
             "duration_p50": _convert_duration(rv["duration_quantiles"][0]),
             "duration_p90": _convert_duration(rv["duration_quantiles"][1]),
         }
@@ -418,12 +430,13 @@ def get_project_release_stats(project_id, release, stat, rollup, start, end, env
         # as the data becomes available.
         if stat == "sessions":
             for k in totals:
-                totals[k] += rv[k]
+                totals[k] += stats[bucket][1][k]
 
     for idx, bucket in enumerate(stats):
         if bucket[1] is None:
             stats[idx][1] = {
                 stat: 0,
+                stat + "_healthy": 0,
                 stat + "_crashed": 0,
                 stat + "_abnormal": 0,
                 stat + "_errored": 0,
@@ -445,11 +458,12 @@ def get_project_release_stats(project_id, release, stat, rollup, start, end, env
             rv = rows[0]
             totals = {
                 "users": rv["users"],
+                "users_healthy": max(0, rv["users"] - rv["users_errored"]),
                 "users_crashed": rv["users_crashed"],
                 "users_abnormal": rv["users_abnormal"],
-                # Due to the nature of the probabilistic data structures this
-                # subtraction can become negative.
-                "users_errored": max(0, rv["users_errored"] - rv["users_crashed"]),
+                "users_errored": max(
+                    0, rv["users_errored"] - rv["users_crashed"] - rv["users_abnormal"]
+                ),
             }
 
     return stats, totals
