commit f7ceae60f00959c7ef19043af63bd65a3fb842eb
Author: James Muranga <jmured@gmail.com>
Date:   Sun Mar 19 13:26:20 2017 -0700

    Show the relevant event if present when searching by event id (#5101)
    
    * Ensures that the relevant event is shown if present when you search by the event id
    
    * Adds the project id to the query to get the matching event

diff --git a/src/sentry/api/endpoints/project_group_index.py b/src/sentry/api/endpoints/project_group_index.py
index 6706f37143..d4b1840257 100644
--- a/src/sentry/api/endpoints/project_group_index.py
+++ b/src/sentry/api/endpoints/project_group_index.py
@@ -25,6 +25,7 @@ from sentry.models import (
     GroupResolution, GroupSeen, GroupSnooze, GroupStatus, GroupSubscription,
     GroupSubscriptionReason, Release, TagKey
 )
+from sentry.models.event import Event
 from sentry.models.group import looks_like_short_id
 from sentry.search.utils import InvalidQuery, parse_query
 from sentry.tasks.deletion import delete_group
@@ -215,6 +216,7 @@ class ProjectGroupIndexEndpoint(ProjectEndpoint):
         query = request.GET.get('query', '').strip()
         if query:
             matching_group = None
+            matching_event = None
             if len(query) == 32:
                 # check to see if we've got an event ID
                 try:
@@ -226,6 +228,10 @@ class ProjectGroupIndexEndpoint(ProjectEndpoint):
                     pass
                 else:
                     matching_group = Group.objects.get(id=mapping.group_id)
+                    try:
+                        matching_event = Event.objects.get(event_id=query, project_id=project.id)
+                    except Event.DoesNotExist:
+                        pass
 
             # If the query looks like a short id, we want to provide some
             # information about where that is.  Note that this can return
@@ -241,7 +247,7 @@ class ProjectGroupIndexEndpoint(ProjectEndpoint):
             if matching_group is not None:
                 response = Response(serialize(
                     [matching_group], request.user, StreamGroupSerializer(
-                        stats_period=stats_period
+                        stats_period=stats_period, matching_event_id=getattr(matching_event, 'id', None)
                     )
                 ))
                 response['X-Sentry-Direct-Hit'] = '1'
diff --git a/src/sentry/api/serializers/models/group.py b/src/sentry/api/serializers/models/group.py
index 9f78f2be1d..bc8c858917 100644
--- a/src/sentry/api/serializers/models/group.py
+++ b/src/sentry/api/serializers/models/group.py
@@ -239,11 +239,12 @@ class StreamGroupSerializer(GroupSerializer):
         '24h': StatsPeriod(24, timedelta(hours=1)),
     }
 
-    def __init__(self, stats_period=None):
+    def __init__(self, stats_period=None, matching_event_id=None):
         if stats_period is not None:
             assert stats_period in self.STATS_PERIOD_CHOICES
 
         self.stats_period = stats_period
+        self.matching_event_id = matching_event_id
 
     def get_attrs(self, item_list, user):
         attrs = super(StreamGroupSerializer, self).get_attrs(item_list, user)
@@ -277,6 +278,9 @@ class StreamGroupSerializer(GroupSerializer):
                 self.stats_period: attrs['stats'],
             }
 
+        if self.matching_event_id:
+            result['matchingEventId'] = self.matching_event_id
+
         return result
 
 
diff --git a/src/sentry/static/sentry/app/views/stream.jsx b/src/sentry/static/sentry/app/views/stream.jsx
index adef73acfb..821c34bffe 100644
--- a/src/sentry/static/sentry/app/views/stream.jsx
+++ b/src/sentry/static/sentry/app/views/stream.jsx
@@ -356,6 +356,10 @@ const Stream = React.createClass({
         // the current props one as the shortIdLookup can return results for
         // different projects.
         if (jqXHR.getResponseHeader('X-Sentry-Direct-Hit') === '1') {
+           if (data[0].matchingEventId){
+            return void browserHistory.pushState(null,
+              `/${this.props.params.orgId}/${data[0].project.slug}/issues/${data[0].id}/events/${data[0].matchingEventId}/`);
+          }
           return void browserHistory.pushState(null,
             `/${this.props.params.orgId}/${data[0].project.slug}/issues/${data[0].id}/`);
         }
diff --git a/tests/sentry/api/endpoints/test_project_group_index.py b/tests/sentry/api/endpoints/test_project_group_index.py
index dfe756ee4e..c45b83cb36 100644
--- a/tests/sentry/api/endpoints/test_project_group_index.py
+++ b/tests/sentry/api/endpoints/test_project_group_index.py
@@ -17,6 +17,7 @@ from sentry.models import (
     GroupTagValue, GroupResolution, GroupSeen, GroupSnooze, GroupStatus,
     GroupSubscription, Release
 )
+from sentry.models.event import Event
 from sentry.testutils import APITestCase
 from sentry.testutils.helpers import parse_link_header
 
@@ -181,8 +182,13 @@ class GroupListTest(APITestCase):
         project.update_option('sentry:resolve_age', 1)
         group = self.create_group(checksum='a' * 32)
         self.create_group(checksum='b' * 32)
+        event_id = 'c' * 32
+        event = Event.objects.create(
+            project_id=self.project.id,
+            event_id=event_id
+        )
         EventMapping.objects.create(
-            event_id='c' * 32,
+            event_id=event_id,
             project=group.project,
             group=group,
         )
@@ -193,6 +199,7 @@ class GroupListTest(APITestCase):
         assert response.status_code == 200
         assert len(response.data) == 1
         assert response.data[0]['id'] == six.text_type(group.id)
+        assert response.data[0]['matchingEventId'] == event.id
 
     def test_lookup_by_event_id_with_whitespace(self):
         project = self.project
