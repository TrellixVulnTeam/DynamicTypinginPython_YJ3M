commit af3ba18f59ecdf190ac2a3682970dcf02d5d9083
Author: Jess MacQueen <jess@getsentry.com>
Date:   Thu Aug 25 11:08:11 2016 -0700

    add organization issue search by user email endpoint
    
    add get_user_orgs method to user model
    
    add endpoint for issue search across org
    
    Revert "add endpoint for issue search across org"
    
    This reverts commit 2b00d1498fb72339519d43196b08efebcd01f2cd.
    
    add basic cross-org user email issue search
    
    add limit, date order by to org user search endpoint
    
    use user.get_orgs in user org endpoint

diff --git a/src/sentry/api/endpoints/organization_user_issues_search.py b/src/sentry/api/endpoints/organization_user_issues_search.py
new file mode 100644
index 0000000000..a473051f51
--- /dev/null
+++ b/src/sentry/api/endpoints/organization_user_issues_search.py
@@ -0,0 +1,49 @@
+from __future__ import absolute_import
+
+from rest_framework.response import Response
+
+from sentry.api.bases.organization import OrganizationEndpoint
+from sentry.api.serializers import serialize
+from sentry.api.serializers.models.group import StreamGroupSerializer
+from sentry.models import EventUser, Group, GroupTagValue, Project
+
+
+class OrganizationUserIssuesSearchEndpoint(OrganizationEndpoint):
+
+    def get(self, request, organization):
+        email = request.GET.get('email')
+
+        if email is None:
+            return Response(status=400)
+
+        limit = request.GET.get('limit', 100)
+
+        team_list = list(request.access.teams)
+        projects = Project.objects.filter(
+            team__in=team_list,
+        )
+
+        event_users = EventUser.objects.filter(email=email,
+                                               project_id__in=[p.id for p in projects])
+
+        projects = list(set([e.project_id for e in event_users]))
+
+        tag_values = [eu.tag_value for eu in event_users]
+        tags = GroupTagValue.objects.filter(key='sentry:user',
+                                            value__in=tag_values,
+                                            project_id__in=projects)
+
+        group_ids = tags.values_list('group_id', flat=True)
+
+        groups = Group.objects.filter(id__in=group_ids,
+                                      project_id__in=projects).order_by('-last_seen')[:limit]
+
+        context = serialize(
+            list(groups), request.user, StreamGroupSerializer(
+                stats_period=None
+            )
+        )
+
+        response = Response(context)
+
+        return response
diff --git a/src/sentry/api/endpoints/user_organizations.py b/src/sentry/api/endpoints/user_organizations.py
index a23a3a6e62..968cff5461 100644
--- a/src/sentry/api/endpoints/user_organizations.py
+++ b/src/sentry/api/endpoints/user_organizations.py
@@ -5,19 +5,11 @@ from django.db.models import Q
 from sentry.api.bases.user import UserEndpoint
 from sentry.api.paginator import OffsetPaginator
 from sentry.api.serializers import serialize
-from sentry.models import (
-    Organization, OrganizationMember, OrganizationStatus
-)
 
 
 class UserOrganizationsEndpoint(UserEndpoint):
     def get(self, request, user):
-        queryset = Organization.objects.filter(
-            status=OrganizationStatus.VISIBLE,
-            id__in=OrganizationMember.objects.filter(
-                user=user,
-            ).values('organization'),
-        )
+        queryset = user.get_orgs()
 
         query = request.GET.get('query')
         if query:
diff --git a/src/sentry/api/urls.py b/src/sentry/api/urls.py
index d4465a9424..6f0a91db51 100644
--- a/src/sentry/api/urls.py
+++ b/src/sentry/api/urls.py
@@ -42,6 +42,7 @@ from .endpoints.organization_index import OrganizationIndexEndpoint
 from .endpoints.organization_projects import OrganizationProjectsEndpoint
 from .endpoints.organization_stats import OrganizationStatsEndpoint
 from .endpoints.organization_teams import OrganizationTeamsEndpoint
+from .endpoints.organization_user_issues_search import OrganizationUserIssuesSearchEndpoint
 from .endpoints.project_details import ProjectDetailsEndpoint
 from .endpoints.project_docs import ProjectDocsEndpoint
 from .endpoints.project_docs_platform import ProjectDocsPlatformEndpoint
@@ -156,6 +157,9 @@ urlpatterns = patterns(
     url(r'^organizations/(?P<organization_slug>[^\/]+)/members/$',
         OrganizationMemberIndexEndpoint.as_view(),
         name='sentry-api-0-organization-member-index'),
+    url(r'^organizations/(?P<organization_slug>[^\/]+)/users/(?:issues|groups)/$',
+        OrganizationUserIssuesSearchEndpoint.as_view(),
+        name='sentry-api-0-organization-issue-search'),
     url(r'^organizations/(?P<organization_slug>[^\/]+)/members/(?P<member_id>[^\/]+)/$',
         OrganizationMemberDetailsEndpoint.as_view(),
         name='sentry-api-0-organization-member-details'),
diff --git a/src/sentry/models/user.py b/src/sentry/models/user.py
index 5cf0528219..ff64ce6702 100644
--- a/src/sentry/models/user.py
+++ b/src/sentry/models/user.py
@@ -224,3 +224,14 @@ class User(BaseModel, AbstractBaseUser):
         super(User, self).set_password(raw_password)
         self.last_password_change = timezone.now()
         self.is_password_expired = False
+
+    def get_orgs(self):
+        from sentry.models import (
+            Organization, OrganizationMember, OrganizationStatus
+        )
+        return Organization.objects.filter(
+            status=OrganizationStatus.VISIBLE,
+            id__in=OrganizationMember.objects.filter(
+                user=self,
+            ).values('organization'),
+        )
