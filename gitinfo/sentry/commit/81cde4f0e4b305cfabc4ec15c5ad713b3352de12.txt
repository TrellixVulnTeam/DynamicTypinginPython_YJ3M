commit 81cde4f0e4b305cfabc4ec15c5ad713b3352de12
Author: David Cramer <dcramer@gmail.com>
Date:   Mon Feb 4 15:30:01 2013 -0800

    Ensure we always return a sane http response for API errors (500s)

diff --git a/src/sentry/web/api.py b/src/sentry/web/api.py
index 1794614bf1..6c230dadaf 100644
--- a/src/sentry/web/api.py
+++ b/src/sentry/web/api.py
@@ -100,18 +100,28 @@ class APIView(BaseView):
 
     @csrf_exempt
     def dispatch(self, request, project_id=None, *args, **kwargs):
-        origin = self.get_request_origin(request)
+        try:
+            origin = self.get_request_origin(request)
 
-        response = self._dispatch(request, project_id=project_id, *args, **kwargs)
+            response = self._dispatch(request, project_id=project_id, *args, **kwargs)
+        except Exception:
+            response = HttpResponse(status=500)
 
         if response.status_code != 200:
             # Set X-Sentry-Error as in many cases it is easier to inspect the headers
             response['X-Sentry-Error'] = response.content[:200]  # safety net on content length
 
-            logger.info('status=%s project_id=%s %s', response.status_code, project_id,
+            if response.status_code == 500:
+                func = logger.error
+                exc_info = True
+            else:
+                func = logger.info
+                exc_info = None
+
+            func('status=%s project_id=%s %s', response.status_code, project_id,
                 response['X-Sentry-Error'], extra={
                     'request': request,
-                },
+                }, exc_info=exc_info,
             )
 
             if origin:
