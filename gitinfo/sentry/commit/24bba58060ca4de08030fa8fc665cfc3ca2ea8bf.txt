commit 24bba58060ca4de08030fa8fc665cfc3ca2ea8bf
Author: David Cramer <dcramer@gmail.com>
Date:   Tue Oct 31 11:49:12 2017 -0700

    feat(selenium): Switch to headless Chrome
    
    This also moves us to using Trusty for Travis, which enables the Google Chrome addon.
    
    Lastly, it disables Cassandra on Travis as it seems broken on trusty images.

diff --git a/.travis.yml b/.travis.yml
index a53e97e7ec..0bd5c20b68 100644
--- a/.travis.yml
+++ b/.travis.yml
@@ -1,6 +1,6 @@
 filter_secrets: false
 sudo: false
-dist: precise
+dist: trusty
 language: python
 rvm:
   - 2.2
@@ -19,6 +19,7 @@ addons:
     packages:
       - g++-4.8
       - libxmlsec1-dev
+  chrome: stable
 env:
   global:
     - NODE_ENV=production
@@ -29,6 +30,7 @@ env:
     - CXX=g++-4.8
     - SOUTH_TESTS_MIGRATE=1
 install:
+  - 'export PATH=$PATH:~/.bin'
   - nvm install $TRAVIS_NODE_VERSION
   - npm install -g yarn@1.3.2
   - make travis-install-$TEST_SUITE
@@ -63,17 +65,13 @@ matrix:
     - language: ruby
       rvm: 2.2
       env: TEST_SUITE=danger
-    # only the sqlite suite runs cassandra/riak tests
+    # only the sqlite suite runs riak tests
     - python: 2.7
       env: TEST_SUITE=sqlite DB=sqlite
       services:
         - memcached
         - riak
         - redis-server
-        - cassandra
-      before_script:
-        - make travis-setup-cassandra
-        - pip freeze
     - python: 2.7
       env: TEST_SUITE=postgres DB=postgres
       services:
diff --git a/Brewfile b/Brewfile
index bf0b63396e..8febf802d8 100644
--- a/Brewfile
+++ b/Brewfile
@@ -1,2 +1,3 @@
 brew 'libxmlsec1'
 brew 'openssl'
+brew 'chromedriver'
diff --git a/Makefile b/Makefile
index f2a09c56d8..a0bc631048 100644
--- a/Makefile
+++ b/Makefile
@@ -20,9 +20,6 @@ install-yarn:
 	@hash yarn 2> /dev/null || (echo 'Cannot continue with JavaScript dependencies. Please install yarn before proceeding. For more information refer to https://yarnpkg.com/lang/en/docs/install/'; echo 'If you are on a mac run:'; echo '  brew install yarn'; exit 1)
 	# Use NODE_ENV=development so that yarn installs both dependencies + devDependencies
 	NODE_ENV=development yarn install --pure-lockfile
-	# Fix phantomjs-prebuilt not installed via yarn
-	# See: https://github.com/karma-runner/karma-phantomjs-launcher/issues/120#issuecomment-262634703
-	node ./node_modules/phantomjs-prebuilt/install.js
 
 install-brew:
 	@hash brew 2> /dev/null && brew bundle || (echo '! Homebrew not found, skipping system dependencies.')
@@ -213,6 +210,12 @@ travis-install-mysql: travis-install-python
 	pip install mysqlclient
 	echo 'create database sentry;' | mysql -uroot
 travis-install-acceptance: install-yarn travis-install-postgres
+	wget -N http://chromedriver.storage.googleapis.com/2.33/chromedriver_linux64.zip -P ~/
+	unzip ~/chromedriver_linux64.zip -d ~/
+	rm ~/chromedriver_linux64.zip
+	chmod +x ~/chromedriver
+	mkdir -p ~/.bin
+	mv ~/chromedriver ~/.bin/
 travis-install-network: travis-install-postgres
 travis-install-js:
 	$(MAKE) travis-upgrade-pip
diff --git a/package.json b/package.json
index d4b1797172..bc2437373b 100644
--- a/package.json
+++ b/package.json
@@ -99,7 +99,7 @@
     "moduleNameMapper": {
       "\\.(css|less)$": "<rootDir>/tests/js/helpers/importStyleMock.js",
       "jquery": "<rootDir>/src/sentry/static/sentry/__mocks__/jquery.jsx",
-      "integration-docs-platforms": "<rootDir>/tests/fixtures/_platforms.json"
+      "integration-docs-platforms": "<rootDir>/tests/fixtures/integration-docs/_platforms.json"
     },
     "modulePaths": [
       "<rootDir>/src/sentry/static/sentry"
@@ -133,7 +133,6 @@
     "eslint-plugin-import": "^2.7.0",
     "eslint-plugin-react": "7.4.0",
     "jest": "21.2.1",
-    "phantomjs-prebuilt": "2.1.14",
     "prettier": "1.7.4",
     "sinon": "1.17.2",
     "sinon-chai": "2.8.0",
diff --git a/requirements-base.txt b/requirements-base.txt
index d5051ac37c..4d8b4305be 100644
--- a/requirements-base.txt
+++ b/requirements-base.txt
@@ -39,7 +39,7 @@ PyYAML>=3.11,<3.12
 raven>=5.29.0,<6.0.0
 redis>=2.10.3,<2.10.6
 requests[security]>=2.18.4,<2.19.0
-selenium==3.4.3
+selenium==3.8.0
 simplejson>=3.2.0,<3.9.0
 six>=1.10.0,<1.11.0
 setproctitle>=1.1.7,<1.2.0
diff --git a/setup.cfg b/setup.cfg
index 905b0dc93a..6f7c41192c 100644
--- a/setup.cfg
+++ b/setup.cfg
@@ -3,8 +3,7 @@ python_files = test*.py
 addopts = --tb=native -p no:doctest -p no:warnings
 norecursedirs = bin dist docs htmlcov script hooks node_modules .* {args}
 looponfailroots = src tests
-selenium_driver = phantomjs
-phantomjs_path = node_modules/phantomjs-prebuilt/bin/phantomjs
+selenium_driver = chrome
 
 [flake8]
 ignore = F999,E501,E128,E124,E402,W503,E731,C901
diff --git a/src/sentry/receivers/superuser.py b/src/sentry/receivers/superuser.py
index b05d43414e..66bb99570b 100644
--- a/src/sentry/receivers/superuser.py
+++ b/src/sentry/receivers/superuser.py
@@ -11,7 +11,7 @@ def enable_superuser(request, user, **kwargs):
         if user.is_superuser:
             su.set_logged_in(user)
         else:
-            su.set_logged_out()
+            su._set_logged_out()
 
 
 def disable_superuser(request, user, **kwargs):
diff --git a/src/sentry/utils/integrationdocs.py b/src/sentry/utils/integrationdocs.py
index 69efe8f4fb..01deb84593 100644
--- a/src/sentry/utils/integrationdocs.py
+++ b/src/sentry/utils/integrationdocs.py
@@ -12,7 +12,8 @@ import sentry
 BASE_URL = 'https://docs.sentry.io/_platforms/{}'
 
 # Also see INTEGRATION_DOC_FOLDER in setup.py
-DOC_FOLDER = os.path.abspath(os.path.join(os.path.dirname(sentry.__file__), 'integration-docs'))
+DOC_FOLDER = os.environ.get('INTEGRATION_DOC_FOLDER') or os.path.abspath(
+    os.path.join(os.path.dirname(sentry.__file__), 'integration-docs'))
 
 # We cannot leverage six here, so we need to vendor
 # bits that we need.
diff --git a/src/sentry/utils/pytest/selenium.py b/src/sentry/utils/pytest/selenium.py
index 5b8e02c326..1d6438d021 100644
--- a/src/sentry/utils/pytest/selenium.py
+++ b/src/sentry/utils/pytest/selenium.py
@@ -45,18 +45,22 @@ class Browser(object):
 
     def get(self, path, *args, **kwargs):
         self.driver.get(self.route(path), *args, **kwargs)
+        self._has_initialized_cookie_store = True
         return self
 
     def post(self, path, *args, **kwargs):
         self.driver.post(self.route(path), *args, **kwargs)
+        self._has_initialized_cookie_store = True
         return self
 
     def put(self, path, *args, **kwargs):
         self.driver.put(self.route(path), *args, **kwargs)
+        self._has_initialized_cookie_store = True
         return self
 
     def delete(self, path, *args, **kwargs):
         self.driver.delete(self.route(path), *args, **kwargs)
+        self._has_initialized_cookie_store = True
         return self
 
     def element(self, selector):
@@ -72,32 +76,59 @@ class Browser(object):
     def click(self, selector):
         self.element(selector).click()
 
-    def wait_until(self, selector, timeout=3):
+    def wait_until(self, selector=None, title=None, timeout=3):
         """
         Waits until ``selector`` is found in the browser, or until ``timeout``
         is hit, whichever happens first.
         """
         from selenium.webdriver.common.by import By
 
+        if selector:
+            condition = expected_conditions.presence_of_element_located((By.CSS_SELECTOR, selector))
+        elif title:
+            condition = expected_conditions.title_is(title)
+        else:
+            raise ValueError
+
         WebDriverWait(
             self.driver, timeout
-        ).until(expected_conditions.presence_of_element_located((By.CSS_SELECTOR, selector)))
+        ).until(condition)
 
         return self
 
-    def wait_until_not(self, selector, timeout=3):
+    def wait_until_not(self, selector=None, title=None, timeout=3):
         """
         Waits until ``selector`` is NOT found in the browser, or until
         ``timeout`` is hit, whichever happens first.
         """
         from selenium.webdriver.common.by import By
 
+        if selector:
+            condition = expected_conditions.presence_of_element_located((By.CSS_SELECTOR, selector))
+        elif title:
+            condition = expected_conditions.title_is(title)
+        else:
+            raise
+
         WebDriverWait(
             self.driver, timeout
-        ).until_not(expected_conditions.presence_of_element_located((By.CSS_SELECTOR, selector)))
+        ).until_not(condition)
 
         return self
 
+    @property
+    def switch_to(self):
+        return self.driver.switch_to
+
+    def implicitly_wait(self, duration):
+        """
+        An implicit wait tells WebDriver to poll the DOM for a certain amount of
+        time when trying to find any element (or elements) not immediately
+        available. The default setting is 0. Once set, the implicit wait is set
+        for the life of the WebDriver object.
+        """
+        self.driver.implicitly_wait(duration)
+
     def snapshot(self, name):
         """
         Capture a screenshot of the current state of the page. Screenshots
@@ -110,40 +141,51 @@ class Browser(object):
         return self
 
     def save_cookie(self, name, value, path='/', expires='Tue, 20 Jun 2025 19:07:44 GMT'):
-        # XXX(dcramer): "hit a url before trying to set cookies"
+        cookie = {
+            'name': name,
+            'value': value,
+            'expires': expires,
+            'path': path,
+            'domain': self.domain,
+        }
+
+        # XXX(dcramer): the cookie store must be initialized via a URL
         if not self._has_initialized_cookie_store:
             logger.info('selenium.initialize-cookies')
             self.get('/')
-            self._has_initialized_cookie_store = True
 
         # XXX(dcramer): PhantomJS does not let us add cookies with the native
         # selenium API because....
         # http://stackoverflow.com/questions/37103621/adding-cookies-working-with-firefox-webdriver-but-not-in-phantomjs
+
         # TODO(dcramer): this should be escaped, but idgaf
-        logger.info('selenium.set-cookies.{}'.format(name), extra={
+        logger.info('selenium.set-cookie.{}'.format(name), extra={
             'value': value,
         })
-
-        self.driver.execute_script(
-            "document.cookie = '{name}={value}; path={path}; domain={domain}; expires={expires}';\n".
-            format(
-                name=name,
-                value=value,
-                expires=expires,
-                path=path,
-                domain=self.domain,
+        if isinstance(self.driver, webdriver.PhantomJS):
+            self.driver.execute_script(
+                "document.cookie = '{name}={value}; path={path}; domain={domain}; expires={expires}';\n".format(
+                    **cookie)
             )
-        )
+        else:
+            self.driver.add_cookie(cookie)
 
 
 def pytest_addoption(parser):
-    parser.addini('selenium_driver', help='selenium driver (phantomjs or firefox)')
+    parser.addini('selenium_driver', help='selenium driver (chrome, phantomjs, or firefox)')
 
     group = parser.getgroup('selenium', 'selenium')
     group._addoption(
-        '--selenium-driver', dest='selenium_driver', help='selenium driver (phantomjs or firefox)'
+        '--selenium-driver', dest='selenium_driver', help='selenium driver (chrome, phantomjs, or firefox)'
     )
+    group._addoption(
+        '--window-size',
+        dest='window_size',
+        help='window size (WIDTHxHEIGHT)',
+        default='1280x800')
     group._addoption('--phantomjs-path', dest='phantomjs_path', help='path to phantomjs driver')
+    group._addoption('--chrome-path', dest='chrome_path', help='path to google-chrome')
+    group._addoption('--chromedriver-path', dest='chromedriver_path', help='path to chromedriver')
 
 
 def pytest_configure(config):
@@ -174,8 +216,29 @@ def percy(request):
 
 @pytest.fixture(scope='function')
 def browser(request, percy, live_server):
+    window_size = request.config.getoption('window_size')
+    window_width, window_height = list(map(int, window_size.split('x', 1)))
+
     driver_type = request.config.getoption('selenium_driver')
-    if driver_type == 'firefox':
+    if driver_type == 'chrome':
+        options = webdriver.ChromeOptions()
+        options.add_argument('headless')
+        options.add_argument('disable-gpu')
+        options.add_argument('window-size={}'.format(window_size))
+        chrome_path = request.config.getoption('chrome_path')
+        if chrome_path:
+            options.binary_location = chrome_path
+        chromedriver_path = request.config.getoption('chromedriver_path')
+        if chromedriver_path:
+            driver = webdriver.Chrome(
+                executable_path=chromedriver_path,
+                chrome_options=options,
+            )
+        else:
+            driver = webdriver.Chrome(
+                chrome_options=options,
+            )
+    elif driver_type == 'firefox':
         driver = webdriver.Firefox()
     elif driver_type == 'phantomjs':
         phantomjs_path = request.config.getoption('phantomjs_path')
@@ -187,10 +250,11 @@ def browser(request, percy, live_server):
                 'phantomjs',
             )
         driver = webdriver.PhantomJS(executable_path=phantomjs_path)
-        driver.set_window_size(1280, 800)
     else:
         raise pytest.UsageError('--driver must be specified')
 
+    driver.set_window_size(window_width, window_height)
+
     def fin():
         # Teardown Selenium.
         try:
diff --git a/src/sentry/utils/pytest/sentry.py b/src/sentry/utils/pytest/sentry.py
index 5abeaf659b..9d51e29821 100644
--- a/src/sentry/utils/pytest/sentry.py
+++ b/src/sentry/utils/pytest/sentry.py
@@ -5,6 +5,15 @@ import os
 
 from django.conf import settings
 
+TEST_ROOT = os.path.normpath(
+    os.path.join(
+        os.path.dirname(__file__),
+        os.pardir,
+        os.pardir,
+        os.pardir,
+        os.pardir,
+        'tests'))
+
 
 def pytest_configure(config):
     # HACK: Only needed for testing!
@@ -12,6 +21,17 @@ def pytest_configure(config):
 
     os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'sentry.conf.server')
 
+    # override docs which are typically synchronized from an upstream server
+    # to ensure tests are consistent
+    os.environ.setdefault(
+        'INTEGRATION_DOC_FOLDER',
+        os.path.join(
+            TEST_ROOT,
+            'fixtures',
+            'integration-docs'))
+    from sentry.utils import integrationdocs
+    integrationdocs.DOC_FOLDER = os.environ['INTEGRATION_DOC_FOLDER']
+
     if not settings.configured:
         # only configure the db if its not already done
         test_db = os.environ.get('DB', 'postgres')
diff --git a/tests/acceptance/test_create_project.py b/tests/acceptance/test_create_project.py
index 4c730aefb2..d272e067ef 100644
--- a/tests/acceptance/test_create_project.py
+++ b/tests/acceptance/test_create_project.py
@@ -8,15 +8,8 @@ class CreateProjectTest(AcceptanceTestCase):
     def setUp(self):
         super(CreateProjectTest, self).setUp()
         self.user = self.create_user('foo@example.com')
-
         self.org = self.create_organization(
             name='Rowdy Tiger',
-            owner=None,
-        )
-        self.project = self.create_project(
-            organization=self.org,
-            team=self.team,
-            name='Bengal',
         )
         self.login_as(self.user)
 
@@ -37,9 +30,12 @@ class CreateProjectTest(AcceptanceTestCase):
         self.browser.snapshot(name='create project')
 
         self.browser.click('.new-project-submit')
-        self.browser.wait_until_not('.loading')
+        self.browser.wait_until(title='Mariachi Band / Java')
 
-        assert Project.objects.get(team__organization=self.org, name='Java')
+        project = Project.objects.get(organization=self.org)
+        assert project.name == 'Java'
+        assert project.platform == 'java'
+        assert project.team_id == self.team.id
         self.browser.snapshot(name='docs redirect')
 
     def test_no_teams(self):
diff --git a/tests/fixtures/_platforms.json b/tests/fixtures/integration-docs/_platforms.json
similarity index 100%
rename from tests/fixtures/_platforms.json
rename to tests/fixtures/integration-docs/_platforms.json
diff --git a/tests/fixtures/integration-docs/cocoa.json b/tests/fixtures/integration-docs/cocoa.json
new file mode 100644
index 0000000000..ba94871ee8
--- /dev/null
+++ b/tests/fixtures/integration-docs/cocoa.json
@@ -0,0 +1,6 @@
+{
+  "html": "<div class=\"section\" id=\"installation\">\n<h2>Installation</h2>\n<p>Start by adding Sentry and then linking it:</p>\n<div class=\"highlight-python\"><div class=\"highlight\" style=\"background: #ffffff\"><pre style=\"line-height: 125%\"><span></span>$ npm install react-native-sentry --save\n# or\n# yarn add react-native-sentry\n# if you are using yarn\n# this is for linking\n$ react-native link react-native-sentry\n</pre></div>\n</div>\n<p>The <cite>link</cite> step will pull in the native dependency and patch your project\naccordingly.  If you are using expo you don&#8217;t have to (or can&#8217;t) run that\nlink step.  For more information about that see <a class=\"reference internal\" href=\"https://docs.getsentry.com/hosted/clients/react-native/expo/\"><em>Using Sentry with Expo</em></a>.</p>\n<p>On linking you will automatically be prompted for your DSN and other\ninformation and we will configure your app automatically for react-native\nand change files accordingly.  You will need to provide the following\ndata: your DSN, the slug of your organization in Sentry, the slug of your\nproject in Sentry as well as the Auth token. We  need the Auth token for\nuploading the sourcemaps.</p>\n<p>You can find the slugs in the URL of your project\n(<code class=\"docutils literal\"><span class=\"pre\">sentry.io/your-org-slug/your-project-slug</span></code>) If you don&#8217;t have an auth\ntoken yet you can <a class=\"reference external\" href=\"https://sentry.io/api/\">create an auth token here</a>.</p>\n<p>Upon linking the following changes will be performed:</p>\n<ul class=\"simple\">\n<li>add the raven-java package for native crash reporting on Android</li>\n<li>add the sentry-swift package for native crash reporting on iOS</li>\n<li>enable the sentry gradle build step for android</li>\n<li>patch <cite>AppDelegate.m</cite> for iOS</li>\n<li>patch <cite>MainApplication.java</cite> for Android</li>\n<li>configure Sentry for the supplied DSN in your <cite>index.js</cite> files</li>\n<li>store build credentials in <cite>ios/sentry.properties</cite> and\n<cite>android/sentry.properties</cite>.</li>\n</ul>\n<p>To see what is happening during linking you can refer to\n<a class=\"reference internal\" href=\"https://docs.getsentry.com/hosted/clients/react-native/manual-setup/\"><em>Manual Setup</em></a> which will give you all the details.</p>\n<p>Note that we only support <code class=\"docutils literal\"><span class=\"pre\">react-native</span> <span class=\"pre\">&gt;=</span> <span class=\"pre\">0.38</span></code> at the moment.</p>\n</div>\n\n\n<div class=\"section\" id=\"client-configuration\">\n<h2>Client Configuration</h2>\n<p>Note: When you run <code class=\"docutils literal\"><span class=\"pre\">react-native</span> <span class=\"pre\">link</span></code> we will automatically update your\n<cite>index.ios.js</cite> / <cite>index.android.js</cite> with the following changes:</p>\n<div class=\"highlight-javascript\"><div class=\"highlight\" style=\"background: #ffffff\"><pre style=\"line-height: 125%\"><span></span><span style=\"color: #2eb0f7\">import</span> <span style=\"color: #111111\">{</span> <span style=\"color: #111111\">Sentry</span> <span style=\"color: #111111\">}</span> <span style=\"color: #111111\">from</span> <span style=\"color: #e8535a\">&#39;react-native-sentry&#39;</span><span style=\"color: #111111\">;</span>\n<span style=\"color: #111111\">Sentry.config(</span><span style=\"color: #e8535a\">&#39;___DSN___&#39;</span><span style=\"color: #111111\">).install();</span>\n</pre></div>\n</div>\n<p>You can pass additional configuration options to the <cite>config()</cite> method if\nyou want to do so.</p>\n</div>\n", 
+  "link": "https://docs.getsentry.com/hosted/clients/react-native/", 
+  "id": "cocoa", 
+  "name": "React-Native"
+}
diff --git a/tests/fixtures/integration-docs/csharp.json b/tests/fixtures/integration-docs/csharp.json
new file mode 100644
index 0000000000..1e172fd4b8
--- /dev/null
+++ b/tests/fixtures/integration-docs/csharp.json
@@ -0,0 +1,6 @@
+{
+  "html": "<div class=\"section\" id=\"installation\">\n<h2>Installation</h2>\n<p>A <a class=\"reference external\" href=\"https://www.nuget.org/packages/SharpRaven\">NuGet Package</a> is\navailable for SharpRaven if you don&#8217;t want to compile it yourself.</p>\n<p>Instantiate the client with your DSN:</p>\n<div class=\"highlight-csharp\"><div class=\"highlight\" style=\"background: #ffffff\"><pre style=\"line-height: 125%\"><span></span><span style=\"color: #2eb0f7\">var</span> <span style=\"color: #111111\">ravenClient</span> <span style=\"color: #111111\">=</span> <span style=\"color: #2eb0f7\">new</span> <span style=\"color: #111111\">RavenClient(</span><span style=\"color: #e8535a\">&quot;___DSN___&quot;</span><span style=\"color: #111111\">);</span>\n</pre></div>\n</div>\n</div>\n\n\n<div class=\"section\" id=\"capturing-exceptions\">\n<h2>Capturing Exceptions</h2>\n<p>Call out to the client in your catch block:</p>\n<div class=\"highlight-csharp\"><div class=\"highlight\" style=\"background: #ffffff\"><pre style=\"line-height: 125%\"><span></span><span style=\"color: #2eb0f7\">try</span>\n<span style=\"color: #111111\">{</span>\n    <span style=\"color: #2eb0f7\">int</span> <span style=\"color: #111111\">i2</span> <span style=\"color: #111111\">=</span> <span style=\"color: #45c2c9\">0</span><span style=\"color: #111111\">;</span>\n    <span style=\"color: #2eb0f7\">int</span> <span style=\"color: #111111\">i</span> <span style=\"color: #111111\">=</span> <span style=\"color: #45c2c9\">10</span> <span style=\"color: #111111\">/</span> <span style=\"color: #111111\">i2;</span>\n<span style=\"color: #111111\">}</span>\n<span style=\"color: #2eb0f7\">catch</span> <span style=\"color: #111111\">(Exception</span> <span style=\"color: #111111\">exception)</span>\n<span style=\"color: #111111\">{</span>\n    <span style=\"color: #111111\">ravenClient.Capture(</span><span style=\"color: #2eb0f7\">new</span> <span style=\"color: #111111\">SentryEvent(exception));</span>\n<span style=\"color: #111111\">}</span>\n</pre></div>\n</div>\n</div>\n", 
+  "link": "https://docs.getsentry.com/hosted/clients/csharp/", 
+  "id": "csharp", 
+  "name": "C#"
+}
diff --git a/tests/fixtures/integration-docs/elixir.json b/tests/fixtures/integration-docs/elixir.json
new file mode 100644
index 0000000000..99246c3c63
--- /dev/null
+++ b/tests/fixtures/integration-docs/elixir.json
@@ -0,0 +1,6 @@
+{
+  "html": "<div class=\"section\" id=\"installation\">\n<h2>Installation</h2>\n<p>Edit your mix.exs file to add it as a dependency and add the <code class=\"docutils literal\"><span class=\"pre\">:sentry</span></code> package to your applications:</p>\n<div class=\"highlight-elixir\"><div class=\"highlight\" style=\"background: #ffffff\"><pre style=\"line-height: 125%\"><span></span><span style=\"color: #2eb0f7\">defp</span> <span style=\"color: #111111\">application</span> <span style=\"color: #2eb0f7\">do</span>\n <span style=\"color: #111111\">[</span><span style=\"color: #e8535a\">applications</span><span style=\"color: #111111\">:</span> <span style=\"color: #111111\">[</span><span style=\"color: #e8535a\">:sentry</span><span style=\"color: #111111\">,</span> <span style=\"color: #e8535a\">:logger</span><span style=\"color: #111111\">]]</span>\n<span style=\"color: #2eb0f7\">end</span>\n\n<span style=\"color: #2eb0f7\">defp</span> <span style=\"color: #111111\">deps</span> <span style=\"color: #2eb0f7\">do</span>\n  <span style=\"color: #111111\">[{</span><span style=\"color: #e8535a\">:sentry</span><span style=\"color: #111111\">,</span> <span style=\"color: #e8535a\">&quot;~&gt; 6.0.0&quot;</span><span style=\"color: #111111\">}]</span>\n<span style=\"color: #2eb0f7\">end</span>\n</pre></div>\n</div>\n</div>\n\n\n<div class=\"section\" id=\"configuration\">\n<h2>Configuration</h2>\n<p>Setup the application production environment in your <code class=\"docutils literal\"><span class=\"pre\">config/prod.exs</span></code></p>\n<div class=\"highlight-elixir\"><div class=\"highlight\" style=\"background: #ffffff\"><pre style=\"line-height: 125%\"><span></span><span style=\"color: #111111\">config</span> <span style=\"color: #e8535a\">:sentry</span><span style=\"color: #111111\">,</span>\n  <span style=\"color: #e8535a\">dsn</span><span style=\"color: #111111\">:</span> <span style=\"color: #e8535a\">&quot;https://public:secret@app.getsentry.com/1&quot;</span><span style=\"color: #111111\">,</span>\n  <span style=\"color: #e8535a\">environment_name</span><span style=\"color: #111111\">:</span> <span style=\"color: #e8535a\">:prod</span><span style=\"color: #111111\">,</span>\n  <span style=\"color: #e8535a\">enable_source_code_context</span><span style=\"color: #111111\">:</span> <span style=\"color: #111111\">true,</span>\n  <span style=\"color: #e8535a\">root_source_code_path</span><span style=\"color: #111111\">:</span> <span style=\"color: #111111\">File</span><span style=\"color: #4b4f5c\">.</span><span style=\"color: #111111\">cwd!,</span>\n  <span style=\"color: #e8535a\">tags</span><span style=\"color: #111111\">:</span> <span style=\"color: #111111\">%{</span>\n    <span style=\"color: #e8535a\">env</span><span style=\"color: #111111\">:</span> <span style=\"color: #e8535a\">&quot;production&quot;</span>\n  <span style=\"color: #111111\">},</span>\n  <span style=\"color: #e8535a\">included_environments</span><span style=\"color: #111111\">:</span> <span style=\"color: #111111\">[</span><span style=\"color: #e8535a\">:prod</span><span style=\"color: #111111\">]</span>\n</pre></div>\n</div>\n<p>The <code class=\"docutils literal\"><span class=\"pre\">environment_name</span></code> and <code class=\"docutils literal\"><span class=\"pre\">included_environments</span></code> work together to determine\nif and when Sentry should record exceptions. The <code class=\"docutils literal\"><span class=\"pre\">environment_name</span></code> is the\nname of the current environment. In the example above, we have explicitly set\nthe environment to <code class=\"docutils literal\"><span class=\"pre\">:prod</span></code> which works well if you are inside an environment\nspecific configuration like <code class=\"docutils literal\"><span class=\"pre\">config/prod.exs</span></code>.</p>\n<p>An alternative is to use <code class=\"docutils literal\"><span class=\"pre\">Mix.env</span></code> in your general configuration file:</p>\n<div class=\"highlight-elixir\"><div class=\"highlight\" style=\"background: #ffffff\"><pre style=\"line-height: 125%\"><span></span><span style=\"color: #111111\">config</span> <span style=\"color: #e8535a\">:sentry</span><span style=\"color: #111111\">,</span> <span style=\"color: #e8535a\">dsn</span><span style=\"color: #111111\">:</span> <span style=\"color: #e8535a\">&quot;https://public:secret@app.getsentry.com/1&quot;</span>\n   <span style=\"color: #e8535a\">included_environments</span><span style=\"color: #111111\">:</span> <span style=\"color: #111111\">[</span><span style=\"color: #e8535a\">:prod</span><span style=\"color: #111111\">],</span>\n   <span style=\"color: #e8535a\">environment_name</span><span style=\"color: #111111\">:</span> <span style=\"color: #111111\">Mix</span><span style=\"color: #4b4f5c\">.</span><span style=\"color: #111111\">env</span>\n</pre></div>\n</div>\n<p>This will set the environment name to whatever the current Mix environment\natom is, but it will only send events if the current environment is <code class=\"docutils literal\"><span class=\"pre\">:prod</span></code>,\nsince that is the only entry in the <code class=\"docutils literal\"><span class=\"pre\">included_environments</span></code> key.</p>\n<p>You can even rely on more custom determinations of the environment name. It&#8217;s\nnot uncommmon for most applications to have a &#8220;staging&#8221; environment. In order\nto handle this without adding an additional Mix environment, you can set an\nenvironment variable that determines the release level.</p>\n<div class=\"highlight-elixir\"><div class=\"highlight\" style=\"background: #ffffff\"><pre style=\"line-height: 125%\"><span></span><span style=\"color: #111111\">config</span> <span style=\"color: #e8535a\">:sentry</span><span style=\"color: #111111\">,</span> <span style=\"color: #e8535a\">dsn</span><span style=\"color: #111111\">:</span> <span style=\"color: #e8535a\">&quot;https://public:secret@app.getsentry.com/1&quot;</span>\n  <span style=\"color: #e8535a\">included_environments</span><span style=\"color: #111111\">:</span> <span style=\"color: #e8535a\">~w(production staging)</span><span style=\"color: #111111\">,</span>\n  <span style=\"color: #e8535a\">environment_name</span><span style=\"color: #111111\">:</span> <span style=\"color: #111111\">System</span><span style=\"color: #4b4f5c\">.</span><span style=\"color: #111111\">get_env(</span><span style=\"color: #e8535a\">&quot;RELEASE_LEVEL&quot;</span><span style=\"color: #111111\">)</span> <span style=\"color: #4b4f5c\">||</span> <span style=\"color: #e8535a\">&quot;development&quot;</span>\n</pre></div>\n</div>\n<p>In this example, we are getting the environment name from the <code class=\"docutils literal\"><span class=\"pre\">RELEASE_LEVEL</span></code>\nenvironment variable. If that variable does not exist, we default to <code class=\"docutils literal\"><span class=\"pre\">&quot;development&quot;</span></code>.\nNow, on our servers, we can set the environment variable appropriately. On\nour local development machines, exceptions will never be sent, because the\ndefault value is not in the list of <code class=\"docutils literal\"><span class=\"pre\">included_environments</span></code>.</p>\n<p>If using an environment with Plug or Phoenix add the following to your router:</p>\n<div class=\"highlight-elixir\"><div class=\"highlight\" style=\"background: #ffffff\"><pre style=\"line-height: 125%\"><span></span><span style=\"color: #2eb0f7\">use</span> <span style=\"color: #111111\">Plug.ErrorHandler</span>\n<span style=\"color: #2eb0f7\">use</span> <span style=\"color: #111111\">Sentry.Plug</span>\n</pre></div>\n</div>\n</div>\n\n\n<div class=\"section\" id=\"capturing-errors\">\n<h2>Capturing Errors</h2>\n<p>If you use the error logger and setup Plug/Phoenix then you are already done, all errors will bubble up to\nsentry.</p>\n<p>Otherwise we provide a simple way to capture exceptions:</p>\n<div class=\"highlight-elixir\"><div class=\"highlight\" style=\"background: #ffffff\"><pre style=\"line-height: 125%\"><span></span><span style=\"color: #2eb0f7\">do</span>\n  <span style=\"color: #111111\">ThisWillError</span><span style=\"color: #4b4f5c\">.</span><span style=\"color: #111111\">reall()</span>\n<span style=\"color: #2eb0f7\">rescue</span>\n  <span style=\"color: #111111\">my_exception</span> <span style=\"color: #4b4f5c\">-&gt;</span>\n    <span style=\"color: #111111\">Sentry</span><span style=\"color: #4b4f5c\">.</span><span style=\"color: #111111\">capture_exception(my_exception,</span> <span style=\"color: #111111\">[</span><span style=\"color: #e8535a\">stacktrace</span><span style=\"color: #111111\">:</span> <span style=\"color: #111111\">System</span><span style=\"color: #4b4f5c\">.</span><span style=\"color: #111111\">stacktrace(),</span> <span style=\"color: #e8535a\">extra</span><span style=\"color: #111111\">:</span> <span style=\"color: #111111\">%{</span><span style=\"color: #e8535a\">extra</span><span style=\"color: #111111\">:</span> <span style=\"color: #111111\">information}])</span>\n<span style=\"color: #2eb0f7\">end</span>\n</pre></div>\n</div>\n</div>\n", 
+  "link": "https://docs.getsentry.com/hosted/clients/elixir/", 
+  "id": "elixir", 
+  "name": "Elixir"
+}
diff --git a/tests/fixtures/integration-docs/go-http.json b/tests/fixtures/integration-docs/go-http.json
new file mode 100644
index 0000000000..97cb76bf8d
--- /dev/null
+++ b/tests/fixtures/integration-docs/go-http.json
@@ -0,0 +1,6 @@
+{
+  "html": "<div class=\"section\" id=\"installation\">\n<h2>Installation</h2>\n<p>Simply install <code class=\"docutils literal\"><span class=\"pre\">raven-go</span></code> through <code class=\"docutils literal\"><span class=\"pre\">go</span> <span class=\"pre\">get</span></code>:</p>\n<div class=\"highlight-python\"><div class=\"highlight\" style=\"background: #ffffff\"><pre style=\"line-height: 125%\"><span></span>$ go get github.com/getsentry/raven-go\n</pre></div>\n</div>\n</div>\n\n\n<div class=\"section\" id=\"setup\">\n<h2>Setup</h2>\n<p>Make sure that you&#8217;ve set configured <code class=\"docutils literal\"><span class=\"pre\">raven</span></code> with your DSN, typically inside the <code class=\"docutils literal\"><span class=\"pre\">init()</span></code>\nin your <code class=\"docutils literal\"><span class=\"pre\">main</span></code> package is a good place.</p>\n<div class=\"highlight-go\"><div class=\"highlight\" style=\"background: #ffffff\"><pre style=\"line-height: 125%\"><span></span><span style=\"color: #2eb0f7\">package</span> <span style=\"color: #111111\">main</span>\n\n<span style=\"color: #2eb0f7\">import</span> <span style=\"color: #e8535a\">&quot;github.com/getsentry/raven-go&quot;</span>\n\n<span style=\"color: #2eb0f7\">func</span> <span style=\"color: #111111\">init()</span> <span style=\"color: #111111\">{</span>\n    <span style=\"color: #111111\">raven.SetDSN(</span><span style=\"color: #e8535a\">&quot;___DSN___&quot;</span><span style=\"color: #111111\">)</span>\n<span style=\"color: #111111\">}</span>\n</pre></div>\n</div>\n<p>If you don&#8217;t call <code class=\"docutils literal\"><span class=\"pre\">SetDSN</span></code>, we will attempt to read it from your environment under the\n<code class=\"docutils literal\"><span class=\"pre\">SENTRY_DSN</span></code> environment variable.</p>\n<p>Next, we need to wrap our <code class=\"docutils literal\"><span class=\"pre\">http.Handler</span></code> with our <code class=\"docutils literal\"><span class=\"pre\">RecoveryHandler</span></code>:</p>\n<div class=\"highlight-go\"><div class=\"highlight\" style=\"background: #ffffff\"><pre style=\"line-height: 125%\"><span></span><span style=\"color: #2eb0f7\">func</span> <span style=\"color: #111111\">root(w</span> <span style=\"color: #111111\">http.ResponseWriter,</span> <span style=\"color: #111111\">r</span> <span style=\"color: #4b4f5c\">*</span><span style=\"color: #111111\">http.Request)</span> <span style=\"color: #111111\">{</span>\n    <span style=\"color: #34c08b; font-style: italic\">// ... do stuff</span>\n<span style=\"color: #111111\">}</span>\n<span style=\"color: #111111\">http.HandleFunc(</span><span style=\"color: #e8535a\">&quot;/&quot;</span><span style=\"color: #111111\">,</span> <span style=\"color: #111111\">raven.RecoveryHandler(root))</span>\n</pre></div>\n</div>\n</div>\n", 
+  "link": null, 
+  "id": "go-http", 
+  "name": "net/http"
+}
diff --git a/tests/fixtures/integration-docs/go.json b/tests/fixtures/integration-docs/go.json
new file mode 100644
index 0000000000..a796f25ae8
--- /dev/null
+++ b/tests/fixtures/integration-docs/go.json
@@ -0,0 +1,6 @@
+{
+  "html": "<div class=\"section\" id=\"installation\">\n<h2>Installation</h2>\n<p>Raven-Go can be installed like any other Go library through <code class=\"docutils literal\"><span class=\"pre\">go</span> <span class=\"pre\">get</span></code>:</p>\n<div class=\"highlight-python\"><div class=\"highlight\" style=\"background: #ffffff\"><pre style=\"line-height: 125%\"><span></span>$ go get github.com/getsentry/raven-go\n</pre></div>\n</div>\n</div>\n\n\n<div class=\"section\" id=\"configuring-the-client\">\n<h2>Configuring the Client</h2>\n<p>To use <code class=\"docutils literal\"><span class=\"pre\">raven-go</span></code>, you&#8217;ll need to import the <code class=\"docutils literal\"><span class=\"pre\">raven</span></code> package, then initilize your\nDSN globally. If you specify the <code class=\"docutils literal\"><span class=\"pre\">SENTRY_DSN</span></code> environment variable, this will be\ndone automatically for you.</p>\n<div class=\"highlight-go\"><div class=\"highlight\" style=\"background: #ffffff\"><pre style=\"line-height: 125%\"><span></span><span style=\"color: #2eb0f7\">package</span> <span style=\"color: #111111\">main</span>\n\n<span style=\"color: #2eb0f7\">import</span> <span style=\"color: #e8535a\">&quot;github.com/getsentry/raven-go&quot;</span>\n\n<span style=\"color: #2eb0f7\">func</span> <span style=\"color: #111111\">init()</span> <span style=\"color: #111111\">{</span>\n    <span style=\"color: #111111\">raven.SetDSN(</span><span style=\"color: #e8535a\">&quot;___DSN___&quot;</span><span style=\"color: #111111\">)</span>\n<span style=\"color: #111111\">}</span>\n</pre></div>\n</div>\n</div>\n\n\n<div class=\"section\" id=\"reporting-errors\">\n<h2>Reporting Errors</h2>\n<p>In Go, there are both errors and panics, and Raven can handle both. To learn more\nabout the differences, please read <a class=\"reference external\" href=\"https://blog.golang.org/error-handling-and-go\">Error handling and Go</a>.</p>\n<p>To handle normal <code class=\"docutils literal\"><span class=\"pre\">error</span></code> responses, we have two options: <code class=\"docutils literal\"><span class=\"pre\">CaptureErrorAndWait</span></code> and <code class=\"docutils literal\"><span class=\"pre\">CaptureError</span></code>. The former is a blocking call, for a case where you&#8217;d like to exit the application after reporting, and the latter is non-blocking.</p>\n<div class=\"highlight-go\"><div class=\"highlight\" style=\"background: #ffffff\"><pre style=\"line-height: 125%\"><span></span><span style=\"color: #111111\">f,</span> <span style=\"color: #111111\">err</span> <span style=\"color: #4b4f5c\">:=</span> <span style=\"color: #111111\">os.Open(</span><span style=\"color: #e8535a\">&quot;filename.ext&quot;</span><span style=\"color: #111111\">)</span>\n<span style=\"color: #2eb0f7\">if</span> <span style=\"color: #111111\">err</span> <span style=\"color: #4b4f5c\">!=</span> <span style=\"color: #2eb0f7\">nil</span> <span style=\"color: #111111\">{</span>\n    <span style=\"color: #111111\">raven.CaptureErrorAndWait(err,</span> <span style=\"color: #2eb0f7\">nil</span><span style=\"color: #111111\">)</span>\n    <span style=\"color: #111111\">log.Panic(err)</span>\n<span style=\"color: #111111\">}</span>\n</pre></div>\n</div>\n</div>\n\n\n<div class=\"section\" id=\"reporting-panics\">\n<h2>Reporting Panics</h2>\n<p>Capturing a panic is pretty simple as well. We just need to wrap our code in <code class=\"docutils literal\"><span class=\"pre\">CapturePanic</span></code>. <code class=\"docutils literal\"><span class=\"pre\">CapturePanic</span></code> will execute the <code class=\"docutils literal\"><span class=\"pre\">func</span></code> and if a panic happened, we will record it, and gracefully continue.</p>\n<div class=\"highlight-go\"><div class=\"highlight\" style=\"background: #ffffff\"><pre style=\"line-height: 125%\"><span></span><span style=\"color: #111111\">raven.CapturePanic(</span><span style=\"color: #2eb0f7\">func</span><span style=\"color: #111111\">()</span> <span style=\"color: #111111\">{</span>\n    <span style=\"color: #34c08b; font-style: italic\">// do all of the scary things here</span>\n<span style=\"color: #111111\">},</span> <span style=\"color: #2eb0f7\">nil</span><span style=\"color: #111111\">)</span>\n</pre></div>\n</div>\n</div>\n", 
+  "link": "https://docs.getsentry.com/hosted/clients/go/", 
+  "id": "go", 
+  "name": "Go"
+}
diff --git a/tests/fixtures/integration-docs/java-android.json b/tests/fixtures/integration-docs/java-android.json
new file mode 100644
index 0000000000..50ac75c3f6
--- /dev/null
+++ b/tests/fixtures/integration-docs/java-android.json
@@ -0,0 +1,6 @@
+{
+  "html": "<div class=\"section\" id=\"installation\">\n<h2>Installation</h2>\n<p>Using Gradle (Android Studio) in your <code class=\"docutils literal\"><span class=\"pre\">app/build.gradle</span></code> add:</p>\n<div class=\"highlight-groovy\"><div class=\"highlight\" style=\"background: #ffffff\"><pre style=\"line-height: 125%\"><span></span><span style=\"color: #111111\">compile</span> <span style=\"color: #e8535a\">&#39;io.sentry:sentry-android:1.6.3&#39;</span>\n</pre></div>\n</div>\n<p>For other dependency managers see the <a class=\"reference external\" href=\"https://search.maven.org/#artifactdetails%7Cio.sentry%7Csentry-android%7C1.6.3%7Cjar\">central Maven repository</a>.</p>\n</div>\n\n\n<div class=\"section\" id=\"usage\">\n<h2>Usage</h2>\n<p>Now you can use <code class=\"docutils literal\"><span class=\"pre\">Sentry</span></code> to capture events anywhere in your application:</p>\n<div class=\"highlight-java\"><div class=\"highlight\" style=\"background: #ffffff\"><pre style=\"line-height: 125%\"><span></span><span style=\"color: #2eb0f7\">import</span> <span style=\"color: #111111\">io.sentry.context.Context</span><span style=\"color: #4b4f5c\">;</span>\n<span style=\"color: #2eb0f7\">import</span> <span style=\"color: #111111\">io.sentry.event.BreadcrumbBuilder</span><span style=\"color: #4b4f5c\">;</span>\n<span style=\"color: #2eb0f7\">import</span> <span style=\"color: #111111\">io.sentry.event.UserBuilder</span><span style=\"color: #4b4f5c\">;</span>\n\n<span style=\"color: #2eb0f7\">public</span> <span style=\"color: #2eb0f7\">class</span> <span style=\"color: #111111\">MyClass</span> <span style=\"color: #4b4f5c\">{</span>\n    <span style=\"color: #34c08b; font-style: italic\">/**</span>\n<span style=\"color: #34c08b; font-style: italic\">     * An example method that throws an exception.</span>\n<span style=\"color: #34c08b; font-style: italic\">     */</span>\n    <span style=\"color: #2eb0f7\">void</span> <span style=\"color: #111111\">unsafeMethod</span><span style=\"color: #4b4f5c\">()</span> <span style=\"color: #4b4f5c\">{</span>\n        <span style=\"color: #2eb0f7\">throw</span> <span style=\"color: #2eb0f7\">new</span> <span style=\"color: #111111\">UnsupportedOperationException</span><span style=\"color: #4b4f5c\">(</span><span style=\"color: #e8535a\">&quot;You shouldn&#39;t call this!&quot;</span><span style=\"color: #4b4f5c\">);</span>\n    <span style=\"color: #4b4f5c\">}</span>\n\n    <span style=\"color: #34c08b; font-style: italic\">/**</span>\n<span style=\"color: #34c08b; font-style: italic\">     * Note that the ``Sentry.init`` method must be called before the static API</span>\n<span style=\"color: #34c08b; font-style: italic\">     * is used, otherwise a ``NullPointerException`` will be thrown.</span>\n<span style=\"color: #34c08b; font-style: italic\">     */</span>\n    <span style=\"color: #2eb0f7\">void</span> <span style=\"color: #111111\">logWithStaticAPI</span><span style=\"color: #4b4f5c\">()</span> <span style=\"color: #4b4f5c\">{</span>\n        <span style=\"color: #34c08b; font-style: italic\">/*</span>\n<span style=\"color: #34c08b; font-style: italic\">        Record a breadcrumb in the current context which will be sent</span>\n<span style=\"color: #34c08b; font-style: italic\">        with the next event(s). By default the last 100 breadcrumbs are kept.</span>\n<span style=\"color: #34c08b; font-style: italic\">        */</span>\n        <span style=\"color: #111111\">Sentry</span><span style=\"color: #4b4f5c\">.</span><span style=\"color: #a47ac6\">getContext</span><span style=\"color: #4b4f5c\">().</span><span style=\"color: #a47ac6\">recordBreadcrumb</span><span style=\"color: #4b4f5c\">(</span>\n            <span style=\"color: #2eb0f7\">new</span> <span style=\"color: #111111\">BreadcrumbBuilder</span><span style=\"color: #4b4f5c\">().</span><span style=\"color: #a47ac6\">setMessage</span><span style=\"color: #4b4f5c\">(</span><span style=\"color: #e8535a\">&quot;User made an action&quot;</span><span style=\"color: #4b4f5c\">).</span><span style=\"color: #a47ac6\">build</span><span style=\"color: #4b4f5c\">()</span>\n        <span style=\"color: #4b4f5c\">);</span>\n\n        <span style=\"color: #34c08b; font-style: italic\">// Set the user in the current context.</span>\n        <span style=\"color: #111111\">Sentry</span><span style=\"color: #4b4f5c\">.</span><span style=\"color: #a47ac6\">getContext</span><span style=\"color: #4b4f5c\">().</span><span style=\"color: #a47ac6\">setUser</span><span style=\"color: #4b4f5c\">(</span>\n            <span style=\"color: #2eb0f7\">new</span> <span style=\"color: #111111\">UserBuilder</span><span style=\"color: #4b4f5c\">().</span><span style=\"color: #a47ac6\">setEmail</span><span style=\"color: #4b4f5c\">(</span><span style=\"color: #e8535a\">&quot;hello@sentry.io&quot;</span><span style=\"color: #4b4f5c\">).</span><span style=\"color: #a47ac6\">build</span><span style=\"color: #4b4f5c\">()</span>\n        <span style=\"color: #4b4f5c\">);</span>\n\n        <span style=\"color: #34c08b; font-style: italic\">/*</span>\n<span style=\"color: #34c08b; font-style: italic\">        This sends a simple event to Sentry using the statically stored instance</span>\n<span style=\"color: #34c08b; font-style: italic\">        that was created in the ``main`` method.</span>\n<span style=\"color: #34c08b; font-style: italic\">        */</span>\n        <span style=\"color: #111111\">Sentry</span><span style=\"color: #4b4f5c\">.</span><span style=\"color: #a47ac6\">capture</span><span style=\"color: #4b4f5c\">(</span><span style=\"color: #e8535a\">&quot;This is a test&quot;</span><span style=\"color: #4b4f5c\">);</span>\n\n        <span style=\"color: #2eb0f7\">try</span> <span style=\"color: #4b4f5c\">{</span>\n            <span style=\"color: #111111\">unsafeMethod</span><span style=\"color: #4b4f5c\">();</span>\n        <span style=\"color: #4b4f5c\">}</span> <span style=\"color: #2eb0f7\">catch</span> <span style=\"color: #4b4f5c\">(</span><span style=\"color: #111111\">Exception</span> <span style=\"color: #111111\">e</span><span style=\"color: #4b4f5c\">)</span> <span style=\"color: #4b4f5c\">{</span>\n            <span style=\"color: #34c08b; font-style: italic\">// This sends an exception event to Sentry using the statically stored instance</span>\n            <span style=\"color: #34c08b; font-style: italic\">// that was created in the ``main`` method.</span>\n            <span style=\"color: #111111\">Sentry</span><span style=\"color: #4b4f5c\">.</span><span style=\"color: #a47ac6\">capture</span><span style=\"color: #4b4f5c\">(</span><span style=\"color: #111111\">e</span><span style=\"color: #4b4f5c\">);</span>\n        <span style=\"color: #4b4f5c\">}</span>\n    <span style=\"color: #4b4f5c\">}</span>\n<span style=\"color: #4b4f5c\">}</span>\n</pre></div>\n</div>\n</div>\n", 
+  "link": "https://docs.getsentry.com/hosted/clients/java/modules/android/", 
+  "id": "java-android", 
+  "name": "Android"
+}
diff --git a/tests/fixtures/integration-docs/java-appengine.json b/tests/fixtures/integration-docs/java-appengine.json
new file mode 100644
index 0000000000..65ae71be6b
--- /dev/null
+++ b/tests/fixtures/integration-docs/java-appengine.json
@@ -0,0 +1,6 @@
+{
+  "html": "<div class=\"section\" id=\"installation\">\n<h2>Installation</h2>\n<p>Using Maven:</p>\n<div class=\"highlight-xml\"><div class=\"highlight\" style=\"background: #ffffff\"><pre style=\"line-height: 125%\"><span></span><span style=\"color: #2eb0f7\">&lt;dependency&gt;</span>\n    <span style=\"color: #2eb0f7\">&lt;groupId&gt;</span>io.sentry<span style=\"color: #2eb0f7\">&lt;/groupId&gt;</span>\n    <span style=\"color: #2eb0f7\">&lt;artifactId&gt;</span>sentry-appengine<span style=\"color: #2eb0f7\">&lt;/artifactId&gt;</span>\n    <span style=\"color: #2eb0f7\">&lt;version&gt;</span>1.6.3<span style=\"color: #2eb0f7\">&lt;/version&gt;</span>\n<span style=\"color: #2eb0f7\">&lt;/dependency&gt;</span>\n</pre></div>\n</div>\n<p>Using Gradle:</p>\n<div class=\"highlight-groovy\"><div class=\"highlight\" style=\"background: #ffffff\"><pre style=\"line-height: 125%\"><span></span><span style=\"color: #111111\">compile</span> <span style=\"color: #e8535a\">&#39;io.sentry:sentry-appengine:1.6.3&#39;</span>\n</pre></div>\n</div>\n<p>Using SBT:</p>\n<div class=\"highlight-scala\"><div class=\"highlight\" style=\"background: #ffffff\"><pre style=\"line-height: 125%\"><span></span><span style=\"color: #111111\">libraryDependencies</span> <span style=\"color: #4b4f5c\">+=</span> <span style=\"color: #e8535a\">&quot;io.sentry&quot;</span> <span style=\"color: #4b4f5c\">%</span> <span style=\"color: #e8535a\">&quot;sentry-appengine&quot;</span> <span style=\"color: #4b4f5c\">%</span> <span style=\"color: #e8535a\">&quot;1.6.3&quot;</span>\n</pre></div>\n</div>\n<p>For other dependency managers see the <a class=\"reference external\" href=\"https://search.maven.org/#artifactdetails%7Cio.sentry%7Csentry-appengine%7C1.6.3%7Cjar\">central Maven repository</a>.</p>\n</div>\n\n\n<div class=\"section\" id=\"usage\">\n<h2>Usage</h2>\n<p>This module provides a new <code class=\"docutils literal\"><span class=\"pre\">SentryClientFactory</span></code> implementation which replaces the default async\nsystem with a Google App Engine compatible one. You&#8217;ll need to configure Sentry to use the\n<code class=\"docutils literal\"><span class=\"pre\">io.sentry.appengine.AppEngineSentryClientFactory</span></code> as its factory.</p>\n<p>The queue size and thread options will not be used as they are specific to\nthe default Java threading system.</p>\n</div>\n", 
+  "link": "https://docs.getsentry.com/hosted/clients/java/modules/appengine/", 
+  "id": "java-appengine", 
+  "name": "Google App Engine"
+}
diff --git a/tests/fixtures/integration-docs/java-log4j.json b/tests/fixtures/integration-docs/java-log4j.json
new file mode 100644
index 0000000000..7d2fada7e3
--- /dev/null
+++ b/tests/fixtures/integration-docs/java-log4j.json
@@ -0,0 +1,6 @@
+{
+  "html": "<div class=\"section\" id=\"installation\">\n<h2>Installation</h2>\n<p>Using Maven:</p>\n<div class=\"highlight-xml\"><div class=\"highlight\" style=\"background: #ffffff\"><pre style=\"line-height: 125%\"><span></span><span style=\"color: #2eb0f7\">&lt;dependency&gt;</span>\n    <span style=\"color: #2eb0f7\">&lt;groupId&gt;</span>io.sentry<span style=\"color: #2eb0f7\">&lt;/groupId&gt;</span>\n    <span style=\"color: #2eb0f7\">&lt;artifactId&gt;</span>sentry-log4j<span style=\"color: #2eb0f7\">&lt;/artifactId&gt;</span>\n    <span style=\"color: #2eb0f7\">&lt;version&gt;</span>1.6.3<span style=\"color: #2eb0f7\">&lt;/version&gt;</span>\n<span style=\"color: #2eb0f7\">&lt;/dependency&gt;</span>\n</pre></div>\n</div>\n<p>Using Gradle:</p>\n<div class=\"highlight-groovy\"><div class=\"highlight\" style=\"background: #ffffff\"><pre style=\"line-height: 125%\"><span></span><span style=\"color: #111111\">compile</span> <span style=\"color: #e8535a\">&#39;io.sentry:sentry-log4j:1.6.3&#39;</span>\n</pre></div>\n</div>\n<p>Using SBT:</p>\n<div class=\"highlight-scala\"><div class=\"highlight\" style=\"background: #ffffff\"><pre style=\"line-height: 125%\"><span></span><span style=\"color: #111111\">libraryDependencies</span> <span style=\"color: #4b4f5c\">+=</span> <span style=\"color: #e8535a\">&quot;io.sentry&quot;</span> <span style=\"color: #4b4f5c\">%</span> <span style=\"color: #e8535a\">&quot;sentry-log4j&quot;</span> <span style=\"color: #4b4f5c\">%</span> <span style=\"color: #e8535a\">&quot;1.6.3&quot;</span>\n</pre></div>\n</div>\n<p>For other dependency managers see the <a class=\"reference external\" href=\"https://search.maven.org/#artifactdetails%7Cio.sentry%7Csentry-log4j%7C1.6.3%7Cjar\">central Maven repository</a>.</p>\n</div>\n\n\n<div class=\"section\" id=\"usage\">\n<h2>Usage</h2>\n<p>The following examples configure a <code class=\"docutils literal\"><span class=\"pre\">ConsoleAppender</span></code> that logs to standard out\nat the <code class=\"docutils literal\"><span class=\"pre\">INFO</span></code> level and a <code class=\"docutils literal\"><span class=\"pre\">SentryAppender</span></code> that logs to the Sentry server at\nthe <code class=\"docutils literal\"><span class=\"pre\">WARN</span></code> level. The <code class=\"docutils literal\"><span class=\"pre\">ConsoleAppender</span></code> is only provided as an example of\na non-Sentry appender that is set to a different logging threshold, like one you\nmay already have in your project.</p>\n<p>Example configuration using the <code class=\"docutils literal\"><span class=\"pre\">log4j.properties</span></code> format:</p>\n<div class=\"highlight-ini\"><div class=\"highlight\" style=\"background: #ffffff\"><pre style=\"line-height: 125%\"><span></span><span style=\"color: #34c08b; font-style: italic\"># Enable the Console and Sentry appenders</span>\n<span style=\"color: #a47ac6\">log4j.rootLogger</span><span style=\"color: #4b4f5c\">=</span><span style=\"color: #e8535a\">INFO, Console, Sentry</span>\n\n<span style=\"color: #34c08b; font-style: italic\"># Configure the Console appender</span>\n<span style=\"color: #a47ac6\">log4j.appender.Console</span><span style=\"color: #4b4f5c\">=</span><span style=\"color: #e8535a\">org.apache.log4j.ConsoleAppender</span>\n<span style=\"color: #a47ac6\">log4j.appender.Console.layout</span><span style=\"color: #4b4f5c\">=</span><span style=\"color: #e8535a\">org.apache.log4j.PatternLayout</span>\n<span style=\"color: #a47ac6\">log4j.appender.Console.layout.ConversionPattern</span><span style=\"color: #4b4f5c\">=</span><span style=\"color: #e8535a\">%d{HH:mm:ss.SSS} [%t] %-5p: %m%n</span>\n\n<span style=\"color: #34c08b; font-style: italic\"># Configure the Sentry appender, overriding the logging threshold to the WARN level</span>\n<span style=\"color: #a47ac6\">log4j.appender.Sentry</span><span style=\"color: #4b4f5c\">=</span><span style=\"color: #e8535a\">io.sentry.log4j.SentryAppender</span>\n<span style=\"color: #a47ac6\">log4j.appender.Sentry.threshold</span><span style=\"color: #4b4f5c\">=</span><span style=\"color: #e8535a\">WARN</span>\n</pre></div>\n</div>\n<p>Alternatively, using  the <code class=\"docutils literal\"><span class=\"pre\">log4j.xml</span></code> format:</p>\n<div class=\"highlight-xml\"><div class=\"highlight\" style=\"background: #ffffff\"><pre style=\"line-height: 125%\"><span></span><span style=\"color: #34c08b\">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; ?&gt;</span>\n<span style=\"color: #34c08b\">&lt;!DOCTYPE log4j:configuration SYSTEM &quot;log4j.dtd&quot;&gt;</span>\n<span style=\"color: #2eb0f7\">&lt;log4j:configuration</span> <span style=\"color: #a47ac6\">debug=</span><span style=\"color: #e8535a\">&quot;true&quot;</span>\n    <span style=\"color: #a47ac6\">xmlns:log4j=</span><span style=\"color: #e8535a\">&#39;http://jakarta.apache.org/log4j/&#39;</span><span style=\"color: #2eb0f7\">&gt;</span>\n\n    <span style=\"color: #34c08b; font-style: italic\">&lt;!-- Configure the Console appender --&gt;</span>\n    <span style=\"color: #2eb0f7\">&lt;appender</span> <span style=\"color: #a47ac6\">name=</span><span style=\"color: #e8535a\">&quot;Console&quot;</span> <span style=\"color: #a47ac6\">class=</span><span style=\"color: #e8535a\">&quot;org.apache.log4j.ConsoleAppender&quot;</span><span style=\"color: #2eb0f7\">&gt;</span>\n        <span style=\"color: #2eb0f7\">&lt;layout</span> <span style=\"color: #a47ac6\">class=</span><span style=\"color: #e8535a\">&quot;org.apache.log4j.PatternLayout&quot;</span><span style=\"color: #2eb0f7\">&gt;</span>\n            <span style=\"color: #2eb0f7\">&lt;param</span> <span style=\"color: #a47ac6\">name=</span><span style=\"color: #e8535a\">&quot;ConversionPattern&quot;</span>\n                   <span style=\"color: #a47ac6\">value=</span><span style=\"color: #e8535a\">&quot;%d{yyyy-MM-dd HH:mm:ss} %-5p %c{1}:%L - %m%n&quot;</span> <span style=\"color: #2eb0f7\">/&gt;</span>\n        <span style=\"color: #2eb0f7\">&lt;/layout&gt;</span>\n    <span style=\"color: #2eb0f7\">&lt;/appender&gt;</span>\n\n    <span style=\"color: #34c08b; font-style: italic\">&lt;!-- Configure the Sentry appender, overriding the logging threshold to the WARN level --&gt;</span>\n    <span style=\"color: #2eb0f7\">&lt;appender</span> <span style=\"color: #a47ac6\">name=</span><span style=\"color: #e8535a\">&quot;Sentry&quot;</span> <span style=\"color: #a47ac6\">class=</span><span style=\"color: #e8535a\">&quot;io.sentry.log4j.SentryAppender&quot;</span><span style=\"color: #2eb0f7\">&gt;</span>\n        <span style=\"color: #34c08b; font-style: italic\">&lt;!-- Override the Sentry handler log level to WARN --&gt;</span>\n        <span style=\"color: #2eb0f7\">&lt;filter</span> <span style=\"color: #a47ac6\">class=</span><span style=\"color: #e8535a\">&quot;org.apache.log4j.varia.LevelRangeFilter&quot;</span><span style=\"color: #2eb0f7\">&gt;</span>\n            <span style=\"color: #2eb0f7\">&lt;param</span> <span style=\"color: #a47ac6\">name=</span><span style=\"color: #e8535a\">&quot;levelMin&quot;</span> <span style=\"color: #a47ac6\">value=</span><span style=\"color: #e8535a\">&quot;WARN&quot;</span> <span style=\"color: #2eb0f7\">/&gt;</span>\n        <span style=\"color: #2eb0f7\">&lt;/filter&gt;</span>\n    <span style=\"color: #2eb0f7\">&lt;/appender&gt;</span>\n\n    <span style=\"color: #34c08b; font-style: italic\">&lt;!-- Enable the Console and Sentry appenders, Console is provided as an example</span>\n<span style=\"color: #34c08b; font-style: italic\">         of a non-Sentry logger that is set to a different logging threshold --&gt;</span>\n    <span style=\"color: #2eb0f7\">&lt;root</span> <span style=\"color: #a47ac6\">level=</span><span style=\"color: #e8535a\">&quot;INFO&quot;</span><span style=\"color: #2eb0f7\">&gt;</span>\n        <span style=\"color: #2eb0f7\">&lt;appender-ref</span> <span style=\"color: #a47ac6\">ref=</span><span style=\"color: #e8535a\">&quot;Console&quot;</span> <span style=\"color: #2eb0f7\">/&gt;</span>\n        <span style=\"color: #2eb0f7\">&lt;appender-ref</span> <span style=\"color: #a47ac6\">ref=</span><span style=\"color: #e8535a\">&quot;Sentry&quot;</span> <span style=\"color: #2eb0f7\">/&gt;</span>\n    <span style=\"color: #2eb0f7\">&lt;/root&gt;</span>\n<span style=\"color: #2eb0f7\">&lt;/log4j:configuration&gt;</span>\n</pre></div>\n</div>\n<p>Next, <strong>you&#8217;ll need to configure your DSN</strong> (client key) and optionally other values such as\n<code class=\"docutils literal\"><span class=\"pre\">environment</span></code> and <code class=\"docutils literal\"><span class=\"pre\">release</span></code>. <a class=\"reference internal\" href=\"https://docs.getsentry.com/hosted/clients/java/config/#configuration\"><span>See the configuration page</span></a> for ways you can do this.</p>\n</div>\n", 
+  "link": "https://docs.getsentry.com/hosted/clients/java/modules/log4j/", 
+  "id": "java-log4j", 
+  "name": "Log4j 1.x"
+}
diff --git a/tests/fixtures/integration-docs/java-log4j2.json b/tests/fixtures/integration-docs/java-log4j2.json
new file mode 100644
index 0000000000..7cff9bbc3d
--- /dev/null
+++ b/tests/fixtures/integration-docs/java-log4j2.json
@@ -0,0 +1,6 @@
+{
+  "html": "<div class=\"section\" id=\"installation\">\n<h2>Installation</h2>\n<p>Using Maven:</p>\n<div class=\"highlight-xml\"><div class=\"highlight\" style=\"background: #ffffff\"><pre style=\"line-height: 125%\"><span></span><span style=\"color: #2eb0f7\">&lt;dependency&gt;</span>\n    <span style=\"color: #2eb0f7\">&lt;groupId&gt;</span>io.sentry<span style=\"color: #2eb0f7\">&lt;/groupId&gt;</span>\n    <span style=\"color: #2eb0f7\">&lt;artifactId&gt;</span>sentry-log4j2<span style=\"color: #2eb0f7\">&lt;/artifactId&gt;</span>\n    <span style=\"color: #2eb0f7\">&lt;version&gt;</span>1.6.3<span style=\"color: #2eb0f7\">&lt;/version&gt;</span>\n<span style=\"color: #2eb0f7\">&lt;/dependency&gt;</span>\n</pre></div>\n</div>\n<p>Using Gradle:</p>\n<div class=\"highlight-groovy\"><div class=\"highlight\" style=\"background: #ffffff\"><pre style=\"line-height: 125%\"><span></span><span style=\"color: #111111\">compile</span> <span style=\"color: #e8535a\">&#39;io.sentry:sentry-log4j2:1.6.3&#39;</span>\n</pre></div>\n</div>\n<p>Using SBT:</p>\n<div class=\"highlight-scala\"><div class=\"highlight\" style=\"background: #ffffff\"><pre style=\"line-height: 125%\"><span></span><span style=\"color: #111111\">libraryDependencies</span> <span style=\"color: #4b4f5c\">+=</span> <span style=\"color: #e8535a\">&quot;io.sentry&quot;</span> <span style=\"color: #4b4f5c\">%</span> <span style=\"color: #e8535a\">&quot;sentry-log4j2&quot;</span> <span style=\"color: #4b4f5c\">%</span> <span style=\"color: #e8535a\">&quot;1.6.3&quot;</span>\n</pre></div>\n</div>\n<p>For other dependency managers see the <a class=\"reference external\" href=\"https://search.maven.org/#artifactdetails%7Cio.sentry%7Csentry-log4j2%7C1.6.3%7Cjar\">central Maven repository</a>.</p>\n</div>\n\n\n<div class=\"section\" id=\"usage\">\n<h2>Usage</h2>\n<p>The following example configures a <code class=\"docutils literal\"><span class=\"pre\">ConsoleAppender</span></code> that logs to standard out\nat the <code class=\"docutils literal\"><span class=\"pre\">INFO</span></code> level and a <code class=\"docutils literal\"><span class=\"pre\">SentryAppender</span></code> that logs to the Sentry server at\nthe <code class=\"docutils literal\"><span class=\"pre\">WARN</span></code> level. The <code class=\"docutils literal\"><span class=\"pre\">ConsoleAppender</span></code> is only provided as an example of\na non-Sentry appender that is set to a different logging threshold, like one you\nmay already have in your project.</p>\n<p>Example configuration using the <code class=\"docutils literal\"><span class=\"pre\">log4j2.xml</span></code> format:</p>\n<div class=\"highlight-xml\"><div class=\"highlight\" style=\"background: #ffffff\"><pre style=\"line-height: 125%\"><span></span><span style=\"color: #34c08b\">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span>\n<span style=\"color: #2eb0f7\">&lt;configuration</span> <span style=\"color: #a47ac6\">status=</span><span style=\"color: #e8535a\">&quot;warn&quot;</span> <span style=\"color: #a47ac6\">packages=</span><span style=\"color: #e8535a\">&quot;org.apache.logging.log4j.core,io.sentry.log4j2&quot;</span><span style=\"color: #2eb0f7\">&gt;</span>\n    <span style=\"color: #2eb0f7\">&lt;appenders&gt;</span>\n        <span style=\"color: #2eb0f7\">&lt;Console</span> <span style=\"color: #a47ac6\">name=</span><span style=\"color: #e8535a\">&quot;Console&quot;</span> <span style=\"color: #a47ac6\">target=</span><span style=\"color: #e8535a\">&quot;SYSTEM_OUT&quot;</span><span style=\"color: #2eb0f7\">&gt;</span>\n            <span style=\"color: #2eb0f7\">&lt;PatternLayout</span> <span style=\"color: #a47ac6\">pattern=</span><span style=\"color: #e8535a\">&quot;%d{HH:mm:ss.SSS} [%t] %-5level %logger{36} - %msg%n&quot;</span> <span style=\"color: #2eb0f7\">/&gt;</span>\n        <span style=\"color: #2eb0f7\">&lt;/Console&gt;</span>\n\n        <span style=\"color: #2eb0f7\">&lt;Sentry</span> <span style=\"color: #a47ac6\">name=</span><span style=\"color: #e8535a\">&quot;Sentry&quot;</span> <span style=\"color: #2eb0f7\">/&gt;</span>\n    <span style=\"color: #2eb0f7\">&lt;/appenders&gt;</span>\n\n    <span style=\"color: #2eb0f7\">&lt;loggers&gt;</span>\n        <span style=\"color: #2eb0f7\">&lt;root</span> <span style=\"color: #a47ac6\">level=</span><span style=\"color: #e8535a\">&quot;INFO&quot;</span><span style=\"color: #2eb0f7\">&gt;</span>\n            <span style=\"color: #2eb0f7\">&lt;appender-ref</span> <span style=\"color: #a47ac6\">ref=</span><span style=\"color: #e8535a\">&quot;Console&quot;</span> <span style=\"color: #2eb0f7\">/&gt;</span>\n            <span style=\"color: #34c08b; font-style: italic\">&lt;!-- Note that the Sentry logging threshold is overridden to the WARN level --&gt;</span>\n            <span style=\"color: #2eb0f7\">&lt;appender-ref</span> <span style=\"color: #a47ac6\">ref=</span><span style=\"color: #e8535a\">&quot;Sentry&quot;</span> <span style=\"color: #a47ac6\">level=</span><span style=\"color: #e8535a\">&quot;WARN&quot;</span> <span style=\"color: #2eb0f7\">/&gt;</span>\n        <span style=\"color: #2eb0f7\">&lt;/root&gt;</span>\n    <span style=\"color: #2eb0f7\">&lt;/loggers&gt;</span>\n<span style=\"color: #2eb0f7\">&lt;/configuration&gt;</span>\n</pre></div>\n</div>\n<p>Next, <strong>you&#8217;ll need to configure your DSN</strong> (client key) and optionally other values such as\n<code class=\"docutils literal\"><span class=\"pre\">environment</span></code> and <code class=\"docutils literal\"><span class=\"pre\">release</span></code>. <a class=\"reference internal\" href=\"https://docs.getsentry.com/hosted/clients/java/config/#configuration\"><span>See the configuration page</span></a> for ways you can do this.</p>\n</div>\n", 
+  "link": "https://docs.getsentry.com/hosted/clients/java/modules/log4j2/", 
+  "id": "java-log4j2", 
+  "name": "Log4j 2.x"
+}
diff --git a/tests/fixtures/integration-docs/java-logback.json b/tests/fixtures/integration-docs/java-logback.json
new file mode 100644
index 0000000000..3cdd2a9a4e
--- /dev/null
+++ b/tests/fixtures/integration-docs/java-logback.json
@@ -0,0 +1,6 @@
+{
+  "html": "<div class=\"section\" id=\"installation\">\n<h2>Installation</h2>\n<p>Using Maven:</p>\n<div class=\"highlight-xml\"><div class=\"highlight\" style=\"background: #ffffff\"><pre style=\"line-height: 125%\"><span></span><span style=\"color: #2eb0f7\">&lt;dependency&gt;</span>\n    <span style=\"color: #2eb0f7\">&lt;groupId&gt;</span>io.sentry<span style=\"color: #2eb0f7\">&lt;/groupId&gt;</span>\n    <span style=\"color: #2eb0f7\">&lt;artifactId&gt;</span>sentry-logback<span style=\"color: #2eb0f7\">&lt;/artifactId&gt;</span>\n    <span style=\"color: #2eb0f7\">&lt;version&gt;</span>1.6.3<span style=\"color: #2eb0f7\">&lt;/version&gt;</span>\n<span style=\"color: #2eb0f7\">&lt;/dependency&gt;</span>\n</pre></div>\n</div>\n<p>Using Gradle:</p>\n<div class=\"highlight-groovy\"><div class=\"highlight\" style=\"background: #ffffff\"><pre style=\"line-height: 125%\"><span></span><span style=\"color: #111111\">compile</span> <span style=\"color: #e8535a\">&#39;io.sentry:sentry-logback:1.6.3&#39;</span>\n</pre></div>\n</div>\n<p>Using SBT:</p>\n<div class=\"highlight-scala\"><div class=\"highlight\" style=\"background: #ffffff\"><pre style=\"line-height: 125%\"><span></span><span style=\"color: #111111\">libraryDependencies</span> <span style=\"color: #4b4f5c\">+=</span> <span style=\"color: #e8535a\">&quot;io.sentry&quot;</span> <span style=\"color: #4b4f5c\">%</span> <span style=\"color: #e8535a\">&quot;sentry-logback&quot;</span> <span style=\"color: #4b4f5c\">%</span> <span style=\"color: #e8535a\">&quot;1.6.3&quot;</span>\n</pre></div>\n</div>\n<p>For other dependency managers see the <a class=\"reference external\" href=\"https://search.maven.org/#artifactdetails%7Cio.sentry%7Csentry-logback%7C1.6.3%7Cjar\">central Maven repository</a>.</p>\n</div>\n\n\n<div class=\"section\" id=\"usage\">\n<h2>Usage</h2>\n<p>The following example configures a <code class=\"docutils literal\"><span class=\"pre\">ConsoleAppender</span></code> that logs to standard out\nat the <code class=\"docutils literal\"><span class=\"pre\">INFO</span></code> level and a <code class=\"docutils literal\"><span class=\"pre\">SentryAppender</span></code> that logs to the Sentry server at\nthe <code class=\"docutils literal\"><span class=\"pre\">WARN</span></code> level. The <code class=\"docutils literal\"><span class=\"pre\">ConsoleAppender</span></code> is only provided as an example of\na non-Sentry appender that is set to a different logging threshold, like one you\nmay already have in your project.</p>\n<p>Example configuration using the <code class=\"docutils literal\"><span class=\"pre\">logback.xml</span></code> format:</p>\n<div class=\"highlight-xml\"><div class=\"highlight\" style=\"background: #ffffff\"><pre style=\"line-height: 125%\"><span></span><span style=\"color: #2eb0f7\">&lt;configuration&gt;</span>\n    <span style=\"color: #34c08b; font-style: italic\">&lt;!-- Configure the Console appender --&gt;</span>\n    <span style=\"color: #2eb0f7\">&lt;appender</span> <span style=\"color: #a47ac6\">name=</span><span style=\"color: #e8535a\">&quot;Console&quot;</span> <span style=\"color: #a47ac6\">class=</span><span style=\"color: #e8535a\">&quot;ch.qos.logback.core.ConsoleAppender&quot;</span><span style=\"color: #2eb0f7\">&gt;</span>\n        <span style=\"color: #2eb0f7\">&lt;encoder&gt;</span>\n            <span style=\"color: #2eb0f7\">&lt;pattern&gt;</span>%d{HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n<span style=\"color: #2eb0f7\">&lt;/pattern&gt;</span>\n        <span style=\"color: #2eb0f7\">&lt;/encoder&gt;</span>\n    <span style=\"color: #2eb0f7\">&lt;/appender&gt;</span>\n\n    <span style=\"color: #34c08b; font-style: italic\">&lt;!-- Configure the Sentry appender, overriding the logging threshold to the WARN level --&gt;</span>\n    <span style=\"color: #2eb0f7\">&lt;appender</span> <span style=\"color: #a47ac6\">name=</span><span style=\"color: #e8535a\">&quot;Sentry&quot;</span> <span style=\"color: #a47ac6\">class=</span><span style=\"color: #e8535a\">&quot;io.sentry.logback.SentryAppender&quot;</span><span style=\"color: #2eb0f7\">&gt;</span>\n        <span style=\"color: #2eb0f7\">&lt;filter</span> <span style=\"color: #a47ac6\">class=</span><span style=\"color: #e8535a\">&quot;ch.qos.logback.classic.filter.ThresholdFilter&quot;</span><span style=\"color: #2eb0f7\">&gt;</span>\n            <span style=\"color: #2eb0f7\">&lt;level&gt;</span>WARN<span style=\"color: #2eb0f7\">&lt;/level&gt;</span>\n        <span style=\"color: #2eb0f7\">&lt;/filter&gt;</span>\n    <span style=\"color: #2eb0f7\">&lt;/appender&gt;</span>\n\n    <span style=\"color: #34c08b; font-style: italic\">&lt;!-- Enable the Console and Sentry appenders, Console is provided as an example</span>\n<span style=\"color: #34c08b; font-style: italic\">         of a non-Sentry logger that is set to a different logging threshold --&gt;</span>\n    <span style=\"color: #2eb0f7\">&lt;root</span> <span style=\"color: #a47ac6\">level=</span><span style=\"color: #e8535a\">&quot;INFO&quot;</span><span style=\"color: #2eb0f7\">&gt;</span>\n        <span style=\"color: #2eb0f7\">&lt;appender-ref</span> <span style=\"color: #a47ac6\">ref=</span><span style=\"color: #e8535a\">&quot;Console&quot;</span> <span style=\"color: #2eb0f7\">/&gt;</span>\n        <span style=\"color: #2eb0f7\">&lt;appender-ref</span> <span style=\"color: #a47ac6\">ref=</span><span style=\"color: #e8535a\">&quot;Sentry&quot;</span> <span style=\"color: #2eb0f7\">/&gt;</span>\n    <span style=\"color: #2eb0f7\">&lt;/root&gt;</span>\n<span style=\"color: #2eb0f7\">&lt;/configuration&gt;</span>\n</pre></div>\n</div>\n<p>Next, <strong>you&#8217;ll need to configure your DSN</strong> (client key) and optionally other values such as\n<code class=\"docutils literal\"><span class=\"pre\">environment</span></code> and <code class=\"docutils literal\"><span class=\"pre\">release</span></code>.   <a class=\"reference internal\" href=\"https://docs.getsentry.com/hosted/clients/java/config/#setting-the-dsn\"><span>See the configuration page</span></a> for ways you can do this.</p>\n</div>\n", 
+  "link": "https://docs.getsentry.com/hosted/clients/java/modules/logback/", 
+  "id": "java-logback", 
+  "name": "Logback"
+}
diff --git a/tests/fixtures/integration-docs/java-logging.json b/tests/fixtures/integration-docs/java-logging.json
new file mode 100644
index 0000000000..a2f9c616c8
--- /dev/null
+++ b/tests/fixtures/integration-docs/java-logging.json
@@ -0,0 +1,6 @@
+{
+  "html": "<div class=\"section\" id=\"installation\">\n<h2>Installation</h2>\n<p>Using Maven:</p>\n<div class=\"highlight-xml\"><div class=\"highlight\" style=\"background: #ffffff\"><pre style=\"line-height: 125%\"><span></span><span style=\"color: #2eb0f7\">&lt;dependency&gt;</span>\n    <span style=\"color: #2eb0f7\">&lt;groupId&gt;</span>io.sentry<span style=\"color: #2eb0f7\">&lt;/groupId&gt;</span>\n    <span style=\"color: #2eb0f7\">&lt;artifactId&gt;</span>sentry<span style=\"color: #2eb0f7\">&lt;/artifactId&gt;</span>\n    <span style=\"color: #2eb0f7\">&lt;version&gt;</span>1.6.3<span style=\"color: #2eb0f7\">&lt;/version&gt;</span>\n<span style=\"color: #2eb0f7\">&lt;/dependency&gt;</span>\n</pre></div>\n</div>\n<p>Using Gradle:</p>\n<div class=\"highlight-groovy\"><div class=\"highlight\" style=\"background: #ffffff\"><pre style=\"line-height: 125%\"><span></span><span style=\"color: #111111\">compile</span> <span style=\"color: #e8535a\">&#39;io.sentry:sentry:1.6.3&#39;</span>\n</pre></div>\n</div>\n<p>Using SBT:</p>\n<div class=\"highlight-scala\"><div class=\"highlight\" style=\"background: #ffffff\"><pre style=\"line-height: 125%\"><span></span><span style=\"color: #111111\">libraryDependencies</span> <span style=\"color: #4b4f5c\">+=</span> <span style=\"color: #e8535a\">&quot;io.sentry&quot;</span> <span style=\"color: #4b4f5c\">%</span> <span style=\"color: #e8535a\">&quot;sentry&quot;</span> <span style=\"color: #4b4f5c\">%</span> <span style=\"color: #e8535a\">&quot;1.6.3&quot;</span>\n</pre></div>\n</div>\n<p>For other dependency managers see the <a class=\"reference external\" href=\"https://search.maven.org/#artifactdetails%7Cio.sentry%7Csentry%7C1.6.3%7Cjar\">central Maven repository</a>.</p>\n</div>\n\n\n<div class=\"section\" id=\"usage\">\n<h2>Usage</h2>\n<p>The following example configures a <code class=\"docutils literal\"><span class=\"pre\">ConsoleHandler</span></code> that logs to standard out\nat the <code class=\"docutils literal\"><span class=\"pre\">INFO</span></code> level and a <code class=\"docutils literal\"><span class=\"pre\">SentryHandler</span></code> that logs to the Sentry server at\nthe <code class=\"docutils literal\"><span class=\"pre\">WARN</span></code> level. The <code class=\"docutils literal\"><span class=\"pre\">ConsoleHandler</span></code> is only provided as an example of\na non-Sentry appender that is set to a different logging threshold, like one you\nmay already have in your project.</p>\n<p>Example configuration using the <code class=\"docutils literal\"><span class=\"pre\">logging.properties</span></code> format:</p>\n<div class=\"highlight-ini\"><div class=\"highlight\" style=\"background: #ffffff\"><pre style=\"line-height: 125%\"><span></span><span style=\"color: #34c08b; font-style: italic\"># Enable the Console and Sentry handlers</span>\n<span style=\"color: #a47ac6\">handlers</span><span style=\"color: #4b4f5c\">=</span><span style=\"color: #e8535a\">java.util.logging.ConsoleHandler,io.sentry.jul.SentryHandler</span>\n\n<span style=\"color: #34c08b; font-style: italic\"># Set the default log level to INFO</span>\n<span style=\"color: #a47ac6\">.level</span><span style=\"color: #4b4f5c\">=</span><span style=\"color: #e8535a\">INFO</span>\n\n<span style=\"color: #34c08b; font-style: italic\"># Override the Sentry handler log level to WARNING</span>\n<span style=\"color: #a47ac6\">io.sentry.jul.SentryHandler.level</span><span style=\"color: #4b4f5c\">=</span><span style=\"color: #e8535a\">WARNING</span>\n</pre></div>\n</div>\n<p>When starting your application, add the <code class=\"docutils literal\"><span class=\"pre\">java.util.logging.config.file</span></code> to\nthe system properties, with the full path to the <code class=\"docutils literal\"><span class=\"pre\">logging.properties</span></code> as\nits value:</p>\n<div class=\"highlight-python\"><div class=\"highlight\" style=\"background: #ffffff\"><pre style=\"line-height: 125%\"><span></span>$ java -Djava.util.logging.config.file=/path/to/app.properties MyClass\n</pre></div>\n</div>\n<p>Next, <strong>you&#8217;ll need to configure your DSN</strong> (client key) and optionally other values such as\n<code class=\"docutils literal\"><span class=\"pre\">environment</span></code> and <code class=\"docutils literal\"><span class=\"pre\">release</span></code>. <a class=\"reference internal\" href=\"https://docs.getsentry.com/hosted/clients/java/config/#configuration\"><span>See the configuration page</span></a> for ways you can do this.</p>\n</div>\n", 
+  "link": "https://docs.getsentry.com/hosted/clients/java/modules/jul/", 
+  "id": "java-logging", 
+  "name": "java.util.logging"
+}
diff --git a/tests/fixtures/integration-docs/java.json b/tests/fixtures/integration-docs/java.json
new file mode 100644
index 0000000000..04e9dfe2fa
--- /dev/null
+++ b/tests/fixtures/integration-docs/java.json
@@ -0,0 +1,6 @@
+{
+  "html": "<div class=\"section\" id=\"installation\">\n<h2>Installation</h2>\n<p>Using Maven:</p>\n<div class=\"highlight-xml\"><div class=\"highlight\" style=\"background: #ffffff\"><pre style=\"line-height: 125%\"><span></span><span style=\"color: #2eb0f7\">&lt;dependency&gt;</span>\n    <span style=\"color: #2eb0f7\">&lt;groupId&gt;</span>io.sentry<span style=\"color: #2eb0f7\">&lt;/groupId&gt;</span>\n    <span style=\"color: #2eb0f7\">&lt;artifactId&gt;</span>sentry<span style=\"color: #2eb0f7\">&lt;/artifactId&gt;</span>\n    <span style=\"color: #2eb0f7\">&lt;version&gt;</span>1.6.3<span style=\"color: #2eb0f7\">&lt;/version&gt;</span>\n<span style=\"color: #2eb0f7\">&lt;/dependency&gt;</span>\n</pre></div>\n</div>\n<p>Using Gradle:</p>\n<div class=\"highlight-groovy\"><div class=\"highlight\" style=\"background: #ffffff\"><pre style=\"line-height: 125%\"><span></span><span style=\"color: #111111\">compile</span> <span style=\"color: #e8535a\">&#39;io.sentry:sentry:1.6.3&#39;</span>\n</pre></div>\n</div>\n<p>Using SBT:</p>\n<div class=\"highlight-scala\"><div class=\"highlight\" style=\"background: #ffffff\"><pre style=\"line-height: 125%\"><span></span><span style=\"color: #111111\">libraryDependencies</span> <span style=\"color: #4b4f5c\">+=</span> <span style=\"color: #e8535a\">&quot;io.sentry&quot;</span> <span style=\"color: #4b4f5c\">%</span> <span style=\"color: #e8535a\">&quot;sentry&quot;</span> <span style=\"color: #4b4f5c\">%</span> <span style=\"color: #e8535a\">&quot;1.6.3&quot;</span>\n</pre></div>\n</div>\n<p>For other dependency managers see the <a class=\"reference external\" href=\"https://search.maven.org/#artifactdetails%7Cio.sentry%7Csentry%7C1.6.3%7Cjar\">central Maven repository</a>.</p>\n</div>\n\n\n<div class=\"section\" id=\"capture-an-error\">\n<h2>Capture an Error</h2>\n<p id=\"usage-example\">To report an event manually you need to initialize a <code class=\"docutils literal\"><span class=\"pre\">SentryClient</span></code>. It is recommended\nthat you use the static API via the <code class=\"docutils literal\"><span class=\"pre\">Sentry</span></code> class, but you can also construct and manage\nyour own <code class=\"docutils literal\"><span class=\"pre\">SentryClient</span></code> instance. An example of each style is shown below:</p>\n<div class=\"highlight-java\"><div class=\"highlight\" style=\"background: #ffffff\"><pre style=\"line-height: 125%\"><span></span><span style=\"color: #2eb0f7\">import</span> <span style=\"color: #111111\">io.sentry.context.Context</span><span style=\"color: #4b4f5c\">;</span>\n<span style=\"color: #2eb0f7\">import</span> <span style=\"color: #111111\">io.sentry.event.BreadcrumbBuilder</span><span style=\"color: #4b4f5c\">;</span>\n<span style=\"color: #2eb0f7\">import</span> <span style=\"color: #111111\">io.sentry.event.UserBuilder</span><span style=\"color: #4b4f5c\">;</span>\n\n<span style=\"color: #2eb0f7\">public</span> <span style=\"color: #2eb0f7\">class</span> <span style=\"color: #111111\">MyClass</span> <span style=\"color: #4b4f5c\">{</span>\n    <span style=\"color: #2eb0f7\">private</span> <span style=\"color: #2eb0f7\">static</span> <span style=\"color: #111111\">SentryClient</span> <span style=\"color: #111111\">sentry</span><span style=\"color: #4b4f5c\">;</span>\n\n    <span style=\"color: #2eb0f7\">public</span> <span style=\"color: #2eb0f7\">static</span> <span style=\"color: #2eb0f7\">void</span> <span style=\"color: #111111\">main</span><span style=\"color: #4b4f5c\">(</span><span style=\"color: #111111\">String</span><span style=\"color: #4b4f5c\">...</span> <span style=\"color: #111111\">args</span><span style=\"color: #4b4f5c\">)</span> <span style=\"color: #4b4f5c\">{</span>\n        <span style=\"color: #34c08b; font-style: italic\">/*</span>\n<span style=\"color: #34c08b; font-style: italic\">        It is recommended that you use the DSN detection system, which</span>\n<span style=\"color: #34c08b; font-style: italic\">        will check the environment variable &quot;SENTRY_DSN&quot;, the Java</span>\n<span style=\"color: #34c08b; font-style: italic\">        System Property &quot;sentry.dsn&quot;, or the &quot;sentry.properties&quot; file</span>\n<span style=\"color: #34c08b; font-style: italic\">        in your classpath. This makes it easier to provide and adjust</span>\n<span style=\"color: #34c08b; font-style: italic\">        your DSN without needing to change your code. See the configuration</span>\n<span style=\"color: #34c08b; font-style: italic\">        page for more information.</span>\n<span style=\"color: #34c08b; font-style: italic\">        */</span>\n        <span style=\"color: #111111\">Sentry</span><span style=\"color: #4b4f5c\">.</span><span style=\"color: #a47ac6\">init</span><span style=\"color: #4b4f5c\">();</span>\n\n        <span style=\"color: #34c08b; font-style: italic\">// You can also manually provide the DSN to the ``init`` method.</span>\n        <span style=\"color: #111111\">String</span> <span style=\"color: #111111\">dsn</span> <span style=\"color: #4b4f5c\">=</span> <span style=\"color: #111111\">args</span><span style=\"color: #4b4f5c\">[</span><span style=\"color: #45c2c9\">0</span><span style=\"color: #4b4f5c\">];</span>\n        <span style=\"color: #111111\">Sentry</span><span style=\"color: #4b4f5c\">.</span><span style=\"color: #a47ac6\">init</span><span style=\"color: #4b4f5c\">(</span><span style=\"color: #111111\">dsn</span><span style=\"color: #4b4f5c\">);</span>\n\n        <span style=\"color: #34c08b; font-style: italic\">/*</span>\n<span style=\"color: #34c08b; font-style: italic\">        It is possible to go around the static ``Sentry`` API, which means</span>\n<span style=\"color: #34c08b; font-style: italic\">        you are responsible for making the SentryClient instance available</span>\n<span style=\"color: #34c08b; font-style: italic\">        to your code.</span>\n<span style=\"color: #34c08b; font-style: italic\">        */</span>\n        <span style=\"color: #111111\">sentry</span> <span style=\"color: #4b4f5c\">=</span> <span style=\"color: #111111\">SentryClientFactory</span><span style=\"color: #4b4f5c\">.</span><span style=\"color: #a47ac6\">sentryClient</span><span style=\"color: #4b4f5c\">();</span>\n\n        <span style=\"color: #111111\">MyClass</span> <span style=\"color: #111111\">myClass</span> <span style=\"color: #4b4f5c\">=</span> <span style=\"color: #2eb0f7\">new</span> <span style=\"color: #111111\">MyClass</span><span style=\"color: #4b4f5c\">();</span>\n        <span style=\"color: #111111\">myClass</span><span style=\"color: #4b4f5c\">.</span><span style=\"color: #a47ac6\">logWithStaticAPI</span><span style=\"color: #4b4f5c\">();</span>\n        <span style=\"color: #111111\">myClass</span><span style=\"color: #4b4f5c\">.</span><span style=\"color: #a47ac6\">logWithInstanceAPI</span><span style=\"color: #4b4f5c\">();</span>\n    <span style=\"color: #4b4f5c\">}</span>\n\n    <span style=\"color: #34c08b; font-style: italic\">/**</span>\n<span style=\"color: #34c08b; font-style: italic\">     * An example method that throws an exception.</span>\n<span style=\"color: #34c08b; font-style: italic\">     */</span>\n    <span style=\"color: #2eb0f7\">void</span> <span style=\"color: #111111\">unsafeMethod</span><span style=\"color: #4b4f5c\">()</span> <span style=\"color: #4b4f5c\">{</span>\n        <span style=\"color: #2eb0f7\">throw</span> <span style=\"color: #2eb0f7\">new</span> <span style=\"color: #111111\">UnsupportedOperationException</span><span style=\"color: #4b4f5c\">(</span><span style=\"color: #e8535a\">&quot;You shouldn&#39;t call this!&quot;</span><span style=\"color: #4b4f5c\">);</span>\n    <span style=\"color: #4b4f5c\">}</span>\n\n    <span style=\"color: #34c08b; font-style: italic\">/**</span>\n<span style=\"color: #34c08b; font-style: italic\">     * Examples using the (recommended) static API.</span>\n<span style=\"color: #34c08b; font-style: italic\">     */</span>\n    <span style=\"color: #2eb0f7\">void</span> <span style=\"color: #111111\">logWithStaticAPI</span><span style=\"color: #4b4f5c\">()</span> <span style=\"color: #4b4f5c\">{</span>\n        <span style=\"color: #34c08b; font-style: italic\">// Note that all fields set on the context are optional. Context data is copied onto</span>\n        <span style=\"color: #34c08b; font-style: italic\">// all future events in the current context (until the context is cleared).</span>\n\n        <span style=\"color: #34c08b; font-style: italic\">// Record a breadcrumb in the current context. By default the last 100 breadcrumbs are kept.</span>\n        <span style=\"color: #111111\">Sentry</span><span style=\"color: #4b4f5c\">.</span><span style=\"color: #a47ac6\">getContext</span><span style=\"color: #4b4f5c\">().</span><span style=\"color: #a47ac6\">recordBreadcrumb</span><span style=\"color: #4b4f5c\">(</span>\n            <span style=\"color: #2eb0f7\">new</span> <span style=\"color: #111111\">BreadcrumbBuilder</span><span style=\"color: #4b4f5c\">().</span><span style=\"color: #a47ac6\">setMessage</span><span style=\"color: #4b4f5c\">(</span><span style=\"color: #e8535a\">&quot;User made an action&quot;</span><span style=\"color: #4b4f5c\">).</span><span style=\"color: #a47ac6\">build</span><span style=\"color: #4b4f5c\">()</span>\n        <span style=\"color: #4b4f5c\">);</span>\n\n        <span style=\"color: #34c08b; font-style: italic\">// Set the user in the current context.</span>\n        <span style=\"color: #111111\">Sentry</span><span style=\"color: #4b4f5c\">.</span><span style=\"color: #a47ac6\">getContext</span><span style=\"color: #4b4f5c\">().</span><span style=\"color: #a47ac6\">setUser</span><span style=\"color: #4b4f5c\">(</span>\n            <span style=\"color: #2eb0f7\">new</span> <span style=\"color: #111111\">UserBuilder</span><span style=\"color: #4b4f5c\">().</span><span style=\"color: #a47ac6\">setEmail</span><span style=\"color: #4b4f5c\">(</span><span style=\"color: #e8535a\">&quot;hello@sentry.io&quot;</span><span style=\"color: #4b4f5c\">).</span><span style=\"color: #a47ac6\">build</span><span style=\"color: #4b4f5c\">()</span>\n        <span style=\"color: #4b4f5c\">);</span>\n\n        <span style=\"color: #34c08b; font-style: italic\">// Add extra data to future events in this context.</span>\n        <span style=\"color: #111111\">Sentry</span><span style=\"color: #4b4f5c\">.</span><span style=\"color: #a47ac6\">getContext</span><span style=\"color: #4b4f5c\">().</span><span style=\"color: #a47ac6\">addExtra</span><span style=\"color: #4b4f5c\">(</span><span style=\"color: #e8535a\">&quot;extra&quot;</span><span style=\"color: #4b4f5c\">,</span> <span style=\"color: #e8535a\">&quot;thing&quot;</span><span style=\"color: #4b4f5c\">);</span>\n\n        <span style=\"color: #34c08b; font-style: italic\">// Add an additional tag to future events in this context.</span>\n        <span style=\"color: #111111\">Sentry</span><span style=\"color: #4b4f5c\">.</span><span style=\"color: #a47ac6\">getContext</span><span style=\"color: #4b4f5c\">().</span><span style=\"color: #a47ac6\">addTag</span><span style=\"color: #4b4f5c\">(</span><span style=\"color: #e8535a\">&quot;tagName&quot;</span><span style=\"color: #4b4f5c\">,</span> <span style=\"color: #e8535a\">&quot;tagValue&quot;</span><span style=\"color: #4b4f5c\">);</span>\n\n        <span style=\"color: #34c08b; font-style: italic\">/*</span>\n<span style=\"color: #34c08b; font-style: italic\">        This sends a simple event to Sentry using the statically stored instance</span>\n<span style=\"color: #34c08b; font-style: italic\">        that was created in the ``main`` method.</span>\n<span style=\"color: #34c08b; font-style: italic\">        */</span>\n        <span style=\"color: #111111\">Sentry</span><span style=\"color: #4b4f5c\">.</span><span style=\"color: #a47ac6\">capture</span><span style=\"color: #4b4f5c\">(</span><span style=\"color: #e8535a\">&quot;This is a test&quot;</span><span style=\"color: #4b4f5c\">);</span>\n\n        <span style=\"color: #2eb0f7\">try</span> <span style=\"color: #4b4f5c\">{</span>\n            <span style=\"color: #111111\">unsafeMethod</span><span style=\"color: #4b4f5c\">();</span>\n        <span style=\"color: #4b4f5c\">}</span> <span style=\"color: #2eb0f7\">catch</span> <span style=\"color: #4b4f5c\">(</span><span style=\"color: #111111\">Exception</span> <span style=\"color: #111111\">e</span><span style=\"color: #4b4f5c\">)</span> <span style=\"color: #4b4f5c\">{</span>\n            <span style=\"color: #34c08b; font-style: italic\">// This sends an exception event to Sentry using the statically stored instance</span>\n            <span style=\"color: #34c08b; font-style: italic\">// that was created in the ``main`` method.</span>\n            <span style=\"color: #111111\">Sentry</span><span style=\"color: #4b4f5c\">.</span><span style=\"color: #a47ac6\">capture</span><span style=\"color: #4b4f5c\">(</span><span style=\"color: #111111\">e</span><span style=\"color: #4b4f5c\">);</span>\n        <span style=\"color: #4b4f5c\">}</span>\n    <span style=\"color: #4b4f5c\">}</span>\n\n    <span style=\"color: #34c08b; font-style: italic\">/**</span>\n<span style=\"color: #34c08b; font-style: italic\">     * Examples that use the SentryClient instance directly.</span>\n<span style=\"color: #34c08b; font-style: italic\">     */</span>\n    <span style=\"color: #2eb0f7\">void</span> <span style=\"color: #111111\">logWithInstanceAPI</span><span style=\"color: #4b4f5c\">()</span> <span style=\"color: #4b4f5c\">{</span>\n        <span style=\"color: #34c08b; font-style: italic\">// Retrieve the current context.</span>\n        <span style=\"color: #111111\">Context</span> <span style=\"color: #111111\">context</span> <span style=\"color: #4b4f5c\">=</span> <span style=\"color: #111111\">sentry</span><span style=\"color: #4b4f5c\">.</span><span style=\"color: #a47ac6\">getContext</span><span style=\"color: #4b4f5c\">();</span>\n\n        <span style=\"color: #34c08b; font-style: italic\">// Record a breadcrumb in the current context. By default the last 100 breadcrumbs are kept.</span>\n        <span style=\"color: #111111\">context</span><span style=\"color: #4b4f5c\">.</span><span style=\"color: #a47ac6\">recordBreadcrumb</span><span style=\"color: #4b4f5c\">(</span><span style=\"color: #2eb0f7\">new</span> <span style=\"color: #111111\">BreadcrumbBuilder</span><span style=\"color: #4b4f5c\">().</span><span style=\"color: #a47ac6\">setMessage</span><span style=\"color: #4b4f5c\">(</span><span style=\"color: #e8535a\">&quot;User made an action&quot;</span><span style=\"color: #4b4f5c\">).</span><span style=\"color: #a47ac6\">build</span><span style=\"color: #4b4f5c\">());</span>\n\n        <span style=\"color: #34c08b; font-style: italic\">// Set the user in the current context.</span>\n        <span style=\"color: #111111\">context</span><span style=\"color: #4b4f5c\">.</span><span style=\"color: #a47ac6\">setUser</span><span style=\"color: #4b4f5c\">(</span><span style=\"color: #2eb0f7\">new</span> <span style=\"color: #111111\">UserBuilder</span><span style=\"color: #4b4f5c\">().</span><span style=\"color: #a47ac6\">setEmail</span><span style=\"color: #4b4f5c\">(</span><span style=\"color: #e8535a\">&quot;hello@sentry.io&quot;</span><span style=\"color: #4b4f5c\">).</span><span style=\"color: #a47ac6\">build</span><span style=\"color: #4b4f5c\">());</span>\n\n        <span style=\"color: #34c08b; font-style: italic\">// This sends a simple event to Sentry.</span>\n        <span style=\"color: #111111\">sentry</span><span style=\"color: #4b4f5c\">.</span><span style=\"color: #a47ac6\">sendMessage</span><span style=\"color: #4b4f5c\">(</span><span style=\"color: #e8535a\">&quot;This is a test&quot;</span><span style=\"color: #4b4f5c\">);</span>\n\n        <span style=\"color: #2eb0f7\">try</span> <span style=\"color: #4b4f5c\">{</span>\n            <span style=\"color: #111111\">unsafeMethod</span><span style=\"color: #4b4f5c\">();</span>\n        <span style=\"color: #4b4f5c\">}</span> <span style=\"color: #2eb0f7\">catch</span> <span style=\"color: #4b4f5c\">(</span><span style=\"color: #111111\">Exception</span> <span style=\"color: #111111\">e</span><span style=\"color: #4b4f5c\">)</span> <span style=\"color: #4b4f5c\">{</span>\n            <span style=\"color: #34c08b; font-style: italic\">// This sends an exception event to Sentry.</span>\n            <span style=\"color: #111111\">sentry</span><span style=\"color: #4b4f5c\">.</span><span style=\"color: #a47ac6\">sendException</span><span style=\"color: #4b4f5c\">(</span><span style=\"color: #111111\">e</span><span style=\"color: #4b4f5c\">);</span>\n        <span style=\"color: #4b4f5c\">}</span>\n    <span style=\"color: #4b4f5c\">}</span>\n<span style=\"color: #4b4f5c\">}</span>\n</pre></div>\n</div>\n<div class=\"section\" id=\"building-more-complex-events\">\n<h3>Building More Complex Events</h3>\n<p>For more complex messages, you&#8217;ll need to build an <code class=\"docutils literal\"><span class=\"pre\">Event</span></code> with the\n<code class=\"docutils literal\"><span class=\"pre\">EventBuilder</span></code> class:</p>\n<div class=\"highlight-java\"><div class=\"highlight\" style=\"background: #ffffff\"><pre style=\"line-height: 125%\"><span></span>   <span style=\"color: #2eb0f7\">import</span> <span style=\"color: #111111\">io.sentry.Sentry</span><span style=\"color: #4b4f5c\">;</span>\n   <span style=\"color: #2eb0f7\">import</span> <span style=\"color: #111111\">io.sentry.event.Event</span><span style=\"color: #4b4f5c\">;</span>\n   <span style=\"color: #2eb0f7\">import</span> <span style=\"color: #111111\">io.sentry.event.EventBuilder</span><span style=\"color: #4b4f5c\">;</span>\n   <span style=\"color: #2eb0f7\">import</span> <span style=\"color: #111111\">io.sentry.event.interfaces.ExceptionInterface</span><span style=\"color: #4b4f5c\">;</span>\n\n   <span style=\"color: #2eb0f7\">public</span> <span style=\"color: #2eb0f7\">class</span> <span style=\"color: #111111\">MyClass</span> <span style=\"color: #4b4f5c\">{</span>\n       <span style=\"color: #2eb0f7\">public</span> <span style=\"color: #2eb0f7\">static</span> <span style=\"color: #2eb0f7\">void</span> <span style=\"color: #111111\">main</span><span style=\"color: #4b4f5c\">(</span><span style=\"color: #111111\">String</span><span style=\"color: #4b4f5c\">...</span> <span style=\"color: #111111\">args</span><span style=\"color: #4b4f5c\">)</span> <span style=\"color: #4b4f5c\">{</span>\n           <span style=\"color: #111111\">Sentry</span><span style=\"color: #4b4f5c\">.</span><span style=\"color: #a47ac6\">init</span><span style=\"color: #4b4f5c\">();</span>\n       <span style=\"color: #4b4f5c\">}</span>\n\n       <span style=\"color: #2eb0f7\">void</span> <span style=\"color: #111111\">unsafeMethod</span><span style=\"color: #4b4f5c\">()</span> <span style=\"color: #4b4f5c\">{</span>\n           <span style=\"color: #2eb0f7\">throw</span> <span style=\"color: #2eb0f7\">new</span> <span style=\"color: #111111\">UnsupportedOperationException</span><span style=\"color: #4b4f5c\">(</span><span style=\"color: #e8535a\">&quot;You shouldn&#39;t call this!&quot;</span><span style=\"color: #4b4f5c\">);</span>\n       <span style=\"color: #4b4f5c\">}</span>\n\n       <span style=\"color: #2eb0f7\">void</span> <span style=\"color: #111111\">logSimpleMessage</span><span style=\"color: #4b4f5c\">()</span> <span style=\"color: #4b4f5c\">{</span>\n           <span style=\"color: #34c08b; font-style: italic\">// This sends an event to Sentry.</span>\n           <span style=\"color: #111111\">EventBuilder</span> <span style=\"color: #111111\">eventBuilder</span> <span style=\"color: #4b4f5c\">=</span> <span style=\"color: #2eb0f7\">new</span> <span style=\"color: #111111\">EventBuilder</span><span style=\"color: #4b4f5c\">()</span>\n                           <span style=\"color: #4b4f5c\">.</span><span style=\"color: #a47ac6\">withMessage</span><span style=\"color: #4b4f5c\">(</span><span style=\"color: #e8535a\">&quot;This is a test&quot;</span><span style=\"color: #4b4f5c\">)</span>\n                           <span style=\"color: #4b4f5c\">.</span><span style=\"color: #a47ac6\">withLevel</span><span style=\"color: #4b4f5c\">(</span><span style=\"color: #111111\">Event</span><span style=\"color: #4b4f5c\">.</span><span style=\"color: #a47ac6\">Level</span><span style=\"color: #4b4f5c\">.</span><span style=\"color: #a47ac6\">INFO</span><span style=\"color: #4b4f5c\">)</span>\n                           <span style=\"color: #4b4f5c\">.</span><span style=\"color: #a47ac6\">withLogger</span><span style=\"color: #4b4f5c\">(</span><span style=\"color: #111111\">MyClass</span><span style=\"color: #4b4f5c\">.</span><span style=\"color: #a47ac6\">class</span><span style=\"color: #4b4f5c\">.</span><span style=\"color: #a47ac6\">getName</span><span style=\"color: #4b4f5c\">());</span>\n\n           <span style=\"color: #34c08b; font-style: italic\">// Note that the *unbuilt* EventBuilder instance is passed in so that</span>\n           <span style=\"color: #34c08b; font-style: italic\">// EventBuilderHelpers are run to add extra information to your event.</span>\n           <span style=\"color: #111111\">Sentry</span><span style=\"color: #4b4f5c\">.</span><span style=\"color: #a47ac6\">capture</span><span style=\"color: #4b4f5c\">(</span><span style=\"color: #111111\">eventBuilder</span><span style=\"color: #4b4f5c\">);</span>\n       <span style=\"color: #4b4f5c\">}</span>\n\n       <span style=\"color: #2eb0f7\">void</span> <span style=\"color: #111111\">logException</span><span style=\"color: #4b4f5c\">()</span> <span style=\"color: #4b4f5c\">{</span>\n           <span style=\"color: #2eb0f7\">try</span> <span style=\"color: #4b4f5c\">{</span>\n               <span style=\"color: #111111\">unsafeMethod</span><span style=\"color: #4b4f5c\">();</span>\n           <span style=\"color: #4b4f5c\">}</span> <span style=\"color: #2eb0f7\">catch</span> <span style=\"color: #4b4f5c\">(</span><span style=\"color: #111111\">Exception</span> <span style=\"color: #111111\">e</span><span style=\"color: #4b4f5c\">)</span> <span style=\"color: #4b4f5c\">{</span>\n               <span style=\"color: #34c08b; font-style: italic\">// This sends an exception event to Sentry.</span>\n               <span style=\"color: #111111\">EventBuilder</span> <span style=\"color: #111111\">eventBuilder</span> <span style=\"color: #4b4f5c\">=</span> <span style=\"color: #2eb0f7\">new</span> <span style=\"color: #111111\">EventBuilder</span><span style=\"color: #4b4f5c\">()</span>\n                               <span style=\"color: #4b4f5c\">.</span><span style=\"color: #a47ac6\">withMessage</span><span style=\"color: #4b4f5c\">(</span><span style=\"color: #e8535a\">&quot;Exception caught&quot;</span><span style=\"color: #4b4f5c\">)</span>\n                               <span style=\"color: #4b4f5c\">.</span><span style=\"color: #a47ac6\">withLevel</span><span style=\"color: #4b4f5c\">(</span><span style=\"color: #111111\">Event</span><span style=\"color: #4b4f5c\">.</span><span style=\"color: #a47ac6\">Level</span><span style=\"color: #4b4f5c\">.</span><span style=\"color: #a47ac6\">ERROR</span><span style=\"color: #4b4f5c\">)</span>\n                               <span style=\"color: #4b4f5c\">.</span><span style=\"color: #a47ac6\">withLogger</span><span style=\"color: #4b4f5c\">(</span><span style=\"color: #111111\">MyClass</span><span style=\"color: #4b4f5c\">.</span><span style=\"color: #a47ac6\">class</span><span style=\"color: #4b4f5c\">.</span><span style=\"color: #a47ac6\">getName</span><span style=\"color: #4b4f5c\">())</span>\n                               <span style=\"color: #4b4f5c\">.</span><span style=\"color: #a47ac6\">withSentryInterface</span><span style=\"color: #4b4f5c\">(</span><span style=\"color: #2eb0f7\">new</span> <span style=\"color: #111111\">ExceptionInterface</span><span style=\"color: #4b4f5c\">(</span><span style=\"color: #111111\">e</span><span style=\"color: #4b4f5c\">));</span>\n\n               <span style=\"color: #34c08b; font-style: italic\">// Note that the *unbuilt* EventBuilder instance is passed in so that</span>\n               <span style=\"color: #34c08b; font-style: italic\">// EventBuilderHelpers are run to add extra information to your event.</span>\n               <span style=\"color: #111111\">Sentry</span><span style=\"color: #4b4f5c\">.</span><span style=\"color: #a47ac6\">capture</span><span style=\"color: #4b4f5c\">(</span><span style=\"color: #111111\">eventBuilder</span><span style=\"color: #4b4f5c\">);</span>\n           <span style=\"color: #4b4f5c\">}</span>\n       <span style=\"color: #4b4f5c\">}</span>\n<span style=\"color: #4b4f5c\">}</span>\n</pre></div>\n</div>\n</div>\n<div class=\"section\" id=\"automatically-enhancing-events\">\n<h3>Automatically Enhancing Events</h3>\n<p>You can also implement an <code class=\"docutils literal\"><span class=\"pre\">EventBuilderHelper</span></code> that is able to automatically\nenhance outgoing events.</p>\n<div class=\"highlight-java\"><div class=\"highlight\" style=\"background: #ffffff\"><pre style=\"line-height: 125%\"><span></span><span style=\"color: #2eb0f7\">import</span> <span style=\"color: #111111\">io.sentry.Sentry</span><span style=\"color: #4b4f5c\">;</span>\n<span style=\"color: #2eb0f7\">import</span> <span style=\"color: #111111\">io.sentry.SentryClient</span><span style=\"color: #4b4f5c\">;</span>\n<span style=\"color: #2eb0f7\">import</span> <span style=\"color: #111111\">io.sentry.event.EventBuilder</span><span style=\"color: #4b4f5c\">;</span>\n<span style=\"color: #2eb0f7\">import</span> <span style=\"color: #111111\">io.sentry.event.helper.EventBuilderHelper</span><span style=\"color: #4b4f5c\">;</span>\n\n<span style=\"color: #2eb0f7\">public</span> <span style=\"color: #2eb0f7\">class</span> <span style=\"color: #111111\">MyClass</span> <span style=\"color: #4b4f5c\">{</span>\n    <span style=\"color: #2eb0f7\">public</span> <span style=\"color: #2eb0f7\">void</span> <span style=\"color: #111111\">myMethod</span><span style=\"color: #4b4f5c\">()</span> <span style=\"color: #4b4f5c\">{</span>\n        <span style=\"color: #111111\">SentryClient</span> <span style=\"color: #111111\">client</span> <span style=\"color: #4b4f5c\">=</span> <span style=\"color: #111111\">Sentry</span><span style=\"color: #4b4f5c\">.</span><span style=\"color: #a47ac6\">getStoredClient</span><span style=\"color: #4b4f5c\">();</span>\n\n        <span style=\"color: #111111\">EventBuilderHelper</span> <span style=\"color: #111111\">myEventBuilderHelper</span> <span style=\"color: #4b4f5c\">=</span> <span style=\"color: #2eb0f7\">new</span> <span style=\"color: #111111\">EventBuilderHelper</span><span style=\"color: #4b4f5c\">()</span> <span style=\"color: #4b4f5c\">{</span>\n            <span style=\"color: #696D80\">@Override</span>\n            <span style=\"color: #2eb0f7\">public</span> <span style=\"color: #2eb0f7\">void</span> <span style=\"color: #111111\">helpBuildingEvent</span><span style=\"color: #4b4f5c\">(</span><span style=\"color: #111111\">EventBuilder</span> <span style=\"color: #111111\">eventBuilder</span><span style=\"color: #4b4f5c\">)</span> <span style=\"color: #4b4f5c\">{</span>\n                <span style=\"color: #111111\">eventBuilder</span><span style=\"color: #4b4f5c\">.</span><span style=\"color: #a47ac6\">withMessage</span><span style=\"color: #4b4f5c\">(</span><span style=\"color: #e8535a\">&quot;Overwritten by myEventBuilderHelper!&quot;</span><span style=\"color: #4b4f5c\">);</span>\n            <span style=\"color: #4b4f5c\">}</span>\n        <span style=\"color: #4b4f5c\">};</span>\n\n        <span style=\"color: #34c08b; font-style: italic\">// Add an ``EventBuilderHelper`` to the current client instance. Note that</span>\n        <span style=\"color: #34c08b; font-style: italic\">// this helper will process *all* future events.</span>\n        <span style=\"color: #111111\">client</span><span style=\"color: #4b4f5c\">.</span><span style=\"color: #a47ac6\">addBuilderHelper</span><span style=\"color: #4b4f5c\">(</span><span style=\"color: #111111\">myEventBuilderHelper</span><span style=\"color: #4b4f5c\">);</span>\n\n        <span style=\"color: #34c08b; font-style: italic\">// Send an event to Sentry. During construction of the event the message</span>\n        <span style=\"color: #34c08b; font-style: italic\">// body will be overwritten by ``myEventBuilderHelper``.</span>\n        <span style=\"color: #111111\">Sentry</span><span style=\"color: #4b4f5c\">.</span><span style=\"color: #a47ac6\">capture</span><span style=\"color: #4b4f5c\">(</span><span style=\"color: #e8535a\">&quot;Hello, world!&quot;</span><span style=\"color: #4b4f5c\">);</span>\n    <span style=\"color: #4b4f5c\">}</span>\n<span style=\"color: #4b4f5c\">}</span>\n</pre></div>\n</div>\n</div>\n</div>\n", 
+  "link": "https://docs.getsentry.com/hosted/clients/java/", 
+  "id": "java", 
+  "name": "Java"
+}
diff --git a/tests/fixtures/integration-docs/javascript-angular.json b/tests/fixtures/integration-docs/javascript-angular.json
new file mode 100644
index 0000000000..f4e6a3ff3a
--- /dev/null
+++ b/tests/fixtures/integration-docs/javascript-angular.json
@@ -0,0 +1,6 @@
+{
+  "html": "<div class=\"section\" id=\"installation\">\n<h2>Installation</h2>\n<p>Raven.js should be installed via npm.</p>\n<div class=\"highlight-sh\"><div class=\"highlight\" style=\"background: #ffffff\"><pre style=\"line-height: 125%\"><span></span>$ npm install raven-js --save\n</pre></div>\n</div>\n</div>\n\n\n<div class=\"section\" id=\"configuration\">\n<h2>Configuration</h2>\n<p>Configuration depends on which module loader/packager you are using to build your Angular application.</p>\n<p>Below are instructions for <a class=\"reference external\" href=\"https://github.com/systemjs/systemjs\">SystemJS</a>, followed by instructions for <a class=\"reference external\" href=\"https://webpack.github.io/\">Webpack</a>, Angular CLI, and other module loaders/packagers.</p>\n<div class=\"section\" id=\"systemjs\">\n<h3>SystemJS</h3>\n<p>First, configure SystemJS to locate the Raven.js package:</p>\n<div class=\"highlight-js\"><div class=\"highlight\" style=\"background: #ffffff\"><pre style=\"line-height: 125%\"><span></span><span style=\"color: #111111\">System.config({</span>\n  <span style=\"color: #111111\">packages</span><span style=\"color: #4b4f5c\">:</span> <span style=\"color: #111111\">{</span>\n    <span style=\"color: #34c08b; font-style: italic\">/* ... existing packages above ... */</span>\n    <span style=\"color: #e8535a\">&#39;raven-js&#39;</span><span style=\"color: #4b4f5c\">:</span> <span style=\"color: #111111\">{</span>\n      <span style=\"color: #111111\">main</span><span style=\"color: #4b4f5c\">:</span> <span style=\"color: #e8535a\">&#39;dist/raven.js&#39;</span>\n    <span style=\"color: #111111\">}</span>\n  <span style=\"color: #111111\">},</span>\n  <span style=\"color: #111111\">paths</span><span style=\"color: #4b4f5c\">:</span> <span style=\"color: #111111\">{</span>\n    <span style=\"color: #34c08b; font-style: italic\">/* ... existing paths above ... */</span>\n    <span style=\"color: #e8535a\">&#39;raven-js&#39;</span><span style=\"color: #4b4f5c\">:</span> <span style=\"color: #e8535a\">&#39;node_modules/raven-js&#39;</span>\n  <span style=\"color: #111111\">}</span>\n<span style=\"color: #111111\">});</span>\n</pre></div>\n</div>\n<p>Then, in your main module file (where <code class=\"docutils literal\"><span class=\"pre\">&#64;NgModule</span></code> is called, e.g. app.module.ts):</p>\n<div class=\"highlight-js\"><div class=\"highlight\" style=\"background: #ffffff\"><pre style=\"line-height: 125%\"><span></span>import Raven = require(&#39;raven-js&#39;);\nimport { BrowserModule } from &#39;@angular/platform-browser&#39;;\nimport { NgModule, ErrorHandler } from &#39;@angular/core&#39;;\nimport { AppComponent } from &#39;./app.component&#39;;\n\nRaven\n  .config(&#39;___PUBLIC_DSN___&#39;)\n  .install();\n\nexport class RavenErrorHandler implements ErrorHandler {\n  handleError(err:any) : void {\n    Raven.captureException(err.originalError || err);\n  }\n}\n\n@NgModule({\n  imports: [ BrowserModule ],\n  declarations: [ AppComponent ],\n  bootstrap: [ AppComponent ],\n  providers: [ { provide: ErrorHandler, useClass: RavenErrorHandler } ]\n})\nexport class AppModule { }\n</pre></div>\n</div>\n<p>Once you&#8217;ve completed these two steps, you are done.</p>\n</div>\n<div class=\"section\" id=\"angular-cli\">\n<h3>Angular CLI</h3>\n<p>Angular CLI now uses Webpack to build instead of SystemJS. All you need to do is modify your main module file (where <code class=\"docutils literal\"><span class=\"pre\">&#64;NgModule</span></code> is called, e.g. app.module.ts):</p>\n<div class=\"highlight-js\"><div class=\"highlight\" style=\"background: #ffffff\"><pre style=\"line-height: 125%\"><span></span>import * as Raven from &#39;raven-js&#39;;\nimport { BrowserModule } from &#39;@angular/platform-browser&#39;;\nimport { NgModule, ErrorHandler } from &#39;@angular/core&#39;;\nimport { AppComponent } from &#39;./app.component&#39;;\n\nRaven\n  .config(&#39;___PUBLIC_DSN___&#39;)\n  .install();\n\nexport class RavenErrorHandler implements ErrorHandler {\n  handleError(err:any) : void {\n    Raven.captureException(err);\n  }\n}\n\n@NgModule({\n  imports: [ BrowserModule ],\n  declarations: [ AppComponent ],\n  bootstrap: [ AppComponent ],\n  providers: [ { provide: ErrorHandler, useClass: RavenErrorHandler } ]\n})\nexport class AppModule { }\n</pre></div>\n</div>\n<p>Once you&#8217;ve completed that step, you are done.</p>\n</div>\n</div>\n", 
+  "link": "https://docs.getsentry.com/hosted/clients/javascript/integrations/angular/", 
+  "id": "javascript-angular", 
+  "name": "Angular"
+}
diff --git a/tests/fixtures/integration-docs/javascript-angular2.json b/tests/fixtures/integration-docs/javascript-angular2.json
new file mode 100644
index 0000000000..431caa4054
--- /dev/null
+++ b/tests/fixtures/integration-docs/javascript-angular2.json
@@ -0,0 +1,6 @@
+{
+  "html": "<div class=\"section\" id=\"installation\">\n<h2>Installation</h2>\n<p>Raven.js should be installed via npm.</p>\n<div class=\"highlight-sh\"><div class=\"highlight\" style=\"background: #ffffff\"><pre style=\"line-height: 125%\"><span></span>$ npm install raven-js --save\n</pre></div>\n</div>\n</div>\n\n\n<div class=\"section\" id=\"configuration\">\n<h2>Configuration</h2>\n<p>Configuration depends on which module loader/packager you are using to build your Angular 2 application.</p>\n<p>Below are instructions for <a class=\"reference external\" href=\"https://github.com/systemjs/systemjs\">SystemJS</a>, followed by instructions for <a class=\"reference external\" href=\"https://webpack.github.io/\">Webpack</a>, Angular CLI, and other module loaders/packagers.</p>\n<div class=\"section\" id=\"systemjs\">\n<h3>SystemJS</h3>\n<p>First, configure SystemJS to locate the Raven.js package:</p>\n<div class=\"highlight-js\"><div class=\"highlight\" style=\"background: #ffffff\"><pre style=\"line-height: 125%\"><span></span><span style=\"color: #111111\">System.config({</span>\n  <span style=\"color: #111111\">packages</span><span style=\"color: #4b4f5c\">:</span> <span style=\"color: #111111\">{</span>\n    <span style=\"color: #34c08b; font-style: italic\">/* ... existing packages above ... */</span>\n    <span style=\"color: #e8535a\">&#39;raven-js&#39;</span><span style=\"color: #4b4f5c\">:</span> <span style=\"color: #111111\">{</span>\n      <span style=\"color: #111111\">main</span><span style=\"color: #4b4f5c\">:</span> <span style=\"color: #e8535a\">&#39;dist/raven.js&#39;</span>\n    <span style=\"color: #111111\">}</span>\n  <span style=\"color: #111111\">},</span>\n  <span style=\"color: #111111\">paths</span><span style=\"color: #4b4f5c\">:</span> <span style=\"color: #111111\">{</span>\n    <span style=\"color: #34c08b; font-style: italic\">/* ... existing paths above ... */</span>\n    <span style=\"color: #e8535a\">&#39;raven-js&#39;</span><span style=\"color: #4b4f5c\">:</span> <span style=\"color: #e8535a\">&#39;node_modules/raven-js&#39;</span>\n  <span style=\"color: #111111\">}</span>\n<span style=\"color: #111111\">});</span>\n</pre></div>\n</div>\n<p>Then, in your main application file (where <code class=\"docutils literal\"><span class=\"pre\">bootstrap</span></code> is called, e.g. main.ts):</p>\n<div class=\"highlight-js\"><div class=\"highlight\" style=\"background: #ffffff\"><pre style=\"line-height: 125%\"><span></span><span style=\"color: #2eb0f7\">import</span> <span style=\"color: #111111\">Raven</span> <span style=\"color: #111111\">from</span> <span style=\"color: #e8535a\">&#39;raven-js&#39;</span><span style=\"color: #111111\">;</span>\n<span style=\"color: #2eb0f7\">import</span> <span style=\"color: #111111\">{</span> <span style=\"color: #111111\">bootstrap</span> <span style=\"color: #111111\">}</span> <span style=\"color: #111111\">from</span> <span style=\"color: #e8535a\">&#39;angular2/platform/browser&#39;</span><span style=\"color: #111111\">;</span>\n<span style=\"color: #2eb0f7\">import</span> <span style=\"color: #111111\">{</span> <span style=\"color: #111111\">MainApp</span> <span style=\"color: #111111\">}</span> <span style=\"color: #111111\">from</span> <span style=\"color: #e8535a\">&#39;./app.component&#39;</span><span style=\"color: #111111\">;</span>\n<span style=\"color: #2eb0f7\">import</span> <span style=\"color: #111111\">{</span> <span style=\"color: #111111\">provide,</span> <span style=\"color: #111111\">ExceptionHandler</span> <span style=\"color: #111111\">}</span> <span style=\"color: #111111\">from</span> <span style=\"color: #e8535a\">&#39;angular2/core&#39;</span><span style=\"color: #111111\">;</span>\n\n<span style=\"color: #111111\">Raven</span>\n  <span style=\"color: #111111\">.config(</span><span style=\"color: #e8535a\">&#39;___PUBLIC_DSN___&#39;</span><span style=\"color: #111111\">)</span>\n  <span style=\"color: #111111\">.install();</span>\n\n<span style=\"color: #2eb0f7\">class</span> <span style=\"color: #111111\">RavenExceptionHandler</span> <span style=\"color: #111111\">{</span>\n  <span style=\"color: #111111\">call(err</span><span style=\"color: #4b4f5c\">:</span><span style=\"color: #111111\">any)</span> <span style=\"color: #111111\">{</span>\n    <span style=\"color: #111111\">Raven.captureException(err.originalException);</span>\n  <span style=\"color: #111111\">}</span>\n<span style=\"color: #111111\">}</span>\n\n<span style=\"color: #111111\">bootstrap(MainApp,</span> <span style=\"color: #111111\">[</span>\n  <span style=\"color: #111111\">provide(ExceptionHandler,</span> <span style=\"color: #111111\">{useClass</span><span style=\"color: #4b4f5c\">:</span> <span style=\"color: #111111\">RavenExceptionHandler})</span>\n<span style=\"color: #111111\">]);</span>\n</pre></div>\n</div>\n<p>Once you&#8217;ve completed these two steps, you are done.</p>\n</div>\n<div class=\"section\" id=\"webpack-angular-cli-and-other-module-loaders\">\n<h3>Webpack, Angular CLI, and Other Module Loaders</h3>\n<p>In Webpack, Angular CLI, and other module loaders/packagers, you may need to use the <strong>require</strong> keyword as\npart of your <cite>import</cite> statement:</p>\n<div class=\"highlight-js\"><div class=\"highlight\" style=\"background: #ffffff\"><pre style=\"line-height: 125%\"><span></span><span style=\"color: #2eb0f7\">import</span> <span style=\"color: #111111\">Raven</span> <span style=\"color: #4b4f5c\">=</span> <span style=\"color: #111111\">require(</span><span style=\"color: #e8535a\">&#39;raven-js&#39;</span><span style=\"color: #111111\">);</span>  <span style=\"color: #34c08b; font-style: italic\">// NOTE: &quot;require&quot; not &quot;from&quot;</span>\n<span style=\"color: #2eb0f7\">import</span> <span style=\"color: #111111\">{</span> <span style=\"color: #111111\">bootstrap</span> <span style=\"color: #111111\">}</span> <span style=\"color: #111111\">from</span> <span style=\"color: #e8535a\">&#39;angular2/platform/browser&#39;</span><span style=\"color: #111111\">;</span>\n<span style=\"color: #2eb0f7\">import</span> <span style=\"color: #111111\">{</span> <span style=\"color: #111111\">MainApp</span> <span style=\"color: #111111\">}</span> <span style=\"color: #111111\">from</span> <span style=\"color: #e8535a\">&#39;./app.component&#39;</span><span style=\"color: #111111\">;</span>\n<span style=\"color: #2eb0f7\">import</span> <span style=\"color: #111111\">{</span> <span style=\"color: #111111\">provide,</span> <span style=\"color: #111111\">ExceptionHandler</span> <span style=\"color: #111111\">}</span> <span style=\"color: #111111\">from</span> <span style=\"color: #e8535a\">&#39;angular2/core&#39;</span><span style=\"color: #111111\">;</span>\n\n<span style=\"color: #111111\">Raven</span>\n  <span style=\"color: #111111\">.config(</span><span style=\"color: #e8535a\">&#39;___PUBLIC_DSN___&#39;</span><span style=\"color: #111111\">)</span>\n  <span style=\"color: #111111\">.install();</span>\n\n<span style=\"color: #2eb0f7\">class</span> <span style=\"color: #111111\">RavenExceptionHandler</span> <span style=\"color: #111111\">{</span>\n  <span style=\"color: #111111\">call(err</span><span style=\"color: #4b4f5c\">:</span><span style=\"color: #111111\">any)</span> <span style=\"color: #111111\">{</span>\n    <span style=\"color: #111111\">Raven.captureException(err.originalException);</span>\n  <span style=\"color: #111111\">}</span>\n<span style=\"color: #111111\">}</span>\n\n<span style=\"color: #111111\">bootstrap(MainApp,</span> <span style=\"color: #111111\">[</span>\n  <span style=\"color: #111111\">provide(ExceptionHandler,</span> <span style=\"color: #111111\">{useClass</span><span style=\"color: #4b4f5c\">:</span> <span style=\"color: #111111\">RavenExceptionHandler})</span>\n<span style=\"color: #111111\">]);</span>\n</pre></div>\n</div>\n</div>\n</div>\n", 
+  "link": "https://docs.getsentry.com/hosted/clients/javascript/integrations/angular2/", 
+  "id": "javascript-angular2", 
+  "name": "Angular 2"
+}
diff --git a/tests/fixtures/integration-docs/javascript-angularjs.json b/tests/fixtures/integration-docs/javascript-angularjs.json
new file mode 100644
index 0000000000..379e317d45
--- /dev/null
+++ b/tests/fixtures/integration-docs/javascript-angularjs.json
@@ -0,0 +1,6 @@
+{
+  "html": "<div class=\"section\" id=\"installation\">\n<h2>Installation</h2>\n<p>Raven.js and the Raven.js Angular plugin are distributed using a few different methods.</p>\n<div class=\"section\" id=\"using-our-cdn\">\n<h3>Using our CDN</h3>\n<p>For convenience, our CDN serves a single, minified JavaScript file containing both Raven.js and the Raven.js AngularJS plugin. It should be included <strong>after</strong> Angular, but <strong>before</strong> your application code.</p>\n<p>Example:</p>\n<div class=\"highlight-html\"><div class=\"highlight\" style=\"background: #ffffff\"><pre style=\"line-height: 125%\"><span></span><span style=\"color: #111111\">&lt;</span><span style=\"color: #2eb0f7\">script</span> <span style=\"color: #a47ac6\">src</span><span style=\"color: #4b4f5c\">=</span><span style=\"color: #e8535a\">&quot;https://ajax.googleapis.com/ajax/libs/angularjs/1.4.5/angular.min.js&quot;</span><span style=\"color: #111111\">&gt;&lt;/</span><span style=\"color: #2eb0f7\">script</span><span style=\"color: #111111\">&gt;</span>\n<span style=\"color: #111111\">&lt;</span><span style=\"color: #2eb0f7\">script</span> <span style=\"color: #a47ac6\">src</span><span style=\"color: #4b4f5c\">=</span><span style=\"color: #e8535a\">&quot;https://cdn.ravenjs.com/3.20.1/angular/raven.min.js&quot;</span> <span style=\"color: #a47ac6\">crossorigin</span><span style=\"color: #4b4f5c\">=</span><span style=\"color: #e8535a\">&quot;anonymous&quot;</span><span style=\"color: #111111\">&gt;&lt;/</span><span style=\"color: #2eb0f7\">script</span><span style=\"color: #111111\">&gt;</span>\n<span style=\"color: #111111\">&lt;</span><span style=\"color: #2eb0f7\">script</span><span style=\"color: #111111\">&gt;Raven.config(</span><span style=\"color: #e8535a\">&#39;___PUBLIC_DSN___&#39;</span><span style=\"color: #111111\">).install();&lt;/</span><span style=\"color: #2eb0f7\">script</span><span style=\"color: #111111\">&gt;</span>\n</pre></div>\n</div>\n<p>Note that this CDN build auto-initializes the Angular plugin.</p>\n</div>\n<div class=\"section\" id=\"using-package-managers\">\n<h3>Using package managers</h3>\n<p>Pre-built distributions of Raven.js and the Raven.js AngularJS plugin are available via both Bower and npm.</p>\n<div class=\"section\" id=\"bower\">\n<h4>Bower</h4>\n<div class=\"highlight-sh\"><div class=\"highlight\" style=\"background: #ffffff\"><pre style=\"line-height: 125%\"><span></span>$ bower install raven-js --save\n</pre></div>\n</div>\n<div class=\"highlight-html\"><div class=\"highlight\" style=\"background: #ffffff\"><pre style=\"line-height: 125%\"><span></span><span style=\"color: #111111\">&lt;</span><span style=\"color: #2eb0f7\">script</span> <span style=\"color: #a47ac6\">src</span><span style=\"color: #4b4f5c\">=</span><span style=\"color: #e8535a\">&quot;/bower_components/angular/angular.js&quot;</span><span style=\"color: #111111\">&gt;&lt;/</span><span style=\"color: #2eb0f7\">script</span><span style=\"color: #111111\">&gt;</span>\n<span style=\"color: #111111\">&lt;</span><span style=\"color: #2eb0f7\">script</span> <span style=\"color: #a47ac6\">src</span><span style=\"color: #4b4f5c\">=</span><span style=\"color: #e8535a\">&quot;/bower_components/raven-js/dist/raven.js&quot;</span><span style=\"color: #111111\">&gt;&lt;/</span><span style=\"color: #2eb0f7\">script</span><span style=\"color: #111111\">&gt;</span>\n<span style=\"color: #111111\">&lt;</span><span style=\"color: #2eb0f7\">script</span> <span style=\"color: #a47ac6\">src</span><span style=\"color: #4b4f5c\">=</span><span style=\"color: #e8535a\">&quot;/bower_components/raven-js/dist/plugins/angular.js&quot;</span><span style=\"color: #111111\">&gt;&lt;/</span><span style=\"color: #2eb0f7\">script</span><span style=\"color: #111111\">&gt;</span>\n<span style=\"color: #111111\">&lt;</span><span style=\"color: #2eb0f7\">script</span><span style=\"color: #111111\">&gt;</span>\n  <span style=\"color: #111111\">Raven</span>\n    <span style=\"color: #111111\">.config(</span><span style=\"color: #e8535a\">&#39;___PUBLIC_DSN___&#39;</span><span style=\"color: #111111\">)</span>\n    <span style=\"color: #111111\">.addPlugin(Raven.Plugins.Angular)</span>\n    <span style=\"color: #111111\">.install();</span>\n<span style=\"color: #111111\">&lt;/</span><span style=\"color: #2eb0f7\">script</span><span style=\"color: #111111\">&gt;</span>\n</pre></div>\n</div>\n</div>\n<div class=\"section\" id=\"npm\">\n<h4>npm</h4>\n<div class=\"highlight-sh\"><div class=\"highlight\" style=\"background: #ffffff\"><pre style=\"line-height: 125%\"><span></span>$ npm install raven-js --save\n</pre></div>\n</div>\n<div class=\"highlight-html\"><div class=\"highlight\" style=\"background: #ffffff\"><pre style=\"line-height: 125%\"><span></span><span style=\"color: #111111\">&lt;</span><span style=\"color: #2eb0f7\">script</span> <span style=\"color: #a47ac6\">src</span><span style=\"color: #4b4f5c\">=</span><span style=\"color: #e8535a\">&quot;/node_modules/angular/angular.js&quot;</span><span style=\"color: #111111\">&gt;&lt;/</span><span style=\"color: #2eb0f7\">script</span><span style=\"color: #111111\">&gt;</span>\n<span style=\"color: #111111\">&lt;</span><span style=\"color: #2eb0f7\">script</span> <span style=\"color: #a47ac6\">src</span><span style=\"color: #4b4f5c\">=</span><span style=\"color: #e8535a\">&quot;/node_modules/raven-js/dist/raven.js&quot;</span><span style=\"color: #111111\">&gt;&lt;/</span><span style=\"color: #2eb0f7\">script</span><span style=\"color: #111111\">&gt;</span>\n<span style=\"color: #111111\">&lt;</span><span style=\"color: #2eb0f7\">script</span> <span style=\"color: #a47ac6\">src</span><span style=\"color: #4b4f5c\">=</span><span style=\"color: #e8535a\">&quot;/node_modules/raven-js/dist/plugins/angular.js&quot;</span><span style=\"color: #111111\">&gt;&lt;/</span><span style=\"color: #2eb0f7\">script</span><span style=\"color: #111111\">&gt;</span>\n<span style=\"color: #111111\">&lt;</span><span style=\"color: #2eb0f7\">script</span><span style=\"color: #111111\">&gt;</span>\n  <span style=\"color: #111111\">Raven</span>\n    <span style=\"color: #111111\">.config(</span><span style=\"color: #e8535a\">&#39;___PUBLIC_DSN___&#39;</span><span style=\"color: #111111\">)</span>\n    <span style=\"color: #111111\">.addPlugin(Raven.Plugins.Angular)</span>\n    <span style=\"color: #111111\">.install();</span>\n<span style=\"color: #111111\">&lt;/</span><span style=\"color: #2eb0f7\">script</span><span style=\"color: #111111\">&gt;</span>\n</pre></div>\n</div>\n<p>These examples assume that AngularJS is exported globally as <cite>window.angular</cite>. You can alternatively pass a reference to the <cite>angular</cite> object directly as the second argument to <cite>addPlugin</cite>:</p>\n<div class=\"highlight-javascript\"><div class=\"highlight\" style=\"background: #ffffff\"><pre style=\"line-height: 125%\"><span></span><span style=\"color: #111111\">Raven.addPlugin(Raven.Plugins.Angular,</span> <span style=\"color: #111111\">angular);</span>\n</pre></div>\n</div>\n</div>\n</div>\n<div class=\"section\" id=\"module-loaders-commonjs\">\n<h3>Module loaders (CommonJS)</h3>\n<p>Raven and the Raven AngularJS plugin can be loaded using a module loader like Browserify or Webpack.</p>\n<div class=\"highlight-javascript\"><div class=\"highlight\" style=\"background: #ffffff\"><pre style=\"line-height: 125%\"><span></span><span style=\"color: #2eb0f7\">var</span> <span style=\"color: #111111\">angular</span> <span style=\"color: #4b4f5c\">=</span> <span style=\"color: #111111\">require(</span><span style=\"color: #e8535a\">&#39;angular&#39;</span><span style=\"color: #111111\">);</span>\n<span style=\"color: #2eb0f7\">var</span> <span style=\"color: #111111\">Raven</span> <span style=\"color: #4b4f5c\">=</span> <span style=\"color: #111111\">require(</span><span style=\"color: #e8535a\">&#39;raven-js&#39;</span><span style=\"color: #111111\">);</span>\n\n<span style=\"color: #111111\">Raven</span>\n  <span style=\"color: #111111\">.config(</span><span style=\"color: #e8535a\">&#39;___PUBLIC_DSN___&#39;</span><span style=\"color: #111111\">)</span>\n  <span style=\"color: #111111\">.addPlugin(require(</span><span style=\"color: #e8535a\">&#39;raven-js/plugins/angular&#39;</span><span style=\"color: #111111\">),</span> <span style=\"color: #111111\">angular)</span>\n  <span style=\"color: #111111\">.install();</span>\n</pre></div>\n</div>\n<p>Note that when using CommonJS-style imports, you must pass a reference to <cite>angular</cite> as the second argument to <cite>addPlugin</cite>.</p>\n</div>\n</div>\n", 
+  "link": "https://docs.getsentry.com/hosted/clients/javascript/integrations/angularjs/", 
+  "id": "javascript-angularjs", 
+  "name": "AngularJS"
+}
diff --git a/tests/fixtures/integration-docs/javascript-backbone.json b/tests/fixtures/integration-docs/javascript-backbone.json
new file mode 100644
index 0000000000..74e842536f
--- /dev/null
+++ b/tests/fixtures/integration-docs/javascript-backbone.json
@@ -0,0 +1,6 @@
+{
+  "html": "<div class=\"section\" id=\"installation\">\n<h2>Installation</h2>\n<p>Start by adding the <code class=\"docutils literal\"><span class=\"pre\">raven.js</span></code> script tag to your page. It should be loaded as early as possible.</p>\n<div class=\"highlight-html\"><div class=\"highlight\" style=\"background: #ffffff\"><pre style=\"line-height: 125%\"><span></span><span style=\"color: #111111\">&lt;</span><span style=\"color: #2eb0f7\">script</span> <span style=\"color: #a47ac6\">src</span><span style=\"color: #4b4f5c\">=</span><span style=\"color: #e8535a\">&quot;https://cdn.ravenjs.com/3.20.1/raven.min.js&quot;</span>\n    <span style=\"color: #a47ac6\">crossorigin</span><span style=\"color: #4b4f5c\">=</span><span style=\"color: #e8535a\">&quot;anonymous&quot;</span><span style=\"color: #111111\">&gt;&lt;/</span><span style=\"color: #2eb0f7\">script</span><span style=\"color: #111111\">&gt;</span>\n</pre></div>\n</div>\n</div>\n\n\n<div class=\"section\" id=\"configuring-the-client\">\n<h2>Configuring the Client</h2>\n<p>Next configure Raven.js to use your Sentry DSN:</p>\n<div class=\"highlight-javascript\"><div class=\"highlight\" style=\"background: #ffffff\"><pre style=\"line-height: 125%\"><span></span><span style=\"color: #111111\">Raven.config(</span><span style=\"color: #e8535a\">&#39;___PUBLIC_DSN___&#39;</span><span style=\"color: #111111\">).install()</span>\n</pre></div>\n</div>\n<p>At this point, Raven is ready to capture any uncaught exception.</p>\n</div>\n", 
+  "link": "https://docs.getsentry.com/hosted/clients/javascript/integrations/backbone/", 
+  "id": "javascript-backbone", 
+  "name": "Backbone"
+}
diff --git a/tests/fixtures/integration-docs/javascript-ember.json b/tests/fixtures/integration-docs/javascript-ember.json
new file mode 100644
index 0000000000..4126bf983a
--- /dev/null
+++ b/tests/fixtures/integration-docs/javascript-ember.json
@@ -0,0 +1,6 @@
+{
+  "html": "<div class=\"section\" id=\"installation\">\n<h2>Installation</h2>\n<p>Raven.js and the Raven.js Ember plugin are distributed using a few different methods.</p>\n<div class=\"section\" id=\"using-our-cdn\">\n<h3>Using our CDN</h3>\n<p>For convenience, our CDN serves a single, minified JavaScript file containing both Raven.js and the Raven.js Ember plugin. It should be included <strong>after</strong> Ember, but <strong>before</strong> your application code.</p>\n<p>Example:</p>\n<div class=\"highlight-html\"><div class=\"highlight\" style=\"background: #ffffff\"><pre style=\"line-height: 125%\"><span></span><span style=\"color: #111111\">&lt;</span><span style=\"color: #2eb0f7\">script</span> <span style=\"color: #a47ac6\">src</span><span style=\"color: #4b4f5c\">=</span><span style=\"color: #e8535a\">&quot;http://builds.emberjs.com/tags/v2.3.1/ember.prod.js&quot;</span><span style=\"color: #111111\">&gt;&lt;/</span><span style=\"color: #2eb0f7\">script</span><span style=\"color: #111111\">&gt;</span>\n<span style=\"color: #111111\">&lt;</span><span style=\"color: #2eb0f7\">script</span> <span style=\"color: #a47ac6\">src</span><span style=\"color: #4b4f5c\">=</span><span style=\"color: #e8535a\">&quot;https://cdn.ravenjs.com/3.20.1/ember/raven.min.js&quot;</span> <span style=\"color: #a47ac6\">crossorigin</span><span style=\"color: #4b4f5c\">=</span><span style=\"color: #e8535a\">&quot;anonymous&quot;</span><span style=\"color: #111111\">&gt;&lt;/</span><span style=\"color: #2eb0f7\">script</span><span style=\"color: #111111\">&gt;</span>\n<span style=\"color: #111111\">&lt;</span><span style=\"color: #2eb0f7\">script</span><span style=\"color: #111111\">&gt;Raven.config(</span><span style=\"color: #e8535a\">&#39;___PUBLIC_DSN___&#39;</span><span style=\"color: #111111\">).install();&lt;/</span><span style=\"color: #2eb0f7\">script</span><span style=\"color: #111111\">&gt;</span>\n</pre></div>\n</div>\n<p>Note that this CDN build auto-initializes the Ember plugin.</p>\n</div>\n<div class=\"section\" id=\"using-package-managers\">\n<h3>Using package managers</h3>\n<p>Pre-built distributions of Raven.js and the Raven.js Ember plugin are available via both Bower and npm for importing in your <code class=\"docutils literal\"><span class=\"pre\">ember-cli-build.js</span></code> file.</p>\n<div class=\"section\" id=\"bower\">\n<h4>Bower</h4>\n<div class=\"highlight-sh\"><div class=\"highlight\" style=\"background: #ffffff\"><pre style=\"line-height: 125%\"><span></span>$ bower install raven-js --save\n</pre></div>\n</div>\n<div class=\"highlight-javascript\"><div class=\"highlight\" style=\"background: #ffffff\"><pre style=\"line-height: 125%\"><span></span><span style=\"color: #111111\">app.</span><span style=\"color: #2eb0f7\">import</span><span style=\"color: #111111\">(</span><span style=\"color: #e8535a\">&#39;bower_components/raven-js/dist/raven.js&#39;</span><span style=\"color: #111111\">);</span>\n<span style=\"color: #111111\">app.</span><span style=\"color: #2eb0f7\">import</span><span style=\"color: #111111\">(</span><span style=\"color: #e8535a\">&#39;bower_components/raven-js/dist/plugins/ember.js&#39;</span><span style=\"color: #111111\">);</span>\n</pre></div>\n</div>\n<div class=\"highlight-html\"><div class=\"highlight\" style=\"background: #ffffff\"><pre style=\"line-height: 125%\"><span></span><span style=\"color: #111111\">&lt;</span><span style=\"color: #2eb0f7\">script</span> <span style=\"color: #a47ac6\">src</span><span style=\"color: #4b4f5c\">=</span><span style=\"color: #e8535a\">&quot;assets/vendor.js&quot;</span><span style=\"color: #111111\">&gt;&lt;/</span><span style=\"color: #2eb0f7\">script</span><span style=\"color: #111111\">&gt;</span>\n<span style=\"color: #111111\">&lt;</span><span style=\"color: #2eb0f7\">script</span><span style=\"color: #111111\">&gt;</span>\n  <span style=\"color: #111111\">Raven</span>\n    <span style=\"color: #111111\">.config(</span><span style=\"color: #e8535a\">&#39;___PUBLIC_DSN___&#39;</span><span style=\"color: #111111\">)</span>\n    <span style=\"color: #111111\">.addPlugin(Raven.Plugins.Ember)</span>\n    <span style=\"color: #111111\">.install();</span>\n<span style=\"color: #111111\">&lt;/</span><span style=\"color: #2eb0f7\">script</span><span style=\"color: #111111\">&gt;</span>\n<span style=\"color: #111111\">&lt;</span><span style=\"color: #2eb0f7\">script</span> <span style=\"color: #a47ac6\">src</span><span style=\"color: #4b4f5c\">=</span><span style=\"color: #e8535a\">&quot;assets/your-app.js&quot;</span><span style=\"color: #111111\">&gt;&lt;/</span><span style=\"color: #2eb0f7\">script</span><span style=\"color: #111111\">&gt;</span>\n</pre></div>\n</div>\n</div>\n<div class=\"section\" id=\"npm\">\n<h4>npm</h4>\n<div class=\"highlight-sh\"><div class=\"highlight\" style=\"background: #ffffff\"><pre style=\"line-height: 125%\"><span></span>$ npm install raven-js --save\n</pre></div>\n</div>\n<div class=\"highlight-javascript\"><div class=\"highlight\" style=\"background: #ffffff\"><pre style=\"line-height: 125%\"><span></span><span style=\"color: #111111\">app.</span><span style=\"color: #2eb0f7\">import</span><span style=\"color: #111111\">(</span><span style=\"color: #e8535a\">&#39;node_modules/raven-js/dist/raven.js&#39;</span><span style=\"color: #111111\">);</span>\n<span style=\"color: #111111\">app.</span><span style=\"color: #2eb0f7\">import</span><span style=\"color: #111111\">(</span><span style=\"color: #e8535a\">&#39;node_modules/raven-js/dist/plugins/ember.js&#39;</span><span style=\"color: #111111\">);</span>\n</pre></div>\n</div>\n<div class=\"highlight-html\"><div class=\"highlight\" style=\"background: #ffffff\"><pre style=\"line-height: 125%\"><span></span><span style=\"color: #111111\">&lt;</span><span style=\"color: #2eb0f7\">script</span> <span style=\"color: #a47ac6\">src</span><span style=\"color: #4b4f5c\">=</span><span style=\"color: #e8535a\">&quot;assets/vendor.js&quot;</span><span style=\"color: #111111\">&gt;&lt;/</span><span style=\"color: #2eb0f7\">script</span><span style=\"color: #111111\">&gt;</span>\n<span style=\"color: #111111\">&lt;</span><span style=\"color: #2eb0f7\">script</span><span style=\"color: #111111\">&gt;</span>\n  <span style=\"color: #111111\">Raven</span>\n    <span style=\"color: #111111\">.config(</span><span style=\"color: #e8535a\">&#39;___PUBLIC_DSN___&#39;</span><span style=\"color: #111111\">)</span>\n    <span style=\"color: #111111\">.addPlugin(Raven.Plugins.Ember)</span>\n    <span style=\"color: #111111\">.install();</span>\n<span style=\"color: #111111\">&lt;/</span><span style=\"color: #2eb0f7\">script</span><span style=\"color: #111111\">&gt;</span>\n<span style=\"color: #111111\">&lt;</span><span style=\"color: #2eb0f7\">script</span> <span style=\"color: #a47ac6\">src</span><span style=\"color: #4b4f5c\">=</span><span style=\"color: #e8535a\">&quot;assets/your-app.js&quot;</span><span style=\"color: #111111\">&gt;&lt;/</span><span style=\"color: #2eb0f7\">script</span><span style=\"color: #111111\">&gt;</span>\n</pre></div>\n</div>\n<p>These examples assume that Ember is exported globally as <code class=\"docutils literal\"><span class=\"pre\">window.Ember</span></code>. You can alternatively pass a reference to the <code class=\"docutils literal\"><span class=\"pre\">Ember</span></code> object directly as the second argument to <code class=\"docutils literal\"><span class=\"pre\">addPlugin</span></code>:</p>\n<div class=\"highlight-javascript\"><div class=\"highlight\" style=\"background: #ffffff\"><pre style=\"line-height: 125%\"><span></span><span style=\"color: #111111\">Raven.addPlugin(Raven.Plugins.Ember,</span> <span style=\"color: #111111\">Ember);</span>\n</pre></div>\n</div>\n</div>\n</div>\n</div>\n", 
+  "link": "https://docs.getsentry.com/hosted/clients/javascript/integrations/ember/", 
+  "id": "javascript-ember", 
+  "name": "Ember"
+}
diff --git a/tests/fixtures/integration-docs/javascript-react.json b/tests/fixtures/integration-docs/javascript-react.json
new file mode 100644
index 0000000000..8d2caf093a
--- /dev/null
+++ b/tests/fixtures/integration-docs/javascript-react.json
@@ -0,0 +1,6 @@
+{
+  "html": "<div class=\"section\" id=\"installation\">\n<h2>Installation</h2>\n<p>Start by adding the <code class=\"docutils literal\"><span class=\"pre\">raven.js</span></code> script tag to your page. It should be loaded as early as possible, before your main javascript bundle.</p>\n<div class=\"highlight-html\"><div class=\"highlight\" style=\"background: #ffffff\"><pre style=\"line-height: 125%\"><span></span><span style=\"color: #111111\">&lt;</span><span style=\"color: #2eb0f7\">script</span> <span style=\"color: #a47ac6\">src</span><span style=\"color: #4b4f5c\">=</span><span style=\"color: #e8535a\">&quot;https://cdn.ravenjs.com/3.20.1/raven.min.js&quot;</span>\n    <span style=\"color: #a47ac6\">crossorigin</span><span style=\"color: #4b4f5c\">=</span><span style=\"color: #e8535a\">&quot;anonymous&quot;</span><span style=\"color: #111111\">&gt;&lt;/</span><span style=\"color: #2eb0f7\">script</span><span style=\"color: #111111\">&gt;</span>\n</pre></div>\n</div>\n</div>\n\n\n<div class=\"section\" id=\"configuring-the-client\">\n<h2>Configuring the Client</h2>\n<p>Next configure Raven.js to use your Sentry DSN:</p>\n<div class=\"highlight-javascript\"><div class=\"highlight\" style=\"background: #ffffff\"><pre style=\"line-height: 125%\"><span></span><span style=\"color: #111111\">Raven.config(</span><span style=\"color: #e8535a\">&#39;___PUBLIC_DSN___&#39;</span><span style=\"color: #111111\">).install()</span>\n</pre></div>\n</div>\n<p>At this point, Raven is ready to capture any uncaught exception.</p>\n</div>\n", 
+  "link": "https://docs.getsentry.com/hosted/clients/javascript/integrations/react/", 
+  "id": "javascript-react", 
+  "name": "React"
+}
diff --git a/tests/fixtures/integration-docs/javascript-vue.json b/tests/fixtures/integration-docs/javascript-vue.json
new file mode 100644
index 0000000000..24ed485872
--- /dev/null
+++ b/tests/fixtures/integration-docs/javascript-vue.json
@@ -0,0 +1,6 @@
+{
+  "html": "<div class=\"section\" id=\"installation\">\n<h2>Installation</h2>\n<p>Raven.js and the Raven.js Vue plugin are distributed using a few different methods.</p>\n<div class=\"section\" id=\"using-our-cdn\">\n<h3>Using our CDN</h3>\n<p>For convenience, our CDN serves a single, minified JavaScript file containing both Raven.js and the Raven.js Vue plugin. It should be included <strong>after</strong> Vue, but <strong>before</strong> your application code.</p>\n<p>Example:</p>\n<div class=\"highlight-html\"><div class=\"highlight\" style=\"background: #ffffff\"><pre style=\"line-height: 125%\"><span></span><span style=\"color: #111111\">&lt;</span><span style=\"color: #2eb0f7\">script</span> <span style=\"color: #a47ac6\">src</span><span style=\"color: #4b4f5c\">=</span><span style=\"color: #e8535a\">&quot;https://cdn.jsdelivr.net/vue/2.0.0-rc/vue.min.js&quot;</span><span style=\"color: #111111\">&gt;&lt;/</span><span style=\"color: #2eb0f7\">script</span><span style=\"color: #111111\">&gt;</span>\n<span style=\"color: #111111\">&lt;</span><span style=\"color: #2eb0f7\">script</span> <span style=\"color: #a47ac6\">src</span><span style=\"color: #4b4f5c\">=</span><span style=\"color: #e8535a\">&quot;https://cdn.ravenjs.com/3.20.1/vue/raven.min.js&quot;</span>\n    <span style=\"color: #a47ac6\">crossorigin</span><span style=\"color: #4b4f5c\">=</span><span style=\"color: #e8535a\">&quot;anonymous&quot;</span><span style=\"color: #111111\">&gt;&lt;/</span><span style=\"color: #2eb0f7\">script</span><span style=\"color: #111111\">&gt;</span>\n<span style=\"color: #111111\">&lt;</span><span style=\"color: #2eb0f7\">script</span><span style=\"color: #111111\">&gt;Raven.config(</span><span style=\"color: #e8535a\">&#39;___PUBLIC_DSN___&#39;</span><span style=\"color: #111111\">).install();&lt;/</span><span style=\"color: #2eb0f7\">script</span><span style=\"color: #111111\">&gt;</span>\n</pre></div>\n</div>\n<p>Note that this CDN build auto-initializes the Vue plugin.</p>\n</div>\n<div class=\"section\" id=\"using-package-managers\">\n<h3>Using package managers</h3>\n<p>Both Raven.js and the Raven.js Vue plugin can be installed via npm and Bower.</p>\n<div class=\"section\" id=\"npm\">\n<h4>npm</h4>\n<div class=\"highlight-sh\"><div class=\"highlight\" style=\"background: #ffffff\"><pre style=\"line-height: 125%\"><span></span>$ npm install raven-js --save\n</pre></div>\n</div>\n</div>\n<div class=\"section\" id=\"bower\">\n<h4>Bower</h4>\n<div class=\"highlight-sh\"><div class=\"highlight\" style=\"background: #ffffff\"><pre style=\"line-height: 125%\"><span></span>$ bower install raven-js --save\n</pre></div>\n</div>\n<p>In your main application file, import and configure both Raven.js and the Raven.js Vue plugin as follows:</p>\n<div class=\"highlight-js\"><div class=\"highlight\" style=\"background: #ffffff\"><pre style=\"line-height: 125%\"><span></span><span style=\"color: #2eb0f7\">import</span> <span style=\"color: #111111\">Vue</span> <span style=\"color: #111111\">from</span> <span style=\"color: #e8535a\">&#39;vue&#39;</span><span style=\"color: #111111\">;</span>\n<span style=\"color: #2eb0f7\">import</span> <span style=\"color: #111111\">Raven</span> <span style=\"color: #111111\">from</span> <span style=\"color: #e8535a\">&#39;raven-js&#39;</span><span style=\"color: #111111\">;</span>\n<span style=\"color: #2eb0f7\">import</span> <span style=\"color: #111111\">RavenVue</span> <span style=\"color: #111111\">from</span> <span style=\"color: #e8535a\">&#39;raven-js/plugins/vue&#39;</span><span style=\"color: #111111\">;</span>\n\n<span style=\"color: #111111\">Raven</span>\n    <span style=\"color: #111111\">.config(</span><span style=\"color: #e8535a\">&#39;___PUBLIC_DSN___&#39;</span><span style=\"color: #111111\">)</span>\n    <span style=\"color: #111111\">.addPlugin(RavenVue,</span> <span style=\"color: #111111\">Vue)</span>\n    <span style=\"color: #111111\">.install();</span>\n</pre></div>\n</div>\n</div>\n</div>\n</div>\n", 
+  "link": "https://docs.getsentry.com/hosted/clients/javascript/integrations/vue/", 
+  "id": "javascript-vue", 
+  "name": "Vue"
+}
diff --git a/tests/fixtures/integration-docs/javascript.json b/tests/fixtures/integration-docs/javascript.json
new file mode 100644
index 0000000000..e9719d8ecc
--- /dev/null
+++ b/tests/fixtures/integration-docs/javascript.json
@@ -0,0 +1,6 @@
+{
+  "html": "<div class=\"section\" id=\"installation\">\n<h2>Installation</h2>\n<p>The easiest way to load Raven.js is to load it directly from our CDN. This script tag should\nbe included after other libraries are loaded, but before your main application code (e.g. app.js):</p>\n<div class=\"highlight-html\"><div class=\"highlight\" style=\"background: #ffffff\"><pre style=\"line-height: 125%\"><span></span><span style=\"color: #111111\">&lt;</span><span style=\"color: #2eb0f7\">script</span> <span style=\"color: #a47ac6\">src</span><span style=\"color: #4b4f5c\">=</span><span style=\"color: #e8535a\">&quot;https://cdn.ravenjs.com/3.20.1/raven.min.js&quot;</span> <span style=\"color: #a47ac6\">crossorigin</span><span style=\"color: #4b4f5c\">=</span><span style=\"color: #e8535a\">&quot;anonymous&quot;</span><span style=\"color: #111111\">&gt;&lt;/</span><span style=\"color: #2eb0f7\">script</span><span style=\"color: #111111\">&gt;</span>\n</pre></div>\n</div>\n<p>For installation using npm or other package managers, see <a class=\"reference internal\" href=\"https://docs.getsentry.com/hosted/clients/javascript/install/\"><em>Installation</em></a>.</p>\n</div>\n\n\n<div class=\"section\" id=\"configuring-the-client\">\n<h2>Configuring the Client</h2>\n<p>Next you need to configure Raven.js to use your <a class=\"reference external\" href=\"https://docs.sentry.io/hosted/quickstart/#configure-the-dsn\">Sentry DSN</a>:</p>\n<div class=\"highlight-javascript\"><div class=\"highlight\" style=\"background: #ffffff\"><pre style=\"line-height: 125%\"><span></span><span style=\"color: #111111\">Raven.config(</span><span style=\"color: #e8535a\">&#39;___PUBLIC_DSN___&#39;</span><span style=\"color: #111111\">).install()</span>\n</pre></div>\n</div>\n<p>It is additionally recommended (but not required) to wrap your application start using <cite>Raven.context</cite>.\nThis can help surface additional errors in some execution contexts.</p>\n<div class=\"highlight-javascript\"><div class=\"highlight\" style=\"background: #ffffff\"><pre style=\"line-height: 125%\"><span></span><span style=\"color: #111111\">Raven.context(</span><span style=\"color: #2eb0f7\">function</span> <span style=\"color: #111111\">()</span> <span style=\"color: #111111\">{</span>\n    <span style=\"color: #111111\">initMyApp();</span>\n<span style=\"color: #111111\">});</span>\n</pre></div>\n</div>\n<p>At this point, Raven is ready to capture any uncaught exception.</p>\n<p>Once you have Raven up and running, it is highly recommended to check out <a class=\"reference internal\" href=\"https://docs.getsentry.com/hosted/clients/javascript/config/\"><em>Configuration</em></a>\nand <a class=\"reference internal\" href=\"https://docs.getsentry.com/hosted/clients/javascript/usage/\"><em>Usage</em></a>.</p>\n</div>\n", 
+  "link": "https://docs.getsentry.com/hosted/clients/javascript/install/", 
+  "id": "javascript", 
+  "name": "JavaScript"
+}
diff --git a/tests/fixtures/integration-docs/node-connect.json b/tests/fixtures/integration-docs/node-connect.json
new file mode 100644
index 0000000000..8af673024c
--- /dev/null
+++ b/tests/fixtures/integration-docs/node-connect.json
@@ -0,0 +1,6 @@
+{
+  "html": "<div class=\"section\" id=\"installation\">\n<h2>Installation</h2>\n<p>Raven is distributed via <code class=\"docutils literal\"><span class=\"pre\">npm</span></code>:</p>\n<div class=\"highlight-bash\"><div class=\"highlight\" style=\"background: #ffffff\"><pre style=\"line-height: 125%\"><span></span>$ npm install raven --save\n</pre></div>\n</div>\n</div>\n\n\n<div class=\"section\" id=\"connect\">\n<h2>Connect</h2>\n<div class=\"highlight-javascript\"><div class=\"highlight\" style=\"background: #ffffff\"><pre style=\"line-height: 125%\"><span></span><span style=\"color: #2eb0f7\">var</span> <span style=\"color: #111111\">connect</span> <span style=\"color: #4b4f5c\">=</span> <span style=\"color: #111111\">require(</span><span style=\"color: #e8535a\">&#39;connect&#39;</span><span style=\"color: #111111\">);</span>\n<span style=\"color: #2eb0f7\">var</span> <span style=\"color: #111111\">Raven</span> <span style=\"color: #4b4f5c\">=</span> <span style=\"color: #111111\">require(</span><span style=\"color: #e8535a\">&#39;raven&#39;</span><span style=\"color: #111111\">);</span>\n\n<span style=\"color: #34c08b; font-style: italic\">// Must configure Raven before doing anything else with it</span>\n<span style=\"color: #111111\">Raven.config(</span><span style=\"color: #e8535a\">&#39;___DSN___&#39;</span><span style=\"color: #111111\">).install();</span>\n\n<span style=\"color: #2eb0f7\">function</span> <span style=\"color: #111111\">mainHandler(req,</span> <span style=\"color: #111111\">res)</span> <span style=\"color: #111111\">{</span>\n    <span style=\"color: #2eb0f7\">throw</span> <span style=\"color: #2eb0f7\">new</span> <span style=\"color: #2eb0f7\">Error</span><span style=\"color: #111111\">(</span><span style=\"color: #e8535a\">&#39;Broke!&#39;</span><span style=\"color: #111111\">);</span>\n<span style=\"color: #111111\">}</span>\n\n<span style=\"color: #2eb0f7\">function</span> <span style=\"color: #111111\">onError(err,</span> <span style=\"color: #111111\">req,</span> <span style=\"color: #111111\">res,</span> <span style=\"color: #111111\">next)</span> <span style=\"color: #111111\">{</span>\n    <span style=\"color: #34c08b; font-style: italic\">// The error id is attached to `res.sentry` to be returned</span>\n    <span style=\"color: #34c08b; font-style: italic\">// and optionally displayed to the user for support.</span>\n    <span style=\"color: #111111\">res.statusCode</span> <span style=\"color: #4b4f5c\">=</span> <span style=\"color: #45c2c9\">500</span><span style=\"color: #111111\">;</span>\n    <span style=\"color: #111111\">res.end(res.sentry</span> <span style=\"color: #4b4f5c\">+</span> <span style=\"color: #e8535a\">&#39;\\n&#39;</span><span style=\"color: #111111\">);</span>\n<span style=\"color: #111111\">}</span>\n\n<span style=\"color: #111111\">connect(</span>\n    <span style=\"color: #34c08b; font-style: italic\">// The request handler be the first item</span>\n    <span style=\"color: #111111\">Raven.requestHandler(),</span>\n\n    <span style=\"color: #111111\">connect.bodyParser(),</span>\n    <span style=\"color: #111111\">connect.cookieParser(),</span>\n    <span style=\"color: #111111\">mainHandler,</span>\n\n    <span style=\"color: #34c08b; font-style: italic\">// The error handler must be before any other error middleware</span>\n    <span style=\"color: #111111\">Raven.errorHandler(),</span>\n\n    <span style=\"color: #34c08b; font-style: italic\">// Optional fallthrough error handler</span>\n    <span style=\"color: #111111\">onError,</span>\n<span style=\"color: #111111\">).listen(</span><span style=\"color: #45c2c9\">3000</span><span style=\"color: #111111\">);</span>\n</pre></div>\n</div>\n</div>\n", 
+  "link": "https://docs.getsentry.com/hosted/clients/node/integrations/connect/", 
+  "id": "node-connect", 
+  "name": "Connect"
+}
diff --git a/tests/fixtures/integration-docs/node-express.json b/tests/fixtures/integration-docs/node-express.json
new file mode 100644
index 0000000000..33b213e3ef
--- /dev/null
+++ b/tests/fixtures/integration-docs/node-express.json
@@ -0,0 +1,6 @@
+{
+  "html": "<div class=\"section\" id=\"installation\">\n<h2>Installation</h2>\n<p>Raven is distributed via <code class=\"docutils literal\"><span class=\"pre\">npm</span></code>:</p>\n<div class=\"highlight-bash\"><div class=\"highlight\" style=\"background: #ffffff\"><pre style=\"line-height: 125%\"><span></span>$ npm install raven --save\n</pre></div>\n</div>\n</div>\n\n\n<div class=\"section\" id=\"express\">\n<h2>Express</h2>\n<div class=\"highlight-javascript\"><div class=\"highlight\" style=\"background: #ffffff\"><pre style=\"line-height: 125%\"><span></span><span style=\"color: #2eb0f7\">var</span> <span style=\"color: #111111\">app</span> <span style=\"color: #4b4f5c\">=</span> <span style=\"color: #111111\">require(</span><span style=\"color: #e8535a\">&#39;express&#39;</span><span style=\"color: #111111\">)();</span>\n<span style=\"color: #2eb0f7\">var</span> <span style=\"color: #111111\">Raven</span> <span style=\"color: #4b4f5c\">=</span> <span style=\"color: #111111\">require(</span><span style=\"color: #e8535a\">&#39;raven&#39;</span><span style=\"color: #111111\">);</span>\n\n<span style=\"color: #34c08b; font-style: italic\">// Must configure Raven before doing anything else with it</span>\n<span style=\"color: #111111\">Raven.config(</span><span style=\"color: #e8535a\">&#39;__DSN__&#39;</span><span style=\"color: #111111\">).install();</span>\n\n<span style=\"color: #34c08b; font-style: italic\">// The request handler must be the first middleware on the app</span>\n<span style=\"color: #111111\">app.use(Raven.requestHandler());</span>\n\n<span style=\"color: #111111\">app.get(</span><span style=\"color: #e8535a\">&#39;/&#39;</span><span style=\"color: #111111\">,</span> <span style=\"color: #2eb0f7\">function</span> <span style=\"color: #111111\">mainHandler(req,</span> <span style=\"color: #111111\">res)</span> <span style=\"color: #111111\">{</span>\n    <span style=\"color: #2eb0f7\">throw</span> <span style=\"color: #2eb0f7\">new</span> <span style=\"color: #2eb0f7\">Error</span><span style=\"color: #111111\">(</span><span style=\"color: #e8535a\">&#39;Broke!&#39;</span><span style=\"color: #111111\">);</span>\n<span style=\"color: #111111\">});</span>\n\n<span style=\"color: #34c08b; font-style: italic\">// The error handler must be before any other error middleware</span>\n<span style=\"color: #111111\">app.use(Raven.errorHandler());</span>\n\n<span style=\"color: #34c08b; font-style: italic\">// Optional fallthrough error handler</span>\n<span style=\"color: #111111\">app.use(</span><span style=\"color: #2eb0f7\">function</span> <span style=\"color: #111111\">onError(err,</span> <span style=\"color: #111111\">req,</span> <span style=\"color: #111111\">res,</span> <span style=\"color: #111111\">next)</span> <span style=\"color: #111111\">{</span>\n    <span style=\"color: #34c08b; font-style: italic\">// The error id is attached to `res.sentry` to be returned</span>\n    <span style=\"color: #34c08b; font-style: italic\">// and optionally displayed to the user for support.</span>\n    <span style=\"color: #111111\">res.statusCode</span> <span style=\"color: #4b4f5c\">=</span> <span style=\"color: #45c2c9\">500</span><span style=\"color: #111111\">;</span>\n    <span style=\"color: #111111\">res.end(res.sentry</span> <span style=\"color: #4b4f5c\">+</span> <span style=\"color: #e8535a\">&#39;\\n&#39;</span><span style=\"color: #111111\">);</span>\n<span style=\"color: #111111\">});</span>\n\n<span style=\"color: #111111\">app.listen(</span><span style=\"color: #45c2c9\">3000</span><span style=\"color: #111111\">);</span>\n</pre></div>\n</div>\n</div>\n", 
+  "link": "https://docs.getsentry.com/hosted/clients/node/integrations/express/", 
+  "id": "node-express", 
+  "name": "Express"
+}
diff --git a/tests/fixtures/integration-docs/node-koa.json b/tests/fixtures/integration-docs/node-koa.json
new file mode 100644
index 0000000000..8e96071b47
--- /dev/null
+++ b/tests/fixtures/integration-docs/node-koa.json
@@ -0,0 +1,6 @@
+{
+  "html": "<div class=\"section\" id=\"installation\">\n<h2>Installation</h2>\n<p>Raven is distributed via <code class=\"docutils literal\"><span class=\"pre\">npm</span></code>:</p>\n<div class=\"highlight-bash\"><div class=\"highlight\" style=\"background: #ffffff\"><pre style=\"line-height: 125%\"><span></span>$ npm install raven --save\n</pre></div>\n</div>\n</div>\n\n\n<div class=\"section\" id=\"koa\">\n<h2>Koa</h2>\n<div class=\"highlight-javascript\"><div class=\"highlight\" style=\"background: #ffffff\"><pre style=\"line-height: 125%\"><span></span><span style=\"color: #2eb0f7\">var</span> <span style=\"color: #111111\">koa</span> <span style=\"color: #4b4f5c\">=</span> <span style=\"color: #111111\">require(</span><span style=\"color: #e8535a\">&#39;koa&#39;</span><span style=\"color: #111111\">);</span>\n<span style=\"color: #2eb0f7\">var</span> <span style=\"color: #111111\">Raven</span> <span style=\"color: #4b4f5c\">=</span> <span style=\"color: #111111\">require(</span><span style=\"color: #e8535a\">&#39;raven&#39;</span><span style=\"color: #111111\">);</span>\n\n<span style=\"color: #2eb0f7\">var</span> <span style=\"color: #111111\">app</span> <span style=\"color: #4b4f5c\">=</span> <span style=\"color: #111111\">koa();</span>\n<span style=\"color: #111111\">Raven.config(</span><span style=\"color: #e8535a\">&#39;___DSN___&#39;</span><span style=\"color: #111111\">).install();</span>\n\n<span style=\"color: #111111\">app.on(</span><span style=\"color: #e8535a\">&#39;error&#39;</span><span style=\"color: #111111\">,</span> <span style=\"color: #2eb0f7\">function</span> <span style=\"color: #111111\">(err)</span> <span style=\"color: #111111\">{</span>\n    <span style=\"color: #111111\">Raven.captureException(err,</span> <span style=\"color: #2eb0f7\">function</span> <span style=\"color: #111111\">(err,</span> <span style=\"color: #111111\">eventId)</span> <span style=\"color: #111111\">{</span>\n        <span style=\"color: #111111\">console.log(</span><span style=\"color: #e8535a\">&#39;Reported error &#39;</span> <span style=\"color: #4b4f5c\">+</span> <span style=\"color: #111111\">eventId);</span>\n    <span style=\"color: #111111\">});</span>\n<span style=\"color: #111111\">});</span>\n\n<span style=\"color: #111111\">app.listen(</span><span style=\"color: #45c2c9\">3000</span><span style=\"color: #111111\">);</span>\n</pre></div>\n</div>\n</div>\n", 
+  "link": "https://docs.getsentry.com/hosted/clients/node/integrations/koa/", 
+  "id": "node-koa", 
+  "name": "Koa"
+}
diff --git a/tests/fixtures/integration-docs/node.json b/tests/fixtures/integration-docs/node.json
new file mode 100644
index 0000000000..6335dba8d9
--- /dev/null
+++ b/tests/fixtures/integration-docs/node.json
@@ -0,0 +1,6 @@
+{
+  "html": "<div class=\"section\" id=\"installation\">\n<h2>Installation</h2>\n<p>Raven is distributed via <code class=\"docutils literal\"><span class=\"pre\">npm</span></code>:</p>\n<div class=\"highlight-bash\"><div class=\"highlight\" style=\"background: #ffffff\"><pre style=\"line-height: 125%\"><span></span>$ npm install raven --save\n</pre></div>\n</div>\n</div>\n\n\n<div class=\"section\" id=\"configuring-the-client\">\n<h2>Configuring the Client</h2>\n<p>Next you need to initialize the Raven client and configure it to use your <a class=\"reference external\" href=\"https://docs.getsentry.com/hosted/quickstart/#configure-the-dsn\">Sentry DSN</a>:</p>\n<div class=\"highlight-javascript\"><div class=\"highlight\" style=\"background: #ffffff\"><pre style=\"line-height: 125%\"><span></span><span style=\"color: #2eb0f7\">var</span> <span style=\"color: #111111\">Raven</span> <span style=\"color: #4b4f5c\">=</span> <span style=\"color: #111111\">require(</span><span style=\"color: #e8535a\">&#39;raven&#39;</span><span style=\"color: #111111\">);</span>\n<span style=\"color: #111111\">Raven.config(</span><span style=\"color: #e8535a\">&#39;___DSN___&#39;</span><span style=\"color: #111111\">).install();</span>\n</pre></div>\n</div>\n<p>At this point, Raven is set up to capture and report any uncaught exceptions.</p>\n<p>You can optionally pass an object of configuration options as the 2nd argument to <cite>Raven.config</cite>. For\nmore information, see <a class=\"reference internal\" href=\"https://docs.getsentry.com/hosted/clients/node/config/\"><em>Configuration</em></a>.</p>\n</div>\n\n\n<div class=\"section\" id=\"reporting-errors\">\n<h2>Reporting Errors</h2>\n<p>Raven&#8217;s <code class=\"docutils literal\"><span class=\"pre\">install</span></code> method sets up a global handler to automatically capture any uncaught exceptions. You can also report errors manually with <code class=\"docutils literal\"><span class=\"pre\">try...catch</span></code> and\na call to <code class=\"docutils literal\"><span class=\"pre\">captureException</span></code>:</p>\n<div class=\"highlight-javascript\"><div class=\"highlight\" style=\"background: #ffffff\"><pre style=\"line-height: 125%\"><span></span><span style=\"color: #2eb0f7\">try</span> <span style=\"color: #111111\">{</span>\n    <span style=\"color: #111111\">doSomething(a[</span><span style=\"color: #45c2c9\">0</span><span style=\"color: #111111\">]);</span>\n<span style=\"color: #111111\">}</span> <span style=\"color: #2eb0f7\">catch</span> <span style=\"color: #111111\">(e)</span> <span style=\"color: #111111\">{</span>\n    <span style=\"color: #111111\">Raven.captureException(e);</span>\n<span style=\"color: #111111\">}</span>\n</pre></div>\n</div>\n<p>You can also use <code class=\"docutils literal\"><span class=\"pre\">wrap</span></code> and <code class=\"docutils literal\"><span class=\"pre\">context</span></code> to have Raven wrap a function and automatically capture any exceptions it throws:</p>\n<div class=\"highlight-javascript\"><div class=\"highlight\" style=\"background: #ffffff\"><pre style=\"line-height: 125%\"><span></span><span style=\"color: #111111\">Raven.context(</span><span style=\"color: #2eb0f7\">function</span> <span style=\"color: #111111\">()</span> <span style=\"color: #111111\">{</span>\n  <span style=\"color: #111111\">doSomething(a[</span><span style=\"color: #45c2c9\">0</span><span style=\"color: #111111\">]);</span>\n<span style=\"color: #111111\">});</span>\n</pre></div>\n</div>\n<p>For more information on reporting errors, see <a class=\"reference internal\" href=\"https://docs.getsentry.com/hosted/clients/node/usage/\"><em>Usage</em></a>.</p>\n</div>\n", 
+  "link": "https://docs.getsentry.com/hosted/clients/node/", 
+  "id": "node", 
+  "name": "Node.js"
+}
diff --git a/tests/fixtures/integration-docs/objc.json b/tests/fixtures/integration-docs/objc.json
new file mode 100644
index 0000000000..952bb56179
--- /dev/null
+++ b/tests/fixtures/integration-docs/objc.json
@@ -0,0 +1,6 @@
+{
+  "html": "<div class=\"section\" id=\"installation\">\n<h2>Installation</h2>\n<p>The SDK can be installed using <a class=\"reference external\" href=\"http://cocoapods.org\">CocoaPods</a> or <a class=\"reference external\" href=\"https://github.com/Carthage/Carthage\">Carthage</a>.\nThis is the recommended client for both Swift and Objective-C.</p>\n<p>We recommend installing Sentry with CocoaPods.</p>\n<p>To integrate Sentry into your Xcode project using CocoaPods, specify\nit in your <cite>Podfile</cite>:</p>\n<div class=\"highlight-ruby\"><div class=\"highlight\" style=\"background: #ffffff\"><pre style=\"line-height: 125%\"><span></span><span style=\"color: #111111\">source</span> <span style=\"color: #e8535a\">&#39;https://github.com/CocoaPods/Specs.git&#39;</span>\n<span style=\"color: #111111\">platform</span> <span style=\"color: #e8535a\">:ios</span><span style=\"color: #111111\">,</span> <span style=\"color: #e8535a\">&#39;8.0&#39;</span>\n<span style=\"color: #111111\">use_frameworks!</span>\n\n<span style=\"color: #111111\">target</span> <span style=\"color: #e8535a\">&#39;YourApp&#39;</span> <span style=\"color: #2eb0f7\">do</span>\n    <span style=\"color: #111111\">pod</span> <span style=\"color: #e8535a\">&#39;Sentry&#39;</span><span style=\"color: #111111\">,</span> <span style=\"color: #e8535a\">:git</span> <span style=\"color: #4b4f5c\">=&gt;</span> <span style=\"color: #e8535a\">&#39;https://github.com/getsentry/sentry-cocoa.git&#39;</span><span style=\"color: #111111\">,</span> <span style=\"color: #e8535a\">:tag</span> <span style=\"color: #4b4f5c\">=&gt;</span> <span style=\"color: #e8535a\">&#39;3.9.1&#39;</span>\n<span style=\"color: #2eb0f7\">end</span>\n</pre></div>\n</div>\n<p>If you want to use Sentry without KSCrash you can just remove it from the subspecs.\nKeep in mind that if you are not using KSCrash no events will be reported whenever you app crashes.\nAlso some function might do nothing if they are related to KSCrash.</p>\n<p>Afterwards run <code class=\"docutils literal\"><span class=\"pre\">pod</span> <span class=\"pre\">install</span></code>.  In case you encounter problems with\ndependencies and you are on a newer CocoaPods you might have to run\n<code class=\"docutils literal\"><span class=\"pre\">pod</span> <span class=\"pre\">repo</span> <span class=\"pre\">update</span></code> first.</p>\n<p>To integrate Sentry into your Xcode project using Carthage, specify\nit in your <cite>Cartfile</cite>:</p>\n<div class=\"highlight-ruby\"><div class=\"highlight\" style=\"background: #ffffff\"><pre style=\"line-height: 125%\"><span></span><span style=\"color: #111111\">github</span> <span style=\"color: #e8535a\">&quot;getsentry/sentry-cocoa&quot;</span> <span style=\"color: #e8535a\">&quot;3.9.1&quot;</span>\n</pre></div>\n</div>\n<p>Run <code class=\"docutils literal\"><span class=\"pre\">carthage</span> <span class=\"pre\">update</span></code> to download the framework and drag the built\n<cite>Sentry.framework</cite> into your Xcode project.</p>\n<p>Note that for Carthage we had to bundle KSCrash into the <code class=\"docutils literal\"><span class=\"pre\">Sentry.framework</span></code> to make everything work.  So you will always get KSCrash with Sentry when using Carthage.</p>\n<p>We also provide a prebuilt version for every release which can be downloaded at <a class=\"reference external\" href=\"https://github.com/getsentry/sentry-cocoa/releases\">releases on github</a>.</p>\n</div>\n\n\n<div class=\"section\" id=\"configuration\">\n<h2>Configuration</h2>\n<p>To use the client, change your AppDelegate&#8217;s <cite>application</cite> method to\ninstantiate the Sentry client:</p>\n<div class=\"highlight-swift\"><div class=\"highlight\" style=\"background: #ffffff\"><pre style=\"line-height: 125%\"><span></span><span style=\"color: #2eb0f7\">import</span> <span style=\"color: #111111\">Sentry</span>\n\n<span style=\"color: #2eb0f7\">func</span> <span style=\"color: #111111\">application(application:</span> <span style=\"color: #45c2c9\">UIApplication</span><span style=\"color: #111111\">,</span>\n    <span style=\"color: #111111\">didFinishLaunchingWithOptions</span> <span style=\"color: #111111\">launchOptions:</span> <span style=\"color: #111111\">[</span><span style=\"color: #45c2c9\">NSObject</span><span style=\"color: #111111\">:</span> <span style=\"color: #2eb0f7\">AnyObject</span><span style=\"color: #111111\">]?)</span> <span style=\"color: #111111\">-&gt;</span> <span style=\"color: #2eb0f7\">Bool</span> <span style=\"color: #111111\">{</span>\n\n    <span style=\"color: #34c08b; font-style: italic\">// Create a Sentry client and start crash handler</span>\n    <span style=\"color: #2eb0f7\">do</span> <span style=\"color: #111111\">{</span>\n        <span style=\"color: #111111\">Client.shared</span> <span style=\"color: #111111\">=</span> <span style=\"color: #2eb0f7\">try</span> <span style=\"color: #111111\">Client(dsn:</span> <span style=\"color: #e8535a\">&quot;___DSN___&quot;</span><span style=\"color: #111111\">)</span>\n        <span style=\"color: #2eb0f7\">try</span> <span style=\"color: #111111\">Client.shared?.startCrashHandler()</span>\n    <span style=\"color: #111111\">}</span> <span style=\"color: #2eb0f7\">catch</span> <span style=\"color: #2eb0f7\">let</span> <span style=\"color: #111111\">error</span> <span style=\"color: #111111\">{</span>\n        <span style=\"color: #45c2c9\">print</span><span style=\"color: #111111\">(</span><span style=\"color: #e8535a\">&quot;\\(</span><span style=\"color: #111111\">error</span><span style=\"color: #e8535a\">)&quot;</span><span style=\"color: #111111\">)</span>\n        <span style=\"color: #34c08b; font-style: italic\">// Wrong DSN or KSCrash not installed</span>\n    <span style=\"color: #111111\">}</span>\n\n    <span style=\"color: #2eb0f7\">return</span> <span style=\"color: #2eb0f7\">true</span>\n<span style=\"color: #111111\">}</span>\n</pre></div>\n</div>\n<p>If you prefer to use Objective-C you can do so like this:</p>\n<div class=\"highlight-objc\"><div class=\"highlight\" style=\"background: #ffffff\"><pre style=\"line-height: 125%\"><span></span><span style=\"color: #111111\">@import</span> <span style=\"color: #111111\">Sentry;</span>\n\n<span style=\"color: #45c2c9\">NSError</span> <span style=\"color: #4b4f5c\">*</span><span style=\"color: #111111\">error</span> <span style=\"color: #4b4f5c\">=</span> <span style=\"color: #2eb0f7\">nil</span><span style=\"color: #111111\">;</span>\n<span style=\"color: #111111\">SentryClient</span> <span style=\"color: #4b4f5c\">*</span><span style=\"color: #111111\">client</span> <span style=\"color: #4b4f5c\">=</span> <span style=\"color: #111111\">[[SentryClient</span> <span style=\"color: #111111\">alloc]</span> <span style=\"color: #fb4226\">initWithDsn</span><span style=\"color: #111111\">:</span><span style=\"color: #e8535a\">@&quot;___DSN___&quot;</span> <span style=\"color: #fb4226\">didFailWithError</span><span style=\"color: #111111\">:</span><span style=\"color: #4b4f5c\">&amp;</span><span style=\"color: #111111\">error];</span>\n<span style=\"color: #111111\">SentryClient.sharedClient</span> <span style=\"color: #4b4f5c\">=</span> <span style=\"color: #111111\">client;</span>\n<span style=\"color: #111111\">[SentryClient.sharedClient</span> <span style=\"color: #fb4226\">startCrashHandlerWithError</span><span style=\"color: #111111\">:</span><span style=\"color: #4b4f5c\">&amp;</span><span style=\"color: #111111\">error];</span>\n<span style=\"color: #2eb0f7\">if</span> <span style=\"color: #111111\">(</span><span style=\"color: #2eb0f7\">nil</span> <span style=\"color: #4b4f5c\">!=</span> <span style=\"color: #111111\">error)</span> <span style=\"color: #111111\">{</span>\n    <span style=\"color: #111111\">NSLog(</span><span style=\"color: #e8535a\">@&quot;%@&quot;</span><span style=\"color: #111111\">,</span> <span style=\"color: #111111\">error);</span>\n<span style=\"color: #111111\">}</span>\n</pre></div>\n</div>\n<p>Note that if you call <code class=\"docutils literal\"><span class=\"pre\">startCrashHandler</span></code> will only catch errors if KSCrash is present.</p>\n</div>\n\n\n<div class=\"section\" id=\"debug-symbols\">\n<span id=\"sentry-cocoa-debug-symbols\"></span><h2>Debug Symbols</h2>\n<p>Before you can start capturing crashes you will need to tell Sentry about the debug\ninformation by uploading dSYM files.  Depending on your setup this can be\ndone in different ways:</p>\n<ul class=\"simple\">\n<li><a class=\"reference internal\" href=\"https://docs.getsentry.com/hosted/clients/cocoa/dsym/#dsym-with-bitcode\"><span>With Bitcode</span></a></li>\n<li><a class=\"reference internal\" href=\"https://docs.getsentry.com/hosted/clients/cocoa/dsym/#dsym-without-bitcode\"><span>Without Bitcode</span></a></li>\n</ul>\n</div>\n\n\n<div class=\"section\" id=\"upload-symbols-with-sentry-cli\">\n<h2>Upload Symbols with <cite>sentry-cli</cite></h2>\n<p>Your project&#8217;s dSYM can be upload during the build phase as a &#8220;Run\nScript&#8221;.  For this you need to st the <cite>DEBUG_INFORMATION_FORMAT</cite> to be\n<cite>DWARF with dSYM File</cite>. By default, an Xcode project will only have\n<cite>DEBUG_INFORMATION_FORMAT</cite> set to <cite>DWARF with dSYM File</cite> in <cite>Release</cite> so\nmake sure everything is set in your build settings properly.</p>\n<p>You need to have an Auth Token for this to work.  You can <a class=\"reference external\" href=\"https://sentry.io/api/\">create an\nAuth Token here</a>.</p>\n<ol class=\"arabic simple\">\n<li>You will need to copy the below into a new <cite>Run Script</cite> and set your\n<cite>AUTH_TOKEN</cite>, <cite>ORG_SLUG</cite>, and <cite>PROJECT_SLUG</cite></li>\n<li>Download and install <a class=\"reference external\" href=\"https://github.com/getsentry/sentry-cli/releases\">sentry-cli</a>\n\u2014 The best place to put this is in the <cite>/usr/local/bin/</cite> directory</li>\n</ol>\n<p>Shell: <cite>/bin/bash</cite></p>\n<div class=\"highlight-bash\"><div class=\"highlight\" style=\"background: #ffffff\"><pre style=\"line-height: 125%\"><span></span><span style=\"color: #2eb0f7\">if</span> which sentry-cli &gt;/dev/null<span style=\"color: #111111\">;</span> <span style=\"color: #2eb0f7\">then</span>\n<span style=\"color: #2eb0f7\">export</span> <span style=\"color: #111111\">SENTRY_ORG</span><span style=\"color: #4b4f5c\">=</span>___ORG_NAME___\n<span style=\"color: #2eb0f7\">export</span> <span style=\"color: #111111\">SENTRY_PROJECT</span><span style=\"color: #4b4f5c\">=</span>___PROJECT_NAME___\n<span style=\"color: #2eb0f7\">export</span> <span style=\"color: #111111\">SENTRY_AUTH_TOKEN</span><span style=\"color: #4b4f5c\">=</span>YOUR_AUTH_TOKEN\n<span style=\"color: #111111\">ERROR</span><span style=\"color: #4b4f5c\">=</span><span style=\"color: #2eb0f7\">$(</span>sentry-cli upload-dsym <span style=\"color: #45c2c9\">2</span>&gt;<span style=\"color: #111111\">&amp;</span><span style=\"color: #45c2c9\">1</span> &gt;/dev/null<span style=\"color: #2eb0f7\">)</span>\n<span style=\"color: #2eb0f7\">if</span> <span style=\"color: #4b4f5c\">[</span> ! <span style=\"color: #111111\">$?</span> -eq <span style=\"color: #45c2c9\">0</span> <span style=\"color: #4b4f5c\">]</span><span style=\"color: #111111\">;</span> <span style=\"color: #2eb0f7\">then</span>\n<span style=\"color: #2eb0f7\">echo</span> <span style=\"color: #e8535a\">&quot;warning: sentry-cli - </span><span style=\"color: #111111\">$ERROR</span><span style=\"color: #e8535a\">&quot;</span>\n<span style=\"color: #2eb0f7\">fi</span>\n<span style=\"color: #2eb0f7\">else</span>\n<span style=\"color: #2eb0f7\">echo</span> <span style=\"color: #e8535a\">&quot;warning: sentry-cli not installed, download from https://github.com/getsentry/sentry-cli/releases&quot;</span>\n<span style=\"color: #2eb0f7\">fi</span>\n</pre></div>\n</div>\n<p>The <code class=\"docutils literal\"><span class=\"pre\">upload-dsym</span></code> command automatically picks up the\n<code class=\"docutils literal\"><span class=\"pre\">DWARF_DSYM_FOLDER_PATH</span></code> environment variable that Xcode exports and\nlook for dSYM files there.</p>\n<div class=\"admonition-on-prem admonition\">\n<p class=\"first admonition-title\">On Prem</p>\n<p>By default sentry-cli will connect to sentry.io.  For\non-prem you need to export the <cite>SENTRY_URL</cite> environment variable\nto instruct the tool to connect to your server:</p>\n<div class=\"last highlight-python\"><div class=\"highlight\" style=\"background: #ffffff\"><pre style=\"line-height: 125%\"><span></span>export SENTRY_URL=https://mysentry.invalid/\n</pre></div>\n</div>\n</div>\n</div>\n", 
+  "link": "https://docs.getsentry.com/hosted/clients/cocoa/", 
+  "id": "objc", 
+  "name": "Objective-C"
+}
diff --git a/tests/fixtures/integration-docs/php-laravel.json b/tests/fixtures/integration-docs/php-laravel.json
new file mode 100644
index 0000000000..c9c647b97f
--- /dev/null
+++ b/tests/fixtures/integration-docs/php-laravel.json
@@ -0,0 +1,6 @@
+{
+  "html": "<div class=\"section\" id=\"installation\">\n<h2>Installation</h2>\n<p>There are various ways to install the PHP integration for Sentry.  The\nrecommended way is to use <a class=\"reference external\" href=\"http://getcomposer.org/\">Composer</a>:</p>\n<div class=\"highlight-python\"><div class=\"highlight\" style=\"background: #ffffff\"><pre style=\"line-height: 125%\"><span></span>$ composer require &quot;sentry/sentry&quot;\n</pre></div>\n</div>\n<p>Alternatively you can manually install it:</p>\n<ol class=\"arabic\">\n<li><p class=\"first\">Download and extract the latest <a class=\"reference external\" href=\"https://github.com/getsentry/sentry-php/archive/master.zip\">sentry-php</a> archive\nto your PHP project.</p>\n</li>\n<li><p class=\"first\">Require the autoloader in your application:</p>\n<div class=\"highlight-php\"><div class=\"highlight\" style=\"background: #ffffff\"><pre style=\"line-height: 125%\"><span></span><span style=\"color: #2eb0f7\">require_once</span> <span style=\"color: #e8535a\">&#39;/path/to/Raven/library/Raven/Autoloader.php&#39;</span><span style=\"color: #111111\">;</span>\n<span style=\"color: #111111\">Raven_Autoloader</span><span style=\"color: #4b4f5c\">::</span><span style=\"color: #a47ac6\">register</span><span style=\"color: #111111\">();</span>\n</pre></div>\n</div>\n</li>\n</ol>\n</div>\n\n\n<div class=\"section\" id=\"laravel-5-x\">\n<h2>Laravel 5.x</h2>\n<p>Install the <code class=\"docutils literal\"><span class=\"pre\">sentry/sentry-laravel</span></code> package:</p>\n<div class=\"highlight-bash\"><div class=\"highlight\" style=\"background: #ffffff\"><pre style=\"line-height: 125%\"><span></span>$ composer require sentry/sentry-laravel\n</pre></div>\n</div>\n<p>If you&#8217;re on Laravel 5.4 or earlier, you&#8217;ll need to add the following to your <code class=\"docutils literal\"><span class=\"pre\">config/app.php</span></code> (for Laravel 5.5+ these will be auto-discovered by Laravel):</p>\n<div class=\"highlight-php\"><div class=\"highlight\" style=\"background: #ffffff\"><pre style=\"line-height: 125%\"><span></span><span style=\"color: #e8535a\">&#39;providers&#39;</span> <span style=\"color: #4b4f5c\">=&gt;</span> <span style=\"color: #2eb0f7\">array</span><span style=\"color: #111111\">(</span>\n    <span style=\"color: #34c08b; font-style: italic\">// ...</span>\n    <span style=\"color: #111111\">Sentry\\SentryLaravel\\SentryLaravelServiceProvider</span><span style=\"color: #4b4f5c\">::</span><span style=\"color: #a47ac6\">class</span><span style=\"color: #111111\">,</span>\n<span style=\"color: #111111\">)</span>\n\n<span style=\"color: #e8535a\">&#39;aliases&#39;</span> <span style=\"color: #4b4f5c\">=&gt;</span> <span style=\"color: #2eb0f7\">array</span><span style=\"color: #111111\">(</span>\n    <span style=\"color: #34c08b; font-style: italic\">// ...</span>\n    <span style=\"color: #e8535a\">&#39;Sentry&#39;</span> <span style=\"color: #4b4f5c\">=&gt;</span> <span style=\"color: #111111\">Sentry\\SentryLaravel\\SentryFacade</span><span style=\"color: #4b4f5c\">::</span><span style=\"color: #a47ac6\">class</span><span style=\"color: #111111\">,</span>\n<span style=\"color: #111111\">)</span>\n</pre></div>\n</div>\n<p>Add Sentry reporting to <code class=\"docutils literal\"><span class=\"pre\">App/Exceptions/Handler.php</span></code>:</p>\n<div class=\"highlight-php\"><div class=\"highlight\" style=\"background: #ffffff\"><pre style=\"line-height: 125%\"><span></span><span style=\"color: #2eb0f7\">public</span> <span style=\"color: #2eb0f7\">function</span> <span style=\"color: #111111\">report(Exception</span> <span style=\"color: #111111\">$exception)</span>\n<span style=\"color: #111111\">{</span>\n    <span style=\"color: #2eb0f7\">if</span> <span style=\"color: #111111\">(app()</span><span style=\"color: #4b4f5c\">-&gt;</span><span style=\"color: #a47ac6\">bound</span><span style=\"color: #111111\">(</span><span style=\"color: #e8535a\">&#39;sentry&#39;</span><span style=\"color: #111111\">)</span> <span style=\"color: #4b4f5c\">&amp;&amp;</span> <span style=\"color: #111111\">$this</span><span style=\"color: #4b4f5c\">-&gt;</span><span style=\"color: #a47ac6\">shouldReport</span><span style=\"color: #111111\">($exception))</span> <span style=\"color: #111111\">{</span>\n        <span style=\"color: #111111\">app(</span><span style=\"color: #e8535a\">&#39;sentry&#39;</span><span style=\"color: #111111\">)</span><span style=\"color: #4b4f5c\">-&gt;</span><span style=\"color: #a47ac6\">captureException</span><span style=\"color: #111111\">($exception);</span>\n    <span style=\"color: #111111\">}</span>\n\n    <span style=\"color: #2eb0f7\">parent</span><span style=\"color: #4b4f5c\">::</span><span style=\"color: #a47ac6\">report</span><span style=\"color: #111111\">($exception);</span>\n<span style=\"color: #111111\">}</span>\n</pre></div>\n</div>\n<p>Create the Sentry configuration file (<code class=\"docutils literal\"><span class=\"pre\">config/sentry.php</span></code>):</p>\n<div class=\"highlight-bash\"><div class=\"highlight\" style=\"background: #ffffff\"><pre style=\"line-height: 125%\"><span></span>$ php artisan vendor:publish --provider<span style=\"color: #4b4f5c\">=</span><span style=\"color: #e8535a\">&quot;Sentry\\SentryLaravel\\SentryLaravelServiceProvider&quot;</span>\n</pre></div>\n</div>\n<p>Add your DSN to <code class=\"docutils literal\"><span class=\"pre\">.env</span></code>:</p>\n<div class=\"highlight-bash\"><div class=\"highlight\" style=\"background: #ffffff\"><pre style=\"line-height: 125%\"><span></span><span style=\"color: #111111\">SENTRY_DSN</span><span style=\"color: #4b4f5c\">=</span>___DSN___\n</pre></div>\n</div>\n<p>Finally, if you wish to wire up User Feedback, you can do so by creating a custom\nerror view in <cite>resources/views/errors/500.blade.php</cite>.</p>\n<p>For Laravel 5 up to 5.4 you need to open up <code class=\"docutils literal\"><span class=\"pre\">App/Exceptions/Handler.php</span></code> and extend the\n<code class=\"docutils literal\"><span class=\"pre\">render</span></code> method to make sure the 500 error is rendered as a view correctly, in 5.5+ this\nstep is not required anymore an you can skip ahead to the next one:</p>\n<div class=\"highlight-php\"><div class=\"highlight\" style=\"background: #ffffff\"><pre style=\"line-height: 125%\"><span></span><span style=\"color: #4b4f5c\">&lt;?</span><span style=\"color: #111111\">php</span>\n\n<span style=\"color: #2eb0f7\">class</span> <span style=\"color: #111111\">Handler</span> <span style=\"color: #2eb0f7\">extends</span> <span style=\"color: #111111\">ExceptionHandler</span>\n<span style=\"color: #111111\">{</span>\n    <span style=\"color: #2eb0f7\">public</span> <span style=\"color: #2eb0f7\">function</span> <span style=\"color: #111111\">report(Exception</span> <span style=\"color: #111111\">$exception)</span>\n    <span style=\"color: #111111\">{</span>\n        <span style=\"color: #2eb0f7\">if</span> <span style=\"color: #111111\">(app()</span><span style=\"color: #4b4f5c\">-&gt;</span><span style=\"color: #a47ac6\">bound</span><span style=\"color: #111111\">(</span><span style=\"color: #e8535a\">&#39;sentry&#39;</span><span style=\"color: #111111\">)</span> <span style=\"color: #4b4f5c\">&amp;&amp;</span> <span style=\"color: #111111\">$this</span><span style=\"color: #4b4f5c\">-&gt;</span><span style=\"color: #a47ac6\">shouldReport</span><span style=\"color: #111111\">($exception))</span> <span style=\"color: #111111\">{</span>\n            <span style=\"color: #111111\">app(</span><span style=\"color: #e8535a\">&#39;sentry&#39;</span><span style=\"color: #111111\">)</span><span style=\"color: #4b4f5c\">-&gt;</span><span style=\"color: #a47ac6\">captureException</span><span style=\"color: #111111\">($exception);</span>\n        <span style=\"color: #111111\">}</span>\n\n        <span style=\"color: #2eb0f7\">parent</span><span style=\"color: #4b4f5c\">::</span><span style=\"color: #a47ac6\">report</span><span style=\"color: #111111\">($exception);</span>\n    <span style=\"color: #111111\">}</span>\n\n    <span style=\"color: #2eb0f7\">public</span> <span style=\"color: #2eb0f7\">function</span> <span style=\"color: #111111\">render($request,</span> <span style=\"color: #111111\">Exception</span> <span style=\"color: #111111\">$exception)</span>\n    <span style=\"color: #111111\">{</span>\n        <span style=\"color: #34c08b; font-style: italic\">// Convert all non-http exceptions to a proper 500 http exception</span>\n        <span style=\"color: #34c08b; font-style: italic\">// if we don&#39;t do this exceptions are shown as a default template</span>\n        <span style=\"color: #34c08b; font-style: italic\">// instead of our own view in resources/views/errors/500.blade.php</span>\n        <span style=\"color: #2eb0f7\">if</span> <span style=\"color: #111111\">($this</span><span style=\"color: #4b4f5c\">-&gt;</span><span style=\"color: #a47ac6\">shouldReport</span><span style=\"color: #111111\">($exception)</span> <span style=\"color: #4b4f5c\">&amp;&amp;</span> <span style=\"color: #4b4f5c\">!</span><span style=\"color: #111111\">$this</span><span style=\"color: #4b4f5c\">-&gt;</span><span style=\"color: #a47ac6\">isHttpException</span><span style=\"color: #111111\">($exception)</span> <span style=\"color: #4b4f5c\">&amp;&amp;</span> <span style=\"color: #4b4f5c\">!</span><span style=\"color: #111111\">config(</span><span style=\"color: #e8535a\">&#39;app.debug&#39;</span><span style=\"color: #111111\">))</span> <span style=\"color: #111111\">{</span>\n            <span style=\"color: #111111\">$exception</span> <span style=\"color: #4b4f5c\">=</span> <span style=\"color: #2eb0f7\">new</span> <span style=\"color: #111111\">HttpException(</span><span style=\"color: #45c2c9\">500</span><span style=\"color: #111111\">,</span> <span style=\"color: #e8535a\">&#39;Whoops!&#39;</span><span style=\"color: #111111\">);</span>\n        <span style=\"color: #111111\">}</span>\n\n        <span style=\"color: #2eb0f7\">return</span> <span style=\"color: #2eb0f7\">parent</span><span style=\"color: #4b4f5c\">::</span><span style=\"color: #a47ac6\">render</span><span style=\"color: #111111\">($request,</span> <span style=\"color: #111111\">$exception);</span>\n    <span style=\"color: #111111\">}</span>\n<span style=\"color: #111111\">}</span>\n</pre></div>\n</div>\n<p>Next, create <code class=\"docutils literal\"><span class=\"pre\">resources/views/errors/500.blade.php</span></code>, and embed the feedback code:</p>\n<div class=\"highlight-html\"><div class=\"highlight\" style=\"background: #ffffff\"><pre style=\"line-height: 125%\"><span></span>&lt;div class=&quot;content&quot;&gt;\n    &lt;div class=&quot;title&quot;&gt;Something went wrong.&lt;/div&gt;\n\n    @if(app()-&gt;bound(&#39;sentry&#39;) &amp;&amp; !empty(Sentry::getLastEventID()))\n        &lt;div class=&quot;subtitle&quot;&gt;Error ID: {{ Sentry::getLastEventID() }}&lt;/div&gt;\n\n        &lt;!-- Sentry JS SDK 2.1.+ required --&gt;\n        &lt;script src=&quot;https://cdn.ravenjs.com/3.3.0/raven.min.js&quot;&gt;&lt;/script&gt;\n\n        &lt;script&gt;\n            Raven.showReportDialog({\n                eventId: &#39;{{ Sentry::getLastEventID() }}&#39;,\n                // use the public DSN (dont include your secret!)\n                dsn: &#39;https://e9ebbd88548a441288393c457ec90441@sentry.io/3235&#39;,\n                user: {\n                    &#39;name&#39;: &#39;Jane Doe&#39;,\n                    &#39;email&#39;: &#39;jane.doe@example.com&#39;,\n                }\n            });\n        &lt;/script&gt;\n    @endif\n&lt;/div&gt;\n</pre></div>\n</div>\n<p>That&#8217;s it!</p>\n</div>\n", 
+  "link": "https://docs.getsentry.com/hosted/clients/php/integrations/laravel/", 
+  "id": "php-laravel", 
+  "name": "Laravel"
+}
diff --git a/tests/fixtures/integration-docs/php-monolog.json b/tests/fixtures/integration-docs/php-monolog.json
new file mode 100644
index 0000000000..b9005ddb85
--- /dev/null
+++ b/tests/fixtures/integration-docs/php-monolog.json
@@ -0,0 +1,6 @@
+{
+  "html": "<div class=\"section\" id=\"installation\">\n<h2>Installation</h2>\n<p>There are various ways to install the PHP integration for Sentry.  The\nrecommended way is to use <a class=\"reference external\" href=\"http://getcomposer.org/\">Composer</a>:</p>\n<div class=\"highlight-python\"><div class=\"highlight\" style=\"background: #ffffff\"><pre style=\"line-height: 125%\"><span></span>$ composer require &quot;sentry/sentry&quot;\n</pre></div>\n</div>\n<p>Alternatively you can manually install it:</p>\n<ol class=\"arabic\">\n<li><p class=\"first\">Download and extract the latest <a class=\"reference external\" href=\"https://github.com/getsentry/sentry-php/archive/master.zip\">sentry-php</a> archive\nto your PHP project.</p>\n</li>\n<li><p class=\"first\">Require the autoloader in your application:</p>\n<div class=\"highlight-php\"><div class=\"highlight\" style=\"background: #ffffff\"><pre style=\"line-height: 125%\"><span></span><span style=\"color: #2eb0f7\">require_once</span> <span style=\"color: #e8535a\">&#39;/path/to/Raven/library/Raven/Autoloader.php&#39;</span><span style=\"color: #111111\">;</span>\n<span style=\"color: #111111\">Raven_Autoloader</span><span style=\"color: #4b4f5c\">::</span><span style=\"color: #a47ac6\">register</span><span style=\"color: #111111\">();</span>\n</pre></div>\n</div>\n</li>\n</ol>\n</div>\n\n\n<div class=\"section\" id=\"monolog\">\n<h2>Monolog</h2>\n<div class=\"section\" id=\"capturing-errors\">\n<h3>Capturing Errors</h3>\n<p>Monolog supports Sentry out of the box, so you&#8217;ll just need to configure a handler:</p>\n<div class=\"highlight-php\"><div class=\"highlight\" style=\"background: #ffffff\"><pre style=\"line-height: 125%\"><span></span><span style=\"color: #111111\">$client</span> <span style=\"color: #4b4f5c\">=</span> <span style=\"color: #2eb0f7\">new</span> <span style=\"color: #111111\">Raven_Client(</span><span style=\"color: #e8535a\">&#39;___DSN___&#39;</span><span style=\"color: #111111\">);</span>\n\n<span style=\"color: #111111\">$handler</span> <span style=\"color: #4b4f5c\">=</span> <span style=\"color: #2eb0f7\">new</span> <span style=\"color: #111111\">Monolog\\Handler\\RavenHandler($client);</span>\n<span style=\"color: #111111\">$handler</span><span style=\"color: #4b4f5c\">-&gt;</span><span style=\"color: #a47ac6\">setFormatter</span><span style=\"color: #111111\">(</span><span style=\"color: #2eb0f7\">new</span> <span style=\"color: #111111\">Monolog\\Formatter\\LineFormatter(</span><span style=\"color: #e8535a\">&quot;%message% %context% %extra%\\n&quot;</span><span style=\"color: #111111\">));</span>\n\n<span style=\"color: #111111\">$monolog</span><span style=\"color: #4b4f5c\">-&gt;</span><span style=\"color: #a47ac6\">pushHandler</span><span style=\"color: #111111\">($handler);</span>\n</pre></div>\n</div>\n</div>\n<div class=\"section\" id=\"adding-context\">\n<h3>Adding Context</h3>\n<p>Capturing context can be done via a monolog processor:</p>\n<div class=\"highlight-php\"><div class=\"highlight\" style=\"background: #ffffff\"><pre style=\"line-height: 125%\"><span></span><span style=\"color: #111111\">$monolog</span><span style=\"color: #4b4f5c\">-&gt;</span><span style=\"color: #a47ac6\">pushProcessor</span><span style=\"color: #111111\">(</span><span style=\"color: #2eb0f7\">function</span> <span style=\"color: #111111\">($record)</span> <span style=\"color: #111111\">{</span>\n    <span style=\"color: #34c08b; font-style: italic\">// record the current user</span>\n    <span style=\"color: #111111\">$user</span> <span style=\"color: #4b4f5c\">=</span> <span style=\"color: #111111\">Acme</span><span style=\"color: #4b4f5c\">::</span><span style=\"color: #a47ac6\">getCurrentUser</span><span style=\"color: #111111\">();</span>\n    <span style=\"color: #111111\">$record[</span><span style=\"color: #e8535a\">&#39;context&#39;</span><span style=\"color: #111111\">][</span><span style=\"color: #e8535a\">&#39;user&#39;</span><span style=\"color: #111111\">]</span> <span style=\"color: #4b4f5c\">=</span> <span style=\"color: #2eb0f7\">array</span><span style=\"color: #111111\">(</span>\n        <span style=\"color: #e8535a\">&#39;name&#39;</span> <span style=\"color: #4b4f5c\">=&gt;</span> <span style=\"color: #111111\">$user</span><span style=\"color: #4b4f5c\">-&gt;</span><span style=\"color: #a47ac6\">getName</span><span style=\"color: #111111\">(),</span>\n        <span style=\"color: #e8535a\">&#39;username&#39;</span> <span style=\"color: #4b4f5c\">=&gt;</span> <span style=\"color: #111111\">$user</span><span style=\"color: #4b4f5c\">-&gt;</span><span style=\"color: #a47ac6\">getUsername</span><span style=\"color: #111111\">(),</span>\n        <span style=\"color: #e8535a\">&#39;email&#39;</span> <span style=\"color: #4b4f5c\">=&gt;</span> <span style=\"color: #111111\">$user</span><span style=\"color: #4b4f5c\">-&gt;</span><span style=\"color: #a47ac6\">getEmail</span><span style=\"color: #111111\">(),</span>\n    <span style=\"color: #111111\">);</span>\n\n    <span style=\"color: #34c08b; font-style: italic\">// Add various tags</span>\n    <span style=\"color: #111111\">$record[</span><span style=\"color: #e8535a\">&#39;context&#39;</span><span style=\"color: #111111\">][</span><span style=\"color: #e8535a\">&#39;tags&#39;</span><span style=\"color: #111111\">]</span> <span style=\"color: #4b4f5c\">=</span> <span style=\"color: #2eb0f7\">array</span><span style=\"color: #111111\">(</span><span style=\"color: #e8535a\">&#39;key&#39;</span> <span style=\"color: #4b4f5c\">=&gt;</span> <span style=\"color: #e8535a\">&#39;value&#39;</span><span style=\"color: #111111\">);</span>\n\n    <span style=\"color: #34c08b; font-style: italic\">// Add various generic context</span>\n    <span style=\"color: #111111\">$record[</span><span style=\"color: #e8535a\">&#39;extra&#39;</span><span style=\"color: #111111\">][</span><span style=\"color: #e8535a\">&#39;key&#39;</span><span style=\"color: #111111\">]</span> <span style=\"color: #4b4f5c\">=</span> <span style=\"color: #e8535a\">&#39;value&#39;</span><span style=\"color: #111111\">;</span>\n\n    <span style=\"color: #2eb0f7\">return</span> <span style=\"color: #111111\">$record;</span>\n<span style=\"color: #111111\">});</span>\n</pre></div>\n</div>\n</div>\n<div class=\"section\" id=\"breadcrumbs\">\n<h3>Breadcrumbs</h3>\n<p>Sentry provides a breadcrumb handler to automatically send logs along as crumbs:</p>\n<div class=\"highlight-php\"><div class=\"highlight\" style=\"background: #ffffff\"><pre style=\"line-height: 125%\"><span></span><span style=\"color: #111111\">$client</span> <span style=\"color: #4b4f5c\">=</span> <span style=\"color: #2eb0f7\">new</span> <span style=\"color: #111111\">Raven_Client(</span><span style=\"color: #e8535a\">&#39;___DSN___&#39;</span><span style=\"color: #111111\">);</span>\n\n<span style=\"color: #111111\">$handler</span> <span style=\"color: #4b4f5c\">=</span> <span style=\"color: #2eb0f7\">new</span> <span style=\"color: #111111\">\\Raven_Breadcrumbs_MonologHandler($client);</span>\n<span style=\"color: #111111\">$monolog</span><span style=\"color: #4b4f5c\">-&gt;</span><span style=\"color: #a47ac6\">pushHandler</span><span style=\"color: #111111\">($handler);</span>\n</pre></div>\n</div>\n</div>\n</div>\n", 
+  "link": "https://docs.getsentry.com/hosted/clients/php/integrations/monolog/", 
+  "id": "php-monolog", 
+  "name": "Monolog"
+}
diff --git a/tests/fixtures/integration-docs/php-symfony2.json b/tests/fixtures/integration-docs/php-symfony2.json
new file mode 100644
index 0000000000..268b6ba496
--- /dev/null
+++ b/tests/fixtures/integration-docs/php-symfony2.json
@@ -0,0 +1,6 @@
+{
+  "html": "<div class=\"section\" id=\"installation\">\n<h2>Installation</h2>\n<p>There are various ways to install the PHP integration for Sentry.  The\nrecommended way is to use <a class=\"reference external\" href=\"http://getcomposer.org/\">Composer</a>:</p>\n<div class=\"highlight-python\"><div class=\"highlight\" style=\"background: #ffffff\"><pre style=\"line-height: 125%\"><span></span>$ composer require &quot;sentry/sentry&quot;\n</pre></div>\n</div>\n<p>Alternatively you can manually install it:</p>\n<ol class=\"arabic\">\n<li><p class=\"first\">Download and extract the latest <a class=\"reference external\" href=\"https://github.com/getsentry/sentry-php/archive/master.zip\">sentry-php</a> archive\nto your PHP project.</p>\n</li>\n<li><p class=\"first\">Require the autoloader in your application:</p>\n<div class=\"highlight-php\"><div class=\"highlight\" style=\"background: #ffffff\"><pre style=\"line-height: 125%\"><span></span><span style=\"color: #2eb0f7\">require_once</span> <span style=\"color: #e8535a\">&#39;/path/to/Raven/library/Raven/Autoloader.php&#39;</span><span style=\"color: #111111\">;</span>\n<span style=\"color: #111111\">Raven_Autoloader</span><span style=\"color: #4b4f5c\">::</span><span style=\"color: #a47ac6\">register</span><span style=\"color: #111111\">();</span>\n</pre></div>\n</div>\n</li>\n</ol>\n</div>\n\n\n<div class=\"section\" id=\"symfony-2\">\n<h2>Symfony 2+</h2>\n<p>Install the <code class=\"docutils literal\"><span class=\"pre\">sentry/sentry-symfony</span></code> package:</p>\n<div class=\"highlight-bash\"><div class=\"highlight\" style=\"background: #ffffff\"><pre style=\"line-height: 125%\"><span></span>$ composer require sentry/sentry-symfony\n</pre></div>\n</div>\n<p>Enable the bundle in <code class=\"docutils literal\"><span class=\"pre\">app/AppKernel.php</span></code>:</p>\n<div class=\"highlight-php\"><div class=\"highlight\" style=\"background: #ffffff\"><pre style=\"line-height: 125%\"><span></span><span style=\"color: #4b4f5c\">&lt;?</span><span style=\"color: #111111\">php</span>\n<span style=\"color: #2eb0f7\">class</span> <span style=\"color: #111111\">AppKernel</span> <span style=\"color: #2eb0f7\">extends</span> <span style=\"color: #111111\">Kernel</span>\n<span style=\"color: #111111\">{</span>\n    <span style=\"color: #2eb0f7\">public</span> <span style=\"color: #2eb0f7\">function</span> <span style=\"color: #111111\">registerBundles()</span>\n    <span style=\"color: #111111\">{</span>\n        <span style=\"color: #111111\">$bundles</span> <span style=\"color: #4b4f5c\">=</span> <span style=\"color: #2eb0f7\">array</span><span style=\"color: #111111\">(</span>\n            <span style=\"color: #34c08b; font-style: italic\">// ...</span>\n\n            <span style=\"color: #2eb0f7\">new</span> <span style=\"color: #111111\">Sentry\\SentryBundle\\SentryBundle(),</span>\n        <span style=\"color: #111111\">);</span>\n\n        <span style=\"color: #34c08b; font-style: italic\">// ...</span>\n    <span style=\"color: #111111\">}</span>\n\n    <span style=\"color: #34c08b; font-style: italic\">// ...</span>\n<span style=\"color: #111111\">}</span>\n</pre></div>\n</div>\n<p>Add your DSN to <code class=\"docutils literal\"><span class=\"pre\">app/config/config.yml</span></code>:</p>\n<div class=\"highlight-yaml\"><div class=\"highlight\" style=\"background: #ffffff\"><pre style=\"line-height: 125%\"><span></span><span style=\"color: #111111\">sentry:</span>\n    <span style=\"color: #111111\">dsn:</span> <span style=\"color: #e8535a\">&quot;___DSN___&quot;</span>\n</pre></div>\n</div>\n</div>\n", 
+  "link": "https://docs.getsentry.com/hosted/clients/php/integrations/symfony2/", 
+  "id": "php-symfony2", 
+  "name": "Symfony2"
+}
diff --git a/tests/fixtures/integration-docs/php.json b/tests/fixtures/integration-docs/php.json
new file mode 100644
index 0000000000..8944e82868
--- /dev/null
+++ b/tests/fixtures/integration-docs/php.json
@@ -0,0 +1,6 @@
+{
+  "html": "<div class=\"section\" id=\"installation\">\n<h2>Installation</h2>\n<p>There are various ways to install the PHP integration for Sentry.  The\nrecommended way is to use <a class=\"reference external\" href=\"http://getcomposer.org/\">Composer</a>:</p>\n<div class=\"highlight-python\"><div class=\"highlight\" style=\"background: #ffffff\"><pre style=\"line-height: 125%\"><span></span>$ composer require &quot;sentry/sentry&quot;\n</pre></div>\n</div>\n<p>Alternatively you can manually install it:</p>\n<ol class=\"arabic\">\n<li><p class=\"first\">Download and extract the latest <a class=\"reference external\" href=\"https://github.com/getsentry/sentry-php/archive/master.zip\">sentry-php</a> archive\nto your PHP project.</p>\n</li>\n<li><p class=\"first\">Require the autoloader in your application:</p>\n<div class=\"highlight-php\"><div class=\"highlight\" style=\"background: #ffffff\"><pre style=\"line-height: 125%\"><span></span><span style=\"color: #2eb0f7\">require_once</span> <span style=\"color: #e8535a\">&#39;/path/to/Raven/library/Raven/Autoloader.php&#39;</span><span style=\"color: #111111\">;</span>\n<span style=\"color: #111111\">Raven_Autoloader</span><span style=\"color: #4b4f5c\">::</span><span style=\"color: #a47ac6\">register</span><span style=\"color: #111111\">();</span>\n</pre></div>\n</div>\n</li>\n</ol>\n</div>\n\n\n<div class=\"section\" id=\"configuration\">\n<h2>Configuration</h2>\n<p>The most important part is the creation of the raven client.  Create it\nonce and reference it from anywhere you want to interface with Sentry:</p>\n<div class=\"highlight-php\"><div class=\"highlight\" style=\"background: #ffffff\"><pre style=\"line-height: 125%\"><span></span><span style=\"color: #111111\">$client</span> <span style=\"color: #4b4f5c\">=</span> <span style=\"color: #2eb0f7\">new</span> <span style=\"color: #111111\">Raven_Client(</span><span style=\"color: #e8535a\">&#39;___DSN___&#39;</span><span style=\"color: #111111\">);</span>\n</pre></div>\n</div>\n<p>Once you have the client you can either use it manually or enable the\nautomatic error and exception capturing which is recomended:</p>\n<div class=\"highlight-php\"><div class=\"highlight\" style=\"background: #ffffff\"><pre style=\"line-height: 125%\"><span></span><span style=\"color: #111111\">$error_handler</span> <span style=\"color: #4b4f5c\">=</span> <span style=\"color: #2eb0f7\">new</span> <span style=\"color: #111111\">Raven_ErrorHandler($client);</span>\n<span style=\"color: #111111\">$error_handler</span><span style=\"color: #4b4f5c\">-&gt;</span><span style=\"color: #a47ac6\">registerExceptionHandler</span><span style=\"color: #111111\">();</span>\n<span style=\"color: #111111\">$error_handler</span><span style=\"color: #4b4f5c\">-&gt;</span><span style=\"color: #a47ac6\">registerErrorHandler</span><span style=\"color: #111111\">();</span>\n<span style=\"color: #111111\">$error_handler</span><span style=\"color: #4b4f5c\">-&gt;</span><span style=\"color: #a47ac6\">registerShutdownFunction</span><span style=\"color: #111111\">();</span>\n</pre></div>\n</div>\n</div>\n\n\n<div class=\"section\" id=\"capturing-errors\">\n<h2>Capturing Errors</h2>\n<p>Sentry includes basic functionality for reporting any uncaught\nexceptions or PHP errors. This is done via the error handler,\nand appropriate hooks for each of PHP&#8217;s built-in reporting:</p>\n<div class=\"highlight-php\"><div class=\"highlight\" style=\"background: #ffffff\"><pre style=\"line-height: 125%\"><span></span><span style=\"color: #111111\">$error_handler</span> <span style=\"color: #4b4f5c\">=</span> <span style=\"color: #2eb0f7\">new</span> <span style=\"color: #111111\">Raven_ErrorHandler($sentryClient);</span>\n<span style=\"color: #111111\">$error_handler</span><span style=\"color: #4b4f5c\">-&gt;</span><span style=\"color: #a47ac6\">registerExceptionHandler</span><span style=\"color: #111111\">();</span>\n<span style=\"color: #111111\">$error_handler</span><span style=\"color: #4b4f5c\">-&gt;</span><span style=\"color: #a47ac6\">registerErrorHandler</span><span style=\"color: #111111\">();</span>\n<span style=\"color: #111111\">$error_handler</span><span style=\"color: #4b4f5c\">-&gt;</span><span style=\"color: #a47ac6\">registerShutdownFunction</span><span style=\"color: #111111\">();</span>\n</pre></div>\n</div>\n<div class=\"admonition note\">\n<p class=\"first admonition-title\">Note</p>\n<p class=\"last\">Calling <code class=\"docutils literal\"><span class=\"pre\">install()</span></code> on a Raven_Client instance will automatically\nregister these handlers.</p>\n</div>\n</div>\n", 
+  "link": "https://docs.getsentry.com/hosted/clients/php/", 
+  "id": "php", 
+  "name": "PHP"
+}
diff --git a/tests/fixtures/integration-docs/python-bottle.json b/tests/fixtures/integration-docs/python-bottle.json
new file mode 100644
index 0000000000..918ddf4653
--- /dev/null
+++ b/tests/fixtures/integration-docs/python-bottle.json
@@ -0,0 +1,6 @@
+{
+  "html": "<div class=\"section\" id=\"installation\">\n<h2>Installation</h2>\n<p>If you haven&#8217;t already, start by downloading Raven. The easiest way is\nwith <em>pip</em>:</p>\n<div class=\"highlight-python\"><div class=\"highlight\" style=\"background: #ffffff\"><pre style=\"line-height: 125%\"><span></span>pip install raven --upgrade\n</pre></div>\n</div>\n</div>\n\n\n<div class=\"section\" id=\"setup\">\n<h2>Setup</h2>\n<p>The first thing you&#8217;ll need to do is to disable catchall in your Bottle app:</p>\n<div class=\"highlight-python\"><div class=\"highlight\" style=\"background: #ffffff\"><pre style=\"line-height: 125%\"><span></span><span style=\"color: #2eb0f7\">import</span> <span style=\"color: #111111\">bottle</span>\n\n<span style=\"color: #111111\">app</span> <span style=\"color: #4b4f5c\">=</span> <span style=\"color: #111111\">bottle</span><span style=\"color: #4b4f5c\">.</span><span style=\"color: #111111\">app()</span>\n<span style=\"color: #111111\">app</span><span style=\"color: #4b4f5c\">.</span><span style=\"color: #111111\">catchall</span> <span style=\"color: #4b4f5c\">=</span> <span style=\"color: #45c2c9\">False</span>\n</pre></div>\n</div>\n<div class=\"admonition note\">\n<p class=\"first admonition-title\">Note</p>\n<p class=\"last\">Bottle will not propagate exceptions to the underlying WSGI\nmiddleware by default. Setting catchall to False disables that.</p>\n</div>\n<p>Sentry will then act as Middleware:</p>\n<div class=\"highlight-python\"><div class=\"highlight\" style=\"background: #ffffff\"><pre style=\"line-height: 125%\"><span></span><span style=\"color: #2eb0f7\">from</span> <span style=\"color: #111111\">raven</span> <span style=\"color: #2eb0f7\">import</span> <span style=\"color: #111111\">Client</span>\n<span style=\"color: #2eb0f7\">from</span> <span style=\"color: #111111\">raven.contrib.bottle</span> <span style=\"color: #2eb0f7\">import</span> <span style=\"color: #111111\">Sentry</span>\n<span style=\"color: #111111\">client</span> <span style=\"color: #4b4f5c\">=</span> <span style=\"color: #111111\">Client(</span><span style=\"color: #e8535a\">&#39;___DSN___&#39;</span><span style=\"color: #111111\">)</span>\n<span style=\"color: #111111\">app</span> <span style=\"color: #4b4f5c\">=</span> <span style=\"color: #111111\">Sentry(app,</span> <span style=\"color: #111111\">client)</span>\n</pre></div>\n</div>\n</div>\n\n\n<div class=\"section\" id=\"usage\">\n<h2>Usage</h2>\n<p>Once you&#8217;ve configured the Sentry application you need only call run with it:</p>\n<div class=\"highlight-python\"><div class=\"highlight\" style=\"background: #ffffff\"><pre style=\"line-height: 125%\"><span></span><span style=\"color: #111111\">run(app</span><span style=\"color: #4b4f5c\">=</span><span style=\"color: #111111\">app)</span>\n</pre></div>\n</div>\n<p>If you want to send additional events, a couple of shortcuts are provided\non the Bottle request app object.</p>\n<p>Capture an arbitrary exception by calling <code class=\"docutils literal\"><span class=\"pre\">captureException</span></code>:</p>\n<div class=\"highlight-python\"><div class=\"highlight\" style=\"background: #ffffff\"><pre style=\"line-height: 125%\"><span></span><span style=\"color: #2eb0f7\">try</span><span style=\"color: #111111\">:</span>\n    <span style=\"color: #45c2c9\">1</span> <span style=\"color: #4b4f5c\">/</span> <span style=\"color: #45c2c9\">0</span>\n<span style=\"color: #2eb0f7\">except</span> <span style=\"color: #e8535a\">ZeroDivisionError</span><span style=\"color: #111111\">:</span>\n    <span style=\"color: #111111\">request</span><span style=\"color: #4b4f5c\">.</span><span style=\"color: #111111\">app</span><span style=\"color: #4b4f5c\">.</span><span style=\"color: #111111\">sentry</span><span style=\"color: #4b4f5c\">.</span><span style=\"color: #111111\">captureException()</span>\n</pre></div>\n</div>\n<p>Log a generic message with <code class=\"docutils literal\"><span class=\"pre\">captureMessage</span></code>:</p>\n<div class=\"highlight-python\"><div class=\"highlight\" style=\"background: #ffffff\"><pre style=\"line-height: 125%\"><span></span><span style=\"color: #111111\">request</span><span style=\"color: #4b4f5c\">.</span><span style=\"color: #111111\">app</span><span style=\"color: #4b4f5c\">.</span><span style=\"color: #111111\">sentry</span><span style=\"color: #4b4f5c\">.</span><span style=\"color: #111111\">captureMessage(</span><span style=\"color: #e8535a\">&#39;Hello, world!&#39;</span><span style=\"color: #111111\">)</span>\n</pre></div>\n</div>\n</div>\n", 
+  "link": "https://docs.getsentry.com/hosted/clients/python/integrations/bottle/", 
+  "id": "python-bottle", 
+  "name": "Bottle"
+}
diff --git a/tests/fixtures/integration-docs/python-celery.json b/tests/fixtures/integration-docs/python-celery.json
new file mode 100644
index 0000000000..70ee892291
--- /dev/null
+++ b/tests/fixtures/integration-docs/python-celery.json
@@ -0,0 +1,6 @@
+{
+  "html": "<div class=\"section\" id=\"installation\">\n<h2>Installation</h2>\n<p>If you haven&#8217;t already, start by downloading Raven. The easiest way is\nwith <em>pip</em>:</p>\n<div class=\"highlight-python\"><div class=\"highlight\" style=\"background: #ffffff\"><pre style=\"line-height: 125%\"><span></span>pip install raven --upgrade\n</pre></div>\n</div>\n</div>\n\n\n<div class=\"section\" id=\"celery\">\n<h2>Celery</h2>\n<p><a class=\"reference external\" href=\"http://www.celeryproject.org/\">Celery</a> is a distributed task queue\nsystem for Python built on AMQP principles.  For Celery built-in support\nby Raven is provided but it requires some manual configuration.</p>\n<div class=\"section\" id=\"installation\">\n<h3>Installation</h3>\n<p>If you haven&#8217;t already, start by downloading Raven. The easiest way is\nwith <em>pip</em>:</p>\n<div class=\"highlight-python\"><div class=\"highlight\" style=\"background: #ffffff\"><pre style=\"line-height: 125%\"><span></span>pip install raven --upgrade\n</pre></div>\n</div>\n</div>\n<div class=\"section\" id=\"setup\">\n<h3>Setup</h3>\n<p>To capture errors, you need to register a couple of signals to hijack\nCelery error handling:</p>\n<div class=\"highlight-python\"><div class=\"highlight\" style=\"background: #ffffff\"><pre style=\"line-height: 125%\"><span></span><span style=\"color: #2eb0f7\">from</span> <span style=\"color: #111111\">raven</span> <span style=\"color: #2eb0f7\">import</span> <span style=\"color: #111111\">Client</span>\n<span style=\"color: #2eb0f7\">from</span> <span style=\"color: #111111\">raven.contrib.celery</span> <span style=\"color: #2eb0f7\">import</span> <span style=\"color: #111111\">register_signal,</span> <span style=\"color: #111111\">register_logger_signal</span>\n\n<span style=\"color: #111111\">client</span> <span style=\"color: #4b4f5c\">=</span> <span style=\"color: #111111\">Client(</span><span style=\"color: #e8535a\">&#39;___DSN___&#39;</span><span style=\"color: #111111\">)</span>\n\n<span style=\"color: #34c08b; font-style: italic\"># register a custom filter to filter out duplicate logs</span>\n<span style=\"color: #111111\">register_logger_signal(client)</span>\n\n<span style=\"color: #34c08b; font-style: italic\"># The register_logger_signal function can also take an optional argument</span>\n<span style=\"color: #34c08b; font-style: italic\"># `loglevel` which is the level used for the handler created.</span>\n<span style=\"color: #34c08b; font-style: italic\"># Defaults to `logging.ERROR`</span>\n<span style=\"color: #111111\">register_logger_signal(client,</span> <span style=\"color: #111111\">loglevel</span><span style=\"color: #4b4f5c\">=</span><span style=\"color: #111111\">logging</span><span style=\"color: #4b4f5c\">.</span><span style=\"color: #111111\">INFO)</span>\n\n<span style=\"color: #34c08b; font-style: italic\"># hook into the Celery error handler</span>\n<span style=\"color: #111111\">register_signal(client)</span>\n\n<span style=\"color: #34c08b; font-style: italic\"># The register_signal function can also take an optional argument</span>\n<span style=\"color: #34c08b; font-style: italic\"># `ignore_expected` which causes exception classes specified in Task.throws</span>\n<span style=\"color: #34c08b; font-style: italic\"># to be ignored</span>\n<span style=\"color: #111111\">register_signal(client,</span> <span style=\"color: #111111\">ignore_expected</span><span style=\"color: #4b4f5c\">=</span><span style=\"color: #45c2c9\">True</span><span style=\"color: #111111\">)</span>\n</pre></div>\n</div>\n<p>A more complex version to encapsulate behavior:</p>\n<div class=\"highlight-python\"><div class=\"highlight\" style=\"background: #ffffff\"><pre style=\"line-height: 125%\"><span></span><span style=\"color: #2eb0f7\">import</span> <span style=\"color: #111111\">celery</span>\n<span style=\"color: #2eb0f7\">import</span> <span style=\"color: #111111\">raven</span>\n<span style=\"color: #2eb0f7\">from</span> <span style=\"color: #111111\">raven.contrib.celery</span> <span style=\"color: #2eb0f7\">import</span> <span style=\"color: #111111\">register_signal,</span> <span style=\"color: #111111\">register_logger_signal</span>\n\n<span style=\"color: #2eb0f7\">class</span> <span style=\"color: #111111\">Celery(celery</span><span style=\"color: #4b4f5c\">.</span><span style=\"color: #111111\">Celery):</span>\n\n    <span style=\"color: #2eb0f7\">def</span> <span style=\"color: #111111\">on_configure(</span><span style=\"color: #45c2c9\">self</span><span style=\"color: #111111\">):</span>\n        <span style=\"color: #111111\">client</span> <span style=\"color: #4b4f5c\">=</span> <span style=\"color: #111111\">raven</span><span style=\"color: #4b4f5c\">.</span><span style=\"color: #111111\">Client(</span><span style=\"color: #e8535a\">&#39;___DSN___&#39;</span><span style=\"color: #111111\">)</span>\n\n        <span style=\"color: #34c08b; font-style: italic\"># register a custom filter to filter out duplicate logs</span>\n        <span style=\"color: #111111\">register_logger_signal(client)</span>\n\n        <span style=\"color: #34c08b; font-style: italic\"># hook into the Celery error handler</span>\n        <span style=\"color: #111111\">register_signal(client)</span>\n\n<span style=\"color: #111111\">app</span> <span style=\"color: #4b4f5c\">=</span> <span style=\"color: #111111\">Celery(__name__)</span>\n<span style=\"color: #111111\">app</span><span style=\"color: #4b4f5c\">.</span><span style=\"color: #111111\">config_from_object(</span><span style=\"color: #e8535a\">&#39;django.conf:settings&#39;</span><span style=\"color: #111111\">)</span>\n</pre></div>\n</div>\n</div>\n</div>\n", 
+  "link": "https://docs.getsentry.com/hosted/clients/python/integrations/celery/", 
+  "id": "python-celery", 
+  "name": "Celery"
+}
diff --git a/tests/fixtures/integration-docs/python-django.json b/tests/fixtures/integration-docs/python-django.json
new file mode 100644
index 0000000000..ea9c331020
--- /dev/null
+++ b/tests/fixtures/integration-docs/python-django.json
@@ -0,0 +1,6 @@
+{
+  "html": "<div class=\"section\" id=\"installation\">\n<h2>Installation</h2>\n<p>If you haven&#8217;t already, start by downloading Raven. The easiest way is\nwith <em>pip</em>:</p>\n<div class=\"highlight-python\"><div class=\"highlight\" style=\"background: #ffffff\"><pre style=\"line-height: 125%\"><span></span>pip install raven --upgrade\n</pre></div>\n</div>\n</div>\n\n\n<div class=\"section\" id=\"setup\">\n<h2>Setup</h2>\n<p>Using the Django integration is as simple as adding\n<code class=\"xref py py-mod docutils literal\"><span class=\"pre\">raven.contrib.django.raven_compat</span></code> to your installed apps:</p>\n<div class=\"highlight-python\"><div class=\"highlight\" style=\"background: #ffffff\"><pre style=\"line-height: 125%\"><span></span><span style=\"color: #111111\">INSTALLED_APPS</span> <span style=\"color: #4b4f5c\">=</span> <span style=\"color: #111111\">(</span>\n    <span style=\"color: #e8535a\">&#39;raven.contrib.django.raven_compat&#39;</span><span style=\"color: #111111\">,</span>\n<span style=\"color: #111111\">)</span>\n</pre></div>\n</div>\n<div class=\"admonition note\">\n<p class=\"first admonition-title\">Note</p>\n<p class=\"last\">This causes Raven to install a hook in Django that will\nautomatically report uncaught exceptions.</p>\n</div>\n<p>Additional settings for the client are configured using the\n<code class=\"docutils literal\"><span class=\"pre\">RAVEN_CONFIG</span></code> dictionary:</p>\n<div class=\"highlight-python\"><div class=\"highlight\" style=\"background: #ffffff\"><pre style=\"line-height: 125%\"><span></span><span style=\"color: #2eb0f7\">import</span> <span style=\"color: #111111\">os</span>\n<span style=\"color: #2eb0f7\">import</span> <span style=\"color: #111111\">raven</span>\n\n<span style=\"color: #111111\">RAVEN_CONFIG</span> <span style=\"color: #4b4f5c\">=</span> <span style=\"color: #111111\">{</span>\n    <span style=\"color: #e8535a\">&#39;dsn&#39;</span><span style=\"color: #111111\">:</span> <span style=\"color: #e8535a\">&#39;___DSN___&#39;</span><span style=\"color: #111111\">,</span>\n    <span style=\"color: #34c08b; font-style: italic\"># If you are using git, you can also automatically configure the</span>\n    <span style=\"color: #34c08b; font-style: italic\"># release based on the git info.</span>\n    <span style=\"color: #e8535a\">&#39;release&#39;</span><span style=\"color: #111111\">:</span> <span style=\"color: #111111\">raven</span><span style=\"color: #4b4f5c\">.</span><span style=\"color: #111111\">fetch_git_sha(os</span><span style=\"color: #4b4f5c\">.</span><span style=\"color: #111111\">path</span><span style=\"color: #4b4f5c\">.</span><span style=\"color: #111111\">abspath(os</span><span style=\"color: #4b4f5c\">.</span><span style=\"color: #111111\">pardir)),</span>\n<span style=\"color: #111111\">}</span>\n</pre></div>\n</div>\n<p>Once you&#8217;ve configured the client, you can test it using the standard Django\nmanagement interface:</p>\n<div class=\"highlight-python\"><div class=\"highlight\" style=\"background: #ffffff\"><pre style=\"line-height: 125%\"><span></span>python manage.py raven test\n</pre></div>\n</div>\n<p>You&#8217;ll be referencing the client slightly differently in Django as well:</p>\n<div class=\"highlight-python\"><div class=\"highlight\" style=\"background: #ffffff\"><pre style=\"line-height: 125%\"><span></span><span style=\"color: #2eb0f7\">from</span> <span style=\"color: #111111\">raven.contrib.django.raven_compat.models</span> <span style=\"color: #2eb0f7\">import</span> <span style=\"color: #111111\">client</span>\n\n<span style=\"color: #111111\">client</span><span style=\"color: #4b4f5c\">.</span><span style=\"color: #111111\">captureException()</span>\n</pre></div>\n</div>\n</div>\n", 
+  "link": "https://docs.getsentry.com/hosted/clients/python/integrations/django/", 
+  "id": "python-django", 
+  "name": "Django"
+}
diff --git a/tests/fixtures/integration-docs/python-flask.json b/tests/fixtures/integration-docs/python-flask.json
new file mode 100644
index 0000000000..802fd7b675
--- /dev/null
+++ b/tests/fixtures/integration-docs/python-flask.json
@@ -0,0 +1,6 @@
+{
+  "html": "<div class=\"section\" id=\"installation\">\n<h2>Installation</h2>\n<p>If you haven&#8217;t already, start by downloading Raven. The easiest way is\nwith <em>pip</em>:</p>\n<div class=\"highlight-python\"><div class=\"highlight\" style=\"background: #ffffff\"><pre style=\"line-height: 125%\"><span></span>pip install raven --upgrade\n</pre></div>\n</div>\n</div>\n\n\n<div class=\"section\" id=\"installation\">\n<h2>Installation</h2>\n<p>If you haven&#8217;t already, install raven with its explicit Flask dependencies:</p>\n<div class=\"highlight-python\"><div class=\"highlight\" style=\"background: #ffffff\"><pre style=\"line-height: 125%\"><span></span>pip install raven[flask]\n</pre></div>\n</div>\n</div>\n\n\n<div class=\"section\" id=\"setup\">\n<h2>Setup</h2>\n<p>The first thing you&#8217;ll need to do is to initialize Raven under your application:</p>\n<div class=\"highlight-python\"><div class=\"highlight\" style=\"background: #ffffff\"><pre style=\"line-height: 125%\"><span></span><span style=\"color: #2eb0f7\">from</span> <span style=\"color: #111111\">raven.contrib.flask</span> <span style=\"color: #2eb0f7\">import</span> <span style=\"color: #111111\">Sentry</span>\n<span style=\"color: #111111\">sentry</span> <span style=\"color: #4b4f5c\">=</span> <span style=\"color: #111111\">Sentry(app,</span> <span style=\"color: #111111\">dsn</span><span style=\"color: #4b4f5c\">=</span><span style=\"color: #e8535a\">&#39;___DSN___&#39;</span><span style=\"color: #111111\">)</span>\n</pre></div>\n</div>\n<p>If you don&#8217;t specify the <code class=\"docutils literal\"><span class=\"pre\">dsn</span></code> value, we will attempt to read it from\nyour environment under the <code class=\"docutils literal\"><span class=\"pre\">SENTRY_DSN</span></code> key.</p>\n</div>\n", 
+  "link": "https://docs.getsentry.com/hosted/clients/python/integrations/flask/", 
+  "id": "python-flask", 
+  "name": "Flask"
+}
diff --git a/tests/fixtures/integration-docs/python-pylons.json b/tests/fixtures/integration-docs/python-pylons.json
new file mode 100644
index 0000000000..6ccbc96fdb
--- /dev/null
+++ b/tests/fixtures/integration-docs/python-pylons.json
@@ -0,0 +1,6 @@
+{
+  "html": "<div class=\"section\" id=\"installation\">\n<h2>Installation</h2>\n<p>If you haven&#8217;t already, start by downloading Raven. The easiest way is\nwith <em>pip</em>:</p>\n<div class=\"highlight-python\"><div class=\"highlight\" style=\"background: #ffffff\"><pre style=\"line-height: 125%\"><span></span>pip install raven --upgrade\n</pre></div>\n</div>\n</div>\n\n\n<div class=\"section\" id=\"wsgi-middleware\">\n<h2>WSGI Middleware</h2>\n<p>A Pylons-specific middleware exists to enable easy configuration from settings:</p>\n<div class=\"highlight-python\"><div class=\"highlight\" style=\"background: #ffffff\"><pre style=\"line-height: 125%\"><span></span><span style=\"color: #2eb0f7\">from</span> <span style=\"color: #111111\">raven.contrib.pylons</span> <span style=\"color: #2eb0f7\">import</span> <span style=\"color: #111111\">Sentry</span>\n\n<span style=\"color: #111111\">application</span> <span style=\"color: #4b4f5c\">=</span> <span style=\"color: #111111\">Sentry(application,</span> <span style=\"color: #111111\">config)</span>\n</pre></div>\n</div>\n<p>Configuration is handled via the sentry namespace:</p>\n<div class=\"highlight-ini\"><div class=\"highlight\" style=\"background: #ffffff\"><pre style=\"line-height: 125%\"><span></span><span style=\"color: #2eb0f7\">[sentry]</span>\n<span style=\"color: #a47ac6\">dsn</span><span style=\"color: #4b4f5c\">=</span><span style=\"color: #e8535a\">___DSN___</span>\n<span style=\"color: #a47ac6\">include_paths</span><span style=\"color: #4b4f5c\">=</span><span style=\"color: #e8535a\">my.package,my.other.package,</span>\n<span style=\"color: #a47ac6\">exclude_paths</span><span style=\"color: #4b4f5c\">=</span><span style=\"color: #e8535a\">my.package.crud</span>\n</pre></div>\n</div>\n</div>\n\n\n<div class=\"section\" id=\"logger-setup\">\n<h2>Logger setup</h2>\n<p>Add the following lines to your project&#8217;s <cite>.ini</cite> file to setup <cite>SentryHandler</cite>:</p>\n<div class=\"highlight-ini\"><div class=\"highlight\" style=\"background: #ffffff\"><pre style=\"line-height: 125%\"><span></span><span style=\"color: #2eb0f7\">[loggers]</span>\n<span style=\"color: #a47ac6\">keys</span> <span style=\"color: #4b4f5c\">=</span> <span style=\"color: #e8535a\">root, sentry</span>\n\n<span style=\"color: #2eb0f7\">[handlers]</span>\n<span style=\"color: #a47ac6\">keys</span> <span style=\"color: #4b4f5c\">=</span> <span style=\"color: #e8535a\">console, sentry</span>\n\n<span style=\"color: #2eb0f7\">[formatters]</span>\n<span style=\"color: #a47ac6\">keys</span> <span style=\"color: #4b4f5c\">=</span> <span style=\"color: #e8535a\">generic</span>\n\n<span style=\"color: #2eb0f7\">[logger_root]</span>\n<span style=\"color: #a47ac6\">level</span> <span style=\"color: #4b4f5c\">=</span> <span style=\"color: #e8535a\">INFO</span>\n<span style=\"color: #a47ac6\">handlers</span> <span style=\"color: #4b4f5c\">=</span> <span style=\"color: #e8535a\">console, sentry</span>\n\n<span style=\"color: #2eb0f7\">[logger_sentry]</span>\n<span style=\"color: #a47ac6\">level</span> <span style=\"color: #4b4f5c\">=</span> <span style=\"color: #e8535a\">WARN</span>\n<span style=\"color: #a47ac6\">handlers</span> <span style=\"color: #4b4f5c\">=</span> <span style=\"color: #e8535a\">console</span>\n<span style=\"color: #a47ac6\">qualname</span> <span style=\"color: #4b4f5c\">=</span> <span style=\"color: #e8535a\">sentry.errors</span>\n<span style=\"color: #a47ac6\">propagate</span> <span style=\"color: #4b4f5c\">=</span> <span style=\"color: #e8535a\">0</span>\n\n<span style=\"color: #2eb0f7\">[handler_console]</span>\n<span style=\"color: #a47ac6\">class</span> <span style=\"color: #4b4f5c\">=</span> <span style=\"color: #e8535a\">StreamHandler</span>\n<span style=\"color: #a47ac6\">args</span> <span style=\"color: #4b4f5c\">=</span> <span style=\"color: #e8535a\">(sys.stderr,)</span>\n<span style=\"color: #a47ac6\">level</span> <span style=\"color: #4b4f5c\">=</span> <span style=\"color: #e8535a\">NOTSET</span>\n<span style=\"color: #a47ac6\">formatter</span> <span style=\"color: #4b4f5c\">=</span> <span style=\"color: #e8535a\">generic</span>\n\n<span style=\"color: #2eb0f7\">[handler_sentry]</span>\n<span style=\"color: #a47ac6\">class</span> <span style=\"color: #4b4f5c\">=</span> <span style=\"color: #e8535a\">raven.handlers.logging.SentryHandler</span>\n<span style=\"color: #a47ac6\">args</span> <span style=\"color: #4b4f5c\">=</span> <span style=\"color: #e8535a\">(&#39;SENTRY_DSN&#39;,)</span>\n<span style=\"color: #a47ac6\">level</span> <span style=\"color: #4b4f5c\">=</span> <span style=\"color: #e8535a\">NOTSET</span>\n<span style=\"color: #a47ac6\">formatter</span> <span style=\"color: #4b4f5c\">=</span> <span style=\"color: #e8535a\">generic</span>\n\n<span style=\"color: #2eb0f7\">[formatter_generic]</span>\n<span style=\"color: #a47ac6\">format</span> <span style=\"color: #4b4f5c\">=</span> <span style=\"color: #e8535a\">%(asctime)s,%(msecs)03d %(levelname)-5.5s [%(name)s] %(message)s</span>\n<span style=\"color: #a47ac6\">datefmt</span> <span style=\"color: #4b4f5c\">=</span> <span style=\"color: #e8535a\">%H:%M:%S</span>\n</pre></div>\n</div>\n<div class=\"admonition note\">\n<p class=\"first admonition-title\">Note</p>\n<p class=\"last\">You may want to setup other loggers as well.</p>\n</div>\n</div>\n", 
+  "link": "https://docs.getsentry.com/hosted/clients/python/integrations/pylons/", 
+  "id": "python-pylons", 
+  "name": "Pylons"
+}
diff --git a/tests/fixtures/integration-docs/python-pyramid.json b/tests/fixtures/integration-docs/python-pyramid.json
new file mode 100644
index 0000000000..557e53c7f0
--- /dev/null
+++ b/tests/fixtures/integration-docs/python-pyramid.json
@@ -0,0 +1,6 @@
+{
+  "html": "<div class=\"section\" id=\"installation\">\n<h2>Installation</h2>\n<p>If you haven&#8217;t already, start by downloading Raven. The easiest way is\nwith <em>pip</em>:</p>\n<div class=\"highlight-python\"><div class=\"highlight\" style=\"background: #ffffff\"><pre style=\"line-height: 125%\"><span></span>pip install raven --upgrade\n</pre></div>\n</div>\n</div>\n\n\n<div class=\"section\" id=\"pastedeploy-filter\">\n<h2>PasteDeploy Filter</h2>\n<p>A filter factory for <a class=\"reference external\" href=\"https://pastedeploy.readthedocs.io/en/latest/\">PasteDeploy</a> exists to allow easily inserting Raven into a WSGI pipeline:</p>\n<div class=\"highlight-ini\"><div class=\"highlight\" style=\"background: #ffffff\"><pre style=\"line-height: 125%\"><span></span><span style=\"color: #2eb0f7\">[pipeline:main]</span>\n<span style=\"color: #a47ac6\">pipeline</span> <span style=\"color: #4b4f5c\">=</span><span style=\"color: #e8535a\"></span>\n<span style=\"color: #e8535a\">    raven</span>\n<span style=\"color: #e8535a\">    tm</span>\n<span style=\"color: #e8535a\">    MyApp</span>\n\n<span style=\"color: #2eb0f7\">[filter:raven]</span>\n<span style=\"color: #a47ac6\">use</span> <span style=\"color: #4b4f5c\">=</span> <span style=\"color: #e8535a\">egg:raven#raven</span>\n<span style=\"color: #a47ac6\">dsn</span> <span style=\"color: #4b4f5c\">=</span> <span style=\"color: #e8535a\">___DSN___</span>\n<span style=\"color: #a47ac6\">include_paths</span> <span style=\"color: #4b4f5c\">=</span> <span style=\"color: #e8535a\">my.package, my.other.package</span>\n<span style=\"color: #a47ac6\">exclude_paths</span> <span style=\"color: #4b4f5c\">=</span> <span style=\"color: #e8535a\">my.package.crud</span>\n</pre></div>\n</div>\n<p>In the <code class=\"docutils literal\"><span class=\"pre\">[filter:raven]</span></code> section, you must specify the entry-point for raven with the <code class=\"docutils literal\"><span class=\"pre\">use</span> <span class=\"pre\">=</span></code> key.  All other raven client parameters can be included in this section as well.</p>\n<p>See the <a class=\"reference external\" href=\"http://docs.pylonsproject.org/projects/pyramid/en/latest/narr/paste.html\">Pyramid PasteDeploy Configuration Documentation</a> for more information.</p>\n</div>\n\n\n<div class=\"section\" id=\"logger-setup\">\n<h2>Logger setup</h2>\n<p>Add the following lines to your project&#8217;s <cite>.ini</cite> file to setup <cite>SentryHandler</cite>:</p>\n<div class=\"highlight-ini\"><div class=\"highlight\" style=\"background: #ffffff\"><pre style=\"line-height: 125%\"><span></span><span style=\"color: #2eb0f7\">[loggers]</span>\n<span style=\"color: #a47ac6\">keys</span> <span style=\"color: #4b4f5c\">=</span> <span style=\"color: #e8535a\">root, sentry</span>\n\n<span style=\"color: #2eb0f7\">[handlers]</span>\n<span style=\"color: #a47ac6\">keys</span> <span style=\"color: #4b4f5c\">=</span> <span style=\"color: #e8535a\">console, sentry</span>\n\n<span style=\"color: #2eb0f7\">[formatters]</span>\n<span style=\"color: #a47ac6\">keys</span> <span style=\"color: #4b4f5c\">=</span> <span style=\"color: #e8535a\">generic</span>\n\n<span style=\"color: #2eb0f7\">[logger_root]</span>\n<span style=\"color: #a47ac6\">level</span> <span style=\"color: #4b4f5c\">=</span> <span style=\"color: #e8535a\">INFO</span>\n<span style=\"color: #a47ac6\">handlers</span> <span style=\"color: #4b4f5c\">=</span> <span style=\"color: #e8535a\">console, sentry</span>\n\n<span style=\"color: #2eb0f7\">[logger_sentry]</span>\n<span style=\"color: #a47ac6\">level</span> <span style=\"color: #4b4f5c\">=</span> <span style=\"color: #e8535a\">WARN</span>\n<span style=\"color: #a47ac6\">handlers</span> <span style=\"color: #4b4f5c\">=</span> <span style=\"color: #e8535a\">console</span>\n<span style=\"color: #a47ac6\">qualname</span> <span style=\"color: #4b4f5c\">=</span> <span style=\"color: #e8535a\">sentry.errors</span>\n<span style=\"color: #a47ac6\">propagate</span> <span style=\"color: #4b4f5c\">=</span> <span style=\"color: #e8535a\">0</span>\n\n<span style=\"color: #2eb0f7\">[handler_console]</span>\n<span style=\"color: #a47ac6\">class</span> <span style=\"color: #4b4f5c\">=</span> <span style=\"color: #e8535a\">StreamHandler</span>\n<span style=\"color: #a47ac6\">args</span> <span style=\"color: #4b4f5c\">=</span> <span style=\"color: #e8535a\">(sys.stderr,)</span>\n<span style=\"color: #a47ac6\">level</span> <span style=\"color: #4b4f5c\">=</span> <span style=\"color: #e8535a\">NOTSET</span>\n<span style=\"color: #a47ac6\">formatter</span> <span style=\"color: #4b4f5c\">=</span> <span style=\"color: #e8535a\">generic</span>\n\n<span style=\"color: #2eb0f7\">[handler_sentry]</span>\n<span style=\"color: #a47ac6\">class</span> <span style=\"color: #4b4f5c\">=</span> <span style=\"color: #e8535a\">raven.handlers.logging.SentryHandler</span>\n<span style=\"color: #a47ac6\">args</span> <span style=\"color: #4b4f5c\">=</span> <span style=\"color: #e8535a\">(&#39;___DSN___&#39;,)</span>\n<span style=\"color: #a47ac6\">level</span> <span style=\"color: #4b4f5c\">=</span> <span style=\"color: #e8535a\">WARNING</span>\n<span style=\"color: #a47ac6\">formatter</span> <span style=\"color: #4b4f5c\">=</span> <span style=\"color: #e8535a\">generic</span>\n\n<span style=\"color: #2eb0f7\">[formatter_generic]</span>\n<span style=\"color: #a47ac6\">format</span> <span style=\"color: #4b4f5c\">=</span> <span style=\"color: #e8535a\">%(asctime)s,%(msecs)03d %(levelname)-5.5s [%(name)s] %(message)s</span>\n<span style=\"color: #a47ac6\">datefmt</span> <span style=\"color: #4b4f5c\">=</span> <span style=\"color: #e8535a\">%H:%M:%S</span>\n</pre></div>\n</div>\n<div class=\"admonition note\">\n<p class=\"first admonition-title\">Note</p>\n<p class=\"last\">You may want to setup other loggers as well.  See the <a class=\"reference external\" href=\"http://docs.pylonsproject.org/projects/pyramid/en/latest/narr/logging.html\">Pyramid Logging Documentation</a> for more information.</p>\n</div>\n<p>Instead of defining the DSN in the <cite>.ini</cite> file you can also use the environment variable <code class=\"docutils literal\"><span class=\"pre\">SENTRY_DSN</span></code> which overwrites the setting in this file. Because of a syntax check you cannot remove the <code class=\"docutils literal\"><span class=\"pre\">args</span></code> setting completely, as workaround you can define an empty list of arguments <code class=\"docutils literal\"><span class=\"pre\">args</span> <span class=\"pre\">=</span> <span class=\"pre\">()</span></code>.</p>\n</div>\n", 
+  "link": "https://docs.getsentry.com/hosted/clients/python/integrations/pyramid/", 
+  "id": "python-pyramid", 
+  "name": "Pyramid"
+}
diff --git a/tests/fixtures/integration-docs/python-rq.json b/tests/fixtures/integration-docs/python-rq.json
new file mode 100644
index 0000000000..7cf16559bc
--- /dev/null
+++ b/tests/fixtures/integration-docs/python-rq.json
@@ -0,0 +1,6 @@
+{
+  "html": "<div class=\"section\" id=\"installation\">\n<h2>Installation</h2>\n<p>If you haven&#8217;t already, start by downloading Raven. The easiest way is\nwith <em>pip</em>:</p>\n<div class=\"highlight-python\"><div class=\"highlight\" style=\"background: #ffffff\"><pre style=\"line-height: 125%\"><span></span>pip install raven --upgrade\n</pre></div>\n</div>\n</div>\n\n\n<div class=\"section\" id=\"usage\">\n<h2>Usage</h2>\n<p>RQ natively supports binding with Sentry by passing your <code class=\"docutils literal\"><span class=\"pre\">SENTRY_DSN</span></code> through <code class=\"docutils literal\"><span class=\"pre\">rqworker</span></code>:</p>\n<div class=\"highlight-python\"><div class=\"highlight\" style=\"background: #ffffff\"><pre style=\"line-height: 125%\"><span></span>$ rqworker --sentry-dsn=&quot;___DSN___&quot;\n</pre></div>\n</div>\n</div>\n\n\n<div class=\"section\" id=\"extended-setup\">\n<h2>Extended Setup</h2>\n<p>If you want to pass additional information, such as <code class=\"docutils literal\"><span class=\"pre\">release</span></code>, you&#8217;ll need to bind your\nown instance of the Sentry <code class=\"docutils literal\"><span class=\"pre\">Client</span></code>:</p>\n<div class=\"highlight-python\"><div class=\"highlight\" style=\"background: #ffffff\"><pre style=\"line-height: 125%\"><span></span><span style=\"color: #2eb0f7\">from</span> <span style=\"color: #111111\">raven</span> <span style=\"color: #2eb0f7\">import</span> <span style=\"color: #111111\">Client</span>\n<span style=\"color: #2eb0f7\">from</span> <span style=\"color: #111111\">raven.transport.http</span> <span style=\"color: #2eb0f7\">import</span> <span style=\"color: #111111\">HTTPTransport</span>\n<span style=\"color: #2eb0f7\">from</span> <span style=\"color: #111111\">rq.contrib.sentry</span> <span style=\"color: #2eb0f7\">import</span> <span style=\"color: #111111\">register_sentry</span>\n\n<span style=\"color: #111111\">client</span> <span style=\"color: #4b4f5c\">=</span> <span style=\"color: #111111\">Client(</span><span style=\"color: #e8535a\">&#39;___DSN___&#39;</span><span style=\"color: #111111\">,</span> <span style=\"color: #111111\">transport</span><span style=\"color: #4b4f5c\">=</span><span style=\"color: #111111\">HTTPTransport)</span>\n<span style=\"color: #111111\">register_sentry(client,</span> <span style=\"color: #111111\">worker)</span>\n</pre></div>\n</div>\n<p>Please see <code class=\"docutils literal\"><span class=\"pre\">rq</span></code>&#8216;s documentation for more information:\n<a class=\"reference external\" href=\"http://python-rq.org/patterns/sentry/\">http://python-rq.org/patterns/sentry/</a></p>\n</div>\n", 
+  "link": "https://docs.getsentry.com/hosted/clients/python/integrations/rq/", 
+  "id": "python-rq", 
+  "name": "RQ"
+}
diff --git a/tests/fixtures/integration-docs/python-tornado.json b/tests/fixtures/integration-docs/python-tornado.json
new file mode 100644
index 0000000000..0370c4ffb1
--- /dev/null
+++ b/tests/fixtures/integration-docs/python-tornado.json
@@ -0,0 +1,6 @@
+{
+  "html": "<div class=\"section\" id=\"installation\">\n<h2>Installation</h2>\n<p>If you haven&#8217;t already, start by downloading Raven. The easiest way is\nwith <em>pip</em>:</p>\n<div class=\"highlight-python\"><div class=\"highlight\" style=\"background: #ffffff\"><pre style=\"line-height: 125%\"><span></span>pip install raven --upgrade\n</pre></div>\n</div>\n</div>\n\n\n<div class=\"section\" id=\"setup\">\n<h2>Setup</h2>\n<p>The first thing you&#8217;ll need to do is to initialize sentry client under\nyour application</p>\n<div class=\"highlight-python\"><div class=\"highlight\" style=\"background: #ffffff\"><pre style=\"line-height: 125%\"><span></span><span style=\"color: #2eb0f7\">import</span> <span style=\"color: #111111\">tornado.web</span>\n<span style=\"color: #2eb0f7\">from</span> <span style=\"color: #111111\">raven.contrib.tornado</span> <span style=\"color: #2eb0f7\">import</span> <span style=\"color: #111111\">AsyncSentryClient</span>\n\n<span style=\"color: #2eb0f7\">class</span> <span style=\"color: #111111\">MainHandler(tornado</span><span style=\"color: #4b4f5c\">.</span><span style=\"color: #111111\">web</span><span style=\"color: #4b4f5c\">.</span><span style=\"color: #111111\">RequestHandler):</span>\n    <span style=\"color: #2eb0f7\">def</span> <span style=\"color: #111111\">get(</span><span style=\"color: #45c2c9\">self</span><span style=\"color: #111111\">):</span>\n        <span style=\"color: #45c2c9\">self</span><span style=\"color: #4b4f5c\">.</span><span style=\"color: #111111\">write(</span><span style=\"color: #e8535a\">&quot;Hello, world&quot;</span><span style=\"color: #111111\">)</span>\n\n<span style=\"color: #111111\">application</span> <span style=\"color: #4b4f5c\">=</span> <span style=\"color: #111111\">tornado</span><span style=\"color: #4b4f5c\">.</span><span style=\"color: #111111\">web</span><span style=\"color: #4b4f5c\">.</span><span style=\"color: #111111\">Application([</span>\n    <span style=\"color: #111111\">(</span><span style=\"color: #e8535a\">r&quot;/&quot;</span><span style=\"color: #111111\">,</span> <span style=\"color: #111111\">MainHandler),</span>\n<span style=\"color: #111111\">])</span>\n<span style=\"color: #111111\">application</span><span style=\"color: #4b4f5c\">.</span><span style=\"color: #111111\">sentry_client</span> <span style=\"color: #4b4f5c\">=</span> <span style=\"color: #111111\">AsyncSentryClient(</span>\n    <span style=\"color: #e8535a\">&#39;___DSN___&#39;</span>\n<span style=\"color: #111111\">)</span>\n</pre></div>\n</div>\n</div>\n\n\n<div class=\"section\" id=\"usage\">\n<h2>Usage</h2>\n<p>Once the sentry client is attached to the application, request handlers\ncan automatically capture uncaught exceptions by inheriting the <cite>SentryMixin</cite> class.</p>\n<div class=\"highlight-python\"><div class=\"highlight\" style=\"background: #ffffff\"><pre style=\"line-height: 125%\"><span></span><span style=\"color: #2eb0f7\">import</span> <span style=\"color: #111111\">tornado.web</span>\n<span style=\"color: #2eb0f7\">from</span> <span style=\"color: #111111\">raven.contrib.tornado</span> <span style=\"color: #2eb0f7\">import</span> <span style=\"color: #111111\">SentryMixin</span>\n\n<span style=\"color: #2eb0f7\">class</span> <span style=\"color: #111111\">UncaughtExceptionExampleHandler(</span>\n        <span style=\"color: #111111\">SentryMixin,</span> <span style=\"color: #111111\">tornado</span><span style=\"color: #4b4f5c\">.</span><span style=\"color: #111111\">web</span><span style=\"color: #4b4f5c\">.</span><span style=\"color: #111111\">RequestHandler):</span>\n    <span style=\"color: #2eb0f7\">def</span> <span style=\"color: #111111\">get(</span><span style=\"color: #45c2c9\">self</span><span style=\"color: #111111\">):</span>\n        <span style=\"color: #45c2c9\">1</span><span style=\"color: #4b4f5c\">/</span><span style=\"color: #45c2c9\">0</span>\n</pre></div>\n</div>\n<p>You can also send events manually using the shortcuts defined in <cite>SentryMixin</cite>.\nThe shortcuts can be used for both asynchronous and synchronous usage.</p>\n<div class=\"section\" id=\"asynchronous\">\n<h3>Asynchronous</h3>\n<div class=\"highlight-python\"><div class=\"highlight\" style=\"background: #ffffff\"><pre style=\"line-height: 125%\"><span></span><span style=\"color: #2eb0f7\">import</span> <span style=\"color: #111111\">tornado.web</span>\n<span style=\"color: #2eb0f7\">import</span> <span style=\"color: #111111\">tornado.gen</span>\n<span style=\"color: #2eb0f7\">from</span> <span style=\"color: #111111\">raven.contrib.tornado</span> <span style=\"color: #2eb0f7\">import</span> <span style=\"color: #111111\">SentryMixin</span>\n\n<span style=\"color: #2eb0f7\">class</span> <span style=\"color: #111111\">AsyncMessageHandler(SentryMixin,</span> <span style=\"color: #111111\">tornado</span><span style=\"color: #4b4f5c\">.</span><span style=\"color: #111111\">web</span><span style=\"color: #4b4f5c\">.</span><span style=\"color: #111111\">RequestHandler):</span>\n    <span style=\"color: #696D80\">@tornado.web.asynchronous</span>\n    <span style=\"color: #696D80\">@tornado.gen.engine</span>\n    <span style=\"color: #2eb0f7\">def</span> <span style=\"color: #111111\">get(</span><span style=\"color: #45c2c9\">self</span><span style=\"color: #111111\">):</span>\n        <span style=\"color: #45c2c9\">self</span><span style=\"color: #4b4f5c\">.</span><span style=\"color: #111111\">write(</span><span style=\"color: #e8535a\">&quot;You requested the main page&quot;</span><span style=\"color: #111111\">)</span>\n        <span style=\"color: #2eb0f7\">yield</span> <span style=\"color: #111111\">tornado</span><span style=\"color: #4b4f5c\">.</span><span style=\"color: #111111\">gen</span><span style=\"color: #4b4f5c\">.</span><span style=\"color: #111111\">Task(</span>\n            <span style=\"color: #45c2c9\">self</span><span style=\"color: #4b4f5c\">.</span><span style=\"color: #111111\">captureMessage,</span> <span style=\"color: #e8535a\">&quot;Request for main page served&quot;</span>\n        <span style=\"color: #111111\">)</span>\n        <span style=\"color: #45c2c9\">self</span><span style=\"color: #4b4f5c\">.</span><span style=\"color: #111111\">finish()</span>\n\n<span style=\"color: #2eb0f7\">class</span> <span style=\"color: #111111\">AsyncExceptionHandler(SentryMixin,</span> <span style=\"color: #111111\">tornado</span><span style=\"color: #4b4f5c\">.</span><span style=\"color: #111111\">web</span><span style=\"color: #4b4f5c\">.</span><span style=\"color: #111111\">RequestHandler):</span>\n    <span style=\"color: #696D80\">@tornado.web.asynchronous</span>\n    <span style=\"color: #696D80\">@tornado.gen.engine</span>\n    <span style=\"color: #2eb0f7\">def</span> <span style=\"color: #111111\">get(</span><span style=\"color: #45c2c9\">self</span><span style=\"color: #111111\">):</span>\n        <span style=\"color: #2eb0f7\">try</span><span style=\"color: #111111\">:</span>\n            <span style=\"color: #2eb0f7\">raise</span> <span style=\"color: #e8535a\">ValueError</span><span style=\"color: #111111\">()</span>\n        <span style=\"color: #2eb0f7\">except</span> <span style=\"color: #e8535a\">Exception</span> <span style=\"color: #2eb0f7\">as</span> <span style=\"color: #111111\">e:</span>\n            <span style=\"color: #111111\">response</span> <span style=\"color: #4b4f5c\">=</span> <span style=\"color: #2eb0f7\">yield</span> <span style=\"color: #111111\">tornado</span><span style=\"color: #4b4f5c\">.</span><span style=\"color: #111111\">gen</span><span style=\"color: #4b4f5c\">.</span><span style=\"color: #111111\">Task(</span>\n                <span style=\"color: #45c2c9\">self</span><span style=\"color: #4b4f5c\">.</span><span style=\"color: #111111\">captureException,</span> <span style=\"color: #111111\">exc_info</span><span style=\"color: #4b4f5c\">=</span><span style=\"color: #45c2c9\">True</span>\n            <span style=\"color: #111111\">)</span>\n        <span style=\"color: #45c2c9\">self</span><span style=\"color: #4b4f5c\">.</span><span style=\"color: #111111\">finish()</span>\n</pre></div>\n</div>\n<div class=\"admonition tip\">\n<p class=\"first admonition-title\">Tip</p>\n<p>The value returned by the yield is a <code class=\"docutils literal\"><span class=\"pre\">HTTPResponse</span></code> object.</p>\n<p>To dynamically use Python if configuration DSN available, change your base handler on fly and make sure all concrete handlers are imported after this.</p>\n<blockquote class=\"last\">\n<div><div class=\"highlight-python\"><div class=\"highlight\" style=\"background: #ffffff\"><pre style=\"line-height: 125%\"><span></span><span style=\"color: #2eb0f7\">from</span> <span style=\"color: #111111\">raven.contrib.tornado</span> <span style=\"color: #2eb0f7\">import</span> <span style=\"color: #111111\">SentryMixin</span>\n<span style=\"color: #111111\">app</span><span style=\"color: #4b4f5c\">.</span><span style=\"color: #111111\">sentry_client</span> <span style=\"color: #4b4f5c\">=</span> <span style=\"color: #111111\">AsyncSentryClient(dsn)</span>\n<span style=\"color: #111111\">BaseHandler</span><span style=\"color: #4b4f5c\">.</span><span style=\"color: #111111\">__bases__</span> <span style=\"color: #4b4f5c\">=</span> <span style=\"color: #111111\">(SentryMixin,</span> <span style=\"color: #111111\">)</span> <span style=\"color: #4b4f5c\">+</span> <span style=\"color: #111111\">BaseHandler</span><span style=\"color: #4b4f5c\">.</span><span style=\"color: #111111\">__bases__</span>\n</pre></div>\n</div>\n</div></blockquote>\n</div>\n</div>\n<div class=\"section\" id=\"synchronous\">\n<h3>Synchronous</h3>\n<div class=\"highlight-python\"><div class=\"highlight\" style=\"background: #ffffff\"><pre style=\"line-height: 125%\"><span></span><span style=\"color: #2eb0f7\">import</span> <span style=\"color: #111111\">tornado.web</span>\n<span style=\"color: #2eb0f7\">from</span> <span style=\"color: #111111\">raven.contrib.tornado</span> <span style=\"color: #2eb0f7\">import</span> <span style=\"color: #111111\">SentryMixin</span>\n\n<span style=\"color: #2eb0f7\">class</span> <span style=\"color: #111111\">AsyncExampleHandler(SentryMixin,</span> <span style=\"color: #111111\">tornado</span><span style=\"color: #4b4f5c\">.</span><span style=\"color: #111111\">web</span><span style=\"color: #4b4f5c\">.</span><span style=\"color: #111111\">RequestHandler):</span>\n    <span style=\"color: #2eb0f7\">def</span> <span style=\"color: #111111\">get(</span><span style=\"color: #45c2c9\">self</span><span style=\"color: #111111\">):</span>\n        <span style=\"color: #45c2c9\">self</span><span style=\"color: #4b4f5c\">.</span><span style=\"color: #111111\">write(</span><span style=\"color: #e8535a\">&quot;You requested the main page&quot;</span><span style=\"color: #111111\">)</span>\n        <span style=\"color: #45c2c9\">self</span><span style=\"color: #4b4f5c\">.</span><span style=\"color: #111111\">captureMessage(</span><span style=\"color: #e8535a\">&quot;Request for main page served&quot;</span><span style=\"color: #111111\">)</span>\n</pre></div>\n</div>\n</div>\n</div>\n", 
+  "link": "https://docs.getsentry.com/hosted/clients/python/integrations/tornado/", 
+  "id": "python-tornado", 
+  "name": "Tornado"
+}
diff --git a/tests/fixtures/integration-docs/python.json b/tests/fixtures/integration-docs/python.json
new file mode 100644
index 0000000000..1322d63444
--- /dev/null
+++ b/tests/fixtures/integration-docs/python.json
@@ -0,0 +1,6 @@
+{
+  "html": "<div class=\"section\" id=\"installation\">\n<h2>Installation</h2>\n<p>If you haven&#8217;t already, start by downloading Raven. The easiest way is\nwith <em>pip</em>:</p>\n<div class=\"highlight-python\"><div class=\"highlight\" style=\"background: #ffffff\"><pre style=\"line-height: 125%\"><span></span>pip install raven --upgrade\n</pre></div>\n</div>\n</div>\n\n\n<div class=\"section\" id=\"capture-an-error\">\n<h2>Capture an Error</h2>\n<p>The most basic use for raven is to record one specific error that occurs:</p>\n<div class=\"highlight-python\"><div class=\"highlight\" style=\"background: #ffffff\"><pre style=\"line-height: 125%\"><span></span><span style=\"color: #2eb0f7\">from</span> <span style=\"color: #111111\">raven</span> <span style=\"color: #2eb0f7\">import</span> <span style=\"color: #111111\">Client</span>\n\n<span style=\"color: #111111\">client</span> <span style=\"color: #4b4f5c\">=</span> <span style=\"color: #111111\">Client(</span><span style=\"color: #e8535a\">&#39;___DSN___&#39;</span><span style=\"color: #111111\">)</span>\n\n<span style=\"color: #2eb0f7\">try</span><span style=\"color: #111111\">:</span>\n    <span style=\"color: #45c2c9\">1</span> <span style=\"color: #4b4f5c\">/</span> <span style=\"color: #45c2c9\">0</span>\n<span style=\"color: #2eb0f7\">except</span> <span style=\"color: #e8535a\">ZeroDivisionError</span><span style=\"color: #111111\">:</span>\n    <span style=\"color: #111111\">client</span><span style=\"color: #4b4f5c\">.</span><span style=\"color: #111111\">captureException()</span>\n</pre></div>\n</div>\n</div>\n\n\n<div class=\"section\" id=\"reporting-an-event\">\n<h2>Reporting an Event</h2>\n<p>To report an arbitrary event you can use the\n<a class=\"reference internal\" href=\"https://docs.getsentry.com/hosted/clients/python/api/#raven.Client.capture\" title=\"raven.Client.capture\"><code class=\"xref py py-meth docutils literal\"><span class=\"pre\">capture()</span></code></a> method.  This is the most low-level\nmethod available.  In most cases you would want to use the\n<a class=\"reference internal\" href=\"https://docs.getsentry.com/hosted/clients/python/api/#raven.Client.captureMessage\" title=\"raven.Client.captureMessage\"><code class=\"xref py py-meth docutils literal\"><span class=\"pre\">captureMessage()</span></code></a> method instead however which\ndirectly reports a message:</p>\n<div class=\"highlight-python\"><div class=\"highlight\" style=\"background: #ffffff\"><pre style=\"line-height: 125%\"><span></span><span style=\"color: #111111\">client</span><span style=\"color: #4b4f5c\">.</span><span style=\"color: #111111\">captureMessage(</span><span style=\"color: #e8535a\">&#39;Something went fundamentally wrong&#39;</span><span style=\"color: #111111\">)</span>\n</pre></div>\n</div>\n</div>\n", 
+  "link": "https://docs.getsentry.com/hosted/clients/python/", 
+  "id": "python", 
+  "name": "Python"
+}
diff --git a/tests/fixtures/integration-docs/ruby-rack.json b/tests/fixtures/integration-docs/ruby-rack.json
new file mode 100644
index 0000000000..dd464c1327
--- /dev/null
+++ b/tests/fixtures/integration-docs/ruby-rack.json
@@ -0,0 +1,6 @@
+{
+  "html": "<div class=\"section\" id=\"rack-sinatra-etc\">\n<h2>Rack (Sinatra etc.)</h2>\n<div class=\"section\" id=\"installation\">\n<h3>Installation</h3>\n<p>Install the SDK via Rubygems by adding it to your <code class=\"docutils literal\"><span class=\"pre\">Gemfile</span></code>:</p>\n<div class=\"highlight-ruby\"><div class=\"highlight\" style=\"background: #ffffff\"><pre style=\"line-height: 125%\"><span></span><span style=\"color: #111111\">gem</span> <span style=\"color: #e8535a\">&quot;sentry-raven&quot;</span>\n</pre></div>\n</div>\n</div>\n<div class=\"section\" id=\"configuration\">\n<h3>Configuration</h3>\n<p>Add <code class=\"docutils literal\"><span class=\"pre\">use</span> <span class=\"pre\">Raven::Rack</span></code> to your <code class=\"docutils literal\"><span class=\"pre\">config.ru</span></code> or other rackup file (this is\nautomatically inserted in Rails):</p>\n<div class=\"highlight-ruby\"><div class=\"highlight\" style=\"background: #ffffff\"><pre style=\"line-height: 125%\"><span></span><span style=\"color: #2eb0f7\">require</span> <span style=\"color: #e8535a\">&#39;raven&#39;</span>\n\n<span style=\"color: #111111\">Raven</span><span style=\"color: #4b4f5c\">.</span><span style=\"color: #111111\">configure</span> <span style=\"color: #2eb0f7\">do</span> <span style=\"color: #4b4f5c\">|</span><span style=\"color: #111111\">config</span><span style=\"color: #4b4f5c\">|</span>\n  <span style=\"color: #111111\">config</span><span style=\"color: #4b4f5c\">.</span><span style=\"color: #111111\">dsn</span> <span style=\"color: #4b4f5c\">=</span> <span style=\"color: #e8535a\">&#39;___DSN___&#39;</span>\n<span style=\"color: #2eb0f7\">end</span>\n\n<span style=\"color: #111111\">use</span> <span style=\"color: #111111\">Raven</span><span style=\"color: #4b4f5c\">::</span><span style=\"color: #111111\">Rack</span>\n</pre></div>\n</div>\n</div>\n</div>\n", 
+  "link": "https://docs.getsentry.com/hosted/clients/ruby/integrations/rack/", 
+  "id": "ruby-rack", 
+  "name": "Rack"
+}
diff --git a/tests/fixtures/integration-docs/ruby-rails.json b/tests/fixtures/integration-docs/ruby-rails.json
new file mode 100644
index 0000000000..db263649fc
--- /dev/null
+++ b/tests/fixtures/integration-docs/ruby-rails.json
@@ -0,0 +1,6 @@
+{
+  "html": "<div class=\"section\" id=\"ruby-on-rails\">\n<h2>Ruby on Rails</h2>\n<p>In Rails, all uncaught exceptions will be automatically reported.</p>\n<p>We support Rails 3 and newer.</p>\n<div class=\"section\" id=\"installation\">\n<h3>Installation</h3>\n<p>Install the SDK via Rubygems by adding it to your <code class=\"docutils literal\"><span class=\"pre\">Gemfile</span></code>:</p>\n<div class=\"highlight-ruby\"><div class=\"highlight\" style=\"background: #ffffff\"><pre style=\"line-height: 125%\"><span></span><span style=\"color: #111111\">gem</span> <span style=\"color: #e8535a\">&quot;sentry-raven&quot;</span>\n</pre></div>\n</div>\n</div>\n<div class=\"section\" id=\"configuration\">\n<h3>Configuration</h3>\n<p>Open up <code class=\"docutils literal\"><span class=\"pre\">config/application.rb</span></code> and configure the DSN, and any other <a class=\"reference internal\" href=\"https://docs.getsentry.com/hosted/clients/ruby/config/\"><em>settings</em></a>\nyou need:</p>\n<div class=\"highlight-ruby\"><div class=\"highlight\" style=\"background: #ffffff\"><pre style=\"line-height: 125%\"><span></span><span style=\"color: #111111\">Raven</span><span style=\"color: #4b4f5c\">.</span><span style=\"color: #111111\">configure</span> <span style=\"color: #2eb0f7\">do</span> <span style=\"color: #4b4f5c\">|</span><span style=\"color: #111111\">config</span><span style=\"color: #4b4f5c\">|</span>\n  <span style=\"color: #111111\">config</span><span style=\"color: #4b4f5c\">.</span><span style=\"color: #111111\">dsn</span> <span style=\"color: #4b4f5c\">=</span> <span style=\"color: #e8535a\">&#39;___DSN___&#39;</span>\n<span style=\"color: #2eb0f7\">end</span>\n</pre></div>\n</div>\n<p>If you have added items to <a class=\"reference external\" href=\"http://guides.rubyonrails.org/action_controller_overview.html#parameters-filtering\">Rails&#8217; log filtering</a>,\nyou can also make sure that those items are not sent to Sentry:</p>\n<div class=\"highlight-ruby\"><div class=\"highlight\" style=\"background: #ffffff\"><pre style=\"line-height: 125%\"><span></span><span style=\"color: #34c08b; font-style: italic\"># in your application.rb:</span>\n<span style=\"color: #111111\">config</span><span style=\"color: #4b4f5c\">.</span><span style=\"color: #111111\">filter_parameters</span> <span style=\"color: #4b4f5c\">&lt;&lt;</span> <span style=\"color: #e8535a\">:password</span>\n\n<span style=\"color: #34c08b; font-style: italic\"># in an initializer, like sentry.rb</span>\n<span style=\"color: #111111\">Raven</span><span style=\"color: #4b4f5c\">.</span><span style=\"color: #111111\">configure</span> <span style=\"color: #2eb0f7\">do</span> <span style=\"color: #4b4f5c\">|</span><span style=\"color: #111111\">config</span><span style=\"color: #4b4f5c\">|</span>\n  <span style=\"color: #111111\">config</span><span style=\"color: #4b4f5c\">.</span><span style=\"color: #111111\">sanitize_fields</span> <span style=\"color: #4b4f5c\">=</span> <span style=\"color: #111111\">Rails</span><span style=\"color: #4b4f5c\">.</span><span style=\"color: #111111\">application</span><span style=\"color: #4b4f5c\">.</span><span style=\"color: #111111\">config</span><span style=\"color: #4b4f5c\">.</span><span style=\"color: #111111\">filter_parameters</span><span style=\"color: #4b4f5c\">.</span><span style=\"color: #111111\">map(</span><span style=\"color: #4b4f5c\">&amp;</span><span style=\"color: #e8535a\">:to_s</span><span style=\"color: #111111\">)</span>\n<span style=\"color: #2eb0f7\">end</span>\n</pre></div>\n</div>\n</div>\n<div class=\"section\" id=\"params-and-sessions\">\n<h3>Params and sessions</h3>\n<div class=\"highlight-ruby\"><div class=\"highlight\" style=\"background: #ffffff\"><pre style=\"line-height: 125%\"><span></span><span style=\"color: #2eb0f7\">class</span> <span style=\"color: #111111\">ApplicationController</span> <span style=\"color: #4b4f5c\">&lt;</span> <span style=\"color: #111111\">ActionController</span><span style=\"color: #4b4f5c\">::</span><span style=\"color: #111111\">Base</span>\n  <span style=\"color: #111111\">before_action</span> <span style=\"color: #e8535a\">:set_raven_context</span>\n\n  <span style=\"color: #2eb0f7\">private</span>\n\n  <span style=\"color: #2eb0f7\">def</span> <span style=\"color: #111111\">set_raven_context</span>\n    <span style=\"color: #111111\">Raven</span><span style=\"color: #4b4f5c\">.</span><span style=\"color: #111111\">user_context(</span><span style=\"color: #2eb0f7\">id</span><span style=\"color: #111111\">:</span> <span style=\"color: #111111\">session</span><span style=\"color: #4b4f5c\">[</span><span style=\"color: #e8535a\">:current_user_id</span><span style=\"color: #4b4f5c\">]</span><span style=\"color: #111111\">)</span> <span style=\"color: #34c08b; font-style: italic\"># or anything else in session</span>\n    <span style=\"color: #111111\">Raven</span><span style=\"color: #4b4f5c\">.</span><span style=\"color: #111111\">extra_context(</span><span style=\"color: #e8535a\">params</span><span style=\"color: #111111\">:</span> <span style=\"color: #111111\">params</span><span style=\"color: #4b4f5c\">.</span><span style=\"color: #111111\">to_unsafe_h,</span> <span style=\"color: #e8535a\">url</span><span style=\"color: #111111\">:</span> <span style=\"color: #111111\">request</span><span style=\"color: #4b4f5c\">.</span><span style=\"color: #111111\">url)</span>\n  <span style=\"color: #2eb0f7\">end</span>\n<span style=\"color: #2eb0f7\">end</span>\n</pre></div>\n</div>\n</div>\n<div class=\"section\" id=\"authlogic\">\n<h3>Authlogic</h3>\n<p>When using Authlogic for authentication, you can provide user context by\nbinding to session <code class=\"docutils literal\"><span class=\"pre\">after_persisting</span></code> and <code class=\"docutils literal\"><span class=\"pre\">after_destroy</span></code> events in\n<code class=\"docutils literal\"><span class=\"pre\">user_session.rb</span></code>:</p>\n<div class=\"highlight-ruby\"><div class=\"highlight\" style=\"background: #ffffff\"><pre style=\"line-height: 125%\"><span></span><span style=\"color: #2eb0f7\">class</span> <span style=\"color: #111111\">UserSession</span> <span style=\"color: #4b4f5c\">&lt;</span> <span style=\"color: #111111\">Authlogic</span><span style=\"color: #4b4f5c\">::</span><span style=\"color: #111111\">Session</span><span style=\"color: #4b4f5c\">::</span><span style=\"color: #111111\">Base</span>\n  <span style=\"color: #34c08b; font-style: italic\"># events binding</span>\n  <span style=\"color: #111111\">after_persisting</span> <span style=\"color: #e8535a\">:raven_set_user_context</span>\n  <span style=\"color: #111111\">after_destroy</span> <span style=\"color: #e8535a\">:raven_clear_user_context</span>\n\n  <span style=\"color: #2eb0f7\">def</span> <span style=\"color: #111111\">raven_set_user_context</span>\n    <span style=\"color: #111111\">Raven</span><span style=\"color: #4b4f5c\">.</span><span style=\"color: #111111\">user_context({</span>\n      <span style=\"color: #e8535a\">&#39;id&#39;</span> <span style=\"color: #4b4f5c\">=&gt;</span> <span style=\"color: #2eb0f7\">self</span><span style=\"color: #4b4f5c\">.</span><span style=\"color: #111111\">user</span><span style=\"color: #4b4f5c\">.</span><span style=\"color: #111111\">id,</span>\n      <span style=\"color: #e8535a\">&#39;email&#39;</span> <span style=\"color: #4b4f5c\">=&gt;</span> <span style=\"color: #2eb0f7\">self</span><span style=\"color: #4b4f5c\">.</span><span style=\"color: #111111\">user</span><span style=\"color: #4b4f5c\">.</span><span style=\"color: #111111\">email,</span>\n      <span style=\"color: #e8535a\">&#39;username&#39;</span> <span style=\"color: #4b4f5c\">=&gt;</span> <span style=\"color: #2eb0f7\">self</span><span style=\"color: #4b4f5c\">.</span><span style=\"color: #111111\">user</span><span style=\"color: #4b4f5c\">.</span><span style=\"color: #111111\">username</span>\n    <span style=\"color: #111111\">})</span>\n  <span style=\"color: #2eb0f7\">end</span>\n\n  <span style=\"color: #2eb0f7\">def</span> <span style=\"color: #111111\">raven_clear_user_context</span>\n    <span style=\"color: #111111\">Raven</span><span style=\"color: #4b4f5c\">.</span><span style=\"color: #111111\">user_context({})</span>\n  <span style=\"color: #2eb0f7\">end</span>\n<span style=\"color: #2eb0f7\">end</span>\n</pre></div>\n</div>\n</div>\n</div>\n", 
+  "link": "https://docs.getsentry.com/hosted/clients/ruby/integrations/rails/", 
+  "id": "ruby-rails", 
+  "name": "Rails"
+}
diff --git a/tests/fixtures/integration-docs/ruby.json b/tests/fixtures/integration-docs/ruby.json
new file mode 100644
index 0000000000..7bf49acdb6
--- /dev/null
+++ b/tests/fixtures/integration-docs/ruby.json
@@ -0,0 +1,6 @@
+{
+  "html": "<div class=\"section\" id=\"installation\">\n<h2>Installation</h2>\n<p>Raven Ruby comes as a gem and is straightforward to install.  If you are\nusing Bundler just add this to your <code class=\"docutils literal\"><span class=\"pre\">Gemfile</span></code>:</p>\n<div class=\"highlight-ruby\"><div class=\"highlight\" style=\"background: #ffffff\"><pre style=\"line-height: 125%\"><span></span><span style=\"color: #111111\">gem</span> <span style=\"color: #e8535a\">&quot;sentry-raven&quot;</span>\n</pre></div>\n</div>\n<p>For other means of installation see <a class=\"reference internal\" href=\"https://docs.getsentry.com/hosted/clients/ruby/install/\"><em>Installation</em></a>.</p>\n</div>\n\n\n<div class=\"section\" id=\"configuration\">\n<h2>Configuration</h2>\n<p>To use Raven Ruby all you need is your DSN.  Like most Sentry libraries it\nwill honor the <code class=\"docutils literal\"><span class=\"pre\">SENTRY_DSN</span></code> environment variable.  You can find it on\nthe project settings page under API Keys.  You can either export it as\nenvironment variable or manually configure it with <code class=\"docutils literal\"><span class=\"pre\">Raven.configure</span></code>:</p>\n<div class=\"highlight-ruby\"><div class=\"highlight\" style=\"background: #ffffff\"><pre style=\"line-height: 125%\"><span></span><span style=\"color: #111111\">Raven</span><span style=\"color: #4b4f5c\">.</span><span style=\"color: #111111\">configure</span> <span style=\"color: #2eb0f7\">do</span> <span style=\"color: #4b4f5c\">|</span><span style=\"color: #111111\">config</span><span style=\"color: #4b4f5c\">|</span>\n  <span style=\"color: #111111\">config</span><span style=\"color: #4b4f5c\">.</span><span style=\"color: #111111\">dsn</span> <span style=\"color: #4b4f5c\">=</span> <span style=\"color: #e8535a\">&#39;___DSN___&#39;</span>\n<span style=\"color: #2eb0f7\">end</span>\n</pre></div>\n</div>\n</div>\n\n\n<div class=\"section\" id=\"reporting-failures\">\n<h2>Reporting Failures</h2>\n<p>If you use Rails, Rake, Sidekiq, etc, you&#8217;re already done - no more\nconfiguration required! Check <a class=\"reference internal\" href=\"https://docs.getsentry.com/hosted/clients/ruby/integrations/\"><em>Integrations</em></a> for more details on\nother gems Sentry integrates with automatically.</p>\n<p>Rack requires a little more setup: <a class=\"reference internal\" href=\"https://docs.getsentry.com/hosted/clients/ruby/integrations/rack/\"><em>Rack (Sinatra etc.)</em></a></p>\n<p>Otherwise, Raven supports two methods of capturing exceptions:</p>\n<div class=\"highlight-ruby\"><div class=\"highlight\" style=\"background: #ffffff\"><pre style=\"line-height: 125%\"><span></span><span style=\"color: #111111\">Raven</span><span style=\"color: #4b4f5c\">.</span><span style=\"color: #111111\">capture</span> <span style=\"color: #2eb0f7\">do</span>\n  <span style=\"color: #34c08b; font-style: italic\"># capture any exceptions which happen during execution of this block</span>\n  <span style=\"color: #45c2c9\">1</span> <span style=\"color: #4b4f5c\">/</span> <span style=\"color: #45c2c9\">0</span>\n<span style=\"color: #2eb0f7\">end</span>\n\n<span style=\"color: #2eb0f7\">begin</span>\n  <span style=\"color: #45c2c9\">1</span> <span style=\"color: #4b4f5c\">/</span> <span style=\"color: #45c2c9\">0</span>\n<span style=\"color: #2eb0f7\">rescue</span> <span style=\"color: #111111\">ZeroDivisionError</span> <span style=\"color: #4b4f5c\">=&gt;</span> <span style=\"color: #111111\">exception</span>\n  <span style=\"color: #111111\">Raven</span><span style=\"color: #4b4f5c\">.</span><span style=\"color: #111111\">capture_exception(exception)</span>\n<span style=\"color: #2eb0f7\">end</span>\n</pre></div>\n</div>\n</div>\n", 
+  "link": "https://docs.getsentry.com/hosted/clients/ruby/", 
+  "id": "ruby", 
+  "name": "Ruby"
+}
diff --git a/tests/fixtures/integration-docs/swift.json b/tests/fixtures/integration-docs/swift.json
new file mode 100644
index 0000000000..a52030e716
--- /dev/null
+++ b/tests/fixtures/integration-docs/swift.json
@@ -0,0 +1,6 @@
+{
+  "html": "<div class=\"section\" id=\"installation\">\n<h2>Installation</h2>\n<p>The SDK can be installed using <a class=\"reference external\" href=\"http://cocoapods.org\">CocoaPods</a> or <a class=\"reference external\" href=\"https://github.com/Carthage/Carthage\">Carthage</a>.\nThis is the recommended client for both Swift and Objective-C.</p>\n<p>We recommend installing Sentry with CocoaPods.</p>\n<p>To integrate Sentry into your Xcode project using CocoaPods, specify\nit in your <cite>Podfile</cite>:</p>\n<div class=\"highlight-ruby\"><div class=\"highlight\" style=\"background: #ffffff\"><pre style=\"line-height: 125%\"><span></span><span style=\"color: #111111\">source</span> <span style=\"color: #e8535a\">&#39;https://github.com/CocoaPods/Specs.git&#39;</span>\n<span style=\"color: #111111\">platform</span> <span style=\"color: #e8535a\">:ios</span><span style=\"color: #111111\">,</span> <span style=\"color: #e8535a\">&#39;8.0&#39;</span>\n<span style=\"color: #111111\">use_frameworks!</span>\n\n<span style=\"color: #111111\">target</span> <span style=\"color: #e8535a\">&#39;YourApp&#39;</span> <span style=\"color: #2eb0f7\">do</span>\n    <span style=\"color: #111111\">pod</span> <span style=\"color: #e8535a\">&#39;Sentry&#39;</span><span style=\"color: #111111\">,</span> <span style=\"color: #e8535a\">:git</span> <span style=\"color: #4b4f5c\">=&gt;</span> <span style=\"color: #e8535a\">&#39;https://github.com/getsentry/sentry-cocoa.git&#39;</span><span style=\"color: #111111\">,</span> <span style=\"color: #e8535a\">:tag</span> <span style=\"color: #4b4f5c\">=&gt;</span> <span style=\"color: #e8535a\">&#39;3.9.1&#39;</span>\n<span style=\"color: #2eb0f7\">end</span>\n</pre></div>\n</div>\n<p>If you want to use Sentry without KSCrash you can just remove it from the subspecs.\nKeep in mind that if you are not using KSCrash no events will be reported whenever you app crashes.\nAlso some function might do nothing if they are related to KSCrash.</p>\n<p>Afterwards run <code class=\"docutils literal\"><span class=\"pre\">pod</span> <span class=\"pre\">install</span></code>.  In case you encounter problems with\ndependencies and you are on a newer CocoaPods you might have to run\n<code class=\"docutils literal\"><span class=\"pre\">pod</span> <span class=\"pre\">repo</span> <span class=\"pre\">update</span></code> first.</p>\n<p>To integrate Sentry into your Xcode project using Carthage, specify\nit in your <cite>Cartfile</cite>:</p>\n<div class=\"highlight-ruby\"><div class=\"highlight\" style=\"background: #ffffff\"><pre style=\"line-height: 125%\"><span></span><span style=\"color: #111111\">github</span> <span style=\"color: #e8535a\">&quot;getsentry/sentry-cocoa&quot;</span> <span style=\"color: #e8535a\">&quot;3.9.1&quot;</span>\n</pre></div>\n</div>\n<p>Run <code class=\"docutils literal\"><span class=\"pre\">carthage</span> <span class=\"pre\">update</span></code> to download the framework and drag the built\n<cite>Sentry.framework</cite> into your Xcode project.</p>\n<p>Note that for Carthage we had to bundle KSCrash into the <code class=\"docutils literal\"><span class=\"pre\">Sentry.framework</span></code> to make everything work.  So you will always get KSCrash with Sentry when using Carthage.</p>\n<p>We also provide a prebuilt version for every release which can be downloaded at <a class=\"reference external\" href=\"https://github.com/getsentry/sentry-cocoa/releases\">releases on github</a>.</p>\n</div>\n\n\n<div class=\"section\" id=\"configuration\">\n<h2>Configuration</h2>\n<p>To use the client, change your AppDelegate&#8217;s <cite>application</cite> method to\ninstantiate the Sentry client:</p>\n<div class=\"highlight-swift\"><div class=\"highlight\" style=\"background: #ffffff\"><pre style=\"line-height: 125%\"><span></span><span style=\"color: #2eb0f7\">import</span> <span style=\"color: #111111\">Sentry</span>\n\n<span style=\"color: #2eb0f7\">func</span> <span style=\"color: #111111\">application(application:</span> <span style=\"color: #45c2c9\">UIApplication</span><span style=\"color: #111111\">,</span>\n    <span style=\"color: #111111\">didFinishLaunchingWithOptions</span> <span style=\"color: #111111\">launchOptions:</span> <span style=\"color: #111111\">[</span><span style=\"color: #45c2c9\">NSObject</span><span style=\"color: #111111\">:</span> <span style=\"color: #2eb0f7\">AnyObject</span><span style=\"color: #111111\">]?)</span> <span style=\"color: #111111\">-&gt;</span> <span style=\"color: #2eb0f7\">Bool</span> <span style=\"color: #111111\">{</span>\n\n    <span style=\"color: #34c08b; font-style: italic\">// Create a Sentry client and start crash handler</span>\n    <span style=\"color: #2eb0f7\">do</span> <span style=\"color: #111111\">{</span>\n        <span style=\"color: #111111\">Client.shared</span> <span style=\"color: #111111\">=</span> <span style=\"color: #2eb0f7\">try</span> <span style=\"color: #111111\">Client(dsn:</span> <span style=\"color: #e8535a\">&quot;___DSN___&quot;</span><span style=\"color: #111111\">)</span>\n        <span style=\"color: #2eb0f7\">try</span> <span style=\"color: #111111\">Client.shared?.startCrashHandler()</span>\n    <span style=\"color: #111111\">}</span> <span style=\"color: #2eb0f7\">catch</span> <span style=\"color: #2eb0f7\">let</span> <span style=\"color: #111111\">error</span> <span style=\"color: #111111\">{</span>\n        <span style=\"color: #45c2c9\">print</span><span style=\"color: #111111\">(</span><span style=\"color: #e8535a\">&quot;\\(</span><span style=\"color: #111111\">error</span><span style=\"color: #e8535a\">)&quot;</span><span style=\"color: #111111\">)</span>\n        <span style=\"color: #34c08b; font-style: italic\">// Wrong DSN or KSCrash not installed</span>\n    <span style=\"color: #111111\">}</span>\n\n    <span style=\"color: #2eb0f7\">return</span> <span style=\"color: #2eb0f7\">true</span>\n<span style=\"color: #111111\">}</span>\n</pre></div>\n</div>\n<p>If you prefer to use Objective-C you can do so like this:</p>\n<div class=\"highlight-objc\"><div class=\"highlight\" style=\"background: #ffffff\"><pre style=\"line-height: 125%\"><span></span><span style=\"color: #111111\">@import</span> <span style=\"color: #111111\">Sentry;</span>\n\n<span style=\"color: #45c2c9\">NSError</span> <span style=\"color: #4b4f5c\">*</span><span style=\"color: #111111\">error</span> <span style=\"color: #4b4f5c\">=</span> <span style=\"color: #2eb0f7\">nil</span><span style=\"color: #111111\">;</span>\n<span style=\"color: #111111\">SentryClient</span> <span style=\"color: #4b4f5c\">*</span><span style=\"color: #111111\">client</span> <span style=\"color: #4b4f5c\">=</span> <span style=\"color: #111111\">[[SentryClient</span> <span style=\"color: #111111\">alloc]</span> <span style=\"color: #fb4226\">initWithDsn</span><span style=\"color: #111111\">:</span><span style=\"color: #e8535a\">@&quot;___DSN___&quot;</span> <span style=\"color: #fb4226\">didFailWithError</span><span style=\"color: #111111\">:</span><span style=\"color: #4b4f5c\">&amp;</span><span style=\"color: #111111\">error];</span>\n<span style=\"color: #111111\">SentryClient.sharedClient</span> <span style=\"color: #4b4f5c\">=</span> <span style=\"color: #111111\">client;</span>\n<span style=\"color: #111111\">[SentryClient.sharedClient</span> <span style=\"color: #fb4226\">startCrashHandlerWithError</span><span style=\"color: #111111\">:</span><span style=\"color: #4b4f5c\">&amp;</span><span style=\"color: #111111\">error];</span>\n<span style=\"color: #2eb0f7\">if</span> <span style=\"color: #111111\">(</span><span style=\"color: #2eb0f7\">nil</span> <span style=\"color: #4b4f5c\">!=</span> <span style=\"color: #111111\">error)</span> <span style=\"color: #111111\">{</span>\n    <span style=\"color: #111111\">NSLog(</span><span style=\"color: #e8535a\">@&quot;%@&quot;</span><span style=\"color: #111111\">,</span> <span style=\"color: #111111\">error);</span>\n<span style=\"color: #111111\">}</span>\n</pre></div>\n</div>\n<p>Note that if you call <code class=\"docutils literal\"><span class=\"pre\">startCrashHandler</span></code> will only catch errors if KSCrash is present.</p>\n</div>\n\n\n<div class=\"section\" id=\"debug-symbols\">\n<span id=\"sentry-cocoa-debug-symbols\"></span><h2>Debug Symbols</h2>\n<p>Before you can start capturing crashes you will need to tell Sentry about the debug\ninformation by uploading dSYM files.  Depending on your setup this can be\ndone in different ways:</p>\n<ul class=\"simple\">\n<li><a class=\"reference internal\" href=\"https://docs.getsentry.com/hosted/clients/cocoa/dsym/#dsym-with-bitcode\"><span>With Bitcode</span></a></li>\n<li><a class=\"reference internal\" href=\"https://docs.getsentry.com/hosted/clients/cocoa/dsym/#dsym-without-bitcode\"><span>Without Bitcode</span></a></li>\n</ul>\n</div>\n\n\n<div class=\"section\" id=\"upload-symbols-with-sentry-cli\">\n<h2>Upload Symbols with <cite>sentry-cli</cite></h2>\n<p>Your project&#8217;s dSYM can be upload during the build phase as a &#8220;Run\nScript&#8221;.  For this you need to st the <cite>DEBUG_INFORMATION_FORMAT</cite> to be\n<cite>DWARF with dSYM File</cite>. By default, an Xcode project will only have\n<cite>DEBUG_INFORMATION_FORMAT</cite> set to <cite>DWARF with dSYM File</cite> in <cite>Release</cite> so\nmake sure everything is set in your build settings properly.</p>\n<p>You need to have an Auth Token for this to work.  You can <a class=\"reference external\" href=\"https://sentry.io/api/\">create an\nAuth Token here</a>.</p>\n<ol class=\"arabic simple\">\n<li>You will need to copy the below into a new <cite>Run Script</cite> and set your\n<cite>AUTH_TOKEN</cite>, <cite>ORG_SLUG</cite>, and <cite>PROJECT_SLUG</cite></li>\n<li>Download and install <a class=\"reference external\" href=\"https://github.com/getsentry/sentry-cli/releases\">sentry-cli</a>\n\u2014 The best place to put this is in the <cite>/usr/local/bin/</cite> directory</li>\n</ol>\n<p>Shell: <cite>/bin/bash</cite></p>\n<div class=\"highlight-bash\"><div class=\"highlight\" style=\"background: #ffffff\"><pre style=\"line-height: 125%\"><span></span><span style=\"color: #2eb0f7\">if</span> which sentry-cli &gt;/dev/null<span style=\"color: #111111\">;</span> <span style=\"color: #2eb0f7\">then</span>\n<span style=\"color: #2eb0f7\">export</span> <span style=\"color: #111111\">SENTRY_ORG</span><span style=\"color: #4b4f5c\">=</span>___ORG_NAME___\n<span style=\"color: #2eb0f7\">export</span> <span style=\"color: #111111\">SENTRY_PROJECT</span><span style=\"color: #4b4f5c\">=</span>___PROJECT_NAME___\n<span style=\"color: #2eb0f7\">export</span> <span style=\"color: #111111\">SENTRY_AUTH_TOKEN</span><span style=\"color: #4b4f5c\">=</span>YOUR_AUTH_TOKEN\n<span style=\"color: #111111\">ERROR</span><span style=\"color: #4b4f5c\">=</span><span style=\"color: #2eb0f7\">$(</span>sentry-cli upload-dsym <span style=\"color: #45c2c9\">2</span>&gt;<span style=\"color: #111111\">&amp;</span><span style=\"color: #45c2c9\">1</span> &gt;/dev/null<span style=\"color: #2eb0f7\">)</span>\n<span style=\"color: #2eb0f7\">if</span> <span style=\"color: #4b4f5c\">[</span> ! <span style=\"color: #111111\">$?</span> -eq <span style=\"color: #45c2c9\">0</span> <span style=\"color: #4b4f5c\">]</span><span style=\"color: #111111\">;</span> <span style=\"color: #2eb0f7\">then</span>\n<span style=\"color: #2eb0f7\">echo</span> <span style=\"color: #e8535a\">&quot;warning: sentry-cli - </span><span style=\"color: #111111\">$ERROR</span><span style=\"color: #e8535a\">&quot;</span>\n<span style=\"color: #2eb0f7\">fi</span>\n<span style=\"color: #2eb0f7\">else</span>\n<span style=\"color: #2eb0f7\">echo</span> <span style=\"color: #e8535a\">&quot;warning: sentry-cli not installed, download from https://github.com/getsentry/sentry-cli/releases&quot;</span>\n<span style=\"color: #2eb0f7\">fi</span>\n</pre></div>\n</div>\n<p>The <code class=\"docutils literal\"><span class=\"pre\">upload-dsym</span></code> command automatically picks up the\n<code class=\"docutils literal\"><span class=\"pre\">DWARF_DSYM_FOLDER_PATH</span></code> environment variable that Xcode exports and\nlook for dSYM files there.</p>\n<div class=\"admonition-on-prem admonition\">\n<p class=\"first admonition-title\">On Prem</p>\n<p>By default sentry-cli will connect to sentry.io.  For\non-prem you need to export the <cite>SENTRY_URL</cite> environment variable\nto instruct the tool to connect to your server:</p>\n<div class=\"last highlight-python\"><div class=\"highlight\" style=\"background: #ffffff\"><pre style=\"line-height: 125%\"><span></span>export SENTRY_URL=https://mysentry.invalid/\n</pre></div>\n</div>\n</div>\n</div>\n", 
+  "link": "https://docs.getsentry.com/hosted/clients/cocoa/", 
+  "id": "swift", 
+  "name": "Swift"
+}
diff --git a/webpack.config.js b/webpack.config.js
index f23a825734..43b7e4e8e5 100644
--- a/webpack.config.js
+++ b/webpack.config.js
@@ -37,9 +37,9 @@ if (process.env.SENTRY_EXTRACT_TRANSLATIONS === '1') {
         gettextComponentTemplate: ['msgid'],
         t: ['msgid'],
         tn: ['msgid', 'msgid_plural', 'count'],
-        tct: ['msgid']
-      }
-    }
+        tct: ['msgid'],
+      },
+    },
   ]);
 }
 
@@ -70,8 +70,8 @@ var appEntry = {
     'reflux',
     'select2',
     'vendor/simple-slider/simple-slider',
-    'ios-device-list'
-  ]
+    'ios-device-list',
+  ],
 };
 
 // dynamically iterate over locale files and add to `entry` appConfig
@@ -86,7 +86,7 @@ localeCatalog.supported_locales.forEach(function(locale) {
   var normalizedLocale = locale.toLowerCase().replace('_', '-');
   appEntry['locale/' + normalizedLocale] = [
     'moment/locale/' + normalizedLocale,
-    'sentry-locale/' + locale + '/LC_MESSAGES/django.po' // relative to static/sentry
+    'sentry-locale/' + locale + '/LC_MESSAGES/django.po', // relative to static/sentry
   ];
   localeEntries.push('locale/' + normalizedLocale);
 });
@@ -104,65 +104,65 @@ var appConfig = {
         loader: 'babel-loader',
         include: path.join(__dirname, staticPrefix),
         exclude: /(vendor|node_modules|dist)/,
-        query: babelConfig
+        query: babelConfig,
       },
       {
         test: /\.po$/,
         loader: 'po-catalog-loader',
         query: {
           referenceExtensions: ['.js', '.jsx'],
-          domain: 'sentry'
-        }
+          domain: 'sentry',
+        },
       },
       {
         test: /\.json$/,
-        loader: 'json-loader'
+        loader: 'json-loader',
       },
       // loader for dynamic styles imported into components (embedded as js)
       {
         test: /\.less$/,
         use: [
           {
-            loader: 'style-loader'
+            loader: 'style-loader',
           },
           {
             loader: 'css-loader',
             options: {
-              minimize: IS_PRODUCTION
-            }
+              minimize: IS_PRODUCTION,
+            },
           },
           {
-            loader: 'less-loader'
-          }
-        ]
+            loader: 'less-loader',
+          },
+        ],
       },
       {
         test: /\.(woff|woff2|ttf|eot|svg|png|gif|ico|jpg)($|\?)/,
-        loader: 'file-loader?name=' + '[name].[ext]'
-      }
+        loader: 'file-loader?name=' + '[name].[ext]',
+      },
     ],
     noParse: [
       // don't parse known, pre-built javascript files (improves webpack perf)
       /dist\/jquery\.js/,
       /jed\/jed\.js/,
-      /marked\/lib\/marked\.js/
-    ]
+      /marked\/lib\/marked\.js/,
+    ],
   },
   plugins: [
     new LodashModuleReplacementPlugin({
       collections: true,
       currying: true, // these are enabled to support lodash/fp/ features
-      flattening: true // used by a dependency of react-mentions
+      flattening: true, // used by a dependency of react-mentions
     }),
     new webpack.optimize.CommonsChunkPlugin({
-      names: localeEntries.concat(['vendor']) // 'vendor' must be last entry
+      names: localeEntries.concat(['vendor']), // 'vendor' must be last entry
     }),
     new webpack.ProvidePlugin({
       $: 'jquery',
       jQuery: 'jquery',
       'window.jQuery': 'jquery',
       'root.jQuery': 'jquery',
-      Raven: 'raven-js'
+      Raven: 'raven-js',
     }),
     new ExtractTextPlugin('[name].css'),
     new webpack.IgnorePlugin(/^\.\/locale$/, /moment$/), // ignore moment.js locale files
@@ -171,8 +171,8 @@ var appConfig = {
         NODE_ENV: JSON.stringify(process.env.NODE_ENV),
         IS_PERCY: JSON.stringify(
           process.env.CI && !!process.env.PERCY_TOKEN && !!process.env.TRAVIS
-        )
-      }
+        ),
+      },
     }),
     // restrict translation files pulled into dist/app.js to only those specified
     // in locale/catalogs.json
@@ -180,27 +180,27 @@ var appConfig = {
       /locale$/,
       path.join(__dirname, 'src', 'sentry', 'locale', path.sep),
       true,
-      new RegExp('(' + localeCatalog.supported_locales.join('|') + ')\/.*\\.po$')
-    )
+      new RegExp('(' + localeCatalog.supported_locales.join('|') + ')/.*\\.po$')
+    ),
   ],
   resolve: {
     alias: {
       'sentry-locale': path.join(__dirname, 'src', 'sentry', 'locale'),
       'integration-docs-platforms': IS_TEST
-        ? path.join(__dirname, 'tests/fixtures/_platforms.json')
-        : path.join(__dirname, 'src/sentry/integration-docs/_platforms.json')
+        ? path.join(__dirname, 'tests/fixtures/integration-docs/_platforms.json')
+        : path.join(__dirname, 'src/sentry/integration-docs/_platforms.json'),
     },
     modules: [path.join(__dirname, staticPrefix), 'node_modules'],
-    extensions: ['.less', '.jsx', '.js', '.json']
+    extensions: ['.less', '.jsx', '.js', '.json'],
   },
   output: {
     path: distPath,
     filename: '[name].js',
     libraryTarget: 'var',
     library: 'exports',
-    sourceMapFilename: '[name].js.map'
+    sourceMapFilename: '[name].js.map',
   },
-  devtool: IS_PRODUCTION ? '#source-map' : '#cheap-source-map'
+  devtool: IS_PRODUCTION ? '#source-map' : '#cheap-source-map',
 };
 
 /**
@@ -208,23 +208,23 @@ var appConfig = {
  */
 var pwConfig = {
   entry: {
-    pwstrength: './index'
+    pwstrength: './index',
   },
   context: path.resolve(path.join(__dirname, staticPrefix), 'js', 'pwstrength'),
   module: {},
   plugins: [],
   resolve: {
     modules: [path.join(__dirname, staticPrefix), 'node_modules'],
-    extensions: ['.js']
+    extensions: ['.js'],
   },
   output: {
     path: distPath,
     filename: '[name].js',
     libraryTarget: 'window',
     library: 'sentrypw',
-    sourceMapFilename: '[name].js.map'
+    sourceMapFilename: '[name].js.map',
   },
-  devtool: IS_PRODUCTION ? '#source-map' : '#cheap-source-map'
+  devtool: IS_PRODUCTION ? '#source-map' : '#cheap-source-map',
 };
 
 /**
@@ -234,17 +234,17 @@ var pwConfig = {
  */
 var legacyCssConfig = {
   entry: {
-    sentry: 'less/sentry.less'
+    sentry: 'less/sentry.less',
   },
   context: path.join(__dirname, staticPrefix),
   output: {
     path: distPath,
-    filename: '[name].css'
+    filename: '[name].css',
   },
   plugins: [new ExtractTextPlugin('[name].css')],
   resolve: {
     extensions: ['.less', '.js'],
-    modules: [path.join(__dirname, staticPrefix), 'node_modules']
+    modules: [path.join(__dirname, staticPrefix), 'node_modules'],
   },
   module: {
     rules: [
@@ -258,25 +258,25 @@ var legacyCssConfig = {
               loader: 'css-loader',
               options: {
                 sourceMap: WITH_CSS_SOURCEMAPS,
-                minimize: IS_PRODUCTION
-              }
+                minimize: IS_PRODUCTION,
+              },
             },
             {
               loader: 'less-loader',
               options: {
-                sourceMap: WITH_CSS_SOURCEMAPS
-              }
+                sourceMap: WITH_CSS_SOURCEMAPS,
+              },
             },
-          ]
-        })
+          ],
+        }),
       },
       {
         test: /\.(woff|woff2|ttf|eot|svg|png|gif|ico|jpg)($|\?)/,
-        loader: 'file-loader?name=' + '[name].[ext]'
-      }
-    ]
+        loader: 'file-loader?name=' + '[name].[ext]',
+      },
+    ],
   },
-  devtool: WITH_CSS_SOURCEMAPS ? '#source-map' : undefined
+  devtool: WITH_CSS_SOURCEMAPS ? '#source-map' : undefined,
 };
 
 // Dev only! Hot module reloading
@@ -289,7 +289,7 @@ if (USE_HOT_MODULE_RELOAD) {
   appConfig.devServer = {
     headers: {
       'Access-Control-Allow-Origin': '*',
-      'Access-Control-Allow-Credentials': 'true'
+      'Access-Control-Allow-Credentials': 'true',
     },
     // Required for getsentry
     disableHostCheck: true,
@@ -297,7 +297,7 @@ if (USE_HOT_MODULE_RELOAD) {
     hot: true,
     // If below is false, will reload on errors
     hotOnly: true,
-    port: WEBPACK_DEV_PORT
+    port: WEBPACK_DEV_PORT,
   };
 
   // Required, without this we get this on updates:
@@ -313,20 +313,21 @@ var minificationPlugins = [
     algorithm: function(buffer, options, callback) {
       require('zlib').gzip(buffer, callback);
     },
-    regExp: /\.(js|map|css|svg|html|txt|ico|eot|ttf)$/
+    regExp: /\.(js|map|css|svg|html|txt|ico|eot|ttf)$/,
   }),
 
   // Disable annoying UglifyJS warnings that pollute Travis log output
   // NOTE: This breaks -p in webpack 2. Must call webpack w/ NODE_ENV=production for minification.
   new webpack.optimize.UglifyJsPlugin({
     compress: {
-      warnings: false
+      warnings: false,
     },
     // https://github.com/webpack/webpack/blob/951a7603d279c93c936e4b8b801a355dc3e26292/bin/convert-argv.js#L442
-    sourceMap: appConfig.devtool &&
+    sourceMap:
+      appConfig.devtool &&
       (appConfig.devtool.indexOf('sourcemap') >= 0 ||
-        appConfig.devtool.indexOf('source-map') >= 0)
-  })
+        appConfig.devtool.indexOf('source-map') >= 0),
+  }),
 ];
 
 if (IS_PRODUCTION) {
diff --git a/yarn.lock b/yarn.lock
index e43a4e1599..bcaeeaa060 100644
--- a/yarn.lock
+++ b/yarn.lock
@@ -246,14 +246,10 @@ acorn@^4.0.3, acorn@^4.0.4:
   version "4.0.13"
   resolved "https://registry.yarnpkg.com/acorn/-/acorn-4.0.13.tgz#105495ae5361d697bd195c825192e1ad7f253787"
 
-acorn@^5.0.0:
+acorn@^5.0.0, acorn@^5.1.1:
   version "5.1.1"
   resolved "https://registry.yarnpkg.com/acorn/-/acorn-5.1.1.tgz#53fe161111f912ab999ee887a90a0bc52822fd75"
 
-acorn@^5.1.1:
-  version "5.1.2"
-  resolved "https://registry.yarnpkg.com/acorn/-/acorn-5.1.2.tgz#911cb53e036807cf0fa778dc5d370fbd864246d7"
-
 airbnb-js-shims@^1.1.1:
   version "1.3.0"
   resolved "https://registry.yarnpkg.com/airbnb-js-shims/-/airbnb-js-shims-1.3.0.tgz#aac46d80057fb0b414f70e06d07e362fd99ee2fa"
@@ -280,7 +276,7 @@ ajv@^4.9.1:
     co "^4.6.0"
     json-stable-stringify "^1.0.1"
 
-ajv@^5.0.0, ajv@^5.1.5:
+ajv@^5.0.0, ajv@^5.1.5, ajv@^5.2.0:
   version "5.2.2"
   resolved "https://registry.yarnpkg.com/ajv/-/ajv-5.2.2.tgz#47c68d69e86f5d953103b0074a9430dc63da5e39"
   dependencies:
@@ -289,7 +285,7 @@ ajv@^5.0.0, ajv@^5.1.5:
     json-schema-traverse "^0.3.0"
     json-stable-stringify "^1.0.1"
 
-ajv@^5.2.0, ajv@^5.2.3:
+ajv@^5.2.3:
   version "5.3.0"
   resolved "https://registry.yarnpkg.com/ajv/-/ajv-5.3.0.tgz#4414ff74a50879c208ee5fdc826e32c303549eda"
   dependencies:
@@ -1638,7 +1634,7 @@ babel-template@^6.26.0:
     babylon "^6.18.0"
     lodash "^4.17.4"
 
-babel-traverse@^6.18.0, babel-traverse@^6.23.1, babel-traverse@^6.26.0:
+babel-traverse@^6.18.0, babel-traverse@^6.26.0:
   version "6.26.0"
   resolved "https://registry.yarnpkg.com/babel-traverse/-/babel-traverse-6.26.0.tgz#46a9cbd7edcc62c8e5c064e2d2d8d0f4035766ee"
   dependencies:
@@ -1652,7 +1648,7 @@ babel-traverse@^6.18.0, babel-traverse@^6.23.1, babel-traverse@^6.26.0:
     invariant "^2.2.2"
     lodash "^4.17.4"
 
-babel-traverse@^6.21.0, babel-traverse@^6.24.1, babel-traverse@^6.25.0:
+babel-traverse@^6.21.0, babel-traverse@^6.23.1, babel-traverse@^6.24.1, babel-traverse@^6.25.0:
   version "6.25.0"
   resolved "https://registry.yarnpkg.com/babel-traverse/-/babel-traverse-6.25.0.tgz#2257497e2fcd19b89edc13c4c91381f9512496f1"
   dependencies:
@@ -1666,7 +1662,7 @@ babel-traverse@^6.21.0, babel-traverse@^6.24.1, babel-traverse@^6.25.0:
     invariant "^2.2.0"
     lodash "^4.2.0"
 
-babel-types@^6.18.0, babel-types@^6.19.0, babel-types@^6.23.0, babel-types@^6.26.0:
+babel-types@^6.18.0, babel-types@^6.19.0, babel-types@^6.26.0:
   version "6.26.0"
   resolved "https://registry.yarnpkg.com/babel-types/-/babel-types-6.26.0.tgz#a3b073f94ab49eb6fa55cd65227a334380632497"
   dependencies:
@@ -1675,7 +1671,7 @@ babel-types@^6.18.0, babel-types@^6.19.0, babel-types@^6.23.0, babel-types@^6.26
     lodash "^4.17.4"
     to-fast-properties "^1.0.3"
 
-babel-types@^6.21.0, babel-types@^6.24.1, babel-types@^6.25.0:
+babel-types@^6.21.0, babel-types@^6.23.0, babel-types@^6.24.1, babel-types@^6.25.0:
   version "6.25.0"
   resolved "https://registry.yarnpkg.com/babel-types/-/babel-types-6.25.0.tgz#70afb248d5660e5d18f811d91c8303b54134a18e"
   dependencies:
@@ -1684,11 +1680,11 @@ babel-types@^6.21.0, babel-types@^6.24.1, babel-types@^6.25.0:
     lodash "^4.2.0"
     to-fast-properties "^1.0.1"
 
-babylon@^6.11.0, babylon@^6.17.2:
+babylon@^6.11.0, babylon@^6.17.0, babylon@^6.17.2:
   version "6.17.4"
   resolved "https://registry.yarnpkg.com/babylon/-/babylon-6.17.4.tgz#3e8b7402b88d22c3423e137a1577883b15ff869a"
 
-babylon@^6.17.0, babylon@^6.17.4, babylon@^6.18.0:
+babylon@^6.17.4, babylon@^6.18.0:
   version "6.18.0"
   resolved "https://registry.yarnpkg.com/babylon/-/babylon-6.18.0.tgz#af2f3b88fa6f5c1e4c634d1a0f8eac4f55b395e3"
 
@@ -1967,10 +1963,6 @@ case-sensitive-paths-webpack-plugin@^2.0.0:
   version "2.1.1"
   resolved "https://registry.yarnpkg.com/case-sensitive-paths-webpack-plugin/-/case-sensitive-paths-webpack-plugin-2.1.1.tgz#3d29ced8c1f124bf6f53846fb3f5894731fdc909"
 
-caseless@~0.11.0:
-  version "0.11.0"
-  resolved "https://registry.yarnpkg.com/caseless/-/caseless-0.11.0.tgz#715b96ea9841593cc33067923f5ec60ebda4f7d7"
-
 caseless@~0.12.0:
   version "0.12.0"
   resolved "https://registry.yarnpkg.com/caseless/-/caseless-0.12.0.tgz#1b681c21ff84033c826543090689420d187151dc"
@@ -1994,7 +1986,7 @@ chain-function@^1.0.0:
   version "1.0.0"
   resolved "https://registry.yarnpkg.com/chain-function/-/chain-function-1.0.0.tgz#0d4ab37e7e18ead0bdc47b920764118ce58733dc"
 
-chalk@^1.1.0, chalk@^1.1.1, chalk@^1.1.3:
+chalk@^1.1.0, chalk@^1.1.3:
   version "1.1.3"
   resolved "https://registry.yarnpkg.com/chalk/-/chalk-1.1.3.tgz#a8115c55e4a702fe4d150abd3872822a7e09fc98"
   dependencies:
@@ -2004,15 +1996,7 @@ chalk@^1.1.0, chalk@^1.1.1, chalk@^1.1.3:
     strip-ansi "^3.0.0"
     supports-color "^2.0.0"
 
-chalk@^2.0.0:
-  version "2.3.0"
-  resolved "https://registry.yarnpkg.com/chalk/-/chalk-2.3.0.tgz#b5ea48efc9c1793dccc9b4767c93914d3f2d52ba"
-  dependencies:
-    ansi-styles "^3.1.0"
-    escape-string-regexp "^1.0.5"
-    supports-color "^4.0.0"
-
-chalk@^2.0.1, chalk@^2.1.0:
+chalk@^2.0.0, chalk@^2.0.1, chalk@^2.1.0:
   version "2.1.0"
   resolved "https://registry.yarnpkg.com/chalk/-/chalk-2.1.0.tgz#ac5becf14fa21b99c6c92ca7a7d7cfd5b17e743e"
   dependencies:
@@ -2226,14 +2210,6 @@ concat-map@0.0.1:
   version "0.0.1"
   resolved "https://registry.yarnpkg.com/concat-map/-/concat-map-0.0.1.tgz#d8a96bd77fd68df7793a73036a3ba0d5405d477b"
 
-concat-stream@1.5.0:
-  version "1.5.0"
-  resolved "https://registry.yarnpkg.com/concat-stream/-/concat-stream-1.5.0.tgz#53f7d43c51c5e43f81c8fdd03321c631be68d611"
-  dependencies:
-    inherits "~2.0.1"
-    readable-stream "~2.0.0"
-    typedarray "~0.0.5"
-
 concat-stream@^1.6.0:
   version "1.6.0"
   resolved "https://registry.yarnpkg.com/concat-stream/-/concat-stream-1.6.0.tgz#0aac662fd52be78964d5532f694784e70110acf7"
@@ -2291,14 +2267,10 @@ content-type@~1.0.2:
   version "1.0.2"
   resolved "https://registry.yarnpkg.com/content-type/-/content-type-1.0.2.tgz#b7d113aee7a8dd27bd21133c4dc2529df1721eed"
 
-convert-source-map@^1.1.0, convert-source-map@^1.5.0:
+convert-source-map@^1.1.0, convert-source-map@^1.4.0, convert-source-map@^1.5.0:
   version "1.5.0"
   resolved "https://registry.yarnpkg.com/convert-source-map/-/convert-source-map-1.5.0.tgz#9acd70851c6d5dfdd93d9282e5edf94a03ff46b5"
 
-convert-source-map@^1.4.0:
-  version "1.5.1"
-  resolved "https://registry.yarnpkg.com/convert-source-map/-/convert-source-map-1.5.1.tgz#b8278097b9bc229365de5c62cf5fcaed8b5599e5"
-
 cookie-signature@1.0.6:
   version "1.0.6"
   resolved "https://registry.yarnpkg.com/cookie-signature/-/cookie-signature-1.0.6.tgz#e303a882b342cc3ee8ca513a79999734dab3ae2c"
@@ -2545,10 +2517,6 @@ date-now@^0.1.4:
   version "0.1.4"
   resolved "https://registry.yarnpkg.com/date-now/-/date-now-0.1.4.tgz#eaf439fd4d4848ad74e5cc7dbef200672b9e345b"
 
-debug@0.7.4:
-  version "0.7.4"
-  resolved "https://registry.yarnpkg.com/debug/-/debug-0.7.4.tgz#06e1ea8082c2cb14e39806e22e2f6f757f92af39"
-
 debug@2.6.7:
   version "2.6.7"
   resolved "https://registry.yarnpkg.com/debug/-/debug-2.6.7.tgz#92bad1f6d05bbb6bba22cca88bcd0ec894c2861e"
@@ -2672,19 +2640,11 @@ detect-indent@^4.0.0:
   dependencies:
     repeating "^2.0.0"
 
-detect-libc@^1.0.2:
-  version "1.0.3"
-  resolved "https://registry.yarnpkg.com/detect-libc/-/detect-libc-1.0.3.tgz#fa137c4bd698edf55cd5cd02ac559f91a4c4ba9b"
-
 detect-node@^2.0.3:
   version "2.0.3"
   resolved "https://registry.yarnpkg.com/detect-node/-/detect-node-2.0.3.tgz#a2033c09cc8e158d37748fbde7507832bd6ce127"
 
-diff@^3.2.0:
-  version "3.4.0"
-  resolved "https://registry.yarnpkg.com/diff/-/diff-3.4.0.tgz#b1d85507daf3964828de54b37d0d73ba67dda56c"
-
-diff@^3.3.0:
+diff@^3.2.0, diff@^3.3.0:
   version "3.3.0"
   resolved "https://registry.yarnpkg.com/diff/-/diff-3.3.0.tgz#056695150d7aa93237ca7e378ac3b1682b7963b9"
 
@@ -2934,10 +2894,6 @@ es6-promise-pool@^2.4.4:
   version "2.4.6"
   resolved "https://registry.yarnpkg.com/es6-promise-pool/-/es6-promise-pool-2.4.6.tgz#3fa4cac0722674e024bddf12d71f9c399cfc0ab0"
 
-es6-promise@~4.0.3:
-  version "4.0.5"
-  resolved "https://registry.yarnpkg.com/es6-promise/-/es6-promise-4.0.5.tgz#7882f30adde5b240ccfa7f7d78c548330951ae42"
-
 es6-set@~0.1.5:
   version "0.1.5"
   resolved "https://registry.yarnpkg.com/es6-set/-/es6-set-0.1.5.tgz#d2b3ec5d4d800ced818db538d28974db0a73ccb1"
@@ -3298,15 +3254,6 @@ extract-text-webpack-plugin@^3.0.0:
     schema-utils "^0.3.0"
     webpack-sources "^1.0.1"
 
-extract-zip@~1.5.0:
-  version "1.5.0"
-  resolved "https://registry.yarnpkg.com/extract-zip/-/extract-zip-1.5.0.tgz#92ccf6d81ef70a9fa4c1747114ccef6d8688a6c4"
-  dependencies:
-    concat-stream "1.5.0"
-    debug "0.7.4"
-    mkdirp "0.5.0"
-    yauzl "2.4.1"
-
 extsprintf@1.0.2:
   version "1.0.2"
   resolved "https://registry.yarnpkg.com/extsprintf/-/extsprintf-1.0.2.tgz#e1080e0658e300b06294990cc70e1502235fd550"
@@ -3369,12 +3316,6 @@ fbjs@^0.8.12, fbjs@^0.8.4, fbjs@^0.8.9:
     setimmediate "^1.0.5"
     ua-parser-js "^0.7.9"
 
-fd-slicer@~1.0.1:
-  version "1.0.1"
-  resolved "https://registry.yarnpkg.com/fd-slicer/-/fd-slicer-1.0.1.tgz#8b5bcbd9ec327c5041bf9ab023fd6750f1177e65"
-  dependencies:
-    pend "~1.2.0"
-
 figures@^2.0.0:
   version "2.0.0"
   resolved "https://registry.yarnpkg.com/figures/-/figures-2.0.0.tgz#3ab1a2d2a62c8bfb431a0c94cb797a2fce27c962"
@@ -3515,32 +3456,17 @@ fresh@0.5.0:
   version "0.5.0"
   resolved "https://registry.yarnpkg.com/fresh/-/fresh-0.5.0.tgz#f474ca5e6a9246d6fd8e0953cfa9b9c805afa78e"
 
-fs-extra@~1.0.0:
-  version "1.0.0"
-  resolved "https://registry.yarnpkg.com/fs-extra/-/fs-extra-1.0.0.tgz#cd3ce5f7e7cb6145883fcae3191e9877f8587950"
-  dependencies:
-    graceful-fs "^4.1.2"
-    jsonfile "^2.1.0"
-    klaw "^1.0.0"
-
 fs.realpath@^1.0.0:
   version "1.0.0"
   resolved "https://registry.yarnpkg.com/fs.realpath/-/fs.realpath-1.0.0.tgz#1504ad2523158caa40db4a2787cb01411994ea4f"
 
-fsevents@^1.0.0, fsevents@^1.1.2:
+fsevents@^1.0.0, fsevents@^1.1.1, fsevents@^1.1.2:
   version "1.1.2"
   resolved "https://registry.yarnpkg.com/fsevents/-/fsevents-1.1.2.tgz#3282b713fb3ad80ede0e9fcf4611b5aa6fc033f4"
   dependencies:
     nan "^2.3.0"
     node-pre-gyp "^0.6.36"
 
-fsevents@^1.1.1:
-  version "1.1.3"
-  resolved "https://registry.yarnpkg.com/fsevents/-/fsevents-1.1.3.tgz#11f82318f5fe7bb2cd22965a108e9306208216d8"
-  dependencies:
-    nan "^2.3.0"
-    node-pre-gyp "^0.6.39"
-
 fstream-ignore@^1.0.5:
   version "1.0.5"
   resolved "https://registry.yarnpkg.com/fstream-ignore/-/fstream-ignore-1.0.5.tgz#9c31dae34767018fe1d249b24dada67d092da105"
@@ -3591,16 +3517,6 @@ gauge@~2.7.3:
     strip-ansi "^3.0.1"
     wide-align "^1.1.0"
 
-generate-function@^2.0.0:
-  version "2.0.0"
-  resolved "https://registry.yarnpkg.com/generate-function/-/generate-function-2.0.0.tgz#6858fe7c0969b7d4e9093337647ac79f60dfbe74"
-
-generate-object-property@^1.1.0:
-  version "1.2.0"
-  resolved "https://registry.yarnpkg.com/generate-object-property/-/generate-object-property-1.2.0.tgz#9c0e1c40308ce804f4783618b937fa88f99d50d0"
-  dependencies:
-    is-property "^1.0.0"
-
 get-caller-file@^1.0.1:
   version "1.0.2"
   resolved "https://registry.yarnpkg.com/get-caller-file/-/get-caller-file-1.0.2.tgz#f702e63127e7e231c160a80c1554acb70d5047e5"
@@ -3726,7 +3642,7 @@ graceful-fs@^3.0.5:
   dependencies:
     natives "^1.1.0"
 
-graceful-fs@^4.1.11, graceful-fs@^4.1.2, graceful-fs@^4.1.6, graceful-fs@^4.1.9:
+graceful-fs@^4.1.11, graceful-fs@^4.1.2:
   version "4.1.11"
   resolved "https://registry.yarnpkg.com/graceful-fs/-/graceful-fs-4.1.11.tgz#0e8bdfe4d1ddb8854d64e04ea7c00e2a026e5658"
 
@@ -3752,15 +3668,6 @@ har-schema@^1.0.5:
   version "1.0.5"
   resolved "https://registry.yarnpkg.com/har-schema/-/har-schema-1.0.5.tgz#d263135f43307c02c602afc8fe95970c0151369e"
 
-har-validator@~2.0.6:
-  version "2.0.6"
-  resolved "https://registry.yarnpkg.com/har-validator/-/har-validator-2.0.6.tgz#cdcbc08188265ad119b6a5a7c8ab70eecfb5d27d"
-  dependencies:
-    chalk "^1.1.1"
-    commander "^2.9.0"
-    is-my-json-valid "^2.12.4"
-    pinkie-promise "^2.0.0"
-
 har-validator@~4.2.1:
   version "4.2.1"
   resolved "https://registry.yarnpkg.com/har-validator/-/har-validator-4.2.1.tgz#33481d0f1bbff600dd203d75812a6a5fba002e2a"
@@ -3805,14 +3712,7 @@ hash.js@^1.0.0, hash.js@^1.0.3:
     inherits "^2.0.3"
     minimalistic-assert "^1.0.0"
 
-hasha@~2.2.0:
-  version "2.2.0"
-  resolved "https://registry.yarnpkg.com/hasha/-/hasha-2.2.0.tgz#78d7cbfc1e6d66303fe79837365984517b2f6ee1"
-  dependencies:
-    is-stream "^1.0.1"
-    pinkie-promise "^2.0.0"
-
-hawk@3.1.3, hawk@~3.1.3:
+hawk@~3.1.3:
   version "3.1.3"
   resolved "https://registry.yarnpkg.com/hawk/-/hawk-3.1.3.tgz#078444bd7c1640b0fe540d2c9b73d59678e8e1c4"
   dependencies:
@@ -3972,11 +3872,7 @@ iconv-lite@0.4.13:
   version "0.4.13"
   resolved "https://registry.yarnpkg.com/iconv-lite/-/iconv-lite-0.4.13.tgz#1f88aba4ab0b1508e8312acc39345f36e992e2f2"
 
-iconv-lite@^0.4.17:
-  version "0.4.19"
-  resolved "https://registry.yarnpkg.com/iconv-lite/-/iconv-lite-0.4.19.tgz#f7468f60135f5e5dad3399c0a81be9a1603a082b"
-
-iconv-lite@~0.4.13:
+iconv-lite@^0.4.17, iconv-lite@~0.4.13:
   version "0.4.18"
   resolved "https://registry.yarnpkg.com/iconv-lite/-/iconv-lite-0.4.18.tgz#23d8656b16aae6742ac29732ea8f0336a4789cf2"
 
@@ -4227,15 +4123,6 @@ is-glob@^3.1.0:
   dependencies:
     is-extglob "^2.1.0"
 
-is-my-json-valid@^2.12.4:
-  version "2.16.0"
-  resolved "https://registry.yarnpkg.com/is-my-json-valid/-/is-my-json-valid-2.16.0.tgz#f079dd9bfdae65ee2038aae8acbc86ab109e3693"
-  dependencies:
-    generate-function "^2.0.0"
-    generate-object-property "^1.1.0"
-    jsonpointer "^4.0.0"
-    xtend "^4.0.0"
-
 is-number@^2.1.0:
   version "2.1.0"
   resolved "https://registry.yarnpkg.com/is-number/-/is-number-2.1.0.tgz#01fcbbb393463a548f2f466cce16dece49db908f"
@@ -4290,10 +4177,6 @@ is-promise@^2.1.0:
   version "2.1.0"
   resolved "https://registry.yarnpkg.com/is-promise/-/is-promise-2.1.0.tgz#79a2a9ece7f096e80f36d2b2f3bc16c1ff4bf3fa"
 
-is-property@^1.0.0:
-  version "1.0.2"
-  resolved "https://registry.yarnpkg.com/is-property/-/is-property-1.0.2.tgz#57fe1c4e48474edd65b09911f26b1cd4095dda84"
-
 is-regex@^1.0.3:
   version "1.0.4"
   resolved "https://registry.yarnpkg.com/is-regex/-/is-regex-1.0.4.tgz#5517489b547091b0930e095654ced25ee97e9491"
@@ -4411,27 +4294,27 @@ istanbul-lib-hook@^1.1.0:
   dependencies:
     append-transform "^0.4.0"
 
-istanbul-lib-instrument@^1.4.2, istanbul-lib-instrument@^1.9.1:
-  version "1.9.1"
-  resolved "https://registry.yarnpkg.com/istanbul-lib-instrument/-/istanbul-lib-instrument-1.9.1.tgz#250b30b3531e5d3251299fdd64b0b2c9db6b558e"
+istanbul-lib-instrument@^1.4.2, istanbul-lib-instrument@^1.7.2:
+  version "1.7.4"
+  resolved "https://registry.yarnpkg.com/istanbul-lib-instrument/-/istanbul-lib-instrument-1.7.4.tgz#e9fd920e4767f3d19edc765e2d6b3f5ccbd0eea8"
   dependencies:
     babel-generator "^6.18.0"
     babel-template "^6.16.0"
     babel-traverse "^6.18.0"
     babel-types "^6.18.0"
-    babylon "^6.18.0"
+    babylon "^6.17.4"
     istanbul-lib-coverage "^1.1.1"
     semver "^5.3.0"
 
-istanbul-lib-instrument@^1.7.2:
-  version "1.7.4"
-  resolved "https://registry.yarnpkg.com/istanbul-lib-instrument/-/istanbul-lib-instrument-1.7.4.tgz#e9fd920e4767f3d19edc765e2d6b3f5ccbd0eea8"
+istanbul-lib-instrument@^1.9.1:
+  version "1.9.1"
+  resolved "https://registry.yarnpkg.com/istanbul-lib-instrument/-/istanbul-lib-instrument-1.9.1.tgz#250b30b3531e5d3251299fdd64b0b2c9db6b558e"
   dependencies:
     babel-generator "^6.18.0"
     babel-template "^6.16.0"
     babel-traverse "^6.18.0"
     babel-types "^6.18.0"
-    babylon "^6.17.4"
+    babylon "^6.18.0"
     istanbul-lib-coverage "^1.1.1"
     semver "^5.3.0"
 
@@ -4705,14 +4588,7 @@ js-tokens@^3.0.0, js-tokens@^3.0.2:
   version "3.0.2"
   resolved "https://registry.yarnpkg.com/js-tokens/-/js-tokens-3.0.2.tgz#9866df395102130e38f7f996bceb65443209c25b"
 
-js-yaml@^3.4.3, js-yaml@^3.7.0:
-  version "3.9.0"
-  resolved "https://registry.yarnpkg.com/js-yaml/-/js-yaml-3.9.0.tgz#4ffbbf25c2ac963b8299dc74da7e3740de1c18ce"
-  dependencies:
-    argparse "^1.0.7"
-    esprima "^4.0.0"
-
-js-yaml@^3.9.1:
+js-yaml@^3.4.3, js-yaml@^3.7.0, js-yaml@^3.9.1:
   version "3.10.0"
   resolved "https://registry.yarnpkg.com/js-yaml/-/js-yaml-3.10.0.tgz#2e78441646bd4682e963f22b6e92823c309c62dc"
   dependencies:
@@ -4800,20 +4676,10 @@ json5@^0.5.0, json5@^0.5.1:
   version "0.5.1"
   resolved "https://registry.yarnpkg.com/json5/-/json5-0.5.1.tgz#1eade7acc012034ad84e2396767ead9fa5495821"
 
-jsonfile@^2.1.0:
-  version "2.4.0"
-  resolved "https://registry.yarnpkg.com/jsonfile/-/jsonfile-2.4.0.tgz#3736a2b428b87bbda0cc83b53fa3d633a35c2ae8"
-  optionalDependencies:
-    graceful-fs "^4.1.6"
-
 jsonify@~0.0.0:
   version "0.0.0"
   resolved "https://registry.yarnpkg.com/jsonify/-/jsonify-0.0.0.tgz#2c74b6ee41d93ca51b7b5aaee8f503631d252a73"
 
-jsonpointer@^4.0.0:
-  version "4.0.1"
-  resolved "https://registry.yarnpkg.com/jsonpointer/-/jsonpointer-4.0.1.tgz#4fd92cb34e0e9db3c89c8622ecf51f9b978c6cb9"
-
 jsprim@^1.2.2:
   version "1.4.0"
   resolved "https://registry.yarnpkg.com/jsprim/-/jsprim-1.4.0.tgz#a3b87e40298d8c380552d8cc7628a0bb95a22918"
@@ -4833,10 +4699,6 @@ jsx-ast-utils@^2.0.0:
   dependencies:
     array-includes "^3.0.3"
 
-kew@~0.7.0:
-  version "0.7.0"
-  resolved "https://registry.yarnpkg.com/kew/-/kew-0.7.0.tgz#79d93d2d33363d6fdd2970b335d9141ad591d79b"
-
 keycode@^2.1.1, keycode@^2.1.8:
   version "2.1.9"
   resolved "https://registry.yarnpkg.com/keycode/-/keycode-2.1.9.tgz#964a23c54e4889405b4861a5c9f0480d45141dfa"
@@ -4853,12 +4715,6 @@ kind-of@^4.0.0:
   dependencies:
     is-buffer "^1.1.5"
 
-klaw@^1.0.0:
-  version "1.3.1"
-  resolved "https://registry.yarnpkg.com/klaw/-/klaw-1.3.1.tgz#4088433b46b3b1ba259d78785d8e96f73ba02439"
-  optionalDependencies:
-    graceful-fs "^4.1.9"
-
 lazy-cache@^1.0.3:
   version "1.0.4"
   resolved "https://registry.yarnpkg.com/lazy-cache/-/lazy-cache-1.0.4.tgz#a1d78fc3a50474cb80845d3b3b6e1da49a446e8e"
@@ -5328,12 +5184,6 @@ minimist@^1.1.1, minimist@^1.1.3, minimist@^1.2.0:
   version "1.2.0"
   resolved "https://registry.yarnpkg.com/minimist/-/minimist-1.2.0.tgz#a35008b20f41383eec1fb914f4cd5df79a264284"
 
-mkdirp@0.5.0:
-  version "0.5.0"
-  resolved "https://registry.yarnpkg.com/mkdirp/-/mkdirp-0.5.0.tgz#1d73076a6df986cd9344e15e71fcc05a4c9abf12"
-  dependencies:
-    minimist "0.0.8"
-
 mkdirp@0.5.x, "mkdirp@>=0.5 0", mkdirp@^0.5.0, mkdirp@^0.5.1, mkdirp@~0.5.0, mkdirp@~0.5.1:
   version "0.5.1"
   resolved "https://registry.yarnpkg.com/mkdirp/-/mkdirp-0.5.1.tgz#30057438eac6cf7f8c4767f38648d6697d75c903"
@@ -5525,22 +5375,6 @@ node-pre-gyp@^0.6.36:
     tar "^2.2.1"
     tar-pack "^3.4.0"
 
-node-pre-gyp@^0.6.39:
-  version "0.6.39"
-  resolved "https://registry.yarnpkg.com/node-pre-gyp/-/node-pre-gyp-0.6.39.tgz#c00e96860b23c0e1420ac7befc5044e1d78d8649"
-  dependencies:
-    detect-libc "^1.0.2"
-    hawk "3.1.3"
-    mkdirp "^0.5.1"
-    nopt "^4.0.1"
-    npmlog "^4.0.2"
-    rc "^1.1.7"
-    request "2.81.0"
-    rimraf "^2.6.1"
-    semver "^5.3.0"
-    tar "^2.2.1"
-    tar-pack "^3.4.0"
-
 nopt@^4.0.1:
   version "4.0.1"
   resolved "https://registry.yarnpkg.com/nopt/-/nopt-4.0.1.tgz#d0d4685afd5415193c8c7505602d0d17cd64474d"
@@ -5891,10 +5725,6 @@ pbkdf2@^3.0.3:
     safe-buffer "^5.0.1"
     sha.js "^2.4.8"
 
-pend@~1.2.0:
-  version "1.2.0"
-  resolved "https://registry.yarnpkg.com/pend/-/pend-1.2.0.tgz#7a57eb550a6783f9115331fcf4663d5c8e007a50"
-
 percy-client@^2.1.0:
   version "2.1.3"
   resolved "https://registry.yarnpkg.com/percy-client/-/percy-client-2.1.3.tgz#63835b55046917428e29ae7fa4e445ba31ecc957"
@@ -5908,20 +5738,6 @@ performance-now@^0.2.0:
   version "0.2.0"
   resolved "https://registry.yarnpkg.com/performance-now/-/performance-now-0.2.0.tgz#33ef30c5c77d4ea21c5a53869d91b56d8f2555e5"
 
-phantomjs-prebuilt@2.1.14:
-  version "2.1.14"
-  resolved "https://registry.yarnpkg.com/phantomjs-prebuilt/-/phantomjs-prebuilt-2.1.14.tgz#d53d311fcfb7d1d08ddb24014558f1188c516da0"
-  dependencies:
-    es6-promise "~4.0.3"
-    extract-zip "~1.5.0"
-    fs-extra "~1.0.0"
-    hasha "~2.2.0"
-    kew "~0.7.0"
-    progress "~1.1.8"
-    request "~2.79.0"
-    request-progress "~2.0.1"
-    which "~1.2.10"
-
 pify@^2.0.0, pify@^2.3.0:
   version "2.3.0"
   resolved "https://registry.yarnpkg.com/pify/-/pify-2.3.0.tgz#ed141a6ac043a849ea588498e7dca8b15330e90c"
@@ -6308,10 +6124,6 @@ progress@^2.0.0:
   version "2.0.0"
   resolved "https://registry.yarnpkg.com/progress/-/progress-2.0.0.tgz#8a1be366bf8fc23db2bd23f10c6fe920b4389d1f"
 
-progress@~1.1.8:
-  version "1.1.8"
-  resolved "https://registry.yarnpkg.com/progress/-/progress-1.1.8.tgz#e260c78f6161cdd9b0e56cc3e0a85de17c7a57be"
-
 promise.prototype.finally@^3.0.0:
   version "3.0.0"
   resolved "https://registry.yarnpkg.com/promise.prototype.finally/-/promise.prototype.finally-3.0.0.tgz#afb1710ff2068562966f6d006d12c3107c7a4f39"
@@ -6390,10 +6202,6 @@ qs@^4.0.0:
   version "4.0.0"
   resolved "https://registry.yarnpkg.com/qs/-/qs-4.0.0.tgz#c31d9b74ec27df75e543a86c78728ed8d4623607"
 
-qs@~6.3.0:
-  version "6.3.2"
-  resolved "https://registry.yarnpkg.com/qs/-/qs-6.3.2.tgz#e75bd5f6e268122a2a0e0bda630b2550c166502c"
-
 query-string@2.4.2:
   version "2.4.2"
   resolved "https://registry.yarnpkg.com/query-string/-/query-string-2.4.2.tgz#7db0666420804baa92ae9f268962855a76143dfb"
@@ -6832,17 +6640,6 @@ readable-stream@^2.0.1, readable-stream@^2.0.2, readable-stream@^2.0.5, readable
     string_decoder "~1.0.3"
     util-deprecate "~1.0.1"
 
-readable-stream@~2.0.0:
-  version "2.0.6"
-  resolved "https://registry.yarnpkg.com/readable-stream/-/readable-stream-2.0.6.tgz#8f90341e68a53ccc928788dacfcd11b36eb9b78e"
-  dependencies:
-    core-util-is "~1.0.0"
-    inherits "~2.0.1"
-    isarray "~1.0.0"
-    process-nextick-args "~1.0.6"
-    string_decoder "~0.10.x"
-    util-deprecate "~1.0.1"
-
 readdirp@^2.0.0:
   version "2.1.0"
   resolved "https://registry.yarnpkg.com/readdirp/-/readdirp-2.1.0.tgz#4ed0ad060df3073300c48440373f72d1cc642d78"
@@ -6999,12 +6796,6 @@ repeating@^2.0.0:
   dependencies:
     is-finite "^1.0.0"
 
-request-progress@~2.0.1:
-  version "2.0.1"
-  resolved "https://registry.yarnpkg.com/request-progress/-/request-progress-2.0.1.tgz#5d36bb57961c673aa5b788dbc8141fdf23b44e08"
-  dependencies:
-    throttleit "^1.0.0"
-
 request-promise-core@1.1.1:
   version "1.1.1"
   resolved "https://registry.yarnpkg.com/request-promise-core/-/request-promise-core-1.1.1.tgz#3eee00b2c5aa83239cfb04c5700da36f81cd08b6"
@@ -7020,7 +6811,7 @@ request-promise@^4.1.1:
     stealthy-require "^1.1.0"
     tough-cookie ">=2.3.0"
 
-request@2.81.0, request@^2.40.0, request@^2.51.0, request@^2.79.0, request@^2.81.0:
+request@^2.40.0, request@^2.51.0, request@^2.79.0, request@^2.81.0:
   version "2.81.0"
   resolved "https://registry.yarnpkg.com/request/-/request-2.81.0.tgz#c6928946a0e06c5f8d6f8a9333469ffda46298a0"
   dependencies:
@@ -7047,31 +6838,6 @@ request@2.81.0, request@^2.40.0, request@^2.51.0, request@^2.79.0, request@^2.81
     tunnel-agent "^0.6.0"
     uuid "^3.0.0"
 
-request@~2.79.0:
-  version "2.79.0"
-  resolved "https://registry.yarnpkg.com/request/-/request-2.79.0.tgz#4dfe5bf6be8b8cdc37fcf93e04b65577722710de"
-  dependencies:
-    aws-sign2 "~0.6.0"
-    aws4 "^1.2.1"
-    caseless "~0.11.0"
-    combined-stream "~1.0.5"
-    extend "~3.0.0"
-    forever-agent "~0.6.1"
-    form-data "~2.1.1"
-    har-validator "~2.0.6"
-    hawk "~3.1.3"
-    http-signature "~1.1.0"
-    is-typedarray "~1.0.0"
-    isstream "~0.1.2"
-    json-stringify-safe "~5.0.1"
-    mime-types "~2.1.7"
-    oauth-sign "~0.8.1"
-    qs "~6.3.0"
-    stringstream "~0.0.4"
-    tough-cookie "~2.3.0"
-    tunnel-agent "~0.4.1"
-    uuid "^3.0.0"
-
 require-directory@^2.1.1:
   version "2.1.1"
   resolved "https://registry.yarnpkg.com/require-directory/-/require-directory-2.1.1.tgz#8c64ad5fd30dab1c976e2344ffe7f792a6a6df42"
@@ -7720,10 +7486,6 @@ throat@^4.0.0:
   version "4.1.0"
   resolved "https://registry.yarnpkg.com/throat/-/throat-4.1.0.tgz#89037cbc92c56ab18926e6ba4cbb200e15672a6a"
 
-throttleit@^1.0.0:
-  version "1.0.0"
-  resolved "https://registry.yarnpkg.com/throttleit/-/throttleit-1.0.0.tgz#9e785836daf46743145a5984b6268d828528ac6c"
-
 through@^2.3.6, through@^2.3.8:
   version "2.3.8"
   resolved "https://registry.yarnpkg.com/through/-/through-2.3.8.tgz#0dd4c9ffaabc357960b1b724115d7e0e86a2e1f5"
@@ -7806,10 +7568,6 @@ tunnel-agent@^0.6.0:
   dependencies:
     safe-buffer "^5.0.1"
 
-tunnel-agent@~0.4.1:
-  version "0.4.3"
-  resolved "https://registry.yarnpkg.com/tunnel-agent/-/tunnel-agent-0.4.3.tgz#6373db76909fe570e08d73583365ed828a74eeeb"
-
 tweetnacl@^0.14.3, tweetnacl@~0.14.0:
   version "0.14.5"
   resolved "https://registry.yarnpkg.com/tweetnacl/-/tweetnacl-0.14.5.tgz#5ae68177f192d4456269d108afa93ff8743f4f64"
@@ -7835,7 +7593,7 @@ type-is@~1.6.15:
     media-typer "0.3.0"
     mime-types "~2.1.15"
 
-typedarray@^0.0.6, typedarray@~0.0.5:
+typedarray@^0.0.6:
   version "0.0.6"
   resolved "https://registry.yarnpkg.com/typedarray/-/typedarray-0.0.6.tgz#867ac74e3864187b1d3d47d996a78ec5c8830777"
 
@@ -8192,7 +7950,7 @@ which-module@^2.0.0:
   version "2.0.0"
   resolved "https://registry.yarnpkg.com/which-module/-/which-module-2.0.0.tgz#d9ef07dce77b9902b8a3a8fa4b31c3e3f7e6e87a"
 
-which@^1.2.12, which@^1.2.9, which@~1.2.10:
+which@^1.2.12, which@^1.2.9:
   version "1.2.14"
   resolved "https://registry.yarnpkg.com/which/-/which-1.2.14.tgz#9a87c4378f03e827cecaf1acdf56c736c01c14e5"
   dependencies:
@@ -8234,7 +7992,7 @@ wrappy@1:
   version "1.0.2"
   resolved "https://registry.yarnpkg.com/wrappy/-/wrappy-1.0.2.tgz#b5243d8f3ec1aa35f1364605bc0d1036e30ab69f"
 
-write-file-atomic@^2.0.0:
+write-file-atomic@^2.0.0, write-file-atomic@^2.1.0:
   version "2.1.0"
   resolved "https://registry.yarnpkg.com/write-file-atomic/-/write-file-atomic-2.1.0.tgz#1769f4b551eedce419f0505deae2e26763542d37"
   dependencies:
@@ -8242,14 +8000,6 @@ write-file-atomic@^2.0.0:
     imurmurhash "^0.1.4"
     slide "^1.1.5"
 
-write-file-atomic@^2.1.0:
-  version "2.3.0"
-  resolved "https://registry.yarnpkg.com/write-file-atomic/-/write-file-atomic-2.3.0.tgz#1ff61575c2e2a4e8e510d6fa4e243cce183999ab"
-  dependencies:
-    graceful-fs "^4.1.11"
-    imurmurhash "^0.1.4"
-    signal-exit "^3.0.2"
-
 write@^0.2.1:
   version "0.2.1"
   resolved "https://registry.yarnpkg.com/write/-/write-0.2.1.tgz#5fc03828e264cea3fe91455476f7a3c566cb0757"
@@ -8375,12 +8125,6 @@ yargs@~3.10.0:
     decamelize "^1.0.0"
     window-size "0.1.0"
 
-yauzl@2.4.1:
-  version "2.4.1"
-  resolved "https://registry.yarnpkg.com/yauzl/-/yauzl-2.4.1.tgz#9528f442dab1b2284e58b4379bb194e22e0c4005"
-  dependencies:
-    fd-slicer "~1.0.1"
-
 zxcvbn@^4.4.2:
   version "4.4.2"
   resolved "https://registry.yarnpkg.com/zxcvbn/-/zxcvbn-4.4.2.tgz#28ec17cf09743edcab056ddd8b1b06262cc73c30"
