commit 7594ca04ea5d08daab4c3fc121509146bb5e99ab
Author: David Cramer <dcramer@gmail.com>
Date:   Thu Apr 16 22:47:16 2015 -0700

    Combine chart

diff --git a/src/sentry/templates/sentry/admin/stats.html b/src/sentry/templates/sentry/admin/stats.html
index f127f754ed..56a491423f 100644
--- a/src/sentry/templates/sentry/admin/stats.html
+++ b/src/sentry/templates/sentry/admin/stats.html
@@ -12,20 +12,159 @@
     <h2>{% trans "System Overview" %}</h2>
   </div>
 
-  <div class="row">
-    <div class="span6">
-      <h3>Total Events</h3>
-      <div class="chart" data-api-url="{% url 'sentry-api-0-internal-stats' %}?key=events.total"></div>
-    </div>
-    <div class="span6">
-      <h3>Dropped Events</h3>
-      <div class="chart" data-api-url="{% url 'sentry-api-0-internal-stats' %}?key=events.dropped"></div>
-    </div>
-  </div>
+  <h3>Event Throughput</h3>
+  <div id="chart" class="chart"></div>
 
   <script>
-    $('.chart').height('150px').each(function(){
-      Sentry.charts.render(this);
+  $(function(){
+    var $chart = $('#chart');
+    var $projectData = $('#project_data');
+    var rawData = {"events.total": null, "events.dropped": null};
+    var statsEndpoint = app.config.urlPrefix + '/api/0/internal/stats/';
+    var stats = {received: [], rejected: []};
+    var systemTotal = {received: 0, rejected: 0, accepted: 0};
+    var pendingRequests = 2;
+
+    $chart.height('250px');
+
+    $.each(rawData, function(statName, _) {
+      // query the organization stats via a separate call as its possible the project stats
+      // are too heavy
+      $.ajax({
+        url: statsEndpoint,
+        type: 'get',
+        dataType: 'json',
+        data: {
+          since: new Date().getTime() / 1000 - 3600 * 24 * 7,
+          resolution: '1h',
+          key: statName
+        },
+        success: function(data){
+          rawData[statName] = data;
+          requestFinished();
+        },
+        error: function(data) {
+          $chart.html('<div class="error">There was an error loading statistics.</div>');
+        }
+      });
     });
+
+    function requestFinished() {
+      if (rawData['events.total'] && rawData['events.dropped']) {
+        processData();
+        renderChart();
+      }
+    }
+
+    function processData() {
+      var oReceived = 0;
+      var oRejected = 0;
+      var sReceived = {};
+      var sRejected = {};
+      $.each(rawData['events.total'], function(idx, point){
+        var dReceived = point[1];
+        var dRejected = rawData['events.dropped'][idx][1];
+        var ts = point[0] * 1000;
+        if (sReceived[ts] === undefined) {
+          sReceived[ts] = dReceived;
+          sRejected[ts] = dRejected;
+        } else {
+          sReceived[ts] += dReceived;
+          sRejected[ts] += dRejected;
+        }
+        oReceived += dReceived;
+        oRejected += dRejected;
+      });
+      systemTotal.received = oReceived;
+      systemTotal.rejected = oRejected;
+      systemTotal.accepted = oReceived - oRejected;
+
+      stats.rejected = $.map(sRejected, function(value, ts) { return [[ts, value || null]]; });
+      stats.accepted = $.map(sReceived, function(value, ts) {
+        // total number of events accepted (received - rejected)
+        return [[ts, value - sRejected[ts]]];
+      });
+    }
+
+    function renderChart() {
+      var points = [
+        {
+          data: stats.accepted,
+          label: 'Stored',
+          color: 'rgba(86, 175, 232, 1)',
+          shadowSize: 0,
+          stack: true,
+          lines: {
+            lineWidth: 2,
+            show: true,
+            fill: true
+          }
+        },
+        {
+          data: stats.rejected,
+          color: 'rgba(244, 63, 32, 1)',
+          shadowSize: 0,
+          label: 'Dropped',
+          stack: true,
+          lines: {
+            lineWidth: 2,
+            show: true,
+            fill: true
+          }
+        }
+      ];
+
+      var options = {
+        xaxis: {
+          mode: "time",
+          minTickSize: [1, "day"],
+          tickFormatter: Sentry.charts.tickFormatter
+        },
+        yaxis: {
+          min: 0,
+          tickFormatter: function(value) {
+            if (value > 999999) {
+              return (value / 1000000) + 'mm';
+            }
+            if (value > 999) {
+              return (value / 1000) + 'k';
+            }
+            return value;
+          }
+        },
+        tooltip: true,
+        tooltipOpts: {
+          content: function(label, xval, yval, flotItem) {
+            xval = parseInt(xval, 10);
+            if(typeof yval.toLocaleString == "function") {
+                return yval.toLocaleString() + ' events ' + flotItem.series.label.toLowerCase() + '<br>' + moment(xval).format('llll');
+            }
+            return yval + ' events<br>' + moment(xval).format('llll');
+          },
+          defaultTheme: false
+        },
+        grid: {
+          show: true,
+          hoverable: true,
+          backgroundColor: '#ffffff',
+          borderColor: '#DEE3E9',
+          borderWidth: 2,
+          tickColor: '#f0f0f0'
+        },
+        hoverable: false,
+        legend: {
+            noColumns: 2,
+            position: 'nw'
+        },
+        lines: { show: false }
+      };
+
+      $.plot($chart, points, options);
+
+      $(window).resize(function(){
+        $.plot($chart, points, options);
+      });
+    }
+  });
   </script>
 {% endblock %}
