commit 23679d19747c37e2317b1c43375ea4b9d968b93d
Author: Armin Ronacher <armin.ronacher@active-4.com>
Date:   Wed Sep 19 17:21:17 2018 -0700

    fix(processing): Trim frames hard in stacktraces (#9824)

diff --git a/src/sentry/conf/server.py b/src/sentry/conf/server.py
index 115f9e3271..3b362be6bd 100644
--- a/src/sentry/conf/server.py
+++ b/src/sentry/conf/server.py
@@ -1035,7 +1035,10 @@ SENTRY_MAX_HTTP_BODY_SIZE = 4096 * 4  # 16kb
 SENTRY_MAX_DICTIONARY_ITEMS = 50
 
 SENTRY_MAX_MESSAGE_LENGTH = 1024 * 8
+# how many frames are fat
 SENTRY_MAX_STACKTRACE_FRAMES = 50
+# how many frames there can be at all
+SENTRY_STACKTRACE_FRAMES_HARD_LIMIT = 250
 SENTRY_MAX_EXCEPTIONS = 25
 
 # Gravatar service base url
diff --git a/src/sentry/interfaces/stacktrace.py b/src/sentry/interfaces/stacktrace.py
index 2e1fede89f..535653fd85 100644
--- a/src/sentry/interfaces/stacktrace.py
+++ b/src/sentry/interfaces/stacktrace.py
@@ -13,6 +13,7 @@ __all__ = ('Stacktrace', )
 import re
 import six
 import posixpath
+from itertools import islice, chain
 
 from django.conf import settings
 from django.utils.translation import ugettext as _
@@ -691,9 +692,16 @@ class Stacktrace(Interface):
         if not is_valid:
             raise InterfaceValidationError("Invalid stack frame data.")
 
+        # Trim down the frame list to a hard limit. Leave the last frame in place in case
+        # it's useful for debugging.
+        frameiter = data['frames']
+        if len(data['frames']) > settings.SENTRY_STACKTRACE_FRAMES_HARD_LIMIT:
+            frameiter = chain(
+                islice(data['frames'], settings.SENTRY_STACKTRACE_FRAMES_HARD_LIMIT - 1), (data['frames'][-1],))
+
         frame_list = [
             # XXX(dcramer): handle PHP sending an empty array for a frame
-            Frame.to_python(f or {}, raw=raw) for f in data['frames']
+            Frame.to_python(f or {}, raw=raw) for f in frameiter
         ]
 
         kwargs = {
diff --git a/tests/sentry/interfaces/test_stacktrace.py b/tests/sentry/interfaces/test_stacktrace.py
index 38f343f05a..90dc0fc99d 100644
--- a/tests/sentry/interfaces/test_stacktrace.py
+++ b/tests/sentry/interfaces/test_stacktrace.py
@@ -5,6 +5,7 @@ from __future__ import absolute_import
 import functools
 
 import mock
+from django.conf import settings
 from django.template.loader import render_to_string
 from exam import fixture
 
@@ -639,6 +640,26 @@ class StacktraceTest(TestCase):
             'io.sentry.example.Application', 'throwError'
         ])
 
+    def test_frame_hard_limit(self):
+        hard_limit = settings.SENTRY_STACKTRACE_FRAMES_HARD_LIMIT
+        interface = Stacktrace.to_python(
+            {
+                'frames': [
+                    {
+                        'filename': 'Application.java',
+                        'function': 'main',
+                        'lineno': i,  # linenos from 1 to the hard limit + 1
+                    } for i in range(1, hard_limit + 2)
+                ]
+            }
+        )
+
+        assert len(interface.frames) == hard_limit
+        assert interface.frames[0].lineno == 1
+        assert interface.frames[-1].lineno == hard_limit + 1
+        # second to last frame (lineno:250) should be removed
+        assert interface.frames[-2].lineno == hard_limit - 1
+
     def test_get_hash_ignores_safari_native_code(self):
         interface = Frame.to_python(
             {
