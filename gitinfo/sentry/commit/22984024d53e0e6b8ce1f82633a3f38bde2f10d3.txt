commit 22984024d53e0e6b8ce1f82633a3f38bde2f10d3
Author: Billy Vong <billyvg@users.noreply.github.com>
Date:   Thu Jan 30 15:03:31 2020 -0800

    ref(workflow): Rename `Incidents` to `Alerts` (#16679)
    
    * Renames current route to `/organizations/orgId/alerts`
    * Renames directory from `app/views/incidents` to `app/views/alerts`
    * Renames route parameter from `incidentId` to `alertId`

diff --git a/src/sentry/static/sentry/app/actionCreators/incident.jsx b/src/sentry/static/sentry/app/actionCreators/incident.jsx
index 4f5aad6e97..d2fb7b1722 100644
--- a/src/sentry/static/sentry/app/actionCreators/incident.jsx
+++ b/src/sentry/static/sentry/app/actionCreators/incident.jsx
@@ -4,17 +4,17 @@ import {t} from 'app/locale';
 /**
  * Fetches a list of activities for an incident
  */
-export async function fetchIncidentActivities(api, orgId, incidentId) {
-  return api.requestPromise(`/organizations/${orgId}/incidents/${incidentId}/activity/`);
+export async function fetchIncidentActivities(api, orgId, alertId) {
+  return api.requestPromise(`/organizations/${orgId}/incidents/${alertId}/activity/`);
 }
 
 /**
  * Creates a note for an incident
  */
-export async function createIncidentNote(api, orgId, incidentId, note) {
+export async function createIncidentNote(api, orgId, alertId, note) {
   try {
     const result = await api.requestPromise(
-      `/organizations/${orgId}/incidents/${incidentId}/comments/`,
+      `/organizations/${orgId}/incidents/${alertId}/comments/`,
       {
         method: 'POST',
         data: {
@@ -34,10 +34,10 @@ export async function createIncidentNote(api, orgId, incidentId, note) {
 /**
  * Deletes a note for an incident
  */
-export async function deleteIncidentNote(api, orgId, incidentId, noteId) {
+export async function deleteIncidentNote(api, orgId, alertId, noteId) {
   try {
     const result = await api.requestPromise(
-      `/organizations/${orgId}/incidents/${incidentId}/comments/${noteId}/`,
+      `/organizations/${orgId}/incidents/${alertId}/comments/${noteId}/`,
       {
         method: 'DELETE',
       }
@@ -53,10 +53,10 @@ export async function deleteIncidentNote(api, orgId, incidentId, noteId) {
 /**
  * Updates a note for an incident
  */
-export async function updateIncidentNote(api, orgId, incidentId, noteId, note) {
+export async function updateIncidentNote(api, orgId, alertId, noteId, note) {
   try {
     const result = await api.requestPromise(
-      `/organizations/${orgId}/incidents/${incidentId}/comments/${noteId}/`,
+      `/organizations/${orgId}/incidents/${alertId}/comments/${noteId}/`,
       {
         method: 'PUT',
         data: {
diff --git a/src/sentry/static/sentry/app/components/sidebar/index.jsx b/src/sentry/static/sentry/app/components/sidebar/index.jsx
index 0c10567714..abd863624d 100644
--- a/src/sentry/static/sentry/app/components/sidebar/index.jsx
+++ b/src/sentry/static/sentry/app/components/sidebar/index.jsx
@@ -321,14 +321,14 @@ class Sidebar extends React.Component {
                       {...sidebarItemProps}
                       onClick={(_id, evt) =>
                         this.navigateWithGlobalSelection(
-                          `/organizations/${organization.slug}/incidents/`,
+                          `/organizations/${organization.slug}/alerts/`,
                           evt
                         )
                       }
                       icon={<InlineSvg src="icon-siren" size="22" />}
-                      label={t('Incidents')}
-                      to={`/organizations/${organization.slug}/incidents/`}
-                      id="incidents"
+                      label={t('Alerts')}
+                      to={`/organizations/${organization.slug}/alerts/`}
+                      id="alerts"
                     />
                   </Feature>
 
diff --git a/src/sentry/static/sentry/app/routes.jsx b/src/sentry/static/sentry/app/routes.jsx
index bc981a4e34..c27c0a7de3 100644
--- a/src/sentry/static/sentry/app/routes.jsx
+++ b/src/sentry/static/sentry/app/routes.jsx
@@ -1522,25 +1522,23 @@ function routes() {
             />
           </Route>
           <Route
-            path="/organizations/:orgId/incidents/"
+            path="/organizations/:orgId/alerts/"
             componentPromise={() =>
-              import(/* webpackChunkName: "IncidentsContainer" */ 'app/views/incidents')
+              import(/* webpackChunkName: "AlertsContainer" */ 'app/views/alerts')
             }
             component={errorHandler(LazyLoad)}
           >
             <IndexRoute
               componentPromise={() =>
-                import(/* webpackChunkName: "Incidents" */ 'app/views/incidents/list')
+                import(/* webpackChunkName: "AlertsList" */ 'app/views/alerts/list')
               }
               component={errorHandler(LazyLoad)}
             />
 
             <Route
-              path=":incidentId/"
+              path=":alertId/"
               componentPromise={() =>
-                import(
-                  /* webpackChunkName: "IncidentDetails" */ 'app/views/incidents/details'
-                )
+                import(/* webpackChunkName: "AlertsDetails" */ 'app/views/alerts/details')
               }
               component={errorHandler(LazyLoad)}
             />
diff --git a/src/sentry/static/sentry/app/views/incidents/details/activity/activity.tsx b/src/sentry/static/sentry/app/views/alerts/details/activity/activity.tsx
similarity index 97%
rename from src/sentry/static/sentry/app/views/incidents/details/activity/activity.tsx
rename to src/sentry/static/sentry/app/views/alerts/details/activity/activity.tsx
index 029fa17ea4..be4ea3a658 100644
--- a/src/sentry/static/sentry/app/views/incidents/details/activity/activity.tsx
+++ b/src/sentry/static/sentry/app/views/alerts/details/activity/activity.tsx
@@ -21,7 +21,7 @@ import StatusItem from './statusItem';
 
 type Props = {
   api: Client;
-  incidentId: string;
+  alertId: string;
   incident?: Incident;
   loading: boolean;
   error: boolean;
@@ -40,7 +40,7 @@ type Props = {
 
 /**
  * Activity component on Incident Details view
- * Allows user to leave a comment on an incidentId as well as
+ * Allows user to leave a comment on an alertId as well as
  * fetch and render existing activity items.
  */
 class Activity extends React.Component<Props> {
@@ -59,7 +59,7 @@ class Activity extends React.Component<Props> {
       loading,
       error,
       me,
-      incidentId,
+      alertId,
       incident,
       activities,
       noteInputId,
@@ -86,7 +86,7 @@ class Activity extends React.Component<Props> {
             <NoteInputWithStorage
               key={noteInputId}
               storageKey="incidentIdinput"
-              itemKey={incidentId}
+              itemKey={alertId}
               onCreate={onCreateNote}
               busy={createBusy}
               error={createError}
diff --git a/src/sentry/static/sentry/app/views/incidents/details/activity/activityPlaceholder.tsx b/src/sentry/static/sentry/app/views/alerts/details/activity/activityPlaceholder.tsx
similarity index 100%
rename from src/sentry/static/sentry/app/views/incidents/details/activity/activityPlaceholder.tsx
rename to src/sentry/static/sentry/app/views/alerts/details/activity/activityPlaceholder.tsx
diff --git a/src/sentry/static/sentry/app/views/incidents/details/activity/dateDivider.tsx b/src/sentry/static/sentry/app/views/alerts/details/activity/dateDivider.tsx
similarity index 100%
rename from src/sentry/static/sentry/app/views/incidents/details/activity/dateDivider.tsx
rename to src/sentry/static/sentry/app/views/alerts/details/activity/dateDivider.tsx
diff --git a/src/sentry/static/sentry/app/views/incidents/details/activity/index.tsx b/src/sentry/static/sentry/app/views/alerts/details/activity/index.tsx
similarity index 91%
rename from src/sentry/static/sentry/app/views/incidents/details/activity/index.tsx
rename to src/sentry/static/sentry/app/views/alerts/details/activity/index.tsx
index 71ac037304..784fe87644 100644
--- a/src/sentry/static/sentry/app/views/incidents/details/activity/index.tsx
+++ b/src/sentry/static/sentry/app/views/alerts/details/activity/index.tsx
@@ -48,7 +48,7 @@ type State = {
 
 /**
  * Activity component on Incident Details view
- * Allows user to leave a comment on an incidentId as well as
+ * Allows user to leave a comment on an alertId as well as
  * fetch and render existing activity items.
  */
 class ActivityContainer extends React.PureComponent<Props, State> {
@@ -83,10 +83,10 @@ class ActivityContainer extends React.PureComponent<Props, State> {
 
   async fetchData() {
     const {api, params} = this.props;
-    const {incidentId, orgId} = params;
+    const {alertId, orgId} = params;
 
     try {
-      const activities = await fetchIncidentActivities(api, orgId, incidentId);
+      const activities = await fetchIncidentActivities(api, orgId, alertId);
       this.setState({activities, loading: false});
     } catch (err) {
       this.setState({loading: false, error: !!err});
@@ -95,7 +95,7 @@ class ActivityContainer extends React.PureComponent<Props, State> {
 
   handleCreateNote = async (note: NoteType) => {
     const {api, params} = this.props;
-    const {incidentId, orgId} = params;
+    const {alertId, orgId} = params;
 
     const newActivity: ActivityTypeDraft = {
       comment: note.text,
@@ -103,7 +103,7 @@ class ActivityContainer extends React.PureComponent<Props, State> {
       dateCreated: new Date().toISOString(),
       user: ConfigStore.get('user'),
       id: uniqueId(),
-      incidentIdentifier: incidentId,
+      incidentIdentifier: alertId,
     };
 
     this.setState(state => ({
@@ -116,7 +116,7 @@ class ActivityContainer extends React.PureComponent<Props, State> {
     }));
 
     try {
-      const newNote = await createIncidentNote(api, orgId, incidentId, note);
+      const newNote = await createIncidentNote(api, orgId, alertId, note);
 
       this.setState(state => {
         // Update activities to replace our fake new activity with activity object from server
@@ -160,7 +160,7 @@ class ActivityContainer extends React.PureComponent<Props, State> {
 
   handleDeleteNote = async (activity: ActivityType | ActivityTypeDraft) => {
     const {api, params} = this.props;
-    const {incidentId, orgId} = params;
+    const {alertId, orgId} = params;
 
     const [index, oldActivity] = this.getIndexAndActivityFromState(activity);
 
@@ -169,7 +169,7 @@ class ActivityContainer extends React.PureComponent<Props, State> {
     }));
 
     try {
-      await deleteIncidentNote(api, orgId, incidentId, activity.id);
+      await deleteIncidentNote(api, orgId, alertId, activity.id);
     } catch (error) {
       this.setState(state => ({
         activities: replaceAtArrayIndex(state.activities!, index, oldActivity),
@@ -182,7 +182,7 @@ class ActivityContainer extends React.PureComponent<Props, State> {
     activity: ActivityType | ActivityTypeDraft
   ) => {
     const {api, params} = this.props;
-    const {incidentId, orgId} = params;
+    const {alertId, orgId} = params;
 
     const [index, oldActivity] = this.getIndexAndActivityFromState(activity);
 
@@ -194,7 +194,7 @@ class ActivityContainer extends React.PureComponent<Props, State> {
     }));
 
     try {
-      await updateIncidentNote(api, orgId, incidentId, activity.id, note);
+      await updateIncidentNote(api, orgId, alertId, activity.id, note);
     } catch (error) {
       this.setState(state => ({
         activities: replaceAtArrayIndex(state.activities!, index, oldActivity),
@@ -204,13 +204,13 @@ class ActivityContainer extends React.PureComponent<Props, State> {
 
   render() {
     const {api, params, ...props} = this.props;
-    const {incidentId} = params;
+    const {alertId} = params;
     const me = ConfigStore.get('user');
 
     return (
       <Activity
         noteInputId={this.state.noteInputId}
-        incidentId={incidentId}
+        alertId={alertId}
         me={me}
         api={api}
         {...this.state}
diff --git a/src/sentry/static/sentry/app/views/incidents/details/activity/statusItem.tsx b/src/sentry/static/sentry/app/views/alerts/details/activity/statusItem.tsx
similarity index 100%
rename from src/sentry/static/sentry/app/views/incidents/details/activity/statusItem.tsx
rename to src/sentry/static/sentry/app/views/alerts/details/activity/statusItem.tsx
diff --git a/src/sentry/static/sentry/app/views/incidents/details/body.tsx b/src/sentry/static/sentry/app/views/alerts/details/body.tsx
similarity index 98%
rename from src/sentry/static/sentry/app/views/incidents/details/body.tsx
rename to src/sentry/static/sentry/app/views/alerts/details/body.tsx
index 1907211cdf..02118231ab 100644
--- a/src/sentry/static/sentry/app/views/incidents/details/body.tsx
+++ b/src/sentry/static/sentry/app/views/alerts/details/body.tsx
@@ -6,7 +6,7 @@ import {AlertRuleThresholdType, Trigger} from 'app/views/settings/incidentRules/
 import {NewQuery, Project} from 'app/types';
 import {PageContent} from 'app/styles/organization';
 import {defined} from 'app/utils';
-import {getDisplayForAlertRuleAggregation} from 'app/views/incidents/utils';
+import {getDisplayForAlertRuleAggregation} from 'app/views/alerts/utils';
 import {t} from 'app/locale';
 import Duration from 'app/components/duration';
 import EventView from 'app/views/eventsV2/eventView';
@@ -27,7 +27,7 @@ import SideHeader from './sideHeader';
 
 type Props = {
   incident?: Incident;
-} & RouteComponentProps<{incidentId: string; orgId: string}, {}>;
+} & RouteComponentProps<{alertId: string; orgId: string}, {}>;
 
 export default class DetailsBody extends React.Component<Props> {
   getDiscoverUrl(projects: Project[]) {
diff --git a/src/sentry/static/sentry/app/views/incidents/details/chart.tsx b/src/sentry/static/sentry/app/views/alerts/details/chart.tsx
similarity index 97%
rename from src/sentry/static/sentry/app/views/incidents/details/chart.tsx
rename to src/sentry/static/sentry/app/views/alerts/details/chart.tsx
index 0040b69e0d..ce3d662af4 100644
--- a/src/sentry/static/sentry/app/views/incidents/details/chart.tsx
+++ b/src/sentry/static/sentry/app/views/alerts/details/chart.tsx
@@ -2,7 +2,7 @@ import React from 'react';
 import moment from 'moment';
 
 import {AlertRuleAggregations} from 'app/views/settings/incidentRules/types';
-import {getDisplayForAlertRuleAggregation} from 'app/views/incidents/utils';
+import {getDisplayForAlertRuleAggregation} from 'app/views/alerts/utils';
 import {t} from 'app/locale';
 import LineChart from 'app/components/charts/lineChart';
 import MarkPoint from 'app/components/charts/components/markPoint';
diff --git a/src/sentry/static/sentry/app/views/incidents/details/closedSymbol.tsx b/src/sentry/static/sentry/app/views/alerts/details/closedSymbol.tsx
similarity index 100%
rename from src/sentry/static/sentry/app/views/incidents/details/closedSymbol.tsx
rename to src/sentry/static/sentry/app/views/alerts/details/closedSymbol.tsx
diff --git a/src/sentry/static/sentry/app/views/incidents/details/detectedSymbol.tsx b/src/sentry/static/sentry/app/views/alerts/details/detectedSymbol.tsx
similarity index 100%
rename from src/sentry/static/sentry/app/views/incidents/details/detectedSymbol.tsx
rename to src/sentry/static/sentry/app/views/alerts/details/detectedSymbol.tsx
diff --git a/src/sentry/static/sentry/app/views/incidents/details/header.tsx b/src/sentry/static/sentry/app/views/alerts/details/header.tsx
similarity index 98%
rename from src/sentry/static/sentry/app/views/incidents/details/header.tsx
rename to src/sentry/static/sentry/app/views/alerts/details/header.tsx
index f5c24e4fed..ba18cea5c3 100644
--- a/src/sentry/static/sentry/app/views/incidents/details/header.tsx
+++ b/src/sentry/static/sentry/app/views/alerts/details/header.tsx
@@ -94,8 +94,8 @@ export default class DetailsHeader extends React.Component<Props> {
       <Header>
         <PageHeading>
           <Breadcrumb>
-            <IncidentsLink to={`/organizations/${params.orgId}/incidents/`}>
-              {t('Incidents')}
+            <IncidentsLink to={`/organizations/${params.orgId}/alerts/`}>
+              {t('Alerts')}
             </IncidentsLink>
             {dateStarted && (
               <React.Fragment>
diff --git a/src/sentry/static/sentry/app/views/incidents/details/index.tsx b/src/sentry/static/sentry/app/views/alerts/details/index.tsx
similarity index 89%
rename from src/sentry/static/sentry/app/views/incidents/details/index.tsx
rename to src/sentry/static/sentry/app/views/alerts/details/index.tsx
index c91d815127..8b3bed03df 100644
--- a/src/sentry/static/sentry/app/views/incidents/details/index.tsx
+++ b/src/sentry/static/sentry/app/views/alerts/details/index.tsx
@@ -15,7 +15,7 @@ import {IncidentStatus, Incident} from '../types';
 
 type Props = {
   api: Client;
-} & RouteComponentProps<{incidentId: string; orgId: string}, {}>;
+} & RouteComponentProps<{alertId: string; orgId: string}, {}>;
 
 type State = {
   isLoading: boolean;
@@ -37,11 +37,11 @@ class IncidentDetails extends React.Component<Props, State> {
 
     const {
       api,
-      params: {orgId, incidentId},
+      params: {orgId, alertId},
     } = this.props;
 
     try {
-      const incident = await fetchIncident(api, orgId, incidentId);
+      const incident = await fetchIncident(api, orgId, alertId);
       this.setState({incident, isLoading: false, hasError: false});
       markIncidentAsSeen(api, orgId, incident);
     } catch (_err) {
@@ -52,7 +52,7 @@ class IncidentDetails extends React.Component<Props, State> {
   handleSubscriptionChange = async () => {
     const {
       api,
-      params: {orgId, incidentId},
+      params: {orgId, alertId},
     } = this.props;
 
     if (!this.state.incident) {
@@ -68,7 +68,7 @@ class IncidentDetails extends React.Component<Props, State> {
     }));
 
     try {
-      updateSubscription(api, orgId, incidentId, newIsSubscribed);
+      updateSubscription(api, orgId, alertId, newIsSubscribed);
     } catch (_err) {
       this.setState(state => ({
         incident: {...(state.incident as Incident), isSubscribed},
@@ -80,7 +80,7 @@ class IncidentDetails extends React.Component<Props, State> {
   handleStatusChange = async () => {
     const {
       api,
-      params: {orgId, incidentId},
+      params: {orgId, alertId},
     } = this.props;
 
     if (!this.state.incident) {
@@ -98,7 +98,7 @@ class IncidentDetails extends React.Component<Props, State> {
     }));
 
     try {
-      const incident = await updateStatus(api, orgId, incidentId, newStatus);
+      const incident = await updateStatus(api, orgId, alertId, newStatus);
       // Update entire incident object because updating status can cause other parts
       // of the model to change (e.g close date)
       this.setState({incident});
diff --git a/src/sentry/static/sentry/app/views/incidents/details/sideHeader.tsx b/src/sentry/static/sentry/app/views/alerts/details/sideHeader.tsx
similarity index 100%
rename from src/sentry/static/sentry/app/views/incidents/details/sideHeader.tsx
rename to src/sentry/static/sentry/app/views/alerts/details/sideHeader.tsx
diff --git a/src/sentry/static/sentry/app/views/incidents/index.tsx b/src/sentry/static/sentry/app/views/alerts/index.tsx
similarity index 100%
rename from src/sentry/static/sentry/app/views/incidents/index.tsx
rename to src/sentry/static/sentry/app/views/alerts/index.tsx
diff --git a/src/sentry/static/sentry/app/views/incidents/list/index.tsx b/src/sentry/static/sentry/app/views/alerts/list/index.tsx
similarity index 98%
rename from src/sentry/static/sentry/app/views/incidents/list/index.tsx
rename to src/sentry/static/sentry/app/views/alerts/list/index.tsx
index 88712cf077..086cdf7437 100644
--- a/src/sentry/static/sentry/app/views/incidents/list/index.tsx
+++ b/src/sentry/static/sentry/app/views/alerts/list/index.tsx
@@ -60,7 +60,7 @@ class IncidentsList extends AsyncComponent<Props, State & AsyncComponent['state'
       <IncidentPanelItem key={incident.id}>
         <TableLayout>
           <TitleAndSparkLine>
-            <Link to={`/organizations/${orgId}/incidents/${incident.identifier}/`}>
+            <Link to={`/organizations/${orgId}/alerts/${incident.identifier}/`}>
               {incident.title}
             </Link>
             <SparkLine incident={incident} />
@@ -183,7 +183,7 @@ class IncidentsListContainer extends React.Component<Props> {
                   size="small"
                   className={'btn' + (status === '' ? ' active' : '')}
                 >
-                  {t('All Incidents')}
+                  {t('All Alerts')}
                 </Button>
                 <Button
                   to={{pathname, query: openIncidentsQuery}}
diff --git a/src/sentry/static/sentry/app/views/incidents/list/sparkLine.tsx b/src/sentry/static/sentry/app/views/alerts/list/sparkLine.tsx
similarity index 96%
rename from src/sentry/static/sentry/app/views/incidents/list/sparkLine.tsx
rename to src/sentry/static/sentry/app/views/alerts/list/sparkLine.tsx
index 6cef8579b2..dd7185815e 100644
--- a/src/sentry/static/sentry/app/views/incidents/list/sparkLine.tsx
+++ b/src/sentry/static/sentry/app/views/alerts/list/sparkLine.tsx
@@ -4,7 +4,7 @@ import styled from '@emotion/styled';
 import Placeholder from 'app/components/placeholder';
 import SentryTypes from 'app/sentryTypes';
 import theme from 'app/utils/theme';
-import {Incident} from 'app/views/incidents/types';
+import {Incident} from 'app/views/alerts/types';
 
 // Height of sparkline
 const SPARKLINE_HEIGHT = 38;
diff --git a/src/sentry/static/sentry/app/views/incidents/status.tsx b/src/sentry/static/sentry/app/views/alerts/status.tsx
similarity index 100%
rename from src/sentry/static/sentry/app/views/incidents/status.tsx
rename to src/sentry/static/sentry/app/views/alerts/status.tsx
diff --git a/src/sentry/static/sentry/app/views/incidents/types.tsx b/src/sentry/static/sentry/app/views/alerts/types.tsx
similarity index 100%
rename from src/sentry/static/sentry/app/views/incidents/types.tsx
rename to src/sentry/static/sentry/app/views/alerts/types.tsx
diff --git a/src/sentry/static/sentry/app/views/incidents/utils.tsx b/src/sentry/static/sentry/app/views/alerts/utils.tsx
similarity index 89%
rename from src/sentry/static/sentry/app/views/incidents/utils.tsx
rename to src/sentry/static/sentry/app/views/alerts/utils.tsx
index a4eeaee317..a3a84fb505 100644
--- a/src/sentry/static/sentry/app/views/incidents/utils.tsx
+++ b/src/sentry/static/sentry/app/views/alerts/utils.tsx
@@ -7,20 +7,20 @@ import {Incident, IncidentStatus} from './types';
 export function fetchIncident(
   api: Client,
   orgId: string,
-  incidentId: string
+  alertId: string
 ): Promise<Incident> {
-  return api.requestPromise(`/organizations/${orgId}/incidents/${incidentId}/`);
+  return api.requestPromise(`/organizations/${orgId}/incidents/${alertId}/`);
 }
 
 export function updateSubscription(
   api: Client,
   orgId: string,
-  incidentId: string,
+  alertId: string,
   isSubscribed?: boolean
 ): Promise<Incident> {
   const method = isSubscribed ? 'POST' : 'DELETE';
   return api.requestPromise(
-    `/organizations/${orgId}/incidents/${incidentId}/subscriptions/`,
+    `/organizations/${orgId}/incidents/${alertId}/subscriptions/`,
     {
       method,
     }
@@ -30,10 +30,10 @@ export function updateSubscription(
 export function updateStatus(
   api: Client,
   orgId: string,
-  incidentId: string,
+  alertId: string,
   status: IncidentStatus
 ): Promise<Incident> {
-  return api.requestPromise(`/organizations/${orgId}/incidents/${incidentId}/`, {
+  return api.requestPromise(`/organizations/${orgId}/incidents/${alertId}/`, {
     method: 'PUT',
     data: {
       status,
diff --git a/src/sentry/static/sentry/app/views/organizationGroupDetails/groupActivity.jsx b/src/sentry/static/sentry/app/views/organizationGroupDetails/groupActivity.jsx
index 6b513a1b09..c2655357a0 100644
--- a/src/sentry/static/sentry/app/views/organizationGroupDetails/groupActivity.jsx
+++ b/src/sentry/static/sentry/app/views/organizationGroupDetails/groupActivity.jsx
@@ -53,7 +53,7 @@ class GroupActivity extends React.Component {
   };
 
   /**
-   * Note: This is nearly the same logic as `app/views/incidents/details/activity`
+   * Note: This is nearly the same logic as `app/views/alerts/details/activity`
    * This can be abstracted a bit if we create more objects that can have activities
    */
   handleNoteCreate = async note => {
diff --git a/tests/acceptance/test_incidents.py b/tests/acceptance/test_incidents.py
index 6c2f58e97e..d07940bd59 100644
--- a/tests/acceptance/test_incidents.py
+++ b/tests/acceptance/test_incidents.py
@@ -18,7 +18,7 @@ class OrganizationIncidentsListTest(AcceptanceTestCase, SnubaTestCase):
     def setUp(self):
         super(OrganizationIncidentsListTest, self).setUp()
         self.login_as(self.user)
-        self.path = u"/organizations/{}/incidents/".format(self.organization.slug)
+        self.path = u"/organizations/{}/alerts/".format(self.organization.slug)
 
     def test_empty_incidents(self):
         with self.feature(FEATURE_NAME):
@@ -56,7 +56,7 @@ class OrganizationIncidentsListTest(AcceptanceTestCase, SnubaTestCase):
             self.browser.wait_until_test_id("incident-sparkline")
             self.browser.snapshot("incidents - list")
 
-            details_url = u'[href="/organizations/{}/incidents/{}/'.format(
+            details_url = u'[href="/organizations/{}/alerts/{}/'.format(
                 self.organization.slug, incident.identifier
             )
             self.browser.wait_until(details_url)
diff --git a/tests/js/spec/views/incidents/details/activity.spec.jsx b/tests/js/spec/views/incidents/details/activity.spec.jsx
index e51d645841..b3e4ac7d3f 100644
--- a/tests/js/spec/views/incidents/details/activity.spec.jsx
+++ b/tests/js/spec/views/incidents/details/activity.spec.jsx
@@ -2,7 +2,7 @@ import React from 'react';
 import {mountWithTheme} from 'sentry-test/enzyme';
 
 import {initializeOrg} from 'sentry-test/initializeOrg';
-import IncidentActivity from 'app/views/incidents/details/activity';
+import IncidentActivity from 'app/views/alerts/details/activity';
 import changeReactMentionsInput from 'sentry-test/changeReactMentionsInput';
 
 describe('IncidentDetails -> Activity', function() {
@@ -25,7 +25,7 @@ describe('IncidentDetails -> Activity', function() {
   const createWrapper = props =>
     mountWithTheme(
       <IncidentActivity
-        params={{incidentId: incident.identifier, orgId: organization.slug}}
+        params={{alertId: incident.identifier, orgId: organization.slug}}
         {...props}
       />,
       routerContext
diff --git a/tests/js/spec/views/incidents/details/index.spec.jsx b/tests/js/spec/views/incidents/details/index.spec.jsx
index 24b21260a4..1e03ad0f32 100644
--- a/tests/js/spec/views/incidents/details/index.spec.jsx
+++ b/tests/js/spec/views/incidents/details/index.spec.jsx
@@ -2,11 +2,11 @@ import {mountWithTheme} from 'sentry-test/enzyme';
 import React from 'react';
 
 import {initializeOrg} from 'sentry-test/initializeOrg';
-import IncidentDetails from 'app/views/incidents/details';
+import IncidentDetails from 'app/views/alerts/details';
 import ProjectsStore from 'app/stores/projectsStore';
 
 describe('IncidentDetails', function() {
-  const params = {orgId: 'org-slug', incidentId: '123'};
+  const params = {orgId: 'org-slug', alertId: '123'};
   const {organization, project, routerContext} = initializeOrg({
     router: {
       params,
@@ -88,7 +88,7 @@ describe('IncidentDetails', function() {
   });
 
   it('handles invalid incident', async function() {
-    const wrapper = createWrapper({params: {orgId: 'org-slug', incidentId: '456'}});
+    const wrapper = createWrapper({params: {orgId: 'org-slug', alertId: '456'}});
     await tick();
     wrapper.update();
 
diff --git a/tests/js/spec/views/incidents/index.spec.jsx b/tests/js/spec/views/incidents/index.spec.jsx
index 9ece1adf1e..2f034c9f86 100644
--- a/tests/js/spec/views/incidents/index.spec.jsx
+++ b/tests/js/spec/views/incidents/index.spec.jsx
@@ -1,7 +1,7 @@
 import React from 'react';
 import {mountWithTheme} from 'sentry-test/enzyme';
 
-import IncidentsContainer from 'app/views/incidents';
+import IncidentsContainer from 'app/views/alerts';
 
 describe('IncidentsContainer', function() {
   describe('no access without feature flag', function() {
diff --git a/tests/js/spec/views/incidents/list/index.spec.jsx b/tests/js/spec/views/incidents/list/index.spec.jsx
index 9bc6ee13e7..2230da333b 100644
--- a/tests/js/spec/views/incidents/list/index.spec.jsx
+++ b/tests/js/spec/views/incidents/list/index.spec.jsx
@@ -3,7 +3,7 @@ import {mountWithTheme} from 'sentry-test/enzyme';
 
 import {initializeOrg} from 'sentry-test/initializeOrg';
 
-import IncidentsList from 'app/views/incidents/list';
+import IncidentsList from 'app/views/alerts/list';
 
 describe('IncidentsList', function() {
   const {routerContext} = initializeOrg();
