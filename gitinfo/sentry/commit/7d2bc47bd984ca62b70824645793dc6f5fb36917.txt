commit 7d2bc47bd984ca62b70824645793dc6f5fb36917
Author: David Cramer <dcramer@gmail.com>
Date:   Thu Nov 15 02:46:03 2012 -0800

    Improve rendering behavior and correct issue where el was inserting before itself (wat)

diff --git a/src/sentry/static/sentry/coffee/views.coffee b/src/sentry/static/sentry/coffee/views.coffee
index cedd4fc879..8c14637f9e 100644
--- a/src/sentry/static/sentry/coffee/views.coffee
+++ b/src/sentry/static/sentry/coffee/views.coffee
@@ -71,8 +71,10 @@ jQuery ->
 
         updateMember: (member) ->
             obj = @collection.get(member.id)
-            obj.set('count', member.get('count'))
-            obj.set('score', member.get('score'))
+            if member.get('count') != obj.get('count')
+                obj.set('count', member.get('count'))
+            if member.get('score') != obj.get('score')
+                obj.set('score', member.get('score'))
 
             @collection.sort()
 
@@ -105,8 +107,11 @@ jQuery ->
                 $rel = $('#' + @id + @collection.at(new_pos).id)
                 if !$rel.length
                     @$parent.append($el)
-                else
+                # TODO: why do we get here?
+                else if $el.id != $rel.id
                     $el.insertBefore($rel)
+                else
+                    return
 
             $el.find('.sparkline').each (_, el) =>
                 $(el).sparkline 'html'
@@ -116,8 +121,6 @@ jQuery ->
             if @loaded
                 $el.css('background-color', '#ddd').animate({backgroundColor: '#fff'}, 1200)
 
-
-
         renderMember: (member) ->
             view = new GroupView
                 model: member
@@ -154,7 +157,9 @@ jQuery ->
             if !@queue.length
                 return
 
-            @addMember(@queue.pop())
+            item = @queue.pop()
+            if @config.realtime
+                @addMember(item)
 
         poll: ->
             if !@config.realtime
@@ -255,4 +260,6 @@ jQuery ->
             'level-' + obj.get('levelName')
 
         updateCount: (obj) ->
-            $('.count span', this.$el).text @model.get("count")
+            counter = @$el.find('.count span')
+            counter.text(@model.get("count"))
+            counter.css('opacity', 0.3).animate({opacity: 1.0}, 1200)
diff --git a/src/sentry/static/sentry/scripts/site.js b/src/sentry/static/sentry/scripts/site.js
index 3267336ad0..9cbba8659b 100644
--- a/src/sentry/static/sentry/scripts/site.js
+++ b/src/sentry/static/sentry/scripts/site.js
@@ -514,8 +514,12 @@
       OrderedElementsView.prototype.updateMember = function(member) {
         var obj;
         obj = this.collection.get(member.id);
-        obj.set('count', member.get('count'));
-        obj.set('score', member.get('score'));
+        if (member.get('count') !== obj.get('count')) {
+          obj.set('count', member.get('count'));
+        }
+        if (member.get('score') !== obj.get('score')) {
+          obj.set('score', member.get('score'));
+        }
         return this.collection.sort();
       };
 
@@ -544,8 +548,10 @@
           $rel = $('#' + this.id + this.collection.at(new_pos).id);
           if (!$rel.length) {
             this.$parent.append($el);
-          } else {
+          } else if ($el.id !== $rel.id) {
             $el.insertBefore($rel);
+          } else {
+            return;
           }
         }
         $el.find('.sparkline').each(function(_, el) {
@@ -605,10 +611,14 @@
       };
 
       GroupListView.prototype.tick = function() {
+        var item;
         if (!this.queue.length) {
           return;
         }
-        return this.addMember(this.queue.pop());
+        item = this.queue.pop();
+        if (this.config.realtime) {
+          return this.addMember(item);
+        }
       };
 
       GroupListView.prototype.poll = function() {
@@ -751,7 +761,12 @@
       };
 
       GroupView.prototype.updateCount = function(obj) {
-        return $('.count span', this.$el).text(this.model.get("count"));
+        var counter;
+        counter = this.$el.find('.count span');
+        counter.text(this.model.get("count"));
+        return counter.css('opacity', 0.3).animate({
+          opacity: 1.0
+        }, 1200);
       };
 
       return GroupView;
diff --git a/tests/js/index.html b/tests/js/index.html
index 67ef071b78..5fa21bb549 100644
--- a/tests/js/index.html
+++ b/tests/js/index.html
@@ -59,6 +59,6 @@
 </head>
 
 <body>
-  <div id="dummy"></div>
+  <div id="dummy" style="display:none"></div>
 </body>
 </html>
diff --git a/tests/js/spec/OrderedElementsViewSpec.js b/tests/js/spec/OrderedElementsViewSpec.js
index 5fe4bbf4c5..8c558dd8b3 100644
--- a/tests/js/spec/OrderedElementsViewSpec.js
+++ b/tests/js/spec/OrderedElementsViewSpec.js
@@ -217,7 +217,7 @@ describe("OrderedElementsView", function() {
   describe(".renderMemberInContainer", function() {
     beforeEach(function(){
       view = new app.OrderedElementsView({
-          id: 'foo',
+          id: 'dummy',
           maxItems: 3
       });
 
@@ -230,13 +230,22 @@ describe("OrderedElementsView", function() {
       view.addMember(group3);
     });
 
+    it("pushes highest scored elements to the top on change", function(){
+      group3.set('score', 100);
+      view.addMember(group3);
+      group4 = make_group({id: 4, score: 500});
+      view.addMember(group4);
+      expect(view.$parent.find('li').length).toBe(view.collection.models.length);
+    });
+
+
     it("has the correct number of elements", function(){
       expect(view.$parent.find('li').length).toBe(view.collection.models.length);
     });
 
     it("has list elements sorted correctly", function(){
       view.$parent.find('li').each(function(_, el){
-        expect(this.id).toBe('foo' + view.collection.models[_].id);
+        expect(this.id).toBe('dummy' + view.collection.models[_].id);
       });
     });
   });
