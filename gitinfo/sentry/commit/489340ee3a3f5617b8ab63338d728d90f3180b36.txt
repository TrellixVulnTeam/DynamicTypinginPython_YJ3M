commit 489340ee3a3f5617b8ab63338d728d90f3180b36
Author: Jess MacQueen <jessmacqueen@gmail.com>
Date:   Wed Feb 27 17:57:50 2019 -0800

    fix(ui): Pass filter parameters during bulk actions in org issue stream
    
    fixes SEN-190

diff --git a/src/sentry/static/sentry/app/api.jsx b/src/sentry/static/sentry/app/api.jsx
index 32f18f632b..17e0d702bf 100644
--- a/src/sentry/static/sentry/app/api.jsx
+++ b/src/sentry/static/sentry/app/api.jsx
@@ -41,6 +41,20 @@ export function paramsToQueryArgs(params) {
   if (params.query && !isNil(params.environment)) {
     p.environment = params.environment;
   }
+
+  // only include projects if it is not null/undefined/an empty array
+  if (params.query && params.project && params.project.length) {
+    p.project = params.project;
+  }
+
+  // only include date filters if they are not null/undefined
+  if (params.query) {
+    ['start', 'end', 'period', 'utc'].forEach(prop => {
+      if (!isNil(params[prop])) {
+        p[prop === 'period' ? 'statsPeriod' : prop] = params[prop];
+      }
+    });
+  }
   return p;
 }
 
diff --git a/src/sentry/static/sentry/app/views/organizationStream/overview.jsx b/src/sentry/static/sentry/app/views/organizationStream/overview.jsx
index be835bbcd0..79dc3c59b6 100644
--- a/src/sentry/static/sentry/app/views/organizationStream/overview.jsx
+++ b/src/sentry/static/sentry/app/views/organizationStream/overview.jsx
@@ -676,6 +676,7 @@ const OrganizationStream = createReactClass({
             <StreamActions
               orgId={params.orgId}
               projectId={projectId}
+              selection={this.props.selection}
               hasReleases={hasReleases}
               latestRelease={latestRelease}
               query={query}
diff --git a/src/sentry/static/sentry/app/views/stream/actions.jsx b/src/sentry/static/sentry/app/views/stream/actions.jsx
index 5da3a7b912..7784f5a9d3 100644
--- a/src/sentry/static/sentry/app/views/stream/actions.jsx
+++ b/src/sentry/static/sentry/app/views/stream/actions.jsx
@@ -139,13 +139,13 @@ const StreamActions = createReactClass({
     allResultsVisible: PropTypes.bool,
     orgId: PropTypes.string.isRequired,
     projectId: PropTypes.string,
+    selection: SentryTypes.GlobalSelection.isRequired,
     groupIds: PropTypes.instanceOf(Array).isRequired,
     onRealtimeChange: PropTypes.func.isRequired,
     onSelectStatsPeriod: PropTypes.func.isRequired,
     realtimeActive: PropTypes.bool.isRequired,
     statsPeriod: PropTypes.string.isRequired,
     query: PropTypes.string.isRequired,
-    environment: SentryTypes.Environment,
     queryCount: PropTypes.number,
     hasReleases: PropTypes.bool,
     latestRelease: PropTypes.object,
@@ -155,7 +155,6 @@ const StreamActions = createReactClass({
 
   getDefaultProps() {
     return {
-      projectId: '',
       hasReleases: false,
       latestRelease: null,
     };
@@ -203,16 +202,18 @@ const StreamActions = createReactClass({
   },
 
   onUpdate(data) {
+    const {selection} = this.props;
     this.actionSelectedGroups(itemIds => {
       const loadingIndicator = IndicatorStore.add(t('Saving changes..'));
       this.api.bulkUpdate(
         {
           orgId: this.props.orgId,
-          projectId: this.props.projectId,
           itemIds,
           data,
           query: this.props.query,
-          environment: this.props.environment && this.props.environment.name,
+          project: selection.projects,
+          environment: selection.environments,
+          ...selection.datetime,
         },
         {
           complete: () => {
@@ -225,15 +226,17 @@ const StreamActions = createReactClass({
 
   onDelete(event) {
     const loadingIndicator = IndicatorStore.add(t('Removing events..'));
+    const {selection} = this.props;
 
     this.actionSelectedGroups(itemIds => {
       this.api.bulkDelete(
         {
           orgId: this.props.orgId,
-          projectId: this.props.projectId,
           itemIds,
           query: this.props.query,
-          environment: this.props.environment && this.props.environment.name,
+          project: selection.projects,
+          environment: selection.environments,
+          ...selection.datetime,
         },
         {
           complete: () => {
@@ -246,15 +249,17 @@ const StreamActions = createReactClass({
 
   onMerge(event) {
     const loadingIndicator = IndicatorStore.add(t('Merging events..'));
+    const {selection} = this.props;
 
     this.actionSelectedGroups(itemIds => {
       this.api.merge(
         {
           orgId: this.props.orgId,
-          projectId: this.props.projectId,
           itemIds,
           query: this.props.query,
-          environment: this.props.environment && this.props.environment.name,
+          project: selection.projects,
+          environment: selection.environments,
+          ...selection.datetime,
         },
         {
           complete: () => {
diff --git a/src/sentry/static/sentry/app/views/stream/stream.jsx b/src/sentry/static/sentry/app/views/stream/stream.jsx
index 1c37cd0344..33a76d3330 100644
--- a/src/sentry/static/sentry/app/views/stream/stream.jsx
+++ b/src/sentry/static/sentry/app/views/stream/stream.jsx
@@ -676,6 +676,13 @@ const Stream = createReactClass({
     const projectFeatures = this.getProjectFeatures();
     const project = this.getProject();
 
+    // for compatibility with new filters/stream component
+    const selection = {
+      projects: [project.id],
+      environments: this.state.environment ? [this.state.environment.name] : [],
+      datetime: {start: null, end: null, period: null, utc: null},
+    };
+
     return (
       <div className={classNames(classes)}>
         <div className="stream-content">
@@ -701,6 +708,7 @@ const Stream = createReactClass({
             <StreamActions
               orgId={params.orgId}
               projectId={params.projectId}
+              selection={selection}
               hasReleases={projectFeatures.has('releases')}
               latestRelease={this.context.project.latestRelease}
               environment={this.state.environment}
diff --git a/tests/js/spec/views/stream/__snapshots__/stream.spec.jsx.snap b/tests/js/spec/views/stream/__snapshots__/stream.spec.jsx.snap
index 99dbdb311a..6779678902 100644
--- a/tests/js/spec/views/stream/__snapshots__/stream.spec.jsx.snap
+++ b/tests/js/spec/views/stream/__snapshots__/stream.spec.jsx.snap
@@ -62,6 +62,20 @@ exports[`Stream render() displays the group list 1`] = `
         query="is:unresolved"
         queryCount={0}
         realtimeActive={false}
+        selection={
+          Object {
+            "datetime": Object {
+              "end": null,
+              "period": null,
+              "start": null,
+              "utc": null,
+            },
+            "environments": Array [],
+            "projects": Array [
+              3559,
+            ],
+          }
+        }
         statsPeriod="24h"
       />
       <PanelBody
@@ -111,7 +125,7 @@ exports[`Stream render() displays the group list 1`] = `
               "features": Array [],
               "firstEvent": true,
               "hasAccess": true,
-              "id": "3559",
+              "id": 3559,
               "isBookmarked": false,
               "isMember": true,
               "name": "Foo Project",
@@ -319,6 +333,20 @@ exports[`Stream toggles environment select all environments 1`] = `
         query="is:unresolved"
         queryCount={0}
         realtimeActive={false}
+        selection={
+          Object {
+            "datetime": Object {
+              "end": null,
+              "period": null,
+              "start": null,
+              "utc": null,
+            },
+            "environments": Array [],
+            "projects": Array [
+              3559,
+            ],
+          }
+        }
         statsPeriod="24h"
       />
       <PanelBody
@@ -368,7 +396,7 @@ exports[`Stream toggles environment select all environments 1`] = `
               "features": Array [],
               "firstEvent": true,
               "hasAccess": true,
-              "id": "3559",
+              "id": 3559,
               "isBookmarked": false,
               "isMember": true,
               "name": "Foo Project",
diff --git a/tests/js/spec/views/stream/actions.spec.jsx b/tests/js/spec/views/stream/actions.spec.jsx
index 5250563d96..c9fea6598c 100644
--- a/tests/js/spec/views/stream/actions.spec.jsx
+++ b/tests/js/spec/views/stream/actions.spec.jsx
@@ -29,6 +29,11 @@ describe('StreamActions', function() {
             queryCount={1500}
             orgId="1337"
             projectId="1"
+            selection={{
+              projects: [1],
+              environments: [],
+              datetime: {start: null, end: null, period: null, utc: true},
+            }}
             groupIds={[1, 2, 3]}
             onRealtimeChange={function() {}}
             onSelectStatsPeriod={function() {}}
@@ -52,7 +57,7 @@ describe('StreamActions', function() {
 
       it('bulk resolves', async function() {
         const apiMock = MockApiClient.addMockResponse({
-          url: '/projects/1337/1/issues/',
+          url: '/organizations/1337/issues/',
           method: 'PUT',
         });
         wrapper
@@ -85,6 +90,11 @@ describe('StreamActions', function() {
             queryCount={600}
             orgId="1337"
             projectId="1"
+            selection={{
+              projects: [1],
+              environments: [],
+              datetime: {start: null, end: null, period: null, utc: true},
+            }}
             groupIds={[1, 2, 3]}
             onRealtimeChange={function() {}}
             onSelectStatsPeriod={function() {}}
@@ -108,7 +118,7 @@ describe('StreamActions', function() {
 
       it('bulk resolves', async function() {
         const apiMock = MockApiClient.addMockResponse({
-          url: '/projects/1337/1/issues/',
+          url: '/organizations/1337/issues/',
           method: 'PUT',
         });
         wrapper
@@ -138,6 +148,11 @@ describe('StreamActions', function() {
           query=""
           orgId="1337"
           projectId="1"
+          selection={{
+            projects: [1],
+            environments: [],
+            datetime: {start: null, end: null, period: null, utc: true},
+          }}
           groupIds={[1, 2, 3]}
           onRealtimeChange={function() {}}
           onSelectStatsPeriod={function() {}}
@@ -186,6 +201,11 @@ describe('StreamActions', function() {
           query=""
           orgId="1337"
           groupIds={[1, 2, 3]}
+          selection={{
+            projects: [],
+            environments: [],
+            datetime: {start: null, end: null, period: null, utc: true},
+          }}
           onRealtimeChange={function() {}}
           onSelectStatsPeriod={function() {}}
           realtimeActive={false}
diff --git a/tests/js/spec/views/stream/stream.spec.jsx b/tests/js/spec/views/stream/stream.spec.jsx
index c6068cd0ab..a8207e5f12 100644
--- a/tests/js/spec/views/stream/stream.spec.jsx
+++ b/tests/js/spec/views/stream/stream.spec.jsx
@@ -43,7 +43,7 @@ describe('Stream', function() {
       id: '2448',
     });
     project = TestStubs.ProjectDetails({
-      id: '3559',
+      id: 3559,
       name: 'Foo Project',
       slug: 'project-slug',
       firstEvent: true,
