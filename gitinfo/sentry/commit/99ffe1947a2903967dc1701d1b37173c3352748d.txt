commit 99ffe1947a2903967dc1701d1b37173c3352748d
Author: Lyn Nagara <lyn.nagara@gmail.com>
Date:   Tue May 28 14:12:26 2019 -0700

    feat(events-v2): Polish All Events table view (#13425)
    
    Closes SEN-649

diff --git a/src/sentry/static/sentry/app/views/organizationEventsV2/data.jsx b/src/sentry/static/sentry/app/views/organizationEventsV2/data.jsx
index 3806a09a9e..7a81619255 100644
--- a/src/sentry/static/sentry/app/views/organizationEventsV2/data.jsx
+++ b/src/sentry/static/sentry/app/views/organizationEventsV2/data.jsx
@@ -5,15 +5,19 @@ import {deepFreeze} from 'app/utils';
 import DynamicWrapper from 'app/components/dynamicWrapper';
 import Link from 'app/components/links/link';
 import overflowEllipsis from 'app/styles/overflowEllipsis';
-import {getUtcDateString} from 'app/utils/dates';
 import space from 'app/styles/space';
+import ProjectBadge from 'app/components/idBadge/projectBadge';
+import UserBadge from 'app/components/idBadge/userBadge';
+import DateTime from 'app/components/dateTime';
+
+import {QueryLink} from './styles';
 
 export const ALL_VIEWS = deepFreeze([
   {
     id: 'all',
     name: 'All Events',
     data: {
-      fields: ['event', 'event.type', 'project.name', 'user', 'time'],
+      fields: ['event', 'event.type', 'project', 'user', 'time'],
       groupby: [],
       aggregations: [],
       sort: '',
@@ -65,36 +69,69 @@ export const ALL_VIEWS = deepFreeze([
 export const SPECIAL_FIELDS = {
   event: {
     fields: ['title', 'id', 'project.name'],
-    renderFunc: (data, org) => (
+    renderFunc: (data, {organization}) => (
       <Container>
         <Link
           css={overflowEllipsis}
-          to={`/organizations/${org.slug}/projects/${data['project.name']}/events/${
-            data.id
-          }/`}
+          to={`/organizations/${organization.slug}/projects/${
+            data['project.name']
+          }/events/${data.id}/`}
         >
           {data.title}
         </Link>
       </Container>
     ),
   },
+  project: {
+    fields: ['project.name'],
+    renderFunc: (data, {organization}) => {
+      const project = organization.projects.find(p => p.slug === data['project.name']);
+      return (
+        <Container>
+          {project ? (
+            <ProjectBadge project={project} avatarSize={16} />
+          ) : (
+            data['project.name']
+          )}
+        </Container>
+      );
+    },
+  },
   user: {
-    fields: ['user.email', 'user.ip'],
-    renderFunc: data => <Container>{data['user.email'] || data['user.ip']}</Container>,
+    fields: ['user', 'user.name', 'user.email', 'user.ip'],
+    renderFunc: (data, {onSearch}) => {
+      const userObj = {
+        name: data['user.name'],
+        email: data['user.email'],
+        ip: data['user.ip'],
+      };
+
+      const badge = <UserBadge user={userObj} hideEmail={true} avatarSize={16} />;
+
+      if (!data.user) {
+        return <Container>{badge}</Container>;
+      }
+
+      return <QueryLink onClick={() => onSearch(`user:${data.user}`)}>{badge}</QueryLink>;
+    },
   },
   time: {
-    fields: ['time'],
+    fields: ['timestamp'],
     renderFunc: data => (
       <Container>
-        <DynamicWrapper
-          value={<span css={overflowEllipsis}>{getUtcDateString(data)}</span>}
-          fixed="time"
-        />
+        <DynamicWrapper value={<StyledDateTime date={data.timestamp} />} fixed="time" />
       </Container>
     ),
   },
 };
 
 const Container = styled('div')`
+  display: flex;
   padding: ${space(1)};
+  ${overflowEllipsis};
+`;
+
+const StyledDateTime = styled(DateTime)`
+  color: ${p => p.theme.gray2};
+  ${overflowEllipsis};
 `;
diff --git a/src/sentry/static/sentry/app/views/organizationEventsV2/styles.jsx b/src/sentry/static/sentry/app/views/organizationEventsV2/styles.jsx
new file mode 100644
index 0000000000..34871107ea
--- /dev/null
+++ b/src/sentry/static/sentry/app/views/organizationEventsV2/styles.jsx
@@ -0,0 +1,14 @@
+import styled from 'react-emotion';
+import space from 'app/styles/space';
+import overflowEllipsis from 'app/styles/overflowEllipsis';
+
+export const QueryLink = styled('a')`
+  ${overflowEllipsis};
+  color: ${p => p.theme.foreground};
+  padding: ${space(1)};
+  border-radius: ${p => p.theme.borderRadius};
+  &:hover {
+    color: ${p => p.theme.foreground};
+    background-color: ${p => p.theme.offWhite};
+  }
+`;
diff --git a/src/sentry/static/sentry/app/views/organizationEventsV2/table.jsx b/src/sentry/static/sentry/app/views/organizationEventsV2/table.jsx
index 28f24685b1..1920171ea4 100644
--- a/src/sentry/static/sentry/app/views/organizationEventsV2/table.jsx
+++ b/src/sentry/static/sentry/app/views/organizationEventsV2/table.jsx
@@ -5,12 +5,12 @@ import styled, {css} from 'react-emotion';
 import SentryTypes from 'app/sentryTypes';
 import {Panel, PanelHeader, PanelBody, PanelItem} from 'app/components/panels';
 import LoadingIndicator from 'app/components/loadingIndicator';
-import overflowEllipsis from 'app/styles/overflowEllipsis';
 import EmptyStateWarning from 'app/components/emptyStateWarning';
 import {t} from 'app/locale';
 import space from 'app/styles/space';
 
 import {SPECIAL_FIELDS} from './data';
+import {QueryLink} from './styles';
 
 export default class Table extends React.Component {
   static propTypes = {
@@ -42,9 +42,11 @@ export default class Table extends React.Component {
         {fields.map(field => (
           <Cell key={field}>
             {SPECIAL_FIELDS.hasOwnProperty(field) ? (
-              SPECIAL_FIELDS[field].renderFunc(row, organization)
+              SPECIAL_FIELDS[field].renderFunc(row, {organization, onSearch})
             ) : (
-              <Data onClick={() => onSearch(`${field}:${row[field]}`)}>{row[field]}</Data>
+              <QueryLink onClick={() => onSearch(`${field}:${row[field]}`)}>
+                {row[field]}
+              </QueryLink>
             )}
           </Cell>
         ))}
@@ -57,11 +59,11 @@ export default class Table extends React.Component {
 
     return (
       <Panel>
-        <PanelHeader className={getGridStyle(fields.length)}>
+        <TableHeader className={getGridStyle(fields.length)}>
           {fields.map(field => (
-            <div key={field}>{field}</div>
+            <HeaderItem key={field}>{field}</HeaderItem>
           ))}
-        </PanelHeader>
+        </TableHeader>
         <PanelBody>{this.renderBody()}</PanelBody>
       </Panel>
     );
@@ -76,22 +78,21 @@ function getGridStyle(colCount) {
   `;
 }
 
+const TableHeader = styled(PanelHeader)`
+  padding: ${space(2)} ${space(1)};
+`;
+
+const HeaderItem = styled('div')`
+  padding: 0 ${space(1)};
+`;
+
 const Row = styled(PanelItem)`
   font-size: ${p => p.theme.fontSizeMedium};
   padding: ${space(1)};
 `;
 
 const Cell = styled('div')`
+  display: flex;
+  align-items: center;
   overflow: hidden;
 `;
-
-const Data = styled('a')`
-  ${overflowEllipsis};
-  color: ${p => p.theme.foreground};
-  padding: ${space(1)};
-  border-radius: ${p => p.theme.borderRadius};
-  &:hover {
-    color: ${p => p.theme.foreground};
-    background-color: ${p => p.theme.offWhite};
-  }
-`;
diff --git a/src/sentry/static/sentry/app/views/organizationEventsV2/tags.jsx b/src/sentry/static/sentry/app/views/organizationEventsV2/tags.jsx
index 0a21afc7c5..1a2c7678b4 100644
--- a/src/sentry/static/sentry/app/views/organizationEventsV2/tags.jsx
+++ b/src/sentry/static/sentry/app/views/organizationEventsV2/tags.jsx
@@ -9,11 +9,7 @@ export default class Tags extends React.Component {
   };
 
   renderTag(tag) {
-    return (
-      <TagDistributionMeter key={tag} title={tag} segments={[]}>
-        {tag}
-      </TagDistributionMeter>
-    );
+    return <TagDistributionMeter key={tag} title={tag} segments={[]} />;
   }
 
   render() {
diff --git a/tests/js/spec/views/organizationEventsV2/index.spec.jsx b/tests/js/spec/views/organizationEventsV2/index.spec.jsx
index 0e175e124f..b7d9874c67 100644
--- a/tests/js/spec/views/organizationEventsV2/index.spec.jsx
+++ b/tests/js/spec/views/organizationEventsV2/index.spec.jsx
@@ -7,7 +7,11 @@ describe('OrganizationEventsV2', function() {
   beforeEach(function() {
     MockApiClient.addMockResponse({
       url: '/organizations/org-slug/events/',
-      body: [{}],
+      body: [
+        {
+          timestamp: '2019-05-23T22:12:48+00:00',
+        },
+      ],
     });
   });
 
diff --git a/tests/js/spec/views/organizationEventsV2/utils.spec.jsx b/tests/js/spec/views/organizationEventsV2/utils.spec.jsx
index 4a586fdfcd..ff223f3267 100644
--- a/tests/js/spec/views/organizationEventsV2/utils.spec.jsx
+++ b/tests/js/spec/views/organizationEventsV2/utils.spec.jsx
@@ -30,6 +30,8 @@ describe('getQuery()', function() {
       'title',
       'id',
       'project.name',
+      'user',
+      'user.name',
       'user.email',
       'user.ip',
       'issue.id',
