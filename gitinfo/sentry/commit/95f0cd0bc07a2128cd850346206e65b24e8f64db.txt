commit 95f0cd0bc07a2128cd850346206e65b24e8f64db
Author: Matt Robenolt <matt@ydekproductions.com>
Date:   Mon Jul 11 11:19:02 2016 -0700

    Handle IntegrityError for duplicate team slugs (#3647)

diff --git a/src/sentry/api/endpoints/organization_teams.py b/src/sentry/api/endpoints/organization_teams.py
index 8791fa0104..8f59c564e6 100644
--- a/src/sentry/api/endpoints/organization_teams.py
+++ b/src/sentry/api/endpoints/organization_teams.py
@@ -1,5 +1,6 @@
 from __future__ import absolute_import
 
+from django.db import IntegrityError, transaction
 from rest_framework import serializers, status
 from rest_framework.response import Response
 
@@ -88,11 +89,18 @@ class OrganizationTeamsEndpoint(OrganizationEndpoint):
         if serializer.is_valid():
             result = serializer.object
 
-            team = Team.objects.create(
-                name=result['name'],
-                slug=result.get('slug'),
-                organization=organization,
-            )
+            try:
+                with transaction.atomic():
+                    team = Team.objects.create(
+                        name=result['name'],
+                        slug=result.get('slug'),
+                        organization=organization,
+                    )
+            except IntegrityError:
+                return Response(
+                    {'detail': 'A team with this slug already exists.'},
+                    status=409,
+                )
 
             if request.user.is_authenticated():
                 try:
diff --git a/tests/sentry/api/endpoints/test_organization_teams.py b/tests/sentry/api/endpoints/test_organization_teams.py
index 1a2dd7d44c..7266cb6b1b 100644
--- a/tests/sentry/api/endpoints/test_organization_teams.py
+++ b/tests/sentry/api/endpoints/test_organization_teams.py
@@ -84,3 +84,20 @@ class OrganizationTeamsCreateTest(APITestCase):
         assert resp.status_code == 201, resp.content
         team = Team.objects.get(id=resp.data['id'])
         assert team.slug == 'hello-world'
+
+    def test_duplicate(self):
+        self.login_as(user=self.user)
+
+        resp = self.client.post(self.path, data={
+            'name': 'hello world',
+            'slug': 'foobar',
+        })
+
+        assert resp.status_code == 201, resp.content
+
+        resp = self.client.post(self.path, data={
+            'name': 'hello world',
+            'slug': 'foobar',
+        })
+
+        assert resp.status_code == 409, resp.content
