commit 95d2fe2b3f56585c39f60799ec43eb77d4b6117b
Author: Billy Vong <billyvg@users.noreply.github.com>
Date:   Mon Oct 14 16:16:30 2019 -0700

    test(js): Refactor to use `sentry-test` alias and  `mountWithTâ€¦ (#15062)
    
    Refactor to use a `mountWithTheme` wrapper for `enzyme.mount`. This is needed to upgrade to emotion@10.

diff --git a/jest.config.js b/jest.config.js
index e65c110f1c..631576b69e 100644
--- a/jest.config.js
+++ b/jest.config.js
@@ -9,9 +9,9 @@ module.exports = {
   coverageDirectory: '.artifacts/coverage/',
   snapshotSerializers: ['enzyme-to-json/serializer'],
   moduleNameMapper: {
-    '^app-test/(.*)': '<rootDir>/tests/js/$1',
-    '\\.(css|less|png)$': '<rootDir>/tests/js/helpers/importStyleMock.js',
-    '\\.(svg)$': '<rootDir>/tests/js/helpers/svgMock.js',
+    '^sentry-test/(.*)': '<rootDir>/tests/js/sentry-test/$1',
+    '\\.(css|less|png)$': '<rootDir>/tests/js/sentry-test/importStyleMock.js',
+    '\\.(svg)$': '<rootDir>/tests/js/sentry-test/svgMock.js',
     'integration-docs-platforms':
       '<rootDir>/tests/fixtures/integration-docs/_platforms.json',
   },
diff --git a/tests/js/fixtures/events.js b/tests/js/fixtures/events.js
deleted file mode 100644
index faa5e0e4c3..0000000000
--- a/tests/js/fixtures/events.js
+++ /dev/null
@@ -1,21 +0,0 @@
-import {Event} from './event';
-
-export function Events(params = []) {
-  return [
-    Event({eventID: '12345', id: '1', message: 'ApiException', groupID: '1'}),
-    Event({
-      eventID: '12346',
-      id: '2',
-      message: 'TestException',
-      groupID: '1',
-    }),
-    ...params,
-  ];
-}
-
-export function EventsStats(query = {}, params) {
-  return {
-    data: [[new Date(), [{count: 321}, {count: 79}]], [new Date(), [{count: 123}]]],
-    ...params,
-  };
-}
diff --git a/tests/js/mocks/entries.js b/tests/js/mocks/entries.js
deleted file mode 100644
index e52db209a8..0000000000
--- a/tests/js/mocks/entries.js
+++ /dev/null
@@ -1,214 +0,0 @@
-export default [
-  [
-    {
-      type: 'exception',
-      data: {
-        values: [
-          {
-            stacktrace: {
-              frames: [
-                {
-                  function: null,
-                  colNo: null,
-                  vars: {},
-                  symbol: null,
-                  module: '<unknown module>',
-                  lineNo: null,
-                  errors: null,
-                  package: null,
-                  absPath:
-                    'https://sentry.io/hiventy/kraken-prod/issues/438681831/?referrer=slack#',
-                  inApp: false,
-                  instructionAddr: null,
-                  filename: '/hiventy/kraken-prod/issues/438681831/',
-                  platform: null,
-                  context: [],
-                  symbolAddr: null,
-                },
-              ],
-              framesOmitted: null,
-              registers: null,
-              hasSystemFrames: false,
-            },
-            module: null,
-            rawStacktrace: null,
-            mechanism: null,
-            threadId: null,
-            value: 'Unexpected token else',
-            type: 'SyntaxError',
-          },
-        ],
-        excOmitted: null,
-        hasSystemFrames: false,
-      },
-    },
-    {
-      type: 'breadcrumbs',
-      data: {
-        values: [
-          {
-            category: 'xhr',
-            level: 'info',
-            event_id: null,
-            timestamp: '2018-01-23T08:12:53.591Z',
-            data: {
-              url: 'https://reload.getsentry.net/page/',
-              status_code: '201',
-              method: 'POST',
-            },
-            message: null,
-            type: 'http',
-          },
-          {
-            category: 'xhr',
-            level: 'info',
-            event_id: null,
-            timestamp: '2018-01-23T08:12:53.636Z',
-            data: {
-              url: '/api/0/organizations/?member=1',
-              status_code: '200',
-              method: 'GET',
-            },
-            message: null,
-            type: 'http',
-          },
-          {
-            category: 'xhr',
-            level: 'info',
-            event_id: null,
-            timestamp: '2018-01-23T08:12:53.895Z',
-            data: {url: '/api/0/internal/health/', status_code: '403', method: 'GET'},
-            message: null,
-            type: 'http',
-          },
-        ],
-      },
-    },
-    {
-      type: 'request',
-      data: {
-        fragment: '',
-        cookies: [],
-        inferredContentType: null,
-        env: null,
-        headers: [
-          ['Referer', '[Filtered]'],
-          [
-            'User-Agent',
-            'Mozilla/5.0 (Linux; Android 7.0; ONEPLUS A3003 Build/NRD90M; wv) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/56.0.2924.87 Mobile Safari/537.36',
-          ],
-        ],
-        url: 'https://sentry.io/hiventy/kraken-prod/issues/438681831/',
-        query: 'referrer=slack',
-        data: null,
-        method: null,
-      },
-    },
-  ],
-  [
-    {
-      type: 'exception',
-      data: {
-        values: [
-          {
-            stacktrace: {
-              frames: [
-                {
-                  function: null,
-                  colNo: null,
-                  vars: {},
-                  symbol: null,
-                  module: '<unknown module>',
-                  lineNo: null,
-                  errors: null,
-                  package: null,
-                  absPath:
-                    'https://sentry.io/hiventy/kraken-prod/issues/438681831/?referrer=slack#',
-                  inApp: false,
-                  instructionAddr: null,
-                  filename: '/hiventy/kraken-prod/issues/438681831/',
-                  platform: null,
-                  context: [],
-                  symbolAddr: null,
-                },
-              ],
-              framesOmitted: null,
-              registers: null,
-              hasSystemFrames: false,
-            },
-            module: null,
-            rawStacktrace: null,
-            mechanism: null,
-            threadId: null,
-            value: 'Unexpected token else',
-            type: 'SyntaxError',
-          },
-        ],
-        excOmitted: null,
-        hasSystemFrames: false,
-      },
-    },
-    {
-      type: 'breadcrumbs',
-      data: {
-        values: [
-          {
-            category: 'xhr',
-            level: 'info',
-            event_id: null,
-            timestamp: '2018-01-23T08:12:53.591Z',
-            data: {
-              url: 'https://reload.getsentry.net/page/',
-              status_code: '201',
-              method: 'POST',
-            },
-            message: null,
-            type: 'http',
-          },
-          {
-            category: 'xhr',
-            level: 'info',
-            event_id: null,
-            timestamp: '2018-01-23T08:12:53.636Z',
-            data: {
-              url: '/api/0/organizations/?member=1',
-              status_code: '200',
-              method: 'GET',
-            },
-            message: null,
-            type: 'http',
-          },
-          {
-            category: 'xhr',
-            level: 'info',
-            event_id: null,
-            timestamp: '2018-01-23T08:12:53.895Z',
-            data: {url: '/api/0/internal/health/', status_code: '403', method: 'GET'},
-            message: null,
-            type: 'http',
-          },
-        ],
-      },
-    },
-    {
-      type: 'request',
-      data: {
-        fragment: '',
-        cookies: [],
-        inferredContentType: null,
-        env: null,
-        headers: [
-          ['Referer', '[Filtered]'],
-          [
-            'User-Agent',
-            'Mozilla/5.0 (Linux; Android 7.0; ONEPLUS A3003 Build/NRD90M; wv) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/56.0.2924.87 Mobile Safari/537.36',
-          ],
-        ],
-        url: 'https://sentry.io/hiventy/kraken-prod/issues/438681831/',
-        query: 'referrer=slack',
-        data: null,
-        method: null,
-      },
-    },
-  ],
-];
diff --git a/tests/js/mocks/events.js b/tests/js/mocks/events.js
deleted file mode 100644
index 79ab40ea44..0000000000
--- a/tests/js/mocks/events.js
+++ /dev/null
@@ -1,120 +0,0 @@
-export default [
-  {
-    eventID: '807f0de4d8c246098f21f8e0f1684f3d',
-    packages: {},
-    dist: null,
-    tags: [
-      {value: 'Chrome 59.0.3071', key: 'browser'},
-      {value: 'Chrome', key: 'browser.name'},
-      {value: 'error', key: 'level'},
-      {value: 'javascript', key: 'logger'},
-      {value: 'Mac OS X 10.12.5', key: 'os'},
-      {value: 'Mac OS X', key: 'os.name'},
-      {value: 'd5241c9d9d2bcda918c7af72f07cea1e39a096ac', key: 'release'},
-      {
-        value: 'app/components/assigneeSelector in assignedTo',
-        key: 'transaction',
-      },
-      {
-        value: 'http://localhost:8000/sentry/internal/issues/227/grouping/',
-        key: 'url',
-      },
-      {value: 'id:1', key: 'user'},
-    ],
-    contexts: {
-      os: {version: '10.12.5', type: 'os', name: 'Mac OS X'},
-      browser: {version: '59.0.3071', type: 'browser', name: 'Chrome'},
-    },
-    dateReceived: '2017-07-26T00:34:20Z',
-    dateCreated: '2017-07-26T00:34:20Z',
-    fingerprints: [
-      '2c4887696f708c476a81ce4e834c4b02',
-      'e05da55328a860b21f62e371f0a7507d',
-    ],
-    metadata: {
-      type: 'TypeError',
-      value: "Cannot read property 'assignedTo' of undefined",
-    },
-    groupID: '268',
-    platform: 'javascript',
-    errors: [],
-    user: {ip_address: '127.0.0.1', email: 'billy@sentry.io', id: '1'},
-    context: {'session:duration': 46363},
-    entries: [],
-    title: "TypeError: Cannot read property 'assignedTo' of undefined",
-    message:
-      "TypeError Cannot read property 'assignedTo' of undefined app/components/assigneeSelector in assignedTo",
-    sdk: {
-      clientIP: '127.0.0.1',
-      version: '3.16.1',
-      name: 'raven-js',
-      upstream: {
-        url: 'https://docs.sentry.io/clients/javascript/',
-        isNewer: false,
-        name: 'raven-js',
-      },
-    },
-    type: 'error',
-    id: '904',
-    size: 21896,
-  },
-  {
-    eventID: '807f0de4d8c246098f21f8e0f1684f3d',
-    packages: {},
-    dist: null,
-    tags: [
-      {value: 'Chrome 59.0.3071', key: 'browser'},
-      {value: 'Chrome', key: 'browser.name'},
-      {value: 'error', key: 'level'},
-      {value: 'javascript', key: 'logger'},
-      {value: 'Mac OS X 10.12.5', key: 'os'},
-      {value: 'Mac OS X', key: 'os.name'},
-      {value: 'd5241c9d9d2bcda918c7af72f07cea1e39a096ac', key: 'release'},
-      {
-        value: 'app/components/assigneeSelector in assignedTo',
-        key: 'transaction',
-      },
-      {
-        value: 'http://localhost:8000/sentry/internal/issues/227/grouping/',
-        key: 'url',
-      },
-      {value: 'id:1', key: 'user'},
-    ],
-    contexts: {
-      os: {version: '10.12.5', type: 'os', name: 'Mac OS X'},
-      browser: {version: '59.0.3071', type: 'browser', name: 'Chrome'},
-    },
-    dateReceived: '2017-07-26T00:34:20Z',
-    dateCreated: '2017-07-26T00:34:20Z',
-    fingerprints: [
-      '2c4887696f708c476a81ce4e834c4b02',
-      'e05da55328a860b21f62e371f0a7507d',
-    ],
-    metadata: {
-      type: 'TypeError',
-      value: "Cannot read property 'assignedTo' of undefined",
-    },
-    groupID: '268',
-    platform: 'javascript',
-    errors: [],
-    user: {ip_address: '127.0.0.1', email: 'billy@sentry.io', id: '1'},
-    context: {'session:duration': 46363},
-    entries: [],
-    title: "TypeError: Cannot read property 'assignedTo' of undefined",
-    message:
-      "TypeError Cannot read property 'assignedTo' of undefined app/components/assigneeSelector in assignedTo",
-    sdk: {
-      clientIP: '127.0.0.1',
-      version: '3.16.1',
-      name: 'raven-js',
-      upstream: {
-        url: 'https://docs.sentry.io/clients/javascript/',
-        isNewer: false,
-        name: 'raven-js',
-      },
-    },
-    type: 'error',
-    id: '904',
-    size: 21896,
-  },
-];
diff --git a/tests/js/mocks/issues.js b/tests/js/mocks/issues.js
deleted file mode 100644
index ccbb092782..0000000000
--- a/tests/js/mocks/issues.js
+++ /dev/null
@@ -1,129 +0,0 @@
-export default [
-  {
-    lastSeen: '2017-07-25T02:22:19Z',
-    numComments: 0,
-    userCount: 1,
-    culprit: 'Constructor.onSimilarUpdate(app/views/groupSimilar/groupingMergedList)',
-    title: 'ReferenceError: unmergedList is not defined',
-    id: '274',
-    assignedTo: null,
-    logger: 'javascript',
-    type: 'error',
-    annotations: [],
-    metadata: {type: 'ReferenceError', value: 'unmergedList is not defined'},
-    status: 'unresolved',
-    subscriptionDetails: null,
-    isPublic: false,
-    hasSeen: false,
-    shortId: 'INTERNAL-4K',
-    shareId: '312e323734',
-    firstSeen: '2017-07-25T02:21:52Z',
-    count: '2',
-    permalink: 'http://localhost:8000/sentry/project-slug/issues/274/',
-    level: 'error',
-    isSubscribed: true,
-    isBookmarked: false,
-    project: {name: 'Internal', slug: 'project-slug', id: '123'},
-    statusDetails: {},
-  },
-  {
-    lastSeen: '2017-07-25T02:20:35Z',
-    numComments: 0,
-    userCount: 1,
-    culprit: 'size(app/views/groupSimilar/groupingMergedList)',
-    title: "TypeError: Cannot read property 'size' of undefined",
-    id: '275',
-    assignedTo: null,
-    logger: 'javascript',
-    type: 'error',
-    annotations: [],
-    metadata: {type: 'TypeError', value: "Cannot read property 'size' of undefined"},
-    status: 'unresolved',
-    subscriptionDetails: null,
-    isPublic: false,
-    hasSeen: true,
-    shortId: 'INTERNAL-4M',
-    shareId: '312e323735',
-    firstSeen: '2017-07-25T02:20:35Z',
-    count: '1',
-    permalink: 'http://localhost:8000/sentry/project-slug/issues/275/',
-    level: 'error',
-    isSubscribed: true,
-    isBookmarked: false,
-    project: {name: 'Internal', slug: 'project-slug', id: '123'},
-    statusDetails: {},
-  },
-  {
-    lastSeen: '2017-07-24T23:41:44Z',
-    numComments: 0,
-    userCount: 3,
-    culprit: 'length(app/views/groupSimilar/groupSimilarView)',
-    title: "TypeError: Cannot read property 'length' of undefined",
-    id: '271',
-    assignedTo: null,
-    logger: 'javascript',
-    type: 'error',
-    annotations: [],
-    metadata: {
-      type: 'TypeError',
-      value: "Cannot read property 'length' of undefined",
-    },
-    status: 'resolved',
-    subscriptionDetails: null,
-    isPublic: false,
-    hasSeen: false,
-    shortId: 'INTERNAL-4G',
-    shareId: '312e323731',
-    firstSeen: '2017-07-10T18:32:43Z',
-    count: '90',
-    permalink: 'http://localhost:8000/sentry/project-slug/issues/271/',
-    level: 'error',
-    isSubscribed: true,
-    isBookmarked: false,
-    project: {name: 'Internal', slug: 'project-slug', id: '123'},
-    statusDetails: {},
-  },
-  {
-    lastSeen: '2017-07-25T23:21:19Z',
-    numComments: 0,
-    userCount: 1,
-    culprit: 'stale(app/views/groupDetails)',
-    title: "TypeError: Cannot read property 'stale' of undefined",
-    id: '216',
-    assignedTo: {
-      username: 'billy@sentry.io',
-      isManaged: false,
-      lastActive: '2017-07-26T18:28:19.391Z',
-      identities: [],
-      id: '1',
-      isActive: true,
-      has2fa: false,
-      name: 'billy@sentry.io',
-      avatarUrl:
-        'https://secure.gravatar.com/avatar/7b544e8eb9d08ed777be5aa82121155a?s=32&d=mm',
-      dateJoined: '2017-06-26T21:02:13.264Z',
-      emails: [{is_verified: false, id: '1', email: 'billy@sentry.io'}],
-      avatar: {avatarUuid: null, avatarType: 'letter_avatar'},
-      lastLogin: '2017-07-25T01:00:50.473Z',
-      email: 'billy@sentry.io',
-    },
-    logger: 'javascript',
-    type: 'error',
-    annotations: [],
-    metadata: {type: 'TypeError', value: "Cannot read property 'stale' of undefined"},
-    status: 'unresolved',
-    subscriptionDetails: {reason: 'changed_status'},
-    isPublic: false,
-    hasSeen: true,
-    shortId: 'INTERNAL-2S',
-    shareId: '312e323136',
-    firstSeen: '2017-07-25T02:20:35Z',
-    count: '15',
-    permalink: 'http://localhost:8000/sentry/project-slug/issues/216/',
-    level: 'error',
-    isSubscribed: true,
-    isBookmarked: false,
-    project: {name: 'Internal', slug: 'project-slug', id: '123'},
-    statusDetails: {},
-  },
-];
diff --git a/tests/js/helpers/changeReactMentionsInput.js b/tests/js/sentry-test/changeReactMentionsInput.js
similarity index 100%
rename from tests/js/helpers/changeReactMentionsInput.js
rename to tests/js/sentry-test/changeReactMentionsInput.js
diff --git a/tests/js/helpers/charts.jsx b/tests/js/sentry-test/charts.jsx
similarity index 100%
rename from tests/js/helpers/charts.jsx
rename to tests/js/sentry-test/charts.jsx
diff --git a/tests/js/sentry-test/enzyme.js b/tests/js/sentry-test/enzyme.js
new file mode 100644
index 0000000000..c9a022869d
--- /dev/null
+++ b/tests/js/sentry-test/enzyme.js
@@ -0,0 +1,15 @@
+import {mount, shallow, render} from 'enzyme';
+import {ThemeProvider} from 'emotion-theming';
+import React from 'react';
+
+import theme from 'app/utils/theme';
+
+const mountWithTheme = (tree, opts) => {
+  const WrappingThemeProvider = props => (
+    <ThemeProvider theme={theme}>{props.children}</ThemeProvider>
+  );
+
+  return mount(tree, {wrappingComponent: WrappingThemeProvider, ...opts});
+};
+
+export {mountWithTheme, mount, shallow, render};
diff --git a/tests/js/fixtures/accountAppearance.js b/tests/js/sentry-test/fixtures/accountAppearance.js
similarity index 100%
rename from tests/js/fixtures/accountAppearance.js
rename to tests/js/sentry-test/fixtures/accountAppearance.js
diff --git a/tests/js/fixtures/accountEmails.js b/tests/js/sentry-test/fixtures/accountEmails.js
similarity index 100%
rename from tests/js/fixtures/accountEmails.js
rename to tests/js/sentry-test/fixtures/accountEmails.js
diff --git a/tests/js/fixtures/activityFeed.js b/tests/js/sentry-test/fixtures/activityFeed.js
similarity index 100%
rename from tests/js/fixtures/activityFeed.js
rename to tests/js/sentry-test/fixtures/activityFeed.js
diff --git a/tests/js/fixtures/apiApplication.jsx b/tests/js/sentry-test/fixtures/apiApplication.jsx
similarity index 100%
rename from tests/js/fixtures/apiApplication.jsx
rename to tests/js/sentry-test/fixtures/apiApplication.jsx
diff --git a/tests/js/fixtures/apiKey.js b/tests/js/sentry-test/fixtures/apiKey.js
similarity index 100%
rename from tests/js/fixtures/apiKey.js
rename to tests/js/sentry-test/fixtures/apiKey.js
diff --git a/tests/js/fixtures/apiToken.js b/tests/js/sentry-test/fixtures/apiToken.js
similarity index 100%
rename from tests/js/fixtures/apiToken.js
rename to tests/js/sentry-test/fixtures/apiToken.js
diff --git a/tests/js/fixtures/asana.js b/tests/js/sentry-test/fixtures/asana.js
similarity index 100%
rename from tests/js/fixtures/asana.js
rename to tests/js/sentry-test/fixtures/asana.js
diff --git a/tests/js/fixtures/auditLogs.js b/tests/js/sentry-test/fixtures/auditLogs.js
similarity index 100%
rename from tests/js/fixtures/auditLogs.js
rename to tests/js/sentry-test/fixtures/auditLogs.js
diff --git a/tests/js/fixtures/authProvider.js b/tests/js/sentry-test/fixtures/authProvider.js
similarity index 100%
rename from tests/js/fixtures/authProvider.js
rename to tests/js/sentry-test/fixtures/authProvider.js
diff --git a/tests/js/fixtures/authProviders.js b/tests/js/sentry-test/fixtures/authProviders.js
similarity index 100%
rename from tests/js/fixtures/authProviders.js
rename to tests/js/sentry-test/fixtures/authProviders.js
diff --git a/tests/js/fixtures/authenticators.jsx b/tests/js/sentry-test/fixtures/authenticators.jsx
similarity index 100%
rename from tests/js/fixtures/authenticators.jsx
rename to tests/js/sentry-test/fixtures/authenticators.jsx
diff --git a/tests/js/fixtures/broadcast.js b/tests/js/sentry-test/fixtures/broadcast.js
similarity index 100%
rename from tests/js/fixtures/broadcast.js
rename to tests/js/sentry-test/fixtures/broadcast.js
diff --git a/tests/js/fixtures/commit.js b/tests/js/sentry-test/fixtures/commit.js
similarity index 100%
rename from tests/js/fixtures/commit.js
rename to tests/js/sentry-test/fixtures/commit.js
diff --git a/tests/js/fixtures/commitAuthor.js b/tests/js/sentry-test/fixtures/commitAuthor.js
similarity index 100%
rename from tests/js/fixtures/commitAuthor.js
rename to tests/js/sentry-test/fixtures/commitAuthor.js
diff --git a/tests/js/fixtures/dashboard.js b/tests/js/sentry-test/fixtures/dashboard.js
similarity index 100%
rename from tests/js/fixtures/dashboard.js
rename to tests/js/sentry-test/fixtures/dashboard.js
diff --git a/tests/js/fixtures/debugSymbols.js b/tests/js/sentry-test/fixtures/debugSymbols.js
similarity index 100%
rename from tests/js/fixtures/debugSymbols.js
rename to tests/js/sentry-test/fixtures/debugSymbols.js
diff --git a/tests/js/fixtures/discover.js b/tests/js/sentry-test/fixtures/discover.js
similarity index 100%
rename from tests/js/fixtures/discover.js
rename to tests/js/sentry-test/fixtures/discover.js
diff --git a/tests/js/sentry-test/fixtures/entries.js b/tests/js/sentry-test/fixtures/entries.js
new file mode 100644
index 0000000000..5abecda11c
--- /dev/null
+++ b/tests/js/sentry-test/fixtures/entries.js
@@ -0,0 +1,216 @@
+export function Entries() {
+  return [
+    [
+      {
+        type: 'exception',
+        data: {
+          values: [
+            {
+              stacktrace: {
+                frames: [
+                  {
+                    function: null,
+                    colNo: null,
+                    vars: {},
+                    symbol: null,
+                    module: '<unknown module>',
+                    lineNo: null,
+                    errors: null,
+                    package: null,
+                    absPath:
+                      'https://sentry.io/hiventy/kraken-prod/issues/438681831/?referrer=slack#',
+                    inApp: false,
+                    instructionAddr: null,
+                    filename: '/hiventy/kraken-prod/issues/438681831/',
+                    platform: null,
+                    context: [],
+                    symbolAddr: null,
+                  },
+                ],
+                framesOmitted: null,
+                registers: null,
+                hasSystemFrames: false,
+              },
+              module: null,
+              rawStacktrace: null,
+              mechanism: null,
+              threadId: null,
+              value: 'Unexpected token else',
+              type: 'SyntaxError',
+            },
+          ],
+          excOmitted: null,
+          hasSystemFrames: false,
+        },
+      },
+      {
+        type: 'breadcrumbs',
+        data: {
+          values: [
+            {
+              category: 'xhr',
+              level: 'info',
+              event_id: null,
+              timestamp: '2018-01-23T08:12:53.591Z',
+              data: {
+                url: 'https://reload.getsentry.net/page/',
+                status_code: '201',
+                method: 'POST',
+              },
+              message: null,
+              type: 'http',
+            },
+            {
+              category: 'xhr',
+              level: 'info',
+              event_id: null,
+              timestamp: '2018-01-23T08:12:53.636Z',
+              data: {
+                url: '/api/0/organizations/?member=1',
+                status_code: '200',
+                method: 'GET',
+              },
+              message: null,
+              type: 'http',
+            },
+            {
+              category: 'xhr',
+              level: 'info',
+              event_id: null,
+              timestamp: '2018-01-23T08:12:53.895Z',
+              data: {url: '/api/0/internal/health/', status_code: '403', method: 'GET'},
+              message: null,
+              type: 'http',
+            },
+          ],
+        },
+      },
+      {
+        type: 'request',
+        data: {
+          fragment: '',
+          cookies: [],
+          inferredContentType: null,
+          env: null,
+          headers: [
+            ['Referer', '[Filtered]'],
+            [
+              'User-Agent',
+              'Mozilla/5.0 (Linux; Android 7.0; ONEPLUS A3003 Build/NRD90M; wv) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/56.0.2924.87 Mobile Safari/537.36',
+            ],
+          ],
+          url: 'https://sentry.io/hiventy/kraken-prod/issues/438681831/',
+          query: 'referrer=slack',
+          data: null,
+          method: null,
+        },
+      },
+    ],
+    [
+      {
+        type: 'exception',
+        data: {
+          values: [
+            {
+              stacktrace: {
+                frames: [
+                  {
+                    function: null,
+                    colNo: null,
+                    vars: {},
+                    symbol: null,
+                    module: '<unknown module>',
+                    lineNo: null,
+                    errors: null,
+                    package: null,
+                    absPath:
+                      'https://sentry.io/hiventy/kraken-prod/issues/438681831/?referrer=slack#',
+                    inApp: false,
+                    instructionAddr: null,
+                    filename: '/hiventy/kraken-prod/issues/438681831/',
+                    platform: null,
+                    context: [],
+                    symbolAddr: null,
+                  },
+                ],
+                framesOmitted: null,
+                registers: null,
+                hasSystemFrames: false,
+              },
+              module: null,
+              rawStacktrace: null,
+              mechanism: null,
+              threadId: null,
+              value: 'Unexpected token else',
+              type: 'SyntaxError',
+            },
+          ],
+          excOmitted: null,
+          hasSystemFrames: false,
+        },
+      },
+      {
+        type: 'breadcrumbs',
+        data: {
+          values: [
+            {
+              category: 'xhr',
+              level: 'info',
+              event_id: null,
+              timestamp: '2018-01-23T08:12:53.591Z',
+              data: {
+                url: 'https://reload.getsentry.net/page/',
+                status_code: '201',
+                method: 'POST',
+              },
+              message: null,
+              type: 'http',
+            },
+            {
+              category: 'xhr',
+              level: 'info',
+              event_id: null,
+              timestamp: '2018-01-23T08:12:53.636Z',
+              data: {
+                url: '/api/0/organizations/?member=1',
+                status_code: '200',
+                method: 'GET',
+              },
+              message: null,
+              type: 'http',
+            },
+            {
+              category: 'xhr',
+              level: 'info',
+              event_id: null,
+              timestamp: '2018-01-23T08:12:53.895Z',
+              data: {url: '/api/0/internal/health/', status_code: '403', method: 'GET'},
+              message: null,
+              type: 'http',
+            },
+          ],
+        },
+      },
+      {
+        type: 'request',
+        data: {
+          fragment: '',
+          cookies: [],
+          inferredContentType: null,
+          env: null,
+          headers: [
+            ['Referer', '[Filtered]'],
+            [
+              'User-Agent',
+              'Mozilla/5.0 (Linux; Android 7.0; ONEPLUS A3003 Build/NRD90M; wv) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/56.0.2924.87 Mobile Safari/537.36',
+            ],
+          ],
+          url: 'https://sentry.io/hiventy/kraken-prod/issues/438681831/',
+          query: 'referrer=slack',
+          data: null,
+          method: null,
+        },
+      },
+    ],
+  ];
+}
diff --git a/tests/js/fixtures/environments.js b/tests/js/sentry-test/fixtures/environments.js
similarity index 100%
rename from tests/js/fixtures/environments.js
rename to tests/js/sentry-test/fixtures/environments.js
diff --git a/tests/js/fixtures/event.js b/tests/js/sentry-test/fixtures/event.js
similarity index 100%
rename from tests/js/fixtures/event.js
rename to tests/js/sentry-test/fixtures/event.js
diff --git a/tests/js/fixtures/eventEntry.js b/tests/js/sentry-test/fixtures/eventEntry.js
similarity index 100%
rename from tests/js/fixtures/eventEntry.js
rename to tests/js/sentry-test/fixtures/eventEntry.js
diff --git a/tests/js/fixtures/eventIdQueryResult.js b/tests/js/sentry-test/fixtures/eventIdQueryResult.js
similarity index 100%
rename from tests/js/fixtures/eventIdQueryResult.js
rename to tests/js/sentry-test/fixtures/eventIdQueryResult.js
diff --git a/tests/js/fixtures/eventStacktraceException.js b/tests/js/sentry-test/fixtures/eventStacktraceException.js
similarity index 100%
rename from tests/js/fixtures/eventStacktraceException.js
rename to tests/js/sentry-test/fixtures/eventStacktraceException.js
diff --git a/tests/js/sentry-test/fixtures/events.js b/tests/js/sentry-test/fixtures/events.js
new file mode 100644
index 0000000000..d73d817f6b
--- /dev/null
+++ b/tests/js/sentry-test/fixtures/events.js
@@ -0,0 +1,144 @@
+import {Event} from './event';
+
+export function Events(params = []) {
+  return [
+    Event({eventID: '12345', id: '1', message: 'ApiException', groupID: '1'}),
+    Event({
+      eventID: '12346',
+      id: '2',
+      message: 'TestException',
+      groupID: '1',
+    }),
+    ...params,
+  ];
+}
+
+export function EventsStats(query = {}, params) {
+  return {
+    data: [[new Date(), [{count: 321}, {count: 79}]], [new Date(), [{count: 123}]]],
+    ...params,
+  };
+}
+
+export function DetailedEvents() {
+  return [
+    {
+      eventID: '807f0de4d8c246098f21f8e0f1684f3d',
+      packages: {},
+      dist: null,
+      tags: [
+        {value: 'Chrome 59.0.3071', key: 'browser'},
+        {value: 'Chrome', key: 'browser.name'},
+        {value: 'error', key: 'level'},
+        {value: 'javascript', key: 'logger'},
+        {value: 'Mac OS X 10.12.5', key: 'os'},
+        {value: 'Mac OS X', key: 'os.name'},
+        {value: 'd5241c9d9d2bcda918c7af72f07cea1e39a096ac', key: 'release'},
+        {
+          value: 'app/components/assigneeSelector in assignedTo',
+          key: 'transaction',
+        },
+        {
+          value: 'http://localhost:8000/sentry/internal/issues/227/grouping/',
+          key: 'url',
+        },
+        {value: 'id:1', key: 'user'},
+      ],
+      contexts: {
+        os: {version: '10.12.5', type: 'os', name: 'Mac OS X'},
+        browser: {version: '59.0.3071', type: 'browser', name: 'Chrome'},
+      },
+      dateReceived: '2017-07-26T00:34:20Z',
+      dateCreated: '2017-07-26T00:34:20Z',
+      fingerprints: [
+        '2c4887696f708c476a81ce4e834c4b02',
+        'e05da55328a860b21f62e371f0a7507d',
+      ],
+      metadata: {
+        type: 'TypeError',
+        value: "Cannot read property 'assignedTo' of undefined",
+      },
+      groupID: '268',
+      platform: 'javascript',
+      errors: [],
+      user: {ip_address: '127.0.0.1', email: 'billy@sentry.io', id: '1'},
+      context: {'session:duration': 46363},
+      entries: [],
+      title: "TypeError: Cannot read property 'assignedTo' of undefined",
+      message:
+        "TypeError Cannot read property 'assignedTo' of undefined app/components/assigneeSelector in assignedTo",
+      sdk: {
+        clientIP: '127.0.0.1',
+        version: '3.16.1',
+        name: 'raven-js',
+        upstream: {
+          url: 'https://docs.sentry.io/clients/javascript/',
+          isNewer: false,
+          name: 'raven-js',
+        },
+      },
+      type: 'error',
+      id: '904',
+      size: 21896,
+    },
+    {
+      eventID: '807f0de4d8c246098f21f8e0f1684f3d',
+      packages: {},
+      dist: null,
+      tags: [
+        {value: 'Chrome 59.0.3071', key: 'browser'},
+        {value: 'Chrome', key: 'browser.name'},
+        {value: 'error', key: 'level'},
+        {value: 'javascript', key: 'logger'},
+        {value: 'Mac OS X 10.12.5', key: 'os'},
+        {value: 'Mac OS X', key: 'os.name'},
+        {value: 'd5241c9d9d2bcda918c7af72f07cea1e39a096ac', key: 'release'},
+        {
+          value: 'app/components/assigneeSelector in assignedTo',
+          key: 'transaction',
+        },
+        {
+          value: 'http://localhost:8000/sentry/internal/issues/227/grouping/',
+          key: 'url',
+        },
+        {value: 'id:1', key: 'user'},
+      ],
+      contexts: {
+        os: {version: '10.12.5', type: 'os', name: 'Mac OS X'},
+        browser: {version: '59.0.3071', type: 'browser', name: 'Chrome'},
+      },
+      dateReceived: '2017-07-26T00:34:20Z',
+      dateCreated: '2017-07-26T00:34:20Z',
+      fingerprints: [
+        '2c4887696f708c476a81ce4e834c4b02',
+        'e05da55328a860b21f62e371f0a7507d',
+      ],
+      metadata: {
+        type: 'TypeError',
+        value: "Cannot read property 'assignedTo' of undefined",
+      },
+      groupID: '268',
+      platform: 'javascript',
+      errors: [],
+      user: {ip_address: '127.0.0.1', email: 'billy@sentry.io', id: '1'},
+      context: {'session:duration': 46363},
+      entries: [],
+      title: "TypeError: Cannot read property 'assignedTo' of undefined",
+      message:
+        "TypeError Cannot read property 'assignedTo' of undefined app/components/assigneeSelector in assignedTo",
+      sdk: {
+        clientIP: '127.0.0.1',
+        version: '3.16.1',
+        name: 'raven-js',
+        upstream: {
+          url: 'https://docs.sentry.io/clients/javascript/',
+          isNewer: false,
+          name: 'raven-js',
+        },
+      },
+      type: 'error',
+      id: '904',
+      size: 21896,
+    },
+  ];
+}
diff --git a/tests/js/fixtures/exceptionWithMeta.jsx b/tests/js/sentry-test/fixtures/exceptionWithMeta.jsx
similarity index 100%
rename from tests/js/fixtures/exceptionWithMeta.jsx
rename to tests/js/sentry-test/fixtures/exceptionWithMeta.jsx
diff --git a/tests/js/fixtures/githubIntegration.js b/tests/js/sentry-test/fixtures/githubIntegration.js
similarity index 100%
rename from tests/js/fixtures/githubIntegration.js
rename to tests/js/sentry-test/fixtures/githubIntegration.js
diff --git a/tests/js/fixtures/githubIntegrationProvider.js b/tests/js/sentry-test/fixtures/githubIntegrationProvider.js
similarity index 100%
rename from tests/js/fixtures/githubIntegrationProvider.js
rename to tests/js/sentry-test/fixtures/githubIntegrationProvider.js
diff --git a/tests/js/fixtures/githubRepositoryProvider.js b/tests/js/sentry-test/fixtures/githubRepositoryProvider.js
similarity index 100%
rename from tests/js/fixtures/githubRepositoryProvider.js
rename to tests/js/sentry-test/fixtures/githubRepositoryProvider.js
diff --git a/tests/js/fixtures/globalSelection.js b/tests/js/sentry-test/fixtures/globalSelection.js
similarity index 100%
rename from tests/js/fixtures/globalSelection.js
rename to tests/js/sentry-test/fixtures/globalSelection.js
diff --git a/tests/js/fixtures/group.js b/tests/js/sentry-test/fixtures/group.js
similarity index 100%
rename from tests/js/fixtures/group.js
rename to tests/js/sentry-test/fixtures/group.js
diff --git a/tests/js/fixtures/groupingConfigs.js b/tests/js/sentry-test/fixtures/groupingConfigs.js
similarity index 100%
rename from tests/js/fixtures/groupingConfigs.js
rename to tests/js/sentry-test/fixtures/groupingConfigs.js
diff --git a/tests/js/fixtures/groupingEnhancements.js b/tests/js/sentry-test/fixtures/groupingEnhancements.js
similarity index 100%
rename from tests/js/fixtures/groupingEnhancements.js
rename to tests/js/sentry-test/fixtures/groupingEnhancements.js
diff --git a/tests/js/sentry-test/fixtures/groups.js b/tests/js/sentry-test/fixtures/groups.js
new file mode 100644
index 0000000000..3715798696
--- /dev/null
+++ b/tests/js/sentry-test/fixtures/groups.js
@@ -0,0 +1,131 @@
+export function Groups() {
+  return [
+    {
+      lastSeen: '2017-07-25T02:22:19Z',
+      numComments: 0,
+      userCount: 1,
+      culprit: 'Constructor.onSimilarUpdate(app/views/groupSimilar/groupingMergedList)',
+      title: 'ReferenceError: unmergedList is not defined',
+      id: '274',
+      assignedTo: null,
+      logger: 'javascript',
+      type: 'error',
+      annotations: [],
+      metadata: {type: 'ReferenceError', value: 'unmergedList is not defined'},
+      status: 'unresolved',
+      subscriptionDetails: null,
+      isPublic: false,
+      hasSeen: false,
+      shortId: 'INTERNAL-4K',
+      shareId: '312e323734',
+      firstSeen: '2017-07-25T02:21:52Z',
+      count: '2',
+      permalink: 'http://localhost:8000/sentry/project-slug/issues/274/',
+      level: 'error',
+      isSubscribed: true,
+      isBookmarked: false,
+      project: {name: 'Internal', slug: 'project-slug', id: '123'},
+      statusDetails: {},
+    },
+    {
+      lastSeen: '2017-07-25T02:20:35Z',
+      numComments: 0,
+      userCount: 1,
+      culprit: 'size(app/views/groupSimilar/groupingMergedList)',
+      title: "TypeError: Cannot read property 'size' of undefined",
+      id: '275',
+      assignedTo: null,
+      logger: 'javascript',
+      type: 'error',
+      annotations: [],
+      metadata: {type: 'TypeError', value: "Cannot read property 'size' of undefined"},
+      status: 'unresolved',
+      subscriptionDetails: null,
+      isPublic: false,
+      hasSeen: true,
+      shortId: 'INTERNAL-4M',
+      shareId: '312e323735',
+      firstSeen: '2017-07-25T02:20:35Z',
+      count: '1',
+      permalink: 'http://localhost:8000/sentry/project-slug/issues/275/',
+      level: 'error',
+      isSubscribed: true,
+      isBookmarked: false,
+      project: {name: 'Internal', slug: 'project-slug', id: '123'},
+      statusDetails: {},
+    },
+    {
+      lastSeen: '2017-07-24T23:41:44Z',
+      numComments: 0,
+      userCount: 3,
+      culprit: 'length(app/views/groupSimilar/groupSimilarView)',
+      title: "TypeError: Cannot read property 'length' of undefined",
+      id: '271',
+      assignedTo: null,
+      logger: 'javascript',
+      type: 'error',
+      annotations: [],
+      metadata: {
+        type: 'TypeError',
+        value: "Cannot read property 'length' of undefined",
+      },
+      status: 'resolved',
+      subscriptionDetails: null,
+      isPublic: false,
+      hasSeen: false,
+      shortId: 'INTERNAL-4G',
+      shareId: '312e323731',
+      firstSeen: '2017-07-10T18:32:43Z',
+      count: '90',
+      permalink: 'http://localhost:8000/sentry/project-slug/issues/271/',
+      level: 'error',
+      isSubscribed: true,
+      isBookmarked: false,
+      project: {name: 'Internal', slug: 'project-slug', id: '123'},
+      statusDetails: {},
+    },
+    {
+      lastSeen: '2017-07-25T23:21:19Z',
+      numComments: 0,
+      userCount: 1,
+      culprit: 'stale(app/views/groupDetails)',
+      title: "TypeError: Cannot read property 'stale' of undefined",
+      id: '216',
+      assignedTo: {
+        username: 'billy@sentry.io',
+        isManaged: false,
+        lastActive: '2017-07-26T18:28:19.391Z',
+        identities: [],
+        id: '1',
+        isActive: true,
+        has2fa: false,
+        name: 'billy@sentry.io',
+        avatarUrl:
+          'https://secure.gravatar.com/avatar/7b544e8eb9d08ed777be5aa82121155a?s=32&d=mm',
+        dateJoined: '2017-06-26T21:02:13.264Z',
+        emails: [{is_verified: false, id: '1', email: 'billy@sentry.io'}],
+        avatar: {avatarUuid: null, avatarType: 'letter_avatar'},
+        lastLogin: '2017-07-25T01:00:50.473Z',
+        email: 'billy@sentry.io',
+      },
+      logger: 'javascript',
+      type: 'error',
+      annotations: [],
+      metadata: {type: 'TypeError', value: "Cannot read property 'stale' of undefined"},
+      status: 'unresolved',
+      subscriptionDetails: {reason: 'changed_status'},
+      isPublic: false,
+      hasSeen: true,
+      shortId: 'INTERNAL-2S',
+      shareId: '312e323136',
+      firstSeen: '2017-07-25T02:20:35Z',
+      count: '15',
+      permalink: 'http://localhost:8000/sentry/project-slug/issues/216/',
+      level: 'error',
+      isSubscribed: true,
+      isBookmarked: false,
+      project: {name: 'Internal', slug: 'project-slug', id: '123'},
+      statusDetails: {},
+    },
+  ];
+}
diff --git a/tests/js/fixtures/incident.js b/tests/js/sentry-test/fixtures/incident.js
similarity index 100%
rename from tests/js/fixtures/incident.js
rename to tests/js/sentry-test/fixtures/incident.js
diff --git a/tests/js/fixtures/incidentActivity.jsx b/tests/js/sentry-test/fixtures/incidentActivity.jsx
similarity index 82%
rename from tests/js/fixtures/incidentActivity.jsx
rename to tests/js/sentry-test/fixtures/incidentActivity.jsx
index 516b0f319b..b04cb18d10 100644
--- a/tests/js/fixtures/incidentActivity.jsx
+++ b/tests/js/sentry-test/fixtures/incidentActivity.jsx
@@ -1,4 +1,4 @@
-import {User} from 'app-test/fixtures/user';
+import {User} from 'sentry-test/fixtures/user';
 
 export function IncidentActivity(params) {
   return {
diff --git a/tests/js/fixtures/incidentRule.js b/tests/js/sentry-test/fixtures/incidentRule.js
similarity index 100%
rename from tests/js/fixtures/incidentRule.js
rename to tests/js/sentry-test/fixtures/incidentRule.js
diff --git a/tests/js/fixtures/incidentSuspectCommit.js b/tests/js/sentry-test/fixtures/incidentSuspectCommit.js
similarity index 100%
rename from tests/js/fixtures/incidentSuspectCommit.js
rename to tests/js/sentry-test/fixtures/incidentSuspectCommit.js
diff --git a/tests/js/fixtures/incidentTrigger.js b/tests/js/sentry-test/fixtures/incidentTrigger.js
similarity index 100%
rename from tests/js/fixtures/incidentTrigger.js
rename to tests/js/sentry-test/fixtures/incidentTrigger.js
diff --git a/tests/js/fixtures/installWizard.js b/tests/js/sentry-test/fixtures/installWizard.js
similarity index 100%
rename from tests/js/fixtures/installWizard.js
rename to tests/js/sentry-test/fixtures/installWizard.js
diff --git a/tests/js/fixtures/jiraIntegration.js b/tests/js/sentry-test/fixtures/jiraIntegration.js
similarity index 100%
rename from tests/js/fixtures/jiraIntegration.js
rename to tests/js/sentry-test/fixtures/jiraIntegration.js
diff --git a/tests/js/fixtures/jiraIntegrationProvider.js b/tests/js/sentry-test/fixtures/jiraIntegrationProvider.js
similarity index 100%
rename from tests/js/fixtures/jiraIntegrationProvider.js
rename to tests/js/sentry-test/fixtures/jiraIntegrationProvider.js
diff --git a/tests/js/fixtures/member.js b/tests/js/sentry-test/fixtures/member.js
similarity index 100%
rename from tests/js/fixtures/member.js
rename to tests/js/sentry-test/fixtures/member.js
diff --git a/tests/js/fixtures/members.js b/tests/js/sentry-test/fixtures/members.js
similarity index 100%
rename from tests/js/fixtures/members.js
rename to tests/js/sentry-test/fixtures/members.js
diff --git a/tests/js/fixtures/organization.js b/tests/js/sentry-test/fixtures/organization.js
similarity index 100%
rename from tests/js/fixtures/organization.js
rename to tests/js/sentry-test/fixtures/organization.js
diff --git a/tests/js/fixtures/organizationEvent.js b/tests/js/sentry-test/fixtures/organizationEvent.js
similarity index 100%
rename from tests/js/fixtures/organizationEvent.js
rename to tests/js/sentry-test/fixtures/organizationEvent.js
diff --git a/tests/js/fixtures/organizations.js b/tests/js/sentry-test/fixtures/organizations.js
similarity index 100%
rename from tests/js/fixtures/organizations.js
rename to tests/js/sentry-test/fixtures/organizations.js
diff --git a/tests/js/fixtures/phabricator.js b/tests/js/sentry-test/fixtures/phabricator.js
similarity index 100%
rename from tests/js/fixtures/phabricator.js
rename to tests/js/sentry-test/fixtures/phabricator.js
diff --git a/tests/js/fixtures/platformExternalIssue.js b/tests/js/sentry-test/fixtures/platformExternalIssue.js
similarity index 100%
rename from tests/js/fixtures/platformExternalIssue.js
rename to tests/js/sentry-test/fixtures/platformExternalIssue.js
diff --git a/tests/js/fixtures/plugin.js b/tests/js/sentry-test/fixtures/plugin.js
similarity index 100%
rename from tests/js/fixtures/plugin.js
rename to tests/js/sentry-test/fixtures/plugin.js
diff --git a/tests/js/fixtures/plugins.js b/tests/js/sentry-test/fixtures/plugins.js
similarity index 100%
rename from tests/js/fixtures/plugins.js
rename to tests/js/sentry-test/fixtures/plugins.js
diff --git a/tests/js/fixtures/project.js b/tests/js/sentry-test/fixtures/project.js
similarity index 100%
rename from tests/js/fixtures/project.js
rename to tests/js/sentry-test/fixtures/project.js
diff --git a/tests/js/fixtures/projectAlertRule.js b/tests/js/sentry-test/fixtures/projectAlertRule.js
similarity index 100%
rename from tests/js/fixtures/projectAlertRule.js
rename to tests/js/sentry-test/fixtures/projectAlertRule.js
diff --git a/tests/js/fixtures/projectAlertRuleConfiguration.js b/tests/js/sentry-test/fixtures/projectAlertRuleConfiguration.js
similarity index 100%
rename from tests/js/fixtures/projectAlertRuleConfiguration.js
rename to tests/js/sentry-test/fixtures/projectAlertRuleConfiguration.js
diff --git a/tests/js/fixtures/projectDetails.js b/tests/js/sentry-test/fixtures/projectDetails.js
similarity index 100%
rename from tests/js/fixtures/projectDetails.js
rename to tests/js/sentry-test/fixtures/projectDetails.js
diff --git a/tests/js/fixtures/projectFilters.js b/tests/js/sentry-test/fixtures/projectFilters.js
similarity index 100%
rename from tests/js/fixtures/projectFilters.js
rename to tests/js/sentry-test/fixtures/projectFilters.js
diff --git a/tests/js/fixtures/projectKeys.js b/tests/js/sentry-test/fixtures/projectKeys.js
similarity index 100%
rename from tests/js/fixtures/projectKeys.js
rename to tests/js/sentry-test/fixtures/projectKeys.js
diff --git a/tests/js/fixtures/pullRequest.js b/tests/js/sentry-test/fixtures/pullRequest.js
similarity index 100%
rename from tests/js/fixtures/pullRequest.js
rename to tests/js/sentry-test/fixtures/pullRequest.js
diff --git a/tests/js/fixtures/release.js b/tests/js/sentry-test/fixtures/release.js
similarity index 100%
rename from tests/js/fixtures/release.js
rename to tests/js/sentry-test/fixtures/release.js
diff --git a/tests/js/fixtures/repository.js b/tests/js/sentry-test/fixtures/repository.js
similarity index 100%
rename from tests/js/fixtures/repository.js
rename to tests/js/sentry-test/fixtures/repository.js
diff --git a/tests/js/fixtures/roleList.js b/tests/js/sentry-test/fixtures/roleList.js
similarity index 100%
rename from tests/js/fixtures/roleList.js
rename to tests/js/sentry-test/fixtures/roleList.js
diff --git a/tests/js/fixtures/search.js b/tests/js/sentry-test/fixtures/search.js
similarity index 100%
rename from tests/js/fixtures/search.js
rename to tests/js/sentry-test/fixtures/search.js
diff --git a/tests/js/fixtures/searches.js b/tests/js/sentry-test/fixtures/searches.js
similarity index 100%
rename from tests/js/fixtures/searches.js
rename to tests/js/sentry-test/fixtures/searches.js
diff --git a/tests/js/fixtures/sentryApp.js b/tests/js/sentry-test/fixtures/sentryApp.js
similarity index 100%
rename from tests/js/fixtures/sentryApp.js
rename to tests/js/sentry-test/fixtures/sentryApp.js
diff --git a/tests/js/fixtures/sentryAppComponent.js b/tests/js/sentry-test/fixtures/sentryAppComponent.js
similarity index 100%
rename from tests/js/fixtures/sentryAppComponent.js
rename to tests/js/sentry-test/fixtures/sentryAppComponent.js
diff --git a/tests/js/fixtures/sentryAppInstallation.js b/tests/js/sentry-test/fixtures/sentryAppInstallation.js
similarity index 100%
rename from tests/js/fixtures/sentryAppInstallation.js
rename to tests/js/sentry-test/fixtures/sentryAppInstallation.js
diff --git a/tests/js/fixtures/sentryAppToken.js b/tests/js/sentry-test/fixtures/sentryAppToken.js
similarity index 100%
rename from tests/js/fixtures/sentryAppToken.js
rename to tests/js/sentry-test/fixtures/sentryAppToken.js
diff --git a/tests/js/fixtures/sentryAppWebhookError.js b/tests/js/sentry-test/fixtures/sentryAppWebhookError.js
similarity index 100%
rename from tests/js/fixtures/sentryAppWebhookError.js
rename to tests/js/sentry-test/fixtures/sentryAppWebhookError.js
diff --git a/tests/js/fixtures/serviceIncident.js b/tests/js/sentry-test/fixtures/serviceIncident.js
similarity index 100%
rename from tests/js/fixtures/serviceIncident.js
rename to tests/js/sentry-test/fixtures/serviceIncident.js
diff --git a/tests/js/fixtures/shortIdQueryResult.js b/tests/js/sentry-test/fixtures/shortIdQueryResult.js
similarity index 100%
rename from tests/js/fixtures/shortIdQueryResult.js
rename to tests/js/sentry-test/fixtures/shortIdQueryResult.js
diff --git a/tests/js/fixtures/subscriptions.js b/tests/js/sentry-test/fixtures/subscriptions.js
similarity index 100%
rename from tests/js/fixtures/subscriptions.js
rename to tests/js/sentry-test/fixtures/subscriptions.js
diff --git a/tests/js/fixtures/tags.js b/tests/js/sentry-test/fixtures/tags.js
similarity index 100%
rename from tests/js/fixtures/tags.js
rename to tests/js/sentry-test/fixtures/tags.js
diff --git a/tests/js/fixtures/tagvalues.js b/tests/js/sentry-test/fixtures/tagvalues.js
similarity index 100%
rename from tests/js/fixtures/tagvalues.js
rename to tests/js/sentry-test/fixtures/tagvalues.js
diff --git a/tests/js/fixtures/team.js b/tests/js/sentry-test/fixtures/team.js
similarity index 100%
rename from tests/js/fixtures/team.js
rename to tests/js/sentry-test/fixtures/team.js
diff --git a/tests/js/fixtures/tombstones.js b/tests/js/sentry-test/fixtures/tombstones.js
similarity index 100%
rename from tests/js/fixtures/tombstones.js
rename to tests/js/sentry-test/fixtures/tombstones.js
diff --git a/tests/js/fixtures/updateSdkAndEnableIntegrationSuggestion.jsx b/tests/js/sentry-test/fixtures/updateSdkAndEnableIntegrationSuggestion.jsx
similarity index 100%
rename from tests/js/fixtures/updateSdkAndEnableIntegrationSuggestion.jsx
rename to tests/js/sentry-test/fixtures/updateSdkAndEnableIntegrationSuggestion.jsx
diff --git a/tests/js/fixtures/user.js b/tests/js/sentry-test/fixtures/user.js
similarity index 100%
rename from tests/js/fixtures/user.js
rename to tests/js/sentry-test/fixtures/user.js
diff --git a/tests/js/fixtures/userDetails.js b/tests/js/sentry-test/fixtures/userDetails.js
similarity index 100%
rename from tests/js/fixtures/userDetails.js
rename to tests/js/sentry-test/fixtures/userDetails.js
diff --git a/tests/js/fixtures/userFeedback.js b/tests/js/sentry-test/fixtures/userFeedback.js
similarity index 100%
rename from tests/js/fixtures/userFeedback.js
rename to tests/js/sentry-test/fixtures/userFeedback.js
diff --git a/tests/js/fixtures/vsts-old.js b/tests/js/sentry-test/fixtures/vsts-old.js
similarity index 100%
rename from tests/js/fixtures/vsts-old.js
rename to tests/js/sentry-test/fixtures/vsts-old.js
diff --git a/tests/js/fixtures/vstsIntegrationProvider.js b/tests/js/sentry-test/fixtures/vstsIntegrationProvider.js
similarity index 100%
rename from tests/js/fixtures/vstsIntegrationProvider.js
rename to tests/js/sentry-test/fixtures/vstsIntegrationProvider.js
diff --git a/tests/js/fixtures/widget.js b/tests/js/sentry-test/fixtures/widget.js
similarity index 100%
rename from tests/js/fixtures/widget.js
rename to tests/js/sentry-test/fixtures/widget.js
diff --git a/tests/js/helpers/importStyleMock.js b/tests/js/sentry-test/importStyleMock.js
similarity index 100%
rename from tests/js/helpers/importStyleMock.js
rename to tests/js/sentry-test/importStyleMock.js
diff --git a/tests/js/helpers/index.jsx b/tests/js/sentry-test/index.jsx
similarity index 100%
rename from tests/js/helpers/index.jsx
rename to tests/js/sentry-test/index.jsx
diff --git a/tests/js/helpers/initializeOrg.jsx b/tests/js/sentry-test/initializeOrg.jsx
similarity index 100%
rename from tests/js/helpers/initializeOrg.jsx
rename to tests/js/sentry-test/initializeOrg.jsx
diff --git a/tests/js/helpers/loadFixtures.js b/tests/js/sentry-test/loadFixtures.js
similarity index 100%
rename from tests/js/helpers/loadFixtures.js
rename to tests/js/sentry-test/loadFixtures.js
diff --git a/tests/js/helpers/mockRouterPush.jsx b/tests/js/sentry-test/mockRouterPush.jsx
similarity index 100%
rename from tests/js/helpers/mockRouterPush.jsx
rename to tests/js/sentry-test/mockRouterPush.jsx
diff --git a/tests/js/helpers/select.js b/tests/js/sentry-test/select.js
similarity index 100%
rename from tests/js/helpers/select.js
rename to tests/js/sentry-test/select.js
diff --git a/tests/js/helpers/svgMock.js b/tests/js/sentry-test/svgMock.js
similarity index 100%
rename from tests/js/helpers/svgMock.js
rename to tests/js/sentry-test/svgMock.js
diff --git a/tests/js/setup.js b/tests/js/setup.js
index f1a5ed6e70..34d818b2e5 100644
--- a/tests/js/setup.js
+++ b/tests/js/setup.js
@@ -1,5 +1,4 @@
 /* global __dirname */
-import {channel, createBroadcast} from 'emotion-theming';
 import jQuery from 'jquery';
 import Adapter from 'enzyme-adapter-react-16';
 import Enzyme from 'enzyme';
@@ -8,11 +7,10 @@ import PropTypes from 'prop-types';
 import fromEntries from 'object.fromentries';
 
 import ConfigStore from 'app/stores/configStore';
-import theme from 'app/utils/theme';
 
-import {loadFixtures} from './helpers/loadFixtures';
+import {loadFixtures} from './sentry-test/loadFixtures';
 
-export * from './helpers/select';
+export * from './sentry-test/select';
 
 // We need this polyfill for testing only because
 // typescript handles it for main application
@@ -30,16 +28,11 @@ Enzyme.configure({disableLifecycleMethods: true});
 const constantDate = new Date(1508208080000); //National Pasta Day
 MockDate.set(constantDate);
 
-/**
- * emotion setup for theme provider in context
- */
-const broadcast = createBroadcast(theme);
-
 /**
  * Load all files in `tests/js/fixtures/*` as a module.
  * These will then be added to the `TestStubs` global below
  */
-const fixturesPath = `${__dirname}/fixtures`;
+const fixturesPath = `${__dirname}/sentry-test/fixtures`;
 const fixtures = loadFixtures(fixturesPath);
 
 /**
@@ -196,10 +189,6 @@ window.TestStubs = {
 
   routerContext: ([context, childContextTypes] = []) => ({
     context: {
-      [channel]: {
-        subscribe: broadcast.subscribe,
-        unsubscribe: broadcast.unsubscribe,
-      },
       location: TestStubs.location(),
       router: TestStubs.router(),
       organization: fixtures.Organization(),
@@ -207,7 +196,6 @@ window.TestStubs = {
       ...context,
     },
     childContextTypes: {
-      [channel]: PropTypes.object,
       router: PropTypes.object,
       location: PropTypes.object,
       organization: PropTypes.object,
diff --git a/tests/js/spec/components/acl/access.spec.jsx b/tests/js/spec/components/acl/access.spec.jsx
index cc1ff21cac..495493602c 100644
--- a/tests/js/spec/components/acl/access.spec.jsx
+++ b/tests/js/spec/components/acl/access.spec.jsx
@@ -1,5 +1,5 @@
 import React from 'react';
-import {mount} from 'enzyme';
+import {mount} from 'sentry-test/enzyme';
 
 import Access from 'app/components/acl/access';
 import ConfigStore from 'app/stores/configStore';
diff --git a/tests/js/spec/components/acl/feature.spec.jsx b/tests/js/spec/components/acl/feature.spec.jsx
index 3bd1bbb600..75ddb76fb1 100644
--- a/tests/js/spec/components/acl/feature.spec.jsx
+++ b/tests/js/spec/components/acl/feature.spec.jsx
@@ -1,5 +1,5 @@
 import React from 'react';
-import {mount} from 'enzyme';
+import {mount, mountWithTheme} from 'sentry-test/enzyme';
 
 import Feature from 'app/components/acl/feature';
 import ConfigStore from 'app/stores/configStore';
@@ -220,7 +220,7 @@ describe('Feature', function() {
     });
 
     it('renders a default disabled component', function() {
-      const wrapper = mount(
+      const wrapper = mountWithTheme(
         <Feature features={['org-baz']} renderDisabled>
           <div>The Child</div>
         </Feature>,
diff --git a/tests/js/spec/components/acl/featureDisabled.spec.jsx b/tests/js/spec/components/acl/featureDisabled.spec.jsx
index cb7054d95d..b9143837fc 100644
--- a/tests/js/spec/components/acl/featureDisabled.spec.jsx
+++ b/tests/js/spec/components/acl/featureDisabled.spec.jsx
@@ -1,14 +1,14 @@
 import React from 'react';
 
 import {PanelAlert} from 'app/components/panels';
-import {mount} from 'enzyme';
+import {mountWithTheme} from 'sentry-test/enzyme';
 import FeatureDisabled from 'app/components/acl/featureDisabled';
 
 describe('FeatureDisabled', function() {
   const routerContext = TestStubs.routerContext();
 
   it('renders', function() {
-    const wrapper = mount(
+    const wrapper = mountWithTheme(
       <FeatureDisabled
         features={['organization:my-features']}
         featureName="Some Feature"
@@ -29,7 +29,7 @@ describe('FeatureDisabled', function() {
 
   it('renders with custom message', function() {
     const customMessage = 'custom message';
-    const wrapper = mount(
+    const wrapper = mountWithTheme(
       <FeatureDisabled
         message={customMessage}
         features={['organization:my-features']}
@@ -47,7 +47,7 @@ describe('FeatureDisabled', function() {
   });
 
   it('renders as an Alert', function() {
-    const wrapper = mount(
+    const wrapper = mountWithTheme(
       <FeatureDisabled
         alert
         features={['organization:my-features']}
@@ -60,7 +60,7 @@ describe('FeatureDisabled', function() {
   });
 
   it('renders with custom alert component', function() {
-    const wrapper = mount(
+    const wrapper = mountWithTheme(
       <FeatureDisabled
         alert={PanelAlert}
         features={['organization:my-features']}
@@ -73,7 +73,7 @@ describe('FeatureDisabled', function() {
   });
 
   it('displays instructions when help is clicked', function() {
-    const wrapper = mount(
+    const wrapper = mountWithTheme(
       <FeatureDisabled
         alert
         features={['organization:my-features']}
diff --git a/tests/js/spec/components/actions/ignore.spec.jsx b/tests/js/spec/components/actions/ignore.spec.jsx
index 4ab9a0dfb1..336639fd88 100644
--- a/tests/js/spec/components/actions/ignore.spec.jsx
+++ b/tests/js/spec/components/actions/ignore.spec.jsx
@@ -1,5 +1,5 @@
 import React from 'react';
-import {mount} from 'enzyme';
+import {mount, mountWithTheme} from 'sentry-test/enzyme';
 import $ from 'jquery';
 import IgnoreActions from 'app/components/actions/ignore';
 
@@ -65,7 +65,7 @@ describe('IgnoreActions', function() {
     const spy = jest.fn();
 
     beforeEach(function() {
-      component = mount(
+      component = mountWithTheme(
         <IgnoreActions onUpdate={spy} shouldConfirm confirmMessage="Yoooooo" />,
         routerContext
       );
diff --git a/tests/js/spec/components/actions/resolve.spec.jsx b/tests/js/spec/components/actions/resolve.spec.jsx
index 6f8a669e93..aa61f8723b 100644
--- a/tests/js/spec/components/actions/resolve.spec.jsx
+++ b/tests/js/spec/components/actions/resolve.spec.jsx
@@ -1,5 +1,5 @@
 import React from 'react';
-import {mount} from 'enzyme';
+import {mountWithTheme} from 'sentry-test/enzyme';
 import $ from 'jquery';
 import ResolveActions from 'app/components/actions/resolve';
 
@@ -9,7 +9,7 @@ describe('ResolveActions', function() {
     const spy = jest.fn();
 
     beforeEach(function() {
-      component = mount(
+      component = mountWithTheme(
         <ResolveActions
           onUpdate={spy}
           disabled
@@ -37,7 +37,7 @@ describe('ResolveActions', function() {
     const spy = jest.fn();
 
     beforeEach(function() {
-      component = mount(
+      component = mountWithTheme(
         <ResolveActions
           onUpdate={spy}
           disableDropdown
@@ -70,7 +70,7 @@ describe('ResolveActions', function() {
     let component;
     const spy = jest.fn();
     beforeEach(function() {
-      component = mount(
+      component = mountWithTheme(
         <ResolveActions
           onUpdate={spy}
           disabled
@@ -98,7 +98,7 @@ describe('ResolveActions', function() {
   describe('auto resolved', function() {
     it('cannot be unresolved manually', function() {
       const spy = jest.fn();
-      const component = mount(
+      const component = mountWithTheme(
         <ResolveActions
           onUpdate={spy}
           disabled
@@ -120,7 +120,7 @@ describe('ResolveActions', function() {
     let component;
     const spy = jest.fn();
     beforeEach(function() {
-      component = mount(
+      component = mountWithTheme(
         <ResolveActions
           onUpdate={spy}
           hasRelease={false}
@@ -148,7 +148,7 @@ describe('ResolveActions', function() {
     const spy = jest.fn();
 
     beforeEach(function() {
-      component = mount(
+      component = mountWithTheme(
         <ResolveActions
           onUpdate={spy}
           hasRelease={false}
@@ -186,7 +186,7 @@ describe('ResolveActions', function() {
       url: '/projects/org-slug/project-slug/releases/',
       body: [TestStubs.Release()],
     });
-    const wrapper = mount(
+    const wrapper = mountWithTheme(
       <ResolveActions
         hasRelease
         orgId="org-slug"
diff --git a/tests/js/spec/components/activity/note/input.spec.jsx b/tests/js/spec/components/activity/note/input.spec.jsx
index 8ce6c135fc..bb22d531dc 100644
--- a/tests/js/spec/components/activity/note/input.spec.jsx
+++ b/tests/js/spec/components/activity/note/input.spec.jsx
@@ -1,7 +1,7 @@
 import React from 'react';
-import {mount} from 'enzyme';
+import {mountWithTheme} from 'sentry-test/enzyme';
 
-import changeReactMentionsInput from 'app-test/helpers/changeReactMentionsInput';
+import changeReactMentionsInput from 'sentry-test/changeReactMentionsInput';
 
 import NoteInput from 'app/components/activity/note/input';
 
@@ -16,12 +16,15 @@ describe('NoteInput', function() {
     };
 
     it('renders', function() {
-      mount(<NoteInput {...props} />, routerContext);
+      mountWithTheme(<NoteInput {...props} />, routerContext);
     });
 
     it('submits when meta + enter is pressed', function() {
       const onCreate = jest.fn();
-      const wrapper = mount(<NoteInput {...props} onCreate={onCreate} />, routerContext);
+      const wrapper = mountWithTheme(
+        <NoteInput {...props} onCreate={onCreate} />,
+        routerContext
+      );
 
       const input = wrapper.find('textarea');
 
@@ -31,7 +34,10 @@ describe('NoteInput', function() {
 
     it('submits when ctrl + enter is pressed', function() {
       const onCreate = jest.fn();
-      const wrapper = mount(<NoteInput {...props} onCreate={onCreate} />, routerContext);
+      const wrapper = mountWithTheme(
+        <NoteInput {...props} onCreate={onCreate} />,
+        routerContext
+      );
 
       const input = wrapper.find('textarea');
 
@@ -41,7 +47,7 @@ describe('NoteInput', function() {
 
     it('handles errors', async function() {
       const errorJSON = {detail: {message: '', code: 401, extra: ''}};
-      const wrapper = mount(
+      const wrapper = mountWithTheme(
         <NoteInput {...props} error={!!errorJSON} errorJSON={errorJSON} />,
         routerContext
       );
@@ -64,7 +70,7 @@ describe('NoteInput', function() {
     };
 
     const createWrapper = props => {
-      return mount(<NoteInput {...defaultProps} {...props} />, routerContext);
+      return mountWithTheme(<NoteInput {...defaultProps} {...props} />, routerContext);
     };
 
     it('edits existing message', async function() {
diff --git a/tests/js/spec/components/activity/note/inputWithStorage.spec.jsx b/tests/js/spec/components/activity/note/inputWithStorage.spec.jsx
index 4768668add..494eea0a14 100644
--- a/tests/js/spec/components/activity/note/inputWithStorage.spec.jsx
+++ b/tests/js/spec/components/activity/note/inputWithStorage.spec.jsx
@@ -1,7 +1,7 @@
 import React from 'react';
-import {mount} from 'enzyme';
+import {mountWithTheme} from 'sentry-test/enzyme';
 
-import changeReactMentionsInput from 'app-test/helpers/changeReactMentionsInput';
+import changeReactMentionsInput from 'sentry-test/changeReactMentionsInput';
 
 import NoteInputWithStorage from 'app/components/activity/note/inputWithStorage';
 import localStorage from 'app/utils/localStorage';
@@ -19,7 +19,10 @@ describe('NoteInputWithStorage', function() {
   const routerContext = TestStubs.routerContext();
 
   const createWrapper = props => {
-    return mount(<NoteInputWithStorage {...defaultProps} {...props} />, routerContext);
+    return mountWithTheme(
+      <NoteInputWithStorage {...defaultProps} {...props} />,
+      routerContext
+    );
   };
 
   it('loads draft item from local storage when mounting', function() {
diff --git a/tests/js/spec/components/alertLink.spec.jsx b/tests/js/spec/components/alertLink.spec.jsx
index b590404806..b2e8cf1b80 100644
--- a/tests/js/spec/components/alertLink.spec.jsx
+++ b/tests/js/spec/components/alertLink.spec.jsx
@@ -1,5 +1,5 @@
 import React from 'react';
-import {shallow} from 'enzyme';
+import {shallow} from 'sentry-test/enzyme';
 import AlertLink from 'app/components/alertLink';
 
 describe('AlertLink', function() {
diff --git a/tests/js/spec/components/assigneeSelector.spec.jsx b/tests/js/spec/components/assigneeSelector.spec.jsx
index 21df7ea08a..b99ed630fd 100644
--- a/tests/js/spec/components/assigneeSelector.spec.jsx
+++ b/tests/js/spec/components/assigneeSelector.spec.jsx
@@ -5,7 +5,7 @@ import {
   putSessionUserFirst,
 } from 'app/components/assigneeSelector';
 import {Client} from 'app/api';
-import {mount} from 'enzyme';
+import {mountWithTheme} from 'sentry-test/enzyme';
 import ConfigStore from 'app/stores/configStore';
 import GroupStore from 'app/stores/groupStore';
 import MemberListStore from 'app/stores/memberListStore';
@@ -73,7 +73,7 @@ describe('AssigneeSelector', function() {
     MemberListStore.items = null;
     MemberListStore.loaded = false;
 
-    assigneeSelector = mount(
+    assigneeSelector = mountWithTheme(
       <AssigneeSelectorComponent id={GROUP_1.id} />,
       TestStubs.routerContext()
     );
@@ -87,7 +87,7 @@ describe('AssigneeSelector', function() {
 
   describe('render with props', function() {
     it('renders members from the prop when present', async function() {
-      assigneeSelector = mount(
+      assigneeSelector = mountWithTheme(
         <AssigneeSelectorComponent id={GROUP_1.id} memberList={[USER_2, USER_3]} />,
         TestStubs.routerContext()
       );
@@ -273,7 +273,7 @@ describe('AssigneeSelector', function() {
 
     assigneeSelector.unmount();
     jest.spyOn(ConfigStore, 'get').mockImplementation(() => true);
-    assigneeSelector = mount(
+    assigneeSelector = mountWithTheme(
       <AssigneeSelectorComponent id={GROUP_1.id} />,
       routerContext
     );
@@ -292,7 +292,7 @@ describe('AssigneeSelector', function() {
 
     // Remove org:write access permission and make sure invite member button is not shown.
     assigneeSelector.unmount();
-    assigneeSelector = mount(
+    assigneeSelector = mountWithTheme(
       <AssigneeSelectorComponent id={GROUP_1.id} />,
       TestStubs.routerContext([{organization: TestStubs.Organization({access: []})}])
     );
diff --git a/tests/js/spec/components/assistant/guideAnchor.spec.jsx b/tests/js/spec/components/assistant/guideAnchor.spec.jsx
index 6cd98d122e..1bbbb144c6 100644
--- a/tests/js/spec/components/assistant/guideAnchor.spec.jsx
+++ b/tests/js/spec/components/assistant/guideAnchor.spec.jsx
@@ -1,5 +1,5 @@
 import React from 'react';
-import {mount, shallow} from 'enzyme';
+import {mountWithTheme, shallow} from 'sentry-test/enzyme';
 import GuideAnchor from 'app/components/assistant/guideAnchor';
 import GuideActions from 'app/actions/guideActions';
 import ConfigStore from 'app/stores/configStore';
@@ -26,8 +26,8 @@ describe('GuideAnchor', function() {
         isSuperuser: true,
       },
     };
-    wrapper1 = mount(<GuideAnchor target="target 1" />, routerContext);
-    wrapper2 = mount(<GuideAnchor target="target 2" />, routerContext);
+    wrapper1 = mountWithTheme(<GuideAnchor target="target 1" />, routerContext);
+    wrapper2 = mountWithTheme(<GuideAnchor target="target 2" />, routerContext);
   });
 
   afterEach(function() {
diff --git a/tests/js/spec/components/asyncComponent.spec.jsx b/tests/js/spec/components/asyncComponent.spec.jsx
index 68dbfb7ef2..a8324b594e 100644
--- a/tests/js/spec/components/asyncComponent.spec.jsx
+++ b/tests/js/spec/components/asyncComponent.spec.jsx
@@ -1,5 +1,5 @@
 import React from 'react';
-import {mount, shallow} from 'enzyme';
+import {mount, shallow} from 'sentry-test/enzyme';
 import {Client} from 'app/api';
 
 import AsyncComponent from 'app/components/asyncComponent';
diff --git a/tests/js/spec/components/autoComplete.spec.jsx b/tests/js/spec/components/autoComplete.spec.jsx
index 0b596e54f8..feb5f13929 100644
--- a/tests/js/spec/components/autoComplete.spec.jsx
+++ b/tests/js/spec/components/autoComplete.spec.jsx
@@ -1,5 +1,5 @@
 import React from 'react';
-import {mount} from 'enzyme';
+import {mount} from 'sentry-test/enzyme';
 import AutoComplete from 'app/components/autoComplete';
 
 const items = [
diff --git a/tests/js/spec/components/avatar.spec.jsx b/tests/js/spec/components/avatar.spec.jsx
index 524b5ebac2..97dcdd8b14 100644
--- a/tests/js/spec/components/avatar.spec.jsx
+++ b/tests/js/spec/components/avatar.spec.jsx
@@ -1,5 +1,5 @@
 import React from 'react';
-import {mount} from 'enzyme';
+import {mount} from 'sentry-test/enzyme';
 import Avatar from 'app/components/avatar';
 
 jest.mock('app/stores/configStore', () => {
diff --git a/tests/js/spec/components/avatar/actorAvatar.spec.jsx b/tests/js/spec/components/avatar/actorAvatar.spec.jsx
index ffabe8d297..fac82436e4 100644
--- a/tests/js/spec/components/avatar/actorAvatar.spec.jsx
+++ b/tests/js/spec/components/avatar/actorAvatar.spec.jsx
@@ -1,5 +1,5 @@
 import React from 'react';
-import {shallow, mount} from 'enzyme';
+import {shallow, mount} from 'sentry-test/enzyme';
 import ActorAvatar from 'app/components/avatar/actorAvatar';
 import MemberListStore from 'app/stores/memberListStore';
 import TeamStore from 'app/stores/teamStore';
diff --git a/tests/js/spec/components/avatar/avatarList.spec.jsx b/tests/js/spec/components/avatar/avatarList.spec.jsx
index 02dcfedde2..5bd14282a8 100644
--- a/tests/js/spec/components/avatar/avatarList.spec.jsx
+++ b/tests/js/spec/components/avatar/avatarList.spec.jsx
@@ -1,5 +1,5 @@
 import React from 'react';
-import {mount} from 'enzyme';
+import {mount} from 'sentry-test/enzyme';
 
 import AvatarList from 'app/components/avatar/avatarList';
 
diff --git a/tests/js/spec/components/avatarCropper.spec.jsx b/tests/js/spec/components/avatarCropper.spec.jsx
index 90327f7815..14aefbd126 100644
--- a/tests/js/spec/components/avatarCropper.spec.jsx
+++ b/tests/js/spec/components/avatarCropper.spec.jsx
@@ -1,5 +1,5 @@
 import React from 'react';
-import {shallow} from 'enzyme';
+import {shallow} from 'sentry-test/enzyme';
 import AvatarCropper from 'app/components/avatarCropper';
 
 describe('AvatarCropper', function() {
diff --git a/tests/js/spec/components/button.spec.jsx b/tests/js/spec/components/button.spec.jsx
index c7c634b8e4..e2bc20f0af 100644
--- a/tests/js/spec/components/button.spec.jsx
+++ b/tests/js/spec/components/button.spec.jsx
@@ -1,5 +1,5 @@
 import React from 'react';
-import {mount, shallow} from 'enzyme';
+import {mountWithTheme, shallow} from 'sentry-test/enzyme';
 import Button from 'app/components/button';
 
 describe('Button', function() {
@@ -40,7 +40,7 @@ describe('Button', function() {
 
   it('calls `onClick` callback', function() {
     const spy = jest.fn();
-    const component = mount(<Button onClick={spy} />, routerContext);
+    const component = mountWithTheme(<Button onClick={spy} />, routerContext);
     component.simulate('click');
 
     expect(spy).toHaveBeenCalled();
@@ -48,7 +48,7 @@ describe('Button', function() {
 
   it('does not call `onClick` on disabled buttons', function() {
     const spy = jest.fn();
-    const component = mount(<Button onClick={spy} disabled />, routerContext);
+    const component = mountWithTheme(<Button onClick={spy} disabled />, routerContext);
     component.simulate('click');
 
     expect(spy).not.toHaveBeenCalled();
diff --git a/tests/js/spec/components/charts/chartZoom.spec.jsx b/tests/js/spec/components/charts/chartZoom.spec.jsx
index 80456f4ad8..60a8d03dac 100644
--- a/tests/js/spec/components/charts/chartZoom.spec.jsx
+++ b/tests/js/spec/components/charts/chartZoom.spec.jsx
@@ -1,6 +1,6 @@
 import React from 'react';
 
-import {mount} from 'enzyme';
+import {mount} from 'sentry-test/enzyme';
 import ChartZoom from 'app/components/charts/chartZoom';
 import ConfigStore from 'app/stores/configStore';
 
diff --git a/tests/js/spec/components/charts/percentageTableChart.spec.jsx b/tests/js/spec/components/charts/percentageTableChart.spec.jsx
index ec78174eb4..3eba21325b 100644
--- a/tests/js/spec/components/charts/percentageTableChart.spec.jsx
+++ b/tests/js/spec/components/charts/percentageTableChart.spec.jsx
@@ -1,5 +1,5 @@
 import React from 'react';
-import {mount} from 'enzyme';
+import {mount} from 'sentry-test/enzyme';
 import PercentageTableChart from 'app/components/charts/percentageTableChart';
 
 describe('PercentageTableChart', function() {
diff --git a/tests/js/spec/components/charts/releaseSeries.spec.jsx b/tests/js/spec/components/charts/releaseSeries.spec.jsx
index b5c26a16cd..ca4178078f 100644
--- a/tests/js/spec/components/charts/releaseSeries.spec.jsx
+++ b/tests/js/spec/components/charts/releaseSeries.spec.jsx
@@ -1,7 +1,7 @@
 import React from 'react';
-import {mount} from 'enzyme';
+import {mount} from 'sentry-test/enzyme';
 
-import {initializeOrg} from 'app-test/helpers/initializeOrg';
+import {initializeOrg} from 'sentry-test/initializeOrg';
 import ReleaseSeries from 'app/components/charts/releaseSeries';
 
 describe('ReleaseSeries', function() {
diff --git a/tests/js/spec/components/charts/tableChart/index.spec.jsx b/tests/js/spec/components/charts/tableChart/index.spec.jsx
index 8e2e068d56..18dcd89f69 100644
--- a/tests/js/spec/components/charts/tableChart/index.spec.jsx
+++ b/tests/js/spec/components/charts/tableChart/index.spec.jsx
@@ -1,5 +1,5 @@
 import React from 'react';
-import {mount} from 'enzyme';
+import {mount} from 'sentry-test/enzyme';
 
 import TableChart from 'app/components/charts/tableChart';
 
diff --git a/tests/js/spec/components/checkbox.spec.jsx b/tests/js/spec/components/checkbox.spec.jsx
index 65d00c756b..9d1149469b 100644
--- a/tests/js/spec/components/checkbox.spec.jsx
+++ b/tests/js/spec/components/checkbox.spec.jsx
@@ -1,5 +1,5 @@
 import React from 'react';
-import {shallow} from 'enzyme';
+import {shallow} from 'sentry-test/enzyme';
 import toJson from 'enzyme-to-json';
 import Checkbox from 'app/components/checkbox';
 
diff --git a/tests/js/spec/components/circleIndicator.spec.jsx b/tests/js/spec/components/circleIndicator.spec.jsx
index 4774b8d6dd..cbf37b5540 100644
--- a/tests/js/spec/components/circleIndicator.spec.jsx
+++ b/tests/js/spec/components/circleIndicator.spec.jsx
@@ -1,5 +1,5 @@
 import React from 'react';
-import {shallow} from 'enzyme';
+import {shallow} from 'sentry-test/enzyme';
 import CircleIndicator from 'app/components/circleIndicator';
 
 describe('CircleIndicator', function() {
diff --git a/tests/js/spec/components/confirm.spec.jsx b/tests/js/spec/components/confirm.spec.jsx
index c5d3c88fdd..b681a63d8d 100644
--- a/tests/js/spec/components/confirm.spec.jsx
+++ b/tests/js/spec/components/confirm.spec.jsx
@@ -1,5 +1,5 @@
 import React from 'react';
-import {shallow, mount} from 'enzyme';
+import {shallow, mountWithTheme} from 'sentry-test/enzyme';
 import Confirm from 'app/components/confirm';
 
 describe('Confirm', function() {
@@ -46,7 +46,7 @@ describe('Confirm', function() {
 
   it('clicks Confirm in modal and calls `onConfirm` callback', function() {
     const mock = jest.fn();
-    const wrapper = mount(
+    const wrapper = mountWithTheme(
       <Confirm message="Are you sure?" onConfirm={mock}>
         <button>Confirm?</button>
       </Confirm>,
@@ -76,7 +76,7 @@ describe('Confirm', function() {
 
   it('can stop propagation on the event', function() {
     const mock = jest.fn();
-    const wrapper = mount(
+    const wrapper = mountWithTheme(
       <Confirm message="Are you sure?" onConfirm={mock} stopPropagation>
         <button>Confirm?</button>
       </Confirm>,
diff --git a/tests/js/spec/components/confirmDelete.spec.jsx b/tests/js/spec/components/confirmDelete.spec.jsx
index 59188aec76..8712e4ac47 100644
--- a/tests/js/spec/components/confirmDelete.spec.jsx
+++ b/tests/js/spec/components/confirmDelete.spec.jsx
@@ -1,11 +1,11 @@
 import React from 'react';
-import {mount} from 'enzyme';
+import {mountWithTheme} from 'sentry-test/enzyme';
 import ConfirmDelete from 'app/components/confirmDelete';
 
 describe('ConfirmDelete', function() {
   it('renders', function() {
     const mock = jest.fn();
-    const wrapper = mount(
+    const wrapper = mountWithTheme(
       <ConfirmDelete message="Are you sure?" onConfirm={mock} confirmInput="CoolOrg">
         <button>Confirm?</button>
       </ConfirmDelete>,
@@ -18,7 +18,7 @@ describe('ConfirmDelete', function() {
 
   it('confirm button is disabled and bypass prop is false when modal opens', function() {
     const mock = jest.fn();
-    const wrapper = mount(
+    const wrapper = mountWithTheme(
       <ConfirmDelete message="Are you sure?" onConfirm={mock} confirmInput="CoolOrg">
         <button>Confirm?</button>
       </ConfirmDelete>,
@@ -33,7 +33,7 @@ describe('ConfirmDelete', function() {
 
   it('confirm button stays disabled with non-matching input', function() {
     const mock = jest.fn();
-    const wrapper = mount(
+    const wrapper = mountWithTheme(
       <ConfirmDelete message="Are you sure?" onConfirm={mock} confirmInput="CoolOrg">
         <button>Confirm?</button>
       </ConfirmDelete>,
@@ -46,7 +46,7 @@ describe('ConfirmDelete', function() {
 
   it('confirm button is enabled when confirm input matches', function() {
     const mock = jest.fn();
-    const wrapper = mount(
+    const wrapper = mountWithTheme(
       <ConfirmDelete message="Are you sure?" onConfirm={mock} confirmInput="CoolOrg">
         <button>Confirm?</button>
       </ConfirmDelete>,
diff --git a/tests/js/spec/components/contextData.spec.jsx b/tests/js/spec/components/contextData.spec.jsx
index 31347243b7..e3594c4b58 100644
--- a/tests/js/spec/components/contextData.spec.jsx
+++ b/tests/js/spec/components/contextData.spec.jsx
@@ -1,5 +1,5 @@
 import React from 'react';
-import {shallow} from 'enzyme';
+import {shallow} from 'sentry-test/enzyme';
 
 import ContextData from 'app/components/contextData';
 
diff --git a/tests/js/spec/components/contextPickerModal.spec.jsx b/tests/js/spec/components/contextPickerModal.spec.jsx
index 806f12acca..97b929e87a 100644
--- a/tests/js/spec/components/contextPickerModal.spec.jsx
+++ b/tests/js/spec/components/contextPickerModal.spec.jsx
@@ -1,7 +1,7 @@
 import React from 'react';
 
 import * as OrgActions from 'app/actionCreators/organizations';
-import {mount, shallow} from 'enzyme';
+import {mountWithTheme} from 'sentry-test/enzyme';
 import {ContextPickerModal} from 'app/components/contextPickerModal';
 
 jest.mock('jquery');
@@ -37,7 +37,7 @@ describe('ContextPickerModal', function() {
   );
 
   it('renders with only org selector when no org in latest context', function() {
-    const wrapper = shallow(getComponent());
+    const wrapper = mountWithTheme(getComponent());
 
     expect(wrapper.find('StyledSelectControl[name="organization"]').exists()).toBe(true);
     expect(wrapper.find('StyledSelectControl[name="project"]').exists()).toBe(false);
@@ -48,7 +48,7 @@ describe('ContextPickerModal', function() {
     const api = MockApiClient.addMockResponse({
       url: `/organizations/${org2.slug}/`,
     });
-    const wrapper = mount(
+    const wrapper = mountWithTheme(
       getComponent({organizations: [org2]}),
       TestStubs.routerContext()
     );
@@ -66,7 +66,7 @@ describe('ContextPickerModal', function() {
     const api = MockApiClient.addMockResponse({
       url: `/organizations/${org2.slug}/`,
     });
-    const wrapper = mount(
+    const wrapper = mountWithTheme(
       getComponent({organizations: [org2]}),
       TestStubs.routerContext()
     );
@@ -87,7 +87,7 @@ describe('ContextPickerModal', function() {
     const api = MockApiClient.addMockResponse({
       url: `/organizations/${org2.slug}/`,
     });
-    const wrapper = mount(
+    const wrapper = mountWithTheme(
       getComponent({
         needOrg: true,
         needProject: true,
@@ -109,7 +109,7 @@ describe('ContextPickerModal', function() {
   });
 
   it('selects an org and calls `onFinish` with URL with organization slug', function() {
-    const wrapper = mount(getComponent({}), TestStubs.routerContext());
+    const wrapper = mountWithTheme(getComponent({}), TestStubs.routerContext());
     const mock = MockApiClient.addMockResponse({
       url: `/organizations/${org.slug}/`,
     });
@@ -128,7 +128,7 @@ describe('ContextPickerModal', function() {
   });
 
   it('renders with project selector and org selector selected when org is in latest context', function() {
-    const wrapper = shallow(
+    const wrapper = mountWithTheme(
       getComponent({
         needOrg: true,
         needProject: true,
@@ -156,7 +156,7 @@ describe('ContextPickerModal', function() {
     const api = MockApiClient.addMockResponse({
       url: `/organizations/${org2.slug}/`,
     });
-    const wrapper = mount(
+    const wrapper = mountWithTheme(
       getComponent({
         needOrg: true,
         needProject: true,
diff --git a/tests/js/spec/components/createProject.spec.jsx b/tests/js/spec/components/createProject.spec.jsx
index ffc5cee5ec..3b59c2c526 100644
--- a/tests/js/spec/components/createProject.spec.jsx
+++ b/tests/js/spec/components/createProject.spec.jsx
@@ -1,5 +1,5 @@
 import React from 'react';
-import {shallow, mount} from 'enzyme';
+import {shallow, mountWithTheme} from 'sentry-test/enzyme';
 
 import {CreateProject} from 'app/components/createProject';
 import {openCreateTeamModal} from 'app/actionCreators/modal';
@@ -45,7 +45,7 @@ describe('CreateProject', function() {
       ...baseProps,
     };
 
-    const wrapper = mount(
+    const wrapper = mountWithTheme(
       <CreateProject {...props} />,
       TestStubs.routerContext([
         {
@@ -67,7 +67,7 @@ describe('CreateProject', function() {
       ...baseProps,
     };
 
-    const wrapper = mount(
+    const wrapper = mountWithTheme(
       <CreateProject {...props} />,
       TestStubs.routerContext([
         {
@@ -104,7 +104,7 @@ describe('CreateProject', function() {
       ...baseProps,
     };
 
-    const wrapper = mount(
+    const wrapper = mountWithTheme(
       <CreateProject {...props} />,
       TestStubs.routerContext([
         {
@@ -128,7 +128,7 @@ describe('CreateProject', function() {
       ...baseProps,
     };
 
-    const wrapper = mount(
+    const wrapper = mountWithTheme(
       <CreateProject {...props} />,
       TestStubs.routerContext([
         {
diff --git a/tests/js/spec/components/createSampleEventButton.spec.jsx b/tests/js/spec/components/createSampleEventButton.spec.jsx
index 3f5eff27a6..08d5d9fe26 100644
--- a/tests/js/spec/components/createSampleEventButton.spec.jsx
+++ b/tests/js/spec/components/createSampleEventButton.spec.jsx
@@ -1,8 +1,8 @@
 import {browserHistory} from 'react-router';
-import {mount} from 'enzyme';
+import {mountWithTheme} from 'sentry-test/enzyme';
 import React from 'react';
 
-import {initializeOrg} from 'app-test/helpers/initializeOrg';
+import {initializeOrg} from 'sentry-test/initializeOrg';
 import CreateSampleEventButton from 'app/views/onboarding/createSampleEventButton';
 
 jest.useFakeTimers();
@@ -11,7 +11,7 @@ describe('CreateSampleEventButton', function() {
   const {org, project, routerContext} = initializeOrg();
   const groupID = '123';
 
-  const wrapper = mount(
+  const wrapper = mountWithTheme(
     <CreateSampleEventButton source="test" project={project} />,
     routerContext
   );
diff --git a/tests/js/spec/components/customResolutionModal.spec.jsx b/tests/js/spec/components/customResolutionModal.spec.jsx
index 30872a5ba0..7013911236 100644
--- a/tests/js/spec/components/customResolutionModal.spec.jsx
+++ b/tests/js/spec/components/customResolutionModal.spec.jsx
@@ -1,5 +1,5 @@
 import React from 'react';
-import {mount} from 'enzyme';
+import {mountWithTheme} from 'sentry-test/enzyme';
 
 import CustomResolutionModal from 'app/components/customResolutionModal';
 
@@ -14,7 +14,7 @@ describe('CustomResolutionModal', function() {
 
   it('can select a version', async function() {
     const onSelected = jest.fn();
-    const wrapper = mount(
+    const wrapper = mountWithTheme(
       <CustomResolutionModal
         orgId="org-slug"
         projectId="project-slug"
diff --git a/tests/js/spec/components/detailedError.spec.jsx b/tests/js/spec/components/detailedError.spec.jsx
index 2cf7a73fbf..ea16e3f63a 100644
--- a/tests/js/spec/components/detailedError.spec.jsx
+++ b/tests/js/spec/components/detailedError.spec.jsx
@@ -1,5 +1,5 @@
 import React from 'react';
-import {shallow} from 'enzyme';
+import {shallow} from 'sentry-test/enzyme';
 
 import DetailedError from 'app/components/errors/detailedError';
 
diff --git a/tests/js/spec/components/dropdownAutoComplete.spec.jsx b/tests/js/spec/components/dropdownAutoComplete.spec.jsx
index bb9e2c919c..a9e4095f68 100644
--- a/tests/js/spec/components/dropdownAutoComplete.spec.jsx
+++ b/tests/js/spec/components/dropdownAutoComplete.spec.jsx
@@ -1,5 +1,5 @@
 import React from 'react';
-import {mount} from 'enzyme';
+import {mountWithTheme} from 'sentry-test/enzyme';
 
 import DropdownAutoComplete from 'app/components/dropdownAutoComplete';
 
@@ -21,7 +21,7 @@ describe('DropdownAutoComplete', function() {
   ];
 
   it('has actor wrapper', function() {
-    const wrapper = mount(
+    const wrapper = mountWithTheme(
       <DropdownAutoComplete items={items}>{() => 'Click Me!'}</DropdownAutoComplete>,
       routerContext
     );
@@ -30,7 +30,7 @@ describe('DropdownAutoComplete', function() {
   });
 
   it('opens dropdown menu when actor is clicked', function() {
-    const wrapper = mount(
+    const wrapper = mountWithTheme(
       <DropdownAutoComplete items={items}>{() => 'Click Me!'}</DropdownAutoComplete>,
       routerContext
     );
@@ -42,7 +42,7 @@ describe('DropdownAutoComplete', function() {
   });
 
   it('toggles dropdown menu when actor is clicked', function() {
-    const wrapper = mount(
+    const wrapper = mountWithTheme(
       <DropdownAutoComplete allowActorToggle items={items}>
         {() => 'Click Me!'}
       </DropdownAutoComplete>,
diff --git a/tests/js/spec/components/dropdownAutoCompleteMenu.spec.jsx b/tests/js/spec/components/dropdownAutoCompleteMenu.spec.jsx
index c6c1e3760b..2831017bc0 100644
--- a/tests/js/spec/components/dropdownAutoCompleteMenu.spec.jsx
+++ b/tests/js/spec/components/dropdownAutoCompleteMenu.spec.jsx
@@ -1,5 +1,5 @@
 import React from 'react';
-import {mount} from 'enzyme';
+import {mountWithTheme} from 'sentry-test/enzyme';
 
 import DropdownAutoCompleteMenu from 'app/components/dropdownAutoCompleteMenu';
 
@@ -20,7 +20,7 @@ describe('DropdownAutoCompleteMenu', function() {
     },
   ];
   it('renders without a group', function() {
-    const wrapper = mount(
+    const wrapper = mountWithTheme(
       <DropdownAutoCompleteMenu isOpen items={items}>
         {() => 'Click Me!'}
       </DropdownAutoCompleteMenu>,
@@ -30,7 +30,7 @@ describe('DropdownAutoCompleteMenu', function() {
   });
 
   it('renders with a group', function() {
-    const wrapper = mount(
+    const wrapper = mountWithTheme(
       <DropdownAutoCompleteMenu
         isOpen
         items={[
@@ -61,7 +61,7 @@ describe('DropdownAutoCompleteMenu', function() {
   it('selects', function() {
     const mock = jest.fn();
 
-    const wrapper = mount(
+    const wrapper = mountWithTheme(
       <DropdownAutoCompleteMenu
         isOpen
         items={[
@@ -95,7 +95,7 @@ describe('DropdownAutoCompleteMenu', function() {
   });
 
   it('shows empty message when there are no items', function() {
-    const wrapper = mount(
+    const wrapper = mountWithTheme(
       <DropdownAutoCompleteMenu
         emptyHidesInput
         isOpen
@@ -115,7 +115,7 @@ describe('DropdownAutoCompleteMenu', function() {
   });
 
   it('shows default empty results message when there are no items found in search', function() {
-    const wrapper = mount(
+    const wrapper = mountWithTheme(
       <DropdownAutoCompleteMenu isOpen items={items} emptyMessage="No items!">
         {({selectedItem}) => (selectedItem ? selectedItem.label : 'Click me!')}
       </DropdownAutoCompleteMenu>,
@@ -128,7 +128,7 @@ describe('DropdownAutoCompleteMenu', function() {
   });
 
   it('overrides default empty results message', function() {
-    const wrapper = mount(
+    const wrapper = mountWithTheme(
       <DropdownAutoCompleteMenu
         isOpen
         items={items}
@@ -145,7 +145,7 @@ describe('DropdownAutoCompleteMenu', function() {
   });
 
   it('hides filter with `hideInput` prop', function() {
-    const wrapper = mount(
+    const wrapper = mountWithTheme(
       <DropdownAutoCompleteMenu isOpen items={items} hideInput>
         {() => 'Click Me!'}
       </DropdownAutoCompleteMenu>,
@@ -156,7 +156,7 @@ describe('DropdownAutoCompleteMenu', function() {
   });
 
   it('filters using a value from prop instead of input', function() {
-    const wrapper = mount(
+    const wrapper = mountWithTheme(
       <DropdownAutoCompleteMenu isOpen items={items} filterValue="Apple">
         {() => 'Click Me!'}
       </DropdownAutoCompleteMenu>,
diff --git a/tests/js/spec/components/dropdownLink.spec.jsx b/tests/js/spec/components/dropdownLink.spec.jsx
index e6d8438040..67e1189b87 100644
--- a/tests/js/spec/components/dropdownLink.spec.jsx
+++ b/tests/js/spec/components/dropdownLink.spec.jsx
@@ -1,7 +1,7 @@
 import $ from 'jquery';
 import React from 'react';
 
-import {mount} from 'enzyme';
+import {mount} from 'sentry-test/enzyme';
 import DropdownLink from 'app/components/dropdownLink';
 
 import {MENU_CLOSE_DELAY} from 'app/constants';
diff --git a/tests/js/spec/components/dropdownMenu.spec.jsx b/tests/js/spec/components/dropdownMenu.spec.jsx
index 66ae111681..77f712112e 100644
--- a/tests/js/spec/components/dropdownMenu.spec.jsx
+++ b/tests/js/spec/components/dropdownMenu.spec.jsx
@@ -1,5 +1,5 @@
 import React from 'react';
-import {mount} from 'enzyme';
+import {mount} from 'sentry-test/enzyme';
 import DropdownMenu from 'app/components/dropdownMenu';
 
 jest.useFakeTimers();
diff --git a/tests/js/spec/components/errorRobot.spec.jsx b/tests/js/spec/components/errorRobot.spec.jsx
index 60825b8fd6..1683bbbe10 100644
--- a/tests/js/spec/components/errorRobot.spec.jsx
+++ b/tests/js/spec/components/errorRobot.spec.jsx
@@ -1,5 +1,5 @@
 import React from 'react';
-import {mount} from 'enzyme';
+import {mountWithTheme} from 'sentry-test/enzyme';
 import {Client} from 'app/api';
 import {ErrorRobot} from 'app/components/errorRobot';
 
@@ -18,7 +18,7 @@ describe('ErrorRobot', function() {
   describe('with a project', function() {
     let wrapper;
     beforeEach(function() {
-      wrapper = mount(
+      wrapper = mountWithTheme(
         <ErrorRobot
           api={new MockApiClient()}
           org={TestStubs.Organization()}
@@ -46,7 +46,7 @@ describe('ErrorRobot', function() {
     let wrapper;
 
     beforeEach(function() {
-      wrapper = mount(
+      wrapper = mountWithTheme(
         <ErrorRobot api={new MockApiClient()} org={TestStubs.Organization()} />,
         TestStubs.routerContext()
       );
diff --git a/tests/js/spec/components/eventOrGroupExtraDetails.spec.jsx b/tests/js/spec/components/eventOrGroupExtraDetails.spec.jsx
index 6986148922..ceaf1c8501 100644
--- a/tests/js/spec/components/eventOrGroupExtraDetails.spec.jsx
+++ b/tests/js/spec/components/eventOrGroupExtraDetails.spec.jsx
@@ -1,5 +1,5 @@
 import React from 'react';
-import {shallow} from 'enzyme';
+import {shallow} from 'sentry-test/enzyme';
 import toJson from 'enzyme-to-json';
 import EventOrGroupExtraDetails from 'app/components/eventOrGroupExtraDetails';
 
diff --git a/tests/js/spec/components/eventOrGroupHeader.spec.jsx b/tests/js/spec/components/eventOrGroupHeader.spec.jsx
index 239d471c54..bfb0478b72 100644
--- a/tests/js/spec/components/eventOrGroupHeader.spec.jsx
+++ b/tests/js/spec/components/eventOrGroupHeader.spec.jsx
@@ -1,5 +1,5 @@
 import React from 'react';
-import {shallow} from 'enzyme';
+import {shallow} from 'sentry-test/enzyme';
 import toJson from 'enzyme-to-json';
 import EventOrGroupHeader from 'app/components/eventOrGroupHeader';
 
diff --git a/tests/js/spec/components/eventOrGroupTitle.spec.jsx b/tests/js/spec/components/eventOrGroupTitle.spec.jsx
index 5befeba991..03bf74e54d 100644
--- a/tests/js/spec/components/eventOrGroupTitle.spec.jsx
+++ b/tests/js/spec/components/eventOrGroupTitle.spec.jsx
@@ -1,5 +1,5 @@
 import React from 'react';
-import {shallow} from 'enzyme';
+import {shallow} from 'sentry-test/enzyme';
 import toJson from 'enzyme-to-json';
 import EventOrGroupTitle from 'app/components/eventOrGroupTitle';
 
diff --git a/tests/js/spec/components/events/contextSummary.spec.jsx b/tests/js/spec/components/events/contextSummary.spec.jsx
index d55dc7d33d..2c95215d1b 100644
--- a/tests/js/spec/components/events/contextSummary.spec.jsx
+++ b/tests/js/spec/components/events/contextSummary.spec.jsx
@@ -1,5 +1,5 @@
 import React from 'react';
-import {shallow, mount} from 'enzyme';
+import {shallow, mount} from 'sentry-test/enzyme';
 
 import ContextSummary, {
   OsSummary,
diff --git a/tests/js/spec/components/events/crashContent.spec.jsx b/tests/js/spec/components/events/crashContent.spec.jsx
index cc5ab1da16..88eee98c76 100644
--- a/tests/js/spec/components/events/crashContent.spec.jsx
+++ b/tests/js/spec/components/events/crashContent.spec.jsx
@@ -1,4 +1,4 @@
-import {mount} from 'enzyme';
+import {mount} from 'sentry-test/enzyme';
 import React from 'react';
 
 import CrashContent from 'app/components/events/interfaces/crashContent';
diff --git a/tests/js/spec/components/events/eventCause.spec.jsx b/tests/js/spec/components/events/eventCause.spec.jsx
index 68e31ad921..55bfe8040f 100644
--- a/tests/js/spec/components/events/eventCause.spec.jsx
+++ b/tests/js/spec/components/events/eventCause.spec.jsx
@@ -1,5 +1,5 @@
 import React from 'react';
-import {mount} from 'enzyme';
+import {mount} from 'sentry-test/enzyme';
 
 import {Client} from 'app/api';
 import EventCause from 'app/components/events/eventCause';
diff --git a/tests/js/spec/components/events/eventCauseEmpty.spec.jsx b/tests/js/spec/components/events/eventCauseEmpty.spec.jsx
index eab65f1123..b587f8ba26 100644
--- a/tests/js/spec/components/events/eventCauseEmpty.spec.jsx
+++ b/tests/js/spec/components/events/eventCauseEmpty.spec.jsx
@@ -1,6 +1,6 @@
 import React from 'react';
 import moment from 'moment';
-import {mount} from 'enzyme';
+import {mountWithTheme} from 'sentry-test/enzyme';
 
 import EventCauseEmpty from 'app/components/events/eventCauseEmpty';
 import {trackAdhocEvent, trackAnalyticsEvent} from 'app/utils/analytics';
@@ -32,7 +32,7 @@ describe('EventCauseEmpty', function() {
   });
 
   it('renders', async function() {
-    const wrapper = mount(
+    const wrapper = mountWithTheme(
       <EventCauseEmpty organization={organization} project={project} />,
       routerContext
     );
@@ -51,7 +51,7 @@ describe('EventCauseEmpty', function() {
   });
 
   it('can be snoozed', async function() {
-    const wrapper = mount(
+    const wrapper = mountWithTheme(
       <EventCauseEmpty organization={organization} project={project} />,
       routerContext
     );
@@ -99,7 +99,7 @@ describe('EventCauseEmpty', function() {
       body: {data: {snoozed_ts}},
     });
 
-    const wrapper = mount(
+    const wrapper = mountWithTheme(
       <EventCauseEmpty organization={organization} project={project} />,
       routerContext
     );
@@ -121,7 +121,7 @@ describe('EventCauseEmpty', function() {
       body: {data: {snoozed_ts}},
     });
 
-    const wrapper = mount(
+    const wrapper = mountWithTheme(
       <EventCauseEmpty organization={organization} project={project} />,
       routerContext
     );
@@ -133,7 +133,7 @@ describe('EventCauseEmpty', function() {
   });
 
   it('can be dismissed', async function() {
-    const wrapper = mount(
+    const wrapper = mountWithTheme(
       <EventCauseEmpty organization={organization} project={project} />,
       routerContext
     );
@@ -177,7 +177,7 @@ describe('EventCauseEmpty', function() {
       body: {data: {dismissed_ts: moment().unix()}},
     });
 
-    const wrapper = mount(
+    const wrapper = mountWithTheme(
       <EventCauseEmpty organization={organization} project={project} />,
       routerContext
     );
@@ -189,7 +189,7 @@ describe('EventCauseEmpty', function() {
   });
 
   it('can capture analytics on docs click', async function() {
-    const wrapper = mount(
+    const wrapper = mountWithTheme(
       <EventCauseEmpty organization={organization} project={project} />,
       routerContext
     );
diff --git a/tests/js/spec/components/events/interfaces/breadcrumbComponents/breadcrumbs.spec.jsx b/tests/js/spec/components/events/interfaces/breadcrumbComponents/breadcrumbs.spec.jsx
index 90eca63a17..75a9b69961 100644
--- a/tests/js/spec/components/events/interfaces/breadcrumbComponents/breadcrumbs.spec.jsx
+++ b/tests/js/spec/components/events/interfaces/breadcrumbComponents/breadcrumbs.spec.jsx
@@ -1,5 +1,5 @@
 import React from 'react';
-import {shallow} from 'enzyme';
+import {shallow} from 'sentry-test/enzyme';
 import BreadcrumbsInterface from 'app/components/events/interfaces/breadcrumbs';
 import Breadcrumb from 'app/components/events/interfaces/breadcrumbs/breadcrumb';
 
diff --git a/tests/js/spec/components/events/interfaces/breadcrumbComponents/httpRenderer.spec.jsx b/tests/js/spec/components/events/interfaces/breadcrumbComponents/httpRenderer.spec.jsx
index ef7fe15627..cfcc617e74 100644
--- a/tests/js/spec/components/events/interfaces/breadcrumbComponents/httpRenderer.spec.jsx
+++ b/tests/js/spec/components/events/interfaces/breadcrumbComponents/httpRenderer.spec.jsx
@@ -1,5 +1,5 @@
 import React from 'react';
-import {shallow, mount} from 'enzyme';
+import {shallow, mount} from 'sentry-test/enzyme';
 import HttpRenderer from 'app/components/events/interfaces/breadcrumbs/httpRenderer';
 
 describe('HttpRenderer', function() {
diff --git a/tests/js/spec/components/events/interfaces/contexts.spec.jsx b/tests/js/spec/components/events/interfaces/contexts.spec.jsx
index 9697b8e683..67a6bd579e 100644
--- a/tests/js/spec/components/events/interfaces/contexts.spec.jsx
+++ b/tests/js/spec/components/events/interfaces/contexts.spec.jsx
@@ -1,5 +1,5 @@
 import React from 'react';
-import {mount} from 'enzyme';
+import {mount} from 'sentry-test/enzyme';
 
 import UserContextType from 'app/components/events/contexts/user';
 import {FILTER_MASK} from 'app/constants';
diff --git a/tests/js/spec/components/events/interfaces/exceptionMechanism.spec.jsx b/tests/js/spec/components/events/interfaces/exceptionMechanism.spec.jsx
index e9a0160a46..b4996b7b63 100644
--- a/tests/js/spec/components/events/interfaces/exceptionMechanism.spec.jsx
+++ b/tests/js/spec/components/events/interfaces/exceptionMechanism.spec.jsx
@@ -1,5 +1,5 @@
 import React from 'react';
-import {shallow} from 'enzyme';
+import {shallow} from 'sentry-test/enzyme';
 
 import ExceptionMechanism from 'app/components/events/interfaces/exceptionMechanism';
 
diff --git a/tests/js/spec/components/events/interfaces/frame.spec.jsx b/tests/js/spec/components/events/interfaces/frame.spec.jsx
index 944fdd39d3..a776513b1a 100644
--- a/tests/js/spec/components/events/interfaces/frame.spec.jsx
+++ b/tests/js/spec/components/events/interfaces/frame.spec.jsx
@@ -1,5 +1,5 @@
 import React from 'react';
-import {shallow} from 'enzyme';
+import {shallow} from 'sentry-test/enzyme';
 
 import {Frame} from 'app/components/events/interfaces/frame';
 
diff --git a/tests/js/spec/components/events/interfaces/frameRegisters.spec.jsx b/tests/js/spec/components/events/interfaces/frameRegisters.spec.jsx
index ffeacb6920..41090fa3da 100644
--- a/tests/js/spec/components/events/interfaces/frameRegisters.spec.jsx
+++ b/tests/js/spec/components/events/interfaces/frameRegisters.spec.jsx
@@ -1,5 +1,5 @@
 import React from 'react';
-import {shallow, mount} from 'enzyme';
+import {shallow, mount} from 'sentry-test/enzyme';
 
 import FrameRegisters, {
   RegisterValue,
diff --git a/tests/js/spec/components/events/interfaces/keyValueList.spec.jsx b/tests/js/spec/components/events/interfaces/keyValueList.spec.jsx
index e447ff84af..fc1addef2c 100644
--- a/tests/js/spec/components/events/interfaces/keyValueList.spec.jsx
+++ b/tests/js/spec/components/events/interfaces/keyValueList.spec.jsx
@@ -1,5 +1,5 @@
 import React from 'react';
-import {mount} from 'enzyme';
+import {mount} from 'sentry-test/enzyme';
 
 import KeyValueList from 'app/components/events/interfaces/keyValueList';
 
diff --git a/tests/js/spec/components/events/interfaces/openInContextLine.spec.jsx b/tests/js/spec/components/events/interfaces/openInContextLine.spec.jsx
index c9ad7c2704..d3c9a28583 100644
--- a/tests/js/spec/components/events/interfaces/openInContextLine.spec.jsx
+++ b/tests/js/spec/components/events/interfaces/openInContextLine.spec.jsx
@@ -1,5 +1,5 @@
 import React from 'react';
-import {mount} from 'enzyme';
+import {mountWithTheme} from 'sentry-test/enzyme';
 import {addQueryParamsToExistingUrl} from 'app/utils/queryString';
 
 import OpenInContextLine from 'app/components/events/interfaces/openInContextLine';
@@ -46,7 +46,7 @@ describe('OpenInContextLine', function() {
 
   describe('with stacktrace-link component', function() {
     it('renders multiple buttons', function() {
-      const wrapper = mount(
+      const wrapper = mountWithTheme(
         <OpenInContextLine filename={filename} lineNo={lineNo} components={components} />,
         TestStubs.routerContext()
       );
diff --git a/tests/js/spec/components/events/interfaces/richHttpContent.spec.jsx b/tests/js/spec/components/events/interfaces/richHttpContent.spec.jsx
index 0e92728c6c..55f1cf9d93 100644
--- a/tests/js/spec/components/events/interfaces/richHttpContent.spec.jsx
+++ b/tests/js/spec/components/events/interfaces/richHttpContent.spec.jsx
@@ -1,5 +1,5 @@
 import React from 'react';
-import {mount, shallow} from 'enzyme';
+import {mount, shallow} from 'sentry-test/enzyme';
 
 import RichHttpContent from 'app/components/events/interfaces/richHttpContent';
 
diff --git a/tests/js/spec/components/events/meta/annotated.spec.jsx b/tests/js/spec/components/events/meta/annotated.spec.jsx
index ef0c57db3d..bbfcbef179 100644
--- a/tests/js/spec/components/events/meta/annotated.spec.jsx
+++ b/tests/js/spec/components/events/meta/annotated.spec.jsx
@@ -1,5 +1,5 @@
 import React from 'react';
-import {mount} from 'enzyme';
+import {mount} from 'sentry-test/enzyme';
 
 import Annotated from 'app/components/events/meta/annotated';
 import {withMeta} from 'app/components/events/meta/metaProxy';
diff --git a/tests/js/spec/components/events/meta/metaData.spec.jsx b/tests/js/spec/components/events/meta/metaData.spec.jsx
index 39876148f2..a8e18c18b3 100644
--- a/tests/js/spec/components/events/meta/metaData.spec.jsx
+++ b/tests/js/spec/components/events/meta/metaData.spec.jsx
@@ -1,4 +1,4 @@
-import {mount} from 'enzyme';
+import {mount} from 'sentry-test/enzyme';
 import React from 'react';
 
 import {withMeta} from 'app/components/events/meta/metaProxy';
diff --git a/tests/js/spec/components/events/sdkUpdates.spec.jsx b/tests/js/spec/components/events/sdkUpdates.spec.jsx
index 2e9be4622d..dcf2d9e7f6 100644
--- a/tests/js/spec/components/events/sdkUpdates.spec.jsx
+++ b/tests/js/spec/components/events/sdkUpdates.spec.jsx
@@ -1,6 +1,6 @@
 import React from 'react';
-import {mount} from 'enzyme';
-import {initializeOrg} from 'app-test/helpers/initializeOrg';
+import {mountWithTheme} from 'sentry-test/enzyme';
+import {initializeOrg} from 'sentry-test/initializeOrg';
 import EventSdkUpdates from 'app/components/events/sdkUpdates';
 
 describe('EventSdkUpdates', function() {
@@ -11,7 +11,7 @@ describe('EventSdkUpdates', function() {
       event: TestStubs.UpdateSdkAndEnableIntegrationSuggestion(),
     };
 
-    const wrapper = mount(<EventSdkUpdates {...props} />, routerContext);
+    const wrapper = mountWithTheme(<EventSdkUpdates {...props} />, routerContext);
     expect(wrapper).toMatchSnapshot();
   });
 });
diff --git a/tests/js/spec/components/eventsTable/eventsTable.spec.jsx b/tests/js/spec/components/eventsTable/eventsTable.spec.jsx
index c1496e5cea..6aa0283741 100644
--- a/tests/js/spec/components/eventsTable/eventsTable.spec.jsx
+++ b/tests/js/spec/components/eventsTable/eventsTable.spec.jsx
@@ -1,9 +1,7 @@
 import React from 'react';
-import {shallow} from 'enzyme';
+import {shallow} from 'sentry-test/enzyme';
 import EventsTable from 'app/components/eventsTable/eventsTable';
 
-import events from '../../../mocks/events';
-
 describe('EventsTable', function() {
   beforeEach(function() {});
 
@@ -16,7 +14,7 @@ describe('EventsTable', function() {
         orgId="orgId"
         projectId="projectId"
         groupId="groupId"
-        events={events}
+        events={TestStubs.DetailedEvents()}
       />
     );
     expect(wrapper).toMatchSnapshot();
diff --git a/tests/js/spec/components/eventsTable/eventsTableRow.spec.jsx b/tests/js/spec/components/eventsTable/eventsTableRow.spec.jsx
index a4ec0f3343..a1cf352d41 100644
--- a/tests/js/spec/components/eventsTable/eventsTableRow.spec.jsx
+++ b/tests/js/spec/components/eventsTable/eventsTableRow.spec.jsx
@@ -1,7 +1,6 @@
 import React from 'react';
-import {shallow} from 'enzyme';
+import {shallow} from 'sentry-test/enzyme';
 import {EventsTableRow} from 'app/components/eventsTable/eventsTableRow';
-import events from '../../../mocks/events';
 
 describe('EventsTableRow', function() {
   it('renders', function() {
@@ -10,7 +9,7 @@ describe('EventsTableRow', function() {
         organization={TestStubs.Organization()}
         tagList={[]}
         {...{orgId: 'orgId', projectId: 'projectId', groupId: 'groupId'}}
-        event={events[0]}
+        event={TestStubs.DetailedEvents()[0]}
       />
     );
     expect(wrapper).toMatchSnapshot();
diff --git a/tests/js/spec/components/externalLink.spec.jsx b/tests/js/spec/components/externalLink.spec.jsx
index c24e99f503..72bd1d2103 100644
--- a/tests/js/spec/components/externalLink.spec.jsx
+++ b/tests/js/spec/components/externalLink.spec.jsx
@@ -1,5 +1,5 @@
 import React from 'react';
-import {shallow} from 'enzyme';
+import {shallow} from 'sentry-test/enzyme';
 import ExternalLink from 'app/components/links/externalLink';
 
 describe('ExternalLink', function() {
diff --git a/tests/js/spec/components/forms/booleanField.spec.jsx b/tests/js/spec/components/forms/booleanField.spec.jsx
index 63a44e800e..81becc1460 100644
--- a/tests/js/spec/components/forms/booleanField.spec.jsx
+++ b/tests/js/spec/components/forms/booleanField.spec.jsx
@@ -1,5 +1,5 @@
 import React from 'react';
-import {shallow} from 'enzyme';
+import {shallow} from 'sentry-test/enzyme';
 
 import {BooleanField} from 'app/components/forms';
 
diff --git a/tests/js/spec/components/forms/emailField.spec.jsx b/tests/js/spec/components/forms/emailField.spec.jsx
index db81d0c4e1..8a653d8aa3 100644
--- a/tests/js/spec/components/forms/emailField.spec.jsx
+++ b/tests/js/spec/components/forms/emailField.spec.jsx
@@ -1,5 +1,5 @@
 import React from 'react';
-import {shallow} from 'enzyme';
+import {shallow} from 'sentry-test/enzyme';
 
 import {EmailField} from 'app/components/forms';
 
diff --git a/tests/js/spec/components/forms/form.spec.jsx b/tests/js/spec/components/forms/form.spec.jsx
index 0fd2b24c14..2d3c779397 100644
--- a/tests/js/spec/components/forms/form.spec.jsx
+++ b/tests/js/spec/components/forms/form.spec.jsx
@@ -1,5 +1,5 @@
 import React from 'react';
-import {shallow} from 'enzyme';
+import {shallow} from 'sentry-test/enzyme';
 
 import {Form} from 'app/components/forms';
 
diff --git a/tests/js/spec/components/forms/formField.spec.jsx b/tests/js/spec/components/forms/formField.spec.jsx
index 243081b159..f1246f1d9b 100644
--- a/tests/js/spec/components/forms/formField.spec.jsx
+++ b/tests/js/spec/components/forms/formField.spec.jsx
@@ -1,5 +1,5 @@
 import React from 'react';
-import {mount} from 'enzyme';
+import {mountWithTheme} from 'sentry-test/enzyme';
 
 import TextField from 'app/views/settings/components/forms/textField';
 import Form from 'app/views/settings/components/forms/form';
@@ -15,7 +15,7 @@ describe('FormField + model', function() {
   });
 
   it('renders with Form', function() {
-    wrapper = mount(
+    wrapper = mountWithTheme(
       <Form model={model}>
         <TextField name="fieldName" />
       </Form>,
@@ -25,7 +25,7 @@ describe('FormField + model', function() {
   });
 
   it('sets initial data in model', function() {
-    wrapper = mount(
+    wrapper = mountWithTheme(
       <Form model={model} initialData={{fieldName: 'test'}}>
         <TextField name="fieldName" />
       </Form>,
@@ -36,7 +36,7 @@ describe('FormField + model', function() {
   });
 
   it('has `defaultValue` from field', function() {
-    wrapper = mount(
+    wrapper = mountWithTheme(
       <Form model={model}>
         <TextField name="fieldName" defaultValue="foo" />
       </Form>,
@@ -48,7 +48,7 @@ describe('FormField + model', function() {
   });
 
   it('does not use `defaultValue` when there is initial data', function() {
-    wrapper = mount(
+    wrapper = mountWithTheme(
       <Form model={model} initialData={{fieldName: 'test'}}>
         <TextField name="fieldName" defaultValue="foo" />
       </Form>,
@@ -60,7 +60,7 @@ describe('FormField + model', function() {
   });
 
   it('transforms `defaultValue` from field with `setValue`', function() {
-    wrapper = mount(
+    wrapper = mountWithTheme(
       <Form model={model}>
         <TextField name="fieldName" defaultValue="foo" setValue={v => `${v}${v}`} />
       </Form>,
@@ -72,7 +72,7 @@ describe('FormField + model', function() {
   });
 
   it('sets field descriptor in model', function() {
-    wrapper = mount(
+    wrapper = mountWithTheme(
       <Form model={model} initialData={{fieldName: 'test'}}>
         <TextField name="fieldName" required />
       </Form>,
@@ -83,7 +83,7 @@ describe('FormField + model', function() {
   });
 
   it('removes field descriptor in model on unmount', function() {
-    wrapper = mount(
+    wrapper = mountWithTheme(
       <Form model={model} initialData={{fieldName: 'test'}}>
         <TextField name="fieldName" required />
       </Form>,
diff --git a/tests/js/spec/components/forms/genericField.spec.jsx b/tests/js/spec/components/forms/genericField.spec.jsx
index cf48a7583e..dedda6754f 100644
--- a/tests/js/spec/components/forms/genericField.spec.jsx
+++ b/tests/js/spec/components/forms/genericField.spec.jsx
@@ -1,5 +1,5 @@
 import React from 'react';
-import {shallow} from 'enzyme';
+import {shallow} from 'sentry-test/enzyme';
 
 import {GenericField, FormState} from 'app/components/forms';
 
diff --git a/tests/js/spec/components/forms/multiSelectField.spec.jsx b/tests/js/spec/components/forms/multiSelectField.spec.jsx
index ddf8361966..3eac35e447 100644
--- a/tests/js/spec/components/forms/multiSelectField.spec.jsx
+++ b/tests/js/spec/components/forms/multiSelectField.spec.jsx
@@ -1,5 +1,5 @@
 import React from 'react';
-import {shallow} from 'enzyme';
+import {shallow} from 'sentry-test/enzyme';
 
 import {MultiSelectField} from 'app/components/forms';
 
diff --git a/tests/js/spec/components/forms/multipleCheckboxField.spec.jsx b/tests/js/spec/components/forms/multipleCheckboxField.spec.jsx
index cad9fa183d..a20dbd3254 100644
--- a/tests/js/spec/components/forms/multipleCheckboxField.spec.jsx
+++ b/tests/js/spec/components/forms/multipleCheckboxField.spec.jsx
@@ -1,5 +1,5 @@
 import React from 'react';
-import {shallow} from 'enzyme';
+import {shallow} from 'sentry-test/enzyme';
 
 import {MultipleCheckboxField} from 'app/components/forms';
 
diff --git a/tests/js/spec/components/forms/numberField.spec.jsx b/tests/js/spec/components/forms/numberField.spec.jsx
index 059cb26bea..9414801b48 100644
--- a/tests/js/spec/components/forms/numberField.spec.jsx
+++ b/tests/js/spec/components/forms/numberField.spec.jsx
@@ -2,7 +2,7 @@ import React from 'react';
 
 import {NumberField} from 'app/components/forms';
 import Form from 'app/components/forms/form';
-import {shallow, mount} from 'enzyme';
+import {shallow, mount} from 'sentry-test/enzyme';
 
 jest.mock('jquery');
 
diff --git a/tests/js/spec/components/forms/passwordField.spec.jsx b/tests/js/spec/components/forms/passwordField.spec.jsx
index 61b89e4820..cb84e06409 100644
--- a/tests/js/spec/components/forms/passwordField.spec.jsx
+++ b/tests/js/spec/components/forms/passwordField.spec.jsx
@@ -1,5 +1,5 @@
 import React from 'react';
-import {shallow} from 'enzyme';
+import {shallow} from 'sentry-test/enzyme';
 
 import {PasswordField} from 'app/components/forms';
 
diff --git a/tests/js/spec/components/forms/radioBooleanField.spec.jsx b/tests/js/spec/components/forms/radioBooleanField.spec.jsx
index 9e2a09ac28..75cad9f269 100644
--- a/tests/js/spec/components/forms/radioBooleanField.spec.jsx
+++ b/tests/js/spec/components/forms/radioBooleanField.spec.jsx
@@ -1,5 +1,5 @@
 import React from 'react';
-import {shallow, mount} from 'enzyme';
+import {shallow, mount} from 'sentry-test/enzyme';
 
 import {RadioBooleanField} from 'app/components/forms';
 import NewRadioBooleanField from 'app/views/settings/components/forms/radioBooleanField';
diff --git a/tests/js/spec/components/forms/radioGroup.spec.jsx b/tests/js/spec/components/forms/radioGroup.spec.jsx
index 27b5fc9aa5..e389ed9d18 100644
--- a/tests/js/spec/components/forms/radioGroup.spec.jsx
+++ b/tests/js/spec/components/forms/radioGroup.spec.jsx
@@ -1,5 +1,5 @@
 import React from 'react';
-import {mount, shallow} from 'enzyme';
+import {mount, shallow} from 'sentry-test/enzyme';
 
 import RadioGroup from 'app/views/settings/components/forms/controls/radioGroup';
 
diff --git a/tests/js/spec/components/forms/rangeField.spec.jsx b/tests/js/spec/components/forms/rangeField.spec.jsx
index 22ed29f48d..9c82a044a5 100644
--- a/tests/js/spec/components/forms/rangeField.spec.jsx
+++ b/tests/js/spec/components/forms/rangeField.spec.jsx
@@ -1,5 +1,5 @@
 import React from 'react';
-import {shallow} from 'enzyme';
+import {shallow} from 'sentry-test/enzyme';
 
 import {RangeField} from 'app/components/forms';
 
diff --git a/tests/js/spec/components/forms/selectAsyncField.spec.jsx b/tests/js/spec/components/forms/selectAsyncField.spec.jsx
index a7dc07fc91..fa69c51bc6 100644
--- a/tests/js/spec/components/forms/selectAsyncField.spec.jsx
+++ b/tests/js/spec/components/forms/selectAsyncField.spec.jsx
@@ -1,5 +1,5 @@
 import React from 'react';
-import {mount} from 'enzyme';
+import {mountWithTheme} from 'sentry-test/enzyme';
 
 import {Form, SelectAsyncField} from 'app/components/forms';
 
@@ -20,7 +20,7 @@ describe('SelectAsyncField', function() {
   });
 
   it('supports autocomplete arguments from an integration', async function() {
-    const wrapper = mount(
+    const wrapper = mountWithTheme(
       <SelectAsyncField url="/foo/bar/" name="fieldName" />,
       TestStubs.routerContext()
     );
@@ -43,7 +43,7 @@ describe('SelectAsyncField', function() {
 
   it('with Form context', async function() {
     const submitMock = jest.fn();
-    const wrapper = mount(
+    const wrapper = mountWithTheme(
       <Form onSubmit={submitMock}>
         <SelectAsyncField url="/foo/bar/" name="fieldName" />
       </Form>,
diff --git a/tests/js/spec/components/forms/selectControl.spec.jsx b/tests/js/spec/components/forms/selectControl.spec.jsx
index dac128baa3..8775e53565 100644
--- a/tests/js/spec/components/forms/selectControl.spec.jsx
+++ b/tests/js/spec/components/forms/selectControl.spec.jsx
@@ -1,5 +1,5 @@
 import React from 'react';
-import {mount, shallow} from 'enzyme';
+import {mountWithTheme, shallow} from 'sentry-test/enzyme';
 
 import SelectControl from 'app/components/forms/selectControl';
 
@@ -54,7 +54,7 @@ describe('SelectControl', function() {
     const Foo = <div>Foo</div>;
     const Bar = <div>Bar</div>;
 
-    const wrapper = mount(
+    const wrapper = mountWithTheme(
       <SelectControl
         choices={[[{id: 'foo', name: 'Foo'}, Foo], [{id: 'bar', name: 'Bar'}, Bar]]}
         name="fieldName"
diff --git a/tests/js/spec/components/forms/selectCreatableField.spec.jsx b/tests/js/spec/components/forms/selectCreatableField.spec.jsx
index 638bf62fb1..59e7c37f4b 100644
--- a/tests/js/spec/components/forms/selectCreatableField.spec.jsx
+++ b/tests/js/spec/components/forms/selectCreatableField.spec.jsx
@@ -1,11 +1,11 @@
 import React from 'react';
-import {mount} from 'enzyme';
+import {mountWithTheme} from 'sentry-test/enzyme';
 
 import {Form, SelectCreatableField} from 'app/components/forms';
 
 describe('SelectCreatableField', function() {
   it('can add user input into select field when using options', function() {
-    const wrapper = mount(
+    const wrapper = mountWithTheme(
       <SelectCreatableField options={[{value: 'foo', label: 'Foo'}]} name="fieldName" />,
       TestStubs.routerContext()
     );
@@ -33,7 +33,7 @@ describe('SelectCreatableField', function() {
   });
 
   it('can add user input into select field when using choices', function() {
-    const wrapper = mount(
+    const wrapper = mountWithTheme(
       <SelectCreatableField choices={['foo']} name="fieldName" />,
       TestStubs.routerContext()
     );
@@ -61,7 +61,7 @@ describe('SelectCreatableField', function() {
   });
 
   it('can add user input into select field when using paired choices', function() {
-    const wrapper = mount(
+    const wrapper = mountWithTheme(
       <SelectCreatableField choices={[['foo', 'foo']]} name="fieldName" />,
       TestStubs.routerContext()
     );
@@ -90,7 +90,7 @@ describe('SelectCreatableField', function() {
 
   it('with Form context', function() {
     const submitMock = jest.fn();
-    const wrapper = mount(
+    const wrapper = mountWithTheme(
       <Form onSubmit={submitMock}>
         <SelectCreatableField choices={[['foo', 'foo']]} name="fieldName" />
       </Form>,
diff --git a/tests/js/spec/components/forms/selectField.spec.jsx b/tests/js/spec/components/forms/selectField.spec.jsx
index 9a59e8cf97..7169987b64 100644
--- a/tests/js/spec/components/forms/selectField.spec.jsx
+++ b/tests/js/spec/components/forms/selectField.spec.jsx
@@ -1,13 +1,12 @@
+import {mountWithTheme, shallow} from 'sentry-test/enzyme';
+import {selectByValue} from 'sentry-test/select';
 import React from 'react';
-import {mount, shallow} from 'enzyme';
 
 import {Form, SelectField} from 'app/components/forms';
 
-import {selectByValue} from '../../../helpers/select';
-
 describe('SelectField', function() {
   it('renders without form context', function() {
-    const wrapper = mount(
+    const wrapper = mountWithTheme(
       <SelectField
         options={[{label: 'a', value: 'a'}, {label: 'b', value: 'b'}]}
         name="fieldName"
@@ -54,7 +53,7 @@ describe('SelectField', function() {
 
   it('can change value and submit', function() {
     const mock = jest.fn();
-    const wrapper = mount(
+    const wrapper = mountWithTheme(
       <Form onSubmit={mock}>
         <SelectField
           options={[{label: 'a', value: 'a'}, {label: 'b', value: 'b'}]}
@@ -75,7 +74,7 @@ describe('SelectField', function() {
   describe('Multiple', function() {
     it('selects multiple values and submits', function() {
       const mock = jest.fn();
-      const wrapper = mount(
+      const wrapper = mountWithTheme(
         <Form onSubmit={mock}>
           <SelectField
             multiple
diff --git a/tests/js/spec/components/forms/textField.spec.jsx b/tests/js/spec/components/forms/textField.spec.jsx
index b1326d8059..301873e54d 100644
--- a/tests/js/spec/components/forms/textField.spec.jsx
+++ b/tests/js/spec/components/forms/textField.spec.jsx
@@ -1,5 +1,5 @@
 import React from 'react';
-import {shallow} from 'enzyme';
+import {shallow} from 'sentry-test/enzyme';
 
 import {TextField} from 'app/components/forms';
 
diff --git a/tests/js/spec/components/globalModal.spec.jsx b/tests/js/spec/components/globalModal.spec.jsx
index 5d2dd00c00..fa04e26250 100644
--- a/tests/js/spec/components/globalModal.spec.jsx
+++ b/tests/js/spec/components/globalModal.spec.jsx
@@ -1,5 +1,5 @@
 import React from 'react';
-import {shallow, mount} from 'enzyme';
+import {shallow, mount} from 'sentry-test/enzyme';
 import GlobalModal from 'app/components/globalModal';
 import {openModal, closeModal} from 'app/actionCreators/modal';
 
diff --git a/tests/js/spec/components/globalSelectionLink.spec.jsx b/tests/js/spec/components/globalSelectionLink.spec.jsx
index 7b4a81d80f..00c3840377 100644
--- a/tests/js/spec/components/globalSelectionLink.spec.jsx
+++ b/tests/js/spec/components/globalSelectionLink.spec.jsx
@@ -1,5 +1,5 @@
 import React from 'react';
-import {shallow} from 'enzyme';
+import {shallow} from 'sentry-test/enzyme';
 import GlobalSelectionLink from 'app/components/globalSelectionLink';
 
 const path = 'http://some.url/';
diff --git a/tests/js/spec/components/group/externalIssueActions.spec.jsx b/tests/js/spec/components/group/externalIssueActions.spec.jsx
index b99fb8cb6c..f141efbce8 100644
--- a/tests/js/spec/components/group/externalIssueActions.spec.jsx
+++ b/tests/js/spec/components/group/externalIssueActions.spec.jsx
@@ -1,5 +1,5 @@
 import React from 'react';
-import {mount} from 'enzyme';
+import {mountWithTheme} from 'sentry-test/enzyme';
 
 import ExternalIssueActions from 'app/components/group/externalIssueActions';
 
@@ -8,7 +8,7 @@ describe('ExternalIssueActions', function() {
 
   describe('with no external issues linked', function() {
     const integration = TestStubs.GitHubIntegration({externalIssues: []});
-    const wrapper = mount(
+    const wrapper = mountWithTheme(
       <ExternalIssueActions group={group} integration={integration} />,
       TestStubs.routerContext()
     );
@@ -57,7 +57,7 @@ describe('ExternalIssueActions', function() {
       },
     ];
     const integration = TestStubs.GitHubIntegration({externalIssues});
-    const wrapper = mount(
+    const wrapper = mountWithTheme(
       <ExternalIssueActions group={group} integration={integration} />,
       TestStubs.routerContext()
     );
diff --git a/tests/js/spec/components/group/releaseStats.spec.jsx b/tests/js/spec/components/group/releaseStats.spec.jsx
index 923becd8ff..79dc1d7909 100644
--- a/tests/js/spec/components/group/releaseStats.spec.jsx
+++ b/tests/js/spec/components/group/releaseStats.spec.jsx
@@ -1,7 +1,7 @@
-import {mount} from 'enzyme';
+import {mount} from 'sentry-test/enzyme';
 import React from 'react';
 
-import {initializeOrg} from 'app-test/helpers/initializeOrg';
+import {initializeOrg} from 'sentry-test/initializeOrg';
 import ConfigStore from 'app/stores/configStore';
 import GroupReleaseStats from 'app/components/group/releaseStats';
 
diff --git a/tests/js/spec/components/group/sentryAppExternalIssueActions.spec.jsx b/tests/js/spec/components/group/sentryAppExternalIssueActions.spec.jsx
index dea14a7cdd..5aabd0e32c 100644
--- a/tests/js/spec/components/group/sentryAppExternalIssueActions.spec.jsx
+++ b/tests/js/spec/components/group/sentryAppExternalIssueActions.spec.jsx
@@ -1,8 +1,8 @@
 import React from 'react';
-import {mount} from 'enzyme';
+import {mountWithTheme} from 'sentry-test/enzyme';
+import {selectByValue} from 'sentry-test/select';
 
 import SentryAppExternalIssueActions from 'app/components/group/sentryAppExternalIssueActions';
-import {selectByValue} from '../../../helpers/select';
 
 describe('SentryAppExternalIssueActions', () => {
   let group;
@@ -25,7 +25,7 @@ describe('SentryAppExternalIssueActions', () => {
 
   describe('without an external issue linked', () => {
     beforeEach(() => {
-      wrapper = mount(
+      wrapper = mountWithTheme(
         <SentryAppExternalIssueActions
           group={group}
           sentryAppInstallation={install}
@@ -146,7 +146,7 @@ describe('SentryAppExternalIssueActions', () => {
 
   describe('with an external issue linked', () => {
     beforeEach(() => {
-      wrapper = mount(
+      wrapper = mountWithTheme(
         <SentryAppExternalIssueActions
           group={group}
           sentryAppComponent={component}
diff --git a/tests/js/spec/components/group/sentryAppExternalIssueForm.spec.jsx b/tests/js/spec/components/group/sentryAppExternalIssueForm.spec.jsx
index 1be31baf2e..1dfef47711 100644
--- a/tests/js/spec/components/group/sentryAppExternalIssueForm.spec.jsx
+++ b/tests/js/spec/components/group/sentryAppExternalIssueForm.spec.jsx
@@ -1,5 +1,5 @@
 import React from 'react';
-import {mount} from 'enzyme';
+import {mountWithTheme} from 'sentry-test/enzyme';
 import {Client} from 'app/api';
 
 import {addQueryParamsToExistingUrl} from 'app/utils/queryString';
@@ -25,7 +25,7 @@ describe('SentryAppExternalIssueForm', () => {
 
   describe('create', () => {
     beforeEach(() => {
-      wrapper = mount(
+      wrapper = mountWithTheme(
         <SentryAppExternalIssueForm
           group={group}
           sentryAppInstallation={sentryAppInstallation}
@@ -83,7 +83,7 @@ describe('SentryAppExternalIssueForm', () => {
 
   describe('link', () => {
     beforeEach(() => {
-      wrapper = mount(
+      wrapper = mountWithTheme(
         <SentryAppExternalIssueForm
           group={group}
           sentryAppInstallation={sentryAppInstallation}
@@ -188,7 +188,7 @@ describe('SentryAppExternalIssueForm Async Field', () => {
         },
       });
 
-      wrapper = mount(
+      wrapper = mountWithTheme(
         <SentryAppExternalIssueForm
           group={group}
           sentryAppInstallation={sentryAppInstallation}
diff --git a/tests/js/spec/components/group/sidebar.spec.jsx b/tests/js/spec/components/group/sidebar.spec.jsx
index 1cf71f2ff6..7369e30ed7 100644
--- a/tests/js/spec/components/group/sidebar.spec.jsx
+++ b/tests/js/spec/components/group/sidebar.spec.jsx
@@ -1,7 +1,7 @@
 import React from 'react';
 
-import {initializeOrg} from 'app-test/helpers/initializeOrg';
-import {mount} from 'enzyme';
+import {initializeOrg} from 'sentry-test/initializeOrg';
+import {mountWithTheme} from 'sentry-test/enzyme';
 import GroupSidebar from 'app/components/group/sidebar';
 
 describe('GroupSidebar', function() {
@@ -45,7 +45,7 @@ describe('GroupSidebar', function() {
       body: TestStubs.Tags(),
     });
 
-    wrapper = mount(
+    wrapper = mountWithTheme(
       <GroupSidebar
         group={group}
         project={project}
@@ -91,7 +91,7 @@ describe('GroupSidebar', function() {
         body: [],
       });
 
-      wrapper = mount(
+      wrapper = mountWithTheme(
         <GroupSidebar
           api={new MockApiClient()}
           group={group}
diff --git a/tests/js/spec/components/group/suggestedOwners.spec.jsx b/tests/js/spec/components/group/suggestedOwners.spec.jsx
index e574adb252..0e196262a7 100644
--- a/tests/js/spec/components/group/suggestedOwners.spec.jsx
+++ b/tests/js/spec/components/group/suggestedOwners.spec.jsx
@@ -1,5 +1,5 @@
 import React from 'react';
-import {mount} from 'enzyme';
+import {mountWithTheme} from 'sentry-test/enzyme';
 import SuggestedOwners from 'app/components/group/suggestedOwners';
 import MemberListStore from 'app/stores/memberListStore';
 import {Client} from 'app/api';
@@ -49,7 +49,7 @@ describe('SuggestedOwners', function() {
       },
     });
 
-    const wrapper = mount(
+    const wrapper = mountWithTheme(
       <SuggestedOwners project={project} group={group} event={event} />,
       routerContext
     );
@@ -92,7 +92,7 @@ describe('SuggestedOwners', function() {
       },
     });
 
-    const wrapper = mount(
+    const wrapper = mountWithTheme(
       <SuggestedOwners project={project} group={TestStubs.Group()} event={event} />,
       routerContext
     );
@@ -119,7 +119,7 @@ describe('SuggestedOwners', function() {
       },
     });
 
-    const wrapper = mount(
+    const wrapper = mountWithTheme(
       <SuggestedOwners project={project} group={group} event={event} />,
       routerContext
     );
diff --git a/tests/js/spec/components/group/tagDistributionMeter.spec.jsx b/tests/js/spec/components/group/tagDistributionMeter.spec.jsx
index 52e5f97167..bc00ff8d81 100644
--- a/tests/js/spec/components/group/tagDistributionMeter.spec.jsx
+++ b/tests/js/spec/components/group/tagDistributionMeter.spec.jsx
@@ -1,5 +1,5 @@
 import React from 'react';
-import {mount} from 'enzyme';
+import {mount} from 'sentry-test/enzyme';
 
 import GroupTagDistributionMeter from 'app/components/group/tagDistributionMeter';
 
diff --git a/tests/js/spec/components/highlight.spec.jsx b/tests/js/spec/components/highlight.spec.jsx
index f00fb6022f..6eea8d7360 100644
--- a/tests/js/spec/components/highlight.spec.jsx
+++ b/tests/js/spec/components/highlight.spec.jsx
@@ -1,5 +1,5 @@
 import React from 'react';
-import {shallow} from 'enzyme';
+import {shallow} from 'sentry-test/enzyme';
 import {HighlightComponent} from 'app/components/highlight';
 
 describe('Highlight', function() {
diff --git a/tests/js/spec/components/hook.spec.jsx b/tests/js/spec/components/hook.spec.jsx
index facb11f503..b754ab499a 100644
--- a/tests/js/spec/components/hook.spec.jsx
+++ b/tests/js/spec/components/hook.spec.jsx
@@ -1,5 +1,5 @@
 import React from 'react';
-import {mount} from 'enzyme';
+import {mount} from 'sentry-test/enzyme';
 
 import Hook from 'app/components/hook';
 import HookStore from 'app/stores/hookStore';
diff --git a/tests/js/spec/components/idBadge/baseBadge.spec.jsx b/tests/js/spec/components/idBadge/baseBadge.spec.jsx
index 9a1b182918..799f9cecbd 100644
--- a/tests/js/spec/components/idBadge/baseBadge.spec.jsx
+++ b/tests/js/spec/components/idBadge/baseBadge.spec.jsx
@@ -1,5 +1,5 @@
 import React from 'react';
-import {shallow} from 'enzyme';
+import {shallow} from 'sentry-test/enzyme';
 import BaseBadge from 'app/components/idBadge/baseBadge';
 
 describe('BadgeBadge', function() {
diff --git a/tests/js/spec/components/idBadge/index.spec.jsx b/tests/js/spec/components/idBadge/index.spec.jsx
index 15140997b7..12bcffd04a 100644
--- a/tests/js/spec/components/idBadge/index.spec.jsx
+++ b/tests/js/spec/components/idBadge/index.spec.jsx
@@ -1,5 +1,5 @@
 import React from 'react';
-import {shallow} from 'enzyme';
+import {shallow} from 'sentry-test/enzyme';
 
 import IdBadge from 'app/components/idBadge';
 
diff --git a/tests/js/spec/components/idBadge/organizationBadge.spec.jsx b/tests/js/spec/components/idBadge/organizationBadge.spec.jsx
index 1c242ca9eb..1f6aba83e1 100644
--- a/tests/js/spec/components/idBadge/organizationBadge.spec.jsx
+++ b/tests/js/spec/components/idBadge/organizationBadge.spec.jsx
@@ -1,10 +1,10 @@
 import React from 'react';
-import {mount} from 'enzyme';
+import {mountWithTheme} from 'sentry-test/enzyme';
 import OrganizationBadge from 'app/components/idBadge/organizationBadge';
 
 describe('OrganizationBadge', function() {
   it('renders with Avatar and organization name', function() {
-    const wrapper = mount(
+    const wrapper = mountWithTheme(
       <OrganizationBadge organization={TestStubs.Organization()} />,
       TestStubs.routerContext()
     );
diff --git a/tests/js/spec/components/idBadge/projectBadge.spec.jsx b/tests/js/spec/components/idBadge/projectBadge.spec.jsx
index b09e5fe235..88ae69cb65 100644
--- a/tests/js/spec/components/idBadge/projectBadge.spec.jsx
+++ b/tests/js/spec/components/idBadge/projectBadge.spec.jsx
@@ -1,10 +1,10 @@
 import React from 'react';
-import {mount} from 'enzyme';
+import {mountWithTheme} from 'sentry-test/enzyme';
 import ProjectBadge from 'app/components/idBadge/projectBadge';
 
 describe('ProjectBadge', function() {
   it('renders with Avatar and team name', function() {
-    const wrapper = mount(
+    const wrapper = mountWithTheme(
       <ProjectBadge project={TestStubs.Project()} />,
       TestStubs.routerContext()
     );
diff --git a/tests/js/spec/components/idBadge/teamBadge.spec.jsx b/tests/js/spec/components/idBadge/teamBadge.spec.jsx
index a84846d4fd..d929a44b74 100644
--- a/tests/js/spec/components/idBadge/teamBadge.spec.jsx
+++ b/tests/js/spec/components/idBadge/teamBadge.spec.jsx
@@ -1,10 +1,10 @@
 import React from 'react';
-import {mount} from 'enzyme';
+import {mountWithTheme} from 'sentry-test/enzyme';
 import TeamBadge from 'app/components/idBadge/teamBadge';
 
 describe('TeamBadge', function() {
   it('renders with Avatar and team name', function() {
-    const wrapper = mount(
+    const wrapper = mountWithTheme(
       <TeamBadge team={TestStubs.Team()} />,
       TestStubs.routerContext()
     );
diff --git a/tests/js/spec/components/idBadge/userBadge.spec.jsx b/tests/js/spec/components/idBadge/userBadge.spec.jsx
index add3840352..9d88238b33 100644
--- a/tests/js/spec/components/idBadge/userBadge.spec.jsx
+++ b/tests/js/spec/components/idBadge/userBadge.spec.jsx
@@ -1,5 +1,5 @@
 import React from 'react';
-import {mount, shallow} from 'enzyme';
+import {mount, shallow} from 'sentry-test/enzyme';
 
 import UserBadge from 'app/components/idBadge/userBadge';
 
diff --git a/tests/js/spec/components/inactivePlugins.spec.jsx b/tests/js/spec/components/inactivePlugins.spec.jsx
index 01f241b284..0289203920 100644
--- a/tests/js/spec/components/inactivePlugins.spec.jsx
+++ b/tests/js/spec/components/inactivePlugins.spec.jsx
@@ -1,5 +1,5 @@
 import React from 'react';
-import {mount, shallow} from 'enzyme';
+import {mount, shallow} from 'sentry-test/enzyme';
 import InactivePlugins from 'app/components/inactivePlugins';
 
 describe('InactivePlugins', function() {
diff --git a/tests/js/spec/components/indicators.spec.jsx b/tests/js/spec/components/indicators.spec.jsx
index fc369e44b9..6e4d6e7f6a 100644
--- a/tests/js/spec/components/indicators.spec.jsx
+++ b/tests/js/spec/components/indicators.spec.jsx
@@ -1,5 +1,5 @@
 import React from 'react';
-import {mount} from 'enzyme';
+import {mount} from 'sentry-test/enzyme';
 
 import Indicators from 'app/components/indicators';
 import IndicatorStore from 'app/stores/indicatorStore';
diff --git a/tests/js/spec/components/issueDiff.spec.jsx b/tests/js/spec/components/issueDiff.spec.jsx
index 2f730071cf..e32d12acfe 100644
--- a/tests/js/spec/components/issueDiff.spec.jsx
+++ b/tests/js/spec/components/issueDiff.spec.jsx
@@ -1,12 +1,12 @@
 import React from 'react';
-import {mount, shallow} from 'enzyme';
+import {mountWithTheme, shallow} from 'sentry-test/enzyme';
 import {IssueDiff} from 'app/components/issueDiff';
 import {Client} from 'app/api';
-import entries from '../../mocks/entries';
 
 jest.mock('app/api');
 
 describe('IssueDiff', function() {
+  const entries = TestStubs.Entries();
   const routerContext = TestStubs.routerContext();
   const api = new MockApiClient();
 
@@ -39,7 +39,7 @@ describe('IssueDiff', function() {
     });
 
     // Need `mount` because of componentDidMount in <IssueDiff>
-    const wrapper = mount(
+    const wrapper = mountWithTheme(
       <IssueDiff
         api={api}
         baseIssueId="base"
@@ -73,7 +73,7 @@ describe('IssueDiff', function() {
     });
 
     // Need `mount` because of componentDidMount in <IssueDiff>
-    const wrapper = mount(
+    const wrapper = mountWithTheme(
       <IssueDiff
         api={api}
         baseIssueId="base"
diff --git a/tests/js/spec/components/issueSyncListElement.spec.jsx b/tests/js/spec/components/issueSyncListElement.spec.jsx
index 63df3f0ec6..012ac01203 100644
--- a/tests/js/spec/components/issueSyncListElement.spec.jsx
+++ b/tests/js/spec/components/issueSyncListElement.spec.jsx
@@ -1,5 +1,5 @@
 import React from 'react';
-import {shallow, mount} from 'enzyme';
+import {shallow, mount} from 'sentry-test/enzyme';
 import IssueSyncListElement from 'app/components/issueSyncListElement';
 
 describe('AlertLink', function() {
diff --git a/tests/js/spec/components/issues/snoozeAction.spec.jsx b/tests/js/spec/components/issues/snoozeAction.spec.jsx
index 88af98686d..94888fd2ae 100644
--- a/tests/js/spec/components/issues/snoozeAction.spec.jsx
+++ b/tests/js/spec/components/issues/snoozeAction.spec.jsx
@@ -1,5 +1,5 @@
 import React from 'react';
-import {shallow} from 'enzyme';
+import {shallow} from 'sentry-test/enzyme';
 import SnoozeAction from 'app/components/issues/snoozeAction';
 
 describe('SnoozeAction', function() {
diff --git a/tests/js/spec/components/lazyLoad.spec.jsx b/tests/js/spec/components/lazyLoad.spec.jsx
index 530fadcc20..1ff0322f8c 100644
--- a/tests/js/spec/components/lazyLoad.spec.jsx
+++ b/tests/js/spec/components/lazyLoad.spec.jsx
@@ -1,5 +1,5 @@
 import React from 'react';
-import {shallow, mount} from 'enzyme';
+import {shallow, mount} from 'sentry-test/enzyme';
 import LazyLoad from 'app/components/lazyLoad';
 
 describe('LazyLoad', function() {
diff --git a/tests/js/spec/components/letterAvatar.spec.jsx b/tests/js/spec/components/letterAvatar.spec.jsx
index 3283ab119f..044978d0d3 100644
--- a/tests/js/spec/components/letterAvatar.spec.jsx
+++ b/tests/js/spec/components/letterAvatar.spec.jsx
@@ -1,4 +1,4 @@
-import {mount} from 'enzyme';
+import {mount} from 'sentry-test/enzyme';
 import React from 'react';
 
 import LetterAvatar from 'app/components/letterAvatar';
diff --git a/tests/js/spec/components/loading/loadingContainer.spec.jsx b/tests/js/spec/components/loading/loadingContainer.spec.jsx
index 20a89a984b..b70e602adb 100644
--- a/tests/js/spec/components/loading/loadingContainer.spec.jsx
+++ b/tests/js/spec/components/loading/loadingContainer.spec.jsx
@@ -1,5 +1,5 @@
 import React from 'react';
-import {mount} from 'enzyme';
+import {mount} from 'sentry-test/enzyme';
 
 import LoadingContainer from 'app/components/loading/loadingContainer';
 
diff --git a/tests/js/spec/components/modals/commandPaletteModal.spec.jsx b/tests/js/spec/components/modals/commandPaletteModal.spec.jsx
index b9db38c6c3..31dbf6e5bb 100644
--- a/tests/js/spec/components/modals/commandPaletteModal.spec.jsx
+++ b/tests/js/spec/components/modals/commandPaletteModal.spec.jsx
@@ -1,6 +1,6 @@
 import React from 'react';
 
-import {mount} from 'enzyme';
+import {mount} from 'sentry-test/enzyme';
 import {openCommandPalette} from 'app/actionCreators/modal';
 import App from 'app/views/app';
 import FormSearchStore from 'app/stores/formSearchStore';
diff --git a/tests/js/spec/components/modals/createIncidentModal.spec.jsx b/tests/js/spec/components/modals/createIncidentModal.spec.jsx
index 3f93ad63cd..957b185b88 100644
--- a/tests/js/spec/components/modals/createIncidentModal.spec.jsx
+++ b/tests/js/spec/components/modals/createIncidentModal.spec.jsx
@@ -2,7 +2,7 @@ import {Modal} from 'react-bootstrap';
 import {browserHistory} from 'react-router';
 import React from 'react';
 
-import {mount} from 'enzyme';
+import {mountWithTheme} from 'sentry-test/enzyme';
 import CreateIncidentModal from 'app/components/modals/createIncidentModal';
 
 describe('CreateIncidentModal', function() {
@@ -28,7 +28,7 @@ describe('CreateIncidentModal', function() {
         identifier: '11111',
       },
     });
-    const wrapper = mount(
+    const wrapper = mountWithTheme(
       <CreateIncidentModal
         Body={Modal.Body}
         Header={Modal.Header}
diff --git a/tests/js/spec/components/modals/createTeamModal.spec.jsx b/tests/js/spec/components/modals/createTeamModal.spec.jsx
index ffad88e931..01120ae831 100644
--- a/tests/js/spec/components/modals/createTeamModal.spec.jsx
+++ b/tests/js/spec/components/modals/createTeamModal.spec.jsx
@@ -2,7 +2,7 @@ import {Modal} from 'react-bootstrap';
 import React from 'react';
 
 import {createTeam} from 'app/actionCreators/teams';
-import {mount} from 'enzyme';
+import {mountWithTheme} from 'sentry-test/enzyme';
 import CreateTeamModal from 'app/components/modals/createTeamModal';
 
 jest.mock('app/actionCreators/teams', () => ({
@@ -23,7 +23,7 @@ describe('CreateTeamModal', function() {
   afterEach(function() {});
 
   it('calls createTeam action creator on submit', async function() {
-    const wrapper = mount(
+    const wrapper = mountWithTheme(
       <CreateTeamModal
         Body={Modal.Body}
         Header={Modal.Header}
diff --git a/tests/js/spec/components/modals/diffModal.spec.jsx b/tests/js/spec/components/modals/diffModal.spec.jsx
index dbb38a6505..40b105cf4c 100644
--- a/tests/js/spec/components/modals/diffModal.spec.jsx
+++ b/tests/js/spec/components/modals/diffModal.spec.jsx
@@ -1,5 +1,5 @@
 import React from 'react';
-import {shallow} from 'enzyme';
+import {shallow} from 'sentry-test/enzyme';
 import DiffModal from 'app/components/modals/diffModal';
 
 describe('DiffModal', function() {
diff --git a/tests/js/spec/components/modals/helpSearchModal.spec.jsx b/tests/js/spec/components/modals/helpSearchModal.spec.jsx
index 56c82be557..1ce114d9f1 100644
--- a/tests/js/spec/components/modals/helpSearchModal.spec.jsx
+++ b/tests/js/spec/components/modals/helpSearchModal.spec.jsx
@@ -1,6 +1,6 @@
 import React from 'react';
 
-import {mount} from 'enzyme';
+import {mount} from 'sentry-test/enzyme';
 import {openHelpSearchModal} from 'app/actionCreators/modal';
 import App from 'app/views/app';
 
diff --git a/tests/js/spec/components/modals/integrationDetailsModal.spec.jsx b/tests/js/spec/components/modals/integrationDetailsModal.spec.jsx
index 857049aec5..da1606d595 100644
--- a/tests/js/spec/components/modals/integrationDetailsModal.spec.jsx
+++ b/tests/js/spec/components/modals/integrationDetailsModal.spec.jsx
@@ -1,6 +1,6 @@
 import React from 'react';
 
-import {mount} from 'enzyme';
+import {mountWithTheme} from 'sentry-test/enzyme';
 import IntegrationDetailsModal from 'app/components/modals/integrationDetailsModal';
 import HookStore from 'app/stores/hookStore';
 
@@ -13,7 +13,7 @@ describe('IntegrationDetailsModal', function() {
     const onClose = jest.fn();
     const provider = TestStubs.GitHubIntegrationProvider();
 
-    const wrapper = mount(
+    const wrapper = mountWithTheme(
       <IntegrationDetailsModal
         provider={provider}
         closeModal={onClose}
@@ -35,7 +35,7 @@ describe('IntegrationDetailsModal', function() {
     const onClose = jest.fn();
     const provider = TestStubs.JiraIntegrationProvider();
 
-    const wrapper = mount(
+    const wrapper = mountWithTheme(
       <IntegrationDetailsModal
         provider={provider}
         closeModal={onClose}
@@ -62,7 +62,7 @@ describe('IntegrationDetailsModal', function() {
 
     const provider = TestStubs.GitHubIntegrationProvider();
 
-    const wrapper = mount(
+    const wrapper = mountWithTheme(
       <IntegrationDetailsModal
         provider={provider}
         onAddIntegration={integrationAdded}
diff --git a/tests/js/spec/components/modals/inviteMembersModal.spec.jsx b/tests/js/spec/components/modals/inviteMembersModal.spec.jsx
index 9aa5112b7a..f233828ff7 100644
--- a/tests/js/spec/components/modals/inviteMembersModal.spec.jsx
+++ b/tests/js/spec/components/modals/inviteMembersModal.spec.jsx
@@ -1,7 +1,7 @@
 import {Modal} from 'react-bootstrap';
 import React from 'react';
 
-import {mount} from 'enzyme';
+import {mountWithTheme} from 'sentry-test/enzyme';
 import InviteMembersModal from 'app/components/modals/inviteMembersModal';
 
 describe('InviteMembersModal', function() {
@@ -27,7 +27,7 @@ describe('InviteMembersModal', function() {
   });
 
   it('renders', async function() {
-    const wrapper = mount(
+    const wrapper = mountWithTheme(
       <InviteMembersModal
         Body={Modal.Body}
         Header={Modal.Header}
@@ -47,7 +47,7 @@ describe('InviteMembersModal', function() {
   });
 
   it('can add a second row', async function() {
-    const wrapper = mount(
+    const wrapper = mountWithTheme(
       <InviteMembersModal
         Body={Modal.Body}
         Header={Modal.Header}
@@ -63,7 +63,7 @@ describe('InviteMembersModal', function() {
   });
 
   it('errors on duplicate emails', async function() {
-    const wrapper = mount(
+    const wrapper = mountWithTheme(
       <InviteMembersModal
         Body={Modal.Body}
         Header={Modal.Header}
@@ -94,7 +94,7 @@ describe('InviteMembersModal', function() {
   });
 
   it('indicates the total invites on the invite button', function() {
-    const wrapper = mount(
+    const wrapper = mountWithTheme(
       <InviteMembersModal
         Body={Modal.Body}
         Header={Modal.Header}
@@ -119,7 +119,7 @@ describe('InviteMembersModal', function() {
   it('can be closed', function() {
     const close = jest.fn();
 
-    const wrapper = mount(
+    const wrapper = mountWithTheme(
       <InviteMembersModal
         Body={Modal.Body}
         Header={Modal.Header}
@@ -140,7 +140,7 @@ describe('InviteMembersModal', function() {
       method: 'POST',
     });
 
-    const wrapper = mount(
+    const wrapper = mountWithTheme(
       <InviteMembersModal
         Body={Modal.Body}
         Header={Modal.Header}
@@ -224,7 +224,7 @@ describe('InviteMembersModal', function() {
       statusCode: 401,
     });
 
-    const wrapper = mount(
+    const wrapper = mountWithTheme(
       <InviteMembersModal
         Body={Modal.Body}
         Header={Modal.Header}
diff --git a/tests/js/spec/components/modals/recoveryOptionsModal.spec.jsx b/tests/js/spec/components/modals/recoveryOptionsModal.spec.jsx
index f76534cee3..36a373a807 100644
--- a/tests/js/spec/components/modals/recoveryOptionsModal.spec.jsx
+++ b/tests/js/spec/components/modals/recoveryOptionsModal.spec.jsx
@@ -1,7 +1,7 @@
 import {Modal} from 'react-bootstrap';
 import React from 'react';
 
-import {mount} from 'enzyme';
+import {mountWithTheme} from 'sentry-test/enzyme';
 import RecoveryOptionsModal from 'app/components/modals/recoveryOptionsModal';
 
 describe('RecoveryOptionsModal', function() {
@@ -16,7 +16,7 @@ describe('RecoveryOptionsModal', function() {
       method: 'GET',
       body: TestStubs.AllAuthenticators(),
     });
-    wrapper = mount(
+    wrapper = mountWithTheme(
       <RecoveryOptionsModal
         Body={Modal.Body}
         Header={Modal.Header}
@@ -66,7 +66,7 @@ describe('RecoveryOptionsModal', function() {
       method: 'GET',
       body: [TestStubs.Authenticators().Totp(), TestStubs.Authenticators().Recovery()],
     });
-    wrapper = mount(
+    wrapper = mountWithTheme(
       <RecoveryOptionsModal
         Body={Modal.Body}
         Header={Modal.Header}
diff --git a/tests/js/spec/components/modals/redirectToProject.spec.jsx b/tests/js/spec/components/modals/redirectToProject.spec.jsx
index a6f1520ae0..be1e83b43d 100644
--- a/tests/js/spec/components/modals/redirectToProject.spec.jsx
+++ b/tests/js/spec/components/modals/redirectToProject.spec.jsx
@@ -1,8 +1,8 @@
 import {Modal} from 'react-bootstrap';
+import {mountWithTheme} from 'sentry-test/enzyme';
 import React from 'react';
 
 import {RedirectToProjectModal} from 'app/components/modals/redirectToProject';
-import {mount} from 'enzyme';
 
 jest.unmock('app/utils/recreateRoute');
 describe('RedirectToProjectModal', function() {
@@ -22,7 +22,7 @@ describe('RedirectToProjectModal', function() {
   });
 
   it('has timer to redirect to new slug after mounting', function() {
-    mount(
+    mountWithTheme(
       <RedirectToProjectModal
         routes={routes}
         params={{orgId: 'org-slug', projectId: 'project-slug'}}
diff --git a/tests/js/spec/components/modals/sentryAppDetailsModal.spec.jsx b/tests/js/spec/components/modals/sentryAppDetailsModal.spec.jsx
index 34bfae880d..81243f8a8e 100644
--- a/tests/js/spec/components/modals/sentryAppDetailsModal.spec.jsx
+++ b/tests/js/spec/components/modals/sentryAppDetailsModal.spec.jsx
@@ -1,6 +1,6 @@
 import React from 'react';
 
-import {mount} from 'enzyme';
+import {mountWithTheme} from 'sentry-test/enzyme';
 import SentryAppDetailsModal from 'app/components/modals/sentryAppDetailsModal';
 
 describe('SentryAppDetailsModal', function() {
@@ -13,7 +13,7 @@ describe('SentryAppDetailsModal', function() {
   const installButton = 'Button[data-test-id="install"]';
 
   function render() {
-    return mount(
+    return mountWithTheme(
       <SentryAppDetailsModal
         sentryApp={sentryApp}
         organization={org}
diff --git a/tests/js/spec/components/modals/sudoModal.spec.jsx b/tests/js/spec/components/modals/sudoModal.spec.jsx
index 111f74f702..584e3a7ac0 100644
--- a/tests/js/spec/components/modals/sudoModal.spec.jsx
+++ b/tests/js/spec/components/modals/sudoModal.spec.jsx
@@ -1,5 +1,5 @@
 import React from 'react';
-import {mount} from 'enzyme';
+import {mount} from 'sentry-test/enzyme';
 
 import {Client} from 'app/api';
 import App from 'app/views/app';
diff --git a/tests/js/spec/components/multipleCheckbox.spec.js b/tests/js/spec/components/multipleCheckbox.spec.js
index 7f85f9f9e1..f0a4b31821 100644
--- a/tests/js/spec/components/multipleCheckbox.spec.js
+++ b/tests/js/spec/components/multipleCheckbox.spec.js
@@ -1,5 +1,5 @@
 import React from 'react';
-import {shallow, mount} from 'enzyme';
+import {shallow, mount} from 'sentry-test/enzyme';
 import MultipleCheckbox from 'app/views/settings/components/forms/controls/multipleCheckbox';
 
 describe('MultipleCheckbox', function() {
diff --git a/tests/js/spec/components/mutedBox.spec.jsx b/tests/js/spec/components/mutedBox.spec.jsx
index aa6731cf1f..d1ade2ea19 100644
--- a/tests/js/spec/components/mutedBox.spec.jsx
+++ b/tests/js/spec/components/mutedBox.spec.jsx
@@ -1,5 +1,5 @@
 import React from 'react';
-import {shallow} from 'enzyme';
+import {shallow} from 'sentry-test/enzyme';
 
 import MutedBox from 'app/components/mutedBox';
 
diff --git a/tests/js/spec/components/narrowLayout.spec.jsx b/tests/js/spec/components/narrowLayout.spec.jsx
index 33d165ca04..261737bac9 100644
--- a/tests/js/spec/components/narrowLayout.spec.jsx
+++ b/tests/js/spec/components/narrowLayout.spec.jsx
@@ -1,5 +1,5 @@
 import React from 'react';
-import {mount} from 'enzyme';
+import {mount} from 'sentry-test/enzyme';
 
 import NarrowLayout from 'app/components/narrowLayout';
 
diff --git a/tests/js/spec/components/onboardingWizard/todoList.spec.jsx b/tests/js/spec/components/onboardingWizard/todoList.spec.jsx
index 3a028572b0..3f96b0a7ee 100644
--- a/tests/js/spec/components/onboardingWizard/todoList.spec.jsx
+++ b/tests/js/spec/components/onboardingWizard/todoList.spec.jsx
@@ -1,5 +1,5 @@
 import React from 'react';
-import {mount} from 'enzyme';
+import {mountWithTheme} from 'sentry-test/enzyme';
 
 import TodoList from 'app/components/onboardingWizard/todoList';
 
@@ -8,7 +8,10 @@ describe('TodoList', function() {
 
   it('does not render `upload source maps` task with no projects', function() {
     const organization = TestStubs.Organization();
-    const wrapper = mount(<TodoList organization={organization} />, routerContext);
+    const wrapper = mountWithTheme(
+      <TodoList organization={organization} />,
+      routerContext
+    );
     expect(wrapper.find('h4[data-test-id=7]').exists()).toBe(false);
   });
 
@@ -16,7 +19,10 @@ describe('TodoList', function() {
     const organization = TestStubs.Organization({
       projects: [{platform: 'python'}],
     });
-    const wrapper = mount(<TodoList organization={organization} />, routerContext);
+    const wrapper = mountWithTheme(
+      <TodoList organization={organization} />,
+      routerContext
+    );
     expect(wrapper.find('h4[data-test-id=7]').exists()).toBe(false);
   });
 
@@ -24,7 +30,10 @@ describe('TodoList', function() {
     const organization = TestStubs.Organization({
       projects: [{platform: 'javascript-react'}],
     });
-    const wrapper = mount(<TodoList organization={organization} />, routerContext);
+    const wrapper = mountWithTheme(
+      <TodoList organization={organization} />,
+      routerContext
+    );
     expect(wrapper.find('h4[data-test-id=7]').text()).toBe('Upload source maps');
   });
 });
diff --git a/tests/js/spec/components/organizations/globalSelectionHeader.spec.jsx b/tests/js/spec/components/organizations/globalSelectionHeader.spec.jsx
index 32eabc3c59..f6f288f6a0 100644
--- a/tests/js/spec/components/organizations/globalSelectionHeader.spec.jsx
+++ b/tests/js/spec/components/organizations/globalSelectionHeader.spec.jsx
@@ -1,8 +1,8 @@
 import React from 'react';
 
-import {initializeOrg} from 'app-test/helpers/initializeOrg';
-import {mockRouterPush} from 'app-test/helpers/mockRouterPush';
-import {mount} from 'enzyme';
+import {initializeOrg} from 'sentry-test/initializeOrg';
+import {mockRouterPush} from 'sentry-test/mockRouterPush';
+import {mountWithTheme} from 'sentry-test/enzyme';
 import ConfigStore from 'app/stores/configStore';
 import GlobalSelectionHeader from 'app/components/organizations/globalSelectionHeader';
 import GlobalSelectionStore from 'app/stores/globalSelectionStore';
@@ -66,7 +66,7 @@ describe('GlobalSelectionHeader', function() {
   });
 
   it('does not update router if there is custom routing', function() {
-    mount(
+    mountWithTheme(
       <GlobalSelectionHeader organization={organization} hasCustomRouting />,
       routerContext
     );
@@ -74,24 +74,27 @@ describe('GlobalSelectionHeader', function() {
   });
 
   it('does not update router if org in URL params is different than org in context/props', function() {
-    mount(<GlobalSelectionHeader organization={organization} hasCustomRouting />, {
-      ...routerContext,
-      context: {
-        ...routerContext.context,
-        router: {...routerContext.context.router, params: {orgId: 'diff-org'}},
-      },
-    });
+    mountWithTheme(
+      <GlobalSelectionHeader organization={organization} hasCustomRouting />,
+      {
+        ...routerContext,
+        context: {
+          ...routerContext.context,
+          router: {...routerContext.context.router, params: {orgId: 'diff-org'}},
+        },
+      }
+    );
     expect(router.push).not.toHaveBeenCalled();
   });
 
   it('does not replace URL with values from store when mounted with no query params', function() {
-    mount(<GlobalSelectionHeader organization={organization} />, routerContext);
+    mountWithTheme(<GlobalSelectionHeader organization={organization} />, routerContext);
 
     expect(router.replace).not.toHaveBeenCalled();
   });
 
   it('only updates GlobalSelection store when mounted with query params', async function() {
-    mount(
+    mountWithTheme(
       <GlobalSelectionHeader organization={organization} />,
       changeQuery(routerContext, {
         statsPeriod: '7d',
@@ -123,7 +126,7 @@ describe('GlobalSelectionHeader', function() {
   });
 
   it('updates GlobalSelection store when re-rendered with different query params', async function() {
-    const wrapper = mount(
+    const wrapper = mountWithTheme(
       <GlobalSelectionHeader organization={organization} />,
       changeQuery(routerContext, {
         statsPeriod: '7d',
@@ -166,7 +169,7 @@ describe('GlobalSelectionHeader', function() {
   });
 
   it('updates environments when switching projects', async function() {
-    const wrapper = mount(
+    const wrapper = mountWithTheme(
       <GlobalSelectionHeader
         organization={organization}
         projects={organization.projects}
@@ -251,7 +254,7 @@ describe('GlobalSelectionHeader', function() {
   });
 
   it('updates URL to match GlobalSelection store when re-rendered with `forceUrlSync` prop', async function() {
-    const wrapper = mount(
+    const wrapper = mountWithTheme(
       <GlobalSelectionHeader router={router} organization={organization} />,
       routerContext
     );
@@ -276,7 +279,7 @@ describe('GlobalSelectionHeader', function() {
   });
 
   it('updates GlobalSelection store with default period', async function() {
-    mount(
+    mountWithTheme(
       <GlobalSelectionHeader organization={organization} />,
       changeQuery(routerContext, {
         environment: 'prod',
@@ -308,7 +311,7 @@ describe('GlobalSelectionHeader', function() {
   });
 
   it('updates GlobalSelection store with empty date selections', async function() {
-    const wrapper = mount(
+    const wrapper = mountWithTheme(
       <GlobalSelectionHeader organization={organization} />,
       changeQuery(routerContext, {
         statsPeriod: '7d',
@@ -345,7 +348,7 @@ describe('GlobalSelectionHeader', function() {
   });
 
   it('does not update store if url params have not changed', async function() {
-    const wrapper = mount(
+    const wrapper = mountWithTheme(
       <GlobalSelectionHeader organization={organization} />,
       changeQuery(routerContext, {
         statsPeriod: '7d',
@@ -394,7 +397,7 @@ describe('GlobalSelectionHeader', function() {
       },
     });
 
-    mount(
+    mountWithTheme(
       <GlobalSelectionHeader organization={initializationObj.organization} />,
       initializationObj.routerContext
     );
@@ -415,7 +418,7 @@ describe('GlobalSelectionHeader', function() {
       },
     });
 
-    mount(
+    mountWithTheme(
       <GlobalSelectionHeader
         organization={initializationObj.organization}
         disableLoadFromStore
@@ -437,7 +440,7 @@ describe('GlobalSelectionHeader', function() {
         },
       });
 
-      mount(
+      mountWithTheme(
         <GlobalSelectionHeader organization={initializationObj.organization} />,
         initializationObj.routerContext
       );
@@ -458,7 +461,7 @@ describe('GlobalSelectionHeader', function() {
         },
       });
 
-      mount(
+      mountWithTheme(
         <GlobalSelectionHeader organization={initializationObj.organization} />,
         initializationObj.routerContext
       );
@@ -479,7 +482,7 @@ describe('GlobalSelectionHeader', function() {
       },
     });
 
-    const wrapper = mount(
+    const wrapper = mountWithTheme(
       <GlobalSelectionHeader
         organization={initialData.organization}
         shouldForceProject
@@ -519,7 +522,7 @@ describe('GlobalSelectionHeader', function() {
       });
 
       const createWrapper = props => {
-        wrapper = mount(
+        wrapper = mountWithTheme(
           <GlobalSelectionHeader
             params={{orgId: initialData.organization.slug}}
             organization={initialData.organization}
@@ -624,7 +627,7 @@ describe('GlobalSelectionHeader', function() {
         .mockImplementation(() => initialData.organization.projects);
 
       const createWrapper = props => {
-        wrapper = mount(
+        wrapper = mountWithTheme(
           <GlobalSelectionHeader
             params={{orgId: initialData.organization.slug}}
             organization={initialData.organization}
@@ -672,7 +675,7 @@ describe('GlobalSelectionHeader', function() {
         },
       });
 
-      wrapper = mount(
+      wrapper = mountWithTheme(
         <GlobalSelectionHeader organization={initialData.organization} />,
         initialData.routerContext
       );
@@ -690,7 +693,7 @@ describe('GlobalSelectionHeader', function() {
         },
       };
 
-      wrapper = mount(
+      wrapper = mountWithTheme(
         <GlobalSelectionHeader organization={initialData.organization} />,
         initialData.routerContext
       );
diff --git a/tests/js/spec/components/organizations/multipleEnvironmentSelector.spec.jsx b/tests/js/spec/components/organizations/multipleEnvironmentSelector.spec.jsx
index acf9fab988..5f2c84e3ac 100644
--- a/tests/js/spec/components/organizations/multipleEnvironmentSelector.spec.jsx
+++ b/tests/js/spec/components/organizations/multipleEnvironmentSelector.spec.jsx
@@ -1,6 +1,6 @@
 import React from 'react';
 
-import {mount} from 'enzyme';
+import {mountWithTheme} from 'sentry-test/enzyme';
 import MultipleEnvironmentSelector from 'app/components/organizations/multipleEnvironmentSelector';
 
 describe('MultipleEnvironmentSelector', function() {
@@ -33,7 +33,7 @@ describe('MultipleEnvironmentSelector', function() {
   beforeEach(function() {
     onChange.mockReset();
     onUpdate.mockReset();
-    wrapper = mount(
+    wrapper = mountWithTheme(
       <MultipleEnvironmentSelector
         organization={organization}
         selectedProjects={selectedProjects}
diff --git a/tests/js/spec/components/organizations/timeRangeSelector/dateRange.spec.jsx b/tests/js/spec/components/organizations/timeRangeSelector/dateRange.spec.jsx
index a93117c095..f6126d058c 100644
--- a/tests/js/spec/components/organizations/timeRangeSelector/dateRange.spec.jsx
+++ b/tests/js/spec/components/organizations/timeRangeSelector/dateRange.spec.jsx
@@ -1,5 +1,5 @@
 import React from 'react';
-import {mount} from 'enzyme';
+import {mount} from 'sentry-test/enzyme';
 import MockDate from 'mockdate';
 
 import ConfigStore from 'app/stores/configStore';
diff --git a/tests/js/spec/components/organizations/timeRangeSelector/dateSummary.spec.jsx b/tests/js/spec/components/organizations/timeRangeSelector/dateSummary.spec.jsx
index 6d19de2f38..f5b8c9840b 100644
--- a/tests/js/spec/components/organizations/timeRangeSelector/dateSummary.spec.jsx
+++ b/tests/js/spec/components/organizations/timeRangeSelector/dateSummary.spec.jsx
@@ -1,6 +1,6 @@
 import React from 'react';
 
-import {mount} from 'enzyme';
+import {mount} from 'sentry-test/enzyme';
 import DateSummary from 'app/components/organizations/timeRangeSelector/dateSummary';
 
 const start = new Date('2017-10-14T02:38:00.000Z');
diff --git a/tests/js/spec/components/organizations/timeRangeSelector/index.spec.jsx b/tests/js/spec/components/organizations/timeRangeSelector/index.spec.jsx
index c461c35028..bca7a60471 100644
--- a/tests/js/spec/components/organizations/timeRangeSelector/index.spec.jsx
+++ b/tests/js/spec/components/organizations/timeRangeSelector/index.spec.jsx
@@ -1,5 +1,5 @@
 import React from 'react';
-import {mount} from 'enzyme';
+import {mountWithTheme} from 'sentry-test/enzyme';
 
 import ConfigStore from 'app/stores/configStore';
 import TimeRangeSelector from 'app/components/organizations/timeRangeSelector';
@@ -10,7 +10,7 @@ describe('TimeRangeSelector', function() {
   const routerContext = TestStubs.routerContext();
 
   const createWrapper = (props = {}) =>
-    mount(
+    mountWithTheme(
       <TimeRangeSelector
         showAbsolute
         showRelative
@@ -29,7 +29,7 @@ describe('TimeRangeSelector', function() {
   });
 
   it('renders when given relative period not in dropdown', function() {
-    wrapper = mount(
+    wrapper = mountWithTheme(
       <TimeRangeSelector showAbsolute={false} showRelative={false} relative="9d" />,
       routerContext
     );
@@ -37,7 +37,7 @@ describe('TimeRangeSelector', function() {
   });
 
   it('renders when given an invalid relative period', function() {
-    wrapper = mount(
+    wrapper = mountWithTheme(
       <TimeRangeSelector showAbsolute={false} showRelative={false} relative="1w" />,
       routerContext
     );
@@ -45,7 +45,7 @@ describe('TimeRangeSelector', function() {
   });
 
   it('hides relative and absolute selectors', async function() {
-    wrapper = mount(
+    wrapper = mountWithTheme(
       <TimeRangeSelector showAbsolute={false} showRelative={false} />,
       routerContext
     );
diff --git a/tests/js/spec/components/pageHeader.spec.jsx b/tests/js/spec/components/pageHeader.spec.jsx
index 44e1981372..9abbec9246 100644
--- a/tests/js/spec/components/pageHeader.spec.jsx
+++ b/tests/js/spec/components/pageHeader.spec.jsx
@@ -1,5 +1,5 @@
 import React from 'react';
-import {shallow} from 'enzyme';
+import {shallow} from 'sentry-test/enzyme';
 import PageHeading from 'app/components/pageHeading';
 
 describe('PageHeading', function() {
diff --git a/tests/js/spec/components/platformList.spec.jsx b/tests/js/spec/components/platformList.spec.jsx
index 3f2ade8a07..bc84c2c68f 100644
--- a/tests/js/spec/components/platformList.spec.jsx
+++ b/tests/js/spec/components/platformList.spec.jsx
@@ -1,5 +1,5 @@
 import React from 'react';
-import {mount} from 'enzyme';
+import {mount} from 'sentry-test/enzyme';
 import PlatformList from 'app/components/platformList';
 
 describe('PlatformList', function() {
diff --git a/tests/js/spec/components/platformPicker.spec.jsx b/tests/js/spec/components/platformPicker.spec.jsx
index 84d573dec6..36beb2f344 100644
--- a/tests/js/spec/components/platformPicker.spec.jsx
+++ b/tests/js/spec/components/platformPicker.spec.jsx
@@ -1,5 +1,5 @@
 import React from 'react';
-import {shallow, mount} from 'enzyme';
+import {shallow, mountWithTheme} from 'sentry-test/enzyme';
 
 import {Client} from 'app/api';
 import PlatformPicker from 'app/components/platformPicker';
@@ -71,7 +71,10 @@ describe('PlatformPicker', function() {
         ...baseProps,
       };
 
-      const wrapper = mount(<PlatformPicker {...props} />, TestStubs.routerContext());
+      const wrapper = mountWithTheme(
+        <PlatformPicker {...props} />,
+        TestStubs.routerContext()
+      );
 
       const testListLink = wrapper
         .find('ListLink')
@@ -90,7 +93,10 @@ describe('PlatformPicker', function() {
         setPlatform: jest.fn(),
       };
 
-      const wrapper = mount(<PlatformPicker {...props} />, TestStubs.routerContext());
+      const wrapper = mountWithTheme(
+        <PlatformPicker {...props} />,
+        TestStubs.routerContext()
+      );
 
       wrapper.find('ClearButton').simulate('click');
       expect(props.setPlatform).toHaveBeenCalledWith('');
diff --git a/tests/js/spec/components/pluginIcon.spec.jsx b/tests/js/spec/components/pluginIcon.spec.jsx
index 302d566bcd..9379732a12 100644
--- a/tests/js/spec/components/pluginIcon.spec.jsx
+++ b/tests/js/spec/components/pluginIcon.spec.jsx
@@ -1,7 +1,7 @@
 /* eslint-disable jest/no-disabled-tests */
 
 import React from 'react';
-import {shallow} from 'enzyme';
+import {shallow} from 'sentry-test/enzyme';
 import PluginIcon from 'app/plugins/components/pluginIcon';
 
 // For some reason jest only respects the last mocked, so we can't test
diff --git a/tests/js/spec/components/projectHeader/projectSelector.spec.jsx b/tests/js/spec/components/projectHeader/projectSelector.spec.jsx
index 7e3b312576..079314fd10 100644
--- a/tests/js/spec/components/projectHeader/projectSelector.spec.jsx
+++ b/tests/js/spec/components/projectHeader/projectSelector.spec.jsx
@@ -1,5 +1,5 @@
 import React from 'react';
-import {mount} from 'enzyme';
+import {mountWithTheme} from 'sentry-test/enzyme';
 
 import ProjectHeaderProjectSelector from 'app/components/projectHeader/projectSelector';
 import ProjectsStore from 'app/stores/projectsStore';
@@ -43,7 +43,7 @@ describe('ProjectHeaderProjectSelector', function() {
   });
 
   it('renders with "Select a project" when no project is selected', function() {
-    const wrapper = mount(
+    const wrapper = mountWithTheme(
       <ProjectHeaderProjectSelector organization={mockOrg} projectId="" />,
       routerContext
     );
@@ -52,7 +52,7 @@ describe('ProjectHeaderProjectSelector', function() {
   });
 
   it('has project label when project is selected', function() {
-    const wrapper = mount(
+    const wrapper = mountWithTheme(
       <ProjectHeaderProjectSelector organization={mockOrg} projectId="" />,
       routerContext
     );
@@ -73,7 +73,7 @@ describe('ProjectHeaderProjectSelector', function() {
 
   it('calls `router.push` when a project is selected', function() {
     const routerMock = TestStubs.router();
-    const wrapper = mount(
+    const wrapper = mountWithTheme(
       <ProjectHeaderProjectSelector
         organization={mockOrg}
         projectId=""
diff --git a/tests/js/spec/components/projectSelector.spec.jsx b/tests/js/spec/components/projectSelector.spec.jsx
index 5d1a66aaae..bc72aa9f02 100644
--- a/tests/js/spec/components/projectSelector.spec.jsx
+++ b/tests/js/spec/components/projectSelector.spec.jsx
@@ -1,5 +1,5 @@
 import React from 'react';
-import {mount} from 'enzyme';
+import {mountWithTheme} from 'sentry-test/enzyme';
 
 import ProjectSelector from 'app/components/projectSelector';
 import ProjectsStore from 'app/stores/projectsStore';
@@ -52,7 +52,7 @@ describe('ProjectSelector', function() {
   });
 
   it('should show empty message with no projects button, when no projects, and has no "project:write" access', function() {
-    const wrapper = mount(
+    const wrapper = mountWithTheme(
       <ProjectSelector
         {...props}
         organization={{
@@ -75,7 +75,7 @@ describe('ProjectSelector', function() {
   });
 
   it('should show empty message and create project button, when no projects and has "project:write" access', function() {
-    const wrapper = mount(
+    const wrapper = mountWithTheme(
       <ProjectSelector
         {...props}
         organization={{
@@ -98,13 +98,13 @@ describe('ProjectSelector', function() {
   });
 
   it('lists projects and has filter', function() {
-    const wrapper = mount(<ProjectSelector {...props} />, routerContext);
+    const wrapper = mountWithTheme(<ProjectSelector {...props} />, routerContext);
     openMenu(wrapper);
     expect(wrapper.find('AutoCompleteItem')).toHaveLength(2);
   });
 
   it('can filter projects by project name', function() {
-    const wrapper = mount(<ProjectSelector {...props} />, routerContext);
+    const wrapper = mountWithTheme(<ProjectSelector {...props} />, routerContext);
     openMenu(wrapper);
 
     wrapper.find('StyledInput').simulate('change', {target: {value: 'TEST'}});
@@ -115,7 +115,7 @@ describe('ProjectSelector', function() {
   });
 
   it('does not close dropdown when input is clicked', async function() {
-    const wrapper = mount(<ProjectSelector {...props} />, routerContext);
+    const wrapper = mountWithTheme(<ProjectSelector {...props} />, routerContext);
     openMenu(wrapper);
 
     wrapper.find('StyledInput').simulate('click');
@@ -125,7 +125,7 @@ describe('ProjectSelector', function() {
   });
 
   it('closes dropdown when project is selected', function() {
-    const wrapper = mount(<ProjectSelector {...props} />, routerContext);
+    const wrapper = mountWithTheme(<ProjectSelector {...props} />, routerContext);
     openMenu(wrapper);
 
     // Select first project
@@ -138,7 +138,10 @@ describe('ProjectSelector', function() {
 
   it('calls callback when project is selected', function() {
     const mock = jest.fn();
-    const wrapper = mount(<ProjectSelector {...props} onSelect={mock} />, routerContext);
+    const wrapper = mountWithTheme(
+      <ProjectSelector {...props} onSelect={mock} />,
+      routerContext
+    );
     openMenu(wrapper);
 
     // Select first project
@@ -155,7 +158,7 @@ describe('ProjectSelector', function() {
   });
 
   it('shows empty filter message when filtering has no results', function() {
-    const wrapper = mount(<ProjectSelector {...props} />, routerContext);
+    const wrapper = mountWithTheme(<ProjectSelector {...props} />, routerContext);
     openMenu(wrapper);
 
     wrapper.find('StyledInput').simulate('change', {target: {value: 'Foo'}});
@@ -164,7 +167,7 @@ describe('ProjectSelector', function() {
 
   it('does not call `onSelect` when using multi select', function() {
     const mock = jest.fn();
-    const wrapper = mount(
+    const wrapper = mountWithTheme(
       <ProjectSelector {...props} multi onSelect={mock} />,
       routerContext
     );
@@ -182,7 +185,7 @@ describe('ProjectSelector', function() {
 
   it('calls `onMultiSelect` and render prop when using multi select as an uncontrolled component', async function() {
     const mock = jest.fn();
-    const wrapper = mount(
+    const wrapper = mountWithTheme(
       <ProjectSelector {...props} multi onMultiSelect={mock} />,
       routerContext
     );
@@ -285,7 +288,10 @@ describe('ProjectSelector', function() {
     const project = TestStubs.Project();
     const multiProjectProps = {...props, multiProjects: [project]};
 
-    const wrapper = mount(<ProjectSelector {...multiProjectProps} />, routerContext);
+    const wrapper = mountWithTheme(
+      <ProjectSelector {...multiProjectProps} />,
+      routerContext
+    );
     openMenu(wrapper);
     expect(wrapper.find('AutoCompleteItem')).toHaveLength(1);
     expect(wrapper.text()).not.toContain("Projects I don't belong to");
@@ -300,7 +306,10 @@ describe('ProjectSelector', function() {
       nonMemberProjects: [nonMemberProject],
     };
 
-    const wrapper = mount(<ProjectSelector {...multiProjectProps} />, routerContext);
+    const wrapper = mountWithTheme(
+      <ProjectSelector {...multiProjectProps} />,
+      routerContext
+    );
     openMenu(wrapper);
     expect(wrapper.text()).toContain("Projects I don't belong to");
     expect(wrapper.find('AutoCompleteItem')).toHaveLength(2);
diff --git a/tests/js/spec/components/projects/__snapshots__/bookmarkStar.spec.jsx.snap b/tests/js/spec/components/projects/__snapshots__/bookmarkStar.spec.jsx.snap
index 96c7d74bf6..13773f2503 100644
--- a/tests/js/spec/components/projects/__snapshots__/bookmarkStar.spec.jsx.snap
+++ b/tests/js/spec/components/projects/__snapshots__/bookmarkStar.spec.jsx.snap
@@ -100,13 +100,13 @@ exports[`BookmarkStar renders 1`] = `
       src="icon-star-small-filled"
     >
       <ForwardRef
-        className="css-1lg61nd-InlineSvg-Star e5ekdrk0"
+        className="css-lxjt2m-InlineSvg-Star e5ekdrk0"
         isBookmarked={false}
         onClick={[Function]}
         src="icon-star-small-filled"
       >
         <svg
-          className="css-1lg61nd-InlineSvg-Star e5ekdrk0"
+          className="css-lxjt2m-InlineSvg-Star e5ekdrk0"
           height="1em"
           onClick={[Function]}
           viewBox={Object {}}
diff --git a/tests/js/spec/components/projects/bookmarkStar.spec.jsx b/tests/js/spec/components/projects/bookmarkStar.spec.jsx
index 1b6e4052f6..ef61e0c72c 100644
--- a/tests/js/spec/components/projects/bookmarkStar.spec.jsx
+++ b/tests/js/spec/components/projects/bookmarkStar.spec.jsx
@@ -1,4 +1,4 @@
-import {mount} from 'enzyme';
+import {mount} from 'sentry-test/enzyme';
 import React from 'react';
 
 import BookmarkStar from 'app/components/projects/bookmarkStar';
diff --git a/tests/js/spec/components/pullRequestLink.spec.jsx b/tests/js/spec/components/pullRequestLink.spec.jsx
index d5ca589af4..e7fb32fb98 100644
--- a/tests/js/spec/components/pullRequestLink.spec.jsx
+++ b/tests/js/spec/components/pullRequestLink.spec.jsx
@@ -1,5 +1,5 @@
 import React from 'react';
-import {mount} from 'enzyme';
+import {mount} from 'sentry-test/enzyme';
 
 import PullRequestLink from 'app/components/pullRequestLink';
 
diff --git a/tests/js/spec/components/qrcode.spec.jsx b/tests/js/spec/components/qrcode.spec.jsx
index 9a6a563192..7bc41bdf6d 100644
--- a/tests/js/spec/components/qrcode.spec.jsx
+++ b/tests/js/spec/components/qrcode.spec.jsx
@@ -1,5 +1,5 @@
 import React from 'react';
-import {shallow} from 'enzyme';
+import {shallow} from 'sentry-test/enzyme';
 import Qrcode from 'app/components/qrcode';
 
 describe('Qrcode', function() {
diff --git a/tests/js/spec/components/queryCount.spec.js b/tests/js/spec/components/queryCount.spec.js
index fb6f7c1e84..4c88db7010 100644
--- a/tests/js/spec/components/queryCount.spec.js
+++ b/tests/js/spec/components/queryCount.spec.js
@@ -1,5 +1,5 @@
 import React from 'react';
-import {shallow} from 'enzyme';
+import {shallow} from 'sentry-test/enzyme';
 import QueryCount from 'app/components/queryCount';
 
 describe('QueryCount', function() {
diff --git a/tests/js/spec/components/rangeSlider.spec.jsx b/tests/js/spec/components/rangeSlider.spec.jsx
index 7b56954633..5876ec3739 100644
--- a/tests/js/spec/components/rangeSlider.spec.jsx
+++ b/tests/js/spec/components/rangeSlider.spec.jsx
@@ -1,5 +1,5 @@
 import React from 'react';
-import {mount, shallow} from 'enzyme';
+import {mount, shallow} from 'sentry-test/enzyme';
 import RangeSlider from 'app/views/settings/components/forms/controls/rangeSlider';
 
 describe('RangeSlider', function() {
diff --git a/tests/js/spec/components/repositoryRow.spec.jsx b/tests/js/spec/components/repositoryRow.spec.jsx
index ed053d3836..38c7442e7b 100644
--- a/tests/js/spec/components/repositoryRow.spec.jsx
+++ b/tests/js/spec/components/repositoryRow.spec.jsx
@@ -1,7 +1,7 @@
 import React from 'react';
 
 import {Client} from 'app/api';
-import {mount} from 'enzyme';
+import {mountWithTheme} from 'sentry-test/enzyme';
 import RepositoryRow from 'app/components/repositoryRow';
 
 describe('RepositoryRow', function() {
@@ -22,7 +22,7 @@ describe('RepositoryRow', function() {
     const routerContext = TestStubs.routerContext([{organization}]);
 
     it('displays provider information', function() {
-      const wrapper = mount(
+      const wrapper = mountWithTheme(
         <RepositoryRow repository={repository} api={api} orgId={organization.slug} />,
         routerContext
       );
@@ -37,7 +37,7 @@ describe('RepositoryRow', function() {
     });
 
     it('displays cancel pending button', function() {
-      const wrapper = mount(
+      const wrapper = mountWithTheme(
         <RepositoryRow repository={pendingRepo} api={api} orgId={organization.slug} />,
         routerContext
       );
@@ -60,7 +60,7 @@ describe('RepositoryRow', function() {
     const routerContext = TestStubs.routerContext([{organization}]);
 
     it('displays disabled trash', function() {
-      const wrapper = mount(
+      const wrapper = mountWithTheme(
         <RepositoryRow repository={repository} api={api} orgId={organization.slug} />,
         routerContext
       );
@@ -71,7 +71,7 @@ describe('RepositoryRow', function() {
     });
 
     it('displays disabled cancel', function() {
-      const wrapper = mount(
+      const wrapper = mountWithTheme(
         <RepositoryRow repository={pendingRepo} api={api} orgId={organization.slug} />,
         routerContext
       );
@@ -97,7 +97,7 @@ describe('RepositoryRow', function() {
         body: {},
       });
 
-      const wrapper = mount(
+      const wrapper = mountWithTheme(
         <RepositoryRow repository={repository} api={api} orgId={organization.slug} />,
         routerContext
       );
@@ -126,7 +126,7 @@ describe('RepositoryRow', function() {
         body: {},
       });
 
-      const wrapper = mount(
+      const wrapper = mountWithTheme(
         <RepositoryRow repository={pendingRepo} api={api} orgId={organization.slug} />,
         routerContext
       );
diff --git a/tests/js/spec/components/resolutionBox.spec.jsx b/tests/js/spec/components/resolutionBox.spec.jsx
index f98df75f9d..28345d6ac9 100644
--- a/tests/js/spec/components/resolutionBox.spec.jsx
+++ b/tests/js/spec/components/resolutionBox.spec.jsx
@@ -1,5 +1,5 @@
 import React from 'react';
-import {shallow} from 'enzyme';
+import {shallow} from 'sentry-test/enzyme';
 
 import ResolutionBox from 'app/components/resolutionBox';
 
diff --git a/tests/js/spec/components/returnButton.spec.jsx b/tests/js/spec/components/returnButton.spec.jsx
index 7d254f516f..ed0b007517 100644
--- a/tests/js/spec/components/returnButton.spec.jsx
+++ b/tests/js/spec/components/returnButton.spec.jsx
@@ -1,5 +1,5 @@
 import React from 'react';
-import {shallow} from 'enzyme';
+import {shallow} from 'sentry-test/enzyme';
 import ReturnButton from 'app/views/settings/components/forms/returnButton';
 
 describe('returnButton', function() {
diff --git a/tests/js/spec/components/scoreBar.spec.jsx b/tests/js/spec/components/scoreBar.spec.jsx
index 38080d387f..3f5389083a 100644
--- a/tests/js/spec/components/scoreBar.spec.jsx
+++ b/tests/js/spec/components/scoreBar.spec.jsx
@@ -1,5 +1,5 @@
 import React from 'react';
-import {shallow} from 'enzyme';
+import {shallow} from 'sentry-test/enzyme';
 import ScoreBar from 'app/components/scoreBar';
 
 describe('ScoreBar', function() {
diff --git a/tests/js/spec/components/search/sources/apiSource.spec.jsx b/tests/js/spec/components/search/sources/apiSource.spec.jsx
index 8aab6925c1..dffb68a7e0 100644
--- a/tests/js/spec/components/search/sources/apiSource.spec.jsx
+++ b/tests/js/spec/components/search/sources/apiSource.spec.jsx
@@ -1,5 +1,5 @@
 import React from 'react';
-import {mount} from 'enzyme';
+import {mount} from 'sentry-test/enzyme';
 
 import {ApiSource} from 'app/components/search/sources/apiSource';
 
diff --git a/tests/js/spec/components/search/sources/formSource.spec.jsx b/tests/js/spec/components/search/sources/formSource.spec.jsx
index 6e6cb29331..ff1550c784 100644
--- a/tests/js/spec/components/search/sources/formSource.spec.jsx
+++ b/tests/js/spec/components/search/sources/formSource.spec.jsx
@@ -1,5 +1,5 @@
 import React from 'react';
-import {mount} from 'enzyme';
+import {mount} from 'sentry-test/enzyme';
 
 import FormSource from 'app/components/search/sources/formSource';
 import FormSearchActions from 'app/actions/formSearchActions';
diff --git a/tests/js/spec/components/search/sources/routeSource.spec.jsx b/tests/js/spec/components/search/sources/routeSource.spec.jsx
index 0c78655c7c..11dccadcb2 100644
--- a/tests/js/spec/components/search/sources/routeSource.spec.jsx
+++ b/tests/js/spec/components/search/sources/routeSource.spec.jsx
@@ -1,5 +1,5 @@
 import React from 'react';
-import {mount} from 'enzyme';
+import {mount} from 'sentry-test/enzyme';
 
 import {RouteSource} from 'app/components/search/sources/routeSource';
 
diff --git a/tests/js/spec/components/seenByList.spec.jsx b/tests/js/spec/components/seenByList.spec.jsx
index fc90d5fa8d..9b8ed0633c 100644
--- a/tests/js/spec/components/seenByList.spec.jsx
+++ b/tests/js/spec/components/seenByList.spec.jsx
@@ -1,6 +1,6 @@
 import React from 'react';
 
-import {mount} from 'enzyme';
+import {mount} from 'sentry-test/enzyme';
 import ConfigStore from 'app/stores/configStore';
 import SeenByList from 'app/components/seenByList';
 
diff --git a/tests/js/spec/components/settingsBreadcrumbDropdown.spec.jsx b/tests/js/spec/components/settingsBreadcrumbDropdown.spec.jsx
index fbcb8c5a10..d086a859c1 100644
--- a/tests/js/spec/components/settingsBreadcrumbDropdown.spec.jsx
+++ b/tests/js/spec/components/settingsBreadcrumbDropdown.spec.jsx
@@ -1,5 +1,5 @@
 import React from 'react';
-import {mount} from 'enzyme';
+import {mountWithTheme} from 'sentry-test/enzyme';
 
 import BreadcrumbDropdown from 'app/views/settings/components/settingsBreadcrumb/breadcrumbDropdown';
 
@@ -13,7 +13,7 @@ describe('Settings Breadcrumb Dropdown', function() {
   const items = [{value: '1', label: 'foo'}, {value: '2', label: 'bar'}];
 
   beforeEach(function() {
-    wrapper = mount(
+    wrapper = mountWithTheme(
       <BreadcrumbDropdown items={items} name="Test" hasMenu onSelect={selectMock} />,
       TestStubs.routerContext()
     );
diff --git a/tests/js/spec/components/settingsLayout.spec.jsx b/tests/js/spec/components/settingsLayout.spec.jsx
index 91ab17026d..29ab0805df 100644
--- a/tests/js/spec/components/settingsLayout.spec.jsx
+++ b/tests/js/spec/components/settingsLayout.spec.jsx
@@ -1,5 +1,5 @@
 import React from 'react';
-import {shallow} from 'enzyme';
+import {shallow} from 'sentry-test/enzyme';
 
 import {Client} from 'app/api';
 import SettingsLayout from 'app/views/settings/components/settingsLayout';
diff --git a/tests/js/spec/components/shareIssue.spec.jsx b/tests/js/spec/components/shareIssue.spec.jsx
index 7832f29b80..844240db2c 100644
--- a/tests/js/spec/components/shareIssue.spec.jsx
+++ b/tests/js/spec/components/shareIssue.spec.jsx
@@ -1,5 +1,5 @@
 import React from 'react';
-import {shallow} from 'enzyme';
+import {shallow} from 'sentry-test/enzyme';
 import ShareIssue from 'app/components/shareIssue';
 
 describe('ShareIssue', function() {
diff --git a/tests/js/spec/components/sidebar/discover2Item.spec.jsx b/tests/js/spec/components/sidebar/discover2Item.spec.jsx
index ea15f7ccad..da14512395 100644
--- a/tests/js/spec/components/sidebar/discover2Item.spec.jsx
+++ b/tests/js/spec/components/sidebar/discover2Item.spec.jsx
@@ -1,5 +1,5 @@
 import React from 'react';
-import {mount} from 'enzyme';
+import {mountWithTheme} from 'sentry-test/enzyme';
 import {browserHistory} from 'react-router';
 
 import {Client} from 'app/api';
@@ -7,7 +7,7 @@ import Discover2Item from 'app/components/sidebar/discover2Item';
 import DiscoverSavedQueriesStore from 'app/stores/discoverSavedQueriesStore';
 
 const makeWrapper = props =>
-  mount(
+  mountWithTheme(
     <Discover2Item {...props} label="Discover" icon="icon-search" />,
     TestStubs.routerContext()
   );
diff --git a/tests/js/spec/components/sidebar/index.spec.jsx b/tests/js/spec/components/sidebar/index.spec.jsx
index 446b338f88..b90bab83f4 100644
--- a/tests/js/spec/components/sidebar/index.spec.jsx
+++ b/tests/js/spec/components/sidebar/index.spec.jsx
@@ -1,6 +1,6 @@
 import React from 'react';
 
-import {mount, shallow} from 'enzyme';
+import {mountWithTheme, shallow} from 'sentry-test/enzyme';
 import ServiceIncidentStore from 'app/stores/serviceIncidentStore';
 import ConfigStore from 'app/stores/configStore';
 import SidebarContainer, {Sidebar} from 'app/components/sidebar';
@@ -13,7 +13,7 @@ describe('Sidebar', function() {
   const apiMocks = {};
 
   const createWrapper = props =>
-    mount(
+    mountWithTheme(
       <Sidebar
         organization={organization}
         user={user}
@@ -63,7 +63,7 @@ describe('Sidebar', function() {
   });
 
   it('can toggle collapsed state', async function() {
-    wrapper = mount(
+    wrapper = mountWithTheme(
       <SidebarContainer organization={organization} user={user} router={router} />,
       routerContext
     );
@@ -86,7 +86,7 @@ describe('Sidebar', function() {
   });
 
   it('can have onboarding feature', async function() {
-    wrapper = mount(
+    wrapper = mountWithTheme(
       <SidebarContainer
         organization={{...organization, features: ['onboarding']}}
         user={user}
diff --git a/tests/js/spec/components/sidebar/switchOrganization.spec.jsx b/tests/js/spec/components/sidebar/switchOrganization.spec.jsx
index 5866c1b438..9ff0eaa223 100644
--- a/tests/js/spec/components/sidebar/switchOrganization.spec.jsx
+++ b/tests/js/spec/components/sidebar/switchOrganization.spec.jsx
@@ -1,6 +1,6 @@
 import React from 'react';
 
-import {mount} from 'enzyme';
+import {mountWithTheme} from 'sentry-test/enzyme';
 import {SwitchOrganization} from 'app/components/sidebar/sidebarDropdown/switchOrganization';
 
 describe('SwitchOrganization', function() {
@@ -9,7 +9,7 @@ describe('SwitchOrganization', function() {
 
   it('can list organizations', function() {
     jest.useFakeTimers();
-    const wrapper = mount(
+    const wrapper = mountWithTheme(
       <SwitchOrganization
         organizations={[organization, TestStubs.Organization({slug: 'org2'})]}
       />,
@@ -26,7 +26,7 @@ describe('SwitchOrganization', function() {
 
   it('shows "Create an Org" if they have permission', function() {
     jest.useFakeTimers();
-    const wrapper = mount(
+    const wrapper = mountWithTheme(
       <SwitchOrganization
         organizations={[organization, TestStubs.Organization({slug: 'org2'})]}
         canCreateOrganization
@@ -45,7 +45,7 @@ describe('SwitchOrganization', function() {
 
   it('does not have "Create an Org" if they do not have permission', function() {
     jest.useFakeTimers();
-    const wrapper = mount(
+    const wrapper = mountWithTheme(
       <SwitchOrganization
         organizations={[organization, TestStubs.Organization({slug: 'org2'})]}
         canCreateOrganization={false}
diff --git a/tests/js/spec/components/similarScoreCard.spec.jsx b/tests/js/spec/components/similarScoreCard.spec.jsx
index 670ac58d3c..19f2d94fc3 100644
--- a/tests/js/spec/components/similarScoreCard.spec.jsx
+++ b/tests/js/spec/components/similarScoreCard.spec.jsx
@@ -1,5 +1,5 @@
 import React from 'react';
-import {shallow} from 'enzyme';
+import {shallow} from 'sentry-test/enzyme';
 import SimilarScoreCard from 'app/components/similarScoreCard';
 
 describe('SimilarScoreCard', function() {
diff --git a/tests/js/spec/components/similarSpectrum.spec.jsx b/tests/js/spec/components/similarSpectrum.spec.jsx
index 7564435ade..d967cfab95 100644
--- a/tests/js/spec/components/similarSpectrum.spec.jsx
+++ b/tests/js/spec/components/similarSpectrum.spec.jsx
@@ -1,5 +1,5 @@
 import React from 'react';
-import {shallow} from 'enzyme';
+import {shallow} from 'sentry-test/enzyme';
 import SimilarSpectrum from 'app/components/similarSpectrum';
 
 describe('SimilarSpectrum', function() {
diff --git a/tests/js/spec/components/smartSearchBar.spec.jsx b/tests/js/spec/components/smartSearchBar.spec.jsx
index c5b6fd6b5f..89a973bfbf 100644
--- a/tests/js/spec/components/smartSearchBar.spec.jsx
+++ b/tests/js/spec/components/smartSearchBar.spec.jsx
@@ -1,5 +1,5 @@
 import React from 'react';
-import {shallow, mount} from 'enzyme';
+import {shallow, mountWithTheme} from 'sentry-test/enzyme';
 
 import {Client} from 'app/api';
 import {SmartSearchBar, addSpace, removeSpace} from 'app/components/smartSearchBar';
@@ -252,7 +252,7 @@ describe('SmartSearchBar', function() {
   describe('onKeyUp()', function() {
     describe('escape', function() {
       it('blurs the input', function() {
-        const wrapper = mount(
+        const wrapper = mountWithTheme(
           <SmartSearchBar organization={organization} supportedTags={supportedTags} />,
           options
         );
@@ -271,7 +271,7 @@ describe('SmartSearchBar', function() {
   describe('render()', function() {
     it('invokes onSearch() when submitting the form', function() {
       const stubbedOnSearch = jest.fn();
-      const wrapper = mount(
+      const wrapper = mountWithTheme(
         <SmartSearchBar
           onSearch={stubbedOnSearch}
           organization={organization}
@@ -296,7 +296,7 @@ describe('SmartSearchBar', function() {
         supportedTags,
         onSearch: jest.fn(),
       };
-      const wrapper = mount(<SmartSearchBar {...props} />, options);
+      const wrapper = mountWithTheme(<SmartSearchBar {...props} />, options);
 
       wrapper.find('button[aria-label="Clear search"]').simulate('click');
 
@@ -306,7 +306,7 @@ describe('SmartSearchBar', function() {
 
     it('invokes onSearch() on submit in hasPinnedSearch mode', function() {
       const stubbedOnSearch = jest.fn();
-      const wrapper = mount(
+      const wrapper = mountWithTheme(
         <SmartSearchBar
           onSearch={stubbedOnSearch}
           organization={organization}
@@ -330,7 +330,7 @@ describe('SmartSearchBar', function() {
       organization,
       supportedTags,
     };
-    const wrapper = mount(<SmartSearchBar {...props} />, options);
+    const wrapper = mountWithTheme(<SmartSearchBar {...props} />, options);
     expect(wrapper.state('query')).toEqual('');
   });
 
@@ -344,7 +344,7 @@ describe('SmartSearchBar', function() {
         organization,
         supportedTags,
       };
-      const searchBar = mount(<SmartSearchBar {...props} />, options).instance();
+      const searchBar = mountWithTheme(<SmartSearchBar {...props} />, options).instance();
       searchBar.updateAutoCompleteItems();
       expect(searchBar.state.searchTerm).toEqual('');
       expect(searchBar.state.searchItems).toEqual([]);
@@ -358,7 +358,7 @@ describe('SmartSearchBar', function() {
         supportedTags,
       };
       jest.useRealTimers();
-      const wrapper = mount(<SmartSearchBar {...props} />, options);
+      const wrapper = mountWithTheme(<SmartSearchBar {...props} />, options);
       const searchBar = wrapper.instance();
       searchBar.updateAutoCompleteItems();
       await tick();
@@ -377,7 +377,7 @@ describe('SmartSearchBar', function() {
         supportedTags,
       };
       jest.useRealTimers();
-      const wrapper = mount(<SmartSearchBar {...props} />, options);
+      const wrapper = mountWithTheme(<SmartSearchBar {...props} />, options);
       const searchBar = wrapper.instance();
       searchBar.updateAutoCompleteItems();
       await tick();
@@ -396,7 +396,7 @@ describe('SmartSearchBar', function() {
         supportedTags,
       };
       jest.useRealTimers();
-      const wrapper = mount(<SmartSearchBar {...props} />, options);
+      const wrapper = mountWithTheme(<SmartSearchBar {...props} />, options);
       const searchBar = wrapper.instance();
       searchBar.getCursorPosition = jest.fn();
       searchBar.getCursorPosition.mockReturnValue(15); // end of line
@@ -416,7 +416,7 @@ describe('SmartSearchBar', function() {
         organization,
         supportedTags,
       };
-      const searchBar = mount(<SmartSearchBar {...props} />, options).instance();
+      const searchBar = mountWithTheme(<SmartSearchBar {...props} />, options).instance();
       searchBar.updateAutoCompleteItems();
       jest.advanceTimersByTime(301);
       expect(environmentTagValuesMock).not.toHaveBeenCalled();
@@ -433,7 +433,7 @@ describe('SmartSearchBar', function() {
         organization,
         supportedTags,
       };
-      const searchBar = mount(
+      const searchBar = mountWithTheme(
         <SmartSearchBar {...props} api={new Client()} />,
         options
       ).instance();
@@ -455,7 +455,7 @@ describe('SmartSearchBar', function() {
         supportedTags,
       };
 
-      const searchBar = mount(
+      const searchBar = mountWithTheme(
         <SmartSearchBar {...props} api={new Client()} />,
         options
       ).instance();
@@ -496,7 +496,7 @@ describe('SmartSearchBar', function() {
     });
 
     it('does not pin when query is empty', async function() {
-      const wrapper = mount(
+      const wrapper = mountWithTheme(
         <SmartSearchBar
           api={new Client()}
           organization={organization}
@@ -514,7 +514,7 @@ describe('SmartSearchBar', function() {
     });
 
     it('adds pins', async function() {
-      const wrapper = mount(
+      const wrapper = mountWithTheme(
         <SmartSearchBar
           api={new Client()}
           organization={organization}
@@ -534,7 +534,7 @@ describe('SmartSearchBar', function() {
 
     it('removes pins', async function() {
       const pinnedSearch = TestStubs.Search({isPinned: true});
-      const wrapper = mount(
+      const wrapper = mountWithTheme(
         <SmartSearchBar
           api={new Client()}
           organization={organization}
diff --git a/tests/js/spec/components/splitDiff.spec.jsx b/tests/js/spec/components/splitDiff.spec.jsx
index 2cf4395beb..f07d948666 100644
--- a/tests/js/spec/components/splitDiff.spec.jsx
+++ b/tests/js/spec/components/splitDiff.spec.jsx
@@ -1,5 +1,5 @@
 import React from 'react';
-import {shallow} from 'enzyme';
+import {shallow} from 'sentry-test/enzyme';
 import SplitDiff from 'app/components/splitDiff';
 
 describe('SplitDiff', function() {
diff --git a/tests/js/spec/components/splitLayout.spec.jsx b/tests/js/spec/components/splitLayout.spec.jsx
index cb4f8746db..0dc936f49a 100644
--- a/tests/js/spec/components/splitLayout.spec.jsx
+++ b/tests/js/spec/components/splitLayout.spec.jsx
@@ -1,5 +1,5 @@
 import React from 'react';
-import {shallow} from 'enzyme';
+import {shallow} from 'sentry-test/enzyme';
 import toJson from 'enzyme-to-json';
 import SplitLayout from 'app/components/splitLayout';
 
diff --git a/tests/js/spec/components/spreadLayout.spec.jsx b/tests/js/spec/components/spreadLayout.spec.jsx
index 9e4b8d26fa..1a207bbc6f 100644
--- a/tests/js/spec/components/spreadLayout.spec.jsx
+++ b/tests/js/spec/components/spreadLayout.spec.jsx
@@ -1,5 +1,5 @@
 import React from 'react';
-import {shallow} from 'enzyme';
+import {shallow} from 'sentry-test/enzyme';
 import toJson from 'enzyme-to-json';
 import SpreadLayout from 'app/components/spreadLayout';
 
diff --git a/tests/js/spec/components/stackedBarChart.spec.jsx b/tests/js/spec/components/stackedBarChart.spec.jsx
index cd7b0bfe0a..4330d8bb50 100644
--- a/tests/js/spec/components/stackedBarChart.spec.jsx
+++ b/tests/js/spec/components/stackedBarChart.spec.jsx
@@ -1,5 +1,5 @@
 import React from 'react';
-import {shallow} from 'enzyme';
+import {shallow} from 'sentry-test/enzyme';
 
 import StackedBarChart from 'app/components/stackedBarChart';
 
diff --git a/tests/js/spec/components/stream/processingIssueHint.spec.jsx b/tests/js/spec/components/stream/processingIssueHint.spec.jsx
index da160999ad..ed1dc25112 100644
--- a/tests/js/spec/components/stream/processingIssueHint.spec.jsx
+++ b/tests/js/spec/components/stream/processingIssueHint.spec.jsx
@@ -1,5 +1,5 @@
 import React from 'react';
-import {mount} from 'enzyme';
+import {mount} from 'sentry-test/enzyme';
 
 import ProcessingIssueHint from 'app/components/stream/processingIssueHint';
 
diff --git a/tests/js/spec/components/stream/processingIssueList.spec.jsx b/tests/js/spec/components/stream/processingIssueList.spec.jsx
index ee2567cee3..e20b1fbfb1 100644
--- a/tests/js/spec/components/stream/processingIssueList.spec.jsx
+++ b/tests/js/spec/components/stream/processingIssueList.spec.jsx
@@ -1,5 +1,5 @@
 import React from 'react';
-import {shallow} from 'enzyme';
+import {shallow} from 'sentry-test/enzyme';
 
 import ProcessingIssueList from 'app/components/stream/processingIssueList';
 
diff --git a/tests/js/spec/components/streamGroup.spec.jsx b/tests/js/spec/components/streamGroup.spec.jsx
index d4b77b52e5..36939eace2 100644
--- a/tests/js/spec/components/streamGroup.spec.jsx
+++ b/tests/js/spec/components/streamGroup.spec.jsx
@@ -1,5 +1,5 @@
 import React from 'react';
-import {shallow} from 'enzyme';
+import {shallow} from 'sentry-test/enzyme';
 
 import GroupStore from 'app/stores/groupStore';
 import StreamGroup from 'app/components/stream/group';
diff --git a/tests/js/spec/components/tag.spec.jsx b/tests/js/spec/components/tag.spec.jsx
index ccfd59df9d..079cd91ac4 100644
--- a/tests/js/spec/components/tag.spec.jsx
+++ b/tests/js/spec/components/tag.spec.jsx
@@ -1,5 +1,5 @@
 import React from 'react';
-import {shallow} from 'enzyme';
+import {shallow} from 'sentry-test/enzyme';
 import Tag from 'app/views/settings/components/tag';
 
 describe('Tag', function() {
diff --git a/tests/js/spec/components/textCopyInput.spec.jsx b/tests/js/spec/components/textCopyInput.spec.jsx
index 127a0cc268..8fce7e6340 100644
--- a/tests/js/spec/components/textCopyInput.spec.jsx
+++ b/tests/js/spec/components/textCopyInput.spec.jsx
@@ -1,5 +1,5 @@
 import React from 'react';
-import {shallow} from 'enzyme';
+import {shallow} from 'sentry-test/enzyme';
 import TextCopyInput from 'app/views/settings/components/forms/textCopyInput';
 
 describe('TextCopyInput', function() {
diff --git a/tests/js/spec/components/toggleRawEventData.spec.jsx b/tests/js/spec/components/toggleRawEventData.spec.jsx
index 96b1d3865b..8c8dc23d6c 100644
--- a/tests/js/spec/components/toggleRawEventData.spec.jsx
+++ b/tests/js/spec/components/toggleRawEventData.spec.jsx
@@ -1,5 +1,5 @@
 import React from 'react';
-import {shallow} from 'enzyme';
+import {shallow} from 'sentry-test/enzyme';
 import EventDataSection from 'app/components/events/eventDataSection';
 import KeyValueList from 'app/components/events/interfaces/keyValueList';
 
diff --git a/tests/js/spec/components/toolbar.spec.jsx b/tests/js/spec/components/toolbar.spec.jsx
index f96b2a2574..5b0605bd8d 100644
--- a/tests/js/spec/components/toolbar.spec.jsx
+++ b/tests/js/spec/components/toolbar.spec.jsx
@@ -1,5 +1,5 @@
 import React from 'react';
-import {shallow} from 'enzyme';
+import {shallow} from 'sentry-test/enzyme';
 import Toolbar from 'app/components/toolbar';
 
 describe('Toolbar', function() {
diff --git a/tests/js/spec/components/toolbarHeader.spec.jsx b/tests/js/spec/components/toolbarHeader.spec.jsx
index 18ef768c8e..e59bdaf655 100644
--- a/tests/js/spec/components/toolbarHeader.spec.jsx
+++ b/tests/js/spec/components/toolbarHeader.spec.jsx
@@ -1,5 +1,5 @@
 import React from 'react';
-import {shallow} from 'enzyme';
+import {shallow} from 'sentry-test/enzyme';
 import ToolbarHeader from 'app/components/toolbarHeader';
 
 describe('ToolbarHeader', function() {
diff --git a/tests/js/spec/components/tooltip.spec.jsx b/tests/js/spec/components/tooltip.spec.jsx
index 27957fe142..a9b700e33c 100644
--- a/tests/js/spec/components/tooltip.spec.jsx
+++ b/tests/js/spec/components/tooltip.spec.jsx
@@ -1,5 +1,5 @@
 import React from 'react';
-import {mount} from 'enzyme';
+import {mount, mountWithTheme} from 'sentry-test/enzyme';
 import Tooltip from 'app/components/tooltip';
 
 describe('Tooltip', function() {
@@ -13,7 +13,7 @@ describe('Tooltip', function() {
   });
 
   it('updates title', function() {
-    const wrapper = mount(
+    const wrapper = mountWithTheme(
       <Tooltip title="test">
         <span>My Button</span>
       </Tooltip>,
diff --git a/tests/js/spec/utils/projects.spec.jsx b/tests/js/spec/utils/projects.spec.jsx
index b3b0bfc108..a89348ebb5 100644
--- a/tests/js/spec/utils/projects.spec.jsx
+++ b/tests/js/spec/utils/projects.spec.jsx
@@ -1,5 +1,5 @@
 import React from 'react';
-import {mount} from 'enzyme';
+import {mount} from 'sentry-test/enzyme';
 
 import Projects from 'app/utils/projects';
 import ProjectsStore from 'app/stores/projectsStore';
diff --git a/tests/js/spec/utils/withApi.spec.jsx b/tests/js/spec/utils/withApi.spec.jsx
index a6a67899a3..c7c60205f9 100644
--- a/tests/js/spec/utils/withApi.spec.jsx
+++ b/tests/js/spec/utils/withApi.spec.jsx
@@ -1,4 +1,4 @@
-import {mount} from 'enzyme';
+import {mount} from 'sentry-test/enzyme';
 import React from 'react';
 
 import withApi from 'app/utils/withApi';
diff --git a/tests/js/spec/utils/withConfig.spec.jsx b/tests/js/spec/utils/withConfig.spec.jsx
index 9d33873201..175286f12e 100644
--- a/tests/js/spec/utils/withConfig.spec.jsx
+++ b/tests/js/spec/utils/withConfig.spec.jsx
@@ -1,5 +1,5 @@
 import React from 'react';
-import {mount} from 'enzyme';
+import {mount} from 'sentry-test/enzyme';
 
 import ConfigStore from 'app/stores/configStore';
 import withConfig from 'app/utils/withConfig';
diff --git a/tests/js/spec/utils/withDiscoverSavedQueries.spec.jsx b/tests/js/spec/utils/withDiscoverSavedQueries.spec.jsx
index e504f508c8..3072d7724b 100644
--- a/tests/js/spec/utils/withDiscoverSavedQueries.spec.jsx
+++ b/tests/js/spec/utils/withDiscoverSavedQueries.spec.jsx
@@ -1,5 +1,5 @@
 import React from 'react';
-import {mount} from 'enzyme';
+import {mount} from 'sentry-test/enzyme';
 
 import DiscoverSavedQueriesStore from 'app/stores/discoverSavedQueriesStore';
 import withDiscoverSavedQueries from 'app/utils/withDiscoverSavedQueries';
diff --git a/tests/js/spec/utils/withGlobalSelection.spec.jsx b/tests/js/spec/utils/withGlobalSelection.spec.jsx
index e57a723264..f6a1bf90eb 100644
--- a/tests/js/spec/utils/withGlobalSelection.spec.jsx
+++ b/tests/js/spec/utils/withGlobalSelection.spec.jsx
@@ -1,5 +1,5 @@
 import React from 'react';
-import {mount} from 'enzyme';
+import {mount} from 'sentry-test/enzyme';
 
 import GlobalSelectionStore from 'app/stores/globalSelectionStore';
 import withGlobalSelection from 'app/utils/withGlobalSelection';
diff --git a/tests/js/spec/utils/withProjects.spec.jsx b/tests/js/spec/utils/withProjects.spec.jsx
index cef0f3ca22..149311ad32 100644
--- a/tests/js/spec/utils/withProjects.spec.jsx
+++ b/tests/js/spec/utils/withProjects.spec.jsx
@@ -1,5 +1,5 @@
 import React from 'react';
-import {mount} from 'enzyme';
+import {mount} from 'sentry-test/enzyme';
 
 import ProjectsStore from 'app/stores/projectsStore';
 import withProjects from 'app/utils/withProjects';
diff --git a/tests/js/spec/utils/withSentryAppComponents.spec.jsx b/tests/js/spec/utils/withSentryAppComponents.spec.jsx
index 16e99845c5..cb32b7f787 100644
--- a/tests/js/spec/utils/withSentryAppComponents.spec.jsx
+++ b/tests/js/spec/utils/withSentryAppComponents.spec.jsx
@@ -1,5 +1,5 @@
 import React from 'react';
-import {mount} from 'enzyme';
+import {mount} from 'sentry-test/enzyme';
 
 import SentryAppComponentsStore from 'app/stores/sentryAppComponentsStore';
 import withSentryAppComponents from 'app/utils/withSentryAppComponents';
diff --git a/tests/js/spec/utils/withTeamsForUser.spec.jsx b/tests/js/spec/utils/withTeamsForUser.spec.jsx
index a3225c6c0a..4fd47955d3 100644
--- a/tests/js/spec/utils/withTeamsForUser.spec.jsx
+++ b/tests/js/spec/utils/withTeamsForUser.spec.jsx
@@ -1,5 +1,5 @@
 import React from 'react';
-import {mount} from 'enzyme';
+import {mount} from 'sentry-test/enzyme';
 
 import withTeamsForUser from 'app/utils/withTeamsForUser';
 
diff --git a/tests/js/spec/views/__snapshots__/accountSubscriptions.spec.jsx.snap b/tests/js/spec/views/__snapshots__/accountSubscriptions.spec.jsx.snap
index 0b0a098a32..1d2bd0fb7d 100644
--- a/tests/js/spec/views/__snapshots__/accountSubscriptions.spec.jsx.snap
+++ b/tests/js/spec/views/__snapshots__/accountSubscriptions.spec.jsx.snap
@@ -69,7 +69,7 @@ exports[`AccountSubscriptions renders list and can toggle 1`] = `
                     >
                       <HeaderTitle>
                         <h4
-                          className="css-u1l4am-HeaderTitle eqkydle2"
+                          className="css-1w8ttcn-HeaderTitle eqkydle2"
                         >
                           Subscriptions
                         </h4>
@@ -97,28 +97,28 @@ exports[`AccountSubscriptions renders list and can toggle 1`] = `
         </TextBlock>
         <Panel>
           <Component
-            className="css-1bjezgp-Panel e119nu470"
+            className="css-10qfvek-Panel e119nu470"
           >
             <div
-              className="css-1bjezgp-Panel e119nu470"
+              className="css-10qfvek-Panel e119nu470"
             >
               <div>
                 <PanelHeader>
                   <Component
-                    className="css-m9zvi1-PanelHeader-getPadding e1p8v8nv0"
+                    className="css-7odsll-PanelHeader-getPadding e1p8v8nv0"
                   >
                     <Flex
                       align="center"
-                      className="css-m9zvi1-PanelHeader-getPadding e1p8v8nv0"
+                      className="css-7odsll-PanelHeader-getPadding e1p8v8nv0"
                       justify="space-between"
                     >
                       <Base
                         align="center"
-                        className="e1p8v8nv0 css-sniutd-PanelHeader-getPadding"
+                        className="e1p8v8nv0 css-1fivf9w-PanelHeader-getPadding"
                         justify="space-between"
                       >
                         <div
-                          className="e1p8v8nv0 css-sniutd-PanelHeader-getPadding"
+                          className="e1p8v8nv0 css-1fivf9w-PanelHeader-getPadding"
                           is={null}
                         >
                           Subscription
@@ -142,11 +142,11 @@ exports[`AccountSubscriptions renders list and can toggle 1`] = `
                     >
                       <Base
                         align="center"
-                        className="css-xfqgz4-PanelItem eo8n7lk0"
+                        className="css-93wv0u-PanelItem eo8n7lk0"
                         p={2}
                       >
                         <div
-                          className="css-xfqgz4-PanelItem eo8n7lk0"
+                          className="css-93wv0u-PanelItem eo8n7lk0"
                           is={null}
                         >
                           <Box
@@ -171,14 +171,14 @@ exports[`AccountSubscriptions renders list and can toggle 1`] = `
                                 </SubscriptionName>
                                 <Description>
                                   <div
-                                    className="css-781ki1-Description er83abj1"
+                                    className="css-378hu7-Description er83abj1"
                                   >
                                     Everything you need to know about Sentry features, integrations, partnerships, and launches.
                                   </div>
                                 </Description>
                                 <SubscribedDescription>
                                   <div
-                                    className="css-19frbfu-Description-SubscribedDescription er83abj2"
+                                    className="css-126itr8-Description-SubscribedDescription er83abj2"
                                   >
                                     <div>
                                       test@sentry.io
@@ -223,7 +223,7 @@ exports[`AccountSubscriptions renders list and can toggle 1`] = `
                                   >
                                     <button
                                       aria-checked={true}
-                                      className="css-qiticg-SwitchButton e1wgeblw0"
+                                      className="css-fgzayp-SwitchButton e1wgeblw0"
                                       data-test-id="switch"
                                       onClick={[Function]}
                                       role="checkbox"
@@ -235,7 +235,7 @@ exports[`AccountSubscriptions renders list and can toggle 1`] = `
                                         size="lg"
                                       >
                                         <span
-                                          className="css-s79gh4-Toggle e1wgeblw1"
+                                          className="css-n9hg2w-Toggle e1wgeblw1"
                                           size="lg"
                                         />
                                       </Toggle>
@@ -255,11 +255,11 @@ exports[`AccountSubscriptions renders list and can toggle 1`] = `
                     >
                       <Base
                         align="center"
-                        className="css-xfqgz4-PanelItem eo8n7lk0"
+                        className="css-93wv0u-PanelItem eo8n7lk0"
                         p={2}
                       >
                         <div
-                          className="css-xfqgz4-PanelItem eo8n7lk0"
+                          className="css-93wv0u-PanelItem eo8n7lk0"
                           is={null}
                         >
                           <Box
@@ -284,14 +284,14 @@ exports[`AccountSubscriptions renders list and can toggle 1`] = `
                                 </SubscriptionName>
                                 <Description>
                                   <div
-                                    className="css-781ki1-Description er83abj1"
+                                    className="css-378hu7-Description er83abj1"
                                   >
                                     Our monthly update on what's new with Sentry and the community.
                                   </div>
                                 </Description>
                                 <SubscribedDescription>
                                   <div
-                                    className="css-19frbfu-Description-SubscribedDescription er83abj2"
+                                    className="css-126itr8-Description-SubscribedDescription er83abj2"
                                   >
                                     Not currently subscribed
                                   </div>
@@ -323,7 +323,7 @@ exports[`AccountSubscriptions renders list and can toggle 1`] = `
                                   >
                                     <button
                                       aria-checked={false}
-                                      className="css-qiticg-SwitchButton e1wgeblw0"
+                                      className="css-1vudn4r-SwitchButton e1wgeblw0"
                                       data-test-id="switch"
                                       onClick={[Function]}
                                       role="checkbox"
@@ -335,7 +335,7 @@ exports[`AccountSubscriptions renders list and can toggle 1`] = `
                                         size="lg"
                                       >
                                         <span
-                                          className="css-pa284f-Toggle e1wgeblw1"
+                                          className="css-1uoqc08-Toggle e1wgeblw1"
                                           size="lg"
                                         />
                                       </Toggle>
diff --git a/tests/js/spec/views/__snapshots__/projectDebugFiles.spec.jsx.snap b/tests/js/spec/views/__snapshots__/projectDebugFiles.spec.jsx.snap
index eabf9fb3d1..7aef3ba897 100644
--- a/tests/js/spec/views/__snapshots__/projectDebugFiles.spec.jsx.snap
+++ b/tests/js/spec/views/__snapshots__/projectDebugFiles.spec.jsx.snap
@@ -50,7 +50,7 @@ exports[`ProjectDebugFiles renders 1`] = `
               >
                 <HeaderTitle>
                   <h4
-                    className="css-1w8ttcn-HeaderTitle eqkydle2"
+                    className="css-u1l4am-HeaderTitle eqkydle2"
                   >
                     Debug Information Files
                   </h4>
@@ -82,30 +82,30 @@ exports[`ProjectDebugFiles renders 1`] = `
   </TextBlock>
   <Panel>
     <Component
-      className="css-10qfvek-Panel e119nu470"
+      className="css-1bjezgp-Panel e119nu470"
     >
       <div
-        className="css-10qfvek-Panel e119nu470"
+        className="css-1bjezgp-Panel e119nu470"
       >
         <PanelHeader
           hasButtons={true}
         >
           <Component
-            className="css-1m2bast-PanelHeader-getPadding e1p8v8nv0"
+            className="css-vsngva-PanelHeader-getPadding e1p8v8nv0"
             hasButtons={true}
           >
             <Flex
               align="center"
-              className="css-1m2bast-PanelHeader-getPadding e1p8v8nv0"
+              className="css-vsngva-PanelHeader-getPadding e1p8v8nv0"
               justify="space-between"
             >
               <Base
                 align="center"
-                className="e1p8v8nv0 css-yowjp-PanelHeader-getPadding"
+                className="e1p8v8nv0 css-qun9mk-PanelHeader-getPadding"
                 justify="space-between"
               >
                 <div
-                  className="e1p8v8nv0 css-yowjp-PanelHeader-getPadding"
+                  className="e1p8v8nv0 css-qun9mk-PanelHeader-getPadding"
                   is={null}
                 >
                   <Box
@@ -218,7 +218,7 @@ exports[`ProjectDebugFiles renders 1`] = `
                                   value=""
                                 >
                                   <input
-                                    className="search css-1b7nva7-Input-inputStyles e1xej46s0"
+                                    className="search css-1bw1438-Input-inputStyles e1xej46s0"
                                     onChange={[Function]}
                                     placeholder="Search DIFs"
                                     value=""
@@ -259,22 +259,22 @@ exports[`ProjectDebugFiles renders 1`] = `
                     src="icon-circle-exclamation"
                   >
                     <Component
-                      className="css-1j03cl-HeroIcon e1h7wyrq0"
+                      className="css-gwydcl-HeroIcon e1h7wyrq0"
                       size="54"
                       src="icon-circle-exclamation"
                     >
                       <InlineSvg
-                        className="css-1j03cl-HeroIcon e1h7wyrq0"
+                        className="css-gwydcl-HeroIcon e1h7wyrq0"
                         size="54"
                         src="icon-circle-exclamation"
                       >
                         <ForwardRef
-                          className="e1h7wyrq0 css-16jcd98-InlineSvg-HeroIcon enyz4ql0"
+                          className="e1h7wyrq0 css-192qau-InlineSvg-HeroIcon enyz4ql0"
                           size="54"
                           src="icon-circle-exclamation"
                         >
                           <svg
-                            className="e1h7wyrq0 css-16jcd98-InlineSvg-HeroIcon enyz4ql0"
+                            className="e1h7wyrq0 css-192qau-InlineSvg-HeroIcon enyz4ql0"
                             height="54"
                             viewBox={Object {}}
                             width="54"
diff --git a/tests/js/spec/views/acceptOrganizationInvite.spec.jsx b/tests/js/spec/views/acceptOrganizationInvite.spec.jsx
index 452c099850..76e469f11e 100644
--- a/tests/js/spec/views/acceptOrganizationInvite.spec.jsx
+++ b/tests/js/spec/views/acceptOrganizationInvite.spec.jsx
@@ -1,5 +1,5 @@
 import {browserHistory} from 'react-router';
-import {mount} from 'enzyme';
+import {mountWithTheme} from 'sentry-test/enzyme';
 import {logout} from 'app/actionCreators/account';
 import React from 'react';
 
@@ -24,7 +24,7 @@ describe('AcceptOrganizationInvite', function() {
       existingMember: false,
     });
 
-    const wrapper = mount(
+    const wrapper = mountWithTheme(
       <AcceptOrganizationInvite params={{memberId: '1', token: 'abc'}} />,
       TestStubs.routerContext()
     );
@@ -56,7 +56,7 @@ describe('AcceptOrganizationInvite', function() {
       existingMember: false,
     });
 
-    const wrapper = mount(
+    const wrapper = mountWithTheme(
       <AcceptOrganizationInvite params={{memberId: '1', token: 'abc'}} />,
       TestStubs.routerContext()
     );
@@ -76,7 +76,7 @@ describe('AcceptOrganizationInvite', function() {
       existingMember: false,
     });
 
-    const wrapper = mount(
+    const wrapper = mountWithTheme(
       <AcceptOrganizationInvite params={{memberId: '1', token: 'abc'}} />,
       TestStubs.routerContext()
     );
@@ -99,7 +99,7 @@ describe('AcceptOrganizationInvite', function() {
       existingMember: true,
     });
 
-    const wrapper = mount(
+    const wrapper = mountWithTheme(
       <AcceptOrganizationInvite params={{memberId: '1', token: 'abc'}} />,
       TestStubs.routerContext()
     );
@@ -127,7 +127,7 @@ describe('AcceptOrganizationInvite', function() {
       existingMember: false,
     });
 
-    const wrapper = mount(
+    const wrapper = mountWithTheme(
       <AcceptOrganizationInvite params={{memberId: '1', token: 'abc'}} />,
       TestStubs.routerContext()
     );
diff --git a/tests/js/spec/views/acceptProjectTransfer.spec.jsx b/tests/js/spec/views/acceptProjectTransfer.spec.jsx
index 0223e8a7b0..6c9a3b5e15 100644
--- a/tests/js/spec/views/acceptProjectTransfer.spec.jsx
+++ b/tests/js/spec/views/acceptProjectTransfer.spec.jsx
@@ -1,6 +1,6 @@
 import React from 'react';
 
-import {mount} from 'enzyme';
+import {mountWithTheme} from 'sentry-test/enzyme';
 import AcceptProjectTransfer from 'app/views/acceptProjectTransfer';
 
 jest.mock('jquery');
@@ -29,7 +29,7 @@ describe('AcceptProjectTransfer', function() {
   });
 
   it('renders', function() {
-    mount(
+    mountWithTheme(
       <AcceptProjectTransfer
         location={{
           pathame: 'endpoint',
@@ -43,7 +43,7 @@ describe('AcceptProjectTransfer', function() {
   });
 
   it('submits', function() {
-    const wrapper = mount(
+    const wrapper = mountWithTheme(
       <AcceptProjectTransfer
         location={{
           pathame: 'endpoint',
diff --git a/tests/js/spec/views/accountAuthorization.spec.jsx b/tests/js/spec/views/accountAuthorization.spec.jsx
index f17ba7eb53..001ca99449 100644
--- a/tests/js/spec/views/accountAuthorization.spec.jsx
+++ b/tests/js/spec/views/accountAuthorization.spec.jsx
@@ -2,7 +2,7 @@ import PropTypes from 'prop-types';
 import React from 'react';
 
 import {Client} from 'app/api';
-import {shallow} from 'enzyme';
+import {shallow} from 'sentry-test/enzyme';
 import AccountAuthorizations from 'app/views/settings/account/accountAuthorizations';
 
 describe('AccountAuthorizations', function() {
diff --git a/tests/js/spec/views/accountClose.spec.jsx b/tests/js/spec/views/accountClose.spec.jsx
index dc79b659d3..6c6394a611 100644
--- a/tests/js/spec/views/accountClose.spec.jsx
+++ b/tests/js/spec/views/accountClose.spec.jsx
@@ -1,5 +1,5 @@
 import React from 'react';
-import {mount} from 'enzyme';
+import {mountWithTheme} from 'sentry-test/enzyme';
 
 import AccountClose from 'app/views/settings/account/accountClose';
 
@@ -32,7 +32,7 @@ describe('AccountClose', function() {
   });
 
   it('lists all orgs user is an owner of', function() {
-    const wrapper = mount(<AccountClose />, TestStubs.routerContext());
+    const wrapper = mountWithTheme(<AccountClose />, TestStubs.routerContext());
 
     // Input for single owner org
     expect(
diff --git a/tests/js/spec/views/accountDetail.spec.jsx b/tests/js/spec/views/accountDetail.spec.jsx
index b477f4af88..750da7b5c4 100644
--- a/tests/js/spec/views/accountDetail.spec.jsx
+++ b/tests/js/spec/views/accountDetail.spec.jsx
@@ -1,6 +1,6 @@
 import React from 'react';
 
-import {mount} from 'enzyme';
+import {mountWithTheme} from 'sentry-test/enzyme';
 import AccountDetails from 'app/views/settings/account/accountDetails';
 
 jest.mock('jquery');
@@ -22,7 +22,10 @@ describe('AccountDetails', function() {
   });
 
   it('renders', function() {
-    const wrapper = mount(<AccountDetails location={{}} />, TestStubs.routerContext());
+    const wrapper = mountWithTheme(
+      <AccountDetails location={{}} />,
+      TestStubs.routerContext()
+    );
 
     expect(wrapper.find('input[name="name"]')).toHaveLength(1);
 
@@ -35,7 +38,10 @@ describe('AccountDetails', function() {
 
   it('has username field if it is different than email', function() {
     mockUserDetails({username: 'different@example.com'});
-    const wrapper = mount(<AccountDetails location={{}} />, TestStubs.routerContext());
+    const wrapper = mountWithTheme(
+      <AccountDetails location={{}} />,
+      TestStubs.routerContext()
+    );
 
     expect(wrapper.find('input[name="username"]')).toHaveLength(1);
     expect(wrapper.find('input[name="username"]').prop('disabled')).toBe(false);
@@ -44,7 +50,10 @@ describe('AccountDetails', function() {
   describe('Managed User', function() {
     it('does not have password fields', function() {
       mockUserDetails({isManaged: true});
-      const wrapper = mount(<AccountDetails location={{}} />, TestStubs.routerContext());
+      const wrapper = mountWithTheme(
+        <AccountDetails location={{}} />,
+        TestStubs.routerContext()
+      );
 
       expect(wrapper.find('input[name="name"]')).toHaveLength(1);
       expect(wrapper.find('input[name="password"]')).toHaveLength(0);
@@ -53,7 +62,10 @@ describe('AccountDetails', function() {
 
     it('has disabled username field if it is different than email', function() {
       mockUserDetails({isManaged: true, username: 'different@example.com'});
-      const wrapper = mount(<AccountDetails location={{}} />, TestStubs.routerContext());
+      const wrapper = mountWithTheme(
+        <AccountDetails location={{}} />,
+        TestStubs.routerContext()
+      );
 
       expect(wrapper.find('input[name="username"]')).toHaveLength(1);
       expect(wrapper.find('input[name="username"]').prop('disabled')).toBe(true);
diff --git a/tests/js/spec/views/accountEmails.spec.jsx b/tests/js/spec/views/accountEmails.spec.jsx
index 6a7a22ec0c..d4d4da735e 100644
--- a/tests/js/spec/views/accountEmails.spec.jsx
+++ b/tests/js/spec/views/accountEmails.spec.jsx
@@ -1,5 +1,5 @@
 import React from 'react';
-import {mount, shallow} from 'enzyme';
+import {mountWithTheme, shallow} from 'sentry-test/enzyme';
 
 import {Client} from 'app/api';
 import AccountEmails from 'app/views/settings/account/accountEmails';
@@ -30,7 +30,7 @@ describe('AccountEmails', function() {
       statusCode: 200,
     });
 
-    const wrapper = mount(<AccountEmails />, TestStubs.routerContext());
+    const wrapper = mountWithTheme(<AccountEmails />, TestStubs.routerContext());
 
     expect(mock).not.toHaveBeenCalled();
 
@@ -58,7 +58,7 @@ describe('AccountEmails', function() {
       statusCode: 200,
     });
 
-    const wrapper = mount(<AccountEmails />, TestStubs.routerContext());
+    const wrapper = mountWithTheme(<AccountEmails />, TestStubs.routerContext());
 
     expect(mock).not.toHaveBeenCalled();
 
@@ -86,7 +86,7 @@ describe('AccountEmails', function() {
       statusCode: 200,
     });
 
-    const wrapper = mount(<AccountEmails />, TestStubs.routerContext());
+    const wrapper = mountWithTheme(<AccountEmails />, TestStubs.routerContext());
 
     expect(mock).not.toHaveBeenCalled();
 
@@ -109,7 +109,7 @@ describe('AccountEmails', function() {
       method: 'POST',
       statusCode: 200,
     });
-    const wrapper = mount(<AccountEmails />, TestStubs.routerContext());
+    const wrapper = mountWithTheme(<AccountEmails />, TestStubs.routerContext());
 
     expect(mock).not.toHaveBeenCalled();
 
diff --git a/tests/js/spec/views/accountIdentities.spec.jsx b/tests/js/spec/views/accountIdentities.spec.jsx
index 87f29fb9ab..7985a3fc6a 100644
--- a/tests/js/spec/views/accountIdentities.spec.jsx
+++ b/tests/js/spec/views/accountIdentities.spec.jsx
@@ -1,5 +1,5 @@
 import React from 'react';
-import {shallow, mount} from 'enzyme';
+import {shallow, mountWithTheme} from 'sentry-test/enzyme';
 
 import {Client} from 'app/api';
 import AccountIdentities from 'app/views/settings/account/accountIdentities';
@@ -53,7 +53,7 @@ describe('AccountIdentities', function() {
       ],
     });
 
-    const wrapper = mount(<AccountIdentities />, TestStubs.routerContext());
+    const wrapper = mountWithTheme(<AccountIdentities />, TestStubs.routerContext());
 
     const disconnectRequest = {
       url: `${ENDPOINT}1/`,
diff --git a/tests/js/spec/views/accountNotifications.spec.jsx b/tests/js/spec/views/accountNotifications.spec.jsx
index 73f08f353d..30703e6ce4 100644
--- a/tests/js/spec/views/accountNotifications.spec.jsx
+++ b/tests/js/spec/views/accountNotifications.spec.jsx
@@ -1,6 +1,6 @@
 import React from 'react';
 
-import {mount} from 'enzyme';
+import {mountWithTheme} from 'sentry-test/enzyme';
 import AccountNotifications from 'app/views/settings/account/accountNotifications';
 
 describe('AccountNotifications', function() {
@@ -26,7 +26,7 @@ describe('AccountNotifications', function() {
   });
 
   it('renders with values from API', function() {
-    const wrapper = mount(<AccountNotifications />, TestStubs.routerContext());
+    const wrapper = mountWithTheme(<AccountNotifications />, TestStubs.routerContext());
 
     // "Send Me Project Alerts"
     expect(wrapper.find('Switch[name="subscribeByDefault"]').prop('isActive')).toBe(true);
@@ -53,7 +53,7 @@ describe('AccountNotifications', function() {
   });
 
   it('can change "Deploy Notifications"', function() {
-    const wrapper = mount(<AccountNotifications />, TestStubs.routerContext());
+    const wrapper = mountWithTheme(<AccountNotifications />, TestStubs.routerContext());
     const mock = MockApiClient.addMockResponse({
       url,
       method: 'PUT',
diff --git a/tests/js/spec/views/accountSecurity.spec.jsx b/tests/js/spec/views/accountSecurity.spec.jsx
index 0d284ef8ff..34729d1302 100644
--- a/tests/js/spec/views/accountSecurity.spec.jsx
+++ b/tests/js/spec/views/accountSecurity.spec.jsx
@@ -1,5 +1,5 @@
 import React from 'react';
-import {mount} from 'enzyme';
+import {mountWithTheme} from 'sentry-test/enzyme';
 
 import {Client} from 'app/api';
 import AccountSecurity from 'app/views/settings/account/accountSecurity';
@@ -24,7 +24,7 @@ describe('AccountSecurity', function() {
       body: [],
     });
 
-    const wrapper = mount(
+    const wrapper = mountWithTheme(
       <AccountSecurityWrapper>
         <AccountSecurity />
       </AccountSecurityWrapper>,
@@ -41,7 +41,7 @@ describe('AccountSecurity', function() {
       body: [TestStubs.Authenticators().Totp({configureButton: 'Info'})],
     });
 
-    const wrapper = mount(
+    const wrapper = mountWithTheme(
       <AccountSecurityWrapper>
         <AccountSecurity />
       </AccountSecurityWrapper>,
@@ -83,7 +83,7 @@ describe('AccountSecurity', function() {
 
     expect(deleteMock).not.toHaveBeenCalled();
 
-    const wrapper = mount(
+    const wrapper = mountWithTheme(
       <AccountSecurityWrapper>
         <AccountSecurity />
       </AccountSecurityWrapper>,
@@ -131,7 +131,7 @@ describe('AccountSecurity', function() {
 
     expect(deleteMock).not.toHaveBeenCalled();
 
-    const wrapper = mount(
+    const wrapper = mountWithTheme(
       <AccountSecurityWrapper>
         <AccountSecurity />
       </AccountSecurityWrapper>,
@@ -193,7 +193,7 @@ describe('AccountSecurity', function() {
 
     expect(deleteMock).not.toHaveBeenCalled();
 
-    const wrapper = mount(
+    const wrapper = mountWithTheme(
       <AccountSecurityWrapper>
         <AccountSecurity />
       </AccountSecurityWrapper>,
@@ -218,7 +218,7 @@ describe('AccountSecurity', function() {
       body: [TestStubs.Authenticators().Totp({isEnrolled: false})],
     });
 
-    const wrapper = mount(
+    const wrapper = mountWithTheme(
       <AccountSecurityWrapper>
         <AccountSecurity />
       </AccountSecurityWrapper>,
@@ -244,7 +244,7 @@ describe('AccountSecurity', function() {
       body: [TestStubs.Authenticators().Recovery({isEnrolled: false})],
     });
 
-    const wrapper = mount(
+    const wrapper = mountWithTheme(
       <AccountSecurityWrapper>
         <AccountSecurity />
       </AccountSecurityWrapper>,
@@ -266,7 +266,7 @@ describe('AccountSecurity', function() {
       body: [TestStubs.Authenticators().Recovery({isEnrolled: true})],
     });
 
-    const wrapper = mount(
+    const wrapper = mountWithTheme(
       <AccountSecurityWrapper>
         <AccountSecurity />
       </AccountSecurityWrapper>,
@@ -296,7 +296,7 @@ describe('AccountSecurity', function() {
       method: 'PUT',
     });
 
-    const wrapper = mount(
+    const wrapper = mountWithTheme(
       <AccountSecurityWrapper>
         <AccountSecurity />
       </AccountSecurityWrapper>,
@@ -340,7 +340,7 @@ describe('AccountSecurity', function() {
       method: 'PUT',
     });
 
-    const wrapper = mount(
+    const wrapper = mountWithTheme(
       <AccountSecurityWrapper>
         <AccountSecurity />
       </AccountSecurityWrapper>,
@@ -372,7 +372,7 @@ describe('AccountSecurity', function() {
       status: 204,
     });
 
-    const wrapper = mount(
+    const wrapper = mountWithTheme(
       <AccountSecurityWrapper>
         <AccountSecurity />
       </AccountSecurityWrapper>,
diff --git a/tests/js/spec/views/accountSecurityDetails.spec.jsx b/tests/js/spec/views/accountSecurityDetails.spec.jsx
index ff28bc3a23..8926cb1f57 100644
--- a/tests/js/spec/views/accountSecurityDetails.spec.jsx
+++ b/tests/js/spec/views/accountSecurityDetails.spec.jsx
@@ -1,5 +1,5 @@
 import React from 'react';
-import {mount} from 'enzyme';
+import {mountWithTheme} from 'sentry-test/enzyme';
 
 import {Client} from 'app/api';
 import AccountSecurityDetails from 'app/views/settings/account/accountSecurity/accountSecurityDetails';
@@ -26,7 +26,7 @@ describe('AccountSecurityDetails', function() {
         url: `${ENDPOINT}15/`,
         body: TestStubs.Authenticators().Totp(),
       });
-      wrapper = mount(
+      wrapper = mountWithTheme(
         <AccountSecurityWrapper>
           <AccountSecurityDetails />
         </AccountSecurityWrapper>,
@@ -76,7 +76,7 @@ describe('AccountSecurityDetails', function() {
         method: 'DELETE',
       });
 
-      wrapper = mount(
+      wrapper = mountWithTheme(
         <AccountSecurityWrapper>
           <AccountSecurityDetails />
         </AccountSecurityWrapper>,
@@ -115,7 +115,7 @@ describe('AccountSecurityDetails', function() {
         method: 'DELETE',
       });
 
-      wrapper = mount(
+      wrapper = mountWithTheme(
         <AccountSecurityWrapper>
           <AccountSecurityDetails />
         </AccountSecurityWrapper>,
@@ -152,7 +152,7 @@ describe('AccountSecurityDetails', function() {
         url: `${ENDPOINT}16/`,
         body: TestStubs.Authenticators().Recovery(),
       });
-      wrapper = mount(
+      wrapper = mountWithTheme(
         <AccountSecurityWrapper>
           <AccountSecurityDetails />
         </AccountSecurityWrapper>,
diff --git a/tests/js/spec/views/accountSecurityEnroll.spec.jsx b/tests/js/spec/views/accountSecurityEnroll.spec.jsx
index d40e9024b5..e5fc35c99d 100644
--- a/tests/js/spec/views/accountSecurityEnroll.spec.jsx
+++ b/tests/js/spec/views/accountSecurityEnroll.spec.jsx
@@ -1,5 +1,5 @@
 import React from 'react';
-import {mount} from 'enzyme';
+import {mountWithTheme} from 'sentry-test/enzyme';
 
 import {Client} from 'app/api';
 import AccountSecurityEnroll from 'app/views/settings/account/accountSecurity/accountSecurityEnroll';
@@ -28,7 +28,7 @@ describe('AccountSecurityEnroll', function() {
         url: `${ENDPOINT}${authenticator.authId}/enroll/`,
         body: authenticator,
       });
-      wrapper = mount(
+      wrapper = mountWithTheme(
         <AccountSecurityEnroll />,
         TestStubs.routerContext([
           {
@@ -79,7 +79,7 @@ describe('AccountSecurityEnroll', function() {
       });
 
       const pushMock = jest.fn();
-      wrapper = mount(
+      wrapper = mountWithTheme(
         <AccountSecurityEnroll />,
         TestStubs.routerContext([
           {
diff --git a/tests/js/spec/views/accountSecuritySessionHistory.spec.jsx b/tests/js/spec/views/accountSecuritySessionHistory.spec.jsx
index ab0890ef56..51e7014b2c 100644
--- a/tests/js/spec/views/accountSecuritySessionHistory.spec.jsx
+++ b/tests/js/spec/views/accountSecuritySessionHistory.spec.jsx
@@ -1,5 +1,5 @@
 import React from 'react';
-import {mount} from 'enzyme';
+import {mount} from 'sentry-test/enzyme';
 
 import {Client} from 'app/api';
 import AccountSecuritySessionHistory from 'app/views/settings/account/accountSecurity/accountSecuritySessionHistory';
diff --git a/tests/js/spec/views/accountSubscriptions.spec.jsx b/tests/js/spec/views/accountSubscriptions.spec.jsx
index 94a729d2a2..1afb2abe92 100644
--- a/tests/js/spec/views/accountSubscriptions.spec.jsx
+++ b/tests/js/spec/views/accountSubscriptions.spec.jsx
@@ -1,6 +1,6 @@
 import PropTypes from 'prop-types';
 import React from 'react';
-import {shallow, mount} from 'enzyme';
+import {shallow, mountWithTheme} from 'sentry-test/enzyme';
 
 import {Client} from 'app/api';
 import AccountSubscriptions from 'app/views/settings/account/accountSubscriptions';
@@ -39,7 +39,7 @@ describe('AccountSubscriptions', function() {
       method: 'PUT',
     });
 
-    const wrapper = mount(<AccountSubscriptions />, {
+    const wrapper = mountWithTheme(<AccountSubscriptions />, {
       context: {
         router: TestStubs.router(),
       },
diff --git a/tests/js/spec/views/admin/adminBuffer.spec.jsx b/tests/js/spec/views/admin/adminBuffer.spec.jsx
index fa028ba4c4..9e00fcc00e 100644
--- a/tests/js/spec/views/admin/adminBuffer.spec.jsx
+++ b/tests/js/spec/views/admin/adminBuffer.spec.jsx
@@ -1,5 +1,5 @@
 import React from 'react';
-import {shallow} from 'enzyme';
+import {shallow} from 'sentry-test/enzyme';
 
 import AdminBuffer from 'app/views/admin/adminBuffer';
 
diff --git a/tests/js/spec/views/admin/adminQueue.spec.jsx b/tests/js/spec/views/admin/adminQueue.spec.jsx
index 2d283ba41b..85f28650dd 100644
--- a/tests/js/spec/views/admin/adminQueue.spec.jsx
+++ b/tests/js/spec/views/admin/adminQueue.spec.jsx
@@ -1,5 +1,5 @@
 import React from 'react';
-import {shallow} from 'enzyme';
+import {shallow} from 'sentry-test/enzyme';
 
 import {Client} from 'app/api';
 import AdminQueue from 'app/views/admin/adminQueue';
diff --git a/tests/js/spec/views/admin/adminQuotas.spec.jsx b/tests/js/spec/views/admin/adminQuotas.spec.jsx
index 0360941847..0165233cad 100644
--- a/tests/js/spec/views/admin/adminQuotas.spec.jsx
+++ b/tests/js/spec/views/admin/adminQuotas.spec.jsx
@@ -1,5 +1,5 @@
 import React from 'react';
-import {shallow} from 'enzyme';
+import {shallow} from 'sentry-test/enzyme';
 
 import {Client} from 'app/api';
 import AdminQuotas from 'app/views/admin/adminQuotas';
diff --git a/tests/js/spec/views/admin/adminSettings.spec.jsx b/tests/js/spec/views/admin/adminSettings.spec.jsx
index 0fa6e948aa..3e72de1a95 100644
--- a/tests/js/spec/views/admin/adminSettings.spec.jsx
+++ b/tests/js/spec/views/admin/adminSettings.spec.jsx
@@ -1,5 +1,5 @@
 import React from 'react';
-import {shallow} from 'enzyme';
+import {shallow} from 'sentry-test/enzyme';
 
 import {Client} from 'app/api';
 import AdminSettings from 'app/views/admin/adminSettings';
diff --git a/tests/js/spec/views/apiNewToken.spec.jsx b/tests/js/spec/views/apiNewToken.spec.jsx
index 35dc045a17..21a680e047 100644
--- a/tests/js/spec/views/apiNewToken.spec.jsx
+++ b/tests/js/spec/views/apiNewToken.spec.jsx
@@ -1,5 +1,5 @@
 import React from 'react';
-import {shallow} from 'enzyme';
+import {shallow} from 'sentry-test/enzyme';
 
 import ApiNewToken from 'app/views/apiNewToken';
 
diff --git a/tests/js/spec/views/apiTokenRow.spec.jsx b/tests/js/spec/views/apiTokenRow.spec.jsx
index e753b43099..e983f9674d 100644
--- a/tests/js/spec/views/apiTokenRow.spec.jsx
+++ b/tests/js/spec/views/apiTokenRow.spec.jsx
@@ -1,5 +1,5 @@
 import React from 'react';
-import {shallow, mount} from 'enzyme';
+import {shallow, mountWithTheme} from 'sentry-test/enzyme';
 import ApiTokenRow from 'app/views/settings/account/apiTokenRow';
 
 describe('ApiTokenRow', function() {
@@ -15,7 +15,7 @@ describe('ApiTokenRow', function() {
 
   it('calls onRemove callback when trash can is clicked', function() {
     const cb = jest.fn();
-    const wrapper = mount(
+    const wrapper = mountWithTheme(
       <ApiTokenRow onRemove={cb} token={TestStubs.ApiToken()} />,
       TestStubs.routerContext()
     );
diff --git a/tests/js/spec/views/apiTokens.spec.jsx b/tests/js/spec/views/apiTokens.spec.jsx
index 4183c1a395..ab57243753 100644
--- a/tests/js/spec/views/apiTokens.spec.jsx
+++ b/tests/js/spec/views/apiTokens.spec.jsx
@@ -1,5 +1,5 @@
 import React from 'react';
-import {shallow, mount} from 'enzyme';
+import {shallow, mountWithTheme} from 'sentry-test/enzyme';
 
 import {Client} from 'app/api';
 import ApiTokens from 'app/views/settings/account/apiTokens';
@@ -47,7 +47,7 @@ describe('ApiTokens', function() {
 
     expect(mock).not.toHaveBeenCalled();
 
-    const wrapper = mount(<ApiTokens />, routerContext);
+    const wrapper = mountWithTheme(<ApiTokens />, routerContext);
 
     wrapper.find('.ref-delete-api-token').simulate('click');
 
diff --git a/tests/js/spec/views/app.spec.jsx b/tests/js/spec/views/app.spec.jsx
index 305d5b5406..72492f71bd 100644
--- a/tests/js/spec/views/app.spec.jsx
+++ b/tests/js/spec/views/app.spec.jsx
@@ -1,6 +1,6 @@
 import React from 'react';
 
-import {mount} from 'enzyme';
+import {mount} from 'sentry-test/enzyme';
 import App from 'app/views/app';
 import ConfigStore from 'app/stores/configStore';
 
diff --git a/tests/js/spec/views/auth/login.spec.jsx b/tests/js/spec/views/auth/login.spec.jsx
index 01ac53b1a1..f48f9a9d2e 100644
--- a/tests/js/spec/views/auth/login.spec.jsx
+++ b/tests/js/spec/views/auth/login.spec.jsx
@@ -1,5 +1,5 @@
 import React from 'react';
-import {mount} from 'enzyme';
+import {mount} from 'sentry-test/enzyme';
 
 import Login from 'app/views/auth/login';
 
diff --git a/tests/js/spec/views/auth/loginForm.spec.jsx b/tests/js/spec/views/auth/loginForm.spec.jsx
index ed0fd990f4..ddc2b8812d 100644
--- a/tests/js/spec/views/auth/loginForm.spec.jsx
+++ b/tests/js/spec/views/auth/loginForm.spec.jsx
@@ -1,7 +1,7 @@
 import {browserHistory} from 'react-router';
 import React from 'react';
 
-import {mount} from 'enzyme';
+import {mountWithTheme} from 'sentry-test/enzyme';
 import ConfigStore from 'app/stores/configStore';
 import LoginForm from 'app/views/auth/loginForm';
 
@@ -35,7 +35,10 @@ describe('LoginForm', function() {
 
     const authConfig = {};
 
-    const wrapper = mount(<LoginForm api={api} authConfig={authConfig} />, routerContext);
+    const wrapper = mountWithTheme(
+      <LoginForm api={api} authConfig={authConfig} />,
+      routerContext
+    );
     doLogin(wrapper, mockRequest);
 
     await tick();
@@ -61,7 +64,10 @@ describe('LoginForm', function() {
     });
 
     const authConfig = {};
-    const wrapper = mount(<LoginForm api={api} authConfig={authConfig} />, routerContext);
+    const wrapper = mountWithTheme(
+      <LoginForm api={api} authConfig={authConfig} />,
+      routerContext
+    );
 
     doLogin(wrapper, mockRequest);
 
@@ -77,7 +83,10 @@ describe('LoginForm', function() {
       githubLoginLink: '/githubLogin',
     };
 
-    const wrapper = mount(<LoginForm api={api} authConfig={authConfig} />, routerContext);
+    const wrapper = mountWithTheme(
+      <LoginForm api={api} authConfig={authConfig} />,
+      routerContext
+    );
 
     expect(wrapper.find('ProviderWrapper Button').map(b => b.props().href)).toEqual(
       expect.arrayContaining(['/vstsLogin', '/githubLogin'])
diff --git a/tests/js/spec/views/auth/registerForm.spec.jsx b/tests/js/spec/views/auth/registerForm.spec.jsx
index 386858e772..95abb4cb82 100644
--- a/tests/js/spec/views/auth/registerForm.spec.jsx
+++ b/tests/js/spec/views/auth/registerForm.spec.jsx
@@ -1,7 +1,7 @@
 import {browserHistory} from 'react-router';
 import React from 'react';
 
-import {mount} from 'enzyme';
+import {mount} from 'sentry-test/enzyme';
 import ConfigStore from 'app/stores/configStore';
 import RegisterForm from 'app/views/auth/registerForm';
 
diff --git a/tests/js/spec/views/auth/ssoForm.spec.jsx b/tests/js/spec/views/auth/ssoForm.spec.jsx
index 3af5591d9e..34167f1649 100644
--- a/tests/js/spec/views/auth/ssoForm.spec.jsx
+++ b/tests/js/spec/views/auth/ssoForm.spec.jsx
@@ -1,7 +1,7 @@
 import {browserHistory} from 'react-router';
 import React from 'react';
 
-import {mount} from 'enzyme';
+import {mount} from 'sentry-test/enzyme';
 import SsoForm from 'app/views/auth/ssoForm';
 
 function doSso(wrapper, apiRequest) {
diff --git a/tests/js/spec/views/dashboards/dashboard.spec.jsx b/tests/js/spec/views/dashboards/dashboard.spec.jsx
index 4f247a578f..a668bb896f 100644
--- a/tests/js/spec/views/dashboards/dashboard.spec.jsx
+++ b/tests/js/spec/views/dashboards/dashboard.spec.jsx
@@ -1,8 +1,8 @@
-import {mount} from 'enzyme';
+import {mountWithTheme} from 'sentry-test/enzyme';
 import React from 'react';
 
-import {initializeOrg} from 'app-test/helpers/initializeOrg';
-import {mockRouterPush} from 'app-test/helpers/mockRouterPush';
+import {initializeOrg} from 'sentry-test/initializeOrg';
+import {mockRouterPush} from 'sentry-test/mockRouterPush';
 
 import Dashboard from 'app/views/dashboards/dashboard';
 import OrganizationDashboardContainer from 'app/views/dashboards';
@@ -29,7 +29,7 @@ describe('OrganizationDashboard', function() {
   const org = organization;
 
   const createWrapper = props => {
-    wrapper = mount(
+    wrapper = mountWithTheme(
       <OrganizationDashboardContainer>
         <Dashboard {...props} />
       </OrganizationDashboardContainer>,
diff --git a/tests/js/spec/views/dashboards/discoverQuery.spec.jsx b/tests/js/spec/views/dashboards/discoverQuery.spec.jsx
index 6c94dd76c2..6538d0dc3a 100644
--- a/tests/js/spec/views/dashboards/discoverQuery.spec.jsx
+++ b/tests/js/spec/views/dashboards/discoverQuery.spec.jsx
@@ -1,8 +1,8 @@
-import {mount} from 'enzyme';
+import {mount} from 'sentry-test/enzyme';
 import React from 'react';
 
-import {initializeOrg} from 'app-test/helpers/initializeOrg';
-import {mockRouterPush} from 'app-test/helpers/mockRouterPush';
+import {initializeOrg} from 'sentry-test/initializeOrg';
+import {mockRouterPush} from 'sentry-test/mockRouterPush';
 
 import DiscoverQuery from 'app/views/dashboards/discoverQuery';
 
diff --git a/tests/js/spec/views/dashboards/overviewDashboard.spec.jsx b/tests/js/spec/views/dashboards/overviewDashboard.spec.jsx
index a86474b6ad..de8625a3f5 100644
--- a/tests/js/spec/views/dashboards/overviewDashboard.spec.jsx
+++ b/tests/js/spec/views/dashboards/overviewDashboard.spec.jsx
@@ -1,8 +1,8 @@
 import React from 'react';
 
-import {initializeOrg} from 'app-test/helpers/initializeOrg';
-import {mockRouterPush} from 'app-test/helpers/mockRouterPush';
-import {mount} from 'enzyme';
+import {initializeOrg} from 'sentry-test/initializeOrg';
+import {mockRouterPush} from 'sentry-test/mockRouterPush';
+import {mountWithTheme} from 'sentry-test/enzyme';
 import DashboardsContainer from 'app/views/dashboards';
 import OverviewDashboard from 'app/views/dashboards/overviewDashboard';
 
@@ -29,7 +29,7 @@ describe('OverviewDashboard', function() {
   const org = organization;
 
   const createWrapper = props => {
-    wrapper = mount(
+    wrapper = mountWithTheme(
       <DashboardsContainer>
         <OverviewDashboard params={{orgId: organization.slug}} {...props} />
       </DashboardsContainer>,
diff --git a/tests/js/spec/views/dashboards/widgetChart.spec.jsx b/tests/js/spec/views/dashboards/widgetChart.spec.jsx
index 4e6945e52e..86ca01d277 100644
--- a/tests/js/spec/views/dashboards/widgetChart.spec.jsx
+++ b/tests/js/spec/views/dashboards/widgetChart.spec.jsx
@@ -1,7 +1,7 @@
-import {mount} from 'enzyme';
+import {mount} from 'sentry-test/enzyme';
 import React from 'react';
 
-import {initializeOrg} from 'app-test/helpers/initializeOrg';
+import {initializeOrg} from 'sentry-test/initializeOrg';
 
 import WidgetChart from 'app/views/dashboards/widgetChart';
 
diff --git a/tests/js/spec/views/discover/aggregations/aggregation.spec.jsx b/tests/js/spec/views/discover/aggregations/aggregation.spec.jsx
index 3987270e62..9d4d427b88 100644
--- a/tests/js/spec/views/discover/aggregations/aggregation.spec.jsx
+++ b/tests/js/spec/views/discover/aggregations/aggregation.spec.jsx
@@ -1,5 +1,5 @@
 import React from 'react';
-import {mount} from 'enzyme';
+import {mountWithTheme} from 'sentry-test/enzyme';
 
 import Aggregation from 'app/views/discover/aggregations/aggregation';
 
@@ -24,7 +24,7 @@ describe('Aggregation', function() {
       ];
 
       data.forEach(async function(item) {
-        const wrapper = mount(
+        const wrapper = mountWithTheme(
           <Aggregation value={item.value} onChange={jest.fn()} columns={[]} />,
           TestStubs.routerContext()
         );
@@ -41,7 +41,7 @@ describe('Aggregation', function() {
         {name: 'col2', type: 'number'},
         {name: 'error.type', type: 'string'},
       ];
-      wrapper = mount(
+      wrapper = mountWithTheme(
         <Aggregation value={[null, null, null]} onChange={jest.fn()} columns={cols} />,
         TestStubs.routerContext()
       );
@@ -77,7 +77,7 @@ describe('Aggregation', function() {
       const cols = [{name: 'col1', type: 'string'}, {name: 'col2', type: 'number'}];
       focusSpy = jest.spyOn(Aggregation.prototype, 'focus');
 
-      wrapper = mount(
+      wrapper = mountWithTheme(
         <Aggregation value={[null, null, null]} onChange={jest.fn()} columns={cols} />,
         TestStubs.routerContext()
       );
diff --git a/tests/js/spec/views/discover/aggregations/index.spec.jsx b/tests/js/spec/views/discover/aggregations/index.spec.jsx
index 4f8541601a..42f729d674 100644
--- a/tests/js/spec/views/discover/aggregations/index.spec.jsx
+++ b/tests/js/spec/views/discover/aggregations/index.spec.jsx
@@ -1,5 +1,5 @@
 import React from 'react';
-import {mount} from 'enzyme';
+import {mountWithTheme} from 'sentry-test/enzyme';
 
 import Aggregations from 'app/views/discover/aggregations';
 
@@ -10,7 +10,7 @@ describe('Aggregations', function() {
     onChangeMock = jest.fn();
     const columns = [{name: 'col1', type: 'string'}, {name: 'col2', type: 'number'}];
     const value = [];
-    wrapper = mount(
+    wrapper = mountWithTheme(
       <Aggregations columns={columns} onChange={onChangeMock} value={value} />,
       TestStubs.routerContext()
     );
diff --git a/tests/js/spec/views/discover/conditions/condition.spec.jsx b/tests/js/spec/views/discover/conditions/condition.spec.jsx
index 2d6123b8fe..4e15604c70 100644
--- a/tests/js/spec/views/discover/conditions/condition.spec.jsx
+++ b/tests/js/spec/views/discover/conditions/condition.spec.jsx
@@ -1,5 +1,5 @@
 import React from 'react';
-import {mount} from 'enzyme';
+import {mountWithTheme} from 'sentry-test/enzyme';
 
 import Condition from 'app/views/discover/conditions/condition';
 
@@ -19,7 +19,7 @@ describe('Condition', function() {
         },
       ];
       data.forEach(function(condition) {
-        const wrapper = mount(
+        const wrapper = mountWithTheme(
           <Condition value={condition.value} onChange={jest.fn()} columns={[]} />,
           TestStubs.routerContext()
         );
@@ -37,7 +37,7 @@ describe('Condition', function() {
         {name: 'col3', type: 'datetime'},
         {name: 'error.type', type: 'string'},
       ];
-      wrapper = mount(
+      wrapper = mountWithTheme(
         <Condition value={[null, null, null]} onChange={jest.fn()} columns={columns} />,
         TestStubs.routerContext()
       );
@@ -94,7 +94,7 @@ describe('Condition', function() {
     beforeEach(function() {
       focusSpy = jest.spyOn(Condition.prototype, 'focus');
       const columns = [{name: 'col1', type: 'string'}, {name: 'col2', type: 'number'}];
-      wrapper = mount(
+      wrapper = mountWithTheme(
         <Condition
           value={[null, null, null]}
           onChange={onChangeMock}
@@ -133,7 +133,7 @@ describe('Condition', function() {
     const onChangeMock = jest.fn();
     beforeEach(function() {
       const columns = [{name: 'col1', type: 'string'}, {name: 'col2', type: 'number'}];
-      wrapper = mount(
+      wrapper = mountWithTheme(
         <Condition
           value={[null, null, null]}
           onChange={onChangeMock}
diff --git a/tests/js/spec/views/discover/conditions/index.spec.jsx b/tests/js/spec/views/discover/conditions/index.spec.jsx
index 0652447a7b..b6b4d19ab7 100644
--- a/tests/js/spec/views/discover/conditions/index.spec.jsx
+++ b/tests/js/spec/views/discover/conditions/index.spec.jsx
@@ -1,5 +1,5 @@
 import React from 'react';
-import {mount} from 'enzyme';
+import {mountWithTheme} from 'sentry-test/enzyme';
 
 import Conditions from 'app/views/discover/conditions';
 
@@ -10,7 +10,7 @@ describe('Conditions', function() {
     onChangeMock = jest.fn();
     const columns = [{name: 'col1', type: 'string'}, {name: 'col2', type: 'number'}];
     const value = [];
-    wrapper = mount(
+    wrapper = mountWithTheme(
       <Conditions columns={columns} onChange={onChangeMock} value={value} />,
       TestStubs.routerContext()
     );
diff --git a/tests/js/spec/views/discover/discover.spec.jsx b/tests/js/spec/views/discover/discover.spec.jsx
index 9557029842..39c8dc0f82 100644
--- a/tests/js/spec/views/discover/discover.spec.jsx
+++ b/tests/js/spec/views/discover/discover.spec.jsx
@@ -1,7 +1,7 @@
 import {browserHistory} from 'react-router';
 import React from 'react';
 
-import {mount} from 'enzyme';
+import {mountWithTheme} from 'sentry-test/enzyme';
 import ConfigStore from 'app/stores/configStore';
 import Discover from 'app/views/discover/discover';
 import GlobalSelectionStore from 'app/stores/globalSelectionStore';
@@ -33,7 +33,7 @@ describe('Discover', function() {
 
     it('auto-runs saved query after tags are loaded', async function() {
       const savedQuery = TestStubs.DiscoverSavedQuery();
-      wrapper = mount(
+      wrapper = mountWithTheme(
         <Discover
           location={{query: {}}}
           queryBuilder={queryBuilder}
@@ -58,7 +58,7 @@ describe('Discover', function() {
     });
 
     it('auto-runs when there is a query string after tags are loaded', async function() {
-      wrapper = mount(
+      wrapper = mountWithTheme(
         <Discover
           location={{
             query: {},
@@ -85,7 +85,7 @@ describe('Discover', function() {
     });
 
     it('does not auto run when there is no query string', async function() {
-      wrapper = mount(
+      wrapper = mountWithTheme(
         <Discover
           location={{
             query: {},
@@ -107,7 +107,7 @@ describe('Discover', function() {
 
   describe('componentWillRecieveProps()', function() {
     it('handles navigating to saved query', function() {
-      const wrapper = mount(
+      const wrapper = mountWithTheme(
         <Discover
           queryBuilder={queryBuilder}
           organization={organization}
@@ -133,7 +133,7 @@ describe('Discover', function() {
     });
 
     it('handles navigating to new date', async function() {
-      const wrapper = mount(
+      const wrapper = mountWithTheme(
         <Discover
           queryBuilder={queryBuilder}
           organization={organization}
@@ -182,7 +182,7 @@ describe('Discover', function() {
         body: {timing: {}, data: [], meta: []},
       });
 
-      wrapper = mount(
+      wrapper = mountWithTheme(
         <Discover
           queryBuilder={queryBuilder}
           organization={organization}
@@ -244,7 +244,7 @@ describe('Discover', function() {
       queryBuilder.fetch = jest.fn(() => Promise.resolve(mockResponse));
       queryBuilder.fetchWithoutLimit = jest.fn(() => Promise.resolve(mockResponse));
 
-      wrapper = mount(
+      wrapper = mountWithTheme(
         <Discover
           params={{}}
           location={{query: {}, search: ''}}
@@ -316,7 +316,7 @@ describe('Discover', function() {
 
   describe('saveQuery()', function() {
     it('can be saved', function() {
-      const wrapper = mount(
+      const wrapper = mountWithTheme(
         <Discover
           params={{}}
           location={{query: {}, search: ''}}
@@ -361,7 +361,7 @@ describe('Discover', function() {
         queryBuilder.fetch = jest.fn(() => Promise.resolve(mockResponse));
         queryBuilder.reset = jest.fn(queryBuilder.reset);
 
-        wrapper = mount(
+        wrapper = mountWithTheme(
           <Discover
             queryBuilder={queryBuilder}
             organization={organization}
@@ -442,7 +442,7 @@ describe('Discover', function() {
     let wrapper, deleteMock, updateMock;
     beforeEach(function() {
       const savedQuery = TestStubs.DiscoverSavedQuery();
-      wrapper = mount(
+      wrapper = mountWithTheme(
         <Discover
           queryBuilder={queryBuilder}
           organization={organization}
@@ -529,7 +529,7 @@ describe('Discover', function() {
     let wrapper;
 
     beforeEach(function() {
-      wrapper = mount(
+      wrapper = mountWithTheme(
         <Discover
           queryBuilder={queryBuilder}
           organization={organization}
@@ -584,7 +584,7 @@ describe('Discover', function() {
         });
       });
 
-      wrapper = mount(
+      wrapper = mountWithTheme(
         <Discover
           queryBuilder={queryBuilder}
           organization={organization}
@@ -636,7 +636,7 @@ describe('Discover', function() {
 
       const routerContext = TestStubs.routerContext([{organization}]);
 
-      wrapper = mount(
+      wrapper = mountWithTheme(
         <Discover
           queryBuilder={queryBuilder}
           params={{}}
diff --git a/tests/js/spec/views/discover/index.spec.jsx b/tests/js/spec/views/discover/index.spec.jsx
index 511311fbce..f5874186b2 100644
--- a/tests/js/spec/views/discover/index.spec.jsx
+++ b/tests/js/spec/views/discover/index.spec.jsx
@@ -1,5 +1,5 @@
 import React from 'react';
-import {mount} from 'enzyme';
+import {mountWithTheme} from 'sentry-test/enzyme';
 import {browserHistory} from 'react-router';
 
 import GlobalSelectionStore from 'app/stores/globalSelectionStore';
@@ -31,7 +31,7 @@ describe('DiscoverContainer', function() {
           meta: [],
         },
       });
-      wrapper = mount(
+      wrapper = mountWithTheme(
         <DiscoverContainer
           location={{query: {}, search: ''}}
           params={{}}
@@ -59,7 +59,7 @@ describe('DiscoverContainer', function() {
         datetime: {start: null, end: null, period: '14d'},
       });
 
-      wrapper = mount(
+      wrapper = mountWithTheme(
         <DiscoverContainerWithStore
           location={{query: {}, search: ''}}
           params={{}}
@@ -80,7 +80,7 @@ describe('DiscoverContainer', function() {
 
     const createWrapper = async (props, withStore) => {
       const Component = withStore ? DiscoverContainerWithStore : DiscoverContainer;
-      const wrap = mount(
+      const wrap = mountWithTheme(
         <Component
           location={{query: {}, search: ''}}
           params={{savedQueryId: 1}}
@@ -274,7 +274,7 @@ describe('DiscoverContainer', function() {
   describe('no access', function() {
     it('display no access message', async function() {
       const organization = TestStubs.Organization({projects: [TestStubs.Project()]});
-      const wrapper = mount(
+      const wrapper = mountWithTheme(
         <DiscoverContainer
           location={{query: {}, search: ''}}
           params={{}}
diff --git a/tests/js/spec/views/discover/result/index.spec.jsx b/tests/js/spec/views/discover/result/index.spec.jsx
index aa90dca35d..1111004e79 100644
--- a/tests/js/spec/views/discover/result/index.spec.jsx
+++ b/tests/js/spec/views/discover/result/index.spec.jsx
@@ -1,5 +1,5 @@
 import React from 'react';
-import {mount, shallow} from 'enzyme';
+import {mountWithTheme, shallow} from 'sentry-test/enzyme';
 
 import Result from 'app/views/discover/result';
 import createQueryBuilder from 'app/views/discover/queryBuilder';
@@ -149,7 +149,7 @@ describe('Result', function() {
 
     describe('Toggles Visualizations', function() {
       beforeEach(function() {
-        wrapper = mount(
+        wrapper = mountWithTheme(
           <Result
             data={data}
             organization={organization}
@@ -213,7 +213,7 @@ describe('Result', function() {
           data: null,
         },
       };
-      wrapper = mount(
+      wrapper = mountWithTheme(
         <Result
           data={data}
           organization={organization}
diff --git a/tests/js/spec/views/discover/result/table.spec.jsx b/tests/js/spec/views/discover/result/table.spec.jsx
index b6670066a9..bd268c69ee 100644
--- a/tests/js/spec/views/discover/result/table.spec.jsx
+++ b/tests/js/spec/views/discover/result/table.spec.jsx
@@ -1,5 +1,5 @@
 import React from 'react';
-import {shallow, render} from 'enzyme';
+import {shallow, render} from 'sentry-test/enzyme';
 
 import {ResultTable} from 'app/views/discover/result/table';
 
diff --git a/tests/js/spec/views/discover/result/utils.spec.jsx b/tests/js/spec/views/discover/result/utils.spec.jsx
index b914715316..35e0ade771 100644
--- a/tests/js/spec/views/discover/result/utils.spec.jsx
+++ b/tests/js/spec/views/discover/result/utils.spec.jsx
@@ -1,4 +1,4 @@
-import {mount} from 'enzyme';
+import {mount} from 'sentry-test/enzyme';
 
 import {
   getChartData,
diff --git a/tests/js/spec/views/discover/sidebar/orderBy.spec.jsx b/tests/js/spec/views/discover/sidebar/orderBy.spec.jsx
index 0eb796e4bf..fb238dbf5f 100644
--- a/tests/js/spec/views/discover/sidebar/orderBy.spec.jsx
+++ b/tests/js/spec/views/discover/sidebar/orderBy.spec.jsx
@@ -1,5 +1,5 @@
 import React from 'react';
-import {mount} from 'enzyme';
+import {mountWithTheme} from 'sentry-test/enzyme';
 
 import Orderby from 'app/views/discover/sidebar/orderby';
 
@@ -11,7 +11,7 @@ describe('orderBy', function() {
     onChangeMock = jest.fn();
     columns = [{value: 'timestamp', label: 'timestamp'}, {value: 'id', label: 'id'}];
 
-    wrapper = mount(
+    wrapper = mountWithTheme(
       <Orderby value="-timestamp" columns={columns} onChange={onChangeMock} />,
       TestStubs.routerContext([{organization}])
     );
diff --git a/tests/js/spec/views/discover/sidebar/savedQueryList.spec.jsx b/tests/js/spec/views/discover/sidebar/savedQueryList.spec.jsx
index 2c5b44e70d..3e91988252 100644
--- a/tests/js/spec/views/discover/sidebar/savedQueryList.spec.jsx
+++ b/tests/js/spec/views/discover/sidebar/savedQueryList.spec.jsx
@@ -1,5 +1,5 @@
 import React from 'react';
-import {mount} from 'enzyme';
+import {mount} from 'sentry-test/enzyme';
 
 import SavedQueryList from 'app/views/discover/sidebar/savedQueryList';
 
diff --git a/tests/js/spec/views/events/events.spec.jsx b/tests/js/spec/views/events/events.spec.jsx
index 3f74fc8c4a..ef4856272d 100644
--- a/tests/js/spec/views/events/events.spec.jsx
+++ b/tests/js/spec/views/events/events.spec.jsx
@@ -2,11 +2,11 @@ import {withRouter, browserHistory} from 'react-router';
 import React from 'react';
 
 import Events, {parseRowFromLinks} from 'app/views/events/events';
-import {chart, doZoom} from 'app-test/helpers/charts';
-import {initializeOrg} from 'app-test/helpers/initializeOrg';
+import {chart, doZoom} from 'sentry-test/charts';
+import {initializeOrg} from 'sentry-test/initializeOrg';
 import {getUtcToLocalDateObject} from 'app/utils/dates';
-import {mockRouterPush} from 'app-test/helpers/mockRouterPush';
-import {mount} from 'enzyme';
+import {mockRouterPush} from 'sentry-test/mockRouterPush';
+import {mountWithTheme} from 'sentry-test/enzyme';
 import EventsContainer from 'app/views/events';
 import ProjectsStore from 'app/stores/projectsStore';
 
@@ -92,7 +92,7 @@ describe('EventsErrors', function() {
       statusCode: 500,
       body: {details: 'Error'},
     });
-    const wrapper = mount(
+    const wrapper = mountWithTheme(
       <Events organization={organization} location={{query: {}}} />,
       routerContext
     );
@@ -105,7 +105,7 @@ describe('EventsErrors', function() {
   });
 
   it('renders events table', async function() {
-    const wrapper = mount(
+    const wrapper = mountWithTheme(
       <Events organization={organization} location={{query: {}}} />,
       routerContext
     );
@@ -122,10 +122,13 @@ describe('EventsErrors', function() {
       ...organization,
       features: [...organization.features, 'internal-catchall'],
     });
-    const wrapper = mount(<Events organization={newOrg} location={{query: {}}} />, {
-      ...routerContext,
-      context: {...routerContext.context, organization: newOrg},
-    });
+    const wrapper = mountWithTheme(
+      <Events organization={newOrg} location={{query: {}}} />,
+      {
+        ...routerContext,
+        context: {...routerContext.context, organization: newOrg},
+      }
+    );
     await tick();
     wrapper.update();
     expect(eventsMetaMock).toHaveBeenCalled();
@@ -135,7 +138,7 @@ describe('EventsErrors', function() {
   // This tests the component's `shouldComponentUpdate`
   // Use `search` to compare instead of `query` because that's what we check in `AsyncComponent`
   it('location.query changes updates events table', async function() {
-    const wrapper = mount(
+    const wrapper = mountWithTheme(
       <EventsWithRouter
         organization={organization}
         location={{
@@ -214,7 +217,7 @@ describe('EventsErrors', function() {
         },
       };
 
-      wrapper = mount(
+      wrapper = mountWithTheme(
         <EventsContainer
           router={newRouter}
           organization={organization}
@@ -328,7 +331,7 @@ describe('EventsContainer', function() {
       body: {count: 5},
     });
 
-    wrapper = mount(
+    wrapper = mountWithTheme(
       <EventsContainer
         router={router}
         organization={organization}
@@ -421,7 +424,7 @@ describe('EventsContainer', function() {
       headers: {'X-Sentry-Direct-Hit': '1'},
     });
 
-    wrapper = mount(
+    wrapper = mountWithTheme(
       <Events organization={organization} location={{query: eventId}} />,
       routerContext
     );
diff --git a/tests/js/spec/views/events/eventsChart.spec.jsx b/tests/js/spec/views/events/eventsChart.spec.jsx
index ff975bbd22..75f73856e5 100644
--- a/tests/js/spec/views/events/eventsChart.spec.jsx
+++ b/tests/js/spec/views/events/eventsChart.spec.jsx
@@ -1,10 +1,10 @@
 import React from 'react';
 
 import {EventsChart} from 'app/views/events/eventsChart';
-import {chart, doZoom, mockZoomRange} from 'app-test/helpers/charts';
+import {chart, doZoom, mockZoomRange} from 'sentry-test/charts';
 import {getUtcToLocalDateObject} from 'app/utils/dates';
-import {initializeOrg} from 'app-test/helpers/initializeOrg';
-import {mount} from 'enzyme';
+import {initializeOrg} from 'sentry-test/initializeOrg';
+import {mount} from 'sentry-test/enzyme';
 import {updateParams} from 'app/actionCreators/globalSelection';
 
 jest.mock('app/views/events/utils/eventsRequest', () => jest.fn(() => null));
diff --git a/tests/js/spec/views/events/eventsLineChart.spec.jsx b/tests/js/spec/views/events/eventsLineChart.spec.jsx
index d63c637051..eb8b751eae 100644
--- a/tests/js/spec/views/events/eventsLineChart.spec.jsx
+++ b/tests/js/spec/views/events/eventsLineChart.spec.jsx
@@ -2,9 +2,9 @@ import React from 'react';
 
 import {Client} from 'app/api';
 import {EventsChart} from 'app/views/events/eventsChart';
-import {mockZoomRange} from 'app-test/helpers/charts';
-import {initializeOrg} from 'app-test/helpers/initializeOrg';
-import {mount} from 'enzyme';
+import {mockZoomRange} from 'sentry-test/charts';
+import {initializeOrg} from 'sentry-test/initializeOrg';
+import {mountWithTheme} from 'sentry-test/enzyme';
 
 describe('EventsChart > EventsLineChart', function() {
   const {router, routerContext, org} = initializeOrg();
@@ -20,7 +20,7 @@ describe('EventsChart > EventsLineChart', function() {
       },
     });
 
-    wrapper = mount(
+    wrapper = mountWithTheme(
       <EventsChart
         api={new MockApiClient()}
         location={{query: {}}}
diff --git a/tests/js/spec/views/events/index.spec.jsx b/tests/js/spec/views/events/index.spec.jsx
index 9297280626..19434df284 100644
--- a/tests/js/spec/views/events/index.spec.jsx
+++ b/tests/js/spec/views/events/index.spec.jsx
@@ -1,8 +1,8 @@
 import React from 'react';
 
-import {initializeOrg} from 'app-test/helpers/initializeOrg';
-import {mockRouterPush} from 'app-test/helpers/mockRouterPush';
-import {mount} from 'enzyme';
+import {initializeOrg} from 'sentry-test/initializeOrg';
+import {mockRouterPush} from 'sentry-test/mockRouterPush';
+import {mountWithTheme} from 'sentry-test/enzyme';
 import {setActiveOrganization} from 'app/actionCreators/organizations';
 import GlobalSelectionStore from 'app/stores/globalSelectionStore';
 import EventsContainer from 'app/views/events';
@@ -46,7 +46,7 @@ describe('EventsContainer', function() {
         pathname: '/organizations/org-slug/events/',
         query: {},
       };
-      wrapper = mount(
+      wrapper = mountWithTheme(
         <EventsContainer
           router={router}
           organization={organization}
diff --git a/tests/js/spec/views/events/searchBar.spec.jsx b/tests/js/spec/views/events/searchBar.spec.jsx
index 45a614cf25..213ecbb92d 100644
--- a/tests/js/spec/views/events/searchBar.spec.jsx
+++ b/tests/js/spec/views/events/searchBar.spec.jsx
@@ -1,5 +1,5 @@
 import React from 'react';
-import {mount} from 'enzyme';
+import {mountWithTheme} from 'sentry-test/enzyme';
 
 import SearchBar from 'app/views/events/searchBar';
 import TagStore from 'app/stores/tagStore';
@@ -58,8 +58,8 @@ describe('SearchBar', function() {
     MockApiClient.clearMockResponses();
   });
 
-  it('fetches organization tags on mount', async function() {
-    const wrapper = mount(<SearchBar {...props} />, options);
+  it('fetches organization tags on mountWithTheme', async function() {
+    const wrapper = mountWithTheme(<SearchBar {...props} />, options);
     await tick();
     expect(tagKeysMock).toHaveBeenCalledTimes(1);
     wrapper.update();
@@ -72,7 +72,7 @@ describe('SearchBar', function() {
   });
 
   it('searches and selects an event field value', async function() {
-    const wrapper = mount(<SearchBar {...props} />, options);
+    const wrapper = mountWithTheme(<SearchBar {...props} />, options);
     await tick();
     setQuery(wrapper, 'gpu:');
 
@@ -98,7 +98,7 @@ describe('SearchBar', function() {
   });
 
   it('does not requery for event field values if query does not change', async function() {
-    const wrapper = mount(<SearchBar {...props} />, options);
+    const wrapper = mountWithTheme(<SearchBar {...props} />, options);
     await tick();
     setQuery(wrapper, 'gpu:');
 
@@ -113,7 +113,7 @@ describe('SearchBar', function() {
   });
 
   it('removes highlight when query is empty', async function() {
-    const wrapper = mount(<SearchBar {...props} />, options);
+    const wrapper = mountWithTheme(<SearchBar {...props} />, options);
     await tick();
     setQuery(wrapper, 'gpu');
 
@@ -128,7 +128,7 @@ describe('SearchBar', function() {
   });
 
   it('ignores negation ("!") at the beginning of search term', async function() {
-    const wrapper = mount(<SearchBar {...props} />, options);
+    const wrapper = mountWithTheme(<SearchBar {...props} />, options);
     await tick();
 
     setQuery(wrapper, '!gp');
@@ -144,7 +144,7 @@ describe('SearchBar', function() {
   });
 
   it('ignores wildcard ("*") at the beginning of tag value query', async function() {
-    const wrapper = mount(<SearchBar {...props} />, options);
+    const wrapper = mountWithTheme(<SearchBar {...props} />, options);
     await tick();
 
     setQuery(wrapper, '!gpu:*');
diff --git a/tests/js/spec/views/events/utils/eventsRequest.spec.jsx b/tests/js/spec/views/events/utils/eventsRequest.spec.jsx
index abf23dd7c0..829f6826ec 100644
--- a/tests/js/spec/views/events/utils/eventsRequest.spec.jsx
+++ b/tests/js/spec/views/events/utils/eventsRequest.spec.jsx
@@ -1,4 +1,4 @@
-import {mount} from 'enzyme';
+import {mount} from 'sentry-test/enzyme';
 import React from 'react';
 
 import {doEventsRequest} from 'app/actionCreators/events';
diff --git a/tests/js/spec/views/eventsV2/eventDetails.spec.jsx b/tests/js/spec/views/eventsV2/eventDetails.spec.jsx
index 7357a1660f..a0bec3617c 100644
--- a/tests/js/spec/views/eventsV2/eventDetails.spec.jsx
+++ b/tests/js/spec/views/eventsV2/eventDetails.spec.jsx
@@ -1,6 +1,6 @@
 import React from 'react';
-import {mount} from 'enzyme';
-import {initializeOrg} from 'app-test/helpers/initializeOrg';
+import {mountWithTheme} from 'sentry-test/enzyme';
+import {initializeOrg} from 'sentry-test/initializeOrg';
 import {browserHistory} from 'react-router';
 
 import EventDetails from 'app/views/eventsV2/eventDetails';
@@ -151,7 +151,7 @@ describe('EventsV2 > EventDetails', function() {
   });
 
   it('renders', function() {
-    const wrapper = mount(
+    const wrapper = mountWithTheme(
       <EventDetails
         organization={TestStubs.Organization({projects: [TestStubs.Project()]})}
         eventSlug="project-slug:deadbeef"
@@ -168,7 +168,7 @@ describe('EventsV2 > EventDetails', function() {
   });
 
   it('renders a 404', function() {
-    const wrapper = mount(
+    const wrapper = mountWithTheme(
       <EventDetails
         organization={TestStubs.Organization({projects: [TestStubs.Project()]})}
         eventSlug="project-slug:abad1"
@@ -182,7 +182,7 @@ describe('EventsV2 > EventDetails', function() {
   });
 
   it('renders a chart in grouped view', function() {
-    const wrapper = mount(
+    const wrapper = mountWithTheme(
       <EventDetails
         organization={TestStubs.Organization({projects: [TestStubs.Project()]})}
         eventSlug="project-slug:deadbeef"
@@ -199,7 +199,7 @@ describe('EventsV2 > EventDetails', function() {
   });
 
   it('removes eventSlug when close button is clicked', function() {
-    const wrapper = mount(
+    const wrapper = mountWithTheme(
       <EventDetails
         organization={TestStubs.Organization({projects: [TestStubs.Project()]})}
         eventSlug="project-slug:deadbeef"
@@ -231,7 +231,7 @@ describe('EventsV2 > EventDetails', function() {
         },
       },
     });
-    const wrapper = mount(
+    const wrapper = mountWithTheme(
       <EventDetails
         organization={organization}
         eventSlug="project-slug:deadbeef"
@@ -267,7 +267,7 @@ describe('EventsV2 > EventDetails', function() {
         },
       },
     });
-    const wrapper = mount(
+    const wrapper = mountWithTheme(
       <EventDetails
         organization={organization}
         eventSlug="project-slug:deadbeef"
diff --git a/tests/js/spec/views/eventsV2/index.spec.jsx b/tests/js/spec/views/eventsV2/index.spec.jsx
index a0377fa1a1..aafc23ece1 100644
--- a/tests/js/spec/views/eventsV2/index.spec.jsx
+++ b/tests/js/spec/views/eventsV2/index.spec.jsx
@@ -1,5 +1,5 @@
 import React from 'react';
-import {mount} from 'enzyme';
+import {mountWithTheme} from 'sentry-test/enzyme';
 
 import {EventsV2} from 'app/views/eventsV2';
 
@@ -75,7 +75,7 @@ describe('EventsV2', function() {
 
   it('renders a link list', function() {
     /* TODO(leedongwei)
-    const wrapper = mount(
+    const wrapper = mountWithTheme(
       <EventsV2
         organization={TestStubs.Organization({features, projects: [TestStubs.Project()]})}
         location={{query: {}}}
@@ -91,7 +91,7 @@ describe('EventsV2', function() {
 
   it('renders a list of events', function() {
     /* TODO(leedongwei)
-    const wrapper = mount(
+    const wrapper = mountWithTheme(
       <EventsV2
         organization={TestStubs.Organization({features, projects: [TestStubs.Project()]})}
         location={{query: {...generateFields()}}}
@@ -106,7 +106,7 @@ describe('EventsV2', function() {
   });
 
   it('handles no projects', function() {
-    const wrapper = mount(
+    const wrapper = mountWithTheme(
       <EventsV2
         organization={TestStubs.Organization({features})}
         location={{query: {...generateFields()}}}
@@ -121,7 +121,7 @@ describe('EventsV2', function() {
 
   it('generates an active sort link based on default sort', function() {
     /* TODO(leedongwei)
-    const wrapper = mount(
+    const wrapper = mountWithTheme(
       <EventsV2
         organization={TestStubs.Organization({features, projects: [TestStubs.Project()]})}
         location={{query: {...generateFields(), sort: ['-timestamp']}}}
@@ -164,7 +164,7 @@ describe('EventsV2', function() {
 
   it('generates links to modals', async function() {
     /* TODO(leedongwei)
-    const wrapper = mount(
+    const wrapper = mountWithTheme(
       <EventsV2
         organization={TestStubs.Organization({features, projects: [TestStubs.Project()]})}
         location={{query: {...generateFields()}}}
@@ -186,7 +186,7 @@ describe('EventsV2', function() {
       features,
       projects: [TestStubs.Project()],
     });
-    const wrapper = mount(
+    const wrapper = mountWithTheme(
       <EventsV2
         organization={organization}
         params={{orgId: organization.slug}}
diff --git a/tests/js/spec/views/eventsV2/saveQueryButton.spec.jsx b/tests/js/spec/views/eventsV2/saveQueryButton.spec.jsx
index 84440cb59f..906511bf54 100644
--- a/tests/js/spec/views/eventsV2/saveQueryButton.spec.jsx
+++ b/tests/js/spec/views/eventsV2/saveQueryButton.spec.jsx
@@ -1,5 +1,5 @@
 import React from 'react';
-import {mount} from 'enzyme';
+import {mountWithTheme} from 'sentry-test/enzyme';
 import {browserHistory} from 'react-router';
 
 import EventSaveQueryButton from 'app/views/eventsV2/saveQueryButton';
@@ -20,7 +20,7 @@ describe('EventsV2 > SaveQueryButton', function() {
   });
 
   it('renders a button', function() {
-    const wrapper = mount(
+    const wrapper = mountWithTheme(
       <EventSaveQueryButton
         organization={organization}
         location={location}
@@ -34,7 +34,7 @@ describe('EventsV2 > SaveQueryButton', function() {
   });
 
   it('renders a popover for a new query', function() {
-    const wrapper = mount(
+    const wrapper = mountWithTheme(
       <EventSaveQueryButton
         organization={organization}
         location={location}
@@ -55,7 +55,7 @@ describe('EventsV2 > SaveQueryButton', function() {
   });
 
   it('renders a popover for an existing query', function() {
-    const wrapper = mount(
+    const wrapper = mountWithTheme(
       <EventSaveQueryButton
         organization={organization}
         location={location}
@@ -73,7 +73,7 @@ describe('EventsV2 > SaveQueryButton', function() {
   });
 
   it('sets input value based on props', function() {
-    const wrapper = mount(
+    const wrapper = mountWithTheme(
       <EventSaveQueryButton
         organization={organization}
         location={location}
@@ -115,7 +115,7 @@ describe('EventsV2 > SaveQueryButton', function() {
         fieldnames: ['title', 'total'],
       },
     });
-    const wrapper = mount(
+    const wrapper = mountWithTheme(
       <EventSaveQueryButton
         organization={organization}
         location={location}
@@ -166,7 +166,7 @@ describe('EventsV2 > SaveQueryButton', function() {
       ALL_VIEWS.find(view => view.name === 'Errors')
     );
     errors.id = '1';
-    const wrapper = mount(
+    const wrapper = mountWithTheme(
       <EventSaveQueryButton
         organization={organization}
         location={location}
diff --git a/tests/js/spec/views/eventsV2/tags.spec.jsx b/tests/js/spec/views/eventsV2/tags.spec.jsx
index 4ec9eb10a6..608c833236 100644
--- a/tests/js/spec/views/eventsV2/tags.spec.jsx
+++ b/tests/js/spec/views/eventsV2/tags.spec.jsx
@@ -1,10 +1,10 @@
 import React from 'react';
-import {mount} from 'enzyme';
+import {mount} from 'sentry-test/enzyme';
 
 import {Client} from 'app/api';
 import {Tags} from 'app/views/eventsV2/tags';
 import EventView from 'app/views/eventsV2/eventView';
-import {initializeOrg} from 'app-test/helpers/initializeOrg';
+import {initializeOrg} from 'sentry-test/initializeOrg';
 
 describe('Tags', function() {
   const org = TestStubs.Organization();
diff --git a/tests/js/spec/views/eventsV2/utils.spec.jsx b/tests/js/spec/views/eventsV2/utils.spec.jsx
index 294ba0608f..4b00f11503 100644
--- a/tests/js/spec/views/eventsV2/utils.spec.jsx
+++ b/tests/js/spec/views/eventsV2/utils.spec.jsx
@@ -1,6 +1,6 @@
-import {mount} from 'enzyme';
+import {mount, mountWithTheme} from 'sentry-test/enzyme';
 
-import {initializeOrg} from 'app-test/helpers/initializeOrg';
+import {initializeOrg} from 'sentry-test/initializeOrg';
 import {
   getFieldRenderer,
   getAggregateAlias,
@@ -173,7 +173,7 @@ describe('getFieldRenderer', function() {
   it('can render project as an avatar', function() {
     const renderer = getFieldRenderer('project', {'project.name': 'string'});
     expect(renderer).toBeInstanceOf(Function);
-    const wrapper = mount(
+    const wrapper = mountWithTheme(
       renderer(data, {location, organization}),
       context.routerContext
     );
diff --git a/tests/js/spec/views/incidents/details/activity.spec.jsx b/tests/js/spec/views/incidents/details/activity.spec.jsx
index 699ef4cff8..5f56f57d76 100644
--- a/tests/js/spec/views/incidents/details/activity.spec.jsx
+++ b/tests/js/spec/views/incidents/details/activity.spec.jsx
@@ -1,9 +1,9 @@
 import React from 'react';
-import {mount} from 'enzyme';
+import {mountWithTheme} from 'sentry-test/enzyme';
 
-import {initializeOrg} from 'app-test/helpers/initializeOrg';
+import {initializeOrg} from 'sentry-test/initializeOrg';
 import IncidentActivity from 'app/views/incidents/details/activity';
-import changeReactMentionsInput from 'app-test/helpers/changeReactMentionsInput';
+import changeReactMentionsInput from 'sentry-test/changeReactMentionsInput';
 
 describe('IncidentDetails -> Activity', function() {
   const incident = TestStubs.Incident();
@@ -25,7 +25,7 @@ describe('IncidentDetails -> Activity', function() {
   });
 
   const createWrapper = props =>
-    mount(
+    mountWithTheme(
       <IncidentActivity
         params={{incidentId: incident.identifier, orgId: organization.slug}}
         {...props}
diff --git a/tests/js/spec/views/incidents/details/index.spec.jsx b/tests/js/spec/views/incidents/details/index.spec.jsx
index ae2ee5aef4..b7694a856d 100644
--- a/tests/js/spec/views/incidents/details/index.spec.jsx
+++ b/tests/js/spec/views/incidents/details/index.spec.jsx
@@ -1,7 +1,7 @@
+import {mountWithTheme} from 'sentry-test/enzyme';
 import React from 'react';
 
-import {initializeOrg} from 'app-test/helpers/initializeOrg';
-import {mount} from 'enzyme';
+import {initializeOrg} from 'sentry-test/initializeOrg';
 import IncidentDetails from 'app/views/incidents/details';
 import ProjectsStore from 'app/stores/projectsStore';
 
@@ -16,7 +16,7 @@ describe('IncidentDetails', function() {
   let activitiesList;
 
   const createWrapper = props =>
-    mount(<IncidentDetails params={params} {...props} />, routerContext);
+    mountWithTheme(<IncidentDetails params={params} {...props} />, routerContext);
 
   beforeAll(function() {
     ProjectsStore.loadInitialData([project]);
diff --git a/tests/js/spec/views/incidents/index.spec.jsx b/tests/js/spec/views/incidents/index.spec.jsx
index 8d705db090..9ece1adf1e 100644
--- a/tests/js/spec/views/incidents/index.spec.jsx
+++ b/tests/js/spec/views/incidents/index.spec.jsx
@@ -1,5 +1,5 @@
 import React from 'react';
-import {mount} from 'enzyme';
+import {mountWithTheme} from 'sentry-test/enzyme';
 
 import IncidentsContainer from 'app/views/incidents';
 
@@ -7,7 +7,7 @@ describe('IncidentsContainer', function() {
   describe('no access without feature flag', function() {
     it('display no access message', function() {
       const organization = TestStubs.Organization({projects: [TestStubs.Project()]});
-      const wrapper = mount(
+      const wrapper = mountWithTheme(
         <IncidentsContainer />,
         TestStubs.routerContext([{organization}])
       );
diff --git a/tests/js/spec/views/incidents/list/index.spec.jsx b/tests/js/spec/views/incidents/list/index.spec.jsx
index ffb6130bef..9bc6ee13e7 100644
--- a/tests/js/spec/views/incidents/list/index.spec.jsx
+++ b/tests/js/spec/views/incidents/list/index.spec.jsx
@@ -1,7 +1,7 @@
 import React from 'react';
-import {mount} from 'enzyme';
+import {mountWithTheme} from 'sentry-test/enzyme';
 
-import {initializeOrg} from 'app-test/helpers/initializeOrg';
+import {initializeOrg} from 'sentry-test/initializeOrg';
 
 import IncidentsList from 'app/views/incidents/list';
 
@@ -11,7 +11,7 @@ describe('IncidentsList', function() {
   let wrapper;
 
   const createWrapper = async props => {
-    wrapper = mount(
+    wrapper = mountWithTheme(
       <IncidentsList
         params={{orgId: 'org-slug'}}
         location={{query: {}, search: ''}}
diff --git a/tests/js/spec/views/installWizard.spec.jsx b/tests/js/spec/views/installWizard.spec.jsx
index 99d304566b..75d6e48485 100644
--- a/tests/js/spec/views/installWizard.spec.jsx
+++ b/tests/js/spec/views/installWizard.spec.jsx
@@ -1,5 +1,5 @@
 import React from 'react';
-import {mount} from 'enzyme';
+import {mount} from 'sentry-test/enzyme';
 
 import ConfigStore from 'app/stores/configStore';
 import InstallWizard from 'app/views/installWizard';
diff --git a/tests/js/spec/views/inviteMember/inviteMember.spec.jsx b/tests/js/spec/views/inviteMember/inviteMember.spec.jsx
index 6fcdd703cc..000b4a8be2 100644
--- a/tests/js/spec/views/inviteMember/inviteMember.spec.jsx
+++ b/tests/js/spec/views/inviteMember/inviteMember.spec.jsx
@@ -1,5 +1,5 @@
 import React from 'react';
-import {shallow, mount} from 'enzyme';
+import {shallow, mountWithTheme} from 'sentry-test/enzyme';
 import _ from 'lodash';
 import {InviteMember} from 'app/views/settings/organizationMembers/inviteMember';
 import ConfigStore from 'app/stores/configStore';
@@ -78,7 +78,7 @@ describe('InviteMember', function() {
     const team = organization.teams.slice(0, 1);
     organization.teams = team;
 
-    const wrapper = mount(<InviteMember {...baseProps} />, context);
+    const wrapper = mountWithTheme(<InviteMember {...baseProps} />, context);
 
     expect(wrapper.state('selectedTeams').size).toBe(1);
     expect(wrapper.state('selectedTeams').has(team[0].slug)).toBe(true);
@@ -115,7 +115,7 @@ describe('InviteMember', function() {
     });
 
     const pushMock = jest.fn();
-    let wrapper = mount(
+    let wrapper = mountWithTheme(
       <InviteMember
         router={{
           push: pushMock,
@@ -131,7 +131,7 @@ describe('InviteMember', function() {
     expect(pushMock).toHaveBeenCalledWith('/settings/testOrg/members/');
     expect(wrapper.state('loading')).toBe(false);
 
-    wrapper = mount(
+    wrapper = mountWithTheme(
       <InviteMember
         router={{
           push: pushMock,
@@ -167,7 +167,7 @@ describe('InviteMember', function() {
 
     const mock = MockApiClient.addMockResponse(inviteRequest);
 
-    const wrapper = mount(<InviteMember {...baseProps} />, baseContext);
+    const wrapper = mountWithTheme(<InviteMember {...baseProps} />, baseContext);
 
     expect(wrapper.state('loading')).toBe(false);
 
@@ -210,7 +210,7 @@ describe('InviteMember', function() {
 
     const mock = MockApiClient.addMockResponse(inviteRequest);
 
-    const wrapper = mount(<InviteMember {...baseProps} />, baseContext);
+    const wrapper = mountWithTheme(<InviteMember {...baseProps} />, baseContext);
 
     let node = wrapper.find('RoleSelect PanelItem').first();
     node.props().onClick();
@@ -250,7 +250,7 @@ describe('InviteMember', function() {
       statusCode: 200,
     });
 
-    const wrapper = mount(<InviteMember {...baseProps} />, baseContext);
+    const wrapper = mountWithTheme(<InviteMember {...baseProps} />, baseContext);
     // Wait for team list to load
     await tick();
 
@@ -302,7 +302,7 @@ describe('InviteMember', function() {
       method: 'POST',
       statusCode: 200,
     });
-    const wrapper = mount(<InviteMember {...baseProps} />, baseContext);
+    const wrapper = mountWithTheme(<InviteMember {...baseProps} />, baseContext);
 
     // Wait for team list to fetch.
     await wrapper.update();
diff --git a/tests/js/spec/views/issueList/actions.spec.jsx b/tests/js/spec/views/issueList/actions.spec.jsx
index 093e825cd2..206f889f91 100644
--- a/tests/js/spec/views/issueList/actions.spec.jsx
+++ b/tests/js/spec/views/issueList/actions.spec.jsx
@@ -1,8 +1,8 @@
 import React from 'react';
-import {mount, shallow} from 'enzyme';
+import {mountWithTheme, shallow} from 'sentry-test/enzyme';
 
 import {IssueListActions} from 'app/views/issueList/actions';
-import {initializeOrg} from 'app-test/helpers/initializeOrg';
+import {initializeOrg} from 'sentry-test/initializeOrg';
 import SelectedGroupStore from 'app/stores/selectedGroupStore';
 
 describe('IssueListActions', function() {
@@ -24,7 +24,7 @@ describe('IssueListActions', function() {
 
         SelectedGroupStore.records = {};
         SelectedGroupStore.add([1, 2, 3]);
-        wrapper = mount(
+        wrapper = mountWithTheme(
           <IssueListActions
             api={new MockApiClient()}
             allResultsVisible={false}
@@ -105,7 +105,7 @@ describe('IssueListActions', function() {
       beforeAll(function() {
         SelectedGroupStore.records = {};
         SelectedGroupStore.add([1, 2, 3]);
-        wrapper = mount(
+        wrapper = mountWithTheme(
           <IssueListActions
             api={new MockApiClient()}
             allResultsVisible={false}
@@ -170,7 +170,7 @@ describe('IssueListActions', function() {
       beforeAll(function() {
         SelectedGroupStore.records = {};
         SelectedGroupStore.add([1, 2, 3]);
-        wrapper = mount(
+        wrapper = mountWithTheme(
           <IssueListActions
             api={new MockApiClient()}
             allResultsVisible
@@ -288,7 +288,7 @@ describe('IssueListActions', function() {
 
   describe('missing projectId prop', function() {
     beforeEach(function() {
-      wrapper = mount(
+      wrapper = mountWithTheme(
         <IssueListActions
           api={new MockApiClient()}
           query=""
diff --git a/tests/js/spec/views/issueList/congratsRobots.spec.jsx b/tests/js/spec/views/issueList/congratsRobots.spec.jsx
index f292e947a0..5450459fd7 100644
--- a/tests/js/spec/views/issueList/congratsRobots.spec.jsx
+++ b/tests/js/spec/views/issueList/congratsRobots.spec.jsx
@@ -1,5 +1,5 @@
 import React from 'react';
-import {mount} from 'enzyme';
+import {mount} from 'sentry-test/enzyme';
 
 import CongratsRobots from 'app/views/issueList/congratsRobots';
 
diff --git a/tests/js/spec/views/issueList/createIncident.spec.jsx b/tests/js/spec/views/issueList/createIncident.spec.jsx
index 2a5c1a5f99..b0045db353 100644
--- a/tests/js/spec/views/issueList/createIncident.spec.jsx
+++ b/tests/js/spec/views/issueList/createIncident.spec.jsx
@@ -1,8 +1,8 @@
 import {browserHistory} from 'react-router';
 import React from 'react';
 
-import {initializeOrg} from 'app-test/helpers/initializeOrg';
-import {mount} from 'enzyme';
+import {initializeOrg} from 'sentry-test/initializeOrg';
+import {mountWithTheme} from 'sentry-test/enzyme';
 import GlobalModal from 'app/components/globalModal';
 import IssueListWithStores from 'app/views/issueList/overview';
 import TagStore from 'app/stores/tagStore';
@@ -48,7 +48,7 @@ describe('IssueList --> Create Incident', function() {
       },
     };
 
-    wrapper = mount(
+    wrapper = mountWithTheme(
       <div>
         <GlobalModal />
         <IssueListWithStores {...newRouter} {...defaultProps} {...p} />
diff --git a/tests/js/spec/views/issueList/createSavedSearchButton.spec.jsx b/tests/js/spec/views/issueList/createSavedSearchButton.spec.jsx
index ca425e6356..33dabbe6f5 100644
--- a/tests/js/spec/views/issueList/createSavedSearchButton.spec.jsx
+++ b/tests/js/spec/views/issueList/createSavedSearchButton.spec.jsx
@@ -1,5 +1,5 @@
 import React from 'react';
-import {mount} from 'enzyme';
+import {mountWithTheme} from 'sentry-test/enzyme';
 
 import CreateSavedSearchButton from 'app/views/issueList/createSavedSearchButton';
 
@@ -10,7 +10,7 @@ describe('CreateSavedSearchButton', function() {
     organization = TestStubs.Organization({
       access: ['org:write'],
     });
-    wrapper = mount(
+    wrapper = mountWithTheme(
       <CreateSavedSearchButton
         organization={organization}
         query="is:unresolved assigned:lyn@sentry.io"
diff --git a/tests/js/spec/views/issueList/organizationSavedSearchSelector.spec.jsx b/tests/js/spec/views/issueList/organizationSavedSearchSelector.spec.jsx
index 270b8461f8..124334c3c9 100644
--- a/tests/js/spec/views/issueList/organizationSavedSearchSelector.spec.jsx
+++ b/tests/js/spec/views/issueList/organizationSavedSearchSelector.spec.jsx
@@ -1,5 +1,5 @@
 import React from 'react';
-import {mount} from 'enzyme';
+import {mountWithTheme} from 'sentry-test/enzyme';
 
 import IssueListSavedSearchSelector from 'app/views/issueList/savedSearchSelector';
 
@@ -26,7 +26,7 @@ describe('IssueListSavedSearchSelector', function() {
         isGlobal: false,
       },
     ];
-    wrapper = mount(
+    wrapper = mountWithTheme(
       <IssueListSavedSearchSelector
         organization={organization}
         savedSearchList={savedSearchList}
diff --git a/tests/js/spec/views/issueList/overview.polling.spec.jsx b/tests/js/spec/views/issueList/overview.polling.spec.jsx
index b7b38030d9..0e12c25415 100644
--- a/tests/js/spec/views/issueList/overview.polling.spec.jsx
+++ b/tests/js/spec/views/issueList/overview.polling.spec.jsx
@@ -1,7 +1,7 @@
 import React from 'react';
 
-import {initializeOrg} from 'app-test/helpers/initializeOrg';
-import {mount} from 'enzyme';
+import {initializeOrg} from 'sentry-test/initializeOrg';
+import {mountWithTheme} from 'sentry-test/enzyme';
 import IssueList from 'app/views/issueList/overview';
 import StreamGroup from 'app/components/stream/group';
 import TagStore from 'app/stores/tagStore';
@@ -63,7 +63,10 @@ describe('IssueList -> Polling', function() {
       },
     };
 
-    wrapper = mount(<IssueList {...newRouter} {...defaultProps} {...p} />, routerContext);
+    wrapper = mountWithTheme(
+      <IssueList {...newRouter} {...defaultProps} {...p} />,
+      routerContext
+    );
 
     await Promise.resolve();
     jest.runAllTimers();
diff --git a/tests/js/spec/views/issueList/overview.spec.jsx b/tests/js/spec/views/issueList/overview.spec.jsx
index 99db717be0..53a36db2d4 100644
--- a/tests/js/spec/views/issueList/overview.spec.jsx
+++ b/tests/js/spec/views/issueList/overview.spec.jsx
@@ -2,8 +2,8 @@ import {browserHistory} from 'react-router';
 import {clonedeep} from 'lodash';
 import React from 'react';
 
-import {initializeOrg} from 'app-test/helpers/initializeOrg';
-import {mount, shallow} from 'enzyme';
+import {initializeOrg} from 'sentry-test/initializeOrg';
+import {mountWithTheme, shallow} from 'sentry-test/enzyme';
 import ErrorRobot from 'app/components/errorRobot';
 import GroupStore from 'app/stores/groupStore';
 import IssueListWithStores, {IssueList} from 'app/views/issueList/overview';
@@ -157,7 +157,7 @@ describe('IssueList,', function() {
         },
       };
 
-      wrapper = mount(
+      wrapper = mountWithTheme(
         <IssueListWithStores {...newRouter} {...defaultProps} {...p} />,
         routerContext
       );
diff --git a/tests/js/spec/views/issueList/searchBar.spec.jsx b/tests/js/spec/views/issueList/searchBar.spec.jsx
index f859e1066e..cdedc93636 100644
--- a/tests/js/spec/views/issueList/searchBar.spec.jsx
+++ b/tests/js/spec/views/issueList/searchBar.spec.jsx
@@ -1,7 +1,7 @@
 import React from 'react';
 
-import {initializeOrg} from 'app-test/helpers/initializeOrg';
-import {mount} from 'enzyme';
+import {initializeOrg} from 'sentry-test/initializeOrg';
+import {mountWithTheme} from 'sentry-test/enzyme';
 import IssueListSearchBar from 'app/views/issueList/searchBar';
 import TagStore from 'app/stores/tagStore';
 
@@ -56,7 +56,7 @@ describe('IssueListSearchBar', function() {
         supportedTags,
         onSearch: jest.fn(),
       };
-      const searchBar = mount(<IssueListSearchBar {...props} />, routerContext);
+      const searchBar = mountWithTheme(<IssueListSearchBar {...props} />, routerContext);
       clickInput(searchBar);
       jest.advanceTimersByTime(301);
       expect(searchBar.find('SearchDropdown').prop('searchSubstring')).toEqual('"fu"');
@@ -79,7 +79,7 @@ describe('IssueListSearchBar', function() {
         onSearch: jest.fn(),
       };
 
-      const searchBar = mount(<IssueListSearchBar {...props} />, routerContext);
+      const searchBar = mountWithTheme(<IssueListSearchBar {...props} />, routerContext);
       clickInput(searchBar);
       expect(searchBar.state.searchTerm).toEqual();
       expect(searchBar.find('SearchDropdown').prop('searchSubstring')).toEqual(
@@ -101,7 +101,7 @@ describe('IssueListSearchBar', function() {
         supportedTags,
         onSearch: jest.fn(),
       };
-      const searchBar = mount(<IssueListSearchBar {...props} />, routerContext);
+      const searchBar = mountWithTheme(<IssueListSearchBar {...props} />, routerContext);
       clickInput(searchBar);
       jest.advanceTimersByTime(301);
       expect(loader).not.toHaveBeenCalled();
@@ -129,7 +129,7 @@ describe('IssueListSearchBar', function() {
         tagValueLoader: loader,
         supportedTags,
       };
-      const searchBar = mount(<IssueListSearchBar {...props} />, routerContext);
+      const searchBar = mountWithTheme(<IssueListSearchBar {...props} />, routerContext);
       clickInput(searchBar);
       jest.advanceTimersByTime(301);
       expect(searchBar.find('SearchDropdown').prop('searchSubstring')).toEqual('"fu"');
@@ -162,7 +162,7 @@ describe('IssueListSearchBar', function() {
         supportedTags,
       };
       jest.useRealTimers();
-      const wrapper = mount(<IssueListSearchBar {...props} />, routerContext);
+      const wrapper = mountWithTheme(<IssueListSearchBar {...props} />, routerContext);
 
       wrapper.find('input').simulate('change', {target: {value: 'is:'}});
       await tick();
@@ -190,7 +190,7 @@ describe('IssueListSearchBar', function() {
         supportedTags,
       };
       jest.useRealTimers();
-      const wrapper = mount(<IssueListSearchBar {...props} />, routerContext);
+      const wrapper = mountWithTheme(<IssueListSearchBar {...props} />, routerContext);
 
       wrapper.find('input').simulate('change', {target: {value: 'is:'}});
       await tick();
@@ -247,7 +247,7 @@ describe('IssueListSearchBar', function() {
         supportedTags,
         organization,
       };
-      const searchBar = mount(<IssueListSearchBar {...props} />, routerContext);
+      const searchBar = mountWithTheme(<IssueListSearchBar {...props} />, routerContext);
       expect(searchBar.find('[data-test-id="pin-icon"]')).toHaveLength(2);
     });
 
@@ -259,7 +259,7 @@ describe('IssueListSearchBar', function() {
         supportedTags,
         organization,
       };
-      const searchBar = mount(<IssueListSearchBar {...props} />, routerContext);
+      const searchBar = mountWithTheme(<IssueListSearchBar {...props} />, routerContext);
       searchBar.find('button[aria-label="Pin this search"]').simulate('click');
 
       expect(pinSearch).toHaveBeenLastCalledWith(
@@ -283,7 +283,7 @@ describe('IssueListSearchBar', function() {
         organization,
         pinnedSearch: {id: '1', query: 'url:"fu"'},
       };
-      const searchBar = mount(<IssueListSearchBar {...props} />, routerContext);
+      const searchBar = mountWithTheme(<IssueListSearchBar {...props} />, routerContext);
       searchBar.find('button[aria-label="Unpin this search"]').simulate('click');
 
       expect(unpinSearch).toHaveBeenLastCalledWith(
diff --git a/tests/js/spec/views/issueList/tagFilter.spec.jsx b/tests/js/spec/views/issueList/tagFilter.spec.jsx
index c63fd5ee59..89a3c04eb6 100644
--- a/tests/js/spec/views/issueList/tagFilter.spec.jsx
+++ b/tests/js/spec/views/issueList/tagFilter.spec.jsx
@@ -1,5 +1,5 @@
 import React from 'react';
-import {mount} from 'enzyme';
+import {mountWithTheme} from 'sentry-test/enzyme';
 
 import IssueListTagFilter from 'app/views/issueList/tagFilter';
 
@@ -31,7 +31,7 @@ describe('IssueListTagFilter', function() {
   it('calls API and renders options when opened', async function() {
     const selectMock = jest.fn();
     const tag = {key: 'browser', name: 'Browser'};
-    const wrapper = mount(
+    const wrapper = mountWithTheme(
       <IssueListTagFilter
         tag={tag}
         projectId={project.slug}
@@ -57,7 +57,7 @@ describe('IssueListTagFilter', function() {
   it('calls API and renders options when opened without project', async function() {
     const selectMock = jest.fn();
     const tag = {key: 'browser', name: 'Browser'};
-    const wrapper = mount(
+    const wrapper = mountWithTheme(
       <IssueListTagFilter
         tag={tag}
         value=""
diff --git a/tests/js/spec/views/onboarding/onboarding.spec.jsx b/tests/js/spec/views/onboarding/onboarding.spec.jsx
index d1199fd08e..c054379ac5 100644
--- a/tests/js/spec/views/onboarding/onboarding.spec.jsx
+++ b/tests/js/spec/views/onboarding/onboarding.spec.jsx
@@ -1,8 +1,8 @@
 import {browserHistory} from 'react-router';
 import React from 'react';
 
-import {initializeOrg} from 'app-test/helpers/initializeOrg';
-import {mount} from 'enzyme';
+import {initializeOrg} from 'sentry-test/initializeOrg';
+import {mountWithTheme} from 'sentry-test/enzyme';
 import Onboarding, {stepPropTypes} from 'app/views/onboarding/onboarding';
 import ProjectsStore from 'app/stores/projectsStore';
 
@@ -59,7 +59,10 @@ describe('Onboarding', function() {
       orgId: 'org-bar',
     };
 
-    mount(<Onboarding steps={MOCKED_STEPS} params={params} />, TestStubs.routerContext());
+    mountWithTheme(
+      <Onboarding steps={MOCKED_STEPS} params={params} />,
+      TestStubs.routerContext()
+    );
 
     expect(browserHistory.replace).toHaveBeenCalledWith('/onboarding/org-bar/step1/');
   });
@@ -70,7 +73,7 @@ describe('Onboarding', function() {
       orgId: 'org-bar',
     };
 
-    const wrapper = mount(
+    const wrapper = mountWithTheme(
       <Onboarding steps={MOCKED_STEPS} params={params} />,
       TestStubs.routerContext()
     );
@@ -100,7 +103,7 @@ describe('Onboarding', function() {
       orgId: 'org-bar',
     };
 
-    const wrapper = mount(
+    const wrapper = mountWithTheme(
       <Onboarding steps={MOCKED_STEPS} params={params} />,
       TestStubs.routerContext()
     );
@@ -115,7 +118,7 @@ describe('Onboarding', function() {
       orgId: 'org-bar',
     };
 
-    const wrapper = mount(
+    const wrapper = mountWithTheme(
       <Onboarding steps={MOCKED_STEPS} params={params} />,
       TestStubs.routerContext()
     );
@@ -157,7 +160,7 @@ describe('Onboarding', function() {
       orgId: 'org-bar',
     };
 
-    const wrapper = mount(
+    const wrapper = mountWithTheme(
       <Onboarding steps={MOCKED_STEPS} params={params} />,
       TestStubs.routerContext()
     );
@@ -186,7 +189,7 @@ describe('Onboarding', function() {
       orgId: organization.slug,
     };
 
-    const wrapper = mount(
+    const wrapper = mountWithTheme(
       <Onboarding steps={MOCKED_STEPS} params={params} />,
       routerContext
     );
diff --git a/tests/js/spec/views/onboarding/platform.spec.jsx b/tests/js/spec/views/onboarding/platform.spec.jsx
index 5d11ddc0fa..db2004fa93 100644
--- a/tests/js/spec/views/onboarding/platform.spec.jsx
+++ b/tests/js/spec/views/onboarding/platform.spec.jsx
@@ -1,7 +1,7 @@
 import React from 'react';
 
 import {createProject} from 'app/actionCreators/projects';
-import {mount} from 'enzyme';
+import {mountWithTheme} from 'sentry-test/enzyme';
 import OnboardingPlatform from 'app/views/onboarding/platform';
 import TeamStore from 'app/stores/teamStore';
 
@@ -11,7 +11,7 @@ describe('OnboardingWelcome', function() {
   it('calls onUpdate when setting the platform', function() {
     const onUpdate = jest.fn();
 
-    const wrapper = mount(
+    const wrapper = mountWithTheme(
       <OnboardingPlatform active onUpdate={onUpdate} />,
       TestStubs.routerContext()
     );
@@ -28,7 +28,7 @@ describe('OnboardingWelcome', function() {
     const onUpdate = jest.fn();
     const onReturnToStep = jest.fn();
 
-    const wrapper = mount(
+    const wrapper = mountWithTheme(
       <OnboardingPlatform
         platform="csharp"
         onUpdate={onUpdate}
@@ -48,7 +48,7 @@ describe('OnboardingWelcome', function() {
   it('creates a project when no project exists', async function() {
     const onComplete = jest.fn();
 
-    const wrapper = mount(
+    const wrapper = mountWithTheme(
       <OnboardingPlatform active onComplete={onComplete} />,
       TestStubs.routerContext()
     );
@@ -86,7 +86,7 @@ describe('OnboardingWelcome', function() {
     createProject.mockReset();
     const onComplete = jest.fn();
 
-    const wrapper = mount(
+    const wrapper = mountWithTheme(
       <OnboardingPlatform
         active
         project={{id: '1', slug: 'test'}}
diff --git a/tests/js/spec/views/onboarding/projectSetup/eventWaiter.spec.jsx b/tests/js/spec/views/onboarding/projectSetup/eventWaiter.spec.jsx
index 2be21c9958..df29dd907e 100644
--- a/tests/js/spec/views/onboarding/projectSetup/eventWaiter.spec.jsx
+++ b/tests/js/spec/views/onboarding/projectSetup/eventWaiter.spec.jsx
@@ -1,6 +1,6 @@
 import React from 'react';
 
-import {mount} from 'enzyme';
+import {mount} from 'sentry-test/enzyme';
 import EventWaiter from 'app/views/onboarding/projectSetup/eventWaiter';
 
 jest.useFakeTimers();
diff --git a/tests/js/spec/views/onboarding/projectSetup/firstEventIndicator.spec.jsx b/tests/js/spec/views/onboarding/projectSetup/firstEventIndicator.spec.jsx
index fabb259632..7a28289968 100644
--- a/tests/js/spec/views/onboarding/projectSetup/firstEventIndicator.spec.jsx
+++ b/tests/js/spec/views/onboarding/projectSetup/firstEventIndicator.spec.jsx
@@ -1,13 +1,13 @@
 import React from 'react';
 
 import {Indicator} from 'app/views/onboarding/projectSetup/firstEventIndicator';
-import {mount} from 'enzyme';
+import {mountWithTheme} from 'sentry-test/enzyme';
 
 describe('FirstEventIndicator', function() {
   it('renders waiting status', async function() {
     const org = TestStubs.Organization();
 
-    const wrapper = mount(
+    const wrapper = mountWithTheme(
       <Indicator organization={org} firstIssue={null} />,
       TestStubs.routerContext()
     );
@@ -19,7 +19,7 @@ describe('FirstEventIndicator', function() {
     it('renders', function() {
       const org = TestStubs.Organization();
 
-      const wrapper = mount(
+      const wrapper = mountWithTheme(
         <Indicator organization={org} firstIssue={{id: 1}} />,
         TestStubs.routerContext()
       );
@@ -34,7 +34,7 @@ describe('FirstEventIndicator', function() {
       const org = TestStubs.Organization();
       const project = TestStubs.ProjectDetails({});
 
-      const wrapper = mount(
+      const wrapper = mountWithTheme(
         <Indicator organization={org} project={project} firstIssue />,
         TestStubs.routerContext()
       );
diff --git a/tests/js/spec/views/onboarding/projectSetup/inviteMembers.spec.jsx b/tests/js/spec/views/onboarding/projectSetup/inviteMembers.spec.jsx
index d1b6e5fe33..cd2ef6fd48 100644
--- a/tests/js/spec/views/onboarding/projectSetup/inviteMembers.spec.jsx
+++ b/tests/js/spec/views/onboarding/projectSetup/inviteMembers.spec.jsx
@@ -1,7 +1,7 @@
 import React from 'react';
 
-import {mount} from 'enzyme';
-import {selectByValue} from 'app-test/helpers/select';
+import {mountWithTheme} from 'sentry-test/enzyme';
+import {selectByValue} from 'sentry-test/select';
 import ConfigStore from 'app/stores/configStore';
 import InviteMembers from 'app/views/onboarding/projectSetup/inviteMembers';
 
@@ -21,7 +21,7 @@ describe('InviteMembers', function() {
   });
 
   it('displays an example email using their domain', function() {
-    const wrapper = mount(
+    const wrapper = mountWithTheme(
       <InviteMembers project={project} organization={org} />,
       TestStubs.routerContext()
     );
@@ -38,7 +38,7 @@ describe('InviteMembers', function() {
       body: {email: 'rick@morty.com'},
     });
 
-    const wrapper = mount(
+    const wrapper = mountWithTheme(
       <InviteMembers project={project} organization={org} />,
       TestStubs.routerContext()
     );
diff --git a/tests/js/spec/views/onboarding/welcome.spec.jsx b/tests/js/spec/views/onboarding/welcome.spec.jsx
index 1aeec8c964..f9cd613528 100644
--- a/tests/js/spec/views/onboarding/welcome.spec.jsx
+++ b/tests/js/spec/views/onboarding/welcome.spec.jsx
@@ -1,6 +1,6 @@
 import React from 'react';
 
-import {mount} from 'enzyme';
+import {mountWithTheme} from 'sentry-test/enzyme';
 import OnboardingWelcome from 'app/views/onboarding/welcome';
 import ConfigStore from 'app/stores/configStore';
 
@@ -9,7 +9,7 @@ describe('OnboardingWelcome', function() {
     const name = 'Rick Snachez';
     ConfigStore.loadInitialData({user: {name, options: {}}});
 
-    const wrapper = mount(<OnboardingWelcome />, TestStubs.routerContext());
+    const wrapper = mountWithTheme(<OnboardingWelcome />, TestStubs.routerContext());
 
     expect(
       wrapper
@@ -21,7 +21,7 @@ describe('OnboardingWelcome', function() {
 
   it('calls onComplete when progressing', function() {
     const onComplete = jest.fn();
-    const wrapper = mount(
+    const wrapper = mountWithTheme(
       <OnboardingWelcome active onComplete={onComplete} />,
       TestStubs.routerContext()
     );
@@ -36,7 +36,7 @@ describe('OnboardingWelcome', function() {
 
   it('disables the next step button when it is not active', function() {
     const onComplete = jest.fn();
-    const wrapper = mount(
+    const wrapper = mountWithTheme(
       <OnboardingWelcome onComplete={onComplete} />,
       TestStubs.routerContext()
     );
diff --git a/tests/js/spec/views/organizationActivity/index.spec.jsx b/tests/js/spec/views/organizationActivity/index.spec.jsx
index 4b02059edd..396870ef76 100644
--- a/tests/js/spec/views/organizationActivity/index.spec.jsx
+++ b/tests/js/spec/views/organizationActivity/index.spec.jsx
@@ -1,7 +1,7 @@
 import React from 'react';
-import {mount} from 'enzyme';
+import {mount} from 'sentry-test/enzyme';
 
-import {initializeOrg} from 'app-test/helpers/initializeOrg';
+import {initializeOrg} from 'sentry-test/initializeOrg';
 import OrganizationActivity from 'app/views/organizationActivity';
 
 describe('OrganizationUserFeedback', function() {
diff --git a/tests/js/spec/views/organizationContext.spec.jsx b/tests/js/spec/views/organizationContext.spec.jsx
index 31aa14cf0b..2d9b153eb2 100644
--- a/tests/js/spec/views/organizationContext.spec.jsx
+++ b/tests/js/spec/views/organizationContext.spec.jsx
@@ -1,6 +1,6 @@
 import React from 'react';
 
-import {mount} from 'enzyme';
+import {mount} from 'sentry-test/enzyme';
 import {openSudo} from 'app/actionCreators/modal';
 import ConfigStore from 'app/stores/configStore';
 import {OrganizationContext} from 'app/views/organizationContext';
diff --git a/tests/js/spec/views/organizationCreate.spec.jsx b/tests/js/spec/views/organizationCreate.spec.jsx
index 5e38fee75a..6db0434967 100644
--- a/tests/js/spec/views/organizationCreate.spec.jsx
+++ b/tests/js/spec/views/organizationCreate.spec.jsx
@@ -1,5 +1,5 @@
 import React from 'react';
-import {shallow} from 'enzyme';
+import {shallow} from 'sentry-test/enzyme';
 
 import ConfigStore from 'app/stores/configStore';
 import OrganizationCreate from 'app/views/organizationCreate';
diff --git a/tests/js/spec/views/organizationDetails/installPromptBanner.spec.jsx b/tests/js/spec/views/organizationDetails/installPromptBanner.spec.jsx
index 47ecd37371..77946a7cb4 100644
--- a/tests/js/spec/views/organizationDetails/installPromptBanner.spec.jsx
+++ b/tests/js/spec/views/organizationDetails/installPromptBanner.spec.jsx
@@ -1,5 +1,5 @@
 import React from 'react';
-import {shallow} from 'enzyme';
+import {shallow} from 'sentry-test/enzyme';
 import {InstallPromptBanner} from 'app/views/organizationDetails/installPromptBanner';
 
 describe('InstallPromptBanner', function() {
diff --git a/tests/js/spec/views/organizationDetails/organizationsDetails.spec.jsx b/tests/js/spec/views/organizationDetails/organizationsDetails.spec.jsx
index 0e8ed446d8..74853fee0d 100644
--- a/tests/js/spec/views/organizationDetails/organizationsDetails.spec.jsx
+++ b/tests/js/spec/views/organizationDetails/organizationsDetails.spec.jsx
@@ -1,5 +1,5 @@
 import React from 'react';
-import {mount} from 'enzyme';
+import {mountWithTheme} from 'sentry-test/enzyme';
 
 import OrganizationDetails from 'app/views/organizationDetails';
 
@@ -29,7 +29,7 @@ describe('OrganizationDetails', function() {
             },
           }),
         });
-        const tree = mount(
+        const tree = mountWithTheme(
           <OrganizationDetails params={{orgId: 'org-slug'}} location={{}} routes={[]} />,
           TestStubs.routerContext()
         );
@@ -55,7 +55,7 @@ describe('OrganizationDetails', function() {
             },
           }),
         });
-        const tree = mount(
+        const tree = mountWithTheme(
           <OrganizationDetails params={{orgId: 'org-slug'}} location={{}} routes={[]} />,
           TestStubs.routerContext()
         );
@@ -87,7 +87,7 @@ describe('OrganizationDetails', function() {
       });
 
       it('should render a deletion in progress prompt', async function() {
-        const tree = mount(
+        const tree = mountWithTheme(
           <OrganizationDetails params={{orgId: 'org-slug'}} location={{}} routes={[]} />,
           TestStubs.routerContext()
         );
diff --git a/tests/js/spec/views/organizationGroupDetails/actions.spec.jsx b/tests/js/spec/views/organizationGroupDetails/actions.spec.jsx
index 051159e088..b021613b49 100644
--- a/tests/js/spec/views/organizationGroupDetails/actions.spec.jsx
+++ b/tests/js/spec/views/organizationGroupDetails/actions.spec.jsx
@@ -1,5 +1,5 @@
 import React from 'react';
-import {shallow} from 'enzyme';
+import {shallow} from 'sentry-test/enzyme';
 
 import GroupActions from 'app/views/organizationGroupDetails/actions';
 import ConfigStore from 'app/stores/configStore';
diff --git a/tests/js/spec/views/organizationGroupDetails/groupActivity.spec.jsx b/tests/js/spec/views/organizationGroupDetails/groupActivity.spec.jsx
index 56092b3686..f697f25c60 100644
--- a/tests/js/spec/views/organizationGroupDetails/groupActivity.spec.jsx
+++ b/tests/js/spec/views/organizationGroupDetails/groupActivity.spec.jsx
@@ -1,8 +1,8 @@
 import React from 'react';
 
 import {GroupActivity} from 'app/views/organizationGroupDetails/groupActivity';
-import {initializeOrg} from 'app-test/helpers/initializeOrg';
-import {mount} from 'enzyme';
+import {initializeOrg} from 'sentry-test/initializeOrg';
+import {mountWithTheme} from 'sentry-test/enzyme';
 import ConfigStore from 'app/stores/configStore';
 import GroupStore from 'app/stores/groupStore';
 import NoteInput from 'app/components/activity/note/input';
@@ -36,7 +36,7 @@ describe('GroupActivity', function() {
   afterEach(function() {});
 
   it('renders a NoteInput', function() {
-    const wrapper = mount(
+    const wrapper = mountWithTheme(
       <GroupActivity
         api={new MockApiClient()}
         group={group}
@@ -56,7 +56,7 @@ describe('GroupActivity', function() {
         url: '/issues/1337/comments/note-1/',
         method: 'DELETE',
       });
-      wrapper = mount(
+      wrapper = mountWithTheme(
         <GroupActivity
           api={new MockApiClient()}
           group={group}
diff --git a/tests/js/spec/views/organizationGroupDetails/groupEventDetails.spec.jsx b/tests/js/spec/views/organizationGroupDetails/groupEventDetails.spec.jsx
index f70056974d..554bd3dc87 100644
--- a/tests/js/spec/views/organizationGroupDetails/groupEventDetails.spec.jsx
+++ b/tests/js/spec/views/organizationGroupDetails/groupEventDetails.spec.jsx
@@ -1,8 +1,8 @@
 import React from 'react';
-import {mount} from 'enzyme';
+import {mountWithTheme} from 'sentry-test/enzyme';
 import {browserHistory} from 'react-router';
 
-import {initializeOrg} from 'app-test/helpers/initializeOrg';
+import {initializeOrg} from 'sentry-test/initializeOrg';
 import GroupEventDetails from 'app/views/organizationGroupDetails/groupEventDetails/groupEventDetails';
 
 describe('groupEventDetails', () => {
@@ -115,7 +115,7 @@ describe('groupEventDetails', () => {
   });
 
   it('redirects on switching to an invalid environment selection for event', async function() {
-    const wrapper = mount(
+    const wrapper = mountWithTheme(
       <GroupEventDetails
         api={new MockApiClient()}
         group={group}
@@ -136,7 +136,7 @@ describe('groupEventDetails', () => {
   });
 
   it('does not redirect when switching to a valid environment selection for event', async function() {
-    const wrapper = mount(
+    const wrapper = mountWithTheme(
       <GroupEventDetails
         api={new MockApiClient()}
         group={group}
@@ -172,7 +172,7 @@ describe('groupEventDetails', () => {
       body: event,
     });
 
-    const wrapper = mount(
+    const wrapper = mountWithTheme(
       <GroupEventDetails
         api={new MockApiClient()}
         group={group}
@@ -224,7 +224,7 @@ describe('groupEventDetails', () => {
         ],
       });
 
-      const wrapper = mount(
+      const wrapper = mountWithTheme(
         <GroupEventDetails
           api={new MockApiClient()}
           group={group}
@@ -254,7 +254,7 @@ describe('groupEventDetails', () => {
         ],
       });
 
-      const wrapper = mount(
+      const wrapper = mountWithTheme(
         <GroupEventDetails
           api={new MockApiClient()}
           group={group}
@@ -279,7 +279,7 @@ describe('groupEventDetails', () => {
         body: [],
       });
 
-      const wrapper = mount(
+      const wrapper = mountWithTheme(
         <GroupEventDetails
           api={new MockApiClient()}
           group={group}
@@ -305,7 +305,7 @@ describe('groupEventDetails', () => {
         body: null,
       });
 
-      const wrapper = mount(
+      const wrapper = mountWithTheme(
         <GroupEventDetails
           api={new MockApiClient()}
           group={group}
@@ -331,8 +331,8 @@ describe('groupEventDetails', () => {
     let orgIntegrationsRequest;
     let componentsRequest;
 
-    const mountWrapper = () => {
-      return mount(
+    const mountWithThemeWrapper = () => {
+      return mountWithTheme(
         <GroupEventDetails
           api={new MockApiClient()}
           group={group}
@@ -396,7 +396,7 @@ describe('groupEventDetails', () => {
         body: [unpublishedIntegration, internalIntegration],
       });
 
-      wrapper = mountWrapper();
+      wrapper = mountWithThemeWrapper();
     });
 
     it('loads Integrations', () => {
diff --git a/tests/js/spec/views/organizationGroupDetails/groupEventDetailsContainer.spec.jsx b/tests/js/spec/views/organizationGroupDetails/groupEventDetailsContainer.spec.jsx
index 5f9fd29ca3..151ff187d9 100644
--- a/tests/js/spec/views/organizationGroupDetails/groupEventDetailsContainer.spec.jsx
+++ b/tests/js/spec/views/organizationGroupDetails/groupEventDetailsContainer.spec.jsx
@@ -1,5 +1,5 @@
 import React from 'react';
-import {mount} from 'enzyme';
+import {mount} from 'sentry-test/enzyme';
 
 import OrganizationEnvironmentsStore from 'app/stores/organizationEnvironmentsStore';
 import GroupEventDetailsContainer from 'app/views/organizationGroupDetails/groupEventDetails';
diff --git a/tests/js/spec/views/organizationGroupDetails/groupMergedView.spec.jsx b/tests/js/spec/views/organizationGroupDetails/groupMergedView.spec.jsx
index b7c1660efa..e953c3117d 100644
--- a/tests/js/spec/views/organizationGroupDetails/groupMergedView.spec.jsx
+++ b/tests/js/spec/views/organizationGroupDetails/groupMergedView.spec.jsx
@@ -1,30 +1,30 @@
 import React from 'react';
 import PropTypes from 'prop-types';
 
-import {shallow} from 'enzyme';
+import {shallow} from 'sentry-test/enzyme';
 
 import {GroupMergedView} from 'app/views/organizationGroupDetails/groupMerged';
 import {Client} from 'app/api';
-import events from 'app-test/mocks/events';
 
 jest.mock('app/api');
 
-const mockData = {
-  merged: [
-    {
-      latestEvent: events[0],
-      state: 'unlocked',
-      id: '2c4887696f708c476a81ce4e834c4b02',
-    },
-    {
-      latestEvent: events[1],
-      state: 'unlocked',
-      id: 'e05da55328a860b21f62e371f0a7507d',
-    },
-  ],
-};
-
 describe('Issues -> Merged View', function() {
+  const events = TestStubs.DetailedEvents();
+  const mockData = {
+    merged: [
+      {
+        latestEvent: events[0],
+        state: 'unlocked',
+        id: '2c4887696f708c476a81ce4e834c4b02',
+      },
+      {
+        latestEvent: events[1],
+        state: 'unlocked',
+        id: 'e05da55328a860b21f62e371f0a7507d',
+      },
+    ],
+  };
+
   const context = {
     group: {
       id: 'id',
diff --git a/tests/js/spec/views/organizationGroupDetails/groupSimilar.spec.jsx b/tests/js/spec/views/organizationGroupDetails/groupSimilar.spec.jsx
index 00e7da9626..259caad065 100644
--- a/tests/js/spec/views/organizationGroupDetails/groupSimilar.spec.jsx
+++ b/tests/js/spec/views/organizationGroupDetails/groupSimilar.spec.jsx
@@ -1,40 +1,40 @@
 import {browserHistory} from 'react-router';
 import React from 'react';
 
-import {mount, shallow} from 'enzyme';
+import {mountWithTheme, shallow} from 'sentry-test/enzyme';
 
 import GroupSimilar from 'app/views/organizationGroupDetails/groupSimilar';
-import issues from 'app-test/mocks/issues';
 
-const project = TestStubs.Project({
-  features: ['similarity-view'],
-});
+describe('Issues Similar View', function() {
+  let mock;
+
+  const project = TestStubs.Project({
+    features: ['similarity-view'],
+  });
 
-const routerContext = TestStubs.routerContext([
-  {
-    router: {
-      ...TestStubs.router(),
-      params: {orgId: 'org-slug', projectId: 'project-slug', groupId: 'group-id'},
+  const routerContext = TestStubs.routerContext([
+    {
+      router: {
+        ...TestStubs.router(),
+        params: {orgId: 'org-slug', projectId: 'project-slug', groupId: 'group-id'},
+      },
+    },
+  ]);
+
+  const scores = [
+    {'exception:stacktrace:pairs': 0.375},
+    {'exception:stacktrace:pairs': 0.01264},
+    {'exception:stacktrace:pairs': 0.875},
+    {
+      'exception:stacktrace:application-chunks': 0.000235,
+      'exception:stacktrace:pairs': 0.001488,
     },
-  },
-]);
-
-const scores = [
-  {'exception:stacktrace:pairs': 0.375},
-  {'exception:stacktrace:pairs': 0.01264},
-  {'exception:stacktrace:pairs': 0.875},
-  {
-    'exception:stacktrace:application-chunks': 0.000235,
-    'exception:stacktrace:pairs': 0.001488,
-  },
-];
-
-const mockData = {
-  similar: issues.map((issue, i) => [issue, scores[i]]),
-};
+  ];
+
+  const mockData = {
+    similar: TestStubs.Groups().map((issue, i) => [issue, scores[i]]),
+  };
 
-describe('Issues Similar View', function() {
-  let mock;
   beforeEach(function() {
     mock = MockApiClient.addMockResponse({
       url: '/issues/group-id/similar/?limit=50',
@@ -52,7 +52,7 @@ describe('Issues Similar View', function() {
   });
 
   it('renders with mocked data', async function() {
-    const wrapper = mount(
+    const wrapper = mountWithTheme(
       <GroupSimilar
         project={project}
         query=""
@@ -70,7 +70,7 @@ describe('Issues Similar View', function() {
   });
 
   it('can merge and redirect to new parent', async function() {
-    const wrapper = mount(
+    const wrapper = mountWithTheme(
       <GroupSimilar
         project={project}
         params={{orgId: 'org-slug', projectId: 'project-slug', groupId: 'group-id'}}
diff --git a/tests/js/spec/views/organizationGroupDetails/groupTagValues.spec.jsx b/tests/js/spec/views/organizationGroupDetails/groupTagValues.spec.jsx
index 47cacffcb6..3b99043eb9 100644
--- a/tests/js/spec/views/organizationGroupDetails/groupTagValues.spec.jsx
+++ b/tests/js/spec/views/organizationGroupDetails/groupTagValues.spec.jsx
@@ -1,7 +1,7 @@
 import React from 'react';
 
-import {initializeOrg} from 'app-test/helpers/initializeOrg';
-import {mount} from 'enzyme';
+import {initializeOrg} from 'sentry-test/initializeOrg';
+import {mount} from 'sentry-test/enzyme';
 import GroupTagValues from 'app/views/organizationGroupDetails/groupTagValues';
 
 describe('GroupTagValues', function() {
diff --git a/tests/js/spec/views/organizationGroupDetails/groupTags.spec.jsx b/tests/js/spec/views/organizationGroupDetails/groupTags.spec.jsx
index 5232948f5d..b127b18f06 100644
--- a/tests/js/spec/views/organizationGroupDetails/groupTags.spec.jsx
+++ b/tests/js/spec/views/organizationGroupDetails/groupTags.spec.jsx
@@ -1,7 +1,7 @@
 import React from 'react';
 
-import {initializeOrg} from 'app-test/helpers/initializeOrg';
-import {mount} from 'enzyme';
+import {initializeOrg} from 'sentry-test/initializeOrg';
+import {mountWithTheme} from 'sentry-test/enzyme';
 import GroupTags from 'app/views/organizationGroupDetails/groupTags';
 
 describe('GroupTags', function() {
@@ -16,7 +16,7 @@ describe('GroupTags', function() {
   });
 
   it('navigates to issue details events tab with correct query params', function() {
-    const wrapper = mount(
+    const wrapper = mountWithTheme(
       <GroupTags
         group={group}
         query={{}}
diff --git a/tests/js/spec/views/organizationGroupDetails/organizationGroupEvents.spec.jsx b/tests/js/spec/views/organizationGroupDetails/organizationGroupEvents.spec.jsx
index 059da05816..559e7225b5 100644
--- a/tests/js/spec/views/organizationGroupDetails/organizationGroupEvents.spec.jsx
+++ b/tests/js/spec/views/organizationGroupDetails/organizationGroupEvents.spec.jsx
@@ -1,6 +1,6 @@
 import React from 'react';
 import PropTypes from 'prop-types';
-import {mount, shallow} from 'enzyme';
+import {mount, shallow} from 'sentry-test/enzyme';
 import {browserHistory} from 'react-router';
 
 import {GroupEvents} from 'app/views/organizationGroupDetails/groupEvents';
diff --git a/tests/js/spec/views/organizationIntegrations/integrationRepos.spec.jsx b/tests/js/spec/views/organizationIntegrations/integrationRepos.spec.jsx
index 52e847a02d..5270e09513 100644
--- a/tests/js/spec/views/organizationIntegrations/integrationRepos.spec.jsx
+++ b/tests/js/spec/views/organizationIntegrations/integrationRepos.spec.jsx
@@ -1,7 +1,7 @@
 import React from 'react';
 
 import {Client} from 'app/api';
-import {mount} from 'enzyme';
+import {mountWithTheme} from 'sentry-test/enzyme';
 import IntegrationRepos from 'app/views/organizationIntegrations/integrationRepos';
 
 describe('IntegrationRepos', function() {
@@ -26,7 +26,7 @@ describe('IntegrationRepos', function() {
         body: [],
       });
 
-      const wrapper = mount(
+      const wrapper = mountWithTheme(
         <IntegrationRepos integration={integration} />,
         routerContext
       );
@@ -54,7 +54,7 @@ describe('IntegrationRepos', function() {
         body: [],
       });
 
-      const wrapper = mount(
+      const wrapper = mountWithTheme(
         <IntegrationRepos integration={integration} />,
         routerContext
       );
@@ -105,7 +105,7 @@ describe('IntegrationRepos', function() {
         body: [],
       });
 
-      const wrapper = mount(
+      const wrapper = mountWithTheme(
         <IntegrationRepos integration={integration} />,
         routerContext
       );
@@ -143,7 +143,7 @@ describe('IntegrationRepos', function() {
         url: `/organizations/${org.slug}/repos/4/`,
         body: {},
       });
-      const wrapper = mount(
+      const wrapper = mountWithTheme(
         <IntegrationRepos integration={integration} />,
         routerContext
       );
@@ -176,7 +176,7 @@ describe('IntegrationRepos', function() {
         url: `/organizations/${org.slug}/repos/4/`,
         body: {},
       });
-      const wrapper = mount(
+      const wrapper = mountWithTheme(
         <IntegrationRepos integration={integration} />,
         routerContext
       );
diff --git a/tests/js/spec/views/organizationJoinRequest.spec.jsx b/tests/js/spec/views/organizationJoinRequest.spec.jsx
index 3bbbfc40d2..2ff5c2b37a 100644
--- a/tests/js/spec/views/organizationJoinRequest.spec.jsx
+++ b/tests/js/spec/views/organizationJoinRequest.spec.jsx
@@ -1,4 +1,4 @@
-import {mount} from 'enzyme';
+import {mountWithTheme} from 'sentry-test/enzyme';
 import React from 'react';
 
 import {addErrorMessage} from 'app/actionCreators/indicator';
@@ -15,7 +15,7 @@ describe('OrganizationJoinRequest', function() {
   });
 
   it('renders', function() {
-    const wrapper = mount(
+    const wrapper = mountWithTheme(
       <OrganizationJoinRequest params={{orgId: org.slug}} />,
       TestStubs.routerContext()
     );
@@ -31,7 +31,7 @@ describe('OrganizationJoinRequest', function() {
       method: 'POST',
     });
 
-    const wrapper = mount(
+    const wrapper = mountWithTheme(
       <OrganizationJoinRequest params={{orgId: org.slug}} />,
       TestStubs.routerContext()
     );
@@ -58,7 +58,7 @@ describe('OrganizationJoinRequest', function() {
       statusCode: 400,
     });
 
-    const wrapper = mount(
+    const wrapper = mountWithTheme(
       <OrganizationJoinRequest params={{orgId: org.slug}} />,
       TestStubs.routerContext()
     );
@@ -81,7 +81,7 @@ describe('OrganizationJoinRequest', function() {
 
   it('cancels', function() {
     const spy = jest.spyOn(window.location, 'assign').mockImplementation(() => {});
-    const wrapper = mount(
+    const wrapper = mountWithTheme(
       <OrganizationJoinRequest params={{orgId: org.slug}} />,
       TestStubs.routerContext()
     );
diff --git a/tests/js/spec/views/organizationReleases/list/releaseLanding.jsx b/tests/js/spec/views/organizationReleases/list/releaseLanding.jsx
deleted file mode 100644
index 7242992f17..0000000000
--- a/tests/js/spec/views/organizationReleases/list/releaseLanding.jsx
+++ /dev/null
@@ -1,38 +0,0 @@
-import React from 'react';
-import {mount} from 'enzyme';
-
-import ReleaseLanding from 'app/views/releases/list/releaseLanding';
-
-describe('ReleasesLanding', function() {
-  describe('renders and progresses', function() {
-    let wrapper;
-    beforeEach(function() {
-      wrapper = mount(<ReleaseLanding />, TestStubs.routerContext());
-    });
-
-    it('renders first step', function() {
-      expect(wrapper.find('Contributors')).toHaveLength(1);
-    });
-
-    it('renders next steps', function() {
-      wrapper.find('Button').simulate('click');
-      expect(wrapper.find('SuggestedAssignees')).toHaveLength(1);
-      wrapper.find('Button').simulate('click');
-      expect(wrapper.find('Issues')).toHaveLength(1);
-      wrapper.find('Button').simulate('click');
-      expect(wrapper.find('BashCard')).toHaveLength(1);
-      wrapper.find('Button').simulate('click');
-      expect(wrapper.find('Emails')).toHaveLength(1);
-    });
-
-    it('should show first card', function() {
-      expect(wrapper.find('ContributorsCard').exists()).toBe(true);
-      wrapper
-        .find('StyledButton')
-        .first()
-        .simulate('click');
-      expect(wrapper.find('StyledSuggestedAssignees').exists()).toBe(true);
-      expect(wrapper.find('ContributorsCard').exists()).toBe(false);
-    });
-  });
-});
diff --git a/tests/js/spec/views/organizationRoot.spec.jsx b/tests/js/spec/views/organizationRoot.spec.jsx
index 7fbb103302..848f46990d 100644
--- a/tests/js/spec/views/organizationRoot.spec.jsx
+++ b/tests/js/spec/views/organizationRoot.spec.jsx
@@ -1,5 +1,5 @@
 import React from 'react';
-import {mount} from 'enzyme';
+import {mount} from 'sentry-test/enzyme';
 
 import {OrganizationRoot} from 'app/views/organizationRoot';
 import {setActiveProject} from 'app/actionCreators/projects';
diff --git a/tests/js/spec/views/organizationTeamProjects.spec.jsx b/tests/js/spec/views/organizationTeamProjects.spec.jsx
index 2b88db4a52..b26c027a7b 100644
--- a/tests/js/spec/views/organizationTeamProjects.spec.jsx
+++ b/tests/js/spec/views/organizationTeamProjects.spec.jsx
@@ -1,11 +1,11 @@
 import React from 'react';
-import {mount} from 'enzyme';
+import {mountWithTheme} from 'sentry-test/enzyme';
 
 import {Client} from 'app/api';
 
 import {TeamProjects as OrganizationTeamProjects} from 'app/views/settings/organizationTeams/teamProjects';
 
-import {initializeOrg} from 'app-test/helpers/initializeOrg';
+import {initializeOrg} from 'sentry-test/initializeOrg';
 
 describe('OrganizationTeamProjects', function() {
   let team;
@@ -60,7 +60,7 @@ describe('OrganizationTeamProjects', function() {
   });
 
   it('fetches linked and unlinked projects', async function() {
-    mount(
+    mountWithTheme(
       <OrganizationTeamProjects
         api={new MockApiClient()}
         organization={organization}
@@ -77,7 +77,7 @@ describe('OrganizationTeamProjects', function() {
   });
 
   it('Should render', async function() {
-    const wrapper = mount(
+    const wrapper = mountWithTheme(
       <OrganizationTeamProjects
         api={new MockApiClient()}
         organization={organization}
@@ -100,7 +100,7 @@ describe('OrganizationTeamProjects', function() {
   });
 
   it('Should allow bookmarking', async function() {
-    const wrapper = mount(
+    const wrapper = mountWithTheme(
       <OrganizationTeamProjects
         api={new MockApiClient()}
         organization={organization}
@@ -127,7 +127,7 @@ describe('OrganizationTeamProjects', function() {
   });
 
   it('Should allow adding and removing projects', async function() {
-    const wrapper = mount(
+    const wrapper = mountWithTheme(
       <OrganizationTeamProjects
         api={new MockApiClient()}
         organization={organization}
@@ -161,7 +161,7 @@ describe('OrganizationTeamProjects', function() {
   });
 
   it('handles filtering unlinked projects', async function() {
-    const wrapper = mount(
+    const wrapper = mountWithTheme(
       <OrganizationTeamProjects
         api={new MockApiClient()}
         organization={organization}
diff --git a/tests/js/spec/views/ownershipInput.spec.jsx b/tests/js/spec/views/ownershipInput.spec.jsx
index 69f33020bd..59c5823b29 100644
--- a/tests/js/spec/views/ownershipInput.spec.jsx
+++ b/tests/js/spec/views/ownershipInput.spec.jsx
@@ -1,5 +1,5 @@
 import React from 'react';
-import {mount} from 'enzyme';
+import {mountWithTheme} from 'sentry-test/enzyme';
 
 import OwnerInput from 'app/views/settings/project/projectOwnership/ownerInput';
 
@@ -26,7 +26,7 @@ describe('Project Ownership Input', function() {
   });
 
   it('renders', function() {
-    const wrapper = mount(
+    const wrapper = mountWithTheme(
       <OwnerInput
         params={{orgId: org.slug, projectId: project.slug}}
         organization={org}
diff --git a/tests/js/spec/views/passwordForm.spec.jsx b/tests/js/spec/views/passwordForm.spec.jsx
index 4b95d75a57..33a23ce2ea 100644
--- a/tests/js/spec/views/passwordForm.spec.jsx
+++ b/tests/js/spec/views/passwordForm.spec.jsx
@@ -1,5 +1,5 @@
 import React from 'react';
-import {mount} from 'enzyme';
+import {mountWithTheme} from 'sentry-test/enzyme';
 
 import {Client} from 'app/api';
 import PasswordForm from 'app/views/settings/account/passwordForm';
@@ -26,7 +26,7 @@ describe('PasswordForm', function() {
       url: ENDPOINT,
       method: 'PUT',
     });
-    wrapper = mount(<PasswordForm />, routerContext);
+    wrapper = mountWithTheme(<PasswordForm />, routerContext);
   });
 
   it('has 3 text inputs', function() {
diff --git a/tests/js/spec/views/projectAlertSettings.spec.jsx b/tests/js/spec/views/projectAlertSettings.spec.jsx
index b769cc14d7..c9443267cf 100644
--- a/tests/js/spec/views/projectAlertSettings.spec.jsx
+++ b/tests/js/spec/views/projectAlertSettings.spec.jsx
@@ -1,5 +1,5 @@
 import React from 'react';
-import {shallow} from 'enzyme';
+import {shallow} from 'sentry-test/enzyme';
 
 import {Client} from 'app/api';
 import ProjectAlertSettings from 'app/views/settings/projectAlerts/projectAlertSettings';
diff --git a/tests/js/spec/views/projectChooser.spec.jsx b/tests/js/spec/views/projectChooser.spec.jsx
index 8d470253fe..848c77ba41 100644
--- a/tests/js/spec/views/projectChooser.spec.jsx
+++ b/tests/js/spec/views/projectChooser.spec.jsx
@@ -1,5 +1,5 @@
 import React from 'react';
-import {shallow} from 'enzyme';
+import {shallow} from 'sentry-test/enzyme';
 
 import ProjectChooser from 'app/views/projectChooser';
 
diff --git a/tests/js/spec/views/projectDebugFiles.spec.jsx b/tests/js/spec/views/projectDebugFiles.spec.jsx
index 1561ae5f4d..9e8b4301a6 100644
--- a/tests/js/spec/views/projectDebugFiles.spec.jsx
+++ b/tests/js/spec/views/projectDebugFiles.spec.jsx
@@ -1,5 +1,5 @@
 import React from 'react';
-import {shallow, mount} from 'enzyme';
+import {shallow, mount} from 'sentry-test/enzyme';
 
 import {Client} from 'app/api';
 import ProjectDebugFiles from 'app/views/settings/projectDebugFiles';
diff --git a/tests/js/spec/views/projectFilters.spec.jsx b/tests/js/spec/views/projectFilters.spec.jsx
index eaac0daab2..b6071d6a42 100644
--- a/tests/js/spec/views/projectFilters.spec.jsx
+++ b/tests/js/spec/views/projectFilters.spec.jsx
@@ -1,6 +1,6 @@
 import React from 'react';
 
-import {mount} from 'enzyme';
+import {mountWithTheme} from 'sentry-test/enzyme';
 import ProjectFilters from 'app/views/settings/project/projectFilters';
 
 describe('ProjectFilters', function() {
@@ -22,7 +22,7 @@ describe('ProjectFilters', function() {
     if (custom) {
       wrapper = custom();
     } else {
-      wrapper = mount(
+      wrapper = mountWithTheme(
         <ProjectFilters
           params={{projectId: project.slug, orgId: org.slug}}
           location={{}}
@@ -215,7 +215,7 @@ describe('ProjectFilters', function() {
 
   it('has custom inbound filters with flag + can change', function() {
     wrapper = creator(() => {
-      return mount(
+      return mountWithTheme(
         <ProjectFilters
           params={{projectId: project.slug, orgId: org.slug}}
           location={{}}
@@ -260,7 +260,7 @@ describe('ProjectFilters', function() {
   });
 
   it('disables configuration for non project:write users', function() {
-    wrapper = mount(
+    wrapper = mountWithTheme(
       <ProjectFilters
         params={{projectId: project.slug, orgId: org.slug}}
         location={{}}
diff --git a/tests/js/spec/views/projectInstall/newProject.spec.jsx b/tests/js/spec/views/projectInstall/newProject.spec.jsx
index ca23de44ea..be4ae6e3d5 100644
--- a/tests/js/spec/views/projectInstall/newProject.spec.jsx
+++ b/tests/js/spec/views/projectInstall/newProject.spec.jsx
@@ -1,5 +1,5 @@
 import React from 'react';
-import {shallow} from 'enzyme';
+import {shallow} from 'sentry-test/enzyme';
 
 import {Client} from 'app/api';
 import NewProject from 'app/views/projectInstall/newProject';
diff --git a/tests/js/spec/views/projectInstall/platform.spec.jsx b/tests/js/spec/views/projectInstall/platform.spec.jsx
index 3c8082447b..3d53816db5 100644
--- a/tests/js/spec/views/projectInstall/platform.spec.jsx
+++ b/tests/js/spec/views/projectInstall/platform.spec.jsx
@@ -1,7 +1,7 @@
 import {browserHistory} from 'react-router';
 import React from 'react';
 
-import {shallow, mount} from 'enzyme';
+import {shallow, mountWithTheme} from 'sentry-test/enzyme';
 import {ProjectInstallPlatform} from 'app/views/projectInstall/platform';
 
 describe('ProjectInstallPlatform', function() {
@@ -28,7 +28,7 @@ describe('ProjectInstallPlatform', function() {
         body: {},
       });
 
-      mount(
+      mountWithTheme(
         <ProjectInstallPlatform {...props} />,
         TestStubs.routerContext([{organization: {id: '1337'}}])
       );
@@ -86,7 +86,7 @@ describe('ProjectInstallPlatform', function() {
         body: {html: '<h1>Documentation here</h1>'},
       });
 
-      const wrapper = mount(
+      const wrapper = mountWithTheme(
         <ProjectInstallPlatform {...props} />,
         TestStubs.routerContext([{organization: {id: '1337'}}])
       );
diff --git a/tests/js/spec/views/projectKeyDetails.spec.jsx b/tests/js/spec/views/projectKeyDetails.spec.jsx
index 30044c4ae6..78df248938 100644
--- a/tests/js/spec/views/projectKeyDetails.spec.jsx
+++ b/tests/js/spec/views/projectKeyDetails.spec.jsx
@@ -1,4 +1,4 @@
-import {mount} from 'enzyme';
+import {mountWithTheme} from 'sentry-test/enzyme';
 import PropTypes from 'prop-types';
 import React from 'react';
 
@@ -76,7 +76,7 @@ describe('ProjectKeyDetails', function() {
     });
     const routerContext = TestStubs.routerContext();
 
-    wrapper = mount(
+    wrapper = mountWithTheme(
       <ProjectKeyDetails
         routes={[]}
         params={{
diff --git a/tests/js/spec/views/projectKeys.spec.jsx b/tests/js/spec/views/projectKeys.spec.jsx
index de15d19519..2c566101a1 100644
--- a/tests/js/spec/views/projectKeys.spec.jsx
+++ b/tests/js/spec/views/projectKeys.spec.jsx
@@ -1,7 +1,7 @@
 import PropTypes from 'prop-types';
 import React from 'react';
 
-import {mount} from 'enzyme';
+import {mountWithTheme} from 'sentry-test/enzyme';
 import ProjectKeys from 'app/views/settings/project/projectKeys';
 
 describe('ProjectKeys', function() {
@@ -26,7 +26,7 @@ describe('ProjectKeys', function() {
     });
     const routerContext = TestStubs.routerContext();
 
-    wrapper = mount(
+    wrapper = mountWithTheme(
       <ProjectKeys routes={[]} params={{orgId: org.slug, projectId: project.slug}} />,
       {
         ...routerContext,
@@ -50,7 +50,7 @@ describe('ProjectKeys', function() {
       body: [],
     });
 
-    wrapper = mount(
+    wrapper = mountWithTheme(
       <ProjectKeys routes={[]} params={{orgId: org.slug, projectId: project.slug}} />,
       TestStubs.routerContext()
     );
diff --git a/tests/js/spec/views/projectOwnership.spec.jsx b/tests/js/spec/views/projectOwnership.spec.jsx
index 66af446d5d..03aa0801cb 100644
--- a/tests/js/spec/views/projectOwnership.spec.jsx
+++ b/tests/js/spec/views/projectOwnership.spec.jsx
@@ -1,5 +1,5 @@
 import React from 'react';
-import {shallow} from 'enzyme';
+import {shallow} from 'sentry-test/enzyme';
 
 import {Client} from 'app/api';
 import ProjectOwnership from 'app/views/settings/project/projectOwnership';
diff --git a/tests/js/spec/views/projectPluginDetails.spec.jsx b/tests/js/spec/views/projectPluginDetails.spec.jsx
index 2a6dd49864..d134fdb6e0 100644
--- a/tests/js/spec/views/projectPluginDetails.spec.jsx
+++ b/tests/js/spec/views/projectPluginDetails.spec.jsx
@@ -1,5 +1,5 @@
 import React from 'react';
-import {mount} from 'enzyme';
+import {mountWithTheme} from 'sentry-test/enzyme';
 
 import ProjectPluginDetailsContainer, {
   ProjectPluginDetails,
@@ -47,7 +47,7 @@ describe('ProjectPluginDetails', function() {
       },
     });
 
-    component = mount(
+    component = mountWithTheme(
       <ProjectPluginDetailsContainer
         organization={org}
         project={project}
@@ -69,7 +69,7 @@ describe('ProjectPluginDetails', function() {
 
   it('resets plugin', function() {
     // Test component instead of container so that we can access state
-    const wrapper = mount(
+    const wrapper = mountWithTheme(
       <ProjectPluginDetails
         organization={org}
         project={project}
diff --git a/tests/js/spec/views/projectPlugins/__snapshots__/projectPluginsRow.spec.jsx.snap b/tests/js/spec/views/projectPlugins/__snapshots__/projectPluginsRow.spec.jsx.snap
index 5377c1bfec..eabbc9beef 100644
--- a/tests/js/spec/views/projectPlugins/__snapshots__/projectPluginsRow.spec.jsx.snap
+++ b/tests/js/spec/views/projectPlugins/__snapshots__/projectPluginsRow.spec.jsx.snap
@@ -235,7 +235,7 @@ exports[`ProjectPluginRow renders 1`] = `
                 >
                   <button
                     aria-checked={false}
-                    className="css-1vudn4r-SwitchButton e1wgeblw0"
+                    className="css-qiticg-SwitchButton e1wgeblw0"
                     data-test-id="switch"
                     onClick={[Function]}
                     role="checkbox"
@@ -248,7 +248,7 @@ exports[`ProjectPluginRow renders 1`] = `
                       size="lg"
                     >
                       <span
-                        className="css-1uoqc08-Toggle e1wgeblw1"
+                        className="css-pa284f-Toggle e1wgeblw1"
                         size="lg"
                       />
                     </Toggle>
diff --git a/tests/js/spec/views/projectPlugins/index.spec.jsx b/tests/js/spec/views/projectPlugins/index.spec.jsx
index 80a05bdbb7..17ca31eb9f 100644
--- a/tests/js/spec/views/projectPlugins/index.spec.jsx
+++ b/tests/js/spec/views/projectPlugins/index.spec.jsx
@@ -1,5 +1,5 @@
 import React from 'react';
-import {mount} from 'enzyme';
+import {mount} from 'sentry-test/enzyme';
 
 import ProjectPlugins from 'app/views/settings/projectPlugins';
 import {fetchPlugins, enablePlugin, disablePlugin} from 'app/actionCreators/plugins';
diff --git a/tests/js/spec/views/projectPlugins/projectPlugins.spec.jsx b/tests/js/spec/views/projectPlugins/projectPlugins.spec.jsx
index b562b7941f..d30f2aa321 100644
--- a/tests/js/spec/views/projectPlugins/projectPlugins.spec.jsx
+++ b/tests/js/spec/views/projectPlugins/projectPlugins.spec.jsx
@@ -1,5 +1,5 @@
 import React from 'react';
-import {shallow} from 'enzyme';
+import {shallow} from 'sentry-test/enzyme';
 import ProjectPlugins from 'app/views/settings/projectPlugins/projectPlugins';
 
 describe('ProjectPlugins', function() {
diff --git a/tests/js/spec/views/projectPlugins/projectPluginsRow.spec.jsx b/tests/js/spec/views/projectPlugins/projectPluginsRow.spec.jsx
index fb63c103ac..81062a2bf9 100644
--- a/tests/js/spec/views/projectPlugins/projectPluginsRow.spec.jsx
+++ b/tests/js/spec/views/projectPlugins/projectPluginsRow.spec.jsx
@@ -1,5 +1,5 @@
 import React from 'react';
-import {mount} from 'enzyme';
+import {mount} from 'sentry-test/enzyme';
 import ProjectPluginRow from 'app/views/settings/projectPlugins/projectPluginRow';
 
 describe('ProjectPluginRow', function() {
diff --git a/tests/js/spec/views/projectSecurityHeaders/projectCspReports.spec.jsx b/tests/js/spec/views/projectSecurityHeaders/projectCspReports.spec.jsx
index 19d14c42bc..ee053fede8 100644
--- a/tests/js/spec/views/projectSecurityHeaders/projectCspReports.spec.jsx
+++ b/tests/js/spec/views/projectSecurityHeaders/projectCspReports.spec.jsx
@@ -1,6 +1,6 @@
 import React from 'react';
 
-import {mount, shallow} from 'enzyme';
+import {mountWithTheme, shallow} from 'sentry-test/enzyme';
 import ProjectCspReports from 'app/views/settings/projectSecurityHeaders/csp';
 
 describe('ProjectCspReports', function() {
@@ -42,7 +42,7 @@ describe('ProjectCspReports', function() {
   });
 
   it('can enable default ignored sources', function() {
-    const wrapper = mount(
+    const wrapper = mountWithTheme(
       <ProjectCspReports
         organization={org}
         project={project}
@@ -79,7 +79,7 @@ describe('ProjectCspReports', function() {
   });
 
   it('can set additional ignored sources', function() {
-    const wrapper = mount(
+    const wrapper = mountWithTheme(
       <ProjectCspReports
         organization={org}
         project={project}
diff --git a/tests/js/spec/views/projectSecurityHeaders/projectExpectCtReports.spec.jsx b/tests/js/spec/views/projectSecurityHeaders/projectExpectCtReports.spec.jsx
index 52e3074800..de307e95c5 100644
--- a/tests/js/spec/views/projectSecurityHeaders/projectExpectCtReports.spec.jsx
+++ b/tests/js/spec/views/projectSecurityHeaders/projectExpectCtReports.spec.jsx
@@ -1,6 +1,6 @@
 import React from 'react';
 
-import {shallow} from 'enzyme';
+import {shallow} from 'sentry-test/enzyme';
 import ProjectExpectCtReports from 'app/views/settings/projectSecurityHeaders/expectCt';
 
 describe('ProjectExpectCtReports', function() {
diff --git a/tests/js/spec/views/projectSecurityHeaders/projectHpkpReports.spec.jsx b/tests/js/spec/views/projectSecurityHeaders/projectHpkpReports.spec.jsx
index 290a02661c..a62f5193b2 100644
--- a/tests/js/spec/views/projectSecurityHeaders/projectHpkpReports.spec.jsx
+++ b/tests/js/spec/views/projectSecurityHeaders/projectHpkpReports.spec.jsx
@@ -1,6 +1,6 @@
 import React from 'react';
 
-import {shallow} from 'enzyme';
+import {shallow} from 'sentry-test/enzyme';
 import ProjectHpkpReports from 'app/views/settings/projectSecurityHeaders/hpkp';
 
 describe('ProjectHpkpReports', function() {
diff --git a/tests/js/spec/views/projectSecurityHeaders/projectSecurityHeaders.spec.jsx b/tests/js/spec/views/projectSecurityHeaders/projectSecurityHeaders.spec.jsx
index 4a3978204a..e39a21d9e7 100644
--- a/tests/js/spec/views/projectSecurityHeaders/projectSecurityHeaders.spec.jsx
+++ b/tests/js/spec/views/projectSecurityHeaders/projectSecurityHeaders.spec.jsx
@@ -1,6 +1,6 @@
 import React from 'react';
 
-import {shallow} from 'enzyme';
+import {shallow} from 'sentry-test/enzyme';
 import ProjectSecurityHeaders from 'app/views/settings/projectSecurityHeaders';
 
 describe('ProjectSecurityHeaders', function() {
diff --git a/tests/js/spec/views/projectTags.spec.jsx b/tests/js/spec/views/projectTags.spec.jsx
index 434695cf8c..d21d544314 100644
--- a/tests/js/spec/views/projectTags.spec.jsx
+++ b/tests/js/spec/views/projectTags.spec.jsx
@@ -2,7 +2,7 @@ import React from 'react';
 
 import $ from 'jquery';
 
-import {mount} from 'enzyme';
+import {mountWithTheme} from 'sentry-test/enzyme';
 import ProjectTags from 'app/views/settings/projectTags';
 
 describe('ProjectTags', function() {
@@ -23,7 +23,7 @@ describe('ProjectTags', function() {
       method: 'DELETE',
     });
 
-    wrapper = mount(
+    wrapper = mountWithTheme(
       <ProjectTags params={{orgId: org.slug, projectId: project.slug}} />,
       TestStubs.routerContext()
     );
@@ -37,7 +37,7 @@ describe('ProjectTags', function() {
       body: [],
     });
 
-    wrapper = mount(
+    wrapper = mountWithTheme(
       <ProjectTags params={{orgId: org.slug, projectId: project.slug}} />,
       TestStubs.routerContext()
     );
@@ -50,7 +50,7 @@ describe('ProjectTags', function() {
       organization: TestStubs.Organization({access: []}),
     };
 
-    wrapper = mount(
+    wrapper = mountWithTheme(
       <ProjectTags params={{orgId: org.slug, projectId: project.slug}} />,
       TestStubs.routerContext([context])
     );
diff --git a/tests/js/spec/views/projectTeams.spec.jsx b/tests/js/spec/views/projectTeams.spec.jsx
index caad1df347..fd848b2c6c 100644
--- a/tests/js/spec/views/projectTeams.spec.jsx
+++ b/tests/js/spec/views/projectTeams.spec.jsx
@@ -1,6 +1,6 @@
 import React from 'react';
 
-import {shallow, mount} from 'enzyme';
+import {shallow, mountWithTheme} from 'sentry-test/enzyme';
 import App from 'app/views/app';
 import ProjectTeams from 'app/views/settings/project/projectTeams';
 import * as modals from 'app/actionCreators/modal';
@@ -81,7 +81,7 @@ describe('ProjectTeams', function() {
       statusCode: 200,
     });
 
-    const wrapper = mount(
+    const wrapper = mountWithTheme(
       <ProjectTeams
         params={{orgId: org.slug, projectId: project.slug}}
         organization={org}
@@ -160,7 +160,7 @@ describe('ProjectTeams', function() {
       ],
     });
 
-    const wrapper = mount(
+    const wrapper = mountWithTheme(
       <ProjectTeams
         params={{orgId: org.slug, projectId: project.slug}}
         organization={org}
@@ -214,7 +214,7 @@ describe('ProjectTeams', function() {
       statusCode: 200,
     });
 
-    const wrapper = mount(
+    const wrapper = mountWithTheme(
       <ProjectTeams
         params={{orgId: org.slug, projectId: project.slug}}
         organization={org}
@@ -264,7 +264,7 @@ describe('ProjectTeams', function() {
       body: {slug: 'new-team'},
     });
 
-    const wrapper = mount(
+    const wrapper = mountWithTheme(
       <App params={{orgId: org.slug}}>
         <ProjectTeams
           params={{orgId: org.slug, projectId: project.slug}}
diff --git a/tests/js/spec/views/projects/projectContext.spec.jsx b/tests/js/spec/views/projects/projectContext.spec.jsx
index ef9051c200..e8a88cffe8 100644
--- a/tests/js/spec/views/projects/projectContext.spec.jsx
+++ b/tests/js/spec/views/projects/projectContext.spec.jsx
@@ -1,5 +1,5 @@
 import React from 'react';
-import {mount} from 'enzyme';
+import {mount} from 'sentry-test/enzyme';
 
 import {ProjectContext} from 'app/views/projects/projectContext';
 
diff --git a/tests/js/spec/views/projectsDashboard/index.spec.jsx b/tests/js/spec/views/projectsDashboard/index.spec.jsx
index 45f67e7f04..68996d58f6 100644
--- a/tests/js/spec/views/projectsDashboard/index.spec.jsx
+++ b/tests/js/spec/views/projectsDashboard/index.spec.jsx
@@ -1,5 +1,5 @@
 import React from 'react';
-import {shallow, mount} from 'enzyme';
+import {shallow, mountWithTheme} from 'sentry-test/enzyme';
 
 import {Dashboard} from 'app/views/projectsDashboard';
 import ProjectsStatsStore from 'app/stores/projectsStatsStore';
@@ -25,7 +25,7 @@ jest.mock('lodash/debounce', () => {
   return mockDebounce;
 });
 
-describe('OrganizationDashboard', function() {
+describe('ProjectsDashboard', function() {
   const org = TestStubs.Organization();
   const routerContext = TestStubs.routerContext([
     {router: TestStubs.router({params: {orgId: org.slug}})},
@@ -48,7 +48,7 @@ describe('OrganizationDashboard', function() {
 
   describe('empty state', function() {
     it('renders with no projects', function() {
-      const wrapper = mount(
+      const wrapper = mountWithTheme(
         <Dashboard
           teams={teams}
           projects={[]}
@@ -65,7 +65,7 @@ describe('OrganizationDashboard', function() {
     it('renders with 1 project, with no first event', function() {
       const projects = [TestStubs.Project({teams})];
 
-      const wrapper = mount(
+      const wrapper = mountWithTheme(
         <Dashboard
           teams={teams}
           projects={projects}
@@ -168,7 +168,7 @@ describe('OrganizationDashboard', function() {
       });
 
       jest.useFakeTimers();
-      const wrapper = mount(
+      const wrapper = mountWithTheme(
         <Dashboard
           teams={teams}
           projects={projects}
@@ -243,7 +243,7 @@ describe('OrganizationDashboard', function() {
         })),
       });
 
-      const wrapper = mount(
+      const wrapper = mountWithTheme(
         <Dashboard
           teams={teams}
           projects={projects}
diff --git a/tests/js/spec/views/projectsDashboard/noProjectMessage.spec.jsx b/tests/js/spec/views/projectsDashboard/noProjectMessage.spec.jsx
index ffa5f07f24..6df80e7ffe 100644
--- a/tests/js/spec/views/projectsDashboard/noProjectMessage.spec.jsx
+++ b/tests/js/spec/views/projectsDashboard/noProjectMessage.spec.jsx
@@ -1,4 +1,4 @@
-import {shallow} from 'enzyme';
+import {shallow} from 'sentry-test/enzyme';
 import React from 'react';
 
 import NoProjectMessage from 'app/components/noProjectMessage';
diff --git a/tests/js/spec/views/projectsDashboard/projectCard.spec.jsx b/tests/js/spec/views/projectsDashboard/projectCard.spec.jsx
index c3059d8d03..92ba1aca14 100644
--- a/tests/js/spec/views/projectsDashboard/projectCard.spec.jsx
+++ b/tests/js/spec/views/projectsDashboard/projectCard.spec.jsx
@@ -1,4 +1,4 @@
-import {mount} from 'enzyme';
+import {mountWithTheme} from 'sentry-test/enzyme';
 import React from 'react';
 
 import {ProjectCard} from 'app/views/projectsDashboard/projectCard';
@@ -10,7 +10,7 @@ describe('ProjectCard', function() {
   let wrapper;
 
   beforeEach(function() {
-    wrapper = mount(
+    wrapper = mountWithTheme(
       <ProjectCard
         organization={TestStubs.Organization()}
         project={TestStubs.Project({
@@ -50,7 +50,7 @@ describe('ProjectCard', function() {
       },
     ];
 
-    wrapper = mount(
+    wrapper = mountWithTheme(
       <ProjectCard
         organization={TestStubs.Organization()}
         project={TestStubs.Project({
@@ -81,7 +81,7 @@ describe('ProjectCard', function() {
   });
 
   it('renders loading placeholder card if there are no stats', function() {
-    wrapper = mount(
+    wrapper = mountWithTheme(
       <ProjectCard
         organization={TestStubs.Organization()}
         project={TestStubs.Project()}
diff --git a/tests/js/spec/views/providerItem.spec.jsx b/tests/js/spec/views/providerItem.spec.jsx
index 1e2741ba01..b37cbc1d6c 100644
--- a/tests/js/spec/views/providerItem.spec.jsx
+++ b/tests/js/spec/views/providerItem.spec.jsx
@@ -1,7 +1,7 @@
 import React from 'react';
 
 import {descopeFeatureName} from 'app/utils';
-import {mount} from 'enzyme';
+import {mountWithTheme} from 'sentry-test/enzyme';
 import ProviderItem from 'app/views/settings/organizationAuth/providerItem';
 
 describe('ProviderItem', function() {
@@ -12,7 +12,7 @@ describe('ProviderItem', function() {
   const routerContext = TestStubs.routerContext([{organization: org}]);
 
   it('renders', function() {
-    const wrapper = mount(
+    const wrapper = mountWithTheme(
       <ProviderItem organization={org} provider={provider} onConfigure={() => {}} />,
       routerContext
     );
@@ -25,7 +25,7 @@ describe('ProviderItem', function() {
 
   it('calls configure callback', function() {
     const mock = jest.fn();
-    const wrapper = mount(
+    const wrapper = mountWithTheme(
       <ProviderItem organization={org} provider={provider} onConfigure={mock} />,
       routerContext
     );
@@ -36,7 +36,7 @@ describe('ProviderItem', function() {
 
   it('renders a disabled Tag when disabled', function() {
     const noFeatureRouterContext = TestStubs.routerContext();
-    const wrapper = mount(
+    const wrapper = mountWithTheme(
       <ProviderItem organization={org} provider={provider} onConfigure={() => {}} />,
       noFeatureRouterContext
     );
diff --git a/tests/js/spec/views/organizationReleases/detail/__snapshots__/releaseCommits.spec.jsx.snap b/tests/js/spec/views/releases/detail/__snapshots__/releaseCommits.spec.jsx.snap
similarity index 100%
rename from tests/js/spec/views/organizationReleases/detail/__snapshots__/releaseCommits.spec.jsx.snap
rename to tests/js/spec/views/releases/detail/__snapshots__/releaseCommits.spec.jsx.snap
diff --git a/tests/js/spec/views/organizationReleases/detail/releaseArtifacts.spec.jsx b/tests/js/spec/views/releases/detail/releaseArtifacts.spec.jsx
similarity index 98%
rename from tests/js/spec/views/organizationReleases/detail/releaseArtifacts.spec.jsx
rename to tests/js/spec/views/releases/detail/releaseArtifacts.spec.jsx
index 4db52b21c3..4b1b17b6cb 100644
--- a/tests/js/spec/views/organizationReleases/detail/releaseArtifacts.spec.jsx
+++ b/tests/js/spec/views/releases/detail/releaseArtifacts.spec.jsx
@@ -1,5 +1,5 @@
 import React from 'react';
-import {shallow, mount} from 'enzyme';
+import {shallow, mount} from 'sentry-test/enzyme';
 
 import {Client} from 'app/api';
 import {ReleaseArtifacts} from 'app/views/releases/detail/releaseArtifacts';
diff --git a/tests/js/spec/views/organizationReleases/detail/releaseCommits.spec.jsx b/tests/js/spec/views/releases/detail/releaseCommits.spec.jsx
similarity index 96%
rename from tests/js/spec/views/organizationReleases/detail/releaseCommits.spec.jsx
rename to tests/js/spec/views/releases/detail/releaseCommits.spec.jsx
index a5c460951e..cedfbbe302 100644
--- a/tests/js/spec/views/organizationReleases/detail/releaseCommits.spec.jsx
+++ b/tests/js/spec/views/releases/detail/releaseCommits.spec.jsx
@@ -1,5 +1,5 @@
 import React from 'react';
-import {mount} from 'enzyme';
+import {mount} from 'sentry-test/enzyme';
 
 import ReleaseCommits from 'app/views/releases/detail/releaseCommits';
 
diff --git a/tests/js/spec/views/organizationReleases/detail/releaseDetails.spec.jsx b/tests/js/spec/views/releases/detail/releaseDetails.spec.jsx
similarity index 94%
rename from tests/js/spec/views/organizationReleases/detail/releaseDetails.spec.jsx
rename to tests/js/spec/views/releases/detail/releaseDetails.spec.jsx
index 95f67cbc6b..b2e8b9707f 100644
--- a/tests/js/spec/views/organizationReleases/detail/releaseDetails.spec.jsx
+++ b/tests/js/spec/views/releases/detail/releaseDetails.spec.jsx
@@ -1,5 +1,5 @@
 import React from 'react';
-import {mount} from 'enzyme';
+import {mountWithTheme} from 'sentry-test/enzyme';
 
 import ReleaseDetails from 'app/views/releases/detail/';
 
@@ -44,7 +44,7 @@ describe('ReleaseDetails', function() {
       query: {},
     };
 
-    const wrapper = mount(
+    const wrapper = mountWithTheme(
       <ReleaseDetails location={location} params={params} setProjectNavSection={noop}>
         <div>hi</div>
       </ReleaseDetails>,
diff --git a/tests/js/spec/views/organizationReleases/list/organizationReleases.spec.jsx b/tests/js/spec/views/releases/list/index.spec.jsx
similarity index 94%
rename from tests/js/spec/views/organizationReleases/list/organizationReleases.spec.jsx
rename to tests/js/spec/views/releases/list/index.spec.jsx
index f01815c87c..e3dc25f242 100644
--- a/tests/js/spec/views/organizationReleases/list/organizationReleases.spec.jsx
+++ b/tests/js/spec/views/releases/list/index.spec.jsx
@@ -1,5 +1,5 @@
 import React from 'react';
-import {mount} from 'enzyme';
+import {mountWithTheme} from 'sentry-test/enzyme';
 
 import ReleaseList from 'app/views/releases/list/';
 
@@ -39,7 +39,7 @@ describe('ReleaseList', function() {
       location: {query: {per_page: 0, query: 'derp'}},
     };
 
-    wrapper = mount(
+    wrapper = mountWithTheme(
       <ReleaseList {...props} />,
       TestStubs.routerContext([{organization}])
     );
@@ -62,7 +62,7 @@ describe('ReleaseList', function() {
       body: [],
     });
     organization.projects = [TestStubs.Project({latestRelease: 'abcdef'})];
-    wrapper = mount(
+    wrapper = mountWithTheme(
       <ReleaseList {...props} />,
       TestStubs.routerContext([{organization}])
     );
@@ -77,7 +77,7 @@ describe('ReleaseList', function() {
     });
     organization.projects = [TestStubs.Project({latestRelease: 'abcdef'})];
     props.selection = {projects: []};
-    wrapper = mount(
+    wrapper = mountWithTheme(
       <ReleaseList {...props} />,
       TestStubs.routerContext([{organization}])
     );
@@ -90,7 +90,7 @@ describe('ReleaseList', function() {
       url: '/organizations/org-slug/releases/',
       body: [],
     });
-    wrapper = mount(
+    wrapper = mountWithTheme(
       <ReleaseList {...props} />,
       TestStubs.routerContext([{organization}])
     );
diff --git a/tests/js/spec/views/organizationReleases/list/releaseProgress.spec.jsx b/tests/js/spec/views/releases/list/releaseProgress.spec.jsx
similarity index 94%
rename from tests/js/spec/views/organizationReleases/list/releaseProgress.spec.jsx
rename to tests/js/spec/views/releases/list/releaseProgress.spec.jsx
index 0b82a094b2..367e1c60d7 100644
--- a/tests/js/spec/views/organizationReleases/list/releaseProgress.spec.jsx
+++ b/tests/js/spec/views/releases/list/releaseProgress.spec.jsx
@@ -1,6 +1,6 @@
 import React from 'react';
 import moment from 'moment';
-import {mount} from 'enzyme';
+import {mountWithTheme} from 'sentry-test/enzyme';
 
 import {ReleaseProgress} from 'app/views/releases/list/releaseProgress';
 
@@ -46,7 +46,7 @@ describe('ReleaseProgress', function() {
         {step: 'deploy', complete: true},
       ],
     });
-    wrapper = mount(
+    wrapper = mountWithTheme(
       <ReleaseProgress organization={organization} project={project} />,
       routerContext
     );
@@ -55,7 +55,7 @@ describe('ReleaseProgress', function() {
   });
 
   it('renders with next step suggestion', function() {
-    wrapper = mount(
+    wrapper = mountWithTheme(
       <ReleaseProgress organization={organization} project={project} />,
       routerContext
     );
@@ -70,7 +70,7 @@ describe('ReleaseProgress', function() {
   });
 
   it('hides when snoozed', function() {
-    wrapper = mount(
+    wrapper = mountWithTheme(
       <ReleaseProgress organization={organization} project={project} />,
       routerContext
     );
@@ -114,7 +114,7 @@ describe('ReleaseProgress', function() {
       body: {data: {snoozed_ts}},
     });
 
-    wrapper = mount(
+    wrapper = mountWithTheme(
       <ReleaseProgress organization={organization} project={project} />,
       routerContext
     );
@@ -133,7 +133,7 @@ describe('ReleaseProgress', function() {
       body: {data: {snoozed_ts}},
     });
 
-    wrapper = mount(
+    wrapper = mountWithTheme(
       <ReleaseProgress organization={organization} project={project} />,
       routerContext
     );
@@ -142,7 +142,7 @@ describe('ReleaseProgress', function() {
   });
 
   it('hides when dismissed', function() {
-    wrapper = mount(
+    wrapper = mountWithTheme(
       <ReleaseProgress organization={organization} project={project} />,
       routerContext
     );
@@ -175,7 +175,7 @@ describe('ReleaseProgress', function() {
       body: {data: {dismissed_ts: moment().unix()}},
     });
 
-    wrapper = mount(
+    wrapper = mountWithTheme(
       <ReleaseProgress organization={organization} project={project} />,
       routerContext
     );
diff --git a/tests/js/spec/views/routeError.spec.jsx b/tests/js/spec/views/routeError.spec.jsx
index 5482c6bb7b..d2fdd2a135 100644
--- a/tests/js/spec/views/routeError.spec.jsx
+++ b/tests/js/spec/views/routeError.spec.jsx
@@ -1,7 +1,7 @@
 import React from 'react';
 import * as Sentry from '@sentry/browser';
 
-import {mount} from 'enzyme';
+import {mount} from 'sentry-test/enzyme';
 import {RouteError} from 'app/views/routeError';
 
 jest.mock('jquery');
diff --git a/tests/js/spec/views/ruleBuilder.spec.jsx b/tests/js/spec/views/ruleBuilder.spec.jsx
index 2330cf54f4..bf793f241e 100644
--- a/tests/js/spec/views/ruleBuilder.spec.jsx
+++ b/tests/js/spec/views/ruleBuilder.spec.jsx
@@ -1,5 +1,5 @@
 import React from 'react';
-import {mount} from 'enzyme';
+import {mountWithTheme} from 'sentry-test/enzyme';
 
 import MemberListStore from 'app/stores/memberListStore';
 import TeamStore from 'app/stores/teamStore';
@@ -71,7 +71,7 @@ describe('RuleBuilder', function() {
   afterEach(function() {});
 
   it('renders', async function() {
-    const wrapper = mount(
+    const wrapper = mountWithTheme(
       <RuleBuilder project={project} organization={organization} onAddRule={handleAdd} />,
       TestStubs.routerContext()
     );
@@ -105,7 +105,7 @@ describe('RuleBuilder', function() {
   });
 
   it('renders with suggestions', async function() {
-    const wrapper = mount(
+    const wrapper = mountWithTheme(
       <RuleBuilder
         project={project}
         organization={organization}
diff --git a/tests/js/spec/views/sentryAppExternalInstallation.spec.jsx b/tests/js/spec/views/sentryAppExternalInstallation.spec.jsx
index 38e5884868..0ff583cc03 100644
--- a/tests/js/spec/views/sentryAppExternalInstallation.spec.jsx
+++ b/tests/js/spec/views/sentryAppExternalInstallation.spec.jsx
@@ -1,7 +1,7 @@
 import React from 'react';
 import _ from 'lodash';
 
-import {mount} from 'enzyme';
+import {mountWithTheme} from 'sentry-test/enzyme';
 
 import SentryAppExternalInstallation from 'app/views/sentryAppExternalInstallation';
 
@@ -47,7 +47,7 @@ describe('SentryAppExternalInstallation', () => {
     });
 
     getMountedComponent = () =>
-      mount(
+      mountWithTheme(
         <SentryAppExternalInstallation params={{sentryAppSlug: sentryApp.slug}} />,
         TestStubs.routerContext()
       );
diff --git a/tests/js/spec/views/settings/__snapshots__/organizationProjects.spec.jsx.snap b/tests/js/spec/views/settings/__snapshots__/organizationProjects.spec.jsx.snap
index ec7baa675a..1524b9b88b 100644
--- a/tests/js/spec/views/settings/__snapshots__/organizationProjects.spec.jsx.snap
+++ b/tests/js/spec/views/settings/__snapshots__/organizationProjects.spec.jsx.snap
@@ -1,6 +1,6 @@
 // Jest Snapshot v1, https://goo.gl/fbAQLP
 
-exports[`OrganizationProjects Should render the projects in the store 1`] = `
+exports[`OrganizationProjects should render the projects in the store 1`] = `
 <WithOrganizationMockWrapper
   location={
     Object {
diff --git a/tests/js/spec/views/settings/account/apiApplications.spec.jsx b/tests/js/spec/views/settings/account/apiApplications.spec.jsx
index 057bb3653f..08bf9ce5a0 100644
--- a/tests/js/spec/views/settings/account/apiApplications.spec.jsx
+++ b/tests/js/spec/views/settings/account/apiApplications.spec.jsx
@@ -1,7 +1,7 @@
 import React from 'react';
 
-import {initializeOrg} from 'app-test/helpers/initializeOrg';
-import {mount} from 'enzyme';
+import {initializeOrg} from 'sentry-test/initializeOrg';
+import {mountWithTheme} from 'sentry-test/enzyme';
 import ApiApplications from 'app/views/settings/account/apiApplications';
 
 describe('ApiApplications', function() {
@@ -10,7 +10,7 @@ describe('ApiApplications', function() {
   const {router, routerContext} = initializeOrg();
 
   const createWrapper = props => {
-    wrapper = mount(<ApiApplications {...props} />, routerContext);
+    wrapper = mountWithTheme(<ApiApplications {...props} />, routerContext);
   };
 
   beforeEach(function() {
diff --git a/tests/js/spec/views/settings/accountSettingsLayout.spec.jsx b/tests/js/spec/views/settings/accountSettingsLayout.spec.jsx
index 643e92cba1..6262d9636c 100644
--- a/tests/js/spec/views/settings/accountSettingsLayout.spec.jsx
+++ b/tests/js/spec/views/settings/accountSettingsLayout.spec.jsx
@@ -1,5 +1,5 @@
 import React from 'react';
-import {mount} from 'enzyme';
+import {mountWithTheme} from 'sentry-test/enzyme';
 
 import * as OrgActions from 'app/actionCreators/organizations';
 import AccountSettingsLayout from 'app/views/settings/account/accountSettingsLayout';
@@ -20,7 +20,10 @@ describe('AccountSettingsLayout', function() {
     api = MockApiClient.addMockResponse({
       url: `/organizations/${organization.slug}/`,
     });
-    wrapper = mount(<AccountSettingsLayout params={{}} />, TestStubs.routerContext());
+    wrapper = mountWithTheme(
+      <AccountSettingsLayout params={{}} />,
+      TestStubs.routerContext()
+    );
   });
 
   it('fetches org details for SidebarDropdown', function() {
diff --git a/tests/js/spec/views/settings/auditLogView.spec.jsx b/tests/js/spec/views/settings/auditLogView.spec.jsx
index 92c63ff47a..252205eab6 100644
--- a/tests/js/spec/views/settings/auditLogView.spec.jsx
+++ b/tests/js/spec/views/settings/auditLogView.spec.jsx
@@ -1,5 +1,5 @@
 import React from 'react';
-import {shallow, mount} from 'enzyme';
+import {shallow, mountWithTheme} from 'sentry-test/enzyme';
 
 import {Client} from 'app/api';
 import OrganizationAuditLog from 'app/views/settings/organizationAuditLog';
@@ -33,7 +33,7 @@ describe('OrganizationAuditLog', function() {
   });
 
   it('displays whether an action was done by a superuser', function() {
-    const wrapper = mount(
+    const wrapper = mountWithTheme(
       <OrganizationAuditLog location={{query: ''}} params={{orgId: org.slug}} />,
       TestStubs.routerContext()
     );
diff --git a/tests/js/spec/views/settings/components/settingsBreadcrumb/breadcrumbTitle.spec.jsx b/tests/js/spec/views/settings/components/settingsBreadcrumb/breadcrumbTitle.spec.jsx
index 9137aa9281..b5e39a0b2c 100644
--- a/tests/js/spec/views/settings/components/settingsBreadcrumb/breadcrumbTitle.spec.jsx
+++ b/tests/js/spec/views/settings/components/settingsBreadcrumb/breadcrumbTitle.spec.jsx
@@ -1,6 +1,6 @@
 import React from 'react';
 
-import {mount} from 'enzyme';
+import {mount} from 'sentry-test/enzyme';
 import BreadcrumbTitle from 'app/views/settings/components/settingsBreadcrumb/breadcrumbTitle';
 import Crumb from 'app/views/settings/components/settingsBreadcrumb/crumb';
 import SettingsBreadcrumb from 'app/views/settings/components/settingsBreadcrumb';
diff --git a/tests/js/spec/views/settings/components/settingsBreadcrumb/organizationCrumb.spec.jsx b/tests/js/spec/views/settings/components/settingsBreadcrumb/organizationCrumb.spec.jsx
index 50b1a33259..27ae20c23f 100644
--- a/tests/js/spec/views/settings/components/settingsBreadcrumb/organizationCrumb.spec.jsx
+++ b/tests/js/spec/views/settings/components/settingsBreadcrumb/organizationCrumb.spec.jsx
@@ -1,8 +1,8 @@
 import {browserHistory} from 'react-router';
 import React from 'react';
 
-import {initializeOrg} from 'app-test/helpers/initializeOrg';
-import {mount} from 'enzyme';
+import {initializeOrg} from 'sentry-test/initializeOrg';
+import {mountWithTheme} from 'sentry-test/enzyme';
 import OrganizationCrumb from 'app/views/settings/components/settingsBreadcrumb/organizationCrumb';
 
 jest.unmock('app/utils/recreateRoute');
@@ -28,7 +28,7 @@ describe('OrganizationCrumb', function() {
   };
 
   const createWrapper = props =>
-    mount(
+    mountWithTheme(
       <OrganizationCrumb
         organizations={organizations}
         organization={organization}
diff --git a/tests/js/spec/views/settings/components/settingsSearch/index.spec.jsx b/tests/js/spec/views/settings/components/settingsSearch/index.spec.jsx
index 6ad2526532..8f0d6b7414 100644
--- a/tests/js/spec/views/settings/components/settingsSearch/index.spec.jsx
+++ b/tests/js/spec/views/settings/components/settingsSearch/index.spec.jsx
@@ -1,5 +1,5 @@
 import React from 'react';
-import {mount} from 'enzyme';
+import {mount} from 'sentry-test/enzyme';
 
 import {SettingsSearch} from 'app/views/settings/components/settingsSearch';
 import FormSearchStore from 'app/stores/formSearchStore';
diff --git a/tests/js/spec/views/settings/incidentRules/create.spec.jsx b/tests/js/spec/views/settings/incidentRules/create.spec.jsx
index 28d6e1d78f..18b750aba8 100644
--- a/tests/js/spec/views/settings/incidentRules/create.spec.jsx
+++ b/tests/js/spec/views/settings/incidentRules/create.spec.jsx
@@ -1,13 +1,13 @@
-import {mount} from 'enzyme';
+import {mountWithTheme} from 'sentry-test/enzyme';
 import React from 'react';
 
-import {initializeOrg} from 'app-test/helpers/initializeOrg';
+import {initializeOrg} from 'sentry-test/initializeOrg';
 import IncidentRulesCreate from 'app/views/settings/incidentRules/create';
 
 describe('Incident Rules Create', function() {
   it('renders', function() {
     const {organization, routerContext} = initializeOrg();
-    mount(
+    mountWithTheme(
       <IncidentRulesCreate
         params={{orgId: organization.slug}}
         organization={organization}
diff --git a/tests/js/spec/views/settings/incidentRules/details.spec.jsx b/tests/js/spec/views/settings/incidentRules/details.spec.jsx
index 7d54d72873..b1d48687fd 100644
--- a/tests/js/spec/views/settings/incidentRules/details.spec.jsx
+++ b/tests/js/spec/views/settings/incidentRules/details.spec.jsx
@@ -1,7 +1,7 @@
 import React from 'react';
-import {mount} from 'enzyme';
+import {mountWithTheme} from 'sentry-test/enzyme';
 
-import {initializeOrg} from 'app-test/helpers/initializeOrg';
+import {initializeOrg} from 'sentry-test/initializeOrg';
 import IncidentRulesDetails from 'app/views/settings/incidentRules/details';
 import GlobalModal from 'app/components/globalModal';
 
@@ -36,7 +36,7 @@ describe('Incident Rules Details', function() {
         }),
     });
 
-    const wrapper = mount(
+    const wrapper = mountWithTheme(
       <React.Fragment>
         <GlobalModal />
         <IncidentRulesDetails
diff --git a/tests/js/spec/views/settings/incidentRules/list.spec.jsx b/tests/js/spec/views/settings/incidentRules/list.spec.jsx
index bbb8b953cb..cf1dcaadd1 100644
--- a/tests/js/spec/views/settings/incidentRules/list.spec.jsx
+++ b/tests/js/spec/views/settings/incidentRules/list.spec.jsx
@@ -1,7 +1,7 @@
-import {mount} from 'enzyme';
+import {mountWithTheme} from 'sentry-test/enzyme';
 import React from 'react';
 
-import {initializeOrg} from 'app-test/helpers/initializeOrg';
+import {initializeOrg} from 'sentry-test/initializeOrg';
 import IncidentRulesList from 'app/views/settings/incidentRules/list';
 
 describe('Incident Rules List', function() {
@@ -12,7 +12,7 @@ describe('Incident Rules List', function() {
       url: `/organizations/${organization.slug}/alert-rules/`,
       body: [rule],
     });
-    const wrapper = mount(
+    const wrapper = mountWithTheme(
       <IncidentRulesList
         params={{orgId: organization.slug}}
         organization={organization}
diff --git a/tests/js/spec/views/settings/incidentRules/ruleForm.spec.jsx b/tests/js/spec/views/settings/incidentRules/ruleForm.spec.jsx
index 2fd91daa23..efda7d9595 100644
--- a/tests/js/spec/views/settings/incidentRules/ruleForm.spec.jsx
+++ b/tests/js/spec/views/settings/incidentRules/ruleForm.spec.jsx
@@ -1,14 +1,14 @@
-import {mount} from 'enzyme';
+import {mountWithTheme} from 'sentry-test/enzyme';
 import React from 'react';
 
-import {initializeOrg} from 'app-test/helpers/initializeOrg';
-import {selectByLabel} from 'app-test/helpers/select';
+import {initializeOrg} from 'sentry-test/initializeOrg';
+import {selectByLabel} from 'sentry-test/select';
 import {RuleFormContainer} from 'app/views/settings/incidentRules/ruleForm';
 
 describe('Incident Rules Form', function() {
   const {organization, project, routerContext} = initializeOrg();
   const createWrapper = props =>
-    mount(
+    mountWithTheme(
       <RuleFormContainer
         organization={organization}
         orgId={organization.slug}
diff --git a/tests/js/spec/views/settings/incidentRules/triggers/modal.spec.jsx b/tests/js/spec/views/settings/incidentRules/triggers/modal.spec.jsx
index 73437d2768..02d94cdf87 100644
--- a/tests/js/spec/views/settings/incidentRules/triggers/modal.spec.jsx
+++ b/tests/js/spec/views/settings/incidentRules/triggers/modal.spec.jsx
@@ -1,8 +1,8 @@
-import {mount} from 'enzyme';
+import {mountWithTheme} from 'sentry-test/enzyme';
 import React from 'react';
 
-import {initializeOrg} from 'app-test/helpers/initializeOrg';
-import {selectByLabel} from 'app-test/helpers/select';
+import {initializeOrg} from 'sentry-test/initializeOrg';
+import {selectByLabel} from 'sentry-test/select';
 import TriggersModal from 'app/views/settings/incidentRules/triggers/modal';
 
 describe('Incident Rules -> Triggers Modal', function() {
@@ -10,7 +10,7 @@ describe('Incident Rules -> Triggers Modal', function() {
   const rule = TestStubs.IncidentRule();
   let statsMock;
   const createWrapper = props =>
-    mount(
+    mountWithTheme(
       <TriggersModal
         organization={organization}
         projects={[project, TestStubs.Project({slug: 'project-2', id: '3'})]}
diff --git a/tests/js/spec/views/settings/organizationAccessRequests.spec.jsx b/tests/js/spec/views/settings/organizationAccessRequests.spec.jsx
index bc191d906b..ff8c4a72eb 100644
--- a/tests/js/spec/views/settings/organizationAccessRequests.spec.jsx
+++ b/tests/js/spec/views/settings/organizationAccessRequests.spec.jsx
@@ -1,5 +1,5 @@
 import React from 'react';
-import {mount, shallow} from 'enzyme';
+import {mountWithTheme, shallow} from 'sentry-test/enzyme';
 
 import OrganizationAccessRequests from 'app/views/settings/organizationMembers/organizationAccessRequests';
 
@@ -48,7 +48,7 @@ describe('OrganizationAccessRequests', function() {
 
   it('can approve', function() {
     const mock = jest.fn();
-    const wrapper = mount(
+    const wrapper = mountWithTheme(
       <OrganizationAccessRequests
         params={{apiKey: 1, orgId: 'org-slug'}}
         accessRequestBusy={new Map()}
@@ -84,7 +84,7 @@ describe('OrganizationAccessRequests', function() {
 
   it('can deny', function() {
     const mock = jest.fn();
-    const wrapper = mount(
+    const wrapper = mountWithTheme(
       <OrganizationAccessRequests
         params={{apiKey: 1, orgId: 'org-slug'}}
         accessRequestBusy={new Map()}
diff --git a/tests/js/spec/views/settings/organizationApiKeyDetailsView.spec.jsx b/tests/js/spec/views/settings/organizationApiKeyDetailsView.spec.jsx
index 7b845501bb..8cd051b434 100644
--- a/tests/js/spec/views/settings/organizationApiKeyDetailsView.spec.jsx
+++ b/tests/js/spec/views/settings/organizationApiKeyDetailsView.spec.jsx
@@ -1,6 +1,6 @@
 import PropTypes from 'prop-types';
 import React from 'react';
-import {mount} from 'enzyme';
+import {mount} from 'sentry-test/enzyme';
 
 import {Client} from 'app/api';
 import OrganizationApiKeyDetails from 'app/views/settings/organizationApiKeys/organizationApiKeyDetails';
diff --git a/tests/js/spec/views/settings/organizationApiKeysList.spec.jsx b/tests/js/spec/views/settings/organizationApiKeysList.spec.jsx
index 34f3c0705f..5b86b62a49 100644
--- a/tests/js/spec/views/settings/organizationApiKeysList.spec.jsx
+++ b/tests/js/spec/views/settings/organizationApiKeysList.spec.jsx
@@ -1,5 +1,5 @@
 import React from 'react';
-import {mount} from 'enzyme';
+import {mountWithTheme} from 'sentry-test/enzyme';
 
 import OrganizationApiKeysList from 'app/views/settings/organizationApiKeys/organizationApiKeysList';
 
@@ -16,7 +16,7 @@ describe('OrganizationApiKeysList', function() {
   beforeEach(function() {});
 
   it('renders', function() {
-    const wrapper = mount(
+    const wrapper = mountWithTheme(
       <OrganizationApiKeysList
         params={{orgId: 'org-slug'}}
         routes={routes}
@@ -28,7 +28,7 @@ describe('OrganizationApiKeysList', function() {
   });
 
   it('opens a modal when trying to delete a key', function() {
-    const wrapper = mount(
+    const wrapper = mountWithTheme(
       <OrganizationApiKeysList
         params={{orgId: 'org-slug'}}
         routes={routes}
diff --git a/tests/js/spec/views/settings/organizationApiKeysView.spec.jsx b/tests/js/spec/views/settings/organizationApiKeysView.spec.jsx
index 5cc4026224..fe97ae7647 100644
--- a/tests/js/spec/views/settings/organizationApiKeysView.spec.jsx
+++ b/tests/js/spec/views/settings/organizationApiKeysView.spec.jsx
@@ -1,5 +1,5 @@
 import React from 'react';
-import {mount} from 'enzyme';
+import {mountWithTheme} from 'sentry-test/enzyme';
 
 import {Client} from 'app/api';
 import OrganizationApiKeys from 'app/views/settings/organizationApiKeys';
@@ -33,7 +33,7 @@ describe('OrganizationApiKeys', function() {
   });
 
   it('fetches api keys', function() {
-    const wrapper = mount(
+    const wrapper = mountWithTheme(
       <OrganizationApiKeys
         location={TestStubs.location()}
         params={{orgId: 'org-slug'}}
@@ -46,7 +46,7 @@ describe('OrganizationApiKeys', function() {
   });
 
   it('can delete a key', function() {
-    const wrapper = mount(
+    const wrapper = mountWithTheme(
       <OrganizationApiKeys
         location={TestStubs.location()}
         params={{orgId: 'org-slug'}}
diff --git a/tests/js/spec/views/settings/organizationAuthList.spec.jsx b/tests/js/spec/views/settings/organizationAuthList.spec.jsx
index c8a86ee115..e5bae4baec 100644
--- a/tests/js/spec/views/settings/organizationAuthList.spec.jsx
+++ b/tests/js/spec/views/settings/organizationAuthList.spec.jsx
@@ -1,5 +1,5 @@
 import React from 'react';
-import {shallow, mount} from 'enzyme';
+import {shallow, mountWithTheme} from 'sentry-test/enzyme';
 
 import OrganizationAuthList from 'app/views/settings/organizationAuth/organizationAuthList';
 
@@ -29,7 +29,7 @@ describe('OrganizationAuthList', function() {
   });
 
   it('renders for members', function() {
-    const wrapper = mount(
+    const wrapper = mountWithTheme(
       <OrganizationAuthList
         orgId="org-slug"
         onSendReminders={() => {}}
diff --git a/tests/js/spec/views/settings/organizationDeveloperSettings/__snapshots__/subscriptionBox.spec.jsx.snap b/tests/js/spec/views/settings/organizationDeveloperSettings/__snapshots__/subscriptionBox.spec.jsx.snap
index e6a70b0857..ef4a1cdb41 100644
--- a/tests/js/spec/views/settings/organizationDeveloperSettings/__snapshots__/subscriptionBox.spec.jsx.snap
+++ b/tests/js/spec/views/settings/organizationDeveloperSettings/__snapshots__/subscriptionBox.spec.jsx.snap
@@ -52,7 +52,7 @@ exports[`SubscriptionBox renders resource checkbox 1`] = `
           disabled={false}
         >
           <div
-            className="css-6c04tk-SubscriptionGridItem e139qogw1"
+            className="css-1dyjgup-SubscriptionGridItem e139qogw1"
             disabled={false}
           >
             <SubscriptionInfo>
@@ -65,14 +65,14 @@ exports[`SubscriptionBox renders resource checkbox 1`] = `
                 >
                   <SubscriptionTitle>
                     <div
-                      className="css-17mtfmy-SubscriptionTitle e139qogw4"
+                      className="css-bubf59-SubscriptionTitle e139qogw4"
                     >
                       issue
                     </div>
                   </SubscriptionTitle>
                   <SubscriptionDescription>
                     <div
-                      className="css-1jp4ud-SubscriptionDescription e139qogw3"
+                      className="css-1ghu3z2-SubscriptionDescription e139qogw3"
                     >
                       created, resolved, assigned
                     </div>
diff --git a/tests/js/spec/views/settings/organizationDeveloperSettings/index.spec.jsx b/tests/js/spec/views/settings/organizationDeveloperSettings/index.spec.jsx
index 1bb8f491d4..8311010482 100644
--- a/tests/js/spec/views/settings/organizationDeveloperSettings/index.spec.jsx
+++ b/tests/js/spec/views/settings/organizationDeveloperSettings/index.spec.jsx
@@ -1,7 +1,7 @@
 import React from 'react';
 
 import {Client} from 'app/api';
-import {mount} from 'enzyme';
+import {mountWithTheme} from 'sentry-test/enzyme';
 import OrganizationDeveloperSettings from 'app/views/settings/organizationDeveloperSettings/index';
 import App from 'app/views/app';
 
@@ -22,7 +22,7 @@ describe('Organization Developer Settings', function() {
       body: [],
     });
 
-    const wrapper = mount(
+    const wrapper = mountWithTheme(
       <OrganizationDeveloperSettings params={{orgId: org.slug}} organization={org} />,
       routerContext
     );
@@ -44,7 +44,7 @@ describe('Organization Developer Settings', function() {
         body: [sentryApp],
       });
 
-      wrapper = mount(
+      wrapper = mountWithTheme(
         <OrganizationDeveloperSettings params={{orgId: org.slug}} organization={org} />,
         routerContext
       );
@@ -117,7 +117,7 @@ describe('Organization Developer Settings', function() {
       });
 
       //mock with App to render modal
-      wrapper = mount(
+      wrapper = mountWithTheme(
         <App>
           <OrganizationDeveloperSettings params={{orgId: org.slug}} organization={org} />
         </App>,
@@ -172,7 +172,7 @@ describe('Organization Developer Settings', function() {
       body: [publishedSentryApp],
     });
 
-    const wrapper = mount(
+    const wrapper = mountWithTheme(
       <OrganizationDeveloperSettings params={{orgId: org.slug}} organization={org} />,
       routerContext
     );
@@ -198,7 +198,7 @@ describe('Organization Developer Settings', function() {
       body: [internalIntegration],
     });
 
-    const wrapper = mount(
+    const wrapper = mountWithTheme(
       <OrganizationDeveloperSettings params={{orgId: org.slug}} organization={org} />,
       routerContext
     );
@@ -223,7 +223,7 @@ describe('Organization Developer Settings', function() {
       body: [sentryApp],
     });
 
-    const wrapper = mount(
+    const wrapper = mountWithTheme(
       <OrganizationDeveloperSettings
         params={{orgId: newOrg.slug}}
         organization={newOrg}
diff --git a/tests/js/spec/views/settings/organizationDeveloperSettings/permissionSelection.spec.jsx b/tests/js/spec/views/settings/organizationDeveloperSettings/permissionSelection.spec.jsx
index cbcec62698..43d279e0b1 100644
--- a/tests/js/spec/views/settings/organizationDeveloperSettings/permissionSelection.spec.jsx
+++ b/tests/js/spec/views/settings/organizationDeveloperSettings/permissionSelection.spec.jsx
@@ -1,9 +1,9 @@
 import React from 'react';
 
-import {mount} from 'enzyme';
+import {mountWithTheme} from 'sentry-test/enzyme';
 import FormModel from 'app/views/settings/components/forms/model';
 import PermissionSelection from 'app/views/settings/organizationDeveloperSettings/permissionSelection';
-import {selectByValue, openMenu} from './../../../../helpers/select';
+import {selectByValue, openMenu} from 'sentry-test/select';
 
 describe('PermissionSelection', () => {
   let wrapper;
@@ -11,7 +11,7 @@ describe('PermissionSelection', () => {
 
   beforeEach(() => {
     onChange = jest.fn();
-    wrapper = mount(
+    wrapper = mountWithTheme(
       <PermissionSelection
         permissions={{
           Event: 'no-access',
diff --git a/tests/js/spec/views/settings/organizationDeveloperSettings/permissionsObserver.spec.jsx b/tests/js/spec/views/settings/organizationDeveloperSettings/permissionsObserver.spec.jsx
index 5922af782f..3d94dfc3a6 100644
--- a/tests/js/spec/views/settings/organizationDeveloperSettings/permissionsObserver.spec.jsx
+++ b/tests/js/spec/views/settings/organizationDeveloperSettings/permissionsObserver.spec.jsx
@@ -1,6 +1,6 @@
 import React from 'react';
 
-import {mount} from 'enzyme';
+import {mountWithTheme} from 'sentry-test/enzyme';
 import FormModel from 'app/views/settings/components/forms/model';
 import PermissionsObserver from 'app/views/settings/organizationDeveloperSettings/permissionsObserver';
 
@@ -8,7 +8,7 @@ describe('PermissionsObserver', () => {
   let wrapper;
 
   beforeEach(() => {
-    wrapper = mount(
+    wrapper = mountWithTheme(
       <PermissionsObserver
         scopes={['project:read', 'project:write', 'project:releases', 'org:admin']}
         events={['issue']}
diff --git a/tests/js/spec/views/settings/organizationDeveloperSettings/resourceSubscriptions.spec.jsx b/tests/js/spec/views/settings/organizationDeveloperSettings/resourceSubscriptions.spec.jsx
index c5661a1cd4..9153b5184b 100644
--- a/tests/js/spec/views/settings/organizationDeveloperSettings/resourceSubscriptions.spec.jsx
+++ b/tests/js/spec/views/settings/organizationDeveloperSettings/resourceSubscriptions.spec.jsx
@@ -1,6 +1,6 @@
 import React from 'react';
 
-import {mount} from 'enzyme';
+import {mount} from 'sentry-test/enzyme';
 import FormModel from 'app/views/settings/components/forms/model';
 import Subscriptions from 'app/views/settings/organizationDeveloperSettings/resourceSubscriptions';
 
diff --git a/tests/js/spec/views/settings/organizationDeveloperSettings/sentryApplicationDashboard.spec.jsx b/tests/js/spec/views/settings/organizationDeveloperSettings/sentryApplicationDashboard.spec.jsx
index de729eeba0..a7ef33b787 100644
--- a/tests/js/spec/views/settings/organizationDeveloperSettings/sentryApplicationDashboard.spec.jsx
+++ b/tests/js/spec/views/settings/organizationDeveloperSettings/sentryApplicationDashboard.spec.jsx
@@ -1,7 +1,7 @@
 import React from 'react';
 
 import {Client} from 'app/api';
-import {mount} from 'enzyme';
+import {mount} from 'sentry-test/enzyme';
 import SentryApplicationDashboard from 'app/views/settings/organizationDeveloperSettings/sentryApplicationDashboard';
 
 describe('Sentry Application Dashboard', function() {
diff --git a/tests/js/spec/views/settings/organizationDeveloperSettings/sentryApplicationDetails.spec.jsx b/tests/js/spec/views/settings/organizationDeveloperSettings/sentryApplicationDetails.spec.jsx
index 6481f5ca89..b9c17443ae 100644
--- a/tests/js/spec/views/settings/organizationDeveloperSettings/sentryApplicationDetails.spec.jsx
+++ b/tests/js/spec/views/settings/organizationDeveloperSettings/sentryApplicationDetails.spec.jsx
@@ -1,11 +1,11 @@
 import React from 'react';
 
 import {Client} from 'app/api';
-import {mount} from 'enzyme';
+import {mountWithTheme} from 'sentry-test/enzyme';
 import SentryApplicationDetails from 'app/views/settings/organizationDeveloperSettings/sentryApplicationDetails';
 import JsonForm from 'app/views/settings/components/forms/jsonForm';
 import PermissionsObserver from 'app/views/settings/organizationDeveloperSettings/permissionsObserver';
-import {selectByValue} from '../../../../helpers/select';
+import {selectByValue} from 'sentry-test/select';
 
 describe('Sentry Application Details', function() {
   let org;
@@ -35,7 +35,7 @@ describe('Sentry Application Details', function() {
         body: [],
       });
 
-      wrapper = mount(
+      wrapper = mountWithTheme(
         <SentryApplicationDetails params={{orgId}} route={{path: 'new-public/'}} />,
         TestStubs.routerContext()
       );
@@ -117,7 +117,7 @@ describe('Sentry Application Details', function() {
 
   describe('Creating a new internal Sentry App', () => {
     beforeEach(() => {
-      wrapper = mount(
+      wrapper = mountWithTheme(
         <SentryApplicationDetails params={{orgId}} route={{path: 'new-internal/'}} />,
         TestStubs.routerContext()
       );
@@ -143,7 +143,7 @@ describe('Sentry Application Details', function() {
         body: [],
       });
 
-      wrapper = mount(
+      wrapper = mountWithTheme(
         <SentryApplicationDetails params={{appSlug: sentryApp.slug, orgId}} />,
         TestStubs.routerContext()
       );
@@ -185,7 +185,7 @@ describe('Sentry Application Details', function() {
         body: [token],
       });
 
-      wrapper = mount(
+      wrapper = mountWithTheme(
         <SentryApplicationDetails params={{appSlug: sentryApp.slug, orgId}} />,
         TestStubs.routerContext()
       );
@@ -231,7 +231,7 @@ describe('Sentry Application Details', function() {
         body: [token],
       });
 
-      wrapper = mount(
+      wrapper = mountWithTheme(
         <SentryApplicationDetails params={{appSlug: sentryApp.slug, orgId}} />,
         TestStubs.routerContext()
       );
@@ -270,7 +270,7 @@ describe('Sentry Application Details', function() {
         body: [token],
       });
 
-      wrapper = mount(
+      wrapper = mountWithTheme(
         <SentryApplicationDetails params={{appSlug: sentryApp.slug, orgId}} />,
         TestStubs.routerContext()
       );
@@ -340,7 +340,7 @@ describe('Sentry Application Details', function() {
         body: [],
       });
 
-      wrapper = mount(
+      wrapper = mountWithTheme(
         <SentryApplicationDetails params={{appSlug: sentryApp.slug, orgId}} />,
         TestStubs.routerContext()
       );
@@ -422,7 +422,7 @@ describe('Sentry Application Details', function() {
         body: [],
       });
 
-      wrapper = mount(
+      wrapper = mountWithTheme(
         <SentryApplicationDetails params={{appSlug: sentryApp.slug, orgId}} />,
         TestStubs.routerContext()
       );
diff --git a/tests/js/spec/views/settings/organizationDeveloperSettings/subscriptionBox.spec.jsx b/tests/js/spec/views/settings/organizationDeveloperSettings/subscriptionBox.spec.jsx
index 88712a529b..24b07474a2 100644
--- a/tests/js/spec/views/settings/organizationDeveloperSettings/subscriptionBox.spec.jsx
+++ b/tests/js/spec/views/settings/organizationDeveloperSettings/subscriptionBox.spec.jsx
@@ -1,6 +1,6 @@
 import React from 'react';
 
-import {mount} from 'enzyme';
+import {mount} from 'sentry-test/enzyme';
 import {SubscriptionBox} from 'app/views/settings/organizationDeveloperSettings/subscriptionBox';
 
 describe('SubscriptionBox', () => {
diff --git a/tests/js/spec/views/settings/organizationGeneralSettings.spec.jsx b/tests/js/spec/views/settings/organizationGeneralSettings.spec.jsx
index a4aa2dd565..112d9c7fbd 100644
--- a/tests/js/spec/views/settings/organizationGeneralSettings.spec.jsx
+++ b/tests/js/spec/views/settings/organizationGeneralSettings.spec.jsx
@@ -1,5 +1,5 @@
 import {browserHistory} from 'react-router';
-import {mount} from 'enzyme';
+import {mountWithTheme} from 'sentry-test/enzyme';
 import React from 'react';
 
 import OrganizationGeneralSettings from 'app/views/settings/organizationGeneralSettings';
@@ -35,7 +35,7 @@ describe('OrganizationGeneralSettings', function() {
       statusCode: 500,
       body: {},
     });
-    const wrapper = mount(
+    const wrapper = mountWithTheme(
       <OrganizationGeneralSettings params={{orgId: org.slug}} />,
       TestStubs.routerContext()
     );
@@ -47,7 +47,7 @@ describe('OrganizationGeneralSettings', function() {
   });
 
   it('can enable "early adopter"', async function() {
-    const wrapper = mount(
+    const wrapper = mountWithTheme(
       <OrganizationGeneralSettings params={{orgId: org.slug}} />,
       TestStubs.routerContext()
     );
@@ -69,7 +69,7 @@ describe('OrganizationGeneralSettings', function() {
   });
 
   it('changes org slug and redirects to new slug', async function() {
-    const wrapper = mount(
+    const wrapper = mountWithTheme(
       <OrganizationGeneralSettings params={{orgId: org.slug}} />,
       TestStubs.routerContext()
     );
@@ -108,7 +108,7 @@ describe('OrganizationGeneralSettings', function() {
       url: ENDPOINT,
       body: readOnlyOrg,
     });
-    const wrapper = mount(
+    const wrapper = mountWithTheme(
       <OrganizationGeneralSettings routes={[]} params={{orgId: readOnlyOrg.slug}} />,
       TestStubs.routerContext([{organization: readOnlyOrg}])
     );
@@ -137,7 +137,7 @@ describe('OrganizationGeneralSettings', function() {
         access: ['org:write'],
       }),
     });
-    const wrapper = mount(
+    const wrapper = mountWithTheme(
       <OrganizationGeneralSettings params={{orgId: org.slug}} />,
       TestStubs.routerContext()
     );
@@ -157,7 +157,7 @@ describe('OrganizationGeneralSettings', function() {
         access: ['org:admin'],
       }),
     });
-    const wrapper = mount(
+    const wrapper = mountWithTheme(
       <OrganizationGeneralSettings params={{orgId: org.slug}} />,
       TestStubs.routerContext()
     );
@@ -186,7 +186,7 @@ describe('OrganizationGeneralSettings', function() {
   });
 
   it('shows require2fa switch', async function() {
-    const wrapper = mount(
+    const wrapper = mountWithTheme(
       <OrganizationGeneralSettings params={{orgId: org.slug}} />,
       TestStubs.routerContext()
     );
@@ -202,7 +202,7 @@ describe('OrganizationGeneralSettings', function() {
       url: '/organizations/org-slug/',
       method: 'PUT',
     });
-    const wrapper = mount(
+    const wrapper = mountWithTheme(
       <OrganizationGeneralSettings params={{orgId: org.slug}} />,
       TestStubs.routerContext()
     );
@@ -230,7 +230,7 @@ describe('OrganizationGeneralSettings', function() {
       method: 'PUT',
     });
 
-    const wrapper = mount(
+    const wrapper = mountWithTheme(
       <OrganizationGeneralSettings params={{orgId: org.slug}} />,
       TestStubs.routerContext()
     );
@@ -268,7 +268,7 @@ describe('OrganizationGeneralSettings', function() {
       statusCode: 500,
     });
 
-    const wrapper = mount(
+    const wrapper = mountWithTheme(
       <OrganizationGeneralSettings params={{orgId: org.slug}} />,
       TestStubs.routerContext()
     );
@@ -298,7 +298,7 @@ describe('OrganizationGeneralSettings', function() {
     const organization = TestStubs.Organization({
       experiments: {JoinRequestExperiment: 1},
     });
-    const wrapper = mount(
+    const wrapper = mountWithTheme(
       <OrganizationGeneralSettings params={{orgId: organization.slug}} />,
       TestStubs.routerContext([{organization}])
     );
@@ -313,7 +313,7 @@ describe('OrganizationGeneralSettings', function() {
     const organization = TestStubs.Organization({
       experiments: {JoinRequestExperiment: -1},
     });
-    const wrapper = mount(
+    const wrapper = mountWithTheme(
       <OrganizationGeneralSettings params={{orgId: organization.slug}} />,
       TestStubs.routerContext([{organization}])
     );
@@ -328,7 +328,7 @@ describe('OrganizationGeneralSettings', function() {
     const organization = TestStubs.Organization({
       experiments: {JoinRequestExperiment: 0},
     });
-    const wrapper = mount(
+    const wrapper = mountWithTheme(
       <OrganizationGeneralSettings params={{orgId: organization.slug}} />,
       TestStubs.routerContext([{organization}])
     );
@@ -340,7 +340,7 @@ describe('OrganizationGeneralSettings', function() {
   });
 
   it('does not render join request switch without experiments', async function() {
-    const wrapper = mount(
+    const wrapper = mountWithTheme(
       <OrganizationGeneralSettings params={{orgId: org.slug}} />,
       TestStubs.routerContext()
     );
diff --git a/tests/js/spec/views/settings/organizationIntegrations/addIntegration.spec.jsx b/tests/js/spec/views/settings/organizationIntegrations/addIntegration.spec.jsx
index 4ed4075eb4..9dcd841ade 100644
--- a/tests/js/spec/views/settings/organizationIntegrations/addIntegration.spec.jsx
+++ b/tests/js/spec/views/settings/organizationIntegrations/addIntegration.spec.jsx
@@ -1,7 +1,7 @@
 /*global global*/
 import React from 'react';
 
-import {mount} from 'enzyme';
+import {mount} from 'sentry-test/enzyme';
 import AddIntegration from 'app/views/organizationIntegrations/addIntegration';
 
 describe('AddIntegration', function() {
diff --git a/tests/js/spec/views/settings/organizationIntegrations/addIntegrationButton.spec.jsx b/tests/js/spec/views/settings/organizationIntegrations/addIntegrationButton.spec.jsx
index 566a2f35c6..8cc322bc3d 100644
--- a/tests/js/spec/views/settings/organizationIntegrations/addIntegrationButton.spec.jsx
+++ b/tests/js/spec/views/settings/organizationIntegrations/addIntegrationButton.spec.jsx
@@ -1,7 +1,7 @@
 /*global global*/
 import React from 'react';
 
-import {mount} from 'enzyme';
+import {mountWithTheme} from 'sentry-test/enzyme';
 import AddIntegrationButton from 'app/views/organizationIntegrations/addIntegrationButton';
 
 describe('AddIntegrationButton', function() {
@@ -16,7 +16,7 @@ describe('AddIntegrationButton', function() {
     const open = jest.fn().mockReturnValue({focus});
     global.open = open;
 
-    const wrapper = mount(
+    const wrapper = mountWithTheme(
       <AddIntegrationButton provider={provider} onAddIntegration={onAdd} />,
       routerContext
     );
diff --git a/tests/js/spec/views/settings/organizationIntegrations/index.spec.jsx b/tests/js/spec/views/settings/organizationIntegrations/index.spec.jsx
index ec7b383a42..9eca8966ab 100644
--- a/tests/js/spec/views/settings/organizationIntegrations/index.spec.jsx
+++ b/tests/js/spec/views/settings/organizationIntegrations/index.spec.jsx
@@ -1,6 +1,6 @@
 /*global global*/
 import React from 'react';
-import {mount} from 'enzyme';
+import {mountWithTheme} from 'sentry-test/enzyme';
 
 import {Client} from 'app/api';
 import {
@@ -97,7 +97,7 @@ describe('OrganizationIntegrations', () => {
       body: [],
     });
 
-    wrapper = mount(
+    wrapper = mountWithTheme(
       <OrganizationIntegrations organization={org} params={params} />,
       routerContext
     );
@@ -139,7 +139,7 @@ describe('OrganizationIntegrations', () => {
         body: [sentryAppInstall],
       });
 
-      wrapper = mount(
+      wrapper = mountWithTheme(
         <OrganizationIntegrations organization={org} params={params} />,
         routerContext
       );
@@ -198,7 +198,7 @@ describe('OrganizationIntegrations', () => {
           body: [sentryApp],
         });
 
-        mount(
+        mountWithTheme(
           <OrganizationIntegrations organization={org} params={params} />,
           routerContext
         );
@@ -214,7 +214,7 @@ describe('OrganizationIntegrations', () => {
           body: [sentryApp],
         });
 
-        wrapper = mount(
+        wrapper = mountWithTheme(
           <OrganizationIntegrations organization={org} params={params} />,
           routerContext
         );
@@ -256,7 +256,7 @@ describe('OrganizationIntegrations', () => {
           url: '/sentry-apps/',
           body: [publishedApp],
         });
-        wrapper = mount(
+        wrapper = mountWithTheme(
           <OrganizationIntegrations organization={org} params={params} />,
           routerContext
         );
@@ -297,7 +297,7 @@ describe('OrganizationIntegrations', () => {
           body: [sentryAppInstall],
         });
 
-        wrapper = mount(
+        wrapper = mountWithTheme(
           <OrganizationIntegrations organization={org} params={params} />,
           routerContext
         );
@@ -333,7 +333,7 @@ describe('OrganizationIntegrations', () => {
           body: [internalAppInstall],
         });
 
-        wrapper = mount(
+        wrapper = mountWithTheme(
           <OrganizationIntegrations organization={org} params={params} />,
           routerContext
         );
@@ -360,7 +360,7 @@ describe('OrganizationIntegrations', () => {
           statusCode: 200,
         });
 
-        wrapper = mount(
+        wrapper = mountWithTheme(
           <OrganizationIntegrations organization={org} params={params} />,
           routerContext
         );
@@ -380,7 +380,7 @@ describe('OrganizationIntegrations', () => {
           body: [githubIntegration, jiraIntegration],
         });
 
-        wrapper = mount(
+        wrapper = mountWithTheme(
           <OrganizationIntegrations organization={org} params={params} />,
           routerContext
         );
@@ -464,7 +464,7 @@ describe('OrganizationIntegrations', () => {
           ],
         });
 
-        wrapper = mount(
+        wrapper = mountWithTheme(
           <OrganizationIntegrations organization={org} params={params} />,
           routerContext
         );
diff --git a/tests/js/spec/views/settings/organizationIntegrations/migrationWarnings.spec.jsx b/tests/js/spec/views/settings/organizationIntegrations/migrationWarnings.spec.jsx
index d45030ec03..c459c64e70 100644
--- a/tests/js/spec/views/settings/organizationIntegrations/migrationWarnings.spec.jsx
+++ b/tests/js/spec/views/settings/organizationIntegrations/migrationWarnings.spec.jsx
@@ -2,7 +2,7 @@
 import React from 'react';
 
 import {Client} from 'app/api';
-import {mount} from 'enzyme';
+import {mountWithTheme} from 'sentry-test/enzyme';
 import MigrationWarnings from 'app/views/organizationIntegrations/migrationWarnings';
 
 jest.mock('app/actionCreators/modal', () => ({
@@ -41,7 +41,7 @@ describe('MigrationWarnings', function() {
       ],
     });
 
-    const wrapper = mount(
+    const wrapper = mountWithTheme(
       <MigrationWarnings
         orgId={org.slug}
         providers={[githubProvider, jiraProvider]}
diff --git a/tests/js/spec/views/settings/organizationIntegrations/sentryAppInstallationDetail.spec.jsx b/tests/js/spec/views/settings/organizationIntegrations/sentryAppInstallationDetail.spec.jsx
index 1d0628dd0c..847ca78926 100644
--- a/tests/js/spec/views/settings/organizationIntegrations/sentryAppInstallationDetail.spec.jsx
+++ b/tests/js/spec/views/settings/organizationIntegrations/sentryAppInstallationDetail.spec.jsx
@@ -1,7 +1,7 @@
 import React from 'react';
 
 import {Client} from 'app/api';
-import {mount} from 'enzyme';
+import {mountWithTheme} from 'sentry-test/enzyme';
 import {openSentryAppDetailsModal} from 'app/actionCreators/modal';
 import SentryAppInstallationDetail from 'app/views/organizationIntegrations/sentryAppInstallationDetail';
 
@@ -34,7 +34,7 @@ describe('Sentry App Installations', function() {
   });
 
   it('displays all Apps owned by the Org', () => {
-    wrapper = mount(<SentryAppInstallationDetail {...props} />, routerContext);
+    wrapper = mountWithTheme(<SentryAppInstallationDetail {...props} />, routerContext);
 
     expect(wrapper).toMatchSnapshot();
     expect(wrapper.find('SentryApplicationRow').prop('app').name).toBe('Sample App');
@@ -50,7 +50,7 @@ describe('Sentry App Installations', function() {
     });
 
     it('disallows installation when already installed', () => {
-      wrapper = mount(
+      wrapper = mountWithTheme(
         <SentryAppInstallationDetail {...props} install={install} />,
         routerContext
       );
@@ -58,7 +58,7 @@ describe('Sentry App Installations', function() {
     });
 
     it('install button opens permissions modal', () => {
-      wrapper = mount(<SentryAppInstallationDetail {...props} />, routerContext);
+      wrapper = mountWithTheme(<SentryAppInstallationDetail {...props} />, routerContext);
       wrapper.find('[icon="icon-circle-add"]').simulate('click');
       expect(openSentryAppDetailsModal).toHaveBeenCalledWith(
         expect.objectContaining({
@@ -72,7 +72,7 @@ describe('Sentry App Installations', function() {
 
     it('sentry app is shown as installed', async () => {
       const app = TestStubs.SentryApp({redirectUrl: null});
-      wrapper = mount(
+      wrapper = mountWithTheme(
         <SentryAppInstallationDetail {...props} app={app} />,
         routerContext
       );
@@ -84,7 +84,7 @@ describe('Sentry App Installations', function() {
 
     it('redirects the user to the App when a redirectUrl is set', async () => {
       window.location.assign = jest.fn();
-      wrapper = mount(<SentryAppInstallationDetail {...props} />, routerContext);
+      wrapper = mountWithTheme(<SentryAppInstallationDetail {...props} />, routerContext);
 
       wrapper.find('[icon="icon-circle-add"]').simulate('click');
       expect(openSentryAppDetailsModal).toHaveBeenCalledWith(
@@ -110,7 +110,7 @@ describe('Sentry App Installations', function() {
         redirectUrl: 'https://example.com/setup?hello=1',
       });
 
-      wrapper = mount(
+      wrapper = mountWithTheme(
         <SentryAppInstallationDetail {...props} app={sentryAppWithQuery} />,
         routerContext
       );
@@ -135,7 +135,7 @@ describe('Sentry App Installations', function() {
         statusCode: 400,
       });
 
-      wrapper = mount(<SentryAppInstallationDetail {...props} />, routerContext);
+      wrapper = mountWithTheme(<SentryAppInstallationDetail {...props} />, routerContext);
       wrapper.instance().handleInstall(sentryApp);
       await tick();
       expect(wrapper.exists('[icon="icon-circle-add"]')).toBe(true);
@@ -151,7 +151,7 @@ describe('Sentry App Installations', function() {
         body: [],
       });
 
-      wrapper = mount(
+      wrapper = mountWithTheme(
         <SentryAppInstallationDetail {...props} install={install} />,
         routerContext
       );
diff --git a/tests/js/spec/views/settings/organizationMembers/index.spec.jsx b/tests/js/spec/views/settings/organizationMembers/index.spec.jsx
index ee8e672694..285d667205 100644
--- a/tests/js/spec/views/settings/organizationMembers/index.spec.jsx
+++ b/tests/js/spec/views/settings/organizationMembers/index.spec.jsx
@@ -1,8 +1,8 @@
 import React from 'react';
 import {browserHistory} from 'react-router';
+import {mountWithTheme} from 'sentry-test/enzyme';
 
 import {Client} from 'app/api';
-import {mount} from 'enzyme';
 import {openInviteMembersModal} from 'app/actionCreators/modal';
 import ConfigStore from 'app/stores/configStore';
 import OrganizationMembers from 'app/views/settings/organizationMembers';
@@ -92,7 +92,7 @@ describe('OrganizationMembers', function() {
   });
 
   it('can invite member with access', function() {
-    const wrapper = mount(
+    const wrapper = mountWithTheme(
       <OrganizationMembers
         {...defaultProps}
         params={{
@@ -115,7 +115,7 @@ describe('OrganizationMembers', function() {
       method: 'DELETE',
     });
 
-    const wrapper = mount(
+    const wrapper = mountWithTheme(
       <OrganizationMembers
         {...defaultProps}
         params={{
@@ -150,7 +150,7 @@ describe('OrganizationMembers', function() {
       statusCode: 500,
     });
 
-    const wrapper = mount(
+    const wrapper = mountWithTheme(
       <OrganizationMembers
         {...defaultProps}
         params={{
@@ -184,7 +184,7 @@ describe('OrganizationMembers', function() {
       method: 'DELETE',
     });
 
-    const wrapper = mount(
+    const wrapper = mountWithTheme(
       <OrganizationMembers
         {...defaultProps}
         params={{
@@ -225,7 +225,7 @@ describe('OrganizationMembers', function() {
     });
     OrganizationsStore.add(secondOrg);
 
-    const wrapper = mount(
+    const wrapper = mountWithTheme(
       <OrganizationMembers
         {...defaultProps}
         params={{
@@ -261,7 +261,7 @@ describe('OrganizationMembers', function() {
       statusCode: 500,
     });
 
-    const wrapper = mount(
+    const wrapper = mountWithTheme(
       <OrganizationMembers
         {...defaultProps}
         params={{
@@ -297,7 +297,7 @@ describe('OrganizationMembers', function() {
         id: '1234',
       },
     });
-    const wrapper = mount(
+    const wrapper = mountWithTheme(
       <OrganizationMembers
         {...defaultProps}
         params={{
@@ -323,7 +323,7 @@ describe('OrganizationMembers', function() {
       url: '/organizations/org-id/access-requests/pending-id/',
       method: 'PUT',
     });
-    const wrapper = mount(
+    const wrapper = mountWithTheme(
       <OrganizationMembers
         {...defaultProps}
         params={{
@@ -356,7 +356,7 @@ describe('OrganizationMembers', function() {
       url: '/organizations/org-id/access-requests/pending-id/',
       method: 'PUT',
     });
-    const wrapper = mount(
+    const wrapper = mountWithTheme(
       <OrganizationMembers
         {...defaultProps}
         params={{
@@ -391,7 +391,7 @@ describe('OrganizationMembers', function() {
       body: [],
     });
     const routerContext = TestStubs.routerContext();
-    const wrapper = mount(
+    const wrapper = mountWithTheme(
       <OrganizationMembers
         {...defaultProps}
         params={{
diff --git a/tests/js/spec/views/settings/organizationMembers/organizationMemberDetail.spec.jsx b/tests/js/spec/views/settings/organizationMembers/organizationMemberDetail.spec.jsx
index 596c2c915c..dc0870c7d0 100644
--- a/tests/js/spec/views/settings/organizationMembers/organizationMemberDetail.spec.jsx
+++ b/tests/js/spec/views/settings/organizationMembers/organizationMemberDetail.spec.jsx
@@ -1,5 +1,5 @@
 import React from 'react';
-import {mount} from 'enzyme';
+import {mountWithTheme} from 'sentry-test/enzyme';
 
 import {updateMember} from 'app/actionCreators/members';
 import OrganizationMemberDetail from 'app/views/settings/organizationMembers/organizationMemberDetail';
@@ -72,7 +72,7 @@ describe('OrganizationMemberDetail', function() {
     });
 
     it('changes role to owner', function() {
-      wrapper = mount(
+      wrapper = mountWithTheme(
         <OrganizationMemberDetail params={{memberId: member.id}} />,
         routerContext
       );
@@ -106,7 +106,7 @@ describe('OrganizationMemberDetail', function() {
     });
 
     it('leaves a team', async function() {
-      wrapper = mount(
+      wrapper = mountWithTheme(
         <OrganizationMemberDetail params={{memberId: member.id}} />,
         routerContext
       );
@@ -132,7 +132,7 @@ describe('OrganizationMemberDetail', function() {
     });
 
     it('joins a team', async function() {
-      wrapper = mount(
+      wrapper = mountWithTheme(
         <OrganizationMemberDetail params={{memberId: member.id}} />,
         routerContext
       );
@@ -173,7 +173,7 @@ describe('OrganizationMemberDetail', function() {
     });
 
     it('can not change roles, teams, or save', async function() {
-      wrapper = mount(
+      wrapper = mountWithTheme(
         <OrganizationMemberDetail params={{memberId: member.id}} />,
         routerContext
       );
@@ -201,7 +201,7 @@ describe('OrganizationMemberDetail', function() {
     });
 
     it('display pending status', function() {
-      wrapper = mount(
+      wrapper = mountWithTheme(
         <OrganizationMemberDetail params={{memberId: pendingMember.id}} />,
         routerContext
       );
@@ -212,7 +212,7 @@ describe('OrganizationMemberDetail', function() {
     });
 
     it('display expired status', function() {
-      wrapper = mount(
+      wrapper = mountWithTheme(
         <OrganizationMemberDetail params={{memberId: expiredMember.id}} />,
         routerContext
       );
@@ -230,7 +230,7 @@ describe('OrganizationMemberDetail', function() {
     });
 
     it('shows for pending', function() {
-      wrapper = mount(
+      wrapper = mountWithTheme(
         <OrganizationMemberDetail params={{memberId: pendingMember.id}} />,
         routerContext
       );
@@ -240,7 +240,7 @@ describe('OrganizationMemberDetail', function() {
     });
 
     it('does not show for expired', function() {
-      wrapper = mount(
+      wrapper = mountWithTheme(
         <OrganizationMemberDetail params={{memberId: expiredMember.id}} />,
         routerContext
       );
@@ -343,7 +343,7 @@ describe('OrganizationMemberDetail', function() {
     };
 
     it('does not show for pending member', function() {
-      wrapper = mount(
+      wrapper = mountWithTheme(
         <OrganizationMemberDetail params={{memberId: pendingMember.id}} />,
         routerContext
       );
@@ -351,7 +351,7 @@ describe('OrganizationMemberDetail', function() {
     });
 
     it('shows tooltip for joined member without permission to edit', function() {
-      wrapper = mount(
+      wrapper = mountWithTheme(
         <OrganizationMemberDetail params={{memberId: noAccess.id}} />,
         routerContext
       );
@@ -359,7 +359,7 @@ describe('OrganizationMemberDetail', function() {
     });
 
     it('shows tooltip for member without 2fa', function() {
-      wrapper = mount(
+      wrapper = mountWithTheme(
         <OrganizationMemberDetail params={{memberId: no2fa.id}} />,
         routerContext
       );
@@ -374,7 +374,7 @@ describe('OrganizationMemberDetail', function() {
         });
       });
 
-      wrapper = mount(
+      wrapper = mountWithTheme(
         <OrganizationMemberDetail params={{memberId: has2fa.id}} />,
         routerContext
       );
@@ -388,7 +388,7 @@ describe('OrganizationMemberDetail', function() {
     });
 
     it('shows tooltip for member in multiple orgs', function() {
-      wrapper = mount(
+      wrapper = mountWithTheme(
         <OrganizationMemberDetail params={{memberId: multipleOrgs.id}} />,
         routerContext
       );
@@ -402,7 +402,7 @@ describe('OrganizationMemberDetail', function() {
         body: has2fa,
       });
 
-      wrapper = mount(
+      wrapper = mountWithTheme(
         <OrganizationMemberDetail params={{memberId: has2fa.id}} />,
         routerContext
       );
diff --git a/tests/js/spec/views/settings/organizationMembers/organizationMemberRow.spec.jsx b/tests/js/spec/views/settings/organizationMembers/organizationMemberRow.spec.jsx
index b99b6058b3..11d9870698 100644
--- a/tests/js/spec/views/settings/organizationMembers/organizationMemberRow.spec.jsx
+++ b/tests/js/spec/views/settings/organizationMembers/organizationMemberRow.spec.jsx
@@ -1,5 +1,5 @@
 import React from 'react';
-import {shallow} from 'enzyme';
+import {shallow} from 'sentry-test/enzyme';
 
 import OrganizationMemberRow from 'app/views/settings/organizationMembers/organizationMemberRow';
 
diff --git a/tests/js/spec/views/settings/organizationProjects.spec.jsx b/tests/js/spec/views/settings/organizationProjects.spec.jsx
index 9a8a35ca7c..a8d03fad31 100644
--- a/tests/js/spec/views/settings/organizationProjects.spec.jsx
+++ b/tests/js/spec/views/settings/organizationProjects.spec.jsx
@@ -1,5 +1,5 @@
 import React from 'react';
-import {mount} from 'enzyme';
+import {mountWithTheme} from 'sentry-test/enzyme';
 
 import {Client} from 'app/api';
 import OrganizationProjectsContainer from 'app/views/settings/organizationProjects';
@@ -36,8 +36,8 @@ describe('OrganizationProjects', function() {
     Client.clearMockResponses();
   });
 
-  it('Should render the projects in the store', function() {
-    const wrapper = mount(
+  it('should render the projects in the store', function() {
+    const wrapper = mountWithTheme(
       <OrganizationProjectsContainer params={{orgId: org.slug}} location={{query: {}}} />,
       routerContext
     );
@@ -61,7 +61,7 @@ describe('OrganizationProjects', function() {
       url: `/organizations/${org.slug}/projects/`,
       body: [],
     });
-    const wrapper = mount(
+    const wrapper = mountWithTheme(
       <OrganizationProjectsContainer location={{query: {}}} params={{orgId: org.slug}} />,
       routerContext
     );
diff --git a/tests/js/spec/views/settings/organizationRateLimits.spec.jsx b/tests/js/spec/views/settings/organizationRateLimits.spec.jsx
index f10c9b7ba5..05166f48f3 100644
--- a/tests/js/spec/views/settings/organizationRateLimits.spec.jsx
+++ b/tests/js/spec/views/settings/organizationRateLimits.spec.jsx
@@ -1,4 +1,4 @@
-import {mount} from 'enzyme';
+import {mountWithTheme} from 'sentry-test/enzyme';
 import React from 'react';
 
 import {Client} from 'app/api';
@@ -24,7 +24,7 @@ describe('Organization Rate Limits', function() {
   });
 
   it('renders with initialData', function() {
-    const wrapper = mount(creator(), TestStubs.routerContext());
+    const wrapper = mountWithTheme(creator(), TestStubs.routerContext());
 
     expect(
       wrapper
@@ -48,7 +48,10 @@ describe('Organization Rate Limits', function() {
         maxRateInterval: 60,
       },
     };
-    const wrapper = mount(creator({organization: org}), TestStubs.routerContext());
+    const wrapper = mountWithTheme(
+      creator({organization: org}),
+      TestStubs.routerContext()
+    );
 
     expect(wrapper.find('RangeSlider')).toHaveLength(1);
 
@@ -62,7 +65,7 @@ describe('Organization Rate Limits', function() {
       statusCode: 200,
     });
 
-    const wrapper = mount(creator(), TestStubs.routerContext());
+    const wrapper = mountWithTheme(creator(), TestStubs.routerContext());
 
     expect(mock).not.toHaveBeenCalled();
 
@@ -92,7 +95,7 @@ describe('Organization Rate Limits', function() {
       statusCode: 200,
     });
 
-    const wrapper = mount(creator(), TestStubs.routerContext());
+    const wrapper = mountWithTheme(creator(), TestStubs.routerContext());
 
     expect(mock).not.toHaveBeenCalled();
 
diff --git a/tests/js/spec/views/settings/organizationRepositories.spec.jsx b/tests/js/spec/views/settings/organizationRepositories.spec.jsx
index 462f1f01f2..f157646173 100644
--- a/tests/js/spec/views/settings/organizationRepositories.spec.jsx
+++ b/tests/js/spec/views/settings/organizationRepositories.spec.jsx
@@ -1,5 +1,5 @@
 import React from 'react';
-import {shallow} from 'enzyme';
+import {shallow} from 'sentry-test/enzyme';
 
 import {Client} from 'app/api';
 import OrganizationRepositories from 'app/views/settings/organizationRepositories/organizationRepositories';
diff --git a/tests/js/spec/views/settings/organizationRepositoriesContainer.spec.jsx b/tests/js/spec/views/settings/organizationRepositoriesContainer.spec.jsx
index 9e9ad4754c..c62a1536d9 100644
--- a/tests/js/spec/views/settings/organizationRepositoriesContainer.spec.jsx
+++ b/tests/js/spec/views/settings/organizationRepositoriesContainer.spec.jsx
@@ -1,6 +1,6 @@
 import PropTypes from 'prop-types';
 import React from 'react';
-import {shallow} from 'enzyme';
+import {shallow} from 'sentry-test/enzyme';
 
 import {Client} from 'app/api';
 import OrganizationRepositoriesContainer from 'app/views/settings/organizationRepositories';
diff --git a/tests/js/spec/views/settings/organizationSettingsForm.spec.jsx b/tests/js/spec/views/settings/organizationSettingsForm.spec.jsx
index 3a51db9787..30363b9c4e 100644
--- a/tests/js/spec/views/settings/organizationSettingsForm.spec.jsx
+++ b/tests/js/spec/views/settings/organizationSettingsForm.spec.jsx
@@ -1,5 +1,5 @@
 import React from 'react';
-import {mount} from 'enzyme';
+import {mountWithTheme} from 'sentry-test/enzyme';
 
 import {saveOnBlurUndoMessage} from 'app/actionCreators/indicator';
 import OrganizationSettingsForm from 'app/views/settings/organizationGeneralSettings/organizationSettingsForm';
@@ -26,7 +26,7 @@ describe('OrganizationSettingsForm', function() {
       },
     });
 
-    const wrapper = mount(
+    const wrapper = mountWithTheme(
       <OrganizationSettingsForm
         location={TestStubs.location()}
         orgId={organization.id}
@@ -91,7 +91,7 @@ describe('OrganizationSettingsForm', function() {
       method: 'PUT',
     });
 
-    const wrapper = mount(
+    const wrapper = mountWithTheme(
       <OrganizationSettingsForm
         location={TestStubs.location()}
         orgId={organization.slug}
diff --git a/tests/js/spec/views/settings/organizationTeams.spec.jsx b/tests/js/spec/views/settings/organizationTeams.spec.jsx
index 1609627e95..af3d074468 100644
--- a/tests/js/spec/views/settings/organizationTeams.spec.jsx
+++ b/tests/js/spec/views/settings/organizationTeams.spec.jsx
@@ -1,7 +1,7 @@
 import React from 'react';
 
-import {initializeOrg} from 'app-test/helpers/initializeOrg';
-import {mount} from 'enzyme';
+import {initializeOrg} from 'sentry-test/initializeOrg';
+import {mountWithTheme} from 'sentry-test/enzyme';
 import {openCreateTeamModal} from 'app/actionCreators/modal';
 import OrganizationTeams from 'app/views/settings/organizationTeams/organizationTeams';
 import recreateRoute from 'app/utils/recreateRoute';
@@ -29,7 +29,7 @@ describe('OrganizationTeams', function() {
     const teams = [TestStubs.Team()];
 
     const createWrapper = props =>
-      mount(
+      mountWithTheme(
         <OrganizationTeams
           params={{orgId: organization.slug, projectId: project.slug}}
           routes={[]}
@@ -78,7 +78,7 @@ describe('OrganizationTeams', function() {
       },
     });
     const createWrapper = props =>
-      mount(
+      mountWithTheme(
         <OrganizationTeams
           params={{orgId: organization.slug, projectId: project.slug}}
           routes={[]}
diff --git a/tests/js/spec/views/settings/projectAlertRuleDetails.spec.jsx b/tests/js/spec/views/settings/projectAlertRuleDetails.spec.jsx
index 54dbbaa150..e1c6263a78 100644
--- a/tests/js/spec/views/settings/projectAlertRuleDetails.spec.jsx
+++ b/tests/js/spec/views/settings/projectAlertRuleDetails.spec.jsx
@@ -1,10 +1,10 @@
 import React from 'react';
-import {mount} from 'enzyme';
+import {mountWithTheme} from 'sentry-test/enzyme';
 import {browserHistory} from 'react-router';
 
 import ProjectAlertRuleDetails from 'app/views/settings/projectAlerts/projectAlertRuleDetails';
 
-import {selectByValue} from 'app-test/helpers/select';
+import {selectByValue} from 'sentry-test/select';
 
 jest.mock('jquery');
 jest.unmock('app/utils/recreateRoute');
@@ -75,7 +75,7 @@ describe('ProjectAlertRuleDetails', function() {
         body: TestStubs.ProjectAlertRule(),
       });
 
-      wrapper = mount(
+      wrapper = mountWithTheme(
         <ProjectAlertRuleDetails
           routes={projectAlertRuleDetailsRoutes}
           params={{orgId: 'org-slug', projectId: 'project-slug'}}
@@ -128,7 +128,7 @@ describe('ProjectAlertRuleDetails', function() {
         body: TestStubs.ProjectAlertRule(),
       });
 
-      wrapper = mount(
+      wrapper = mountWithTheme(
         <ProjectAlertRuleDetails
           routes={projectAlertRuleDetailsRoutes}
           params={{orgId: 'org-slug', projectId: 'project-slug', ruleId: '1'}}
diff --git a/tests/js/spec/views/settings/projectAlertRules.spec.jsx b/tests/js/spec/views/settings/projectAlertRules.spec.jsx
index ab22c8aa5f..5fb81f1545 100644
--- a/tests/js/spec/views/settings/projectAlertRules.spec.jsx
+++ b/tests/js/spec/views/settings/projectAlertRules.spec.jsx
@@ -1,5 +1,5 @@
 import React from 'react';
-import {mount} from 'enzyme';
+import {mountWithTheme} from 'sentry-test/enzyme';
 
 import ProjectAlertRules from 'app/views/settings/projectAlerts/projectAlertRules';
 
@@ -23,7 +23,7 @@ describe('projectAlertRules', function() {
   });
 
   it('deletes', function() {
-    const wrapper = mount(
+    const wrapper = mountWithTheme(
       <ProjectAlertRules routes={[]} params={{orgId: 'org1', projectId: 'project1'}} />,
       TestStubs.routerContext()
     );
@@ -35,7 +35,7 @@ describe('projectAlertRules', function() {
   });
 
   it('has disabled edit rule button without access', function() {
-    const wrapper = mount(
+    const wrapper = mountWithTheme(
       <ProjectAlertRules routes={[]} params={{orgId: 'org1', projectId: 'project1'}} />,
       TestStubs.routerContext([{organization: TestStubs.Organization({access: []})}])
     );
diff --git a/tests/js/spec/views/settings/projectEnvironments.spec.jsx b/tests/js/spec/views/settings/projectEnvironments.spec.jsx
index d9af2b490f..01c44db393 100644
--- a/tests/js/spec/views/settings/projectEnvironments.spec.jsx
+++ b/tests/js/spec/views/settings/projectEnvironments.spec.jsx
@@ -1,5 +1,5 @@
 import React from 'react';
-import {mount} from 'enzyme';
+import {mountWithTheme} from 'sentry-test/enzyme';
 
 import ProjectEnvironments from 'app/views/settings/project/projectEnvironments';
 import recreateRoute from 'app/utils/recreateRoute';
@@ -12,7 +12,7 @@ function mountComponent(isHidden) {
   const org = TestStubs.Organization();
   const project = TestStubs.Project();
   const pathname = isHidden ? 'environments/hidden/' : 'environments/';
-  return mount(
+  return mountWithTheme(
     <ProjectEnvironments
       params={{
         orgId: org.slug,
diff --git a/tests/js/spec/views/settings/projectGeneralSettings.spec.jsx b/tests/js/spec/views/settings/projectGeneralSettings.spec.jsx
index 8a0926ec87..5f99bbbea0 100644
--- a/tests/js/spec/views/settings/projectGeneralSettings.spec.jsx
+++ b/tests/js/spec/views/settings/projectGeneralSettings.spec.jsx
@@ -1,12 +1,12 @@
 import {browserHistory} from 'react-router';
 import React from 'react';
 
-import {mount} from 'enzyme';
+import {mountWithTheme} from 'sentry-test/enzyme';
 import ProjectContext from 'app/views/projects/projectContext';
 import ProjectGeneralSettings from 'app/views/settings/projectGeneralSettings';
 import ProjectsStore from 'app/stores/projectsStore';
 
-import {selectByValue} from 'app-test/helpers/select';
+import {selectByValue} from 'sentry-test/select';
 
 jest.mock('jquery');
 
@@ -64,7 +64,7 @@ describe('projectGeneralSettings', function() {
   });
 
   it('renders form fields', function() {
-    const wrapper = mount(
+    const wrapper = mountWithTheme(
       <ProjectGeneralSettings params={{orgId: org.slug, projectId: project.slug}} />,
       TestStubs.routerContext()
     );
@@ -102,7 +102,7 @@ describe('projectGeneralSettings', function() {
   it('disables field when equivalent org setting is true', function() {
     routerContext.context.organization.dataScrubber = true;
     routerContext.context.organization.scrubIPAddresses = false;
-    const wrapper = mount(
+    const wrapper = mountWithTheme(
       <ProjectGeneralSettings params={{orgId: org.slug, projectId: project.slug}} />,
       routerContext
     );
@@ -116,7 +116,7 @@ describe('projectGeneralSettings', function() {
 
   it('disables scrapeJavaScript when equivalent org setting is false', function() {
     routerContext.context.organization.scrapeJavaScript = false;
-    const wrapper = mount(
+    const wrapper = mountWithTheme(
       <ProjectGeneralSettings params={{orgId: org.slug, projectId: project.slug}} />,
       routerContext
     );
@@ -130,7 +130,7 @@ describe('projectGeneralSettings', function() {
       method: 'DELETE',
     });
 
-    const wrapper = mount(
+    const wrapper = mountWithTheme(
       <ProjectGeneralSettings params={{orgId: org.slug, projectId: project.slug}} />,
       TestStubs.routerContext()
     );
@@ -154,7 +154,7 @@ describe('projectGeneralSettings', function() {
       method: 'POST',
     });
 
-    const wrapper = mount(
+    const wrapper = mountWithTheme(
       <ProjectGeneralSettings params={{orgId: org.slug, projectId: project.slug}} />,
       TestStubs.routerContext()
     );
@@ -185,7 +185,7 @@ describe('projectGeneralSettings', function() {
 
   it('displays transfer/remove message for non-admins', function() {
     routerContext.context.organization.access = ['org:read'];
-    const wrapper = mount(
+    const wrapper = mountWithTheme(
       <ProjectGeneralSettings params={{orgId: org.slug, projectId: project.slug}} />,
       routerContext
     );
@@ -200,7 +200,7 @@ describe('projectGeneralSettings', function() {
 
   it('disables the form for users without write permissions', function() {
     routerContext.context.organization.access = ['org:read'];
-    const wrapper = mount(
+    const wrapper = mountWithTheme(
       <ProjectGeneralSettings params={{orgId: org.slug, projectId: project.slug}} />,
       routerContext
     );
@@ -227,7 +227,7 @@ describe('projectGeneralSettings', function() {
         platform: 'javascript',
       },
     });
-    const wrapper = mount(
+    const wrapper = mountWithTheme(
       <ProjectContext orgId={org.slug} projectId={project.slug}>
         <ProjectGeneralSettings
           routes={[]}
@@ -265,7 +265,7 @@ describe('projectGeneralSettings', function() {
         slug: 'new-project',
       },
     });
-    const wrapper = mount(
+    const wrapper = mountWithTheme(
       <ProjectContext orgId={org.slug} projectId={project.slug}>
         <ProjectGeneralSettings
           routes={[]}
@@ -332,7 +332,7 @@ describe('projectGeneralSettings', function() {
           slug: 'new-project',
         },
       });
-      wrapper = mount(
+      wrapper = mountWithTheme(
         <ProjectContext orgId={org.slug} projectId={project.slug}>
           <ProjectGeneralSettings
             routes={[]}
diff --git a/tests/js/spec/views/settings/projectReleaseTracking.spec.jsx b/tests/js/spec/views/settings/projectReleaseTracking.spec.jsx
index fab2b9c391..a793404e98 100644
--- a/tests/js/spec/views/settings/projectReleaseTracking.spec.jsx
+++ b/tests/js/spec/views/settings/projectReleaseTracking.spec.jsx
@@ -1,5 +1,5 @@
 import React from 'react';
-import {mount} from 'enzyme';
+import {mountWithTheme} from 'sentry-test/enzyme';
 
 import ProjectReleaseTrackingContainer, {
   ProjectReleaseTracking,
@@ -33,7 +33,7 @@ describe('ProjectReleaseTracking', function() {
   });
 
   it('renders with token', function() {
-    const wrapper = mount(
+    const wrapper = mountWithTheme(
       <ProjectReleaseTracking
         organization={org}
         project={project}
@@ -47,7 +47,7 @@ describe('ProjectReleaseTracking', function() {
   });
 
   it('can regenerate token', function(done) {
-    const wrapper = mount(
+    const wrapper = mountWithTheme(
       <ProjectReleaseTracking
         organization={org}
         project={project}
@@ -85,7 +85,7 @@ describe('ProjectReleaseTracking', function() {
   });
 
   it('fetches new plugins when project changes', function() {
-    const wrapper = mount(
+    const wrapper = mountWithTheme(
       <ProjectReleaseTrackingContainer
         organization={org}
         project={project}
diff --git a/tests/js/spec/views/settings/projectUserFeedback.spec.jsx b/tests/js/spec/views/settings/projectUserFeedback.spec.jsx
index 83b344c379..4e61c64965 100644
--- a/tests/js/spec/views/settings/projectUserFeedback.spec.jsx
+++ b/tests/js/spec/views/settings/projectUserFeedback.spec.jsx
@@ -1,6 +1,6 @@
 import React from 'react';
 
-import {mount} from 'enzyme';
+import {mountWithTheme} from 'sentry-test/enzyme';
 import ProjectUserFeedback from 'app/views/settings/project/projectUserFeedback';
 
 describe('ProjectUserFeedback', function() {
@@ -23,7 +23,7 @@ describe('ProjectUserFeedback', function() {
   });
 
   it('can toggle sentry branding option', function() {
-    const wrapper = mount(
+    const wrapper = mountWithTheme(
       <ProjectUserFeedback
         organization={org}
         project={project}
diff --git a/tests/js/spec/views/settings/settingsIndex.spec.jsx b/tests/js/spec/views/settings/settingsIndex.spec.jsx
index a7924d8f27..4cd37f4f31 100644
--- a/tests/js/spec/views/settings/settingsIndex.spec.jsx
+++ b/tests/js/spec/views/settings/settingsIndex.spec.jsx
@@ -1,4 +1,4 @@
-import {shallow, mount} from 'enzyme';
+import {shallow, mountWithTheme} from 'sentry-test/enzyme';
 import React from 'react';
 
 import * as OrgActions from 'app/actionCreators/organizations';
@@ -52,7 +52,7 @@ describe('SettingsIndex', function() {
         url: `/organizations/${organization.slug}/`,
       });
       ConfigStore.config.isOnPremise = false;
-      wrapper = mount(<SettingsIndex params={{}} />, TestStubs.routerContext());
+      wrapper = mountWithTheme(<SettingsIndex params={{}} />, TestStubs.routerContext());
     });
 
     it('fetches org details for SidebarDropdown', function() {
diff --git a/tests/js/spec/views/sharedGroupDetails/index.spec.jsx b/tests/js/spec/views/sharedGroupDetails/index.spec.jsx
index 4b9cbe0cfc..83e1eb0c4a 100644
--- a/tests/js/spec/views/sharedGroupDetails/index.spec.jsx
+++ b/tests/js/spec/views/sharedGroupDetails/index.spec.jsx
@@ -1,5 +1,5 @@
 import React from 'react';
-import {mount} from 'enzyme';
+import {mountWithTheme} from 'sentry-test/enzyme';
 import SharedGroupDetails from 'app/views/sharedGroupDetails';
 
 describe('SharedGroupDetails', function() {
@@ -25,7 +25,10 @@ describe('SharedGroupDetails', function() {
       params: {shareId: 'a'},
     };
 
-    const wrapper = mount(<SharedGroupDetails {...props} />, TestStubs.routerContext());
+    const wrapper = mountWithTheme(
+      <SharedGroupDetails {...props} />,
+      TestStubs.routerContext()
+    );
     expect(wrapper).toMatchSnapshot();
   });
 });
diff --git a/tests/js/spec/views/teamCreate.spec.jsx b/tests/js/spec/views/teamCreate.spec.jsx
index 4c0fbce5df..90314d1bb8 100644
--- a/tests/js/spec/views/teamCreate.spec.jsx
+++ b/tests/js/spec/views/teamCreate.spec.jsx
@@ -1,5 +1,5 @@
 import React from 'react';
-import {shallow} from 'enzyme';
+import {shallow} from 'sentry-test/enzyme';
 
 import {TeamCreate} from 'app/views/teamCreate';
 
diff --git a/tests/js/spec/views/teamMembers.spec.jsx b/tests/js/spec/views/teamMembers.spec.jsx
index 88131a3dd6..ac82290dd1 100644
--- a/tests/js/spec/views/teamMembers.spec.jsx
+++ b/tests/js/spec/views/teamMembers.spec.jsx
@@ -1,8 +1,8 @@
 import React from 'react';
 
 import {Client} from 'app/api';
-import {initializeOrg} from 'app-test/helpers/initializeOrg';
-import {mount} from 'enzyme';
+import {initializeOrg} from 'sentry-test/initializeOrg';
+import {mountWithTheme} from 'sentry-test/enzyme';
 import TeamMembers from 'app/views/settings/organizationTeams/teamMembers';
 
 describe('TeamMembers', function() {
@@ -25,7 +25,7 @@ describe('TeamMembers', function() {
   });
 
   it('renders', async function() {
-    const wrapper = mount(
+    const wrapper = mountWithTheme(
       <TeamMembers
         params={{orgId: organization.slug, teamId: team.slug}}
         organization={organization}
@@ -46,7 +46,7 @@ describe('TeamMembers', function() {
       statusCode: 200,
     });
 
-    const wrapper = mount(
+    const wrapper = mountWithTheme(
       <TeamMembers
         params={{orgId: organization.slug, teamId: team.slug}}
         organization={organization}
@@ -95,7 +95,7 @@ describe('TeamMembers', function() {
       access: [],
     });
 
-    const wrapper = mount(
+    const wrapper = mountWithTheme(
       <TeamMembers
         params={{orgId: organization.slug, teamId: team.slug}}
         organization={organizationMember}
diff --git a/tests/js/spec/views/teamSettings.spec.jsx b/tests/js/spec/views/teamSettings.spec.jsx
index 720babf428..63022ef846 100644
--- a/tests/js/spec/views/teamSettings.spec.jsx
+++ b/tests/js/spec/views/teamSettings.spec.jsx
@@ -1,5 +1,5 @@
 import React from 'react';
-import {mount} from 'enzyme';
+import {mountWithTheme} from 'sentry-test/enzyme';
 
 import TeamStore from 'app/stores/teamStore';
 import TeamSettings from 'app/views/settings/organizationTeams/teamSettings';
@@ -23,7 +23,7 @@ describe('TeamSettings', function() {
     const mountOptions = TestStubs.routerContext();
     const {router} = mountOptions.context;
 
-    const wrapper = mount(
+    const wrapper = mountWithTheme(
       <TeamSettings
         routes={[]}
         router={router}
@@ -71,7 +71,7 @@ describe('TeamSettings', function() {
   it('needs team:admin in order to see an enabled Remove Team button', function() {
     const team = TestStubs.Team();
 
-    const wrapper = mount(
+    const wrapper = mountWithTheme(
       <TeamSettings
         routes={[]}
         params={{orgId: 'org', teamId: team.slug}}
@@ -104,7 +104,7 @@ describe('TeamSettings', function() {
       },
     ]);
 
-    const wrapper = mount(
+    const wrapper = mountWithTheme(
       <TeamSettings
         router={{replace: routerPushMock}}
         routes={[]}
diff --git a/tests/js/spec/views/twoFactorRequired.spec.jsx b/tests/js/spec/views/twoFactorRequired.spec.jsx
index f10fcc99e1..d1988a42ab 100644
--- a/tests/js/spec/views/twoFactorRequired.spec.jsx
+++ b/tests/js/spec/views/twoFactorRequired.spec.jsx
@@ -1,5 +1,5 @@
 import React from 'react';
-import {mount} from 'enzyme';
+import {mountWithTheme} from 'sentry-test/enzyme';
 import Cookies from 'js-cookie';
 
 import TwoFactorRequired from 'app/views/settings/account/accountSecurity/';
@@ -29,7 +29,7 @@ describe('TwoFactorRequired', function() {
       body: [],
     });
 
-    const wrapper = mount(
+    const wrapper = mountWithTheme(
       <AccountSecurityWrapper>
         <TwoFactorRequired />
       </AccountSecurityWrapper>,
@@ -40,7 +40,7 @@ describe('TwoFactorRequired', function() {
   });
 
   it('does not render when 2FA is disabled and no pendingInvite cookie', function() {
-    const wrapper = mount(
+    const wrapper = mountWithTheme(
       <AccountSecurityWrapper>
         <TwoFactorRequired />
       </AccountSecurityWrapper>,
@@ -56,7 +56,7 @@ describe('TwoFactorRequired', function() {
       body: [TestStubs.Authenticators().Totp({isEnrolled: true})],
     });
 
-    const wrapper = mount(
+    const wrapper = mountWithTheme(
       <AccountSecurityWrapper>
         <TwoFactorRequired />
       </AccountSecurityWrapper>,
@@ -82,7 +82,7 @@ describe('TwoFactorRequired', function() {
       body: TestStubs.Organizations({require2FA: true}),
     });
 
-    const wrapper = mount(
+    const wrapper = mountWithTheme(
       <AccountSecurityWrapper>
         <TwoFactorRequired />
       </AccountSecurityWrapper>,
@@ -100,7 +100,7 @@ describe('TwoFactorRequired', function() {
       body: TestStubs.Organizations({require2FA: true}),
     });
 
-    const wrapper = mount(
+    const wrapper = mountWithTheme(
       <AccountSecurityWrapper>
         <TwoFactorRequired />
       </AccountSecurityWrapper>,
diff --git a/tests/js/spec/views/userFeedback/organizationUserFeedback.spec.jsx b/tests/js/spec/views/userFeedback/organizationUserFeedback.spec.jsx
index 968cc0310e..fc3cbe061a 100644
--- a/tests/js/spec/views/userFeedback/organizationUserFeedback.spec.jsx
+++ b/tests/js/spec/views/userFeedback/organizationUserFeedback.spec.jsx
@@ -1,6 +1,6 @@
 import React from 'react';
 
-import {mount} from 'enzyme';
+import {mountWithTheme} from 'sentry-test/enzyme';
 import {OrganizationUserFeedback} from 'app/views/userFeedback/organizationUserFeedback';
 
 describe('OrganizationUserFeedback', function() {
@@ -45,7 +45,10 @@ describe('OrganizationUserFeedback', function() {
         orgId: organization.slug,
       },
     };
-    const wrapper = mount(<OrganizationUserFeedback {...params} />, routerContext);
+    const wrapper = mountWithTheme(
+      <OrganizationUserFeedback {...params} />,
+      routerContext
+    );
 
     expect(wrapper.find('CompactIssue')).toHaveLength(1);
   });
@@ -60,7 +63,10 @@ describe('OrganizationUserFeedback', function() {
         orgId: organization.slug,
       },
     };
-    const wrapper = mount(<OrganizationUserFeedback {...params} />, routerContext);
+    const wrapper = mountWithTheme(
+      <OrganizationUserFeedback {...params} />,
+      routerContext
+    );
 
     expect(wrapper.find('NoProjectMessage').exists()).toBe(true);
     expect(wrapper.find('UserFeedbackEmpty').exists()).toBe(false);
@@ -81,7 +87,10 @@ describe('OrganizationUserFeedback', function() {
         orgId: organization.slug,
       },
     };
-    const wrapper = mount(<OrganizationUserFeedback {...params} />, routerContext);
+    const wrapper = mountWithTheme(
+      <OrganizationUserFeedback {...params} />,
+      routerContext
+    );
 
     expect(wrapper.find('UserFeedbackEmpty').prop('projectIds')).toEqual([]);
   });
@@ -101,7 +110,10 @@ describe('OrganizationUserFeedback', function() {
         orgId: organization.slug,
       },
     };
-    const wrapper = mount(<OrganizationUserFeedback {...params} />, routerContext);
+    const wrapper = mountWithTheme(
+      <OrganizationUserFeedback {...params} />,
+      routerContext
+    );
 
     expect(wrapper.find('UserFeedbackEmpty').prop('projectIds')).toEqual(['112']);
   });
@@ -121,7 +133,10 @@ describe('OrganizationUserFeedback', function() {
         orgId: organization.slug,
       },
     };
-    const wrapper = mount(<OrganizationUserFeedback {...params} />, routerContext);
+    const wrapper = mountWithTheme(
+      <OrganizationUserFeedback {...params} />,
+      routerContext
+    );
 
     expect(wrapper.find('UserFeedbackEmpty').prop('projectIds')).toEqual(['112', '113']);
   });
diff --git a/tests/js/spec/views/userFeedback/userFeedbackEmpty.spec.jsx b/tests/js/spec/views/userFeedback/userFeedbackEmpty.spec.jsx
index 637bb0d9f2..846b1e9b61 100644
--- a/tests/js/spec/views/userFeedback/userFeedbackEmpty.spec.jsx
+++ b/tests/js/spec/views/userFeedback/userFeedbackEmpty.spec.jsx
@@ -1,6 +1,6 @@
 import React from 'react';
 
-import {mount} from 'enzyme';
+import {mountWithTheme} from 'sentry-test/enzyme';
 import UserFeedbackEmpty from 'app/views/userFeedback/userFeedbackEmpty';
 
 describe('UserFeedbackEmpty', function() {
@@ -10,12 +10,12 @@ describe('UserFeedbackEmpty', function() {
 
   it('renders empty', function() {
     const organization = TestStubs.Organization();
-    mount(<UserFeedbackEmpty organization={organization} />, routerContext);
+    mountWithTheme(<UserFeedbackEmpty organization={organization} />, routerContext);
   });
 
   it('renders landing for project with no user feedback', function() {
     const organization = TestStubs.Organization({projects: [TestStubs.Project()]});
-    const wrapper = mount(
+    const wrapper = mountWithTheme(
       <UserFeedbackEmpty organization={organization} />,
       routerContext
     );
@@ -27,7 +27,7 @@ describe('UserFeedbackEmpty', function() {
     const organization = TestStubs.Organization({
       projects: [projectWithReports],
     });
-    const wrapper = mount(
+    const wrapper = mountWithTheme(
       <UserFeedbackEmpty organization={organization} />,
       routerContext
     );
@@ -39,7 +39,7 @@ describe('UserFeedbackEmpty', function() {
     const organization = TestStubs.Organization({
       projects: [TestStubs.Project(), TestStubs.Project({hasUserReports: true})],
     });
-    const wrapper = mount(
+    const wrapper = mountWithTheme(
       <UserFeedbackEmpty organization={organization} />,
       routerContext
     );
@@ -51,7 +51,7 @@ describe('UserFeedbackEmpty', function() {
     const organization = TestStubs.Organization({
       projects: [project, projectWithReports],
     });
-    const wrapper = mount(
+    const wrapper = mountWithTheme(
       <UserFeedbackEmpty
         organization={organization}
         projectIds={[projectWithReports.id]}
@@ -66,7 +66,7 @@ describe('UserFeedbackEmpty', function() {
     const organization = TestStubs.Organization({
       projects: [project, projectWithReports],
     });
-    const wrapper = mount(
+    const wrapper = mountWithTheme(
       <UserFeedbackEmpty organization={organization} projectIds={[project.id]} />,
       routerContext
     );
@@ -78,7 +78,7 @@ describe('UserFeedbackEmpty', function() {
     const organization = TestStubs.Organization({
       projects: [project, projectWithReports],
     });
-    const wrapper = mount(
+    const wrapper = mountWithTheme(
       <UserFeedbackEmpty
         organization={organization}
         projectIds={[project.id, projectWithReports.id]}
@@ -94,7 +94,7 @@ describe('UserFeedbackEmpty', function() {
     const organization = TestStubs.Organization({
       projects: [project, projectWithoutReports],
     });
-    const wrapper = mount(
+    const wrapper = mountWithTheme(
       <UserFeedbackEmpty
         organization={organization}
         projectIds={[project.id, projectWithoutReports.id]}
diff --git a/webpack.config.js b/webpack.config.js
index 7c0d339fdc..b835a11037 100644
--- a/webpack.config.js
+++ b/webpack.config.js
@@ -339,7 +339,7 @@ const appConfig = {
       // Aliasing this for getsentry's build, otherwise `less/select2` will not be able
       // to be resolved
       less: path.join(staticPrefix, 'less'),
-      'app-test': path.join(__dirname, 'tests', 'js'),
+      'sentry-test': path.join(__dirname, 'tests', 'js', 'sentry-test'),
       'sentry-locale': path.join(__dirname, 'src', 'sentry', 'locale'),
     },
 
