commit 0c68ab4d0d9480cda56269e02cc86b9b29557d7a
Author: David Cramer <dcramer@gmail.com>
Date:   Mon Feb 11 22:11:10 2013 -0800

    Superusers should return all projects in Project.objects.get_for_user(team=XXX)

diff --git a/src/sentry/manager.py b/src/sentry/manager.py
index 60ea5710f4..3b7d4c1168 100644
--- a/src/sentry/manager.py
+++ b/src/sentry/manager.py
@@ -811,20 +811,23 @@ class ProjectManager(BaseManager, ChartMixin):
         if team:
             base_qs = base_qs.filter(team=team)
 
-        if not settings.PUBLIC:
-            # If the user is authenticated, include their memberships
-            teams = Team.objects.get_for_user(user, access).values()
-            if not teams:
-                return []
-            if team and team not in teams:
-                return []
-            elif not team:
-                base_qs = base_qs.filter(team__in=teams)
-
-        projects = set(base_qs)
-
-        if is_authenticated:
-            projects |= set(base_qs.filter(accessgroup__members=user))
+        if team and not user.is_superuser:
+            if not settings.PUBLIC:
+                # If the user is authenticated, include their memberships
+                teams = Team.objects.get_for_user(user, access).values()
+                if not teams:
+                    return []
+                if team and team not in teams:
+                    return []
+                elif not team:
+                    base_qs = base_qs.filter(team__in=teams)
+
+            projects = set(base_qs)
+
+            if is_authenticated:
+                projects |= set(base_qs.filter(accessgroup__members=user))
+        else:
+            projects = set(base_qs)
 
         attach_foreignkey(projects, self.model.team)
 
diff --git a/tests/sentry/manager/tests.py b/tests/sentry/manager/tests.py
index 5a688817fa..53583e9671 100644
--- a/tests/sentry/manager/tests.py
+++ b/tests/sentry/manager/tests.py
@@ -349,6 +349,7 @@ class ProjectManagerTest(TestCase):
 
     @mock.patch('sentry.models.Team.objects.get_for_user', mock.Mock(return_value={}))
     def test_does_not_include_public_projects(self):
+        self.user.is_superuser = False
         project_list = Project.objects.get_for_user(self.user)
         assert project_list == []
 
@@ -357,6 +358,7 @@ class ProjectManagerTest(TestCase):
 
     @mock.patch('sentry.models.Team.objects.get_for_user')
     def test_does_not_include_private_projects(self, get_for_user):
+        self.user.is_superuser = False
         get_for_user.return_value = {self.project2.team.id: self.project2.team}
         project_list = Project.objects.get_for_user(self.user)
         get_for_user.assert_called_once_with(self.user, None)
