commit 51db9c86121369027df718dc98d12ba451d43d33
Author: Matt Robenolt <matt@ydekproductions.com>
Date:   Mon Nov 30 17:20:17 2015 -0800

    Move SENTRY_AMDIN_EMAIL to option

diff --git a/api-docs/sentry.conf.py b/api-docs/sentry.conf.py
index 7de3f2c596..7d0d778da3 100644
--- a/api-docs/sentry.conf.py
+++ b/api-docs/sentry.conf.py
@@ -30,8 +30,6 @@ SENTRY_SINGLE_ORGANIZATION = False
 DEBUG = True
 CONF_ROOT = os.path.dirname(__file__)
 
-SENTRY_ADMIN_EMAIL = 'admin@getsentry.com'
-
 DATABASES = {
     'default': {
         'ENGINE': 'django.db.backends.sqlite3',
@@ -81,3 +79,5 @@ EMAIL_USE_TLS = False
 SERVER_EMAIL = 'sentry@getsentry.com'
 
 SECRET_KEY = 'super secret secret key'
+
+SENTRY_OPTIONS['system.admin-email'] = 'admin@getsentry.com'
diff --git a/src/sentry/conf/server.py b/src/sentry/conf/server.py
index f0df853c87..37be4344a3 100644
--- a/src/sentry/conf/server.py
+++ b/src/sentry/conf/server.py
@@ -616,9 +616,6 @@ SENTRY_URL_PREFIX = ''
 # Should we send the beacon to the upstream server?
 SENTRY_BEACON = True
 
-# The administrative contact for this installation
-SENTRY_ADMIN_EMAIL = ''
-
 # Allow access to Sentry without authentication.
 SENTRY_PUBLIC = False
 
diff --git a/src/sentry/options/defaults.py b/src/sentry/options/defaults.py
index 421bdb37d0..673693cbeb 100644
--- a/src/sentry/options/defaults.py
+++ b/src/sentry/options/defaults.py
@@ -13,6 +13,7 @@ from sentry.options import register, FLAG_NOSTORE
 
 register('cache.backend', flags=FLAG_NOSTORE)
 register('cache.options', default={}, flags=FLAG_NOSTORE)
+register('system.admin-email')
 register('system.databases', default={}, flags=FLAG_NOSTORE)
 register('system.debug', default=False, flags=FLAG_NOSTORE)
 register('system.secret-key', flags=FLAG_NOSTORE)
diff --git a/src/sentry/runner/initializer.py b/src/sentry/runner/initializer.py
index 4543d8bfed..6168b0243d 100644
--- a/src/sentry/runner/initializer.py
+++ b/src/sentry/runner/initializer.py
@@ -191,10 +191,11 @@ def apply_legacy_settings(settings):
                       'See https://docs.getsentry.com/on-premise/server/queue/ for more information.', DeprecationWarning)
         settings.CELERY_ALWAYS_EAGER = (not settings.SENTRY_USE_QUEUE)
 
-    if not settings.SENTRY_ADMIN_EMAIL:
-        show_big_error('system.admin-email is not configured')
-    elif not isinstance(settings.SENTRY_ADMIN_EMAIL, basestring):
-        show_big_error('system.admin-email must be a string')
+    if not settings.SENTRY_OPTIONS.get('system.admin-email') and hasattr(settings, 'SENTRY_ADMIN_EMAIL'):
+        import warnings
+        warnings.warn('SENTRY_ADMIN_EMAIL is deprecated.'
+                      "Use SENTRY_OPTIONS instead, key 'system.admin-email'", DeprecationWarning)
+        settings.SENTRY_OPTIONS['system.admin-email'] = settings.SENTRY_ADMIN_EMAIL
 
     if settings.SENTRY_URL_PREFIX in ('', 'http://sentry.example.com') and not settings.DEBUG:
         # Maybe also point to a piece of documentation for more information?
diff --git a/src/sentry/runner/settings.py b/src/sentry/runner/settings.py
index 07fd64a02e..43300714c4 100644
--- a/src/sentry/runner/settings.py
+++ b/src/sentry/runner/settings.py
@@ -16,10 +16,6 @@ DEFAULT_SETTINGS_CONF = 'config.yml'
 DEFAULT_SETTINGS_OVERRIDE = 'sentry.conf.py'
 CONFIG_TEMPLATE = """# https://docs.getsentry.com/
 
-###########
-# General #
-###########
-
 system.databases:
   default:
     ENGINE: 'sentry.db.postgres'
@@ -29,6 +25,16 @@ system.databases:
     HOST: ''
     PORT: ''
 
+###########
+# General #
+###########
+
+# The administrative email for this installation.
+# Note: This will be reported back to getsentry.com as the point of contact. See
+# the beacon documentation for more information. This **must** be a string.
+# system.admin-email: 'your.name@example.com'
+system.admin-email: ''
+
 cache.backend: 'sentry.cache.redis.RedisCache'
 # cache.options: {}
 
diff --git a/src/sentry/tasks/beacon.py b/src/sentry/tasks/beacon.py
index 7950d875bb..f8e4823a53 100644
--- a/src/sentry/tasks/beacon.py
+++ b/src/sentry/tasks/beacon.py
@@ -59,7 +59,7 @@ def send_beacon():
     payload = {
         'install_id': install_id,
         'version': sentry.get_version(),
-        'admin_email': settings.SENTRY_ADMIN_EMAIL,
+        'admin_email': options.get('system.admin-email'),
         'data': {
             # TODO(dcramer): we'd also like to get an idea about the throughput
             # of the system (i.e. events in 24h)
diff --git a/tests/sentry/tasks/test_beacon.py b/tests/sentry/tasks/test_beacon.py
index 95aac90efe..59d25f4dc5 100644
--- a/tests/sentry/tasks/test_beacon.py
+++ b/tests/sentry/tasks/test_beacon.py
@@ -24,8 +24,8 @@ class SendBeaconTest(TestCase):
             'version': {'stable': '1.0.0'},
         })
 
-        with self.settings(SENTRY_ADMIN_EMAIL='foo@example.com'):
-            send_beacon()
+        assert options.set('system.admin-email', 'foo@example.com')
+        send_beacon()
 
         install_id = options.get('sentry:install-id')
         assert install_id and len(install_id) == 40
