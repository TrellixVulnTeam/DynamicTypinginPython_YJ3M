commit 32d0c8b1ac49588436a1123e1359b4a455f08bce
Author: Matej Minar <matej.minar@sentry.io>
Date:   Tue May 12 13:05:35 2020 +0200

    feat(ui): Merge projects with same release into one card (#18696)

diff --git a/src/sentry/static/sentry/app/components/banner.tsx b/src/sentry/static/sentry/app/components/banner.tsx
index 685101fdf0..9292ad745b 100644
--- a/src/sentry/static/sentry/app/components/banner.tsx
+++ b/src/sentry/static/sentry/app/components/banner.tsx
@@ -87,6 +87,10 @@ const BannerContent = styled('div')`
   align-items: center;
   text-align: center;
   padding: ${space(4)};
+
+  @media (max-width: ${theme.breakpoints[0]}) {
+    position: relative;
+  }
 `;
 
 const BannerTitle = styled('h1')`
diff --git a/src/sentry/static/sentry/app/components/releaseStats.tsx b/src/sentry/static/sentry/app/components/releaseStats.tsx
index 45db496d35..50def957a1 100644
--- a/src/sentry/static/sentry/app/components/releaseStats.tsx
+++ b/src/sentry/static/sentry/app/components/releaseStats.tsx
@@ -2,13 +2,13 @@ import PropTypes from 'prop-types';
 import React from 'react';
 import styled from '@emotion/styled';
 
-import {Release, ProjectRelease} from 'app/types';
+import {Release} from 'app/types';
 import AvatarList from 'app/components/avatar/avatarList';
 import {t, tn} from 'app/locale';
 import space from 'app/styles/space';
 
 type Props = {
-  release: Release | ProjectRelease;
+  release: Release;
   withHeading: boolean;
 };
 
diff --git a/src/sentry/static/sentry/app/components/scoreBar.jsx b/src/sentry/static/sentry/app/components/scoreBar.jsx
index 7c8acb9b1d..0d0c1490e3 100644
--- a/src/sentry/static/sentry/app/components/scoreBar.jsx
+++ b/src/sentry/static/sentry/app/components/scoreBar.jsx
@@ -14,16 +14,18 @@ class ScoreBar extends React.Component {
     paletteClassNames: PropTypes.arrayOf(PropTypes.string),
     size: PropTypes.number,
     thickness: PropTypes.number,
+    radius: PropTypes.number,
   };
 
   static defaultProps = {
     size: 40,
     thickness: 4,
+    radius: 3,
     palette: theme.similarity.colors,
   };
 
   render() {
-    const {className, vertical, palette, score, size, thickness} = this.props;
+    const {className, vertical, palette, score, size, thickness, radius} = this.props;
     const maxScore = palette.length;
 
     // Make sure score is between 0 and maxScore
@@ -36,6 +38,7 @@ class ScoreBar extends React.Component {
       vertical,
       thickness,
       size,
+      radius,
     };
 
     return (
@@ -63,7 +66,7 @@ const StyledScoreBar = styled(ScoreBar)`
 `;
 
 const Bar = styled('div')`
-  border-radius: 3px;
+  border-radius: ${p => p.radius}px;
   margin: 2px;
   ${p => p.empty && `background-color: ${p.theme.similarity.empty};`};
   ${p => p.color && `background-color: ${p.color};`};
@@ -72,5 +75,4 @@ const Bar = styled('div')`
   height: ${p => (!p.vertical ? p.size : p.thickness)}px;
 `;
 
-export {Bar, StyledScoreBar};
 export default StyledScoreBar;
diff --git a/src/sentry/static/sentry/app/types/index.tsx b/src/sentry/static/sentry/app/types/index.tsx
index 2a37106e85..4033cbf6c3 100644
--- a/src/sentry/static/sentry/app/types/index.tsx
+++ b/src/sentry/static/sentry/app/types/index.tsx
@@ -157,17 +157,6 @@ export type Project = {
 
 export type MinimalProject = Pick<Project, 'id' | 'slug'>;
 
-export type ProjectRelease = {
-  version: string;
-  dateCreated: string;
-  dateReleased: string | null;
-  commitCount: number;
-  authors: User[];
-  newGroups: number;
-  healthData: Health | null;
-  project: ReleaseProject;
-};
-
 export type Health = {
   totalUsers: number;
   totalUsers24h: number | null;
@@ -900,6 +889,7 @@ export type ReleaseProject = {
   id: number;
   platform: string;
   platforms: string[];
+  newGroups: number;
   healthData: Health;
 };
 
diff --git a/src/sentry/static/sentry/app/views/releasesV2/list/healthStatsPeriod.tsx b/src/sentry/static/sentry/app/views/releasesV2/list/healthStatsPeriod.tsx
index 3ea124bbda..50912c9ecb 100644
--- a/src/sentry/static/sentry/app/views/releasesV2/list/healthStatsPeriod.tsx
+++ b/src/sentry/static/sentry/app/views/releasesV2/list/healthStatsPeriod.tsx
@@ -51,7 +51,6 @@ const Wrapper = styled('div')`
   flex: 1;
   justify-content: flex-end;
   text-align: right;
-  margin-right: ${space(2)};
   margin-left: ${space(0.5)};
 `;
 
diff --git a/src/sentry/static/sentry/app/views/releasesV2/list/index.tsx b/src/sentry/static/sentry/app/views/releasesV2/list/index.tsx
index 04a5214214..811a49b53a 100644
--- a/src/sentry/static/sentry/app/views/releasesV2/list/index.tsx
+++ b/src/sentry/static/sentry/app/views/releasesV2/list/index.tsx
@@ -3,13 +3,12 @@ import {RouteComponentProps} from 'react-router/lib/Router';
 import styled from '@emotion/styled';
 import pick from 'lodash/pick';
 import {forceCheck} from 'react-lazyload';
-import flatMap from 'lodash/flatMap';
 
 import {t} from 'app/locale';
 import space from 'app/styles/space';
 import AsyncView from 'app/views/asyncView';
 import FeatureBadge from 'app/components/featureBadge';
-import {Organization, Release, ProjectRelease} from 'app/types';
+import {Organization, Release} from 'app/types';
 import routeTitleGen from 'app/utils/routeTitle';
 import SearchBar from 'app/components/searchBar';
 import Pagination from 'app/components/pagination';
@@ -38,7 +37,7 @@ type Props = RouteComponentProps<RouteParams, {}> & {
   organization: Organization;
 };
 
-type State = AsyncView['state'];
+type State = {releases: Release[]} & AsyncView['state'];
 
 class ReleasesList extends AsyncView<Props, State> {
   shouldReload = true;
@@ -55,6 +54,7 @@ class ReleasesList extends AsyncView<Props, State> {
 
   getEndpoints(): [string, string, {}][] {
     const {organization, location} = this.props;
+    const {statsPeriod, sort} = location.query;
 
     const query = {
       ...pick(location.query, [
@@ -66,10 +66,10 @@ class ReleasesList extends AsyncView<Props, State> {
         'healthStatsPeriod',
         'healthStat',
       ]),
-      summaryStatsPeriod: location.query.statsPeriod,
+      summaryStatsPeriod: statsPeriod,
       per_page: 50,
       health: 1,
-      flatten: 1,
+      flatten: !sort || sort === 'date' ? 0 : 1,
     };
 
     return [['releases', `/organizations/${organization.slug}/releases/`, {query}]];
@@ -122,19 +122,6 @@ class ReleasesList extends AsyncView<Props, State> {
     });
   };
 
-  transformToProjectRelease(releases: Release[]): ProjectRelease[] {
-    // native JS flatMap is not supported in our current nodejs 10.16.3 (tests)
-    return flatMap(releases, release =>
-      release.projects.map(project => {
-        return {
-          ...release,
-          healthData: project.healthData,
-          project,
-        };
-      })
-    );
-  }
-
   shouldShowLoadingIndicator() {
     const {loading, releases, reloading} = this.state;
 
@@ -178,7 +165,7 @@ class ReleasesList extends AsyncView<Props, State> {
   }
 
   renderInnerBody() {
-    const {location} = this.props;
+    const {location, organization} = this.props;
     const {releases, reloading} = this.state;
 
     if (this.shouldShowLoadingIndicator()) {
@@ -189,15 +176,13 @@ class ReleasesList extends AsyncView<Props, State> {
       return this.renderEmptyMessage();
     }
 
-    const projectReleases = this.transformToProjectRelease(releases);
-
-    return projectReleases.map((release: ProjectRelease) => (
+    return releases.map(release => (
       <ReleaseCard
-        key={`${release.version}-${release.project.slug}`}
         release={release}
-        project={release.project}
+        orgSlug={organization.slug}
         location={location}
         reloading={reloading}
+        key={`${release.version}-${release.projects[0].slug}`}
       />
     ));
   }
diff --git a/src/sentry/static/sentry/app/views/releasesV2/list/notAvailable.tsx b/src/sentry/static/sentry/app/views/releasesV2/list/notAvailable.tsx
new file mode 100644
index 0000000000..3f7a1074be
--- /dev/null
+++ b/src/sentry/static/sentry/app/views/releasesV2/list/notAvailable.tsx
@@ -0,0 +1,14 @@
+import React from 'react';
+import styled from '@emotion/styled';
+
+import {t} from 'app/locale';
+
+const NotAvailable = () => {
+  return <Wrapper>{t('n/a')}</Wrapper>;
+};
+
+const Wrapper = styled('div')`
+  color: ${p => p.theme.gray1};
+`;
+
+export default NotAvailable;
diff --git a/src/sentry/static/sentry/app/views/releasesV2/list/releaseCard.tsx b/src/sentry/static/sentry/app/views/releasesV2/list/releaseCard.tsx
index 664e7a650f..f0ea016787 100644
--- a/src/sentry/static/sentry/app/views/releasesV2/list/releaseCard.tsx
+++ b/src/sentry/static/sentry/app/views/releasesV2/list/releaseCard.tsx
@@ -7,97 +7,100 @@ import Count from 'app/components/count';
 import Version from 'app/components/version';
 import {Panel, PanelBody, PanelItem} from 'app/components/panels';
 import ReleaseStats from 'app/components/releaseStats';
-import {ProjectRelease, ReleaseProject} from 'app/types';
+import {Release} from 'app/types';
 import TimeSince from 'app/components/timeSince';
 import {t, tn} from 'app/locale';
 import {AvatarListWrapper} from 'app/components/avatar/avatarList';
-import ProjectBadge from 'app/components/idBadge/projectBadge.jsx';
+import TextOverflow from 'app/components/textOverflow';
 import overflowEllipsis from 'app/styles/overflowEllipsis';
+import Tag from 'app/views/settings/components/tag';
 
 import ReleaseHealth from './releaseHealth';
+import NotAvailable from './notAvailable';
 
 type Props = {
-  release: ProjectRelease;
-  project: ReleaseProject;
+  release: Release;
+  orgSlug: string;
   location: Location;
   reloading: boolean;
 };
 
-const ReleaseCard = ({release, project, location, reloading}: Props) => (
-  <StyledPanel reloading={reloading ? 1 : 0}>
-    <PanelBody>
-      <StyledPanelItem>
-        <HeaderLayout>
-          <VersionColumn>
-            <ColumnTitle>{t('Version')}</ColumnTitle>
-          </VersionColumn>
-          <ProjectsColumn>
-            <ColumnTitle>{t('Project name')}</ColumnTitle>
-          </ProjectsColumn>
-          <CommitsColumn>
-            {release.commitCount > 0 && (
+const ReleaseCard = ({release, orgSlug, location, reloading}: Props) => {
+  const {version, commitCount, lastDeploy, authors, dateCreated} = release;
+  return (
+    <StyledPanel reloading={reloading ? 1 : 0}>
+      <PanelBody>
+        <StyledPanelItem>
+          <HeaderLayout>
+            <VersionColumn>
+              <ColumnTitle>{t('Release Version')}</ColumnTitle>
+            </VersionColumn>
+
+            <CreatedColumn>
               <ColumnTitle>
-                {[
-                  tn('%s commit', '%s commits', release.commitCount || 0),
-                  t('by'),
-                  tn('%s author', '%s authors', release.authors?.length || 0),
-                ].join(' ')}
+                {lastDeploy?.dateFinished ? t('Last Deploy') : t('Date Created')}
               </ColumnTitle>
-            )}
-          </CommitsColumn>
-          <CreatedColumn>
-            <ColumnTitle>{t('Created')}</ColumnTitle>
-          </CreatedColumn>
-          <NewIssuesColumn>
-            <ColumnTitle>{t('New issues')}</ColumnTitle>
-          </NewIssuesColumn>
-        </HeaderLayout>
-        <Layout>
-          <VersionColumn>
-            <VersionWrapper>
-              <Version
-                version={release.version}
-                preserveGlobalSelection
-                tooltipRawVersion
-                truncate
-                projectId={String(project.id)}
-              />
-              <TimeWithIcon date={release.dateReleased || release.dateCreated} />
-            </VersionWrapper>
-          </VersionColumn>
-
-          <ProjectsColumn>
-            <ProjectBadge project={project} avatarSize={14} key={project?.slug} />
-          </ProjectsColumn>
-
-          <CommitsColumn>
-            <ReleaseStats release={release} withHeading={false} />
-          </CommitsColumn>
-
-          <CreatedColumn>
-            {release.dateReleased || release.dateCreated ? (
-              <TimeSince date={release.dateReleased || release.dateCreated} />
-            ) : (
-              <span>-</span>
-            )}
-          </CreatedColumn>
-
-          <NewIssuesColumn>
-            <Count value={release.newGroups || 0} />
-          </NewIssuesColumn>
-        </Layout>
-      </StyledPanelItem>
-    </PanelBody>
-
-    {release.healthData?.hasHealthData && (
-      <ReleaseHealth release={release} location={location} />
-    )}
-  </StyledPanel>
-);
+            </CreatedColumn>
+
+            <CommitsColumn>
+              <ColumnTitle>
+                {commitCount > 0
+                  ? [
+                      tn('%s commit', '%s commits', commitCount || 0),
+                      t('by'),
+                      tn('%s author', '%s authors', authors.length || 0),
+                    ].join(' ')
+                  : t('Commits')}
+              </ColumnTitle>
+            </CommitsColumn>
+
+            <NewIssuesColumn>
+              <ColumnTitle>{t('New issues')}</ColumnTitle>
+            </NewIssuesColumn>
+          </HeaderLayout>
+
+          <Layout>
+            <VersionColumn>
+              <VersionWrapper>
+                <Version version={version} tooltipRawVersion truncate anchor={false} />
+              </VersionWrapper>
+            </VersionColumn>
+
+            <CreatedColumn>
+              <TextOverflow>
+                {lastDeploy?.dateFinished && (
+                  <DeployEnv>{lastDeploy.environment}</DeployEnv>
+                )}
+                <TimeSince date={lastDeploy?.dateFinished || dateCreated} />
+              </TextOverflow>
+            </CreatedColumn>
+
+            <CommitsColumn>
+              <CommitsWrapper>
+                {commitCount > 0 ? (
+                  <ReleaseStats release={release} withHeading={false} />
+                ) : (
+                  <NotAvailable />
+                )}
+              </CommitsWrapper>
+            </CommitsColumn>
+
+            <NewIssuesColumn>
+              <Count value={release.newGroups || 0} />
+            </NewIssuesColumn>
+          </Layout>
+        </StyledPanelItem>
+      </PanelBody>
+
+      <ReleaseHealth release={release} orgSlug={orgSlug} location={location} />
+    </StyledPanel>
+  );
+};
 
 const StyledPanel = styled(Panel)<{reloading: number}>`
   opacity: ${p => (p.reloading ? 0.5 : 1)};
   pointer-events: ${p => (p.reloading ? 'none' : 'auto')};
+  overflow: hidden;
 `;
 
 const StyledPanelItem = styled(PanelItem)`
@@ -106,18 +109,23 @@ const StyledPanelItem = styled(PanelItem)`
 
 const Layout = styled('div')`
   display: grid;
-  grid-template-areas: 'version projects commits created new-issues';
-  grid-template-columns: 3fr minmax(230px, 2fr) 4fr 160px 1fr;
+  /* 0fr a,b,c are here to match the health grid layout (offset because of gap on fewer columns) */
+  grid-template-areas: 'version created a b commits c new-issues';
+  grid-template-columns: 2fr 4.8fr 0fr 0fr 2.1fr 0fr 1.5fr;
   grid-column-gap: ${space(1.5)};
   width: 100%;
   align-items: center;
   @media (max-width: ${p => p.theme.breakpoints[2]}) {
-    grid-template-areas: 'version projects created new-issues';
-    grid-template-columns: 2fr 1fr 1fr 1fr;
+    grid-template-areas: 'version created a commits b new-issues';
+    grid-template-columns: 2fr 3.5fr 0fr 2.5fr 0fr 1fr;
   }
   @media (max-width: ${p => p.theme.breakpoints[1]}) {
-    grid-template-areas: 'version projects new-issues';
-    grid-template-columns: 2fr 2fr 1fr;
+    grid-template-areas: 'version created a b new-issues';
+    grid-template-columns: 2fr 3fr 0fr 0fr 2fr;
+  }
+  @media (max-width: ${p => p.theme.breakpoints[0]}) {
+    grid-template-areas: 'version created new-issues';
+    grid-template-columns: 2fr 1.5fr 1fr;
   }
 `;
 
@@ -136,32 +144,21 @@ const RightAlignedColumn = styled(Column)`
   text-align: right;
 `;
 
-const CenterColumn = styled(Column)`
-  text-align: center;
-`;
-
 const VersionColumn = styled(Column)`
   grid-area: version;
   display: flex;
   align-items: center;
 `;
 
-const ProjectsColumn = styled(Column)`
-  grid-area: projects;
-`;
-
-const CommitsColumn = styled(CenterColumn)`
+const CommitsColumn = styled(Column)`
   grid-area: commits;
-  @media (max-width: ${p => p.theme.breakpoints[2]}) {
+  @media (max-width: ${p => p.theme.breakpoints[1]}) {
     display: none;
   }
 `;
 
-const CreatedColumn = styled(RightAlignedColumn)`
+const CreatedColumn = styled(Column)`
   grid-area: created;
-  @media (max-width: ${p => p.theme.breakpoints[1]}) {
-    display: none;
-  }
 `;
 
 const NewIssuesColumn = styled(RightAlignedColumn)`
@@ -184,22 +181,25 @@ const VersionWrapper = styled('div')`
   display: inline-block;
 `;
 
-const TimeWithIcon = styled(({date, ...props}) => (
-  <span {...props}>
-    <ClockIcon className="icon icon-clock" />
-    <TimeSince date={date} />
-  </span>
-))`
-  align-items: center;
-  color: ${p => p.theme.gray2};
+const DeployEnv = styled(Tag)`
+  background-color: ${p => p.theme.gray4};
+  color: ${p => p.theme.white};
   font-size: ${p => p.theme.fontSizeSmall};
-  display: none;
-  @media (max-width: ${p => p.theme.breakpoints[1]}) {
-    display: inline-flex;
+  margin-right: ${space(1)};
+  position: relative;
+  bottom: ${space(0.25)};
+  display: inline-block;
+  max-width: 100px;
+  overflow: hidden;
+  text-overflow: ellipsis;
+  @media (max-width: ${p => p.theme.breakpoints[0]}) {
+    display: none;
   }
 `;
-const ClockIcon = styled('span')`
-  margin-right: ${space(0.25)};
+
+const CommitsWrapper = styled('div')`
+  position: relative;
+  bottom: ${space(0.25)};
 `;
 
 export default ReleaseCard;
diff --git a/src/sentry/static/sentry/app/views/releasesV2/list/releaseHealth.tsx b/src/sentry/static/sentry/app/views/releasesV2/list/releaseHealth.tsx
index 0fd009fd85..c088006a12 100644
--- a/src/sentry/static/sentry/app/views/releasesV2/list/releaseHealth.tsx
+++ b/src/sentry/static/sentry/app/views/releasesV2/list/releaseHealth.tsx
@@ -2,7 +2,8 @@ import React from 'react';
 import styled from '@emotion/styled';
 import {Location} from 'history';
 
-import {ProjectRelease} from 'app/types';
+import {Release} from 'app/types';
+import GlobalSelectionLink from 'app/components/globalSelectionLink';
 import {PanelHeader, PanelBody, PanelItem} from 'app/components/panels';
 import {t, tn} from 'app/locale';
 import space from 'app/styles/space';
@@ -10,8 +11,11 @@ import ProgressRing from 'app/components/progressRing';
 import Count from 'app/components/count';
 import {defined} from 'app/utils';
 import theme from 'app/utils/theme';
-import ScoreBar, {Bar} from 'app/components/scoreBar';
+import ScoreBar from 'app/components/scoreBar';
 import Tooltip from 'app/components/tooltip';
+import ProjectBadge from 'app/components/idBadge/projectBadge';
+import TextOverflow from 'app/components/textOverflow';
+import ClippedBox from 'app/components/clippedBox';
 
 import HealthStatsChart from './healthStatsChart';
 import {
@@ -22,129 +26,167 @@ import {
 import HealthStatsSubject, {StatsSubject} from './healthStatsSubject';
 import HealthStatsPeriod, {StatsPeriod} from './healthStatsPeriod';
 import AdoptionTooltip from './adoptionTooltip';
+import NotAvailable from './notAvailable';
 
 type Props = {
-  release: ProjectRelease;
+  release: Release;
+  orgSlug: string;
   location: Location;
 };
 
-const ReleaseHealth = ({release, location}: Props) => {
+const ReleaseHealth = ({release, orgSlug, location}: Props) => {
   const activeStatsPeriod = (location.query.healthStatsPeriod || '24h') as StatsPeriod;
   const activeStatsSubject = (location.query.healthStat || 'sessions') as StatsSubject;
 
-  const {
-    adoption,
-    stats,
-    crashFreeUsers,
-    crashFreeSessions,
-    sessionsCrashed,
-    totalUsers,
-    totalUsers24h,
-    totalSessions,
-    totalSessions24h,
-  } = release.healthData!;
-
   return (
     <React.Fragment>
       <StyledPanelHeader>
         <HeaderLayout>
-          <DailyUsersColumn>
-            <HealthStatsSubject location={location} activeSubject={activeStatsSubject} />
-            <HealthStatsPeriod location={location} activePeriod={activeStatsPeriod} />
-          </DailyUsersColumn>
+          <ProjectColumn>{t('Project name')}</ProjectColumn>
           <AdoptionColumn>{t('Release adoption')}</AdoptionColumn>
           <CrashFreeUsersColumn>{t('Crash free users')}</CrashFreeUsersColumn>
           <CrashFreeSessionsColumn>{t('Crash free sessions')}</CrashFreeSessionsColumn>
-          <ErrorsColumn>{/* {t('Errors')} */}</ErrorsColumn>
+          <DailyUsersColumn>
+            {release.projects.some(p => p.healthData.hasHealthData) ? (
+              <React.Fragment>
+                <HealthStatsSubject
+                  location={location}
+                  activeSubject={activeStatsSubject}
+                />
+                <HealthStatsPeriod location={location} activePeriod={activeStatsPeriod} />
+              </React.Fragment>
+            ) : (
+              t('Daily active users')
+            )}
+          </DailyUsersColumn>
           <CrashesColumn>{t('Crashes')}</CrashesColumn>
+          <NewIssuesColumn>{t('New Issues')}</NewIssuesColumn>
         </HeaderLayout>
       </StyledPanelHeader>
 
       <PanelBody>
-        <StyledPanelItem>
-          <Layout>
-            <DailyUsersColumn>
-              <ChartWrapper>
-                <HealthStatsChart
-                  data={stats}
-                  height={20}
-                  period={activeStatsPeriod}
-                  subject={activeStatsSubject}
-                />
-              </ChartWrapper>
-            </DailyUsersColumn>
+        <ClippedBox clipHeight={200}>
+          {release.projects.map(project => {
+            const {id, slug, healthData, newGroups} = project;
+            const {
+              hasHealthData,
+              adoption,
+              stats,
+              crashFreeUsers,
+              crashFreeSessions,
+              sessionsCrashed,
+              totalUsers,
+              totalUsers24h,
+              totalSessions,
+              totalSessions24h,
+            } = healthData;
 
-            <AdoptionColumn>
-              <AdoptionWrapper>
-                <Tooltip
-                  title={
-                    <AdoptionTooltip
-                      totalUsers={totalUsers}
-                      totalSessions={totalSessions}
-                      totalUsers24h={totalUsers24h}
-                      totalSessions24h={totalSessions24h}
-                    />
-                  }
-                >
-                  <StyledScoreBar
-                    score={convertAdoptionToProgress(adoption ?? 0)}
-                    size={14}
-                    thickness={14}
-                    palette={[
-                      theme.red,
-                      theme.yellowOrange,
-                      theme.yellowOrange,
-                      theme.green,
-                      theme.green,
-                    ]}
-                  />
-                </Tooltip>
-                <div>
-                  <Count value={totalUsers24h ?? 0} />{' '}
-                  {tn('user', 'users', totalUsers24h)}
-                </div>
-              </AdoptionWrapper>
-            </AdoptionColumn>
+            return (
+              <StyledPanelItem key={`${release.version}-${slug}-health`}>
+                <Layout>
+                  <ProjectColumn>
+                    <GlobalSelectionLink
+                      to={{
+                        pathname: `/organizations/${orgSlug}/releases/${encodeURIComponent(
+                          release.version
+                        )}/`,
+                        query: {project: id},
+                      }}
+                    >
+                      <ProjectBadge project={project} avatarSize={16} key={slug} />
+                    </GlobalSelectionLink>
+                  </ProjectColumn>
 
-            <CrashFreeUsersColumn>
-              {defined(crashFreeUsers) ? (
-                <React.Fragment>
-                  <StyledProgressRing
-                    progressColor={getCrashFreePercentColor}
-                    value={crashFreeUsers}
-                  />
-                  <ProgressRingCaption>
-                    {displayCrashFreePercent(crashFreeUsers)}
-                  </ProgressRingCaption>
-                </React.Fragment>
-              ) : (
-                '-'
-              )}
-            </CrashFreeUsersColumn>
+                  <AdoptionColumn>
+                    {defined(adoption) ? (
+                      <AdoptionWrapper>
+                        <Tooltip
+                          title={
+                            <AdoptionTooltip
+                              totalUsers={totalUsers}
+                              totalSessions={totalSessions}
+                              totalUsers24h={totalUsers24h}
+                              totalSessions24h={totalSessions24h}
+                            />
+                          }
+                        >
+                          <StyledScoreBar
+                            score={convertAdoptionToProgress(adoption)}
+                            size={20}
+                            thickness={5}
+                            radius={0}
+                            palette={Array(10).fill(theme.green)}
+                          />
+                        </Tooltip>
+                        <TextOverflow>
+                          <Count value={totalUsers24h ?? 0} />{' '}
+                          {tn('user', 'users', totalUsers24h)}
+                        </TextOverflow>
+                      </AdoptionWrapper>
+                    ) : (
+                      <NotAvailable />
+                    )}
+                  </AdoptionColumn>
 
-            <CrashFreeSessionsColumn>
-              {defined(crashFreeSessions) ? (
-                <React.Fragment>
-                  <StyledProgressRing
-                    progressColor={getCrashFreePercentColor}
-                    value={crashFreeSessions}
-                  />
-                  <ProgressRingCaption>
-                    {displayCrashFreePercent(crashFreeSessions)}
-                  </ProgressRingCaption>
-                </React.Fragment>
-              ) : (
-                '-'
-              )}
-            </CrashFreeSessionsColumn>
+                  <CrashFreeUsersColumn>
+                    {defined(crashFreeUsers) ? (
+                      <React.Fragment>
+                        <StyledProgressRing
+                          progressColor={getCrashFreePercentColor}
+                          value={crashFreeUsers}
+                        />
+                        <ProgressRingCaption>
+                          {displayCrashFreePercent(crashFreeUsers)}
+                        </ProgressRingCaption>
+                      </React.Fragment>
+                    ) : (
+                      <NotAvailable />
+                    )}
+                  </CrashFreeUsersColumn>
 
-            <ErrorsColumn>{/* <Count value={sessionsErrored ?? 0} /> */}</ErrorsColumn>
+                  <CrashFreeSessionsColumn>
+                    {defined(crashFreeSessions) ? (
+                      <React.Fragment>
+                        <StyledProgressRing
+                          progressColor={getCrashFreePercentColor}
+                          value={crashFreeSessions}
+                        />
+                        <ProgressRingCaption>
+                          {displayCrashFreePercent(crashFreeSessions)}
+                        </ProgressRingCaption>
+                      </React.Fragment>
+                    ) : (
+                      <NotAvailable />
+                    )}
+                  </CrashFreeSessionsColumn>
 
-            <CrashesColumn>
-              <Count value={sessionsCrashed ?? 0} />
-            </CrashesColumn>
-          </Layout>
-        </StyledPanelItem>
+                  <DailyUsersColumn>
+                    {hasHealthData ? (
+                      <ChartWrapper>
+                        <HealthStatsChart
+                          data={stats}
+                          height={20}
+                          period={activeStatsPeriod}
+                          subject={activeStatsSubject}
+                        />
+                      </ChartWrapper>
+                    ) : (
+                      <NotAvailable />
+                    )}
+                  </DailyUsersColumn>
+
+                  <CrashesColumn>
+                    {hasHealthData ? <Count value={sessionsCrashed} /> : <NotAvailable />}
+                  </CrashesColumn>
+
+                  <NewIssuesColumn>
+                    <Count value={newGroups || 0} />
+                  </NewIssuesColumn>
+                </Layout>
+              </StyledPanelItem>
+            );
+          })}
+        </ClippedBox>
       </PanelBody>
     </React.Fragment>
   );
@@ -152,28 +194,35 @@ const ReleaseHealth = ({release, location}: Props) => {
 
 const StyledPanelHeader = styled(PanelHeader)`
   border-top: 1px solid ${p => p.theme.borderDark};
-  border-bottom: none;
-  padding-bottom: ${space(1)};
   border-top-left-radius: 0;
   border-top-right-radius: 0;
   color: ${p => p.theme.gray2};
   font-size: ${p => p.theme.fontSizeSmall};
 `;
 
+const StyledPanelItem = styled(PanelItem)`
+  padding: ${space(1)} ${space(2)};
+  min-height: 46px;
+`;
+
 const Layout = styled('div')`
   display: grid;
-  grid-template-areas: 'daily-users adoption crash-free-users crash-free-sessions errors crashes';
-  grid-template-columns: 3fr minmax(230px, 2fr) 2fr 2fr 160px 1fr;
+  grid-template-areas: 'project adoption crash-free-users crash-free-sessions daily-users crashes new-issues';
+  grid-template-columns: 2fr 2fr 1.4fr 1.4fr 2.1fr 0.7fr 0.8fr;
   grid-column-gap: ${space(1.5)};
   width: 100%;
   align-items: center;
   @media (max-width: ${p => p.theme.breakpoints[2]}) {
-    grid-template-areas: 'adoption crash-free-users crash-free-sessions errors crashes';
-    grid-template-columns: 1fr 1fr 1fr 1fr 1fr;
+    grid-template-areas: 'project adoption crash-free-users crash-free-sessions crashes new-issues';
+    grid-template-columns: 2fr 2fr 1.5fr 1.5fr 1fr 1fr;
   }
   @media (max-width: ${p => p.theme.breakpoints[1]}) {
-    grid-template-areas: 'crash-free-users crash-free-sessions crashes';
-    grid-template-columns: 2fr 2fr 1fr;
+    grid-template-areas: 'project crash-free-users crash-free-sessions crashes new-issues';
+    grid-template-columns: 2fr 1.5fr 1.5fr 1fr 1fr;
+  }
+  @media (max-width: ${p => p.theme.breakpoints[0]}) {
+    grid-template-areas: 'project crash-free-sessions new-issues';
+    grid-template-columns: 2fr 1.5fr 1fr;
   }
 `;
 
@@ -193,6 +242,10 @@ const CenterColumn = styled(Column)`
   text-align: center;
 `;
 
+const ProjectColumn = styled(Column)`
+  grid-area: project;
+`;
+
 const DailyUsersColumn = styled(Column)`
   grid-area: daily-users;
   display: flex;
@@ -206,44 +259,36 @@ const AdoptionColumn = styled(Column)`
   @media (max-width: ${p => p.theme.breakpoints[1]}) {
     display: none;
   }
-
-  ${Bar} {
-    /* TODO(releasesV2): this is still wip */
-    margin: 3px;
-  }
 `;
 const CrashFreeUsersColumn = styled(CenterColumn)`
   grid-area: crash-free-users;
-  @media (max-width: ${p => p.theme.breakpoints[1]}) {
+  @media (max-width: ${p => p.theme.breakpoints[2]}) {
     text-align: left;
   }
+  @media (max-width: ${p => p.theme.breakpoints[0]}) {
+    display: none;
+  }
 `;
 const CrashFreeSessionsColumn = styled(CenterColumn)`
   grid-area: crash-free-sessions;
-  @media (max-width: ${p => p.theme.breakpoints[1]}) {
+  @media (max-width: ${p => p.theme.breakpoints[2]}) {
     text-align: left;
   }
 `;
 const CrashesColumn = styled(RightColumn)`
   grid-area: crashes;
-`;
-const ErrorsColumn = styled(RightColumn)`
-  grid-area: errors;
-  @media (max-width: ${p => p.theme.breakpoints[1]}) {
+  @media (max-width: ${p => p.theme.breakpoints[0]}) {
     display: none;
   }
 `;
-
-const StyledPanelItem = styled(PanelItem)`
-  background: ${p => p.theme.offWhite};
-  padding-top: 0;
+const NewIssuesColumn = styled(RightColumn)`
+  grid-area: new-issues;
 `;
 
 const AdoptionWrapper = styled('div')`
   display: flex;
   align-items: center;
   justify-content: flex-start;
-  flex-wrap: wrap-reverse;
 `;
 
 const StyledScoreBar = styled(ScoreBar)`
@@ -261,9 +306,8 @@ const ProgressRingCaption = styled('span')`
 
 const ChartWrapper = styled('div')`
   flex: 1;
-  margin-right: ${space(2)};
   g > .barchart-rect {
-    /* TODO(releasesV2): figure out with design these colors */
+    /* gray1 is too dark */
     background: #c6becf;
     fill: #c6becf;
   }
diff --git a/src/sentry/static/sentry/app/views/releasesV2/utils/index.tsx b/src/sentry/static/sentry/app/views/releasesV2/utils/index.tsx
index 2eeca31354..3bb41f1d44 100644
--- a/src/sentry/static/sentry/app/views/releasesV2/utils/index.tsx
+++ b/src/sentry/static/sentry/app/views/releasesV2/utils/index.tsx
@@ -85,7 +85,7 @@ export const displayCrashFreePercent = (
 
 export const convertAdoptionToProgress = (
   percent: number,
-  numberOfProgressUnits = 5
+  numberOfProgressUnits = 10
 ): number => Math.ceil((percent * numberOfProgressUnits) / 100);
 
 type ProgressRingColorFn = React.ComponentProps<typeof ProgressRing>['progressColor'];
diff --git a/src/sentry/static/sentry/less/shared-components.less b/src/sentry/static/sentry/less/shared-components.less
index 382c387831..384d9c1501 100644
--- a/src/sentry/static/sentry/less/shared-components.less
+++ b/src/sentry/static/sentry/less/shared-components.less
@@ -1054,7 +1054,7 @@ ul.faces {
   }
 
   &:first-of-type {
-    margin-top: -20px;
+    margin-top: -16px;
     border: 0;
   }
 
diff --git a/tests/js/spec/views/organizationGroupDetails/__snapshots__/groupSimilar.spec.jsx.snap b/tests/js/spec/views/organizationGroupDetails/__snapshots__/groupSimilar.spec.jsx.snap
index 60c4e67394..36d83d54d3 100644
--- a/tests/js/spec/views/organizationGroupDetails/__snapshots__/groupSimilar.spec.jsx.snap
+++ b/tests/js/spec/views/organizationGroupDetails/__snapshots__/groupSimilar.spec.jsx.snap
@@ -1686,6 +1686,7 @@ exports[`Issues Similar View renders with mocked data 1`] = `
                                     "#57be8c",
                                   ]
                                 }
+                                radius={3}
                                 score={4}
                                 size={40}
                                 thickness={4}
@@ -1702,6 +1703,7 @@ exports[`Issues Similar View renders with mocked data 1`] = `
                                       "#57be8c",
                                     ]
                                   }
+                                  radius={3}
                                   score={4}
                                   size={40}
                                   thickness={4}
@@ -1713,6 +1715,7 @@ exports[`Issues Similar View renders with mocked data 1`] = `
                                     <Bar
                                       color="#98b480"
                                       key="0"
+                                      radius={3}
                                       size={40}
                                       thickness={4}
                                       vertical={true}
@@ -1720,12 +1723,14 @@ exports[`Issues Similar View renders with mocked data 1`] = `
                                       <div
                                         className="css-1gui0xz-Bar eecxaw41"
                                         color="#98b480"
+                                        radius={3}
                                         size={40}
                                       />
                                     </Bar>
                                     <Bar
                                       color="#98b480"
                                       key="1"
+                                      radius={3}
                                       size={40}
                                       thickness={4}
                                       vertical={true}
@@ -1733,12 +1738,14 @@ exports[`Issues Similar View renders with mocked data 1`] = `
                                       <div
                                         className="css-1gui0xz-Bar eecxaw41"
                                         color="#98b480"
+                                        radius={3}
                                         size={40}
                                       />
                                     </Bar>
                                     <Bar
                                       color="#98b480"
                                       key="2"
+                                      radius={3}
                                       size={40}
                                       thickness={4}
                                       vertical={true}
@@ -1746,12 +1753,14 @@ exports[`Issues Similar View renders with mocked data 1`] = `
                                       <div
                                         className="css-1gui0xz-Bar eecxaw41"
                                         color="#98b480"
+                                        radius={3}
                                         size={40}
                                       />
                                     </Bar>
                                     <Bar
                                       color="#98b480"
                                       key="3"
+                                      radius={3}
                                       size={40}
                                       thickness={4}
                                       vertical={true}
@@ -1759,18 +1768,21 @@ exports[`Issues Similar View renders with mocked data 1`] = `
                                       <div
                                         className="css-1gui0xz-Bar eecxaw41"
                                         color="#98b480"
+                                        radius={3}
                                         size={40}
                                       />
                                     </Bar>
                                     <Bar
                                       empty={true}
                                       key="empty-0"
+                                      radius={3}
                                       size={40}
                                       thickness={4}
                                       vertical={true}
                                     >
                                       <div
                                         className="css-3fvo9r-Bar eecxaw41"
+                                        radius={3}
                                         size={40}
                                       />
                                     </Bar>
@@ -1812,6 +1824,7 @@ exports[`Issues Similar View renders with mocked data 1`] = `
                                     "#57be8c",
                                   ]
                                 }
+                                radius={3}
                                 score={0}
                                 size={40}
                                 thickness={4}
@@ -1828,6 +1841,7 @@ exports[`Issues Similar View renders with mocked data 1`] = `
                                       "#57be8c",
                                     ]
                                   }
+                                  radius={3}
                                   score={0}
                                   size={40}
                                   thickness={4}
@@ -1839,60 +1853,70 @@ exports[`Issues Similar View renders with mocked data 1`] = `
                                     <Bar
                                       empty={true}
                                       key="empty-0"
+                                      radius={3}
                                       size={40}
                                       thickness={4}
                                       vertical={true}
                                     >
                                       <div
                                         className="css-3fvo9r-Bar eecxaw41"
+                                        radius={3}
                                         size={40}
                                       />
                                     </Bar>
                                     <Bar
                                       empty={true}
                                       key="empty-1"
+                                      radius={3}
                                       size={40}
                                       thickness={4}
                                       vertical={true}
                                     >
                                       <div
                                         className="css-3fvo9r-Bar eecxaw41"
+                                        radius={3}
                                         size={40}
                                       />
                                     </Bar>
                                     <Bar
                                       empty={true}
                                       key="empty-2"
+                                      radius={3}
                                       size={40}
                                       thickness={4}
                                       vertical={true}
                                     >
                                       <div
                                         className="css-3fvo9r-Bar eecxaw41"
+                                        radius={3}
                                         size={40}
                                       />
                                     </Bar>
                                     <Bar
                                       empty={true}
                                       key="empty-3"
+                                      radius={3}
                                       size={40}
                                       thickness={4}
                                       vertical={true}
                                     >
                                       <div
                                         className="css-3fvo9r-Bar eecxaw41"
+                                        radius={3}
                                         size={40}
                                       />
                                     </Bar>
                                     <Bar
                                       empty={true}
                                       key="empty-4"
+                                      radius={3}
                                       size={40}
                                       thickness={4}
                                       vertical={true}
                                     >
                                       <div
                                         className="css-3fvo9r-Bar eecxaw41"
+                                        radius={3}
                                         size={40}
                                       />
                                     </Bar>
diff --git a/tests/js/spec/views/releasesV2/list/index.spec.jsx b/tests/js/spec/views/releasesV2/list/index.spec.jsx
index 2a448a712c..af1da8f13b 100644
--- a/tests/js/spec/views/releasesV2/list/index.spec.jsx
+++ b/tests/js/spec/views/releasesV2/list/index.spec.jsx
@@ -59,7 +59,13 @@ describe('ReleasesV2List', function() {
     expect(items.at(0).text()).toContain('1.0.0');
     expect(items.at(0).text()).toContain('Release adoption');
     expect(items.at(2).text()).toContain('af4f231ec9a8');
-    expect(items.at(2).text()).not.toContain('Release adoption');
+    expect(
+      items
+        .at(2)
+        .find('DailyUsersColumn')
+        .at(1)
+        .text()
+    ).toContain('n/a');
   });
 
   it('displays the right empty state', function() {
