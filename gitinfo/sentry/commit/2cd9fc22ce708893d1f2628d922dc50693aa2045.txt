commit 2cd9fc22ce708893d1f2628d922dc50693aa2045
Author: Dan Fuller <dfuller@sentry.io>
Date:   Tue Jun 23 11:38:38 2020 -0700

    fix(subscriptions): Improve logging on query subscription processor (#19498)
    
    Cast these to strings so that they display properly in kibana, and add in some extra info

diff --git a/src/sentry/snuba/query_subscription_consumer.py b/src/sentry/snuba/query_subscription_consumer.py
index a7f57ae359..fc3c304009 100644
--- a/src/sentry/snuba/query_subscription_consumer.py
+++ b/src/sentry/snuba/query_subscription_consumer.py
@@ -5,6 +5,7 @@ from json import loads
 import jsonschema
 import pytz
 import sentry_sdk
+import six
 from sentry_sdk.tracing import Span
 from confluent_kafka import Consumer, KafkaException, OFFSET_INVALID, TopicPartition
 from dateutil.parser import parse as parse_date
@@ -87,14 +88,26 @@ class QuerySubscriptionConsumer(object):
                 else:
                     updated_offset = partition.offset
                 self.offsets[partition.partition] = updated_offset
-            logger.info("query-subscription-consumer.on_assign", extra={"offsets": self.offsets})
+            logger.info(
+                "query-subscription-consumer.on_assign",
+                extra={
+                    "offsets": six.text_type(self.offsets),
+                    "partitions": six.text_type(partitions),
+                },
+            )
 
         def on_revoke(consumer, partitions):
             partition_numbers = [partition.partition for partition in partitions]
             self.commit_offsets(partition_numbers)
             for partition_number in partition_numbers:
                 self.offsets.pop(partition_number, None)
-            logger.info("query-subscription-consumer.on_revoke", extra={"offsets": self.offsets})
+            logger.info(
+                "query-subscription-consumer.on_revoke",
+                extra={
+                    "offsets": six.text_type(self.offsets),
+                    "partitions": six.text_type(partitions),
+                },
+            )
 
         self.consumer = Consumer(conf)
         self.consumer.subscribe([self.topic], on_assign=on_assign, on_revoke=on_revoke)
@@ -135,7 +148,7 @@ class QuerySubscriptionConsumer(object):
     def commit_offsets(self, partitions=None):
         logger.info(
             "query-subscription-consumer.commit_offsets",
-            extra={"offsets": self.offsets, "partitions": partitions},
+            extra={"offsets": six.text_type(self.offsets), "partitions": six.text_type(partitions)},
         )
 
         if self.offsets and self.consumer:
