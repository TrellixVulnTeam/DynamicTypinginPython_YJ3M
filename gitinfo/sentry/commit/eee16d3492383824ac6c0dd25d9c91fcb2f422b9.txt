commit eee16d3492383824ac6c0dd25d9c91fcb2f422b9
Author: Armin Ronacher <armin.ronacher@active-4.com>
Date:   Tue Dec 13 00:04:40 2016 +0100

    Improved UI support for unprocessed

diff --git a/src/sentry/api/urls.py b/src/sentry/api/urls.py
index 68d4c58246..da0e0e61b4 100644
--- a/src/sentry/api/urls.py
+++ b/src/sentry/api/urls.py
@@ -68,6 +68,7 @@ from .endpoints.project_rules import ProjectRulesEndpoint
 from .endpoints.project_rule_details import ProjectRuleDetailsEndpoint
 from .endpoints.project_searches import ProjectSearchesEndpoint
 from .endpoints.project_search_details import ProjectSearchDetailsEndpoint
+from .endpoints.project_processingissues import ProjectProcessingIssuesEndpoint
 from .endpoints.project_stats import ProjectStatsEndpoint
 from .endpoints.project_tags import ProjectTagsEndpoint
 from .endpoints.project_tagkey_details import ProjectTagKeyDetailsEndpoint
@@ -307,6 +308,9 @@ urlpatterns = patterns(
     url(r'^projects/(?P<organization_slug>[^\/]+)/(?P<project_slug>[^\/]+)/searches/(?P<search_id>[^\/]+)/$',
         ProjectSearchDetailsEndpoint.as_view(),
         name='sentry-api-0-project-search-details'),
+    url(r'^projects/(?P<organization_slug>[^\/]+)/(?P<project_slug>[^\/]+)/processingissues/$',
+        ProjectProcessingIssuesEndpoint.as_view(),
+        name='sentry-api-0-project-processing-issues'),
     url(r'^projects/(?P<organization_slug>[^\/]+)/(?P<project_slug>[^\/]+)/stats/$',
         ProjectStatsEndpoint.as_view(),
         name='sentry-api-0-project-stats'),
diff --git a/src/sentry/static/sentry/app/components/stream/group.jsx b/src/sentry/static/sentry/app/components/stream/group.jsx
index 36f92f42ac..d60ce1a5aa 100644
--- a/src/sentry/static/sentry/app/components/stream/group.jsx
+++ b/src/sentry/static/sentry/app/components/stream/group.jsx
@@ -167,6 +167,11 @@ const StreamGroup = React.createClass({
             data={data} />
           <div className="event-extra">
             <ul>
+              {data.status === 'unprocessed' &&
+                <li>
+                  <strong className="unprocessed-hint">UNPROCESSED</strong>
+                </li>
+              }
               {this.getFeatures().has('callsigns') && data.shortId &&
                 <li>
                   <ShortId shortId={data.shortId} />
diff --git a/src/sentry/static/sentry/app/views/groupDetails/header.jsx b/src/sentry/static/sentry/app/views/groupDetails/header.jsx
index dafea59c32..e9a04f9cc9 100644
--- a/src/sentry/static/sentry/app/views/groupDetails/header.jsx
+++ b/src/sentry/static/sentry/app/views/groupDetails/header.jsx
@@ -104,6 +104,9 @@ const GroupHeader = React.createClass({
     if (group.status === 'resolved') {
       className += ' isResolved';
     }
+    if (group.status === 'unprocessed') {
+      className += ' isUnprocessed';
+    }
 
     let groupId = group.id,
       projectId = this.getProject().slug,
@@ -116,6 +119,9 @@ const GroupHeader = React.createClass({
         <div className="row">
           <div className="col-sm-8">
             <h3>
+              {group.status === 'unprocessed' &&
+                <strong className="unprocessed-hint">UNPROCESSED</strong>
+              }
               <GroupTitle data={group} />
             </h3>
             <div className="event-message">
diff --git a/src/sentry/static/sentry/app/views/stream/savedSearchSelector.jsx b/src/sentry/static/sentry/app/views/stream/savedSearchSelector.jsx
index bfac2b8b76..88f37e3508 100644
--- a/src/sentry/static/sentry/app/views/stream/savedSearchSelector.jsx
+++ b/src/sentry/static/sentry/app/views/stream/savedSearchSelector.jsx
@@ -156,6 +156,7 @@ const SaveSearchButton = React.createClass({
 
 const SavedSearchSelector = React.createClass({
   propTypes: {
+    query: React.PropTypes.string.isRequired,
     orgId: React.PropTypes.string.isRequired,
     projectId: React.PropTypes.string.isRequired,
     searchId: React.PropTypes.string,
@@ -168,7 +169,13 @@ const SavedSearchSelector = React.createClass({
 
   getTitle() {
     let searchId = this.props.searchId || null;
-    if (!searchId) return t('Custom Search');
+    if (!searchId) {
+      if ((this.props.query || '').trim() === 'is:unprocessed') {
+        return t('Unprocessed Issues');
+      } else {
+        return t('Custom Search');
+      }
+    }
     let results = this.props.savedSearchList.filter((search) => {
       return searchId === search.id;
     });
diff --git a/src/sentry/static/sentry/less/group-detail.less b/src/sentry/static/sentry/less/group-detail.less
index c19377094f..ec94aad144 100644
--- a/src/sentry/static/sentry/less/group-detail.less
+++ b/src/sentry/static/sentry/less/group-detail.less
@@ -23,6 +23,18 @@
       color: @70;
       font-size: 90%;
     }
+
+    strong.unprocessed-hint {
+      display: inline-block;
+      vertical-align: top;
+      font-size: 13px;
+      background: @purple-light;
+      color: white;
+      padding: 2px 6px;
+      border-radius: 2px;
+      margin-top: 3px;
+      margin-right: 10px;
+    }
   }
 
   .short-id {
diff --git a/src/sentry/static/sentry/less/stream.less b/src/sentry/static/sentry/less/stream.less
index 65248ba200..abd6a1cc4b 100644
--- a/src/sentry/static/sentry/less/stream.less
+++ b/src/sentry/static/sentry/less/stream.less
@@ -257,6 +257,13 @@
 
     &.isUnprocessed {
       background: lighten(@purple-light, 30%);
+
+      strong.unprocessed-hint {
+        background: @purple-light;
+        color: white;
+        padding: 2px 6px;
+        border-radius: 2px;
+      }
     }
 
     &.selected {
