commit 1fce5dc4db5c338d7431f9fef6c708be974ef33c
Author: David Cramer <dcramer@gmail.com>
Date:   Wed Dec 3 18:52:12 2014 -0800

    Add organization removal

diff --git a/src/sentry/tasks/deletion.py b/src/sentry/tasks/deletion.py
index a9f3f759c6..e9fb4340b9 100644
--- a/src/sentry/tasks/deletion.py
+++ b/src/sentry/tasks/deletion.py
@@ -11,6 +11,38 @@ from __future__ import absolute_import
 from sentry.tasks.base import instrumented_task, retry
 
 
+@instrumented_task(name='sentry.tasks.deletion.delete_organization', queue='cleanup',
+                   default_retry_delay=60 * 5, max_retries=None)
+@retry
+def delete_organization(object_id, **kwargs):
+    from sentry.models import (
+        Organization, OrganizationMember, OrganizationStatus, Team
+    )
+
+    try:
+        o = Organization.objects.get(id=object_id)
+    except Team.DoesNotExist:
+        return
+
+    if o.status != OrganizationStatus.DELETION_IN_PROGRESS:
+        o.update(status=OrganizationStatus.DELETION_IN_PROGRESS)
+
+    logger = delete_organization.get_logger()
+    for team in Team.objects.filter(organization=o).order_by('id')[:1]:
+        logger.info('Removing Team id=%s where organization=%s', team.id, o.id)
+        delete_team(team.id)
+        delete_organization.delay(object_id=object_id)
+        return
+
+    model_list = (OrganizationMember,)
+
+    has_more = delete_objects(model_list, relation={'organization': o}, logger=logger)
+    if has_more:
+        delete_organization.delay(object_id=object_id)
+        return
+    o.delete()
+
+
 @instrumented_task(name='sentry.tasks.deletion.delete_team', queue='cleanup',
                    default_retry_delay=60 * 5, max_retries=None)
 @retry
diff --git a/src/sentry/templates/sentry/remove-organization.html b/src/sentry/templates/sentry/remove-organization.html
new file mode 100644
index 0000000000..7caf92ff32
--- /dev/null
+++ b/src/sentry/templates/sentry/remove-organization.html
@@ -0,0 +1,37 @@
+{% extends "sentry/bases/organization.html" %}
+
+{% load crispy_forms_tags %}
+{% load i18n %}
+
+{% block org_settings_nav %}active{% endblock %}
+
+{% block inner %}
+  <div class="page-header">
+    <h3>{% trans "Remove Organization" %}</h3>
+  </div>
+  <form class="form-stacked" action="" method="post">
+    {% csrf_token %}
+
+    <p>{% trans "Removing this organization is permanent and cannot be undone!" %}</p>
+
+    {% if team_list %}
+      <p>{% trans "This will also remove the following teams and all associated data:" %}</p>
+
+      <ul>
+        {% for team in team_list %}
+          <li>{{ team.name }}</li>
+        {% endfor %}
+      </ul>
+    {% endif %}
+
+    {{ form|as_crispy_errors }}
+
+    {% for field in form %}
+        {{ field|as_crispy_field }}
+    {% endfor %}
+
+    <fieldset class="form-actions">
+      <button type="submit" class="btn btn-danger">{% trans "Remove Organization" %}</button> <a href="{% url 'sentry-organization-settings' organization.id %}" class="btn">{% trans "Cancel" %}</a>
+    </fieldset>
+  </form>
+{% endblock %}
diff --git a/src/sentry/web/frontend/remove_organization.py b/src/sentry/web/frontend/remove_organization.py
new file mode 100644
index 0000000000..ed32f961b9
--- /dev/null
+++ b/src/sentry/web/frontend/remove_organization.py
@@ -0,0 +1,47 @@
+from __future__ import absolute_import
+
+from django import forms
+from django.contrib import messages
+from django.core.urlresolvers import reverse
+from django.utils.translation import ugettext_lazy as _
+
+from sentry.models import OrganizationMemberType, OrganizationStatus
+from sentry.tasks.deletion import delete_organization
+from sentry.web.frontend.base import OrganizationView
+
+
+MSG_REMOVE_SUCCESS = _('The %s organization has been scheduled for removal.')
+
+
+class RemoveOrganizationForm(forms.Form):
+    pass
+
+
+class RemoveOrganizationView(OrganizationView):
+    required_access = OrganizationMemberType.OWNER
+
+    def get_form(self, request, organization):
+        if request.method == 'POST':
+            return RemoveOrganizationForm(request.POST)
+        return RemoveOrganizationForm()
+
+    def handle(self, request, organization):
+        form = self.get_form(request, organization)
+        if form.is_valid():
+            organization.update(status=OrganizationStatus.PENDING_DELETION)
+
+            delete_organization.apply_async(kwargs={
+                'object_id': organization.id,
+            }, countdown=60 * 5)
+
+            messages.add_message(request, messages.SUCCESS,
+                MSG_REMOVE_SUCCESS % (organization.name,))
+
+            return self.redirect(reverse('sentry'))
+
+        context = {
+            'form': form,
+            'team_list': organization.team_set.all(),
+        }
+
+        return self.respond('sentry/remove-organization.html', context)
diff --git a/src/sentry/web/urls.py b/src/sentry/web/urls.py
index d23bdcf64a..86490d3914 100644
--- a/src/sentry/web/urls.py
+++ b/src/sentry/web/urls.py
@@ -44,6 +44,7 @@ from sentry.web.frontend.create_organization_member import CreateOrganizationMem
 from sentry.web.frontend.create_project import CreateProjectView
 from sentry.web.frontend.create_team import CreateTeamView
 from sentry.web.frontend.project_settings import ProjectSettingsView
+from sentry.web.frontend.remove_organization import RemoveOrganizationView
 from sentry.web.frontend.remove_project import RemoveProjectView
 from sentry.web.frontend.remove_team import RemoveTeamView
 from sentry.web.frontend.team_projects import TeamProjectsView
@@ -132,6 +133,8 @@ urlpatterns += patterns('',
         name='sentry-organization-settings'),
     url(r'^organizations/(?P<organization_id>\d+)/teams/new/$', CreateTeamView.as_view(),
         name='sentry-create-team'),
+    url(r'^organizations/(?P<organization_id>\d+)/remove/$', RemoveOrganizationView.as_view(),
+        name='sentry-remove-organization'),
     url(r'^accept/(?P<member_id>\d+)/(?P<token>\w+)/$', AcceptOrganizationInviteView.as_view(),
         name='sentry-accept-invite'),
 
diff --git a/tests/sentry/web/frontend/test_remove_organization.py b/tests/sentry/web/frontend/test_remove_organization.py
new file mode 100644
index 0000000000..cf4061b269
--- /dev/null
+++ b/tests/sentry/web/frontend/test_remove_organization.py
@@ -0,0 +1,39 @@
+from __future__ import absolute_import
+
+from django.core.urlresolvers import reverse
+
+from sentry.models import Organization, OrganizationStatus
+from sentry.testutils import TestCase
+
+
+class RemoveOrganizationTest(TestCase):
+    def setUp(self):
+        super(RemoveOrganizationTest, self).setUp()
+
+        self.organization = self.create_organization(name='foo', owner=self.user)
+        self.team = self.create_team(organization=self.organization)
+        self.path = reverse('sentry-remove-organization', args=[self.organization.id])
+
+        self.login_as(self.user)
+
+    def test_renders_with_context(self):
+        resp = self.client.get(self.path)
+
+        assert resp.status_code == 200
+
+        self.assertTemplateUsed(resp, 'sentry/remove-organization.html')
+
+        assert resp.context['organization'] == self.organization
+        assert resp.context['form']
+        assert resp.context['team_list']
+
+    def test_success(self):
+        user2 = self.create_user('bar@example.com')
+
+        resp = self.client.post(self.path)
+
+        assert resp.status_code == 302
+
+        organization = Organization.objects.get(id=self.organization.id)
+
+        assert organization.status == OrganizationStatus.PENDING_DELETION
