commit bb7fc72222dec4628f3724c2211d41051bf2317d
Author: Katie Lundsgaard <katie@getsentry.com>
Date:   Thu Jan 26 17:28:38 2017 -0800

    Add repository data to commit list

diff --git a/src/sentry/api/serializers/models/commit.py b/src/sentry/api/serializers/models/commit.py
index 947bdb16f4..caae0bade0 100644
--- a/src/sentry/api/serializers/models/commit.py
+++ b/src/sentry/api/serializers/models/commit.py
@@ -1,18 +1,61 @@
 from __future__ import absolute_import
 
-from sentry.api.serializers import Serializer, register
-from sentry.models import Commit
+from sentry.api.serializers import Serializer, register, serialize
+from sentry.db.models.query import in_iexact
+from sentry.models import Commit, Repository, UserEmail, User
 
 
 @register(Commit)
 class CommitSerializer(Serializer):
+    def get_attrs(self, item_list, user):
+
+        authors = set(c.author for c in item_list if c.author is not None)
+
+        user_emails = UserEmail.objects.filter(
+            in_iexact('email', [a.email for a in authors]),
+        ).order_by('id')
+        org_ids = set(item.organization_id for item in item_list)
+        assert len(org_ids) == 1
+        org_id = org_ids.pop()
+        users = User.objects.filter(
+            id__in=[ue.user_id for ue in user_emails],
+            sentry_orgmember_set__organization_id=org_id
+        )
+        users_by_id = dict((user.id, serialize(user)) for user in users)
+        users_by_email = {}
+        for email in user_emails:
+            if email.email in users_by_email:
+                pass
+            user = users_by_id.get(email.user_id)
+            users_by_email[email.email] = user
+
+        author_objs = {}
+        for author in authors:
+            author_objs[author.email] = users_by_email.get(author.email, {
+                "name": author.name,
+                "email": author.email
+            })
+
+        repositories = list(Repository.objects.filter(id__in=[c.repository_id for c in item_list]))
+        repository_objs = {}
+        for repository in repositories:
+            repository_objs[repository.id] = serialize(repository)
+        result = {}
+        for item in item_list:
+            result[item] = {
+                'repository': repository_objs.get(item.repository_id, {}),
+                'user': author_objs.get(item.author.email, {})
+            }
+
+        return result
+
     def serialize(self, obj, attrs, user):
-        return {
+        d = {
             'id': obj.key,
             'message': obj.message,
-            'author': {
-                'name': obj.author.name,
-                'email': obj.author.email,
-            } if obj.author else None,
             'dateCreated': obj.date_added,
+            'repository': attrs.get('repository', {}),
+            'author': attrs.get('user', {})
         }
+
+        return d
diff --git a/src/sentry/static/sentry/app/views/releases/releaseCommits.jsx b/src/sentry/static/sentry/app/views/releases/releaseCommits.jsx
index c146281cc9..b23bc0ffa2 100644
--- a/src/sentry/static/sentry/app/views/releases/releaseCommits.jsx
+++ b/src/sentry/static/sentry/app/views/releases/releaseCommits.jsx
@@ -1,6 +1,8 @@
 import React from 'react';
 import LoadingIndicator from '../../components/loadingIndicator';
 import LoadingError from '../../components/loadingError';
+import Avatar from '../../components/avatar';
+
 import ApiMixin from '../../mixins/apiMixin';
 
 const ReleaseCommit = React.createClass({
@@ -8,20 +10,26 @@ const ReleaseCommit = React.createClass({
     commitId: React.PropTypes.string,
     shortId: React.PropTypes.string,
     commitMessage: React.PropTypes.string,
-    commitDateCreated: React.PropTypes.string
+    commitDateCreated: React.PropTypes.string,
+    author: React.PropTypes.object,
+    repository: React.PropTypes.object,
+
   },
   render() {
     return (
       <li className="list-group-item" key={this.props.commitId}>
         <div className="row row-center-vertically">
           <div className="col-xs-8 list-group-avatar">
-            <img src="https://github.com/benvinegar.png" className="avatar"/>
+            <Avatar user={this.props.author}/>
             <h5>{this.props.commitMessage}</h5>
-            <p><strong>benvinegar</strong> committed {this.props.commitDateCreated}</p>
+            <p><strong>{this.props.author.name}</strong> committed {this.props.commitDateCreated}</p>
           </div>
-          <div className="col-xs-2"><span className="repo-label">getsentry/sentry</span></div>
+          <div className="col-xs-2"><span className="repo-label">{this.props.repository.name}</span></div>
           <div className="col-xs-2 align-right">
-            <a className="btn btn-default btn-sm"><span className="icon-mark-github"/>&nbsp; {this.props.shortId}</a>
+            <a className="btn btn-default btn-sm"
+               href={this.props.repository.url + '/' + this.props.commitId}
+               target="_blank"><span
+               className={'icon-mark-' + this.props.repository.provider.id}/>&nbsp; {this.props.shortId}</a>
           </div>
         </div>
       </li>
@@ -92,10 +100,13 @@ const ReleaseCommits = React.createClass({
             let shortId = commit.id.slice(0, 7);
             return (
               <ReleaseCommit
+                key={commit.id}
                 commitId={commit.id}
                 shortId={shortId}
+                author={commit.author}
                 commitMessage={commit.message}
                 commitDateCreated={commit.dateCreated}
+                repository={commit.repository}
                 />
             );
           })}
