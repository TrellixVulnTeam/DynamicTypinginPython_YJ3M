commit 604228cc6b2b9543d445e0d2611418273475ac73
Author: Mark Story <mark@mark-story.com>
Date:   Fri Dec 14 13:58:36 2018 -0800

    feat(plugins) Hide plugins that also have integrations (#11031)
    
    By hiding legacy plugins in the UI we make it a bit harder for customers
    to enable plugins we don't want them to use. This should help guide them
    towards the organization integrations which we plan on supporting more.
    
    Fixes APP-890

diff --git a/src/sentry/api/serializers/models/plugin.py b/src/sentry/api/serializers/models/plugin.py
index 1120df7fbd..eb7cf33fdf 100644
--- a/src/sentry/api/serializers/models/plugin.py
+++ b/src/sentry/api/serializers/models/plugin.py
@@ -62,6 +62,8 @@ class PluginSerializer(Serializer):
                 'url': six.text_type(obj.author_url)
             }
 
+        d['isHidden'] = d.get('enabled', False) is False and obj.is_hidden()
+
         if obj.description:
             d['description'] = six.text_type(obj.description)
 
diff --git a/src/sentry/plugins/__init__.py b/src/sentry/plugins/__init__.py
index 8ad232756c..cea512faaa 100644
--- a/src/sentry/plugins/__init__.py
+++ b/src/sentry/plugins/__init__.py
@@ -7,6 +7,14 @@ sentry.plugins
 """
 from __future__ import absolute_import
 
+HIDDEN_PLUGINS = (
+    'bitbucket',
+    'gitlab',
+    'github',
+    'slack',
+    'vsts'
+)
+
 from sentry.plugins.base import *  # NOQA
 from sentry.plugins.bases import *  # NOQA
 from sentry.plugins.interfaces import *  # NOQA
diff --git a/src/sentry/plugins/base/v1.py b/src/sentry/plugins/base/v1.py
index d406913e11..0bf5deb045 100644
--- a/src/sentry/plugins/base/v1.py
+++ b/src/sentry/plugins/base/v1.py
@@ -17,6 +17,7 @@ from django.http import HttpResponseRedirect
 from threading import local
 
 from sentry.auth import access
+from sentry.plugins import HIDDEN_PLUGINS
 from sentry.plugins.config import PluginConfigMixin
 from sentry.plugins.status import PluginStatusMixin
 from sentry.plugins.base.response import Response
@@ -488,6 +489,14 @@ class IPlugin(local, PluggableViewMixin, PluginConfigMixin, PluginStatusMixin):
         """
         return hasattr(self, 'test_configuration')
 
+    def is_hidden(self):
+        """
+        Should this plugin be hidden in the UI
+
+        We use this to hide plugins as they are replaced with integrations.
+        """
+        return self.slug in HIDDEN_PLUGINS
+
     def configure(self, request, project=None):
         """Configures the plugin."""
         return default_plugin_config(self, project, request)
diff --git a/src/sentry/plugins/base/v2.py b/src/sentry/plugins/base/v2.py
index e0cf423d6b..6c0f260c58 100644
--- a/src/sentry/plugins/base/v2.py
+++ b/src/sentry/plugins/base/v2.py
@@ -15,6 +15,7 @@ import six
 from django.http import HttpResponseRedirect
 from threading import local
 
+from sentry.plugins import HIDDEN_PLUGINS
 from sentry.plugins.config import PluginConfigMixin
 from sentry.plugins.status import PluginStatusMixin
 from sentry.plugins.base.response import Response
@@ -108,6 +109,14 @@ class IPlugin2(local, PluginConfigMixin, PluginStatusMixin):
 
         return True
 
+    def is_hidden(self):
+        """
+        Should this plugin be hidden in the UI
+
+        We use this to hide plugins as they are replaced with integrations.
+        """
+        return self.slug in HIDDEN_PLUGINS
+
     def reset_options(self, project=None, user=None):
         from sentry.plugins.helpers import reset_options
         return reset_options(self.get_conf_key(), project, user)
diff --git a/src/sentry/static/sentry/app/components/pluginList.jsx b/src/sentry/static/sentry/app/components/pluginList.jsx
index 8847f6c77d..cf31fa715e 100644
--- a/src/sentry/static/sentry/app/components/pluginList.jsx
+++ b/src/sentry/static/sentry/app/components/pluginList.jsx
@@ -72,7 +72,7 @@ export default class PluginList extends React.Component {
         })}
 
         <InactivePlugins
-          plugins={pluginList.filter(p => !p.enabled)}
+          plugins={pluginList.filter(p => !p.enabled && !p.isHidden)}
           onEnablePlugin={this.handleEnablePlugin}
         />
       </div>
diff --git a/src/sentry/static/sentry/app/views/projectPlugins/projectPlugins.jsx b/src/sentry/static/sentry/app/views/projectPlugins/projectPlugins.jsx
index b8bd569d84..c9e9e90f05 100644
--- a/src/sentry/static/sentry/app/views/projectPlugins/projectPlugins.jsx
+++ b/src/sentry/static/sentry/app/views/projectPlugins/projectPlugins.jsx
@@ -64,7 +64,7 @@ class ProjectPlugins extends Component {
             </Access>
           </PanelAlert>
 
-          {plugins.map(plugin => (
+          {plugins.filter(p => !p.isHidden).map(plugin => (
             <PanelItem key={plugin.id}>
               <ProjectPluginRow
                 params={params}
diff --git a/tests/js/fixtures/plugin.js b/tests/js/fixtures/plugin.js
index 65d85220f8..f320b2eaa7 100644
--- a/tests/js/fixtures/plugin.js
+++ b/tests/js/fixtures/plugin.js
@@ -2,6 +2,7 @@ export function Plugin(params = {}) {
   return {
     author: {url: 'https://github.com/getsentry/sentry', name: 'Sentry Team'},
     enabled: false,
+    isHidden: false,
     id: 'amazon-sqs',
     name: 'Amazon SQS',
     slug: 'amazon-sqs',
diff --git a/tests/js/fixtures/plugins.js b/tests/js/fixtures/plugins.js
index 3554e2ce53..8c800d44d1 100644
--- a/tests/js/fixtures/plugins.js
+++ b/tests/js/fixtures/plugins.js
@@ -11,6 +11,13 @@ export function Plugins(params = []) {
       canDisable: false,
       hasConfiguration: false,
     }),
+    Plugin({
+      enabled: false,
+      isHidden: true,
+      name: 'Hidden Plugin',
+      slug: 'hidden-plugin',
+      id: 'hidden-plugin',
+    }),
     ...params,
   ];
 }
diff --git a/tests/js/spec/components/__snapshots__/inactivePlugins.spec.jsx.snap b/tests/js/spec/components/__snapshots__/inactivePlugins.spec.jsx.snap
index 92befa3cec..cebae9833b 100644
--- a/tests/js/spec/components/__snapshots__/inactivePlugins.spec.jsx.snap
+++ b/tests/js/spec/components/__snapshots__/inactivePlugins.spec.jsx.snap
@@ -71,6 +71,33 @@ exports[`InactivePlugins renders plugins list 1`] = `
           </Flex>
         </IntegrationButton>
       </Box>
+      <Box
+        key="hidden-plugin"
+        m={1}
+      >
+        <IntegrationButton
+          className="ref-plugin-enable-hidden-plugin"
+          onClick={[Function]}
+        >
+          <Flex
+            align="center"
+            justify="center"
+          >
+            <Flex
+              align="center"
+              mr={1}
+            >
+              <PluginIcon
+                pluginId="hidden-plugin"
+                size={20}
+              />
+            </Flex>
+            <TextOverflow>
+              Hidden Plugin
+            </TextOverflow>
+          </Flex>
+        </IntegrationButton>
+      </Box>
     </Flex>
   </PanelBody>
 </Panel>
diff --git a/tests/js/spec/views/__snapshots__/projectPluginDetails.spec.jsx.snap b/tests/js/spec/views/__snapshots__/projectPluginDetails.spec.jsx.snap
index 53834e46ec..c6748f2584 100644
--- a/tests/js/spec/views/__snapshots__/projectPluginDetails.spec.jsx.snap
+++ b/tests/js/spec/views/__snapshots__/projectPluginDetails.spec.jsx.snap
@@ -319,6 +319,7 @@ exports[`ProjectPluginDetails renders 1`] = `
                     "enabled": false,
                     "hasConfiguration": true,
                     "id": "amazon-sqs",
+                    "isHidden": false,
                     "name": "Amazon SQS",
                     "slug": "amazon-sqs",
                     "version": "8.23.0.dev0",
@@ -521,6 +522,7 @@ exports[`ProjectPluginDetails renders 1`] = `
                                     "enabled": false,
                                     "hasConfiguration": true,
                                     "id": "amazon-sqs",
+                                    "isHidden": false,
                                     "name": "Amazon SQS",
                                     "slug": "amazon-sqs",
                                     "version": "8.23.0.dev0",
diff --git a/tests/js/spec/views/projectPlugins/__snapshots__/projectPlugins.spec.jsx.snap b/tests/js/spec/views/projectPlugins/__snapshots__/projectPlugins.spec.jsx.snap
index 71af79646a..defc560ac3 100644
--- a/tests/js/spec/views/projectPlugins/__snapshots__/projectPlugins.spec.jsx.snap
+++ b/tests/js/spec/views/projectPlugins/__snapshots__/projectPlugins.spec.jsx.snap
@@ -44,6 +44,7 @@ exports[`ProjectPlugins renders 1`] = `
         enabled={false}
         hasConfiguration={true}
         id="amazon-sqs"
+        isHidden={false}
         name="Amazon SQS"
         params={
           Object {
@@ -71,6 +72,7 @@ exports[`ProjectPlugins renders 1`] = `
         enabled={true}
         hasConfiguration={false}
         id="github"
+        isHidden={false}
         name="GitHub"
         params={
           Object {
diff --git a/tests/js/spec/views/projectPlugins/__snapshots__/projectPluginsRow.spec.jsx.snap b/tests/js/spec/views/projectPlugins/__snapshots__/projectPluginsRow.spec.jsx.snap
index abb6e85a1c..62263454dc 100644
--- a/tests/js/spec/views/projectPlugins/__snapshots__/projectPluginsRow.spec.jsx.snap
+++ b/tests/js/spec/views/projectPlugins/__snapshots__/projectPluginsRow.spec.jsx.snap
@@ -13,6 +13,7 @@ exports[`ProjectPluginRow renders 1`] = `
   enabled={false}
   hasConfiguration={true}
   id="amazon-sqs"
+  isHidden={false}
   name="Amazon SQS"
   orgId="org-slug"
   projectId="project-slug"
diff --git a/tests/sentry/api/endpoints/test_project_plugins.py b/tests/sentry/api/endpoints/test_project_plugins.py
new file mode 100644
index 0000000000..95748b7f5e
--- /dev/null
+++ b/tests/sentry/api/endpoints/test_project_plugins.py
@@ -0,0 +1,49 @@
+from __future__ import absolute_import
+
+from django.core.urlresolvers import reverse
+
+from sentry.plugins import plugins
+from sentry.testutils import APITestCase
+from mock import patch
+
+
+class ProjectPluginsTest(APITestCase):
+
+    def test_get(self):
+        project = self.create_project()
+
+        issues = plugins.get('issuetrackingplugin2')
+        with patch.object(issues, 'is_hidden', return_value=True):
+            self.login_as(user=self.user)
+
+            url = reverse(
+                'sentry-api-0-project-plugins',
+                kwargs={
+                    'organization_slug': project.organization.slug,
+                    'project_slug': project.slug,
+                }
+            )
+            response = self.client.get(url)
+
+        assert response.status_code == 200, (response.status_code, response.content)
+        assert len(response.data) >= 9
+
+        auto_tag = response.data[0]
+        assert auto_tag['name'] == 'Auto Tag: Browsers'
+        assert auto_tag['enabled'] is True
+        assert auto_tag['isHidden'] is False
+        self.assert_plugin_shape(auto_tag)
+
+        issues = filter(lambda p: p['slug'] == 'issuetrackingplugin2', response.data)[0]
+        assert issues['name'] == 'IssueTrackingPlugin2'
+        assert issues['enabled'] is False
+        assert issues['isHidden'] is True
+        self.assert_plugin_shape(issues)
+
+    def assert_plugin_shape(self, plugin):
+        assert 'id' in plugin
+        assert 'name' in plugin
+        assert 'shortName' in plugin
+        assert 'slug' in plugin
+        assert 'type' in plugin
+        assert 'status' in plugin
