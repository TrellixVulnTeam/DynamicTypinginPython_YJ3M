commit 56e20d2c208b27e9ebd7f56ec6aeb8bfc56dabea
Author: Mark Story <mark@sentry.io>
Date:   Fri Jun 7 10:32:37 2019 -0400

    feat(events-v2) Fix 500 when group parameter is not an integer (#13567)
    
    Don't respond with a 500 error that occurred when the `group` query
    parameter was empty or a non-integer value.
    
    Refs SEN-716

diff --git a/src/sentry/api/bases/organization_events.py b/src/sentry/api/bases/organization_events.py
index d13c17b087..2a5c863bb7 100644
--- a/src/sentry/api/bases/organization_events.py
+++ b/src/sentry/api/bases/organization_events.py
@@ -31,8 +31,13 @@ class OrganizationEventsEndpointBase(OrganizationEndpoint):
     def get_snuba_query_args(self, request, organization):
         params = self.get_filter_params(request, organization)
 
-        group_ids = set(map(int, request.GET.getlist('group')))
+        group_ids = request.GET.getlist('group')
         if group_ids:
+            try:
+                group_ids = set(map(int, filter(None, group_ids)))
+            except ValueError:
+                raise OrganizationEventsError('Invalid group parameter. Values must be numbers')
+
             projects = Project.objects.filter(
                 organization=organization,
                 group__id__in=group_ids,
diff --git a/tests/snuba/api/endpoints/test_organization_events.py b/tests/snuba/api/endpoints/test_organization_events.py
index e4c7cca07c..deb81528dc 100644
--- a/tests/snuba/api/endpoints/test_organization_events.py
+++ b/tests/snuba/api/endpoints/test_organization_events.py
@@ -729,6 +729,36 @@ class OrganizationEventsStatsEndpointTest(OrganizationEventsTestBase):
         assert response.status_code == 200, response.content
         assert len(response.data['data']) == 0
 
+    def test_groupid_filter(self):
+        url = reverse(
+            'sentry-api-0-organization-events-stats',
+            kwargs={
+                'organization_slug': self.organization.slug,
+            }
+        )
+        url = '%s?%s' % (url, urlencode({
+            'start': self.day_ago.isoformat()[:19],
+            'end': (self.day_ago + timedelta(hours=1, minutes=59)).isoformat()[:19],
+            'interval': '1h',
+            'group': self.group.id
+        }))
+        response = self.client.get(url, format='json')
+
+        assert response.status_code == 200, response.content
+        assert len(response.data['data'])
+
+    def test_groupid_filter_invalid_value(self):
+        url = reverse(
+            'sentry-api-0-organization-events-stats',
+            kwargs={
+                'organization_slug': self.organization.slug,
+            }
+        )
+        url = '%s?group=not-a-number' % (url,)
+        response = self.client.get(url, format='json')
+
+        assert response.status_code == 400, response.content
+
     def test_user_count(self):
         self.create_event(
             event_id='d' * 32,
