commit fbefbc97e30945c012ea7b1489d2e536619d757d
Author: Brett Hoerner <brett@bretthoerner.com>
Date:   Mon Apr 23 15:22:41 2018 -0500

    ref(snuba): Change Snuba port to 1218. (#8142)

diff --git a/.travis.yml b/.travis.yml
index 2226e82a29..4324397dbe 100644
--- a/.travis.yml
+++ b/.travis.yml
@@ -128,7 +128,7 @@ matrix:
         - redis-server
         - postgresql
     - python: 2.7
-      env: TEST_SUITE=snuba SENTRY_TAGSTORE=sentry.tagstore.snuba.SnubaTagStorage SNUBA=http://localhost:8000
+      env: TEST_SUITE=snuba SENTRY_TAGSTORE=sentry.tagstore.snuba.SnubaTagStorage
       services:
         - docker
         - memcached
@@ -136,11 +136,11 @@ matrix:
         - postgresql
       before_install:
         - docker run -d --name clickhouse-server -p 9000:9000 -p 9009:9009 -p 8123:8123 --ulimit nofile=262144:262144 yandex/clickhouse-server
-        - docker run -d --env SNUBA_SETTINGS=test --env CLICKHOUSE_SERVER=clickhouse-server:9000 --name snuba -p 8000:8000 --link clickhouse-server:clickhouse-server getsentry/snuba
+        - docker run -d --env SNUBA_SETTINGS=test --env CLICKHOUSE_SERVER=clickhouse-server:9000 --name snuba -p 1218:1218 --link clickhouse-server:clickhouse-server getsentry/snuba
         - docker ps -a
   allow_failures:
     - python: 2.7
-      env: TEST_SUITE=snuba SENTRY_TAGSTORE=sentry.tagstore.snuba.SnubaTagStorage SNUBA=http://localhost:8000
+      env: TEST_SUITE=snuba SENTRY_TAGSTORE=sentry.tagstore.snuba.SnubaTagStorage
 notifications:
   webhooks:
     urls:
diff --git a/src/sentry/conf/server.py b/src/sentry/conf/server.py
index c95ec69a25..ace4d189a9 100644
--- a/src/sentry/conf/server.py
+++ b/src/sentry/conf/server.py
@@ -938,6 +938,9 @@ SENTRY_RATELIMITER_OPTIONS = {}
 # The default value for project-level quotas
 SENTRY_DEFAULT_MAX_EVENTS_PER_MINUTE = '90%'
 
+# Snuba configuration
+SENTRY_SNUBA = os.environ.get('SNUBA', 'http://localhost:1218')
+
 # Node storage backend
 SENTRY_NODESTORE = 'sentry.nodestore.django.DjangoNodeStorage'
 SENTRY_NODESTORE_OPTIONS = {}
diff --git a/src/sentry/testutils/cases.py b/src/sentry/testutils/cases.py
index 1118a095a4..e269dfe195 100644
--- a/src/sentry/testutils/cases.py
+++ b/src/sentry/testutils/cases.py
@@ -55,7 +55,7 @@ from sentry.models import (
 )
 from sentry.plugins import plugins
 from sentry.rules import EventState
-from sentry.utils import json, snuba
+from sentry.utils import json
 from sentry.utils.auth import SSO_SESSION_KEY
 
 from .fixtures import Fixtures
@@ -694,7 +694,7 @@ class SnubaTestCase(TestCase):
     def setUp(self):
         super(SnubaTestCase, self).setUp()
 
-        assert requests.post(snuba.SNUBA + '/tests/drop').status_code == 200
+        assert requests.post(settings.SENTRY_SNUBA + '/tests/drop').status_code == 200
 
     def __wrap_event(self, event, data, primary_hash):
         # TODO: Abstract and combine this with the stream code in
@@ -765,6 +765,6 @@ class SnubaTestCase(TestCase):
             events = [events]
 
         assert requests.post(
-            snuba.SNUBA + '/tests/insert',
+            settings.SENTRY_SNUBA + '/tests/insert',
             data=json.dumps(events)
         ).status_code == 200
diff --git a/src/sentry/utils/snuba.py b/src/sentry/utils/snuba.py
index ecdc69fab5..428da52e50 100644
--- a/src/sentry/utils/snuba.py
+++ b/src/sentry/utils/snuba.py
@@ -5,13 +5,12 @@ from itertools import chain
 import json
 import requests
 import six
-import os
+
+from django.conf import settings
 
 from sentry.models import Group, GroupHash, Environment, Release, ReleaseProject
 from sentry.utils.dates import to_timestamp
 
-SNUBA = os.environ.get('SNUBA', 'http://localhost:5000')
-
 
 class SnubaError(Exception):
     pass
@@ -78,7 +77,7 @@ def query(start, end, groupby, conditions=None, filter_keys=None,
     get_issues = 'issue' in all_cols
     issues = get_project_issues(project_ids, filter_keys.get('issue')) if get_issues else None
 
-    url = '{0}/query'.format(SNUBA)
+    url = '{0}/query'.format(settings.SENTRY_SNUBA)
     request = {k: v for k, v in six.iteritems({
         'from_date': start.isoformat(),
         'to_date': end.isoformat(),
diff --git a/tests/sentry/tsdb/test_snuba.py b/tests/sentry/tsdb/test_snuba.py
index 0e45c8c551..12ff0bf474 100644
--- a/tests/sentry/tsdb/test_snuba.py
+++ b/tests/sentry/tsdb/test_snuba.py
@@ -6,7 +6,8 @@ import json
 import pytest
 import responses
 
-from sentry.utils import snuba
+from django.conf import settings
+
 from sentry.models import GroupHash, Release
 from sentry.testutils import TestCase
 from sentry.tsdb.base import TSDBModel
@@ -79,7 +80,10 @@ class SnubaTSDBRequestsTest(TestCase):
                         datum[agg[2]] = [99]
                 return (200, {}, json.dumps({'data': [datum], 'meta': meta}))
 
-            rsps.add_callback(responses.POST, snuba.SNUBA + '/query', callback=snuba_response)
+            rsps.add_callback(
+                responses.POST,
+                settings.SENTRY_SNUBA + '/query',
+                callback=snuba_response)
 
             results = self.db.get_most_frequent(TSDBModel.frequent_issues_by_project,
                                                 [project_id], dts[0], dts[0])
@@ -141,7 +145,10 @@ class SnubaTSDBRequestsTest(TestCase):
                     'meta': [{'name': 'time'}, {'name': 'issue'}, {'name': 'aggregate'}]
                 }))
 
-            rsps.add_callback(responses.POST, snuba.SNUBA + '/query', callback=snuba_response)
+            rsps.add_callback(
+                responses.POST,
+                settings.SENTRY_SNUBA + '/query',
+                callback=snuba_response)
             results = self.db.get_range(TSDBModel.group, [group.id], dts[0], dts[-1])
             assert results is not None
 
@@ -169,7 +176,10 @@ class SnubaTSDBRequestsTest(TestCase):
                     'meta': [{'name': 'release'}, {'name': 'time'}, {'name': 'aggregate'}]
                 }))
 
-            rsps.add_callback(responses.POST, snuba.SNUBA + '/query', callback=snuba_response)
+            rsps.add_callback(
+                responses.POST,
+                settings.SENTRY_SNUBA + '/query',
+                callback=snuba_response)
             results = self.db.get_range(
                 TSDBModel.release, [release.id], dts[0], dts[-1], rollup=3600)
             assert results == {
@@ -197,7 +207,10 @@ class SnubaTSDBRequestsTest(TestCase):
                     'meta': [{'name': 'project_id'}, {'name': 'time'}, {'name': 'aggregate'}]
                 }))
 
-            rsps.add_callback(responses.POST, snuba.SNUBA + '/query', callback=snuba_response)
+            rsps.add_callback(
+                responses.POST,
+                settings.SENTRY_SNUBA + '/query',
+                callback=snuba_response)
             results = self.db.get_range(TSDBModel.project, [project.id],
                                         dts[0], dts[-1], environment_id=env.id, rollup=3600)
             assert results == {
diff --git a/tests/snuba/tagstore/test_tagstore_backend.py b/tests/snuba/tagstore/test_tagstore_backend.py
index 1e22ed2c91..d60b813f57 100644
--- a/tests/snuba/tagstore/test_tagstore_backend.py
+++ b/tests/snuba/tagstore/test_tagstore_backend.py
@@ -7,6 +7,8 @@ import pytest
 import requests
 import six
 
+from django.conf import settings
+
 from sentry.models import GroupHash, EventUser
 from sentry.tagstore.exceptions import (
     GroupTagKeyNotFound,
@@ -16,12 +18,11 @@ from sentry.tagstore.exceptions import (
 )
 from sentry.tagstore.snuba.backend import SnubaTagStorage
 from sentry.testutils import TestCase
-from sentry.utils import snuba
 
 
 class TagStorage(TestCase):
     def setUp(self):
-        assert requests.post(snuba.SNUBA + '/tests/drop').status_code == 200
+        assert requests.post(settings.SENTRY_SNUBA + '/tests/drop').status_code == 200
 
         self.ts = SnubaTagStorage()
 
@@ -76,7 +77,7 @@ class TagStorage(TestCase):
             },
         }])
 
-        assert requests.post(snuba.SNUBA + '/tests/insert', data=data).status_code == 200
+        assert requests.post(settings.SENTRY_SNUBA + '/tests/insert', data=data).status_code == 200
 
     def test_get_group_tag_keys_and_top_values(self):
         result = self.ts.get_group_tag_keys_and_top_values(
diff --git a/tests/snuba/tsdb/test_tsdb_backend.py b/tests/snuba/tsdb/test_tsdb_backend.py
index 384bb2f2df..51cb95ea44 100644
--- a/tests/snuba/tsdb/test_tsdb_backend.py
+++ b/tests/snuba/tsdb/test_tsdb_backend.py
@@ -7,11 +7,12 @@ import pytz
 import requests
 import six
 
+from django.conf import settings
+
 from sentry.models import GroupHash, Release
 from sentry.tsdb.base import TSDBModel
 from sentry.tsdb.snuba import SnubaTSDB
 from sentry.testutils import TestCase
-from sentry.utils import snuba
 from sentry.utils.dates import to_timestamp
 
 
@@ -22,7 +23,7 @@ def timestamp(d):
 
 class SnubaTSDBTest(TestCase):
     def setUp(self):
-        assert requests.post(snuba.SNUBA + '/tests/drop').status_code == 200
+        assert requests.post(settings.SENTRY_SNUBA + '/tests/drop').status_code == 200
 
         self.db = SnubaTSDB()
         self.now = datetime.utcnow().replace(
@@ -75,7 +76,7 @@ class SnubaTSDBTest(TestCase):
             },
         } for r in range(0, 14400, 600)])  # Every 10 min for 4 hours
 
-        assert requests.post(snuba.SNUBA + '/tests/insert', data=data).status_code == 200
+        assert requests.post(settings.SENTRY_SNUBA + '/tests/insert', data=data).status_code == 200
 
     def test_range_groups(self):
         dts = [self.now + timedelta(hours=i) for i in range(4)]
