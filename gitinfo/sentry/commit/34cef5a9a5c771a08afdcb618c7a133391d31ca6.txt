commit 34cef5a9a5c771a08afdcb618c7a133391d31ca6
Author: David Cramer <dcramer@gmail.com>
Date:   Tue Apr 21 19:55:13 2015 -0700

    Basic note posting functionality

diff --git a/src/sentry/static/sentry/app/stores/groupStore.jsx b/src/sentry/static/sentry/app/stores/groupStore.jsx
index ce35e57ad6..9d02bd8774 100644
--- a/src/sentry/static/sentry/app/stores/groupStore.jsx
+++ b/src/sentry/static/sentry/app/stores/groupStore.jsx
@@ -100,6 +100,15 @@ var GroupListStore = Reflux.createStore({
     return this.statuses[id][status] || false;
   },
 
+  addActivity(id, data) {
+    var group = this.getItem(id);
+    if (!group) {
+      return;
+    }
+    group.activity.unshift(data);
+    this.trigger();
+  },
+
   getItem(id) {
     var pendingForId = [];
     this.pendingChanges.forEach(change => {
diff --git a/src/sentry/static/sentry/app/views/groupDetails/activity.jsx b/src/sentry/static/sentry/app/views/groupDetails/activity.jsx
index a49bbe994a..3b298e57f1 100644
--- a/src/sentry/static/sentry/app/views/groupDetails/activity.jsx
+++ b/src/sentry/static/sentry/app/views/groupDetails/activity.jsx
@@ -1,8 +1,10 @@
 /*** @jsx React.DOM */
 var React = require("react");
 
+var api = require("../../api");
 var Gravatar = require("../../components/gravatar");
 var GroupState = require("../../mixins/groupState");
+var GroupStore = require("../../stores/groupStore");
 var PropTypes = require("../../proptypes");
 var TimeSince = require("../../components/timeSince");
 var utils = require("../../utils");
@@ -36,24 +38,93 @@ var formatActivity = function(item) {
   }
 };
 
-var GroupActivity = React.createClass({
-  mixins: [GroupState],
-
+var NoteInput = React.createClass({
   getInitialState() {
     return {
-      noteTextareaExpanded: false
+      loading: false,
+      error: false,
+      expanded: false,
+      value: ''
     };
   },
 
-  expandNoteTextarea() {
-    this.setState({noteTextareaExpanded: true});
+  onSubmit(e) {
+    e.preventDefault();
+
+    this.setState({
+      loading: true,
+      error: false
+    });
+
+    api.request('/groups/' + this.props.group.id + '/notes/', {
+      method: 'POST',
+      data: {
+        text: this.state.value
+      },
+      error: () => {
+        this.setState({
+          loading: false,
+          error: true
+        });
+      },
+      success: (data) => {
+        this.setState({
+          value: '',
+          expanded: false,
+          loading: false
+        });
+        GroupStore.addActivity(this.props.group.id, data);
+      }
+    });
   },
 
-  collapseNoteTextarea() {
-    this.setState({noteTextareaExpanded: false});
+  onChange(e) {
+    this.setState({value: e.target.value});
   },
 
-  render: function() {
+  expand() {
+    this.setState({expanded: true});
+  },
+
+  collapse() {
+    if (this.state.value === '') {
+      this.setState({expanded: false});
+    }
+  },
+
+  render() {
+    var classNames = 'activity-field';
+    if (this.state.expanded) {
+      classNames += ' expanded';
+    }
+    if (this.state.error) {
+      classNames += ' error';
+    }
+    if (this.state.loading) {
+      classNames += ' loading';
+    }
+
+    return (
+      <form className={classNames} onSubmit={this.onSubmit}>
+        <div className="activity-notes">
+          <textarea placeholder="Add some details or an update on this event"
+                    onChange={this.onChange}
+                    onFocus={this.expand} onBlur={this.maybeCollapse}
+                    value={this.state.value} />
+          <div className="activity-actions">
+            <button className="btn btn-default" type="submit">Leave note</button>
+          </div>
+        </div>
+      </form>
+    );
+  }
+});
+
+
+var GroupActivity = React.createClass({
+  mixins: [GroupState],
+
+  render() {
     var group = this.getGroup();
 
     var children = group.activity.map((item, itemIdx) => {
@@ -87,22 +158,9 @@ var GroupActivity = React.createClass({
       }
     });
 
-    var activityFieldClasses = 'activity-field';
-    if (this.state.noteTextareaExpanded) {
-      activityFieldClasses += ' expanded';
-    }
-
     return (
       <div className="activity">
-        <div className={activityFieldClasses}>
-          <div className="activity-notes">
-            <textarea placeholder="Add some details or an update on this event"
-                      onFocus={this.expandNoteTextarea} onBlur={this.collapseNoteTextarea}/>
-            <div className="activity-actions">
-              <button className="btn btn-default">Leave note</button>
-            </div>
-          </div>
-        </div>
+        <NoteInput group={group} />
         <ul className="activity">
           {children}
         </ul>
