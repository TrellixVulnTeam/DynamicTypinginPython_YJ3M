commit eedc747addac5750dbd0ba2673d2ac48a3c85c29
Author: David Cramer <dcramer@gmail.com>
Date:   Fri Dec 16 12:53:29 2016 -0800

    [plugins] remove one-off config hacks for react (#4685)

diff --git a/src/sentry/plugins/base/configuration.py b/src/sentry/plugins/base/configuration.py
index a34d3563ad..c6f891a61a 100644
--- a/src/sentry/plugins/base/configuration.py
+++ b/src/sentry/plugins/base/configuration.py
@@ -3,9 +3,6 @@ from __future__ import absolute_import
 import logging
 import six
 
-from sentry import options
-from sentry.models import ProjectOption
-
 from django.utils.translation import ugettext as _
 from django.utils.safestring import mark_safe
 from django.template.loader import render_to_string
@@ -16,6 +13,37 @@ from django.contrib import messages
 from django.http import Http404
 from requests.exceptions import HTTPError
 
+from sentry import options
+from sentry.api import client
+from sentry.api.serializers import serialize
+from sentry.models import ProjectOption
+from sentry.utils import json
+
+
+def react_plugin_config(plugin, project, request):
+    response = client.get('/projects/{}/{}/plugins/{}/'.format(
+        project.organization.slug,
+        project.slug,
+        plugin.slug,
+    ), request=request)
+
+    return mark_safe("""
+    <div id="ref-plugin-config"></div>
+    <script>
+    $(function(){
+        ReactDOM.render(React.createFactory(Sentry.PluginConfig)({
+            project: %s,
+            organization: %s,
+            data: %s
+        }), document.getElementById('ref-plugin-config'));
+    });
+    </script>
+    """ % (
+        json.dumps_htmlsafe(serialize(project, request.user)),
+        json.dumps_htmlsafe(serialize(project.organization, request.user)),
+        json.dumps_htmlsafe(response.data)
+    ))
+
 
 def default_plugin_config(plugin, project, request):
     if plugin.can_enable_for_projects() and \
diff --git a/src/sentry/plugins/bases/issue2.py b/src/sentry/plugins/bases/issue2.py
index 641eaa7396..9163e7fa99 100644
--- a/src/sentry/plugins/bases/issue2.py
+++ b/src/sentry/plugins/bases/issue2.py
@@ -15,6 +15,7 @@ from sentry.api.serializers.models.plugin import PluginSerializer
 from sentry.exceptions import PluginError  # NOQA
 from sentry.models import Activity, Event, GroupMeta
 from sentry.plugins import Plugin
+from sentry.plugins.base.configuration import react_plugin_config
 from sentry.plugins.endpoints import PluginGroupEndpoint
 from sentry.signals import issue_tracker_used
 from sentry.utils.auth import get_auth_providers
@@ -38,6 +39,9 @@ class IssueTrackingPlugin2(Plugin):
     auth_provider = None
     allowed_actions = ('create', 'link', 'unlink')
 
+    def configure(self, project, request):
+        return react_plugin_config(self, project, request)
+
     def get_plugin_type(self):
         return 'issue-tracking'
 
diff --git a/src/sentry/plugins/bases/notify.py b/src/sentry/plugins/bases/notify.py
index bd86d47b55..44c0d1d597 100644
--- a/src/sentry/plugins/bases/notify.py
+++ b/src/sentry/plugins/bases/notify.py
@@ -22,6 +22,7 @@ from sentry.digests.notifications import (
     unsplit_key,
 )
 from sentry.plugins import Notification, Plugin
+from sentry.plugins.base.configuration import react_plugin_config
 from sentry.models import (
     ProjectOption,
     UserOption,
@@ -55,6 +56,9 @@ class NotificationPlugin(Plugin):
     # site_conf_form = NotificationConfigurationForm
     project_conf_form = NotificationConfigurationForm
 
+    def configure(self, project, request):
+        return react_plugin_config(self, project, request)
+
     def get_plugin_type(self):
         return 'notification'
 
diff --git a/src/sentry/templates/sentry/projects/plugins/configure.html b/src/sentry/templates/sentry/projects/plugins/configure.html
index c33c4d4a3c..ef83bd6f39 100644
--- a/src/sentry/templates/sentry/projects/plugins/configure.html
+++ b/src/sentry/templates/sentry/projects/plugins/configure.html
@@ -79,16 +79,4 @@
             </div>
         </div>
     </div>
-
-    {% if react_plugin %}
-        <script>
-        $(function(){
-            ReactDOM.render(React.createFactory(Sentry.PluginConfig)({
-                project: {% serialize project %},
-                organization: {% serialize organization %},
-                data: {% serialize react_plugin %}
-            }), document.getElementById('issue_plugins'));
-        });
-        </script>
-    {% endif %}
 {% endblock %}
diff --git a/src/sentry/web/frontend/project_plugin_configure.py b/src/sentry/web/frontend/project_plugin_configure.py
index 9769acc9a4..fc812198a3 100644
--- a/src/sentry/web/frontend/project_plugin_configure.py
+++ b/src/sentry/web/frontend/project_plugin_configure.py
@@ -3,8 +3,7 @@ from __future__ import absolute_import
 from django.core.urlresolvers import reverse
 from django.http import HttpResponse
 
-from sentry.api import client
-from sentry.plugins import plugins, IssueTrackingPlugin2, NotificationPlugin
+from sentry.plugins import plugins
 from sentry.web.frontend.base import ProjectView
 
 
@@ -20,20 +19,10 @@ class ProjectPluginConfigureView(ProjectView):
         if not plugin.can_configure_for_project(project):
             return self.redirect(reverse('sentry-manage-project', args=[project.organization.slug, project.slug]))
 
-        react_plugin = None
         is_enabled = plugin.is_enabled(project)
-        if isinstance(plugin, IssueTrackingPlugin2) or isinstance(plugin, NotificationPlugin):
-            view = None
-            response = client.get('/projects/{}/{}/plugins/{}/'.format(
-                organization.slug,
-                project.slug,
-                slug,
-            ), request=request)
-            react_plugin = response.data
-        else:
-            view = plugin.configure(request=request, project=project)
-            if isinstance(view, HttpResponse):
-                return view
+        view = plugin.configure(request=request, project=project)
+        if isinstance(view, HttpResponse):
+            return view
 
         context = {
             'page': 'plugin',
@@ -41,7 +30,6 @@ class ProjectPluginConfigureView(ProjectView):
             'view': view,
             'plugin': plugin,
             'plugin_is_enabled': is_enabled,
-            'react_plugin': react_plugin,
         }
 
         return self.respond('sentry/projects/plugins/configure.html', context)
