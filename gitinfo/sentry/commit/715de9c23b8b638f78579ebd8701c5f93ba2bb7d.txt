commit 715de9c23b8b638f78579ebd8701c5f93ba2bb7d
Author: Armin Ronacher <armin.ronacher@active-4.com>
Date:   Fri Jul 1 16:23:32 2016 +0300

    Convert boolean tags to yes/no

diff --git a/src/sentry/interfaces/contexts.py b/src/sentry/interfaces/contexts.py
index 091d1607ba..263126602e 100644
--- a/src/sentry/interfaces/contexts.py
+++ b/src/sentry/interfaces/contexts.py
@@ -8,6 +8,8 @@ sentry.interfaces.contexts
 
 from __future__ import absolute_import
 
+import string
+
 from django.utils.encoding import force_text
 
 from sentry.utils.safe import trim
@@ -21,6 +23,19 @@ EMPTY_VALUES = frozenset(('', None))
 context_types = {}
 
 
+class _IndexFormatter(string.Formatter):
+
+    def format_field(self, value, format_spec):
+        if not format_spec and isinstance(value, bool):
+            return value and 'yes' or 'no'
+        return string.Formatter.format_field(self, value, format_spec)
+
+
+def format_index_expr(format_string, data):
+    return unicode(_IndexFormatter().vformat(
+        unicode(format_string), (), data).strip())
+
+
 def contexttype(name):
     def decorator(cls):
         cls.type = name
@@ -49,7 +64,7 @@ class ContextType(object):
         if self.indexed_fields:
             for field, f_string in self.indexed_fields.iteritems():
                 try:
-                    value = unicode(f_string).format(**self.data).strip()
+                    value = format_index_expr(f_string, self.data)
                 except KeyError:
                     continue
                 if value:
diff --git a/tests/sentry/interfaces/test_contexts.py b/tests/sentry/interfaces/test_contexts.py
index bbaa99bd87..6246f13e5c 100644
--- a/tests/sentry/interfaces/test_contexts.py
+++ b/tests/sentry/interfaces/test_contexts.py
@@ -14,17 +14,20 @@ class ContextsTest(TestCase):
             'os': {
                 'name': 'Windows',
                 'version': '95',
+                'rooted': True,
             },
         })
         assert sorted(ctx.iter_tags()) == [
             ('os', 'Windows 95'),
             ('os.name', 'Windows'),
+            ('os.rooted', 'yes'),
         ]
         assert ctx.to_json() == {
             'os': {
                 'type': 'os',
                 'name': 'Windows',
                 'version': '95',
+                'rooted': True,
             }
         }
 
