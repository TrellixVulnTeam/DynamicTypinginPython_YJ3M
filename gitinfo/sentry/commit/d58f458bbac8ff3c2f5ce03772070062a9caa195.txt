commit d58f458bbac8ff3c2f5ce03772070062a9caa195
Author: Mark Story <mark@mark-story.com>
Date:   Mon Jan 7 12:03:12 2019 -0500

    fix(csp) Add missing Content-security-policy types (#11367)
    
    We were missing a few of the Level 3 content-security-policy types. This
    adds the missing ones from https://www.w3.org/TR/CSP3/#csp-directives
    
    Add human friendly messages for new script/style CSP errors.

diff --git a/src/sentry/interfaces/schemas.py b/src/sentry/interfaces/schemas.py
index 98a180e829..8288395213 100644
--- a/src/sentry/interfaces/schemas.py
+++ b/src/sentry/interfaces/schemas.py
@@ -471,16 +471,21 @@ CSP_SCHEMA = {
                         'font-src',
                         'form-action',
                         'frame-ancestors',
+                        'frame-src',
                         'img-src',
                         'manifest-src',
                         'media-src',
                         'object-src',
                         'plugin-types',
+                        'prefetch-src',
                         'referrer',
                         'script-src',
+                        'script-src-attr',
+                        'script-src-elem',
                         'style-src',
+                        'style-src-elem',
+                        'style-src-attr',
                         'upgrade-insecure-requests',
-                        'frame-src',
                         'worker-src',
                         # 'sandbox', # Unsupported
                     ],
diff --git a/src/sentry/interfaces/security.py b/src/sentry/interfaces/security.py
index d2aa3d2f11..35512e1c8b 100644
--- a/src/sentry/interfaces/security.py
+++ b/src/sentry/interfaces/security.py
@@ -369,7 +369,11 @@ class Csp(SecurityReport):
             'media-src': (u"Blocked 'media' from '{uri}'", "Blocked inline 'media'"),
             'object-src': (u"Blocked 'object' from '{uri}'", "Blocked inline 'object'"),
             'script-src': (u"Blocked 'script' from '{uri}'", "Blocked unsafe (eval() or inline) 'script'"),
+            'script-src-elem': (u"Blocked 'script' from '{uri}'", "Blocked unsafe 'script' element"),
+            'script-src-attr': (u"Blocked inline script attribute from '{uri}'", "Blocked inline script attribute"),
             'style-src': (u"Blocked 'style' from '{uri}'", "Blocked inline 'style'"),
+            'style-src-elem': (u"Blocked 'style' from '{uri}'", "Blocked 'style' or 'link' element"),
+            'style-src-attr': (u"Blocked style attribute from '{uri}'", "Blocked style attribute"),
             'unsafe-inline': (None, u"Blocked unsafe inline 'script'"),
             'unsafe-eval': (None, u"Blocked unsafe eval() 'script'"),
         }
diff --git a/src/sentry/static/sentry/app/components/events/interfaces/cspHelp.jsx b/src/sentry/static/sentry/app/components/events/interfaces/cspHelp.jsx
index 157d80022b..693537da5c 100644
--- a/src/sentry/static/sentry/app/components/events/interfaces/cspHelp.jsx
+++ b/src/sentry/static/sentry/app/components/events/interfaces/cspHelp.jsx
@@ -46,6 +46,10 @@ may embed a page using the <code>&lt;frame&gt;</code> and
 The <code>img-src</code> directive specifies valid sources of images and
 favicons.`
   ),
+  'prefetch-src': t(
+    `The <code>prefetch-src</code> directive restricts the URLs
+    from which resources may be prefetched or prerendered.`
+  ),
   'manifest-src': t(
     `
 The <code>manifest-src</code> directive specifies which manifest can be
@@ -81,6 +85,14 @@ for JavaScript. When either the <code>script-src</code> or the
 <code>eval()</code> are disabled unless you specify 'unsafe-inline'
 and 'unsafe-eval', respectively.`
   ),
+  'script-src-elem': t(
+    `The <code>script-src-elem</code> directive applies to all script requests
+    and element contents. It does not apply to scripts defined in attributes.`
+  ),
+  'script-src-attr': t(
+    `The <code>script-src-attr</code> directive applies to event handlers and, if present,
+    it will override the <code>script-src</code> directive for relevant checks.`
+  ),
   'style-src': t(
     `
 The <code>style-src</code> directive specifies valid sources for
@@ -92,9 +104,16 @@ requested or loaded. When either the <code>style-src</code> or the
 <code>&lt;style&gt;</code> element and HTML style attributes are disabled
 unless you specify 'unsafe-inline'.`
   ),
+  'style-src-elem': t(
+    `The <code>style-src-elem</code> directive applies to all styles except
+    those defined in inline attributes.`
+  ),
+  'style-src-attr': t(
+    `The <code>style-src-attr</code> directive applies to inline style attributes and, if present,
+    it will override the <code>style-src</code> directive for relevant checks.`
+  ),
   'frame-src': t(
-    `
-The <code>frame-src</code> directive specifies valid sources for nested
+    `The <code>frame-src</code> directive specifies valid sources for nested
 browsing contexts loading using elements such as
 <code>&lt;frame&gt;</code> and <code>&lt;iframe&gt;</code>.`
   ),
diff --git a/tests/sentry/interfaces/test_security.py b/tests/sentry/interfaces/test_security.py
index 7e80cfe166..1cb98c3003 100644
--- a/tests/sentry/interfaces/test_security.py
+++ b/tests/sentry/interfaces/test_security.py
@@ -227,6 +227,24 @@ class CspTest(TestCase):
         )
         assert result.get_message() == "Blocked 'script' from 'data:'"
 
+        result = Csp.to_python(
+            dict(
+                document_uri='http://example.com/foo',
+                effective_directive='style-src-elem',
+                blocked_uri='http://fonts.google.com/foo',
+            )
+        )
+        assert result.get_message() == "Blocked 'style' from 'fonts.google.com'"
+
+        result = Csp.to_python(
+            dict(
+                document_uri='http://example.com/foo',
+                effective_directive='script-src-elem',
+                blocked_uri='http://cdn.ajaxapis.com/foo',
+            )
+        )
+        assert result.get_message() == "Blocked 'script' from 'cdn.ajaxapis.com'"
+
     def test_real_report(self):
         raw_report = {
             "csp-report": {
