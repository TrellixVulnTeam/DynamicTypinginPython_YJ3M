commit 147569048fb4469d8f0d74e506b928bad98e7ebe
Author: Lyn Nagara <lyn.nagara@gmail.com>
Date:   Thu Nov 21 11:22:25 2019 -0800

    ref: Remove deprecated event accessors (#15675)
    
    No longer used anywhere

diff --git a/src/sentry/models/event.py b/src/sentry/models/event.py
index 011880e9fa..3ebf5ea2ca 100644
--- a/src/sentry/models/event.py
+++ b/src/sentry/models/event.py
@@ -2,7 +2,6 @@ from __future__ import absolute_import
 
 import six
 import string
-import warnings
 import pytz
 
 from collections import OrderedDict
@@ -384,41 +383,6 @@ class EventCommon(object):
         else:
             return None
 
-    # deprecated accessors
-
-    @property
-    def logger(self):
-        warnings.warn("Event.logger is deprecated. Use Event.tags instead.", DeprecationWarning)
-        return self.get_tag("logger")
-
-    @property
-    def site(self):
-        warnings.warn("Event.site is deprecated. Use Event.tags instead.", DeprecationWarning)
-        return self.get_tag("site")
-
-    @property
-    def server_name(self):
-        warnings.warn(
-            "Event.server_name is deprecated. Use Event.tags instead.", DeprecationWarning
-        )
-        return self.get_tag("server_name")
-
-    @property
-    def checksum(self):
-        warnings.warn("Event.checksum is no longer used", DeprecationWarning)
-        return ""
-
-    def error(self):  # TODO why is this not a property?
-        warnings.warn("Event.error is deprecated, use Event.title", DeprecationWarning)
-        return self.title
-
-    error.short_description = _("error")
-
-    @property
-    def message_short(self):
-        warnings.warn("Event.message_short is deprecated, use Event.title", DeprecationWarning)
-        return self.title
-
 
 class SnubaEvent(EventCommon):
     """
diff --git a/tests/sentry/integrations/gitlab/test_issues.py b/tests/sentry/integrations/gitlab/test_issues.py
index 41b64b31bb..db4390c1ad 100644
--- a/tests/sentry/integrations/gitlab/test_issues.py
+++ b/tests/sentry/integrations/gitlab/test_issues.py
@@ -75,7 +75,7 @@ class GitlabIssuesTest(GitLabTestCase):
             {
                 "name": "title",
                 "label": "Title",
-                "default": self.group.get_latest_event().error(),
+                "default": self.group.get_latest_event().title,
                 "type": "string",
                 "required": True,
             },
@@ -255,7 +255,7 @@ class GitlabIssuesTest(GitLabTestCase):
             {
                 "name": "title",
                 "label": "Title",
-                "default": self.group.get_latest_event().error(),
+                "default": self.group.get_latest_event().title,
                 "type": "string",
                 "required": True,
             },
@@ -319,7 +319,7 @@ class GitlabIssuesTest(GitLabTestCase):
             {
                 "name": "title",
                 "label": "Title",
-                "default": self.group.get_latest_event().error(),
+                "default": self.group.get_latest_event().title,
                 "type": "string",
                 "required": True,
             },
@@ -364,7 +364,7 @@ class GitlabIssuesTest(GitLabTestCase):
             {
                 "name": "title",
                 "label": "Title",
-                "default": self.group.get_latest_event().error(),
+                "default": self.group.get_latest_event().title,
                 "type": "string",
                 "required": True,
             },
diff --git a/tests/sentry/models/test_event.py b/tests/sentry/models/test_event.py
index 7a725d0dfa..7111e20157 100644
--- a/tests/sentry/models/test_event.py
+++ b/tests/sentry/models/test_event.py
@@ -11,16 +11,6 @@ from sentry.testutils.factories import Factories
 
 
 class EventTest(TestCase):
-    def test_legacy_tags(self):
-        event = self.create_event(
-            data={"tags": [("logger", "foobar"), ("site", "foo"), ("server_name", "bar")]}
-        )
-        assert event.logger == "foobar"
-        assert event.level == event.group.level
-        assert event.site == "foo"
-        assert event.server_name == "bar"
-        assert event.culprit == event.group.culprit
-
     def test_pickling_compat(self):
         event = self.create_event(
             data={"tags": [("logger", "foobar"), ("site", "foo"), ("server_name", "bar")]}
