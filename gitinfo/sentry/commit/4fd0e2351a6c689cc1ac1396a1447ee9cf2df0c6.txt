commit 4fd0e2351a6c689cc1ac1396a1447ee9cf2df0c6
Author: MeredithAnya <meredith.a.heller@gmail.com>
Date:   Wed Sep 5 10:41:52 2018 -0700

    fix(integrations): Add separate validate repo method for ghe (#9605)
    
    * fix(integrations): Add separate validate repo method for ghe

diff --git a/src/sentry/integrations/github/repository.py b/src/sentry/integrations/github/repository.py
index d050a8832e..d4cb0c8e38 100644
--- a/src/sentry/integrations/github/repository.py
+++ b/src/sentry/integrations/github/repository.py
@@ -23,6 +23,9 @@ class GitHubRepositoryProvider(providers.IntegrationRepositoryProvider):
 
         try:
             # make sure installation has access to this specific repo
+            # use hooks endpoint since we explicity ask for those permissions
+            # when installing the app (commits can be accessed for public repos)
+            # https://developer.github.com/v3/repos/hooks/#list-hooks
             client.repo_hooks(repo)
         except ApiError as e:
             raise IntegrationError('You must grant Sentry access to {}'.format(repo))
diff --git a/src/sentry/integrations/github_enterprise/repository.py b/src/sentry/integrations/github_enterprise/repository.py
index 8bf48aff23..f2dfa6fca2 100644
--- a/src/sentry/integrations/github_enterprise/repository.py
+++ b/src/sentry/integrations/github_enterprise/repository.py
@@ -3,6 +3,7 @@ from __future__ import absolute_import
 import logging
 
 from sentry.models import Integration
+from sentry.integrations.exceptions import ApiError, IntegrationError
 from sentry.integrations.github.repository import GitHubRepositoryProvider
 
 
@@ -14,6 +15,20 @@ class GitHubEnterpriseRepositoryProvider(GitHubRepositoryProvider):
     logger = logging.getLogger('sentry.plugins.github_enterprise')
     repo_provider = 'github_enterprise'
 
+    def _validate_repo(self, client, installation, repo):
+        try:
+            repo_data = client.get_repo(repo)
+        except Exception as e:
+            installation.raise_error(e)
+
+        try:
+            # make sure installation has access to this specific repo
+            client.get_commits(repo)
+        except ApiError as e:
+            raise IntegrationError(u'You must grant Sentry access to {}'.format(repo))
+
+        return repo_data
+
     def create_repository(self, organization, data):
         integration = Integration.objects.get(
             id=data['integration_id'], provider=self.repo_provider)
