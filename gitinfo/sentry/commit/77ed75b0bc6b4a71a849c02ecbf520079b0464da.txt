commit 77ed75b0bc6b4a71a849c02ecbf520079b0464da
Author: David Cramer <dcramer@gmail.com>
Date:   Sat Dec 28 01:38:14 2013 -0800

    Move mail subject customization into notifications tab

diff --git a/src/sentry/templates/sentry/projects/notifications.html b/src/sentry/templates/sentry/projects/notifications.html
index 48d316e7e6..06caea6894 100644
--- a/src/sentry/templates/sentry/projects/notifications.html
+++ b/src/sentry/templates/sentry/projects/notifications.html
@@ -19,6 +19,16 @@
 
         <p>{% trans "Sentry will automatically notify you whenever an event is first seen, or its state changes from resolved to unresolved." %}</p>
 
+        <div class="page-header">
+            <h3>{% trans "General" %}</h3>
+        </div>
+
+        {{ general_form|as_crispy_errors }}
+
+        {% for field in general_form %}
+            {{ field|as_crispy_field }}
+        {% endfor %}
+
         <div class="page-header">
             <h3>{% trans "Alerts" %}</h3>
         </div>
diff --git a/src/sentry/web/forms/projects.py b/src/sentry/web/forms/projects.py
index 58baaac216..d3e4893996 100644
--- a/src/sentry/web/forms/projects.py
+++ b/src/sentry/web/forms/projects.py
@@ -111,11 +111,10 @@ class EditProjectForm(BaseProjectForm):
         help_text=_('Separate multiple entries with a newline.'))
     resolve_age = RangeField(help_text=_('Treat an event as resolved if it hasn\'t been seen for this amount of time.'),
         required=False, min_value=0, max_value=168, step_value=1)
-    mail_subject_prefix = forms.CharField(label=_('Mail Subject Prefix'), required=False)
     owner = UserField(required=False)
 
     class Meta:
-        fields = ('name', 'platform', 'public', 'team', 'owner', 'slug', 'mail_subject_prefix')
+        fields = ('name', 'platform', 'public', 'team', 'owner', 'slug')
         model = Project
 
     def __init__(self, request, team_list, data, instance, *args, **kwargs):
@@ -155,6 +154,12 @@ class AlertSettingsForm(forms.Form):
         help_text=_('Generate an alert only when an event is seen more than this many times during the interval.'),)
 
 
+class NotificationSettingsForm(forms.Form):
+    subject_prefix = forms.CharField(
+        label=_('Mail Subject Prefix'), required=False,
+        help_text=_('Choose a custom prefix for emails from this project.'))
+
+
 class NotificationTagValuesForm(forms.Form):
     values = forms.CharField(required=False)
 
diff --git a/src/sentry/web/frontend/projects/notifications.py b/src/sentry/web/frontend/projects/notifications.py
index 5ea8228e43..806d74844d 100644
--- a/src/sentry/web/frontend/projects/notifications.py
+++ b/src/sentry/web/frontend/projects/notifications.py
@@ -5,6 +5,7 @@ sentry.web.frontend.projects.notifications
 :copyright: (c) 2012 by the Sentry Team, see AUTHORS for more details.
 :license: BSD, see LICENSE for more details.
 """
+from django.conf import settings
 from django.contrib import messages
 from django.core.context_processors import csrf
 from django.core.urlresolvers import reverse
@@ -16,7 +17,7 @@ from sentry.constants import MEMBER_OWNER, DEFAULT_ALERT_PROJECT_THRESHOLD
 from sentry.models import TagKey
 from sentry.web.decorators import has_access
 from sentry.web.forms.projects import (
-    AlertSettingsForm, NotificationTagValuesForm
+    AlertSettingsForm, NotificationTagValuesForm, NotificationSettingsForm
 )
 from sentry.web.helpers import render_to_response
 
@@ -26,6 +27,15 @@ from sentry.web.helpers import render_to_response
 def notification_settings(request, team, project):
     initial = project.get_option('notifcation:tags', {})
 
+    general_form = NotificationSettingsForm(
+        data=request.POST or None,
+        prefix='general',
+        initial={
+            'subject_prefix': project.get_option(
+                'mail:subject_prefix', settings.EMAIL_SUBJECT_PREFIX),
+        },
+    )
+
     tag_forms = []
     for tag in TagKey.objects.all_keys(project):
         tag_forms.append(NotificationTagValuesForm(
@@ -50,16 +60,23 @@ def notification_settings(request, team, project):
         }
     )
 
-    if request.method == 'POST' and all(f.is_valid() for f in tag_forms) and alert_form.is_valid():
+    all_forms = [
+        alert_form,
+        general_form,
+    ] + tag_forms
+
+    if request.method == 'POST' and all(f.is_valid() for f in all_forms):
         tags = {}
-        for form in tag_forms:
-            values = form.cleaned_data['values']
+        for t_form in tag_forms:
+            values = t_form.cleaned_data['values']
             if values:
-                tags[form.tag] = values
-        project.update_option('notifcation:tags', tags)
+                tags[t_form.tag] = values
 
+        project.update_option('notifcation:tags', tags)
         project.update_option('alert:threshold', (
             alert_form.cleaned_data['pct_threshold'], alert_form.cleaned_data['min_events']))
+        project.update_option(
+            'mail:subject_prefix', general_form.cleaned_data['subject_prefix'])
 
         messages.add_message(
             request, messages.SUCCESS,
@@ -71,6 +88,7 @@ def notification_settings(request, team, project):
     context.update({
         'team': team,
         'project': project,
+        'general_form': general_form,
         'alert_form': alert_form,
         'tag_forms': tag_forms,
         'page': 'notifications',
diff --git a/src/sentry/web/frontend/projects/settings.py b/src/sentry/web/frontend/projects/settings.py
index 2a5add2d89..b12ba6b1f5 100644
--- a/src/sentry/web/frontend/projects/settings.py
+++ b/src/sentry/web/frontend/projects/settings.py
@@ -5,7 +5,6 @@ sentry.web.frontend.projects.settings
 :copyright: (c) 2012 by the Sentry Team, see AUTHORS for more details.
 :license: BSD, see LICENSE for more details.
 """
-from django.conf import settings
 from django.contrib import messages
 from django.core.context_processors import csrf
 from django.core.urlresolvers import reverse
@@ -35,14 +34,12 @@ def manage_project(request, team, project):
         'origins': '\n'.join(project.get_option('sentry:origins', None) or []),
         'owner': project.owner,
         'resolve_age': int(project.get_option('sentry:resolve_age', 0)),
-        'mail_subject_prefix': project.get_option('mail:subject_prefix', settings.EMAIL_SUBJECT_PREFIX),
     })
 
     if form.is_valid():
         project = form.save()
         project.update_option('sentry:origins', form.cleaned_data.get('origins') or [])
         project.update_option('sentry:resolve_age', form.cleaned_data.get('resolve_age'))
-        project.update_option('mail:subject_prefix', form.cleaned_data.get('mail_subject_prefix'))
         messages.add_message(
             request, messages.SUCCESS,
             _('Changes to your project were saved.'))
