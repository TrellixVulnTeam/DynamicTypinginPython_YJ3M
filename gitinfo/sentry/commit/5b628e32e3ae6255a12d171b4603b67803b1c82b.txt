commit 5b628e32e3ae6255a12d171b4603b67803b1c82b
Author: Max Bittker <maxbittker@gmail.com>
Date:   Wed Aug 9 19:35:49 2017 -0400

    new Platformpicker in project install  (#5837)
    
    * use platformpicker in old flow
    
    * fix filter behavior for tabs and case sensitivity

diff --git a/src/sentry/static/sentry/app/views/onboarding/onboarding.less b/src/sentry/static/sentry/app/views/onboarding/onboarding.less
index 232e777373..45739d80e0 100644
--- a/src/sentry/static/sentry/app/views/onboarding/onboarding.less
+++ b/src/sentry/static/sentry/app/views/onboarding/onboarding.less
@@ -159,7 +159,66 @@
     position: absolute;
   }
 
-  .platform-picker{
+  .project-name{
+    background: #fff;
+    box-shadow: 0 -1px 0 rgba(0,0,0, .1);
+    padding: 20px 0;
+    position: sticky;
+    bottom: 0;
+    .clearfix;
+
+    .platform-tile{
+      display: inline-block;
+      vertical-align: middle;
+    }
+
+    .project-name-wrapper {
+      .form-control;
+      position: relative;
+      padding-left: 44px;
+      width: 300px;
+      float: left;
+
+      &.required{
+        border: 1px #e03e2f solid;
+      }
+
+      input {
+        background: none;
+        border: 0;
+        display: block;
+        width: 100%;
+        font-weight: 600;
+
+        &:focus {
+          outline: none;
+        }
+
+        &::placeholder {
+          color: @50;
+        }
+      }
+
+      .platform-tile {
+        position: absolute;
+        left: 6px;
+        top: 3px;
+        .platformicon {
+          color: @40 !important;
+        }
+      }
+    }
+  }
+
+  .install .install-content {
+    padding-left: 15px; // Fix .row negative margin
+  }
+}
+
+
+.platform-picker{
+    border-bottom: 1px solid @trim;
+
     .nav-tabs {
       border-bottom: 1px solid @trim;
       margin: 0 0 15px;
@@ -237,59 +296,3 @@
       line-height: 1.2;
     }
   }
-
-  .project-name{
-    background: #fff;
-    box-shadow: 0 -1px 0 rgba(0,0,0, .1);
-    padding: 20px 0;
-    position: sticky;
-    bottom: 0;
-    .clearfix;
-
-    .platform-tile{
-      display: inline-block;
-      vertical-align: middle;
-    }
-
-    .project-name-wrapper {
-      .form-control;
-      position: relative;
-      padding-left: 44px;
-      width: 300px;
-      float: left;
-
-      &.required{
-        border: 1px #e03e2f solid;
-      }
-
-      input {
-        background: none;
-        border: 0;
-        display: block;
-        width: 100%;
-        font-weight: 600;
-
-        &:focus {
-          outline: none;
-        }
-
-        &::placeholder {
-          color: @50;
-        }
-      }
-
-      .platform-tile {
-        position: absolute;
-        left: 6px;
-        top: 3px;
-        .platformicon {
-          color: @40 !important;
-        }
-      }
-    }
-  }
-
-  .install .install-content {
-    padding-left: 15px; // Fix .row negative margin
-  }
-}
diff --git a/src/sentry/static/sentry/app/views/onboarding/project/index.jsx b/src/sentry/static/sentry/app/views/onboarding/project/index.jsx
index 68a3e673e2..85ec5aa72c 100644
--- a/src/sentry/static/sentry/app/views/onboarding/project/index.jsx
+++ b/src/sentry/static/sentry/app/views/onboarding/project/index.jsx
@@ -7,11 +7,11 @@ import {t} from '../../../locale';
 
 const Project = React.createClass({
   propTypes: {
-    next: React.PropTypes.func.isRequired,
-    setPlatform: React.PropTypes.func.isRequired,
-    platform: React.PropTypes.string.isRequired,
-    setName: React.PropTypes.func.isRequired,
-    name: React.PropTypes.string.isRequired
+    next: React.PropTypes.func,
+    setPlatform: React.PropTypes.func,
+    platform: React.PropTypes.string,
+    setName: React.PropTypes.func,
+    name: React.PropTypes.string
   },
 
   getInitialState() {
@@ -35,7 +35,7 @@ const Project = React.createClass({
     return (
       <div className="onboarding-info">
         <h2>{t('Choose a language or framework')}</h2>
-        <PlatformPicker {...this.props} />
+        <PlatformPicker {...this.props} showOther={true} />
         <div className="project-name client-platform">
           <h4>{t('Give your project a name') + ':'}</h4>
           <div
diff --git a/src/sentry/static/sentry/app/views/onboarding/project/platformpicker.jsx b/src/sentry/static/sentry/app/views/onboarding/project/platformpicker.jsx
index 212ef98132..7f7fd7d113 100644
--- a/src/sentry/static/sentry/app/views/onboarding/project/platformpicker.jsx
+++ b/src/sentry/static/sentry/app/views/onboarding/project/platformpicker.jsx
@@ -11,7 +11,12 @@ const categoryList = Object.keys(categoryLists).concat('All');
 const PlatformPicker = React.createClass({
   propTypes: {
     setPlatform: React.PropTypes.func.isRequired,
-    platform: React.PropTypes.string
+    platform: React.PropTypes.string,
+    showOther: React.PropTypes.bool
+  },
+
+  getDefaultProps() {
+    return {showOther: true};
   },
 
   getInitialState() {
@@ -28,14 +33,18 @@ const PlatformPicker = React.createClass({
       platform => tab === 'All' || categoryLists[tab].includes(platform.id)
     );
 
-    let subsetMatch = ({id}) => id.includes(this.state.filter);
+    let subsetMatch = ({id}) => id.includes(this.state.filter.toLowerCase());
 
     let filtered = tabSubset.filter(subsetMatch);
 
-    if (!filtered.length) {
+    if (this.state.filter) {
       filtered = flattenedPlatforms.filter(subsetMatch);
     }
 
+    if (!this.props.showOther) {
+      filtered = filtered.filter(({id}) => id !== 'other');
+    }
+
     if (!filtered.length) {
       return (
         <p>
@@ -67,6 +76,7 @@ const PlatformPicker = React.createClass({
   },
 
   render() {
+    let {filter} = this.state;
     return (
       <div className="platform-picker">
         <ul className="nav nav-tabs">
@@ -75,6 +85,7 @@ const PlatformPicker = React.createClass({
               <span className="icon icon-search" />
               <input
                 type="text"
+                value={this.state.filter}
                 className="platform-filter"
                 label="Filter"
                 placeholder="Filter"
@@ -87,11 +98,12 @@ const PlatformPicker = React.createClass({
               <ListLink
                 key={categoryName}
                 onClick={e => {
-                  this.setState({tab: categoryName});
+                  this.setState({tab: categoryName, filter: ''});
                   e.preventDefault();
                 }}
                 to={''}
-                isActive={() => categoryName === this.state.tab}>
+                isActive={() =>
+                  (filter ? categoryName === 'All' : categoryName === this.state.tab)}>
                 {categoryName}
               </ListLink>
             );
diff --git a/src/sentry/static/sentry/app/views/projectInstall/overview.jsx b/src/sentry/static/sentry/app/views/projectInstall/overview.jsx
index 4651ac2c26..136f12e339 100644
--- a/src/sentry/static/sentry/app/views/projectInstall/overview.jsx
+++ b/src/sentry/static/sentry/app/views/projectInstall/overview.jsx
@@ -1,7 +1,9 @@
 import React from 'react';
-import {Link} from 'react-router';
+import {browserHistory} from 'react-router';
 
 import AutoSelectText from '../../components/autoSelectText';
+import PlatformPicker from '../onboarding/project/platformpicker';
+
 import {t, tct} from '../../locale';
 
 const ProjectInstallOverview = React.createClass({
@@ -19,20 +21,15 @@ const ProjectInstallOverview = React.createClass({
     return location.href.indexOf('getting-started') > 0;
   },
 
-  getIntegrationLink(root, platform, display) {
+  redirectToDocs(platform) {
     let {orgId, projectId} = this.props.params;
     let rootUrl = `/${orgId}/${projectId}/settings/install`;
+
     if (this.isGettingStarted()) {
       rootUrl = `/${orgId}/${projectId}/getting-started`;
     }
-    return (
-      <li className={`${root} ${platform}`} key={platform}>
-        <span className={`platformicon platformicon-${platform}`} />
-        <Link to={`${rootUrl}/${platform}/`}>
-          {display}
-        </Link>
-      </li>
-    );
+
+    browserHistory.push(`${rootUrl}/${platform}/`);
   },
 
   toggleDsn() {
@@ -40,21 +37,11 @@ const ProjectInstallOverview = React.createClass({
   },
 
   render() {
-    let data = this.state.data;
-    let frameworkList = [];
-    let languageList = [];
-    data.platforms.forEach(platform => {
-      platform.integrations.forEach(integration => {
-        if (integration.type === 'framework') frameworkList.push([platform, integration]);
-        else if (integration.type === 'language')
-          languageList.push([platform, integration]);
-      });
-    });
+    let {data} = this.state;
 
     return (
       <div>
         <h1>{t('Configure your application')}</h1>
-
         <p>
           {t(
             'Get started by selecting the platform or language that powers your application.'
@@ -63,8 +50,6 @@ const ProjectInstallOverview = React.createClass({
 
         {this.state.showDsn
           ? <div>
-              <h3>{t('DSN')}</h3>
-
               <div className="control-group">
                 <label>{t('DSN')}</label>
                 <AutoSelectText className="form-control disabled">
@@ -89,35 +74,7 @@ const ProjectInstallOverview = React.createClass({
                 })}
               </small>
             </p>}
-
-        <h3>{t('Popular')}</h3>
-
-        <ul className="client-platform-list">
-          {this.getIntegrationLink('javascript', 'javascript', 'JavaScript')}
-          {this.getIntegrationLink('python', 'python-django', 'Django')}
-          {this.getIntegrationLink('ruby', 'ruby-rails', 'Rails')}
-          {this.getIntegrationLink('node', 'node-express', 'Express')}
-          {this.getIntegrationLink('php', 'php-laravel', 'Laravel')}
-          {this.getIntegrationLink('php', 'php-symfony2', 'Symfony2')}
-          {this.getIntegrationLink('java', 'java-log4j', 'Log4j')}
-        </ul>
-
-        <h3>{t('Frameworks')}</h3>
-        <ul className="client-platform-list">
-          {frameworkList.map(item => {
-            let [platform, integration] = item;
-            return this.getIntegrationLink(platform.id, integration.id, integration.name);
-          })}
-        </ul>
-
-        <h3>{t('Languages')}</h3>
-        <ul className="client-platform-list">
-          {languageList.map(item => {
-            let [platform, integration] = item;
-            return this.getIntegrationLink(platform.id, integration.id, integration.name);
-          })}
-        </ul>
-
+        <PlatformPicker setPlatform={this.redirectToDocs} showOther={false} />
         <p>
           {tct(
             `
diff --git a/tests/js/spec/views/onboarding/__snapshots__/index.spec.jsx.snap b/tests/js/spec/views/onboarding/__snapshots__/index.spec.jsx.snap
index 93c77e8148..d1d9d687b1 100644
--- a/tests/js/spec/views/onboarding/__snapshots__/index.spec.jsx.snap
+++ b/tests/js/spec/views/onboarding/__snapshots__/index.spec.jsx.snap
@@ -107,6 +107,7 @@ exports[`OnboardingWizard render() should fill in project name if its empty when
                 platform="csharp"
                 setName={[Function]}
                 setPlatform={[Function]}
+                showOther={true}
               >
                 <div
                   className="platform-picker"
@@ -134,6 +135,7 @@ exports[`OnboardingWizard render() should fill in project name if its empty when
                           onChange={[Function]}
                           placeholder="Filter"
                           type="text"
+                          value=""
                         />
                       </div>
                     </li>
diff --git a/tests/js/spec/views/onboarding/project/__snapshots__/index.spec.jsx.snap b/tests/js/spec/views/onboarding/project/__snapshots__/index.spec.jsx.snap
index 0a9b0d0360..2c0eb52211 100644
--- a/tests/js/spec/views/onboarding/project/__snapshots__/index.spec.jsx.snap
+++ b/tests/js/spec/views/onboarding/project/__snapshots__/index.spec.jsx.snap
@@ -23,6 +23,7 @@ exports[`Project render() should render NotFound if no matching organization 1`]
     platform=""
     setName={[Function]}
     setPlatform={[Function]}
+    showOther={true}
   />
   <div
     className="project-name client-platform"
@@ -97,6 +98,7 @@ exports[`Project render() should set required class on empty submit 1`] = `
       platform=""
       setName={[Function]}
       setPlatform={[Function]}
+      showOther={true}
     >
       <div
         className="platform-picker"
@@ -124,6 +126,7 @@ exports[`Project render() should set required class on empty submit 1`] = `
                 onChange={[Function]}
                 placeholder="Filter"
                 type="text"
+                value=""
               />
             </div>
           </li>
diff --git a/tests/js/spec/views/onboarding/project/__snapshots__/platformpicker.spec.jsx.snap b/tests/js/spec/views/onboarding/project/__snapshots__/platformpicker.spec.jsx.snap
index f7c99f3c86..681fc596de 100644
--- a/tests/js/spec/views/onboarding/project/__snapshots__/platformpicker.spec.jsx.snap
+++ b/tests/js/spec/views/onboarding/project/__snapshots__/platformpicker.spec.jsx.snap
@@ -27,6 +27,7 @@ exports[`PlatformPicker render() should only render Mobile platforms under Mobil
           onChange={[Function]}
           placeholder="Filter"
           type="text"
+          value=""
         />
       </div>
     </li>
@@ -130,6 +131,7 @@ exports[`PlatformPicker render() should render renderPlatformList with Python wh
           onChange={[Function]}
           placeholder="Filter"
           type="text"
+          value="py"
         />
       </div>
     </li>
@@ -258,6 +260,7 @@ exports[`PlatformPicker render() should render renderPlatformList with community
           onChange={[Function]}
           placeholder="Filter"
           type="text"
+          value="aaaaaa"
         />
       </div>
     </li>
@@ -329,6 +332,7 @@ exports[`PlatformPicker render() should update State.tab onClick when particular
     }
   }
   setPlatform={[Function]}
+  showOther={true}
 >
   <div
     className="platform-picker"
@@ -356,6 +360,7 @@ exports[`PlatformPicker render() should update State.tab onClick when particular
             onChange={[Function]}
             placeholder="Filter"
             type="text"
+            value=""
           />
         </div>
       </li>
