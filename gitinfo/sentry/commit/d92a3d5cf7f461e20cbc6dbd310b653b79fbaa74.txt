commit d92a3d5cf7f461e20cbc6dbd310b653b79fbaa74
Author: David Cramer <dcramer@gmail.com>
Date:   Thu Sep 18 19:42:21 2014 -0700

    Add resolve, delete, and bookmark actions

diff --git a/src/sentry/static/sentry/app/controllers/projectStream.js b/src/sentry/static/sentry/app/controllers/projectStream.js
index 44efe84f94..80bd3e9db4 100644
--- a/src/sentry/static/sentry/app/controllers/projectStream.js
+++ b/src/sentry/static/sentry/app/controllers/projectStream.js
@@ -3,6 +3,8 @@
 (function(){
   'use strict';
 
+  var ALL = -1;
+
   function getEndpoint(selectedProject, params) {
     if (typeof(params.status) === "undefined") {
       params.status = 'unresolved';
@@ -19,6 +21,12 @@
       $scope.cancel = function(){
         $modalInstance.dismiss('cancel');
       };
+      $scope.actionAll = function(){
+        $modalInstance.close(ALL);
+      };
+      $scope.actionSelected = function(){
+        $modalInstance.close(context.selectedGroupIds);
+      };
     }
   ]);
 
@@ -111,9 +119,7 @@
         $('.stream-actions .chk-select-all').prop('checked', allSelected);
       });
 
-      $('.stream-actions .action-resolve').click(function(e){
-        e.preventDefault();
-
+      function confirmAction(options){
         var selectedGroupIds = $.map($('.group-list .chk-select:checked'), function(item){
           return $(item).val();
         });
@@ -129,17 +135,84 @@
               return {
                 selectAllActive: $scope.selectAllActive,
                 selectedGroupIds: selectedGroupIds,
-                actionLabel: 'Resolve',
-                canActionAll: true
+                actionLabel: options.actionLabel,
+                canActionAll: options.canActionAll && $scope.selectAllActive || false
               };
             }
           }
+        }).result.then(options.action);
+      }
+
+      function actionGroups(options) {
+        var data = options.data || {},
+            url = options.url || '/api/0/projects/' + selectedProject.id + '/groups/';
+        if (options.ids !== ALL) {
+          url += '?id=' + options.ids.join('&id=');
+        }
+        $http({
+          url: url,
+          method: options.method || 'PUT',
+          data: data
+        });
+        $timeout(function(){
+          var groupList = [];
+          if (options.ids === ALL) {
+             groupList = $scope.groupList;
+          } else {
+            $.each(options.ids, function(id){
+              var item = groupList[groupList.indexOf({id: id})];
+              groupList.push(item);
+            });
+          }
+          $.each(groupList, function(item){
+            item.version = new Date().getTime() + 10;
+            $.extend(true, item, data);
+          });
+        });
+        $('.group-list .chk-select').prop('checked', false);
+      }
+
+      $('.stream-actions .action-resolve').click(function(e){
+        e.preventDefault();
+
+        confirmAction({
+          actionLabel: 'Resolve',
+          canActionAll: true,
+          action: function(selectedGroupIds){
+            actionGroups({
+              ids: selectedGroupIds,
+              data: {status: 'resolved'}
+            });
+          }
+        });
+      });
+
+      $('.stream-actions .action-delete').click(function(e){
+        e.preventDefault();
+
+        confirmAction({
+          actionLabel: 'Delete',
+          action: function(selectedGroupIds){
+            actionGroups({
+              ids: selectedGroupIds,
+              method: 'DELETE',
+            });
+          }
+        });
+      });
+
+      $('.stream-actions .action-bookmark').click(function(e){
+        e.preventDefault();
+
+        confirmAction({
+          actionLabel: 'Bookmark',
+          action: function(selectedGroupIds){
+            actionGroups({
+              ids: selectedGroupIds,
+              data: {isBookmarked: 1}
+            });
+          }
         });
-        // result.then(function(selectedItem) {
-        //   $scope.selected = selectedItem;
-        // }, function () {
-        //   console.log('Modal dismissed at: ' + new Date());
-        // });
       });
 
       $('.stream-actions .datepicker-box').click(function(e){
diff --git a/src/sentry/static/sentry/app/modules/collection.js b/src/sentry/static/sentry/app/modules/collection.js
index 68e60c8638..cabd2f825d 100644
--- a/src/sentry/static/sentry/app/modules/collection.js
+++ b/src/sentry/static/sentry/app/modules/collection.js
@@ -43,7 +43,7 @@
       Collection.prototype.constructor = Collection;
 
       Collection.prototype.add = function add(item) {
-        if (this._updateExisting(item)) {
+        if (this.update(item)) {
           return;
         }
 
@@ -86,7 +86,7 @@
         return -1;
       };
 
-      Collection.prototype._updateExisting = function _updateExisting(item) {
+      Collection.prototype.update = function update(item) {
         // returns true if the item already existed and was updated (as configured)
 
         var existing = this.indexOf(item);
diff --git a/src/sentry/static/sentry/app/templates/action-modal.html b/src/sentry/static/sentry/app/templates/action-modal.html
index 22a34f392f..310b323f93 100644
--- a/src/sentry/static/sentry/app/templates/action-modal.html
+++ b/src/sentry/static/sentry/app/templates/action-modal.html
@@ -13,6 +13,8 @@
   <button type="button" class="btn btn-default"
           ng-click="close()">Cancel</button>
   <button type="button" class="btn btn-danger"
-          ng-if="canActionAll"><% actionLabel %> all recorded events</button>
-  <button type="button" class="btn btn-primary"><% actionLabel %> <% numEvents %> selected events</button>
+          ng-if="canActionAll"
+          ng-click="actionAll()"><% actionLabel %> all recorded events</button>
+  <button type="button" class="btn btn-primary"
+          ng-click="actionSelected()"><% actionLabel %> <% numEvents %> selected events</button>
 </div>
