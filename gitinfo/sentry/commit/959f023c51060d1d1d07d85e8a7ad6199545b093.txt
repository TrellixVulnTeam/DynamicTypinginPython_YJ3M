commit 959f023c51060d1d1d07d85e8a7ad6199545b093
Author: Ben Vinegar <ben@benv.ca>
Date:   Thu May 26 15:27:50 2016 -0700

    Only append rawStacktrace if source maps were applied

diff --git a/src/sentry/lang/javascript/processor.py b/src/sentry/lang/javascript/processor.py
index ff923dad70..7966b61949 100644
--- a/src/sentry/lang/javascript/processor.py
+++ b/src/sentry/lang/javascript/processor.py
@@ -497,11 +497,13 @@ class SourceProcessor(object):
         # all of these methods assume mutation on the original
         # objects rather than re-creation
         self.populate_source_cache(frames, release)
-        errors.extend(self.expand_frames(frames, release) or [])
+        expand_errors, sourcemap_applied = self.expand_frames(frames, release)
+        errors.extend(expand_errors or [])
         self.ensure_module_names(frames)
         self.fix_culprit(data, stacktraces)
         self.update_stacktraces(stacktraces)
-        self.add_raw_stacktraces(data, release)
+        if sourcemap_applied:
+            self.add_raw_stacktraces(data, release)
         return data
 
     def fix_culprit(self, data, stacktraces):
@@ -569,6 +571,7 @@ class SourceProcessor(object):
         cache = self.cache
         sourcemaps = self.sourcemaps
         all_errors = []
+        sourcemap_applied = False
 
         for frame in frames:
             errors = cache.get_errors(frame.abs_path)
@@ -618,6 +621,8 @@ class SourceProcessor(object):
                     'sourcemap': sourcemap_label,
                 }
 
+                sourcemap_applied = True
+
                 if state is not None:
                     abs_path = urljoin(sourcemap_url, state.src)
 
@@ -691,7 +696,7 @@ class SourceProcessor(object):
                     'row': frame.lineno,
                     'source': frame.abs_path,
                 })
-        return all_errors
+        return all_errors, sourcemap_applied
 
     def get_source(self, filename, release):
         if filename not in self.cache:
