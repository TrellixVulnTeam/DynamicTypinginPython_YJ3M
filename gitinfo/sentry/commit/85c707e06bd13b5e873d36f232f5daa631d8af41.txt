commit 85c707e06bd13b5e873d36f232f5daa631d8af41
Author: David Cramer <dcramer@gmail.com>
Date:   Wed Nov 14 03:17:01 2012 -0800

    Some general refactoring and cleanup

diff --git a/src/sentry/static/sentry/coffee/app.coffee b/src/sentry/static/sentry/coffee/app.coffee
index 83fbdf7867..0fdb88fcd5 100644
--- a/src/sentry/static/sentry/coffee/app.coffee
+++ b/src/sentry/static/sentry/coffee/app.coffee
@@ -3,10 +3,66 @@ app.config = app.config || {};
 
 jQuery ->
 
-    app.StreamPage = class StreamPage extends Backbone.View
+    class BasePage extends Backbone.View
+        initialize: ->
+            _.bindAll(@)
+            @views = {}
+
+            # initialize tab event handlers
+            $('a[data-toggle=ajtab]').click (e) =>
+                e.preventDefault()
+
+                $tab = $(e.target)
+                view_id = $tab.attr('href').substr(1)
+                view = @getView(view_id)
+                uri = $tab.attr('data-uri')
+
+                if (!uri)
+                    view.load()
+                    return
+
+                $cont = $('#' + view_id)
+                $parent = $cont.parent()
+
+                $parent.css('opacity', .6)
+
+                # load content for selected tab
+                $.ajax
+                    url: uri
+                    dataType: 'json'
+                    success: (data) =>
+                        view.load(data)
+                        $parent.css('opacity', 1)
+                        $tab.tab('show')
+
+                        if $cont.find('.sparkline canvas').length == 0
+                            $cont.find('.sparkline').each (_, el) =>
+                                # TODO: find a way to not run this check each time
+                                $(el).sparkline 'html'
+                                    enableTagOptions: true
+                                    height: $(el).height()
+
+                    error: ->
+                        $cont.html('<p>There was an error fetching data from the server.</p>')
+    
+            # initialize active tabs
+            $('li.active a[data-toggle=ajtab]').click()
+
+        makeDefaultView: (id) ->
+            new app.GroupListView
+                className: 'group-list small'
+                id: id
+                maxItems: 5
+
+        getView: (id) ->
+            if !@views[id]
+                @views[id] = @makeDefaultView(id)
+            return @views[id]
+
+    app.StreamPage = class StreamPage extends BasePage
 
         initialize: (data) ->
-            _.bindAll(@)
+            BasePage.prototype.initialize.call(@)
 
             @group_list = new app.GroupListView
                 className: 'group-list'
@@ -75,62 +131,14 @@ jQuery ->
                     # if an error happened lets give the server a bit of time before we poll again
                     window.setTimeout(@poll, 10000)
 
-    app.DashboardPage = class DashboardPage extends Backbone.View
+    app.DashboardPage = class DashboardPage extends BasePage
 
         initialize: ->
-            _.bindAll(@)
-
-            @views = {}
+            BasePage.prototype.initialize.call(@)
 
             # TODO:
             Sentry.charts.render('#chart')
 
-            # initialize tab event handlers
-            $('a[data-toggle=ajtab]').click (e) =>
-                $tab = $(e.target)
-                view_id = $tab.attr('href').substr(1)
-                view = @getView(view_id)
-                uri = $tab.attr('data-uri')
-
-                if (!uri)
-                    view.load()
-                    return
-
-                $cont = $('#' + view_id)
-                $parent = $cont.parent()
-
-                $parent.css('opacity', .6)
-                e.preventDefault()
-
-                # load content for selected tab
-                $.ajax
-                    url: uri
-                    dataType: 'json'
-                    success: (data) =>
-                        view.load(data)
-                        $parent.css('opacity', 1)
-                        $tab.tab('show')
-
-                        if $cont.find('.sparkline canvas').length == 0
-                            $cont.find('.sparkline').each (_, el) =>
-                                # TODO: find a way to not run this check each time
-                                $(el).sparkline 'html'
-                                    enableTagOptions: true
-                                    height: $(el).height()
-
-                    error: ->
-                        $cont.html('<p>There was an error fetching data from the server.</p>')
-    
-            # initialize active tabs
-            $('li.active a[data-toggle=ajtab]').click()
-
-        getView: (id) ->
-            if !@views[id]
-                @views[id] = new app.GroupListView
-                    className: 'group-list small'
-                    id: id
-                    maxItems: 5
-            return @views[id]
 
 # We're not talking to the server
 Backbone.sync = (method, model, success, error) ->
diff --git a/src/sentry/static/sentry/scripts/site.js b/src/sentry/static/sentry/scripts/site.js
index c7dfb9f90c..ddf73dd239 100644
--- a/src/sentry/static/sentry/scripts/site.js
+++ b/src/sentry/static/sentry/scripts/site.js
@@ -9,7 +9,75 @@
   app.config = app.config || {};
 
   jQuery(function() {
-    var DashboardPage, StreamPage;
+    var BasePage, DashboardPage, StreamPage;
+    BasePage = (function(_super) {
+
+      __extends(BasePage, _super);
+
+      function BasePage() {
+        return BasePage.__super__.constructor.apply(this, arguments);
+      }
+
+      BasePage.prototype.initialize = function() {
+        var _this = this;
+        _.bindAll(this);
+        this.views = {};
+        $('a[data-toggle=ajtab]').click(function(e) {
+          var $cont, $parent, $tab, uri, view, view_id;
+          e.preventDefault();
+          $tab = $(e.target);
+          view_id = $tab.attr('href').substr(1);
+          view = _this.getView(view_id);
+          uri = $tab.attr('data-uri');
+          if (!uri) {
+            view.load();
+            return;
+          }
+          $cont = $('#' + view_id);
+          $parent = $cont.parent();
+          $parent.css('opacity', .6);
+          return $.ajax({
+            url: uri,
+            dataType: 'json',
+            success: function(data) {
+              view.load(data);
+              $parent.css('opacity', 1);
+              $tab.tab('show');
+              if ($cont.find('.sparkline canvas').length === 0) {
+                return $cont.find('.sparkline').each(function(_, el) {
+                  return $(el).sparkline('html', {
+                    enableTagOptions: true,
+                    height: $(el).height()
+                  });
+                });
+              }
+            },
+            error: function() {
+              return $cont.html('<p>There was an error fetching data from the server.</p>');
+            }
+          });
+        });
+        return $('li.active a[data-toggle=ajtab]').click();
+      };
+
+      BasePage.prototype.makeDefaultView = function(id) {
+        return new app.GroupListView({
+          className: 'group-list small',
+          id: id,
+          maxItems: 5
+        });
+      };
+
+      BasePage.prototype.getView = function(id) {
+        if (!this.views[id]) {
+          this.views[id] = this.makeDefaultView(id);
+        }
+        return this.views[id];
+      };
+
+      return BasePage;
+
+    })(Backbone.View);
     app.StreamPage = StreamPage = (function(_super) {
 
       __extends(StreamPage, _super);
@@ -20,7 +88,7 @@
 
       StreamPage.prototype.initialize = function(data) {
         var _ref;
-        _.bindAll(this);
+        BasePage.prototype.initialize.call(this);
         this.group_list = new app.GroupListView({
           className: 'group-list',
           id: 'event_list',
@@ -91,7 +159,7 @@
 
       return StreamPage;
 
-    })(Backbone.View);
+    })(BasePage);
     return app.DashboardPage = DashboardPage = (function(_super) {
 
       __extends(DashboardPage, _super);
@@ -101,62 +169,13 @@
       }
 
       DashboardPage.prototype.initialize = function() {
-        var _this = this;
-        _.bindAll(this);
-        this.views = {};
-        Sentry.charts.render('#chart');
-        $('a[data-toggle=ajtab]').click(function(e) {
-          var $cont, $parent, $tab, uri, view, view_id;
-          $tab = $(e.target);
-          view_id = $tab.attr('href').substr(1);
-          view = _this.getView(view_id);
-          uri = $tab.attr('data-uri');
-          if (!uri) {
-            view.load();
-            return;
-          }
-          $cont = $('#' + view_id);
-          $parent = $cont.parent();
-          $parent.css('opacity', .6);
-          e.preventDefault();
-          return $.ajax({
-            url: uri,
-            dataType: 'json',
-            success: function(data) {
-              view.load(data);
-              $parent.css('opacity', 1);
-              $tab.tab('show');
-              if ($cont.find('.sparkline canvas').length === 0) {
-                return $cont.find('.sparkline').each(function(_, el) {
-                  return $(el).sparkline('html', {
-                    enableTagOptions: true,
-                    height: $(el).height()
-                  });
-                });
-              }
-            },
-            error: function() {
-              return $cont.html('<p>There was an error fetching data from the server.</p>');
-            }
-          });
-        });
-        return $('li.active a[data-toggle=ajtab]').click();
-      };
-
-      DashboardPage.prototype.getView = function(id) {
-        if (!this.views[id]) {
-          this.views[id] = new app.GroupListView({
-            className: 'group-list small',
-            id: id,
-            maxItems: 5
-          });
-        }
-        return this.views[id];
+        BasePage.prototype.initialize.call(this);
+        return Sentry.charts.render('#chart');
       };
 
       return DashboardPage;
 
-    })(Backbone.View);
+    })(BasePage);
   });
 
   Backbone.sync = function(method, model, success, error) {
diff --git a/src/sentry/templates/sentry/layout.html b/src/sentry/templates/sentry/layout.html
index 26ab1350a1..69710affb2 100644
--- a/src/sentry/templates/sentry/layout.html
+++ b/src/sentry/templates/sentry/layout.html
@@ -8,53 +8,58 @@
         <meta name="robots" content="NONE,NOARCHIVE">
 
         <link href="{% url sentry-media "sentry" "scripts/select2/select2.css" %}" rel="stylesheet" type="text/css"/>
-        <link href="{% url sentry-media "sentry" "styles/global.min.css" %}" rel="stylesheet" type="text/css"/>
         <link href="{% url sentry-media "sentry" "images/favicon.png" %}" rel="shortcut icon" type="image/png"/>
 
         <title>{% block title %}Sentry{% endblock %}</title>
 
         {% if USE_JS_CLIENT %}
-        <script type="text/javascript" src="{% url sentry-media "sentry" "scripts/client.js" %}"></script>
-        <script type="text/javascript">
-        Sentry.client.config({
-            server: '{% url sentry-api-store %}',
-            projectId: {{ PROJECT_ID|to_json|safe }},
-            logger: 'sentry.errors.javascript'
-        })
-        Sentry.client.registerGlobalHandler();
-        </script>
+            <script type="text/javascript" src="{% url sentry-media "sentry" "scripts/client.js" %}"></script>
+            <script type="text/javascript">
+            Sentry.client.config({
+                server: '{% url sentry-api-store %}',
+                projectId: {{ PROJECT_ID|to_json|safe }},
+                logger: 'sentry.errors.javascript'
+            })
+            Sentry.client.registerGlobalHandler();
+            </script>
         {% endif %}
 
         <!--[if lt IE 9]>
         <script type="text/javascript" src="{% url sentry-media "sentry" "scripts/html5shiv.js" %}"></script>
         <![endif]-->
-        <script type="text/javascript" src="{% url sentry-media "sentry" "scripts/jquery.js" %}"></script>
-        <script type="text/javascript" src="{% url sentry-media "sentry" "scripts/jquery.animate-colors-min.js" %}"></script>
-        <script type="text/javascript" src="{% url sentry-media "sentry" "scripts/jquery.clippy.min.js" %}"></script>
-        <script type="text/javascript" src="{% url sentry-media "sentry" "scripts/jquery.flot.min.js" %}"></script>
-        <script type="text/javascript" src="{% url sentry-media "sentry" "scripts/jquery.sparkline.min.js" %}"></script>
-        <script type="text/javascript" src="{% url sentry-media "sentry" "scripts/json2.js" %}"></script>
-        <script type="text/javascript" src="{% url sentry-media "sentry" "scripts/underscore.min.js" %}"></script>
-        <script type="text/javascript" src="{% url sentry-media "sentry" "scripts/backbone.js" %}"></script>
-        <script type="text/javascript" src="{% url sentry-media "sentry" "scripts/select2/select2.min.js" %}"></script>
-        <script type="text/javascript" src="{% url sentry-media "sentry" "scripts/global.min.js" %}"></script>
-        <script type="text/javascript" src="{% url sentry-media "sentry" "scripts/site.js" %}"></script>
-        <script type="text/javascript">
-        Sentry.config({
-            urlPrefix: {{ URL_PREFIX|to_json|safe }},
-            mediaUrl: '{% url sentry-media "sentry" '' %}',
-            projectId: {% if project %}{{ project.id|to_json|safe }}{% else %}null{% endif %},
-            defaultImage: '{% url sentry-media "sentry" 'images/sentry.png' %}',
-            popupCss: '{% url sentry-media "sentry" 'styles/popup.css' %}'
-        });
-        app.config.defaultImage = '{% url sentry-media "sentry" 'images/sentry.png' %}';
-        app.config.popupCss = '{% url sentry-media "sentry" 'styles/popup.css' %}';
-        app.config.mediaUrl = '{% url sentry-media "sentry" '' %}';
-        app.config.urlPrefix = {{ URL_PREFIX|to_json|safe }};
-        app.config.hasRealtime = {{ hasRealtime|to_json|safe  }};
-        app.config.projectId = {{ project.slug|to_json|safe }};
-        app.config.viewId = {% if view %}{{ view.pk|to_json|safe }}{% else %}null{% endif %};
-        </script>
+        {% block scripts %}
+            <script type="text/javascript" src="{% url sentry-media "sentry" "scripts/jquery.js" %}"></script>
+            <script type="text/javascript" src="{% url sentry-media "sentry" "scripts/jquery.animate-colors-min.js" %}"></script>
+            <script type="text/javascript" src="{% url sentry-media "sentry" "scripts/jquery.clippy.min.js" %}"></script>
+            <script type="text/javascript" src="{% url sentry-media "sentry" "scripts/jquery.flot.min.js" %}"></script>
+            <script type="text/javascript" src="{% url sentry-media "sentry" "scripts/jquery.sparkline.min.js" %}"></script>
+            <script type="text/javascript" src="{% url sentry-media "sentry" "scripts/json2.js" %}"></script>
+            <script type="text/javascript" src="{% url sentry-media "sentry" "scripts/underscore.min.js" %}"></script>
+            <script type="text/javascript" src="{% url sentry-media "sentry" "scripts/backbone.js" %}"></script>
+            <script type="text/javascript" src="{% url sentry-media "sentry" "scripts/select2/select2.min.js" %}"></script>
+            <script type="text/javascript" src="{% url sentry-media "sentry" "scripts/global.min.js" %}"></script>
+            <script type="text/javascript" src="{% url sentry-media "sentry" "scripts/site.js" %}"></script>
+            <script type="text/javascript">
+            Sentry.config({
+                urlPrefix: {{ URL_PREFIX|to_json|safe }},
+                mediaUrl: '{% url sentry-media "sentry" '' %}',
+                projectId: {% if project %}{{ project.id|to_json|safe }}{% else %}null{% endif %},
+                defaultImage: '{% url sentry-media "sentry" 'images/sentry.png' %}',
+                popupCss: '{% url sentry-media "sentry" 'styles/popup.css' %}'
+            });
+            app.config.defaultImage = '{% url sentry-media "sentry" 'images/sentry.png' %}';
+            app.config.popupCss = '{% url sentry-media "sentry" 'styles/popup.css' %}';
+            app.config.mediaUrl = '{% url sentry-media "sentry" '' %}';
+            app.config.urlPrefix = {{ URL_PREFIX|to_json|safe }};
+            app.config.hasRealtime = {{ hasRealtime|to_json|safe  }};
+            app.config.projectId = {{ project.slug|to_json|safe }};
+            app.config.viewId = {% if view %}{{ view.pk|to_json|safe }}{% else %}null{% endif %};
+            </script>
+        {% endblock %}
+
+        {% block css %}
+            <link href="{% url sentry-media "sentry" "styles/global.min.css" %}" rel="stylesheet" type="text/css"/>
+        {% endblock %}
 
         {% block meta %}
         {% endblock %}
diff --git a/src/sentry/utils/javascript.py b/src/sentry/utils/javascript.py
index 248bd2435d..68c48297db 100644
--- a/src/sentry/utils/javascript.py
+++ b/src/sentry/utils/javascript.py
@@ -57,6 +57,11 @@ class Transformer(object):
 @register(Group)
 class GroupTransformer(Transformer):
     def attach_metadata(self, objects, request=None):
+        from sentry.templatetags.sentry_plugins import handle_before_events
+
+        if request and objects:
+            handle_before_events(request, objects)
+
         if request and request.user.is_authenticated() and objects:
             bookmarks = set(GroupBookmark.objects.filter(
                 user=request.user,
diff --git a/src/sentry/web/api.py b/src/sentry/web/api.py
index 638ba62c3f..c5da5ea602 100644
--- a/src/sentry/web/api.py
+++ b/src/sentry/web/api.py
@@ -200,8 +200,6 @@ def notification(request, project):
 @has_access
 @never_cache
 def poll(request, project):
-    from sentry.templatetags.sentry_plugins import handle_before_events
-
     offset = 0
     limit = settings.MESSAGES_PER_PAGE
 
@@ -222,7 +220,6 @@ def poll(request, project):
 
     event_list = response['event_list']
     event_list = list(event_list[offset:limit])
-    handle_before_events(request, event_list)
 
     data = to_json(event_list, request)
 
