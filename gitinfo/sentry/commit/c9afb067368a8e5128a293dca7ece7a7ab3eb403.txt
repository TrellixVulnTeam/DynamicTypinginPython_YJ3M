commit c9afb067368a8e5128a293dca7ece7a7ab3eb403
Author: Lyn Nagara <lyn.nagara@gmail.com>
Date:   Wed Jul 31 11:24:55 2019 -0700

    ref: Always use event.title instead of getting title from metadata (#14211)

diff --git a/src/sentry/static/sentry/app/components/eventsTable/eventsTableRow.jsx b/src/sentry/static/sentry/app/components/eventsTable/eventsTableRow.jsx
index 01d0a8a714..1fa678e8f9 100644
--- a/src/sentry/static/sentry/app/components/eventsTable/eventsTableRow.jsx
+++ b/src/sentry/static/sentry/app/components/eventsTable/eventsTableRow.jsx
@@ -20,24 +20,6 @@ class EventsTableRow extends React.Component {
     tagList: PropTypes.arrayOf(SentryTypes.Tag),
   };
 
-  getEventTitle = event => {
-    // XXX(mitsuhiko): event.title did not exist originally.  At one point
-    // all events will have this and most of this logic could go
-    switch (event.type) {
-      case 'error':
-        if (event.metadata.type && event.metadata.value) {
-          return `${event.metadata.type}: ${event.metadata.value}`;
-        }
-        return event.metadata.type || event.metadata.value || event.metadata.title;
-      case 'csp':
-        return event.metadata.message;
-      case 'default':
-        return event.metadata.title;
-      default:
-        return event.title || event.message.split('\n')[0];
-    }
-  };
-
   renderCrashFileLink() {
     const {event, projectId} = this.props;
     if (!event.crashFile) {
@@ -76,7 +58,7 @@ class EventsTableRow extends React.Component {
             <GlobalSelectionLink to={link}>
               <DateTime date={event.dateCreated} />
             </GlobalSelectionLink>
-            <small>{(this.getEventTitle(event) || '').substr(0, 100)}</small>
+            <small>{event.title.substr(0, 100)}</small>
             {this.renderCrashFileLink()}
           </h5>
         </td>
diff --git a/tests/js/fixtures/event.js b/tests/js/fixtures/event.js
index 4631f3acea..9b80088125 100644
--- a/tests/js/fixtures/event.js
+++ b/tests/js/fixtures/event.js
@@ -2,6 +2,7 @@ export function Event(params) {
   return {
     id: '1',
     message: 'ApiException',
+    title: 'ApiException',
     groupID: '1',
     eventID: '12345678901234567890123456789012',
     dateCreated: '2019-05-21T18:01:48.762Z',
diff --git a/tests/js/mocks/events.js b/tests/js/mocks/events.js
index 7478079306..79ab40ea44 100644
--- a/tests/js/mocks/events.js
+++ b/tests/js/mocks/events.js
@@ -41,6 +41,7 @@ export default [
     user: {ip_address: '127.0.0.1', email: 'billy@sentry.io', id: '1'},
     context: {'session:duration': 46363},
     entries: [],
+    title: "TypeError: Cannot read property 'assignedTo' of undefined",
     message:
       "TypeError Cannot read property 'assignedTo' of undefined app/components/assigneeSelector in assignedTo",
     sdk: {
@@ -99,6 +100,7 @@ export default [
     user: {ip_address: '127.0.0.1', email: 'billy@sentry.io', id: '1'},
     context: {'session:duration': 46363},
     entries: [],
+    title: "TypeError: Cannot read property 'assignedTo' of undefined",
     message:
       "TypeError Cannot read property 'assignedTo' of undefined app/components/assigneeSelector in assignedTo",
     sdk: {
diff --git a/tests/js/spec/components/events/__snapshots__/crashContent.spec.jsx.snap b/tests/js/spec/components/events/__snapshots__/crashContent.spec.jsx.snap
index e7989d89d2..db4c9b36ae 100644
--- a/tests/js/spec/components/events/__snapshots__/crashContent.spec.jsx.snap
+++ b/tests/js/spec/components/events/__snapshots__/crashContent.spec.jsx.snap
@@ -10,6 +10,7 @@ exports[`CrashContent renders with meta data 1`] = `
       "id": "1",
       "message": "ApiException",
       "tags": Array [],
+      "title": "ApiException",
     }
   }
   exception={
diff --git a/tests/js/spec/components/eventsTable/__snapshots__/eventsTable.spec.jsx.snap b/tests/js/spec/components/eventsTable/__snapshots__/eventsTable.spec.jsx.snap
index 0187c239db..f18b8d77e2 100644
--- a/tests/js/spec/components/eventsTable/__snapshots__/eventsTable.spec.jsx.snap
+++ b/tests/js/spec/components/eventsTable/__snapshots__/eventsTable.spec.jsx.snap
@@ -105,6 +105,7 @@ exports[`EventsTable renders 1`] = `
               "value": "id:1",
             },
           ],
+          "title": "TypeError: Cannot read property 'assignedTo' of undefined",
           "type": "error",
           "user": Object {
             "email": "billy@sentry.io",
@@ -210,6 +211,7 @@ exports[`EventsTable renders 1`] = `
               "value": "id:1",
             },
           ],
+          "title": "TypeError: Cannot read property 'assignedTo' of undefined",
           "type": "error",
           "user": Object {
             "email": "billy@sentry.io",
diff --git a/tests/js/spec/views/organizationGroupDetails/__snapshots__/groupMergedView.spec.jsx.snap b/tests/js/spec/views/organizationGroupDetails/__snapshots__/groupMergedView.spec.jsx.snap
index 8b2e0e5034..ee0b231381 100644
--- a/tests/js/spec/views/organizationGroupDetails/__snapshots__/groupMergedView.spec.jsx.snap
+++ b/tests/js/spec/views/organizationGroupDetails/__snapshots__/groupMergedView.spec.jsx.snap
@@ -105,6 +105,7 @@ exports[`Issues -> Merged View renders with mocked data 1`] = `
                 "value": "id:1",
               },
             ],
+            "title": "TypeError: Cannot read property 'assignedTo' of undefined",
             "type": "error",
             "user": Object {
               "email": "billy@sentry.io",
@@ -204,6 +205,7 @@ exports[`Issues -> Merged View renders with mocked data 1`] = `
                 "value": "id:1",
               },
             ],
+            "title": "TypeError: Cannot read property 'assignedTo' of undefined",
             "type": "error",
             "user": Object {
               "email": "billy@sentry.io",
diff --git a/tests/js/spec/views/sharedGroupDetails/__snapshots__/index.spec.jsx.snap b/tests/js/spec/views/sharedGroupDetails/__snapshots__/index.spec.jsx.snap
index fe3abd6562..e2625a820b 100644
--- a/tests/js/spec/views/sharedGroupDetails/__snapshots__/index.spec.jsx.snap
+++ b/tests/js/spec/views/sharedGroupDetails/__snapshots__/index.spec.jsx.snap
@@ -91,6 +91,7 @@ exports[`SharedGroupDetails renders 1`] = `
                           "id": "1",
                           "message": "ApiException",
                           "tags": Array [],
+                          "title": "ApiException",
                         },
                         "level": "warning",
                         "logger": null,
@@ -215,6 +216,7 @@ exports[`SharedGroupDetails renders 1`] = `
                             "id": "1",
                             "message": "ApiException",
                             "tags": Array [],
+                            "title": "ApiException",
                           }
                         }
                         group={
@@ -249,6 +251,7 @@ exports[`SharedGroupDetails renders 1`] = `
                               "id": "1",
                               "message": "ApiException",
                               "tags": Array [],
+                              "title": "ApiException",
                             },
                             "level": "warning",
                             "logger": null,
@@ -347,6 +350,7 @@ exports[`SharedGroupDetails renders 1`] = `
                               "id": "1",
                               "message": "ApiException",
                               "tags": Array [],
+                              "title": "ApiException",
                             }
                           }
                           group={
@@ -381,6 +385,7 @@ exports[`SharedGroupDetails renders 1`] = `
                                 "id": "1",
                                 "message": "ApiException",
                                 "tags": Array [],
+                                "title": "ApiException",
                               },
                               "level": "warning",
                               "logger": null,
@@ -508,6 +513,7 @@ exports[`SharedGroupDetails renders 1`] = `
                                 "id": "1",
                                 "message": "ApiException",
                                 "tags": Array [],
+                                "title": "ApiException",
                               }
                             }
                             group={
@@ -542,6 +548,7 @@ exports[`SharedGroupDetails renders 1`] = `
                                   "id": "1",
                                   "message": "ApiException",
                                   "tags": Array [],
+                                  "title": "ApiException",
                                 },
                                 "level": "warning",
                                 "logger": null,
@@ -672,6 +679,7 @@ exports[`SharedGroupDetails renders 1`] = `
                                     "id": "1",
                                     "message": "ApiException",
                                     "tags": Array [],
+                                    "title": "ApiException",
                                   }
                                 }
                                 group={
@@ -706,6 +714,7 @@ exports[`SharedGroupDetails renders 1`] = `
                                       "id": "1",
                                       "message": "ApiException",
                                       "tags": Array [],
+                                      "title": "ApiException",
                                     },
                                     "level": "warning",
                                     "logger": null,
@@ -823,6 +832,7 @@ exports[`SharedGroupDetails renders 1`] = `
                                     "id": "1",
                                     "message": "ApiException",
                                     "tags": Array [],
+                                    "title": "ApiException",
                                   }
                                 }
                                 isShare={true}
@@ -848,6 +858,7 @@ exports[`SharedGroupDetails renders 1`] = `
                                       "id": "1",
                                       "message": "ApiException",
                                       "tags": Array [],
+                                      "title": "ApiException",
                                     }
                                   }
                                   hideGuide={false}
