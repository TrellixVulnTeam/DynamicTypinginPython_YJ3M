commit bf7b85ec8c2c64d78d221bf473c058e8840f0a3c
Author: David Cramer <dcramer@gmail.com>
Date:   Thu Apr 5 23:41:37 2012 -0700

    Allow projects to be reassigned to other teams via the project page

diff --git a/sentry/web/forms/__init__.py b/sentry/web/forms/__init__.py
index f37b532c13..75cb514367 100644
--- a/sentry/web/forms/__init__.py
+++ b/sentry/web/forms/__init__.py
@@ -10,7 +10,7 @@ from django.contrib.auth.models import User
 from django.utils.translation import ugettext_lazy as _
 
 from sentry.conf import settings
-from sentry.models import Project
+from sentry.models import Project, Team
 from sentry.interfaces import Http
 from sentry.permissions import can_set_public_projects
 from sentry.web.forms.fields import RadioFieldRenderer, UserField
@@ -78,15 +78,29 @@ class NewProjectAdminForm(forms.ModelForm):
 
 class EditProjectForm(forms.ModelForm):
     public = forms.BooleanField(required=False, help_text=_('Allow anyone (even anonymous users) to view this project'))
+    team = forms.ChoiceField(choices=())
 
     class Meta:
-        fields = ('name', 'status', 'public')
+        fields = ('name', 'status', 'public', 'team')
         model = Project
 
-    def __init__(self, request, *args, **kwargs):
+    def __init__(self, request, team_list, *args, **kwargs):
         super(EditProjectForm, self).__init__(*args, **kwargs)
+        self.team_list = dict((t.pk, t) for t in team_list.itervalues())
         if not can_set_public_projects(request.user):
             del self.fields['public']
+        if len(team_list) == 1:
+            del self.fields['team']
+        else:
+            self.fields['team'].choices = [(t.pk, t) for t in sorted(self.team_list.values(), key=lambda x: x.name)]
+            self.fields['team'].widget.choices = self.fields['team'].choices
+
+    def clean_team(self):
+        value = self.cleaned_data.get('team')
+        if not value:
+            return
+
+        return self.team_list[int(value)]
 
 
 class ReplayForm(forms.Form):
diff --git a/sentry/web/frontend/projects.py b/sentry/web/frontend/projects.py
index d03c2a988d..c4715444d7 100644
--- a/sentry/web/frontend/projects.py
+++ b/sentry/web/frontend/projects.py
@@ -16,10 +16,9 @@ from sentry.models import TeamMember, MEMBER_OWNER, \
 from sentry.permissions import can_create_projects, can_remove_project
 from sentry.plugins import plugins
 from sentry.web.decorators import login_required, has_access
-from sentry.web.forms import EditProjectForm, NewProjectForm, \
-  RemoveProjectForm, NewProjectAdminForm
+from sentry.web.forms import EditProjectForm, RemoveProjectForm
 from sentry.web.helpers import render_to_response, get_project_list, \
-  plugin_config
+  plugin_config, get_team_list
 
 
 @login_required
@@ -96,7 +95,9 @@ def manage_project(request, project):
     if result is False and not request.user.has_perm('sentry.can_change_project'):
         return HttpResponseRedirect(reverse('sentry'))
 
-    form = EditProjectForm(request, request.POST or None, instance=project)
+    team_list = get_team_list(request.user)
+
+    form = EditProjectForm(request, team_list, request.POST or None, instance=project)
 
     if form.is_valid():
         project = form.save()
@@ -112,6 +113,7 @@ def manage_project(request, project):
         'form': form,
         'project': project,
         'member_list': member_list,
+        'TEAM_LIST': team_list.values(),
     })
 
     return render_to_response('sentry/projects/manage.html', context, request)
