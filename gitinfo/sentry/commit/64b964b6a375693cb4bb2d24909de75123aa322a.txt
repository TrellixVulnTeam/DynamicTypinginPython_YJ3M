commit 64b964b6a375693cb4bb2d24909de75123aa322a
Author: Jess MacQueen <jessmacqueen@gmail.com>
Date:   Thu Sep 27 17:26:10 2018 -0700

    fix(integrations): Sync sentry status for autoresolve too

diff --git a/src/sentry/tasks/auto_resolve_issues.py b/src/sentry/tasks/auto_resolve_issues.py
index 4087c9b583..d76d7c7bb2 100644
--- a/src/sentry/tasks/auto_resolve_issues.py
+++ b/src/sentry/tasks/auto_resolve_issues.py
@@ -9,6 +9,7 @@ from time import time
 
 from sentry.models import (Activity, Group, GroupStatus, Project, ProjectOption)
 from sentry.tasks.base import instrumented_task
+from sentry.tasks.integrations import kick_off_status_syncs
 
 ONE_HOUR = 3600
 
@@ -87,6 +88,11 @@ def auto_resolve_project_issues(project_id, cutoff=None, chunk_size=1000, **kwar
                 },
             )
 
+            kick_off_status_syncs.apply_async(kwargs={
+                'project_id': group.project_id,
+                'group_id': group.id,
+            })
+
     if might_have_more:
         auto_resolve_project_issues.delay(
             project_id=project_id,
diff --git a/tests/sentry/tasks/test_auto_resolve_issues.py b/tests/sentry/tasks/test_auto_resolve_issues.py
index 13d7613643..b1b830f0bb 100644
--- a/tests/sentry/tasks/test_auto_resolve_issues.py
+++ b/tests/sentry/tasks/test_auto_resolve_issues.py
@@ -1,5 +1,7 @@
 from __future__ import absolute_import
 
+from mock import patch
+
 from datetime import timedelta
 from django.utils import timezone
 from time import time
@@ -13,7 +15,8 @@ class ScheduleAutoResolutionTest(TestCase):
     def test_task_persistent_name(self):
         assert schedule_auto_resolution.name == 'sentry.tasks.schedule_auto_resolution'
 
-    def test_simple(self):
+    @patch('sentry.tasks.auto_resolve_issues.kick_off_status_syncs')
+    def test_simple(self, mock_kick_off_status_syncs):
         project = self.create_project()
         project2 = self.create_project()
         project3 = self.create_project()
@@ -59,6 +62,13 @@ class ScheduleAutoResolutionTest(TestCase):
             id=group3.id,
         ).status == GroupStatus.UNRESOLVED
 
+        mock_kick_off_status_syncs.apply_async.assert_called_once_with(
+            kwargs={
+                'project_id': group1.project_id,
+                'group_id': group1.id,
+            }
+        )
+
         assert project.get_option('sentry:_last_auto_resolve') > current_ts
         assert not project2.get_option('sentry:_last_auto_resolve')
         assert project3.get_option('sentry:_last_auto_resolve') == current_ts
