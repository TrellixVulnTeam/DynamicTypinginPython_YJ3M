commit e0fc27bf6c54faa767dbac3ace523382119ca48f
Author: David Cramer <dcramer@gmail.com>
Date:   Thu Dec 22 21:17:06 2011 -0800

    Pep8

diff --git a/sentry/interfaces.py b/sentry/interfaces.py
index a20f036eaf..3e0e4274ff 100644
--- a/sentry/interfaces.py
+++ b/sentry/interfaces.py
@@ -13,16 +13,19 @@ import urlparse
 
 from sentry.web.helpers import render_to_string
 
+
 # unserialization concept is based on pickle
 class _EmptyClass(object):
     pass
 
+
 def unserialize(klass, data):
     value = _EmptyClass()
     value.__class__ = klass
     value.__setstate__(data)
     return value
 
+
 class Interface(object):
     """
     An interface is a structured represntation of data, which may
@@ -51,6 +54,7 @@ class Interface(object):
     def to_string(self, event):
         return ''
 
+
 class Message(Interface):
     def __init__(self, message, params):
         self.message = message
@@ -62,6 +66,7 @@ class Message(Interface):
             'params': self.params,
         }
 
+
 class Query(Interface):
     def __init__(self, query, engine):
         self.query = query
@@ -73,6 +78,7 @@ class Query(Interface):
             'engine': self.engine,
         }
 
+
 class Stacktrace(Interface):
     """
     {
@@ -124,6 +130,7 @@ class Stacktrace(Interface):
 
         return '\n'.join(result)
 
+
 class Exception(Interface):
     def __init__(self, type, value, module=None):
         # The exception type name (e.g. TypeError)
@@ -147,6 +154,7 @@ class Exception(Interface):
             'exception_module': self.module,
         })
 
+
 class Http(Interface):
     """
     {
@@ -207,6 +215,7 @@ class Http(Interface):
             'env': self.env,
         })
 
+
 class Template(Interface):
     """
     {
@@ -249,6 +258,7 @@ class Template(Interface):
             'post_context': self.post_context,
         })
 
+
 class User(Interface):
     """
     {
@@ -257,4 +267,4 @@ class User(Interface):
         username: 'foo',
         email: 'foo@example.com'
     }
-    """
\ No newline at end of file
+    """
