commit 4ac45e5464ea21d257859c0dc3aba49f44c8a55c
Author: David Cramer <dcramer@gmail.com>
Date:   Wed Jul 15 16:28:01 2015 -0700

    Basic support for stacktrace toggle

diff --git a/src/sentry/static/sentry/app/components/interfaces/exception.jsx b/src/sentry/static/sentry/app/components/interfaces/exception.jsx
index c8297bd447..98d5986099 100644
--- a/src/sentry/static/sentry/app/components/interfaces/exception.jsx
+++ b/src/sentry/static/sentry/app/components/interfaces/exception.jsx
@@ -7,30 +7,12 @@ var RawStacktraceContent = require("./rawStacktraceContent");
 var StacktraceContent = require("./stacktraceContent");
 
 var ExceptionContent = React.createClass({
-  render() {
-    // TODO(dcramer): implement exceptions omitted
-    return (
-      <div>
-        {this.props.values.map((exc, excIdx) => {
-          return (
-            <div key={excIdx}>
-              <h4>
-                <span>{exc.type}</span>
-              </h4>
-              {exc.value &&
-                <pre className="exc-message">{exc.value}</pre>
-              }
-              <StacktraceContent data={exc.stacktrace} />
-            </div>
-          );
-        })}
-      </div>
-    );
-  }
-});
+  propTypes: {
+    view: React.PropTypes.string.isRequired
+  },
 
-var RawExceptionContent = React.createClass({
   render() {
+    var stackView = this.props.view;
     // TODO(dcramer): implement exceptions omitted
     return (
       <div>
@@ -43,7 +25,13 @@ var RawExceptionContent = React.createClass({
               {exc.value &&
                 <pre className="exc-message">{exc.value}</pre>
               }
-              <RawStacktraceContent data={exc.stacktrace} />
+              {stackView === "raw" ?
+                <RawStacktraceContent data={exc.stacktrace} />
+              :
+                <StacktraceContent
+                    data={exc.stacktrace}
+                    includeSystemFrames={stackView === "full"} />
+              }
             </div>
           );
         })}
@@ -62,13 +50,13 @@ var ExceptionInterface = React.createClass({
 
   getInitialState() {
     return {
-      raw: false
+      stackView: "app"
     };
   },
 
-  toggleRaw() {
+  toggleStack(value) {
     this.setState({
-      raw: !this.state.raw
+      stackView: value
     });
   },
 
@@ -76,15 +64,22 @@ var ExceptionInterface = React.createClass({
     var group = this.props.group;
     var evt = this.props.event;
     var data = this.props.data;
+    var stackView = this.state.stackView;
 
     var title = (
       <div>
         Exception
         <ul className="nav nav-tabs">
           <li>Stacktrace:</li>
-          <li className="active"><a>App</a></li>
-          <li><a>Full</a></li>
-          <li><a onClick={this.toggleRaw}>Raw</a></li>
+          <li className={stackView === "app" && "active"}>
+            <a onClick={this.toggleStack.bind(this, "app")}>App</a>
+          </li>
+          <li className={stackView === "full" && "active"}>
+            <a onClick={this.toggleStack.bind(this, "full")}>Full</a>
+          </li>
+          <li className={stackView === "raw" && "active"}>
+            <a onClick={this.toggleStack.bind(this, "raw")}>Raw</a>
+          </li>
         </ul>
       </div>
     );
@@ -95,11 +90,7 @@ var ExceptionInterface = React.createClass({
           event={evt}
           type={this.props.type}
           title={title}>
-        {this.state.raw ?
-          <RawExceptionContent values={data.values} />
-        :
-          <ExceptionContent values={data.values} />
-        }
+        <ExceptionContent view={stackView} values={data.values} />
       </GroupEventDataSection>
     );
   }
diff --git a/src/sentry/static/sentry/app/components/interfaces/stacktraceContent.jsx b/src/sentry/static/sentry/app/components/interfaces/stacktraceContent.jsx
index 38c60b77be..5ed25c853c 100644
--- a/src/sentry/static/sentry/app/components/interfaces/stacktraceContent.jsx
+++ b/src/sentry/static/sentry/app/components/interfaces/stacktraceContent.jsx
@@ -150,13 +150,21 @@ var Frame = React.createClass({
 
 var StacktraceContent = React.createClass({
   propTypes: {
-    data: React.PropTypes.object.isRequired
+    data: React.PropTypes.object.isRequired,
+    includeSystemFrames: React.PropTypes.bool
+  },
+
+  getDefaultProps() {
+    return {
+      includeSystemFrames: true
+    };
   },
 
   render() {
     var data = this.props.data;
     var frames = [];
     var firstFrameOmitted, lastFrameOmitted;
+    var includeSystemFrames = this.props.includeSystemFrames;
 
     if (data.frames_omitted) {
       firstFrameOmitted = data.framesOmitted[0];
@@ -167,7 +175,9 @@ var StacktraceContent = React.createClass({
     }
 
     data.frames.forEach((frame, frameIdx) => {
-      frames.push(<Frame key={frameIdx} data={frame} />);
+      if (includeSystemFrames || frame.inApp) {
+        frames.push(<Frame key={frameIdx} data={frame} />);
+      }
       if (frameIdx === firstFrameOmitted) {
         frames.push((
           <li className="frames-omitted" key="omitted">
