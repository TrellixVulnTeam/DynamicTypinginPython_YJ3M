commit df61e06708d075cad657527407fd9585445e4661
Author: David Cramer <dcramer@gmail.com>
Date:   Thu Dec 17 12:41:28 2015 -0800

    Add new organization issues endpoint

diff --git a/src/sentry/api/endpoints/organization_issues_new.py b/src/sentry/api/endpoints/organization_issues_new.py
new file mode 100644
index 0000000000..529c0aa6a1
--- /dev/null
+++ b/src/sentry/api/endpoints/organization_issues_new.py
@@ -0,0 +1,19 @@
+from __future__ import absolute_import
+
+from datetime import timedelta
+from django.utils import timezone
+
+from sentry.api.bases import OrganizationIssuesEndpoint
+from sentry.models import Group, GroupStatus
+
+
+class OrganizationIssuesNewEndpoint(OrganizationIssuesEndpoint):
+    def get_queryset(self, request, organization, member, project_list):
+        cutoff = timezone.now() - timedelta(days=3)
+
+        return Group.objects.filter(
+            status=GroupStatus.UNRESOLVED,
+            active_at__gte=cutoff,
+        ).extra(
+            select={'sort_by': 'sentry_groupedmessage.first_seen'},
+        ).select_related('project').order_by('-sort_by')
diff --git a/src/sentry/api/urls.py b/src/sentry/api/urls.py
index f19c0effc4..bc4a4ceb6a 100644
--- a/src/sentry/api/urls.py
+++ b/src/sentry/api/urls.py
@@ -23,6 +23,7 @@ from .endpoints.legacy_project_redirect import LegacyProjectRedirectEndpoint
 from .endpoints.organization_access_request_details import OrganizationAccessRequestDetailsEndpoint
 from .endpoints.organization_activity import OrganizationActivityEndpoint
 from .endpoints.organization_details import OrganizationDetailsEndpoint
+from .endpoints.organization_issues_new import OrganizationIssuesNewEndpoint
 from .endpoints.organization_member_details import OrganizationMemberDetailsEndpoint
 from .endpoints.organization_member_index import OrganizationMemberIndexEndpoint
 from .endpoints.organization_member_issues_assigned import OrganizationMemberIssuesAssignedEndpoint
@@ -99,6 +100,9 @@ urlpatterns = patterns(
     url(r'^organizations/(?P<organization_slug>[^\/]+)/activity/$',
         OrganizationActivityEndpoint.as_view(),
         name='sentry-api-0-organization-activity'),
+    url(r'^organizations/(?P<organization_slug>[^\/]+)/issues/new/$',
+        OrganizationIssuesNewEndpoint.as_view(),
+        name='sentry-api-0-organization-issues-new'),
     url(r'^organizations/(?P<organization_slug>[^\/]+)/members/$',
         OrganizationMemberIndexEndpoint.as_view(),
         name='sentry-api-0-organization-member-index'),
diff --git a/tests/sentry/api/endpoints/test_organization_issues_new.py b/tests/sentry/api/endpoints/test_organization_issues_new.py
new file mode 100644
index 0000000000..e353dfcaeb
--- /dev/null
+++ b/tests/sentry/api/endpoints/test_organization_issues_new.py
@@ -0,0 +1,24 @@
+from __future__ import absolute_import
+
+from sentry.testutils import APITestCase
+
+
+class OrganizationIssuesNewTest(APITestCase):
+    def test_simple(self):
+        user = self.create_user('foo@example.com')
+        org = self.create_organization(owner=user)
+        project1 = self.create_project(organization=org, name='foo')
+        project2 = self.create_project(organization=org, name='bar')
+        group1 = self.create_group(checksum='a' * 32, project=project1, score=10)
+        group2 = self.create_group(checksum='b' * 32, project=project2, score=5)
+
+        self.login_as(user=user)
+
+        url = '/api/0/organizations/{}/issues/new/'.format(
+            org.slug,
+        )
+        response = self.client.get(url, format='json')
+        assert response.status_code == 200
+        assert len(response.data) == 2
+        assert response.data[0]['id'] == str(group2.id)
+        assert response.data[1]['id'] == str(group1.id)
