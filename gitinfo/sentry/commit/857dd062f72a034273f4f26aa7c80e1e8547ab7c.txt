commit 857dd062f72a034273f4f26aa7c80e1e8547ab7c
Author: Jess MacQueen <jessmacqueen@gmail.com>
Date:   Mon Mar 5 15:21:54 2018 -0800

    fix(ui tests): Use component names instead of classnames when selecting elements

diff --git a/src/sentry/static/sentry/app/components/dropdownAutoComplete.jsx b/src/sentry/static/sentry/app/components/dropdownAutoComplete.jsx
index 08ac99ad18..b5c58e5da4 100644
--- a/src/sentry/static/sentry/app/components/dropdownAutoComplete.jsx
+++ b/src/sentry/static/sentry/app/components/dropdownAutoComplete.jsx
@@ -119,7 +119,7 @@ class DropdownAutoComplete extends React.Component {
                       />
                     </StyledInputContainer>
                     <div {...getMenuProps()}>
-                      <div className="autocomplete-items">
+                      <div className="ref-autocomplete-items">
                         {this.autoCompleteFilter(this.props.items, inputValue).map(
                           (item, index) =>
                             item.groupLabel ? (
diff --git a/tests/js/spec/views/organizationTeamProjects.spec.jsx b/tests/js/spec/views/organizationTeamProjects.spec.jsx
index fd1270ce7d..4384cda752 100644
--- a/tests/js/spec/views/organizationTeamProjects.spec.jsx
+++ b/tests/js/spec/views/organizationTeamProjects.spec.jsx
@@ -79,13 +79,12 @@ describe('OrganizationTeamProjects', function() {
       TestStubs.routerOrganizationContext()
     );
 
-    let add = wrapper.find('.button-label').first();
-    expect(add.text()).toBe('Add Project');
+    let add = wrapper.find('DropdownButton').first();
     add.simulate('click');
 
     // is there a better way to do this???
     let el = wrapper
-      .find('.autocomplete-items')
+      .find('.ref-autocomplete-items')
       .childAt(0)
       .childAt(0);
     el.simulate('click');
@@ -96,9 +95,8 @@ describe('OrganizationTeamProjects', function() {
 
     setTimeout(() => {
       wrapper.update();
-      let remove = wrapper.find('.flow-layout .button-label').at(1);
-
-      expect(remove.text()).toBe('Remove');
+      // find first project's remove button
+      let remove = wrapper.find('Button').at(1);
       remove.simulate('click');
 
       expect(deleteMock).toHaveBeenCalledTimes(1);
