commit bb07ac1ca967bb414a4210db72e83e9c095873ad
Author: Stephen Cefali <scefali@sentry.io>
Date:   Mon Mar 30 13:28:58 2020 -0700

    tests(ecosystem): acceptance tests integration directory (#17964)

diff --git a/src/sentry/static/sentry/app/routes.jsx b/src/sentry/static/sentry/app/routes.jsx
index 7bf91ad929..f0970a4db6 100644
--- a/src/sentry/static/sentry/app/routes.jsx
+++ b/src/sentry/static/sentry/app/routes.jsx
@@ -808,7 +808,7 @@ function routes() {
           path=":integrationSlug/"
           componentPromise={() =>
             import(
-              /* webpackChunkName: "ConfigureIntegration" */ 'app/views/organizationIntegrations/pluginDetailedView'
+              /* webpackChunkName: "PluginDetailedView" */ 'app/views/organizationIntegrations/pluginDetailedView'
             )
           }
           component={errorHandler(LazyLoad)}
@@ -822,7 +822,7 @@ function routes() {
           path=":integrationSlug"
           componentPromise={() =>
             import(
-              /* webpackChunkName: "ConfigureIntegration" */ 'app/views/organizationIntegrations/sentryAppDetailedView'
+              /* webpackChunkName: "SentryAppDetailedView" */ 'app/views/organizationIntegrations/sentryAppDetailedView'
             )
           }
           component={errorHandler(LazyLoad)}
@@ -846,7 +846,7 @@ function routes() {
         <IndexRoute
           componentPromise={() =>
             import(
-              /* webpackChunkName: "OrganizationIntegrations" */ 'app/views/organizationIntegrations/integrationListDirectory'
+              /* webpackChunkName: "IntegrationListDirectory" */ 'app/views/organizationIntegrations/integrationListDirectory'
             )
           }
           component={errorHandler(LazyLoad)}
@@ -856,7 +856,7 @@ function routes() {
           path=":integrationSlug"
           componentPromise={() =>
             import(
-              /* webpackChunkName: "ConfigureIntegration" */ 'app/views/organizationIntegrations/integrationDetailedView'
+              /* webpackChunkName: "IntegrationDetailedView" */ 'app/views/organizationIntegrations/integrationDetailedView'
             )
           }
           component={errorHandler(LazyLoad)}
diff --git a/src/sentry/static/sentry/app/views/organizationIntegrations/integrationDetailedView.tsx b/src/sentry/static/sentry/app/views/organizationIntegrations/integrationDetailedView.tsx
index b168d71b8b..37a5c35219 100644
--- a/src/sentry/static/sentry/app/views/organizationIntegrations/integrationDetailedView.tsx
+++ b/src/sentry/static/sentry/app/views/organizationIntegrations/integrationDetailedView.tsx
@@ -162,7 +162,7 @@ class IntegrationDetailedView extends AbstractIntegrationDetailedView<
       style: {marginLeft: space(1)},
       size,
       priority,
-      'data-test-id': 'add-button',
+      'data-test-id': 'install-button',
       disabled: disabledFromFeatures || !userHasAccess,
       organization,
     };
diff --git a/src/sentry/static/sentry/app/views/organizationIntegrations/integrationListDirectory.tsx b/src/sentry/static/sentry/app/views/organizationIntegrations/integrationListDirectory.tsx
index b7fab67a33..2e6fb34257 100644
--- a/src/sentry/static/sentry/app/views/organizationIntegrations/integrationListDirectory.tsx
+++ b/src/sentry/static/sentry/app/views/organizationIntegrations/integrationListDirectory.tsx
@@ -63,7 +63,7 @@ type State = {
 
 const TEXT_SEARCH_ANALYTICS_DEBOUNCE_IN_MS = 1000;
 
-export class OrganizationIntegrations extends AsyncComponent<
+export class IntegrationListDirectory extends AsyncComponent<
   Props & AsyncComponent['props'],
   State & AsyncComponent['state']
 > {
@@ -456,4 +456,4 @@ const EmptyResultsBody = styled('div')`
   padding-bottom: ${space(2)};
 `;
 
-export default withOrganization(OrganizationIntegrations);
+export default withOrganization(IntegrationListDirectory);
diff --git a/src/sentry/static/sentry/app/views/organizationIntegrations/pluginDetailedView.tsx b/src/sentry/static/sentry/app/views/organizationIntegrations/pluginDetailedView.tsx
index b453747aa5..3c5ae7cc86 100644
--- a/src/sentry/static/sentry/app/views/organizationIntegrations/pluginDetailedView.tsx
+++ b/src/sentry/static/sentry/app/views/organizationIntegrations/pluginDetailedView.tsx
@@ -137,7 +137,7 @@ class PluginDetailedView extends AbstractIntegrationDetailedView<
   renderTopButton(disabledFromFeatures: boolean, userHasAccess: boolean) {
     return (
       <AddButton
-        data-test-id="add-button"
+        data-test-id="install-button"
         disabled={disabledFromFeatures || !userHasAccess}
         onClick={this.handleAddToProject}
         size="small"
diff --git a/src/sentry/static/sentry/app/views/organizationIntegrations/sentryAppDetailedView.tsx b/src/sentry/static/sentry/app/views/organizationIntegrations/sentryAppDetailedView.tsx
index 22a578d93d..62e4a47f51 100644
--- a/src/sentry/static/sentry/app/views/organizationIntegrations/sentryAppDetailedView.tsx
+++ b/src/sentry/static/sentry/app/views/organizationIntegrations/sentryAppDetailedView.tsx
@@ -241,7 +241,7 @@ class SentryAppDetailedView extends AbstractIntegrationDetailedView<
         disabled={disabledFromFeatures || !userHasAccess}
         onClick={() => this.handleInstall()}
         style={{marginLeft: space(1)}}
-        data-test-id="install"
+        data-test-id="install-button"
       >
         {t('Accept & Install')}
       </InstallButton>
diff --git a/tests/acceptance/page_objects/organization_integration_settings.py b/tests/acceptance/page_objects/organization_integration_settings.py
index 474d921e9b..eb7fc84f07 100644
--- a/tests/acceptance/page_objects/organization_integration_settings.py
+++ b/tests/acceptance/page_objects/organization_integration_settings.py
@@ -1,78 +1,8 @@
 from __future__ import absolute_import
-from .base import BaseElement, BasePage, ButtonElement, ModalElement
+from .base import BasePage, ButtonElement, ModalElement
 
 
-class IntegrationProviderRowElement(BaseElement):
-    integration_name_selector = '[data-test-id="integration-name"]'
-
-    def __init__(self, provider, *args, **kwargs):
-        super(IntegrationProviderRowElement, self).__init__(*args, **kwargs)
-        self.provider = provider
-
-        self.install_button = ButtonElement(
-            element=self.element.find_element_by_css_selector('[role="button"]')
-        )
-
-    @classmethod
-    def get_selector(cls, provider_key):
-        return '[data-test-id="%s"]' % provider_key
-
-    @property
-    def installations(self):
-        return self.element.find_elements_by_css_selector(self.integration_name_selector)
-
-    def get_installation_with_name(self, name):
-        for installation in self.installations:
-            if installation.get_attribute("innerText") == name:
-                return installation
-        return None
-
-
-class InstallationElement(BaseElement):
-    configure_button_selector = '[data-test-id="integration-configure-button"]'
-    remove_button_selector = '[data-test-id="integration-remove-button"]'
-
-    def __init__(self, integration, *args, **kwargs):
-        super(InstallationElement, self).__init__(*args, **kwargs)
-        self.integration = integration
-        self.configure_button = ButtonElement(
-            element=self.element.find_element_by_css_selector(self.configure_button_selector)
-        )
-        self.remove_button = ButtonElement(
-            element=self.element.find_element_by_css_selector(self.remove_button_selector)
-        )
-
-
-class IntegrationDetailsModal(ModalElement):
-    title_selector = '[data-test-id="provider-name"]'
-    cancel_button_selector = '[data-test-id="cancel-button"]'
-    add_button_selector = '[data-test-id="add-button"]'
-
-    def __init__(self, provider, *args, **kwargs):
-        super(IntegrationDetailsModal, self).__init__(*args, **kwargs)
-        self.cancel_button = ButtonElement(
-            element=self.element.find_element_by_css_selector(self.cancel_button_selector)
-        )
-        self.add_button = ButtonElement(
-            element=self.element.find_element_by_css_selector(self.add_button_selector)
-        )
-        self.provider = provider
-
-    @property
-    def title(self):
-        return self.element.find_element_by_css_selector(self.title_selector).get_attribute(
-            "innerText"
-        )
-
-
-class IntegrationSetupWindowElement(ModalElement):
-    title_selector = ""
-
-    def fill_in_setup_form(self, installation_data):
-        pass
-
-
-class ExampleIntegrationSetupWindowElement(IntegrationSetupWindowElement):
+class ExampleIntegrationSetupWindowElement(ModalElement):
     name_field_selector = "name"
     submit_button_selector = '[type="submit"]'
 
@@ -88,31 +18,31 @@ class ExampleIntegrationSetupWindowElement(IntegrationSetupWindowElement):
         self.name.send_keys(installation_data[self.name_field_selector])
 
 
-class OrganizationIntegrationSettingsPage(BasePage):
-    modal_selector = ".modal-dialog"
+class OrganizationAbstractDetailViewPage(BasePage):
+    configurations_text = "Configurations"
 
-    def __init__(self, providers=None, *args, **kwargs):
-        super(OrganizationIntegrationSettingsPage, self).__init__(*args, **kwargs)
+    def click_install_button(self):
+        self.browser.click('[data-test-id="install-button"]')
 
-    def get_provider(self, provider):
-        selector = IntegrationProviderRowElement.get_selector(provider.key)
-        return IntegrationProviderRowElement(
-            provider=provider, element=self.browser.find_element_by_css_selector(selector)
-        )
+    # uninstalls any configuration (not a particular one)
+    def uninstall(self):
+        self.browser.click('[aria-label="Uninstall"]')
+        self.browser.click('[data-test-id="confirm-button"]')
 
-    def click_install_button(self, provider_element):
-        provider_element.install_button.click()
-        self.browser.wait_until(self.modal_selector)
-        integration_details_modal = IntegrationDetailsModal(
-            provider=provider_element.provider, element=self.browser
-        )
-        return integration_details_modal
+    def switch_to_configuration_view(self):
+        self.browser.find_element_by_link_text(self.configurations_text).click()
 
-    def click_through_integration_setup(
-        self, integration_details_modal, setup_window_cls, installation_data
-    ):
+
+class OrganizationIntegrationDetailViewPage(OrganizationAbstractDetailViewPage):
+    def click_through_integration_setup(self, setup_window_cls, installation_data):
         self.driver.switch_to_window(self.driver.window_handles[1])
         integration_setup_window = setup_window_cls(element=self.browser)
         integration_setup_window.fill_in_setup_form(installation_data)
         integration_setup_window.continue_button.click()
         self.driver.switch_to_window(self.driver.window_handles[0])
+
+
+class OrganizationSentryAppDetailViewPage(OrganizationAbstractDetailViewPage):
+    def uninstall(self):
+        self.browser.click('[data-test-id="sentry-app-uninstall"]')
+        self.browser.click('[data-test-id="confirm-button"]')
diff --git a/tests/acceptance/test_organization_integration.py b/tests/acceptance/test_organization_integration.py
deleted file mode 100644
index 04de97acb1..0000000000
--- a/tests/acceptance/test_organization_integration.py
+++ /dev/null
@@ -1,73 +0,0 @@
-from __future__ import absolute_import
-
-from exam import mock
-
-# from sentry.models import Integration
-from sentry.testutils import AcceptanceTestCase
-
-# from tests.acceptance.page_objects.organization_integration_settings import (
-#     OrganizationIntegrationSettingsPage,
-#     ExampleIntegrationSetupWindowElement,
-# )
-
-
-class OrganizationIntegrationAcceptanceTestCase(AcceptanceTestCase):
-    def setUp(self):
-        super(OrganizationIntegrationAcceptanceTestCase, self).setUp()
-        self.login_as(self.user)
-        self.integration_settings_path = "sentry-api-0-organization-integrations"
-
-    def load_page(self, url):
-        self.browser.get(url)
-        self.browser.wait_until_not(".loading-indicator")
-
-
-class OrganizationIntegrationSettingsTest(OrganizationIntegrationAcceptanceTestCase):
-    """
-    As a user(type?), I can setup, configure, and remove an integration.
-    """
-
-    # TODO(lb): Tests to be written
-    # test_setup_new_integration_with_repository
-    # test_setup_new_integration_with_issue_sync
-    # test_remove_existing_integration_installation
-    # test_update_legacy_integration
-    # test_user_permissions_for_integration_settings
-    # test_add_multiple_integrations_to_one_provider
-    # TODO(lb): check issues details page and see that integration shows in linked issues
-
-    def setUp(self):
-        super(OrganizationIntegrationSettingsTest, self).setUp()
-        self.org_integration_settings_path = u"/settings/{}/integrations/".format(
-            self.organization.slug
-        )
-
-        self.provider = mock.Mock()
-        self.provider.key = "example"
-        self.provider.name = "Example Installation"
-
-    # def test_can_create_new_integration(self):
-    #     self.load_page(self.org_integration_settings_path)
-    #     org_settings_page = OrganizationIntegrationSettingsPage(browser=self.browser)
-    #     provider_element = org_settings_page.get_provider(self.provider)
-
-    #     # assert installation rather than upgrade button
-    #     assert provider_element.install_button.label == "Install"
-
-    #     integration_details_modal = org_settings_page.click_install_button(provider_element)
-    #     assert integration_details_modal.add_button.label == "Add %s" % self.provider.key
-    #     assert integration_details_modal.title == "%s Integration" % self.provider.key.capitalize()
-    #     integration_details_modal.add_button.click()
-    #     org_settings_page.click_through_integration_setup(
-    #         integration_details_modal,
-    #         ExampleIntegrationSetupWindowElement,
-    #         {"name": self.provider.name},
-    #     )
-
-    #     # provider_element might be rerendered
-    #     provider_element = org_settings_page.get_provider(self.provider)
-    #     installation_element = provider_element.get_installation_with_name(self.provider.name)
-    #     assert installation_element
-    #     assert Integration.objects.filter(
-    #         provider=self.provider.key, external_id=self.provider.name
-    #     ).exists()
diff --git a/tests/acceptance/test_organization_integration_detail_view.py b/tests/acceptance/test_organization_integration_detail_view.py
new file mode 100644
index 0000000000..815160480e
--- /dev/null
+++ b/tests/acceptance/test_organization_integration_detail_view.py
@@ -0,0 +1,67 @@
+from __future__ import absolute_import
+
+from exam import mock
+
+from sentry.models import Integration
+from sentry.testutils import AcceptanceTestCase
+from tests.acceptance.page_objects.organization_integration_settings import (
+    ExampleIntegrationSetupWindowElement,
+    OrganizationIntegrationDetailViewPage,
+)
+
+
+class OrganizationIntegrationDetailView(AcceptanceTestCase):
+    """
+    As a developer, I can create an integration, install it, and uninstall it
+    """
+
+    def setUp(self):
+        super(OrganizationIntegrationDetailView, self).setUp()
+        self.login_as(self.user)
+
+    def load_page(self, slug, configuration_tab=False):
+        url = u"/settings/{}/integrations/{}/".format(self.organization.slug, slug)
+        if configuration_tab:
+            url += "?tab=configurations"
+        self.browser.get(url)
+        self.browser.wait_until_not(".loading-indicator")
+
+    def test_example_installation(self):
+        self.provider = mock.Mock()
+        self.provider.key = "example"
+        self.provider.name = "Example Installation"
+
+        self.load_page("example")
+        self.browser.snapshot("integrations - integration detail overview")
+
+        detail_view_page = OrganizationIntegrationDetailViewPage(browser=self.browser)
+        detail_view_page.click_install_button()
+        detail_view_page.click_through_integration_setup(
+            ExampleIntegrationSetupWindowElement, {"name": self.provider.name}
+        )
+
+        # provider_element might be rerendered
+        assert Integration.objects.filter(
+            provider=self.provider.key, external_id=self.provider.name
+        ).exists()
+
+        detail_view_page.switch_to_configuration_view()
+        assert self.browser.element_exists('[aria-label="Configure"]')
+
+    def test_uninstallation(self):
+        model = Integration.objects.create(
+            provider="slack",
+            external_id="some_slack",
+            name="Test Slack",
+            metadata={"domain_name": "slack-test.slack.com"},
+        )
+
+        model.add_organization(self.organization, self.user)
+        self.load_page("slack", configuration_tab=True)
+        self.browser.snapshot(name="integrations - integration detail one configuration")
+
+        detail_view_page = OrganizationIntegrationDetailViewPage(browser=self.browser)
+        assert self.browser.element_exists('[aria-label="Configure"]')
+        detail_view_page.uninstall()
+        assert not self.browser.element_exists('[aria-label="Configure"]')
+        self.browser.snapshot(name="integrations - integration detail no configurations")
diff --git a/tests/acceptance/test_organization_integration_directory.py b/tests/acceptance/test_organization_integration_directory.py
new file mode 100644
index 0000000000..787141c0d9
--- /dev/null
+++ b/tests/acceptance/test_organization_integration_directory.py
@@ -0,0 +1,15 @@
+from __future__ import absolute_import
+
+from sentry.testutils import AcceptanceTestCase
+
+
+class OrganizationIntegrationDirectoryTest(AcceptanceTestCase):
+    def setUp(self):
+        super(OrganizationIntegrationDirectoryTest, self).setUp()
+        self.login_as(self.user)
+
+    def test_all_integrations_list(self):
+        path = u"/settings/{}/integrations/".format(self.organization.slug)
+        self.browser.get(path)
+        self.browser.wait_until_not(".loading-indicator")
+        self.browser.snapshot("integrations - integration directory")
diff --git a/tests/acceptance/test_organization_integrations_settings.py b/tests/acceptance/test_organization_integrations_settings.py
deleted file mode 100644
index f814575b49..0000000000
--- a/tests/acceptance/test_organization_integrations_settings.py
+++ /dev/null
@@ -1,35 +0,0 @@
-from __future__ import absolute_import
-
-from sentry.models import Integration
-from sentry.testutils import AcceptanceTestCase
-from tests.sentry.plugins.testutils import register_mock_plugins, unregister_mock_plugins
-
-
-class OrganizationIntegrationSettingsTest(AcceptanceTestCase):
-    def setUp(self):
-        super(OrganizationIntegrationSettingsTest, self).setUp()
-        self.user = self.create_user("foo@example.com")
-        self.org = self.create_organization(name="Rowdy Tiger", owner=None)
-        self.team = self.create_team(organization=self.org, name="Mariachi Band")
-        self.project = self.create_project(organization=self.org, teams=[self.team], name="Bengal")
-        self.create_member(user=self.user, organization=self.org, role="owner", teams=[self.team])
-        self.model = Integration.objects.create(
-            provider="slack",
-            external_id="some_slack",
-            name="Test Slack",
-            metadata={"domain_name": "slack-test.slack.com"},
-        )
-
-        self.org_integration = self.model.add_organization(self.org, self.user)
-
-        register_mock_plugins()
-        self.login_as(self.user)
-
-    def tearDown(self):
-        unregister_mock_plugins()
-
-    def test_all_integrations_list(self):
-        path = u"/settings/{}/integrations/".format(self.org.slug)
-        self.browser.get(path)
-        self.browser.wait_until_not(".loading-indicator")
-        self.browser.snapshot("organization settings - all integrations")
diff --git a/tests/acceptance/test_organization_plugin_detail_view.py b/tests/acceptance/test_organization_plugin_detail_view.py
new file mode 100644
index 0000000000..c074ad18c9
--- /dev/null
+++ b/tests/acceptance/test_organization_plugin_detail_view.py
@@ -0,0 +1,56 @@
+from __future__ import absolute_import
+
+from exam import fixture
+
+from sentry.testutils import AcceptanceTestCase
+from tests.acceptance.page_objects.organization_integration_settings import (
+    OrganizationAbstractDetailViewPage,
+)
+from sentry_plugins.opsgenie.plugin import OpsGeniePlugin
+
+
+class OrganizationPluginDetailedView(AcceptanceTestCase):
+    @fixture
+    def plugin(self):
+        return OpsGeniePlugin()
+
+    def setUp(self):
+        super(OrganizationPluginDetailedView, self).setUp()
+        # need at least two projects
+        self.project = self.create_project(organization=self.organization)
+        self.create_project(organization=self.organization)
+        self.login_as(self.user)
+
+    def load_page(self, slug, configuration_tab=False):
+        url = u"/settings/{}/plugins/{}/".format(self.organization.slug, slug)
+        if configuration_tab:
+            url += "?tab=configurations"
+        self.browser.get(url)
+        self.browser.wait_until_not(".loading-indicator")
+
+    def test_opsgenie_add_to_project(self):
+        self.load_page("opsgenie")
+        self.browser.snapshot("integrations - plugin detail overview")
+
+        detail_view_page = OrganizationAbstractDetailViewPage(browser=self.browser)
+        detail_view_page.click_install_button()
+
+        self.browser.click('[id="react-select-2-option-0"]')
+        # check if we got to the configuration page with the form
+        self.browser.wait_until_not(".loading-indicator")
+        assert self.browser.element_exists('[id="id-api_key"]')
+
+    def test_uninstallation(self):
+        self.plugin.set_option("api_key", "7c8951d1", self.project)
+        self.plugin.set_option("alert_url", "https://api.opsgenie.com/v2/alerts", self.project)
+
+        self.load_page("opsgenie", configuration_tab=True)
+        self.browser.snapshot("integrations - plugin detail one configuration")
+
+        detail_view_page = OrganizationAbstractDetailViewPage(browser=self.browser)
+
+        assert self.browser.element_exists('[aria-label="Configure"]')
+        detail_view_page.uninstall()
+        self.browser.wait_until('[data-test-id="toast-success"]')
+        assert not self.browser.element_exists('[aria-label="Configure"]')
+        self.browser.snapshot("integrations - plugin detail no configurations")
diff --git a/tests/acceptance/test_organization_sentry_app_detailed_view.py b/tests/acceptance/test_organization_sentry_app_detailed_view.py
new file mode 100644
index 0000000000..a353bb17af
--- /dev/null
+++ b/tests/acceptance/test_organization_sentry_app_detailed_view.py
@@ -0,0 +1,51 @@
+from __future__ import absolute_import
+
+
+from sentry.testutils import AcceptanceTestCase
+from sentry.models import SentryAppInstallation
+from tests.acceptance.page_objects.organization_integration_settings import (
+    OrganizationSentryAppDetailViewPage,
+)
+
+
+class OrganizationSentryAppDetailedView(AcceptanceTestCase):
+    def setUp(self):
+        super(OrganizationSentryAppDetailedView, self).setUp()
+        self.create_project(organization=self.organization)
+        self.sentry_app = self.create_sentry_app(
+            organization=self.organization, published=True, verify_install=False
+        )
+        self.login_as(self.user)
+
+    def load_page(self, slug):
+        url = u"/settings/{}/sentry-apps/{}/".format(self.organization.slug, slug)
+        self.browser.get(url)
+        self.browser.wait_until_not(".loading-indicator")
+
+    def test_add_sentry_app(self):
+        self.load_page(self.sentry_app.slug)
+        self.browser.snapshot("integrations - sentry app detail uninstalled")
+
+        detail_view_page = OrganizationSentryAppDetailViewPage(browser=self.browser)
+        detail_view_page.click_install_button()
+
+        self.browser.wait_until('[data-test-id="toast-success"]')
+        assert SentryAppInstallation.objects.filter(
+            organization=self.organization, sentry_app=self.sentry_app
+        )
+
+    def test_uninstallation(self):
+        self.installation = self.create_sentry_app_installation(
+            slug=self.sentry_app.slug, organization=self.organization, user=self.user
+        )
+
+        self.load_page(self.sentry_app.slug)
+        self.browser.snapshot("integrations - sentry app detail installed")
+
+        detail_view_page = OrganizationSentryAppDetailViewPage(browser=self.browser)
+
+        detail_view_page.uninstall()
+        self.browser.wait_until('[data-test-id="toast-success"]')
+        assert not SentryAppInstallation.objects.filter(
+            organization=self.organization, sentry_app=self.sentry_app
+        )
