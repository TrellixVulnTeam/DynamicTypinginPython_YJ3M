commit d92e88f7a45cb66d1886e5e05e2ced8fa75acf04
Author: Armin Ronacher <armin.ronacher@active-4.com>
Date:   Fri Nov 25 13:50:33 2016 +0100

    Added test for on-hold flag saving

diff --git a/tests/sentry/tasks/test_store.py b/tests/sentry/tasks/test_store.py
index 6aed4e83e8..0e3dc5a75e 100644
--- a/tests/sentry/tasks/test_store.py
+++ b/tests/sentry/tasks/test_store.py
@@ -13,12 +13,19 @@ class BasicPreprocessorPlugin(Plugin2):
             del data['extra']
             return data
 
+        def put_on_hold(data):
+            data['on_hold'] = True
+            return data
+
         if data.get('platform') == 'mattlang':
             return [remove_extra, lambda x: None]
 
         if data.get('platform') == 'noop':
             return [lambda data: data]
 
+        if data.get('platform') == 'holdmeclose':
+            return [put_on_hold]
+
         return []
 
     def is_enabled(self, project=None):
@@ -113,3 +120,33 @@ class StoreTasksTest(PluginTestCase):
         mock_save_event.delay.assert_called_once_with(
             cache_key='e:1', data=None, start_time=1,
         )
+
+    @mock.patch('sentry.tasks.store.save_event')
+    @mock.patch('sentry.tasks.store.default_cache')
+    def test_process_event_on_hold(self, mock_default_cache, mock_save_event):
+        project = self.create_project()
+
+        data = {
+            'project': project.id,
+            'platform': 'holdmeclose',
+            'message': 'test',
+            'extra': {'foo': 'bar'},
+        }
+
+        mock_default_cache.get.return_value = data
+
+        process_event(cache_key='e:1', start_time=1)
+
+        mock_default_cache.set.assert_called_once_with(
+            'e:1', {
+                'project': project.id,
+                'platform': 'holdmeclose',
+                'message': 'test',
+                'extra': {'foo': 'bar'},
+                'on_hold': True,
+            }, 3600
+        )
+
+        mock_save_event.delay.assert_called_once_with(
+            cache_key='e:1', data=None, start_time=1,
+        )
