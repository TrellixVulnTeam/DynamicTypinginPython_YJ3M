commit 4ec085299a5ca5bfbb820c9d485c5c9feb8981d3
Author: Matej Minar <matej.minar@sentry.io>
Date:   Thu Apr 16 10:43:10 2020 +0200

    feat(ui): Add You have not set up releases cta (#18298)

diff --git a/src/sentry/static/sentry/app/views/releases/list/releaseLanding.tsx b/src/sentry/static/sentry/app/views/releases/list/releaseLanding.tsx
index 6395e77e64..8599ae7e30 100644
--- a/src/sentry/static/sentry/app/views/releases/list/releaseLanding.tsx
+++ b/src/sentry/static/sentry/app/views/releases/list/releaseLanding.tsx
@@ -33,6 +33,7 @@ const Illustration = styled(({data, className}: IllustrationProps) => (
 const cards = [
   {
     title: t("You Haven't Set Up Releases!"),
+    disclaimer: t('(you made no releases in 30 days)'),
     message: t(
       'Releases provide additional context, with rich commits, so you know which errors were addressed and which were introduced in a release'
     ),
diff --git a/src/sentry/static/sentry/app/views/releases/list/releaseLandingCard.jsx b/src/sentry/static/sentry/app/views/releases/list/releaseLandingCard.jsx
index 03f29509cc..673d7aa216 100644
--- a/src/sentry/static/sentry/app/views/releases/list/releaseLandingCard.jsx
+++ b/src/sentry/static/sentry/app/views/releases/list/releaseLandingCard.jsx
@@ -36,6 +36,7 @@ class ReleaseLandingCard extends React.Component {
 
         <StyledBox>
           <h3>{card.title}</h3>
+          {card.disclaimer && <Disclaimer>{card.disclaimer}</Disclaimer>}
           <p>{card.message}</p>
           {finalStep ? (
             <Button
@@ -93,4 +94,11 @@ const CardComponentContainer = styled('div')`
   }
 `;
 
+const Disclaimer = styled('small')`
+  display: block;
+  margin-top: -${space(3)};
+  margin-bottom: ${space(3)};
+  font-size: ${p => p.theme.fontSizeSmall};
+`;
+
 export default ReleaseLandingCard;
diff --git a/src/sentry/static/sentry/app/views/releasesV2/detail/overview/chart/healthChart.tsx b/src/sentry/static/sentry/app/views/releasesV2/detail/overview/chart/healthChart.tsx
index f13ba75c0e..0f6ec6eef4 100644
--- a/src/sentry/static/sentry/app/views/releasesV2/detail/overview/chart/healthChart.tsx
+++ b/src/sentry/static/sentry/app/views/releasesV2/detail/overview/chart/healthChart.tsx
@@ -63,6 +63,9 @@ class HealthChart extends React.Component<Props> {
           },
         };
       case YAxis.SESSION_DURATION:
+        return {
+          scale: true,
+        };
       case YAxis.SESSIONS:
       case YAxis.USERS:
       default:
diff --git a/src/sentry/static/sentry/app/views/releasesV2/list/index.tsx b/src/sentry/static/sentry/app/views/releasesV2/list/index.tsx
index 369ef16cfb..34f228811b 100644
--- a/src/sentry/static/sentry/app/views/releasesV2/list/index.tsx
+++ b/src/sentry/static/sentry/app/views/releasesV2/list/index.tsx
@@ -24,8 +24,10 @@ import ReleaseCard from 'app/views/releasesV2/list/releaseCard';
 import GlobalSelectionHeader from 'app/components/organizations/globalSelectionHeader';
 import {getRelativeSummary} from 'app/components/organizations/timeRangeSelector/utils';
 import {DEFAULT_STATS_PERIOD} from 'app/constants';
+import {defined} from 'app/utils';
 
 import ReleaseListSortOptions from './releaseListSortOptions';
+import ReleasePromo from './releasePromo';
 
 type RouteParams = {
   orgId: string;
@@ -137,7 +139,8 @@ class ReleasesList extends AsyncView<Props, State> {
   }
 
   renderEmptyMessage() {
-    const {location} = this.props;
+    const {location, organization} = this.props;
+    const {statsPeriod} = location.query;
     const searchQuery = this.getQuery();
 
     if (searchQuery && searchQuery.length) {
@@ -150,7 +153,7 @@ class ReleasesList extends AsyncView<Props, State> {
 
     if (this.getSort() !== 'date') {
       const relativePeriod = getRelativeSummary(
-        location.query.statsPeriod || DEFAULT_STATS_PERIOD
+        statsPeriod || DEFAULT_STATS_PERIOD
       ).toLowerCase();
 
       return (
@@ -160,7 +163,11 @@ class ReleasesList extends AsyncView<Props, State> {
       );
     }
 
-    return <EmptyStateWarning small>{t('There are no releases.')}</EmptyStateWarning>;
+    if (defined(statsPeriod) && statsPeriod !== '14d') {
+      return <EmptyStateWarning small>{t('There are no releases.')}</EmptyStateWarning>;
+    }
+
+    return <ReleasePromo orgSlug={organization.slug} />;
   }
 
   renderInnerBody() {
diff --git a/src/sentry/static/sentry/app/views/releasesV2/list/releasePromo.tsx b/src/sentry/static/sentry/app/views/releasesV2/list/releasePromo.tsx
new file mode 100644
index 0000000000..fac4b25e80
--- /dev/null
+++ b/src/sentry/static/sentry/app/views/releasesV2/list/releasePromo.tsx
@@ -0,0 +1,39 @@
+import React from 'react';
+
+import {t} from 'app/locale';
+import AsyncView from 'app/views/asyncView';
+import EmptyStateWarning from 'app/components/emptyStateWarning';
+import {Panel} from 'app/components/panels';
+import ReleaseLanding from 'app/views/releases/list/releaseLanding';
+
+type Props = {
+  orgSlug: string;
+} & AsyncView['props'];
+
+class ReleasePromo extends AsyncView<Props> {
+  // if there are no releases in the last 30 days, we want to show releases promo
+  getEndpoints(): ReturnType<AsyncView['getEndpoints']> {
+    const {orgSlug} = this.props;
+
+    const query = {
+      per_page: 1,
+      summaryStatsPeriod: '30d',
+    };
+
+    return [['releases', `/organizations/${orgSlug}/releases/`, {query}]];
+  }
+
+  renderBody() {
+    if (this.state.releases.length === 0) {
+      return (
+        <Panel>
+          <ReleaseLanding />
+        </Panel>
+      );
+    }
+
+    return <EmptyStateWarning small>{t('There are no releases.')}</EmptyStateWarning>;
+  }
+}
+
+export default ReleasePromo;
diff --git a/tests/js/spec/views/releasesV2/list/index.spec.jsx b/tests/js/spec/views/releasesV2/list/index.spec.jsx
index c31ed757ab..02ba7166eb 100644
--- a/tests/js/spec/views/releasesV2/list/index.spec.jsx
+++ b/tests/js/spec/views/releasesV2/list/index.spec.jsx
@@ -70,6 +70,14 @@ describe('ReleasesV2List', function() {
       routerContext
     );
     expect(wrapper.find('StyledPanel')).toHaveLength(0);
+    expect(wrapper.find('ReleasePromo').text()).toContain("You Haven't Set Up Releases!");
+
+    location = {query: {statsPeriod: '30d'}};
+    wrapper = mountWithTheme(
+      <ReleaseList {...props} location={location} />,
+      routerContext
+    );
+    expect(wrapper.find('StyledPanel')).toHaveLength(0);
     expect(wrapper.find('EmptyMessage').text()).toEqual('There are no releases.');
 
     location = {query: {query: 'abc'}};
