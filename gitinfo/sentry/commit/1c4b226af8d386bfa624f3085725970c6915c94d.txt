commit 1c4b226af8d386bfa624f3085725970c6915c94d
Author: Priscila Oliveira <priscilawebdev@gmail.com>
Date:   Mon May 11 15:32:35 2020 +0200

    fix(ui): Fixed OpenInContextLine Icon alignment   (#18716)

diff --git a/src/sentry/static/sentry/app/components/events/interfaces/frame/frameContext.tsx b/src/sentry/static/sentry/app/components/events/interfaces/frame/frameContext.tsx
index 97f54f0c45..062fbdc3d3 100644
--- a/src/sentry/static/sentry/app/components/events/interfaces/frame/frameContext.tsx
+++ b/src/sentry/static/sentry/app/components/events/interfaces/frame/frameContext.tsx
@@ -11,7 +11,7 @@ import FrameVariables from 'app/components/events/interfaces/frameVariables';
 import ErrorBoundary from 'app/components/errorBoundary';
 import {Assembly} from 'app/components/events/interfaces/assembly';
 import {parseAssembly} from 'app/components/events/interfaces/utils';
-import OpenInContextLine from 'app/components/events/interfaces/openInContextLine';
+import {OpenInContextLine} from 'app/components/events/interfaces/openInContextLine';
 
 import {Frame} from './types';
 
diff --git a/src/sentry/static/sentry/app/components/events/interfaces/openInContextLine.jsx b/src/sentry/static/sentry/app/components/events/interfaces/openInContextLine.jsx
deleted file mode 100644
index 8aeaf43911..0000000000
--- a/src/sentry/static/sentry/app/components/events/interfaces/openInContextLine.jsx
+++ /dev/null
@@ -1,109 +0,0 @@
-import PropTypes from 'prop-types';
-import React from 'react';
-import styled from '@emotion/styled';
-
-import SentryAppIcon from 'app/components/sentryAppIcon';
-import {addQueryParamsToExistingUrl} from 'app/utils/queryString';
-import space from 'app/styles/space';
-import {t} from 'app/locale';
-import {recordInteraction} from 'app/utils/recordSentryAppInteraction';
-
-class OpenInContextLine extends React.Component {
-  static propTypes = {
-    lineNo: PropTypes.number,
-    filename: PropTypes.string,
-    components: PropTypes.array,
-  };
-
-  constructor(props) {
-    super(props);
-    this.state = {
-      loading: false,
-      error: false,
-    };
-  }
-
-  getUrl(component) {
-    const {filename, lineNo} = this.props;
-
-    const queryParams = {
-      lineNo,
-      filename,
-    };
-    return addQueryParamsToExistingUrl(component.schema.url, queryParams);
-  }
-
-  renderOpenInLink = component => {
-    const url = this.getUrl(component);
-    const {slug} = component.sentryApp;
-
-    const recordStacktraceLinkInteraction = () => {
-      recordInteraction(slug, 'sentry_app_component_interacted', {
-        componentType: 'stacktrace-link',
-      });
-    };
-
-    return (
-      <OpenInLink
-        key={component.uuid}
-        data-test-id={`stacktrace-link-${slug}`}
-        href={url}
-        onClick={recordStacktraceLinkInteraction}
-        onContextMenu={recordStacktraceLinkInteraction}
-      >
-        <OpenInIcon slug={slug} />
-        <OpenInName>{t(`${component.sentryApp.name}`)}</OpenInName>
-      </OpenInLink>
-    );
-  };
-
-  render() {
-    const {components} = this.props;
-    return (
-      <OpenInContainer>
-        <span>{t('Open this line in:')}</span>
-        {components.map(this.renderOpenInLink)}
-      </OpenInContainer>
-    );
-  }
-}
-
-export default OpenInContextLine;
-
-const OpenInContainer = styled('div')`
-  font-family: ${p => p.theme.text.family};
-  font-size: 13px;
-  padding: 3px;
-  border-bottom: 1px solid ${p => p.theme.borderLight};
-  background-color: white;
-  color: ${p => p.theme.purple2};
-  box-shadow: 0 1px 0 0 rgba(0, 0, 0, 0.05);
-  overflow: auto;
-  white-space: nowrap;
-`;
-
-const OpenInIcon = styled(SentryAppIcon)`
-  vertical-align: text-top;
-  height: 15px;
-  width: 15px;
-  margin-left: ${space(1)};
-  margin-right: 4px;
-`;
-
-const OpenInLink = styled('a')`
-  color: ${p => p.theme.gray2};
-  cursor: pointer;
-  margin-left: 5px;
-  &:not(:last-child):after {
-    border-right: 1px solid ${p => p.theme.gray1};
-    content: '';
-    height: 60%;
-    margin-top: 15%;
-    margin-left: 10px;
-  }
-`;
-
-const OpenInName = styled('span')`
-  font-weight: bold;
-  color: ${p => p.theme.gray3};
-`;
diff --git a/src/sentry/static/sentry/app/components/events/interfaces/openInContextLine.tsx b/src/sentry/static/sentry/app/components/events/interfaces/openInContextLine.tsx
new file mode 100644
index 0000000000..04dd861cc8
--- /dev/null
+++ b/src/sentry/static/sentry/app/components/events/interfaces/openInContextLine.tsx
@@ -0,0 +1,85 @@
+import React from 'react';
+import styled from '@emotion/styled';
+
+import {SentryAppIcon} from 'app/components/sentryAppIcon';
+import {addQueryParamsToExistingUrl} from 'app/utils/queryString';
+import space from 'app/styles/space';
+import {t} from 'app/locale';
+import {recordInteraction} from 'app/utils/recordSentryAppInteraction';
+import Link from 'app/components/links/link';
+import {SentryAppComponent} from 'app/types';
+
+type Props = {
+  lineNo: number;
+  filename: string;
+  components: Array<SentryAppComponent>;
+};
+
+const OpenInContextLine = ({lineNo, filename, components}: Props) => {
+  const handleRecordInteraction = (
+    slug: SentryAppComponent['sentryApp']['slug']
+  ) => () => {
+    recordInteraction(slug, 'sentry_app_component_interacted', {
+      componentType: 'stacktrace-link',
+    });
+  };
+
+  const getUrl = (url: SentryAppComponent['schema']['url']) => {
+    return addQueryParamsToExistingUrl(url, {lineNo, filename});
+  };
+
+  return (
+    <OpenInContainer columnQuantity={components.length + 1}>
+      <div>{t('Open this line in:')}</div>
+      {components.map(component => {
+        const url = getUrl(component.schema.url);
+        const {slug} = component.sentryApp;
+        const onClickRecordInteraction = handleRecordInteraction(slug);
+        return (
+          <OpenInLink
+            key={component.uuid}
+            data-test-id={`stacktrace-link-${slug}`}
+            to={url}
+            onClick={onClickRecordInteraction}
+            onContextMenu={onClickRecordInteraction}
+          >
+            <SentryAppIcon slug={slug} />
+            <OpenInName>{t(`${component.sentryApp.name}`)}</OpenInName>
+          </OpenInLink>
+        );
+      })}
+    </OpenInContainer>
+  );
+};
+
+export {OpenInContextLine};
+
+const OpenInContainer = styled('div')<{columnQuantity: number}>`
+  position: relative;
+  z-index: 1;
+  display: grid;
+  grid-template-columns: repeat(${p => p.columnQuantity}, max-content);
+  grid-gap: ${space(1)};
+  color: ${p => p.theme.purple2};
+  background-color: ${p => p.theme.white};
+  font-family: ${p => p.theme.text.family};
+  border-bottom: 1px solid ${p => p.theme.borderLight};
+  margin: 0 -${space(3)};
+  padding: ${space(0.25)} ${space(3)};
+  box-shadow: ${p => p.theme.dropShadowLightest};
+  overflow: auto;
+  white-space: nowrap;
+`;
+
+const OpenInLink = styled(Link)`
+  display: inline-grid;
+  align-items: center;
+  grid-template-columns: max-content auto;
+  grid-gap: ${space(0.5)};
+  color: ${p => p.theme.gray2};
+`;
+
+const OpenInName = styled('strong')`
+  color: ${p => p.theme.gray3};
+  font-weight: 700;
+`;
diff --git a/src/sentry/static/sentry/app/components/group/sentryAppExternalIssueActions.tsx b/src/sentry/static/sentry/app/components/group/sentryAppExternalIssueActions.tsx
index 536371dcfa..865be27fef 100644
--- a/src/sentry/static/sentry/app/components/group/sentryAppExternalIssueActions.tsx
+++ b/src/sentry/static/sentry/app/components/group/sentryAppExternalIssueActions.tsx
@@ -8,7 +8,7 @@ import withApi from 'app/utils/withApi';
 import InlineSvg from 'app/components/inlineSvg';
 import {addSuccessMessage, addErrorMessage} from 'app/actionCreators/indicator';
 import {IntegrationLink} from 'app/components/issueSyncListElement';
-import SentryAppIcon from 'app/components/sentryAppIcon';
+import {SentryAppIcon} from 'app/components/sentryAppIcon';
 import SentryAppExternalIssueForm from 'app/components/group/sentryAppExternalIssueForm';
 import NavTabs from 'app/components/navTabs';
 import {t, tct} from 'app/locale';
diff --git a/src/sentry/static/sentry/app/components/sentryAppIcon.tsx b/src/sentry/static/sentry/app/components/sentryAppIcon.tsx
index e6bf9fff63..0ef90ca4a9 100644
--- a/src/sentry/static/sentry/app/components/sentryAppIcon.tsx
+++ b/src/sentry/static/sentry/app/components/sentryAppIcon.tsx
@@ -1,27 +1,23 @@
 import React from 'react';
-import PropTypes from 'prop-types';
 
+import {SentryAppComponent} from 'app/types';
 import {IconClickup, IconClubhouse, IconRookout, IconGeneric} from 'app/icons';
 
 type Props = {
-  slug: string;
+  slug: SentryAppComponent['sentryApp']['slug'];
 };
 
-export default class SentryAppIcon extends React.Component<Props> {
-  static propTypes = {
-    slug: PropTypes.string.isRequired,
-  };
-
-  render() {
-    switch (this.props.slug) {
-      case 'clickup':
-        return <IconClickup size="md" />;
-      case 'clubhouse':
-        return <IconClubhouse size="md" />;
-      case 'rookout':
-        return <IconRookout size="md" />;
-      default:
-        return <IconGeneric size="md" />;
-    }
+const SentryAppIcon = ({slug}: Props) => {
+  switch (slug) {
+    case 'clickup':
+      return <IconClickup size="md" />;
+    case 'clubhouse':
+      return <IconClubhouse size="md" />;
+    case 'rookout':
+      return <IconRookout size="md" />;
+    default:
+      return <IconGeneric size="md" />;
   }
-}
+};
+
+export {SentryAppIcon};
diff --git a/src/sentry/static/sentry/app/types/index.tsx b/src/sentry/static/sentry/app/types/index.tsx
index fe57954ee1..6fc83cffc3 100644
--- a/src/sentry/static/sentry/app/types/index.tsx
+++ b/src/sentry/static/sentry/app/types/index.tsx
@@ -726,6 +726,8 @@ export type SentryAppSchemaIssueLink = {
 export type SentryAppSchemaStacktraceLink = {
   type: 'stacktrace-link';
   uri: string;
+  url: string;
+  params?: Array<string>;
 };
 
 export type SentryAppSchemaElement =
@@ -949,10 +951,10 @@ export type MemberRole = {
 export type SentryAppComponent = {
   uuid: string;
   type: 'issue-link' | 'alert-rule-action' | 'issue-media' | 'stacktrace-link';
-  schema: SentryAppSchemaIssueLink;
+  schema: SentryAppSchemaStacktraceLink;
   sentryApp: {
     uuid: string;
-    slug: string;
+    slug: 'clickup' | 'clubhouse' | 'rookout';
     name: string;
   };
 };
diff --git a/tests/js/spec/components/events/interfaces/openInContextLine.spec.jsx b/tests/js/spec/components/events/interfaces/openInContextLine.spec.jsx
index ac7fc07f4f..b6f9712bd9 100644
--- a/tests/js/spec/components/events/interfaces/openInContextLine.spec.jsx
+++ b/tests/js/spec/components/events/interfaces/openInContextLine.spec.jsx
@@ -2,7 +2,7 @@ import React from 'react';
 
 import {mountWithTheme} from 'sentry-test/enzyme';
 import {addQueryParamsToExistingUrl} from 'app/utils/queryString';
-import OpenInContextLine from 'app/components/events/interfaces/openInContextLine';
+import {OpenInContextLine} from 'app/components/events/interfaces/openInContextLine';
 
 describe('OpenInContextLine', function() {
   const filename = '/sentry/app.py';
@@ -59,13 +59,14 @@ describe('OpenInContextLine', function() {
         filename,
       };
       const url = addQueryParamsToExistingUrl(baseUrl, queryParams);
-      expect(wrapper.find('a[data-test-id="stacktrace-link-foo"]').prop('href')).toEqual(
-        url
-      );
-      expect(wrapper.find('a[data-test-id="stacktrace-link-foo"]').text()).toEqual('Foo');
-      expect(wrapper.find('a[data-test-id="stacktrace-link-tesla"]').text()).toEqual(
-        'Tesla'
+      const stacktraceLinkFoo = wrapper.find(
+        'OpenInLink[data-test-id="stacktrace-link-foo"]'
       );
+      expect(stacktraceLinkFoo.prop('to')).toEqual(url);
+      expect(stacktraceLinkFoo.text()).toEqual('Foo');
+      expect(
+        wrapper.find('OpenInLink[data-test-id="stacktrace-link-tesla"]').text()
+      ).toEqual('Tesla');
     });
   });
 });
