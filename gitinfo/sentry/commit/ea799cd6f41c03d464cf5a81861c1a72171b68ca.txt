commit ea799cd6f41c03d464cf5a81861c1a72171b68ca
Author: Dan Fuller <dfuller@sentry.io>
Date:   Wed Dec 19 18:16:29 2018 -0800

    feat(api): Add list of features to ProjectSummarySerializer
    
    Fixes APP-934

diff --git a/src/sentry/api/serializers/models/project.py b/src/sentry/api/serializers/models/project.py
index a0d909fc36..63dd56be6a 100644
--- a/src/sentry/api/serializers/models/project.py
+++ b/src/sentry/api/serializers/models/project.py
@@ -155,7 +155,7 @@ class ProjectSerializer(Serializer):
                 result[item]['stats'] = stats[item.id]
         return result
 
-    def serialize(self, obj, attrs, user):
+    def get_feature_list(self, obj, user):
         from sentry import features
         from sentry.features.base import ProjectFeature
 
@@ -172,6 +172,10 @@ class ProjectSerializer(Serializer):
 
         if obj.flags.has_releases:
             feature_list.add('releases')
+        return feature_list
+
+    def serialize(self, obj, attrs, user):
+        feature_list = self.get_feature_list(obj, user)
 
         status_label = STATUS_LABELS.get(obj.status, 'unknown')
 
@@ -298,6 +302,7 @@ class ProjectSummarySerializer(ProjectWithTeamSerializer):
         return attrs
 
     def serialize(self, obj, attrs, user):
+        feature_list = self.get_feature_list(obj, user)
         context = {
             'team': attrs['teams'][0] if attrs['teams'] else None,
             'teams': attrs['teams'],
@@ -308,6 +313,7 @@ class ProjectSummarySerializer(ProjectWithTeamSerializer):
             'isMember': attrs['is_member'],
             'hasAccess': attrs['has_access'],
             'dateCreated': obj.date_added,
+            'features': feature_list,
             'firstEvent': obj.first_event,
             'platform': obj.platform,
             'platforms': attrs['platforms'],
diff --git a/tests/sentry/api/serializers/test_project.py b/tests/sentry/api/serializers/test_project.py
index edd22ece48..972b3058dc 100644
--- a/tests/sentry/api/serializers/test_project.py
+++ b/tests/sentry/api/serializers/test_project.py
@@ -155,6 +155,8 @@ class ProjectSummarySerializerTest(TestCase):
         organization = self.create_organization(owner=user)
         team = self.create_team(organization=organization)
         project = self.create_project(teams=[team], organization=organization, name='foo')
+        project.flags.has_releases = True
+        project.save()
 
         release = Release.objects.create(
             organization_id=organization.id,
@@ -182,6 +184,13 @@ class ProjectSummarySerializerTest(TestCase):
 
         result = serialize(project, user, ProjectSummarySerializer())
 
+        assert result['id'] == six.text_type(project.id)
+        assert result['name'] == project.name
+        assert result['slug'] == project.slug
+        assert result['firstEvent'] == project.first_event
+        assert 'releases' in result['features']
+        assert result['platform'] == project.platform
+
         assert result['latestDeploys'] == {
             'production': {'dateFinished': date, 'version': '1'}
         }
