commit 2b8d6004bc8b3120f2d20061d23e6df13f12aef3
Author: Lyn Nagara <lyn.nagara@gmail.com>
Date:   Mon Jun 17 11:32:50 2019 -0700

    fix(events-v2): Add error/csp conditions to tabs (#13697)
    
    This adds the error/csp filtering to those tabs. Previously the data on
    these two tabs was exactly the same.

diff --git a/src/sentry/static/sentry/app/views/organizationEventsV2/data.jsx b/src/sentry/static/sentry/app/views/organizationEventsV2/data.jsx
index 80078a6523..f1618d4194 100644
--- a/src/sentry/static/sentry/app/views/organizationEventsV2/data.jsx
+++ b/src/sentry/static/sentry/app/views/organizationEventsV2/data.jsx
@@ -40,6 +40,7 @@ export const ALL_VIEWS = deepFreeze([
       fields: ['error', 'event_count', 'user_count', 'project', 'last_seen'],
       groupby: ['issue.id', 'project.id'],
       orderby: ['-last_seen', '-issue.id'],
+      query: 'event.type:error',
     },
     tags: ['error.type', 'project.name'],
   },
@@ -50,6 +51,7 @@ export const ALL_VIEWS = deepFreeze([
       fields: ['csp', 'event_count', 'user_count', 'project', 'last_seen'],
       groupby: ['issue.id', 'project.id'],
       orderby: ['-last_seen', '-issue.id'],
+      query: 'event.type:csp',
     },
     tags: [
       'project.name',
diff --git a/src/sentry/static/sentry/app/views/organizationEventsV2/utils.jsx b/src/sentry/static/sentry/app/views/organizationEventsV2/utils.jsx
index 015755f36e..904d75b7ad 100644
--- a/src/sentry/static/sentry/app/views/organizationEventsV2/utils.jsx
+++ b/src/sentry/static/sentry/app/views/organizationEventsV2/utils.jsx
@@ -55,6 +55,14 @@ export function getQuery(view, location) {
   data.groupby = groupby;
   data.orderby = view.data.orderby;
   data.per_page = DEFAULT_PER_PAGE;
+
+  if (view.data.query) {
+    if (data.query) {
+      data.query = `${data.query} ${view.data.query}`;
+    } else {
+      data.query = view.data.query;
+    }
+  }
   return data;
 }
 
diff --git a/tests/js/spec/views/organizationEventsV2/utils.spec.jsx b/tests/js/spec/views/organizationEventsV2/utils.spec.jsx
index 2366d86f3c..884e7378f6 100644
--- a/tests/js/spec/views/organizationEventsV2/utils.spec.jsx
+++ b/tests/js/spec/views/organizationEventsV2/utils.spec.jsx
@@ -40,6 +40,18 @@ describe('getQuery()', function() {
       'issue.id',
     ]);
   });
+
+  it('appends any additional conditions defined for view', function() {
+    const view = {
+      id: 'test',
+      name: 'test view',
+      data: {fields: ['id'], query: 'event.type:csp'},
+      tags: [],
+    };
+
+    expect(getQuery(view, {}).query).toEqual('event.type:csp');
+    expect(getQuery(view, {query: {query: 'test'}}).query).toEqual('test event.type:csp');
+  });
 });
 
 describe('eventTagSearchUrl()', function() {
