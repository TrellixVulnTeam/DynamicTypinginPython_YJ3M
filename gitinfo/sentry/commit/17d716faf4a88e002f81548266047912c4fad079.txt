commit 17d716faf4a88e002f81548266047912c4fad079
Author: Armin Ronacher <armin.ronacher@active-4.com>
Date:   Mon Jan 28 10:59:20 2019 +0100

    feat: Added support for random opt-in (#11738)

diff --git a/src/sentry/event_manager.py b/src/sentry/event_manager.py
index a094cca337..2c9483d1a2 100644
--- a/src/sentry/event_manager.py
+++ b/src/sentry/event_manager.py
@@ -9,6 +9,7 @@ from __future__ import absolute_import, print_function
 import logging
 import os
 import six
+import random
 import jsonschema
 
 from datetime import datetime, timedelta
@@ -461,9 +462,12 @@ class EventManager(object):
             if self._project.id in options.get('store.projects-normalize-in-rust-opt-in'):
                 return True
             opt_in_rate = options.get('store.projects-normalize-in-rust-percent-opt-in')
-            if opt_in_rate > 0.0:
-                bucket = ((self._project.id * 2654435761) % (2 ** 32)) % 1000
-                return bucket <= (opt_in_rate * 1000)
+            if opt_in_rate != 0:
+                if opt_in_rate > 0.0:
+                    bucket = ((self._project.id * 2654435761) % (2 ** 32)) % 1000
+                    return bucket <= (opt_in_rate * 1000)
+                else:
+                    return random.random() < -opt_in_rate
 
         return ENABLE_RUST
 
diff --git a/src/sentry/options/defaults.py b/src/sentry/options/defaults.py
index f619bd84a4..c6aa3b6593 100644
--- a/src/sentry/options/defaults.py
+++ b/src/sentry/options/defaults.py
@@ -159,4 +159,6 @@ register('store.process-in-kafka', type=Bool, default=False)
 register('store.kafka-sample-rate', default=0.0)
 register('store.projects-normalize-in-rust-opt-in', type=Sequence, default=[])
 register('store.projects-normalize-in-rust-opt-out', type=Sequence, default=[])
+# positive value means stable opt-in in the range 0.0 to 1.0, negative value
+# means random opt-in with the same range.
 register('store.projects-normalize-in-rust-percent-opt-in', default=0.0)
