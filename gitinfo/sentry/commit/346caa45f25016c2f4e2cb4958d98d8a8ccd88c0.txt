commit 346caa45f25016c2f4e2cb4958d98d8a8ccd88c0
Author: Armin Ronacher <armin.ronacher@active-4.com>
Date:   Tue May 30 23:11:37 2017 +0200

    Create releases if missing in JS code path.
    
    For cases where stacktrace processing activates for events that never
    had a release created we currently do not associate releases at all.
    This was shown to be an issue after we added distribution support
    which now fails on missing releases.
    
    This fixes SENTRY-3BN

diff --git a/src/sentry/lang/javascript/processor.py b/src/sentry/lang/javascript/processor.py
index 1570cc5dbf..1f381e704d 100644
--- a/src/sentry/lang/javascript/processor.py
+++ b/src/sentry/lang/javascript/processor.py
@@ -23,7 +23,7 @@ except ImportError:
 
 from sentry import http
 from sentry.interfaces.stacktrace import Stacktrace
-from sentry.models import EventError, Release, ReleaseFile
+from sentry.models import EventError, ReleaseFile
 from sentry.utils.cache import cache
 from sentry.utils.files import compress_file
 from sentry.utils.hashlib import md5_text
@@ -491,13 +491,10 @@ class JavaScriptStacktraceProcessor(StacktraceProcessor):
                          'fetch remote source', self.data['event_id'])
             return False
 
-        if self.data.get('release'):
-            self.release = Release.get(
-                project=self.project,
-                version=self.data['release'],
-            )
-            if self.data.get('dist'):
-                self.dist = self.release.get_dist(self.data['dist'])
+        self.release = self.get_release(create=True)
+        if self.data.get('dist') and self.release:
+            self.dist = self.release.get_dist(self.data['dist'])
+
         self.populate_source_cache(frames)
         return True
 
diff --git a/src/sentry/stacktraces.py b/src/sentry/stacktraces.py
index 18ee7ffa90..e10445546a 100644
--- a/src/sentry/stacktraces.py
+++ b/src/sentry/stacktraces.py
@@ -2,10 +2,11 @@ from __future__ import absolute_import
 
 import logging
 import hashlib
+from datetime import datetime
 
 from collections import namedtuple
 
-from sentry.models import Project
+from sentry.models import Project, Release
 from sentry.utils.safe import safe_execute
 from sentry.utils.cache import cache
 
@@ -120,6 +121,30 @@ class StacktraceProcessor(object):
     def close(self):
         pass
 
+    def get_release(self, create=False):
+        """Convenient helper to return the release for the current data
+        and optionally creates the release if it's missing.  In case there
+        is no release info it will return `None`.
+        """
+        release = self.data.get('release')
+        if not release:
+            return None
+        if not create:
+            return Release.get(
+                project=self.project,
+                version=self.data['release']
+            )
+        timestamp = self.data.get('timestamp')
+        if timestamp is not None:
+            date = datetime.fromtimestamp(timestamp)
+        else:
+            date = None
+        return Release.get_or_create(
+            project=self.project,
+            version=self.data['release'],
+            date_added=date,
+        )
+
     def handles_frame(self, frame, stacktrace_info):
         """Returns true if this processor can handle this frame.  This is the
         earliest check and operates on a raw frame and stacktrace info.  If
