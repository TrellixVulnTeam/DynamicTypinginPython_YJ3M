commit 412537015c730ba3b2de7536d9558c5de9736767
Author: David Cramer <dcramer@gmail.com>
Date:   Wed Jul 28 17:10:29 2010 -0700

    improve test coverage to include actual exception signals via real request cycle

diff --git a/djangodblog/models.py b/djangodblog/models.py
index 00029debc6..3c2e5b6088 100644
--- a/djangodblog/models.py
+++ b/djangodblog/models.py
@@ -125,6 +125,7 @@ class ErrorBatch(Model):
             else:
                 Error.objects.create_from_exception(**extra)
         except Exception, exc:
+            print exc
             try:
                 logger.exception(u'Unable to process log entry: %s' % (exc,))
             except Exception, exc:
diff --git a/djangodblog/tests/__init__.py b/djangodblog/tests/__init__.py
new file mode 100644
index 0000000000..1d2c605bab
--- /dev/null
+++ b/djangodblog/tests/__init__.py
@@ -0,0 +1,2 @@
+from tests import *
+from models import *
\ No newline at end of file
diff --git a/djangodblog/tests/models.py b/djangodblog/tests/models.py
new file mode 100644
index 0000000000..0a1fd20104
--- /dev/null
+++ b/djangodblog/tests/models.py
@@ -0,0 +1,8 @@
+from django.db import models
+from djangodblog.utils import JSONDictField
+
+class JSONDictModel(models.Model):
+    data = JSONDictField(blank=True, null=True)
+    
+    def __unicode__(self):
+        return unicode(self.data)
diff --git a/djangodblog/tests.py b/djangodblog/tests/tests.py
similarity index 87%
rename from djangodblog/tests.py
rename to djangodblog/tests/tests.py
index c0fc3eda57..08c55bca49 100644
--- a/djangodblog/tests.py
+++ b/djangodblog/tests/tests.py
@@ -2,14 +2,13 @@
 
 from django.core.handlers.wsgi import WSGIRequest
 from django.core.signals import got_request_exception
-from django.db import models
 from django.test.client import Client
 from django.test import TestCase
 from django.utils.encoding import smart_unicode
 
 from djangodblog.middleware import DBLogMiddleware
 from djangodblog.models import Error, ErrorBatch
-from djangodblog.utils import JSONDictField
+from djangodblog.tests.models import JSONDictModel
 from djangodblog import settings
 
 import logging
@@ -34,12 +33,6 @@ class RequestFactory(Client):
  
 RF = RequestFactory()
 
-class JSONDictModel(models.Model):
-    data = JSONDictField(blank=True, null=True)
-    
-    def __unicode__(self):
-        return unicode(self.data)
-
 class JSONDictTestCase(TestCase):
     def testField(self):
         # Let's make sure the default value is correct
@@ -64,7 +57,7 @@ class DBLogTestCase(TestCase):
         
     def setUpHandler(self):
         self.tearDownHandler()
-        from handlers import DBLogHandler
+        from djangodblog.handlers import DBLogHandler
         
         logger = logging.getLogger()
         self._handlers = logger.handlers
@@ -315,6 +308,7 @@ class DBLogTestCase(TestCase):
         logger = logging.getLogger('dblog')
         for h in logger.handlers:
             logger.removeHandler(h)
+        logger.addHandler(logging.StreamHandler())
         
         try:
             Error.objects.get(id=999999999)
@@ -377,5 +371,58 @@ class DBLogTestCase(TestCase):
         self.assertEquals(last.logger, 'root')
         self.assertEquals(last.class_name, 'DoesNotExist')
         self.assertEquals(last.level, logging.ERROR)
-        self.assertEquals(last.message, smart_unicode(exc))        
+        self.assertEquals(last.message, smart_unicode(exc))
+
+class DBLogViewsTest(TestCase):
+    urls = 'djangodblog.tests.urls'
+    
+    def setUp(self):
+        settings.DATABASE_USING = None
+        self._handlers = None
+        self._level = None
+        settings.DEBUG = False
+    
+    def tearDown(self):
+        self.tearDownHandler()
+        
+    def setUpHandler(self):
+        self.tearDownHandler()
+        from djangodblog.handlers import DBLogHandler
+        
+        logger = logging.getLogger()
+        self._handlers = logger.handlers
+        self._level = logger.level
 
+        for h in self._handlers:
+            # TODO: fix this, for now, I don't care.
+            logger.removeHandler(h)
+    
+        logger.setLevel(logging.DEBUG)
+        dblog_handler = DBLogHandler()
+        logger.addHandler(dblog_handler)
+    
+    def tearDownHandler(self):
+        if self._handlers is None:
+            return
+        
+        logger = logging.getLogger()
+        logger.removeHandler(logger.handlers[0])
+        for h in self._handlers:
+            logger.addHandler(h)
+        
+        logger.setLevel(self._level)
+        self._handlers = None
+
+    def testSignals(self):
+        Error.objects.all().delete()
+        ErrorBatch.objects.all().delete()
+
+        self.assertRaises(Exception, self.client.get, '/')
+        
+        cur = (Error.objects.count(), ErrorBatch.objects.count())
+        self.assertEquals(cur, (1, 1), 'Assumed logs failed to save. %s' % (cur,))
+        last = Error.objects.all().order_by('-id')[0:1].get()
+        self.assertEquals(last.logger, 'root')
+        self.assertEquals(last.class_name, 'Exception')
+        self.assertEquals(last.level, logging.ERROR)
+        self.assertEquals(last.message, 'view exception')
diff --git a/djangodblog/tests/urls.py b/djangodblog/tests/urls.py
new file mode 100644
index 0000000000..9139914cf5
--- /dev/null
+++ b/djangodblog/tests/urls.py
@@ -0,0 +1,5 @@
+from django.conf.urls.defaults import *
+
+urlpatterns = patterns('',
+    url(r'^$', 'djangodblog.tests.views.raise_exc', name='dblog-raise-exc'),
+)
\ No newline at end of file
diff --git a/djangodblog/tests/views.py b/djangodblog/tests/views.py
new file mode 100644
index 0000000000..a7ee88d3e2
--- /dev/null
+++ b/djangodblog/tests/views.py
@@ -0,0 +1,2 @@
+def raise_exc(request):
+    raise Exception('view exception')
\ No newline at end of file
diff --git a/runtests.py b/runtests.py
index d1b081e537..624158a893 100644
--- a/runtests.py
+++ b/runtests.py
@@ -10,7 +10,10 @@ if not settings.configured:
         DATABASE_ENGINE='sqlite3',
         INSTALLED_APPS=[
             'djangodblog',
-        ]
+            # No fucking idea why I have to do this
+            'djangodblog.tests',
+        ],
+        ROOT_URLCONF=None,
     )
 
 from django.test.simple import run_tests
