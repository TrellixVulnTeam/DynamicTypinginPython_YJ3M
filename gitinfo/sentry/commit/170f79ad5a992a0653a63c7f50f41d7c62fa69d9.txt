commit 170f79ad5a992a0653a63c7f50f41d7c62fa69d9
Author: Matt Robenolt <matt@ydekproductions.com>
Date:   Wed May 18 16:39:08 2016 -0700

    classmethod doesn't use self

diff --git a/src/sentry/event_manager.py b/src/sentry/event_manager.py
index b9ea09f6b9..fb6a2d4ae6 100644
--- a/src/sentry/event_manager.py
+++ b/src/sentry/event_manager.py
@@ -216,7 +216,7 @@ class ScoreClause(object):
         return (sql, [])
 
     @classmethod
-    def calculate(self, times_seen, last_seen):
+    def calculate(cls, times_seen, last_seen):
         return math.log(times_seen) * 600 + float(last_seen.strftime('%s'))
 
 
diff --git a/src/sentry/models/tagkey.py b/src/sentry/models/tagkey.py
index 897d9102ad..b1af335817 100644
--- a/src/sentry/models/tagkey.py
+++ b/src/sentry/models/tagkey.py
@@ -79,11 +79,11 @@ class TagKey(Model):
     __repr__ = sane_repr('project_id', 'key')
 
     @classmethod
-    def is_valid_key(self, key):
+    def is_valid_key(cls, key):
         return bool(TAG_KEY_RE.match(key))
 
     @classmethod
-    def is_reserved_key(self, key):
+    def is_reserved_key(cls, key):
         return key in INTERNAL_TAG_KEYS
 
     @classmethod
diff --git a/src/sentry/models/tagvalue.py b/src/sentry/models/tagvalue.py
index 05ee7567f9..8c1689fad8 100644
--- a/src/sentry/models/tagvalue.py
+++ b/src/sentry/models/tagvalue.py
@@ -45,7 +45,7 @@ class TagValue(Model):
     __repr__ = sane_repr('project_id', 'key', 'value')
 
     @classmethod
-    def is_valid_value(self, value):
+    def is_valid_value(cls, value):
         return '\n' not in value
 
     def get_label(self):
diff --git a/src/sentry/utils/cursors.py b/src/sentry/utils/cursors.py
index 6d996ed43e..978a7d71df 100644
--- a/src/sentry/utils/cursors.py
+++ b/src/sentry/utils/cursors.py
@@ -60,7 +60,7 @@ class CursorResult(Sequence):
         return '<%s: results=%s>' % (type(self).__name__, len(self.results))
 
     @classmethod
-    def from_ids(self, id_list, key=None, limit=100, cursor=None):
+    def from_ids(cls, id_list, key=None, limit=100, cursor=None):
         from sentry.models import Group
 
         group_map = Group.objects.in_bulk(id_list)
