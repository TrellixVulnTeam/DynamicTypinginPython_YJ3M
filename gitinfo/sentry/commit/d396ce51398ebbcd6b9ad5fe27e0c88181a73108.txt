commit d396ce51398ebbcd6b9ad5fe27e0c88181a73108
Author: David Cramer <dcramer@gmail.com>
Date:   Wed Apr 22 16:05:26 2015 -0700

    Basic fixes + tests for initial request email

diff --git a/src/sentry/api/endpoints/organization_member_team_details.py b/src/sentry/api/endpoints/organization_member_team_details.py
index e868bc3603..5d6e610e31 100644
--- a/src/sentry/api/endpoints/organization_member_team_details.py
+++ b/src/sentry/api/endpoints/organization_member_team_details.py
@@ -9,8 +9,8 @@ from sentry.api.bases.organization import (
 )
 from sentry.api.exceptions import ResourceDoesNotExist
 from sentry.models import (
-    AuditLogEntry, AuditLogEntryEvent, OrganizationMember,
-    OrganizationMemberTeam, Team
+    AuditLogEntry, AuditLogEntryEvent, OrganizationAccessRequest,
+    OrganizationMember, OrganizationMemberTeam, Team
 )
 
 ERR_INSUFFICIENT_ROLE = 'You cannot modify a member other than yourself.'
@@ -86,7 +86,14 @@ class OrganizationMemberTeamDetailsEndpoint(OrganizationEndpoint):
                 # TODO(dcramer): this should create a pending request and
                 # return a 202
                 if not organization.flags.allow_joinleave:
-                    return Response(status=400)
+                    omt, created = OrganizationAccessRequest.objects.get_or_create(
+                        team=team,
+                        member=om,
+                    )
+                    if created:
+                        omt.send_request_email()
+                    return Response(status=202)
+
                 omt = OrganizationMemberTeam(
                     team=team,
                     organizationmember=om,
diff --git a/src/sentry/models/organizationaccessrequest.py b/src/sentry/models/organizationaccessrequest.py
index 3e2acf861b..62b74b9208 100644
--- a/src/sentry/models/organizationaccessrequest.py
+++ b/src/sentry/models/organizationaccessrequest.py
@@ -30,7 +30,7 @@ class OrganizationAccessRequest(Model):
         from sentry.utils.email import MessageBuilder
 
         user = self.member.user
-        email = user.get_email()
+        email = user.email
         organization = self.team.organization
 
         context = {
diff --git a/tests/sentry/api/endpoints/test_organization_member_team_details.py b/tests/sentry/api/endpoints/test_organization_member_team_details.py
index 040367229c..c4da92e3d4 100644
--- a/tests/sentry/api/endpoints/test_organization_member_team_details.py
+++ b/tests/sentry/api/endpoints/test_organization_member_team_details.py
@@ -1,9 +1,11 @@
 from __future__ import absolute_import
 
+from django.core import mail
 from django.core.urlresolvers import reverse
 
 from sentry.models import (
-    Organization, OrganizationMemberTeam, OrganizationMemberType
+    Organization, OrganizationAccessRequest, OrganizationMemberTeam,
+    OrganizationMemberType
 )
 from sentry.testutils import APITestCase
 
@@ -13,9 +15,10 @@ class CreateOrganizationMemberTeamTest(APITestCase):
         self.login_as(user=self.user)
 
         organization = self.create_organization(name='foo', owner=self.user)
+        user = self.create_user('dummy@example.com')
         member_om = self.create_member(
             organization=organization,
-            email='foo@example.com',
+            user=user,
             type=OrganizationMemberType.MEMBER,
             has_global_access=True,
         )
@@ -35,9 +38,10 @@ class CreateOrganizationMemberTeamTest(APITestCase):
         self.login_as(user=self.user)
 
         organization = self.create_organization(name='foo', owner=self.user)
+        user = self.create_user('dummy@example.com')
         member_om = self.create_member(
             organization=organization,
-            email='foo@example.com',
+            user=user,
             type=OrganizationMemberType.MEMBER,
             has_global_access=True,
         )
@@ -69,9 +73,10 @@ class CreateOrganizationMemberTeamTest(APITestCase):
 
         organization = self.create_organization(name='foo', owner=self.user)
         team = self.create_team(name='foo', organization=organization)
+        user = self.create_user('dummy@example.com')
         member_om = self.create_member(
             organization=organization,
-            email='foo@example.com',
+            user=user,
             type=OrganizationMemberType.MEMBER,
             has_global_access=False,
             teams=[team],
@@ -92,9 +97,11 @@ class CreateOrganizationMemberTeamTest(APITestCase):
 
         organization = self.create_organization(name='foo', owner=self.user)
         team = self.create_team(name='foo', organization=organization)
+        user = self.create_user('dummy@example.com')
+
         member_om = self.create_member(
             organization=organization,
-            email='foo@example.com',
+            user=user,
             type=OrganizationMemberType.MEMBER,
             has_global_access=False,
         )
@@ -107,7 +114,14 @@ class CreateOrganizationMemberTeamTest(APITestCase):
 
         resp = self.client.post(path)
 
-        assert resp.status_code == 400
+        assert resp.status_code == 202
+
+        assert len(mail.outbox) == 1
+
+        assert OrganizationAccessRequest.objects.filter(
+            member=member_om,
+            team=team,
+        ).exists()
 
     def test_can_join_on_open_org(self):
         self.login_as(user=self.user)
@@ -118,9 +132,10 @@ class CreateOrganizationMemberTeamTest(APITestCase):
             flags=Organization.flags.allow_joinleave,
         )
         team = self.create_team(name='foo', organization=organization)
+        user = self.create_user('dummy@example.com')
         member_om = self.create_member(
             organization=organization,
-            email='foo@example.com',
+            user=user,
             type=OrganizationMemberType.MEMBER,
             has_global_access=False,
         )
@@ -147,9 +162,10 @@ class DeleteOrganizationMemberTeamTest(APITestCase):
         self.login_as(user=self.user)
 
         organization = self.create_organization(name='foo', owner=self.user)
+        user = self.create_user('dummy@example.com')
         member_om = self.create_member(
             organization=organization,
-            email='foo@example.com',
+            user=user,
             type=OrganizationMemberType.MEMBER,
             has_global_access=True,
         )
@@ -175,9 +191,10 @@ class DeleteOrganizationMemberTeamTest(APITestCase):
         self.login_as(user=self.user)
 
         organization = self.create_organization(name='foo', owner=self.user)
+        user = self.create_user('dummy@example.com')
         member_om = self.create_member(
             organization=organization,
-            email='foo@example.com',
+            user=user,
             type=OrganizationMemberType.MEMBER,
             has_global_access=True,
         )
@@ -209,9 +226,10 @@ class DeleteOrganizationMemberTeamTest(APITestCase):
 
         organization = self.create_organization(name='foo', owner=self.user)
         team = self.create_team(name='foo', organization=organization)
+        user = self.create_user('dummy@example.com')
         member_om = self.create_member(
             organization=organization,
-            email='foo@example.com',
+            user=user,
             type=OrganizationMemberType.MEMBER,
             has_global_access=False,
             teams=[team],
@@ -238,9 +256,10 @@ class DeleteOrganizationMemberTeamTest(APITestCase):
 
         organization = self.create_organization(name='foo', owner=self.user)
         team = self.create_team(name='foo', organization=organization)
+        user = self.create_user('dummy@example.com')
         member_om = self.create_member(
             organization=organization,
-            email='foo@example.com',
+            user=user,
             type=OrganizationMemberType.MEMBER,
             has_global_access=False,
         )
