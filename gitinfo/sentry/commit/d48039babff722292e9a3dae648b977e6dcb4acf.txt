commit d48039babff722292e9a3dae648b977e6dcb4acf
Author: Danny Lee <dlee@sentry.io>
Date:   Tue Jun 30 08:33:36 2020 -0700

    feat(error): Add props for tags in ErrorBoundary (#19559)

diff --git a/src/sentry/static/sentry/app/components/errorBoundary.tsx b/src/sentry/static/sentry/app/components/errorBoundary.tsx
index d1df0031f2..c2a7ba8a86 100644
--- a/src/sentry/static/sentry/app/components/errorBoundary.tsx
+++ b/src/sentry/static/sentry/app/components/errorBoundary.tsx
@@ -13,9 +13,13 @@ type DefaultProps = {
 };
 
 type Props = DefaultProps & {
-  message?: React.ReactNode;
-  customComponent?: React.ReactNode;
+  // To add context for better UX
   className?: string;
+  customComponent?: React.ReactNode;
+  message?: React.ReactNode;
+
+  // To add context for better error reporting
+  errorTag?: Record<string, string>;
 };
 
 type State = {
@@ -51,8 +55,14 @@ class ErrorBoundary extends React.Component<Props, State> {
   }
 
   componentDidCatch(error: Error, errorInfo: React.ErrorInfo) {
+    const {errorTag} = this.props;
+
     this.setState({error});
     Sentry.withScope(scope => {
+      if (errorTag) {
+        Object.keys(errorTag).forEach(tag => scope.setTag(tag, errorTag[tag]));
+      }
+
       scope.setExtra('errorInfo', errorInfo);
       Sentry.captureException(error);
     });
@@ -71,7 +81,7 @@ class ErrorBoundary extends React.Component<Props, State> {
     const {error} = this.state;
 
     if (!error) {
-      //when there's not an error, render children untouched
+      // when there's not an error, render children untouched
       return this.props.children;
     }
 
