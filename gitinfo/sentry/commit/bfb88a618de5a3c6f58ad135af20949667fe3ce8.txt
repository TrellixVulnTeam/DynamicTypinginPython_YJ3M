commit bfb88a618de5a3c6f58ad135af20949667fe3ce8
Author: Armin Ronacher <armin.ronacher@active-4.com>
Date:   Thu Feb 23 20:11:38 2017 +0100

    Converted uses of print to click.echo

diff --git a/src/sentry/lint/engine.py b/src/sentry/lint/engine.py
index 59204dc91b..11f0989ebc 100644
--- a/src/sentry/lint/engine.py
+++ b/src/sentry/lint/engine.py
@@ -74,7 +74,8 @@ def js_lint(file_list=None):
     eslint_path = os.path.join(project_root, 'node_modules', '.bin', 'eslint')
 
     if not os.path.exists(eslint_path):
-        print('!! Skipping JavaScript linting because eslint is not installed.')
+        from click import echo
+        echo('!! Skipping JavaScript linting because eslint is not installed.')
         return False
 
     if file_list is None:
diff --git a/src/sentry/management/commands/collectstatic.py b/src/sentry/management/commands/collectstatic.py
index cd6ce58d2a..75fbc00540 100644
--- a/src/sentry/management/commands/collectstatic.py
+++ b/src/sentry/management/commands/collectstatic.py
@@ -5,10 +5,11 @@ sentry.management.commands.collectstatic
 :copyright: (c) 2015 by the Sentry Team, see AUTHORS for more details.
 :license: BSD, see LICENSE for more details.
 """
-from __future__ import absolute_import, print_function
+from __future__ import absolute_import
 
 import os
 
+from click import echo
 from itertools import chain
 from operator import itemgetter
 from hashlib import md5
@@ -32,7 +33,7 @@ def checksum(file_):
 def get_bundle_version(files):
     hasher = md5()
     for (short, _), sum in zip(files, list(map(checksum, files))):
-        print('%s  %s' % (sum, short))
+        echo('%s  %s' % (sum, short))
         hasher.update('{}  {}\n'.format(sum, short).encode('utf-8'))
     return hasher.hexdigest()
 
@@ -48,8 +49,8 @@ class Command(BaseCommand):
         paths = sorted(set(chain(*itemgetter(*collected.keys())(collected))))
         abs_paths = list(map(self.storage.path, paths))
         version = get_bundle_version(list(zip(paths, abs_paths)))
-        print('-----------------')
-        print(version)
+        echo('-----------------')
+        echo(version)
         with open(self.storage.path(VERSION_PATH), 'wb') as fp:
             fp.write(version)
         return collected
diff --git a/src/sentry/management/commands/diff.py b/src/sentry/management/commands/diff.py
index 348b255a34..ba1141e267 100644
--- a/src/sentry/management/commands/diff.py
+++ b/src/sentry/management/commands/diff.py
@@ -5,13 +5,14 @@ sentry.management.commands.diff
 :copyright: (c) 2015 by the Sentry Team, see AUTHORS for more details.
 :license: BSD, see LICENSE for more details.
 """
-from __future__ import absolute_import, print_function
+from __future__ import absolute_import
 
 from django.core.management.base import BaseCommand, CommandError
 
 import six
 import sys
 
+from click import echo
 from optparse import make_option
 
 
@@ -45,10 +46,10 @@ def print_unified_diff(left, right):
         return
 
     if left[0] != right[0]:
-        print('! Grouping behavior differs: %r vs %r' % (left[0], right[0]))
+        echo('! Grouping behavior differs: %r vs %r' % (left[0], right[0]))
         return
 
-    print('> Same grouping behavior: %r' % left[0])
+    echo('> Same grouping behavior: %r' % left[0])
 
     # These should only be fingerprints at this point
 
@@ -58,11 +59,11 @@ def print_unified_diff(left, right):
     left_fingerprint = [k[0] for k in left]
     right_fingerprint = [k[0] for k in right]
     if left_fingerprint != right_fingerprint:
-        print('!! Different fingerprint algorithms: %r vs %r' % (left_fingerprint, right_fingerprint))
+        echo('!! Different fingerprint algorithms: %r vs %r' % (left_fingerprint, right_fingerprint))
         return
 
     bits = left_fingerprint
-    print('> Same fingerprint algorithm: %r' % bits)
+    echo('> Same fingerprint algorithm: %r' % bits)
 
     left = [k[1] for k in left]
     right = [k[1] for k in right]
@@ -70,7 +71,7 @@ def print_unified_diff(left, right):
         bit = bits[idx]
         for ((a_key, a_hashes), (b_key, b_hashes)) in zip(a, b):
             if a_key != b_key:
-                print('>> Different interfaces for %r: %r vs %r' % (bit, a_key, b_key))
+                echo('>> Different interfaces for %r: %r vs %r' % (bit, a_key, b_key))
                 continue
             for idx, (a_hash, b_hash) in enumerate(zip(a_hashes, b_hashes)):
                 a_hash = [six.text_type(h) + '\n' for h in a_hash]
diff --git a/src/sentry/management/commands/generate_reset_password_link.py b/src/sentry/management/commands/generate_reset_password_link.py
index 89e8f218ab..b86a6d98e2 100644
--- a/src/sentry/management/commands/generate_reset_password_link.py
+++ b/src/sentry/management/commands/generate_reset_password_link.py
@@ -1,10 +1,11 @@
 
-from __future__ import absolute_import, print_function
+from __future__ import absolute_import
 
 import sys
 
 from django.core.management.base import BaseCommand, make_option
 from django.utils import timezone
+from click import echo
 
 from sentry.models import LostPasswordHash
 from sentry.utils.auth import find_users
@@ -32,7 +33,7 @@ class Command(BaseCommand):
                 password_hash.date_added = timezone.now()
                 password_hash.set_hash()
                 password_hash.save()
-            print('{} ({}) - {}'.format(
+            echo('{} ({}) - {}'.format(
                 user.username,
                 user.email,
                 password_hash.get_absolute_url(),
diff --git a/src/sentry/receivers/core.py b/src/sentry/receivers/core.py
index a5ad476c2e..c07f51c83b 100644
--- a/src/sentry/receivers/core.py
+++ b/src/sentry/receivers/core.py
@@ -1,7 +1,8 @@
-from __future__ import absolute_import, print_function
+from __future__ import absolute_import
 
 import logging
 
+from click import echo
 from django.conf import settings
 from django.db import connections, transaction
 from django.db.utils import OperationalError, ProgrammingError
@@ -107,7 +108,7 @@ def create_default_project(id, name, slug, verbosity=2, **kwargs):
     project.update_option('sentry:origins', ['*'])
 
     if verbosity > 0:
-        print('Created internal Sentry project (slug=%s, id=%s)' % (project.slug, project.id))
+        echo('Created internal Sentry project (slug=%s, id=%s)' % (project.slug, project.id))
 
     return project
 
diff --git a/src/sentry/utils/integrationdocs.py b/src/sentry/utils/integrationdocs.py
index 2f76da019f..b67060796e 100644
--- a/src/sentry/utils/integrationdocs.py
+++ b/src/sentry/utils/integrationdocs.py
@@ -7,6 +7,7 @@ import sys
 import json
 import logging
 
+from click import echo
 import sentry
 
 BASE_URL = 'https://docs.sentry.io/hosted/_platforms/{}'
@@ -75,7 +76,7 @@ def get_integration_id(platform_id, integration_id):
 
 
 def sync_docs():
-    print('syncing documentation (platform index)')
+    echo('syncing documentation (platform index)')
     body = urlopen(BASE_URL.format('_index.json')).read().decode('utf-8')
     data = json.loads(body)
     platform_list = []
@@ -107,7 +108,7 @@ def sync_docs():
 
 
 def sync_integration_docs(platform_id, integration_id, path):
-    print('  syncing documentation for %s.%s integration' % (
+    echo('  syncing documentation for %s.%s integration' % (
         platform_id, integration_id
     ))
 
