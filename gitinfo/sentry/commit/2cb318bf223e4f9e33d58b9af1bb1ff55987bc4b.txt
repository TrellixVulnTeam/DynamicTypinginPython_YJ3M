commit 2cb318bf223e4f9e33d58b9af1bb1ff55987bc4b
Author: Ben Vinegar <ben@benv.ca>
Date:   Tue Feb 16 18:08:38 2016 -0800

    Add remove button to release artifacts

diff --git a/src/sentry/static/sentry/app/views/releaseArtifacts.jsx b/src/sentry/static/sentry/app/views/releaseArtifacts.jsx
index 5aa24132fd..898c24283e 100644
--- a/src/sentry/static/sentry/app/views/releaseArtifacts.jsx
+++ b/src/sentry/static/sentry/app/views/releaseArtifacts.jsx
@@ -5,7 +5,10 @@ import ApiMixin from '../mixins/apiMixin';
 import FileSize from '../components/fileSize';
 import LoadingError from '../components/loadingError';
 import LoadingIndicator from '../components/loadingIndicator';
+import IndicatorStore from '../stores/indicatorStore';
 import Pagination from '../components/pagination';
+import LinkWithConfirmation from '../components/linkWithConfirmation';
+
 import {t} from '../locale';
 
 const ReleaseArtifacts = React.createClass({
@@ -27,7 +30,7 @@ const ReleaseArtifacts = React.createClass({
     };
   },
 
-  componentWillMount() {
+  componentDidMount() {
     this.fetchData();
   },
 
@@ -37,16 +40,18 @@ const ReleaseArtifacts = React.createClass({
     }
   },
 
-  fetchData() {
+  getFilesEndpoint() {
     let params = this.props.params;
-    let endpoint = '/projects/' + params.orgId + '/' + params.projectId + '/releases/' + params.version + '/files/';
+    return `/projects/${params.orgId}/${params.projectId}/releases/${params.version}/files/`;
+  },
 
+  fetchData() {
     this.setState({
       loading: true,
       error: false
     });
 
-    this.api.request(endpoint, {
+    this.api.request(this.getFilesEndpoint(), {
       method: 'GET',
       data: this.props.location.query,
       success: (data, _, jqXHR) => {
@@ -66,6 +71,35 @@ const ReleaseArtifacts = React.createClass({
     });
   },
 
+  handleRemove(id) {
+    let loadingIndicator = IndicatorStore.add(t('Removing artifact..'));
+
+    this.api.request(this.getFilesEndpoint() + `${id}/`, {
+      method: 'DELETE',
+      success: () => {
+        let fileList = this.state.fileList.filter((file) => {
+          return file.id !== id;
+        });
+
+        this.setState({
+          fileList: fileList
+        });
+
+        IndicatorStore.add(t('Artifact removed.'), 'success', {
+          duration: 4000
+        });
+      },
+      error: () => {
+        IndicatorStore.add(t('Unable to remove artifact. Please try again.'), 'error', {
+          duration: 4000
+        });
+      },
+      complete: () => {
+        IndicatorStore.remove(loadingIndicator);
+      }
+    });
+  },
+
   render() {
     if (this.state.loading)
       return <LoadingIndicator />;
@@ -79,21 +113,32 @@ const ReleaseArtifacts = React.createClass({
         </div>
       );
 
-    // TODO(dcramer): files should allow you to download and delete them
+    // TODO(dcramer): files should allow you to download them
     return (
       <div>
         <div className="release-group-header">
           <div className="row">
-            <div className="col-sm-11 col-xs-6">{'Name'}</div>
-            <div className="col-sm-1 col-xs-3 align-right">{'Size'}</div>
+            <div className="col-sm-9 col-xs-8">{'Name'}</div>
+            <div className="col-sm-2 col-xs-2 align-right">{'Size'}</div>
+            <div className="col-sm-1 col-xs-2 align-right"></div>
           </div>
         </div>
         <div className="release-list">
         {this.state.fileList.map((file) => {
           return (
             <div className="release release-artifact row" key={file.id}>
-              <div className="col-sm-11 col-xs-6" style={{wordWrap: 'break-word'}}><strong>{file.name || '(empty)'}</strong></div>
-              <div className="col-sm-1 col-xs-3 align-right"><FileSize bytes={file.size} /></div>
+              <div className="col-sm-9 col-xs-8" style={{wordWrap: 'break-word'}}><strong>{file.name || '(empty)'}</strong></div>
+              <div className="col-sm-2 col-xs-2 align-right"><FileSize bytes={file.size} /></div>
+              <div className="col-sm-1 col-xs-2 align-right">
+                <LinkWithConfirmation
+                  className="btn btn-sm btn-default"
+                  title={t('Delete artifact')}
+                  message={t('Are you sure you want to remove this artifact?')}
+                  onConfirm={this.handleRemove.bind(this, file.id)}>
+
+                  <span className="icon icon-trash" />
+                </LinkWithConfirmation>
+              </div>
             </div>
           );
         })}
diff --git a/tests/js/spec/views/releaseArtifacts.spec.jsx b/tests/js/spec/views/releaseArtifacts.spec.jsx
index 2cb8b9171c..ed45eded7a 100644
--- a/tests/js/spec/views/releaseArtifacts.spec.jsx
+++ b/tests/js/spec/views/releaseArtifacts.spec.jsx
@@ -1,11 +1,8 @@
 import React from 'react';
-import TestUtils from 'react-addons-test-utils';
+import {shallow} from 'enzyme';
 
 import {Client} from 'app/api';
 import ReleaseArtifacts from 'app/views/releaseArtifacts';
-import Pagination from 'app/components/pagination';
-
-import stubReactComponents from '../../helpers/stubReactComponent';
 
 describe('ReleaseArtifacts', function() {
 
@@ -13,25 +10,77 @@ describe('ReleaseArtifacts', function() {
     this.sandbox = sinon.sandbox.create();
 
     this.stubbedApiRequest = this.sandbox.stub(Client.prototype, 'request');
-    stubReactComponents(this.sandbox, [Pagination]);
 
+    this.wrapper = shallow(<ReleaseArtifacts
+      location={{query: {cursor: '0:0:100'}}}
+      params={{orgId: '123', projectId: '456', version: 'abcdef'}}/>
+    );
   });
 
   afterEach(function() {
     this.sandbox.restore();
   });
 
+  describe('render()', function () {
+    it('should render a row for each file', function () {
+      let wrapper = this.wrapper;
+      wrapper.setState({
+        loading: false,
+        fileList: [{
+          id: '1',
+          name: 'foo.js',
+          size: 150000
+        }, {
+          id: '2',
+          name: 'bar.js',
+          size: 30000
+        }]
+      });
+
+      expect(wrapper.find('.release-artifact')).to.have.length(2);
+    });
+  });
+
+  describe('handleRemove()', function () {
+    it('should remove the file from the file list', function () {
+      let wrapper = this.wrapper;
+      wrapper.setState({
+        loading: false,
+        fileList: [{
+          id: '1',
+          name: 'foo.js',
+          size: 150000
+        }, {
+          id: '2',
+          name: 'bar.js',
+          size: 30000
+        }]
+      });
+
+      let instance = wrapper.instance();
+      this.stubbedApiRequest.restore();
+      this.sandbox.stub(instance.api, 'request', function (url, options) {
+        // emulate successful api completion
+        options.success();
+        options.complete();
+      });
+
+      instance.handleRemove('1');
+      expect(instance.api.request.callCount).to.eql(1);
+      expect(wrapper.state('fileList')).to.have.length(1);
+      expect(wrapper.state('fileList')[0]).to.have.property('id', '2');
+    });
+  });
+
   describe('fetchData()', function() {
     it('should append the location query string to the request URL', function() {
-      TestUtils.renderIntoDocument(
-        <ReleaseArtifacts
-          location={{query: {cursor: '0:0:100'}}}
-          params={{orgId: '123', projectId: '456', version: 'abcdef'}}/>
-      );
+      let wrapper = this.wrapper;
+      wrapper.instance().fetchData();
 
       let apiArgs = this.stubbedApiRequest.lastCall.args;
       expect(apiArgs[0]).to.eql('/projects/123/456/releases/abcdef/files/');
       expect(apiArgs[1].data).to.have.property('cursor', '0:0:100');
     });
   });
+
 });
