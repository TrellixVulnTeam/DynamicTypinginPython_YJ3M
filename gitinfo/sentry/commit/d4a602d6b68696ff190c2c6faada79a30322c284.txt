commit d4a602d6b68696ff190c2c6faada79a30322c284
Author: David Cramer <dcramer@gmail.com>
Date:   Sat Jan 16 12:09:14 2016 -0800

    Ensure sort/statsPeriod maintain propagation

diff --git a/src/sentry/static/sentry/app/views/stream.jsx b/src/sentry/static/sentry/app/views/stream.jsx
index f3c800f79d..367c2cb1ad 100644
--- a/src/sentry/static/sentry/app/views/stream.jsx
+++ b/src/sentry/static/sentry/app/views/stream.jsx
@@ -39,7 +39,6 @@ const Stream = React.createClass({
 
   getDefaultProps() {
     return {
-      defaultQuery: '',
       defaultSort: 'date',
       defaultStatsPeriod: '24h',
       maxItems: 25
@@ -69,7 +68,7 @@ const Stream = React.createClass({
       tagsLoading: true,
       isSidebarVisible: false,
       isStickyHeader: false,
-      ...searchId ? {} : this.getQueryStringState()
+      ...this.getQueryStringState()
     };
   },
 
@@ -100,7 +99,7 @@ const Stream = React.createClass({
       if ((this.state.searchId || nextProps.params.searchId) && !nextProps.location.query.query) {
         this.setState(this.getSavedSearchState(nextProps), this.fetchData);
       } else {
-        this.setState(this.getQueryStringState(nextProps), this.fetchData);
+        this.setState(this.getQueryState(nextProps), this.fetchData);
       }
     }
   },
@@ -228,7 +227,7 @@ const Stream = React.createClass({
     return Object.assign(newState, {searchId: null});
   },
 
-  getQueryStringState(props) {
+  getQueryState(props) {
     props = props || this.props;
     let currentQuery = props.location.query || {};
 
@@ -237,6 +236,16 @@ const Stream = React.createClass({
       currentQuery.query :
       this.props.defaultQuery;
 
+    return Object.assign(this.getQueryStringState, {
+      query: query,
+      searchId: null,
+    });
+  },
+
+  getQueryStringState(props) {
+    props = props || this.props;
+    let currentQuery = props.location.query || {};
+
     let sort =
       currentQuery.hasOwnProperty('sort') ?
       currentQuery.sort :
@@ -252,10 +261,8 @@ const Stream = React.createClass({
     }
 
     return {
-      query: query,
       sort: sort,
       statsPeriod: statsPeriod,
-      searchId: null,
     };
   },
 
