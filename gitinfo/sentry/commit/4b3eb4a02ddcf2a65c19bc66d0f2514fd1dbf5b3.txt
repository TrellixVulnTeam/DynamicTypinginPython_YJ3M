commit 4b3eb4a02ddcf2a65c19bc66d0f2514fd1dbf5b3
Author: Alex Hofsteede <alex@hofsteede.com>
Date:   Mon Apr 22 15:10:57 2019 -0700

    feat: Still show tags for events with no body. (#12871)
    
    This should render the tags UI on the event details page for sampled
    events that have no body/nodestore data.

diff --git a/src/sentry/api/serializers/models/event.py b/src/sentry/api/serializers/models/event.py
index 250b0233bf..25486e2e9a 100644
--- a/src/sentry/api/serializers/models/event.py
+++ b/src/sentry/api/serializers/models/event.py
@@ -97,6 +97,14 @@ class EventSerializer(Serializer):
     def _get_tags_with_meta(self, event):
         meta = get_path(event.data, '_meta', 'tags') or {}
 
+        # If we have meta, we need to get the tags in their original order
+        # from the raw event body as the indexes need to line up with the
+        # metadata indexes. In other cases we can use event.tags
+        if meta:
+            raw_tags = event.data.get('tags') or []
+        else:
+            raw_tags = event.tags
+
         tags = sorted(
             [
                 {
@@ -104,11 +112,7 @@ class EventSerializer(Serializer):
                     'value': kv[1],
                     '_meta': meta.get(kv[0]) or get_path(meta, six.text_type(i), '1') or None,
                 }
-                # TODO this should be using event.tags but there are some weird
-                # issues around that because event.tags re-sorts the tags and
-                # this function relies on them being in the original order to
-                # look up meta.
-                for i, kv in enumerate(event.data.get('tags') or ())
+                for i, kv in enumerate(raw_tags)
                 if kv is not None and kv[0] is not None and kv[1] is not None],
             key=lambda x: x['key']
         )
diff --git a/tests/snuba/models/test_event.py b/tests/snuba/models/test_event.py
index f1693be861..2b55d37487 100644
--- a/tests/snuba/models/test_event.py
+++ b/tests/snuba/models/test_event.py
@@ -127,3 +127,22 @@ class SnubaEventTest(TestCase, SnubaTestCase):
         Event.objects.bind_nodes([event], 'data')
         assert event.data._node_data is not None
         assert event.data['user']['id'] == u'user1'
+
+    def test_event_with_no_body(self):
+        # remove the event from nodestore to simulate an event with no body.
+        node_id = SnubaEvent.generate_node_id(self.proj1.id, self.event_id)
+        nodestore.delete(node_id)
+        assert nodestore.get(node_id) is None
+
+        # Check that we can still serialize it
+        event = SnubaEvent.get_event(self.proj1.id, self.event_id)
+        serialized = serialize(event)
+        assert event.data == {}
+
+        # Check that the regular serializer still gives us back tags
+        assert serialized['tags'] == [
+            {'_meta': None, 'key': 'baz', 'value': 'quux'},
+            {'_meta': None, 'key': 'foo', 'value': 'bar'},
+            {'_meta': None, 'key': 'release', 'value': 'release1'},
+            {'_meta': None, 'key': 'user', 'query': 'user.id:user1', 'value': 'id:user1'}
+        ]
