commit d7c7875239de82bbc7400fef8633f89bfaca2ffc
Author: Billy Vong <billyvg@users.noreply.github.com>
Date:   Thu Aug 30 16:24:05 2018 -0700

    feat(health): Update health context data structure and add actions (#9570)
    
    This changes the structure of the health context state and adds a HoC for any Heath views

diff --git a/src/sentry/static/sentry/app/views/organizationHealth/index.jsx b/src/sentry/static/sentry/app/views/organizationHealth/index.jsx
index 5f771ab7ac..49af98b5b4 100644
--- a/src/sentry/static/sentry/app/views/organizationHealth/index.jsx
+++ b/src/sentry/static/sentry/app/views/organizationHealth/index.jsx
@@ -23,21 +23,28 @@ class OrganizationHealth extends React.Component {
     super(props);
 
     this.state = {
-      params: {
-        projects: [],
-        environments: [],
-        period: '7d',
+      actions: {
+        updateParams: this.updateParams,
+        setSpecifier: this.setSpecifier,
       },
+      projects: [],
+      environments: [],
+      period: '7d',
+      specifiers: [],
     };
   }
 
   updateParams = obj => {
     this.setState(state => ({
       ...state,
-      params: {
-        ...state.params,
-        ...obj,
-      },
+      ...obj,
+    }));
+  };
+
+  setSpecifier = (tag, value) => {
+    this.setState(state => ({
+      ...state,
+      specifiers: [`${tag}:${value}`],
     }));
   };
 
@@ -62,7 +69,7 @@ class OrganizationHealth extends React.Component {
 
     return (
       <Feature feature={['health']} renderNoFeatureMessage>
-        <HealthContext.Provider value={this.state.params}>
+        <HealthContext.Provider value={this.state}>
           <HealthWrapper>
             <HealthNavigationMenu />
             <Content>
@@ -70,20 +77,20 @@ class OrganizationHealth extends React.Component {
                 <MultipleProjectSelector
                   anchorRight={false}
                   projects={projects}
-                  value={this.state.params.projects}
+                  value={this.state.projects}
                   onChange={this.handleChangeProjects}
                 />
                 <HeaderSeparator />
                 <MultipleEnvironmentSelector
                   organization={organization}
-                  value={this.state.params.environments}
+                  value={this.state.environments}
                   onChange={this.handleChangeEnvironments}
                 />
                 <HeaderSeparator />
                 <TimeRangeSelector
                   showAbsolute={false}
                   showRelative
-                  relative={this.state.params.period}
+                  relative={this.state.period}
                   onChange={this.handleChangeTime}
                 />
               </Header>
diff --git a/src/sentry/static/sentry/app/views/organizationHealth/util/withHealth.jsx b/src/sentry/static/sentry/app/views/organizationHealth/util/withHealth.jsx
new file mode 100644
index 0000000000..4efa571e23
--- /dev/null
+++ b/src/sentry/static/sentry/app/views/organizationHealth/util/withHealth.jsx
@@ -0,0 +1,26 @@
+import React from 'react';
+
+import getDisplayName from 'app/utils/getDisplayName';
+
+import HealthContext from './healthContext';
+
+/**
+ * HoC that provides component with properties from `HealthContext`
+ */
+const withHealth = WrappedComponent => {
+  class WithHealth extends React.Component {
+    render() {
+      return (
+        <HealthContext.Consumer>
+          {context => <WrappedComponent {...context} {...this.props} />}
+        </HealthContext.Consumer>
+      );
+    }
+  }
+
+  WithHealth.displayName = `withHealth(${getDisplayName(WrappedComponent)})`;
+
+  return WithHealth;
+};
+
+export default withHealth;
diff --git a/tests/js/spec/views/organizationHealth/index.spec.jsx b/tests/js/spec/views/organizationHealth/index.spec.jsx
index d523ae3764..fb13b179a7 100644
--- a/tests/js/spec/views/organizationHealth/index.spec.jsx
+++ b/tests/js/spec/views/organizationHealth/index.spec.jsx
@@ -45,8 +45,8 @@ describe('OrganizationHealth', function() {
     wrapper.update();
 
     selectByLabel(wrapper, 'production', {control: true, name: 'environments'});
-    expect(wrapper.state('params').environments).toEqual(['production']);
+    expect(wrapper.state('environments')).toEqual(['production']);
     selectByLabel(wrapper, 'staging', {control: true, name: 'environments'});
-    expect(wrapper.state('params').environments).toEqual(['production', 'staging']);
+    expect(wrapper.state('environments')).toEqual(['production', 'staging']);
   });
 });
