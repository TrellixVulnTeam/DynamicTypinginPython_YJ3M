commit c3bead4a436405fbf5c00f075a212769772a694a
Author: David Cramer <dcramer@gmail.com>
Date:   Tue Jul 14 18:00:49 2015 -0700

    Expand seen info

diff --git a/src/sentry/static/sentry/app/components/dateTime.jsx b/src/sentry/static/sentry/app/components/dateTime.jsx
new file mode 100644
index 0000000000..2e6e2e75c6
--- /dev/null
+++ b/src/sentry/static/sentry/app/components/dateTime.jsx
@@ -0,0 +1,22 @@
+var React = require("react");
+var moment = require("moment");
+
+var DateTime = React.createClass({
+  propTypes: {
+    date: React.PropTypes.any.isRequired
+  },
+
+  render() {
+    var date = this.props.date;
+
+    if (typeof date === "string" || typeof date === "number") {
+      date = new Date(date);
+    }
+
+    return (
+      <time>{moment.utc(date).local().format('LLL z')}</time>
+    );
+  }
+});
+
+module.exports = DateTime;
diff --git a/src/sentry/static/sentry/app/components/version.jsx b/src/sentry/static/sentry/app/components/version.jsx
new file mode 100644
index 0000000000..e6b140fa93
--- /dev/null
+++ b/src/sentry/static/sentry/app/components/version.jsx
@@ -0,0 +1,28 @@
+var React = require("react");
+var Router = require("react-router");
+
+var Version = React.createClass({
+  contextTypes: {
+    router: React.PropTypes.func
+  },
+
+  render() {
+    var version = this.props.version;
+    var shortVersion = version.length === 40 ? version.substr(0, 12) : version;
+    var params = this.context.router.getCurrentParams();
+
+    return (
+      <Router.Link
+          to="releaseDetails"
+          params={{
+            orgId: params.orgId,
+            projectId: params.projectId,
+            version: version,
+          }}>
+        <span title={version}>{shortVersion}</span>
+      </Router.Link>
+    );
+  }
+});
+
+module.exports = Version;
diff --git a/src/sentry/static/sentry/app/views/groupOverview.jsx b/src/sentry/static/sentry/app/views/groupOverview.jsx
index e6476edfbb..b5848b941c 100644
--- a/src/sentry/static/sentry/app/views/groupOverview.jsx
+++ b/src/sentry/static/sentry/app/views/groupOverview.jsx
@@ -3,6 +3,7 @@ var Router = require("react-router");
 
 var api = require("../api");
 var ApiMixin = require("../mixins/apiMixin");
+var DateTime = require("../components/dateTime");
 var GroupChart = require("./groupDetails/chart");
 var GroupEventEntries = require("../components/eventEntries");
 var GroupState = require("../mixins/groupState");
@@ -13,6 +14,24 @@ var PropTypes = require("../proptypes");
 var RouteMixin = require("../mixins/routeMixin");
 var TimeSince = require("../components/timeSince");
 var utils = require("../utils");
+var Version = require("../components/version");
+
+var SeenInfo = React.createClass({
+  render() {
+    var {date,release} = this.props;
+    return (
+      <dl>
+        <dt>When:</dt>
+        <dd><TimeSince date={date} /></dd>
+        <dd><DateTime date={date} /></dd>
+        {release && [
+          <dt>Release:</dt>,
+          <dd><Version version={release.version} /></dd>
+        ]}
+      </dl>
+    );
+  }
+});
 
 var GroupOverview = React.createClass({
   contextTypes: {
@@ -82,6 +101,8 @@ var GroupOverview = React.createClass({
   render() {
     var group = this.getGroup();
     var evt = this.state.event;
+    var orgId = this.getOrganization().slug;
+    var projectId = this.getProject().slug;
 
     return (
       <div>
@@ -93,21 +114,20 @@ var GroupOverview = React.createClass({
               <GroupChart statsPeriod="30d" group={group}
                           title="Last 30 Days"
                           className="bar-chart-small" />
-              <h6>First seen</h6>
-              <h3>
-                <TimeSince date={group.firstSeen} />
-                {group.firstRelease &&
-                  <small> {group.firstRelease.version}</small>
-                }
-              </h3>
-
-              <h6>Last seen</h6>
-              <h3>
-                <TimeSince date={group.lastSeen} />
-                {group.lastRelease &&
-                  <small> {group.lastRelease.version}</small>
-                }
-              </h3>
+
+              <h6 className="first-seen">First seen</h6>
+              <SeenInfo
+                  orgId={orgId}
+                  projectId={projectId}
+                  date={group.firstSeen}
+                  release={group.firstRelease} />
+
+              <h6 className="last-seen">Last seen</h6>
+              <SeenInfo
+                  orgId={orgId}
+                  projectId={projectId}
+                  date={group.lastSeen}
+                  release={group.lastRelease} />
 
               <h6>Status</h6>
               <h3>{group.status}</h3>
