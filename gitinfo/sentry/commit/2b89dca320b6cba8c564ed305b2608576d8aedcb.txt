commit 2b89dca320b6cba8c564ed305b2608576d8aedcb
Author: Lyn Nagara <lyn.nagara@gmail.com>
Date:   Wed Sep 26 10:59:37 2018 -0700

    feat(discover): Create set_projects method for saved queries (#9884)
    
    We'll need set_projects instead of add_projects in order to handle put
    requests

diff --git a/src/sentry/api/endpoints/organization_discover_saved_queries.py b/src/sentry/api/endpoints/organization_discover_saved_queries.py
index 65949d904e..a4d338b897 100644
--- a/src/sentry/api/endpoints/organization_discover_saved_queries.py
+++ b/src/sentry/api/endpoints/organization_discover_saved_queries.py
@@ -110,6 +110,6 @@ class OrganizationDiscoverSavedQueriesEndpoint(OrganizationEndpoint):
             query=data['query'],
         )
 
-        model.add_projects(data['project_ids'])
+        model.set_projects(data['project_ids'])
 
         return Response(serialize(model), status=201)
diff --git a/src/sentry/models/discoversavedquery.py b/src/sentry/models/discoversavedquery.py
index 616fabd407..7fd0db8606 100644
--- a/src/sentry/models/discoversavedquery.py
+++ b/src/sentry/models/discoversavedquery.py
@@ -1,5 +1,5 @@
 from __future__ import absolute_import
-from django.db import models
+from django.db import models, transaction
 from jsonfield import JSONField
 from sentry.db.models import (
     Model, FlexibleForeignKey, sane_repr
@@ -37,11 +37,22 @@ class DiscoverSavedQuery(Model):
 
     __repr__ = sane_repr('organization_id', 'name')
 
-    def add_projects(self, project_ids):
-        DiscoverSavedQueryProject.objects.bulk_create(
-            [
-                DiscoverSavedQueryProject(
-                    project_id=project_id, discover_saved_query=self)
-                for project_id in project_ids
-            ]
-        )
+    def set_projects(self, project_ids):
+        with transaction.atomic():
+            DiscoverSavedQueryProject.objects.filter(
+                discover_saved_query=self,
+            ).exclude(project__in=project_ids).delete()
+
+            existing_project_ids = DiscoverSavedQueryProject.objects.filter(
+                discover_saved_query=self,
+            ).values_list('project', flat=True)
+
+            new_project_ids = list(set(project_ids) - set(existing_project_ids))
+
+            DiscoverSavedQueryProject.objects.bulk_create(
+                [
+                    DiscoverSavedQueryProject(
+                        project_id=project_id, discover_saved_query=self)
+                    for project_id in new_project_ids
+                ]
+            )
diff --git a/tests/sentry/models/test_discoversavedquery.py b/tests/sentry/models/test_discoversavedquery.py
index 2ee8a7d745..6331966f90 100644
--- a/tests/sentry/models/test_discoversavedquery.py
+++ b/tests/sentry/models/test_discoversavedquery.py
@@ -5,23 +5,49 @@ from sentry.models import DiscoverSavedQuery, DiscoverSavedQueryProject
 
 
 class DiscoverSavedQueryTest(TestCase):
-    def test_create(self):
-        org = self.create_organization()
-        project_ids = [
-            self.create_project(organization=org).id,
-            self.create_project(organization=org).id
+    def setUp(self):
+        super(DiscoverSavedQueryTest, self).setUp()
+        self.org = self.create_organization()
+        self.project_ids = [
+            self.create_project(organization=self.org).id,
+            self.create_project(organization=self.org).id
         ]
-        query = {
+        self.query = {
             'fields': ['test'],
             'conditions': [],
             'limit': 10
         }
 
-        model = DiscoverSavedQuery.objects.create(organization=org, name="Test query", query=query)
+    def test_create(self):
+        model = DiscoverSavedQuery.objects.create(
+            organization=self.org,
+            name="Test query",
+            query=self.query
+        )
+
+        model.set_projects(self.project_ids)
+
+        assert DiscoverSavedQuery.objects.get(id=model.id).query == self.query
+        assert sorted(
+            DiscoverSavedQueryProject.objects.all().values_list('project_id', flat=True)
+        ) == self.project_ids
 
-        model.add_projects(project_ids)
+    def test_update_projects(self):
+        model = DiscoverSavedQuery.objects.create(
+            organization=self.org,
+            name="Test query",
+            query=self.query
+        )
+
+        model.set_projects(self.project_ids)
+
+        model.set_projects([])
+
+        assert sorted(
+            DiscoverSavedQueryProject.objects.all().values_list('project_id', flat=True)
+        ) == []
 
-        assert DiscoverSavedQuery.objects.get(id=model.id).query == query
+        model.set_projects([self.project_ids[0]])
         assert sorted(
             DiscoverSavedQueryProject.objects.all().values_list('project_id', flat=True)
-        ) == project_ids
+        ) == [self.project_ids[0]]
diff --git a/tests/snuba/test_organization_discover_saved_queries.py b/tests/snuba/test_organization_discover_saved_queries.py
index 0f85eef076..c18a493074 100644
--- a/tests/snuba/test_organization_discover_saved_queries.py
+++ b/tests/snuba/test_organization_discover_saved_queries.py
@@ -25,7 +25,7 @@ class OrganizationDiscoverSavedQueriesTest(APITestCase, SnubaTestCase):
         model = DiscoverSavedQuery.objects.create(
             organization=self.org, name="Test query", query=query)
 
-        model.add_projects(self.project_ids)
+        model.set_projects(self.project_ids)
 
     def test_get(self):
         with self.feature('organizations:discover'):
diff --git a/tests/snuba/test_organization_discover_saved_query_detail.py b/tests/snuba/test_organization_discover_saved_query_detail.py
index 2b1e5db644..c42c664704 100644
--- a/tests/snuba/test_organization_discover_saved_query_detail.py
+++ b/tests/snuba/test_organization_discover_saved_query_detail.py
@@ -27,7 +27,7 @@ class OrganizationDiscoverSavedQueryDetailTest(APITestCase, SnubaTestCase):
         model = DiscoverSavedQuery.objects.create(
             organization=self.org, name="Test query", query=query)
 
-        model.add_projects(self.project_ids)
+        model.set_projects(self.project_ids)
 
         self.query_id = model.id
 
