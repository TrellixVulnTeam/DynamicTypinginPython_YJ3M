commit 8e5eb8c68aa8f907b9c019e64f7821a1fd6a0d93
Author: David Cramer <dcramer@gmail.com>
Date:   Fri Sep 16 15:20:26 2016 -0700

    Allow conditions based on event type (#4160)

diff --git a/src/sentry/rules/conditions/event_attribute.py b/src/sentry/rules/conditions/event_attribute.py
index ece0590e82..91dbbe9432 100644
--- a/src/sentry/rules/conditions/event_attribute.py
+++ b/src/sentry/rules/conditions/event_attribute.py
@@ -42,6 +42,7 @@ ATTR_CHOICES = [
     'message',
     'platform',
     'environment',
+    'type',
     'exception.type',
     'exception.value',
     'user.id',
@@ -108,6 +109,9 @@ class EventAttributeCondition(EventCondition):
         elif path[0] == 'environment':
             return [event.get_tag('environment')]
 
+        elif path[0] == 'type':
+            return [event.data['type']]
+
         elif len(path) == 1:
             return []
 
diff --git a/tests/sentry/rules/conditions/test_event_attribute.py b/tests/sentry/rules/conditions/test_event_attribute.py
index ed3bd06fae..0416e4e92f 100644
--- a/tests/sentry/rules/conditions/test_event_attribute.py
+++ b/tests/sentry/rules/conditions/test_event_attribute.py
@@ -14,6 +14,7 @@ class EventAttributeConditionTest(RuleTestCase):
             message='hello world',
             platform='php',
             data={
+                'type': 'error',
                 'sentry.interfaces.Http': {
                     'method': 'GET',
                     'url': 'http://example.com',
@@ -412,3 +413,19 @@ class EventAttributeConditionTest(RuleTestCase):
             'value': 'bar',
         })
         self.assertDoesNotPass(rule, event)
+
+    def test_event_type(self):
+        event = self.get_event()
+        rule = self.get_rule({
+            'match': MatchType.EQUAL,
+            'attribute': 'type',
+            'value': 'error',
+        })
+        self.assertPasses(rule, event)
+
+        rule = self.get_rule({
+            'match': MatchType.EQUAL,
+            'attribute': 'type',
+            'value': 'csp',
+        })
+        self.assertDoesNotPass(rule, event)
