commit b30a76e737f2dafbda6d53db33862ed1f02ae6b4
Author: Matej Minar <matej.minar@sentry.io>
Date:   Thu Jan 9 10:01:30 2020 +0100

    ref(ts): Convert <UserFeedback> to typescript (#16321)

diff --git a/src/sentry/static/sentry/app/components/clipboard.tsx b/src/sentry/static/sentry/app/components/clipboard.tsx
index 7a8ff577c4..008194de2a 100644
--- a/src/sentry/static/sentry/app/components/clipboard.tsx
+++ b/src/sentry/static/sentry/app/components/clipboard.tsx
@@ -10,9 +10,9 @@ type Props = {
   successMessage: string;
   errorMessage: string;
   hideMessages: string;
-  hideUnsupported: boolean;
-  onSuccess: () => void;
-  onError: () => void;
+  hideUnsupported?: boolean;
+  onSuccess?: () => void;
+  onError?: () => void;
 };
 
 class Clipboard extends React.Component<Props> {
@@ -36,14 +36,14 @@ class Clipboard extends React.Component<Props> {
     errorMessage: 'Error copying to clipboard',
   };
 
-  clipboard!: ClipboardJS;
-
   componentWillUnmount() {
     if (this.clipboard) {
       this.clipboard.destroy();
     }
   }
 
+  clipboard!: ClipboardJS;
+
   handleMount = (ref: HTMLElement) => {
     if (!ref) {
       return;
@@ -54,6 +54,7 @@ class Clipboard extends React.Component<Props> {
     const hasErrorCb = typeof onError === 'function';
     const bindEventHandlers = !hideMessages || hasSuccessCb || hasErrorCb;
 
+    // eslint-disable-next-line react/no-find-dom-node
     this.clipboard = new Clip(ReactDOM.findDOMNode(ref) as Element, {
       text: () => this.props.value,
     });
@@ -67,7 +68,7 @@ class Clipboard extends React.Component<Props> {
         if (!hideMessages) {
           IndicatorStore.add(successMessage, 'success', {duration: 2000});
         }
-        if (hasSuccessCb) {
+        if (onSuccess && hasSuccessCb) {
           onSuccess();
         }
       })
@@ -75,7 +76,7 @@ class Clipboard extends React.Component<Props> {
         if (!hideMessages) {
           IndicatorStore.add(errorMessage, 'error', {duration: 2000});
         }
-        if (hasErrorCb) {
+        if (onError && hasErrorCb) {
           onError();
         }
       });
diff --git a/src/sentry/static/sentry/app/components/events/userFeedback.jsx b/src/sentry/static/sentry/app/components/events/userFeedback.tsx
similarity index 86%
rename from src/sentry/static/sentry/app/components/events/userFeedback.jsx
rename to src/sentry/static/sentry/app/components/events/userFeedback.tsx
index 6a7d620cc7..7ae9c1cfe5 100644
--- a/src/sentry/static/sentry/app/components/events/userFeedback.jsx
+++ b/src/sentry/static/sentry/app/components/events/userFeedback.tsx
@@ -2,6 +2,8 @@ import PropTypes from 'prop-types';
 import React from 'react';
 import styled from 'react-emotion';
 
+import {UserReport} from 'app/types';
+import SentryTypes from 'app/sentryTypes';
 import {nl2br, escape} from 'app/utils';
 import {t} from 'app/locale';
 import ActivityAuthor from 'app/components/activity/author';
@@ -11,11 +13,19 @@ import InlineSvg from 'app/components/inlineSvg';
 import Link from 'app/components/links/link';
 import space from 'app/styles/space';
 
-class EventUserFeedback extends React.Component {
+type Props = {
+  report: UserReport;
+  orgId: string;
+  issueId: string;
+  className?: string;
+};
+
+class EventUserFeedback extends React.Component<Props> {
   static propTypes = {
-    report: PropTypes.object.isRequired,
+    report: SentryTypes.UserReport.isRequired,
     orgId: PropTypes.string.isRequired,
     issueId: PropTypes.string.isRequired,
+    className: PropTypes.string,
   };
 
   getUrl() {
diff --git a/src/sentry/static/sentry/app/sentryTypes.jsx b/src/sentry/static/sentry/app/sentryTypes.jsx
index 4bfb773a22..d2b1c728be 100644
--- a/src/sentry/static/sentry/app/sentryTypes.jsx
+++ b/src/sentry/static/sentry/app/sentryTypes.jsx
@@ -519,6 +519,21 @@ export const GlobalSelection = PropTypes.shape({
   }),
 });
 
+export const UserReport = PropTypes.shape({
+  id: PropTypes.string.isRequired,
+  eventID: PropTypes.string.isRequired,
+  issue: Group,
+  name: PropTypes.string.isRequired,
+  event: PropTypes.shape({
+    eventID: PropTypes.string.isRequired,
+    id: PropTypes.string.isRequired,
+  }),
+  user: User.isRequired,
+  dateCreated: PropTypes.string.isRequired,
+  comments: PropTypes.string.isRequired,
+  email: PropTypes.string.isRequired,
+});
+
 export const DebugSourceType = PropTypes.oneOf(['http', 's3', 'gcs']);
 
 // Avoiding code duplication here. This is validated strictly by the server and
@@ -1081,6 +1096,7 @@ const SentryTypes = {
   Release,
   Repository,
   User,
+  UserReport,
   SavedSearch,
   SentryApplication,
   Widget,
diff --git a/src/sentry/static/sentry/app/types/index.tsx b/src/sentry/static/sentry/app/types/index.tsx
index 165c12d4bf..c44c9fef07 100644
--- a/src/sentry/static/sentry/app/types/index.tsx
+++ b/src/sentry/static/sentry/app/types/index.tsx
@@ -627,6 +627,12 @@ export type UserReport = {
   id: string;
   eventID: string;
   issue: Group;
+  name: string;
+  event: {eventID: string; id: string};
+  user: User;
+  dateCreated: string;
+  comments: string;
+  email: string;
 };
 
 export type Commit = {
