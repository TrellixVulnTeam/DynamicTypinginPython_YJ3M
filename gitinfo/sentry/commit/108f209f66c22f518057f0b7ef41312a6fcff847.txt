commit 108f209f66c22f518057f0b7ef41312a6fcff847
Author: Jess MacQueen <jess@getsentry.com>
Date:   Mon Oct 23 14:58:52 2017 -0700

    test(repos): Add tests for repo deletion fail emails

diff --git a/src/sentry/templates/sentry/debug/mail/preview.html b/src/sentry/templates/sentry/debug/mail/preview.html
index 76ede7de13..9959902483 100644
--- a/src/sentry/templates/sentry/debug/mail/preview.html
+++ b/src/sentry/templates/sentry/debug/mail/preview.html
@@ -38,6 +38,9 @@
       <optgroup label="Reports">
         <option value="mail/report/">Weekly Report</option>
       </optgroup>
+      <optgroup label="Repository">
+        <option value="mail/unable-to-delete-repo/">Unable to Delete Repo</option>
+      </optgroup>
       <optgroup label="Security">
         <option value="mail/mfa-added/">MFA Added</option>
         <option value="mail/mfa-removed/">MFA Removed</option>
diff --git a/src/sentry/web/debug_urls.py b/src/sentry/web/debug_urls.py
index 50e9cc1cfa..e868695fc6 100644
--- a/src/sentry/web/debug_urls.py
+++ b/src/sentry/web/debug_urls.py
@@ -23,6 +23,7 @@ from sentry.web.frontend.debug.debug_resolved_email import (DebugResolvedEmailVi
 from sentry.web.frontend.debug.debug_resolved_in_release_email import (
     DebugResolvedInReleaseEmailView, DebugResolvedInReleaseUpcomingEmailView
 )
+from sentry.web.frontend.debug.debug_unable_to_delete_repository import DebugUnableToDeleteRepository
 from sentry.web.frontend.debug.debug_unable_to_fetch_commits_email import DebugUnableToFetchCommitsEmailView
 from sentry.web.frontend.debug.debug_unassigned_email import (DebugUnassignedEmailView)
 from sentry.web.frontend.debug.debug_new_processing_issues_email import (
@@ -58,6 +59,7 @@ urlpatterns = patterns(
     url(r'^debug/mail/invalid-identity/$', DebugInvalidIdentityEmailView.as_view()),
     url(r'^debug/mail/confirm-email/$', sentry.web.frontend.debug.mail.confirm_email),
     url(r'^debug/mail/recover-account/$', sentry.web.frontend.debug.mail.recover_account),
+    url(r'^debug/mail/unable-to-delete-repo/$', DebugUnableToDeleteRepository.as_view()),
     url(r'^debug/mail/unable-to-fetch-commits/$', DebugUnableToFetchCommitsEmailView.as_view()),
     url(r'^debug/mail/unassigned/$', DebugUnassignedEmailView.as_view()),
     url(r'^debug/mail/org-delete-confirm/$', sentry.web.frontend.debug.mail.org_delete_confirm),
diff --git a/src/sentry/web/frontend/debug/debug_unable_to_delete_repository.py b/src/sentry/web/frontend/debug/debug_unable_to_delete_repository.py
new file mode 100644
index 0000000000..370e566c5a
--- /dev/null
+++ b/src/sentry/web/frontend/debug/debug_unable_to_delete_repository.py
@@ -0,0 +1,21 @@
+from __future__ import absolute_import, print_function
+
+from django.views.generic import View
+
+from sentry.models import Repository
+
+from .mail import MailPreview
+
+
+class DebugUnableToDeleteRepository(View):
+    def get(self, request):
+        repo = Repository(name='getsentry/sentry')
+
+        email = repo.generate_delete_fail_email(
+            'An internal server error occurred'
+        )
+        return MailPreview(
+            html_template=email.html_template,
+            text_template=email.template,
+            context=email.context,
+        ).render(request)
diff --git a/tests/acceptance/test_emails.py b/tests/acceptance/test_emails.py
index e5c44d6469..da3830b1b6 100644
--- a/tests/acceptance/test_emails.py
+++ b/tests/acceptance/test_emails.py
@@ -16,6 +16,7 @@ EMAILS = (
     ('/debug/mail/resolved-in-release/upcoming/', 'resolved in release upcoming'),
     ('/debug/mail/unassigned/', 'unassigned'),
     ('/debug/mail/unable-to-fetch-commits/', 'unable to fetch commits'),
+    ('/debug/mail/unable-to-delete-repo/', 'unable to delete repo'),
     ('/debug/mail/alert/', 'alert'),
     ('/debug/mail/digest/', 'digest'),
     ('/debug/mail/invalid-identity/', 'invalid identity'),
diff --git a/tests/sentry/deletions/test_repository.py b/tests/sentry/deletions/test_repository.py
index 251389cdfe..0b89b132f6 100644
--- a/tests/sentry/deletions/test_repository.py
+++ b/tests/sentry/deletions/test_repository.py
@@ -1,5 +1,10 @@
 from __future__ import absolute_import
 
+from mock import patch
+
+from django.core import mail
+
+from sentry.exceptions import PluginError
 from sentry.models import Commit, Repository, ScheduledDeletion
 from sentry.tasks.deletion import run_deletion
 from sentry.testutils import TestCase
@@ -38,3 +43,49 @@ class DeleteRepositoryTest(TestCase):
         assert not Repository.objects.filter(id=repo.id).exists()
         assert not Commit.objects.filter(id=commit.id).exists()
         assert Commit.objects.filter(id=commit2.id).exists()
+
+    @patch('sentry.plugins.providers.dummy.repository.DummyRepositoryProvider.delete_repository')
+    def test_delete_fail_email(self, mock_delete_repo):
+        mock_delete_repo.side_effect = PluginError('foo')
+
+        org = self.create_organization()
+        repo = Repository.objects.create(
+            organization_id=org.id,
+            provider='dummy',
+            name='example/example',
+        )
+
+        deletion = ScheduledDeletion.schedule(repo, actor=self.user, days=0)
+        deletion.update(in_progress=True)
+
+        with self.assertRaises(PluginError):
+            with self.tasks():
+                run_deletion(deletion.id)
+
+        msg = mail.outbox[-1]
+        assert msg.subject == 'Unable to Delete Repository'
+        assert msg.to == [self.user.email]
+        assert 'foo' in msg.body
+
+    @patch('sentry.plugins.providers.dummy.repository.DummyRepositoryProvider.delete_repository')
+    def test_delete_fail_email_random(self, mock_delete_repo):
+        mock_delete_repo.side_effect = Exception('secrets')
+
+        org = self.create_organization()
+        repo = Repository.objects.create(
+            organization_id=org.id,
+            provider='dummy',
+            name='example/example',
+        )
+
+        deletion = ScheduledDeletion.schedule(repo, actor=self.user, days=0)
+        deletion.update(in_progress=True)
+
+        with self.assertRaises(Exception):
+            with self.tasks():
+                run_deletion(deletion.id)
+
+        msg = mail.outbox[-1]
+        assert msg.subject == 'Unable to Delete Repository'
+        assert msg.to == [self.user.email]
+        assert 'secrets' not in msg.body
