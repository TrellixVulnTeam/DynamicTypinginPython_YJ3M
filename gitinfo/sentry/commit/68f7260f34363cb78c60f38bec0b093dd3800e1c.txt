commit 68f7260f34363cb78c60f38bec0b093dd3800e1c
Author: Lyn Nagara <lyn.nagara@gmail.com>
Date:   Tue Jul 10 12:27:17 2018 -0700

    feat(discover): Improve Discover querybuilder UI (#8987)
    
    Change default summarize value to empty list. Update placeholder text, add some padding between form elements.

diff --git a/src/sentry/static/sentry/app/components/organizations/multipleProjectSelector.jsx b/src/sentry/static/sentry/app/components/organizations/multipleProjectSelector.jsx
index 4e7b242fec..4245b5fc6d 100644
--- a/src/sentry/static/sentry/app/components/organizations/multipleProjectSelector.jsx
+++ b/src/sentry/static/sentry/app/components/organizations/multipleProjectSelector.jsx
@@ -65,7 +65,7 @@ export default styled(MultipleProjectSelector)`
   label {
     font-weight: 400;
     font-size: 13px;
-    color: #afa3bb;
+    color: ${p => p.theme.gray6};
     margin-bottom: 12px;
   }
   .dropdown-actor-title {
diff --git a/src/sentry/static/sentry/app/components/organizations/timeRangeSelector.jsx b/src/sentry/static/sentry/app/components/organizations/timeRangeSelector.jsx
index 11071d07b5..ce57a467ca 100644
--- a/src/sentry/static/sentry/app/components/organizations/timeRangeSelector.jsx
+++ b/src/sentry/static/sentry/app/components/organizations/timeRangeSelector.jsx
@@ -56,7 +56,7 @@ export default styled(TimeRangeSelector)`
   label {
     font-weight: 400;
     font-size: 13px;
-    color: #afa3bb;
+    color: ${p => p.theme.gray6};
     margin-bottom: 12px;
   }
   .dropdown-actor-title {
diff --git a/src/sentry/static/sentry/app/utils/theme.jsx b/src/sentry/static/sentry/app/utils/theme.jsx
index a602e89aaa..77373ff866 100644
--- a/src/sentry/static/sentry/app/utils/theme.jsx
+++ b/src/sentry/static/sentry/app/utils/theme.jsx
@@ -12,6 +12,7 @@ const theme = {
   gray3: '#645574',
   gray4: '#4A3E56',
   gray5: '#302839',
+  gray6: '#AFA3BB', // form disabled
 
   blue: '#3B6ECC',
   blueLight: '#628BD6',
diff --git a/src/sentry/static/sentry/app/views/organizationDashboard/projectCard.jsx b/src/sentry/static/sentry/app/views/organizationDashboard/projectCard.jsx
index a3a1efcbad..0a6ab7bd16 100644
--- a/src/sentry/static/sentry/app/views/organizationDashboard/projectCard.jsx
+++ b/src/sentry/static/sentry/app/views/organizationDashboard/projectCard.jsx
@@ -167,7 +167,7 @@ const StyledProjectCard = styled.div`
 `;
 
 const Star = styled.a`
-  color: ${p => (p.active ? p.theme.yellowOrange : '#afa3bb')};
+  color: ${p => (p.active ? p.theme.yellowOrange : p.theme.gray6)};
   margin-right: 16px;
   &:hover {
     color: ${p => p.theme.yellowOrange};
diff --git a/src/sentry/static/sentry/app/views/organizationDiscover/aggregations/aggregation.jsx b/src/sentry/static/sentry/app/views/organizationDiscover/aggregations/aggregation.jsx
index 5e3116cf69..a8d9333548 100644
--- a/src/sentry/static/sentry/app/views/organizationDiscover/aggregations/aggregation.jsx
+++ b/src/sentry/static/sentry/app/views/organizationDiscover/aggregations/aggregation.jsx
@@ -2,9 +2,11 @@ import React from 'react';
 import PropTypes from 'prop-types';
 import {Box} from 'grid-emotion';
 import SelectControl from 'app/components/forms/selectControl';
+import {t} from 'app/locale';
 
 import {getInternal, getExternal} from './utils';
 import {TOPK_COUNTS} from '../data';
+import {PlaceholderText} from '../styles';
 
 export default class Aggregation extends React.Component {
   static propTypes = {
@@ -129,6 +131,9 @@ export default class Aggregation extends React.Component {
         <SelectControl
           forwardedRef={ref => (this.select = ref)}
           value={value}
+          placeholder={
+            <PlaceholderText>{t('Add aggregation function...')}</PlaceholderText>
+          }
           options={this.getOptions()}
           filterOptions={this.filterOptions}
           onChange={this.handleChange}
diff --git a/src/sentry/static/sentry/app/views/organizationDiscover/aggregations/index.jsx b/src/sentry/static/sentry/app/views/organizationDiscover/aggregations/index.jsx
index ba57098033..6ec06a1002 100644
--- a/src/sentry/static/sentry/app/views/organizationDiscover/aggregations/index.jsx
+++ b/src/sentry/static/sentry/app/views/organizationDiscover/aggregations/index.jsx
@@ -1,13 +1,14 @@
 import React from 'react';
 import PropTypes from 'prop-types';
 import styled from 'react-emotion';
-import {Flex, Box} from 'grid-emotion';
+import {Box} from 'grid-emotion';
 
 import Link from 'app/components/link';
 import InlineSvg from 'app/components/inlineSvg';
 import {t} from 'app/locale';
 
 import Aggregation from './aggregation';
+import {PlaceholderText, SelectListItem} from '../styles';
 
 export default class Aggregations extends React.Component {
   static propTypes = {
@@ -45,9 +46,9 @@ export default class Aggregations extends React.Component {
             (<Link onClick={() => this.addRow()}>{t('Add')}</Link>)
           </Add>
         </div>
-        {!value.length && 'None'}
+        {!value.length && <PlaceholderText>{t('None')}</PlaceholderText>}
         {value.map((aggregation, idx) => (
-          <Flex key={idx}>
+          <SelectListItem key={idx}>
             <Aggregation
               value={aggregation}
               onChange={val => this.handleChange(val, idx)}
@@ -58,7 +59,7 @@ export default class Aggregations extends React.Component {
                 <InlineSvg src="icon-circle-close" height="38px" />
               </a>
             </Box>
-          </Flex>
+          </SelectListItem>
         ))}
       </div>
     );
diff --git a/src/sentry/static/sentry/app/views/organizationDiscover/conditions/condition.jsx b/src/sentry/static/sentry/app/views/organizationDiscover/conditions/condition.jsx
index f261525ffb..561a8ec384 100644
--- a/src/sentry/static/sentry/app/views/organizationDiscover/conditions/condition.jsx
+++ b/src/sentry/static/sentry/app/views/organizationDiscover/conditions/condition.jsx
@@ -1,11 +1,12 @@
 import React from 'react';
 import PropTypes from 'prop-types';
 import {Box} from 'grid-emotion';
-
+import {t} from 'app/locale';
 import SelectControl from 'app/components/forms/selectControl';
 
 import {getInternal, getExternal, isValidCondition} from './utils';
 import {CONDITION_OPERATORS} from '../data';
+import {PlaceholderText} from '../styles';
 
 export default class Condition extends React.Component {
   static propTypes = {
@@ -161,6 +162,7 @@ export default class Condition extends React.Component {
         <SelectControl
           forwardedRef={ref => (this.select = ref)}
           value={getInternal(this.props.value)}
+          placeholder={<PlaceholderText>{t('Add condition...')}</PlaceholderText>}
           options={this.getOptions()}
           filterOptions={this.filterOptions}
           onChange={this.handleChange}
diff --git a/src/sentry/static/sentry/app/views/organizationDiscover/conditions/index.jsx b/src/sentry/static/sentry/app/views/organizationDiscover/conditions/index.jsx
index 85c92ca09e..381f6f921d 100644
--- a/src/sentry/static/sentry/app/views/organizationDiscover/conditions/index.jsx
+++ b/src/sentry/static/sentry/app/views/organizationDiscover/conditions/index.jsx
@@ -1,13 +1,14 @@
 import React from 'react';
 import PropTypes from 'prop-types';
 import styled from 'react-emotion';
-import {Flex, Box} from 'grid-emotion';
+import {Box} from 'grid-emotion';
 
 import Link from 'app/components/link';
 import InlineSvg from 'app/components/inlineSvg';
 import {t} from 'app/locale';
 
 import Condition from './condition';
+import {PlaceholderText, SelectListItem} from '../styles';
 
 export default class Conditions extends React.Component {
   static propTypes = {
@@ -56,9 +57,11 @@ export default class Conditions extends React.Component {
             (<Link onClick={() => this.addRow()}>{t('Add')}</Link>)
           </Add>
         </div>
-        {!value.length && 'None, showing all events'}
+        {!value.length && (
+          <PlaceholderText>{t('None, showing all events')}</PlaceholderText>
+        )}
         {value.map((condition, idx) => (
-          <Flex key={idx}>
+          <SelectListItem key={idx}>
             <Condition
               value={condition}
               onChange={val => this.handleChange(val, idx)}
@@ -69,7 +72,7 @@ export default class Conditions extends React.Component {
                 <InlineSvg src="icon-circle-close" height="38px" />
               </a>
             </Box>
-          </Flex>
+          </SelectListItem>
         ))}
       </div>
     );
diff --git a/src/sentry/static/sentry/app/views/organizationDiscover/discover.jsx b/src/sentry/static/sentry/app/views/organizationDiscover/discover.jsx
index ecbd94ef86..44aa0c51c8 100644
--- a/src/sentry/static/sentry/app/views/organizationDiscover/discover.jsx
+++ b/src/sentry/static/sentry/app/views/organizationDiscover/discover.jsx
@@ -20,6 +20,7 @@ import Result from './result';
 
 import {isValidCondition} from './conditions/utils';
 import {isValidAggregation} from './aggregations/utils';
+import {Fieldset, PlaceholderText} from './styles';
 
 export default class OrganizationDiscover extends React.Component {
   static propTypes = {
@@ -93,6 +94,16 @@ export default class OrganizationDiscover extends React.Component {
     }, []);
   };
 
+  getSummarizePlaceholder = () => {
+    const {queryBuilder} = this.props;
+    const query = queryBuilder.getInternal();
+    const text =
+      query.aggregations.length > 0
+        ? t('Select fields')
+        : t('None selected, using all fields');
+    return <PlaceholderText>{text}</PlaceholderText>;
+  };
+
   render() {
     const {result} = this.state;
     const {queryBuilder} = this.props;
@@ -133,37 +144,51 @@ export default class OrganizationDiscover extends React.Component {
         </Header>
         <Flex px={2}>
           <Box w={[1 / 3, 1 / 3, 1 / 3, 1 / 4]}>
-            <MultiSelectField
-              name="fields"
-              label={t('Summarize')}
-              options={fieldOptions}
-              value={query.fields}
-              onChange={val => this.updateField('fields', val)}
-            />
-            <Aggregations
-              value={query.aggregations}
-              columns={columns}
-              onChange={val => this.updateField('aggregations', val)}
-            />
-            <SelectField
-              name="orderby"
-              label={t('Order By')}
-              options={this.getOrderbyOptions()}
-              value={query.orderby}
-              onChange={val => this.updateField('orderby', val)}
-            />
-            <NumberField
-              name="limit"
-              label={t('Limit')}
-              value={query.limit}
-              onChange={val =>
-                this.updateField('limit', typeof val === 'number' ? val : null)}
-            />
-            <Conditions
-              value={query.conditions}
-              columns={columns}
-              onChange={val => this.updateField('conditions', val)}
-            />
+            <Fieldset>
+              <MultiSelectField
+                name="fields"
+                label={t('Summarize')}
+                placeholder={this.getSummarizePlaceholder()}
+                options={fieldOptions}
+                value={query.fields}
+                onChange={val => this.updateField('fields', val)}
+              />
+            </Fieldset>
+            <Fieldset>
+              <Aggregations
+                value={query.aggregations}
+                columns={columns}
+                onChange={val => this.updateField('aggregations', val)}
+              />
+            </Fieldset>
+            <Fieldset>
+              <Conditions
+                value={query.conditions}
+                columns={columns}
+                onChange={val => this.updateField('conditions', val)}
+              />
+            </Fieldset>
+            <Fieldset>
+              <SelectField
+                name="orderby"
+                label={t('Order By')}
+                placeholder={<PlaceholderText>{t('Order by...')}</PlaceholderText>}
+                options={this.getOrderbyOptions()}
+                value={query.orderby}
+                onChange={val => this.updateField('orderby', val)}
+              />
+            </Fieldset>
+            <Fieldset>
+              <NumberField
+                name="limit"
+                label={t('Limit')}
+                placeholder="#"
+                value={query.limit}
+                onChange={val =>
+                  this.updateField('limit', typeof val === 'number' ? val : null)}
+              />
+            </Fieldset>
+
             <Button onClick={this.runQuery} style={{marginTop: 8}} priority="primary">
               {t('Run Query')}
             </Button>
diff --git a/src/sentry/static/sentry/app/views/organizationDiscover/queryBuilder.jsx b/src/sentry/static/sentry/app/views/organizationDiscover/queryBuilder.jsx
index ae791cf53f..fdb8e8e3c7 100644
--- a/src/sentry/static/sentry/app/views/organizationDiscover/queryBuilder.jsx
+++ b/src/sentry/static/sentry/app/views/organizationDiscover/queryBuilder.jsx
@@ -9,7 +9,7 @@ const DATE_TIME_FORMAT = 'YYYY-MM-DDTHH:mm:ss';
 
 const DEFAULTS = {
   projects: [],
-  fields: ['event_id', 'timestamp'],
+  fields: [],
   conditions: [],
   aggregations: [],
   start: moment()
diff --git a/src/sentry/static/sentry/app/views/organizationDiscover/styles.jsx b/src/sentry/static/sentry/app/views/organizationDiscover/styles.jsx
new file mode 100644
index 0000000000..abb519b82d
--- /dev/null
+++ b/src/sentry/static/sentry/app/views/organizationDiscover/styles.jsx
@@ -0,0 +1,17 @@
+import styled from 'react-emotion';
+import {Flex} from 'grid-emotion';
+
+import space from 'app/styles/space';
+
+export const PlaceholderText = styled.div`
+  color: ${p => p.theme.gray6};
+  font-size: 15px;
+`;
+
+export const Fieldset = styled.fieldset`
+  margin-bottom: ${space(1)};
+`;
+
+export const SelectListItem = styled(Flex)`
+  margin-top: ${space(0.5)};
+`;
diff --git a/tests/js/spec/views/organizationDashboard/__snapshots__/projectCard.spec.jsx.snap b/tests/js/spec/views/organizationDashboard/__snapshots__/projectCard.spec.jsx.snap
index db5fedf911..57972578bb 100644
--- a/tests/js/spec/views/organizationDashboard/__snapshots__/projectCard.spec.jsx.snap
+++ b/tests/js/spec/views/organizationDashboard/__snapshots__/projectCard.spec.jsx.snap
@@ -405,7 +405,7 @@ exports[`ProjectCard renders 1`] = `
                       title="Add to bookmarks"
                     >
                       <a
-                        className="tip project-select-bookmark icon icon-star-solid css-31kf5u-Star efesc7i4"
+                        className="tip project-select-bookmark icon icon-star-solid css-9lfgnk-Star efesc7i4"
                         onClick={[Function]}
                         title="Add to bookmarks"
                       />
diff --git a/tests/js/spec/views/organizationDiscover/aggregations/aggregation.spec.jsx b/tests/js/spec/views/organizationDiscover/aggregations/aggregation.spec.jsx
index 7150a3ad59..46cd2278a8 100644
--- a/tests/js/spec/views/organizationDiscover/aggregations/aggregation.spec.jsx
+++ b/tests/js/spec/views/organizationDiscover/aggregations/aggregation.spec.jsx
@@ -7,7 +7,7 @@ describe('Aggregation', function() {
   describe('render()', function() {
     it('renders empty, count, topK, uniq and avg', function() {
       const data = [
-        {value: [null, null, null], expectedTextValue: 'Select...'},
+        {value: [null, null, null], expectedTextValue: 'Add aggregation function...'},
         {value: ['count', null, 'count'], expectedTextValue: 'count'},
         {
           value: ['uniq', 'environment', 'uniq_environment'],
diff --git a/tests/js/spec/views/organizationDiscover/conditions/condition.spec.jsx b/tests/js/spec/views/organizationDiscover/conditions/condition.spec.jsx
index c031ff32e8..33113d8d56 100644
--- a/tests/js/spec/views/organizationDiscover/conditions/condition.spec.jsx
+++ b/tests/js/spec/views/organizationDiscover/conditions/condition.spec.jsx
@@ -7,7 +7,7 @@ describe('Condition', function() {
   describe('render()', function() {
     it('renders text', function() {
       const data = [
-        {value: [null, null, null], expectedText: 'Select...'},
+        {value: [null, null, null], expectedText: 'Add condition...'},
         {value: ['device_name', '=', 'test'], expectedText: 'device_name = test'},
         {value: ['device_name', 'IS NULL', null], expectedText: 'device_name IS NULL'},
         {
diff --git a/tests/js/spec/views/organizationDiscover/queryBuilder.spec.jsx b/tests/js/spec/views/organizationDiscover/queryBuilder.spec.jsx
index 121b5d3cc8..a2f5312a5b 100644
--- a/tests/js/spec/views/organizationDiscover/queryBuilder.spec.jsx
+++ b/tests/js/spec/views/organizationDiscover/queryBuilder.spec.jsx
@@ -9,7 +9,8 @@ describe('Query Builder', function() {
     const external = queryBuilder.getExternal();
 
     expect(external.projects).toEqual([2]);
-    expect(external.fields).toEqual(['event_id', 'timestamp']);
+    expect(external.fields).toEqual(expect.arrayContaining([expect.any(String)]));
+    expect(external.fields).toHaveLength(47);
     expect(external.conditions).toHaveLength(0);
     expect(external.aggregations).toHaveLength(0);
     expect(external.orderby).toBe('-timestamp');
