commit 8eccd53aa0d8d1c31dded713471f41e50dba4f2a
Author: Lyn Nagara <lyn.nagara@gmail.com>
Date:   Wed Dec 20 10:48:02 2017 -0800

    fix: Fix setting of component state in React components (#6804)
    
    React codemod set state as a class property

diff --git a/src/sentry/static/sentry/app/components/activity/item.jsx b/src/sentry/static/sentry/app/components/activity/item.jsx
index 6864e99793..495ce35f67 100644
--- a/src/sentry/static/sentry/app/components/activity/item.jsx
+++ b/src/sentry/static/sentry/app/components/activity/item.jsx
@@ -26,9 +26,12 @@ class ActivityItem extends React.Component {
     clipHeight: 68,
   };
 
-  state = {
-    clipped: this.props.defaultClipped,
-  };
+  constructor(...args) {
+    super(...args);
+    this.state = {
+      clipped: this.props.defaultClipped,
+    };
+  }
 
   componentDidMount() {
     if (this.refs.activityBubble) {
diff --git a/src/sentry/static/sentry/app/components/activity/noteContainer.jsx b/src/sentry/static/sentry/app/components/activity/noteContainer.jsx
index 75b982c915..102ffe2aa6 100644
--- a/src/sentry/static/sentry/app/components/activity/noteContainer.jsx
+++ b/src/sentry/static/sentry/app/components/activity/noteContainer.jsx
@@ -14,9 +14,12 @@ class NoteContainer extends React.Component {
     memberList: PropTypes.array.isRequired,
   };
 
-  state = {
-    editing: false,
-  };
+  constructor(...args) {
+    super(...args);
+    this.state = {
+      editing: false,
+    };
+  }
 
   onEdit = () => {
     this.setState({editing: true});
diff --git a/src/sentry/static/sentry/app/components/avatar.jsx b/src/sentry/static/sentry/app/components/avatar.jsx
index 4338e6244f..c7b6c47f53 100644
--- a/src/sentry/static/sentry/app/components/avatar.jsx
+++ b/src/sentry/static/sentry/app/components/avatar.jsx
@@ -20,10 +20,13 @@ class Avatar extends React.Component {
     gravatar: true,
   };
 
-  state = {
-    showBackupAvatar: false,
-    loadError: false,
-  };
+  constructor(...args) {
+    super(...args);
+    this.state = {
+      showBackupAvatar: false,
+      loadError: false,
+    };
+  }
 
   buildGravatarUrl = () => {
     let url = ConfigStore.getConfig().gravatarBaseUrl + '/avatar/';
diff --git a/src/sentry/static/sentry/app/components/avatarCropper.jsx b/src/sentry/static/sentry/app/components/avatarCropper.jsx
index 68509d3e91..62191d030b 100644
--- a/src/sentry/static/sentry/app/components/avatarCropper.jsx
+++ b/src/sentry/static/sentry/app/components/avatarCropper.jsx
@@ -11,17 +11,20 @@ class AvatarCropper extends React.Component {
     savedDataUrl: PropTypes.string,
   };
 
-  state = {
-    mousePosition: {
-      pageX: null,
-      pageY: null,
-    },
-    resizeDimensions: {
-      top: 0,
-      left: 0,
-      size: 0,
-    },
-  };
+  constructor(...args) {
+    super(...args);
+    this.state = {
+      mousePosition: {
+        pageX: null,
+        pageY: null,
+      },
+      resizeDimensions: {
+        top: 0,
+        left: 0,
+        size: 0,
+      },
+    };
+  }
 
   componentWillUnmount() {
     this.revokeObjectUrl();
diff --git a/src/sentry/static/sentry/app/components/clippedBox.jsx b/src/sentry/static/sentry/app/components/clippedBox.jsx
index 937fb87bb1..f3d9a26ff4 100644
--- a/src/sentry/static/sentry/app/components/clippedBox.jsx
+++ b/src/sentry/static/sentry/app/components/clippedBox.jsx
@@ -20,10 +20,13 @@ class ClippedBox extends React.Component {
     btnText: t('Show More'),
   };
 
-  state = {
-    clipped: this.props.defaultClipped,
-    revealed: false, // True once user has clicked "Show More" button
-  };
+  constructor(...args) {
+    super(...args);
+    this.state = {
+      clipped: this.props.defaultClipped,
+      revealed: false, // True once user has clicked "Show More" button
+    };
+  }
 
   componentDidMount() {
     let renderedHeight = ReactDOM.findDOMNode(this).offsetHeight;
diff --git a/src/sentry/static/sentry/app/components/confirms/numberConfirm.jsx b/src/sentry/static/sentry/app/components/confirms/numberConfirm.jsx
index 06c81b4048..1994157c52 100644
--- a/src/sentry/static/sentry/app/components/confirms/numberConfirm.jsx
+++ b/src/sentry/static/sentry/app/components/confirms/numberConfirm.jsx
@@ -11,9 +11,12 @@ class NumberConfirm extends React.Component {
     onFinished: PropTypes.func,
   };
 
-  state = {
-    showModal: this.props.show || false,
-  };
+  constructor(...args) {
+    super(...args);
+    this.state = {
+      showModal: this.props.show || false,
+    };
+  }
 
   componentWillReceiveProps(nextProps) {
     if (nextProps.show != this.props.show) {
diff --git a/src/sentry/static/sentry/app/components/customIgnoreCountModal.jsx b/src/sentry/static/sentry/app/components/customIgnoreCountModal.jsx
index 66e1fe83d7..fa0dae4985 100644
--- a/src/sentry/static/sentry/app/components/customIgnoreCountModal.jsx
+++ b/src/sentry/static/sentry/app/components/customIgnoreCountModal.jsx
@@ -16,10 +16,13 @@ export default class CustomIgnoreCountModal extends React.Component {
     windowChoices: PropTypes.array.isRequired,
   };
 
-  state = {
-    count: 100,
-    window: '',
-  };
+  constructor(...args) {
+    super(...args);
+    this.state = {
+      count: 100,
+      window: '',
+    };
+  }
 
   onSubmit = () => {
     this.props.onSelected({
diff --git a/src/sentry/static/sentry/app/components/customIgnoreDurationModal.jsx b/src/sentry/static/sentry/app/components/customIgnoreDurationModal.jsx
index 73beb2180d..99177bba9d 100644
--- a/src/sentry/static/sentry/app/components/customIgnoreDurationModal.jsx
+++ b/src/sentry/static/sentry/app/components/customIgnoreDurationModal.jsx
@@ -17,9 +17,12 @@ export default class CustomIgnoreDurationModal extends React.Component {
     label: t('Ignore this issue until it occurs after ..'),
   };
 
-  state = {
-    dateWarning: false,
-  };
+  constructor(...args) {
+    super(...args);
+    this.state = {
+      dateWarning: false,
+    };
+  }
 
   selectedIgnoreMinutes = () => {
     const dateStr = this.refs.snoozeDateInput.value; // YYYY-MM-DD
diff --git a/src/sentry/static/sentry/app/components/customResolutionModal.jsx b/src/sentry/static/sentry/app/components/customResolutionModal.jsx
index ce5c4bafb8..e5cc2fbb20 100644
--- a/src/sentry/static/sentry/app/components/customResolutionModal.jsx
+++ b/src/sentry/static/sentry/app/components/customResolutionModal.jsx
@@ -20,7 +20,10 @@ export default class CustomResolutionModal extends React.Component {
     show: PropTypes.bool,
   };
 
-  state = {version: ''};
+  constructor(...args) {
+    super(...args);
+    this.state = {version: ''};
+  }
 
   componentDidUpdate(prevProps, prevState) {
     if (!prevProps.show && this.props.show) {
diff --git a/src/sentry/static/sentry/app/components/events/contexts.jsx b/src/sentry/static/sentry/app/components/events/contexts.jsx
index 32e3453722..16070ae853 100644
--- a/src/sentry/static/sentry/app/components/events/contexts.jsx
+++ b/src/sentry/static/sentry/app/components/events/contexts.jsx
@@ -39,9 +39,12 @@ class ContextChunk extends React.Component {
     value: PropTypes.object.isRequired,
   };
 
-  state = {
-    isLoading: false,
-  };
+  constructor(...args) {
+    super(...args);
+    this.state = {
+      isLoading: false,
+    };
+  }
 
   componentWillMount() {
     this.syncPlugin();
diff --git a/src/sentry/static/sentry/app/components/events/device.jsx b/src/sentry/static/sentry/app/components/events/device.jsx
index a781143133..32e1db23bb 100644
--- a/src/sentry/static/sentry/app/components/events/device.jsx
+++ b/src/sentry/static/sentry/app/components/events/device.jsx
@@ -12,8 +12,6 @@ class DeviceInterface extends React.Component {
     event: SentryTypes.Event.isRequired,
   };
 
-  state = {};
-
   render() {
     let {group, event} = this.props;
     let data = event.device;
diff --git a/src/sentry/static/sentry/app/components/events/errorItem.jsx b/src/sentry/static/sentry/app/components/events/errorItem.jsx
index a328b128b2..c6a286af01 100644
--- a/src/sentry/static/sentry/app/components/events/errorItem.jsx
+++ b/src/sentry/static/sentry/app/components/events/errorItem.jsx
@@ -7,9 +7,12 @@ class EventErrorItem extends React.Component {
     error: PropTypes.object.isRequired,
   };
 
-  state = {
-    isOpen: false,
-  };
+  constructor(...args) {
+    super(...args);
+    this.state = {
+      isOpen: false,
+    };
+  }
 
   shouldComponentUpdate(nextProps, nextState) {
     return this.state.isOpen !== nextState.isOpen;
diff --git a/src/sentry/static/sentry/app/components/events/errors.jsx b/src/sentry/static/sentry/app/components/events/errors.jsx
index 859c61d2d3..e7d04851bb 100644
--- a/src/sentry/static/sentry/app/components/events/errors.jsx
+++ b/src/sentry/static/sentry/app/components/events/errors.jsx
@@ -12,9 +12,12 @@ class EventErrors extends React.Component {
     event: SentryTypes.Event.isRequired,
   };
 
-  state = {
-    isOpen: false,
-  };
+  constructor(...args) {
+    super(...args);
+    this.state = {
+      isOpen: false,
+    };
+  }
 
   shouldComponentUpdate(nextProps, nextState) {
     if (this.state.isOpen != nextState.isOpen) {
diff --git a/src/sentry/static/sentry/app/components/events/eventRow.jsx b/src/sentry/static/sentry/app/components/events/eventRow.jsx
index 53765f0bea..398437d26b 100644
--- a/src/sentry/static/sentry/app/components/events/eventRow.jsx
+++ b/src/sentry/static/sentry/app/components/events/eventRow.jsx
@@ -12,9 +12,12 @@ class EventRow extends React.Component {
     projectSlug: PropTypes.string.isRequired,
   };
 
-  state = {
-    event: EventStore.get(this.props.id),
-  };
+  constructor(...args) {
+    super(...args);
+    this.state = {
+      event: EventStore.get(this.props.id),
+    };
+  }
 
   componentWillReceiveProps(nextProps) {
     if (nextProps.id != this.props.id) {
diff --git a/src/sentry/static/sentry/app/components/events/extraData.jsx b/src/sentry/static/sentry/app/components/events/extraData.jsx
index b09546d12e..c76cec5939 100644
--- a/src/sentry/static/sentry/app/components/events/extraData.jsx
+++ b/src/sentry/static/sentry/app/components/events/extraData.jsx
@@ -12,9 +12,12 @@ class EventExtraData extends React.Component {
     event: SentryTypes.Event.isRequired,
   };
 
-  state = {
-    raw: false,
-  };
+  constructor(...args) {
+    super(...args);
+    this.state = {
+      raw: false,
+    };
+  }
 
   shouldComponentUpdate(nextProps, nextState) {
     return this.props.event.id !== nextProps.event.id || this.state.raw !== nextState.raw;
diff --git a/src/sentry/static/sentry/app/components/events/interfaces/breadcrumbs.jsx b/src/sentry/static/sentry/app/components/events/interfaces/breadcrumbs.jsx
index ac9d49fa35..bd71467c59 100644
--- a/src/sentry/static/sentry/app/components/events/interfaces/breadcrumbs.jsx
+++ b/src/sentry/static/sentry/app/components/events/interfaces/breadcrumbs.jsx
@@ -48,10 +48,13 @@ class BreadcrumbsInterface extends React.Component {
 
   static MAX_CRUMBS_WHEN_COLLAPSED = 10;
 
-  state = {
-    collapsed: true,
-    queryValue: '',
-  };
+  constructor(...args) {
+    super(...args);
+    this.state = {
+      collapsed: true,
+      queryValue: '',
+    };
+  }
 
   onCollapseToggle = () => {
     this.setState({
diff --git a/src/sentry/static/sentry/app/components/events/interfaces/exception.jsx b/src/sentry/static/sentry/app/components/events/interfaces/exception.jsx
index fd7652e984..43386dc444 100644
--- a/src/sentry/static/sentry/app/components/events/interfaces/exception.jsx
+++ b/src/sentry/static/sentry/app/components/events/interfaces/exception.jsx
@@ -14,11 +14,14 @@ class ExceptionInterface extends React.Component {
     data: PropTypes.object.isRequired,
   };
 
-  state = {
-    stackView: this.props.data.hasSystemFrames ? 'app' : 'full',
-    newestFirst: isStacktraceNewestFirst(),
-    stackType: 'original',
-  };
+  constructor(...args) {
+    super(...args);
+    this.state = {
+      stackView: this.props.data.hasSystemFrames ? 'app' : 'full',
+      newestFirst: isStacktraceNewestFirst(),
+      stackType: 'original',
+    };
+  }
 
   eventHasThreads = () => {
     return !!this.props.event.entries.find(x => x.type === 'threads');
diff --git a/src/sentry/static/sentry/app/components/events/interfaces/request.jsx b/src/sentry/static/sentry/app/components/events/interfaces/request.jsx
index 701ea94807..c348203db1 100644
--- a/src/sentry/static/sentry/app/components/events/interfaces/request.jsx
+++ b/src/sentry/static/sentry/app/components/events/interfaces/request.jsx
@@ -23,9 +23,12 @@ class RequestInterface extends React.Component {
     project: SentryTypes.Project,
   };
 
-  state = {
-    view: 'formatted',
-  };
+  constructor(...args) {
+    super(...args);
+    this.state = {
+      view: 'formatted',
+    };
+  }
 
   isPartial = () => {
     // We assume we only have a partial interface is we're missing
diff --git a/src/sentry/static/sentry/app/components/events/interfaces/stacktrace.jsx b/src/sentry/static/sentry/app/components/events/interfaces/stacktrace.jsx
index ce48072f8b..71aebea007 100644
--- a/src/sentry/static/sentry/app/components/events/interfaces/stacktrace.jsx
+++ b/src/sentry/static/sentry/app/components/events/interfaces/stacktrace.jsx
@@ -31,10 +31,13 @@ class StacktraceInterface extends React.Component {
     platform: PropTypes.string,
   };
 
-  state = {
-    stackView: this.props.data.hasSystemFrames ? 'app' : 'full',
-    newestFirst: isStacktraceNewestFirst(),
-  };
+  constructor(...args) {
+    super(...args);
+    this.state = {
+      stackView: this.props.data.hasSystemFrames ? 'app' : 'full',
+      newestFirst: isStacktraceNewestFirst(),
+    };
+  }
 
   toggleStack = value => {
     this.setState({
diff --git a/src/sentry/static/sentry/app/components/events/interfaces/template.jsx b/src/sentry/static/sentry/app/components/events/interfaces/template.jsx
index aedf309f9e..8b66237c00 100644
--- a/src/sentry/static/sentry/app/components/events/interfaces/template.jsx
+++ b/src/sentry/static/sentry/app/components/events/interfaces/template.jsx
@@ -13,8 +13,6 @@ class TemplateInterface extends React.Component {
     data: PropTypes.object.isRequired,
   };
 
-  state = {};
-
   render() {
     return (
       <GroupEventDataSection
diff --git a/src/sentry/static/sentry/app/components/hovercard.jsx b/src/sentry/static/sentry/app/components/hovercard.jsx
index 769589e645..65eb297eaf 100644
--- a/src/sentry/static/sentry/app/components/hovercard.jsx
+++ b/src/sentry/static/sentry/app/components/hovercard.jsx
@@ -10,9 +10,12 @@ class Hovercard extends React.Component {
     body: PropTypes.node,
   };
 
-  state = {
-    visible: false,
-  };
+  constructor(...args) {
+    super(...args);
+    this.state = {
+      visible: false,
+    };
+  }
 
   handleToggleHovercard = () => {
     let {header, body} = this.props;
diff --git a/src/sentry/static/sentry/app/components/issues/snoozeAction.jsx b/src/sentry/static/sentry/app/components/issues/snoozeAction.jsx
index 7556d01936..d7e9c8675a 100644
--- a/src/sentry/static/sentry/app/components/issues/snoozeAction.jsx
+++ b/src/sentry/static/sentry/app/components/issues/snoozeAction.jsx
@@ -17,9 +17,12 @@ class SnoozeAction extends React.Component {
     tooltip: PropTypes.string,
   };
 
-  state = {
-    isModalOpen: false,
-  };
+  constructor(...args) {
+    super(...args);
+    this.state = {
+      isModalOpen: false,
+    };
+  }
 
   toggleModal = () => {
     if (this.props.disabled) {
diff --git a/src/sentry/static/sentry/app/components/repositoryFileSummary.jsx b/src/sentry/static/sentry/app/components/repositoryFileSummary.jsx
index cb929519b2..cbaac6a757 100644
--- a/src/sentry/static/sentry/app/components/repositoryFileSummary.jsx
+++ b/src/sentry/static/sentry/app/components/repositoryFileSummary.jsx
@@ -27,10 +27,13 @@ class RepositoryFileSummary extends React.Component {
 
   static MAX_WHEN_COLLAPSED = 5;
 
-  state = {
-    loading: true,
-    collapsed: true,
-  };
+  constructor(...args) {
+    super(...args);
+    this.state = {
+      loading: true,
+      collapsed: true,
+    };
+  }
 
   onCollapseToggle = () => {
     this.setState({
diff --git a/src/sentry/static/sentry/app/components/scoreBar.jsx b/src/sentry/static/sentry/app/components/scoreBar.jsx
index 9bdf1ed5cb..1d9cbd7b56 100644
--- a/src/sentry/static/sentry/app/components/scoreBar.jsx
+++ b/src/sentry/static/sentry/app/components/scoreBar.jsx
@@ -21,8 +21,6 @@ class ScoreBar extends React.Component {
     paletteClassNames: ['low', 'low-med', 'med', 'med-high', 'high'],
   };
 
-  state = {};
-
   render() {
     let {
       className,
diff --git a/src/sentry/static/sentry/app/components/searchBar.jsx b/src/sentry/static/sentry/app/components/searchBar.jsx
index e0e16d3fa7..bbdae7159f 100644
--- a/src/sentry/static/sentry/app/components/searchBar.jsx
+++ b/src/sentry/static/sentry/app/components/searchBar.jsx
@@ -18,9 +18,12 @@ class SearchBar extends React.PureComponent {
     onQueryChange: function() {},
   };
 
-  state = {
-    query: this.props.query || this.props.defaultQuery,
-  };
+  constructor(...args) {
+    super(...args);
+    this.state = {
+      query: this.props.query || this.props.defaultQuery,
+    };
+  }
 
   blur = () => {
     ReactDOM.findDOMNode(this.refs.searchInput).blur();
diff --git a/src/sentry/static/sentry/app/components/similarSpectrum.jsx b/src/sentry/static/sentry/app/components/similarSpectrum.jsx
index e1cb3f7f6b..b7d25e724e 100644
--- a/src/sentry/static/sentry/app/components/similarSpectrum.jsx
+++ b/src/sentry/static/sentry/app/components/similarSpectrum.jsx
@@ -7,7 +7,6 @@ import '../../less/components/similarSpectrum.less';
 class SimilarSpectrum extends React.Component {
   static propTypes = {};
   static defaultProps = {};
-  state = {};
 
   render() {
     let {className} = this.props;
diff --git a/src/sentry/static/sentry/app/components/splitDiff.jsx b/src/sentry/static/sentry/app/components/splitDiff.jsx
index 72c77885d8..1a9705a298 100644
--- a/src/sentry/static/sentry/app/components/splitDiff.jsx
+++ b/src/sentry/static/sentry/app/components/splitDiff.jsx
@@ -21,8 +21,6 @@ class SplitDiff extends React.Component {
     type: 'lines',
   };
 
-  state = {};
-
   render() {
     let {className, type, base, target} = this.props;
     let cx = classNames('split-diff', className);
diff --git a/src/sentry/static/sentry/app/components/strictClick.jsx b/src/sentry/static/sentry/app/components/strictClick.jsx
index a5d6a8e9f2..22303a9866 100644
--- a/src/sentry/static/sentry/app/components/strictClick.jsx
+++ b/src/sentry/static/sentry/app/components/strictClick.jsx
@@ -15,9 +15,12 @@ class StrictClick extends React.PureComponent {
   static MAX_DELTA_X = 10;
   static MAX_DELTA_Y = 10;
 
-  state = {
-    startCoords: null,
-  };
+  constructor(...args) {
+    super(...args);
+    this.state = {
+      startCoords: null,
+    };
+  }
 
   handleMouseDown = evt => {
     this.setState({
diff --git a/src/sentry/static/sentry/app/components/truncate.jsx b/src/sentry/static/sentry/app/components/truncate.jsx
index 085a47d3b1..4a91bcbe83 100644
--- a/src/sentry/static/sentry/app/components/truncate.jsx
+++ b/src/sentry/static/sentry/app/components/truncate.jsx
@@ -13,9 +13,12 @@ class Truncate extends React.Component {
     maxLength: 50,
   };
 
-  state = {
-    isExpanded: false,
-  };
+  constructor(...args) {
+    super(...args);
+    this.state = {
+      isExpanded: false,
+    };
+  }
 
   onFocus = e => {
     let {value, maxLength} = this.props;
diff --git a/src/sentry/static/sentry/app/views/adminBuffer.jsx b/src/sentry/static/sentry/app/views/adminBuffer.jsx
index 44b327fcca..ce57c79292 100644
--- a/src/sentry/static/sentry/app/views/adminBuffer.jsx
+++ b/src/sentry/static/sentry/app/views/adminBuffer.jsx
@@ -4,10 +4,13 @@ import React from 'react';
 import InternalStatChart from '../components/internalStatChart';
 
 class AdminBuffer extends React.Component {
-  state = {
-    since: new Date().getTime() / 1000 - 3600 * 24 * 7,
-    resolution: '1h',
-  };
+  constructor(...args) {
+    super(...args);
+    this.state = {
+      since: new Date().getTime() / 1000 - 3600 * 24 * 7,
+      resolution: '1h',
+    };
+  }
 
   render() {
     // TODO(dcramer): show buffer configuration when its moved into option store
diff --git a/src/sentry/static/sentry/app/views/adminOverview/index.jsx b/src/sentry/static/sentry/app/views/adminOverview/index.jsx
index f47b6d2f85..b7e24a5892 100644
--- a/src/sentry/static/sentry/app/views/adminOverview/index.jsx
+++ b/src/sentry/static/sentry/app/views/adminOverview/index.jsx
@@ -5,10 +5,13 @@ import ApiChart from './apiChart';
 import EventChart from './eventChart';
 
 export default class extends React.Component {
-  state = {
-    since: new Date().getTime() / 1000 - 3600 * 24 * 7,
-    resolution: '1h',
-  };
+  constructor(...args) {
+    super(...args);
+    this.state = {
+      since: new Date().getTime() / 1000 - 3600 * 24 * 7,
+      resolution: '1h',
+    };
+  }
 
   render() {
     return (
diff --git a/src/sentry/static/sentry/app/views/groupSimilar/similarList.jsx b/src/sentry/static/sentry/app/views/groupSimilar/similarList.jsx
index 650daaea3a..f91074f6e8 100644
--- a/src/sentry/static/sentry/app/views/groupSimilar/similarList.jsx
+++ b/src/sentry/static/sentry/app/views/groupSimilar/similarList.jsx
@@ -32,9 +32,12 @@ class SimilarList extends React.Component {
     filteredItems: [],
   };
 
-  state = {
-    showAllItems: false,
-  };
+  constructor(...args) {
+    super(...args);
+    this.state = {
+      showAllItems: false,
+    };
+  }
 
   renderEmpty = () => {
     return (
diff --git a/src/sentry/static/sentry/app/views/onboarding/project/index.jsx b/src/sentry/static/sentry/app/views/onboarding/project/index.jsx
index 6e23ab0596..009f20e179 100644
--- a/src/sentry/static/sentry/app/views/onboarding/project/index.jsx
+++ b/src/sentry/static/sentry/app/views/onboarding/project/index.jsx
@@ -25,7 +25,10 @@ class OnboardingProject extends React.Component {
     teams: [],
   };
 
-  state = {projectRequired: false};
+  constructor(...args) {
+    super(...args);
+    this.state = {projectRequired: false};
+  }
 
   componentWillReceiveProps(newProps) {
     this.setWarning(newProps.name);
diff --git a/src/sentry/static/sentry/app/views/onboarding/project/platformpicker.jsx b/src/sentry/static/sentry/app/views/onboarding/project/platformpicker.jsx
index 9ecd25bd24..a7dfe68de3 100644
--- a/src/sentry/static/sentry/app/views/onboarding/project/platformpicker.jsx
+++ b/src/sentry/static/sentry/app/views/onboarding/project/platformpicker.jsx
@@ -18,10 +18,13 @@ class PlatformPicker extends React.Component {
 
   static defaultProps = {showOther: true};
 
-  state = {
-    tab: categoryList[0],
-    filter: (this.props.platform || '').split('-')[0],
-  };
+  constructor(...args) {
+    super(...args);
+    this.state = {
+      tab: categoryList[0],
+      filter: (this.props.platform || '').split('-')[0],
+    };
+  }
 
   renderPlatformList = () => {
     let {tab} = this.state;
diff --git a/src/sentry/static/sentry/app/views/projectInstall/languageNav.jsx b/src/sentry/static/sentry/app/views/projectInstall/languageNav.jsx
index a275110515..7252ea56b9 100644
--- a/src/sentry/static/sentry/app/views/projectInstall/languageNav.jsx
+++ b/src/sentry/static/sentry/app/views/projectInstall/languageNav.jsx
@@ -7,9 +7,12 @@ class LanguageNav extends React.Component {
     active: PropTypes.bool,
   };
 
-  state = {
-    isVisible: this.props.active || false,
-  };
+  constructor(...args) {
+    super(...args);
+    this.state = {
+      isVisible: this.props.active || false,
+    };
+  }
 
   toggle = () => {
     this.setState({isVisible: !this.state.isVisible});
diff --git a/src/sentry/static/sentry/app/views/projectInstall/overview.jsx b/src/sentry/static/sentry/app/views/projectInstall/overview.jsx
index f4a931847f..d049607edb 100644
--- a/src/sentry/static/sentry/app/views/projectInstall/overview.jsx
+++ b/src/sentry/static/sentry/app/views/projectInstall/overview.jsx
@@ -12,9 +12,12 @@ class ProjectInstallOverview extends React.Component {
     platformData: PropTypes.object,
   };
 
-  state = {
-    data: this.props.platformData,
-  };
+  constructor(...args) {
+    super(...args);
+    this.state = {
+      data: this.props.platformData,
+    };
+  }
 
   isGettingStarted = () => {
     return location.href.indexOf('getting-started') > 0;
diff --git a/src/sentry/static/sentry/app/views/stream/sortOptions.jsx b/src/sentry/static/sentry/app/views/stream/sortOptions.jsx
index d8c185145c..a1b2c0cc27 100644
--- a/src/sentry/static/sentry/app/views/stream/sortOptions.jsx
+++ b/src/sentry/static/sentry/app/views/stream/sortOptions.jsx
@@ -10,9 +10,12 @@ class SortOptions extends React.PureComponent {
     onSelect: PropTypes.func,
   };
 
-  state = {
-    sortKey: this.props.sort || 'date',
-  };
+  constructor(...args) {
+    super(...args);
+    this.state = {
+      sortKey: this.props.sort || 'date',
+    };
+  }
 
   componentWillReceiveProps(nextProps) {
     this.setState({
diff --git a/src/sentry/static/sentry/app/views/stream/tagFilter.jsx b/src/sentry/static/sentry/app/views/stream/tagFilter.jsx
index a03ad5f436..2c16cdc94c 100644
--- a/src/sentry/static/sentry/app/views/stream/tagFilter.jsx
+++ b/src/sentry/static/sentry/app/views/stream/tagFilter.jsx
@@ -24,11 +24,14 @@ class StreamTagFilter extends React.Component {
     value: '',
   };
 
-  state = {
-    query: '',
-    loading: false,
-    value: this.props.value,
-  };
+  constructor(...args) {
+    super(...args);
+    this.state = {
+      query: '',
+      loading: false,
+      value: this.props.value,
+    };
+  }
 
   componentDidMount() {
     let select = this.refs.select;
