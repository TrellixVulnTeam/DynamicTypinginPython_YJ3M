commit 0e72c9620fa27dde216353ff50f047bc5d1e6ada
Author: Matt Robenolt <matt@ydekproductions.com>
Date:   Thu Mar 31 11:21:54 2016 -0700

    Backfill some tests for system_options endpoint

diff --git a/src/sentry/api/endpoints/system_options.py b/src/sentry/api/endpoints/system_options.py
index 46a6bf0ebc..a0db539cd3 100644
--- a/src/sentry/api/endpoints/system_options.py
+++ b/src/sentry/api/endpoints/system_options.py
@@ -54,7 +54,6 @@ class SystemOptionsEndpoint(Endpoint):
                     'disabledReason': disabled_reason,
                     'isSet': options.isset(k.name),
                     'allowEmpty': bool(k.flags & options.FLAG_ALLOW_EMPTY),
-
                 }
             }
 
diff --git a/tests/sentry/api/endpoints/test_system_options.py b/tests/sentry/api/endpoints/test_system_options.py
index 27fb22e403..8e0e5deb1b 100644
--- a/tests/sentry/api/endpoints/test_system_options.py
+++ b/tests/sentry/api/endpoints/test_system_options.py
@@ -2,6 +2,7 @@ from __future__ import absolute_import
 
 from django.core.urlresolvers import reverse
 
+from sentry import options
 from sentry.testutils import APITestCase
 
 
@@ -32,3 +33,37 @@ class SystemOptionsTest(APITestCase):
     def test_not_logged_in(self):
         response = self.client.get(self.url)
         assert response.status_code == 401
+        response = self.client.put(self.url)
+        assert response.status_code == 401
+
+    def test_disabled_smtp(self):
+        self.login_as(user=self.user)
+
+        with self.options({'mail.backend': 'smtp'}):
+            response = self.client.get(self.url)
+            assert response.status_code == 200
+            assert response.data['mail.host']['field']['disabled'] is False
+            assert response.data['mail.host']['field']['disabledReason'] is None
+
+        with self.options({'mail.backend': 'dummy'}):
+            response = self.client.get(self.url)
+            assert response.status_code == 200
+            assert response.data['mail.host']['field']['disabled'] is True
+            assert response.data['mail.host']['field']['disabledReason'] == 'smtpDisabled'
+
+    def test_put_unknown_option(self):
+        self.login_as(user=self.user)
+        response = self.client.put(self.url, {
+            'xxx': 'lol',
+        })
+        assert response.status_code == 400
+        assert response.data['error'] == 'unknown_option'
+
+    def test_put_simple(self):
+        self.login_as(user=self.user)
+        assert options.get('mail.host') != 'lolcalhost'
+        response = self.client.put(self.url, {
+            'mail.host': 'lolcalhost',
+        })
+        assert response.status_code == 200
+        assert options.get('mail.host') == 'lolcalhost'
