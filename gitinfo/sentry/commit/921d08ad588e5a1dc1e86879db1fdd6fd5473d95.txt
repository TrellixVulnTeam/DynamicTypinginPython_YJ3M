commit 921d08ad588e5a1dc1e86879db1fdd6fd5473d95
Author: Lyn Nagara <lyn.nagara@gmail.com>
Date:   Thu Apr 26 10:40:41 2018 -0700

    feat(environments): Update environment on querystring change (#8076)
    
    This is so the back button correctly triggers a return to the previous environment

diff --git a/src/sentry/static/sentry/app/utils/withEnvironmentInQueryString.jsx b/src/sentry/static/sentry/app/utils/withEnvironmentInQueryString.jsx
index fa0dcf8b11..177f6766e8 100644
--- a/src/sentry/static/sentry/app/utils/withEnvironmentInQueryString.jsx
+++ b/src/sentry/static/sentry/app/utils/withEnvironmentInQueryString.jsx
@@ -8,6 +8,7 @@ import qs from 'query-string';
 import EnvironmentStore from '../stores/environmentStore';
 import LatestContextStore from '../stores/latestContextStore';
 import {ALL_ENVIRONMENTS_KEY} from '../constants';
+import {setActiveEnvironment} from '../actionCreators/environments';
 
 const withEnvironmentInQueryString = WrappedComponent =>
   createReactClass({
@@ -55,6 +56,40 @@ const withEnvironmentInQueryString = WrappedComponent =>
       }
     },
 
+    componentWillReceiveProps(nextProps) {
+      // We update the environment to match the query string if they are out of sync and
+      // new props are received. This is required so the back button triggers a return
+      // to the previous environment
+      const {organization} = this.state;
+
+      // TODO(lyn): Remove this block when environments feature is active
+      const hasEnvironmentsFeature = this.hasEnvironmentsFeature(organization);
+      if (!hasEnvironmentsFeature) return;
+      // End remove block
+
+      const currentQueryEnv = this.getEnvironmentFromQueryString(
+        this.props.location.search
+      );
+      const nextQueryEnv = this.getEnvironmentFromQueryString(nextProps.location.search);
+      const queryEnvironmentHasChanged = currentQueryEnv !== nextQueryEnv;
+      if (queryEnvironmentHasChanged) {
+        setActiveEnvironment(nextQueryEnv);
+      }
+    },
+
+    getEnvironmentFromQueryString(searchTerm) {
+      const envName = qs.parse(searchTerm).environment;
+
+      switch (envName) {
+        case ALL_ENVIRONMENTS_KEY:
+          return null;
+        case undefined:
+          return EnvironmentStore.getDefault();
+        default:
+          return EnvironmentStore.getByName(envName);
+      }
+    },
+
     onLatestContextChange({environment, organization}) {
       // TODO(lyn): Remove this when environments feature is active
       const hasEnvironmentsFeature = this.hasEnvironmentsFeature(organization);
diff --git a/tests/js/setup.js b/tests/js/setup.js
index f09f6d2ad3..b00f09c45e 100644
--- a/tests/js/setup.js
+++ b/tests/js/setup.js
@@ -401,6 +401,7 @@ window.TestStubs = {
       return [
         {id: '1', name: 'production', isHidden: false},
         {id: '2', name: 'staging', isHidden: false},
+        {id: '3', name: 'test', isHidden: false},
       ];
     }
   },
diff --git a/tests/js/spec/utils/withEnvironmentInQueryString.spec.jsx b/tests/js/spec/utils/withEnvironmentInQueryString.spec.jsx
index 814c7a2f18..edc77b0db7 100644
--- a/tests/js/spec/utils/withEnvironmentInQueryString.spec.jsx
+++ b/tests/js/spec/utils/withEnvironmentInQueryString.spec.jsx
@@ -4,6 +4,7 @@ import {browserHistory} from 'react-router';
 
 import withEnvironmentInQueryString from 'app/utils/withEnvironmentInQueryString';
 import LatestContextStore from 'app/stores/latestContextStore';
+import EnvironmentStore from 'app/stores/environmentStore';
 
 class BasicComponent extends React.Component {
   render() {
@@ -21,6 +22,10 @@ describe('withEnvironmentInQueryString', function() {
     });
   });
 
+  afterEach(function() {
+    LatestContextStore.reset();
+  });
+
   describe('updates environment', function() {
     let wrapper;
     beforeEach(function() {
@@ -90,4 +95,21 @@ describe('withEnvironmentInQueryString', function() {
       );
     });
   });
+
+  describe('navigation', async function() {
+    it('updates active environment on querystring change', async function() {
+      EnvironmentStore.loadInitialData(TestStubs.Environments());
+
+      const wrapper = shallow(
+        <WrappedComponent location={{pathname: 'http://lol/', search: '', query: {}}} />,
+        TestStubs.routerContext()
+      );
+      expect(LatestContextStore.getInitialState().environment).toBeNull();
+      wrapper
+        .instance()
+        .componentWillReceiveProps({location: {search: '?environment=staging'}});
+      await tick();
+      expect(LatestContextStore.getInitialState().environment.name).toBe('staging');
+    });
+  });
 });
diff --git a/tests/js/spec/views/__snapshots__/projectAlertRuleDetails.spec.jsx.snap b/tests/js/spec/views/__snapshots__/projectAlertRuleDetails.spec.jsx.snap
index 0f05414402..a6a02ff857 100644
--- a/tests/js/spec/views/__snapshots__/projectAlertRuleDetails.spec.jsx.snap
+++ b/tests/js/spec/views/__snapshots__/projectAlertRuleDetails.spec.jsx.snap
@@ -530,6 +530,10 @@ exports[`ProjectAlertRuleDetails Edit alert rule renders 1`] = `
                             "staging",
                             "Staging",
                           ],
+                          Array [
+                            "test",
+                            "Test",
+                          ],
                         ]
                       }
                       className=""
@@ -591,6 +595,12 @@ exports[`ProjectAlertRuleDetails Edit alert rule renders 1`] = `
                             >
                               Staging
                             </option>
+                            <option
+                              key="test"
+                              value="test"
+                            >
+                              Test
+                            </option>
                           </select>
                         </div>
                       </div>
@@ -1434,6 +1444,10 @@ exports[`ProjectAlertRuleDetails New alert rule renders 1`] = `
                             "staging",
                             "Staging",
                           ],
+                          Array [
+                            "test",
+                            "Test",
+                          ],
                         ]
                       }
                       className=""
@@ -1495,6 +1509,12 @@ exports[`ProjectAlertRuleDetails New alert rule renders 1`] = `
                             >
                               Staging
                             </option>
+                            <option
+                              key="test"
+                              value="test"
+                            >
+                              Test
+                            </option>
                           </select>
                         </div>
                       </div>
diff --git a/tests/js/spec/views/__snapshots__/projectEnvironments.spec.jsx.snap b/tests/js/spec/views/__snapshots__/projectEnvironments.spec.jsx.snap
index 83b60f17c9..bd505970d2 100644
--- a/tests/js/spec/views/__snapshots__/projectEnvironments.spec.jsx.snap
+++ b/tests/js/spec/views/__snapshots__/projectEnvironments.spec.jsx.snap
@@ -758,6 +758,141 @@ exports[`ProjectEnvironments render active renders environment list and sets sta
                   </StyledPanelItem>
                 </PanelItem>
               </EnvironmentRow>
+              <EnvironmentRow
+                actionText="Hide"
+                environment={
+                  Object {
+                    "displayName": "Test",
+                    "id": "3",
+                    "name": "test",
+                    "urlRoutingName": "test",
+                  }
+                }
+                isDefault={false}
+                isHidden={false}
+                key="3"
+                name="test"
+                onHide={[Function]}
+                onSetAsDefault={[Function]}
+                shouldShowAction={true}
+                shouldShowSetDefault={true}
+              >
+                <PanelItem
+                  align="center"
+                  justify="space-between"
+                  p={2}
+                >
+                  <StyledPanelItem
+                    align="center"
+                    justify="space-between"
+                    p={2}
+                  >
+                    <Base
+                      align="center"
+                      className="css-qcergp-StyledPanelItem css-q9h14u0"
+                      justify="space-between"
+                      p={2}
+                    >
+                      <div
+                        className="css-qcergp-StyledPanelItem css-q9h14u0"
+                        is={null}
+                      >
+                        <Flex
+                          align="center"
+                        >
+                          <Base
+                            align="center"
+                            className="css-5ipae5"
+                          >
+                            <div
+                              className="css-5ipae5"
+                              is={null}
+                            >
+                              Test
+                               
+                              <code>
+                                test
+                              </code>
+                            </div>
+                          </Base>
+                        </Flex>
+                        <div>
+                          <EnvironmentButton
+                            onClick={[Function]}
+                            size="xsmall"
+                          >
+                            <Button
+                              className="css-10adnmx-EnvironmentButton css-d1dasp0"
+                              disabled={false}
+                              onClick={[Function]}
+                              size="xsmall"
+                            >
+                              <button
+                                className="css-10adnmx-EnvironmentButton css-d1dasp0 button button-default button-xs"
+                                disabled={false}
+                                onClick={[Function]}
+                                role="button"
+                              >
+                                <Flex
+                                  align="center"
+                                  className="button-label"
+                                >
+                                  <Base
+                                    align="center"
+                                    className="button-label css-5ipae5"
+                                  >
+                                    <div
+                                      className="button-label css-5ipae5"
+                                      is={null}
+                                    >
+                                      Set as default
+                                    </div>
+                                  </Base>
+                                </Flex>
+                              </button>
+                            </Button>
+                          </EnvironmentButton>
+                          <EnvironmentButton
+                            onClick={[Function]}
+                            size="xsmall"
+                          >
+                            <Button
+                              className="css-10adnmx-EnvironmentButton css-d1dasp0"
+                              disabled={false}
+                              onClick={[Function]}
+                              size="xsmall"
+                            >
+                              <button
+                                className="css-10adnmx-EnvironmentButton css-d1dasp0 button button-default button-xs"
+                                disabled={false}
+                                onClick={[Function]}
+                                role="button"
+                              >
+                                <Flex
+                                  align="center"
+                                  className="button-label"
+                                >
+                                  <Base
+                                    align="center"
+                                    className="button-label css-5ipae5"
+                                  >
+                                    <div
+                                      className="button-label css-5ipae5"
+                                      is={null}
+                                    >
+                                      Hide
+                                    </div>
+                                  </Base>
+                                </Flex>
+                              </button>
+                            </Button>
+                          </EnvironmentButton>
+                        </div>
+                      </div>
+                    </Base>
+                  </StyledPanelItem>
+                </PanelItem>
+              </EnvironmentRow>
             </div>
           </PanelBody>
         </div>
