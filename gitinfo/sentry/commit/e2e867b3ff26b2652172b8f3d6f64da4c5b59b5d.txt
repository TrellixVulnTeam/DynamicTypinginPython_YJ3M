commit e2e867b3ff26b2652172b8f3d6f64da4c5b59b5d
Author: Matt Robenolt <matt@ydekproductions.com>
Date:   Tue Jul 19 12:21:53 2016 -0700

    Add in a max_size to our redis backend (#3749)

diff --git a/src/sentry/cache/redis.py b/src/sentry/cache/redis.py
index 7837ae865c..b2e3f2482d 100644
--- a/src/sentry/cache/redis.py
+++ b/src/sentry/cache/redis.py
@@ -14,8 +14,13 @@ from sentry.utils.redis import get_cluster_from_options
 from .base import BaseCache
 
 
+class ValueTooLarge(BaseException):
+    pass
+
+
 class RedisCache(BaseCache):
     key_expire = 60 * 60  # 1 hour
+    max_size = 50 * 1024 * 1024  # 50MB
 
     def __init__(self, **options):
         self.cluster, options = get_cluster_from_options('SENTRY_CACHE_OPTIONS', options)
@@ -26,6 +31,8 @@ class RedisCache(BaseCache):
     def set(self, key, value, timeout, version=None):
         key = self.make_key(key, version=version)
         v = json.dumps(value)
+        if len(v) > self.max_size:
+            raise ValueTooLarge('Cache key too large: %r %r' % (key, len(v)))
         if timeout:
             self.client.setex(key, int(timeout), v)
         else:
diff --git a/tests/sentry/cache/test_redis.py b/tests/sentry/cache/test_redis.py
index bae8d6a3cd..97801dc226 100644
--- a/tests/sentry/cache/test_redis.py
+++ b/tests/sentry/cache/test_redis.py
@@ -2,7 +2,7 @@
 
 from __future__ import absolute_import
 
-from sentry.cache.redis import RedisCache
+from sentry.cache.redis import RedisCache, ValueTooLarge
 from sentry.testutils import TestCase
 
 
@@ -20,3 +20,6 @@ class RedisCacheTest(TestCase):
 
         result = self.backend.get('foo')
         assert result is None
+
+        with self.assertRaises(ValueTooLarge):
+            self.backend.set('foo', 'x' * (RedisCache.max_size + 1), 0)
