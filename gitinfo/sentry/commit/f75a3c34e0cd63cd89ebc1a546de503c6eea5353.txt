commit f75a3c34e0cd63cd89ebc1a546de503c6eea5353
Author: Billy Vong <billyvg@users.noreply.github.com>
Date:   Wed Nov 6 10:22:04 2019 -0800

    ref(ui): Refactor `<MonitorCheckIns>` (#15417)
    
    * Remove grid-emotion and clean up CSS
    * Convert to ts

diff --git a/src/sentry/static/sentry/app/components/asyncComponent.tsx b/src/sentry/static/sentry/app/components/asyncComponent.tsx
index 364608bde8..59f0ad3f77 100644
--- a/src/sentry/static/sentry/app/components/asyncComponent.tsx
+++ b/src/sentry/static/sentry/app/components/asyncComponent.tsx
@@ -378,7 +378,7 @@ export default class AsyncComponent<
     return <LoadingIndicator />;
   }
 
-  renderError(error, disableLog = false, disableReport = false): React.ReactNode {
+  renderError(error?, disableLog = false, disableReport = false): React.ReactNode {
     // 401s are captured by SudoModal, but may be passed back to AsyncComponent if they close the modal without identifying
     const unauthorizedErrors = Object.values(this.state.errors).find(
       resp => resp && resp.status === 401
diff --git a/src/sentry/static/sentry/app/views/monitors/monitorCheckIns.jsx b/src/sentry/static/sentry/app/views/monitors/monitorCheckIns.jsx
deleted file mode 100644
index ed754b6ab5..0000000000
--- a/src/sentry/static/sentry/app/views/monitors/monitorCheckIns.jsx
+++ /dev/null
@@ -1,49 +0,0 @@
-import React from 'react';
-import PropTypes from 'prop-types';
-import {Box} from 'grid-emotion';
-
-import AsyncComponent from 'app/components/asyncComponent';
-import Duration from 'app/components/duration';
-import TimeSince from 'app/components/timeSince';
-import {PanelBody, PanelItem} from 'app/components/panels';
-
-import CheckInIcon from './checkInIcon';
-
-export default class MonitorCheckIns extends AsyncComponent {
-  static propTypes = {
-    monitor: PropTypes.object.isRequired,
-  };
-
-  getEndpoints() {
-    const {monitor} = this.props;
-    return [
-      ['checkInList', `/monitors/${monitor.id}/checkins/`, {query: {per_page: 10}}],
-    ];
-  }
-
-  renderError() {
-    return <div style={{margin: '18px 18px 0'}}>{super.renderError()}</div>;
-  }
-
-  renderBody() {
-    return (
-      <PanelBody>
-        {this.state.checkInList.map(checkIn => {
-          return (
-            <PanelItem key={checkIn.id}>
-              <Box style={{width: 16}} mr={2}>
-                <CheckInIcon status={checkIn.status} size={16} />
-              </Box>
-              <Box flex="1" direction="column" mr={2}>
-                <TimeSince date={checkIn.dateCreated} />
-              </Box>
-              <Box direction="column">
-                {checkIn.duration && <Duration seconds={checkIn.duration / 100} />}
-              </Box>
-            </PanelItem>
-          );
-        })}
-      </PanelBody>
-    );
-  }
-}
diff --git a/src/sentry/static/sentry/app/views/monitors/monitorCheckIns.tsx b/src/sentry/static/sentry/app/views/monitors/monitorCheckIns.tsx
new file mode 100644
index 0000000000..a3bebb3a3a
--- /dev/null
+++ b/src/sentry/static/sentry/app/views/monitors/monitorCheckIns.tsx
@@ -0,0 +1,81 @@
+import PropTypes from 'prop-types';
+import React from 'react';
+import styled from 'react-emotion';
+
+import {Monitor} from 'app/views/monitors/types';
+import {PanelBody, PanelItem} from 'app/components/panels';
+import AsyncComponent from 'app/components/asyncComponent';
+import Duration from 'app/components/duration';
+import TimeSince from 'app/components/timeSince';
+import space from 'app/styles/space';
+
+import CheckInIcon from './checkInIcon';
+
+type CheckIn = {
+  dateCreated: string;
+  duration: number;
+  id: string;
+  status: 'ok' | 'error';
+};
+
+type Props = {
+  monitor: Monitor;
+} & AsyncComponent['props'];
+
+type State = {
+  checkInList: CheckIn[];
+} & AsyncComponent['state'];
+
+export default class MonitorCheckIns extends AsyncComponent<Props, State> {
+  static propTypes = {
+    monitor: PropTypes.object.isRequired,
+  };
+
+  getEndpoints(): [string, string, {query: {per_page: number}}][] {
+    const {monitor} = this.props;
+    return [
+      ['checkInList', `/monitors/${monitor.id}/checkins/`, {query: {per_page: 10}}],
+    ];
+  }
+
+  renderError() {
+    return <ErrorWrapper>{super.renderError()}</ErrorWrapper>;
+  }
+
+  renderBody() {
+    return (
+      <PanelBody>
+        {this.state.checkInList.map(checkIn => {
+          return (
+            <PanelItem key={checkIn.id}>
+              <CheckInIconWrapper>
+                <CheckInIcon status={checkIn.status} size={16} />
+              </CheckInIconWrapper>
+              <TimeSinceWrapper>
+                <TimeSince date={checkIn.dateCreated} />
+              </TimeSinceWrapper>
+              <div>
+                {checkIn.duration && <Duration seconds={checkIn.duration / 100} />}
+              </div>
+            </PanelItem>
+          );
+        })}
+      </PanelBody>
+    );
+  }
+}
+
+const DivMargin = styled('div')`
+  margin-right: ${space(2)};
+`;
+
+const CheckInIconWrapper = styled(DivMargin)`
+  display: flex;
+  align-items: center;
+`;
+
+const TimeSinceWrapper = styled(DivMargin)``;
+
+const ErrorWrapper = styled('div')`
+  margin: ${space(3)} ${space(3)} 0;
+`;
diff --git a/src/sentry/static/sentry/app/views/monitors/types.tsx b/src/sentry/static/sentry/app/views/monitors/types.tsx
new file mode 100644
index 0000000000..736768a52f
--- /dev/null
+++ b/src/sentry/static/sentry/app/views/monitors/types.tsx
@@ -0,0 +1,20 @@
+import {Project} from 'app/types';
+
+export type Status = 'ok' | 'error';
+
+export type Monitor = {
+  status: Status;
+  project: Project;
+  name: string;
+  lastCheckIn: string;
+  config: {
+    checkin_margin: number;
+    schedule_type: 'interval' | 'crontab';
+    max_runtime: number;
+    schedule: unknown[];
+  };
+  nextCheckIn: string;
+  type: 'cron_job';
+  id: string;
+  dateCreated: string;
+};
