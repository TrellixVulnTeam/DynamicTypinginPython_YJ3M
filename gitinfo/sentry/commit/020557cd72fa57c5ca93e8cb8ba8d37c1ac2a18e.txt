commit 020557cd72fa57c5ca93e8cb8ba8d37c1ac2a18e
Author: MeredithAnya <meredith.a.heller@gmail.com>
Date:   Thu Apr 18 13:19:25 2019 -0700

    ref(app-platform): Add sentry app stats and allow superusers to publish apps (#12826)
    
    * add sentry app stats and allow superuser publish

diff --git a/src/sentry/api/endpoints/sentry_app_details.py b/src/sentry/api/endpoints/sentry_app_details.py
index 9c694f7721..c802a74a03 100644
--- a/src/sentry/api/endpoints/sentry_app_details.py
+++ b/src/sentry/api/endpoints/sentry_app_details.py
@@ -41,6 +41,7 @@ class SentryAppDetailsEndpoint(SentryAppBaseEndpoint):
                 sentry_app=sentry_app,
                 name=result.get('name'),
                 author=result.get('author'),
+                status=result.get('status'),
                 webhook_url=result.get('webhookUrl'),
                 redirect_url=result.get('redirectUrl'),
                 is_alertable=result.get('isAlertable'),
diff --git a/src/sentry/api/endpoints/sentry_apps_stats.py b/src/sentry/api/endpoints/sentry_apps_stats.py
new file mode 100644
index 0000000000..82f02daec5
--- /dev/null
+++ b/src/sentry/api/endpoints/sentry_apps_stats.py
@@ -0,0 +1,27 @@
+from __future__ import absolute_import
+
+from rest_framework.response import Response
+
+from django.db.models import Count
+from sentry.api.bases import SentryAppsBaseEndpoint
+from sentry.models import SentryApp
+from sentry.api.permissions import SuperuserPermission
+
+
+class SentryAppsStatsEndpoint(SentryAppsBaseEndpoint):
+    permission_classes = (SuperuserPermission, )
+
+    def get(self, request):
+        sentry_apps = SentryApp.objects.filter(
+            installations__date_deleted=None).annotate(
+            Count('installations'))
+        results = []
+        for app in sentry_apps:
+            results.append({
+                'id': app.id,
+                'slug': app.slug,
+                'name': app.name,
+                'installs': app.installations__count,
+            })
+
+        return Response(results)
diff --git a/src/sentry/api/serializers/models/sentry_app.py b/src/sentry/api/serializers/models/sentry_app.py
index c426b84019..76c5d21e5e 100644
--- a/src/sentry/api/serializers/models/sentry_app.py
+++ b/src/sentry/api/serializers/models/sentry_app.py
@@ -32,6 +32,10 @@ class SentryAppSerializer(Serializer):
             data.update({
                 'clientId': obj.application.client_id,
                 'clientSecret': obj.application.client_secret,
+                'owner': {
+                    'id': obj.owner.id,
+                    'slug': obj.owner.slug,
+                },
             })
 
         return data
diff --git a/src/sentry/api/serializers/rest_framework/sentry_app.py b/src/sentry/api/serializers/rest_framework/sentry_app.py
index 7ae242c6d3..b30c8eec6b 100644
--- a/src/sentry/api/serializers/rest_framework/sentry_app.py
+++ b/src/sentry/api/serializers/rest_framework/sentry_app.py
@@ -57,6 +57,7 @@ class SentryAppSerializer(Serializer):
     name = serializers.CharField()
     author = serializers.CharField()
     scopes = ApiScopesField()
+    status = serializers.CharField(required=False)
     events = EventListField(required=False)
     schema = SchemaField(required=False)
     webhookUrl = URLField()
diff --git a/src/sentry/api/urls.py b/src/sentry/api/urls.py
index facfa80d77..8b090e4394 100644
--- a/src/sentry/api/urls.py
+++ b/src/sentry/api/urls.py
@@ -183,6 +183,7 @@ from .endpoints.release_deploys import ReleaseDeploysEndpoint
 from .endpoints.debug_files import DebugFilesEndpoint, DifAssembleEndpoint, \
     UnknownDebugFilesEndpoint, AssociateDSymFilesEndpoint
 from .endpoints.sentry_apps import SentryAppsEndpoint
+from .endpoints.sentry_apps_stats import SentryAppsStatsEndpoint
 from .endpoints.sentry_app_components import SentryAppComponentsEndpoint, \
     OrganizationSentryAppComponentsEndpoint
 from .endpoints.sentry_app_details import SentryAppDetailsEndpoint
@@ -1273,6 +1274,11 @@ urlpatterns = patterns(
         SentryAppsEndpoint.as_view(),
         name='sentry-api-0-sentry-apps'
     ),
+    url(
+        r'^sentry-apps-stats/$',
+        SentryAppsStatsEndpoint.as_view(),
+        name='sentry-api-0-sentry-apps-stats'
+    ),
     url(
         r'^sentry-apps/(?P<sentry_app_slug>[^\/]+)/$',
         SentryAppDetailsEndpoint.as_view(),
diff --git a/src/sentry/mediators/sentry_apps/updater.py b/src/sentry/mediators/sentry_apps/updater.py
index 8bd37e83f1..d6e97a6f93 100644
--- a/src/sentry/mediators/sentry_apps/updater.py
+++ b/src/sentry/mediators/sentry_apps/updater.py
@@ -17,6 +17,7 @@ from sentry.models.sentryapp import REQUIRED_EVENT_PERMISSIONS
 class Updater(Mediator):
     sentry_app = Param('sentry.models.SentryApp')
     name = Param(six.string_types, required=False)
+    status = Param(six.string_types, required=False)
     scopes = Param(Iterable, required=False)
     events = Param(Iterable, required=False)
     webhook_url = Param(six.string_types, required=False)
@@ -29,6 +30,7 @@ class Updater(Mediator):
     def call(self):
         self._update_name()
         self._update_author()
+        self._update_status()
         self._update_scopes()
         self._update_events()
         self._update_webhook_url()
@@ -47,6 +49,14 @@ class Updater(Mediator):
     def _update_author(self):
         self.sentry_app.author = self.author
 
+    @if_param('status')
+    def _update_status(self):
+        if self.user.is_superuser:
+            if self.status == 'published':
+                self.sentry_app.status = SentryAppStatus.PUBLISHED
+            if self.status == 'unpublished':
+                self.sentry_app.status = SentryAppStatus.UNPUBLISHED
+
     @if_param('scopes')
     def _update_scopes(self):
         if self.sentry_app.status == SentryAppStatus.PUBLISHED:
diff --git a/tests/sentry/api/endpoints/test_organization_sentry_apps.py b/tests/sentry/api/endpoints/test_organization_sentry_apps.py
index e8116c0f08..1706a1b63f 100644
--- a/tests/sentry/api/endpoints/test_organization_sentry_apps.py
+++ b/tests/sentry/api/endpoints/test_organization_sentry_apps.py
@@ -55,6 +55,10 @@ class GetOrganizationSentryAppsTest(OrganizationSentryAppsTest):
             'clientSecret': self.unpublished_app.application.client_secret,
             'overview': self.unpublished_app.overview,
             'schema': {},
+            'owner': {
+                'id': self.org.id,
+                'slug': self.org.slug,
+            }
         }])
 
     @with_feature('organizations:sentry-apps')
diff --git a/tests/sentry/api/endpoints/test_sentry_app_details.py b/tests/sentry/api/endpoints/test_sentry_app_details.py
index 18d4f5ca97..83c510bc83 100644
--- a/tests/sentry/api/endpoints/test_sentry_app_details.py
+++ b/tests/sentry/api/endpoints/test_sentry_app_details.py
@@ -1,6 +1,8 @@
 from __future__ import absolute_import
 
 from django.core.urlresolvers import reverse
+from sentry.constants import SentryAppStatus
+from sentry.models import SentryApp
 from sentry.testutils import APITestCase
 from sentry.testutils.helpers import with_feature
 from sentry.utils import json
@@ -124,6 +126,10 @@ class UpdateSentryAppDetailsTest(SentryAppDetailsTest):
             'clientSecret': self.published_app.application.client_secret,
             'overview': self.published_app.overview,
             'schema': {},
+            'owner': {
+                'id': self.org.id,
+                'slug': self.org.slug,
+            }
         }
 
     @with_feature('organizations:sentry-apps')
@@ -222,6 +228,42 @@ class UpdateSentryAppDetailsTest(SentryAppDetailsTest):
         )
         assert response.status_code == 404
 
+    @with_feature('organizations:sentry-apps')
+    def test_superusers_can_publish_apps(self):
+        self.login_as(user=self.superuser, superuser=True)
+        app = self.create_sentry_app(
+            name='SampleApp',
+            organization=self.org,
+        )
+        url = reverse('sentry-api-0-sentry-app-details', args=[app.slug])
+        response = self.client.put(
+            url,
+            data={
+                'status': 'published',
+            },
+            format='json',
+        )
+        assert response.status_code == 200
+        assert SentryApp.objects.get(id=app.id).status == SentryAppStatus.PUBLISHED
+
+    @with_feature('organizations:sentry-apps')
+    def test_nonsuperusers_cannot_publish_apps(self):
+        self.login_as(user=self.user)
+        app = self.create_sentry_app(
+            name='SampleApp',
+            organization=self.org,
+        )
+        url = reverse('sentry-api-0-sentry-app-details', args=[app.slug])
+        response = self.client.put(
+            url,
+            data={
+                'status': 'published',
+            },
+            format='json',
+        )
+        assert response.status_code == 200
+        assert SentryApp.objects.get(id=app.id).status == SentryAppStatus.UNPUBLISHED
+
 
 class DeleteSentryAppDetailsTest(SentryAppDetailsTest):
     @with_feature('organizations:sentry-apps')
diff --git a/tests/sentry/api/endpoints/test_sentry_apps.py b/tests/sentry/api/endpoints/test_sentry_apps.py
index 559e90d71a..6d734cb11e 100644
--- a/tests/sentry/api/endpoints/test_sentry_apps.py
+++ b/tests/sentry/api/endpoints/test_sentry_apps.py
@@ -72,6 +72,10 @@ class GetSentryAppsTest(SentryAppsTest):
             'clientSecret': self.published_app.application.client_secret,
             'overview': self.published_app.overview,
             'schema': {},
+            'owner': {
+                'id': self.org.id,
+                'slug': self.org.slug,
+            }
         } in json.loads(response.content)
 
     @with_feature('organizations:sentry-apps')
@@ -96,6 +100,10 @@ class GetSentryAppsTest(SentryAppsTest):
             'clientSecret': self.unpublished_app.application.client_secret,
             'overview': self.unpublished_app.overview,
             'schema': {},
+            'owner': {
+                'id': self.org.id,
+                'slug': self.org.slug,
+            }
         } in json.loads(response.content)
 
     @with_feature('organizations:sentry-apps')
diff --git a/tests/sentry/api/endpoints/test_sentry_apps_stats.py b/tests/sentry/api/endpoints/test_sentry_apps_stats.py
new file mode 100644
index 0000000000..9da8fb65dc
--- /dev/null
+++ b/tests/sentry/api/endpoints/test_sentry_apps_stats.py
@@ -0,0 +1,59 @@
+from __future__ import absolute_import
+
+from django.core.urlresolvers import reverse
+
+from sentry.utils import json
+from sentry.testutils import APITestCase
+from sentry.testutils.helpers import with_feature
+
+
+class SentryAppsStatsTest(APITestCase):
+    def setUp(self):
+        self.superuser = self.create_user(email='a@example.com', is_superuser=True)
+        self.user = self.create_user(email='boop@example.com')
+        self.org = self.create_organization(owner=self.user)
+        self.super_org = self.create_organization(owner=self.superuser)
+
+        self.app_1 = self.create_sentry_app(
+            name='Test',
+            organization=self.super_org,
+            published=True,
+        )
+
+        self.app_2 = self.create_sentry_app(
+            name='Testin',
+            organization=self.org,
+        )
+
+        self.create_sentry_app_installation(slug=self.app_1.slug, organization=self.org)
+        self.create_sentry_app_installation(slug=self.app_2.slug, organization=self.org)
+
+        self.url = reverse('sentry-api-0-sentry-apps-stats')
+
+    def test_superuser_has_access(self):
+        self.login_as(user=self.superuser, superuser=True)
+
+        response = self.client.get(self.url, format='json')
+
+        assert response.status_code == 200
+        assert json.loads(response.content) == \
+            [{
+                'id': self.app_1.id,
+                'slug': self.app_1.slug,
+                'name': self.app_1.name,
+                'installs': 1,
+            },
+            {
+                'id': self.app_2.id,
+                'slug': self.app_2.slug,
+                'name': self.app_2.name,
+                'installs': 1,
+            }]
+
+    @with_feature('organizations:sentry-apps')
+    def test_nonsuperusers_have_no_access(self):
+        self.login_as(user=self.user)
+
+        response = self.client.get(self.url, format='json')
+
+        assert response.status_code == 403
diff --git a/tests/sentry/mediators/sentry_apps/test_updater.py b/tests/sentry/mediators/sentry_apps/test_updater.py
index 28f05cacf7..f43c929fa1 100644
--- a/tests/sentry/mediators/sentry_apps/test_updater.py
+++ b/tests/sentry/mediators/sentry_apps/test_updater.py
@@ -1,6 +1,7 @@
 from __future__ import absolute_import
 
 from sentry.coreapi import APIError
+from sentry.constants import SentryAppStatus
 from sentry.mediators.sentry_apps import Updater
 from sentry.mediators.service_hooks.creator import expand_events
 from sentry.models import SentryAppComponent, ServiceHook
@@ -102,4 +103,15 @@ class TestUpdater(TestCase):
     def test_updates_overview(self):
         self.updater.overview = 'Description of my very cool application'
         self.updater.call()
-        assert self.updater.overview == 'Description of my very cool application'
+        assert self.sentry_app.overview == 'Description of my very cool application'
+
+    def test_update_status_if_superuser(self):
+        self.updater.status = 'published'
+        self.user.is_superuser = True
+        self.updater.call()
+        assert self.sentry_app.status == SentryAppStatus.PUBLISHED
+
+    def test_doesnt_update_status_if_not_superuser(self):
+        self.updater.status = 'published'
+        self.updater.call()
+        assert self.sentry_app.status == SentryAppStatus.UNPUBLISHED
