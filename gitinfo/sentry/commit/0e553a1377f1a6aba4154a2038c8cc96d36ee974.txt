commit 0e553a1377f1a6aba4154a2038c8cc96d36ee974
Author: Billy Vong <billyvg@gmail.com>
Date:   Tue Aug 8 12:38:33 2017 -0700

    fix(ui): submit on ctrl/meta + enter keydown

diff --git a/src/sentry/static/sentry/app/components/activity/noteInput.jsx b/src/sentry/static/sentry/app/components/activity/noteInput.jsx
index 5b0b2cf51c..329e86e4ab 100644
--- a/src/sentry/static/sentry/app/components/activity/noteInput.jsx
+++ b/src/sentry/static/sentry/app/components/activity/noteInput.jsx
@@ -276,6 +276,7 @@ const NoteInput = React.createClass({
                 placeholder={t('Add details or updates to this event')}
                 onChange={this.onChange}
                 onBlur={this.onBlur}
+                onKeyDown={this.onKeyDown}
                 value={value}
                 required={true}
                 autoFocus={true}
diff --git a/tests/js/spec/components/__snapshots__/noteInput.spec.jsx.snap b/tests/js/spec/components/__snapshots__/noteInput.spec.jsx.snap
new file mode 100644
index 0000000000..6eb1f4e924
--- /dev/null
+++ b/tests/js/spec/components/__snapshots__/noteInput.spec.jsx.snap
@@ -0,0 +1,135 @@
+// Jest Snapshot v1, https://goo.gl/fbAQLP
+
+exports[`NoteInput renders 1`] = `
+<form
+  className="activity-field"
+  onSubmit={[Function]}
+>
+  <div
+    className="activity-notes"
+  >
+    <ul
+      className="nav nav-tabs"
+    >
+      <li
+        className="active"
+      >
+        <a
+          onClick={[Function]}
+        >
+          Write
+        </a>
+      </li>
+      <li
+        className=""
+      >
+        <a
+          onClick={[Function]}
+        >
+          Preview
+        </a>
+      </li>
+      <li
+        className="markdown"
+      >
+        <span
+          className="icon-markdown"
+        />
+        <span
+          className="supported"
+        >
+          Markdown supported
+        </span>
+      </li>
+    </ul>
+    <withDefaultStyle(MentionsInput)
+      autoFocus={true}
+      displayTransform={[Function]}
+      markup="**__display__**"
+      onChange={[Function]}
+      onKeyDown={[Function]}
+      placeholder="Add details or updates to this event"
+      required={true}
+      style={
+        Object {
+          "&multiLine": Object {
+            "control": Object {
+              "fontFamily": "Lato, Avenir Next, Helvetica Neue, sans-serif",
+            },
+            "highlighter": Object {
+              "padding": 20,
+            },
+            "input": Object {
+              "border": 0,
+              "minHeight": 140,
+              "outline": 0,
+              "overflow": "auto",
+              "padding": "15px 20px 0",
+            },
+          },
+          "&singleLine": Object {
+            "control": Object {
+              "display": "inline-block",
+              "width": 130,
+            },
+            "highlighter": Object {
+              "border": "2px inset transparent",
+              "padding": 1,
+            },
+            "input": Object {
+              "border": "2px inset",
+              "padding": 1,
+            },
+          },
+          "control": Object {
+            "backgroundColor": "#fff",
+            "fontSize": 15,
+            "fontWeight": "normal",
+          },
+          "input": Object {
+            "margin": 0,
+          },
+          "suggestions": Object {
+            "item": Object {
+              "&focused": Object {
+                "backgroundColor": "#f8f6f9",
+              },
+              "borderBottom": "1px solid rgba(0,0,0,0.15)",
+              "padding": "5px 15px",
+            },
+            "list": Object {
+              "backgroundColor": "white",
+              "border": "1px solid rgba(0,0,0,0.15)",
+              "fontSize": 12,
+              "maxHeight": 150,
+              "overflow": "auto",
+            },
+          },
+        }
+      }
+      value=""
+    >
+      <withDefaultStyle()
+        appendSpaceOnAdd={true}
+        data={Array []}
+        isLoading={false}
+        onAdd={[Function]}
+        onRemove={[Function]}
+        renderSuggestion={null}
+        trigger="@"
+      />
+    </withDefaultStyle(MentionsInput)>
+    <div
+      className="activity-actions"
+    >
+      <button
+        className="btn btn-default"
+        disabled={false}
+        type="submit"
+      >
+        Post Comment
+      </button>
+    </div>
+  </div>
+</form>
+`;
diff --git a/tests/js/spec/components/noteInput.spec.jsx b/tests/js/spec/components/noteInput.spec.jsx
new file mode 100644
index 0000000000..d44a756f72
--- /dev/null
+++ b/tests/js/spec/components/noteInput.spec.jsx
@@ -0,0 +1,54 @@
+import React from 'react';
+import {mount, shallow} from 'enzyme';
+
+import NoteInput from 'app/components/activity/noteInput';
+import {Client} from 'app/api';
+
+jest.mock('app/api');
+
+describe('NoteInput', function() {
+  let spy;
+
+  beforeAll(function() {
+    Client.addMockResponse({
+      url: '/issues/groupId/comments/',
+      method: 'POST'
+    });
+  });
+
+  beforeEach(function() {
+    spy = jest.spyOn(Client.prototype, 'request');
+  });
+
+  afterEach(function() {
+    spy.mockReset();
+    spy.mockRestore();
+  });
+
+  it('renders', function() {
+    let wrapper = shallow(<NoteInput group={{}} memberList={[]} sessionUser={{}} />);
+    expect(wrapper).toMatchSnapshot();
+  });
+
+  it('submits when meta + enter is pressed', function() {
+    let wrapper = mount(
+      <NoteInput group={{id: 'groupId'}} memberList={[]} sessionUser={{}} />
+    );
+
+    let input = wrapper.find('textarea');
+
+    input.simulate('keyDown', {key: 'Enter', metaKey: true});
+    expect(spy).toHaveBeenCalled();
+  });
+
+  it('submits when ctrl + enter is pressed', function() {
+    let wrapper = mount(
+      <NoteInput group={{id: 'groupId'}} memberList={[]} sessionUser={{}} />
+    );
+
+    let input = wrapper.find('textarea');
+
+    input.simulate('keyDown', {key: 'Enter', ctrlKey: true});
+    expect(spy).toHaveBeenCalled();
+  });
+});
diff --git a/tests/js/spec/stores/groupingStore.spec.jsx b/tests/js/spec/stores/groupingStore.spec.jsx
index e8f1b9b06d..82bb5b5f57 100644
--- a/tests/js/spec/stores/groupingStore.spec.jsx
+++ b/tests/js/spec/stores/groupingStore.spec.jsx
@@ -1,4 +1,4 @@
-0; /* eslint-env jest */
+/* eslint-env jest */
 import GroupingStore from 'app/stores/groupingStore';
 import {Client} from 'app/api';
 jest.mock('app/api');
