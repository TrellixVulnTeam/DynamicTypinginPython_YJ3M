commit 4fcb49d33b546027e13140f7180ebcbe74045633
Author: Lauryn Brown <lauryndbrown@gmail.com>
Date:   Tue Aug 21 10:41:26 2018 -0700

    fix(vsts): Vsts sub delete fix (#9425)
    
    * added status but status doesn't appear to change for vsts
    
    * Added org_integration check to the subscription check.
    
    * Added exists to filter.
    
    * changed the assert to a single line.

diff --git a/src/sentry/integrations/vsts/integration.py b/src/sentry/integrations/vsts/integration.py
index 7003d6f4e3..d4a4b37835 100644
--- a/src/sentry/integrations/vsts/integration.py
+++ b/src/sentry/integrations/vsts/integration.py
@@ -6,7 +6,8 @@ from django import forms
 from django.utils.translation import ugettext as _
 
 from sentry import http
-from sentry.models import Integration as IntegrationModel, IntegrationExternalProject
+from sentry.constants import ObjectStatus
+from sentry.models import Integration as IntegrationModel, IntegrationExternalProject, OrganizationIntegration
 from sentry.integrations import Integration, IntegrationFeatures, IntegrationProvider, IntegrationMetadata
 from sentry.integrations.exceptions import ApiError, IntegrationError
 from sentry.integrations.repositories import RepositoryMixin
@@ -21,6 +22,7 @@ from sentry.utils.http import absolute_uri
 from .client import VstsApiClient
 from .repository import VstsRepositoryProvider
 from .webhooks import WorkItemWebhook
+
 DESCRIPTION = """
 Connect your Sentry organization to one or more of your Visual Studio Team Services (VSTS) accounts. Get started streamlining your bug squashing workflow by unifying your Sentry and Visual Studio accounts together.
 
@@ -289,10 +291,18 @@ class VstsIntegrationProvider(IntegrationProvider):
         }
 
         try:
-            assert 'subscription' in IntegrationModel.objects.get(
+            integration_model = IntegrationModel.objects.get(
                 provider='vsts',
-                external_id=account['AccountId']
-            ).metadata
+                external_id=account['AccountId'],
+                status=ObjectStatus.VISIBLE,
+            )
+            assert 'subscription' in integration_model.metadata
+
+            assert OrganizationIntegration.objects.filter(
+                integration_id=integration_model.id,
+                status=ObjectStatus.VISIBLE,
+            ).exists()
+
         except (IntegrationModel.DoesNotExist, AssertionError):
             subscription_id, subscription_secret = self.create_subscription(
                 instance, account['AccountId'], oauth_data)
