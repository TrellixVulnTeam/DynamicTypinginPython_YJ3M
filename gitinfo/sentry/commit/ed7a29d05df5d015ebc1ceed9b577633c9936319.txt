commit ed7a29d05df5d015ebc1ceed9b577633c9936319
Author: David Cramer <dcramer@gmail.com>
Date:   Sun Nov 23 03:51:09 2014 -0800

    Correct remove project tests

diff --git a/src/sentry/web/frontend/remove_project.py b/src/sentry/web/frontend/remove_project.py
index c3e5a87767..14aedbd41f 100644
--- a/src/sentry/web/frontend/remove_project.py
+++ b/src/sentry/web/frontend/remove_project.py
@@ -21,7 +21,9 @@ class RemoveProjectView(ProjectView):
     required_access = OrganizationMemberType.ADMIN
 
     def get_form(self, request):
-        return RemoveProjectForm(request.POST or None)
+        if request.method == 'POST':
+            return RemoveProjectForm(request.POST)
+        return RemoveProjectForm()
 
     def get(self, request, organization, team, project):
         if not can_remove_project(request.user, project):
diff --git a/tests/sentry/web/frontend/projects/tests.py b/tests/sentry/web/frontend/projects/tests.py
index f18f7bb793..bc9632f08c 100644
--- a/tests/sentry/web/frontend/projects/tests.py
+++ b/tests/sentry/web/frontend/projects/tests.py
@@ -8,8 +8,7 @@ import logging
 from django.core.urlresolvers import reverse
 from exam import before, fixture
 
-from sentry.constants import STATUS_HIDDEN
-from sentry.models import Project, ProjectKey, ProjectOption, TagKey
+from sentry.models import ProjectKey, ProjectOption, TagKey
 from sentry.testutils import TestCase
 
 logger = logging.getLogger(__name__)
@@ -145,34 +144,6 @@ class GetStartedTest(TestCase):
         assert resp.context['team'] == self.team
 
 
-class RemoveProjectTest(TestCase):
-    @fixture
-    def path(self):
-        return reverse('sentry-remove-project', args=[self.team.slug, self.project.id])
-
-    def test_requires_authentication(self):
-        self.assertRequiresAuthentication(self.path, 'POST')
-
-    def test_renders_template_with_get(self):
-        self.login_as(self.user)
-
-        resp = self.client.get(self.path)
-        assert resp.status_code == 200
-        self.assertTemplateUsed(resp, 'sentry/projects/remove.html')
-        assert resp.context['team'] == self.team
-        assert resp.context['project'] == self.project
-
-    @mock.patch('sentry.web.frontend.projects.remove.delete_project')
-    def test_deletion_flow(self, delete_project):
-        self.login_as(self.user)
-
-        resp = self.client.post(self.path, {'project': self.project.id})
-        assert resp.status_code == 302
-        delete_project.delay.assert_called_once_with(
-            object_id=self.project.id)
-        assert Project.objects.get(id=self.project.id).status == STATUS_HIDDEN
-
-
 class ManageProjectTagsTest(TestCase):
     @fixture
     def path(self):
diff --git a/tests/sentry/web/frontend/test_remove_project.py b/tests/sentry/web/frontend/test_remove_project.py
new file mode 100644
index 0000000000..2191179872
--- /dev/null
+++ b/tests/sentry/web/frontend/test_remove_project.py
@@ -0,0 +1,41 @@
+from __future__ import absolute_import
+
+import mock
+
+from django.core.urlresolvers import reverse
+
+from sentry.constants import STATUS_HIDDEN
+from sentry.models import Project
+from sentry.testutils import TestCase
+
+
+class RemoveProjectTest(TestCase):
+    def setUp(self):
+        super(RemoveProjectTest, self).setUp()
+        self.owner = self.create_user(email='example@example.com', is_superuser=False)
+        organization = self.create_organization(owner=self.owner)
+        self.team = self.create_team(name='bar', organization=organization)
+        self.project = self.create_project(name='bar', team=self.team)
+        self.path = reverse('sentry-remove-project', args=[self.team.slug, self.project.slug])
+
+    def test_requires_authentication(self):
+        self.assertRequiresAuthentication(self.path, 'POST')
+
+    def test_renders_template_with_get(self):
+        self.login_as(self.owner)
+
+        resp = self.client.get(self.path)
+        assert resp.status_code == 200
+        self.assertTemplateUsed(resp, 'sentry/projects/remove.html')
+        assert resp.context['team'] == self.team
+        assert resp.context['project'] == self.project
+
+    @mock.patch('sentry.web.frontend.remove_project.delete_project')
+    def test_deletion_flow(self, delete_project):
+        self.login_as(self.owner)
+
+        resp = self.client.post(self.path, {})
+        assert resp.status_code == 302
+        delete_project.delay.assert_called_once_with(
+            object_id=self.project.id)
+        assert Project.objects.get(id=self.project.id).status == STATUS_HIDDEN
