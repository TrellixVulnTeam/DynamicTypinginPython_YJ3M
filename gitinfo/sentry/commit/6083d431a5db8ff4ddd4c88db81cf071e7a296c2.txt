commit 6083d431a5db8ff4ddd4c88db81cf071e7a296c2
Author: Stephen Cefali <scefali@sentry.io>
Date:   Tue Jul 7 11:00:27 2020 -0700

    adds support for project pagination (#19706)

diff --git a/src/sentry/integrations/vercel/client.py b/src/sentry/integrations/vercel/client.py
index d3922de8df..8f7fb41856 100644
--- a/src/sentry/integrations/vercel/client.py
+++ b/src/sentry/integrations/vercel/client.py
@@ -1,8 +1,12 @@
 from __future__ import absolute_import
 
+import logging
+
 from sentry.integrations.client import ApiClient
 from sentry.utils.http import absolute_uri
 
+logger = logging.getLogger("sentry.integrations.vercel.api")
+
 
 class VercelClient(ApiClient):
 
@@ -42,8 +46,22 @@ class VercelClient(ApiClient):
         return self.get_cached(self.USER_URL)["user"]
 
     def get_projects(self):
-        # TODO: we will need pagination since we are limited to 20
-        return self.get(self.PROJECTS_URL)["projects"]
+        limit = 20
+        params = {"limit": limit}
+        projects = []
+        # no one should have more than 200 projects
+        for i in range(10):
+            resp = self.get(self.PROJECTS_URL, params=params)
+            projects += resp["projects"]
+            # if we have less projects than the limit, we are done
+            if resp["pagination"]["count"] < limit:
+                return projects
+            # continue pagination but increment next by 1
+            params = params.copy()
+            params["since"] = resp["pagination"]["next"] + 1
+        # log the warning if this happens so we can look into solutions
+        logger.warn("Did not finish project pagination", extra={"team_id": self.team_id})
+        return projects
 
     def get_source_code_provider(self, vercel_project_id):
         return self.get(self.PROJECT_URL % vercel_project_id)["link"]["type"]
diff --git a/tests/sentry/integrations/vercel/test_integration.py b/tests/sentry/integrations/vercel/test_integration.py
index 3a93cbb984..15e0e220ca 100644
--- a/tests/sentry/integrations/vercel/test_integration.py
+++ b/tests/sentry/integrations/vercel/test_integration.py
@@ -61,7 +61,7 @@ class VercelIntegrationTest(IntegrationTestCase):
         responses.add(
             responses.GET,
             "https://api.vercel.com/v4/projects/%s" % team_query,
-            json={"projects": []},
+            json={"projects": [], "pagination": {"count": 0}},
         )
 
         responses.add(
diff --git a/tests/sentry/web/frontend/test_vercel_extension_configuration.py b/tests/sentry/web/frontend/test_vercel_extension_configuration.py
index 45b8463e61..600abae89a 100644
--- a/tests/sentry/web/frontend/test_vercel_extension_configuration.py
+++ b/tests/sentry/web/frontend/test_vercel_extension_configuration.py
@@ -36,7 +36,9 @@ class VercelExtensionConfigurationTest(TestCase):
         )
 
         responses.add(
-            responses.GET, "https://api.vercel.com/v4/projects/", json={"projects": []},
+            responses.GET,
+            "https://api.vercel.com/v4/projects/",
+            json={"projects": [], "pagination": {"count": 0}},
         )
 
         responses.add(
