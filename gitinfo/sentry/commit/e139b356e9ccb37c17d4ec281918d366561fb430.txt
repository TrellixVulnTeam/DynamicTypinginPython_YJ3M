commit e139b356e9ccb37c17d4ec281918d366561fb430
Author: Markus Unterwaditzer <markus@unterwaditzer.net>
Date:   Fri Oct 11 14:29:13 2019 +0200

    fix(ingest): Always count message towards batch (#15053)

diff --git a/src/sentry/ingest/ingest_consumer.py b/src/sentry/ingest/ingest_consumer.py
index 0b8288f8cf..5dfd0cddb4 100644
--- a/src/sentry/ingest/ingest_consumer.py
+++ b/src/sentry/ingest/ingest_consumer.py
@@ -57,13 +57,13 @@ class IngestConsumerWorker(AbstractBatchWorker):
                 event_id,
                 project_id,
             )
-            return  # message already processed do not reprocess
+            return True  # message already processed do not reprocess
 
         try:
             project = Project.objects.get_from_cache(id=project_id)
         except Project.DoesNotExist:
             logger.error("Project for ingested event does not exist: %s", project_id)
-            return
+            return True
 
         # Parse the JSON payload. This is required to compute the cache key and
         # call process_event. The payload will be put into Kafka raw, to avoid
diff --git a/src/sentry/ingest/outcomes_consumer.py b/src/sentry/ingest/outcomes_consumer.py
index c6ac6b9edf..6855467a27 100644
--- a/src/sentry/ingest/outcomes_consumer.py
+++ b/src/sentry/ingest/outcomes_consumer.py
@@ -65,21 +65,21 @@ class OutcomesConsumerWorker(AbstractBatchWorker):
 
         project_id = int(msg.get("project_id", 0))
         if project_id == 0:
-            return  # no project. this is valid, so ignore silently.
+            return True  # no project. this is valid, so ignore silently.
 
         outcome = int(msg.get("outcome", -1))
         if outcome not in (Outcome.FILTERED, Outcome.RATE_LIMITED):
-            return  # nothing to do here
+            return True  # nothing to do here
 
         event_id = msg.get("event_id")
         if is_signal_sent(project_id=project_id, event_id=event_id):
-            return  # message already processed nothing left to do
+            return True  # message already processed nothing left to do
 
         try:
             project = Project.objects.get_from_cache(id=project_id)
         except Project.DoesNotExist:
             logger.error("OutcomesConsumer could not find project with id: %s", project_id)
-            return
+            return True
 
         reason = msg.get("reason")
         remote_addr = msg.get("remote_addr")
