commit 9791f3becbcc810a4a58c7936a4f29130c770691
Author: josh <josh@jrl.ninja>
Date:   Thu Apr 30 17:00:03 2020 +0000

    chore: cleanup old django version branching (#18537)

diff --git a/src/sentry/db/postgres/base.py b/src/sentry/db/postgres/base.py
index ac29530ba4..eee60b022d 100644
--- a/src/sentry/db/postgres/base.py
+++ b/src/sentry/db/postgres/base.py
@@ -3,8 +3,6 @@ from __future__ import absolute_import
 from six import string_types
 import psycopg2 as Database
 
-import django
-
 # Some of these imports are unused, but they are inherited from other engines
 # and should be available as part of the backend ``base.py`` namespace.
 from django.db.backends.postgresql_psycopg2.base import DatabaseWrapper
@@ -96,10 +94,7 @@ class DatabaseWrapper(DatabaseWrapper):
 
     @auto_reconnect_connection
     def _cursor(self, *args, **kwargs):
-        cursor = super(DatabaseWrapper, self)._cursor()
-        if django.VERSION[:2] < (1, 11):
-            return CursorWrapper(self, cursor)
-        return cursor
+        return super(DatabaseWrapper, self)._cursor()
 
     # We're overriding this internal method that's present in Django 1.11+, because
     # things were shuffled around since 1.10 resulting in not constructing a django CursorWrapper
diff --git a/src/sentry/runner/initializer.py b/src/sentry/runner/initializer.py
index 210e84edb0..020dfceb76 100644
--- a/src/sentry/runner/initializer.py
+++ b/src/sentry/runner/initializer.py
@@ -402,8 +402,6 @@ model_unpickle = django.db.models.base.model_unpickle
 
 
 def __model_unpickle_compat(model_id, attrs=None, factory=None):
-    from django import VERSION
-
     if attrs is not None or factory is not None:
         metrics.incr("django.pickle.loaded_19_pickle.__model_unpickle_compat", sample_rate=1)
         logger.error(
@@ -411,11 +409,7 @@ def __model_unpickle_compat(model_id, attrs=None, factory=None):
             extra={"model_id": model_id, "attrs": attrs, "factory": factory},
             exc_info=True,
         )
-
-    if VERSION[:2] in [(1, 10), (1, 11)]:
-        return model_unpickle(model_id)
-    else:
-        raise NotImplementedError
+    return model_unpickle(model_id)
 
 
 def __simple_class_factory_compat(model, attrs):
