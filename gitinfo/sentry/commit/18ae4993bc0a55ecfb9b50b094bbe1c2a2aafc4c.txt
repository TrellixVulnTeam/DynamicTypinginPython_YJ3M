commit 18ae4993bc0a55ecfb9b50b094bbe1c2a2aafc4c
Author: Evan Purkhiser <evanpurkhiser@gmail.com>
Date:   Mon Apr 2 14:32:39 2018 -0700

    fix(slack): Check groups.list for private channels

diff --git a/src/sentry/integrations/slack/integration.py b/src/sentry/integrations/slack/integration.py
index c43e3ea137..2450e7030a 100644
--- a/src/sentry/integrations/slack/integration.py
+++ b/src/sentry/integrations/slack/integration.py
@@ -39,7 +39,8 @@ class SlackIntegration(Integration):
 
     identity_oauth_scopes = frozenset([
         'channels:read',
-        'users:read'
+        'groups:read',
+        'users:read',
         'chat:write',
         'links:read',
         'links:write',
diff --git a/src/sentry/integrations/slack/notify_action.py b/src/sentry/integrations/slack/notify_action.py
index b8cfc96487..6b8581705c 100644
--- a/src/sentry/integrations/slack/notify_action.py
+++ b/src/sentry/integrations/slack/notify_action.py
@@ -201,6 +201,17 @@ class SlackNotifyServiceAction(EventAction):
 
         channel_id = {c['name']: c['id'] for c in resp['channels']}.get(name)
 
+        # Channel may be private, use the groups.list endpoint to find them
+        if not channel_id:
+            resp = session.get('https://slack.com/api/groups.list', params=channels_payload)
+            resp = resp.json()
+            if not resp.get('ok'):
+                self.logger.info('rule.slack.group_list_failed', extra={'error': resp.get('error')})
+                return None
+
+            channel_id = {c['name']: c['id'] for c in resp['groups']}.get(name)
+
+        # We should sufficiently have been able to find the channel by now
         if channel_id:
             if channel_id in channel_perms['excluded_ids']:
                 return None
diff --git a/tests/sentry/integrations/slack/test_notify_action.py b/tests/sentry/integrations/slack/test_notify_action.py
index 9e9e6fa756..575c4ff8e0 100644
--- a/tests/sentry/integrations/slack/test_notify_action.py
+++ b/tests/sentry/integrations/slack/test_notify_action.py
@@ -135,6 +135,48 @@ class SlackNotifyActionTest(RuleTestCase):
         form = rule.get_form_instance()
         assert form.is_valid()
 
+    @responses.activate
+    def test_valid_private_channel_selected(self):
+        rule = self.get_rule(data={
+            'workspace': self.integration.id,
+            'channel': '#my-private-channel',
+            'tags': '',
+        })
+
+        channels = {
+            'ok': 'true',
+            'channels': [
+                {'name': 'my-channel', 'id': 'chan-id'},
+                {'name': 'other-chann', 'id': 'chan-id'},
+            ],
+        }
+
+        responses.add(
+            method=responses.GET,
+            url='https://slack.com/api/channels.list',
+            status=200,
+            content_type='application/json',
+            body=json.dumps(channels),
+        )
+
+        groups = {
+            'ok': 'true',
+            'groups': [
+                {'name': 'my-private-channel', 'id': 'chan-id'},
+            ],
+        }
+
+        responses.add(
+            method=responses.GET,
+            url='https://slack.com/api/groups.list',
+            status=200,
+            content_type='application/json',
+            body=json.dumps(groups),
+        )
+
+        form = rule.get_form_instance()
+        assert form.is_valid()
+
     @responses.activate
     def test_valid_member_selected(self):
         rule = self.get_rule(data={
@@ -159,6 +201,21 @@ class SlackNotifyActionTest(RuleTestCase):
             body=json.dumps(channels),
         )
 
+        groups = {
+            'ok': 'true',
+            'groups': [
+                {'name': 'my-private-channel', 'id': 'chan-id'},
+            ],
+        }
+
+        responses.add(
+            method=responses.GET,
+            url='https://slack.com/api/groups.list',
+            status=200,
+            content_type='application/json',
+            body=json.dumps(groups),
+        )
+
         members = {
             'ok': 'true',
             'members': [
@@ -199,12 +256,19 @@ class SlackNotifyActionTest(RuleTestCase):
             body=json.dumps(channels),
         )
 
+        groups = {
+            'ok': 'true',
+            'groups': [
+                {'name': 'my-private-channel', 'id': 'chan-id'},
+            ],
+        }
+
         responses.add(
             method=responses.GET,
-            url='https://slack.com/api/channels.list',
+            url='https://slack.com/api/groups.list',
             status=200,
             content_type='application/json',
-            body=json.dumps(channels),
+            body=json.dumps(groups),
         )
 
         members = {
