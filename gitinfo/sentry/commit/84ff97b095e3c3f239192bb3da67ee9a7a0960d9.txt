commit 84ff97b095e3c3f239192bb3da67ee9a7a0960d9
Author: David Cramer <dcramer@gmail.com>
Date:   Wed Jun 4 17:27:05 2014 -0700

    Push blob storage into cache backend during pipeline

diff --git a/src/sentry/coreapi.py b/src/sentry/coreapi.py
index 6eea3139e6..6093cb05c6 100644
--- a/src/sentry/coreapi.py
+++ b/src/sentry/coreapi.py
@@ -21,7 +21,7 @@ from django.utils.encoding import smart_str
 
 import six
 
-from sentry.app import env
+from sentry.app import cache, env
 from sentry.constants import (
     DEFAULT_LOG_LEVEL, LOG_LEVELS, MAX_CULPRIT_LENGTH, MAX_TAG_VALUE_LENGTH,
     MAX_TAG_KEY_LENGTH)
@@ -403,4 +403,6 @@ def ensure_has_ip(data, ip_address):
 
 
 def insert_data_to_database(data):
-    preprocess_event.delay(data=data)
+    cache_key = 'e:{0}'.format(data['event_id'])
+    cache.set(cache_key, data, timeout=3600)
+    preprocess_event.delay(cache_key=cache_key)
diff --git a/src/sentry/tasks/store.py b/src/sentry/tasks/store.py
index fe8aa96e9d..c2917cf5aa 100644
--- a/src/sentry/tasks/store.py
+++ b/src/sentry/tasks/store.py
@@ -9,15 +9,20 @@ sentry.tasks.store
 from __future__ import absolute_import
 
 from django.conf import settings
+
 from sentry.tasks.base import instrumented_task
 
 
 @instrumented_task(
     name='sentry.tasks.store.preprocess_event',
     queue='events')
-def preprocess_event(data, **kwargs):
+def preprocess_event(cache_key=None, data=None, **kwargs):
+    from sentry.app import cache
     from sentry.tasks.fetch_source import expand_javascript_source
 
+    if cache_key:
+        data = cache.get(cache_key)
+
     logger = preprocess_event.get_logger()
 
     try:
@@ -26,29 +31,22 @@ def preprocess_event(data, **kwargs):
                 expand_javascript_source(data)
             except Exception as e:
                 logger.exception(u'Error fetching javascript source: %r [%s]', data['event_id'], e)
+            cache.set(cache_key, data)
     finally:
-        save_event.delay(data=data)
+        save_event.delay(cache_key=cache_key, data=data)
 
 
 @instrumented_task(
     name='sentry.tasks.store.save_event',
     queue='events')
-def save_event(data, **kwargs):
+def save_event(cache_key=None, data=None, **kwargs):
     """
     Saves an event to the database.
     """
+    from sentry.app import cache
     from sentry.models import Group
 
-    Group.objects.save_data(data.pop('project'), data)
-
+    if cache_key:
+        data = cache.get(cache_key)
 
-@instrumented_task(
-    name='sentry.tasks.store.store_event',
-    queue='events')
-def store_event(data, **kwargs):
-    """
-    Saves an event to the database.
-
-    Deprecated.
-    """
-    preprocess_event.delay(data=data)
+    Group.objects.save_data(data.pop('project'), data)
diff --git a/tests/sentry/tasks/store/__init__.py b/tests/sentry/tasks/store/__init__.py
deleted file mode 100644
index e69de29bb2..0000000000
diff --git a/tests/sentry/tasks/store/tests.py b/tests/sentry/tasks/store/tests.py
deleted file mode 100644
index b9546cfb33..0000000000
--- a/tests/sentry/tasks/store/tests.py
+++ /dev/null
@@ -1,20 +0,0 @@
-# -*- coding: utf-8 -*-
-
-from __future__ import absolute_import
-
-import mock
-
-from celery.task import Task
-from sentry.tasks.store import store_event
-from sentry.testutils import TestCase
-
-
-class StoreEventTest(TestCase):
-    def test_is_task(self):
-        assert isinstance(store_event, Task)
-
-    @mock.patch('sentry.tasks.store.preprocess_event')
-    def test_calls_from_kwargs(self, preprocess_event):
-        data = {'foo': 'bar'}
-        store_event(data=data)
-        preprocess_event.delay.assert_called_once_with(data=data)
