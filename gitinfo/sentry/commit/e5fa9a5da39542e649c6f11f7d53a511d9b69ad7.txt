commit e5fa9a5da39542e649c6f11f7d53a511d9b69ad7
Author: David Cramer <dcramer@gmail.com>
Date:   Tue Apr 29 02:23:40 2014 -0400

    Remove unused SkinnyQuerySet

diff --git a/src/sentry/utils/query.py b/src/sentry/utils/query.py
index 37ca908d9a..bacbb88991 100644
--- a/src/sentry/utils/query.py
+++ b/src/sentry/utils/query.py
@@ -9,41 +9,13 @@ sentry.utils.query
 from django.db import transaction, IntegrityError
 from django.db.models import ForeignKey
 from django.db.models.deletion import Collector
-from django.db.models.query import QuerySet
 from django.db.models.signals import pre_delete, pre_save, post_save, post_delete
 
 
-class QuerySetDoubleIteration(Exception):
-    "A QuerySet was iterated over twice, you probably want to list() it."
-    pass
-
-
 class InvalidQuerySetError(ValueError):
     pass
 
 
-class SkinnyQuerySet(QuerySet):
-    def __len__(self):
-        if getattr(self, 'has_run_before', False):
-            raise TypeError("SkinnyQuerySet doesn't support __len__ after __iter__, if you *only* need a count you should use .count(), if you need to reuse the results you should coerce to a list and then len() that.")
-        return super(SkinnyQuerySet, self).__len__()
-
-    def __iter__(self):
-        if self._result_cache is not None:
-            # __len__ must have been run
-            return iter(self._result_cache)
-
-        has_run_before = getattr(self, 'has_run_before', False)
-        if has_run_before:
-            raise QuerySetDoubleIteration("This SkinnyQuerySet has already been iterated over once, you should assign it to a list if you want to reuse the data.")
-        self.has_run_before = True
-
-        return self.iterator()
-
-    def list(self):
-        return list(self)
-
-
 class RangeQuerySetWrapper(object):
     """
     Iterates through a queryset by chunking results by ``step`` and using GREATER THAN
