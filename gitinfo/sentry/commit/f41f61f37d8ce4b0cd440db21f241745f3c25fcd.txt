commit f41f61f37d8ce4b0cd440db21f241745f3c25fcd
Author: Markus Unterwaditzer <markus@unterwaditzer.net>
Date:   Mon Jan 21 17:26:55 2019 +0100

    fix: Always remove environment tag (#11565)
    
    * fix: Always remove environment tag
    
    * fix: Realistically run save() before plugins in tests
    
    * fix: Linting
    
    * fix: Hardcode UUID
    
    * fix: Set UUID in right view

diff --git a/src/sentry/event_manager.py b/src/sentry/event_manager.py
index ecbf9348ac..4bc2fdd28c 100644
--- a/src/sentry/event_manager.py
+++ b/src/sentry/event_manager.py
@@ -607,12 +607,13 @@ class EventManager(object):
             # Fix case where legacy apps pass 'environment' as a tag
             # instead of a top level key.
             # TODO (alex) save() just reinserts the environment into the tags
-            if not data.get('environment'):
-                tagsdict = dict(data['tags'])
-                if 'environment' in tagsdict:
-                    data['environment'] = tagsdict['environment']
-                    del tagsdict['environment']
-                    data['tags'] = tagsdict.items()
+            # TODO (markus) silly conversion between list and dict, hard to fix
+            # without messing up meta
+            tagsdict = dict(data['tags'])
+            environment_tag = tagsdict.pop("environment", None)
+            if not data.get('environment') and environment_tag:
+                data['environment'] = environment_tag
+            data['tags'] = tagsdict.items()
 
             # the SDKs currently do not describe event types, and we must infer
             # them from available attributes
diff --git a/src/sentry/web/frontend/debug/mail.py b/src/sentry/web/frontend/debug/mail.py
index 68d42bc1e5..e884d10b21 100644
--- a/src/sentry/web/frontend/debug/mail.py
+++ b/src/sentry/web/frontend/debug/mail.py
@@ -254,6 +254,7 @@ def alert(request):
 
     data = dict(load_data(platform))
     data['message'] = group.message
+    data['event_id'] = '44f1419e73884cd2b45c79918f4b6dc4'
     data.pop('logentry', None)
     data['environment'] = 'prod'
     data['tags'] = [
@@ -265,6 +266,7 @@ def alert(request):
 
     event_manager = EventManager(data)
     event_manager.normalize()
+    event = event_manager.save(project.id)
     event_type = event_manager.get_event_type()
 
     group.message = event_manager.get_search_message()
@@ -273,21 +275,6 @@ def alert(request):
         'metadata': event_type.get_metadata(),
     }
 
-    event = Event(
-        id=1,
-        event_id='44f1419e73884cd2b45c79918f4b6dc4',
-        project=project,
-        group=group,
-        message=event_manager.get_search_message(),
-        data=event_manager.get_data(),
-        datetime=to_datetime(
-            random.randint(
-                to_timestamp(group.first_seen),
-                to_timestamp(group.last_seen),
-            ),
-        ),
-    )
-
     rule = Rule(label="An example rule")
 
     interface_list = []
diff --git a/tests/fixtures/emails/alert.txt b/tests/fixtures/emails/alert.txt
index 1c8c691562..9291b961d4 100644
--- a/tests/fixtures/emails/alert.txt
+++ b/tests/fixtures/emails/alert.txt
@@ -14,10 +14,15 @@ Suspect Commits
 Tags
 ----
 
+* browser = Chrome 28.0.1500
+* browser.name = Chrome
 * device = Other
 * environment = prod
 * level = error
 * logger = javascript
+* os.name = Windows 8
+* sentry:user = id:1
+* url = http://example.com/foo
 
 
 Stacktrace
diff --git a/tests/sentry/event_manager/test_normalization.py b/tests/sentry/event_manager/test_normalization.py
index be279f0495..def415e1c2 100644
--- a/tests/sentry/event_manager/test_normalization.py
+++ b/tests/sentry/event_manager/test_normalization.py
@@ -317,3 +317,16 @@ def test_returns_cannonical_dict():
     assert isinstance(manager.get_data(), CanonicalKeyDict)
     manager.normalize()
     assert isinstance(manager.get_data(), CanonicalKeyDict)
+
+
+@pytest.mark.parametrize("environment", ["", None, "production"])
+def test_environment_tag_removed(environment):
+    event = make_event()
+    event['environment'] = environment
+    event['tags'] = {"environment": "production"}
+
+    manager = EventManager(event)
+    manager.normalize()
+    data = manager.get_data()
+    assert 'environment' not in dict(data.get('tags') or ())
+    assert data['environment'] == 'production'
