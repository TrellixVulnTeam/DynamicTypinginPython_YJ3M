commit 37995cdef43af81b5688403dde689eec83cc7d1c
Author: Max Bittker <maxbittker@gmail.com>
Date:   Tue Nov 21 14:34:35 2017 -0800

    fix(UI): Truncate and warn on high tag count (#6608)
    
    * truncate and warn on high tag count

diff --git a/src/sentry/static/sentry/app/views/stream.jsx b/src/sentry/static/sentry/app/views/stream.jsx
index e33ff12576..0dd8417748 100644
--- a/src/sentry/static/sentry/app/views/stream.jsx
+++ b/src/sentry/static/sentry/app/views/stream.jsx
@@ -16,6 +16,7 @@ import Pagination from '../components/pagination';
 import StreamGroup from '../components/stream/group';
 import StreamActions from './stream/actions';
 import StreamTagActions from '../actions/streamTagActions';
+import AlertActions from '../actions/alertActions';
 import StreamTagStore from '../stores/streamTagStore';
 import StreamFilters from './stream/filters';
 import StreamSidebar from './stream/sidebar';
@@ -25,6 +26,8 @@ import {logAjaxError} from '../utils/logging';
 import parseLinkHeader from '../utils/parseLinkHeader';
 import {t, tn, tct} from '../locale';
 
+const MAX_TAGS = 500;
+
 const Stream = React.createClass({
   propTypes: {
     defaultSort: PropTypes.string,
@@ -232,8 +235,16 @@ const Stream = React.createClass({
     let params = this.props.params;
     this.api.request(`/projects/${params.orgId}/${params.projectId}/tags/`, {
       success: tags => {
+        let trimmedTags = tags.slice(0, MAX_TAGS);
+
+        if (tags.length > MAX_TAGS) {
+          AlertActions.addAlert({
+            message: t('You have too many unique tags and some have been truncated'),
+            type: 'warn',
+          });
+        }
         this.setState({tagsLoading: false});
-        StreamTagActions.loadTagsSuccess(tags);
+        StreamTagActions.loadTagsSuccess(trimmedTags);
       },
       error: error => {
         this.setState({tagsLoading: false});
