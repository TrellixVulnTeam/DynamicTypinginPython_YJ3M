commit 893f2e931c06ebd80b1cdf56fe123bbb471f3de6
Author: Megan Heskett <meg.heskett@gmail.com>
Date:   Mon Oct 14 14:39:33 2019 -0700

    fix(api): Fix organization members email validation (#15080)

diff --git a/src/sentry/api/endpoints/organization_member_index.py b/src/sentry/api/endpoints/organization_member_index.py
index 2687bf7093..1ca3c528cd 100644
--- a/src/sentry/api/endpoints/organization_member_index.py
+++ b/src/sentry/api/endpoints/organization_member_index.py
@@ -57,12 +57,8 @@ class OrganizationMemberSerializer(serializers.Serializer):
 
     def validate_email(self, email):
         if OrganizationMember.objects.filter(
-            Q(email=email)
-            | Q(
-                organization=self.context["organization"],
-                user__email__iexact=email,
-                user__is_active=True,
-            )
+            Q(email=email) | Q(user__email__iexact=email, user__is_active=True),
+            organization=self.context["organization"],
         ).exists():
             raise serializers.ValidationError("The user %s is already a member" % email)
 
diff --git a/tests/sentry/api/endpoints/test_organization_member_index.py b/tests/sentry/api/endpoints/test_organization_member_index.py
index a61c3bab6e..7778584b20 100644
--- a/tests/sentry/api/endpoints/test_organization_member_index.py
+++ b/tests/sentry/api/endpoints/test_organization_member_index.py
@@ -180,6 +180,22 @@ class OrganizationMemberListTest(APITestCase):
         assert member.email is None
         assert member.role == "member"
 
+    def test_can_invite_with_invites_to_other_orgs(self):
+        email = "test@gmail.com"
+        org = self.create_organization(slug="diff-org")
+        OrganizationMember.objects.create(email=email, organization=org)
+
+        with self.settings(SENTRY_ENABLE_INVITES=True), self.tasks():
+            resp = self.client.post(
+                self.url, {"email": email, "role": "member", "teams": [self.team.slug]}
+            )
+
+        assert resp.status_code == 201
+
+        member = OrganizationMember.objects.get(organization=self.org, email=email)
+        assert len(mail.outbox) == 1
+        assert member.role == "member"
+
     def test_valid_for_direct_add(self):
         self.login_as(user=self.owner_user)
 
