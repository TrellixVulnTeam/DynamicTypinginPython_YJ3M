commit a1208b70fca1ed473c8467558e343f9634755736
Author: Ted Kaemming <ted@kaemming.com>
Date:   Tue Dec 8 14:21:39 2015 -0800

    Add `digests.enabled` function, disabled when using `DummyBackend`.

diff --git a/src/sentry/digests/backends/base.py b/src/sentry/digests/backends/base.py
index 3fff3d49d8..bf30478a34 100644
--- a/src/sentry/digests/backends/base.py
+++ b/src/sentry/digests/backends/base.py
@@ -95,6 +95,12 @@ class Backend(object):
     def validate(self):
         pass
 
+    def enabled(self, project):
+        """
+        Check if a project has digests enabled.
+        """
+        return True
+
     def add(self, key, record, increment_delay=None, maximum_delay=None):
         """
         Add a record to a timeline.
diff --git a/src/sentry/digests/backends/dummy.py b/src/sentry/digests/backends/dummy.py
index 0a1a46fa48..590b3c284e 100644
--- a/src/sentry/digests/backends/dummy.py
+++ b/src/sentry/digests/backends/dummy.py
@@ -9,6 +9,9 @@ class DummyBackend(Backend):
     def add(self, key, record, increment_delay=None, maximum_delay=None):
         pass
 
+    def enabled(self, project):
+        return False
+
     @contextmanager
     def digest(self, key, minimum_delay=None):
         yield []
diff --git a/src/sentry/plugins/bases/notify.py b/src/sentry/plugins/bases/notify.py
index 4d128dde4f..92b14cb6f5 100644
--- a/src/sentry/plugins/bases/notify.py
+++ b/src/sentry/plugins/bases/notify.py
@@ -65,9 +65,8 @@ class NotificationPlugin(Plugin):
                 continue
             raise NotImplementedError('The default behavior for notification de-duplication does not support args')
 
-        if hasattr(self, 'notify_digest'):
-            project = event.group.project
-
+        project = event.group.project
+        if hasattr(self, 'notify_digest') and digests.enabled(project):
             get_digest_option = lambda key: ProjectOption.objects.get_value(
                 project,
                 '{0}:digests:{1}'.format(self.get_conf_key(), key),
@@ -132,17 +131,19 @@ class NotificationPlugin(Plugin):
         raise NotImplementedError
 
     def should_notify(self, group, event):
-        if not self.is_configured(project=event.project):
+        project = event.project
+        if not self.is_configured(project=project):
             return False
 
         if group.is_muted():
             return False
 
-        # If the plugin doesn't support digests, perform rate limit checks to
-        # support backwards compatibility with older plugins.
-        if not hasattr(self, 'notify_digest') and self.__is_rate_limited(group, event):
+        # If the plugin doesn't support digests or they are not enabled,
+        # perform rate limit checks to support backwards compatibility with
+        # older plugins.
+        if not (hasattr(self, 'notify_digest') and digests.enabled(project)) and self.__is_rate_limited(group, event):
             logger = logging.getLogger('sentry.plugins.{0}'.format(self.get_conf_key()))
-            logger.info('Notification for project %r dropped due to rate limiting', group.project)
+            logger.info('Notification for project %r dropped due to rate limiting', project)
             return False
 
         return True
diff --git a/src/sentry/templates/sentry/project-notifications.html b/src/sentry/templates/sentry/project-notifications.html
index a0d0e07a6c..2a57c9664d 100644
--- a/src/sentry/templates/sentry/project-notifications.html
+++ b/src/sentry/templates/sentry/project-notifications.html
@@ -36,6 +36,7 @@
       </div>
     </div>
 
+    {% if digests_form %}
     <div class="box">
       <div class="box-header">
         <h3>{% trans "Digests" %}</h3>
@@ -57,6 +58,7 @@
         </div>
       </div>
     </div>
+    {% endif %}
 
     <fieldset class="form-actions">
       <button type="submit" class="btn btn-primary btn-lg">{% trans "Save Changes" %}</button>
diff --git a/src/sentry/web/frontend/project_notifications.py b/src/sentry/web/frontend/project_notifications.py
index 7eb7dbd871..d464ef8cb1 100644
--- a/src/sentry/web/frontend/project_notifications.py
+++ b/src/sentry/web/frontend/project_notifications.py
@@ -53,20 +53,24 @@ class ProjectNotificationsView(ProjectView):
             return HttpResponseRedirect(request.path)
 
         if op == 'save-settings':
-            digests_form = DigestSettingsForm(
-                data=request.POST,
-                prefix='digests',
-                initial={
-                    'minimum_delay': project.get_option(
-                        'digests:mail:minimum_delay',
-                        digests.minimum_delay / 60,
-                    ),
-                    'maximum_delay': project.get_option(
-                        'digests:mail:maximum_delay',
-                        digests.maximum_delay / 60,
-                    ),
-                },
-            )
+            if digests.enabled(project):
+                digests_form = DigestSettingsForm(
+                    data=request.POST,
+                    prefix='digests',
+                    initial={
+                        'minimum_delay': project.get_option(
+                            'digests:mail:minimum_delay',
+                            digests.minimum_delay / 60,
+                        ),
+                        'maximum_delay': project.get_option(
+                            'digests:mail:maximum_delay',
+                            digests.maximum_delay / 60,
+                        ),
+                    },
+                )
+            else:
+                digests_form = None
+
             general_form = NotificationSettingsForm(
                 data=request.POST,
                 prefix='general',
@@ -75,28 +79,33 @@ class ProjectNotificationsView(ProjectView):
                         'mail:subject_prefix', settings.EMAIL_SUBJECT_PREFIX),
                 },
             )
-            if general_form.is_valid() and digests_form.is_valid():
+            if general_form.is_valid() and (digests_form.is_valid() if digests_form is not None else True):
                 project.update_option('mail:subject_prefix', general_form.cleaned_data['subject_prefix'])
-                project.update_option('digests:mail:minimum_delay', digests_form.cleaned_data['minimum_delay'] * 60)
-                project.update_option('digests:mail:maximum_delay', digests_form.cleaned_data['maximum_delay'] * 60)
+                if digests_form is not None:
+                    project.update_option('digests:mail:minimum_delay', digests_form.cleaned_data['minimum_delay'] * 60)
+                    project.update_option('digests:mail:maximum_delay', digests_form.cleaned_data['maximum_delay'] * 60)
                 messages.add_message(
                     request, messages.SUCCESS,
                     OK_SETTINGS_SAVED)
                 return HttpResponseRedirect(request.path)
         else:
-            digests_form = DigestSettingsForm(
-                prefix='digests',
-                initial={
-                    'minimum_delay': project.get_option(
-                        'digests:mail:minimum_delay',
-                        digests.minimum_delay,
-                    ) / 60,
-                    'maximum_delay': project.get_option(
-                        'digests:mail:maximum_delay',
-                        digests.maximum_delay,
-                    ) / 60,
-                },
-            )
+            if digests.enabled(project):
+                digests_form = DigestSettingsForm(
+                    prefix='digests',
+                    initial={
+                        'minimum_delay': project.get_option(
+                            'digests:mail:minimum_delay',
+                            digests.minimum_delay,
+                        ) / 60,
+                        'maximum_delay': project.get_option(
+                            'digests:mail:maximum_delay',
+                            digests.maximum_delay,
+                        ) / 60,
+                    },
+                )
+            else:
+                digests_form = None
+
             general_form = NotificationSettingsForm(
                 prefix='general',
                 initial={
