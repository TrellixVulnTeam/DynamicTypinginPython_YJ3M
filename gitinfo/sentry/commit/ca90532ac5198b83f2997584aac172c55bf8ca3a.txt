commit ca90532ac5198b83f2997584aac172c55bf8ca3a
Author: David Cramer <dcramer@gmail.com>
Date:   Tue Feb 23 14:29:10 2016 -0800

    Clear process lock under all scenarios

diff --git a/src/sentry/buffer/redis.py b/src/sentry/buffer/redis.py
index 47aaa981e7..65cf71f635 100644
--- a/src/sentry/buffer/redis.py
+++ b/src/sentry/buffer/redis.py
@@ -119,29 +119,29 @@ class RedisBuffer(Buffer):
             self.logger.info('Skipped process on %s; unable to get lock', key)
             return
 
-        conn = self.cluster.get_local_client_for_key(key)
-        pipe = conn.pipeline()
-        pipe.hgetall(key)
-        pipe.zrem(self.pending_key, key)
-        pipe.delete(key)
-        values = pipe.execute()[0]
-
-        if not values:
-            metrics.incr('buffer.revoked', tags={'reason': 'empty'})
-            self.logger.info('Skipped process on %s; no values found', key)
-            return
-
-        model = import_string(values['m'])
-        filters = pickle.loads(values['f'])
-        incr_values = {}
-        extra_values = {}
-        for k, v in values.iteritems():
-            if k.startswith('i+'):
-                incr_values[k[2:]] = int(v)
-            elif k.startswith('e+'):
-                extra_values[k[2:]] = pickle.loads(v)
-
         try:
+            conn = self.cluster.get_local_client_for_key(key)
+            pipe = conn.pipeline()
+            pipe.hgetall(key)
+            pipe.zrem(self.pending_key, key)
+            pipe.delete(key)
+            values = pipe.execute()[0]
+
+            if not values:
+                metrics.incr('buffer.revoked', tags={'reason': 'empty'})
+                self.logger.info('Skipped process on %s; no values found', key)
+                return
+
+            model = import_string(values['m'])
+            filters = pickle.loads(values['f'])
+            incr_values = {}
+            extra_values = {}
+            for k, v in values.iteritems():
+                if k.startswith('i+'):
+                    incr_values[k[2:]] = int(v)
+                elif k.startswith('e+'):
+                    extra_values[k[2:]] = pickle.loads(v)
+
             super(RedisBuffer, self).process(model, incr_values, filters, extra_values)
         finally:
             client.delete(lock_key)
