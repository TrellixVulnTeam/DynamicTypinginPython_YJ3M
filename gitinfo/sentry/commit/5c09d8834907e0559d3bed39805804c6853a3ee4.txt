commit 5c09d8834907e0559d3bed39805804c6853a3ee4
Author: Bruno Garcia <github@brunogarcia.com>
Date:   Wed Mar 13 12:03:07 2019 +0100

    feat: Support msgpack event via minidump attachment (#12340)

diff --git a/requirements-base.txt b/requirements-base.txt
index 37692dd6df..9c035f9d4a 100644
--- a/requirements-base.txt
+++ b/requirements-base.txt
@@ -31,6 +31,7 @@ lxml>=3.4.1
 mistune>0.7,<0.9
 mmh3>=2.3.1,<2.4
 mock==2.0.0
+msgpack>=0.6.1,<0.7.0
 oauth2>=1.5.167
 parsimonious==0.8.0
 percy>=1.1.2
diff --git a/src/sentry/lang/native/minidump.py b/src/sentry/lang/native/minidump.py
index 2b3c251930..3cdfa313d4 100644
--- a/src/sentry/lang/native/minidump.py
+++ b/src/sentry/lang/native/minidump.py
@@ -2,12 +2,20 @@ from __future__ import absolute_import
 
 from django.core.files.uploadedfile import InMemoryUploadedFile, TemporaryUploadedFile
 from symbolic import arch_from_breakpad, ProcessState, id_from_breakpad
-
+import dateutil.parser as dp
 from sentry.utils.safe import get_path
+import logging
+import msgpack
+from msgpack import UnpackException, ExtraData
+
+minidumps_logger = logging.getLogger('sentry.minidumps')
 
 # Attachment type used for minidump files
 MINIDUMP_ATTACHMENT_TYPE = 'event.minidump'
 
+MAX_MSGPACK_BREADCRUMB_SIZE_BYTES = 50000
+MAX_MSGPACK_EVENT_SIZE_BYTES = 100000
+
 # Mapping of well-known minidump OS constants to our internal names
 MINIDUMP_OS_TYPES = {
     'Mac OS X': 'macOS',
@@ -96,6 +104,56 @@ def merge_process_state_event(data, state, cfi=None):
     data.setdefault('debug_meta', {})['images'] = images
 
 
+def merge_attached_event(mpack_event, data):
+    # Merge msgpack serialized event.
+    if mpack_event.size > MAX_MSGPACK_EVENT_SIZE_BYTES:
+        return
+
+    try:
+        event = msgpack.unpack(mpack_event)
+    except (UnpackException, ExtraData) as e:
+        minidumps_logger.exception(e)
+        return
+
+    for key in event:
+        value = event.get(key)
+        if value is not None:
+            data[key] = value
+
+
+def merge_attached_breadcrumbs(mpack_breadcrumbs, data):
+    # Merge msgpack breadcrumb file.
+    if mpack_breadcrumbs.size > MAX_MSGPACK_BREADCRUMB_SIZE_BYTES:
+        return
+
+    try:
+        unpacker = msgpack.Unpacker(mpack_breadcrumbs)
+        breadcrumbs = list(unpacker)
+    except (UnpackException, ExtraData) as e:
+        minidumps_logger.exception(e)
+        return
+
+    if not breadcrumbs:
+        return
+
+    current_crumbs = data.get('breadcrumbs')
+    if not current_crumbs:
+        data['breadcrumbs'] = breadcrumbs
+        return
+
+    current_crumb = next((c for c in reversed(current_crumbs)
+                          if isinstance(c, dict) and c.get('timestamp') is not None), None)
+    new_crumb = next((c for c in reversed(breadcrumbs) if isinstance(
+        c, dict) and c.get('timestamp') is not None), None)
+    if current_crumb is not None and new_crumb is not None:
+        if dp.parse(current_crumb['timestamp']) > dp.parse(new_crumb['timestamp']):
+            data['breadcrumbs'] = breadcrumbs + current_crumbs
+        else:
+            data['breadcrumbs'] = current_crumbs + breadcrumbs
+    else:
+        data['breadcrumbs'] = current_crumbs + breadcrumbs
+
+
 def is_valid_module_id(id):
     return id is not None and id != '000000000000000000000000000000000'
 
diff --git a/src/sentry/web/api.py b/src/sentry/web/api.py
index 8c8574c17e..6c76746c10 100644
--- a/src/sentry/web/api.py
+++ b/src/sentry/web/api.py
@@ -38,7 +38,7 @@ from sentry.event_manager import EventManager
 from sentry.interfaces import schemas
 from sentry.interfaces.base import get_interface
 from sentry.lang.native.unreal import process_unreal_crash, merge_apple_crash_report, unreal_attachment_type, merge_unreal_context_event, merge_unreal_logs_event
-from sentry.lang.native.minidump import merge_process_state_event, process_minidump, MINIDUMP_ATTACHMENT_TYPE
+from sentry.lang.native.minidump import merge_process_state_event, process_minidump, merge_attached_event, merge_attached_breadcrumbs, MINIDUMP_ATTACHMENT_TYPE
 from sentry.models import Project, OrganizationOption, Organization
 from sentry.signals import (
     event_accepted, event_dropped, event_filtered, event_received)
@@ -698,8 +698,18 @@ class MinidumpView(StoreView):
         if features.has('organizations:event-attachments',
                         project.organization, actor=request.user):
             for name, file in six.iteritems(request.FILES):
-                if name != 'upload_file_minidump':
-                    attachments.append(CachedAttachment.from_upload(file))
+                if name == 'upload_file_minidump':
+                    continue
+                # Known attachment: msgpack event
+                if name == "__sentry-event":
+                    merge_attached_event(file, data)
+                    continue
+                if name == "__sentry-breadcrumb1" or name == "__sentry-breadcrumb2":
+                    merge_attached_breadcrumbs(file, data)
+                    continue
+
+                # Add any other file as attachment
+                attachments.append(CachedAttachment.from_upload(file))
 
         try:
             state = process_minidump(minidump)
diff --git a/tests/sentry/lang/native/test_minidump.py b/tests/sentry/lang/native/test_minidump.py
index 3d0116c875..7d9b6f95a2 100644
--- a/tests/sentry/lang/native/test_minidump.py
+++ b/tests/sentry/lang/native/test_minidump.py
@@ -1,7 +1,8 @@
 from __future__ import absolute_import
 import os
-
-from sentry.lang.native.minidump import process_minidump, merge_process_state_event, is_minidump_event
+import io
+import msgpack
+from sentry.lang.native.minidump import process_minidump, merge_process_state_event, merge_attached_breadcrumbs, is_minidump_event, merge_attached_event
 
 
 def test_is_minidump():
@@ -1052,3 +1053,92 @@ def test_minidump_windows():
         ],
         'timestamp': 1521713273.0
     }
+
+
+class MockFile(object):
+
+    def __init__(self, bytes):
+        self._io = io.BytesIO(bytes)
+        self.size = len(bytes)
+
+    def __getattr__(self, name):
+        return getattr(self._io, name)
+
+
+def test_merge_attached_event_empty():
+    mpack_event = msgpack.packb({})
+    event = {}
+    merge_attached_event(MockFile(mpack_event), event)
+    assert not event
+
+
+def test_merge_attached_event_too_large_empty():
+    mpack_event = msgpack.packb({'a': 'a' * 100000})
+    event = {}
+    merge_attached_event(MockFile(mpack_event), event)
+    assert not event
+
+
+def test_merge_attached_event_arbitrary_key():
+    mpack_event = msgpack.packb({'key': 'value'})
+    event = {}
+    merge_attached_event(MockFile(mpack_event), event)
+    assert event['key'] == 'value'
+
+
+def test_merge_attached_breadcrumbs_empty_creates_crumb():
+    mpack_crumb = msgpack.packb({})
+    event = {}
+    merge_attached_breadcrumbs(MockFile(mpack_crumb), event)
+    assert event
+
+
+def test_merge_attached_breadcrumb_too_large_empty():
+    mpack_crumb = msgpack.packb({'message': 'a' * 50000})
+    event = {}
+    merge_attached_breadcrumbs(MockFile(mpack_crumb), event)
+    assert not event.get('breadcrumbs')
+
+
+# See:
+# https://github.com/getsentry/sentrypad/blob/e1d4feb65c3e9db829cc4ca9d4003ff3c818d95a/src/sentry.cpp#L337-L366
+def test_merge_attached_breadcrumbs_single_crumb():
+    mpack_crumb = msgpack.packb({
+        'timestamp': '0000-00-00T00:00:00Z',
+        'category': 'c',
+        'type': 't',
+        'level': 'debug',
+        'message': 'm',
+    })
+    event = {}
+    merge_attached_breadcrumbs(MockFile(mpack_crumb), event)
+    assert event['breadcrumbs'][0]['timestamp'] == '0000-00-00T00:00:00Z'
+    assert event['breadcrumbs'][0]['category'] == 'c'
+    assert event['breadcrumbs'][0]['type'] == 't'
+    assert event['breadcrumbs'][0]['level'] == 'debug'
+    assert event['breadcrumbs'][0]['message'] == 'm'
+
+
+def test_merge_attached_breadcrumbs_timestamp_ordered():
+    event = {}
+    mpack_crumb1 = msgpack.packb({'timestamp': '0001-01-01T01:00:02Z'})
+    merge_attached_breadcrumbs(MockFile(mpack_crumb1), event)
+    assert event['breadcrumbs'][0]['timestamp'] == '0001-01-01T01:00:02Z'
+
+    mpack_crumb2 = msgpack.packb({'timestamp': '0001-01-01T01:00:01Z'})
+    merge_attached_breadcrumbs(MockFile(mpack_crumb2), event)
+    assert event['breadcrumbs'][0]['timestamp'] == '0001-01-01T01:00:01Z'
+    assert event['breadcrumbs'][1]['timestamp'] == '0001-01-01T01:00:02Z'
+
+    mpack_crumb3 = msgpack.packb({'timestamp': '0001-01-01T01:00:03Z'})
+    merge_attached_breadcrumbs(MockFile(mpack_crumb3), event)
+    assert event['breadcrumbs'][0]['timestamp'] == '0001-01-01T01:00:01Z'
+    assert event['breadcrumbs'][1]['timestamp'] == '0001-01-01T01:00:02Z'
+    assert event['breadcrumbs'][2]['timestamp'] == '0001-01-01T01:00:03Z'
+
+    mpack_crumb4 = msgpack.packb({'timestamp': '0001-01-01T01:00:00Z'})
+    merge_attached_breadcrumbs(MockFile(mpack_crumb4), event)
+    assert event['breadcrumbs'][0]['timestamp'] == '0001-01-01T01:00:00Z'
+    assert event['breadcrumbs'][1]['timestamp'] == '0001-01-01T01:00:01Z'
+    assert event['breadcrumbs'][2]['timestamp'] == '0001-01-01T01:00:02Z'
+    assert event['breadcrumbs'][3]['timestamp'] == '0001-01-01T01:00:03Z'
