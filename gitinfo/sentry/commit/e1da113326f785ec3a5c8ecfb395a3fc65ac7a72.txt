commit e1da113326f785ec3a5c8ecfb395a3fc65ac7a72
Author: David Cramer <dcramer@gmail.com>
Date:   Mon Feb 22 14:48:31 2016 -0800

    Remove ProjectKey auth form API

diff --git a/src/sentry/api/authentication.py b/src/sentry/api/authentication.py
index 4021811e00..5c5159ab73 100644
--- a/src/sentry/api/authentication.py
+++ b/src/sentry/api/authentication.py
@@ -1,12 +1,11 @@
 from __future__ import absolute_import
 
 from django.contrib.auth.models import AnonymousUser
-from django.utils.crypto import constant_time_compare
 from rest_framework.authentication import BasicAuthentication
 from rest_framework.exceptions import AuthenticationFailed
 
 from sentry.app import raven
-from sentry.models import ApiKey, ProjectKey
+from sentry.models import ApiKey
 
 
 class QuietBasicAuthentication(BasicAuthentication):
@@ -32,22 +31,3 @@ class ApiKeyAuthentication(QuietBasicAuthentication):
         })
 
         return (AnonymousUser(), key)
-
-
-class ProjectKeyAuthentication(QuietBasicAuthentication):
-    def authenticate_credentials(self, userid, password):
-        try:
-            pk = ProjectKey.objects.get_from_cache(public_key=userid)
-        except ProjectKey.DoesNotExist:
-            return None
-
-        if not constant_time_compare(pk.secret_key, password):
-            return None
-
-        if not pk.is_active:
-            raise AuthenticationFailed('Key is disabled')
-
-        if not pk.roles.api:
-            raise AuthenticationFailed('Key does not allow API access')
-
-        return (AnonymousUser(), pk)
diff --git a/src/sentry/api/base.py b/src/sentry/api/base.py
index b389bac396..b036077256 100644
--- a/src/sentry/api/base.py
+++ b/src/sentry/api/base.py
@@ -21,7 +21,7 @@ from sentry.models import ApiKey, AuditLogEntry
 from sentry.utils.cursors import Cursor
 from sentry.utils.http import absolute_uri, is_valid_origin
 
-from .authentication import ApiKeyAuthentication, ProjectKeyAuthentication
+from .authentication import ApiKeyAuthentication
 from .paginator import Paginator
 from .permissions import NoPermission
 
@@ -34,7 +34,6 @@ LINK_HEADER = '<{uri}&cursor={cursor}>; rel="{name}"; results="{has_results}"; c
 
 DEFAULT_AUTHENTICATION = (
     ApiKeyAuthentication,
-    ProjectKeyAuthentication,
     SessionAuthentication
 )
 
diff --git a/src/sentry/api/bases/organization.py b/src/sentry/api/bases/organization.py
index c208f3c7a4..1165062862 100644
--- a/src/sentry/api/bases/organization.py
+++ b/src/sentry/api/bases/organization.py
@@ -17,8 +17,6 @@ class OrganizationPermission(ScopedPermission):
 
     def has_object_permission(self, request, view, organization):
         if request.auth:
-            if self.is_project_key(request):
-                return False
             return request.auth.organization_id == organization.id
 
         request.access = access.from_request(request, organization)
diff --git a/src/sentry/api/bases/project.py b/src/sentry/api/bases/project.py
index 15f3bd1d07..5aab69393c 100644
--- a/src/sentry/api/bases/project.py
+++ b/src/sentry/api/bases/project.py
@@ -17,8 +17,6 @@ class ProjectPermission(ScopedPermission):
 
     def has_object_permission(self, request, view, project):
         if request.auth:
-            if self.is_project_key(request):
-                return request.auth.project_id == project.id
             return request.auth.organization_id == project.organization_id
 
         request.access = access.from_request(request, project.organization)
diff --git a/src/sentry/api/bases/team.py b/src/sentry/api/bases/team.py
index 0a40690f3c..24d95accf7 100644
--- a/src/sentry/api/bases/team.py
+++ b/src/sentry/api/bases/team.py
@@ -17,8 +17,6 @@ class TeamPermission(ScopedPermission):
 
     def has_object_permission(self, request, view, team):
         if request.auth:
-            if self.is_project_key(request):
-                return False
             return request.auth.organization_id == team.organization_id
 
         request.access = access.from_request(request, team.organization)
diff --git a/src/sentry/api/permissions.py b/src/sentry/api/permissions.py
index 5fae249084..768ea49719 100644
--- a/src/sentry/api/permissions.py
+++ b/src/sentry/api/permissions.py
@@ -2,8 +2,6 @@ from __future__ import absolute_import
 
 from rest_framework import permissions
 
-from sentry.models import ProjectKey
-
 
 class NoPermission(permissions.BasePermission):
     def has_permission(self, request, view):
@@ -41,9 +39,6 @@ class ScopedPermission(permissions.BasePermission):
     def has_object_permission(self, request, view, obj):
         return False
 
-    def is_project_key(self, request):
-        return isinstance(request.auth, ProjectKey)
-
 
 class SuperuserPermission(permissions.BasePermission):
     def has_permission(self, request, view):
diff --git a/tests/sentry/api/bases/test_organization.py b/tests/sentry/api/bases/test_organization.py
index 8f49d43772..e346aafac3 100644
--- a/tests/sentry/api/bases/test_organization.py
+++ b/tests/sentry/api/bases/test_organization.py
@@ -3,7 +3,7 @@ from __future__ import absolute_import
 from mock import Mock
 
 from sentry.api.bases.organization import OrganizationPermission
-from sentry.models import ApiKey, ProjectKey
+from sentry.models import ApiKey
 from sentry.testutils import TestCase
 
 
@@ -41,14 +41,6 @@ class OrganizationPermissionTest(OrganizationPermissionBase):
         assert self.has_object_perm('GET', self.org, user=user)
         assert not self.has_object_perm('POST', self.org, user=user)
 
-    def test_project_key(self):
-        key = ProjectKey.objects.create(
-            project=self.create_project(
-                team=self.create_team(organization=self.org),
-            ),
-        )
-        assert not self.has_object_perm('GET', self.org, auth=key)
-
     def test_api_key_with_org_access(self):
         key = ApiKey.objects.create(
             organization=self.org,
diff --git a/tests/sentry/api/bases/test_project.py b/tests/sentry/api/bases/test_project.py
index fd0fc6d8f0..4fe16f2552 100644
--- a/tests/sentry/api/bases/test_project.py
+++ b/tests/sentry/api/bases/test_project.py
@@ -3,7 +3,7 @@ from __future__ import absolute_import
 from mock import Mock
 
 from sentry.api.bases.project import ProjectPermission
-from sentry.models import ApiKey, ProjectKey
+from sentry.models import ApiKey
 from sentry.testutils import TestCase
 
 
@@ -73,18 +73,6 @@ class ProjectPermissionTest(ProjectPermissionBase):
         )
         assert self.has_object_perm('GET', self.project, user=user)
 
-    def test_project_key_with_project_access(self):
-        key = ProjectKey.objects.create(
-            project=self.project,
-        )
-        assert self.has_object_perm('GET', self.project, auth=key)
-
-    def test_project_key_without_project_access(self):
-        key = ProjectKey.objects.create(
-            project=self.create_project(organization=self.org),
-        )
-        assert not self.has_object_perm('GET', self.project, auth=key)
-
     def test_api_key_with_org_access(self):
         key = ApiKey.objects.create(
             organization=self.org,
diff --git a/tests/sentry/api/bases/test_team.py b/tests/sentry/api/bases/test_team.py
index 61756d7746..190cc24553 100644
--- a/tests/sentry/api/bases/test_team.py
+++ b/tests/sentry/api/bases/test_team.py
@@ -3,7 +3,7 @@ from __future__ import absolute_import
 from mock import Mock
 
 from sentry.api.bases.team import TeamPermission
-from sentry.models import ApiKey, ProjectKey
+from sentry.models import ApiKey
 from sentry.testutils import TestCase
 
 
@@ -52,12 +52,6 @@ class TeamPermissionTest(TeamPermissionBase):
         )
         assert self.has_object_perm('GET', self.team, user=user)
 
-    def test_get_project_key(self):
-        key = ProjectKey.objects.create(
-            project=self.create_project(team=self.team),
-        )
-        assert not self.has_object_perm('GET', self.team, auth=key)
-
     def test_get_api_key_with_org_access(self):
         key = ApiKey.objects.create(
             organization=self.org,
