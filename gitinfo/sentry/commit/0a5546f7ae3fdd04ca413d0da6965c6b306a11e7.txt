commit 0a5546f7ae3fdd04ca413d0da6965c6b306a11e7
Author: Jess MacQueen <macqueen@users.noreply.github.com>
Date:   Tue Jul 25 11:09:08 2017 -0700

    add tombstones to load-mocks (#5765)

diff --git a/bin/load-mocks b/bin/load-mocks
index 1953f0ed26..b04a835af7 100755
--- a/bin/load-mocks
+++ b/bin/load-mocks
@@ -20,10 +20,10 @@ from pytz import utc
 from sentry import buffer, roles
 from sentry.models import (
     Activity, Broadcast, Commit, CommitAuthor, CommitFileChange, Deploy,
-    Environment, File, GroupMeta, GroupRelease, Organization,
+    Environment, File, Group, GroupMeta, GroupRelease, GroupTombstone, Organization,
     OrganizationAccessRequest, OrganizationMember, Project, Release,
-    ReleaseCommit, ReleaseEnvironment, ReleaseFile, Repository, Team, User,
-    UserReport
+    ReleaseCommit, ReleaseEnvironment, ReleaseFile, Repository, Team,
+    TOMBSTONE_FIELDS_FROM_GROUP, User, UserReport
 )
 from sentry.signals import mocks_loaded
 from sentry.similarity import features
@@ -99,6 +99,27 @@ def generate_commits(user):
     return commits
 
 
+def generate_tombstones(project, user):
+    # attempt to create a high enough previous_group_id
+    # that it won't conflict with any group ids
+    prev_group_id = 100000
+    try:
+        prev_group_id = max(
+            GroupTombstone.objects.order_by('-previous_group_id')[0].previous_group_id,
+            prev_group_id
+        ) + 1
+    except IndexError:
+        pass
+
+    for group in Group.objects.filter(project=project)[:5]:
+        GroupTombstone.objects.create(
+            previous_group_id=prev_group_id,
+            actor_id=user.id,
+            **{name: getattr(group, name) for name in TOMBSTONE_FIELDS_FROM_GROUP}
+        )
+        prev_group_id += 1
+
+
 def create_system_time_series():
     now = datetime.utcnow().replace(tzinfo=utc)
 
@@ -348,6 +369,8 @@ def main(num_events=1, extra_events=False):
                         )
                     release.add_project(project)
 
+            generate_tombstones(project, user)
+
             raw_commits = generate_commits(user)
 
             repo = Repository.objects.get_or_create(
diff --git a/src/sentry/api/endpoints/project_group_index.py b/src/sentry/api/endpoints/project_group_index.py
index 3596bb7bab..243e2e48de 100644
--- a/src/sentry/api/endpoints/project_group_index.py
+++ b/src/sentry/api/endpoints/project_group_index.py
@@ -21,7 +21,7 @@ from sentry.db.models.query import create_or_update
 from sentry.models import (
     Activity, EventMapping, Group, GroupAssignee, GroupBookmark, GroupHash, GroupResolution,
     GroupSeen, GroupSnooze, GroupStatus, GroupSubscription, GroupSubscriptionReason, GroupTombstone,
-    Release, TagKey, UserOption
+    Release, TagKey, TOMBSTONE_FIELDS_FROM_GROUP, UserOption
 )
 from sentry.models.event import Event
 from sentry.models.group import looks_like_short_id
@@ -38,7 +38,6 @@ delete_logger = logging.getLogger('sentry.deletions.api')
 
 ERR_INVALID_STATS_PERIOD = "Invalid stats_period. Valid choices are '', '24h', and '14d'"
 SAVED_SEARCH_QUERIES = set([s['query'] for s in DEFAULT_SAVED_SEARCHES])
-TOMBSTONE_FIELDS_FROM_GROUP = ('project_id', 'level', 'message', 'culprit', 'data')
 
 
 @scenario('BulkUpdateIssues')
diff --git a/src/sentry/models/grouptombstone.py b/src/sentry/models/grouptombstone.py
index a5f545fc6c..04ed20d1eb 100644
--- a/src/sentry/models/grouptombstone.py
+++ b/src/sentry/models/grouptombstone.py
@@ -9,6 +9,8 @@ from sentry.db.models import (
     BoundedPositiveIntegerField, FlexibleForeignKey, GzippedDictField, Model
 )
 
+TOMBSTONE_FIELDS_FROM_GROUP = ('project_id', 'level', 'message', 'culprit', 'data')
+
 
 class GroupTombstone(Model):
     __core__ = False
