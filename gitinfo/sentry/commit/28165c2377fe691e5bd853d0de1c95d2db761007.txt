commit 28165c2377fe691e5bd853d0de1c95d2db761007
Author: Matt Robenolt <matt@ydekproductions.com>
Date:   Fri Jul 22 09:42:44 2016 -0700

    Speed up is_active_superuser check (#3772)
    
    Also added tests since this had 0 coverage and it's something pretty
    critical

diff --git a/src/sentry/auth/utils.py b/src/sentry/auth/utils.py
index ad1ce7c322..6073c97947 100644
--- a/src/sentry/auth/utils.py
+++ b/src/sentry/auth/utils.py
@@ -20,10 +20,7 @@ def is_privileged_request(request):
 
 def is_active_superuser(request):
     user = getattr(request, 'user', None)
-    if not user:
+    if not user or not user.is_superuser:
         return False
 
-    if not is_privileged_request(request):
-        return False
-
-    return user.is_superuser
+    return is_privileged_request(request)
diff --git a/tests/sentry/auth/test_utils.py b/tests/sentry/auth/test_utils.py
new file mode 100644
index 0000000000..eacf01e26c
--- /dev/null
+++ b/tests/sentry/auth/test_utils.py
@@ -0,0 +1,23 @@
+from django.http import HttpRequest
+from django.test.utils import override_settings
+
+from sentry.models import User
+from sentry.auth.utils import is_active_superuser
+
+
+def test_is_active_superuser():
+    request = HttpRequest()
+    request.META['REMOTE_ADDR'] = '10.0.0.1'
+
+    with override_settings(INTERNAL_IPS=()):
+        assert is_active_superuser(request) is False
+        request.user = User()
+        assert is_active_superuser(request) is False
+        request.user.is_superuser = True
+        assert is_active_superuser(request) is True
+
+    with override_settings(INTERNAL_IPS=('127.0.0.1',)):
+        assert is_active_superuser(request) is False
+
+    with override_settings(INTERNAL_IPS=('10.0.0.1',)):
+        assert is_active_superuser(request) is True
