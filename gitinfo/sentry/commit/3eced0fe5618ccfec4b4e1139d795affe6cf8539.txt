commit 3eced0fe5618ccfec4b4e1139d795affe6cf8539
Author: Mark Story <mark@mark-story.com>
Date:   Wed Dec 5 09:12:42 2018 -0500

    fix(integrations) Don't fail to handle stdlib errors (#10914)
    
    Not all errors have `code` properties. We should check before we read
    arbitrary attributes.

diff --git a/src/sentry/api/bases/integration.py b/src/sentry/api/bases/integration.py
index 1847e9c1ee..36a4521bd8 100644
--- a/src/sentry/api/bases/integration.py
+++ b/src/sentry/api/bases/integration.py
@@ -14,7 +14,7 @@ class IntegrationEndpoint(OrganizationEndpoint):
     permission_classes = (OrganizationPermission, )
 
     def handle_exception(self, request, exc):
-        if exc.code == 503:
+        if hasattr(exc, 'code') and exc.code == 503:
             sys.stderr.write(traceback.format_exc())
             event_id = capture_exception()
             context = {
diff --git a/tests/sentry/api/bases/test_integration.py b/tests/sentry/api/bases/test_integration.py
index 31af942992..a325f9341f 100644
--- a/tests/sentry/api/bases/test_integration.py
+++ b/tests/sentry/api/bases/test_integration.py
@@ -25,3 +25,11 @@ class IntegrationEndpointTest(APITestCase):
         resp = IntegrationEndpoint().handle_exception(HttpRequest(), ApiError('This is an error', code=503))
         assert resp.status_code == 503
         assert resp.exception is True
+
+    def test_handle_exception_stdlib(self):
+        resp = IntegrationEndpoint().handle_exception(
+            HttpRequest(),
+            ValueError('This is an error')
+        )
+        assert resp.status_code == 500
+        assert resp.exception is True
