commit d467e8894478662e0ceee9b5137be4ee6620b60d
Author: Billy Vong <billyvg@users.noreply.github.com>
Date:   Wed Apr 3 15:37:36 2019 -0700

    build(prettier): Upgrade prettier to 1.16.4 (#10703)

diff --git a/package.json b/package.json
index bdbd526504..7879d0c601 100644
--- a/package.json
+++ b/package.json
@@ -115,7 +115,7 @@
     "jest": "24.1.0",
     "jest-junit": "^3.4.1",
     "mockdate": "2.0.2",
-    "prettier": "1.7.4",
+    "prettier": "1.16.4",
     "react-test-renderer": "16.5.0",
     "stylelint": "9.1.3",
     "stylelint-config-recommended": "^2.1.0",
diff --git a/src/sentry/static/sentry/app/api.jsx b/src/sentry/static/sentry/app/api.jsx
index 4de31c94fb..236332d15b 100644
--- a/src/sentry/static/sentry/app/api.jsx
+++ b/src/sentry/static/sentry/app/api.jsx
@@ -34,8 +34,8 @@ export function paramsToQueryArgs(params) {
   const p = params.itemIds
     ? {id: params.itemIds} // items matching array of itemids
     : params.query
-      ? {query: params.query} // items matching search query
-      : undefined; // all items
+    ? {query: params.query} // items matching search query
+    : undefined; // all items
 
   // only include environment if it is not null/undefined
   if (params.query && !isNil(params.environment)) {
diff --git a/src/sentry/static/sentry/app/components/acl/feature.jsx b/src/sentry/static/sentry/app/components/acl/feature.jsx
index da7004ac17..5a143a738e 100644
--- a/src/sentry/static/sentry/app/components/acl/feature.jsx
+++ b/src/sentry/static/sentry/app/components/acl/feature.jsx
@@ -155,7 +155,9 @@ class Feature extends React.Component {
     let customDisabledRender =
       renderDisabled === false
         ? false
-        : typeof renderDisabled === 'function' ? renderDisabled : () => <ComingSoon />;
+        : typeof renderDisabled === 'function'
+        ? renderDisabled
+        : () => <ComingSoon />;
 
     // Override the renderDisabled function with a hook store function if there
     // is one registered for the feature.
diff --git a/src/sentry/static/sentry/app/components/actions/ignore.jsx b/src/sentry/static/sentry/app/components/actions/ignore.jsx
index cc35d27653..7107157474 100644
--- a/src/sentry/static/sentry/app/components/actions/ignore.jsx
+++ b/src/sentry/static/sentry/app/components/actions/ignore.jsx
@@ -195,7 +195,8 @@ export default class IgnoreActions extends React.Component {
                                   this.onIgnore({
                                     ignoreCount: count,
                                     ignoreWindow: hours,
-                                  })}
+                                  })
+                                }
                               >
                                 {label}
                               </ActionLink>
@@ -245,7 +246,8 @@ export default class IgnoreActions extends React.Component {
                                   this.onIgnore({
                                     ignoreUserCount: count,
                                     ignoreUserWindow: hours,
-                                  })}
+                                  })
+                                }
                               >
                                 {label}
                               </ActionLink>
diff --git a/src/sentry/static/sentry/app/components/activity/feed.jsx b/src/sentry/static/sentry/app/components/activity/feed.jsx
index d0fbc818b7..0485abb888 100644
--- a/src/sentry/static/sentry/app/components/activity/feed.jsx
+++ b/src/sentry/static/sentry/app/components/activity/feed.jsx
@@ -138,10 +138,9 @@ class ActivityFeed extends React.Component {
     return (
       <div>
         {this.renderResults()}
-        {this.props.pagination &&
-          this.state.pageLinks && (
-            <Pagination pageLinks={this.state.pageLinks} {...this.props} />
-          )}
+        {this.props.pagination && this.state.pageLinks && (
+          <Pagination pageLinks={this.state.pageLinks} {...this.props} />
+        )}
       </div>
     );
   }
diff --git a/src/sentry/static/sentry/app/components/activity/noteInput.jsx b/src/sentry/static/sentry/app/components/activity/noteInput.jsx
index e584fa52a2..8bd626f15f 100644
--- a/src/sentry/static/sentry/app/components/activity/noteInput.jsx
+++ b/src/sentry/static/sentry/app/components/activity/noteInput.jsx
@@ -280,9 +280,11 @@ const NoteInput = createReactClass({
 
   mentionableTeams() {
     const {group} = this.props;
-    return (ProjectsStore.getBySlug(group.project.slug) || {
-      teams: [],
-    }).teams.map(team => ({
+    return (
+      ProjectsStore.getBySlug(group.project.slug) || {
+        teams: [],
+      }
+    ).teams.map(team => ({
       id: buildTeamId(team.id),
       display: `#${team.slug}`,
       email: team.id,
@@ -352,7 +354,8 @@ const NoteInput = createReactClass({
               required={true}
               autoFocus={true}
               displayTransform={(id, display, type) =>
-                `${type === 'member' ? '@' : ''}${display}`}
+                `${type === 'member' ? '@' : ''}${display}`
+              }
               markup="**[sentry.strip:__type__]__display__**"
             >
               <Mention
diff --git a/src/sentry/static/sentry/app/components/assigneeSelector.jsx b/src/sentry/static/sentry/app/components/assigneeSelector.jsx
index 800217a0af..aff69af2e0 100644
--- a/src/sentry/static/sentry/app/components/assigneeSelector.jsx
+++ b/src/sentry/static/sentry/app/components/assigneeSelector.jsx
@@ -130,9 +130,11 @@ const AssigneeSelectorComponent = createReactClass({
   assignableTeams() {
     const group = GroupStore.get(this.props.id);
 
-    return (ProjectsStore.getBySlug(group.project.slug) || {
-      teams: [],
-    }).teams
+    return (
+      ProjectsStore.getBySlug(group.project.slug) || {
+        teams: [],
+      }
+    ).teams
       .sort((a, b) => a.slug.localeCompare(b.slug))
       .map(team => ({
         id: buildTeamId(team.id),
@@ -163,7 +165,13 @@ const AssigneeSelectorComponent = createReactClass({
     this.setState({loading: true});
   },
 
-  handleAssign({value: {type, assignee}}, state, e) {
+  handleAssign(
+    {
+      value: {type, assignee},
+    },
+    state,
+    e
+  ) {
     if (type === 'member') {
       this.assignToUser(assignee);
     }
@@ -291,8 +299,9 @@ const AssigneeSelectorComponent = createReactClass({
                 <InviteMemberLink
                   data-test-id="invite-member"
                   disabled={loading}
-                  to={`/settings/${this.context.organization
-                    .slug}/members/new/?referrer=assignee_selector`}
+                  to={`/settings/${
+                    this.context.organization.slug
+                  }/members/new/?referrer=assignee_selector`}
                 >
                   <MenuItemWrapper>
                     <IconContainer>
diff --git a/src/sentry/static/sentry/app/components/asyncComponent.jsx b/src/sentry/static/sentry/app/components/asyncComponent.jsx
index db591ceb9d..0640d58d42 100644
--- a/src/sentry/static/sentry/app/components/asyncComponent.jsx
+++ b/src/sentry/static/sentry/app/components/asyncComponent.jsx
@@ -86,10 +86,14 @@ export default class AsyncComponent extends React.Component {
 
     const currentLocation = isLocationInProps
       ? this.props.location
-      : isRouterInContext ? this.context.router.location : null;
+      : isRouterInContext
+      ? this.context.router.location
+      : null;
     const prevLocation = isLocationInProps
       ? prevProps.location
-      : isRouterInContext ? prevContext.router.location : null;
+      : isRouterInContext
+      ? prevContext.router.location
+      : null;
 
     if (!(currentLocation && prevLocation)) {
       return;
@@ -363,8 +367,8 @@ export default class AsyncComponent extends React.Component {
     return this.state.loading && (!this.shouldReload || !this.state.reloading)
       ? this.renderLoading()
       : this.state.error
-        ? this.renderError(new Error('Unable to load all required endpoints'))
-        : this.renderBody();
+      ? this.renderError(new Error('Unable to load all required endpoints'))
+      : this.renderBody();
   }
 
   render() {
diff --git a/src/sentry/static/sentry/app/components/autoComplete.jsx b/src/sentry/static/sentry/app/components/autoComplete.jsx
index 59813f6091..397cda11a8 100644
--- a/src/sentry/static/sentry/app/components/autoComplete.jsx
+++ b/src/sentry/static/sentry/app/components/autoComplete.jsx
@@ -335,7 +335,8 @@ class AutoComplete extends React.Component {
               open: this.openMenu,
               close: this.closeMenu,
             },
-          })}
+          })
+        }
       </DropdownMenu>
     );
   }
diff --git a/src/sentry/static/sentry/app/components/avatarChooser.jsx b/src/sentry/static/sentry/app/components/avatarChooser.jsx
index 7109806807..415c81ac47 100644
--- a/src/sentry/static/sentry/app/components/avatarChooser.jsx
+++ b/src/sentry/static/sentry/app/components/avatarChooser.jsx
@@ -173,13 +173,12 @@ class AvatarChooser extends React.Component {
             </AvatarGroup>
 
             <AvatarUploadSection>
-              {allowGravatar &&
-                avatarType === 'gravatar' && (
-                  <Well>
-                    {t('Gravatars are managed through ')}
-                    <ExternalLink href="http://gravatar.com">Gravatar.com</ExternalLink>
-                  </Well>
-                )}
+              {allowGravatar && avatarType === 'gravatar' && (
+                <Well>
+                  {t('Gravatars are managed through ')}
+                  <ExternalLink href="http://gravatar.com">Gravatar.com</ExternalLink>
+                </Well>
+              )}
 
               {avatarType === 'upload' && (
                 <AvatarCropper
diff --git a/src/sentry/static/sentry/app/components/charts/baseChart.jsx b/src/sentry/static/sentry/app/components/charts/baseChart.jsx
index 188a50014e..d169ff08e1 100644
--- a/src/sentry/static/sentry/app/components/charts/baseChart.jsx
+++ b/src/sentry/static/sentry/app/components/charts/baseChart.jsx
@@ -214,8 +214,12 @@ class BaseChart extends React.Component {
     } = this.props;
 
     const yAxisOrCustom = !yAxes
-      ? yAxis !== null ? YAxis(yAxis) : null
-      : Array.isArray(yAxes) ? yAxes.slice(0, 2).map(YAxis) : [YAxis(), YAxis()];
+      ? yAxis !== null
+        ? YAxis(yAxis)
+        : null
+      : Array.isArray(yAxes)
+      ? yAxes.slice(0, 2).map(YAxis)
+      : [YAxis(), YAxis()];
 
     return (
       <ReactEchartsCore
diff --git a/src/sentry/static/sentry/app/components/charts/components/tooltip.jsx b/src/sentry/static/sentry/app/components/charts/components/tooltip.jsx
index 2471797e1c..a576ff5df9 100644
--- a/src/sentry/static/sentry/app/components/charts/components/tooltip.jsx
+++ b/src/sentry/static/sentry/app/components/charts/components/tooltip.jsx
@@ -63,9 +63,15 @@ function getFormatter({filter, isGroupedByDate, truncate, formatAxisLabel, utc})
   };
 }
 
-export default function Tooltip(
-  {filter, isGroupedByDate, formatter, truncate, utc, formatAxisLabel, ...props} = {}
-) {
+export default function Tooltip({
+  filter,
+  isGroupedByDate,
+  formatter,
+  truncate,
+  utc,
+  formatAxisLabel,
+  ...props
+} = {}) {
   formatter =
     formatter || getFormatter({filter, isGroupedByDate, truncate, utc, formatAxisLabel});
 
diff --git a/src/sentry/static/sentry/app/components/charts/components/xAxis.jsx b/src/sentry/static/sentry/app/components/charts/components/xAxis.jsx
index af9fbbae5a..ef3430a0b0 100644
--- a/src/sentry/static/sentry/app/components/charts/components/xAxis.jsx
+++ b/src/sentry/static/sentry/app/components/charts/components/xAxis.jsx
@@ -2,9 +2,12 @@ import {getFormattedDate} from 'app/utils/dates';
 import theme from 'app/utils/theme';
 import {truncationFormatter} from '../utils';
 
-export default function XAxis(
-  {isGroupedByDate, shouldRenderTimeOnly, utc, ...props} = {}
-) {
+export default function XAxis({
+  isGroupedByDate,
+  shouldRenderTimeOnly,
+  utc,
+  ...props
+} = {}) {
   const axisLabelFormatter = value => {
     if (isGroupedByDate) {
       const format = shouldRenderTimeOnly === 'hour' ? 'LT' : 'MMM Do';
diff --git a/src/sentry/static/sentry/app/components/charts/percentageAreaChart.jsx b/src/sentry/static/sentry/app/components/charts/percentageAreaChart.jsx
index fbd9d54344..30c0f05d0c 100644
--- a/src/sentry/static/sentry/app/components/charts/percentageAreaChart.jsx
+++ b/src/sentry/static/sentry/app/components/charts/percentageAreaChart.jsx
@@ -25,7 +25,7 @@ export default class PercentageAreaChart extends React.Component {
     return {
       getDataItemName: ({name}) => name,
       getValue: ({name, value}, total) =>
-        !total ? 0 : Math.round(value / total * 1000) / 10,
+        !total ? 0 : Math.round((value / total) * 1000) / 10,
     };
   }
 
diff --git a/src/sentry/static/sentry/app/components/charts/percentageTableChart.jsx b/src/sentry/static/sentry/app/components/charts/percentageTableChart.jsx
index 7d5ea676b1..f1e6afe510 100644
--- a/src/sentry/static/sentry/app/components/charts/percentageTableChart.jsx
+++ b/src/sentry/static/sentry/app/components/charts/percentageTableChart.jsx
@@ -16,7 +16,7 @@ const Delta = ({current, previous, className}) => {
   if (typeof previous === 'undefined') {
     return null;
   }
-  const changePercent = Math.round(Math.abs(current - previous) / previous * 100);
+  const changePercent = Math.round((Math.abs(current - previous) / previous) * 100);
   const direction = !changePercent ? 0 : current - previous;
   return (
     <StyledDelta direction={direction} className={className}>
diff --git a/src/sentry/static/sentry/app/components/charts/pieChart.jsx b/src/sentry/static/sentry/app/components/charts/pieChart.jsx
index 73a3851ce3..75b3025650 100644
--- a/src/sentry/static/sentry/app/components/charts/pieChart.jsx
+++ b/src/sentry/static/sentry/app/components/charts/pieChart.jsx
@@ -41,7 +41,7 @@ class PieChart extends React.Component {
     return series.data.reduce(
       (acc, {name, value}) => ({
         ...acc,
-        [name]: Math.round(value / total * 10000) / 100,
+        [name]: Math.round((value / total) * 10000) / 100,
       }),
       {}
     );
@@ -78,7 +78,7 @@ class PieChart extends React.Component {
   getSeriesPercentages = series => {
     const total = series.data.reduce((acc, {value}) => acc + value, 0);
     return series.data
-      .map(({name, value}) => [name, Math.round(value / total * 10000) / 100])
+      .map(({name, value}) => [name, Math.round((value / total) * 10000) / 100])
       .reduce(
         (acc, [name, value]) => ({
           ...acc,
@@ -147,9 +147,11 @@ class PieChart extends React.Component {
             top: 10,
             bottom: 10,
             formatter: name => {
-              return `${name} ${typeof seriesPercentages[name] !== 'undefined'
-                ? `(${seriesPercentages[name]}%)`
-                : ''}`;
+              return `${name} ${
+                typeof seriesPercentages[name] !== 'undefined'
+                  ? `(${seriesPercentages[name]}%)`
+                  : ''
+              }`;
             },
           }),
         }}
diff --git a/src/sentry/static/sentry/app/components/charts/tableChart/index.jsx b/src/sentry/static/sentry/app/components/charts/tableChart/index.jsx
index 57dae7519f..c9b83ddcc9 100644
--- a/src/sentry/static/sentry/app/components/charts/tableChart/index.jsx
+++ b/src/sentry/static/sentry/app/components/charts/tableChart/index.jsx
@@ -136,7 +136,9 @@ export const TableChart = styled(
                   width:
                     columnIndex < widths.length
                       ? widths[columnIndex]
-                      : showRowTotal ? rowTotalWidth : null,
+                      : showRowTotal
+                      ? rowTotalWidth
+                      : null,
                   showRowTotal,
                   ...props,
                 })
@@ -154,7 +156,9 @@ export const TableChart = styled(
                     width:
                       index < widths.length
                         ? widths[index]
-                        : showRowTotal ? rowTotalWidth : null,
+                        : showRowTotal
+                        ? rowTotalWidth
+                        : null,
                     justify: 'right',
                     showRowTotal,
                     ...props,
@@ -185,7 +189,9 @@ export const TableChart = styled(
           <Cell justify={justify} width={width} key={`${rowIndex}-${columnIndex}`}>
             {isTableHeader
               ? renderTableHeaderCell(p)
-              : isHeader ? renderHeaderCell(p) : renderDataCell(p)}
+              : isHeader
+              ? renderHeaderCell(p)
+              : renderDataCell(p)}
           </Cell>
         );
       };
@@ -365,7 +371,7 @@ export const TableChartRow = styled(
     render() {
       const {className, showBar, total, value, children} = this.props;
       const barWidth =
-        total > 0 && typeof value === 'number' ? Math.round(value / total * 100) : 0;
+        total > 0 && typeof value === 'number' ? Math.round((value / total) * 100) : 0;
 
       return (
         <PanelItem className={className}>
diff --git a/src/sentry/static/sentry/app/components/commitAuthorStats.jsx b/src/sentry/static/sentry/app/components/commitAuthorStats.jsx
index 7e9804dd7d..f34bad8f8d 100644
--- a/src/sentry/static/sentry/app/components/commitAuthorStats.jsx
+++ b/src/sentry/static/sentry/app/components/commitAuthorStats.jsx
@@ -20,7 +20,7 @@ class CommitBar extends React.Component {
 
   render() {
     const barStyle = {};
-    barStyle.width = this.props.authorCommits / this.props.totalCommits * 100 + '%';
+    barStyle.width = (this.props.authorCommits / this.props.totalCommits) * 100 + '%';
 
     return <div className="commit-bar" style={barStyle} />;
   }
diff --git a/src/sentry/static/sentry/app/components/contextPickerModal.jsx b/src/sentry/static/sentry/app/components/contextPickerModal.jsx
index 9a96c2cd83..21d7282d77 100644
--- a/src/sentry/static/sentry/app/components/contextPickerModal.jsx
+++ b/src/sentry/static/sentry/app/components/contextPickerModal.jsx
@@ -268,22 +268,20 @@ class ContextPickerModal extends React.Component {
               />
             )}
 
-            {latestContext.organization &&
-              needProject &&
-              projects && (
-                <StyledSelectControl
-                  innerRef={ref => {
-                    this.projectSelect = ref;
-                    this.focusProjectSelector();
-                  }}
-                  placeholder="Select a Project"
-                  name="project"
-                  value=""
-                  openOnFocus
-                  options={projects.map(({slug}) => ({label: slug, value: slug}))}
-                  onChange={this.handleSelectProject}
-                />
-              )}
+            {latestContext.organization && needProject && projects && (
+              <StyledSelectControl
+                innerRef={ref => {
+                  this.projectSelect = ref;
+                  this.focusProjectSelector();
+                }}
+                placeholder="Select a Project"
+                name="project"
+                value=""
+                openOnFocus
+                options={projects.map(({slug}) => ({label: slug, value: slug}))}
+                onChange={this.handleSelectProject}
+              />
+            )}
           </Body>
         </React.Fragment>
       </div>
diff --git a/src/sentry/static/sentry/app/components/createSampleEvent.jsx b/src/sentry/static/sentry/app/components/createSampleEvent.jsx
index 1758141b02..c4fc6f6601 100644
--- a/src/sentry/static/sentry/app/components/createSampleEvent.jsx
+++ b/src/sentry/static/sentry/app/components/createSampleEvent.jsx
@@ -41,7 +41,10 @@ class CreateSampleEvent extends React.Component {
 
   createSampleEvent = () => {
     // TODO(DENA): swap out for action creator
-    const {api, params: {orgId, projectId}} = this.props;
+    const {
+      api,
+      params: {orgId, projectId},
+    } = this.props;
     const {organization} = this.context;
     const url = `/projects/${orgId}/${projectId}/create-sample/`;
     const project = organization.projects.find(proj => proj.slug === projectId);
diff --git a/src/sentry/static/sentry/app/components/dropdownMenu.jsx b/src/sentry/static/sentry/app/components/dropdownMenu.jsx
index 9355cc3c38..c124f83b28 100644
--- a/src/sentry/static/sentry/app/components/dropdownMenu.jsx
+++ b/src/sentry/static/sentry/app/components/dropdownMenu.jsx
@@ -240,9 +240,15 @@ class DropdownMenu extends React.Component {
   getRootProps = props => props;
 
   // Actor is the component that will open the dropdown menu
-  getActorProps = (
-    {onClick, onMouseEnter, onMouseLeave, onKeyDown, isStyled, style, ...props} = {}
-  ) => {
+  getActorProps = ({
+    onClick,
+    onMouseEnter,
+    onMouseLeave,
+    onKeyDown,
+    isStyled,
+    style,
+    ...props
+  } = {}) => {
     const {isNestedDropdown, closeOnEscape} = this.props;
 
     // Props that the actor needs to have <DropdownMenu> work
diff --git a/src/sentry/static/sentry/app/components/errors/groupEventDetailsLoadingError.jsx b/src/sentry/static/sentry/app/components/errors/groupEventDetailsLoadingError.jsx
index 14db131f05..c55ead7eab 100644
--- a/src/sentry/static/sentry/app/components/errors/groupEventDetailsLoadingError.jsx
+++ b/src/sentry/static/sentry/app/components/errors/groupEventDetailsLoadingError.jsx
@@ -20,7 +20,9 @@ const GroupEventDetailsLoadingError = ({onRetry, environments}) => {
       <div>
         <p>{t('This could be due to a handful of reasons:')}</p>
         <ol className="detailed-error-list">
-          {reasons.map((reason, i) => <li key={i}>{reason}</li>)}
+          {reasons.map((reason, i) => (
+            <li key={i}>{reason}</li>
+          ))}
         </ol>
       </div>
     );
diff --git a/src/sentry/static/sentry/app/components/eventOrGroupExtraDetails.jsx b/src/sentry/static/sentry/app/components/eventOrGroupExtraDetails.jsx
index 831c4dadae..9c3dc4a56d 100644
--- a/src/sentry/static/sentry/app/components/eventOrGroupExtraDetails.jsx
+++ b/src/sentry/static/sentry/app/components/eventOrGroupExtraDetails.jsx
@@ -77,8 +77,9 @@ class EventOrGroupExtraDetails extends React.Component {
                 <TimeSince date={lastSeen} suffix={t('ago')} />
               </React.Fragment>
             )}
-            {firstSeen &&
-              lastSeen && <span className="hidden-xs hidden-sm">&nbsp;—&nbsp;</span>}
+            {firstSeen && lastSeen && (
+              <span className="hidden-xs hidden-sm">&nbsp;—&nbsp;</span>
+            )}
             {firstSeen && (
               <TimeSince
                 date={firstSeen}
@@ -130,8 +131,9 @@ class EventOrGroupExtraDetails extends React.Component {
             );
           })}
 
-        {showAssignee &&
-          assignedTo && <div>{tct('Assigned to [name]', {name: assignedTo.name})}</div>}
+        {showAssignee && assignedTo && (
+          <div>{tct('Assigned to [name]', {name: assignedTo.name})}</div>
+        )}
       </GroupExtra>
     );
   }
diff --git a/src/sentry/static/sentry/app/components/eventOrGroupHeader.jsx b/src/sentry/static/sentry/app/components/eventOrGroupHeader.jsx
index c9f3cea405..06004f2094 100644
--- a/src/sentry/static/sentry/app/components/eventOrGroupHeader.jsx
+++ b/src/sentry/static/sentry/app/components/eventOrGroupHeader.jsx
@@ -86,12 +86,12 @@ class EventOrGroupHeader extends React.Component {
 
     if (includeLink) {
       props.to = {
-        pathname: `${basePath}${isEvent ? groupID : id}/${isEvent
-          ? `events/${data.id}/`
-          : ''}`,
-        search: `${this.props.query
-          ? `?query=${window.encodeURIComponent(this.props.query)}`
-          : ''}`,
+        pathname: `${basePath}${isEvent ? groupID : id}/${
+          isEvent ? `events/${data.id}/` : ''
+        }`,
+        search: `${
+          this.props.query ? `?query=${window.encodeURIComponent(this.props.query)}` : ''
+        }`,
       };
       if (projectId) {
         Wrapper = ProjectLink;
@@ -107,12 +107,11 @@ class EventOrGroupHeader extends React.Component {
         {...props}
         style={data.status === 'resolved' ? {textDecoration: 'line-through'} : null}
       >
-        {!hideLevel &&
-          level && (
-            <Tooltip title={`Error level: ${capitalize(level)}`}>
-              <GroupLevel level={data.level} />
-            </Tooltip>
-          )}
+        {!hideLevel && level && (
+          <Tooltip title={`Error level: ${capitalize(level)}`}>
+            <GroupLevel level={data.level} />
+          </Tooltip>
+        )}
         {!hideIcons && data.status === 'ignored' && <Muted className="icon-soundoff" />}
         {!hideIcons && data.isBookmarked && <Starred className="icon-star-solid" />}
         <EventOrGroupTitle
diff --git a/src/sentry/static/sentry/app/components/events/eventAttachments.jsx b/src/sentry/static/sentry/app/components/events/eventAttachments.jsx
index 5d1adee2d5..957b3095e0 100644
--- a/src/sentry/static/sentry/app/components/events/eventAttachments.jsx
+++ b/src/sentry/static/sentry/app/components/events/eventAttachments.jsx
@@ -47,8 +47,9 @@ export default createReactClass({
       return;
     }
     this.api.request(
-      `/projects/${this.props.orgId}/${this.props
-        .projectId}/events/${event.id}/attachments/`,
+      `/projects/${this.props.orgId}/${this.props.projectId}/events/${
+        event.id
+      }/attachments/`,
       {
         success: (data, _, jqXHR) => {
           this.setState({
@@ -66,7 +67,9 @@ export default createReactClass({
 
   getDownloadUrl(attachment) {
     const {orgId, event, projectId} = this.props;
-    return `/api/0/projects/${orgId}/${projectId}/events/${event.id}/attachments/${attachment.id}/?download=1`;
+    return `/api/0/projects/${orgId}/${projectId}/events/${event.id}/attachments/${
+      attachment.id
+    }/?download=1`;
   },
 
   render() {
diff --git a/src/sentry/static/sentry/app/components/events/eventCause.jsx b/src/sentry/static/sentry/app/components/events/eventCause.jsx
index b27dfb046f..58a5029122 100644
--- a/src/sentry/static/sentry/app/components/events/eventCause.jsx
+++ b/src/sentry/static/sentry/app/components/events/eventCause.jsx
@@ -56,8 +56,9 @@ export default createReactClass({
       return;
     }
     this.api.request(
-      `/projects/${this.props.orgId}/${this.props
-        .projectId}/events/${event.id}/committers/`,
+      `/projects/${this.props.orgId}/${this.props.projectId}/events/${
+        event.id
+      }/committers/`,
       {
         success: (data, _, jqXHR) => {
           this.setState(data);
diff --git a/src/sentry/static/sentry/app/components/events/eventEntries.jsx b/src/sentry/static/sentry/app/components/events/eventEntries.jsx
index 069fb6a3ca..3d94f348a2 100644
--- a/src/sentry/static/sentry/app/components/events/eventEntries.jsx
+++ b/src/sentry/static/sentry/app/components/events/eventEntries.jsx
@@ -155,10 +155,9 @@ class EventEntries extends React.Component {
         {!utils.objectIsEmpty(event.errors) && (
           <EventErrors group={group} event={event} />
         )}{' '}
-        {!isShare &&
-          features.has('suggested-commits') && (
-            <EventCause event={event} orgId={orgId} projectId={project.slug} />
-          )}
+        {!isShare && features.has('suggested-commits') && (
+          <EventCause event={event} orgId={orgId} projectId={project.slug} />
+        )}
         {event.userReport && (
           <EventUserFeedback
             report={event.userReport}
@@ -186,30 +185,27 @@ class EventEntries extends React.Component {
         {!utils.objectIsEmpty(event.device) && (
           <EventDevice group={group} event={event} />
         )}
-        {!isShare &&
-          features.has('event-attachments') && (
-            <EventAttachments event={event} orgId={orgId} projectId={project.slug} />
-          )}
+        {!isShare && features.has('event-attachments') && (
+          <EventAttachments event={event} orgId={orgId} projectId={project.slug} />
+        )}
         {!utils.objectIsEmpty(event.sdk) && <EventSdk group={group} event={event} />}
-        {!utils.objectIsEmpty(event.sdk) &&
-          event.sdk.upstream.isNewer && (
-            <div className="alert-block alert-info box">
-              <span className="icon-exclamation" />
-              {t(
-                'This event was reported with an old version of the %s SDK.',
-                event.platform
-              )}
-              {event.sdk.upstream.url && (
-                <a href={event.sdk.upstream.url} className="btn btn-sm btn-default">
-                  {t('Learn More')}
-                </a>
-              )}
-            </div>
-          )}{' '}
-        {!isShare &&
-          features.has('grouping-info') && (
-            <EventGroupingInfo group={group} event={event} />
-          )}
+        {!utils.objectIsEmpty(event.sdk) && event.sdk.upstream.isNewer && (
+          <div className="alert-block alert-info box">
+            <span className="icon-exclamation" />
+            {t(
+              'This event was reported with an old version of the %s SDK.',
+              event.platform
+            )}
+            {event.sdk.upstream.url && (
+              <a href={event.sdk.upstream.url} className="btn btn-sm btn-default">
+                {t('Learn More')}
+              </a>
+            )}
+          </div>
+        )}{' '}
+        {!isShare && features.has('grouping-info') && (
+          <EventGroupingInfo group={group} event={event} />
+        )}
       </div>
     );
   }
diff --git a/src/sentry/static/sentry/app/components/events/eventRow.jsx b/src/sentry/static/sentry/app/components/events/eventRow.jsx
index eb0ef8230a..9223c3e18c 100644
--- a/src/sentry/static/sentry/app/components/events/eventRow.jsx
+++ b/src/sentry/static/sentry/app/components/events/eventRow.jsx
@@ -33,8 +33,9 @@ class EventRow extends React.Component {
 
   render() {
     const event = this.state.event;
-    const eventLink = `/${this.props.orgSlug}/${this.props
-      .projectSlug}/issues/${event.groupID}/events/${event.id}/`;
+    const eventLink = `/${this.props.orgSlug}/${this.props.projectSlug}/issues/${
+      event.groupID
+    }/events/${event.id}/`;
 
     const tagList = [];
     for (const key in event.tags) {
diff --git a/src/sentry/static/sentry/app/components/events/groupingInfo.jsx b/src/sentry/static/sentry/app/components/events/groupingInfo.jsx
index ad331589d9..ba85e68400 100644
--- a/src/sentry/static/sentry/app/components/events/groupingInfo.jsx
+++ b/src/sentry/static/sentry/app/components/events/groupingInfo.jsx
@@ -255,8 +255,9 @@ class EventGroupingInfo extends AsyncComponent {
   getEndpoints() {
     const {organization, group, event} = this.props;
 
-    let path = `/projects/${organization.slug}/${group.project
-      .slug}/events/${event.id}/grouping-info/`;
+    let path = `/projects/${organization.slug}/${group.project.slug}/events/${
+      event.id
+    }/grouping-info/`;
     if (this.state && this.state.configOverride) {
       path = `${path}?config=${this.state.configOverride}`;
     }
@@ -338,7 +339,9 @@ class EventGroupingInfo extends AsyncComponent {
             }}
           />
         </div>
-        {variants.map(variant => <GroupVariant variant={variant} key={variant.key} />)}
+        {variants.map(variant => (
+          <GroupVariant variant={variant} key={variant.key} />
+        ))}
       </GroupVariantList>
     );
   }
diff --git a/src/sentry/static/sentry/app/components/events/interfaces/crashHeader.jsx b/src/sentry/static/sentry/app/components/events/interfaces/crashHeader.jsx
index 550e57d579..307591cc60 100644
--- a/src/sentry/static/sentry/app/components/events/interfaces/crashHeader.jsx
+++ b/src/sentry/static/sentry/app/components/events/interfaces/crashHeader.jsx
@@ -92,11 +92,13 @@ const CrashHeader = createReactClass({
         <h3 className="pull-left">
           {this.props.title}
           <small style={{marginLeft: 5}}>
-            (<Tooltip title={t('Toggle stacktrace order')}>
+            (
+            <Tooltip title={t('Toggle stacktrace order')}>
               <a onClick={this.toggleOrder} style={{borderBottom: '1px dotted #aaa'}}>
                 {newestFirst ? t('most recent call first') : t('most recent call last')}
               </a>
-            </Tooltip>)
+            </Tooltip>
+            )
           </small>
         </h3>
         <div className="btn-group" style={{marginLeft: 10}}>
diff --git a/src/sentry/static/sentry/app/components/events/interfaces/openInButton.jsx b/src/sentry/static/sentry/app/components/events/interfaces/openInButton.jsx
index 1c6a4c471c..a695bb99ab 100644
--- a/src/sentry/static/sentry/app/components/events/interfaces/openInButton.jsx
+++ b/src/sentry/static/sentry/app/components/events/interfaces/openInButton.jsx
@@ -40,8 +40,9 @@ class OpenInButton extends React.Component {
     if (hasSentryApps && group && group.project && group.project.id) {
       api
         .requestPromise(
-          `/organizations/${organization.slug}/sentry-app-components/?filter=stacktrace-link&projectId=${group
-            .project.id}`
+          `/organizations/${
+            organization.slug
+          }/sentry-app-components/?filter=stacktrace-link&projectId=${group.project.id}`
         )
         .then(data => {
           if (data.length) {
diff --git a/src/sentry/static/sentry/app/components/events/interfaces/rawExceptionContent.jsx b/src/sentry/static/sentry/app/components/events/interfaces/rawExceptionContent.jsx
index 75fe4cdd70..a6f4c64619 100644
--- a/src/sentry/static/sentry/app/components/events/interfaces/rawExceptionContent.jsx
+++ b/src/sentry/static/sentry/app/components/events/interfaces/rawExceptionContent.jsx
@@ -51,7 +51,9 @@ class RawExceptionContent extends React.Component {
     const {type, organization, projectId, eventId} = this.props;
 
     const minified = type == 'minified';
-    return `/projects/${organization.slug}/${projectId}/events/${eventId}/apple-crash-report?minified=${minified}`;
+    return `/projects/${
+      organization.slug
+    }/${projectId}/events/${eventId}/apple-crash-report?minified=${minified}`;
   }
 
   fetchAppleCrashReport() {
diff --git a/src/sentry/static/sentry/app/components/events/interfaces/richHttpContent.jsx b/src/sentry/static/sentry/app/components/events/interfaces/richHttpContent.jsx
index 6aa6dde1d5..9c0711234b 100644
--- a/src/sentry/static/sentry/app/components/events/interfaces/richHttpContent.jsx
+++ b/src/sentry/static/sentry/app/components/events/interfaces/richHttpContent.jsx
@@ -61,14 +61,13 @@ class RichHttpContent extends React.Component {
           </ClippedBox>
         )}
 
-        {data.cookies &&
-          !objectIsEmpty(data.cookies) && (
-            <ClippedBox title={t('Cookies')} defaultCollapsed>
-              <ErrorBoundary mini>
-                <KeyValueList data={data.cookies} />
-              </ErrorBoundary>
-            </ClippedBox>
-          )}
+        {data.cookies && !objectIsEmpty(data.cookies) && (
+          <ClippedBox title={t('Cookies')} defaultCollapsed>
+            <ErrorBoundary mini>
+              <KeyValueList data={data.cookies} />
+            </ErrorBoundary>
+          </ClippedBox>
+        )}
         {!objectIsEmpty(data.headers) && (
           <ClippedBox title={t('Headers')}>
             <ErrorBoundary mini>
diff --git a/src/sentry/static/sentry/app/components/events/interfaces/threads.jsx b/src/sentry/static/sentry/app/components/events/interfaces/threads.jsx
index f4582fb0ec..c268aaeeb4 100644
--- a/src/sentry/static/sentry/app/components/events/interfaces/threads.jsx
+++ b/src/sentry/static/sentry/app/components/events/interfaces/threads.jsx
@@ -83,8 +83,10 @@ function getThreadTitle(thread, event, simplified) {
           {frame.filename
             ? trimFilename(frame.filename)
             : frame.package
-              ? trimPackage(frame.package)
-              : frame.module ? frame.module : '<unknown>'}
+            ? trimPackage(frame.package)
+            : frame.module
+            ? frame.module
+            : '<unknown>'}
         </em>
       );
     }
diff --git a/src/sentry/static/sentry/app/components/eventsTable/eventsTableRow.jsx b/src/sentry/static/sentry/app/components/eventsTable/eventsTableRow.jsx
index 11a221b392..8cd7fc92d6 100644
--- a/src/sentry/static/sentry/app/components/eventsTable/eventsTableRow.jsx
+++ b/src/sentry/static/sentry/app/components/eventsTable/eventsTableRow.jsx
@@ -43,13 +43,15 @@ class EventsTableRow extends React.Component {
     if (!event.crashFile) {
       return null;
     }
-    const url = `/api/0/projects/${orgId}/${projectId}/events/${event.id}/attachments/${event
-      .crashFile.id}/?download=1`;
+    const url = `/api/0/projects/${orgId}/${projectId}/events/${event.id}/attachments/${
+      event.crashFile.id
+    }/?download=1`;
     const crashFileType =
       event.crashFile.type === 'event.minidump' ? 'Minidump' : 'Crash file';
     return (
       <small>
-        {crashFileType}: <a href={url}>{event.crashFile.name}</a> (<FileSize bytes={event.crashFile.size} />)
+        {crashFileType}: <a href={url}>{event.crashFile.name}</a> (
+        <FileSize bytes={event.crashFile.size} />)
       </small>
     );
   }
diff --git a/src/sentry/static/sentry/app/components/forms/booleanField.jsx b/src/sentry/static/sentry/app/components/forms/booleanField.jsx
index 7ed636ebd6..38c75c7342 100644
--- a/src/sentry/static/sentry/app/components/forms/booleanField.jsx
+++ b/src/sentry/static/sentry/app/components/forms/booleanField.jsx
@@ -39,15 +39,11 @@ export default class BooleanField extends InputField {
           <label className="control-label">
             {this.getField()}
             {this.props.label}
-            {this.props.disabled &&
-              this.props.disabledReason && (
-                <span
-                  className="disabled-indicator tip"
-                  title={this.props.disabledReason}
-                >
-                  <span className="icon-question" />
-                </span>
-              )}
+            {this.props.disabled && this.props.disabledReason && (
+              <span className="disabled-indicator tip" title={this.props.disabledReason}>
+                <span className="icon-question" />
+              </span>
+            )}
           </label>
           {defined(this.props.help) && <p className="help-block">{this.props.help}</p>}
           {error && <p className="error">{error}</p>}
diff --git a/src/sentry/static/sentry/app/components/forms/form.jsx b/src/sentry/static/sentry/app/components/forms/form.jsx
index 1c26cbdf1f..38a3b2e926 100644
--- a/src/sentry/static/sentry/app/components/forms/form.jsx
+++ b/src/sentry/static/sentry/app/components/forms/form.jsx
@@ -127,23 +127,26 @@ class Form extends React.Component {
 
     return (
       <StyledForm onSubmit={this.onSubmit} className={this.props.className}>
-        {isError &&
-          !hideErrors && (
-            <div className="alert alert-error alert-block">
-              {nonFieldErrors ? (
-                <div>
-                  <p>
-                    {t(
-                      'Unable to save your changes. Please correct the following errors try again.'
-                    )}
-                  </p>
-                  <ul>{nonFieldErrors.map((e, i) => <li key={i}>{e}</li>)}</ul>
-                </div>
-              ) : (
-                errorMessage
-              )}
-            </div>
-          )}
+        {isError && !hideErrors && (
+          <div className="alert alert-error alert-block">
+            {nonFieldErrors ? (
+              <div>
+                <p>
+                  {t(
+                    'Unable to save your changes. Please correct the following errors try again.'
+                  )}
+                </p>
+                <ul>
+                  {nonFieldErrors.map((e, i) => (
+                    <li key={i}>{e}</li>
+                  ))}
+                </ul>
+              </div>
+            ) : (
+              errorMessage
+            )}
+          </div>
+        )}
         {this.props.children}
         <div className={this.props.footerClass} style={{marginTop: 25}}>
           <button
diff --git a/src/sentry/static/sentry/app/components/group/externalIssueActions.jsx b/src/sentry/static/sentry/app/components/group/externalIssueActions.jsx
index f057af9db1..874c502c61 100644
--- a/src/sentry/static/sentry/app/components/group/externalIssueActions.jsx
+++ b/src/sentry/static/sentry/app/components/group/externalIssueActions.jsx
@@ -43,7 +43,9 @@ class ExternalIssueActions extends AsyncComponent {
 
   deleteIssue(issueId) {
     const {group, integration} = this.props;
-    const endpoint = `/groups/${group.id}/integrations/${integration.id}/?externalIssue=${issueId}`;
+    const endpoint = `/groups/${group.id}/integrations/${
+      integration.id
+    }/?externalIssue=${issueId}`;
     this.api.request(endpoint, {
       method: 'DELETE',
       success: (data, _, jqXHR) => {
diff --git a/src/sentry/static/sentry/app/components/group/externalIssuesList.jsx b/src/sentry/static/sentry/app/components/group/externalIssuesList.jsx
index 928bd112a5..f33c2c3b7d 100644
--- a/src/sentry/static/sentry/app/components/group/externalIssuesList.jsx
+++ b/src/sentry/static/sentry/app/components/group/externalIssuesList.jsx
@@ -82,7 +82,9 @@ class ExternalIssueList extends AsyncComponent {
 
       api
         .requestPromise(
-          `/organizations/${orgId}/sentry-app-components/?filter=issue-link&projectId=${project.id}`
+          `/organizations/${orgId}/sentry-app-components/?filter=issue-link&projectId=${
+            project.id
+          }`
         )
         .then(data => {
           this.setState({components: data});
diff --git a/src/sentry/static/sentry/app/components/group/pluginActions.jsx b/src/sentry/static/sentry/app/components/group/pluginActions.jsx
index dcd638a8e4..ed23cb059d 100644
--- a/src/sentry/static/sentry/app/components/group/pluginActions.jsx
+++ b/src/sentry/static/sentry/app/components/group/pluginActions.jsx
@@ -126,22 +126,20 @@ const PluginActions = createReactClass({
               <a onClick={() => this.handleClick('link')}>{t('Link')}</a>
             </li>
           </NavTabs>
-          {this.state.showModal &&
-            actionType &&
-            !this.state.pluginLoading && (
-              // need the key here so React will re-render
-              // with new action prop
-              <Modal.Body key={actionType}>
-                {plugins.get(plugin).renderGroupActions({
-                  plugin,
-                  group: this.props.group,
-                  project: this.props.project,
-                  organization: this.getOrganization(),
-                  actionType,
-                  onSuccess: this.closeModal,
-                })}
-              </Modal.Body>
-            )}
+          {this.state.showModal && actionType && !this.state.pluginLoading && (
+            // need the key here so React will re-render
+            // with new action prop
+            <Modal.Body key={actionType}>
+              {plugins.get(plugin).renderGroupActions({
+                plugin,
+                group: this.props.group,
+                project: this.props.project,
+                organization: this.getOrganization(),
+                actionType,
+                onSuccess: this.closeModal,
+              })}
+            </Modal.Body>
+          )}
         </Modal>
       </React.Fragment>
     );
diff --git a/src/sentry/static/sentry/app/components/group/releaseChart.jsx b/src/sentry/static/sentry/app/components/group/releaseChart.jsx
index 06d50615f4..557bc75255 100644
--- a/src/sentry/static/sentry/app/components/group/releaseChart.jsx
+++ b/src/sentry/static/sentry/app/components/group/releaseChart.jsx
@@ -72,17 +72,16 @@ const GroupReleaseChart = createReactClass({
       `<dd>${intcomma(totalY)} event${totalY !== 1 ? 's' : ''}</dd>` +
       (environment
         ? '<dt class="environment"><span></span></dt>' +
-          `<dd>${intcomma(envPoints[point.x] || 0)} event${envPoints[point.x] !== 1
-            ? 's'
-            : ''}` +
+          `<dd>${intcomma(envPoints[point.x] || 0)} event${
+            envPoints[point.x] !== 1 ? 's' : ''
+          }` +
           `<small>in ${escape(environment)}</small></dd>`
         : '') +
       (release
         ? '<dt class="active"><span></span></dt>' +
-          `<dd>${intcomma(releasePoints[point.x] || 0)} event${releasePoints[point.x] !==
-          1
-            ? 's'
-            : ''}` +
+          `<dd>${intcomma(releasePoints[point.x] || 0)} event${
+            releasePoints[point.x] !== 1 ? 's' : ''
+          }` +
           `<small>in ${escape(release.version.substr(0, 12))}</small></dd>`
         : '') +
       '</dl>' +
diff --git a/src/sentry/static/sentry/app/components/group/releaseStats.jsx b/src/sentry/static/sentry/app/components/group/releaseStats.jsx
index 86606b0d6d..a991644206 100644
--- a/src/sentry/static/sentry/app/components/group/releaseStats.jsx
+++ b/src/sentry/static/sentry/app/components/group/releaseStats.jsx
@@ -78,7 +78,9 @@ const GroupReleaseStats = createReactClass({
     const shortEnvironmentLabel =
       environments.length > 1
         ? t('selected environments')
-        : environments.length === 1 ? environments[0].displayName : null;
+        : environments.length === 1
+        ? environments[0].displayName
+        : null;
 
     const projectId = project.slug;
     const orgId = this.getOrganization().slug;
diff --git a/src/sentry/static/sentry/app/components/group/sentryAppExternalIssueForm.jsx b/src/sentry/static/sentry/app/components/group/sentryAppExternalIssueForm.jsx
index 884f4ff9f2..2c3eccf115 100644
--- a/src/sentry/static/sentry/app/components/group/sentryAppExternalIssueForm.jsx
+++ b/src/sentry/static/sentry/app/components/group/sentryAppExternalIssueForm.jsx
@@ -82,7 +82,9 @@ class SentryAppExternalIssueForm extends React.Component {
     return (
       <Form
         key={this.props.action}
-        apiEndpoint={`/sentry-app-installations/${sentryAppInstallation.uuid}/external-issues/`}
+        apiEndpoint={`/sentry-app-installations/${
+          sentryAppInstallation.uuid
+        }/external-issues/`}
         apiMethod="POST"
         onSubmitSuccess={this.onSubmitSuccess}
         onSubmitError={this.onSubmitError}
diff --git a/src/sentry/static/sentry/app/components/group/suggestedOwners.jsx b/src/sentry/static/sentry/app/components/group/suggestedOwners.jsx
index 40bd25196d..5a1c3c4717 100644
--- a/src/sentry/static/sentry/app/components/group/suggestedOwners.jsx
+++ b/src/sentry/static/sentry/app/components/group/suggestedOwners.jsx
@@ -191,7 +191,8 @@ const SuggestedOwners = createReactClass({
                   project,
                   organization: org,
                   issueId: group.id,
-                })}
+                })
+              }
               size="small"
               className="btn btn-default btn-sm btn-create-ownership-rule"
             >
diff --git a/src/sentry/static/sentry/app/components/hovercard.jsx b/src/sentry/static/sentry/app/components/hovercard.jsx
index affd063634..513445f0a3 100644
--- a/src/sentry/static/sentry/app/components/hovercard.jsx
+++ b/src/sentry/static/sentry/app/components/hovercard.jsx
@@ -80,7 +80,9 @@ class Hovercard extends React.Component {
     const x =
       rect.right > window.innerWidth && !(rect.left < 0)
         ? 'right'
-        : rect.left < 0 ? 'left' : 'middle';
+        : rect.left < 0
+        ? 'left'
+        : 'middle';
 
     this.setState({position: {x, y, offset}});
   }
@@ -133,7 +135,9 @@ const positionX = offset => p => css`
   right: ${p.position.x === 'right' ? offset : 'inherit'};
   left: ${p.position.x === 'middle'
     ? '50%'
-    : p.position.x === 'left' ? offset : 'inherit'};
+    : p.position.x === 'left'
+    ? offset
+    : 'inherit'};
 
   transform: ${translateX(p.position.x)};
 `;
diff --git a/src/sentry/static/sentry/app/components/idBadge/badgeDisplayName.jsx b/src/sentry/static/sentry/app/components/idBadge/badgeDisplayName.jsx
index c24cfa202e..005481b36c 100644
--- a/src/sentry/static/sentry/app/components/idBadge/badgeDisplayName.jsx
+++ b/src/sentry/static/sentry/app/components/idBadge/badgeDisplayName.jsx
@@ -8,9 +8,9 @@ const BadgeDisplayName = styled(({hideOverflow, ...props}) => <span {...props} /
   ${p => p.hideOverflow && overflowEllipsis};
   ${p =>
     p.hideOverflow &&
-    `max-width: ${typeof p.hideOverflow === 'string'
-      ? p.hideOverflow
-      : p.theme.settings.maxCrumbWidth}`};
+    `max-width: ${
+      typeof p.hideOverflow === 'string' ? p.hideOverflow : p.theme.settings.maxCrumbWidth
+    }`};
   padding: ${space(0.25)} 0;
 `;
 
diff --git a/src/sentry/static/sentry/app/components/idBadge/userBadge.jsx b/src/sentry/static/sentry/app/components/idBadge/userBadge.jsx
index 05b1802351..4cbb080b54 100644
--- a/src/sentry/static/sentry/app/components/idBadge/userBadge.jsx
+++ b/src/sentry/static/sentry/app/components/idBadge/userBadge.jsx
@@ -87,9 +87,8 @@ const StyledEmail = styled('div')`
   ${overflowEllipsis};
 `;
 
-const StyledName = styled(
-  ({useLink, hideEmail, to, ...props}) =>
-    useLink ? <Link to={to} {...props} /> : <span {...props} />
+const StyledName = styled(({useLink, hideEmail, to, ...props}) =>
+  useLink ? <Link to={to} {...props} /> : <span {...props} />
 )`
   font-weight: ${p => (p.hideEmail ? 'inherit' : 'bold')};
   line-height: 1.15em;
diff --git a/src/sentry/static/sentry/app/components/installPromptBanner.jsx b/src/sentry/static/sentry/app/components/installPromptBanner.jsx
index 3fd511a136..e3f9609b28 100644
--- a/src/sentry/static/sentry/app/components/installPromptBanner.jsx
+++ b/src/sentry/static/sentry/app/components/installPromptBanner.jsx
@@ -25,7 +25,10 @@ class InstallPromptBanner extends React.Component {
   }
 
   sentFirstEvent() {
-    const {organization: {projects}, config} = this.props;
+    const {
+      organization: {projects},
+      config,
+    } = this.props;
     return !!projects.find(p => p.firstEvent) || !!config.sentFirstEvent;
   }
 
@@ -39,7 +42,9 @@ class InstallPromptBanner extends React.Component {
     const projectCount = projects.length;
     if (projectCount > 0 && getPlatformName(projects[projectCount - 1].platform)) {
       const project = projects[projectCount - 1];
-      url = `/onboarding/${organization.slug}/${project.slug}/configure/${project.platform}`;
+      url = `/onboarding/${organization.slug}/${project.slug}/configure/${
+        project.platform
+      }`;
     }
     return url;
   }
diff --git a/src/sentry/static/sentry/app/components/issueList.jsx b/src/sentry/static/sentry/app/components/issueList.jsx
index 34501014ea..7c089bdf1a 100644
--- a/src/sentry/static/sentry/app/components/issueList.jsx
+++ b/src/sentry/static/sentry/app/components/issueList.jsx
@@ -173,10 +173,9 @@ const IssueList = createReactClass({
     return (
       <React.Fragment>
         {this.renderResults()}
-        {this.props.pagination &&
-          this.state.pageLinks && (
-            <Pagination pageLinks={this.state.pageLinks} {...this.props} />
-          )}
+        {this.props.pagination && this.state.pageLinks && (
+          <Pagination pageLinks={this.state.pageLinks} {...this.props} />
+        )}
       </React.Fragment>
     );
   },
diff --git a/src/sentry/static/sentry/app/components/issueSyncListElement.jsx b/src/sentry/static/sentry/app/components/issueSyncListElement.jsx
index 3460fbbc4b..d69ec56911 100644
--- a/src/sentry/static/sentry/app/components/issueSyncListElement.jsx
+++ b/src/sentry/static/sentry/app/components/issueSyncListElement.jsx
@@ -107,14 +107,13 @@ class IssueSyncListElement extends React.Component {
           {this.getIcon()}
           {this.getLink()}
         </Hovercard>
-        {this.props.onOpen &&
-          this.props.onClose && (
-            <OpenCloseIcon
-              src="icon-close"
-              onClick={this.isLinked() ? this.handleDelete : this.props.onOpen}
-              isLinked={this.isLinked()}
-            />
-          )}
+        {this.props.onOpen && this.props.onClose && (
+          <OpenCloseIcon
+            src="icon-close"
+            onClick={this.isLinked() ? this.handleDelete : this.props.onOpen}
+            isLinked={this.isLinked()}
+          />
+        )}
       </IssueSyncListElementContainer>
     );
   }
diff --git a/src/sentry/static/sentry/app/components/lastCommit.jsx b/src/sentry/static/sentry/app/components/lastCommit.jsx
index 8c3aa6b1d2..831ae51f3d 100644
--- a/src/sentry/static/sentry/app/components/lastCommit.jsx
+++ b/src/sentry/static/sentry/app/components/lastCommit.jsx
@@ -45,9 +45,8 @@ class LastCommit extends React.Component {
             {this.renderMessage(commit.message)}
           </div>
           <div className="commit-meta">
-            <strong>
-              {(commitAuthor && commitAuthor.name) || t('Unknown Author')}
-            </strong>&nbsp;
+            <strong>{(commitAuthor && commitAuthor.name) || t('Unknown Author')}</strong>
+            &nbsp;
             <TimeSince date={commit.dateCreated} />
           </div>
         </div>
diff --git a/src/sentry/static/sentry/app/components/modals/integrationDetailsModal.jsx b/src/sentry/static/sentry/app/components/modals/integrationDetailsModal.jsx
index afe05b1acf..cb9944638a 100644
--- a/src/sentry/static/sentry/app/components/modals/integrationDetailsModal.jsx
+++ b/src/sentry/static/sentry/app/components/modals/integrationDetailsModal.jsx
@@ -34,7 +34,13 @@ const defaultFeatureGateComponents = {
       ungatedFeatures: p.features,
       gatedFeatureGroups: [],
     }),
-  FeatureList: p => <ul>{p.features.map((f, i) => <li key={i}>{f.description}</li>)}</ul>,
+  FeatureList: p => (
+    <ul>
+      {p.features.map((f, i) => (
+        <li key={i}>{f.description}</li>
+      ))}
+    </ul>
+  ),
 };
 
 class IntegrationDetailsModal extends React.Component {
@@ -99,19 +105,18 @@ class IntegrationDetailsModal extends React.Component {
           {...p}
         />
       )) ||
-      (!provider.canAdd &&
-        metadata.aspects.externalInstall && (
-          <Button
-            icon="icon-exit"
-            href={metadata.aspects.externalInstall.url}
-            onClick={closeModal}
-            external
-            {...buttonProps}
-            {...p}
-          >
-            {metadata.aspects.externalInstall.buttonText}
-          </Button>
-        ));
+      (!provider.canAdd && metadata.aspects.externalInstall && (
+        <Button
+          icon="icon-exit"
+          href={metadata.aspects.externalInstall.url}
+          onClick={closeModal}
+          external
+          {...buttonProps}
+          {...p}
+        >
+          {metadata.aspects.externalInstall.buttonText}
+        </Button>
+      ));
 
     // Prepare the features list
     const features = metadata.features.map(f => ({
diff --git a/src/sentry/static/sentry/app/components/modals/sentryAppPermissionsModal.jsx b/src/sentry/static/sentry/app/components/modals/sentryAppPermissionsModal.jsx
index 4538506b2f..acce7e210c 100644
--- a/src/sentry/static/sentry/app/components/modals/sentryAppPermissionsModal.jsx
+++ b/src/sentry/static/sentry/app/components/modals/sentryAppPermissionsModal.jsx
@@ -82,7 +82,9 @@ class SentryAppPermissionsModal extends React.Component {
           {app.redirectUrl && (
             <RedirectionInfo>
               {t(
-                `After installation you'll be redirected to the ${app.name} service to finish setup.`
+                `After installation you'll be redirected to the ${
+                  app.name
+                } service to finish setup.`
               )}
             </RedirectionInfo>
           )}
diff --git a/src/sentry/static/sentry/app/components/onboardingWizard/toDoItem.jsx b/src/sentry/static/sentry/app/components/onboardingWizard/toDoItem.jsx
index 2d3c826d75..7e49929586 100644
--- a/src/sentry/static/sentry/app/components/onboardingWizard/toDoItem.jsx
+++ b/src/sentry/static/sentry/app/components/onboardingWizard/toDoItem.jsx
@@ -51,7 +51,9 @@ const TodoItem = createReactClass({
     const {task} = this.props;
     let learnMoreUrl;
     if (task.featureLocation === 'project') {
-      learnMoreUrl = `/organizations/${org.slug}/projects/choose/?onboarding=1&task=${task.task}`;
+      learnMoreUrl = `/organizations/${org.slug}/projects/choose/?onboarding=1&task=${
+        task.task
+      }`;
     } else if (task.featureLocation === 'organization') {
       learnMoreUrl = `/organizations/${org.slug}/${task.location}`;
     } else if (task.featureLocation === 'absolute') {
diff --git a/src/sentry/static/sentry/app/components/organizations/headerItem.jsx b/src/sentry/static/sentry/app/components/organizations/headerItem.jsx
index 8577fa137b..1b34d2dd64 100644
--- a/src/sentry/static/sentry/app/components/organizations/headerItem.jsx
+++ b/src/sentry/static/sentry/app/components/organizations/headerItem.jsx
@@ -65,16 +65,14 @@ class HeaderItem extends React.Component {
           {icon}
         </IconContainer>
         <Content>{children}</Content>
-        {hasSelected &&
-          !locked &&
-          allowClear && (
-            <StyledClose
-              src="icon-close"
-              locked={locked}
-              hasSelected={hasSelected}
-              onClick={this.handleClear}
-            />
-          )}
+        {hasSelected && !locked && allowClear && (
+          <StyledClose
+            src="icon-close"
+            locked={locked}
+            hasSelected={hasSelected}
+            onClick={this.handleClear}
+          />
+        )}
         {!locked && (
           <StyledChevron
             isOpen={isOpen}
diff --git a/src/sentry/static/sentry/app/components/passwordStrength.jsx b/src/sentry/static/sentry/app/components/passwordStrength.jsx
index 5e5179209b..765f818cdd 100644
--- a/src/sentry/static/sentry/app/components/passwordStrength.jsx
+++ b/src/sentry/static/sentry/app/components/passwordStrength.jsx
@@ -51,7 +51,7 @@ class PasswordStrength extends React.Component {
     }
 
     const {score} = result;
-    const percent = Math.round((score + 1) / MAX_SCORE * 100);
+    const percent = Math.round(((score + 1) / MAX_SCORE) * 100);
 
     const styles = css`
       background: ${colors[score]};
diff --git a/src/sentry/static/sentry/app/components/pluginConfig.jsx b/src/sentry/static/sentry/app/components/pluginConfig.jsx
index 5db56902f9..4b384fe663 100644
--- a/src/sentry/static/sentry/app/components/pluginConfig.jsx
+++ b/src/sentry/static/sentry/app/components/pluginConfig.jsx
@@ -115,23 +115,22 @@ const PluginConfig = createReactClass({
             </Flex>
             <span>{data.name}</span>
           </Flex>
-          {data.canDisable &&
-            enabled && (
-              <Flex align="center">
-                <Box mr={1}>
-                  {data.isTestable && (
-                    <Button onClick={this.testPlugin} size="small">
-                      {t('Test Plugin')}
-                    </Button>
-                  )}
-                </Box>
-                <Box>
-                  <Button size="small" onClick={this.disablePlugin}>
-                    {t('Disable')}
+          {data.canDisable && enabled && (
+            <Flex align="center">
+              <Box mr={1}>
+                {data.isTestable && (
+                  <Button onClick={this.testPlugin} size="small">
+                    {t('Test Plugin')}
                   </Button>
-                </Box>
-              </Flex>
-            )}
+                )}
+              </Box>
+              <Box>
+                <Button size="small" onClick={this.disablePlugin}>
+                  {t('Disable')}
+                </Button>
+              </Box>
+            </Flex>
+          )}
         </PanelHeader>
         <PanelBody px={2} pt={2} flex wrap="wrap">
           {data.status === 'beta' ? (
diff --git a/src/sentry/static/sentry/app/components/pluginList.jsx b/src/sentry/static/sentry/app/components/pluginList.jsx
index 95ae9fbe9f..d5f2bc0287 100644
--- a/src/sentry/static/sentry/app/components/pluginList.jsx
+++ b/src/sentry/static/sentry/app/components/pluginList.jsx
@@ -59,17 +59,19 @@ export default class PluginList extends React.Component {
 
     return (
       <div>
-        {pluginList.filter(p => p.enabled).map(data => {
-          return (
-            <PluginConfig
-              data={data}
-              organization={organization}
-              project={project}
-              key={data.id}
-              onDisablePlugin={this.handleDisablePlugin}
-            />
-          );
-        })}
+        {pluginList
+          .filter(p => p.enabled)
+          .map(data => {
+            return (
+              <PluginConfig
+                data={data}
+                organization={organization}
+                project={project}
+                key={data.id}
+                onDisablePlugin={this.handleDisablePlugin}
+              />
+            );
+          })}
 
         <InactivePlugins
           plugins={pluginList.filter(p => !p.enabled && !p.isHidden)}
diff --git a/src/sentry/static/sentry/app/components/projectSelector.jsx b/src/sentry/static/sentry/app/components/projectSelector.jsx
index f4cedbd379..0b14ea6b42 100644
--- a/src/sentry/static/sentry/app/components/projectSelector.jsx
+++ b/src/sentry/static/sentry/app/components/projectSelector.jsx
@@ -267,7 +267,8 @@ class ProjectSelector extends React.Component {
             selectedProjects: this.isControlled()
               ? this.props.selectedProjects
               : Array.from(this.state.selectedProjects.values()),
-          })}
+          })
+        }
       </DropdownAutoComplete>
     );
   }
diff --git a/src/sentry/static/sentry/app/components/qrcode.jsx b/src/sentry/static/sentry/app/components/qrcode.jsx
index c8a3957808..c4cd5463d6 100644
--- a/src/sentry/static/sentry/app/components/qrcode.jsx
+++ b/src/sentry/static/sentry/app/components/qrcode.jsx
@@ -33,8 +33,8 @@ class Qrcode extends React.Component {
         <tbody>
           {code.map((row, i) => (
             <tr key={i}>
-              {row.map(
-                (cell, j) => (cell ? <BlackCell key={j} /> : <WhiteCell key={j} />)
+              {row.map((cell, j) =>
+                cell ? <BlackCell key={j} /> : <WhiteCell key={j} />
               )}
             </tr>
           ))}
diff --git a/src/sentry/static/sentry/app/components/repositoryFileSummary.jsx b/src/sentry/static/sentry/app/components/repositoryFileSummary.jsx
index cdf1c33206..e5628ba57e 100644
--- a/src/sentry/static/sentry/app/components/repositoryFileSummary.jsx
+++ b/src/sentry/static/sentry/app/components/repositoryFileSummary.jsx
@@ -76,13 +76,12 @@ class RepositoryFileSummary extends React.Component {
           {numCollapsed > 0 && (
             <Collapsed onClick={this.onCollapseToggle} count={numCollapsed} />
           )}
-          {numCollapsed === 0 &&
-            canCollapse && (
-              <li className="list-group-item list-group-item-sm align-center">
-                <span className="icon-container" />
-                <a onClick={this.onCollapseToggle}>{t('Collapse')}</a>
-              </li>
-            )}
+          {numCollapsed === 0 && canCollapse && (
+            <li className="list-group-item list-group-item-sm align-center">
+              <span className="icon-container" />
+              <a onClick={this.onCollapseToggle}>{t('Collapse')}</a>
+            </li>
+          )}
         </ul>
       </div>
     );
diff --git a/src/sentry/static/sentry/app/components/resultGrid.jsx b/src/sentry/static/sentry/app/components/resultGrid.jsx
index 14a5a1c928..c6f6200084 100644
--- a/src/sentry/static/sentry/app/components/resultGrid.jsx
+++ b/src/sentry/static/sentry/app/components/resultGrid.jsx
@@ -369,14 +369,15 @@ const ResultGrid = createReactClass({
             {this.state.loading
               ? this.renderLoading()
               : this.state.error
-                ? this.renderError()
-                : this.state.rows.length === 0
-                  ? this.renderNoResults()
-                  : this.renderResults()}
+              ? this.renderError()
+              : this.state.rows.length === 0
+              ? this.renderNoResults()
+              : this.renderResults()}
           </tbody>
         </table>
-        {this.props.hasPagination &&
-          this.state.pageLinks && <Pagination pageLinks={this.state.pageLinks} />}
+        {this.props.hasPagination && this.state.pageLinks && (
+          <Pagination pageLinks={this.state.pageLinks} />
+        )}
       </div>
     );
   },
diff --git a/src/sentry/static/sentry/app/components/search/index.jsx b/src/sentry/static/sentry/app/components/search/index.jsx
index e92d273e2c..3ddd0481cb 100644
--- a/src/sentry/static/sentry/app/components/search/index.jsx
+++ b/src/sentry/static/sentry/app/components/search/index.jsx
@@ -216,8 +216,9 @@ class Search extends React.Component {
                             getItemProps,
                           });
                         })}
-                      {!isLoading &&
-                        !hasAnyResults && <EmptyItem>{t('No results found')}</EmptyItem>}
+                      {!isLoading && !hasAnyResults && (
+                        <EmptyItem>{t('No results found')}</EmptyItem>
+                      )}
                     </DropdownBox>
                   )}
                 </SearchSources>
diff --git a/src/sentry/static/sentry/app/components/search/searchResult.jsx b/src/sentry/static/sentry/app/components/search/searchResult.jsx
index b17d3cdf9d..14ebf9914a 100644
--- a/src/sentry/static/sentry/app/components/search/searchResult.jsx
+++ b/src/sentry/static/sentry/app/components/search/searchResult.jsx
@@ -16,8 +16,8 @@ class SearchResult extends React.Component {
     highlighted: PropTypes.bool,
     item: PropTypes.shape({
       /**
-     * The source of the search result (i.e. a model type)
-     */
+       * The source of the search result (i.e. a model type)
+       */
       sourceType: PropTypes.oneOf([
         'organization',
         'project',
@@ -33,11 +33,11 @@ class SearchResult extends React.Component {
         'help',
       ]),
       /**
-     * The type of result this is, for example:
-     * - can be a setting route,
-     * - an application route (e.g. org dashboard)
-     * - form field
-     */
+       * The type of result this is, for example:
+       * - can be a setting route,
+       * - an application route (e.g. org dashboard)
+       * - form field
+       */
       resultType: PropTypes.oneOf([
         'settings',
         'command',
diff --git a/src/sentry/static/sentry/app/components/search/sources/apiSource.jsx b/src/sentry/static/sentry/app/components/search/sources/apiSource.jsx
index 5907c411b7..7d1249e99b 100644
--- a/src/sentry/static/sentry/app/components/search/sources/apiSource.jsx
+++ b/src/sentry/static/sentry/app/components/search/sources/apiSource.jsx
@@ -137,7 +137,9 @@ async function createShortIdLookupResult(shortIdLookupPromise) {
       model: shortIdLookup.group,
       sourceType: 'issue',
       resultType: 'issue',
-      to: `/${shortIdLookup.organizationSlug}/${shortIdLookup.projectSlug}/issues/${shortIdLookup.groupId}/`,
+      to: `/${shortIdLookup.organizationSlug}/${shortIdLookup.projectSlug}/issues/${
+        shortIdLookup.groupId
+      }/`,
     },
   };
 }
@@ -155,7 +157,9 @@ async function createEventIdLookupResult(eventIdLookupPromise) {
       description: `${event && event.metadata && event.metadata.value}`,
       sourceType: 'event',
       resultType: 'event',
-      to: `/${eventIdLookup.organizationSlug}/${eventIdLookup.projectSlug}/issues/${eventIdLookup.groupId}/events/${eventIdLookup.eventId}/`,
+      to: `/${eventIdLookup.organizationSlug}/${eventIdLookup.projectSlug}/issues/${
+        eventIdLookup.groupId
+      }/events/${eventIdLookup.eventId}/`,
     },
   };
 }
diff --git a/src/sentry/static/sentry/app/components/shareIssue.jsx b/src/sentry/static/sentry/app/components/shareIssue.jsx
index 42bb327c59..72b312957e 100644
--- a/src/sentry/static/sentry/app/components/shareIssue.jsx
+++ b/src/sentry/static/sentry/app/components/shareIssue.jsx
@@ -232,15 +232,14 @@ class ShareIssue extends React.Component {
             </FlowLayout>
           )}
 
-          {!busy &&
-            isSharing && (
-              <ShareUrlContainer
-                {...this.props}
-                onCancel={this.handleConfirmCancel}
-                onConfirming={this.handleConfirmReshare}
-                onShare={this.handleShare}
-              />
-            )}
+          {!busy && isSharing && (
+            <ShareUrlContainer
+              {...this.props}
+              onCancel={this.handleConfirmCancel}
+              onConfirming={this.handleConfirmReshare}
+              onShare={this.handleShare}
+            />
+          )}
         </li>
       </DropdownLink>
     );
diff --git a/src/sentry/static/sentry/app/components/sidebar/broadcasts.jsx b/src/sentry/static/sentry/app/components/sidebar/broadcasts.jsx
index 04fc4a023c..a144ca6aa2 100644
--- a/src/sentry/static/sentry/app/components/sidebar/broadcasts.jsx
+++ b/src/sentry/static/sentry/app/components/sidebar/broadcasts.jsx
@@ -143,36 +143,35 @@ class Broadcasts extends React.Component {
           id="broadcasts"
         />
 
-        {showPanel &&
-          currentPanel == 'broadcasts' && (
-            <SidebarPanel
-              data-test-id="sidebar-broadcasts-panel"
-              orientation={orientation}
-              collapsed={collapsed}
-              title={t("What's new in Sentry")}
-              hidePanel={hidePanel}
-            >
-              {loading ? (
-                <LoadingIndicator />
-              ) : broadcasts.length === 0 ? (
-                <SidebarPanelEmpty>
-                  {t('No recent updates from the Sentry team.')}
-                </SidebarPanelEmpty>
-              ) : (
-                broadcasts.map(item => {
-                  return (
-                    <SidebarPanelItem
-                      key={item.id}
-                      hasSeen={item.hasSeen}
-                      title={item.title}
-                      message={item.message}
-                      link={item.link}
-                    />
-                  );
-                })
-              )}
-            </SidebarPanel>
-          )}
+        {showPanel && currentPanel == 'broadcasts' && (
+          <SidebarPanel
+            data-test-id="sidebar-broadcasts-panel"
+            orientation={orientation}
+            collapsed={collapsed}
+            title={t("What's new in Sentry")}
+            hidePanel={hidePanel}
+          >
+            {loading ? (
+              <LoadingIndicator />
+            ) : broadcasts.length === 0 ? (
+              <SidebarPanelEmpty>
+                {t('No recent updates from the Sentry team.')}
+              </SidebarPanelEmpty>
+            ) : (
+              broadcasts.map(item => {
+                return (
+                  <SidebarPanelItem
+                    key={item.id}
+                    hasSeen={item.hasSeen}
+                    title={item.title}
+                    message={item.message}
+                    link={item.link}
+                  />
+                );
+              })
+            )}
+          </SidebarPanel>
+        )}
       </React.Fragment>
     );
   }
diff --git a/src/sentry/static/sentry/app/components/sidebar/incidents.jsx b/src/sentry/static/sentry/app/components/sidebar/incidents.jsx
index 4aabf8cc6e..7456423265 100644
--- a/src/sentry/static/sentry/app/components/sidebar/incidents.jsx
+++ b/src/sentry/static/sentry/app/components/sidebar/incidents.jsx
@@ -77,44 +77,42 @@ const Incidents = createReactClass({
           label={t('Service status')}
           onClick={onShowPanel}
         />
-        {showPanel &&
-          active &&
-          status && (
-            <SidebarPanel
-              orientation={orientation}
-              title={t('Recent status updates')}
-              hidePanel={hidePanel}
-              collapsed={collapsed}
-            >
-              {isEmpty && (
-                <SidebarPanelEmpty>
-                  {t('There are no incidents to report')}
-                </SidebarPanelEmpty>
-              )}
-              <IncidentList className="incident-list">
-                {status.incidents.map(incident => (
-                  <IncidentItem key={incident.id}>
-                    <IncidentTitle>{incident.title}</IncidentTitle>
-                    {incident.updates ? (
-                      <div>
-                        <StatusHeader>{t('Latest updates:')}</StatusHeader>
-                        <StatusList>
-                          {incident.updates.map((update, key) => (
-                            <StatusItem key={key}>{update}</StatusItem>
-                          ))}
-                        </StatusList>
-                      </div>
-                    ) : null}
+        {showPanel && active && status && (
+          <SidebarPanel
+            orientation={orientation}
+            title={t('Recent status updates')}
+            hidePanel={hidePanel}
+            collapsed={collapsed}
+          >
+            {isEmpty && (
+              <SidebarPanelEmpty>
+                {t('There are no incidents to report')}
+              </SidebarPanelEmpty>
+            )}
+            <IncidentList className="incident-list">
+              {status.incidents.map(incident => (
+                <IncidentItem key={incident.id}>
+                  <IncidentTitle>{incident.title}</IncidentTitle>
+                  {incident.updates ? (
                     <div>
-                      <Button href={incident.url} size="small" external>
-                        {t('Learn more')}
-                      </Button>
+                      <StatusHeader>{t('Latest updates:')}</StatusHeader>
+                      <StatusList>
+                        {incident.updates.map((update, key) => (
+                          <StatusItem key={key}>{update}</StatusItem>
+                        ))}
+                      </StatusList>
                     </div>
-                  </IncidentItem>
-                ))}
-              </IncidentList>
-            </SidebarPanel>
-          )}
+                  ) : null}
+                  <div>
+                    <Button href={incident.url} size="small" external>
+                      {t('Learn more')}
+                    </Button>
+                  </div>
+                </IncidentItem>
+              ))}
+            </IncidentList>
+          </SidebarPanel>
+        )}
       </React.Fragment>
     );
   },
diff --git a/src/sentry/static/sentry/app/components/sidebar/index.jsx b/src/sentry/static/sentry/app/components/sidebar/index.jsx
index 99ef6d7480..615b539dea 100644
--- a/src/sentry/static/sentry/app/components/sidebar/index.jsx
+++ b/src/sentry/static/sentry/app/components/sidebar/index.jsx
@@ -269,7 +269,8 @@ class Sidebar extends React.Component {
                       this.navigateWithGlobalSelection(
                         `/organizations/${organization.slug}/issues/`,
                         evt
-                      )}
+                      )
+                    }
                     icon={<InlineSvg src="icon-issues" />}
                     label={t('Issues')}
                     to={`/organizations/${organization.slug}/issues/`}
@@ -288,7 +289,8 @@ class Sidebar extends React.Component {
                       this.navigateWithGlobalSelection(
                         `/organizations/${organization.slug}/events/`,
                         evt
-                      )}
+                      )
+                    }
                     icon={<InlineSvg src="icon-stack" />}
                     label={t('Events')}
                     to={`/organizations/${organization.slug}/events/`}
@@ -304,7 +306,8 @@ class Sidebar extends React.Component {
                         this.navigateWithGlobalSelection(
                           `/organizations/${organization.slug}/releases/`,
                           evt
-                        )}
+                        )
+                      }
                       icon={<InlineSvg src="icon-releases" />}
                       label={t('Releases')}
                       to={`/organizations/${organization.slug}/releases/`}
@@ -316,7 +319,8 @@ class Sidebar extends React.Component {
                         this.navigateWithGlobalSelection(
                           `/organizations/${organization.slug}/user-feedback/`,
                           evt
-                        )}
+                        )
+                      }
                       icon={<InlineSvg src="icon-support" />}
                       label={t('User Feedback')}
                       to={`/organizations/${organization.slug}/user-feedback/`}
@@ -372,7 +376,8 @@ class Sidebar extends React.Component {
                       this.navigateWithGlobalSelection(
                         `/organizations/${organization.slug}/monitors/`,
                         evt
-                      )}
+                      )
+                    }
                     icon={<InlineSvg src="icon-labs" />}
                     label={t('Monitors')}
                     to={`/organizations/${organization.slug}/monitors/`}
diff --git a/src/sentry/static/sentry/app/components/sidebar/onboardingStatus.jsx b/src/sentry/static/sentry/app/components/sidebar/onboardingStatus.jsx
index 20d1e684ee..75172125ce 100644
--- a/src/sentry/static/sentry/app/components/sidebar/onboardingStatus.jsx
+++ b/src/sentry/static/sentry/app/components/sidebar/onboardingStatus.jsx
@@ -48,7 +48,7 @@ class OnboardingStatus extends React.Component {
     const allDisplayedTasks = TodoList.TASKS.filter(task => task.display);
 
     const percentage = Math.round(
-      doneTasks.length / allDisplayedTasks.length * 100
+      (doneTasks.length / allDisplayedTasks.length) * 100
     ).toString();
 
     const style = {
@@ -64,7 +64,9 @@ class OnboardingStatus extends React.Component {
       <div className={currentPanel === 'todos' ? 'onboarding active' : 'onboarding'}>
         <Tooltip
           title={t(
-            `Getting started with Sentry: <br />${doneTasks.length} / ${allDisplayedTasks.length} tasks completed`
+            `Getting started with Sentry: <br />${doneTasks.length} / ${
+              allDisplayedTasks.length
+            } tasks completed`
           )}
           tooltipOptions={{html: true}}
         >
@@ -76,16 +78,15 @@ class OnboardingStatus extends React.Component {
             <div className="slider" style={style} />
           </div>
         </Tooltip>
-        {showPanel &&
-          currentPanel === 'todos' && (
-            <SidebarPanel
-              collapsed={collapsed}
-              title="Getting Started with Sentry"
-              hidePanel={hidePanel}
-            >
-              <TodoList />
-            </SidebarPanel>
-          )}
+        {showPanel && currentPanel === 'todos' && (
+          <SidebarPanel
+            collapsed={collapsed}
+            title="Getting Started with Sentry"
+            hidePanel={hidePanel}
+          >
+            <TodoList />
+          </SidebarPanel>
+        )}
       </div>
     );
   }
diff --git a/src/sentry/static/sentry/app/components/sidebar/sidebarDropdown/index.jsx b/src/sentry/static/sentry/app/components/sidebar/sidebarDropdown/index.jsx
index 54f187ce7c..39611e9c87 100644
--- a/src/sentry/static/sentry/app/components/sidebar/sidebarDropdown/index.jsx
+++ b/src/sentry/static/sentry/app/components/sidebar/sidebarDropdown/index.jsx
@@ -82,18 +82,17 @@ const SidebarDropdown = withApi(
                 >
                   <div style={{display: 'flex', alignItems: 'flex-start'}}>
                     {avatar}
-                    {!collapsed &&
-                      orientation !== 'top' && (
-                        <OrgAndUserWrapper>
-                          <OrgOrUserName>
-                            {hasOrganization ? org.name : user.name}{' '}
-                            <i className="icon-arrow-down" />
-                          </OrgOrUserName>
-                          <UserNameOrEmail>
-                            {hasOrganization ? user.name : user.email}
-                          </UserNameOrEmail>
-                        </OrgAndUserWrapper>
-                      )}
+                    {!collapsed && orientation !== 'top' && (
+                      <OrgAndUserWrapper>
+                        <OrgOrUserName>
+                          {hasOrganization ? org.name : user.name}{' '}
+                          <i className="icon-arrow-down" />
+                        </OrgOrUserName>
+                        <UserNameOrEmail>
+                          {hasOrganization ? user.name : user.email}
+                        </UserNameOrEmail>
+                      </OrgAndUserWrapper>
+                    )}
                   </div>
                 </SidebarDropdownActor>
 
diff --git a/src/sentry/static/sentry/app/components/sidebar/sidebarDropdown/switchOrganization.jsx b/src/sentry/static/sentry/app/components/sidebar/sidebarDropdown/switchOrganization.jsx
index d168519a44..f7df306594 100644
--- a/src/sentry/static/sentry/app/components/sidebar/sidebarDropdown/switchOrganization.jsx
+++ b/src/sentry/static/sentry/app/components/sidebar/sidebarDropdown/switchOrganization.jsx
@@ -71,8 +71,9 @@ class SwitchOrganization extends React.Component {
                       );
                     })}
                   </OrganizationList>
-                  {hasOrganizations &&
-                    canCreateOrganization && <Divider css={{marginTop: 0}} />}
+                  {hasOrganizations && canCreateOrganization && (
+                    <Divider css={{marginTop: 0}} />
+                  )}
                   {canCreateOrganization && (
                     <SidebarMenuItem
                       data-test-id="sidebar-create-org"
diff --git a/src/sentry/static/sentry/app/components/sidebar/sidebarItem.jsx b/src/sentry/static/sentry/app/components/sidebar/sidebarItem.jsx
index 396eb5b7e2..138ddf3d18 100644
--- a/src/sentry/static/sentry/app/components/sidebar/sidebarItem.jsx
+++ b/src/sentry/static/sentry/app/components/sidebar/sidebarItem.jsx
@@ -97,14 +97,13 @@ class SidebarItem extends React.Component {
         >
           <SidebarItemWrapper>
             <SidebarItemIcon>{icon}</SidebarItemIcon>
-            {!collapsed &&
-              !isTop && (
-                <SidebarItemLabel>
-                  <LabelHook id={this.props.id}>
-                    <TextOverflow>{label}</TextOverflow>
-                  </LabelHook>
-                </SidebarItemLabel>
-              )}
+            {!collapsed && !isTop && (
+              <SidebarItemLabel>
+                <LabelHook id={this.props.id}>
+                  <TextOverflow>{label}</TextOverflow>
+                </LabelHook>
+              </SidebarItemLabel>
+            )}
             {badge > 0 && (
               <SidebarItemBadge collapsed={collapsed}>{badge}</SidebarItemBadge>
             )}
diff --git a/src/sentry/static/sentry/app/components/splitDiff.jsx b/src/sentry/static/sentry/app/components/splitDiff.jsx
index 20d7a707e1..2a0314a974 100644
--- a/src/sentry/static/sentry/app/components/splitDiff.jsx
+++ b/src/sentry/static/sentry/app/components/splitDiff.jsx
@@ -49,13 +49,15 @@ class SplitDiff extends React.Component {
               <tr key={j}>
                 <Cell isRemoved={highlightRemoved}>
                   <Line>
-                    {line.filter(result => !result.added).map((result, i) => {
-                      return (
-                        <Word key={i} isRemoved={result.removed}>
-                          {result.value}
-                        </Word>
-                      );
-                    })}
+                    {line
+                      .filter(result => !result.added)
+                      .map((result, i) => {
+                        return (
+                          <Word key={i} isRemoved={result.removed}>
+                            {result.value}
+                          </Word>
+                        );
+                      })}
                   </Line>
                 </Cell>
 
@@ -63,13 +65,15 @@ class SplitDiff extends React.Component {
 
                 <Cell isAdded={highlightAdded}>
                   <Line>
-                    {line.filter(result => !result.removed).map((result, i) => {
-                      return (
-                        <Word key={i} isAdded={result.added}>
-                          {result.value}
-                        </Word>
-                      );
-                    })}
+                    {line
+                      .filter(result => !result.removed)
+                      .map((result, i) => {
+                        return (
+                          <Word key={i} isAdded={result.added}>
+                            {result.value}
+                          </Word>
+                        );
+                      })}
                   </Line>
                 </Cell>
               </tr>
diff --git a/src/sentry/static/sentry/app/components/stackedBarChart.jsx b/src/sentry/static/sentry/app/components/stackedBarChart.jsx
index aaa8eee382..8e974fe54f 100644
--- a/src/sentry/static/sentry/app/components/stackedBarChart.jsx
+++ b/src/sentry/static/sentry/app/components/stackedBarChart.jsx
@@ -257,13 +257,15 @@ class StackedBarChart extends React.Component {
       `<div class="time-label">${timeLabel}</div>` +
       '</div>';
     if (this.props.label) {
-      title += `<div class="value-label">${totalY.toLocaleString()} ${this.props
-        .label}</div>`;
+      title += `<div class="value-label">${totalY.toLocaleString()} ${
+        this.props.label
+      }</div>`;
     }
     point.y.forEach((y, i) => {
       const s = this.state.series[i];
       if (s.label) {
-        title += `<div><span style="color:${s.color}">${s.label}:</span> ${(y || 0
+        title += `<div><span style="color:${s.color}">${s.label}:</span> ${(
+          y || 0
         ).toLocaleString()}</div>`;
       }
     });
@@ -286,7 +288,7 @@ class StackedBarChart extends React.Component {
     let prevPct = 0;
     const pts = point.y.map((y, i) => {
       const pct = Math.max(
-        totalY && this.floatFormat(y / totalY * totalPct * maxPercentage, 2),
+        totalY && this.floatFormat((y / totalY) * totalPct * maxPercentage, 2),
         this.getMinHeight(i, point.y.length)
       );
 
diff --git a/src/sentry/static/sentry/app/components/stream/processingIssueHint.jsx b/src/sentry/static/sentry/app/components/stream/processingIssueHint.jsx
index 42444db46e..87ea6d55fd 100644
--- a/src/sentry/static/sentry/app/components/stream/processingIssueHint.jsx
+++ b/src/sentry/static/sentry/app/components/stream/processingIssueHint.jsx
@@ -49,9 +49,11 @@ class ProcessingIssueHint extends React.Component {
       );
       lastEvent = (
         <span className="last-seen">
-          ({tct('last event from [ago]', {
+          (
+          {tct('last event from [ago]', {
             ago: <TimeSince date={issue.lastSeen} />,
-          })})
+          })}
+          )
         </span>
       );
       className['alert-error'] = true;
diff --git a/src/sentry/static/sentry/app/routes.jsx b/src/sentry/static/sentry/app/routes.jsx
index e129984d43..aaf484ada7 100644
--- a/src/sentry/static/sentry/app/routes.jsx
+++ b/src/sentry/static/sentry/app/routes.jsx
@@ -82,21 +82,24 @@ function routes() {
         path="details/"
         name="Details"
         componentPromise={() =>
-          import(/* webpackChunkName: "AccountDetails" */ './views/settings/account/accountDetails')}
+          import(/* webpackChunkName: "AccountDetails" */ './views/settings/account/accountDetails')
+        }
         component={errorHandler(LazyLoad)}
       />
 
       <Route path="notifications/" name="Notifications">
         <IndexRoute
           componentPromise={() =>
-            import(/* webpackChunkName: "AccountNotifications" */ './views/settings/account/accountNotifications')}
+            import(/* webpackChunkName: "AccountNotifications" */ './views/settings/account/accountNotifications')
+          }
           component={errorHandler(LazyLoad)}
         />
         <Route
           path=":fineTuneType/"
           name="Fine Tune Alerts"
           componentPromise={() =>
-            import(/* webpackChunkName: "AccountNotificationsFineTuning" */ './views/settings/account/accountNotificationFineTuning')}
+            import(/* webpackChunkName: "AccountNotificationsFineTuning" */ './views/settings/account/accountNotificationFineTuning')
+          }
           component={errorHandler(LazyLoad)}
         />
       </Route>
@@ -104,40 +107,46 @@ function routes() {
         path="emails/"
         name="Emails"
         componentPromise={() =>
-          import(/* webpackChunkName: "AccountEmails" */ './views/settings/account/accountEmails')}
+          import(/* webpackChunkName: "AccountEmails" */ './views/settings/account/accountEmails')
+        }
         component={errorHandler(LazyLoad)}
       />
 
       <Route
         path="authorizations/"
         componentPromise={() =>
-          import(/* webpackChunkName: "AccountAuthorizations" */ './views/settings/account/accountAuthorizations')}
+          import(/* webpackChunkName: "AccountAuthorizations" */ './views/settings/account/accountAuthorizations')
+        }
         component={errorHandler(LazyLoad)}
       />
 
       <Route name="Security" path="security/">
         <Route
           componentPromise={() =>
-            import(/* webpackChunkName: "AccountSecurityWrapper" */ './views/settings/account/accountSecurity/accountSecurityWrapper')}
+            import(/* webpackChunkName: "AccountSecurityWrapper" */ './views/settings/account/accountSecurity/accountSecurityWrapper')
+          }
           component={errorHandler(LazyLoad)}
         >
           <IndexRoute
             componentPromise={() =>
-              import(/* webpackChunkName: "AccountSecurity" */ './views/settings/account/accountSecurity/index')}
+              import(/* webpackChunkName: "AccountSecurity" */ './views/settings/account/accountSecurity/index')
+            }
             component={errorHandler(LazyLoad)}
           />
           <Route
             path="session-history/"
             name="Session History"
             componentPromise={() =>
-              import(/* webpackChunkName: "AccountSecuritySessionHistory" */ './views/settings/account/accountSecurity/accountSecuritySessionHistory')}
+              import(/* webpackChunkName: "AccountSecuritySessionHistory" */ './views/settings/account/accountSecurity/accountSecuritySessionHistory')
+            }
             component={errorHandler(LazyLoad)}
           />
           <Route
             path="mfa/:authId/"
             name="Details"
             componentPromise={() =>
-              import(/* webpackChunkName: "AccountSecurityDetails" */ './views/settings/account/accountSecurity/accountSecurityDetails')}
+              import(/* webpackChunkName: "AccountSecurityDetails" */ './views/settings/account/accountSecurity/accountSecurityDetails')
+            }
             component={errorHandler(LazyLoad)}
           />
         </Route>
@@ -146,7 +155,8 @@ function routes() {
           path="mfa/:authId/enroll/"
           name="Enroll"
           componentPromise={() =>
-            import(/* webpackChunkName: "AccountSecurityEnroll" */ './views/settings/account/accountSecurity/accountSecurityEnroll')}
+            import(/* webpackChunkName: "AccountSecurityEnroll" */ './views/settings/account/accountSecurity/accountSecurityEnroll')
+          }
           component={errorHandler(LazyLoad)}
         />
       </Route>
@@ -155,7 +165,8 @@ function routes() {
         path="subscriptions/"
         name="Subscriptions"
         componentPromise={() =>
-          import(/* webpackChunkName: "AccountSubscriptions" */ './views/settings/account/accountSubscriptions')}
+          import(/* webpackChunkName: "AccountSubscriptions" */ './views/settings/account/accountSubscriptions')
+        }
         component={errorHandler(LazyLoad)}
       />
 
@@ -163,7 +174,8 @@ function routes() {
         path="identities/"
         name="Identities"
         componentPromise={() =>
-          import(/* webpackChunkName: "AccountSocialIdentities" */ './views/settings/account/accountIdentities')}
+          import(/* webpackChunkName: "AccountSocialIdentities" */ './views/settings/account/accountIdentities')
+        }
         component={errorHandler(LazyLoad)}
       />
 
@@ -173,14 +185,16 @@ function routes() {
         <Route path="auth-tokens/" name="Auth Tokens">
           <IndexRoute
             componentPromise={() =>
-              import(/* webpackChunkName: "ApiTokensIndex" */ './views/settings/account/apiTokens')}
+              import(/* webpackChunkName: "ApiTokensIndex" */ './views/settings/account/apiTokens')
+            }
             component={errorHandler(LazyLoad)}
           />
           <Route
             path="new-token/"
             name="Create New Token"
             componentPromise={() =>
-              import(/* webpackChunkName: "ApiTokenCreate" */ './views/settings/account/apiNewToken')}
+              import(/* webpackChunkName: "ApiTokenCreate" */ './views/settings/account/apiNewToken')
+            }
             component={errorHandler(LazyLoad)}
           />
         </Route>
@@ -188,14 +202,16 @@ function routes() {
         <Route path="applications/" name="Applications">
           <IndexRoute
             componentPromise={() =>
-              import(/* webpackChunkName: "ApiApplications" */ './views/settings/account/apiApplications')}
+              import(/* webpackChunkName: "ApiApplications" */ './views/settings/account/apiApplications')
+            }
             component={errorHandler(LazyLoad)}
           />
           <Route
             path=":appId/"
             name="Details"
             componentPromise={() =>
-              import(/* webpackChunkName: "ApiApplicationDetails" */ './views/settings/account/apiApplicationDetails')}
+              import(/* webpackChunkName: "ApiApplicationDetails" */ './views/settings/account/apiApplicationDetails')
+            }
             component={errorHandler(LazyLoad)}
           />
         </Route>
@@ -205,7 +221,8 @@ function routes() {
         path="close-account/"
         name="Close Account"
         componentPromise={() =>
-          import(/* webpackChunkName: "AccountClose" */ './views/settings/account/accountClose')}
+          import(/* webpackChunkName: "AccountClose" */ './views/settings/account/accountClose')
+        }
         component={errorHandler(LazyLoad)}
       />
     </React.Fragment>
@@ -216,40 +233,46 @@ function routes() {
       <IndexRoute
         name="General"
         componentPromise={() =>
-          import(/* webpackChunkName: "ProjectGeneralSettings" */ 'app/views/settings/projectGeneralSettings')}
+          import(/* webpackChunkName: "ProjectGeneralSettings" */ 'app/views/settings/projectGeneralSettings')
+        }
         component={errorHandler(LazyLoad)}
       />
       <Route
         path="teams/"
         name="Teams"
         componentPromise={() =>
-          import(/* webpackChunkName: "ProjectTeams" */ './views/settings/project/projectTeams')}
+          import(/* webpackChunkName: "ProjectTeams" */ './views/settings/project/projectTeams')
+        }
         component={errorHandler(LazyLoad)}
       />
       <Route name="Alerts" path="alerts/">
         <IndexRoute
           component={errorHandler(LazyLoad)}
           componentPromise={() =>
-            import(/* webpackChunkName: "ProjectAlertSettings" */ './views/settings/projectAlerts/projectAlertSettings')}
+            import(/* webpackChunkName: "ProjectAlertSettings" */ './views/settings/projectAlerts/projectAlertSettings')
+          }
         />
         <Route path="rules/" name="Rules" component={null}>
           <IndexRoute
             component={errorHandler(LazyLoad)}
             componentPromise={() =>
-              import(/* webpackChunkName: "ProjectAlertRules" */ './views/settings/projectAlerts/projectAlertRules')}
+              import(/* webpackChunkName: "ProjectAlertRules" */ './views/settings/projectAlerts/projectAlertRules')
+            }
           />
           <Route
             path="new/"
             name="New"
             component={errorHandler(LazyLoad)}
             componentPromise={() =>
-              import(/* webpackChunkName: "ProjectAlertRuleDetails" */ './views/settings/projectAlerts/projectAlertRuleDetails')}
+              import(/* webpackChunkName: "ProjectAlertRuleDetails" */ './views/settings/projectAlerts/projectAlertRuleDetails')
+            }
           />
           <Route
             path=":ruleId/"
             name="Edit"
             componentPromise={() =>
-              import(/* webpackChunkName: "ProjectAlertRuleDetails" */ './views/settings/projectAlerts/projectAlertRuleDetails')}
+              import(/* webpackChunkName: "ProjectAlertRuleDetails" */ './views/settings/projectAlerts/projectAlertRuleDetails')
+            }
             component={errorHandler(LazyLoad)}
           />
         </Route>
@@ -268,14 +291,16 @@ function routes() {
         path="release-tracking/"
         name="Release Tracking"
         componentPromise={() =>
-          import(/* webpackChunkName: "ProjectReleaseTracking" */ './views/settings/project/projectReleaseTracking')}
+          import(/* webpackChunkName: "ProjectReleaseTracking" */ './views/settings/project/projectReleaseTracking')
+        }
         component={errorHandler(LazyLoad)}
       />
       <Route
         path="ownership/"
         name="Issue Owners"
         componentPromise={() =>
-          import(/* webpackChunkName: "projectOwnership" */ './views/settings/project/projectOwnership')}
+          import(/* webpackChunkName: "projectOwnership" */ './views/settings/project/projectOwnership')
+        }
         component={errorHandler(LazyLoad)}
       />
       <Route
@@ -287,7 +312,8 @@ function routes() {
         path="saved-searches/"
         name="Saved Searches"
         componentPromise={() =>
-          import(/* webpackChunkName: "ProjectSavedSearches" */ './views/projectSavedSearches')}
+          import(/* webpackChunkName: "ProjectSavedSearches" */ './views/projectSavedSearches')
+        }
         component={errorHandler(LazyLoad)}
       />
       <Route
@@ -299,14 +325,16 @@ function routes() {
         path="processing-issues/"
         name="Processing Issues"
         componentPromise={() =>
-          import(/* webpackChunkName: "ProjectProcessingIssues" */ './views/settings/project/projectProcessingIssues')}
+          import(/* webpackChunkName: "ProjectProcessingIssues" */ './views/settings/project/projectProcessingIssues')
+        }
         component={errorHandler(LazyLoad)}
       />
       <Route
         path="filters/"
         name="Inbound Filters"
         componentPromise={() =>
-          import(/* webpackChunkName: "ProjectFilters" */ './views/settings/project/projectFilters')}
+          import(/* webpackChunkName: "ProjectFilters" */ './views/settings/project/projectFilters')
+        }
         component={errorHandler(LazyLoad)}
       >
         <IndexRedirect to="data-filters/" />
@@ -316,27 +344,31 @@ function routes() {
         path="hooks/"
         name="Service Hooks"
         componentPromise={() =>
-          import(/* webpackChunkName: "ProjectServiceHooks" */ './views/settings/project/projectServiceHooks')}
+          import(/* webpackChunkName: "ProjectServiceHooks" */ './views/settings/project/projectServiceHooks')
+        }
         component={errorHandler(LazyLoad)}
       />
       <Route
         path="hooks/new/"
         name="Create Service Hook"
         componentPromise={() =>
-          import(/* webpackChunkName: "ProjectCreateServiceHook" */ './views/settings/project/projectCreateServiceHook')}
+          import(/* webpackChunkName: "ProjectCreateServiceHook" */ './views/settings/project/projectCreateServiceHook')
+        }
         component={errorHandler(LazyLoad)}
       />
       <Route
         path="hooks/:hookId/"
         name="Service Hook Details"
         componentPromise={() =>
-          import(/* webpackChunkName: "ProjectServiceHookDetails" */ './views/settings/project/projectServiceHookDetails')}
+          import(/* webpackChunkName: "ProjectServiceHookDetails" */ './views/settings/project/projectServiceHookDetails')
+        }
         component={errorHandler(LazyLoad)}
       />
       <Route path="keys/" name="Client Keys">
         <IndexRoute
           componentPromise={() =>
-            import(/* webpackChunkName: "ProjectKeys" */ './views/settings/project/projectKeys')}
+            import(/* webpackChunkName: "ProjectKeys" */ './views/settings/project/projectKeys')
+          }
           component={errorHandler(LazyLoad)}
         />
 
@@ -344,7 +376,8 @@ function routes() {
           path=":keyId/"
           name="Details"
           componentPromise={() =>
-            import(/* webpackChunkName: "ProjectKeyDetails" */ './views/settings/project/projectKeys/projectKeyDetails')}
+            import(/* webpackChunkName: "ProjectKeyDetails" */ './views/settings/project/projectKeys/projectKeyDetails')
+          }
           component={errorHandler(LazyLoad)}
         />
       </Route>
@@ -352,35 +385,40 @@ function routes() {
         path="user-feedback/"
         name="User Feedback"
         componentPromise={() =>
-          import(/* webpackChunkName: "ProjectUserFeedbackSettings" */ './views/settings/project/projectUserFeedback')}
+          import(/* webpackChunkName: "ProjectUserFeedbackSettings" */ './views/settings/project/projectUserFeedback')
+        }
         component={errorHandler(LazyLoad)}
       />
       <Redirect from="csp/" to="security-headers/" />
       <Route path="security-headers/" name="Security Headers">
         <IndexRoute
           componentPromise={() =>
-            import(/* webpackChunkName: "ProjectSecurityHeaders" */ './views/settings/projectSecurityHeaders')}
+            import(/* webpackChunkName: "ProjectSecurityHeaders" */ './views/settings/projectSecurityHeaders')
+          }
           component={errorHandler(LazyLoad)}
         />
         <Route
           path="csp/"
           name="Content Security Policy"
           componentPromise={() =>
-            import(/* webpackChunkName: "ProjectCspReports" */ './views/settings/projectSecurityHeaders/csp')}
+            import(/* webpackChunkName: "ProjectCspReports" */ './views/settings/projectSecurityHeaders/csp')
+          }
           component={errorHandler(LazyLoad)}
         />
         <Route
           path="expect-ct/"
           name="Certificate Transparency"
           componentPromise={() =>
-            import(/* webpackChunkName: "ProjectExpectCtReports" */ './views/settings/projectSecurityHeaders/expectCt')}
+            import(/* webpackChunkName: "ProjectExpectCtReports" */ './views/settings/projectSecurityHeaders/expectCt')
+          }
           component={errorHandler(LazyLoad)}
         />
         <Route
           path="hpkp/"
           name="HPKP"
           componentPromise={() =>
-            import(/* webpackChunkName: "ProjectHpkpReports" */ './views/settings/projectSecurityHeaders/hpkp')}
+            import(/* webpackChunkName: "ProjectHpkpReports" */ './views/settings/projectSecurityHeaders/hpkp')
+          }
           component={errorHandler(LazyLoad)}
         />
       </Route>
@@ -414,7 +452,8 @@ function routes() {
       <IndexRoute
         name="General"
         componentPromise={() =>
-          import(/* webpackChunkName: "OrganizationGeneralSettings" */ './views/settings/organizationGeneralSettings')}
+          import(/* webpackChunkName: "OrganizationGeneralSettings" */ './views/settings/organizationGeneralSettings')
+        }
         component={errorHandler(LazyLoad)}
       />
 
@@ -422,14 +461,16 @@ function routes() {
         path="projects/"
         name="Projects"
         componentPromise={() =>
-          import(/* webpackChunkName: "OrganizationProjects" */ './views/settings/organizationProjects')}
+          import(/* webpackChunkName: "OrganizationProjects" */ './views/settings/organizationProjects')
+        }
         component={errorHandler(LazyLoad)}
       />
 
       <Route path="api-keys/" name="API Key">
         <IndexRoute
           componentPromise={() =>
-            import(/* webpackChunkName: "OrganizationApiKeys" */ './views/settings/organizationApiKeys')}
+            import(/* webpackChunkName: "OrganizationApiKeys" */ './views/settings/organizationApiKeys')
+          }
           component={errorHandler(LazyLoad)}
         />
 
@@ -437,7 +478,8 @@ function routes() {
           path=":apiKey/"
           name="Details"
           componentPromise={() =>
-            import(/* webpackChunkName: "OrganizationApiKeyDetails" */ './views/settings/organizationApiKeys/organizationApiKeyDetails')}
+            import(/* webpackChunkName: "OrganizationApiKeyDetails" */ './views/settings/organizationApiKeys/organizationApiKeyDetails')
+          }
           component={errorHandler(LazyLoad)}
         />
       </Route>
@@ -446,7 +488,8 @@ function routes() {
         path="audit-log/"
         name="Audit Log"
         componentPromise={() =>
-          import(/* webpackChunkName: "OrganizationAuditLog" */ './views/settings/organizationAuditLog')}
+          import(/* webpackChunkName: "OrganizationAuditLog" */ './views/settings/organizationAuditLog')
+        }
         component={errorHandler(LazyLoad)}
       />
 
@@ -454,7 +497,8 @@ function routes() {
         path="auth/"
         name="Auth Providers"
         componentPromise={() =>
-          import(/* webpackChunkName: "OrganizationAuth" */ './views/settings/organizationAuth')}
+          import(/* webpackChunkName: "OrganizationAuth" */ './views/settings/organizationAuth')
+        }
         component={errorHandler(LazyLoad)}
       />
 
@@ -465,7 +509,8 @@ function routes() {
           path="new/"
           name="Invite"
           componentPromise={() =>
-            import(/* webpackChunkName: "InviteMember" */ './views/settings/organizationMembers/inviteMember')}
+            import(/* webpackChunkName: "InviteMember" */ './views/settings/organizationMembers/inviteMember')
+          }
           component={errorHandler(LazyLoad)}
         />
 
@@ -473,7 +518,8 @@ function routes() {
           path=":memberId/"
           name="Details"
           componentPromise={() =>
-            import(/* webpackChunkName: "OrganizationMemberDetail" */ './views/settings/organizationMembers/organizationMemberDetail')}
+            import(/* webpackChunkName: "OrganizationMemberDetail" */ './views/settings/organizationMembers/organizationMemberDetail')
+          }
           component={errorHandler(LazyLoad)}
         />
       </Route>
@@ -482,7 +528,8 @@ function routes() {
         path="rate-limits/"
         name="Rate Limits"
         componentPromise={() =>
-          import(/* webpackChunkName: "OrganizationRateLimits" */ './views/settings/organizationRateLimits')}
+          import(/* webpackChunkName: "OrganizationRateLimits" */ './views/settings/organizationRateLimits')
+        }
         component={errorHandler(LazyLoad)}
       />
 
@@ -490,21 +537,24 @@ function routes() {
         path="repos/"
         name="Repositories"
         componentPromise={() =>
-          import(/* webpackChunkName: "OrganizationRepositories" */ './views/settings/organizationRepositories')}
+          import(/* webpackChunkName: "OrganizationRepositories" */ './views/settings/organizationRepositories')
+        }
         component={errorHandler(LazyLoad)}
       />
 
       <Route
         path="settings/"
         componentPromise={() =>
-          import(/* webpackChunkName: "OrganizationGeneralSettings" */ './views/settings/organizationGeneralSettings')}
+          import(/* webpackChunkName: "OrganizationGeneralSettings" */ './views/settings/organizationGeneralSettings')
+        }
         component={errorHandler(LazyLoad)}
       />
 
       <Route name="Teams" path="teams/">
         <IndexRoute
           componentPromise={() =>
-            import(/* webpackChunkName: "OrganizationTeams" */ './views/settings/organizationTeams')}
+            import(/* webpackChunkName: "OrganizationTeams" */ './views/settings/organizationTeams')
+          }
           component={errorHandler(LazyLoad)}
         />
 
@@ -512,7 +562,8 @@ function routes() {
           name="Team"
           path=":teamId/"
           componentPromise={() =>
-            import(/* webpackChunkName: "TeamDetails" */ './views/settings/organizationTeams/teamDetails')}
+            import(/* webpackChunkName: "TeamDetails" */ './views/settings/organizationTeams/teamDetails')
+          }
           component={errorHandler(LazyLoad)}
         >
           <IndexRedirect to="members/" />
@@ -520,21 +571,24 @@ function routes() {
             path="members/"
             name="Members"
             componentPromise={() =>
-              import(/* webpackChunkName: "TeamMembers" */ './views/settings/organizationTeams/teamMembers')}
+              import(/* webpackChunkName: "TeamMembers" */ './views/settings/organizationTeams/teamMembers')
+            }
             component={errorHandler(LazyLoad)}
           />
           <Route
             path="projects/"
             name="Projects"
             componentPromise={() =>
-              import(/* webpackChunkName: "TeamProjects" */ './views/settings/organizationTeams/teamProjects')}
+              import(/* webpackChunkName: "TeamProjects" */ './views/settings/organizationTeams/teamProjects')
+            }
             component={errorHandler(LazyLoad)}
           />
           <Route
             path="settings/"
             name="settings"
             componentPromise={() =>
-              import(/* webpackChunkName: "TeamSettings" */ './views/settings/organizationTeams/teamSettings')}
+              import(/* webpackChunkName: "TeamSettings" */ './views/settings/organizationTeams/teamSettings')
+            }
             component={errorHandler(LazyLoad)}
           />
         </Route>
@@ -543,35 +597,40 @@ function routes() {
       <Route name="Integrations" path="integrations/">
         <IndexRoute
           componentPromise={() =>
-            import(/* webpackChunkName: "OrganizationIntegrations" */ './views/organizationIntegrations')}
+            import(/* webpackChunkName: "OrganizationIntegrations" */ './views/organizationIntegrations')
+          }
           component={errorHandler(LazyLoad)}
         />
         <Route
           name="Configure Integration"
           path=":providerKey/:integrationId/"
           componentPromise={() =>
-            import(/* webpackChunkName: "ConfigureIntegration" */ './views/settings/organizationIntegrations/configureIntegration')}
+            import(/* webpackChunkName: "ConfigureIntegration" */ './views/settings/organizationIntegrations/configureIntegration')
+          }
           component={errorHandler(LazyLoad)}
         />
       </Route>
       <Route name="Developer Settings" path="developer-settings/">
         <IndexRoute
           componentPromise={() =>
-            import(/* webpackChunkName: "OrganizationDeveloperSettings" */ './views/settings/organizationDeveloperSettings')}
+            import(/* webpackChunkName: "OrganizationDeveloperSettings" */ './views/settings/organizationDeveloperSettings')
+          }
           component={errorHandler(LazyLoad)}
         />
         <Route
           name="New Application"
           path="new/"
           componentPromise={() =>
-            import(/* webpackChunkName: "sentryApplicationDetails" */ './views/settings/organizationDeveloperSettings/sentryApplicationDetails')}
+            import(/* webpackChunkName: "sentryApplicationDetails" */ './views/settings/organizationDeveloperSettings/sentryApplicationDetails')
+          }
           component={errorHandler(LazyLoad)}
         />
         <Route
           name="Edit Application"
           path=":appSlug/"
           componentPromise={() =>
-            import(/* webpackChunkName: "sentryApplicationDetails" */ './views/settings/organizationDeveloperSettings/sentryApplicationDetails')}
+            import(/* webpackChunkName: "sentryApplicationDetails" */ './views/settings/organizationDeveloperSettings/sentryApplicationDetails')
+          }
           component={errorHandler(LazyLoad)}
         />
       </Route>
@@ -583,13 +642,15 @@ function routes() {
       <Route
         path="/accept-transfer/"
         componentPromise={() =>
-          import(/* webpackChunkName: "AcceptProjectTransfer" */ 'app/views/acceptProjectTransfer')}
+          import(/* webpackChunkName: "AcceptProjectTransfer" */ 'app/views/acceptProjectTransfer')
+        }
         component={errorHandler(LazyLoad)}
       />
       <Route
         path="/extensions/external-install/:providerId/:installationId"
         componentPromise={() =>
-          import(/* webpackChunkName: "AcceptProjectTransfer" */ 'app/views/integrationInstallation')}
+          import(/* webpackChunkName: "AcceptProjectTransfer" */ 'app/views/integrationInstallation')
+        }
         component={errorHandler(LazyLoad)}
       />
 
@@ -598,7 +659,8 @@ function routes() {
         getComponent={(loc, cb) =>
           import(/* webpackChunkName: "VSTSOrganizationLink" */ './views/vstsOrganizationLink').then(
             lazyLoad(cb)
-          )}
+          )
+        }
       />
 
       <Redirect from="/account/" to="/settings/account/details/" />
@@ -606,60 +668,70 @@ function routes() {
       <Route
         path="/manage/"
         componentPromise={() =>
-          import(/* webpackChunkName: "AdminLayout" */ 'app/views/admin/adminLayout')}
+          import(/* webpackChunkName: "AdminLayout" */ 'app/views/admin/adminLayout')
+        }
         component={errorHandler(LazyLoad)}
       >
         <IndexRoute
           componentPromise={() =>
-            import(/* webpackChunkName: "AdminOverview" */ 'app/views/admin/adminOverview')}
+            import(/* webpackChunkName: "AdminOverview" */ 'app/views/admin/adminOverview')
+          }
           component={errorHandler(LazyLoad)}
         />
         <Route
           path="buffer/"
           componentPromise={() =>
-            import(/* webpackChunkName: "AdminBuffer" */ 'app/views/admin/adminBuffer')}
+            import(/* webpackChunkName: "AdminBuffer" */ 'app/views/admin/adminBuffer')
+          }
           component={errorHandler(LazyLoad)}
         />
         <Route
           path="relays/"
           componentPromise={() =>
-            import(/* webpackChunkName: "AdminRelays" */ 'app/views/admin/adminRelays')}
+            import(/* webpackChunkName: "AdminRelays" */ 'app/views/admin/adminRelays')
+          }
           component={errorHandler(LazyLoad)}
         />
         <Route
           path="organizations/"
           componentPromise={() =>
-            import(/* webpackChunkName: "AdminOrganizations" */ 'app/views/admin/adminOrganizations')}
+            import(/* webpackChunkName: "AdminOrganizations" */ 'app/views/admin/adminOrganizations')
+          }
           component={errorHandler(LazyLoad)}
         />
         <Route
           path="projects/"
           componentPromise={() =>
-            import(/* webpackChunkName: "AdminProjects" */ 'app/views/admin/adminProjects')}
+            import(/* webpackChunkName: "AdminProjects" */ 'app/views/admin/adminProjects')
+          }
           component={errorHandler(LazyLoad)}
         />
         <Route
           path="queue/"
           componentPromise={() =>
-            import(/* webpackChunkName: "AdminQueue" */ 'app/views/admin/adminQueue')}
+            import(/* webpackChunkName: "AdminQueue" */ 'app/views/admin/adminQueue')
+          }
           component={errorHandler(LazyLoad)}
         />
         <Route
           path="quotas/"
           componentPromise={() =>
-            import(/* webpackChunkName: "AdminQuotas" */ 'app/views/admin/adminQuotas')}
+            import(/* webpackChunkName: "AdminQuotas" */ 'app/views/admin/adminQuotas')
+          }
           component={errorHandler(LazyLoad)}
         />
         <Route
           path="settings/"
           componentPromise={() =>
-            import(/* webpackChunkName: "AdminSettings" */ 'app/views/admin/adminSettings')}
+            import(/* webpackChunkName: "AdminSettings" */ 'app/views/admin/adminSettings')
+          }
           component={errorHandler(LazyLoad)}
         />
         <Route
           path="users/"
           componentPromise={() =>
-            import(/* webpackChunkName: "AdminUsers" */ 'app/views/admin/adminUsers')}
+            import(/* webpackChunkName: "AdminUsers" */ 'app/views/admin/adminUsers')
+          }
           component={errorHandler(LazyLoad)}
         />
         {hook('routes:admin')}
@@ -668,7 +740,8 @@ function routes() {
       <Route
         path="/share/issue/:shareId/"
         componentPromise={() =>
-          import(/* webpackChunkName: "SharedGroupDetails" */ './views/sharedGroupDetails')}
+          import(/* webpackChunkName: "SharedGroupDetails" */ './views/sharedGroupDetails')
+        }
         component={errorHandler(LazyLoad)}
       />
       <Route path="/organizations/new/" component={errorHandler(OrganizationCreate)} />
@@ -688,7 +761,8 @@ function routes() {
             getComponent={(loc, cb) =>
               import(/* webpackChunkName: "SettingsIndex" */ './views/settings/settingsIndex').then(
                 lazyLoad(cb)
-              )}
+              )
+            }
           />
 
           <Route
@@ -697,7 +771,8 @@ function routes() {
             getComponent={(loc, cb) =>
               import(/* webpackChunkName: "AccountSettingsLayout" */ './views/settings/account/accountSettingsLayout').then(
                 lazyLoad(cb)
-              )}
+              )
+            }
           >
             {accountSettingsRoutes}
           </Route>
@@ -707,7 +782,8 @@ function routes() {
               getComponent={(loc, cb) =>
                 import(/* webpackChunkName: "OrganizationSettingsLayout" */ './views/settings/organization/organizationSettingsLayout').then(
                   lazyLoad(cb)
-                )}
+                )
+              }
             >
               {hook('routes:organization')}
               {orgSettingsRoutes}
@@ -719,7 +795,8 @@ function routes() {
               getComponent={(loc, cb) =>
                 import(/* webpackChunkName: "ProjectSettingsLayout" */ './views/settings/project/projectSettingsLayout').then(
                   lazyLoad(cb)
-                )}
+                )
+              }
             >
               <Route component={errorHandler(SettingsProjectProvider)}>
                 {projectSettingsRoutes}
@@ -758,19 +835,22 @@ function routes() {
           <Route
             path="/organizations/:orgId/dashboards/"
             componentPromise={() =>
-              import(/* webpackChunkName: "OrganizationDashboardContainer" */ './views/organizationDashboard')}
+              import(/* webpackChunkName: "OrganizationDashboardContainer" */ './views/organizationDashboard')
+            }
             component={errorHandler(LazyLoad)}
           >
             <IndexRoute
               componentPromise={() =>
-                import(/* webpackChunkName: "OverviewDashboard" */ './views/organizationDashboard/overviewDashboard')}
+                import(/* webpackChunkName: "OverviewDashboard" */ './views/organizationDashboard/overviewDashboard')
+              }
               component={errorHandler(LazyLoad)}
             />
           </Route>
           <Route
             path="/organizations/:orgId/discover/"
             componentPromise={() =>
-              import(/* webpackChunkName: "OrganizationDiscover" */ './views/organizationDiscover/index')}
+              import(/* webpackChunkName: "OrganizationDiscover" */ './views/organizationDiscover/index')
+            }
             component={errorHandler(LazyLoad)}
           >
             <Redirect path="saved/" to="/organizations/:orgId/discover/" />
@@ -779,42 +859,49 @@ function routes() {
           <Route
             path="/organizations/:orgId/events/"
             componentPromise={() =>
-              import(/* webpackChunkName: "OrganizationEventsContainer" */ './views/organizationEvents')}
+              import(/* webpackChunkName: "OrganizationEventsContainer" */ './views/organizationEvents')
+            }
             component={errorHandler(LazyLoad)}
           >
             <IndexRoute
               componentPromise={() =>
-                import(/* webpackChunkName: "OrganizationEvents" */ './views/organizationEvents/events')}
+                import(/* webpackChunkName: "OrganizationEvents" */ './views/organizationEvents/events')
+              }
               component={errorHandler(LazyLoad)}
             />
           </Route>
           <Route
             path="/organizations/:orgId/monitors/"
             componentPromise={() =>
-              import(/* webpackChunkName: "OrganizationMonitorsContainer" */ './views/organizationMonitors')}
+              import(/* webpackChunkName: "OrganizationMonitorsContainer" */ './views/organizationMonitors')
+            }
             component={errorHandler(LazyLoad)}
           >
             <IndexRoute
               componentPromise={() =>
-                import(/* webpackChunkName: "OrganizationMonitors" */ './views/organizationMonitors/monitors')}
+                import(/* webpackChunkName: "OrganizationMonitors" */ './views/organizationMonitors/monitors')
+              }
               component={errorHandler(LazyLoad)}
             />
             <Route
               path="/organizations/:orgId/monitors/create/"
               componentPromise={() =>
-                import(/* webpackChunkName: "OrganizationMonitorCreate" */ './views/organizationMonitors/create')}
+                import(/* webpackChunkName: "OrganizationMonitorCreate" */ './views/organizationMonitors/create')
+              }
               component={errorHandler(LazyLoad)}
             />
             <Route
               path="/organizations/:orgId/monitors/:monitorId/"
               componentPromise={() =>
-                import(/* webpackChunkName: "OrganizationMonitorDetails" */ './views/organizationMonitors/details')}
+                import(/* webpackChunkName: "OrganizationMonitorDetails" */ './views/organizationMonitors/details')
+              }
               component={errorHandler(LazyLoad)}
             />
             <Route
               path="/organizations/:orgId/monitors/:monitorId/edit/"
               componentPromise={() =>
-                import(/* webpackChunkName: "OrganizationMonitorEdit" */ './views/organizationMonitors/edit')}
+                import(/* webpackChunkName: "OrganizationMonitorEdit" */ './views/organizationMonitors/edit')
+              }
               component={errorHandler(LazyLoad)}
             />
           </Route>
@@ -859,60 +946,70 @@ function routes() {
           <Route
             path="/organizations/:orgId/issues/:groupId/"
             componentPromise={() =>
-              import(/* webpackChunkName: "OrganizationGroupDetails" */ './views/groupDetails/organization/index')}
+              import(/* webpackChunkName: "OrganizationGroupDetails" */ './views/groupDetails/organization/index')
+            }
             component={errorHandler(LazyLoad)}
           >
             <IndexRoute
               componentPromise={() =>
-                import(/* webpackChunkName: "OrganizationGroupEventDetails" */ './views/groupDetails/organization/groupEventDetails')}
+                import(/* webpackChunkName: "OrganizationGroupEventDetails" */ './views/groupDetails/organization/groupEventDetails')
+              }
               component={errorHandler(LazyLoad)}
             />
             <Route
               path="/organizations/:orgId/issues/:groupId/activity/"
               componentPromise={() =>
-                import(/* webpackChunkName: "GroupActivity" */ './views/groupDetails/shared/groupActivity')}
+                import(/* webpackChunkName: "GroupActivity" */ './views/groupDetails/shared/groupActivity')
+              }
               component={errorHandler(LazyLoad)}
             />
             <Route
               path="/organizations/:orgId/issues/:groupId/events/:eventId/"
               componentPromise={() =>
-                import(/* webpackChunkName: "OrganizationGroupEventDetails" */ './views/groupDetails/organization/groupEventDetails')}
+                import(/* webpackChunkName: "OrganizationGroupEventDetails" */ './views/groupDetails/organization/groupEventDetails')
+              }
               component={errorHandler(LazyLoad)}
             />
             <Route
               path="/organizations/:orgId/issues/:groupId/events/"
               componentPromise={() =>
-                import(/* webpackChunkName: "OrganizationGroupEvents" */ './views/groupDetails/organization/groupEvents')}
+                import(/* webpackChunkName: "OrganizationGroupEvents" */ './views/groupDetails/organization/groupEvents')
+              }
               component={errorHandler(LazyLoad)}
             />
             <Route
               path="/organizations/:orgId/issues/:groupId/tags/"
               componentPromise={() =>
-                import(/* webpackChunkName: "OrganizationGroupTags" */ './views/groupDetails/organization/groupTags')}
+                import(/* webpackChunkName: "OrganizationGroupTags" */ './views/groupDetails/organization/groupTags')
+              }
               component={errorHandler(LazyLoad)}
             />
             <Route
               path="/organizations/:orgId/issues/:groupId/tags/:tagKey/"
               componentPromise={() =>
-                import(/* webpackChunkName: "OrganizationGroupTagsValues" */ './views/groupDetails/organization/groupTagValues')}
+                import(/* webpackChunkName: "OrganizationGroupTagsValues" */ './views/groupDetails/organization/groupTagValues')
+              }
               component={errorHandler(LazyLoad)}
             />
             <Route
               path="/organizations/:orgId/issues/:groupId/feedback/"
               componentPromise={() =>
-                import(/* webpackChunkName: "OrganizationGroupUserFeedback" */ './views/groupDetails/organization/groupUserFeedback')}
+                import(/* webpackChunkName: "OrganizationGroupUserFeedback" */ './views/groupDetails/organization/groupUserFeedback')
+              }
               component={errorHandler(LazyLoad)}
             />
             <Route
               path="/organizations/:orgId/issues/:groupId/similar/"
               componentPromise={() =>
-                import(/* webpackChunkName: "GroupSimilarView" */ './views/groupDetails/shared/groupSimilar')}
+                import(/* webpackChunkName: "GroupSimilarView" */ './views/groupDetails/shared/groupSimilar')
+              }
               component={errorHandler(LazyLoad)}
             />
             <Route
               path="/organizations/:orgId/issues/:groupId/merged/"
               componentPromise={() =>
-                import(/* webpackChunkName: "GroupSimilarView" */ './views/groupDetails/shared/groupMerged')}
+                import(/* webpackChunkName: "GroupSimilarView" */ './views/groupDetails/shared/groupMerged')
+              }
               component={errorHandler(LazyLoad)}
             />
           </Route>
@@ -920,55 +1017,64 @@ function routes() {
           <Route
             path="/organizations/:orgId/user-feedback/"
             componentPromise={() =>
-              import(/* webpackChunkName: "OrganizationUserFeedback" */ './views/userFeedback/organizationUserFeedback')}
+              import(/* webpackChunkName: "OrganizationUserFeedback" */ './views/userFeedback/organizationUserFeedback')
+            }
             component={errorHandler(LazyLoad)}
           />
           <Route
             path="/organizations/:orgId/releases/"
             componentPromise={() =>
-              import(/* webpackChunkName: "OrganizationReleases" */ './views/releases/list/organizationReleases')}
+              import(/* webpackChunkName: "OrganizationReleases" */ './views/releases/list/organizationReleases')
+            }
             component={errorHandler(LazyLoad)}
           />
           <Route
             path="/organizations/:orgId/releases/:version/"
             componentPromise={() =>
-              import(/*webpackChunkName: "OrganizationReleaseDetail"*/ './views/releases/detail/organization')}
+              import(/*webpackChunkName: "OrganizationReleaseDetail"*/ './views/releases/detail/organization')
+            }
             component={errorHandler(LazyLoad)}
           >
             <IndexRoute
               componentPromise={() =>
-                import(/*webpackChunkName: "OrganizationReleaseOverview"*/ './views/releases/detail/organization/releaseOverview')}
+                import(/*webpackChunkName: "OrganizationReleaseOverview"*/ './views/releases/detail/organization/releaseOverview')
+              }
               component={errorHandler(LazyLoad)}
             />
             <Route
               path="new-events/"
               componentPromise={() =>
-                import(/*webpackChunkName: "OrganizationReleaseNewEvents"*/ './views/releases/detail/organization/releaseNewEvents')}
+                import(/*webpackChunkName: "OrganizationReleaseNewEvents"*/ './views/releases/detail/organization/releaseNewEvents')
+              }
               component={errorHandler(LazyLoad)}
             />
             <Route
               path="all-events/"
               componentPromise={() =>
-                import(/*webpackChunkName: "OrganizationReleaseAllEvents"*/ './views/releases/detail/organization/releaseAllEvents')}
+                import(/*webpackChunkName: "OrganizationReleaseAllEvents"*/ './views/releases/detail/organization/releaseAllEvents')
+              }
               component={errorHandler(LazyLoad)}
             />
             <Route
               path="artifacts/"
               componentPromise={() =>
-                import(/*webpackChunkName: "ReleaseArtifacts"*/ './views/releases/detail/shared/releaseArtifacts')}
+                import(/*webpackChunkName: "ReleaseArtifacts"*/ './views/releases/detail/shared/releaseArtifacts')
+              }
               component={errorHandler(LazyLoad)}
             />
             <Route
               path="commits/"
               componentPromise={() =>
-                import(/*webpackChunkName: "ReleaseCommits"*/ './views/releases/detail/shared/releaseCommits')}
+                import(/*webpackChunkName: "ReleaseCommits"*/ './views/releases/detail/shared/releaseCommits')
+              }
               component={errorHandler(LazyLoad)}
             />
           </Route>
           <Route
             path="/organizations/:orgId/teams/new/"
             componentPromise={() =>
-              import(/* webpackChunkName: "TeamCreate" */ './views/teamCreate')}
+              import(/* webpackChunkName: "TeamCreate" */ './views/teamCreate')
+            }
             component={errorHandler(LazyLoad)}
           />
           <Route path="/organizations/:orgId/" component={OrganizationHomeContainer}>
@@ -1022,76 +1128,88 @@ function routes() {
         <Route path=":projectId/" component={errorHandler(ProjectDetails)}>
           <IndexRoute
             componentPromise={() =>
-              import(/* webpackChunkName: "Stream" */ './views/stream')}
+              import(/* webpackChunkName: "Stream" */ './views/stream')
+            }
             component={errorHandler(LazyLoad)}
           />
           <Route
             path="issues/"
             componentPromise={() =>
-              import(/* webpackChunkName: "Stream" */ './views/stream')}
+              import(/* webpackChunkName: "Stream" */ './views/stream')
+            }
             component={errorHandler(LazyLoad)}
           />
 
           <Route
             path="searches/:searchId/"
             componentPromise={() =>
-              import(/* webpackChunkName: "Stream" */ './views/stream')}
+              import(/* webpackChunkName: "Stream" */ './views/stream')
+            }
             component={errorHandler(LazyLoad)}
           />
           <Route
             path="dashboard/"
             componentPromise={() =>
-              import(/*webpackChunkName: "ProjectDashboard"*/ './views/projectDashboard')}
+              import(/*webpackChunkName: "ProjectDashboard"*/ './views/projectDashboard')
+            }
             component={errorHandler(LazyLoad)}
           />
           <Route
             path="releases/"
             componentPromise={() =>
-              import(/* webpackChunkName: "ProjectReleases" */ './views/releases/list/projectReleases')}
+              import(/* webpackChunkName: "ProjectReleases" */ './views/releases/list/projectReleases')
+            }
             component={errorHandler(LazyLoad)}
           />
           <Route
             path="releases/:version/"
             componentPromise={() =>
-              import(/*webpackChunkName:"ProjectReleaseDetails"*/ './views/releases/detail/project')}
+              import(/*webpackChunkName:"ProjectReleaseDetails"*/ './views/releases/detail/project')
+            }
             component={errorHandler(LazyLoad)}
           >
             <IndexRoute
               componentPromise={() =>
-                import(/*webpackChunkName:"ProjectReleaseOverview"*/ './views/releases/detail/project/releaseOverview')}
+                import(/*webpackChunkName:"ProjectReleaseOverview"*/ './views/releases/detail/project/releaseOverview')
+              }
               component={errorHandler(LazyLoad)}
             />
 
             <Route
               path="new-events/"
               componentPromise={() =>
-                import(/*webpackChunkName:"ProjectReleaseNewEvents"*/ './views/releases/detail/project/releaseNewEvents')}
+                import(/*webpackChunkName:"ProjectReleaseNewEvents"*/ './views/releases/detail/project/releaseNewEvents')
+              }
               component={errorHandler(LazyLoad)}
             />
 
             <Route
               path="all-events/"
               componentPromise={() =>
-                import(/* webpackChunkName: "ReleaseAllEvents" */ './views/releases/detail/project/releaseAllEvents')}
+                import(/* webpackChunkName: "ReleaseAllEvents" */ './views/releases/detail/project/releaseAllEvents')
+              }
               component={errorHandler(LazyLoad)}
             />
             <Route
               path="artifacts/"
               componentPromise={() =>
-                import(/* webpackChunkName: "ReleaseArtifacts" */ './views/releases/detail/shared/releaseArtifacts')}
+                import(/* webpackChunkName: "ReleaseArtifacts" */ './views/releases/detail/shared/releaseArtifacts')
+              }
               component={errorHandler(LazyLoad)}
             />
             <Route
               path="commits/"
               componentPromise={() =>
-                import(/* webpackChunkName: "ReleaseCommits" */ './views/releases/detail/shared/releaseCommits')}
+                import(/* webpackChunkName: "ReleaseCommits" */ './views/releases/detail/shared/releaseCommits')
+              }
               component={errorHandler(LazyLoad)}
             />
           </Route>
           <Route
             path="user-feedback/"
             componentPromise={() =>
-              import(/* webpackChunkName: "ProjectUserFeedback" */ './views/userFeedback/projectUserFeedback')}
+              import(/* webpackChunkName: "ProjectUserFeedback" */ './views/userFeedback/projectUserFeedback')
+            }
             component={errorHandler(LazyLoad)}
           />
 
@@ -1214,7 +1332,8 @@ function routes() {
             <Route
               path="activity/"
               componentPromise={() =>
-                import(/* webpackChunkName: "GroupActivity" */ './views/groupDetails/shared/groupActivity')}
+                import(/* webpackChunkName: "GroupActivity" */ './views/groupDetails/shared/groupActivity')
+              }
               component={errorHandler(LazyLoad)}
             />
 
diff --git a/src/sentry/static/sentry/app/stores/globalSelectionStore.jsx b/src/sentry/static/sentry/app/stores/globalSelectionStore.jsx
index 3003c1dc39..ef249a796f 100644
--- a/src/sentry/static/sentry/app/stores/globalSelectionStore.jsx
+++ b/src/sentry/static/sentry/app/stores/globalSelectionStore.jsx
@@ -58,7 +58,7 @@ const GlobalSelectionStore = Reflux.createStore({
   /**
    * Initializes the global selection store
    * If there are query params apply these, otherwise check local storage
-  */
+   */
   loadInitialData(organization, queryParams) {
     this.organization = organization;
     const query = pick(queryParams, Object.values(URL_PARAM));
diff --git a/src/sentry/static/sentry/app/utils.jsx b/src/sentry/static/sentry/app/utils.jsx
index ee8ed998ca..f465bcd314 100644
--- a/src/sentry/static/sentry/app/utils.jsx
+++ b/src/sentry/static/sentry/app/utils.jsx
@@ -148,7 +148,7 @@ export function escape(str) {
 }
 
 export function percent(value, totalValue, precise) {
-  return value / totalValue * 100;
+  return (value / totalValue) * 100;
 }
 
 export function toTitleCase(str) {
diff --git a/src/sentry/static/sentry/app/utils/convertFromSelect2Choices.jsx b/src/sentry/static/sentry/app/utils/convertFromSelect2Choices.jsx
index b931ace947..36753eeb5a 100644
--- a/src/sentry/static/sentry/app/utils/convertFromSelect2Choices.jsx
+++ b/src/sentry/static/sentry/app/utils/convertFromSelect2Choices.jsx
@@ -5,11 +5,10 @@ const convertFromSelect2Choices = choices => {
   }
 
   // Accepts an array of strings or an array of tuples
-  return choices.map(
-    choice =>
-      Array.isArray(choice)
-        ? {value: choice[0], label: choice[1]}
-        : {value: choice, label: choice}
+  return choices.map(choice =>
+    Array.isArray(choice)
+      ? {value: choice[0], label: choice[1]}
+      : {value: choice, label: choice}
   );
 };
 
diff --git a/src/sentry/static/sentry/app/utils/logging.jsx b/src/sentry/static/sentry/app/utils/logging.jsx
index cc43a253ca..1e93db7f07 100644
--- a/src/sentry/static/sentry/app/utils/logging.jsx
+++ b/src/sentry/static/sentry/app/utils/logging.jsx
@@ -14,7 +14,9 @@ export function logAjaxError(error, context) {
   const resp = error instanceof Error ? error.resp : error;
   const errorString = resp.responseJSON
     ? resp.responseJSON.detail || JSON.stringify(resp.responseJSON, null, 2)
-    : resp.responseText ? resp.responseText.substr(0, 255) : '<unknown response>'; // occassionally responseText is undefined
+    : resp.responseText
+    ? resp.responseText.substr(0, 255)
+    : '<unknown response>'; // occassionally responseText is undefined
 
   const message = `HTTP ${resp.status}: ${errorString}`;
   Sentry.withScope(scope => {
diff --git a/src/sentry/static/sentry/app/views/admin/adminBuffer.jsx b/src/sentry/static/sentry/app/views/admin/adminBuffer.jsx
index 7371a57706..ade624b0d1 100644
--- a/src/sentry/static/sentry/app/views/admin/adminBuffer.jsx
+++ b/src/sentry/static/sentry/app/views/admin/adminBuffer.jsx
@@ -30,9 +30,8 @@ export default class AdminBuffer extends React.Component {
             <p>
               Sentry buffers are responsible for making changes to cardinality counters —
               such as an issues event count — as well as updating attributes like{' '}
-              <em>last seen</em>
-              . These are flushed on a regularly interval, and are directly affected by
-              the queue backlog.
+              <em>last seen</em>. These are flushed on a regularly interval, and are
+              directly affected by the queue backlog.
             </p>
           </div>
         </div>
diff --git a/src/sentry/static/sentry/app/views/admin/adminQueue.jsx b/src/sentry/static/sentry/app/views/admin/adminQueue.jsx
index b6123a94e6..627538a2e2 100644
--- a/src/sentry/static/sentry/app/views/admin/adminQueue.jsx
+++ b/src/sentry/static/sentry/app/views/admin/adminQueue.jsx
@@ -50,9 +50,9 @@ export default class AdminQueue extends AsyncView {
           {['1h', '1d', '1w'].map(r => {
             return (
               <a
-                className={`btn btn-sm ${r == this.state.timeWindow
-                  ? 'btn-primary'
-                  : 'btn-default'}`}
+                className={`btn btn-sm ${
+                  r == this.state.timeWindow ? 'btn-primary' : 'btn-default'
+                }`}
                 onClick={() => this.changeWindow(r)}
                 key={r}
               >
diff --git a/src/sentry/static/sentry/app/views/groupDetails/project/index.jsx b/src/sentry/static/sentry/app/views/groupDetails/project/index.jsx
index 097ee8b2fe..a7cbf1e659 100644
--- a/src/sentry/static/sentry/app/views/groupDetails/project/index.jsx
+++ b/src/sentry/static/sentry/app/views/groupDetails/project/index.jsx
@@ -20,7 +20,10 @@ class ProjectGroupDetails extends React.Component {
 
   componentDidMount() {
     // Redirect any Sentry 10 user that has followed an old link and ended up here
-    const {location, params: {orgId, groupId, eventId}} = this.props;
+    const {
+      location,
+      params: {orgId, groupId, eventId},
+    } = this.props;
     const hasSentry10 = new Set(this.context.organization.features).has('sentry10');
 
     if (hasSentry10) {
diff --git a/src/sentry/static/sentry/app/views/groupDetails/shared/groupSimilar/similarList.jsx b/src/sentry/static/sentry/app/views/groupDetails/shared/groupSimilar/similarList.jsx
index c7ad33da65..7432e4cd63 100644
--- a/src/sentry/static/sentry/app/views/groupDetails/shared/groupSimilar/similarList.jsx
+++ b/src/sentry/static/sentry/app/views/groupDetails/shared/groupSimilar/similarList.jsx
@@ -83,14 +83,13 @@ class SimilarList extends React.Component {
             <SimilarItem key={item.issue.id} orgId={orgId} groupId={groupId} {...item} />
           ))}
 
-          {hasHiddenItems &&
-            !this.state.showAllItems && (
-              <div className="similar-items-footer">
-                <button className="btn btn-default btn-xl" onClick={this.handleShowAll}>
-                  Show {filteredItems.length} issues below threshold
-                </button>
-              </div>
-            )}
+          {hasHiddenItems && !this.state.showAllItems && (
+            <div className="similar-items-footer">
+              <button className="btn btn-default btn-xl" onClick={this.handleShowAll}>
+                Show {filteredItems.length} issues below threshold
+              </button>
+            </div>
+          )}
         </div>
         <Pagination pageLinks={pageLinks} />
       </div>
diff --git a/src/sentry/static/sentry/app/views/groupDetails/shared/groupTagValues.jsx b/src/sentry/static/sentry/app/views/groupDetails/shared/groupTagValues.jsx
index 74fbb45a67..f7a093054f 100644
--- a/src/sentry/static/sentry/app/views/groupDetails/shared/groupTagValues.jsx
+++ b/src/sentry/static/sentry/app/views/groupDetails/shared/groupTagValues.jsx
@@ -97,7 +97,11 @@ const GroupTagValues = createReactClass({
       return <LoadingError onRetry={this.fetchData} />;
     }
 
-    const {organization, group, params: {orgId, projectId}} = this.props;
+    const {
+      organization,
+      group,
+      params: {orgId, projectId},
+    } = this.props;
     const tagKey = this.state.tagKey;
 
     const sortedTagValueList = sortBy(
@@ -159,8 +163,9 @@ const GroupTagValues = createReactClass({
         <h3>
           {tagKey.key == 'user' ? t('Affected Users') : tagKey.name}
           <a
-            href={`/${orgId}/${group.project.slug}/issues/${group.id}/tags/${this.props
-              .params.tagKey}/export/`}
+            href={`/${orgId}/${group.project.slug}/issues/${group.id}/tags/${
+              this.props.params.tagKey
+            }/export/`}
             className="btn btn-default btn-sm"
             style={{marginLeft: 10}}
           >
diff --git a/src/sentry/static/sentry/app/views/installWizard.jsx b/src/sentry/static/sentry/app/views/installWizard.jsx
index beb6c0c658..f46595a6ca 100644
--- a/src/sentry/static/sentry/app/views/installWizard.jsx
+++ b/src/sentry/static/sentry/app/views/installWizard.jsx
@@ -92,8 +92,8 @@ export default class InstallWizard extends AsyncView {
             {this.state.loading
               ? this.renderLoading()
               : this.state.error
-                ? this.renderError(new Error('Unable to load all required endpoints'))
-                : this.renderBody()}
+              ? this.renderError(new Error('Unable to load all required endpoints'))
+              : this.renderBody()}
           </div>
         </div>
       </DocumentTitle>
diff --git a/src/sentry/static/sentry/app/views/integrationInstallation.jsx b/src/sentry/static/sentry/app/views/integrationInstallation.jsx
index 7b18f9efb8..6f893d1659 100644
--- a/src/sentry/static/sentry/app/views/integrationInstallation.jsx
+++ b/src/sentry/static/sentry/app/views/integrationInstallation.jsx
@@ -111,41 +111,36 @@ export default class IntegrationInstallation extends AsyncView {
           )}
         </p>
 
-        {selectedOrg &&
-          organization &&
-          !this.hasAccess(organization) && (
-            <Alert type="error" icon="icon-circle-exclamation">
-              <p>
-                {tct(
-                  `You do not have permission to install integrations in
+        {selectedOrg && organization && !this.hasAccess(organization) && (
+          <Alert type="error" icon="icon-circle-exclamation">
+            <p>
+              {tct(
+                `You do not have permission to install integrations in
                   [organization]. Ask your organization owner or manager to
                   visit this page to finish installing this integration.`,
-                  {organization: <strong>{organization.slug}</strong>}
-                )}
-              </p>
-              <InstallLink>{window.location.href}</InstallLink>
-            </Alert>
-          )}
+                {organization: <strong>{organization.slug}</strong>}
+              )}
+            </p>
+            <InstallLink>{window.location.href}</InstallLink>
+          </Alert>
+        )}
 
-        {this.provider &&
-          organization &&
-          this.hasAccess(organization) &&
-          FeatureList && (
-            <React.Fragment>
-              <p>
-                {tct(
-                  'The following features will be availble for [organization] when installed.',
-                  {organization: <strong>{organization.slug}</strong>}
-                )}
-              </p>
-              <FeatureList
-                organization={organization}
-                features={this.provider.metadata.features}
-                formatter={singleLineRenderer}
-                provider={this.provider}
-              />
-            </React.Fragment>
-          )}
+        {this.provider && organization && this.hasAccess(organization) && FeatureList && (
+          <React.Fragment>
+            <p>
+              {tct(
+                'The following features will be availble for [organization] when installed.',
+                {organization: <strong>{organization.slug}</strong>}
+              )}
+            </p>
+            <FeatureList
+              organization={organization}
+              features={this.provider.metadata.features}
+              formatter={singleLineRenderer}
+              provider={this.provider}
+            />
+          </React.Fragment>
+        )}
 
         <Field label={t('Organization')} inline={false} stacked required>
           {() => (
diff --git a/src/sentry/static/sentry/app/views/newsletterConsent.jsx b/src/sentry/static/sentry/app/views/newsletterConsent.jsx
index 6649d11f13..142c110535 100644
--- a/src/sentry/static/sentry/app/views/newsletterConsent.jsx
+++ b/src/sentry/static/sentry/app/views/newsletterConsent.jsx
@@ -48,9 +48,7 @@ export default createReactClass({
                 We'd love to keep you updated via email with product and feature
                 announcements, promotions, educational materials, and events. Our updates
                 focus on relevant information, and we'll never sell your data to third
-                parties. See our <a href="https://sentry.io/privacy/">
-                  Privacy Policy
-                </a>{' '}
+                parties. See our <a href="https://sentry.io/privacy/">Privacy Policy</a>{' '}
                 for more details.
               </span>
             }
diff --git a/src/sentry/static/sentry/app/views/onboarding/configure/index.jsx b/src/sentry/static/sentry/app/views/onboarding/configure/index.jsx
index 6618c735b6..a9824bda96 100644
--- a/src/sentry/static/sentry/app/views/onboarding/configure/index.jsx
+++ b/src/sentry/static/sentry/app/views/onboarding/configure/index.jsx
@@ -158,7 +158,8 @@ const Configure = createReactClass({
                 }}
                 params={this.props.params}
                 linkPath={(_orgId, _projectId, _platform) =>
-                  `/onboarding/${_orgId}/${_projectId}/configure/${_platform}/`}
+                  `/onboarding/${_orgId}/${_projectId}/configure/${_platform}/`
+                }
               />
             </ProjectDocsContext>
           </ProjectContext>
diff --git a/src/sentry/static/sentry/app/views/onboarding/createProject.jsx b/src/sentry/static/sentry/app/views/onboarding/createProject.jsx
index 9250262a41..10af91789f 100644
--- a/src/sentry/static/sentry/app/views/onboarding/createProject.jsx
+++ b/src/sentry/static/sentry/app/views/onboarding/createProject.jsx
@@ -188,7 +188,8 @@ class CreateProject extends React.Component {
                       openCreateTeamModal({
                         organization,
                         onClose: ({slug}) => this.setState({team: slug}),
-                      })}
+                      })
+                    }
                   />
                 </Tooltip>
               </TeamSelectInput>
diff --git a/src/sentry/static/sentry/app/views/organizationCreate.jsx b/src/sentry/static/sentry/app/views/organizationCreate.jsx
index 684be4d570..f6d6278db5 100644
--- a/src/sentry/static/sentry/app/views/organizationCreate.jsx
+++ b/src/sentry/static/sentry/app/views/organizationCreate.jsx
@@ -50,21 +50,20 @@ export default class OrganizationCreate extends AsyncView {
             required={true}
           />
 
-          {termsUrl &&
-            privacyUrl && (
-              <BooleanField
-                name="agreeTerms"
-                label={tct(
-                  'I agree to the [termsLink:Terms of Service] and the [privacyLink:Privacy Policy]',
-                  {
-                    termsLink: <a href={termsUrl} />,
-                    privacyLink: <a href={privacyUrl} />,
-                  }
-                )}
-                placeholder={t('e.g. My Company')}
-                required={true}
-              />
-            )}
+          {termsUrl && privacyUrl && (
+            <BooleanField
+              name="agreeTerms"
+              label={tct(
+                'I agree to the [termsLink:Terms of Service] and the [privacyLink:Privacy Policy]',
+                {
+                  termsLink: <a href={termsUrl} />,
+                  privacyLink: <a href={privacyUrl} />,
+                }
+              )}
+              placeholder={t('e.g. My Company')}
+              required={true}
+            />
+          )}
         </ApiForm>
       </NarrowLayout>
     );
diff --git a/src/sentry/static/sentry/app/views/organizationDashboard/widgetChart.jsx b/src/sentry/static/sentry/app/views/organizationDashboard/widgetChart.jsx
index 1a74ea5107..079161d9d4 100644
--- a/src/sentry/static/sentry/app/views/organizationDashboard/widgetChart.jsx
+++ b/src/sentry/static/sentry/app/views/organizationDashboard/widgetChart.jsx
@@ -94,7 +94,8 @@ class WidgetChart extends React.Component {
               ...extra,
               ...chartData,
               series: [...chartData.series, ...releaseSeries],
-            })}
+            })
+          }
         </ReleaseSeries>
       );
     }
diff --git a/src/sentry/static/sentry/app/views/organizationDiscover/aggregations/utils.jsx b/src/sentry/static/sentry/app/views/organizationDiscover/aggregations/utils.jsx
index e59dea2794..027efeefd2 100644
--- a/src/sentry/static/sentry/app/views/organizationDiscover/aggregations/utils.jsx
+++ b/src/sentry/static/sentry/app/views/organizationDiscover/aggregations/utils.jsx
@@ -34,11 +34,11 @@ export function isValidAggregation(aggregation, cols) {
 }
 
 /**
-* Converts aggregation from external Snuba format to internal format for dropdown
-*
-* @param {Array} external Aggregation in external Snuba format
-* @return {String} Aggregation in internal format
-**/
+ * Converts aggregation from external Snuba format to internal format for dropdown
+ *
+ * @param {Array} external Aggregation in external Snuba format
+ * @return {String} Aggregation in internal format
+ **/
 export function getInternal(external) {
   const [func, col] = external;
 
@@ -62,13 +62,13 @@ export function getInternal(external) {
 }
 
 /**
-* Returns an alias for a given column name, which is either just the column name
-* or a string with an underscore instead of square brackets for tags. We'll also
-* replace the characters `.`, `:` and `-` from aliases.
-*
-* @param {String} columnName Name of column
-* @return {String} Alias
-*/
+ * Returns an alias for a given column name, which is either just the column name
+ * or a string with an underscore instead of square brackets for tags. We'll also
+ * replace the characters `.`, `:` and `-` from aliases.
+ *
+ * @param {String} columnName Name of column
+ * @return {String} Alias
+ */
 function getAlias(columnName) {
   const tagMatch = columnName.match(/^tags\[(.+)]$/);
   return tagMatch
@@ -77,11 +77,11 @@ function getAlias(columnName) {
 }
 
 /**
-* Converts aggregation internal string format to external Snuba representation
-*
-* @param {String} internal Aggregation in internal format
-* @return {Array} Aggregation in external Snuba format
-*/
+ * Converts aggregation internal string format to external Snuba representation
+ *
+ * @param {String} internal Aggregation in internal format
+ * @return {Array} Aggregation in external Snuba format
+ */
 export function getExternal(internal) {
   const uniqRegex = /^uniq\((.+)\)$/;
   const avgRegex = /^avg\((.+)\)$/;
diff --git a/src/sentry/static/sentry/app/views/organizationDiscover/conditions/utils.jsx b/src/sentry/static/sentry/app/views/organizationDiscover/conditions/utils.jsx
index 799ed4d74f..387b0e4fcf 100644
--- a/src/sentry/static/sentry/app/views/organizationDiscover/conditions/utils.jsx
+++ b/src/sentry/static/sentry/app/views/organizationDiscover/conditions/utils.jsx
@@ -31,23 +31,23 @@ export function isValidCondition(condition, cols) {
 }
 
 /***
-* Converts external Snuba format to internal format for dropdown
-*
-* @param {Array} condition Condition in external Snuba format
-* @param {Array} cols List of columns with name and type e.g. {name: 'message', type: 'string}
-* @returns {String}
-*/
+ * Converts external Snuba format to internal format for dropdown
+ *
+ * @param {Array} condition Condition in external Snuba format
+ * @param {Array} cols List of columns with name and type e.g. {name: 'message', type: 'string}
+ * @returns {String}
+ */
 export function getInternal(external) {
   return external.join(' ').trim();
 }
 
 /***
-* Converts internal dropdown format to external Snuba format
-*
-* @param {String} internal Condition in internal format
-* @param {Array} {Array} cols List of columns with name and type e.g. {name: 'message', type: 'string}
-* @returns {Array} condition Condition in external Snuba format
-*/
+ * Converts internal dropdown format to external Snuba format
+ *
+ * @param {String} internal Condition in internal format
+ * @param {Array} {Array} cols List of columns with name and type e.g. {name: 'message', type: 'string}
+ * @returns {Array} condition Condition in external Snuba format
+ */
 export function getExternal(internal, columns) {
   internal = internal || '';
   const external = [null, null, null];
@@ -109,12 +109,12 @@ export function getExternal(internal, columns) {
 }
 
 /**
-* Transform casing of condition operators to uppercase. Applies to the operators
-* IS NULL, IS NOT NULL, LIKE and NOT LIKE
-*
-* @param {String} input Condition string as input by user
-* @returns {String}
-*/
+ * Transform casing of condition operators to uppercase. Applies to the operators
+ * IS NULL, IS NOT NULL, LIKE and NOT LIKE
+ *
+ * @param {String} input Condition string as input by user
+ * @returns {String}
+ */
 
 export function ignoreCase(input = '') {
   const colName = input.split(' ')[0];
diff --git a/src/sentry/static/sentry/app/views/organizationDiscover/discover.jsx b/src/sentry/static/sentry/app/views/organizationDiscover/discover.jsx
index 07e296bb74..7ef26077d1 100644
--- a/src/sentry/static/sentry/app/views/organizationDiscover/discover.jsx
+++ b/src/sentry/static/sentry/app/views/organizationDiscover/discover.jsx
@@ -403,22 +403,21 @@ export default class OrganizationDiscover extends React.Component {
               isLoading={isLoading}
             />
           )}
-          {isEditingSavedQuery &&
-            savedQuery && (
-              <QueryPanel title={t('Edit Query')} onClose={toggleEditMode}>
-                <EditSavedQuery
-                  savedQuery={savedQuery}
-                  queryBuilder={queryBuilder}
-                  isFetchingQuery={isFetchingQuery}
-                  onUpdateField={this.updateField}
-                  onRunQuery={this.runQuery}
-                  onReset={this.reset}
-                  onDeleteQuery={this.deleteSavedQuery}
-                  onSaveQuery={this.updateSavedQuery}
-                  isLoading={isLoading}
-                />
-              </QueryPanel>
-            )}
+          {isEditingSavedQuery && savedQuery && (
+            <QueryPanel title={t('Edit Query')} onClose={toggleEditMode}>
+              <EditSavedQuery
+                savedQuery={savedQuery}
+                queryBuilder={queryBuilder}
+                isFetchingQuery={isFetchingQuery}
+                onUpdateField={this.updateField}
+                onRunQuery={this.runQuery}
+                onReset={this.reset}
+                onDeleteQuery={this.deleteSavedQuery}
+                onSaveQuery={this.updateSavedQuery}
+                isLoading={isLoading}
+              />
+            </QueryPanel>
+          )}
         </Sidebar>
 
         <DiscoverGlobalSelectionHeader
diff --git a/src/sentry/static/sentry/app/views/organizationDiscover/queryBuilder.jsx b/src/sentry/static/sentry/app/views/organizationDiscover/queryBuilder.jsx
index e32c223e2b..e2a00ad767 100644
--- a/src/sentry/static/sentry/app/views/organizationDiscover/queryBuilder.jsx
+++ b/src/sentry/static/sentry/app/views/organizationDiscover/queryBuilder.jsx
@@ -78,10 +78,12 @@ export default function createQueryBuilder(initial = {}, organization) {
       turbo: true,
     })
       .then(res => {
-        tags = res.data.filter(tag => !HIDDEN_TAGS.includes(tag.tags_key)).map(tag => {
-          const type = SPECIAL_TAGS[tags.tags_key] || 'string';
-          return {name: tag.tags_key, type, isTag: true};
-        });
+        tags = res.data
+          .filter(tag => !HIDDEN_TAGS.includes(tag.tags_key))
+          .map(tag => {
+            const type = SPECIAL_TAGS[tags.tags_key] || 'string';
+            return {name: tag.tags_key, type, isTag: true};
+          });
       })
       .catch(err => {
         tags = PROMOTED_TAGS.map(tag => {
@@ -181,7 +183,9 @@ export default function createQueryBuilder(initial = {}, organization) {
    */
   function fetch(data = getExternal(), cursor = '0:0:1') {
     const limit = data.limit || 1000;
-    const endpoint = `/organizations/${organization.slug}/discover/query/?per_page=${limit}&cursor=${cursor}`;
+    const endpoint = `/organizations/${
+      organization.slug
+    }/discover/query/?per_page=${limit}&cursor=${cursor}`;
 
     // Reject immediately if no projects are available
     if (!data.projects.length) {
diff --git a/src/sentry/static/sentry/app/views/organizationDiscover/result/index.jsx b/src/sentry/static/sentry/app/views/organizationDiscover/result/index.jsx
index 7cd88070f1..e340759cc2 100644
--- a/src/sentry/static/sentry/app/views/organizationDiscover/result/index.jsx
+++ b/src/sentry/static/sentry/app/views/organizationDiscover/result/index.jsx
@@ -200,7 +200,12 @@ class Result extends React.Component {
   }
 
   render() {
-    const {data: {baseQuery, byDayQuery}, savedQuery, onFetchPage, utc} = this.props;
+    const {
+      data: {baseQuery, byDayQuery},
+      savedQuery,
+      onFetchPage,
+      utc,
+    } = this.props;
 
     const {view} = this.state;
 
diff --git a/src/sentry/static/sentry/app/views/organizationDiscover/result/table.jsx b/src/sentry/static/sentry/app/views/organizationDiscover/result/table.jsx
index 53a1701141..9af311ea30 100644
--- a/src/sentry/static/sentry/app/views/organizationDiscover/result/table.jsx
+++ b/src/sentry/static/sentry/app/views/organizationDiscover/result/table.jsx
@@ -46,7 +46,9 @@ class ResultTable extends React.Component {
   }
 
   getCellRenderer = cols => ({key, rowIndex, columnIndex, style}) => {
-    const {data: {data, meta}} = this.props;
+    const {
+      data: {data, meta},
+    } = this.props;
 
     const isSpacingCol = columnIndex === cols.length;
 
@@ -130,7 +132,9 @@ class ResultTable extends React.Component {
   // are less than 20 columns of data to check in total.
   // Adds an empty column at the end with the remaining table width if any.
   getColumnWidths = tableWidth => {
-    const {data: {data}} = this.props;
+    const {
+      data: {data},
+    } = this.props;
     const cols = this.getColumnList();
 
     const widths = [];
@@ -175,7 +179,9 @@ class ResultTable extends React.Component {
   };
 
   getRowHeight = (rowIndex, columnsToCheck) => {
-    const {data: {data}} = this.props;
+    const {
+      data: {data},
+    } = this.props;
 
     if (rowIndex === 0) {
       return TABLE_ROW_HEIGHT_WITH_BORDER;
@@ -198,7 +204,10 @@ class ResultTable extends React.Component {
   };
 
   getColumnList = () => {
-    const {query, data: {meta}} = this.props;
+    const {
+      query,
+      data: {meta},
+    } = this.props;
 
     const fields = new Set([
       ...(query.fields || []),
@@ -237,7 +246,10 @@ class ResultTable extends React.Component {
   };
 
   renderTable() {
-    const {data: {data}, height} = this.props;
+    const {
+      data: {data},
+      height,
+    } = this.props;
 
     const cols = this.getColumnList();
 
@@ -316,7 +328,7 @@ const Grid = styled(({visibleRows, ...props}) => <div {...props} />)`
 
 const Cell = styled('div')`
   ${p => !p.isOddRow && `background-color: ${p.theme.whiteDark};`} ${p =>
-      `text-align: ${p.align};`} overflow: scroll;
+    `text-align: ${p.align};`} overflow: scroll;
   font-size: 14px;
   line-height: ${TABLE_ROW_HEIGHT}px;
   padding: 0 10px;
diff --git a/src/sentry/static/sentry/app/views/organizationDiscover/result/utils.jsx b/src/sentry/static/sentry/app/views/organizationDiscover/result/utils.jsx
index 5ff762e990..005541350f 100644
--- a/src/sentry/static/sentry/app/views/organizationDiscover/result/utils.jsx
+++ b/src/sentry/static/sentry/app/views/organizationDiscover/result/utils.jsx
@@ -71,7 +71,7 @@ export function getChartDataForWidget(data, query, options = {}) {
         };
 
         if (options.includePercentages && total) {
-          obj.percentage = Math.round(res[aggregation[2]] / total * 10000) / 100;
+          obj.percentage = Math.round((res[aggregation[2]] / total) * 10000) / 100;
         }
 
         return obj;
diff --git a/src/sentry/static/sentry/app/views/organizationDiscover/sidebar/newQuery.jsx b/src/sentry/static/sentry/app/views/organizationDiscover/sidebar/newQuery.jsx
index cf5a9bde2e..a28e828297 100644
--- a/src/sentry/static/sentry/app/views/organizationDiscover/sidebar/newQuery.jsx
+++ b/src/sentry/static/sentry/app/views/organizationDiscover/sidebar/newQuery.jsx
@@ -32,7 +32,9 @@ export default class NewQuery extends React.Component {
       .then(savedQuery => {
         addSuccessMessage(tct('Successfully saved query [name]', {name: savedQueryName}));
         browserHistory.push({
-          pathname: `/organizations/${organization.slug}/discover/saved/${savedQuery.id}/`,
+          pathname: `/organizations/${organization.slug}/discover/saved/${
+            savedQuery.id
+          }/`,
           query: {editing: true},
         });
       })
diff --git a/src/sentry/static/sentry/app/views/organizationDiscover/sidebar/savedQueryList.jsx b/src/sentry/static/sentry/app/views/organizationDiscover/sidebar/savedQueryList.jsx
index ccb93f2d7a..3d707a22d6 100644
--- a/src/sentry/static/sentry/app/views/organizationDiscover/sidebar/savedQueryList.jsx
+++ b/src/sentry/static/sentry/app/views/organizationDiscover/sidebar/savedQueryList.jsx
@@ -41,9 +41,8 @@ export default class SavedQueries extends React.Component {
 
     // Update query in the list with new data
     if (nextProps.savedQuery && nextProps.savedQuery !== this.props.savedQuery) {
-      const data = this.state.data.map(
-        savedQuery =>
-          savedQuery.id === nextProps.savedQuery.id ? nextProps.savedQuery : savedQuery
+      const data = this.state.data.map(savedQuery =>
+        savedQuery.id === nextProps.savedQuery.id ? nextProps.savedQuery : savedQuery
       );
       this.setState({data});
     }
diff --git a/src/sentry/static/sentry/app/views/organizationEvents/events.jsx b/src/sentry/static/sentry/app/views/organizationEvents/events.jsx
index 3c5f1125f4..af915085cc 100644
--- a/src/sentry/static/sentry/app/views/organizationEvents/events.jsx
+++ b/src/sentry/static/sentry/app/views/organizationEvents/events.jsx
@@ -130,7 +130,9 @@ class OrganizationEvents extends AsyncView {
       const project = organization.projects.find(p => p.id === event.projectID);
 
       browserHistory.replace(
-        `/organizations/${organization.slug}/projects/${project.slug}/events/${event.eventID}/`
+        `/organizations/${organization.slug}/projects/${project.slug}/events/${
+          event.eventID
+        }/`
       );
     }
   }
@@ -197,29 +199,26 @@ class OrganizationEvents extends AsyncView {
           onUpdateComplete={this.handleTableUpdateComplete}
         />
 
-        {!loading &&
-          !reloading &&
-          !error && (
-            <Flex align="center" justify="space-between">
-              <RowDisplay>
-                {events.length ? t(`Results ${this.renderRowCounts()}`) : t('No Results')}
-                {!!events.length &&
-                  eventsPageLinks && (
-                    <Feature features={['internal-catchall']}>
-                      <TotalEventCount
-                        organization={organization}
-                        location={location}
-                        isAllResults={
-                          !parsedLinks.previous.results && !parsedLinks.next.results
-                        }
-                        numRows={events.length}
-                      />
-                    </Feature>
-                  )}
-              </RowDisplay>
-              <Pagination pageLinks={eventsPageLinks} className="" />
-            </Flex>
-          )}
+        {!loading && !reloading && !error && (
+          <Flex align="center" justify="space-between">
+            <RowDisplay>
+              {events.length ? t(`Results ${this.renderRowCounts()}`) : t('No Results')}
+              {!!events.length && eventsPageLinks && (
+                <Feature features={['internal-catchall']}>
+                  <TotalEventCount
+                    organization={organization}
+                    location={location}
+                    isAllResults={
+                      !parsedLinks.previous.results && !parsedLinks.next.results
+                    }
+                    numRows={events.length}
+                  />
+                </Feature>
+              )}
+            </RowDisplay>
+            <Pagination pageLinks={eventsPageLinks} className="" />
+          </Flex>
+        )}
       </React.Fragment>
     );
   }
diff --git a/src/sentry/static/sentry/app/views/organizationEvents/eventsTable.jsx b/src/sentry/static/sentry/app/views/organizationEvents/eventsTable.jsx
index fe3ba39e9a..0ad8380200 100644
--- a/src/sentry/static/sentry/app/views/organizationEvents/eventsTable.jsx
+++ b/src/sentry/static/sentry/app/views/organizationEvents/eventsTable.jsx
@@ -31,7 +31,9 @@ class EventsTableBody extends React.PureComponent {
       const hasSentry10 = new Set(organization.features).has('sentry10');
 
       const eventLink = hasSentry10
-        ? `/organizations/${organization.slug}/projects/${project.slug}/events/${event.eventID}/`
+        ? `/organizations/${organization.slug}/projects/${project.slug}/events/${
+            event.eventID
+          }/`
         : `/${organization.slug}/${project.slug}/events/${event.eventID}/`;
 
       const idBadge = (
@@ -144,12 +146,11 @@ class EventsTable extends React.Component {
           </TableLayout>
         </PanelHeader>
         {loading && <LoadingIndicator />}
-        {!loading &&
-          !hasEvents && (
-            <EmptyStateWarning>
-              <p>No events</p>
-            </EmptyStateWarning>
-          )}
+        {!loading && !hasEvents && (
+          <EmptyStateWarning>
+            <p>No events</p>
+          </EmptyStateWarning>
+        )}
         {hasEvents && (
           <StyledPanelBody>
             {(reloading || zoomChanged) && <StyledLoadingIndicator overlay />}
diff --git a/src/sentry/static/sentry/app/views/organizationEvents/searchBar.jsx b/src/sentry/static/sentry/app/views/organizationEvents/searchBar.jsx
index ef9a6f929a..a5d679f9ba 100644
--- a/src/sentry/static/sentry/app/views/organizationEvents/searchBar.jsx
+++ b/src/sentry/static/sentry/app/views/organizationEvents/searchBar.jsx
@@ -55,16 +55,20 @@ class SearchBar extends React.PureComponent {
    * Returns array of tag values that substring match `query`; invokes `callback`
    * with data when ready
    */
-  getEventFieldValues = memoize((tag, query) => {
-    const {api, organization} = this.props;
+  getEventFieldValues = memoize(
+    (tag, query) => {
+      const {api, organization} = this.props;
 
-    return fetchTagValues(api, organization.slug, tag.key, query).then(
-      results => flatten(results.filter(({name}) => defined(name)).map(({name}) => name)),
-      () => {
-        throw new Error('Unable to fetch event field values');
-      }
-    );
-  }, ({key}, query) => `${key}-${query}`);
+      return fetchTagValues(api, organization.slug, tag.key, query).then(
+        results =>
+          flatten(results.filter(({name}) => defined(name)).map(({name}) => name)),
+        () => {
+          throw new Error('Unable to fetch event field values');
+        }
+      );
+    },
+    ({key}, query) => `${key}-${query}`
+  );
 
   getAllTags = (orgTags = []) => orgTags.sort().reduce(tagToObjectReducer, {});
 
diff --git a/src/sentry/static/sentry/app/views/organizationEvents/utils/eventsRequest.jsx b/src/sentry/static/sentry/app/views/organizationEvents/utils/eventsRequest.jsx
index d423ef2716..aca10709ee 100644
--- a/src/sentry/static/sentry/app/views/organizationEvents/utils/eventsRequest.jsx
+++ b/src/sentry/static/sentry/app/views/organizationEvents/utils/eventsRequest.jsx
@@ -294,8 +294,7 @@ class EventsRequest extends React.PureComponent {
       originalPreviousData: originalPreviousTimeseriesData,
       previousData: previousTimeseriesData,
       timeAggregatedData,
-    } =
-      (timeseriesData && this.processData(timeseriesData, true)) || {};
+    } = (timeseriesData && this.processData(timeseriesData, true)) || {};
 
     return children({
       loading,
diff --git a/src/sentry/static/sentry/app/views/organizationIntegrations/addIntegration.jsx b/src/sentry/static/sentry/app/views/organizationIntegrations/addIntegration.jsx
index c22809ee2c..12c3e9f2ee 100644
--- a/src/sentry/static/sentry/app/views/organizationIntegrations/addIntegration.jsx
+++ b/src/sentry/static/sentry/app/views/organizationIntegrations/addIntegration.jsx
@@ -31,14 +31,14 @@ export default class AddIntegration extends React.Component {
     const innerWidth = window.innerWidth
       ? window.innerWidth
       : document.documentElement.clientWidth
-        ? document.documentElement.clientWidth
-        : screen.width;
+      ? document.documentElement.clientWidth
+      : screen.width;
 
     const innerHeight = window.innerHeight
       ? window.innerHeight
       : document.documentElement.clientHeight
-        ? document.documentElement.clientHeight
-        : screen.height;
+      ? document.documentElement.clientHeight
+      : screen.height;
 
     const left = innerWidth / 2 - width / 2 + screenLeft;
     const top = innerHeight / 2 - height / 2 + screenTop;
diff --git a/src/sentry/static/sentry/app/views/organizationIntegrations/addIntegrationButton.jsx b/src/sentry/static/sentry/app/views/organizationIntegrations/addIntegrationButton.jsx
index f0024f319a..454b2cf799 100644
--- a/src/sentry/static/sentry/app/views/organizationIntegrations/addIntegrationButton.jsx
+++ b/src/sentry/static/sentry/app/views/organizationIntegrations/addIntegrationButton.jsx
@@ -29,7 +29,9 @@ export default class AddIntegrationButton extends React.Component {
     return (
       <Tooltip
         disabled={provider.canAdd}
-        title={`Integration cannot be added on Sentry. Enable this integration via the ${provider.name} instance.`}
+        title={`Integration cannot be added on Sentry. Enable this integration via the ${
+          provider.name
+        } instance.`}
       >
         <AddIntegration provider={provider} onInstall={onAddIntegration}>
           {onClick => (
diff --git a/src/sentry/static/sentry/app/views/organizationIntegrations/installedIntegration.jsx b/src/sentry/static/sentry/app/views/organizationIntegrations/installedIntegration.jsx
index 44aff4f9e6..ec6d25cf0d 100644
--- a/src/sentry/static/sentry/app/views/organizationIntegrations/installedIntegration.jsx
+++ b/src/sentry/static/sentry/app/views/organizationIntegrations/installedIntegration.jsx
@@ -137,7 +137,9 @@ export default class InstalledIntegration extends React.Component {
                     borderless
                     icon="icon-settings"
                     disabled={!this.hasConfiguration() || !hasAccess}
-                    to={`/settings/${orgId}/integrations/${provider.key}/${integration.id}/`}
+                    to={`/settings/${orgId}/integrations/${provider.key}/${
+                      integration.id
+                    }/`}
                   >
                     Configure
                   </StyledButton>
diff --git a/src/sentry/static/sentry/app/views/organizationIntegrations/integrationRepos.jsx b/src/sentry/static/sentry/app/views/organizationIntegrations/integrationRepos.jsx
index 36e91a3e12..f1af102018 100644
--- a/src/sentry/static/sentry/app/views/organizationIntegrations/integrationRepos.jsx
+++ b/src/sentry/static/sentry/app/views/organizationIntegrations/integrationRepos.jsx
@@ -71,8 +71,9 @@ export default class IntegrationRepos extends AsyncComponent {
   searchRepositoriesRequest = searchQuery => {
     const orgId = this.context.organization.slug;
     const query = {search: searchQuery};
-    const endpoint = `/organizations/${orgId}/integrations/${this.props.integration
-      .id}/repos/`;
+    const endpoint = `/organizations/${orgId}/integrations/${
+      this.props.integration.id
+    }/repos/`;
     return this.api.request(endpoint, {
       method: 'GET',
       query,
diff --git a/src/sentry/static/sentry/app/views/organizationIntegrations/providerRow.jsx b/src/sentry/static/sentry/app/views/organizationIntegrations/providerRow.jsx
index 23881127b5..a5127265fb 100644
--- a/src/sentry/static/sentry/app/views/organizationIntegrations/providerRow.jsx
+++ b/src/sentry/static/sentry/app/views/organizationIntegrations/providerRow.jsx
@@ -74,7 +74,9 @@ export default class ProviderRow extends React.Component {
       icon: upgradeable ? 'icon-upgrade' : 'icon-circle-add',
       children: this.isEnabled
         ? t('Add Another')
-        : upgradeable ? t('Update') : t('Install'),
+        : upgradeable
+        ? t('Update')
+        : t('Install'),
     };
   }
 
@@ -153,15 +155,14 @@ const NewInstallation = styled('div')`
     ${p => highlight(p.theme.yellowLightest)} 1000ms 500ms ease-in-out forwards;
 `;
 
-const StyledInstalledIntegration = styled(
-  p =>
-    p.integration.newlyAdded ? (
-      <NewInstallation>
-        <InstalledIntegration {...p} />
-      </NewInstallation>
-    ) : (
+const StyledInstalledIntegration = styled(p =>
+  p.integration.newlyAdded ? (
+    <NewInstallation>
       <InstalledIntegration {...p} />
-    )
+    </NewInstallation>
+  ) : (
+    <InstalledIntegration {...p} />
+  )
 )`
   padding: ${space(2)};
   padding-left: 0;
diff --git a/src/sentry/static/sentry/app/views/organizationMonitors/checkInIcon.jsx b/src/sentry/static/sentry/app/views/organizationMonitors/checkInIcon.jsx
index a4f4a60e09..387e6697e2 100644
--- a/src/sentry/static/sentry/app/views/organizationMonitors/checkInIcon.jsx
+++ b/src/sentry/static/sentry/app/views/organizationMonitors/checkInIcon.jsx
@@ -5,9 +5,13 @@ const getBackgroundColor = p => {
     return `background: ${p.color};`;
   }
 
-  return `background: ${p.status === 'error'
-    ? p.theme.error
-    : p.status === 'ok' ? p.theme.success : p.theme.disabled};`;
+  return `background: ${
+    p.status === 'error'
+      ? p.theme.error
+      : p.status === 'ok'
+      ? p.theme.success
+      : p.theme.disabled
+  };`;
 };
 
 const getSize = p => `
diff --git a/src/sentry/static/sentry/app/views/organizationMonitors/monitorIcon.jsx b/src/sentry/static/sentry/app/views/organizationMonitors/monitorIcon.jsx
index a4f4a60e09..387e6697e2 100644
--- a/src/sentry/static/sentry/app/views/organizationMonitors/monitorIcon.jsx
+++ b/src/sentry/static/sentry/app/views/organizationMonitors/monitorIcon.jsx
@@ -5,9 +5,13 @@ const getBackgroundColor = p => {
     return `background: ${p.color};`;
   }
 
-  return `background: ${p.status === 'error'
-    ? p.theme.error
-    : p.status === 'ok' ? p.theme.success : p.theme.disabled};`;
+  return `background: ${
+    p.status === 'error'
+      ? p.theme.error
+      : p.status === 'ok'
+      ? p.theme.success
+      : p.theme.disabled
+  };`;
 };
 
 const getSize = p => `
diff --git a/src/sentry/static/sentry/app/views/organizationProjectsDashboard/deploys.jsx b/src/sentry/static/sentry/app/views/organizationProjectsDashboard/deploys.jsx
index 16be2266dd..ab15db9c8e 100644
--- a/src/sentry/static/sentry/app/views/organizationProjectsDashboard/deploys.jsx
+++ b/src/sentry/static/sentry/app/views/organizationProjectsDashboard/deploys.jsx
@@ -22,11 +22,11 @@ export default class Deploys extends React.Component {
   render() {
     const {project, organization} = this.props;
 
-    const flattenedDeploys = Object.entries(
-      project.latestDeploys || {}
-    ).map(([environment, value]) => {
-      return {environment, ...value};
-    });
+    const flattenedDeploys = Object.entries(project.latestDeploys || {}).map(
+      ([environment, value]) => {
+        return {environment, ...value};
+      }
+    );
 
     const deploys = (flattenedDeploys || [])
       .sort((a, b) => new Date(b.dateFinished) - new Date(a.dateFinished))
@@ -70,7 +70,9 @@ class Deploy extends React.Component {
           <StyledLink
             to={
               hasSentry10
-                ? `/organizations/${organization.slug}/releases/${deploy.version}/?project=${project.id}`
+                ? `/organizations/${organization.slug}/releases/${
+                    deploy.version
+                  }/?project=${project.id}`
                 : `/${organization.slug}/${project.slug}/releases/${deploy.version}/`
             }
           >
diff --git a/src/sentry/static/sentry/app/views/organizationProjectsDashboard/index.jsx b/src/sentry/static/sentry/app/views/organizationProjectsDashboard/index.jsx
index fa466df68e..0dde676d0a 100644
--- a/src/sentry/static/sentry/app/views/organizationProjectsDashboard/index.jsx
+++ b/src/sentry/static/sentry/app/views/organizationProjectsDashboard/index.jsx
@@ -69,18 +69,17 @@ class Dashboard extends React.Component {
 
     return (
       <React.Fragment>
-        {!hasSentry10 &&
-          favorites.length > 0 && (
-            <TeamSection
-              data-test-id="favorites"
-              orgId={params.orgId}
-              showBorder
-              team={null}
-              title={t('Bookmarked projects')}
-              projects={favorites}
-              access={access}
-            />
-          )}
+        {!hasSentry10 && favorites.length > 0 && (
+          <TeamSection
+            data-test-id="favorites"
+            orgId={params.orgId}
+            showBorder
+            team={null}
+            title={t('Bookmarked projects')}
+            projects={favorites}
+            access={access}
+          />
+        )}
 
         {teamSlugs.map((slug, index) => {
           const showBorder = index !== teamSlugs.length - 1;
@@ -106,10 +105,9 @@ class Dashboard extends React.Component {
             </LazyLoad>
           );
         })}
-        {teamSlugs.length === 0 &&
-          favorites.length === 0 && (
-            <NoProjectMessage organization={organization}>{null}</NoProjectMessage>
-          )}
+        {teamSlugs.length === 0 && favorites.length === 0 && (
+          <NoProjectMessage organization={organization}>{null}</NoProjectMessage>
+        )}
       </React.Fragment>
     );
   }
diff --git a/src/sentry/static/sentry/app/views/organizationStats/index.jsx b/src/sentry/static/sentry/app/views/organizationStats/index.jsx
index add8c70a88..c7027ab6eb 100644
--- a/src/sentry/static/sentry/app/views/organizationStats/index.jsx
+++ b/src/sentry/static/sentry/app/views/organizationStats/index.jsx
@@ -257,7 +257,8 @@ const OrganizationStatsContainer = createReactClass({
           component={() =>
             import(/* webpackChunkName: "organizationStats" */ './organizationStatsDetails').then(
               mod => mod.default
-            )}
+            )
+          }
           organization={organization}
           {...this.state}
         />
diff --git a/src/sentry/static/sentry/app/views/organizationStats/projectTable.jsx b/src/sentry/static/sentry/app/views/organizationStats/projectTable.jsx
index 3aa1d84bf3..3b24f87f2c 100644
--- a/src/sentry/static/sentry/app/views/organizationStats/projectTable.jsx
+++ b/src/sentry/static/sentry/app/views/organizationStats/projectTable.jsx
@@ -18,7 +18,7 @@ const ProjectTable = ({projectMap, projectTotals, orgTotal, organization}) => {
     if (item === 0) {
       return '0%';
     }
-    return parseInt(item / total * 100, 10) + '%';
+    return parseInt((item / total) * 100, 10) + '%';
   };
 
   if (!projectTotals) {
@@ -27,41 +27,43 @@ const ProjectTable = ({projectMap, projectTotals, orgTotal, organization}) => {
 
   const hasSentry10 = new Set(organization.features).has('sentry10');
 
-  return projectTotals.sort((a, b) => b.received - a.received).map((item, index) => {
-    const project = projectMap[item.id];
+  return projectTotals
+    .sort((a, b) => b.received - a.received)
+    .map((item, index) => {
+      const project = projectMap[item.id];
 
-    if (!project) {
-      return null;
-    }
+      if (!project) {
+        return null;
+      }
 
-    const projectLink = hasSentry10
-      ? `/settings/${organization.slug}/projects/${project.slug}/`
-      : `/${organization.slug}/${project.slug}/`;
+      const projectLink = hasSentry10
+        ? `/settings/${organization.slug}/projects/${project.slug}/`
+        : `/${organization.slug}/${project.slug}/`;
 
-    return (
-      <StyledProjectTableLayout key={index}>
-        <StyledProjectTitle>
-          <Link to={projectLink}>{project.slug}</Link>
-        </StyledProjectTitle>
-        <ProjectTableDataElement>
-          <Count value={item.accepted} />
-          <Percentage>{getPercent(item.accepted, orgTotal.accepted)}</Percentage>
-        </ProjectTableDataElement>
-        <ProjectTableDataElement>
-          <Count value={item.rejected} />
-          <Percentage>{getPercent(item.rejected, orgTotal.rejected)}</Percentage>
-        </ProjectTableDataElement>
-        <ProjectTableDataElement>
-          <Count value={item.blacklisted} />
-          <Percentage>{getPercent(item.blacklisted, orgTotal.blacklisted)}</Percentage>
-        </ProjectTableDataElement>
-        <ProjectTableDataElement>
-          <Count value={item.received} />
-          <Percentage>{getPercent(item.received, orgTotal.received)}</Percentage>
-        </ProjectTableDataElement>
-      </StyledProjectTableLayout>
-    );
-  });
+      return (
+        <StyledProjectTableLayout key={index}>
+          <StyledProjectTitle>
+            <Link to={projectLink}>{project.slug}</Link>
+          </StyledProjectTitle>
+          <ProjectTableDataElement>
+            <Count value={item.accepted} />
+            <Percentage>{getPercent(item.accepted, orgTotal.accepted)}</Percentage>
+          </ProjectTableDataElement>
+          <ProjectTableDataElement>
+            <Count value={item.rejected} />
+            <Percentage>{getPercent(item.rejected, orgTotal.rejected)}</Percentage>
+          </ProjectTableDataElement>
+          <ProjectTableDataElement>
+            <Count value={item.blacklisted} />
+            <Percentage>{getPercent(item.blacklisted, orgTotal.blacklisted)}</Percentage>
+          </ProjectTableDataElement>
+          <ProjectTableDataElement>
+            <Count value={item.received} />
+            <Percentage>{getPercent(item.received, orgTotal.received)}</Percentage>
+          </ProjectTableDataElement>
+        </StyledProjectTableLayout>
+      );
+    });
 };
 
 ProjectTable.propTypes = {
diff --git a/src/sentry/static/sentry/app/views/projectDebugFiles.jsx b/src/sentry/static/sentry/app/views/projectDebugFiles.jsx
index fe39555a7c..372f15af0e 100644
--- a/src/sentry/static/sentry/app/views/projectDebugFiles.jsx
+++ b/src/sentry/static/sentry/app/views/projectDebugFiles.jsx
@@ -98,8 +98,9 @@ class ProjectDebugSymbols extends AsyncComponent {
     const {orgId, projectId} = this.props.params;
 
     const rows = this.state.debugFiles.map((dsym, key) => {
-      const url = `${this.api
-        .baseUrl}/projects/${orgId}/${projectId}/files/dsyms/?id=${dsym.id}`;
+      const url = `${this.api.baseUrl}/projects/${orgId}/${projectId}/files/dsyms/?id=${
+        dsym.id
+      }`;
       const fileType = getFileType(dsym);
       const symbolType = fileType ? `${dsym.symbolType} ${fileType}` : dsym.symbolType;
       const features = dsym.data && dsym.data.features;
diff --git a/src/sentry/static/sentry/app/views/projectInstall/newProject.jsx b/src/sentry/static/sentry/app/views/projectInstall/newProject.jsx
index b62149a427..12e82bdfa5 100644
--- a/src/sentry/static/sentry/app/views/projectInstall/newProject.jsx
+++ b/src/sentry/static/sentry/app/views/projectInstall/newProject.jsx
@@ -22,7 +22,8 @@ const NewProject = ({organization}) => (
         <DocumentTitle title={'Sentry'} />
         <CreateProject
           nextStepUrl={({slug, projectSlug, platform}) =>
-            `/${slug}/${projectSlug}/getting-started/${platform}/`}
+            `/${slug}/${projectSlug}/getting-started/${platform}/`
+          }
         />
       </Content>
     </div>
diff --git a/src/sentry/static/sentry/app/views/projectInstall/overview.jsx b/src/sentry/static/sentry/app/views/projectInstall/overview.jsx
index 0ead295818..c439f60332 100644
--- a/src/sentry/static/sentry/app/views/projectInstall/overview.jsx
+++ b/src/sentry/static/sentry/app/views/projectInstall/overview.jsx
@@ -95,7 +95,8 @@ class ProjectInstallOverview extends React.Component {
             <small>
               {tct('Already have things setup? [link:Get your DSN]', {
                 link: <a className="btn-xsmall" onClick={this.toggleDsn} />,
-              })}.
+              })}
+              .
             </small>
           </p>
         )}
diff --git a/src/sentry/static/sentry/app/views/projectInstall/platform.jsx b/src/sentry/static/sentry/app/views/projectInstall/platform.jsx
index 63166c1a52..297b498dfe 100644
--- a/src/sentry/static/sentry/app/views/projectInstall/platform.jsx
+++ b/src/sentry/static/sentry/app/views/projectInstall/platform.jsx
@@ -111,7 +111,11 @@ const ProjectInstallPlatform = createReactClass({
 
   render() {
     const {integration, platform} = this.state;
-    const {organization, project, params: {orgId, projectId}} = this.props;
+    const {
+      organization,
+      project,
+      params: {orgId, projectId},
+    } = this.props;
 
     if (!integration || !platform) {
       return <NotFound />;
diff --git a/src/sentry/static/sentry/app/views/projectPlugins/projectPlugins.jsx b/src/sentry/static/sentry/app/views/projectPlugins/projectPlugins.jsx
index da1fd0d0fb..9fbb89b4da 100644
--- a/src/sentry/static/sentry/app/views/projectPlugins/projectPlugins.jsx
+++ b/src/sentry/static/sentry/app/views/projectPlugins/projectPlugins.jsx
@@ -64,16 +64,18 @@ class ProjectPlugins extends Component {
             </Access>
           </PanelAlert>
 
-          {plugins.filter(p => !p.isHidden).map(plugin => (
-            <PanelItem key={plugin.id}>
-              <ProjectPluginRow
-                params={params}
-                routes={routes}
-                {...plugin}
-                onChange={onChange}
-              />
-            </PanelItem>
-          ))}
+          {plugins
+            .filter(p => !p.isHidden)
+            .map(plugin => (
+              <PanelItem key={plugin.id}>
+                <ProjectPluginRow
+                  params={params}
+                  routes={routes}
+                  {...plugin}
+                  onChange={onChange}
+                />
+              </PanelItem>
+            ))}
         </PanelBody>
       </Panel>
     );
diff --git a/src/sentry/static/sentry/app/views/projectTags.jsx b/src/sentry/static/sentry/app/views/projectTags.jsx
index 3833bd2ccb..d510f02f4b 100644
--- a/src/sentry/static/sentry/app/views/projectTags.jsx
+++ b/src/sentry/static/sentry/app/views/projectTags.jsx
@@ -112,7 +112,8 @@ export default class ProjectTags extends AsyncView {
                       </Flex>
                     </PanelItem>
                   );
-                })}
+                })
+              }
             </Access>
           </PanelBody>
         </Panel>
diff --git a/src/sentry/static/sentry/app/views/releases/detail/organization/index.jsx b/src/sentry/static/sentry/app/views/releases/detail/organization/index.jsx
index 56128f6b5f..3bb317268c 100644
--- a/src/sentry/static/sentry/app/views/releases/detail/organization/index.jsx
+++ b/src/sentry/static/sentry/app/views/releases/detail/organization/index.jsx
@@ -59,7 +59,10 @@ class OrganizationReleaseDetails extends AsyncView {
   }
 
   getTitle() {
-    const {params: {version}, organization} = this.props;
+    const {
+      params: {version},
+      organization,
+    } = this.props;
     return `Release ${version} | ${organization.slug}`;
   }
 
@@ -71,7 +74,10 @@ class OrganizationReleaseDetails extends AsyncView {
   }
 
   renderBody() {
-    const {location, params: {orgId}} = this.props;
+    const {
+      location,
+      params: {orgId},
+    } = this.props;
     const {release} = this.state;
 
     const query = pick(location.query, Object.values(URL_PARAM));
diff --git a/src/sentry/static/sentry/app/views/releases/detail/organization/releaseOverview.jsx b/src/sentry/static/sentry/app/views/releases/detail/organization/releaseOverview.jsx
index 8cf1d2a707..2685822a7a 100644
--- a/src/sentry/static/sentry/app/views/releases/detail/organization/releaseOverview.jsx
+++ b/src/sentry/static/sentry/app/views/releases/detail/organization/releaseOverview.jsx
@@ -35,7 +35,11 @@ export default class OrganizationReleaseOverview extends AsyncComponent {
   }
 
   renderBody() {
-    const {release, query, params: {orgId, version}} = this.props;
+    const {
+      release,
+      query,
+      params: {orgId, version},
+    } = this.props;
 
     const {fileList, repos} = this.state;
 
diff --git a/src/sentry/static/sentry/app/views/releases/detail/project/index.jsx b/src/sentry/static/sentry/app/views/releases/detail/project/index.jsx
index c8d28dee22..a47e399af1 100644
--- a/src/sentry/static/sentry/app/views/releases/detail/project/index.jsx
+++ b/src/sentry/static/sentry/app/views/releases/detail/project/index.jsx
@@ -49,7 +49,10 @@ const ProjectReleaseDetails = createReactClass({
 
   componentWillMount() {
     // Redirect any Sentry 10 user that has followed an old link and ended up here
-    const {location, params: {orgId, version}} = this.props;
+    const {
+      location,
+      params: {orgId, version},
+    } = this.props;
     const hasSentry10 = new Set(this.context.organization.features).has('sentry10');
     if (hasSentry10) {
       browserHistory.replace(
diff --git a/src/sentry/static/sentry/app/views/releases/detail/shared/releaseEmptyState.jsx b/src/sentry/static/sentry/app/views/releases/detail/shared/releaseEmptyState.jsx
index 87071a8469..75e437f67a 100644
--- a/src/sentry/static/sentry/app/views/releases/detail/shared/releaseEmptyState.jsx
+++ b/src/sentry/static/sentry/app/views/releases/detail/shared/releaseEmptyState.jsx
@@ -20,7 +20,8 @@ class ReleaseEmptyState extends React.Component {
         <h5>{t('Releases are better with commit data!')}</h5>
         <p>
           {t(`Connect a repository to see commit info, files changed, and authors
-                  involved in future releases`)}.
+                  involved in future releases`)}
+          .
         </p>
         <Button
           priority="primary"
diff --git a/src/sentry/static/sentry/app/views/releases/list/organizationReleases/index.jsx b/src/sentry/static/sentry/app/views/releases/list/organizationReleases/index.jsx
index b0455007b6..0813516006 100644
--- a/src/sentry/static/sentry/app/views/releases/list/organizationReleases/index.jsx
+++ b/src/sentry/static/sentry/app/views/releases/list/organizationReleases/index.jsx
@@ -88,7 +88,10 @@ class OrganizationReleases extends AsyncView {
 
   // Returns true if there has been a release in any selected project, otherwise false
   hasAnyRelease() {
-    const {organization: {projects}, selection} = this.props;
+    const {
+      organization: {projects},
+      selection,
+    } = this.props;
     const projectIds = new Set(selection.projects);
     const activeProjects = projects.filter(project =>
       projectIds.has(parseInt(project.id, 10))
diff --git a/src/sentry/static/sentry/app/views/releases/list/projectReleases/index.jsx b/src/sentry/static/sentry/app/views/releases/list/projectReleases/index.jsx
index ed3125b2d1..4aab8e9806 100644
--- a/src/sentry/static/sentry/app/views/releases/list/projectReleases/index.jsx
+++ b/src/sentry/static/sentry/app/views/releases/list/projectReleases/index.jsx
@@ -57,7 +57,10 @@ const ProjectReleases = createReactClass({
 
   componentWillMount() {
     // Redirect any Sentry 10 user that has followed an old link and ended up here
-    const {location, params: {orgId}} = this.props;
+    const {
+      location,
+      params: {orgId},
+    } = this.props;
     const hasSentry10 = new Set(this.context.organization.features).has('sentry10');
     if (hasSentry10) {
       browserHistory.replace(`/organizations/${orgId}/releases/${location.search}`);
@@ -213,7 +216,10 @@ const ProjectReleases = createReactClass({
   },
 
   render() {
-    const {project: {slug: projectSlug}, organization: {name: orgName}} = this.context;
+    const {
+      project: {slug: projectSlug},
+      organization: {name: orgName},
+    } = this.context;
 
     return (
       <DocumentTitle title={`Releases - ${projectSlug} - ${orgName} - Sentry`}>
diff --git a/src/sentry/static/sentry/app/views/releases/list/shared/releaseProgress.jsx b/src/sentry/static/sentry/app/views/releases/list/shared/releaseProgress.jsx
index 55167e180d..444c81614e 100644
--- a/src/sentry/static/sentry/app/views/releases/list/shared/releaseProgress.jsx
+++ b/src/sentry/static/sentry/app/views/releases/list/shared/releaseProgress.jsx
@@ -153,7 +153,7 @@ class ReleaseProgress extends AsyncComponent {
   getWidth() {
     const {remainingSteps} = this.state;
     const width =
-      100 * (Object.keys(STEPS).length - remainingSteps) / Object.keys(STEPS).length;
+      (100 * (Object.keys(STEPS).length - remainingSteps)) / Object.keys(STEPS).length;
 
     return width === 0 ? 25 : width;
   }
diff --git a/src/sentry/static/sentry/app/views/routeError.jsx b/src/sentry/static/sentry/app/views/routeError.jsx
index b9a5fc0067..9831128ce1 100644
--- a/src/sentry/static/sentry/app/views/routeError.jsx
+++ b/src/sentry/static/sentry/app/views/routeError.jsx
@@ -77,13 +77,12 @@ class RouteError extends React.Component {
         </p>
         <p>If you're daring, you may want to try the following:</p>
         <ul>
-          {window &&
-            window.adblockSuspected && (
-              <li>
-                We detected something AdBlock-like. Try disabling it, as it's known to
-                cause issues.
-              </li>
-            )}
+          {window && window.adblockSuspected && (
+            <li>
+              We detected something AdBlock-like. Try disabling it, as it's known to cause
+              issues.
+            </li>
+          )}
           <li>
             Give it a few seconds and{' '}
             <a
@@ -92,7 +91,8 @@ class RouteError extends React.Component {
               }}
             >
               reload the page
-            </a>.
+            </a>
+            .
           </li>
           <li>
             If all else fails,{' '}
diff --git a/src/sentry/static/sentry/app/views/settings/account/accountEmails.jsx b/src/sentry/static/sentry/app/views/settings/account/accountEmails.jsx
index a3f4c4b91c..eb36817210 100644
--- a/src/sentry/static/sentry/app/views/settings/account/accountEmails.jsx
+++ b/src/sentry/static/sentry/app/views/settings/account/accountEmails.jsx
@@ -60,29 +60,27 @@ class EmailRow extends React.Component {
           )}
         </Flex>
         <Flex>
-          {!isPrimary &&
-            isVerified && (
-              <Button size="small" onClick={this.handleSetPrimary}>
-                {t('Set as primary')}
-              </Button>
-            )}
+          {!isPrimary && isVerified && (
+            <Button size="small" onClick={this.handleSetPrimary}>
+              {t('Set as primary')}
+            </Button>
+          )}
           {!isVerified && (
             <Button size="small" onClick={this.handleVerify}>
               {t('Resend verification')}
             </Button>
           )}
-          {!hideRemove &&
-            !isPrimary && (
-              <Box ml={1}>
-                <Button
-                  data-test-id="remove"
-                  priority="danger"
-                  size="small"
-                  icon="icon-trash"
-                  onClick={this.handleRemove}
-                />
-              </Box>
-            )}
+          {!hideRemove && !isPrimary && (
+            <Box ml={1}>
+              <Button
+                data-test-id="remove"
+                priority="danger"
+                size="small"
+                icon="icon-trash"
+                onClick={this.handleRemove}
+              />
+            </Box>
+          )}
         </Flex>
       </PanelItem>
     );
diff --git a/src/sentry/static/sentry/app/views/settings/account/accountNotificationFineTuning.jsx b/src/sentry/static/sentry/app/views/settings/account/accountNotificationFineTuning.jsx
index 18e056d9dd..40731f66bc 100644
--- a/src/sentry/static/sentry/app/views/settings/account/accountNotificationFineTuning.jsx
+++ b/src/sentry/static/sentry/app/views/settings/account/accountNotificationFineTuning.jsx
@@ -232,16 +232,18 @@ export default class AccountNotificationFineTuning extends AsyncView {
       return [];
     }
 
-    return emails.filter(({isVerified}) => isVerified).sort((a, b) => {
-      // Sort by primary -> email
-      if (a.isPrimary) {
-        return -1;
-      } else if (b.isPrimary) {
-        return 1;
-      }
-
-      return a.email < b.email ? -1 : 1;
-    });
+    return emails
+      .filter(({isVerified}) => isVerified)
+      .sort((a, b) => {
+        // Sort by primary -> email
+        if (a.isPrimary) {
+          return -1;
+        } else if (b.isPrimary) {
+          return 1;
+        }
+
+        return a.email < b.email ? -1 : 1;
+      });
   }
 
   renderBody() {
@@ -298,16 +300,16 @@ export default class AccountNotificationFineTuning extends AsyncView {
                 </Box>
               </PanelHeader>
 
-              {isProject &&
-                hasProjects && (
-                  <AccountNotificationsByProject
-                    projects={this.state.projects}
-                    field={field}
-                  />
-                )}
+              {isProject && hasProjects && (
+                <AccountNotificationsByProject
+                  projects={this.state.projects}
+                  field={field}
+                />
+              )}
 
-              {isProject &&
-                !hasProjects && <EmptyMessage>{t('No projects found')}</EmptyMessage>}
+              {isProject && !hasProjects && (
+                <EmptyMessage>{t('No projects found')}</EmptyMessage>
+              )}
 
               {!isProject && (
                 <AccountNotificationsByOrganizationContainer field={field} />
diff --git a/src/sentry/static/sentry/app/views/settings/account/accountSecurity/accountSecurityDetails.jsx b/src/sentry/static/sentry/app/views/settings/account/accountSecurity/accountSecurityDetails.jsx
index fcc833e9a9..5ec74b5c34 100644
--- a/src/sentry/static/sentry/app/views/settings/account/accountSecurity/accountSecurityDetails.jsx
+++ b/src/sentry/static/sentry/app/views/settings/account/accountSecurity/accountSecurityDetails.jsx
@@ -158,13 +158,12 @@ class AccountSecurityDetails extends AsyncView {
           onRemoveU2fDevice={this.handleRemove}
         />
 
-        {authenticator.isEnrolled &&
-          authenticator.phone && (
-            <div css={{marginTop: 30}}>
-              {t('Confirmation codes are sent to the following phone number')}:
-              <Phone>{authenticator.phone}</Phone>
-            </div>
-          )}
+        {authenticator.isEnrolled && authenticator.phone && (
+          <div css={{marginTop: 30}}>
+            {t('Confirmation codes are sent to the following phone number')}:
+            <Phone>{authenticator.phone}</Phone>
+          </div>
+        )}
 
         <RecoveryCodes
           onRegenerateBackupCodes={onRegenerateBackupCodes}
diff --git a/src/sentry/static/sentry/app/views/settings/account/accountSecurity/accountSecurityEnroll.jsx b/src/sentry/static/sentry/app/views/settings/account/accountSecurity/accountSecurityEnroll.jsx
index 18e49a6585..77c7bca065 100644
--- a/src/sentry/static/sentry/app/views/settings/account/accountSecurity/accountSecurityEnroll.jsx
+++ b/src/sentry/static/sentry/app/views/settings/account/accountSecurity/accountSecurityEnroll.jsx
@@ -386,19 +386,18 @@ class AccountSecurityEnroll extends AsyncView {
 
         <TextBlock>{authenticator.description}</TextBlock>
 
-        {authenticator.form &&
-          !!authenticator.form.length && (
-            <Form
-              apiMethod="POST"
-              onFieldChange={this.handleFieldChange}
-              apiEndpoint={endpoint}
-              onSubmit={this.handleSubmit}
-              initialData={{...defaultValues, ...authenticator}}
-              hideFooter
-            >
-              <JsonForm {...this.props} forms={[{title: 'Configuration', fields}]} />
-            </Form>
-          )}
+        {authenticator.form && !!authenticator.form.length && (
+          <Form
+            apiMethod="POST"
+            onFieldChange={this.handleFieldChange}
+            apiEndpoint={endpoint}
+            onSubmit={this.handleSubmit}
+            initialData={{...defaultValues, ...authenticator}}
+            hideFooter
+          >
+            <JsonForm {...this.props} forms={[{title: 'Configuration', fields}]} />
+          </Form>
+        )}
       </div>
     );
   }
diff --git a/src/sentry/static/sentry/app/views/settings/account/accountSecurity/accountSecuritySessionHistory.jsx b/src/sentry/static/sentry/app/views/settings/account/accountSecurity/accountSecuritySessionHistory.jsx
index 10005bb88d..e615c7481f 100644
--- a/src/sentry/static/sentry/app/views/settings/account/accountSecurity/accountSecuritySessionHistory.jsx
+++ b/src/sentry/static/sentry/app/views/settings/account/accountSecurity/accountSecuritySessionHistory.jsx
@@ -31,14 +31,13 @@ class SessionRow extends React.Component {
             <div style={{marginBottom: 5}}>
               <strong>{ipAddress}</strong>
             </div>
-            {countryCode &&
-              regionCode && (
-                <div>
-                  <small>
-                    {countryCode} ({regionCode})
-                  </small>
-                </div>
-              )}
+            {countryCode && regionCode && (
+              <div>
+                <small>
+                  {countryCode} ({regionCode})
+                </small>
+              </div>
+            )}
           </Box>
         </Flex>
         <Flex align="center" w={140} mx={2}>
diff --git a/src/sentry/static/sentry/app/views/settings/account/accountSecurity/components/u2fEnrolledDetails.jsx b/src/sentry/static/sentry/app/views/settings/account/accountSecurity/components/u2fEnrolledDetails.jsx
index 7ce5adc78e..79ee78514a 100644
--- a/src/sentry/static/sentry/app/views/settings/account/accountSecurity/components/u2fEnrolledDetails.jsx
+++ b/src/sentry/static/sentry/app/views/settings/account/accountSecurity/components/u2fEnrolledDetails.jsx
@@ -68,7 +68,9 @@ class U2fEnrolledDetails extends React.Component {
                         </ConfirmHeader>
                         <TextBlock>
                           {t(
-                            `Are you sure you want to remove the U2F device "${device.name}"?`
+                            `Are you sure you want to remove the U2F device "${
+                              device.name
+                            }"?`
                           )}
                         </TextBlock>
                       </React.Fragment>
diff --git a/src/sentry/static/sentry/app/views/settings/account/accountSecurity/index.jsx b/src/sentry/static/sentry/app/views/settings/account/accountSecurity/index.jsx
index 0531fa7562..b5297781a5 100644
--- a/src/sentry/static/sentry/app/views/settings/account/accountSecurity/index.jsx
+++ b/src/sentry/static/sentry/app/views/settings/account/accountSecurity/index.jsx
@@ -130,47 +130,44 @@ class AccountSecurity extends AsyncView {
                         <AuthenticatorName>{name}</AuthenticatorName>
                       </Box>
 
-                      {!isBackupInterface &&
-                        !isEnrolled && (
-                          <Button
-                            to={`/settings/account/security/mfa/${id}/enroll/`}
-                            size="small"
-                            priority="primary"
-                            className="enroll-button"
+                      {!isBackupInterface && !isEnrolled && (
+                        <Button
+                          to={`/settings/account/security/mfa/${id}/enroll/`}
+                          size="small"
+                          priority="primary"
+                          className="enroll-button"
+                        >
+                          {t('Add')}
+                        </Button>
+                      )}
+
+                      {isEnrolled && authId && (
+                        <Button
+                          to={`/settings/account/security/mfa/${authId}/`}
+                          size="small"
+                          className="details-button"
+                        >
+                          {configureButton}
+                        </Button>
+                      )}
+
+                      {!isBackupInterface && isEnrolled && (
+                        <Tooltip
+                          title={t(
+                            `Two-factor authentication is required for organization(s): ${this.formatOrgSlugs()}.`
+                          )}
+                          disabled={!deleteDisabled}
+                        >
+                          <RemoveConfirm
+                            onConfirm={() => onDisable(auth)}
+                            disabled={deleteDisabled}
                           >
-                            {t('Add')}
-                          </Button>
-                        )}
-
-                      {isEnrolled &&
-                        authId && (
-                          <Button
-                            to={`/settings/account/security/mfa/${authId}/`}
-                            size="small"
-                            className="details-button"
-                          >
-                            {configureButton}
-                          </Button>
-                        )}
-
-                      {!isBackupInterface &&
-                        isEnrolled && (
-                          <Tooltip
-                            title={t(
-                              `Two-factor authentication is required for organization(s): ${this.formatOrgSlugs()}.`
-                            )}
-                            disabled={!deleteDisabled}
-                          >
-                            <RemoveConfirm
-                              onConfirm={() => onDisable(auth)}
-                              disabled={deleteDisabled}
-                            >
-                              <Button css={{marginLeft: 6}} size="small">
-                                <span className="icon icon-trash" />
-                              </Button>
-                            </RemoveConfirm>
-                          </Tooltip>
-                        )}
+                            <Button css={{marginLeft: 6}} size="small">
+                              <span className="icon icon-trash" />
+                            </Button>
+                          </RemoveConfirm>
+                        </Tooltip>
+                      )}
 
                       {isBackupInterface && !isEnrolled ? t('requires 2FA') : null}
                     </Flex>
diff --git a/src/sentry/static/sentry/app/views/settings/account/apiTokens.jsx b/src/sentry/static/sentry/app/views/settings/account/apiTokens.jsx
index 54e01025ca..d2536502e1 100644
--- a/src/sentry/static/sentry/app/views/settings/account/apiTokens.jsx
+++ b/src/sentry/static/sentry/app/views/settings/account/apiTokens.jsx
@@ -90,8 +90,7 @@ class ApiTokens extends AsyncView {
         <TextBlock>
           <small>
             psst. Looking for the <strong>DSN</strong> for an SDK? You'll find that under{' '}
-            <strong>[Project] » Settings » Client Keys</strong>
-            .
+            <strong>[Project] » Settings » Client Keys</strong>.
           </small>
         </TextBlock>
         <Panel>
diff --git a/src/sentry/static/sentry/app/views/settings/components/forms/controls/textarea.jsx b/src/sentry/static/sentry/app/views/settings/components/forms/controls/textarea.jsx
index 64556ba4dc..5e86cacdfb 100644
--- a/src/sentry/static/sentry/app/views/settings/components/forms/controls/textarea.jsx
+++ b/src/sentry/static/sentry/app/views/settings/components/forms/controls/textarea.jsx
@@ -6,13 +6,12 @@ import isPropValid from '@emotion/is-prop-valid';
 
 import {inputStyles} from 'app/styles/input';
 
-const TextAreaControl = React.forwardRef(
-  ({autosize, rows, ...p}, ref) =>
-    autosize ? (
-      <TextareaAutosize async innerRef={ref} rows={rows ? rows : 2} {...p} />
-    ) : (
-      <textarea ref={ref} {...p} />
-    )
+const TextAreaControl = React.forwardRef(({autosize, rows, ...p}, ref) =>
+  autosize ? (
+    <TextareaAutosize async innerRef={ref} rows={rows ? rows : 2} {...p} />
+  ) : (
+    <textarea ref={ref} {...p} />
+  )
 );
 
 TextAreaControl.propTypes = {
diff --git a/src/sentry/static/sentry/app/views/settings/components/forms/field/fieldControl.jsx b/src/sentry/static/sentry/app/views/settings/components/forms/field/fieldControl.jsx
index da4d95f6bb..64430f35d2 100644
--- a/src/sentry/static/sentry/app/views/settings/components/forms/field/fieldControl.jsx
+++ b/src/sentry/static/sentry/app/views/settings/components/forms/field/fieldControl.jsx
@@ -71,14 +71,13 @@ class FieldControl extends React.Component {
         <FieldControlWrapper>
           <FieldControlStyled alignRight={alignRight}>{children}</FieldControlStyled>
 
-          {disabled &&
-            disabledReason && (
-              <Flex align="center" ml={1} className="disabled-indicator">
-                <Tooltip title={disabledReason}>
-                  <StyledInlineSvg src="icon-circle-question" size="18px" />
-                </Tooltip>
-              </Flex>
-            )}
+          {disabled && disabledReason && (
+            <Flex align="center" ml={1} className="disabled-indicator">
+              <Tooltip title={disabledReason}>
+                <StyledInlineSvg src="icon-circle-question" size="18px" />
+              </Tooltip>
+            </Flex>
+          )}
 
           <FieldControlState flexibleControlStateSize={flexibleControlStateSize}>
             {controlState}
diff --git a/src/sentry/static/sentry/app/views/settings/components/settingsWrapper.jsx b/src/sentry/static/sentry/app/views/settings/components/settingsWrapper.jsx
index a90447f051..2de8f1d476 100644
--- a/src/sentry/static/sentry/app/views/settings/components/settingsWrapper.jsx
+++ b/src/sentry/static/sentry/app/views/settings/components/settingsWrapper.jsx
@@ -21,7 +21,9 @@ class SettingsWrapper extends React.Component {
     this.state = {
       lastAppContext: !!props.project
         ? 'project'
-        : !!props.organization ? 'organization' : null,
+        : !!props.organization
+        ? 'organization'
+        : null,
     };
   }
 
diff --git a/src/sentry/static/sentry/app/views/settings/components/tag.jsx b/src/sentry/static/sentry/app/views/settings/components/tag.jsx
index fdc85c32b3..240d6b214c 100644
--- a/src/sentry/static/sentry/app/views/settings/components/tag.jsx
+++ b/src/sentry/static/sentry/app/views/settings/components/tag.jsx
@@ -14,9 +14,9 @@ const getMarginLeft = p => {
 
 const getBorder = p =>
   p.border
-    ? `border: 1px solid ${p.priority
-        ? p.theme.alert[p.priority].border
-        : p.theme.gray1};`
+    ? `border: 1px solid ${
+        p.priority ? p.theme.alert[p.priority].border : p.theme.gray1
+      };`
     : '';
 
 const TagTextStyled = styled(({priority, size, border, inline, ...props}) => (
diff --git a/src/sentry/static/sentry/app/views/settings/organization/permissionAlert.jsx b/src/sentry/static/sentry/app/views/settings/organization/permissionAlert.jsx
index 8e25648e1a..b4e6c289c0 100644
--- a/src/sentry/static/sentry/app/views/settings/organization/permissionAlert.jsx
+++ b/src/sentry/static/sentry/app/views/settings/organization/permissionAlert.jsx
@@ -14,7 +14,8 @@ const PermissionAlert = ({access, ...props}) => (
             'These settings can only be edited by users with the owner or manager role.'
           )}
         </Alert>
-      )}
+      )
+    }
   </Access>
 );
 
diff --git a/src/sentry/static/sentry/app/views/settings/organizationApiKeys/organizationApiKeyDetails.jsx b/src/sentry/static/sentry/app/views/settings/organizationApiKeys/organizationApiKeyDetails.jsx
index 8ac4d62094..c31904c67e 100644
--- a/src/sentry/static/sentry/app/views/settings/organizationApiKeys/organizationApiKeyDetails.jsx
+++ b/src/sentry/static/sentry/app/views/settings/organizationApiKeys/organizationApiKeyDetails.jsx
@@ -77,8 +77,9 @@ class OrganizationApiKeyDetails extends AsyncView {
 
         <ApiForm
           apiMethod="PUT"
-          apiEndpoint={`/organizations/${this.props.params.orgId}/api-keys/${this.props
-            .params.apiKey}/`}
+          apiEndpoint={`/organizations/${this.props.params.orgId}/api-keys/${
+            this.props.params.apiKey
+          }/`}
           initialData={this.state.apiKey}
           onSubmitSuccess={this.handleSubmitSuccess}
           onSubmitError={this.handleSubmitError}
@@ -89,7 +90,8 @@ class OrganizationApiKeyDetails extends AsyncView {
                 routes: this.props.routes,
                 params: this.props.params,
               })
-            )}
+            )
+          }
         >
           <SplitLayout splitWidth={15}>
             <TextField label={t('Label')} name="label" />
diff --git a/src/sentry/static/sentry/app/views/settings/organizationAuth/providerItem.jsx b/src/sentry/static/sentry/app/views/settings/organizationAuth/providerItem.jsx
index ef75a12b23..3754fdf3a5 100644
--- a/src/sentry/static/sentry/app/views/settings/organizationAuth/providerItem.jsx
+++ b/src/sentry/static/sentry/app/views/settings/organizationAuth/providerItem.jsx
@@ -54,7 +54,8 @@ export default class ProviderItem extends React.PureComponent {
       <Feature
         features={[provider.requiredFeature].filter(f => f)}
         renderDisabled={({children, ...props}) =>
-          children({...props, renderDisabled: this.renderDisabledLock})}
+          children({...props, renderDisabled: this.renderDisabledLock})
+        }
       >
         {({hasFeature, features, organization, renderDisabled, renderInstallButton}) => (
           <PanelItem align="center">
diff --git a/src/sentry/static/sentry/app/views/settings/organizationGeneralSettings/index.jsx b/src/sentry/static/sentry/app/views/settings/organizationGeneralSettings/index.jsx
index ee206437ae..81db31a448 100644
--- a/src/sentry/static/sentry/app/views/settings/organizationGeneralSettings/index.jsx
+++ b/src/sentry/static/sentry/app/views/settings/organizationGeneralSettings/index.jsx
@@ -101,72 +101,69 @@ const OrganizationGeneralSettings = createReactClass({
         {error && <LoadingError />}
         {loading && !error && <LoadingIndicator />}
 
-        {data &&
-          !loading &&
-          !error && (
-            <div>
-              <SettingsPageHeader title={t('Organization Settings')} />
-              <OrganizationSettingsForm
-                {...this.props}
-                initialData={data}
-                orgId={orgId}
-                access={access}
-                onSave={this.handleSave}
-              />
-
-              {access.has('org:admin') &&
-                !data.isDefault && (
-                  <Panel>
-                    <PanelHeader>{t('Remove Organization')}</PanelHeader>
-                    <Field
-                      label={t('Remove Organization')}
-                      help={t(
-                        'Removing this organization will delete all data including projects and their associated events.'
-                      )}
-                    >
-                      <div>
-                        <LinkWithConfirmation
-                          className="btn btn-danger"
-                          priority="danger"
-                          size="small"
-                          title={t('Remove %s organization', data && data.name)}
-                          message={
+        {data && !loading && !error && (
+          <div>
+            <SettingsPageHeader title={t('Organization Settings')} />
+            <OrganizationSettingsForm
+              {...this.props}
+              initialData={data}
+              orgId={orgId}
+              access={access}
+              onSave={this.handleSave}
+            />
+
+            {access.has('org:admin') && !data.isDefault && (
+              <Panel>
+                <PanelHeader>{t('Remove Organization')}</PanelHeader>
+                <Field
+                  label={t('Remove Organization')}
+                  help={t(
+                    'Removing this organization will delete all data including projects and their associated events.'
+                  )}
+                >
+                  <div>
+                    <LinkWithConfirmation
+                      className="btn btn-danger"
+                      priority="danger"
+                      size="small"
+                      title={t('Remove %s organization', data && data.name)}
+                      message={
+                        <div>
+                          <TextBlock>
+                            {tct(
+                              'Removing the organization, [name] is permanent and cannot be undone! Are you sure you want to continue?',
+                              {
+                                name: data && <strong>{data.name}</strong>,
+                              }
+                            )}
+                          </TextBlock>
+
+                          {hasProjects && (
                             <div>
-                              <TextBlock>
-                                {tct(
-                                  'Removing the organization, [name] is permanent and cannot be undone! Are you sure you want to continue?',
-                                  {
-                                    name: data && <strong>{data.name}</strong>,
-                                  }
+                              <TextBlock noMargin>
+                                {t(
+                                  'This will also remove the following associated projects:'
                                 )}
                               </TextBlock>
-
-                              {hasProjects && (
-                                <div>
-                                  <TextBlock noMargin>
-                                    {t(
-                                      'This will also remove the following associated projects:'
-                                    )}
-                                  </TextBlock>
-                                  <ul className="ref-projects">
-                                    {data.projects.map(project => (
-                                      <li key={project.slug}>{project.slug}</li>
-                                    ))}
-                                  </ul>
-                                </div>
-                              )}
+                              <ul className="ref-projects">
+                                {data.projects.map(project => (
+                                  <li key={project.slug}>{project.slug}</li>
+                                ))}
+                              </ul>
                             </div>
-                          }
-                          onConfirm={this.handleRemoveOrganization}
-                        >
-                          {t('Remove Organization')}
-                        </LinkWithConfirmation>
-                      </div>
-                    </Field>
-                  </Panel>
-                )}
-            </div>
-          )}
+                          )}
+                        </div>
+                      }
+                      onConfirm={this.handleRemoveOrganization}
+                    >
+                      {t('Remove Organization')}
+                    </LinkWithConfirmation>
+                  </div>
+                </Field>
+              </Panel>
+            )}
+          </div>
+        )}
       </div>
     );
   },
diff --git a/src/sentry/static/sentry/app/views/settings/organizationMembers/organizationMemberRow.jsx b/src/sentry/static/sentry/app/views/settings/organizationMembers/organizationMemberRow.jsx
index c1d9c6ad2e..0a4c06bbfc 100644
--- a/src/sentry/static/sentry/app/views/settings/organizationMembers/organizationMemberRow.jsx
+++ b/src/sentry/static/sentry/app/views/settings/organizationMembers/organizationMemberRow.jsx
@@ -146,17 +146,15 @@ export default class OrganizationMemberRow extends React.PureComponent {
                   </div>
                 )}
                 {isInviteSuccessful && <span>Sent!</span>}
-                {!isInviting &&
-                  !isInviteSuccessful &&
-                  canResend && (
-                    <ResendInviteButton
-                      priority="primary"
-                      size="xsmall"
-                      onClick={this.handleSendInvite}
-                    >
-                      {t('Resend invite')}
-                    </ResendInviteButton>
-                  )}
+                {!isInviting && !isInviteSuccessful && canResend && (
+                  <ResendInviteButton
+                    priority="primary"
+                    size="xsmall"
+                    onClick={this.handleSendInvite}
+                  >
+                    {t('Resend invite')}
+                  </ResendInviteButton>
+                )}
               </div>
             ) : (
               <div>
@@ -178,74 +176,68 @@ export default class OrganizationMemberRow extends React.PureComponent {
 
         {showRemoveButton || showLeaveButton ? (
           <Box px={2} w={140}>
-            {showRemoveButton &&
-              canRemoveMember && (
-                <Confirm
-                  message={tct('Are you sure you want to remove [name] from [orgName]?', {
-                    name,
-                    orgName,
-                  })}
-                  onConfirm={this.handleRemove}
-                  onSuccess={tct('Removed [name] from [orgName]', {
-                    name,
-                    orgName,
-                  })}
-                  onError={tct('Error removing [name] from [orgName]', {
-                    name,
-                    orgName,
-                  })}
-                >
-                  <Button icon="icon-circle-subtract" size="small" busy={this.state.busy}>
-                    {t('Remove')}
-                  </Button>
-                </Confirm>
-              )}
-
-            {showRemoveButton &&
-              !canRemoveMember && (
-                <Button
-                  disabled
-                  size="small"
-                  title={t('You do not have access to remove members')}
-                  icon="icon-circle-subtract"
-                >
+            {showRemoveButton && canRemoveMember && (
+              <Confirm
+                message={tct('Are you sure you want to remove [name] from [orgName]?', {
+                  name,
+                  orgName,
+                })}
+                onConfirm={this.handleRemove}
+                onSuccess={tct('Removed [name] from [orgName]', {
+                  name,
+                  orgName,
+                })}
+                onError={tct('Error removing [name] from [orgName]', {
+                  name,
+                  orgName,
+                })}
+              >
+                <Button icon="icon-circle-subtract" size="small" busy={this.state.busy}>
                   {t('Remove')}
                 </Button>
-              )}
+              </Confirm>
+            )}
 
-            {showLeaveButton &&
-              memberCanLeave && (
-                <Confirm
-                  message={tct('Are you sure you want to leave [orgName]?', {
-                    orgName,
-                  })}
-                  onConfirm={this.handleLeave}
-                  onSuccess={tct('Left [orgName]', {
-                    orgName,
-                  })}
-                  onError={tct('Error leaving [orgName]', {
-                    orgName,
-                  })}
-                >
-                  <Button priority="danger" size="small" icon="icon-exit">
-                    {t('Leave')}
-                  </Button>
-                </Confirm>
-              )}
+            {showRemoveButton && !canRemoveMember && (
+              <Button
+                disabled
+                size="small"
+                title={t('You do not have access to remove members')}
+                icon="icon-circle-subtract"
+              >
+                {t('Remove')}
+              </Button>
+            )}
 
-            {showLeaveButton &&
-              !memberCanLeave && (
-                <Button
-                  size="small"
-                  icon="icon-exit"
-                  disabled
-                  title={t(
-                    'You cannot leave the organization as you are the only owner.'
-                  )}
-                >
+            {showLeaveButton && memberCanLeave && (
+              <Confirm
+                message={tct('Are you sure you want to leave [orgName]?', {
+                  orgName,
+                })}
+                onConfirm={this.handleLeave}
+                onSuccess={tct('Left [orgName]', {
+                  orgName,
+                })}
+                onError={tct('Error leaving [orgName]', {
+                  orgName,
+                })}
+              >
+                <Button priority="danger" size="small" icon="icon-exit">
                   {t('Leave')}
                 </Button>
-              )}
+              </Confirm>
+            )}
+
+            {showLeaveButton && !memberCanLeave && (
+              <Button
+                size="small"
+                icon="icon-exit"
+                disabled
+                title={t('You cannot leave the organization as you are the only owner.')}
+              >
+                {t('Leave')}
+              </Button>
+            )}
           </Box>
         ) : null}
       </PanelItem>
diff --git a/src/sentry/static/sentry/app/views/settings/organizationTeams/organizationTeams.jsx b/src/sentry/static/sentry/app/views/settings/organizationTeams/organizationTeams.jsx
index 34ad0e89f4..5f8f28fcb3 100644
--- a/src/sentry/static/sentry/app/views/settings/organizationTeams/organizationTeams.jsx
+++ b/src/sentry/static/sentry/app/views/settings/organizationTeams/organizationTeams.jsx
@@ -54,7 +54,8 @@ class OrganizationTeams extends React.Component {
         onClick={() =>
           openCreateTeamModal({
             organization,
-          })}
+          })
+        }
         icon="icon-circle-add"
       >
         {t('Create Team')}
diff --git a/src/sentry/static/sentry/app/views/settings/organizationTeams/teamMembers.jsx b/src/sentry/static/sentry/app/views/settings/organizationTeams/teamMembers.jsx
index 390245a100..0877c360a5 100644
--- a/src/sentry/static/sentry/app/views/settings/organizationTeams/teamMembers.jsx
+++ b/src/sentry/static/sentry/app/views/settings/organizationTeams/teamMembers.jsx
@@ -183,10 +183,10 @@ const TeamMembers = createReactClass({
   },
 
   /**
- * We perform an API request to support orgs with > 100 members (since that's the max API returns)
- *
- * @param {Event} e React Event when member filter input changes
- */
+   * We perform an API request to support orgs with > 100 members (since that's the max API returns)
+   *
+   * @param {Event} e React Event when member filter input changes
+   */
   handleMemberFilterChange(e) {
     this.setState({dropdownBusy: true});
     this.debouncedFetchMembersRequest(e.target.value);
diff --git a/src/sentry/static/sentry/app/views/settings/organizationTeams/teamProjects.jsx b/src/sentry/static/sentry/app/views/settings/organizationTeams/teamProjects.jsx
index 877693da24..848a87e4bc 100644
--- a/src/sentry/static/sentry/app/views/settings/organizationTeams/teamProjects.jsx
+++ b/src/sentry/static/sentry/app/views/settings/organizationTeams/teamProjects.jsx
@@ -57,7 +57,10 @@ const TeamProjects = createReactClass({
   },
 
   fetchTeamProjects() {
-    const {location, params: {orgId, teamId}} = this.props;
+    const {
+      location,
+      params: {orgId, teamId},
+    } = this.props;
 
     this.setState({loading: true});
 
@@ -83,7 +86,9 @@ const TeamProjects = createReactClass({
   },
 
   fetchUnlinkedProjects(query) {
-    const {params: {orgId, teamId}} = this.props;
+    const {
+      params: {orgId, teamId},
+    } = this.props;
 
     this.api
       .requestPromise(`/organizations/${orgId}/projects/`, {
diff --git a/src/sentry/static/sentry/app/views/settings/project/permissionAlert.jsx b/src/sentry/static/sentry/app/views/settings/project/permissionAlert.jsx
index 3030642591..91d6b15b79 100644
--- a/src/sentry/static/sentry/app/views/settings/project/permissionAlert.jsx
+++ b/src/sentry/static/sentry/app/views/settings/project/permissionAlert.jsx
@@ -14,7 +14,8 @@ const PermissionAlert = ({access, ...props}) => (
             'These settings can only be edited by users with the owner, manager, or admin role.'
           )}
         </Alert>
-      )}
+      )
+    }
   </Access>
 );
 
diff --git a/src/sentry/static/sentry/app/views/settings/project/projectFilters/projectFiltersChart.jsx b/src/sentry/static/sentry/app/views/settings/project/projectFilters/projectFiltersChart.jsx
index a045d2e317..3388635a04 100644
--- a/src/sentry/static/sentry/app/views/settings/project/projectFilters/projectFiltersChart.jsx
+++ b/src/sentry/static/sentry/app/views/settings/project/projectFilters/projectFiltersChart.jsx
@@ -183,26 +183,24 @@ const ProjectFiltersChart = createReactClass({
         <PanelBody>
           {isLoading && <LoadingIndicator />}
           {hasError && <LoadingError onRetry={this.fetchData} />}
-          {hasLoaded &&
-            !this.state.blankStats && (
-              <StackedBarChart
-                series={this.state.formattedData}
-                label="events"
-                barClasses={classes}
-                className="standard-barchart filtered-stats-barchart"
-                tooltip={this.renderTooltip}
-                minHeights={classes.map(p => (p == 'legacy-browsers' ? 1 : 0))}
-              />
-            )}
-          {hasLoaded &&
-            this.state.blankStats && (
-              <EmptyMessage
-                title={t('Nothing filtered in the last 30 days.')}
-                description={t(
-                  'Issues filtered as a result of your settings below will be shown here.'
-                )}
-              />
-            )}
+          {hasLoaded && !this.state.blankStats && (
+            <StackedBarChart
+              series={this.state.formattedData}
+              label="events"
+              barClasses={classes}
+              className="standard-barchart filtered-stats-barchart"
+              tooltip={this.renderTooltip}
+              minHeights={classes.map(p => (p == 'legacy-browsers' ? 1 : 0))}
+            />
+          )}
+          {hasLoaded && this.state.blankStats && (
+            <EmptyMessage
+              title={t('Nothing filtered in the last 30 days.')}
+              description={t(
+                'Issues filtered as a result of your settings below will be shown here.'
+              )}
+            />
+          )}
         </PanelBody>
       </Panel>
     );
diff --git a/src/sentry/static/sentry/app/views/settings/project/projectFilters/projectFiltersSettings.jsx b/src/sentry/static/sentry/app/views/settings/project/projectFilters/projectFiltersSettings.jsx
index 8433304304..4ad08e22cb 100644
--- a/src/sentry/static/sentry/app/views/settings/project/projectFilters/projectFiltersSettings.jsx
+++ b/src/sentry/static/sentry/app/views/settings/project/projectFilters/projectFiltersSettings.jsx
@@ -199,7 +199,8 @@ class ProjectFiltersSettings extends AsyncComponent {
     <Feature
       features={['projects:custom-inbound-filters']}
       renderDisabled={({children, ...props}) =>
-        children({...props, renderDisabled: this.renderDisabledCustomFilters})}
+        children({...props, renderDisabled: this.renderDisabledCustomFilters})
+      }
     >
       {({hasFeature, organization, renderDisabled, ...featureProps}) => (
         <React.Fragment>
diff --git a/src/sentry/static/sentry/app/views/settings/project/projectKeys/index.jsx b/src/sentry/static/sentry/app/views/settings/project/projectKeys/index.jsx
index 68c4e2fc86..36a458c70c 100644
--- a/src/sentry/static/sentry/app/views/settings/project/projectKeys/index.jsx
+++ b/src/sentry/static/sentry/app/views/settings/project/projectKeys/index.jsx
@@ -160,7 +160,9 @@ const KeyRow = createReactClass({
             )}
           </Box>
           <Flex align="center">
-            {controls.map((c, n) => <KeyControl key={n}> {c}</KeyControl>)}
+            {controls.map((c, n) => (
+              <KeyControl key={n}> {c}</KeyControl>
+            ))}
           </Flex>
         </PanelHeader>
 
diff --git a/src/sentry/static/sentry/app/views/settings/project/projectKeys/projectKeyDetails.jsx b/src/sentry/static/sentry/app/views/settings/project/projectKeys/projectKeyDetails.jsx
index a4b2a7235b..a4fb61f7a8 100644
--- a/src/sentry/static/sentry/app/views/settings/project/projectKeys/projectKeyDetails.jsx
+++ b/src/sentry/static/sentry/app/views/settings/project/projectKeys/projectKeyDetails.jsx
@@ -208,7 +208,8 @@ class KeyRateLimitsForm extends React.Component {
         <Feature
           features={['projects:rate-limits']}
           renderDisabled={({children, ...props}) =>
-            children({...props, renderDisabled: disabledAlert})}
+            children({...props, renderDisabled: disabledAlert})
+          }
         >
           {({hasFeature, features, organization, project, renderDisabled}) => (
             <Panel>
@@ -409,8 +410,7 @@ const KeySettings = createReactClass({
                       inline={false}
                       flexibleControlStateSize
                     >
-                      <TextCopyInput
-                      >{`<script src='${loaderLink}' crossorigin="anonymous"></script>`}</TextCopyInput>
+                      <TextCopyInput>{`<script src='${loaderLink}' crossorigin="anonymous"></script>`}</TextCopyInput>
                     </Field>
                     <SelectField
                       name="browserSdkVersion"
diff --git a/src/sentry/static/sentry/app/views/settings/project/projectOwnership/ownerInput.jsx b/src/sentry/static/sentry/app/views/settings/project/projectOwnership/ownerInput.jsx
index cead0257a2..a83ca413ed 100644
--- a/src/sentry/static/sentry/app/views/settings/project/projectOwnership/ownerInput.jsx
+++ b/src/sentry/static/sentry/app/views/settings/project/projectOwnership/ownerInput.jsx
@@ -105,9 +105,11 @@ class OwnerInput extends React.Component {
 
   mentionableTeams() {
     const {project} = this.props;
-    return (ProjectsStore.getBySlug(project.slug) || {
-      teams: [],
-    }).teams.map(team => ({
+    return (
+      ProjectsStore.getBySlug(project.slug) || {
+        teams: [],
+      }
+    ).teams.map(team => ({
       id: team.id,
       display: `#${team.slug}`,
       email: team.id,
diff --git a/src/sentry/static/sentry/app/views/settings/project/projectOwnership/ruleBuilder.jsx b/src/sentry/static/sentry/app/views/settings/project/projectOwnership/ruleBuilder.jsx
index a089953832..7b6b74078f 100644
--- a/src/sentry/static/sentry/app/views/settings/project/projectOwnership/ruleBuilder.jsx
+++ b/src/sentry/static/sentry/app/views/settings/project/projectOwnership/ruleBuilder.jsx
@@ -67,11 +67,10 @@ class RuleBuilder extends React.Component {
     }
 
     const ownerText = owners
-      .map(
-        owner =>
-          owner.actor.type === 'team'
-            ? `#${owner.actor.name}`
-            : memberListStore.getById(owner.actor.id).email
+      .map(owner =>
+        owner.actor.type === 'team'
+          ? `#${owner.actor.name}`
+          : memberListStore.getById(owner.actor.id).email
       )
       .join(' ');
 
diff --git a/src/sentry/static/sentry/app/views/settings/project/projectServiceHooks.jsx b/src/sentry/static/sentry/app/views/settings/project/projectServiceHooks.jsx
index 1a3e045991..c135593c86 100644
--- a/src/sentry/static/sentry/app/views/settings/project/projectServiceHooks.jsx
+++ b/src/sentry/static/sentry/app/views/settings/project/projectServiceHooks.jsx
@@ -165,7 +165,8 @@ export default class ProjectServiceHooks extends AsyncView {
                 size="small"
                 priority="primary"
               >
-                <span className="icon-plus" />&nbsp;{t('Create New Hook')}
+                <span className="icon-plus" />
+                &nbsp;{t('Create New Hook')}
               </Button>
             ) : null
           }
diff --git a/src/sentry/static/sentry/app/views/settings/projectAlerts/ruleEditor/ruleNodeList.jsx b/src/sentry/static/sentry/app/views/settings/projectAlerts/ruleEditor/ruleNodeList.jsx
index b50f9c568d..dd93d6db17 100644
--- a/src/sentry/static/sentry/app/views/settings/projectAlerts/ruleEditor/ruleNodeList.jsx
+++ b/src/sentry/static/sentry/app/views/settings/projectAlerts/ruleEditor/ruleNodeList.jsx
@@ -38,10 +38,12 @@ class RuleNodeList extends React.Component {
           <SelectControl
             onChange={obj => this.props.handleAddRow(obj ? obj.value : obj)}
             style={{width: '100%'}}
-            options={this.props.nodes.filter(n => n.enabled).map(node => ({
-              value: node.id,
-              label: node.label,
-            }))}
+            options={this.props.nodes
+              .filter(n => n.enabled)
+              .map(node => ({
+                value: node.id,
+                label: node.label,
+              }))}
           />
         </fieldset>
       </div>
diff --git a/src/sentry/static/sentry/app/views/settings/projectGeneralSettings.jsx b/src/sentry/static/sentry/app/views/settings/projectGeneralSettings.jsx
index ce3863881f..33db0c246a 100644
--- a/src/sentry/static/sentry/app/views/settings/projectGeneralSettings.jsx
+++ b/src/sentry/static/sentry/app/views/settings/projectGeneralSettings.jsx
@@ -114,33 +114,32 @@ class ProjectGeneralSettings extends AsyncView {
             'This project cannot be removed. It is used internally by the Sentry server.'
           )}
 
-        {isProjectAdmin &&
-          !isInternal && (
-            <Confirm
-              onConfirm={this.handleRemoveProject}
-              priority="danger"
-              title={t('Remove project?')}
-              confirmText={t('Remove project')}
-              message={
-                <div>
-                  <TextBlock>
-                    <strong>
-                      {t('Removing this project is permanent and cannot be undone!')}
-                    </strong>
-                  </TextBlock>
-                  <TextBlock>
-                    {t('This will also remove all associated event data.')}
-                  </TextBlock>
-                </div>
-              }
-            >
+        {isProjectAdmin && !isInternal && (
+          <Confirm
+            onConfirm={this.handleRemoveProject}
+            priority="danger"
+            title={t('Remove project?')}
+            confirmText={t('Remove project')}
+            message={
               <div>
-                <Button className="ref-remove-project" type="button" priority="danger">
-                  {t('Remove Project')}
-                </Button>
+                <TextBlock>
+                  <strong>
+                    {t('Removing this project is permanent and cannot be undone!')}
+                  </strong>
+                </TextBlock>
+                <TextBlock>
+                  {t('This will also remove all associated event data.')}
+                </TextBlock>
               </div>
-            </Confirm>
-          )}
+            }
+          >
+            <div>
+              <Button className="ref-remove-project" type="button" priority="danger">
+                {t('Remove Project')}
+              </Button>
+            </div>
+          </Confirm>
+        )}
       </Field>
     );
   }
@@ -171,58 +170,57 @@ class ProjectGeneralSettings extends AsyncView {
             'This project cannot be transferred. It is used internally by the Sentry server.'
           )}
 
-        {isProjectAdmin &&
-          !isInternal && (
-            <Confirm
-              onConfirm={this.handleTransferProject}
-              priority="danger"
-              title={`${t('Transfer project')}?`}
-              confirmText={t('Transfer project')}
-              renderMessage={({confirm}) => (
-                <div>
-                  <TextBlock>
-                    <strong>
-                      {t('Transferring this project is permanent and cannot be undone!')}
-                    </strong>
-                  </TextBlock>
-                  <TextBlock>
-                    {t(
-                      'Please enter the organization owner you would like to transfer this project to.'
-                    )}
-                  </TextBlock>
-                  <Panel>
-                    <Form
-                      hideFooter
-                      onFieldChange={this.handleTransferFieldChange}
-                      onSubmit={(data, onSuccess, onError, e) => {
-                        e.stopPropagation();
-                        confirm();
-                      }}
-                    >
-                      <TextField
-                        name="email"
-                        label={t('Organization Owner')}
-                        placeholder="admin@example.com"
-                        required
-                        help={tct(
-                          'A request will be emailed to the new owner in order to transfer [project] to a new organization.',
-                          {
-                            project: <strong> {project.slug} </strong>,
-                          }
-                        )}
-                      />
-                    </Form>
-                  </Panel>
-                </div>
-              )}
-            >
+        {isProjectAdmin && !isInternal && (
+          <Confirm
+            onConfirm={this.handleTransferProject}
+            priority="danger"
+            title={`${t('Transfer project')}?`}
+            confirmText={t('Transfer project')}
+            renderMessage={({confirm}) => (
               <div>
-                <Button className="ref-transfer-project" type="button" priority="danger">
-                  {t('Transfer Project')}
-                </Button>
+                <TextBlock>
+                  <strong>
+                    {t('Transferring this project is permanent and cannot be undone!')}
+                  </strong>
+                </TextBlock>
+                <TextBlock>
+                  {t(
+                    'Please enter the organization owner you would like to transfer this project to.'
+                  )}
+                </TextBlock>
+                <Panel>
+                  <Form
+                    hideFooter
+                    onFieldChange={this.handleTransferFieldChange}
+                    onSubmit={(data, onSuccess, onError, e) => {
+                      e.stopPropagation();
+                      confirm();
+                    }}
+                  >
+                    <TextField
+                      name="email"
+                      label={t('Organization Owner')}
+                      placeholder="admin@example.com"
+                      required
+                      help={tct(
+                        'A request will be emailed to the new owner in order to transfer [project] to a new organization.',
+                        {
+                          project: <strong> {project.slug} </strong>,
+                        }
+                      )}
+                    />
+                  </Form>
+                </Panel>
               </div>
-            </Confirm>
-          )}
+            )}
+          >
+            <div>
+              <Button className="ref-transfer-project" type="button" priority="danger">
+                {t('Transfer Project')}
+              </Button>
+            </div>
+          </Confirm>
+        )}
       </Field>
     );
   }
diff --git a/src/sentry/static/sentry/app/views/stream/actions.jsx b/src/sentry/static/sentry/app/views/stream/actions.jsx
index b0a24fbf37..a37f45b45d 100644
--- a/src/sentry/static/sentry/app/views/stream/actions.jsx
+++ b/src/sentry/static/sentry/app/views/stream/actions.jsx
@@ -511,47 +511,46 @@ const StreamActions = createReactClass({
           </Box>
         </StyledFlex>
 
-        {!allResultsVisible &&
-          pageSelected && (
-            <div className="row stream-select-all-notice">
-              <div className="col-md-12">
-                {allInQuerySelected ? (
-                  <strong>
+        {!allResultsVisible && pageSelected && (
+          <div className="row stream-select-all-notice">
+            <div className="col-md-12">
+              {allInQuerySelected ? (
+                <strong>
+                  {queryCount >= BULK_LIMIT
+                    ? tct(
+                        'Selected up to the first [count] issues that match this search query.',
+                        {
+                          count: BULK_LIMIT_STR,
+                        }
+                      )
+                    : tct('Selected all [count] issues that match this search query.', {
+                        count: queryCount,
+                      })}
+                </strong>
+              ) : (
+                <span>
+                  {tn(
+                    '%s issue on this page selected.',
+                    '%s issues on this page selected.',
+                    numIssues
+                  )}
+                  <a onClick={this.selectAll}>
                     {queryCount >= BULK_LIMIT
                       ? tct(
-                          'Selected up to the first [count] issues that match this search query.',
+                          'Select the first [count] issues that match this search query.',
                           {
                             count: BULK_LIMIT_STR,
                           }
                         )
-                      : tct('Selected all [count] issues that match this search query.', {
+                      : tct('Select all [count] issues that match this search query.', {
                           count: queryCount,
                         })}
-                  </strong>
-                ) : (
-                  <span>
-                    {tn(
-                      '%s issue on this page selected.',
-                      '%s issues on this page selected.',
-                      numIssues
-                    )}
-                    <a onClick={this.selectAll}>
-                      {queryCount >= BULK_LIMIT
-                        ? tct(
-                            'Select the first [count] issues that match this search query.',
-                            {
-                              count: BULK_LIMIT_STR,
-                            }
-                          )
-                        : tct('Select all [count] issues that match this search query.', {
-                            count: queryCount,
-                          })}
-                    </a>
-                  </span>
-                )}
-              </div>
+                  </a>
+                </span>
+              )}
             </div>
-          )}
+          </div>
+        )}
       </Sticky>
     );
   },
diff --git a/src/sentry/static/sentry/app/views/stream/stream.jsx b/src/sentry/static/sentry/app/views/stream/stream.jsx
index d90fc3f69d..163d8bb12c 100644
--- a/src/sentry/static/sentry/app/views/stream/stream.jsx
+++ b/src/sentry/static/sentry/app/views/stream/stream.jsx
@@ -381,8 +381,9 @@ const Stream = createReactClass({
         if (jqXHR.getResponseHeader('X-Sentry-Direct-Hit') === '1') {
           if (data && data[0].matchingEventId) {
             const {project, id, matchingEventId, matchingEventEnvironment} = data[0];
-            let redirect = `/${this.props.params
-              .orgId}/${project.slug}/issues/${id}/events/${matchingEventId}/`;
+            let redirect = `/${this.props.params.orgId}/${
+              project.slug
+            }/issues/${id}/events/${matchingEventId}/`;
             // Also direct to the environment of this specific event if this
             // key exists. We need to explicitly check against undefined becasue
             // an environment name may be an empty string, which is perfectly valid.
diff --git a/src/sentry/static/sentry/app/views/userFeedback/container.jsx b/src/sentry/static/sentry/app/views/userFeedback/container.jsx
index 95d5d3081d..6f81888f1b 100644
--- a/src/sentry/static/sentry/app/views/userFeedback/container.jsx
+++ b/src/sentry/static/sentry/app/views/userFeedback/container.jsx
@@ -15,7 +15,12 @@ export default class UserFeedbackContainer extends React.Component {
   };
 
   render() {
-    const {location: {pathname, query}, pageLinks, children, status} = this.props;
+    const {
+      location: {pathname, query},
+      pageLinks,
+      children,
+      status,
+    } = this.props;
 
     const unresolvedQuery = omit(query, 'status');
     const allIssuesQuery = {...query, status: ''};
diff --git a/src/sentry/static/sentry/app/views/userFeedback/organizationUserFeedback.jsx b/src/sentry/static/sentry/app/views/userFeedback/organizationUserFeedback.jsx
index 9a0d7ca89c..e64ea92233 100644
--- a/src/sentry/static/sentry/app/views/userFeedback/organizationUserFeedback.jsx
+++ b/src/sentry/static/sentry/app/views/userFeedback/organizationUserFeedback.jsx
@@ -23,7 +23,10 @@ class OrganizationUserFeedback extends AsyncView {
   };
 
   getEndpoints() {
-    const {organization, location: {search}} = this.props;
+    const {
+      organization,
+      location: {search},
+    } = this.props;
 
     return [
       [
diff --git a/src/sentry/static/sentry/app/views/userFeedback/projectUserFeedback.jsx b/src/sentry/static/sentry/app/views/userFeedback/projectUserFeedback.jsx
index 63dffc0c9a..13e2b92cae 100644
--- a/src/sentry/static/sentry/app/views/userFeedback/projectUserFeedback.jsx
+++ b/src/sentry/static/sentry/app/views/userFeedback/projectUserFeedback.jsx
@@ -60,7 +60,10 @@ const ProjectUserFeedback = createReactClass({
 
   componentWillMount() {
     // Redirect any Sentry 10 user that has followed an old link and ended up here
-    const {organization, params: {orgId}} = this.props;
+    const {
+      organization,
+      params: {orgId},
+    } = this.props;
     const hasSentry10 = new Set(organization.features).has('sentry10');
     if (hasSentry10) {
       const projectId = this.context.project.id;
@@ -215,7 +218,10 @@ const ProjectUserFeedback = createReactClass({
 
   render() {
     const {location} = this.props;
-    const {project: {slug: projectSlug}, organization: {name: orgName}} = this.context;
+    const {
+      project: {slug: projectSlug},
+      organization: {name: orgName},
+    } = this.context;
 
     return (
       <DocumentTitle title={`User Feedback - ${projectSlug} - ${orgName} - Sentry`}>
diff --git a/tests/js/helpers/initializeOrg.jsx b/tests/js/helpers/initializeOrg.jsx
index d662132c95..152232581c 100644
--- a/tests/js/helpers/initializeOrg.jsx
+++ b/tests/js/helpers/initializeOrg.jsx
@@ -5,15 +5,14 @@
  *   - router
  *   - context that contains org + projects + router
  */
-export function initializeOrg(
-  {
-    organization: additionalOrg,
-    project: additionalProject,
-    projects: additionalProjects,
-    router: additionalRouter,
-  } = {}
-) {
-  const projects = (additionalProjects ||
+export function initializeOrg({
+  organization: additionalOrg,
+  project: additionalProject,
+  projects: additionalProjects,
+  router: additionalRouter,
+} = {}) {
+  const projects = (
+    additionalProjects ||
     (additionalProject && [additionalProject]) || [{}]
   ).map(p => TestStubs.Project(p));
   const [project] = projects;
diff --git a/tests/js/spec/components/events/eventCause.spec.jsx b/tests/js/spec/components/events/eventCause.spec.jsx
index 65306dc85e..68e31ad921 100644
--- a/tests/js/spec/components/events/eventCause.spec.jsx
+++ b/tests/js/spec/components/events/eventCause.spec.jsx
@@ -17,7 +17,9 @@ describe('EventCause', function() {
     project = TestStubs.Project();
     Client.addMockResponse({
       method: 'GET',
-      url: `/projects/${organization.slug}/${project.slug}/events/${event.id}/committers/`,
+      url: `/projects/${organization.slug}/${project.slug}/events/${
+        event.id
+      }/committers/`,
       body: {
         committers: [
           {
diff --git a/tests/js/spec/components/events/interfaces/openInButton.spec.jsx b/tests/js/spec/components/events/interfaces/openInButton.spec.jsx
index 31c01209a1..3b9bf60447 100644
--- a/tests/js/spec/components/events/interfaces/openInButton.spec.jsx
+++ b/tests/js/spec/components/events/interfaces/openInButton.spec.jsx
@@ -21,16 +21,18 @@ describe('OpenInButton', function() {
     it('renders button', async function() {
       Client.addMockResponse({
         method: 'GET',
-        url: `/organizations/${org.slug}/sentry-app-components/?filter=stacktrace-link&projectId=${group
-          .project.id}`,
+        url: `/organizations/${
+          org.slug
+        }/sentry-app-components/?filter=stacktrace-link&projectId=${group.project.id}`,
         body: [
           {
             uuid: 'ed517da4-a324-44c0-aeea-1894cd9923fb',
             type: 'stacktrace-link',
             schema: {
               uri: '/redirection',
-              url: `http://localhost:5000/redirection?installationId=${install.uuid}&projectSlug=${group
-                .project.slug}`,
+              url: `http://localhost:5000/redirection?installationId=${
+                install.uuid
+              }&projectSlug=${group.project.slug}`,
             },
             sentryApp: {
               uuid: 'b468fed3-afba-4917-80d6-bdac99c1ec05',
@@ -53,8 +55,9 @@ describe('OpenInButton', function() {
       await tick();
       wrapper.update();
       expect(wrapper.state().components[0].schema.url).toEqual(
-        `http://localhost:5000/redirection?installationId=${install.uuid}&projectSlug=${group
-          .project.slug}`
+        `http://localhost:5000/redirection?installationId=${install.uuid}&projectSlug=${
+          group.project.slug
+        }`
       );
       const baseUrl = 'http://localhost:5000/redirection';
       const queryParams = {
@@ -73,8 +76,9 @@ describe('OpenInButton', function() {
     it('renders button', async function() {
       Client.addMockResponse({
         method: 'GET',
-        url: `/organizations/${org.slug}/sentry-app-components/?filter=stacktrace-link&projectId=${group
-          .project.id}`,
+        url: `/organizations/${
+          org.slug
+        }/sentry-app-components/?filter=stacktrace-link&projectId=${group.project.id}`,
         body: [],
       });
       const wrapper = mount(
@@ -98,8 +102,9 @@ describe('OpenInButton', function() {
     it('does not make api request', async function() {
       const response = Client.addMockResponse({
         method: 'GET',
-        url: `/organizations/${org.slug}/sentry-app-components/?filter=stacktrace-link&projectId=${group
-          .project.id}`,
+        url: `/organizations/${
+          org.slug
+        }/sentry-app-components/?filter=stacktrace-link&projectId=${group.project.id}`,
         body: [],
       });
       const wrapper = mount(
@@ -118,8 +123,9 @@ describe('OpenInButton', function() {
     it('does not make api request', async function() {
       const response = Client.addMockResponse({
         method: 'GET',
-        url: `/organizations/${org.slug}/sentry-app-components/?filter=stacktrace-link&projectId=${group
-          .project.id}`,
+        url: `/organizations/${
+          org.slug
+        }/sentry-app-components/?filter=stacktrace-link&projectId=${group.project.id}`,
         body: [],
       });
       const wrapper = mount(
diff --git a/tests/js/spec/components/events/meta/metaData.spec.jsx b/tests/js/spec/components/events/meta/metaData.spec.jsx
index e5f0b00e99..39876148f2 100644
--- a/tests/js/spec/components/events/meta/metaData.spec.jsx
+++ b/tests/js/spec/components/events/meta/metaData.spec.jsx
@@ -17,12 +17,13 @@ describe('MetaData', function() {
       </MetaData>
     );
 
-    expect(
-      renderProp
-    ).toHaveBeenCalledWith('python err A949AE01EBB07300D62AE0178F0944DD21F8C98C err', {
-      len: 29,
-      rem: [['device_id', 'p', 11, 51]],
-    });
+    expect(renderProp).toHaveBeenCalledWith(
+      'python err A949AE01EBB07300D62AE0178F0944DD21F8C98C err',
+      {
+        len: 29,
+        rem: [['device_id', 'p', 11, 51]],
+      }
+    );
   });
 
   it('has the right value', function() {
diff --git a/tests/js/spec/components/group/sentryAppExternalIssueForm.spec.jsx b/tests/js/spec/components/group/sentryAppExternalIssueForm.spec.jsx
index 3b35816282..4c3c09a1b7 100644
--- a/tests/js/spec/components/group/sentryAppExternalIssueForm.spec.jsx
+++ b/tests/js/spec/components/group/sentryAppExternalIssueForm.spec.jsx
@@ -56,7 +56,9 @@ describe('SentryAppExternalIssueForm', () => {
     });
 
     it('submits to the New External Issue endpoint', () => {
-      const url = `/sentry-app-installations/${sentryAppInstallation.uuid}/external-issues/`;
+      const url = `/sentry-app-installations/${
+        sentryAppInstallation.uuid
+      }/external-issues/`;
       expect(wrapper.find('Form').prop('apiEndpoint')).toEqual(url);
       expect(wrapper.find('Form').prop('apiMethod')).toEqual('POST');
     });
@@ -111,7 +113,9 @@ describe('SentryAppExternalIssueForm', () => {
     });
 
     it('submits to the New External Issue endpoint', () => {
-      const url = `/sentry-app-installations/${sentryAppInstallation.uuid}/external-issues/`;
+      const url = `/sentry-app-installations/${
+        sentryAppInstallation.uuid
+      }/external-issues/`;
       expect(wrapper.find('Form').prop('apiEndpoint')).toEqual(url);
       expect(wrapper.find('Form').prop('apiMethod')).toEqual('POST');
     });
diff --git a/tests/js/spec/views/organizationDiscover/discover.spec.jsx b/tests/js/spec/views/organizationDiscover/discover.spec.jsx
index bf1ae9962b..41ef349f46 100644
--- a/tests/js/spec/views/organizationDiscover/discover.spec.jsx
+++ b/tests/js/spec/views/organizationDiscover/discover.spec.jsx
@@ -385,7 +385,9 @@ describe('Discover', function() {
       it('resets query builder and state', function() {
         wrapper.instance().reset();
         expect(queryBuilder.reset).toHaveBeenCalled();
-        const {data: {baseQuery, byDayQuery}} = wrapper.instance().state;
+        const {
+          data: {baseQuery, byDayQuery},
+        } = wrapper.instance().state;
         expect(baseQuery.query).toBeNull();
         expect(baseQuery.data).toBeNull();
         expect(byDayQuery.query).toBeNull();
diff --git a/tests/js/spec/views/organizationEvents/searchBar.spec.jsx b/tests/js/spec/views/organizationEvents/searchBar.spec.jsx
index 34837c0464..9753bfc6a9 100644
--- a/tests/js/spec/views/organizationEvents/searchBar.spec.jsx
+++ b/tests/js/spec/views/organizationEvents/searchBar.spec.jsx
@@ -8,8 +8,7 @@ const focusInput = el => el.find('input[name="query"]').simulate('focus');
 const selectFirstAutocompleteItem = el => {
   focusInput(el);
 
-  el
-    .find('.search-autocomplete-item')
+  el.find('.search-autocomplete-item')
     .first()
     .simulate('click');
   const input = el.find('input');
@@ -19,8 +18,7 @@ const selectFirstAutocompleteItem = el => {
   return el;
 };
 const setQuery = (el, query) => {
-  el
-    .find('input')
+  el.find('input')
     .simulate('change', {target: {value: query}})
     .getDOMNode()
     .setSelectionRange(query.length, query.length);
diff --git a/tests/js/spec/views/passwordForm.spec.jsx b/tests/js/spec/views/passwordForm.spec.jsx
index ed691d335e..4b95d75a57 100644
--- a/tests/js/spec/views/passwordForm.spec.jsx
+++ b/tests/js/spec/views/passwordForm.spec.jsx
@@ -61,9 +61,7 @@ describe('PasswordForm', function() {
     expect(putMock).not.toHaveBeenCalled();
   });
 
-  it('calls API when all fields are validated and clears form on success', function(
-    done
-  ) {
+  it('calls API when all fields are validated and clears form on success', function(done) {
     wrapper.find('input[name="password"]').simulate('change', {target: {value: 'test'}});
     wrapper
       .find('input[name="passwordNew"]')
diff --git a/tests/js/spec/views/settings/organizationIntegrations/sentryAppInstallations.spec.jsx b/tests/js/spec/views/settings/organizationIntegrations/sentryAppInstallations.spec.jsx
index b36e55315d..de0314a494 100644
--- a/tests/js/spec/views/settings/organizationIntegrations/sentryAppInstallations.spec.jsx
+++ b/tests/js/spec/views/settings/organizationIntegrations/sentryAppInstallations.spec.jsx
@@ -131,7 +131,9 @@ describe('Sentry App Installations', function() {
         wrapper.instance().install(sentryApp);
         await tick();
         expect(window.location.assign).toHaveBeenCalledWith(
-          `${sentryApp.redirectUrl}?code=${install.code}&installationId=${install.uuid}&orgSlug=${org.slug}`
+          `${sentryApp.redirectUrl}?code=${install.code}&installationId=${
+            install.uuid
+          }&orgSlug=${org.slug}`
         );
       });
 
@@ -155,7 +157,9 @@ describe('Sentry App Installations', function() {
         wrapper.instance().install(sentryAppWithQuery);
         await tick();
         expect(window.location.assign).toHaveBeenCalledWith(
-          `https://example.com/setup?code=${install.code}&hello=1&installationId=${install.uuid}&orgSlug=${org.slug}`
+          `https://example.com/setup?code=${install.code}&hello=1&installationId=${
+            install.uuid
+          }&orgSlug=${org.slug}`
         );
       });
     });
diff --git a/tests/js/spec/views/teamMembers.spec.jsx b/tests/js/spec/views/teamMembers.spec.jsx
index c2a06f4d2c..9bf69cc451 100644
--- a/tests/js/spec/views/teamMembers.spec.jsx
+++ b/tests/js/spec/views/teamMembers.spec.jsx
@@ -33,8 +33,9 @@ describe('TeamMembers', function() {
   });
 
   it('can remove a team', function() {
-    const endpoint = `/organizations/${org.slug}/members/${members[0]
-      .id}/teams/${team.slug}/`;
+    const endpoint = `/organizations/${org.slug}/members/${members[0].id}/teams/${
+      team.slug
+    }/`;
     const mock = Client.addMockResponse({
       url: endpoint,
       method: 'DELETE',
diff --git a/yarn.lock b/yarn.lock
index d1e3ee517c..746e382f4a 100644
--- a/yarn.lock
+++ b/yarn.lock
@@ -10647,10 +10647,10 @@ preserve@^0.2.0:
   resolved "https://registry.yarnpkg.com/preserve/-/preserve-0.2.0.tgz#815ed1f6ebc65926f865b310c0713bcb3315ce4b"
   integrity sha1-gV7R9uvGWSb4ZbMQwHE7yzMVzks=
 
-prettier@1.7.4:
-  version "1.7.4"
-  resolved "https://registry.yarnpkg.com/prettier/-/prettier-1.7.4.tgz#5e8624ae9363c80f95ec644584ecdf55d74f93fa"
-  integrity sha1-XoYkrpNjyA+V7GRFhOzfVddPk/o=
+prettier@1.16.4:
+  version "1.16.4"
+  resolved "https://registry.yarnpkg.com/prettier/-/prettier-1.16.4.tgz#73e37e73e018ad2db9c76742e2647e21790c9717"
+  integrity sha512-ZzWuos7TI5CKUeQAtFd6Zhm2s6EpAD/ZLApIhsF9pRvRtM1RFo61dM/4MSRUA0SuLugA/zgrZD8m0BaY46Og7g==
 
 prettier@^1.14.3:
   version "1.15.3"
