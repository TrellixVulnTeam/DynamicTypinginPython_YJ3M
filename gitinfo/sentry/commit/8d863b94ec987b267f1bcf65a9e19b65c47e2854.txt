commit 8d863b94ec987b267f1bcf65a9e19b65c47e2854
Author: Chris Clark <christopherchristopherclark@gmail.com>
Date:   Mon Nov 5 10:45:06 2018 -0800

    design touches (#10406)

diff --git a/src/sentry/static/sentry/app/components/idBadge/userBadge.jsx b/src/sentry/static/sentry/app/components/idBadge/userBadge.jsx
index ba4789b3be..d3553a0e9e 100644
--- a/src/sentry/static/sentry/app/components/idBadge/userBadge.jsx
+++ b/src/sentry/static/sentry/app/components/idBadge/userBadge.jsx
@@ -83,7 +83,7 @@ const StyledName = styled(
   ({useLink, hideEmail, to, ...props}) =>
     useLink ? <Link to={to} {...props} /> : <span {...props} />
 )`
-  font-weight: bold;
+  font-weight: ${p => (p.hideEmail ? 'inherit' : 'bold')};
   line-height: 1.15em;
   ${overflowEllipsis};
 `;
diff --git a/src/sentry/static/sentry/app/views/organizationEvents/events.jsx b/src/sentry/static/sentry/app/views/organizationEvents/events.jsx
index 816a2c3f76..fd9c23d3ff 100644
--- a/src/sentry/static/sentry/app/views/organizationEvents/events.jsx
+++ b/src/sentry/static/sentry/app/views/organizationEvents/events.jsx
@@ -1,6 +1,8 @@
 import React from 'react';
+import styled from 'react-emotion';
+import {Flex} from 'grid-emotion';
 
-import {Panel, PanelHeader} from 'app/components/panels';
+import {Panel} from 'app/components/panels';
 import {getParams} from 'app/views/organizationEvents/utils';
 import {t} from 'app/locale';
 import AsyncView from 'app/views/asyncView';
@@ -50,22 +52,26 @@ class OrganizationEvents extends AsyncView {
 
     return (
       <React.Fragment>
-        <Panel>
-          <PanelHeader hasButtons>
-            {t('Events')}
-            {this.renderSearchInput({})}
-          </PanelHeader>
+        <Flex align="center" justify="space-between" mb={2}>
+          <HeaderTitle>{t('Events')}</HeaderTitle>
+          {this.renderSearchInput({})}
+        </Flex>
 
+        <Panel>
           <EventsChart organization={organization} />
-
-          <EventsTable loading={loading} events={events} organization={organization} />
         </Panel>
 
+        <EventsTable loading={loading} events={events} organization={organization} />
+
         <Pagination pageLinks={eventsPageLinks} />
       </React.Fragment>
     );
   }
 }
 
+const HeaderTitle = styled('h4')`
+  margin: 0;
+`;
+
 export default withOrganization(OrganizationEvents);
 export {OrganizationEvents};
diff --git a/src/sentry/static/sentry/app/views/organizationEvents/eventsTable.jsx b/src/sentry/static/sentry/app/views/organizationEvents/eventsTable.jsx
index 6d834280b1..301ad89263 100644
--- a/src/sentry/static/sentry/app/views/organizationEvents/eventsTable.jsx
+++ b/src/sentry/static/sentry/app/views/organizationEvents/eventsTable.jsx
@@ -3,13 +3,15 @@ import PropTypes from 'prop-types';
 import React from 'react';
 import styled from 'react-emotion';
 
-import {PanelBody} from 'app/components/panels';
+import {t} from 'app/locale';
+import {PanelBody, Panel, PanelHeader} from 'app/components/panels';
 import DateTime from 'app/components/dateTime';
 import EmptyStateWarning from 'app/components/emptyStateWarning';
 import EventsContext from 'app/views/organizationEvents/eventsContext';
 import IdBadge from 'app/components/idBadge';
 import SentryTypes from 'app/sentryTypes';
-import Tooltip from 'app/components/tooltip';
+import overflowEllipsis from 'app/styles/overflowEllipsis';
+import space from 'app/styles/space';
 
 class EventsTable extends React.PureComponent {
   static propTypes = {
@@ -45,42 +47,50 @@ class EventsTable extends React.PureComponent {
     const hasEvents = events && !!events.length;
 
     return (
-      <React.Fragment>
+      <Panel>
+        <PanelHeader>
+          <TableLayout>
+            <div>{t('Event')}</div>
+            <div>{t('Project')}</div>
+            <div>{t('User')}</div>
+            <div>{t('Time')}</div>
+          </TableLayout>
+        </PanelHeader>
         {!hasEvents && <EmptyStateWarning>No events</EmptyStateWarning>}
         {hasEvents && (
-          <Wrapper>
-            <Table>
-              <tbody>
-                {events.map((event, eventIdx) => {
-                  const project = this.projectsMap.get(event.projectID);
-                  return (
-                    <tr key={`${project.slug}-${event.eventID}`}>
-                      <Td>
-                        <Link to={`/${organization.slug}/${project.slug}/`}>
-                          <Tooltip title={project.slug}>
-                            <IdBadge project={project} hideName />
-                          </Tooltip>
-                        </Link>
-                      </Td>
-
-                      <Td>
-                        <EventTitle>{this.getEventTitle(event)}</EventTitle>
-                      </Td>
-
-                      <Td>
-                        <IdBadge user={event.user} hideEmail />
-                        <DateRow>
-                          <DateTime date={new Date(event.dateCreated)} />
-                        </DateRow>
-                      </Td>
-                    </tr>
-                  );
-                })}
-              </tbody>
-            </Table>
-          </Wrapper>
+          <StyledPanelBody>
+            {events.map((event, eventIdx) => {
+              const project = this.projectsMap.get(event.projectID);
+              return (
+                <TableRow key={`${project.slug}-${event.eventID}`} first={eventIdx == 0}>
+                  <TableData>
+                    <EventTitle>{this.getEventTitle(event)}</EventTitle>
+                  </TableData>
+
+                  <TableData>
+                    <Project to={`/${organization.slug}/${project.slug}/`}>
+                      <IdBadge
+                        project={project}
+                        avatarSize={16}
+                        displayName={<span>{project.name}</span>}
+                        avatarProps={{consistentWidth: true}}
+                      />
+                    </Project>
+                  </TableData>
+
+                  <TableData>
+                    <IdBadge user={event.user} hideEmail avatarSize={16} />
+                  </TableData>
+
+                  <TableData>
+                    <StyledDateTime date={new Date(event.dateCreated)} />
+                  </TableData>
+                </TableRow>
+              );
+            })}
+          </StyledPanelBody>
         )}
-      </React.Fragment>
+      </Panel>
     );
   }
 }
@@ -97,30 +107,41 @@ class EventsTableContainer extends React.Component {
 export default withRouter(EventsTableContainer);
 export {EventsTable};
 
-const Wrapper = styled(PanelBody)`
+const StyledPanelBody = styled(PanelBody)`
   overflow-x: auto;
   padding: 0;
 `;
-const Table = styled('table')`
-  border: 0;
+
+const TableLayout = styled('div')`
+  display: grid;
+  grid-template-columns: 0.8fr 0.15fr 0.25fr 200px;
+  grid-column-gap: ${space(1.5)};
   width: 100%;
-  max-width: 100%;
-  margin: 0;
 `;
 
-const Td = styled('td')`
-  padding: 10px 15px;
-  white-space: nowrap;
-  border-top: 1px solid ${p => p.theme.borderLight};
-  vertical-align: middle;
+const TableRow = styled(TableLayout)`
+  font-size: ${p => p.theme.fontSizeMedium};
+  border-top: 1px solid ${p => (p.first ? 'transparent' : p.theme.borderLight)};
+  align-items: center;
+  padding: ${space(1)} ${space(2)};
+`;
+
+const TableData = styled('div')`
+  overflow: hidden; /* enables overflow-ellipsis on child container */
+`;
+
+const EventTitle = styled(TableData)`
+  padding-right: ${space(2)};
+  ${overflowEllipsis};
 `;
 
-const DateRow = styled('div')`
-  font-size: 0.85em;
-  opacity: 0.8;
+const Project = styled(Link)`
+  display: flex;
+  color: ${p => p.theme.gray4};
+  ${overflowEllipsis};
 `;
 
-const EventTitle = styled('div')`
-  font-size: ${p => p.theme.fontSizeLarge};
-  font-weight: 600;
+const StyledDateTime = styled(DateTime)`
+  color: ${p => p.theme.gray2};
+  ${overflowEllipsis};
 `;
