commit 4cf870d664858753e76281447048fdadb3c0e2ac
Author: Megan Heskett <meg.heskett@gmail.com>
Date:   Fri Aug 31 12:21:51 2018 -0700

    fix(2fa): Handle sms authenticator unavailable in recovery options (#9585)

diff --git a/src/sentry/static/sentry/app/components/modals/recoveryOptionsModal.jsx b/src/sentry/static/sentry/app/components/modals/recoveryOptionsModal.jsx
index 1f6388dd5b..2f9590d96f 100644
--- a/src/sentry/static/sentry/app/components/modals/recoveryOptionsModal.jsx
+++ b/src/sentry/static/sentry/app/components/modals/recoveryOptionsModal.jsx
@@ -40,9 +40,8 @@ class RecoveryOptionsModal extends AsyncComponent {
       obj[item.id] = item;
       return obj;
     }, {});
-
-    let smsEnrolled = sms && sms.isEnrolled;
     let recoveryEnrolled = recovery && recovery.isEnrolled;
+    let displaySmsPrompt = sms && !sms.isEnrolled && !skipSms;
 
     return (
       <React.Fragment>
@@ -58,7 +57,7 @@ class RecoveryOptionsModal extends AsyncComponent {
             {t('You should now set up recovery options to secure your account.')}
           </TextBlock>
 
-          {!skipSms && !smsEnrolled ? (
+          {displaySmsPrompt ? (
             // set up backup phone number
             <Alert type="warning">
               {t('We recommend adding a phone number as a backup 2FA method.')}
@@ -74,7 +73,7 @@ class RecoveryOptionsModal extends AsyncComponent {
           )}
         </Body>
 
-        {!skipSms && !smsEnrolled ? (
+        {displaySmsPrompt ? (
           // set up backup phone number
           <div className="modal-footer">
             <Button onClick={this.handleSkipSms} name="skipStep" autoFocus>
diff --git a/tests/js/spec/components/modals/recoveryOptionsModal.spec.jsx b/tests/js/spec/components/modals/recoveryOptionsModal.spec.jsx
index 174090b118..7285a0c008 100644
--- a/tests/js/spec/components/modals/recoveryOptionsModal.spec.jsx
+++ b/tests/js/spec/components/modals/recoveryOptionsModal.spec.jsx
@@ -38,7 +38,7 @@ describe('RecoveryOptionsModal', function() {
     wrapper.find('RecoveryOptionsModal Button[name="skipStep"]').simulate('click');
     expect(wrapper.find(getRecoveryCodes)).toHaveLength(1);
 
-    let mockId = 16;
+    let mockId = TestStubs.Authenticators().Recovery().authId;
     expect(
       wrapper.find('RecoveryOptionsModal Button[name="getCodes"]').prop('to')
     ).toMatch(`/settings/account/security/${mockId}/`);
@@ -58,4 +58,30 @@ describe('RecoveryOptionsModal', function() {
     wrapper.find(backupPhone).simulate('click');
     expect(closeModal).toHaveBeenCalled();
   });
+
+  it('skips backup phone setup if text message authenticator unavailable', async function() {
+    MockApiClient.clearMockResponses();
+    MockApiClient.addMockResponse({
+      url: '/users/me/authenticators/',
+      method: 'GET',
+      body: [TestStubs.Authenticators().Totp(), TestStubs.Authenticators().Recovery()],
+    });
+    wrapper = mount(
+      <RecoveryOptionsModal
+        Body={Modal.Body}
+        Header={Modal.Header}
+        authenticatorName="Authenticator App"
+        closeModal={closeModal}
+        onClose={onClose}
+      />,
+      TestStubs.routerContext()
+    );
+    let mockId = TestStubs.Authenticators().Recovery().authId;
+    expect(
+      wrapper.find('RecoveryOptionsModal Button[name="getCodes"]').prop('to')
+    ).toMatch(`/settings/account/security/${mockId}/`);
+
+    expect(wrapper.find('RecoveryOptionsModal Button[name="skipStep"]')).toHaveLength(0);
+    expect(wrapper.find('RecoveryOptionsModal Button[name="addPhone"]')).toHaveLength(0);
+  });
 });
