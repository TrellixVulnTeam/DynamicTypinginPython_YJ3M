commit fce52a8463d54c2ffe07808b1e26bb47c05b460c
Author: David Cramer <dcramer@gmail.com>
Date:   Tue Oct 20 22:18:35 2015 -0400

    Pull teams from TeamStore

diff --git a/src/sentry/static/sentry/app/views/projectDetails.jsx b/src/sentry/static/sentry/app/views/projectDetails.jsx
index c3039cc64e..fddbf6939e 100644
--- a/src/sentry/static/sentry/app/views/projectDetails.jsx
+++ b/src/sentry/static/sentry/app/views/projectDetails.jsx
@@ -10,6 +10,7 @@ import ProjectHeader from "../components/projectHeader";
 import OrganizationState from "../mixins/organizationState";
 import RouteMixin from "../mixins/routeMixin";
 import PropTypes from "../proptypes";
+import TeamStore from "../stores/teamStore";
 
 const ERROR_TYPES = {
   MISSING_MEMBERSHIP: "MISSING_MEMBERSHIP",
@@ -19,6 +20,7 @@ const ERROR_TYPES = {
 var ProjectDetails = React.createClass({
   mixins: [
     Reflux.connect(MemberListStore, "memberList"),
+    Reflux.listenTo(TeamStore, "onTeamChange"),
     OrganizationState,
     RouteMixin
   ],
@@ -60,28 +62,33 @@ var ProjectDetails = React.createClass({
   },
 
   routeDidChange(nextPath, nextParams) {
-    var router = this.context.router;
-    var params = router.getCurrentParams();
+    let router = this.context.router;
+    let params = router.getCurrentParams();
     if (nextParams.projectId != params.projectId ||
         nextParams.orgId != params.orgId) {
       this.remountComponent();
     }
   },
 
+  onTeamChange() {
+    this.setState({
+      teams: TeamStore.getAll()
+    }, this.fetchData);
+  },
+
   fetchData() {
-    var org = this.getOrganization();
-    // TODO(dcramer): this should never happen
+    let org = this.context.organization;
     if (!org) {
       return;
     }
-
-    var router = this.context.router;
-    var params = router.getCurrentParams();
-    var projectSlug = params.projectId;
-    var activeProject = null;
-    var activeTeam = null;
-    var isMember = null;
-    org.teams.forEach((team) => {
+    let router = this.context.router;
+    let params = router.getCurrentParams();
+    let projectSlug = params.projectId;
+    let activeProject = null;
+    let activeTeam = null;
+    let isMember = null;
+    let teams = TeamStore.getAll();
+    teams.forEach((team) => {
       team.projects.forEach((project) => {
         if (project.slug == projectSlug) {
           activeProject = project;
