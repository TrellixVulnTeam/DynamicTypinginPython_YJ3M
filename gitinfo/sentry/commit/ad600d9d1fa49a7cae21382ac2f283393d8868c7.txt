commit ad600d9d1fa49a7cae21382ac2f283393d8868c7
Author: David Cramer <dcramer@gmail.com>
Date:   Wed May 22 18:12:10 2013 -0700

    Add tests for out of bounds integer

diff --git a/src/sentry/utils/models.py b/src/sentry/utils/models.py
index 4d8f59a5b4..4fc34065ea 100644
--- a/src/sentry/utils/models.py
+++ b/src/sentry/utils/models.py
@@ -203,6 +203,9 @@ signals.post_save.connect(__model_post_save)
 class IntegerField(models.IntegerField):
     MAX_VALUE = 2147483647
 
+    def to_python(self, value):
+        return int(value)
+
     def get_prep_value(self, value):
         assert value <= self.MAX_VALUE
 
diff --git a/tests/sentry/utils/models/tests.py b/tests/sentry/utils/models/tests.py
index ac1cb975b2..818eb090df 100644
--- a/tests/sentry/utils/models/tests.py
+++ b/tests/sentry/utils/models/tests.py
@@ -1,7 +1,7 @@
 from __future__ import absolute_import
 
 from django.db import models
-from sentry.utils.models import Model
+from sentry.utils.models import Model, IntegerField
 from sentry.testutils import TestCase
 
 
@@ -9,6 +9,7 @@ from sentry.testutils import TestCase
 # assuming it exists in these tests.
 class DummyModel(Model):
     foo = models.CharField(max_length=32)
+    normint = IntegerField(null=True)
 
 
 class ModelTest(TestCase):
@@ -29,3 +30,6 @@ class ModelTest(TestCase):
         self.assertEquals(inst.old_value('foo'), 'bar')
         models.signals.post_save.send(instance=inst, sender=type(inst), created=False)
         self.assertFalse(inst.has_changed('foo'))
+
+    def test_large_int(self):
+        DummyModel.objects.create(normint=9223372036854775807L, foo='bar')
