commit adbd554234bc4aa0705de118a37317bee617ebff
Author: Jess MacQueen <macqueen@users.noreply.github.com>
Date:   Wed Jul 25 09:41:14 2018 -0700

    feat(jira): Add project status mapping to org integration config (#9164)

diff --git a/src/sentry/integrations/jira/integration.py b/src/sentry/integrations/jira/integration.py
index 8a2c6d7695..75f0beb406 100644
--- a/src/sentry/integrations/jira/integration.py
+++ b/src/sentry/integrations/jira/integration.py
@@ -131,6 +131,32 @@ class JiraIntegration(Integration, IssueSyncMixin):
 
         return configuration
 
+    def update_organization_config(self, data):
+        """
+        Update the configuration field for an organization integration.
+        """
+        config = self.org_integration.config
+
+        if 'sync_status_forward' in data:
+            project_mappings = data.pop('sync_status_forward')
+
+            data['sync_status_forward'] = bool(project_mappings)
+
+            IntegrationExternalProject.objects.filter(
+                organization_integration_id=self.org_integration.id,
+            ).delete()
+
+            for project_id, statuses in project_mappings.items():
+                IntegrationExternalProject.objects.create(
+                    organization_integration_id=self.org_integration.id,
+                    external_id=project_id,
+                    resolved_status=statuses['on_resolve'],
+                    unresolved_status=statuses['on_unresolve'],
+                )
+
+        config.update(data)
+        self.org_integration.update(config=config)
+
     def sync_metadata(self):
         client = self.get_client()
 
diff --git a/tests/sentry/integrations/jira/test_integration.py b/tests/sentry/integrations/jira/test_integration.py
index 956c5cd29f..44bd29d1c5 100644
--- a/tests/sentry/integrations/jira/test_integration.py
+++ b/tests/sentry/integrations/jira/test_integration.py
@@ -501,3 +501,116 @@ class JiraIntegrationTest(APITestCase):
                 # test resolve -- 31 is "done" transition id
                 installation.sync_status_outbound(external_issue, True, project.id)
                 mock_transition_issue.assert_called_with('SEN-5', '31')
+
+    def test_update_organization_config(self):
+        org = self.organization
+        self.login_as(self.user)
+
+        integration = Integration.objects.create(
+            provider='jira',
+            name='Example Jira',
+        )
+        integration.add_organization(org.id)
+
+        installation = integration.get_installation(org.id)
+
+        data = {
+            'sync_comments': True,
+            'sync_forward_assignment': True,
+            'sync_reverse_assignment': True,
+            'sync_status_reverse': True,
+            'sync_status_forward': {
+                10100: {
+                    'on_resolve': '4',
+                    'on_unresolve': '3',
+                },
+            },
+        }
+
+        installation.update_organization_config(data)
+
+        org_integration = OrganizationIntegration.objects.get(
+            organization_id=org.id,
+            integration_id=integration.id,
+        )
+
+        org_integration.config == {
+            'sync_comments': True,
+            'sync_forward_assignment': True,
+            'sync_reverse_assignment': True,
+            'sync_status_reverse': True,
+            'sync_status_forward': True,
+        }
+
+        assert IntegrationExternalProject.objects.filter(
+            organization_integration_id=org_integration.id,
+            resolved_status='4',
+            unresolved_status='3',
+        ).exists()
+
+        # test update existing
+        data = {
+            'sync_comments': True,
+            'sync_forward_assignment': True,
+            'sync_reverse_assignment': True,
+            'sync_status_reverse': True,
+            'sync_status_forward': {
+                10100: {
+                    'on_resolve': '4',
+                    'on_unresolve': '5',
+                },
+            },
+        }
+
+        installation.update_organization_config(data)
+
+        org_integration = OrganizationIntegration.objects.get(
+            organization_id=org.id,
+            integration_id=integration.id,
+        )
+
+        org_integration.config == {
+            'sync_comments': True,
+            'sync_forward_assignment': True,
+            'sync_reverse_assignment': True,
+            'sync_status_reverse': True,
+            'sync_status_forward': True,
+        }
+
+        assert IntegrationExternalProject.objects.filter(
+            organization_integration_id=org_integration.id,
+            resolved_status='4',
+            unresolved_status='5',
+        ).exists()
+
+        assert IntegrationExternalProject.objects.filter(
+            organization_integration_id=org_integration.id,
+        ).count() == 1
+
+        # test disable forward
+        data = {
+            'sync_comments': True,
+            'sync_forward_assignment': True,
+            'sync_reverse_assignment': True,
+            'sync_status_reverse': True,
+            'sync_status_forward': {},
+        }
+
+        installation.update_organization_config(data)
+
+        org_integration = OrganizationIntegration.objects.get(
+            organization_id=org.id,
+            integration_id=integration.id,
+        )
+
+        org_integration.config == {
+            'sync_comments': True,
+            'sync_forward_assignment': True,
+            'sync_reverse_assignment': True,
+            'sync_status_reverse': True,
+            'sync_status_forward': False,
+        }
+
+        assert IntegrationExternalProject.objects.filter(
+            organization_integration_id=org_integration.id,
+        ).count() == 0
