commit 794a2620f43f1cc0dfc26ef6b1cf40bc19f3626d
Author: Matt Robenolt <matt@ydekproductions.com>
Date:   Mon Jan 19 03:15:10 2015 -0800

    Register celery hooks inside contribute_to_class instead of __init__

diff --git a/src/sentry/models/groupmeta.py b/src/sentry/models/groupmeta.py
index 93e0396ae3..f39e96656d 100644
--- a/src/sentry/models/groupmeta.py
+++ b/src/sentry/models/groupmeta.py
@@ -24,8 +24,6 @@ ERR_CACHE_MISISNG = 'Cache not populated for instance id=%s'
 class GroupMetaManager(BaseManager):
     def __init__(self, *args, **kwargs):
         super(GroupMetaManager, self).__init__(*args, **kwargs)
-        task_postrun.connect(self.clear_local_cache)
-        request_finished.connect(self.clear_local_cache)
         self.__local_cache = threading.local()
 
     def __getstate__(self):
@@ -49,7 +47,9 @@ class GroupMetaManager(BaseManager):
 
     def contribute_to_class(self, model, name):
         model.CacheNotPopulated = CacheNotPopulated
-        return super(GroupMetaManager, self).contribute_to_class(model, name)
+        super(GroupMetaManager, self).contribute_to_class(model, name)
+        task_postrun.connect(self.clear_local_cache)
+        request_finished.connect(self.clear_local_cache)
 
     def clear_local_cache(self, **kwargs):
         self.__cache = {}
diff --git a/src/sentry/models/projectoption.py b/src/sentry/models/projectoption.py
index f78d459505..250795b27d 100644
--- a/src/sentry/models/projectoption.py
+++ b/src/sentry/models/projectoption.py
@@ -20,8 +20,6 @@ from sentry.utils.cache import cache
 class ProjectOptionManager(BaseManager):
     def __init__(self, *args, **kwargs):
         super(ProjectOptionManager, self).__init__(*args, **kwargs)
-        task_postrun.connect(self.clear_local_cache)
-        request_finished.connect(self.clear_local_cache)
         self.__cache = {}
 
     def __getstate__(self):
@@ -100,6 +98,11 @@ class ProjectOptionManager(BaseManager):
     def post_delete(self, instance, **kwargs):
         self.reload_cache(instance.project_id)
 
+    def contribute_to_class(self, model, name):
+        super(ProjectOptionManager, self).contribute_to_class(model, name)
+        task_postrun.connect(self.clear_local_cache)
+        request_finished.connect(self.clear_local_cache)
+
 
 class ProjectOption(Model):
     """
diff --git a/src/sentry/models/useroption.py b/src/sentry/models/useroption.py
index 73742a6a8a..02ea3647d3 100644
--- a/src/sentry/models/useroption.py
+++ b/src/sentry/models/useroption.py
@@ -20,8 +20,6 @@ from sentry.db.models.manager import BaseManager
 class UserOptionManager(BaseManager):
     def __init__(self, *args, **kwargs):
         super(UserOptionManager, self).__init__(*args, **kwargs)
-        task_postrun.connect(self.clear_cache)
-        request_finished.connect(self.clear_cache)
         self.__metadata = {}
 
     def __getstate__(self):
@@ -89,6 +87,11 @@ class UserOptionManager(BaseManager):
     def clear_cache(self, **kwargs):
         self.__metadata = {}
 
+    def contribute_to_class(self, model, name):
+        super(UserOptionManager, self).contribute_to_class(model, name)
+        task_postrun.connect(self.clear_cache)
+        request_finished.connect(self.clear_cache)
+
 
 # TODO(dcramer): the NULL UNIQUE constraint here isnt valid, and instead has to
 # be manually replaced in the database. We should restructure this model.
