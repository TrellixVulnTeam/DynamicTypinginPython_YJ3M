commit a5478d5612b4e2a4b8541040832e4d8b8df0cc64
Author: Billy Vong <billyvg@users.noreply.github.com>
Date:   Tue Feb 6 11:58:08 2018 -0800

    feat(ui): Add `Qrcode` component (#7120)

diff --git a/docs-ui/components/qrcode.stories.js b/docs-ui/components/qrcode.stories.js
new file mode 100644
index 0000000000..606222c877
--- /dev/null
+++ b/docs-ui/components/qrcode.stories.js
@@ -0,0 +1,44 @@
+import React from 'react';
+import {storiesOf} from '@storybook/react';
+import {withInfo} from '@storybook/addon-info';
+// import {action} from '@storybook/addon-actions';
+
+import Qrcode from 'sentry-ui/qrcode';
+
+storiesOf('Qrcode', module).add(
+  'default',
+  withInfo('Description')(() => (
+    <Qrcode
+      code={[
+        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
+        [0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
+        [0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
+        [0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
+        [0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
+        [0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
+        [0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
+        [0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
+        [0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
+        [0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
+        [0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
+        [0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
+        [0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
+        [0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0],
+        [0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0],
+        [0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0],
+        [0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0],
+        [0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0],
+        [0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0],
+        [0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0],
+        [0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0],
+        [0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0],
+        [0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0],
+        [0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0],
+        [0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0],
+        [0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0],
+        [0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0],
+        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
+      ]}
+    />
+  ))
+);
diff --git a/src/sentry/static/sentry/app/components/qrcode.jsx b/src/sentry/static/sentry/app/components/qrcode.jsx
new file mode 100644
index 0000000000..c0124494e5
--- /dev/null
+++ b/src/sentry/static/sentry/app/components/qrcode.jsx
@@ -0,0 +1,47 @@
+import React from 'react';
+import PropTypes from 'prop-types';
+import styled from 'react-emotion';
+
+const Cell = styled.td`
+  height: 6px;
+  width: 6px;
+  padding: 0;
+`;
+const BlackCell = styled(Cell)`
+  background-color: black;
+`;
+const WhiteCell = styled(Cell)`
+  background-color: white;
+`;
+
+const Table = styled.table`
+  margin: 0;
+`;
+
+class Qrcode extends React.Component {
+  static propTypes = {
+    /**
+     * Takes a multidimensional array representing a 2-bit, 2d matrix
+     */
+    code: PropTypes.arrayOf(PropTypes.arrayOf(PropTypes.number)),
+  };
+
+  render() {
+    let {code} = this.props;
+    return (
+      <Table>
+        <tbody>
+          {code.map((row, i) => (
+            <tr key={i}>
+              {row.map(
+                (cell, j) => (cell ? <BlackCell key={j} /> : <WhiteCell key={j} />)
+              )}
+            </tr>
+          ))}
+        </tbody>
+      </Table>
+    );
+  }
+}
+
+export default Qrcode;
diff --git a/tests/js/spec/components/__snapshots__/qrcode.spec.jsx.snap b/tests/js/spec/components/__snapshots__/qrcode.spec.jsx.snap
new file mode 100644
index 0000000000..56b8609947
--- /dev/null
+++ b/tests/js/spec/components/__snapshots__/qrcode.spec.jsx.snap
@@ -0,0 +1,36 @@
+// Jest Snapshot v1, https://goo.gl/fbAQLP
+
+exports[`Qrcode renders 1`] = `
+<Table>
+  <tbody>
+    <tr
+      key="0"
+    >
+      <WhiteCell
+        key="0"
+      />
+      <BlackCell
+        key="1"
+      />
+      <BlackCell
+        key="2"
+      />
+      <WhiteCell
+        key="3"
+      />
+      <WhiteCell
+        key="4"
+      />
+      <WhiteCell
+        key="5"
+      />
+      <WhiteCell
+        key="6"
+      />
+      <WhiteCell
+        key="7"
+      />
+    </tr>
+  </tbody>
+</Table>
+`;
diff --git a/tests/js/spec/components/qrcode.spec.jsx b/tests/js/spec/components/qrcode.spec.jsx
new file mode 100644
index 0000000000..8695531790
--- /dev/null
+++ b/tests/js/spec/components/qrcode.spec.jsx
@@ -0,0 +1,10 @@
+import React from 'react';
+import {shallow} from 'enzyme';
+import Qrcode from 'app/components/qrcode';
+
+describe('Qrcode', function() {
+  it('renders', function() {
+    let wrapper = shallow(<Qrcode code={[[0, 1, 1, 0, 0, 0, 0, 0]]} />);
+    expect(wrapper).toMatchSnapshot();
+  });
+});
