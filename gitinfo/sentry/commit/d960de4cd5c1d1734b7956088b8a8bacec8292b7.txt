commit d960de4cd5c1d1734b7956088b8a8bacec8292b7
Author: ted kaemming <ted@kaemming.com>
Date:   Mon Jan 22 10:51:04 2018 -0800

    ref(environments): Add method to fetch and cache environment for event (#7012)

diff --git a/src/sentry/models/event.py b/src/sentry/models/event.py
index e65963d532..7f853a580a 100644
--- a/src/sentry/models/event.py
+++ b/src/sentry/models/event.py
@@ -258,6 +258,17 @@ class Event(Model):
             128,
         ).encode('utf-8')
 
+    def get_environment(self):
+        from sentry.models import Environment
+
+        if not hasattr(self, '_environment_cache'):
+            self._environment_cache = Environment.objects.get(
+                organization_id=self.project.organization_id,
+                name=Environment.get_name_or_default(self.get_tag('environment')),
+            )
+
+        return self._environment_cache
+
 
 class EventSubjectTemplate(string.Template):
     idpattern = r'(tag:)?[_a-z][_a-z0-9]*'
diff --git a/tests/sentry/models/test_event.py b/tests/sentry/models/test_event.py
index a190342362..600f27e9ab 100644
--- a/tests/sentry/models/test_event.py
+++ b/tests/sentry/models/test_event.py
@@ -1,5 +1,6 @@
 from __future__ import absolute_import
 
+from sentry.models import Environment
 from sentry.testutils import TestCase
 
 
@@ -61,6 +62,19 @@ class EventTest(TestCase):
             'version': '1.0',
         }
 
+    def test_get_environment(self):
+        environment = Environment.get_or_create(self.project, 'production')
+        event = self.create_event(
+            data={'tags': [
+                ('environment', 'production'),
+            ]}
+        )
+
+        event.get_environment() == environment
+
+        with self.assertNumQueries(0):
+            event.get_environment() == environment
+
 
 class EventGetLegacyMessageTest(TestCase):
     def test_message(self):
