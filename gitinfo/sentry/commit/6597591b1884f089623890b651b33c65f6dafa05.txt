commit 6597591b1884f089623890b651b33c65f6dafa05
Author: Matt Robenolt <matt@ydekproductions.com>
Date:   Fri May 20 15:25:32 2016 -0700

    Return a proper 401 response from unauthorized API calls (#3288)
    
    DRF checks for a `authenticate_header` from the first
    `authentication_classes`. In our case, this is now `TokenAuthenticator`,
    which was subclassing `BaseAuthentication`. `BaseAuthentication` doesn't
    provide this method, so DRF coerces it to a 403 response. Subclassing
    `QuietBasicAuthentication` provides a fake `authenticate_header` used to
    trick DRF into sending back the sweet sweet 401.

diff --git a/src/sentry/api/authentication.py b/src/sentry/api/authentication.py
index b0db285829..62fcec84e8 100644
--- a/src/sentry/api/authentication.py
+++ b/src/sentry/api/authentication.py
@@ -3,7 +3,7 @@ from __future__ import absolute_import
 from django.contrib.auth.models import AnonymousUser
 from django.utils.crypto import constant_time_compare
 from rest_framework.authentication import (
-    BaseAuthentication, BasicAuthentication, get_authorization_header
+    BasicAuthentication, get_authorization_header
 )
 from rest_framework.exceptions import AuthenticationFailed
 
@@ -43,7 +43,7 @@ class ApiKeyAuthentication(QuietBasicAuthentication):
         return (AnonymousUser(), key)
 
 
-class TokenAuthentication(BaseAuthentication):
+class TokenAuthentication(QuietBasicAuthentication):
     def authenticate(self, request):
         auth = get_authorization_header(request).split()
 
diff --git a/tests/sentry/api/endpoints/test_system_options.py b/tests/sentry/api/endpoints/test_system_options.py
index 8daa988b40..8e0e5deb1b 100644
--- a/tests/sentry/api/endpoints/test_system_options.py
+++ b/tests/sentry/api/endpoints/test_system_options.py
@@ -32,9 +32,9 @@ class SystemOptionsTest(APITestCase):
 
     def test_not_logged_in(self):
         response = self.client.get(self.url)
-        assert response.status_code == 403
+        assert response.status_code == 401
         response = self.client.put(self.url)
-        assert response.status_code == 403
+        assert response.status_code == 401
 
     def test_disabled_smtp(self):
         self.login_as(user=self.user)
