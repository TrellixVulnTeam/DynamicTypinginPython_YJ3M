commit 3f3c55f8963011ea8908cb7ed77e46585471cff9
Author: Billy Vong <billyvg@users.noreply.github.com>
Date:   Wed Feb 21 14:00:56 2018 -0800

    feat(ui): Update Org Stats (#7307)

diff --git a/src/sentry/static/sentry/app/views/organizationStats/index.jsx b/src/sentry/static/sentry/app/views/organizationStats/index.jsx
index ff117f990c..a35f6a0a2e 100644
--- a/src/sentry/static/sentry/app/views/organizationStats/index.jsx
+++ b/src/sentry/static/sentry/app/views/organizationStats/index.jsx
@@ -6,7 +6,6 @@ import ApiMixin from '../../mixins/apiMixin';
 import OrganizationState from '../../mixins/organizationState';
 
 import LazyLoad from '../../components/lazyLoad';
-import getSettingsComponent from '../../utils/getSettingsComponent';
 
 const OrganizationStats = createReactClass({
   displayName: 'OrganizationStats',
@@ -253,12 +252,8 @@ const OrganizationStats = createReactClass({
     return (
       <LazyLoad
         component={() =>
-          getSettingsComponent(
-            () =>
-              import(/* webpackChunkName: "organizationStats" */ '../settings/organization/stats/organizationStats'),
-            () =>
-              import(/* webpackChunkName: "organizationStats.old" */ './organizationStats.old'),
-            this.props.routes
+          import(/* webpackChunkName: "organizationStats" */ '../settings/organization/stats/organizationStats').then(
+            mod => mod.default
           )}
         organization={organization}
         {...this.state}
diff --git a/src/sentry/static/sentry/app/views/organizationStats/organizationStats.old.jsx b/src/sentry/static/sentry/app/views/organizationStats/organizationStats.old.jsx
deleted file mode 100644
index d3515bc56f..0000000000
--- a/src/sentry/static/sentry/app/views/organizationStats/organizationStats.old.jsx
+++ /dev/null
@@ -1,128 +0,0 @@
-import React from 'react';
-import PropTypes from 'prop-types';
-
-import LoadingError from '../../components/loadingError';
-import LoadingIndicator from '../../components/loadingIndicator';
-import StackedBarChart from '../../components/stackedBarChart';
-import Pagination from '../../components/pagination';
-
-import ProjectTable from './projectTable';
-import {t} from '../../locale';
-import {intcomma} from '../../utils';
-
-class OrganizationStats extends React.Component {
-  static propTypes = {
-    statsLoading: PropTypes.bool,
-    projectsLoading: PropTypes.bool,
-    orgTotal: PropTypes.object,
-    statsError: PropTypes.oneOfType([PropTypes.bool, PropTypes.object]),
-    orgStats: PropTypes.array,
-    projectTotals: PropTypes.array,
-    projectMap: PropTypes.object,
-    projectsError: PropTypes.oneOfType([PropTypes.bool, PropTypes.object]),
-    pageLinks: PropTypes.string,
-    organization: PropTypes.object,
-  };
-
-  renderTooltip(point, pointIdx, chart) {
-    let timeLabel = chart.getTimeLabel(point);
-    let [accepted, rejected, blacklisted] = point.y;
-
-    let value = `${intcomma(accepted)} accepted`;
-    if (rejected) {
-      value += `<br>${intcomma(rejected)} rate limited`;
-    }
-    if (blacklisted) {
-      value += `<br>${intcomma(blacklisted)} filtered`;
-    }
-
-    return (
-      '<div style="width:150px">' +
-      `<div class="time-label">${timeLabel}</div>` +
-      `<div class="value-label">${value}</div>` +
-      '</div>'
-    );
-  }
-
-  render() {
-    let {
-      statsLoading,
-      orgTotal,
-      statsError,
-      orgStats,
-      projectsLoading,
-      projectTotals,
-      projectMap,
-      projectsError,
-      pageLinks,
-      organization,
-    } = this.props;
-
-    return (
-      <div>
-        <h3>{t('Stats')}</h3>
-        <div className="row">
-          <div className="col-md-9">
-            <p>
-              {t(
-                `The chart below reflects events the system has received
-            across your entire organization. Events are broken down into
-            three categories: Accepted, Rate Limited, and Filtered. Rate
-            Limited events are entries that the system threw away due to quotas
-            being hit, and Filtered events are events that were blocked
-            due to your inbound data filter rules.`
-              )}
-            </p>
-          </div>
-          {!statsLoading && (
-            <div className="col-md-3 stats-column">
-              <h6 className="nav-header">{t('Events per minute')}</h6>
-              <p className="count">{orgTotal.avgRate}</p>
-            </div>
-          )}
-        </div>
-        <div className="organization-stats">
-          {statsLoading ? (
-            <LoadingIndicator />
-          ) : statsError ? (
-            <LoadingError onRetry={this.fetchData} />
-          ) : (
-            <div className="bar-chart">
-              <StackedBarChart
-                points={orgStats}
-                height={150}
-                label="events"
-                className="standard-barchart"
-                barClasses={['accepted', 'rate-limited', 'black-listed']}
-                tooltip={this.renderTooltip}
-              />
-            </div>
-          )}
-        </div>
-
-        <div className="box">
-          <div className="box-header">
-            <h3>{t('Events by Project')}</h3>
-          </div>
-          <div className="box-content">
-            {statsLoading || projectsLoading ? (
-              <LoadingIndicator />
-            ) : projectsError ? (
-              <LoadingError onRetry={this.fetchData} />
-            ) : (
-              <ProjectTable
-                projectTotals={projectTotals}
-                orgTotal={orgTotal}
-                organization={organization}
-                projectMap={projectMap}
-              />
-            )}
-          </div>
-        </div>
-        {pageLinks && <Pagination pageLinks={pageLinks} {...this.props} />}
-      </div>
-    );
-  }
-}
-
-export default OrganizationStats;
diff --git a/tests/js/spec/views/__snapshots__/organizationRateLimits.spec.jsx.snap b/tests/js/spec/views/__snapshots__/organizationRateLimits.spec.jsx.snap
new file mode 100644
index 0000000000..4ae55adaa5
--- /dev/null
+++ b/tests/js/spec/views/__snapshots__/organizationRateLimits.spec.jsx.snap
@@ -0,0 +1,335 @@
+// Jest Snapshot v1, https://goo.gl/fbAQLP
+
+exports[`OrganizationStats renders 1`] = `
+.glamor-4 {
+  font-size: 14px;
+  box-shadow: inset 0 -1px 0;
+  margin: -20px 0 30px;
+}
+
+.glamor-2 {
+  box-sizing: border-box;
+  display: -webkit-box;
+  display: -webkit-flex;
+  display: -ms-flexbox;
+  display: flex;
+  -webkit-align-items: center;
+  -webkit-box-align: center;
+  -ms-flex-align: center;
+  align-items: center;
+}
+
+.glamor-0 {
+  font-size: 20px;
+  font-weight: bold;
+  margin: 20px 0;
+  -webkit-flex: 1;
+  -ms-flex: 1;
+  flex: 1;
+}
+
+.glamor-6 {
+  line-height: 1.5;
+  margin-bottom: 30px;
+}
+
+.glamor-19 {
+  background: #fff;
+  border: 1px solid;
+  margin-bottom: NaNpx;
+  position: relative;
+}
+
+.glamor-15 {
+  border-bottom: 1px solid;
+  border-radius: 0 0;
+  text-transform: uppercase;
+  font-size: 13px;
+  line-height: 1;
+  padding: 15px 20px;
+}
+
+.glamor-11 {
+  font-size: inherit;
+  text-transform: inherit;
+  margin: 0;
+}
+
+.glamor-9 {
+  font-size: 12px;
+  font-weight: 600;
+  text-transform: uppercase;
+  margin-bottom: 20px;
+  font-size: inherit;
+  text-transform: inherit;
+  margin: 0;
+}
+
+<OrganizationStats
+  location={
+    Object {
+      "pathame": "/mock-pathname/",
+      "query": Object {},
+    }
+  }
+  params={
+    Object {
+      "orgId": "org-slug",
+    }
+  }
+>
+  <LazyLoad
+    component={[Function]}
+    orgStats={null}
+    orgTotal={null}
+    organization={
+      Object {
+        "access": Array [
+          "org:read",
+          "org:write",
+          "org:admin",
+          "project:read",
+          "project:write",
+          "project:admin",
+          "team:read",
+          "team:write",
+          "team:admin",
+        ],
+        "features": Array [],
+        "id": "3",
+        "name": "Organization Name",
+        "onboardingTasks": Array [],
+        "slug": "org-slug",
+        "status": Object {
+          "id": "active",
+          "name": "active",
+        },
+        "teams": Array [],
+      }
+    }
+    projectMap={
+      Object {
+        "2": Object {
+          "digestsMaxDelay": 60,
+          "digestsMinDelay": 5,
+          "id": "2",
+          "name": "Project Name",
+          "slug": "project-slug",
+          "subjectTemplate": "[$project] \${tag:level}: $title",
+        },
+      }
+    }
+    projectTotals={null}
+    projectsError={false}
+    projectsLoading={true}
+    projectsRequestsPending={0}
+    querySince={1507624880}
+    queryUntil={1508229680}
+    rawOrgData={
+      Object {
+        "blacklisted": Array [],
+        "received": Array [],
+        "rejected": Array [],
+      }
+    }
+    rawProjectData={
+      Object {
+        "blacklisted": Array [],
+        "received": Array [],
+        "rejected": Array [],
+      }
+    }
+    statsError={false}
+    statsLoading={true}
+    statsRequestsPending={0}
+  >
+    <OrganizationStats
+      orgStats={null}
+      orgTotal={null}
+      organization={
+        Object {
+          "access": Array [
+            "org:read",
+            "org:write",
+            "org:admin",
+            "project:read",
+            "project:write",
+            "project:admin",
+            "team:read",
+            "team:write",
+            "team:admin",
+          ],
+          "features": Array [],
+          "id": "3",
+          "name": "Organization Name",
+          "onboardingTasks": Array [],
+          "slug": "org-slug",
+          "status": Object {
+            "id": "active",
+            "name": "active",
+          },
+          "teams": Array [],
+        }
+      }
+      projectMap={
+        Object {
+          "2": Object {
+            "digestsMaxDelay": 60,
+            "digestsMinDelay": 5,
+            "id": "2",
+            "name": "Project Name",
+            "slug": "project-slug",
+            "subjectTemplate": "[$project] \${tag:level}: $title",
+          },
+        }
+      }
+      projectTotals={null}
+      projectsError={false}
+      projectsLoading={true}
+      projectsRequestsPending={0}
+      querySince={1507624880}
+      queryUntil={1508229680}
+      rawOrgData={
+        Object {
+          "blacklisted": Array [],
+          "received": Array [],
+          "rejected": Array [],
+        }
+      }
+      rawProjectData={
+        Object {
+          "blacklisted": Array [],
+          "received": Array [],
+          "rejected": Array [],
+        }
+      }
+      statsError={false}
+      statsLoading={true}
+      statsRequestsPending={0}
+    >
+      <div>
+        <SettingsPageHeading
+          title="Organization Stats"
+        >
+          <Wrapper>
+            <div
+              className="glamor-4 glamor-5"
+            >
+              <Flex
+                align="center"
+              >
+                <Base
+                  align="center"
+                  className="glamor-2"
+                >
+                  <div
+                    className="glamor-2"
+                    is={null}
+                  >
+                    <Title>
+                      <div
+                        className="glamor-0 glamor-1"
+                      >
+                        Organization Stats
+                      </div>
+                    </Title>
+                  </div>
+                </Base>
+              </Flex>
+            </div>
+          </Wrapper>
+        </SettingsPageHeading>
+        <div
+          className="row"
+        >
+          <div
+            className="col-md-9"
+          >
+            <TextBlock>
+              <div
+                className="glamor-6 glamor-7"
+              >
+                The chart below reflects events the system has received
+            across your entire organization. Events are broken down into
+            three categories: Accepted, Rate Limited, and Filtered. Rate
+            Limited events are entries that the system threw away due to quotas
+            being hit, and Filtered events are events that were blocked
+            due to your inbound data filter rules.
+              </div>
+            </TextBlock>
+          </div>
+        </div>
+        <div>
+          <LoadingIndicator>
+            <div
+              className="loading"
+            >
+              <div
+                className="loading-indicator"
+              />
+              <div
+                className="loading-message"
+              />
+            </div>
+          </LoadingIndicator>
+        </div>
+        <Panel>
+          <div
+            className="glamor-19 glamor-20"
+          >
+            <PanelHeader>
+              <StyledPanelHeader>
+                <Component
+                  className="glamor-15 glamor-16"
+                >
+                  <div
+                    className="glamor-15 glamor-16"
+                  >
+                    <StyledPanelHeading>
+                      <Component
+                        className="glamor-11 glamor-8"
+                      >
+                        <PanelHeading
+                          className="glamor-11 glamor-8"
+                        >
+                          <div
+                            className="glamor-8 glamor-9 glamor-10"
+                          >
+                            Events by Project
+                          </div>
+                        </PanelHeading>
+                      </Component>
+                    </StyledPanelHeading>
+                  </div>
+                </Component>
+              </StyledPanelHeader>
+            </PanelHeader>
+            <PanelBody
+              direction="column"
+              disablePadding={true}
+              flex={false}
+            >
+              <div
+                className=""
+              >
+                <LoadingIndicator>
+                  <div
+                    className="loading"
+                  >
+                    <div
+                      className="loading-indicator"
+                    />
+                    <div
+                      className="loading-message"
+                    />
+                  </div>
+                </LoadingIndicator>
+              </div>
+            </PanelBody>
+          </div>
+        </Panel>
+      </div>
+    </OrganizationStats>
+  </LazyLoad>
+</OrganizationStats>
+`;
diff --git a/tests/js/spec/views/organizationRateLimits.spec.jsx b/tests/js/spec/views/organizationRateLimits.spec.jsx
new file mode 100644
index 0000000000..2b25fa0880
--- /dev/null
+++ b/tests/js/spec/views/organizationRateLimits.spec.jsx
@@ -0,0 +1,33 @@
+import React from 'react';
+import {mount} from 'enzyme';
+
+import OrganizationStats from 'app/views/organizationStats';
+
+describe('OrganizationStats', function() {
+  beforeEach(function() {
+    MockApiClient.clearMockResponses();
+    MockApiClient.addMockResponse({
+      url: '/organizations/org-slug/projects/',
+      method: 'GET',
+      body: [TestStubs.Project()],
+    });
+    MockApiClient.addMockResponse({
+      url: '/organizations/org-slug/stats/',
+      method: 'GET',
+      body: [],
+    });
+  });
+
+  it('renders', function(done) {
+    let wrapper = mount(
+      <OrganizationStats params={{orgId: 'org-slug'}} location={TestStubs.location()} />,
+      TestStubs.routerContext()
+    );
+
+    setTimeout(() => {
+      wrapper.update();
+      expect(wrapper).toMatchSnapshot();
+      done();
+    }, 1);
+  });
+});
