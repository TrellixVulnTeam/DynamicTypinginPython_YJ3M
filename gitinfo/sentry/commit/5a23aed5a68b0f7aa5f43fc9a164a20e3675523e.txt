commit 5a23aed5a68b0f7aa5f43fc9a164a20e3675523e
Author: Katie Lundsgaard <katie@getsentry.com>
Date:   Wed May 24 10:51:49 2017 -0700

    Assign issue to commit author (#5409)

diff --git a/src/sentry/receivers/releases.py b/src/sentry/receivers/releases.py
index 34bae34fe0..68bda2fd5d 100644
--- a/src/sentry/receivers/releases.py
+++ b/src/sentry/receivers/releases.py
@@ -4,7 +4,7 @@ from django.db import IntegrityError, transaction
 from django.db.models.signals import post_save
 
 from sentry.models import (
-    Activity, Commit, GroupCommitResolution, Release, TagValue
+    Activity, Commit, GroupAssignee, GroupCommitResolution, Release, TagValue
 )
 from sentry.tasks.clear_expired_resolutions import clear_expired_resolutions
 
@@ -60,17 +60,17 @@ def resolved_in_commit(instance, created, **kwargs):
                 else:
                     user_list = ()
                 if user_list:
-                    for user in user_list:
-                        Activity.objects.create(
-                            project_id=group.project_id,
-                            group=group,
-                            type=Activity.SET_RESOLVED_IN_COMMIT,
-                            ident=instance.id,
-                            user=user,
-                            data={
-                                'commit': instance.id,
-                            }
-                        )
+                    Activity.objects.create(
+                        project_id=group.project_id,
+                        group=group,
+                        type=Activity.SET_RESOLVED_IN_COMMIT,
+                        ident=instance.id,
+                        user=user_list[0],
+                        data={
+                            'commit': instance.id,
+                        }
+                    )
+                    GroupAssignee.objects.assign(group=group, assigned_to=user_list[0])
                 else:
                     Activity.objects.create(
                         project_id=group.project_id,
diff --git a/tests/sentry/receivers/test_releases.py b/tests/sentry/receivers/test_releases.py
index 4b79a86f48..72b82ca18e 100644
--- a/tests/sentry/receivers/test_releases.py
+++ b/tests/sentry/receivers/test_releases.py
@@ -5,7 +5,7 @@ from mock import patch
 from uuid import uuid4
 
 from sentry.models import (
-    Commit, CommitAuthor, GroupCommitResolution, Release, Repository, TagValue
+    Commit, CommitAuthor, GroupAssignee, GroupCommitResolution, OrganizationMember, Release, Repository, TagValue, UserEmail
 )
 from sentry.testutils import TestCase
 
@@ -109,3 +109,36 @@ class ResolvedInCommitTest(TestCase):
             group_id=group.id,
             commit_id=commit.id,
         ).exists()
+
+    def test_assigns_author(self):
+        group = self.create_group()
+        user = self.create_user(name='Foo Bar', email='foo@example.com', is_active=True)
+        email = UserEmail.get_primary_email(user=user)
+        email.is_verified = True
+        email.save()
+        repo = Repository.objects.create(
+            name='example',
+            organization_id=self.group.organization.id,
+        )
+        OrganizationMember.objects.create(organization=group.project.organization, user=user)
+        commit = Commit.objects.create(
+            key=sha1(uuid4().hex).hexdigest(),
+            organization_id=group.organization.id,
+            repository_id=repo.id,
+            message='Foo Biz\n\nFixes {}'.format(group.qualified_short_id),
+            author=CommitAuthor.objects.create(
+                organization_id=group.organization.id,
+                name=user.name,
+                email=user.email,
+            )
+        )
+
+        assert GroupCommitResolution.objects.filter(
+            group_id=group.id,
+            commit_id=commit.id,
+        ).exists()
+
+        assert GroupAssignee.objects.filter(
+            group=group,
+            user=user
+        ).exists()
