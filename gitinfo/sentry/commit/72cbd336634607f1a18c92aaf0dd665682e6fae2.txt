commit 72cbd336634607f1a18c92aaf0dd665682e6fae2
Author: David Cramer <dcramer@gmail.com>
Date:   Thu Jul 16 23:49:47 2015 -0700

    Various implementation on tag pages
    
    Conflicts:
            src/sentry/static/sentry/app/views/groupTagValues.jsx
            src/sentry/static/sentry/app/views/groupTags.jsx

diff --git a/src/sentry/api/endpoints/group_tags.py b/src/sentry/api/endpoints/group_tags.py
index ba317b8f16..2097e8cd01 100644
--- a/src/sentry/api/endpoints/group_tags.py
+++ b/src/sentry/api/endpoints/group_tags.py
@@ -1,22 +1,13 @@
 from __future__ import absolute_import
 
-from datetime import timedelta
-from django.utils import timezone
 from rest_framework.response import Response
 
 from sentry.api.bases.group import GroupEndpoint
+from sentry.api.serializers import serialize
 from sentry.models import GroupTagValue, GroupTagKey, TagKey
 
 
 class GroupTagsEndpoint(GroupEndpoint):
-    def _get_top_values(self, group_id, key, num=5):
-        cutoff = timezone.now() - timedelta(days=7)
-        return GroupTagValue.objects.filter(
-            group=group_id,
-            key=key,
-            last_seen__gte=cutoff,
-        )[:num]
-
     def get(self, request, group):
         tag_keys = TagKey.objects.filter(
             project=group.project,
@@ -29,7 +20,7 @@ class GroupTagsEndpoint(GroupEndpoint):
         data = []
         for tag_key in tag_keys:
             total_values = GroupTagValue.get_value_count(group.id, tag_key.key)
-            top_values = self._get_top_values(group.id, tag_key.key)
+            top_values = GroupTagValue.get_top_values(group.id, tag_key.key, limit=10)
 
             data.append({
                 'id': str(tag_key.id),
@@ -37,15 +28,7 @@ class GroupTagsEndpoint(GroupEndpoint):
                 'name': tag_key.get_label(),
                 'uniqueValues': tag_key.values_seen,
                 'totalValues': total_values,
-                'topValues': [
-                    {
-                        'id': tag_value.id,
-                        'value': tag_value.value,
-                        'count': tag_value.times_seen,
-                        'firstSeen': tag_value.first_seen,
-                        'lastSeen': tag_value.last_seen,
-                    } for tag_value in top_values
-                ]
+                'topValues': serialize(top_values, request.user),
             })
 
         return Response(data)
