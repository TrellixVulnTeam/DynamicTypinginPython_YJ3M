commit d9cd3cbc2031ab22a0d51b3b17f1049819f1114d
Author: ted kaemming <ted@kaemming.com>
Date:   Thu Jun 21 13:18:01 2018 -0700

    ref(ingest): Allow custom post-processing callback with setting (#8808)

diff --git a/src/sentry/event_manager.py b/src/sentry/event_manager.py
index 481a26d09a..5da1a5d517 100644
--- a/src/sentry/event_manager.py
+++ b/src/sentry/event_manager.py
@@ -37,7 +37,6 @@ from sentry.models import (
 from sentry.plugins import plugins
 from sentry.signals import event_discarded, event_saved, first_event_received
 from sentry.tasks.merge import merge_group
-from sentry.tasks.post_process import post_process_group
 from sentry.utils import metrics
 from sentry.utils.cache import default_cache
 from sentry.utils.db import get_db_engine
@@ -52,6 +51,12 @@ DEFAULT_FINGERPRINT_VALUES = frozenset(['{{ default }}', '{{default}}'])
 ALLOWED_FUTURE_DELTA = timedelta(minutes=1)
 
 
+post_process_callback = getattr(settings, 'SENTRY_POST_PROCESS_CALLBACK', None)
+if post_process_callback is None:
+    from sentry.tasks.post_process import post_process_group
+    post_process_callback = post_process_group.delay
+
+
 def count_limit(count):
     # TODO: could we do something like num_to_store = max(math.sqrt(100*count)+59, 200) ?
     # ~ 150 * ((log(n) - 1.5) ^ 2 - 0.25)
@@ -945,7 +950,7 @@ class EventManager(object):
                 project.update(first_event=date)
                 first_event_received.send(project=project, group=group, sender=Project)
 
-            post_process_group.delay(
+            post_process_callback(
                 group=group,
                 event=event,
                 is_new=is_new,
diff --git a/tests/sentry/test_event_manager.py b/tests/sentry/test_event_manager.py
index 6d9cc42eba..5227c854e4 100644
--- a/tests/sentry/test_event_manager.py
+++ b/tests/sentry/test_event_manager.py
@@ -766,8 +766,8 @@ class EventManagerTest(TransactionTestCase):
 
         assert dict(event.tags).get('environment') == 'beta'
 
-    @mock.patch('sentry.event_manager.post_process_group.delay')
-    def test_group_environment(self, mock_post_process_group_delay):
+    @mock.patch('sentry.event_manager.post_process_callback')
+    def test_group_environment(self, mock_post_process_callback):
         release_version = '1.0'
 
         def save_event():
@@ -794,7 +794,7 @@ class EventManagerTest(TransactionTestCase):
 
         # Ensure that the first event in the (group, environment) pair is
         # marked as being part of a new environment.
-        mock_post_process_group_delay.assert_called_with(
+        mock_post_process_callback.assert_called_with(
             group=event.group,
             event=event,
             is_new=True,
@@ -808,7 +808,7 @@ class EventManagerTest(TransactionTestCase):
 
         # Ensure that the next event in the (group, environment) pair is *not*
         # marked as being part of a new environment.
-        mock_post_process_group_delay.assert_called_with(
+        mock_post_process_callback.assert_called_with(
             group=event.group,
             event=event,
             is_new=False,
