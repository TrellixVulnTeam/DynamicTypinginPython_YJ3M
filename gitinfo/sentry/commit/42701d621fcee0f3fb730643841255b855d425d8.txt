commit 42701d621fcee0f3fb730643841255b855d425d8
Author: David Cramer <dcramer@gmail.com>
Date:   Thu Mar 5 19:50:36 2015 -0800

    Expand release files API
    
    - source => release.source
    - Add update file endpoint
    - Add delete file endpoint

diff --git a/src/sentry/api/endpoints/release_file_details.py b/src/sentry/api/endpoints/release_file_details.py
index dc8af875fa..adcdf095ed 100644
--- a/src/sentry/api/endpoints/release_file_details.py
+++ b/src/sentry/api/endpoints/release_file_details.py
@@ -1,5 +1,6 @@
 from __future__ import absolute_import
 
+from rest_framework import serializers
 from rest_framework.response import Response
 
 from sentry.api.base import DocSection
@@ -8,6 +9,10 @@ from sentry.api.serializers import serialize
 from sentry.models import Release, ReleaseFile
 
 
+class ReleaseFileSerializer(serializers.Serializer):
+    name = serializers.CharField(max_length=200, required=True)
+
+
 class ReleaseFileDetailsEndpoint(ProjectEndpoint):
     doc_section = DocSection.RELEASES
 
@@ -30,3 +35,64 @@ class ReleaseFileDetailsEndpoint(ProjectEndpoint):
         )
 
         return Response(serialize(releasefile, request.user))
+
+    def put(self, request, project, version, file_id):
+        """
+        Update a file
+
+        Update metadata about an existing file.
+
+            {method} {path}
+            {{
+                "name": "http://example.com/application.js"
+            }}
+
+        """
+        release = Release.objects.get(
+            project=project,
+            version=version,
+        )
+        releasefile = ReleaseFile.objects.get(
+            release=release,
+            id=file_id,
+        )
+        serializer = ReleaseFileSerializer(data=request.DATA)
+
+        if not serializer.is_valid():
+            return Response(serializer.errors, status=400)
+
+        result = serializer.object
+
+        releasefile.update(
+            name=result['name'],
+        )
+
+        return Response(serialize(releasefile, request.user))
+
+    def delete(self, request, project, version, file_id):
+        """
+        Delete a file
+
+        Permanently remove a file from a release.
+
+            {method} {path}
+
+        This will also remove the physical file from storage.
+        """
+        release = Release.objects.get(
+            project=project,
+            version=version,
+        )
+        releasefile = ReleaseFile.objects.get(
+            release=release,
+            id=file_id,
+        )
+
+        file = releasefile.file
+
+        # TODO(dcramer): this doesnt handle a failure from file.deletefile() to
+        # the actual deletion of the db row
+        releasefile.delete()
+        file.delete()
+
+        return Response(status=204)
diff --git a/src/sentry/api/endpoints/release_files.py b/src/sentry/api/endpoints/release_files.py
index 0192060264..dfee6695d3 100644
--- a/src/sentry/api/endpoints/release_files.py
+++ b/src/sentry/api/endpoints/release_files.py
@@ -79,9 +79,11 @@ class ReleaseFilesEndpoint(ProjectEndpoint):
         full_name = request.DATA.get('name', fileobj.name)
         name = full_name.rsplit('/', 1)[-1]
 
+        # TODO(dcramer): File's are unique on (name, checksum) so we need to
+        # ensure that this file does not already exist for other purposes
         file = File(
             name=name,
-            type='source',
+            type='release.file',
             headers={
                 'Content-Type': fileobj.content_type,
             }
diff --git a/tests/sentry/api/endpoints/test_release_file_details.py b/tests/sentry/api/endpoints/test_release_file_details.py
index 7191d71368..16bd75c450 100644
--- a/tests/sentry/api/endpoints/test_release_file_details.py
+++ b/tests/sentry/api/endpoints/test_release_file_details.py
@@ -23,7 +23,7 @@ class ReleaseFileDetailsTest(APITestCase):
             file=File.objects.create(
                 path='http://example.com',
                 name='application.js',
-                type='source',
+                type='release.file',
             ),
             name='http://example.com/application.js'
         )
@@ -38,3 +38,78 @@ class ReleaseFileDetailsTest(APITestCase):
 
         assert response.status_code == 200, response.content
         assert response.data['id'] == str(releasefile.id)
+
+
+class ReleaseFileUpdateTest(APITestCase):
+    def test_simple(self):
+        self.login_as(user=self.user)
+
+        project = self.create_project(name='foo')
+
+        release = Release.objects.create(
+            project=project,
+            version='1',
+        )
+
+        releasefile = ReleaseFile.objects.create(
+            project=project,
+            release=release,
+            file=File.objects.create(
+                path='http://example.com',
+                name='application.js',
+                type='release.file',
+            ),
+            name='http://example.com/application.js'
+        )
+
+        url = reverse('sentry-api-0-release-file-details', kwargs={
+            'project_id': project.id,
+            'version': release.version,
+            'file_id': releasefile.id,
+        })
+
+        response = self.client.put(url, {
+            'name': 'foobar',
+        })
+
+        assert response.status_code == 200, response.content
+        assert response.data['id'] == str(releasefile.id)
+
+        releasefile = ReleaseFile.objects.get(id=releasefile.id)
+        assert releasefile.name == 'foobar'
+
+
+class ReleaseFileDeleteTest(APITestCase):
+    def test_simple(self):
+        self.login_as(user=self.user)
+
+        project = self.create_project(name='foo')
+
+        release = Release.objects.create(
+            project=project,
+            version='1',
+        )
+
+        releasefile = ReleaseFile.objects.create(
+            project=project,
+            release=release,
+            file=File.objects.create(
+                path='http://example.com',
+                name='application.js',
+                type='release.file',
+            ),
+            name='http://example.com/application.js'
+        )
+
+        url = reverse('sentry-api-0-release-file-details', kwargs={
+            'project_id': project.id,
+            'version': release.version,
+            'file_id': releasefile.id,
+        })
+
+        response = self.client.delete(url)
+
+        assert response.status_code == 204, response.content
+
+        assert not ReleaseFile.objects.filter(id=releasefile.id).exists()
+        assert not File.objects.filter(id=releasefile.file.id).exists()
diff --git a/tests/sentry/api/endpoints/test_release_files.py b/tests/sentry/api/endpoints/test_release_files.py
index 23d287b0f4..fd10901527 100644
--- a/tests/sentry/api/endpoints/test_release_files.py
+++ b/tests/sentry/api/endpoints/test_release_files.py
@@ -22,7 +22,7 @@ class ReleaseFilesListTest(APITestCase):
             file=File.objects.create(
                 path='http://example.com',
                 name='application.js',
-                type='source',
+                type='release.file',
             ),
             name='http://example.com/application.js'
         )
diff --git a/tests/sentry/lang/javascript/test_plugin.py b/tests/sentry/lang/javascript/test_plugin.py
index e6b48aeaaf..859a9c176b 100644
--- a/tests/sentry/lang/javascript/test_plugin.py
+++ b/tests/sentry/lang/javascript/test_plugin.py
@@ -177,7 +177,7 @@ class JavascriptIntegrationTest(TestCase):
 
         f1 = File(
             name='file.min.js',
-            type='source',
+            type='release.file',
             headers={'Content-Type': 'application/json'},
         )
         f1.putfile(open(get_fixture_path(f1.name), 'rb'))
@@ -190,7 +190,7 @@ class JavascriptIntegrationTest(TestCase):
 
         f2 = File(
             name='file1.js',
-            type='source',
+            type='release.file',
             headers={'Content-Type': 'application/json'},
         )
         f2.putfile(open(get_fixture_path(f2.name), 'rb'))
@@ -203,7 +203,7 @@ class JavascriptIntegrationTest(TestCase):
 
         f3 = File(
             name='file2.js',
-            type='source',
+            type='release.file',
             headers={'Content-Type': 'application/json'},
         )
         f3.putfile(open(get_fixture_path(f3.name), 'rb'))
@@ -216,7 +216,7 @@ class JavascriptIntegrationTest(TestCase):
 
         f4 = File(
             name='file.sourcemap.js',
-            type='source',
+            type='release.file',
             headers={'Content-Type': 'application/json'},
         )
         f4.putfile(open(get_fixture_path(f4.name), 'rb'))
