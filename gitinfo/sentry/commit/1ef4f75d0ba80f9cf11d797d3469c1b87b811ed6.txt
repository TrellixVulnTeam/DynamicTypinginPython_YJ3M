commit 1ef4f75d0ba80f9cf11d797d3469c1b87b811ed6
Author: Jess MacQueen <jessmacqueen@gmail.com>
Date:   Wed Oct 31 15:17:50 2018 -0700

    feat(api): Support search syntax in org events endpoint

diff --git a/src/sentry/api/endpoints/organization_events.py b/src/sentry/api/endpoints/organization_events.py
index 679ef7416d..76ff4b98b9 100644
--- a/src/sentry/api/endpoints/organization_events.py
+++ b/src/sentry/api/endpoints/organization_events.py
@@ -7,6 +7,7 @@ from rest_framework.response import Response
 
 from sentry import roles
 from sentry.api.bases import OrganizationEndpoint
+from sentry.api.event_search import get_snuba_query_args
 from sentry.api.paginator import GenericOffsetPaginator
 from sentry.api.serializers import serialize
 from sentry.api.serializers.models.event import SnubaEvent
@@ -56,12 +57,6 @@ class OrganizationEventsEndpoint(OrganizationEndpoint):
         return list(project_ids)
 
     def get(self, request, organization):
-        query = request.GET.get('query')
-        conditions = []
-        if query:
-            conditions.append(
-                [['positionCaseInsensitive', ['message', "'%s'" % (query,)]], '!=', 0])
-
         try:
             start, end = get_date_range_from_params(request.GET)
         except InvalidParams as exc:
@@ -75,13 +70,14 @@ class OrganizationEventsEndpoint(OrganizationEndpoint):
         data_fn = partial(
             # extract 'data' from raw_query result
             lambda *args, **kwargs: raw_query(*args, **kwargs)['data'],
-            start=start,
-            end=end,
-            conditions=conditions,
-            filter_keys={'project_id': project_ids},
             selected_columns=SnubaEvent.selected_columns,
             orderby='-timestamp',
             referrer='api.organization-events',
+            **get_snuba_query_args(query=request.GET.get('query'), params={
+                'start': start,
+                'end': end,
+                'project_id': project_ids,
+            })
         )
 
         return self.paginate(
diff --git a/src/sentry/testutils/cases.py b/src/sentry/testutils/cases.py
index 27ebc39258..0e8b933f39 100644
--- a/src/sentry/testutils/cases.py
+++ b/src/sentry/testutils/cases.py
@@ -849,6 +849,10 @@ class SnubaTestCase(TestCase):
                 group_id=event.group_id,
             )
 
+        if 'user' in tags:
+            user = tags.pop('user')
+            data['user'] = user
+
         hashes = get_hashes_from_fingerprint(
             event,
             data.get('fingerprint', ['{{ default }}']),
diff --git a/tests/snuba/api/endpoints/test_organization_events.py b/tests/snuba/api/endpoints/test_organization_events.py
index af8a57ac56..e64407497f 100644
--- a/tests/snuba/api/endpoints/test_organization_events.py
+++ b/tests/snuba/api/endpoints/test_organization_events.py
@@ -63,7 +63,7 @@ class OrganizationEventsTest(APITestCase, SnubaTestCase):
         assert len(response.data) == 2
         self.assert_events_in_response(response, [event_1.event_id, event_2.event_id])
 
-    def test_message_search(self):
+    def test_message_search_raw_text(self):
         self.login_as(user=self.user)
 
         project = self.create_project()
@@ -73,7 +73,8 @@ class OrganizationEventsTest(APITestCase, SnubaTestCase):
             'y' * 32,
             group=group,
             message="Delet the Data",
-            datetime=self.min_ago)
+            datetime=self.min_ago,
+        )
 
         url = reverse(
             'sentry-api-0-organization-events',
@@ -88,6 +89,33 @@ class OrganizationEventsTest(APITestCase, SnubaTestCase):
         assert response.data[0]['eventID'] == event_2.event_id
         assert response.data[0]['message'] == 'Delet the Data'
 
+    def test_message_search_tags(self):
+        self.login_as(user=self.user)
+
+        project = self.create_project()
+        group = self.create_group(project=project)
+        self.create_event('x' * 32, group=group, message="how to make fast", datetime=self.min_ago)
+        event_2 = self.create_event(
+            'y' * 32,
+            group=group,
+            message="Delet the Data",
+            datetime=self.min_ago,
+            tags={'user': {'email': 'foo@example.com'}},
+        )
+
+        url = reverse(
+            'sentry-api-0-organization-events',
+            kwargs={
+                'organization_slug': project.organization.slug,
+            }
+        )
+        response = self.client.get(url, {'query': 'user.email:foo@example.com'}, format='json')
+
+        assert response.status_code == 200, response.content
+        assert len(response.data) == 1
+        assert response.data[0]['eventID'] == event_2.event_id
+        assert response.data[0]['message'] == 'Delet the Data'
+
     def test_project_filtering(self):
         user = self.create_user()
         org = self.create_organization()
