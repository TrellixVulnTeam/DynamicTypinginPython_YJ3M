commit 842c9c703b9e5ab8102c83797fedbd8408b01039
Author: Markus Unterwaditzer <markus@unterwaditzer.net>
Date:   Tue Feb 18 11:05:11 2020 +0100

    ref: Log warning when symbolication task takes too long (#16849)
    
    * ref: Log warning when symbolication task takes too long
    
    * fix: Fix random test

diff --git a/src/sentry/tasks/store.py b/src/sentry/tasks/store.py
index 639d830c00..5f09bfad4d 100644
--- a/src/sentry/tasks/store.py
+++ b/src/sentry/tasks/store.py
@@ -183,6 +183,7 @@ def _do_process_event(cache_key, start_time, event_id, process_task, data=None):
 
     data = CanonicalKeyDict(data)
     project_id = data["project"]
+    event_id = data["event_id"]
 
     with configure_scope() as scope:
         scope.set_tag("project", project_id)
@@ -208,10 +209,18 @@ def _do_process_event(cache_key, start_time, event_id, process_task, data=None):
             has_changed = True
             data = new_data
     except RetrySymbolication as e:
+        if start_time and (time() - start_time) > 120:
+            error_logger.warning(
+                "process.slow", extra={"project_id": project_id, "event_id": event_id}
+            )
+
         if start_time and (time() - start_time) > 3600:
             # Do not drop event but actually continue with rest of pipeline
             # (persisting unsymbolicated event)
-            error_logger.exception("process.failed.infinite_retry")
+            error_logger.exception(
+                "process.failed.infinite_retry",
+                extra={"project_id": project_id, "event_id": event_id},
+            )
         else:
             retry_process_event.apply_async(
                 args=(),
diff --git a/tests/sentry/tasks/test_store.py b/tests/sentry/tasks/test_store.py
index 8d98cae6d2..84f69e9903 100644
--- a/tests/sentry/tasks/test_store.py
+++ b/tests/sentry/tasks/test_store.py
@@ -3,7 +3,6 @@ from __future__ import absolute_import
 import pytest
 
 from sentry.utils.compat import mock
-import uuid
 from time import time
 
 from sentry import quotas, tsdb
@@ -12,6 +11,8 @@ from sentry.plugins.base.v2 import Plugin2
 from sentry.tasks.store import preprocess_event, process_event, save_event
 from sentry.utils.dates import to_datetime
 
+EVENT_ID = "cc3e6c2bb6b6498097f336d1e6979f4b"
+
 
 class BasicPreprocessorPlugin(Plugin2):
     def get_event_preprocessors(self, data):
@@ -88,6 +89,7 @@ def test_move_to_process_event(
         "project": default_project.id,
         "platform": "mattlang",
         "logentry": {"formatted": "test"},
+        "event_id": EVENT_ID,
         "extra": {"foo": "bar"},
     }
 
@@ -104,6 +106,7 @@ def test_move_to_save_event(default_project, mock_process_event, mock_save_event
         "project": default_project.id,
         "platform": "NOTMATTLANG",
         "logentry": {"formatted": "test"},
+        "event_id": EVENT_ID,
         "extra": {"foo": "bar"},
     }
 
@@ -123,6 +126,7 @@ def test_process_event_mutate_and_save(
         "project": default_project.id,
         "platform": "mattlang",
         "logentry": {"formatted": "test"},
+        "event_id": EVENT_ID,
         "extra": {"foo": "bar"},
     }
 
@@ -138,7 +142,7 @@ def test_process_event_mutate_and_save(
     assert duration == 3600
 
     mock_save_event.delay.assert_called_once_with(
-        cache_key="e:1", data=None, start_time=1, event_id=None, project_id=default_project.id
+        cache_key="e:1", data=None, start_time=1, event_id=EVENT_ID, project_id=default_project.id
     )
 
 
@@ -152,6 +156,7 @@ def test_process_event_no_mutate_and_save(
         "project": default_project.id,
         "platform": "noop",
         "logentry": {"formatted": "test"},
+        "event_id": EVENT_ID,
         "extra": {"foo": "bar"},
     }
 
@@ -163,7 +168,7 @@ def test_process_event_no_mutate_and_save(
     assert mock_default_cache.set.call_count == 0
 
     mock_save_event.delay.assert_called_once_with(
-        cache_key="e:1", data=None, start_time=1, event_id=None, project_id=default_project.id
+        cache_key="e:1", data=None, start_time=1, event_id=EVENT_ID, project_id=default_project.id
     )
 
 
@@ -177,6 +182,7 @@ def test_process_event_unprocessed(
         "project": default_project.id,
         "platform": "holdmeclose",
         "logentry": {"formatted": "test"},
+        "event_id": EVENT_ID,
         "extra": {"foo": "bar"},
     }
 
@@ -190,7 +196,7 @@ def test_process_event_unprocessed(
     assert duration == 3600
 
     mock_save_event.delay.assert_called_once_with(
-        cache_key="e:1", data=None, start_time=1, event_id=None, project_id=default_project.id
+        cache_key="e:1", data=None, start_time=1, event_id=EVENT_ID, project_id=default_project.id
     )
 
 
@@ -202,7 +208,7 @@ def test_hash_discarded_raised(default_project, mock_refund, mock_incr, register
         "project": default_project.id,
         "platform": "NOTMATTLANG",
         "logentry": {"formatted": "test"},
-        "event_id": uuid.uuid4().hex,
+        "event_id": EVENT_ID,
         "extra": {"foo": "bar"},
     }
 
