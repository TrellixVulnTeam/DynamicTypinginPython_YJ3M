commit 3a688eae692c9ba8d0074e4a790319e5caa06090
Author: David Cramer <dcramer@gmail.com>
Date:   Wed Sep 5 15:46:52 2018 -0700

    fix: Correct handling of BitHandler in audit log entries

diff --git a/src/sentry/api/serializers/models/auditlogentry.py b/src/sentry/api/serializers/models/auditlogentry.py
index c5993f704a..9c0151c546 100644
--- a/src/sentry/api/serializers/models/auditlogentry.py
+++ b/src/sentry/api/serializers/models/auditlogentry.py
@@ -2,24 +2,23 @@ from __future__ import absolute_import
 
 import six
 
+from bitfield.types import BitHandler
 from sentry.api.serializers import Serializer, register, serialize
 from sentry.models import AuditLogEntry
 
 
 def fix(data):
+    # XXX(dcramer): At some point Organization.flags was serialized as a BitHandler
+    if 'flags' in data and isinstance(data['flags'], BitHandler):
+        data['flags'] = int(data['flags'])
+
     # There was a point in time where full Team objects
     # got serialized into our AuditLogEntry.data, so these
     # values need to be stripped and reduced down to integers
-    if 'teams' not in data:
-        return data
-
-    if not data['teams']:
-        return data
-
-    if not hasattr(data['teams'][0], 'id'):
-        return data
+    if data.get('teams'):
+        if hasattr(data['teams'][0], 'id'):
+            data['teams'] = [t.id for t in data['teams']]
 
-    data['teams'] = [t.id for t in data['teams']]
     return data
 
 
diff --git a/src/sentry/models/organization.py b/src/sentry/models/organization.py
index bf1ee51c1e..2b6eb67a34 100644
--- a/src/sentry/models/organization.py
+++ b/src/sentry/models/organization.py
@@ -196,7 +196,7 @@ class Organization(Model):
             'slug': self.slug,
             'name': self.name,
             'status': int(self.status),
-            'flags': self.flags,
+            'flags': int(self.flags),
             'default_role': self.default_role,
         }
 
diff --git a/src/sentry/utils/json.py b/src/sentry/utils/json.py
index 2e1f294a85..31d8910dc5 100644
--- a/src/sentry/utils/json.py
+++ b/src/sentry/utils/json.py
@@ -16,6 +16,7 @@ import uuid
 import six
 import decimal
 
+from bitfield.types import BitHandler
 from django.utils.timezone import is_aware
 from django.utils.html import mark_safe
 
@@ -40,6 +41,8 @@ def better_default_encoder(o):
         return six.text_type(o)
     elif isinstance(o, Enum):
         return o.value
+    elif isinstance(o, BitHandler):
+        return int(o)
     elif callable(o):
         return '<function>'
     raise TypeError(repr(o) + ' is not JSON serializable')
diff --git a/tests/sentry/models/test_organization.py b/tests/sentry/models/test_organization.py
index 6359058227..44daae8cdb 100644
--- a/tests/sentry/models/test_organization.py
+++ b/tests/sentry/models/test_organization.py
@@ -425,3 +425,8 @@ class Require2fa(TestCase):
             actor_key=None,
             ip_address=None,
         ).count() == 1
+
+    def test_get_audit_log_data(self):
+        org = self.create_organization()
+        result = org.get_audit_log_data()
+        assert result['flags'] == int(org.flags)
