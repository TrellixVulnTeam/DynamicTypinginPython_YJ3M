commit 71082292c25c5098ff8156888238faa1c0c3a6a4
Author: Armin Ronacher <armin.ronacher@active-4.com>
Date:   Tue Dec 13 01:22:50 2016 +0100

    Added basic UI support for the processing info hint bar

diff --git a/src/sentry/api/endpoints/project_processingissues.py b/src/sentry/api/endpoints/project_processingissues.py
new file mode 100644
index 0000000000..972a38b03e
--- /dev/null
+++ b/src/sentry/api/endpoints/project_processingissues.py
@@ -0,0 +1,30 @@
+from __future__ import absolute_import
+
+from rest_framework.response import Response
+
+from sentry.api.bases.project import ProjectEndpoint
+from sentry.api.serializers import serialize
+from sentry.models import ProcessingIssue, ProcessingIssueGroup
+
+
+class ProjectProcessingIssuesEndpoint(ProjectEndpoint):
+    def get(self, request, project):
+        """
+        List a project's processing issues.
+        """
+        num_issues = ProcessingIssue.objects.filter(
+            project=project
+        ).count()
+        num_groups = ProcessingIssueGroup.objects.filter(
+            issue__project=project
+        ).values('group').distinct().count()
+        num_releases = ProcessingIssueGroup.objects.filter(
+            issue__project=project
+        ).values('release').distinct().count()
+
+        return Response(serialize({
+            'hasIssues': num_issues > 0 and num_groups > 0,
+            'affectedIssues': num_issues,
+            'affectedGroups': num_groups,
+            'affectedReleases': num_releases,
+        }, request.user))
diff --git a/src/sentry/models/processingissue.py b/src/sentry/models/processingissue.py
index 7aeb0128f6..5c41825b3d 100644
--- a/src/sentry/models/processingissue.py
+++ b/src/sentry/models/processingissue.py
@@ -10,18 +10,7 @@ from __future__ import absolute_import
 
 from django.db import models
 
-from sentry.db.models import FlexibleForeignKey, Model, GzippedDictField, \
-    BaseManager
-
-
-class ReleaseProblemManager(BaseManager):
-
-    def record_problem(self, release, key, data):
-        return self.update_or_create(
-            release=release,
-            key=key,
-            defaults={'data': data},
-        )[0]
+from sentry.db.models import FlexibleForeignKey, Model, GzippedDictField
 
 
 class ProcessingIssue(Model):
@@ -31,8 +20,6 @@ class ProcessingIssue(Model):
     key = models.CharField(max_length=256)
     data = GzippedDictField()
 
-    objects = ReleaseProblemManager()
-
     class Meta:
         app_label = 'sentry'
         db_table = 'sentry_processingissue'
diff --git a/src/sentry/static/sentry/app/views/stream.jsx b/src/sentry/static/sentry/app/views/stream.jsx
index a570f50503..832712b1b2 100644
--- a/src/sentry/static/sentry/app/views/stream.jsx
+++ b/src/sentry/static/sentry/app/views/stream.jsx
@@ -22,7 +22,7 @@ import StreamSidebar from './stream/sidebar';
 import utils from '../utils';
 import {logAjaxError} from '../utils/logging';
 import parseLinkHeader from '../utils/parseLinkHeader';
-import {t, tct} from '../locale';
+import {t, tn, tct} from '../locale';
 
 const Stream = React.createClass({
   propTypes: {
@@ -59,6 +59,7 @@ const Stream = React.createClass({
       loading: (searchId || !this.hasQuery() ? true : false),
       savedSearchLoading: true,
       savedSearchList: [],
+      processingIssues: null,
       selectAllActive: false,
       multiSelected: false,
       anySelected: false,
@@ -86,6 +87,7 @@ const Stream = React.createClass({
     });
 
     this.fetchSavedSearches();
+    this.fetchProcessingIssues();
     this.fetchTags();
     if (!this.state.loading) {
       this.fetchData();
@@ -190,6 +192,23 @@ const Stream = React.createClass({
     });
   },
 
+  fetchProcessingIssues() {
+    let {orgId, projectId} = this.props.params;
+    this.api.request(`/projects/${orgId}/${projectId}/processingissues/`, {
+      success: (data) => {
+        if (data.hasIssues) {
+          this.setState({
+            processingIssues: data,
+          });
+        }
+      },
+      error: (error) => {
+        logAjaxError(error);
+        // this is okay. it's just a ui hint
+      }
+    });
+  },
+
   fetchTags() {
     StreamTagStore.reset();
     StreamTagActions.loadTags();
@@ -460,6 +479,10 @@ const Stream = React.createClass({
     return links && !links.previous.results && !links.next.results;
   },
 
+  showingProcessingIssues() {
+    return this.state.query && this.state.query.trim() == 'is:unprocessed';
+  },
+
   transitionTo() {
     let queryParams = {};
 
@@ -539,6 +562,32 @@ const Stream = React.createClass({
     );
   },
 
+  renderProcessingIssuesHint() {
+    let pi = this.state.processingIssues;
+    if (!pi || this.showingProcessingIssues()) {
+      return null;
+    }
+
+    let issues = tn('%d problems', '%d problems', pi.affectedIssues);
+    let groups = tn('%d group', '%d groups', pi.affectedGroups);
+    let releases = tn('%d release', '%d releases', pi.affectedReleases);
+
+    let {orgId, projectId} = this.props.params;
+
+    return (
+      <div className="processing-issues">
+        <strong>{t('Unprocessed Issues: ')}</strong>
+        {tct('there are [issues] affecting [groups] in [releases].', {
+          issues: issues,
+          groups: groups,
+          releases: releases,
+        })}
+        {' '}
+        <Link to={`/${orgId}/${projectId}/?query=is:unprocessed`}>{t('show affected issues')}</Link>
+      </div>
+    );
+  },
+
   renderStreamBody() {
     let body;
 
@@ -612,6 +661,7 @@ const Stream = React.createClass({
                 </div>
               </div>
             </Sticky>
+            {this.renderProcessingIssuesHint()}
             {this.renderStreamBody()}
             <Pagination pageLinks={this.state.pageLinks}/>
           </div>
diff --git a/src/sentry/static/sentry/less/stream.less b/src/sentry/static/sentry/less/stream.less
index abd6a1cc4b..548cb9ee26 100644
--- a/src/sentry/static/sentry/less/stream.less
+++ b/src/sentry/static/sentry/less/stream.less
@@ -193,6 +193,24 @@
 * ============================================================================
 */
 
+
+.stream-content .processing-issues {
+  padding-left: 0;
+  font-size: 14px;
+  font-weight: 400;
+  padding: 5px 10px;
+  border: 1px solid @purple-light;
+  background: lighten(@purple-lightest, 15%);
+  color: @purple-dark;
+  text-align: center;
+
+  a {
+    color: @purple-dark;
+    font-weight: bold;
+    text-decoration: underline;
+  }
+}
+
 .group-list {
   background: #fff;
   border: 1px solid @trim;
