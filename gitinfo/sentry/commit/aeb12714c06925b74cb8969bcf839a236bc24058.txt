commit aeb12714c06925b74cb8969bcf839a236bc24058
Author: Matej Minar <matej.minar@sentry.io>
Date:   Fri Jul 10 15:26:53 2020 +0200

    feat(ui): Make session duration chart work sub second (#19811)

diff --git a/src/sentry/static/sentry/app/utils/formatters.tsx b/src/sentry/static/sentry/app/utils/formatters.tsx
index 9c540d4707..fad5b1f57f 100644
--- a/src/sentry/static/sentry/app/utils/formatters.tsx
+++ b/src/sentry/static/sentry/app/utils/formatters.tsx
@@ -1,4 +1,5 @@
 import {Release} from '@sentry/release-parser';
+import round from 'lodash/round';
 
 import {t, tn} from 'app/locale';
 import {CommitAuthor, User} from 'app/types';
@@ -87,7 +88,7 @@ export function getDuration(
 
 export function getExactDuration(seconds: number, abbreviation: boolean = false) {
   const convertDuration = (secs: number, abbr: boolean) => {
-    const value = Math.abs(secs * 1000);
+    const value = round(Math.abs(secs * 1000));
 
     const divideBy = (time: number) => {
       return {quotient: Math.floor(value / time), remainder: value % time};
diff --git a/src/sentry/static/sentry/app/views/releasesV2/detail/overview/releaseStatsRequest.tsx b/src/sentry/static/sentry/app/views/releasesV2/detail/overview/releaseStatsRequest.tsx
index 33ce8cc77d..b42c847a21 100644
--- a/src/sentry/static/sentry/app/views/releasesV2/detail/overview/releaseStatsRequest.tsx
+++ b/src/sentry/static/sentry/app/views/releasesV2/detail/overview/releaseStatsRequest.tsx
@@ -20,7 +20,7 @@ import CHART_PALETTE from 'app/constants/chartPalette';
 
 import {YAxis} from './chart/releaseChartControls';
 import {getInterval, getReleaseEventView} from './chart/utils';
-import {displayCrashFreePercent, getCrashFreePercent} from '../../utils';
+import {displayCrashFreePercent, getCrashFreePercent, roundDuration} from '../../utils';
 
 const omitIgnoredProps = (props: Props) =>
   omitBy(props, (_, key) =>
@@ -373,21 +373,21 @@ class ReleaseStatsRequest extends React.Component<Props, State> {
       },
     };
 
-    const sessionDurationAverage = Math.round(
+    const sessionDurationAverage =
       mean(
         responseData
           .map(([timeframe, values]) => {
             chartData.data.push({
               name: timeframe * 1000,
-              value: Math.round(values.duration_p50),
+              value: roundDuration(values.duration_p50),
             });
 
             return values.duration_p50;
           })
           .filter(duration => defined(duration))
-      ) || 0
-    );
-    const summary = getExactDuration(sessionDurationAverage ?? 0);
+      ) || 0;
+
+    const summary = getExactDuration(roundDuration(sessionDurationAverage));
 
     return {chartData: [chartData], chartSummary: summary};
   }
diff --git a/src/sentry/static/sentry/app/views/releasesV2/utils/index.tsx b/src/sentry/static/sentry/app/views/releasesV2/utils/index.tsx
index 1a781292b3..00001e06cb 100644
--- a/src/sentry/static/sentry/app/views/releasesV2/utils/index.tsx
+++ b/src/sentry/static/sentry/app/views/releasesV2/utils/index.tsx
@@ -55,6 +55,10 @@ export const decideReleasesVersion = async hasNewReleases => {
   }
 };
 
+export const roundDuration = (seconds: number) => {
+  return round(seconds, seconds > 60 ? 0 : 3);
+};
+
 export const getCrashFreePercent = (
   percent: number,
   decimalThreshold = 95,
diff --git a/tests/js/spec/helpers/formatters.spec.jsx b/tests/js/spec/helpers/formatters.spec.jsx
index 790e6d6568..8c712953e7 100644
--- a/tests/js/spec/helpers/formatters.spec.jsx
+++ b/tests/js/spec/helpers/formatters.spec.jsx
@@ -56,6 +56,7 @@ describe('formatters', function() {
     });
 
     it('should format in the right way', () => {
+      expect(getExactDuration(2.030043848568126)).toEqual('2 seconds 30 milliseconds');
       expect(getExactDuration(0.2)).toEqual('200 milliseconds');
       expect(getExactDuration(13)).toEqual('13 seconds');
       expect(getExactDuration(60)).toEqual('1 minute');
