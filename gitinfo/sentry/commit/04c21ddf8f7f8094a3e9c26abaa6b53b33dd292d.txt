commit 04c21ddf8f7f8094a3e9c26abaa6b53b33dd292d
Author: Evan Purkhiser <evanpurkhiser@gmail.com>
Date:   Thu Feb 13 11:06:59 2020 -0800

    chore(ts): Convert onboardingStatus (#16995)

diff --git a/src/sentry/static/sentry/app/components/sidebar/onboardingStatus.jsx b/src/sentry/static/sentry/app/components/sidebar/onboardingStatus.jsx
deleted file mode 100644
index 95b56c4d2e..0000000000
--- a/src/sentry/static/sentry/app/components/sidebar/onboardingStatus.jsx
+++ /dev/null
@@ -1,110 +0,0 @@
-import PropTypes from 'prop-types';
-import React from 'react';
-
-import {trackAnalyticsEvent} from 'app/utils/analytics';
-import getOnboardingTasks from 'app/components/onboardingWizard/getOnboardingTasks';
-import SidebarPanel from 'app/components/sidebar/sidebarPanel';
-import {tct} from 'app/locale';
-import TodoList from 'app/components/onboardingWizard/todoList';
-import Tooltip from 'app/components/tooltip';
-
-class OnboardingStatus extends React.Component {
-  static propTypes = {
-    org: PropTypes.object.isRequired,
-    currentPanel: PropTypes.string,
-    onShowPanel: PropTypes.func,
-    showPanel: PropTypes.bool,
-    hidePanel: PropTypes.func,
-    collapsed: PropTypes.bool,
-  };
-
-  componentDidUpdate(prevProps) {
-    const {currentPanel, org} = this.props;
-    if (
-      currentPanel !== prevProps.currentPanel &&
-      (currentPanel || prevProps.currentPanel === 'todos')
-    ) {
-      this.recordAnalytics(currentPanel, parseInt(org.id, 10));
-    }
-  }
-
-  recordAnalytics(currentPanel, orgId) {
-    const data =
-      currentPanel === 'todos'
-        ? {
-            eventKey: 'onboarding.wizard_opened',
-            eventName: 'Onboarding Wizard Opened',
-          }
-        : {
-            eventKey: 'onboarding.wizard_closed',
-            eventName: 'Onboarding Wizard Closed',
-          };
-    trackAnalyticsEvent({
-      ...data,
-      organization_id: orgId,
-    });
-  }
-
-  render() {
-    const {collapsed, org, currentPanel, hidePanel, showPanel, onShowPanel} = this.props;
-    if (
-      typeof org.features === 'undefined' ||
-      org.features.indexOf('onboarding') === -1
-    ) {
-      return null;
-    }
-
-    const doneTasks = (org.onboardingTasks || []).filter(
-      task => task.status === 'complete' || task.status === 'skipped'
-    );
-
-    const tasks = getOnboardingTasks(org);
-    const allDisplayedTasks = tasks.filter(task => task.display);
-
-    const percentage = Math.round(
-      (doneTasks.length / allDisplayedTasks.length) * 100
-    ).toString();
-
-    const style = {
-      height: collapsed ? percentage + '%' : undefined,
-      width: collapsed ? undefined : percentage + '%',
-    };
-
-    if (doneTasks.length >= allDisplayedTasks.length) {
-      return null;
-    }
-    const title = tct(
-      'Getting started with Sentry: [br] [done] / [all] tasks completed',
-      {
-        br: <br />,
-        done: doneTasks.length,
-        all: allDisplayedTasks.length,
-      }
-    );
-
-    return (
-      <div className={currentPanel === 'todos' ? 'onboarding active' : 'onboarding'}>
-        <Tooltip title={title}>
-          <div
-            data-test-id="onboarding-progress-bar"
-            className="onboarding-progress-bar"
-            onClick={onShowPanel}
-          >
-            <div className="slider" style={style} />
-          </div>
-        </Tooltip>
-        {showPanel && currentPanel === 'todos' && (
-          <SidebarPanel
-            collapsed={collapsed}
-            title="Getting Started with Sentry"
-            hidePanel={hidePanel}
-          >
-            <TodoList />
-          </SidebarPanel>
-        )}
-      </div>
-    );
-  }
-}
-
-export default OnboardingStatus;
diff --git a/src/sentry/static/sentry/app/components/sidebar/onboardingStatus.tsx b/src/sentry/static/sentry/app/components/sidebar/onboardingStatus.tsx
new file mode 100644
index 0000000000..ff2728e9de
--- /dev/null
+++ b/src/sentry/static/sentry/app/components/sidebar/onboardingStatus.tsx
@@ -0,0 +1,151 @@
+import PropTypes from 'prop-types';
+import React from 'react';
+import styled from '@emotion/styled';
+import {css} from '@emotion/core';
+
+import {trackAnalyticsEvent} from 'app/utils/analytics';
+import getOnboardingTasks from 'app/components/onboardingWizard/getOnboardingTasks';
+import SidebarPanel from 'app/components/sidebar/sidebarPanel';
+import {tct} from 'app/locale';
+import TodoList from 'app/components/onboardingWizard/todoList';
+import Tooltip from 'app/components/tooltip';
+import {Organization} from 'app/types';
+
+type Props = {
+  org: Organization;
+  currentPanel: string;
+  onShowPanel: () => void;
+  hidePanel: () => void;
+  showPanel: boolean;
+  collapsed: boolean;
+};
+
+function recordAnalytics(currentPanel: string, orgId: string) {
+  const data =
+    currentPanel === 'todos'
+      ? {eventKey: 'onboarding.wizard_opened', eventName: 'Onboarding Wizard Opened'}
+      : {eventKey: 'onboarding.wizard_closed', eventName: 'Onboarding Wizard Closed'};
+  trackAnalyticsEvent({...data, organization_id: orgId});
+}
+
+class OnboardingStatus extends React.Component<Props> {
+  static propTypes = {
+    org: PropTypes.object.isRequired,
+    currentPanel: PropTypes.string,
+    onShowPanel: PropTypes.func,
+    showPanel: PropTypes.bool,
+    hidePanel: PropTypes.func,
+    collapsed: PropTypes.bool,
+  };
+
+  componentDidUpdate(prevProps: Props) {
+    const {currentPanel, org} = this.props;
+    if (
+      currentPanel !== prevProps.currentPanel &&
+      (currentPanel || prevProps.currentPanel === 'todos')
+    ) {
+      recordAnalytics(currentPanel, org.id);
+    }
+  }
+
+  render() {
+    const {collapsed, org, currentPanel, hidePanel, showPanel, onShowPanel} = this.props;
+
+    if (!(org.features && org.features.includes('onboarding'))) {
+      return null;
+    }
+
+    const doneTasks = (org.onboardingTasks || []).filter(
+      task => task.status === 'complete' || task.status === 'skipped'
+    );
+
+    const tasks = getOnboardingTasks(org);
+    const allDisplayedTasks = tasks.filter(task => task.display);
+
+    if (doneTasks.length >= allDisplayedTasks.length) {
+      return null;
+    }
+
+    const tooltipTitle = tct(
+      'Getting started with Sentry: [br] [done] / [all] tasks completed',
+      {
+        br: <br />,
+        done: doneTasks.length,
+        all: allDisplayedTasks.length,
+      }
+    );
+
+    return (
+      <React.Fragment>
+        <Tooltip title={tooltipTitle} containerDisplayMode="block">
+          <OnboardingProgressBar
+            onClick={onShowPanel}
+            isActive={currentPanel === 'todos'}
+            isCollapsed={collapsed}
+            progress={Math.round((doneTasks.length / allDisplayedTasks.length) * 100)}
+          />
+        </Tooltip>
+        {showPanel && currentPanel === 'todos' && (
+          <SidebarPanel
+            collapsed={collapsed}
+            title="Getting Started with Sentry"
+            hidePanel={hidePanel}
+          >
+            <TodoList />
+          </SidebarPanel>
+        )}
+      </React.Fragment>
+    );
+  }
+}
+
+const hoverBg = css`
+  background: rgba(255, 255, 255, 0.3);
+`;
+
+const OnboardingProgressBar = styled('div')<{
+  isActive: boolean;
+  isCollapsed: boolean;
+  progress: number;
+}>`
+  background: rgba(255, 255, 255, 0.15);
+  border-radius: 2px;
+  position: relative;
+  cursor: pointer;
+  z-index: 200;
+  margin: 0 auto;
+  display: flex;
+  align-items: flex-end;
+
+  width: ${p => (p.isCollapsed ? '16px' : '100%')};
+  height: ${p => (p.isCollapsed ? '150px' : '16px')};
+
+  ${p => p.isActive && hoverBg};
+
+  &:hover {
+    ${hoverBg}
+    background: rgba(255, 255, 255, 0.3);
+  }
+
+  &:before {
+    content: '';
+    display: block;
+    position: absolute;
+    top: -10px;
+    bottom: -10px;
+    left: -10px;
+    right: -10px;
+  }
+
+  &:after {
+    content: '';
+    display: block;
+    border-radius: inherit;
+    background-color: ${p => p.theme.green};
+
+    width: ${p => (p.isCollapsed ? '100%' : `${p.progress}%`)};
+    height: ${p => (p.isCollapsed ? `${p.progress}%` : '100%')};
+  }
+`;
+
+export default OnboardingStatus;
diff --git a/src/sentry/static/sentry/less/organization.less b/src/sentry/static/sentry/less/organization.less
index ecc8844b8a..63c8d21e74 100644
--- a/src/sentry/static/sentry/less/organization.less
+++ b/src/sentry/static/sentry/less/organization.less
@@ -165,83 +165,6 @@
   }
 }
 
-/**
- * Onboarding
- * ============================================================================
- */
-
-.onboarding-progress-bar {
-  background: rgba(255, 255, 255, 0.15);
-  width: 16px;
-  height: 150px;
-  float: right;
-  margin-right: 20px;
-  margin-top: 16px;
-  border-radius: 2px;
-  position: relative;
-  cursor: pointer;
-  z-index: 200;
-
-  .slider {
-    background: @green-light;
-    padding-right: 0;
-    border-radius: inherit;
-    box-shadow: 0 2px 1px rgba(0, 0, 0, 0.08);
-    position: absolute;
-    bottom: 0;
-    left: 0;
-    width: 16px;
-  }
-
-  &:before {
-    display: block;
-    content: '';
-    position: absolute;
-    top: -10px;
-    bottom: -10px;
-    left: -10px;
-    right: -10px;
-  }
-}
-
-.body-sidebar {
-  .onboarding-progress-bar {
-    height: 16px;
-    width: 100%;
-    float: none;
-    margin-right: 0;
-    margin-top: 0;
-
-    .slider {
-      height: 16px;
-    }
-    &:before {
-      top: 0;
-      bottom: 0;
-      left: 0;
-      right: 0;
-    }
-  }
-
-  &.collapsed {
-    .onboarding-progress-bar {
-      width: 16px;
-      height: 150px;
-      margin-left: 8px;
-    }
-    .slider {
-      width: 16px;
-      height: auto;
-    }
-  }
-}
-
-.onboarding-progress-bar:hover,
-.active .onboarding-progress-bar,
-.onboarding-progress-bar.active {
-  background: rgba(255, 255, 255, 0.3);
-}
-
 /**
 * Medium to small screens
 * ============================================================================
diff --git a/tests/js/spec/components/sidebar/index.spec.jsx b/tests/js/spec/components/sidebar/index.spec.jsx
index 579adddddd..41b8bdec28 100644
--- a/tests/js/spec/components/sidebar/index.spec.jsx
+++ b/tests/js/spec/components/sidebar/index.spec.jsx
@@ -95,9 +95,9 @@ describe('Sidebar', function() {
       routerContext
     );
 
-    expect(wrapper.find('[data-test-id="onboarding-progress-bar"]')).toHaveLength(1);
+    expect(wrapper.find('OnboardingProgressBar')).toHaveLength(1);
 
-    wrapper.find('[data-test-id="onboarding-progress-bar"]').simulate('click');
+    wrapper.find('OnboardingProgressBar').simulate('click');
     wrapper.update();
 
     expect(wrapper.find('OnboardingStatus SidebarPanel')).toMatchSnapshot();
