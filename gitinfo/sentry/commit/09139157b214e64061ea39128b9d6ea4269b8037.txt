commit 09139157b214e64061ea39128b9d6ea4269b8037
Author: David Cramer <dcramer@gmail.com>
Date:   Mon Jun 29 16:33:36 2015 -0700

    Basic implementation of events caused by release

diff --git a/src/sentry/static/sentry/app/views/stream/group.jsx b/src/sentry/static/sentry/app/components/streamGroup.jsx
similarity index 90%
rename from src/sentry/static/sentry/app/views/stream/group.jsx
rename to src/sentry/static/sentry/app/components/streamGroup.jsx
index 4b7d01444e..59da2beef8 100644
--- a/src/sentry/static/sentry/app/views/stream/group.jsx
+++ b/src/sentry/static/sentry/app/components/streamGroup.jsx
@@ -3,13 +3,13 @@ var React = require("react");
 var Reflux = require("reflux");
 var Router = require("react-router");
 
-var AssigneeSelector = require("../../components/assigneeSelector");
-var Count = require("../../components/count");
-var GroupChart = require("./groupChart");
-var GroupStore = require("../../stores/groupStore");
-var SelectedGroupStore = require("../../stores/selectedGroupStore");
-var TimeSince = require("../../components/timeSince");
-var {compareArrays, valueIsEqual} = require("../../utils");
+var AssigneeSelector = require("./assigneeSelector");
+var Count = require("./count");
+var GroupChart = require("./streamGroupChart");
+var GroupStore = require("../stores/groupStore");
+var SelectedGroupStore = require("../stores/selectedGroupStore");
+var TimeSince = require("./timeSince");
+var {compareArrays, valueIsEqual} = require("../utils");
 
 var GroupCheckBox = React.createClass({
   mixins: [
@@ -73,6 +73,13 @@ var StreamGroup = React.createClass({
   propTypes: {
     id: React.PropTypes.string.isRequired,
     statsPeriod: React.PropTypes.string.isRequired,
+    canSelect: React.PropTypes.bool
+  },
+
+  getDefaultProps() {
+    return {
+      canSelect: true
+    };
   },
 
   getInitialState() {
@@ -154,9 +161,11 @@ var StreamGroup = React.createClass({
     return (
       <li className={className} ref="element">
         <div className="col-md-7 col-xs-8 event-details">
-          <div className="checkbox">
-            <GroupCheckBox id={data.id} />
-          </div>
+          {this.props.canSelect &&
+            <div className="checkbox">
+              <GroupCheckBox id={data.id} />
+            </div>
+          }
           <h3 className="truncate">
             <Router.Link to="groupDetails" params={routeParams}>
               <span className="icon icon-bookmark"></span>
diff --git a/src/sentry/static/sentry/app/views/stream/groupChart.jsx b/src/sentry/static/sentry/app/components/streamGroupChart.jsx
similarity index 90%
rename from src/sentry/static/sentry/app/views/stream/groupChart.jsx
rename to src/sentry/static/sentry/app/components/streamGroupChart.jsx
index 3fb96d37c6..d6e8641566 100644
--- a/src/sentry/static/sentry/app/views/stream/groupChart.jsx
+++ b/src/sentry/static/sentry/app/components/streamGroupChart.jsx
@@ -1,9 +1,9 @@
 var React = require("react");
 var Reflux = require("reflux");
 
-var BarChart = require("../../components/barChart");
-var GroupStore = require("../../stores/groupStore");
-var {valueIsEqual} = require("../../utils");
+var BarChart = require("./barChart");
+var GroupStore = require("../stores/groupStore");
+var {valueIsEqual} = require("../utils");
 
 var GroupChart = React.createClass({
   mixins: [
diff --git a/src/sentry/static/sentry/app/routes.jsx b/src/sentry/static/sentry/app/routes.jsx
index e1563ca46b..85fc25687f 100644
--- a/src/sentry/static/sentry/app/routes.jsx
+++ b/src/sentry/static/sentry/app/routes.jsx
@@ -19,6 +19,7 @@ var ProjectDetails = require("./views/projectDetails");
 var ProjectReleases = require("./views/projectReleases");
 var PropTypes = require("./proptypes");
 var ReleaseDetails = require("./views/releaseDetails");
+var ReleaseNewEvents = require("./views/releaseNewEvents");
 var SharedGroupDetails = require("./views/sharedGroupDetails");
 var Stream = require("./views/stream");
 var TeamDetails = require("./views/teamDetails");
@@ -31,7 +32,9 @@ var routes = (
         <DefaultRoute name="stream" handler={Stream} />
         <Route name="projectDashboard" path="dashboard/" handler={ProjectDashboard} />
         <Route name="projectReleases" path="releases/" handler={ProjectReleases} />
-        <Route name="releaseDetails" path="releases/:version/" handler={ReleaseDetails} />
+        <Route name="releaseDetails" path="releases/:version/" handler={ReleaseDetails}>
+          <DefaultRoute name="releaseNewEvents" handler={ReleaseNewEvents} />
+        </Route>
         <Route name="groupDetails" path="group/:groupId/" handler={GroupDetails}
                ignoreScrollBehavior>
           <DefaultRoute name="groupOverview" handler={GroupOverview} />
diff --git a/src/sentry/static/sentry/app/views/projectReleases.jsx b/src/sentry/static/sentry/app/views/projectReleases.jsx
index 13dd98514e..5d4614f3ca 100644
--- a/src/sentry/static/sentry/app/views/projectReleases.jsx
+++ b/src/sentry/static/sentry/app/views/projectReleases.jsx
@@ -3,16 +3,10 @@ var Reflux = require("reflux");
 var Router = require("react-router");
 
 var api = require("../api");
-var GroupActions = require("../actions/groupActions");
-var GroupStore = require("../stores/groupStore");
 var LoadingError = require("../components/loadingError");
 var LoadingIndicator = require("../components/loadingIndicator");
 var Pagination = require("../components/pagination");
 var RouteMixin = require("../mixins/routeMixin");
-var Sticky = require('react-sticky');
-var StreamGroup = require('./stream/group');
-var StreamActions = require('./stream/actions');
-var StreamFilters = require('./stream/filters');
 var TimeSince = require("../components/timeSince");
 var utils = require("../utils");
 
diff --git a/src/sentry/static/sentry/app/views/releaseDetails.jsx b/src/sentry/static/sentry/app/views/releaseDetails.jsx
index a5da8feccc..cd734725b4 100644
--- a/src/sentry/static/sentry/app/views/releaseDetails.jsx
+++ b/src/sentry/static/sentry/app/views/releaseDetails.jsx
@@ -9,10 +9,11 @@ var LoadingError = require("../components/loadingError");
 var LoadingIndicator = require("../components/loadingIndicator");
 var ProjectState = require("../mixins/projectState");
 var PropTypes = require("../proptypes");
+var StreamGroup = require("../components/streamGroup");
 var TimeSince = require("../components/timeSince");
 var utils = require("../utils");
 
-var GroupDetails = React.createClass({
+var ReleaseDetails = React.createClass({
   contextTypes: {
     router: React.PropTypes.func
   },
@@ -29,12 +30,12 @@ var GroupDetails = React.createClass({
   crumbReservations: 1,
 
   childContextTypes: {
-    release: PropTypes.AnyModel,
+    release: PropTypes.AnyModel
   },
 
   getChildContext() {
     return {
-      release: this.state.release,
+      release: this.state.release
     };
   },
 
@@ -105,24 +106,20 @@ var GroupDetails = React.createClass({
         <div className={this.props.classname}>
           <div className="release-details">
             <div className="row">
-              <div className="col-md-7">
+              <div className="col-md-9">
                 <h2>Release <strong>7.7.0.dev0</strong></h2>
                 <div className="release-meta">
                   <span className="icon icon-clock"></span> <TimeSince date={release.dateCreated} /> by <a href="#">dcramer</a>
                 </div>
               </div>
-              <div className="col-md-5">
+              <div className="col-md-3">
                 <div className="row release-stats">
-                  <div className="col-md-4">
-                    <h6 className="nav-header">events</h6>
+                  <div className="col-md-6">
+                    <h6 className="nav-header">New Events</h6>
                     <div className="release-count">123</div>
                   </div>
-                  <div className="col-md-4">
-                    <h6 className="nav-header">users</h6>
-                    <div className="release-count">123</div>
-                  </div>
-                  <div className="col-md-4">
-                    <h6 className="nav-header">servers</h6>
+                  <div className="col-md-6">
+                    <h6 className="nav-header">New Rollups</h6>
                     <div className="release-count">123</div>
                   </div>
                 </div>
@@ -133,11 +130,11 @@ var GroupDetails = React.createClass({
               <li><a>Seen in this release</a></li>
             </ul>
           </div>
-          <div className="well blankslate">grouped results</div>
+          <Router.RouteHandler />
         </div>
       </DocumentTitle>
     );
   }
 });
 
-module.exports = GroupDetails;
+module.exports = ReleaseDetails;
diff --git a/src/sentry/static/sentry/app/views/releaseNewEvents.jsx b/src/sentry/static/sentry/app/views/releaseNewEvents.jsx
new file mode 100644
index 0000000000..9202bcb1bb
--- /dev/null
+++ b/src/sentry/static/sentry/app/views/releaseNewEvents.jsx
@@ -0,0 +1,161 @@
+var React = require("react");
+var Reflux = require("reflux");
+var Router = require("react-router");
+var jQuery = require("jquery");
+
+var api = require("../api");
+var GroupStore = require("../stores/groupStore");
+var LoadingError = require("../components/loadingError");
+var LoadingIndicator = require("../components/loadingIndicator");
+var ProjectState = require("../mixins/projectState");
+var PropTypes = require("../proptypes");
+var StreamGroup = require("../components/streamGroup");
+var TimeSince = require("../components/timeSince");
+var utils = require("../utils");
+
+var ReleaseNewEvents = React.createClass({
+  contextTypes: {
+    router: React.PropTypes.func,
+    release: PropTypes.AnyModel
+  },
+
+  mixins: [
+    ProjectState,
+    Reflux.listenTo(GroupStore, "onGroupChange"),
+  ],
+
+  crumbReservations: 1,
+
+  getInitialState() {
+    return {
+      loading: true,
+      error: false,
+      groupIds: []
+    };
+  },
+
+  shouldComponentUpdate(nextProps, nextState) {
+    return !utils.valueIsEqual(this.state, nextState, true);
+  },
+
+  componentWillMount() {
+    var params = this.context.router.getCurrentParams();
+
+    this._streamManager = new utils.StreamManager(GroupStore);
+    this._poller = new utils.CursorPoller({
+      success: this.onRealtimePoll,
+      endpoint: this.getGroupListEndpoint()
+    });
+    this._poller.enable();
+
+    this.fetchData();
+  },
+
+  routeDidChange() {
+    this._poller.disable();
+    this.fetchData();
+  },
+
+  componentWillUnmount() {
+    this._poller.disable();
+    GroupStore.loadInitialData([]);
+  },
+
+  componentDidUpdate(prevProps, prevState) {
+    if (prevState.realtimeActive !== this.state.realtimeActive) {
+      if (this.state.realtimeActive) {
+        this._poller.enable();
+      } else {
+        this._poller.disable();
+      }
+    }
+  },
+
+  fetchData() {
+    GroupStore.loadInitialData([]);
+
+    this.setState({
+      loading: true,
+      error: false
+    });
+
+    api.request(this.getGroupListEndpoint(), {
+      success: (data, _, jqXHR) => {
+        this._streamManager.push(data);
+
+        this.setState({
+          error: false,
+          loading: false,
+          pageLinks: jqXHR.getResponseHeader('Link')
+        });
+      },
+      error: () => {
+        this.setState({
+          error: true,
+          loading: false
+        });
+      },
+      complete: () => {
+        if (this.state.realtimeActive) {
+          this._poller.enable();
+        }
+      }
+    });
+  },
+
+  getGroupListEndpoint() {
+    var router = this.context.router;
+    var params = router.getCurrentParams();
+    var queryParams = router.getCurrentQuery();
+    queryParams.limit = 50;
+    queryParams.sort = 'new';
+    queryParams.query = 'first-release:' + this.context.release.version;
+    var querystring = jQuery.param(queryParams);
+
+    return '/projects/' + params.orgId + '/' + params.projectId + '/groups/?' + querystring;
+  },
+
+  onRealtimePoll(data, links) {
+    this._streamManager.unshift(data);
+    if (!utils.valueIsEqual(this.state.pageLinks, links, true)) {
+      this.setState({
+        pageLinks: links,
+      });
+    }
+  },
+
+  onGroupChange() {
+    var groupIds = this._streamManager.getAllItems().map((item) => item.id);
+    if (!utils.valueIsEqual(groupIds, this.state.groupIds)) {
+      this.setState({
+        groupIds: groupIds
+      });
+    }
+  },
+
+  render() {
+    var release = this.context.release;
+
+    if (this.state.loading)
+      return <LoadingIndicator />;
+    else if (this.state.error)
+      return <LoadingError onRetry={this.fetchData} />;
+    else if (this.state.groupIds.length === 0)
+      return (
+        <div className="box empty-stream">
+          <span className="icon icon-exclamation"></span>
+          <p>There don't seem to be an events fitting the query.</p>
+        </div>
+      );
+
+    return (
+      <ul className="group-list">
+        {this.state.groupIds.map((id) => {
+          return <StreamGroup key={id} id={id} canSelect={false} />;
+        })}
+      </ul>
+    );
+  }
+});
+
+module.exports = ReleaseNewEvents;
diff --git a/src/sentry/static/sentry/app/views/stream.jsx b/src/sentry/static/sentry/app/views/stream.jsx
index c44e8084b8..ba1f8928fd 100644
--- a/src/sentry/static/sentry/app/views/stream.jsx
+++ b/src/sentry/static/sentry/app/views/stream.jsx
@@ -9,7 +9,7 @@ var LoadingError = require("../components/loadingError");
 var LoadingIndicator = require("../components/loadingIndicator");
 var Pagination = require("../components/pagination");
 var RouteMixin = require("../mixins/routeMixin");
-var StreamGroup = require('./stream/group');
+var StreamGroup = require('../components/streamGroup');
 var StreamActions = require('./stream/actions');
 var StreamFilters = require('./stream/filters');
 var utils = require("../utils");
