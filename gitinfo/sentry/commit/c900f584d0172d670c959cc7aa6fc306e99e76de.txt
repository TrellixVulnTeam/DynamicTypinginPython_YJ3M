commit c900f584d0172d670c959cc7aa6fc306e99e76de
Author: Evan Purkhiser <evanpurkhiser@gmail.com>
Date:   Tue Oct 31 11:25:51 2017 -0700

    fix(sso): Correct broken send now links

diff --git a/src/sentry/api/endpoints/organization_member_details.py b/src/sentry/api/endpoints/organization_member_details.py
index fa486ea4e0..a20ef3e93e 100644
--- a/src/sentry/api/endpoints/organization_member_details.py
+++ b/src/sentry/api/endpoints/organization_member_details.py
@@ -129,9 +129,11 @@ class OrganizationMemberDetailsEndpoint(OrganizationEndpoint):
         if not serializer.is_valid():
             return Response(status=400)
 
-        has_sso = AuthProvider.objects.filter(
-            organization=organization,
-        ).exists()
+        try:
+            auth_provider = AuthProvider.objects.get(organization=organization)
+            auth_provider = auth_provider.get_provider()
+        except AuthProvider.DoesNotExist:
+            auth_provider = None
 
         result = serializer.object
         # XXX(dcramer): if/when this expands beyond reinvite we need to check
@@ -139,12 +141,12 @@ class OrganizationMemberDetailsEndpoint(OrganizationEndpoint):
         if result.get('reinvite'):
             if om.is_pending:
                 om.send_invite_email()
-            elif has_sso and not getattr(om.flags, 'sso:linked'):
-                om.send_sso_link_email()
+            elif auth_provider and not getattr(om.flags, 'sso:linked'):
+                om.send_sso_link_email(request.user, auth_provider)
             else:
                 # TODO(dcramer): proper error message
                 return Response({'detail': ERR_UNINVITABLE}, status=400)
-        if has_sso:
+        if auth_provider:
             sso_enabled.send(organization=organization, sender=request.user)
 
         return Response(status=204)
diff --git a/src/sentry/models/organizationmember.py b/src/sentry/models/organizationmember.py
index 167b4dc3c0..3508bf36d3 100644
--- a/src/sentry/models/organizationmember.py
+++ b/src/sentry/models/organizationmember.py
@@ -154,14 +154,14 @@ class OrganizationMember(Model):
             logger = get_logger(name='sentry.mail')
             logger.exception(e)
 
-    def send_sso_link_email(self, configurer, provider):
+    def send_sso_link_email(self, actor, provider):
         from sentry.utils.email import MessageBuilder
 
         link_args = {'organization_slug': self.organization.slug}
 
         context = {
             'organization': self.organization,
-            'configurer': configurer,
+            'actor': actor,
             'provider': provider,
             'url': absolute_uri(reverse('sentry-auth-organization', kwargs=link_args)),
         }
diff --git a/src/sentry/tasks/auth.py b/src/sentry/tasks/auth.py
index beafd40a48..8b7edff75a 100644
--- a/src/sentry/tasks/auth.py
+++ b/src/sentry/tasks/auth.py
@@ -11,10 +11,10 @@ logger = logging.getLogger('sentry.auth')
 
 
 @instrumented_task(name='sentry.tasks.send_sso_link_emails', queue='auth')
-def email_missing_links(org_id, configurer_id, provider_key, **kwargs):
+def email_missing_links(org_id, actor_id, provider_key, **kwargs):
     try:
         org = Organization.objects.get(id=org_id)
-        configurer = User.objects.get(id=configurer_id)
+        actor = User.objects.get(id=actor_id)
         provider = manager.get(provider_key)
     except(Organization.DoesNotExist, User.DoesNotExist, ProviderNotRegistered) as e:
         logger.warning('Could not send SSO link emails: %s', e)
@@ -25,4 +25,4 @@ def email_missing_links(org_id, configurer_id, provider_key, **kwargs):
         flags=~getattr(OrganizationMember.flags, 'sso:linked'),
     )
     for member in member_list:
-        member.send_sso_link_email(configurer, provider)
+        member.send_sso_link_email(actor, provider)
diff --git a/src/sentry/templates/sentry/emails/auth-link-identity.html b/src/sentry/templates/sentry/emails/auth-link-identity.html
index 38d3752a5f..9c25e14577 100644
--- a/src/sentry/templates/sentry/emails/auth-link-identity.html
+++ b/src/sentry/templates/sentry/emails/auth-link-identity.html
@@ -12,5 +12,5 @@
   </p>
 
   <p><a href="{{ url|safe }}" class="btn">Link Account</a></p>
-  <p><small>SSO was enabled by <strong>{{ configurer.email }}</strong></small></p>
+  <p><small>SSO link request invoked by <strong>{{ actor.email }}</strong></small></p>
 {% endblock %}
diff --git a/src/sentry/templates/sentry/emails/auth-link-identity.txt b/src/sentry/templates/sentry/emails/auth-link-identity.txt
index 119c3281ce..a15a1a98aa 100644
--- a/src/sentry/templates/sentry/emails/auth-link-identity.txt
+++ b/src/sentry/templates/sentry/emails/auth-link-identity.txt
@@ -4,4 +4,4 @@ Link your Sentry account to enable signing on with your {{ provider.name }} acco
 
 {{ url }}
 
-SSO was enabled by {{ configurer.email }}
+SSO link request invoked by {{ actor.email }}
diff --git a/tests/sentry/api/endpoints/test_organization_member_details.py b/tests/sentry/api/endpoints/test_organization_member_details.py
index 231c5fcfdf..2bd1ffae80 100644
--- a/tests/sentry/api/endpoints/test_organization_member_details.py
+++ b/tests/sentry/api/endpoints/test_organization_member_details.py
@@ -1,5 +1,6 @@
 from __future__ import absolute_import
 
+from django.core import mail
 from django.core.urlresolvers import reverse
 from mock import patch
 
@@ -30,8 +31,7 @@ class UpdateOrganizationMemberTest(APITestCase):
         assert resp.status_code == 204
         mock_send_invite_email.assert_called_once_with()
 
-    @patch('sentry.models.OrganizationMember.send_sso_link_email')
-    def test_reinvite_sso_link(self, mock_send_sso_link_email):
+    def test_reinvite_sso_link(self):
         self.login_as(user=self.user)
 
         organization = self.create_organization(name='foo', owner=self.user)
@@ -53,10 +53,11 @@ class UpdateOrganizationMemberTest(APITestCase):
 
         self.login_as(self.user)
 
-        resp = self.client.put(path, data={'reinvite': 1})
+        with self.tasks():
+            resp = self.client.put(path, data={'reinvite': 1})
 
         assert resp.status_code == 204
-        mock_send_sso_link_email.assert_called_once_with()
+        assert len(mail.outbox) == 1
 
     @patch('sentry.models.OrganizationMember.send_sso_link_email')
     def test_cannot_reinvite_normal_member(self, mock_send_sso_link_email):
