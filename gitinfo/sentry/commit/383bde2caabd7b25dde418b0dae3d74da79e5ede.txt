commit 383bde2caabd7b25dde418b0dae3d74da79e5ede
Author: Billy Vong <billyvg@users.noreply.github.com>
Date:   Tue Mar 12 05:51:53 2019 +0800

    feat(ui): Use search query from API [SEN-173] (#12204)
    
    If API returns a `query` key (see https://github.com/getsentry/sentry/pull/12184), use that for the query URL param instead of
    creating our own search query using different tag value properties.
    
    Fixes SEN-173

diff --git a/src/sentry/static/sentry/app/views/groupDetails/shared/groupTagValues.jsx b/src/sentry/static/sentry/app/views/groupDetails/shared/groupTagValues.jsx
index ecf32f3242..74fbb45a67 100644
--- a/src/sentry/static/sentry/app/views/groupDetails/shared/groupTagValues.jsx
+++ b/src/sentry/static/sentry/app/views/groupDetails/shared/groupTagValues.jsx
@@ -48,7 +48,7 @@ const GroupTagValues = createReactClass({
     }
   },
 
-  fetchData() {
+  async fetchData() {
     const {params, query} = this.props;
 
     this.setState({
@@ -56,38 +56,34 @@ const GroupTagValues = createReactClass({
       error: false,
     });
 
-    this.api.request(`/issues/${params.groupId}/tags/${params.tagKey}/`, {
-      query,
-      success: data => {
-        this.setState({
-          tagKey: data,
-          loading: this.state.tagValueList === null,
-        });
-      },
-      error: error => {
-        this.setState({
-          error: true,
-          loading: false,
-        });
-      },
-    });
-
-    this.api.request(`/issues/${params.groupId}/tags/${params.tagKey}/values/`, {
-      query,
-      success: (data, _, jqXHR) => {
-        this.setState({
-          tagValueList: data,
-          loading: this.state.tagKey === null,
-          pageLinks: jqXHR.getResponseHeader('Link'),
-        });
-      },
-      error: error => {
-        this.setState({
-          error: true,
-          loading: false,
-        });
-      },
-    });
+    const promises = [
+      this.api.requestPromise(`/issues/${params.groupId}/tags/${params.tagKey}/`, {
+        query,
+      }),
+      this.api.requestPromise(`/issues/${params.groupId}/tags/${params.tagKey}/values/`, {
+        query,
+        includeAllArgs: true,
+      }),
+    ];
+
+    try {
+      const [tagKey, tagValueResponse] = await Promise.all(promises);
+      const [tagValueList, , jqXHR] = tagValueResponse;
+
+      this.setState({
+        tagKey,
+        tagValueList,
+        loading: false,
+        pageLinks: jqXHR.getResponseHeader('Link'),
+      });
+    } catch (rejections) {
+      // eslint-disable-next-line no-console
+      console.error(rejections);
+      this.setState({
+        error: true,
+        loading: false,
+      });
+    }
   },
 
   getUserDisplayName(item) {
@@ -115,6 +111,7 @@ const GroupTagValues = createReactClass({
 
     const children = sortedTagValueList.map((tagValue, tagValueIdx) => {
       const pct = percent(tagValue.count, tagKey.totalValues).toFixed(2);
+      const query = tagValue.query || `${tagKey.key}:"${tagValue.value}"`;
       return (
         <tr key={tagValueIdx}>
           <td className="bar-cell">
@@ -125,12 +122,12 @@ const GroupTagValues = createReactClass({
             <Link
               to={{
                 pathname: issuesPath,
-                query: {query: `${tagKey.key}:"${tagValue.value}"`},
+                query: {query},
               }}
             >
               {tagKey.key === 'user' ? (
                 <React.Fragment>
-                  <Avatar user={tagValue} size={20} className="avatar" />,
+                  <Avatar user={tagValue} size={20} className="avatar" />
                   <span style={{marginLeft: 10}}>
                     {this.getUserDisplayName(tagValue)}
                   </span>
diff --git a/src/sentry/static/sentry/app/views/groupDetails/shared/groupTags.jsx b/src/sentry/static/sentry/app/views/groupDetails/shared/groupTags.jsx
index 296bc5db25..d76a346397 100644
--- a/src/sentry/static/sentry/app/views/groupDetails/shared/groupTags.jsx
+++ b/src/sentry/static/sentry/app/views/groupDetails/shared/groupTags.jsx
@@ -91,13 +91,14 @@ class GroupTags extends React.Component {
       children = this.state.tagList.map((tag, tagIdx) => {
         const valueChildren = tag.topValues.map((tagValue, tagValueIdx) => {
           const pct = percent(tagValue.count, tag.totalValues);
+          const query = tagValue.query || `${tag.key}:"${tagValue.value}"`;
           return (
-            <li key={tagValueIdx}>
+            <li key={tagValueIdx} data-test-id={tag.key}>
               <Link
                 className="tag-bar"
                 to={{
                   pathname: `${baseUrl}${group.id}/events/`,
-                  query: {query: tag.key + ':' + '"' + tagValue.value + '"'},
+                  query: {query},
                 }}
               >
                 <span className="tag-bar-background" style={{width: pct + '%'}} />
diff --git a/tests/js/fixtures/tags.js b/tests/js/fixtures/tags.js
index 80a26912e4..b0b512486a 100644
--- a/tests/js/fixtures/tags.js
+++ b/tests/js/fixtures/tags.js
@@ -1,9 +1,97 @@
 export function Tags(params = []) {
   return [
-    {key: 'browser', name: 'Browser', canDelete: true, totalValues: 30},
-    {key: 'device', name: 'Device', canDelete: true, totalValues: 5},
-    {key: 'url', name: 'URL', canDelete: true, totalValues: 7},
-    {key: 'environment', name: 'Environment', canDelete: false, totalValues: 100},
+    {
+      topValues: [
+        {
+          count: 10,
+          name: 'Chrome',
+          value: 'Chrome',
+          lastSeen: '2018-11-16T22:52:24Z',
+          key: 'browser',
+          firstSeen: '2018-05-06T03:48:28.855Z',
+        },
+        {
+          count: 5,
+          name: 'Firefox',
+          value: 'Firefox',
+          lastSeen: '2018-12-20T23:32:25Z',
+          key: 'browser',
+          firstSeen: '2018-12-20T23:32:43.811Z',
+        },
+      ],
+      uniqueValues: 2,
+      name: 'Browser',
+      key: 'browser',
+      totalValues: 18,
+      canDelete: true,
+    },
+    {
+      topValues: [
+        {
+          count: 17,
+          name: 'Other',
+          value: 'Other',
+          lastSeen: '2018-11-16T22:52:24Z',
+          key: 'device',
+          firstSeen: '2018-05-06T03:48:28.836Z',
+        },
+      ],
+      uniqueValues: 1,
+      name: 'Device',
+      key: 'device',
+      totalValues: 17,
+      canDelete: true,
+    },
+    {
+      topValues: [
+        {
+          count: 18,
+          name: 'http://example.com/foo',
+          value: 'http://example.com/foo',
+          lastSeen: '2018-12-20T23:32:25Z',
+          key: 'url',
+          firstSeen: '2018-05-06T03:48:28.825Z',
+        },
+      ],
+      uniqueValues: 1,
+      name: 'URL',
+      key: 'url',
+      totalValues: 18,
+      canDelete: true,
+    },
+    {
+      topValues: [{name: 'prod', value: 'prod', key: 'environment', count: 100}],
+      key: 'environment',
+      name: 'Environment',
+      canDelete: false,
+      totalValues: 100,
+    },
+    {
+      topValues: [
+        {
+          count: 3,
+          name: 'david',
+          value: 'username:david',
+          lastSeen: '2018-12-20T23:32:25Z',
+          key: 'user',
+          query: 'user.username:david',
+          firstSeen: '2018-10-03T03:40:05.627Z',
+        },
+        {
+          count: 2,
+          name: 'meredith',
+          value: 'username:meredith',
+          lastSeen: '2018-10-16T20:12:20Z',
+          key: 'user',
+          query: 'user.username:meredith',
+          firstSeen: '2018-10-15T23:24:05.570Z',
+        },
+      ],
+      uniqueValues: 12,
+      name: 'User',
+      key: 'user',
+      totalValues: 18,
+    },
     ...params,
   ];
 }
diff --git a/tests/js/fixtures/tagvalues.js b/tests/js/fixtures/tagvalues.js
index cbcb96603e..727ce15c51 100644
--- a/tests/js/fixtures/tagvalues.js
+++ b/tests/js/fixtures/tagvalues.js
@@ -1,24 +1,22 @@
 export function TagValues(params = []) {
   return [
     {
-      key: 'browser',
-      name: 'Browser',
-      topValues: [{value: 'Chrome', count: 10}, {value: 'Firefox', count: 5}],
-    },
-    {
-      key: 'device',
-      name: 'Device',
-      topValues: [{value: 'iPhone', count: 1}, {value: 'Pixel', count: 2}],
-    },
-    {
-      key: 'url',
-      name: 'URL',
-      topValues: [{value: 'foo.com', count: 2}, {value: 'bar.com', count: 5}],
-    },
-    {
-      key: 'environment',
-      name: 'Environment',
-      topValues: [{value: 'prod', count: 100}],
+      username: 'david',
+      hash: '172522ec1028ab781d9dfd17eaca4427',
+      dateCreated: '2018-10-03T03:39:51.223Z',
+      lastSeen: '2018-12-20T23:32:25Z',
+      query: 'user.username:david',
+      id: '10799',
+      firstSeen: '2018-10-03T03:40:05.627Z',
+      count: 3,
+      name: 'David Cramer',
+      avatarUrl:
+        'https://secure.gravatar.com/avatar/d66694bbc7619203377bd9c9b7b9f14a?s=32&d=mm',
+      value: 'username:david',
+      tagValue: 'username:david',
+      identifier: null,
+      ipAddress: '128.126.232.84',
+      email: 'david@example.com',
     },
     ...params,
   ];
diff --git a/tests/js/spec/components/group/__snapshots__/sidebar.spec.jsx.snap b/tests/js/spec/components/group/__snapshots__/sidebar.spec.jsx.snap
deleted file mode 100644
index 47c36dd02c..0000000000
--- a/tests/js/spec/components/group/__snapshots__/sidebar.spec.jsx.snap
+++ /dev/null
@@ -1,735 +0,0 @@
-// Jest Snapshot v1, https://goo.gl/fbAQLP
-
-exports[`GroupSidebar renders with tags renders 1`] = `
-<div
-  className="group-stats"
->
-  <SuggestedOwners
-    event={
-      Object {
-        "eventID": "12345678901234567890123456789012",
-        "groupID": "1",
-        "id": "1",
-        "message": "ApiException",
-      }
-    }
-    group={
-      Object {
-        "assignedTo": null,
-        "id": "1",
-        "project": Object {
-          "id": "2",
-          "slug": "project-slug",
-        },
-        "stats": Object {
-          "24h": Array [
-            Array [
-              1517281200,
-              2,
-            ],
-            Array [
-              1517310000,
-              1,
-            ],
-          ],
-          "30d": Array [
-            Array [
-              1514764800,
-              1,
-            ],
-            Array [
-              1515024000,
-              122,
-            ],
-          ],
-        },
-        "tags": Array [
-          Object {
-            "canDelete": true,
-            "key": "browser",
-            "name": "Browser",
-            "totalValues": 30,
-          },
-          Object {
-            "canDelete": true,
-            "key": "device",
-            "name": "Device",
-            "totalValues": 5,
-          },
-          Object {
-            "canDelete": true,
-            "key": "url",
-            "name": "URL",
-            "totalValues": 7,
-          },
-          Object {
-            "canDelete": false,
-            "key": "environment",
-            "name": "Environment",
-            "totalValues": 100,
-          },
-        ],
-      }
-    }
-    project={
-      Object {
-        "environments": Array [],
-        "hasAccess": true,
-        "id": "2",
-        "isBookmarked": false,
-        "isMember": true,
-        "name": "Project Name",
-        "slug": "project-slug",
-        "teams": Array [],
-      }
-    }
-  />
-  <GroupReleaseStats
-    allEnvironments={
-      Object {
-        "assignedTo": null,
-        "id": "1",
-        "project": Object {
-          "id": "2",
-          "slug": "project-slug",
-        },
-        "stats": Object {
-          "24h": Array [
-            Array [
-              1517281200,
-              2,
-            ],
-            Array [
-              1517310000,
-              1,
-            ],
-          ],
-          "30d": Array [
-            Array [
-              1514764800,
-              1,
-            ],
-            Array [
-              1515024000,
-              122,
-            ],
-          ],
-        },
-        "tags": Array [
-          Object {
-            "canDelete": true,
-            "key": "browser",
-            "name": "Browser",
-            "totalValues": 30,
-          },
-          Object {
-            "canDelete": true,
-            "key": "device",
-            "name": "Device",
-            "totalValues": 5,
-          },
-          Object {
-            "canDelete": true,
-            "key": "url",
-            "name": "URL",
-            "totalValues": 7,
-          },
-          Object {
-            "canDelete": false,
-            "key": "environment",
-            "name": "Environment",
-            "totalValues": 100,
-          },
-        ],
-      }
-    }
-    group={
-      Object {
-        "assignedTo": null,
-        "id": "1",
-        "project": Object {
-          "id": "2",
-          "slug": "project-slug",
-        },
-        "stats": Object {
-          "24h": Array [
-            Array [
-              1517281200,
-              2,
-            ],
-            Array [
-              1517310000,
-              1,
-            ],
-          ],
-          "30d": Array [
-            Array [
-              1514764800,
-              1,
-            ],
-            Array [
-              1515024000,
-              122,
-            ],
-          ],
-        },
-        "tags": Array [
-          Object {
-            "canDelete": true,
-            "key": "browser",
-            "name": "Browser",
-            "totalValues": 30,
-          },
-          Object {
-            "canDelete": true,
-            "key": "device",
-            "name": "Device",
-            "totalValues": 5,
-          },
-          Object {
-            "canDelete": true,
-            "key": "url",
-            "name": "URL",
-            "totalValues": 7,
-          },
-          Object {
-            "canDelete": false,
-            "key": "environment",
-            "name": "Environment",
-            "totalValues": 100,
-          },
-        ],
-      }
-    }
-    project={
-      Object {
-        "environments": Array [],
-        "hasAccess": true,
-        "id": "2",
-        "isBookmarked": false,
-        "isMember": true,
-        "name": "Project Name",
-        "slug": "project-slug",
-        "teams": Array [],
-      }
-    }
-  />
-  <ExternalIssueList
-    group={
-      Object {
-        "assignedTo": null,
-        "id": "1",
-        "project": Object {
-          "id": "2",
-          "slug": "project-slug",
-        },
-        "stats": Object {
-          "24h": Array [
-            Array [
-              1517281200,
-              2,
-            ],
-            Array [
-              1517310000,
-              1,
-            ],
-          ],
-          "30d": Array [
-            Array [
-              1514764800,
-              1,
-            ],
-            Array [
-              1515024000,
-              122,
-            ],
-          ],
-        },
-        "tags": Array [
-          Object {
-            "canDelete": true,
-            "key": "browser",
-            "name": "Browser",
-            "totalValues": 30,
-          },
-          Object {
-            "canDelete": true,
-            "key": "device",
-            "name": "Device",
-            "totalValues": 5,
-          },
-          Object {
-            "canDelete": true,
-            "key": "url",
-            "name": "URL",
-            "totalValues": 7,
-          },
-          Object {
-            "canDelete": false,
-            "key": "environment",
-            "name": "Environment",
-            "totalValues": 100,
-          },
-        ],
-      }
-    }
-    orgId="org-slug"
-    project={
-      Object {
-        "environments": Array [],
-        "hasAccess": true,
-        "id": "2",
-        "isBookmarked": false,
-        "isMember": true,
-        "name": "Project Name",
-        "slug": "project-slug",
-        "teams": Array [],
-      }
-    }
-  />
-  <h6>
-    <span>
-      Tags
-    </span>
-  </h6>
-  <withEnvironment(TagDistributionMeter)
-    data-test-id="group-tag"
-    group={
-      Object {
-        "assignedTo": null,
-        "id": "1",
-        "project": Object {
-          "id": "2",
-          "slug": "project-slug",
-        },
-        "stats": Object {
-          "24h": Array [
-            Array [
-              1517281200,
-              2,
-            ],
-            Array [
-              1517310000,
-              1,
-            ],
-          ],
-          "30d": Array [
-            Array [
-              1514764800,
-              1,
-            ],
-            Array [
-              1515024000,
-              122,
-            ],
-          ],
-        },
-        "tags": Array [
-          Object {
-            "canDelete": true,
-            "key": "browser",
-            "name": "Browser",
-            "totalValues": 30,
-          },
-          Object {
-            "canDelete": true,
-            "key": "device",
-            "name": "Device",
-            "totalValues": 5,
-          },
-          Object {
-            "canDelete": true,
-            "key": "url",
-            "name": "URL",
-            "totalValues": 7,
-          },
-          Object {
-            "canDelete": false,
-            "key": "environment",
-            "name": "Environment",
-            "totalValues": 100,
-          },
-        ],
-      }
-    }
-    key="browser"
-    name="Browser"
-    organization={
-      Object {
-        "access": Array [
-          "org:read",
-          "org:write",
-          "org:admin",
-          "org:integrations",
-          "project:read",
-          "project:write",
-          "project:admin",
-          "team:read",
-          "team:write",
-          "team:admin",
-        ],
-        "features": Array [],
-        "id": "3",
-        "name": "Organization Name",
-        "onboardingTasks": Array [],
-        "projects": Array [],
-        "scrapeJavaScript": true,
-        "slug": "org-slug",
-        "status": Object {
-          "id": "active",
-          "name": "active",
-        },
-        "teams": Array [],
-      }
-    }
-    projectId="project-slug"
-    tag="browser"
-    topValues={
-      Array [
-        Object {
-          "count": 10,
-          "value": "Chrome",
-        },
-        Object {
-          "count": 5,
-          "value": "Firefox",
-        },
-      ]
-    }
-    totalValues={30}
-  />
-  <withEnvironment(TagDistributionMeter)
-    data-test-id="group-tag"
-    group={
-      Object {
-        "assignedTo": null,
-        "id": "1",
-        "project": Object {
-          "id": "2",
-          "slug": "project-slug",
-        },
-        "stats": Object {
-          "24h": Array [
-            Array [
-              1517281200,
-              2,
-            ],
-            Array [
-              1517310000,
-              1,
-            ],
-          ],
-          "30d": Array [
-            Array [
-              1514764800,
-              1,
-            ],
-            Array [
-              1515024000,
-              122,
-            ],
-          ],
-        },
-        "tags": Array [
-          Object {
-            "canDelete": true,
-            "key": "browser",
-            "name": "Browser",
-            "totalValues": 30,
-          },
-          Object {
-            "canDelete": true,
-            "key": "device",
-            "name": "Device",
-            "totalValues": 5,
-          },
-          Object {
-            "canDelete": true,
-            "key": "url",
-            "name": "URL",
-            "totalValues": 7,
-          },
-          Object {
-            "canDelete": false,
-            "key": "environment",
-            "name": "Environment",
-            "totalValues": 100,
-          },
-        ],
-      }
-    }
-    key="device"
-    name="Device"
-    organization={
-      Object {
-        "access": Array [
-          "org:read",
-          "org:write",
-          "org:admin",
-          "org:integrations",
-          "project:read",
-          "project:write",
-          "project:admin",
-          "team:read",
-          "team:write",
-          "team:admin",
-        ],
-        "features": Array [],
-        "id": "3",
-        "name": "Organization Name",
-        "onboardingTasks": Array [],
-        "projects": Array [],
-        "scrapeJavaScript": true,
-        "slug": "org-slug",
-        "status": Object {
-          "id": "active",
-          "name": "active",
-        },
-        "teams": Array [],
-      }
-    }
-    projectId="project-slug"
-    tag="device"
-    topValues={
-      Array [
-        Object {
-          "count": 1,
-          "value": "iPhone",
-        },
-        Object {
-          "count": 2,
-          "value": "Pixel",
-        },
-      ]
-    }
-    totalValues={5}
-  />
-  <withEnvironment(TagDistributionMeter)
-    data-test-id="group-tag"
-    group={
-      Object {
-        "assignedTo": null,
-        "id": "1",
-        "project": Object {
-          "id": "2",
-          "slug": "project-slug",
-        },
-        "stats": Object {
-          "24h": Array [
-            Array [
-              1517281200,
-              2,
-            ],
-            Array [
-              1517310000,
-              1,
-            ],
-          ],
-          "30d": Array [
-            Array [
-              1514764800,
-              1,
-            ],
-            Array [
-              1515024000,
-              122,
-            ],
-          ],
-        },
-        "tags": Array [
-          Object {
-            "canDelete": true,
-            "key": "browser",
-            "name": "Browser",
-            "totalValues": 30,
-          },
-          Object {
-            "canDelete": true,
-            "key": "device",
-            "name": "Device",
-            "totalValues": 5,
-          },
-          Object {
-            "canDelete": true,
-            "key": "url",
-            "name": "URL",
-            "totalValues": 7,
-          },
-          Object {
-            "canDelete": false,
-            "key": "environment",
-            "name": "Environment",
-            "totalValues": 100,
-          },
-        ],
-      }
-    }
-    key="url"
-    name="URL"
-    organization={
-      Object {
-        "access": Array [
-          "org:read",
-          "org:write",
-          "org:admin",
-          "org:integrations",
-          "project:read",
-          "project:write",
-          "project:admin",
-          "team:read",
-          "team:write",
-          "team:admin",
-        ],
-        "features": Array [],
-        "id": "3",
-        "name": "Organization Name",
-        "onboardingTasks": Array [],
-        "projects": Array [],
-        "scrapeJavaScript": true,
-        "slug": "org-slug",
-        "status": Object {
-          "id": "active",
-          "name": "active",
-        },
-        "teams": Array [],
-      }
-    }
-    projectId="project-slug"
-    tag="url"
-    topValues={
-      Array [
-        Object {
-          "count": 2,
-          "value": "foo.com",
-        },
-        Object {
-          "count": 5,
-          "value": "bar.com",
-        },
-      ]
-    }
-    totalValues={7}
-  />
-  <withEnvironment(TagDistributionMeter)
-    data-test-id="group-tag"
-    group={
-      Object {
-        "assignedTo": null,
-        "id": "1",
-        "project": Object {
-          "id": "2",
-          "slug": "project-slug",
-        },
-        "stats": Object {
-          "24h": Array [
-            Array [
-              1517281200,
-              2,
-            ],
-            Array [
-              1517310000,
-              1,
-            ],
-          ],
-          "30d": Array [
-            Array [
-              1514764800,
-              1,
-            ],
-            Array [
-              1515024000,
-              122,
-            ],
-          ],
-        },
-        "tags": Array [
-          Object {
-            "canDelete": true,
-            "key": "browser",
-            "name": "Browser",
-            "totalValues": 30,
-          },
-          Object {
-            "canDelete": true,
-            "key": "device",
-            "name": "Device",
-            "totalValues": 5,
-          },
-          Object {
-            "canDelete": true,
-            "key": "url",
-            "name": "URL",
-            "totalValues": 7,
-          },
-          Object {
-            "canDelete": false,
-            "key": "environment",
-            "name": "Environment",
-            "totalValues": 100,
-          },
-        ],
-      }
-    }
-    key="environment"
-    name="Environment"
-    organization={
-      Object {
-        "access": Array [
-          "org:read",
-          "org:write",
-          "org:admin",
-          "org:integrations",
-          "project:read",
-          "project:write",
-          "project:admin",
-          "team:read",
-          "team:write",
-          "team:admin",
-        ],
-        "features": Array [],
-        "id": "3",
-        "name": "Organization Name",
-        "onboardingTasks": Array [],
-        "projects": Array [],
-        "scrapeJavaScript": true,
-        "slug": "org-slug",
-        "status": Object {
-          "id": "active",
-          "name": "active",
-        },
-        "teams": Array [],
-      }
-    }
-    projectId="project-slug"
-    tag="environment"
-    topValues={
-      Array [
-        Object {
-          "count": 100,
-          "value": "prod",
-        },
-      ]
-    }
-    totalValues={100}
-  />
-  <h6>
-    <span>
-      Notifications
-    </span>
-  </h6>
-  <p
-    className="help-block"
-  >
-    You're not subscribed to this issue.
-  </p>
-  <a
-    className="btn btn-default btn-subscribe"
-    onClick={[Function]}
-  >
-    <span
-      className="icon-signal"
-    />
-    Subscribe
-  </a>
-</div>
-`;
diff --git a/tests/js/spec/components/group/sidebar.spec.jsx b/tests/js/spec/components/group/sidebar.spec.jsx
index 01315ea864..3ae2448d05 100644
--- a/tests/js/spec/components/group/sidebar.spec.jsx
+++ b/tests/js/spec/components/group/sidebar.spec.jsx
@@ -8,9 +8,27 @@ describe('GroupSidebar', function() {
   const project = TestStubs.Project();
   const environment = {name: 'production', displayName: 'Production', id: '1'};
   let wrapper;
-  let tagValuesMock;
+  let tagsMock;
 
   beforeEach(function() {
+    MockApiClient.addMockResponse({
+      url: '/projects/org-slug/project-slug/events/1/committers/',
+      body: {committers: []},
+    });
+
+    MockApiClient.addMockResponse({
+      url: '/projects/org-slug/project-slug/events/1/owners/',
+      body: {
+        owners: [],
+        rules: [],
+      },
+    });
+
+    MockApiClient.addMockResponse({
+      url: '/groups/1/integrations/',
+      body: [],
+    });
+
     MockApiClient.addMockResponse({
       url: '/issues/1/participants/',
       body: [],
@@ -21,9 +39,9 @@ describe('GroupSidebar', function() {
       body: group,
     });
 
-    tagValuesMock = MockApiClient.addMockResponse({
+    tagsMock = MockApiClient.addMockResponse({
       url: '/issues/1/tags/',
-      body: TestStubs.TagValues(),
+      body: TestStubs.Tags(),
     });
 
     wrapper = shallow(
@@ -43,17 +61,16 @@ describe('GroupSidebar', function() {
 
   describe('sidebar', function() {
     it('should make a request to the /tags/ endpoint to get top values', function() {
-      expect(tagValuesMock).toHaveBeenCalled();
+      expect(tagsMock).toHaveBeenCalled();
     });
   });
 
   describe('renders with tags', function() {
     it('renders', function() {
-      expect(wrapper).toMatchSnapshot();
-    });
-
-    it('renders tags', function() {
-      expect(wrapper.find('[data-test-id="group-tag"]')).toHaveLength(4);
+      expect(wrapper.find('SuggestedOwners')).toHaveLength(1);
+      expect(wrapper.find('GroupReleaseStats')).toHaveLength(1);
+      expect(wrapper.find('ExternalIssueList')).toHaveLength(1);
+      expect(wrapper.find('[data-test-id="group-tag"]')).toHaveLength(5);
     });
   });
 
@@ -119,10 +136,10 @@ describe('GroupSidebar', function() {
   describe('environment toggle', function() {
     it('re-requests tags with correct environment', function() {
       const stagingEnv = {name: 'staging', displayName: 'Staging', id: '2'};
-      expect(tagValuesMock).toHaveBeenCalledTimes(1);
+      expect(tagsMock).toHaveBeenCalledTimes(1);
       wrapper.setProps({environments: [stagingEnv]});
-      expect(tagValuesMock).toHaveBeenCalledTimes(2);
-      expect(tagValuesMock).toHaveBeenCalledWith(
+      expect(tagsMock).toHaveBeenCalledTimes(2);
+      expect(tagsMock).toHaveBeenCalledWith(
         '/issues/1/tags/',
         expect.objectContaining({
           query: expect.objectContaining({
diff --git a/tests/js/spec/components/group/tagDistributionMeter.spec.jsx b/tests/js/spec/components/group/tagDistributionMeter.spec.jsx
index ba08791381..e653413da5 100644
--- a/tests/js/spec/components/group/tagDistributionMeter.spec.jsx
+++ b/tests/js/spec/components/group/tagDistributionMeter.spec.jsx
@@ -7,6 +7,7 @@ describe('TagDistributionMeter', function() {
   let element;
   let emptyElement;
   let organization;
+  const tags = TestStubs.Tags();
 
   beforeEach(function() {
     organization = TestStubs.Organization();
@@ -18,8 +19,8 @@ describe('TagDistributionMeter', function() {
         group={{id: '1337'}}
         organization={organization}
         projectId="456"
-        totalValues={TestStubs.Tags()[0].totalValues}
-        topValues={TestStubs.TagValues()[0].topValues}
+        totalValues={tags[0].totalValues}
+        topValues={tags[0].topValues}
       />
     );
 
diff --git a/tests/js/spec/views/__snapshots__/projectTags.spec.jsx.snap b/tests/js/spec/views/__snapshots__/projectTags.spec.jsx.snap
index 224b234280..1ca3b6b2ab 100644
--- a/tests/js/spec/views/__snapshots__/projectTags.spec.jsx.snap
+++ b/tests/js/spec/views/__snapshots__/projectTags.spec.jsx.snap
@@ -1326,6 +1326,243 @@ exports[`ProjectTags renders 1`] = `
                           </div>
                         </Base>
                       </PanelItem>
+                      <PanelItem
+                        align="center"
+                        className="ref-tag-row"
+                        key="user"
+                        p={0}
+                      >
+                        <Base
+                          align="center"
+                          className="ref-tag-row css-1jykl04-PanelItem eo8n7lk0"
+                          p={0}
+                        >
+                          <div
+                            className="ref-tag-row css-1jykl04-PanelItem eo8n7lk0"
+                            is={null}
+                          >
+                            <Box
+                              align="flex-end"
+                              flex="1"
+                              p={2}
+                            >
+                              <Base
+                                align="flex-end"
+                                className="css-14o7hgh"
+                                flex="1"
+                                p={2}
+                              >
+                                <div
+                                  className="css-14o7hgh"
+                                  is={null}
+                                >
+                                  <span>
+                                    user
+                                  </span>
+                                </div>
+                              </Base>
+                            </Box>
+                            <Flex
+                              align="center"
+                              p={2}
+                            >
+                              <Base
+                                align="center"
+                                className="css-p3ab1k"
+                                p={2}
+                              >
+                                <div
+                                  className="css-p3ab1k"
+                                  is={null}
+                                >
+                                  <Tooltip
+                                    title="This tag cannot be deleted."
+                                  >
+                                    <span
+                                      className="tip"
+                                      title="This tag cannot be deleted."
+                                    >
+                                      <LinkWithConfirmation
+                                        disabled={true}
+                                        message="Are you sure you want to remove this tag?"
+                                        onConfirm={[Function]}
+                                        title="Remove tag?"
+                                      >
+                                        <Confirm
+                                          cancelText="Cancel"
+                                          confirmText="Confirm"
+                                          disableConfirmButton={false}
+                                          disabled={true}
+                                          message="Are you sure you want to remove this tag?"
+                                          onConfirm={[Function]}
+                                          priority="primary"
+                                        >
+                                          <a
+                                            className="disabled"
+                                            disabled={true}
+                                            onClick={[Function]}
+                                            title="Remove tag?"
+                                          >
+                                            <Button
+                                              data-test-id="delete"
+                                              disabled={true}
+                                              icon="icon-trash"
+                                              size="xsmall"
+                                            >
+                                              <StyledButton
+                                                data-test-id="delete"
+                                                disabled={true}
+                                                href={null}
+                                                onClick={[Function]}
+                                                role="button"
+                                                size="xsmall"
+                                                to={null}
+                                              >
+                                                <Component
+                                                  className="css-1ujzp8g-StyledButton-getColors eqrebog0"
+                                                  data-test-id="delete"
+                                                  disabled={true}
+                                                  href={null}
+                                                  onClick={[Function]}
+                                                  role="button"
+                                                  size="xsmall"
+                                                  to={null}
+                                                >
+                                                  <button
+                                                    className="css-1ujzp8g-StyledButton-getColors eqrebog0"
+                                                    data-test-id="delete"
+                                                    disabled={true}
+                                                    href={null}
+                                                    onClick={[Function]}
+                                                    role="button"
+                                                    size="xsmall"
+                                                    to={null}
+                                                  >
+                                                    <ButtonLabel
+                                                      size="xsmall"
+                                                    >
+                                                      <Component
+                                                        className="css-uthd1f-ButtonLabel eqrebog1"
+                                                        size="xsmall"
+                                                      >
+                                                        <span
+                                                          className="css-uthd1f-ButtonLabel eqrebog1"
+                                                        >
+                                                          <Icon
+                                                            hasChildren={false}
+                                                            size="xsmall"
+                                                          >
+                                                            <Component
+                                                              className="css-ljhpxy-Icon eqrebog2"
+                                                              hasChildren={false}
+                                                              size="xsmall"
+                                                            >
+                                                              <span
+                                                                className="css-ljhpxy-Icon eqrebog2"
+                                                                size="xsmall"
+                                                              >
+                                                                <StyledInlineSvg
+                                                                  size="12px"
+                                                                  src="icon-trash"
+                                                                >
+                                                                  <InlineSvg
+                                                                    className="css-1ov3rcq-StyledInlineSvg eqrebog3"
+                                                                    size="12px"
+                                                                    src="icon-trash"
+                                                                  >
+                                                                    <StyledSvg
+                                                                      className="css-1ov3rcq-StyledInlineSvg eqrebog3"
+                                                                      height="12px"
+                                                                      viewBox={Object {}}
+                                                                      width="12px"
+                                                                    >
+                                                                      <svg
+                                                                        className="eqrebog3 css-1jjmnki-StyledSvg-StyledInlineSvg e2idor0"
+                                                                        height="12px"
+                                                                        viewBox={Object {}}
+                                                                        width="12px"
+                                                                      >
+                                                                        <use
+                                                                          href="#test"
+                                                                          xlinkHref="#test"
+                                                                        />
+                                                                      </svg>
+                                                                    </StyledSvg>
+                                                                  </InlineSvg>
+                                                                </StyledInlineSvg>
+                                                              </span>
+                                                            </Component>
+                                                          </Icon>
+                                                        </span>
+                                                      </Component>
+                                                    </ButtonLabel>
+                                                  </button>
+                                                </Component>
+                                              </StyledButton>
+                                            </Button>
+                                          </a>
+                                          <Modal
+                                            animation={false}
+                                            autoFocus={true}
+                                            backdrop={true}
+                                            bsClass="modal"
+                                            dialogComponentClass={[Function]}
+                                            enforceFocus={true}
+                                            keyboard={true}
+                                            manager={
+                                              ModalManager {
+                                                "add": [Function],
+                                                "containers": Array [],
+                                                "data": Array [],
+                                                "handleContainerOverflow": true,
+                                                "hideSiblingNodes": true,
+                                                "isTopModal": [Function],
+                                                "modals": Array [],
+                                                "remove": [Function],
+                                              }
+                                            }
+                                            onHide={[Function]}
+                                            renderBackdrop={[Function]}
+                                            restoreFocus={true}
+                                            show={false}
+                                          >
+                                            <Modal
+                                              autoFocus={true}
+                                              backdrop={true}
+                                              backdropClassName="modal-backdrop"
+                                              containerClassName="modal-open"
+                                              enforceFocus={true}
+                                              keyboard={true}
+                                              manager={
+                                                ModalManager {
+                                                  "add": [Function],
+                                                  "containers": Array [],
+                                                  "data": Array [],
+                                                  "handleContainerOverflow": true,
+                                                  "hideSiblingNodes": true,
+                                                  "isTopModal": [Function],
+                                                  "modals": Array [],
+                                                  "remove": [Function],
+                                                }
+                                              }
+                                              onEntering={[Function]}
+                                              onExited={[Function]}
+                                              onHide={[Function]}
+                                              renderBackdrop={[Function]}
+                                              restoreFocus={true}
+                                              show={false}
+                                            />
+                                          </Modal>
+                                        </Confirm>
+                                      </LinkWithConfirmation>
+                                    </span>
+                                  </Tooltip>
+                                </div>
+                              </Base>
+                            </Flex>
+                          </div>
+                        </Base>
+                      </PanelItem>
                     </Access>
                   </AccessContainer>
                 </withConfig(AccessContainer)>
diff --git a/tests/js/spec/views/groupDetails/shared/groupTagValues.spec.jsx b/tests/js/spec/views/groupDetails/shared/groupTagValues.spec.jsx
new file mode 100644
index 0000000000..6255259e49
--- /dev/null
+++ b/tests/js/spec/views/groupDetails/shared/groupTagValues.spec.jsx
@@ -0,0 +1,50 @@
+import React from 'react';
+
+import {initializeOrg} from 'app-test/helpers/initializeOrg';
+import {mount} from 'enzyme';
+import GroupTagValues from 'app/views/groupDetails/shared/groupTagValues';
+
+describe('GroupTagValues', function() {
+  const {routerContext, router} = initializeOrg({
+    organization: {
+      features: ['sentry10'],
+    },
+  });
+  const group = TestStubs.Group();
+  const tags = TestStubs.Tags();
+
+  beforeEach(function() {
+    MockApiClient.addMockResponse({
+      url: '/issues/1/tags/user/',
+      body: tags.find(({key}) => key === 'user'),
+    });
+    MockApiClient.addMockResponse({
+      url: '/issues/1/tags/user/values/',
+      body: TestStubs.TagValues(),
+    });
+  });
+
+  it('navigates to issue details events tab with correct query params', async function() {
+    const wrapper = mount(
+      <GroupTagValues
+        group={group}
+        query={{}}
+        params={{orgId: 'org-slug', groupId: group.id, tagKey: 'user'}}
+      />,
+      routerContext
+    );
+
+    await tick();
+    wrapper.update();
+
+    wrapper
+      .find('Link')
+      .first()
+      .simulate('click', {button: 0});
+
+    expect(router.push).toHaveBeenCalledWith({
+      pathname: '/organizations/org-slug/issues/',
+      query: {query: 'user.username:david'},
+    });
+  });
+});
diff --git a/tests/js/spec/views/groupDetails/shared/groupTags.spec.jsx b/tests/js/spec/views/groupDetails/shared/groupTags.spec.jsx
new file mode 100644
index 0000000000..f8abbb4566
--- /dev/null
+++ b/tests/js/spec/views/groupDetails/shared/groupTags.spec.jsx
@@ -0,0 +1,38 @@
+import React from 'react';
+
+import {initializeOrg} from 'app-test/helpers/initializeOrg';
+import {mount} from 'enzyme';
+import GroupTags from 'app/views/groupDetails/shared/groupTags';
+
+describe('GroupTags', function() {
+  const {routerContext, router} = initializeOrg();
+  const group = TestStubs.Group();
+
+  beforeEach(function() {
+    MockApiClient.addMockResponse({
+      url: '/issues/1/tags/',
+      body: TestStubs.Tags(),
+    });
+  });
+
+  it('navigates to issue details events tab with correct query params', function() {
+    const wrapper = mount(
+      <GroupTags
+        group={group}
+        query={{}}
+        params={{orgId: 'org-slug', groupId: group.id}}
+      />,
+      routerContext
+    );
+
+    wrapper
+      .find('li[data-test-id="user"] Link')
+      .first()
+      .simulate('click', {button: 0});
+
+    expect(router.push).toHaveBeenCalledWith({
+      pathname: '/organizations/org-slug/issues/1/events/',
+      query: {query: 'user.username:david'},
+    });
+  });
+});
