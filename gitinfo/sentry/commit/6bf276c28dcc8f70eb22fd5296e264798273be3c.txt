commit 6bf276c28dcc8f70eb22fd5296e264798273be3c
Author: Matte Noble <me@mattenoble.com>
Date:   Fri Oct 19 14:52:27 2018 -0700

    fix(integrations): Don't bork on invalid plugins (#10205)
    
    Previously, if a Sentry installation didn't have sentry-plugins
    installed, the Org Integrations page would totally fail. It failed
    because it was checking to ensure the list of plugins passed to the
    endpoint was a subset of all plugins. That list of plugins, by default,
    included ones that are in sentry-plugins.
    
    Instead, we now just filter any plugins that are not installed out of
    the list of ones we search for. The page will now load for everyone and
    work as intended for those with sentry-plugins installed.

diff --git a/src/sentry/api/endpoints/organization_plugins.py b/src/sentry/api/endpoints/organization_plugins.py
index 525ddfd2c6..8bb5511e91 100644
--- a/src/sentry/api/endpoints/organization_plugins.py
+++ b/src/sentry/api/endpoints/organization_plugins.py
@@ -11,7 +11,6 @@ from sentry.models import ProjectOption
 
 class OrganizationPluginsEndpoint(OrganizationEndpoint):
     def get(self, request, organization):
-        # Just load all Plugins once.
         all_plugins = dict([
             (p.slug, p) for p in plugins.all()
         ])
@@ -21,8 +20,8 @@ class OrganizationPluginsEndpoint(OrganizationEndpoint):
         else:
             desired_plugins = set(all_plugins.keys())
 
-        if not desired_plugins.issubset(set(all_plugins.keys())):
-            return Response({'detail': 'Invalid plugins'}, status=422)
+        # Ignore plugins that are not available to this Sentry install.
+        desired_plugins = desired_plugins & set(all_plugins.keys())
 
         # Each tuple represents an enabled Plugin (of only the ones we care
         # about) and its corresponding Project.
diff --git a/tests/sentry/api/endpoints/test_organization_plugins.py b/tests/sentry/api/endpoints/test_organization_plugins.py
index 46664af049..e8eede76a7 100644
--- a/tests/sentry/api/endpoints/test_organization_plugins.py
+++ b/tests/sentry/api/endpoints/test_organization_plugins.py
@@ -56,3 +56,22 @@ class OrganizationPluginsTest(APITestCase):
 
         assert (self.projectA.id, 'webhooks') not in enabled_plugins
         assert (self.projectB.id, 'mail') in enabled_plugins
+
+    def test_ignore_plugins_that_dont_exist(self):
+        url = reverse(
+            'sentry-api-0-organization-plugins',
+            kwargs={'organization_slug': self.projectA.organization.slug}
+        )
+
+        url = '{}?plugins=nope&plugins=beep&plugins=mail'.format(url)
+        response = self.client.get(url)
+
+        assert response.status_code == 200, \
+            (response.status_code, response.content)
+
+        enabled_plugins = [
+            (p['project']['id'], p['slug']) for p in
+            filter(lambda p: p['enabled'], response.data)
+        ]
+
+        assert enabled_plugins == [(self.projectB.id, 'mail')]
