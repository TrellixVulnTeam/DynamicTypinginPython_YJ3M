commit e1eafd9c25ae89b7e1ccaf114b781a8ffd3bc00d
Author: David Cramer <dcramer@gmail.com>
Date:   Tue Mar 3 12:37:03 2015 -0800

    Correct inverted logic in internal client

diff --git a/src/sentry/utils/raven.py b/src/sentry/utils/raven.py
index f10b66d2e4..e9ca4306bf 100644
--- a/src/sentry/utils/raven.py
+++ b/src/sentry/utils/raven.py
@@ -19,8 +19,8 @@ def can_record_current_event():
     """
     for _, filename, _, _, _, _ in inspect.stack():
         if filename.endswith(UNSAFE_FILES):
-            return True
-    return False
+            return False
+    return True
 
 
 class SentryInternalClient(DjangoClient):
@@ -46,6 +46,7 @@ class SentryInternalClient(DjangoClient):
             data = manager.normalize()
             insert_data_to_database(data)
         except Exception as e:
+            print('fail')
             if self.raise_send_errors:
                 raise
             self.error_logger.error(
diff --git a/tests/sentry/utils/test_raven.py b/tests/sentry/utils/test_raven.py
new file mode 100644
index 0000000000..889a287ed1
--- /dev/null
+++ b/tests/sentry/utils/test_raven.py
@@ -0,0 +1,20 @@
+from __future__ import absolute_import, print_function
+
+from mock import Mock, patch
+from raven.contrib.django.models import client
+
+from sentry.models import Event
+from sentry.testutils import TestCase
+from sentry.utils.raven import SentryInternalClient
+
+
+class SentryInternalClientTest(TestCase):
+    @patch.object(SentryInternalClient, 'is_enabled', Mock(return_value=True))
+    def test_simple(self):
+        assert client.__class__ is SentryInternalClient
+
+        with self.settings(CELERY_ALWAYS_EAGER=True):
+            client.captureMessage('internal client test')
+
+        event = Event.objects.get()
+        assert event.message == 'internal client test'
