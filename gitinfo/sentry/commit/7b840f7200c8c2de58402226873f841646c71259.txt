commit 7b840f7200c8c2de58402226873f841646c71259
Author: MeredithAnya <meredith@getsentry.com>
Date:   Tue Jul 30 16:49:08 2019 -0700

    ref(app-platform): Add install tokens Destroyer (#14210)
    
    * ref(app-platform): Add install tokens Destroyer

diff --git a/src/sentry/analytics/events/sentry_app_installation_token_deleted.py b/src/sentry/analytics/events/sentry_app_installation_token_deleted.py
new file mode 100644
index 0000000000..bad3289f75
--- /dev/null
+++ b/src/sentry/analytics/events/sentry_app_installation_token_deleted.py
@@ -0,0 +1,17 @@
+from __future__ import absolute_import, print_function
+
+from sentry import analytics
+
+
+class SentryAppInstallationTokenDeleted(analytics.Event):
+    type = 'sentry_app_installation_token.deleted'
+
+    attributes = (
+        analytics.Attribute('user_id'),
+        analytics.Attribute('organization_id'),
+        analytics.Attribute('sentry_app_installation_id'),
+        analytics.Attribute('sentry_app'),
+    )
+
+
+analytics.register(SentryAppInstallationTokenDeleted)
diff --git a/src/sentry/mediators/sentry_app_installation_tokens/__init__.py b/src/sentry/mediators/sentry_app_installation_tokens/__init__.py
index 2e7d5e72ac..4214b9f159 100644
--- a/src/sentry/mediators/sentry_app_installation_tokens/__init__.py
+++ b/src/sentry/mediators/sentry_app_installation_tokens/__init__.py
@@ -1,3 +1,4 @@
 from __future__ import absolute_import
 
 from .creator import Creator  # NOQA
+from .destroyer import Destroyer  # NOQA
diff --git a/src/sentry/mediators/sentry_app_installation_tokens/creator.py b/src/sentry/mediators/sentry_app_installation_tokens/creator.py
index 2816679b2f..0bfef9233b 100644
--- a/src/sentry/mediators/sentry_app_installation_tokens/creator.py
+++ b/src/sentry/mediators/sentry_app_installation_tokens/creator.py
@@ -43,7 +43,7 @@ class Creator(Mediator):
             create_audit_entry(
                 request=self.request,
                 organization=self.organization,
-                target_object=self.sentry_app_installation_token.id,
+                target_object=self.api_token.id,
                 event=AuditLogEntryEvent.INTERNAL_INTEGRATION_ADD_TOKEN,
                 data={'sentry_app': self.sentry_app.name},
             )
diff --git a/src/sentry/mediators/sentry_app_installation_tokens/destroyer.py b/src/sentry/mediators/sentry_app_installation_tokens/destroyer.py
new file mode 100644
index 0000000000..c4dc8c226d
--- /dev/null
+++ b/src/sentry/mediators/sentry_app_installation_tokens/destroyer.py
@@ -0,0 +1,58 @@
+from __future__ import absolute_import
+
+from sentry.utils.cache import memoize
+from sentry.mediators import Mediator, Param
+from sentry.models import (
+    AuditLogEntryEvent, SentryAppInstallationToken
+)
+
+
+class Destroyer(Mediator):
+    api_token = Param('sentry.models.ApiToken')
+    generate_audit = Param(bool, default=False)
+    user = Param('sentry.models.User')
+    request = Param('rest_framework.request.Request', required=False)
+
+    def call(self):
+        self._destroy_sentry_app_installation_token()
+        self._destroy_api_token()
+        return self.api_token
+
+    def _destroy_api_token(self):
+        self.api_token.delete()
+
+    def _destroy_sentry_app_installation_token(self):
+        install_token = SentryAppInstallationToken.objects.get(
+            api_token=self.api_token,
+        )
+        self.sentry_app_installation = install_token.sentry_app_installation
+        install_token.delete()
+
+    def audit(self):
+        from sentry.utils.audit import create_audit_entry
+        if self.request and self.generate_audit:
+            create_audit_entry(
+                request=self.request,
+                organization=self.organization,
+                target_object=self.api_token.id,
+                event=AuditLogEntryEvent.INTERNAL_INTEGRATION_REMOVE_TOKEN,
+                data={'sentry_app': self.sentry_app.name},
+            )
+
+    def record_analytics(self):
+        from sentry import analytics
+        analytics.record(
+            'sentry_app_installation_token.deleted',
+            user_id=self.user.id,
+            organization_id=self.organization.id,
+            sentry_app_installation_id=self.sentry_app_installation.id,
+            sentry_app=self.sentry_app.slug,
+        )
+
+    @memoize
+    def sentry_app(self):
+        return self.sentry_app_installation.sentry_app
+
+    @memoize
+    def organization(self):
+        return self.sentry_app_installation.organization
diff --git a/src/sentry/mediators/sentry_app_installations/destroyer.py b/src/sentry/mediators/sentry_app_installations/destroyer.py
index 6b61472964..5a211f4663 100644
--- a/src/sentry/mediators/sentry_app_installations/destroyer.py
+++ b/src/sentry/mediators/sentry_app_installations/destroyer.py
@@ -4,8 +4,13 @@ from __future__ import absolute_import
 from requests.exceptions import RequestException
 from sentry import analytics
 from sentry.mediators import Mediator, Param
-from sentry.mediators import service_hooks
-from sentry.models import AuditLogEntryEvent, ServiceHook
+from sentry.mediators import service_hooks, sentry_app_installation_tokens
+from sentry.models import (
+    ApiToken,
+    AuditLogEntryEvent,
+    SentryAppInstallationToken,
+    ServiceHook,
+)
 from sentry.mediators.sentry_app_installations.installation_notifier import InstallationNotifier
 from sentry.utils.audit import create_audit_entry
 
@@ -26,6 +31,7 @@ class Destroyer(Mediator):
     def call(self):
         self._destroy_grant()
         self._destroy_service_hooks()
+        self._destroy_api_tokens()
         self._destroy_installation()
         return self.install
 
@@ -41,6 +47,20 @@ class Destroyer(Mediator):
         for hook in hooks:
             service_hooks.Destroyer.run(service_hook=hook)
 
+    def _destroy_api_tokens(self):
+        tokens = ApiToken.objects.filter(
+            id__in=SentryAppInstallationToken.objects.filter(
+                sentry_app_installation_id=self.install.id,
+            ).values_list('api_token_id', flat=True),
+        )
+
+        for token in tokens:
+            sentry_app_installation_tokens.Destroyer.run(
+                api_token=token,
+                user=self.user,
+                request=self.request,
+            )
+
     def _destroy_installation(self):
         if self.notify:
             try:
diff --git a/src/sentry/models/auditlogentry.py b/src/sentry/models/auditlogentry.py
index 48bfbbb206..4c85ecd12c 100644
--- a/src/sentry/models/auditlogentry.py
+++ b/src/sentry/models/auditlogentry.py
@@ -88,6 +88,7 @@ class AuditLogEntryEvent(object):
     INTERNAL_INTEGRATION_ADD = 130
 
     INTERNAL_INTEGRATION_ADD_TOKEN = 135
+    INTERNAL_INTEGRATION_REMOVE_TOKEN = 136
 
 
 class AuditLogEntry(Model):
@@ -162,6 +163,7 @@ class AuditLogEntry(Model):
             (AuditLogEntryEvent.SENTRY_APP_UNINSTALL, 'sentry-app.uninstall'),
             (AuditLogEntryEvent.INTERNAL_INTEGRATION_ADD, 'internal-integration.create'),
             (AuditLogEntryEvent.INTERNAL_INTEGRATION_ADD_TOKEN, 'internal-integration.add-token'),
+            (AuditLogEntryEvent.INTERNAL_INTEGRATION_REMOVE_TOKEN, 'internal-integration.remove-token'),
 
             (AuditLogEntryEvent.SET_ONDEMAND, 'ondemand.edit'),
             (AuditLogEntryEvent.TRIAL_STARTED, 'trial.started'),
@@ -355,5 +357,8 @@ class AuditLogEntry(Model):
         elif self.event == AuditLogEntryEvent.INTERNAL_INTEGRATION_ADD_TOKEN:
             return 'created a token for internal integration %s' % (
                 self.data['sentry_app'])
+        elif self.event == AuditLogEntryEvent.INTERNAL_INTEGRATION_REMOVE_TOKEN:
+            return 'revoked a token for internal integration %s' % (
+                self.data['sentry_app'])
 
         return ''
diff --git a/src/sentry/testutils/factories.py b/src/sentry/testutils/factories.py
index 253e068d94..866b6b6341 100644
--- a/src/sentry/testutils/factories.py
+++ b/src/sentry/testutils/factories.py
@@ -27,7 +27,7 @@ from sentry.incidents.models import (
     IncidentSeen,
     IncidentActivity,
 )
-from sentry.mediators import sentry_apps, sentry_app_installations, service_hooks
+from sentry.mediators import sentry_apps, sentry_app_installations, sentry_app_installation_tokens, service_hooks
 from sentry.models import (
     Activity, Environment, Event, EventError, EventMapping, Group, Organization, OrganizationMember,
     OrganizationMemberTeam, Project, ProjectBookmark, Team, User, UserEmail, Release, Commit, ReleaseCommit,
@@ -738,6 +738,14 @@ class Factories(object):
             **Factories._sentry_app_kwargs(**kwargs)
         )
 
+    @staticmethod
+    def create_internal_integration_token(install, **kwargs):
+        installation_token = sentry_app_installation_tokens.Creator.run(
+            sentry_app_installation=install,
+            **kwargs
+        )
+        return installation_token.api_token
+
     @staticmethod
     def _sentry_app_kwargs(**kwargs):
         _kwargs = {
diff --git a/src/sentry/testutils/fixtures.py b/src/sentry/testutils/fixtures.py
index 7b4ca226ac..48fa037509 100644
--- a/src/sentry/testutils/fixtures.py
+++ b/src/sentry/testutils/fixtures.py
@@ -202,6 +202,9 @@ class Fixtures(object):
     def create_internal_integration(self, *args, **kwargs):
         return Factories.create_internal_integration(*args, **kwargs)
 
+    def create_internal_integration_token(self, *args, **kwargs):
+        return Factories.create_internal_integration_token(*args, **kwargs)
+
     def create_sentry_app_installation(self, *args, **kwargs):
         return Factories.create_sentry_app_installation(*args, **kwargs)
 
diff --git a/tests/sentry/mediators/sentry_app_installation_tokens/test_creator.py b/tests/sentry/mediators/sentry_app_installation_tokens/test_creator.py
index 727064de09..43d932981b 100644
--- a/tests/sentry/mediators/sentry_app_installation_tokens/test_creator.py
+++ b/tests/sentry/mediators/sentry_app_installation_tokens/test_creator.py
@@ -50,7 +50,7 @@ class TestCreator(TestCase):
         log = AuditLogEntry.objects.get(organization=self.org)
         assert log.get_note() == 'created a token for internal integration nulldb'
         assert log.organization == self.org
-        assert log.target_object == sentry_app_installation_token.id
+        assert log.target_object == sentry_app_installation_token.api_token.id
 
         record.assert_called_with(
             'sentry_app_installation_token.created',
diff --git a/tests/sentry/mediators/sentry_app_installation_tokens/test_destroyer.py b/tests/sentry/mediators/sentry_app_installation_tokens/test_destroyer.py
new file mode 100644
index 0000000000..4aaa3f8404
--- /dev/null
+++ b/tests/sentry/mediators/sentry_app_installation_tokens/test_destroyer.py
@@ -0,0 +1,79 @@
+from __future__ import absolute_import
+
+from mock import patch
+
+from sentry.mediators.sentry_app_installation_tokens import Destroyer
+from sentry.models import (
+    AuditLogEntry,
+    ApiToken,
+    SentryAppInstallationToken,
+    SentryAppInstallation
+)
+from sentry.testutils import TestCase
+
+
+class TestDestroyer(TestCase):
+    def setUp(self):
+        self.user = self.create_user()
+        self.org = self.create_organization(owner=self.user)
+        self.create_project(organization=self.org)
+
+        self.sentry_app = self.create_internal_integration(
+            name='nulldb',
+            organization=self.org
+        )
+
+        self.sentry_app_installation = SentryAppInstallation.objects.get(sentry_app=self.sentry_app)
+        self.api_token = self.create_internal_integration_token(
+            install=self.sentry_app_installation,
+            user=self.user,
+        )
+
+    @patch('sentry.analytics.record')
+    def test_delete_token_with_audit(self, record):
+        request = self.make_request(user=self.user, method='DELETE')
+        api_token = Destroyer.run(
+            api_token=self.api_token,
+            user=self.user,
+            generate_audit=True,
+            request=request
+        )
+
+        assert not ApiToken.objects.filter(id=api_token.id).exists()
+        assert not SentryAppInstallationToken.objects.filter(api_token_id=api_token.id).exists()
+
+        log = AuditLogEntry.objects.get(organization=self.org)
+        assert log.get_note() == 'revoked a token for internal integration nulldb'
+        assert log.organization == self.org
+        assert log.target_object == api_token.id
+
+        record.assert_called_with(
+            'sentry_app_installation_token.deleted',
+            user_id=self.user.id,
+            organization_id=self.org.id,
+            sentry_app_installation_id=self.sentry_app_installation.id,
+            sentry_app=self.sentry_app.slug,
+        )
+
+    @patch('sentry.utils.audit.create_audit_entry')
+    @patch('sentry.analytics.record')
+    def test_delete_token_without_audit(self, record, create_audit_entry):
+        request = self.make_request(user=self.user, method='DELETE')
+        api_token = Destroyer.run(
+            api_token=self.api_token,
+            user=self.user,
+            request=request
+        )
+
+        assert not ApiToken.objects.filter(id=api_token.id).exists()
+        assert not SentryAppInstallationToken.objects.filter(api_token_id=api_token.id).exists()
+
+        assert not create_audit_entry.called
+
+        record.assert_called_with(
+            'sentry_app_installation_token.deleted',
+            user_id=self.user.id,
+            organization_id=self.org.id,
+            sentry_app_installation_id=self.sentry_app_installation.id,
+            sentry_app=self.sentry_app.slug,
+        )
diff --git a/tests/sentry/mediators/sentry_app_installations/test_destroyer.py b/tests/sentry/mediators/sentry_app_installations/test_destroyer.py
index cc959efbd9..ab227df094 100644
--- a/tests/sentry/mediators/sentry_app_installations/test_destroyer.py
+++ b/tests/sentry/mediators/sentry_app_installations/test_destroyer.py
@@ -7,7 +7,14 @@ from mock import patch
 from requests.exceptions import RequestException
 
 from sentry.mediators.sentry_app_installations import Creator, Destroyer
-from sentry.models import AuditLogEntry, AuditLogEntryEvent, ApiGrant, SentryAppInstallation, ServiceHook
+from sentry.models import (
+    AuditLogEntry,
+    AuditLogEntryEvent,
+    ApiGrant,
+    ApiToken,
+    SentryAppInstallation,
+    ServiceHook,
+)
 from sentry.testutils import TestCase
 
 
@@ -69,6 +76,25 @@ class TestDestroyer(TestCase):
 
         assert not ServiceHook.objects.filter(pk=hook.id).exists()
 
+    @responses.activate
+    def test_deletes_api_tokens(self):
+        internal_app = self.create_internal_integration(
+            organization=self.org,
+            slug='internal',
+        )
+        install = SentryAppInstallation.objects.get(sentry_app_id=internal_app.id)
+        api_token = install.api_token
+
+        destroyer = Destroyer(
+            install=install,
+            user=self.user,
+        )
+
+        responses.add(responses.POST, 'https://example.com/webhook')
+        destroyer.call()
+
+        assert not ApiToken.objects.filter(pk=api_token.id).exists()
+
     @responses.activate
     @patch('sentry.mediators.sentry_app_installations.InstallationNotifier.run')
     def test_sends_notification(self, run):
