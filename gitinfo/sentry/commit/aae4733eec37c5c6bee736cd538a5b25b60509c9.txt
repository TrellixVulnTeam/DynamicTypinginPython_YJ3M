commit aae4733eec37c5c6bee736cd538a5b25b60509c9
Author: David Cramer <dcramer@gmail.com>
Date:   Sat Nov 24 13:00:38 2012 -0800

    Correct auth tests to reflect new project_from_auth_vars behavior

diff --git a/src/sentry/coreapi.py b/src/sentry/coreapi.py
index 62021908e1..5653761ad1 100644
--- a/src/sentry/coreapi.py
+++ b/src/sentry/coreapi.py
@@ -84,7 +84,7 @@ def extract_auth_vars(request):
 def project_from_auth_vars(auth_vars):
     api_key = auth_vars.get('sentry_key')
     if not api_key:
-        return None
+        raise APIForbidden('Invalid api key')
     try:
         pk = ProjectKey.objects.get_from_cache(public_key=api_key)
     except ProjectKey.DoesNotExist:
diff --git a/tests/sentry/coreapi/tests.py b/tests/sentry/coreapi/tests.py
index 16d2a705f1..7f254c5127 100644
--- a/tests/sentry/coreapi/tests.py
+++ b/tests/sentry/coreapi/tests.py
@@ -121,45 +121,28 @@ class ExtractAuthVarsTest(BaseAPITest):
 
 
 class ProjectFromAuthVarsTest(BaseAPITest):
-    def test_valid_without_key(self):
+    def test_invalid_if_missing_key(self):
         auth_vars = {}
+        self.assertRaises(APIForbidden, project_from_auth_vars, auth_vars)
 
-        # without key
+    def test_valid_with_key(self):
+        auth_vars = {'sentry_key': self.pk.public_key}
         result = project_from_auth_vars(auth_vars)
-        self.assertEquals(result, None)
-
-        # with key
-        auth_vars['sentry_key'] = self.pk.public_key
-        result = project_from_auth_vars(auth_vars)
-        self.assertEquals(result, self.project)
+        self.assertEquals(result, (self.project, self.pk.user))
 
     def test_inactive_user(self):
         user = self.pm.user
         user.is_active = False
         user.save()
 
-        auth_vars = {}
-
-        # without key
-        result = project_from_auth_vars(auth_vars)
-        self.assertEquals(result, None)
-
-        # with key
-        auth_vars['sentry_key'] = self.pk.public_key
+        auth_vars = {'sentry_key': self.pk.public_key}
         self.assertRaises(APIUnauthorized, project_from_auth_vars, auth_vars)
 
     def test_inactive_member(self):
         self.pm.is_active = False
         self.pm.save()
 
-        auth_vars = {}
-
-        # without key
-        result = project_from_auth_vars(auth_vars)
-        self.assertEquals(result, None)
-
-        # with key
-        auth_vars['sentry_key'] = self.pk.public_key
+        auth_vars = {'sentry_key': self.pk.public_key}
         self.assertRaises(APIUnauthorized, project_from_auth_vars, auth_vars)
 
 
diff --git a/tests/sentry/udp/tests.py b/tests/sentry/udp/tests.py
index a78bdc1237..ad04fca4ed 100644
--- a/tests/sentry/udp/tests.py
+++ b/tests/sentry/udp/tests.py
@@ -2,6 +2,8 @@
 
 from __future__ import absolute_import
 
+from django.contrib.auth.models import User
+from sentry.models import Project
 from sentry.utils.auth import get_auth_header
 from sentry.services.udp import SentryUDPServer
 
@@ -12,6 +14,10 @@ class SentryUDPTest(TestCase):
     def setUp(self):
         self.address = (('0.0.0.0', 0))
         self.server = SentryUDPServer(*self.address)
+        self.user = User.objects.create(username='coreapi')
+        self.project = Project.objects.create(owner=self.user, name='Foo', slug='bar')
+        self.pm = self.project.team.member_set.get_or_create(user=self.user)[0]
+        self.pk = self.project.key_set.get_or_create(user=self.user)[0]
 
     def test_failure(self):
         self.assertNotEquals(None, self.server.handle('deadbeef', self.address))
@@ -19,5 +25,6 @@ class SentryUDPTest(TestCase):
     def test_success(self):
         data = {'message': 'hello', 'server_name': 'not_dcramer.local', 'level': 40, 'site': 'not_a_real_site'}
         message = self._makeMessage(data)
-        packet = get_auth_header('udpTest') + '\n\n' + message
+        header = get_auth_header('udpTest', api_key=self.pk.public_key, secret_key=self.pk.secret_key)
+        packet = header + '\n\n' + message
         self.assertEquals(None, self.server.handle(packet, self.address))
diff --git a/tests/sentry/web/api/tests.py b/tests/sentry/web/api/tests.py
index 830f7fd9f8..3736d4f238 100644
--- a/tests/sentry/web/api/tests.py
+++ b/tests/sentry/web/api/tests.py
@@ -25,7 +25,7 @@ class StoreViewTest(TestCase):
             'sentry_key': 'a' * 40,
             'sentry_version': '2.0',
         }
-        project_from_auth_vars.return_value = self.project
+        project_from_auth_vars.return_value = (self.project, None)
         resp = self.client.options(self.path)
         self.assertEquals(resp.status_code, 200)
         self.assertIn('Allow', resp)
