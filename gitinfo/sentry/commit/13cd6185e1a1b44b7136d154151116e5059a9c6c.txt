commit 13cd6185e1a1b44b7136d154151116e5059a9c6c
Author: Jess MacQueen <jess@getsentry.com>
Date:   Wed May 11 16:23:06 2016 -0700

    improve caching for avatar uploads

diff --git a/src/sentry/api/endpoints/useravatar.py b/src/sentry/api/endpoints/useravatar.py
index b5e4d76f2e..19ddfe89b2 100644
--- a/src/sentry/api/endpoints/useravatar.py
+++ b/src/sentry/api/endpoints/useravatar.py
@@ -1,5 +1,7 @@
 from __future__ import absolute_import
 
+from uuid import uuid4
+
 from PIL import Image
 
 from django.conf import settings
@@ -57,6 +59,7 @@ class UserAvatarEndpoint(UserEndpoint):
             avatar.clear_cached_photos()
         if photo:
             avatar.file = photo
+            avatar.ident = uuid4().hex
 
         avatar_type = request.DATA.get('avatar_type')
 
diff --git a/src/sentry/middleware/locale.py b/src/sentry/middleware/locale.py
index 8a69899f91..f6cc16c9a8 100644
--- a/src/sentry/middleware/locale.py
+++ b/src/sentry/middleware/locale.py
@@ -22,8 +22,9 @@ class SentryLocaleMiddleware(LocaleMiddleware):
         # This avoids touching user session, which means we avoid
         # setting `Vary: Cookie` as a response header which will
         # break HTTP caching entirely.
-        self.__is_static = request.path_info[:9] == '/_static/'
-        if self.__is_static:
+        self.__skip_caching = (request.path_info[:9] == '/_static/' or
+                               request.path_info[:8] == '/avatar/')
+        if self.__skip_caching:
             return
 
         safe_execute(self.load_user_conf, request,
@@ -50,10 +51,10 @@ class SentryLocaleMiddleware(LocaleMiddleware):
         # adds an extra `Vary: Accept-Language`. Static files don't need this and is
         # less effective for caching.
         try:
-            if self.__is_static:
+            if self.__skip_caching:
                 return response
         except AttributeError:
-            # catch ourselves in case __is_static never got set.
+            # catch ourselves in case __skip_caching never got set.
             # It's possible that process_request never ran.
             pass
         return super(SentryLocaleMiddleware, self).process_response(request, response)
diff --git a/src/sentry/web/frontend/user_avatar.py b/src/sentry/web/frontend/user_avatar.py
index 0d3a76ad84..55ac9aa315 100644
--- a/src/sentry/web/frontend/user_avatar.py
+++ b/src/sentry/web/frontend/user_avatar.py
@@ -4,6 +4,7 @@ from django.http import HttpResponse, HttpResponseBadRequest, HttpResponseNotFou
 from django.views.generic import View
 
 from sentry.models import UserAvatar
+from sentry.web.frontend.generic import FOREVER_CACHE
 
 
 class UserAvatarPhotoView(View):
@@ -31,4 +32,7 @@ class UserAvatarPhotoView(View):
                 return HttpResponseBadRequest()
             else:
                 photo_file = avatar.get_cached_photo(size)
-        return HttpResponse(photo_file, content_type='image/png')
+
+        res = HttpResponse(photo_file, content_type='image/png')
+        res['Cache-Control'] = FOREVER_CACHE
+        return res
diff --git a/tests/sentry/web/frontend/test_user_avatar.py b/tests/sentry/web/frontend/test_user_avatar.py
new file mode 100644
index 0000000000..4f286b1043
--- /dev/null
+++ b/tests/sentry/web/frontend/test_user_avatar.py
@@ -0,0 +1,22 @@
+from __future__ import absolute_import
+
+from django.core.urlresolvers import reverse
+
+from sentry.models import File, UserAvatar
+from sentry.testutils import TestCase
+from sentry.utils.compat import StringIO
+from sentry.web.frontend.generic import FOREVER_CACHE
+
+
+class UserAvatarTest(TestCase):
+    def test_headers(self):
+        user = self.create_user(email='a@example.com')
+        photo = File.objects.create(name='test.png', type='avatar.file')
+        photo.putfile(StringIO('test'))
+        avatar = UserAvatar.objects.create(user=user, file=photo)
+        url = reverse('sentry-user-avatar-url', kwargs={'avatar_id': avatar.ident})
+        response = self.client.get(url)
+        assert response.status_code == 200
+        assert response['Cache-Control'] == FOREVER_CACHE
+        assert response.get('Vary') is None
+        assert response.get('Set-Cookie') is None
