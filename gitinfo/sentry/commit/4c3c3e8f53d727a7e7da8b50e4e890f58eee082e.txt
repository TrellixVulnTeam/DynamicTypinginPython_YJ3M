commit 4c3c3e8f53d727a7e7da8b50e4e890f58eee082e
Author: Matej Minar <matej.minar@sentry.io>
Date:   Fri Apr 17 15:02:43 2020 +0200

    fix(ui): Don't fetch health stats when no health data available (#18336)

diff --git a/src/sentry/static/sentry/app/views/releasesV2/detail/overview/index.tsx b/src/sentry/static/sentry/app/views/releasesV2/detail/overview/index.tsx
index 557753206d..b7d7be8a6a 100644
--- a/src/sentry/static/sentry/app/views/releasesV2/detail/overview/index.tsx
+++ b/src/sentry/static/sentry/app/views/releasesV2/detail/overview/index.tsx
@@ -88,7 +88,8 @@ class ReleaseOverview extends AsyncView<Props> {
               selection={selection}
               location={location}
               yAxis={yAxis}
-              disable={!hasHealthData && !hasDiscover}
+              hasHealthData={hasHealthData}
+              hasDiscover={hasDiscover}
             >
               {({crashFreeTimeBreakdown, ...releaseStatsProps}) => (
                 <ContentBox>
diff --git a/src/sentry/static/sentry/app/views/releasesV2/detail/overview/releaseStatsRequest.tsx b/src/sentry/static/sentry/app/views/releasesV2/detail/overview/releaseStatsRequest.tsx
index ec11981194..1cd4951669 100644
--- a/src/sentry/static/sentry/app/views/releasesV2/detail/overview/releaseStatsRequest.tsx
+++ b/src/sentry/static/sentry/app/views/releasesV2/detail/overview/releaseStatsRequest.tsx
@@ -52,7 +52,8 @@ type Props = {
   location: Location;
   yAxis: YAxis;
   children: (renderProps: ReleaseStatsRequestRenderProps) => React.ReactNode;
-  disable: boolean;
+  hasHealthData: boolean;
+  hasDiscover: boolean;
 };
 type State = {
   reloading: boolean;
@@ -86,9 +87,9 @@ class ReleaseStatsRequest extends React.Component<Props, State> {
 
   fetchData = async () => {
     let data: Data | null = null;
-    const {yAxis, disable} = this.props;
+    const {yAxis, hasHealthData, hasDiscover} = this.props;
 
-    if (disable) {
+    if (!hasHealthData && !hasDiscover) {
       return;
     }
 
@@ -171,12 +172,12 @@ class ReleaseStatsRequest extends React.Component<Props, State> {
   };
 
   fetchEventData = async () => {
-    const {api, orgId, location, selection, version} = this.props;
+    const {api, orgId, location, selection, version, hasHealthData} = this.props;
     const {crashFreeTimeBreakdown} = this.state.data || {};
     let userResponse, eventsCountResponse;
 
     // we don't need to fetch crashFreeTimeBreakdown every time, because it does not change
-    if (crashFreeTimeBreakdown) {
+    if (crashFreeTimeBreakdown || !hasHealthData) {
       eventsCountResponse = await fetchTotalCount(
         api,
         orgId,
