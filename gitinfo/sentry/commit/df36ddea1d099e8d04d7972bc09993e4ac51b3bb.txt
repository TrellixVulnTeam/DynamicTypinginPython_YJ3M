commit df36ddea1d099e8d04d7972bc09993e4ac51b3bb
Author: Priscila Oliveira <priscilawebdev@gmail.com>
Date:   Tue Mar 17 17:59:38 2020 +0100

    fix(lint): fixed fixable lint errors (#17674)

diff --git a/src/sentry/static/sentry/app/actionCreators/projects.jsx b/src/sentry/static/sentry/app/actionCreators/projects.jsx
index 31bc0fc1a8..c5fad3478d 100644
--- a/src/sentry/static/sentry/app/actionCreators/projects.jsx
+++ b/src/sentry/static/sentry/app/actionCreators/projects.jsx
@@ -91,7 +91,7 @@ export const _debouncedLoadStats = debounce((api, projectSet, params) => {
         results.reduce((acc, result) => acc.concat(result), [])
       );
     })
-    .catch(err => {
+    .catch(() => {
       addErrorMessage(t('Unable to fetch all project stats'));
     });
 
diff --git a/src/sentry/static/sentry/app/actionCreators/teams.jsx b/src/sentry/static/sentry/app/actionCreators/teams.jsx
index f5cef448bf..bef3a2f867 100644
--- a/src/sentry/static/sentry/app/actionCreators/teams.jsx
+++ b/src/sentry/static/sentry/app/actionCreators/teams.jsx
@@ -101,7 +101,7 @@ export function leaveTeam(api, params, options) {
   });
 }
 
-export function createTeam(api, team, params, options) {
+export function createTeam(api, team, params) {
   TeamActions.createTeam(team);
 
   return api
@@ -133,7 +133,7 @@ export function createTeam(api, team, params, options) {
     );
 }
 
-export function removeTeam(api, params, options) {
+export function removeTeam(api, params) {
   TeamActions.removeTeam(params.teamId);
 
   return api
diff --git a/src/sentry/static/sentry/app/components/charts/barChart.jsx b/src/sentry/static/sentry/app/components/charts/barChart.jsx
index cf14458da8..04979d6048 100644
--- a/src/sentry/static/sentry/app/components/charts/barChart.jsx
+++ b/src/sentry/static/sentry/app/components/charts/barChart.jsx
@@ -15,7 +15,7 @@ export default class BarChart extends React.Component {
       <BaseChart
         {...props}
         xAxis={xAxis !== null ? {...(xAxis || {}), boundaryGap: true} : null}
-        series={series.map((s, i) =>
+        series={series.map(s =>
           BarSeries({
             name: s.seriesName,
             stack: stacked ? 'stack1' : null,
diff --git a/src/sentry/static/sentry/app/components/charts/pieChart.jsx b/src/sentry/static/sentry/app/components/charts/pieChart.jsx
index df4a844652..3fb0349c65 100644
--- a/src/sentry/static/sentry/app/components/charts/pieChart.jsx
+++ b/src/sentry/static/sentry/app/components/charts/pieChart.jsx
@@ -161,7 +161,7 @@ class PieChart extends React.Component {
             avoidLabelOverlap: false,
             label: {
               normal: {
-                formatter: ({name, percent, dataIndex}) => `${name}\n${percent}%`,
+                formatter: ({name, percent}) => `${name}\n${percent}%`,
                 show: false,
                 position: 'center',
               },
diff --git a/src/sentry/static/sentry/app/components/charts/worldMapChart.jsx b/src/sentry/static/sentry/app/components/charts/worldMapChart.jsx
index ec1903ba13..f05a947393 100644
--- a/src/sentry/static/sentry/app/components/charts/worldMapChart.jsx
+++ b/src/sentry/static/sentry/app/components/charts/worldMapChart.jsx
@@ -100,7 +100,7 @@ export default class WorldMapChart extends React.Component {
         xAxis={null}
         series={processedSeries}
         tooltip={{
-          formatter: ({marker, name, value, seriesName}) => {
+          formatter: ({marker, name, value}) => {
             // If value is NaN, don't show anything because we won't have a country code either
             if (isNaN(value)) {
               return '';
diff --git a/src/sentry/static/sentry/app/components/events/contexts/contextBlock.jsx b/src/sentry/static/sentry/app/components/events/contexts/contextBlock.jsx
index 8c48879f40..bdf8bc4ea4 100644
--- a/src/sentry/static/sentry/app/components/events/contexts/contextBlock.jsx
+++ b/src/sentry/static/sentry/app/components/events/contexts/contextBlock.jsx
@@ -39,7 +39,7 @@ class ContextBlock extends React.Component {
     }
 
     if (extraData.length > 0) {
-      data = data.concat(sortBy(extraData, (key, value) => key));
+      data = data.concat(sortBy(extraData, key => key));
     }
 
     return (
diff --git a/src/sentry/static/sentry/app/components/events/errorItem.jsx b/src/sentry/static/sentry/app/components/events/errorItem.jsx
index 730ae10e95..ecc4ef50ae 100644
--- a/src/sentry/static/sentry/app/components/events/errorItem.jsx
+++ b/src/sentry/static/sentry/app/components/events/errorItem.jsx
@@ -25,7 +25,7 @@ class EventErrorItem extends React.Component {
     };
   }
 
-  shouldComponentUpdate(nextProps, nextState) {
+  shouldComponentUpdate(_nextProps, nextState) {
     return this.state.isOpen !== nextState.isOpen;
   }
 
@@ -54,7 +54,7 @@ class EventErrorItem extends React.Component {
       data.image_path = path.length ? path.join(separator) + separator : '';
     }
 
-    return mapKeys(data, (value, key) => t(keyMapping[key] || startCase(key)));
+    return mapKeys(data, (_value, key) => t(keyMapping[key] || startCase(key)));
   }
 
   renderPath() {
diff --git a/src/sentry/static/sentry/app/components/events/sdkUpdates.jsx b/src/sentry/static/sentry/app/components/events/sdkUpdates.jsx
index 96a0744131..388ed76677 100644
--- a/src/sentry/static/sentry/app/components/events/sdkUpdates.jsx
+++ b/src/sentry/static/sentry/app/components/events/sdkUpdates.jsx
@@ -96,7 +96,7 @@ class EventSdkUpdateSuggestion extends React.Component {
         {title}
         {t(' so you can')}
         <AlertUl>
-          {suggestion.enables.map((suggestion2, i) => (
+          {suggestion.enables.map(suggestion2 => (
             <li key={getSuggestionComponentKey(suggestion2)}>
               <EventSdkUpdateSuggestion event={event} suggestion={suggestion2} />
             </li>
diff --git a/src/sentry/static/sentry/app/components/forms/input.jsx b/src/sentry/static/sentry/app/components/forms/input.jsx
index dee2800acc..4b11f9c775 100644
--- a/src/sentry/static/sentry/app/components/forms/input.jsx
+++ b/src/sentry/static/sentry/app/components/forms/input.jsx
@@ -1,6 +1,12 @@
 import React from 'react';
 import classNames from 'classnames';
+import omit from 'lodash/omit';
 
-export default function Input({className, children, ...otherProps}) {
-  return <input className={classNames('form-control', className)} {...otherProps} />;
+export default function Input({className, ...otherProps}) {
+  return (
+    <input
+      className={classNames('form-control', className)}
+      {...omit(otherProps, 'children')}
+    />
+  );
 }
diff --git a/src/sentry/static/sentry/app/components/forms/numberField.jsx b/src/sentry/static/sentry/app/components/forms/numberField.jsx
index a27dc915a8..b0168c3048 100644
--- a/src/sentry/static/sentry/app/components/forms/numberField.jsx
+++ b/src/sentry/static/sentry/app/components/forms/numberField.jsx
@@ -9,7 +9,7 @@ export default class NumberField extends InputField {
     max: PropTypes.number,
   };
 
-  coerceValue(value, prevValue) {
+  coerceValue(value) {
     const intValue = parseInt(value, 10);
 
     // return previous value if new value is NaN, otherwise, will get recursive error
diff --git a/src/sentry/static/sentry/app/components/group/pluginActions.jsx b/src/sentry/static/sentry/app/components/group/pluginActions.jsx
index f47575cef2..91ae62da2d 100644
--- a/src/sentry/static/sentry/app/components/group/pluginActions.jsx
+++ b/src/sentry/static/sentry/app/components/group/pluginActions.jsx
@@ -46,11 +46,11 @@ class PluginActions extends React.Component {
     // doesn't think the plugin still has an issue linked
     const endpoint = `/issues/${this.props.group.id}/plugins/${plugin.slug}/unlink/`;
     this.props.api.request(endpoint, {
-      success: data => {
+      success: () => {
         this.loadPlugin(plugin);
         addSuccessMessage(t('Successfully unlinked issue.'));
       },
-      error: error => {
+      error: () => {
         addErrorMessage(t('Unable to unlink issue'));
       },
     });
diff --git a/src/sentry/static/sentry/app/components/lazyLoad.jsx b/src/sentry/static/sentry/app/components/lazyLoad.jsx
index e6012466a6..a4a26f5263 100644
--- a/src/sentry/static/sentry/app/components/lazyLoad.jsx
+++ b/src/sentry/static/sentry/app/components/lazyLoad.jsx
@@ -39,7 +39,7 @@ class LazyLoad extends React.Component {
     this.fetchComponent();
   }
 
-  UNSAFE_componentWillReceiveProps(nextProps, nextState) {
+  UNSAFE_componentWillReceiveProps(nextProps) {
     // No need to refetch when component does not change
     if (nextProps.component && nextProps.component === this.props.component) {
       return;
@@ -67,7 +67,7 @@ class LazyLoad extends React.Component {
     );
   }
 
-  componentDidCatch(error, info) {
+  componentDidCatch(error) {
     Sentry.captureException(error);
     this.handleError(error);
   }
diff --git a/src/sentry/static/sentry/app/components/modals/createOwnershipRuleModal.jsx b/src/sentry/static/sentry/app/components/modals/createOwnershipRuleModal.jsx
index e57258474a..44d332d351 100644
--- a/src/sentry/static/sentry/app/components/modals/createOwnershipRuleModal.jsx
+++ b/src/sentry/static/sentry/app/components/modals/createOwnershipRuleModal.jsx
@@ -15,7 +15,7 @@ class CreateOwnershipRuleModal extends React.Component {
     project: SentryTypes.Project,
   };
 
-  handleSubmit = data => {
+  handleSubmit = () => {
     this.handleSuccess();
   };
 
diff --git a/src/sentry/static/sentry/app/components/resultGrid.jsx b/src/sentry/static/sentry/app/components/resultGrid.jsx
index cddfb1059f..3c227e6f90 100644
--- a/src/sentry/static/sentry/app/components/resultGrid.jsx
+++ b/src/sentry/static/sentry/app/components/resultGrid.jsx
@@ -164,7 +164,7 @@ const ResultGrid = createReactClass({
       keyForRow: function(row) {
         return row.id;
       },
-      columnsForRow: function(row) {
+      columnsForRow: function() {
         return [];
       },
       defaultParams: {
diff --git a/src/sentry/static/sentry/app/components/search/searchResultWrapper.jsx b/src/sentry/static/sentry/app/components/search/searchResultWrapper.jsx
index ba94935887..e382cd4ae6 100644
--- a/src/sentry/static/sentry/app/components/search/searchResultWrapper.jsx
+++ b/src/sentry/static/sentry/app/components/search/searchResultWrapper.jsx
@@ -1,8 +1,9 @@
 import styled from '@emotion/styled';
 import {css} from '@emotion/core';
 import React from 'react';
+import omit from 'lodash/omit';
 
-const SearchResultWrapper = styled(({highlighted, ...props}) => <div {...props} />)`
+const SearchResultWrapper = styled(props => <div {...omit(props, 'highlighted')} />)`
   cursor: pointer;
   display: block;
   color: ${p => p.theme.gray5};
diff --git a/src/sentry/static/sentry/app/components/search/sources/apiSource.jsx b/src/sentry/static/sentry/app/components/search/sources/apiSource.jsx
index 0babfad179..9076628841 100644
--- a/src/sentry/static/sentry/app/components/search/sources/apiSource.jsx
+++ b/src/sentry/static/sentry/app/components/search/sources/apiSource.jsx
@@ -351,7 +351,7 @@ class ApiSource extends React.Component {
 
   // Create result objects from API requests that do not require fuzzy search
   // i.e. these responses only return 1 object or they should always be displayed regardless of query input
-  async getDirectResults(requests, query) {
+  async getDirectResults(requests) {
     const [shortIdLookup, eventIdLookup] = requests;
 
     const directResults = (
diff --git a/src/sentry/static/sentry/app/components/search/sources/commandSource.jsx b/src/sentry/static/sentry/app/components/search/sources/commandSource.jsx
index ba09f1b867..c834fe72a8 100644
--- a/src/sentry/static/sentry/app/components/search/sources/commandSource.jsx
+++ b/src/sentry/static/sentry/app/components/search/sources/commandSource.jsx
@@ -98,7 +98,7 @@ class CommandSource extends React.Component {
       (this.state.fuzzy &&
         this.state.fuzzy
           .search(query)
-          .filter(({item, ...rest}) => !item.requiresSuperuser || isSuperuser)
+          .filter(({item}) => !item.requiresSuperuser || isSuperuser)
           .map(({item, ...rest}) => ({
             item: {
               ...item,
diff --git a/src/sentry/static/sentry/app/components/search/sources/routeSource.jsx b/src/sentry/static/sentry/app/components/search/sources/routeSource.jsx
index 5f66b33b16..df24eadba9 100644
--- a/src/sentry/static/sentry/app/components/search/sources/routeSource.jsx
+++ b/src/sentry/static/sentry/app/components/search/sources/routeSource.jsx
@@ -18,7 +18,7 @@ import withLatestContext from 'app/utils/withLatestContext';
 // We need to go through all navigation configurations and get a flattened list of all navigation item objects
 const mapFunc = (config, context = {}) =>
   (Array.isArray(config) ? config : config(context)).map(({items}) =>
-    items.filter(({show, ...rest}) => (typeof show === 'function' ? show(context) : true))
+    items.filter(({show}) => (typeof show === 'function' ? show(context) : true))
   );
 
 class RouteSource extends React.Component {
diff --git a/src/sentry/static/sentry/app/components/setupWizard.jsx b/src/sentry/static/sentry/app/components/setupWizard.jsx
index 1c69a40777..45c1ec658b 100644
--- a/src/sentry/static/sentry/app/components/setupWizard.jsx
+++ b/src/sentry/static/sentry/app/components/setupWizard.jsx
@@ -32,13 +32,13 @@ class SetupWizard extends React.Component {
   }
 
   pollFinished() {
-    return new Promise((resolve, reject) => {
+    return new Promise(resolve => {
       this.api.request(`/wizard/${this.props.hash}/`, {
         method: 'GET',
-        success: data => {
+        success: () => {
           setTimeout(() => this.pollFinished(), 1000);
         },
-        error: err => {
+        error: () => {
           resolve();
           this.setState({
             finished: true,
diff --git a/src/sentry/static/sentry/app/components/splitDiff.jsx b/src/sentry/static/sentry/app/components/splitDiff.jsx
index 9b58949193..e8528257ad 100644
--- a/src/sentry/static/sentry/app/components/splitDiff.jsx
+++ b/src/sentry/static/sentry/app/components/splitDiff.jsx
@@ -34,7 +34,7 @@ class SplitDiff extends React.Component {
       baseLines.length > targetLines.length
         ? [baseLines, targetLines]
         : [targetLines, baseLines];
-    const results = largerArray.map((line, index) =>
+    const results = largerArray.map((_line, index) =>
       diffFn(baseLines[index] || '', targetLines[index] || '', {newlineIsToken: true})
     );
 
diff --git a/src/sentry/static/sentry/app/components/stream/processingIssueList.jsx b/src/sentry/static/sentry/app/components/stream/processingIssueList.jsx
index c0d9f56bcb..cf5be703be 100644
--- a/src/sentry/static/sentry/app/components/stream/processingIssueList.jsx
+++ b/src/sentry/static/sentry/app/components/stream/processingIssueList.jsx
@@ -31,7 +31,7 @@ class ProcessingIssueList extends React.Component {
     this.fetchIssues();
   }
 
-  componentDidUpdate(prevProps, prevState) {
+  componentDidUpdate(prevProps) {
     if (!isEqual(prevProps.projectIds, this.props.projectIds)) {
       this.fetchIssues();
     }
@@ -55,7 +55,7 @@ class ProcessingIssueList extends React.Component {
           this.setState({issues: data});
         }
       },
-      error => {
+      () => {
         // this is okay. it's just a ui hint
       }
     );
diff --git a/src/sentry/static/sentry/app/components/u2f/u2finterface.jsx b/src/sentry/static/sentry/app/components/u2f/u2finterface.jsx
index 3fc8ab8848..d619119b49 100644
--- a/src/sentry/static/sentry/app/components/u2f/u2finterface.jsx
+++ b/src/sentry/static/sentry/app/components/u2f/u2finterface.jsx
@@ -82,7 +82,7 @@ class U2fInterface extends React.Component {
                   response: u2fResponse,
                   challenge,
                 })
-                .catch(err => {
+                .catch(() => {
                   // This is kind of gross but I want to limit the amount of changes to this component
                   this.setState({
                     deviceFailure: 'UNKNOWN_ERROR',
diff --git a/src/sentry/static/sentry/app/plugins/registry.jsx b/src/sentry/static/sentry/app/plugins/registry.jsx
index 7ce7ae29d5..cf0a2ce517 100644
--- a/src/sentry/static/sentry/app/plugins/registry.jsx
+++ b/src/sentry/static/sentry/app/plugins/registry.jsx
@@ -49,7 +49,7 @@ export default class Registry {
       return;
     }
 
-    const onAssetLoaded = function(asset) {
+    const onAssetLoaded = function() {
       remainingAssets--;
       if (remainingAssets === 0) {
         finishLoad();
diff --git a/src/sentry/static/sentry/app/stores/pluginsStore.jsx b/src/sentry/static/sentry/app/stores/pluginsStore.jsx
index 8254ad3b10..bd29570819 100644
--- a/src/sentry/static/sentry/app/stores/pluginsStore.jsx
+++ b/src/sentry/static/sentry/app/stores/pluginsStore.jsx
@@ -86,11 +86,11 @@ const PluginsStore = Reflux.createStore({
     this.triggerState();
   },
 
-  onUpdateSuccess(id, updateObj) {
+  onUpdateSuccess(id, _updateObj) {
     this.updating.delete(id);
   },
 
-  onUpdateError(id, updateObj, err) {
+  onUpdateError(id, _updateObj, err) {
     const origPlugin = this.updating.get(id);
     if (!origPlugin) {
       return;
diff --git a/src/sentry/static/sentry/app/stores/projectsStatsStore.jsx b/src/sentry/static/sentry/app/stores/projectsStatsStore.jsx
index c40c355800..4633d5ed05 100644
--- a/src/sentry/static/sentry/app/stores/projectsStatsStore.jsx
+++ b/src/sentry/static/sentry/app/stores/projectsStatsStore.jsx
@@ -65,7 +65,7 @@ const ProjectsStatsStore = Reflux.createStore({
    * @param {Object} err Error object
    * @param {Object} data Previous project data
    */
-  onUpdateError(err, projectSlug) {
+  onUpdateError(_err, projectSlug) {
     const project = this.updatingItems.get(projectSlug);
     if (!project) {
       return;
diff --git a/src/sentry/static/sentry/app/views/admin/adminOverview/apiChart.jsx b/src/sentry/static/sentry/app/views/admin/adminOverview/apiChart.jsx
index f182c26244..4ed1ee8e47 100644
--- a/src/sentry/static/sentry/app/views/admin/adminOverview/apiChart.jsx
+++ b/src/sentry/static/sentry/app/views/admin/adminOverview/apiChart.jsx
@@ -60,7 +60,7 @@ const ApiChart = createReactClass({
             };
           }, this.requestFinished);
         },
-        error: data => {
+        error: () => {
           this.setState({
             error: true,
           });
diff --git a/src/sentry/static/sentry/app/views/admin/adminOverview/eventChart.jsx b/src/sentry/static/sentry/app/views/admin/adminOverview/eventChart.jsx
index 946e6092af..9bf73051b4 100644
--- a/src/sentry/static/sentry/app/views/admin/adminOverview/eventChart.jsx
+++ b/src/sentry/static/sentry/app/views/admin/adminOverview/eventChart.jsx
@@ -61,7 +61,7 @@ const EventChart = createReactClass({
             };
           }, this.requestFinished);
         },
-        error: data => {
+        error: () => {
           this.setState({
             error: true,
           });
diff --git a/src/sentry/static/sentry/app/views/issueList/tagFilter.jsx b/src/sentry/static/sentry/app/views/issueList/tagFilter.jsx
index 868d448da2..9b8beb164e 100644
--- a/src/sentry/static/sentry/app/views/issueList/tagFilter.jsx
+++ b/src/sentry/static/sentry/app/views/issueList/tagFilter.jsx
@@ -8,6 +8,11 @@ import {t, tct} from 'app/locale';
 import SelectControl from 'app/components/forms/selectControl';
 
 class IssueListTagFilter extends React.Component {
+  static tagValueToSelectFormat = ({value}) => ({
+    value,
+    label: value,
+  });
+
   static propTypes = {
     tag: PropTypes.object.isRequired,
     value: PropTypes.string,
@@ -15,11 +20,6 @@ class IssueListTagFilter extends React.Component {
     tagValueLoader: PropTypes.func.isRequired,
   };
 
-  static tagValueToSelectFormat = ({value}) => ({
-    value,
-    label: value,
-  });
-
   static defaultProps = {
     tag: {},
     value: '',
@@ -73,7 +73,7 @@ class IssueListTagFilter extends React.Component {
           options: Object.values(resp).map(IssueListTagFilter.tagValueToSelectFormat),
         });
       })
-      .catch(err => {
+      .catch(() => {
         // TODO(billy): This endpoint seems to timeout a lot,
         // should we log these errors into datadog?
 
@@ -156,7 +156,7 @@ class IssueListTagFilter extends React.Component {
           <SelectControl
             deprecatedSelectControl
             clearable
-            filterOptions={(options, filter, currentValues) => options}
+            filterOptions={options => options}
             placeholder="--"
             value={this.state.value}
             onChange={this.handleChangeSelect}
diff --git a/src/sentry/static/sentry/app/views/organizationStats/index.jsx b/src/sentry/static/sentry/app/views/organizationStats/index.jsx
index 69efd927aa..5c6124e930 100644
--- a/src/sentry/static/sentry/app/views/organizationStats/index.jsx
+++ b/src/sentry/static/sentry/app/views/organizationStats/index.jsx
@@ -84,7 +84,7 @@ class OrganizationStatsContainer extends React.Component {
   fetchProjectData() {
     this.props.api.request(this.getOrganizationProjectsEndpoint(), {
       query: this.props.location.query,
-      success: (data, textStatus, jqxhr) => {
+      success: (data, _textStatus, jqxhr) => {
         const projectMap = {};
         data.forEach(project => {
           projectMap[project.id] = project;
diff --git a/src/sentry/static/sentry/app/views/organizationStats/organizationStatsDetails.jsx b/src/sentry/static/sentry/app/views/organizationStats/organizationStatsDetails.jsx
index 1025f1f5ef..46a95dd90b 100644
--- a/src/sentry/static/sentry/app/views/organizationStats/organizationStatsDetails.jsx
+++ b/src/sentry/static/sentry/app/views/organizationStats/organizationStatsDetails.jsx
@@ -31,7 +31,7 @@ class OrganizationStats extends React.Component {
     organization: PropTypes.object,
   };
 
-  renderTooltip(point, pointIdx, chart) {
+  renderTooltip(point, _pointIdx, chart) {
     const timeLabel = chart.getTimeLabel(point);
     const [accepted, rejected, blacklisted] = point.y;
 
diff --git a/src/sentry/static/sentry/app/views/settings/account/accountDetails.jsx b/src/sentry/static/sentry/app/views/settings/account/accountDetails.jsx
index e14421a794..7da8a6617c 100644
--- a/src/sentry/static/sentry/app/views/settings/account/accountDetails.jsx
+++ b/src/sentry/static/sentry/app/views/settings/account/accountDetails.jsx
@@ -21,7 +21,7 @@ class AccountDetails extends AsyncView {
     this.setState({user});
   };
 
-  handleSubmitError = (resp, model, id) => {};
+  handleSubmitError = () => {};
 
   renderBody() {
     const {user} = this.state;
diff --git a/src/sentry/static/sentry/app/views/settings/account/passwordForm.jsx b/src/sentry/static/sentry/app/views/settings/account/passwordForm.jsx
index b066f213fa..c55d56f1ea 100644
--- a/src/sentry/static/sentry/app/views/settings/account/passwordForm.jsx
+++ b/src/sentry/static/sentry/app/views/settings/account/passwordForm.jsx
@@ -12,13 +12,13 @@ import accountPasswordFields from 'app/data/forms/accountPassword';
 const ENDPOINT = '/users/me/password/';
 
 class PasswordForm extends React.Component {
-  handleSubmitSuccess = (change, model, id) => {
+  handleSubmitSuccess = (_change, model) => {
     // Reset form on success
     model.resetForm();
     addSuccessMessage('Password has been changed');
   };
 
-  handleSubmitError = (resp, model, id) => {
+  handleSubmitError = () => {
     addErrorMessage('Error changing password');
   };
 
@@ -37,7 +37,7 @@ class PasswordForm extends React.Component {
           location={this.props.location}
           forms={accountPasswordFields}
           additionalFieldProps={{user}}
-          renderFooter={({title, fields}) => (
+          renderFooter={() => (
             <PanelItem justifyContent="flex-end">
               <Button type="submit" priority="primary">
                 {t('Change password')}
diff --git a/src/sentry/static/sentry/app/views/settings/components/forms/inputField.jsx b/src/sentry/static/sentry/app/views/settings/components/forms/inputField.jsx
index 7197a96cc2..b3931883c8 100644
--- a/src/sentry/static/sentry/app/views/settings/components/forms/inputField.jsx
+++ b/src/sentry/static/sentry/app/views/settings/components/forms/inputField.jsx
@@ -1,5 +1,6 @@
 import PropTypes from 'prop-types';
 import React from 'react';
+import omit from 'lodash/omit';
 
 import FormField from 'app/views/settings/components/forms/formField';
 import Input from 'app/views/settings/components/forms/controls/input';
@@ -26,11 +27,7 @@ export default class InputField extends React.Component {
 
     return (
       <FormField className={className} {...this.props}>
-        {({children, ...formFieldProps}) =>
-          field({
-            ...formFieldProps,
-          })
-        }
+        {formFieldProps => field(omit(formFieldProps, 'children'))}
       </FormField>
     );
   }
diff --git a/src/sentry/static/sentry/app/views/settings/components/forms/radioBooleanField.jsx b/src/sentry/static/sentry/app/views/settings/components/forms/radioBooleanField.jsx
index c4ee78e941..ec5665325d 100644
--- a/src/sentry/static/sentry/app/views/settings/components/forms/radioBooleanField.jsx
+++ b/src/sentry/static/sentry/app/views/settings/components/forms/radioBooleanField.jsx
@@ -1,4 +1,5 @@
 import React from 'react';
+import omit from 'lodash/omit';
 
 import InputField from './inputField';
 import RadioBoolean from './controls/radioBoolean';
@@ -8,7 +9,9 @@ export default class RadioBooleanField extends React.Component {
     return (
       <InputField
         {...this.props}
-        field={({children, onKeyDown, ...fieldProps}) => <RadioBoolean {...fieldProps} />}
+        field={fieldProps => (
+          <RadioBoolean {...omit(fieldProps, ['onKeyDown', 'children'])} />
+        )}
       />
     );
   }
diff --git a/src/sentry/static/sentry/app/views/settings/components/forms/textareaField.jsx b/src/sentry/static/sentry/app/views/settings/components/forms/textareaField.jsx
index ce4d095fdd..994aa2ee56 100644
--- a/src/sentry/static/sentry/app/views/settings/components/forms/textareaField.jsx
+++ b/src/sentry/static/sentry/app/views/settings/components/forms/textareaField.jsx
@@ -1,4 +1,5 @@
 import React from 'react';
+import omit from 'lodash/omit';
 
 import InputField from 'app/views/settings/components/forms/inputField';
 import Textarea from 'app/views/settings/components/forms/controls/textarea';
@@ -8,7 +9,9 @@ export default class TextareaField extends React.Component {
     return (
       <InputField
         {...this.props}
-        field={({children, onKeyDown, ...fieldProps}) => <Textarea {...fieldProps} />}
+        field={fieldProps => (
+          <Textarea {...omit(fieldProps, ['onKeyDown', 'children'])} />
+        )}
       />
     );
   }
diff --git a/src/sentry/static/sentry/app/views/settings/organizationApiKeys/index.jsx b/src/sentry/static/sentry/app/views/settings/organizationApiKeys/index.jsx
index 810ee11c77..8bd6859df2 100644
--- a/src/sentry/static/sentry/app/views/settings/organizationApiKeys/index.jsx
+++ b/src/sentry/static/sentry/app/views/settings/organizationApiKeys/index.jsx
@@ -24,12 +24,12 @@ class OrganizationApiKeys extends AsyncView {
     return `${org.name} API Keys`;
   }
 
-  handleRemove = (id, e) => {
+  handleRemove = id => {
     const api = new Client();
     api.request(`/organizations/${this.props.params.orgId}/api-keys/${id}/`, {
       method: 'DELETE',
       data: {},
-      success: data => {
+      success: () => {
         this.setState(state => ({
           keys: state.keys.filter(({id: existingId}) => existingId !== id),
         }));
diff --git a/src/sentry/static/sentry/app/views/settings/organizationTeams/allTeamsList.jsx b/src/sentry/static/sentry/app/views/settings/organizationTeams/allTeamsList.jsx
index 25ff68c448..04560306b3 100644
--- a/src/sentry/static/sentry/app/views/settings/organizationTeams/allTeamsList.jsx
+++ b/src/sentry/static/sentry/app/views/settings/organizationTeams/allTeamsList.jsx
@@ -37,7 +37,7 @@ class AllTeamsList extends React.Component {
 
   render() {
     const {access, organization, urlPrefix, openMembership, useCreateModal} = this.props;
-    const teamNodes = this.props.teamList.map((team, teamIdx) => (
+    const teamNodes = this.props.teamList.map(team => (
       <AllTeamsRow
         urlPrefix={urlPrefix}
         access={access}
diff --git a/src/sentry/static/sentry/app/views/settings/project/projectTeams.jsx b/src/sentry/static/sentry/app/views/settings/project/projectTeams.jsx
index ef0e670fa3..5c5f24dba0 100644
--- a/src/sentry/static/sentry/app/views/settings/project/projectTeams.jsx
+++ b/src/sentry/static/sentry/app/views/settings/project/projectTeams.jsx
@@ -49,13 +49,13 @@ class ProjectTeams extends AsyncView {
   };
 
   handleRemovedTeam = teamSlug => {
-    this.setState(prevState => ({
+    this.setState(() => ({
       projectTeams: this.state.projectTeams.filter(team => team.slug !== teamSlug),
     }));
   };
 
   handleAddedTeam = team => {
-    this.setState(prevState => ({
+    this.setState(() => ({
       projectTeams: this.state.projectTeams.concat([team]),
     }));
   };
diff --git a/tests/js/sentry-test/fixtures/asana.js b/tests/js/sentry-test/fixtures/asana.js
index e0bd428c94..f1f9ac1ed9 100644
--- a/tests/js/sentry-test/fixtures/asana.js
+++ b/tests/js/sentry-test/fixtures/asana.js
@@ -1,4 +1,4 @@
-function AsanaPlugin(params) {
+function AsanaPlugin() {
   return {
     status: 'unknown',
     description: 'Integrate Asana issues by linking a repository to a project.',
@@ -26,7 +26,7 @@ function AsanaPlugin(params) {
   };
 }
 
-function AsanaCreate(params) {
+function AsanaCreate() {
   return [
     {
       name: 'workspace',
diff --git a/tests/js/sentry-test/fixtures/dashboard.js b/tests/js/sentry-test/fixtures/dashboard.js
index b9f77998c0..95742c7ccb 100644
--- a/tests/js/sentry-test/fixtures/dashboard.js
+++ b/tests/js/sentry-test/fixtures/dashboard.js
@@ -2,7 +2,7 @@ import {Widget} from './widget';
 
 const DEFAULT_WIDGETS = [Widget()];
 
-export function Dashboard(widgets = DEFAULT_WIDGETS, options) {
+export function Dashboard(widgets = DEFAULT_WIDGETS) {
   return {
     widgets,
     title: 'Dashboard',
diff --git a/tests/js/sentry-test/fixtures/events.js b/tests/js/sentry-test/fixtures/events.js
index bb1838bb23..2babd250ca 100644
--- a/tests/js/sentry-test/fixtures/events.js
+++ b/tests/js/sentry-test/fixtures/events.js
@@ -13,7 +13,7 @@ export function Events(params = []) {
   ];
 }
 
-export function EventsStats(query = {}, params) {
+export function EventsStats(_query = {}, params) {
   return {
     data: [
       [new Date(), [{count: 321}, {count: 79}]],
diff --git a/tests/js/sentry-test/fixtures/groupingConfigs.js b/tests/js/sentry-test/fixtures/groupingConfigs.js
index 2db853b9a6..fb34cb9227 100644
--- a/tests/js/sentry-test/fixtures/groupingConfigs.js
+++ b/tests/js/sentry-test/fixtures/groupingConfigs.js
@@ -1,4 +1,4 @@
-export function GroupingConfigs(params) {
+export function GroupingConfigs() {
   return [
     {
       id: 'default:XXXX',
diff --git a/tests/js/sentry-test/fixtures/groupingEnhancements.js b/tests/js/sentry-test/fixtures/groupingEnhancements.js
index acea3f3b7a..160765fdda 100644
--- a/tests/js/sentry-test/fixtures/groupingEnhancements.js
+++ b/tests/js/sentry-test/fixtures/groupingEnhancements.js
@@ -1,4 +1,4 @@
-export function GroupingEnhancements(params) {
+export function GroupingEnhancements() {
   return [
     {
       id: 'default:XXXX',
diff --git a/tests/js/sentry-test/fixtures/integrationListDirectory.js b/tests/js/sentry-test/fixtures/integrationListDirectory.js
index 4098761277..724a63bb23 100644
--- a/tests/js/sentry-test/fixtures/integrationListDirectory.js
+++ b/tests/js/sentry-test/fixtures/integrationListDirectory.js
@@ -1,4 +1,4 @@
-export function ProviderList(params = {}) {
+export function ProviderList() {
   return {
     providers: [
       {
@@ -33,7 +33,7 @@ export function ProviderList(params = {}) {
   };
 }
 
-export function IntegrationConfig(params = {}) {
+export function IntegrationConfig() {
   return [
     {
       accountType: null,
@@ -58,7 +58,7 @@ export function IntegrationConfig(params = {}) {
   ];
 }
 
-export function OrgOwnedApps(params = {}) {
+export function OrgOwnedApps() {
   return [
     {
       allowedOrigins: [],
@@ -122,7 +122,7 @@ export function OrgOwnedApps(params = {}) {
   ];
 }
 
-export function PublishedApps(params = {}) {
+export function PublishedApps() {
   return [
     {
       allowedOrigins: [],
@@ -146,7 +146,7 @@ export function PublishedApps(params = {}) {
   ];
 }
 
-export function SentryAppInstalls(params = {}) {
+export function SentryAppInstalls() {
   return [
     {
       app: {
@@ -161,7 +161,7 @@ export function SentryAppInstalls(params = {}) {
   ];
 }
 
-export function PluginListConfig(params = {}) {
+export function PluginListConfig() {
   return [
     {
       assets: [],
diff --git a/tests/js/sentry-test/fixtures/phabricator.js b/tests/js/sentry-test/fixtures/phabricator.js
index 0a1277880b..b13beade28 100644
--- a/tests/js/sentry-test/fixtures/phabricator.js
+++ b/tests/js/sentry-test/fixtures/phabricator.js
@@ -1,4 +1,4 @@
-function PhabricatorPlugin(params) {
+function PhabricatorPlugin() {
   return {
     status: 'unknown',
     description:
@@ -35,7 +35,7 @@ function PhabricatorPlugin(params) {
   };
 }
 
-function PhabricatorCreate(params) {
+function PhabricatorCreate() {
   return [
     {
       default: 'ApiException: Authentication failed, token expired!',
diff --git a/tests/js/sentry-test/fixtures/updateSdkAndEnableIntegrationSuggestion.jsx b/tests/js/sentry-test/fixtures/updateSdkAndEnableIntegrationSuggestion.jsx
index c038525611..060e5d1220 100644
--- a/tests/js/sentry-test/fixtures/updateSdkAndEnableIntegrationSuggestion.jsx
+++ b/tests/js/sentry-test/fixtures/updateSdkAndEnableIntegrationSuggestion.jsx
@@ -1,4 +1,4 @@
-export function UpdateSdkAndEnableIntegrationSuggestion(params) {
+export function UpdateSdkAndEnableIntegrationSuggestion() {
   return {
     id: '123',
     sdk: {
diff --git a/tests/js/sentry-test/fixtures/vsts-old.js b/tests/js/sentry-test/fixtures/vsts-old.js
index 93ea1647d5..7e23323fca 100644
--- a/tests/js/sentry-test/fixtures/vsts-old.js
+++ b/tests/js/sentry-test/fixtures/vsts-old.js
@@ -1,4 +1,4 @@
-function VstsPlugin(params) {
+function VstsPlugin() {
   return {
     status: 'unknown',
     description: 'Integrate Visual Studio Team Services work items by linking a project.',
@@ -26,7 +26,7 @@ function VstsPlugin(params) {
   };
 }
 
-function VstsCreate(params) {
+function VstsCreate() {
   return [
     {
       name: 'project',
diff --git a/tests/js/setupFramework.js b/tests/js/setupFramework.js
index cbbde5a92a..ae855e4ab1 100644
--- a/tests/js/setupFramework.js
+++ b/tests/js/setupFramework.js
@@ -1,5 +1,5 @@
 /* global process */
-process.on('unhandledRejection', (reason, promise) => {
+process.on('unhandledRejection', reason => {
   // eslint-disable-next-line no-console
   console.error(reason);
 });
diff --git a/tests/js/spec/components/dropdownMenu.spec.jsx b/tests/js/spec/components/dropdownMenu.spec.jsx
index 2799a363c0..fdfe4979e7 100644
--- a/tests/js/spec/components/dropdownMenu.spec.jsx
+++ b/tests/js/spec/components/dropdownMenu.spec.jsx
@@ -178,7 +178,7 @@ describe('DropdownMenu', function() {
 
     wrapper = mount(
       <DropdownMenu alwaysRenderMenu>
-        {({getRootProps, getActorProps, getMenuProps, isOpen}) => (
+        {({getRootProps, getActorProps, getMenuProps}) => (
           <span
             {...getRootProps({
               className: 'root',
diff --git a/tests/js/spec/components/hook.spec.jsx b/tests/js/spec/components/hook.spec.jsx
index d39d165a83..4c885c26bb 100644
--- a/tests/js/spec/components/hook.spec.jsx
+++ b/tests/js/spec/components/hook.spec.jsx
@@ -58,7 +58,7 @@ describe('Hook', function() {
 
     expect(wrapper.find('Wrapper')).toHaveLength(1);
 
-    HookStore.add('footer', ({organization} = {}) => (
+    HookStore.add('footer', () => (
       <Wrapper key="new" organization={null}>
         New Hook
       </Wrapper>
@@ -86,7 +86,7 @@ describe('Hook', function() {
       routerContext
     );
 
-    HookStore.add('footer', ({organization} = {}) => (
+    HookStore.add('footer', () => (
       <Wrapper key="new" organization={null}>
         New Hook
       </Wrapper>
diff --git a/tests/js/spec/components/modals/integrationDetailsModal.spec.jsx b/tests/js/spec/components/modals/integrationDetailsModal.spec.jsx
index da1606d595..b7aadac463 100644
--- a/tests/js/spec/components/modals/integrationDetailsModal.spec.jsx
+++ b/tests/js/spec/components/modals/integrationDetailsModal.spec.jsx
@@ -50,7 +50,7 @@ describe('IntegrationDetailsModal', function() {
 
   it('disables the button via a hookstore IntegrationFeatures component', function() {
     HookStore.add('integrations:feature-gates', () => ({
-      FeatureList: p => null,
+      FeatureList: () => null,
       IntegrationFeatures: p =>
         p.children({
           disabled: true,
diff --git a/tests/js/spec/utils/retryableImport.spec.jsx b/tests/js/spec/utils/retryableImport.spec.jsx
index 9dce5acd1d..f2442497a7 100644
--- a/tests/js/spec/utils/retryableImport.spec.jsx
+++ b/tests/js/spec/utils/retryableImport.spec.jsx
@@ -26,7 +26,7 @@ describe('retryableImport', function() {
     const importMock = jest.fn();
 
     importMock.mockReturnValueOnce(
-      new Promise((resolve, reject) => reject(new Error('Another error happened')))
+      new Promise((_resolve, reject) => reject(new Error('Another error happened')))
     );
 
     try {
@@ -42,10 +42,10 @@ describe('retryableImport', function() {
 
     importMock
       .mockReturnValueOnce(
-        new Promise((resolve, reject) => reject(new Error('Loading chunk 123 failed')))
+        new Promise((_resolve, reject) => reject(new Error('Loading chunk 123 failed')))
       )
       .mockReturnValueOnce(
-        new Promise((resolve, reject) => reject(new Error('Loading chunk 123 failed')))
+        new Promise((_resolve, reject) => reject(new Error('Loading chunk 123 failed')))
       )
       .mockReturnValue(
         new Promise(resolve =>
@@ -68,7 +68,7 @@ describe('retryableImport', function() {
   it('only retries 3 times', async function() {
     const importMock = jest.fn(
       () =>
-        new Promise((resolve, reject) => reject(new Error('Loading chunk 123 failed')))
+        new Promise((_resolve, reject) => reject(new Error('Loading chunk 123 failed')))
     );
 
     await expect(retryableImport(() => importMock())).rejects.toThrow(
diff --git a/tests/js/spec/views/onboarding/platform.spec.jsx b/tests/js/spec/views/onboarding/platform.spec.jsx
index db2004fa93..20bd658291 100644
--- a/tests/js/spec/views/onboarding/platform.spec.jsx
+++ b/tests/js/spec/views/onboarding/platform.spec.jsx
@@ -65,7 +65,7 @@ describe('OnboardingWelcome', function() {
 
     let resolveProjectCreate;
     createProject.mockReturnValue(
-      new Promise((resolve, reject) => (resolveProjectCreate = resolve))
+      new Promise(resolve => (resolveProjectCreate = resolve))
     );
 
     // Create the project
diff --git a/tests/js/spec/views/projectFilters.spec.jsx b/tests/js/spec/views/projectFilters.spec.jsx
index 558f2c5fb8..fd3851dec3 100644
--- a/tests/js/spec/views/projectFilters.spec.jsx
+++ b/tests/js/spec/views/projectFilters.spec.jsx
@@ -79,7 +79,7 @@ describe('ProjectFilters', function() {
   });
 
   it('can toggle filters: localhost, web crawlers', function() {
-    ['localhost', 'web-crawlers'].map((filter, i) => {
+    ['localhost', 'web-crawlers'].map(filter => {
       const mock = createFilterMock(filter);
       const Switch = wrapper.find(`BooleanField[name="${filter}"] Switch`);
 
