commit 423b2667e2575fe25b4059719ae2eb15ca8ae195
Author: David Cramer <dcramer@gmail.com>
Date:   Sun May 25 20:26:20 2014 -0700

    Add project release list endpoint

diff --git a/src/sentry/api/endpoints/project_releases.py b/src/sentry/api/endpoints/project_releases.py
new file mode 100644
index 0000000000..def6df0885
--- /dev/null
+++ b/src/sentry/api/endpoints/project_releases.py
@@ -0,0 +1,24 @@
+from sentry.api.base import Endpoint
+from sentry.api.permissions import assert_perm
+from sentry.api.serializers import serialize
+from sentry.models import Project, Release
+
+
+class ProjectReleasesEndpoint(Endpoint):
+    def get(self, request, project_id):
+        project = Project.objects.get(
+            id=project_id,
+        )
+
+        assert_perm(project, request.user, request.auth)
+
+        queryset = Release.objects.filter(
+            project=project,
+        ).order_by('-date_added')
+
+        return self.paginate(
+            request=request,
+            queryset=queryset,
+            order_by='-date_added',
+            on_results=lambda x: serialize(x, request.user),
+        )
diff --git a/src/sentry/api/serializers/models/release.py b/src/sentry/api/serializers/models/release.py
new file mode 100644
index 0000000000..01f21ecee6
--- /dev/null
+++ b/src/sentry/api/serializers/models/release.py
@@ -0,0 +1,13 @@
+from sentry.api.serializers import Serializer, register
+from sentry.models import Release
+
+
+@register(Release)
+class ReleaseSerializer(Serializer):
+    def serialize(self, obj, user):
+        d = {
+            'id': str(obj.id),
+            'version': obj.version,
+            'dateCreated': obj.date_added,
+        }
+        return d
diff --git a/src/sentry/api/urls.py b/src/sentry/api/urls.py
index b9848545aa..c64a235bac 100644
--- a/src/sentry/api/urls.py
+++ b/src/sentry/api/urls.py
@@ -17,6 +17,7 @@ from .endpoints.group_tags import GroupTagsEndpoint
 from .endpoints.project_details import ProjectDetailsEndpoint
 from .endpoints.project_index import ProjectIndexEndpoint
 from .endpoints.project_group_index import ProjectGroupIndexEndpoint
+from .endpoints.project_releases import ProjectReleasesEndpoint
 from .endpoints.project_stats import ProjectStatsEndpoint
 from .endpoints.team_details import TeamDetailsEndpoint
 from .endpoints.team_index import TeamIndexEndpoint
@@ -70,6 +71,9 @@ urlpatterns = patterns(
     url(r'^projects/(?P<project_id>\d+)/groups/$',
         ProjectGroupIndexEndpoint.as_view(),
         name='sentry-api-0-project-group-index'),
+    url(r'^projects/(?P<project_id>\d+)/releases/$',
+        ProjectReleasesEndpoint.as_view(),
+        name='sentry-api-0-project-releases'),
     url(r'^projects/(?P<project_id>\d+)/stats/$',
         ProjectStatsEndpoint.as_view(),
         name='sentry-api-0-project-stats'),
diff --git a/tests/sentry/api/endpoints/test_project_releases.py b/tests/sentry/api/endpoints/test_project_releases.py
new file mode 100644
index 0000000000..828c68ca3a
--- /dev/null
+++ b/tests/sentry/api/endpoints/test_project_releases.py
@@ -0,0 +1,38 @@
+from datetime import datetime
+from django.core.urlresolvers import reverse
+
+from sentry.models import Release
+from sentry.testutils import APITestCase
+
+
+class ProjectReleasesTest(APITestCase):
+    def test_simple(self):
+        self.login_as(user=self.user)
+
+        project1 = self.create_project(owner=self.user, name='foo')
+        project2 = self.create_project(owner=self.user, name='bar')
+
+        release1 = Release.objects.create(
+            project=project1,
+            version='1',
+            date_added=datetime(2013, 8, 13, 3, 8, 24, 880386),
+        )
+        release2 = Release.objects.create(
+            project=project1,
+            version='2',
+            date_added=datetime(2013, 8, 14, 3, 8, 24, 880386),
+        )
+        Release.objects.create(
+            project=project2,
+            version='1',
+        )
+
+        url = reverse('sentry-api-0-project-releases', kwargs={
+            'project_id': project1.id,
+        })
+        response = self.client.get(url, format='json')
+
+        assert response.status_code == 200, response.content
+        assert len(response.data) == 2
+        assert response.data[0]['id'] == str(release2.id)
+        assert response.data[1]['id'] == str(release1.id)
