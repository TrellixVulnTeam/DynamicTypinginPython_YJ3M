commit 5a8db54b252ff4fd21bb40b9f679c88e088a8a8b
Author: Megan Heskett <meg.heskett@gmail.com>
Date:   Wed Aug 7 14:09:05 2019 -0700

    ref(ui): Remove error robot from projects page (#14298)

diff --git a/src/sentry/static/sentry/app/components/resourceCard.jsx b/src/sentry/static/sentry/app/components/resourceCard.jsx
index 30f4d60114..1db4ebe5fc 100644
--- a/src/sentry/static/sentry/app/components/resourceCard.jsx
+++ b/src/sentry/static/sentry/app/components/resourceCard.jsx
@@ -5,6 +5,7 @@ import styled from 'react-emotion';
 import {analytics} from 'app/utils/analytics';
 import ExternalLink from 'app/components/links/externalLink';
 import {Panel} from 'app/components/panels';
+import space from 'app/styles/space';
 
 export default class ResourceCard extends React.Component {
   static propTypes = {
@@ -24,9 +25,7 @@ export default class ResourceCard extends React.Component {
     return (
       <ResourceCardWrapper onClick={this.recordClick}>
         <StyledLink href={link}>
-          <div className="m-b-1">
-            <img src={imgUrl} alt={title} />
-          </div>
+          <StyledImg src={imgUrl} alt={title} />
           <StyledTitle>{title}</StyledTitle>
         </StyledLink>
       </ResourceCardWrapper>
@@ -34,21 +33,27 @@ export default class ResourceCard extends React.Component {
   }
 }
 
-const StyledTitle = styled('div')`
-  color: #493e54;
-  font-size: 16px;
-  text-align: center;
-  font-weight: bold;
-`;
-
 const ResourceCardWrapper = styled(Panel)`
   display: flex;
   flex: 1;
   align-items: center;
-  padding: 20px;
+  padding: ${space(3)};
   margin-bottom: 0;
 `;
 
 const StyledLink = styled(ExternalLink)`
   flex: 1;
 `;
+
+const StyledImg = styled('img')`
+  display: block;
+  margin: 0 auto ${space(3)} auto;
+  height: 160px;
+`;
+
+const StyledTitle = styled('div')`
+  color: ${p => p.theme.gray4};
+  font-size: ${p => p.theme.fontSizeLarge};
+  text-align: center;
+  font-weight: bold;
+`;
diff --git a/src/sentry/static/sentry/app/views/projectsDashboard/index.jsx b/src/sentry/static/sentry/app/views/projectsDashboard/index.jsx
index f4d16cfa1e..71dd8e4daf 100644
--- a/src/sentry/static/sentry/app/views/projectsDashboard/index.jsx
+++ b/src/sentry/static/sentry/app/views/projectsDashboard/index.jsx
@@ -49,18 +49,20 @@ class Dashboard extends React.Component {
     const sortedProjects = sortProjects(projects);
 
     const {isSuperuser} = ConfigStore.get('user');
-
     const {projectsByTeam} = getProjectsByTeams(teams, sortedProjects, isSuperuser);
     const teamSlugs = Object.keys(projectsByTeam).sort();
     const favorites = projects.filter(project => project.isBookmarked);
+
     const access = new Set(organization.access);
     const canCreateProjects = access.has('project:admin');
     const teamsMap = new Map(teams.map(teamObj => [teamObj.slug, teamObj]));
-
     const hasTeamAdminAccess = access.has('team:admin');
 
-    if (projects.length === 1 && !projects[0].firstEvent) {
-      return <Resources org={organization} project={projects[0]} />;
+    const showEmptyMessage = teamSlugs.length === 0 && favorites.length === 0;
+    const showResources = projects.length === 1 && !projects[0].firstEvent;
+
+    if (showEmptyMessage) {
+      return <NoProjectMessage organization={organization}>{null}</NoProjectMessage>;
     }
 
     return (
@@ -78,6 +80,7 @@ class Dashboard extends React.Component {
               }
               to={`/organizations/${organization.slug}/projects/new/`}
               icon="icon-circle-add"
+              data-test-id="create-project"
             >
               {t('Create Project')}
             </Button>
@@ -108,9 +111,8 @@ class Dashboard extends React.Component {
             </LazyLoad>
           );
         })}
-        {teamSlugs.length === 0 && favorites.length === 0 && (
-          <NoProjectMessage organization={organization}>{null}</NoProjectMessage>
-        )}
+
+        {showResources && <Resources />}
       </React.Fragment>
     );
   }
diff --git a/src/sentry/static/sentry/app/views/projectsDashboard/resources.jsx b/src/sentry/static/sentry/app/views/projectsDashboard/resources.jsx
index 16c1ef8032..9f30d5b904 100644
--- a/src/sentry/static/sentry/app/views/projectsDashboard/resources.jsx
+++ b/src/sentry/static/sentry/app/views/projectsDashboard/resources.jsx
@@ -1,12 +1,10 @@
 import React from 'react';
-import {Flex} from 'grid-emotion';
 import styled from 'react-emotion';
 
 import {analytics} from 'app/utils/analytics';
+import PageHeading from 'app/components/pageHeading';
 import ResourceCard from 'app/components/resourceCard';
-import SentryTypes from 'app/sentryTypes';
-import ErrorRobot from 'app/components/errorRobot';
-import {Panel} from 'app/components/panels';
+import space from 'app/styles/space';
 import {t} from 'app/locale';
 
 import releasesImg from '../../../images/releases.svg';
@@ -14,47 +12,31 @@ import breadcrumbsImg from '../../../images/breadcrumbs-generic.svg';
 import docsImg from '../../../images/code-arguments-tags-mirrored.svg';
 
 export default class Resources extends React.Component {
-  static propTypes = {
-    org: SentryTypes.Organization,
-    project: SentryTypes.Project,
-  };
-
   componentDidMount() {
     analytics('orgdash.resources_shown');
   }
 
   render() {
     return (
-      <ResourcesWrapper>
-        <RobotPanel>
-          <ErrorRobot org={this.props.org} project={this.props.project} />
-        </RobotPanel>
-        <ResourcesSection>
-          <h4>{t('Resources')}</h4>
-          <Flex justify="space-between">
-            <Flex width={3 / 10}>
-              <ResourceCard
-                link="https://blog.sentry.io/2018/03/06/the-sentry-workflow"
-                imgUrl={releasesImg}
-                title="The Sentry Workflow"
-              />
-            </Flex>
-            <Flex width={3 / 10}>
-              <ResourceCard
-                link="https://sentry.io/vs/logging/"
-                imgUrl={breadcrumbsImg}
-                title="Sentry vs Logging"
-              />
-            </Flex>
-            <Flex width={3 / 10}>
-              <ResourceCard
-                link="https://docs.sentry.io/"
-                imgUrl={docsImg}
-                title="Docs"
-              />
-            </Flex>
-          </Flex>
-        </ResourcesSection>
+      <ResourcesWrapper data-test-id="resources">
+        <PageHeading>{t('Resources')}</PageHeading>
+        <ResourceCards>
+          <ResourceCard
+            link="https://blog.sentry.io/2018/03/06/the-sentry-workflow"
+            imgUrl={releasesImg}
+            title={t('The Sentry Workflow')}
+          />
+          <ResourceCard
+            link="https://sentry.io/vs/logging/"
+            imgUrl={breadcrumbsImg}
+            title={t('Sentry vs Logging')}
+          />
+          <ResourceCard
+            link="https://docs.sentry.io/"
+            imgUrl={docsImg}
+            title={t('Docs')}
+          />
+        </ResourceCards>
       </ResourcesWrapper>
     );
   }
@@ -62,12 +44,12 @@ export default class Resources extends React.Component {
 
 const ResourcesWrapper = styled('div')`
   border-top: 1px solid ${p => p.theme.borderLight};
+  padding: 25px 30px 10px 30px;
 `;
 
-const RobotPanel = styled(Panel)`
-  margin: 30px 30px 20px 30px;
-`;
-
-const ResourcesSection = styled('div')`
-  padding: 0 30px 20px 30px;
+const ResourceCards = styled('div')`
+  display: grid;
+  grid-template-columns: repeat(3, auto);
+  grid-gap: ${space(4)};
+  margin-top: ${space(3)};
 `;
diff --git a/tests/acceptance/test_dashboard.py b/tests/acceptance/test_dashboard.py
index 637aa03abf..df98824a5d 100644
--- a/tests/acceptance/test_dashboard.py
+++ b/tests/acceptance/test_dashboard.py
@@ -56,13 +56,13 @@ class DashboardTest(AcceptanceTestCase, SnubaTestCase):
         self.login_as(self.user)
         self.path = u'/organizations/{}/projects/'.format(self.org.slug)
 
-    def test_no_issues(self):
-        # I think no "activity" would be more accurate?
+    def test_project_with_no_first_event(self):
         self.project.update(first_event=None)
         self.browser.get(self.path)
         self.browser.wait_until_not('.loading-indicator')
-        self.browser.wait_until_test_id('awaiting-events')
-        self.browser.snapshot('org dash no issues')
+        self.browser.wait_until_test_id('resources')
+        self.browser.wait_until('[data-test-id] figure')
+        self.browser.snapshot('org dash no first event')
 
     def test_one_issue(self):
         self.init_snuba()
diff --git a/tests/js/spec/views/projectsDashboard/index.spec.jsx b/tests/js/spec/views/projectsDashboard/index.spec.jsx
index e55ce4bbeb..45f67e7f04 100644
--- a/tests/js/spec/views/projectsDashboard/index.spec.jsx
+++ b/tests/js/spec/views/projectsDashboard/index.spec.jsx
@@ -26,18 +26,17 @@ jest.mock('lodash/debounce', () => {
 });
 
 describe('OrganizationDashboard', function() {
-  const routerContext = TestStubs.routerContext();
-  routerContext.context.router = {
-    ...routerContext.context.router,
-    params: {
-      orgId: 'org-slug',
-    },
-  };
-  const teams = [TestStubs.Team()];
+  const org = TestStubs.Organization();
+  const routerContext = TestStubs.routerContext([
+    {router: TestStubs.router({params: {orgId: org.slug}})},
+  ]);
+
+  const team = TestStubs.Team();
+  const teams = [team];
 
   beforeEach(function() {
     MockApiClient.addMockResponse({
-      url: '/teams/org-slug/team-slug/members/',
+      url: `/teams/${org.slug}/${team.slug}/members/`,
       body: [],
     });
     ProjectsStatsStore.reset();
@@ -48,53 +47,42 @@ describe('OrganizationDashboard', function() {
   });
 
   describe('empty state', function() {
-    beforeEach(function() {});
-
     it('renders with no projects', function() {
-      const projects = [];
-
-      const wrapper = shallow(
+      const wrapper = mount(
         <Dashboard
           teams={teams}
-          projects={projects}
-          organization={TestStubs.Organization()}
-          params={{orgId: 'org-slug'}}
+          projects={[]}
+          organization={org}
+          params={{orgId: org.slug}}
         />,
-        TestStubs.routerContext()
+        routerContext
       );
-      const emptyState = wrapper.find('NoProjectMessage');
-      expect(emptyState).toHaveLength(1);
+
+      expect(wrapper.find('Button[data-test-id="create-project"]').exists()).toBe(false);
+      expect(wrapper.find('NoProjectMessage').exists()).toBe(true);
     });
 
     it('renders with 1 project, with no first event', function() {
-      MockApiClient.addMockResponse({
-        url: '/projects/org-slug/project-slug/issues/',
-        body: [{id: 'sampleIssueId'}],
-      });
-      const projects = [TestStubs.Project()];
+      const projects = [TestStubs.Project({teams})];
 
       const wrapper = mount(
         <Dashboard
           teams={teams}
           projects={projects}
-          organization={TestStubs.Organization()}
-          params={{orgId: 'org-slug'}}
+          organization={org}
+          params={{orgId: org.slug}}
         />,
-        TestStubs.routerContext()
+        routerContext
       );
-      const emptyState = wrapper.find('ErrorRobot');
-      expect(emptyState).toHaveLength(1);
 
-      expect(
-        wrapper.find('Link[to="/org-slug/project-slug/issues/sampleIssueId/?sample"]')
-      ).toHaveLength(1);
+      expect(wrapper.find('Button[data-test-id="create-project"]').exists()).toBe(true);
+      expect(wrapper.find('TeamSection').exists()).toBe(true);
+      expect(wrapper.find('Resources').exists()).toBe(true);
     });
   });
 
   describe('with projects', function() {
-    beforeEach(function() {});
-
-    it('renders TeamSection', function() {
+    it('renders TeamSection with two projects', function() {
       const projects = [
         TestStubs.Project({
           teams,
@@ -112,15 +100,16 @@ describe('OrganizationDashboard', function() {
         <Dashboard
           teams={teams}
           projects={projects}
-          organization={TestStubs.Organization()}
-          params={{orgId: 'org-slug'}}
+          organization={org}
+          params={{orgId: org.slug}}
         />,
-        TestStubs.routerContext()
+        routerContext
       );
-      const emptyState = wrapper.find('NoProjectMessage');
-      const teamSection = wrapper.find('TeamSection');
-      expect(emptyState).toHaveLength(0);
-      expect(teamSection).toHaveLength(1);
+
+      expect(wrapper.find('Button[data-test-id="create-project"]').exists()).toBe(true);
+      expect(wrapper.find('NoProjectMessage').exists()).toBe(false);
+      expect(wrapper.find('TeamSection').exists()).toBe(true);
+      expect(wrapper.find('Resources').exists()).toBe(false);
     });
 
     it('renders bookmarked projects first in team list', function() {
@@ -169,10 +158,10 @@ describe('OrganizationDashboard', function() {
         }),
       ];
       MockApiClient.addMockResponse({
-        url: '/organizations/org-slug/projects/',
+        url: `/organizations/${org.slug}/projects/`,
         body: [
           TestStubs.Project({
-            teams: [TestStubs.Team()],
+            teams,
             stats: [[1517281200, 2], [1517310000, 1]],
           }),
         ],
@@ -183,8 +172,8 @@ describe('OrganizationDashboard', function() {
         <Dashboard
           teams={teams}
           projects={projects}
-          organization={TestStubs.Organization()}
-          params={{orgId: 'org-slug'}}
+          organization={org}
+          params={{orgId: org.slug}}
         />,
         routerContext
       );
@@ -247,7 +236,7 @@ describe('OrganizationDashboard', function() {
       ProjectsStatsStore.onStatsLoadSuccess([{...projects[0], stats: [[1517281200, 2]]}]);
       const loadStatsSpy = jest.spyOn(projectsActions, 'loadStatsForProject');
       const mock = MockApiClient.addMockResponse({
-        url: '/organizations/org-slug/projects/',
+        url: `/organizations/${org.slug}/projects/`,
         body: projects.map(project => ({
           ...project,
           stats: [[1517281200, 2], [1517310000, 1]],
@@ -258,8 +247,8 @@ describe('OrganizationDashboard', function() {
         <Dashboard
           teams={teams}
           projects={projects}
-          organization={TestStubs.Organization()}
-          params={{orgId: 'org-slug'}}
+          organization={org}
+          params={{orgId: org.slug}}
         />,
         routerContext
       );
