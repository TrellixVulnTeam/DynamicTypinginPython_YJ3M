commit 7c4fd7b2ce54e772ed6bfd3debfaf7eda5ce12d1
Author: David Cramer <dcramer@gmail.com>
Date:   Mon Oct 28 21:19:51 2013 -0700

    Add test for update group

diff --git a/src/sentry/api/endpoints/group_details.py b/src/sentry/api/endpoints/group_details.py
index 3cbbaced15..0be3529659 100644
--- a/src/sentry/api/endpoints/group_details.py
+++ b/src/sentry/api/endpoints/group_details.py
@@ -46,11 +46,7 @@ class GroupSerializer(serializers.ModelSerializer):
 
     class Meta:
         model = Group
-        fields = ('id', 'status')
-
-    def save(self):
-        print self.data
-        return super(GroupSerializer, self).save()
+        fields = ('status',)
 
 
 class GroupDetailsView(BaseView):
diff --git a/src/sentry/testutils.py b/src/sentry/testutils.py
index e45d5a472c..fa087187a7 100644
--- a/src/sentry/testutils.py
+++ b/src/sentry/testutils.py
@@ -142,7 +142,7 @@ class BaseTestCase(Exam):
         )
 
     def create_group(self, project=None, **kwargs):
-        Group.objects.create(
+        return Group.objects.create(
             message='Foo bar',
             project=project or self.project,
             **kwargs
diff --git a/tests/sentry/api/endpoints/test_group_details.py b/tests/sentry/api/endpoints/test_group_details.py
index e69de29bb2..3c5f707555 100644
--- a/tests/sentry/api/endpoints/test_group_details.py
+++ b/tests/sentry/api/endpoints/test_group_details.py
@@ -0,0 +1,27 @@
+from django.core.urlresolvers import reverse
+from rest_framework.test import APITestCase
+from sentry.constants import STATUS_RESOLVED
+from sentry.models import Group
+from sentry.testutils import BaseTestCase
+
+
+class GroupUpdateTest(BaseTestCase, APITestCase):
+    def test_simple(self):
+        self.client.force_authenticate(user=self.user)
+
+        group = self.create_group()
+
+        url = reverse('sentry-api-0-group-details', kwargs={
+            'project_id': self.project.slug,
+            'team_slug': self.team.slug,
+            'group_id': group.id,
+        })
+        response = self.client.put(url, data={
+            'status': 'resolved',
+        }, format='json')
+
+        assert response.status_code == 200, response.content
+
+        group = Group.objects.get(id=group.id)
+
+        assert group.status == STATUS_RESOLVED
