commit 876d16489385c3fe7320e71b2a441c3355d50c90
Author: David Cramer <dcramer@gmail.com>
Date:   Wed Mar 21 21:19:08 2012 -0700

    Move new project test

diff --git a/tests/sentry/web/frontend/projects/__init__.py b/tests/sentry/web/frontend/projects/__init__.py
new file mode 100644
index 0000000000..e69de29bb2
diff --git a/tests/sentry/web/frontend/projects/tests.py b/tests/sentry/web/frontend/projects/tests.py
new file mode 100644
index 0000000000..460df4f72a
--- /dev/null
+++ b/tests/sentry/web/frontend/projects/tests.py
@@ -0,0 +1,54 @@
+# -*- coding: utf-8 -*-
+
+from __future__ import absolute_import
+
+import logging
+
+from django.conf import settings as django_settings
+from django.contrib.auth.models import User
+from django.core.urlresolvers import reverse
+
+from sentry.models import Group, Project, ProjectMember, \
+  MEMBER_OWNER, MEMBER_USER
+from sentry.web.helpers import get_login_url
+
+from tests.base import TestCase
+
+logger = logging.getLogger(__name__)
+
+
+class NewProjectTest(TestCase):
+    fixtures = ['tests/fixtures/views.json']
+
+    def setUp(self):
+        self.user = User(username="admin", email="admin@localhost", is_staff=True, is_superuser=True)
+        self.user.set_password('admin')
+        self.user.save()
+
+    def test_new_project(self):
+        self.client.login(username='admin', password='admin')
+
+        # missing name
+        path = reverse('sentry-new-project')
+        resp = self.client.post(path, {})
+        self.assertEquals(resp.status_code, 200)
+
+        # valid params
+        path = reverse('sentry-new-project')
+        resp = self.client.post(path, {
+            'name': 'Test Project',
+        })
+        self.assertNotEquals(resp.status_code, 200)
+
+        project = Project.objects.filter(name='Test Project')
+        self.assertTrue(project.exists())
+        project = project.get()
+
+        self.assertEquals(project.owner, self.user)
+
+        member_set = list(project.member_set.all())
+
+        self.assertEquals(len(member_set), 1)
+        member = member_set[0]
+        self.assertEquals(member.user, self.user)
+        self.assertEquals(member.type, MEMBER_OWNER)
diff --git a/tests/sentry/web/frontend/tests.py b/tests/sentry/web/frontend/tests.py
index bf72ae38d4..f94487cbc4 100644
--- a/tests/sentry/web/frontend/tests.py
+++ b/tests/sentry/web/frontend/tests.py
@@ -148,34 +148,6 @@ class SentryViewsTest(TestCase):
         # self.assertEquals(resp.status_code, 200)
         # self.assertTemplateUsed(resp, 'sentry/events/replay.html')
 
-    def test_new_project(self):
-        self.client.login(username='admin', password='admin')
-
-        # missing name
-        path = reverse('sentry-new-project')
-        resp = self.client.post(path, {})
-        self.assertEquals(resp.status_code, 200)
-
-        # valid params
-        path = reverse('sentry-new-project')
-        resp = self.client.post(path, {
-            'name': 'Test Project',
-        })
-        self.assertNotEquals(resp.status_code, 200)
-
-        project = Project.objects.filter(name='Test Project')
-        self.assertTrue(project.exists())
-        project = project.get()
-
-        self.assertEquals(project.owner, self.user)
-
-        member_set = list(project.member_set.all())
-
-        self.assertEquals(len(member_set), 1)
-        member = member_set[0]
-        self.assertEquals(member.user, self.user)
-        self.assertEquals(member.type, MEMBER_OWNER)
-
 
 class ViewPermissionTest(TestCase):
     """
