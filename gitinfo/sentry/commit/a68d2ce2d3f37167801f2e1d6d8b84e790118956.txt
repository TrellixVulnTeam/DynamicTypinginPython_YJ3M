commit a68d2ce2d3f37167801f2e1d6d8b84e790118956
Author: Jan Michael Auer <account@jauer.org>
Date:   Thu Aug 16 18:37:14 2018 +0200

    fix(attachments): Ensure attachment files are deleted (#9402)

diff --git a/src/sentry/models/eventattachment.py b/src/sentry/models/eventattachment.py
index 49fda0b0b3..ab9fabac8f 100644
--- a/src/sentry/models/eventattachment.py
+++ b/src/sentry/models/eventattachment.py
@@ -23,3 +23,7 @@ class EventAttachment(Model):
         unique_together = (('project_id', 'event_id', 'file'),)
 
     __repr__ = sane_repr('event_id', 'name', 'file_id')
+
+    def delete(self, *args, **kwargs):
+        super(EventAttachment, self).delete(*args, **kwargs)
+        self.file.delete()
diff --git a/src/sentry/testutils/fixtures.py b/src/sentry/testutils/fixtures.py
index f75a9c0f44..abab9fa176 100644
--- a/src/sentry/testutils/fixtures.py
+++ b/src/sentry/testutils/fixtures.py
@@ -27,7 +27,7 @@ from uuid import uuid4
 from sentry.models import (
     Activity, Environment, Event, EventError, EventMapping, Group, Organization, OrganizationMember,
     OrganizationMemberTeam, Project, Team, User, UserEmail, Release, Commit, ReleaseCommit,
-    CommitAuthor, Repository, CommitFileChange, ProjectDSymFile, File, UserPermission
+    CommitAuthor, Repository, CommitFileChange, ProjectDSymFile, File, UserPermission, EventAttachment
 )
 from sentry.utils.canonical import CanonicalKeyDict
 
@@ -621,6 +621,26 @@ class Fixtures(object):
     def create_file(self, **kwargs):
         return File.objects.create(**kwargs)
 
+    def create_event_attachment(self, event=None, file=None, **kwargs):
+        if event is None:
+            event = self.event
+
+        if file is None:
+            file = self.create_file(
+                name='log.txt',
+                size=32,
+                headers={'Content-Type': 'text/plain'},
+                checksum='dc1e3f3e411979d336c3057cce64294f3420f93a',
+            )
+
+        return EventAttachment.objects.create(
+            project_id=event.project_id,
+            group_id=event.group_id,
+            event_id=event.event_id,
+            file=file,
+            **kwargs
+        )
+
     def create_dsym_file(self, project=None, **kwargs):
         if project is None:
             project = self.project
diff --git a/tests/sentry/lang/native/test_plugin.py b/tests/sentry/lang/native/test_plugin.py
index 72611ff81e..3319e40915 100644
--- a/tests/sentry/lang/native/test_plugin.py
+++ b/tests/sentry/lang/native/test_plugin.py
@@ -1600,3 +1600,22 @@ class MinidumpIntegrationTest(TestCase):
         event = Event.objects.get()
         attachments = list(EventAttachment.objects.filter(event_id=event.event_id))
         assert attachments == []
+
+    def test_attachment_deletion(self):
+        event = self.create_event(
+            event_id='a' * 32,
+            message='Minidump test event',
+        )
+
+        attachment = self.create_event_attachment(event=event, name='log.txt')
+        file = attachment.file
+
+        self.login_as(self.user)
+        with self.tasks():
+            url = '/api/0/issues/{}/'.format(event.group_id)
+            response = self.client.delete(url)
+
+        assert response.status_code == 202
+        assert not Event.objects.filter(event_id=event.event_id).exists()
+        assert not EventAttachment.objects.filter(event_id=event.event_id).exists()
+        assert not File.objects.filter(id=file.id).exists()
