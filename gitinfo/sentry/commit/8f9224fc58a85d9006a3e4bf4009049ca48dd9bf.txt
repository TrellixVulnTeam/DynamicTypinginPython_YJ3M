commit 8f9224fc58a85d9006a3e4bf4009049ca48dd9bf
Author: David Cramer <dcramer@gmail.com>
Date:   Sat Mar 24 13:35:16 2012 -0700

    Handle multi-line messages and error truncation in mail subjects (fixes GH-391)

diff --git a/sentry/plugins/sentry_mail/__init__.py b/sentry/plugins/sentry_mail/__init__.py
index 3073726bc4..ca939caefd 100644
--- a/sentry/plugins/sentry_mail/__init__.py
+++ b/sentry/plugins/sentry_mail/__init__.py
@@ -114,7 +114,7 @@ class MailProcessor(NotifyPlugin):
                 continue
             interface_list.append((interface.get_title(), body))
 
-        subject = '[%s] %s: %s' % (project.name.encode('utf-8'), event.get_level_display().upper(), event.message.encode('utf-8'))
+        subject = '[%s] %s: %s' % (project.name.encode('utf-8'), event.get_level_display().upper(), event.error().encode('utf-8').split('\n')[0])
 
         link = '%s/%d/group/%d/' % (settings.URL_PREFIX, group.project_id, group.id)
 
diff --git a/tests/sentry/plugins/mail/tests.py b/tests/sentry/plugins/mail/tests.py
index a6e8fd3365..cd2067cf45 100644
--- a/tests/sentry/plugins/mail/tests.py
+++ b/tests/sentry/plugins/mail/tests.py
@@ -125,6 +125,31 @@ class MailProcessorTest(TestCase):
         self.assertEquals(kwargs.get('project'), project)
         self.assertEquals(kwargs.get('subject'), u"[Project Name] ERROR: hello world")
 
+    @mock.patch('sentry.plugins.sentry_mail.MailProcessor._send_mail')
+    def test_multiline_error(self, _send_mail):
+        project = Project(id=1, name='Project Name')
+
+        group = Mock(spec=Group)
+        group.first_seen = datetime.datetime.now()
+        group.project_id = project.id
+        group.project = project
+        group.id = 2
+
+        event = Event()
+        event.message = 'hello world\nfoo bar'
+        event.logger = 'root'
+        event.site = None
+        event.project_id = project.id
+        event.project = project
+
+        with self.Settings(SENTRY_URL_PREFIX='http://example.com'):
+            p = MailProcessor(send_to=['foo@example.com'])
+            p.notify_users(group, event)
+
+        _send_mail.assert_called_once()
+        args, kwargs = _send_mail.call_args
+        self.assertEquals(kwargs.get('subject'), u"[Project Name] ERROR: hello world")
+
     def test_send_to(self):
         Mock = mock.Mock
         with mock.patch('sentry.models.ProjectOption.objects.get_value') as get_value:
