commit 286c84c151b679c3c685b4fd959c3d24ba21bc38
Author: David Cramer <dcramer@gmail.com>
Date:   Wed Jun 24 18:09:22 2015 -0700

    Prevent deletion of default organization (single org mode)

diff --git a/src/sentry/api/endpoints/organization_details.py b/src/sentry/api/endpoints/organization_details.py
index a1c7dbe049..2de0614a84 100644
--- a/src/sentry/api/endpoints/organization_details.py
+++ b/src/sentry/api/endpoints/organization_details.py
@@ -17,6 +17,9 @@ from sentry.models import (
 from sentry.tasks.deletion import delete_organization
 
 
+ERR_DEFAULT_ORG = 'You cannot remove the default organization.'
+
+
 class OrganizationSerializer(serializers.ModelSerializer):
     class Meta:
         model = Organization
@@ -105,6 +108,9 @@ class OrganizationDetailsEndpoint(OrganizationEndpoint):
         However once deletion has begun the state of a project changes and will
         be hidden from most public views.
         """
+        if organization.is_default:
+            return Response({'detail': ERR_DEFAULT_ORG}, status=400)
+
         updated = Organization.objects.filter(
             id=organization.id,
             status=OrganizationStatus.VISIBLE,
diff --git a/src/sentry/models/organization.py b/src/sentry/models/organization.py
index 9a282c49b8..d5aa2a9bcf 100644
--- a/src/sentry/models/organization.py
+++ b/src/sentry/models/organization.py
@@ -11,6 +11,7 @@ from bitfield import BitField
 from django.conf import settings
 from django.db import models
 from django.utils import timezone
+from django.utils.functional import cached_property
 from django.utils.translation import ugettext_lazy as _
 
 from sentry.constants import RESERVED_ORGANIZATION_SLUGS
@@ -120,6 +121,13 @@ class Organization(Model):
             slugify_instance(self, self.name, reserved=RESERVED_ORGANIZATION_SLUGS)
         super(Organization, self).save(*args, **kwargs)
 
+    @cached_property
+    def is_default(self):
+        if not settings.SENTRY_SINGLE_ORGANIZATION:
+            return False
+
+        return self == type(self).get_default()
+
     def has_access(self, user, access=None):
         queryset = self.member_set.filter(user=user)
         if access is not None:
diff --git a/src/sentry/templates/sentry/organization-settings.html b/src/sentry/templates/sentry/organization-settings.html
index b737a9c27b..c107c13688 100644
--- a/src/sentry/templates/sentry/organization-settings.html
+++ b/src/sentry/templates/sentry/organization-settings.html
@@ -26,7 +26,7 @@
     </fieldset>
 
     <fieldset class="form-actions">
-      {% if ACCESS.org_delete %}
+      {% if ACCESS.org_delete and not org.is_default %}
         <a href="{% url 'sentry-remove-organization' organization.slug %}" class="btn btn-danger">{% trans "Remove Organization" %}</a>
       {% endif %}
       <button type="submit" class="btn btn-primary">{% trans "Save Changes" %}</button>
diff --git a/src/sentry/web/frontend/remove_organization.py b/src/sentry/web/frontend/remove_organization.py
index a37f37475f..c8c9e021bd 100644
--- a/src/sentry/web/frontend/remove_organization.py
+++ b/src/sentry/web/frontend/remove_organization.py
@@ -9,6 +9,7 @@ from sentry.models import OrganizationMemberType, OrganizationStatus
 from sentry.tasks.deletion import delete_organization
 from sentry.web.frontend.base import OrganizationView
 
+ERR_DEFAULT_ORG = _('You cannot remove the default organization.')
 
 MSG_REMOVE_SUCCESS = _('The %s organization has been scheduled for removal.')
 
@@ -27,6 +28,12 @@ class RemoveOrganizationView(OrganizationView):
         return RemoveOrganizationForm()
 
     def handle(self, request, organization):
+        if organization.is_default:
+            messages.add_message(request, messages.ERROR, ERR_DEFAULT_ORG)
+            return self.redirect(reverse('sentry-organization-home', args=[
+                organization.slug
+            ]))
+
         form = self.get_form(request, organization)
         if form.is_valid():
             if organization.status != OrganizationStatus.PENDING_DELETION:
diff --git a/tests/sentry/api/endpoints/test_organization_details.py b/tests/sentry/api/endpoints/test_organization_details.py
index b852f3362a..f77d6e67a2 100644
--- a/tests/sentry/api/endpoints/test_organization_details.py
+++ b/tests/sentry/api/endpoints/test_organization_details.py
@@ -89,3 +89,19 @@ class OrganizationDeleteTest(APITestCase):
         response = self.client.delete(url)
 
         assert response.status_code == 403
+
+    def test_cannot_remove_default(self):
+        Organization.objects.all().delete()
+
+        org = self.create_organization(owner=self.user)
+
+        self.login_as(self.user)
+
+        url = reverse('sentry-api-0-organization-details', kwargs={
+            'organization_slug': org.slug,
+        })
+
+        with self.settings(SENTRY_SINGLE_ORGANIZATION=True):
+            response = self.client.delete(url)
+
+        assert response.status_code == 400, response.data
diff --git a/tests/sentry/web/frontend/test_remove_organization.py b/tests/sentry/web/frontend/test_remove_organization.py
index f9c8f33502..f21c1d0e44 100644
--- a/tests/sentry/web/frontend/test_remove_organization.py
+++ b/tests/sentry/web/frontend/test_remove_organization.py
@@ -52,3 +52,23 @@ class RemoveOrganizationTest(TestCase):
         organization = Organization.objects.get(id=self.organization.id)
 
         assert organization.status == OrganizationStatus.PENDING_DELETION
+
+    def test_cannot_remove_default(self):
+        Organization.objects.all().delete()
+
+        org = self.create_organization()
+
+        self.login_as(self.user)
+
+        url = reverse('sentry-api-0-organization-details', kwargs={
+            'organization_slug': org.slug,
+        })
+
+        with self.settings(SENTRY_SINGLE_ORGANIZATION=True):
+            resp = self.client.post(self.path)
+
+        assert resp.status_code == 302
+
+        organization = Organization.objects.get(id=org.id)
+
+        assert organization.status == OrganizationStatus.VISIBLE
