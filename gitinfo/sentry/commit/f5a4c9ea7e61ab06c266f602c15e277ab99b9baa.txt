commit f5a4c9ea7e61ab06c266f602c15e277ab99b9baa
Author: David Cramer <dcramer@gmail.com>
Date:   Tue Oct 10 14:43:38 2017 -0700

    feat(mail): Support CC

diff --git a/src/sentry/utils/email.py b/src/sentry/utils/email.py
index b6d2b75dcb..a3ec15cb7b 100644
--- a/src/sentry/utils/email.py
+++ b/src/sentry/utils/email.py
@@ -362,10 +362,11 @@ class MessageBuilder(object):
 
         return msg
 
-    def get_built_messages(self, to=None, bcc=None):
+    def get_built_messages(self, to=None, cc=None, bcc=None):
         send_to = set(to or ())
         send_to.update(self._send_to)
-        results = [self.build(to=email, reply_to=send_to, bcc=bcc) for email in send_to if email]
+        results = [self.build(to=email, reply_to=send_to, cc=cc, bcc=bcc)
+                   for email in send_to if email]
         if not results:
             logger.debug('Did not build any messages, no users to send to.')
         return results
@@ -377,16 +378,16 @@ class MessageBuilder(object):
             to = to[:MAX_RECIPIENTS] + ['and {} more.'.format(len(to[MAX_RECIPIENTS:]))]
         return ', '.join(to)
 
-    def send(self, to=None, bcc=None, fail_silently=False):
+    def send(self, to=None, cc=None, bcc=None, fail_silently=False):
         return send_messages(
-            self.get_built_messages(to, bcc=bcc),
+            self.get_built_messages(to, cc=cc, bcc=bcc),
             fail_silently=fail_silently,
         )
 
-    def send_async(self, to=None, bcc=None):
+    def send_async(self, to=None, cc=None, bcc=None):
         from sentry.tasks.email import send_email
         fmt = options.get('system.logging-format')
-        messages = self.get_built_messages(to, bcc=bcc)
+        messages = self.get_built_messages(to, cc=cc, bcc=bcc)
         extra = {'message_type': self.type}
         loggable = [v for k, v in six.iteritems(self.context) if hasattr(v, 'id')]
         for context in loggable:
