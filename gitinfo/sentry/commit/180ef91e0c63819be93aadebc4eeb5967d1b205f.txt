commit 180ef91e0c63819be93aadebc4eeb5967d1b205f
Author: David Cramer <dcramer@gmail.com>
Date:   Mon Feb 28 13:36:02 2011 -0800

    Test case to ensure dicts are merging correctly

diff --git a/sentry/reporter.py b/sentry/reporter.py
index 278ce82882..904a68adb0 100644
--- a/sentry/reporter.py
+++ b/sentry/reporter.py
@@ -83,6 +83,7 @@ class FakeRequest(object):
     META = {}
     COOKIES = {}
     FILES = {}
+    url = ''
     
     def __repr__(self):
         # Since this is called as part of error handling, we need to be very
diff --git a/sentry/tests/tests.py b/sentry/tests/tests.py
index 738bab606a..42ac832d47 100644
--- a/sentry/tests/tests.py
+++ b/sentry/tests/tests.py
@@ -669,6 +669,34 @@ class SentryTestCase(TestCase):
 
         settings.MIDDLEWARE_CLASSES = existing
 
+    def testExtraStorage(self):
+        from sentry.reporter import FakeRequest
+        
+        request = FakeRequest()
+        request.META['foo'] = 'bar'
+        
+        logger = logging.getLogger()
+
+        self.setUpHandler()
+
+        logger.error('This is a test %s', 'error', extra={
+            'request': request,
+            'data': {
+                'baz': 'bar',
+            }
+        })
+        self.assertEquals(Message.objects.count(), 1)
+        self.assertEquals(GroupedMessage.objects.count(), 1)
+        last = Message.objects.get()
+        self.assertEquals(last.logger, 'root')
+        self.assertEquals(last.level, logging.ERROR)
+        self.assertEquals(last.message, 'This is a test error')
+        self.assertTrue('META' in last.data)
+        self.assertTrue('foo' in last.data['META'])
+        self.assertEquals(last.data['META']['foo'], 'bar')
+        self.assertTrue('baz' in last.data)
+        self.assertEquals(last.data['baz'], 'bar')
+
 class SentryViewsTest(TestCase):
     urls = 'sentry.tests.urls'
     fixtures = ['sentry/tests/fixtures/views.json']
