commit e96c0ccd41a864a33f7c0291321a69d5a8de99a7
Author: Billy Vong <billyvg@users.noreply.github.com>
Date:   Fri Aug 23 09:43:10 2019 -0700

    ref(ts): Rename and refactor `OrganizationIncidents` [SEN-746] (#14489)
    
    Renames `OrganizationIncidents` --> `Incidents` and refactors modules in `app/views/incidents` root to typescript

diff --git a/src/sentry/static/sentry/app/routes.jsx b/src/sentry/static/sentry/app/routes.jsx
index 13db8d066e..12d55614fd 100644
--- a/src/sentry/static/sentry/app/routes.jsx
+++ b/src/sentry/static/sentry/app/routes.jsx
@@ -1027,13 +1027,13 @@ function routes() {
           <Route
             path="/organizations/:orgId/incidents/"
             componentPromise={() =>
-              import(/* webpackChunkName: "OrganizationIncidentsContainer" */ 'app/views/organizationIncidents')
+              import(/* webpackChunkName: "IncidentsContainer" */ 'app/views/incidents')
             }
             component={errorHandler(LazyLoad)}
           >
             <IndexRoute
               componentPromise={() =>
-                import(/* webpackChunkName: "OrganizationIncidents" */ 'app/views/organizationIncidents/list')
+                import(/* webpackChunkName: "Incidents" */ 'app/views/incidents/list')
               }
               component={errorHandler(LazyLoad)}
             />
@@ -1041,7 +1041,7 @@ function routes() {
             <Route
               path=":incidentId/"
               componentPromise={() =>
-                import(/* webpackChunkName: "OrganizationIncidentDetails" */ 'app/views/organizationIncidents/details')
+                import(/* webpackChunkName: "OrganizationIncidentDetails" */ 'app/views/incidents/details')
               }
               component={errorHandler(LazyLoad)}
             />
diff --git a/src/sentry/static/sentry/app/views/organizationIncidents/details/activity/activity.jsx b/src/sentry/static/sentry/app/views/incidents/details/activity/activity.jsx
similarity index 97%
rename from src/sentry/static/sentry/app/views/organizationIncidents/details/activity/activity.jsx
rename to src/sentry/static/sentry/app/views/incidents/details/activity/activity.jsx
index 94117411c8..5fc7e59dae 100644
--- a/src/sentry/static/sentry/app/views/organizationIncidents/details/activity/activity.jsx
+++ b/src/sentry/static/sentry/app/views/incidents/details/activity/activity.jsx
@@ -4,7 +4,7 @@ import React from 'react';
 import moment from 'moment';
 import styled from 'react-emotion';
 
-import {INCIDENT_ACTIVITY_TYPE} from 'app/views/organizationIncidents/utils';
+import {IncidentActivityType} from 'app/views/incidents/utils';
 import {t} from 'app/locale';
 import ActivityItem from 'app/components/activity/item';
 import ErrorBoundary from 'app/components/errorBoundary';
@@ -127,7 +127,7 @@ class Activity extends React.Component {
                   activitiesForDate.map(activity => {
                     const authorName = activity.user ? activity.user.name : 'Sentry';
 
-                    if (activity.type === INCIDENT_ACTIVITY_TYPE.COMMENT) {
+                    if (activity.type === IncidentActivityType.COMMENT) {
                       return (
                         <ErrorBoundary mini key={`note-${activity.id}`}>
                           <Note
diff --git a/src/sentry/static/sentry/app/views/organizationIncidents/details/activity/activityPlaceholder.jsx b/src/sentry/static/sentry/app/views/incidents/details/activity/activityPlaceholder.jsx
similarity index 100%
rename from src/sentry/static/sentry/app/views/organizationIncidents/details/activity/activityPlaceholder.jsx
rename to src/sentry/static/sentry/app/views/incidents/details/activity/activityPlaceholder.jsx
diff --git a/src/sentry/static/sentry/app/views/organizationIncidents/details/activity/dateDivider.jsx b/src/sentry/static/sentry/app/views/incidents/details/activity/dateDivider.jsx
similarity index 100%
rename from src/sentry/static/sentry/app/views/organizationIncidents/details/activity/dateDivider.jsx
rename to src/sentry/static/sentry/app/views/incidents/details/activity/dateDivider.jsx
diff --git a/src/sentry/static/sentry/app/views/organizationIncidents/details/activity/index.jsx b/src/sentry/static/sentry/app/views/incidents/details/activity/index.jsx
similarity index 97%
rename from src/sentry/static/sentry/app/views/organizationIncidents/details/activity/index.jsx
rename to src/sentry/static/sentry/app/views/incidents/details/activity/index.jsx
index ffed98eae9..7f3af40c92 100644
--- a/src/sentry/static/sentry/app/views/organizationIncidents/details/activity/index.jsx
+++ b/src/sentry/static/sentry/app/views/incidents/details/activity/index.jsx
@@ -1,7 +1,7 @@
 import PropTypes from 'prop-types';
 import React from 'react';
 
-import {INCIDENT_ACTIVITY_TYPE} from 'app/views/organizationIncidents/utils';
+import {IncidentActivityType} from 'app/views/incidents/utils';
 import {
   createIncidentNote,
   deleteIncidentNote,
@@ -76,7 +76,7 @@ class ActivityContainer extends React.PureComponent {
 
     const newActivity = {
       comment: note.text,
-      type: INCIDENT_ACTIVITY_TYPE.COMMENT,
+      type: IncidentActivityType.COMMENT,
       dateCreated: new Date(),
       user: ConfigStore.get('user'),
       id: uniqueId(),
diff --git a/src/sentry/static/sentry/app/views/organizationIncidents/details/activity/statusItem.jsx b/src/sentry/static/sentry/app/views/incidents/details/activity/statusItem.jsx
similarity index 76%
rename from src/sentry/static/sentry/app/views/organizationIncidents/details/activity/statusItem.jsx
rename to src/sentry/static/sentry/app/views/incidents/details/activity/statusItem.jsx
index 3822c7edbf..5627927e9f 100644
--- a/src/sentry/static/sentry/app/views/organizationIncidents/details/activity/statusItem.jsx
+++ b/src/sentry/static/sentry/app/views/incidents/details/activity/statusItem.jsx
@@ -2,13 +2,10 @@ import PropTypes from 'prop-types';
 import React from 'react';
 import styled from 'react-emotion';
 
-import {
-  INCIDENT_ACTIVITY_TYPE,
-  INCIDENT_STATUS,
-} from 'app/views/organizationIncidents/utils';
+import {IncidentActivityType, IncidentStatus} from 'app/views/incidents/utils';
 import {t} from 'app/locale';
 import ActivityItem from 'app/components/activity/item';
-import Chart from 'app/views/organizationIncidents/details/chart';
+import Chart from 'app/views/incidents/details/chart';
 import SentryTypes from 'app/sentryTypes';
 import getDynamicText from 'app/utils/getDynamicText';
 
@@ -30,15 +27,15 @@ class StatusItem extends React.Component {
   render() {
     const {activity, authorName, incident} = this.props;
 
-    const isCreated = activity.type === INCIDENT_ACTIVITY_TYPE.CREATED;
-    const isDetected = activity.type === INCIDENT_ACTIVITY_TYPE.DETECTED;
+    const isCreated = activity.type === IncidentActivityType.CREATED;
+    const isDetected = activity.type === IncidentActivityType.DETECTED;
     const isClosed =
-      activity.type === INCIDENT_ACTIVITY_TYPE.STATUS_CHANGE &&
-      activity.value === `${INCIDENT_STATUS.CLOSED}`;
+      activity.type === IncidentActivityType.STATUS_CHANGE &&
+      activity.value === `${IncidentStatus.CLOSED}`;
     const isReopened =
-      activity.type === INCIDENT_ACTIVITY_TYPE.STATUS_CHANGE &&
-      activity.value === `${INCIDENT_STATUS.CREATED}` &&
-      activity.previousValue === `${INCIDENT_STATUS.CLOSED}`;
+      activity.type === IncidentActivityType.STATUS_CHANGE &&
+      activity.value === `${IncidentStatus.CREATED}` &&
+      activity.previousValue === `${IncidentStatus.CLOSED}`;
 
     // Unknown activity, don't render anything
     if (!isCreated && !isDetected && !isClosed && !isReopened) {
diff --git a/src/sentry/static/sentry/app/views/organizationIncidents/details/body.jsx b/src/sentry/static/sentry/app/views/incidents/details/body.jsx
similarity index 96%
rename from src/sentry/static/sentry/app/views/organizationIncidents/details/body.jsx
rename to src/sentry/static/sentry/app/views/incidents/details/body.jsx
index deb010b9f6..bc3851481e 100644
--- a/src/sentry/static/sentry/app/views/organizationIncidents/details/body.jsx
+++ b/src/sentry/static/sentry/app/views/incidents/details/body.jsx
@@ -3,7 +3,7 @@ import styled from 'react-emotion';
 
 import {PageContent} from 'app/styles/organization';
 import {t} from 'app/locale';
-import Chart from 'app/views/organizationIncidents/details/chart';
+import Chart from 'app/views/incidents/details/chart';
 import IdBadge from 'app/components/idBadge';
 import Link from 'app/components/links/link';
 import NavTabs from 'app/components/navTabs';
@@ -11,7 +11,7 @@ import Placeholder from 'app/components/placeholder';
 import Projects from 'app/utils/projects';
 import SeenByList from 'app/components/seenByList';
 import SentryTypes from 'app/sentryTypes';
-import SideHeader from 'app/views/organizationIncidents/details/sideHeader';
+import SideHeader from 'app/views/incidents/details/sideHeader';
 import space from 'app/styles/space';
 import theme from 'app/utils/theme';
 
diff --git a/src/sentry/static/sentry/app/views/organizationIncidents/details/chart.jsx b/src/sentry/static/sentry/app/views/incidents/details/chart.jsx
similarity index 98%
rename from src/sentry/static/sentry/app/views/organizationIncidents/details/chart.jsx
rename to src/sentry/static/sentry/app/views/incidents/details/chart.jsx
index bab8d3ef3a..965c09d323 100644
--- a/src/sentry/static/sentry/app/views/organizationIncidents/details/chart.jsx
+++ b/src/sentry/static/sentry/app/views/incidents/details/chart.jsx
@@ -48,7 +48,7 @@ export default class Chart extends React.PureComponent {
   render() {
     const {data, detected, closed} = this.props;
 
-    const chartData = data.map(([ts, val], i) => {
+    const chartData = data.map(([ts, val]) => {
       return [
         ts * 1000,
         val.length ? val.reduce((acc, {count} = {count: 0}) => acc + count, 0) : 0,
diff --git a/src/sentry/static/sentry/app/views/organizationIncidents/details/closedSymbol.jsx b/src/sentry/static/sentry/app/views/incidents/details/closedSymbol.jsx
similarity index 100%
rename from src/sentry/static/sentry/app/views/organizationIncidents/details/closedSymbol.jsx
rename to src/sentry/static/sentry/app/views/incidents/details/closedSymbol.jsx
diff --git a/src/sentry/static/sentry/app/views/organizationIncidents/details/detectedSymbol.jsx b/src/sentry/static/sentry/app/views/incidents/details/detectedSymbol.jsx
similarity index 100%
rename from src/sentry/static/sentry/app/views/organizationIncidents/details/detectedSymbol.jsx
rename to src/sentry/static/sentry/app/views/incidents/details/detectedSymbol.jsx
diff --git a/src/sentry/static/sentry/app/views/organizationIncidents/details/header.jsx b/src/sentry/static/sentry/app/views/incidents/details/header.jsx
similarity index 100%
rename from src/sentry/static/sentry/app/views/organizationIncidents/details/header.jsx
rename to src/sentry/static/sentry/app/views/incidents/details/header.jsx
diff --git a/src/sentry/static/sentry/app/views/organizationIncidents/details/index.jsx b/src/sentry/static/sentry/app/views/incidents/details/index.jsx
similarity index 97%
rename from src/sentry/static/sentry/app/views/organizationIncidents/details/index.jsx
rename to src/sentry/static/sentry/app/views/incidents/details/index.jsx
index 9af58bd3da..ee4370d16a 100644
--- a/src/sentry/static/sentry/app/views/organizationIncidents/details/index.jsx
+++ b/src/sentry/static/sentry/app/views/incidents/details/index.jsx
@@ -8,7 +8,7 @@ import {t} from 'app/locale';
 import withApi from 'app/utils/withApi';
 
 import {
-  INCIDENT_STATUS,
+  IncidentStatus,
   fetchIncident,
   updateSubscription,
   updateStatus,
@@ -81,8 +81,8 @@ class OrganizationIncidentDetails extends React.Component {
     const {status} = this.state.incident;
 
     const newStatus = isOpen(this.state.incident)
-      ? INCIDENT_STATUS.CLOSED
-      : INCIDENT_STATUS.CREATED;
+      ? IncidentStatus.CLOSED
+      : IncidentStatus.CREATED;
 
     this.setState(state => ({
       incident: {...state.incident, status: newStatus},
diff --git a/src/sentry/static/sentry/app/views/organizationIncidents/details/relatedIssues/index.jsx b/src/sentry/static/sentry/app/views/incidents/details/relatedIssues/index.jsx
similarity index 98%
rename from src/sentry/static/sentry/app/views/organizationIncidents/details/relatedIssues/index.jsx
rename to src/sentry/static/sentry/app/views/incidents/details/relatedIssues/index.jsx
index ff8f69d0ed..3abd54645a 100644
--- a/src/sentry/static/sentry/app/views/organizationIncidents/details/relatedIssues/index.jsx
+++ b/src/sentry/static/sentry/app/views/incidents/details/relatedIssues/index.jsx
@@ -30,7 +30,7 @@ const RelatedIssues = styled(
       return (
         <div className={className}>
           <IssuesFetcher api={api} issueIds={incident && incident.groups}>
-            {({issues, loading, error}) => {
+            {({issues, loading}) => {
               // If loading is finished, and there are no issues, do not display anything
               if (!loading && issues && issues.length === 0) {
                 return null;
diff --git a/src/sentry/static/sentry/app/views/organizationIncidents/details/relatedIssues/issuesFetcher.jsx b/src/sentry/static/sentry/app/views/incidents/details/relatedIssues/issuesFetcher.jsx
similarity index 100%
rename from src/sentry/static/sentry/app/views/organizationIncidents/details/relatedIssues/issuesFetcher.jsx
rename to src/sentry/static/sentry/app/views/incidents/details/relatedIssues/issuesFetcher.jsx
diff --git a/src/sentry/static/sentry/app/views/organizationIncidents/details/sideHeader.jsx b/src/sentry/static/sentry/app/views/incidents/details/sideHeader.jsx
similarity index 100%
rename from src/sentry/static/sentry/app/views/organizationIncidents/details/sideHeader.jsx
rename to src/sentry/static/sentry/app/views/incidents/details/sideHeader.jsx
diff --git a/src/sentry/static/sentry/app/views/organizationIncidents/details/suspects.jsx b/src/sentry/static/sentry/app/views/incidents/details/suspects.jsx
similarity index 100%
rename from src/sentry/static/sentry/app/views/organizationIncidents/details/suspects.jsx
rename to src/sentry/static/sentry/app/views/incidents/details/suspects.jsx
diff --git a/src/sentry/static/sentry/app/views/organizationIncidents/index.jsx b/src/sentry/static/sentry/app/views/incidents/index.tsx
similarity index 80%
rename from src/sentry/static/sentry/app/views/organizationIncidents/index.jsx
rename to src/sentry/static/sentry/app/views/incidents/index.tsx
index 6c972fcbf6..329515396d 100644
--- a/src/sentry/static/sentry/app/views/organizationIncidents/index.jsx
+++ b/src/sentry/static/sentry/app/views/incidents/index.tsx
@@ -1,13 +1,18 @@
 import React from 'react';
 
+import {t} from 'app/locale';
+import {Organization} from 'app/types';
+import {PageContent} from 'app/styles/organization';
 import SentryTypes from 'app/sentryTypes';
 import Feature from 'app/components/acl/feature';
 import Alert from 'app/components/alert';
 import withOrganization from 'app/utils/withOrganization';
-import {t} from 'app/locale';
-import {PageContent} from 'app/styles/organization';
 
-class OrganizationIncidentsContainer extends React.Component {
+type Props = {
+  organization: Organization;
+};
+
+class IncidentsContainer extends React.Component<Props> {
   static propTypes = {
     organization: SentryTypes.Organization.isRequired,
   };
@@ -35,4 +40,4 @@ class OrganizationIncidentsContainer extends React.Component {
   }
 }
 
-export default withOrganization(OrganizationIncidentsContainer);
+export default withOrganization(IncidentsContainer);
diff --git a/src/sentry/static/sentry/app/views/organizationIncidents/list/index.jsx b/src/sentry/static/sentry/app/views/incidents/list/index.jsx
similarity index 96%
rename from src/sentry/static/sentry/app/views/organizationIncidents/list/index.jsx
rename to src/sentry/static/sentry/app/views/incidents/list/index.jsx
index 98587e2c6c..257f775c0d 100644
--- a/src/sentry/static/sentry/app/views/organizationIncidents/list/index.jsx
+++ b/src/sentry/static/sentry/app/views/incidents/list/index.jsx
@@ -26,7 +26,7 @@ import SparkLine from './sparkLine';
 
 const DEFAULT_QUERY_STATUS = '';
 
-class OrganizationIncidentsList extends AsyncComponent {
+class IncidentsList extends AsyncComponent {
   getEndpoints() {
     const {params, location} = this.props;
     return [
@@ -116,7 +116,7 @@ class OrganizationIncidentsList extends AsyncComponent {
   }
 }
 
-class OrganizationIncidentsListContainer extends React.Component {
+class IncidentsListContainer extends React.Component {
   render() {
     const {params, location} = this.props;
     const {pathname, query} = location;
@@ -172,7 +172,7 @@ class OrganizationIncidentsListContainer extends React.Component {
             )}
           </AlertLink>
 
-          <OrganizationIncidentsList {...this.props} />
+          <IncidentsList {...this.props} />
         </PageContent>
       </DocumentTitle>
     );
@@ -208,4 +208,4 @@ const NumericColumn = styled('div')`
   text-align: right;
 `;
 
-export default OrganizationIncidentsListContainer;
+export default IncidentsListContainer;
diff --git a/src/sentry/static/sentry/app/views/organizationIncidents/list/sparkLine.jsx b/src/sentry/static/sentry/app/views/incidents/list/sparkLine.jsx
similarity index 100%
rename from src/sentry/static/sentry/app/views/organizationIncidents/list/sparkLine.jsx
rename to src/sentry/static/sentry/app/views/incidents/list/sparkLine.jsx
diff --git a/src/sentry/static/sentry/app/views/organizationIncidents/status.jsx b/src/sentry/static/sentry/app/views/incidents/status.tsx
similarity index 74%
rename from src/sentry/static/sentry/app/views/organizationIncidents/status.jsx
rename to src/sentry/static/sentry/app/views/incidents/status.tsx
index 29d319f29c..cb38b739ff 100644
--- a/src/sentry/static/sentry/app/views/organizationIncidents/status.jsx
+++ b/src/sentry/static/sentry/app/views/incidents/status.tsx
@@ -2,14 +2,20 @@ import PropTypes from 'prop-types';
 import React from 'react';
 import styled from 'react-emotion';
 
+import {t} from 'app/locale';
 import InlineSvg from 'app/components/inlineSvg';
 import SentryTypes from 'app/sentryTypes';
 import space from 'app/styles/space';
-import {t} from 'app/locale';
 
+import {Incident} from './types';
 import {isOpen} from './utils';
 
-export default class Status extends React.Component {
+type Props = {
+  className: string;
+  incident: Incident;
+};
+
+export default class Status extends React.Component<Props> {
   static propTypes = {
     className: PropTypes.string,
     incident: SentryTypes.Incident,
@@ -23,20 +29,20 @@ export default class Status extends React.Component {
     const text = isIncidentOpen ? t('Open') : t('Closed');
 
     return (
-      <Container className={className}>
+      <Wrapper className={className}>
         <Icon src={icon} isOpen={isIncidentOpen} />
         {text}
-      </Container>
+      </Wrapper>
     );
   }
 }
 
-const Container = styled('div')`
+const Wrapper = styled('div')`
   display: flex;
   align-items: center;
 `;
 
-const Icon = styled(InlineSvg)`
+const Icon = styled(InlineSvg)<{isOpen: boolean}>`
   color: ${p => (p.isOpen ? p.theme.error : p.theme.success)};
   margin-right: ${space(0.5)};
 `;
diff --git a/src/sentry/static/sentry/app/views/incidents/types.ts b/src/sentry/static/sentry/app/views/incidents/types.ts
new file mode 100644
index 0000000000..5813b385f9
--- /dev/null
+++ b/src/sentry/static/sentry/app/views/incidents/types.ts
@@ -0,0 +1,19 @@
+export type Incident = {
+  id: string;
+  identifier: string;
+  organizationId: string;
+  title: string;
+  status: number;
+  query: string;
+  projects: number[];
+  eventStats: {
+    data: Array<Array<number | Array<any>>>;
+  };
+  totalEvents: number;
+  uniqueUsers: number;
+  isSubscribed: boolean;
+  dateClosed: string;
+  dateStarted: string;
+  dateDetected: string;
+  dateAdded: string;
+};
diff --git a/src/sentry/static/sentry/app/views/incidents/utils.ts b/src/sentry/static/sentry/app/views/incidents/utils.ts
new file mode 100644
index 0000000000..c78bf2810c
--- /dev/null
+++ b/src/sentry/static/sentry/app/views/incidents/utils.ts
@@ -0,0 +1,71 @@
+import {Client} from 'app/api';
+
+import {Incident} from './types';
+
+export enum IncidentActivityType {
+  CREATED,
+  DETECTED,
+  STATUS_CHANGE,
+  COMMENT,
+}
+
+export enum IncidentStatus {
+  DETECTED,
+  CREATED,
+  CLOSED,
+}
+
+export function fetchIncident(
+  api: Client,
+  orgId: string,
+  incidentId: string
+): Promise<Incident> {
+  return api.requestPromise(`/organizations/${orgId}/incidents/${incidentId}/`);
+}
+
+export function updateSubscription(
+  api: Client,
+  orgId: string,
+  incidentId: string,
+  isSubscribed?: boolean
+): Promise<Incident> {
+  const method = isSubscribed ? 'POST' : 'DELETE';
+  return api.requestPromise(
+    `/organizations/${orgId}/incidents/${incidentId}/subscriptions/`,
+    {
+      method,
+    }
+  );
+}
+
+export function updateStatus(
+  api: Client,
+  orgId: string,
+  incidentId: string,
+  status: IncidentStatus
+): Promise<Incident> {
+  return api.requestPromise(`/organizations/${orgId}/incidents/${incidentId}/`, {
+    method: 'PUT',
+    data: {
+      status,
+    },
+  });
+}
+
+/**
+ * Is incident open?
+ *
+ * @param {Object} incident Incident object
+ * @returns {Boolean}
+ */
+
+export function isOpen(incident: Incident): boolean {
+  switch (incident.status) {
+    case IncidentStatus.CLOSED:
+      return false;
+    case IncidentStatus.DETECTED:
+    case IncidentStatus.CREATED:
+    default:
+      return true;
+  }
+}
diff --git a/src/sentry/static/sentry/app/views/organizationGroupDetails/groupActivity.jsx b/src/sentry/static/sentry/app/views/organizationGroupDetails/groupActivity.jsx
index 8245b804b4..0db003d1b4 100644
--- a/src/sentry/static/sentry/app/views/organizationGroupDetails/groupActivity.jsx
+++ b/src/sentry/static/sentry/app/views/organizationGroupDetails/groupActivity.jsx
@@ -54,7 +54,7 @@ class GroupActivity extends React.Component {
   };
 
   /**
-   * Note: This is nearly the same logic as `app/views/organizationIncidents/details/activity`
+   * Note: This is nearly the same logic as `app/views/incidents/details/activity`
    * This can be abstracted a bit if we create more objects that can have activities
    */
   handleNoteCreate = async note => {
diff --git a/src/sentry/static/sentry/app/views/organizationIncidents/utils.jsx b/src/sentry/static/sentry/app/views/organizationIncidents/utils.jsx
deleted file mode 100644
index 8f5d2b6325..0000000000
--- a/src/sentry/static/sentry/app/views/organizationIncidents/utils.jsx
+++ /dev/null
@@ -1,53 +0,0 @@
-export const INCIDENT_STATUS = {
-  DETECTED: 0,
-  CREATED: 1,
-  CLOSED: 2,
-};
-
-export const INCIDENT_ACTIVITY_TYPE = {
-  CREATED: 0,
-  DETECTED: 1,
-  STATUS_CHANGE: 2,
-  COMMENT: 3,
-};
-
-export function fetchIncident(api, orgId, incidentId) {
-  return api.requestPromise(`/organizations/${orgId}/incidents/${incidentId}/`);
-}
-
-export function updateSubscription(api, orgId, incidentId, isSubscribed) {
-  const method = isSubscribed ? 'POST' : 'DELETE';
-  return api.requestPromise(
-    `/organizations/${orgId}/incidents/${incidentId}/subscriptions/`,
-    {
-      method,
-    }
-  );
-}
-
-export function updateStatus(api, orgId, incidentId, status) {
-  return api.requestPromise(`/organizations/${orgId}/incidents/${incidentId}/`, {
-    method: 'PUT',
-    data: {
-      status,
-    },
-  });
-}
-
-/**
- * Is incident open?
- *
- * @param {Object} incident Incident object
- * @returns {Boolean}
- */
-
-export function isOpen(incident) {
-  switch (incident.status) {
-    case INCIDENT_STATUS.CLOSED:
-      return false;
-    case INCIDENT_STATUS.DETECTED:
-    case INCIDENT_STATUS.CREATED:
-    default:
-      return true;
-  }
-}
diff --git a/tests/js/spec/views/organizationIncidents/details/activity.spec.jsx b/tests/js/spec/views/incidents/details/activity.spec.jsx
similarity index 98%
rename from tests/js/spec/views/organizationIncidents/details/activity.spec.jsx
rename to tests/js/spec/views/incidents/details/activity.spec.jsx
index 3b28351626..699ef4cff8 100644
--- a/tests/js/spec/views/organizationIncidents/details/activity.spec.jsx
+++ b/tests/js/spec/views/incidents/details/activity.spec.jsx
@@ -2,7 +2,7 @@ import React from 'react';
 import {mount} from 'enzyme';
 
 import {initializeOrg} from 'app-test/helpers/initializeOrg';
-import IncidentActivity from 'app/views/organizationIncidents/details/activity';
+import IncidentActivity from 'app/views/incidents/details/activity';
 import changeReactMentionsInput from 'app-test/helpers/changeReactMentionsInput';
 
 describe('IncidentDetails -> Activity', function() {
diff --git a/tests/js/spec/views/organizationIncidents/details/index.spec.jsx b/tests/js/spec/views/incidents/details/index.spec.jsx
similarity index 98%
rename from tests/js/spec/views/organizationIncidents/details/index.spec.jsx
rename to tests/js/spec/views/incidents/details/index.spec.jsx
index c91d5da7d9..ae2ee5aef4 100644
--- a/tests/js/spec/views/organizationIncidents/details/index.spec.jsx
+++ b/tests/js/spec/views/incidents/details/index.spec.jsx
@@ -2,7 +2,7 @@ import React from 'react';
 
 import {initializeOrg} from 'app-test/helpers/initializeOrg';
 import {mount} from 'enzyme';
-import IncidentDetails from 'app/views/organizationIncidents/details';
+import IncidentDetails from 'app/views/incidents/details';
 import ProjectsStore from 'app/stores/projectsStore';
 
 describe('IncidentDetails', function() {
diff --git a/tests/js/spec/views/organizationIncidents/index.spec.jsx b/tests/js/spec/views/incidents/index.spec.jsx
similarity index 70%
rename from tests/js/spec/views/organizationIncidents/index.spec.jsx
rename to tests/js/spec/views/incidents/index.spec.jsx
index e961605253..8d705db090 100644
--- a/tests/js/spec/views/organizationIncidents/index.spec.jsx
+++ b/tests/js/spec/views/incidents/index.spec.jsx
@@ -1,14 +1,14 @@
 import React from 'react';
 import {mount} from 'enzyme';
 
-import OrganizationIncidentsContainer from 'app/views/organizationIncidents/index';
+import IncidentsContainer from 'app/views/incidents';
 
-describe('OrganizationIncidentsContainer', function() {
+describe('IncidentsContainer', function() {
   describe('no access without feature flag', function() {
     it('display no access message', function() {
       const organization = TestStubs.Organization({projects: [TestStubs.Project()]});
       const wrapper = mount(
-        <OrganizationIncidentsContainer />,
+        <IncidentsContainer />,
         TestStubs.routerContext([{organization}])
       );
       expect(wrapper.text()).toBe("You don't have access to this feature");
diff --git a/tests/js/spec/views/organizationIncidents/list/index.spec.jsx b/tests/js/spec/views/incidents/list/index.spec.jsx
similarity index 93%
rename from tests/js/spec/views/organizationIncidents/list/index.spec.jsx
rename to tests/js/spec/views/incidents/list/index.spec.jsx
index f0dcf89439..ffb6130bef 100644
--- a/tests/js/spec/views/organizationIncidents/list/index.spec.jsx
+++ b/tests/js/spec/views/incidents/list/index.spec.jsx
@@ -3,18 +3,19 @@ import {mount} from 'enzyme';
 
 import {initializeOrg} from 'app-test/helpers/initializeOrg';
 
-import OrganizationIncidentsList from 'app/views/organizationIncidents/list';
+import IncidentsList from 'app/views/incidents/list';
 
-describe('OrganizationIncidentsList', function() {
+describe('IncidentsList', function() {
   const {routerContext} = initializeOrg();
   let mock;
   let wrapper;
 
   const createWrapper = async props => {
     wrapper = mount(
-      <OrganizationIncidentsList
+      <IncidentsList
         params={{orgId: 'org-slug'}}
         location={{query: {}, search: ''}}
+        {...props}
       />,
       routerContext
     );
