commit f116d4991efdc9316e550596d761013dde6f5b46
Author: David Cramer <dcramer@gmail.com>
Date:   Tue Sep 27 00:14:14 2011 -0700

    Ensure owner gets added as a superuser

diff --git a/sentry/management/__init__.py b/sentry/management/__init__.py
index db22bb2c21..e117fa3c30 100644
--- a/sentry/management/__init__.py
+++ b/sentry/management/__init__.py
@@ -10,7 +10,7 @@ def create_default_project(app, created_models, verbosity=2, **kwargs):
         except User.DoesNotExist:
             return
 
-        models.Project.objects.get_or_create(
+        project, created = models.Project.objects.get_or_create(
             id=1,
             defaults=dict(
                 public=True,
@@ -18,6 +18,11 @@ def create_default_project(app, created_models, verbosity=2, **kwargs):
                 owner=owner,
             )
         )
+        if not created:
+            return
+
+        project.member_set.add(owner, is_superuser=True)
+
         if verbosity > 0:
             print 'Created default Sentry project owned by %s' % owner
 
diff --git a/sentry/migrations/0016_auto__add_field_projectmember_is_superuser.py b/sentry/migrations/0016_auto__add_field_projectmember_is_superuser.py
new file mode 100644
index 0000000000..f1935d9844
--- /dev/null
+++ b/sentry/migrations/0016_auto__add_field_projectmember_is_superuser.py
@@ -0,0 +1,145 @@
+# encoding: utf-8
+import datetime
+from south.db import db
+from south.v2 import SchemaMigration
+from django.db import models
+
+class Migration(SchemaMigration):
+
+    def forwards(self, orm):
+        
+        # Adding field 'ProjectMember.is_superuser'
+        db.add_column('sentry_projectmember', 'is_superuser', self.gf('django.db.models.fields.BooleanField')(default=False), keep_default=False)
+
+
+    def backwards(self, orm):
+        
+        # Deleting field 'ProjectMember.is_superuser'
+        db.delete_column('sentry_projectmember', 'is_superuser')
+
+
+    models = {
+        'auth.group': {
+            'Meta': {'object_name': 'Group'},
+            'id': ('django.db.models.fields.AutoField', [], {'primary_key': 'True'}),
+            'name': ('django.db.models.fields.CharField', [], {'unique': 'True', 'max_length': '80'}),
+            'permissions': ('django.db.models.fields.related.ManyToManyField', [], {'to': "orm['auth.Permission']", 'symmetrical': 'False', 'blank': 'True'})
+        },
+        'auth.permission': {
+            'Meta': {'ordering': "('content_type__app_label', 'content_type__model', 'codename')", 'unique_together': "(('content_type', 'codename'),)", 'object_name': 'Permission'},
+            'codename': ('django.db.models.fields.CharField', [], {'max_length': '100'}),
+            'content_type': ('django.db.models.fields.related.ForeignKey', [], {'to': "orm['contenttypes.ContentType']"}),
+            'id': ('django.db.models.fields.AutoField', [], {'primary_key': 'True'}),
+            'name': ('django.db.models.fields.CharField', [], {'max_length': '50'})
+        },
+        'auth.user': {
+            'Meta': {'object_name': 'User'},
+            'date_joined': ('django.db.models.fields.DateTimeField', [], {'default': 'datetime.datetime.now'}),
+            'email': ('django.db.models.fields.EmailField', [], {'max_length': '75', 'blank': 'True'}),
+            'first_name': ('django.db.models.fields.CharField', [], {'max_length': '30', 'blank': 'True'}),
+            'groups': ('django.db.models.fields.related.ManyToManyField', [], {'to': "orm['auth.Group']", 'symmetrical': 'False', 'blank': 'True'}),
+            'id': ('django.db.models.fields.AutoField', [], {'primary_key': 'True'}),
+            'is_active': ('django.db.models.fields.BooleanField', [], {'default': 'True'}),
+            'is_staff': ('django.db.models.fields.BooleanField', [], {'default': 'False'}),
+            'is_superuser': ('django.db.models.fields.BooleanField', [], {'default': 'False'}),
+            'last_login': ('django.db.models.fields.DateTimeField', [], {'default': 'datetime.datetime.now'}),
+            'last_name': ('django.db.models.fields.CharField', [], {'max_length': '30', 'blank': 'True'}),
+            'password': ('django.db.models.fields.CharField', [], {'max_length': '128'}),
+            'user_permissions': ('django.db.models.fields.related.ManyToManyField', [], {'to': "orm['auth.Permission']", 'symmetrical': 'False', 'blank': 'True'}),
+            'username': ('django.db.models.fields.CharField', [], {'unique': 'True', 'max_length': '30'})
+        },
+        'contenttypes.contenttype': {
+            'Meta': {'ordering': "('name',)", 'unique_together': "(('app_label', 'model'),)", 'object_name': 'ContentType', 'db_table': "'django_content_type'"},
+            'app_label': ('django.db.models.fields.CharField', [], {'max_length': '100'}),
+            'id': ('django.db.models.fields.AutoField', [], {'primary_key': 'True'}),
+            'model': ('django.db.models.fields.CharField', [], {'max_length': '100'}),
+            'name': ('django.db.models.fields.CharField', [], {'max_length': '100'})
+        },
+        'sentry.filtervalue': {
+            'Meta': {'unique_together': "(('project', 'key', 'value'),)", 'object_name': 'FilterValue'},
+            'id': ('django.db.models.fields.AutoField', [], {'primary_key': 'True'}),
+            'key': ('django.db.models.fields.CharField', [], {'max_length': '32'}),
+            'project': ('django.db.models.fields.related.ForeignKey', [], {'to': "orm['sentry.Project']", 'null': 'True'}),
+            'value': ('django.db.models.fields.CharField', [], {'max_length': '200'})
+        },
+        'sentry.groupedmessage': {
+            'Meta': {'unique_together': "(('project', 'logger', 'view', 'checksum'),)", 'object_name': 'GroupedMessage'},
+            'checksum': ('django.db.models.fields.CharField', [], {'max_length': '32'}),
+            'class_name': ('django.db.models.fields.CharField', [], {'db_index': 'True', 'max_length': '128', 'null': 'True', 'blank': 'True'}),
+            'data': ('django.db.models.fields.TextField', [], {'null': 'True', 'blank': 'True'}),
+            'first_seen': ('django.db.models.fields.DateTimeField', [], {'default': 'datetime.datetime.now', 'db_index': 'True'}),
+            'id': ('django.db.models.fields.AutoField', [], {'primary_key': 'True'}),
+            'last_seen': ('django.db.models.fields.DateTimeField', [], {'default': 'datetime.datetime.now', 'db_index': 'True'}),
+            'level': ('django.db.models.fields.PositiveIntegerField', [], {'default': '40', 'db_index': 'True', 'blank': 'True'}),
+            'logger': ('django.db.models.fields.CharField', [], {'default': "'root'", 'max_length': '64', 'db_index': 'True', 'blank': 'True'}),
+            'message': ('django.db.models.fields.TextField', [], {}),
+            'project': ('django.db.models.fields.related.ForeignKey', [], {'to': "orm['sentry.Project']", 'null': 'True'}),
+            'score': ('django.db.models.fields.IntegerField', [], {'default': '0'}),
+            'status': ('django.db.models.fields.PositiveIntegerField', [], {'default': '0', 'db_index': 'True'}),
+            'times_seen': ('django.db.models.fields.PositiveIntegerField', [], {'default': '1', 'db_index': 'True'}),
+            'traceback': ('django.db.models.fields.TextField', [], {'null': 'True', 'blank': 'True'}),
+            'view': ('django.db.models.fields.CharField', [], {'max_length': '200', 'null': 'True', 'blank': 'True'})
+        },
+        'sentry.message': {
+            'Meta': {'object_name': 'Message'},
+            'checksum': ('django.db.models.fields.CharField', [], {'max_length': '32'}),
+            'class_name': ('django.db.models.fields.CharField', [], {'db_index': 'True', 'max_length': '128', 'null': 'True', 'blank': 'True'}),
+            'data': ('django.db.models.fields.TextField', [], {'null': 'True', 'blank': 'True'}),
+            'datetime': ('django.db.models.fields.DateTimeField', [], {'default': 'datetime.datetime.now', 'db_index': 'True'}),
+            'group': ('django.db.models.fields.related.ForeignKey', [], {'blank': 'True', 'related_name': "'message_set'", 'null': 'True', 'to': "orm['sentry.GroupedMessage']"}),
+            'id': ('django.db.models.fields.AutoField', [], {'primary_key': 'True'}),
+            'level': ('django.db.models.fields.PositiveIntegerField', [], {'default': '40', 'db_index': 'True', 'blank': 'True'}),
+            'logger': ('django.db.models.fields.CharField', [], {'default': "'root'", 'max_length': '64', 'db_index': 'True', 'blank': 'True'}),
+            'message': ('django.db.models.fields.TextField', [], {}),
+            'message_id': ('django.db.models.fields.CharField', [], {'max_length': '32', 'unique': 'True', 'null': 'True'}),
+            'project': ('django.db.models.fields.related.ForeignKey', [], {'to': "orm['sentry.Project']", 'null': 'True'}),
+            'server_name': ('django.db.models.fields.CharField', [], {'max_length': '128', 'db_index': 'True'}),
+            'site': ('django.db.models.fields.CharField', [], {'max_length': '128', 'null': 'True', 'db_index': 'True'}),
+            'traceback': ('django.db.models.fields.TextField', [], {'null': 'True', 'blank': 'True'}),
+            'url': ('django.db.models.fields.URLField', [], {'max_length': '200', 'null': 'True', 'blank': 'True'}),
+            'view': ('django.db.models.fields.CharField', [], {'max_length': '200', 'null': 'True', 'blank': 'True'})
+        },
+        'sentry.messagecountbyminute': {
+            'Meta': {'unique_together': "(('project', 'group', 'date'),)", 'object_name': 'MessageCountByMinute'},
+            'date': ('django.db.models.fields.DateTimeField', [], {}),
+            'group': ('django.db.models.fields.related.ForeignKey', [], {'to': "orm['sentry.GroupedMessage']"}),
+            'id': ('django.db.models.fields.AutoField', [], {'primary_key': 'True'}),
+            'project': ('django.db.models.fields.related.ForeignKey', [], {'to': "orm['sentry.Project']", 'null': 'True'}),
+            'times_seen': ('django.db.models.fields.PositiveIntegerField', [], {'default': '0'})
+        },
+        'sentry.messagefiltervalue': {
+            'Meta': {'unique_together': "(('project', 'key', 'value', 'group'),)", 'object_name': 'MessageFilterValue'},
+            'group': ('django.db.models.fields.related.ForeignKey', [], {'to': "orm['sentry.GroupedMessage']"}),
+            'id': ('django.db.models.fields.AutoField', [], {'primary_key': 'True'}),
+            'key': ('django.db.models.fields.CharField', [], {'max_length': '32'}),
+            'project': ('django.db.models.fields.related.ForeignKey', [], {'to': "orm['sentry.Project']", 'null': 'True'}),
+            'times_seen': ('django.db.models.fields.PositiveIntegerField', [], {'default': '0'}),
+            'value': ('django.db.models.fields.CharField', [], {'max_length': '200'})
+        },
+        'sentry.messageindex': {
+            'Meta': {'unique_together': "(('column', 'value', 'object_id'),)", 'object_name': 'MessageIndex'},
+            'column': ('django.db.models.fields.CharField', [], {'max_length': '32'}),
+            'id': ('django.db.models.fields.AutoField', [], {'primary_key': 'True'}),
+            'object_id': ('django.db.models.fields.PositiveIntegerField', [], {}),
+            'value': ('django.db.models.fields.CharField', [], {'max_length': '128'})
+        },
+        'sentry.project': {
+            'Meta': {'object_name': 'Project'},
+            'date_added': ('django.db.models.fields.DateTimeField', [], {'default': 'datetime.datetime.now'}),
+            'id': ('django.db.models.fields.AutoField', [], {'primary_key': 'True'}),
+            'name': ('django.db.models.fields.CharField', [], {'max_length': '200'}),
+            'owner': ('django.db.models.fields.related.ForeignKey', [], {'related_name': "'owned_project_set'", 'to': "orm['auth.User']"}),
+            'public': ('django.db.models.fields.BooleanField', [], {'default': 'False'})
+        },
+        'sentry.projectmember': {
+            'Meta': {'unique_together': "(('project', 'user'),)", 'object_name': 'ProjectMember'},
+            'date_added': ('django.db.models.fields.DateTimeField', [], {'default': 'datetime.datetime.now'}),
+            'id': ('django.db.models.fields.AutoField', [], {'primary_key': 'True'}),
+            'is_superuser': ('django.db.models.fields.BooleanField', [], {'default': 'False'}),
+            'permissions': ('django.db.models.fields.BigIntegerField', [], {}),
+            'project': ('django.db.models.fields.related.ForeignKey', [], {'related_name': "'member_set'", 'to': "orm['sentry.Project']"}),
+            'user': ('django.db.models.fields.related.ForeignKey', [], {'related_name': "'project_set'", 'to': "orm['auth.User']"})
+        }
+    }
+
+    complete_apps = ['sentry']
diff --git a/sentry/models.py b/sentry/models.py
index 96fe2759a9..e132c7926b 100644
--- a/sentry/models.py
+++ b/sentry/models.py
@@ -87,13 +87,14 @@ class GzippedDictField(models.TextField):
 
 class Project(Model):
     name            = models.CharField(max_length=200)
-    owner           = models.ForeignKey(User)
+    owner           = models.ForeignKey(User, related_name="owned_project_set")
     public          = models.BooleanField(default=False)
     date_added      = models.DateTimeField(default=datetime.now)
 
 class ProjectMember(Model):
     project         = models.ForeignKey(Project, related_name="member_set")
     user            = models.ForeignKey(User, related_name="project_set")
+    is_superuser    = models.BooleanField(default=False)
     permissions     = BitField(flags=(
         'read_message',
         'change_message_status',
diff --git a/sentry/templates/sentry/layout.html b/sentry/templates/sentry/layout.html
index a05bb66513..09c8721447 100644
--- a/sentry/templates/sentry/layout.html
+++ b/sentry/templates/sentry/layout.html
@@ -1,15 +1,15 @@
 {% load i18n %}
 {% load sentry_helpers %}
 
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd"> 
+<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
 <html lang="en">
-    <head> 
-        <meta http-equiv="content-type" content="text/html; charset=utf-8"> 
+    <head>
+        <meta http-equiv="content-type" content="text/html; charset=utf-8">
         <meta name="robots" content="NONE,NOARCHIVE">
         <link href="//fonts.googleapis.com/css?family=Yanone+Kaffeesatz:light,regular&amp;subset=latin" rel="stylesheet" type="text/css">
         <link href="{% url sentry-media "styles/global.css" %}" rel="stylesheet" type="text/css"/>
         <link href="{% url sentry-media "images/sentry.png" %}" rel="shortcut icon"/>
-        <title>{% block title %}Sentry{% endblock %}</title> 
+        <title>{% block title %}Sentry{% endblock %}</title>
         <script type="text/javascript" src="{% url sentry-media "scripts/jquery.js" %}"></script>
         <script type="text/javascript" src="{% url sentry-media "scripts/jquery.animate-colors-min.js" %}"></script>
         <script type="text/javascript" src="{% url sentry-media "scripts/global.js" %}"></script>
@@ -25,11 +25,11 @@
         </script>
         {% block meta %}
         {% endblock %}
-    </head> 
-    
-    <body> 
+    </head>
+
+    <body>
         {% block body %}
-        <div id="header"> 
+        <div id="header">
             <div class="container">
                 <h1><a href="{% url sentry %}"><img src="{% url sentry-media "images/sentry.png" %}" border="0" width="32"/>Sentry</a></h1>
                 <h2>{% block heading %}{% trans "Dashboard" %}{% endblock %}</h2>
@@ -41,7 +41,7 @@
                     </form>
                 {% endblock %}
             </div>
-        </div> 
+        </div>
         <div id="content">
             {% block content_before %}
             {% endblock %}
@@ -65,10 +65,12 @@
                 <ul class="nav" id="account">
                     {% if request.user.is_authenticated %}
                         <li><a href="{% url sentry-logout %}">{% trans "Logout" %}</a></li>
+                    {% else %}
+                        <li><a href="{% url sentry-login %}">{% trans "Login" %}</a></li>
                     {% endif %}
                 </ul>
             </div>
-        </div> 
+        </div>
         {% endblock %}
     </body>
 </html>
diff --git a/sentry/web/views.py b/sentry/web/views.py
index 2491376227..d35d235fd7 100644
--- a/sentry/web/views.py
+++ b/sentry/web/views.py
@@ -197,7 +197,7 @@ def index(request):
 
     projects = get_project_list(request.user)
 
-    message_list = GroupedMessage.objects.filter(Q(projects__in=projects) | Q(project__isnull=True))
+    message_list = GroupedMessage.objects.filter(Q(project__in=projects) | Q(project__isnull=True))
 
     sort = request.GET.get('sort')
     if sort == 'date':
@@ -246,7 +246,7 @@ def ajax_handler(request):
 
         projects = get_project_list(request.user)
 
-        message_list = GroupedMessage.objects.filter(Q(projects__in=projects) | Q(project__isnull=True))
+        message_list = GroupedMessage.objects.filter(Q(project__in=projects) | Q(project__isnull=True))
 
         sort = request.GET.get('sort')
         if sort == 'date':
@@ -317,7 +317,7 @@ def ajax_handler(request):
     def clear(request):
         projects = get_project_list(request.user)
 
-        message_list = GroupedMessage.objects.filter(Q(projects__in=projects) | Q(project__isnull=True))
+        message_list = GroupedMessage.objects.filter(Q(project__in=projects) | Q(project__isnull=True))
 
         message_list.update(status=1)
 
