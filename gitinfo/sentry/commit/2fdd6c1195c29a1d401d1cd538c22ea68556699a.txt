commit 2fdd6c1195c29a1d401d1cd538c22ea68556699a
Author: David Cramer <dcramer@gmail.com>
Date:   Wed Feb 14 16:09:39 2018 -0800

    feat(signals): Log failures in send_robust

diff --git a/src/sentry/signals.py b/src/sentry/signals.py
index e4c882408a..0d5912d183 100644
--- a/src/sentry/signals.py
+++ b/src/sentry/signals.py
@@ -1,6 +1,8 @@
 from __future__ import absolute_import
 
-from django.dispatch import Signal
+import logging
+
+from django.dispatch.dispatcher import NO_RECEIVERS, Signal
 
 
 class BetterSignal(Signal):
@@ -28,6 +30,28 @@ class BetterSignal(Signal):
             wrapped.__doc__ = receiver.__doc__
         return wrapped(receiver)
 
+    def send_robust(self, sender, **named):
+        """
+        A reimplementation of send_robust which logs failures, thus recovering stacktraces.
+        """
+        responses = []
+        if not self.receivers or self.sender_receivers_cache.get(sender) is NO_RECEIVERS:
+            return responses
+
+        # Call each receiver with whatever arguments it can accept.
+        # Return a list of tuple pairs [(receiver, response), ... ].
+        for receiver in self._live_receivers(sender):
+            try:
+                response = receiver(signal=self, sender=sender, **named)
+            except Exception as err:
+                logging.error('signal.failure', extra={
+                    'receiver': repr(receiver),
+                }, exc_info=True)
+                responses.append((receiver, err))
+            else:
+                responses.append((receiver, response))
+        return responses
+
 
 regression_signal = BetterSignal(providing_args=["instance"])
 buffer_incr_complete = BetterSignal(providing_args=["model", "columns", "extra", "result"])
