commit b4b64e989e9bd87333dfd7c0aedacb249936e4a0
Author: Jess MacQueen <jess@getsentry.com>
Date:   Thu Apr 14 18:34:04 2016 -0700

    use initial avatars when gravatar not set

diff --git a/src/sentry/auth/helper.py b/src/sentry/auth/helper.py
index cd00bb46d4..4b76ab3b4a 100644
--- a/src/sentry/auth/helper.py
+++ b/src/sentry/auth/helper.py
@@ -332,6 +332,12 @@ class AuthHelper(object):
             captcha=bool(request.session.get('needs_captcha')),
         )
 
+    def _get_display_name(self, identity):
+        return identity.get('name') or identity.get('email')
+
+    def _get_identifier(self, identity):
+        return identity.get('email') or identity.get('id')
+
     def _handle_unknown_identity(self, identity):
         """
         Flow is activated upon a user logging in to where an AuthIdentity is
@@ -376,12 +382,16 @@ class AuthHelper(object):
                 return self.respond('sentry/auth-confirm-link.html', {
                     'identity': identity,
                     'existing_user': request.user,
+                    'identity_display_name': self._get_display_name(identity),
+                    'identity_identifier': self._get_identifier(identity)
                 })
 
             return self.respond('sentry/auth-confirm-identity.html', {
                 'existing_user': existing_user,
                 'identity': identity,
                 'login_form': login_form,
+                'identity_display_name': self._get_display_name(identity),
+                'identity_identifier': self._get_identifier(identity)
             })
 
         user = auth_identity.user
diff --git a/src/sentry/interfaces/user.py b/src/sentry/interfaces/user.py
index 82d17b9e7f..5359cc2d73 100644
--- a/src/sentry/interfaces/user.py
+++ b/src/sentry/interfaces/user.py
@@ -98,6 +98,12 @@ class User(Interface):
     def get_hash(self):
         return []
 
+    def get_display_name(self):
+        return self.email or self.username
+
+    def get_label(self):
+        return self.email or self.username or self.id or self.ip_address
+
     def to_email_html(self, event, **kwargs):
         context = {
             'user_id': self.id,
@@ -105,5 +111,6 @@ class User(Interface):
             'user_username': self.username,
             'user_ip_address': self.ip_address,
             'user_data': self.data,
+            'user': self,
         }
         return render_to_string('sentry/partial/interfaces/user_email.html', context)
diff --git a/src/sentry/models/authidentity.py b/src/sentry/models/authidentity.py
index 10daeffc3a..6f61e4bc07 100644
--- a/src/sentry/models/authidentity.py
+++ b/src/sentry/models/authidentity.py
@@ -47,3 +47,9 @@ class AuthIdentity(Model):
         if self.last_verified < timezone.now() - timedelta(hours=24):
             return False
         return True
+
+    def get_display_name(self):
+        return self.user.get_display_name()
+
+    def get_label(self):
+        return self.user.get_label()
diff --git a/src/sentry/models/eventuser.py b/src/sentry/models/eventuser.py
index 2cfc9f8a02..2f7b131a40 100644
--- a/src/sentry/models/eventuser.py
+++ b/src/sentry/models/eventuser.py
@@ -68,3 +68,6 @@ class EventUser(Model):
 
     def get_label(self):
         return self.email or self.username or self.ident or self.ip_address
+
+    def get_display_name(self):
+        return self.email or self.username
diff --git a/src/sentry/models/organizationmember.py b/src/sentry/models/organizationmember.py
index 0788a62777..0d4553ed2f 100644
--- a/src/sentry/models/organizationmember.py
+++ b/src/sentry/models/organizationmember.py
@@ -184,6 +184,11 @@ class OrganizationMember(Model):
             return self.user.get_display_name()
         return self.email
 
+    def get_label(self):
+        if self.user_id:
+            return self.user.get_label()
+        return self.email or self.id
+
     def get_email(self):
         if self.user_id:
             return self.user.email
diff --git a/src/sentry/models/user.py b/src/sentry/models/user.py
index aeb82c2c1c..8d430bb9cb 100644
--- a/src/sentry/models/user.py
+++ b/src/sentry/models/user.py
@@ -78,6 +78,9 @@ class User(BaseModel, AbstractBaseUser):
         warnings.warn('User.has_module_perms is deprecated', DeprecationWarning)
         return self.is_superuser
 
+    def get_label(self):
+        return self.email or self.username or self.id
+
     def get_display_name(self):
         return self.name or self.email or self.username
 
diff --git a/src/sentry/static/sentry/app/components/activity/item.jsx b/src/sentry/static/sentry/app/components/activity/item.jsx
index 73ae2aa2be..a00a1c13b1 100644
--- a/src/sentry/static/sentry/app/components/activity/item.jsx
+++ b/src/sentry/static/sentry/app/components/activity/item.jsx
@@ -189,7 +189,7 @@ const ActivityItem = React.createClass({
     }
 
     let avatar = (item.user ?
-      <Gravatar email={item.user.email} size={64} className="avatar" /> :
+      <Gravatar user={item.user} size={64} className="avatar" /> :
       <div className="avatar sentry"><span className="icon-sentry-logo"></span></div>);
 
     let author = {
diff --git a/src/sentry/static/sentry/app/components/assigneeSelector.jsx b/src/sentry/static/sentry/app/components/assigneeSelector.jsx
index ba85318fb9..974f994630 100644
--- a/src/sentry/static/sentry/app/components/assigneeSelector.jsx
+++ b/src/sentry/static/sentry/app/components/assigneeSelector.jsx
@@ -191,8 +191,7 @@ const AssigneeSelector = React.createClass({
         <MenuItem key={item.id}
                   disabled={loading}
                   onSelect={this.assignTo.bind(this, item)} >
-          <Gravatar email={item.email} className="avatar"
-                    size={48} />
+          <Gravatar user={item} className="avatar" size={48} />
           {this.highlight(item.name || item.email, this.state.filter)}
         </MenuItem>
       );
@@ -221,8 +220,7 @@ const AssigneeSelector = React.createClass({
               onOpen={this.onDropdownOpen}
               onClose={this.onDropdownClose}
               title={assignedTo ?
-                <Gravatar email={assignedTo.email} className="avatar"
-                          size={48} />
+                <Gravatar user={assignedTo} className="avatar" size={48} />
                 :
                 <span className="icon-user" />
               }>
diff --git a/src/sentry/static/sentry/app/components/events/eventRow.jsx b/src/sentry/static/sentry/app/components/events/eventRow.jsx
index dffbb7ba4f..50710e632b 100644
--- a/src/sentry/static/sentry/app/components/events/eventRow.jsx
+++ b/src/sentry/static/sentry/app/components/events/eventRow.jsx
@@ -51,7 +51,7 @@ const EventRow = React.createClass({
         <td className="event-user table-user-info">
           {event.user ?
             <div>
-              <Gravatar email={event.user.email} size={64} className="avatar" />
+              <Gravatar user={event.user} size={64} className="avatar" />
               {event.user.email}
             </div>
           :
diff --git a/src/sentry/static/sentry/app/components/events/user.jsx b/src/sentry/static/sentry/app/components/events/user.jsx
index 8dc128cfa6..807c662542 100644
--- a/src/sentry/static/sentry/app/components/events/user.jsx
+++ b/src/sentry/static/sentry/app/components/events/user.jsx
@@ -36,7 +36,9 @@ const EventUser = React.createClass({
           type="user"
           title={t('User')}>
         <div className="user-widget">
-          <div className="pull-left"><Gravatar email={user.email} size={96} /></div>
+          <div className="pull-left">
+            <Gravatar user={user} size={96} />
+          </div>
           <KeyValueList data={builtins} isContextData={false} />
           {children &&
             <KeyValueList data={children} isContextData={true} />
diff --git a/src/sentry/static/sentry/app/components/events/userReport.jsx b/src/sentry/static/sentry/app/components/events/userReport.jsx
index b3412b3e31..8caf8bfa06 100644
--- a/src/sentry/static/sentry/app/components/events/userReport.jsx
+++ b/src/sentry/static/sentry/app/components/events/userReport.jsx
@@ -17,7 +17,7 @@ const EventUserReport = React.createClass({
         <div className="activity-container">
           <ul className="activity">
             <li className="activity-note">
-              <Gravatar email={report.email} size={64} className="avatar" />
+              <Gravatar user={report} size={64} className="avatar" />
               <div className="activity-bubble">
                 <TimeSince date={report.dateCreated} />
                 <div className="activity-author">{report.name} <small>{report.email}</small></div>
diff --git a/src/sentry/static/sentry/app/components/gravatar.jsx b/src/sentry/static/sentry/app/components/gravatar.jsx
index a951ac10f6..3c7ba638e1 100644
--- a/src/sentry/static/sentry/app/components/gravatar.jsx
+++ b/src/sentry/static/sentry/app/components/gravatar.jsx
@@ -1,10 +1,11 @@
 import React from 'react';
 import $ from 'jquery';
 import MD5 from 'crypto-js/md5';
+import LetterAvatar from '../components/letterAvatar';
 
 const Gravatar = React.createClass({
   propTypes: {
-    email: React.PropTypes.string,
+    user: React.PropTypes.object,
     size: React.PropTypes.number,
     default: React.PropTypes.string,
     title: React.PropTypes.string
@@ -20,11 +21,11 @@ const Gravatar = React.createClass({
   buildGravatarUrl() {
     let url = 'https://secure.gravatar.com/avatar/';
 
-    url += MD5(this.props.email.toLowerCase());
+    url += MD5(this.props.user.email.toLowerCase());
 
     let query = {
       s: this.props.size || undefined,
-      d: this.props.default || 'mm'
+      d: this.props.default || 'blank'
     };
 
     url += '?' + $.param(query);
@@ -33,13 +34,16 @@ const Gravatar = React.createClass({
   },
 
   render() {
-    if (!this.props.email) {
-      // TODO(dcramer): return placeholder image
+    let user = this.props.user;
+    if (!user) {
       return null;
     }
 
     return (
-      <img src={this.buildGravatarUrl()} className={this.props.className} title={this.props.title}/>
+      <span className={this.props.className}>
+        <LetterAvatar user={user}/>
+        {user.email && <img src={this.buildGravatarUrl()} title={this.props.title}/>}
+      </span>
     );
   }
 });
diff --git a/src/sentry/static/sentry/app/components/header/userNav.jsx b/src/sentry/static/sentry/app/components/header/userNav.jsx
index 983e893f21..6ba2bae4ec 100644
--- a/src/sentry/static/sentry/app/components/header/userNav.jsx
+++ b/src/sentry/static/sentry/app/components/header/userNav.jsx
@@ -20,7 +20,7 @@ const UserNav = React.createClass({
     }
 
     let title = (
-      <Gravatar email={user.email} className="avatar" />
+      <Gravatar user={user} className="avatar" />
     );
 
     return (
diff --git a/src/sentry/static/sentry/app/components/letterAvatar.jsx b/src/sentry/static/sentry/app/components/letterAvatar.jsx
new file mode 100644
index 0000000000..29e0cf7294
--- /dev/null
+++ b/src/sentry/static/sentry/app/components/letterAvatar.jsx
@@ -0,0 +1,70 @@
+import React from 'react';
+
+/**
+ * Also see avatar.py. Anything changed in this file (how colors
+ * are selected, the svg, etc) will also need to be changed there.
+ */
+
+const LetterAvatar = React.createClass({
+  propTypes: {
+    user: React.PropTypes.object.isRequired
+  },
+
+  COLORS: [
+    '#25A6F7', // blue
+    '#1D87CE', // blue_dark
+    '#6FBA57', // green
+    '#4F923C', // green_dark
+    '#F8A509', // yellow_orange
+    '#E35141', // red
+    '#B64236', // red_dark
+    '#E56AA6', // pink
+    '#836CC2', // purple
+    '#6958A2', // purple_dark
+    '#44ADA0', // teal
+    '#6F7E94'  // gray
+  ],
+
+  getColor() {
+    let userId = this.getIdentifierHash();
+    return this.COLORS[userId % this.COLORS.length];
+  },
+
+  hashIdentifier(identifier) {
+    identifier += '';
+    let hash = 0;
+    for (let i = 0; i < identifier.length; i++) {
+      hash += identifier.charCodeAt(i);
+    }
+    return hash;
+  },
+
+  getIdentifierHash() {
+    let user = this.props.user;
+    let identifier = user.email || user.username || user.id || user.ip_address;
+    return this.hashIdentifier(identifier);
+  },
+
+  getDisplayName() {
+    let user = this.props.user;
+    return user.name || user.email || user.username || '?';
+  },
+
+  getInitials() {
+    let names = this.getDisplayName().split(' ');
+    let initials = names[0][0] + (names.length > 1 ? names[names.length - 1][0] : '');
+    return initials.toUpperCase();
+  },
+
+  render() {
+    return (
+      <svg viewBox="0 0 120 120" xmlns="http://www.w3.org/2000/svg" className={this.props.className}>
+        <rect x="0" y="0" width="120" height="120" rx="15" ry="15" fill={this.getColor()}/>
+        <text x="50%" y="50%" fontSize="65" style={{'dominantBaseline': 'central'}}
+              textAnchor="middle" fill="#FFFFFF">{this.getInitials()}</text>
+      </svg>
+    );
+  }
+});
+
+export default LetterAvatar;
diff --git a/src/sentry/static/sentry/app/views/groupActivity/index.jsx b/src/sentry/static/sentry/app/views/groupActivity/index.jsx
index 181e5453f7..62a18553bd 100644
--- a/src/sentry/static/sentry/app/views/groupActivity/index.jsx
+++ b/src/sentry/static/sentry/app/views/groupActivity/index.jsx
@@ -139,7 +139,7 @@ const GroupActivity = React.createClass({
 
     let children = group.activity.map((item, itemIdx) => {
       let avatar = (item.user ?
-        <Gravatar email={item.user.email} size={64} className="avatar" /> :
+        <Gravatar user={item.user} size={64} className="avatar" /> :
         <div className="avatar sentry"><span className="icon-sentry-logo"></span></div>);
 
       let author = {
@@ -177,7 +177,7 @@ const GroupActivity = React.createClass({
           <div className="activity-container">
             <ul className="activity">
               <li className="activity-note" key="activity-note">
-                <Gravatar email={me.email} size={64} className="avatar" />
+                <Gravatar user={me} size={64} className="avatar" />
                 <div className="activity-bubble">
                   <NoteInput group={group} />
                 </div>
diff --git a/src/sentry/static/sentry/app/views/groupDetails/seenBy.jsx b/src/sentry/static/sentry/app/views/groupDetails/seenBy.jsx
index 55d3056617..2f586367e4 100644
--- a/src/sentry/static/sentry/app/views/groupDetails/seenBy.jsx
+++ b/src/sentry/static/sentry/app/views/groupDetails/seenBy.jsx
@@ -39,7 +39,7 @@ const GroupSeenBy = React.createClass({
       let title = _.escape(userDisplayName(user)) + '<br/>' + _.escape(moment(user.lastSeen).format('LL'));
       return (
         <li key={userIdx} className="tip" data-title={title}>
-          <Gravatar size={52} email={user.email} />
+          <Gravatar size={52} user={user} />
         </li>
       );
     });
diff --git a/src/sentry/static/sentry/app/views/groupEvents.jsx b/src/sentry/static/sentry/app/views/groupEvents.jsx
index 48cc5f4e72..d1370157f2 100644
--- a/src/sentry/static/sentry/app/views/groupEvents.jsx
+++ b/src/sentry/static/sentry/app/views/groupEvents.jsx
@@ -156,7 +156,7 @@ const GroupEvents = React.createClass({
             <td className="event-user table-user-info">
               {event.user ?
                 <div>
-                  <Gravatar email={event.user.email} size={64} className="avatar" />
+                  <Gravatar user={event.user} size={64} className="avatar" />
                   {event.user.email}
                 </div>
               :
diff --git a/src/sentry/static/sentry/app/views/groupUserReports.jsx b/src/sentry/static/sentry/app/views/groupUserReports.jsx
index f5266eee6d..7a0f177a79 100644
--- a/src/sentry/static/sentry/app/views/groupUserReports.jsx
+++ b/src/sentry/static/sentry/app/views/groupUserReports.jsx
@@ -81,7 +81,7 @@ const GroupUserReports = React.createClass({
 
       return (
         <li className="activity-note" key={itemIdx}>
-          <Gravatar email={item.email} size={64} className="avatar" />
+          <Gravatar user={item} size={64} className="avatar" />
           <div className="activity-bubble">
             <TimeSince date={item.dateCreated} />
             <div className="activity-author">{item.name} <small>{item.email}</small></div>
diff --git a/src/sentry/static/sentry/app/views/projectEvents/index.jsx b/src/sentry/static/sentry/app/views/projectEvents/index.jsx
index fb8c22be87..a45f6e6311 100644
--- a/src/sentry/static/sentry/app/views/projectEvents/index.jsx
+++ b/src/sentry/static/sentry/app/views/projectEvents/index.jsx
@@ -162,7 +162,7 @@ const ProjectEvents = React.createClass({
           <td className="event-user table-user-info" style={{textAlign: 'right'}}>
             {event.user ?
               <div>
-                <Gravatar email={event.user.email} size={64} className="avatar" />
+                <Gravatar user={event.user} size={64} className="avatar" />
                 {event.user.email}
               </div>
             :
diff --git a/src/sentry/static/sentry/app/views/projectUserReports.jsx b/src/sentry/static/sentry/app/views/projectUserReports.jsx
index 7345feee45..0848f0be16 100644
--- a/src/sentry/static/sentry/app/views/projectUserReports.jsx
+++ b/src/sentry/static/sentry/app/views/projectUserReports.jsx
@@ -164,7 +164,7 @@ const ProjectUserReports = React.createClass({
           <div className="activity-container" style={{margin: '10px 0 5px'}}>
             <ul className="activity">
               <li className="activity-note" style={{paddingBottom: 0}}>
-                <Gravatar email={item.email} size={64} className="avatar" />
+                <Gravatar user={item} size={64} className="avatar" />
                 <div className="activity-bubble">
                   <TimeSince date={item.dateCreated} />
                   <div className="activity-author">{item.name} <small>{item.email}</small></div>
diff --git a/src/sentry/static/sentry/app/views/teamMembers.jsx b/src/sentry/static/sentry/app/views/teamMembers.jsx
index a81ddff728..2f5e4fa2d6 100644
--- a/src/sentry/static/sentry/app/views/teamMembers.jsx
+++ b/src/sentry/static/sentry/app/views/teamMembers.jsx
@@ -97,7 +97,7 @@ const TeamMembers = React.createClass({
               return (
                 <tr>
                   <td className="table-user-info">
-                    <Gravatar email={member.email} size={80} />
+                    <Gravatar user={member} size={80} />
                     <h5><a href={`${memberPrefix}/${member.id}/`}>{member.email}</a></h5>
                     {member.email}
                   </td>
diff --git a/src/sentry/static/sentry/less/auth.less b/src/sentry/static/sentry/less/auth.less
index 24df286b3d..bb176d1c07 100644
--- a/src/sentry/static/sentry/less/auth.less
+++ b/src/sentry/static/sentry/less/auth.less
@@ -107,9 +107,8 @@ section.org-login {
   text-align: center;
   margin-bottom: 20px;
 
-  .merge-avatar {
+  .avatar {
     width: 36px;
     height: 36px;
-    display: inline-block;
   }
 }
diff --git a/src/sentry/static/sentry/less/group-detail.less b/src/sentry/static/sentry/less/group-detail.less
index 494c00f313..46c579aa26 100644
--- a/src/sentry/static/sentry/less/group-detail.less
+++ b/src/sentry/static/sentry/less/group-detail.less
@@ -232,8 +232,9 @@
       float: left;
       margin-left: 5px;
 
-      img {
-        border-radius: 2px;
+      .avatar {
+        display: inline-block;
+        position: relative;
         .square(28px);
       }
     }
@@ -675,7 +676,6 @@
         font-size: 14px;
 
         .avatar {
-          border-radius: 3px;
           .square(30px);
           position: absolute;
           top: 2px;
diff --git a/src/sentry/static/sentry/less/shared-components.less b/src/sentry/static/sentry/less/shared-components.less
index a71d463e09..8c4e542259 100644
--- a/src/sentry/static/sentry/less/shared-components.less
+++ b/src/sentry/static/sentry/less/shared-components.less
@@ -614,6 +614,15 @@ table.integrations {
   height: 20px;
   vertical-align: middle;
   border-radius: 2px;
+  position: relative;
+  display: inline-block;
+
+    svg, img {
+      position: absolute;
+      top: 0px;
+      left: 0px;
+      border-radius: 3px;
+    }
 }
 
 /**
@@ -1503,7 +1512,6 @@ table.integrations {
     display: inline-block;
     width: 24px;
     height: 24px;
-    border-radius: 4px;
     position: relative;
     left: -2px;
     top: -1px;
@@ -1575,7 +1583,7 @@ table.integrations {
         text-overflow: ellipsis;
         text-align: left;
 
-        img {
+        span.avatar {
           margin-right: 5px;
           position: absolute;
           left: 8px;
diff --git a/src/sentry/templates/sentry/account/settings.html b/src/sentry/templates/sentry/account/settings.html
index c54d828981..7a36720684 100644
--- a/src/sentry/templates/sentry/account/settings.html
+++ b/src/sentry/templates/sentry/account/settings.html
@@ -27,7 +27,10 @@
         <fieldset class="control-group">
             <label>Avatar</label>
             <div class="controls">
-                <img class="avatar" src="{% gravatar_url user.email size 32 %}">
+                <span class="avatar">
+                    {% letter_avatar_svg user.get_display_name user.get_label %}
+                    <img src="{% gravatar_url user.email size 32 default 'blank' %}">
+                </span>
                 <a href="http://gravatar.com/">Change your avatar at Gravatar.com</a>
             </div>
         </fieldset>
diff --git a/src/sentry/templates/sentry/auth-confirm-identity.html b/src/sentry/templates/sentry/auth-confirm-identity.html
index f262961eff..589e9187f6 100644
--- a/src/sentry/templates/sentry/auth-confirm-identity.html
+++ b/src/sentry/templates/sentry/auth-confirm-identity.html
@@ -9,10 +9,16 @@
 {% block auth_main %}
   {% if existing_user %}
     <div class="sso-link">
-      <img src="{% gravatar_url existing_user.email size 36 %}" class="merge-avatar avatar">
+      <span class="avatar">
+        {% letter_avatar_svg existing_user.get_display_name existing_user.get_label %}
+        <img src="{% gravatar_url existing_user.email size 36 default 'blank' %}">
+      </span>
       <span class="icon-arrow-right"></span>
       <span class="icon-arrow-left"></span>
-      <img src="{% gravatar_url identity.email size 36 %}" class="merge-avatar avatar">
+      <span class="avatar">
+        {% letter_avatar_svg identity_display_name identity_identifier %}
+        <img src="{% gravatar_url identity.email size 36 default 'blank' %}" class="avatar">
+      </span>
     </div>
 
     <form class="form-stacked" action="" method="post" autocomplete="off">
@@ -39,7 +45,10 @@
       {% csrf_token %}
 
       <div class="sso-link">
-        <img src="{% gravatar_url identity.email size 36 %}" class="merge-avatar avatar">
+        <span class="avatar">
+          {% letter_avatar_svg identity_display_name identity_identifier %}
+          <img src="{% gravatar_url identity.email size 36 default 'blank' %}" class="avatar">
+        </span>
       </div>
 
       <div class="align-center">
diff --git a/src/sentry/templates/sentry/auth-confirm-link.html b/src/sentry/templates/sentry/auth-confirm-link.html
index 4ee36f0270..0f2cc91d1f 100644
--- a/src/sentry/templates/sentry/auth-confirm-link.html
+++ b/src/sentry/templates/sentry/auth-confirm-link.html
@@ -11,10 +11,16 @@
     {% csrf_token %}
 
     <div class="sso-link">
-      <img src="{% gravatar_url existing_user.email size 36 %}" class="merge-avatar avatar">
+      <span class="avatar">
+        {% letter_avatar_svg existing_user.get_display_name existing_user.get_label %}
+        <img src="{% gravatar_url existing_user.email size 36 default 'blank' %}">
+      </span>
       <span class="icon-arrow-right"></span>
       <span class="icon-arrow-left"></span>
-      <img src="{% gravatar_url identity.email size 36 %}" class="merge-avatar avatar">
+      <span class="avatar">
+        {% letter_avatar_svg identity_display_name identity_identifier %}
+        <img src="{% gravatar_url identity.email size 36 default 'blank' %}">
+      </span>
     </div>
 
     <div class="align-center">
diff --git a/src/sentry/templates/sentry/emails/activity/assigned.html b/src/sentry/templates/sentry/emails/activity/assigned.html
index 9703c01a6f..54b44441d5 100644
--- a/src/sentry/templates/sentry/emails/activity/assigned.html
+++ b/src/sentry/templates/sentry/emails/activity/assigned.html
@@ -16,7 +16,7 @@
   <h2>Assigned</h2>
 
   <p>
-    <strong><img class="avatar" width="20" height="20" src="{% gravatar_url author.email size 40 %}" style="border-radius: 3px; margin-right: 5px; vertical-align: bottom">{{ author.get_display_name }}</strong> assigned this issue to you in <strong>{{ group.organization.name }}/{{ group.project.name }}</strong>.
+    <strong><span class="avatar-container">{% letter_avatar_svg author.get_display_name author.get_label %}<img class="avatar" width="20" height="20" src="{% gravatar_url author.email size 40 default 'blank' %}"></span>{{ author.get_display_name }}</strong> assigned this issue to you in <strong>{{ group.organization.name }}/{{ group.project.name }}</strong>.
   </p>
 
   {% include "sentry/emails/group_header.html" %}
diff --git a/src/sentry/templates/sentry/emails/activity/note.html b/src/sentry/templates/sentry/emails/activity/note.html
index 564335e6ba..d9e2864ee3 100644
--- a/src/sentry/templates/sentry/emails/activity/note.html
+++ b/src/sentry/templates/sentry/emails/activity/note.html
@@ -18,7 +18,10 @@
   <table class="note">
     <tr>
       <td class="avatar-column">
-        <img class="avatar" width="48" height="48" src="{% gravatar_url author.email size 96 %}">
+        <span>{% letter_avatar_svg author.get_display_name author.get_label size 48 %}</span>
+        <span>
+          <img class="avatar" width="48" height="48" src="{% gravatar_url author.email size 96 default 'blank' %}">
+        </span>
       </td>
       <td class="notch-column">
         <img width="7" height="48" src="{% absolute_asset_url 'sentry' 'images/email/avatar-notch.png' %}">
diff --git a/src/sentry/templates/sentry/emails/email-styles.html b/src/sentry/templates/sentry/emails/email-styles.html
index daed85f3b5..3766114625 100644
--- a/src/sentry/templates/sentry/emails/email-styles.html
+++ b/src/sentry/templates/sentry/emails/email-styles.html
@@ -388,6 +388,14 @@
   .avatar-column {
     width: 60px;
     vertical-align: top;
+    position: relative;
+  }
+  .avatar-column span,
+  .avatar-container svg,
+  .avatar-container img {
+    position: absolute;
+    top: 0px;
+    left: 0px;
   }
   .notch-column {
     width: 7px;
@@ -397,6 +405,14 @@
   .notch-column img {
     display: block;
   }
+  .avatar-container {
+    width: 20px;
+    height: 20px;
+    margin-right: 5px;
+    position: relative;
+    display: inline-block;
+    vertical-align: bottom;
+  }
   .avatar {
     border-radius: 3px;
   }
diff --git a/src/sentry/templates/sentry/layout.html b/src/sentry/templates/sentry/layout.html
index 7c6f5fa841..5edde2876d 100644
--- a/src/sentry/templates/sentry/layout.html
+++ b/src/sentry/templates/sentry/layout.html
@@ -76,8 +76,9 @@
         <div class="pull-right">
           <div class="dropdown">
             <a class="dropdown-toggle" data-toggle="dropdown">
-              <span>
-                <img src="{% gravatar_url user.email size 72 %}" class="avatar">
+              <span class="avatar">
+                {% letter_avatar_svg request.user.get_display_name request.user.get_label %}
+                <img src="{% gravatar_url user.email size 72 default 'blank' %}">
               </span>
               <i class="icon-arrow-down"></i>
             </a>
diff --git a/src/sentry/templates/sentry/organization-audit-log.html b/src/sentry/templates/sentry/organization-audit-log.html
index 5c4ab9cc66..59a5346d66 100644
--- a/src/sentry/templates/sentry/organization-audit-log.html
+++ b/src/sentry/templates/sentry/organization-audit-log.html
@@ -30,7 +30,10 @@
           <tr>
             <td class="table-user-info">
               {% if entry.actor %}
-                <img class="avatar" src="{% gravatar_url entry.actor.email size 72 %}" />
+                <span class="avatar">
+                  {% letter_avatar_svg entry.actor.get_display_name entry.actor.get_label %}
+                  <img src="{% gravatar_url entry.actor.email size 72 default 'blank' %}" />
+                </span>
               {% endif %}
               <h5>{{ entry.get_actor_name }}</h5>
               {{ entry.get_note }}
diff --git a/src/sentry/templates/sentry/organization-members.html b/src/sentry/templates/sentry/organization-members.html
index 8bfb987380..eccf240c6c 100644
--- a/src/sentry/templates/sentry/organization-members.html
+++ b/src/sentry/templates/sentry/organization-members.html
@@ -74,7 +74,10 @@
       {% for member, needs_sso in member_list %}
         <tr>
           <td class="table-user-info">
-            <img class="avatar" src="{% gravatar_url member.get_email size 80 %}">
+            <span class="avatar">
+              {% letter_avatar_svg member.get_display_name member.get_label %}
+              <img src="{% gravatar_url member.get_email size 80 default 'blank' %}">
+            </span>
             <h5><a href="{% url 'sentry-organization-member-settings' organization.slug member.id %}">
               {{ member.get_display_name }}
             </a></h5>
diff --git a/src/sentry/templates/sentry/partial/interfaces/user_email.html b/src/sentry/templates/sentry/partial/interfaces/user_email.html
index 3574ea1c51..517d4fe169 100644
--- a/src/sentry/templates/sentry/partial/interfaces/user_email.html
+++ b/src/sentry/templates/sentry/partial/interfaces/user_email.html
@@ -45,7 +45,10 @@
     </td>
     {% if user_email %}
       <td style="padding-top:5px; width:64px; vertical-align:top; text-align: right;">
-        <img src="{% gravatar_url user_email size 64 %}" style="border-radius: 3px;">
+        <span class="avatar-container" style="width: inherit;">
+          {% letter_avatar_svg user.get_display_name user.get_label %}
+          <img src="{% gravatar_url user_email size 64 default 'blank' %}" style="border-radius: 3px;">
+        </span>
       </td>
     {% endif %}
   </tr>
diff --git a/src/sentry/templatetags/sentry_helpers.py b/src/sentry/templatetags/sentry_helpers.py
index c1c764a9b0..f88a557ad7 100644
--- a/src/sentry/templatetags/sentry_helpers.py
+++ b/src/sentry/templatetags/sentry_helpers.py
@@ -38,7 +38,7 @@ from sentry.constants import EVENTS_PER_PAGE
 from sentry.models import Organization
 from sentry.utils import json
 from sentry.utils.strings import to_unicode
-from sentry.utils.avatar import get_gravatar_url
+from sentry.utils.avatar import get_gravatar_url, get_letter_avatar
 from sentry.utils.javascript import to_json
 from sentry.utils.strings import (
     soft_break as _soft_break,
@@ -301,6 +301,13 @@ def gravatar_url(context, email, size=None, default='mm'):
     return get_gravatar_url(email, size, default)
 
 
+@tag(register, [Variable('display_name'),
+                Variable('identifier'),
+                Optional([Constant('size'), Variable('size')])])
+def letter_avatar_svg(context, display_name, identifier, size=None):
+    return get_letter_avatar(display_name, identifier, size=size)
+
+
 @register.filter
 def trim_schema(value):
     return value.split('//', 1)[-1]
diff --git a/src/sentry/utils/avatar.py b/src/sentry/utils/avatar.py
index 8a50ac745a..0cbba70272 100644
--- a/src/sentry/utils/avatar.py
+++ b/src/sentry/utils/avatar.py
@@ -4,12 +4,16 @@ sentry.utils.avatar
 
 :copyright: (c) 2010-2014 by the Sentry Team, see AUTHORS for more details.
 :license: BSD, see LICENSE for more details.
+
+Note: also see letterAvatar.jsx. Anything changed in this file (how colors are
+selected, the svg, etc) will also need to be changed there.
 """
 from __future__ import absolute_import
 
 import urllib
 
 from django.conf import settings
+from django.utils.html import escape
 
 from sentry.utils.hashlib import md5
 
@@ -27,3 +31,47 @@ def get_gravatar_url(email, size=None, default='mm'):
         gravatar_url += "?" + urllib.urlencode(properties)
 
     return gravatar_url
+
+
+LETTER_AVATAR_COLORS = [
+    '#25A6F7',  # blue
+    '#1D87CE',  # blue_dark
+    '#6FBA57',  # green
+    '#4F923C',  # green_dark
+    '#F8A509',  # yellow_orange
+    '#E35141',  # red
+    '#B64236',  # red_dark
+    '#E56AA6',  # pink
+    '#836CC2',  # purple
+    '#6958A2',  # purple_dark
+    '#44ADA0',  # teal
+    '#6F7E94'   # gray
+]
+
+
+COLOR_COUNT = len(LETTER_AVATAR_COLORS)
+
+
+def hash_user_identifier(identifier):
+    return sum(map(ord, str(identifier)))
+
+
+def get_letter_avatar_color(identifier):
+    hashed_id = hash_user_identifier(identifier)
+    return LETTER_AVATAR_COLORS[hashed_id % COLOR_COUNT]
+
+
+def get_letter_avatar(display_name, identifier, size=None):
+    display_name = display_name or '?'
+    names = display_name.split(' ')
+    initials = '%s%s' % (names[0][0], names[-1][0] if len(names) > 1 else '')
+    initials = escape(initials.upper())
+    color = get_letter_avatar_color(identifier)
+    size_attrs = 'height="%s" width="%s"' % (size, size) if size else ''
+    return (
+        u'<svg viewBox="0 0 120 120" xmlns="http://www.w3.org/2000/svg" {size_attrs}>'
+        '<rect x="0" y="0" width="120" height="120" rx="15" ry="15" fill={color}></rect>'
+        '<text x="50%" y="50%" font-size="65" dominant-baseline="central" text-anchor="middle" fill="#FFFFFF">'
+        '{initials}'
+        '</text>'
+        '</svg>').format(color=color, initials=initials, size_attrs=size_attrs)
diff --git a/src/sentry/web/frontend/debug/debug_auth_views.py b/src/sentry/web/frontend/debug/debug_auth_views.py
new file mode 100644
index 0000000000..0d7a4fd7f4
--- /dev/null
+++ b/src/sentry/web/frontend/debug/debug_auth_views.py
@@ -0,0 +1,37 @@
+from __future__ import absolute_import
+
+from django.views.generic import View
+
+from sentry.models import User
+from sentry.web.helpers import render_to_response
+
+
+class DebugAuthConfirmIdentity(View):
+    def get(self, request):
+        auth_identity = {
+            'id': 'bar@example.com',
+            'email': 'bar@example.com',
+        }
+        return render_to_response('sentry/auth-confirm-identity.html', {
+            'existing_user': User(email='foo@example.com'),
+            'identity': auth_identity,
+            'login_form': None,
+            'request': request,
+            'identity_display_name': auth_identity['email'],
+            'identity_identifier': auth_identity['id']
+        })
+
+
+class DebugAuthConfirmLink(View):
+    def get(self, request):
+        auth_identity = {
+            'id': 'bar@example.com',
+            'email': 'bar@example.com',
+        }
+        return render_to_response('sentry/auth-confirm-link.html', {
+            'existing_user': User(email='foo@example.com'),
+            'identity': auth_identity,
+            'request': request,
+            'identity_display_name': auth_identity['email'],
+            'identity_identifier': auth_identity['id']
+        })
diff --git a/src/sentry/web/frontend/debug/mail.py b/src/sentry/web/frontend/debug/mail.py
index 77791e05ff..f6976fe7aa 100644
--- a/src/sentry/web/frontend/debug/mail.py
+++ b/src/sentry/web/frontend/debug/mail.py
@@ -217,9 +217,9 @@ def assigned(request):
         data=load_data('python'),
     )
     assigned = Activity(
-        group=event.group, event=event, project=event.project,
+        group=event.group, project=event.project,
         type=Activity.ASSIGNED, user=request.user,
-        data={'text': 'This is an example note!'},
+        data={'text': 'This is an example note!', 'assignee': 'foo@example.com'},
     )
 
     return MailPreview(
diff --git a/src/sentry/web/urls.py b/src/sentry/web/urls.py
index 24c297c645..03ff840c5d 100644
--- a/src/sentry/web/urls.py
+++ b/src/sentry/web/urls.py
@@ -101,6 +101,7 @@ if settings.DEBUG:
     from sentry.web.frontend.debug.debug_trigger_error import DebugTriggerErrorView
     from sentry.web.frontend.debug.debug_error_embed import DebugErrorPageEmbedView
     from sentry.web.frontend.debug.debug_new_release_email import DebugNewReleaseEmailView
+    from sentry.web.frontend.debug import debug_auth_views
 
     urlpatterns += patterns(
         '',
@@ -124,6 +125,10 @@ if settings.DEBUG:
             DebugErrorPageEmbedView.as_view()),
         url(r'^debug/trigger-error/$',
             DebugTriggerErrorView.as_view()),
+        url(r'^debug/auth-confirm-identity/$',
+            debug_auth_views.DebugAuthConfirmIdentity.as_view()),
+        url(r'^debug/auth-confirm-link/$',
+            debug_auth_views.DebugAuthConfirmLink.as_view()),
     )
 
 urlpatterns += patterns(
diff --git a/tests/js/spec/components/lettarAvatar.spec.jsx b/tests/js/spec/components/lettarAvatar.spec.jsx
new file mode 100644
index 0000000000..cfe415fcd5
--- /dev/null
+++ b/tests/js/spec/components/lettarAvatar.spec.jsx
@@ -0,0 +1,71 @@
+import React from 'react';
+import TestUtils from 'react-addons-test-utils';
+import LetterAvatar from 'app/components/letterAvatar';
+
+describe('LetterAvatar', function() {
+  const USER_1 = {
+    id: 1,
+    name: 'Jane Doe',
+    email: 'janedoe@example.com'
+  };
+  const USER_2 = {
+    id: 2,
+    email: 'johnsmith@example.com'
+  };
+  const USER_3 = {
+    id: 2,
+    username: 'foo@example.com'
+  };
+  const USER_4 = {
+    id: 2
+  };
+  const USER_5 = {
+    ip_address: '127.0.0.1'
+  };
+
+  describe('getInitials()', function() {
+    it('should get initials based on name', function() {
+      this.letterAvatar = TestUtils.renderIntoDocument(<LetterAvatar user={USER_1}/>);
+      expect(this.letterAvatar.getInitials()).to.eql('JD');
+    });
+
+    it('should get initials based on email', function() {
+      this.letterAvatar = TestUtils.renderIntoDocument(<LetterAvatar user={USER_2}/>);
+      expect(this.letterAvatar.getInitials()).to.eql('J');
+    });
+
+    it('should get initials based on username', function() {
+      this.letterAvatar = TestUtils.renderIntoDocument(<LetterAvatar user={USER_3}/>);
+      expect(this.letterAvatar.getInitials()).to.eql('F');
+    });
+
+    it('should get show question mark if user has no display name', function() {
+      this.letterAvatar = TestUtils.renderIntoDocument(<LetterAvatar user={USER_4}/>);
+      expect(this.letterAvatar.getInitials()).to.eql('?');
+    });
+  });
+
+
+  describe('getColor()', function() {
+    it('should return a color based on email', function() {
+      this.letterAvatar = TestUtils.renderIntoDocument(<LetterAvatar user={USER_1}/>);
+      expect(this.letterAvatar.getColor()).to.eql('#E56AA6');
+    });
+
+    it('should return a color based on username', function() {
+      this.letterAvatar = TestUtils.renderIntoDocument(<LetterAvatar user={USER_3}/>);
+      expect(this.letterAvatar.getColor()).to.eql('#1D87CE');
+    });
+
+    it('should return a color based on id', function() {
+      this.letterAvatar = TestUtils.renderIntoDocument(<LetterAvatar user={USER_4}/>);
+      expect(this.letterAvatar.getColor()).to.eql('#6FBA57');
+    });
+
+    it('should return a color based on ip address', function() {
+      this.letterAvatar = TestUtils.renderIntoDocument(<LetterAvatar user={USER_5}/>);
+      expect(this.letterAvatar.getColor()).to.eql('#E35141');
+    });
+  });
+
+});
diff --git a/tests/sentry/utils/test_letter_avatar.py b/tests/sentry/utils/test_letter_avatar.py
new file mode 100644
index 0000000000..1345491a0e
--- /dev/null
+++ b/tests/sentry/utils/test_letter_avatar.py
@@ -0,0 +1,18 @@
+from sentry.utils.avatar import get_letter_avatar
+
+
+def test_letter_avatar():
+    # Test name as display name and email as identifier
+    letter_avatar = get_letter_avatar('Jane Doe', 'janedoe@example.com')
+    assert 'JD' in letter_avatar
+    assert '#E56AA6' in letter_avatar
+
+    # Test email as display name and id as identifier
+    letter_avatar = get_letter_avatar('johnsmith@example.com', 2)
+    assert 'J' in letter_avatar
+    assert '#6FBA57' in letter_avatar
+
+    # Test no display name and ip address as identifier
+    letter_avatar = get_letter_avatar(None, '127.0.0.1')
+    assert '?' in letter_avatar
+    assert '#E35141' in letter_avatar
