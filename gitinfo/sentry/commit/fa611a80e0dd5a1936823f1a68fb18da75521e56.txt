commit fa611a80e0dd5a1936823f1a68fb18da75521e56
Author: David Cramer <dcramer@gmail.com>
Date:   Tue Oct 14 13:02:51 2014 +0100

    Store protocol version with events

diff --git a/src/sentry/event_manager.py b/src/sentry/event_manager.py
index 96976bed9f..e9ee9e83d9 100644
--- a/src/sentry/event_manager.py
+++ b/src/sentry/event_manager.py
@@ -122,14 +122,17 @@ class ScoreClause(object):
 
 
 class EventManager(object):
-    def __init__(self, data):
+    def __init__(self, data, version='5'):
         self.data = data
+        self.version = version
 
     def normalize(self):
         # TODO(dcramer): store http.env.REMOTE_ADDR as user.ip
         # First we pull out our top-level (non-data attr) kwargs
         data = self.data
 
+        data['version'] = self.version
+
         if not isinstance(data.get('level'), (six.string_types, int)):
             data['level'] = logging.ERROR
         elif data['level'] not in LOG_LEVELS:
diff --git a/src/sentry/models/event.py b/src/sentry/models/event.py
index 870147cf3c..952e7aefa1 100644
--- a/src/sentry/models/event.py
+++ b/src/sentry/models/event.py
@@ -75,6 +75,10 @@ class Event(Model):
     def team(self):
         return self.project.team
 
+    @property
+    def version(self):
+        return self.data.get('version', '5')
+
     @memoize
     def ip_address(self):
         http_data = self.data.get('sentry.interfaces.Http')
diff --git a/src/sentry/web/api.py b/src/sentry/web/api.py
index 08097179e8..59028e1803 100644
--- a/src/sentry/web/api.py
+++ b/src/sentry/web/api.py
@@ -340,7 +340,7 @@ class StoreView(APIView):
             raise APIError(u'Invalid data: %s (%s)' % (six.text_type(e), type(e)))
 
         # mutates data
-        manager = EventManager(data)
+        manager = EventManager(data, version=auth.version)
         data = manager.normalize()
 
         # insert IP address if not available
diff --git a/tests/sentry/test_event_manager.py b/tests/sentry/test_event_manager.py
index e2c712e4ba..53cabf168a 100644
--- a/tests/sentry/test_event_manager.py
+++ b/tests/sentry/test_event_manager.py
@@ -169,6 +169,16 @@ class EventManagerTest(TestCase):
         data = manager.normalize()
         assert len(data['message']) == settings.SENTRY_MAX_MESSAGE_LENGTH
 
+    def test_default_version(self):
+        manager = EventManager(self.make_event())
+        data = manager.normalize()
+        assert data['version'] == '5'
+
+    def test_explicit_version(self):
+        manager = EventManager(self.make_event(), '6')
+        data = manager.normalize()
+        assert data['version'] == '6'
+
 
 class GetHashesFromEventTest(TestCase):
     @patch('sentry.interfaces.stacktrace.Stacktrace.compute_hashes')
