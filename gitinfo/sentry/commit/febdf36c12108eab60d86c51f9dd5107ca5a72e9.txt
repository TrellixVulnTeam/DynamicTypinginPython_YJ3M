commit febdf36c12108eab60d86c51f9dd5107ca5a72e9
Author: Jess MacQueen <jessmacqueen@gmail.com>
Date:   Thu Apr 12 15:05:00 2018 -0700

    feat(avatars): Add organiation avatar photo view

diff --git a/src/sentry/conf/server.py b/src/sentry/conf/server.py
index 9cdef68335..c3f6803753 100644
--- a/src/sentry/conf/server.py
+++ b/src/sentry/conf/server.py
@@ -266,7 +266,7 @@ STATIC_URL = '/_static/{version}/'
 
 # various middleware will use this to identify resources which should not access
 # cookies
-ANONYMOUS_STATIC_PREFIXES = ('/_static/', '/avatar/')
+ANONYMOUS_STATIC_PREFIXES = ('/_static/', '/avatar/', '/organization-avatar/')
 
 STATICFILES_FINDERS = (
     "django.contrib.staticfiles.finders.FileSystemFinder",
diff --git a/src/sentry/constants.py b/src/sentry/constants.py
index ab94b5fb67..7c18dc53a1 100644
--- a/src/sentry/constants.py
+++ b/src/sentry/constants.py
@@ -86,7 +86,7 @@ RESERVED_ORGANIZATION_SLUGS = frozenset(
         'pricing', 'subscribe', 'enterprise', 'about', 'jobs', 'thanks', 'guide', 'privacy',
         'security', 'terms', 'from', 'sponsorship', 'for', 'at', 'platforms', 'branding', 'vs',
         'answers', '_admin', 'support', 'contact', 'onboarding', 'ext', 'extension', 'extensions',
-        'plugins', 'themonitor', 'settings', 'legal',
+        'plugins', 'themonitor', 'settings', 'legal', 'avatar', 'organization-avatar',
     )
 )
 
diff --git a/src/sentry/middleware/user.py b/src/sentry/middleware/user.py
index 9ccc4a8cba..00f451108b 100644
--- a/src/sentry/middleware/user.py
+++ b/src/sentry/middleware/user.py
@@ -7,7 +7,9 @@ from django.utils import timezone
 
 class UserActiveMiddleware(object):
     disallowed_paths = (
-        'sentry.web.frontend.generic.static_media', 'sentry.web.frontend.user_avatar',
+        'sentry.web.frontend.generic.static_media',
+        'sentry.web.frontend.user_avatar',
+        'sentry.web.frontend.organization_avatar',
     )
 
     def process_view(self, request, view_func, view_args, view_kwargs):
diff --git a/src/sentry/web/frontend/organization_avatar.py b/src/sentry/web/frontend/organization_avatar.py
new file mode 100644
index 0000000000..8dd8678d60
--- /dev/null
+++ b/src/sentry/web/frontend/organization_avatar.py
@@ -0,0 +1,8 @@
+from __future__ import absolute_import
+
+from sentry.models import OrganizationAvatar
+from sentry.web.frontend.base import AvatarPhotoView
+
+
+class OrganizationAvatarPhotoView(AvatarPhotoView):
+    model = OrganizationAvatar
diff --git a/src/sentry/web/urls.py b/src/sentry/web/urls.py
index 204c5b5db0..7d79852c9b 100644
--- a/src/sentry/web/urls.py
+++ b/src/sentry/web/urls.py
@@ -36,6 +36,7 @@ from sentry.web.frontend.mailgun_inbound_webhook import \
 from sentry.web.frontend.oauth_authorize import OAuthAuthorizeView
 from sentry.web.frontend.oauth_token import OAuthTokenView
 from sentry.auth.providers.saml2 import SAML2AcceptACSView, SAML2SLSView, SAML2MetadataView
+from sentry.web.frontend.organization_avatar import OrganizationAvatarPhotoView
 from sentry.web.frontend.organization_auth_settings import \
     OrganizationAuthSettingsView
 from sentry.web.frontend.organization_integration_setup import \
@@ -440,6 +441,11 @@ urlpatterns += patterns(
         TransferProjectView.as_view(),
         name='sentry-transfer-project'
     ),
+    url(
+        r'^organization-avatar/(?P<avatar_id>[^\/]+)/$',
+        OrganizationAvatarPhotoView.as_view(),
+        name='sentry-organization-avatar-url'
+    ),
     url(
         r'^avatar/(?P<avatar_id>[^\/]+)/$',
         UserAvatarPhotoView.as_view(),
diff --git a/tests/sentry/web/frontend/test_organization_avatar.py b/tests/sentry/web/frontend/test_organization_avatar.py
new file mode 100644
index 0000000000..b22be2884b
--- /dev/null
+++ b/tests/sentry/web/frontend/test_organization_avatar.py
@@ -0,0 +1,22 @@
+from __future__ import absolute_import
+
+from django.core.urlresolvers import reverse
+from six import BytesIO
+
+from sentry.models import File, OrganizationAvatar
+from sentry.testutils import TestCase
+from sentry.web.frontend.generic import FOREVER_CACHE
+
+
+class OrganizationAvatarTest(TestCase):
+    def test_headers(self):
+        org = self.create_organization()
+        photo = File.objects.create(name='test.png', type='avatar.file')
+        photo.putfile(BytesIO(b'test'))
+        avatar = OrganizationAvatar.objects.create(organization=org, file=photo)
+        url = reverse('sentry-organization-avatar-url', kwargs={'avatar_id': avatar.ident})
+        response = self.client.get(url)
+        assert response.status_code == 200
+        assert response['Cache-Control'] == FOREVER_CACHE
+        assert response.get('Vary') is None
+        assert response.get('Set-Cookie') is None
