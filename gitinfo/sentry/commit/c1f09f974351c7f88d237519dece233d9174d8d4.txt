commit c1f09f974351c7f88d237519dece233d9174d8d4
Author: David Cramer <dcramer@gmail.com>
Date:   Mon Mar 9 21:59:44 2015 -0700

    Add organization member list endpoint

diff --git a/src/sentry/api/endpoints/organization_member_index.py b/src/sentry/api/endpoints/organization_member_index.py
new file mode 100644
index 0000000000..8f23843468
--- /dev/null
+++ b/src/sentry/api/endpoints/organization_member_index.py
@@ -0,0 +1,23 @@
+from __future__ import absolute_import
+
+from rest_framework.response import Response
+
+from sentry.api.bases.organization import OrganizationEndpoint
+from sentry.api.serializers import serialize
+from sentry.models import OrganizationMember
+
+
+class OrganizationMemberIndexEndpoint(OrganizationEndpoint):
+    def get(self, request, organization):
+        queryset = OrganizationMember.objects.filter(
+            organization=organization,
+        ).select_related('user')
+
+        member_list = sorted(
+            queryset,
+            key=lambda x: x.user.get_display_name() if x.user_id else x.email
+        )
+
+        context = serialize(member_list, request.user)
+
+        return Response(context)
diff --git a/src/sentry/api/serializers/models/organization_member.py b/src/sentry/api/serializers/models/organization_member.py
index bf9498747a..7e7e6e71ab 100644
--- a/src/sentry/api/serializers/models/organization_member.py
+++ b/src/sentry/api/serializers/models/organization_member.py
@@ -2,7 +2,6 @@ from __future__ import absolute_import
 
 from sentry.api.serializers import Serializer, register
 from sentry.models import OrganizationMember
-from sentry.utils.avatar import get_gravatar_url
 
 
 @register(OrganizationMember)
@@ -10,14 +9,13 @@ class OrganizationMemberSerializer(Serializer):
     def serialize(self, obj, attrs, user):
         d = {
             'id': str(obj.id),
-            'email': obj.email or obj.user.email,
+            'email': obj.get_email(),
             'access': obj.get_type_display(),
             'pending': obj.is_pending,
             'flags': {
-                'sso:linked': getattr(obj.flags, 'sso:linked'),
-                'sso:invalid': getattr(obj.flags, 'sso:invalid'),
+                'sso:linked': bool(getattr(obj.flags, 'sso:linked')),
+                'sso:invalid': bool(getattr(obj.flags, 'sso:invalid')),
             },
             'dateCreated': obj.date_added,
-            'avatarUrl': get_gravatar_url(obj.email, size=32),
         }
         return d
diff --git a/src/sentry/api/urls.py b/src/sentry/api/urls.py
index 1719218fcc..696673e75c 100644
--- a/src/sentry/api/urls.py
+++ b/src/sentry/api/urls.py
@@ -20,6 +20,7 @@ from .endpoints.index import IndexEndpoint
 from .endpoints.legacy_project_redirect import LegacyProjectRedirectEndpoint
 from .endpoints.organization_details import OrganizationDetailsEndpoint
 from .endpoints.organization_member_details import OrganizationMemberDetailsEndpoint
+from .endpoints.organization_member_index import OrganizationMemberIndexEndpoint
 from .endpoints.organization_index import OrganizationIndexEndpoint
 from .endpoints.organization_projects import OrganizationProjectsEndpoint
 from .endpoints.organization_stats import OrganizationStatsEndpoint
@@ -67,6 +68,9 @@ urlpatterns = patterns(
     url(r'^organizations/(?P<organization_slug>[^\/]+)/$',
         OrganizationDetailsEndpoint.as_view(),
         name='sentry-api-0-organization-details'),
+    url(r'^organizations/(?P<organization_slug>[^\/]+)/members/$',
+        OrganizationMemberIndexEndpoint.as_view(),
+        name='sentry-api-0-organization-member-index'),
     url(r'^organizations/(?P<organization_slug>[^\/]+)/members/(?P<member_id>\d+)/$',
         OrganizationMemberDetailsEndpoint.as_view(),
         name='sentry-api-0-organization-member-details'),
diff --git a/tests/sentry/api/endpoints/test_organization_member_index.py b/tests/sentry/api/endpoints/test_organization_member_index.py
new file mode 100644
index 0000000000..2dba6d89a3
--- /dev/null
+++ b/tests/sentry/api/endpoints/test_organization_member_index.py
@@ -0,0 +1,27 @@
+from __future__ import absolute_import
+
+from django.core.urlresolvers import reverse
+
+from sentry.testutils import APITestCase
+
+
+class OrganizationMemberListTest(APITestCase):
+    def test_simple(self):
+        user_1 = self.create_user('foo@localhost', username='foo')
+        user_2 = self.create_user('bar@localhost', username='bar')
+        user_3 = self.create_user('baz@localhost', username='baz')
+        org = self.create_organization(owner=user_1)
+        org.member_set.create(user=user_2)
+
+        self.login_as(user=user_1)
+
+        url = reverse('sentry-api-0-organization-member-index', kwargs={
+            'organization_slug': org.slug,
+        })
+
+        response = self.client.get(url)
+
+        assert response.status_code == 200
+        assert len(response.data) == 2
+        assert response.data[0]['email'] == user_2.email
+        assert response.data[1]['email'] == user_1.email
