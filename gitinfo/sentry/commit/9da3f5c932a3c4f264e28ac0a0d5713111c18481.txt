commit 9da3f5c932a3c4f264e28ac0a0d5713111c18481
Author: Alberto Leal <mail4alberto@gmail.com>
Date:   Thu Nov 7 15:40:45 2019 -0500

    feat(discover2): Add sample queries (#15489)

diff --git a/src/sentry/static/sentry/app/types/index.tsx b/src/sentry/static/sentry/app/types/index.tsx
index 0a01d130d4..9baf9d7ff3 100644
--- a/src/sentry/static/sentry/app/types/index.tsx
+++ b/src/sentry/static/sentry/app/types/index.tsx
@@ -395,6 +395,7 @@ export type EventViewv1 = {
     query?: string;
   };
   tags: string[];
+  statsPeriod?: string;
 };
 
 export type Repository = {
diff --git a/src/sentry/static/sentry/app/views/eventsV2/data.tsx b/src/sentry/static/sentry/app/views/eventsV2/data.tsx
index 00a8ea6256..7f9b568e27 100644
--- a/src/sentry/static/sentry/app/views/eventsV2/data.tsx
+++ b/src/sentry/static/sentry/app/views/eventsV2/data.tsx
@@ -190,6 +190,49 @@ export const ALL_VIEWS: Readonly<Array<EventViewv1>> = [
   },
 ];
 
+// sample queries for the discover banner
+export const SAMPLE_VIEWS: Readonly<Array<EventViewv1 & {buttonLabel?: string}>> = [
+  {
+    name: t('Content Security Policy (CSP) Report by User'),
+    buttonLabel: t('CSP Reports by User'),
+    data: {
+      fields: ['user', 'count(id)', 'count_unique(title)'],
+      fieldnames: ['User', '# of events', 'reports'],
+      sort: ['-count_id'],
+      query: 'event.type:csp',
+    },
+    tags: [
+      'project.name',
+      'blocked-uri',
+      'browser.name',
+      'os.name',
+      'release',
+      'environment',
+    ],
+  },
+  {
+    name: t('Browsers with most bugs'),
+    data: {
+      fields: ['browser.name', 'count(id)', 'count_unique(issue.id)'],
+      fieldnames: ['Browser', '# of events', 'unique errors'],
+      sort: ['-count_id'],
+      query: 'event.type:error',
+    },
+    tags: ['error.type', 'project.name', 'url', 'release', 'environment'],
+  },
+  {
+    name: t('Top issues this week'),
+    data: {
+      fields: ['title', 'issue.id', 'project', 'count(id)', 'count_unique(user)'],
+      fieldnames: ['Title', 'issue.id', 'project', '# of events', 'users'],
+      sort: ['-count_id'],
+      query: 'event.type:error',
+    },
+    tags: ['project.name', 'release', 'environment'],
+    statsPeriod: '7d',
+  },
+];
+
 type EventData = {[key: string]: any};
 
 type RenderFunctionBaggage = {
diff --git a/src/sentry/static/sentry/app/views/eventsV2/eventView.tsx b/src/sentry/static/sentry/app/views/eventsV2/eventView.tsx
index 71d68986d8..1976d95532 100644
--- a/src/sentry/static/sentry/app/views/eventsV2/eventView.tsx
+++ b/src/sentry/static/sentry/app/views/eventsV2/eventView.tsx
@@ -391,7 +391,7 @@ class EventView {
       id: undefined,
       start: undefined,
       end: undefined,
-      statsPeriod: undefined,
+      statsPeriod: eventViewV1.statsPeriod,
       environment: [],
       yAxis: undefined,
     });
diff --git a/src/sentry/static/sentry/app/views/eventsV2/index.tsx b/src/sentry/static/sentry/app/views/eventsV2/index.tsx
index 1c871c3b21..6206fbd40f 100644
--- a/src/sentry/static/sentry/app/views/eventsV2/index.tsx
+++ b/src/sentry/static/sentry/app/views/eventsV2/index.tsx
@@ -32,7 +32,7 @@ import SavedQueryButtonGroup from './savedQuery';
 import EventView from './eventView';
 import EventInputName from './eventInputName';
 import {getFirstQueryString} from './utils';
-import {ALL_VIEWS, TRANSACTION_VIEWS} from './data';
+import {ALL_VIEWS, TRANSACTION_VIEWS, SAMPLE_VIEWS} from './data';
 
 type Props = {
   organization: Organization;
@@ -107,23 +107,48 @@ class EventsV2 extends React.Component<Props> {
 
     if (bannerDismissed) {
       return null;
-    } else {
+    }
+
+    const {location} = this.props;
+
+    const sampleQueries = SAMPLE_VIEWS.map((view, index) => {
+      const eventView = EventView.fromEventViewv1(view);
+
+      const to = {
+        pathname: location.pathname,
+        query: {
+          ...eventView.generateQueryStringObject(),
+        },
+      };
+
       return (
-        <Banner
-          title={t('Discover')}
-          subtitle={t('Here are a few sample queries to kick things off')}
-          onCloseClick={this.handleClick}
+        <BannerButton
+          to={to}
+          icon="icon-circle-add"
+          key={index}
+          onClick={() => {
+            trackAnalyticsEvent({
+              eventKey: 'discover_v2.prebuilt_query_click',
+              eventName: 'Discoverv2: Click a pre-built query',
+              organization_id: this.props.organization.id,
+              query_name: eventView.name,
+            });
+          }}
         >
-          <BannerButton icon="icon-circle-add">
-            {t('Users who error in < 1 min')}
-          </BannerButton>
-          <BannerButton icon="icon-circle-add">{t('Browsers by most bugs')}</BannerButton>
-          <BannerButton icon="icon-circle-add">
-            {t('Slowest HTTP endpoints')}
-          </BannerButton>
-        </Banner>
+          {view.buttonLabel || eventView.name}
+        </BannerButton>
       );
-    }
+    });
+
+    return (
+      <Banner
+        title={t('Discover')}
+        subtitle={t('Here are a few sample queries to kick things off')}
+        onCloseClick={this.handleClick}
+      >
+        {sampleQueries}
+      </Banner>
+    );
   }
 
   render() {
