commit bc15815c807f2ae42402178ed79398af6dec8b8f
Author: David Cramer <dcramer@gmail.com>
Date:   Sun Jan 29 12:53:27 2012 -0800

    Correct timezone behavior so that .now() no longer matters, and integrated installs will generate correct UTC timezones. Change the default TIME_ZONE setting to UTC

diff --git a/sentry/conf/server.py b/sentry/conf/server.py
index 9d2f94f42e..e9ecc31a44 100644
--- a/sentry/conf/server.py
+++ b/sentry/conf/server.py
@@ -51,7 +51,7 @@ DATABASES = {
 # timezone as the operating system.
 # If running in a Windows environment this must be set to the same as your
 # system time zone.
-TIME_ZONE = 'America/Los_Angeles'
+TIME_ZONE = 'UTC'
 
 # Language code for this installation. All choices can be found here:
 # http://www.i18nguy.com/unicode/language-identifiers.html
diff --git a/sentry/manager.py b/sentry/manager.py
index 62273253ad..531a936dbc 100644
--- a/sentry/manager.py
+++ b/sentry/manager.py
@@ -21,6 +21,7 @@ from sentry.signals import regression_signal
 from sentry.utils import get_db_engine
 from sentry.utils.charts import has_charts
 from sentry.utils.compat.db import connections
+from sentry.utils.dates import utc_to_local
 from sentry.processors.base import send_group_processors
 
 logger = logging.getLogger('sentry.errors')
@@ -240,6 +241,10 @@ class GroupManager(models.Manager, ChartMixin):
         extra = kwargs.pop('extra', None)
         modules = kwargs.pop('modules', None)
 
+        # We must convert date to local time so Django doesn't mess it up
+        # based on TIME_ZONE
+        date = utc_to_local(date)
+
         if not message:
             raise InvalidData('Missing required parameter: message')
 
diff --git a/sentry/templates/sentry/partial/_group.html b/sentry/templates/sentry/partial/_group.html
index 7711813a32..999bd86be0 100644
--- a/sentry/templates/sentry/partial/_group.html
+++ b/sentry/templates/sentry/partial/_group.html
@@ -3,7 +3,7 @@
 <li class="{% cycle 'row1' 'row2' %} level-{{ group.level }}{% if priority %} priority-{{ priority }}{% endif %}" id="group_{{ group.pk|safe }}" data-sentry-count="{{ group.times_seen }}">
     <span class="count">{{ group.times_seen|small_count }}</span>
     <h3><a href="{% url sentry-group group.project_id group.pk %}">{% if group.view %}{{ group.view }}{% else %}{{ group.message_top|truncatechars:100 }}{% endif %}</a></h3>
-    <span class="last_seen">{{ group.last_seen|timesince }}</span>
+    <span class="last_seen" title="{{ group.last_seen }}">{{ group.last_seen|timesince }}</span>
     {% if group.avg_time_spent %}
         <span class="time_spent">{{ group.avg_time_spent|duration }}</span>
     {% endif %}
diff --git a/sentry/templatetags/sentry_helpers.py b/sentry/templatetags/sentry_helpers.py
index efb80135fa..4b025b970a 100644
--- a/sentry/templatetags/sentry_helpers.py
+++ b/sentry/templatetags/sentry_helpers.py
@@ -11,6 +11,7 @@ from paging.helpers import paginate as paginate_func
 from sentry.conf import settings
 from sentry.plugins import plugins
 from sentry.utils import json
+from sentry.utils.dates import utc_to_local
 from templatetag_sugar.register import tag
 from templatetag_sugar.parser import Name, Variable, Constant, Optional
 
@@ -196,11 +197,12 @@ def handle_before_events(request, event_list):
 @register.filter
 def timesince(value):
     from django.template.defaultfilters import timesince
+    now = utc_to_local(datetime.datetime.utcnow())
     if not value:
         return _('Never')
-    if value < datetime.datetime.utcnow() - datetime.timedelta(days=5):
+    if value < (now - datetime.timedelta(days=5)):
         return value.date()
-    value = (' '.join(timesince(value).split(' ')[0:2])).strip(',')
+    value = (' '.join(timesince(value, now).split(' ')[0:2])).strip(',')
     if value == _('0 minutes'):
         return _('Just now')
     if value == _('1 day'):
diff --git a/sentry/utils/dates.py b/sentry/utils/dates.py
new file mode 100644
index 0000000000..a558b4fd11
--- /dev/null
+++ b/sentry/utils/dates.py
@@ -0,0 +1,17 @@
+"""
+sentry.utils.dates
+~~~~~~~~~~~~~~~~~~
+
+:copyright: (c) 2010 by the Sentry Team, see AUTHORS for more details.
+:license: BSD, see LICENSE for more details.
+"""
+import pytz
+
+from django.conf import settings
+
+
+def utc_to_local(dt):
+    tz = pytz.timezone(settings.TIME_ZONE)
+    # return datetime(*time.gmtime(time.mktime(dt.timetuple()))[:6])
+    # return dt.replace(tzinfo=pytz.utc)
+    return dt.replace(tzinfo=pytz.utc).astimezone(tz).replace(tzinfo=None)
