commit fa5a7d55558e557531a8ab6e449ebdb94d6250da
Author: Billy Vong <billyvg@users.noreply.github.com>
Date:   Wed Apr 8 09:13:33 2020 -0700

    feat(ui): Add progressive loading to "Events" table (#18138)
    
    Because of the move to lightweight org, projects is not guaranteed at time of rendering. Use placeholders for the project avatar and make the link to event text until the projects are loaded.
    
    * Revert "Revert "perf(ui): Move old "Events" to lightweight route treeâ€¦ (#18137)"
    
    This reverts commit 5dc1c155d3e2aaff00cb93c6a4d9e08e1d718906.

diff --git a/src/sentry/static/sentry/app/routes.jsx b/src/sentry/static/sentry/app/routes.jsx
index c2d1eef5d6..a6cac6fc93 100644
--- a/src/sentry/static/sentry/app/routes.jsx
+++ b/src/sentry/static/sentry/app/routes.jsx
@@ -1199,6 +1199,21 @@ function routes() {
           />
         </Route>
 
+        <Route
+          path="/organizations/:orgId/events/"
+          componentPromise={() =>
+            import(/* webpackChunkName: "EventsContainer" */ 'app/views/events')
+          }
+          component={errorHandler(LazyLoad)}
+        >
+          <IndexRoute
+            componentPromise={() =>
+              import(/* webpackChunkName: "Events" */ 'app/views/events/events')
+            }
+            component={errorHandler(LazyLoad)}
+          />
+        </Route>
+
         {/* Settings routes */}
         <Route path="/settings/" name="Settings" component={SettingsWrapper}>
           <IndexRoute
@@ -1562,21 +1577,6 @@ function routes() {
             />
           </Route>
 
-          <Route
-            path="/organizations/:orgId/events/"
-            componentPromise={() =>
-              import(/* webpackChunkName: "EventsContainer" */ 'app/views/events')
-            }
-            component={errorHandler(LazyLoad)}
-          >
-            <IndexRoute
-              componentPromise={() =>
-                import(/* webpackChunkName: "Events" */ 'app/views/events/events')
-              }
-              component={errorHandler(LazyLoad)}
-            />
-          </Route>
-
           <Route
             path="/organizations/:orgId/releases-v2/"
             componentPromise={() =>
diff --git a/src/sentry/static/sentry/app/views/events/eventsTable.jsx b/src/sentry/static/sentry/app/views/events/eventsTable.jsx
index ba87263716..ecdfd6b526 100644
--- a/src/sentry/static/sentry/app/views/events/eventsTable.jsx
+++ b/src/sentry/static/sentry/app/views/events/eventsTable.jsx
@@ -3,15 +3,17 @@ import PropTypes from 'prop-types';
 import React from 'react';
 import styled from '@emotion/styled';
 
-import {t} from 'app/locale';
 import {PanelBody, Panel, PanelHeader} from 'app/components/panels';
+import {t} from 'app/locale';
 import DateTime from 'app/components/dateTime';
 import EmptyStateWarning from 'app/components/emptyStateWarning';
 import IdBadge from 'app/components/idBadge';
 import LoadingIndicator from 'app/components/loadingIndicator';
+import Placeholder from 'app/components/placeholder';
 import SentryTypes from 'app/sentryTypes';
 import overflowEllipsis from 'app/styles/overflowEllipsis';
 import space from 'app/styles/space';
+import withProjects from 'app/utils/withProjects';
 
 class EventsTableBody extends React.PureComponent {
   static propTypes = {
@@ -27,25 +29,31 @@ class EventsTableBody extends React.PureComponent {
     return events.map((event, eventIdx) => {
       const project = projectsMap.get(event.projectID);
       const trimmedMessage = event.title || event.message.split('\n')[0].substr(0, 100);
-      const eventLink = `/organizations/${organization.slug}/projects/${project.slug}/events/${event.eventID}/`;
+      const eventLink = project
+        ? `/organizations/${organization.slug}/projects/${project?.slug}/events/${event.eventID}/`
+        : '';
 
       return (
-        <TableRow key={`${project.slug}-${event.eventID}`} first={eventIdx === 0}>
+        <TableRow key={`${project?.slug}-${event.eventID}`} first={eventIdx === 0}>
           <TableData>
             <EventTitle>
-              <Link to={eventLink}>{trimmedMessage}</Link>
+              {project ? <Link to={eventLink}>{trimmedMessage}</Link> : trimmedMessage}
             </EventTitle>
           </TableData>
 
           <TableData>{event['event.type']}</TableData>
 
           <TableData>
-            <IdBadge
-              project={project}
-              avatarSize={16}
-              displayName={<span>{project.slug}</span>}
-              avatarProps={{consistentWidth: true}}
-            />
+            {project ? (
+              <IdBadge
+                project={project}
+                avatarSize={16}
+                displayName={<span>{project?.slug}</span>}
+                avatarProps={{consistentWidth: true}}
+              />
+            ) : (
+              <Placeholder height="16px" width="50px" />
+            )}
           </TableData>
 
           <TableData>
@@ -68,6 +76,9 @@ class EventsTable extends React.Component {
     // Initial loading state
     loading: PropTypes.bool,
 
+    // projectsStore loading state of projects
+    loadingProjects: PropTypes.bool,
+
     // When initial data has been loaded, but params have changed
     reloading: PropTypes.bool,
 
@@ -89,7 +100,8 @@ class EventsTable extends React.Component {
     if (
       this.props.reloading !== nextProps.reloading ||
       this.props.zoomChanged !== nextProps.zoomChanged ||
-      this.props.loading !== nextProps.loading
+      this.props.loading !== nextProps.loading ||
+      this.props.loadingProjects !== nextProps.loadingProjects
     ) {
       return true;
     }
@@ -114,8 +126,8 @@ class EventsTable extends React.Component {
   }
 
   get projectsMap() {
-    const {organization, projects} = this.props;
-    const projectList = projects || organization.projects;
+    const {organization, loadingProjects, projects} = this.props;
+    const projectList = (!loadingProjects && projects) || organization.projects || [];
 
     return new Map(projectList.map(project => [project.id, project]));
   }
@@ -157,7 +169,7 @@ class EventsTable extends React.Component {
   }
 }
 
-export default withRouter(EventsTable);
+export default withProjects(withRouter(EventsTable));
 export {EventsTable};
 
 const StyledPanelBody = styled(PanelBody)`
diff --git a/src/sentry/static/sentry/app/views/events/index.jsx b/src/sentry/static/sentry/app/views/events/index.jsx
index 702c45e839..4cc8613156 100644
--- a/src/sentry/static/sentry/app/views/events/index.jsx
+++ b/src/sentry/static/sentry/app/views/events/index.jsx
@@ -9,7 +9,7 @@ import {t} from 'app/locale';
 import BetaTag from 'app/components/betaTag';
 import Feature from 'app/components/acl/feature';
 import GlobalSelectionHeader from 'app/components/organizations/globalSelectionHeader';
-import NoProjectMessage from 'app/components/noProjectMessage';
+import LightWeightNoProjectMessage from 'app/components/lightWeightNoProjectMessage';
 import SentryTypes from 'app/sentryTypes';
 import PageHeading from 'app/components/pageHeading';
 import withApi from 'app/utils/withApi';
@@ -67,7 +67,7 @@ class EventsContainer extends React.Component {
           resetParamsOnChange={['cursor']}
         />
         <PageContent>
-          <NoProjectMessage organization={organization}>
+          <LightWeightNoProjectMessage organization={organization}>
             <Body>
               <PageHeader>
                 <HeaderTitle>
@@ -83,7 +83,7 @@ class EventsContainer extends React.Component {
               </PageHeader>
               {children}
             </Body>
-          </NoProjectMessage>
+          </LightWeightNoProjectMessage>
         </PageContent>
       </Feature>
     );
diff --git a/tests/js/spec/views/events/events.spec.jsx b/tests/js/spec/views/events/events.spec.jsx
index d00b27d016..88507e905f 100644
--- a/tests/js/spec/views/events/events.spec.jsx
+++ b/tests/js/spec/views/events/events.spec.jsx
@@ -30,7 +30,7 @@ const pageTwoLinks = generatePageLinks(100, 100);
 const EventsWithRouter = withRouter(Events);
 
 describe('EventsErrors', function() {
-  const {organization, router, routerContext} = initializeOrg({
+  const {organization, projects, router, routerContext} = initializeOrg({
     projects: [{isMember: true}, {isMember: true, slug: 'new-project', id: 3}],
     organization: {
       features: ['events'],
@@ -55,7 +55,7 @@ describe('EventsErrors', function() {
     });
     MockApiClient.addMockResponse({
       url: `/organizations/${organization.slug}/projects/`,
-      body: [],
+      body: projects,
     });
     MockApiClient.addMockResponse({
       url: `/organizations/${organization.slug}/recent-searches/`,
@@ -129,6 +129,8 @@ describe('EventsErrors', function() {
     expect(eventsStatsMock).toHaveBeenCalled();
     expect(eventsMetaMock).not.toHaveBeenCalled();
     expect(wrapper.find('LoadingIndicator')).toHaveLength(0);
+
+    // projects and user badges
     expect(wrapper.find('IdBadge')).toHaveLength(2);
   });
 
