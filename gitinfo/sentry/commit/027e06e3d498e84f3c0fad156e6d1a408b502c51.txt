commit 027e06e3d498e84f3c0fad156e6d1a408b502c51
Author: Mark Story <mark@sentry.io>
Date:   Thu Jul 4 11:08:51 2019 -0400

    chore(ui) Rename OrganizationStream to IssueList (#13892)
    
    Based on the discussions we had a few weeks back about redundant view
    prefixes, I've renamed OrganizationStream components to IssueList. I'm
    open to other names though.
    
    Refs SEN-750

diff --git a/src/sentry/static/sentry/app/components/smartSearchBar/index.jsx b/src/sentry/static/sentry/app/components/smartSearchBar/index.jsx
index 504803495c..07e69cadf6 100644
--- a/src/sentry/static/sentry/app/components/smartSearchBar/index.jsx
+++ b/src/sentry/static/sentry/app/components/smartSearchBar/index.jsx
@@ -19,7 +19,7 @@ import {
 } from 'app/actionCreators/savedSearches';
 import {t} from 'app/locale';
 import Button from 'app/components/button';
-import CreateSavedSearchButton from 'app/views/organizationStream/createSavedSearchButton';
+import CreateSavedSearchButton from 'app/views/issueList/createSavedSearchButton';
 import InlineSvg from 'app/components/inlineSvg';
 import DropdownLink from 'app/components/dropdownLink';
 import MemberListStore from 'app/stores/memberListStore';
diff --git a/src/sentry/static/sentry/app/routes.jsx b/src/sentry/static/sentry/app/routes.jsx
index d2003302ce..895958b741 100644
--- a/src/sentry/static/sentry/app/routes.jsx
+++ b/src/sentry/static/sentry/app/routes.jsx
@@ -18,8 +18,8 @@ import OrganizationHomeContainer from 'app/components/organizations/homeContaine
 import OrganizationMembers from 'app/views/settings/organizationMembers';
 import OrganizationRoot from 'app/views/organizationRoot';
 import OrganizationStats from 'app/views/organizationStats';
-import OrganizationStreamContainer from 'app/views/organizationStream/container';
-import OrganizationStreamOverview from 'app/views/organizationStream/overview';
+import IssueListContainer from 'app/views/issueList/container';
+import IssueListOverview from 'app/views/issueList/overview';
 import ProjectChooser from 'app/views/projectChooser';
 import ProjectDataForwarding from 'app/views/projectDataForwarding';
 import ProjectDebugFiles from 'app/views/projectDebugFiles';
@@ -965,13 +965,13 @@ function routes() {
           />
           <Route
             path="/organizations/:orgId/issues/"
-            component={errorHandler(OrganizationStreamContainer)}
+            component={errorHandler(IssueListContainer)}
           >
             <Redirect from="/organizations/:orgId/" to="/organizations/:orgId/issues/" />
-            <IndexRoute component={errorHandler(OrganizationStreamOverview)} />
+            <IndexRoute component={errorHandler(IssueListOverview)} />
             <Route
               path="searches/:searchId/"
-              component={errorHandler(OrganizationStreamOverview)}
+              component={errorHandler(IssueListOverview)}
             />
           </Route>
           {/* Once org issues is complete, these routes can be nested under
diff --git a/src/sentry/static/sentry/app/views/organizationStream/actions.jsx b/src/sentry/static/sentry/app/views/issueList/actions.jsx
similarity index 99%
rename from src/sentry/static/sentry/app/views/organizationStream/actions.jsx
rename to src/sentry/static/sentry/app/views/issueList/actions.jsx
index 12e5c6b8a1..fcb33d60ee 100644
--- a/src/sentry/static/sentry/app/views/organizationStream/actions.jsx
+++ b/src/sentry/static/sentry/app/views/issueList/actions.jsx
@@ -138,8 +138,8 @@ ExtraDescription.propTypes = {
   queryCount: PropTypes.number,
 };
 
-const StreamActions = createReactClass({
-  displayName: 'StreamActions',
+const IssueListActions = createReactClass({
+  displayName: 'IssueListActions',
 
   propTypes: {
     api: PropTypes.object,
@@ -669,6 +669,6 @@ const CreateIncidentText = styled('span')`
   margin-left: 5px; /* consistent with other items in bar */
 `;
 
-export {StreamActions};
+export {IssueListActions};
 
-export default withApi(StreamActions);
+export default withApi(IssueListActions);
diff --git a/src/sentry/static/sentry/app/views/organizationStream/container.jsx b/src/sentry/static/sentry/app/views/issueList/container.jsx
similarity index 85%
rename from src/sentry/static/sentry/app/views/organizationStream/container.jsx
rename to src/sentry/static/sentry/app/views/issueList/container.jsx
index 3102283a2d..b5812b647f 100644
--- a/src/sentry/static/sentry/app/views/organizationStream/container.jsx
+++ b/src/sentry/static/sentry/app/views/issueList/container.jsx
@@ -7,7 +7,7 @@ import NoProjectMessage from 'app/components/noProjectMessage';
 import SentryTypes from 'app/sentryTypes';
 import withOrganization from 'app/utils/withOrganization';
 
-class OrganizationStreamContainer extends React.Component {
+class IssueListContainer extends React.Component {
   static propTypes = {
     organization: SentryTypes.Organization,
   };
@@ -32,5 +32,5 @@ class OrganizationStreamContainer extends React.Component {
     );
   }
 }
-export default withOrganization(OrganizationStreamContainer);
-export {OrganizationStreamContainer};
+export default withOrganization(IssueListContainer);
+export {IssueListContainer};
diff --git a/src/sentry/static/sentry/app/views/organizationStream/createSavedSearchButton.jsx b/src/sentry/static/sentry/app/views/issueList/createSavedSearchButton.jsx
similarity index 100%
rename from src/sentry/static/sentry/app/views/organizationStream/createSavedSearchButton.jsx
rename to src/sentry/static/sentry/app/views/issueList/createSavedSearchButton.jsx
diff --git a/src/sentry/static/sentry/app/views/organizationStream/filters.jsx b/src/sentry/static/sentry/app/views/issueList/filters.jsx
similarity index 85%
rename from src/sentry/static/sentry/app/views/organizationStream/filters.jsx
rename to src/sentry/static/sentry/app/views/issueList/filters.jsx
index 730c62b270..4f1e96dfb3 100644
--- a/src/sentry/static/sentry/app/views/organizationStream/filters.jsx
+++ b/src/sentry/static/sentry/app/views/issueList/filters.jsx
@@ -9,11 +9,11 @@ import PageHeading from 'app/components/pageHeading';
 import QueryCount from 'app/components/queryCount';
 import SentryTypes from 'app/sentryTypes';
 
-import OrganizationSavedSearchSelector from './organizationSavedSearchSelector';
-import SearchBar from './searchBar';
-import SortOptions from './sortOptions';
+import SavedSearchSelector from './savedSearchSelector';
+import IssueListSearchBar from './searchBar';
+import IssueListSortOptions from './sortOptions';
 
-class StreamFilters extends React.Component {
+class IssueListFilters extends React.Component {
   static propTypes = {
     organization: SentryTypes.Organization,
 
@@ -47,7 +47,7 @@ class StreamFilters extends React.Component {
     onSidebarToggle: function() {},
   };
 
-  handleOrganizationSavedSearchSelect = savedSearch => {
+  handleSavedSearchSelect = savedSearch => {
     analytics('organization_saved_search.selected', {
       org_id: this.props.organization.id,
       query: savedSearch.query,
@@ -87,18 +87,18 @@ class StreamFilters extends React.Component {
         </PageHeading>
 
         <SearchContainer isWide>
-          <SortOptions sort={sort} onSelect={onSortChange} />
+          <IssueListSortOptions sort={sort} onSelect={onSortChange} />
 
-          <OrganizationSavedSearchSelector
+          <SavedSearchSelector
             key={query}
             organization={organization}
             savedSearchList={savedSearchList}
-            onSavedSearchSelect={this.handleOrganizationSavedSearchSelect}
+            onSavedSearchSelect={this.handleSavedSearchSelect}
             onSavedSearchDelete={onSavedSearchDelete}
             query={query}
           />
 
-          <SearchBar
+          <IssueListSearchBar
             orgId={organization.slug}
             query={query || ''}
             onSearch={onSearch}
@@ -120,4 +120,4 @@ const SearchContainer = styled('div')`
   width: ${p => (p.isWide ? '70%' : '58.3%')};
 `;
 
-export default StreamFilters;
+export default IssueListFilters;
diff --git a/src/sentry/static/sentry/app/views/organizationStream/overview.jsx b/src/sentry/static/sentry/app/views/issueList/overview.jsx
similarity index 97%
rename from src/sentry/static/sentry/app/views/organizationStream/overview.jsx
rename to src/sentry/static/sentry/app/views/issueList/overview.jsx
index 59a34d962a..cb76ae9bd0 100644
--- a/src/sentry/static/sentry/app/views/organizationStream/overview.jsx
+++ b/src/sentry/static/sentry/app/views/issueList/overview.jsx
@@ -43,9 +43,9 @@ import withGlobalSelection from 'app/utils/withGlobalSelection';
 import withOrganization from 'app/utils/withOrganization';
 import withSavedSearches from 'app/utils/withSavedSearches';
 
-import StreamActions from './actions';
-import StreamFilters from './filters';
-import StreamSidebar from './sidebar';
+import IssueListActions from './actions';
+import IssueListFilters from './filters';
+import IssueListSidebar from './sidebar';
 
 const MAX_ITEMS = 25;
 const DEFAULT_QUERY = 'is:unresolved';
@@ -55,8 +55,8 @@ const DEFAULT_GRAPH_STATS_PERIOD = '24h';
 // the allowed period choices for graph in each issue row
 const STATS_PERIODS = new Set(['14d', '24h']);
 
-const OrganizationStream = createReactClass({
-  displayName: 'OrganizationStream',
+const IssueList = createReactClass({
+  displayName: 'IssueList',
 
   propTypes: {
     organization: SentryTypes.Organization,
@@ -399,7 +399,7 @@ const OrganizationStream = createReactClass({
     }
   },
 
-  onStreamSidebarSearch(query) {
+  onIssueListSidebarSearch(query) {
     analytics('search.searched', {
       org_id: this.props.organization.id,
       query,
@@ -681,7 +681,7 @@ const OrganizationStream = createReactClass({
     return (
       <div className={classNames(classes)}>
         <div className="stream-content">
-          <StreamFilters
+          <IssueListFilters
             organization={organization}
             projectId={projectId}
             searchId={params.searchId}
@@ -703,7 +703,7 @@ const OrganizationStream = createReactClass({
           />
 
           <Panel>
-            <StreamActions
+            <IssueListActions
               organization={organization}
               orgId={organization.slug}
               projectId={projectId}
@@ -730,11 +730,11 @@ const OrganizationStream = createReactClass({
           </Panel>
           <Pagination pageLinks={this.state.pageLinks} onCursor={this.onCursorChange} />
         </div>
-        <StreamSidebar
+        <IssueListSidebar
           loading={this.state.tagsLoading}
           tags={this.state.tags}
           query={query}
-          onQueryChange={this.onStreamSidebarSearch}
+          onQueryChange={this.onIssueListSidebarSearch}
           orgId={organization.slug}
           tagValueLoader={this.tagValueLoader}
         />
@@ -743,7 +743,5 @@ const OrganizationStream = createReactClass({
   },
 });
 
-export default withSavedSearches(
-  withGlobalSelection(withOrganization(OrganizationStream))
-);
-export {OrganizationStream};
+export default withSavedSearches(withGlobalSelection(withOrganization(IssueList)));
+export {IssueList};
diff --git a/src/sentry/static/sentry/app/views/organizationStream/organizationSavedSearchSelector.jsx b/src/sentry/static/sentry/app/views/issueList/savedSearchSelector.jsx
similarity index 98%
rename from src/sentry/static/sentry/app/views/organizationStream/organizationSavedSearchSelector.jsx
rename to src/sentry/static/sentry/app/views/issueList/savedSearchSelector.jsx
index 4850c60b4d..9ec0bab57c 100644
--- a/src/sentry/static/sentry/app/views/organizationStream/organizationSavedSearchSelector.jsx
+++ b/src/sentry/static/sentry/app/views/issueList/savedSearchSelector.jsx
@@ -13,7 +13,7 @@ import SentryTypes from 'app/sentryTypes';
 import space from 'app/styles/space';
 import overflowEllipsis from 'app/styles/overflowEllipsis';
 
-export default class OrganizationSavedSearchSelector extends React.Component {
+export default class SavedSearchSelector extends React.Component {
   static propTypes = {
     organization: SentryTypes.Organization.isRequired,
     savedSearchList: PropTypes.array.isRequired,
diff --git a/src/sentry/static/sentry/app/views/organizationStream/searchBar.jsx b/src/sentry/static/sentry/app/views/issueList/searchBar.jsx
similarity index 96%
rename from src/sentry/static/sentry/app/views/organizationStream/searchBar.jsx
rename to src/sentry/static/sentry/app/views/issueList/searchBar.jsx
index 01d8f27e95..086151a333 100644
--- a/src/sentry/static/sentry/app/views/organizationStream/searchBar.jsx
+++ b/src/sentry/static/sentry/app/views/issueList/searchBar.jsx
@@ -42,7 +42,7 @@ const SEARCH_ITEMS = [
   },
 ];
 
-class SearchBar extends React.Component {
+class IssueListSearchBar extends React.Component {
   static propTypes = {
     ...SmartSearchBar.propTypes,
 
@@ -135,4 +135,4 @@ class SearchBar extends React.Component {
   }
 }
 
-export default withApi(withOrganization(SearchBar));
+export default withApi(withOrganization(IssueListSearchBar));
diff --git a/src/sentry/static/sentry/app/views/organizationStream/sidebar.jsx b/src/sentry/static/sentry/app/views/issueList/sidebar.jsx
similarity index 95%
rename from src/sentry/static/sentry/app/views/organizationStream/sidebar.jsx
rename to src/sentry/static/sentry/app/views/issueList/sidebar.jsx
index 1196e70b00..f630ca2bef 100644
--- a/src/sentry/static/sentry/app/views/organizationStream/sidebar.jsx
+++ b/src/sentry/static/sentry/app/views/issueList/sidebar.jsx
@@ -5,12 +5,12 @@ import _ from 'lodash';
 import LoadingIndicator from 'app/components/loadingIndicator';
 import {queryToObj, objToQuery} from 'app/utils/stream';
 import {t} from 'app/locale';
-import StreamTagFilter from './tagFilter';
+import IssueListTagFilter from './tagFilter';
 
 const TEXT_FILTER_DEBOUNCE_IN_MS = 300;
 
-const StreamSidebar = createReactClass({
-  displayName: 'StreamSidebar',
+const IssueListSidebar = createReactClass({
+  displayName: 'IssueListSidebar',
 
   propTypes: {
     orgId: PropTypes.string.isRequired,
@@ -139,7 +139,7 @@ const StreamSidebar = createReactClass({
 
             {_.map(tags, tag => {
               return (
-                <StreamTagFilter
+                <IssueListTagFilter
                   value={this.state.queryObj[tag.key]}
                   key={tag.key}
                   tag={tag}
@@ -156,4 +156,4 @@ const StreamSidebar = createReactClass({
   },
 });
 
-export default StreamSidebar;
+export default IssueListSidebar;
diff --git a/src/sentry/static/sentry/app/views/organizationStream/sortOptions.jsx b/src/sentry/static/sentry/app/views/issueList/sortOptions.jsx
similarity index 95%
rename from src/sentry/static/sentry/app/views/organizationStream/sortOptions.jsx
rename to src/sentry/static/sentry/app/views/issueList/sortOptions.jsx
index b8dd1c5614..c9f105d71c 100644
--- a/src/sentry/static/sentry/app/views/organizationStream/sortOptions.jsx
+++ b/src/sentry/static/sentry/app/views/issueList/sortOptions.jsx
@@ -5,7 +5,7 @@ import DropdownControl, {DropdownItem} from 'app/components/dropdownControl';
 import {t} from 'app/locale';
 import space from 'app/styles/space';
 
-class SortOptions extends React.PureComponent {
+class IssueListSortOptions extends React.PureComponent {
   static propTypes = {
     sort: PropTypes.string,
     onSelect: PropTypes.func,
@@ -87,4 +87,4 @@ const LabelText = styled('em')`
   color: ${p => p.theme.gray2};
 `;
 
-export default SortOptions;
+export default IssueListSortOptions;
diff --git a/src/sentry/static/sentry/app/views/organizationStream/tagFilter.jsx b/src/sentry/static/sentry/app/views/issueList/tagFilter.jsx
similarity index 95%
rename from src/sentry/static/sentry/app/views/organizationStream/tagFilter.jsx
rename to src/sentry/static/sentry/app/views/issueList/tagFilter.jsx
index 478bdf331b..79ace15b17 100644
--- a/src/sentry/static/sentry/app/views/organizationStream/tagFilter.jsx
+++ b/src/sentry/static/sentry/app/views/issueList/tagFilter.jsx
@@ -7,7 +7,7 @@ import {addErrorMessage} from 'app/actionCreators/indicator';
 import {t, tct} from 'app/locale';
 import SelectControl from 'app/components/forms/selectControl';
 
-class StreamTagFilter extends React.Component {
+class IssueListTagFilter extends React.Component {
   static propTypes = {
     tag: PropTypes.object.isRequired,
     value: PropTypes.string,
@@ -72,7 +72,7 @@ class StreamTagFilter extends React.Component {
       .then(resp => {
         this.setState({
           isLoading: false,
-          options: Object.values(resp).map(StreamTagFilter.tagValueToSelectFormat),
+          options: Object.values(resp).map(IssueListTagFilter.tagValueToSelectFormat),
         });
       })
       .catch(err => {
@@ -182,4 +182,4 @@ class StreamTagFilter extends React.Component {
   }
 }
 
-export default StreamTagFilter;
+export default IssueListTagFilter;
diff --git a/tests/js/spec/views/organizationStream/__snapshots__/actions.spec.jsx.snap b/tests/js/spec/views/issueList/__snapshots__/actions.spec.jsx.snap
similarity index 96%
rename from tests/js/spec/views/organizationStream/__snapshots__/actions.spec.jsx.snap
rename to tests/js/spec/views/issueList/__snapshots__/actions.spec.jsx.snap
index 9f92d425a0..64e53dbe6c 100644
--- a/tests/js/spec/views/organizationStream/__snapshots__/actions.spec.jsx.snap
+++ b/tests/js/spec/views/issueList/__snapshots__/actions.spec.jsx.snap
@@ -1,6 +1,6 @@
 // Jest Snapshot v1, https://goo.gl/fbAQLP
 
-exports[`StreamActions Bulk Total results < bulk limit after checking "Select all" checkbox, displays bulk select message 1`] = `
+exports[`IssueListActions Bulk Total results < bulk limit after checking "Select all" checkbox, displays bulk select message 1`] = `
 <div
   className="row stream-select-all-notice"
 >
@@ -37,7 +37,7 @@ exports[`StreamActions Bulk Total results < bulk limit after checking "Select al
 </div>
 `;
 
-exports[`StreamActions Bulk Total results < bulk limit bulk resolves 1`] = `
+exports[`IssueListActions Bulk Total results < bulk limit bulk resolves 1`] = `
 <ModalDialog
   bsClass="modal"
   className="in"
@@ -266,7 +266,7 @@ exports[`StreamActions Bulk Total results < bulk limit bulk resolves 1`] = `
 </ModalDialog>
 `;
 
-exports[`StreamActions Bulk Total results < bulk limit can bulk select 1`] = `
+exports[`IssueListActions Bulk Total results < bulk limit can bulk select 1`] = `
 <div
   className="row stream-select-all-notice"
 >
@@ -298,7 +298,7 @@ exports[`StreamActions Bulk Total results < bulk limit can bulk select 1`] = `
 </div>
 `;
 
-exports[`StreamActions Bulk Total results > bulk limit after checking "Select all" checkbox, displays bulk select message 1`] = `
+exports[`IssueListActions Bulk Total results > bulk limit after checking "Select all" checkbox, displays bulk select message 1`] = `
 <div
   className="row stream-select-all-notice"
 >
@@ -335,7 +335,7 @@ exports[`StreamActions Bulk Total results > bulk limit after checking "Select al
 </div>
 `;
 
-exports[`StreamActions Bulk Total results > bulk limit bulk resolves 1`] = `
+exports[`IssueListActions Bulk Total results > bulk limit bulk resolves 1`] = `
 <ModalDialog
   bsClass="modal"
   className="in"
@@ -564,7 +564,7 @@ exports[`StreamActions Bulk Total results > bulk limit bulk resolves 1`] = `
 </ModalDialog>
 `;
 
-exports[`StreamActions Bulk Total results > bulk limit can bulk select 1`] = `
+exports[`IssueListActions Bulk Total results > bulk limit can bulk select 1`] = `
 <div
   className="row stream-select-all-notice"
 >
diff --git a/tests/js/spec/views/organizationStream/actions.spec.jsx b/tests/js/spec/views/issueList/actions.spec.jsx
similarity index 97%
rename from tests/js/spec/views/organizationStream/actions.spec.jsx
rename to tests/js/spec/views/issueList/actions.spec.jsx
index b036600fb2..8da12160bd 100644
--- a/tests/js/spec/views/organizationStream/actions.spec.jsx
+++ b/tests/js/spec/views/issueList/actions.spec.jsx
@@ -1,11 +1,11 @@
 import React from 'react';
 import {mount, shallow} from 'enzyme';
 
-import {StreamActions} from 'app/views/organizationStream/actions';
+import {IssueListActions} from 'app/views/issueList/actions';
 import {initializeOrg} from 'app-test/helpers/initializeOrg';
 import SelectedGroupStore from 'app/stores/selectedGroupStore';
 
-describe('StreamActions', function() {
+describe('IssueListActions', function() {
   let actions;
   let wrapper;
 
@@ -25,7 +25,7 @@ describe('StreamActions', function() {
         SelectedGroupStore.records = {};
         SelectedGroupStore.add([1, 2, 3]);
         wrapper = mount(
-          <StreamActions
+          <IssueListActions
             api={new MockApiClient()}
             allResultsVisible={false}
             query=""
@@ -103,7 +103,7 @@ describe('StreamActions', function() {
         SelectedGroupStore.records = {};
         SelectedGroupStore.add([1, 2, 3]);
         wrapper = mount(
-          <StreamActions
+          <IssueListActions
             api={new MockApiClient()}
             allResultsVisible={false}
             query=""
@@ -169,7 +169,7 @@ describe('StreamActions', function() {
     beforeEach(function() {
       SelectedGroupStore.deselectAll.mockReset();
       actions = shallow(
-        <StreamActions
+        <IssueListActions
           api={new MockApiClient()}
           query=""
           orgId="1337"
@@ -229,7 +229,7 @@ describe('StreamActions', function() {
   describe('missing projectId prop', function() {
     beforeEach(function() {
       wrapper = mount(
-        <StreamActions
+        <IssueListActions
           api={new MockApiClient()}
           query=""
           orgId="1337"
diff --git a/tests/js/spec/views/organizationStream/createIncident.spec.jsx b/tests/js/spec/views/issueList/createIncident.spec.jsx
similarity index 93%
rename from tests/js/spec/views/organizationStream/createIncident.spec.jsx
rename to tests/js/spec/views/issueList/createIncident.spec.jsx
index a35ba6b5da..0717a5362f 100644
--- a/tests/js/spec/views/organizationStream/createIncident.spec.jsx
+++ b/tests/js/spec/views/issueList/createIncident.spec.jsx
@@ -4,12 +4,12 @@ import React from 'react';
 import {initializeOrg} from 'app-test/helpers/initializeOrg';
 import {mount} from 'enzyme';
 import GlobalModal from 'app/components/globalModal';
-import OrganizationStreamWithStores from 'app/views/organizationStream/overview';
+import IssueListWithStores from 'app/views/issueList/overview';
 import TagStore from 'app/stores/tagStore';
 
-jest.mock('app/views/organizationStream/sidebar', () => jest.fn(() => null));
+jest.mock('app/views/issueList/sidebar', () => jest.fn(() => null));
 
-describe('OrganizationStream --> Create Incident', function() {
+describe('IssueList --> Create Incident', function() {
   let wrapper;
 
   const {project, router, routerContext} = initializeOrg({
@@ -51,7 +51,7 @@ describe('OrganizationStream --> Create Incident', function() {
     wrapper = mount(
       <div>
         <GlobalModal />
-        <OrganizationStreamWithStores {...newRouter} {...defaultProps} {...p} />
+        <IssueListWithStores {...newRouter} {...defaultProps} {...p} />
       </div>,
       routerContext
     );
diff --git a/tests/js/spec/views/organizationStream/createSavedSearchButton.spec.jsx b/tests/js/spec/views/issueList/createSavedSearchButton.spec.jsx
similarity index 97%
rename from tests/js/spec/views/organizationStream/createSavedSearchButton.spec.jsx
rename to tests/js/spec/views/issueList/createSavedSearchButton.spec.jsx
index bab878d314..ca425e6356 100644
--- a/tests/js/spec/views/organizationStream/createSavedSearchButton.spec.jsx
+++ b/tests/js/spec/views/issueList/createSavedSearchButton.spec.jsx
@@ -1,7 +1,7 @@
 import React from 'react';
 import {mount} from 'enzyme';
 
-import CreateSavedSearchButton from 'app/views/organizationStream/createSavedSearchButton';
+import CreateSavedSearchButton from 'app/views/issueList/createSavedSearchButton';
 
 describe('CreateSavedSearchButton', function() {
   let wrapper, organization, createMock;
diff --git a/tests/js/spec/views/organizationStream/organizationSavedSearchSelector.spec.jsx b/tests/js/spec/views/issueList/organizationSavedSearchSelector.spec.jsx
similarity index 94%
rename from tests/js/spec/views/organizationStream/organizationSavedSearchSelector.spec.jsx
rename to tests/js/spec/views/issueList/organizationSavedSearchSelector.spec.jsx
index 28abc07606..270b8461f8 100644
--- a/tests/js/spec/views/organizationStream/organizationSavedSearchSelector.spec.jsx
+++ b/tests/js/spec/views/issueList/organizationSavedSearchSelector.spec.jsx
@@ -1,9 +1,9 @@
 import React from 'react';
 import {mount} from 'enzyme';
 
-import OrganizationSavedSearchSelector from 'app/views/organizationStream/organizationSavedSearchSelector';
+import IssueListSavedSearchSelector from 'app/views/issueList/savedSearchSelector';
 
-describe('OrganizationSavedSearchSelector', function() {
+describe('IssueListSavedSearchSelector', function() {
   let wrapper, onCreate, onSelect, onDelete, organization, savedSearchList;
   beforeEach(function() {
     organization = TestStubs.Organization({access: ['org:write']});
@@ -27,7 +27,7 @@ describe('OrganizationSavedSearchSelector', function() {
       },
     ];
     wrapper = mount(
-      <OrganizationSavedSearchSelector
+      <IssueListSavedSearchSelector
         organization={organization}
         savedSearchList={savedSearchList}
         onSavedSearchCreate={onCreate}
diff --git a/tests/js/spec/views/organizationStream/overview.polling.spec.jsx b/tests/js/spec/views/issueList/overview.polling.spec.jsx
similarity index 93%
rename from tests/js/spec/views/organizationStream/overview.polling.spec.jsx
rename to tests/js/spec/views/issueList/overview.polling.spec.jsx
index 57930ba7a1..b7b38030d9 100644
--- a/tests/js/spec/views/organizationStream/overview.polling.spec.jsx
+++ b/tests/js/spec/views/issueList/overview.polling.spec.jsx
@@ -2,13 +2,13 @@ import React from 'react';
 
 import {initializeOrg} from 'app-test/helpers/initializeOrg';
 import {mount} from 'enzyme';
-import OrganizationStream from 'app/views/organizationStream/overview';
+import IssueList from 'app/views/issueList/overview';
 import StreamGroup from 'app/components/stream/group';
 import TagStore from 'app/stores/tagStore';
 
-// Mock <StreamSidebar> (need <StreamActions> to toggling real time polling)
-jest.mock('app/views/organizationStream/sidebar', () => jest.fn(() => null));
-jest.mock('app/views/organizationStream/filters', () => jest.fn(() => null));
+// Mock <IssueListSidebar> (need <IssueListActions> to toggling real time polling)
+jest.mock('app/views/issueList/sidebar', () => jest.fn(() => null));
+jest.mock('app/views/issueList/filters', () => jest.fn(() => null));
 jest.mock('app/components/stream/group', () => jest.fn(() => null));
 
 jest.mock('js-cookie', () => ({
@@ -23,7 +23,7 @@ const DEFAULT_LINKS_HEADER =
 
 jest.useFakeTimers();
 
-describe('OrganizationStream -> Polling', function() {
+describe('IssueList -> Polling', function() {
   let wrapper;
 
   let issuesRequest;
@@ -63,10 +63,7 @@ describe('OrganizationStream -> Polling', function() {
       },
     };
 
-    wrapper = mount(
-      <OrganizationStream {...newRouter} {...defaultProps} {...p} />,
-      routerContext
-    );
+    wrapper = mount(<IssueList {...newRouter} {...defaultProps} {...p} />, routerContext);
 
     await Promise.resolve();
     jest.runAllTimers();
diff --git a/tests/js/spec/views/organizationStream/overview.spec.jsx b/tests/js/spec/views/issueList/overview.spec.jsx
similarity index 94%
rename from tests/js/spec/views/organizationStream/overview.spec.jsx
rename to tests/js/spec/views/issueList/overview.spec.jsx
index e95edb97ef..fa6d4fd4e2 100644
--- a/tests/js/spec/views/organizationStream/overview.spec.jsx
+++ b/tests/js/spec/views/issueList/overview.spec.jsx
@@ -6,22 +6,20 @@ import {initializeOrg} from 'app-test/helpers/initializeOrg';
 import {mount, shallow} from 'enzyme';
 import ErrorRobot from 'app/components/errorRobot';
 import GroupStore from 'app/stores/groupStore';
-import OrganizationStreamWithStores, {
-  OrganizationStream,
-} from 'app/views/organizationStream/overview';
+import IssueListWithStores, {IssueList} from 'app/views/issueList/overview';
 import StreamGroup from 'app/components/stream/group';
 import TagStore from 'app/stores/tagStore';
 
-// Mock <StreamSidebar> and <StreamActions>
-jest.mock('app/views/organizationStream/sidebar', () => jest.fn(() => null));
-jest.mock('app/views/organizationStream/actions', () => jest.fn(() => null));
+// Mock <IssueListSidebar> and <IssueListActions>
+jest.mock('app/views/issueList/sidebar', () => jest.fn(() => null));
+jest.mock('app/views/issueList/actions', () => jest.fn(() => null));
 jest.mock('app/components/stream/group', () => jest.fn(() => null));
 
 const DEFAULT_LINKS_HEADER =
   '<http://127.0.0.1:8000/api/0/organizations/org-slug/issues/?cursor=1443575731:0:1>; rel="previous"; results="false"; cursor="1443575731:0:1", ' +
   '<http://127.0.0.1:8000/api/0/organizations/org-slug/issues/?cursor=1443575000:0:0>; rel="next"; results="true"; cursor="1443575000:0:0"';
 
-describe('OrganizationStream', function() {
+describe('IssueList,', function() {
   let wrapper;
   let props;
 
@@ -138,7 +136,7 @@ describe('OrganizationStream', function() {
 
     /* helpers */
     const getSavedSearchTitle = w =>
-      w.find('OrganizationSavedSearchSelector DropdownMenu ButtonTitle').text();
+      w.find('SavedSearchSelector DropdownMenu ButtonTitle').text();
 
     const getSearchBarValue = w =>
       w
@@ -160,7 +158,7 @@ describe('OrganizationStream', function() {
       };
 
       wrapper = mount(
-        <OrganizationStreamWithStores {...newRouter} {...defaultProps} {...p} />,
+        <IssueListWithStores {...newRouter} {...defaultProps} {...p} />,
         routerContext
       );
     };
@@ -439,9 +437,9 @@ describe('OrganizationStream', function() {
       await tick();
       wrapper.update();
 
-      wrapper.find('OrganizationSavedSearchSelector DropdownButton').simulate('click');
+      wrapper.find('SavedSearchSelector DropdownButton').simulate('click');
       wrapper
-        .find('OrganizationSavedSearchSelector MenuItem a')
+        .find('SavedSearchSelector MenuItem a')
         .first()
         .simulate('click');
 
@@ -464,9 +462,9 @@ describe('OrganizationStream', function() {
         },
       });
 
-      wrapper.find('SortOptions DropdownButton').simulate('click');
+      wrapper.find('IssueListSortOptions DropdownButton').simulate('click');
       wrapper
-        .find('SortOptions MenuItem a')
+        .find('IssueListSortOptions MenuItem a')
         .at(3)
         .simulate('click');
 
@@ -503,10 +501,10 @@ describe('OrganizationStream', function() {
 
       // Update the search input
       wrapper
-        .find('StreamFilters SmartSearchBar StyledInput input')
+        .find('IssueListFilters SmartSearchBar StyledInput input')
         .simulate('change', {target: {value: 'dogs'}});
       // Submit the form
-      wrapper.find('StreamFilters SmartSearchBar form').simulate('submit');
+      wrapper.find('IssueListFilters SmartSearchBar form').simulate('submit');
       await wrapper.update();
 
       expect(browserHistory.push).toHaveBeenLastCalledWith(
@@ -568,7 +566,7 @@ describe('OrganizationStream', function() {
         },
       });
 
-      expect(wrapper.find('OrganizationSavedSearchSelector ButtonTitle').text()).toBe(
+      expect(wrapper.find('SavedSearchSelector ButtonTitle').text()).toBe(
         'Custom Search'
       );
 
@@ -597,7 +595,7 @@ describe('OrganizationStream', function() {
       await tick();
       wrapper.update();
 
-      expect(wrapper.find('OrganizationSavedSearchSelector ButtonTitle').text()).toBe(
+      expect(wrapper.find('SavedSearchSelector ButtonTitle').text()).toBe(
         'My Pinned Search'
       );
 
@@ -646,9 +644,9 @@ describe('OrganizationStream', function() {
         },
       });
 
-      wrapper.find('OrganizationSavedSearchSelector DropdownButton').simulate('click');
+      wrapper.find('SavedSearchSelector DropdownButton').simulate('click');
       wrapper
-        .find('OrganizationSavedSearchSelector MenuItem a')
+        .find('SavedSearchSelector MenuItem a')
         .first()
         .simulate('click');
 
@@ -669,7 +667,7 @@ describe('OrganizationStream', function() {
         },
       });
 
-      expect(wrapper.find('OrganizationSavedSearchSelector ButtonTitle').text()).toBe(
+      expect(wrapper.find('SavedSearchSelector ButtonTitle').text()).toBe(
         'Unresolved Issues'
       );
 
@@ -696,14 +694,14 @@ describe('OrganizationStream', function() {
       await tick();
       wrapper.update();
 
-      expect(wrapper.find('OrganizationSavedSearchSelector ButtonTitle').text()).toBe(
+      expect(wrapper.find('SavedSearchSelector ButtonTitle').text()).toBe(
         'Unresolved Issues'
       );
 
       // Select other saved search
-      wrapper.find('OrganizationSavedSearchSelector DropdownButton').simulate('click');
+      wrapper.find('SavedSearchSelector DropdownButton').simulate('click');
       wrapper
-        .find('OrganizationSavedSearchSelector MenuItem a')
+        .find('SavedSearchSelector MenuItem a')
         .at(1)
         .simulate('click');
 
@@ -724,7 +722,7 @@ describe('OrganizationStream', function() {
         },
       });
 
-      expect(wrapper.find('OrganizationSavedSearchSelector ButtonTitle').text()).toBe(
+      expect(wrapper.find('SavedSearchSelector ButtonTitle').text()).toBe(
         'Assigned to Me'
       );
 
@@ -760,7 +758,7 @@ describe('OrganizationStream', function() {
       await tick();
       wrapper.update();
 
-      expect(wrapper.find('OrganizationSavedSearchSelector ButtonTitle').text()).toBe(
+      expect(wrapper.find('SavedSearchSelector ButtonTitle').text()).toBe(
         'Assigned to Me'
       );
     });
@@ -990,7 +988,7 @@ describe('OrganizationStream', function() {
   describe('transitionTo', function() {
     let instance;
     beforeEach(function() {
-      wrapper = shallow(<OrganizationStream {...props} />, {
+      wrapper = shallow(<IssueList {...props} />, {
         disableLifecycleMethods: false,
       });
       instance = wrapper.instance();
@@ -1109,7 +1107,7 @@ describe('OrganizationStream', function() {
 
   describe('getEndpointParams', function() {
     beforeEach(function() {
-      wrapper = shallow(<OrganizationStream {...props} />, {
+      wrapper = shallow(<IssueList {...props} />, {
         disableLifecycleMethods: false,
       });
     });
@@ -1156,7 +1154,7 @@ describe('OrganizationStream', function() {
 
   describe('componentDidMount', function() {
     beforeEach(function() {
-      wrapper = shallow(<OrganizationStream {...props} />);
+      wrapper = shallow(<IssueList {...props} />);
     });
 
     it('fetches tags and sets state', async function() {
@@ -1199,7 +1197,7 @@ describe('OrganizationStream', function() {
         },
       });
       fetchDataMock.mockReset();
-      wrapper = shallow(<OrganizationStream {...props} />, {
+      wrapper = shallow(<IssueList {...props} />, {
         disableLifecycleMethods: false,
       });
     });
@@ -1252,7 +1250,7 @@ describe('OrganizationStream', function() {
 
   describe('componentDidUpdate fetching members', function() {
     beforeEach(function() {
-      wrapper = shallow(<OrganizationStream {...props} />, {
+      wrapper = shallow(<IssueList {...props} />, {
         disableLifecycleMethods: false,
       });
       wrapper.instance().fetchData = jest.fn();
@@ -1275,7 +1273,7 @@ describe('OrganizationStream', function() {
 
   describe('componentDidUpdate fetching tags', function() {
     beforeEach(function() {
-      wrapper = shallow(<OrganizationStream {...props} />, {
+      wrapper = shallow(<IssueList {...props} />, {
         disableLifecycleMethods: false,
       });
       wrapper.instance().fetchData = jest.fn();
@@ -1299,7 +1297,7 @@ describe('OrganizationStream', function() {
 
   describe('processingIssues', function() {
     beforeEach(function() {
-      wrapper = shallow(<OrganizationStream {...props} />);
+      wrapper = shallow(<IssueList {...props} />);
     });
 
     it('fetches and displays processing issues', async function() {
@@ -1320,7 +1318,7 @@ describe('OrganizationStream', function() {
 
   describe('render states', function() {
     beforeEach(function() {
-      wrapper = shallow(<OrganizationStream {...props} />, {
+      wrapper = shallow(<IssueList {...props} />, {
         disableLifecycleMethods: false,
       });
     });
@@ -1370,7 +1368,7 @@ describe('OrganizationStream', function() {
         }),
         ...moreProps,
       };
-      const localWrapper = shallow(<OrganizationStream {...defaultProps} />, {
+      const localWrapper = shallow(<IssueList {...defaultProps} />, {
         disableLifecycleMethods: false,
       });
       localWrapper.setState({
diff --git a/tests/js/spec/views/organizationStream/searchBar.spec.jsx b/tests/js/spec/views/issueList/searchBar.spec.jsx
similarity index 90%
rename from tests/js/spec/views/organizationStream/searchBar.spec.jsx
rename to tests/js/spec/views/issueList/searchBar.spec.jsx
index e463d6760f..80148173cf 100644
--- a/tests/js/spec/views/organizationStream/searchBar.spec.jsx
+++ b/tests/js/spec/views/issueList/searchBar.spec.jsx
@@ -2,10 +2,10 @@ import React from 'react';
 
 import {initializeOrg} from 'app-test/helpers/initializeOrg';
 import {mount} from 'enzyme';
-import SearchBar from 'app/views/organizationStream/searchBar';
+import IssueListSearchBar from 'app/views/issueList/searchBar';
 import TagStore from 'app/stores/tagStore';
 
-describe('SearchBar', function() {
+describe('IssueListSearchBar', function() {
   let options;
   let tagValuePromise;
   let supportedTags;
@@ -57,7 +57,7 @@ describe('SearchBar', function() {
         supportedTags,
         onSearch: jest.fn(),
       };
-      const searchBar = mount(<SearchBar {...props} />, options);
+      const searchBar = mount(<IssueListSearchBar {...props} />, options);
       clickInput(searchBar);
       jest.advanceTimersByTime(301);
       expect(searchBar.find('SearchDropdown').prop('searchSubstring')).toEqual('"fu"');
@@ -80,7 +80,7 @@ describe('SearchBar', function() {
         onSearch: jest.fn(),
       };
 
-      const searchBar = mount(<SearchBar {...props} />, options);
+      const searchBar = mount(<IssueListSearchBar {...props} />, options);
       clickInput(searchBar);
       expect(searchBar.state.searchTerm).toEqual();
       expect(searchBar.find('SearchDropdown').prop('searchSubstring')).toEqual(
@@ -102,7 +102,7 @@ describe('SearchBar', function() {
         supportedTags,
         onSearch: jest.fn(),
       };
-      const searchBar = mount(<SearchBar {...props} />, options);
+      const searchBar = mount(<IssueListSearchBar {...props} />, options);
       clickInput(searchBar);
       jest.advanceTimersByTime(301);
       expect(loader).not.toHaveBeenCalled();
@@ -130,7 +130,7 @@ describe('SearchBar', function() {
         tagValueLoader: loader,
         supportedTags,
       };
-      const searchBar = mount(<SearchBar {...props} />, options);
+      const searchBar = mount(<IssueListSearchBar {...props} />, options);
       clickInput(searchBar);
       jest.advanceTimersByTime(301);
       expect(searchBar.find('SearchDropdown').prop('searchSubstring')).toEqual('"fu"');
@@ -163,7 +163,7 @@ describe('SearchBar', function() {
         supportedTags,
       };
       jest.useRealTimers();
-      const wrapper = mount(<SearchBar {...props} />, options);
+      const wrapper = mount(<IssueListSearchBar {...props} />, options);
 
       wrapper.find('input').simulate('change', {target: {value: 'is:'}});
       await tick();
@@ -191,7 +191,7 @@ describe('SearchBar', function() {
         supportedTags,
       };
       jest.useRealTimers();
-      const wrapper = mount(<SearchBar {...props} />, options);
+      const wrapper = mount(<IssueListSearchBar {...props} />, options);
 
       wrapper.find('input').simulate('change', {target: {value: 'is:'}});
       await tick();
@@ -252,7 +252,7 @@ describe('SearchBar', function() {
         supportedTags,
         organization,
       };
-      const searchBar = mount(<SearchBar {...props} />, routerContext);
+      const searchBar = mount(<IssueListSearchBar {...props} />, routerContext);
       expect(searchBar.find('[data-test-id="pin-icon"]')).toHaveLength(2);
     });
 
@@ -265,7 +265,7 @@ describe('SearchBar', function() {
         supportedTags,
         organization,
       };
-      const searchBar = mount(<SearchBar {...props} />, routerContext);
+      const searchBar = mount(<IssueListSearchBar {...props} />, routerContext);
       searchBar.find('button[aria-label="Pin this search"]').simulate('click');
 
       expect(pinSearch).toHaveBeenLastCalledWith(
@@ -290,7 +290,7 @@ describe('SearchBar', function() {
         organization,
         pinnedSearch: {id: '1', query: 'url:"fu"'},
       };
-      const searchBar = mount(<SearchBar {...props} />, routerContext);
+      const searchBar = mount(<IssueListSearchBar {...props} />, routerContext);
       searchBar.find('button[aria-label="Unpin this search"]').simulate('click');
 
       expect(unpinSearch).toHaveBeenLastCalledWith(
diff --git a/tests/js/spec/views/organizationStream/tagFilter.spec.jsx b/tests/js/spec/views/issueList/tagFilter.spec.jsx
similarity index 92%
rename from tests/js/spec/views/organizationStream/tagFilter.spec.jsx
rename to tests/js/spec/views/issueList/tagFilter.spec.jsx
index c29bfadd18..ae399b9d94 100644
--- a/tests/js/spec/views/organizationStream/tagFilter.spec.jsx
+++ b/tests/js/spec/views/issueList/tagFilter.spec.jsx
@@ -1,9 +1,9 @@
 import React from 'react';
 import {mount} from 'enzyme';
 
-import StreamTagFilter from 'app/views/organizationStream/tagFilter';
+import IssueListTagFilter from 'app/views/issueList/tagFilter';
 
-describe('Stream TagFilter', function() {
+describe('IssueListTagFilter', function() {
   let tagValueLoader;
   let project;
 
@@ -32,7 +32,7 @@ describe('Stream TagFilter', function() {
     const selectMock = jest.fn();
     const tag = {key: 'browser', name: 'Browser'};
     const wrapper = mount(
-      <StreamTagFilter
+      <IssueListTagFilter
         tag={tag}
         projectId={project.slug}
         value=""
@@ -57,7 +57,7 @@ describe('Stream TagFilter', function() {
     const selectMock = jest.fn();
     const tag = {key: 'browser', name: 'Browser'};
     const wrapper = mount(
-      <StreamTagFilter
+      <IssueListTagFilter
         tag={tag}
         value=""
         onSelect={selectMock}
