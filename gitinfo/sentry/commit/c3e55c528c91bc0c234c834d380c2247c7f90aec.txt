commit c3e55c528c91bc0c234c834d380c2247c7f90aec
Author: David Cramer <dcramer@gmail.com>
Date:   Mon Sep 5 11:52:04 2011 -0700

    Cleaning up some code (pep8)

diff --git a/sentry/client/base.py b/sentry/client/base.py
index 4b7b1db240..725e7470c0 100644
--- a/sentry/client/base.py
+++ b/sentry/client/base.py
@@ -61,7 +61,7 @@ class SentryClient(object):
             thrash_count = 0
 
         if thrash_count > settings.THRASHING_LIMIT:
-             return (True, self.get_last_message_id(checksum))
+            return (True, self.get_last_message_id(checksum))
 
         return (False, None)
 
@@ -175,7 +175,7 @@ class SentryClient(object):
         if kwargs.get('view'):
             # get list of modules from right to left
             parts = kwargs['view'].split('.')
-            module_list = ['.'.join(parts[:idx]) for idx in xrange(1, len(parts)+1)][::-1]
+            module_list = ['.'.join(parts[:idx]) for idx in xrange(1, len(parts) + 1)][::-1]
             version = None
             module = None
             for m in module_list:
@@ -249,7 +249,7 @@ class SentryClient(object):
             for url in settings.REMOTE_URL:
                 timestamp = time.time()
                 signature = get_signature(message, timestamp)
-                headers={
+                headers = {
                     'Authorization': get_auth_header(signature, timestamp, '%s/%s' % (self.__class__.__name__, sentry.VERSION)),
                     'Content-Type': 'application/octet-stream',
                 }
@@ -259,11 +259,11 @@ class SentryClient(object):
                 except urllib2.HTTPError, e:
                     body = e.read()
                     logger.error('Unable to reach Sentry log server: %s (url: %%s, body: %%s)' % (e,), url, body,
-                                 exc_info=True, extra={'data':{'body': body, 'remote_url': url}})
+                                 exc_info=True, extra={'data': {'body': body, 'remote_url': url}})
                     logger.log(kwargs.pop('level', None) or logging.ERROR, kwargs.pop('message', None))
                 except urllib2.URLError, e:
                     logger.error('Unable to reach Sentry log server: %s (url: %%s)' % (e,), url,
-                                 exc_info=True, extra={'data':{'remote_url': url}})
+                                 exc_info=True, extra={'data': {'remote_url': url}})
                     logger.log(kwargs.pop('level', None) or logging.ERROR, kwargs.pop('message', None))
         else:
             from sentry.models import GroupedMessage
diff --git a/sentry/models.py b/sentry/models.py
index 59ccee5c07..edde1278f3 100644
--- a/sentry/models.py
+++ b/sentry/models.py
@@ -60,7 +60,8 @@ class GzippedDictField(models.TextField):
         return value
 
     def get_prep_value(self, value):
-        if value is None: return
+        if value is None:
+            return
         return base64.b64encode(pickle.dumps(transform(value)).encode('zlib'))
  
     def value_to_string(self, obj):
diff --git a/sentry/scripts/runner.py b/sentry/scripts/runner.py
index 01cc5d7975..a2b9c3fcf9 100644
--- a/sentry/scripts/runner.py
+++ b/sentry/scripts/runner.py
@@ -89,6 +89,7 @@ class SentryServer(DaemonRunner):
 
     def run(self):
         from sentry.wsgi import application
+
         def inner_run():
             wsgi.server(eventlet.listen((self.host, self.port)), application)
             
@@ -164,7 +165,7 @@ def cleanup(days=30, logger=None, site=None, server=None, level=None):
         for obj in RangeQuerySetWrapper(qs):
             for key, value in SkinnyQuerySet(MessageFilterValue).filter(group=obj).values_list('key', 'value'):
                 if not MessageFilterValue.objects.filter(key=key, value=value).exclude(group=obj).exists():
-                    print ">>> Removing <FilterValue: key=%s, value=%s>" % ( key, value)
+                    print ">>> Removing <FilterValue: key=%s, value=%s>" % (key, value)
                     FilterValue.objects.filter(key=key, value=value).delete()
             print ">>> Removing <%s: id=%s>" % (obj.__class__.__name__, obj.pk)
             obj.delete()
@@ -179,7 +180,7 @@ def cleanup(days=30, logger=None, site=None, server=None, level=None):
         for obj in SkinnyQuerySet(GroupedMessage).filter(pk__in=groups_to_delete):
             for key, value in SkinnyQuerySet(MessageFilterValue).filter(group=obj).values_list('key', 'value'):
                 if not MessageFilterValue.objects.filter(key=key, value=value).exclude(group=obj).exists():
-                    print ">>> Removing <FilterValue: key=%s, value=%s>" % ( key, value)
+                    print ">>> Removing <FilterValue: key=%s, value=%s>" % (key, value)
                     FilterValue.objects.filter(key=key, value=value).delete()
             print ">>> Removing <%s: id=%s>" % (obj.__class__.__name__, obj.pk)
             obj.delete()
diff --git a/sentry/utils/stacks.py b/sentry/utils/stacks.py
index 896fe51c56..0a1efaa92c 100644
--- a/sentry/utils/stacks.py
+++ b/sentry/utils/stacks.py
@@ -131,7 +131,7 @@ def get_template_info(template_info, exc_value=None):
             before = escape(template_source[upto:start])
             during = escape(template_source[start:end])
             after = escape(template_source[end:next])
-        source_lines.append( (num, escape(template_source[upto:next])) )
+        source_lines.append((num, escape(template_source[upto:next])))
         upto = next
     total = len(source_lines)
 
diff --git a/sentry/web/views.py b/sentry/web/views.py
index 09ded32788..d4ffbf6c93 100644
--- a/sentry/web/views.py
+++ b/sentry/web/views.py
@@ -296,7 +296,7 @@ def ajax_handler(request):
         response['Content-Type'] = 'application/json'
         return response
     
-    if op in ['notification','poll','resolve', 'clear','chart']:
+    if op in ['notification', 'poll', 'resolve', 'clear', 'chart']:
         return locals()[op](request)  
     else:
         return HttpResponseBadRequest()
@@ -370,7 +370,7 @@ def group_message_list(request, group_id):
         'group': group,
         'message_list': message_list,
         'page': 'messages',
-        'request' : request
+        'request': request
     })
 
 @login_required
