commit c4bc2a61778907796ea65eaabd3514be4dfefb80
Author: Lyn Nagara <lyn.nagara@gmail.com>
Date:   Tue Jun 12 11:27:59 2018 -0700

    Revert "chore(environments): Remove environment feature flag switch from UI (#8691)" (#8721)
    
    This reverts commit 91be3167b19515bb1cea79e698876b94a1c01768.

diff --git a/src/sentry/static/sentry/app/components/group/releaseStats.jsx b/src/sentry/static/sentry/app/components/group/releaseStats.jsx
index 0c9a411dfb..566b7aa1da 100644
--- a/src/sentry/static/sentry/app/components/group/releaseStats.jsx
+++ b/src/sentry/static/sentry/app/components/group/releaseStats.jsx
@@ -1,29 +1,65 @@
 import PropTypes from 'prop-types';
 import React from 'react';
+import Reflux from 'reflux';
 import createReactClass from 'create-react-class';
-
-import SentryTypes from 'app/proptypes';
 import ApiMixin from 'app/mixins/apiMixin';
+import DropdownLink from 'app/components/dropdownLink';
+import {setActiveEnvironment} from 'app/actionCreators/environments';
+import EnvironmentStore from 'app/stores/environmentStore';
+import LatestContextStore from 'app/stores/latestContextStore';
 import LoadingIndicator from 'app/components/loadingIndicator';
 import GroupState from 'app/mixins/groupState';
 import GroupReleaseChart from 'app/components/group/releaseChart';
+import MenuItem from 'app/components/menuItem';
 import SeenInfo from 'app/components/group/seenInfo';
 import {t} from 'app/locale';
-import withEnvironment from 'app/utils/withEnvironment';
 
 const GroupReleaseStats = createReactClass({
   displayName: 'GroupReleaseStats',
 
   propTypes: {
-    environment: SentryTypes.Environment,
     group: PropTypes.object,
     allEnvironments: PropTypes.object,
   },
 
-  mixins: [ApiMixin, GroupState],
+  contextTypes: {
+    organization: PropTypes.object,
+  },
+
+  mixins: [
+    ApiMixin,
+    GroupState,
+    Reflux.listenTo(LatestContextStore, 'onLatestContextChange'),
+  ],
+
+  getInitialState() {
+    let envList = EnvironmentStore.getActive();
+
+    return {
+      envList,
+      environment: LatestContextStore.getInitialState().environment,
+      hasEnvironmentsFeature: new Set(this.context.organization.features).has(
+        'environments'
+      ),
+    };
+  },
+
+  getEnvironment(envName) {
+    let defaultEnv = EnvironmentStore.getDefault();
+    let queriedEnvironment = EnvironmentStore.getByName(envName);
+
+    return queriedEnvironment || defaultEnv;
+  },
+
+  onLatestContextChange(context) {
+    this.setState({environment: context.environment || null});
+  },
 
   render() {
-    let {group, allEnvironments, environment} = this.props;
+    let {group, allEnvironments} = this.props;
+    let {environment, hasEnvironmentsFeature} = this.state;
+
+    let envList = this.state.envList || [];
 
     let envName = environment ? environment.displayName : t('All Environments');
 
@@ -34,7 +70,33 @@ const GroupReleaseStats = createReactClass({
 
     return (
       <div className="env-stats">
-        <h6>{envName}</h6>
+        <h6>
+          <span>
+            {hasEnvironmentsFeature ? (
+              envName
+            ) : (
+              <DropdownLink title={envName}>
+                <MenuItem
+                  isActive={environment === null}
+                  onClick={() => setActiveEnvironment(null)}
+                >
+                  {t('All Environments')}
+                </MenuItem>
+                {envList.map(env => {
+                  return (
+                    <MenuItem
+                      key={env.name}
+                      isActive={env.name === envName}
+                      onClick={() => setActiveEnvironment(env)}
+                    >
+                      {env.displayName}
+                    </MenuItem>
+                  );
+                })}
+              </DropdownLink>
+            )}
+          </span>
+        </h6>
         <div className="env-content">
           {isLoading ? (
             <LoadingIndicator />
@@ -101,6 +163,4 @@ const GroupReleaseStats = createReactClass({
   },
 });
 
-export default withEnvironment(GroupReleaseStats);
-
-export {GroupReleaseStats};
+export default GroupReleaseStats;
diff --git a/src/sentry/static/sentry/app/components/projectHeader/index.jsx b/src/sentry/static/sentry/app/components/projectHeader/index.jsx
index a270bacd4e..c2f95ad195 100644
--- a/src/sentry/static/sentry/app/components/projectHeader/index.jsx
+++ b/src/sentry/static/sentry/app/components/projectHeader/index.jsx
@@ -42,6 +42,8 @@ class ProjectHeader extends React.Component {
     let orgFeatures = new Set(org.features);
     let allEnvironmentsLabel = t('All environments');
 
+    // TODO: remove when feature is released
+    let hasEnvironmentsFeature = orgFeatures.has('environments');
     let pagesWithEnvironments = new Set([
       'stream',
       'releases',
@@ -49,7 +51,8 @@ class ProjectHeader extends React.Component {
       'events',
       'user-feedback',
     ]);
-    let showEnvironmentsToggle = pagesWithEnvironments.has(navSection);
+    let pageHasEnvironments = pagesWithEnvironments.has(navSection);
+    let showEnvironmentsToggle = hasEnvironmentsFeature && pageHasEnvironments;
 
     let activeEnvironmentTitle = activeEnvironment
       ? activeEnvironment.displayName
diff --git a/src/sentry/static/sentry/app/utils/withEnvironment.jsx b/src/sentry/static/sentry/app/utils/withEnvironment.jsx
index 5bea179882..75b52ce38b 100644
--- a/src/sentry/static/sentry/app/utils/withEnvironment.jsx
+++ b/src/sentry/static/sentry/app/utils/withEnvironment.jsx
@@ -27,7 +27,12 @@ const withEnvironment = WrappedComponent =>
     },
 
     render() {
-      return <WrappedComponent environment={this.state.environment} {...this.props} />;
+      const features = new Set(
+        this.state.organization ? this.state.organization.features : []
+      );
+      const environment = features.has('environments') ? this.state.environment : null;
+
+      return <WrappedComponent environment={environment} {...this.props} />;
     },
   });
 
diff --git a/src/sentry/static/sentry/app/utils/withEnvironmentInQueryString.jsx b/src/sentry/static/sentry/app/utils/withEnvironmentInQueryString.jsx
index 30487fee17..e68c8256ec 100644
--- a/src/sentry/static/sentry/app/utils/withEnvironmentInQueryString.jsx
+++ b/src/sentry/static/sentry/app/utils/withEnvironmentInQueryString.jsx
@@ -24,40 +24,46 @@ const withEnvironmentInQueryString = WrappedComponent =>
       return {
         environment: latestContext.environment,
         organization: latestContext.organization,
+        hasEnvironmentsFeature: this.hasEnvironmentsFeature(latestContext.organization),
       };
     },
 
     componentWillMount() {
-      const {environment} = this.state;
+      const {hasEnvironmentsFeature, environment} = this.state;
 
-      const {query, pathname} = this.props.location;
+      if (hasEnvironmentsFeature) {
+        const {query, pathname} = this.props.location;
 
-      const isDefaultEnvironment = environment === EnvironmentStore.getDefault();
+        const isDefaultEnvironment = environment === EnvironmentStore.getDefault();
 
-      // Update the query string to match environment if they are not in sync
-      if (environment) {
-        if (environment.name !== query.environment) {
-          if (isDefaultEnvironment) {
-            delete query.environment;
-          } else {
-            query.environment = environment.name;
+        // Update the query string to match environment if they are not in sync
+        if (environment) {
+          if (environment.name !== query.environment) {
+            if (isDefaultEnvironment) {
+              delete query.environment;
+            } else {
+              query.environment = environment.name;
+            }
+            browserHistory.replace(`${pathname}?${qs.stringify(query)}`);
+          }
+        } else {
+          if (environment === null && !isDefaultEnvironment) {
+            query.environment = ALL_ENVIRONMENTS_KEY;
+            browserHistory.replace(`${pathname}?${qs.stringify(query)}`);
           }
-          browserHistory.replace(`${pathname}?${qs.stringify(query)}`);
-        }
-      } else {
-        if (environment === null && !isDefaultEnvironment) {
-          query.environment = ALL_ENVIRONMENTS_KEY;
-          browserHistory.replace(`${pathname}?${qs.stringify(query)}`);
         }
       }
     },
 
     onLatestContextChange({environment, organization}) {
+      // TODO(lyn): Remove this when environments feature is active
+      const hasEnvironmentsFeature = this.hasEnvironmentsFeature(organization);
+
       const environmentHasChanged = environment !== this.state.environment;
 
       const defaultEnvironment = EnvironmentStore.getDefault();
 
-      if (environmentHasChanged) {
+      if (hasEnvironmentsFeature && environmentHasChanged) {
         const {query, pathname} = this.props.location;
         if (environment === defaultEnvironment) {
           // We never show environment in the query string if it's the default one
@@ -74,11 +80,21 @@ const withEnvironmentInQueryString = WrappedComponent =>
       this.setState({
         environment,
         organization,
+        hasEnvironmentsFeature,
       });
     },
 
+    hasEnvironmentsFeature(org) {
+      const features = new Set(org ? org.features : []);
+      return features.has('environments');
+    },
+
     render() {
-      return <WrappedComponent environment={this.state.environment} {...this.props} />;
+      const environment = this.state.hasEnvironmentsFeature
+        ? this.state.environment
+        : null;
+
+      return <WrappedComponent environment={environment} {...this.props} />;
     },
   });
 
diff --git a/src/sentry/static/sentry/app/views/releases/releaseOverview.jsx b/src/sentry/static/sentry/app/views/releases/releaseOverview.jsx
index 230485f375..9d5381fdbf 100644
--- a/src/sentry/static/sentry/app/views/releases/releaseOverview.jsx
+++ b/src/sentry/static/sentry/app/views/releases/releaseOverview.jsx
@@ -305,6 +305,15 @@ const ReleaseOverview = createReactClass({
                       deploy.environment
                     )}`;
 
+                    // TODO(lyn): Remove when environment feature switched on
+                    if (!this.getFeatures().has('environments')) {
+                      let q = encodeURIComponent(
+                        `environment:${deploy.environment} release:${version}`
+                      );
+                      href = `/${orgId}/${projectId}/?query=${q}`;
+                    }
+                    // End remove block
+
                     return (
                       <li key={deploy.id}>
                         <a href={href} title={t('View in stream')}>
diff --git a/src/sentry/static/sentry/app/views/stream/index.jsx b/src/sentry/static/sentry/app/views/stream/index.jsx
index 153673a156..257efdd434 100644
--- a/src/sentry/static/sentry/app/views/stream/index.jsx
+++ b/src/sentry/static/sentry/app/views/stream/index.jsx
@@ -21,9 +21,14 @@ const StreamContainer = createReactClass({
   mixins: [ProjectState, Reflux.listenTo(TagStore, 'onTagsChange')],
 
   getInitialState() {
+    const hasEnvironmentsFeature = new Set(this.getOrganization().features).has(
+      'environments'
+    );
+
     return {
       tags: TagStore.getAllTags(),
       tagsLoading: true,
+      hasEnvironmentsFeature,
     };
   },
 
@@ -46,10 +51,17 @@ const StreamContainer = createReactClass({
   },
 
   render() {
-    const {tagsLoading, tags} = this.state;
-    const filteredTags = this.filterTags(tags);
+    const {hasEnvironmentsFeature, tagsLoading, tags} = this.state;
+    const filteredTags = hasEnvironmentsFeature ? this.filterTags(this.state.tags) : tags;
 
-    return <Stream tags={filteredTags} tagsLoading={tagsLoading} {...this.props} />;
+    return (
+      <Stream
+        hasEnvironmentsFeature={hasEnvironmentsFeature}
+        tags={filteredTags}
+        tagsLoading={tagsLoading}
+        {...this.props}
+      />
+    );
   },
 });
 
diff --git a/src/sentry/static/sentry/app/views/stream/searchBar.jsx b/src/sentry/static/sentry/app/views/stream/searchBar.jsx
index ee3849bdd9..660294e5e1 100644
--- a/src/sentry/static/sentry/app/views/stream/searchBar.jsx
+++ b/src/sentry/static/sentry/app/views/stream/searchBar.jsx
@@ -110,6 +110,8 @@ const SearchBar = createReactClass({
   },
 
   getInitialState() {
+    const hasEnvironmentsFeature = this.getFeatures().has('environments');
+
     return {
       query: this.props.query !== null ? this.props.query : this.props.defaultQuery,
 
@@ -122,6 +124,7 @@ const SearchBar = createReactClass({
 
       dropdownVisible: false,
       loading: false,
+      hasEnvironmentsFeature,
     };
   },
 
@@ -190,8 +193,9 @@ const SearchBar = createReactClass({
       .map(key => key + ':')
       .filter(key => key.indexOf(query) > -1);
 
-    // If excludeEnvironment = true then remove the environment key
-    if (this.props.excludeEnvironment) {
+    // If the environment feature is active and excludeEnvironment = true
+    // then remove the environment key
+    if (this.state.hasEnvironmentsFeature && this.props.excludeEnvironment) {
       return allKeys.filter(key => key !== 'environment:');
     } else {
       return allKeys;
@@ -321,8 +325,12 @@ const SearchBar = createReactClass({
 
       if (!tag) return undefined;
 
-      // Ignore the environment tag if excludeEnvironment = true
-      if (this.props.excludeEnvironment && tagName === 'environment') {
+      // Ignore the environment tag if the feature is active and excludeEnvironment = true
+      if (
+        this.state.hasEnvironmentsFeature &&
+        this.props.excludeEnvironment &&
+        tagName === 'environment'
+      ) {
         return undefined;
       }
 
diff --git a/src/sentry/static/sentry/app/views/stream/stream.jsx b/src/sentry/static/sentry/app/views/stream/stream.jsx
index 3095bbc030..3a82ae8229 100644
--- a/src/sentry/static/sentry/app/views/stream/stream.jsx
+++ b/src/sentry/static/sentry/app/views/stream/stream.jsx
@@ -42,6 +42,7 @@ const Stream = createReactClass({
 
   propTypes: {
     environment: SentryTypes.Environment,
+    hasEnvironmentsFeature: PropTypes.bool,
     tags: PropTypes.object,
     tagsLoading: PropTypes.bool,
   },
@@ -281,12 +282,22 @@ const Stream = createReactClass({
         search => search.id === searchId
       );
       if (searchResult) {
-        const queryEnv = queryString.getQueryEnvironment(searchResult.query);
-        if (queryEnv) {
-          const env = EnvironmentStore.getByName(queryEnv);
-          setActiveEnvironment(env);
+        // New behavior is that we'll no longer want to support environment in saved search
+        // We check if the query contains a valid environment and update the global setting if so
+        // We'll always strip environment from the querystring whether valid or not
+        if (this.props.hasEnvironmentsFeature) {
+          const queryEnv = queryString.getQueryEnvironment(searchResult.query);
+          if (queryEnv) {
+            const env = EnvironmentStore.getByName(queryEnv);
+            setActiveEnvironment(env);
+          }
+          newState.query = queryString.getQueryStringWithoutEnvironment(
+            searchResult.query
+          );
+        } else {
+          // Old behavior, keep the environment in the querystring
+          newState.query = searchResult.query;
         }
-        newState.query = queryString.getQueryStringWithoutEnvironment(searchResult.query);
 
         if (this.state.searchId && !props.params.searchId) {
           newState.isDefaultSearch = true;
@@ -475,13 +486,15 @@ const Stream = createReactClass({
       // We no longer want to support environments specified in the querystring
       // To keep this aligned with old behavior though we'll update the global environment
       // and remove it from the query if someone does provide it this way
-      const queryEnvironment = queryString.getQueryEnvironment(query);
-      if (queryEnvironment !== null) {
-        const env = EnvironmentStore.getByName(queryEnvironment);
-        setActiveEnvironment(env);
-      }
+      if (this.props.hasEnvironmentsFeature) {
+        const queryEnvironment = queryString.getQueryEnvironment(query);
+        if (queryEnvironment !== null) {
+          const env = EnvironmentStore.getByName(queryEnvironment);
+          setActiveEnvironment(env);
+        }
 
-      query = queryString.getQueryStringWithoutEnvironment(query);
+        query = queryString.getQueryStringWithoutEnvironment(query);
+      }
 
       this.setState(
         {
diff --git a/tests/js/spec/components/group/__snapshots__/releaseStats.spec.jsx.snap b/tests/js/spec/components/group/__snapshots__/releaseStats.spec.jsx.snap
index 78471c5173..8e0a7ae6a0 100644
--- a/tests/js/spec/components/group/__snapshots__/releaseStats.spec.jsx.snap
+++ b/tests/js/spec/components/group/__snapshots__/releaseStats.spec.jsx.snap
@@ -35,13 +35,6 @@ exports[`GroupReleaseStats renders 1`] = `
       "tags": Array [],
     }
   }
-  environment={
-    Object {
-      "id": "1",
-      "isHidden": false,
-      "name": "production",
-    }
-  }
   group={
     Object {
       "assignedTo": null,
@@ -85,12 +78,76 @@ exports[`GroupReleaseStats renders 1`] = `
   <div
     className="env-stats"
   >
-    <h6 />
+    <h6>
+      <span>
+        <DropdownLink
+          alwaysRenderMenu={true}
+          anchorRight={false}
+          caret={true}
+          disabled={false}
+          title="All Environments"
+        >
+          <DropdownMenu
+            alwaysRenderMenu={true}
+            keepMenuOpen={false}
+          >
+            <span
+              className="dropdown"
+            >
+              <a
+                className="dropdown-actor dropdown-toggle"
+                onClick={[Function]}
+                onMouseEnter={[Function]}
+                onMouseLeave={[Function]}
+              >
+                <div
+                  className="dropdown-actor-title"
+                >
+                  <span>
+                    All Environments
+                  </span>
+                  <i
+                    className="icon-arrow-down"
+                  />
+                </div>
+              </a>
+              <ul
+                className="dropdown-menu"
+                onClick={[Function]}
+                onMouseEnter={[Function]}
+                onMouseLeave={[Function]}
+              >
+                <MenuItem
+                  isActive={true}
+                  onClick={[Function]}
+                >
+                  <li
+                    className="active"
+                    href={null}
+                    onClick={[Function]}
+                    role="presentation"
+                    title={null}
+                  >
+                    <a
+                      onClick={[Function]}
+                      tabIndex="-1"
+                    >
+                      All Environments
+                    </a>
+                  </li>
+                </MenuItem>
+              </ul>
+            </span>
+          </DropdownMenu>
+        </DropdownLink>
+      </span>
+    </h6>
     <div
       className="env-content"
     >
       <div>
         <GroupReleaseChart
+          environment="All Environments"
           environmentStats={
             Object {
               "24h": Array [
@@ -225,7 +282,7 @@ exports[`GroupReleaseStats renders 1`] = `
                 <span>
                   <Tooltip
                     key="1517281200"
-                    title="<div style=\\"width:150px\\"><div class=\\"time-label\\"><span>Jan 29th, 7:00 pm &#8594 Jan 30th, 2:59 am</span></div><dl class=\\"legend\\"><dt class=\\"inactive\\"><span></span></dt><dd>2 events</dd></dl></div>"
+                    title="<div style=\\"width:150px\\"><div class=\\"time-label\\"><span>Jan 29th, 7:00 pm &#8594 Jan 30th, 2:59 am</span></div><dl class=\\"legend\\"><dt class=\\"inactive\\"><span></span></dt><dd>2 events</dd><dt class=\\"environment\\"><span></span></dt><dd>2 events<small>in All Environments</small></dd></dl></div>"
                     tooltipOptions={
                       Object {
                         "html": true,
@@ -241,7 +298,7 @@ exports[`GroupReleaseStats renders 1`] = `
                           "width": "50%",
                         }
                       }
-                      title="<div style=\\"width:150px\\"><div class=\\"time-label\\"><span>Jan 29th, 7:00 pm &#8594 Jan 30th, 2:59 am</span></div><dl class=\\"legend\\"><dt class=\\"inactive\\"><span></span></dt><dd>2 events</dd></dl></div>"
+                      title="<div style=\\"width:150px\\"><div class=\\"time-label\\"><span>Jan 29th, 7:00 pm &#8594 Jan 30th, 2:59 am</span></div><dl class=\\"legend\\"><dt class=\\"inactive\\"><span></span></dt><dd>2 events</dd><dt class=\\"environment\\"><span></span></dt><dd>2 events<small>in All Environments</small></dd></dl></div>"
                     >
                       <span
                         className="release"
@@ -286,7 +343,7 @@ exports[`GroupReleaseStats renders 1`] = `
                   </Tooltip>
                   <Tooltip
                     key="1517310000"
-                    title="<div style=\\"width:150px\\"><div class=\\"time-label\\"><span>Jan 30th, 3:00 am &#8594 Jan 30th, 10:59 am</span></div><dl class=\\"legend\\"><dt class=\\"inactive\\"><span></span></dt><dd>1 event</dd></dl></div>"
+                    title="<div style=\\"width:150px\\"><div class=\\"time-label\\"><span>Jan 30th, 3:00 am &#8594 Jan 30th, 10:59 am</span></div><dl class=\\"legend\\"><dt class=\\"inactive\\"><span></span></dt><dd>1 event</dd><dt class=\\"environment\\"><span></span></dt><dd>1 event<small>in All Environments</small></dd></dl></div>"
                     tooltipOptions={
                       Object {
                         "html": true,
@@ -302,7 +359,7 @@ exports[`GroupReleaseStats renders 1`] = `
                           "width": "50%",
                         }
                       }
-                      title="<div style=\\"width:150px\\"><div class=\\"time-label\\"><span>Jan 30th, 3:00 am &#8594 Jan 30th, 10:59 am</span></div><dl class=\\"legend\\"><dt class=\\"inactive\\"><span></span></dt><dd>1 event</dd></dl></div>"
+                      title="<div style=\\"width:150px\\"><div class=\\"time-label\\"><span>Jan 30th, 3:00 am &#8594 Jan 30th, 10:59 am</span></div><dl class=\\"legend\\"><dt class=\\"inactive\\"><span></span></dt><dd>1 event</dd><dt class=\\"environment\\"><span></span></dt><dd>1 event<small>in All Environments</small></dd></dl></div>"
                     >
                       <span
                         className="release"
@@ -352,6 +409,7 @@ exports[`GroupReleaseStats renders 1`] = `
         </GroupReleaseChart>
         <GroupReleaseChart
           className="bar-chart-small"
+          environment="All Environments"
           environmentStats={
             Object {
               "24h": Array [
@@ -486,7 +544,7 @@ exports[`GroupReleaseStats renders 1`] = `
                 <span>
                   <Tooltip
                     key="1514764800"
-                    title="<div style=\\"width:150px\\"><div class=\\"time-label\\"><span>Dec 31st, 4:00 pm &#8594 Jan 3rd, 3:59 pm</span></div><dl class=\\"legend\\"><dt class=\\"inactive\\"><span></span></dt><dd>1 event</dd></dl></div>"
+                    title="<div style=\\"width:150px\\"><div class=\\"time-label\\"><span>Dec 31st, 4:00 pm &#8594 Jan 3rd, 3:59 pm</span></div><dl class=\\"legend\\"><dt class=\\"inactive\\"><span></span></dt><dd>1 event</dd><dt class=\\"environment\\"><span></span></dt><dd>1 event<small>in All Environments</small></dd></dl></div>"
                     tooltipOptions={
                       Object {
                         "html": true,
@@ -502,7 +560,7 @@ exports[`GroupReleaseStats renders 1`] = `
                           "width": "50%",
                         }
                       }
-                      title="<div style=\\"width:150px\\"><div class=\\"time-label\\"><span>Dec 31st, 4:00 pm &#8594 Jan 3rd, 3:59 pm</span></div><dl class=\\"legend\\"><dt class=\\"inactive\\"><span></span></dt><dd>1 event</dd></dl></div>"
+                      title="<div style=\\"width:150px\\"><div class=\\"time-label\\"><span>Dec 31st, 4:00 pm &#8594 Jan 3rd, 3:59 pm</span></div><dl class=\\"legend\\"><dt class=\\"inactive\\"><span></span></dt><dd>1 event</dd><dt class=\\"environment\\"><span></span></dt><dd>1 event<small>in All Environments</small></dd></dl></div>"
                     >
                       <span
                         className="release"
@@ -547,7 +605,7 @@ exports[`GroupReleaseStats renders 1`] = `
                   </Tooltip>
                   <Tooltip
                     key="1515024000"
-                    title="<div style=\\"width:150px\\"><div class=\\"time-label\\"><span>Jan 3rd, 4:00 pm &#8594 Jan 6th, 3:59 pm</span></div><dl class=\\"legend\\"><dt class=\\"inactive\\"><span></span></dt><dd>122 events</dd></dl></div>"
+                    title="<div style=\\"width:150px\\"><div class=\\"time-label\\"><span>Jan 3rd, 4:00 pm &#8594 Jan 6th, 3:59 pm</span></div><dl class=\\"legend\\"><dt class=\\"inactive\\"><span></span></dt><dd>122 events</dd><dt class=\\"environment\\"><span></span></dt><dd>122 events<small>in All Environments</small></dd></dl></div>"
                     tooltipOptions={
                       Object {
                         "html": true,
@@ -563,7 +621,7 @@ exports[`GroupReleaseStats renders 1`] = `
                           "width": "50%",
                         }
                       }
-                      title="<div style=\\"width:150px\\"><div class=\\"time-label\\"><span>Jan 3rd, 4:00 pm &#8594 Jan 6th, 3:59 pm</span></div><dl class=\\"legend\\"><dt class=\\"inactive\\"><span></span></dt><dd>122 events</dd></dl></div>"
+                      title="<div style=\\"width:150px\\"><div class=\\"time-label\\"><span>Jan 3rd, 4:00 pm &#8594 Jan 6th, 3:59 pm</span></div><dl class=\\"legend\\"><dt class=\\"inactive\\"><span></span></dt><dd>122 events</dd><dt class=\\"environment\\"><span></span></dt><dd>122 events<small>in All Environments</small></dd></dl></div>"
                     >
                       <span
                         className="release"
@@ -615,13 +673,9 @@ exports[`GroupReleaseStats renders 1`] = `
           <span>
             First seen
           </span>
-          <small>
-            (
-            )
-          </small>
         </h6>
         <SeenInfo
-          environment="production"
+          environment={null}
           hasRelease={false}
           orgId="org-slug"
           projectId="project-slug"
@@ -672,13 +726,9 @@ exports[`GroupReleaseStats renders 1`] = `
           <span>
             Last seen
           </span>
-          <small>
-            (
-            )
-          </small>
         </h6>
         <SeenInfo
-          environment="production"
+          environment={null}
           hasRelease={false}
           orgId="org-slug"
           projectId="project-slug"
diff --git a/tests/js/spec/components/group/__snapshots__/sidebar.spec.jsx.snap b/tests/js/spec/components/group/__snapshots__/sidebar.spec.jsx.snap
index 1dc7f34278..e57ad7313a 100644
--- a/tests/js/spec/components/group/__snapshots__/sidebar.spec.jsx.snap
+++ b/tests/js/spec/components/group/__snapshots__/sidebar.spec.jsx.snap
@@ -14,7 +14,7 @@ exports[`GroupSidebar renders with tags renders 1`] = `
       }
     }
   />
-  <withEnvironment
+  <GroupReleaseStats
     allEnvironments={
       Object {
         "assignedTo": null,
diff --git a/tests/js/spec/components/group/releaseStats.spec.jsx b/tests/js/spec/components/group/releaseStats.spec.jsx
index c1725af221..86dcc677a0 100644
--- a/tests/js/spec/components/group/releaseStats.spec.jsx
+++ b/tests/js/spec/components/group/releaseStats.spec.jsx
@@ -2,7 +2,8 @@ import React from 'react';
 import {mount} from 'enzyme';
 
 import ConfigStore from 'app/stores/configStore';
-import {GroupReleaseStats} from 'app/components/group/releaseStats';
+import GroupReleaseStats from 'app/components/group/releaseStats';
+import EnvironmentStore from 'app/stores/environmentStore';
 
 describe('GroupReleaseStats', function() {
   let component;
@@ -20,7 +21,6 @@ describe('GroupReleaseStats', function() {
       <GroupReleaseStats
         group={TestStubs.Group()}
         allEnvironments={TestStubs.Group()}
-        environment={TestStubs.Environments()[0]}
         location={TestStubs.location()}
       />,
       {
@@ -34,6 +34,7 @@ describe('GroupReleaseStats', function() {
   });
 
   it('renders', function() {
+    EnvironmentStore.loadInitialData(TestStubs.Environments());
     expect(component).toMatchSnapshot();
   });
 });
