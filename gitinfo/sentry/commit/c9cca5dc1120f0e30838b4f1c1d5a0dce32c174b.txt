commit c9cca5dc1120f0e30838b4f1c1d5a0dce32c174b
Author: Evan Purkhiser <evanpurkhiser@gmail.com>
Date:   Thu Aug 29 14:43:50 2019 -0700

    ref(features): Remove require-2fa from feature flags (#14537)

diff --git a/src/sentry/api/serializers/models/organization.py b/src/sentry/api/serializers/models/organization.py
index 94edd2dedf..97edb1cc5e 100644
--- a/src/sentry/api/serializers/models/organization.py
+++ b/src/sentry/api/serializers/models/organization.py
@@ -93,8 +93,6 @@ class OrganizationSerializer(Serializer):
             feature_list.add("open-membership")
         if not getattr(obj.flags, "disable_shared_issues"):
             feature_list.add("shared-issues")
-        if getattr(obj.flags, "require_2fa"):
-            feature_list.add("require-2fa")
 
         return {
             "id": six.text_type(obj.id),
diff --git a/src/sentry/conf/server.py b/src/sentry/conf/server.py
index 7e052d6a37..3c167443e3 100644
--- a/src/sentry/conf/server.py
+++ b/src/sentry/conf/server.py
@@ -852,8 +852,6 @@ SENTRY_FEATURES = {
     # Enable the relay functionality, for use with sentry semaphore. See
     # https://github.com/getsentry/semaphore.
     "organizations:relay": False,
-    # Enable require 2FA across organization
-    "organizations:require-2fa": False,
     # Sentry 10 - multi project interfaces.
     "organizations:sentry10": True,
     # Enable basic SSO functionality, providing configurable single sign on
diff --git a/src/sentry/features/__init__.py b/src/sentry/features/__init__.py
index e2feb814ed..5201081c5c 100644
--- a/src/sentry/features/__init__.py
+++ b/src/sentry/features/__init__.py
@@ -74,7 +74,6 @@ default_manager.add("organizations:monitors", OrganizationFeature)  # NOQA
 default_manager.add("organizations:onboarding", OrganizationFeature)  # NOQA
 default_manager.add("organizations:org-saved-searches", OrganizationFeature)  # NOQA
 default_manager.add("organizations:relay", OrganizationFeature)  # NOQA
-default_manager.add("organizations:require-2fa", OrganizationFeature)  # NOQA
 default_manager.add("organizations:sentry10", OrganizationFeature)  # NOQA
 default_manager.add("organizations:sso-basic", OrganizationFeature)  # NOQA
 default_manager.add("organizations:sso-rippling", OrganizationFeature)  # NOQA
diff --git a/src/sentry/static/sentry/app/data/forms/organizationGeneralSettings.jsx b/src/sentry/static/sentry/app/data/forms/organizationGeneralSettings.jsx
index b963564e7a..0a941b72d1 100644
--- a/src/sentry/static/sentry/app/data/forms/organizationGeneralSettings.jsx
+++ b/src/sentry/static/sentry/app/data/forms/organizationGeneralSettings.jsx
@@ -85,7 +85,6 @@ const formGroups = [
             'Are you sure you want to allow users to access your organization without having two-factor authentication enabled?'
           ),
         },
-        visible: ({features}) => features.has('require-2fa'),
       },
       {
         name: 'allowSharedIssues',
diff --git a/tests/acceptance/test_organization_settings.py b/tests/acceptance/test_organization_settings.py
index 70fc61afce..015e3673ec 100644
--- a/tests/acceptance/test_organization_settings.py
+++ b/tests/acceptance/test_organization_settings.py
@@ -23,7 +23,7 @@ class OrganizationSettingsTest(AcceptanceTestCase):
     def renders_2fa_setting(self):
         return self.browser.element_exists("#require2FA")
 
-    def test_disabled_2fa_feature(self):
+    def test_renders_2fa_setting_for_owner(self):
         user_owner = self.create_user("owner@example.com")
         organization = self.create_organization(name="Example", owner=user_owner)
         self.login_as(user_owner)
@@ -31,18 +31,7 @@ class OrganizationSettingsTest(AcceptanceTestCase):
 
         self.browser.get(path)
         self.load_organization_helper()
-        assert not self.renders_2fa_setting()
-
-    def test_renders_2fa_setting_for_owner(self):
-        user_owner = self.create_user("owner@example.com")
-        organization = self.create_organization(name="Example", owner=user_owner)
-        self.login_as(user_owner)
-        path = "/organizations/%s/settings/" % organization.slug
-
-        with self.feature("organizations:require-2fa"):
-            self.browser.get(path)
-            self.load_organization_helper()
-            assert self.renders_2fa_setting()
+        assert self.renders_2fa_setting()
 
     def test_renders_2fa_setting_for_manager(self):
         user_manager = self.create_user("manager@gexample.com")
@@ -53,10 +42,9 @@ class OrganizationSettingsTest(AcceptanceTestCase):
         self.login_as(user_manager)
         path = "/organizations/%s/settings/" % organization.slug
 
-        with self.feature("organizations:require-2fa"):
-            self.browser.get(path)
-            self.load_organization_helper()
-            assert self.renders_2fa_setting()
+        self.browser.get(path)
+        self.load_organization_helper()
+        assert self.renders_2fa_setting()
 
     def test_setting_2fa_without_2fa_enabled(self):
         user_owner = self.create_user("owner@example.com")
@@ -64,14 +52,13 @@ class OrganizationSettingsTest(AcceptanceTestCase):
         self.login_as(user_owner)
         path = "/organizations/%s/settings/" % organization.slug
 
-        with self.feature("organizations:require-2fa"):
-            self.browser.get(path)
-            self.browser.wait_until_not(".loading-indicator")
-            assert not self.browser.element_exists(".ref-organization-settings .error")
-            self.browser.click("#require2FA")
+        self.browser.get(path)
+        self.browser.wait_until_not(".loading-indicator")
+        assert not self.browser.element_exists(".ref-organization-settings .error")
+        self.browser.click("#require2FA")
 
-            self.browser.wait_until(".modal")
-            self.browser.click('.modal [data-test-id="confirm-modal"]')
-            self.browser.wait_until_not(".modal")
-            self.browser.wait_until(".ref-toast.ref-error")
-            self.load_organization_helper("setting 2fa without 2fa enabled")
+        self.browser.wait_until(".modal")
+        self.browser.click('.modal [data-test-id="confirm-modal"]')
+        self.browser.wait_until_not(".modal")
+        self.browser.wait_until(".ref-toast.ref-error")
+        self.load_organization_helper("setting 2fa without 2fa enabled")
diff --git a/tests/js/spec/views/settings/organizationGeneralSettings.spec.jsx b/tests/js/spec/views/settings/organizationGeneralSettings.spec.jsx
index 3ba29288ba..dd2f92eb21 100644
--- a/tests/js/spec/views/settings/organizationGeneralSettings.spec.jsx
+++ b/tests/js/spec/views/settings/organizationGeneralSettings.spec.jsx
@@ -188,13 +188,7 @@ describe('OrganizationGeneralSettings', function() {
   it('shows require2fa switch w/ feature flag', async function() {
     const wrapper = mount(
       <OrganizationGeneralSettings params={{orgId: org.slug}} />,
-      TestStubs.routerContext([
-        {
-          organization: TestStubs.Organization({
-            features: ['require-2fa'],
-          }),
-        },
-      ])
+      TestStubs.routerContext()
     );
 
     wrapper.setState({loading: false});
@@ -210,13 +204,7 @@ describe('OrganizationGeneralSettings', function() {
     });
     const wrapper = mount(
       <OrganizationGeneralSettings params={{orgId: org.slug}} />,
-      TestStubs.routerContext([
-        {
-          organization: TestStubs.Organization({
-            features: ['require-2fa'],
-          }),
-        },
-      ])
+      TestStubs.routerContext()
     );
 
     wrapper.setState({loading: false});
@@ -244,13 +232,7 @@ describe('OrganizationGeneralSettings', function() {
 
     const wrapper = mount(
       <OrganizationGeneralSettings params={{orgId: org.slug}} />,
-      TestStubs.routerContext([
-        {
-          organization: TestStubs.Organization({
-            features: ['require-2fa'],
-          }),
-        },
-      ])
+      TestStubs.routerContext()
     );
 
     wrapper.setState({loading: false});
@@ -288,13 +270,7 @@ describe('OrganizationGeneralSettings', function() {
 
     const wrapper = mount(
       <OrganizationGeneralSettings params={{orgId: org.slug}} />,
-      TestStubs.routerContext([
-        {
-          organization: TestStubs.Organization({
-            features: ['require-2fa'],
-          }),
-        },
-      ])
+      TestStubs.routerContext()
     );
 
     wrapper.setState({loading: false});
