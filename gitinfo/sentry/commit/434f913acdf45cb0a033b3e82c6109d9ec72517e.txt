commit 434f913acdf45cb0a033b3e82c6109d9ec72517e
Author: David Cramer <dcramer@gmail.com>
Date:   Sat Jul 18 23:38:36 2015 -0700

    Add registration to organization login

diff --git a/src/sentry/templates/sentry/login.html b/src/sentry/templates/sentry/login.html
index 7670853dad..b7fabfff3e 100644
--- a/src/sentry/templates/sentry/login.html
+++ b/src/sentry/templates/sentry/login.html
@@ -17,11 +17,11 @@
     {% if CAN_REGISTER %}
       <li{% if op == "register" %} class="active"{% endif %}>
         <a href="#register" data-toggle="tab">{% trans "Register" %}</a>
-      </li{%>
+      </li>
     {% endif %}
     <li{% if op == "sso" %} class="active"{% endif %}>
       <a href="#sso" data-toggle="tab">{% trans "Single Sign-On" %}</a>
-    </li{%>
+    </li>
   </ul>
 
   <div class="tab-content">
@@ -38,7 +38,7 @@
         {% endfor %}
 
         <fieldset class="form-actions">
-          <button type="submit" class="btn btn-primary">{% trans "Sign in" %}</button> <a class="pull-right" style="margin-top: 9px" href="{% url 'sentry-account-recover' %}">{% trans "Lose your password?" %}</a>
+          <button type="submit" class="btn btn-primary">{% trans "Login" %}</button> <a class="pull-right" style="margin-top: 9px" href="{% url 'sentry-account-recover' %}">{% trans "Lose your password?" %}</a>
         </fieldset>
       </form>
     </div>
diff --git a/src/sentry/templates/sentry/organization-login.html b/src/sentry/templates/sentry/organization-login.html
index 1bb52602d6..17152a570e 100644
--- a/src/sentry/templates/sentry/organization-login.html
+++ b/src/sentry/templates/sentry/organization-login.html
@@ -7,12 +7,6 @@
 
 {% block title %}{% trans "Login" %} | {{ block.super }}{% endblock %}
 
-{% block account_nav %}
-  {% if CAN_REGISTER %}
-    <li><a href="{% url 'sentry-register' %}">{% trans "New Account" %}</a></li>
-  {% endif %}
-{% endblock%}
-
 {% block content %}
   <section class="body org-login">
     <form class="form-stacked" action="" method="post" autocomplete="off">
@@ -35,19 +29,53 @@
           </button>
         </div>
       {% else %}
-        <p class="align-center">Sign in with your Sentry account to continue.</p>
+        <ul class="nav nav-tabs auth-toggle">
+          <li{% if op == "login" %} class="active"{% endif %}>
+            <a href="#login" data-toggle="tab">{% trans "Login" %}</a>
+          </li>
+          {% if CAN_REGISTER %}
+            <li{% if op == "register" %} class="active"{% endif %}>
+              <a href="#register" data-toggle="tab">{% trans "Register" %}</a>
+            </li>
+          {% endif %}
+        </ul>
 
-        {{ form|as_crispy_errors }}
+        <div class="tab-content basic-login">
+          <div class="tab-pane{% if op == "login" %} active{% endif %}" id="login">
+            <form class="form-stacked" action="" method="post" autocomplete="off">
+              {% csrf_token %}
 
-        <div class="basic-login">
-          {% for field in form %}
-            {{ field|as_crispy_field }}
-          {% endfor %}
-        </div>
+              <input type="hidden" name="op" value="login" />
+
+              {{ login_form|as_crispy_errors }}
+
+              {% for field in login_form %}
+                {{ field|as_crispy_field }}
+              {% endfor %}
+
+              <fieldset class="form-actions">
+                <button type="submit" class="btn btn-primary">{% trans "Login" %}</button> <a class="pull-right" style="margin-top: 9px" href="{% url 'sentry-account-recover' %}">{% trans "Lose your password?" %}</a>
+              </fieldset>
+            </form>
+          </div>
+          <div class="tab-pane{% if op == "register" %} active{% endif %}" id="register">
+            <form class="form-stacked" action="" method="post" autocomplete="off">
+              {% csrf_token %}
 
-        <fieldset class="form-actions">
-          <button type="submit" class="btn btn-primary">{% trans "Login" %}</button> <a class="pull-right" style="margin-top: 6px" href="{% url 'sentry-account-recover' %}">{% trans "Lose your password?" %}</a>
-        </fieldset>
+              <input type="hidden" name="op" value="register" />
+
+              {{ register_form|as_crispy_errors }}
+
+              {% for field in register_form %}
+                {{ field|as_crispy_field }}
+              {% endfor %}
+
+              <fieldset class="form-actions">
+                <button type="submit" class="btn btn-primary">{% trans "Register" %}</button>
+              </fieldset>
+            </form>
+          </div>
+        </div>
       {% endif %}
     </form>
   </section>
diff --git a/src/sentry/web/frontend/auth_login.py b/src/sentry/web/frontend/auth_login.py
index 87dcc0f8d9..90f1a87dd6 100644
--- a/src/sentry/web/frontend/auth_login.py
+++ b/src/sentry/web/frontend/auth_login.py
@@ -53,9 +53,6 @@ class AuthLoginView(BaseView):
         )
 
     def handle_basic_auth(self, request):
-        if request.user.is_authenticated():
-            return self.redirect(get_login_redirect(request))
-
         can_register = features.has('auth:register') or request.session.get('can_register')
 
         op = request.POST.get('op')
diff --git a/src/sentry/web/frontend/auth_organization_login.py b/src/sentry/web/frontend/auth_organization_login.py
index 47e0ee54ee..67cde016fc 100644
--- a/src/sentry/web/frontend/auth_organization_login.py
+++ b/src/sentry/web/frontend/auth_organization_login.py
@@ -1,28 +1,73 @@
 from __future__ import absolute_import, print_function
 
+from django.conf import settings
 from django.contrib.auth import login
 from django.core.urlresolvers import reverse
+from django.db import transaction
 from django.views.decorators.cache import never_cache
 
 from sentry import features
 from sentry.auth.helper import AuthHelper
-from sentry.models import AuthProvider, Organization
+from sentry.models import AuthProvider, Organization, OrganizationMemberType
 from sentry.utils.auth import get_login_redirect
-from sentry.web.forms.accounts import AuthenticationForm
+from sentry.web.forms.accounts import AuthenticationForm, RegistrationForm
 from sentry.web.frontend.base import BaseView
 
 
 class AuthOrganizationLoginView(BaseView):
     auth_required = False
 
-    def handle_basic_auth(self, request, organization):
-        form = AuthenticationForm(
-            request, request.POST or None,
+    def get_login_form(self, request):
+        op = request.POST.get('op')
+        return AuthenticationForm(
+            request, request.POST if op == 'login' else None,
             captcha=bool(request.session.get('needs_captcha')),
         )
 
-        if form.is_valid():
-            login(request, form.get_user())
+    def get_register_form(self, request):
+        op = request.POST.get('op')
+        return RegistrationForm(
+            request.POST if op == 'register' else None,
+            captcha=bool(request.session.get('needs_captcha')),
+        )
+
+    def handle_basic_auth(self, request, organization):
+        can_register = features.has('auth:register') or request.session.get('can_register')
+
+        op = request.POST.get('op')
+        login_form = self.get_login_form(request)
+        if can_register:
+            register_form = self.get_register_form(request)
+        else:
+            register_form = None
+
+        if can_register and register_form.is_valid():
+            user = register_form.save()
+
+            defaults = {
+                'has_global_access': True,
+                'type': OrganizationMemberType.MEMBER,
+            }
+
+            organization.member_set.create(
+                user=user,
+                **defaults
+            )
+
+            # HACK: grab whatever the first backend is and assume it works
+            user.backend = settings.AUTHENTICATION_BACKENDS[0]
+
+            login(request, user)
+
+            # can_register should only allow a single registration
+            request.session.pop('can_register', None)
+
+            request.session.pop('needs_captcha', None)
+
+            return self.redirect(get_login_redirect(request))
+
+        elif login_form.is_valid():
+            login(request, login_form.get_user())
 
             request.session.pop('needs_captcha', None)
 
@@ -30,15 +75,21 @@ class AuthOrganizationLoginView(BaseView):
 
         elif request.POST and not request.session.get('needs_captcha'):
             request.session['needs_captcha'] = 1
-            form = AuthenticationForm(request, request.POST or None, captcha=True)
-            form.errors.pop('captcha', None)
+            login_form = self.get_login_form(request)
+            login_form.errors.pop('captcha', None)
+            if can_register:
+                register_form = self.get_register_form(request)
+                register_form.errors.pop('captcha', None)
+
+        request.session.set_test_cookie()
 
         context = {
-            'form': form,
-            'CAN_REGISTER': features.has('auth:register') or request.session.get('can_register'),
+            'op': op or 'login',
+            'login_form': login_form,
+            'register_form': register_form,
             'organization': organization,
+            'CAN_REGISTER': can_register,
         }
-
         return self.respond('sentry/organization-login.html', context)
 
     def handle_sso(self, request, organization, auth_provider):
@@ -64,6 +115,7 @@ class AuthOrganizationLoginView(BaseView):
         return self.respond('sentry/organization-login.html', context)
 
     @never_cache
+    @transaction.atomic
     def handle(self, request, organization_slug):
         try:
             organization = Organization.objects.get(
