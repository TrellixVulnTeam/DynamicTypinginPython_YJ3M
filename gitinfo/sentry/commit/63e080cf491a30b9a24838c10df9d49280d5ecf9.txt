commit 63e080cf491a30b9a24838c10df9d49280d5ecf9
Author: David Cramer <dcramer@gmail.com>
Date:   Tue Jun 27 09:47:47 2017 -0700

    switch to bound methods for class props

diff --git a/src/sentry/static/sentry/app/components/forms/form.jsx b/src/sentry/static/sentry/app/components/forms/form.jsx
index 3e4760c5fd..d6f5e1f4cf 100644
--- a/src/sentry/static/sentry/app/components/forms/form.jsx
+++ b/src/sentry/static/sentry/app/components/forms/form.jsx
@@ -35,9 +35,6 @@ export default class Form extends React.Component {
       initialData: {...this.props.initialData},
       state: FormState.READY
     };
-    ['onSubmit', 'onSubmitSuccess', 'onSubmitError', 'onFieldChange'].forEach(f => {
-      this[f] = this[f].bind(this);
-    });
   }
 
   getChildContext() {
@@ -51,12 +48,12 @@ export default class Form extends React.Component {
     };
   }
 
-  onSubmit(e) {
+  onSubmit = e => {
     e.preventDefault();
     this.props.onSubmit(this.state.data, this.onSubmitSuccess, this.onSubmitError);
-  }
+  };
 
-  onSubmitSuccess(data) {
+  onSubmitSuccess = data => {
     let curData = this.state.data;
     let newData = {};
     Object.keys(data).forEach(k => {
@@ -69,24 +66,24 @@ export default class Form extends React.Component {
       initialData: newData
     });
     this.props.onSubmitSuccess && this.props.onSubmitSuccess(data);
-  }
+  };
 
-  onSubmitError(error) {
+  onSubmitError = error => {
     this.setState({
       state: FormState.ERROR,
       errors: error.responseJSON
     });
     this.props.onSubmitError && this.props.onSubmitError(error);
-  }
+  };
 
-  onFieldChange(name, value) {
+  onFieldChange = (name, value) => {
     this.setState({
       data: {
         ...this.state.data,
         [name]: value
       }
     });
-  }
+  };
 
   render() {
     let isSaving = this.state.state === FormState.SAVING;
diff --git a/src/sentry/static/sentry/app/components/forms/formField.jsx b/src/sentry/static/sentry/app/components/forms/formField.jsx
index 1749921102..9e38c9a0c2 100644
--- a/src/sentry/static/sentry/app/components/forms/formField.jsx
+++ b/src/sentry/static/sentry/app/components/forms/formField.jsx
@@ -39,10 +39,6 @@ export default class FormField extends React.Component {
     this.state = {
       value: this.getValue(props)
     };
-
-    ['onChange'].forEach(f => {
-      this[f] = this[f].bind(this);
-    });
   }
 
   getValue(props) {
@@ -70,7 +66,7 @@ export default class FormField extends React.Component {
     return `id-${this.props.name}`;
   }
 
-  onChange(e) {
+  onChange = e => {
     let form = (this.context || {}).form;
     this.setState(
       {
@@ -81,7 +77,7 @@ export default class FormField extends React.Component {
         form && form.onFieldChange(this.props.name, this.state.value);
       }
     );
-  }
+  };
 
   getField() {
     throw new Error('Must be implemented by child.');
