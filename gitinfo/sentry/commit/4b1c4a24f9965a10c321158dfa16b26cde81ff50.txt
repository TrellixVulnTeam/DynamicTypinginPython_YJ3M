commit 4b1c4a24f9965a10c321158dfa16b26cde81ff50
Author: David Cramer <dcramer@gmail.com>
Date:   Wed Oct 15 11:32:40 2014 +0100

    Correct sourcemap tests

diff --git a/src/sentry/tasks/fetch_source.py b/src/sentry/tasks/fetch_source.py
index b5d211aeee..1cae909aab 100644
--- a/src/sentry/tasks/fetch_source.py
+++ b/src/sentry/tasks/fetch_source.py
@@ -262,7 +262,7 @@ def expand_javascript_source(data, **kwargs):
     done_file_list = set()
     sourcemap_capable = set()
     source_code = {}
-    sourmap_idxs = {}
+    sourcemap_idxs = {}
 
     for f in frames:
         pending_file_list.add(f.abs_path)
@@ -299,16 +299,12 @@ def expand_javascript_source(data, **kwargs):
         else:
             logger.debug('Found sourcemap %r for minified script %r', sourcemap[:256], result.url)
 
-        if is_data_uri(sourcemap):
-            sourcemap_url = result.url
-        else:
-            sourcemap_url = sourcemap[:1000]
-
+        sourcemap_url = result.url[:1000]
         sourcemap_key = hashlib.md5(sourcemap_url).hexdigest()
 
         source_code[filename] = (result.body.splitlines(), sourcemap_url, sourcemap_key)
 
-        if sourcemap in sourmap_idxs:
+        if sourcemap in sourcemap_idxs:
             continue
 
         # pull down sourcemap
@@ -317,7 +313,9 @@ def expand_javascript_source(data, **kwargs):
             logger.debug('Failed parsing sourcemap index: %r', sourcemap[:15])
             continue
 
-        sourmap_idxs[sourcemap_key] = (index, sourcemap_url)
+        print(sourcemap_url, index)
+
+        sourcemap_idxs[sourcemap_key] = (index, sourcemap_url)
 
         # queue up additional source files for download
         for source in index.sources:
@@ -340,8 +338,8 @@ def expand_javascript_source(data, **kwargs):
             continue
 
         # may have had a failure pulling down the sourcemap previously
-        if sourcemap_key in sourmap_idxs and frame.colno is not None:
-            index, relative_to = sourmap_idxs[sourcemap_key]
+        if sourcemap_key in sourcemap_idxs and frame.colno is not None:
+            index, relative_to = sourcemap_idxs[sourcemap_key]
             last_state = state
             state = find_source(index, frame.lineno, frame.colno)
             abs_path = urljoin(relative_to, state.src)
@@ -376,7 +374,7 @@ def expand_javascript_source(data, **kwargs):
                 frame.abs_path = abs_path
                 frame.filename = state.src
                 frame.module = generate_module(state.src)
-        elif sourcemap_key in sourmap_idxs:
+        elif sourcemap_key in sourcemap_idxs:
             frame.data = {
                 'sourcemap': sourcemap_url,
             }
diff --git a/tests/sentry/tasks/fetch_source/tests.py b/tests/sentry/tasks/fetch_source/tests.py
index 463d5c2a7b..6cee12f5f0 100644
--- a/tests/sentry/tasks/fetch_source/tests.py
+++ b/tests/sentry/tasks/fetch_source/tests.py
@@ -165,7 +165,7 @@ class ExpandJavascriptSourceTest(TestCase):
                     'stacktrace': {
                         'frames': [
                             {
-                                'abs_path': 'http://example.com/test.js',
+                                'abs_path': 'http://example.com/test.min.js',
                                 'filename': 'test.js',
                                 'lineno': 1,
                                 'colno': 0,
@@ -176,10 +176,11 @@ class ExpandJavascriptSourceTest(TestCase):
             }
         }
         discover_sourcemap.return_value = base64_sourcemap
+        fetch_url.return_value.url = 'http://example.com/test.min.js'
         fetch_url.return_value.body = '\n'.join('<generated source>')
 
         expand_javascript_source(data)
-        fetch_url.assert_called_once_with('http://example.com/test.js')
+        fetch_url.assert_called_once_with('http://example.com/test.min.js')
 
         frame_list = data['sentry.interfaces.Exception']['values'][0]['stacktrace']['frames']
         frame = frame_list[0]
