commit 10bc2f990aafbfef0b88edc8a27fccf1cda6c387
Author: Jess MacQueen <macqueen@users.noreply.github.com>
Date:   Fri Feb 1 11:05:27 2019 -0800

    ref(tagstore): Add multi env support to get_group_tag_keys_and_top_values (#11804)

diff --git a/src/sentry/api/endpoints/group_tags.py b/src/sentry/api/endpoints/group_tags.py
index 600d393f4a..5d8c3c27d1 100644
--- a/src/sentry/api/endpoints/group_tags.py
+++ b/src/sentry/api/endpoints/group_tags.py
@@ -32,7 +32,7 @@ class GroupTagsEndpoint(GroupEndpoint, EnvironmentMixin):
             tag_keys = []
         else:
             tag_keys = tagstore.get_group_tag_keys_and_top_values(
-                group.project_id, group.id, environment_id, keys=keys,
+                group.project_id, group.id, environment_id and [environment_id], keys=keys,
                 value_limit=value_limit)
 
         return Response(serialize(tag_keys, request.user))
diff --git a/src/sentry/tagstore/base.py b/src/sentry/tagstore/base.py
index 8d7dbfa8a7..1e5b9a3573 100644
--- a/src/sentry/tagstore/base.py
+++ b/src/sentry/tagstore/base.py
@@ -420,13 +420,18 @@ class TagStorage(Service):
         raise NotImplementedError
 
     def get_group_tag_keys_and_top_values(
-            self, project_id, group_id, environment_id, keys=None, value_limit=TOP_VALUES_DEFAULT_LIMIT):
+            self, project_id, group_id, environment_ids, keys=None, value_limit=TOP_VALUES_DEFAULT_LIMIT):
+
+        # only the snuba backend supports multi env, and that overrides this method
+        if environment_ids and len(environment_ids) > 1:
+            raise NotImplementedError
 
         # If keys is unspecified, we will grab all tag keys for this group.
         tag_keys = self.get_group_tag_keys(
-            project_id, group_id, environment_id and [environment_id], keys=keys
+            project_id, group_id, environment_ids, keys=keys
         )
 
+        environment_id = environment_ids and environment_ids[0]
         for tk in tag_keys:
             tk.top_values = self.get_top_group_tag_values(
                 project_id, group_id, environment_id, tk.key, limit=value_limit)
diff --git a/src/sentry/tagstore/snuba/backend.py b/src/sentry/tagstore/snuba/backend.py
index 7d66774845..7f8f9da15b 100644
--- a/src/sentry/tagstore/snuba/backend.py
+++ b/src/sentry/tagstore/snuba/backend.py
@@ -335,7 +335,7 @@ class SnubaTagStorage(TagStorage):
         return tag.top_values
 
     def get_group_tag_keys_and_top_values(
-            self, project_id, group_id, environment_id, user=None, keys=None, value_limit=TOP_VALUES_DEFAULT_LIMIT):
+            self, project_id, group_id, environment_ids, user=None, keys=None, value_limit=TOP_VALUES_DEFAULT_LIMIT):
         # Similar to __get_tag_key_and_top_values except we get the top values
         # for all the keys provided. value_limit in this case means the number
         # of top values for each key, so the total rows returned should be
@@ -343,16 +343,14 @@ class SnubaTagStorage(TagStorage):
         start, end = self.get_time_range()
 
         # First get totals and unique counts by key.
-        keys_with_counts = self.get_group_tag_keys(
-            project_id, group_id, environment_id and [environment_id], keys=keys
-        )
+        keys_with_counts = self.get_group_tag_keys(project_id, group_id, environment_ids, keys=keys)
 
         # Then get the top values with first_seen/last_seen/count for each
         filters = {
             'project_id': [project_id],
         }
-        if environment_id:
-            filters['environment'] = [environment_id]
+        if environment_ids:
+            filters['environment'] = environment_ids
         if keys is not None:
             filters['tags_key'] = keys
         if group_id is not None:
diff --git a/tests/snuba/tagstore/test_tagstore_backend.py b/tests/snuba/tagstore/test_tagstore_backend.py
index 220e0244f5..cecf932d82 100644
--- a/tests/snuba/tagstore/test_tagstore_backend.py
+++ b/tests/snuba/tagstore/test_tagstore_backend.py
@@ -107,7 +107,7 @@ class TagStorageTest(SnubaTestCase):
         result = list(self.ts.get_group_tag_keys_and_top_values(
             self.proj1.id,
             self.proj1group1.id,
-            self.proj1env1.id,
+            [self.proj1env1.id],
         ))
         tags = [r.key for r in result]
         assert set(tags) == set(['foo', 'baz', 'environment', 'sentry:release', 'sentry:user'])
@@ -130,7 +130,7 @@ class TagStorageTest(SnubaTestCase):
         result = list(self.ts.get_group_tag_keys_and_top_values(
             self.proj1.id,
             self.proj1group1.id,
-            self.proj1env1.id,
+            [self.proj1env1.id],
             keys=['environment', 'sentry:release'],
         ))
         tags = [r.key for r in result]
