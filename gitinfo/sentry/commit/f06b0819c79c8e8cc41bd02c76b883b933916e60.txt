commit f06b0819c79c8e8cc41bd02c76b883b933916e60
Author: Billy Vong <billyvg@users.noreply.github.com>
Date:   Wed Jul 31 10:13:38 2019 -0700

    ref(ui): Remove `<DynamicWrapper>` (#14221)
    
    This was using `getDynamicText` under the hood, so lets just use that

diff --git a/docs-ui/components/dynamicWrapper.stories.js b/docs-ui/components/getDynamicText.stories.js
similarity index 58%
rename from docs-ui/components/dynamicWrapper.stories.js
rename to docs-ui/components/getDynamicText.stories.js
index d5f8231916..bfd463f9f4 100644
--- a/docs-ui/components/dynamicWrapper.stories.js
+++ b/docs-ui/components/getDynamicText.stories.js
@@ -2,10 +2,10 @@ import React from 'react';
 import {storiesOf} from '@storybook/react';
 import {withInfo} from '@storybook/addon-info';
 
-import DynamicWrapper from 'app/components/dynamicWrapper';
+import getDynamicText from 'app/utils/getDynamicText';
 
-storiesOf('Utility|DynamicWrapper', module).add(
-  'DynamicWrapper',
+storiesOf('Utility|getDynamicText', module).add(
+  'getDynamicText',
   withInfo(
     `
     Use this to wrap dynamic content (i.e. dates) for acceptance/snapshot tests.
@@ -14,7 +14,12 @@ storiesOf('Utility|DynamicWrapper', module).add(
     `
   )(() => {
     return (
-      <DynamicWrapper fixed="Fixed Content" value="Pretend this is a dynamic value" />
+      <React.Fragment>
+        {getDynamicText({
+          fixed: 'Fixed Content',
+          value: 'Pretend this is a dynamic value',
+        })}
+      </React.Fragment>
     );
   })
 );
diff --git a/src/sentry/static/sentry/app/components/dynamicWrapper.jsx b/src/sentry/static/sentry/app/components/dynamicWrapper.jsx
deleted file mode 100644
index 7046998450..0000000000
--- a/src/sentry/static/sentry/app/components/dynamicWrapper.jsx
+++ /dev/null
@@ -1,24 +0,0 @@
-// eslint-disable-next-line no-unused-vars
-import PropTypes from 'prop-types';
-import React from 'react';
-
-import getDynamicText from 'app/utils/getDynamicText';
-
-// XXX: Most likely you can just use getDynamicText instead
-const DynamicWrapper = ({fixed, value, ...otherProps}) => {
-  // Wrap with span b/c react
-  return <span {...otherProps}>{getDynamicText({value, fixed})}</span>;
-};
-
-DynamicWrapper.propTypes = {
-  /**
-   * Value to display when `process.env.IS_PERCY` is truthy
-   */
-  fixed: PropTypes.node.isRequired,
-  /**
-   * Actual value to use when not in a test environment
-   */
-  value: PropTypes.node.isRequired,
-};
-
-export default DynamicWrapper;
diff --git a/src/sentry/static/sentry/app/components/footer.jsx b/src/sentry/static/sentry/app/components/footer.jsx
index a5560bf960..3da279489c 100644
--- a/src/sentry/static/sentry/app/components/footer.jsx
+++ b/src/sentry/static/sentry/app/components/footer.jsx
@@ -2,8 +2,8 @@ import React from 'react';
 
 import {t} from 'app/locale';
 import ConfigStore from 'app/stores/configStore';
-import DynamicWrapper from 'app/components/dynamicWrapper';
 import Hook from 'app/components/hook';
+import getDynamicText from 'app/utils/getDynamicText';
 
 const Footer = () => {
   const config = ConfigStore.getConfig();
@@ -31,7 +31,10 @@ const Footer = () => {
         {config.isOnPremise && (
           <div className="version pull-left">
             {'Sentry '}
-            <DynamicWrapper fixed="Acceptance Test" value={config.version.current} />
+            {getDynamicText({
+              fixed: 'Acceptance Test',
+              value: config.version.current,
+            })}
           </div>
         )}
         <a href="/" className="icon-sentry-logo" />
diff --git a/src/sentry/static/sentry/app/views/organizationEventsV2/data.jsx b/src/sentry/static/sentry/app/views/organizationEventsV2/data.jsx
index 80011ad5e9..027b4c895e 100644
--- a/src/sentry/static/sentry/app/views/organizationEventsV2/data.jsx
+++ b/src/sentry/static/sentry/app/views/organizationEventsV2/data.jsx
@@ -2,17 +2,17 @@ import React from 'react';
 import styled from 'react-emotion';
 
 import {deepFreeze} from 'app/utils';
+import {t} from 'app/locale';
 import Count from 'app/components/count';
-import DynamicWrapper from 'app/components/dynamicWrapper';
+import DateTime from 'app/components/dateTime';
 import Link from 'app/components/links/link';
-import overflowEllipsis from 'app/styles/overflowEllipsis';
-import space from 'app/styles/space';
 import ProjectBadge from 'app/components/idBadge/projectBadge';
 import UserBadge from 'app/components/idBadge/userBadge';
-import DateTime from 'app/components/dateTime';
+import getDynamicText from 'app/utils/getDynamicText';
+import overflowEllipsis from 'app/styles/overflowEllipsis';
 import pinIcon from 'app/../images/location-pin.png';
+import space from 'app/styles/space';
 
-import {t} from 'app/locale';
 import {QueryLink} from './styles';
 
 export const MODAL_QUERY_KEYS = ['eventSlug', 'groupSlug', 'transactionSlug'];
@@ -197,9 +197,12 @@ export const SPECIAL_FIELDS = {
     sortField: 'timestamp',
     renderFunc: data => (
       <Container>
-        {data.timestamp ? (
-          <DynamicWrapper value={<StyledDateTime date={data.timestamp} />} fixed="time" />
-        ) : null}
+        {data.timestamp
+          ? getDynamicText({
+              value: <StyledDateTime date={data.timestamp} />,
+              fixed: 'time',
+            })
+          : null}
       </Container>
     ),
   },
@@ -271,10 +274,10 @@ export const SPECIAL_FIELDS = {
       return (
         <Container>
           {data.last_seen ? (
-            <DynamicWrapper
-              value={<StyledDateTime date={data.last_seen} />}
-              fixed="time"
-            />
+            getDynamicText({
+              value: <StyledDateTime date={data.last_seen} />,
+              fixed: 'time',
+            })
           ) : (
             <span>n/a</span>
           )}
diff --git a/src/sentry/static/sentry/app/views/projectsDashboard/deploys.jsx b/src/sentry/static/sentry/app/views/projectsDashboard/deploys.jsx
index 86a31f3644..ca2e1d3737 100644
--- a/src/sentry/static/sentry/app/views/projectsDashboard/deploys.jsx
+++ b/src/sentry/static/sentry/app/views/projectsDashboard/deploys.jsx
@@ -1,15 +1,15 @@
-import React from 'react';
-import styled from 'react-emotion';
 import {Flex, Box} from 'grid-emotion';
+import React from 'react';
 import moment from 'moment-timezone';
+import styled from 'react-emotion';
 
-import SentryTypes from 'app/sentryTypes';
+import {getShortVersion} from 'app/utils';
+import {t} from 'app/locale';
 import Button from 'app/components/button';
 import Link from 'app/components/links/link';
-import {t} from 'app/locale';
+import SentryTypes from 'app/sentryTypes';
 import TextOverflow from 'app/components/textOverflow';
-import DynamicWrapper from 'app/components/dynamicWrapper';
-import {getShortVersion} from 'app/utils';
+import getDynamicText from 'app/utils/getDynamicText';
 
 const DEPLOY_COUNT = 2;
 
@@ -74,10 +74,12 @@ class Deploy extends React.Component {
           </StyledLink>
         </Version>
         <Flex w={90} justify="flex-end">
-          <StyledDynamicWrapper
-            value={moment(deploy.dateFinished).fromNow()}
-            fixed="3 hours ago"
-          />
+          <DeployTimeWrapper>
+            {getDynamicText({
+              value: moment(deploy.dateFinished).fromNow(),
+              fixed: '3 hours ago',
+            })}
+          </DeployTimeWrapper>
         </Flex>
       </DeployRow>
     );
@@ -113,7 +115,7 @@ const StyledLink = styled(Link)`
   white-space: nowrap;
 `;
 
-const StyledDynamicWrapper = styled(DynamicWrapper)`
+const DeployTimeWrapper = styled('div')`
   overflow: hidden;
   text-overflow: ellipsis;
   white-space: nowrap;
diff --git a/src/sentry/static/sentry/app/views/settings/project/projectReleaseTracking.jsx b/src/sentry/static/sentry/app/views/settings/project/projectReleaseTracking.jsx
index 1b143c83fc..7b47bd4661 100644
--- a/src/sentry/static/sentry/app/views/settings/project/projectReleaseTracking.jsx
+++ b/src/sentry/static/sentry/app/views/settings/project/projectReleaseTracking.jsx
@@ -9,7 +9,6 @@ import AsyncView from 'app/views/asyncView';
 import AutoSelectText from 'app/components/autoSelectText';
 import Button from 'app/components/button';
 import Confirm from 'app/components/confirm';
-import DynamicWrapper from 'app/components/dynamicWrapper';
 import Field from 'app/views/settings/components/forms/field';
 import LoadingIndicator from 'app/components/loadingIndicator';
 import PluginList from 'app/components/pluginList';
@@ -202,21 +201,21 @@ class ProjectReleaseTracking extends AsyncView {
               )}
             </p>
 
-            <DynamicWrapper
-              value={
+            {getDynamicText({
+              value: (
                 <AutoSelectText>
                   <pre>{this.getReleaseWebhookIntructions()}</pre>
                 </AutoSelectText>
-              }
-              fixed={
+              ),
+              fixed: (
                 <pre>
                   {`curl __WEBHOOK_URL__ \\
   -X POST \\
   -H 'Content-Type: application/json' \\
   -d \'{"version": "abcdefg"}\'`}
                 </pre>
-              }
-            />
+              ),
+            })}
           </PanelBody>
         </Panel>
 
diff --git a/src/sentry/static/sentry/app/views/settings/projectPlugins/projectPluginRow.jsx b/src/sentry/static/sentry/app/views/settings/projectPlugins/projectPluginRow.jsx
index de828265af..e6bb00d3ff 100644
--- a/src/sentry/static/sentry/app/views/settings/projectPlugins/projectPluginRow.jsx
+++ b/src/sentry/static/sentry/app/views/settings/projectPlugins/projectPluginRow.jsx
@@ -5,12 +5,12 @@ import React from 'react';
 import styled, {css} from 'react-emotion';
 
 import {t} from 'app/locale';
-import DynamicWrapper from 'app/components/dynamicWrapper';
 import ExternalLink from 'app/components/links/externalLink';
 import Access from 'app/components/acl/access';
 import PluginIcon from 'app/plugins/components/pluginIcon';
 import SentryTypes from 'app/sentryTypes';
 import Switch from 'app/components/switch';
+import getDynamicText from 'app/utils/getDynamicText';
 import recreateRoute from 'app/utils/recreateRoute';
 
 const grayText = css`
@@ -53,12 +53,12 @@ class ProjectPluginRow extends React.PureComponent {
                 <Flex justify="center" direction="column">
                   <PluginName>
                     {`${name} `}
-                    <DynamicWrapper
-                      value={
+                    {getDynamicText({
+                      value: (
                         <Version>{version ? `v${version}` : <em>{t('n/a')}</em>}</Version>
-                      }
-                      fixed={<Version>v10</Version>}
-                    />
+                      ),
+                      fixed: <Version>v10</Version>,
+                    })}
                   </PluginName>
                   <div>
                     {author && (
diff --git a/tests/js/spec/components/__snapshots__/dynamicWrapper.spec.jsx.snap b/tests/js/spec/components/__snapshots__/dynamicWrapper.spec.jsx.snap
deleted file mode 100644
index 998682faf2..0000000000
--- a/tests/js/spec/components/__snapshots__/dynamicWrapper.spec.jsx.snap
+++ /dev/null
@@ -1,13 +0,0 @@
-// Jest Snapshot v1, https://goo.gl/fbAQLP
-
-exports[`DynamicWrapper renders actual value 1`] = `
-<span>
-  Dynamic Content
-</span>
-`;
-
-exports[`DynamicWrapper renders fixed content when \`process.env.IS_PERCY\` is true 1`] = `
-<span>
-  Test
-</span>
-`;
diff --git a/tests/js/spec/components/dynamicWrapper.spec.jsx b/tests/js/spec/components/dynamicWrapper.spec.jsx
deleted file mode 100644
index aea1c7e236..0000000000
--- a/tests/js/spec/components/dynamicWrapper.spec.jsx
+++ /dev/null
@@ -1,23 +0,0 @@
-import React from 'react';
-import {shallow} from 'enzyme';
-import DynamicWrapper from 'app/components/dynamicWrapper';
-
-describe('DynamicWrapper', function() {
-  beforeEach(function() {});
-
-  afterEach(function() {});
-
-  it('renders actual value', function() {
-    const wrapper = shallow(<DynamicWrapper fixed="Test" value="Dynamic Content" />);
-    expect(wrapper).toMatchSnapshot();
-  });
-
-  it('renders fixed content when `process.env.IS_PERCY` is true', function() {
-    // eslint-disable-next-line no-undef
-    process.env.IS_PERCY = true;
-    const wrapper = shallow(<DynamicWrapper fixed="Test" value="Dynamic Content" />);
-    expect(wrapper).toMatchSnapshot();
-    // eslint-disable-next-line no-undef
-    process.env.IS_PERCY = null;
-  });
-});
diff --git a/tests/js/spec/utils/getDynamicText.spec.jsx b/tests/js/spec/utils/getDynamicText.spec.jsx
new file mode 100644
index 0000000000..e771ab9557
--- /dev/null
+++ b/tests/js/spec/utils/getDynamicText.spec.jsx
@@ -0,0 +1,25 @@
+import getDynamicText from 'app/utils/getDynamicText';
+
+describe('getDynamicText', function() {
+  it('renders actual value', function() {
+    expect(
+      getDynamicText({
+        fixed: 'Text',
+        value: 'Dynamic Content',
+      })
+    ).toEqual('Dynamic Content');
+  });
+
+  it('renders fixed content when `process.env.IS_PERCY` is true', function() {
+    // eslint-disable-next-line no-undef
+    process.env.IS_PERCY = true;
+    expect(
+      getDynamicText({
+        fixed: 'Text',
+        value: 'Dynamic Content',
+      })
+    ).toEqual('Text');
+    // eslint-disable-next-line no-undef
+    process.env.IS_PERCY = null;
+  });
+});
diff --git a/tests/js/spec/views/projectPlugins/__snapshots__/projectPluginsRow.spec.jsx.snap b/tests/js/spec/views/projectPlugins/__snapshots__/projectPluginsRow.spec.jsx.snap
index 04cd0b0833..290690c5b7 100644
--- a/tests/js/spec/views/projectPlugins/__snapshots__/projectPluginsRow.spec.jsx.snap
+++ b/tests/js/spec/views/projectPlugins/__snapshots__/projectPluginsRow.spec.jsx.snap
@@ -179,28 +179,13 @@ exports[`ProjectPluginRow renders 1`] = `
                             className="css-36lssg-PluginName e1y7j6vq1"
                           >
                             Amazon SQS 
-                            <DynamicWrapper
-                              fixed={
-                                <Version>
-                                  v10
-                                </Version>
-                              }
-                              value={
-                                <Version>
-                                  v8.23.0.dev0
-                                </Version>
-                              }
-                            >
-                              <span>
-                                <Version>
-                                  <span
-                                    className="css-1det7j8-Version e1y7j6vq3"
-                                  >
-                                    v8.23.0.dev0
-                                  </span>
-                                </Version>
+                            <Version>
+                              <span
+                                className="css-1det7j8-Version e1y7j6vq3"
+                              >
+                                v8.23.0.dev0
                               </span>
-                            </DynamicWrapper>
+                            </Version>
                           </div>
                         </PluginName>
                         <div>
