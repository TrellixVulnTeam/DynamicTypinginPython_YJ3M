commit b561cf0dc8bf260166934bee99ccab869c493b89
Author: ted kaemming <ted@kaemming.com>
Date:   Tue Apr 17 17:23:19 2018 -0700

    ref(tsdb/snuba): Expose `model_columns` at the class level (#8031)

diff --git a/src/sentry/tsdb/snuba.py b/src/sentry/tsdb/snuba.py
index a7e923790c..d6b752f6a1 100644
--- a/src/sentry/tsdb/snuba.py
+++ b/src/sentry/tsdb/snuba.py
@@ -17,26 +17,25 @@ class SnubaTSDB(BaseTSDB):
     will return empty results for unsupported models.
     """
 
+    # The ``model_columns`` are translations of TSDB models into the required
+    # columns for querying snuba. Keys are ``TSDBModel`` enumeration values,
+    # values are in the form ``(groupby_column, aggregateby_column or None)``.
+    # Only the models that are listed in this mapping are supported.
+    model_columns = {
+        TSDBModel.project: ('project_id', None),
+        TSDBModel.group: ('issue', None),
+        TSDBModel.release: ('release', None),
+        TSDBModel.users_affected_by_group: ('issue', 'user_id'),
+        TSDBModel.users_affected_by_project: ('project_id', 'user_id'),
+        TSDBModel.users_affected_by_project: ('project_id', 'user_id'),
+        TSDBModel.frequent_environments_by_group: ('issue', 'environment'),
+        TSDBModel.frequent_releases_by_group: ('issue', 'release'),
+        TSDBModel.frequent_issues_by_project: ('project_id', 'issue'),
+    }
+
     def __init__(self, **options):
         super(SnubaTSDB, self).__init__(**options)
 
-    def model_columns(self, model):
-        """
-        Translates TSDB models into the required columns for querying snuba.
-        Returns a tuple of (groupby_column, aggregateby_column)
-        """
-        return {
-            TSDBModel.project: ('project_id', None),
-            TSDBModel.group: ('issue', None),
-            TSDBModel.release: ('release', None),
-            TSDBModel.users_affected_by_group: ('issue', 'user_id'),
-            TSDBModel.users_affected_by_project: ('project_id', 'user_id'),
-            TSDBModel.users_affected_by_project: ('project_id', 'user_id'),
-            TSDBModel.frequent_environments_by_group: ('issue', 'environment'),
-            TSDBModel.frequent_releases_by_group: ('issue', 'release'),
-            TSDBModel.frequent_issues_by_project: ('project_id', 'issue'),
-        }.get(model, None)
-
     def get_data(self, model, keys, start, end, rollup=None, environment_id=None,
                  aggregation='count', group_on_model=True, group_on_time=False):
         """
@@ -45,7 +44,7 @@ class SnubaTSDB(BaseTSDB):
         `group_on_time`: whether to add a GROUP BY clause on the 'time' field.
         `group_on_model`: whether to add a GROUP BY clause on the primary model.
         """
-        model_columns = self.model_columns(model)
+        model_columns = self.model_columns.get(model)
 
         if model_columns is None:
             raise Exception("Unsupported TSDBModel: {}".format(model.name))
