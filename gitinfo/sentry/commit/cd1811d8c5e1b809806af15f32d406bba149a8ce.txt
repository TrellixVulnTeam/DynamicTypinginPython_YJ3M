commit cd1811d8c5e1b809806af15f32d406bba149a8ce
Author: David Cramer <dcramer@gmail.com>
Date:   Tue Mar 29 14:29:01 2011 -0700

    Search refactor: adds logger, level, site, server, and url to index; no more use of filters; no arbitrary queries without Haystack

diff --git a/CHANGES b/CHANGES
index 1e3e252935..d9be3c1c0d 100644
--- a/CHANGES
+++ b/CHANGES
@@ -1,3 +1,10 @@
+1.6.8
+
+* Search no longer allows filters.
+* Search no longer allows arbitrary queries without Haystack.
+* Added logger, level, site, server, and url to search index.
+* Haystack has been updated for further flexibility.
+
 1.6.7
 
 * Moved static media into /static/.
diff --git a/sentry/conf.py b/sentry/conf.py
index 83b3166280..dd5f770467 100644
--- a/sentry/conf.py
+++ b/sentry/conf.py
@@ -15,7 +15,6 @@ THRASHING_TIMEOUT = getattr(settings, 'SENTRY_THRASHING_TIMEOUT', 60)
 THRASHING_LIMIT = getattr(settings, 'SENTRY_THRASHING_LIMIT', 10)
 
 FILTERS = getattr(settings, 'SENTRY_FILTERS', filter(None, (
-    getattr(settings, 'HAYSTACK_SEARCH_ENGINE', None) and 'sentry.filters.SearchFilter' or None,
     'sentry.filters.StatusFilter',
     'sentry.filters.LoggerFilter',
     'sentry.filters.LevelFilter',
diff --git a/sentry/filters/__init__.py b/sentry/filters/__init__.py
index f4e584667b..d488f31904 100644
--- a/sentry/filters/__init__.py
+++ b/sentry/filters/__init__.py
@@ -102,20 +102,6 @@ class SentryFilter(object):
         widget = self.get_widget()
         return widget.render(self.get_value())
 
-class SearchFilter(SentryFilter):
-    label = 'Search'
-    column = 'content'
-    widget = TextWidget
-    show_label = False
-    
-    def get_query_set(self, queryset):
-        # this is really just a hack
-        return queryset
-
-    def render(self):
-        widget = self.get_widget()
-        return widget.render(self.get_value(), placeholder='search query or message id')
-
 class StatusFilter(SentryFilter):
     label = 'Status'
     column = 'status'
diff --git a/sentry/search_indexes.py b/sentry/search_indexes.py
index 1b887d7aa3..42b56ddc28 100644
--- a/sentry/search_indexes.py
+++ b/sentry/search_indexes.py
@@ -17,7 +17,12 @@ if conf.SEARCH_ENGINE:
 
     class GroupedMessageIndex(RealTimeSearchIndex):
         text = CharField(document=True, stored=False)
-        status = CharField(stored=False, null=True)
+        status = IntegerField(model_attr='status', stored=False, null=True)
+        level = IntegerField(model_attr='level', stored=False, null=True)
+        logger = CharField(model_attr='logger', stored=False, null=True)
+        server = MultiValueField(stored=False, null=True)
+        url = MultiValueField(stored=False, null=True)
+        site = MultiValueField(stored=False, null=True)
         first_seen = DateTimeField(model_attr='first_seen', stored=False)
         last_seen = DateTimeField(model_attr='last_seen', stored=False)
 
@@ -34,4 +39,14 @@ if conf.SEARCH_ENGINE:
         def prepare_text(self, instance):
             return '\n'.join(filter(None, [instance.message, instance.class_name, instance.traceback, instance.view]))
 
+        def prepare_server(self, instance):
+            return [s['server_name'] for s in instance.unique_servers]
+
+        def prepare_site(self, instance):
+            return [s['site'] for s in instance.unique_sites]
+
+        def prepare_url(self, instance):
+            return [s['url'] for s in instance.unique_urls]
+
+
     site.register(GroupedMessage, GroupedMessageIndex)
diff --git a/sentry/static/styles/global.css b/sentry/static/styles/global.css
index c98fae1341..42cd448ac1 100644
--- a/sentry/static/styles/global.css
+++ b/sentry/static/styles/global.css
@@ -99,11 +99,55 @@ pre {
 
 #account {
     position: absolute;
-    right: 1em;
-    top: 1.8em;
+    right: 35px;
+    bottom: 6px;
+    padding-left: 20px;
+    background: #e5e5e5;
+}
+#search {
+    position: absolute;
+    right: 35px;
+    top: 1.4em;
+    width: 200px;
+}
+#search input {
+    width: 144px;
+    padding: 6px 50px 6px 6px;
+    background: #000;
+    border:1px solid #666;
+    color: #fff;
+    -moz-border-radius: 3px;
+    -webkit-border-radius: 3px;
+    border-radius: 3px;
+}
+#search button {
+    cursor: pointer;
+    position: absolute;
+    right: -2px;
+    top: 0;
+    padding: 6px;
+    height: 100%;
+    line-height: 100%;
+    font-weight: bold;
+    text-transform: uppercase;
+    background: #e0ebff;
+    background: #555; /* for non-css3 browsers */
+    filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#555555', endColorstr='#222222'); /* for IE */
+    background: -webkit-gradient(linear, left top, left bottom, from(#555555), to(#222222)); /* for webkit browsers */
+    background: -moz-linear-gradient(top,  #555,  #222); /* for firefox 3.6+ */
+    border: 1px solid #666;
     color: #fff;
+    -moz-border-radius: 0 3px 3px 0;
+    -webkit-border-radius: 0 3px 3px 0;
+    border-radius: 0 3px 3px 0;
+}
+#search button:hover {
+    filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#777777', endColorstr='#555555'); /* for IE */
+    background: -webkit-gradient(linear, left top, left bottom, from(#777777), to(#555555)); /* for webkit browsers */
+    background: -moz-linear-gradient(top,  #777777,  #555555); /* for firefox 3.6+ */
 }
 
+
 .nav {
     list-style: none;
     margin-left: 0;
@@ -113,11 +157,16 @@ pre {
 .nav li a { display: inline-block; }
 
 
-#footer { clear: both; border-top:1px solid #ddd; background-color: #e5e5e5; }
+#footer {
+    clear: both;
+    border-top:1px solid #ddd;
+    background-color: #e5e5e5;
+}
 #footer .container {
     color: #666;
     padding: 2em;
     max-width: 1550px;
+    position: relative;
 }
 #header table { border:none; background:transparent; }
 #body, #sidebar { position: relative; }
diff --git a/sentry/templates/sentry/group/details.html b/sentry/templates/sentry/group/details.html
index f8bddda4e1..c8dc7f220e 100644
--- a/sentry/templates/sentry/group/details.html
+++ b/sentry/templates/sentry/group/details.html
@@ -1,222 +1,220 @@
-{% extends "sentry/index.html" %}
+{% extends "sentry/layout.html" %}
 
 {% load sentry_helpers %}
 {% load i18n %}
 
-{% block title %}{{ group.error }} | Sentry{% endblock %}
+{% block title %}{{ group.error }} | {{ block.super }}{% endblock %}
 
 {% block heading %}
     Message Details <span><a href="{% url sentry %}">&laquo; {% trans "Back to list" %}</a></span>
 {% endblock %}
 
-{% block content %}
-    <div id="sidebar">
-        <ul class="actions">
-            {# We're going to move these to the resolve action location #}
-            {% for label, link, is_active in group|get_actions:request %}
-                <li><a href="{{ link }}">{{ label }}</a></li>
-            {% endfor %}
-        </ul>
-        <h2>Meta</h2>
-        <dl class="flat">
-            <dt>Logger:</dt>
-            <dd><a href="{% url sentry %}?logger={{ group.logger }}">{{ group.logger }}</a></dd>
-            <dt>Level:</dt>
-            <dd><a href="{% url sentry %}?level={{ group.level }}">{{ group.get_level_display }}</a></dd>
-            <dt>Status:</dt>
-            <dd>{{ group.get_status_display|title }}</dd>
-            <dt>First Seen:</dt>
-            <dd>{{ group.first_seen|timesince }}</dd>
-            <dt>Last Seen:</dt>
-            <dd>{{ group.last_seen|timesince }}</dd>
-        </dl>
-        
-        {% for html in group|get_widgets:request %}
-            {{ html|safe }}
+{% block sidebar %}
+    <ul class="actions">
+        {# We're going to move these to the resolve action location #}
+        {% for label, link, is_active in group|get_actions:request %}
+            <li><a href="{{ link }}">{{ label }}</a></li>
         {% endfor %}
-    </div>
+    </ul>
+    <h2>Meta</h2>
+    <dl class="flat">
+        <dt>Logger:</dt>
+        <dd><a href="{% url sentry %}?logger={{ group.logger }}">{{ group.logger }}</a></dd>
+        <dt>Level:</dt>
+        <dd><a href="{% url sentry %}?level={{ group.level }}">{{ group.get_level_display }}</a></dd>
+        <dt>Status:</dt>
+        <dd>{{ group.get_status_display|title }}</dd>
+        <dt>First Seen:</dt>
+        <dd>{{ group.first_seen|timesince }}</dd>
+        <dt>Last Seen:</dt>
+        <dd>{{ group.last_seen|timesince }}</dd>
+    </dl>
+    
+    {% for html in group|get_widgets:request %}
+        {{ html|safe }}
+    {% endfor %}
+{% endblock %}
 
-    <div id="body" class="with-sidebar">
-        <ul class="messages" id="message_list">
-            <li class="{% cycle 'row1' 'row2' %} level-{{ group.level }} active" id="group_{{ group.pk }}" data-sentry-count="{{ group.times_seen }}">
-                <span class="count count-digits-{{ group.times_seen|num_digits }}">{{ group.times_seen }}</span>
-                <h3>{% if group.view %}{{ group.view }}{% else %}{{ group.message_top|truncatechars:100 }}{% endif %}</h3>
-                <span class="last_seen">{{ group.last_seen|timesince }}</span>
-                <span class="status status-{{ group.status }}">{{ group.get_status_display }}</span>
-                <p class="message">
-                    <span class="tag tag-level">{{ group.get_level_display }}</span> 
-                    <span class="tag tag-logger">{{ group.logger }}</span> 
-                    {% with group.get_version as version %}
-                        {% if version %}
-                            <span class="tag tag-version">{{ version.0 }} {{ version.1 }}</span> 
-                        {% endif %}
-                    {% endwith %}
-                    {% for tag in group|get_tags:request %}<span class="tag">{{ tag }}</span> {% endfor %}
-                    {{ group.error }}
-                </p>
-                {% if group.status == 0 %}
-                    <a href="{% url sentry-ajax %}?op=resolve&amp;gid={{ group.pk }}" class="hidden button button_resolve">&#10003;</a>
-                {% endif %}
-            </li>
-        </ul>
+{% block main %}
+    <ul class="messages" id="message_list">
+        <li class="{% cycle 'row1' 'row2' %} level-{{ group.level }} active" id="group_{{ group.pk }}" data-sentry-count="{{ group.times_seen }}">
+            <span class="count count-digits-{{ group.times_seen|num_digits }}">{{ group.times_seen }}</span>
+            <h3>{% if group.view %}{{ group.view }}{% else %}{{ group.message_top|truncatechars:100 }}{% endif %}</h3>
+            <span class="last_seen">{{ group.last_seen|timesince }}</span>
+            <span class="status status-{{ group.status }}">{{ group.get_status_display }}</span>
+            <p class="message">
+                <span class="tag tag-level">{{ group.get_level_display }}</span> 
+                <span class="tag tag-logger">{{ group.logger }}</span> 
+                {% with group.get_version as version %}
+                    {% if version %}
+                        <span class="tag tag-version">{{ version.0 }} {{ version.1 }}</span> 
+                    {% endif %}
+                {% endwith %}
+                {% for tag in group|get_tags:request %}<span class="tag">{{ tag }}</span> {% endfor %}
+                {{ group.error }}
+            </p>
+            {% if group.status == 0 %}
+                <a href="{% url sentry-ajax %}?op=resolve&amp;gid={{ group.pk }}" class="hidden button button_resolve">&#10003;</a>
+            {% endif %}
+        </li>
+    </ul>
 
-        <ul class="nav" id="group_nav">
-            <li{% ifequal page 'details' %} class="active"{% endifequal %}><a href="{% url sentry-group group.pk %}">Details</a></li>
-            <li{% ifequal page 'messages' %} class="active"{% endifequal %}><a href="{% url sentry-group-messages group.pk %}">Messages</a></li>
-            {% for label, link, is_active in group|get_panels:request %}
-                <li{% if is_active %} class="active"{% endif %}><a href="{{ link }}">{{ label }}</a></li>
-            {% endfor %}
-        </ul>
-        
-        {% block inner %}
-            <div id="details">
-                {% if group.has_two_part_message %}
-                    <h2>Full Message</h2>
-                    <pre id="full-message">{{ group.message }}</pre>
-                {% endif %}
-                
-                {% if traceback %}
-                    {{ traceback }}
-                {% endif %}
-                
-                {% with group|chart_data as chart_data %}
-                    {% if chart_data %}
-                    <script type="text/javascript">
-                    $(document).ready(function() {
-                        new Highcharts.Chart({
-                            chart: {
-                                renderTo: 'chart',
-                                zoomType: 'x',
-                                marginLeft: 50,
-                                marginRight: 20,
-                                marginTop: 20,
-                                marginBottom: 40,
-                                backgroundColor: '#eeeeee',
-                                showAxes: false,
-                                height: 200
-                            },
+    <ul class="nav" id="group_nav">
+        <li{% ifequal page 'details' %} class="active"{% endifequal %}><a href="{% url sentry-group group.pk %}">Details</a></li>
+        <li{% ifequal page 'messages' %} class="active"{% endifequal %}><a href="{% url sentry-group-messages group.pk %}">Messages</a></li>
+        {% for label, link, is_active in group|get_panels:request %}
+            <li{% if is_active %} class="active"{% endif %}><a href="{{ link }}">{{ label }}</a></li>
+        {% endfor %}
+    </ul>
+    
+    {% block inner %}
+        <div id="details">
+            {% if group.has_two_part_message %}
+                <h2>Full Message</h2>
+                <pre id="full-message">{{ group.message }}</pre>
+            {% endif %}
+            
+            {% if traceback %}
+                {{ traceback }}
+            {% endif %}
+            
+            {% with group|chart_data as chart_data %}
+                {% if chart_data %}
+                <script type="text/javascript">
+                $(document).ready(function() {
+                    new Highcharts.Chart({
+                        chart: {
+                            renderTo: 'chart',
+                            zoomType: 'x',
+                            marginLeft: 50,
+                            marginRight: 20,
+                            marginTop: 20,
+                            marginBottom: 40,
+                            backgroundColor: '#eeeeee',
+                            showAxes: false,
+                            height: 200
+                        },
+                        title: {
+                            text: false
+                        },
+                        xAxis: {
+                            type: 'datetime',
+                            maxZoom: 24 * 3600000, // 1 day
                             title: {
                                 text: false
                             },
-                            xAxis: {
-                                type: 'datetime',
-                                maxZoom: 24 * 3600000, // 1 day
-                                title: {
-                                    text: false
-                                },
-                                showFirstLabel: false,
-                                dateTimeLabelFormats: {
-                                    second: '%H:%M:%S',
-                                    minute: '%H:%M',
-                                    hour: '%d %b %H:%M',
-                                    day: '%e. %b',
-                                    week: '%e. %b',
-                                    month: '%b \'%y',
-                                    year: '%Y'
-                                }
-                            },
-                            yAxis: {
-                                title: {
-                                    text: false
-                                }
-                            },
-                            tooltip: {
-                                formatter: function() {
-                                    return '<strong>'+
-                                        Highcharts.dateFormat('%A %B %e %Y<br/>%I:00 %p', this.x) + '</strong><br/>'+
-                                        this.y+' records';
-                                }
-                            },
-                            series: [{
-                                pointStart: new Date() - {{ chart_data.points|length }} * 3600000,
-                                pointInterval: 3600 * 1000,
-                                type: 'area',
-                                data: {{ chart_data.points|to_json }}
-                            }],
-                            legend: {
-                                enabled: false
-                            },
-                            plotOptions: {
-                                area: {
-                                    lineWidth: 1,
-                                    marker: {
-                                        enabled: false,
-                                        states: {
-                                            hover: {
-                                                enabled: true,
-                                                radius: 5
-                                            }
-                                        }
-                                    },
-                                    shadow: false,
+                            showFirstLabel: false,
+                            dateTimeLabelFormats: {
+                                second: '%H:%M:%S',
+                                minute: '%H:%M',
+                                hour: '%d %b %H:%M',
+                                day: '%e. %b',
+                                week: '%e. %b',
+                                month: '%b \'%y',
+                                year: '%Y'
+                            }
+                        },
+                        yAxis: {
+                            title: {
+                                text: false
+                            }
+                        },
+                        tooltip: {
+                            formatter: function() {
+                                return '<strong>'+
+                                    Highcharts.dateFormat('%A %B %e %Y<br/>%I:00 %p', this.x) + '</strong><br/>'+
+                                    this.y+' records';
+                            }
+                        },
+                        series: [{
+                            pointStart: new Date() - {{ chart_data.points|length }} * 3600000,
+                            pointInterval: 3600 * 1000,
+                            type: 'area',
+                            data: {{ chart_data.points|to_json }}
+                        }],
+                        legend: {
+                            enabled: false
+                        },
+                        plotOptions: {
+                            area: {
+                                lineWidth: 1,
+                                marker: {
+                                    enabled: false,
                                     states: {
                                         hover: {
-                                            lineWidth: 1
+                                            enabled: true,
+                                            radius: 5
                                         }
                                     }
+                                },
+                                shadow: false,
+                                states: {
+                                    hover: {
+                                        lineWidth: 1
+                                    }
                                 }
-                            },
-                        });
+                            }
+                        },
                     });
-                    </script>
-                    <h2>Frequency</h2>
-                    <div id="chart">
-                        <noscript>Get yourself some JavaScripts dood</noscript>
-                    </div>
-                    {% endif %}
-                {% endwith %}
+                });
+                </script>
+                <h2>Frequency</h2>
+                <div id="chart">
+                    <noscript>Get yourself some JavaScripts dood</noscript>
+                </div>
+                {% endif %}
+            {% endwith %}
 
-                <div id="requestinfo">
-                    <h2>{% trans "Additional Data" %}</h2>
+            <div id="requestinfo">
+                <h2>{% trans "Additional Data" %}</h2>
+                <table>
+                    {% for k, v in json_data %}
+                        <tr>
+                            <th class="key">{{ k }}</th>
+                            <td class="values">
+                            {% if v %}
+                                {% if v|is_dict %}
+                                    <table class="vars">
+                                        <thead>
+                                            <tr>
+                                                <th>Variable</th>
+                                                <th>Value</th>
+                                            </tr>
+                                        </thead>
+                                        <tbody>
+                                            {% for k_, v_ in v.iteritems|as_sorted %}
+                                            <tr>
+                                                <td>{{ k_ }}</td>
+                                                <td class="code"><pre>{{ v_|pprint }}</pre></td>
+                                            </tr>
+                                            {% endfor %}
+                                        </tbody>
+                                    </table>
+                                {% else %}
+                                    {{ v|pprint }}
+                                {% endif %}
+                            {% else %}
+                                <p>No data for {{ k }}</p>
+                            {% endif %}
+                            </td>
+                        </tr>
+                    {% endfor %}
+                </table>
+            </div>
+            
+            {% if version_data %}
+                <div id="versioninfo">
+                    <h2>Module Versions</h2>
                     <table>
-                        {% for k, v in json_data %}
+                        {% for k, v in version_data %}
                             <tr>
                                 <th class="key">{{ k }}</th>
-                                <td class="values">
-                                {% if v %}
-                                    {% if v|is_dict %}
-                                        <table class="vars">
-                                            <thead>
-                                                <tr>
-                                                    <th>Variable</th>
-                                                    <th>Value</th>
-                                                </tr>
-                                            </thead>
-                                            <tbody>
-                                                {% for k_, v_ in v.iteritems|as_sorted %}
-                                                <tr>
-                                                    <td>{{ k_ }}</td>
-                                                    <td class="code"><pre>{{ v_|pprint }}</pre></td>
-                                                </tr>
-                                                {% endfor %}
-                                            </tbody>
-                                        </table>
-                                    {% else %}
-                                        {{ v|pprint }}
-                                    {% endif %}
-                                {% else %}
-                                    <p>No data for {{ k }}</p>
-                                {% endif %}
-                                </td>
+                                <td class="values">{{ v }}</td>
                             </tr>
                         {% endfor %}
                     </table>
                 </div>
-                
-                {% if version_data %}
-                    <div id="versioninfo">
-                        <h2>Module Versions</h2>
-                        <table>
-                            {% for k, v in version_data %}
-                                <tr>
-                                    <th class="key">{{ k }}</th>
-                                    <td class="values">{{ v }}</td>
-                                </tr>
-                            {% endfor %}
-                        </table>
-                    </div>
-                {% endif %}
-            </div>
-        {% endblock %}
-    </div>
-{% endblock %}
\ No newline at end of file
+            {% endif %}
+        </div>
+    {% endblock %}
+{% endblock %}
diff --git a/sentry/templates/sentry/index.html b/sentry/templates/sentry/index.html
index 9cae1b2ae9..4b852fb8dd 100644
--- a/sentry/templates/sentry/index.html
+++ b/sentry/templates/sentry/index.html
@@ -1,115 +1,64 @@
+{% extends "sentry/layout.html" %}
+
 {% load paging_extras %}
 {% load sentry_helpers %}
 
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd"> 
-<html lang="en">
-    <head> 
-        <meta http-equiv="content-type" content="text/html; charset=utf-8"> 
-        <meta name="robots" content="NONE,NOARCHIVE">
-        <link href="http{% if request.is_secure %}s{% endif %}://fonts.googleapis.com/css?family=Yanone+Kaffeesatz:light,regular&amp;subset=latin" rel="stylesheet" type="text/css">
-        <link href="{% url sentry-media "styles/global.css" %}" rel="stylesheet" type="text/css"/>
-        <link href="{% url sentry-media "images/sentry.png" %}" rel="shortcut icon"/>
-        <title>{% block title %}Sentry{% endblock %}</title> 
-        <script type="text/javascript" src="http{% if request.is_secure %}s{% endif %}://ajax.googleapis.com/ajax/libs/jquery/1.4.2/jquery.min.js"></script>
-        <script type="text/javascript" src="{% url sentry-media "scripts/highcharts.js" %}" ></script>
-        <script type="text/javascript" src="{% url sentry-media "scripts/jquery.animate-colors-min.js" %}"></script>
-        <script type="text/javascript" src="{% url sentry-media "scripts/global.js" %}"></script>
-        <script type="text/javascript">
-        Sentry.config({
-            mediaUrl: '{% url sentry-media '' %}',
-            apiUrl: '{% url sentry-ajax %}',
-            defaultImage: '{% url sentry-media 'images/sentry.png' %}'
-        });
-        {% if has_realtime %}
-        Sentry.realtime.enable();
-        {% endif %}
-        </script>
-    </head> 
-    
-    <body> 
-        {% block body %}
-        <div id="header"> 
-            <div class="container">
-                <h1><a href="{% url sentry %}"><img src="{% url sentry-media "images/sentry.png" %}" border="0" width="32"/>Sentry</a></h1>
-                <h2>{% block heading %}Dashboard{% endblock %}</h2>
-                <ul class="nav" id="account">
-                    {% if request.user.is_authenticated %}
-                        <li><a href="{% url sentry-logout %}">Logout</a>
-                    {% endif %}
-                </ul>
-            </div>
-        </div> 
-        <div id="content">
-            {% block content_before %}
-            {% endblock %}
-            <div class="container">
-                {% block content %}
-                    <div id="sidebar" class="column">
-                        {% if chart_url %}
-                            <h2>Last 24 Hours</h2>
-                            <img src="{{ chart_url }}" class="chart" alt="chart"/>
-                        {% endif %}
-                    
-                        {% for filter in filters %}
-                            <div class="sidebar-module sidebar-module-{{ filter.column }}">
-                                {% if filter.show_label %}
-                                    <h2>{{ filter.label }}</h2>
-                                {% endif %}
-                                <form method="get" action="{{ filter.get_query_string|safe }}">
-                                    {{ filter.render }}
-                                </form>
-                            </div>
-                        {% endfor %}
-                    </div>
+{% block heading %}Dashboard{% endblock %}
 
-                    <div id="body" class="with-sidebar column">
-                        {% paginate message_list from request as message_list per_page 15 %}
+{% block sidebar %}
+    {% if chart_url %}
+        <h2>Last 24 Hours</h2>
+        <img src="{{ chart_url }}" class="chart" alt="chart"/>
+    {% endif %}
 
-                        <div class="paging-wrap">
-                            <div class="clearfix">
-                                <form method="GET" action="">
-                                    {% for k, v in request.GET.iteritems %}
-                                        <input type="hidden" name="{{ k }}" value="{{ v }}"/>
-                                    {% endfor %}
-                                    <div class="sort-by">Sort by <select name="sort" onchange="this.form.submit()">
-                                        <option value=""{% ifequal sort 'priority' %} selected="selected"{% endifequal %}>Priority</option>
-                                        <option value="date"{% ifequal sort 'date' %} selected="selected"{% endifequal %}>Last Seen</option>
-                                        <option value="new"{% ifequal sort 'new' %} selected="selected"{% endifequal %}>First Seen</option>
-                                    </select>
-                                    </div>
-                                </form>
-                                {% if has_realtime %}
-                                    <a id="sentry_realtime" class="realtime realtime-pause">Pause Feed</a>
-                                {% endif %}
-                                {{ message_list.paging }}
-                            </div>
-                        </div>
-                        
-                        {% if message_list.objects %}
-                            <ul class="messages" id="message_list">
-                                {% for group, priority in message_list.objects|with_priority %}
-                                    {% include "sentry/partial/_group.html" %}
-                                {% endfor %}
-                            </ul>
-                        {% else %}
-                            <ul class="messages" id="message_list">
-                                <li class="no-messages" id="no_messages">No messages match your filters.</li>
-                            </ul>
-                        {% endif %}
+    {% for filter in filters %}
+        <div class="sidebar-module sidebar-module-{{ filter.column }}">
+            {% if filter.show_label %}
+                <h2>{{ filter.label }}</h2>
+            {% endif %}
+            <form method="get" action="{{ filter.get_query_string|safe }}">
+                {{ filter.render }}
+            </form>
+        </div>
+    {% endfor %}
+{% endblock %}
 
-                        <div class="clearfix">
-                            {{ message_list.paging }}
-                        </div>
+{% block main %}
+    {% paginate message_list from request as message_list per_page 15 %}
+
+    <div class="paging-wrap">
+        <div class="clearfix">
+            <form method="GET" action="">
+                {% for k, v in request.GET.iteritems %}
+                    <input type="hidden" name="{{ k }}" value="{{ v }}"/>
+                {% endfor %}
+                <div class="sort-by">Sort by <select name="sort" onchange="this.form.submit()">
+                    <option value=""{% ifequal sort 'priority' %} selected="selected"{% endifequal %}>Priority</option>
+                    <option value="date"{% ifequal sort 'date' %} selected="selected"{% endifequal %}>Last Seen</option>
+                    <option value="new"{% ifequal sort 'new' %} selected="selected"{% endifequal %}>First Seen</option>
+                </select>
+                </div>
+            </form>
+            {% if has_realtime %}
+                <a id="sentry_realtime" class="realtime realtime-pause">Pause Feed</a>
+            {% endif %}
+            {{ message_list.paging }}
+        </div>
+    </div>
+    
+    {% if message_list.objects %}
+        <ul class="messages" id="message_list">
+            {% for group, priority in message_list.objects|with_priority %}
+                {% include "sentry/partial/_group.html" %}
+            {% endfor %}
+        </ul>
+    {% else %}
+        <ul class="messages" id="message_list">
+            <li class="no-messages" id="no_messages">No messages match your filters.</li>
+        </ul>
+    {% endif %}
 
-                    </div>
-                {% endblock %}
-            </div>
-         </div>
-        <div id="footer">
-            <div class="container">
-                Sentry {% sentry_version %} | Powered by sexy Django magic | Conjured up by the <a href="http://code.disqus.com">DISQUS</a> team and other noble <a href="https://github.com/dcramer/django-sentry/contributors">sorcerers</a>.
-            </div>
-        </div> 
-        {% endblock %}
-    </body>
-</html>
+    <div class="clearfix">
+        {{ message_list.paging }}
+    </div>
+{% endblock %}
diff --git a/sentry/templates/sentry/layout.html b/sentry/templates/sentry/layout.html
new file mode 100644
index 0000000000..f03c31c4cf
--- /dev/null
+++ b/sentry/templates/sentry/layout.html
@@ -0,0 +1,73 @@
+{% load paging_extras %}
+{% load sentry_helpers %}
+
+<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd"> 
+<html lang="en">
+    <head> 
+        <meta http-equiv="content-type" content="text/html; charset=utf-8"> 
+        <meta name="robots" content="NONE,NOARCHIVE">
+        <link href="http{% if request.is_secure %}s{% endif %}://fonts.googleapis.com/css?family=Yanone+Kaffeesatz:light,regular&amp;subset=latin" rel="stylesheet" type="text/css">
+        <link href="{% url sentry-media "styles/global.css" %}" rel="stylesheet" type="text/css"/>
+        <link href="{% url sentry-media "images/sentry.png" %}" rel="shortcut icon"/>
+        <title>{% block title %}Sentry{% endblock %}</title> 
+        <script type="text/javascript" src="http{% if request.is_secure %}s{% endif %}://ajax.googleapis.com/ajax/libs/jquery/1.4.2/jquery.min.js"></script>
+        <script type="text/javascript" src="{% url sentry-media "scripts/highcharts.js" %}" ></script>
+        <script type="text/javascript" src="{% url sentry-media "scripts/jquery.animate-colors-min.js" %}"></script>
+        <script type="text/javascript" src="{% url sentry-media "scripts/global.js" %}"></script>
+        <script type="text/javascript">
+        Sentry.config({
+            mediaUrl: '{% url sentry-media '' %}',
+            apiUrl: '{% url sentry-ajax %}',
+            defaultImage: '{% url sentry-media 'images/sentry.png' %}'
+        });
+        {% if has_realtime %}
+        Sentry.realtime.enable();
+        {% endif %}
+        </script>
+    </head> 
+    
+    <body> 
+        {% block body %}
+        <div id="header"> 
+            <div class="container">
+                <h1><a href="{% url sentry %}"><img src="{% url sentry-media "images/sentry.png" %}" border="0" width="32"/>Sentry</a></h1>
+                <h2>{% block heading %}Dashboard{% endblock %}</h2>
+                {% if request.user.is_authenticated %}
+                    <form id="search" method="GET" action="{% url sentry-search %}">
+                        <input type="hidden" name="sort" value="{% if sort %}{{ sort }}{% endif %}"/>
+                        <input type="text" name="q" value="{% if query %}{{ query }}{% endif %}" placeholder="{% if has_search %}search query or message id{% else %}message id{% endif %}"/>
+                        <button type="submit">Go</button>
+                    </form>
+                {% endif %}
+            </div>
+        </div> 
+        <div id="content">
+            {% block content_before %}
+            {% endblock %}
+            <div class="container">
+                {% block content %}
+                    <div id="sidebar" class="column">
+                        {% block sidebar %}
+                        {% endblock %}
+                    </div>
+
+                    <div id="body" class="with-sidebar column">
+                        {% block main %}
+                        {% endblock %}
+                    </div>
+                {% endblock %}
+            </div>
+         </div>
+        <div id="footer">
+            <div class="container">
+                Sentry {% sentry_version %} | Powered by sexy Django magic | Conjured up by the <a href="http://code.disqus.com">DISQUS</a> team and other noble <a href="https://github.com/dcramer/django-sentry/contributors">sorcerers</a>.
+                <ul class="nav" id="account">
+                    {% if request.user.is_authenticated %}
+                        <li><a href="{% url sentry-logout %}">Logout</a></li>
+                    {% endif %}
+                </ul>
+            </div>
+        </div> 
+        {% endblock %}
+    </body>
+</html>
diff --git a/sentry/templates/sentry/login.html b/sentry/templates/sentry/login.html
index 59fd19d789..6b52b3f226 100644
--- a/sentry/templates/sentry/login.html
+++ b/sentry/templates/sentry/login.html
@@ -1,8 +1,8 @@
-{% extends "sentry/index.html" %}
+{% extends "sentry/layout.html" %}
 
 {% load sentry_helpers %}
 
-{% block title %}Login | Sentry{% endblock %}
+{% block title %}Login | {{ block.super }}{% endblock %}
 
 {% block heading %}Login{% endblock %}
 
diff --git a/sentry/templates/sentry/search.html b/sentry/templates/sentry/search.html
new file mode 100644
index 0000000000..4937ec564b
--- /dev/null
+++ b/sentry/templates/sentry/search.html
@@ -0,0 +1,43 @@
+{% extends "sentry/layout.html" %}
+
+{% load paging_extras %}
+{% load sentry_helpers %}
+
+{% block heading %}Dashboard{% endblock %}
+
+{% block main %}
+    {% paginate message_list from request as message_list per_page 15 %}
+
+    <div class="paging-wrap">
+        <div class="clearfix">
+            <form method="GET" action="">
+                {% for k, v in request.GET.iteritems %}
+                    <input type="hidden" name="{{ k }}" value="{{ v }}"/>
+                {% endfor %}
+                <div class="sort-by">Sort by <select name="sort" onchange="this.form.submit()">
+                    <option value=""{% ifequal sort 'relevance' %} selected="selected"{% endifequal %}>Relevance</option>
+                    <option value="date"{% ifequal sort 'date' %} selected="selected"{% endifequal %}>Last Seen</option>
+                    <option value="new"{% ifequal sort 'new' %} selected="selected"{% endifequal %}>First Seen</option>
+                </select>
+                </div>
+            </form>
+            {{ message_list.paging }}
+        </div>
+    </div>
+
+    {% if message_list.objects %}
+        <ul class="messages" id="message_list">
+            {% for group, priority in message_list.objects|with_priority %}
+                {% include "sentry/partial/_group.html" %}
+            {% endfor %}
+        </ul>
+    {% else %}
+        <ul class="messages" id="message_list">
+            <li class="no-messages" id="no_messages">No messages match your query.</li>
+        </ul>
+    {% endif %}
+
+    <div class="clearfix">
+        {{ message_list.paging }}
+    </div>
+{% endblock %}
diff --git a/sentry/urls.py b/sentry/urls.py
index b1268ebcae..c219e37667 100644
--- a/sentry/urls.py
+++ b/sentry/urls.py
@@ -32,5 +32,7 @@ urlpatterns = patterns('',
     url(r'^group/(\d+)/messages/(\d+)$', views.group_message_details, name='sentry-group-message'),
     url(r'^group/(\d+)/actions/([\w_-]+)', views.group_plugin_action, name='sentry-group-plugin-action'),
 
+    url(r'^search$', views.search, name='sentry-search'),
+
     url(r'^$', views.index, name='sentry'),
 )
diff --git a/sentry/views.py b/sentry/views.py
index b4a5008f9c..3438253bab 100644
--- a/sentry/views.py
+++ b/sentry/views.py
@@ -10,10 +10,9 @@ import zlib
 
 from django.core.context_processors import csrf
 from django.core.urlresolvers import reverse
-from django.db.models import Q
 from django.http import HttpResponse, HttpResponseBadRequest, \
     HttpResponseForbidden, HttpResponseRedirect, Http404, HttpResponseNotModified
-from django.shortcuts import render_to_response, get_object_or_404
+from django.shortcuts import get_object_or_404
 from django.template.loader import render_to_string
 from django.utils import simplejson
 from django.utils.safestring import mark_safe
@@ -28,6 +27,14 @@ from sentry.reporter import ImprovedExceptionReporter
 
 uuid_re = re.compile(r'^[a-z0-9]{32}$')
 
+def render_to_response(template, context):
+    from django.shortcuts import render_to_response
+
+    context.update({
+        'has_search': bool(conf.SEARCH_ENGINE),
+    })
+    return render_to_response(template, context)
+
 def get_search_query_set(query):
     from haystack.query import SearchQuerySet
     from sentry.search_indexes import site, backend
@@ -79,8 +86,11 @@ def login(request):
         request.session.set_test_cookie()
 
     
-    context = locals()
-    context.update(csrf(request))
+    context = csrf(request)
+    context.update({
+        'form': form,
+        'request': request,
+    })
     return render_to_response('sentry/login.html', context)
 
 def logout(request):
@@ -91,20 +101,16 @@ def logout(request):
     return HttpResponseRedirect(reverse('sentry'))
 
 @login_required
-def index(request):
-    filters = []
-    for filter_ in get_filters():
-        filters.append(filter_(request))
-    
+def search(request):
     try:
         page = int(request.GET.get('p', 1))
     except (TypeError, ValueError):
         page = 1
 
-    query = request.GET.get('content')
-    is_search = query
+    query = request.GET.get('q')
+    has_search = bool(conf.SEARCH_ENGINE)
 
-    if is_search:
+    if query:
         if uuid_re.match(query):
             # Forward to message if it exists
             try:
@@ -113,21 +119,44 @@ def index(request):
                 pass
             else:
                 return HttpResponseRedirect(message.get_absolute_url())
-
-        message_list = get_search_query_set(query)
+        elif not has_search:
+            return render_to_response('sentry/invalid_message_id.html')
+        else:
+            message_list = get_search_query_set(query)
     else:
-        message_list = GroupedMessage.objects.extra(
-            select={
-                'score': GroupedMessage.get_score_clause(),
-            }
-        )
-        if query:
-            # You really shouldnt be doing this
-            message_list = message_list.filter(
-                Q(view__icontains=query) \
-                | Q(message__icontains=query) \
-                | Q(traceback__icontains=query)
-            )
+        message_list = GroupedMessage.objects.none()
+    
+    sort = request.GET.get('sort')
+    if sort == 'date':
+        message_list = message_list.order_by('-last_seen')
+    elif sort == 'new':
+        message_list = message_list.order_by('-first_seen')
+    else:
+        sort = 'relevance'
+
+    return render_to_response('sentry/search.html', {
+        'message_list': message_list,
+        'query': query,
+        'sort': sort,
+        'request': request,
+    })
+
+@login_required
+def index(request):
+    filters = []
+    for filter_ in get_filters():
+        filters.append(filter_(request))
+    
+    try:
+        page = int(request.GET.get('p', 1))
+    except (TypeError, ValueError):
+        page = 1
+
+    message_list = GroupedMessage.objects.extra(
+        select={
+            'score': GroupedMessage.get_score_clause(),
+        }
+    )
 
     sort = request.GET.get('sort')
     if sort == 'date':
@@ -136,9 +165,9 @@ def index(request):
         message_list = message_list.order_by('-first_seen')
     else:
         sort = 'priority'
-        if not is_search:
-            message_list = message_list.order_by('-score', '-last_seen')
+        message_list = message_list.order_by('-score', '-last_seen')
     
+    # Filters only apply if we're not searching
     any_filter = False
     for filter_ in filters:
         if not filter_.is_set():
@@ -154,7 +183,6 @@ def index(request):
         'has_realtime': has_realtime,
         'message_list': message_list,
         'today': today,
-        'query': query,
         'sort': sort,
         'any_filter': any_filter,
         'request': request,
@@ -172,24 +200,12 @@ def ajax_handler(request):
         for filter_ in get_filters():
             filters.append(filter_(request))
 
-        query = request.GET.get('content')
-        is_search = query
 
-        if is_search:
-            message_list = get_search_query_set(query)
-        else:
-            message_list = GroupedMessage.objects.extra(
-                select={
-                    'score': GroupedMessage.get_score_clause(),
-                }
-            )
-            if query:
-                # You really shouldnt be doing this
-                message_list = message_list.filter(
-                    Q(view__icontains=query) \
-                    | Q(message__icontains=query) \
-                    | Q(traceback__icontains=query)
-                )
+        message_list = GroupedMessage.objects.extra(
+            select={
+                'score': GroupedMessage.get_score_clause(),
+            }
+        )
         
         sort = request.GET.get('sort')
         if sort == 'date':
@@ -198,8 +214,7 @@ def ajax_handler(request):
             message_list = message_list.order_by('-first_seen')
         else:
             sort = 'priority'
-            if not is_search:
-                message_list = message_list.order_by('-score', '-last_seen')
+            message_list = message_list.order_by('-score', '-last_seen')
         
         for filter_ in filters:
             if not filter_.is_set():
diff --git a/setup.py b/setup.py
index f499f9de1d..ec53862951 100644
--- a/setup.py
+++ b/setup.py
@@ -17,7 +17,7 @@ tests_require = [
 
 setup(
     name='django-sentry',
-    version='1.6.7',
+    version='1.6.8',
     author='David Cramer',
     author_email='dcramer@gmail.com',
     url='http://github.com/dcramer/django-sentry',
