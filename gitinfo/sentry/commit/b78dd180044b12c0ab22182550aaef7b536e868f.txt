commit b78dd180044b12c0ab22182550aaef7b536e868f
Author: Matt Robenolt <matt@ydekproductions.com>
Date:   Mon Nov 9 12:38:00 2015 -0800

    Restrict unauthenticated CORS to only GET

diff --git a/src/sentry/web/api.py b/src/sentry/web/api.py
index c20ce7b451..f505bb2136 100644
--- a/src/sentry/web/api.py
+++ b/src/sentry/web/api.py
@@ -194,18 +194,19 @@ class APIView(BaseView):
 
             if auth.version != '2.0':
                 if not auth.secret_key:
-                    # We fall back to checking CORS if either:
-                    #  * Request was a GET or
-                    #  * Missing secret_key on any other method
-                    # If an Origin isn't passed, it's possible that the project allows no origin,
-                    # so we need to explicitly check for that here. If Origin is not None,
-                    # it can be safely assumed that it was checked previously and it's ok.
-                    if origin is None and not is_valid_origin(origin, project):
-                        if request.method == 'GET':
-                            # Special case for GET request since it will never use a sentry_secret
-                            raise APIForbidden('Missing required Origin or Referer header')
+                    # If we're missing a secret_key, check if we are allowed
+                    # to do a CORS request.
+
+                    # If we're missing an Origin/Referrer header entirely,
+                    # we only want to support this on GET requests. By allowing
+                    # un-authenticated CORS checks for POST, we basially
+                    # are obsoleting our need for a secret key entirely.
+                    if origin is None and request.method != 'GET':
                         raise APIForbidden('Missing required attribute in authentication header: sentry_secret')
 
+                    if not is_valid_origin(origin, project):
+                        raise APIForbidden('Missing required Origin or Referer header')
+
             response = super(APIView, self).dispatch(
                 request=request,
                 project=project,
diff --git a/tests/integration/tests.py b/tests/integration/tests.py
index 8518702af9..1c95a593a9 100644
--- a/tests/integration/tests.py
+++ b/tests/integration/tests.py
@@ -226,7 +226,7 @@ class SentryRemoteTest(TestCase):
         self.project.update_option('sentry:origins', '')
         kwargs = {'message': 'hello'}
         resp = self._postWithReferer(kwargs, referer=None, protocol='4')
-        assert resp.status_code == 200, (resp.status_code, resp.get('X-Sentry-Error'))
+        assert resp.status_code == 403, (resp.status_code, resp.get('X-Sentry-Error'))
 
     def test_signature(self):
         kwargs = {'message': 'hello'}
