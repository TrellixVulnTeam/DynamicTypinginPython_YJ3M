commit f28cced72c4fc4bb9fbb6596db8ec14cf56c4d19
Author: Daniel Griesser <daniel.griesser.86@gmail.com>
Date:   Thu Feb 23 08:39:50 2017 +0100

    Add cache_enabled paramter

diff --git a/src/sentry/http.py b/src/sentry/http.py
index 2504e2fd5f..0fd85e886d 100644
--- a/src/sentry/http.py
+++ b/src/sentry/http.py
@@ -227,21 +227,22 @@ def expose_url(url):
     return url
 
 
-def stream_download_binary(url, headers=None):
+def stream_download_binary(url, headers=None, cache_enabled=True):
     """
     Pull down a URL, returning a UrlResult object.
 
     Attempts to fetch from the cache.
     """
     # lock down domains that are problematic
-    domain = urlparse(url).netloc
-    domain_key = 'source:blacklist:v2:%s' % (
-        md5_text(domain).hexdigest(),
-    )
-    domain_result = cache.get(domain_key)
-    if domain_result:
-        domain_result['url'] = url
-        raise CannotFetchSource(domain_result)
+    if cache_enabled:
+        domain = urlparse(url).netloc
+        domain_key = 'source:blacklist:v2:%s' % (
+            md5_text(domain).hexdigest(),
+        )
+        domain_result = cache.get(domain_key)
+        if domain_result:
+            domain_result['url'] = url
+            raise CannotFetchSource(domain_result)
 
     logger.debug('Fetching %r from the internet', url)
 
@@ -319,7 +320,8 @@ def stream_download_binary(url, headers=None):
                 }
 
             # TODO(dcramer): we want to be less aggressive on disabling domains
-            cache.set(domain_key, error or '', 300)
+            if cache_enabled:
+                cache.set(domain_key, error or '', 300)
             logger.warning('source.disabled', extra=error)
             raise CannotFetchSource(error)
 
