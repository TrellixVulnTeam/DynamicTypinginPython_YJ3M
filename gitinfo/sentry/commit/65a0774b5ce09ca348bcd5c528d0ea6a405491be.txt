commit 65a0774b5ce09ca348bcd5c528d0ea6a405491be
Author: Billy Vong <billyvg@users.noreply.github.com>
Date:   Wed May 29 09:41:12 2019 -0700

    feat(ui): Fix Incidents list status filters [SEN-687] (#13433)
    
    This implements the status filters on the Incidents list. Change the order so that "All" is default and added "Closed"
    
    Fixes SEN-687

diff --git a/src/sentry/static/sentry/app/views/organizationIncidents/list/index.jsx b/src/sentry/static/sentry/app/views/organizationIncidents/list/index.jsx
index 5affca59f8..f372dab906 100644
--- a/src/sentry/static/sentry/app/views/organizationIncidents/list/index.jsx
+++ b/src/sentry/static/sentry/app/views/organizationIncidents/list/index.jsx
@@ -20,9 +20,9 @@ import space from 'app/styles/space';
 
 import Status from '../status';
 
-const DEFAULT_QUERY_STATUS = 'open';
+const DEFAULT_QUERY_STATUS = '';
 
-class OrganizationIncidentsBody extends AsyncComponent {
+class OrganizationIncidentsList extends AsyncComponent {
   getEndpoints() {
     const {params, location} = this.props;
     return [
@@ -99,12 +99,13 @@ class OrganizationIncidentsBody extends AsyncComponent {
   }
 }
 
-class OrganizationIncidents extends React.Component {
+class OrganizationIncidentsListContainer extends React.Component {
   render() {
     const {pathname, query} = this.props.location;
 
-    const openIncidentsQuery = omit(query, 'status');
-    const allIncidentsQuery = {...query, status: ''};
+    const openIncidentsQuery = {...query, status: 'open'};
+    const closedIncidentsQuery = {...query, status: 'closed'};
+    const allIncidentsQuery = omit(query, 'status');
 
     const status = query.status === undefined ? DEFAULT_QUERY_STATUS : query.status;
 
@@ -117,6 +118,13 @@ class OrganizationIncidents extends React.Component {
             </PageHeading>
 
             <div className="btn-group">
+              <Button
+                to={{pathname, query: allIncidentsQuery}}
+                size="small"
+                className={'btn' + (status === '' ? ' active' : '')}
+              >
+                {t('All Incidents')}
+              </Button>
               <Button
                 to={{pathname, query: openIncidentsQuery}}
                 size="small"
@@ -125,15 +133,15 @@ class OrganizationIncidents extends React.Component {
                 {t('Open')}
               </Button>
               <Button
-                to={{pathname, query: allIncidentsQuery}}
+                to={{pathname, query: closedIncidentsQuery}}
                 size="small"
-                className={'btn' + (status === '' ? ' active' : '')}
+                className={'btn' + (status === 'closed' ? ' active' : '')}
               >
-                {t('All Incidents')}
+                {t('Closed')}
               </Button>
             </div>
           </PageHeader>
-          <OrganizationIncidentsBody {...this.props} />
+          <OrganizationIncidentsList {...this.props} />
         </PageContent>
       </DocumentTitle>
     );
@@ -147,4 +155,4 @@ const TableLayout = styled('div')`
   width: 100%;
 `;
 
-export default OrganizationIncidents;
+export default OrganizationIncidentsListContainer;
diff --git a/tests/js/spec/views/organizationIncidents/list/index.spec.jsx b/tests/js/spec/views/organizationIncidents/list/index.spec.jsx
index 9ac1024a60..52f3ae67d7 100644
--- a/tests/js/spec/views/organizationIncidents/list/index.spec.jsx
+++ b/tests/js/spec/views/organizationIncidents/list/index.spec.jsx
@@ -49,7 +49,7 @@ describe('OrganizationIncidentsList', function() {
     expect(wrapper.text()).toContain("You don't have any incidents yet");
   });
 
-  it('toggles all/unresolved', function() {
+  it('toggles all/open', function() {
     const wrapper = mount(
       <OrganizationIncidentsList
         params={{orgId: 'org-slug'}}
@@ -73,7 +73,7 @@ describe('OrganizationIncidentsList', function() {
       expect.objectContaining({query: {}})
     );
 
-    wrapper.setProps({location: {query: {status: ''}, search: '?status='}});
+    wrapper.setProps({location: {query: {status: 'open'}, search: '?status=open'}});
 
     expect(
       wrapper
@@ -87,7 +87,7 @@ describe('OrganizationIncidentsList', function() {
 
     expect(mock).toHaveBeenCalledWith(
       '/organizations/org-slug/incidents/',
-      expect.objectContaining({query: expect.objectContaining({status: ''})})
+      expect.objectContaining({query: expect.objectContaining({status: 'open'})})
     );
   });
 });
