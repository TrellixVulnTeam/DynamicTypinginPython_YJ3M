commit c1a186b8ed226fc1b64d9fcc3a0740fe0d74436d
Author: Markus Unterwaditzer <markus@unterwaditzer.net>
Date:   Tue Jun 2 20:07:39 2020 +0200

    fix: Correct timestamps for all samples to accomodate relay update (#19140)
    
    * fix: Correct timestamps for all samples to accomodate relay update
    
    * fix tests
    
    * fix another test

diff --git a/src/sentry/testutils/factories.py b/src/sentry/testutils/factories.py
index 50c3a65893..82f182a0b0 100644
--- a/src/sentry/testutils/factories.py
+++ b/src/sentry/testutils/factories.py
@@ -516,8 +516,6 @@ class Factories(object):
     def store_event(data, project_id, assert_no_errors=True, sent_at=None):
         # Like `create_event`, but closer to how events are actually
         # ingested. Prefer to use this method over `create_event`
-        if sent_at is None:
-            sent_at = timezone.now()
         manager = EventManager(data, sent_at=sent_at)
         manager.normalize()
         if assert_no_errors:
diff --git a/src/sentry/utils/samples.py b/src/sentry/utils/samples.py
index 4cc847cd41..aae7c7c19a 100644
--- a/src/sentry/utils/samples.py
+++ b/src/sentry/utils/samples.py
@@ -149,16 +149,18 @@ def load_data(platform, default=None, sample_name=None):
     if platform in ("csp", "hkpk", "expectct", "expectstaple"):
         return data
 
-    # Transaction events need timestamp data set to something current.
-    if platform == "transaction":
-        now = timezone.now()
-        now_time = to_timestamp(now)
-        start_time = to_timestamp(now - timedelta(seconds=2))
-        data.setdefault("timestamp", now_time)
-        data.setdefault("start_timestamp", start_time)
-        for span in data["spans"]:
-            span.setdefault("timestamp", now_time)
-            span.setdefault("start_timestamp", start_time)
+    # Fixing up timestamps for all events
+    now = timezone.now()
+    now_time = to_timestamp(now)
+    start_time = to_timestamp(now - timedelta(seconds=2))
+    data.setdefault("timestamp", now_time)
+
+    if data.get("type") == "transaction":
+        data["start_timestamp"] = start_time
+
+    for span in data.get("spans") or ():
+        span.setdefault("timestamp", now_time)
+        span.setdefault("start_timestamp", start_time)
 
     data["platform"] = platform
     # XXX: Message is a legacy alias for logentry. Do not overwrite if set.
