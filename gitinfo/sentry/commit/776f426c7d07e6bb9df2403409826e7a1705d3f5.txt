commit 776f426c7d07e6bb9df2403409826e7a1705d3f5
Author: Billy Vong <billyvg@users.noreply.github.com>
Date:   Tue Jul 9 13:20:58 2019 -0700

    ref(ui): Code split Organization Members (#13924)
    
    This allows `HookOrDefault` to render a code split component

diff --git a/src/sentry/static/sentry/app/components/hookOrDefault.jsx b/src/sentry/static/sentry/app/components/hookOrDefault.jsx
index 8e37db3584..883cc8511e 100644
--- a/src/sentry/static/sentry/app/components/hookOrDefault.jsx
+++ b/src/sentry/static/sentry/app/components/hookOrDefault.jsx
@@ -21,10 +21,13 @@ import HookStore from 'app/stores/hookStore';
  *
  * @param {String} name The name of the hook as listed in hookstore.add(hookName, callback)
  * @param {Component} defaultComponent Component that will be shown if no hook is available
+ * @param {Function} defaultComponentPromise This is a function that returns a promise (more
+ *                   specifically a function that returns the result of a dynamic import using
+ *                   `import()`. This will use React.Suspense and React.lazy to render the component.
  *
  */
 
-function HookOrDefault({hookName, defaultComponent, params}) {
+function HookOrDefault({hookName, defaultComponent, defaultComponentPromise, params}) {
   const HookOrDefaultComponent = createReactClass({
     displayName: 'HookOrDefaultComponent',
     mixins: [Reflux.listenTo(HookStore, 'handleHooks')],
@@ -46,12 +49,26 @@ function HookOrDefault({hookName, defaultComponent, params}) {
       }));
     },
 
+    getDefaultComponent() {
+      // If `defaultComponentPromise` is passed, then return a Suspended component
+      if (defaultComponentPromise) {
+        const Component = React.lazy(defaultComponentPromise);
+        return props => (
+          <React.Suspense fallback={null}>
+            <Component {...props} />
+          </React.Suspense>
+        );
+      }
+
+      return defaultComponent;
+    },
+
     render() {
       const hookExists = this.state.hooks && this.state.hooks.length;
       const HookComponent =
         hookExists && this.state.hooks[0]({params})
           ? this.state.hooks[0]({params})
-          : defaultComponent;
+          : this.getDefaultComponent();
 
       return <HookComponent {...this.props} />;
     },
diff --git a/src/sentry/static/sentry/app/routes.jsx b/src/sentry/static/sentry/app/routes.jsx
index 895958b741..7d584b9fcb 100644
--- a/src/sentry/static/sentry/app/routes.jsx
+++ b/src/sentry/static/sentry/app/routes.jsx
@@ -15,7 +15,6 @@ import OrganizationCreate from 'app/views/organizationCreate';
 import OrganizationDashboard from 'app/views/organizationProjectsDashboard';
 import OrganizationDetails from 'app/views/organizationDetails';
 import OrganizationHomeContainer from 'app/components/organizations/homeContainer';
-import OrganizationMembers from 'app/views/settings/organizationMembers';
 import OrganizationRoot from 'app/views/organizationRoot';
 import OrganizationStats from 'app/views/organizationStats';
 import IssueListContainer from 'app/views/issueList/container';
@@ -57,7 +56,8 @@ const hook = name => HookStore.get(name).map(cb => cb());
 
 const OrganizationMembersView = HookOrDefault({
   hookName: 'component:org-members-view',
-  defaultComponent: OrganizationMembers,
+  defaultComponentPromise: () =>
+    import(/* webpackChunkName: "OrganizationMembers" */ './views/settings/organizationMembers'),
 });
 
 const OnboardingNewProjectView = HookOrDefault({
