commit 8ac8312f9d7346e5e37256882d14d6c3df2058e3
Author: David Cramer <dcramer@gmail.com>
Date:   Thu Feb 12 15:41:37 2015 -0800

    Update team details endpoint to use slugs

diff --git a/src/sentry/api/endpoints/team_details.py b/src/sentry/api/endpoints/team_details.py
index defc56f800..c6cb051f2c 100644
--- a/src/sentry/api/endpoints/team_details.py
+++ b/src/sentry/api/endpoints/team_details.py
@@ -34,7 +34,7 @@ class TeamAdminSerializer(TeamSerializer):
 
 
 class TeamDetailsEndpoint(Endpoint):
-    def get(self, request, team_id):
+    def get(self, request, organization_slug, team_slug):
         """
         Retrieve a team.
 
@@ -43,15 +43,21 @@ class TeamDetailsEndpoint(Endpoint):
             {method} {path}
 
         """
-        team = Team.objects.get(id=team_id)
+        team = Team.objects.get(
+            organization__slug=organization_slug,
+            slug=team_slug,
+        )
 
         assert_perm(team, request.user, request.auth)
 
         return Response(serialize(team, request.user))
 
     @sudo_required
-    def put(self, request, team_id):
-        team = Team.objects.get(id=team_id)
+    def put(self, request, organization_slug, team_slug):
+        team = Team.objects.get(
+            organization__slug=organization_slug,
+            slug=team_slug,
+        )
 
         assert_perm(team, request.user, request.auth, access=OrganizationMemberType.ADMIN)
 
@@ -79,8 +85,11 @@ class TeamDetailsEndpoint(Endpoint):
         return Response(serializer.errors, status=status.HTTP_400_BAD_REQUEST)
 
     @sudo_required
-    def delete(self, request, team_id):
-        team = Team.objects.get(id=team_id)
+    def delete(self, request, organization_slug, team_slug):
+        team = Team.objects.get(
+            organization__slug=organization_slug,
+            slug=team_slug,
+        )
 
         assert_perm(team, request.user, request.auth, access=OrganizationMemberType.ADMIN)
 
diff --git a/src/sentry/api/urls.py b/src/sentry/api/urls.py
index f0d3851796..e26e34f3ea 100644
--- a/src/sentry/api/urls.py
+++ b/src/sentry/api/urls.py
@@ -65,7 +65,7 @@ urlpatterns = patterns(
         name='sentry-api-0-organization-teams'),
 
     # Teams
-    url(r'^teams/(?P<team_id>\d+)/$',
+    url(r'^teams/(?P<organization_slug>[^\/]+)/(?P<team_slug>[^\/]+)/$',
         TeamDetailsEndpoint.as_view(),
         name='sentry-api-0-team-details'),
     url(r'^teams/(?P<organization_slug>[^\/]+)/(?P<team_slug>[^\/]+)/groups/new/$',
diff --git a/tests/sentry/api/endpoints/test_team_details.py b/tests/sentry/api/endpoints/test_team_details.py
index 4e59729ea4..cf7ee6b2b5 100644
--- a/tests/sentry/api/endpoints/test_team_details.py
+++ b/tests/sentry/api/endpoints/test_team_details.py
@@ -11,7 +11,10 @@ class TeamDetailsTest(APITestCase):
     def test_simple(self):
         team = self.team  # force creation
         self.login_as(user=self.user)
-        url = reverse('sentry-api-0-team-details', kwargs={'team_id': team.id})
+        url = reverse('sentry-api-0-team-details', kwargs={
+            'organization_slug': team.organization.slug,
+            'team_slug': team.slug,
+        })
         response = self.client.get(url)
         assert response.status_code == 200
         assert response.data['id'] == str(team.id)
@@ -21,7 +24,10 @@ class TeamUpdateTest(APITestCase):
     def test_simple(self):
         team = self.team  # force creation
         self.login_as(user=self.user)
-        url = reverse('sentry-api-0-team-details', kwargs={'team_id': team.id})
+        url = reverse('sentry-api-0-team-details', kwargs={
+            'organization_slug': team.organization.slug,
+            'team_slug': team.slug,
+        })
         resp = self.client.put(url, data={
             'name': 'hello world',
             'slug': 'foobar',
@@ -49,7 +55,10 @@ class TeamDeleteTest(APITestCase):
 
         self.login_as(user)
 
-        url = reverse('sentry-api-0-team-details', kwargs={'team_id': team.id})
+        url = reverse('sentry-api-0-team-details', kwargs={
+            'organization_slug': team.organization.slug,
+            'team_slug': team.slug,
+        })
 
         with self.settings(SENTRY_PROJECT=0):
             response = self.client.delete(url)
@@ -82,7 +91,10 @@ class TeamDeleteTest(APITestCase):
 
         self.login_as(user=user)
 
-        url = reverse('sentry-api-0-team-details', kwargs={'team_id': team.id})
+        url = reverse('sentry-api-0-team-details', kwargs={
+            'organization_slug': team.organization.slug,
+            'team_slug': team.slug,
+        })
         response = self.client.delete(url)
 
         assert response.status_code == 403
