commit 5f121059e09d0fe0e9e82946fca042a89f009ffb
Author: David Cramer <dcramer@gmail.com>
Date:   Sun Jun 3 12:17:29 2012 -0700

    Some pep8 cleanup and relaxing the test rules

diff --git a/Makefile b/Makefile
index 2697a9129a..e1312a375d 100644
--- a/Makefile
+++ b/Makefile
@@ -43,7 +43,7 @@ watch:
 	watchr -e "watch('bootstrap/.*\.less') { system 'make static' }"
 
 test:
-	pep8 --exclude=migrations --ignore=E501,E225 sentry || exit 1
+	pep8 --exclude=migrations --ignore=E501,E225,E121,E123,E124,E125,E127,E128 sentry || exit 1
 	pyflakes -x W sentry || exit 1
 	coverage run --include=sentry/* setup.py test && \
 	coverage html --omit=*/migrations/* -d cover
diff --git a/sentry/management/commands/upgrade.py b/sentry/management/commands/upgrade.py
index a79b0922b8..82cf783053 100644
--- a/sentry/management/commands/upgrade.py
+++ b/sentry/management/commands/upgrade.py
@@ -14,12 +14,13 @@ class Command(BaseCommand):
     help = 'Performs any pending database migrations and upgrades'
 
     option_list = BaseCommand.option_list + (
-            make_option('--noinput',
-                action='store_true',
-                dest='noinput',
-                default=False,
-                help='Tells Django to NOT prompt the user for input of any kind.'),
-            )
+        make_option('--noinput',
+            action='store_true',
+            dest='noinput',
+            default=False,
+            help='Tells Django to NOT prompt the user for input of any kind.',
+        ),
+    )
 
     def handle(self, **options):
         call_command('syncdb', migrate=True, interactive=(not options['noinput']))
diff --git a/sentry/manager.py b/sentry/manager.py
index ea66c25b98..b99f0c704f 100644
--- a/sentry/manager.py
+++ b/sentry/manager.py
@@ -337,11 +337,11 @@ class ChartMixin(object):
 
         method = get_sql_date_trunc('date', db)
 
-        chart_qs = list(instance.messagecountbyminute_set\
-                          .filter(date__gte=min_date)\
-                          .extra(select={'grouper': method}).values('grouper')\
-                          .annotate(num=Sum('times_seen')).values_list('grouper', 'num')\
-                          .order_by('grouper'))
+        chart_qs = list(instance.messagecountbyminute_set
+                        .filter(date__gte=min_date)
+                        .extra(select={'grouper': method}).values('grouper')
+                        .annotate(num=Sum('times_seen')).values_list('grouper', 'num')
+                        .order_by('grouper'))
 
         rows = dict(chart_qs)
 
@@ -764,7 +764,7 @@ class InstanceMetaManager(BaseManager):
             result = dict(
                 (i.key, i.value) for i in
                 self.filter(**{
-                  self.field_name: instance,
+                    self.field_name: instance,
                 })
             )
             self._metadata[instance.pk] = result
