commit d886ce35004da36ec5de24afa34a768da92863aa
Author: Armin Ronacher <armin.ronacher@active-4.com>
Date:   Wed Mar 6 23:49:12 2019 +0100

    feat(grouping): Added support for grouping components (#12260)
    
    This commit adds support for grouping components. The goal of it is that
    meta information can be provided about why groups are being created. It
    does not yet fully replace the normal hash generation but it expresses
    calculate_hashes by using the components internally.
    
    The longer term goal is to replace all of calculate_hashes on the interfaces
    and to move the current implementation of the grouping code into a
    default strategy so we can provide multiple implementations of it.
    
    We now have a few new terms to describe grouping:
    
    GroupingComponent: a grouping component is a single node in a tree of
    contributing nodes to a grouping hash. When the hash is produced for a
    grouping component it is flattened into a list and ultimately joined into an
    md5 hash. Each component has a bool that indicates if a component
    contributes to the hash (contributes) which is checked recursively. It
    has an id which gives a basic id that indicates which type of component
    it is. It also holds a list of values which are either primitives that are
    hashed or recursive references to other grouping components.
    
    a grouping variant: when an interface tries to produce a grouping
    component it will do so multiple times once for each variant.
    Currently there are three variants: system, app and default. Per policy
    each interface needs to implement default or system/app can be
    supplied optionally if only in-app values should be considered.
    system/app are special in that they try to emulate the current handling
    of not hashing app if system does not return results.
    
    Because of checksums and fingerprints grouping variants are reported
    out of the event in a slightly different form than the normal grouping
    code would suggest. If no fingerprint is set and no checksum (or
    the fingerprint is just {{ default }}) then the variants reported are most
    likely app and system as one suggests. However when checksum are
    involved the reported variants are instead checksum and
    hashed-checksum. Likewise if a fingerprint does not involve
    {{ default }} at all a single variant called custom-fingerprint is
    reported. Otherwise one can again expect app and system but
    additional values are salted in.

diff --git a/src/sentry/event_hashing.py b/src/sentry/event_hashing.py
index b0b6f66aab..0c460a179c 100644
--- a/src/sentry/event_hashing.py
+++ b/src/sentry/event_hashing.py
@@ -11,13 +11,305 @@ HASH_RE = re.compile(r'^[0-9a-f]{32}$')
 DEFAULT_FINGERPRINT_VALUES = frozenset(['{{ default }}', '{{default}}'])
 
 
-def md5_from_hash(hash_bits):
+DEFAULT_HINTS = {
+    'salt': 'a static salt',
+}
+
+
+def _calculate_contributes(values):
+    for value in values or ():
+        if not isinstance(value, GroupingComponent) or value.contributes:
+            return True
+    return False
+
+
+class GroupingComponent(object):
+    """A grouping component is a recursive structure that is flattened
+    into components to make a hash for grouping purposes.
+    """
+
+    def __init__(self, id, hint=None, contributes=None, values=None):
+        self.id = id
+        if hint is None:
+            hint = DEFAULT_HINTS.get(id)
+        self.hint = hint
+        if contributes is None:
+            contributes = _calculate_contributes(values)
+        self.contributes = contributes
+        if values is None:
+            values = []
+        self.values = values
+
+    def get_subcomponent(self, id):
+        """Looks up a subcomponent by the id and returns the first or `None`."""
+        return next(self.iter_subcomponents(id), None)
+
+    def iter_subcomponents(self, id, recursive=False):
+        """Finds all subcomponents matching an id, optionally recursively."""
+        for value in self.values:
+            if isinstance(value, GroupingComponent):
+                if value.id == id:
+                    yield value
+                if recursive:
+                    for subcomponent in value.iter_subcomponents(id, recursive=True):
+                        yield subcomponent
+
+    def update(self, hint=None, contributes=None, values=None):
+        """Updates an already existing component with new values."""
+        if hint is not None:
+            self.hint = hint
+        if values is not None:
+            if contributes is None:
+                contributes = _calculate_contributes(values)
+            self.values = values
+        if contributes is not None:
+            self.contributes = contributes
+
+    def flatten_values(self):
+        """Recursively walks the component and flattens it into a list of
+        values.
+        """
+        rv = []
+        if self.contributes:
+            for value in self.values:
+                if isinstance(value, GroupingComponent):
+                    rv.extend(value.flatten_values())
+                else:
+                    rv.append(value)
+        return rv
+
+    def get_hash(self):
+        """Returns the hash of the values if it contributes."""
+        if self.contributes:
+            return hash_from_values(self.flatten_values())
+
+    def as_dict(self):
+        """Converts the component tree into a dictionary."""
+        rv = {
+            'id': self.id,
+            'contributes': self.contributes,
+            'hint': self.hint,
+            'values': []
+        }
+        for value in self.values:
+            if isinstance(value, GroupingComponent):
+                rv['values'].append(value.as_dict())
+            else:
+                # this basically assumes that a value is only a primitive
+                # and never an object or list.  This should be okay
+                # because we verify this.
+                rv['values'].append(value)
+        return rv
+
+    def __repr__(self):
+        return 'GroupingComponent(%r, hint=%r, contributes=%r, values=%r)' % (
+            self.id,
+            self.hint,
+            self.contributes,
+            self.values,
+        )
+
+
+class BaseVariant(object):
+    type = None
+
+    def get_hash(self):
+        return None
+
+    def _get_metadata_as_dict(self):
+        return {}
+
+    def as_dict(self):
+        rv = {
+            'type': self.type,
+            'hash': self.get_hash(),
+        }
+        rv.update(self._get_metadata_as_dict())
+        return rv
+
+    def __repr__(self):
+        return '<%s %r (%s)>' % (
+            self.__class__.__name__,
+            self.get_hash(),
+            self.type,
+        )
+
+
+class ChecksumVariant(BaseVariant):
+    """A checksum variant returns a single hardcoded hash."""
+    type = 'checksum'
+
+    def __init__(self, hash):
+        self.hash = hash
+
+    def get_hash(self):
+        return self.hash
+
+
+class ComponentVariant(BaseVariant):
+    """A component variant is a variant that produces a hash from the
+    `GroupComponent` it encloses.
+    """
+    type = 'component'
+
+    def __init__(self, component):
+        self.component = component
+
+    def get_hash(self):
+        return self.component.get_hash()
+
+    def _get_metadata_as_dict(self):
+        return {
+            'component': self.component.as_dict(),
+        }
+
+
+class CustomFingerprintVariant(BaseVariant):
+    """A completely custom fingerprint."""
+    type = 'custom-fingerprint'
+
+    def __init__(self, values):
+        self.values = values
+
+    def get_hash(self):
+        return hash_from_values(self.values)
+
+    def _get_metadata_as_dict(self):
+        return {
+            'values': self.values,
+        }
+
+
+class SaltedComponentVariant(BaseVariant):
+    """A salted version of a component."""
+    type = 'salted-component'
+
+    def __init__(self, values, component):
+        self.values = values
+        self.component = component
+
+    def get_hash(self):
+        if not self.component.contributes:
+            return None
+        final_values = []
+        for value in self.values:
+            if value in DEFAULT_FINGERPRINT_VALUES:
+                final_values.extend(self.component.flatten_values())
+            else:
+                final_values.append(value)
+        return hash_from_values(final_values)
+
+    def _get_metadata_as_dict(self):
+        return {
+            'values': self.values,
+            'component': self.component,
+        }
+
+
+def hash_from_values(values):
     result = md5()
-    for bit in hash_bits:
-        result.update(force_bytes(bit, errors='replace'))
+    for value in values:
+        result.update(force_bytes(value, errors='replace'))
     return result.hexdigest()
 
 
+def get_calculated_grouping_variants_for_event(event):
+    """Given an event this returns a dictionary of the matching grouping
+    variants.  Checksum and fingerprinting logic are not handled by this
+    function which is handled by `get_grouping_variants_for_event`.
+    """
+    # This sorts the interfaces by the interface score which gives it the
+    # priority which we depend on.
+    interfaces = event.get_interfaces()
+
+    winning_strategy = None
+    precedence_hint = None
+    per_variant_components = {}
+
+    for (strategy_name, interface) in six.iteritems(interfaces):
+        rv = interface.get_grouping_component_variants(event.platform)
+        for (variant, component) in six.iteritems(rv):
+            per_variant_components.setdefault(variant, []).append(component)
+
+            if winning_strategy is None:
+                if component.contributes:
+                    winning_strategy = strategy_name
+                    precedence_hint = '%s takes precedence' % (
+                        '%s of %s' % (strategy_name, variant) if
+                        variant != 'default' else
+                        strategy_name
+                    )
+            elif component.contributes and winning_strategy != strategy_name:
+                component.update(
+                    contributes=False,
+                    hint=precedence_hint
+                )
+
+    rv = {}
+    for (variant, components) in six.iteritems(per_variant_components):
+        component = GroupingComponent(
+            id=variant,
+            values=components,
+        )
+        if not component.contributes and precedence_hint:
+            component.update(hint=precedence_hint)
+        rv[variant] = component
+
+    return rv
+
+
+def get_grouping_variants_for_event(event):
+    # If a checksum is set the only variant that comes back from this
+    # event is the checksum variant.
+    checksum = event.data.get('checksum')
+    if checksum:
+        if HASH_RE.match(checksum):
+            return {
+                'checksum': ChecksumVariant(checksum),
+            }
+        return {
+            'checksum': ChecksumVariant(checksum),
+            'hashed-checksum': ChecksumVariant(hash_from_values(checksum)),
+        }
+
+    # Otherwise we go to the various forms of fingerprint handling.
+    fingerprint = event.data.get('fingerprint') or ['{{ default }}']
+    defaults_referenced = sum(1 if d in DEFAULT_FINGERPRINT_VALUES else 0 for d in fingerprint)
+
+    # If no defaults are referenced we produce a single completely custom
+    # fingerprint.
+    if defaults_referenced == 0:
+        return {
+            'custom-fingerprint': CustomFingerprintVariant(fingerprint),
+        }
+
+    # At this point we need to calculate the default event values.  If the
+    # fingerprint is salted we will wrap it.
+    components = get_calculated_grouping_variants_for_event(event)
+    rv = {}
+
+    # If the fingerprints are unsalted, we can return them right away.
+    if defaults_referenced == 1 and len(fingerprint) == 1:
+        for (key, component) in six.iteritems(components):
+            rv[key] = ComponentVariant(component)
+
+    # Otherwise we need to salt each of the components.
+    else:
+        for (key, component) in six.iteritems(components):
+            rv[key] = SaltedComponentVariant(fingerprint, component)
+
+    return rv
+
+
+# legacy functionality follows:
+#
+# This is at present still the main grouping code in the event processing
+# but it should be possible to replace all of these with
+# `get_grouping_variants_for_event` once we feel more confident that no
+# regression ocurred.  This is tested by
+# `test_variants.test_event_hash_variant` at the moment.
+
+
 def get_hashes_for_event(event):
     interfaces = event.get_interfaces()
     for interface in six.itervalues(interfaces):
@@ -53,8 +345,8 @@ def calculate_event_hashes(event):
     if checksum:
         if HASH_RE.match(checksum):
             return [checksum]
-        return [md5_from_hash([checksum]), checksum]
+        return [hash_from_values([checksum]), checksum]
 
     # Otherwise go with the new style fingerprint code
     fingerprint = event.data.get('fingerprint') or ['{{ default }}']
-    return [md5_from_hash(h) for h in get_hashes_from_fingerprint(event, fingerprint)]
+    return [hash_from_values(h) for h in get_hashes_from_fingerprint(event, fingerprint)]
diff --git a/src/sentry/interfaces/base.py b/src/sentry/interfaces/base.py
index 0802588800..a6b7976582 100644
--- a/src/sentry/interfaces/base.py
+++ b/src/sentry/interfaces/base.py
@@ -88,6 +88,7 @@ class Interface(object):
     score = 0
     display_score = None
     ephemeral = False
+    grouping_variants = ['default']
 
     def __init__(self, **data):
         self._data = data or {}
@@ -198,24 +199,89 @@ class Interface(object):
     def to_json(self):
         return prune_empty_keys(self._data)
 
-    def get_hash(self, platform=None, variant='system'):
-        return []
-
-    def get_hashes(self, platform=None):
-        system_hash = self.get_hash(platform, variant='system')
-        if not system_hash:
-            return {}
-
-        hashes = {'system': system_hash}
-
-        app_hash = self.get_hash(platform, variant='app')
-        if system_hash != app_hash and app_hash:
-            hashes['app'] = app_hash
+    def get_grouping_component(self, platform=None, variant=None):
+        """Based on the variant passed this must return either `None` if the
+        variant is not supported or a `sentry.event_hashing.GroupingComponent`.
+        """
+        return None
 
-        return hashes
+    def get_grouping_component_variants(self, platform=None):
+        """This returns a dictionary of all variants this interface has
+        grouping components for.  Note that this can also produce components
+        that are not contributing.
+
+        This will use all the variants mentioned in `grouping_variants` on the
+        class.  This might recursively invoke nested interface in which case
+        extra care needs to be taken that variants are passed appropriately.
+        Special handling is applied to the `system` variant.  If the system
+        variant is defined it will be probed first.  If there is no match on
+        `system` then all other variants are skipped as well.
+        """
+        rv = {}
+
+        # In case the system variant (which is special) is not being
+        # produced by this interface we can make a simplified logic here
+        # where all variants contribute equially and without special
+        # handling
+        if 'system' not in self.grouping_variants:
+            for variant in self.grouping_variants:
+                component = self.get_grouping_component(platform, variant)
+                if component is not None:
+                    rv[variant] = component
+            return rv
+
+        # The system handling is special because we first need to match
+        # the system variant, and in case this contributes we want to
+        # let all other variants also contribute (for as long as the hash
+        # is different).  In case however the system component does not
+        # exist or does not contribute, we want to also have all other
+        # variants not contribute either.
+        system_component = self.get_grouping_component(platform, variant='system')
+
+        prevent_contribution = True
+        if system_component is not None:
+            rv['system'] = system_component
+            prevent_contribution = not system_component.contributes
+
+        for variant in self.grouping_variants:
+            if variant == 'system':
+                continue
+
+            # We also only want to create another variant if it
+            # produces different results than the system component
+            component = self.get_grouping_component(platform, variant=variant)
+            if component is None:
+                continue
+
+            # In case this variant contributes we need to check two things
+            # here: if we did not have a system match we need to prevent
+            # it from contributing.  Additionally if it matches the system
+            # component we also do not want the variant to contribute but
+            # with a different message.
+            if component.contributes:
+                if prevent_contribution:
+                    component.update(
+                        contributes=False,
+                        hint='ignored because system variant is not used'
+                    )
+                elif system_component.get_hash() == component.get_hash():
+                    component.update(
+                        contributes=False,
+                        hint='ignored because hash matches system variant'
+                    )
+            rv[variant] = component
+
+        return rv
 
     def compute_hashes(self, platform=None):
-        return self.get_hashes(platform).values()
+        # legacy function, really only used for tests these days
+        # XXX: remove/rename, this does not return hashes but returns
+        # components that contribute into a hash
+        variant_components = self.get_grouping_component_variants(platform)
+        return [
+            x.flatten_values() for x in six.itervalues(variant_components)
+            if x.contributes
+        ]
 
     def get_title(self):
         return _(type(self).__name__)
diff --git a/src/sentry/interfaces/exception.py b/src/sentry/interfaces/exception.py
index 93096d0cdd..b8a0016e40 100644
--- a/src/sentry/interfaces/exception.py
+++ b/src/sentry/interfaces/exception.py
@@ -20,6 +20,7 @@ from sentry.interfaces.schemas import validate_and_default_interface
 from sentry.interfaces.stacktrace import Stacktrace, slim_frame_data
 from sentry.utils import json
 from sentry.utils.safe import get_path, trim
+from sentry.event_hashing import GroupingComponent
 
 _type_value_re = re.compile('^(\w+):(.*)$')
 
@@ -795,6 +796,46 @@ class Mechanism(Interface):
             yield ('handled', self.handled and 'yes' or 'no')
 
 
+def uncontribute_non_stacktrace_variants(variants):
+    """If we have multiple variants and at least one has a stacktrace, we
+    want to mark all non stacktrace variants non contributing.  The reason
+    for this is that otherwise we end up in very generic grouping which has
+    some negative consequences for the quality of the groups.
+    """
+    if len(variants) <= 1:
+        return variants
+    any_stacktrace_contributes = False
+    non_contributing_components = []
+    stacktrace_variants = set()
+
+    # In case any of the variants has a contributing stacktrace, we want
+    # to make all other variants non contributing.  Thr e
+    for (key, component) in six.iteritems(variants):
+        if any(s.contributes for s in component.iter_subcomponents(
+                id='stacktrace', recursive=True)):
+            any_stacktrace_contributes = True
+            stacktrace_variants.add(key)
+        else:
+            non_contributing_components.append(component)
+
+    if any_stacktrace_contributes:
+        if len(stacktrace_variants) == 1:
+            hint_suffix = 'but the %s variant does' % next(iter(stacktrace_variants))
+        else:
+            # this branch is basically dead because we only have two
+            # variants right now, but this is so this does not break in
+            # the future.
+            hint_suffix = 'others do'
+        for component in non_contributing_components:
+            component.update(
+                contributes=False,
+                hint='ignored because this variant does not contain a '
+                'stacktrace, but %s' % hint_suffix
+            )
+
+    return variants
+
+
 class SingleException(Interface):
     """
     A standard exception with a ``type`` and value argument, and an optional
@@ -816,6 +857,7 @@ class SingleException(Interface):
     """
     score = 2000
     path = 'exception'
+    grouping_variants = ['system', 'app']
 
     @classmethod
     def to_python(cls, data, slim_frames=True):
@@ -939,17 +981,48 @@ class SingleException(Interface):
             'stacktrace': stacktrace_meta,
         }
 
-    def get_hash(self, platform=None, variant='system'):
-        if variant not in ('app', 'system'):
-            return []
-        output = None
-        if self.stacktrace:
-            output = self.stacktrace.get_hash(platform=platform, variant=variant)
-            if output and self.type:
-                output.append(self.type)
-        if not output:
-            output = [s for s in [self.type, self.value] if s]
-        return output
+    def get_grouping_component(self, platform=None, variant=None):
+        type_component = GroupingComponent(
+            id='type',
+            values=[self.type] if self.type else [],
+            contributes=False
+        )
+        value_component = GroupingComponent(
+            id='value',
+            values=[self.value] if self.value else [],
+            contributes=False
+        )
+        stacktrace_component = GroupingComponent(id='stacktrace')
+
+        if self.stacktrace is not None:
+            stacktrace_component = self.stacktrace.get_grouping_component(
+                platform, variant)
+            if stacktrace_component.contributes:
+                if self.type:
+                    type_component.update(contributes=True)
+                    if self.value:
+                        value_component.update(hint='stacktrace and type take precedence')
+                elif self.value:
+                    value_component.update(hint='stacktrace takes precedence')
+
+        if not stacktrace_component.contributes:
+            if self.type:
+                type_component.update(contributes=True)
+            if self.value:
+                value_component.update(contributes=True)
+
+        return GroupingComponent(
+            id='exception',
+            values=[
+                stacktrace_component,
+                type_component,
+                value_component,
+            ]
+        )
+
+    def get_grouping_component_variants(self, platform=None):
+        return uncontribute_non_stacktrace_variants(
+            Interface.get_grouping_component_variants(self, platform))
 
 
 class Exception(Interface):
@@ -986,6 +1059,7 @@ class Exception(Interface):
     """
 
     score = 2000
+    grouping_variants = ['system', 'app']
 
     def _values(self):
         return get_path(self.values, filter=True)
@@ -1036,30 +1110,43 @@ class Exception(Interface):
             'exc_omitted': self.exc_omitted,
         })
 
-    def get_hash(self, platform=None, variant='system'):
-        if variant not in ('app', 'system'):
-            return []
-        # optimize around the fact that some exceptions might have stacktraces
-        # while others may not and we ALWAYS want stacktraces over values
-        output = []
-        for value in self._values():
-            if not value or not value.stacktrace:
-                continue
-            stack_hash = value.stacktrace.get_hash(
-                platform=platform,
-                variant=variant,
-            )
-            if stack_hash:
-                output.extend(stack_hash)
-                output.append(value.type)
-
-        if not output:
-            for value in self._values():
-                if value:
-                    output.extend(value.get_hash(platform=platform,
-                                                 variant=variant))
-
-        return output
+    def get_grouping_component(self, platform=None, variant=None):
+        # Case 1: we have a single exception, use the single exception
+        # component directly
+        exceptions = self._values()
+        if len(exceptions) == 1:
+            return exceptions[0].get_grouping_component(platform, variant)
+
+        # Case 2: try to build a new component out of the individual
+        # errors however with a trick.  In case any exeption has a
+        # stacktrace we want to ignore all other exceptions.
+        any_stacktraces = False
+        values = []
+        for exception in exceptions:
+            exception_component = exception.get_grouping_component(platform, variant)
+            stacktrace_component = exception_component.get_subcomponent('stacktrace')
+            if stacktrace_component is not None and \
+               stacktrace_component.contributes:
+                any_stacktraces = True
+            values.append(exception_component)
+
+        if any_stacktraces:
+            for value in values:
+                stacktrace_component = value.get_subcomponent('stacktrace')
+                if stacktrace_component is None or not stacktrace_component.contributes:
+                    value.update(
+                        contributes=False,
+                        hint='exception has no stacktrace',
+                    )
+
+        return GroupingComponent(
+            id='chained-exception',
+            values=values,
+        )
+
+    def get_grouping_component_variants(self, platform=None):
+        return uncontribute_non_stacktrace_variants(
+            Interface.get_grouping_component_variants(self, platform))
 
     def get_api_context(self, is_public=False):
         return {
diff --git a/src/sentry/interfaces/message.py b/src/sentry/interfaces/message.py
index 9ffbf69759..80de5deb4c 100644
--- a/src/sentry/interfaces/message.py
+++ b/src/sentry/interfaces/message.py
@@ -15,6 +15,7 @@ import six
 from django.conf import settings
 
 from sentry.interfaces.base import Interface, InterfaceValidationError, prune_empty_keys
+from sentry.event_hashing import GroupingComponent
 from sentry.utils import json
 from sentry.utils.safe import trim
 
@@ -89,10 +90,11 @@ class Message(Interface):
             'params': self.params or None
         })
 
-    def get_hash(self, platform=None, variant='system'):
-        if variant not in ('app', 'system'):
-            return []
-        return [self.message or self.formatted]
+    def get_grouping_component(self, platform=None, variant=None):
+        return GroupingComponent(
+            id='message',
+            values=[self.message or self.formatted],
+        )
 
     def to_string(self, event, is_public=False, **kwargs):
         return self.formatted or self.message
diff --git a/src/sentry/interfaces/security.py b/src/sentry/interfaces/security.py
index 80043c661e..596ecab425 100644
--- a/src/sentry/interfaces/security.py
+++ b/src/sentry/interfaces/security.py
@@ -22,6 +22,7 @@ from sentry.utils.cache import memoize
 from sentry.utils.http import is_valid_origin
 from sentry.utils.safe import trim
 from sentry.web.helpers import render_to_string
+from sentry.event_hashing import GroupingComponent
 
 # Default block list sourced from personal experience as well as
 # reputable blogs from Twitter and Dropbox
@@ -171,10 +172,14 @@ class Hpkp(SecurityReport):
     def get_culprit(self):
         return None
 
-    def get_hash(self, platform=None, variant='system'):
-        if variant != 'system':
-            return []
-        return ['hpkp', self.hostname]
+    def get_grouping_component(self, platform=None, variant=None):
+        return GroupingComponent(
+            id='hpkp',
+            values=[
+                GroupingComponent(id='salt', values=['hpkp']),
+                GroupingComponent(id='hostname', values=[self.hostname]),
+            ]
+        )
 
     def get_message(self):
         return u"Public key pinning validation failed for '{self.hostname}'".format(self=self)
@@ -237,10 +242,14 @@ class ExpectStaple(SecurityReport):
     def get_culprit(self):
         return self.hostname
 
-    def get_hash(self, platform=None, variant='system'):
-        if variant != 'system':
-            return []
-        return ['expect-staple', self.hostname]
+    def get_grouping_component(self, platform=None, variant=None):
+        return GroupingComponent(
+            id='expect-staple',
+            values=[
+                GroupingComponent(id='salt', values=['expect-staple']),
+                GroupingComponent(id='hostname', values=[self.hostname]),
+            ]
+        )
 
     def get_message(self):
         return u"Expect-Staple failed for '{self.hostname}'".format(self=self)
@@ -301,10 +310,14 @@ class ExpectCT(SecurityReport):
     def get_culprit(self):
         return self.hostname
 
-    def get_hash(self, platform=None, variant='system'):
-        if variant != 'system':
-            return []
-        return ['expect-ct', self.hostname]
+    def get_grouping_component(self, platform=None, variant=None):
+        return GroupingComponent(
+            id='expect-ct',
+            values=[
+                GroupingComponent(id='salt', values=['expect-ct']),
+                GroupingComponent(id='hostname', values=[self.hostname]),
+            ]
+        )
 
     def get_message(self):
         return u"Expect-CT failed for '{self.hostname}'".format(self=self)
@@ -359,15 +372,36 @@ class Csp(SecurityReport):
 
         return cls.to_python(kwargs)
 
-    def get_hash(self, platform=None, variant='system'):
-        if variant != 'system':
-            return []
+    def get_grouping_component(self, platform=None, variant=None):
+        violation_component = GroupingComponent(id='violation')
+        uri_component = GroupingComponent(id='uri')
+
         if self._local_script_violation_type:
-            uri = "'%s'" % self._local_script_violation_type
+            violation_component.update(
+                values=["'%s'" % self._local_script_violation_type],
+            )
+            uri_component.update(
+                contributes=False,
+                hint='violation takes precedence',
+                values=[self._normalized_blocked_uri],
+            )
         else:
-            uri = self._normalized_blocked_uri
-
-        return [self.effective_directive, uri]
+            violation_component.update(
+                contributes=False,
+                hint='not a local script violation',
+            )
+            uri_component.update(
+                values=[self._normalized_blocked_uri]
+            )
+
+        return GroupingComponent(
+            id='csp',
+            values=[
+                GroupingComponent(id='salt', values=[self.effective_directive]),
+                violation_component,
+                uri_component,
+            ],
+        )
 
     def get_message(self):
         templates = {
diff --git a/src/sentry/interfaces/stacktrace.py b/src/sentry/interfaces/stacktrace.py
index 6c1db1513f..a167468bd2 100644
--- a/src/sentry/interfaces/stacktrace.py
+++ b/src/sentry/interfaces/stacktrace.py
@@ -25,6 +25,7 @@ from sentry.interfaces.schemas import validate_and_default_interface
 from sentry.models import UserOption
 from sentry.utils.safe import trim, trim_dict
 from sentry.web.helpers import render_to_string
+from sentry.event_hashing import GroupingComponent
 
 _ruby_anon_func = re.compile(r'_\d{2,}')
 _filename_version_re = re.compile(
@@ -199,8 +200,11 @@ def remove_function_outliers(function):
     - Block functions have metadata that we don't care about.
     """
     if function.startswith('block '):
-        return 'block'
-    return _ruby_anon_func.sub('_<anon>', function)
+        return 'block', 'ruby block'
+    new_function = _ruby_anon_func.sub('_<anon>', function)
+    if new_function != function:
+        return new_function, 'trimmed integer suffix'
+    return new_function, None
 
 
 def remove_filename_outliers(filename, platform=None):
@@ -216,22 +220,38 @@ def remove_filename_outliers(filename, platform=None):
     # the dwarf files does not contain prefix information) and that might
     # contain things like /Users/foo/Dropbox/...
     if platform == 'cocoa':
-        return posixpath.basename(filename)
-    elif platform == 'java':
-        filename = _java_assist_enhancer_re.sub(r'\1<auto>', filename)
-    return _filename_version_re.sub('<version>/', filename)
+        return posixpath.basename(filename), 'stripped to basename'
+
+    removed = []
+    if platform == 'java':
+        new_filename = _java_assist_enhancer_re.sub(r'\1<auto>', filename)
+        if new_filename != filename:
+            removed.append('javassist parts')
+            filename = new_filename
+
+    new_filename = _filename_version_re.sub('<version>/', filename)
+    if new_filename != filename:
+        removed.append('version')
+        filename = new_filename
+
+    if removed:
+        return filename, 'removed %s' % ' and '.join(removed)
+    return filename, None
 
 
 def remove_module_outliers(module, platform=None):
     """Remove things that augment the module but really should not."""
     if platform == 'java':
         if module[:35] == 'sun.reflect.GeneratedMethodAccessor':
-            return 'sun.reflect.GeneratedMethodAccessor'
+            return 'sun.reflect.GeneratedMethodAccessor', 'removed reflection marker'
+        old_module = module
         module = _java_reflect_enhancer_re.sub(r'\1<auto>', module)
         module = _java_cglib_enhancer_re.sub(r'\1<auto>', module)
         module = _java_assist_enhancer_re.sub(r'\1<auto>', module)
         module = _clojure_enhancer_re.sub(r'\1<auto>', module)
-    return module
+        if old_module != module:
+            return module, 'removed codegen marker'
+    return module, None
 
 
 def slim_frame_data(frames, frame_allowance=settings.SENTRY_MAX_STACKTRACE_FRAMES):
@@ -314,6 +334,7 @@ def is_recursion(frame1, frame2):
 
 
 class Frame(Interface):
+    grouping_variants = ['system', 'app']
 
     @classmethod
     def to_python(cls, data, raw=False):
@@ -452,74 +473,146 @@ class Frame(Interface):
             'colno': self.colno
         })
 
-    def get_hash(self, platform=None, variant='system'):
-        """
-        The hash of the frame varies depending on the data available.
-
-        Our ideal scenario is the module name in addition to the line of
-        context. However, in several scenarios we opt for other approaches due
-        to platform constraints.
+    def get_grouping_component(self, platform=None, variant=None):
+        platform = self.platform or platform
 
-        This is one of the few areas in Sentry that isn't platform-agnostic.
-        """
-        if variant not in ('app', 'system'):
-            return []
+        # In certain situations we want to disregard the entire frame.
+        contributes = None
+        hint = None
 
-        platform = self.platform or platform
-        output = []
         # Safari throws [native code] frames in for calls like ``forEach``
         # whereas Chrome ignores these. Let's remove it from the hashing algo
         # so that they're more likely to group together
+        filename_component = GroupingComponent(id='filename')
         if self.filename == '<anonymous>':
-            hashable_filename = None
+            filename_component.update(hint='anonymous filename discarded')
+        elif self.filename == '[native code]':
+            contributes = False
+            hint = 'native code indicated by filename'
         elif self.filename:
-            hashable_filename = remove_filename_outliers(self.filename, platform)
-        else:
-            hashable_filename = None
-
-        if self.filename == '[native code]':
-            return output
+            if self.is_url():
+                filename_component.update(hint='ignored because filename is a URL')
+            elif self.is_caused_by():
+                filename_component.update(hint='ignored because invalid')
+            else:
+                hashable_filename, hashable_filename_hint = \
+                    remove_filename_outliers(self.filename, platform)
+                filename_component.update(
+                    values=[hashable_filename],
+                    hint=hashable_filename_hint
+                )
 
+        # if we have a module we use that for grouping.  This will always
+        # take precedence over the filename, even if the module is
+        # considered unhashable.
+        module_component = GroupingComponent(id='module')
         if self.module:
             if self.is_unhashable_module(platform):
-                output.append('<module>')
+                module_component.update(
+                    values=[GroupingComponent(id='salt', values=['<module>'])],
+                    hint='ignored module',
+                )
             else:
-                output.append(remove_module_outliers(self.module, platform))
-        elif hashable_filename and not self.is_url() and not self.is_caused_by():
-            output.append(hashable_filename)
-
-        if self.context_line is None:
-            can_use_context = False
-        elif len(self.context_line) > 120:
-            can_use_context = False
-        elif self.is_url() and not self.function:
-            # the context is too risky to use here as it could be something
-            # coming from an HTML page or it could be minified/unparseable
-            # code, so lets defer to other lesser heuristics (like lineno)
-            can_use_context = False
-        elif self.function and self.is_unhashable_function():
-            can_use_context = True
-        else:
-            can_use_context = True
-
-        # XXX: hack around what appear to be non-useful lines of context
-        if can_use_context:
-            output.append(self.context_line)
-        elif not output:
-            # If we were unable to achieve any context at this point
-            # (likely due to a bad JavaScript error) we should just
-            # bail on recording this frame
-            return output
-        elif self.symbol:
-            output.append(self.symbol)
-        elif self.function:
-            if self.is_unhashable_function():
-                output.append('<function>')
+                module_name, module_hint = \
+                    remove_module_outliers(self.module, platform)
+                module_component.update(
+                    values=[module_name],
+                    hint=module_hint
+                )
+            filename_component.update(
+                contributes=False,
+                hint='module takes precedence'
+            )
+
+        # Context line when available is the primary contributor
+        context_line_component = GroupingComponent(id='context-line')
+        if self.context_line is not None:
+            if len(self.context_line) > 120:
+                context_line_component.update(hint='discarded because line too long')
+            elif self.is_url() and not self.function:
+                context_line_component.update(hint='discarded because from URL origin')
             else:
-                output.append(remove_function_outliers(self.function))
-        elif self.lineno is not None:
-            output.append(self.lineno)
-        return output
+                context_line_component.update(values=[self.context_line])
+
+        symbol_component = GroupingComponent(id='symbol')
+        function_component = GroupingComponent(id='function')
+        lineno_component = GroupingComponent(id='lineno')
+
+        # The context line grouping information is the most reliable one.
+        # If we did not manage to find some information there, we want to
+        # see if we can come up with some extra information.  We only want
+        # to do that if we managed to get a module of filename.
+        if not context_line_component.contributes and \
+           (module_component.contributes or filename_component.contributes):
+            if self.symbol:
+                symbol_component.update(values=[self.symbol])
+                if self.function:
+                    function_component.update(
+                        contributes=False,
+                        values=[self.function],
+                        hint='symbol takes precedence'
+                    )
+                if self.lineno:
+                    lineno_component.update(
+                        contributes=False,
+                        values=[self.lineno],
+                        hint='symbol takes precedence'
+                    )
+            elif self.function:
+                if self.is_unhashable_function():
+                    function_component.update(values=[
+                        GroupingComponent(
+                            id='salt',
+                            values=['<function>']
+                        )
+                    ])
+                else:
+                    function, function_hint = remove_function_outliers(self.function)
+                    function_component.update(
+                        values=[function],
+                        hint=function_hint
+                    )
+                if self.lineno:
+                    lineno_component.update(
+                        contributes=False,
+                        values=[self.lineno],
+                        hint='function takes precedence'
+                    )
+            elif self.lineno:
+                lineno_component.update(values=[self.lineno])
+        else:
+            if self.symbol:
+                symbol_component.update(
+                    contributes=False,
+                    values=[self.symbol],
+                    hint='symbol is used only if module or filename are available'
+                )
+            if self.function:
+                function_component.update(
+                    contributes=False,
+                    values=[self.function],
+                    hint='function name is used only if module or filename are available'
+                )
+            if self.lineno:
+                function_component.update(
+                    contributes=False,
+                    values=[self.lineno],
+                    hint='line number is used only if module or filename are available'
+                )
+
+        return GroupingComponent(
+            id='frame',
+            values=[
+                module_component,
+                filename_component,
+                context_line_component,
+                symbol_component,
+                function_component,
+                lineno_component,
+            ],
+            contributes=contributes,
+            hint=hint,
+        )
 
     def get_api_context(self, is_public=False, pad_addr=None):
         data = {
@@ -744,6 +837,7 @@ class Stacktrace(Interface):
               to the full interface path.
     """
     score = 1950
+    grouping_variants = ['system', 'app']
 
     def __iter__(self):
         return iter(self.frames)
@@ -837,11 +931,11 @@ class Stacktrace(Interface):
             'registers': self.registers,
         })
 
-    def get_hash(self, platform=None, variant='system'):
-        if variant not in ('app', 'system'):
-            return []
-
+    def get_grouping_component(self, platform=None, variant=None):
         frames = self.frames
+        contributes = None
+        hint = None
+        all_frames_considered_in_app = False
 
         # TODO(dcramer): this should apply only to platform=javascript
         # Browser JS will often throw errors (from inlined code in an HTML page)
@@ -849,36 +943,49 @@ class Stacktrace(Interface):
         # document as the filename. In this case the hash is often not usable as
         # the context cannot be trusted and the URL is dynamic (this also means
         # the line number cannot be trusted).
-        stack_invalid = (len(frames) == 1 and not frames[0].function and frames[0].is_url())
-
-        if stack_invalid:
-            return []
-
-        system_frames = variant == 'system'
-        if not system_frames:
+        if (len(frames) == 1 and not frames[0].function and frames[0].is_url()):
+            contributes = False
+            hint = 'ignored single frame stack'
+        elif variant == 'app':
             total_frames = len(frames)
-            frames = [f for f in frames if f.in_app] or frames
+            in_app_count = sum(1 if f.in_app else 0 for f in frames)
+            if in_app_count == 0:
+                in_app_count = total_frames
+                all_frames_considered_in_app = True
 
             # if app frames make up less than 10% of the stacktrace discard
             # the hash as invalid
-            if len(frames) / float(total_frames) < 0.10:
-                return []
-
-        if not frames:
-            return []
-
-        output = []
-
-        # stacktraces that only differ by the number of recursive calls should
-        # hash the same, so we squash recursive calls by comparing each frame
-        # to the previous frame
-        output.extend(frames[0].get_hash(platform, variant=variant))
-        prev_frame = frames[0]
-        for frame in frames[1:]:
-            if not is_recursion(frame, prev_frame):
-                output.extend(frame.get_hash(platform, variant=variant))
+            if total_frames > 0 and in_app_count / float(total_frames) < 0.10:
+                contributes = False
+                hint = 'less than 10% of frames are in-app'
+
+        values = []
+        prev_frame = None
+        for frame in frames:
+            frame_component = frame.get_grouping_component(platform, variant)
+            if variant == 'app' and not frame.in_app and not all_frames_considered_in_app:
+                frame_component.update(
+                    contributes=False,
+                    hint='non app frame',
+                )
+            elif prev_frame is not None and is_recursion(frame, prev_frame):
+                frame_component.update(
+                    contributes=False,
+                    hint='ignored due to recursion',
+                )
+            elif variant == 'app' and not frame.in_app and all_frames_considered_in_app:
+                frame_component.update(
+                    hint='frame considered in-app because no frame is in-app'
+                )
+            values.append(frame_component)
             prev_frame = frame
-        return output
+
+        return GroupingComponent(
+            id='stacktrace',
+            values=values,
+            contributes=contributes,
+            hint=hint,
+        )
 
     def to_string(self, event, is_public=False, **kwargs):
         return self.get_stacktrace(event, system_frames=False, max_frames=10)
diff --git a/src/sentry/interfaces/template.py b/src/sentry/interfaces/template.py
index 5c8e21a949..34f18942e0 100644
--- a/src/sentry/interfaces/template.py
+++ b/src/sentry/interfaces/template.py
@@ -13,6 +13,7 @@ from sentry.interfaces.base import Interface, InterfaceValidationError
 from sentry.interfaces.schemas import validate_and_default_interface
 from sentry.interfaces.stacktrace import get_context
 from sentry.utils.safe import trim
+from sentry.event_hashing import GroupingComponent
 
 
 class Template(Interface):
@@ -58,10 +59,22 @@ class Template(Interface):
         }
         return cls(**kwargs)
 
-    def get_hash(self, platform=None, variant='system'):
-        if variant not in ('app', 'system'):
-            return []
-        return [self.filename, self.context_line]
+    def get_grouping_component(self, platform=None, variant=None):
+        filename_component = GroupingComponent(id='filename')
+        if self.filename is not None:
+            filename_component.update(values=[self.filename])
+
+        context_line_component = GroupingComponent(id='context-line')
+        if self.context_line is not None:
+            context_line_component.update(values=[self.context_line])
+
+        return GroupingComponent(
+            id='template',
+            values=[
+                filename_component,
+                context_line_component,
+            ]
+        )
 
     def to_string(self, event, is_public=False, **kwargs):
         context = get_context(
diff --git a/src/sentry/interfaces/threads.py b/src/sentry/interfaces/threads.py
index 8500113cf0..6f2145aa6e 100644
--- a/src/sentry/interfaces/threads.py
+++ b/src/sentry/interfaces/threads.py
@@ -3,6 +3,7 @@ from __future__ import absolute_import
 from sentry.interfaces.base import Interface, prune_empty_keys
 from sentry.interfaces.stacktrace import Stacktrace
 from sentry.utils.safe import trim
+from sentry.event_hashing import GroupingComponent
 
 __all__ = ('Threads', )
 
@@ -17,6 +18,7 @@ def get_stacktrace(value, raw=False):
 
 class Threads(Interface):
     score = 1900
+    grouping_variants = ['system', 'app']
 
     @classmethod
     def to_python(cls, data):
@@ -86,12 +88,25 @@ class Threads(Interface):
         else:
             return meta
 
-    def get_hash(self, platform=None, variant='system'):
-        if variant not in ('app', 'system'):
-            return []
+    def get_grouping_component(self, platform=None, variant=None):
         if len(self.values) != 1:
-            return []
+            return GroupingComponent(
+                id='threads',
+                contributes=False,
+                hint='ignored because contains %d threads' % len(self.values),
+            )
+
         stacktrace = self.values[0].get('stacktrace')
         if not stacktrace:
-            return []
-        return stacktrace.get_hash(platform, variant=variant)
+            return GroupingComponent(
+                id='threads',
+                contributes=False,
+                hint='thread has no stacktrace',
+            )
+
+        return GroupingComponent(
+            id='threads',
+            values=[
+                stacktrace.get_grouping_component(platform, variant),
+            ]
+        )
diff --git a/src/sentry/models/event.py b/src/sentry/models/event.py
index a86421597b..9492ebb808 100644
--- a/src/sentry/models/event.py
+++ b/src/sentry/models/event.py
@@ -146,7 +146,9 @@ class Event(Model):
 
     def get_hashes(self):
         """
-        Returns the calculated hashes for the event.
+        Returns the calculated hashes for the event.  This uses the stored
+        information if available.  Grouping hashes will take into account
+        fingerprinting and checksums.
         """
         from sentry.event_hashing import calculate_event_hashes
         # If we have hashes stored in the data we use them, otherwise we
@@ -156,6 +158,14 @@ class Event(Model):
             return hashes
         return calculate_event_hashes(self)
 
+    def get_grouping_variants(self):
+        """
+        This is similar to `get_hashes` but will instead return the
+        grouping components for each variant in a dictionary.
+        """
+        from sentry.event_hashing import get_grouping_variants_for_event
+        return get_grouping_variants_for_event(self)
+
     def get_primary_hash(self):
         # TODO: This *might* need to be protected from an IndexError?
         return self.get_hashes()[0]
diff --git a/tests/sentry/event_hashing/__init__.py b/tests/sentry/event_hashing/__init__.py
new file mode 100644
index 0000000000..2825e7a3bb
--- /dev/null
+++ b/tests/sentry/event_hashing/__init__.py
@@ -0,0 +1,3 @@
+# -*- coding: utf-8 -*-
+
+from __future__ import absolute_import
diff --git a/tests/sentry/event_hashing/fixtures/actix.json b/tests/sentry/event_hashing/fixtures/actix.json
new file mode 100644
index 0000000000..26955be773
--- /dev/null
+++ b/tests/sentry/event_hashing/fixtures/actix.json
@@ -0,0 +1,660 @@
+{
+  "culprit": "log::__private_api_log",
+  "event_id": "81a7a3dc399345e8a7fbefce9958d76b",
+  "environment": "debug",
+  "platform": "native",
+  "logger": "actix_web::pipeline",
+  "exception": {
+    "values": [
+      {
+        "stacktrace": {
+          "frames": [
+            {
+              "function": "__pthread_start",
+              "instruction_addr": "0x7fff5ea032a6",
+              "in_app": true
+            },
+            {
+              "function": "__pthread_body",
+              "instruction_addr": "0x7fff5ea0033c",
+              "in_app": true
+            },
+            {
+              "function": "std::sys::unix::thread::Thread::new::thread_start",
+              "abs_path": "/rustc/9fda7c2237db910e41d6a712e9a2139b352e558b/src/libstd/sys_common/thread.rs",
+              "package": "std",
+              "filename": "thread.rs",
+              "lineno": 24,
+              "in_app": false,
+              "instruction_addr": "0x10e37362b"
+            },
+            {
+              "function": "<F as alloc::boxed::FnBox<A>>::call_box",
+              "abs_path": "/rustc/9fda7c2237db910e41d6a712e9a2139b352e558b/src/liballoc/boxed.rs",
+              "filename": "boxed.rs",
+              "lineno": 673,
+              "in_app": true,
+              "instruction_addr": "0x10de00d23"
+            },
+            {
+              "function": "std::thread::Builder::spawn_unchecked::{{closure}}",
+              "abs_path": "/rustc/9fda7c2237db910e41d6a712e9a2139b352e558b/src/libstd/thread/mod.rs",
+              "package": "std",
+              "filename": "mod.rs",
+              "lineno": 476,
+              "in_app": false,
+              "instruction_addr": "0x10de00a2b"
+            },
+            {
+              "function": "std::panic::catch_unwind",
+              "abs_path": "/rustc/9fda7c2237db910e41d6a712e9a2139b352e558b/src/libstd/panic.rs",
+              "package": "std",
+              "filename": "panic.rs",
+              "lineno": 398,
+              "in_app": false,
+              "instruction_addr": "0x10de41d92"
+            },
+            {
+              "function": "std::panicking::try",
+              "abs_path": "/rustc/9fda7c2237db910e41d6a712e9a2139b352e558b/src/libstd/panicking.rs",
+              "package": "std",
+              "filename": "panicking.rs",
+              "lineno": 289,
+              "in_app": false,
+              "instruction_addr": "0x10de42144"
+            },
+            {
+              "function": "___rust_maybe_catch_panic",
+              "abs_path": "/rustc/9fda7c2237db910e41d6a712e9a2139b352e558b/src/libpanic_unwind/lib.rs",
+              "filename": "lib.rs",
+              "lineno": 102,
+              "in_app": true,
+              "instruction_addr": "0x10e37f41e"
+            },
+            {
+              "function": "std::panicking::try::do_call",
+              "abs_path": "/rustc/9fda7c2237db910e41d6a712e9a2139b352e558b/src/libstd/panicking.rs",
+              "package": "std",
+              "filename": "panicking.rs",
+              "lineno": 310,
+              "in_app": false,
+              "instruction_addr": "0x10de42262"
+            },
+            {
+              "function": "<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once",
+              "abs_path": "/rustc/9fda7c2237db910e41d6a712e9a2139b352e558b/src/libstd/panic.rs",
+              "filename": "panic.rs",
+              "lineno": 319,
+              "in_app": false,
+              "instruction_addr": "0x10de40ab2"
+            },
+            {
+              "function": "std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}}",
+              "abs_path": "/rustc/9fda7c2237db910e41d6a712e9a2139b352e558b/src/libstd/thread/mod.rs",
+              "package": "std",
+              "filename": "mod.rs",
+              "lineno": 477,
+              "in_app": false,
+              "instruction_addr": "0x10de00c12"
+            },
+            {
+              "function": "std::sys_common::backtrace::__rust_begin_short_backtrace",
+              "abs_path": "/rustc/9fda7c2237db910e41d6a712e9a2139b352e558b/src/libstd/sys_common/backtrace.rs",
+              "package": "std",
+              "filename": "backtrace.rs",
+              "lineno": 136,
+              "in_app": false,
+              "instruction_addr": "0x10de260a2"
+            },
+            {
+              "function": "actix::arbiter::Arbiter::new_with_builder::{{closure}}",
+              "abs_path": "/Users/mitsuhiko/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.7.9/src/arbiter.rs",
+              "package": "actix",
+              "filename": "arbiter.rs",
+              "lineno": 116,
+              "in_app": true,
+              "instruction_addr": "0x10de38309"
+            },
+            {
+              "function": "tokio::runtime::current_thread::runtime::Runtime::block_on",
+              "abs_path": "/Users/mitsuhiko/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.15/src/runtime/current_thread/runtime.rs",
+              "package": "tokio",
+              "filename": "runtime.rs",
+              "lineno": 189,
+              "in_app": true,
+              "instruction_addr": "0x10de2b1d4"
+            },
+            {
+              "function": "tokio::runtime::current_thread::runtime::Runtime::enter",
+              "abs_path": "/Users/mitsuhiko/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.15/src/runtime/current_thread/runtime.rs",
+              "package": "tokio",
+              "filename": "runtime.rs",
+              "lineno": 221,
+              "in_app": true,
+              "instruction_addr": "0x10de2a453"
+            },
+            {
+              "function": "tokio_reactor::with_default",
+              "abs_path": "/Users/mitsuhiko/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-reactor-0.1.8/src/lib.rs",
+              "package": "tokio_reactor",
+              "filename": "lib.rs",
+              "lineno": 212,
+              "in_app": true,
+              "instruction_addr": "0x10ddfb7ee"
+            },
+            {
+              "function": "<std::thread::local::LocalKey<T>>::with",
+              "abs_path": "/rustc/9fda7c2237db910e41d6a712e9a2139b352e558b/src/libstd/thread/local.rs",
+              "filename": "local.rs",
+              "lineno": 255,
+              "in_app": false,
+              "instruction_addr": "0x10ddd4c98"
+            },
+            {
+              "function": "<std::thread::local::LocalKey<T>>::try_with",
+              "abs_path": "/rustc/9fda7c2237db910e41d6a712e9a2139b352e558b/src/libstd/thread/local.rs",
+              "filename": "local.rs",
+              "lineno": 309,
+              "in_app": false,
+              "instruction_addr": "0x10ddd61ce"
+            },
+            {
+              "function": "tokio_reactor::with_default::{{closure}}",
+              "abs_path": "/Users/mitsuhiko/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-reactor-0.1.8/src/lib.rs",
+              "package": "tokio_reactor",
+              "filename": "lib.rs",
+              "lineno": 229,
+              "in_app": true,
+              "instruction_addr": "0x10ddfbf58"
+            },
+            {
+              "function": "tokio::runtime::current_thread::runtime::Runtime::enter::{{closure}}",
+              "abs_path": "/Users/mitsuhiko/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.15/src/runtime/current_thread/runtime.rs",
+              "package": "tokio",
+              "filename": "runtime.rs",
+              "lineno": 222,
+              "in_app": true,
+              "instruction_addr": "0x10de2a86c"
+            },
+            {
+              "function": "tokio_timer::clock::clock::with_default",
+              "abs_path": "/Users/mitsuhiko/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-timer-0.2.10/src/clock/clock.rs",
+              "package": "tokio_timer",
+              "filename": "clock.rs",
+              "lineno": 124,
+              "in_app": true,
+              "instruction_addr": "0x10de40cb9"
+            },
+            {
+              "function": "<std::thread::local::LocalKey<T>>::with",
+              "abs_path": "/rustc/9fda7c2237db910e41d6a712e9a2139b352e558b/src/libstd/thread/local.rs",
+              "filename": "local.rs",
+              "lineno": 255,
+              "in_app": false,
+              "instruction_addr": "0x10ddd4948"
+            },
+            {
+              "function": "<std::thread::local::LocalKey<T>>::try_with",
+              "abs_path": "/rustc/9fda7c2237db910e41d6a712e9a2139b352e558b/src/libstd/thread/local.rs",
+              "filename": "local.rs",
+              "lineno": 309,
+              "in_app": false,
+              "instruction_addr": "0x10ddda569"
+            },
+            {
+              "function": "tokio_timer::clock::clock::with_default::{{closure}}",
+              "abs_path": "/Users/mitsuhiko/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-timer-0.2.10/src/clock/clock.rs",
+              "package": "tokio_timer",
+              "filename": "clock.rs",
+              "lineno": 141,
+              "in_app": true,
+              "instruction_addr": "0x10de41285"
+            },
+            {
+              "function": "tokio::runtime::current_thread::runtime::Runtime::enter::{{closure}}::{{closure}}",
+              "abs_path": "/Users/mitsuhiko/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.15/src/runtime/current_thread/runtime.rs",
+              "package": "tokio",
+              "filename": "runtime.rs",
+              "lineno": 223,
+              "in_app": true,
+              "instruction_addr": "0x10de2aa38"
+            },
+            {
+              "function": "tokio_timer::timer::handle::with_default",
+              "abs_path": "/Users/mitsuhiko/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-timer-0.2.10/src/timer/handle.rs",
+              "package": "tokio_timer",
+              "filename": "handle.rs",
+              "lineno": 81,
+              "in_app": true,
+              "instruction_addr": "0x10de1cb37"
+            },
+            {
+              "function": "<std::thread::local::LocalKey<T>>::with",
+              "abs_path": "/rustc/9fda7c2237db910e41d6a712e9a2139b352e558b/src/libstd/thread/local.rs",
+              "filename": "local.rs",
+              "lineno": 255,
+              "in_app": false,
+              "instruction_addr": "0x10ddd4447"
+            },
+            {
+              "function": "<std::thread::local::LocalKey<T>>::try_with",
+              "abs_path": "/rustc/9fda7c2237db910e41d6a712e9a2139b352e558b/src/libstd/thread/local.rs",
+              "filename": "local.rs",
+              "lineno": 309,
+              "in_app": false,
+              "instruction_addr": "0x10ddd506c"
+            },
+            {
+              "function": "tokio_timer::timer::handle::with_default::{{closure}}",
+              "abs_path": "/Users/mitsuhiko/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-timer-0.2.10/src/timer/handle.rs",
+              "package": "tokio_timer",
+              "filename": "handle.rs",
+              "lineno": 94,
+              "in_app": true,
+              "instruction_addr": "0x10de1ce04"
+            },
+            {
+              "function": "tokio::runtime::current_thread::runtime::Runtime::enter::{{closure}}::{{closure}}::{{closure}}",
+              "abs_path": "/Users/mitsuhiko/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.15/src/runtime/current_thread/runtime.rs",
+              "package": "tokio",
+              "filename": "runtime.rs",
+              "lineno": 230,
+              "in_app": true,
+              "instruction_addr": "0x10de2addb"
+            },
+            {
+              "function": "tokio_executor::global::with_default",
+              "abs_path": "/Users/mitsuhiko/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.6/src/global.rs",
+              "package": "tokio_executor",
+              "filename": "global.rs",
+              "lineno": 162,
+              "in_app": true,
+              "instruction_addr": "0x10de2565a"
+            },
+            {
+              "function": "<std::thread::local::LocalKey<T>>::with",
+              "abs_path": "/rustc/9fda7c2237db910e41d6a712e9a2139b352e558b/src/libstd/thread/local.rs",
+              "filename": "local.rs",
+              "lineno": 255,
+              "in_app": false,
+              "instruction_addr": "0x10ddd3fc7"
+            },
+            {
+              "function": "<std::thread::local::LocalKey<T>>::try_with",
+              "abs_path": "/rustc/9fda7c2237db910e41d6a712e9a2139b352e558b/src/libstd/thread/local.rs",
+              "filename": "local.rs",
+              "lineno": 309,
+              "in_app": false,
+              "instruction_addr": "0x10ddd73b8"
+            },
+            {
+              "function": "tokio_executor::global::with_default::{{closure}}",
+              "abs_path": "/Users/mitsuhiko/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.6/src/global.rs",
+              "package": "tokio_executor",
+              "filename": "global.rs",
+              "lineno": 192,
+              "in_app": true,
+              "instruction_addr": "0x10de257c9"
+            },
+            {
+              "function": "tokio::runtime::current_thread::runtime::Runtime::enter::{{closure}}::{{closure}}::{{closure}}::{{closure}}",
+              "abs_path": "/Users/mitsuhiko/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.15/src/runtime/current_thread/runtime.rs",
+              "package": "tokio",
+              "filename": "runtime.rs",
+              "lineno": 232,
+              "in_app": true,
+              "instruction_addr": "0x10de2ae8e"
+            },
+            {
+              "function": "tokio::runtime::current_thread::runtime::Runtime::block_on::{{closure}}",
+              "abs_path": "/Users/mitsuhiko/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.15/src/runtime/current_thread/runtime.rs",
+              "package": "tokio",
+              "filename": "runtime.rs",
+              "lineno": 191,
+              "in_app": true,
+              "instruction_addr": "0x10de2b31c"
+            },
+            {
+              "function": "<tokio_current_thread::Entered<'a, P>>::block_on",
+              "abs_path": "/Users/mitsuhiko/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-current-thread-0.1.4/src/lib.rs",
+              "filename": "lib.rs",
+              "lineno": 488,
+              "in_app": true,
+              "instruction_addr": "0x10ddef1ac"
+            },
+            {
+              "function": "<tokio_current_thread::Entered<'a, P>>::tick",
+              "abs_path": "/Users/mitsuhiko/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-current-thread-0.1.4/src/lib.rs",
+              "filename": "lib.rs",
+              "lineno": 605,
+              "in_app": true,
+              "instruction_addr": "0x10df21565"
+            },
+            {
+              "function": "<tokio_current_thread::scheduler::Scheduler<U>>::tick",
+              "abs_path": "/Users/mitsuhiko/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-current-thread-0.1.4/src/scheduler.rs",
+              "filename": "scheduler.rs",
+              "lineno": 333,
+              "in_app": true,
+              "instruction_addr": "0x10df2368f"
+            },
+            {
+              "function": "<tokio_current_thread::Borrow<'a, U>>::enter",
+              "abs_path": "/Users/mitsuhiko/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-current-thread-0.1.4/src/lib.rs",
+              "filename": "lib.rs",
+              "lineno": 776,
+              "in_app": true,
+              "instruction_addr": "0x10df2120a"
+            },
+            {
+              "function": "<std::thread::local::LocalKey<T>>::with",
+              "abs_path": "/rustc/9fda7c2237db910e41d6a712e9a2139b352e558b/src/libstd/thread/local.rs",
+              "filename": "local.rs",
+              "lineno": 255,
+              "in_app": false,
+              "instruction_addr": "0x10df1e8c4"
+            },
+            {
+              "function": "<std::thread::local::LocalKey<T>>::try_with",
+              "abs_path": "/rustc/9fda7c2237db910e41d6a712e9a2139b352e558b/src/libstd/thread/local.rs",
+              "filename": "local.rs",
+              "lineno": 309,
+              "in_app": false,
+              "instruction_addr": "0x10df1ecd4"
+            },
+            {
+              "function": "<tokio_current_thread::Borrow<'a, U>>::enter::{{closure}}",
+              "abs_path": "/Users/mitsuhiko/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-current-thread-0.1.4/src/lib.rs",
+              "filename": "lib.rs",
+              "lineno": 778,
+              "in_app": true,
+              "instruction_addr": "0x10df2135a"
+            },
+            {
+              "function": "tokio_current_thread::CurrentRunner::set_spawn",
+              "abs_path": "/Users/mitsuhiko/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-current-thread-0.1.4/src/lib.rs",
+              "package": "tokio_current_thread",
+              "filename": "lib.rs",
+              "lineno": 816,
+              "in_app": true,
+              "instruction_addr": "0x10df1fcdf"
+            },
+            {
+              "function": "<tokio_current_thread::Borrow<'a, U>>::enter::{{closure}}::{{closure}}",
+              "abs_path": "/Users/mitsuhiko/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-current-thread-0.1.4/src/lib.rs",
+              "filename": "lib.rs",
+              "lineno": 779,
+              "in_app": true,
+              "instruction_addr": "0x10df213b4"
+            },
+            {
+              "function": "<tokio_current_thread::scheduler::Scheduler<U>>::tick::{{closure}}",
+              "abs_path": "/Users/mitsuhiko/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-current-thread-0.1.4/src/scheduler.rs",
+              "filename": "scheduler.rs",
+              "lineno": 333,
+              "in_app": true,
+              "instruction_addr": "0x10df23784"
+            },
+            {
+              "function": "<tokio_current_thread::scheduler::Scheduled<'a, U>>::tick",
+              "abs_path": "/Users/mitsuhiko/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-current-thread-0.1.4/src/scheduler.rs",
+              "filename": "scheduler.rs",
+              "lineno": 354,
+              "in_app": true,
+              "instruction_addr": "0x10df23b63"
+            },
+            {
+              "function": "<futures::task_impl::Spawn<T>>::poll_future_notify",
+              "abs_path": "/Users/mitsuhiko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.25/src/task_impl/mod.rs",
+              "filename": "mod.rs",
+              "lineno": 326,
+              "in_app": true,
+              "instruction_addr": "0x10df1ddb4"
+            },
+            {
+              "function": "<futures::task_impl::Spawn<T>>::poll_fn_notify",
+              "abs_path": "/Users/mitsuhiko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.25/src/task_impl/mod.rs",
+              "filename": "mod.rs",
+              "lineno": 288,
+              "in_app": true,
+              "instruction_addr": "0x10df1dd27"
+            },
+            {
+              "function": "<futures::task_impl::Spawn<T>>::enter",
+              "abs_path": "/Users/mitsuhiko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.25/src/task_impl/mod.rs",
+              "filename": "mod.rs",
+              "lineno": 396,
+              "in_app": true,
+              "instruction_addr": "0x10df1dee7"
+            },
+            {
+              "function": "futures::task_impl::std::set",
+              "abs_path": "/Users/mitsuhiko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.25/src/task_impl/std/mod.rs",
+              "package": "futures",
+              "filename": "mod.rs",
+              "lineno": 78,
+              "in_app": true,
+              "instruction_addr": "0x10df1b856"
+            },
+            {
+              "function": "<futures::task_impl::Spawn<T>>::enter::{{closure}}",
+              "abs_path": "/Users/mitsuhiko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.25/src/task_impl/mod.rs",
+              "filename": "mod.rs",
+              "lineno": 396,
+              "in_app": true,
+              "instruction_addr": "0x10df1df3f"
+            },
+            {
+              "function": "<futures::task_impl::Spawn<T>>::poll_future_notify::{{closure}}",
+              "abs_path": "/Users/mitsuhiko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.25/src/task_impl/mod.rs",
+              "filename": "mod.rs",
+              "lineno": 326,
+              "in_app": true,
+              "instruction_addr": "0x10df1dde4"
+            },
+            {
+              "function": "<alloc::boxed::Box<F> as futures::future::Future>::poll",
+              "abs_path": "/Users/mitsuhiko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.25/src/future/mod.rs",
+              "filename": "mod.rs",
+              "lineno": 113,
+              "in_app": false,
+              "instruction_addr": "0x10df1d0e4"
+            },
+            {
+              "function": "<futures::future::then::Then<A, B, F> as futures::future::Future>::poll",
+              "abs_path": "/Users/mitsuhiko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.25/src/future/then.rs",
+              "filename": "then.rs",
+              "lineno": 32,
+              "in_app": true,
+              "instruction_addr": "0x10d9dc164"
+            },
+            {
+              "function": "<futures::future::chain::Chain<A, B, C>>::poll",
+              "abs_path": "/Users/mitsuhiko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.25/src/future/chain.rs",
+              "filename": "chain.rs",
+              "lineno": 26,
+              "in_app": true,
+              "instruction_addr": "0x10d973b21"
+            },
+            {
+              "function": "<futures::future::either::Either<A, B> as futures::future::Future>::poll",
+              "abs_path": "/Users/mitsuhiko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.25/src/future/either.rs",
+              "filename": "either.rs",
+              "lineno": 35,
+              "in_app": true,
+              "instruction_addr": "0x10d994eb4"
+            },
+            {
+              "function": "<futures::future::either::Either<A, B> as futures::future::Future>::poll",
+              "abs_path": "/Users/mitsuhiko/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.25/src/future/either.rs",
+              "filename": "either.rs",
+              "lineno": 35,
+              "in_app": true,
+              "instruction_addr": "0x10d994db9"
+            },
+            {
+              "function": "<actix_web::server::acceptor::ServerMessageAcceptorServiceFut<T> as futures::future::Future>::poll",
+              "abs_path": "/Users/mitsuhiko/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-web-0.7.18/src/server/acceptor.rs",
+              "filename": "acceptor.rs",
+              "lineno": 378,
+              "in_app": true,
+              "instruction_addr": "0x10d98f2bc"
+            },
+            {
+              "function": "<actix_net::service::and_then::AndThenFuture<A, B> as futures::future::Future>::poll",
+              "abs_path": "/Users/mitsuhiko/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-net-0.2.6/src/service/and_then.rs",
+              "filename": "and_then.rs",
+              "lineno": 94,
+              "in_app": true,
+              "instruction_addr": "0x10da1d0b5"
+            },
+            {
+              "function": "<actix_net::service::map_err::MapErrFuture<A, F, E> as futures::future::Future>::poll",
+              "abs_path": "/Users/mitsuhiko/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-net-0.2.6/src/service/map_err.rs",
+              "filename": "map_err.rs",
+              "lineno": 92,
+              "in_app": true,
+              "instruction_addr": "0x10da0f7c3"
+            },
+            {
+              "function": "<actix_web::server::channel::HttpChannel<T, H> as futures::future::Future>::poll",
+              "abs_path": "/Users/mitsuhiko/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-web-0.7.18/src/server/channel.rs",
+              "filename": "channel.rs",
+              "lineno": 155,
+              "in_app": true,
+              "instruction_addr": "0x10da00a6d"
+            },
+            {
+              "function": "<actix_web::server::channel::HttpChannel<T, H> as futures::future::Future>::poll",
+              "abs_path": "/Users/mitsuhiko/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-web-0.7.18/src/server/channel.rs",
+              "filename": "channel.rs",
+              "lineno": 105,
+              "in_app": true,
+              "instruction_addr": "0x10d9ffd41"
+            },
+            {
+              "function": "<actix_web::server::h1::Http1Dispatcher<T, H>>::poll",
+              "abs_path": "/Users/mitsuhiko/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-web-0.7.18/src/server/h1.rs",
+              "filename": "h1.rs",
+              "lineno": 223,
+              "in_app": true,
+              "instruction_addr": "0x10da0bd6f"
+            },
+            {
+              "function": "<actix_web::server::h1::Http1Dispatcher<T, H>>::poll_handler",
+              "abs_path": "/Users/mitsuhiko/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-web-0.7.18/src/server/h1.rs",
+              "filename": "h1.rs",
+              "lineno": 376,
+              "in_app": true,
+              "instruction_addr": "0x10da08d4e"
+            },
+            {
+              "function": "<actix_web::server::h1::Http1Dispatcher<T, H>>::poll_io",
+              "abs_path": "/Users/mitsuhiko/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-web-0.7.18/src/server/h1.rs",
+              "filename": "h1.rs",
+              "lineno": 348,
+              "in_app": true,
+              "instruction_addr": "0x10da0e46f"
+            },
+            {
+              "function": "<actix_web::server::h1::Http1Dispatcher<T, H>>::parse",
+              "abs_path": "/Users/mitsuhiko/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-web-0.7.18/src/server/h1.rs",
+              "filename": "h1.rs",
+              "lineno": 506,
+              "in_app": true,
+              "instruction_addr": "0x10da0cb47"
+            },
+            {
+              "function": "<actix_web::pipeline::Pipeline<S, H> as actix_web::server::handler::HttpHandlerTask>::poll_io",
+              "abs_path": "/Users/mitsuhiko/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-web-0.7.18/src/pipeline.rs",
+              "filename": "pipeline.rs",
+              "lineno": 126,
+              "in_app": true,
+              "instruction_addr": "0x10d99d065"
+            },
+            {
+              "function": "<actix_web::pipeline::ProcessResponse<S, H>>::poll_io",
+              "abs_path": "/Users/mitsuhiko/Development/sentry-rust/<::log::macros::log macros>",
+              "filename": "<::log::macros::log macros>",
+              "lineno": 5,
+              "in_app": true,
+              "instruction_addr": "0x10d9a1461"
+            },
+            {
+              "function": "log::__private_api_log",
+              "abs_path": "/Users/mitsuhiko/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.6/src/lib.rs",
+              "package": "log",
+              "filename": "lib.rs",
+              "lineno": 1232,
+              "in_app": true,
+              "instruction_addr": "0x10e35a544"
+            },
+            {
+              "function": "<sentry::integrations::log::Logger as log::Log>::log",
+              "abs_path": "/Users/mitsuhiko/Development/sentry-rust/src/integrations/log.rs",
+              "filename": "log.rs",
+              "lineno": 184,
+              "in_app": false,
+              "instruction_addr": "0x10daf01ab"
+            },
+            {
+              "function": "sentry::hub::Hub::with_active",
+              "abs_path": "/Users/mitsuhiko/Development/sentry-rust/src/hub.rs",
+              "package": "sentry",
+              "filename": "hub.rs",
+              "lineno": 208,
+              "in_app": false,
+              "instruction_addr": "0x10da79a43"
+            },
+            {
+              "function": "sentry::hub::Hub::with",
+              "abs_path": "/Users/mitsuhiko/Development/sentry-rust/src/hub.rs",
+              "package": "sentry",
+              "filename": "hub.rs",
+              "lineno": 190,
+              "in_app": false,
+              "instruction_addr": "0x10da78707"
+            },
+            {
+              "function": "<std::thread::local::LocalKey<T>>::with",
+              "abs_path": "/rustc/9fda7c2237db910e41d6a712e9a2139b352e558b/src/libstd/thread/local.rs",
+              "filename": "local.rs",
+              "lineno": 255,
+              "in_app": false,
+              "instruction_addr": "0x10dae8346"
+            },
+            {
+              "function": "<std::thread::local::LocalKey<T>>::try_with",
+              "abs_path": "/rustc/9fda7c2237db910e41d6a712e9a2139b352e558b/src/libstd/thread/local.rs",
+              "filename": "local.rs",
+              "lineno": 309,
+              "in_app": false,
+              "instruction_addr": "0x10daea762"
+            },
+            {
+              "function": "sentry::hub::Hub::with::{{closure}}",
+              "abs_path": "/Users/mitsuhiko/Development/sentry-rust/src/hub.rs",
+              "package": "sentry",
+              "filename": "hub.rs",
+              "lineno": 192,
+              "in_app": false,
+              "instruction_addr": "0x10da79451"
+            },
+            {
+              "function": "sentry::hub::Hub::with_active::{{closure}}",
+              "abs_path": "/Users/mitsuhiko/Development/sentry-rust/src/hub.rs",
+              "package": "sentry",
+              "filename": "hub.rs",
+              "lineno": 210,
+              "in_app": false,
+              "instruction_addr": "0x10da79b0b"
+            }
+          ]
+        },
+        "type": "actix_web::pipeline",
+        "value": "Error occurred during request handling, status: 500 Internal Server Error Something went really wrong here"
+      }
+    ]
+  },
+  "release": null
+}
diff --git a/tests/sentry/event_hashing/fixtures/actix.out b/tests/sentry/event_hashing/fixtures/actix.out
new file mode 100644
index 0000000000..3666ad99b7
--- /dev/null
+++ b/tests/sentry/event_hashing/fixtures/actix.out
@@ -0,0 +1,1083 @@
+app:
+  hash: 'c9dc61e20bb252c9ec1e28a75f015132'
+  component:
+    app*
+      exception*
+        stacktrace*
+          frame
+            function (function name is used only if module or filename are available)
+              u'__pthread_start'
+          frame
+            function (function name is used only if module or filename are available)
+              u'__pthread_body'
+          frame (non app frame)
+            filename*
+              u'thread.rs'
+            function*
+              u'std::sys::unix::thread::Thread::new::thread_start'
+            lineno (function takes precedence)
+              24
+          frame*
+            filename*
+              u'boxed.rs'
+            function*
+              u'<F as alloc::boxed::FnBox<A>>::call_box'
+            lineno (function takes precedence)
+              673
+          frame (non app frame)
+            filename*
+              u'mod.rs'
+            function*
+              u'std::thread::Builder::spawn_unchecked::{{closure}}'
+            lineno (function takes precedence)
+              476
+          frame (non app frame)
+            filename*
+              u'panic.rs'
+            function*
+              u'std::panic::catch_unwind'
+            lineno (function takes precedence)
+              398
+          frame (non app frame)
+            filename*
+              u'panicking.rs'
+            function*
+              u'std::panicking::try'
+            lineno (function takes precedence)
+              289
+          frame*
+            filename*
+              u'lib.rs'
+            function*
+              u'___rust_maybe_catch_panic'
+            lineno (function takes precedence)
+              102
+          frame (non app frame)
+            filename*
+              u'panicking.rs'
+            function*
+              u'std::panicking::try::do_call'
+            lineno (function takes precedence)
+              310
+          frame (non app frame)
+            filename*
+              u'panic.rs'
+            function*
+              u'<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once'
+            lineno (function takes precedence)
+              319
+          frame (non app frame)
+            filename*
+              u'mod.rs'
+            function*
+              u'std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}}'
+            lineno (function takes precedence)
+              477
+          frame (non app frame)
+            filename*
+              u'backtrace.rs'
+            function*
+              u'std::sys_common::backtrace::__rust_begin_short_backtrace'
+            lineno (function takes precedence)
+              136
+          frame*
+            filename*
+              u'arbiter.rs'
+            function*
+              u'actix::arbiter::Arbiter::new_with_builder::{{closure}}'
+            lineno (function takes precedence)
+              116
+          frame*
+            filename*
+              u'runtime.rs'
+            function*
+              u'tokio::runtime::current_thread::runtime::Runtime::block_on'
+            lineno (function takes precedence)
+              189
+          frame*
+            filename*
+              u'runtime.rs'
+            function*
+              u'tokio::runtime::current_thread::runtime::Runtime::enter'
+            lineno (function takes precedence)
+              221
+          frame*
+            filename*
+              u'lib.rs'
+            function*
+              u'tokio_reactor::with_default'
+            lineno (function takes precedence)
+              212
+          frame (non app frame)
+            filename*
+              u'local.rs'
+            function*
+              u'<std::thread::local::LocalKey<T>>::with'
+            lineno (function takes precedence)
+              255
+          frame (non app frame)
+            filename*
+              u'local.rs'
+            function*
+              u'<std::thread::local::LocalKey<T>>::try_with'
+            lineno (function takes precedence)
+              309
+          frame*
+            filename*
+              u'lib.rs'
+            function*
+              u'tokio_reactor::with_default::{{closure}}'
+            lineno (function takes precedence)
+              229
+          frame*
+            filename*
+              u'runtime.rs'
+            function*
+              u'tokio::runtime::current_thread::runtime::Runtime::enter::{{closure}}'
+            lineno (function takes precedence)
+              222
+          frame*
+            filename*
+              u'clock.rs'
+            function*
+              u'tokio_timer::clock::clock::with_default'
+            lineno (function takes precedence)
+              124
+          frame (non app frame)
+            filename*
+              u'local.rs'
+            function*
+              u'<std::thread::local::LocalKey<T>>::with'
+            lineno (function takes precedence)
+              255
+          frame (non app frame)
+            filename*
+              u'local.rs'
+            function*
+              u'<std::thread::local::LocalKey<T>>::try_with'
+            lineno (function takes precedence)
+              309
+          frame*
+            filename*
+              u'clock.rs'
+            function*
+              u'tokio_timer::clock::clock::with_default::{{closure}}'
+            lineno (function takes precedence)
+              141
+          frame*
+            filename*
+              u'runtime.rs'
+            function*
+              u'tokio::runtime::current_thread::runtime::Runtime::enter::{{closure}}::{{closure}}'
+            lineno (function takes precedence)
+              223
+          frame*
+            filename*
+              u'handle.rs'
+            function*
+              u'tokio_timer::timer::handle::with_default'
+            lineno (function takes precedence)
+              81
+          frame (non app frame)
+            filename*
+              u'local.rs'
+            function*
+              u'<std::thread::local::LocalKey<T>>::with'
+            lineno (function takes precedence)
+              255
+          frame (non app frame)
+            filename*
+              u'local.rs'
+            function*
+              u'<std::thread::local::LocalKey<T>>::try_with'
+            lineno (function takes precedence)
+              309
+          frame*
+            filename*
+              u'handle.rs'
+            function*
+              u'tokio_timer::timer::handle::with_default::{{closure}}'
+            lineno (function takes precedence)
+              94
+          frame*
+            filename*
+              u'runtime.rs'
+            function*
+              u'tokio::runtime::current_thread::runtime::Runtime::enter::{{closure}}::{{closure}}::{{closure}}'
+            lineno (function takes precedence)
+              230
+          frame*
+            filename*
+              u'global.rs'
+            function*
+              u'tokio_executor::global::with_default'
+            lineno (function takes precedence)
+              162
+          frame (non app frame)
+            filename*
+              u'local.rs'
+            function*
+              u'<std::thread::local::LocalKey<T>>::with'
+            lineno (function takes precedence)
+              255
+          frame (non app frame)
+            filename*
+              u'local.rs'
+            function*
+              u'<std::thread::local::LocalKey<T>>::try_with'
+            lineno (function takes precedence)
+              309
+          frame*
+            filename*
+              u'global.rs'
+            function*
+              u'tokio_executor::global::with_default::{{closure}}'
+            lineno (function takes precedence)
+              192
+          frame*
+            filename*
+              u'runtime.rs'
+            function*
+              u'tokio::runtime::current_thread::runtime::Runtime::enter::{{closure}}::{{closure}}::{{closure}}::{{closure}}'
+            lineno (function takes precedence)
+              232
+          frame*
+            filename*
+              u'runtime.rs'
+            function*
+              u'tokio::runtime::current_thread::runtime::Runtime::block_on::{{closure}}'
+            lineno (function takes precedence)
+              191
+          frame*
+            filename*
+              u'lib.rs'
+            function*
+              u"<tokio_current_thread::Entered<'a, P>>::block_on"
+            lineno (function takes precedence)
+              488
+          frame*
+            filename*
+              u'lib.rs'
+            function*
+              u"<tokio_current_thread::Entered<'a, P>>::tick"
+            lineno (function takes precedence)
+              605
+          frame*
+            filename*
+              u'scheduler.rs'
+            function*
+              u'<tokio_current_thread::scheduler::Scheduler<U>>::tick'
+            lineno (function takes precedence)
+              333
+          frame*
+            filename*
+              u'lib.rs'
+            function*
+              u"<tokio_current_thread::Borrow<'a, U>>::enter"
+            lineno (function takes precedence)
+              776
+          frame (non app frame)
+            filename*
+              u'local.rs'
+            function*
+              u'<std::thread::local::LocalKey<T>>::with'
+            lineno (function takes precedence)
+              255
+          frame (non app frame)
+            filename*
+              u'local.rs'
+            function*
+              u'<std::thread::local::LocalKey<T>>::try_with'
+            lineno (function takes precedence)
+              309
+          frame*
+            filename*
+              u'lib.rs'
+            function*
+              u"<tokio_current_thread::Borrow<'a, U>>::enter::{{closure}}"
+            lineno (function takes precedence)
+              778
+          frame*
+            filename*
+              u'lib.rs'
+            function*
+              u'tokio_current_thread::CurrentRunner::set_spawn'
+            lineno (function takes precedence)
+              816
+          frame*
+            filename*
+              u'lib.rs'
+            function*
+              u"<tokio_current_thread::Borrow<'a, U>>::enter::{{closure}}::{{closure}}"
+            lineno (function takes precedence)
+              779
+          frame*
+            filename*
+              u'scheduler.rs'
+            function*
+              u'<tokio_current_thread::scheduler::Scheduler<U>>::tick::{{closure}}'
+            lineno (function takes precedence)
+              333
+          frame*
+            filename*
+              u'scheduler.rs'
+            function*
+              u"<tokio_current_thread::scheduler::Scheduled<'a, U>>::tick"
+            lineno (function takes precedence)
+              354
+          frame*
+            filename*
+              u'mod.rs'
+            function*
+              u'<futures::task_impl::Spawn<T>>::poll_future_notify'
+            lineno (function takes precedence)
+              326
+          frame*
+            filename*
+              u'mod.rs'
+            function*
+              u'<futures::task_impl::Spawn<T>>::poll_fn_notify'
+            lineno (function takes precedence)
+              288
+          frame*
+            filename*
+              u'mod.rs'
+            function*
+              u'<futures::task_impl::Spawn<T>>::enter'
+            lineno (function takes precedence)
+              396
+          frame*
+            filename*
+              u'mod.rs'
+            function*
+              u'futures::task_impl::std::set'
+            lineno (function takes precedence)
+              78
+          frame*
+            filename*
+              u'mod.rs'
+            function*
+              u'<futures::task_impl::Spawn<T>>::enter::{{closure}}'
+            lineno (function takes precedence)
+              396
+          frame*
+            filename*
+              u'mod.rs'
+            function*
+              u'<futures::task_impl::Spawn<T>>::poll_future_notify::{{closure}}'
+            lineno (function takes precedence)
+              326
+          frame (non app frame)
+            filename*
+              u'mod.rs'
+            function*
+              u'<alloc::boxed::Box<F> as futures::future::Future>::poll'
+            lineno (function takes precedence)
+              113
+          frame*
+            filename*
+              u'then.rs'
+            function*
+              u'<futures::future::then::Then<A, B, F> as futures::future::Future>::poll'
+            lineno (function takes precedence)
+              32
+          frame*
+            filename*
+              u'chain.rs'
+            function*
+              u'<futures::future::chain::Chain<A, B, C>>::poll'
+            lineno (function takes precedence)
+              26
+          frame*
+            filename*
+              u'either.rs'
+            function*
+              u'<futures::future::either::Either<A, B> as futures::future::Future>::poll'
+            lineno (function takes precedence)
+              35
+          frame (ignored due to recursion)
+            filename*
+              u'either.rs'
+            function*
+              u'<futures::future::either::Either<A, B> as futures::future::Future>::poll'
+            lineno (function takes precedence)
+              35
+          frame*
+            filename*
+              u'acceptor.rs'
+            function*
+              u'<actix_web::server::acceptor::ServerMessageAcceptorServiceFut<T> as futures::future::Future>::poll'
+            lineno (function takes precedence)
+              378
+          frame*
+            filename*
+              u'and_then.rs'
+            function*
+              u'<actix_net::service::and_then::AndThenFuture<A, B> as futures::future::Future>::poll'
+            lineno (function takes precedence)
+              94
+          frame*
+            filename*
+              u'map_err.rs'
+            function*
+              u'<actix_net::service::map_err::MapErrFuture<A, F, E> as futures::future::Future>::poll'
+            lineno (function takes precedence)
+              92
+          frame*
+            filename*
+              u'channel.rs'
+            function*
+              u'<actix_web::server::channel::HttpChannel<T, H> as futures::future::Future>::poll'
+            lineno (function takes precedence)
+              155
+          frame*
+            filename*
+              u'channel.rs'
+            function*
+              u'<actix_web::server::channel::HttpChannel<T, H> as futures::future::Future>::poll'
+            lineno (function takes precedence)
+              105
+          frame*
+            filename*
+              u'h1.rs'
+            function*
+              u'<actix_web::server::h1::Http1Dispatcher<T, H>>::poll'
+            lineno (function takes precedence)
+              223
+          frame*
+            filename*
+              u'h1.rs'
+            function*
+              u'<actix_web::server::h1::Http1Dispatcher<T, H>>::poll_handler'
+            lineno (function takes precedence)
+              376
+          frame*
+            filename*
+              u'h1.rs'
+            function*
+              u'<actix_web::server::h1::Http1Dispatcher<T, H>>::poll_io'
+            lineno (function takes precedence)
+              348
+          frame*
+            filename*
+              u'h1.rs'
+            function*
+              u'<actix_web::server::h1::Http1Dispatcher<T, H>>::parse'
+            lineno (function takes precedence)
+              506
+          frame*
+            filename*
+              u'pipeline.rs'
+            function*
+              u'<actix_web::pipeline::Pipeline<S, H> as actix_web::server::handler::HttpHandlerTask>::poll_io'
+            lineno (function takes precedence)
+              126
+          frame*
+            filename*
+              u'<::log::macros::log macros>'
+            function*
+              u'<actix_web::pipeline::ProcessResponse<S, H>>::poll_io'
+            lineno (function takes precedence)
+              5
+          frame*
+            filename*
+              u'lib.rs'
+            function*
+              u'log::__private_api_log'
+            lineno (function takes precedence)
+              1232
+          frame (non app frame)
+            filename*
+              u'log.rs'
+            function*
+              u'<sentry::integrations::log::Logger as log::Log>::log'
+            lineno (function takes precedence)
+              184
+          frame (non app frame)
+            filename*
+              u'hub.rs'
+            function*
+              u'sentry::hub::Hub::with_active'
+            lineno (function takes precedence)
+              208
+          frame (non app frame)
+            filename*
+              u'hub.rs'
+            function*
+              u'sentry::hub::Hub::with'
+            lineno (function takes precedence)
+              190
+          frame (non app frame)
+            filename*
+              u'local.rs'
+            function*
+              u'<std::thread::local::LocalKey<T>>::with'
+            lineno (function takes precedence)
+              255
+          frame (non app frame)
+            filename*
+              u'local.rs'
+            function*
+              u'<std::thread::local::LocalKey<T>>::try_with'
+            lineno (function takes precedence)
+              309
+          frame (non app frame)
+            filename*
+              u'hub.rs'
+            function*
+              u'sentry::hub::Hub::with::{{closure}}'
+            lineno (function takes precedence)
+              192
+          frame (non app frame)
+            filename*
+              u'hub.rs'
+            function*
+              u'sentry::hub::Hub::with_active::{{closure}}'
+            lineno (function takes precedence)
+              210
+        type*
+          u'actix_web::pipeline'
+        value (stacktrace and type take precedence)
+          u'Error occurred during request handling, status: 500 Internal Server Error Something went really wrong here'
+--------------------------------------------------------------------------
+system:
+  hash: '4796dda6f2cfa81ec7862cd24bcfb58e'
+  component:
+    system*
+      exception*
+        stacktrace*
+          frame
+            function (function name is used only if module or filename are available)
+              u'__pthread_start'
+          frame
+            function (function name is used only if module or filename are available)
+              u'__pthread_body'
+          frame*
+            filename*
+              u'thread.rs'
+            function*
+              u'std::sys::unix::thread::Thread::new::thread_start'
+            lineno (function takes precedence)
+              24
+          frame*
+            filename*
+              u'boxed.rs'
+            function*
+              u'<F as alloc::boxed::FnBox<A>>::call_box'
+            lineno (function takes precedence)
+              673
+          frame*
+            filename*
+              u'mod.rs'
+            function*
+              u'std::thread::Builder::spawn_unchecked::{{closure}}'
+            lineno (function takes precedence)
+              476
+          frame*
+            filename*
+              u'panic.rs'
+            function*
+              u'std::panic::catch_unwind'
+            lineno (function takes precedence)
+              398
+          frame*
+            filename*
+              u'panicking.rs'
+            function*
+              u'std::panicking::try'
+            lineno (function takes precedence)
+              289
+          frame*
+            filename*
+              u'lib.rs'
+            function*
+              u'___rust_maybe_catch_panic'
+            lineno (function takes precedence)
+              102
+          frame*
+            filename*
+              u'panicking.rs'
+            function*
+              u'std::panicking::try::do_call'
+            lineno (function takes precedence)
+              310
+          frame*
+            filename*
+              u'panic.rs'
+            function*
+              u'<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once'
+            lineno (function takes precedence)
+              319
+          frame*
+            filename*
+              u'mod.rs'
+            function*
+              u'std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}}'
+            lineno (function takes precedence)
+              477
+          frame*
+            filename*
+              u'backtrace.rs'
+            function*
+              u'std::sys_common::backtrace::__rust_begin_short_backtrace'
+            lineno (function takes precedence)
+              136
+          frame*
+            filename*
+              u'arbiter.rs'
+            function*
+              u'actix::arbiter::Arbiter::new_with_builder::{{closure}}'
+            lineno (function takes precedence)
+              116
+          frame*
+            filename*
+              u'runtime.rs'
+            function*
+              u'tokio::runtime::current_thread::runtime::Runtime::block_on'
+            lineno (function takes precedence)
+              189
+          frame*
+            filename*
+              u'runtime.rs'
+            function*
+              u'tokio::runtime::current_thread::runtime::Runtime::enter'
+            lineno (function takes precedence)
+              221
+          frame*
+            filename*
+              u'lib.rs'
+            function*
+              u'tokio_reactor::with_default'
+            lineno (function takes precedence)
+              212
+          frame*
+            filename*
+              u'local.rs'
+            function*
+              u'<std::thread::local::LocalKey<T>>::with'
+            lineno (function takes precedence)
+              255
+          frame*
+            filename*
+              u'local.rs'
+            function*
+              u'<std::thread::local::LocalKey<T>>::try_with'
+            lineno (function takes precedence)
+              309
+          frame*
+            filename*
+              u'lib.rs'
+            function*
+              u'tokio_reactor::with_default::{{closure}}'
+            lineno (function takes precedence)
+              229
+          frame*
+            filename*
+              u'runtime.rs'
+            function*
+              u'tokio::runtime::current_thread::runtime::Runtime::enter::{{closure}}'
+            lineno (function takes precedence)
+              222
+          frame*
+            filename*
+              u'clock.rs'
+            function*
+              u'tokio_timer::clock::clock::with_default'
+            lineno (function takes precedence)
+              124
+          frame*
+            filename*
+              u'local.rs'
+            function*
+              u'<std::thread::local::LocalKey<T>>::with'
+            lineno (function takes precedence)
+              255
+          frame*
+            filename*
+              u'local.rs'
+            function*
+              u'<std::thread::local::LocalKey<T>>::try_with'
+            lineno (function takes precedence)
+              309
+          frame*
+            filename*
+              u'clock.rs'
+            function*
+              u'tokio_timer::clock::clock::with_default::{{closure}}'
+            lineno (function takes precedence)
+              141
+          frame*
+            filename*
+              u'runtime.rs'
+            function*
+              u'tokio::runtime::current_thread::runtime::Runtime::enter::{{closure}}::{{closure}}'
+            lineno (function takes precedence)
+              223
+          frame*
+            filename*
+              u'handle.rs'
+            function*
+              u'tokio_timer::timer::handle::with_default'
+            lineno (function takes precedence)
+              81
+          frame*
+            filename*
+              u'local.rs'
+            function*
+              u'<std::thread::local::LocalKey<T>>::with'
+            lineno (function takes precedence)
+              255
+          frame*
+            filename*
+              u'local.rs'
+            function*
+              u'<std::thread::local::LocalKey<T>>::try_with'
+            lineno (function takes precedence)
+              309
+          frame*
+            filename*
+              u'handle.rs'
+            function*
+              u'tokio_timer::timer::handle::with_default::{{closure}}'
+            lineno (function takes precedence)
+              94
+          frame*
+            filename*
+              u'runtime.rs'
+            function*
+              u'tokio::runtime::current_thread::runtime::Runtime::enter::{{closure}}::{{closure}}::{{closure}}'
+            lineno (function takes precedence)
+              230
+          frame*
+            filename*
+              u'global.rs'
+            function*
+              u'tokio_executor::global::with_default'
+            lineno (function takes precedence)
+              162
+          frame*
+            filename*
+              u'local.rs'
+            function*
+              u'<std::thread::local::LocalKey<T>>::with'
+            lineno (function takes precedence)
+              255
+          frame*
+            filename*
+              u'local.rs'
+            function*
+              u'<std::thread::local::LocalKey<T>>::try_with'
+            lineno (function takes precedence)
+              309
+          frame*
+            filename*
+              u'global.rs'
+            function*
+              u'tokio_executor::global::with_default::{{closure}}'
+            lineno (function takes precedence)
+              192
+          frame*
+            filename*
+              u'runtime.rs'
+            function*
+              u'tokio::runtime::current_thread::runtime::Runtime::enter::{{closure}}::{{closure}}::{{closure}}::{{closure}}'
+            lineno (function takes precedence)
+              232
+          frame*
+            filename*
+              u'runtime.rs'
+            function*
+              u'tokio::runtime::current_thread::runtime::Runtime::block_on::{{closure}}'
+            lineno (function takes precedence)
+              191
+          frame*
+            filename*
+              u'lib.rs'
+            function*
+              u"<tokio_current_thread::Entered<'a, P>>::block_on"
+            lineno (function takes precedence)
+              488
+          frame*
+            filename*
+              u'lib.rs'
+            function*
+              u"<tokio_current_thread::Entered<'a, P>>::tick"
+            lineno (function takes precedence)
+              605
+          frame*
+            filename*
+              u'scheduler.rs'
+            function*
+              u'<tokio_current_thread::scheduler::Scheduler<U>>::tick'
+            lineno (function takes precedence)
+              333
+          frame*
+            filename*
+              u'lib.rs'
+            function*
+              u"<tokio_current_thread::Borrow<'a, U>>::enter"
+            lineno (function takes precedence)
+              776
+          frame*
+            filename*
+              u'local.rs'
+            function*
+              u'<std::thread::local::LocalKey<T>>::with'
+            lineno (function takes precedence)
+              255
+          frame*
+            filename*
+              u'local.rs'
+            function*
+              u'<std::thread::local::LocalKey<T>>::try_with'
+            lineno (function takes precedence)
+              309
+          frame*
+            filename*
+              u'lib.rs'
+            function*
+              u"<tokio_current_thread::Borrow<'a, U>>::enter::{{closure}}"
+            lineno (function takes precedence)
+              778
+          frame*
+            filename*
+              u'lib.rs'
+            function*
+              u'tokio_current_thread::CurrentRunner::set_spawn'
+            lineno (function takes precedence)
+              816
+          frame*
+            filename*
+              u'lib.rs'
+            function*
+              u"<tokio_current_thread::Borrow<'a, U>>::enter::{{closure}}::{{closure}}"
+            lineno (function takes precedence)
+              779
+          frame*
+            filename*
+              u'scheduler.rs'
+            function*
+              u'<tokio_current_thread::scheduler::Scheduler<U>>::tick::{{closure}}'
+            lineno (function takes precedence)
+              333
+          frame*
+            filename*
+              u'scheduler.rs'
+            function*
+              u"<tokio_current_thread::scheduler::Scheduled<'a, U>>::tick"
+            lineno (function takes precedence)
+              354
+          frame*
+            filename*
+              u'mod.rs'
+            function*
+              u'<futures::task_impl::Spawn<T>>::poll_future_notify'
+            lineno (function takes precedence)
+              326
+          frame*
+            filename*
+              u'mod.rs'
+            function*
+              u'<futures::task_impl::Spawn<T>>::poll_fn_notify'
+            lineno (function takes precedence)
+              288
+          frame*
+            filename*
+              u'mod.rs'
+            function*
+              u'<futures::task_impl::Spawn<T>>::enter'
+            lineno (function takes precedence)
+              396
+          frame*
+            filename*
+              u'mod.rs'
+            function*
+              u'futures::task_impl::std::set'
+            lineno (function takes precedence)
+              78
+          frame*
+            filename*
+              u'mod.rs'
+            function*
+              u'<futures::task_impl::Spawn<T>>::enter::{{closure}}'
+            lineno (function takes precedence)
+              396
+          frame*
+            filename*
+              u'mod.rs'
+            function*
+              u'<futures::task_impl::Spawn<T>>::poll_future_notify::{{closure}}'
+            lineno (function takes precedence)
+              326
+          frame*
+            filename*
+              u'mod.rs'
+            function*
+              u'<alloc::boxed::Box<F> as futures::future::Future>::poll'
+            lineno (function takes precedence)
+              113
+          frame*
+            filename*
+              u'then.rs'
+            function*
+              u'<futures::future::then::Then<A, B, F> as futures::future::Future>::poll'
+            lineno (function takes precedence)
+              32
+          frame*
+            filename*
+              u'chain.rs'
+            function*
+              u'<futures::future::chain::Chain<A, B, C>>::poll'
+            lineno (function takes precedence)
+              26
+          frame*
+            filename*
+              u'either.rs'
+            function*
+              u'<futures::future::either::Either<A, B> as futures::future::Future>::poll'
+            lineno (function takes precedence)
+              35
+          frame (ignored due to recursion)
+            filename*
+              u'either.rs'
+            function*
+              u'<futures::future::either::Either<A, B> as futures::future::Future>::poll'
+            lineno (function takes precedence)
+              35
+          frame*
+            filename*
+              u'acceptor.rs'
+            function*
+              u'<actix_web::server::acceptor::ServerMessageAcceptorServiceFut<T> as futures::future::Future>::poll'
+            lineno (function takes precedence)
+              378
+          frame*
+            filename*
+              u'and_then.rs'
+            function*
+              u'<actix_net::service::and_then::AndThenFuture<A, B> as futures::future::Future>::poll'
+            lineno (function takes precedence)
+              94
+          frame*
+            filename*
+              u'map_err.rs'
+            function*
+              u'<actix_net::service::map_err::MapErrFuture<A, F, E> as futures::future::Future>::poll'
+            lineno (function takes precedence)
+              92
+          frame*
+            filename*
+              u'channel.rs'
+            function*
+              u'<actix_web::server::channel::HttpChannel<T, H> as futures::future::Future>::poll'
+            lineno (function takes precedence)
+              155
+          frame*
+            filename*
+              u'channel.rs'
+            function*
+              u'<actix_web::server::channel::HttpChannel<T, H> as futures::future::Future>::poll'
+            lineno (function takes precedence)
+              105
+          frame*
+            filename*
+              u'h1.rs'
+            function*
+              u'<actix_web::server::h1::Http1Dispatcher<T, H>>::poll'
+            lineno (function takes precedence)
+              223
+          frame*
+            filename*
+              u'h1.rs'
+            function*
+              u'<actix_web::server::h1::Http1Dispatcher<T, H>>::poll_handler'
+            lineno (function takes precedence)
+              376
+          frame*
+            filename*
+              u'h1.rs'
+            function*
+              u'<actix_web::server::h1::Http1Dispatcher<T, H>>::poll_io'
+            lineno (function takes precedence)
+              348
+          frame*
+            filename*
+              u'h1.rs'
+            function*
+              u'<actix_web::server::h1::Http1Dispatcher<T, H>>::parse'
+            lineno (function takes precedence)
+              506
+          frame*
+            filename*
+              u'pipeline.rs'
+            function*
+              u'<actix_web::pipeline::Pipeline<S, H> as actix_web::server::handler::HttpHandlerTask>::poll_io'
+            lineno (function takes precedence)
+              126
+          frame*
+            filename*
+              u'<::log::macros::log macros>'
+            function*
+              u'<actix_web::pipeline::ProcessResponse<S, H>>::poll_io'
+            lineno (function takes precedence)
+              5
+          frame*
+            filename*
+              u'lib.rs'
+            function*
+              u'log::__private_api_log'
+            lineno (function takes precedence)
+              1232
+          frame*
+            filename*
+              u'log.rs'
+            function*
+              u'<sentry::integrations::log::Logger as log::Log>::log'
+            lineno (function takes precedence)
+              184
+          frame*
+            filename*
+              u'hub.rs'
+            function*
+              u'sentry::hub::Hub::with_active'
+            lineno (function takes precedence)
+              208
+          frame*
+            filename*
+              u'hub.rs'
+            function*
+              u'sentry::hub::Hub::with'
+            lineno (function takes precedence)
+              190
+          frame*
+            filename*
+              u'local.rs'
+            function*
+              u'<std::thread::local::LocalKey<T>>::with'
+            lineno (function takes precedence)
+              255
+          frame*
+            filename*
+              u'local.rs'
+            function*
+              u'<std::thread::local::LocalKey<T>>::try_with'
+            lineno (function takes precedence)
+              309
+          frame*
+            filename*
+              u'hub.rs'
+            function*
+              u'sentry::hub::Hub::with::{{closure}}'
+            lineno (function takes precedence)
+              192
+          frame*
+            filename*
+              u'hub.rs'
+            function*
+              u'sentry::hub::Hub::with_active::{{closure}}'
+            lineno (function takes precedence)
+              210
+        type*
+          u'actix_web::pipeline'
+        value (stacktrace and type take precedence)
+          u'Error occurred during request handling, status: 500 Internal Server Error Something went really wrong here'
diff --git a/tests/sentry/event_hashing/fixtures/aspnetcore.json b/tests/sentry/event_hashing/fixtures/aspnetcore.json
new file mode 100644
index 0000000000..fc74389426
--- /dev/null
+++ b/tests/sentry/event_hashing/fixtures/aspnetcore.json
@@ -0,0 +1,248 @@
+{
+  "culprit": "SentryTest2.Controllers.ValuesController in Get",
+  "event_id": "33234783df934474926b229431daf7b0",
+  "environment": "Development",
+  "platform": "csharp",
+  "logger": "Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddle...",
+  "fingerprint": [
+    "{{ default }}"
+  ],
+  "exception": {
+    "values": [
+      {
+        "stacktrace": {
+          "frames": [
+            {
+              "function": "Invoke",
+              "package": "Microsoft.AspNetCore.Diagnostics, Version=2.2.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60",
+              "module": "Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware",
+              "context_line": "Void MoveNext()",
+              "in_app": false
+            },
+            {
+              "function": "HandleNonSuccessAndDebuggerNotification",
+              "package": "System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e",
+              "module": "System.Runtime.CompilerServices.TaskAwaiter",
+              "context_line": "Void HandleNonSuccessAndDebuggerNotification(System.Threading.Tasks.Task)",
+              "in_app": false
+            },
+            {
+              "function": "Throw",
+              "package": "System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e",
+              "module": "System.Runtime.ExceptionServices.ExceptionDispatchInfo",
+              "context_line": "Void Throw()",
+              "in_app": false
+            },
+            {
+              "function": "Invoke",
+              "package": "Microsoft.AspNetCore.Routing, Version=2.2.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60",
+              "module": "Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware",
+              "context_line": "Void MoveNext()",
+              "in_app": false
+            },
+            {
+              "function": "HandleNonSuccessAndDebuggerNotification",
+              "package": "System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e",
+              "module": "System.Runtime.CompilerServices.TaskAwaiter",
+              "context_line": "Void HandleNonSuccessAndDebuggerNotification(System.Threading.Tasks.Task)",
+              "in_app": false
+            },
+            {
+              "function": "Throw",
+              "package": "System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e",
+              "module": "System.Runtime.ExceptionServices.ExceptionDispatchInfo",
+              "context_line": "Void Throw()",
+              "in_app": false
+            },
+            {
+              "function": "Invoke",
+              "package": "Microsoft.AspNetCore.Routing, Version=2.2.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60",
+              "module": "Microsoft.AspNetCore.Routing.EndpointMiddleware",
+              "context_line": "Void MoveNext()",
+              "in_app": false
+            },
+            {
+              "function": "HandleNonSuccessAndDebuggerNotification",
+              "package": "System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e",
+              "module": "System.Runtime.CompilerServices.TaskAwaiter",
+              "context_line": "Void HandleNonSuccessAndDebuggerNotification(System.Threading.Tasks.Task)",
+              "in_app": false
+            },
+            {
+              "function": "Throw",
+              "package": "System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e",
+              "module": "System.Runtime.ExceptionServices.ExceptionDispatchInfo",
+              "context_line": "Void Throw()",
+              "in_app": false
+            },
+            {
+              "function": "InvokeAsync",
+              "package": "Microsoft.AspNetCore.Mvc.Core, Version=2.2.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60",
+              "module": "Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker",
+              "context_line": "Void MoveNext()",
+              "in_app": false
+            },
+            {
+              "function": "HandleNonSuccessAndDebuggerNotification",
+              "package": "System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e",
+              "module": "System.Runtime.CompilerServices.TaskAwaiter",
+              "context_line": "Void HandleNonSuccessAndDebuggerNotification(System.Threading.Tasks.Task)",
+              "in_app": false
+            },
+            {
+              "function": "Throw",
+              "package": "System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e",
+              "module": "System.Runtime.ExceptionServices.ExceptionDispatchInfo",
+              "context_line": "Void Throw()",
+              "in_app": false
+            },
+            {
+              "function": "InvokeFilterPipelineAsync",
+              "package": "Microsoft.AspNetCore.Mvc.Core, Version=2.2.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60",
+              "module": "Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker",
+              "context_line": "Void MoveNext()",
+              "in_app": false
+            },
+            {
+              "function": "Next",
+              "package": "Microsoft.AspNetCore.Mvc.Core, Version=2.2.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60",
+              "module": "Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker",
+              "context_line": "System.Threading.Tasks.Task Next(State ByRef, Scope ByRef, System.Object ByRef, Boolean ByRef)",
+              "in_app": false
+            },
+            {
+              "function": "Rethrow",
+              "package": "Microsoft.AspNetCore.Mvc.Core, Version=2.2.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60",
+              "module": "Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker",
+              "context_line": "Void Rethrow(Microsoft.AspNetCore.Mvc.Filters.ResourceExecutedContext)",
+              "in_app": false
+            },
+            {
+              "function": "Throw",
+              "package": "System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e",
+              "module": "System.Runtime.ExceptionServices.ExceptionDispatchInfo",
+              "context_line": "Void Throw()",
+              "in_app": false
+            },
+            {
+              "function": "InvokeNextResourceFilter",
+              "package": "Microsoft.AspNetCore.Mvc.Core, Version=2.2.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60",
+              "module": "Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker",
+              "context_line": "Void MoveNext()",
+              "in_app": false
+            },
+            {
+              "function": "HandleNonSuccessAndDebuggerNotification",
+              "package": "System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e",
+              "module": "System.Runtime.CompilerServices.TaskAwaiter",
+              "context_line": "Void HandleNonSuccessAndDebuggerNotification(System.Threading.Tasks.Task)",
+              "in_app": false
+            },
+            {
+              "function": "Throw",
+              "package": "System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e",
+              "module": "System.Runtime.ExceptionServices.ExceptionDispatchInfo",
+              "context_line": "Void Throw()",
+              "in_app": false
+            },
+            {
+              "function": "InvokeInnerFilterAsync",
+              "package": "Microsoft.AspNetCore.Mvc.Core, Version=2.2.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60",
+              "module": "Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker",
+              "context_line": "Void MoveNext()",
+              "in_app": false
+            },
+            {
+              "function": "Next",
+              "package": "Microsoft.AspNetCore.Mvc.Core, Version=2.2.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60",
+              "module": "Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker",
+              "context_line": "System.Threading.Tasks.Task Next(State ByRef, Scope ByRef, System.Object ByRef, Boolean ByRef)",
+              "in_app": false
+            },
+            {
+              "function": "Rethrow",
+              "package": "Microsoft.AspNetCore.Mvc.Core, Version=2.2.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60",
+              "module": "Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker",
+              "context_line": "Void Rethrow(Microsoft.AspNetCore.Mvc.Filters.ActionExecutedContext)",
+              "in_app": false
+            },
+            {
+              "function": "Throw",
+              "package": "System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e",
+              "module": "System.Runtime.ExceptionServices.ExceptionDispatchInfo",
+              "context_line": "Void Throw()",
+              "in_app": false
+            },
+            {
+              "function": "InvokeNextActionFilterAsync",
+              "package": "Microsoft.AspNetCore.Mvc.Core, Version=2.2.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60",
+              "module": "Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker",
+              "context_line": "Void MoveNext()",
+              "in_app": false
+            },
+            {
+              "function": "HandleNonSuccessAndDebuggerNotification",
+              "package": "System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e",
+              "module": "System.Runtime.CompilerServices.TaskAwaiter",
+              "context_line": "Void HandleNonSuccessAndDebuggerNotification(System.Threading.Tasks.Task)",
+              "in_app": false
+            },
+            {
+              "function": "Throw",
+              "package": "System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e",
+              "module": "System.Runtime.ExceptionServices.ExceptionDispatchInfo",
+              "context_line": "Void Throw()",
+              "in_app": false
+            },
+            {
+              "function": "InvokeActionMethodAsync",
+              "package": "Microsoft.AspNetCore.Mvc.Core, Version=2.2.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60",
+              "module": "Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker",
+              "context_line": "Void MoveNext()",
+              "in_app": false
+            },
+            {
+              "function": "Execute",
+              "package": "Microsoft.AspNetCore.Mvc.Core, Version=2.2.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60",
+              "module": "Microsoft.AspNetCore.Mvc.Internal.ActionMethodExecutor+SyncObjectResultExecutor",
+              "context_line": "System.Threading.Tasks.ValueTask`1[Microsoft.AspNetCore.Mvc.IActionResult] Execute(Microsoft.AspNetCore.Mvc.Infrastructure.IActionResultTypeMapper, Microsoft.Extensions.Internal.ObjectMethodExecutor, System.Object, System.Object[])",
+              "in_app": false
+            },
+            {
+              "function": "Execute",
+              "package": "Microsoft.AspNetCore.Mvc.Core, Version=2.2.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60",
+              "module": "Microsoft.Extensions.Internal.ObjectMethodExecutor",
+              "context_line": "System.Object Execute(System.Object, System.Object[])",
+              "in_app": false
+            },
+            {
+              "function": "lambda_method",
+              "module": "(unknown)",
+              "context_line": "System.Object lambda_method(System.Runtime.CompilerServices.Closure, System.Object, System.Object[])",
+              "in_app": true
+            },
+            {
+              "function": "Get",
+              "abs_path": "C:\\Users\\dvora\\source\\repos\\SentryTest2\\SentryTest2\\Controllers\\ValuesController.cs",
+              "package": "SentryTest2, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null",
+              "module": "SentryTest2.Controllers.ValuesController",
+              "filename": "C:\\Users\\dvora\\source\\repos\\SentryTest2\\SentryTest2\\Controllers\\ValuesController.cs",
+              "lineno": 27,
+              "colno": 13,
+              "in_app": true,
+              "context_line": "Microsoft.AspNetCore.Mvc.ActionResult`1[System.String] Get(Int32)"
+            }
+          ]
+        },
+        "type": "System.Exception",
+        "value": "sync exception",
+        "module": "System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e",
+        "thread_id": 16
+      }
+    ]
+  },
+  "logentry": {
+    "formatted": "An unhandled exception has occurred while executing the request."
+  },
+  "release": null
+}
diff --git a/tests/sentry/event_hashing/fixtures/aspnetcore.out b/tests/sentry/event_hashing/fixtures/aspnetcore.out
new file mode 100644
index 0000000000..e293d443c8
--- /dev/null
+++ b/tests/sentry/event_hashing/fixtures/aspnetcore.out
@@ -0,0 +1,524 @@
+app:
+  hash: None
+  component:
+    app (exception of system takes precedence)
+      exception (ignored because this variant does not contain a stacktrace, but but the system variant does)
+        stacktrace (less than 10% of frames are in-app)
+          frame (non app frame)
+            module*
+              u'Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware'
+            filename (module takes precedence)
+            context-line*
+              u'Void MoveNext()'
+            function (function name is used only if module or filename are available)
+              u'Invoke'
+          frame (non app frame)
+            module*
+              u'System.Runtime.CompilerServices.TaskAwaiter'
+            filename (module takes precedence)
+            context-line*
+              u'Void HandleNonSuccessAndDebuggerNotification(System.Threading.Tasks.Task)'
+            function (function name is used only if module or filename are available)
+              u'HandleNonSuccessAndDebuggerNotification'
+          frame (non app frame)
+            module*
+              u'System.Runtime.ExceptionServices.ExceptionDispatchInfo'
+            filename (module takes precedence)
+            context-line*
+              u'Void Throw()'
+            function (function name is used only if module or filename are available)
+              u'Throw'
+          frame (non app frame)
+            module*
+              u'Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware'
+            filename (module takes precedence)
+            context-line*
+              u'Void MoveNext()'
+            function (function name is used only if module or filename are available)
+              u'Invoke'
+          frame (non app frame)
+            module*
+              u'System.Runtime.CompilerServices.TaskAwaiter'
+            filename (module takes precedence)
+            context-line*
+              u'Void HandleNonSuccessAndDebuggerNotification(System.Threading.Tasks.Task)'
+            function (function name is used only if module or filename are available)
+              u'HandleNonSuccessAndDebuggerNotification'
+          frame (non app frame)
+            module*
+              u'System.Runtime.ExceptionServices.ExceptionDispatchInfo'
+            filename (module takes precedence)
+            context-line*
+              u'Void Throw()'
+            function (function name is used only if module or filename are available)
+              u'Throw'
+          frame (non app frame)
+            module*
+              u'Microsoft.AspNetCore.Routing.EndpointMiddleware'
+            filename (module takes precedence)
+            context-line*
+              u'Void MoveNext()'
+            function (function name is used only if module or filename are available)
+              u'Invoke'
+          frame (non app frame)
+            module*
+              u'System.Runtime.CompilerServices.TaskAwaiter'
+            filename (module takes precedence)
+            context-line*
+              u'Void HandleNonSuccessAndDebuggerNotification(System.Threading.Tasks.Task)'
+            function (function name is used only if module or filename are available)
+              u'HandleNonSuccessAndDebuggerNotification'
+          frame (non app frame)
+            module*
+              u'System.Runtime.ExceptionServices.ExceptionDispatchInfo'
+            filename (module takes precedence)
+            context-line*
+              u'Void Throw()'
+            function (function name is used only if module or filename are available)
+              u'Throw'
+          frame (non app frame)
+            module*
+              u'Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker'
+            filename (module takes precedence)
+            context-line*
+              u'Void MoveNext()'
+            function (function name is used only if module or filename are available)
+              u'InvokeAsync'
+          frame (non app frame)
+            module*
+              u'System.Runtime.CompilerServices.TaskAwaiter'
+            filename (module takes precedence)
+            context-line*
+              u'Void HandleNonSuccessAndDebuggerNotification(System.Threading.Tasks.Task)'
+            function (function name is used only if module or filename are available)
+              u'HandleNonSuccessAndDebuggerNotification'
+          frame (non app frame)
+            module*
+              u'System.Runtime.ExceptionServices.ExceptionDispatchInfo'
+            filename (module takes precedence)
+            context-line*
+              u'Void Throw()'
+            function (function name is used only if module or filename are available)
+              u'Throw'
+          frame (non app frame)
+            module*
+              u'Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker'
+            filename (module takes precedence)
+            context-line*
+              u'Void MoveNext()'
+            function (function name is used only if module or filename are available)
+              u'InvokeFilterPipelineAsync'
+          frame (non app frame)
+            module*
+              u'Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker'
+            filename (module takes precedence)
+            context-line*
+              u'System.Threading.Tasks.Task Next(State ByRef, Scope ByRef, System.Object ByRef, Boolean ByRef)'
+            function (function name is used only if module or filename are available)
+              u'Next'
+          frame (non app frame)
+            module*
+              u'Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker'
+            filename (module takes precedence)
+            context-line*
+              u'Void Rethrow(Microsoft.AspNetCore.Mvc.Filters.ResourceExecutedContext)'
+            function (function name is used only if module or filename are available)
+              u'Rethrow'
+          frame (non app frame)
+            module*
+              u'System.Runtime.ExceptionServices.ExceptionDispatchInfo'
+            filename (module takes precedence)
+            context-line*
+              u'Void Throw()'
+            function (function name is used only if module or filename are available)
+              u'Throw'
+          frame (non app frame)
+            module*
+              u'Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker'
+            filename (module takes precedence)
+            context-line*
+              u'Void MoveNext()'
+            function (function name is used only if module or filename are available)
+              u'InvokeNextResourceFilter'
+          frame (non app frame)
+            module*
+              u'System.Runtime.CompilerServices.TaskAwaiter'
+            filename (module takes precedence)
+            context-line*
+              u'Void HandleNonSuccessAndDebuggerNotification(System.Threading.Tasks.Task)'
+            function (function name is used only if module or filename are available)
+              u'HandleNonSuccessAndDebuggerNotification'
+          frame (non app frame)
+            module*
+              u'System.Runtime.ExceptionServices.ExceptionDispatchInfo'
+            filename (module takes precedence)
+            context-line*
+              u'Void Throw()'
+            function (function name is used only if module or filename are available)
+              u'Throw'
+          frame (non app frame)
+            module*
+              u'Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker'
+            filename (module takes precedence)
+            context-line*
+              u'Void MoveNext()'
+            function (function name is used only if module or filename are available)
+              u'InvokeInnerFilterAsync'
+          frame (non app frame)
+            module*
+              u'Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker'
+            filename (module takes precedence)
+            context-line*
+              u'System.Threading.Tasks.Task Next(State ByRef, Scope ByRef, System.Object ByRef, Boolean ByRef)'
+            function (function name is used only if module or filename are available)
+              u'Next'
+          frame (non app frame)
+            module*
+              u'Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker'
+            filename (module takes precedence)
+            context-line*
+              u'Void Rethrow(Microsoft.AspNetCore.Mvc.Filters.ActionExecutedContext)'
+            function (function name is used only if module or filename are available)
+              u'Rethrow'
+          frame (non app frame)
+            module*
+              u'System.Runtime.ExceptionServices.ExceptionDispatchInfo'
+            filename (module takes precedence)
+            context-line*
+              u'Void Throw()'
+            function (function name is used only if module or filename are available)
+              u'Throw'
+          frame (non app frame)
+            module*
+              u'Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker'
+            filename (module takes precedence)
+            context-line*
+              u'Void MoveNext()'
+            function (function name is used only if module or filename are available)
+              u'InvokeNextActionFilterAsync'
+          frame (non app frame)
+            module*
+              u'System.Runtime.CompilerServices.TaskAwaiter'
+            filename (module takes precedence)
+            context-line*
+              u'Void HandleNonSuccessAndDebuggerNotification(System.Threading.Tasks.Task)'
+            function (function name is used only if module or filename are available)
+              u'HandleNonSuccessAndDebuggerNotification'
+          frame (non app frame)
+            module*
+              u'System.Runtime.ExceptionServices.ExceptionDispatchInfo'
+            filename (module takes precedence)
+            context-line*
+              u'Void Throw()'
+            function (function name is used only if module or filename are available)
+              u'Throw'
+          frame (non app frame)
+            module*
+              u'Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker'
+            filename (module takes precedence)
+            context-line*
+              u'Void MoveNext()'
+            function (function name is used only if module or filename are available)
+              u'InvokeActionMethodAsync'
+          frame (non app frame)
+            module*
+              u'Microsoft.AspNetCore.Mvc.Internal.ActionMethodExecutor+SyncObjectResultExecutor'
+            filename (module takes precedence)
+            context-line (discarded because line too long)
+            function*
+              u'Execute'
+          frame (non app frame)
+            module*
+              u'Microsoft.Extensions.Internal.ObjectMethodExecutor'
+            filename (module takes precedence)
+            context-line*
+              u'System.Object Execute(System.Object, System.Object[])'
+            function (function name is used only if module or filename are available)
+              u'Execute'
+          frame*
+            module*
+              u'(unknown)'
+            filename (module takes precedence)
+            context-line*
+              u'System.Object lambda_method(System.Runtime.CompilerServices.Closure, System.Object, System.Object[])'
+            function (function name is used only if module or filename are available)
+              u'lambda_method'
+          frame*
+            module*
+              u'SentryTest2.Controllers.ValuesController'
+            filename (module takes precedence)
+              u'C:\\Users\\dvora\\source\\repos\\SentryTest2\\SentryTest2\\Controllers\\ValuesController.cs'
+            context-line*
+              u'Microsoft.AspNetCore.Mvc.ActionResult`1[System.String] Get(Int32)'
+            function (line number is used only if module or filename are available)
+              27
+        type*
+          u'System.Exception'
+        value*
+          u'sync exception'
+--------------------------------------------------------------------------
+default:
+  hash: None
+  component:
+    default (exception of system takes precedence)
+      message (exception of system takes precedence)
+        u'An unhandled exception has occurred while executing the request.'
+--------------------------------------------------------------------------
+system:
+  hash: '13dfa104801704079b63004347f8fae6'
+  component:
+    system*
+      exception*
+        stacktrace*
+          frame*
+            module*
+              u'Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware'
+            filename (module takes precedence)
+            context-line*
+              u'Void MoveNext()'
+            function (function name is used only if module or filename are available)
+              u'Invoke'
+          frame*
+            module*
+              u'System.Runtime.CompilerServices.TaskAwaiter'
+            filename (module takes precedence)
+            context-line*
+              u'Void HandleNonSuccessAndDebuggerNotification(System.Threading.Tasks.Task)'
+            function (function name is used only if module or filename are available)
+              u'HandleNonSuccessAndDebuggerNotification'
+          frame*
+            module*
+              u'System.Runtime.ExceptionServices.ExceptionDispatchInfo'
+            filename (module takes precedence)
+            context-line*
+              u'Void Throw()'
+            function (function name is used only if module or filename are available)
+              u'Throw'
+          frame*
+            module*
+              u'Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware'
+            filename (module takes precedence)
+            context-line*
+              u'Void MoveNext()'
+            function (function name is used only if module or filename are available)
+              u'Invoke'
+          frame*
+            module*
+              u'System.Runtime.CompilerServices.TaskAwaiter'
+            filename (module takes precedence)
+            context-line*
+              u'Void HandleNonSuccessAndDebuggerNotification(System.Threading.Tasks.Task)'
+            function (function name is used only if module or filename are available)
+              u'HandleNonSuccessAndDebuggerNotification'
+          frame*
+            module*
+              u'System.Runtime.ExceptionServices.ExceptionDispatchInfo'
+            filename (module takes precedence)
+            context-line*
+              u'Void Throw()'
+            function (function name is used only if module or filename are available)
+              u'Throw'
+          frame*
+            module*
+              u'Microsoft.AspNetCore.Routing.EndpointMiddleware'
+            filename (module takes precedence)
+            context-line*
+              u'Void MoveNext()'
+            function (function name is used only if module or filename are available)
+              u'Invoke'
+          frame*
+            module*
+              u'System.Runtime.CompilerServices.TaskAwaiter'
+            filename (module takes precedence)
+            context-line*
+              u'Void HandleNonSuccessAndDebuggerNotification(System.Threading.Tasks.Task)'
+            function (function name is used only if module or filename are available)
+              u'HandleNonSuccessAndDebuggerNotification'
+          frame*
+            module*
+              u'System.Runtime.ExceptionServices.ExceptionDispatchInfo'
+            filename (module takes precedence)
+            context-line*
+              u'Void Throw()'
+            function (function name is used only if module or filename are available)
+              u'Throw'
+          frame*
+            module*
+              u'Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker'
+            filename (module takes precedence)
+            context-line*
+              u'Void MoveNext()'
+            function (function name is used only if module or filename are available)
+              u'InvokeAsync'
+          frame*
+            module*
+              u'System.Runtime.CompilerServices.TaskAwaiter'
+            filename (module takes precedence)
+            context-line*
+              u'Void HandleNonSuccessAndDebuggerNotification(System.Threading.Tasks.Task)'
+            function (function name is used only if module or filename are available)
+              u'HandleNonSuccessAndDebuggerNotification'
+          frame*
+            module*
+              u'System.Runtime.ExceptionServices.ExceptionDispatchInfo'
+            filename (module takes precedence)
+            context-line*
+              u'Void Throw()'
+            function (function name is used only if module or filename are available)
+              u'Throw'
+          frame*
+            module*
+              u'Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker'
+            filename (module takes precedence)
+            context-line*
+              u'Void MoveNext()'
+            function (function name is used only if module or filename are available)
+              u'InvokeFilterPipelineAsync'
+          frame*
+            module*
+              u'Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker'
+            filename (module takes precedence)
+            context-line*
+              u'System.Threading.Tasks.Task Next(State ByRef, Scope ByRef, System.Object ByRef, Boolean ByRef)'
+            function (function name is used only if module or filename are available)
+              u'Next'
+          frame*
+            module*
+              u'Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker'
+            filename (module takes precedence)
+            context-line*
+              u'Void Rethrow(Microsoft.AspNetCore.Mvc.Filters.ResourceExecutedContext)'
+            function (function name is used only if module or filename are available)
+              u'Rethrow'
+          frame*
+            module*
+              u'System.Runtime.ExceptionServices.ExceptionDispatchInfo'
+            filename (module takes precedence)
+            context-line*
+              u'Void Throw()'
+            function (function name is used only if module or filename are available)
+              u'Throw'
+          frame*
+            module*
+              u'Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker'
+            filename (module takes precedence)
+            context-line*
+              u'Void MoveNext()'
+            function (function name is used only if module or filename are available)
+              u'InvokeNextResourceFilter'
+          frame*
+            module*
+              u'System.Runtime.CompilerServices.TaskAwaiter'
+            filename (module takes precedence)
+            context-line*
+              u'Void HandleNonSuccessAndDebuggerNotification(System.Threading.Tasks.Task)'
+            function (function name is used only if module or filename are available)
+              u'HandleNonSuccessAndDebuggerNotification'
+          frame*
+            module*
+              u'System.Runtime.ExceptionServices.ExceptionDispatchInfo'
+            filename (module takes precedence)
+            context-line*
+              u'Void Throw()'
+            function (function name is used only if module or filename are available)
+              u'Throw'
+          frame*
+            module*
+              u'Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker'
+            filename (module takes precedence)
+            context-line*
+              u'Void MoveNext()'
+            function (function name is used only if module or filename are available)
+              u'InvokeInnerFilterAsync'
+          frame*
+            module*
+              u'Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker'
+            filename (module takes precedence)
+            context-line*
+              u'System.Threading.Tasks.Task Next(State ByRef, Scope ByRef, System.Object ByRef, Boolean ByRef)'
+            function (function name is used only if module or filename are available)
+              u'Next'
+          frame*
+            module*
+              u'Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker'
+            filename (module takes precedence)
+            context-line*
+              u'Void Rethrow(Microsoft.AspNetCore.Mvc.Filters.ActionExecutedContext)'
+            function (function name is used only if module or filename are available)
+              u'Rethrow'
+          frame*
+            module*
+              u'System.Runtime.ExceptionServices.ExceptionDispatchInfo'
+            filename (module takes precedence)
+            context-line*
+              u'Void Throw()'
+            function (function name is used only if module or filename are available)
+              u'Throw'
+          frame*
+            module*
+              u'Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker'
+            filename (module takes precedence)
+            context-line*
+              u'Void MoveNext()'
+            function (function name is used only if module or filename are available)
+              u'InvokeNextActionFilterAsync'
+          frame*
+            module*
+              u'System.Runtime.CompilerServices.TaskAwaiter'
+            filename (module takes precedence)
+            context-line*
+              u'Void HandleNonSuccessAndDebuggerNotification(System.Threading.Tasks.Task)'
+            function (function name is used only if module or filename are available)
+              u'HandleNonSuccessAndDebuggerNotification'
+          frame*
+            module*
+              u'System.Runtime.ExceptionServices.ExceptionDispatchInfo'
+            filename (module takes precedence)
+            context-line*
+              u'Void Throw()'
+            function (function name is used only if module or filename are available)
+              u'Throw'
+          frame*
+            module*
+              u'Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker'
+            filename (module takes precedence)
+            context-line*
+              u'Void MoveNext()'
+            function (function name is used only if module or filename are available)
+              u'InvokeActionMethodAsync'
+          frame*
+            module*
+              u'Microsoft.AspNetCore.Mvc.Internal.ActionMethodExecutor+SyncObjectResultExecutor'
+            filename (module takes precedence)
+            context-line (discarded because line too long)
+            function*
+              u'Execute'
+          frame*
+            module*
+              u'Microsoft.Extensions.Internal.ObjectMethodExecutor'
+            filename (module takes precedence)
+            context-line*
+              u'System.Object Execute(System.Object, System.Object[])'
+            function (function name is used only if module or filename are available)
+              u'Execute'
+          frame*
+            module*
+              u'(unknown)'
+            filename (module takes precedence)
+            context-line*
+              u'System.Object lambda_method(System.Runtime.CompilerServices.Closure, System.Object, System.Object[])'
+            function (function name is used only if module or filename are available)
+              u'lambda_method'
+          frame*
+            module*
+              u'SentryTest2.Controllers.ValuesController'
+            filename (module takes precedence)
+              u'C:\\Users\\dvora\\source\\repos\\SentryTest2\\SentryTest2\\Controllers\\ValuesController.cs'
+            context-line*
+              u'Microsoft.AspNetCore.Mvc.ActionResult`1[System.String] Get(Int32)'
+            function (line number is used only if module or filename are available)
+              27
+        type*
+          u'System.Exception'
+        value (stacktrace and type take precedence)
+          u'sync exception'
diff --git a/tests/sentry/event_hashing/fixtures/connection-error.json b/tests/sentry/event_hashing/fixtures/connection-error.json
new file mode 100644
index 0000000000..1fc57fc803
--- /dev/null
+++ b/tests/sentry/event_hashing/fixtures/connection-error.json
@@ -0,0 +1,293 @@
+{
+  "event_id": "50cd6e1cc518425b8ac140b6c92a7f1c",
+  "project": 1,
+  "release": "03c6b061237d939a87c32ae832097e99b29f02f8",
+  "dist": null,
+  "platform": "python",
+  "time_spent": null,
+  "culprit": "/api/{project_id}/store/",
+  "environment": "prod",
+  "exception": {
+    "values": [
+      {
+        "stacktrace": {
+          "frames": [
+            {
+              "function": "safe_execute",
+              "abs_path": "/usr/src/getsentry/src/sentry/src/sentry/utils/safe.py",
+              "pre_context": [
+                "    try:",
+                "        if _with_transaction:",
+                "            with transaction.atomic():",
+                "                result = func(*args, **kwargs)",
+                "        else:"
+              ],
+              "module": "sentry.utils.safe",
+              "filename": "sentry/utils/safe.py",
+              "post_context": [
+                "    except Exception as e:",
+                "        if hasattr(func, 'im_class'):",
+                "            cls = func.im_class",
+                "        else:",
+                "            cls = func.__class__"
+              ],
+              "in_app": true,
+              "context_line": "            result = func(*args, **kwargs)",
+              "lineno": 31
+            },
+            {
+              "function": "<lambda>",
+              "abs_path": "/usr/src/getsentry/src/sentry/src/sentry/utils/services.py",
+              "pre_context": [
+                "",
+                "    def expose(self, context):",
+                "        base = self._base",
+                "        for key in itertools.chain(base.__all__, ('validate', 'setup')):",
+                "            if inspect.ismethod(getattr(base, key)):"
+              ],
+              "module": "sentry.utils.services",
+              "filename": "sentry/utils/services.py",
+              "post_context": [
+                "            else:",
+                "                context[key] = getattr(base, key)",
+                "",
+                "",
+                "def resolve_callable(value):"
+              ],
+              "in_app": true,
+              "context_line": "                context[key] = (lambda f: lambda *a, **k: getattr(self, f)(*a, **k))(key)",
+              "lineno": 91
+            },
+            {
+              "function": "is_rate_limited",
+              "abs_path": "/usr/src/getsentry/getsentry/quotas.py",
+              "pre_context": [
+                "            return RateLimited(retry_after=None, reason_code='suspended')",
+                "        if not sub.is_active():",
+                "            return RateLimited(retry_after=None, reason_code='inactive_account')",
+                "        if sub.is_free_plan() and sub.flags.usage_exceeded:",
+                "            return RateLimited(retry_after=None, reason_code='usage_exceeded')"
+              ],
+              "module": "getsentry.quotas",
+              "filename": "getsentry/quotas.py",
+              "post_context": [
+                "",
+                "    def get_quotas(self, project, *args, **kwargs):",
+                "        quotas = super(SubscriptionQuota, self).get_quotas(project, *args, **kwargs)",
+                "        organization = project.organization",
+                "        sub = self._get_subscription(organization)"
+              ],
+              "in_app": true,
+              "context_line": "        return super(SubscriptionQuota, self).is_rate_limited(project, key=key)",
+              "lineno": 136
+            },
+            {
+              "function": "is_rate_limited",
+              "abs_path": "/usr/src/getsentry/src/sentry/src/sentry/quotas/redis.py",
+              "pre_context": [
+                "            keys.extend((key, return_key))",
+                "            expiry = self.get_next_period_start(quota.window, shift, timestamp) + self.grace",
+                "            args.extend((quota.limit, int(expiry)))",
+                "",
+                "        client = self.cluster.get_local_client_for_key(six.text_type(project.organization_id))"
+              ],
+              "module": "sentry.quotas.redis",
+              "filename": "sentry/quotas/redis.py",
+              "post_context": [
+                "        if any(rejections):",
+                "            enforce = False",
+                "            worst_case = (0, None)",
+                "            for quota, rejected in zip(quotas, rejections):",
+                "                if not rejected:"
+              ],
+              "in_app": true,
+              "context_line": "        rejections = is_rate_limited(client, keys, args)",
+              "lineno": 189
+            },
+            {
+              "function": "call_script",
+              "abs_path": "/usr/src/getsentry/src/sentry/src/sentry/utils/redis.py",
+              "pre_context": [
+                "",
+                "        Takes the client to execute the script on as the first argument,",
+                "        followed by the values that will be provided as ``KEYS`` and ``ARGV``",
+                "        to the script as two sequence arguments.",
+                "        \"\"\".format(path)"
+              ],
+              "module": "sentry.utils.redis",
+              "filename": "sentry/utils/redis.py",
+              "post_context": [
+                "",
+                "    return call_script"
+              ],
+              "in_app": true,
+              "context_line": "        return script(keys, args, client)",
+              "lineno": 239
+            },
+            {
+              "function": "__call__",
+              "abs_path": "/usr/local/lib/python2.7/site-packages/redis/client.py",
+              "pre_context": [
+                "        # make sure the Redis server knows about the script",
+                "        if isinstance(client, BasePipeline):",
+                "            # make sure this script is good to go on pipeline",
+                "            client.script_load_for_pipeline(self)",
+                "        try:"
+              ],
+              "module": "redis.client",
+              "filename": "redis/client.py",
+              "post_context": [
+                "        except NoScriptError:",
+                "            # Maybe the client is pointed to a differnet server than the client",
+                "            # that created this instance?",
+                "            self.sha = client.script_load(self.script)",
+                "            return client.evalsha(self.sha, len(keys), *args)"
+              ],
+              "in_app": false,
+              "context_line": "            return client.evalsha(self.sha, len(keys), *args)",
+              "lineno": 2694
+            },
+            {
+              "function": "evalsha",
+              "abs_path": "/usr/local/lib/python2.7/site-packages/redis/client.py",
+              "pre_context": [
+                "        of the script.",
+                "",
+                "        In practice, use the object returned by ``register_script``. This",
+                "        function exists purely for Redis API completion.",
+                "        \"\"\""
+              ],
+              "module": "redis.client",
+              "filename": "redis/client.py",
+              "post_context": [
+                "",
+                "    def script_exists(self, *args):",
+                "        \"\"\"",
+                "        Check if a script exists in the script cache by specifying the SHAs of",
+                "        each script as ``args``. Returns a list of boolean values indicating if"
+              ],
+              "in_app": false,
+              "context_line": "        return self.execute_command('EVALSHA', sha, numkeys, *keys_and_args)",
+              "lineno": 1944
+            },
+            {
+              "function": "execute_command",
+              "abs_path": "/usr/local/lib/python2.7/site-packages/redis/client.py",
+              "pre_context": [
+                "        except (ConnectionError, TimeoutError) as e:",
+                "            connection.disconnect()",
+                "            if not connection.retry_on_timeout and isinstance(e, TimeoutError):",
+                "                raise",
+                "            connection.send_command(*args)"
+              ],
+              "module": "redis.client",
+              "filename": "redis/client.py",
+              "post_context": [
+                "        finally:",
+                "            pool.release(connection)",
+                "",
+                "    def parse_response(self, connection, command_name, **options):",
+                "        \"Parses a response from the Redis server\""
+              ],
+              "in_app": false,
+              "context_line": "            return self.parse_response(connection, command_name, **options)",
+              "lineno": 579
+            },
+            {
+              "function": "parse_response",
+              "abs_path": "/usr/local/lib/python2.7/site-packages/redis/client.py",
+              "pre_context": [
+                "        finally:",
+                "            pool.release(connection)",
+                "",
+                "    def parse_response(self, connection, command_name, **options):",
+                "        \"Parses a response from the Redis server\""
+              ],
+              "module": "redis.client",
+              "filename": "redis/client.py",
+              "post_context": [
+                "        if command_name in self.response_callbacks:",
+                "            return self.response_callbacks[command_name](response, **options)",
+                "        return response",
+                "",
+                "    # SERVER INFORMATION"
+              ],
+              "in_app": false,
+              "context_line": "        response = connection.read_response()",
+              "lineno": 585
+            },
+            {
+              "function": "read_response",
+              "abs_path": "/usr/local/lib/python2.7/site-packages/redis/connection.py",
+              "pre_context": [
+                "            bool(select([sock], [], [], timeout)[0])",
+                "",
+                "    def read_response(self):",
+                "        \"Read the response from a previously sent command\"",
+                "        try:"
+              ],
+              "module": "redis.connection",
+              "filename": "redis/connection.py",
+              "post_context": [
+                "        except:",
+                "            self.disconnect()",
+                "            raise",
+                "        if isinstance(response, ResponseError):",
+                "            raise response"
+              ],
+              "in_app": false,
+              "context_line": "            response = self._parser.read_response()",
+              "lineno": 577
+            },
+            {
+              "function": "read_response",
+              "abs_path": "/usr/local/lib/python2.7/site-packages/redis/connection.py",
+              "pre_context": [
+                "            except socket.timeout:",
+                "                raise TimeoutError(\"Timeout reading from socket\")",
+                "            except socket.error:",
+                "                e = sys.exc_info()[1]",
+                "                raise ConnectionError(\"Error while reading from socket: %s\" %"
+              ],
+              "module": "redis.connection",
+              "filename": "redis/connection.py",
+              "post_context": [
+                "            if HIREDIS_USE_BYTE_BUFFER:",
+                "                self._reader.feed(self._buffer, 0, bufflen)",
+                "            else:",
+                "                self._reader.feed(buffer)",
+                "            response = self._reader.gets()"
+              ],
+              "in_app": false,
+              "context_line": "                                      (e.args,))",
+              "lineno": 357
+            }
+          ]
+        },
+        "type": "ConnectionError",
+        "module": "redis.exceptions",
+        "value": "Error while reading from socket: ('Connection closed by server.',)",
+        "mechanism": {
+          "type": "logging",
+          "handled": true
+        }
+      }
+    ]
+  },
+  "hashes": [
+    "8abb6be15864dac05d46e61bfe1dd6d3",
+    "6391c18be56c7e7c95e58be4b3eaf0bd"
+  ],
+  "key_id": "96623",
+  "level": "error",
+  "location": "sentry/utils/redis.py",
+  "logentry": {
+    "message": "%s.process_error",
+    "params": [
+      "<lambda>"
+    ],
+    "formatted": "<lambda>.process_error"
+  },
+  "logger": "sentry.safe.function",
+  "version": "7"
+}
diff --git a/tests/sentry/event_hashing/fixtures/connection-error.out b/tests/sentry/event_hashing/fixtures/connection-error.out
new file mode 100644
index 0000000000..d9a297e834
--- /dev/null
+++ b/tests/sentry/event_hashing/fixtures/connection-error.out
@@ -0,0 +1,226 @@
+app:
+  hash: '8abb6be15864dac05d46e61bfe1dd6d3'
+  component:
+    app*
+      exception*
+        stacktrace*
+          frame*
+            module*
+              u'sentry.utils.safe'
+            filename (module takes precedence)
+              u'sentry/utils/safe.py'
+            context-line*
+              u'            result = func(*args, **kwargs)'
+            function (line number is used only if module or filename are available)
+              31
+          frame*
+            module*
+              u'sentry.utils.services'
+            filename (module takes precedence)
+              u'sentry/utils/services.py'
+            context-line*
+              u'                context[key] = (lambda f: lambda *a, **k: getattr(self, f)(*a, **k))(key)'
+            function (line number is used only if module or filename are available)
+              91
+          frame*
+            module*
+              u'getsentry.quotas'
+            filename (module takes precedence)
+              u'getsentry/quotas.py'
+            context-line*
+              u'        return super(SubscriptionQuota, self).is_rate_limited(project, key=key)'
+            function (line number is used only if module or filename are available)
+              136
+          frame*
+            module*
+              u'sentry.quotas.redis'
+            filename (module takes precedence)
+              u'sentry/quotas/redis.py'
+            context-line*
+              u'        rejections = is_rate_limited(client, keys, args)'
+            function (line number is used only if module or filename are available)
+              189
+          frame*
+            module*
+              u'sentry.utils.redis'
+            filename (module takes precedence)
+              u'sentry/utils/redis.py'
+            context-line*
+              u'        return script(keys, args, client)'
+            function (line number is used only if module or filename are available)
+              239
+          frame (non app frame)
+            module*
+              u'redis.client'
+            filename (module takes precedence)
+              u'redis/client.py'
+            context-line*
+              u'            return client.evalsha(self.sha, len(keys), *args)'
+            function (line number is used only if module or filename are available)
+              2694
+          frame (non app frame)
+            module*
+              u'redis.client'
+            filename (module takes precedence)
+              u'redis/client.py'
+            context-line*
+              u"        return self.execute_command('EVALSHA', sha, numkeys, *keys_and_args)"
+            function (line number is used only if module or filename are available)
+              1944
+          frame (non app frame)
+            module*
+              u'redis.client'
+            filename (module takes precedence)
+              u'redis/client.py'
+            context-line*
+              u'            return self.parse_response(connection, command_name, **options)'
+            function (line number is used only if module or filename are available)
+              579
+          frame (non app frame)
+            module*
+              u'redis.client'
+            filename (module takes precedence)
+              u'redis/client.py'
+            context-line*
+              u'        response = connection.read_response()'
+            function (line number is used only if module or filename are available)
+              585
+          frame (non app frame)
+            module*
+              u'redis.connection'
+            filename (module takes precedence)
+              u'redis/connection.py'
+            context-line*
+              u'            response = self._parser.read_response()'
+            function (line number is used only if module or filename are available)
+              577
+          frame (non app frame)
+            module*
+              u'redis.connection'
+            filename (module takes precedence)
+              u'redis/connection.py'
+            context-line*
+              u'                                      (e.args,))'
+            function (line number is used only if module or filename are available)
+              357
+        type*
+          u'ConnectionError'
+        value (stacktrace and type take precedence)
+          u"Error while reading from socket: ('Connection closed by server.',)"
+--------------------------------------------------------------------------
+default:
+  hash: None
+  component:
+    default (exception of app takes precedence)
+      message (exception of app takes precedence)
+        u'%s.process_error'
+--------------------------------------------------------------------------
+system:
+  hash: '6391c18be56c7e7c95e58be4b3eaf0bd'
+  component:
+    system*
+      exception*
+        stacktrace*
+          frame*
+            module*
+              u'sentry.utils.safe'
+            filename (module takes precedence)
+              u'sentry/utils/safe.py'
+            context-line*
+              u'            result = func(*args, **kwargs)'
+            function (line number is used only if module or filename are available)
+              31
+          frame*
+            module*
+              u'sentry.utils.services'
+            filename (module takes precedence)
+              u'sentry/utils/services.py'
+            context-line*
+              u'                context[key] = (lambda f: lambda *a, **k: getattr(self, f)(*a, **k))(key)'
+            function (line number is used only if module or filename are available)
+              91
+          frame*
+            module*
+              u'getsentry.quotas'
+            filename (module takes precedence)
+              u'getsentry/quotas.py'
+            context-line*
+              u'        return super(SubscriptionQuota, self).is_rate_limited(project, key=key)'
+            function (line number is used only if module or filename are available)
+              136
+          frame*
+            module*
+              u'sentry.quotas.redis'
+            filename (module takes precedence)
+              u'sentry/quotas/redis.py'
+            context-line*
+              u'        rejections = is_rate_limited(client, keys, args)'
+            function (line number is used only if module or filename are available)
+              189
+          frame*
+            module*
+              u'sentry.utils.redis'
+            filename (module takes precedence)
+              u'sentry/utils/redis.py'
+            context-line*
+              u'        return script(keys, args, client)'
+            function (line number is used only if module or filename are available)
+              239
+          frame*
+            module*
+              u'redis.client'
+            filename (module takes precedence)
+              u'redis/client.py'
+            context-line*
+              u'            return client.evalsha(self.sha, len(keys), *args)'
+            function (line number is used only if module or filename are available)
+              2694
+          frame*
+            module*
+              u'redis.client'
+            filename (module takes precedence)
+              u'redis/client.py'
+            context-line*
+              u"        return self.execute_command('EVALSHA', sha, numkeys, *keys_and_args)"
+            function (line number is used only if module or filename are available)
+              1944
+          frame*
+            module*
+              u'redis.client'
+            filename (module takes precedence)
+              u'redis/client.py'
+            context-line*
+              u'            return self.parse_response(connection, command_name, **options)'
+            function (line number is used only if module or filename are available)
+              579
+          frame*
+            module*
+              u'redis.client'
+            filename (module takes precedence)
+              u'redis/client.py'
+            context-line*
+              u'        response = connection.read_response()'
+            function (line number is used only if module or filename are available)
+              585
+          frame*
+            module*
+              u'redis.connection'
+            filename (module takes precedence)
+              u'redis/connection.py'
+            context-line*
+              u'            response = self._parser.read_response()'
+            function (line number is used only if module or filename are available)
+              577
+          frame*
+            module*
+              u'redis.connection'
+            filename (module takes precedence)
+              u'redis/connection.py'
+            context-line*
+              u'                                      (e.args,))'
+            function (line number is used only if module or filename are available)
+              357
+        type*
+          u'ConnectionError'
+        value (stacktrace and type take precedence)
+          u"Error while reading from socket: ('Connection closed by server.',)"
diff --git a/tests/sentry/event_hashing/fixtures/csp-style-src-elem.json b/tests/sentry/event_hashing/fixtures/csp-style-src-elem.json
new file mode 100644
index 0000000000..00ef0d6a1a
--- /dev/null
+++ b/tests/sentry/event_hashing/fixtures/csp-style-src-elem.json
@@ -0,0 +1,21 @@
+{
+  "culprit": "style-src-elem",
+  "event_id": "98cb9e34db19495d98583d455719e784",
+  "platform": "other",
+  "logger": "csp",
+  "csp": {
+    "blocked_uri": "https://use.fontawesome.com/releases/v4.7.0/css/font-awesome-css.min.css",
+    "script_sample": "",
+    "referrer": "",
+    "violated_directive": "style-src-elem",
+    "document_uri": "https://sentry.io/mileiq-qw/avery/",
+    "original_policy": "default-src *; script-src 'self' 'unsafe-eval' 'unsafe-inline' s1.sentry-cdn.com cdn.ravenjs.com static.zdassets.com ajax.googleapis.com ssl.google-analytics.com www.googleadservices.com analytics.twitter.com platform.twitter.com *.pingdom.net js.stripe.com api.stripe.com statuspage-production.s3.amazonaws.com s3.amazonaws.com *.google.com www.gstatic.com aui-cdn.atlassian.com www.hipchat.com *.atlassian.net *.jira.com js.sentry-cdn.com browser.sentry-cdn.com; font-src * data:; connect-src *; style-src 'self' 'unsafe-inline' s1.sentry-cdn.com s3.amazonaws.com aui-cdn.atlassian.com www.hipchat.com fonts.googleapis.com; img-src * data: blob:; report-uri https://sentry.io/api/54785/csp-report/?sentry_key=f724a8a027db45f5b21507e7142ff78e&sentry_release=d0d3f1ea630178c8f2836c2d2382dd534e9b47ac",
+    "disposition": "enforce",
+    "status_code": 0,
+    "effective_directive": "style-src-elem"
+  },
+  "logentry": {
+    "formatted": "Blocked 'style' from 'use.fontawesome.com'"
+  },
+  "release": "d0d3f1ea630178c8f2836c2d2382dd534e9b47ac"
+}
diff --git a/tests/sentry/event_hashing/fixtures/csp-style-src-elem.out b/tests/sentry/event_hashing/fixtures/csp-style-src-elem.out
new file mode 100644
index 0000000000..efe51b17c2
--- /dev/null
+++ b/tests/sentry/event_hashing/fixtures/csp-style-src-elem.out
@@ -0,0 +1,12 @@
+default:
+  hash: '537a973f594c364842893e9a72af62a5'
+  component:
+    default*
+      csp*
+        salt* (a static salt)
+          u'style-src-elem'
+        violation (not a local script violation)
+        uri*
+          u'use.fontawesome.com'
+      message (csp takes precedence)
+        u"Blocked 'style' from 'use.fontawesome.com'"
diff --git a/tests/sentry/event_hashing/fixtures/csp.json b/tests/sentry/event_hashing/fixtures/csp.json
new file mode 100644
index 0000000000..9b10d8af08
--- /dev/null
+++ b/tests/sentry/event_hashing/fixtures/csp.json
@@ -0,0 +1,21 @@
+{
+  "culprit": "script-src",
+  "event_id": "cb3cc0da56914dc684761a765db9b83e",
+  "platform": "other",
+  "logger": "csp",
+  "csp": {
+    "blocked_uri": "https://YYY",
+    "script_sample": "",
+    "referrer": "",
+    "violated_directive": "script-src",
+    "document_uri": "https://sentry.io/organizations/XXX/",
+    "original_policy": "default-src *; script-src 'self' 'unsafe-eval' 'unsafe-inline' s1.sentry-cdn.com cdn.ravenjs.com static.zdassets.com ajax.googleapis.com ssl.google-analytics.com www.googleadservices.com analytics.twitter.com platform.twitter.com *.pingdom.net js.stripe.com api.stripe.com statuspage-production.s3.amazonaws.com s3.amazonaws.com *.google.com www.gstatic.com aui-cdn.atlassian.com www.hipchat.com *.atlassian.net *.jira.com js.sentry-cdn.com browser.sentry-cdn.com; font-src * data:; connect-src *; style-src 'self' 'unsafe-inline' s1.sentry-cdn.com s3.amazonaws.com aui-cdn.atlassian.com www.hipchat.com fonts.googleapis.com; img-src * data: blob:; report-uri https://sentry.io/api/54785/csp-report/?sentry_key=f724a8a027db45f5b21507e7142ff78e&sentry_release=03c6b061237d939a87c32ae832097e99b29f02f8",
+    "disposition": "enforce",
+    "status_code": 0,
+    "effective_directive": "script-src"
+  },
+  "logentry": {
+    "formatted": "Blocked 'script' from 'YYY'"
+  },
+  "release": "03c6b061237d939a87c32ae832097e99b29f02f8"
+}
diff --git a/tests/sentry/event_hashing/fixtures/csp.out b/tests/sentry/event_hashing/fixtures/csp.out
new file mode 100644
index 0000000000..5594b2b5ee
--- /dev/null
+++ b/tests/sentry/event_hashing/fixtures/csp.out
@@ -0,0 +1,12 @@
+default:
+  hash: '666766514295bb52812324097cdaf53e'
+  component:
+    default*
+      csp*
+        salt* (a static salt)
+          u'script-src'
+        violation (not a local script violation)
+        uri*
+          u'YYY'
+      message (csp takes precedence)
+        u"Blocked 'script' from 'YYY'"
diff --git a/tests/sentry/event_hashing/fixtures/custom-fingerprint.json b/tests/sentry/event_hashing/fixtures/custom-fingerprint.json
new file mode 100644
index 0000000000..d47e560620
--- /dev/null
+++ b/tests/sentry/event_hashing/fixtures/custom-fingerprint.json
@@ -0,0 +1,413 @@
+{
+  "culprit": "sentry.tasks.store.process_event",
+  "event_id": "f8e9e434cc2043f09797d56c6ceeafab",
+  "environment": "prod",
+  "platform": "python",
+  "logger": "",
+  "fingerprint": [
+    "celery",
+    "SoftTimeLimitExceeded",
+    "sentry.tasks.store.process_event"
+  ],
+  "exception": {
+    "values": [
+      {
+        "stacktrace": {
+          "frames": [
+            {
+              "function": "_wrapped",
+              "abs_path": "/usr/src/getsentry/src/sentry/src/sentry/tasks/base.py",
+              "pre_context": [
+                "                scope.set_tag('task_name', name)",
+                "                scope.set_tag('transaction_id', transaction_id)",
+                "",
+                "            with metrics.timer(key, instance=instance), \\",
+                "                    track_memory_usage('jobs.memory_change', instance=instance):"
+              ],
+              "module": "sentry.tasks.base",
+              "filename": "sentry/tasks/base.py",
+              "post_context": [
+                "",
+                "            return result",
+                "",
+                "        return app.task(name=name, **kwargs)(_wrapped)",
+                ""
+              ],
+              "in_app": true,
+              "context_line": "                result = func(*args, **kwargs)",
+              "lineno": 54
+            },
+            {
+              "function": "process_event",
+              "abs_path": "/usr/src/getsentry/src/sentry/src/sentry/tasks/store.py",
+              "pre_context": [
+                "    queue='events.process_event',",
+                "    time_limit=65,",
+                "    soft_time_limit=60,",
+                ")",
+                "def process_event(cache_key, start_time=None, event_id=None, **kwargs):"
+              ],
+              "module": "sentry.tasks.store",
+              "filename": "sentry/tasks/store.py",
+              "post_context": [
+                "",
+                "",
+                "@instrumented_task(",
+                "    name='sentry.tasks.store.process_event_from_reprocessing',",
+                "    queue='events.reprocessing.process_event',"
+              ],
+              "in_app": true,
+              "context_line": "    return _do_process_event(cache_key, start_time, event_id, process_event)",
+              "lineno": 206
+            },
+            {
+              "function": "_do_process_event",
+              "abs_path": "/usr/src/getsentry/src/sentry/src/sentry/tasks/store.py",
+              "pre_context": [
+                "            if enhanced:",
+                "                data = enhanced",
+                "                has_changed = True",
+                "",
+                "    # Stacktrace based event processors."
+              ],
+              "module": "sentry.tasks.store",
+              "filename": "sentry/tasks/store.py",
+              "post_context": [
+                "    if new_data is not None:",
+                "        has_changed = True",
+                "        data = new_data",
+                "",
+                "    # TODO(dcramer): ideally we would know if data changed by default"
+              ],
+              "in_app": true,
+              "context_line": "    new_data = process_stacktraces(data)",
+              "lineno": 151
+            },
+            {
+              "function": "process_stacktraces",
+              "abs_path": "/usr/src/getsentry/src/sentry/src/sentry/stacktraces.py",
+              "pre_context": [
+                "    processing_task = get_stacktrace_processing_task(infos, processors)",
+                "    try:",
+                "",
+                "        # Preprocess step",
+                "        for processor in processing_task.iter_processors():"
+              ],
+              "module": "sentry.stacktraces",
+              "filename": "sentry/stacktraces.py",
+              "post_context": [
+                "                changed = True",
+                "",
+                "        # Process all stacktraces",
+                "        for stacktrace_info, processable_frames in processing_task.iter_processable_stacktraces():",
+                "            new_frames, new_raw_frames, errors = process_single_stacktrace("
+              ],
+              "in_app": true,
+              "context_line": "            if processor.preprocess_step(processing_task):",
+              "lineno": 375
+            },
+            {
+              "function": "preprocess_step",
+              "abs_path": "/usr/src/getsentry/src/sentry/src/sentry/lang/native/plugin.py",
+              "pre_context": [
+                "        )",
+                "",
+                "        self.sym = Symbolizer(",
+                "            self.project,",
+                "            self.object_lookup,"
+              ],
+              "module": "sentry.lang.native.plugin",
+              "filename": "sentry/lang/native/plugin.py",
+              "post_context": [
+                "        )",
+                "",
+                "        if options.get('symbolserver.enabled'):",
+                "            self.fetch_system_symbols(processing_task)",
+                ""
+              ],
+              "in_app": true,
+              "context_line": "            referenced_images=referenced_images,",
+              "lineno": 146
+            },
+            {
+              "function": "__init__",
+              "abs_path": "/usr/src/getsentry/src/sentry/src/sentry/lang/native/symbolizer.py",
+              "pre_context": [
+                "",
+                "        self.symcaches, self.symcaches_conversion_errors = \\",
+                "            ProjectDebugFile.difcache.get_symcaches(",
+                "                project, referenced_images,",
+                "                on_dif_referenced=on_dif_referenced,"
+              ],
+              "module": "sentry.lang.native.symbolizer",
+              "filename": "sentry/lang/native/symbolizer.py",
+              "post_context": [
+                "",
+                "    def _process_frame(self, sym, obj, package=None, addr_off=0):",
+                "        frame = {",
+                "            'sym_addr': sym.sym_addr + addr_off,",
+                "            'instruction_addr': sym.instr_addr + addr_off,"
+              ],
+              "in_app": true,
+              "context_line": "                with_conversion_errors=True)",
+              "lineno": 128
+            },
+            {
+              "function": "get_symcaches",
+              "abs_path": "/usr/src/getsentry/src/sentry/src/sentry/models/debugfile.py",
+              "pre_context": [
+                "                      with_conversion_errors=False):",
+                "        \"\"\"Loads symcaches for the given debug IDs from the file system cache or",
+                "        blob store.\"\"\"",
+                "        cachefiles, conversion_errors = self._get_caches_impl(",
+                "            project, debug_ids, ProjectSymCacheFile, on_dif_referenced)"
+              ],
+              "module": "sentry.models.debugfile",
+              "filename": "sentry/models/debugfile.py",
+              "post_context": [
+                "        if with_conversion_errors:",
+                "            return symcaches, dict((k, v) for k, v in conversion_errors.items())",
+                "        return symcaches",
+                "",
+                "    def get_cficaches(self, project, debug_ids, on_dif_referenced=None,"
+              ],
+              "in_app": true,
+              "context_line": "        symcaches = self._load_cachefiles_via_fs(project, cachefiles, SymCache)",
+              "lineno": 580
+            },
+            {
+              "function": "_load_cachefiles_via_fs",
+              "abs_path": "/usr/src/getsentry/src/sentry/src/sentry/models/debugfile.py",
+              "pre_context": [
+                "            try:",
+                "                stat = os.stat(cachefile_path)",
+                "            except OSError as e:",
+                "                if e.errno != errno.ENOENT:",
+                "                    raise"
+              ],
+              "module": "sentry.models.debugfile",
+              "filename": "sentry/models/debugfile.py",
+              "post_context": [
+                "            else:",
+                "                now = int(time.time())",
+                "                if stat.st_ctime < now - ONE_DAY:",
+                "                    os.utime(cachefile_path, (now, now))",
+                ""
+              ],
+              "in_app": true,
+              "context_line": "                model.cache_file.save_to(cachefile_path)",
+              "lineno": 821
+            },
+            {
+              "function": "save_to",
+              "abs_path": "/usr/src/getsentry/src/sentry/src/sentry/models/file.py",
+              "pre_context": [
+                "",
+                "        f = None",
+                "        try:",
+                "            f = self._get_chunked_blob(prefetch=True,",
+                "                                       prefetch_to=base,"
+              ],
+              "module": "sentry.models.file",
+              "filename": "sentry/models/file.py",
+              "post_context": [
+                "            os.rename(f.name, path)",
+                "            f.close()",
+                "            f = None",
+                "        finally:",
+                "            if f is not None:"
+              ],
+              "in_app": true,
+              "context_line": "                                       delete=False).detach_tempfile()",
+              "lineno": 398
+            },
+            {
+              "function": "_get_chunked_blob",
+              "abs_path": "/usr/src/getsentry/src/sentry/src/sentry/models/file.py",
+              "pre_context": [
+                "                file=self,",
+                "            ).select_related('blob').order_by('offset'),",
+                "            mode=mode,",
+                "            prefetch=prefetch,",
+                "            prefetch_to=prefetch_to,"
+              ],
+              "module": "sentry.models.file",
+              "filename": "sentry/models/file.py",
+              "post_context": [
+                "        )",
+                "",
+                "    def getfile(self, mode=None, prefetch=False, as_tempfile=False):",
+                "        \"\"\"Returns a file object.  By default the file is fetched on",
+                "        demand but if prefetch is enabled the file is fully prefetched"
+              ],
+              "in_app": true,
+              "context_line": "            delete=delete",
+              "lineno": 363
+            },
+            {
+              "function": "__init__",
+              "abs_path": "/usr/src/getsentry/src/sentry/src/sentry/models/file.py",
+              "pre_context": [
+                "        self._indexes = list(indexes)",
+                "        self._curfile = None",
+                "        self._curidx = None",
+                "        if prefetch:",
+                "            self.prefetched = True"
+              ],
+              "module": "sentry.models.file",
+              "filename": "sentry/models/file.py",
+              "post_context": [
+                "        else:",
+                "            self.prefetched = False",
+                "        self.mode = mode",
+                "        self.open()",
+                ""
+              ],
+              "in_app": true,
+              "context_line": "            self._prefetch(prefetch_to, delete)",
+              "lineno": 504
+            },
+            {
+              "function": "_prefetch",
+              "abs_path": "/usr/src/getsentry/src/sentry/src/sentry/models/file.py",
+              "pre_context": [
+                "                    mem[offset:offset + len(chunk)] = chunk",
+                "                    offset += len(chunk)",
+                "",
+                "        with ThreadPoolExecutor(max_workers=4) as exe:",
+                "            for idx in self._indexes:"
+              ],
+              "module": "sentry.models.file",
+              "filename": "sentry/models/file.py",
+              "post_context": [
+                "",
+                "        mem.flush()",
+                "        self._curfile = f",
+                "",
+                "    def close(self):"
+              ],
+              "in_app": true,
+              "context_line": "                exe.submit(fetch_file, idx.offset, idx.blob.getfile)",
+              "lineno": 574
+            },
+            {
+              "function": "__exit__",
+              "abs_path": "/usr/local/lib/python2.7/site-packages/concurrent/futures/_base.py",
+              "pre_context": [
+                "",
+                "    def __enter__(self):",
+                "        return self",
+                "",
+                "    def __exit__(self, exc_type, exc_val, exc_tb):"
+              ],
+              "module": "concurrent.futures._base",
+              "filename": "concurrent/futures/_base.py",
+              "post_context": [
+                "        return False"
+              ],
+              "in_app": false,
+              "context_line": "        self.shutdown(wait=True)",
+              "lineno": 666
+            },
+            {
+              "function": "shutdown",
+              "abs_path": "/usr/local/lib/python2.7/site-packages/concurrent/futures/thread.py",
+              "pre_context": [
+                "        with self._shutdown_lock:",
+                "            self._shutdown = True",
+                "            self._work_queue.put(None)",
+                "        if wait:",
+                "            for t in self._threads:"
+              ],
+              "module": "concurrent.futures.thread",
+              "filename": "concurrent/futures/thread.py",
+              "post_context": [
+                "    shutdown.__doc__ = _base.Executor.shutdown.__doc__"
+              ],
+              "in_app": false,
+              "context_line": "                t.join(sys.maxint)",
+              "lineno": 159
+            },
+            {
+              "function": "join",
+              "abs_path": "/usr/local/lib/python2.7/threading.py",
+              "pre_context": [
+                "                    delay = deadline - _time()",
+                "                    if delay <= 0:",
+                "                        if __debug__:",
+                "                            self._note(\"%s.join(): timed out\", self)",
+                "                        break"
+              ],
+              "module": "threading",
+              "filename": "threading.py",
+              "post_context": [
+                "                else:",
+                "                    if __debug__:",
+                "                        self._note(\"%s.join(): thread stopped\", self)",
+                "        finally:",
+                "            self.__block.release()"
+              ],
+              "in_app": false,
+              "context_line": "                    self.__block.wait(delay)",
+              "lineno": 951
+            },
+            {
+              "function": "wait",
+              "abs_path": "/usr/local/lib/python2.7/threading.py",
+              "pre_context": [
+                "                        break",
+                "                    remaining = endtime - _time()",
+                "                    if remaining <= 0:",
+                "                        break",
+                "                    delay = min(delay * 2, remaining, .05)"
+              ],
+              "module": "threading",
+              "filename": "threading.py",
+              "post_context": [
+                "                if not gotit:",
+                "                    if __debug__:",
+                "                        self._note(\"%s.wait(%s): timed out\", self, timeout)",
+                "                    try:",
+                "                        self.__waiters.remove(waiter)"
+              ],
+              "in_app": false,
+              "context_line": "                    _sleep(delay)",
+              "lineno": 359
+            },
+            {
+              "function": "soft_timeout_sighandler",
+              "abs_path": "/usr/local/lib/python2.7/site-packages/billiard/pool.py",
+              "pre_context": [
+                "class WorkersJoined(Exception):",
+                "    \"\"\"All workers have terminated.\"\"\"",
+                "",
+                "",
+                "def soft_timeout_sighandler(signum, frame):"
+              ],
+              "module": "billiard.pool",
+              "filename": "billiard/pool.py",
+              "post_context": [
+                "",
+                "#",
+                "# Code run by worker processes",
+                "#",
+                ""
+              ],
+              "in_app": false,
+              "context_line": "    raise SoftTimeLimitExceeded()",
+              "lineno": 231
+            }
+          ]
+        },
+        "type": "SoftTimeLimitExceeded",
+        "value": "SoftTimeLimitExceeded()",
+        "module": "billiard.exceptions",
+        "mechanism": {
+          "type": "celery",
+          "handled": false
+        }
+      }
+    ]
+  },
+  "release": "74d1fca81fc9d5336ee0076e80ca86acbf009a74"
+}
diff --git a/tests/sentry/event_hashing/fixtures/custom-fingerprint.out b/tests/sentry/event_hashing/fixtures/custom-fingerprint.out
new file mode 100644
index 0000000000..9c9e3441c0
--- /dev/null
+++ b/tests/sentry/event_hashing/fixtures/custom-fingerprint.out
@@ -0,0 +1,3 @@
+custom-fingerprint:
+  hash: 'f30afa00b85f5cac5ee0bce01b31f08d'
+  values: [u'celery', u'SoftTimeLimitExceeded', u'sentry.tasks.store.process_event']
diff --git a/tests/sentry/event_hashing/fixtures/java-chained.json b/tests/sentry/event_hashing/fixtures/java-chained.json
new file mode 100644
index 0000000000..d7e57a1c70
--- /dev/null
+++ b/tests/sentry/event_hashing/fixtures/java-chained.json
@@ -0,0 +1,457 @@
+{
+  "culprit": "io.sentry.example.Application in main",
+  "event_id": "0c958c4b7c5f447eb54b4656198d8d5a",
+  "environment": "production",
+  "platform": "java",
+  "logger": "org.apache.catalina.core.StandardService",
+  "exception": {
+    "values": [
+      {
+        "stacktrace": {
+          "frames": [
+            {
+              "function": "main",
+              "abs_path": "Application.java",
+              "module": "io.sentry.example.Application",
+              "filename": "Application.java",
+              "lineno": 86,
+              "in_app": false
+            },
+            {
+              "function": "run",
+              "abs_path": "SpringApplication.java",
+              "module": "org.springframework.boot.SpringApplication",
+              "filename": "SpringApplication.java",
+              "lineno": 1151,
+              "in_app": false
+            },
+            {
+              "function": "run",
+              "abs_path": "SpringApplication.java",
+              "module": "org.springframework.boot.SpringApplication",
+              "filename": "SpringApplication.java",
+              "lineno": 1162,
+              "in_app": false
+            },
+            {
+              "function": "run",
+              "abs_path": "SpringApplication.java",
+              "module": "org.springframework.boot.SpringApplication",
+              "filename": "SpringApplication.java",
+              "lineno": 314,
+              "in_app": false
+            },
+            {
+              "function": "refreshContext",
+              "abs_path": "SpringApplication.java",
+              "module": "org.springframework.boot.SpringApplication",
+              "filename": "SpringApplication.java",
+              "lineno": 370,
+              "in_app": false
+            },
+            {
+              "function": "refresh",
+              "abs_path": "SpringApplication.java",
+              "module": "org.springframework.boot.SpringApplication",
+              "filename": "SpringApplication.java",
+              "lineno": 737,
+              "in_app": false
+            },
+            {
+              "function": "refresh",
+              "abs_path": "EmbeddedWebApplicationContext.java",
+              "module": "org.springframework.boot.context.embedded.EmbeddedWebApplicationContext",
+              "filename": "EmbeddedWebApplicationContext.java",
+              "lineno": 122,
+              "in_app": false
+            },
+            {
+              "function": "refresh",
+              "abs_path": "AbstractApplicationContext.java",
+              "module": "org.springframework.context.support.AbstractApplicationContext",
+              "filename": "AbstractApplicationContext.java",
+              "lineno": 545,
+              "in_app": false
+            },
+            {
+              "function": "finishRefresh",
+              "abs_path": "EmbeddedWebApplicationContext.java",
+              "module": "org.springframework.boot.context.embedded.EmbeddedWebApplicationContext",
+              "filename": "EmbeddedWebApplicationContext.java",
+              "lineno": 145,
+              "in_app": false
+            },
+            {
+              "function": "startEmbeddedServletContainer",
+              "abs_path": "EmbeddedWebApplicationContext.java",
+              "module": "org.springframework.boot.context.embedded.EmbeddedWebApplicationContext",
+              "filename": "EmbeddedWebApplicationContext.java",
+              "lineno": 297,
+              "in_app": false
+            },
+            {
+              "function": "start",
+              "abs_path": "TomcatEmbeddedServletContainer.java",
+              "module": "org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer",
+              "filename": "TomcatEmbeddedServletContainer.java",
+              "lineno": 190,
+              "in_app": false
+            },
+            {
+              "function": "addPreviouslyRemovedConnectors",
+              "abs_path": "TomcatEmbeddedServletContainer.java",
+              "module": "org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer",
+              "filename": "TomcatEmbeddedServletContainer.java",
+              "lineno": 247,
+              "in_app": false
+            },
+            {
+              "function": "addConnector",
+              "abs_path": "StandardService.java",
+              "module": "org.apache.catalina.core.StandardService",
+              "filename": "StandardService.java",
+              "lineno": 225,
+              "in_app": false
+            },
+            {
+              "function": "start",
+              "abs_path": "LifecycleBase.java",
+              "module": "org.apache.catalina.util.LifecycleBase",
+              "filename": "LifecycleBase.java",
+              "lineno": 150,
+              "in_app": false
+            },
+            {
+              "function": "startInternal",
+              "abs_path": "Connector.java",
+              "module": "org.apache.catalina.connector.Connector",
+              "filename": "Connector.java",
+              "lineno": 993,
+              "in_app": false
+            },
+            {
+              "function": "start",
+              "abs_path": "AbstractProtocol.java",
+              "module": "org.apache.coyote.AbstractProtocol",
+              "filename": "AbstractProtocol.java",
+              "lineno": 573,
+              "in_app": false
+            },
+            {
+              "function": "start",
+              "abs_path": "AbstractEndpoint.java",
+              "module": "org.apache.tomcat.util.net.AbstractEndpoint",
+              "filename": "AbstractEndpoint.java",
+              "lineno": 980,
+              "in_app": false
+            },
+            {
+              "function": "bind",
+              "abs_path": "NioEndpoint.java",
+              "module": "org.apache.tomcat.util.net.NioEndpoint",
+              "filename": "NioEndpoint.java",
+              "lineno": 210,
+              "in_app": false
+            },
+            {
+              "function": "bind",
+              "abs_path": "ServerSocketAdaptor.java",
+              "module": "sun.nio.ch.ServerSocketAdaptor",
+              "filename": "ServerSocketAdaptor.java",
+              "lineno": 74,
+              "in_app": false
+            },
+            {
+              "function": "bind",
+              "abs_path": "ServerSocketChannelImpl.java",
+              "module": "sun.nio.ch.ServerSocketChannelImpl",
+              "filename": "ServerSocketChannelImpl.java",
+              "lineno": 223,
+              "in_app": false
+            },
+            {
+              "function": "bind",
+              "abs_path": "Net.java",
+              "module": "sun.nio.ch.Net",
+              "filename": "Net.java",
+              "lineno": 425,
+              "in_app": false
+            },
+            {
+              "function": "bind",
+              "abs_path": "Net.java",
+              "module": "sun.nio.ch.Net",
+              "filename": "Net.java",
+              "lineno": 433,
+              "in_app": false
+            },
+            {
+              "function": "bind0",
+              "abs_path": "Net.java",
+              "filename": "Net.java",
+              "module": "sun.nio.ch.Net",
+              "in_app": false
+            }
+          ]
+        },
+        "type": "BindException",
+        "value": "Address already in use",
+        "module": "java.net"
+      },
+      {
+        "stacktrace": {
+          "frames": [
+            {
+              "function": "main",
+              "abs_path": "Application.java",
+              "module": "io.sentry.example.Application",
+              "filename": "Application.java",
+              "lineno": 86,
+              "in_app": false
+            },
+            {
+              "function": "run",
+              "abs_path": "SpringApplication.java",
+              "module": "org.springframework.boot.SpringApplication",
+              "filename": "SpringApplication.java",
+              "lineno": 1151,
+              "in_app": false
+            },
+            {
+              "function": "run",
+              "abs_path": "SpringApplication.java",
+              "module": "org.springframework.boot.SpringApplication",
+              "filename": "SpringApplication.java",
+              "lineno": 1162,
+              "in_app": false
+            },
+            {
+              "function": "run",
+              "abs_path": "SpringApplication.java",
+              "module": "org.springframework.boot.SpringApplication",
+              "filename": "SpringApplication.java",
+              "lineno": 314,
+              "in_app": false
+            },
+            {
+              "function": "refreshContext",
+              "abs_path": "SpringApplication.java",
+              "module": "org.springframework.boot.SpringApplication",
+              "filename": "SpringApplication.java",
+              "lineno": 370,
+              "in_app": false
+            },
+            {
+              "function": "refresh",
+              "abs_path": "SpringApplication.java",
+              "module": "org.springframework.boot.SpringApplication",
+              "filename": "SpringApplication.java",
+              "lineno": 737,
+              "in_app": false
+            },
+            {
+              "function": "refresh",
+              "abs_path": "EmbeddedWebApplicationContext.java",
+              "module": "org.springframework.boot.context.embedded.EmbeddedWebApplicationContext",
+              "filename": "EmbeddedWebApplicationContext.java",
+              "lineno": 122,
+              "in_app": false
+            },
+            {
+              "function": "refresh",
+              "abs_path": "AbstractApplicationContext.java",
+              "module": "org.springframework.context.support.AbstractApplicationContext",
+              "filename": "AbstractApplicationContext.java",
+              "lineno": 545,
+              "in_app": false
+            },
+            {
+              "function": "finishRefresh",
+              "abs_path": "EmbeddedWebApplicationContext.java",
+              "module": "org.springframework.boot.context.embedded.EmbeddedWebApplicationContext",
+              "filename": "EmbeddedWebApplicationContext.java",
+              "lineno": 145,
+              "in_app": false
+            },
+            {
+              "function": "startEmbeddedServletContainer",
+              "abs_path": "EmbeddedWebApplicationContext.java",
+              "module": "org.springframework.boot.context.embedded.EmbeddedWebApplicationContext",
+              "filename": "EmbeddedWebApplicationContext.java",
+              "lineno": 297,
+              "in_app": false
+            },
+            {
+              "function": "start",
+              "abs_path": "TomcatEmbeddedServletContainer.java",
+              "module": "org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer",
+              "filename": "TomcatEmbeddedServletContainer.java",
+              "lineno": 190,
+              "in_app": false
+            },
+            {
+              "function": "addPreviouslyRemovedConnectors",
+              "abs_path": "TomcatEmbeddedServletContainer.java",
+              "module": "org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer",
+              "filename": "TomcatEmbeddedServletContainer.java",
+              "lineno": 247,
+              "in_app": false
+            },
+            {
+              "function": "addConnector",
+              "abs_path": "StandardService.java",
+              "module": "org.apache.catalina.core.StandardService",
+              "filename": "StandardService.java",
+              "lineno": 225,
+              "in_app": false
+            },
+            {
+              "function": "start",
+              "abs_path": "LifecycleBase.java",
+              "module": "org.apache.catalina.util.LifecycleBase",
+              "filename": "LifecycleBase.java",
+              "lineno": 150,
+              "in_app": false
+            },
+            {
+              "function": "startInternal",
+              "abs_path": "Connector.java",
+              "module": "org.apache.catalina.connector.Connector",
+              "filename": "Connector.java",
+              "lineno": 1000,
+              "in_app": false
+            }
+          ]
+        },
+        "type": "LifecycleException",
+        "value": "service.getName(): \"Tomcat\";  Protocol handler start failed",
+        "module": "org.apache.catalina"
+      },
+      {
+        "stacktrace": {
+          "frames": [
+            {
+              "function": "main",
+              "abs_path": "Application.java",
+              "module": "io.sentry.example.Application",
+              "filename": "Application.java",
+              "lineno": 86,
+              "in_app": true
+            },
+            {
+              "function": "run",
+              "abs_path": "SpringApplication.java",
+              "module": "org.springframework.boot.SpringApplication",
+              "filename": "SpringApplication.java",
+              "lineno": 1151,
+              "in_app": false
+            },
+            {
+              "function": "run",
+              "abs_path": "SpringApplication.java",
+              "module": "org.springframework.boot.SpringApplication",
+              "filename": "SpringApplication.java",
+              "lineno": 1162,
+              "in_app": false
+            },
+            {
+              "function": "run",
+              "abs_path": "SpringApplication.java",
+              "module": "org.springframework.boot.SpringApplication",
+              "filename": "SpringApplication.java",
+              "lineno": 314,
+              "in_app": false
+            },
+            {
+              "function": "refreshContext",
+              "abs_path": "SpringApplication.java",
+              "module": "org.springframework.boot.SpringApplication",
+              "filename": "SpringApplication.java",
+              "lineno": 370,
+              "in_app": false
+            },
+            {
+              "function": "refresh",
+              "abs_path": "SpringApplication.java",
+              "module": "org.springframework.boot.SpringApplication",
+              "filename": "SpringApplication.java",
+              "lineno": 737,
+              "in_app": false
+            },
+            {
+              "function": "refresh",
+              "abs_path": "EmbeddedWebApplicationContext.java",
+              "module": "org.springframework.boot.context.embedded.EmbeddedWebApplicationContext",
+              "filename": "EmbeddedWebApplicationContext.java",
+              "lineno": 122,
+              "in_app": false
+            },
+            {
+              "function": "refresh",
+              "abs_path": "AbstractApplicationContext.java",
+              "module": "org.springframework.context.support.AbstractApplicationContext",
+              "filename": "AbstractApplicationContext.java",
+              "lineno": 545,
+              "in_app": false
+            },
+            {
+              "function": "finishRefresh",
+              "abs_path": "EmbeddedWebApplicationContext.java",
+              "module": "org.springframework.boot.context.embedded.EmbeddedWebApplicationContext",
+              "filename": "EmbeddedWebApplicationContext.java",
+              "lineno": 145,
+              "in_app": false
+            },
+            {
+              "function": "startEmbeddedServletContainer",
+              "abs_path": "EmbeddedWebApplicationContext.java",
+              "module": "org.springframework.boot.context.embedded.EmbeddedWebApplicationContext",
+              "filename": "EmbeddedWebApplicationContext.java",
+              "lineno": 297,
+              "in_app": false
+            },
+            {
+              "function": "start",
+              "abs_path": "TomcatEmbeddedServletContainer.java",
+              "module": "org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer",
+              "filename": "TomcatEmbeddedServletContainer.java",
+              "lineno": 190,
+              "in_app": false
+            },
+            {
+              "function": "addPreviouslyRemovedConnectors",
+              "abs_path": "TomcatEmbeddedServletContainer.java",
+              "module": "org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer",
+              "filename": "TomcatEmbeddedServletContainer.java",
+              "lineno": 247,
+              "in_app": false
+            },
+            {
+              "function": "addConnector",
+              "abs_path": "StandardService.java",
+              "module": "org.apache.catalina.core.StandardService",
+              "filename": "StandardService.java",
+              "lineno": 225,
+              "in_app": false
+            },
+            {
+              "function": "start",
+              "abs_path": "LifecycleBase.java",
+              "module": "org.apache.catalina.util.LifecycleBase",
+              "filename": "LifecycleBase.java",
+              "lineno": 167,
+              "in_app": false
+            }
+          ]
+        },
+        "type": "LifecycleException",
+        "value": "Failed to start component [Connector[HTTP/1.1-8080]]",
+        "module": "org.apache.catalina"
+      }
+    ]
+  },
+  "logentry": {
+    "formatted": "Failed to start connector [Connector[HTTP/1.1-8080]]"
+  },
+  "release": null
+}
diff --git a/tests/sentry/event_hashing/fixtures/java-chained.out b/tests/sentry/event_hashing/fixtures/java-chained.out
new file mode 100644
index 0000000000..2a59dafb1a
--- /dev/null
+++ b/tests/sentry/event_hashing/fixtures/java-chained.out
@@ -0,0 +1,986 @@
+app:
+  hash: 'ca1e356d85bc74d82d4ae8f3f8bfbbf7'
+  component:
+    app*
+      chained-exception*
+        exception*
+          stacktrace*
+            frame* (frame considered in-app because no frame is in-app)
+              module*
+                u'io.sentry.example.Application'
+              filename (module takes precedence)
+                u'Application.java'
+              function*
+                u'main'
+              lineno (function takes precedence)
+                86
+            frame* (frame considered in-app because no frame is in-app)
+              module*
+                u'org.springframework.boot.SpringApplication'
+              filename (module takes precedence)
+                u'SpringApplication.java'
+              function*
+                u'run'
+              lineno (function takes precedence)
+                1151
+            frame* (frame considered in-app because no frame is in-app)
+              module*
+                u'org.springframework.boot.SpringApplication'
+              filename (module takes precedence)
+                u'SpringApplication.java'
+              function*
+                u'run'
+              lineno (function takes precedence)
+                1162
+            frame* (frame considered in-app because no frame is in-app)
+              module*
+                u'org.springframework.boot.SpringApplication'
+              filename (module takes precedence)
+                u'SpringApplication.java'
+              function*
+                u'run'
+              lineno (function takes precedence)
+                314
+            frame* (frame considered in-app because no frame is in-app)
+              module*
+                u'org.springframework.boot.SpringApplication'
+              filename (module takes precedence)
+                u'SpringApplication.java'
+              function*
+                u'refreshContext'
+              lineno (function takes precedence)
+                370
+            frame* (frame considered in-app because no frame is in-app)
+              module*
+                u'org.springframework.boot.SpringApplication'
+              filename (module takes precedence)
+                u'SpringApplication.java'
+              function*
+                u'refresh'
+              lineno (function takes precedence)
+                737
+            frame* (frame considered in-app because no frame is in-app)
+              module*
+                u'org.springframework.boot.context.embedded.EmbeddedWebApplicationContext'
+              filename (module takes precedence)
+                u'EmbeddedWebApplicationContext.java'
+              function*
+                u'refresh'
+              lineno (function takes precedence)
+                122
+            frame* (frame considered in-app because no frame is in-app)
+              module*
+                u'org.springframework.context.support.AbstractApplicationContext'
+              filename (module takes precedence)
+                u'AbstractApplicationContext.java'
+              function*
+                u'refresh'
+              lineno (function takes precedence)
+                545
+            frame* (frame considered in-app because no frame is in-app)
+              module*
+                u'org.springframework.boot.context.embedded.EmbeddedWebApplicationContext'
+              filename (module takes precedence)
+                u'EmbeddedWebApplicationContext.java'
+              function*
+                u'finishRefresh'
+              lineno (function takes precedence)
+                145
+            frame* (frame considered in-app because no frame is in-app)
+              module*
+                u'org.springframework.boot.context.embedded.EmbeddedWebApplicationContext'
+              filename (module takes precedence)
+                u'EmbeddedWebApplicationContext.java'
+              function*
+                u'startEmbeddedServletContainer'
+              lineno (function takes precedence)
+                297
+            frame* (frame considered in-app because no frame is in-app)
+              module*
+                u'org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer'
+              filename (module takes precedence)
+                u'TomcatEmbeddedServletContainer.java'
+              function*
+                u'start'
+              lineno (function takes precedence)
+                190
+            frame* (frame considered in-app because no frame is in-app)
+              module*
+                u'org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer'
+              filename (module takes precedence)
+                u'TomcatEmbeddedServletContainer.java'
+              function*
+                u'addPreviouslyRemovedConnectors'
+              lineno (function takes precedence)
+                247
+            frame* (frame considered in-app because no frame is in-app)
+              module*
+                u'org.apache.catalina.core.StandardService'
+              filename (module takes precedence)
+                u'StandardService.java'
+              function*
+                u'addConnector'
+              lineno (function takes precedence)
+                225
+            frame* (frame considered in-app because no frame is in-app)
+              module*
+                u'org.apache.catalina.util.LifecycleBase'
+              filename (module takes precedence)
+                u'LifecycleBase.java'
+              function*
+                u'start'
+              lineno (function takes precedence)
+                150
+            frame* (frame considered in-app because no frame is in-app)
+              module*
+                u'org.apache.catalina.connector.Connector'
+              filename (module takes precedence)
+                u'Connector.java'
+              function*
+                u'startInternal'
+              lineno (function takes precedence)
+                993
+            frame* (frame considered in-app because no frame is in-app)
+              module*
+                u'org.apache.coyote.AbstractProtocol'
+              filename (module takes precedence)
+                u'AbstractProtocol.java'
+              function*
+                u'start'
+              lineno (function takes precedence)
+                573
+            frame* (frame considered in-app because no frame is in-app)
+              module*
+                u'org.apache.tomcat.util.net.AbstractEndpoint'
+              filename (module takes precedence)
+                u'AbstractEndpoint.java'
+              function*
+                u'start'
+              lineno (function takes precedence)
+                980
+            frame* (frame considered in-app because no frame is in-app)
+              module*
+                u'org.apache.tomcat.util.net.NioEndpoint'
+              filename (module takes precedence)
+                u'NioEndpoint.java'
+              function*
+                u'bind'
+              lineno (function takes precedence)
+                210
+            frame* (frame considered in-app because no frame is in-app)
+              module*
+                u'sun.nio.ch.ServerSocketAdaptor'
+              filename (module takes precedence)
+                u'ServerSocketAdaptor.java'
+              function*
+                u'bind'
+              lineno (function takes precedence)
+                74
+            frame* (frame considered in-app because no frame is in-app)
+              module*
+                u'sun.nio.ch.ServerSocketChannelImpl'
+              filename (module takes precedence)
+                u'ServerSocketChannelImpl.java'
+              function*
+                u'bind'
+              lineno (function takes precedence)
+                223
+            frame* (frame considered in-app because no frame is in-app)
+              module*
+                u'sun.nio.ch.Net'
+              filename (module takes precedence)
+                u'Net.java'
+              function*
+                u'bind'
+              lineno (function takes precedence)
+                425
+            frame* (frame considered in-app because no frame is in-app)
+              module*
+                u'sun.nio.ch.Net'
+              filename (module takes precedence)
+                u'Net.java'
+              function*
+                u'bind'
+              lineno (function takes precedence)
+                433
+            frame* (frame considered in-app because no frame is in-app)
+              module*
+                u'sun.nio.ch.Net'
+              filename (module takes precedence)
+                u'Net.java'
+              function*
+                u'bind0'
+          type*
+            u'BindException'
+          value (stacktrace and type take precedence)
+            u'Address already in use'
+        exception*
+          stacktrace*
+            frame* (frame considered in-app because no frame is in-app)
+              module*
+                u'io.sentry.example.Application'
+              filename (module takes precedence)
+                u'Application.java'
+              function*
+                u'main'
+              lineno (function takes precedence)
+                86
+            frame* (frame considered in-app because no frame is in-app)
+              module*
+                u'org.springframework.boot.SpringApplication'
+              filename (module takes precedence)
+                u'SpringApplication.java'
+              function*
+                u'run'
+              lineno (function takes precedence)
+                1151
+            frame* (frame considered in-app because no frame is in-app)
+              module*
+                u'org.springframework.boot.SpringApplication'
+              filename (module takes precedence)
+                u'SpringApplication.java'
+              function*
+                u'run'
+              lineno (function takes precedence)
+                1162
+            frame* (frame considered in-app because no frame is in-app)
+              module*
+                u'org.springframework.boot.SpringApplication'
+              filename (module takes precedence)
+                u'SpringApplication.java'
+              function*
+                u'run'
+              lineno (function takes precedence)
+                314
+            frame* (frame considered in-app because no frame is in-app)
+              module*
+                u'org.springframework.boot.SpringApplication'
+              filename (module takes precedence)
+                u'SpringApplication.java'
+              function*
+                u'refreshContext'
+              lineno (function takes precedence)
+                370
+            frame* (frame considered in-app because no frame is in-app)
+              module*
+                u'org.springframework.boot.SpringApplication'
+              filename (module takes precedence)
+                u'SpringApplication.java'
+              function*
+                u'refresh'
+              lineno (function takes precedence)
+                737
+            frame* (frame considered in-app because no frame is in-app)
+              module*
+                u'org.springframework.boot.context.embedded.EmbeddedWebApplicationContext'
+              filename (module takes precedence)
+                u'EmbeddedWebApplicationContext.java'
+              function*
+                u'refresh'
+              lineno (function takes precedence)
+                122
+            frame* (frame considered in-app because no frame is in-app)
+              module*
+                u'org.springframework.context.support.AbstractApplicationContext'
+              filename (module takes precedence)
+                u'AbstractApplicationContext.java'
+              function*
+                u'refresh'
+              lineno (function takes precedence)
+                545
+            frame* (frame considered in-app because no frame is in-app)
+              module*
+                u'org.springframework.boot.context.embedded.EmbeddedWebApplicationContext'
+              filename (module takes precedence)
+                u'EmbeddedWebApplicationContext.java'
+              function*
+                u'finishRefresh'
+              lineno (function takes precedence)
+                145
+            frame* (frame considered in-app because no frame is in-app)
+              module*
+                u'org.springframework.boot.context.embedded.EmbeddedWebApplicationContext'
+              filename (module takes precedence)
+                u'EmbeddedWebApplicationContext.java'
+              function*
+                u'startEmbeddedServletContainer'
+              lineno (function takes precedence)
+                297
+            frame* (frame considered in-app because no frame is in-app)
+              module*
+                u'org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer'
+              filename (module takes precedence)
+                u'TomcatEmbeddedServletContainer.java'
+              function*
+                u'start'
+              lineno (function takes precedence)
+                190
+            frame* (frame considered in-app because no frame is in-app)
+              module*
+                u'org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer'
+              filename (module takes precedence)
+                u'TomcatEmbeddedServletContainer.java'
+              function*
+                u'addPreviouslyRemovedConnectors'
+              lineno (function takes precedence)
+                247
+            frame* (frame considered in-app because no frame is in-app)
+              module*
+                u'org.apache.catalina.core.StandardService'
+              filename (module takes precedence)
+                u'StandardService.java'
+              function*
+                u'addConnector'
+              lineno (function takes precedence)
+                225
+            frame* (frame considered in-app because no frame is in-app)
+              module*
+                u'org.apache.catalina.util.LifecycleBase'
+              filename (module takes precedence)
+                u'LifecycleBase.java'
+              function*
+                u'start'
+              lineno (function takes precedence)
+                150
+            frame* (frame considered in-app because no frame is in-app)
+              module*
+                u'org.apache.catalina.connector.Connector'
+              filename (module takes precedence)
+                u'Connector.java'
+              function*
+                u'startInternal'
+              lineno (function takes precedence)
+                1000
+          type*
+            u'LifecycleException'
+          value (stacktrace and type take precedence)
+            u'service.getName(): "Tomcat";  Protocol handler start failed'
+        exception (exception has no stacktrace)
+          stacktrace (less than 10% of frames are in-app)
+            frame*
+              module*
+                u'io.sentry.example.Application'
+              filename (module takes precedence)
+                u'Application.java'
+              function*
+                u'main'
+              lineno (function takes precedence)
+                86
+            frame (non app frame)
+              module*
+                u'org.springframework.boot.SpringApplication'
+              filename (module takes precedence)
+                u'SpringApplication.java'
+              function*
+                u'run'
+              lineno (function takes precedence)
+                1151
+            frame (non app frame)
+              module*
+                u'org.springframework.boot.SpringApplication'
+              filename (module takes precedence)
+                u'SpringApplication.java'
+              function*
+                u'run'
+              lineno (function takes precedence)
+                1162
+            frame (non app frame)
+              module*
+                u'org.springframework.boot.SpringApplication'
+              filename (module takes precedence)
+                u'SpringApplication.java'
+              function*
+                u'run'
+              lineno (function takes precedence)
+                314
+            frame (non app frame)
+              module*
+                u'org.springframework.boot.SpringApplication'
+              filename (module takes precedence)
+                u'SpringApplication.java'
+              function*
+                u'refreshContext'
+              lineno (function takes precedence)
+                370
+            frame (non app frame)
+              module*
+                u'org.springframework.boot.SpringApplication'
+              filename (module takes precedence)
+                u'SpringApplication.java'
+              function*
+                u'refresh'
+              lineno (function takes precedence)
+                737
+            frame (non app frame)
+              module*
+                u'org.springframework.boot.context.embedded.EmbeddedWebApplicationContext'
+              filename (module takes precedence)
+                u'EmbeddedWebApplicationContext.java'
+              function*
+                u'refresh'
+              lineno (function takes precedence)
+                122
+            frame (non app frame)
+              module*
+                u'org.springframework.context.support.AbstractApplicationContext'
+              filename (module takes precedence)
+                u'AbstractApplicationContext.java'
+              function*
+                u'refresh'
+              lineno (function takes precedence)
+                545
+            frame (non app frame)
+              module*
+                u'org.springframework.boot.context.embedded.EmbeddedWebApplicationContext'
+              filename (module takes precedence)
+                u'EmbeddedWebApplicationContext.java'
+              function*
+                u'finishRefresh'
+              lineno (function takes precedence)
+                145
+            frame (non app frame)
+              module*
+                u'org.springframework.boot.context.embedded.EmbeddedWebApplicationContext'
+              filename (module takes precedence)
+                u'EmbeddedWebApplicationContext.java'
+              function*
+                u'startEmbeddedServletContainer'
+              lineno (function takes precedence)
+                297
+            frame (non app frame)
+              module*
+                u'org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer'
+              filename (module takes precedence)
+                u'TomcatEmbeddedServletContainer.java'
+              function*
+                u'start'
+              lineno (function takes precedence)
+                190
+            frame (non app frame)
+              module*
+                u'org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer'
+              filename (module takes precedence)
+                u'TomcatEmbeddedServletContainer.java'
+              function*
+                u'addPreviouslyRemovedConnectors'
+              lineno (function takes precedence)
+                247
+            frame (non app frame)
+              module*
+                u'org.apache.catalina.core.StandardService'
+              filename (module takes precedence)
+                u'StandardService.java'
+              function*
+                u'addConnector'
+              lineno (function takes precedence)
+                225
+            frame (non app frame)
+              module*
+                u'org.apache.catalina.util.LifecycleBase'
+              filename (module takes precedence)
+                u'LifecycleBase.java'
+              function*
+                u'start'
+              lineno (function takes precedence)
+                167
+          type*
+            u'LifecycleException'
+          value*
+            u'Failed to start component [Connector[HTTP/1.1-8080]]'
+--------------------------------------------------------------------------
+default:
+  hash: None
+  component:
+    default (exception of app takes precedence)
+      message (exception of app takes precedence)
+        u'Failed to start connector [Connector[HTTP/1.1-8080]]'
+--------------------------------------------------------------------------
+system:
+  hash: '8924849495809d42431719c2b9ab65c8'
+  component:
+    system*
+      chained-exception*
+        exception*
+          stacktrace*
+            frame*
+              module*
+                u'io.sentry.example.Application'
+              filename (module takes precedence)
+                u'Application.java'
+              function*
+                u'main'
+              lineno (function takes precedence)
+                86
+            frame*
+              module*
+                u'org.springframework.boot.SpringApplication'
+              filename (module takes precedence)
+                u'SpringApplication.java'
+              function*
+                u'run'
+              lineno (function takes precedence)
+                1151
+            frame*
+              module*
+                u'org.springframework.boot.SpringApplication'
+              filename (module takes precedence)
+                u'SpringApplication.java'
+              function*
+                u'run'
+              lineno (function takes precedence)
+                1162
+            frame*
+              module*
+                u'org.springframework.boot.SpringApplication'
+              filename (module takes precedence)
+                u'SpringApplication.java'
+              function*
+                u'run'
+              lineno (function takes precedence)
+                314
+            frame*
+              module*
+                u'org.springframework.boot.SpringApplication'
+              filename (module takes precedence)
+                u'SpringApplication.java'
+              function*
+                u'refreshContext'
+              lineno (function takes precedence)
+                370
+            frame*
+              module*
+                u'org.springframework.boot.SpringApplication'
+              filename (module takes precedence)
+                u'SpringApplication.java'
+              function*
+                u'refresh'
+              lineno (function takes precedence)
+                737
+            frame*
+              module*
+                u'org.springframework.boot.context.embedded.EmbeddedWebApplicationContext'
+              filename (module takes precedence)
+                u'EmbeddedWebApplicationContext.java'
+              function*
+                u'refresh'
+              lineno (function takes precedence)
+                122
+            frame*
+              module*
+                u'org.springframework.context.support.AbstractApplicationContext'
+              filename (module takes precedence)
+                u'AbstractApplicationContext.java'
+              function*
+                u'refresh'
+              lineno (function takes precedence)
+                545
+            frame*
+              module*
+                u'org.springframework.boot.context.embedded.EmbeddedWebApplicationContext'
+              filename (module takes precedence)
+                u'EmbeddedWebApplicationContext.java'
+              function*
+                u'finishRefresh'
+              lineno (function takes precedence)
+                145
+            frame*
+              module*
+                u'org.springframework.boot.context.embedded.EmbeddedWebApplicationContext'
+              filename (module takes precedence)
+                u'EmbeddedWebApplicationContext.java'
+              function*
+                u'startEmbeddedServletContainer'
+              lineno (function takes precedence)
+                297
+            frame*
+              module*
+                u'org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer'
+              filename (module takes precedence)
+                u'TomcatEmbeddedServletContainer.java'
+              function*
+                u'start'
+              lineno (function takes precedence)
+                190
+            frame*
+              module*
+                u'org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer'
+              filename (module takes precedence)
+                u'TomcatEmbeddedServletContainer.java'
+              function*
+                u'addPreviouslyRemovedConnectors'
+              lineno (function takes precedence)
+                247
+            frame*
+              module*
+                u'org.apache.catalina.core.StandardService'
+              filename (module takes precedence)
+                u'StandardService.java'
+              function*
+                u'addConnector'
+              lineno (function takes precedence)
+                225
+            frame*
+              module*
+                u'org.apache.catalina.util.LifecycleBase'
+              filename (module takes precedence)
+                u'LifecycleBase.java'
+              function*
+                u'start'
+              lineno (function takes precedence)
+                150
+            frame*
+              module*
+                u'org.apache.catalina.connector.Connector'
+              filename (module takes precedence)
+                u'Connector.java'
+              function*
+                u'startInternal'
+              lineno (function takes precedence)
+                993
+            frame*
+              module*
+                u'org.apache.coyote.AbstractProtocol'
+              filename (module takes precedence)
+                u'AbstractProtocol.java'
+              function*
+                u'start'
+              lineno (function takes precedence)
+                573
+            frame*
+              module*
+                u'org.apache.tomcat.util.net.AbstractEndpoint'
+              filename (module takes precedence)
+                u'AbstractEndpoint.java'
+              function*
+                u'start'
+              lineno (function takes precedence)
+                980
+            frame*
+              module*
+                u'org.apache.tomcat.util.net.NioEndpoint'
+              filename (module takes precedence)
+                u'NioEndpoint.java'
+              function*
+                u'bind'
+              lineno (function takes precedence)
+                210
+            frame*
+              module*
+                u'sun.nio.ch.ServerSocketAdaptor'
+              filename (module takes precedence)
+                u'ServerSocketAdaptor.java'
+              function*
+                u'bind'
+              lineno (function takes precedence)
+                74
+            frame*
+              module*
+                u'sun.nio.ch.ServerSocketChannelImpl'
+              filename (module takes precedence)
+                u'ServerSocketChannelImpl.java'
+              function*
+                u'bind'
+              lineno (function takes precedence)
+                223
+            frame*
+              module*
+                u'sun.nio.ch.Net'
+              filename (module takes precedence)
+                u'Net.java'
+              function*
+                u'bind'
+              lineno (function takes precedence)
+                425
+            frame*
+              module*
+                u'sun.nio.ch.Net'
+              filename (module takes precedence)
+                u'Net.java'
+              function*
+                u'bind'
+              lineno (function takes precedence)
+                433
+            frame*
+              module*
+                u'sun.nio.ch.Net'
+              filename (module takes precedence)
+                u'Net.java'
+              function*
+                u'bind0'
+          type*
+            u'BindException'
+          value (stacktrace and type take precedence)
+            u'Address already in use'
+        exception*
+          stacktrace*
+            frame*
+              module*
+                u'io.sentry.example.Application'
+              filename (module takes precedence)
+                u'Application.java'
+              function*
+                u'main'
+              lineno (function takes precedence)
+                86
+            frame*
+              module*
+                u'org.springframework.boot.SpringApplication'
+              filename (module takes precedence)
+                u'SpringApplication.java'
+              function*
+                u'run'
+              lineno (function takes precedence)
+                1151
+            frame*
+              module*
+                u'org.springframework.boot.SpringApplication'
+              filename (module takes precedence)
+                u'SpringApplication.java'
+              function*
+                u'run'
+              lineno (function takes precedence)
+                1162
+            frame*
+              module*
+                u'org.springframework.boot.SpringApplication'
+              filename (module takes precedence)
+                u'SpringApplication.java'
+              function*
+                u'run'
+              lineno (function takes precedence)
+                314
+            frame*
+              module*
+                u'org.springframework.boot.SpringApplication'
+              filename (module takes precedence)
+                u'SpringApplication.java'
+              function*
+                u'refreshContext'
+              lineno (function takes precedence)
+                370
+            frame*
+              module*
+                u'org.springframework.boot.SpringApplication'
+              filename (module takes precedence)
+                u'SpringApplication.java'
+              function*
+                u'refresh'
+              lineno (function takes precedence)
+                737
+            frame*
+              module*
+                u'org.springframework.boot.context.embedded.EmbeddedWebApplicationContext'
+              filename (module takes precedence)
+                u'EmbeddedWebApplicationContext.java'
+              function*
+                u'refresh'
+              lineno (function takes precedence)
+                122
+            frame*
+              module*
+                u'org.springframework.context.support.AbstractApplicationContext'
+              filename (module takes precedence)
+                u'AbstractApplicationContext.java'
+              function*
+                u'refresh'
+              lineno (function takes precedence)
+                545
+            frame*
+              module*
+                u'org.springframework.boot.context.embedded.EmbeddedWebApplicationContext'
+              filename (module takes precedence)
+                u'EmbeddedWebApplicationContext.java'
+              function*
+                u'finishRefresh'
+              lineno (function takes precedence)
+                145
+            frame*
+              module*
+                u'org.springframework.boot.context.embedded.EmbeddedWebApplicationContext'
+              filename (module takes precedence)
+                u'EmbeddedWebApplicationContext.java'
+              function*
+                u'startEmbeddedServletContainer'
+              lineno (function takes precedence)
+                297
+            frame*
+              module*
+                u'org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer'
+              filename (module takes precedence)
+                u'TomcatEmbeddedServletContainer.java'
+              function*
+                u'start'
+              lineno (function takes precedence)
+                190
+            frame*
+              module*
+                u'org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer'
+              filename (module takes precedence)
+                u'TomcatEmbeddedServletContainer.java'
+              function*
+                u'addPreviouslyRemovedConnectors'
+              lineno (function takes precedence)
+                247
+            frame*
+              module*
+                u'org.apache.catalina.core.StandardService'
+              filename (module takes precedence)
+                u'StandardService.java'
+              function*
+                u'addConnector'
+              lineno (function takes precedence)
+                225
+            frame*
+              module*
+                u'org.apache.catalina.util.LifecycleBase'
+              filename (module takes precedence)
+                u'LifecycleBase.java'
+              function*
+                u'start'
+              lineno (function takes precedence)
+                150
+            frame*
+              module*
+                u'org.apache.catalina.connector.Connector'
+              filename (module takes precedence)
+                u'Connector.java'
+              function*
+                u'startInternal'
+              lineno (function takes precedence)
+                1000
+          type*
+            u'LifecycleException'
+          value (stacktrace and type take precedence)
+            u'service.getName(): "Tomcat";  Protocol handler start failed'
+        exception*
+          stacktrace*
+            frame*
+              module*
+                u'io.sentry.example.Application'
+              filename (module takes precedence)
+                u'Application.java'
+              function*
+                u'main'
+              lineno (function takes precedence)
+                86
+            frame*
+              module*
+                u'org.springframework.boot.SpringApplication'
+              filename (module takes precedence)
+                u'SpringApplication.java'
+              function*
+                u'run'
+              lineno (function takes precedence)
+                1151
+            frame*
+              module*
+                u'org.springframework.boot.SpringApplication'
+              filename (module takes precedence)
+                u'SpringApplication.java'
+              function*
+                u'run'
+              lineno (function takes precedence)
+                1162
+            frame*
+              module*
+                u'org.springframework.boot.SpringApplication'
+              filename (module takes precedence)
+                u'SpringApplication.java'
+              function*
+                u'run'
+              lineno (function takes precedence)
+                314
+            frame*
+              module*
+                u'org.springframework.boot.SpringApplication'
+              filename (module takes precedence)
+                u'SpringApplication.java'
+              function*
+                u'refreshContext'
+              lineno (function takes precedence)
+                370
+            frame*
+              module*
+                u'org.springframework.boot.SpringApplication'
+              filename (module takes precedence)
+                u'SpringApplication.java'
+              function*
+                u'refresh'
+              lineno (function takes precedence)
+                737
+            frame*
+              module*
+                u'org.springframework.boot.context.embedded.EmbeddedWebApplicationContext'
+              filename (module takes precedence)
+                u'EmbeddedWebApplicationContext.java'
+              function*
+                u'refresh'
+              lineno (function takes precedence)
+                122
+            frame*
+              module*
+                u'org.springframework.context.support.AbstractApplicationContext'
+              filename (module takes precedence)
+                u'AbstractApplicationContext.java'
+              function*
+                u'refresh'
+              lineno (function takes precedence)
+                545
+            frame*
+              module*
+                u'org.springframework.boot.context.embedded.EmbeddedWebApplicationContext'
+              filename (module takes precedence)
+                u'EmbeddedWebApplicationContext.java'
+              function*
+                u'finishRefresh'
+              lineno (function takes precedence)
+                145
+            frame*
+              module*
+                u'org.springframework.boot.context.embedded.EmbeddedWebApplicationContext'
+              filename (module takes precedence)
+                u'EmbeddedWebApplicationContext.java'
+              function*
+                u'startEmbeddedServletContainer'
+              lineno (function takes precedence)
+                297
+            frame*
+              module*
+                u'org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer'
+              filename (module takes precedence)
+                u'TomcatEmbeddedServletContainer.java'
+              function*
+                u'start'
+              lineno (function takes precedence)
+                190
+            frame*
+              module*
+                u'org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer'
+              filename (module takes precedence)
+                u'TomcatEmbeddedServletContainer.java'
+              function*
+                u'addPreviouslyRemovedConnectors'
+              lineno (function takes precedence)
+                247
+            frame*
+              module*
+                u'org.apache.catalina.core.StandardService'
+              filename (module takes precedence)
+                u'StandardService.java'
+              function*
+                u'addConnector'
+              lineno (function takes precedence)
+                225
+            frame*
+              module*
+                u'org.apache.catalina.util.LifecycleBase'
+              filename (module takes precedence)
+                u'LifecycleBase.java'
+              function*
+                u'start'
+              lineno (function takes precedence)
+                167
+          type*
+            u'LifecycleException'
+          value (stacktrace and type take precedence)
+            u'Failed to start component [Connector[HTTP/1.1-8080]]'
diff --git a/tests/sentry/event_hashing/fixtures/java-minimal.json b/tests/sentry/event_hashing/fixtures/java-minimal.json
new file mode 100644
index 0000000000..780132347a
--- /dev/null
+++ b/tests/sentry/event_hashing/fixtures/java-minimal.json
@@ -0,0 +1,462 @@
+{
+  "culprit": "io.sentry.example.Application in home",
+  "event_id": "1c373c00a6da473c869dda24823f2eb4",
+  "platform": "java",
+  "logger": "org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[...",
+  "exception": {
+    "values": [
+      {
+        "stacktrace": {
+          "frames": [
+            {
+              "function": "run",
+              "abs_path": "Thread.java",
+              "module": "java.lang.Thread",
+              "filename": "Thread.java",
+              "lineno": 844,
+              "in_app": false
+            },
+            {
+              "function": "run",
+              "abs_path": "TaskThread.java",
+              "module": "org.apache.tomcat.util.threads.TaskThread$WrappingRunnable",
+              "filename": "TaskThread.java",
+              "lineno": 61,
+              "in_app": false
+            },
+            {
+              "function": "run",
+              "abs_path": "ThreadPoolExecutor.java",
+              "module": "java.util.concurrent.ThreadPoolExecutor$Worker",
+              "filename": "ThreadPoolExecutor.java",
+              "lineno": 641,
+              "in_app": false
+            },
+            {
+              "function": "runWorker",
+              "abs_path": "ThreadPoolExecutor.java",
+              "module": "java.util.concurrent.ThreadPoolExecutor",
+              "filename": "ThreadPoolExecutor.java",
+              "lineno": 1167,
+              "in_app": false
+            },
+            {
+              "function": "run",
+              "abs_path": "SocketProcessorBase.java",
+              "module": "org.apache.tomcat.util.net.SocketProcessorBase",
+              "filename": "SocketProcessorBase.java",
+              "lineno": 49,
+              "in_app": false
+            },
+            {
+              "function": "doRun",
+              "abs_path": "NioEndpoint.java",
+              "module": "org.apache.tomcat.util.net.NioEndpoint$SocketProcessor",
+              "filename": "NioEndpoint.java",
+              "lineno": 1434,
+              "in_app": false
+            },
+            {
+              "function": "process",
+              "abs_path": "AbstractProtocol.java",
+              "module": "org.apache.coyote.AbstractProtocol$ConnectionHandler",
+              "filename": "AbstractProtocol.java",
+              "lineno": 798,
+              "in_app": false
+            },
+            {
+              "function": "process",
+              "abs_path": "AbstractProcessorLight.java",
+              "module": "org.apache.coyote.AbstractProcessorLight",
+              "filename": "AbstractProcessorLight.java",
+              "lineno": 66,
+              "in_app": false
+            },
+            {
+              "function": "service",
+              "abs_path": "Http11Processor.java",
+              "module": "org.apache.coyote.http11.Http11Processor",
+              "filename": "Http11Processor.java",
+              "lineno": 783,
+              "in_app": false
+            },
+            {
+              "function": "service",
+              "abs_path": "CoyoteAdapter.java",
+              "module": "org.apache.catalina.connector.CoyoteAdapter",
+              "filename": "CoyoteAdapter.java",
+              "lineno": 349,
+              "in_app": false
+            },
+            {
+              "function": "invoke",
+              "abs_path": "StandardEngineValve.java",
+              "module": "org.apache.catalina.core.StandardEngineValve",
+              "filename": "StandardEngineValve.java",
+              "lineno": 87,
+              "in_app": false
+            },
+            {
+              "function": "invoke",
+              "abs_path": "ErrorReportValve.java",
+              "module": "org.apache.catalina.valves.ErrorReportValve",
+              "filename": "ErrorReportValve.java",
+              "lineno": 79,
+              "in_app": false
+            },
+            {
+              "function": "invoke",
+              "abs_path": "StandardHostValve.java",
+              "module": "org.apache.catalina.core.StandardHostValve",
+              "filename": "StandardHostValve.java",
+              "lineno": 140,
+              "in_app": false
+            },
+            {
+              "function": "invoke",
+              "abs_path": "AuthenticatorBase.java",
+              "module": "org.apache.catalina.authenticator.AuthenticatorBase",
+              "filename": "AuthenticatorBase.java",
+              "lineno": 474,
+              "in_app": false
+            },
+            {
+              "function": "invoke",
+              "abs_path": "StandardContextValve.java",
+              "module": "org.apache.catalina.core.StandardContextValve",
+              "filename": "StandardContextValve.java",
+              "lineno": 96,
+              "in_app": false
+            },
+            {
+              "function": "invoke",
+              "abs_path": "StandardWrapperValve.java",
+              "module": "org.apache.catalina.core.StandardWrapperValve",
+              "filename": "StandardWrapperValve.java",
+              "lineno": 198,
+              "in_app": false
+            },
+            {
+              "function": "doFilter",
+              "abs_path": "ApplicationFilterChain.java",
+              "module": "org.apache.catalina.core.ApplicationFilterChain",
+              "filename": "ApplicationFilterChain.java",
+              "lineno": 165,
+              "in_app": false
+            },
+            {
+              "function": "internalDoFilter",
+              "abs_path": "ApplicationFilterChain.java",
+              "module": "org.apache.catalina.core.ApplicationFilterChain",
+              "filename": "ApplicationFilterChain.java",
+              "lineno": 192,
+              "in_app": false
+            },
+            {
+              "function": "doFilter",
+              "abs_path": "OncePerRequestFilter.java",
+              "module": "org.springframework.web.filter.OncePerRequestFilter",
+              "filename": "OncePerRequestFilter.java",
+              "lineno": 107,
+              "in_app": false
+            },
+            {
+              "function": "doFilterInternal",
+              "abs_path": "CharacterEncodingFilter.java",
+              "module": "org.springframework.web.filter.CharacterEncodingFilter",
+              "filename": "CharacterEncodingFilter.java",
+              "lineno": 197,
+              "in_app": false
+            },
+            {
+              "function": "doFilter",
+              "abs_path": "ApplicationFilterChain.java",
+              "module": "org.apache.catalina.core.ApplicationFilterChain",
+              "filename": "ApplicationFilterChain.java",
+              "lineno": 165,
+              "in_app": false
+            },
+            {
+              "function": "internalDoFilter",
+              "abs_path": "ApplicationFilterChain.java",
+              "module": "org.apache.catalina.core.ApplicationFilterChain",
+              "filename": "ApplicationFilterChain.java",
+              "lineno": 192,
+              "in_app": false
+            },
+            {
+              "function": "doFilter",
+              "abs_path": "OncePerRequestFilter.java",
+              "module": "org.springframework.web.filter.OncePerRequestFilter",
+              "filename": "OncePerRequestFilter.java",
+              "lineno": 107,
+              "in_app": false
+            },
+            {
+              "function": "doFilterInternal",
+              "abs_path": "HiddenHttpMethodFilter.java",
+              "module": "org.springframework.web.filter.HiddenHttpMethodFilter",
+              "filename": "HiddenHttpMethodFilter.java",
+              "lineno": 81,
+              "in_app": false
+            },
+            {
+              "function": "doFilter",
+              "abs_path": "ApplicationFilterChain.java",
+              "module": "org.apache.catalina.core.ApplicationFilterChain",
+              "filename": "ApplicationFilterChain.java",
+              "lineno": 165,
+              "in_app": false
+            },
+            {
+              "function": "internalDoFilter",
+              "abs_path": "ApplicationFilterChain.java",
+              "module": "org.apache.catalina.core.ApplicationFilterChain",
+              "filename": "ApplicationFilterChain.java",
+              "lineno": 192,
+              "in_app": false
+            },
+            {
+              "function": "doFilter",
+              "abs_path": "OncePerRequestFilter.java",
+              "module": "org.springframework.web.filter.OncePerRequestFilter",
+              "filename": "OncePerRequestFilter.java",
+              "lineno": 107,
+              "in_app": false
+            },
+            {
+              "function": "doFilterInternal",
+              "abs_path": "HttpPutFormContentFilter.java",
+              "module": "org.springframework.web.filter.HttpPutFormContentFilter",
+              "filename": "HttpPutFormContentFilter.java",
+              "lineno": 105,
+              "in_app": false
+            },
+            {
+              "function": "doFilter",
+              "abs_path": "ApplicationFilterChain.java",
+              "module": "org.apache.catalina.core.ApplicationFilterChain",
+              "filename": "ApplicationFilterChain.java",
+              "lineno": 165,
+              "in_app": false
+            },
+            {
+              "function": "internalDoFilter",
+              "abs_path": "ApplicationFilterChain.java",
+              "module": "org.apache.catalina.core.ApplicationFilterChain",
+              "filename": "ApplicationFilterChain.java",
+              "lineno": 192,
+              "in_app": false
+            },
+            {
+              "function": "doFilter",
+              "abs_path": "OncePerRequestFilter.java",
+              "module": "org.springframework.web.filter.OncePerRequestFilter",
+              "filename": "OncePerRequestFilter.java",
+              "lineno": 107,
+              "in_app": false
+            },
+            {
+              "function": "doFilterInternal",
+              "abs_path": "RequestContextFilter.java",
+              "module": "org.springframework.web.filter.RequestContextFilter",
+              "filename": "RequestContextFilter.java",
+              "lineno": 99,
+              "in_app": false
+            },
+            {
+              "function": "doFilter",
+              "abs_path": "ApplicationFilterChain.java",
+              "module": "org.apache.catalina.core.ApplicationFilterChain",
+              "filename": "ApplicationFilterChain.java",
+              "lineno": 165,
+              "in_app": false
+            },
+            {
+              "function": "internalDoFilter",
+              "abs_path": "ApplicationFilterChain.java",
+              "module": "org.apache.catalina.core.ApplicationFilterChain",
+              "filename": "ApplicationFilterChain.java",
+              "lineno": 192,
+              "in_app": false
+            },
+            {
+              "function": "doFilter",
+              "abs_path": "WsFilter.java",
+              "module": "org.apache.tomcat.websocket.server.WsFilter",
+              "filename": "WsFilter.java",
+              "lineno": 52,
+              "in_app": false
+            },
+            {
+              "function": "doFilter",
+              "abs_path": "ApplicationFilterChain.java",
+              "module": "org.apache.catalina.core.ApplicationFilterChain",
+              "filename": "ApplicationFilterChain.java",
+              "lineno": 165,
+              "in_app": false
+            },
+            {
+              "function": "internalDoFilter",
+              "abs_path": "ApplicationFilterChain.java",
+              "module": "org.apache.catalina.core.ApplicationFilterChain",
+              "filename": "ApplicationFilterChain.java",
+              "lineno": 230,
+              "in_app": false
+            },
+            {
+              "function": "service",
+              "abs_path": "HttpServlet.java",
+              "module": "javax.servlet.http.HttpServlet",
+              "filename": "HttpServlet.java",
+              "lineno": 729,
+              "in_app": false
+            },
+            {
+              "function": "service",
+              "abs_path": "FrameworkServlet.java",
+              "module": "org.springframework.web.servlet.FrameworkServlet",
+              "filename": "FrameworkServlet.java",
+              "lineno": 846,
+              "in_app": false
+            },
+            {
+              "function": "service",
+              "abs_path": "HttpServlet.java",
+              "module": "javax.servlet.http.HttpServlet",
+              "filename": "HttpServlet.java",
+              "lineno": 622,
+              "in_app": false
+            },
+            {
+              "function": "doGet",
+              "abs_path": "FrameworkServlet.java",
+              "module": "org.springframework.web.servlet.FrameworkServlet",
+              "filename": "FrameworkServlet.java",
+              "lineno": 861,
+              "in_app": false
+            },
+            {
+              "function": "processRequest",
+              "abs_path": "FrameworkServlet.java",
+              "module": "org.springframework.web.servlet.FrameworkServlet",
+              "filename": "FrameworkServlet.java",
+              "lineno": 970,
+              "in_app": false
+            },
+            {
+              "function": "doService",
+              "abs_path": "DispatcherServlet.java",
+              "module": "org.springframework.web.servlet.DispatcherServlet",
+              "filename": "DispatcherServlet.java",
+              "lineno": 897,
+              "in_app": false
+            },
+            {
+              "function": "doDispatch",
+              "abs_path": "DispatcherServlet.java",
+              "module": "org.springframework.web.servlet.DispatcherServlet",
+              "filename": "DispatcherServlet.java",
+              "lineno": 963,
+              "in_app": false
+            },
+            {
+              "function": "handle",
+              "abs_path": "AbstractHandlerMethodAdapter.java",
+              "module": "org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter",
+              "filename": "AbstractHandlerMethodAdapter.java",
+              "lineno": 85,
+              "in_app": false
+            },
+            {
+              "function": "handleInternal",
+              "abs_path": "RequestMappingHandlerAdapter.java",
+              "module": "org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter",
+              "filename": "RequestMappingHandlerAdapter.java",
+              "lineno": 738,
+              "in_app": false
+            },
+            {
+              "function": "invokeHandlerMethod",
+              "abs_path": "RequestMappingHandlerAdapter.java",
+              "module": "org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter",
+              "filename": "RequestMappingHandlerAdapter.java",
+              "lineno": 827,
+              "in_app": false
+            },
+            {
+              "function": "invokeAndHandle",
+              "abs_path": "ServletInvocableHandlerMethod.java",
+              "module": "org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod",
+              "filename": "ServletInvocableHandlerMethod.java",
+              "lineno": 116,
+              "in_app": false
+            },
+            {
+              "function": "invokeForRequest",
+              "abs_path": "InvocableHandlerMethod.java",
+              "module": "org.springframework.web.method.support.InvocableHandlerMethod",
+              "filename": "InvocableHandlerMethod.java",
+              "lineno": 133,
+              "in_app": false
+            },
+            {
+              "function": "doInvoke",
+              "abs_path": "InvocableHandlerMethod.java",
+              "module": "org.springframework.web.method.support.InvocableHandlerMethod",
+              "filename": "InvocableHandlerMethod.java",
+              "lineno": 205,
+              "in_app": false
+            },
+            {
+              "function": "invoke",
+              "abs_path": "Method.java",
+              "module": "java.lang.reflect.Method",
+              "filename": "Method.java",
+              "lineno": 564,
+              "in_app": false
+            },
+            {
+              "function": "invoke",
+              "abs_path": "DelegatingMethodAccessorImpl.java",
+              "module": "jdk.internal.reflect.DelegatingMethodAccessorImpl",
+              "filename": "DelegatingMethodAccessorImpl.java",
+              "lineno": 43,
+              "in_app": false
+            },
+            {
+              "function": "invoke",
+              "abs_path": "NativeMethodAccessorImpl.java",
+              "module": "jdk.internal.reflect.NativeMethodAccessorImpl",
+              "filename": "NativeMethodAccessorImpl.java",
+              "lineno": 62,
+              "in_app": false
+            },
+            {
+              "function": "invoke0",
+              "abs_path": "NativeMethodAccessorImpl.java",
+              "filename": "NativeMethodAccessorImpl.java",
+              "module": "jdk.internal.reflect.NativeMethodAccessorImpl",
+              "in_app": false
+            },
+            {
+              "function": "home",
+              "abs_path": "Application.java",
+              "module": "io.sentry.example.Application",
+              "filename": "Application.java",
+              "lineno": 30,
+              "in_app": false
+            }
+          ]
+        },
+        "type": "ArithmeticException",
+        "value": "/ by zero",
+        "module": "java.lang"
+      }
+    ]
+  },
+  "logentry": {
+    "formatted": "Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.ArithmeticException: / by zero] with root cause"
+  },
+  "release": null
+}
diff --git a/tests/sentry/event_hashing/fixtures/java-minimal.out b/tests/sentry/event_hashing/fixtures/java-minimal.out
new file mode 100644
index 0000000000..4586ed9f07
--- /dev/null
+++ b/tests/sentry/event_hashing/fixtures/java-minimal.out
@@ -0,0 +1,1014 @@
+app:
+  hash: None
+  component:
+    app (exception of system takes precedence)
+      exception (ignored because hash matches system variant)
+        stacktrace*
+          frame* (frame considered in-app because no frame is in-app)
+            module*
+              u'java.lang.Thread'
+            filename (module takes precedence)
+              u'Thread.java'
+            function*
+              u'run'
+            lineno (function takes precedence)
+              844
+          frame* (frame considered in-app because no frame is in-app)
+            module*
+              u'org.apache.tomcat.util.threads.TaskThread$WrappingRunnable'
+            filename (module takes precedence)
+              u'TaskThread.java'
+            function*
+              u'run'
+            lineno (function takes precedence)
+              61
+          frame* (frame considered in-app because no frame is in-app)
+            module*
+              u'java.util.concurrent.ThreadPoolExecutor$Worker'
+            filename (module takes precedence)
+              u'ThreadPoolExecutor.java'
+            function*
+              u'run'
+            lineno (function takes precedence)
+              641
+          frame* (frame considered in-app because no frame is in-app)
+            module*
+              u'java.util.concurrent.ThreadPoolExecutor'
+            filename (module takes precedence)
+              u'ThreadPoolExecutor.java'
+            function*
+              u'runWorker'
+            lineno (function takes precedence)
+              1167
+          frame* (frame considered in-app because no frame is in-app)
+            module*
+              u'org.apache.tomcat.util.net.SocketProcessorBase'
+            filename (module takes precedence)
+              u'SocketProcessorBase.java'
+            function*
+              u'run'
+            lineno (function takes precedence)
+              49
+          frame* (frame considered in-app because no frame is in-app)
+            module*
+              u'org.apache.tomcat.util.net.NioEndpoint$SocketProcessor'
+            filename (module takes precedence)
+              u'NioEndpoint.java'
+            function*
+              u'doRun'
+            lineno (function takes precedence)
+              1434
+          frame* (frame considered in-app because no frame is in-app)
+            module*
+              u'org.apache.coyote.AbstractProtocol$ConnectionHandler'
+            filename (module takes precedence)
+              u'AbstractProtocol.java'
+            function*
+              u'process'
+            lineno (function takes precedence)
+              798
+          frame* (frame considered in-app because no frame is in-app)
+            module*
+              u'org.apache.coyote.AbstractProcessorLight'
+            filename (module takes precedence)
+              u'AbstractProcessorLight.java'
+            function*
+              u'process'
+            lineno (function takes precedence)
+              66
+          frame* (frame considered in-app because no frame is in-app)
+            module*
+              u'org.apache.coyote.http11.Http11Processor'
+            filename (module takes precedence)
+              u'Http11Processor.java'
+            function*
+              u'service'
+            lineno (function takes precedence)
+              783
+          frame* (frame considered in-app because no frame is in-app)
+            module*
+              u'org.apache.catalina.connector.CoyoteAdapter'
+            filename (module takes precedence)
+              u'CoyoteAdapter.java'
+            function*
+              u'service'
+            lineno (function takes precedence)
+              349
+          frame* (frame considered in-app because no frame is in-app)
+            module*
+              u'org.apache.catalina.core.StandardEngineValve'
+            filename (module takes precedence)
+              u'StandardEngineValve.java'
+            function*
+              u'invoke'
+            lineno (function takes precedence)
+              87
+          frame* (frame considered in-app because no frame is in-app)
+            module*
+              u'org.apache.catalina.valves.ErrorReportValve'
+            filename (module takes precedence)
+              u'ErrorReportValve.java'
+            function*
+              u'invoke'
+            lineno (function takes precedence)
+              79
+          frame* (frame considered in-app because no frame is in-app)
+            module*
+              u'org.apache.catalina.core.StandardHostValve'
+            filename (module takes precedence)
+              u'StandardHostValve.java'
+            function*
+              u'invoke'
+            lineno (function takes precedence)
+              140
+          frame* (frame considered in-app because no frame is in-app)
+            module*
+              u'org.apache.catalina.authenticator.AuthenticatorBase'
+            filename (module takes precedence)
+              u'AuthenticatorBase.java'
+            function*
+              u'invoke'
+            lineno (function takes precedence)
+              474
+          frame* (frame considered in-app because no frame is in-app)
+            module*
+              u'org.apache.catalina.core.StandardContextValve'
+            filename (module takes precedence)
+              u'StandardContextValve.java'
+            function*
+              u'invoke'
+            lineno (function takes precedence)
+              96
+          frame* (frame considered in-app because no frame is in-app)
+            module*
+              u'org.apache.catalina.core.StandardWrapperValve'
+            filename (module takes precedence)
+              u'StandardWrapperValve.java'
+            function*
+              u'invoke'
+            lineno (function takes precedence)
+              198
+          frame* (frame considered in-app because no frame is in-app)
+            module*
+              u'org.apache.catalina.core.ApplicationFilterChain'
+            filename (module takes precedence)
+              u'ApplicationFilterChain.java'
+            function*
+              u'doFilter'
+            lineno (function takes precedence)
+              165
+          frame* (frame considered in-app because no frame is in-app)
+            module*
+              u'org.apache.catalina.core.ApplicationFilterChain'
+            filename (module takes precedence)
+              u'ApplicationFilterChain.java'
+            function*
+              u'internalDoFilter'
+            lineno (function takes precedence)
+              192
+          frame* (frame considered in-app because no frame is in-app)
+            module*
+              u'org.springframework.web.filter.OncePerRequestFilter'
+            filename (module takes precedence)
+              u'OncePerRequestFilter.java'
+            function*
+              u'doFilter'
+            lineno (function takes precedence)
+              107
+          frame* (frame considered in-app because no frame is in-app)
+            module*
+              u'org.springframework.web.filter.CharacterEncodingFilter'
+            filename (module takes precedence)
+              u'CharacterEncodingFilter.java'
+            function*
+              u'doFilterInternal'
+            lineno (function takes precedence)
+              197
+          frame* (frame considered in-app because no frame is in-app)
+            module*
+              u'org.apache.catalina.core.ApplicationFilterChain'
+            filename (module takes precedence)
+              u'ApplicationFilterChain.java'
+            function*
+              u'doFilter'
+            lineno (function takes precedence)
+              165
+          frame* (frame considered in-app because no frame is in-app)
+            module*
+              u'org.apache.catalina.core.ApplicationFilterChain'
+            filename (module takes precedence)
+              u'ApplicationFilterChain.java'
+            function*
+              u'internalDoFilter'
+            lineno (function takes precedence)
+              192
+          frame* (frame considered in-app because no frame is in-app)
+            module*
+              u'org.springframework.web.filter.OncePerRequestFilter'
+            filename (module takes precedence)
+              u'OncePerRequestFilter.java'
+            function*
+              u'doFilter'
+            lineno (function takes precedence)
+              107
+          frame* (frame considered in-app because no frame is in-app)
+            module*
+              u'org.springframework.web.filter.HiddenHttpMethodFilter'
+            filename (module takes precedence)
+              u'HiddenHttpMethodFilter.java'
+            function*
+              u'doFilterInternal'
+            lineno (function takes precedence)
+              81
+          frame* (frame considered in-app because no frame is in-app)
+            module*
+              u'org.apache.catalina.core.ApplicationFilterChain'
+            filename (module takes precedence)
+              u'ApplicationFilterChain.java'
+            function*
+              u'doFilter'
+            lineno (function takes precedence)
+              165
+          frame* (frame considered in-app because no frame is in-app)
+            module*
+              u'org.apache.catalina.core.ApplicationFilterChain'
+            filename (module takes precedence)
+              u'ApplicationFilterChain.java'
+            function*
+              u'internalDoFilter'
+            lineno (function takes precedence)
+              192
+          frame* (frame considered in-app because no frame is in-app)
+            module*
+              u'org.springframework.web.filter.OncePerRequestFilter'
+            filename (module takes precedence)
+              u'OncePerRequestFilter.java'
+            function*
+              u'doFilter'
+            lineno (function takes precedence)
+              107
+          frame* (frame considered in-app because no frame is in-app)
+            module*
+              u'org.springframework.web.filter.HttpPutFormContentFilter'
+            filename (module takes precedence)
+              u'HttpPutFormContentFilter.java'
+            function*
+              u'doFilterInternal'
+            lineno (function takes precedence)
+              105
+          frame* (frame considered in-app because no frame is in-app)
+            module*
+              u'org.apache.catalina.core.ApplicationFilterChain'
+            filename (module takes precedence)
+              u'ApplicationFilterChain.java'
+            function*
+              u'doFilter'
+            lineno (function takes precedence)
+              165
+          frame* (frame considered in-app because no frame is in-app)
+            module*
+              u'org.apache.catalina.core.ApplicationFilterChain'
+            filename (module takes precedence)
+              u'ApplicationFilterChain.java'
+            function*
+              u'internalDoFilter'
+            lineno (function takes precedence)
+              192
+          frame* (frame considered in-app because no frame is in-app)
+            module*
+              u'org.springframework.web.filter.OncePerRequestFilter'
+            filename (module takes precedence)
+              u'OncePerRequestFilter.java'
+            function*
+              u'doFilter'
+            lineno (function takes precedence)
+              107
+          frame* (frame considered in-app because no frame is in-app)
+            module*
+              u'org.springframework.web.filter.RequestContextFilter'
+            filename (module takes precedence)
+              u'RequestContextFilter.java'
+            function*
+              u'doFilterInternal'
+            lineno (function takes precedence)
+              99
+          frame* (frame considered in-app because no frame is in-app)
+            module*
+              u'org.apache.catalina.core.ApplicationFilterChain'
+            filename (module takes precedence)
+              u'ApplicationFilterChain.java'
+            function*
+              u'doFilter'
+            lineno (function takes precedence)
+              165
+          frame* (frame considered in-app because no frame is in-app)
+            module*
+              u'org.apache.catalina.core.ApplicationFilterChain'
+            filename (module takes precedence)
+              u'ApplicationFilterChain.java'
+            function*
+              u'internalDoFilter'
+            lineno (function takes precedence)
+              192
+          frame* (frame considered in-app because no frame is in-app)
+            module*
+              u'org.apache.tomcat.websocket.server.WsFilter'
+            filename (module takes precedence)
+              u'WsFilter.java'
+            function*
+              u'doFilter'
+            lineno (function takes precedence)
+              52
+          frame* (frame considered in-app because no frame is in-app)
+            module*
+              u'org.apache.catalina.core.ApplicationFilterChain'
+            filename (module takes precedence)
+              u'ApplicationFilterChain.java'
+            function*
+              u'doFilter'
+            lineno (function takes precedence)
+              165
+          frame* (frame considered in-app because no frame is in-app)
+            module*
+              u'org.apache.catalina.core.ApplicationFilterChain'
+            filename (module takes precedence)
+              u'ApplicationFilterChain.java'
+            function*
+              u'internalDoFilter'
+            lineno (function takes precedence)
+              230
+          frame* (frame considered in-app because no frame is in-app)
+            module*
+              u'javax.servlet.http.HttpServlet'
+            filename (module takes precedence)
+              u'HttpServlet.java'
+            function*
+              u'service'
+            lineno (function takes precedence)
+              729
+          frame* (frame considered in-app because no frame is in-app)
+            module*
+              u'org.springframework.web.servlet.FrameworkServlet'
+            filename (module takes precedence)
+              u'FrameworkServlet.java'
+            function*
+              u'service'
+            lineno (function takes precedence)
+              846
+          frame* (frame considered in-app because no frame is in-app)
+            module*
+              u'javax.servlet.http.HttpServlet'
+            filename (module takes precedence)
+              u'HttpServlet.java'
+            function*
+              u'service'
+            lineno (function takes precedence)
+              622
+          frame* (frame considered in-app because no frame is in-app)
+            module*
+              u'org.springframework.web.servlet.FrameworkServlet'
+            filename (module takes precedence)
+              u'FrameworkServlet.java'
+            function*
+              u'doGet'
+            lineno (function takes precedence)
+              861
+          frame* (frame considered in-app because no frame is in-app)
+            module*
+              u'org.springframework.web.servlet.FrameworkServlet'
+            filename (module takes precedence)
+              u'FrameworkServlet.java'
+            function*
+              u'processRequest'
+            lineno (function takes precedence)
+              970
+          frame* (frame considered in-app because no frame is in-app)
+            module*
+              u'org.springframework.web.servlet.DispatcherServlet'
+            filename (module takes precedence)
+              u'DispatcherServlet.java'
+            function*
+              u'doService'
+            lineno (function takes precedence)
+              897
+          frame* (frame considered in-app because no frame is in-app)
+            module*
+              u'org.springframework.web.servlet.DispatcherServlet'
+            filename (module takes precedence)
+              u'DispatcherServlet.java'
+            function*
+              u'doDispatch'
+            lineno (function takes precedence)
+              963
+          frame* (frame considered in-app because no frame is in-app)
+            module*
+              u'org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter'
+            filename (module takes precedence)
+              u'AbstractHandlerMethodAdapter.java'
+            function*
+              u'handle'
+            lineno (function takes precedence)
+              85
+          frame* (frame considered in-app because no frame is in-app)
+            module*
+              u'org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter'
+            filename (module takes precedence)
+              u'RequestMappingHandlerAdapter.java'
+            function*
+              u'handleInternal'
+            lineno (function takes precedence)
+              738
+          frame* (frame considered in-app because no frame is in-app)
+            module*
+              u'org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter'
+            filename (module takes precedence)
+              u'RequestMappingHandlerAdapter.java'
+            function*
+              u'invokeHandlerMethod'
+            lineno (function takes precedence)
+              827
+          frame* (frame considered in-app because no frame is in-app)
+            module*
+              u'org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod'
+            filename (module takes precedence)
+              u'ServletInvocableHandlerMethod.java'
+            function*
+              u'invokeAndHandle'
+            lineno (function takes precedence)
+              116
+          frame* (frame considered in-app because no frame is in-app)
+            module*
+              u'org.springframework.web.method.support.InvocableHandlerMethod'
+            filename (module takes precedence)
+              u'InvocableHandlerMethod.java'
+            function*
+              u'invokeForRequest'
+            lineno (function takes precedence)
+              133
+          frame* (frame considered in-app because no frame is in-app)
+            module*
+              u'org.springframework.web.method.support.InvocableHandlerMethod'
+            filename (module takes precedence)
+              u'InvocableHandlerMethod.java'
+            function*
+              u'doInvoke'
+            lineno (function takes precedence)
+              205
+          frame* (frame considered in-app because no frame is in-app)
+            module*
+              u'java.lang.reflect.Method'
+            filename (module takes precedence)
+              u'Method.java'
+            function*
+              u'invoke'
+            lineno (function takes precedence)
+              564
+          frame* (frame considered in-app because no frame is in-app)
+            module*
+              u'jdk.internal.reflect.DelegatingMethodAccessorImpl'
+            filename (module takes precedence)
+              u'DelegatingMethodAccessorImpl.java'
+            function*
+              u'invoke'
+            lineno (function takes precedence)
+              43
+          frame* (frame considered in-app because no frame is in-app)
+            module*
+              u'jdk.internal.reflect.NativeMethodAccessorImpl'
+            filename (module takes precedence)
+              u'NativeMethodAccessorImpl.java'
+            function*
+              u'invoke'
+            lineno (function takes precedence)
+              62
+          frame* (frame considered in-app because no frame is in-app)
+            module*
+              u'jdk.internal.reflect.NativeMethodAccessorImpl'
+            filename (module takes precedence)
+              u'NativeMethodAccessorImpl.java'
+            function*
+              u'invoke0'
+          frame* (frame considered in-app because no frame is in-app)
+            module*
+              u'io.sentry.example.Application'
+            filename (module takes precedence)
+              u'Application.java'
+            function*
+              u'home'
+            lineno (function takes precedence)
+              30
+        type*
+          u'ArithmeticException'
+        value (stacktrace and type take precedence)
+          u'/ by zero'
+--------------------------------------------------------------------------
+default:
+  hash: None
+  component:
+    default (exception of system takes precedence)
+      message (exception of system takes precedence)
+        u'Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.ArithmeticException: / by zero] with root cause'
+--------------------------------------------------------------------------
+system:
+  hash: 'ec87dd10e4f7512ecccb4a068c5774ae'
+  component:
+    system*
+      exception*
+        stacktrace*
+          frame*
+            module*
+              u'java.lang.Thread'
+            filename (module takes precedence)
+              u'Thread.java'
+            function*
+              u'run'
+            lineno (function takes precedence)
+              844
+          frame*
+            module*
+              u'org.apache.tomcat.util.threads.TaskThread$WrappingRunnable'
+            filename (module takes precedence)
+              u'TaskThread.java'
+            function*
+              u'run'
+            lineno (function takes precedence)
+              61
+          frame*
+            module*
+              u'java.util.concurrent.ThreadPoolExecutor$Worker'
+            filename (module takes precedence)
+              u'ThreadPoolExecutor.java'
+            function*
+              u'run'
+            lineno (function takes precedence)
+              641
+          frame*
+            module*
+              u'java.util.concurrent.ThreadPoolExecutor'
+            filename (module takes precedence)
+              u'ThreadPoolExecutor.java'
+            function*
+              u'runWorker'
+            lineno (function takes precedence)
+              1167
+          frame*
+            module*
+              u'org.apache.tomcat.util.net.SocketProcessorBase'
+            filename (module takes precedence)
+              u'SocketProcessorBase.java'
+            function*
+              u'run'
+            lineno (function takes precedence)
+              49
+          frame*
+            module*
+              u'org.apache.tomcat.util.net.NioEndpoint$SocketProcessor'
+            filename (module takes precedence)
+              u'NioEndpoint.java'
+            function*
+              u'doRun'
+            lineno (function takes precedence)
+              1434
+          frame*
+            module*
+              u'org.apache.coyote.AbstractProtocol$ConnectionHandler'
+            filename (module takes precedence)
+              u'AbstractProtocol.java'
+            function*
+              u'process'
+            lineno (function takes precedence)
+              798
+          frame*
+            module*
+              u'org.apache.coyote.AbstractProcessorLight'
+            filename (module takes precedence)
+              u'AbstractProcessorLight.java'
+            function*
+              u'process'
+            lineno (function takes precedence)
+              66
+          frame*
+            module*
+              u'org.apache.coyote.http11.Http11Processor'
+            filename (module takes precedence)
+              u'Http11Processor.java'
+            function*
+              u'service'
+            lineno (function takes precedence)
+              783
+          frame*
+            module*
+              u'org.apache.catalina.connector.CoyoteAdapter'
+            filename (module takes precedence)
+              u'CoyoteAdapter.java'
+            function*
+              u'service'
+            lineno (function takes precedence)
+              349
+          frame*
+            module*
+              u'org.apache.catalina.core.StandardEngineValve'
+            filename (module takes precedence)
+              u'StandardEngineValve.java'
+            function*
+              u'invoke'
+            lineno (function takes precedence)
+              87
+          frame*
+            module*
+              u'org.apache.catalina.valves.ErrorReportValve'
+            filename (module takes precedence)
+              u'ErrorReportValve.java'
+            function*
+              u'invoke'
+            lineno (function takes precedence)
+              79
+          frame*
+            module*
+              u'org.apache.catalina.core.StandardHostValve'
+            filename (module takes precedence)
+              u'StandardHostValve.java'
+            function*
+              u'invoke'
+            lineno (function takes precedence)
+              140
+          frame*
+            module*
+              u'org.apache.catalina.authenticator.AuthenticatorBase'
+            filename (module takes precedence)
+              u'AuthenticatorBase.java'
+            function*
+              u'invoke'
+            lineno (function takes precedence)
+              474
+          frame*
+            module*
+              u'org.apache.catalina.core.StandardContextValve'
+            filename (module takes precedence)
+              u'StandardContextValve.java'
+            function*
+              u'invoke'
+            lineno (function takes precedence)
+              96
+          frame*
+            module*
+              u'org.apache.catalina.core.StandardWrapperValve'
+            filename (module takes precedence)
+              u'StandardWrapperValve.java'
+            function*
+              u'invoke'
+            lineno (function takes precedence)
+              198
+          frame*
+            module*
+              u'org.apache.catalina.core.ApplicationFilterChain'
+            filename (module takes precedence)
+              u'ApplicationFilterChain.java'
+            function*
+              u'doFilter'
+            lineno (function takes precedence)
+              165
+          frame*
+            module*
+              u'org.apache.catalina.core.ApplicationFilterChain'
+            filename (module takes precedence)
+              u'ApplicationFilterChain.java'
+            function*
+              u'internalDoFilter'
+            lineno (function takes precedence)
+              192
+          frame*
+            module*
+              u'org.springframework.web.filter.OncePerRequestFilter'
+            filename (module takes precedence)
+              u'OncePerRequestFilter.java'
+            function*
+              u'doFilter'
+            lineno (function takes precedence)
+              107
+          frame*
+            module*
+              u'org.springframework.web.filter.CharacterEncodingFilter'
+            filename (module takes precedence)
+              u'CharacterEncodingFilter.java'
+            function*
+              u'doFilterInternal'
+            lineno (function takes precedence)
+              197
+          frame*
+            module*
+              u'org.apache.catalina.core.ApplicationFilterChain'
+            filename (module takes precedence)
+              u'ApplicationFilterChain.java'
+            function*
+              u'doFilter'
+            lineno (function takes precedence)
+              165
+          frame*
+            module*
+              u'org.apache.catalina.core.ApplicationFilterChain'
+            filename (module takes precedence)
+              u'ApplicationFilterChain.java'
+            function*
+              u'internalDoFilter'
+            lineno (function takes precedence)
+              192
+          frame*
+            module*
+              u'org.springframework.web.filter.OncePerRequestFilter'
+            filename (module takes precedence)
+              u'OncePerRequestFilter.java'
+            function*
+              u'doFilter'
+            lineno (function takes precedence)
+              107
+          frame*
+            module*
+              u'org.springframework.web.filter.HiddenHttpMethodFilter'
+            filename (module takes precedence)
+              u'HiddenHttpMethodFilter.java'
+            function*
+              u'doFilterInternal'
+            lineno (function takes precedence)
+              81
+          frame*
+            module*
+              u'org.apache.catalina.core.ApplicationFilterChain'
+            filename (module takes precedence)
+              u'ApplicationFilterChain.java'
+            function*
+              u'doFilter'
+            lineno (function takes precedence)
+              165
+          frame*
+            module*
+              u'org.apache.catalina.core.ApplicationFilterChain'
+            filename (module takes precedence)
+              u'ApplicationFilterChain.java'
+            function*
+              u'internalDoFilter'
+            lineno (function takes precedence)
+              192
+          frame*
+            module*
+              u'org.springframework.web.filter.OncePerRequestFilter'
+            filename (module takes precedence)
+              u'OncePerRequestFilter.java'
+            function*
+              u'doFilter'
+            lineno (function takes precedence)
+              107
+          frame*
+            module*
+              u'org.springframework.web.filter.HttpPutFormContentFilter'
+            filename (module takes precedence)
+              u'HttpPutFormContentFilter.java'
+            function*
+              u'doFilterInternal'
+            lineno (function takes precedence)
+              105
+          frame*
+            module*
+              u'org.apache.catalina.core.ApplicationFilterChain'
+            filename (module takes precedence)
+              u'ApplicationFilterChain.java'
+            function*
+              u'doFilter'
+            lineno (function takes precedence)
+              165
+          frame*
+            module*
+              u'org.apache.catalina.core.ApplicationFilterChain'
+            filename (module takes precedence)
+              u'ApplicationFilterChain.java'
+            function*
+              u'internalDoFilter'
+            lineno (function takes precedence)
+              192
+          frame*
+            module*
+              u'org.springframework.web.filter.OncePerRequestFilter'
+            filename (module takes precedence)
+              u'OncePerRequestFilter.java'
+            function*
+              u'doFilter'
+            lineno (function takes precedence)
+              107
+          frame*
+            module*
+              u'org.springframework.web.filter.RequestContextFilter'
+            filename (module takes precedence)
+              u'RequestContextFilter.java'
+            function*
+              u'doFilterInternal'
+            lineno (function takes precedence)
+              99
+          frame*
+            module*
+              u'org.apache.catalina.core.ApplicationFilterChain'
+            filename (module takes precedence)
+              u'ApplicationFilterChain.java'
+            function*
+              u'doFilter'
+            lineno (function takes precedence)
+              165
+          frame*
+            module*
+              u'org.apache.catalina.core.ApplicationFilterChain'
+            filename (module takes precedence)
+              u'ApplicationFilterChain.java'
+            function*
+              u'internalDoFilter'
+            lineno (function takes precedence)
+              192
+          frame*
+            module*
+              u'org.apache.tomcat.websocket.server.WsFilter'
+            filename (module takes precedence)
+              u'WsFilter.java'
+            function*
+              u'doFilter'
+            lineno (function takes precedence)
+              52
+          frame*
+            module*
+              u'org.apache.catalina.core.ApplicationFilterChain'
+            filename (module takes precedence)
+              u'ApplicationFilterChain.java'
+            function*
+              u'doFilter'
+            lineno (function takes precedence)
+              165
+          frame*
+            module*
+              u'org.apache.catalina.core.ApplicationFilterChain'
+            filename (module takes precedence)
+              u'ApplicationFilterChain.java'
+            function*
+              u'internalDoFilter'
+            lineno (function takes precedence)
+              230
+          frame*
+            module*
+              u'javax.servlet.http.HttpServlet'
+            filename (module takes precedence)
+              u'HttpServlet.java'
+            function*
+              u'service'
+            lineno (function takes precedence)
+              729
+          frame*
+            module*
+              u'org.springframework.web.servlet.FrameworkServlet'
+            filename (module takes precedence)
+              u'FrameworkServlet.java'
+            function*
+              u'service'
+            lineno (function takes precedence)
+              846
+          frame*
+            module*
+              u'javax.servlet.http.HttpServlet'
+            filename (module takes precedence)
+              u'HttpServlet.java'
+            function*
+              u'service'
+            lineno (function takes precedence)
+              622
+          frame*
+            module*
+              u'org.springframework.web.servlet.FrameworkServlet'
+            filename (module takes precedence)
+              u'FrameworkServlet.java'
+            function*
+              u'doGet'
+            lineno (function takes precedence)
+              861
+          frame*
+            module*
+              u'org.springframework.web.servlet.FrameworkServlet'
+            filename (module takes precedence)
+              u'FrameworkServlet.java'
+            function*
+              u'processRequest'
+            lineno (function takes precedence)
+              970
+          frame*
+            module*
+              u'org.springframework.web.servlet.DispatcherServlet'
+            filename (module takes precedence)
+              u'DispatcherServlet.java'
+            function*
+              u'doService'
+            lineno (function takes precedence)
+              897
+          frame*
+            module*
+              u'org.springframework.web.servlet.DispatcherServlet'
+            filename (module takes precedence)
+              u'DispatcherServlet.java'
+            function*
+              u'doDispatch'
+            lineno (function takes precedence)
+              963
+          frame*
+            module*
+              u'org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter'
+            filename (module takes precedence)
+              u'AbstractHandlerMethodAdapter.java'
+            function*
+              u'handle'
+            lineno (function takes precedence)
+              85
+          frame*
+            module*
+              u'org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter'
+            filename (module takes precedence)
+              u'RequestMappingHandlerAdapter.java'
+            function*
+              u'handleInternal'
+            lineno (function takes precedence)
+              738
+          frame*
+            module*
+              u'org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter'
+            filename (module takes precedence)
+              u'RequestMappingHandlerAdapter.java'
+            function*
+              u'invokeHandlerMethod'
+            lineno (function takes precedence)
+              827
+          frame*
+            module*
+              u'org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod'
+            filename (module takes precedence)
+              u'ServletInvocableHandlerMethod.java'
+            function*
+              u'invokeAndHandle'
+            lineno (function takes precedence)
+              116
+          frame*
+            module*
+              u'org.springframework.web.method.support.InvocableHandlerMethod'
+            filename (module takes precedence)
+              u'InvocableHandlerMethod.java'
+            function*
+              u'invokeForRequest'
+            lineno (function takes precedence)
+              133
+          frame*
+            module*
+              u'org.springframework.web.method.support.InvocableHandlerMethod'
+            filename (module takes precedence)
+              u'InvocableHandlerMethod.java'
+            function*
+              u'doInvoke'
+            lineno (function takes precedence)
+              205
+          frame*
+            module*
+              u'java.lang.reflect.Method'
+            filename (module takes precedence)
+              u'Method.java'
+            function*
+              u'invoke'
+            lineno (function takes precedence)
+              564
+          frame*
+            module*
+              u'jdk.internal.reflect.DelegatingMethodAccessorImpl'
+            filename (module takes precedence)
+              u'DelegatingMethodAccessorImpl.java'
+            function*
+              u'invoke'
+            lineno (function takes precedence)
+              43
+          frame*
+            module*
+              u'jdk.internal.reflect.NativeMethodAccessorImpl'
+            filename (module takes precedence)
+              u'NativeMethodAccessorImpl.java'
+            function*
+              u'invoke'
+            lineno (function takes precedence)
+              62
+          frame*
+            module*
+              u'jdk.internal.reflect.NativeMethodAccessorImpl'
+            filename (module takes precedence)
+              u'NativeMethodAccessorImpl.java'
+            function*
+              u'invoke0'
+          frame*
+            module*
+              u'io.sentry.example.Application'
+            filename (module takes precedence)
+              u'Application.java'
+            function*
+              u'home'
+            lineno (function takes precedence)
+              30
+        type*
+          u'ArithmeticException'
+        value (stacktrace and type take precedence)
+          u'/ by zero'
diff --git a/tests/sentry/event_hashing/fixtures/javascript-exception-no-in-app.json b/tests/sentry/event_hashing/fixtures/javascript-exception-no-in-app.json
new file mode 100644
index 0000000000..4d363c2041
--- /dev/null
+++ b/tests/sentry/event_hashing/fixtures/javascript-exception-no-in-app.json
@@ -0,0 +1,109 @@
+{
+  "platform": "javascript",
+  "exception": [
+    {
+      "stacktrace": {
+        "frames": [
+          {
+            "function": "dispatchInteractiveEvent",
+            "abs_path": "webpack-internal:///../../../../node_modules/react-dom/cjs/react-dom.development.js",
+            "in_app": false,
+            "lineno": 4913,
+            "colno": 3,
+            "filename": "webpack-internal:///../../../../node_modules/react-dom/cjs/react-dom.development.js"
+          },
+          {
+            "function": "interactiveUpdates",
+            "abs_path": "webpack-internal:///../../../../node_modules/react-dom/cjs/react-dom.development.js",
+            "in_app": false,
+            "lineno": 2208,
+            "colno": 10,
+            "filename": "webpack-internal:///../../../../node_modules/react-dom/cjs/react-dom.development.js"
+          },
+          {
+            "function": "interactiveUpdates$1",
+            "abs_path": "webpack-internal:///../../../../node_modules/react-dom/cjs/react-dom.development.js",
+            "in_app": false,
+            "lineno": 17557,
+            "colno": 7,
+            "filename": "webpack-internal:///../../../../node_modules/react-dom/cjs/react-dom.development.js"
+          },
+          {
+            "function": "performSyncWork",
+            "abs_path": "webpack-internal:///../../../../node_modules/react-dom/cjs/react-dom.development.js",
+            "in_app": false,
+            "lineno": 17266,
+            "colno": 3,
+            "filename": "webpack-internal:///../../../../node_modules/react-dom/cjs/react-dom.development.js"
+          },
+          {
+            "function": "performWork",
+            "abs_path": "webpack-internal:///../../../../node_modules/react-dom/cjs/react-dom.development.js",
+            "in_app": false,
+            "lineno": 17294,
+            "colno": 7,
+            "filename": "webpack-internal:///../../../../node_modules/react-dom/cjs/react-dom.development.js"
+          },
+          {
+            "function": "performWorkOnRoot",
+            "abs_path": "webpack-internal:///../../../../node_modules/react-dom/cjs/react-dom.development.js",
+            "in_app": false,
+            "lineno": 17386,
+            "colno": 7,
+            "filename": "webpack-internal:///../../../../node_modules/react-dom/cjs/react-dom.development.js"
+          },
+          {
+            "function": "renderRoot",
+            "abs_path": "webpack-internal:///../../../../node_modules/react-dom/cjs/react-dom.development.js",
+            "in_app": false,
+            "lineno": 16547,
+            "colno": 11,
+            "filename": "webpack-internal:///../../../../node_modules/react-dom/cjs/react-dom.development.js"
+          },
+          {
+            "function": "replayUnitOfWork",
+            "abs_path": "webpack-internal:///../../../../node_modules/react-dom/cjs/react-dom.development.js",
+            "in_app": false,
+            "lineno": 15744,
+            "colno": 5,
+            "filename": "webpack-internal:///../../../../node_modules/react-dom/cjs/react-dom.development.js"
+          },
+          {
+            "function": "invokeGuardedCallback",
+            "abs_path": "webpack-internal:///../../../../node_modules/react-dom/cjs/react-dom.development.js",
+            "in_app": false,
+            "lineno": 248,
+            "colno": 31,
+            "filename": "webpack-internal:///../../../../node_modules/react-dom/cjs/react-dom.development.js"
+          },
+          {
+            "function": "Object.invokeGuardedCallbackDev",
+            "abs_path": "webpack-internal:///../../../../node_modules/react-dom/cjs/react-dom.development.js",
+            "in_app": false,
+            "lineno": 195,
+            "colno": 16,
+            "filename": "webpack-internal:///../../../../node_modules/react-dom/cjs/react-dom.development.js"
+          },
+          {
+            "function": "HTMLUnknownElement.sentryWrapped",
+            "abs_path": "webpack-internal:///../../../../node_modules/@sentry/browser/dist/index.js",
+            "in_app": false,
+            "lineno": 3197,
+            "colno": 27,
+            "filename": "webpack-internal:///../../../../node_modules/@sentry/browser/dist/index.js"
+          },
+          {
+            "function": "HTMLUnknownElement.callCallback",
+            "abs_path": "webpack-internal:///../../../../node_modules/react-dom/cjs/react-dom.development.js",
+            "in_app": false,
+            "lineno": 145,
+            "colno": 14,
+            "filename": "webpack-internal:///../../../../node_modules/react-dom/cjs/react-dom.development.js"
+          }
+        ]
+      },
+      "type": "ReferenceError",
+      "value": "varant is not defined"
+    }
+  ]
+}
diff --git a/tests/sentry/event_hashing/fixtures/javascript-exception-no-in-app.out b/tests/sentry/event_hashing/fixtures/javascript-exception-no-in-app.out
new file mode 100644
index 0000000000..c3dc8b3e6c
--- /dev/null
+++ b/tests/sentry/event_hashing/fixtures/javascript-exception-no-in-app.out
@@ -0,0 +1,189 @@
+app:
+  hash: None
+  component:
+    app (exception of system takes precedence)
+      exception (ignored because hash matches system variant)
+        stacktrace*
+          frame* (frame considered in-app because no frame is in-app)
+            filename*
+              u'webpack-internal:///../../../../node_modules/react-dom/cjs/react-dom.development.js'
+            function*
+              u'dispatchInteractiveEvent'
+            lineno (function takes precedence)
+              4913
+          frame* (frame considered in-app because no frame is in-app)
+            filename*
+              u'webpack-internal:///../../../../node_modules/react-dom/cjs/react-dom.development.js'
+            function*
+              u'interactiveUpdates'
+            lineno (function takes precedence)
+              2208
+          frame* (frame considered in-app because no frame is in-app)
+            filename*
+              u'webpack-internal:///../../../../node_modules/react-dom/cjs/react-dom.development.js'
+            function*
+              u'interactiveUpdates$1'
+            lineno (function takes precedence)
+              17557
+          frame* (frame considered in-app because no frame is in-app)
+            filename*
+              u'webpack-internal:///../../../../node_modules/react-dom/cjs/react-dom.development.js'
+            function*
+              u'performSyncWork'
+            lineno (function takes precedence)
+              17266
+          frame* (frame considered in-app because no frame is in-app)
+            filename*
+              u'webpack-internal:///../../../../node_modules/react-dom/cjs/react-dom.development.js'
+            function*
+              u'performWork'
+            lineno (function takes precedence)
+              17294
+          frame* (frame considered in-app because no frame is in-app)
+            filename*
+              u'webpack-internal:///../../../../node_modules/react-dom/cjs/react-dom.development.js'
+            function*
+              u'performWorkOnRoot'
+            lineno (function takes precedence)
+              17386
+          frame* (frame considered in-app because no frame is in-app)
+            filename*
+              u'webpack-internal:///../../../../node_modules/react-dom/cjs/react-dom.development.js'
+            function*
+              u'renderRoot'
+            lineno (function takes precedence)
+              16547
+          frame* (frame considered in-app because no frame is in-app)
+            filename*
+              u'webpack-internal:///../../../../node_modules/react-dom/cjs/react-dom.development.js'
+            function*
+              u'replayUnitOfWork'
+            lineno (function takes precedence)
+              15744
+          frame* (frame considered in-app because no frame is in-app)
+            filename*
+              u'webpack-internal:///../../../../node_modules/react-dom/cjs/react-dom.development.js'
+            function*
+              u'invokeGuardedCallback'
+            lineno (function takes precedence)
+              248
+          frame* (frame considered in-app because no frame is in-app)
+            filename*
+              u'webpack-internal:///../../../../node_modules/react-dom/cjs/react-dom.development.js'
+            function*
+              u'Object.invokeGuardedCallbackDev'
+            lineno (function takes precedence)
+              195
+          frame* (frame considered in-app because no frame is in-app)
+            filename*
+              u'webpack-internal:///../../../../node_modules/@sentry/browser/dist/index.js'
+            function*
+              u'HTMLUnknownElement.sentryWrapped'
+            lineno (function takes precedence)
+              3197
+          frame* (frame considered in-app because no frame is in-app)
+            filename*
+              u'webpack-internal:///../../../../node_modules/react-dom/cjs/react-dom.development.js'
+            function*
+              u'HTMLUnknownElement.callCallback'
+            lineno (function takes precedence)
+              145
+        type*
+          u'ReferenceError'
+        value (stacktrace and type take precedence)
+          u'varant is not defined'
+--------------------------------------------------------------------------
+system:
+  hash: '60443ca22b22a43806f4358109278791'
+  component:
+    system*
+      exception*
+        stacktrace*
+          frame*
+            filename*
+              u'webpack-internal:///../../../../node_modules/react-dom/cjs/react-dom.development.js'
+            function*
+              u'dispatchInteractiveEvent'
+            lineno (function takes precedence)
+              4913
+          frame*
+            filename*
+              u'webpack-internal:///../../../../node_modules/react-dom/cjs/react-dom.development.js'
+            function*
+              u'interactiveUpdates'
+            lineno (function takes precedence)
+              2208
+          frame*
+            filename*
+              u'webpack-internal:///../../../../node_modules/react-dom/cjs/react-dom.development.js'
+            function*
+              u'interactiveUpdates$1'
+            lineno (function takes precedence)
+              17557
+          frame*
+            filename*
+              u'webpack-internal:///../../../../node_modules/react-dom/cjs/react-dom.development.js'
+            function*
+              u'performSyncWork'
+            lineno (function takes precedence)
+              17266
+          frame*
+            filename*
+              u'webpack-internal:///../../../../node_modules/react-dom/cjs/react-dom.development.js'
+            function*
+              u'performWork'
+            lineno (function takes precedence)
+              17294
+          frame*
+            filename*
+              u'webpack-internal:///../../../../node_modules/react-dom/cjs/react-dom.development.js'
+            function*
+              u'performWorkOnRoot'
+            lineno (function takes precedence)
+              17386
+          frame*
+            filename*
+              u'webpack-internal:///../../../../node_modules/react-dom/cjs/react-dom.development.js'
+            function*
+              u'renderRoot'
+            lineno (function takes precedence)
+              16547
+          frame*
+            filename*
+              u'webpack-internal:///../../../../node_modules/react-dom/cjs/react-dom.development.js'
+            function*
+              u'replayUnitOfWork'
+            lineno (function takes precedence)
+              15744
+          frame*
+            filename*
+              u'webpack-internal:///../../../../node_modules/react-dom/cjs/react-dom.development.js'
+            function*
+              u'invokeGuardedCallback'
+            lineno (function takes precedence)
+              248
+          frame*
+            filename*
+              u'webpack-internal:///../../../../node_modules/react-dom/cjs/react-dom.development.js'
+            function*
+              u'Object.invokeGuardedCallbackDev'
+            lineno (function takes precedence)
+              195
+          frame*
+            filename*
+              u'webpack-internal:///../../../../node_modules/@sentry/browser/dist/index.js'
+            function*
+              u'HTMLUnknownElement.sentryWrapped'
+            lineno (function takes precedence)
+              3197
+          frame*
+            filename*
+              u'webpack-internal:///../../../../node_modules/react-dom/cjs/react-dom.development.js'
+            function*
+              u'HTMLUnknownElement.callCallback'
+            lineno (function takes precedence)
+              145
+        type*
+          u'ReferenceError'
+        value (stacktrace and type take precedence)
+          u'varant is not defined'
diff --git a/tests/sentry/event_hashing/fixtures/javascript-message.json b/tests/sentry/event_hashing/fixtures/javascript-message.json
new file mode 100644
index 0000000000..7ba57f27bf
--- /dev/null
+++ b/tests/sentry/event_hashing/fixtures/javascript-message.json
@@ -0,0 +1,10 @@
+{
+  "culprit": "",
+  "event_id": "f88fd32ee1b14530b8e2d4cea173e6a3",
+  "platform": "javascript",
+  "logger": "",
+  "logentry": {
+    "formatted": "event"
+  },
+  "release": null
+}
diff --git a/tests/sentry/event_hashing/fixtures/javascript-message.out b/tests/sentry/event_hashing/fixtures/javascript-message.out
new file mode 100644
index 0000000000..731f9a80e7
--- /dev/null
+++ b/tests/sentry/event_hashing/fixtures/javascript-message.out
@@ -0,0 +1,6 @@
+default:
+  hash: '4119639092e62c55ea8be348e4d9260d'
+  component:
+    default*
+      message*
+        u'event'
diff --git a/tests/sentry/event_hashing/fixtures/laravel.json b/tests/sentry/event_hashing/fixtures/laravel.json
new file mode 100644
index 0000000000..90d6f5c37b
--- /dev/null
+++ b/tests/sentry/event_hashing/fixtures/laravel.json
@@ -0,0 +1,1260 @@
+{
+  "culprit": "/",
+  "event_id": "52291722d1c24b4cb2a29c4ea1e5cc6f",
+  "environment": "local",
+  "platform": "php",
+  "logger": "",
+  "exception": {
+    "values": [
+      {
+        "stacktrace": {
+          "frames": [
+            {
+              "abs_path": "/server.php",
+              "pre_context": [
+                "// application without having installed a \"real\" web server software here.",
+                "if ($uri !== '/' && file_exists(__DIR__.'/public'.$uri)) {",
+                "    return false;",
+                "}",
+                ""
+              ],
+              "post_context": [
+                ""
+              ],
+              "in_app": true,
+              "lineno": 21,
+              "filename": "/server.php",
+              "context_line": "require_once __DIR__.'/public/index.php';"
+            },
+            {
+              "function": "require_once",
+              "abs_path": "/public/index.php",
+              "pre_context": [
+                "*/",
+                "",
+                "$kernel = $app->make(Illuminate\\Contracts\\Http\\Kernel::class);",
+                "",
+                "$response = $kernel->handle("
+              ],
+              "vars": {
+                "param1": "/Users/haza/Projects/demo-projects/php/blog/public/index.php"
+              },
+              "post_context": [
+                ");",
+                "",
+                "$response->send();",
+                "",
+                "$kernel->terminate($request, $response);"
+              ],
+              "filename": "/public/index.php",
+              "lineno": 55,
+              "in_app": true,
+              "context_line": "    $request = Illuminate\\Http\\Request::capture()"
+            },
+            {
+              "function": "Illuminate\\Foundation\\Http\\Kernel::handle",
+              "abs_path": "/vendor/laravel/framework/src/Illuminate/Foundation/Http/Kernel.php",
+              "pre_context": [
+                "    public function handle($request)",
+                "    {",
+                "        try {",
+                "            $request->enableHttpMethodParameterOverride();",
+                ""
+              ],
+              "vars": {
+                "request": "Object Illuminate\\Http\\Request"
+              },
+              "post_context": [
+                "        } catch (Exception $e) {",
+                "            $this->reportException($e);",
+                "",
+                "            $response = $this->renderException($request, $e);",
+                "        } catch (Throwable $e) {"
+              ],
+              "filename": "/vendor/laravel/framework/src/Illuminate/Foundation/Http/Kernel.php",
+              "lineno": 116,
+              "in_app": false,
+              "context_line": "            $response = $this->sendRequestThroughRouter($request);"
+            },
+            {
+              "function": "Illuminate\\Foundation\\Http\\Kernel::sendRequestThroughRouter",
+              "abs_path": "/vendor/laravel/framework/src/Illuminate/Foundation/Http/Kernel.php",
+              "pre_context": [
+                "        $this->bootstrap();",
+                "",
+                "        return (new Pipeline($this->app))",
+                "                    ->send($request)",
+                "                    ->through($this->app->shouldSkipMiddleware() ? [] : $this->middleware)"
+              ],
+              "vars": {
+                "request": "Object Illuminate\\Http\\Request"
+              },
+              "post_context": [
+                "    }",
+                "",
+                "    /**",
+                "     * Bootstrap the application for HTTP requests.",
+                "     *"
+              ],
+              "filename": "/vendor/laravel/framework/src/Illuminate/Foundation/Http/Kernel.php",
+              "lineno": 151,
+              "in_app": false,
+              "context_line": "                    ->then($this->dispatchToRouter());"
+            },
+            {
+              "function": "Illuminate\\Pipeline\\Pipeline::then",
+              "abs_path": "/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php",
+              "pre_context": [
+                "    {",
+                "        $pipeline = array_reduce(",
+                "            array_reverse($this->pipes), $this->carry(), $this->prepareDestination($destination)",
+                "        );",
+                ""
+              ],
+              "vars": {
+                "destination": "Lambda Illuminate\\Foundation\\Http\\{closure} [mixed|null request]"
+              },
+              "post_context": [
+                "    }",
+                "",
+                "    /**",
+                "     * Run the pipeline and return the result.",
+                "     *"
+              ],
+              "filename": "/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php",
+              "lineno": 104,
+              "in_app": false,
+              "context_line": "        return $pipeline($this->passable);"
+            },
+            {
+              "function": "Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}",
+              "abs_path": "/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php",
+              "pre_context": [
+                "                try {",
+                "                    $slice = parent::carry();",
+                "",
+                "                    $callable = $slice($stack, $pipe);",
+                ""
+              ],
+              "vars": {
+                "param1": "Object Illuminate\\Http\\Request"
+              },
+              "post_context": [
+                "                } catch (Exception $e) {",
+                "                    return $this->handleException($passable, $e);",
+                "                } catch (Throwable $e) {",
+                "                    return $this->handleException($passable, new FatalThrowableError($e));",
+                "                }"
+              ],
+              "filename": "/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php",
+              "lineno": 53,
+              "in_app": false,
+              "context_line": "                    return $callable($passable);"
+            },
+            {
+              "function": "Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}",
+              "abs_path": "/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php",
+              "pre_context": [
+                "                    // since the object we're given was already a fully instantiated object.",
+                "                    $parameters = [$passable, $stack];",
+                "                }",
+                "",
+                "                $response = method_exists($pipe, $this->method)"
+              ],
+              "vars": {
+                "param1": "Object Illuminate\\Http\\Request"
+              },
+              "post_context": [
+                "                                : $pipe(...$parameters);",
+                "",
+                "                return $response instanceof Responsable",
+                "                            ? $response->toResponse($this->getContainer()->make(Request::class))",
+                "                            : $response;"
+              ],
+              "filename": "/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php",
+              "lineno": 163,
+              "in_app": false,
+              "context_line": "                                ? $pipe->{$this->method}(...$parameters)"
+            },
+            {
+              "function": "Illuminate\\Foundation\\Http\\Middleware\\CheckForMaintenanceMode::handle",
+              "abs_path": "/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/CheckForMaintenanceMode.php",
+              "pre_context": [
+                "            }",
+                "",
+                "            throw new MaintenanceModeException($data['time'], $data['retry'], $data['message']);",
+                "        }",
+                ""
+              ],
+              "vars": {
+                "request": "Object Illuminate\\Http\\Request",
+                "next": "Lambda Illuminate\\Routing\\{closure} [mixed|null passable]"
+              },
+              "post_context": [
+                "    }",
+                "",
+                "    /**",
+                "     * Determine if the request has a URI that should be accessible in maintenance mode.",
+                "     *"
+              ],
+              "filename": "/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/CheckForMaintenanceMode.php",
+              "lineno": 62,
+              "in_app": false,
+              "context_line": "        return $next($request);"
+            },
+            {
+              "function": "Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}",
+              "abs_path": "/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php",
+              "pre_context": [
+                "                try {",
+                "                    $slice = parent::carry();",
+                "",
+                "                    $callable = $slice($stack, $pipe);",
+                ""
+              ],
+              "vars": {
+                "param1": "Object Illuminate\\Http\\Request"
+              },
+              "post_context": [
+                "                } catch (Exception $e) {",
+                "                    return $this->handleException($passable, $e);",
+                "                } catch (Throwable $e) {",
+                "                    return $this->handleException($passable, new FatalThrowableError($e));",
+                "                }"
+              ],
+              "filename": "/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php",
+              "lineno": 53,
+              "in_app": false,
+              "context_line": "                    return $callable($passable);"
+            },
+            {
+              "function": "Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}",
+              "abs_path": "/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php",
+              "pre_context": [
+                "                    // since the object we're given was already a fully instantiated object.",
+                "                    $parameters = [$passable, $stack];",
+                "                }",
+                "",
+                "                $response = method_exists($pipe, $this->method)"
+              ],
+              "vars": {
+                "param1": "Object Illuminate\\Http\\Request"
+              },
+              "post_context": [
+                "                                : $pipe(...$parameters);",
+                "",
+                "                return $response instanceof Responsable",
+                "                            ? $response->toResponse($this->getContainer()->make(Request::class))",
+                "                            : $response;"
+              ],
+              "filename": "/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php",
+              "lineno": 163,
+              "in_app": false,
+              "context_line": "                                ? $pipe->{$this->method}(...$parameters)"
+            },
+            {
+              "function": "Illuminate\\Foundation\\Http\\Middleware\\ValidatePostSize::handle",
+              "abs_path": "/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/ValidatePostSize.php",
+              "pre_context": [
+                "",
+                "        if ($max > 0 && $request->server('CONTENT_LENGTH') > $max) {",
+                "            throw new PostTooLargeException;",
+                "        }",
+                ""
+              ],
+              "vars": {
+                "request": "Object Illuminate\\Http\\Request",
+                "next": "Lambda Illuminate\\Routing\\{closure} [mixed|null passable]"
+              },
+              "post_context": [
+                "    }",
+                "",
+                "    /**",
+                "     * Determine the server 'post_max_size' as bytes.",
+                "     *"
+              ],
+              "filename": "/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/ValidatePostSize.php",
+              "lineno": 27,
+              "in_app": false,
+              "context_line": "        return $next($request);"
+            },
+            {
+              "function": "Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}",
+              "abs_path": "/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php",
+              "pre_context": [
+                "                try {",
+                "                    $slice = parent::carry();",
+                "",
+                "                    $callable = $slice($stack, $pipe);",
+                ""
+              ],
+              "vars": {
+                "param1": "Object Illuminate\\Http\\Request"
+              },
+              "post_context": [
+                "                } catch (Exception $e) {",
+                "                    return $this->handleException($passable, $e);",
+                "                } catch (Throwable $e) {",
+                "                    return $this->handleException($passable, new FatalThrowableError($e));",
+                "                }"
+              ],
+              "filename": "/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php",
+              "lineno": 53,
+              "in_app": false,
+              "context_line": "                    return $callable($passable);"
+            },
+            {
+              "function": "Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}",
+              "abs_path": "/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php",
+              "pre_context": [
+                "                    // since the object we're given was already a fully instantiated object.",
+                "                    $parameters = [$passable, $stack];",
+                "                }",
+                "",
+                "                $response = method_exists($pipe, $this->method)"
+              ],
+              "vars": {
+                "param1": "Object Illuminate\\Http\\Request"
+              },
+              "post_context": [
+                "                                : $pipe(...$parameters);",
+                "",
+                "                return $response instanceof Responsable",
+                "                            ? $response->toResponse($this->getContainer()->make(Request::class))",
+                "                            : $response;"
+              ],
+              "filename": "/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php",
+              "lineno": 163,
+              "in_app": false,
+              "context_line": "                                ? $pipe->{$this->method}(...$parameters)"
+            },
+            {
+              "function": "Illuminate\\Foundation\\Http\\Middleware\\TransformsRequest::handle",
+              "abs_path": "/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/TransformsRequest.php",
+              "pre_context": [
+                "     */",
+                "    public function handle($request, Closure $next)",
+                "    {",
+                "        $this->clean($request);",
+                ""
+              ],
+              "vars": {
+                "request": "Object Illuminate\\Http\\Request",
+                "next": "Lambda Illuminate\\Routing\\{closure} [mixed|null passable]"
+              },
+              "post_context": [
+                "    }",
+                "",
+                "    /**",
+                "     * Clean the request's data.",
+                "     *"
+              ],
+              "filename": "/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/TransformsRequest.php",
+              "lineno": 21,
+              "in_app": false,
+              "context_line": "        return $next($request);"
+            },
+            {
+              "function": "Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}",
+              "abs_path": "/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php",
+              "pre_context": [
+                "                try {",
+                "                    $slice = parent::carry();",
+                "",
+                "                    $callable = $slice($stack, $pipe);",
+                ""
+              ],
+              "vars": {
+                "param1": "Object Illuminate\\Http\\Request"
+              },
+              "post_context": [
+                "                } catch (Exception $e) {",
+                "                    return $this->handleException($passable, $e);",
+                "                } catch (Throwable $e) {",
+                "                    return $this->handleException($passable, new FatalThrowableError($e));",
+                "                }"
+              ],
+              "filename": "/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php",
+              "lineno": 53,
+              "in_app": false,
+              "context_line": "                    return $callable($passable);"
+            },
+            {
+              "function": "Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}",
+              "abs_path": "/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php",
+              "pre_context": [
+                "                    // since the object we're given was already a fully instantiated object.",
+                "                    $parameters = [$passable, $stack];",
+                "                }",
+                "",
+                "                $response = method_exists($pipe, $this->method)"
+              ],
+              "vars": {
+                "param1": "Object Illuminate\\Http\\Request"
+              },
+              "post_context": [
+                "                                : $pipe(...$parameters);",
+                "",
+                "                return $response instanceof Responsable",
+                "                            ? $response->toResponse($this->getContainer()->make(Request::class))",
+                "                            : $response;"
+              ],
+              "filename": "/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php",
+              "lineno": 163,
+              "in_app": false,
+              "context_line": "                                ? $pipe->{$this->method}(...$parameters)"
+            },
+            {
+              "function": "Illuminate\\Foundation\\Http\\Middleware\\TransformsRequest::handle",
+              "abs_path": "/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/TransformsRequest.php",
+              "pre_context": [
+                "     */",
+                "    public function handle($request, Closure $next)",
+                "    {",
+                "        $this->clean($request);",
+                ""
+              ],
+              "vars": {
+                "request": "Object Illuminate\\Http\\Request",
+                "next": "Lambda Illuminate\\Routing\\{closure} [mixed|null passable]"
+              },
+              "post_context": [
+                "    }",
+                "",
+                "    /**",
+                "     * Clean the request's data.",
+                "     *"
+              ],
+              "filename": "/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/TransformsRequest.php",
+              "lineno": 21,
+              "in_app": false,
+              "context_line": "        return $next($request);"
+            },
+            {
+              "function": "Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}",
+              "abs_path": "/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php",
+              "pre_context": [
+                "                try {",
+                "                    $slice = parent::carry();",
+                "",
+                "                    $callable = $slice($stack, $pipe);",
+                ""
+              ],
+              "vars": {
+                "param1": "Object Illuminate\\Http\\Request"
+              },
+              "post_context": [
+                "                } catch (Exception $e) {",
+                "                    return $this->handleException($passable, $e);",
+                "                } catch (Throwable $e) {",
+                "                    return $this->handleException($passable, new FatalThrowableError($e));",
+                "                }"
+              ],
+              "filename": "/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php",
+              "lineno": 53,
+              "in_app": false,
+              "context_line": "                    return $callable($passable);"
+            },
+            {
+              "function": "Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}",
+              "abs_path": "/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php",
+              "pre_context": [
+                "                    // since the object we're given was already a fully instantiated object.",
+                "                    $parameters = [$passable, $stack];",
+                "                }",
+                "",
+                "                $response = method_exists($pipe, $this->method)"
+              ],
+              "vars": {
+                "param1": "Object Illuminate\\Http\\Request"
+              },
+              "post_context": [
+                "                                : $pipe(...$parameters);",
+                "",
+                "                return $response instanceof Responsable",
+                "                            ? $response->toResponse($this->getContainer()->make(Request::class))",
+                "                            : $response;"
+              ],
+              "filename": "/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php",
+              "lineno": 163,
+              "in_app": false,
+              "context_line": "                                ? $pipe->{$this->method}(...$parameters)"
+            },
+            {
+              "function": "Fideloper\\Proxy\\TrustProxies::handle",
+              "abs_path": "/vendor/fideloper/proxy/src/TrustProxies.php",
+              "pre_context": [
+                "    public function handle(Request $request, Closure $next)",
+                "    {",
+                "        $request::setTrustedProxies([], $this->getTrustedHeaderNames()); // Reset trusted proxies between requests",
+                "        $this->setTrustedProxyIpAddresses($request);",
+                ""
+              ],
+              "vars": {
+                "request": "Object Illuminate\\Http\\Request",
+                "next": "Lambda Illuminate\\Routing\\{closure} [mixed|null passable]"
+              },
+              "post_context": [
+                "    }",
+                "",
+                "    /**",
+                "     * Sets the trusted proxies on the request to the value of trustedproxy.proxies",
+                "     *"
+              ],
+              "filename": "/vendor/fideloper/proxy/src/TrustProxies.php",
+              "lineno": 57,
+              "in_app": false,
+              "context_line": "        return $next($request);"
+            },
+            {
+              "function": "Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}",
+              "abs_path": "/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php",
+              "pre_context": [
+                "     */",
+                "    protected function prepareDestination(Closure $destination)",
+                "    {",
+                "        return function ($passable) use ($destination) {",
+                "            try {"
+              ],
+              "vars": {
+                "param1": "Object Illuminate\\Http\\Request"
+              },
+              "post_context": [
+                "            } catch (Exception $e) {",
+                "                return $this->handleException($passable, $e);",
+                "            } catch (Throwable $e) {",
+                "                return $this->handleException($passable, new FatalThrowableError($e));",
+                "            }"
+              ],
+              "filename": "/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php",
+              "lineno": 30,
+              "in_app": false,
+              "context_line": "                return $destination($passable);"
+            },
+            {
+              "function": "Illuminate\\Foundation\\Http\\Kernel::Illuminate\\Foundation\\Http\\{closure}",
+              "abs_path": "/vendor/laravel/framework/src/Illuminate/Foundation/Http/Kernel.php",
+              "pre_context": [
+                "    protected function dispatchToRouter()",
+                "    {",
+                "        return function ($request) {",
+                "            $this->app->instance('request', $request);",
+                ""
+              ],
+              "vars": {
+                "param1": "Object Illuminate\\Http\\Request"
+              },
+              "post_context": [
+                "        };",
+                "    }",
+                "",
+                "    /**",
+                "     * Call the terminate method on any terminable middleware."
+              ],
+              "filename": "/vendor/laravel/framework/src/Illuminate/Foundation/Http/Kernel.php",
+              "lineno": 176,
+              "in_app": false,
+              "context_line": "            return $this->router->dispatch($request);"
+            },
+            {
+              "function": "Illuminate\\Routing\\Router::dispatch",
+              "abs_path": "/vendor/laravel/framework/src/Illuminate/Routing/Router.php",
+              "pre_context": [
+                "     */",
+                "    public function dispatch(Request $request)",
+                "    {",
+                "        $this->currentRequest = $request;",
+                ""
+              ],
+              "vars": {
+                "request": "Object Illuminate\\Http\\Request"
+              },
+              "post_context": [
+                "    }",
+                "",
+                "    /**",
+                "     * Dispatch the request to a route and return the response.",
+                "     *"
+              ],
+              "filename": "/vendor/laravel/framework/src/Illuminate/Routing/Router.php",
+              "lineno": 612,
+              "in_app": false,
+              "context_line": "        return $this->dispatchToRoute($request);"
+            },
+            {
+              "function": "Illuminate\\Routing\\Router::dispatchToRoute",
+              "abs_path": "/vendor/laravel/framework/src/Illuminate/Routing/Router.php",
+              "pre_context": [
+                "     * @param  \\Illuminate\\Http\\Request  $request",
+                "     * @return \\Illuminate\\Http\\Response|\\Illuminate\\Http\\JsonResponse",
+                "     */",
+                "    public function dispatchToRoute(Request $request)",
+                "    {"
+              ],
+              "vars": {
+                "request": "Object Illuminate\\Http\\Request"
+              },
+              "post_context": [
+                "    }",
+                "",
+                "    /**",
+                "     * Find the route matching a given request.",
+                "     *"
+              ],
+              "filename": "/vendor/laravel/framework/src/Illuminate/Routing/Router.php",
+              "lineno": 623,
+              "in_app": false,
+              "context_line": "        return $this->runRoute($request, $this->findRoute($request));"
+            },
+            {
+              "function": "Illuminate\\Routing\\Router::runRoute",
+              "abs_path": "/vendor/laravel/framework/src/Illuminate/Routing/Router.php",
+              "pre_context": [
+                "        });",
+                "",
+                "        $this->events->dispatch(new Events\\RouteMatched($route, $request));",
+                "",
+                "        return $this->prepareResponse($request,"
+              ],
+              "vars": {
+                "route": "Object Illuminate\\Routing\\Route",
+                "request": "Object Illuminate\\Http\\Request"
+              },
+              "post_context": [
+                "        );",
+                "    }",
+                "",
+                "    /**",
+                "     * Run the given route within a Stack \"onion\" instance."
+              ],
+              "filename": "/vendor/laravel/framework/src/Illuminate/Routing/Router.php",
+              "lineno": 657,
+              "in_app": false,
+              "context_line": "            $this->runRouteWithinStack($route, $request)"
+            },
+            {
+              "function": "Illuminate\\Routing\\Router::runRouteWithinStack",
+              "abs_path": "/vendor/laravel/framework/src/Illuminate/Routing/Router.php",
+              "pre_context": [
+                "                        ->through($middleware)",
+                "                        ->then(function ($request) use ($route) {",
+                "                            return $this->prepareResponse(",
+                "                                $request, $route->run()",
+                "                            );"
+              ],
+              "vars": {
+                "route": "Object Illuminate\\Routing\\Route",
+                "request": "Object Illuminate\\Http\\Request"
+              },
+              "post_context": [
+                "    }",
+                "",
+                "    /**",
+                "     * Gather the middleware for the given route with resolved class names.",
+                "     *"
+              ],
+              "filename": "/vendor/laravel/framework/src/Illuminate/Routing/Router.php",
+              "lineno": 682,
+              "in_app": false,
+              "context_line": "                        });"
+            },
+            {
+              "function": "Illuminate\\Pipeline\\Pipeline::then",
+              "abs_path": "/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php",
+              "pre_context": [
+                "    {",
+                "        $pipeline = array_reduce(",
+                "            array_reverse($this->pipes), $this->carry(), $this->prepareDestination($destination)",
+                "        );",
+                ""
+              ],
+              "vars": {
+                "destination": "Lambda Illuminate\\Routing\\{closure} [mixed|null request]"
+              },
+              "post_context": [
+                "    }",
+                "",
+                "    /**",
+                "     * Run the pipeline and return the result.",
+                "     *"
+              ],
+              "filename": "/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php",
+              "lineno": 104,
+              "in_app": false,
+              "context_line": "        return $pipeline($this->passable);"
+            },
+            {
+              "function": "Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}",
+              "abs_path": "/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php",
+              "pre_context": [
+                "                try {",
+                "                    $slice = parent::carry();",
+                "",
+                "                    $callable = $slice($stack, $pipe);",
+                ""
+              ],
+              "vars": {
+                "param1": "Object Illuminate\\Http\\Request"
+              },
+              "post_context": [
+                "                } catch (Exception $e) {",
+                "                    return $this->handleException($passable, $e);",
+                "                } catch (Throwable $e) {",
+                "                    return $this->handleException($passable, new FatalThrowableError($e));",
+                "                }"
+              ],
+              "filename": "/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php",
+              "lineno": 53,
+              "in_app": false,
+              "context_line": "                    return $callable($passable);"
+            },
+            {
+              "function": "Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}",
+              "abs_path": "/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php",
+              "pre_context": [
+                "                    // since the object we're given was already a fully instantiated object.",
+                "                    $parameters = [$passable, $stack];",
+                "                }",
+                "",
+                "                $response = method_exists($pipe, $this->method)"
+              ],
+              "vars": {
+                "param1": "Object Illuminate\\Http\\Request"
+              },
+              "post_context": [
+                "                                : $pipe(...$parameters);",
+                "",
+                "                return $response instanceof Responsable",
+                "                            ? $response->toResponse($this->getContainer()->make(Request::class))",
+                "                            : $response;"
+              ],
+              "filename": "/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php",
+              "lineno": 163,
+              "in_app": false,
+              "context_line": "                                ? $pipe->{$this->method}(...$parameters)"
+            },
+            {
+              "function": "Illuminate\\Cookie\\Middleware\\EncryptCookies::handle",
+              "abs_path": "/vendor/laravel/framework/src/Illuminate/Cookie/Middleware/EncryptCookies.php",
+              "pre_context": [
+                "     * @param  \\Closure  $next",
+                "     * @return \\Symfony\\Component\\HttpFoundation\\Response",
+                "     */",
+                "    public function handle($request, Closure $next)",
+                "    {"
+              ],
+              "vars": {
+                "request": "Object Illuminate\\Http\\Request",
+                "next": "Lambda Illuminate\\Routing\\{closure} [mixed|null passable]"
+              },
+              "post_context": [
+                "    }",
+                "",
+                "    /**",
+                "     * Decrypt the cookies on the request.",
+                "     *"
+              ],
+              "filename": "/vendor/laravel/framework/src/Illuminate/Cookie/Middleware/EncryptCookies.php",
+              "lineno": 66,
+              "in_app": false,
+              "context_line": "        return $this->encrypt($next($this->decrypt($request)));"
+            },
+            {
+              "function": "Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}",
+              "abs_path": "/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php",
+              "pre_context": [
+                "                try {",
+                "                    $slice = parent::carry();",
+                "",
+                "                    $callable = $slice($stack, $pipe);",
+                ""
+              ],
+              "vars": {
+                "param1": "Object Illuminate\\Http\\Request"
+              },
+              "post_context": [
+                "                } catch (Exception $e) {",
+                "                    return $this->handleException($passable, $e);",
+                "                } catch (Throwable $e) {",
+                "                    return $this->handleException($passable, new FatalThrowableError($e));",
+                "                }"
+              ],
+              "filename": "/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php",
+              "lineno": 53,
+              "in_app": false,
+              "context_line": "                    return $callable($passable);"
+            },
+            {
+              "function": "Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}",
+              "abs_path": "/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php",
+              "pre_context": [
+                "                    // since the object we're given was already a fully instantiated object.",
+                "                    $parameters = [$passable, $stack];",
+                "                }",
+                "",
+                "                $response = method_exists($pipe, $this->method)"
+              ],
+              "vars": {
+                "param1": "Object Illuminate\\Http\\Request"
+              },
+              "post_context": [
+                "                                : $pipe(...$parameters);",
+                "",
+                "                return $response instanceof Responsable",
+                "                            ? $response->toResponse($this->getContainer()->make(Request::class))",
+                "                            : $response;"
+              ],
+              "filename": "/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php",
+              "lineno": 163,
+              "in_app": false,
+              "context_line": "                                ? $pipe->{$this->method}(...$parameters)"
+            },
+            {
+              "function": "Illuminate\\Cookie\\Middleware\\AddQueuedCookiesToResponse::handle",
+              "abs_path": "/vendor/laravel/framework/src/Illuminate/Cookie/Middleware/AddQueuedCookiesToResponse.php",
+              "pre_context": [
+                "     * @param  \\Closure  $next",
+                "     * @return mixed",
+                "     */",
+                "    public function handle($request, Closure $next)",
+                "    {"
+              ],
+              "vars": {
+                "request": "Object Illuminate\\Http\\Request",
+                "next": "Lambda Illuminate\\Routing\\{closure} [mixed|null passable]"
+              },
+              "post_context": [
+                "",
+                "        foreach ($this->cookies->getQueuedCookies() as $cookie) {",
+                "            $response->headers->setCookie($cookie);",
+                "        }",
+                ""
+              ],
+              "filename": "/vendor/laravel/framework/src/Illuminate/Cookie/Middleware/AddQueuedCookiesToResponse.php",
+              "lineno": 37,
+              "in_app": false,
+              "context_line": "        $response = $next($request);"
+            },
+            {
+              "function": "Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}",
+              "abs_path": "/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php",
+              "pre_context": [
+                "                try {",
+                "                    $slice = parent::carry();",
+                "",
+                "                    $callable = $slice($stack, $pipe);",
+                ""
+              ],
+              "vars": {
+                "param1": "Object Illuminate\\Http\\Request"
+              },
+              "post_context": [
+                "                } catch (Exception $e) {",
+                "                    return $this->handleException($passable, $e);",
+                "                } catch (Throwable $e) {",
+                "                    return $this->handleException($passable, new FatalThrowableError($e));",
+                "                }"
+              ],
+              "filename": "/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php",
+              "lineno": 53,
+              "in_app": false,
+              "context_line": "                    return $callable($passable);"
+            },
+            {
+              "function": "Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}",
+              "abs_path": "/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php",
+              "pre_context": [
+                "                    // since the object we're given was already a fully instantiated object.",
+                "                    $parameters = [$passable, $stack];",
+                "                }",
+                "",
+                "                $response = method_exists($pipe, $this->method)"
+              ],
+              "vars": {
+                "param1": "Object Illuminate\\Http\\Request"
+              },
+              "post_context": [
+                "                                : $pipe(...$parameters);",
+                "",
+                "                return $response instanceof Responsable",
+                "                            ? $response->toResponse($this->getContainer()->make(Request::class))",
+                "                            : $response;"
+              ],
+              "filename": "/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php",
+              "lineno": 163,
+              "in_app": false,
+              "context_line": "                                ? $pipe->{$this->method}(...$parameters)"
+            },
+            {
+              "function": "Illuminate\\Session\\Middleware\\StartSession::handle",
+              "abs_path": "/vendor/laravel/framework/src/Illuminate/Session/Middleware/StartSession.php",
+              "pre_context": [
+                "        $this->collectGarbage($session);",
+                "",
+                "        $this->storeCurrentUrl($request, $session);",
+                "",
+                "        $this->addCookieToResponse("
+              ],
+              "vars": {
+                "request": "Object Illuminate\\Http\\Request",
+                "next": "Lambda Illuminate\\Routing\\{closure} [mixed|null passable]"
+              },
+              "post_context": [
+                "        );",
+                "",
+                "        // Again, if the session has been configured we will need to close out the session",
+                "        // so that the attributes may be persisted to some storage medium. We will also",
+                "        // add the session identifier cookie to the application response headers now."
+              ],
+              "filename": "/vendor/laravel/framework/src/Illuminate/Session/Middleware/StartSession.php",
+              "lineno": 59,
+              "in_app": false,
+              "context_line": "            $response = $next($request), $session"
+            },
+            {
+              "function": "Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}",
+              "abs_path": "/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php",
+              "pre_context": [
+                "                try {",
+                "                    $slice = parent::carry();",
+                "",
+                "                    $callable = $slice($stack, $pipe);",
+                ""
+              ],
+              "vars": {
+                "param1": "Object Illuminate\\Http\\Request"
+              },
+              "post_context": [
+                "                } catch (Exception $e) {",
+                "                    return $this->handleException($passable, $e);",
+                "                } catch (Throwable $e) {",
+                "                    return $this->handleException($passable, new FatalThrowableError($e));",
+                "                }"
+              ],
+              "filename": "/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php",
+              "lineno": 53,
+              "in_app": false,
+              "context_line": "                    return $callable($passable);"
+            },
+            {
+              "function": "Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}",
+              "abs_path": "/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php",
+              "pre_context": [
+                "                    // since the object we're given was already a fully instantiated object.",
+                "                    $parameters = [$passable, $stack];",
+                "                }",
+                "",
+                "                $response = method_exists($pipe, $this->method)"
+              ],
+              "vars": {
+                "param1": "Object Illuminate\\Http\\Request"
+              },
+              "post_context": [
+                "                                : $pipe(...$parameters);",
+                "",
+                "                return $response instanceof Responsable",
+                "                            ? $response->toResponse($this->getContainer()->make(Request::class))",
+                "                            : $response;"
+              ],
+              "filename": "/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php",
+              "lineno": 163,
+              "in_app": false,
+              "context_line": "                                ? $pipe->{$this->method}(...$parameters)"
+            },
+            {
+              "function": "Illuminate\\View\\Middleware\\ShareErrorsFromSession::handle",
+              "abs_path": "/vendor/laravel/framework/src/Illuminate/View/Middleware/ShareErrorsFromSession.php",
+              "pre_context": [
+                "",
+                "        // Putting the errors in the view for every view allows the developer to just",
+                "        // assume that some errors are always available, which is convenient since",
+                "        // they don't have to continually run checks for the presence of errors.",
+                ""
+              ],
+              "vars": {
+                "request": "Object Illuminate\\Http\\Request",
+                "next": "Lambda Illuminate\\Routing\\{closure} [mixed|null passable]"
+              },
+              "post_context": [
+                "    }",
+                "}",
+                ""
+              ],
+              "filename": "/vendor/laravel/framework/src/Illuminate/View/Middleware/ShareErrorsFromSession.php",
+              "lineno": 49,
+              "in_app": false,
+              "context_line": "        return $next($request);"
+            },
+            {
+              "function": "Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}",
+              "abs_path": "/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php",
+              "pre_context": [
+                "                try {",
+                "                    $slice = parent::carry();",
+                "",
+                "                    $callable = $slice($stack, $pipe);",
+                ""
+              ],
+              "vars": {
+                "param1": "Object Illuminate\\Http\\Request"
+              },
+              "post_context": [
+                "                } catch (Exception $e) {",
+                "                    return $this->handleException($passable, $e);",
+                "                } catch (Throwable $e) {",
+                "                    return $this->handleException($passable, new FatalThrowableError($e));",
+                "                }"
+              ],
+              "filename": "/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php",
+              "lineno": 53,
+              "in_app": false,
+              "context_line": "                    return $callable($passable);"
+            },
+            {
+              "function": "Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}",
+              "abs_path": "/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php",
+              "pre_context": [
+                "                    // since the object we're given was already a fully instantiated object.",
+                "                    $parameters = [$passable, $stack];",
+                "                }",
+                "",
+                "                $response = method_exists($pipe, $this->method)"
+              ],
+              "vars": {
+                "param1": "Object Illuminate\\Http\\Request"
+              },
+              "post_context": [
+                "                                : $pipe(...$parameters);",
+                "",
+                "                return $response instanceof Responsable",
+                "                            ? $response->toResponse($this->getContainer()->make(Request::class))",
+                "                            : $response;"
+              ],
+              "filename": "/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php",
+              "lineno": 163,
+              "in_app": false,
+              "context_line": "                                ? $pipe->{$this->method}(...$parameters)"
+            },
+            {
+              "function": "Illuminate\\Foundation\\Http\\Middleware\\VerifyCsrfToken::handle",
+              "abs_path": "/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/VerifyCsrfToken.php",
+              "pre_context": [
+                "            $this->isReading($request) ||",
+                "            $this->runningUnitTests() ||",
+                "            $this->inExceptArray($request) ||",
+                "            $this->tokensMatch($request)",
+                "        ) {"
+              ],
+              "vars": {
+                "request": "Object Illuminate\\Http\\Request",
+                "next": "Lambda Illuminate\\Routing\\{closure} [mixed|null passable]"
+              },
+              "post_context": [
+                "                if ($this->shouldAddXsrfTokenCookie()) {",
+                "                    $this->addCookieToResponse($request, $response);",
+                "                }",
+                "            });",
+                "        }"
+              ],
+              "filename": "/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/VerifyCsrfToken.php",
+              "lineno": 75,
+              "in_app": false,
+              "context_line": "            return tap($next($request), function ($response) use ($request) {"
+            },
+            {
+              "function": "Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}",
+              "abs_path": "/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php",
+              "pre_context": [
+                "                try {",
+                "                    $slice = parent::carry();",
+                "",
+                "                    $callable = $slice($stack, $pipe);",
+                ""
+              ],
+              "vars": {
+                "param1": "Object Illuminate\\Http\\Request"
+              },
+              "post_context": [
+                "                } catch (Exception $e) {",
+                "                    return $this->handleException($passable, $e);",
+                "                } catch (Throwable $e) {",
+                "                    return $this->handleException($passable, new FatalThrowableError($e));",
+                "                }"
+              ],
+              "filename": "/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php",
+              "lineno": 53,
+              "in_app": false,
+              "context_line": "                    return $callable($passable);"
+            },
+            {
+              "function": "Illuminate\\Pipeline\\Pipeline::Illuminate\\Pipeline\\{closure}",
+              "abs_path": "/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php",
+              "pre_context": [
+                "                    // since the object we're given was already a fully instantiated object.",
+                "                    $parameters = [$passable, $stack];",
+                "                }",
+                "",
+                "                $response = method_exists($pipe, $this->method)"
+              ],
+              "vars": {
+                "param1": "Object Illuminate\\Http\\Request"
+              },
+              "post_context": [
+                "                                : $pipe(...$parameters);",
+                "",
+                "                return $response instanceof Responsable",
+                "                            ? $response->toResponse($this->getContainer()->make(Request::class))",
+                "                            : $response;"
+              ],
+              "filename": "/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php",
+              "lineno": 163,
+              "in_app": false,
+              "context_line": "                                ? $pipe->{$this->method}(...$parameters)"
+            },
+            {
+              "function": "Illuminate\\Routing\\Middleware\\SubstituteBindings::handle",
+              "abs_path": "/vendor/laravel/framework/src/Illuminate/Routing/Middleware/SubstituteBindings.php",
+              "pre_context": [
+                "    {",
+                "        $this->router->substituteBindings($route = $request->route());",
+                "",
+                "        $this->router->substituteImplicitBindings($route);",
+                ""
+              ],
+              "vars": {
+                "request": "Object Illuminate\\Http\\Request",
+                "next": "Lambda Illuminate\\Routing\\{closure} [mixed|null passable]"
+              },
+              "post_context": [
+                "    }",
+                "}",
+                ""
+              ],
+              "filename": "/vendor/laravel/framework/src/Illuminate/Routing/Middleware/SubstituteBindings.php",
+              "lineno": 41,
+              "in_app": false,
+              "context_line": "        return $next($request);"
+            },
+            {
+              "function": "Illuminate\\Routing\\Pipeline::Illuminate\\Routing\\{closure}",
+              "abs_path": "/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php",
+              "pre_context": [
+                "     */",
+                "    protected function prepareDestination(Closure $destination)",
+                "    {",
+                "        return function ($passable) use ($destination) {",
+                "            try {"
+              ],
+              "vars": {
+                "param1": "Object Illuminate\\Http\\Request"
+              },
+              "post_context": [
+                "            } catch (Exception $e) {",
+                "                return $this->handleException($passable, $e);",
+                "            } catch (Throwable $e) {",
+                "                return $this->handleException($passable, new FatalThrowableError($e));",
+                "            }"
+              ],
+              "filename": "/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php",
+              "lineno": 30,
+              "in_app": false,
+              "context_line": "                return $destination($passable);"
+            },
+            {
+              "function": "Illuminate\\Routing\\Router::Illuminate\\Routing\\{closure}",
+              "abs_path": "/vendor/laravel/framework/src/Illuminate/Routing/Router.php",
+              "pre_context": [
+                "        return (new Pipeline($this->container))",
+                "                        ->send($request)",
+                "                        ->through($middleware)",
+                "                        ->then(function ($request) use ($route) {",
+                "                            return $this->prepareResponse("
+              ],
+              "vars": {
+                "param1": "Object Illuminate\\Http\\Request"
+              },
+              "post_context": [
+                "                            );",
+                "                        });",
+                "    }",
+                "",
+                "    /**"
+              ],
+              "filename": "/vendor/laravel/framework/src/Illuminate/Routing/Router.php",
+              "lineno": 680,
+              "in_app": false,
+              "context_line": "                                $request, $route->run()"
+            },
+            {
+              "function": "Illuminate\\Routing\\Route::run",
+              "abs_path": "/vendor/laravel/framework/src/Illuminate/Routing/Route.php",
+              "pre_context": [
+                "        try {",
+                "            if ($this->isControllerAction()) {",
+                "                return $this->runController();",
+                "            }",
+                ""
+              ],
+              "post_context": [
+                "        } catch (HttpResponseException $e) {",
+                "            return $e->getResponse();",
+                "        }",
+                "    }",
+                ""
+              ],
+              "filename": "/vendor/laravel/framework/src/Illuminate/Routing/Route.php",
+              "lineno": 179,
+              "in_app": false,
+              "context_line": "            return $this->runCallable();"
+            },
+            {
+              "function": "Illuminate\\Routing\\Route::runCallable",
+              "abs_path": "/vendor/laravel/framework/src/Illuminate/Routing/Route.php",
+              "pre_context": [
+                "    protected function runCallable()",
+                "    {",
+                "        $callable = $this->action['uses'];",
+                "",
+                "        return $callable(...array_values($this->resolveMethodDependencies("
+              ],
+              "post_context": [
+                "        )));",
+                "    }",
+                "",
+                "    /**",
+                "     * Run the route action and return the response."
+              ],
+              "filename": "/vendor/laravel/framework/src/Illuminate/Routing/Route.php",
+              "lineno": 205,
+              "in_app": false,
+              "context_line": "            $this->parametersWithoutNulls(), new ReflectionFunction($this->action['uses'])"
+            },
+            {
+              "function": "Illuminate\\Routing\\RouteFileRegistrar::{closure}",
+              "abs_path": "/routes/web.php",
+              "pre_context": [
+                "        Sentry\\Breadcrumb::TYPE_ERROR,",
+                "        'error_reporting',",
+                "        'foo bar'",
+                "      ));",
+                ""
+              ],
+              "post_context": [
+                "    return view('welcome');",
+                "});",
+                ""
+              ],
+              "filename": "/routes/web.php",
+              "lineno": 22,
+              "in_app": true,
+              "context_line": "    throw new Exception('LARAVEL TEST');"
+            }
+          ]
+        },
+        "type": "Exception",
+        "value": "LARAVEL TEST"
+      }
+    ]
+  },
+  "release": null
+}
diff --git a/tests/sentry/event_hashing/fixtures/laravel.out b/tests/sentry/event_hashing/fixtures/laravel.out
new file mode 100644
index 0000000000..9ce6fc803c
--- /dev/null
+++ b/tests/sentry/event_hashing/fixtures/laravel.out
@@ -0,0 +1,721 @@
+app:
+  hash: None
+  component:
+    app (exception of system takes precedence)
+      exception (ignored because this variant does not contain a stacktrace, but but the system variant does)
+        stacktrace (less than 10% of frames are in-app)
+          frame*
+            filename*
+              u'/server.php'
+            context-line*
+              u"require_once __DIR__.'/public/index.php';"
+            function (line number is used only if module or filename are available)
+              21
+          frame*
+            filename*
+              u'/public/index.php'
+            context-line*
+              u'    $request = Illuminate\\Http\\Request::capture()'
+            function (line number is used only if module or filename are available)
+              55
+          frame (non app frame)
+            filename*
+              u'/vendor/laravel/framework/src/Illuminate/Foundation/Http/Kernel.php'
+            context-line*
+              u'            $response = $this->sendRequestThroughRouter($request);'
+            function (line number is used only if module or filename are available)
+              116
+          frame (non app frame)
+            filename*
+              u'/vendor/laravel/framework/src/Illuminate/Foundation/Http/Kernel.php'
+            context-line*
+              u'                    ->then($this->dispatchToRouter());'
+            function (line number is used only if module or filename are available)
+              151
+          frame (non app frame)
+            filename*
+              u'/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php'
+            context-line*
+              u'        return $pipeline($this->passable);'
+            function (line number is used only if module or filename are available)
+              104
+          frame (non app frame)
+            filename*
+              u'/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php'
+            context-line*
+              u'                    return $callable($passable);'
+            function (line number is used only if module or filename are available)
+              53
+          frame (non app frame)
+            filename*
+              u'/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php'
+            context-line*
+              u'                                ? $pipe->{$this->method}(...$parameters)'
+            function (line number is used only if module or filename are available)
+              163
+          frame (non app frame)
+            filename*
+              u'/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/CheckForMaintenanceMode.php'
+            context-line*
+              u'        return $next($request);'
+            function (line number is used only if module or filename are available)
+              62
+          frame (non app frame)
+            filename*
+              u'/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php'
+            context-line*
+              u'                    return $callable($passable);'
+            function (line number is used only if module or filename are available)
+              53
+          frame (non app frame)
+            filename*
+              u'/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php'
+            context-line*
+              u'                                ? $pipe->{$this->method}(...$parameters)'
+            function (line number is used only if module or filename are available)
+              163
+          frame (non app frame)
+            filename*
+              u'/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/ValidatePostSize.php'
+            context-line*
+              u'        return $next($request);'
+            function (line number is used only if module or filename are available)
+              27
+          frame (non app frame)
+            filename*
+              u'/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php'
+            context-line*
+              u'                    return $callable($passable);'
+            function (line number is used only if module or filename are available)
+              53
+          frame (non app frame)
+            filename*
+              u'/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php'
+            context-line*
+              u'                                ? $pipe->{$this->method}(...$parameters)'
+            function (line number is used only if module or filename are available)
+              163
+          frame (non app frame)
+            filename*
+              u'/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/TransformsRequest.php'
+            context-line*
+              u'        return $next($request);'
+            function (line number is used only if module or filename are available)
+              21
+          frame (non app frame)
+            filename*
+              u'/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php'
+            context-line*
+              u'                    return $callable($passable);'
+            function (line number is used only if module or filename are available)
+              53
+          frame (non app frame)
+            filename*
+              u'/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php'
+            context-line*
+              u'                                ? $pipe->{$this->method}(...$parameters)'
+            function (line number is used only if module or filename are available)
+              163
+          frame (non app frame)
+            filename*
+              u'/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/TransformsRequest.php'
+            context-line*
+              u'        return $next($request);'
+            function (line number is used only if module or filename are available)
+              21
+          frame (non app frame)
+            filename*
+              u'/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php'
+            context-line*
+              u'                    return $callable($passable);'
+            function (line number is used only if module or filename are available)
+              53
+          frame (non app frame)
+            filename*
+              u'/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php'
+            context-line*
+              u'                                ? $pipe->{$this->method}(...$parameters)'
+            function (line number is used only if module or filename are available)
+              163
+          frame (non app frame)
+            filename*
+              u'/vendor/fideloper/proxy/src/TrustProxies.php'
+            context-line*
+              u'        return $next($request);'
+            function (line number is used only if module or filename are available)
+              57
+          frame (non app frame)
+            filename*
+              u'/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php'
+            context-line*
+              u'                return $destination($passable);'
+            function (line number is used only if module or filename are available)
+              30
+          frame (non app frame)
+            filename*
+              u'/vendor/laravel/framework/src/Illuminate/Foundation/Http/Kernel.php'
+            context-line*
+              u'            return $this->router->dispatch($request);'
+            function (line number is used only if module or filename are available)
+              176
+          frame (non app frame)
+            filename*
+              u'/vendor/laravel/framework/src/Illuminate/Routing/Router.php'
+            context-line*
+              u'        return $this->dispatchToRoute($request);'
+            function (line number is used only if module or filename are available)
+              612
+          frame (non app frame)
+            filename*
+              u'/vendor/laravel/framework/src/Illuminate/Routing/Router.php'
+            context-line*
+              u'        return $this->runRoute($request, $this->findRoute($request));'
+            function (line number is used only if module or filename are available)
+              623
+          frame (non app frame)
+            filename*
+              u'/vendor/laravel/framework/src/Illuminate/Routing/Router.php'
+            context-line*
+              u'            $this->runRouteWithinStack($route, $request)'
+            function (line number is used only if module or filename are available)
+              657
+          frame (non app frame)
+            filename*
+              u'/vendor/laravel/framework/src/Illuminate/Routing/Router.php'
+            context-line*
+              u'                        });'
+            function (line number is used only if module or filename are available)
+              682
+          frame (non app frame)
+            filename*
+              u'/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php'
+            context-line*
+              u'        return $pipeline($this->passable);'
+            function (line number is used only if module or filename are available)
+              104
+          frame (non app frame)
+            filename*
+              u'/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php'
+            context-line*
+              u'                    return $callable($passable);'
+            function (line number is used only if module or filename are available)
+              53
+          frame (non app frame)
+            filename*
+              u'/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php'
+            context-line*
+              u'                                ? $pipe->{$this->method}(...$parameters)'
+            function (line number is used only if module or filename are available)
+              163
+          frame (non app frame)
+            filename*
+              u'/vendor/laravel/framework/src/Illuminate/Cookie/Middleware/EncryptCookies.php'
+            context-line*
+              u'        return $this->encrypt($next($this->decrypt($request)));'
+            function (line number is used only if module or filename are available)
+              66
+          frame (non app frame)
+            filename*
+              u'/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php'
+            context-line*
+              u'                    return $callable($passable);'
+            function (line number is used only if module or filename are available)
+              53
+          frame (non app frame)
+            filename*
+              u'/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php'
+            context-line*
+              u'                                ? $pipe->{$this->method}(...$parameters)'
+            function (line number is used only if module or filename are available)
+              163
+          frame (non app frame)
+            filename*
+              u'/vendor/laravel/framework/src/Illuminate/Cookie/Middleware/AddQueuedCookiesToResponse.php'
+            context-line*
+              u'        $response = $next($request);'
+            function (line number is used only if module or filename are available)
+              37
+          frame (non app frame)
+            filename*
+              u'/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php'
+            context-line*
+              u'                    return $callable($passable);'
+            function (line number is used only if module or filename are available)
+              53
+          frame (non app frame)
+            filename*
+              u'/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php'
+            context-line*
+              u'                                ? $pipe->{$this->method}(...$parameters)'
+            function (line number is used only if module or filename are available)
+              163
+          frame (non app frame)
+            filename*
+              u'/vendor/laravel/framework/src/Illuminate/Session/Middleware/StartSession.php'
+            context-line*
+              u'            $response = $next($request), $session'
+            function (line number is used only if module or filename are available)
+              59
+          frame (non app frame)
+            filename*
+              u'/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php'
+            context-line*
+              u'                    return $callable($passable);'
+            function (line number is used only if module or filename are available)
+              53
+          frame (non app frame)
+            filename*
+              u'/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php'
+            context-line*
+              u'                                ? $pipe->{$this->method}(...$parameters)'
+            function (line number is used only if module or filename are available)
+              163
+          frame (non app frame)
+            filename*
+              u'/vendor/laravel/framework/src/Illuminate/View/Middleware/ShareErrorsFromSession.php'
+            context-line*
+              u'        return $next($request);'
+            function (line number is used only if module or filename are available)
+              49
+          frame (non app frame)
+            filename*
+              u'/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php'
+            context-line*
+              u'                    return $callable($passable);'
+            function (line number is used only if module or filename are available)
+              53
+          frame (non app frame)
+            filename*
+              u'/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php'
+            context-line*
+              u'                                ? $pipe->{$this->method}(...$parameters)'
+            function (line number is used only if module or filename are available)
+              163
+          frame (non app frame)
+            filename*
+              u'/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/VerifyCsrfToken.php'
+            context-line*
+              u'            return tap($next($request), function ($response) use ($request) {'
+            function (line number is used only if module or filename are available)
+              75
+          frame (non app frame)
+            filename*
+              u'/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php'
+            context-line*
+              u'                    return $callable($passable);'
+            function (line number is used only if module or filename are available)
+              53
+          frame (non app frame)
+            filename*
+              u'/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php'
+            context-line*
+              u'                                ? $pipe->{$this->method}(...$parameters)'
+            function (line number is used only if module or filename are available)
+              163
+          frame (non app frame)
+            filename*
+              u'/vendor/laravel/framework/src/Illuminate/Routing/Middleware/SubstituteBindings.php'
+            context-line*
+              u'        return $next($request);'
+            function (line number is used only if module or filename are available)
+              41
+          frame (non app frame)
+            filename*
+              u'/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php'
+            context-line*
+              u'                return $destination($passable);'
+            function (line number is used only if module or filename are available)
+              30
+          frame (non app frame)
+            filename*
+              u'/vendor/laravel/framework/src/Illuminate/Routing/Router.php'
+            context-line*
+              u'                                $request, $route->run()'
+            function (line number is used only if module or filename are available)
+              680
+          frame (non app frame)
+            filename*
+              u'/vendor/laravel/framework/src/Illuminate/Routing/Route.php'
+            context-line*
+              u'            return $this->runCallable();'
+            function (line number is used only if module or filename are available)
+              179
+          frame (non app frame)
+            filename*
+              u'/vendor/laravel/framework/src/Illuminate/Routing/Route.php'
+            context-line*
+              u"            $this->parametersWithoutNulls(), new ReflectionFunction($this->action['uses'])"
+            function (line number is used only if module or filename are available)
+              205
+          frame*
+            filename*
+              u'/routes/web.php'
+            context-line*
+              u"    throw new Exception('LARAVEL TEST');"
+            function (line number is used only if module or filename are available)
+              22
+        type*
+          u'Exception'
+        value*
+          u'LARAVEL TEST'
+--------------------------------------------------------------------------
+system:
+  hash: '89037a724fe48e9f6144c3a14e182b9c'
+  component:
+    system*
+      exception*
+        stacktrace*
+          frame*
+            filename*
+              u'/server.php'
+            context-line*
+              u"require_once __DIR__.'/public/index.php';"
+            function (line number is used only if module or filename are available)
+              21
+          frame*
+            filename*
+              u'/public/index.php'
+            context-line*
+              u'    $request = Illuminate\\Http\\Request::capture()'
+            function (line number is used only if module or filename are available)
+              55
+          frame*
+            filename*
+              u'/vendor/laravel/framework/src/Illuminate/Foundation/Http/Kernel.php'
+            context-line*
+              u'            $response = $this->sendRequestThroughRouter($request);'
+            function (line number is used only if module or filename are available)
+              116
+          frame*
+            filename*
+              u'/vendor/laravel/framework/src/Illuminate/Foundation/Http/Kernel.php'
+            context-line*
+              u'                    ->then($this->dispatchToRouter());'
+            function (line number is used only if module or filename are available)
+              151
+          frame*
+            filename*
+              u'/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php'
+            context-line*
+              u'        return $pipeline($this->passable);'
+            function (line number is used only if module or filename are available)
+              104
+          frame*
+            filename*
+              u'/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php'
+            context-line*
+              u'                    return $callable($passable);'
+            function (line number is used only if module or filename are available)
+              53
+          frame*
+            filename*
+              u'/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php'
+            context-line*
+              u'                                ? $pipe->{$this->method}(...$parameters)'
+            function (line number is used only if module or filename are available)
+              163
+          frame*
+            filename*
+              u'/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/CheckForMaintenanceMode.php'
+            context-line*
+              u'        return $next($request);'
+            function (line number is used only if module or filename are available)
+              62
+          frame*
+            filename*
+              u'/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php'
+            context-line*
+              u'                    return $callable($passable);'
+            function (line number is used only if module or filename are available)
+              53
+          frame*
+            filename*
+              u'/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php'
+            context-line*
+              u'                                ? $pipe->{$this->method}(...$parameters)'
+            function (line number is used only if module or filename are available)
+              163
+          frame*
+            filename*
+              u'/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/ValidatePostSize.php'
+            context-line*
+              u'        return $next($request);'
+            function (line number is used only if module or filename are available)
+              27
+          frame*
+            filename*
+              u'/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php'
+            context-line*
+              u'                    return $callable($passable);'
+            function (line number is used only if module or filename are available)
+              53
+          frame*
+            filename*
+              u'/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php'
+            context-line*
+              u'                                ? $pipe->{$this->method}(...$parameters)'
+            function (line number is used only if module or filename are available)
+              163
+          frame*
+            filename*
+              u'/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/TransformsRequest.php'
+            context-line*
+              u'        return $next($request);'
+            function (line number is used only if module or filename are available)
+              21
+          frame*
+            filename*
+              u'/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php'
+            context-line*
+              u'                    return $callable($passable);'
+            function (line number is used only if module or filename are available)
+              53
+          frame*
+            filename*
+              u'/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php'
+            context-line*
+              u'                                ? $pipe->{$this->method}(...$parameters)'
+            function (line number is used only if module or filename are available)
+              163
+          frame*
+            filename*
+              u'/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/TransformsRequest.php'
+            context-line*
+              u'        return $next($request);'
+            function (line number is used only if module or filename are available)
+              21
+          frame*
+            filename*
+              u'/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php'
+            context-line*
+              u'                    return $callable($passable);'
+            function (line number is used only if module or filename are available)
+              53
+          frame*
+            filename*
+              u'/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php'
+            context-line*
+              u'                                ? $pipe->{$this->method}(...$parameters)'
+            function (line number is used only if module or filename are available)
+              163
+          frame*
+            filename*
+              u'/vendor/fideloper/proxy/src/TrustProxies.php'
+            context-line*
+              u'        return $next($request);'
+            function (line number is used only if module or filename are available)
+              57
+          frame*
+            filename*
+              u'/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php'
+            context-line*
+              u'                return $destination($passable);'
+            function (line number is used only if module or filename are available)
+              30
+          frame*
+            filename*
+              u'/vendor/laravel/framework/src/Illuminate/Foundation/Http/Kernel.php'
+            context-line*
+              u'            return $this->router->dispatch($request);'
+            function (line number is used only if module or filename are available)
+              176
+          frame*
+            filename*
+              u'/vendor/laravel/framework/src/Illuminate/Routing/Router.php'
+            context-line*
+              u'        return $this->dispatchToRoute($request);'
+            function (line number is used only if module or filename are available)
+              612
+          frame*
+            filename*
+              u'/vendor/laravel/framework/src/Illuminate/Routing/Router.php'
+            context-line*
+              u'        return $this->runRoute($request, $this->findRoute($request));'
+            function (line number is used only if module or filename are available)
+              623
+          frame*
+            filename*
+              u'/vendor/laravel/framework/src/Illuminate/Routing/Router.php'
+            context-line*
+              u'            $this->runRouteWithinStack($route, $request)'
+            function (line number is used only if module or filename are available)
+              657
+          frame*
+            filename*
+              u'/vendor/laravel/framework/src/Illuminate/Routing/Router.php'
+            context-line*
+              u'                        });'
+            function (line number is used only if module or filename are available)
+              682
+          frame*
+            filename*
+              u'/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php'
+            context-line*
+              u'        return $pipeline($this->passable);'
+            function (line number is used only if module or filename are available)
+              104
+          frame*
+            filename*
+              u'/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php'
+            context-line*
+              u'                    return $callable($passable);'
+            function (line number is used only if module or filename are available)
+              53
+          frame*
+            filename*
+              u'/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php'
+            context-line*
+              u'                                ? $pipe->{$this->method}(...$parameters)'
+            function (line number is used only if module or filename are available)
+              163
+          frame*
+            filename*
+              u'/vendor/laravel/framework/src/Illuminate/Cookie/Middleware/EncryptCookies.php'
+            context-line*
+              u'        return $this->encrypt($next($this->decrypt($request)));'
+            function (line number is used only if module or filename are available)
+              66
+          frame*
+            filename*
+              u'/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php'
+            context-line*
+              u'                    return $callable($passable);'
+            function (line number is used only if module or filename are available)
+              53
+          frame*
+            filename*
+              u'/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php'
+            context-line*
+              u'                                ? $pipe->{$this->method}(...$parameters)'
+            function (line number is used only if module or filename are available)
+              163
+          frame*
+            filename*
+              u'/vendor/laravel/framework/src/Illuminate/Cookie/Middleware/AddQueuedCookiesToResponse.php'
+            context-line*
+              u'        $response = $next($request);'
+            function (line number is used only if module or filename are available)
+              37
+          frame*
+            filename*
+              u'/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php'
+            context-line*
+              u'                    return $callable($passable);'
+            function (line number is used only if module or filename are available)
+              53
+          frame*
+            filename*
+              u'/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php'
+            context-line*
+              u'                                ? $pipe->{$this->method}(...$parameters)'
+            function (line number is used only if module or filename are available)
+              163
+          frame*
+            filename*
+              u'/vendor/laravel/framework/src/Illuminate/Session/Middleware/StartSession.php'
+            context-line*
+              u'            $response = $next($request), $session'
+            function (line number is used only if module or filename are available)
+              59
+          frame*
+            filename*
+              u'/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php'
+            context-line*
+              u'                    return $callable($passable);'
+            function (line number is used only if module or filename are available)
+              53
+          frame*
+            filename*
+              u'/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php'
+            context-line*
+              u'                                ? $pipe->{$this->method}(...$parameters)'
+            function (line number is used only if module or filename are available)
+              163
+          frame*
+            filename*
+              u'/vendor/laravel/framework/src/Illuminate/View/Middleware/ShareErrorsFromSession.php'
+            context-line*
+              u'        return $next($request);'
+            function (line number is used only if module or filename are available)
+              49
+          frame*
+            filename*
+              u'/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php'
+            context-line*
+              u'                    return $callable($passable);'
+            function (line number is used only if module or filename are available)
+              53
+          frame*
+            filename*
+              u'/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php'
+            context-line*
+              u'                                ? $pipe->{$this->method}(...$parameters)'
+            function (line number is used only if module or filename are available)
+              163
+          frame*
+            filename*
+              u'/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/VerifyCsrfToken.php'
+            context-line*
+              u'            return tap($next($request), function ($response) use ($request) {'
+            function (line number is used only if module or filename are available)
+              75
+          frame*
+            filename*
+              u'/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php'
+            context-line*
+              u'                    return $callable($passable);'
+            function (line number is used only if module or filename are available)
+              53
+          frame*
+            filename*
+              u'/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php'
+            context-line*
+              u'                                ? $pipe->{$this->method}(...$parameters)'
+            function (line number is used only if module or filename are available)
+              163
+          frame*
+            filename*
+              u'/vendor/laravel/framework/src/Illuminate/Routing/Middleware/SubstituteBindings.php'
+            context-line*
+              u'        return $next($request);'
+            function (line number is used only if module or filename are available)
+              41
+          frame*
+            filename*
+              u'/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php'
+            context-line*
+              u'                return $destination($passable);'
+            function (line number is used only if module or filename are available)
+              30
+          frame*
+            filename*
+              u'/vendor/laravel/framework/src/Illuminate/Routing/Router.php'
+            context-line*
+              u'                                $request, $route->run()'
+            function (line number is used only if module or filename are available)
+              680
+          frame*
+            filename*
+              u'/vendor/laravel/framework/src/Illuminate/Routing/Route.php'
+            context-line*
+              u'            return $this->runCallable();'
+            function (line number is used only if module or filename are available)
+              179
+          frame*
+            filename*
+              u'/vendor/laravel/framework/src/Illuminate/Routing/Route.php'
+            context-line*
+              u"            $this->parametersWithoutNulls(), new ReflectionFunction($this->action['uses'])"
+            function (line number is used only if module or filename are available)
+              205
+          frame*
+            filename*
+              u'/routes/web.php'
+            context-line*
+              u"    throw new Exception('LARAVEL TEST');"
+            function (line number is used only if module or filename are available)
+              22
+        type*
+          u'Exception'
+        value (stacktrace and type take precedence)
+          u'LARAVEL TEST'
diff --git a/tests/sentry/event_hashing/fixtures/minified-javascript.json b/tests/sentry/event_hashing/fixtures/minified-javascript.json
new file mode 100644
index 0000000000..3507986a76
--- /dev/null
+++ b/tests/sentry/event_hashing/fixtures/minified-javascript.json
@@ -0,0 +1,562 @@
+{
+  "culprit": "Pt</t.prototype.wrapTimeFunction/<(/_static/5788ef38fefa0df624cb96af56fd1435/sentry/dist/vendor.js)",
+  "event_id": "d8a4b0c9487e424ca55e26afd17c62fd",
+  "environment": "prod",
+  "platform": "javascript",
+  "logger": "",
+  "fingerprint": [
+    "{{ default }}"
+  ],
+  "exception": {
+    "values": [
+      {
+        "stacktrace": {
+          "frames": [
+            {
+              "function": "M",
+              "abs_path": "https://s1.sentry-cdn.com/_static/5788ef38fefa0df624cb96af56fd1435/sentry/dist/vendor.js",
+              "pre_context": [
+                " * @overview es6-promise - a tiny implementation of Promises/A+.",
+                " * @copyright Copyright (c) 2014 Yehuda Katz, Tom Dale, Stefan Penner and contributors (Conversion to ES6 API by Jake Archibald)",
+                " * @license   Licensed under MIT license",
+                " *            See https://raw.githubusercontent.com/stefanpenner/es6-promise/master/LICENSE",
+                " * @version   v4.2.5+7f2b526d"
+              ],
+              "post_context": [
+                "/** @license React v16.5.1",
+                " * react-dom-server.browser.production.min.js",
+                " *",
+                " * Copyright (c) Facebook, Inc. and its affiliates.",
+                " *"
+              ],
+              "filename": "/_static/5788ef38fefa0df624cb96af56fd1435/sentry/dist/vendor.js",
+              "module": "sentry/dist/vendor",
+              "colno": 38615,
+              "in_app": false,
+              "data": {
+                "sourcemap": "https://s1.sentry-cdn.com/_static/5788ef38fefa0df624cb96af56fd1435/sentry/dist/vendor.js.map"
+              },
+              "context_line": "{snip}  o,r;for(b&&(o=i.domain)&&o.exit();t;){r=t.fn,t=t.next;try{r()}catch(o){throw t?n():e=void 0,o}}e=void 0,o&&o.enter()};if(b)n=function(){i.n {snip}",
+              "lineno": 172
+            },
+            {
+              "function": "S/<",
+              "abs_path": "https://s1.sentry-cdn.com/_static/5788ef38fefa0df624cb96af56fd1435/sentry/dist/vendor.js",
+              "pre_context": [
+                "/**",
+                " * @preserve jed.js https://github.com/SlexAxton/Jed",
+                " */",
+                "!function(n,o){var r=Array.prototype,p=Object.prototype,i=r.slice,c=p.hasOwnProperty,b=r.forEach,M={},a={forEach:function(t,e,n){var o,r,p;i {snip}",
+                "/*! JSON v3.3.2 | http://bestiejs.github.io/json3 | Copyright 2012-2014, Kit Cambridge | http://kit.mit-license.org */"
+              ],
+              "post_context": [
+                "/*!",
+                "  Copyright (c) 2015 Jed Watson.",
+                "  Based on code that is Copyright 2013-2015, Facebook, Inc.",
+                "  All rights reserved.",
+                "*/"
+              ],
+              "filename": "/_static/5788ef38fefa0df624cb96af56fd1435/sentry/dist/vendor.js",
+              "module": "sentry/dist/vendor",
+              "colno": 228660,
+              "in_app": false,
+              "data": {
+                "sourcemap": "https://s1.sentry-cdn.com/_static/5788ef38fefa0df624cb96af56fd1435/sentry/dist/vendor.js.map"
+              },
+              "context_line": "{snip} ,M):b(n)):M(o)}catch(t){a&&!i&&a.exit(),M(t)}};n.length>p;)i(n[p++]);t._c=[],t._n=!1,e&&!t._h&&x(t)})}},x=function(t){d.call(b,function(){va {snip}",
+              "lineno": 147
+            },
+            {
+              "function": "i",
+              "abs_path": "https://s1.sentry-cdn.com/_static/5788ef38fefa0df624cb96af56fd1435/sentry/dist/vendor.js",
+              "pre_context": [
+                "/**",
+                " * @preserve jed.js https://github.com/SlexAxton/Jed",
+                " */",
+                "!function(n,o){var r=Array.prototype,p=Object.prototype,i=r.slice,c=p.hasOwnProperty,b=r.forEach,M={},a={forEach:function(t,e,n){var o,r,p;i {snip}",
+                "/*! JSON v3.3.2 | http://bestiejs.github.io/json3 | Copyright 2012-2014, Kit Cambridge | http://kit.mit-license.org */"
+              ],
+              "post_context": [
+                "/*!",
+                "  Copyright (c) 2015 Jed Watson.",
+                "  Based on code that is Copyright 2013-2015, Facebook, Inc.",
+                "  All rights reserved.",
+                "*/"
+              ],
+              "filename": "/_static/5788ef38fefa0df624cb96af56fd1435/sentry/dist/vendor.js",
+              "module": "sentry/dist/vendor",
+              "colno": 228515,
+              "in_app": false,
+              "data": {
+                "sourcemap": "https://s1.sentry-cdn.com/_static/5788ef38fefa0df624cb96af56fd1435/sentry/dist/vendor.js.map"
+              },
+              "context_line": "{snip} ry{c?(r||(2==t._h&&T(t),t._h=1),!0===c?n=o:(a&&a.enter(),n=c(o),a&&(a.exit(),i=!0)),n===e.promise?M(y(\"Promise-chain cycle\")):(p=N(n))?p.cal {snip}",
+              "lineno": 147
+            },
+            {
+              "function": "b",
+              "abs_path": "https://s1.sentry-cdn.com/_static/5788ef38fefa0df624cb96af56fd1435/sentry/dist/vendor.js",
+              "pre_context": [
+                "MERCHANTABLITY OR NON-INFRINGEMENT.",
+                "",
+                "See the Apache Version 2.0 License for specific language governing permissions",
+                "and limitations under the License.",
+                "***************************************************************************** */"
+              ],
+              "post_context": [
+                "/*! *****************************************************************************",
+                "Copyright (c) Microsoft Corporation. All rights reserved.",
+                "Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use",
+                "this file except in compliance with the License. You may obtain a copy of the",
+                "License at http://www.apache.org/licenses/LICENSE-2.0"
+              ],
+              "filename": "/_static/5788ef38fefa0df624cb96af56fd1435/sentry/dist/vendor.js",
+              "module": "sentry/dist/vendor",
+              "colno": 61189,
+              "in_app": false,
+              "data": {
+                "sourcemap": "https://s1.sentry-cdn.com/_static/5788ef38fefa0df624cb96af56fd1435/sentry/dist/vendor.js.map"
+              },
+              "context_line": "{snip} ply(e,o);function c(t){n(i,r,p,c,b,\"next\",t)}function b(t){n(i,r,p,c,b,\"throw\",t)}c(void 0)})}}},,,function(t,e,n){(t.exports=n(1466)).tz.lo {snip}",
+              "lineno": 64
+            },
+            {
+              "function": "n",
+              "abs_path": "https://s1.sentry-cdn.com/_static/5788ef38fefa0df624cb96af56fd1435/sentry/dist/vendor.js",
+              "pre_context": [
+                "MERCHANTABLITY OR NON-INFRINGEMENT.",
+                "",
+                "See the Apache Version 2.0 License for specific language governing permissions",
+                "and limitations under the License.",
+                "***************************************************************************** */"
+              ],
+              "post_context": [
+                "/*! *****************************************************************************",
+                "Copyright (c) Microsoft Corporation. All rights reserved.",
+                "Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use",
+                "this file except in compliance with the License. You may obtain a copy of the",
+                "License at http://www.apache.org/licenses/LICENSE-2.0"
+              ],
+              "filename": "/_static/5788ef38fefa0df624cb96af56fd1435/sentry/dist/vendor.js",
+              "module": "sentry/dist/vendor",
+              "colno": 60943,
+              "in_app": false,
+              "data": {
+                "sourcemap": "https://s1.sentry-cdn.com/_static/5788ef38fefa0df624cb96af56fd1435/sentry/dist/vendor.js.map"
+              },
+              "context_line": "{snip} e)}},function(t,e){function n(t,e,n,o,r,p,i){try{var c=t[p](i),b=c.value}catch(t){return void n(t)}c.done?e(b):Promise.resolve(b).then(o,r)} {snip}",
+              "lineno": 64
+            },
+            {
+              "function": "g/</t[e]",
+              "abs_path": "https://s1.sentry-cdn.com/_static/5788ef38fefa0df624cb96af56fd1435/sentry/dist/vendor.js",
+              "pre_context": [
+                "/**",
+                " * @preserve jed.js https://github.com/SlexAxton/Jed",
+                " */",
+                "!function(n,o){var r=Array.prototype,p=Object.prototype,i=r.slice,c=p.hasOwnProperty,b=r.forEach,M={},a={forEach:function(t,e,n){var o,r,p;i {snip}",
+                "/*! JSON v3.3.2 | http://bestiejs.github.io/json3 | Copyright 2012-2014, Kit Cambridge | http://kit.mit-license.org */"
+              ],
+              "post_context": [
+                "/*!",
+                "  Copyright (c) 2015 Jed Watson.",
+                "  Based on code that is Copyright 2013-2015, Facebook, Inc.",
+                "  All rights reserved.",
+                "*/"
+              ],
+              "filename": "/_static/5788ef38fefa0df624cb96af56fd1435/sentry/dist/vendor.js",
+              "module": "sentry/dist/vendor",
+              "colno": 213090,
+              "in_app": false,
+              "data": {
+                "sourcemap": "https://s1.sentry-cdn.com/_static/5788ef38fefa0df624cb96af56fd1435/sentry/dist/vendor.js.map"
+              },
+              "context_line": "{snip} row\",\"return\"].forEach(function(e){t[e]=function(t){return this._invoke(e,t)}})}function R(t){var e;this._invoke=function(n,o){function p(){ {snip}",
+              "lineno": 147
+            },
+            {
+              "function": "h/p._invoke</<",
+              "abs_path": "https://s1.sentry-cdn.com/_static/5788ef38fefa0df624cb96af56fd1435/sentry/dist/vendor.js",
+              "pre_context": [
+                "/**",
+                " * @preserve jed.js https://github.com/SlexAxton/Jed",
+                " */",
+                "!function(n,o){var r=Array.prototype,p=Object.prototype,i=r.slice,c=p.hasOwnProperty,b=r.forEach,M={},a={forEach:function(t,e,n){var o,r,p;i {snip}",
+                "/*! JSON v3.3.2 | http://bestiejs.github.io/json3 | Copyright 2012-2014, Kit Cambridge | http://kit.mit-license.org */"
+              ],
+              "post_context": [
+                "/*!",
+                "  Copyright (c) 2015 Jed Watson.",
+                "  Based on code that is Copyright 2013-2015, Facebook, Inc.",
+                "  All rights reserved.",
+                "*/"
+              ],
+              "filename": "/_static/5788ef38fefa0df624cb96af56fd1435/sentry/dist/vendor.js",
+              "module": "sentry/dist/vendor",
+              "colno": 212704,
+              "in_app": false,
+              "data": {
+                "sourcemap": "https://s1.sentry-cdn.com/_static/5788ef38fefa0df624cb96af56fd1435/sentry/dist/vendor.js.map"
+              },
+              "context_line": "{snip} lse\"return\"===n.method&&n.abrupt(\"return\",n.arg);o=s;var b=W(t,e,n);if(\"normal\"===b.type){if(o=n.done?O:z,b.arg===l)continue;return{value:b. {snip}",
+              "lineno": 147
+            },
+            {
+              "function": "W",
+              "abs_path": "https://s1.sentry-cdn.com/_static/5788ef38fefa0df624cb96af56fd1435/sentry/dist/vendor.js",
+              "pre_context": [
+                "/**",
+                " * @preserve jed.js https://github.com/SlexAxton/Jed",
+                " */",
+                "!function(n,o){var r=Array.prototype,p=Object.prototype,i=r.slice,c=p.hasOwnProperty,b=r.forEach,M={},a={forEach:function(t,e,n){var o,r,p;i {snip}",
+                "/*! JSON v3.3.2 | http://bestiejs.github.io/json3 | Copyright 2012-2014, Kit Cambridge | http://kit.mit-license.org */"
+              ],
+              "post_context": [
+                "/*!",
+                "  Copyright (c) 2015 Jed Watson.",
+                "  Based on code that is Copyright 2013-2015, Facebook, Inc.",
+                "  All rights reserved.",
+                "*/"
+              ],
+              "filename": "/_static/5788ef38fefa0df624cb96af56fd1435/sentry/dist/vendor.js",
+              "module": "sentry/dist/vendor",
+              "colno": 212914,
+              "in_app": false,
+              "data": {
+                "sourcemap": "https://s1.sentry-cdn.com/_static/5788ef38fefa0df624cb96af56fd1435/sentry/dist/vendor.js.map"
+              },
+              "context_line": "{snip} }}(t,n,i),p}function W(t,e,n){try{return{type:\"normal\",arg:t.call(e,n)}}catch(t){return{type:\"throw\",arg:t}}}function v(){}function y(){}fun {snip}",
+              "lineno": 147
+            },
+            {
+              "function": "e/<",
+              "abs_path": "https://s1.sentry-cdn.com/_static/5788ef38fefa0df624cb96af56fd1435/sentry/dist/app.js",
+              "post_context": [
+                "//# sourceMappingURL=app.js.map"
+              ],
+              "filename": "/_static/5788ef38fefa0df624cb96af56fd1435/sentry/dist/app.js",
+              "module": "sentry/dist/app",
+              "colno": 36132,
+              "in_app": false,
+              "data": {
+                "sourcemap": "https://s1.sentry-cdn.com/_static/5788ef38fefa0df624cb96af56fd1435/sentry/dist/app.js.map"
+              },
+              "context_line": "{snip} (e.t0)&&n<I)){e.next=12;break}return n++,e.abrupt(\"return\",a());case 12:throw e.t0;case 13:case\"end\":return e.stop()}},e,this,[[0,7]])}));re {snip}",
+              "lineno": 1
+            },
+            {
+              "function": "e/</a</<",
+              "abs_path": "https://s1.sentry-cdn.com/_static/5788ef38fefa0df624cb96af56fd1435/sentry/dist/app.js",
+              "post_context": [
+                "//# sourceMappingURL=app.js.map"
+              ],
+              "filename": "/_static/5788ef38fefa0df624cb96af56fd1435/sentry/dist/app.js",
+              "module": "sentry/dist/app",
+              "colno": 36236,
+              "in_app": false,
+              "data": {
+                "sourcemap": "https://s1.sentry-cdn.com/_static/5788ef38fefa0df624cb96af56fd1435/sentry/dist/app.js.map"
+              },
+              "context_line": "{snip} urn e.stop()}},e,this,[[0,7]])}));return function(){return e.apply(this,arguments)}}(),e.abrupt(\"return\",a());case 3:case\"end\":return e.stop {snip}",
+              "lineno": 1
+            },
+            {
+              "function": "t.exports/<",
+              "abs_path": "https://s1.sentry-cdn.com/_static/5788ef38fefa0df624cb96af56fd1435/sentry/dist/vendor.js",
+              "pre_context": [
+                "MERCHANTABLITY OR NON-INFRINGEMENT.",
+                "",
+                "See the Apache Version 2.0 License for specific language governing permissions",
+                "and limitations under the License.",
+                "***************************************************************************** */"
+              ],
+              "post_context": [
+                "/*! *****************************************************************************",
+                "Copyright (c) Microsoft Corporation. All rights reserved.",
+                "Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use",
+                "this file except in compliance with the License. You may obtain a copy of the",
+                "License at http://www.apache.org/licenses/LICENSE-2.0"
+              ],
+              "filename": "/_static/5788ef38fefa0df624cb96af56fd1435/sentry/dist/vendor.js",
+              "module": "sentry/dist/vendor",
+              "colno": 61094,
+              "in_app": false,
+              "data": {
+                "sourcemap": "https://s1.sentry-cdn.com/_static/5788ef38fefa0df624cb96af56fd1435/sentry/dist/vendor.js.map"
+              },
+              "context_line": "{snip} unction(t){return function(){var e=this,o=arguments;return new Promise(function(r,p){var i=t.apply(e,o);function c(t){n(i,r,p,c,b,\"next\",t)} {snip}",
+              "lineno": 64
+            },
+            {
+              "function": "L",
+              "abs_path": "https://s1.sentry-cdn.com/_static/5788ef38fefa0df624cb96af56fd1435/sentry/dist/vendor.js",
+              "pre_context": [
+                "/**",
+                " * @preserve jed.js https://github.com/SlexAxton/Jed",
+                " */",
+                "!function(n,o){var r=Array.prototype,p=Object.prototype,i=r.slice,c=p.hasOwnProperty,b=r.forEach,M={},a={forEach:function(t,e,n){var o,r,p;i {snip}",
+                "/*! JSON v3.3.2 | http://bestiejs.github.io/json3 | Copyright 2012-2014, Kit Cambridge | http://kit.mit-license.org */"
+              ],
+              "post_context": [
+                "/*!",
+                "  Copyright (c) 2015 Jed Watson.",
+                "  Based on code that is Copyright 2013-2015, Facebook, Inc.",
+                "  All rights reserved.",
+                "*/"
+              ],
+              "filename": "/_static/5788ef38fefa0df624cb96af56fd1435/sentry/dist/vendor.js",
+              "module": "sentry/dist/vendor",
+              "colno": 229604,
+              "in_app": false,
+              "data": {
+                "sourcemap": "https://s1.sentry-cdn.com/_static/5788ef38fefa0df624cb96af56fd1435/sentry/dist/vendor.js.map"
+              },
+              "context_line": "{snip} function(t){O(this,L,\"Promise\",\"_h\"),s(t),o.call(this);try{t(M(H,this,1),M(C,this,1))}catch(t){C.call(this,t)}},(o=function(t){this._c=[],th {snip}",
+              "lineno": 147
+            },
+            {
+              "function": "t.exports/</<",
+              "abs_path": "https://s1.sentry-cdn.com/_static/5788ef38fefa0df624cb96af56fd1435/sentry/dist/vendor.js",
+              "pre_context": [
+                "MERCHANTABLITY OR NON-INFRINGEMENT.",
+                "",
+                "See the Apache Version 2.0 License for specific language governing permissions",
+                "and limitations under the License.",
+                "***************************************************************************** */"
+              ],
+              "post_context": [
+                "/*! *****************************************************************************",
+                "Copyright (c) Microsoft Corporation. All rights reserved.",
+                "Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use",
+                "this file except in compliance with the License. You may obtain a copy of the",
+                "License at http://www.apache.org/licenses/LICENSE-2.0"
+              ],
+              "filename": "/_static/5788ef38fefa0df624cb96af56fd1435/sentry/dist/vendor.js",
+              "module": "sentry/dist/vendor",
+              "colno": 61212,
+              "in_app": false,
+              "data": {
+                "sourcemap": "https://s1.sentry-cdn.com/_static/5788ef38fefa0df624cb96af56fd1435/sentry/dist/vendor.js.map"
+              },
+              "context_line": "{snip} n(i,r,p,c,b,\"next\",t)}function b(t){n(i,r,p,c,b,\"throw\",t)}c(void 0)})}}},,,function(t,e,n){(t.exports=n(1466)).tz.load(n(1467))},,function( {snip}",
+              "lineno": 64
+            },
+            {
+              "function": "c",
+              "abs_path": "https://s1.sentry-cdn.com/_static/5788ef38fefa0df624cb96af56fd1435/sentry/dist/vendor.js",
+              "pre_context": [
+                "MERCHANTABLITY OR NON-INFRINGEMENT.",
+                "",
+                "See the Apache Version 2.0 License for specific language governing permissions",
+                "and limitations under the License.",
+                "***************************************************************************** */"
+              ],
+              "post_context": [
+                "/*! *****************************************************************************",
+                "Copyright (c) Microsoft Corporation. All rights reserved.",
+                "Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use",
+                "this file except in compliance with the License. You may obtain a copy of the",
+                "License at http://www.apache.org/licenses/LICENSE-2.0"
+              ],
+              "filename": "/_static/5788ef38fefa0df624cb96af56fd1435/sentry/dist/vendor.js",
+              "module": "sentry/dist/vendor",
+              "colno": 61153,
+              "in_app": false,
+              "data": {
+                "sourcemap": "https://s1.sentry-cdn.com/_static/5788ef38fefa0df624cb96af56fd1435/sentry/dist/vendor.js.map"
+              },
+              "context_line": "{snip} new Promise(function(r,p){var i=t.apply(e,o);function c(t){n(i,r,p,c,b,\"next\",t)}function b(t){n(i,r,p,c,b,\"throw\",t)}c(void 0)})}}},,,funct {snip}",
+              "lineno": 64
+            },
+            {
+              "function": "n",
+              "abs_path": "https://s1.sentry-cdn.com/_static/5788ef38fefa0df624cb96af56fd1435/sentry/dist/vendor.js",
+              "pre_context": [
+                "MERCHANTABLITY OR NON-INFRINGEMENT.",
+                "",
+                "See the Apache Version 2.0 License for specific language governing permissions",
+                "and limitations under the License.",
+                "***************************************************************************** */"
+              ],
+              "post_context": [
+                "/*! *****************************************************************************",
+                "Copyright (c) Microsoft Corporation. All rights reserved.",
+                "Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use",
+                "this file except in compliance with the License. You may obtain a copy of the",
+                "License at http://www.apache.org/licenses/LICENSE-2.0"
+              ],
+              "filename": "/_static/5788ef38fefa0df624cb96af56fd1435/sentry/dist/vendor.js",
+              "module": "sentry/dist/vendor",
+              "colno": 60943,
+              "in_app": false,
+              "data": {
+                "sourcemap": "https://s1.sentry-cdn.com/_static/5788ef38fefa0df624cb96af56fd1435/sentry/dist/vendor.js.map"
+              },
+              "context_line": "{snip} e)}},function(t,e){function n(t,e,n,o,r,p,i){try{var c=t[p](i),b=c.value}catch(t){return void n(t)}c.done?e(b):Promise.resolve(b).then(o,r)} {snip}",
+              "lineno": 64
+            },
+            {
+              "function": "g/</t[e]",
+              "abs_path": "https://s1.sentry-cdn.com/_static/5788ef38fefa0df624cb96af56fd1435/sentry/dist/vendor.js",
+              "pre_context": [
+                "/**",
+                " * @preserve jed.js https://github.com/SlexAxton/Jed",
+                " */",
+                "!function(n,o){var r=Array.prototype,p=Object.prototype,i=r.slice,c=p.hasOwnProperty,b=r.forEach,M={},a={forEach:function(t,e,n){var o,r,p;i {snip}",
+                "/*! JSON v3.3.2 | http://bestiejs.github.io/json3 | Copyright 2012-2014, Kit Cambridge | http://kit.mit-license.org */"
+              ],
+              "post_context": [
+                "/*!",
+                "  Copyright (c) 2015 Jed Watson.",
+                "  Based on code that is Copyright 2013-2015, Facebook, Inc.",
+                "  All rights reserved.",
+                "*/"
+              ],
+              "filename": "/_static/5788ef38fefa0df624cb96af56fd1435/sentry/dist/vendor.js",
+              "module": "sentry/dist/vendor",
+              "colno": 213090,
+              "in_app": false,
+              "data": {
+                "sourcemap": "https://s1.sentry-cdn.com/_static/5788ef38fefa0df624cb96af56fd1435/sentry/dist/vendor.js.map"
+              },
+              "context_line": "{snip} row\",\"return\"].forEach(function(e){t[e]=function(t){return this._invoke(e,t)}})}function R(t){var e;this._invoke=function(n,o){function p(){ {snip}",
+              "lineno": 147
+            },
+            {
+              "function": "h/p._invoke</<",
+              "abs_path": "https://s1.sentry-cdn.com/_static/5788ef38fefa0df624cb96af56fd1435/sentry/dist/vendor.js",
+              "pre_context": [
+                "/**",
+                " * @preserve jed.js https://github.com/SlexAxton/Jed",
+                " */",
+                "!function(n,o){var r=Array.prototype,p=Object.prototype,i=r.slice,c=p.hasOwnProperty,b=r.forEach,M={},a={forEach:function(t,e,n){var o,r,p;i {snip}",
+                "/*! JSON v3.3.2 | http://bestiejs.github.io/json3 | Copyright 2012-2014, Kit Cambridge | http://kit.mit-license.org */"
+              ],
+              "post_context": [
+                "/*!",
+                "  Copyright (c) 2015 Jed Watson.",
+                "  Based on code that is Copyright 2013-2015, Facebook, Inc.",
+                "  All rights reserved.",
+                "*/"
+              ],
+              "filename": "/_static/5788ef38fefa0df624cb96af56fd1435/sentry/dist/vendor.js",
+              "module": "sentry/dist/vendor",
+              "colno": 212704,
+              "in_app": false,
+              "data": {
+                "sourcemap": "https://s1.sentry-cdn.com/_static/5788ef38fefa0df624cb96af56fd1435/sentry/dist/vendor.js.map"
+              },
+              "context_line": "{snip} lse\"return\"===n.method&&n.abrupt(\"return\",n.arg);o=s;var b=W(t,e,n);if(\"normal\"===b.type){if(o=n.done?O:z,b.arg===l)continue;return{value:b. {snip}",
+              "lineno": 147
+            },
+            {
+              "function": "W",
+              "abs_path": "https://s1.sentry-cdn.com/_static/5788ef38fefa0df624cb96af56fd1435/sentry/dist/vendor.js",
+              "pre_context": [
+                "/**",
+                " * @preserve jed.js https://github.com/SlexAxton/Jed",
+                " */",
+                "!function(n,o){var r=Array.prototype,p=Object.prototype,i=r.slice,c=p.hasOwnProperty,b=r.forEach,M={},a={forEach:function(t,e,n){var o,r,p;i {snip}",
+                "/*! JSON v3.3.2 | http://bestiejs.github.io/json3 | Copyright 2012-2014, Kit Cambridge | http://kit.mit-license.org */"
+              ],
+              "post_context": [
+                "/*!",
+                "  Copyright (c) 2015 Jed Watson.",
+                "  Based on code that is Copyright 2013-2015, Facebook, Inc.",
+                "  All rights reserved.",
+                "*/"
+              ],
+              "filename": "/_static/5788ef38fefa0df624cb96af56fd1435/sentry/dist/vendor.js",
+              "module": "sentry/dist/vendor",
+              "colno": 212914,
+              "in_app": false,
+              "data": {
+                "sourcemap": "https://s1.sentry-cdn.com/_static/5788ef38fefa0df624cb96af56fd1435/sentry/dist/vendor.js.map"
+              },
+              "context_line": "{snip} }}(t,n,i),p}function W(t,e,n){try{return{type:\"normal\",arg:t.call(e,n)}}catch(t){return{type:\"throw\",arg:t}}}function v(){}function y(){}fun {snip}",
+              "lineno": 147
+            },
+            {
+              "function": "e/<",
+              "abs_path": "https://s1.sentry-cdn.com/_static/5788ef38fefa0df624cb96af56fd1435/sentry/dist/app.js",
+              "post_context": [
+                "//# sourceMappingURL=app.js.map"
+              ],
+              "filename": "/_static/5788ef38fefa0df624cb96af56fd1435/sentry/dist/app.js",
+              "module": "sentry/dist/app",
+              "colno": 35941,
+              "in_app": false,
+              "data": {
+                "sourcemap": "https://s1.sentry-cdn.com/_static/5788ef38fefa0df624cb96af56fd1435/sentry/dist/app.js.map"
+              },
+              "context_line": "{snip} r(;;)switch(e.prev=e.next){case 0:return e.prev=0,e.next=3,t();case 3:return r=e.sent,e.abrupt(\"return\",r.default||r);case 7:if(e.prev=7,e.t {snip}",
+              "lineno": 1
+            },
+            {
+              "function": "componentPromise",
+              "abs_path": "https://s1.sentry-cdn.com/_static/5788ef38fefa0df624cb96af56fd1435/sentry/dist/app.js",
+              "post_context": [
+                "//# sourceMappingURL=app.js.map"
+              ],
+              "filename": "/_static/5788ef38fefa0df624cb96af56fd1435/sentry/dist/app.js",
+              "module": "sentry/dist/app",
+              "colno": 1170018,
+              "in_app": false,
+              "data": {
+                "sourcemap": "https://s1.sentry-cdn.com/_static/5788ef38fefa0df624cb96af56fd1435/sentry/dist/app.js.map"
+              },
+              "context_line": "{snip} orgId/issues/:groupId/\",componentPromise:function(){return n.e(75).then(n.bind(null,2497))},component:Object(cs.default)(Zt.a)},b.a.createEl {snip}",
+              "lineno": 1
+            },
+            {
+              "function": "o.e",
+              "abs_path": "https://s1.sentry-cdn.com/_static/5788ef38fefa0df624cb96af56fd1435/sentry/dist/app.js",
+              "post_context": [
+                "//# sourceMappingURL=app.js.map"
+              ],
+              "filename": "/_static/5788ef38fefa0df624cb96af56fd1435/sentry/dist/app.js",
+              "module": "sentry/dist/app",
+              "colno": 4919,
+              "in_app": false,
+              "data": {
+                "sourcemap": "https://s1.sentry-cdn.com/_static/5788ef38fefa0df624cb96af56fd1435/sentry/dist/app.js.map"
+              },
+              "context_line": "{snip}  \"+i+\")\");o.type=a,o.request=i,n[1](o)}r[e]=void 0}};var c=setTimeout(function(){i({type:\"timeout\",target:s})},12e4);s.onerror=s.onload=i,do {snip}",
+              "lineno": 1
+            },
+            {
+              "function": "Pt</t.prototype.wrapTimeFunction/<",
+              "abs_path": "https://s1.sentry-cdn.com/_static/5788ef38fefa0df624cb96af56fd1435/sentry/dist/vendor.js",
+              "pre_context": [
+                " * Jul 11,2018 - #f03357c",
+                " *",
+                " * https://github.com/csnover/TraceKit",
+                " * @license MIT",
+                " * @namespace TraceKit"
+              ],
+              "post_context": [
+                "/*!",
+                "  Copyright (c) 2015 Jed Watson.",
+                "  Licensed under the MIT License (MIT), see",
+                "  http://jedwatson.github.io/classnames",
+                "*/"
+              ],
+              "filename": "/_static/5788ef38fefa0df624cb96af56fd1435/sentry/dist/vendor.js",
+              "module": "sentry/dist/vendor",
+              "colno": 19356,
+              "in_app": false,
+              "data": {
+                "sourcemap": "https://s1.sentry-cdn.com/_static/5788ef38fefa0df624cb96af56fd1435/sentry/dist/vendor.js.map"
+              },
+              "context_line": "{snip} ism:{data:{function:Dt(t)},handled:!0,type:\"instrument\"}}),t.apply(this,e)}},t.prototype.wrapRAF=function(t){return function(e){return t(Et( {snip}",
+              "lineno": 14
+            }
+          ]
+        },
+        "type": "NS_ERROR_NOT_INITIALIZED",
+        "value": ""
+      }
+    ]
+  },
+  "release": "74d1fca81fc9d5336ee0076e80ca86acbf009a74"
+}
diff --git a/tests/sentry/event_hashing/fixtures/minified-javascript.out b/tests/sentry/event_hashing/fixtures/minified-javascript.out
new file mode 100644
index 0000000000..51d5be8366
--- /dev/null
+++ b/tests/sentry/event_hashing/fixtures/minified-javascript.out
@@ -0,0 +1,413 @@
+app:
+  hash: None
+  component:
+    app (exception of system takes precedence)
+      exception (ignored because hash matches system variant)
+        stacktrace*
+          frame* (frame considered in-app because no frame is in-app)
+            module*
+              u'sentry/dist/vendor'
+            filename (module takes precedence)
+            context-line (discarded because line too long)
+            function*
+              u'M'
+            lineno (function takes precedence)
+              172
+          frame* (frame considered in-app because no frame is in-app)
+            module*
+              u'sentry/dist/vendor'
+            filename (module takes precedence)
+            context-line (discarded because line too long)
+            function*
+              u'S/<'
+            lineno (function takes precedence)
+              147
+          frame* (frame considered in-app because no frame is in-app)
+            module*
+              u'sentry/dist/vendor'
+            filename (module takes precedence)
+            context-line (discarded because line too long)
+            function*
+              u'i'
+            lineno (function takes precedence)
+              147
+          frame* (frame considered in-app because no frame is in-app)
+            module*
+              u'sentry/dist/vendor'
+            filename (module takes precedence)
+            context-line (discarded because line too long)
+            function*
+              u'b'
+            lineno (function takes precedence)
+              64
+          frame* (frame considered in-app because no frame is in-app)
+            module*
+              u'sentry/dist/vendor'
+            filename (module takes precedence)
+            context-line (discarded because line too long)
+            function*
+              u'n'
+            lineno (function takes precedence)
+              64
+          frame* (frame considered in-app because no frame is in-app)
+            module*
+              u'sentry/dist/vendor'
+            filename (module takes precedence)
+            context-line (discarded because line too long)
+            function*
+              u'g/</t[e]'
+            lineno (function takes precedence)
+              147
+          frame* (frame considered in-app because no frame is in-app)
+            module*
+              u'sentry/dist/vendor'
+            filename (module takes precedence)
+            context-line (discarded because line too long)
+            function*
+              u'h/p._invoke</<'
+            lineno (function takes precedence)
+              147
+          frame* (frame considered in-app because no frame is in-app)
+            module*
+              u'sentry/dist/vendor'
+            filename (module takes precedence)
+            context-line (discarded because line too long)
+            function*
+              u'W'
+            lineno (function takes precedence)
+              147
+          frame* (frame considered in-app because no frame is in-app)
+            module*
+              u'sentry/dist/app'
+            filename (module takes precedence)
+            context-line (discarded because line too long)
+            function*
+              u'e/<'
+            lineno (function takes precedence)
+              1
+          frame* (frame considered in-app because no frame is in-app)
+            module*
+              u'sentry/dist/app'
+            filename (module takes precedence)
+            context-line (discarded because line too long)
+            function*
+              u'e/</a</<'
+            lineno (function takes precedence)
+              1
+          frame* (frame considered in-app because no frame is in-app)
+            module*
+              u'sentry/dist/vendor'
+            filename (module takes precedence)
+            context-line (discarded because line too long)
+            function*
+              u't.exports/<'
+            lineno (function takes precedence)
+              64
+          frame* (frame considered in-app because no frame is in-app)
+            module*
+              u'sentry/dist/vendor'
+            filename (module takes precedence)
+            context-line (discarded because line too long)
+            function*
+              u'L'
+            lineno (function takes precedence)
+              147
+          frame* (frame considered in-app because no frame is in-app)
+            module*
+              u'sentry/dist/vendor'
+            filename (module takes precedence)
+            context-line (discarded because line too long)
+            function*
+              u't.exports/</<'
+            lineno (function takes precedence)
+              64
+          frame* (frame considered in-app because no frame is in-app)
+            module*
+              u'sentry/dist/vendor'
+            filename (module takes precedence)
+            context-line (discarded because line too long)
+            function*
+              u'c'
+            lineno (function takes precedence)
+              64
+          frame* (frame considered in-app because no frame is in-app)
+            module*
+              u'sentry/dist/vendor'
+            filename (module takes precedence)
+            context-line (discarded because line too long)
+            function*
+              u'n'
+            lineno (function takes precedence)
+              64
+          frame* (frame considered in-app because no frame is in-app)
+            module*
+              u'sentry/dist/vendor'
+            filename (module takes precedence)
+            context-line (discarded because line too long)
+            function*
+              u'g/</t[e]'
+            lineno (function takes precedence)
+              147
+          frame* (frame considered in-app because no frame is in-app)
+            module*
+              u'sentry/dist/vendor'
+            filename (module takes precedence)
+            context-line (discarded because line too long)
+            function*
+              u'h/p._invoke</<'
+            lineno (function takes precedence)
+              147
+          frame* (frame considered in-app because no frame is in-app)
+            module*
+              u'sentry/dist/vendor'
+            filename (module takes precedence)
+            context-line (discarded because line too long)
+            function*
+              u'W'
+            lineno (function takes precedence)
+              147
+          frame* (frame considered in-app because no frame is in-app)
+            module*
+              u'sentry/dist/app'
+            filename (module takes precedence)
+            context-line (discarded because line too long)
+            function*
+              u'e/<'
+            lineno (function takes precedence)
+              1
+          frame* (frame considered in-app because no frame is in-app)
+            module*
+              u'sentry/dist/app'
+            filename (module takes precedence)
+            context-line (discarded because line too long)
+            function*
+              u'componentPromise'
+            lineno (function takes precedence)
+              1
+          frame* (frame considered in-app because no frame is in-app)
+            module*
+              u'sentry/dist/app'
+            filename (module takes precedence)
+            context-line (discarded because line too long)
+            function*
+              u'o.e'
+            lineno (function takes precedence)
+              1
+          frame* (frame considered in-app because no frame is in-app)
+            module*
+              u'sentry/dist/vendor'
+            filename (module takes precedence)
+            context-line (discarded because line too long)
+            function*
+              u'Pt</t.prototype.wrapTimeFunction/<'
+            lineno (function takes precedence)
+              14
+        type*
+          u'NS_ERROR_NOT_INITIALIZED'
+--------------------------------------------------------------------------
+system:
+  hash: '074e2ed5d89f602d31be5742ac107fef'
+  component:
+    system*
+      exception*
+        stacktrace*
+          frame*
+            module*
+              u'sentry/dist/vendor'
+            filename (module takes precedence)
+            context-line (discarded because line too long)
+            function*
+              u'M'
+            lineno (function takes precedence)
+              172
+          frame*
+            module*
+              u'sentry/dist/vendor'
+            filename (module takes precedence)
+            context-line (discarded because line too long)
+            function*
+              u'S/<'
+            lineno (function takes precedence)
+              147
+          frame*
+            module*
+              u'sentry/dist/vendor'
+            filename (module takes precedence)
+            context-line (discarded because line too long)
+            function*
+              u'i'
+            lineno (function takes precedence)
+              147
+          frame*
+            module*
+              u'sentry/dist/vendor'
+            filename (module takes precedence)
+            context-line (discarded because line too long)
+            function*
+              u'b'
+            lineno (function takes precedence)
+              64
+          frame*
+            module*
+              u'sentry/dist/vendor'
+            filename (module takes precedence)
+            context-line (discarded because line too long)
+            function*
+              u'n'
+            lineno (function takes precedence)
+              64
+          frame*
+            module*
+              u'sentry/dist/vendor'
+            filename (module takes precedence)
+            context-line (discarded because line too long)
+            function*
+              u'g/</t[e]'
+            lineno (function takes precedence)
+              147
+          frame*
+            module*
+              u'sentry/dist/vendor'
+            filename (module takes precedence)
+            context-line (discarded because line too long)
+            function*
+              u'h/p._invoke</<'
+            lineno (function takes precedence)
+              147
+          frame*
+            module*
+              u'sentry/dist/vendor'
+            filename (module takes precedence)
+            context-line (discarded because line too long)
+            function*
+              u'W'
+            lineno (function takes precedence)
+              147
+          frame*
+            module*
+              u'sentry/dist/app'
+            filename (module takes precedence)
+            context-line (discarded because line too long)
+            function*
+              u'e/<'
+            lineno (function takes precedence)
+              1
+          frame*
+            module*
+              u'sentry/dist/app'
+            filename (module takes precedence)
+            context-line (discarded because line too long)
+            function*
+              u'e/</a</<'
+            lineno (function takes precedence)
+              1
+          frame*
+            module*
+              u'sentry/dist/vendor'
+            filename (module takes precedence)
+            context-line (discarded because line too long)
+            function*
+              u't.exports/<'
+            lineno (function takes precedence)
+              64
+          frame*
+            module*
+              u'sentry/dist/vendor'
+            filename (module takes precedence)
+            context-line (discarded because line too long)
+            function*
+              u'L'
+            lineno (function takes precedence)
+              147
+          frame*
+            module*
+              u'sentry/dist/vendor'
+            filename (module takes precedence)
+            context-line (discarded because line too long)
+            function*
+              u't.exports/</<'
+            lineno (function takes precedence)
+              64
+          frame*
+            module*
+              u'sentry/dist/vendor'
+            filename (module takes precedence)
+            context-line (discarded because line too long)
+            function*
+              u'c'
+            lineno (function takes precedence)
+              64
+          frame*
+            module*
+              u'sentry/dist/vendor'
+            filename (module takes precedence)
+            context-line (discarded because line too long)
+            function*
+              u'n'
+            lineno (function takes precedence)
+              64
+          frame*
+            module*
+              u'sentry/dist/vendor'
+            filename (module takes precedence)
+            context-line (discarded because line too long)
+            function*
+              u'g/</t[e]'
+            lineno (function takes precedence)
+              147
+          frame*
+            module*
+              u'sentry/dist/vendor'
+            filename (module takes precedence)
+            context-line (discarded because line too long)
+            function*
+              u'h/p._invoke</<'
+            lineno (function takes precedence)
+              147
+          frame*
+            module*
+              u'sentry/dist/vendor'
+            filename (module takes precedence)
+            context-line (discarded because line too long)
+            function*
+              u'W'
+            lineno (function takes precedence)
+              147
+          frame*
+            module*
+              u'sentry/dist/app'
+            filename (module takes precedence)
+            context-line (discarded because line too long)
+            function*
+              u'e/<'
+            lineno (function takes precedence)
+              1
+          frame*
+            module*
+              u'sentry/dist/app'
+            filename (module takes precedence)
+            context-line (discarded because line too long)
+            function*
+              u'componentPromise'
+            lineno (function takes precedence)
+              1
+          frame*
+            module*
+              u'sentry/dist/app'
+            filename (module takes precedence)
+            context-line (discarded because line too long)
+            function*
+              u'o.e'
+            lineno (function takes precedence)
+              1
+          frame*
+            module*
+              u'sentry/dist/vendor'
+            filename (module takes precedence)
+            context-line (discarded because line too long)
+            function*
+              u'Pt</t.prototype.wrapTimeFunction/<'
+            lineno (function takes precedence)
+              14
+        type*
+          u'NS_ERROR_NOT_INITIALIZED'
diff --git a/tests/sentry/event_hashing/fixtures/node-exception-weird.json b/tests/sentry/event_hashing/fixtures/node-exception-weird.json
new file mode 100644
index 0000000000..a8cd5bd110
--- /dev/null
+++ b/tests/sentry/event_hashing/fixtures/node-exception-weird.json
@@ -0,0 +1,261 @@
+{
+  "culprit": "NodeBackend.Object.<anonymous>.NodeBackend.eventFromException(backend.ts)",
+  "event_id": "9aaaf238694f4f90a01579872c118680",
+  "platform": "node",
+  "logger": "",
+  "exception": {
+    "values": [
+      {
+        "stacktrace": {
+          "frames": [
+            {
+              "function": "Hub.Object.<anonymous>.Hub.withScope",
+              "abs_path": "/home/travis/build/getsentry/sentry-javascript/packages/hub/dist/hub.js",
+              "pre_context": [
+                "    /**",
+                "     * Captures a message event and sends it to Sentry.",
+                "     *",
+                "     * @param message The message to send to Sentry.",
+                "     * @param level Define the level of the message.",
+                "     * @param hint May contain additional information about the original exception.",
+                "     * @returns The generated eventId."
+              ],
+              "post_context": [
+                "    Hub.prototype.captureMessage = function (message, level, hint) {",
+                "        var eventId = (this._lastEventId = misc_1.uuid4());",
+                "        this.invokeClient('captureMessage', message, level, tslib_1.__assign({}, hint, { event_id: eventId }));",
+                "        return eventId;",
+                "    };",
+                "    /**",
+                "     * Captures a manually created event and sends it to Sentry."
+              ],
+              "filename": "/home/travis/build/getsentry/sentry-javascript/packages/hub/dist/hub.js",
+              "module": "hub",
+              "colno": 7,
+              "in_app": true,
+              "context_line": "     */",
+              "lineno": 171
+            },
+            {
+              "function": "null.<anonymous>",
+              "abs_path": "/home/travis/build/getsentry/sentry-javascript/packages/node/src/integrations/onunhandledrejection.ts",
+              "module": "onunhandledrejection.ts",
+              "filename": "/home/travis/build/getsentry/sentry-javascript/packages/node/src/integrations/onunhandledrejection.ts",
+              "lineno": 808,
+              "colno": 11,
+              "in_app": true
+            },
+            {
+              "function": "Hub.mockConstructor [as captureException]",
+              "abs_path": "/home/travis/build/getsentry/sentry-javascript/node_modules/jest-mock/build/index.js",
+              "pre_context": [
+                "        return fn.apply(this, arguments);",
+                "      };",
+                "",
+                "      break;",
+                "",
+                "    default:",
+                "      mockConstructor = function mockConstructor() {"
+              ],
+              "post_context": [
+                "      };",
+                "",
+                "      break;",
+                "  }",
+                "",
+                "  return mockConstructor;",
+                "}"
+              ],
+              "filename": "/home/travis/build/getsentry/sentry-javascript/node_modules/jest-mock/build/index.js",
+              "module": "jest-mock.build:index",
+              "colno": 19,
+              "in_app": false,
+              "context_line": "        return fn.apply(this, arguments);",
+              "lineno": 150
+            },
+            {
+              "function": "Hub.<anonymous>",
+              "abs_path": "/home/travis/build/getsentry/sentry-javascript/node_modules/jest-mock/build/index.js",
+              "pre_context": [
+                "            } // Otherwise use prototype implementation",
+                "",
+                "            if (returnValue === undefined && f._protoImpl) {",
+                "              return f._protoImpl.apply(this, arguments);",
+                "            }",
+                "",
+                "            return returnValue;"
+              ],
+              "post_context": [
+                "        } catch (error) {",
+                "          // Store the thrown error so we can record it, then re-throw it.",
+                "          thrownError = error;",
+                "          callDidThrowError = true;",
+                "          throw error;",
+                "        } finally {",
+                "          // Record the result of the function."
+              ],
+              "filename": "/home/travis/build/getsentry/sentry-javascript/node_modules/jest-mock/build/index.js",
+              "module": "jest-mock.build:index",
+              "colno": 13,
+              "in_app": false,
+              "context_line": "          })();",
+              "lineno": 446
+            },
+            {
+              "function": "finalReturnValue",
+              "abs_path": "/home/travis/build/getsentry/sentry-javascript/node_modules/jest-mock/build/index.js",
+              "pre_context": [
+                "              specificMockImpl = mockConfig.specificMockImpls.shift();",
+                "",
+                "              if (specificMockImpl === undefined) {",
+                "                specificMockImpl = mockConfig.mockImpl;",
+                "              }",
+                "",
+                "              if (specificMockImpl) {"
+              ],
+              "post_context": [
+                "              }",
+                "            } // Otherwise use prototype implementation",
+                "",
+                "            if (returnValue === undefined && f._protoImpl) {",
+                "              return f._protoImpl.apply(this, arguments);",
+                "            }",
+                ""
+              ],
+              "filename": "/home/travis/build/getsentry/sentry-javascript/node_modules/jest-mock/build/index.js",
+              "module": "jest-mock.build:index",
+              "colno": 41,
+              "in_app": false,
+              "context_line": "                return specificMockImpl.apply(this, arguments);",
+              "lineno": 437
+            },
+            {
+              "function": "Hub.<anonymous>",
+              "abs_path": "/home/travis/build/getsentry/sentry-javascript/node_modules/jest-mock/build/index.js",
+              "pre_context": [
+                "          type: 'function'",
+                "        },",
+                "        () => {",
+                "          object[methodName] = original;",
+                "        }",
+                "      );",
+                "      object[methodName].mockImplementation(function() {"
+              ],
+              "post_context": [
+                "      });",
+                "    }",
+                "",
+                "    return object[methodName];",
+                "  }",
+                "",
+                "  _spyOnProperty(obj, propertyName, accessType = 'get') {"
+              ],
+              "filename": "/home/travis/build/getsentry/sentry-javascript/node_modules/jest-mock/build/index.js",
+              "module": "jest-mock.build:index",
+              "colno": 25,
+              "in_app": false,
+              "context_line": "        return original.apply(this, arguments);",
+              "lineno": 806
+            },
+            {
+              "function": "Hub.Object.<anonymous>.Hub.captureException",
+              "abs_path": "/home/travis/build/getsentry/sentry-javascript/packages/hub/src/hub.ts",
+              "pre_context": [
+                "",
+                "    if (!top.scope || !top.client) {",
+                "      return;",
+                "    }",
+                "",
+                "    const { beforeBreadcrumb, maxBreadcrumbs = DEFAULT_BREADCRUMBS } = top.client.getOptions();",
+                ""
+              ],
+              "post_context": [
+                "      return;",
+                "    }",
+                "",
+                "    const timestamp = new Date().getTime() / 1000;",
+                "    const mergedBreadcrumb = { timestamp, ...breadcrumb };",
+                "    const finalBreadcrumb = beforeBreadcrumb",
+                "      ? (consoleSandbox(() => beforeBreadcrumb(mergedBreadcrumb, hint)) as Breadcrumb | null)"
+              ],
+              "filename": "/home/travis/build/getsentry/sentry-javascript/packages/hub/src/hub.ts",
+              "module": "hub.ts",
+              "colno": 5,
+              "in_app": true,
+              "context_line": "    if (maxBreadcrumbs <= 0) {",
+              "lineno": 255
+            },
+            {
+              "function": "Hub.Object.<anonymous>.Hub.invokeClient",
+              "abs_path": "/home/travis/build/getsentry/sentry-javascript/packages/hub/dist/hub.js",
+              "pre_context": [
+                "     * Create a new scope to store context information.",
+                "     *",
+                "     * The scope will be layered on top of the current one. It is isolated, i.e. all",
+                "     * breadcrumbs and context information added to this scope will be removed once",
+                "     * the scope ends. Be sure to always remove this scope with {@link this.popScope}",
+                "     * when the operation finishes or throws.",
+                "     *"
+              ],
+              "post_context": [
+                "     */",
+                "    Hub.prototype.pushScope = function () {",
+                "        // We want to clone the content of prev scope",
+                "        var stack = this.getStack();",
+                "        var parentScope = stack.length > 0 ? stack[stack.length - 1].scope : undefined;",
+                "        var scope = scope_1.Scope.clone(parentScope);",
+                "        this.getStack().push({"
+              ],
+              "filename": "/home/travis/build/getsentry/sentry-javascript/packages/hub/dist/hub.js",
+              "module": "hub",
+              "colno": 33,
+              "in_app": true,
+              "context_line": "     * @returns Scope, the new cloned scope",
+              "lineno": 91
+            },
+            {
+              "function": "NodeClient.Object.<anonymous>.BaseClient.captureException",
+              "abs_path": "/home/travis/build/getsentry/sentry-javascript/packages/core/src/baseclient.ts",
+              "pre_context": [
+                "  public captureMessage(message: string, level?: Severity, hint?: EventHint, scope?: Scope): string | undefined {",
+                "    let eventId: string | undefined = hint && hint.event_id;",
+                "",
+                "    const promisedEvent = isPrimitive(message)",
+                "      ? this.getBackend().eventFromMessage(`${message}`, level, hint)",
+                "      : this.getBackend().eventFromException(message, hint);",
+                ""
+              ],
+              "post_context": [
+                "      .then(event => this.processEvent(event, hint, scope))",
+                "      .then(finalEvent => {",
+                "        eventId = finalEvent.event_id;",
+                "      })",
+                "      .catch(reason => {",
+                "        logger.log(reason);",
+                "      });"
+              ],
+              "filename": "/home/travis/build/getsentry/sentry-javascript/packages/core/src/baseclient.ts",
+              "module": "baseclient.ts",
+              "colno": 18,
+              "in_app": true,
+              "context_line": "    promisedEvent",
+              "lineno": 110
+            },
+            {
+              "function": "NodeBackend.Object.<anonymous>.NodeBackend.eventFromException",
+              "abs_path": "/home/travis/build/getsentry/sentry-javascript/packages/node/src/backend.ts",
+              "module": "backend.ts",
+              "filename": "/home/travis/build/getsentry/sentry-javascript/packages/node/src/backend.ts",
+              "lineno": 2093,
+              "colno": 37,
+              "in_app": true
+            }
+          ]
+        },
+        "type": "Error",
+        "value": "bla"
+      }
+    ]
+  },
+  "release": null
+}
diff --git a/tests/sentry/event_hashing/fixtures/node-exception-weird.out b/tests/sentry/event_hashing/fixtures/node-exception-weird.out
new file mode 100644
index 0000000000..25cd4e284b
--- /dev/null
+++ b/tests/sentry/event_hashing/fixtures/node-exception-weird.out
@@ -0,0 +1,201 @@
+app:
+  hash: 'bc6bc0f8bfa8a2fe5f0e4034384bfec1'
+  component:
+    app*
+      exception*
+        stacktrace*
+          frame*
+            module*
+              u'hub'
+            filename (module takes precedence)
+              u'/home/travis/build/getsentry/sentry-javascript/packages/hub/dist/hub.js'
+            context-line*
+              u'     */'
+            function (line number is used only if module or filename are available)
+              171
+          frame*
+            module*
+              u'onunhandledrejection.ts'
+            filename (module takes precedence)
+              u'/home/travis/build/getsentry/sentry-javascript/packages/node/src/integrations/onunhandledrejection.ts'
+            function*
+              u'null.<anonymous>'
+            lineno (function takes precedence)
+              808
+          frame (non app frame)
+            module*
+              u'jest-mock.build:index'
+            filename (module takes precedence)
+              u'/home/travis/build/getsentry/sentry-javascript/node_modules/jest-mock/build/index.js'
+            context-line*
+              u'        return fn.apply(this, arguments);'
+            function (line number is used only if module or filename are available)
+              150
+          frame (non app frame)
+            module*
+              u'jest-mock.build:index'
+            filename (module takes precedence)
+              u'/home/travis/build/getsentry/sentry-javascript/node_modules/jest-mock/build/index.js'
+            context-line*
+              u'          })();'
+            function (line number is used only if module or filename are available)
+              446
+          frame (non app frame)
+            module*
+              u'jest-mock.build:index'
+            filename (module takes precedence)
+              u'/home/travis/build/getsentry/sentry-javascript/node_modules/jest-mock/build/index.js'
+            context-line*
+              u'                return specificMockImpl.apply(this, arguments);'
+            function (line number is used only if module or filename are available)
+              437
+          frame (non app frame)
+            module*
+              u'jest-mock.build:index'
+            filename (module takes precedence)
+              u'/home/travis/build/getsentry/sentry-javascript/node_modules/jest-mock/build/index.js'
+            context-line*
+              u'        return original.apply(this, arguments);'
+            function (line number is used only if module or filename are available)
+              806
+          frame*
+            module*
+              u'hub.ts'
+            filename (module takes precedence)
+              u'/home/travis/build/getsentry/sentry-javascript/packages/hub/src/hub.ts'
+            context-line*
+              u'    if (maxBreadcrumbs <= 0) {'
+            function (line number is used only if module or filename are available)
+              255
+          frame*
+            module*
+              u'hub'
+            filename (module takes precedence)
+              u'/home/travis/build/getsentry/sentry-javascript/packages/hub/dist/hub.js'
+            context-line*
+              u'     * @returns Scope, the new cloned scope'
+            function (line number is used only if module or filename are available)
+              91
+          frame*
+            module*
+              u'baseclient.ts'
+            filename (module takes precedence)
+              u'/home/travis/build/getsentry/sentry-javascript/packages/core/src/baseclient.ts'
+            context-line*
+              u'    promisedEvent'
+            function (line number is used only if module or filename are available)
+              110
+          frame*
+            module*
+              u'backend.ts'
+            filename (module takes precedence)
+              u'/home/travis/build/getsentry/sentry-javascript/packages/node/src/backend.ts'
+            function*
+              u'NodeBackend.Object.<anonymous>.NodeBackend.eventFromException'
+            lineno (function takes precedence)
+              2093
+        type*
+          u'Error'
+        value (stacktrace and type take precedence)
+          u'bla'
+--------------------------------------------------------------------------
+system:
+  hash: '6a3275e56067560bf20cb311f724f897'
+  component:
+    system*
+      exception*
+        stacktrace*
+          frame*
+            module*
+              u'hub'
+            filename (module takes precedence)
+              u'/home/travis/build/getsentry/sentry-javascript/packages/hub/dist/hub.js'
+            context-line*
+              u'     */'
+            function (line number is used only if module or filename are available)
+              171
+          frame*
+            module*
+              u'onunhandledrejection.ts'
+            filename (module takes precedence)
+              u'/home/travis/build/getsentry/sentry-javascript/packages/node/src/integrations/onunhandledrejection.ts'
+            function*
+              u'null.<anonymous>'
+            lineno (function takes precedence)
+              808
+          frame*
+            module*
+              u'jest-mock.build:index'
+            filename (module takes precedence)
+              u'/home/travis/build/getsentry/sentry-javascript/node_modules/jest-mock/build/index.js'
+            context-line*
+              u'        return fn.apply(this, arguments);'
+            function (line number is used only if module or filename are available)
+              150
+          frame*
+            module*
+              u'jest-mock.build:index'
+            filename (module takes precedence)
+              u'/home/travis/build/getsentry/sentry-javascript/node_modules/jest-mock/build/index.js'
+            context-line*
+              u'          })();'
+            function (line number is used only if module or filename are available)
+              446
+          frame*
+            module*
+              u'jest-mock.build:index'
+            filename (module takes precedence)
+              u'/home/travis/build/getsentry/sentry-javascript/node_modules/jest-mock/build/index.js'
+            context-line*
+              u'                return specificMockImpl.apply(this, arguments);'
+            function (line number is used only if module or filename are available)
+              437
+          frame*
+            module*
+              u'jest-mock.build:index'
+            filename (module takes precedence)
+              u'/home/travis/build/getsentry/sentry-javascript/node_modules/jest-mock/build/index.js'
+            context-line*
+              u'        return original.apply(this, arguments);'
+            function (line number is used only if module or filename are available)
+              806
+          frame*
+            module*
+              u'hub.ts'
+            filename (module takes precedence)
+              u'/home/travis/build/getsentry/sentry-javascript/packages/hub/src/hub.ts'
+            context-line*
+              u'    if (maxBreadcrumbs <= 0) {'
+            function (line number is used only if module or filename are available)
+              255
+          frame*
+            module*
+              u'hub'
+            filename (module takes precedence)
+              u'/home/travis/build/getsentry/sentry-javascript/packages/hub/dist/hub.js'
+            context-line*
+              u'     * @returns Scope, the new cloned scope'
+            function (line number is used only if module or filename are available)
+              91
+          frame*
+            module*
+              u'baseclient.ts'
+            filename (module takes precedence)
+              u'/home/travis/build/getsentry/sentry-javascript/packages/core/src/baseclient.ts'
+            context-line*
+              u'    promisedEvent'
+            function (line number is used only if module or filename are available)
+              110
+          frame*
+            module*
+              u'backend.ts'
+            filename (module takes precedence)
+              u'/home/travis/build/getsentry/sentry-javascript/packages/node/src/backend.ts'
+            function*
+              u'NodeBackend.Object.<anonymous>.NodeBackend.eventFromException'
+            lineno (function takes precedence)
+              2093
+        type*
+          u'Error'
+        value (stacktrace and type take precedence)
+          u'bla'
diff --git a/tests/sentry/event_hashing/fixtures/python-exception-base.json b/tests/sentry/event_hashing/fixtures/python-exception-base.json
new file mode 100644
index 0000000000..4e804f4a9d
--- /dev/null
+++ b/tests/sentry/event_hashing/fixtures/python-exception-base.json
@@ -0,0 +1,29 @@
+{
+  "platform": "python",
+  "exception": [
+    {
+      "type": "ValueError",
+      "value": "hello world",
+      "module": "foo.bar",
+      "stacktrace": {
+        "frames": [{
+          "filename": "foo/baz.py",
+          "lineno": 1,
+          "in_app": true
+        }]
+      }
+    },
+    {
+      "type": "ValueError",
+      "value": "hello world",
+      "module": "foo.bar",
+      "stacktrace": {
+        "frames": [{
+          "filename": "foo/baz.py",
+          "lineno": 1,
+          "in_app": false
+        }]
+      }
+    }
+  ]
+}
diff --git a/tests/sentry/event_hashing/fixtures/python-exception-base.out b/tests/sentry/event_hashing/fixtures/python-exception-base.out
new file mode 100644
index 0000000000..7faf4b756e
--- /dev/null
+++ b/tests/sentry/event_hashing/fixtures/python-exception-base.out
@@ -0,0 +1,55 @@
+app:
+  hash: None
+  component:
+    app (exception of system takes precedence)
+      chained-exception (ignored because hash matches system variant)
+        exception*
+          stacktrace*
+            frame*
+              filename*
+                u'foo/baz.py'
+              lineno*
+                1
+          type*
+            u'ValueError'
+          value (stacktrace and type take precedence)
+            u'hello world'
+        exception*
+          stacktrace*
+            frame* (frame considered in-app because no frame is in-app)
+              filename*
+                u'foo/baz.py'
+              lineno*
+                1
+          type*
+            u'ValueError'
+          value (stacktrace and type take precedence)
+            u'hello world'
+--------------------------------------------------------------------------
+system:
+  hash: '9aef9026a457d312531c07644b271314'
+  component:
+    system*
+      chained-exception*
+        exception*
+          stacktrace*
+            frame*
+              filename*
+                u'foo/baz.py'
+              lineno*
+                1
+          type*
+            u'ValueError'
+          value (stacktrace and type take precedence)
+            u'hello world'
+        exception*
+          stacktrace*
+            frame*
+              filename*
+                u'foo/baz.py'
+              lineno*
+                1
+          type*
+            u'ValueError'
+          value (stacktrace and type take precedence)
+            u'hello world'
diff --git a/tests/sentry/event_hashing/fixtures/python-http-error.json b/tests/sentry/event_hashing/fixtures/python-http-error.json
new file mode 100644
index 0000000000..ba30c611a3
--- /dev/null
+++ b/tests/sentry/event_hashing/fixtures/python-http-error.json
@@ -0,0 +1,101 @@
+{
+  "culprit": "sentry.tasks.post_process.post_process_group",
+  "event_id": "5ec2c82c95d14a638d79a68099c14a32",
+  "environment": "prod",
+  "platform": "python",
+  "logger": "sentry.safe.function",
+  "exception": {
+    "values": [
+      {
+        "stacktrace": {
+          "frames": [
+            {
+              "function": "safe_execute",
+              "abs_path": "/usr/src/getsentry/src/sentry/src/sentry/utils/safe.py",
+              "pre_context": [
+                "    # side if we execute a query)",
+                "    _with_transaction = kwargs.pop('_with_transaction', True)",
+                "    try:",
+                "        if _with_transaction:",
+                "            with transaction.atomic():"
+              ],
+              "module": "sentry.utils.safe",
+              "filename": "sentry/utils/safe.py",
+              "post_context": [
+                "        else:",
+                "            result = func(*args, **kwargs)",
+                "    except Exception as e:",
+                "        if hasattr(func, 'im_class'):",
+                "            cls = func.im_class"
+              ],
+              "in_app": true,
+              "context_line": "                result = func(*args, **kwargs)",
+              "lineno": 29
+            },
+            {
+              "function": "send_notification",
+              "abs_path": "/usr/src/getsentry/src/sentry/src/sentry/integrations/slack/notify_action.py",
+              "pre_context": [
+                "                'attachments': json.dumps([attachment]),",
+                "            }",
+                "",
+                "            session = http.build_session()",
+                "            resp = session.post('https://slack.com/api/chat.postMessage', data=payload)"
+              ],
+              "module": "sentry.integrations.slack.notify_action",
+              "filename": "sentry/integrations/slack/notify_action.py",
+              "post_context": [
+                "            resp = resp.json()",
+                "            if not resp.get('ok'):",
+                "                self.logger.info('rule.fail.slack_post', extra={'error': resp.get('error')})",
+                "",
+                "        key = u'slack:{}:{}'.format(integration_id, channel)"
+              ],
+              "in_app": true,
+              "context_line": "            resp.raise_for_status()",
+              "lineno": 119
+            },
+            {
+              "function": "raise_for_status",
+              "abs_path": "/usr/local/lib/python2.7/site-packages/requests/models.py",
+              "pre_context": [
+                "",
+                "        elif 500 <= self.status_code < 600:",
+                "            http_error_msg = u'%s Server Error: %s for url: %s' % (self.status_code, reason, self.url)",
+                "",
+                "        if http_error_msg:"
+              ],
+              "module": "requests.models",
+              "filename": "requests/models.py",
+              "post_context": [
+                "",
+                "    def close(self):",
+                "        \"\"\"Releases the connection back to the pool. Once this method has been",
+                "        called the underlying ``raw`` object must not be accessed again.",
+                ""
+              ],
+              "in_app": false,
+              "context_line": "            raise HTTPError(http_error_msg, response=self)",
+              "lineno": 940
+            }
+          ]
+        },
+        "type": "HTTPError",
+        "value": "429 Client Error: Too Many Requests for url: https://slack.com/api/chat.postMessage",
+        "module": "requests.exceptions",
+        "mechanism": {
+          "type": "logging",
+          "handled": true
+        }
+      }
+    ]
+  },
+  "logentry": {
+    "message": "%s.process_error",
+    "params": [
+      "send_notification"
+    ],
+    "formatted": "send_notification.process_error"
+  },
+  "release": "d0d3f1ea630178c8f2836c2d2382dd534e9b47ac"
+}
diff --git a/tests/sentry/event_hashing/fixtures/python-http-error.out b/tests/sentry/event_hashing/fixtures/python-http-error.out
new file mode 100644
index 0000000000..8dc7f6cf3e
--- /dev/null
+++ b/tests/sentry/event_hashing/fixtures/python-http-error.out
@@ -0,0 +1,82 @@
+app:
+  hash: '55b71821bccfe62d0df089e2f406c651'
+  component:
+    app*
+      exception*
+        stacktrace*
+          frame*
+            module*
+              u'sentry.utils.safe'
+            filename (module takes precedence)
+              u'sentry/utils/safe.py'
+            context-line*
+              u'                result = func(*args, **kwargs)'
+            function (line number is used only if module or filename are available)
+              29
+          frame*
+            module*
+              u'sentry.integrations.slack.notify_action'
+            filename (module takes precedence)
+              u'sentry/integrations/slack/notify_action.py'
+            context-line*
+              u'            resp.raise_for_status()'
+            function (line number is used only if module or filename are available)
+              119
+          frame (non app frame)
+            module*
+              u'requests.models'
+            filename (module takes precedence)
+              u'requests/models.py'
+            context-line*
+              u'            raise HTTPError(http_error_msg, response=self)'
+            function (line number is used only if module or filename are available)
+              940
+        type*
+          u'HTTPError'
+        value (stacktrace and type take precedence)
+          u'429 Client Error: Too Many Requests for url: https://slack.com/api/chat.postMessage'
+--------------------------------------------------------------------------
+default:
+  hash: None
+  component:
+    default (exception of app takes precedence)
+      message (exception of app takes precedence)
+        u'%s.process_error'
+--------------------------------------------------------------------------
+system:
+  hash: 'a140a9ee6bbfb7ca9c21234dc287f2a6'
+  component:
+    system*
+      exception*
+        stacktrace*
+          frame*
+            module*
+              u'sentry.utils.safe'
+            filename (module takes precedence)
+              u'sentry/utils/safe.py'
+            context-line*
+              u'                result = func(*args, **kwargs)'
+            function (line number is used only if module or filename are available)
+              29
+          frame*
+            module*
+              u'sentry.integrations.slack.notify_action'
+            filename (module takes precedence)
+              u'sentry/integrations/slack/notify_action.py'
+            context-line*
+              u'            resp.raise_for_status()'
+            function (line number is used only if module or filename are available)
+              119
+          frame*
+            module*
+              u'requests.models'
+            filename (module takes precedence)
+              u'requests/models.py'
+            context-line*
+              u'            raise HTTPError(http_error_msg, response=self)'
+            function (line number is used only if module or filename are available)
+              940
+        type*
+          u'HTTPError'
+        value (stacktrace and type take precedence)
+          u'429 Client Error: Too Many Requests for url: https://slack.com/api/chat.postMessage'
diff --git a/tests/sentry/event_hashing/fixtures/react-native.json b/tests/sentry/event_hashing/fixtures/react-native.json
new file mode 100644
index 0000000000..ec65042d36
--- /dev/null
+++ b/tests/sentry/event_hashing/fixtures/react-native.json
@@ -0,0 +1,1132 @@
+{
+  "culprit": "Button(App)",
+  "event_id": "353534518fca4c449858a352b0407a5d",
+  "environment": "production",
+  "platform": "java",
+  "logger": "javascript",
+  "fingerprint": [
+    "{{ default }}"
+  ],
+  "exception": {
+    "values": [
+      {
+        "stacktrace": {
+          "frames": [
+            {
+              "function": "value",
+              "abs_path": "app:///node_modules/react-native/Libraries/BatchedBridge/MessageQueue.js",
+              "pre_context": [
+                "  callFunctionReturnFlushedQueue(module: string, method: string, args: any[]) {",
+                "    this.__guard(() => {",
+                "      this.__callFunction(module, method, args);",
+                "    });",
+                ""
+              ],
+              "post_context": [
+                "  }",
+                "",
+                "  callFunctionReturnResultAndFlushedQueue(",
+                "    module: string,",
+                "    method: string,"
+              ],
+              "filename": "node_modules/react-native/Libraries/BatchedBridge/MessageQueue.js",
+              "platform": "javascript",
+              "module": "react-native/Libraries/BatchedBridge/MessageQueue",
+              "colno": 17,
+              "in_app": false,
+              "data": {
+                "sourcemap": "app:///index.android.bundle.map"
+              },
+              "context_line": "    return this.flushedQueue();",
+              "lineno": 119
+            },
+            {
+              "function": "flushedQueue",
+              "abs_path": "app:///node_modules/react-native/Libraries/BatchedBridge/MessageQueue.js",
+              "pre_context": [
+                "    try {",
+                "      fn();",
+                "    } catch (error) {",
+                "      ErrorUtils.reportFatalError(error);",
+                "    } finally {"
+              ],
+              "post_context": [
+                "    }",
+                "  }",
+                "",
+                "  __callImmediates() {",
+                "    Systrace.beginEvent('JSTimers.callImmediates()');"
+              ],
+              "filename": "node_modules/react-native/Libraries/BatchedBridge/MessageQueue.js",
+              "platform": "javascript",
+              "module": "react-native/Libraries/BatchedBridge/MessageQueue",
+              "colno": 12,
+              "in_app": false,
+              "data": {
+                "sourcemap": "app:///index.android.bundle.map"
+              },
+              "context_line": "      this._inCall--;",
+              "lineno": 318
+            },
+            {
+              "function": "_inCall",
+              "abs_path": "app:///node_modules/react-native/Libraries/BatchedBridge/MessageQueue.js",
+              "pre_context": [
+                "  callFunctionReturnFlushedQueue(module: string, method: string, args: any[]) {",
+                "    this.__guard(() => {",
+                "      this.__callFunction(module, method, args);",
+                "    });",
+                ""
+              ],
+              "post_context": [
+                "  }",
+                "",
+                "  callFunctionReturnResultAndFlushedQueue(",
+                "    module: string,",
+                "    method: string,"
+              ],
+              "filename": "node_modules/react-native/Libraries/BatchedBridge/MessageQueue.js",
+              "platform": "javascript",
+              "module": "react-native/Libraries/BatchedBridge/MessageQueue",
+              "colno": 17,
+              "in_app": false,
+              "data": {
+                "sourcemap": "app:///index.android.bundle.map"
+              },
+              "context_line": "    return this.flushedQueue();",
+              "lineno": 119
+            },
+            {
+              "function": "flushedQueue",
+              "abs_path": "app:///node_modules/react-native/Libraries/BatchedBridge/MessageQueue.js",
+              "pre_context": [
+                "    Systrace.endEvent();",
+                "    return result;",
+                "  }",
+                "",
+                "  __invokeCallback(cbID: number, args: any[]) {"
+              ],
+              "post_context": [
+                "    this._eventLoopStartTime = this._lastFlush;",
+                "",
+                "    // The rightmost bit of cbID indicates fail (0) or success (1), the other bits are the callID shifted left.",
+                "    // eslint-disable-next-line no-bitwise",
+                "    const callID = cbID >>> 1;"
+              ],
+              "filename": "node_modules/react-native/Libraries/BatchedBridge/MessageQueue.js",
+              "platform": "javascript",
+              "module": "react-native/Libraries/BatchedBridge/MessageQueue",
+              "colno": 10,
+              "in_app": false,
+              "data": {
+                "sourcemap": "app:///index.android.bundle.map"
+              },
+              "context_line": "    this._lastFlush = new Date().getTime();",
+              "lineno": 357
+            },
+            {
+              "function": "_lastFlush",
+              "abs_path": "app:///node_modules/react-native/Libraries/Renderer/ReactNativeRenderer-prod.js",
+              "pre_context": [
+                "      var target = i.target;",
+                "      null === target ||",
+                "        void 0 === target ||",
+                "        target < ReactNativeTagHandles.tagsStartAt ||",
+                "        (index = target);"
+              ],
+              "post_context": [
+                "    }",
+                "  }",
+                "});",
+                "RCTEventEmitter.register(ReactNativeEventEmitter);",
+                "var hasSymbol = \"function\" === typeof Symbol && Symbol[\"for\"],"
+              ],
+              "filename": "node_modules/react-native/Libraries/Renderer/ReactNativeRenderer-prod.js",
+              "platform": "javascript",
+              "module": "react-native/Libraries/Renderer/ReactNativeRenderer-prod",
+              "colno": 7,
+              "in_app": false,
+              "data": {
+                "sourcemap": "app:///index.android.bundle.map"
+              },
+              "context_line": "      _receiveRootNodeIDEvent(index, eventTopLevelType, i);",
+              "lineno": 1160
+            },
+            {
+              "function": "_receiveRootNodeIDEvent",
+              "abs_path": "app:///node_modules/react-native/Libraries/Renderer/ReactNativeRenderer-prod.js",
+              "pre_context": [
+                "  },",
+                "  EMPTY_NATIVE_EVENT = {};",
+                "function _receiveRootNodeIDEvent(rootNodeID, topLevelType, nativeEventParam) {",
+                "  var nativeEvent = nativeEventParam || EMPTY_NATIVE_EVENT,",
+                "    inst = getInstanceFromTag(rootNodeID);"
+              ],
+              "post_context": [
+                "    var events = nativeEvent.target;",
+                "    for (var events$jscomp$0 = null, i = 0; i < plugins.length; i++) {",
+                "      var possiblePlugin = plugins[i];",
+                "      possiblePlugin &&",
+                "        (possiblePlugin = possiblePlugin.extractEvents("
+              ],
+              "filename": "node_modules/react-native/Libraries/Renderer/ReactNativeRenderer-prod.js",
+              "platform": "javascript",
+              "module": "react-native/Libraries/Renderer/ReactNativeRenderer-prod",
+              "colno": 3,
+              "in_app": false,
+              "data": {
+                "sourcemap": "app:///index.android.bundle.map"
+              },
+              "context_line": "  batchedUpdates(function() {",
+              "lineno": 1095
+            },
+            {
+              "function": "batchedUpdates",
+              "abs_path": "app:///node_modules/react-native/Libraries/Renderer/ReactNativeRenderer-prod.js",
+              "pre_context": [
+                "var isBatching = !1;",
+                "function batchedUpdates(fn, bookkeeping) {",
+                "  if (isBatching) return fn(bookkeeping);",
+                "  isBatching = !0;",
+                "  try {"
+              ],
+              "post_context": [
+                "  } finally {",
+                "    if (((isBatching = !1), null !== restoreTarget || null !== restoreQueue))",
+                "      if (",
+                "        (_flushInteractiveUpdates(),",
+                "        restoreTarget &&"
+              ],
+              "filename": "node_modules/react-native/Libraries/Renderer/ReactNativeRenderer-prod.js",
+              "platform": "javascript",
+              "module": "react-native/Libraries/Renderer/ReactNativeRenderer-prod",
+              "colno": 12,
+              "in_app": false,
+              "data": {
+                "sourcemap": "app:///index.android.bundle.map"
+              },
+              "context_line": "    return _batchedUpdates(fn, bookkeeping);",
+              "lineno": 1054
+            },
+            {
+              "function": "_batchedUpdates",
+              "abs_path": "app:///node_modules/react-native/Libraries/Renderer/ReactNativeRenderer-prod.js",
+              "pre_context": [
+                "    },",
+                "    batchedUpdates: function(fn, a) {",
+                "      var previousIsBatchingUpdates = isBatchingUpdates;",
+                "      isBatchingUpdates = !0;",
+                "      try {"
+              ],
+              "post_context": [
+                "      } finally {",
+                "        (isBatchingUpdates = previousIsBatchingUpdates) ||",
+                "          isRendering ||",
+                "          performSyncWork();",
+                "      }"
+              ],
+              "filename": "node_modules/react-native/Libraries/Renderer/ReactNativeRenderer-prod.js",
+              "platform": "javascript",
+              "module": "react-native/Libraries/Renderer/ReactNativeRenderer-prod",
+              "colno": 16,
+              "in_app": false,
+              "data": {
+                "sourcemap": "app:///index.android.bundle.map"
+              },
+              "context_line": "        return fn(a);",
+              "lineno": 5928
+            },
+            {
+              "function": "fn",
+              "abs_path": "app:///node_modules/react-native/Libraries/Renderer/ReactNativeRenderer-prod.js",
+              "pre_context": [
+                "    events = events$jscomp$0;",
+                "    null !== events && (eventQueue = accumulateInto(eventQueue, events));",
+                "    events = eventQueue;",
+                "    eventQueue = null;",
+                "    events &&"
+              ],
+              "post_context": [
+                "      invariant(",
+                "        !eventQueue,",
+                "        \"processEventQueue(): Additional events were enqueued while processing an event queue. Support for this has not yet been implemented.\"",
+                "      ),",
+                "      ReactErrorUtils.rethrowCaughtError());"
+              ],
+              "filename": "node_modules/react-native/Libraries/Renderer/ReactNativeRenderer-prod.js",
+              "platform": "javascript",
+              "module": "react-native/Libraries/Renderer/ReactNativeRenderer-prod",
+              "colno": 8,
+              "in_app": false,
+              "data": {
+                "sourcemap": "app:///index.android.bundle.map"
+              },
+              "context_line": "      (forEachAccumulated(events, executeDispatchesAndReleaseTopLevel),",
+              "lineno": 1113
+            },
+            {
+              "function": "forEachAccumulated",
+              "abs_path": "app:///node_modules/react-native/Libraries/Renderer/ReactNativeRenderer-prod.js",
+              "pre_context": [
+                "    return current;",
+                "  }",
+                "  return Array.isArray(next) ? [current].concat(next) : [current, next];",
+                "}",
+                "function forEachAccumulated(arr, cb, scope) {"
+              ],
+              "post_context": [
+                "}",
+                "var eventQueue = null;",
+                "function executeDispatchesAndReleaseTopLevel(e) {",
+                "  if (e) {",
+                "    var dispatchListeners = e._dispatchListeners,"
+              ],
+              "filename": "node_modules/react-native/Libraries/Renderer/ReactNativeRenderer-prod.js",
+              "platform": "javascript",
+              "module": "react-native/Libraries/Renderer/ReactNativeRenderer-prod",
+              "colno": 28,
+              "in_app": false,
+              "data": {
+                "sourcemap": "app:///index.android.bundle.map"
+              },
+              "context_line": "  Array.isArray(arr) ? arr.forEach(cb, scope) : arr && cb.call(scope, arr);",
+              "lineno": 219
+            },
+            {
+              "function": "[native code] forEach",
+              "platform": "javascript",
+              "lineno": 0,
+              "colno": 0,
+              "in_app": false
+            },
+            {
+              "function": "D",
+              "abs_path": "app:///node_modules/react-native/Libraries/Renderer/ReactNativeRenderer-prod.js",
+              "pre_context": [
+                "        i++",
+                "      )",
+                "        executeDispatch(e, !1, dispatchListeners[i], dispatchInstances[i]);",
+                "    else",
+                "      dispatchListeners &&"
+              ],
+              "post_context": [
+                "    e._dispatchListeners = null;",
+                "    e._dispatchInstances = null;",
+                "    e.isPersistent() || e.constructor.release(e);",
+                "  }",
+                "}"
+              ],
+              "filename": "node_modules/react-native/Libraries/Renderer/ReactNativeRenderer-prod.js",
+              "platform": "javascript",
+              "module": "react-native/Libraries/Renderer/ReactNativeRenderer-prod",
+              "colno": 9,
+              "in_app": false,
+              "data": {
+                "sourcemap": "app:///index.android.bundle.map"
+              },
+              "context_line": "        executeDispatch(e, !1, dispatchListeners, dispatchInstances);",
+              "lineno": 235
+            },
+            {
+              "function": "executeDispatch",
+              "abs_path": "app:///node_modules/react-native/Libraries/Renderer/ReactNativeRenderer-prod.js",
+              "pre_context": [
+                "  return \"topMouseDown\" === topLevelType || \"topTouchStart\" === topLevelType;",
+                "}",
+                "function executeDispatch(event, simulated, listener, inst) {",
+                "  simulated = event.type || \"unknown-event\";",
+                "  event.currentTarget = getNodeFromInstance(inst);"
+              ],
+              "post_context": [
+                "    simulated,",
+                "    listener,",
+                "    void 0,",
+                "    event",
+                "  );"
+              ],
+              "filename": "node_modules/react-native/Libraries/Renderer/ReactNativeRenderer-prod.js",
+              "platform": "javascript",
+              "module": "react-native/Libraries/Renderer/ReactNativeRenderer-prod",
+              "colno": 19,
+              "in_app": false,
+              "data": {
+                "sourcemap": "app:///index.android.bundle.map"
+              },
+              "context_line": "  ReactErrorUtils.invokeGuardedCallbackAndCatchFirstError(",
+              "lineno": 181
+            },
+            {
+              "function": "invokeGuardedCallbackAndCatchFirstError",
+              "abs_path": "app:///node_modules/react-native/Libraries/Renderer/ReactNativeRenderer-prod.js",
+              "pre_context": [
+                "    c,",
+                "    d,",
+                "    e,",
+                "    f",
+                "  ) {"
+              ],
+              "post_context": [
+                "    if (ReactErrorUtils.hasCaughtError()) {",
+                "      var error = ReactErrorUtils.clearCaughtError();",
+                "      ReactErrorUtils._hasRethrowError ||",
+                "        ((ReactErrorUtils._hasRethrowError = !0),",
+                "        (ReactErrorUtils._rethrowError = error));"
+              ],
+              "filename": "node_modules/react-native/Libraries/Renderer/ReactNativeRenderer-prod.js",
+              "platform": "javascript",
+              "module": "react-native/Libraries/Renderer/ReactNativeRenderer-prod",
+              "colno": 43,
+              "in_app": false,
+              "data": {
+                "sourcemap": "app:///index.android.bundle.map"
+              },
+              "context_line": "    ReactErrorUtils.invokeGuardedCallback.apply(this, arguments);",
+              "lineno": 54
+            },
+            {
+              "function": "apply",
+              "abs_path": "app:///node_modules/react-native/Libraries/Renderer/ReactNativeRenderer-prod.js",
+              "pre_context": [
+                "  _caughtError: null,",
+                "  _hasCaughtError: !1,",
+                "  _rethrowError: null,",
+                "  _hasRethrowError: !1,",
+                "  invokeGuardedCallback: function(name, func, context, a, b, c, d, e, f) {"
+              ],
+              "post_context": [
+                "  },",
+                "  invokeGuardedCallbackAndCatchFirstError: function(",
+                "    name,",
+                "    func,",
+                "    context,"
+              ],
+              "filename": "node_modules/react-native/Libraries/Renderer/ReactNativeRenderer-prod.js",
+              "platform": "javascript",
+              "module": "react-native/Libraries/Renderer/ReactNativeRenderer-prod",
+              "colno": 27,
+              "in_app": false,
+              "data": {
+                "sourcemap": "app:///index.android.bundle.map"
+              },
+              "context_line": "    invokeGuardedCallback.apply(ReactErrorUtils, arguments);",
+              "lineno": 41
+            },
+            {
+              "function": "apply",
+              "abs_path": "app:///node_modules/react-native/Libraries/Renderer/ReactNativeRenderer-prod.js",
+              "pre_context": [
+                "  shallowEqual = require(\"fbjs/lib/shallowEqual\"),",
+                "  ExceptionsManager = require(\"ExceptionsManager\");",
+                "function invokeGuardedCallback(name, func, context, a, b, c, d, e, f) {",
+                "  this._hasCaughtError = !1;",
+                "  this._caughtError = null;"
+              ],
+              "post_context": [
+                "  try {",
+                "    func.apply(context, funcArgs);",
+                "  } catch (error) {",
+                "    (this._caughtError = error), (this._hasCaughtError = !0);",
+                "  }"
+              ],
+              "filename": "node_modules/react-native/Libraries/Renderer/ReactNativeRenderer-prod.js",
+              "platform": "javascript",
+              "module": "react-native/Libraries/Renderer/ReactNativeRenderer-prod",
+              "colno": 45,
+              "in_app": false,
+              "data": {
+                "sourcemap": "app:///index.android.bundle.map"
+              },
+              "context_line": "  var funcArgs = Array.prototype.slice.call(arguments, 3);",
+              "lineno": 28
+            },
+            {
+              "function": "arguments",
+              "abs_path": "app:///node_modules/react-native/Libraries/Components/Touchable/Touchable.js",
+              "pre_context": [
+                "  },",
+                "",
+                "  /**",
+                "   * Place as callback for a DOM element's `onResponderRelease` event.",
+                "   */"
+              ],
+              "post_context": [
+                "    this._receiveSignal(Signals.RESPONDER_RELEASE, e);",
+                "  },",
+                "",
+                "  /**",
+                "   * Place as callback for a DOM element's `onResponderTerminate` event."
+              ],
+              "filename": "node_modules/react-native/Libraries/Components/Touchable/Touchable.js",
+              "platform": "javascript",
+              "module": "react-native/Libraries/Components/Touchable/Touchable",
+              "colno": 36,
+              "in_app": false,
+              "data": {
+                "sourcemap": "app:///index.android.bundle.map"
+              },
+              "context_line": "  touchableHandleResponderRelease: function(e) {",
+              "lineno": 430
+            },
+            {
+              "function": "_receiveSignal",
+              "abs_path": "app:///node_modules/react-native/Libraries/Components/Touchable/Touchable.js",
+              "pre_context": [
+                "        'Touchable cannot transition from `' + curState + '` to `' + signal +",
+                "        '` for responder `' + responderID + '`'",
+                "      );",
+                "    }",
+                "    if (curState !== nextState) {"
+              ],
+              "post_context": [
+                "      this.state.touchable.touchState = nextState;",
+                "    }",
+                "  },",
+                "",
+                "  _cancelLongPressDelayTimeout: function () {"
+              ],
+              "filename": "node_modules/react-native/Libraries/Components/Touchable/Touchable.js",
+              "platform": "javascript",
+              "module": "react-native/Libraries/Components/Touchable/Touchable",
+              "colno": 12,
+              "in_app": false,
+              "data": {
+                "sourcemap": "app:///index.android.bundle.map"
+              },
+              "context_line": "      this._performSideEffectsForTransition(curState, nextState, signal, e);",
+              "lineno": 662
+            },
+            {
+              "function": "_performSideEffectsForTransition",
+              "abs_path": "app:///node_modules/react-native/Libraries/Components/Touchable/Touchable.js",
+              "pre_context": [
+                "        if (!newIsHighlight && !curIsHighlight) {",
+                "          // we never highlighted because of delay, but we should highlight now",
+                "          this._startHighlight(e);",
+                "          this._endHighlight(e);",
+                "        }"
+              ],
+              "post_context": [
+                "      }",
+                "    }",
+                "",
+                "    this.touchableDelayTimeout && clearTimeout(this.touchableDelayTimeout);",
+                "    this.touchableDelayTimeout = null;"
+              ],
+              "filename": "node_modules/react-native/Libraries/Components/Touchable/Touchable.js",
+              "platform": "javascript",
+              "module": "react-native/Libraries/Components/Touchable/Touchable",
+              "colno": 9,
+              "in_app": false,
+              "data": {
+                "sourcemap": "app:///index.android.bundle.map"
+              },
+              "context_line": "        this.touchableHandlePress(e);",
+              "lineno": 744
+            },
+            {
+              "function": "this",
+              "abs_path": "app:///node_modules/react-native/Libraries/Components/Touchable/TouchableNativeFeedback.android.js",
+              "pre_context": [
+                "    this.props.onPressOut && this.props.onPressOut(e);",
+                "    this._dispatchPressedStateChange(false);",
+                "  },",
+                "",
+                "  touchableHandlePress: function(e: Event) {"
+              ],
+              "post_context": [
+                "  },",
+                "",
+                "  touchableHandleLongPress: function(e: Event) {",
+                "    this.props.onLongPress && this.props.onLongPress(e);",
+                "  },"
+              ],
+              "filename": "node_modules/react-native/Libraries/Components/Touchable/TouchableNativeFeedback.android.js",
+              "platform": "javascript",
+              "module": "react-native/Libraries/Components/Touchable/TouchableNativeFeedback.android",
+              "colno": 16,
+              "in_app": false,
+              "data": {
+                "sourcemap": "app:///index.android.bundle.map"
+              },
+              "context_line": "    this.props.onPress && this.props.onPress(e);",
+              "lineno": 175
+            },
+            {
+              "function": "onPress",
+              "abs_path": "app:///App.js",
+              "pre_context": [
+                "          styleDisabled={{ color: 'red' }}",
+                "          onPress={() => this._uriError()}",
+                "          accessibilityLabel={'SyntaxError: Unexepected identifier'}",
+                "          title=\"SyntaxError: Unexepected identifier\"",
+                "        />"
+              ],
+              "post_context": [
+                "          style={{ fontSize: 12, color: 'green' }}",
+                "          styleDisabled={{ color: 'red' }}",
+                "          onPress={() => this._referenceError()}",
+                "          accessibilityLabel={'ReferenceError: undefinedVariable is not defined'}",
+                "          title=\"ReferenceError: undefinedVariable is not defined\""
+              ],
+              "filename": "App.js",
+              "platform": "javascript",
+              "module": "App",
+              "colno": 10,
+              "in_app": true,
+              "data": {
+                "sourcemap": "app:///index.android.bundle.map"
+              },
+              "context_line": "        <Button",
+              "lineno": 143
+            },
+            {
+              "function": "Button",
+              "abs_path": "app:///App.js",
+              "pre_context": [
+                "      <View style={styles.container}>",
+                "        <TextInput",
+                "          style={{ height: 40, borderColor: 'black', borderWidth: 1, width: '80%' }}",
+                "          accessibilityLabel={'email'}",
+                "        />"
+              ],
+              "post_context": [
+                "          style={{fontSize: 12, color: 'green'}}",
+                "          styleDisabled={{color: 'red'}}",
+                "          onPress={() => this._notAFunctionError()}",
+                "          accessibilityLabel={'TypeError: obj.invalidFunction is not a function'}",
+                "          title=\"TypeError: obj.invalidFunction is not a function\""
+              ],
+              "filename": "App.js",
+              "platform": "javascript",
+              "module": "App",
+              "colno": 9,
+              "in_app": true,
+              "data": {
+                "sourcemap": "app:///index.android.bundle.map"
+              },
+              "context_line": "        <Button",
+              "lineno": 115
+            }
+          ]
+        },
+        "raw_stacktrace": {
+          "frames": [
+            {
+              "function": "value",
+              "abs_path": "app:///index.android.bundle",
+              "pre_context": [
+                "__d(function(e,t,r,n,g){'use strict';var u=t(g[0]),a={get AccessibilityInfo(){return t(g[1])},get ActivityIndicator(){return t(g[2])},get AR {snip}",
+                "__d(function(n,e,r,i,o){'use strict';var t=function(n){};r.exports=function(n,e,r,i,o,a,f,s){if(t(e),!n){var u;if(void 0===e)u=new Error(\"Mi {snip}",
+                "__d(function(e,n,t,i,o){'use strict';var r=n(o[0]),c=n(o[1]),s=r.AccessibilityInfo,u=new Map,a={fetch:function(){return new Promise(function {snip}",
+                "__d(function(e,n,t,r,o){'use strict';var a=n(o[0]),i=n(o[1]);function u(e,n){if(!e)return null;var t=babelHelpers.slicedToArray(e,5),r=t[0], {snip}",
+                "__d(function(e,r,n,l,a){'use strict';var t=new(r(a[0]))('undefined'!=typeof __fbUninstallRNGlobalErrorHandler&&!0===__fbUninstallRNGlobalErr {snip}"
+              ],
+              "post_context": [
+                "__d(function(r,o,t,i,n){t.exports=r.ErrorUtils},18,[]);",
+                "__d(function(n,t,e,c,i){'use strict';t(i[0]);var o=!1,u=0,a={installReactHook:function(){!0},setEnabled:function(n){o!==n&&(o=n)},isEnabled: {snip}",
+                "__d(function(t,n,r,u,c){'use strict';r.exports=function(t){return t}},20,[]);",
+                "__d(function(t,n,i,e,f){'use strict';i.exports=function(t){var n,i=typeof t;if(void 0===t)n='undefined';else if(null===t)n='null';else if('s {snip}",
+                "__d(function(e,t,n,r,i){'use strict';t(i[0]),t(i[1]);var l=t(i[2]),a=t(i[3]).Timing,o=null;function u(){return o||(o=t(i[4])),o()}var c=16.6 {snip}"
+              ],
+              "in_app": false,
+              "platform": "javascript",
+              "lineno": 18,
+              "colno": 1039,
+              "filename": "app:///index.android.bundle",
+              "context_line": "{snip} eue()}},{key:\"callFunctionReturnResultAndFlushedQueue\",value:function(e,l,t){var u=this,s=void 0;return this.__guard(function(){s=u.__callFu {snip}"
+            },
+            {
+              "function": "value",
+              "abs_path": "app:///index.android.bundle",
+              "pre_context": [
+                "__d(function(e,t,r,n,g){'use strict';var u=t(g[0]),a={get AccessibilityInfo(){return t(g[1])},get ActivityIndicator(){return t(g[2])},get AR {snip}",
+                "__d(function(n,e,r,i,o){'use strict';var t=function(n){};r.exports=function(n,e,r,i,o,a,f,s){if(t(e),!n){var u;if(void 0===e)u=new Error(\"Mi {snip}",
+                "__d(function(e,n,t,i,o){'use strict';var r=n(o[0]),c=n(o[1]),s=r.AccessibilityInfo,u=new Map,a={fetch:function(){return new Promise(function {snip}",
+                "__d(function(e,n,t,r,o){'use strict';var a=n(o[0]),i=n(o[1]);function u(e,n){if(!e)return null;var t=babelHelpers.slicedToArray(e,5),r=t[0], {snip}",
+                "__d(function(e,r,n,l,a){'use strict';var t=new(r(a[0]))('undefined'!=typeof __fbUninstallRNGlobalErrorHandler&&!0===__fbUninstallRNGlobalErr {snip}"
+              ],
+              "post_context": [
+                "__d(function(r,o,t,i,n){t.exports=r.ErrorUtils},18,[]);",
+                "__d(function(n,t,e,c,i){'use strict';t(i[0]);var o=!1,u=0,a={installReactHook:function(){!0},setEnabled:function(n){o!==n&&(o=n)},isEnabled: {snip}",
+                "__d(function(t,n,r,u,c){'use strict';r.exports=function(t){return t}},20,[]);",
+                "__d(function(t,n,i,e,f){'use strict';i.exports=function(t){var n,i=typeof t;if(void 0===t)n='undefined';else if(null===t)n='null';else if('s {snip}",
+                "__d(function(e,t,n,r,i){'use strict';t(i[0]),t(i[1]);var l=t(i[2]),a=t(i[3]).Timing,o=null;function u(){return o||(o=t(i[4])),o()}var c=16.6 {snip}"
+              ],
+              "in_app": false,
+              "platform": "javascript",
+              "lineno": 18,
+              "colno": 3009,
+              "filename": "app:///index.android.bundle",
+              "context_line": "{snip} ll--}}},{key:\"__callImmediates\",value:function(){i.beginEvent('JSTimers.callImmediates()'),h||(h=l(s[5])),h.callImmediates(),i.endEvent()}}, {snip}"
+            },
+            {
+              "abs_path": "app:///index.android.bundle",
+              "pre_context": [
+                "__d(function(e,t,r,n,g){'use strict';var u=t(g[0]),a={get AccessibilityInfo(){return t(g[1])},get ActivityIndicator(){return t(g[2])},get AR {snip}",
+                "__d(function(n,e,r,i,o){'use strict';var t=function(n){};r.exports=function(n,e,r,i,o,a,f,s){if(t(e),!n){var u;if(void 0===e)u=new Error(\"Mi {snip}",
+                "__d(function(e,n,t,i,o){'use strict';var r=n(o[0]),c=n(o[1]),s=r.AccessibilityInfo,u=new Map,a={fetch:function(){return new Promise(function {snip}",
+                "__d(function(e,n,t,r,o){'use strict';var a=n(o[0]),i=n(o[1]);function u(e,n){if(!e)return null;var t=babelHelpers.slicedToArray(e,5),r=t[0], {snip}",
+                "__d(function(e,r,n,l,a){'use strict';var t=new(r(a[0]))('undefined'!=typeof __fbUninstallRNGlobalErrorHandler&&!0===__fbUninstallRNGlobalErr {snip}"
+              ],
+              "post_context": [
+                "__d(function(r,o,t,i,n){t.exports=r.ErrorUtils},18,[]);",
+                "__d(function(n,t,e,c,i){'use strict';t(i[0]);var o=!1,u=0,a={installReactHook:function(){!0},setEnabled:function(n){o!==n&&(o=n)},isEnabled: {snip}",
+                "__d(function(t,n,r,u,c){'use strict';r.exports=function(t){return t}},20,[]);",
+                "__d(function(t,n,i,e,f){'use strict';i.exports=function(t){var n,i=typeof t;if(void 0===t)n='undefined';else if(null===t)n='null';else if('s {snip}",
+                "__d(function(e,t,n,r,i){'use strict';t(i[0]),t(i[1]);var l=t(i[2]),a=t(i[3]).Timing,o=null;function u(){return o||(o=t(i[4])),o()}var c=16.6 {snip}"
+              ],
+              "in_app": false,
+              "platform": "javascript",
+              "lineno": 18,
+              "colno": 1067,
+              "filename": "app:///index.android.bundle",
+              "context_line": "{snip} turnResultAndFlushedQueue\",value:function(e,l,t){var u=this,s=void 0;return this.__guard(function(){s=u.__callFunction(e,l,t)}),[s,this.flus {snip}"
+            },
+            {
+              "function": "value",
+              "abs_path": "app:///index.android.bundle",
+              "pre_context": [
+                "__d(function(e,t,r,n,g){'use strict';var u=t(g[0]),a={get AccessibilityInfo(){return t(g[1])},get ActivityIndicator(){return t(g[2])},get AR {snip}",
+                "__d(function(n,e,r,i,o){'use strict';var t=function(n){};r.exports=function(n,e,r,i,o,a,f,s){if(t(e),!n){var u;if(void 0===e)u=new Error(\"Mi {snip}",
+                "__d(function(e,n,t,i,o){'use strict';var r=n(o[0]),c=n(o[1]),s=r.AccessibilityInfo,u=new Map,a={fetch:function(){return new Promise(function {snip}",
+                "__d(function(e,n,t,r,o){'use strict';var a=n(o[0]),i=n(o[1]);function u(e,n){if(!e)return null;var t=babelHelpers.slicedToArray(e,5),r=t[0], {snip}",
+                "__d(function(e,r,n,l,a){'use strict';var t=new(r(a[0]))('undefined'!=typeof __fbUninstallRNGlobalErrorHandler&&!0===__fbUninstallRNGlobalErr {snip}"
+              ],
+              "post_context": [
+                "__d(function(r,o,t,i,n){t.exports=r.ErrorUtils},18,[]);",
+                "__d(function(n,t,e,c,i){'use strict';t(i[0]);var o=!1,u=0,a={installReactHook:function(){!0},setEnabled:function(n){o!==n&&(o=n)},isEnabled: {snip}",
+                "__d(function(t,n,r,u,c){'use strict';r.exports=function(t){return t}},20,[]);",
+                "__d(function(t,n,i,e,f){'use strict';i.exports=function(t){var n,i=typeof t;if(void 0===t)n='undefined';else if(null===t)n='null';else if('s {snip}",
+                "__d(function(e,t,n,r,i){'use strict';t(i[0]),t(i[1]);var l=t(i[2]),a=t(i[3]).Timing,o=null;function u(){return o||(o=t(i[4])),o()}var c=16.6 {snip}"
+              ],
+              "in_app": false,
+              "platform": "javascript",
+              "lineno": 18,
+              "colno": 3582,
+              "filename": "app:///index.android.bundle",
+              "context_line": "{snip} \",value:function(e,l){this._lastFlush=(new Date).getTime(),this._eventLoopStartTime=this._lastFlush;var t=e>>>1,u=1&e?this._successCallbacks {snip}"
+            },
+            {
+              "function": "receiveTouches",
+              "abs_path": "app:///index.android.bundle",
+              "pre_context": [
+                "__d(function(e,t,i,a,r){'use strict';var s=t(r[0]),n=t(r[1]),o=(t(r[2]),t(r[3])),l=t(r[4]),c=t(r[5]),d=t(r[6]),p=t(r[7]),h=t(r[8]),m=t(r[9]) {snip}",
+                "__d(function(n,r,f,e,i){'use strict';var a=r(i[0]),l=function(n,r,f,e,i,l){var o=r[f];return void 0===o||null===o?n?new Error('Required '+i+ {snip}",
+                "__d(function(e,r,a,l,n){'use strict';function t(e,r,a){return a<0&&(a+=1),a>1&&(a-=1),a<.16666666666666666?e+6*(r-e)*a:a<.5?r:a<.66666666666 {snip}",
+                "__d(function(_,t,E,i,e){'use strict';var s=t(e[0]).__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.NativeMethodsMixin;E.exports=s},38,[39]);",
+                "__d(function(t,r,s,c,e){'use strict';var i;i=r(e[0]),s.exports=i},39,[40]);"
+              ],
+              "post_context": [
+                "__d(function(e,r,t,n,o){'use strict';var a=r(o[0]),i=a.polyfillObjectProperty,l=a.polyfillGlobal;void 0===e.GLOBAL&&(e.GLOBAL=e),void 0===e. {snip}",
+                "__d(function(e,l,r,o,t){'use strict';var i=l(t[0]);function n(e,l,r){var o=Object.getOwnPropertyDescriptor(e,l),t=o||{},n=t.enumerable,a=t.w {snip}",
+                "__d(function(n,t,o,r,e){'use strict';function f(t){var o=n[t];if(null==o)return!0;if('function'!=typeof n.Symbol)return!0;var r=o.prototype; {snip}",
+                "__d(function(e,t,r,n,i){'use strict';var a=t(i[0]),o=t(i[1]),u=t(i[2]),s=t(i[3]);r.exports=(function(e,t){if(!a('Map'))return e.Map;var r='k {snip}",
+                "__d(function(t,n,r,e,o){'use strict';r.exports=function(){return'f'+(1073741824*Math.random()).toString(16).replace('.','')}},45,[]);"
+              ],
+              "in_app": false,
+              "platform": "javascript",
+              "lineno": 41,
+              "colno": 16203,
+              "filename": "app:///index.android.bundle",
+              "context_line": "{snip} id 0===a||a<Ae.tagsStartAt||(i=a),ze(i,e,o)}}});u.register(Ue);var Fe=\"function\"==typeof Symbol&&Symbol.for,De=Fe?Symbol.for(\"react.element\" {snip}"
+            },
+            {
+              "function": "ze",
+              "abs_path": "app:///index.android.bundle",
+              "pre_context": [
+                "__d(function(e,t,i,a,r){'use strict';var s=t(r[0]),n=t(r[1]),o=(t(r[2]),t(r[3])),l=t(r[4]),c=t(r[5]),d=t(r[6]),p=t(r[7]),h=t(r[8]),m=t(r[9]) {snip}",
+                "__d(function(n,r,f,e,i){'use strict';var a=r(i[0]),l=function(n,r,f,e,i,l){var o=r[f];return void 0===o||null===o?n?new Error('Required '+i+ {snip}",
+                "__d(function(e,r,a,l,n){'use strict';function t(e,r,a){return a<0&&(a+=1),a>1&&(a-=1),a<.16666666666666666?e+6*(r-e)*a:a<.5?r:a<.66666666666 {snip}",
+                "__d(function(_,t,E,i,e){'use strict';var s=t(e[0]).__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.NativeMethodsMixin;E.exports=s},38,[39]);",
+                "__d(function(t,r,s,c,e){'use strict';var i;i=r(e[0]),s.exports=i},39,[40]);"
+              ],
+              "post_context": [
+                "__d(function(e,r,t,n,o){'use strict';var a=r(o[0]),i=a.polyfillObjectProperty,l=a.polyfillGlobal;void 0===e.GLOBAL&&(e.GLOBAL=e),void 0===e. {snip}",
+                "__d(function(e,l,r,o,t){'use strict';var i=l(t[0]);function n(e,l,r){var o=Object.getOwnPropertyDescriptor(e,l),t=o||{},n=t.enumerable,a=t.w {snip}",
+                "__d(function(n,t,o,r,e){'use strict';function f(t){var o=n[t];if(null==o)return!0;if('function'!=typeof n.Symbol)return!0;var r=o.prototype; {snip}",
+                "__d(function(e,t,r,n,i){'use strict';var a=t(i[0]),o=t(i[1]),u=t(i[2]),s=t(i[3]);r.exports=(function(e,t){if(!a('Map'))return e.Map;var r='k {snip}",
+                "__d(function(t,n,r,e,o){'use strict';r.exports=function(){return'f'+(1073741824*Math.random()).toString(16).replace('.','')}},45,[]);"
+              ],
+              "in_app": false,
+              "platform": "javascript",
+              "lineno": 41,
+              "colno": 15366,
+              "filename": "app:///index.android.bundle",
+              "context_line": "{snip} ion ze(e,t,n){var r=n||He,o=Se(e);Ie(function(){for(var e=r.target,n=null,a=0;a<S.length;a++){var l=S[a];l&&(l=l.extractEvents(t,o,r,e))&&(n {snip}"
+            },
+            {
+              "function": "Ie",
+              "abs_path": "app:///index.android.bundle",
+              "pre_context": [
+                "__d(function(e,t,i,a,r){'use strict';var s=t(r[0]),n=t(r[1]),o=(t(r[2]),t(r[3])),l=t(r[4]),c=t(r[5]),d=t(r[6]),p=t(r[7]),h=t(r[8]),m=t(r[9]) {snip}",
+                "__d(function(n,r,f,e,i){'use strict';var a=r(i[0]),l=function(n,r,f,e,i,l){var o=r[f];return void 0===o||null===o?n?new Error('Required '+i+ {snip}",
+                "__d(function(e,r,a,l,n){'use strict';function t(e,r,a){return a<0&&(a+=1),a>1&&(a-=1),a<.16666666666666666?e+6*(r-e)*a:a<.5?r:a<.66666666666 {snip}",
+                "__d(function(_,t,E,i,e){'use strict';var s=t(e[0]).__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.NativeMethodsMixin;E.exports=s},38,[39]);",
+                "__d(function(t,r,s,c,e){'use strict';var i;i=r(e[0]),s.exports=i},39,[40]);"
+              ],
+              "post_context": [
+                "__d(function(e,r,t,n,o){'use strict';var a=r(o[0]),i=a.polyfillObjectProperty,l=a.polyfillGlobal;void 0===e.GLOBAL&&(e.GLOBAL=e),void 0===e. {snip}",
+                "__d(function(e,l,r,o,t){'use strict';var i=l(t[0]);function n(e,l,r){var o=Object.getOwnPropertyDescriptor(e,l),t=o||{},n=t.enumerable,a=t.w {snip}",
+                "__d(function(n,t,o,r,e){'use strict';function f(t){var o=n[t];if(null==o)return!0;if('function'!=typeof n.Symbol)return!0;var r=o.prototype; {snip}",
+                "__d(function(e,t,r,n,i){'use strict';var a=t(i[0]),o=t(i[1]),u=t(i[2]),s=t(i[3]);r.exports=(function(e,t){if(!a('Map'))return e.Map;var r='k {snip}",
+                "__d(function(t,n,r,e,o){'use strict';r.exports=function(){return'f'+(1073741824*Math.random()).toString(16).replace('.','')}},45,[]);"
+              ],
+              "in_app": false,
+              "platform": "javascript",
+              "lineno": 41,
+              "colno": 14871,
+              "filename": "app:///index.android.bundle",
+              "context_line": "{snip} f(Ne)return e(t);Ne=!0;try{return _e(e,t)}finally{if(Ne=!1,(null!==Pe||null!==Re)&&(we(),Pe&&(t=Pe,e=Re,Re=Pe=null,Ee(t),e)))for(t=0;t<e.len {snip}"
+            },
+            {
+              "function": "batchedUpdates",
+              "abs_path": "app:///index.android.bundle",
+              "pre_context": [
+                "__d(function(e,t,i,a,r){'use strict';var s=t(r[0]),n=t(r[1]),o=(t(r[2]),t(r[3])),l=t(r[4]),c=t(r[5]),d=t(r[6]),p=t(r[7]),h=t(r[8]),m=t(r[9]) {snip}",
+                "__d(function(n,r,f,e,i){'use strict';var a=r(i[0]),l=function(n,r,f,e,i,l){var o=r[f];return void 0===o||null===o?n?new Error('Required '+i+ {snip}",
+                "__d(function(e,r,a,l,n){'use strict';function t(e,r,a){return a<0&&(a+=1),a>1&&(a-=1),a<.16666666666666666?e+6*(r-e)*a:a<.5?r:a<.66666666666 {snip}",
+                "__d(function(_,t,E,i,e){'use strict';var s=t(e[0]).__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.NativeMethodsMixin;E.exports=s},38,[39]);",
+                "__d(function(t,r,s,c,e){'use strict';var i;i=r(e[0]),s.exports=i},39,[40]);"
+              ],
+              "post_context": [
+                "__d(function(e,r,t,n,o){'use strict';var a=r(o[0]),i=a.polyfillObjectProperty,l=a.polyfillGlobal;void 0===e.GLOBAL&&(e.GLOBAL=e),void 0===e. {snip}",
+                "__d(function(e,l,r,o,t){'use strict';var i=l(t[0]);function n(e,l,r){var o=Object.getOwnPropertyDescriptor(e,l),t=o||{},n=t.enumerable,a=t.w {snip}",
+                "__d(function(n,t,o,r,e){'use strict';function f(t){var o=n[t];if(null==o)return!0;if('function'!=typeof n.Symbol)return!0;var r=o.prototype; {snip}",
+                "__d(function(e,t,r,n,i){'use strict';var a=t(i[0]),o=t(i[1]),u=t(i[2]),s=t(i[3]);r.exports=(function(e,t){if(!a('Map'))return e.Map;var r='k {snip}",
+                "__d(function(t,n,r,e,o){'use strict';r.exports=function(){return'f'+(1073741824*Math.random()).toString(16).replace('.','')}},45,[]);"
+              ],
+              "in_app": false,
+              "platform": "javascript",
+              "lineno": 41,
+              "colno": 72170,
+              "filename": "app:///index.android.bundle",
+              "context_line": "{snip} ion(e,t){var n=be;be=!0;try{return e(t)}finally{(be=n)||fe||v()}},unbatchedUpdates:function(e,t){if(be&&!Te){Te=!0;try{return e(t)}finally{T {snip}"
+            },
+            {
+              "abs_path": "app:///index.android.bundle",
+              "pre_context": [
+                "__d(function(e,t,i,a,r){'use strict';var s=t(r[0]),n=t(r[1]),o=(t(r[2]),t(r[3])),l=t(r[4]),c=t(r[5]),d=t(r[6]),p=t(r[7]),h=t(r[8]),m=t(r[9]) {snip}",
+                "__d(function(n,r,f,e,i){'use strict';var a=r(i[0]),l=function(n,r,f,e,i,l){var o=r[f];return void 0===o||null===o?n?new Error('Required '+i+ {snip}",
+                "__d(function(e,r,a,l,n){'use strict';function t(e,r,a){return a<0&&(a+=1),a>1&&(a-=1),a<.16666666666666666?e+6*(r-e)*a:a<.5?r:a<.66666666666 {snip}",
+                "__d(function(_,t,E,i,e){'use strict';var s=t(e[0]).__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.NativeMethodsMixin;E.exports=s},38,[39]);",
+                "__d(function(t,r,s,c,e){'use strict';var i;i=r(e[0]),s.exports=i},39,[40]);"
+              ],
+              "post_context": [
+                "__d(function(e,r,t,n,o){'use strict';var a=r(o[0]),i=a.polyfillObjectProperty,l=a.polyfillGlobal;void 0===e.GLOBAL&&(e.GLOBAL=e),void 0===e. {snip}",
+                "__d(function(e,l,r,o,t){'use strict';var i=l(t[0]);function n(e,l,r){var o=Object.getOwnPropertyDescriptor(e,l),t=o||{},n=t.enumerable,a=t.w {snip}",
+                "__d(function(n,t,o,r,e){'use strict';function f(t){var o=n[t];if(null==o)return!0;if('function'!=typeof n.Symbol)return!0;var r=o.prototype; {snip}",
+                "__d(function(e,t,r,n,i){'use strict';var a=t(i[0]),o=t(i[1]),u=t(i[2]),s=t(i[3]);r.exports=(function(e,t){if(!a('Map'))return e.Map;var r='k {snip}",
+                "__d(function(t,n,r,e,o){'use strict';r.exports=function(){return'f'+(1073741824*Math.random()).toString(16).replace('.','')}},45,[]);"
+              ],
+              "in_app": false,
+              "platform": "javascript",
+              "lineno": 41,
+              "colno": 15520,
+              "filename": "app:///index.android.bundle",
+              "context_line": "{snip} ==(e=n)&&(F=z(F,e)),e=F,F=null,e&&(U(e,D),i(!F,\"processEventQueue(): Additional events were enqueued while processing an event queue. Suppor {snip}"
+            },
+            {
+              "function": "U",
+              "abs_path": "app:///index.android.bundle",
+              "pre_context": [
+                "__d(function(e,t,i,a,r){'use strict';var s=t(r[0]),n=t(r[1]),o=(t(r[2]),t(r[3])),l=t(r[4]),c=t(r[5]),d=t(r[6]),p=t(r[7]),h=t(r[8]),m=t(r[9]) {snip}",
+                "__d(function(n,r,f,e,i){'use strict';var a=r(i[0]),l=function(n,r,f,e,i,l){var o=r[f];return void 0===o||null===o?n?new Error('Required '+i+ {snip}",
+                "__d(function(e,r,a,l,n){'use strict';function t(e,r,a){return a<0&&(a+=1),a>1&&(a-=1),a<.16666666666666666?e+6*(r-e)*a:a<.5?r:a<.66666666666 {snip}",
+                "__d(function(_,t,E,i,e){'use strict';var s=t(e[0]).__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.NativeMethodsMixin;E.exports=s},38,[39]);",
+                "__d(function(t,r,s,c,e){'use strict';var i;i=r(e[0]),s.exports=i},39,[40]);"
+              ],
+              "post_context": [
+                "__d(function(e,r,t,n,o){'use strict';var a=r(o[0]),i=a.polyfillObjectProperty,l=a.polyfillGlobal;void 0===e.GLOBAL&&(e.GLOBAL=e),void 0===e. {snip}",
+                "__d(function(e,l,r,o,t){'use strict';var i=l(t[0]);function n(e,l,r){var o=Object.getOwnPropertyDescriptor(e,l),t=o||{},n=t.enumerable,a=t.w {snip}",
+                "__d(function(n,t,o,r,e){'use strict';function f(t){var o=n[t];if(null==o)return!0;if('function'!=typeof n.Symbol)return!0;var r=o.prototype; {snip}",
+                "__d(function(e,t,r,n,i){'use strict';var a=t(i[0]),o=t(i[1]),u=t(i[2]),s=t(i[3]);r.exports=(function(e,t){if(!a('Map'))return e.Map;var r='k {snip}",
+                "__d(function(t,n,r,e,o){'use strict';r.exports=function(){return'f'+(1073741824*Math.random()).toString(16).replace('.','')}},45,[]);"
+              ],
+              "in_app": false,
+              "platform": "javascript",
+              "lineno": 41,
+              "colno": 2992,
+              "filename": "app:///index.android.bundle",
+              "context_line": "{snip}  U(e,t,n){Array.isArray(e)?e.forEach(t,n):e&&t.call(n,e)}var F=null;function D(e){if(e){var t=e._dispatchListeners,n=e._dispatchInstances;if {snip}"
+            },
+            {
+              "function": "[native code] forEach",
+              "platform": "javascript",
+              "lineno": 0,
+              "colno": 0,
+              "in_app": false
+            },
+            {
+              "function": "D",
+              "abs_path": "app:///index.android.bundle",
+              "pre_context": [
+                "__d(function(e,t,i,a,r){'use strict';var s=t(r[0]),n=t(r[1]),o=(t(r[2]),t(r[3])),l=t(r[4]),c=t(r[5]),d=t(r[6]),p=t(r[7]),h=t(r[8]),m=t(r[9]) {snip}",
+                "__d(function(n,r,f,e,i){'use strict';var a=r(i[0]),l=function(n,r,f,e,i,l){var o=r[f];return void 0===o||null===o?n?new Error('Required '+i+ {snip}",
+                "__d(function(e,r,a,l,n){'use strict';function t(e,r,a){return a<0&&(a+=1),a>1&&(a-=1),a<.16666666666666666?e+6*(r-e)*a:a<.5?r:a<.66666666666 {snip}",
+                "__d(function(_,t,E,i,e){'use strict';var s=t(e[0]).__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.NativeMethodsMixin;E.exports=s},38,[39]);",
+                "__d(function(t,r,s,c,e){'use strict';var i;i=r(e[0]),s.exports=i},39,[40]);"
+              ],
+              "post_context": [
+                "__d(function(e,r,t,n,o){'use strict';var a=r(o[0]),i=a.polyfillObjectProperty,l=a.polyfillGlobal;void 0===e.GLOBAL&&(e.GLOBAL=e),void 0===e. {snip}",
+                "__d(function(e,l,r,o,t){'use strict';var i=l(t[0]);function n(e,l,r){var o=Object.getOwnPropertyDescriptor(e,l),t=o||{},n=t.enumerable,a=t.w {snip}",
+                "__d(function(n,t,o,r,e){'use strict';function f(t){var o=n[t];if(null==o)return!0;if('function'!=typeof n.Symbol)return!0;var r=o.prototype; {snip}",
+                "__d(function(e,t,r,n,i){'use strict';var a=t(i[0]),o=t(i[1]),u=t(i[2]),s=t(i[3]);r.exports=(function(e,t){if(!a('Map'))return e.Map;var r='k {snip}",
+                "__d(function(t,n,r,e,o){'use strict';r.exports=function(){return'f'+(1073741824*Math.random()).toString(16).replace('.','')}},45,[]);"
+              ],
+              "in_app": false,
+              "platform": "javascript",
+              "lineno": 41,
+              "colno": 3195,
+              "filename": "app:///index.android.bundle",
+              "context_line": "{snip} ed();r++)A(e,!1,t[r],n[r]);else t&&A(e,!1,t,n);e._dispatchListeners=null,e._dispatchInstances=null,e.isPersistent()||e.constructor.release(e {snip}"
+            },
+            {
+              "function": "A",
+              "abs_path": "app:///index.android.bundle",
+              "pre_context": [
+                "__d(function(e,t,i,a,r){'use strict';var s=t(r[0]),n=t(r[1]),o=(t(r[2]),t(r[3])),l=t(r[4]),c=t(r[5]),d=t(r[6]),p=t(r[7]),h=t(r[8]),m=t(r[9]) {snip}",
+                "__d(function(n,r,f,e,i){'use strict';var a=r(i[0]),l=function(n,r,f,e,i,l){var o=r[f];return void 0===o||null===o?n?new Error('Required '+i+ {snip}",
+                "__d(function(e,r,a,l,n){'use strict';function t(e,r,a){return a<0&&(a+=1),a>1&&(a-=1),a<.16666666666666666?e+6*(r-e)*a:a<.5?r:a<.66666666666 {snip}",
+                "__d(function(_,t,E,i,e){'use strict';var s=t(e[0]).__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.NativeMethodsMixin;E.exports=s},38,[39]);",
+                "__d(function(t,r,s,c,e){'use strict';var i;i=r(e[0]),s.exports=i},39,[40]);"
+              ],
+              "post_context": [
+                "__d(function(e,r,t,n,o){'use strict';var a=r(o[0]),i=a.polyfillObjectProperty,l=a.polyfillGlobal;void 0===e.GLOBAL&&(e.GLOBAL=e),void 0===e. {snip}",
+                "__d(function(e,l,r,o,t){'use strict';var i=l(t[0]);function n(e,l,r){var o=Object.getOwnPropertyDescriptor(e,l),t=o||{},n=t.enumerable,a=t.w {snip}",
+                "__d(function(n,t,o,r,e){'use strict';function f(t){var o=n[t];if(null==o)return!0;if('function'!=typeof n.Symbol)return!0;var r=o.prototype; {snip}",
+                "__d(function(e,t,r,n,i){'use strict';var a=t(i[0]),o=t(i[1]),u=t(i[2]),s=t(i[3]);r.exports=(function(e,t){if(!a('Map'))return e.Map;var r='k {snip}",
+                "__d(function(t,n,r,e,o){'use strict';r.exports=function(){return'f'+(1073741824*Math.random()).toString(16).replace('.','')}},45,[]);"
+              ],
+              "in_app": false,
+              "platform": "javascript",
+              "lineno": 41,
+              "colno": 2433,
+              "filename": "app:///index.android.bundle",
+              "context_line": "{snip} okeGuardedCallbackAndCatchFirstError(t,n,void 0,e),e.currentTarget=null}function H(e){var t=e._dispatchListeners,n=e._dispatchInstances;retu {snip}"
+            },
+            {
+              "function": "invokeGuardedCallbackAndCatchFirstError",
+              "abs_path": "app:///index.android.bundle",
+              "pre_context": [
+                "__d(function(e,t,i,a,r){'use strict';var s=t(r[0]),n=t(r[1]),o=(t(r[2]),t(r[3])),l=t(r[4]),c=t(r[5]),d=t(r[6]),p=t(r[7]),h=t(r[8]),m=t(r[9]) {snip}",
+                "__d(function(n,r,f,e,i){'use strict';var a=r(i[0]),l=function(n,r,f,e,i,l){var o=r[f];return void 0===o||null===o?n?new Error('Required '+i+ {snip}",
+                "__d(function(e,r,a,l,n){'use strict';function t(e,r,a){return a<0&&(a+=1),a>1&&(a-=1),a<.16666666666666666?e+6*(r-e)*a:a<.5?r:a<.66666666666 {snip}",
+                "__d(function(_,t,E,i,e){'use strict';var s=t(e[0]).__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.NativeMethodsMixin;E.exports=s},38,[39]);",
+                "__d(function(t,r,s,c,e){'use strict';var i;i=r(e[0]),s.exports=i},39,[40]);"
+              ],
+              "post_context": [
+                "__d(function(e,r,t,n,o){'use strict';var a=r(o[0]),i=a.polyfillObjectProperty,l=a.polyfillGlobal;void 0===e.GLOBAL&&(e.GLOBAL=e),void 0===e. {snip}",
+                "__d(function(e,l,r,o,t){'use strict';var i=l(t[0]);function n(e,l,r){var o=Object.getOwnPropertyDescriptor(e,l),t=o||{},n=t.enumerable,a=t.w {snip}",
+                "__d(function(n,t,o,r,e){'use strict';function f(t){var o=n[t];if(null==o)return!0;if('function'!=typeof n.Symbol)return!0;var r=o.prototype; {snip}",
+                "__d(function(e,t,r,n,i){'use strict';var a=t(i[0]),o=t(i[1]),u=t(i[2]),s=t(i[3]);r.exports=(function(e,t){if(!a('Map'))return e.Map;var r='k {snip}",
+                "__d(function(t,n,r,e,o){'use strict';r.exports=function(){return'f'+(1073741824*Math.random()).toString(16).replace('.','')}},45,[]);"
+              ],
+              "in_app": false,
+              "platform": "javascript",
+              "lineno": 41,
+              "colno": 634,
+              "filename": "app:///index.android.bundle",
+              "context_line": "{snip} ,u){if(v.invokeGuardedCallback.apply(this,arguments),v.hasCaughtError()){var s=v.clearCaughtError();v._hasRethrowError||(v._hasRethrowError= {snip}"
+            },
+            {
+              "function": "invokeGuardedCallback",
+              "abs_path": "app:///index.android.bundle",
+              "pre_context": [
+                "__d(function(e,t,i,a,r){'use strict';var s=t(r[0]),n=t(r[1]),o=(t(r[2]),t(r[3])),l=t(r[4]),c=t(r[5]),d=t(r[6]),p=t(r[7]),h=t(r[8]),m=t(r[9]) {snip}",
+                "__d(function(n,r,f,e,i){'use strict';var a=r(i[0]),l=function(n,r,f,e,i,l){var o=r[f];return void 0===o||null===o?n?new Error('Required '+i+ {snip}",
+                "__d(function(e,r,a,l,n){'use strict';function t(e,r,a){return a<0&&(a+=1),a>1&&(a-=1),a<.16666666666666666?e+6*(r-e)*a:a<.5?r:a<.66666666666 {snip}",
+                "__d(function(_,t,E,i,e){'use strict';var s=t(e[0]).__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.NativeMethodsMixin;E.exports=s},38,[39]);",
+                "__d(function(t,r,s,c,e){'use strict';var i;i=r(e[0]),s.exports=i},39,[40]);"
+              ],
+              "post_context": [
+                "__d(function(e,r,t,n,o){'use strict';var a=r(o[0]),i=a.polyfillObjectProperty,l=a.polyfillGlobal;void 0===e.GLOBAL&&(e.GLOBAL=e),void 0===e. {snip}",
+                "__d(function(e,l,r,o,t){'use strict';var i=l(t[0]);function n(e,l,r){var o=Object.getOwnPropertyDescriptor(e,l),t=o||{},n=t.enumerable,a=t.w {snip}",
+                "__d(function(n,t,o,r,e){'use strict';function f(t){var o=n[t];if(null==o)return!0;if('function'!=typeof n.Symbol)return!0;var r=o.prototype; {snip}",
+                "__d(function(e,t,r,n,i){'use strict';var a=t(i[0]),o=t(i[1]),u=t(i[2]),s=t(i[3]);r.exports=(function(e,t){if(!a('Map'))return e.Map;var r='k {snip}",
+                "__d(function(t,n,r,e,o){'use strict';r.exports=function(){return'f'+(1073741824*Math.random()).toString(16).replace('.','')}},45,[]);"
+              ],
+              "in_app": false,
+              "platform": "javascript",
+              "lineno": 41,
+              "colno": 519,
+              "filename": "app:///index.android.bundle",
+              "context_line": "{snip} :function(e,t,n,r,o,i,a,l,u){g.apply(v,arguments)},invokeGuardedCallbackAndCatchFirstError:function(e,t,n,r,o,i,a,l,u){if(v.invokeGuardedCal {snip}"
+            },
+            {
+              "function": "g",
+              "abs_path": "app:///index.android.bundle",
+              "pre_context": [
+                "__d(function(e,t,i,a,r){'use strict';var s=t(r[0]),n=t(r[1]),o=(t(r[2]),t(r[3])),l=t(r[4]),c=t(r[5]),d=t(r[6]),p=t(r[7]),h=t(r[8]),m=t(r[9]) {snip}",
+                "__d(function(n,r,f,e,i){'use strict';var a=r(i[0]),l=function(n,r,f,e,i,l){var o=r[f];return void 0===o||null===o?n?new Error('Required '+i+ {snip}",
+                "__d(function(e,r,a,l,n){'use strict';function t(e,r,a){return a<0&&(a+=1),a>1&&(a-=1),a<.16666666666666666?e+6*(r-e)*a:a<.5?r:a<.66666666666 {snip}",
+                "__d(function(_,t,E,i,e){'use strict';var s=t(e[0]).__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.NativeMethodsMixin;E.exports=s},38,[39]);",
+                "__d(function(t,r,s,c,e){'use strict';var i;i=r(e[0]),s.exports=i},39,[40]);"
+              ],
+              "post_context": [
+                "__d(function(e,r,t,n,o){'use strict';var a=r(o[0]),i=a.polyfillObjectProperty,l=a.polyfillGlobal;void 0===e.GLOBAL&&(e.GLOBAL=e),void 0===e. {snip}",
+                "__d(function(e,l,r,o,t){'use strict';var i=l(t[0]);function n(e,l,r){var o=Object.getOwnPropertyDescriptor(e,l),t=o||{},n=t.enumerable,a=t.w {snip}",
+                "__d(function(n,t,o,r,e){'use strict';function f(t){var o=n[t];if(null==o)return!0;if('function'!=typeof n.Symbol)return!0;var r=o.prototype; {snip}",
+                "__d(function(e,t,r,n,i){'use strict';var a=t(i[0]),o=t(i[1]),u=t(i[2]),s=t(i[3]);r.exports=(function(e,t){if(!a('Map'))return e.Map;var r='k {snip}",
+                "__d(function(t,n,r,e,o){'use strict';r.exports=function(){return'f'+(1073741824*Math.random()).toString(16).replace('.','')}},45,[]);"
+              ],
+              "in_app": false,
+              "platform": "javascript",
+              "lineno": 41,
+              "colno": 296,
+              "filename": "app:///index.android.bundle",
+              "context_line": "{snip} l;var s=Array.prototype.slice.call(arguments,3);try{t.apply(n,s)}catch(e){this._caughtError=e,this._hasCaughtError=!0}}var v={_caughtError:n {snip}"
+            },
+            {
+              "function": "touchableHandleResponderRelease",
+              "abs_path": "app:///index.android.bundle",
+              "pre_context": [
+                "__d(function(t,i,n,e,s){var h=i(s[0]);n.exports=h({initialize:function(t){this.reset().push(t)},push:function(){var t=Array.prototype.join.c {snip}",
+                "__d(function(t,x,y,i,n){var r=x(n[0]);function s(t,x,y,i,n,r){return t&&'object'==typeof t&&(x=t.yx,i=t.yy,r=t.y,y=t.xy,n=t.x,t=t.xx),this.x {snip}",
+                "__d(function(e,t,s,r,o){'use strict';var i=t(o[0]),a=(t(o[1]),t(o[2])),l=t(o[3]),n=t(o[4]),b=t(o[5]),c=t(o[6]),u=(t(o[7]),t(o[8])),d=t(o[9]) {snip}",
+                "__d(function(e,t,s,n,i){'use strict';var o=t(i[0]),r=t(i[1]),l=t(i[2]),a=t(i[3]),p=t(i[4]),h=t(i[5]),d=t(i[6]),u=t(i[7]),c=t(i[8]),R=t(i[9]) {snip}",
+                "__d(function(e,o,n,t,s){'use strict';var i=o(s[0]),l=o(s[1]),a=o(s[2]),r=o(s[3])(o(s[4]));n.exports={ellipsizeMode:a.oneOf(['head','middle', {snip}"
+              ],
+              "post_context": [
+                "__d(function(t,o,e,i,n){'use strict';var h=o(n[0]),r=h.twoArgumentPooler;function s(t,o){this.width=t,this.height=o}s.prototype.destructor=f {snip}",
+                "__d(function(t,n,o,e,i){'use strict';var r=n(i[0]),s=function(t){if(this.instancePool.length){var n=this.instancePool.pop();return this.call {snip}",
+                "__d(function(t,o,n,i,e){'use strict';var l=o(e[0]),r=l.twoArgumentPooler;function s(t,o){this.left=t,this.top=o}s.prototype.destructor=funct {snip}",
+                "__d(function(t,i,e,n,a){'use strict';i(a[0]);var v=i(a[1]).TVNavigationEventEmitter,o=i(a[2]);function _(){this.__nativeTVNavigationEventLis {snip}",
+                "__d(function(t,e,n,c,u){\"use strict\";n.exports={extractSingleTouch:function(t){var e=t.touches,n=t.changedTouches,c=e&&e.length>0,u=n&&n.len {snip}"
+              ],
+              "in_app": false,
+              "platform": "javascript",
+              "lineno": 167,
+              "colno": 4757,
+              "filename": "app:///index.android.bundle",
+              "context_line": "{snip} hableHandleResponderRelease:function(E){this._receiveSignal(u.RESPONDER_RELEASE,E)},touchableHandleResponderTerminate:function(E){this._rece {snip}"
+            },
+            {
+              "function": "_receiveSignal",
+              "abs_path": "app:///index.android.bundle",
+              "pre_context": [
+                "__d(function(t,i,n,e,s){var h=i(s[0]);n.exports=h({initialize:function(t){this.reset().push(t)},push:function(){var t=Array.prototype.join.c {snip}",
+                "__d(function(t,x,y,i,n){var r=x(n[0]);function s(t,x,y,i,n,r){return t&&'object'==typeof t&&(x=t.yx,i=t.yy,r=t.y,y=t.xy,n=t.x,t=t.xx),this.x {snip}",
+                "__d(function(e,t,s,r,o){'use strict';var i=t(o[0]),a=(t(o[1]),t(o[2])),l=t(o[3]),n=t(o[4]),b=t(o[5]),c=t(o[6]),u=(t(o[7]),t(o[8])),d=t(o[9]) {snip}",
+                "__d(function(e,t,s,n,i){'use strict';var o=t(i[0]),r=t(i[1]),l=t(i[2]),a=t(i[3]),p=t(i[4]),h=t(i[5]),d=t(i[6]),u=t(i[7]),c=t(i[8]),R=t(i[9]) {snip}",
+                "__d(function(e,o,n,t,s){'use strict';var i=o(s[0]),l=o(s[1]),a=o(s[2]),r=o(s[3])(o(s[4]));n.exports={ellipsizeMode:a.oneOf(['head','middle', {snip}"
+              ],
+              "post_context": [
+                "__d(function(t,o,e,i,n){'use strict';var h=o(n[0]),r=h.twoArgumentPooler;function s(t,o){this.width=t,this.height=o}s.prototype.destructor=f {snip}",
+                "__d(function(t,n,o,e,i){'use strict';var r=n(i[0]),s=function(t){if(this.instancePool.length){var n=this.instancePool.pop();return this.call {snip}",
+                "__d(function(t,o,n,i,e){'use strict';var l=o(e[0]),r=l.twoArgumentPooler;function s(t,o){this.left=t,this.top=o}s.prototype.destructor=funct {snip}",
+                "__d(function(t,i,e,n,a){'use strict';i(a[0]);var v=i(a[1]).TVNavigationEventEmitter,o=i(a[2]);function _(){this.__nativeTVNavigationEventLis {snip}",
+                "__d(function(t,e,n,c,u){\"use strict\";n.exports={extractSingleTouch:function(t){var e=t.touches,n=t.changedTouches,c=e&&e.length>0,u=n&&n.len {snip}"
+              ],
+              "in_app": false,
+              "platform": "javascript",
+              "lineno": 167,
+              "colno": 7292,
+              "filename": "app:///index.android.bundle",
+              "context_line": "{snip} der `'+t+'`');R!==i&&(this._performSideEffectsForTransition(R,i,E,e),this.state.touchable.touchState=i)}},_cancelLongPressDelayTimeout:funct {snip}"
+            },
+            {
+              "function": "_performSideEffectsForTransition",
+              "abs_path": "app:///index.android.bundle",
+              "pre_context": [
+                "__d(function(t,i,n,e,s){var h=i(s[0]);n.exports=h({initialize:function(t){this.reset().push(t)},push:function(){var t=Array.prototype.join.c {snip}",
+                "__d(function(t,x,y,i,n){var r=x(n[0]);function s(t,x,y,i,n,r){return t&&'object'==typeof t&&(x=t.yx,i=t.yy,r=t.y,y=t.xy,n=t.x,t=t.xx),this.x {snip}",
+                "__d(function(e,t,s,r,o){'use strict';var i=t(o[0]),a=(t(o[1]),t(o[2])),l=t(o[3]),n=t(o[4]),b=t(o[5]),c=t(o[6]),u=(t(o[7]),t(o[8])),d=t(o[9]) {snip}",
+                "__d(function(e,t,s,n,i){'use strict';var o=t(i[0]),r=t(i[1]),l=t(i[2]),a=t(i[3]),p=t(i[4]),h=t(i[5]),d=t(i[6]),u=t(i[7]),c=t(i[8]),R=t(i[9]) {snip}",
+                "__d(function(e,o,n,t,s){'use strict';var i=o(s[0]),l=o(s[1]),a=o(s[2]),r=o(s[3])(o(s[4]));n.exports={ellipsizeMode:a.oneOf(['head','middle', {snip}"
+              ],
+              "post_context": [
+                "__d(function(t,o,e,i,n){'use strict';var h=o(n[0]),r=h.twoArgumentPooler;function s(t,o){this.width=t,this.height=o}s.prototype.destructor=f {snip}",
+                "__d(function(t,n,o,e,i){'use strict';var r=n(i[0]),s=function(t){if(this.instancePool.length){var n=this.instancePool.pop();return this.call {snip}",
+                "__d(function(t,o,n,i,e){'use strict';var l=o(e[0]),r=l.twoArgumentPooler;function s(t,o){this.left=t,this.top=o}s.prototype.destructor=funct {snip}",
+                "__d(function(t,i,e,n,a){'use strict';i(a[0]);var v=i(a[1]).TVNavigationEventEmitter,o=i(a[2]);function _(){this.__nativeTVNavigationEventLis {snip}",
+                "__d(function(t,e,n,c,u){\"use strict\";n.exports={extractSingleTouch:function(t){var e=t.touches,n=t.changedTouches,c=e&&e.length>0,u=n&&n.len {snip}"
+              ],
+              "in_app": false,
+              "platform": "javascript",
+              "lineno": 167,
+              "colno": 8505,
+              "filename": "app:///index.android.bundle",
+              "context_line": "{snip} ghlight(R),this._endHighlight(R)),this.touchableHandlePress(R))}this.touchableDelayTimeout&&clearTimeout(this.touchableDelayTimeout),this.to {snip}"
+            },
+            {
+              "function": "touchableHandlePress",
+              "abs_path": "app:///index.android.bundle",
+              "pre_context": [
+                "__d(function(t,n,o,e,i){'use strict';var r=n(i[0]),s=function(t){if(this.instancePool.length){var n=this.instancePool.pop();return this.call {snip}",
+                "__d(function(t,o,n,i,e){'use strict';var l=o(e[0]),r=l.twoArgumentPooler;function s(t,o){this.left=t,this.top=o}s.prototype.destructor=funct {snip}",
+                "__d(function(t,i,e,n,a){'use strict';i(a[0]);var v=i(a[1]).TVNavigationEventEmitter,o=i(a[2]);function _(){this.__nativeTVNavigationEventLis {snip}",
+                "__d(function(t,e,n,c,u){\"use strict\";n.exports={extractSingleTouch:function(t){var e=t.touches,n=t.changedTouches,c=e&&e.length>0,u=n&&n.len {snip}",
+                "__d(function(r,n,t,i,o){'use strict';t.exports=function(r,n){var t={};for(var i in r)t[i]=r[i];for(var o in n)t[o]=n[o];return t}},172,[]);"
+              ],
+              "post_context": [
+                "__d(function(e,s,t,o,n){'use strict';var i=s(n[0]),r=s(n[1]),p=s(n[2]),a=s(n[3]),l=s(n[4]),c=s(n[5]),h=s(n[6]),u=s(n[7]),d=s(n[8]),y=d.Acces {snip}",
+                "__d(function(i,t,e,n,a){'use strict';var r='undefined'==typeof window?i:window,s=function(i,t,e){return function(n,a){var r=i(function(){t.c {snip}",
+                "__d(function(e,n,s,t,a){'use strict';var o=n(a[0]);s.exports=function(e){o(!(e.delayPressIn<0||e.delayPressOut<0||e.delayLongPress<0),'Touch {snip}",
+                "__d(function(t,e,s,i,o){'use strict';var n=e(o[0]),r=e(o[1]),a=e(o[2]),p=e(o[3]),c=e(o[4]),l=e(o[5]),h=e(o[6]),u=e(o[7]),d=e(o[8]),y=e(o[9]) {snip}",
+                "__d(function(e,t,n,a,o){'use strict';var m=t(o[0]),r=t(o[1]),i=t(o[2]),c=t(o[3]),d=t(o[4]),p={View:m.createAnimatedComponent(d),Text:m.creat {snip}"
+              ],
+              "in_app": false,
+              "platform": "javascript",
+              "lineno": 174,
+              "colno": 1566,
+              "filename": "app:///index.android.bundle",
+              "context_line": "{snip} dlePress:function(e){this.props.onPress&&this.props.onPress(e)},touchableHandleLongPress:function(e){this.props.onLongPress&&this.props.onLo {snip}"
+            },
+            {
+              "function": "onPress",
+              "abs_path": "app:///index.android.bundle",
+              "pre_context": [
+                "__d(function(t,e,n,i,r){'use strict';var o=e(r[0]),s=(e(r[1]),e(r[2])),a=e(r[3]),l=e(r[4]),c=(e(r[5]),e(r[6])),u=e(r[7]),p=(e(r[8]),e(r[9]), {snip}",
+                "__d(function(e,t,i,n,r){'use strict';var f=t(r[0]);i.exports=function(e,t){fetch(f().url+'open-stack-frame',{method:'POST',body:JSON.stringi {snip}",
+                "__d(function(t,r,o,e,u){'use strict';var c=r(u[0]).SourceCode,i=void 0,l='http://localhost:8081/';o.exports=function(){if(void 0===i){var t= {snip}",
+                "__d(function(e,r,t,n,a){'use strict';var s=r(a[0]),o=r(a[1]).SourceCode,c=void 0;t.exports=function(t){var n,u,i,d,f;return regeneratorRunti {snip}",
+                "__d(function(_,t,E,s,O){'use strict';var R=t(O[0]).__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;E.exports=R.takeSnapshot},304,[39]);"
+              ],
+              "post_context": [
+                "__d(function(e,t,n,r,u){'use strict';Object.defineProperty(r,\"__esModule\",{value:!0});var c=t(u[0]);Object.keys(c).forEach(function(e){\"defa {snip}",
+                "__d(function(e,t,n,a,r){Object.defineProperty(a,\"__esModule\",{value:!0}),a.Sentry=a.SentryLog=a.SentrySeverity=void 0;var i=t(r[0]),l=t(r[1] {snip}",
+                "__d(function(e,t,a,l,n){Object.defineProperty(l,\"__esModule\",{value:!0}),l.RavenClient=void 0;var u=t(n[0]),i=babelHelpers.interopRequireDef {snip}",
+                "__d(function(n,e,o,f,t){var d=e(t[0]),i='undefined'!=typeof window?window:void 0!==n?n:'undefined'!=typeof self?self:{},r=i.Raven,a=new d;a. {snip}",
+                "__d(function(t,e,r,n,a){var i=e(a[0]),s=e(a[1]),o=e(a[2]),l=e(a[3]),c=e(a[4]),u=c.isErrorEvent,h=c.isDOMError,p=c.isDOMException,_=c.isError {snip}"
+              ],
+              "in_app": true,
+              "platform": "javascript",
+              "lineno": 306,
+              "colno": 3731,
+              "filename": "app:///index.android.bundle",
+              "context_line": "{snip} {style:{fontSize:12,color:'green'},styleDisabled:{color:'red'},onPress:function(){return e._referenceError()},accessibilityLabel:'ReferenceE {snip}"
+            },
+            {
+              "function": "value",
+              "abs_path": "app:///index.android.bundle",
+              "pre_context": [
+                "__d(function(t,e,n,i,r){'use strict';var o=e(r[0]),s=(e(r[1]),e(r[2])),a=e(r[3]),l=e(r[4]),c=(e(r[5]),e(r[6])),u=e(r[7]),p=(e(r[8]),e(r[9]), {snip}",
+                "__d(function(e,t,i,n,r){'use strict';var f=t(r[0]);i.exports=function(e,t){fetch(f().url+'open-stack-frame',{method:'POST',body:JSON.stringi {snip}",
+                "__d(function(t,r,o,e,u){'use strict';var c=r(u[0]).SourceCode,i=void 0,l='http://localhost:8081/';o.exports=function(){if(void 0===i){var t= {snip}",
+                "__d(function(e,r,t,n,a){'use strict';var s=r(a[0]),o=r(a[1]).SourceCode,c=void 0;t.exports=function(t){var n,u,i,d,f;return regeneratorRunti {snip}",
+                "__d(function(_,t,E,s,O){'use strict';var R=t(O[0]).__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;E.exports=R.takeSnapshot},304,[39]);"
+              ],
+              "post_context": [
+                "__d(function(e,t,n,r,u){'use strict';Object.defineProperty(r,\"__esModule\",{value:!0});var c=t(u[0]);Object.keys(c).forEach(function(e){\"defa {snip}",
+                "__d(function(e,t,n,a,r){Object.defineProperty(a,\"__esModule\",{value:!0}),a.Sentry=a.SentryLog=a.SentrySeverity=void 0;var i=t(r[0]),l=t(r[1] {snip}",
+                "__d(function(e,t,a,l,n){Object.defineProperty(l,\"__esModule\",{value:!0}),l.RavenClient=void 0;var u=t(n[0]),i=babelHelpers.interopRequireDef {snip}",
+                "__d(function(n,e,o,f,t){var d=e(t[0]),i='undefined'!=typeof window?window:void 0!==n?n:'undefined'!=typeof self?self:{},r=i.Raven,a=new d;a. {snip}",
+                "__d(function(t,e,r,n,a){var i=e(a[0]),s=e(a[1]),o=e(a[2]),l=e(a[3]),c=e(a[4]),u=c.isErrorEvent,h=c.isDOMError,p=c.isDOMException,_=c.isError {snip}"
+              ],
+              "in_app": true,
+              "platform": "javascript",
+              "lineno": 306,
+              "colno": 2622,
+              "filename": "app:///index.android.bundle",
+              "context_line": "{snip} .createElement(_reactNative.Button,{style:{fontSize:12,color:'green'},styleDisabled:{color:'red'},onPress:function(){return e._notAFunctionE {snip}"
+            }
+          ]
+        },
+        "module": "",
+        "value": "undefined is not a function (evaluating '({}).invalidFunction()')",
+        "type": "TypeError"
+      }
+    ]
+  },
+  "release": "com.reactnativedemo-1.1"
+}
diff --git a/tests/sentry/event_hashing/fixtures/react-native.out b/tests/sentry/event_hashing/fixtures/react-native.out
new file mode 100644
index 0000000000..f6c7bda24a
--- /dev/null
+++ b/tests/sentry/event_hashing/fixtures/react-native.out
@@ -0,0 +1,405 @@
+app:
+  hash: None
+  component:
+    app (exception of system takes precedence)
+      exception (ignored because this variant does not contain a stacktrace, but but the system variant does)
+        stacktrace (less than 10% of frames are in-app)
+          frame (non app frame)
+            module*
+              u'react-native/Libraries/BatchedBridge/MessageQueue'
+            filename (module takes precedence)
+              u'node_modules/react-native/Libraries/BatchedBridge/MessageQueue.js'
+            context-line*
+              u'    return this.flushedQueue();'
+            function (line number is used only if module or filename are available)
+              119
+          frame (non app frame)
+            module*
+              u'react-native/Libraries/BatchedBridge/MessageQueue'
+            filename (module takes precedence)
+              u'node_modules/react-native/Libraries/BatchedBridge/MessageQueue.js'
+            context-line*
+              u'      this._inCall--;'
+            function (line number is used only if module or filename are available)
+              318
+          frame (non app frame)
+            module*
+              u'react-native/Libraries/BatchedBridge/MessageQueue'
+            filename (module takes precedence)
+              u'node_modules/react-native/Libraries/BatchedBridge/MessageQueue.js'
+            context-line*
+              u'    return this.flushedQueue();'
+            function (line number is used only if module or filename are available)
+              119
+          frame (non app frame)
+            module*
+              u'react-native/Libraries/BatchedBridge/MessageQueue'
+            filename (module takes precedence)
+              u'node_modules/react-native/Libraries/BatchedBridge/MessageQueue.js'
+            context-line*
+              u'    this._lastFlush = new Date().getTime();'
+            function (line number is used only if module or filename are available)
+              357
+          frame (non app frame)
+            module*
+              u'react-native/Libraries/Renderer/ReactNativeRenderer-prod'
+            filename (module takes precedence)
+              u'node_modules/react-native/Libraries/Renderer/ReactNativeRenderer-prod.js'
+            context-line*
+              u'      _receiveRootNodeIDEvent(index, eventTopLevelType, i);'
+            function (line number is used only if module or filename are available)
+              1160
+          frame (non app frame)
+            module*
+              u'react-native/Libraries/Renderer/ReactNativeRenderer-prod'
+            filename (module takes precedence)
+              u'node_modules/react-native/Libraries/Renderer/ReactNativeRenderer-prod.js'
+            context-line*
+              u'  batchedUpdates(function() {'
+            function (line number is used only if module or filename are available)
+              1095
+          frame (non app frame)
+            module*
+              u'react-native/Libraries/Renderer/ReactNativeRenderer-prod'
+            filename (module takes precedence)
+              u'node_modules/react-native/Libraries/Renderer/ReactNativeRenderer-prod.js'
+            context-line*
+              u'    return _batchedUpdates(fn, bookkeeping);'
+            function (line number is used only if module or filename are available)
+              1054
+          frame (non app frame)
+            module*
+              u'react-native/Libraries/Renderer/ReactNativeRenderer-prod'
+            filename (module takes precedence)
+              u'node_modules/react-native/Libraries/Renderer/ReactNativeRenderer-prod.js'
+            context-line*
+              u'        return fn(a);'
+            function (line number is used only if module or filename are available)
+              5928
+          frame (non app frame)
+            module*
+              u'react-native/Libraries/Renderer/ReactNativeRenderer-prod'
+            filename (module takes precedence)
+              u'node_modules/react-native/Libraries/Renderer/ReactNativeRenderer-prod.js'
+            context-line*
+              u'      (forEachAccumulated(events, executeDispatchesAndReleaseTopLevel),'
+            function (line number is used only if module or filename are available)
+              1113
+          frame (non app frame)
+            module*
+              u'react-native/Libraries/Renderer/ReactNativeRenderer-prod'
+            filename (module takes precedence)
+              u'node_modules/react-native/Libraries/Renderer/ReactNativeRenderer-prod.js'
+            context-line*
+              u'  Array.isArray(arr) ? arr.forEach(cb, scope) : arr && cb.call(scope, arr);'
+            function (line number is used only if module or filename are available)
+              219
+          frame (non app frame)
+            function (function name is used only if module or filename are available)
+              u'[native code] forEach'
+          frame (non app frame)
+            module*
+              u'react-native/Libraries/Renderer/ReactNativeRenderer-prod'
+            filename (module takes precedence)
+              u'node_modules/react-native/Libraries/Renderer/ReactNativeRenderer-prod.js'
+            context-line*
+              u'        executeDispatch(e, !1, dispatchListeners, dispatchInstances);'
+            function (line number is used only if module or filename are available)
+              235
+          frame (non app frame)
+            module*
+              u'react-native/Libraries/Renderer/ReactNativeRenderer-prod'
+            filename (module takes precedence)
+              u'node_modules/react-native/Libraries/Renderer/ReactNativeRenderer-prod.js'
+            context-line*
+              u'  ReactErrorUtils.invokeGuardedCallbackAndCatchFirstError('
+            function (line number is used only if module or filename are available)
+              181
+          frame (non app frame)
+            module*
+              u'react-native/Libraries/Renderer/ReactNativeRenderer-prod'
+            filename (module takes precedence)
+              u'node_modules/react-native/Libraries/Renderer/ReactNativeRenderer-prod.js'
+            context-line*
+              u'    ReactErrorUtils.invokeGuardedCallback.apply(this, arguments);'
+            function (line number is used only if module or filename are available)
+              54
+          frame (non app frame)
+            module*
+              u'react-native/Libraries/Renderer/ReactNativeRenderer-prod'
+            filename (module takes precedence)
+              u'node_modules/react-native/Libraries/Renderer/ReactNativeRenderer-prod.js'
+            context-line*
+              u'    invokeGuardedCallback.apply(ReactErrorUtils, arguments);'
+            function (line number is used only if module or filename are available)
+              41
+          frame (non app frame)
+            module*
+              u'react-native/Libraries/Renderer/ReactNativeRenderer-prod'
+            filename (module takes precedence)
+              u'node_modules/react-native/Libraries/Renderer/ReactNativeRenderer-prod.js'
+            context-line*
+              u'  var funcArgs = Array.prototype.slice.call(arguments, 3);'
+            function (line number is used only if module or filename are available)
+              28
+          frame (non app frame)
+            module*
+              u'react-native/Libraries/Components/Touchable/Touchable'
+            filename (module takes precedence)
+              u'node_modules/react-native/Libraries/Components/Touchable/Touchable.js'
+            context-line*
+              u'  touchableHandleResponderRelease: function(e) {'
+            function (line number is used only if module or filename are available)
+              430
+          frame (non app frame)
+            module*
+              u'react-native/Libraries/Components/Touchable/Touchable'
+            filename (module takes precedence)
+              u'node_modules/react-native/Libraries/Components/Touchable/Touchable.js'
+            context-line*
+              u'      this._performSideEffectsForTransition(curState, nextState, signal, e);'
+            function (line number is used only if module or filename are available)
+              662
+          frame (non app frame)
+            module*
+              u'react-native/Libraries/Components/Touchable/Touchable'
+            filename (module takes precedence)
+              u'node_modules/react-native/Libraries/Components/Touchable/Touchable.js'
+            context-line*
+              u'        this.touchableHandlePress(e);'
+            function (line number is used only if module or filename are available)
+              744
+          frame (non app frame)
+            module*
+              u'react-native/Libraries/Components/Touchable/TouchableNativeFeedback.android'
+            filename (module takes precedence)
+              u'node_modules/react-native/Libraries/Components/Touchable/TouchableNativeFeedback.android.js'
+            context-line*
+              u'    this.props.onPress && this.props.onPress(e);'
+            function (line number is used only if module or filename are available)
+              175
+          frame*
+            module*
+              u'App'
+            filename (module takes precedence)
+              u'App.js'
+            context-line*
+              u'        <Button'
+            function (line number is used only if module or filename are available)
+              143
+          frame*
+            module*
+              u'App'
+            filename (module takes precedence)
+              u'App.js'
+            context-line*
+              u'        <Button'
+            function (line number is used only if module or filename are available)
+              115
+        type*
+          u'TypeError'
+        value*
+          u"undefined is not a function (evaluating '({}).invalidFunction()')"
+--------------------------------------------------------------------------
+system:
+  hash: 'f8f4d8cbe0c85758ed193d0f5d9955b3'
+  component:
+    system*
+      exception*
+        stacktrace*
+          frame*
+            module*
+              u'react-native/Libraries/BatchedBridge/MessageQueue'
+            filename (module takes precedence)
+              u'node_modules/react-native/Libraries/BatchedBridge/MessageQueue.js'
+            context-line*
+              u'    return this.flushedQueue();'
+            function (line number is used only if module or filename are available)
+              119
+          frame*
+            module*
+              u'react-native/Libraries/BatchedBridge/MessageQueue'
+            filename (module takes precedence)
+              u'node_modules/react-native/Libraries/BatchedBridge/MessageQueue.js'
+            context-line*
+              u'      this._inCall--;'
+            function (line number is used only if module or filename are available)
+              318
+          frame*
+            module*
+              u'react-native/Libraries/BatchedBridge/MessageQueue'
+            filename (module takes precedence)
+              u'node_modules/react-native/Libraries/BatchedBridge/MessageQueue.js'
+            context-line*
+              u'    return this.flushedQueue();'
+            function (line number is used only if module or filename are available)
+              119
+          frame*
+            module*
+              u'react-native/Libraries/BatchedBridge/MessageQueue'
+            filename (module takes precedence)
+              u'node_modules/react-native/Libraries/BatchedBridge/MessageQueue.js'
+            context-line*
+              u'    this._lastFlush = new Date().getTime();'
+            function (line number is used only if module or filename are available)
+              357
+          frame*
+            module*
+              u'react-native/Libraries/Renderer/ReactNativeRenderer-prod'
+            filename (module takes precedence)
+              u'node_modules/react-native/Libraries/Renderer/ReactNativeRenderer-prod.js'
+            context-line*
+              u'      _receiveRootNodeIDEvent(index, eventTopLevelType, i);'
+            function (line number is used only if module or filename are available)
+              1160
+          frame*
+            module*
+              u'react-native/Libraries/Renderer/ReactNativeRenderer-prod'
+            filename (module takes precedence)
+              u'node_modules/react-native/Libraries/Renderer/ReactNativeRenderer-prod.js'
+            context-line*
+              u'  batchedUpdates(function() {'
+            function (line number is used only if module or filename are available)
+              1095
+          frame*
+            module*
+              u'react-native/Libraries/Renderer/ReactNativeRenderer-prod'
+            filename (module takes precedence)
+              u'node_modules/react-native/Libraries/Renderer/ReactNativeRenderer-prod.js'
+            context-line*
+              u'    return _batchedUpdates(fn, bookkeeping);'
+            function (line number is used only if module or filename are available)
+              1054
+          frame*
+            module*
+              u'react-native/Libraries/Renderer/ReactNativeRenderer-prod'
+            filename (module takes precedence)
+              u'node_modules/react-native/Libraries/Renderer/ReactNativeRenderer-prod.js'
+            context-line*
+              u'        return fn(a);'
+            function (line number is used only if module or filename are available)
+              5928
+          frame*
+            module*
+              u'react-native/Libraries/Renderer/ReactNativeRenderer-prod'
+            filename (module takes precedence)
+              u'node_modules/react-native/Libraries/Renderer/ReactNativeRenderer-prod.js'
+            context-line*
+              u'      (forEachAccumulated(events, executeDispatchesAndReleaseTopLevel),'
+            function (line number is used only if module or filename are available)
+              1113
+          frame*
+            module*
+              u'react-native/Libraries/Renderer/ReactNativeRenderer-prod'
+            filename (module takes precedence)
+              u'node_modules/react-native/Libraries/Renderer/ReactNativeRenderer-prod.js'
+            context-line*
+              u'  Array.isArray(arr) ? arr.forEach(cb, scope) : arr && cb.call(scope, arr);'
+            function (line number is used only if module or filename are available)
+              219
+          frame
+            function (function name is used only if module or filename are available)
+              u'[native code] forEach'
+          frame*
+            module*
+              u'react-native/Libraries/Renderer/ReactNativeRenderer-prod'
+            filename (module takes precedence)
+              u'node_modules/react-native/Libraries/Renderer/ReactNativeRenderer-prod.js'
+            context-line*
+              u'        executeDispatch(e, !1, dispatchListeners, dispatchInstances);'
+            function (line number is used only if module or filename are available)
+              235
+          frame*
+            module*
+              u'react-native/Libraries/Renderer/ReactNativeRenderer-prod'
+            filename (module takes precedence)
+              u'node_modules/react-native/Libraries/Renderer/ReactNativeRenderer-prod.js'
+            context-line*
+              u'  ReactErrorUtils.invokeGuardedCallbackAndCatchFirstError('
+            function (line number is used only if module or filename are available)
+              181
+          frame*
+            module*
+              u'react-native/Libraries/Renderer/ReactNativeRenderer-prod'
+            filename (module takes precedence)
+              u'node_modules/react-native/Libraries/Renderer/ReactNativeRenderer-prod.js'
+            context-line*
+              u'    ReactErrorUtils.invokeGuardedCallback.apply(this, arguments);'
+            function (line number is used only if module or filename are available)
+              54
+          frame*
+            module*
+              u'react-native/Libraries/Renderer/ReactNativeRenderer-prod'
+            filename (module takes precedence)
+              u'node_modules/react-native/Libraries/Renderer/ReactNativeRenderer-prod.js'
+            context-line*
+              u'    invokeGuardedCallback.apply(ReactErrorUtils, arguments);'
+            function (line number is used only if module or filename are available)
+              41
+          frame*
+            module*
+              u'react-native/Libraries/Renderer/ReactNativeRenderer-prod'
+            filename (module takes precedence)
+              u'node_modules/react-native/Libraries/Renderer/ReactNativeRenderer-prod.js'
+            context-line*
+              u'  var funcArgs = Array.prototype.slice.call(arguments, 3);'
+            function (line number is used only if module or filename are available)
+              28
+          frame*
+            module*
+              u'react-native/Libraries/Components/Touchable/Touchable'
+            filename (module takes precedence)
+              u'node_modules/react-native/Libraries/Components/Touchable/Touchable.js'
+            context-line*
+              u'  touchableHandleResponderRelease: function(e) {'
+            function (line number is used only if module or filename are available)
+              430
+          frame*
+            module*
+              u'react-native/Libraries/Components/Touchable/Touchable'
+            filename (module takes precedence)
+              u'node_modules/react-native/Libraries/Components/Touchable/Touchable.js'
+            context-line*
+              u'      this._performSideEffectsForTransition(curState, nextState, signal, e);'
+            function (line number is used only if module or filename are available)
+              662
+          frame*
+            module*
+              u'react-native/Libraries/Components/Touchable/Touchable'
+            filename (module takes precedence)
+              u'node_modules/react-native/Libraries/Components/Touchable/Touchable.js'
+            context-line*
+              u'        this.touchableHandlePress(e);'
+            function (line number is used only if module or filename are available)
+              744
+          frame*
+            module*
+              u'react-native/Libraries/Components/Touchable/TouchableNativeFeedback.android'
+            filename (module takes precedence)
+              u'node_modules/react-native/Libraries/Components/Touchable/TouchableNativeFeedback.android.js'
+            context-line*
+              u'    this.props.onPress && this.props.onPress(e);'
+            function (line number is used only if module or filename are available)
+              175
+          frame*
+            module*
+              u'App'
+            filename (module takes precedence)
+              u'App.js'
+            context-line*
+              u'        <Button'
+            function (line number is used only if module or filename are available)
+              143
+          frame*
+            module*
+              u'App'
+            filename (module takes precedence)
+              u'App.js'
+            context-line*
+              u'        <Button'
+            function (line number is used only if module or filename are available)
+              115
+        type*
+          u'TypeError'
+        value (stacktrace and type take precedence)
+          u"undefined is not a function (evaluating '({}).invalidFunction()')"
diff --git a/tests/sentry/event_hashing/test_variants.py b/tests/sentry/event_hashing/test_variants.py
new file mode 100644
index 0000000000..6e8b29c10a
--- /dev/null
+++ b/tests/sentry/event_hashing/test_variants.py
@@ -0,0 +1,78 @@
+# -*- coding: utf-8 -*-
+
+from __future__ import absolute_import, print_function
+
+import os
+import sys
+import json
+import pytest
+
+from sentry.models import Event
+from sentry.event_manager import EventManager
+from sentry.event_hashing import GroupingComponent
+
+
+def log(x):
+    return sys.stdout.write(x + '\n')
+
+
+def dump_variant(variant, lines=None, indent=0):
+    if lines is None:
+        lines = []
+
+    def _dump_component(component, indent):
+        if not component.hint and not component.values:
+            return
+        lines.append('%s%s%s%s' % (
+            '  ' * indent,
+            component.id,
+            component.contributes and '*' or '',
+            component.hint and ' (%s)' % component.hint or '',
+        ))
+        for value in component.values:
+            if isinstance(value, GroupingComponent):
+                _dump_component(value, indent + 1)
+            else:
+                lines.append('  ' * (indent + 1) + repr(value))
+
+    lines.append('%shash: %r' % ('  ' * indent, variant.get_hash()))
+    for (key, value) in sorted(variant.__dict__.items()):
+        if isinstance(value, GroupingComponent):
+            lines.append('%s%s:' % ('  ' * indent, key))
+            _dump_component(value, indent + 1)
+        else:
+            lines.append('%s%s: %r' % ('  ' * indent, key, value))
+
+    return lines
+
+
+_fixture_path = os.path.join(os.path.dirname(__file__), 'fixtures')
+
+
+@pytest.mark.parametrize('infile', list(x[:-5] for x in os.listdir(_fixture_path)
+                                        if x.endswith('.json')))
+def test_event_hash_variant(infile):
+    with open(os.path.join(_fixture_path, infile + '.json')) as f:
+        input = json.load(f)
+    with open(os.path.join(_fixture_path, infile + '.out')) as f:
+        refval = f.read().decode('utf-8').rstrip()
+
+    mgr = EventManager(data=input)
+    mgr.normalize()
+    evt = Event(data=mgr.get_data())
+
+    rv = []
+    for (key, value) in sorted(evt.get_grouping_variants().items()):
+        if rv:
+            rv.append('-' * 74)
+        rv.append('%s:' % key)
+        dump_variant(value, rv, 1)
+    output = '\n'.join(rv)
+    if not refval:
+        log(output)
+    log(repr(evt.get_hashes()))
+
+    assert sorted(evt.get_hashes()) == sorted(
+        filter(None, [x.get_hash() for x in evt.get_grouping_variants().values()]))
+
+    assert output == refval
diff --git a/tests/sentry/event_manager/test_event_manager.py b/tests/sentry/event_manager/test_event_manager.py
index e5fe45fa88..7f9cdd1284 100644
--- a/tests/sentry/event_manager/test_event_manager.py
+++ b/tests/sentry/event_manager/test_event_manager.py
@@ -15,7 +15,7 @@ from time import time
 from sentry.app import tsdb
 from sentry.constants import VERSION_LENGTH
 from sentry.event_manager import HashDiscarded, EventManager, EventUser
-from sentry.event_hashing import md5_from_hash
+from sentry.event_hashing import hash_from_values
 from sentry.models import (
     Activity, Environment, Event, ExternalIssue, Group, GroupEnvironment,
     GroupHash, GroupLink, GroupRelease, GroupResolution, GroupStatus,
@@ -1263,7 +1263,7 @@ class EventManagerTest(TransactionTestCase):
         event = manager.save(self.project.id)
 
         hashes = [gh.hash for gh in GroupHash.objects.filter(group=event.group)]
-        assert hashes == [md5_from_hash(checksum), checksum]
+        assert hashes == [hash_from_values(checksum), checksum]
 
     @mock.patch('sentry.event_manager.is_valid_error_message')
     def test_should_filter_message(self, mock_is_valid_error_message):
diff --git a/tests/sentry/event_manager/test_generate_culprit.py b/tests/sentry/event_manager/test_generate_culprit.py
index 29c16ab120..db990ac42a 100644
--- a/tests/sentry/event_manager/test_generate_culprit.py
+++ b/tests/sentry/event_manager/test_generate_culprit.py
@@ -4,7 +4,7 @@ from __future__ import absolute_import
 
 from sentry.constants import MAX_CULPRIT_LENGTH
 from sentry.event_manager import generate_culprit
-from sentry.event_hashing import md5_from_hash
+from sentry.event_hashing import hash_from_values
 
 
 def test_with_exception_interface():
@@ -177,6 +177,6 @@ def test_truncation():
     assert len(generate_culprit(data)) == MAX_CULPRIT_LENGTH
 
 
-def test_md5_from_hash():
-    result = md5_from_hash(['foo', 'bar', u'foô'])
+def test_hash_from_values():
+    result = hash_from_values(['foo', 'bar', u'foô'])
     assert result == '6d81588029ed4190110b2779ba952a00'
diff --git a/tests/sentry/event_manager/test_get_hashes_from_fingerprint.py b/tests/sentry/event_manager/test_get_hashes_from_fingerprint.py
index e56cfacff3..f9db3b194c 100644
--- a/tests/sentry/event_manager/test_get_hashes_from_fingerprint.py
+++ b/tests/sentry/event_manager/test_get_hashes_from_fingerprint.py
@@ -5,7 +5,7 @@ from __future__ import absolute_import, print_function
 import mock
 
 from sentry.models import Event
-from sentry.event_hashing import md5_from_hash
+from sentry.event_hashing import hash_from_values
 
 
 @mock.patch('sentry.interfaces.stacktrace.Stacktrace.compute_hashes')
@@ -34,4 +34,4 @@ def test_stacktrace_wins_over_http(http_comp_hash, stack_comp_hash):
     hash_one = hashes[0]
     stack_comp_hash.assert_called_once_with('python')
     assert not http_comp_hash.called
-    assert hash_one == md5_from_hash(['foo', 'bar'])
+    assert hash_one == hash_from_values(['foo', 'bar'])
diff --git a/tests/sentry/interfaces/test_message.py b/tests/sentry/interfaces/test_message.py
index e10cdf555d..0fc8ca2471 100644
--- a/tests/sentry/interfaces/test_message.py
+++ b/tests/sentry/interfaces/test_message.py
@@ -37,6 +37,27 @@ class MessageTest(TestCase):
         ))
         assert interface.compute_hashes() == [[interface.formatted]]
 
+    def test_grouping_components_prefers_message(self):
+        assert self.interface.get_grouping_component().as_dict() == {
+            'hint': None,
+            'id': 'message',
+            'contributes': True,
+            'values': ['Hello there %s!'],
+        }
+
+    def test_grouping_component_uses_formatted(self):
+        interface = Message.to_python(dict(
+            message=None,
+            params=(),
+            formatted='Hello there world!'
+        ))
+        assert interface.get_grouping_component().as_dict() == {
+            'hint': None,
+            'id': 'message',
+            'contributes': True,
+            'values': ['Hello there world!'],
+        }
+
     def test_format_kwargs(self):
         interface = Message.to_python(dict(
             message='Hello there %(name)s!',
diff --git a/tests/sentry/interfaces/test_stacktrace.py b/tests/sentry/interfaces/test_stacktrace.py
index eaa3714d74..335fb4fcab 100644
--- a/tests/sentry/interfaces/test_stacktrace.py
+++ b/tests/sentry/interfaces/test_stacktrace.py
@@ -172,12 +172,6 @@ class StacktraceTest(TestCase):
             ['foo.py', 1],
         ])
 
-        result = interface.get_hashes()
-        assert result == {
-            'system': ['foo.py', 1, 'bar.py', 1],
-            'app': ['foo.py', 1],
-        }
-
     def test_compute_hashes(self):
         interface = Stacktrace.to_python(
             dict(
@@ -198,12 +192,6 @@ class StacktraceTest(TestCase):
         result = interface.compute_hashes('python')
         assert sorted(result) == sorted([['a/foo.py', 1, 'a/bar.py', 1], ['a/foo.py', 1]])
 
-        result = interface.get_hashes('python')
-        assert result == {
-            'system': ['a/foo.py', 1, 'a/bar.py', 1],
-            'app': ['a/foo.py', 1],
-        }
-
     def test_compute_hashes_cocoa(self):
         interface = Stacktrace.to_python(
             dict(
