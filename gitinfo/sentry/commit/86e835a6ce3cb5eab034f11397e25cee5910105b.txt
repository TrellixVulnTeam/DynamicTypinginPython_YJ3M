commit 86e835a6ce3cb5eab034f11397e25cee5910105b
Author: evanh <evanh@users.noreply.github.com>
Date:   Mon Feb 24 09:12:58 2020 -0500

    fix(discover) Make query parse error a little better (#17193)
    
    Before we would return an error that exposed the internal grammar structure and
    wasn't useful to a user. Instead, show the exact place in the query that had the
    syntax error.

diff --git a/src/sentry/api/event_search.py b/src/sentry/api/event_search.py
index d2e9e75072..3b759a29a9 100644
--- a/src/sentry/api/event_search.py
+++ b/src/sentry/api/event_search.py
@@ -576,10 +576,13 @@ def parse_search_query(query):
     try:
         tree = event_search_grammar.parse(query)
     except IncompleteParseError as e:
+        idx = e.column()
+        prefix = query[max(0, idx - 5):idx]
+        suffix = query[idx:(idx + 5)]
         raise InvalidSearchQuery(
             u"{} {}".format(
-                u"Parse error: '{}' (column {:d}).".format(e.expr.name, e.column()),
-                "This is commonly caused by unmatched-parentheses. Enclose any text in double quotes.",
+                u"Parse error at '{}{}' (column {:d}).".format(prefix, suffix, e.column()),
+                "This is commonly caused by unmatched parentheses. Enclose any text in double quotes.",
             )
         )
     return SearchVisitor().visit(tree)
diff --git a/tests/sentry/api/test_event_search.py b/tests/sentry/api/test_event_search.py
index 6017302eed..ac413d7540 100644
--- a/tests/sentry/api/test_event_search.py
+++ b/tests/sentry/api/test_event_search.py
@@ -837,7 +837,7 @@ class ParseBooleanSearchQueryTest(unittest.TestCase):
             parse_search_query("(user.email:foo@example.com OR user.email:bar@example.com")
         assert (
             six.text_type(error.value)
-            == "Parse error: 'search' (column 1). This is commonly caused by unmatched-parentheses. Enclose any text in double quotes."
+            == "Parse error at '(user.' (column 1). This is commonly caused by unmatched parentheses. Enclose any text in double quotes."
         )
         with pytest.raises(InvalidSearchQuery) as error:
             parse_search_query(
@@ -845,13 +845,13 @@ class ParseBooleanSearchQueryTest(unittest.TestCase):
             )
         assert (
             six.text_type(error.value)
-            == "Parse error: 'search' (column 1). This is commonly caused by unmatched-parentheses. Enclose any text in double quotes."
+            == "Parse error at '((user' (column 1). This is commonly caused by unmatched parentheses. Enclose any text in double quotes."
         )
         with pytest.raises(InvalidSearchQuery) as error:
             parse_search_query("user.email:foo@example.com OR user.email:bar@example.com)")
         assert (
             six.text_type(error.value)
-            == "Parse error: 'search' (column 57). This is commonly caused by unmatched-parentheses. Enclose any text in double quotes."
+            == "Parse error at '.com)' (column 57). This is commonly caused by unmatched parentheses. Enclose any text in double quotes."
         )
         with pytest.raises(InvalidSearchQuery) as error:
             parse_search_query(
@@ -859,7 +859,7 @@ class ParseBooleanSearchQueryTest(unittest.TestCase):
             )
         assert (
             six.text_type(error.value)
-            == "Parse error: 'search' (column 91). This is commonly caused by unmatched-parentheses. Enclose any text in double quotes."
+            == "Parse error at 'com))' (column 91). This is commonly caused by unmatched parentheses. Enclose any text in double quotes."
         )
 
     def test_grouping_without_boolean_terms(self):
@@ -875,7 +875,7 @@ class ParseBooleanSearchQueryTest(unittest.TestCase):
             ]
         assert (
             six.text_type(error.value)
-            == "Parse error: 'search' (column 28). This is commonly caused by unmatched-parentheses. Enclose any text in double quotes."
+            == "Parse error at 'ect (evalu' (column 28). This is commonly caused by unmatched parentheses. Enclose any text in double quotes."
         )
 
 
diff --git a/tests/snuba/api/endpoints/test_organization_events.py b/tests/snuba/api/endpoints/test_organization_events.py
index e0dde1119b..70725c43c4 100644
--- a/tests/snuba/api/endpoints/test_organization_events.py
+++ b/tests/snuba/api/endpoints/test_organization_events.py
@@ -148,7 +148,7 @@ class OrganizationEventsEndpointTest(APITestCase, SnubaTestCase):
         assert response.status_code == 400, response.content
         assert (
             response.data["detail"]
-            == "Parse error: 'search' (column 4). This is commonly caused by unmatched-parentheses. Enclose any text in double quotes."
+            == "Parse error at 'hi \n ther' (column 4). This is commonly caused by unmatched parentheses. Enclose any text in double quotes."
         )
 
     def test_project_filtering(self):
diff --git a/tests/snuba/api/endpoints/test_organization_events_facets.py b/tests/snuba/api/endpoints/test_organization_events_facets.py
index 1c3b12ba9c..54df58254d 100644
--- a/tests/snuba/api/endpoints/test_organization_events_facets.py
+++ b/tests/snuba/api/endpoints/test_organization_events_facets.py
@@ -372,7 +372,7 @@ class OrganizationEventsFacetsEndpointTest(SnubaTestCase, APITestCase):
             response = self.client.get(self.url, format="json", data={"query": "\n\n\n\n"})
         assert response.status_code == 400, response.content
         assert response.data == {
-            "detail": "Parse error: 'search' (column 1). This is commonly caused by unmatched-parentheses. Enclose any text in double quotes."
+            "detail": "Parse error at '\n\n\n\n' (column 1). This is commonly caused by unmatched parentheses. Enclose any text in double quotes."
         }
 
     def test_environment(self):
diff --git a/tests/snuba/api/endpoints/test_organization_events_v2.py b/tests/snuba/api/endpoints/test_organization_events_v2.py
index ea680a5c4a..84c43968db 100644
--- a/tests/snuba/api/endpoints/test_organization_events_v2.py
+++ b/tests/snuba/api/endpoints/test_organization_events_v2.py
@@ -76,7 +76,7 @@ class OrganizationEventsV2EndpointTest(APITestCase, SnubaTestCase):
         assert response.status_code == 400, response.content
         assert (
             response.data["detail"]
-            == "Parse error: 'search' (column 4). This is commonly caused by unmatched-parentheses. Enclose any text in double quotes."
+            == "Parse error at 'hi \n ther' (column 4). This is commonly caused by unmatched parentheses. Enclose any text in double quotes."
         )
 
     @patch("sentry.snuba.discover.raw_query")
