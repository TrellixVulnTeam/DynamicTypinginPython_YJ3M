commit 699764314e2f2078b8e863849abd694fdbba14c8
Author: Evan Purkhiser <evanpurkhiser@gmail.com>
Date:   Mon Oct 23 17:26:53 2017 -0700

    ref(testutils): Provider better interface for helpers.Feature

diff --git a/src/sentry/testutils/cases.py b/src/sentry/testutils/cases.py
index 4b62871c67..4bf4c12296 100644
--- a/src/sentry/testutils/cases.py
+++ b/src/sentry/testutils/cases.py
@@ -79,12 +79,12 @@ class BaseTestCase(Fixtures, Exam):
     def tasks(self):
         return TaskRunner()
 
-    def feature(self, name, active=True):
+    def feature(self, names):
         """
-        >>> with self.feature('feature:name')
+        >>> with self.feature({'feature:name': True})
         >>>     # ...
         """
-        return Feature(name, active)
+        return Feature(names)
 
     def auth_provider(self, name, cls):
         """
diff --git a/src/sentry/testutils/helpers/features.py b/src/sentry/testutils/helpers/features.py
index d80d300b72..53a84cd069 100644
--- a/src/sentry/testutils/helpers/features.py
+++ b/src/sentry/testutils/helpers/features.py
@@ -2,12 +2,40 @@ from __future__ import absolute_import
 
 __all__ = ['Feature']
 
+import six
+import collections
 from contextlib import contextmanager
 from mock import patch
 
 
 @contextmanager
-def Feature(name, active=True):
+def Feature(names):
+    """
+    Control whether a feature is enabled.
+
+    A single feature may be conviniently enabled with
+
+    >>> with Feature('feature-1'):
+    >>>   # Executes with feature-1 enabled
+
+    More advanced enabling / disabling can be done using a dict
+
+    >>> with Feature({'feature-1': True, 'feature-2': False}):
+    >>>   # Executes with feature-1 enabled and feature-2 disabled
+
+    The following two invocations are equivalent:
+
+    >>> with Feature(['feature-1', 'feature-2']):
+    >>>   # execute with both features enabled
+    >>> with Feature({'feature-1': True, 'feature-2': True}):
+    >>>   # execute with both features enabled
+    """
+    if isinstance(names, six.string_types):
+        names = {names: True}
+
+    elif not isinstance(names, collections.Mapping):
+        names = {k: True for k in names}
+
     with patch('sentry.features.has') as features_has:
-        features_has.side_effect = lambda x, *a, **k: active and x == name
+        features_has.side_effect = lambda x, *a, **k: names.get(x, False)
         yield
diff --git a/tests/sentry/api/endpoints/test_group_details.py b/tests/sentry/api/endpoints/test_group_details.py
index 457c5ce782..b2e0032cd2 100644
--- a/tests/sentry/api/endpoints/test_group_details.py
+++ b/tests/sentry/api/endpoints/test_group_details.py
@@ -325,7 +325,7 @@ class GroupUpdateTest(APITestCase):
         url = '/api/0/issues/{}/'.format(group.id)
 
         with self.tasks():
-            with self.feature('projects:custom-filters', True):
+            with self.feature('projects:custom-filters'):
                 resp = self.client.put(
                     url, data={
                         'discard': True,
diff --git a/tests/sentry/api/endpoints/test_organization_integration_details.py b/tests/sentry/api/endpoints/test_organization_integration_details.py
index d68c684a70..00eb303af4 100644
--- a/tests/sentry/api/endpoints/test_organization_integration_details.py
+++ b/tests/sentry/api/endpoints/test_organization_integration_details.py
@@ -17,7 +17,7 @@ class OrganizationIntegrationDetailsTest(APITestCase):
         integration.add_organization(org.id)
         path = '/api/0/organizations/{}/integrations/{}/'.format(org.slug, integration.id)
 
-        with self.feature('organizations:integrations-v3', True):
+        with self.feature('organizations:integrations-v3'):
             response = self.client.get(path, format='json')
 
         assert response.status_code == 200, response.content
@@ -35,7 +35,7 @@ class OrganizationIntegrationDeleteTest(APITestCase):
         integration.add_organization(org.id)
         path = '/api/0/organizations/{}/integrations/{}/'.format(org.slug, integration.id)
 
-        with self.feature('organizations:integrations-v3', True):
+        with self.feature('organizations:integrations-v3'):
             response = self.client.delete(path, format='json')
 
         assert response.status_code == 204, response.content
diff --git a/tests/sentry/api/endpoints/test_organization_integrations.py b/tests/sentry/api/endpoints/test_organization_integrations.py
index a1f213af04..087530ee7b 100644
--- a/tests/sentry/api/endpoints/test_organization_integrations.py
+++ b/tests/sentry/api/endpoints/test_organization_integrations.py
@@ -17,7 +17,7 @@ class OrganizationIntegrationsListTest(APITestCase):
         integration.add_organization(org.id)
         path = '/api/0/organizations/{}/integrations/'.format(org.slug)
 
-        with self.feature('organizations:integrations-v3', True):
+        with self.feature('organizations:integrations-v3'):
             response = self.client.get(path, format='json')
 
         assert response.status_code == 200, response.content
diff --git a/tests/sentry/api/endpoints/test_project_details.py b/tests/sentry/api/endpoints/test_project_details.py
index c1a45b3829..f048ef54af 100644
--- a/tests/sentry/api/endpoints/test_project_details.py
+++ b/tests/sentry/api/endpoints/test_project_details.py
@@ -212,7 +212,7 @@ class ProjectUpdateTest(APITestCase):
             'filters:releases': '1.*\n2.1.*',
             'filters:error_messages': 'TypeError*\n*: integer division by modulo or zero',
         }
-        with self.feature('projects:custom-inbound-filters', True):
+        with self.feature('projects:custom-inbound-filters'):
             resp = self.client.put(url, data={'options': options})
         assert resp.status_code == 200, resp.content
         project = Project.objects.get(id=project.id)
diff --git a/tests/sentry/api/endpoints/test_project_group_index.py b/tests/sentry/api/endpoints/test_project_group_index.py
index 24bc8ff62a..a16f7070d4 100644
--- a/tests/sentry/api/endpoints/test_project_group_index.py
+++ b/tests/sentry/api/endpoints/test_project_group_index.py
@@ -1281,7 +1281,7 @@ class GroupUpdateTest(APITestCase):
             group1=group1,
         )
         with self.tasks():
-            with self.feature('projects:custom-filters', True):
+            with self.feature('projects:custom-filters'):
                 response = self.client.put(
                     url, data={
                         'discard': True,
diff --git a/tests/sentry/templatetags/test_sentry_features.py b/tests/sentry/templatetags/test_sentry_features.py
index c119bfd1d8..4bb4816b12 100644
--- a/tests/sentry/templatetags/test_sentry_features.py
+++ b/tests/sentry/templatetags/test_sentry_features.py
@@ -27,7 +27,7 @@ class FeaturesTest(TestCase):
         assert '<span>register</span>' in result
 
     def test_disabled(self):
-        with self.feature('auth:register', False):
+        with self.feature({'auth:register': False}):
             result = self.TEMPLATE.render(Context({
                 'request': Mock(),
             }))
diff --git a/tests/sentry/test_event_manager.py b/tests/sentry/test_event_manager.py
index 7d9e093ca2..cf26ffd33a 100644
--- a/tests/sentry/test_event_manager.py
+++ b/tests/sentry/test_event_manager.py
@@ -84,7 +84,7 @@ class EventManagerTest(TransactionTestCase):
         assert event.id
 
         manager = EventManager(self.make_event())
-        with self.feature('projects:sample-events', False):
+        with self.feature({'projects:sample-events': False}):
             event = manager.save(1)
         assert not event.id
 
diff --git a/tests/sentry/web/frontend/test_auth_login.py b/tests/sentry/web/frontend/test_auth_login.py
index e38b778189..b6c831b982 100644
--- a/tests/sentry/web/frontend/test_auth_login.py
+++ b/tests/sentry/web/frontend/test_auth_login.py
@@ -61,7 +61,7 @@ class AuthLoginTest(TestCase):
 
     def test_registration_disabled(self):
         options.set('auth.allow-registration', True)
-        with self.feature('auth:register', False):
+        with self.feature({'auth:register': False}):
             resp = self.client.get(self.path)
             assert resp.context['register_form'] is None
 
diff --git a/tests/sentry/web/frontend/test_home.py b/tests/sentry/web/frontend/test_home.py
index df8f5a9f6d..2114e52152 100644
--- a/tests/sentry/web/frontend/test_home.py
+++ b/tests/sentry/web/frontend/test_home.py
@@ -29,7 +29,7 @@ class HomeTest(TestCase):
     def test_shows_no_access(self):
         self.login_as(self.user)
 
-        with self.feature('organizations:create', False):
+        with self.feature({'organizations:create': False}):
             resp = self.client.get(self.path)
 
         assert resp.status_code == 403
