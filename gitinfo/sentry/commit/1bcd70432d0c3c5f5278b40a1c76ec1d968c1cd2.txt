commit 1bcd70432d0c3c5f5278b40a1c76ec1d968c1cd2
Author: David Cramer <dcramer@gmail.com>
Date:   Fri Dec 21 13:06:58 2012 -0800

    Gracefully handle origin value of null

diff --git a/src/sentry/utils/http.py b/src/sentry/utils/http.py
index afc4e09c62..b02b5358d6 100644
--- a/src/sentry/utils/http.py
+++ b/src/sentry/utils/http.py
@@ -88,6 +88,11 @@ def is_valid_origin(origin, project=None):
     if origin in allowed:
         return True
 
+    # XXX: In some cases origin might be localhost (or something similar) which causes a string value
+    # of 'null' to be sent as the origin
+    if origin == 'null':
+        return False
+
     parsed = urlparse(origin)
 
     for valid in allowed:
diff --git a/tests/sentry/utils/http/tests.py b/tests/sentry/utils/http/tests.py
index 0ca4906f35..59cef70276 100644
--- a/tests/sentry/utils/http/tests.py
+++ b/tests/sentry/utils/http/tests.py
@@ -123,3 +123,11 @@ class IsValidOriginTestCase(TestCase):
     def test_full_uri_match_requires_port(self):
         result = self.isValidOrigin('http://example.com:80', ['http://example.com'])
         self.assertEquals(result, False)
+
+    def test_null_valid_with_global(self):
+        result = self.isValidOrigin('null', ['*'])
+        self.assertEquals(result, True)
+
+    def test_null_invalid_graceful_with_domains(self):
+        result = self.isValidOrigin('null', ['http://example.com'])
+        self.assertEquals(result, False)
