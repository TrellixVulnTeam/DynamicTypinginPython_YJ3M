commit 2b3a2ad83fdd479250ccbcf88fbbcbb569daa911
Author: Lyn Nagara <lyn.nagara@gmail.com>
Date:   Fri May 18 13:27:00 2018 -0400

    feat(api): Include latest deploys in project summary serializer (#8369)

diff --git a/src/sentry/api/serializers/models/project.py b/src/sentry/api/serializers/models/project.py
index 296701e0a3..a4c416a739 100644
--- a/src/sentry/api/serializers/models/project.py
+++ b/src/sentry/api/serializers/models/project.py
@@ -18,7 +18,7 @@ from sentry.constants import StatsPeriod
 from sentry.digests import backend as digests
 from sentry.models import (
     Project, ProjectAvatar, ProjectBookmark, ProjectOption, ProjectPlatform,
-    ProjectStatus, ProjectTeam, Release, UserOption, DEFAULT_SUBJECT_TEMPLATE
+    ProjectStatus, ProjectTeam, Release, ReleaseProjectEnvironment, Deploy, UserOption, DEFAULT_SUBJECT_TEMPLATE
 )
 from sentry.utils.data_filters import FilterTypes
 
@@ -256,6 +256,36 @@ class ProjectWithTeamSerializer(ProjectSerializer):
 
 
 class ProjectSummarySerializer(ProjectWithTeamSerializer):
+    def get_attrs(self, item_list, user):
+        attrs = super(ProjectSummarySerializer,
+                      self).get_attrs(item_list, user)
+
+        release_project_envs = list(ReleaseProjectEnvironment.objects.filter(
+            project__in=item_list,
+            last_deploy_id__isnull=False
+        ).values('release__version', 'environment__name', 'last_deploy_id', 'project__id'))
+
+        deploys = dict(
+            Deploy.objects.filter(
+                id__in=[
+                    rpe['last_deploy_id'] for rpe in release_project_envs]).values_list(
+                'id',
+                'date_finished'))
+
+        deploys_by_project = defaultdict(list)
+
+        for rpe in release_project_envs:
+            deploys_by_project[rpe['project__id']].append({
+                'version': rpe['release__version'],
+                'environment': rpe['environment__name'],
+                'dateFinished': deploys[rpe['last_deploy_id']],
+            })
+
+        for item in item_list:
+            attrs[item]['deploys'] = deploys_by_project.get(item.id)
+
+        return attrs
+
     def serialize(self, obj, attrs, user):
         context = {
             'team': attrs['teams'][0] if attrs['teams'] else None,
@@ -270,6 +300,7 @@ class ProjectSummarySerializer(ProjectWithTeamSerializer):
             'firstEvent': obj.first_event,
             'platform': obj.platform,
             'platforms': attrs['platforms'],
+            'latestDeploys': attrs['deploys']
         }
         if 'stats' in attrs:
             context['stats'] = attrs['stats']
diff --git a/tests/sentry/api/endpoints/test_organization_details.py b/tests/sentry/api/endpoints/test_organization_details.py
index a38d298c27..2e67b2e6dd 100644
--- a/tests/sentry/api/endpoints/test_organization_details.py
+++ b/tests/sentry/api/endpoints/test_organization_details.py
@@ -45,7 +45,7 @@ class OrganizationDetailsTest(APITestCase):
         )
         # TODO(dcramer): we need to pare this down -- lots of duplicate queries
         # for membership data
-        with self.assertNumQueries(26, using='default'):
+        with self.assertNumQueries(27, using='default'):
             from django.db import connections
             response = self.client.get(url, format='json')
             print(connections['default'].queries)
