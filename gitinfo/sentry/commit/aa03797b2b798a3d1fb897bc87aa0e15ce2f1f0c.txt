commit aa03797b2b798a3d1fb897bc87aa0e15ce2f1f0c
Author: David Cramer <dcramer@gmail.com>
Date:   Thu Jan 29 17:08:42 2015 -0800

    Support removing tag keys via project settings

diff --git a/src/sentry/templates/sentry/projects/manage_tags.html b/src/sentry/templates/sentry/projects/manage_tags.html
index eb82833d3b..055bbd4184 100644
--- a/src/sentry/templates/sentry/projects/manage_tags.html
+++ b/src/sentry/templates/sentry/projects/manage_tags.html
@@ -2,42 +2,82 @@
 
 {% load crispy_forms_tags %}
 {% load i18n %}
+{% load sentry_helpers %}
 
 {% block title %}{% trans "Manage Tags" %} | {{ block.super }}{% endblock %}
 
 {% block inner %}
-    <div class="page-header">
-        <h2>{% trans "Manage Tags" %}</h2>
-    </div>
-    {% if form %}
-        <p>{% blocktrans %}Each event in Sentry may be annotated with various tags (key and value pairs). For more information on how send additional tags, see your client's documentation.{% endblocktrans %}</p>
-        <form action="" method="post">
-            {% csrf_token %}
-            {{ form|as_crispy_errors }}
+  <div class="page-header">
+    <h2>{% trans "Manage Tags" %}</h2>
+  </div>
+  {% if tag_list %}
+    <p>{% blocktrans %}Each event in Sentry may be annotated with various tags (key and value pairs). For more information on how send additional tags, see your client's documentation.{% endblocktrans %}</p>
+    <form action="" method="post">
+      {% csrf_token %}
+      {{ form|as_crispy_errors }}
 
-            <div class="row">
-                <div class="span6">
-                    <fieldset>
-                        <legend>{% trans "Stream Filters" %}</legend>
-                        <p><small>{% blocktrans %}Filters allow you to do limited searching on the stream view based on a tag's value. They are selectable via the sidebar on the stream.{% endblocktrans %}</small></p>
-                        {{ form.filters|as_crispy_field }}
-                    </fieldset>
-                </div>
-                <div class="span6">
-                    <fieldset>
-                        <legend>{% trans "Stream Annotations" %}</legend>
-                        <p><small>{% blocktrans %}Annotations display the total number of unique values that have been seen for an event. They are rendered on the stream with each individual event.{% endblocktrans %}</small></p>
-                        {{ form.annotations|as_crispy_field }}
-                    </fieldset>
-                </div>
-            </div>
+      <table class="table table-striped tag-list">
+        <thead>
+          <tr>
+            <th>&nbsp;</th>
+            <th style="width:80px;text-align:center">
+              Show in<br />
+              <abbr class="tip" title="{% blocktrans %}Filters allow you to do limited searching on the stream view based on a tag's value. They are selectable via the sidebar on the stream.{% endblocktrans %}">
+                Filters
+              </abbr>
+            </th>
+            <th style="width:80px;text-align:center">
+              Show in<br />
+              <abbr class="tip" title="{% blocktrans %}Annotations display the total number of unique values that have been seen for an event. They are rendered on the stream with each individual event.{% endblocktrans %}">
+                Annotations
+              </abbr>
+            <th style="width:20px">&nbsp;</th>
+          </tr>
+        </thead>
+        <tbody>
+        {% for tag in tag_list %}
+          <tr data-tagkey="{{ tag.key }}">
+            <td>
+              <h4>{{ tag.get_label }}</h4>
+              <small>{{ tag.values_seen|small_count }} unique value(s)</small>
+            </td>
+            <td style="text-align:center">
+              <input type="checkbox" name="filters" value="{{ tag.key }}"
+                     {% if tag.key in enabled_filters %} checked="checked"{% endif %} />
+            </td>
+            <td style="text-align:center">
+                <input type="checkbox" name="annotations" value="{{ tag.key }}"
+                     {% if tag.key in enabled_annotations %} checked="checked"{% endif %} />
+            </td>
+            <td>
+              <a href="javascript:void(0)"
+                 onclick="removeTagKey({{ tag.key|to_json }})"><span class="icon icon-remove"></span></a>
+            </td>
+          </tr>
+        {% endfor %}
+      </table>
 
-            <fieldset class="form-actions">
-                <button type="submit" class="btn btn-primary">{% trans "Save Changes" %}</button>
-            </fieldset>
-        </form>
-    {% else %}
-        <p>{% trans "We have not yet recorded any tags for this project." %}</p>
-    {% endif %}
+      <fieldset class="form-actions">
+        <button type="submit" name="op" value="save" class="btn btn-primary">{% trans "Save Changes" %}</button>
+      </fieldset>
+    </form>
+  {% else %}
+    <p>{% trans "We have not yet recorded any tags for this project." %}</p>
+  {% endif %}
+
+  <script>
+  var removeTagKey = function(keyName) {
+    $.ajax({
+      url: '/api/0/projects/{{ project.id }}/tags/' + keyName + '/',
+      method: 'DELETE',
+    });
+    $('.tag-list tr').each(function(_, el){
+      var $el = $(el);
+      if ($el.attr('data-tagkey') == keyName) {
+        $el.remove();
+      }
+    });
+  };
+  </script>
 {% endblock %}
 
diff --git a/src/sentry/web/forms/projects.py b/src/sentry/web/forms/projects.py
index a999b64e83..a2057718c0 100644
--- a/src/sentry/web/forms/projects.py
+++ b/src/sentry/web/forms/projects.py
@@ -11,49 +11,10 @@ from django import forms
 from django.conf import settings
 from django.utils.translation import ugettext_lazy as _
 
-from sentry.constants import TAG_LABELS
 from sentry.models import ProjectOption
 from sentry.web.forms.fields import RangeField
 
 
-class ProjectTagsForm(forms.Form):
-    filters = forms.MultipleChoiceField(
-        choices=(), widget=forms.CheckboxSelectMultiple(), required=False)
-    annotations = forms.MultipleChoiceField(
-        choices=(), widget=forms.CheckboxSelectMultiple(), required=False)
-
-    def __init__(self, project, tag_list, *args, **kwargs):
-        self.project = project
-        super(ProjectTagsForm, self).__init__(*args, **kwargs)
-
-        tag_choices = []
-        for tag in tag_list:
-            tag_choices.append(
-                (tag, TAG_LABELS.get(tag) or tag.replace(u'_', u' ').title())
-            )
-
-        for field in ('filters', 'annotations'):
-            self.fields[field].choices = tag_choices
-            self.fields[field].widget.choices = self.fields[field].choices
-
-        enabled_filters = ProjectOption.objects.get_value(
-            self.project, 'tags', tag_list)
-        self.fields['filters'].initial = enabled_filters
-
-        enable_annotations = ProjectOption.objects.get_value(
-            self.project, 'annotations', ['sentry:user'])
-        self.fields['annotations'].initial = enable_annotations
-
-    def save(self):
-        filters = self.cleaned_data.get('filters')
-        ProjectOption.objects.set_value(
-            self.project, 'tags', filters)
-
-        annotations = self.cleaned_data.get('annotations')
-        ProjectOption.objects.set_value(
-            self.project, 'annotations', annotations)
-
-
 class AlertSettingsForm(forms.Form):
     pct_threshold = RangeField(
         label=_('Threshold'), required=False, min_value=0, max_value=1000, step_value=100,
diff --git a/src/sentry/web/frontend/projects/tags.py b/src/sentry/web/frontend/projects/tags.py
index 8e9000c2bf..27348bbd3b 100644
--- a/src/sentry/web/frontend/projects/tags.py
+++ b/src/sentry/web/frontend/projects/tags.py
@@ -13,23 +13,31 @@ from django.http import HttpResponseRedirect
 from django.utils.translation import ugettext_lazy as _
 
 from sentry.constants import MEMBER_ADMIN
-from sentry.models import TagKey
+from sentry.models import ProjectOption, TagKey, TagKeyStatus
 from sentry.web.decorators import has_access
-from sentry.web.forms.projects import ProjectTagsForm
 from sentry.web.helpers import render_to_response
 
 
 @has_access(MEMBER_ADMIN)
 def manage_project_tags(request, organization, project):
-    tag_list = TagKey.objects.all_keys(project)
+    tag_list = TagKey.objects.filter(
+        project=project,
+        status=TagKeyStatus.VISIBLE,
+    )
 
-    if tag_list:
-        form = ProjectTagsForm(project, tag_list, request.POST or None)
-    else:
-        form = None
+    enabled_filters = ProjectOption.objects.get_value(
+        project, 'tags', [t.key for t in tag_list])
+    enabled_annotations = ProjectOption.objects.get_value(
+        project, 'annotations', ['sentry:user'])
 
-    if form and form.is_valid():
-        form.save()
+    if request.POST:
+        filters = request.POST.getlist('filters')
+        ProjectOption.objects.set_value(
+            project, 'tags', filters)
+
+        annotations = request.POST.getlist('annotations')
+        ProjectOption.objects.set_value(
+            project, 'annotations', annotations)
 
         messages.add_message(
             request, messages.SUCCESS,
@@ -40,9 +48,10 @@ def manage_project_tags(request, organization, project):
     context = {
         'organization': organization,
         'team': project.team,
+        'project': project,
         'tag_list': tag_list,
+        'enabled_filters': enabled_filters,
+        'enabled_annotations': enabled_annotations,
         'page': 'tags',
-        'project': project,
-        'form': form,
     }
     return render_to_response('sentry/projects/manage_tags.html', context, request)
