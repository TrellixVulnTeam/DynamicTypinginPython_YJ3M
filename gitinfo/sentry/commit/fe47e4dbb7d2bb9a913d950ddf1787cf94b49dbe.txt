commit fe47e4dbb7d2bb9a913d950ddf1787cf94b49dbe
Author: David Cramer <dcramer@gmail.com>
Date:   Fri May 13 17:34:54 2011 -0700

    Refactor several Django settings so that they are able to be configured for Sentry specifically

diff --git a/sentry/conf/defaults.py b/sentry/conf/defaults.py
index 67cf946667..262500733f 100644
--- a/sentry/conf/defaults.py
+++ b/sentry/conf/defaults.py
@@ -73,6 +73,12 @@ PUBLIC = False
 MAX_LENGTH_LIST = 50
 MAX_LENGTH_STRING = 200
 
+EMAIL_SUBJECT_PREFIX = ''
+
+INTERNAL_IPS = set()
+
+SERVER_EMAIL = 'root@localhost'
+
 ## The following settings refer to the built-in webserver
 
 WEB_HOST = 'localhost'
diff --git a/sentry/conf/settings.py b/sentry/conf/settings.py
index 599531eebb..c178518ed4 100644
--- a/sentry/conf/settings.py
+++ b/sentry/conf/settings.py
@@ -9,6 +9,9 @@ import warnings
 # Some sane overrides to better mix with Django
 DEBUG = getattr(settings, 'DEBUG', False) and not getattr(settings, 'SENTRY_TESTING', False)
 KEY = getattr(settings, 'SENTRY_KEY', md5_constructor(settings.SECRET_KEY).hexdigest())
+EMAIL_SUBJECT_PREFIX = getattr(settings, 'EMAIL_SUBJECT_PREFIX', EMAIL_SUBJECT_PREFIX)
+INTERNAL_IPS = getattr(settings, 'INTERNAL_IPS', INTERNAL_IPS)
+SERVER_EMAIL = getattr(settings, 'SERVER_EMAIL', SERVER_EMAIL)
 
 for k in dir(settings):
     if k.startswith('SENTRY_'):
diff --git a/sentry/models.py b/sentry/models.py
index d69a78a73b..5fd6e5e1e1 100644
--- a/sentry/models.py
+++ b/sentry/models.py
@@ -10,7 +10,6 @@ import math
 
 from datetime import datetime
 
-from django.conf import settings as django_settings
 from django.db import models
 from django.db.models import Count
 from django.utils.encoding import smart_unicode
@@ -139,17 +138,20 @@ class GroupedMessage(MessageBase):
         return int(math.log(self.times_seen) * 600 + int(self.last_seen.strftime('%s')))
 
     def mail_admins(self, request=None, fail_silently=True):
-        if not settings.ADMINS:
-            return
-        
         from django.core.mail import send_mail
         from django.template.loader import render_to_string
 
+        if not settings.ADMINS:
+            return
+        
         message = self.message_set.order_by('-id')[0]
 
         obj_request = message.request
 
-        subject = '%sError (%s IP): %s' % (django_settings.EMAIL_SUBJECT_PREFIX, (obj_request.META.get('REMOTE_ADDR') in django_settings.INTERNAL_IPS and 'internal' or 'EXTERNAL'), obj_request.path)
+        ip_repr = (obj_request.META.get('REMOTE_ADDR') in settings.INTERNAL_IPS and 'internal' or 'EXTERNAL')
+
+        subject = '%sError (%s IP): %s' % (settings.EMAIL_SUBJECT_PREFIX, ip_repr, obj_request.path)
+
         if message.site:
             subject  = '[%s] %s' % (message.site, subject)
         try:
@@ -171,7 +173,7 @@ class GroupedMessage(MessageBase):
         })
         
         send_mail(subject, body,
-                  django_settings.SERVER_EMAIL, settings.ADMINS,
+                  settings.SERVER_EMAIL, settings.ADMINS,
                   fail_silently=fail_silently)
     
     @property
